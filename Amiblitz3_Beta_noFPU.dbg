00000008 <AmiBlitz3_noFPU_r470.ab3@0> 
00000014 <AmiBlitz3_noFPU_r470.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3_noFPU_r470.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3_noFPU_r470.ab3@65> !basic
000000AC <AmiBlitz3_noFPU_r470.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3_noFPU_r470.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3_noFPU_r470.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3_noFPU_r470.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3_noFPU_r470.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3_noFPU_r470.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3_noFPU_r470.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3_noFPU_r470.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3_noFPU_r470.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3_noFPU_r470.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3_noFPU_r470.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502A <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503C <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00005064 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00005084 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
0000509C <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AE <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
000050BC <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FE <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00005108 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511A <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005154 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005164 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517A <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CC <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D8 <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E6 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F4 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00005202 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00005210 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005246 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005254 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005264 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000526C <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005270 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000528A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A4 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
000052BE <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E8 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F4 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00005308 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000533A <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005352 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000535E <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000536C <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005396 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C0 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000053CA <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000053D0 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053FE <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00005416 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005434 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005448 <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005460 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005488 <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000054AE <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000054BC <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CA <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000054DE <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005532 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000555C <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A0 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C0 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000055D2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005604 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000565C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A2 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A8 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000056B0 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EA <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000056FC <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005736 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005746 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574C <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575C <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005762 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005768 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005780 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000057BE <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DC <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000580E <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005822 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005836 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000584E <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005876 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005880 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000588E <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A6 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000058AC <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000058B4 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FA <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005904 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005912 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000591C <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005948 <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595C <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005962 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005970 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000059A6 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000059F4 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A1C <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A36 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A52 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A6E <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A98 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AB6 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ADA <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B08 <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B22 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4A <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B68 <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B84 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B92 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA6 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BC8 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BEA <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BF8 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C18 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C48 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C4E <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C82 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC4 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEE <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF4 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D00 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D06 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D34 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D64 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9A <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAE <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DC6 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DEE <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E1E <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E3A <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E5C <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDA <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F1E <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F44 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F4A <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F68 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F86 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FA4 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FAA <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD0 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FFE <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00006026 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
0000604A <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
000060A0 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006148 <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006158 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AA <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D2 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F8 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000621A <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006242 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
000062A0 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C4 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000062F8 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00006314 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000631E <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006332 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006352 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636E <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637C <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638A <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006390 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A8 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B8 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000063E6 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006442 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000064BA <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006516 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000651C <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006526 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000655A <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006560 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006580 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658A <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000065AC <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000065B6 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D0 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EA <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F2 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F8 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006602 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000660A <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006632 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006638 <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000664C <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006688 <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000066AE <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BC <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F8 <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000670C <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675E <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006772 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000677C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000067A0 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D8 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DE <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EA <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000067FE <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00006808 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006830 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006858 <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000686A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006896 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000068CA <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F6 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006952 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006958 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006964 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006992 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006994 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000699A <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
000069A4 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000069CE <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000069D8 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000069DE <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A08 <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A30 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A48 <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A58 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A62 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A96 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB0 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B04 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B08 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B22 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B60 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B94 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAE <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C02 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1C <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C2C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C36 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C44 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C66 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB6 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CEA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CFE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D20 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D42 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D60 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D94 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA8 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DE8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E12 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E28 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E38 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E54 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E70 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E8C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA8 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EE0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EFC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F18 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F34 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F50 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F6C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F88 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA4 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FC0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FDC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00007014 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00007030 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000704C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00007068 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00007084 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000070A0 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
000070BC <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007110 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000712C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007148 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007164 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007180 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000719C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B8 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000071F0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000720C <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007228 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007244 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007260 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000727C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007298 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B4 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000072D0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000072EC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007308 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007324 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007340 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000735C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007378 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007394 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000073B0 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000073CC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007404 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007420 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000743C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007458 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007474 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007490 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000074AC <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007500 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000751C <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007538 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007554 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007570 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000758C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A8 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000075E0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000075FC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007618 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007634 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007650 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000766C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007688 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A4 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000076C0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000076DC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007714 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007730 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000774C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007768 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007784 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000077A0 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000077BC <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007810 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000782C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007848 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007864 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007880 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000789C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B8 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000078F0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000790C <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007928 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007944 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007960 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000797C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007998 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B4 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000079D0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000079EC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A08 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A24 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A40 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A5C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A78 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A94 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AB0 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ACC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B04 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B58 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B74 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B90 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BAC <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1C <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C38 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C40 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C4A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C54 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C5A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C88 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CA4 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D02 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D0C <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D20 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D68 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D84 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D92 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E14 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E36 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E60 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E74 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E82 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E8A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0A <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1E <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F2E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F48 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F76 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB2 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB8 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FEE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FF8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00008006 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00008024 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00008032 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00008054 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000805E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00008086 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000809A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AE <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B8 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000080D4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000080E8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000811A <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008128 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008138 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008160 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008182 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008196 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B4 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008210 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008232 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008262 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008290 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00008312 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008334 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A4 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000083B2 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008400 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008426 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000845A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008464 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008480 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008492 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000084C0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000084FC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0000850C <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008512 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00008518 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008530 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008540 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00008600 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008636 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008646 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008654 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008694 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008704 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008712 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000876C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008780 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008790 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000087AE <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000087BC <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008804 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008812 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008840 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008854 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000885A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008868 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008896 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A4 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
000088AA <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000088FE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008920 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008948 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008962 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008976 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008986 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B4 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A24 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A60 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A70 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A84 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A94 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ABE <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B00 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B10 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B72 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B96 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAA <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBA <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BD8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0A <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C34 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C6C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C74 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAA <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D02 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D1E <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D46 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D64 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D82 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DB0 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E12 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E46 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E50 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E92 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EEA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F02 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F60 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F9E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FAE <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FC6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FCC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00009006 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00009010 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00009016 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00009020 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <AmiBlitz3_noFPU_r470.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009032 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009056 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000905E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000908C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090BA <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000912A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009138 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009188 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009188 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009188 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009188 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091AC <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
000091D4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091F8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009226 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
00009444 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
00009472 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
0000949E <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
000094DA <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
00009506 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009532 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000955E <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000958A <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
000095B6 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095E2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
0000960E <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000963A <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
000096C4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
0000974E <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
000097EC <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009836 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009876 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
0000987C <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
000098C6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
00009906 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009930 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009936 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009960 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000998A <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
000099B4 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
000099BE <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099DC <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099FE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A2C <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A5A <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A88 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009ACE <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
00009B14 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B5A <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B92 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009C90 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009CAE <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009CB8 <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009CDE <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CF0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009D1E <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D46 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D58 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009DAE <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DE4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DF4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009DFA <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009E0C <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E16 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E50 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E56 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009EAE <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009ECC <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
00009ED2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
00009EE2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
00009EF2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009F02 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F12 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F22 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
00009F2C <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
00009F40 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F56 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
00009F7E <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
00009F88 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F9A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009FD4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FDE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A008 <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A020 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A072 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
0000A0A0 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A132 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A178 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A20A <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A224 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A224 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A23A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A250 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A266 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A27C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A288 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A294 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2A0 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2AC <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2D4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2FC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A324 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A348 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A36C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A386 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A396 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A39C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A39E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3A8 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3AC <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3B0 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3B4 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3CA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3E4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A402 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A408 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A422 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A43E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A464 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A484 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A48E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4BA <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4DC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4F6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4FC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A536 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A554 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A55A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A578 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A57E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5A0 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5C0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5F8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A614 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A61A <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A620 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A626 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A62C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A648 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A694 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A69A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6D4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6E0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6FC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A702 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A73C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A746 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A74C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A76A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A798 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A79E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7B4 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7BC <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A818 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A826 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A82C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A85E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A86E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A888 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A89A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8F8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A932 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A96C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A98A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9A8 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9BE <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9DA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9F4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA72 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA84 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA9A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAC4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AADE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAE2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB10 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB2A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB3C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB5C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB72 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABAA <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABD4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000ABFE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC16 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC2C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC74 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC94 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC9C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACDA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACE6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACF0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD02 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD08 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD16 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD3E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD52 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD7A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD8E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADB6 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADCA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADF2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADF4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE18 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE50 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEDA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF02 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF32 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF6A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFC2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B01A <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B09A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0CE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B102 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B108 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B116 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B14A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B172 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B22A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2AA <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2DE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B2FE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B304 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B30A <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3DA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3EE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4A6 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B526 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B616 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B620 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B654 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B674 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B67A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B680 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B750 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B764 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B798 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7C0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B878 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8F8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B92C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B94C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B952 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B958 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA28 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA3C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAF4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB74 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBA8 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBC8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBCE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBD4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCA4 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCAA <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCE4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCE6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCEC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD84 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD96 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDAC <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE16 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE80 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE9A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEB6 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BED4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEEE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF14 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF36 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF3C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF62 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF7E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF90 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFEE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C026 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C02C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C074 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C08E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C09C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0A2 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0A8 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0BA <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1A6 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1AC <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1F2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C1FE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C264 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2AA <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2F2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C35A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C360 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C39A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3A0 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C402 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C420 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C43A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C440 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C466 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C482 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4E0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4E4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C506 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C50C <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C528 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C548 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C586 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5D4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C60A <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C610 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C616 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C646 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C64C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C652 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C664 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6C2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6FA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C700 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C748 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C762 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C770 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C776 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C77C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C78E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C794 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C79A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7F8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C840 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C850 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C86A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C870 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8B8 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8F6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C900 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C906 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C92C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C932 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C958 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9B8 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9D2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9DC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9F6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA00 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA18 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA48 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA64 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA72 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA78 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CAB2 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CABC <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAC2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAE0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAE6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAF8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB06 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB24 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB5A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB6C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBB6 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCA0 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCBE <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCE4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD00 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD2C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD36 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD64 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD7E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD9A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDA0 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDDA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDE0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDE6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDEC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE8C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE92 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF34 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF3A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF74 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF84 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CF9E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFBC <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFC2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFDC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFFC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0B0 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0B6 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0BC <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0E6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0F2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0F8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D112 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D11A <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D122 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D138 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D150 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D162 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D16E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D174 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D17C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1B4 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1C6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1EA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1FC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D208 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D20E <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D21E <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D23C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D24E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D29A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2A0 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2CA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2E2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D310 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D324 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D33A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D35A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D370 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D37A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D394 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3B6 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3CE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3F0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3F6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D428 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D43C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D454 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D48C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4BC <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4EC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D4FE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D506 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D530 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D53A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D554 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D56E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D58C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5AC <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5F6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D610 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D622 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D658 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D66A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D672 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D69A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6A0 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6C8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6D8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6EC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D702 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D712 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D716 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D72C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D756 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D75E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D75E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7FC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D802 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D808 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D80E <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D848 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D87A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D888 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8B8 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC28 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC36 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC3C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DECE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEE8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF22 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF74 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF82 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFD8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFDE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E058 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0CC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <AmiBlitz3_noFPU_r470.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E10E <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E128 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E132 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E144 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E168 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E176 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E182 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E186 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1A4 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1DE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1E8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1F6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E202 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E210 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E21C <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E228 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E23A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E24A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E25A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E274 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E27E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E288 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E298 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2A2 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2B4 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2CA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2DA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2DE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2F4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2FA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E304 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E33A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E344 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E348 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E376 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E376 <prefixtree.include.ab3@132> XINCLUDE "translation.include.ab3"
0000E390 <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E39A <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E3C2 <prefixtree.include.ab3@200> XINCLUDE "translation.include.ab3"
0000E3E4 <prefixtree.include.ab3@201> XINCLUDE "translation.include.ab3"
0000E400 <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E410 <prefixtree.include.ab3@203> XINCLUDE "translation.include.ab3"
0000E414 <prefixtree.include.ab3@206> XINCLUDE "translation.include.ab3"
0000E42E <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E44E <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E458 <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E472 <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E480 <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E48E <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E49C <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E4AA <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E4B6 <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E4C4 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E4D2 <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E4E0 <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E4EE <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E508 <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E516 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@274> XINCLUDE "translation.include.ab3"
0000E536 <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E546 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@277> XINCLUDE "translation.include.ab3"
0000E55E <prefixtree.include.ab3@279> XINCLUDE "translation.include.ab3"
0000E564 <prefixtree.include.ab3@280> XINCLUDE "translation.include.ab3"
0000E582 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E588 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E592 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E5B2 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E5E0 <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E5FE <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E608 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E61A <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E65C <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E668 <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E674 <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E67A <prefixtree.include.ab3@311> XINCLUDE "translation.include.ab3"
0000E680 <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E686 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E6BE <prefixtree.include.ab3@314> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E6CA <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E6D4 <prefixtree.include.ab3@320> XINCLUDE "translation.include.ab3"
0000E6DA <prefixtree.include.ab3@321> XINCLUDE "translation.include.ab3"
0000E70C <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E726 <prefixtree.include.ab3@342> XINCLUDE "translation.include.ab3"
0000E73E <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E752 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E7A2 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E7C2 <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E7D6 <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E7F0 <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E7F8 <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E800 <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E808 <prefixtree.include.ab3@353> XINCLUDE "translation.include.ab3"
0000E810 <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E824 <prefixtree.include.ab3@356> XINCLUDE "translation.include.ab3"
0000E846 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E872 <prefixtree.include.ab3@359> XINCLUDE "translation.include.ab3"
0000E884 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E88A <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000E8B2 <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000E8D6 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E8FE <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E932 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E942 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E94C <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000E96E <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E994 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E9A2 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E9DC <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000EA02 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000EA1A <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000EA4E <prefixtree.include.ab3@381> XINCLUDE "translation.include.ab3"
0000EA56 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000EA64 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000EA82 <prefixtree.include.ab3@387> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000EA8E <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000EAA8 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000EAAE <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000EAB4 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000EAC8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000EB10 <prefixtree.include.ab3@401> XINCLUDE "translation.include.ab3"
0000EB36 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EB4E <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EB5A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EB66 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000EB72 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EB7E <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000EB8A <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EB94 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EB9C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EBB6 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EBF4 <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000EBFA <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EC60 <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000ECA0 <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000ECF6 <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000ED68 <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000ED74 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000ED82 <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000EDC8 <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000EE12 <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000EE4A <prefixtree.include.ab3@473> XINCLUDE "translation.include.ab3"
0000EE9E <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000EEAA <prefixtree.include.ab3@476> XINCLUDE "translation.include.ab3"
0000EEB8 <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000EEC0 <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000EEFA <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000EF20 <prefixtree.include.ab3@482> XINCLUDE "translation.include.ab3"
0000EF38 <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000EF6E <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000EF84 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EF92 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EFAA <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000EFE2 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000F008 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000F050 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000F056 <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000F070 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000F07C <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000F082 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000F0AE <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000F0C2 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000F0D8 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000F112 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F138 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F150 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F18A <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F1B4 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F1CC <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000F1FC <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F228 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F244 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F252 <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F29E <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F2DA <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F346 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F374 <prefixtree.include.ab3@522> XINCLUDE "translation.include.ab3"
0000F3A2 <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F3EA <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F404 <prefixtree.include.ab3@527> XINCLUDE "translation.include.ab3"
0000F44C <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F46A <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F488 <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F4A2 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F4AE <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F4B4 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F4E0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F4F8 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F4FE <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F512 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F52E <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F53C <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F544 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F570 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F598 <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F5C0 <prefixtree.include.ab3@550> XINCLUDE "translation.include.ab3"
0000F62C <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F63C <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F668 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F6BE <prefixtree.include.ab3@555> XINCLUDE "translation.include.ab3"
0000F6CC <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F6DA <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F6E0 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F734 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F854 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000F8A4 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F8FA <prefixtree.include.ab3@564> XINCLUDE "translation.include.ab3"
0000F966 <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000F96E <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F9A8 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F9CE <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F9E6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000FA20 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000FA4A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000FA62 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000FA86 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000FADA <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000FAE2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000FB4A <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FB76 <prefixtree.include.ab3@583> XINCLUDE "translation.include.ab3"
0000FB92 <prefixtree.include.ab3@586> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FBBC <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FBCA <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FC0E <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FC7A <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FCA8 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FCBC <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FCEE <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FD38 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FD48 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FD7C <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FD9E <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FDAE <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FDB6 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FDFA <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FE66 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FE94 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0000FEB8 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FEFC <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
0000FF68 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FF96 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FFC4 <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0000FFCC <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FFFA <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0001006C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
00010072 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
000100A0 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
00010112 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
00010130 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
00010154 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0001016C <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
00010172 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
00010178 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0001017A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
00010184 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
000101B0 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
000101D2 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
000101DA <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
000101EE <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
00010228 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
0001024E <prefixtree.include.ab3@660> XINCLUDE "translation.include.ab3"
00010266 <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
000102A0 <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
000102CA <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
000102E2 <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
000102FA <prefixtree.include.ab3@666> XINCLUDE "translation.include.ab3"
00010332 <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
0001033A <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
00010374 <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
00010386 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
000103AC <prefixtree.include.ab3@674> XINCLUDE "translation.include.ab3"
000103C2 <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
000103E8 <prefixtree.include.ab3@676> XINCLUDE "translation.include.ab3"
000103FC <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010426 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010430 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010444 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
0001047C <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
0001048E <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
000104AC <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
000104E8 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010504 <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
00010524 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001052E <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
00010534 <prefixtree.include.ab3@711> XINCLUDE "translation.include.ab3"
0001053E <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
0001054A <prefixtree.include.ab3@714> XINCLUDE "translation.include.ab3"
00010550 <prefixtree.include.ab3@716> XINCLUDE "translation.include.ab3"
0001057E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
000105A6 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
000105E6 <prefixtree.include.ab3@737> XINCLUDE "translation.include.ab3"
000105FE <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010644 <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
0001066E <prefixtree.include.ab3@742> XINCLUDE "translation.include.ab3"
0001069C <prefixtree.include.ab3@743> XINCLUDE "translation.include.ab3"
000106B6 <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
000106BE <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
000106D6 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
000106E0 <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
000106F2 <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
0001072A <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
00010738 <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
00010744 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
00010760 <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
00010782 <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
000107A4 <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
000107C6 <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
000107E8 <prefixtree.include.ab3@954> XINCLUDE "translation.include.ab3"
00010804 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
00010822 <prefixtree.include.ab3@956> XINCLUDE "translation.include.ab3"
00010836 <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
0001083C <prefixtree.include.ab3@959> XINCLUDE "translation.include.ab3"
0001083E <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
00010844 <prefixtree.include.ab3@962> XINCLUDE "translation.include.ab3"
0001084E <prefixtree.include.ab3@964> XINCLUDE "translation.include.ab3"
00010854 <prefixtree.include.ab3@965> XINCLUDE "translation.include.ab3"
00010872 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010878 <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
0001089C <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
000108BA <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
000108E8 <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
00010916 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010944 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010972 <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
000109A6 <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
000109B6 <prefixtree.include.ab3@992> XINCLUDE "translation.include.ab3"
000109C0 <prefixtree.include.ab3@994> XINCLUDE "translation.include.ab3"
000109C6 <prefixtree.include.ab3@995> XINCLUDE "translation.include.ab3"
000109C6 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A10 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A30 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A3A <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A4E <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A94 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010ADA <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B20 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B2A <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B46 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B70 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BEE <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C6C <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CEA <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D68 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DE6 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E64 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EE2 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F60 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FDE <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
0001105C <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110E0 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00011110 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
0001116C <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011198 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011262 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011270 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112AE <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011332 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
0001135C <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001137A <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011394 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001139E <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113AA <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113BA <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113CA <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113DA <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113EA <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113EE <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
0001142C <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011484 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114E0 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001156A <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115E8 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
00011602 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011630 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
0001166C <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001173A <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
00011808 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011854 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118D2 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011950 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119AE <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A44 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A7C <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011ADA <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B62 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B6A <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD4 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C40 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C7E <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D06 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D32 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D8E <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E56 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EBA <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EC0 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF4 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FC2 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00012090 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120BA <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120D8 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00012106 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012142 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121B2 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121BA <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
0001220C <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012234 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
0001224C <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
00012300 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
0001230E <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012364 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123C2 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123C8 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
0001244C <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124D0 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012554 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125D2 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012650 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126CE <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
0001274C <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127CA <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012848 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128C6 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128F0 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
0001290E <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
0001293C <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012980 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012986 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
000129A0 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129BC <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129F0 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A14 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A3C <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AA8 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B06 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B64 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BB0 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C0A <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C10 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C16 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C20 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C2A <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C44 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C72 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C78 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CBC <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CD6 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CE6 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CF0 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CFC <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D06 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D2A <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D72 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DBA <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012E02 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E18 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E2C <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E36 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E40 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E5A <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E84 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EC8 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EE2 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F40 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F5A <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F72 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F7C <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F98 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FA6 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FB2 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FFE <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00013050 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
000130A2 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130B6 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130C6 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130CC <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130CE <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D4 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130DE <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130E8 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00013102 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
0001312C <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013142 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
0001314C <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C4 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
00013200 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
00013210 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013230 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013250 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013270 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132A6 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132CE <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
00013306 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001336A <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001338A <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
00013406 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001343E <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B4 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D4 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013550 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013588 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135FE <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001361E <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001369A <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136C6 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136CE <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013714 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013734 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001373E <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013756 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013766 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001379E <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137D0 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137E2 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013864 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001386E <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
000138A0 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138D2 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138FE <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001392A <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
0001394C <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013956 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013970 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013970 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013986 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
000139A2 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A4 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139D2 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139D2 <AmiBlitz3_noFPU_r470.ab3@91> XINCLUDE "translation.include.ab3"
000139D2 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139EC <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139F6 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A18 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A30 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A4A <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A7C <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A86 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A8C <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A9E <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B12 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B18 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B52 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B5C <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B62 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B78 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B82 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B9A <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B9C <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BCA <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE4 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BFA <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C2E <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C32 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C4C <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C62 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C96 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C9A <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB4 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CCA <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CFE <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013D02 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D1C <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D32 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D66 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D6A <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D84 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D9A <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <AmiBlitz3_noFPU_r470.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DE8 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DFE <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E0C <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E1A <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E24 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E36 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E48 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E4E <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E88 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E8C <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013EA2 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EB8 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC4 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ED0 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013ED8 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EE0 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE4 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F0E <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F3A <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F4C <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F64 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F7A <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F80 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FB6 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FEE <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014026 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
0001405E <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014096 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140CE <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00014106 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001413E <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014176 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141AE <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141E6 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001421E <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014256 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014260 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001426A <CLIModeSupport.ab3@76> XINCLUDE "CLIModeSupport.ab3"
00014274 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001429E <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
000142A8 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142E0 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000142E6 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014320 <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
00014326 <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
0001433C <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014346 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001434C <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014362 <CLIModeSupport.ab3@97> XINCLUDE "CLIModeSupport.ab3"
00014368 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143A6 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143AA <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
000143B4 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
000143B6 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@104> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001445E <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
00014462 <CLIModeSupport.ab3@115> XINCLUDE "CLIModeSupport.ab3"
0001446A <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
000144AA <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000144AE <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000144EC <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000144F0 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@131> XINCLUDE "CLIModeSupport.ab3"
000145B4 <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
00014646 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@145> XINCLUDE "CLIModeSupport.ab3"
00014656 <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
00014674 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014676 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
0001467C <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014682 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
000146AC <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
000146AE <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000146DC <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000146E0 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
0001470E <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
00014712 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014738 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
00014748 <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001474E <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
00014754 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014798 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
000147B2 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
000147D0 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
000147D8 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
000147DE <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
000147E4 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
00014806 <CLIModeSupport.ab3@182> XINCLUDE "CLIModeSupport.ab3"
0001481E <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
00014844 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001486E <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001487C <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014882 <CLIModeSupport.ab3@188> XINCLUDE "CLIModeSupport.ab3"
00014896 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
000148AE <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
000148BC <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
000148D0 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
00014906 <CLIModeSupport.ab3@194> XINCLUDE "CLIModeSupport.ab3"
00014914 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
00014944 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014952 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014958 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014966 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001496C <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
00014972 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014980 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014982 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014988 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001499E <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
000149A8 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
000149AE <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000149D8 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014A16 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
00014A1A <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014A58 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014A5C <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014A9A <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
00014A9E <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
00014AA6 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014AAE <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014AF2 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
00014B04 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
00014B12 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
00014B46 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
00014B6A <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014B74 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014B8E <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
00014BA2 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
00014BFA <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
00014C9A <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
00014CA2 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
00014CDA <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
00014CE0 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
00014CF0 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
00014D18 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
00014D40 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
00014D48 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014D4E <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014D56 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
00014D5E <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
00014D86 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014D8E <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014D96 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014D9C <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014DA2 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014DA8 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
00014DAE <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
00014DB4 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014DBA <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014DC0 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014DC6 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014DCE <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014DD6 <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
00014DFE <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014E04 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014E0A <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014E12 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
00014E32 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014E42 <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
00014E52 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014E62 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
00014E82 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014E92 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014EA2 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014EB2 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014EC2 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
00014ED2 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014EE2 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014EF2 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014F02 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014F12 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014F22 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014F32 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014F44 <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
00014F56 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
00014F68 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014F7A <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014F8C <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014F9E <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014FBC <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
00014FC2 <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
00014FC8 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014FF2 <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
00015004 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
00015038 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00015050 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
0001509C <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
000150AE <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
00015104 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
00015176 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
0001517C <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
000151B0 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
000151D8 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00015200 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
0001523A <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00015252 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000152D6 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
000152F0 <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
0001533E <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
0001534E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00015356 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0001536A <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000153B0 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000153B6 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00015400 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0001546A <CLIModeSupport.ab3@327> XINCLUDE "CLIModeSupport.ab3"
000154D0 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
00015504 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
00015530 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001557E <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
000155A2 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000155A8 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000155B6 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
00015614 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00015672 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
0001569C <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
000156A6 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
000156AE <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000156EC <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
00015738 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001574A <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000157A0 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
00015818 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001581E <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00015852 <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001587A <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000158B0 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000158BE <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
000158CC <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00015940 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
00015946 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
00015990 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000159DA <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
00015A0A <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00015A3A <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00015A64 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
00015AB6 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00015B0C <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00015B5C <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00015BC2 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
00015C2E <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
00015C5A <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00015C8A <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
00015D06 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00015D36 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00015D66 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
00015D96 <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
00015DC6 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00015DF6 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00015E26 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00015E56 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00015E86 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00015EB6 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00015EE6 <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
00015F62 <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
00015F94 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00015FC6 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
00015FF6 <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
00015FFC <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
00016070 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
000160DC <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
000160EE <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
0001611C <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00016144 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
00016158 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
00016182 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
000161C6 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
000161D6 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
000161E6 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
000161EC <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000161FC <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
0001620A <CLIModeSupport.ab3@402> XINCLUDE "CLIModeSupport.ab3"
00016214 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
0001624C <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00016284 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
000162BC <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
000162CC <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00016334 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
0001636C <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001637C <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001638C <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000163F4 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001645C <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
000164C4 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001652C <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00016594 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
000165FC <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00016664 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
000166CC <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000166DC <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
00016714 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0001674E <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
00016788 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000167C0 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
000167DC <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
00016814 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001683A <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00016842 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
0001684A <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00016852 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
0001685A <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
0001686E <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0001689C <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
000168B6 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
000168C4 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00016930 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00016956 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00016972 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001697C <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00016986 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00016992 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000169A0 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
000169AC <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000169E8 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
00016A02 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
00016A10 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00016A30 <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
00016A3E <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
00016A4C <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
00016A52 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00016A62 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00016A66 <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
00016A9A <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
00016ACE <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
00016AD2 <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
00016B06 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00016B0A <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00016B3E <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00016B44 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00016B7A <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00016BB0 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00016BE6 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00016C1E <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00016C56 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00016CF6 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00016D36 <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
00016D6C <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00016DA2 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00016DDA <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00016DF8 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00016DFC <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00016E02 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00016E08 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00016E0C <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00016E36 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00016E4A <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00016E88 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00016EBC <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00016EF2 <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00016F4A <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
00016F78 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00016F7C <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00016FB2 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00016FE0 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
0001700E <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00017012 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00017048 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00017076 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
0001707A <CLIModeSupport.ab3@514> XINCLUDE "CLIModeSupport.ab3"
000170DE <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
000170E4 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
0001711E <CLIModeSupport.ab3@519> XINCLUDE "CLIModeSupport.ab3"
00017128 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00017132 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
0001714C <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00017176 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
0001717C <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
0001719C <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
000171A6 <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
000171AA <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
000171AC <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
000171CA <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
000171CC <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000171D2 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
000171D8 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00017202 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00017204 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00017232 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00017236 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00017264 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00017268 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001728E <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001729E <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
000172A4 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
000172AA <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
000172E4 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
000172EE <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00017308 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
00017326 <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00017350 <CLIModeSupport.ab3@556> XINCLUDE "CLIModeSupport.ab3"
0001737E <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
0001740E <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
00017418 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0001742C <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00017468 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
000174A4 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
000174E0 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
0001751C <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00017558 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0001755E <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00017598 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
000175AA <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000175BA <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000175C6 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
000175E0 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000175E2 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00017600 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
00017632 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
0001763C <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00017642 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
00017654 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
0001768E <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000176A8 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
000176BC <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00017726 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
0001772C <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
00017796 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
000177AA <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
00017814 <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001784A <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00017850 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
000178BA <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
000178CE <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00017904 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
0001790A <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
00017940 <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
00017954 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
000179BE <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000179C4 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00017A2E <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00017A42 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00017A78 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00017A7E <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00017AB4 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00017ACE <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00017AE2 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00017B4C <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00017B52 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00017BBC <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00017BD0 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00017C3A <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00017C40 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00017CAA <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00017CBE <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
00017D28 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00017D2E <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00017D98 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00017DAC <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
00017E16 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
00017E1C <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00017E86 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00017E98 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00017EA8 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00017EB2 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00017F1C <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
00017F22 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
00017F8C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00017F96 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00018000 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00018036 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
0001803C <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000180A6 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000180DC <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
000180E4 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00018112 <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00018116 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
0001813E <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00018144 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
0001814A <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00018150 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00018156 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
0001815C <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00018166 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00018170 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
0001819E <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
000181CA <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
000181D2 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00018238 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
0001826C <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00018272 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
000182F2 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00018304 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0001836A <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
000183D0 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000183D6 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
000183DE <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
000183E0 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
000183FE <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
0001843C <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
0001847A <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00018480 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00018486 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
0001848C <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00018496 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
0001849C <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
000184A2 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
000184A8 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
000184AE <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
000184B2 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
000184BC <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
000184C0 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000184EA <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
000184EC <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
000184F2 <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
000184F6 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
000184FC <CLIModeSupport.ab3@753> XINCLUDE "CLIModeSupport.ab3"
00018500 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00018510 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
0001856A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
0001857C <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
000185E6 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000185EC <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00018636 <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
00018648 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00018674 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0001871A <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00018738 <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
0001873E <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00018768 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00018772 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000187A4 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
000187BE <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000187D2 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000187DE <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000187F8 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00018802 <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
0001881C <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00018846 <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
0001886A <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
000188A8 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
000188AC <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
000188EA <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
000188EE <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
0001892C <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
0001896A <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
0001896C <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000189A0 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
000189A6 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
000189EA <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
000189FC <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00018A04 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00018A0A <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00018A14 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00018A22 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00018A28 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00018A50 <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00018A6A <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00018A74 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00018A7A <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00018A98 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00018AA2 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00018AA8 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00018AAE <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00018AB8 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00018AC6 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00018ACC <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00018ADC <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00018B08 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00018B1E <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00018B28 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
00018B2E <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00018B86 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00018BF4 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00018C0C <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00018C12 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00018C4A <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00018C78 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00018CA2 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
00018CAC <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00018CD4 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
00018CFE <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00018DA0 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00018DAE <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00018DFE <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
00018E0E <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00018ED6 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
00018F0A <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00018F3E <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00018F72 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00018FA6 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
00018FDA <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
0001900E <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00019042 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00019076 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
00019078 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
000190B6 <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
000190BA <CLIModeSupport.ab3@862> XINCLUDE "CLIModeSupport.ab3"
000190F8 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
00019136 <CLIModeSupport.ab3@866> XINCLUDE "CLIModeSupport.ab3"
00019138 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
0001913E <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00019142 <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00019144 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
00019182 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
000191C0 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
000191C2 <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
000191C4 <CLIModeSupport.ab3@875> XINCLUDE "CLIModeSupport.ab3"
000191C6 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
000191CC <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
000191D0 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
000191E0 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
000191F8 <CLIModeSupport.ab3@881> XINCLUDE "CLIModeSupport.ab3"
00019210 <CLIModeSupport.ab3@882> XINCLUDE "CLIModeSupport.ab3"
00019228 <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
00019252 <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
0001927C <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
000192AA <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
000192AE <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
000192D6 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
000192D8 <CLIModeSupport.ab3@891> XINCLUDE "CLIModeSupport.ab3"
00019316 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
0001931A <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
00019358 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
0001935C <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
0001939A <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
0001939E <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
000193DC <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000193E0 <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
00019406 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
0001942C <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00019452 <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00019478 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
0001949E <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
000194F4 <CLIModeSupport.ab3@907> XINCLUDE "CLIModeSupport.ab3"
0001954A <CLIModeSupport.ab3@908> XINCLUDE "CLIModeSupport.ab3"
00019598 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
000195EE <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00019614 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0001963A <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00019660 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
000196B6 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00019704 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00019752 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
0001980C <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00019862 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
00019888 <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
000198AE <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
000198D4 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
0001992A <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00019980 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
000199CE <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00019A1C <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
00019A6A <CLIModeSupport.ab3@926> XINCLUDE "CLIModeSupport.ab3"
00019AB8 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00019B06 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00019B54 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00019BA2 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00019BC8 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00019BEE <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00019C14 <CLIModeSupport.ab3@933> XINCLUDE "CLIModeSupport.ab3"
00019C62 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00019CB0 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00019D06 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00019D54 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00019DA2 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00019DF0 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00019E16 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00019E3C <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00019E62 <CLIModeSupport.ab3@942> XINCLUDE "CLIModeSupport.ab3"
00019E9A <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00019EC2 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00019ED6 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00019F4A <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00019F90 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
0001A03E <CLIModeSupport.ab3@948> XINCLUDE "CLIModeSupport.ab3"
0001A0AA <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
0001A0BA <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
0001A0E0 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
0001A0EA <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
0001A114 <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
0001A11A <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
0001A12A <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
0001A1CA <CLIModeSupport.ab3@960> XINCLUDE "CLIModeSupport.ab3"
0001A20A <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
0001A210 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
0001A272 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
0001A27C <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
0001A286 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
0001A2A0 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
0001A2C2 <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
0001A2E4 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
0001A33E <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
0001A360 <CLIModeSupport.ab3@1048> XINCLUDE "CLIModeSupport.ab3"
0001A382 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
0001A3DC <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001A41E <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
0001A424 <CLIModeSupport.ab3@1053> XINCLUDE "CLIModeSupport.ab3"
0001A432 <CLIModeSupport.ab3@1054> XINCLUDE "CLIModeSupport.ab3"
0001A438 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
0001A44C <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
0001A456 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
0001A4D0 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
0001A4DA <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
0001A4E0 <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
0001A4F4 <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
0001A4FE <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001A57E <CLIModeSupport.ab3@1066> XINCLUDE "CLIModeSupport.ab3"
0001A588 <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
0001A58E <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
0001A5A2 <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
0001A5AC <CLIModeSupport.ab3@1072> XINCLUDE "CLIModeSupport.ab3"
0001A5F4 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
0001A602 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
0001A628 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001A632 <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
0001A69C <CLIModeSupport.ab3@1077> XINCLUDE "CLIModeSupport.ab3"
0001A76E <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
0001A778 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
0001A77E <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
0001A788 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001A78E <CLIModeSupport.ab3@1083> XINCLUDE "CLIModeSupport.ab3"
0001A7A2 <CLIModeSupport.ab3@1086> XINCLUDE "CLIModeSupport.ab3"
0001A7AC <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
0001A7F4 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
0001A7FE <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
0001A804 <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
0001A818 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
0001A83E <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
0001A852 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
0001A878 <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
0001A88C <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
0001A8B2 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
0001A8C6 <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
0001A8D0 <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
0001A8FE <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
0001A94E <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
0001A96E <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
0001A986 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
0001AA6A <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
0001AA74 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
0001AA7A <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
0001AA7C <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
0001AA90 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
0001AAC2 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
0001AAC8 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
0001AB0C <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
0001AB1E <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
0001AB30 <CLIModeSupport.ab3@1123> XINCLUDE "CLIModeSupport.ab3"
0001AB3A <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
0001AB40 <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
0001AB4A <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
0001AB64 <CLIModeSupport.ab3@1128> XINCLUDE "CLIModeSupport.ab3"
0001AB64 <AmiBlitz3_noFPU_r470.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001ABE4 <AmiBlitz3_noFPU_r470.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001AC1C <AmiBlitz3_noFPU_r470.ab3@99> If dynassign <> ""
0001AC32 <AmiBlitz3_noFPU_r470.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001AC3C <AmiBlitz3_noFPU_r470.ab3@101>     If *AssignSema
0001AC4C <AmiBlitz3_noFPU_r470.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001AC52 <AmiBlitz3_noFPU_r470.ab3@103>     Else                                                        ; no, create one...
0001AC72 <AmiBlitz3_noFPU_r470.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001AC7C <AmiBlitz3_noFPU_r470.ab3@105>       If *AssignSema
0001AC8C <AmiBlitz3_noFPU_r470.ab3@106>         InitSemaphore_ *AssignSema
0001ACC0 <AmiBlitz3_noFPU_r470.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001ACD2 <AmiBlitz3_noFPU_r470.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001AD0E <AmiBlitz3_noFPU_r470.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001AD1A <AmiBlitz3_noFPU_r470.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001AD26 <AmiBlitz3_noFPU_r470.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001AD36 <AmiBlitz3_noFPU_r470.ab3@115>         AddSemaphore_ *AssignSema
0001AD46 <AmiBlitz3_noFPU_r470.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001AD92 <AmiBlitz3_noFPU_r470.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001ADF2 <AmiBlitz3_noFPU_r470.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001AE86 <AmiBlitz3_noFPU_r470.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001AEBE <AmiBlitz3_noFPU_r470.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001AF40 <AmiBlitz3_noFPU_r470.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001AFC2 <AmiBlitz3_noFPU_r470.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B044 <AmiBlitz3_noFPU_r470.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B0C6 <AmiBlitz3_noFPU_r470.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B148 <AmiBlitz3_noFPU_r470.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B1BC <AmiBlitz3_noFPU_r470.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B230 <AmiBlitz3_noFPU_r470.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B2A4 <AmiBlitz3_noFPU_r470.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B2D2 <AmiBlitz3_noFPU_r470.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B2F6 <AmiBlitz3_noFPU_r470.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B324 <AmiBlitz3_noFPU_r470.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B352 <AmiBlitz3_noFPU_r470.ab3@141>   dos_CreateDir{my_systemdir$}
0001B41C <AmiBlitz3_noFPU_r470.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B454 <AmiBlitz3_noFPU_r470.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B492 <AmiBlitz3_noFPU_r470.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B4A2 <AmiBlitz3_noFPU_r470.ab3@151>   Poke.b ?start_without_libs,1
0001B4A8 <AmiBlitz3_noFPU_r470.ab3@152> Else
0001B4B8 <AmiBlitz3_noFPU_r470.ab3@153>   Poke.b ?start_without_libs,0
0001B4DE <AmiBlitz3_noFPU_r470.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B4EA <AmiBlitz3_noFPU_r470.ab3@160> dbg_fid.l = -1 ; no debug file id yet!
0001B4FC <AmiBlitz3_noFPU_r470.ab3@163> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B506 <AmiBlitz3_noFPU_r470.ab3@165> If CLIMode
0001B50C <AmiBlitz3_noFPU_r470.ab3@168>   err.l      = False                                       ; indicate that an error has occured
0001B512 <AmiBlitz3_noFPU_r470.ab3@169>   showhelp.l = False                                       ; show the CLI tool's help
0001B56A <AmiBlitz3_noFPU_r470.ab3@172>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001B592 <AmiBlitz3_noFPU_r470.ab3@173>   cli_sourcefile.s    = ""
0001B5BA <AmiBlitz3_noFPU_r470.ab3@174>   cli_exefile.s       = ""
0001B5E2 <AmiBlitz3_noFPU_r470.ab3@175>   cli_savefile.s      = ""
0001B60A <AmiBlitz3_noFPU_r470.ab3@176>   cli_dumpfile.s      = ""
0001B632 <AmiBlitz3_noFPU_r470.ab3@177>   cli_includepath.s   = ""
0001B65A <AmiBlitz3_noFPU_r470.ab3@178>   cli_blitzlibpath.s  = ""
0001B660 <AmiBlitz3_noFPU_r470.ab3@179>   cli_debuginfo.l     = False
0001B666 <AmiBlitz3_noFPU_r470.ab3@180>   cli_run.l           = False
0001B66E <AmiBlitz3_noFPU_r470.ab3@181>   cli_dumpflags.l     = $FFFFFFFF
0001B696 <AmiBlitz3_noFPU_r470.ab3@182>   cli_info.s          = ""
0001B69C <AmiBlitz3_noFPU_r470.ab3@183>   cli_release.l       = False
0001B6A6 <AmiBlitz3_noFPU_r470.ab3@184>   cli_numargs.l       = dos_GetNumArgs{}
0001B6AC <AmiBlitz3_noFPU_r470.ab3@185>   cli_gui.l           = False
0001B6B4 <AmiBlitz3_noFPU_r470.ab3@186>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001B6BC <AmiBlitz3_noFPU_r470.ab3@187>   cli_verbose.l       = 1
0001B6C4 <AmiBlitz3_noFPU_r470.ab3@188>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001B6CC <AmiBlitz3_noFPU_r470.ab3@189>   cli_comstrbufsize.l = 0
0001B6D4 <AmiBlitz3_noFPU_r470.ab3@190>   cli_exestacksize.l  = 0
0001B6DC <AmiBlitz3_noFPU_r470.ab3@191>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001B6F4 <AmiBlitz3_noFPU_r470.ab3@192>   If cli_numargs=0 Then showhelp=True
0001B724 <AmiBlitz3_noFPU_r470.ab3@196>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001B770 <AmiBlitz3_noFPU_r470.ab3@197>     larg.s = LCase$(arg)                                   ; lower case the option string
0001B838 <AmiBlitz3_noFPU_r470.ab3@198>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001B86E <AmiBlitz3_noFPU_r470.ab3@199>     Select larg
0001B8BA <AmiBlitz3_noFPU_r470.ab3@200>       Case "s" : larg="source"
0001B90C <AmiBlitz3_noFPU_r470.ab3@201>       Case "e" : larg="exe"
0001B95E <AmiBlitz3_noFPU_r470.ab3@202>       Case "d" : larg="debug"
0001B9B0 <AmiBlitz3_noFPU_r470.ab3@203>       Case "r" : larg="release"
0001BA02 <AmiBlitz3_noFPU_r470.ab3@204>       Case "h" : larg="help"
0001BA54 <AmiBlitz3_noFPU_r470.ab3@205>       Case "v" : larg="verbose"
0001BA62 <AmiBlitz3_noFPU_r470.ab3@206>     End Select
0001BA98 <AmiBlitz3_noFPU_r470.ab3@208>     Select larg
0001BAEC <AmiBlitz3_noFPU_r470.ab3@209>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001BB46 <AmiBlitz3_noFPU_r470.ab3@210>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001BBA0 <AmiBlitz3_noFPU_r470.ab3@211>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001BBD0 <AmiBlitz3_noFPU_r470.ab3@212>       Case "debug"    : cli_debuginfo   = True
0001BC00 <AmiBlitz3_noFPU_r470.ab3@213>       Case "run"      : cli_run         = True
0001BC30 <AmiBlitz3_noFPU_r470.ab3@214>       Case "release"  : cli_release     = True
0001BC60 <AmiBlitz3_noFPU_r470.ab3@215>       Case "ped"      : cli_gui         = True
0001BCBA <AmiBlitz3_noFPU_r470.ab3@216>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001BD2C <AmiBlitz3_noFPU_r470.ab3@217>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001BD5C <AmiBlitz3_noFPU_r470.ab3@218>                         cli_dumpfile    = dos_GetNextArg{}
0001BD64 <AmiBlitz3_noFPU_r470.ab3@219>                         cli_dumpflags   = $0
0001BDC4 <AmiBlitz3_noFPU_r470.ab3@220>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001BE24 <AmiBlitz3_noFPU_r470.ab3@221>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001BE84 <AmiBlitz3_noFPU_r470.ab3@222>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001BEE4 <AmiBlitz3_noFPU_r470.ab3@223>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001BF44 <AmiBlitz3_noFPU_r470.ab3@224>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001BFA4 <AmiBlitz3_noFPU_r470.ab3@225>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C004 <AmiBlitz3_noFPU_r470.ab3@226>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C064 <AmiBlitz3_noFPU_r470.ab3@227>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C0C4 <AmiBlitz3_noFPU_r470.ab3@228>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C0D6 <AmiBlitz3_noFPU_r470.ab3@229>                         If cli_dumpflags = $0
0001C0DC <AmiBlitz3_noFPU_r470.ab3@230>                          err=True
0001C170 <AmiBlitz3_noFPU_r470.ab3@231>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C1E2 <AmiBlitz3_noFPU_r470.ab3@234>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C1EA <AmiBlitz3_noFPU_r470.ab3@235>                         cli_comflags.l  = $0
0001C24A <AmiBlitz3_noFPU_r470.ab3@236>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C2AA <AmiBlitz3_noFPU_r470.ab3@237>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C30A <AmiBlitz3_noFPU_r470.ab3@238>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C36A <AmiBlitz3_noFPU_r470.ab3@239> 
0001C3CA <AmiBlitz3_noFPU_r470.ab3@240>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C3E4 <AmiBlitz3_noFPU_r470.ab3@241>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C3EA <AmiBlitz3_noFPU_r470.ab3@242>                           err=True                                                                ; no
0001C47E <AmiBlitz3_noFPU_r470.ab3@243>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C484 <AmiBlitz3_noFPU_r470.ab3@244>                         Else
0001C492 <AmiBlitz3_noFPU_r470.ab3@245>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C504 <AmiBlitz3_noFPU_r470.ab3@248>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C50C <AmiBlitz3_noFPU_r470.ab3@249>                         cli_dbgflags.l  = $0
0001C56C <AmiBlitz3_noFPU_r470.ab3@250>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C5CC <AmiBlitz3_noFPU_r470.ab3@251>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001C62C <AmiBlitz3_noFPU_r470.ab3@252>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001C68C <AmiBlitz3_noFPU_r470.ab3@253>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001C6A6 <AmiBlitz3_noFPU_r470.ab3@254>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001C6AC <AmiBlitz3_noFPU_r470.ab3@255>                           err=True                                                                ; no
0001C740 <AmiBlitz3_noFPU_r470.ab3@256>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001C746 <AmiBlitz3_noFPU_r470.ab3@257>                         Else
0001C754 <AmiBlitz3_noFPU_r470.ab3@258>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001C7AE <AmiBlitz3_noFPU_r470.ab3@260>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001C808 <AmiBlitz3_noFPU_r470.ab3@261>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001C862 <AmiBlitz3_noFPU_r470.ab3@262> 
0001C888 <AmiBlitz3_noFPU_r470.ab3@263>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001C898 <AmiBlitz3_noFPU_r470.ab3@264>                           Poke.l ?maxerrorcount,cli_maxerrors
0001C8F2 <AmiBlitz3_noFPU_r470.ab3@267>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001C922 <AmiBlitz3_noFPU_r470.ab3@268>       Case "h"        : showhelp        = True             ; show the help and quit
0001C928 <AmiBlitz3_noFPU_r470.ab3@269>       Default
0001C960 <AmiBlitz3_noFPU_r470.ab3@270>         If arg><""
0001C9F4 <AmiBlitz3_noFPU_r470.ab3@271>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001C9FA <AmiBlitz3_noFPU_r470.ab3@272>           err = True
0001CA08 <AmiBlitz3_noFPU_r470.ab3@274>     End Select
0001CA54 <AmiBlitz3_noFPU_r470.ab3@275>   Until arg = "" OR err=True          ; until we processed all arguments
0001CA76 <AmiBlitz3_noFPU_r470.ab3@278>   If err><False OR showhelp = True
0001CA80 <AmiBlitz3_noFPU_r470.ab3@279>     If showhelp
0001CAE2 <AmiBlitz3_noFPU_r470.ab3@280>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001CB1A <AmiBlitz3_noFPU_r470.ab3@281>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001CB52 <AmiBlitz3_noFPU_r470.ab3@282>     NPrint "\\nOptions:"
0001CB8A <AmiBlitz3_noFPU_r470.ab3@283>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001CBC2 <AmiBlitz3_noFPU_r470.ab3@284>     NPrint "  -(e)xe <file>       : output executable filename"
0001CBFA <AmiBlitz3_noFPU_r470.ab3@285>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001CC32 <AmiBlitz3_noFPU_r470.ab3@286>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001CC6A <AmiBlitz3_noFPU_r470.ab3@287>     NPrint "  -run                : run compiled program"
0001CCA2 <AmiBlitz3_noFPU_r470.ab3@288>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001CCDA <AmiBlitz3_noFPU_r470.ab3@289>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001CD12 <AmiBlitz3_noFPU_r470.ab3@290>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001CD4A <AmiBlitz3_noFPU_r470.ab3@291>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001CD82 <AmiBlitz3_noFPU_r470.ab3@292>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001CDBA <AmiBlitz3_noFPU_r470.ab3@293>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001CDF2 <AmiBlitz3_noFPU_r470.ab3@294>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001CE2A <AmiBlitz3_noFPU_r470.ab3@295>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001CE62 <AmiBlitz3_noFPU_r470.ab3@296>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001CE9A <AmiBlitz3_noFPU_r470.ab3@297>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001CED2 <AmiBlitz3_noFPU_r470.ab3@298>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001CF0A <AmiBlitz3_noFPU_r470.ab3@299>     NPrint "  -(h)elp             : show this help"
0001CF42 <AmiBlitz3_noFPU_r470.ab3@300>     NPrint "\\nExample:"
0001CF7A <AmiBlitz3_noFPU_r470.ab3@301>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001CFB2 <AmiBlitz3_noFPU_r470.ab3@302>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001CFB8 <AmiBlitz3_noFPU_r470.ab3@305>     Goto abnormal_exit
0001CFD4 <AmiBlitz3_noFPU_r470.ab3@308>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D038 <AmiBlitz3_noFPU_r470.ab3@309>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D048 <AmiBlitz3_noFPU_r470.ab3@312> Poke.l ?CLIMode,CLIMode
0001D06C <AmiBlitz3_noFPU_r470.ab3@342>   Dim incdim.s (#maxincludes)
0001D090 <AmiBlitz3_noFPU_r470.ab3@343>   Dim incline.l(#maxincludes)
0001D0AA <AmiBlitz3_noFPU_r470.ab3@611> Function.s Get_Libinfo{addr_libnum.l}
0001D0B6 <AmiBlitz3_noFPU_r470.ab3@613>   lib_ab2.b = False : lib_os.b = False
0001D0BC <AmiBlitz3_noFPU_r470.ab3@614>   addr_counter.l = addr_libnum
0001D0C4 <AmiBlitz3_noFPU_r470.ab3@615>   skip.l = 0
0001D0D6 <AmiBlitz3_noFPU_r470.ab3@616>   If addr_counter=0
0001D110 <AmiBlitz3_noFPU_r470.ab3@617>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D12E <AmiBlitz3_noFPU_r470.ab3@618>     Function Return ""
0001D13C <AmiBlitz3_noFPU_r470.ab3@623>     mem.l = Peek.l(addr_counter)
0001D14A <AmiBlitz3_noFPU_r470.ab3@628>     addr_counter + 2
0001D16A <AmiBlitz3_noFPU_r470.ab3@629>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D184 <AmiBlitz3_noFPU_r470.ab3@630>     If (mem LSR 16) = $ffe2
0001D18A <AmiBlitz3_noFPU_r470.ab3@632>       lib_os = True
0001D192 <AmiBlitz3_noFPU_r470.ab3@633>       skip = 10
0001D1D8 <AmiBlitz3_noFPU_r470.ab3@634>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D21C <AmiBlitz3_noFPU_r470.ab3@636>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D232 <AmiBlitz3_noFPU_r470.ab3@638>   If (addr_counter>addr_libnum + $400)
0001D250 <AmiBlitz3_noFPU_r470.ab3@640>     Function Return ""
0001D256 <AmiBlitz3_noFPU_r470.ab3@641>   Else
0001D27A <AmiBlitz3_noFPU_r470.ab3@642>     Function Return Peek$(addr_counter + skip)
0001D284 <AmiBlitz3_noFPU_r470.ab3@644> End Function
0001D2A2 <AmiBlitz3_noFPU_r470.ab3@684>   !asm
0001D2A8 <AmiBlitz3_noFPU_r470.ab3@685>   MOVEA.l _execbase,A6
0001D2AC <AmiBlitz3_noFPU_r470.ab3@686>   MOVEM.l d0/a0,-(a7)
0001D2AE <AmiBlitz3_noFPU_r470.ab3@688>   MOVEQ #127,d0
0001D2B4 <AmiBlitz3_noFPU_r470.ab3@689>   LEA chartab,a0
0001D2BA <AmiBlitz3_noFPU_r470.ab3@692>     MOVE.b #1,128(a0)
0001D2BC <AmiBlitz3_noFPU_r470.ab3@693>     CLR.b (a0)+
0001D2C0 <AmiBlitz3_noFPU_r470.ab3@694>   DBF d0,'l12
0001D2C6 <AmiBlitz3_noFPU_r470.ab3@696>   LEA chartab,a0
0001D2CA <AmiBlitz3_noFPU_r470.ab3@697>   MOVE.b #1,(a0)
0001D2D0 <AmiBlitz3_noFPU_r470.ab3@698>   MOVE.b #1,","(a0)
0001D2D6 <AmiBlitz3_noFPU_r470.ab3@699>   MOVE.b #1,";"(a0)
0001D2DC <AmiBlitz3_noFPU_r470.ab3@700>   MOVE.b #1,":"(a0)
0001D2E2 <AmiBlitz3_noFPU_r470.ab3@701>   MOVE.b #1,"("(a0)
0001D2E8 <AmiBlitz3_noFPU_r470.ab3@702>   MOVE.b #1,")"(a0)
0001D2EE <AmiBlitz3_noFPU_r470.ab3@703>   MOVE.b #1,"="(a0)
0001D2F4 <AmiBlitz3_noFPU_r470.ab3@704>   MOVE.b #1,"+"(a0)
0001D2FA <AmiBlitz3_noFPU_r470.ab3@705>   MOVE.b #1,"-"(a0)
0001D300 <AmiBlitz3_noFPU_r470.ab3@706>   MOVE.b #1,"*"(a0)
0001D306 <AmiBlitz3_noFPU_r470.ab3@707>   MOVE.b #1,"/"(a0)
0001D30C <AmiBlitz3_noFPU_r470.ab3@708>   MOVE.b #1,"$"(a0)
0001D312 <AmiBlitz3_noFPU_r470.ab3@709>   MOVE.b #1,"%"(a0)
0001D318 <AmiBlitz3_noFPU_r470.ab3@710>   MOVE.b #1,"."(a0)
0001D31E <AmiBlitz3_noFPU_r470.ab3@711>   MOVE.b #1,"["(a0)
0001D324 <AmiBlitz3_noFPU_r470.ab3@712>   MOVE.b #1,"]"(a0)
0001D32A <AmiBlitz3_noFPU_r470.ab3@713>   MOVE.b #1,"{"(a0)
0001D330 <AmiBlitz3_noFPU_r470.ab3@714>   MOVE.b #1,"}"(a0)
0001D336 <AmiBlitz3_noFPU_r470.ab3@715>   MOVE.b #1,"\"(a0)
0001D33C <AmiBlitz3_noFPU_r470.ab3@716>   MOVE.b #1,">"(a0)
0001D342 <AmiBlitz3_noFPU_r470.ab3@717>   MOVE.b #1,"<"(a0)
0001D348 <AmiBlitz3_noFPU_r470.ab3@718>   MOVE.b #1,"&"(a0)
0001D34E <AmiBlitz3_noFPU_r470.ab3@719>   MOVE.b #1,"|"(a0)
0001D354 <AmiBlitz3_noFPU_r470.ab3@720>   MOVE.b #1,"^"(a0)
0001D35A <AmiBlitz3_noFPU_r470.ab3@721>   MOVE.b #1,$7e(a0)
0001D360 <AmiBlitz3_noFPU_r470.ab3@722>   MOVE.w #$0101,1(a0)
0001D366 <AmiBlitz3_noFPU_r470.ab3@724>   LEA instrtab,a0
0001D36C <AmiBlitz3_noFPU_r470.ab3@725>   MOVE.l #labelhash-instrtab,d0
0001D36E <AmiBlitz3_noFPU_r470.ab3@726>   ASR.l #2,d0
0001D370 <AmiBlitz3_noFPU_r470.ab3@727>   SUBQ.l #1,d0
0001D372 <AmiBlitz3_noFPU_r470.ab3@730>    CLR.l (a0)+
0001D374 <AmiBlitz3_noFPU_r470.ab3@731>    SUBQ.l #1,d0
0001D378 <AmiBlitz3_noFPU_r470.ab3@732>   BNE 'l10
0001D37E <AmiBlitz3_noFPU_r470.ab3@734>   LEA allowtab,a0
0001D384 <AmiBlitz3_noFPU_r470.ab3@735>   MOVE.l #255,d0
0001D386 <AmiBlitz3_noFPU_r470.ab3@738>     CLR.b (a0)+
0001D38A <AmiBlitz3_noFPU_r470.ab3@739>   DBF d0,'la1
0001D390 <AmiBlitz3_noFPU_r470.ab3@741>   LEA allowtab,a0
0001D396 <AmiBlitz3_noFPU_r470.ab3@742>   MOVE.b #1,$7d(a0)
0001D39C <AmiBlitz3_noFPU_r470.ab3@743>   MOVE.b #1,$7c(a0)
0001D3A2 <AmiBlitz3_noFPU_r470.ab3@744>   MOVE.b #1,$44(a0)
0001D3A8 <AmiBlitz3_noFPU_r470.ab3@745>   MOVE.b #1,$45(a0)
0001D3AE <AmiBlitz3_noFPU_r470.ab3@746>   MOVE.b #1,$b9(a0)
0001D3B4 <AmiBlitz3_noFPU_r470.ab3@747>   MOVE.b #1,$89(a0)
0001D3BA <AmiBlitz3_noFPU_r470.ab3@748>   MOVE.b #1,$ce(a0)
0001D3C0 <AmiBlitz3_noFPU_r470.ab3@749>   MOVE.b #1,$cf(a0)
0001D3C6 <AmiBlitz3_noFPU_r470.ab3@750>   MOVE.b #1,$d0(a0)
0001D3CC <AmiBlitz3_noFPU_r470.ab3@751>   MOVE.b #1,$cd(a0)
0001D3CE <AmiBlitz3_noFPU_r470.ab3@752>   MOVEQ #0,d0
0001D3D4 <AmiBlitz3_noFPU_r470.ab3@754>   MOVEA.l _execbase,a6
0001D3DA <AmiBlitz3_noFPU_r470.ab3@759>   MOVE.l #$10000,d0
0001D3E0 <AmiBlitz3_noFPU_r470.ab3@760>   MOVE.l #80000,d1
0001D3E2 <AmiBlitz3_noFPU_r470.ab3@761>   MOVE.l d1,d2
0001D3E6 <AmiBlitz3_noFPU_r470.ab3@762>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D3EC <AmiBlitz3_noFPU_r470.ab3@763>   MOVE.l d0,mempool
0001D3F0 <AmiBlitz3_noFPU_r470.ab3@764>   MOVEM.l (a7)+,d0/a0
0001D3F6 <AmiBlitz3_noFPU_r470.ab3@765>   TST.l mempool
0001D3FA <AmiBlitz3_noFPU_r470.ab3@766>   BEQ shutdown_compiler
0001D3FE <AmiBlitz3_noFPU_r470.ab3@768>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D404 <AmiBlitz3_noFPU_r470.ab3@769>   MOVE.l A4,ptr_ThisTask
0001D408 <AmiBlitz3_noFPU_r470.ab3@771>   BSR.w open_doslibrary
0001D40C <AmiBlitz3_noFPU_r470.ab3@772>   BEQ.w shutdown_compiler
0001D412 <AmiBlitz3_noFPU_r470.ab3@774>   MOVE.l D2,stacksize
0001D414 <AmiBlitz3_noFPU_r470.ab3@778>   MOVEQ.l #$00,D0
0001D41A <AmiBlitz3_noFPU_r470.ab3@779>   LEA tokens,A0
0001D41C <AmiBlitz3_noFPU_r470.ab3@782>     ADDQ.w #1,D0
0001D41E <AmiBlitz3_noFPU_r470.ab3@783>     MOVE.l (A0),D1
0001D422 <AmiBlitz3_noFPU_r470.ab3@784>     BEQ.w JL_0_2D1C
0001D424 <AmiBlitz3_noFPU_r470.ab3@785>     MOVEA.l D1,A0
0001D428 <AmiBlitz3_noFPU_r470.ab3@786> BRA.w JL_0_2D0E
0001D42E <AmiBlitz3_noFPU_r470.ab3@789>   MOVE.l A0,end_of_tokenlist
0001D432 <AmiBlitz3_noFPU_r470.ab3@791>   BSR.w makeasmtable
0001D43A <AmiBlitz3_noFPU_r470.ab3@792>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D43E <AmiBlitz3_noFPU_r470.ab3@794>   BSR.w open_mathlibrary
0001D442 <AmiBlitz3_noFPU_r470.ab3@795>   BEQ.w freemem_and_quit4
0001D448 <AmiBlitz3_noFPU_r470.ab3@797>   MOVE.l constmaxpc,D0
0001D44A <AmiBlitz3_noFPU_r470.ab3@798>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D450 <AmiBlitz3_noFPU_r470.ab3@799>   MOVEA.l _execbase,A6
0001D454 <AmiBlitz3_noFPU_r470.ab3@800>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D45A <AmiBlitz3_noFPU_r470.ab3@801>   MOVE.l D0,constpcat
0001D45E <AmiBlitz3_noFPU_r470.ab3@802>   BEQ.w freemem_and_quit3
0001D464 <AmiBlitz3_noFPU_r470.ab3@803>   ADD.l constmaxpc,D0
0001D46A <AmiBlitz3_noFPU_r470.ab3@804>   MOVE.l D0,constlibat
0001D470 <AmiBlitz3_noFPU_r470.ab3@806>   MOVE.l macrobuffer_size,D0
0001D476 <AmiBlitz3_noFPU_r470.ab3@807>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D47A <AmiBlitz3_noFPU_r470.ab3@808>   BGE 'ok
0001D480 <AmiBlitz3_noFPU_r470.ab3@809>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D486 <AmiBlitz3_noFPU_r470.ab3@810>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D488 <AmiBlitz3_noFPU_r470.ab3@813>   ADDQ.l #4,d0
0001D48A <AmiBlitz3_noFPU_r470.ab3@814>   MOVEQ.l #$01,D1
0001D490 <AmiBlitz3_noFPU_r470.ab3@815>   MOVEA.l _execbase,A6
0001D494 <AmiBlitz3_noFPU_r470.ab3@816>   JSR _AllocMem(A6)                                        ;macro mem
0001D496 <AmiBlitz3_noFPU_r470.ab3@817>   MOVE.l d0,a0
0001D49C <AmiBlitz3_noFPU_r470.ab3@818>   MOVE.l macrobuffer_size,(a0)+
0001D49E <AmiBlitz3_noFPU_r470.ab3@819>   MOVE.l a0,d0
0001D4A4 <AmiBlitz3_noFPU_r470.ab3@820>   MOVE.l D0,ptr_macrobuffer_begin
0001D4A8 <AmiBlitz3_noFPU_r470.ab3@821>   BEQ.w freemem_and_quit2
0001D4AE <AmiBlitz3_noFPU_r470.ab3@822>   ADD.l macrobuffer_size,D0
0001D4B4 <AmiBlitz3_noFPU_r470.ab3@823>   MOVE.l D0,ptr_macrobuffer_end
0001D4BA <AmiBlitz3_noFPU_r470.ab3@825>   TST.l CLIMode
0001D4BE <AmiBlitz3_noFPU_r470.ab3@826>   BEQ load_ped
0001D4E8 <AmiBlitz3_noFPU_r470.ab3@829>   !basic
0001D4F2 <AmiBlitz3_noFPU_r470.ab3@830>   succ.l = InitEmulatedPED{}
0001D4F6 <AmiBlitz3_noFPU_r470.ab3@831>   GetD0 succ
0001D514 <AmiBlitz3_noFPU_r470.ab3@832>   !asm
0001D516 <AmiBlitz3_noFPU_r470.ab3@833>   TST.l d0
0001D51A <AmiBlitz3_noFPU_r470.ab3@834>   BEQ freemem_and_quit
0001D520 <AmiBlitz3_noFPU_r470.ab3@835> JMP skip_ped
0001D526 <AmiBlitz3_noFPU_r470.ab3@840>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D52C <AmiBlitz3_noFPU_r470.ab3@841>   MOVEA.l _dosbase,A6
0001D530 <AmiBlitz3_noFPU_r470.ab3@842>   JSR _LoadSeg(A6)
0001D536 <AmiBlitz3_noFPU_r470.ab3@843>   MOVE.l D0,ptr_seg_ped
0001D53A <AmiBlitz3_noFPU_r470.ab3@845>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D53C <AmiBlitz3_noFPU_r470.ab3@849>   MOVEA.l D0,A2
0001D53E <AmiBlitz3_noFPU_r470.ab3@850>   ADDA.l A2,A2
0001D540 <AmiBlitz3_noFPU_r470.ab3@851>   ADDA.l A2,A2
0001D546 <AmiBlitz3_noFPU_r470.ab3@853>   LEA teddata,a1                                           ;lea edstruct,A1
0001D54C <AmiBlitz3_noFPU_r470.ab3@854>   MOVE.l #"TEDY",d1
0001D550 <AmiBlitz3_noFPU_r470.ab3@855>   JSR 4(A2)                                                ; Run PED
0001D556 <AmiBlitz3_noFPU_r470.ab3@857>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D55C <AmiBlitz3_noFPU_r470.ab3@858>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D59A <AmiBlitz3_noFPU_r470.ab3@860>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D59E <AmiBlitz3_noFPU_r470.ab3@861>   BEQ.w unload_ped
0001D5A2 <AmiBlitz3_noFPU_r470.ab3@862> 
0001D5A6 <AmiBlitz3_noFPU_r470.ab3@863>   BNE old_version_of_PED                                   ; no, than exit
0001D5E4 <AmiBlitz3_noFPU_r470.ab3@869>   !ComData_GetL{comData_Magic,D0}
0001D5EA <AmiBlitz3_noFPU_r470.ab3@870>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D5EE <AmiBlitz3_noFPU_r470.ab3@871>   BNE unload_ped
0001D626 <AmiBlitz3_noFPU_r470.ab3@874>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001D65E <AmiBlitz3_noFPU_r470.ab3@875>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001D696 <AmiBlitz3_noFPU_r470.ab3@876>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001D6CE <AmiBlitz3_noFPU_r470.ab3@877>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001D706 <AmiBlitz3_noFPU_r470.ab3@878>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001D73E <AmiBlitz3_noFPU_r470.ab3@879>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001D776 <AmiBlitz3_noFPU_r470.ab3@880>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001D7AE <AmiBlitz3_noFPU_r470.ab3@881>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001D7E6 <AmiBlitz3_noFPU_r470.ab3@882>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001D81E <AmiBlitz3_noFPU_r470.ab3@883>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001D856 <AmiBlitz3_noFPU_r470.ab3@884>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001D88E <AmiBlitz3_noFPU_r470.ab3@885>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001D8C6 <AmiBlitz3_noFPU_r470.ab3@888>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001D8FE <AmiBlitz3_noFPU_r470.ab3@889>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001D936 <AmiBlitz3_noFPU_r470.ab3@892>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001D96E <AmiBlitz3_noFPU_r470.ab3@893>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001D9A6 <AmiBlitz3_noFPU_r470.ab3@895>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001D9DE <AmiBlitz3_noFPU_r470.ab3@896>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001DA16 <AmiBlitz3_noFPU_r470.ab3@898>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DA4E <AmiBlitz3_noFPU_r470.ab3@899>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001DA86 <AmiBlitz3_noFPU_r470.ab3@901>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001DABE <AmiBlitz3_noFPU_r470.ab3@902>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001DAF6 <AmiBlitz3_noFPU_r470.ab3@903>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001DB2E <AmiBlitz3_noFPU_r470.ab3@904>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001DB66 <AmiBlitz3_noFPU_r470.ab3@905>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001DB9E <AmiBlitz3_noFPU_r470.ab3@906>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001DBD6 <AmiBlitz3_noFPU_r470.ab3@907>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001DC0E <AmiBlitz3_noFPU_r470.ab3@908>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001DC46 <AmiBlitz3_noFPU_r470.ab3@909>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001DC7E <AmiBlitz3_noFPU_r470.ab3@910>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001DCB6 <AmiBlitz3_noFPU_r470.ab3@911>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001DCEE <AmiBlitz3_noFPU_r470.ab3@912>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001DD26 <AmiBlitz3_noFPU_r470.ab3@913>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001DD5E <AmiBlitz3_noFPU_r470.ab3@914>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001DD96 <AmiBlitz3_noFPU_r470.ab3@917>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001DD9C <AmiBlitz3_noFPU_r470.ab3@919>   CLR.w returncode_org
0001DDC6 <AmiBlitz3_noFPU_r470.ab3@921>   !basic
0001DDD0 <AmiBlitz3_noFPU_r470.ab3@922>   If CLIMode
0001DE42 <AmiBlitz3_noFPU_r470.ab3@923>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001DE60 <AmiBlitz3_noFPU_r470.ab3@925>   !asm
0001DE66 <AmiBlitz3_noFPU_r470.ab3@929>   TST.b start_without_libs
0001DE6A <AmiBlitz3_noFPU_r470.ab3@930>   BNE skip_loading_libs
0001DE6E <AmiBlitz3_noFPU_r470.ab3@931>     BSR.w call_setpointerbusy
0001DE78 <AmiBlitz3_noFPU_r470.ab3@932>     MOVE.l #$FFFFffff,linenumat
0001DE7C <AmiBlitz3_noFPU_r470.ab3@933>     BSR.w get_libraries
0001DE82 <AmiBlitz3_noFPU_r470.ab3@934>     JSR init_libraries
0001DE86 <AmiBlitz3_noFPU_r470.ab3@935>     BSR.w init_buffers
0001DE8A <AmiBlitz3_noFPU_r470.ab3@936>     BSR.w call_setpointernormal
0001DE8C <AmiBlitz3_noFPU_r470.ab3@941>   MOVEQ.l #-$01,D0
0001DE92 <AmiBlitz3_noFPU_r470.ab3@942>   MOVEA.l _execbase,A6
0001DE96 <AmiBlitz3_noFPU_r470.ab3@943>   JSR _AllocSignal(A6)
0001DE9C <AmiBlitz3_noFPU_r470.ab3@944>   MOVE.l D0,signalNum
0001DE9E <AmiBlitz3_noFPU_r470.ab3@945>   MOVEQ.l #$00,D1
0001DEA0 <AmiBlitz3_noFPU_r470.ab3@946>   BSET D0,D1
0001DEA6 <AmiBlitz3_noFPU_r470.ab3@947>   MOVE.l D1,signals
0001DEAC <AmiBlitz3_noFPU_r470.ab3@951>   MOVE.l #str_defaultdbug,D1
0001DEB0 <AmiBlitz3_noFPU_r470.ab3@952>   MOVEA.l _dosbase(PC),A6
0001DEB4 <AmiBlitz3_noFPU_r470.ab3@953>   JSR _LoadSeg(A6)
0001DEBA <AmiBlitz3_noFPU_r470.ab3@954>   MOVE.l D0,ptr_seg_debugger
0001DEBC <AmiBlitz3_noFPU_r470.ab3@955>   TST.l d0
0001DEC0 <AmiBlitz3_noFPU_r470.ab3@956>   BNE ok_12
0001DEEA <AmiBlitz3_noFPU_r470.ab3@957>     !basic
0001DF4C <AmiBlitz3_noFPU_r470.ab3@958>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001DF6A <AmiBlitz3_noFPU_r470.ab3@959>     !asm
0001DF70 <AmiBlitz3_noFPU_r470.ab3@962>   TST.l CLIMode
0001DF74 <AmiBlitz3_noFPU_r470.ab3@963>   BEQ run_ped
0001DF9E <AmiBlitz3_noFPU_r470.ab3@969>   !basic
0001DFA4 <AmiBlitz3_noFPU_r470.ab3@970>   err.l = False
0001DFD0 <AmiBlitz3_noFPU_r470.ab3@978>   If cli_sourcefile
0001DFF0 <AmiBlitz3_noFPU_r470.ab3@979>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001DFFA <AmiBlitz3_noFPU_r470.ab3@980>     If lock
0001E01E <AmiBlitz3_noFPU_r470.ab3@981>       NameFromLock_ lock,&cli_tempstr,1024
0001E048 <AmiBlitz3_noFPU_r470.ab3@982>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E058 <AmiBlitz3_noFPU_r470.ab3@983>       UnLock_ lock
0001E084 <AmiBlitz3_noFPU_r470.ab3@986>     If cli_exefile
0001E0D6 <AmiBlitz3_noFPU_r470.ab3@987>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E12E <AmiBlitz3_noFPU_r470.ab3@988>       path.s = dos_PathPart{cli_exefile}
0001E14E <AmiBlitz3_noFPU_r470.ab3@989>       lock.l = Lock_(&path,#ACCESS_READ)
0001E158 <AmiBlitz3_noFPU_r470.ab3@990>       If lock
0001E17C <AmiBlitz3_noFPU_r470.ab3@991>         NameFromLock_ lock,&cli_tempstr,1024
0001E1A6 <AmiBlitz3_noFPU_r470.ab3@992>         path.s = Peek.s(&cli_tempstr)
0001E254 <AmiBlitz3_noFPU_r470.ab3@993>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E264 <AmiBlitz3_noFPU_r470.ab3@994>         UnLock_ lock
0001E2AE <AmiBlitz3_noFPU_r470.ab3@1005>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E322 <AmiBlitz3_noFPU_r470.ab3@1006> 
0001E32C <AmiBlitz3_noFPU_r470.ab3@1007>   *PreProcessor.preprocessor = preproc_Create{}
0001E33C <AmiBlitz3_noFPU_r470.ab3@1008>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E36E <AmiBlitz3_noFPU_r470.ab3@1009>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E382 <AmiBlitz3_noFPU_r470.ab3@1010>   If *PreProcessor\tokens=#NULL
0001E3FC <AmiBlitz3_noFPU_r470.ab3@1011>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E406 <AmiBlitz3_noFPU_r470.ab3@1012>     preproc_QueryTokens{*PreProcessor}
0001E438 <AmiBlitz3_noFPU_r470.ab3@1013>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E484 <AmiBlitz3_noFPU_r470.ab3@1021>   If cli_sourcefile><"" AND err=False
0001E52A <AmiBlitz3_noFPU_r470.ab3@1022>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E55C <AmiBlitz3_noFPU_r470.ab3@1023>     succ=LoadSource{cli_sourcefile}
0001E566 <AmiBlitz3_noFPU_r470.ab3@1024>     If succ
0001E59E <AmiBlitz3_noFPU_r470.ab3@1025> 
0001E618 <AmiBlitz3_noFPU_r470.ab3@1026>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001E65A <AmiBlitz3_noFPU_r470.ab3@1027> 
0001E664 <AmiBlitz3_noFPU_r470.ab3@1029>         If comerr
0001E66A <AmiBlitz3_noFPU_r470.ab3@1031>         Else
0001E670 <AmiBlitz3_noFPU_r470.ab3@1035>     Else
0001E6C0 <AmiBlitz3_noFPU_r470.ab3@1036>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001E70C <AmiBlitz3_noFPU_r470.ab3@1040>   If cli_savefile><"" AND err=False
0001E786 <AmiBlitz3_noFPU_r470.ab3@1041>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001E7B4 <AmiBlitz3_noFPU_r470.ab3@1042>     SaveSource{cli_savefile}
0001E800 <AmiBlitz3_noFPU_r470.ab3@1045>   If cli_dumpfile><"" AND err=False
0001E84A <AmiBlitz3_noFPU_r470.ab3@1046>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001E880 <AmiBlitz3_noFPU_r470.ab3@1047>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001E88A <AmiBlitz3_noFPU_r470.ab3@1050>   If cli_run
0001E89E <AmiBlitz3_noFPU_r470.ab3@1051>     If comerr=False
0001E8CA <AmiBlitz3_noFPU_r470.ab3@1052>       If cli_exefile
0001E944 <AmiBlitz3_noFPU_r470.ab3@1053>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001E97A <AmiBlitz3_noFPU_r470.ab3@1054> 
0001E9C4 <AmiBlitz3_noFPU_r470.ab3@1056>       If cli_verbose>=1 Then NPrint "Running program..."
0001E9D2 <AmiBlitz3_noFPU_r470.ab3@1057> 
0001E9D4 <AmiBlitz3_noFPU_r470.ab3@1059>         CLR.l d0
0001EA12 <AmiBlitz3_noFPU_r470.ab3@1060>         !ComData_GetB{comByte_RunningFlag,D0}
0001EA16 <AmiBlitz3_noFPU_r470.ab3@1061>         running.l = PutD0
0001EA32 <AmiBlitz3_noFPU_r470.ab3@1062>         If running Then Delay_ 50
0001EA46 <AmiBlitz3_noFPU_r470.ab3@1064>       Until running=False
0001EA5A <AmiBlitz3_noFPU_r470.ab3@1065>       If Peek.l(?_runerror)
0001EAAA <AmiBlitz3_noFPU_r470.ab3@1066>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001EABC <AmiBlitz3_noFPU_r470.ab3@1077>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001EB06 <AmiBlitz3_noFPU_r470.ab3@1078>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001EB0C <AmiBlitz3_noFPU_r470.ab3@1079>   DeinitEmulatedPED{}
0001EB2A <AmiBlitz3_noFPU_r470.ab3@1081>   !asm
0001EB30 <AmiBlitz3_noFPU_r470.ab3@1082> JMP terminate_ab3
0001EB36 <AmiBlitz3_noFPU_r470.ab3@1087>   MOVEA.l ped_startup_addr,A1
0001EB3C <AmiBlitz3_noFPU_r470.ab3@1088>   LEA str_tempfilename,A0
0001EB3E <AmiBlitz3_noFPU_r470.ab3@1089>   JSR (A1)
0001EB44 <AmiBlitz3_noFPU_r470.ab3@1096>   MOVE.l signalNum,D0
0001EB4A <AmiBlitz3_noFPU_r470.ab3@1097>   MOVEA.l _execbase,A6
0001EB4E <AmiBlitz3_noFPU_r470.ab3@1098>   JSR _FreeSignal(A6)
0001EB54 <AmiBlitz3_noFPU_r470.ab3@1100>   MOVE.l ptr_seg_debugger,D1
0001EB58 <AmiBlitz3_noFPU_r470.ab3@1101>   BEQ.b skip_unload_debugger
0001EB5C <AmiBlitz3_noFPU_r470.ab3@1102>     MOVEA.l _dosbase(PC),A6
0001EB60 <AmiBlitz3_noFPU_r470.ab3@1103>     JSR _UnLoadSeg(A6)
0001EB64 <AmiBlitz3_noFPU_r470.ab3@1106>   BSR.w Aclearallvars
0001EB68 <AmiBlitz3_noFPU_r470.ab3@1107>   BSR.w free_residents
0001EB6E <AmiBlitz3_noFPU_r470.ab3@1108>   JSR free_blitzlibs
0001EB74 <AmiBlitz3_noFPU_r470.ab3@1111>   MOVE.l ptr_seg_ped,D1
0001EB78 <AmiBlitz3_noFPU_r470.ab3@1112>   BEQ freemem_and_quit
0001EB7C <AmiBlitz3_noFPU_r470.ab3@1113>   MOVEA.l _dosbase(PC),A6
0001EB80 <AmiBlitz3_noFPU_r470.ab3@1114>   JSR _UnLoadSeg(A6)
0001EB84 <AmiBlitz3_noFPU_r470.ab3@1115>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001EBAE <AmiBlitz3_noFPU_r470.ab3@1118>   !basic
0001EC72 <AmiBlitz3_noFPU_r470.ab3@1119> 
0001EC90 <AmiBlitz3_noFPU_r470.ab3@1120>   !asm
0001EC94 <AmiBlitz3_noFPU_r470.ab3@1121>   BRA freemem_and_quit
0001ECBE <AmiBlitz3_noFPU_r470.ab3@1124>   !basic
0001ED82 <AmiBlitz3_noFPU_r470.ab3@1125>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001EDA0 <AmiBlitz3_noFPU_r470.ab3@1126>   !asm
0001EDA4 <AmiBlitz3_noFPU_r470.ab3@1130>   BSR.w freeallox
0001EDAA <AmiBlitz3_noFPU_r470.ab3@1131>   MOVEA.l ptr_macrobuffer_begin,A1
0001EDAC <AmiBlitz3_noFPU_r470.ab3@1132>   MOVE.l -(a1),D0
0001EDAE <AmiBlitz3_noFPU_r470.ab3@1133>   ADDQ.l #4,d0
0001EDB4 <AmiBlitz3_noFPU_r470.ab3@1134>   MOVEA.l _execbase,A6
0001EDB8 <AmiBlitz3_noFPU_r470.ab3@1135>   JSR _FreeMem(A6)
0001EDBE <AmiBlitz3_noFPU_r470.ab3@1138>   MOVEA.l _dosbase,A1
0001EDC4 <AmiBlitz3_noFPU_r470.ab3@1139>   MOVEA.l _execbase,A6
0001EDC8 <AmiBlitz3_noFPU_r470.ab3@1140>   JSR _CloseLibrary(A6)
0001EDCE <AmiBlitz3_noFPU_r470.ab3@1142>   MOVEA.l constpcat,A1
0001EDD4 <AmiBlitz3_noFPU_r470.ab3@1143>   MOVE.l constmaxpc,D0
0001EDDA <AmiBlitz3_noFPU_r470.ab3@1144>   MOVEA.l _execbase,A6
0001EDDE <AmiBlitz3_noFPU_r470.ab3@1145>   JSR _FreeMem(A6)
0001EDE4 <AmiBlitz3_noFPU_r470.ab3@1148>   MOVEA.l _mathffpbase,A1
0001EDEA <AmiBlitz3_noFPU_r470.ab3@1149>   MOVEA.l _execbase,A6
0001EDEE <AmiBlitz3_noFPU_r470.ab3@1150>   JSR _CloseLibrary(A6)
0001EDF4 <AmiBlitz3_noFPU_r470.ab3@1160>     MOVEA.l _execbase,A6
0001EDFA <AmiBlitz3_noFPU_r470.ab3@1161>     MOVE.l mempool,a0
0001EDFE <AmiBlitz3_noFPU_r470.ab3@1162>     JSR _DeletePool(a6)
0001EE04 <AmiBlitz3_noFPU_r470.ab3@1163>     CLR.l pushat
0001EE0A <AmiBlitz3_noFPU_r470.ab3@1170>   JSR free_unusedfunctions
0001EE0C <AmiBlitz3_noFPU_r470.ab3@1171>   MOVEQ #0,d0
0001EE1A <AmiBlitz3_noFPU_r470.ab3@1174>   !exitasm
0001EE52 <AmiBlitz3_noFPU_r470.ab3@1175>   If dynassign<>""
0001EE5C <AmiBlitz3_noFPU_r470.ab3@1176>     If *AssignSema
0001EE6C <AmiBlitz3_noFPU_r470.ab3@1177>       ReleaseSemaphore_ *AssignSema
0001EE84 <AmiBlitz3_noFPU_r470.ab3@1178>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001EF18 <AmiBlitz3_noFPU_r470.ab3@1179>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001EF52 <AmiBlitz3_noFPU_r470.ab3@1180>         dos_RemAssign{dynassign}
0001EF62 <AmiBlitz3_noFPU_r470.ab3@1181>         RemSemaphore_ *AssignSema
0001EF72 <AmiBlitz3_noFPU_r470.ab3@1182>         ReleaseSemaphore_ *AssignSema
0001EFA8 <AmiBlitz3_noFPU_r470.ab3@1183>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001EFB8 <AmiBlitz3_noFPU_r470.ab3@1184>         FreeVec_ *AssignSema
0001EFC0 <AmiBlitz3_noFPU_r470.ab3@1185>         *AssignSema = #NULL
0001EFEE <AmiBlitz3_noFPU_r470.ab3@1189>   SetCurrentDir{cli_path}
0001F010 <AmiBlitz3_noFPU_r470.ab3@1190>   !coutclose
0001F016 <AmiBlitz3_noFPU_r470.ab3@1191> End
0001F022 <AmiBlitz3_noFPU_r470.ab3@1196> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F026 <AmiBlitz3_noFPU_r470.ab3@1197> _dosbase:           Ds.l 1
0001F02C <AmiBlitz3_noFPU_r470.ab3@1201>   MOVEA.l _execbase,A6
0001F032 <AmiBlitz3_noFPU_r470.ab3@1202>   LEA str_doslibrary,A1
0001F036 <AmiBlitz3_noFPU_r470.ab3@1203>   JSR _OldOpenLibrary(A6)
0001F03C <AmiBlitz3_noFPU_r470.ab3@1204>   MOVE.l D0,_dosbase
0001F03E <AmiBlitz3_noFPU_r470.ab3@1205> RTS
0001F044 <AmiBlitz3_noFPU_r470.ab3@1209>   MOVEA.l #str_mathffpname,A1
0001F04A <AmiBlitz3_noFPU_r470.ab3@1210>   MOVEA.l _execbase,A6
0001F04E <AmiBlitz3_noFPU_r470.ab3@1211>   JSR _OldOpenLibrary(A6)
0001F054 <AmiBlitz3_noFPU_r470.ab3@1212>   MOVE.l D0,_mathffpbase
0001F056 <AmiBlitz3_noFPU_r470.ab3@1213> RTS
0001F088 <AmiBlitz3_noFPU_r470.ab3@1221> !ComData_JMP{comFunc_SetNormalPointer}
0001F0BA <AmiBlitz3_noFPU_r470.ab3@1229> !ComData_JMP{comFunc_SetBusyPointer}
0001F0E4 <AmiBlitz3_noFPU_r470.ab3@1233>   !basic
0001F0E8 <AmiBlitz3_noFPU_r470.ab3@1234>   ab3save_filenameP.l = PutD0
0001F0F2 <AmiBlitz3_noFPU_r470.ab3@1235>   If ab3save_filenameP
0001F11A <AmiBlitz3_noFPU_r470.ab3@1236>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F148 <AmiBlitz3_noFPU_r470.ab3@1238>     SaveSource{ab3save_filename}
0001F14E <AmiBlitz3_noFPU_r470.ab3@1239>   Else
0001F188 <AmiBlitz3_noFPU_r470.ab3@1240>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F1A6 <AmiBlitz3_noFPU_r470.ab3@1242>   !asm
0001F1A8 <AmiBlitz3_noFPU_r470.ab3@1243>   RTS
0001F1D2 <AmiBlitz3_noFPU_r470.ab3@1246>   !basic
0001F1D6 <AmiBlitz3_noFPU_r470.ab3@1247>   ab3save_filenameP.l = PutD0
0001F1E0 <AmiBlitz3_noFPU_r470.ab3@1248>   If ab3save_filenameP
0001F208 <AmiBlitz3_noFPU_r470.ab3@1249>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F236 <AmiBlitz3_noFPU_r470.ab3@1250>     LoadSource{ab3save_filename}
0001F23C <AmiBlitz3_noFPU_r470.ab3@1251>   Else
0001F276 <AmiBlitz3_noFPU_r470.ab3@1252>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F294 <AmiBlitz3_noFPU_r470.ab3@1254>   !asm
0001F296 <AmiBlitz3_noFPU_r470.ab3@1255>   RTS
0001F2C0 <AmiBlitz3_noFPU_r470.ab3@1258>   !basic
0001F2C6 <AmiBlitz3_noFPU_r470.ab3@1259>   ClearSource{}
0001F2E4 <AmiBlitz3_noFPU_r470.ab3@1260>   !asm
0001F2E6 <AmiBlitz3_noFPU_r470.ab3@1261>   RTS
0001F310 <AmiBlitz3_noFPU_r470.ab3@1264>   !basic
0001F316 <AmiBlitz3_noFPU_r470.ab3@1265>   OpenConsoleFake{}
0001F334 <AmiBlitz3_noFPU_r470.ab3@1266>   !asm
0001F336 <AmiBlitz3_noFPU_r470.ab3@1267>   RTS
0001F360 <AmiBlitz3_noFPU_r470.ab3@1271>   !basic
0001F366 <AmiBlitz3_noFPU_r470.ab3@1272>   CloseConsoleFake{}
0001F384 <AmiBlitz3_noFPU_r470.ab3@1273>   !asm
0001F386 <AmiBlitz3_noFPU_r470.ab3@1274>   RTS
0001F38C <AmiBlitz3_noFPU_r470.ab3@1278>   MOVE.w d6,menuitemdebug
0001F3B6 <AmiBlitz3_noFPU_r470.ab3@1279>   !basic
0001F3C8 <AmiBlitz3_noFPU_r470.ab3@1280>   menuitemx.l = Peek.w(?menuitemdebug)
0001F3EE <AmiBlitz3_noFPU_r470.ab3@1281>   If menuitemx>16 OR  menuitemx<0
0001F462 <AmiBlitz3_noFPU_r470.ab3@1282>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F46A <AmiBlitz3_noFPU_r470.ab3@1283>     menuitemx=0
0001F47A <AmiBlitz3_noFPU_r470.ab3@1285>   Poke.w ?menuitemdebug,menuitemx
0001F498 <AmiBlitz3_noFPU_r470.ab3@1286>   !asm
0001F49E <AmiBlitz3_noFPU_r470.ab3@1287>   MOVE.w menuitemdebug,d6
0001F4A4 <AmiBlitz3_noFPU_r470.ab3@1290>   MOVE.l A5,firstitem_
0001F4AA <AmiBlitz3_noFPU_r470.ab3@1291>   MOVE.w D7,numlines_org
0001F4B0 <AmiBlitz3_noFPU_r470.ab3@1292>   MOVE.l d7,numlines
0001F4B2 <AmiBlitz3_noFPU_r470.ab3@1293>   LSL.w #2,D6
0001F4B8 <AmiBlitz3_noFPU_r470.ab3@1294>   LEA menu_items,A0
0001F4BC <AmiBlitz3_noFPU_r470.ab3@1295>   MOVEA.l $0(A0,D6.W),A0
0001F4C6 <AmiBlitz3_noFPU_r470.ab3@1296>   MOVE.l #$FFFFffff,linenumat
0001F4D0 <AmiBlitz3_noFPU_r470.ab3@1297>   MOVE.l #$FFFFffff,compilelinecounter
0001F4D2 <AmiBlitz3_noFPU_r470.ab3@1300>   JSR (A0)                              ; jsr to the function for the menuitem
0001F4D8 <AmiBlitz3_noFPU_r470.ab3@1301>   MOVE.l compilelinecounter,D0
0001F4DA <AmiBlitz3_noFPU_r470.ab3@1302> RTS
0001F4DE <AmiBlitz3_noFPU_r470.ab3@1304> menuitemdebug: Dc.l 0
0001F4E2 <AmiBlitz3_noFPU_r470.ab3@1306> mempool                Dc.l 0
0001F4F8 <AmiBlitz3_noFPU_r470.ab3@1307> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F4FE <AmiBlitz3_noFPU_r470.ab3@1308> dloaderr:             JSR handle_compileerror
0001F51A <AmiBlitz3_noFPU_r470.ab3@1309>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F558 <AmiBlitz3_noFPU_r470.ab3@1317>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F55E <AmiBlitz3_noFPU_r470.ab3@1318>   LEA str_loaddebugmessage,A2
0001F564 <AmiBlitz3_noFPU_r470.ab3@1319>   LEA str_blitz3assign,A0
0001F56A <AmiBlitz3_noFPU_r470.ab3@1320>   LEA str_temp_debugmodulename,A1
0001F56C <AmiBlitz3_noFPU_r470.ab3@1322>   JSR (A3)                                                  ;open ped filerequest
0001F570 <AmiBlitz3_noFPU_r470.ab3@1324>   BEQ.w menu_loaddebugmodule_noload
0001F576 <AmiBlitz3_noFPU_r470.ab3@1325>   MOVE.l D0,ptr_temp_debugmodule
0001F57A <AmiBlitz3_noFPU_r470.ab3@1326>   BSR.w call_setpointerbusy
0001F580 <AmiBlitz3_noFPU_r470.ab3@1327> 
0001F586 <AmiBlitz3_noFPU_r470.ab3@1328>   MOVE.l A7,errstack
0001F590 <AmiBlitz3_noFPU_r470.ab3@1329>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F596 <AmiBlitz3_noFPU_r470.ab3@1330>   MOVE.l ptr_temp_debugmodule,D1
0001F59A <AmiBlitz3_noFPU_r470.ab3@1332>   MOVEA.l _dosbase(PC),A6
0001F59E <AmiBlitz3_noFPU_r470.ab3@1333>   JSR _LoadSeg(A6)
0001F5A0 <AmiBlitz3_noFPU_r470.ab3@1334>   MOVE.l D0,D7
0001F5A4 <AmiBlitz3_noFPU_r470.ab3@1335>   BEQ.w dloaderr
0001F5AA <AmiBlitz3_noFPU_r470.ab3@1336>   MOVE.l ptr_seg_debugger,D1
0001F5AE <AmiBlitz3_noFPU_r470.ab3@1337>   BEQ.b menu_loaddebugmodule_ndseg
0001F5B2 <AmiBlitz3_noFPU_r470.ab3@1338>   MOVEA.l _dosbase(PC),A6
0001F5B6 <AmiBlitz3_noFPU_r470.ab3@1339>   JSR _UnLoadSeg(A6)
0001F5BA <AmiBlitz3_noFPU_r470.ab3@1340>   BSR.w call_setpointernormal
0001F5C0 <AmiBlitz3_noFPU_r470.ab3@1343>   MOVE.l D7,ptr_seg_debugger
0001F5C2 <AmiBlitz3_noFPU_r470.ab3@1346> RTS
0001F5E0 <AmiBlitz3_noFPU_r470.ab3@1349> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001F6A0 <AmiBlitz3_noFPU_r470.ab3@1350> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001F760 <AmiBlitz3_noFPU_r470.ab3@1351> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001F764 <AmiBlitz3_noFPU_r470.ab3@1352> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001F78E <AmiBlitz3_noFPU_r470.ab3@1356>   !basic
0001F7B8 <AmiBlitz3_noFPU_r470.ab3@1357>   exepath.s = Peek.s(?exepath)
0001F7E2 <AmiBlitz3_noFPU_r470.ab3@1358>   exefile.s = Peek.s(?exefilename)
0001F862 <AmiBlitz3_noFPU_r470.ab3@1359>   exefile.s = dos_AddPart{exepath,exefile}
0001F89A <AmiBlitz3_noFPU_r470.ab3@1360>   Poke.s ?tempspace,exefile
0001F8B8 <AmiBlitz3_noFPU_r470.ab3@1361>   !asm
0001F8BE <AmiBlitz3_noFPU_r470.ab3@1382>   LEA tempspace,a0
0001F8C0 <AmiBlitz3_noFPU_r470.ab3@1383>   MOVE.l a0,d0
0001F8C4 <AmiBlitz3_noFPU_r470.ab3@1384> BRA newcreate2
0001F8EE <AmiBlitz3_noFPU_r470.ab3@1390>   !basic
0001F918 <AmiBlitz3_noFPU_r470.ab3@1391>   request_exename.s = Peek.s(?str_request_exename )
0001F974 <AmiBlitz3_noFPU_r470.ab3@1392>   request_exename   = !TRANS{request_exename}
0001F97A <AmiBlitz3_noFPU_r470.ab3@1393>   GetD0 &request_exename
0001F998 <AmiBlitz3_noFPU_r470.ab3@1394>   !asm
0001F99A <AmiBlitz3_noFPU_r470.ab3@1395>   MOVE.l D0,A2
0001F9D8 <AmiBlitz3_noFPU_r470.ab3@1398>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F9DE <AmiBlitz3_noFPU_r470.ab3@1400>   LEA exepath,A0
0001F9E4 <AmiBlitz3_noFPU_r470.ab3@1401>   LEA exefilename,A1
0001F9E6 <AmiBlitz3_noFPU_r470.ab3@1403>   JSR (A3)                                                 ;open ped filerequest
0001F9EA <AmiBlitz3_noFPU_r470.ab3@1405>   BEQ.w cancel_createexe
0001F9F4 <AmiBlitz3_noFPU_r470.ab3@1408>   ADD.l #1,number_of_builds
0001F9FA <AmiBlitz3_noFPU_r470.ab3@1411>   MOVE.l D0,ptr_newexefilename
0001FA02 <AmiBlitz3_noFPU_r470.ab3@1412>   MOVE.w #-1,debugversion
0001FA08 <AmiBlitz3_noFPU_r470.ab3@1413>   MOVE.w set_make_smallestcode,-(A7)
0001FA10 <AmiBlitz3_noFPU_r470.ab3@1417>     MOVE.w #1,makeexec
0001FA16 <AmiBlitz3_noFPU_r470.ab3@1418>     JSR ab3_OpenDebugFile
0001FA1A <AmiBlitz3_noFPU_r470.ab3@1419>     BSR.w startcompile
0001FA20 <AmiBlitz3_noFPU_r470.ab3@1420>     JSR ab3_CloseDebugFile
0001FA2A <AmiBlitz3_noFPU_r470.ab3@1421>     CMP.l #"NORE",reqmode
0001FA2E <AmiBlitz3_noFPU_r470.ab3@1422>   BEQ 'l1
0001FA34 <AmiBlitz3_noFPU_r470.ab3@1424>   TST.w anyerrs
0001FA38 <AmiBlitz3_noFPU_r470.ab3@1425>   BNE.b menu_createexecutable__skip
0001FA3C <AmiBlitz3_noFPU_r470.ab3@1426>   BSR.w savefile
0001FA42 <AmiBlitz3_noFPU_r470.ab3@1429>   MOVE.w (A7)+,set_make_smallestcode
0001FA44 <AmiBlitz3_noFPU_r470.ab3@1432> RTS
0001FA4C <AmiBlitz3_noFPU_r470.ab3@1436>   MOVE.w #-1,flag_noPED
0001FA4E <AmiBlitz3_noFPU_r470.ab3@1437> RTS
0001FA56 <AmiBlitz3_noFPU_r470.ab3@1441>   MOVE.w #-1,flag_noCLI
0001FA58 <AmiBlitz3_noFPU_r470.ab3@1442> RTS
0001FA82 <AmiBlitz3_noFPU_r470.ab3@1445>   !basic
0001FAAA <AmiBlitz3_noFPU_r470.ab3@1446>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001FABA <AmiBlitz3_noFPU_r470.ab3@1447>     Poke.w ?word_WriteDebugFileNow,0
0001FAD8 <AmiBlitz3_noFPU_r470.ab3@1448>   !asm
0001FADA <AmiBlitz3_noFPU_r470.ab3@1449> RTS
0001FB04 <AmiBlitz3_noFPU_r470.ab3@1452>   !basic
0001FB14 <AmiBlitz3_noFPU_r470.ab3@1453>   Poke.w ?word_WriteDebugFileNow,0
0001FB26 <AmiBlitz3_noFPU_r470.ab3@1454>   If dbg_fid>=0
0001FB3C <AmiBlitz3_noFPU_r470.ab3@1455>     file_Close{dbg_fid} : dbg_fid = -1
0001FB4E <AmiBlitz3_noFPU_r470.ab3@1457>   If dbg_fid.l<0
0001FB50 <AmiBlitz3_noFPU_r470.ab3@1458>     CLR.l d0
0001FB8E <AmiBlitz3_noFPU_r470.ab3@1459>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001FB92 <AmiBlitz3_noFPU_r470.ab3@1460>     dbg_Create.l = PutD0
0001FB9C <AmiBlitz3_noFPU_r470.ab3@1461>     If (dbg_Create) ; only when set!
0001FBAC <AmiBlitz3_noFPU_r470.ab3@1462>       exefileP.l = Peek.l (?ptr_newexefilename)
0001FBD4 <AmiBlitz3_noFPU_r470.ab3@1463>       exefile.s = ""
0001FC06 <AmiBlitz3_noFPU_r470.ab3@1464>       If exefileP Then exefile.s = Peek.s(exefileP)
0001FC3E <AmiBlitz3_noFPU_r470.ab3@1465>       If exefile><""
0001FC94 <AmiBlitz3_noFPU_r470.ab3@1466>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0001FCA6 <AmiBlitz3_noFPU_r470.ab3@1467>         If dbg_fid>=0
0001FCB8 <AmiBlitz3_noFPU_r470.ab3@1468>           Poke.w ?word_WriteDebugFileNow,-1
0001FCC4 <AmiBlitz3_noFPU_r470.ab3@1471>       oldhunkoffset.l = -1
0001FCEC <AmiBlitz3_noFPU_r470.ab3@1472>       oldfile.s       = ""
0001FD0A <AmiBlitz3_noFPU_r470.ab3@1475>   !asm
0001FD0C <AmiBlitz3_noFPU_r470.ab3@1476> RTS
0001FD12 <AmiBlitz3_noFPU_r470.ab3@1479> TST.w word_WriteDebugFileNow
0001FD16 <AmiBlitz3_noFPU_r470.ab3@1480> BEQ 'skipdebugfile
0001FD40 <AmiBlitz3_noFPU_r470.ab3@1481> !basic
0001FD52 <AmiBlitz3_noFPU_r470.ab3@1482>   If dbg_fid>=0
0001FD64 <AmiBlitz3_noFPU_r470.ab3@1483>     pass.l          = Peek.w(?pass)
0001FD76 <AmiBlitz3_noFPU_r470.ab3@1484>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0001FD9A <AmiBlitz3_noFPU_r470.ab3@1485> 
0001FDA0 <AmiBlitz3_noFPU_r470.ab3@1486>       oldhunkoffset.l = hunkoffset.l
0001FDD4 <AmiBlitz3_noFPU_r470.ab3@1487>       oldfile.s       = codefile.s
0001FDF0 <AmiBlitz3_noFPU_r470.ab3@1488>       If Peek.w (?ininclude)>0
0001FE00 <AmiBlitz3_noFPU_r470.ab3@1489>         codeline.l = Peek.l(?includeline);-1
0001FE70 <AmiBlitz3_noFPU_r470.ab3@1490>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0001FE76 <AmiBlitz3_noFPU_r470.ab3@1491>       Else
0001FEA4 <AmiBlitz3_noFPU_r470.ab3@1492>         !ComData_LEA{comStr_SourceName,A0}
0001FEA6 <AmiBlitz3_noFPU_r470.ab3@1493>         MOVE.l A0,D0
0001FEAA <AmiBlitz3_noFPU_r470.ab3@1494>         sourceP.l = PutD0
0001FED2 <AmiBlitz3_noFPU_r470.ab3@1495>         codefile.s = Peek.s(sourceP)
0001FEE2 <AmiBlitz3_noFPU_r470.ab3@1496>         codeline.l = Peek.l(?linenumat)
0001FF0A <AmiBlitz3_noFPU_r470.ab3@1498>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
0001FF5E <AmiBlitz3_noFPU_r470.ab3@1499>       If oldhunkoffset><hunkoffset OR oldfile><codefile
0001FF6E <AmiBlitz3_noFPU_r470.ab3@1506>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0001FF78 <AmiBlitz3_noFPU_r470.ab3@1507>         If *sourceLine
0001FF8E <AmiBlitz3_noFPU_r470.ab3@1508>           MaxLen detokenline.s = 65536
0001FFD0 <AmiBlitz3_noFPU_r470.ab3@1509>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0001FFE0 <AmiBlitz3_noFPU_r470.ab3@1510>          *tn.preprocessor = Peek.l(?include_preprocessor)
0002000C <AmiBlitz3_noFPU_r470.ab3@1511>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
0002003A <AmiBlitz3_noFPU_r470.ab3@1512>           If written>0 Then Poke.b &detokenline+written-1,0
00020064 <AmiBlitz3_noFPU_r470.ab3@1513>           sourceLineText.s = Peek.s(&detokenline)
0002006A <AmiBlitz3_noFPU_r470.ab3@1514>         Else
00020092 <AmiBlitz3_noFPU_r470.ab3@1515>           sourceLineText = "NULL"
0002015A <AmiBlitz3_noFPU_r470.ab3@1518>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
00020178 <AmiBlitz3_noFPU_r470.ab3@1524> !asm
0002017A <AmiBlitz3_noFPU_r470.ab3@1526> RTS
0002017C <AmiBlitz3_noFPU_r470.ab3@1528> word_WriteDebugFileNow: Dc.w 0
0002017E <AmiBlitz3_noFPU_r470.ab3@1530> flag_noPED:  Ds.w 1                                        ;closeed org source
00020180 <AmiBlitz3_noFPU_r470.ab3@1531> flag_noCLI:  Ds.w 1                                        ;nocli org source
00020184 <AmiBlitz3_noFPU_r470.ab3@1535>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002018A <AmiBlitz3_noFPU_r470.ab3@1536>   MOVEA.l _execbase,A6
0002018E <AmiBlitz3_noFPU_r470.ab3@1537>   JSR _CacheClearU(A6)
00020192 <AmiBlitz3_noFPU_r470.ab3@1538>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00020194 <AmiBlitz3_noFPU_r470.ab3@1539> RTS
00020198 <AmiBlitz3_noFPU_r470.ab3@1542>   MOVEM.l A2-A3,-(A7)
0002019E <AmiBlitz3_noFPU_r470.ab3@1543>   CLR.b doublepeek
000201A4 <AmiBlitz3_noFPU_r470.ab3@1544>   MOVE.l A5,lastsourcepos
000201AA <AmiBlitz3_noFPU_r470.ab3@1545>    JSR getchar
000201AE <AmiBlitz3_noFPU_r470.ab3@1546>   CMP.w #$2E,D0
000201B2 <AmiBlitz3_noFPU_r470.ab3@1547>    BEQ.w JL_0_49B4b
000201B8 <AmiBlitz3_noFPU_r470.ab3@1548>   MOVEA.l defaulttype,A2
000201BC <AmiBlitz3_noFPU_r470.ab3@1549>   CMP.w #$24,D0
000201C0 <AmiBlitz3_noFPU_r470.ab3@1550>    BNE.w JL_0_49CAb
000201C2 <AmiBlitz3_noFPU_r470.ab3@1551>   MOVEQ.l #$07,D1
000201C6 <AmiBlitz3_noFPU_r470.ab3@1552> BRA.w JL_0_49DEb
000201CC <AmiBlitz3_noFPU_r470.ab3@1555>   JSR getparameter2
000201D0 <AmiBlitz3_noFPU_r470.ab3@1556>   BEQ.w syntaxerrb
000201D6 <AmiBlitz3_noFPU_r470.ab3@1557>   LEA newtypebase,A2
000201DC <AmiBlitz3_noFPU_r470.ab3@1558>   JSR findtype
000201E0 <AmiBlitz3_noFPU_r470.ab3@1559>   BNE.w notypeerrb
000201EA <AmiBlitz3_noFPU_r470.ab3@1564>   MOVE.w oldqflag,instringon
000201F0 <AmiBlitz3_noFPU_r470.ab3@1565>   MOVEA.l lastsourcepos,A5
000201F6 <AmiBlitz3_noFPU_r470.ab3@1567>   MOVE.l a2,functionreturntype
000201FE <AmiBlitz3_noFPU_r470.ab3@1568>   CMPI.l #$100,$4(A2)
00020202 <AmiBlitz3_noFPU_r470.ab3@1569>   BLE.w 'isvar
00020204 <AmiBlitz3_noFPU_r470.ab3@1573>   MOVEQ #3,d1
00020208 <AmiBlitz3_noFPU_r470.ab3@1574>   BRA JL_0_49DEb
0002020C <AmiBlitz3_noFPU_r470.ab3@1581>   MOVE.w $6(A2),D1
00020212 <AmiBlitz3_noFPU_r470.ab3@1582>   CMP.w #8,8(a2)
00020216 <AmiBlitz3_noFPU_r470.ab3@1583>   BNE 'l1
0002021E <AmiBlitz3_noFPU_r470.ab3@1584>   MOVE.b #1,doublepeek
00020224 <AmiBlitz3_noFPU_r470.ab3@1588>   MOVE.w D1,convsize
00020228 <AmiBlitz3_noFPU_r470.ab3@1589>   MOVEM.l (A7)+,A2-A3
0002022A <AmiBlitz3_noFPU_r470.ab3@1590> RTS
00020230 <AmiBlitz3_noFPU_r470.ab3@1592> notypeerrb JMP notypeerr
00020236 <AmiBlitz3_noFPU_r470.ab3@1593> illtypeerrb JMP illtypeerr
0002023C <AmiBlitz3_noFPU_r470.ab3@1594> syntaxerrb JMP syntaxerr
00020246 <AmiBlitz3_noFPU_r470.ab3@1639>   ADD.l #1,number_of_builds
0002024C <AmiBlitz3_noFPU_r470.ab3@1641>   CLR.w debugversion
00020252 <AmiBlitz3_noFPU_r470.ab3@1642>   CLR.w flag_noPED
00020258 <AmiBlitz3_noFPU_r470.ab3@1643>   CLR.w flag_noCLI
00020260 <AmiBlitz3_noFPU_r470.ab3@1646>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020264 <AmiBlitz3_noFPU_r470.ab3@1647>     BSR.w startcompile
0002026E <AmiBlitz3_noFPU_r470.ab3@1648>     CMP.l #"NORE",reqmode
00020272 <AmiBlitz3_noFPU_r470.ab3@1649>   BEQ 'l1
00020278 <AmiBlitz3_noFPU_r470.ab3@1652>   TST.w anyerrs
0002027C <AmiBlitz3_noFPU_r470.ab3@1653>    BNE.w JL_0_3482
00020280 <AmiBlitz3_noFPU_r470.ab3@1655>   MOVE.w flag_noPED(PC),D1
00020284 <AmiBlitz3_noFPU_r470.ab3@1656>    BEQ.w skip_closingGUI
000202B6 <AmiBlitz3_noFPU_r470.ab3@1661>   !ComData_JSR{comFunc_CloseGUI}
000202BA <AmiBlitz3_noFPU_r470.ab3@1662> BRA.b runprogram
000202BE <AmiBlitz3_noFPU_r470.ab3@1666>   BSR.w compilerequester
000202C4 <AmiBlitz3_noFPU_r470.ab3@1669>   MOVEA.l _dosbase,A6
000202CA <AmiBlitz3_noFPU_r470.ab3@1670>   LEA exepath,a0
000202CC <AmiBlitz3_noFPU_r470.ab3@1671>   MOVE.l a0,d1
000202CE <AmiBlitz3_noFPU_r470.ab3@1672>   MOVEQ #-2,d2
000202D2 <AmiBlitz3_noFPU_r470.ab3@1673>   JSR _Lock(a6)                                            ;lock
000202D8 <AmiBlitz3_noFPU_r470.ab3@1674>   MOVE.l d0,exelock
000202DE <AmiBlitz3_noFPU_r470.ab3@1675>   MOVE.l #0,d1
000202E2 <AmiBlitz3_noFPU_r470.ab3@1676>   JSR _CurrentDir(A6)
000202E8 <AmiBlitz3_noFPU_r470.ab3@1677>   MOVE.l D0,lock_currentdir
000202EA <AmiBlitz3_noFPU_r470.ab3@1678>   MOVE.l D0,D1
000202EE <AmiBlitz3_noFPU_r470.ab3@1679>   JSR _CurrentDir(A6)
000202F4 <AmiBlitz3_noFPU_r470.ab3@1680>   CLR.l ptr_exetask
000202FA <AmiBlitz3_noFPU_r470.ab3@1689>   MOVE.l #str_process_name,D1
000202FC <AmiBlitz3_noFPU_r470.ab3@1690>   MOVEQ.l #$00,D2
00020302 <AmiBlitz3_noFPU_r470.ab3@1691>   MOVE.l #proc_seglist,D3
00020304 <AmiBlitz3_noFPU_r470.ab3@1692>   LSR.l #2,D3
0002030A <AmiBlitz3_noFPU_r470.ab3@1693>   MOVE.l stacksize,D4
00020310 <AmiBlitz3_noFPU_r470.ab3@1694>   MOVEA.l _dosbase,A6
00020314 <AmiBlitz3_noFPU_r470.ab3@1695>   JSR _CreateProc(A6)                                      ;runtask
00020316 <AmiBlitz3_noFPU_r470.ab3@1696>   TST.l D0
0002031A <AmiBlitz3_noFPU_r470.ab3@1697>    BEQ ErrorRunningProg
00020350 <AmiBlitz3_noFPU_r470.ab3@1699>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020356 <AmiBlitz3_noFPU_r470.ab3@1701>   TST.w flag_noPED
0002035A <AmiBlitz3_noFPU_r470.ab3@1702>    BNE.b JL_0_344E
0002035E <AmiBlitz3_noFPU_r470.ab3@1703>   BSR.w close_compilewin
00020364 <AmiBlitz3_noFPU_r470.ab3@1706>   CLR.l firstlocal
0002036A <AmiBlitz3_noFPU_r470.ab3@1707>   CLR.l firstglob
0002036E <AmiBlitz3_noFPU_r470.ab3@1708>   MOVE.w flag_noPED(PC),D1
00020372 <AmiBlitz3_noFPU_r470.ab3@1709>   BEQ.w skip_openGUI
000203A4 <AmiBlitz3_noFPU_r470.ab3@1713>   !ComData_JSR{comFunc_CreateGUI}
000203A6 <AmiBlitz3_noFPU_r470.ab3@1723> RTS
000203B0 <AmiBlitz3_noFPU_r470.ab3@1726> MOVE.l #1,_runerror
000203B4 <AmiBlitz3_noFPU_r470.ab3@1727> BRA JL_0_344E
000203B8 <AmiBlitz3_noFPU_r470.ab3@1729> _runerror: Dc.l 0
000203BC <AmiBlitz3_noFPU_r470.ab3@1730> lock_currentdir:    Ds.l 1                                          ;tasklock org source
000203C0 <AmiBlitz3_noFPU_r470.ab3@1731> ptr_exetask:        Ds.l 1                                          ;panictask org source
000203C4 <AmiBlitz3_noFPU_r470.ab3@1732> signalNum:          Ds.l 1                                          ;panicbit org source
000203C8 <AmiBlitz3_noFPU_r470.ab3@1733> signals:            Ds.l 1                                          ;panicmask org source
000203DE <AmiBlitz3_noFPU_r470.ab3@1735> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
000203E3 <AmiBlitz3_noFPU_r470.ab3@1736>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
000203E4 <AmiBlitz3_noFPU_r470.ab3@1737> Even4
000203E8 <AmiBlitz3_noFPU_r470.ab3@1739> ptr_ThisTask:       Ds.l 1                                          ;length
000203EC <AmiBlitz3_noFPU_r470.ab3@1740> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
000203F2 <AmiBlitz3_noFPU_r470.ab3@1744>   MOVEA.l $4,A0
000203FA <AmiBlitz3_noFPU_r470.ab3@1745>   MOVE.l  $114(A0),ptr_exetask
00020400 <AmiBlitz3_noFPU_r470.ab3@1747>   MOVEA.l _dosbase,A6
00020406 <AmiBlitz3_noFPU_r470.ab3@1748>   MOVE.l exelock,D1
0002040A <AmiBlitz3_noFPU_r470.ab3@1749>   JSR _CurrentDir(A6)
00020440 <AmiBlitz3_noFPU_r470.ab3@1754>   !ComData_SetB{comByte_RunningFlag,#1}
00020444 <AmiBlitz3_noFPU_r470.ab3@1760>   MOVE.w flag_noCLI(PC),D1
00020448 <AmiBlitz3_noFPU_r470.ab3@1761>    BNE.b skip_openconsole
0002047A <AmiBlitz3_noFPU_r470.ab3@1765>   !ComData_JSR{comFunc_OpenConsole}
0002047E <AmiBlitz3_noFPU_r470.ab3@1768>   BSR.w calcvbr
00020484 <AmiBlitz3_noFPU_r470.ab3@1769>   MOVEA.l vbr,A0
0002048A <AmiBlitz3_noFPU_r470.ab3@1774>   CLR.w dirmode
00020490 <AmiBlitz3_noFPU_r470.ab3@1775>   CLR.l firstglob
00020496 <AmiBlitz3_noFPU_r470.ab3@1776>   CLR.l firstlocal
0002049C <AmiBlitz3_noFPU_r470.ab3@1778>   MOVE.l stacksize,D2
000204A2 <AmiBlitz3_noFPU_r470.ab3@1779>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
000204A8 <AmiBlitz3_noFPU_r470.ab3@1780>   LEA str_cliarguments,A0                                   ;cli arguement
000204AE <AmiBlitz3_noFPU_r470.ab3@1781>   MOVEA.l destbufferstart,A1
000204B2 <AmiBlitz3_noFPU_r470.ab3@1782>   BSR.w Aclearcache
000204B4 <AmiBlitz3_noFPU_r470.ab3@1785>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
000204BA <AmiBlitz3_noFPU_r470.ab3@1787>   MOVEA.l vbr,A0
000204C0 <AmiBlitz3_noFPU_r470.ab3@1789>   CLR.l firstglob
000204C6 <AmiBlitz3_noFPU_r470.ab3@1790>   CLR.l firstlocal
000204CC <AmiBlitz3_noFPU_r470.ab3@1791>   MOVEA.l _dosbase,A6
000204D2 <AmiBlitz3_noFPU_r470.ab3@1792>   MOVE.l exelock,d1
000204D6 <AmiBlitz3_noFPU_r470.ab3@1793>   BEQ 'nolock
000204DA <AmiBlitz3_noFPU_r470.ab3@1794>   JSR _UnLock(a6)
00020510 <AmiBlitz3_noFPU_r470.ab3@1799>   !ComData_SetB{comByte_RunningFlag,#0}
00020514 <AmiBlitz3_noFPU_r470.ab3@1802>   MOVE.w flag_noCLI(PC),D1
00020518 <AmiBlitz3_noFPU_r470.ab3@1803>    BNE.b skip_closeconsole
0002054A <AmiBlitz3_noFPU_r470.ab3@1807>   !ComData_JSR{comFunc_CloseConsole}
00020552 <AmiBlitz3_noFPU_r470.ab3@1810>   MOVE.w #$0001,stopit
00020556 <AmiBlitz3_noFPU_r470.ab3@1811>   MOVE.l signals(PC),D0
0002055C <AmiBlitz3_noFPU_r470.ab3@1812>   MOVEA.l ptr_ThisTask,A1
00020562 <AmiBlitz3_noFPU_r470.ab3@1813>   MOVEA.l _execbase,A6
00020566 <AmiBlitz3_noFPU_r470.ab3@1814>   JSR _Signal(A6)
00020568 <AmiBlitz3_noFPU_r470.ab3@1815> RTS
0002056E <AmiBlitz3_noFPU_r470.ab3@1819>   MOVEA.l _execbase,A6
00020572 <AmiBlitz3_noFPU_r470.ab3@1820>   MOVE.w $128(A6),D0
00020574 <AmiBlitz3_noFPU_r470.ab3@1821>   MOVEQ.l #$00,D1
00020578 <AmiBlitz3_noFPU_r470.ab3@1822>   ANDI.w #$F,D0
0002057C <AmiBlitz3_noFPU_r470.ab3@1825>     BEQ.b calcvbr__skip
0002057E <AmiBlitz3_noFPU_r470.ab3@1826>     ADDQ.w #1,D1
00020580 <AmiBlitz3_noFPU_r470.ab3@1827>     LSR.w #1,D0
00020584 <AmiBlitz3_noFPU_r470.ab3@1828> BRA.b calcvbr_loop
00020586 <AmiBlitz3_noFPU_r470.ab3@1831>   MOVEQ.l #$00,D2
0002058A <AmiBlitz3_noFPU_r470.ab3@1832>   CMP.w #$2,D1
0002058E <AmiBlitz3_noFPU_r470.ab3@1833>    BCS.b calcvbr__skip2
00020594 <AmiBlitz3_noFPU_r470.ab3@1834>   MOVEA.l _execbase,A6
00020598 <AmiBlitz3_noFPU_r470.ab3@1835>   JSR _SuperState(A6)
0002059C <AmiBlitz3_noFPU_r470.ab3@1836>   Dc.l $4E7A2801                                           ;movec vbr,D2
000205A0 <AmiBlitz3_noFPU_r470.ab3@1837>   JSR _UserState(A6)
000205A6 <AmiBlitz3_noFPU_r470.ab3@1840>   MOVE.l D2,vbr
000205A8 <AmiBlitz3_noFPU_r470.ab3@1841> RTS
000205AE <AmiBlitz3_noFPU_r470.ab3@1845>   LEA instrtab,a0
000205B4 <AmiBlitz3_noFPU_r470.ab3@1846>   MOVE.l #labelhash-instrtab,d0
000205B6 <AmiBlitz3_noFPU_r470.ab3@1847>   ASR.l #2,d0
000205B8 <AmiBlitz3_noFPU_r470.ab3@1848>   SUBQ.l #1,d0
000205BA <AmiBlitz3_noFPU_r470.ab3@1851>   CLR.l (a0)+
000205BC <AmiBlitz3_noFPU_r470.ab3@1852>   SUBQ.l #1,d0
000205C0 <AmiBlitz3_noFPU_r470.ab3@1853>   BNE 'l10
000205C4 <AmiBlitz3_noFPU_r470.ab3@1854>   BSR.w call_setpointerbusy
000205C8 <AmiBlitz3_noFPU_r470.ab3@1855>   BSR.w free_userlibs
000205CC <AmiBlitz3_noFPU_r470.ab3@1856>   BSR.w scan_for_userlibs
000205D0 <AmiBlitz3_noFPU_r470.ab3@1857>   BSR.w JL_0_7082
000205D4 <AmiBlitz3_noFPU_r470.ab3@1858> BRA.w call_setpointernormal
000205FE <AmiBlitz3_noFPU_r470.ab3@1864>   !basic
00020638 <AmiBlitz3_noFPU_r470.ab3@1865>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020648 <AmiBlitz3_noFPU_r470.ab3@1867>   deflibNameP.l = Peek.l(?deflib)
00020652 <AmiBlitz3_noFPU_r470.ab3@1868>   If deflibNameP
00020684 <AmiBlitz3_noFPU_r470.ab3@1869>     If Peek.s(deflibNameP)<>""
000206CE <AmiBlitz3_noFPU_r470.ab3@1870>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
000206D4 <AmiBlitz3_noFPU_r470.ab3@1871>     Else
0002070E <AmiBlitz3_noFPU_r470.ab3@1872>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020714 <AmiBlitz3_noFPU_r470.ab3@1874>   Else
0002074E <AmiBlitz3_noFPU_r470.ab3@1875>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020788 <AmiBlitz3_noFPU_r470.ab3@1876>     error{"INTERNAL: Invalid deflib name pointer!"}
000207A6 <AmiBlitz3_noFPU_r470.ab3@1878>   !asm
000207AC <AmiBlitz3_noFPU_r470.ab3@1883>   MOVE.l #str_path_userlibs,D1
000207AE <AmiBlitz3_noFPU_r470.ab3@1884>   MOVEQ.l #-$02,D2
000207B4 <AmiBlitz3_noFPU_r470.ab3@1885>   MOVEA.l _dosbase,A6
000207B8 <AmiBlitz3_noFPU_r470.ab3@1886>   JSR _Lock(A6)
000207BA <AmiBlitz3_noFPU_r470.ab3@1887>   MOVE.l D0,D7
000207BE <AmiBlitz3_noFPU_r470.ab3@1888>    BEQ.w exit_get_libraries
000207C0 <AmiBlitz3_noFPU_r470.ab3@1889>   MOVE.l D7,D1
000207C6 <AmiBlitz3_noFPU_r470.ab3@1890>   MOVE.l #ptr_parameterstore,D2
000207CA <AmiBlitz3_noFPU_r470.ab3@1891>   JSR _Examine(A6)
000207CC <AmiBlitz3_noFPU_r470.ab3@1892>   TST.l D0
000207D0 <AmiBlitz3_noFPU_r470.ab3@1893>   BEQ.w unlock_and_exit_get_libraries
000207D6 <AmiBlitz3_noFPU_r470.ab3@1894>   MOVE.l fib_DirEntryType,D0
000207DA <AmiBlitz3_noFPU_r470.ab3@1895>   BMI.w unlock_and_exit_get_libraries
000207DC <AmiBlitz3_noFPU_r470.ab3@1900>     MOVE.l D7,D1
000207E2 <AmiBlitz3_noFPU_r470.ab3@1901>     MOVE.l #ptr_parameterstore,D2
000207E8 <AmiBlitz3_noFPU_r470.ab3@1902>     MOVEA.l _dosbase,A6
000207EC <AmiBlitz3_noFPU_r470.ab3@1903>     JSR _ExNext(A6)
000207EE <AmiBlitz3_noFPU_r470.ab3@1904>     TST.l D0
000207F2 <AmiBlitz3_noFPU_r470.ab3@1905>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
000207F8 <AmiBlitz3_noFPU_r470.ab3@1907>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
000207FC <AmiBlitz3_noFPU_r470.ab3@1908>     BPL.w scan_libsdrawer                                  ; skip directories
00020802 <AmiBlitz3_noFPU_r470.ab3@1910>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020806 <AmiBlitz3_noFPU_r470.ab3@1911>     BSR.w check_for_infoextention
0002080A <AmiBlitz3_noFPU_r470.ab3@1912>     BEQ.w scan_libsdrawer
00020810 <AmiBlitz3_noFPU_r470.ab3@1914>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020812 <AmiBlitz3_noFPU_r470.ab3@1915>     MOVEQ.l #$26,D0
00020814 <AmiBlitz3_noFPU_r470.ab3@1916>     MOVEQ.l #$01,D1
0002081A <AmiBlitz3_noFPU_r470.ab3@1917>     MOVE.l mempool,a0
0002081E <AmiBlitz3_noFPU_r470.ab3@1918>     JSR _AllocPooled(a6)
00020824 <AmiBlitz3_noFPU_r470.ab3@1920>     MOVEA.l _dosbase,A6
00020826 <AmiBlitz3_noFPU_r470.ab3@1921>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
0002082C <AmiBlitz3_noFPU_r470.ab3@1924>     LEA ptr_userlibs_list,A0                               ; pruefe liste
0002082E <AmiBlitz3_noFPU_r470.ab3@1927>     MOVE.l (A0),D5
00020832 <AmiBlitz3_noFPU_r470.ab3@1928>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020834 <AmiBlitz3_noFPU_r470.ab3@1929>     MOVEA.l D5,A2
00020836 <AmiBlitz3_noFPU_r470.ab3@1930>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
0002083C <AmiBlitz3_noFPU_r470.ab3@1933>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
0002083E <AmiBlitz3_noFPU_r470.ab3@1936>       MOVEQ.l #$00,D0
00020840 <AmiBlitz3_noFPU_r470.ab3@1937>       MOVE.b (A1)+,D0
00020844 <AmiBlitz3_noFPU_r470.ab3@1938>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00020846 <AmiBlitz3_noFPU_r470.ab3@1939>       MOVEQ.l #$00,D1
00020848 <AmiBlitz3_noFPU_r470.ab3@1940>       MOVE.b (A2)+,D1
0002084C <AmiBlitz3_noFPU_r470.ab3@1941>        BEQ.w JL_0_371C
0002086E <AmiBlitz3_noFPU_r470.ab3@1942>       !compare1                                            ;bsr.w tstalpha
00020872 <AmiBlitz3_noFPU_r470.ab3@1943>       BNE.w JL_0_3702
00020876 <AmiBlitz3_noFPU_r470.ab3@1944>       ANDI.w #$DF,D0
00020878 <AmiBlitz3_noFPU_r470.ab3@1947>       EXG.l D0,D1
0002089A <AmiBlitz3_noFPU_r470.ab3@1948>       !compare1                                            ;bsr.w tstalpha
0002089E <AmiBlitz3_noFPU_r470.ab3@1949>       BNE.w JL_0_3710
000208A2 <AmiBlitz3_noFPU_r470.ab3@1950>       ANDI.w #$DF,D0
000208A4 <AmiBlitz3_noFPU_r470.ab3@1953>       EXG.l D0,D1
000208A6 <AmiBlitz3_noFPU_r470.ab3@1954>       CMP.b D1,D0
000208AA <AmiBlitz3_noFPU_r470.ab3@1955>     BEQ.w JL_0_36E6
000208AE <AmiBlitz3_noFPU_r470.ab3@1956>     BCS.w JL_0_3722
000208B0 <AmiBlitz3_noFPU_r470.ab3@1959>     MOVEA.l D5,A0
000208B4 <AmiBlitz3_noFPU_r470.ab3@1960> BRA.w JL_0_36D6
000208B6 <AmiBlitz3_noFPU_r470.ab3@1963>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
000208B8 <AmiBlitz3_noFPU_r470.ab3@1964>     MOVE.l (A0),(A1)
000208BA <AmiBlitz3_noFPU_r470.ab3@1965>     MOVE.l A1,(A0)
000208BC <AmiBlitz3_noFPU_r470.ab3@1966>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
000208C0 <AmiBlitz3_noFPU_r470.ab3@1967>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
000208C6 <AmiBlitz3_noFPU_r470.ab3@1968>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
000208C8 <AmiBlitz3_noFPU_r470.ab3@1971>       MOVE.b (A0)+,(A1)+
000208CC <AmiBlitz3_noFPU_r470.ab3@1972>     BNE.w JL_0_3734
000208D0 <AmiBlitz3_noFPU_r470.ab3@1973> BRA.w scan_libsdrawer
000208D2 <AmiBlitz3_noFPU_r470.ab3@1976>   MOVE.l D7,D1
000208D8 <AmiBlitz3_noFPU_r470.ab3@1977>   MOVEA.l _dosbase,A6
000208DC <AmiBlitz3_noFPU_r470.ab3@1978>   JSR _UnLock(A6)
000208DE <AmiBlitz3_noFPU_r470.ab3@1979>   MOVEQ.l #-$01,D0
000208E0 <AmiBlitz3_noFPU_r470.ab3@1982> RTS
000208E2 <AmiBlitz3_noFPU_r470.ab3@1985>   MOVE.l D7,D1
000208E8 <AmiBlitz3_noFPU_r470.ab3@1986>   MOVEA.l _dosbase,A6
000208EC <AmiBlitz3_noFPU_r470.ab3@1987>   JSR _UnLock(A6)
000208EE <AmiBlitz3_noFPU_r470.ab3@1988>   MOVEQ.l #$00,D0
000208F0 <AmiBlitz3_noFPU_r470.ab3@1989> RTS
000208F6 <AmiBlitz3_noFPU_r470.ab3@1993>   MOVEA.l _execbase,A6
000208FC <AmiBlitz3_noFPU_r470.ab3@1994>   MOVEA.l ptr_userlibs_list,A2
00020902 <AmiBlitz3_noFPU_r470.ab3@1995>   CLR.l ptr_userlibs_list
00020906 <AmiBlitz3_noFPU_r470.ab3@1998>     CMPA.w #$0,A2
0002090A <AmiBlitz3_noFPU_r470.ab3@1999>     BEQ.w exit_free_userlib
0002090C <AmiBlitz3_noFPU_r470.ab3@2000>       MOVEA.l A2,A1
0002090E <AmiBlitz3_noFPU_r470.ab3@2001>       MOVEQ.l #$26,D0
00020910 <AmiBlitz3_noFPU_r470.ab3@2002>       MOVEA.l (A2),A2
00020916 <AmiBlitz3_noFPU_r470.ab3@2003>       MOVE.l mempool,a0
0002091C <AmiBlitz3_noFPU_r470.ab3@2004>       MOVEA.l _execbase,A6
00020920 <AmiBlitz3_noFPU_r470.ab3@2005>       JSR _FreePooled(A6)
00020924 <AmiBlitz3_noFPU_r470.ab3@2006> BRA.w loop_free_userlib
00020926 <AmiBlitz3_noFPU_r470.ab3@2009> RTS
00020928 <AmiBlitz3_noFPU_r470.ab3@2012> pass:  Dc.w 0                                             ; smallpass org source
0002092A <AmiBlitz3_noFPU_r470.ab3@2013> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020930 <AmiBlitz3_noFPU_r470.ab3@2017>   MOVE.l A7,errstack                                      ;startcompile
00020936 <AmiBlitz3_noFPU_r470.ab3@2026>   CLR.l reqmode
00020940 <AmiBlitz3_noFPU_r470.ab3@2028>   MOVE.l #Aclearallvars,errcont
0002094A <AmiBlitz3_noFPU_r470.ab3@2029>   MOVE.l #concomstack,concomsp
0002094E <AmiBlitz3_noFPU_r470.ab3@2037>   MOVE.w #1450,D0
00020950 <AmiBlitz3_noFPU_r470.ab3@2038>   LSR.w #3,D0
00020952 <AmiBlitz3_noFPU_r470.ab3@2039>   SUBQ.w #7,D0                                             ; 173
00020958 <AmiBlitz3_noFPU_r470.ab3@2040>   MOVE.w D0,progressbar_width
0002095A <AmiBlitz3_noFPU_r470.ab3@2041>   SWAP D0
0002095C <AmiBlitz3_noFPU_r470.ab3@2042>   CLR.w D0
00020962 <AmiBlitz3_noFPU_r470.ab3@2043>   MOVE.l numlines,d1
00020966 <AmiBlitz3_noFPU_r470.ab3@2044>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020968 <AmiBlitz3_noFPU_r470.ab3@2046>   TST.w D0
0002096C <AmiBlitz3_noFPU_r470.ab3@2047>   BNE.w JL_0_37C0
0002096E <AmiBlitz3_noFPU_r470.ab3@2048>   MOVEQ.l #-$01,D0
00020974 <AmiBlitz3_noFPU_r470.ab3@2051>   MOVE.w D0,progress_per_line
0002097C <AmiBlitz3_noFPU_r470.ab3@2060>   BTST #$7,use_debugger
00020980 <AmiBlitz3_noFPU_r470.ab3@2062>   BNE 'debugon
00020986 <AmiBlitz3_noFPU_r470.ab3@2063>   CLR.w debugmode
0002098A <AmiBlitz3_noFPU_r470.ab3@2064> BRA.b 'debugoff
00020990 <AmiBlitz3_noFPU_r470.ab3@2067>   SNE debugmode
000209C8 <AmiBlitz3_noFPU_r470.ab3@2075>   !ComData_SetB{comByte_DebugMode,debugmode}
000209CE <AmiBlitz3_noFPU_r470.ab3@2078>   CLR.w dirmode                                            ;direct mode flag
000209D4 <AmiBlitz3_noFPU_r470.ab3@2079>   CLR.w ezerr                                              ;quiet error
000209DA <AmiBlitz3_noFPU_r470.ab3@2080>   CLR.l currentfunction
000209E0 <AmiBlitz3_noFPU_r470.ab3@2081>   CLR.w connest
000209E6 <AmiBlitz3_noFPU_r470.ab3@2082>   CLR.w varmode
000209EC <AmiBlitz3_noFPU_r470.ab3@2083>   CLR.w proceduremode
000209F2 <AmiBlitz3_noFPU_r470.ab3@2084>   CLR.w ininclude
000209F8 <AmiBlitz3_noFPU_r470.ab3@2085>   CLR.w intstring
000209FE <AmiBlitz3_noFPU_r470.ab3@2086>   CLR.w pass
00020A06 <AmiBlitz3_noFPU_r470.ab3@2087>   MOVE.w #0,compiler_job
00020A0C <AmiBlitz3_noFPU_r470.ab3@2088>   CLR.l funcscanon
00020A12 <AmiBlitz3_noFPU_r470.ab3@2097>   CLR.l funcscanon
00020A16 <AmiBlitz3_noFPU_r470.ab3@2098>   BSR.w compileall
00020A1C <AmiBlitz3_noFPU_r470.ab3@2099> 
00020A22 <AmiBlitz3_noFPU_r470.ab3@2100>   TST.l errorcounter
00020A26 <AmiBlitz3_noFPU_r470.ab3@2101>   BEQ _skiperrorstop
00020A28 <AmiBlitz3_noFPU_r470.ab3@2102>   RTS
00020A2E <AmiBlitz3_noFPU_r470.ab3@2105>   MOVE.w dontwrite,d0
00020A32 <AmiBlitz3_noFPU_r470.ab3@2106>   CMP.w #1,d0
00020A36 <AmiBlitz3_noFPU_r470.ab3@2107>   BNE 'l3
00020A3C <AmiBlitz3_noFPU_r470.ab3@2108>   TST.l errorcounter
00020A40 <AmiBlitz3_noFPU_r470.ab3@2109>   BNE 'l3
00020A46 <AmiBlitz3_noFPU_r470.ab3@2110>   CLR.w dontwrite
00020A4A <AmiBlitz3_noFPU_r470.ab3@2111>   BSR compileall                                           ;if a function is not found
00020A50 <AmiBlitz3_noFPU_r470.ab3@2112>   ADDQ.w #1,pass
00020A8E <AmiBlitz3_noFPU_r470.ab3@2117>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020A92 <AmiBlitz3_noFPU_r470.ab3@2118>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020A98 <AmiBlitz3_noFPU_r470.ab3@2119>   LEA firstproc,a0
00020A9E <AmiBlitz3_noFPU_r470.ab3@2120>   CLR.l savefuncspace
00020AA0 <AmiBlitz3_noFPU_r470.ab3@2121>   MOVE.l (a0),d0
00020AA2 <AmiBlitz3_noFPU_r470.ab3@2125>     MOVE.l d0,a0
00020AA6 <AmiBlitz3_noFPU_r470.ab3@2126>     BEQ 'out
00020AAA <AmiBlitz3_noFPU_r470.ab3@2127>     TST.b isfunc(a0)
00020AAE <AmiBlitz3_noFPU_r470.ab3@2128>     BNE 'nex
00020AB2 <AmiBlitz3_noFPU_r470.ab3@2129>     MOVEM.l d2/a6/a0,-(a7)
00020AB4 <AmiBlitz3_noFPU_r470.ab3@2131>     MOVEQ #0,d0
00020AB8 <AmiBlitz3_noFPU_r470.ab3@2132>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020ABC <AmiBlitz3_noFPU_r470.ab3@2133>     SUB.w #$21+#funcentry_extend,d0
00020AC0 <AmiBlitz3_noFPU_r470.ab3@2134>     ADD.w #16,d0
00020AC6 <AmiBlitz3_noFPU_r470.ab3@2135>     MOVE.l #$10000,d1
00020AC8 <AmiBlitz3_noFPU_r470.ab3@2136>     MOVE.l d0,d2
00020ACE <AmiBlitz3_noFPU_r470.ab3@2137>     MOVEA.l _execbase,A6
00020AD2 <AmiBlitz3_noFPU_r470.ab3@2138>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00020AD4 <AmiBlitz3_noFPU_r470.ab3@2139>     MOVE.l d0,a1
00020AD8 <AmiBlitz3_noFPU_r470.ab3@2140>     MOVE.l d2,4(a1)
00020ADE <AmiBlitz3_noFPU_r470.ab3@2141>     MOVE.l unusedfunc,(a1)
00020AE4 <AmiBlitz3_noFPU_r470.ab3@2142>     MOVE.l d0,unusedfunc
00020AE8 <AmiBlitz3_noFPU_r470.ab3@2143>     MOVEM.l (a7)+,a6/a0/d2
00020AEC <AmiBlitz3_noFPU_r470.ab3@2144>     MOVE.l isfunc+1(a0),d0
00020AEE <AmiBlitz3_noFPU_r470.ab3@2145>     ADDQ.l #6,d0
00020AF4 <AmiBlitz3_noFPU_r470.ab3@2146>     ADD.l d0,savefuncspace
00020AF8 <AmiBlitz3_noFPU_r470.ab3@2149>     MOVE.l d0,8(a1)
00020AFC <AmiBlitz3_noFPU_r470.ab3@2150>     LEA 12(a1),a1
00020AFE <AmiBlitz3_noFPU_r470.ab3@2151>     MOVE.l a0,-(a7)
00020B02 <AmiBlitz3_noFPU_r470.ab3@2152>     LEA $21+#funcentry_extend(a0),a0
00020B04 <AmiBlitz3_noFPU_r470.ab3@2155>       MOVE.b (a0)+,(a1)+
00020B08 <AmiBlitz3_noFPU_r470.ab3@2156>     BNE 'l1
00020B0A <AmiBlitz3_noFPU_r470.ab3@2157>     MOVE.l (a7)+,a0
00020B0C <AmiBlitz3_noFPU_r470.ab3@2160>     MOVE.l (a0),d0
00020B10 <AmiBlitz3_noFPU_r470.ab3@2161> BRA 'lr1
00020B18 <AmiBlitz3_noFPU_r470.ab3@2164>   BTST #$7,make_smallestcode
00020B1C <AmiBlitz3_noFPU_r470.ab3@2165>   BEQ.b JL_0_3844                                           ;optimize for executable
00020B22 <AmiBlitz3_noFPU_r470.ab3@2166>   CLR.l morememadd
00020B26 <AmiBlitz3_noFPU_r470.ab3@2168>   BSR.w alloxadj
00020B2A <AmiBlitz3_noFPU_r470.ab3@2169>   BEQ.w JL_0_388A
00020B2E <AmiBlitz3_noFPU_r470.ab3@2172>   BSR.w compileall
00020B34 <AmiBlitz3_noFPU_r470.ab3@2173>   ADDQ.w #1,pass
00020B3A <AmiBlitz3_noFPU_r470.ab3@2176>   MOVE.w dontwrite,D1
00020B3E <AmiBlitz3_noFPU_r470.ab3@2177>   BEQ.w JL_0_38A2
00020B42 <AmiBlitz3_noFPU_r470.ab3@2197> BRA.w JL_0_3896
00020B4A <AmiBlitz3_noFPU_r470.ab3@2208>   MOVE.w #$FFFF,anyerrs
00020B4E <AmiBlitz3_noFPU_r470.ab3@2209> BRA.w JL_0_38A2
00020B52 <AmiBlitz3_noFPU_r470.ab3@2212>   BSR.w alloxinc                                          ;increase all by 50%
00020B56 <AmiBlitz3_noFPU_r470.ab3@2213>   BEQ.w Aclearallvars
00020B5A <AmiBlitz3_noFPU_r470.ab3@2214> BRA.w JL_0_3824
00020B5E <AmiBlitz3_noFPU_r470.ab3@2226> BRA.w JL_0_38A6                                            ;???????
00020B64 <AmiBlitz3_noFPU_r470.ab3@2230>   JSR freereps
00020B6A <AmiBlitz3_noFPU_r470.ab3@2231>   JSR freesels
00020B70 <AmiBlitz3_noFPU_r470.ab3@2232>   JSR AJL_0_6DF2
00020B76 <AmiBlitz3_noFPU_r470.ab3@2233>   JSR freepends
00020B7C <AmiBlitz3_noFPU_r470.ab3@2234>   JSR freeifs
00020B82 <AmiBlitz3_noFPU_r470.ab3@2235>   JSR AJL_0_C188
00020B88 <AmiBlitz3_noFPU_r470.ab3@2236>   JSR AJL_0_C15C
00020B8E <AmiBlitz3_noFPU_r470.ab3@2237>   JSR AJL_0_D9BC
00020B94 <AmiBlitz3_noFPU_r470.ab3@2240> JMP cleartemplabel
00020B98 <AmiBlitz3_noFPU_r470.ab3@2243> mempool2:  Dc.l 0
00020B9E <AmiBlitz3_noFPU_r470.ab3@2247>   JSR Aclearcache
00020BA6 <AmiBlitz3_noFPU_r470.ab3@2249>   BTST #$7,use_debugger
00020BAA <AmiBlitz3_noFPU_r470.ab3@2251>   BNE 'debugon
00020BB0 <AmiBlitz3_noFPU_r470.ab3@2252>   CLR.w debugmode
00020BB4 <AmiBlitz3_noFPU_r470.ab3@2253> BRA.b 'debugoff
00020BBA <AmiBlitz3_noFPU_r470.ab3@2256>   SNE debugmode
00020BF2 <AmiBlitz3_noFPU_r470.ab3@2261>   !ComData_SetB{comByte_DebugMode,debugmode}
00020BF8 <AmiBlitz3_noFPU_r470.ab3@2263>   LEA regtable,a0
00020BFA <AmiBlitz3_noFPU_r470.ab3@2264>   MOVEQ #10,d0
00020BFC <AmiBlitz3_noFPU_r470.ab3@2267>     CLR.l (a0)+
00020C00 <AmiBlitz3_noFPU_r470.ab3@2268>   DBF d0,'l1
00020C06 <AmiBlitz3_noFPU_r470.ab3@2270>   LEA includetemp2,a0
00020C08 <AmiBlitz3_noFPU_r470.ab3@2271>   CLR.b (a0)
00020C12 <AmiBlitz3_noFPU_r470.ab3@2272>   MOVE.l #7,maxregs
00020C18 <AmiBlitz3_noFPU_r470.ab3@2273>   CLR.w debugnest
00020C1E <AmiBlitz3_noFPU_r470.ab3@2274>   CLR.b funcparloop
00020C24 <AmiBlitz3_noFPU_r470.ab3@2275>   CLR.b nostringopt
00020C2A <AmiBlitz3_noFPU_r470.ab3@2276>   CLR.b firsttime
00020C30 <AmiBlitz3_noFPU_r470.ab3@2277>   CLR.l lastdestpointer
00020C36 <AmiBlitz3_noFPU_r470.ab3@2278>   CLR.l lastwritedat
00020C3C <AmiBlitz3_noFPU_r470.ab3@2279>   CLR.l prevwritedat
00020C42 <AmiBlitz3_noFPU_r470.ab3@2280>   CLR.l includeline
00020C48 <AmiBlitz3_noFPU_r470.ab3@2281>   CLR.b incnif
00020C4E <AmiBlitz3_noFPU_r470.ab3@2282>   CLR.b formode
00020C54 <AmiBlitz3_noFPU_r470.ab3@2283>   CLR.b funccall
00020C5A <AmiBlitz3_noFPU_r470.ab3@2284>   CLR.w objectcount
00020C60 <AmiBlitz3_noFPU_r470.ab3@2285>   CLR.b resdisable
00020C66 <AmiBlitz3_noFPU_r470.ab3@2286>   CLR.b developobject
00020C6C <AmiBlitz3_noFPU_r470.ab3@2287>   CLR.b optistring
00020C72 <AmiBlitz3_noFPU_r470.ab3@2288>   CLR.b optistring2
00020C78 <AmiBlitz3_noFPU_r470.ab3@2289>   CLR.b optiarray
00020C7E <AmiBlitz3_noFPU_r470.ab3@2290>   CLR.b quickadd
00020C84 <AmiBlitz3_noFPU_r470.ab3@2291>   CLR.w newmode
00020C8A <AmiBlitz3_noFPU_r470.ab3@2292>   CLR.w mode
00020C90 <AmiBlitz3_noFPU_r470.ab3@2293>   CLR.w string1
00020C96 <AmiBlitz3_noFPU_r470.ab3@2294>   CLR.b fastfunc
00020C9C <AmiBlitz3_noFPU_r470.ab3@2295>   CLR.w load_var_size
00020CA2 <AmiBlitz3_noFPU_r470.ab3@2296>   CLR.w load_var_reg
00020CA8 <AmiBlitz3_noFPU_r470.ab3@2297>   CLR.l load_var_addr
00020CAE <AmiBlitz3_noFPU_r470.ab3@2298>   CLR.w imm_size
00020CB4 <AmiBlitz3_noFPU_r470.ab3@2299>   CLR.w imm_reg
00020CBA <AmiBlitz3_noFPU_r470.ab3@2300>   CLR.l imm_addr
00020CC0 <AmiBlitz3_noFPU_r470.ab3@2301>   CLR.b _dcb
00020CC6 <AmiBlitz3_noFPU_r470.ab3@2302>   CLR.l nohunkoffset
00020CCC <AmiBlitz3_noFPU_r470.ab3@2303>   CLR.b peekaddrsize
00020CD2 <AmiBlitz3_noFPU_r470.ab3@2304>   CLR.b typecheck
00020CD8 <AmiBlitz3_noFPU_r470.ab3@2305>   CLR.b declare2
00020CDE <AmiBlitz3_noFPU_r470.ab3@2306>   CLR.b declare
00020CE4 <AmiBlitz3_noFPU_r470.ab3@2307>   CLR.l myoline                                          ;check
00020CEA <AmiBlitz3_noFPU_r470.ab3@2308>   CLR.l myline                                          ;check
00020CF0 <AmiBlitz3_noFPU_r470.ab3@2309>   CLR.b newvariable
00020CF6 <AmiBlitz3_noFPU_r470.ab3@2310>   CLR.b saved0
00020CFC <AmiBlitz3_noFPU_r470.ab3@2311>   CLR.l bsssize
00020D02 <AmiBlitz3_noFPU_r470.ab3@2312>   CLR.l chipsize
00020D08 <AmiBlitz3_noFPU_r470.ab3@2313>   CLR.b infunctioncode
00020D0E <AmiBlitz3_noFPU_r470.ab3@2314>   CLR.l errorcounter
00020D18 <AmiBlitz3_noFPU_r470.ab3@2315>   MOVE.l #-1,bssstart
00020D22 <AmiBlitz3_noFPU_r470.ab3@2316>   MOVE.l #-1,bssend
00020D2C <AmiBlitz3_noFPU_r470.ab3@2317>   MOVE.l #-1,chipstart
00020D36 <AmiBlitz3_noFPU_r470.ab3@2318>   MOVE.l #-1,chipend
00020D3E <AmiBlitz3_noFPU_r470.ab3@2319>   MOVE.w #0,bssmode
00020D44 <AmiBlitz3_noFPU_r470.ab3@2320>   CLR.w a2offset
00020D4A <AmiBlitz3_noFPU_r470.ab3@2321>   CLR.w fast
00020D50 <AmiBlitz3_noFPU_r470.ab3@2322>   CLR.w fpu
00020D56 <AmiBlitz3_noFPU_r470.ab3@2323>   CLR.b iee
00020D5C <AmiBlitz3_noFPU_r470.ab3@2324>   CLR.w newsyntax
00020D60 <AmiBlitz3_noFPU_r470.ab3@2325>   BSR.w JL_0_38A6
00020D66 <AmiBlitz3_noFPU_r470.ab3@2326>   JSR AJL_0_7962
00020D6C <AmiBlitz3_noFPU_r470.ab3@2327>   JSR frallvars
00020D72 <AmiBlitz3_noFPU_r470.ab3@2328>   JSR fralltypes
00020D78 <AmiBlitz3_noFPU_r470.ab3@2329>   JSR freemacs
00020D7E <AmiBlitz3_noFPU_r470.ab3@2330>   JSR clearfunctionlist
00020D84 <AmiBlitz3_noFPU_r470.ab3@2331>   TST.w pass
00020D8A <AmiBlitz3_noFPU_r470.ab3@2333>   JSR clearlabels
00020D90 <AmiBlitz3_noFPU_r470.ab3@2334>   JSR clearhash
00020D96 <AmiBlitz3_noFPU_r470.ab3@2337>   LEA devo,a0
00020D9A <AmiBlitz3_noFPU_r470.ab3@2338>   MOVEM.l a0-a6/d0-d7,-(a7)
00020DA0 <AmiBlitz3_noFPU_r470.ab3@2339>   LEA ptr_parameterstore,a1
00020DA2 <AmiBlitz3_noFPU_r470.ab3@2342>     MOVE.b (a0)+,(a1)+
00020DA6 <AmiBlitz3_noFPU_r470.ab3@2343>   BNE 'l1b
00020DA8 <AmiBlitz3_noFPU_r470.ab3@2344>   MOVEQ #13,d2
00020DAE <AmiBlitz3_noFPU_r470.ab3@2345>   JSR findlabel2
00020DB2 <AmiBlitz3_noFPU_r470.ab3@2346>   BNE 'd
00020DB6 <AmiBlitz3_noFPU_r470.ab3@2347>   CLR.l 8(a2)
00020DBA <AmiBlitz3_noFPU_r470.ab3@2350>   MOVEM.l (a7)+,a0-a6/d0-d7
00020DE4 <AmiBlitz3_noFPU_r470.ab3@2351>   !basic
00020E58 <AmiBlitz3_noFPU_r470.ab3@2352>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
00020E76 <AmiBlitz3_noFPU_r470.ab3@2353>   !asm
00020E7C <AmiBlitz3_noFPU_r470.ab3@2354>   CLR.b returncode
00020E82 <AmiBlitz3_noFPU_r470.ab3@2355> JMP freeprocvs
00020E88 <AmiBlitz3_noFPU_r470.ab3@2359>   MOVE.l #bssstore-labelhash,d0
00020E8A <AmiBlitz3_noFPU_r470.ab3@2360>   ASR.l #2,d0
00020E90 <AmiBlitz3_noFPU_r470.ab3@2361>   LEA labelhash,a0
00020E92 <AmiBlitz3_noFPU_r470.ab3@2364>     CLR.l (a0)+
00020E94 <AmiBlitz3_noFPU_r470.ab3@2365>     SUBQ.l #1,d0
00020E98 <AmiBlitz3_noFPU_r470.ab3@2366>   BNE.s 'l10
00020E9E <AmiBlitz3_noFPU_r470.ab3@2368>   LEA labelbase,a1
00020EA0 <AmiBlitz3_noFPU_r470.ab3@2369>   MOVE.l (a1),d0
00020EA4 <AmiBlitz3_noFPU_r470.ab3@2370>   BEQ 'l11
00020EA6 <AmiBlitz3_noFPU_r470.ab3@2373>     MOVE.l d0,a1
00020EAA <AmiBlitz3_noFPU_r470.ab3@2374>     TST.l 4(a1)
00020EAE <AmiBlitz3_noFPU_r470.ab3@2375>     BEQ 'l29
00020EB2 <AmiBlitz3_noFPU_r470.ab3@2376>     LEA $13(a1),a0
00020EB4 <AmiBlitz3_noFPU_r470.ab3@2377>     MOVEQ #0,d0
00020EB6 <AmiBlitz3_noFPU_r470.ab3@2378>     MOVEQ #0,d1
00020EB8 <AmiBlitz3_noFPU_r470.ab3@2381>       MOVE.b (a0)+,d1
00020EBC <AmiBlitz3_noFPU_r470.ab3@2382>       BEQ 'l12
00020EC2 <AmiBlitz3_noFPU_r470.ab3@2383>       !hashalgo
00020EC6 <AmiBlitz3_noFPU_r470.ab3@2384> BRA 'l13
00020ECC <AmiBlitz3_noFPU_r470.ab3@2387>     LEA labelhash,a0
00020ED2 <AmiBlitz3_noFPU_r470.ab3@2388>     AND.l #hashsize,d0
00020ED4 <AmiBlitz3_noFPU_r470.ab3@2389>      ASL.l #2,d0
00020ED8 <AmiBlitz3_noFPU_r470.ab3@2390>     MOVE.l 0(a0,d0),d1                                     ;*4
00020EDC <AmiBlitz3_noFPU_r470.ab3@2391>     MOVE.l d1,$c(a1)
00020EE0 <AmiBlitz3_noFPU_r470.ab3@2392>     MOVE.l a1,0(a0,d0)
00020EE2 <AmiBlitz3_noFPU_r470.ab3@2395>     MOVE.l (a1),d0
00020EE6 <AmiBlitz3_noFPU_r470.ab3@2396>   BNE 'l21
00020EE8 <AmiBlitz3_noFPU_r470.ab3@2399> RTS
00020EEE <AmiBlitz3_noFPU_r470.ab3@2403>   MOVEA.l lastrestype,A0
00020EF0 <AmiBlitz3_noFPU_r470.ab3@2404>   MOVEA.l (A0),A2
00020EF2 <AmiBlitz3_noFPU_r470.ab3@2405>   CLR.l (A0)
00020EF8 <AmiBlitz3_noFPU_r470.ab3@2406> JMP freetypes
00020EFE <AmiBlitz3_noFPU_r470.ab3@2410>   MOVEA.l varbase,A3
00020F04 <AmiBlitz3_noFPU_r470.ab3@2411>   CLR.l varbase
00020F08 <AmiBlitz3_noFPU_r470.ab3@2414>   CMPA.w #$0,A3
00020F0C <AmiBlitz3_noFPU_r470.ab3@2415>   BEQ.w 'l20
00020F0E <AmiBlitz3_noFPU_r470.ab3@2416>   MOVEA.l A3,A1
00020F10 <AmiBlitz3_noFPU_r470.ab3@2417>   MOVEA.l (A3),A3
00020F12 <AmiBlitz3_noFPU_r470.ab3@2418>   MOVEQ.l #$00,D0
00020F16 <AmiBlitz3_noFPU_r470.ab3@2419>   MOVE.b $E+4(A1),D0
00020F1C <AmiBlitz3_noFPU_r470.ab3@2420>   MOVEA.l _execbase,A6
00020F22 <AmiBlitz3_noFPU_r470.ab3@2421>   MOVE.l mempool2,a0
00020F26 <AmiBlitz3_noFPU_r470.ab3@2422>   JSR _FreePooled(A6)
00020F2A <AmiBlitz3_noFPU_r470.ab3@2423> BRA.w 'l10
00020F2C <AmiBlitz3_noFPU_r470.ab3@2426> RTS
00020F32 <AmiBlitz3_noFPU_r470.ab3@2431>   LEA firstiff,A2
00020F34 <AmiBlitz3_noFPU_r470.ab3@2432>   MOVEQ.l #$0E,D2
00020F3A <AmiBlitz3_noFPU_r470.ab3@2433> JMP freeslist
00020F3C <AmiBlitz3_noFPU_r470.ab3@2439> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00020F3E <AmiBlitz3_noFPU_r470.ab3@2440> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00020F44 <AmiBlitz3_noFPU_r470.ab3@2444>   CLR.w inmacro
00020F4A <AmiBlitz3_noFPU_r470.ab3@2445>   ADDQ.l #1,globallinecount
00020F50 <AmiBlitz3_noFPU_r470.ab3@2446>   CLR.b nostringopt
00020F54 <AmiBlitz3_noFPU_r470.ab3@2447>   BSR.w JL_0_3CA4
00020F5A <AmiBlitz3_noFPU_r470.ab3@2448>   CLR.w instringon
00020F60 <AmiBlitz3_noFPU_r470.ab3@2451>   TST.w ininclude
00020F64 <AmiBlitz3_noFPU_r470.ab3@2452>   BEQ.w JL_0_39B0
00020F6A <AmiBlitz3_noFPU_r470.ab3@2453>   ADDQ.l #1,includeline
00020F70 <AmiBlitz3_noFPU_r470.ab3@2454>     JSR ab3_WriteDebugFile
00020F76 <AmiBlitz3_noFPU_r470.ab3@2455>   JSR AJL_0_C09E
00020F7A <AmiBlitz3_noFPU_r470.ab3@2456>   BEQ.w JL_0_39B0
00020F80 <AmiBlitz3_noFPU_r470.ab3@2457>   MOVE.w ininclude,D0
00020F84 <AmiBlitz3_noFPU_r470.ab3@2458>   CMP.w #$4,D0
00020F88 <AmiBlitz3_noFPU_r470.ab3@2459>   BCC.w JL_0_39AC
00020F8A <AmiBlitz3_noFPU_r470.ab3@2460>   ADD.w D0,D0
00020F90 <AmiBlitz3_noFPU_r470.ab3@2461>   LEA progress_per_line,A0
00020F94 <AmiBlitz3_noFPU_r470.ab3@2462>   MOVE.w $0(A0,D0.W),D2
00020F98 <AmiBlitz3_noFPU_r470.ab3@2463>   CMP.w progressbar_width(PC),D2
00020F9C <AmiBlitz3_noFPU_r470.ab3@2464>   BCC.w JL_0_39AC
00020FA0 <AmiBlitz3_noFPU_r470.ab3@2465>   ADDQ.w #1,$0(A0,D0.W)
00020FA2 <AmiBlitz3_noFPU_r470.ab3@2466>   LSR.w #1,D0
00020FA4 <AmiBlitz3_noFPU_r470.ab3@2467>   MOVE.l d0,d1
00020FA6 <AmiBlitz3_noFPU_r470.ab3@2468>   EXT.l d1
00020FA8 <AmiBlitz3_noFPU_r470.ab3@2469>   MOVE.l d2,d0
00020FAA <AmiBlitz3_noFPU_r470.ab3@2470>   EXT.l d0                                                 ;d0=x,d1=y
00020FB0 <AmiBlitz3_noFPU_r470.ab3@2472>   JSR update_progressbar
00020FB2 <AmiBlitz3_noFPU_r470.ab3@2475>   MOVEQ.l #-$01,D0
00020FB4 <AmiBlitz3_noFPU_r470.ab3@2476> RTS
00020FBA <AmiBlitz3_noFPU_r470.ab3@2480>   MOVE.l titleat,D0
00020FBC <AmiBlitz3_noFPU_r470.ab3@2481>   MOVEQ.l #$00,D1
00020FC2 <AmiBlitz3_noFPU_r470.ab3@2482>   MOVE.w progress_per_line,D1
00020FC4 <AmiBlitz3_noFPU_r470.ab3@2483>   ADD.l D1,D0
00020FC6 <AmiBlitz3_noFPU_r470.ab3@2484>   MOVE.l D0,D1
00020FC8 <AmiBlitz3_noFPU_r470.ab3@2485>   SWAP D0
00020FCE <AmiBlitz3_noFPU_r470.ab3@2486>   CMP.w titleat,D0
00020FD2 <AmiBlitz3_noFPU_r470.ab3@2487>    BEQ.w JL_0_39E4
00020FD4 <AmiBlitz3_noFPU_r470.ab3@2491>   EXT.l d0
00020FD6 <AmiBlitz3_noFPU_r470.ab3@2492>   MOVE.l d1,-(a7)
00020FDE <AmiBlitz3_noFPU_r470.ab3@2495>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00020FE4 <AmiBlitz3_noFPU_r470.ab3@2496>   JSR update_progressbar
00020FEC <AmiBlitz3_noFPU_r470.ab3@2497>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00020FEE <AmiBlitz3_noFPU_r470.ab3@2501>   MOVE.l (a7)+,d1
00020FF4 <AmiBlitz3_noFPU_r470.ab3@2504>   MOVE.l D1,titleat
00020FFA <AmiBlitz3_noFPU_r470.ab3@2505>   ADDQ.l #1,linenumat
00021000 <AmiBlitz3_noFPU_r470.ab3@2506>   CLR.w linedone
00021006 <AmiBlitz3_noFPU_r470.ab3@2507>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0002100C <AmiBlitz3_noFPU_r470.ab3@2509>   SUBQ.l #1,numlines2
00021010 <AmiBlitz3_noFPU_r470.ab3@2510>    BEQ.w JL_0_3A12
00021016 <AmiBlitz3_noFPU_r470.ab3@2511>   MOVEA.l sourceline,A0
00021018 <AmiBlitz3_noFPU_r470.ab3@2512>   MOVEA.l (A0),A0
0002101E <AmiBlitz3_noFPU_r470.ab3@2513>   MOVE.l A0,sourceline
00021022 <AmiBlitz3_noFPU_r470.ab3@2514>   LEA $9(A0),A5
00021024 <AmiBlitz3_noFPU_r470.ab3@2517> RTS
00021026 <AmiBlitz3_noFPU_r470.ab3@2521>   MOVE.w D0,-(A7)
00021028 <AmiBlitz3_noFPU_r470.ab3@2522>   MOVEQ.l #$03,D0
0002102A <AmiBlitz3_noFPU_r470.ab3@2525>     MOVE.w D1,D2
0002102E <AmiBlitz3_noFPU_r470.ab3@2526>     ANDI.w #$F,D2
00021032 <AmiBlitz3_noFPU_r470.ab3@2527>     ADDI.w #$30,D2
00021036 <AmiBlitz3_noFPU_r470.ab3@2528>     CMP.w #$3A,D2
0002103A <AmiBlitz3_noFPU_r470.ab3@2529>      BCS.w JL_0_3A2C
0002103C <AmiBlitz3_noFPU_r470.ab3@2530>     ADDQ.w #7,D2
00021040 <AmiBlitz3_noFPU_r470.ab3@2533>     MOVE.b D2,$0(A0,D0.W)
00021042 <AmiBlitz3_noFPU_r470.ab3@2534>     LSR.w #4,D1
00021046 <AmiBlitz3_noFPU_r470.ab3@2535>   DBF D0,JL_0_3A18
00021048 <AmiBlitz3_noFPU_r470.ab3@2537>   MOVE.w (A7)+,D0
0002104A <AmiBlitz3_noFPU_r470.ab3@2538> RTS
00021050 <AmiBlitz3_noFPU_r470.ab3@2548>   MOVE.w skipcode,D1
00021054 <AmiBlitz3_noFPU_r470.ab3@2549>   BNE.w JL_0_3A46
00021056 <AmiBlitz3_noFPU_r470.ab3@2550> RTS
00021058 <AmiBlitz3_noFPU_r470.ab3@2553>   MOVE.l A5,-(A7)
0002105A <AmiBlitz3_noFPU_r470.ab3@2554>   MOVEQ.l #$3A,D1                                          ;':'
0002105C <AmiBlitz3_noFPU_r470.ab3@2555>   MOVEQ.l #$21,D2                                          ;'!'
0002105E <AmiBlitz3_noFPU_r470.ab3@2556>   MOVEQ.l #$3B,D3                                          ;';'
00021060 <AmiBlitz3_noFPU_r470.ab3@2557>   MOVEQ.l #$22,D4                                          ;'"'
00021062 <AmiBlitz3_noFPU_r470.ab3@2560>   MOVE.b (A5)+,D0
00021066 <AmiBlitz3_noFPU_r470.ab3@2561>    BEQ.w JL_0_3CA0
0002106A <AmiBlitz3_noFPU_r470.ab3@2562>    BPL.w JL_0_3A60
0002106C <AmiBlitz3_noFPU_r470.ab3@2563>   MOVE.b (A5)+,D0
00021070 <AmiBlitz3_noFPU_r470.ab3@2564> BRA.w JL_0_3A50
00021072 <AmiBlitz3_noFPU_r470.ab3@2567>   CMP.b D4,D0
00021076 <AmiBlitz3_noFPU_r470.ab3@2568>    BNE.w JL_0_3A82
00021078 <AmiBlitz3_noFPU_r470.ab3@2571>   MOVE.b (A5)+,D0
0002107C <AmiBlitz3_noFPU_r470.ab3@2572>    BEQ.w notqerr
00021080 <AmiBlitz3_noFPU_r470.ab3@2578>   CMP.b #$22,D0
00021084 <AmiBlitz3_noFPU_r470.ab3@2579>    BNE.w JL_0_3A66
00021088 <AmiBlitz3_noFPU_r470.ab3@2580> BRA.w JL_0_3A50
0002108A <AmiBlitz3_noFPU_r470.ab3@2583>   CMP.b D1,D0
0002108E <AmiBlitz3_noFPU_r470.ab3@2584>    BEQ.w JL_0_3CA0
00021090 <AmiBlitz3_noFPU_r470.ab3@2585>   CMP.b D3,D0
00021094 <AmiBlitz3_noFPU_r470.ab3@2586>    BEQ.w JL_0_3CA0
00021096 <AmiBlitz3_noFPU_r470.ab3@2589>   CMP.b D2,D0
0002109A <AmiBlitz3_noFPU_r470.ab3@2590>    BNE.w JL_0_3A50
000210A2 <AmiBlitz3_noFPU_r470.ab3@2591>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
000210A4 <AmiBlitz3_noFPU_r470.ab3@2592>   MOVEA.l A5,A3
000210AA <AmiBlitz3_noFPU_r470.ab3@2593>    JSR getparameter2
000210AE <AmiBlitz3_noFPU_r470.ab3@2594>    BNE.w JL_0_3AAC
000210B4 <AmiBlitz3_noFPU_r470.ab3@2595> JMP syntaxerr
000210BE <AmiBlitz3_noFPU_r470.ab3@2600>    MOVE.w oldqflag,instringon
000210C4 <AmiBlitz3_noFPU_r470.ab3@2601>   MOVEA.l lastsourcepos,A5
000210CA <AmiBlitz3_noFPU_r470.ab3@2602>    JSR findmac                                             ;find macro
000210CE <AmiBlitz3_noFPU_r470.ab3@2603>    BEQ.w JL_0_3ABE
000210D4 <AmiBlitz3_noFPU_r470.ab3@2604> JMP nomacerr
000210DA <AmiBlitz3_noFPU_r470.ab3@2607>   TST.b debugmode
000210DE <AmiBlitz3_noFPU_r470.ab3@2608>   BEQ 'sk1
000210E2 <AmiBlitz3_noFPU_r470.ab3@2609>   MOVE.w #$4e71,d1
000210E8 <AmiBlitz3_noFPU_r470.ab3@2610>   JSR writeword
000210EA <AmiBlitz3_noFPU_r470.ab3@2611>   MOVE.l a5,-(a7)
000210EC <AmiBlitz3_noFPU_r470.ab3@2612>   MOVE.l a3,a5
000210EE <AmiBlitz3_noFPU_r470.ab3@2613>   SUBQ.l #1,a5
000210F6 <AmiBlitz3_noFPU_r470.ab3@2614>   MOVE.w #$0,inmacro
000210FA <AmiBlitz3_noFPU_r470.ab3@2615>   BSR debugstuffa
00021102 <AmiBlitz3_noFPU_r470.ab3@2616>   MOVE.w #$FFFF,inmacro
00021104 <AmiBlitz3_noFPU_r470.ab3@2617>   MOVE.l (a7)+,a5
00021108 <AmiBlitz3_noFPU_r470.ab3@2618>   MOVE.w #$4e71,d1
0002110E <AmiBlitz3_noFPU_r470.ab3@2619>   JSR writeword
00021110 <AmiBlitz3_noFPU_r470.ab3@2622>   MOVEA.l A5,A4
00021114 <AmiBlitz3_noFPU_r470.ab3@2625>    CMP.b #" ",(a4)+
00021118 <AmiBlitz3_noFPU_r470.ab3@2626>     BEQ 'l5a
0002111A <AmiBlitz3_noFPU_r470.ab3@2627>      SUBQ.l#1,a4
0002111E <AmiBlitz3_noFPU_r470.ab3@2628>      CMP.b #",",(a4)
00021122 <AmiBlitz3_noFPU_r470.ab3@2629>     BEQ JL_0_3AEA
00021124 <AmiBlitz3_noFPU_r470.ab3@2632>   MOVEQ.l #$00,D4
0002112A <AmiBlitz3_noFPU_r470.ab3@2633>   TST.b newsyntax
0002112E <AmiBlitz3_noFPU_r470.ab3@2634>   BEQ 'l10b
00021132 <AmiBlitz3_noFPU_r470.ab3@2635>   MOVEM.l a0/d0,-(a7)
00021136 <AmiBlitz3_noFPU_r470.ab3@2636>   MOVE.l 4(a2),a0
0002113A <AmiBlitz3_noFPU_r470.ab3@2637>   MOVE.w 8(a2),d0
0002113E <AmiBlitz3_noFPU_r470.ab3@2640>   CMP.b #"`",(a0)+
00021142 <AmiBlitz3_noFPU_r470.ab3@2641>   BEQ 'x1
00021144 <AmiBlitz3_noFPU_r470.ab3@2642>   SUBQ.w #1,d0
00021148 <AmiBlitz3_noFPU_r470.ab3@2643>   BNE 'x2
0002114C <AmiBlitz3_noFPU_r470.ab3@2644> BRA 'x3
00021150 <AmiBlitz3_noFPU_r470.ab3@2647>   MOVEM.l (a7)+,a0/d0
00021154 <AmiBlitz3_noFPU_r470.ab3@2648> BRA 'l10
00021158 <AmiBlitz3_noFPU_r470.ab3@2651>   MOVEM.l (a7)+,a0/d0
0002115C <AmiBlitz3_noFPU_r470.ab3@2652> BRA JL_0_3AEA
00021160 <AmiBlitz3_noFPU_r470.ab3@2655>   CMPI.b #"{",(A4)
00021164 <AmiBlitz3_noFPU_r470.ab3@2656>    BNE.w JL_0_3AEA
00021166 <AmiBlitz3_noFPU_r470.ab3@2660>   ADDQ.l #1,a4
0002116A <AmiBlitz3_noFPU_r470.ab3@2663>     CMP.b #" ",(a4)
0002116E <AmiBlitz3_noFPU_r470.ab3@2664>     BEQ 'l5
00021172 <AmiBlitz3_noFPU_r470.ab3@2665>     MOVEM.l a0/d0,-(a7)
00021178 <AmiBlitz3_noFPU_r470.ab3@2666>     CLR.b exmac
0002117E <AmiBlitz3_noFPU_r470.ab3@2667>     LEA chartab,a0
00021180 <AmiBlitz3_noFPU_r470.ab3@2668>     MOVEQ #0,d0
00021182 <AmiBlitz3_noFPU_r470.ab3@2669>     MOVE.b (a4),d0
00021186 <AmiBlitz3_noFPU_r470.ab3@2670>     BMI 'm1
0002118A <AmiBlitz3_noFPU_r470.ab3@2671>     TST.b 0(a0,d0)
0002118E <AmiBlitz3_noFPU_r470.ab3@2672>     BEQ 'm1
00021194 <AmiBlitz3_noFPU_r470.ab3@2673>     TST.b newsyntax
00021198 <AmiBlitz3_noFPU_r470.ab3@2674>     BEQ 'ns1
0002119C <AmiBlitz3_noFPU_r470.ab3@2675>     CMP.b #"#",d0
000211A0 <AmiBlitz3_noFPU_r470.ab3@2676>     BEQ 'm1
000211A4 <AmiBlitz3_noFPU_r470.ab3@2677>     CMP.b #"$",d0
000211A8 <AmiBlitz3_noFPU_r470.ab3@2678>     BEQ 'm1
000211AC <AmiBlitz3_noFPU_r470.ab3@2679>     CMP.b #"-",d0
000211B0 <AmiBlitz3_noFPU_r470.ab3@2680>     BEQ 'm1
000211B4 <AmiBlitz3_noFPU_r470.ab3@2683>   CMP.b #",",d0
000211B8 <AmiBlitz3_noFPU_r470.ab3@2684>     BEQ 'm1
000211BC <AmiBlitz3_noFPU_r470.ab3@2685>     CMP.b #"{",d0
000211C0 <AmiBlitz3_noFPU_r470.ab3@2686>     BNE 'm1b
000211C2 <AmiBlitz3_noFPU_r470.ab3@2687>     ADDQ.l #1,a4
000211C6 <AmiBlitz3_noFPU_r470.ab3@2688> BRA 'm1
000211CC <AmiBlitz3_noFPU_r470.ab3@2691>   TST.b newsyntax
000211D0 <AmiBlitz3_noFPU_r470.ab3@2692>     BEQ 'm1
000211D8 <AmiBlitz3_noFPU_r470.ab3@2693>     MOVE.b #1,exmac
000211DC <AmiBlitz3_noFPU_r470.ab3@2696>   MOVEM.l (a7)+,a0/d0
000211E2 <AmiBlitz3_noFPU_r470.ab3@2697>     TST.b exmac
000211E6 <AmiBlitz3_noFPU_r470.ab3@2698>     BNE JL_0_3AEA
000211E8 <AmiBlitz3_noFPU_r470.ab3@2705>   TST.b (a4)
000211EC <AmiBlitz3_noFPU_r470.ab3@2706>   BEQ JL_0_3AEA
000211F2 <AmiBlitz3_noFPU_r470.ab3@2709>   MOVEA.l ptr_macrobuffer_begin,A0
000211F4 <AmiBlitz3_noFPU_r470.ab3@2712>   ADDQ.w #1,D4
000211F6 <AmiBlitz3_noFPU_r470.ab3@2713>   MOVE.l A4,(A0)
000211FA <AmiBlitz3_noFPU_r470.ab3@2714>   CLR.w 4(a0)
000211FE <AmiBlitz3_noFPU_r470.ab3@2715>    BSR.w JL_0_3CC6
00021200 <AmiBlitz3_noFPU_r470.ab3@2717>   ADDQ.l #4,a0
00021202 <AmiBlitz3_noFPU_r470.ab3@2721>   SUBQ.w #1,(a0)+
00021206 <AmiBlitz3_noFPU_r470.ab3@2722>   CMP.b #$7D,D0
0002120A <AmiBlitz3_noFPU_r470.ab3@2723>   BEQ 'l10
0002120C <AmiBlitz3_noFPU_r470.ab3@2724>   TST.b d0
00021210 <AmiBlitz3_noFPU_r470.ab3@2725>   BEQ 'l10
00021214 <AmiBlitz3_noFPU_r470.ab3@2726> BRA JL_0_3AD0
0002121A <AmiBlitz3_noFPU_r470.ab3@2730>   CLR.l sourceline3
0002121C <AmiBlitz3_noFPU_r470.ab3@2731>   MOVEA.l A4,A5
00021222 <AmiBlitz3_noFPU_r470.ab3@2734>   MOVE.w D4,numarg
00021228 <AmiBlitz3_noFPU_r470.ab3@2741>   MOVE.l #$01,D1
0002122E <AmiBlitz3_noFPU_r470.ab3@2742>   MOVEA.l _execbase,A6
00021234 <AmiBlitz3_noFPU_r470.ab3@2743>   MOVE.l mempool,a0
0002123A <AmiBlitz3_noFPU_r470.ab3@2744>   MOVE.l macrobuffer_size,D0
00021240 <AmiBlitz3_noFPU_r470.ab3@2745>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021244 <AmiBlitz3_noFPU_r470.ab3@2746>   BGE 'l1m
0002124A <AmiBlitz3_noFPU_r470.ab3@2747>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021250 <AmiBlitz3_noFPU_r470.ab3@2748>   MOVE.l d0,macrobuffer_size
00021254 <AmiBlitz3_noFPU_r470.ab3@2751>   JSR _AllocPooled(a6)
0002125E <AmiBlitz3_noFPU_r470.ab3@2753>   MOVE.l myline,myoline
00021260 <AmiBlitz3_noFPU_r470.ab3@2756>   ADDQ.l #1,d0
00021266 <AmiBlitz3_noFPU_r470.ab3@2757>   MOVE.l D0,myline
00021268 <AmiBlitz3_noFPU_r470.ab3@2758>   MOVEA.l D0,A1
0002126E <AmiBlitz3_noFPU_r470.ab3@2759>   MOVE.b #":",-1(a1)
00021270 <AmiBlitz3_noFPU_r470.ab3@2760>   MOVEA.l A1,A6
00021276 <AmiBlitz3_noFPU_r470.ab3@2761>   ADDA.l macrobuffer_size,A6
00021278 <AmiBlitz3_noFPU_r470.ab3@2762>   MOVEA.l (A7)+,A0
0002127A <AmiBlitz3_noFPU_r470.ab3@2765>   CMPA.l A6,A1
0002127E <AmiBlitz3_noFPU_r470.ab3@2766>    BCC.w mbovererr
00021280 <AmiBlitz3_noFPU_r470.ab3@2767>   MOVE.b (A0)+,(a1)+
00021282 <AmiBlitz3_noFPU_r470.ab3@2768>   CMPA.l A3,A0
00021286 <AmiBlitz3_noFPU_r470.ab3@2769>    BCS.w JL_0_3B1E
00021288 <AmiBlitz3_noFPU_r470.ab3@2770>   SUBQ.w #1,A1
0002128C <AmiBlitz3_noFPU_r470.ab3@2771>   MOVE.w $8(A2),D1
00021290 <AmiBlitz3_noFPU_r470.ab3@2772>    BEQ.w JL_0_3C70
00021298 <AmiBlitz3_noFPU_r470.ab3@2773>   MOVE.w $A(A2),macnum
0002129C <AmiBlitz3_noFPU_r470.ab3@2774>   ADDQ.w #1,$A(A2)
000212A0 <AmiBlitz3_noFPU_r470.ab3@2775>   MOVEA.l $4(A2),A2
000212A2 <AmiBlitz3_noFPU_r470.ab3@2776>   SUBQ.w #1,D1
000212A8 <AmiBlitz3_noFPU_r470.ab3@2777>   CLR.b firstmline
000212AA <AmiBlitz3_noFPU_r470.ab3@2780>     MOVEQ.l #$00,D0
000212AC <AmiBlitz3_noFPU_r470.ab3@2781>     MOVE.b (A2)+,D0
000212B2 <AmiBlitz3_noFPU_r470.ab3@2782>     TST.b firstmline
000212B6 <AmiBlitz3_noFPU_r470.ab3@2783>     BNE 'c1
000212BA <AmiBlitz3_noFPU_r470.ab3@2784>     CMP.b #$22,d0
000212BE <AmiBlitz3_noFPU_r470.ab3@2785>     BNE 's1
000212C6 <AmiBlitz3_noFPU_r470.ab3@2786>     MOVE.b #1,firstmline
000212CA <AmiBlitz3_noFPU_r470.ab3@2789>     CMP.b #":",d0
000212CE <AmiBlitz3_noFPU_r470.ab3@2790>     BNE 'm1
000212D6 <AmiBlitz3_noFPU_r470.ab3@2791>     MOVE.b #1,firstmline
000212DA <AmiBlitz3_noFPU_r470.ab3@2794>     CMP.b #";",d0
000212DE <AmiBlitz3_noFPU_r470.ab3@2795>     BNE 'c1
000212E0 <AmiBlitz3_noFPU_r470.ab3@2798>     SUBQ.w #1,d1                                           ;filter out comment
000212E2 <AmiBlitz3_noFPU_r470.ab3@2799>     MOVE.b (a2)+,d0
000212E8 <AmiBlitz3_noFPU_r470.ab3@2800>     CMP.w #":@",-1(a2)
000212EC <AmiBlitz3_noFPU_r470.ab3@2801>     BEQ 'c2
000212EE <AmiBlitz3_noFPU_r470.ab3@2802>     TST.w d1
000212F2 <AmiBlitz3_noFPU_r470.ab3@2803>     BNE 'l1
000212F6 <AmiBlitz3_noFPU_r470.ab3@2804>   BRA JL_0_3C6C
000212FC <AmiBlitz3_noFPU_r470.ab3@2807>     CMP.b #":",1(a2)
00021300 <AmiBlitz3_noFPU_r470.ab3@2808>       BNE 'l1
00021302 <AmiBlitz3_noFPU_r470.ab3@2809>       ADDQ #2,a2
00021304 <AmiBlitz3_noFPU_r470.ab3@2810>       SUBQ #3,d1
00021306 <AmiBlitz3_noFPU_r470.ab3@2811>       MOVE.b (a2)+,d0
0002130E <AmiBlitz3_noFPU_r470.ab3@2812>       MOVE.b #1,firstmline
00021312 <AmiBlitz3_noFPU_r470.ab3@2815>     CMP.b #"`",D0
00021316 <AmiBlitz3_noFPU_r470.ab3@2816>      BNE.w JL_0_3C56
00021318 <AmiBlitz3_noFPU_r470.ab3@2817>     SUBQ.w #1,D1
0002131A <AmiBlitz3_noFPU_r470.ab3@2818>     MOVE.b (A2)+,D0
0002131E <AmiBlitz3_noFPU_r470.ab3@2819>     CMP.w #$7B,D0
00021322 <AmiBlitz3_noFPU_r470.ab3@2820>      BEQ.w JL_0_3BB6
00021326 <AmiBlitz3_noFPU_r470.ab3@2821>     CMP.w #$40,D0
0002132A <AmiBlitz3_noFPU_r470.ab3@2822>      BNE.w JL_0_3B82
0002132C <AmiBlitz3_noFPU_r470.ab3@2823>     MOVEQ.l #$00,D2
00021332 <AmiBlitz3_noFPU_r470.ab3@2824>     MOVE.w macnum,D2
00021334 <AmiBlitz3_noFPU_r470.ab3@2825>     MOVEA.l A1,A0
00021336 <AmiBlitz3_noFPU_r470.ab3@2826>     MOVE.w D1,-(A7)
0002133C <AmiBlitz3_noFPU_r470.ab3@2827>      JSR makelong
0002133E <AmiBlitz3_noFPU_r470.ab3@2828>     MOVEA.l A0,A1
00021340 <AmiBlitz3_noFPU_r470.ab3@2829>     MOVE.w (A7)+,D1
00021344 <AmiBlitz3_noFPU_r470.ab3@2830>   BRA.w JL_0_3C6C
00021348 <AmiBlitz3_noFPU_r470.ab3@2833>     ORI.w #$20,D0
0002134C <AmiBlitz3_noFPU_r470.ab3@2834>     CMP.w #$7A,D0
00021350 <AmiBlitz3_noFPU_r470.ab3@2835>      BCS.w JL_0_3B94
00021356 <AmiBlitz3_noFPU_r470.ab3@2836>   JMP ilconsterr
0002135A <AmiBlitz3_noFPU_r470.ab3@2839>     SUBI.w #$30,D0
0002135E <AmiBlitz3_noFPU_r470.ab3@2840>     CMP.w #$A,D0
00021362 <AmiBlitz3_noFPU_r470.ab3@2841>      BCS.w JL_0_3BF2
00021366 <AmiBlitz3_noFPU_r470.ab3@2842>     SUBI.w #$27,D0
0002136A <AmiBlitz3_noFPU_r470.ab3@2843>     CMP.w #$A,D0
0002136E <AmiBlitz3_noFPU_r470.ab3@2844>      BCC.w JL_0_3BB2
00021374 <AmiBlitz3_noFPU_r470.ab3@2845>   JMP ilconsterr
00021378 <AmiBlitz3_noFPU_r470.ab3@2848>   BRA.w JL_0_3BF2
0002137A <AmiBlitz3_noFPU_r470.ab3@2851>     MOVE.l A5,-(A7)
0002137E <AmiBlitz3_noFPU_r470.ab3@2852>     MOVEM.l D1/A1-A2/A6,-(A7)
00021380 <AmiBlitz3_noFPU_r470.ab3@2853>     MOVEA.l A2,A5
00021386 <AmiBlitz3_noFPU_r470.ab3@2854>      JSR AJL_0_BF6E
0002138A <AmiBlitz3_noFPU_r470.ab3@2855>     CMP.w #$7D,D0
0002138E <AmiBlitz3_noFPU_r470.ab3@2856>      BEQ.w JL_0_3BD2
00021394 <AmiBlitz3_noFPU_r470.ab3@2857>   JMP syntaxerr
00021398 <AmiBlitz3_noFPU_r470.ab3@2860>     MOVEM.l (A7)+,D1/A1-A2/A6
0002139A <AmiBlitz3_noFPU_r470.ab3@2861>     MOVE.l A5,D2
0002139C <AmiBlitz3_noFPU_r470.ab3@2862>     SUB.l A2,D2
0002139E <AmiBlitz3_noFPU_r470.ab3@2863>     SUB.w D2,D1
000213A0 <AmiBlitz3_noFPU_r470.ab3@2864>     MOVEA.l A5,A2
000213A6 <AmiBlitz3_noFPU_r470.ab3@2865>     CLR.w instringon
000213A8 <AmiBlitz3_noFPU_r470.ab3@2866>     MOVEA.l (A7)+,A5
000213AA <AmiBlitz3_noFPU_r470.ab3@2867>     MOVE.l D3,D0
000213AE <AmiBlitz3_noFPU_r470.ab3@2868>     BPL.w JL_0_3BF2
000213B4 <AmiBlitz3_noFPU_r470.ab3@2869>   JMP ilconsterr
000213B6 <AmiBlitz3_noFPU_r470.ab3@2872>     SUBQ.w #1,D0
000213BA <AmiBlitz3_noFPU_r470.ab3@2873>      BPL.w JL_0_3C20
000213C0 <AmiBlitz3_noFPU_r470.ab3@2877>     MOVE.w numarg,D0
000213C4 <AmiBlitz3_noFPU_r470.ab3@2878>     DIVU #$A,D0
000213C8 <AmiBlitz3_noFPU_r470.ab3@2879>     ADDI.w #$30,D0
000213CA <AmiBlitz3_noFPU_r470.ab3@2880>     CMPA.l A6,A1
000213CE <AmiBlitz3_noFPU_r470.ab3@2881>      BCC.w mbovererr
000213D0 <AmiBlitz3_noFPU_r470.ab3@2882>     MOVE.b D0,(A1)+
000213D2 <AmiBlitz3_noFPU_r470.ab3@2883>     SWAP D0
000213D6 <AmiBlitz3_noFPU_r470.ab3@2884>     ADDI.w #$30,D0
000213D8 <AmiBlitz3_noFPU_r470.ab3@2885>     CMPA.l A6,A1
000213DC <AmiBlitz3_noFPU_r470.ab3@2886>      BCC.w mbovererr
000213DE <AmiBlitz3_noFPU_r470.ab3@2887>     MOVE.b D0,(A1)+
000213E2 <AmiBlitz3_noFPU_r470.ab3@2888>   BRA.w JL_0_3C6C
000213E8 <AmiBlitz3_noFPU_r470.ab3@2894>     CMP.w numarg,D0
000213EC <AmiBlitz3_noFPU_r470.ab3@2895>      BCC.w JL_0_3C6C
000213EE <AmiBlitz3_noFPU_r470.ab3@2896>     LSL.w #1,D0
000213F0 <AmiBlitz3_noFPU_r470.ab3@2897>     MOVE.w D0,D4
000213F2 <AmiBlitz3_noFPU_r470.ab3@2898>     LSL.w #1,D0
000213F4 <AmiBlitz3_noFPU_r470.ab3@2899>     ADD.w D4,D0
000213FA <AmiBlitz3_noFPU_r470.ab3@2900>     MOVEA.l ptr_macrobuffer_begin,A0
000213FC <AmiBlitz3_noFPU_r470.ab3@2901>     ADDA.w D0,A0
00021400 <AmiBlitz3_noFPU_r470.ab3@2902>     MOVE.w $4(A0),D4
00021404 <AmiBlitz3_noFPU_r470.ab3@2903>      BEQ.w JL_0_3C6C
00021406 <AmiBlitz3_noFPU_r470.ab3@2904>     MOVEA.l (A0),A0
00021408 <AmiBlitz3_noFPU_r470.ab3@2905>     SUBQ.w #1,D4
0002140A <AmiBlitz3_noFPU_r470.ab3@2908>       CMPA.l A6,A1
0002140E <AmiBlitz3_noFPU_r470.ab3@2909>        BCC.w mbovererr
00021412 <AmiBlitz3_noFPU_r470.ab3@2910>       CMP.w #"@@",(a0)
00021416 <AmiBlitz3_noFPU_r470.ab3@2911>        BNE 'l10
0002141C <AmiBlitz3_noFPU_r470.ab3@2912>       TST.w ininclude
00021420 <AmiBlitz3_noFPU_r470.ab3@2913>        BNE errorjoin
00021426 <AmiBlitz3_noFPU_r470.ab3@2916>       MOVE.l sourceline,a0
00021428 <AmiBlitz3_noFPU_r470.ab3@2917>       MOVE.l (a0),a0
0002142E <AmiBlitz3_noFPU_r470.ab3@2918>       CMP.l #0,a0
00021432 <AmiBlitz3_noFPU_r470.ab3@2919>       BNE 'l11
00021434 <AmiBlitz3_noFPU_r470.ab3@2920>       MOVEQ #0,d0
0002143A <AmiBlitz3_noFPU_r470.ab3@2921>       JSR error
00021440 <AmiBlitz3_noFPU_r470.ab3@2924>       MOVE.l a0,sourceline
00021446 <AmiBlitz3_noFPU_r470.ab3@2925>       ADDQ.l #1,linenumat
0002144A <AmiBlitz3_noFPU_r470.ab3@2926>       LEA 9(a0),a0
0002144C <AmiBlitz3_noFPU_r470.ab3@2927>       MOVE.l a0,-(a7)
00021450 <AmiBlitz3_noFPU_r470.ab3@2930>       CMP.b #" ",(a0)+
00021454 <AmiBlitz3_noFPU_r470.ab3@2931>        BEQ 'l110
0002145A <AmiBlitz3_noFPU_r470.ab3@2932>       CMP.b #";",-1(a0)
0002145C <AmiBlitz3_noFPU_r470.ab3@2933>       MOVE.l (a7)+,a0
00021460 <AmiBlitz3_noFPU_r470.ab3@2934>        BEQ 'l111
00021462 <AmiBlitz3_noFPU_r470.ab3@2935>       SUBQ.l #1,d4
00021464 <AmiBlitz3_noFPU_r470.ab3@2938>       MOVE.b (A0)+,(A1)+
00021468 <AmiBlitz3_noFPU_r470.ab3@2939>     DBF D4,JL_0_3C46
0002146C <AmiBlitz3_noFPU_r470.ab3@2941>   BRA.w JL_0_3C6C
0002146E <AmiBlitz3_noFPU_r470.ab3@2944>     CMPA.l A6,A1
00021472 <AmiBlitz3_noFPU_r470.ab3@2945>      BCC.w mbovererr
00021474 <AmiBlitz3_noFPU_r470.ab3@2946>     MOVE.b D0,(A1)+
00021478 <AmiBlitz3_noFPU_r470.ab3@2947>      BPL.w JL_0_3C6C
0002147A <AmiBlitz3_noFPU_r470.ab3@2948>     CMPA.l A6,A1
0002147E <AmiBlitz3_noFPU_r470.ab3@2949>      BCC.w mbovererr
00021480 <AmiBlitz3_noFPU_r470.ab3@2950>     MOVE.b (A2)+,(A1)+
00021482 <AmiBlitz3_noFPU_r470.ab3@2951>     SUBQ.w #1,D1
00021486 <AmiBlitz3_noFPU_r470.ab3@2954>   DBF D1,JL_0_3B48
00021488 <AmiBlitz3_noFPU_r470.ab3@2964>   CMPA.l A6,A1
0002148C <AmiBlitz3_noFPU_r470.ab3@2965>    BCC.w mbovererr
0002148E <AmiBlitz3_noFPU_r470.ab3@2966>   MOVE.b (A5)+,(A1)+
00021492 <AmiBlitz3_noFPU_r470.ab3@2967>    BNE.w JL_0_3C70
00021498 <AmiBlitz3_noFPU_r470.ab3@2968>   MOVEA.l myline,A5
0002149E <AmiBlitz3_noFPU_r470.ab3@2969>   MOVE.l myoline,D0
000214A2 <AmiBlitz3_noFPU_r470.ab3@2970>    BEQ.w JL_0_3C9C
000214A4 <AmiBlitz3_noFPU_r470.ab3@2971>   SUBQ.l #1,d0
000214A6 <AmiBlitz3_noFPU_r470.ab3@2972>   MOVEA.l D0,A1
000214AC <AmiBlitz3_noFPU_r470.ab3@2973>   MOVE.l macrobuffer_size,D0
000214B2 <AmiBlitz3_noFPU_r470.ab3@2974>   MOVEA.l _execbase,A6
000214B8 <AmiBlitz3_noFPU_r470.ab3@2975>   MOVE.l mempool,a0
000214BC <AmiBlitz3_noFPU_r470.ab3@2976>   JSR _FreePooled(A6)
000214C0 <AmiBlitz3_noFPU_r470.ab3@2979> BRA.w JL_0_3A46
000214C2 <AmiBlitz3_noFPU_r470.ab3@2982>   MOVEA.l (A7)+,A5
000214C4 <AmiBlitz3_noFPU_r470.ab3@2983> RTS
000214CA <AmiBlitz3_noFPU_r470.ab3@2987>   MOVE.l myline,D0
000214CE <AmiBlitz3_noFPU_r470.ab3@2988>   BEQ.w JL_0_3CC4
000214D0 <AmiBlitz3_noFPU_r470.ab3@2989>   SUBQ.l #1,d0
000214D6 <AmiBlitz3_noFPU_r470.ab3@2990>   CLR.l myline
000214D8 <AmiBlitz3_noFPU_r470.ab3@2991>   MOVEA.l D0,A1
000214DE <AmiBlitz3_noFPU_r470.ab3@2992>   MOVE.l macrobuffer_size,D0
000214E4 <AmiBlitz3_noFPU_r470.ab3@2993>   MOVEA.l _execbase,A6
000214EA <AmiBlitz3_noFPU_r470.ab3@2994>   MOVE.l mempool,a0
000214EE <AmiBlitz3_noFPU_r470.ab3@2995> JMP _FreePooled(A6)
000214F0 <AmiBlitz3_noFPU_r470.ab3@2998> RTS
000214F2 <AmiBlitz3_noFPU_r470.ab3@3002>   MOVEQ.l #$00,D2
000214F6 <AmiBlitz3_noFPU_r470.ab3@3005>   ADDQ.w #1,4(a0)
000214F8 <AmiBlitz3_noFPU_r470.ab3@3006>    MOVE.b (A4)+,D0
000214FC <AmiBlitz3_noFPU_r470.ab3@3008>    BEQ exit1
00021500 <AmiBlitz3_noFPU_r470.ab3@3009>    BPL.w JL_0_3CD8
00021504 <AmiBlitz3_noFPU_r470.ab3@3010>   ADDQ.w #1,4(a0)
00021506 <AmiBlitz3_noFPU_r470.ab3@3011>   ADDQ.w #1,A4
0002150A <AmiBlitz3_noFPU_r470.ab3@3012> BRA.w JL_0_3CC8
00021510 <AmiBlitz3_noFPU_r470.ab3@3015>    TST.w instringon
00021514 <AmiBlitz3_noFPU_r470.ab3@3016>    BNE 'lnom
00021518 <AmiBlitz3_noFPU_r470.ab3@3017>    CMP.b #";",d0
0002151C <AmiBlitz3_noFPU_r470.ab3@3018>    BEQ exit2
00021520 <AmiBlitz3_noFPU_r470.ab3@3019>    CMP.b #":",d0
00021524 <AmiBlitz3_noFPU_r470.ab3@3020>    BEQ exit2
00021528 <AmiBlitz3_noFPU_r470.ab3@3023>   CMP.b #$22,D0
0002152C <AmiBlitz3_noFPU_r470.ab3@3024>    BNE.w JL_0_3CEA
00021532 <AmiBlitz3_noFPU_r470.ab3@3025>   NOT.w instringon
00021536 <AmiBlitz3_noFPU_r470.ab3@3026> BRA.w JL_0_3CC8
0002153C <AmiBlitz3_noFPU_r470.ab3@3030>   TST.w instringon
00021540 <AmiBlitz3_noFPU_r470.ab3@3031>    BNE.w JL_0_3CC8
00021544 <AmiBlitz3_noFPU_r470.ab3@3032>    CMP.b #"@",d0
00021548 <AmiBlitz3_noFPU_r470.ab3@3033>    BNE 'l10
0002154C <AmiBlitz3_noFPU_r470.ab3@3034>    CMP.b #"@",(a4)
00021550 <AmiBlitz3_noFPU_r470.ab3@3035>    BNE 'l10
00021556 <AmiBlitz3_noFPU_r470.ab3@3036>    TST.w ininclude
0002155A <AmiBlitz3_noFPU_r470.ab3@3037>    BNE errorjoin
00021560 <AmiBlitz3_noFPU_r470.ab3@3038>    MOVE.l sourceline3,a4
00021566 <AmiBlitz3_noFPU_r470.ab3@3039>    CMP.l #0,a4
0002156A <AmiBlitz3_noFPU_r470.ab3@3040>    BNE 'l11
00021570 <AmiBlitz3_noFPU_r470.ab3@3041>    MOVE.l sourceline,a4
00021572 <AmiBlitz3_noFPU_r470.ab3@3044>   MOVE.l (a4),a4
00021578 <AmiBlitz3_noFPU_r470.ab3@3045>       CMP.l #0,a4
0002157C <AmiBlitz3_noFPU_r470.ab3@3046>       BNE 'l12
0002157E <AmiBlitz3_noFPU_r470.ab3@3047>       MOVEQ #0,d0
00021584 <AmiBlitz3_noFPU_r470.ab3@3048>       JSR error
0002158A <AmiBlitz3_noFPU_r470.ab3@3051>    MOVE.l a4,sourceline3
0002158E <AmiBlitz3_noFPU_r470.ab3@3052>    LEA 9(a4),a4
00021590 <AmiBlitz3_noFPU_r470.ab3@3053>    MOVEQ #",",d0
00021594 <AmiBlitz3_noFPU_r470.ab3@3056>   CMP.b #$2C,D0
00021598 <AmiBlitz3_noFPU_r470.ab3@3057>    BNE.w JL_0_3D06
0002159A <AmiBlitz3_noFPU_r470.ab3@3058>   TST.w D2
0002159E <AmiBlitz3_noFPU_r470.ab3@3059>    BEQ.w JL_0_3D30
000215A2 <AmiBlitz3_noFPU_r470.ab3@3060> BRA.w JL_0_3CC8
000215A6 <AmiBlitz3_noFPU_r470.ab3@3064>    CMP.b #$7B,D0                                           ;"{"
000215AA <AmiBlitz3_noFPU_r470.ab3@3065>    BEQ.w 'l10
000215AE <AmiBlitz3_noFPU_r470.ab3@3066>   CMP.b #$28,D0                                            ;"("
000215B2 <AmiBlitz3_noFPU_r470.ab3@3069>    BNE.w JL_0_3D14
000215B4 <AmiBlitz3_noFPU_r470.ab3@3070>   ADDQ.w #1,D2
000215B8 <AmiBlitz3_noFPU_r470.ab3@3071> BRA.w JL_0_3CC8
000215BC <AmiBlitz3_noFPU_r470.ab3@3074>   CMP.b #$7D,D0                                           ;"}"
000215C0 <AmiBlitz3_noFPU_r470.ab3@3075>    BNE.w JL_0_3D22
000215C2 <AmiBlitz3_noFPU_r470.ab3@3076>  TST.w D2
000215C6 <AmiBlitz3_noFPU_r470.ab3@3077>    BEQ.w JL_0_3D30
000215CA <AmiBlitz3_noFPU_r470.ab3@3081>    CMP.b #$7D,D0                                           ;"}"
000215CE <AmiBlitz3_noFPU_r470.ab3@3082>    BEQ.w 'l10
000215D2 <AmiBlitz3_noFPU_r470.ab3@3083>   CMP.b #$29,D0                                            ;")"
000215D6 <AmiBlitz3_noFPU_r470.ab3@3086>    BNE.w JL_0_3CC8
000215D8 <AmiBlitz3_noFPU_r470.ab3@3087>   SUBQ.w #1,D2
000215DC <AmiBlitz3_noFPU_r470.ab3@3088> BRA.w JL_0_3CC8
000215DE <AmiBlitz3_noFPU_r470.ab3@3091> RTS
000215E0 <AmiBlitz3_noFPU_r470.ab3@3095>       SUBQ.l #1,a4
000215E6 <AmiBlitz3_noFPU_r470.ab3@3096>       CLR.l sourceline3
000215E8 <AmiBlitz3_noFPU_r470.ab3@3097> RTS
000215EA <AmiBlitz3_noFPU_r470.ab3@3101>       MOVEQ #0,d0
000215EC <AmiBlitz3_noFPU_r470.ab3@3102>       SUBQ.l #1,a4
000215F2 <AmiBlitz3_noFPU_r470.ab3@3103>       CLR.l sourceline3
000215F4 <AmiBlitz3_noFPU_r470.ab3@3104> RTS
000215F8 <AmiBlitz3_noFPU_r470.ab3@3108>   CMP.b #$7B,D0                                            ;"{"
000215FC <AmiBlitz3_noFPU_r470.ab3@3109>   BEQ.w JL_0_3D3E
00021600 <AmiBlitz3_noFPU_r470.ab3@3110>   CMP.b #$28,D0                                            ;"("
00021602 <AmiBlitz3_noFPU_r470.ab3@3113> RTS
00021606 <AmiBlitz3_noFPU_r470.ab3@3117>   CMP.b #$7D,D0                                            ;"}"
0002160A <AmiBlitz3_noFPU_r470.ab3@3118>   BEQ.w JL_0_3D4C
0002160E <AmiBlitz3_noFPU_r470.ab3@3119>   CMP.b #$29,D0                                            ;")"
00021610 <AmiBlitz3_noFPU_r470.ab3@3122> RTS
00021612 <AmiBlitz3_noFPU_r470.ab3@3126> stopit:     Ds.w 1
00021614 <AmiBlitz3_noFPU_r470.ab3@3127> clrreq:     Ds.w 1
00021618 <AmiBlitz3_noFPU_r470.ab3@3148>   MOVE.w clrreq(PC),D0
0002161C <AmiBlitz3_noFPU_r470.ab3@3149>    BEQ.w close_compilewin__skip
0002164E <AmiBlitz3_noFPU_r470.ab3@3151> 
00021654 <AmiBlitz3_noFPU_r470.ab3@3153>   LEA clrreq,a0
00021656 <AmiBlitz3_noFPU_r470.ab3@3154>   NOT.w (a0)                                               ;reass
0002165C <AmiBlitz3_noFPU_r470.ab3@3155>   MOVEA.l ptr_ThisTask,A0
00021660 <AmiBlitz3_noFPU_r470.ab3@3156>   CLR.l $1E(A0)
00021664 <AmiBlitz3_noFPU_r470.ab3@3157>   CLR.l $2A(A0)
00021666 <AmiBlitz3_noFPU_r470.ab3@3160> RTS
00021668 <AmiBlitz3_noFPU_r470.ab3@3163> intsused:  Ds.w 1
00021670 <AmiBlitz3_noFPU_r470.ab3@3167>   MOVE.w #-1,blitzoff
00021676 <AmiBlitz3_noFPU_r470.ab3@3168>   CLR.w intsused
0002167C <AmiBlitz3_noFPU_r470.ab3@3169>   CLR.w anyerrs
00021682 <AmiBlitz3_noFPU_r470.ab3@3170>   CLR.w blitzmode
00021688 <AmiBlitz3_noFPU_r470.ab3@3171>   CLR.w dontwrite                                              ;nomemleft
0002168E <AmiBlitz3_noFPU_r470.ab3@3172>   CLR.w constmode
00021694 <AmiBlitz3_noFPU_r470.ab3@3173>   CLR.w cmake
0002169A <AmiBlitz3_noFPU_r470.ab3@3174>   CLR.w cfetchmode
000216A0 <AmiBlitz3_noFPU_r470.ab3@3175>   CLR.l intdata1
000216A6 <AmiBlitz3_noFPU_r470.ab3@3176>   CLR.w fuckpos
000216AC <AmiBlitz3_noFPU_r470.ab3@3177>   CLR.w procnum
000216B2 <AmiBlitz3_noFPU_r470.ab3@3178>   CLR.w procnum2
000216B8 <AmiBlitz3_noFPU_r470.ab3@3179>   CLR.w dfetch
000216BE <AmiBlitz3_noFPU_r470.ab3@3180>   CLR.l titleat
000216C4 <AmiBlitz3_noFPU_r470.ab3@3181>   CLR.b usedpath
000216CA <AmiBlitz3_noFPU_r470.ab3@3182>   CLR.b path2
000216D0 <AmiBlitz3_noFPU_r470.ab3@3183>   CLR.w inerr
000216D6 <AmiBlitz3_noFPU_r470.ab3@3184>   CLR.w intlevel
000216DC <AmiBlitz3_noFPU_r470.ab3@3185>   CLR.l cont_pc
000216E2 <AmiBlitz3_noFPU_r470.ab3@3186>   CLR.l cont_pc2
000216E8 <AmiBlitz3_noFPU_r470.ab3@3187>   CLR.l lastcontlink
000216F2 <AmiBlitz3_noFPU_r470.ab3@3188>   MOVE.l destbufferstart,destpointer
000216FC <AmiBlitz3_noFPU_r470.ab3@3189>   MOVE.l destbufferstart,bigpc
00021706 <AmiBlitz3_noFPU_r470.ab3@3190>   MOVE.l destbufferend,libend
00021710 <AmiBlitz3_noFPU_r470.ab3@3191>   MOVE.l data1start,data1
0002171A <AmiBlitz3_noFPU_r470.ab3@3192>   MOVE.l data2at,data2
00021722 <AmiBlitz3_noFPU_r470.ab3@3193>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
0002172A <AmiBlitz3_noFPU_r470.ab3@3194>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021730 <AmiBlitz3_noFPU_r470.ab3@3195>   CLR.w oldvcodelen
00021736 <AmiBlitz3_noFPU_r470.ab3@3196>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021738 <AmiBlitz3_noFPU_r470.ab3@3197> RTS
0002173A <AmiBlitz3_noFPU_r470.ab3@3200> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021740 <AmiBlitz3_noFPU_r470.ab3@3204>   LEA  clrreq,a1
00021744 <AmiBlitz3_noFPU_r470.ab3@3205>   MOVE.w #2000,(a1)
0002176E <AmiBlitz3_noFPU_r470.ab3@3206>   !basic
00021784 <AmiBlitz3_noFPU_r470.ab3@3207> 
000217D4 <AmiBlitz3_noFPU_r470.ab3@3208>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
000217DC <AmiBlitz3_noFPU_r470.ab3@3209>   calcpro.l      = 0
000217E4 <AmiBlitz3_noFPU_r470.ab3@3210>   calcpro_old.l  = 0
000217F0 <AmiBlitz3_noFPU_r470.ab3@3211>   typ_old.l      = -1
000217FC <AmiBlitz3_noFPU_r470.ab3@3212>   pass_old.l     = -1
00021802 <AmiBlitz3_noFPU_r470.ab3@3213>   update_comstatus_gui.b = True ; for the first
0002183C <AmiBlitz3_noFPU_r470.ab3@3215>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021876 <AmiBlitz3_noFPU_r470.ab3@3216>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021894 <AmiBlitz3_noFPU_r470.ab3@3217>   !asm
000218C6 <AmiBlitz3_noFPU_r470.ab3@3218> 
000218CC <AmiBlitz3_noFPU_r470.ab3@3220>   CLR.w stopit
000218CE <AmiBlitz3_noFPU_r470.ab3@3221> RTS
000218D4 <AmiBlitz3_noFPU_r470.ab3@3225>   CLR.w storedebugmode
000218DA <AmiBlitz3_noFPU_r470.ab3@3226>   CLR.b iserror
000218DE <AmiBlitz3_noFPU_r470.ab3@3227>   BSR.w compilerequester
000218E8 <AmiBlitz3_noFPU_r470.ab3@3229>   MOVE.l #0,globallinecount
000218EE <AmiBlitz3_noFPU_r470.ab3@3230>   JSR check_of_same_source
000218F2 <AmiBlitz3_noFPU_r470.ab3@3231>   BSR.w call_setpointerbusy
000218F6 <AmiBlitz3_noFPU_r470.ab3@3232>   BSR.w setcvars
000218FE <AmiBlitz3_noFPU_r470.ab3@3233>   MOVE.w #$8000,globalvarpointer
00021908 <AmiBlitz3_noFPU_r470.ab3@3234>   MOVE.l #newtype_quick,defaulttype
0002190E <AmiBlitz3_noFPU_r470.ab3@3235>   MOVE.l A7,passstack
00021918 <AmiBlitz3_noFPU_r470.ab3@3236>   MOVE.l #firstitem_,sourceline
00021922 <AmiBlitz3_noFPU_r470.ab3@3237>   MOVE.w numlines_org,linesleft
0002192C <AmiBlitz3_noFPU_r470.ab3@3238>   MOVE.l numlines,numlines2
00021932 <AmiBlitz3_noFPU_r470.ab3@3239>   ADDQ.w #1,linesleft
00021938 <AmiBlitz3_noFPU_r470.ab3@3240>   ADDQ.l #1,numlines2
00021942 <AmiBlitz3_noFPU_r470.ab3@3241>   MOVE.l #-1,linenumat
00021946 <AmiBlitz3_noFPU_r470.ab3@3242>   BSR.w resetlibs
0002194A <AmiBlitz3_noFPU_r470.ab3@3243>   BSR.w Aclearallvars
00021950 <AmiBlitz3_noFPU_r470.ab3@3244>   LEA progress_per_line+2,A0
00021952 <AmiBlitz3_noFPU_r470.ab3@3245>   MOVEQ.l #$03,D0
00021954 <AmiBlitz3_noFPU_r470.ab3@3248>     CLR.w (A0)+
00021958 <AmiBlitz3_noFPU_r470.ab3@3249>   DBF D0,JL_0_40EC
0002195E <AmiBlitz3_noFPU_r470.ab3@3252>   LEA _include,a0
00021962 <AmiBlitz3_noFPU_r470.ab3@3253>   MOVEM.l a0-a6/d0-d7,-(a7)
00021968 <AmiBlitz3_noFPU_r470.ab3@3254>   LEA ptr_parameterstore,a1
0002196A <AmiBlitz3_noFPU_r470.ab3@3257>     MOVE.b (a0)+,(a1)+
0002196E <AmiBlitz3_noFPU_r470.ab3@3258>   BNE 'l1b
00021970 <AmiBlitz3_noFPU_r470.ab3@3260>   MOVEQ #9,d2
00021976 <AmiBlitz3_noFPU_r470.ab3@3261>   JSR findlabel2
0002197A <AmiBlitz3_noFPU_r470.ab3@3262>   BNE 'd
00021982 <AmiBlitz3_noFPU_r470.ab3@3263>   MOVE.l #0,8(a2)
00021986 <AmiBlitz3_noFPU_r470.ab3@3264>   MOVEM.l (a7)+,a0-a6/d0-d7
0002198A <AmiBlitz3_noFPU_r470.ab3@3265> BRA 'd2
00021990 <AmiBlitz3_noFPU_r470.ab3@3268>   JSR addlabelhash
00021998 <AmiBlitz3_noFPU_r470.ab3@3269>   MOVE.l #$1,$4(A2)
000219A0 <AmiBlitz3_noFPU_r470.ab3@3270>   MOVE.l #0,8(a2)
000219A4 <AmiBlitz3_noFPU_r470.ab3@3271>   MOVEM.l (a7)+,a0-a6/d0-d7
000219AA <AmiBlitz3_noFPU_r470.ab3@3274>   LEA _debug,a0
000219AE <AmiBlitz3_noFPU_r470.ab3@3275>   MOVEM.l a0-a6/d0-d7,-(a7)
000219B4 <AmiBlitz3_noFPU_r470.ab3@3276>   LEA ptr_parameterstore,a1
000219B6 <AmiBlitz3_noFPU_r470.ab3@3279>     MOVE.b (a0)+,(a1)+
000219BA <AmiBlitz3_noFPU_r470.ab3@3280>   BNE 'l9b
000219BC <AmiBlitz3_noFPU_r470.ab3@3282>   MOVEQ #7,d2
000219C2 <AmiBlitz3_noFPU_r470.ab3@3283>   JSR findlabel2
000219C6 <AmiBlitz3_noFPU_r470.ab3@3284>   BNE 'd9
000219CA <AmiBlitz3_noFPU_r470.ab3@3285>   MOVE.b debugmode(PC),D0
000219CC <AmiBlitz3_noFPU_r470.ab3@3286>   EXT.w d0
000219CE <AmiBlitz3_noFPU_r470.ab3@3287>   EXT.l d0
000219D2 <AmiBlitz3_noFPU_r470.ab3@3288>   MOVE.l d0,8(a2)
000219D6 <AmiBlitz3_noFPU_r470.ab3@3289>   MOVEM.l (a7)+,a0-a6/d0-d7
000219DA <AmiBlitz3_noFPU_r470.ab3@3290> BRA 'd9b
000219E0 <AmiBlitz3_noFPU_r470.ab3@3293>   JSR addlabelhash
000219E8 <AmiBlitz3_noFPU_r470.ab3@3294>   MOVE.l #$1,$4(A2)
000219EC <AmiBlitz3_noFPU_r470.ab3@3295>   MOVE.b debugmode(PC),D0
000219EE <AmiBlitz3_noFPU_r470.ab3@3296>   EXT.w d0
000219F0 <AmiBlitz3_noFPU_r470.ab3@3297>   EXT.l d0
000219F4 <AmiBlitz3_noFPU_r470.ab3@3298>   MOVE.l d0,8(a2)
000219F8 <AmiBlitz3_noFPU_r470.ab3@3299>   MOVEM.l (a7)+,a0-a6/d0-d7
000219FE <AmiBlitz3_noFPU_r470.ab3@3302>   MOVE.l #firstitem_,a0
00021A00 <AmiBlitz3_noFPU_r470.ab3@3303>   MOVE.l (a0),a0
00021A04 <AmiBlitz3_noFPU_r470.ab3@3304>   LEA 9(a0),a0
00021A0C <AmiBlitz3_noFPU_r470.ab3@3305>   MOVE.w #0,exdebug
00021A12 <AmiBlitz3_noFPU_r470.ab3@3306>   TST.b debugmode
00021A16 <AmiBlitz3_noFPU_r470.ab3@3307>    BEQ 'l10
00021A18 <AmiBlitz3_noFPU_r470.ab3@3310>   MOVE.b (a0)+,d0
00021A1C <AmiBlitz3_noFPU_r470.ab3@3311>    BEQ 'l10
00021A20 <AmiBlitz3_noFPU_r470.ab3@3312>   CMP.b #$20,d0
00021A24 <AmiBlitz3_noFPU_r470.ab3@3313>    BEQ 'l2
00021A26 <AmiBlitz3_noFPU_r470.ab3@3314>   SUBQ.l #1,a0
00021A2C <AmiBlitz3_noFPU_r470.ab3@3315>   CMP.l #"DEBU",(a0)
00021A30 <AmiBlitz3_noFPU_r470.ab3@3316>    BNE 'l10
00021A36 <AmiBlitz3_noFPU_r470.ab3@3317>   CMP.b #"G",4(a0)
00021A3A <AmiBlitz3_noFPU_r470.ab3@3318>    BNE 'l10
00021A42 <AmiBlitz3_noFPU_r470.ab3@3319>   MOVE.w #$0,debugversion
00021A4A <AmiBlitz3_noFPU_r470.ab3@3320>   MOVE.b #1,exdebug
00021A50 <AmiBlitz3_noFPU_r470.ab3@3323>   LEA nops4,A0
00021A56 <AmiBlitz3_noFPU_r470.ab3@3324>   LEA dataget,A1
00021A5C <AmiBlitz3_noFPU_r470.ab3@3325>   JSR pokecode2                                            ;write intro nops
00021A62 <AmiBlitz3_noFPU_r470.ab3@3326>   MOVE.l #$01010101,d1
00021A68 <AmiBlitz3_noFPU_r470.ab3@3327>   JSR writedatalong                                        ;for the 4 tempregs
00021A6E <AmiBlitz3_noFPU_r470.ab3@3328>   JSR writedatalong
00021A74 <AmiBlitz3_noFPU_r470.ab3@3329>   JSR writedatalong
00021A7A <AmiBlitz3_noFPU_r470.ab3@3330>   JSR writedatalong
00021A80 <AmiBlitz3_noFPU_r470.ab3@3331>   TST.b saved0
00021A84 <AmiBlitz3_noFPU_r470.ab3@3332>    BEQ 'l1
00021A8A <AmiBlitz3_noFPU_r470.ab3@3333>   MOVE.l #$4e714e71,d1
00021A90 <AmiBlitz3_noFPU_r470.ab3@3334>   JSR writelong                                            ;add 2 nops
00021A96 <AmiBlitz3_noFPU_r470.ab3@3335>   MOVE.l #$4e714e71,d1
00021A9C <AmiBlitz3_noFPU_r470.ab3@3336>   JSR writelong                                            ;add 2 nops
00021AA2 <AmiBlitz3_noFPU_r470.ab3@3337>   MOVE.l #$4e714e71,d1
00021AA8 <AmiBlitz3_noFPU_r470.ab3@3338>   JSR writelong                                            ;add 2 nops
00021AAE <AmiBlitz3_noFPU_r470.ab3@3339>    MOVE.l #$4e714e71,d1
00021AB4 <AmiBlitz3_noFPU_r470.ab3@3340>   JSR writelong                                            ;add 2 nops
00021AB8 <AmiBlitz3_noFPU_r470.ab3@3343>   MOVE.b debugmode(PC),D1
00021ABC <AmiBlitz3_noFPU_r470.ab3@3344>    BEQ.b JL_0_4132
00021AC6 <AmiBlitz3_noFPU_r470.ab3@3345>   MOVE.b debugmode,storedebugmode
00021ACA <AmiBlitz3_noFPU_r470.ab3@3346>   MOVE.w #$FFDC,D1
00021ACE <AmiBlitz3_noFPU_r470.ab3@3347>    BSR.w uselib
00021AD4 <AmiBlitz3_noFPU_r470.ab3@3348>   TST.w debugversion                                       ;make a version for debugger
00021AD8 <AmiBlitz3_noFPU_r470.ab3@3349>    BNE.b JL_0_412A
00021ADC <AmiBlitz3_noFPU_r470.ab3@3353>   MOVE.w #$FA3C,D1
00021AE0 <AmiBlitz3_noFPU_r470.ab3@3354>    BSR.w uselib
00021AE4 <AmiBlitz3_noFPU_r470.ab3@3355>   MOVE.w #$0001,D1
00021AE8 <AmiBlitz3_noFPU_r470.ab3@3356>    BSR.w uselib
00021AEC <AmiBlitz3_noFPU_r470.ab3@3357> BRA.b JL_0_4132
00021AF0 <AmiBlitz3_noFPU_r470.ab3@3360>   MOVE.w #$FA32,D1
00021AF4 <AmiBlitz3_noFPU_r470.ab3@3361>   BSR.w uselib
00021AF8 <AmiBlitz3_noFPU_r470.ab3@3364>   BSR.w nextline
00021AFE <AmiBlitz3_noFPU_r470.ab3@3365>   CLR.l linenum
00021B04 <AmiBlitz3_noFPU_r470.ab3@3366>   CLR.l stacktrack
00021B0A <AmiBlitz3_noFPU_r470.ab3@3369>   ADDQ.l #1,linenum
00021B14 <AmiBlitz3_noFPU_r470.ab3@3370>   MOVE.l destpointer,destpointer2
00021B1A <AmiBlitz3_noFPU_r470.ab3@3371>   MOVE.l a5,sourceline2
00021B1E <AmiBlitz3_noFPU_r470.ab3@3372>   BSR.w compile_line                                        ;compile pass
00021B22 <AmiBlitz3_noFPU_r470.ab3@3375>   BSR.w nextline
00021B26 <AmiBlitz3_noFPU_r470.ab3@3376>    BNE.w JL_0_4136
00021B2A <AmiBlitz3_noFPU_r470.ab3@3377>   BSR.w JUMP_do_runerrson
00021B2E <AmiBlitz3_noFPU_r470.ab3@3378>   BSR.w pointchk
00021B34 <AmiBlitz3_noFPU_r470.ab3@3379>   TST.b objectcount
00021B38 <AmiBlitz3_noFPU_r470.ab3@3380>    BNE macenderr
00021B3E <AmiBlitz3_noFPU_r470.ab3@3381>   CLR.l linenumat
00021B42 <AmiBlitz3_noFPU_r470.ab3@3382>   BSR.w errchx2
00021B4C <AmiBlitz3_noFPU_r470.ab3@3383>   CMP.l #-1,bssend
00021B50 <AmiBlitz3_noFPU_r470.ab3@3384>    BNE 'l30
00021B5A <AmiBlitz3_noFPU_r470.ab3@3385>   MOVE.l destpointer,bssend                                ;compile end
00021B60 <AmiBlitz3_noFPU_r470.ab3@3388>   MOVE.l destpointer,d0
00021B6A <AmiBlitz3_noFPU_r470.ab3@3389>   CMP.l #-1,bssstart
00021B6E <AmiBlitz3_noFPU_r470.ab3@3390>   BNE 'lnf6
00021B78 <AmiBlitz3_noFPU_r470.ab3@3391>   CMP.l #-1,chipstart
00021B7C <AmiBlitz3_noFPU_r470.ab3@3392>   BNE 'lnf6
00021B80 <AmiBlitz3_noFPU_r470.ab3@3393> BRA 'leven4
00021B86 <AmiBlitz3_noFPU_r470.ab3@3396>   MOVE.l destpointer,d1
00021B88 <AmiBlitz3_noFPU_r470.ab3@3397>   ADDQ.l #3,d1
00021B8E <AmiBlitz3_noFPU_r470.ab3@3398>   AND.l #$fffffffc,d1                                      ;bug ?
00021B94 <AmiBlitz3_noFPU_r470.ab3@3399>   MOVE.l d1,destpointer
00021B9E <AmiBlitz3_noFPU_r470.ab3@3402>   MOVE.l destpointer,codeend
00021BA8 <AmiBlitz3_noFPU_r470.ab3@3403>   CMP.l #-1,chipend
00021BAC <AmiBlitz3_noFPU_r470.ab3@3404>   BNE 'l31
00021BB6 <AmiBlitz3_noFPU_r470.ab3@3405>   MOVE.l destpointer,chipend
00021BBC <AmiBlitz3_noFPU_r470.ab3@3408>   MOVE.l destpointer,d1
00021BBE <AmiBlitz3_noFPU_r470.ab3@3409>   ADDQ.l #1,d1
00021BC4 <AmiBlitz3_noFPU_r470.ab3@3410>   AND.l #$fffffffe,d1                                     ;new evenexit
00021BCA <AmiBlitz3_noFPU_r470.ab3@3411>   MOVE.l d1,destpointer
00021BCE <AmiBlitz3_noFPU_r470.ab3@3412>   MOVE.b debugmode(PC),D1
00021BD2 <AmiBlitz3_noFPU_r470.ab3@3413>    BEQ.b JL_0_4180
00021BD6 <AmiBlitz3_noFPU_r470.ab3@3414>    BSR.w debugstuff
00021BDA <AmiBlitz3_noFPU_r470.ab3@3415>   MOVE.w #$C300,D1
00021BE0 <AmiBlitz3_noFPU_r470.ab3@3416>    JSR Atokejsr
00021BE4 <AmiBlitz3_noFPU_r470.ab3@3417>    BSR.w debugstuff
00021BE8 <AmiBlitz3_noFPU_r470.ab3@3418>   MOVE.l eopcode(PC),D1
00021BEE <AmiBlitz3_noFPU_r470.ab3@3419>    JSR writelong
00021BF2 <AmiBlitz3_noFPU_r470.ab3@3420>   MOVE.l lastcontlink(PC),D1
00021BF6 <AmiBlitz3_noFPU_r470.ab3@3421>    BEQ.b JL_0_4180
00021BF8 <AmiBlitz3_noFPU_r470.ab3@3422>   MOVEA.l D1,A0
00021BFC <AmiBlitz3_noFPU_r470.ab3@3423>   CLR.w $6(A0)
00021C06 <AmiBlitz3_noFPU_r470.ab3@3429>   MOVE.l destpointer,endop                                ;where end goes...
00021C0C <AmiBlitz3_noFPU_r470.ab3@3431>   TST.w blitzmode
00021C10 <AmiBlitz3_noFPU_r470.ab3@3432>   BEQ.w JL_0_4198
00021C14 <AmiBlitz3_noFPU_r470.ab3@3433>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00021C1A <AmiBlitz3_noFPU_r470.ab3@3436>   TST.w intsused
00021C1E <AmiBlitz3_noFPU_r470.ab3@3437>   BEQ.b JL_0_41AA
00021C22 <AmiBlitz3_noFPU_r470.ab3@3438>   MOVE.w #$C105,D1                                        ;interupts off!
00021C28 <AmiBlitz3_noFPU_r470.ab3@3439>   JSR tokejsr2
00021C2C <AmiBlitz3_noFPU_r470.ab3@3442>   BSR.w calcstatic
00021C32 <AmiBlitz3_noFPU_r470.ab3@3443>   MOVE.w D4,numstatic
00021C38 <AmiBlitz3_noFPU_r470.ab3@3444>   MOVE.l D3,staticdata
00021C3C <AmiBlitz3_noFPU_r470.ab3@3445>    BSR.w calcmaxs
00021C42 <AmiBlitz3_noFPU_r470.ab3@3447>   TST.l tokeslist
00021C46 <AmiBlitz3_noFPU_r470.ab3@3448>    BEQ.b JL_0_41F8
00021C4C <AmiBlitz3_noFPU_r470.ab3@3449>   MOVE.w gotocode,D1                                       ;jmp!
00021C52 <AmiBlitz3_noFPU_r470.ab3@3450>    JSR writeword
00021C5C <AmiBlitz3_noFPU_r470.ab3@3451>   MOVE.l destpointer,endjmpat
00021C60 <AmiBlitz3_noFPU_r470.ab3@3452>    BSR.w addoff
00021C66 <AmiBlitz3_noFPU_r470.ab3@3453>    JSR writelong                                           
00021C6A <AmiBlitz3_noFPU_r470.ab3@3455>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00021C70 <AmiBlitz3_noFPU_r470.ab3@3459>   TST.w dontwrite
00021C74 <AmiBlitz3_noFPU_r470.ab3@3460>    BNE.b JL_0_41F8
00021C78 <AmiBlitz3_noFPU_r470.ab3@3461>   MOVEA.l endjmpat(PC),A4
00021C7E <AmiBlitz3_noFPU_r470.ab3@3462>   MOVE.l destpointer,(A4)
00021C84 <AmiBlitz3_noFPU_r470.ab3@3465>   TST.b returncode
00021C88 <AmiBlitz3_noFPU_r470.ab3@3466>   BEQ 'l2
00021C8C <AmiBlitz3_noFPU_r470.ab3@3467>   MOVE.w #$2e80,d1
00021C92 <AmiBlitz3_noFPU_r470.ab3@3468>   JSR writeword
00021C98 <AmiBlitz3_noFPU_r470.ab3@3471>   JSR JL_0_B98A
00021C9E <AmiBlitz3_noFPU_r470.ab3@3472>   TST.b returncode
00021CA2 <AmiBlitz3_noFPU_r470.ab3@3473>   BEQ 'l3
00021CA6 <AmiBlitz3_noFPU_r470.ab3@3474>   MOVE.w #$4e75,d1
00021CAC <AmiBlitz3_noFPU_r470.ab3@3475>   JSR writeword
00021CB0 <AmiBlitz3_noFPU_r470.ab3@3476> BRA 'l1
00021CB6 <AmiBlitz3_noFPU_r470.ab3@3479>   MOVE.l #$70004E75,D1
00021CBC <AmiBlitz3_noFPU_r470.ab3@3480>   JSR writelong                                            ;write moveq #0,d0:rts
00021CC2 <AmiBlitz3_noFPU_r470.ab3@3483>   JSR JL_0_B73E
00021CC6 <AmiBlitz3_noFPU_r470.ab3@3484>   BSR.w asmfixer
00021CCA <AmiBlitz3_noFPU_r470.ab3@3485>   BSR.w close_compilewin
00021CCE <AmiBlitz3_noFPU_r470.ab3@3486> BRA.w call_setpointernormal
00021CD4 <AmiBlitz3_noFPU_r470.ab3@3490> JMP do_runerrson
00021CD6 <AmiBlitz3_noFPU_r470.ab3@3494> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00021CD8 <AmiBlitz3_noFPU_r470.ab3@3495>             Dc.b $4E,$40                                   ;TRAP  #00
00021CDC <AmiBlitz3_noFPU_r470.ab3@3497> endjmpat:   Ds.l 1
00021CE2 <AmiBlitz3_noFPU_r470.ab3@3501>   MOVEA.l newtype_string,A2
00021CE8 <AmiBlitz3_noFPU_r470.ab3@3502>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00021CEC <AmiBlitz3_noFPU_r470.ab3@3505>     CMPA.w #$0,A2
00021CF0 <AmiBlitz3_noFPU_r470.ab3@3506>      BEQ.w pointchk_done
00021CF4 <AmiBlitz3_noFPU_r470.ab3@3507>     CMP.l $4(A2),D0
00021CF8 <AmiBlitz3_noFPU_r470.ab3@3508>      BNE.w pointchk_next
00021D00 <AmiBlitz3_noFPU_r470.ab3@3509>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00021D04 <AmiBlitz3_noFPU_r470.ab3@3510> BRA.w notypeerr
00021D06 <AmiBlitz3_noFPU_r470.ab3@3513>     MOVEA.l (A2),A2
00021D0A <AmiBlitz3_noFPU_r470.ab3@3514> BRA.w pointchk_loop
00021D0C <AmiBlitz3_noFPU_r470.ab3@3517> RTS
00021D12 <AmiBlitz3_noFPU_r470.ab3@3521>   LEA labelbase,A2
00021D14 <AmiBlitz3_noFPU_r470.ab3@3525>   MOVE.l (A2),D0                                           ;testlabels
00021D18 <AmiBlitz3_noFPU_r470.ab3@3526>    BEQ.w errchx2_done
00021D1A <AmiBlitz3_noFPU_r470.ab3@3527>   MOVEA.l D0,A2
00021D1E <AmiBlitz3_noFPU_r470.ab3@3528>   MOVE.l $4(A2),D0
00021D22 <AmiBlitz3_noFPU_r470.ab3@3529>   BTST #$0,D0
00021D26 <AmiBlitz3_noFPU_r470.ab3@3530>    BNE.w errchx2_loop
00021D2A <AmiBlitz3_noFPU_r470.ab3@3531>   MOVE.l $8(A2),D0
00021D2E <AmiBlitz3_noFPU_r470.ab3@3532>    BNE.w errchx2_loop
00021D36 <AmiBlitz3_noFPU_r470.ab3@3533>   MOVE.w $10(A2),linenumat+2
00021D38 <AmiBlitz3_noFPU_r470.ab3@3534>   MOVEQ #0,d0
00021D3C <AmiBlitz3_noFPU_r470.ab3@3535>   MOVE.b $12(a2),d0
00021D44 <AmiBlitz3_noFPU_r470.ab3@3536>   MOVE.w 0(a2,d0),linenumat
00021D4A <AmiBlitz3_noFPU_r470.ab3@3537> JMP nolaberr                                               ;label not found
00021D50 <AmiBlitz3_noFPU_r470.ab3@3540>   MOVE.l concomsp,D0
00021D56 <AmiBlitz3_noFPU_r470.ab3@3541>   CMP.l #concomstack,D0
00021D5A <AmiBlitz3_noFPU_r470.ab3@3542>    BNE.w chxerr4
00021D60 <AmiBlitz3_noFPU_r470.ab3@3543>   MOVE.w connest,D1
00021D64 <AmiBlitz3_noFPU_r470.ab3@3544>    BNE.w chxerr4
00021D66 <AmiBlitz3_noFPU_r470.ab3@3547>   MOVE.l D1,-(A7)
00021D6C <AmiBlitz3_noFPU_r470.ab3@3548>   MOVE.l firstsel,D1
00021D70 <AmiBlitz3_noFPU_r470.ab3@3549>    BNE.w errchx_err1
00021D76 <AmiBlitz3_noFPU_r470.ab3@3550>   MOVE.l firstrep,D1
00021D7A <AmiBlitz3_noFPU_r470.ab3@3551>    BNE.w errchx_err2
00021D80 <AmiBlitz3_noFPU_r470.ab3@3552>   MOVE.w intstring,D1
00021D84 <AmiBlitz3_noFPU_r470.ab3@3553>    BNE.w errchx_err3
00021D88 <AmiBlitz3_noFPU_r470.ab3@3554>   MOVE.l 4(a7),d1
00021D8E <AmiBlitz3_noFPU_r470.ab3@3555>   MOVE.w proceduremode,D1
00021D92 <AmiBlitz3_noFPU_r470.ab3@3556>    BNE.w errchx_err6
00021D98 <AmiBlitz3_noFPU_r470.ab3@3557>   MOVE.l firstiff,d1
00021D9C <AmiBlitz3_noFPU_r470.ab3@3558>    BNE errchx_err5
00021DA2 <AmiBlitz3_noFPU_r470.ab3@3559>   MOVE.l firstfor,D1
00021DA6 <AmiBlitz3_noFPU_r470.ab3@3560>    BNE.w errchx_err7
00021DA8 <AmiBlitz3_noFPU_r470.ab3@3561>   MOVE.l (A7)+,D1
00021DAA <AmiBlitz3_noFPU_r470.ab3@3562> RTS
00021DB4 <AmiBlitz3_noFPU_r470.ab3@3566>   MOVE.l sellineat,linenumat
00021DBA <AmiBlitz3_noFPU_r470.ab3@3567> JMP selerrz
00021DC4 <AmiBlitz3_noFPU_r470.ab3@3570>   MOVE.l replineat,linenumat
00021DCA <AmiBlitz3_noFPU_r470.ab3@3571> JMP unterr3
00021DD4 <AmiBlitz3_noFPU_r470.ab3@3574>   MOVE.l intlineat,linenumat
00021DDA <AmiBlitz3_noFPU_r470.ab3@3575> JMP interr2
00021DE4 <AmiBlitz3_noFPU_r470.ab3@3578>   MOVE.l iflineat,linenumat
00021DEA <AmiBlitz3_noFPU_r470.ab3@3579> JMP noenderr
00021DF4 <AmiBlitz3_noFPU_r470.ab3@3582>   MOVE.l prolineat,linenumat
00021DFA <AmiBlitz3_noFPU_r470.ab3@3583> JMP nopenderr
00021E04 <AmiBlitz3_noFPU_r470.ab3@3586>   MOVE.l forlineat,linenumat
00021E0A <AmiBlitz3_noFPU_r470.ab3@3587> JMP nonexterr
00021E14 <AmiBlitz3_noFPU_r470.ab3@3590>   MOVE.l ciflineat,linenumat
00021E1A <AmiBlitz3_noFPU_r470.ab3@3591> JMP nocenderr
00021E24 <AmiBlitz3_noFPU_r470.ab3@3595>   MOVE.l data1,maxsat
00021E26 <AmiBlitz3_noFPU_r470.ab3@3596>   MOVEQ.l #$00,D4
00021E2C <AmiBlitz3_noFPU_r470.ab3@3597>   MOVEA.l libpointer,A2
00021E30 <AmiBlitz3_noFPU_r470.ab3@3600>     CMPA.w #$0,A2
00021E34 <AmiBlitz3_noFPU_r470.ab3@3601>      BEQ.w calcmaxs_done
00021E38 <AmiBlitz3_noFPU_r470.ab3@3602>     TST.w $C(A2)
00021E3C <AmiBlitz3_noFPU_r470.ab3@3603>      BPL.w calcmaxs_next
00021E40 <AmiBlitz3_noFPU_r470.ab3@3604>     MOVE.l $12(A2),D0
00021E44 <AmiBlitz3_noFPU_r470.ab3@3605>     TST.w -$2(A2,D0.L)
00021E48 <AmiBlitz3_noFPU_r470.ab3@3606>      BEQ.w calcmaxs_next
00021E4A <AmiBlitz3_noFPU_r470.ab3@3607>     ADDQ.w #1,D4
00021E4E <AmiBlitz3_noFPU_r470.ab3@3608>     MOVE.w -$6(A2,D0.L),D1
00021E52 <AmiBlitz3_noFPU_r470.ab3@3609>     BSR.w pokedata1
00021E54 <AmiBlitz3_noFPU_r470.ab3@3610>     MOVEQ.l #$01,D1
00021E58 <AmiBlitz3_noFPU_r470.ab3@3611>     MOVE.w -$2(A2,D0.L),D2
00021E5A <AmiBlitz3_noFPU_r470.ab3@3612>     LSL.w D2,D1
00021E5E <AmiBlitz3_noFPU_r470.ab3@3613>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00021E62 <AmiBlitz3_noFPU_r470.ab3@3614>     BSR.w writedatalong
00021E64 <AmiBlitz3_noFPU_r470.ab3@3617>     MOVEA.l (A2),A2
00021E68 <AmiBlitz3_noFPU_r470.ab3@3618> BRA.w calcmaxs_loop
00021E6E <AmiBlitz3_noFPU_r470.ab3@3621>   MOVE.w D4,maxsused
00021E72 <AmiBlitz3_noFPU_r470.ab3@3622>    BEQ.w calcmaxs_done2
00021E76 <AmiBlitz3_noFPU_r470.ab3@3623>   MOVE.w #$FFFA,D1                                         ;;use memlib
00021E7A <AmiBlitz3_noFPU_r470.ab3@3624> BRA.w uselib
00021E7C <AmiBlitz3_noFPU_r470.ab3@3627> RTS
00021E82 <AmiBlitz3_noFPU_r470.ab3@3631>    MOVE.l a7,stackaddr
00021E86 <AmiBlitz3_noFPU_r470.ab3@3632>    BSR.w compile_term
00021E8A <AmiBlitz3_noFPU_r470.ab3@3633>    BSR.w reget
00021E8E <AmiBlitz3_noFPU_r470.ab3@3634>    BNE.w illeolerr
00021E94 <AmiBlitz3_noFPU_r470.ab3@3635>    TST.w dontwrite
00021E98 <AmiBlitz3_noFPU_r470.ab3@3636>    BNE 'l1
00021E9E <AmiBlitz3_noFPU_r470.ab3@3637>    TST.l stacktrack
00021EA2 <AmiBlitz3_noFPU_r470.ab3@3638>    BNE errormsg_stack
00021EA6 <AmiBlitz3_noFPU_r470.ab3@3641>    CMP.w #-$7FDE,D0
00021EAA <AmiBlitz3_noFPU_r470.ab3@3642>    BNE.w compile_line_notelse
00021EB0 <AmiBlitz3_noFPU_r470.ab3@3643>    JSR do_else2
00021EB4 <AmiBlitz3_noFPU_r470.ab3@3644> BRA.w compile_line
00021EB6 <AmiBlitz3_noFPU_r470.ab3@3647>   TST.w D0
00021EBA <AmiBlitz3_noFPU_r470.ab3@3648>   BNE.w compile_line
00021EC0 <AmiBlitz3_noFPU_r470.ab3@3653>   MOVE.l firstiff,D0
00021EC4 <AmiBlitz3_noFPU_r470.ab3@3654>    BEQ.w compile_line_done
00021EC6 <AmiBlitz3_noFPU_r470.ab3@3655>   MOVEA.l D0,A0
00021ECA <AmiBlitz3_noFPU_r470.ab3@3656>   MOVE.w $C(A0),D1
00021ECE <AmiBlitz3_noFPU_r470.ab3@3657>    BPL.w compile_line_done
00021ED2 <AmiBlitz3_noFPU_r470.ab3@3661>   BCLR #$F,D1
00021ED8 <AmiBlitz3_noFPU_r470.ab3@3662>    JSR AJL_0_D7B8
00021EDE <AmiBlitz3_noFPU_r470.ab3@3663>    JSR AJL_0_D81C
00021EE2 <AmiBlitz3_noFPU_r470.ab3@3664> BRA.w compile_line_unthen
00021EE4 <AmiBlitz3_noFPU_r470.ab3@3667> RTS
00021EEA <AmiBlitz3_noFPU_r470.ab3@3671>   LEA lastgloballabel,A0
00021EEC <AmiBlitz3_noFPU_r470.ab3@3672>   TST.b (A0)
00021EF0 <AmiBlitz3_noFPU_r470.ab3@3673>   BEQ.w nolocerr
00021EF6 <AmiBlitz3_noFPU_r470.ab3@3674>   LEA ptr_parameterstore,A1
00021EF8 <AmiBlitz3_noFPU_r470.ab3@3675>   MOVEQ.l #$00,D2
00021EFA <AmiBlitz3_noFPU_r470.ab3@3678>   ADDQ.w #1,D2
00021EFC <AmiBlitz3_noFPU_r470.ab3@3679>   MOVE.b (A0)+,(A1)+
00021F00 <AmiBlitz3_noFPU_r470.ab3@3680>    BNE.w createlab_loop
00021F06 <AmiBlitz3_noFPU_r470.ab3@3681>   MOVE.b #$27,-$1(A1)
00021F08 <AmiBlitz3_noFPU_r470.ab3@3682>   MOVE.w D2,-(A7)
00021F0E <AmiBlitz3_noFPU_r470.ab3@3683>    JSR makename4
00021F10 <AmiBlitz3_noFPU_r470.ab3@3684>   CMP.w (A7)+,D2
00021F14 <AmiBlitz3_noFPU_r470.ab3@3685>    BEQ.w syntaxerr
00021F16 <AmiBlitz3_noFPU_r470.ab3@3686>    TST.w d0
00021F1A <AmiBlitz3_noFPU_r470.ab3@3687>    BPL createlab_done
00021F22 <AmiBlitz3_noFPU_r470.ab3@3688>    MOVE.w #$3a,lastchar
00021F24 <AmiBlitz3_noFPU_r470.ab3@3689>    SUBQ.l #2,a5
00021F26 <AmiBlitz3_noFPU_r470.ab3@3692> RTS
00021F30 <AmiBlitz3_noFPU_r470.ab3@3696>   MOVE.l #forthstack,forthsp
00021F3A <AmiBlitz3_noFPU_r470.ab3@3697>   MOVE.l #precstack,precsp
00021F3C <AmiBlitz3_noFPU_r470.ab3@3698> RTS
00021F3E <AmiBlitz3_noFPU_r470.ab3@3705>   MOVEQ.l #$00,D4
00021F68 <AmiBlitz3_noFPU_r470.ab3@3708>   !basic
00021FAA <AmiBlitz3_noFPU_r470.ab3@3709> 
00021FBA <AmiBlitz3_noFPU_r470.ab3@3711>   If (c_abort = 1)           ; check if set
00021FBC <AmiBlitz3_noFPU_r470.ab3@3712>     MOVEQ.l #-$01,d4
00021FC2 <AmiBlitz3_noFPU_r470.ab3@3713>     MOVE.w D4,stopit
00021FE0 <AmiBlitz3_noFPU_r470.ab3@3714>     !asm
00021FE4 <AmiBlitz3_noFPU_r470.ab3@3715>     BRA chkrealstop__skip
00022002 <AmiBlitz3_noFPU_r470.ab3@3717>   !asm
00022004 <AmiBlitz3_noFPU_r470.ab3@3718>   MOVEQ.l #$00,D6
00022006 <AmiBlitz3_noFPU_r470.ab3@3719>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00022008 <AmiBlitz3_noFPU_r470.ab3@3723> RTS
0002200C <AmiBlitz3_noFPU_r470.ab3@3727>   MOVE.w stopit(PC),D0
00022010 <AmiBlitz3_noFPU_r470.ab3@3728>   BEQ chkstop__chk
00022016 <AmiBlitz3_noFPU_r470.ab3@3729>   SUBQ.w #1,stopit
00022018 <AmiBlitz3_noFPU_r470.ab3@3733> RTS
00022020 <AmiBlitz3_noFPU_r470.ab3@3736>   MOVE.w #2000,stopit
00022024 <AmiBlitz3_noFPU_r470.ab3@3737>   BSR.w chkrealstop
00022028 <AmiBlitz3_noFPU_r470.ab3@3738>   BEQ.b chkstop__rts
0002202C <AmiBlitz3_noFPU_r470.ab3@3740>   BSR.w close_compilewin
00022030 <AmiBlitz3_noFPU_r470.ab3@3741>   BSR.w call_setpointernormal
00022036 <AmiBlitz3_noFPU_r470.ab3@3743>   MOVEA.l errstack,A7
0002203C <AmiBlitz3_noFPU_r470.ab3@3744>   MOVEA.l errcont,A0
00022044 <AmiBlitz3_noFPU_r470.ab3@3745>   MOVE.w #-1,anyerrs
00022046 <AmiBlitz3_noFPU_r470.ab3@3746> JMP (A0)
0002204A <AmiBlitz3_noFPU_r470.ab3@3749> d_pc:           Ds.l 1
0002204E <AmiBlitz3_noFPU_r470.ab3@3750> d_bigpc:        Ds.l 1
00022050 <AmiBlitz3_noFPU_r470.ab3@3751> d_nomemleft:    Ds.w 1
00022054 <AmiBlitz3_noFPU_r470.ab3@3752> cont_pc:        Ds.l 1
00022058 <AmiBlitz3_noFPU_r470.ab3@3753> cont_pc2:       Ds.l 1
0002205C <AmiBlitz3_noFPU_r470.ab3@3754> lastcontlink:   Ds.l 1
00022060 <AmiBlitz3_noFPU_r470.ab3@3758>   ORI.w #$4E40,D1
00022064 <AmiBlitz3_noFPU_r470.ab3@3759> BRA.w JUMP_writeword
0002206A <AmiBlitz3_noFPU_r470.ab3@3763>   TST.b debugmode
0002206E <AmiBlitz3_noFPU_r470.ab3@3764>   BEQ.w debugstuff__rts
00022074 <AmiBlitz3_noFPU_r470.ab3@3771>   TST.w dirmode                                            ;or while in direct mode...
00022078 <AmiBlitz3_noFPU_r470.ab3@3772>    BNE debugstuff__rts
00022082 <AmiBlitz3_noFPU_r470.ab3@3773>   MOVE.l destpointer,d_pc
0002208C <AmiBlitz3_noFPU_r470.ab3@3774>   MOVE.l bigpc,d_bigpc
00022096 <AmiBlitz3_noFPU_r470.ab3@3775>   MOVE.w dontwrite,d_nomemleft
0002209A <AmiBlitz3_noFPU_r470.ab3@3776>   MOVEM.l D0-D1,-(A7)
0002209C <AmiBlitz3_noFPU_r470.ab3@3777>   MOVEQ.l #$01,D1
000220A0 <AmiBlitz3_noFPU_r470.ab3@3778>    BSR.w writetrap                                         ;write the adress to sourceline
000220A6 <AmiBlitz3_noFPU_r470.ab3@3782>    MOVE.l destpointer,D0
000220AC <AmiBlitz3_noFPU_r470.ab3@3783>   MOVE.l cont_pc,D1
000220B2 <AmiBlitz3_noFPU_r470.ab3@3784>   MOVE.l D0,cont_pc
000220B8 <AmiBlitz3_noFPU_r470.ab3@3785>   MOVE.l D1,cont_pc2
000220BC <AmiBlitz3_noFPU_r470.ab3@3786>    BEQ.b debugstuff__skip
000220C2 <AmiBlitz3_noFPU_r470.ab3@3787>   TST.w dontwrite
000220C6 <AmiBlitz3_noFPU_r470.ab3@3788>    BNE.b debugstuff__skip
000220C8 <AmiBlitz3_noFPU_r470.ab3@3789>   MOVEA.l D1,A4
000220CA <AmiBlitz3_noFPU_r470.ab3@3790>   SUB.l A4,D0
000220CE <AmiBlitz3_noFPU_r470.ab3@3791>   MOVE.w D0,$6(A4)
000220D4 <AmiBlitz3_noFPU_r470.ab3@3792>   MOVE.l A4,lastcontlink
000220DA <AmiBlitz3_noFPU_r470.ab3@3795>   TST.w ininclude
000220E0 <AmiBlitz3_noFPU_r470.ab3@3797>   TST.w makeexec
000220E4 <AmiBlitz3_noFPU_r470.ab3@3798>   BEQ 'l1
000220EA <AmiBlitz3_noFPU_r470.ab3@3799>   TST.w exdebug
000220EE <AmiBlitz3_noFPU_r470.ab3@3800>   BEQ 'noinc
000220F2 <AmiBlitz3_noFPU_r470.ab3@3803>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
000220F8 <AmiBlitz3_noFPU_r470.ab3@3804>   MOVE.l data1,d1
000220FE <AmiBlitz3_noFPU_r470.ab3@3805>   TST.b firsttime
00022102 <AmiBlitz3_noFPU_r470.ab3@3806>   BNE 'nofirst
0002210A <AmiBlitz3_noFPU_r470.ab3@3807>   MOVE.b #1,firsttime
00022110 <AmiBlitz3_noFPU_r470.ab3@3808>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022116 <AmiBlitz3_noFPU_r470.ab3@3809>   JSR writedatalong
0002211C <AmiBlitz3_noFPU_r470.ab3@3810>   MOVE.l #"AmiB",d1
00022122 <AmiBlitz3_noFPU_r470.ab3@3811>   JSR writedatalong
00022128 <AmiBlitz3_noFPU_r470.ab3@3812>   MOVE.l destbufferstart,d1
0002212E <AmiBlitz3_noFPU_r470.ab3@3813>   JSR writedatalong
00022134 <AmiBlitz3_noFPU_r470.ab3@3814>   TST.w dontwrite
00022138 <AmiBlitz3_noFPU_r470.ab3@3815>   BNE 'nohunk
0002213E <AmiBlitz3_noFPU_r470.ab3@3816>   MOVE.l data1,d1
00022140 <AmiBlitz3_noFPU_r470.ab3@3817>   SUBQ.l #4,d1
00022146 <AmiBlitz3_noFPU_r470.ab3@3818>   SUB.l destbufferstart,d1
00022148 <AmiBlitz3_noFPU_r470.ab3@3819>   MOVE.l d1,d2
0002214E <AmiBlitz3_noFPU_r470.ab3@3820>   JSR addhunkoffset
00022154 <AmiBlitz3_noFPU_r470.ab3@3823>   MOVE.l destpointer,d2
0002215A <AmiBlitz3_noFPU_r470.ab3@3824>   MOVE.l data1,d1
00022160 <AmiBlitz3_noFPU_r470.ab3@3827>   MOVE.l destpointer,d2
00022162 <AmiBlitz3_noFPU_r470.ab3@3828>   MOVE.l d1,d3
00022168 <AmiBlitz3_noFPU_r470.ab3@3829>   SUB.l destbufferstart,d1
0002216E <AmiBlitz3_noFPU_r470.ab3@3830>   OR.l #$80000000,d1
00022174 <AmiBlitz3_noFPU_r470.ab3@3831>   JSR writelong
0002217A <AmiBlitz3_noFPU_r470.ab3@3832>   TST.w inmacro
0002217E <AmiBlitz3_noFPU_r470.ab3@3833>   BEQ 'sc1
00022184 <AmiBlitz3_noFPU_r470.ab3@3834>   MOVE.l myline,a0
00022188 <AmiBlitz3_noFPU_r470.ab3@3836> BRA 'inc2
0002218E <AmiBlitz3_noFPU_r470.ab3@3838>  'sc1  TST.w ininclude
00022192 <AmiBlitz3_noFPU_r470.ab3@3839>   BEQ 'inc
00022198 <AmiBlitz3_noFPU_r470.ab3@3840>   MOVE.l includesourceline,a0
0002219C <AmiBlitz3_noFPU_r470.ab3@3841> BRA 'inc2
000221A2 <AmiBlitz3_noFPU_r470.ab3@3844>   MOVE.l sourceline,a0
000221A6 <AmiBlitz3_noFPU_r470.ab3@3845>   LEA 9(a0),a0
000221A8 <AmiBlitz3_noFPU_r470.ab3@3848>   MOVE.l d1,d2
000221AA <AmiBlitz3_noFPU_r470.ab3@3849>   MOVE.l A5,D1
000221AC <AmiBlitz3_noFPU_r470.ab3@3850>   SUB.l a0,D1
000221B2 <AmiBlitz3_noFPU_r470.ab3@3851>   ADD.l #9,d1
000221B6 <AmiBlitz3_noFPU_r470.ab3@3852>   BSR.w JUMP_writeword
000221BC <AmiBlitz3_noFPU_r470.ab3@3853>   CMP.l #9,d1
000221C0 <AmiBlitz3_noFPU_r470.ab3@3854>   BEQ 'pos1
000221C6 <AmiBlitz3_noFPU_r470.ab3@3855>   TST.w dontwrite
000221CA <AmiBlitz3_noFPU_r470.ab3@3856>   BNE 'nopad
000221D0 <AmiBlitz3_noFPU_r470.ab3@3857>   MOVE.l lastsourceline,d1
000221D4 <AmiBlitz3_noFPU_r470.ab3@3858>   MOVE.l d1,-6(a4)
000221D8 <AmiBlitz3_noFPU_r470.ab3@3859> BRA 'nopad
000221DE <AmiBlitz3_noFPU_r470.ab3@3862>   MOVE.l d2,lastsourceline
000221E8 <AmiBlitz3_noFPU_r470.ab3@3863>    MOVE.l destpointer,lastdestpointer
000221EA <AmiBlitz3_noFPU_r470.ab3@3864>    MOVEQ #0,d1
000221F0 <AmiBlitz3_noFPU_r470.ab3@3865>   MOVE.l data1,d2
000221F6 <AmiBlitz3_noFPU_r470.ab3@3866>   SUB.l destbufferstart,d2
000221FC <AmiBlitz3_noFPU_r470.ab3@3867>   JSR writedatalong
00022202 <AmiBlitz3_noFPU_r470.ab3@3868>   TST.w dontwrite
00022206 <AmiBlitz3_noFPU_r470.ab3@3869>   BNE 'no2
0002220C <AmiBlitz3_noFPU_r470.ab3@3870>   JSR addhunkoffset
00022212 <AmiBlitz3_noFPU_r470.ab3@3873>   MOVE.l data1,d2
00022218 <AmiBlitz3_noFPU_r470.ab3@3874>   SUB.l destbufferstart,d2
0002221E <AmiBlitz3_noFPU_r470.ab3@3875>   JSR writedatalong
00022224 <AmiBlitz3_noFPU_r470.ab3@3876>   TST.w dontwrite
00022228 <AmiBlitz3_noFPU_r470.ab3@3877>   BNE 'no
0002222E <AmiBlitz3_noFPU_r470.ab3@3878>   JSR addhunkoffset
00022234 <AmiBlitz3_noFPU_r470.ab3@3879>   MOVE.l lastwritedat,a1
0002223A <AmiBlitz3_noFPU_r470.ab3@3880>   CMP.l #0,a1
0002223E <AmiBlitz3_noFPU_r470.ab3@3881>   BEQ 'no
00022240 <AmiBlitz3_noFPU_r470.ab3@3882>   MOVE.l d3,(a1)
00022248 <AmiBlitz3_noFPU_r470.ab3@3883>   MOVE.l prevwritedat,4(a1)
00022252 <AmiBlitz3_noFPU_r470.ab3@3884>   MOVE.l lastwritedat,prevwritedat
00022258 <AmiBlitz3_noFPU_r470.ab3@3887>   MOVE.l d3,lastwritedat
0002225A <AmiBlitz3_noFPU_r470.ab3@3888>   MOVEQ #4,d1
0002225E <AmiBlitz3_noFPU_r470.ab3@3889>   BSR pokedata1b
00022260 <AmiBlitz3_noFPU_r470.ab3@3892>   MOVE.b (a0)+,d1
00022264 <AmiBlitz3_noFPU_r470.ab3@3893>   BEQ 'done
00022268 <AmiBlitz3_noFPU_r470.ab3@3894>   BSR pokedata1b
0002226C <AmiBlitz3_noFPU_r470.ab3@3895> BRA 'loop
0002226E <AmiBlitz3_noFPU_r470.ab3@3898>   MOVEQ #0,d1
00022272 <AmiBlitz3_noFPU_r470.ab3@3899>   BSR pokedata1b
00022278 <AmiBlitz3_noFPU_r470.ab3@3900>   MOVE.l data1,d1
0002227C <AmiBlitz3_noFPU_r470.ab3@3901>   BTST #0,d1
00022280 <AmiBlitz3_noFPU_r470.ab3@3902>   BEQ 'nopad
00022282 <AmiBlitz3_noFPU_r470.ab3@3903>   MOVEQ #0,d1
00022286 <AmiBlitz3_noFPU_r470.ab3@3904>   BSR pokedata1b
0002228A <AmiBlitz3_noFPU_r470.ab3@3907>   MOVEM.l (a7)+,a0-a1/d2/d3
0002228E <AmiBlitz3_noFPU_r470.ab3@3908> BRA 'noinc2
00022294 <AmiBlitz3_noFPU_r470.ab3@3911>   MOVE.l sourceline,D1
0002229A <AmiBlitz3_noFPU_r470.ab3@3913>   JSR writelong
0002229C <AmiBlitz3_noFPU_r470.ab3@3914>   MOVE.l A5,D1
000222A2 <AmiBlitz3_noFPU_r470.ab3@3915>   SUB.l sourceline,D1
000222A8 <AmiBlitz3_noFPU_r470.ab3@3917>   JSR writeword
000222AA <AmiBlitz3_noFPU_r470.ab3@3920>   MOVEQ.l #$00,D1
000222B0 <AmiBlitz3_noFPU_r470.ab3@3921>   JSR writeword                                            ; was: BSR.w writeword
000222B4 <AmiBlitz3_noFPU_r470.ab3@3922>   MOVEM.l (A7)+,D0-D1
000222B6 <AmiBlitz3_noFPU_r470.ab3@3925> RTS
000222BC <AmiBlitz3_noFPU_r470.ab3@3929>   TST.b debugmode                                          ;extern debug
000222C0 <AmiBlitz3_noFPU_r470.ab3@3930>    BEQ.b undodebug__rts
000222C6 <AmiBlitz3_noFPU_r470.ab3@3931>   TST.b dirmode
000222CA <AmiBlitz3_noFPU_r470.ab3@3932>   BNE undodebug__rts
000222D4 <AmiBlitz3_noFPU_r470.ab3@3937>   MOVE.w d_nomemleft,dontwrite
000222DE <AmiBlitz3_noFPU_r470.ab3@3938>   MOVE.l d_bigpc,bigpc
000222E8 <AmiBlitz3_noFPU_r470.ab3@3939>   MOVE.l d_pc,destpointer
000222F2 <AmiBlitz3_noFPU_r470.ab3@3940>   MOVE.l cont_pc2,cont_pc
000222F4 <AmiBlitz3_noFPU_r470.ab3@3943> RTS
000222FE <AmiBlitz3_noFPU_r470.ab3@3947>   MOVE.l #forthstack,forthsp
00022308 <AmiBlitz3_noFPU_r470.ab3@3948>   MOVE.l #precstack,precsp
0002230E <AmiBlitz3_noFPU_r470.ab3@3949>   CLR.w regnum
00022314 <AmiBlitz3_noFPU_r470.ab3@3950>   CLR.w nonew
0002231A <AmiBlitz3_noFPU_r470.ab3@3951>   CLR.w sbasegot
00022324 <AmiBlitz3_noFPU_r470.ab3@3952>   MOVE.w varcodelen,oldvcodelen
0002232A <AmiBlitz3_noFPU_r470.ab3@3953>   CLR.w varcodelen
00022332 <AmiBlitz3_noFPU_r470.ab3@3954>   MOVE.w #-1,lasta6
00022334 <AmiBlitz3_noFPU_r470.ab3@3955> RTS
0002233A <AmiBlitz3_noFPU_r470.ab3@3959>   TST.w linemode
0002233E <AmiBlitz3_noFPU_r470.ab3@3960>   BMI.b smode__skip
00022342 <AmiBlitz3_noFPU_r470.ab3@3961>   BSR.w undodebug
00022348 <AmiBlitz3_noFPU_r470.ab3@3962>   MOVE.w linemode,D1
0002234A <AmiBlitz3_noFPU_r470.ab3@3963>   ADDQ.w #4,A7
0002234C <AmiBlitz3_noFPU_r470.ab3@3964>   LSL.w #2,D1
00022352 <AmiBlitz3_noFPU_r470.ab3@3965>   LEA modetable,A0
00022356 <AmiBlitz3_noFPU_r470.ab3@3966>   MOVEA.l $0(A0,D1.W),A0
0002235A <AmiBlitz3_noFPU_r470.ab3@3967>   BSR.w reget
0002235C <AmiBlitz3_noFPU_r470.ab3@3970> JMP (A0)                                                   ;jumptokenroutine
0002235E <AmiBlitz3_noFPU_r470.ab3@3973> RTS
00022366 <AmiBlitz3_noFPU_r470.ab3@3978>   MOVE.w #0,leaa0a0+2
0002236C <AmiBlitz3_noFPU_r470.ab3@3979>   CLR.b nowdeclare
00022372 <AmiBlitz3_noFPU_r470.ab3@3980>   CLR.b notypecheck
00022378 <AmiBlitz3_noFPU_r470.ab3@3981>   CLR.l lasttoken
0002237E <AmiBlitz3_noFPU_r470.ab3@3982>   CLR.b doimmediate
00022384 <AmiBlitz3_noFPU_r470.ab3@3983>   CLR.w vartype
0002238A <AmiBlitz3_noFPU_r470.ab3@3984>   CLR.w regnumfunc
00022390 <AmiBlitz3_noFPU_r470.ab3@3985>   CLR.b optistring
00022396 <AmiBlitz3_noFPU_r470.ab3@3986>   CLR.b iniffcommand
0002239C <AmiBlitz3_noFPU_r470.ab3@3987>   CLR.w instringon  ; new
000223A2 <AmiBlitz3_noFPU_r470.ab3@3988>   CLR.b funccall
000223A8 <AmiBlitz3_noFPU_r470.ab3@3989>   CLR.l currentfunccall
000223AE <AmiBlitz3_noFPU_r470.ab3@3990>   CLR.l leftsidetype
000223B4 <AmiBlitz3_noFPU_r470.ab3@3991>   CLR.l rightsidetype
000223BA <AmiBlitz3_noFPU_r470.ab3@3992>   CLR.b peekaddrsize
000223C0 <AmiBlitz3_noFPU_r470.ab3@3993>   CLR.b blitzparloop
000223C6 <AmiBlitz3_noFPU_r470.ab3@3994>   CLR.b funcparloop
000223CC <AmiBlitz3_noFPU_r470.ab3@3995>   CLR.w parnum           ;new
000223D2 <AmiBlitz3_noFPU_r470.ab3@3996>   TST.b debugmode
000223D6 <AmiBlitz3_noFPU_r470.ab3@3997>    BEQ 'fpu
000223E0 <AmiBlitz3_noFPU_r470.ab3@4003>   MOVE.b fpu,iee
000223E4 <AmiBlitz3_noFPU_r470.ab3@4004>   MOVE.w stopit(PC),D0
000223E8 <AmiBlitz3_noFPU_r470.ab3@4005>   BNE chkstop_chkb
000223EC <AmiBlitz3_noFPU_r470.ab3@4006>   BSR.w chkstop                                          ; message here
000223F2 <AmiBlitz3_noFPU_r470.ab3@4009>   SUBQ.w #1,stopit
000223F6 <AmiBlitz3_noFPU_r470.ab3@4012>   BSR.w findmacro                                          ;macro
000223FC <AmiBlitz3_noFPU_r470.ab3@4066>   TST.b debugmode
00022400 <AmiBlitz3_noFPU_r470.ab3@4067>    BEQ.s 'l10
00022406 <AmiBlitz3_noFPU_r470.ab3@4068>   TST.b exdebug
0002240A <AmiBlitz3_noFPU_r470.ab3@4069>   BEQ 'l10a
0002240C <AmiBlitz3_noFPU_r470.ab3@4070>   MOVE.w (a5),d0
00022410 <AmiBlitz3_noFPU_r470.ab3@4071>   CMP.w #$8025,d0
00022414 <AmiBlitz3_noFPU_r470.ab3@4072>    BEQ 'l10
00022418 <AmiBlitz3_noFPU_r470.ab3@4075>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
0002241C <AmiBlitz3_noFPU_r470.ab3@4079>   BSR.w get1bytemain                                       ;gettokenmain
00022420 <AmiBlitz3_noFPU_r470.ab3@4080>    BEQ.w undodebug
00022424 <AmiBlitz3_noFPU_r470.ab3@4081>   CMP.w #$002b,d0                                            ;check for + cast sign
00022428 <AmiBlitz3_noFPU_r470.ab3@4082>     BNE 'lb2
0002242C <AmiBlitz3_noFPU_r470.ab3@4083>     BSR.w get1bytemain
00022434 <AmiBlitz3_noFPU_r470.ab3@4084>     MOVE.b #1,notypecheck
0002243E <AmiBlitz3_noFPU_r470.ab3@4092>   MOVE.l #forthstack,forthsp
00022448 <AmiBlitz3_noFPU_r470.ab3@4093>   MOVE.l #precstack,precsp
0002244E <AmiBlitz3_noFPU_r470.ab3@4094>   CLR.w regnum
00022454 <AmiBlitz3_noFPU_r470.ab3@4095>   CLR.w nonew
0002245A <AmiBlitz3_noFPU_r470.ab3@4096>   CLR.w sbasegot
00022464 <AmiBlitz3_noFPU_r470.ab3@4097>   MOVE.w varcodelen,oldvcodelen
0002246A <AmiBlitz3_noFPU_r470.ab3@4099>   CLR.w varcodelen
00022472 <AmiBlitz3_noFPU_r470.ab3@4100>   MOVE.w #$FFFF,lasta6
00022476 <AmiBlitz3_noFPU_r470.ab3@4102>   BSR.w smode
00022478 <AmiBlitz3_noFPU_r470.ab3@4103>   TST.w D0
0002247C <AmiBlitz3_noFPU_r470.ab3@4104>   BMI.w get_tokencode
00022480 <AmiBlitz3_noFPU_r470.ab3@4105>   CMP.w #$2E,D0
00022484 <AmiBlitz3_noFPU_r470.ab3@4106>    BEQ.w JL_0_4644                                         ;shortlist
00022488 <AmiBlitz3_noFPU_r470.ab3@4107>   CMP.w #"#",D0
0002248C <AmiBlitz3_noFPU_r470.ab3@4108>    BEQ.w JL_0_4718                                         ;constant found
00022490 <AmiBlitz3_noFPU_r470.ab3@4109>   CMP.w #$27,D0
00022494 <AmiBlitz3_noFPU_r470.ab3@4110>    BEQ.w JL_0_4638                                         ;local label
0002249A <AmiBlitz3_noFPU_r470.ab3@4111>   MOVE.l A5,letstart
000224A0 <AmiBlitz3_noFPU_r470.ab3@4112>   JSR getparameter
000224A4 <AmiBlitz3_noFPU_r470.ab3@4113>   BSR.w reget
000224A8 <AmiBlitz3_noFPU_r470.ab3@4114>    BEQ.w JL_0_4658                                         ;label found
000224AC <AmiBlitz3_noFPU_r470.ab3@4115>   CMP.w #$7B,D0
000224B0 <AmiBlitz3_noFPU_r470.ab3@4116>    BEQ.w JL_0_475C
000224B2 <AmiBlitz3_noFPU_r470.ab3@4117>   TST.w d0
000224B6 <AmiBlitz3_noFPU_r470.ab3@4118>    BPL 'll1
000224BC <AmiBlitz3_noFPU_r470.ab3@4119>   TST.b newsyntax
000224C0 <AmiBlitz3_noFPU_r470.ab3@4120>    BEQ 'll1
000224C6 <AmiBlitz3_noFPU_r470.ab3@4121>   LEA allowtab,a0
000224C8 <AmiBlitz3_noFPU_r470.ab3@4122>   MOVEQ #0,d1
000224CA <AmiBlitz3_noFPU_r470.ab3@4123>   MOVE.b d0,d1
000224CE <AmiBlitz3_noFPU_r470.ab3@4124>   TST.b 0(a0,d1.w)
000224D2 <AmiBlitz3_noFPU_r470.ab3@4125>    BNE 'll1
000224D4 <AmiBlitz3_noFPU_r470.ab3@4126>   SUBQ.l #2,a5
000224DC <AmiBlitz3_noFPU_r470.ab3@4127>   MOVE.w #":",lastchar                                     ;no doublepoint
000224E0 <AmiBlitz3_noFPU_r470.ab3@4128> BRA JL_0_4658
000224E8 <AmiBlitz3_noFPU_r470.ab3@4131>   CMP.l #"equ ",-1(a5)
000224EC <AmiBlitz3_noFPU_r470.ab3@4132>    BEQ 'll4
000224F4 <AmiBlitz3_noFPU_r470.ab3@4133>   CMP.l #"EQU ",-1(a5)
000224F8 <AmiBlitz3_noFPU_r470.ab3@4134>    BNE 'll2
000224FA <AmiBlitz3_noFPU_r470.ab3@4137>   ADDQ.l #2,a5
000224FE <AmiBlitz3_noFPU_r470.ab3@4138>   BSR.w findlabel2
00022502 <AmiBlitz3_noFPU_r470.ab3@4139>   BEQ.w 'lf1
00022506 <AmiBlitz3_noFPU_r470.ab3@4140>   BSR.w addlabelhash
0002250E <AmiBlitz3_noFPU_r470.ab3@4141>   MOVE.l #$1,$4(A2)
00022516 <AmiBlitz3_noFPU_r470.ab3@4144>   CMPI.l #$1,$4(A2)
0002251A <AmiBlitz3_noFPU_r470.ab3@4145>    BNE.w illconerr
0002251E <AmiBlitz3_noFPU_r470.ab3@4146>   BSR get1bytemain
00022520 <AmiBlitz3_noFPU_r470.ab3@4147>   MOVE.l A2,-(A7)
00022522 <AmiBlitz3_noFPU_r470.ab3@4158>   SUBQ.l #1,a5
00022524 <AmiBlitz3_noFPU_r470.ab3@4161>   SUBQ.l #1,a5
0002252A <AmiBlitz3_noFPU_r470.ab3@4162>   JSR AJL_0_BF6E
0002252C <AmiBlitz3_noFPU_r470.ab3@4163>   MOVEA.l (A7)+,A2
00022530 <AmiBlitz3_noFPU_r470.ab3@4164>   MOVE.l D3,$8(A2)
00022532 <AmiBlitz3_noFPU_r470.ab3@4165>   RTS
00022536 <AmiBlitz3_noFPU_r470.ab3@4166>   BSR get1bytemain
0002253E <AmiBlitz3_noFPU_r470.ab3@4169>   CMP.l #"SET ",-1(a5)
00022542 <AmiBlitz3_noFPU_r470.ab3@4170>   BNE 'll3
00022546 <AmiBlitz3_noFPU_r470.ab3@4171> BRA 'll4
0002254C <AmiBlitz3_noFPU_r470.ab3@4174> JMP AJL_0_DEA6
00022550 <AmiBlitz3_noFPU_r470.ab3@4177>   CMP.w #-$7FDE,D0
00022554 <AmiBlitz3_noFPU_r470.ab3@4178>   BEQ.w get_tokencode
00022558 <AmiBlitz3_noFPU_r470.ab3@4179> BRA.w undodebug
0002255C <AmiBlitz3_noFPU_r470.ab3@4182>   BSR.w undodebug
00022560 <AmiBlitz3_noFPU_r470.ab3@4183>   BSR.w createlab
00022564 <AmiBlitz3_noFPU_r470.ab3@4184> BRA.w JL_0_466E
00022568 <AmiBlitz3_noFPU_r470.ab3@4187>   BSR.w get1bytemain
0002256C <AmiBlitz3_noFPU_r470.ab3@4188>    BEQ.w JL_0_462C
00022570 <AmiBlitz3_noFPU_r470.ab3@4189>   CMP.w #"'",D0
00022574 <AmiBlitz3_noFPU_r470.ab3@4190>    BEQ.w JL_0_4638
00022578 <AmiBlitz3_noFPU_r470.ab3@4191>    BSR.w makename2
0002257A <AmiBlitz3_noFPU_r470.ab3@4192>    TST.w d0
0002257E <AmiBlitz3_noFPU_r470.ab3@4193>    BPL 'll1
00022580 <AmiBlitz3_noFPU_r470.ab3@4194>    SUBQ.l #2,a5
00022588 <AmiBlitz3_noFPU_r470.ab3@4195>    MOVE.w #":",lastchar
0002258C <AmiBlitz3_noFPU_r470.ab3@4196> BRA JL_0_4658                                              ;????
00022590 <AmiBlitz3_noFPU_r470.ab3@4200>   BSR.w undodebug
00022596 <AmiBlitz3_noFPU_r470.ab3@4201>   LEA ptr_parameterstore,A0
0002259C <AmiBlitz3_noFPU_r470.ab3@4202>   LEA lastgloballabel,A1
0002259E <AmiBlitz3_noFPU_r470.ab3@4205>   MOVE.b (A0)+,(A1)+
000225A2 <AmiBlitz3_noFPU_r470.ab3@4206>    BNE.w JL_0_4668
000225A6 <AmiBlitz3_noFPU_r470.ab3@4209>   BSR.w findlabel2
000225AA <AmiBlitz3_noFPU_r470.ab3@4210>    BEQ.w JL_0_4698
000225AE <AmiBlitz3_noFPU_r470.ab3@4211>    BSR.w addlabelhash
000225B2 <AmiBlitz3_noFPU_r470.ab3@4214>   CLR.l $4(A2)
000225BA <AmiBlitz3_noFPU_r470.ab3@4215>   MOVE.l destpointer,$8(A2)
000225C2 <AmiBlitz3_noFPU_r470.ab3@4218>   MOVE.w procnum,$10(A2)
000225C4 <AmiBlitz3_noFPU_r470.ab3@4219> RTS
000225C8 <AmiBlitz3_noFPU_r470.ab3@4223>   MOVE.l $4(A2),D0
000225CC <AmiBlitz3_noFPU_r470.ab3@4224>   BTST #$0,D0
000225D0 <AmiBlitz3_noFPU_r470.ab3@4225>    BNE.w illlaberr
000225D6 <AmiBlitz3_noFPU_r470.ab3@4226>   TST.w pass
000225DA <AmiBlitz3_noFPU_r470.ab3@4228>   MOVE.l $8(A2),D0
000225DE <AmiBlitz3_noFPU_r470.ab3@4229>    BNE.w duplaberr
000225E6 <AmiBlitz3_noFPU_r470.ab3@4230>   MOVE.w procnum,$10(A2)
000225EA <AmiBlitz3_noFPU_r470.ab3@4231>   MOVEA.l $4(A2),A3
000225F0 <AmiBlitz3_noFPU_r470.ab3@4232>   MOVEA.l _execbase,A6
000225F4 <AmiBlitz3_noFPU_r470.ab3@4235>   CMPA.w #$0,A3
000225F8 <AmiBlitz3_noFPU_r470.ab3@4236>    BEQ.w JL_0_467A
000225FC <AmiBlitz3_noFPU_r470.ab3@4237>     MOVE.l $4(A2),D1
00022600 <AmiBlitz3_noFPU_r470.ab3@4238>     BTST #$0,D1
00022604 <AmiBlitz3_noFPU_r470.ab3@4239>     BNE.w illlaberr
00022608 <AmiBlitz3_noFPU_r470.ab3@4240>   MOVE.w $8(A3),D1
0002260C <AmiBlitz3_noFPU_r470.ab3@4241>   CMP.w $10(A2),D1
00022610 <AmiBlitz3_noFPU_r470.ab3@4242>    BEQ.w JL_0_46DC
00022616 <AmiBlitz3_noFPU_r470.ab3@4243>    TST.b newsyntax
0002261A <AmiBlitz3_noFPU_r470.ab3@4244>    BEQ 'l1
0002261E <AmiBlitz3_noFPU_r470.ab3@4245> BRA.w JL_0_46DC                                            ;label context out of range fix
00022626 <AmiBlitz3_noFPU_r470.ab3@4250>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
0002262A <AmiBlitz3_noFPU_r470.ab3@4251> BRA.w referr
00022630 <AmiBlitz3_noFPU_r470.ab3@4254>   MOVE.w dontwrite,D1
00022634 <AmiBlitz3_noFPU_r470.ab3@4255>    BNE.w JL_0_4706
00022638 <AmiBlitz3_noFPU_r470.ab3@4256>   MOVEA.l $4(A3),A1
0002263E <AmiBlitz3_noFPU_r470.ab3@4257>   BTST #$0,$7(A3)
00022642 <AmiBlitz3_noFPU_r470.ab3@4258>    BEQ.w JL_0_4700
00022644 <AmiBlitz3_noFPU_r470.ab3@4259>   SUBQ.w #1,A1
0002264A <AmiBlitz3_noFPU_r470.ab3@4260>   MOVE.l data2,(A1)
0002264E <AmiBlitz3_noFPU_r470.ab3@4261> BRA.w JL_0_4706
00022654 <AmiBlitz3_noFPU_r470.ab3@4264>   MOVE.l destpointer,(A1)
00022656 <AmiBlitz3_noFPU_r470.ab3@4267>   MOVEA.l A3,A1
00022658 <AmiBlitz3_noFPU_r470.ab3@4268>   MOVEA.l (A3),A3
0002265C <AmiBlitz3_noFPU_r470.ab3@4269>   MOVE.l A3,$4(A2)
0002265E <AmiBlitz3_noFPU_r470.ab3@4270>   MOVEQ.l #$0C+2,D0
00022664 <AmiBlitz3_noFPU_r470.ab3@4271>   MOVE.l mempool,a0
0002266A <AmiBlitz3_noFPU_r470.ab3@4272>   MOVEA.l _execbase,A6
0002266E <AmiBlitz3_noFPU_r470.ab3@4273>   JSR _FreePooled(A6)
00022672 <AmiBlitz3_noFPU_r470.ab3@4274> BRA.w JL_0_46BC
0002267C <AmiBlitz3_noFPU_r470.ab3@4279>    MOVE.l #forthstack,forthsp
00022686 <AmiBlitz3_noFPU_r470.ab3@4280>   MOVE.l #precstack,precsp
0002268A <AmiBlitz3_noFPU_r470.ab3@4281>    BSR.w getparameter2
0002268E <AmiBlitz3_noFPU_r470.ab3@4284>   BSR.w findlabel2
00022692 <AmiBlitz3_noFPU_r470.ab3@4285>    BEQ.w JL_0_4738
00022696 <AmiBlitz3_noFPU_r470.ab3@4286>    BSR.w addlabelhash
0002269E <AmiBlitz3_noFPU_r470.ab3@4287>   MOVE.l #$1,$4(A2)
000226A2 <AmiBlitz3_noFPU_r470.ab3@4288> BRA.w JL_0_4744
000226AA <AmiBlitz3_noFPU_r470.ab3@4291>   CMPI.l #$1,$4(A2)
000226AE <AmiBlitz3_noFPU_r470.ab3@4292>    BNE.w illconerr
000226B2 <AmiBlitz3_noFPU_r470.ab3@4301>   CMP.w #$3D,D0
000226B6 <AmiBlitz3_noFPU_r470.ab3@4302>   BEQ.w JL_0_474E
000226B8 <AmiBlitz3_noFPU_r470.ab3@4303> RTS
000226BA <AmiBlitz3_noFPU_r470.ab3@4307>   MOVE.l A2,-(A7)
000226C0 <AmiBlitz3_noFPU_r470.ab3@4308>   JSR AJL_0_BF6E
000226C2 <AmiBlitz3_noFPU_r470.ab3@4309>   MOVEA.l (A7)+,A2
000226C6 <AmiBlitz3_noFPU_r470.ab3@4310>   MOVE.l D3,$8(A2)                                         ;store constant
000226CE <AmiBlitz3_noFPU_r470.ab3@4311>   CMP.w #$0a,lastchar
000226D2 <AmiBlitz3_noFPU_r470.ab3@4312>   BNE 'l1
000226DA <AmiBlitz3_noFPU_r470.ab3@4313>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
000226DC <AmiBlitz3_noFPU_r470.ab3@4316> RTS
000226E0 <AmiBlitz3_noFPU_r470.ab3@4319>   BSR.w findproc                                           ;write statement call
000226E4 <AmiBlitz3_noFPU_r470.ab3@4320>   BEQ _state
000226EA <AmiBlitz3_noFPU_r470.ab3@4321>   TST.l unusedfunc
000226EE <AmiBlitz3_noFPU_r470.ab3@4322>   BEQ noprocerr
000226F4 <AmiBlitz3_noFPU_r470.ab3@4324>   JSR gotoendsource
000226F8 <AmiBlitz3_noFPU_r470.ab3@4327>   TST.b $5(A2)
000226FE <AmiBlitz3_noFPU_r470.ab3@4329>   MOVE.l a2,currentfunccall
00022706 <AmiBlitz3_noFPU_r470.ab3@4330>   MOVE.b #1,funccall
0002270C <AmiBlitz3_noFPU_r470.ab3@4331>   MOVE.b #1,isfunc(a2)
00022710 <AmiBlitz3_noFPU_r470.ab3@4332>   MOVE.l $E(A2),-(A7)
00022712 <AmiBlitz3_noFPU_r470.ab3@4333>   MOVEQ.l #$00,D0
00022716 <AmiBlitz3_noFPU_r470.ab3@4334>   MOVE.b $4(A2),D0
0002271C <AmiBlitz3_noFPU_r470.ab3@4335>   MOVE.l d0,parnumtemp
00022720 <AmiBlitz3_noFPU_r470.ab3@4336>   BEQ.w JL_0_4786
00022724 <AmiBlitz3_noFPU_r470.ab3@4337>   TST.b $20(a2)                                            ;increase if morepar
00022728 <AmiBlitz3_noFPU_r470.ab3@4338>   BNE 'no0par
0002272A <AmiBlitz3_noFPU_r470.ab3@4339>   MOVE.l a5,a4
0002272E <AmiBlitz3_noFPU_r470.ab3@4342>   CMP.b #$20,(a4)+
00022732 <AmiBlitz3_noFPU_r470.ab3@4343>   BEQ 'l1
00022738 <AmiBlitz3_noFPU_r470.ab3@4344>   CMP.b #"}",-1(a4)
0002273C <AmiBlitz3_noFPU_r470.ab3@4345>   BNE  'no0par                                             ;statementcall pars
0002273E <AmiBlitz3_noFPU_r470.ab3@4346>   MOVEQ #0,d0
00022742 <AmiBlitz3_noFPU_r470.ab3@4349>   LEA $16(A2),A1
00022744 <AmiBlitz3_noFPU_r470.ab3@4352>   MOVE.l d1,-(a7)
00022746 <AmiBlitz3_noFPU_r470.ab3@4353>   MOVE.b (a1),d2
00022748 <AmiBlitz3_noFPU_r470.ab3@4354>   MOVE.l d0,d1
0002274C <AmiBlitz3_noFPU_r470.ab3@4355>   CMP.w #4,d2
00022750 <AmiBlitz3_noFPU_r470.ab3@4356>   BNE 'l1b
00022756 <AmiBlitz3_noFPU_r470.ab3@4357>   ADD.l #$203c,d1
0002275C <AmiBlitz3_noFPU_r470.ab3@4359>   JSR writeword
00022762 <AmiBlitz3_noFPU_r470.ab3@4360>   MOVE.l #$ffff0000,d1
00022768 <AmiBlitz3_noFPU_r470.ab3@4362>   JSR writelong
0002276C <AmiBlitz3_noFPU_r470.ab3@4363> BRA 'l2b
00022772 <AmiBlitz3_noFPU_r470.ab3@4366>   TST.b fpu
00022776 <AmiBlitz3_noFPU_r470.ab3@4367>   BNE 'l1c
0002277A <AmiBlitz3_noFPU_r470.ab3@4368>   CMP.w #5,d2
0002277E <AmiBlitz3_noFPU_r470.ab3@4369>   BNE 'l1c
00022784 <AmiBlitz3_noFPU_r470.ab3@4370>   ADD.l #$203c,d1
0002278A <AmiBlitz3_noFPU_r470.ab3@4372>   JSR writeword
00022790 <AmiBlitz3_noFPU_r470.ab3@4373>   MOVE.l #$800000c1,d1
00022796 <AmiBlitz3_noFPU_r470.ab3@4375>   JSR writelong
0002279A <AmiBlitz3_noFPU_r470.ab3@4376> BRA 'l2b
000227A0 <AmiBlitz3_noFPU_r470.ab3@4379>   ADD.l #$70ff,d1
000227A6 <AmiBlitz3_noFPU_r470.ab3@4381>   JSR writeword
000227AC <AmiBlitz3_noFPU_r470.ab3@4382>   TST.b fpu                                                ; fpucheck added  tomsmart1
000227B0 <AmiBlitz3_noFPU_r470.ab3@4383>   BEQ 'l2b
000227B6 <AmiBlitz3_noFPU_r470.ab3@4385>   MOVE.l #$f23c5000,d1
000227B8 <AmiBlitz3_noFPU_r470.ab3@4386>   MOVE.l d0,d2
000227BA <AmiBlitz3_noFPU_r470.ab3@4387>   ASR.l #2,d2
000227BC <AmiBlitz3_noFPU_r470.ab3@4388>   ADD.l d2,d1
000227C2 <AmiBlitz3_noFPU_r470.ab3@4390>   JSR writelong
000227C6 <AmiBlitz3_noFPU_r470.ab3@4391>   MOVE.w #$ffff,d1
000227CC <AmiBlitz3_noFPU_r470.ab3@4393>   JSR writeword
000227CE <AmiBlitz3_noFPU_r470.ab3@4396>   MOVE.l (a7)+,d1
000227D0 <AmiBlitz3_noFPU_r470.ab3@4397>   ADDQ.l #1,a1
000227D6 <AmiBlitz3_noFPU_r470.ab3@4398>   ADD.l #$0200,d0
000227DC <AmiBlitz3_noFPU_r470.ab3@4399>   CMP.l #$0e00,d0
000227E0 <AmiBlitz3_noFPU_r470.ab3@4400>    BEQ syntaxerr
000227E2 <AmiBlitz3_noFPU_r470.ab3@4401>   TST.b (a1)
000227E6 <AmiBlitz3_noFPU_r470.ab3@4402>    BNE 'again
000227EA <AmiBlitz3_noFPU_r470.ab3@4403> BRA JL_0_4786
000227F4 <AmiBlitz3_noFPU_r470.ab3@4406>   MOVE.w a2offset,a2offset2
000227F8 <AmiBlitz3_noFPU_r470.ab3@4407>   LEA $16(A2),A2
000227FE <AmiBlitz3_noFPU_r470.ab3@4408>   MOVE.b funcparloop,-(a7)
00022806 <AmiBlitz3_noFPU_r470.ab3@4409>   MOVE.b #1,funcparloop
0002280C <AmiBlitz3_noFPU_r470.ab3@4410>   MOVE.b blitzparloop,-(a7)
00022812 <AmiBlitz3_noFPU_r470.ab3@4411>   CLR.b blitzparloop
00022816 <AmiBlitz3_noFPU_r470.ab3@4412>   BSR.w fetchpees2
0002281C <AmiBlitz3_noFPU_r470.ab3@4413>   MOVE.b (a7)+,blitzparloop
00022822 <AmiBlitz3_noFPU_r470.ab3@4414>   MOVE.b (a7)+,funcparloop
00022826 <AmiBlitz3_noFPU_r470.ab3@4415> BRA.w JL_0_478A
0002282A <AmiBlitz3_noFPU_r470.ab3@4418>   BSR.w get1bytemain
0002282E <AmiBlitz3_noFPU_r470.ab3@4421>   CMP.w #$7D,D0
00022832 <AmiBlitz3_noFPU_r470.ab3@4422>    BNE.w morepar_                                          ;syntax error morepar
00022838 <AmiBlitz3_noFPU_r470.ab3@4423>    JSR chkstak
0002283A <AmiBlitz3_noFPU_r470.ab3@4424>   MOVE.l (A7)+,D1
00022840 <AmiBlitz3_noFPU_r470.ab3@4440>    JSR JL_0_AFCA
00022846 <AmiBlitz3_noFPU_r470.ab3@4462>   CLR.b funccall
0002284A <AmiBlitz3_noFPU_r470.ab3@4463> BRA.w get1bytemain
00022850 <AmiBlitz3_noFPU_r470.ab3@4467>   MOVE.l d0,lasttoken
00022854 <AmiBlitz3_noFPU_r470.ab3@4468>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022858 <AmiBlitz3_noFPU_r470.ab3@4469>   BNE 'l2
0002285C <AmiBlitz3_noFPU_r470.ab3@4470>    MOVE.w #$dd05,d0
00022860 <AmiBlitz3_noFPU_r470.ab3@4473>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00022864 <AmiBlitz3_noFPU_r470.ab3@4474>   BNE 'l3
00022868 <AmiBlitz3_noFPU_r470.ab3@4475>    MOVE.w #$dd06,d0
0002286C <AmiBlitz3_noFPU_r470.ab3@4478>   CMP.w #-$7FC4,D0
00022870 <AmiBlitz3_noFPU_r470.ab3@4479>   BCS.w JL_0_47C4
00022874 <AmiBlitz3_noFPU_r470.ab3@4480>     CMP.w #-$7F4D,D0
00022878 <AmiBlitz3_noFPU_r470.ab3@4481>     BCC.w JL_0_47C4
00022880 <AmiBlitz3_noFPU_r470.ab3@4482>       BTST #$7,assemblercheck                              ;inline Assembler checking
00022884 <AmiBlitz3_noFPU_r470.ab3@4483>       BNE.b JL_0_47C0
0002288A <AmiBlitz3_noFPU_r470.ab3@4484>         TST.b debugmode
0002288E <AmiBlitz3_noFPU_r470.ab3@4485>         BEQ.b 'l10
00022898 <AmiBlitz3_noFPU_r470.ab3@4490>           MOVE.w d_nomemleft,dontwrite
000228A2 <AmiBlitz3_noFPU_r470.ab3@4491>           MOVE.l d_bigpc,bigpc
000228AC <AmiBlitz3_noFPU_r470.ab3@4492>           MOVE.l d_pc,destpointer
000228B6 <AmiBlitz3_noFPU_r470.ab3@4493>           MOVE.l cont_pc2,cont_pc
000228BA <AmiBlitz3_noFPU_r470.ab3@4499> BRA.w JL_0_612C
000228BE <AmiBlitz3_noFPU_r470.ab3@4502>   BCLR #$F,D0
000228C0 <AmiBlitz3_noFPU_r470.ab3@4503>   MOVE.w D0,D1
000228C4 <AmiBlitz3_noFPU_r470.ab3@4504>   ANDI.w #$7F00,D1
000228C8 <AmiBlitz3_noFPU_r470.ab3@4505>   BNE.w JL_0_4856
000228CC <AmiBlitz3_noFPU_r470.ab3@4506>     CMP.w #$B3,D0                                          ;intern Instructions
000228D0 <AmiBlitz3_noFPU_r470.ab3@4507>     BCS.w JL_0_47F2
000228D4 <AmiBlitz3_noFPU_r470.ab3@4508>       SUBI.w #$77,D0
000228D8 <AmiBlitz3_noFPU_r470.ab3@4509>       CMP.w #$4B,D0
000228DC <AmiBlitz3_noFPU_r470.ab3@4510>       BEQ.w JL_0_4830
000228E0 <AmiBlitz3_noFPU_r470.ab3@4511>         CMP.w #$46,D0
000228E4 <AmiBlitz3_noFPU_r470.ab3@4512>         BEQ.w JL_0_4830
000228E8 <AmiBlitz3_noFPU_r470.ab3@4513> BRA.w JL_0_4834                                            ; change tokennum
000228EC <AmiBlitz3_noFPU_r470.ab3@4516>     CMP.w #$38,D0
000228F0 <AmiBlitz3_noFPU_r470.ab3@4517>      BEQ.w JL_0_4830
000228F4 <AmiBlitz3_noFPU_r470.ab3@4518>     CMP.w #$39,D0
000228F8 <AmiBlitz3_noFPU_r470.ab3@4519>      BEQ.w JL_0_4830
000228FC <AmiBlitz3_noFPU_r470.ab3@4520>     CMP.w #$D,D0
00022900 <AmiBlitz3_noFPU_r470.ab3@4521>      BEQ.w JL_0_4830
00022904 <AmiBlitz3_noFPU_r470.ab3@4522>     CMP.w #$12,D0
00022908 <AmiBlitz3_noFPU_r470.ab3@4523>      BEQ.w JL_0_4830
0002290C <AmiBlitz3_noFPU_r470.ab3@4524>     CMP.w #$13,D0
00022910 <AmiBlitz3_noFPU_r470.ab3@4525>      BEQ.w JL_0_4830
00022914 <AmiBlitz3_noFPU_r470.ab3@4526>     CMP.w #$1A,D0
00022918 <AmiBlitz3_noFPU_r470.ab3@4527>      BEQ.w JL_0_4830
0002291C <AmiBlitz3_noFPU_r470.ab3@4528>     CMP.w #$2A,D0
00022920 <AmiBlitz3_noFPU_r470.ab3@4529>      BHI.w JL_0_4834
00022924 <AmiBlitz3_noFPU_r470.ab3@4530>     CMP.w #$23,D0
00022928 <AmiBlitz3_noFPU_r470.ab3@4531>      BCS.b JL_0_4834
0002292C <AmiBlitz3_noFPU_r470.ab3@4534>   BSR.w undodebug
0002292E <AmiBlitz3_noFPU_r470.ab3@4537>   SUBQ.w #1,D0
00022930 <AmiBlitz3_noFPU_r470.ab3@4538>   LSL.w #2,D0
00022936 <AmiBlitz3_noFPU_r470.ab3@4545>   LEA instructionbase,A0
0002293A <AmiBlitz3_noFPU_r470.ab3@4546>   MOVEA.l $0(A0,D0.W),A0
0002293C <AmiBlitz3_noFPU_r470.ab3@4547>   MOVE.l A0,-(A7)
00022940 <AmiBlitz3_noFPU_r470.ab3@4548> BRA.w get1bytemain
00022942 <AmiBlitz3_noFPU_r470.ab3@4554>   MOVE.w D0,D1
00022946 <AmiBlitz3_noFPU_r470.ab3@4555>    BSR.w searchinstr
0002294C <AmiBlitz3_noFPU_r470.ab3@4556>    TST.b newmode
00022950 <AmiBlitz3_noFPU_r470.ab3@4557>    BNE compile_term
00022956 <AmiBlitz3_noFPU_r470.ab3@4558>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
0002295A <AmiBlitz3_noFPU_r470.ab3@4559>    BNE.w stamigalib
00022960 <AmiBlitz3_noFPU_r470.ab3@4560>   BTST #$0,$1(A3)
00022964 <AmiBlitz3_noFPU_r470.ab3@4561>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022968 <AmiBlitz3_noFPU_r470.ab3@4562>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
0002296C <AmiBlitz3_noFPU_r470.ab3@4563>    BSR.w JL_0_66F6
00022972 <AmiBlitz3_noFPU_r470.ab3@4569>   MOVE.w numreps,-(A7)
00022978 <AmiBlitz3_noFPU_r470.ab3@4570>   MOVE.w userp,-(A7)
0002297E <AmiBlitz3_noFPU_r470.ab3@4571>   MOVE.w a2offset,-(A7)
00022980 <AmiBlitz3_noFPU_r470.ab3@4572>   MOVE.l A2,-(A7)                                          ;recurs.
0002298A <AmiBlitz3_noFPU_r470.ab3@4573>   MOVE.w convsize,userp
0002298E <AmiBlitz3_noFPU_r470.ab3@4574>   LEA $6(A3),A1
00022990 <AmiBlitz3_noFPU_r470.ab3@4578>    MOVE.w (A1),D2
00022994 <AmiBlitz3_noFPU_r470.ab3@4579>    BMI.w SERR                                              ;statement syntax error
00022998 <AmiBlitz3_noFPU_r470.ab3@4580>   ANDI.w #$FF,D2
0002299A <AmiBlitz3_noFPU_r470.ab3@4581>   CMP.w D2,D1
0002299E <AmiBlitz3_noFPU_r470.ab3@4582>    BEQ.w JL_0_48E0
000229A2 <AmiBlitz3_noFPU_r470.ab3@4583>    BCS.w JL_0_48CC
000229A4 <AmiBlitz3_noFPU_r470.ab3@4584>   MOVE.b (A1),D3
000229A8 <AmiBlitz3_noFPU_r470.ab3@4585>   ANDI.w #$7,D3
000229AC <AmiBlitz3_noFPU_r470.ab3@4586>    BEQ.w JL_0_48CC
000229AE <AmiBlitz3_noFPU_r470.ab3@4587>   MOVE.w D2,D4
000229B0 <AmiBlitz3_noFPU_r470.ab3@4588>   SUB.w D3,D4
000229B2 <AmiBlitz3_noFPU_r470.ab3@4589>   MOVEQ.l #$00,D5
000229B4 <AmiBlitz3_noFPU_r470.ab3@4590>   MOVE.w D1,D5
000229B6 <AmiBlitz3_noFPU_r470.ab3@4591>   SUB.w D4,D5
000229B8 <AmiBlitz3_noFPU_r470.ab3@4592>   DIVU D3,D5
000229BA <AmiBlitz3_noFPU_r470.ab3@4593>   SWAP D5
000229BC <AmiBlitz3_noFPU_r470.ab3@4594>   TST.w D5
000229C0 <AmiBlitz3_noFPU_r470.ab3@4595>    BEQ.w JL_0_48E0
000229C2 <AmiBlitz3_noFPU_r470.ab3@4598>   ADDQ.w #2,A1
000229C4 <AmiBlitz3_noFPU_r470.ab3@4599>   ADDA.w D2,A1
000229C8 <AmiBlitz3_noFPU_r470.ab3@4600>    BSR.w aligna1
000229CC <AmiBlitz3_noFPU_r470.ab3@4601>    BSR.w skiplibreg
000229D0 <AmiBlitz3_noFPU_r470.ab3@4602>   LEA $C(A1),A1
000229D4 <AmiBlitz3_noFPU_r470.ab3@4603> BRA.w JL_0_489A
000229D6 <AmiBlitz3_noFPU_r470.ab3@4606>   MOVE.w (a3),d2
000229DA <AmiBlitz3_noFPU_r470.ab3@4607>   BTST #1,d2
000229DE <AmiBlitz3_noFPU_r470.ab3@4608>   BEQ statement_
000229E2 <AmiBlitz3_noFPU_r470.ab3@4609>   CMP.w #1,d1
000229E6 <AmiBlitz3_noFPU_r470.ab3@4610>   BEQ statement_
000229EA <AmiBlitz3_noFPU_r470.ab3@4613>   CMP.b #$20,(a5)+
000229EE <AmiBlitz3_noFPU_r470.ab3@4614>   BEQ 'l2
000229F4 <AmiBlitz3_noFPU_r470.ab3@4615>   CMP.b #"(",-2(a5)
000229F8 <AmiBlitz3_noFPU_r470.ab3@4616>   BNE 'l1
000229FC <AmiBlitz3_noFPU_r470.ab3@4617> BRA parameter_
00022A00 <AmiBlitz3_noFPU_r470.ab3@4620> BRA inbrackets_
00022A02 <AmiBlitz3_noFPU_r470.ab3@4623>   MOVE.b (A1),D2
00022A04 <AmiBlitz3_noFPU_r470.ab3@4624>   LSL.w #8,D2
00022A06 <AmiBlitz3_noFPU_r470.ab3@4625>   OR.w D2,D1
00022A08 <AmiBlitz3_noFPU_r470.ab3@4626>   MOVE.l A1,-(A7)
00022A0E <AmiBlitz3_noFPU_r470.ab3@4627>   CLR.w a2offset
00022A10 <AmiBlitz3_noFPU_r470.ab3@4628>   TST.w D1
00022A14 <AmiBlitz3_noFPU_r470.ab3@4629>    BEQ.w JL_0_4900
00022A18 <AmiBlitz3_noFPU_r470.ab3@4630>   LEA $2(A1),A2
00022A1E <AmiBlitz3_noFPU_r470.ab3@4632>   MOVE.l lasttoken,-(a7)
00022A24 <AmiBlitz3_noFPU_r470.ab3@4633>   CLR.l lasttoken
00022A28 <AmiBlitz3_noFPU_r470.ab3@4634>   BSR.w fetchlibps
00022A2E <AmiBlitz3_noFPU_r470.ab3@4635>   MOVE.l (a7)+,lasttoken
00022A32 <AmiBlitz3_noFPU_r470.ab3@4636> BRA.w JL_0_4904
00022A36 <AmiBlitz3_noFPU_r470.ab3@4639>   BSR.w get1bytemain
00022A38 <AmiBlitz3_noFPU_r470.ab3@4642>   MOVEA.l (A7)+,A1
00022A3A <AmiBlitz3_noFPU_r470.ab3@4643>   MOVEA.l (A7)+,A2
00022A40 <AmiBlitz3_noFPU_r470.ab3@4644>   MOVE.w a2offset,D1
00022A44 <AmiBlitz3_noFPU_r470.ab3@4645>    BEQ.w JL_0_493A
00022A4A <AmiBlitz3_noFPU_r470.ab3@4646>   MOVE.w D1,preplibst+2
00022A50 <AmiBlitz3_noFPU_r470.ab3@4647>   MOVE.l preplibst,D1
00022A56 <AmiBlitz3_noFPU_r470.ab3@4648>    JSR writelong                                           ;write array offset stack correct
00022A60 <AmiBlitz3_noFPU_r470.ab3@4649>   MOVE.w numreps,movenumrep+2
00022A64 <AmiBlitz3_noFPU_r470.ab3@4650>    BEQ.w JL_0_493A
00022A6A <AmiBlitz3_noFPU_r470.ab3@4651>   MOVE.l movenumrep,D1
00022A70 <AmiBlitz3_noFPU_r470.ab3@4652>    JSR writelong
00022A76 <AmiBlitz3_noFPU_r470.ab3@4656>   JSR userjsr
00022A7C <AmiBlitz3_noFPU_r470.ab3@4659>   MOVE.w a2offset,D1
00022A80 <AmiBlitz3_noFPU_r470.ab3@4660>    BEQ.w JL_0_4974
00022A84 <AmiBlitz3_noFPU_r470.ab3@4661>   CMP.w #$8,D1
00022A88 <AmiBlitz3_noFPU_r470.ab3@4662>    BHI.w JL_0_4964
00022A8C <AmiBlitz3_noFPU_r470.ab3@4663>   ANDI.w #$7,D1
00022A8E <AmiBlitz3_noFPU_r470.ab3@4664>   LSL.w #8,D1
00022A90 <AmiBlitz3_noFPU_r470.ab3@4665>   LSL.w #1,D1
00022A94 <AmiBlitz3_noFPU_r470.ab3@4666>   ORI.w #$504F,D1
00022A9A <AmiBlitz3_noFPU_r470.ab3@4668>   JSR writeword
00022A9E <AmiBlitz3_noFPU_r470.ab3@4669> BRA.w JL_0_4974
00022AA4 <AmiBlitz3_noFPU_r470.ab3@4672>   MOVE.w D1,fixlibst+2
00022AAA <AmiBlitz3_noFPU_r470.ab3@4673>   MOVE.l fixlibst,D1
00022AB0 <AmiBlitz3_noFPU_r470.ab3@4674>   JSR writelong
00022AB6 <AmiBlitz3_noFPU_r470.ab3@4677>   MOVE.w (A7)+,a2offset
00022ABC <AmiBlitz3_noFPU_r470.ab3@4678>   MOVE.w (A7)+,userp
00022AC2 <AmiBlitz3_noFPU_r470.ab3@4679>   MOVE.w (A7)+,numreps
00022AC6 <AmiBlitz3_noFPU_r470.ab3@4680> BRA.w reget
00022ACA <AmiBlitz3_noFPU_r470.ab3@4684>   MOVEM.l A2-A3,-(A7)
00022AD0 <AmiBlitz3_noFPU_r470.ab3@4685>   CLR.b doublepeek
00022AD6 <AmiBlitz3_noFPU_r470.ab3@4686>   MOVE.l A5,lastsourcepos
00022ADA <AmiBlitz3_noFPU_r470.ab3@4687>    BSR.w getchar
00022ADE <AmiBlitz3_noFPU_r470.ab3@4688>   CMP.w #$2E,D0
00022AE2 <AmiBlitz3_noFPU_r470.ab3@4689>    BEQ.w JL_0_49B4
00022AE8 <AmiBlitz3_noFPU_r470.ab3@4690>   MOVEA.l defaulttype,A2
00022AEC <AmiBlitz3_noFPU_r470.ab3@4691>   CMP.w #$24,D0
00022AF0 <AmiBlitz3_noFPU_r470.ab3@4692>    BNE.w JL_0_49CA
00022AF2 <AmiBlitz3_noFPU_r470.ab3@4693>   MOVEQ.l #$07,D1
00022AF6 <AmiBlitz3_noFPU_r470.ab3@4694> BRA.w JL_0_49DE
00022AFA <AmiBlitz3_noFPU_r470.ab3@4697>   BSR.w getparameter2
00022AFE <AmiBlitz3_noFPU_r470.ab3@4698>   BEQ.w syntaxerr
00022B04 <AmiBlitz3_noFPU_r470.ab3@4699>   LEA newtypebase,A2
00022B08 <AmiBlitz3_noFPU_r470.ab3@4700>   BSR.w findtype
00022B0C <AmiBlitz3_noFPU_r470.ab3@4701>   BNE.w notypeerr
00022B16 <AmiBlitz3_noFPU_r470.ab3@4705>   MOVE.w oldqflag,instringon
00022B1C <AmiBlitz3_noFPU_r470.ab3@4706>   MOVEA.l lastsourcepos,A5
00022B20 <AmiBlitz3_noFPU_r470.ab3@4711>   MOVE.w $6(A2),D1
00022B26 <AmiBlitz3_noFPU_r470.ab3@4712>   CMP.w #8,8(a2)
00022B2A <AmiBlitz3_noFPU_r470.ab3@4713>   BNE 'l1
00022B32 <AmiBlitz3_noFPU_r470.ab3@4714>   MOVE.b #1,doublepeek
00022B38 <AmiBlitz3_noFPU_r470.ab3@4718>   MOVE.w D1,convsize
00022B3C <AmiBlitz3_noFPU_r470.ab3@4719>   MOVEM.l (A7)+,A2-A3
00022B3E <AmiBlitz3_noFPU_r470.ab3@4720> RTS
00022B44 <AmiBlitz3_noFPU_r470.ab3@4725>   BTST #$3,$1(A3)
00022B48 <AmiBlitz3_noFPU_r470.ab3@4726>   BEQ.w JL_0_4A06
00022B4C <AmiBlitz3_noFPU_r470.ab3@4727>   BSR.w AJL_0_498A                                         ;read peek/poke size
00022B50 <AmiBlitz3_noFPU_r470.ab3@4729>   ORI.w #$7000,D1
00022B56 <AmiBlitz3_noFPU_r470.ab3@4730>   JSR writeword
00022B5C <AmiBlitz3_noFPU_r470.ab3@4731>   ADDQ.w #1,regnum
00022B5E <AmiBlitz3_noFPU_r470.ab3@4734> RTS
00022B60 <AmiBlitz3_noFPU_r470.ab3@4740>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00022B62 <AmiBlitz3_noFPU_r470.ab3@4741>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00022B64 <AmiBlitz3_noFPU_r470.ab3@4742>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00022B66 <AmiBlitz3_noFPU_r470.ab3@4746> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00022B68 <AmiBlitz3_noFPU_r470.ab3@4747>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00022B6A <AmiBlitz3_noFPU_r470.ab3@4748>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022B6C <AmiBlitz3_noFPU_r470.ab3@4752> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022B6E <AmiBlitz3_noFPU_r470.ab3@4753>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022B70 <AmiBlitz3_noFPU_r470.ab3@4754>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00022B72 <AmiBlitz3_noFPU_r470.ab3@4758> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00022B74 <AmiBlitz3_noFPU_r470.ab3@4761> srctype:    Ds.w 1
00022B78 <AmiBlitz3_noFPU_r470.ab3@4766>   BSR.w excget
00022B7C <AmiBlitz3_noFPU_r470.ab3@4767>   CMP.w #$2C,D0
00022B80 <AmiBlitz3_noFPU_r470.ab3@4768>    BNE.w syntaxerr
00022B86 <AmiBlitz3_noFPU_r470.ab3@4769>   MOVE.b D2,srctype
00022B8C <AmiBlitz3_noFPU_r470.ab3@4770>   MOVE.w pusha2,D1
00022B92 <AmiBlitz3_noFPU_r470.ab3@4771>   JSR writeword
00022B96 <AmiBlitz3_noFPU_r470.ab3@4772>   BSR.w get1bytemain
00022B9A <AmiBlitz3_noFPU_r470.ab3@4773>   BSR.w excget
00022BA0 <AmiBlitz3_noFPU_r470.ab3@4774>   CMP.b srctype,D2
00022BA4 <AmiBlitz3_noFPU_r470.ab3@4775>    BNE.w excerr2
00022BAA <AmiBlitz3_noFPU_r470.ab3@4776>   MOVE.w pulla1,D1
00022BB0 <AmiBlitz3_noFPU_r470.ab3@4777>    JSR writeword
00022BB4 <AmiBlitz3_noFPU_r470.ab3@4778>   CMP.b #$2,D2
00022BB8 <AmiBlitz3_noFPU_r470.ab3@4779>    BCS.w JL_0_4B2A
00022BBC <AmiBlitz3_noFPU_r470.ab3@4780>    BEQ.w JL_0_4B1E
00022BC0 <AmiBlitz3_noFPU_r470.ab3@4781>   LEA swapl(PC),A0
00022BC4 <AmiBlitz3_noFPU_r470.ab3@4782>   LEA swaplf(PC),A1
00022BCA <AmiBlitz3_noFPU_r470.ab3@4783> JMP pokecode
00022BCE <AmiBlitz3_noFPU_r470.ab3@4786>   LEA swapw(PC),A0
00022BD2 <AmiBlitz3_noFPU_r470.ab3@4787>   LEA swapwf(PC),A1
00022BD8 <AmiBlitz3_noFPU_r470.ab3@4788> JMP pokecode
00022BDC <AmiBlitz3_noFPU_r470.ab3@4791>   LEA swapb(PC),A0
00022BE0 <AmiBlitz3_noFPU_r470.ab3@4792>   LEA swapbf(PC),A1
00022BE6 <AmiBlitz3_noFPU_r470.ab3@4793> JMP pokecode
00022BEC <AmiBlitz3_noFPU_r470.ab3@4797>   JSR getparameter
00022BF0 <AmiBlitz3_noFPU_r470.ab3@4798>   BSR.w JL_0_8E3C
00022BF6 <AmiBlitz3_noFPU_r470.ab3@4799>   JSR calcvar
00022BFA <AmiBlitz3_noFPU_r470.ab3@4800>   BTST #$E,D2
00022BFE <AmiBlitz3_noFPU_r470.ab3@4801>    BEQ.w JL_0_4B4E
00022C02 <AmiBlitz3_noFPU_r470.ab3@4802>   MOVE.b #$4,D2
00022C04 <AmiBlitz3_noFPU_r470.ab3@4805>   TST.b D2
00022C08 <AmiBlitz3_noFPU_r470.ab3@4806>    BEQ.w excerr
00022C0C <AmiBlitz3_noFPU_r470.ab3@4807>   BTST #$F,D2
00022C10 <AmiBlitz3_noFPU_r470.ab3@4808>    BNE.w JL_0_4B6A
00022C16 <AmiBlitz3_noFPU_r470.ab3@4809>   MOVE.w leaamp,D1
00022C1C <AmiBlitz3_noFPU_r470.ab3@4810>    JSR pokewda5s
00022C1E <AmiBlitz3_noFPU_r470.ab3@4811>   MOVE.w D3,D1
00022C24 <AmiBlitz3_noFPU_r470.ab3@4812> JMP writeword
00022C26 <AmiBlitz3_noFPU_r470.ab3@4815> RTS
00022C2C <AmiBlitz3_noFPU_r470.ab3@4825>   MOVE.l mempool,a0
00022C32 <AmiBlitz3_noFPU_r470.ab3@4826>   MOVEA.l _execbase,A6
00022C36 <AmiBlitz3_noFPU_r470.ab3@4827> JMP _AllocPooled(a6)
00022C3A <AmiBlitz3_noFPU_r470.ab3@4831>   MOVE.w #$BF00,D1
00022C40 <AmiBlitz3_noFPU_r470.ab3@4832> JMP Atokejsr
00022C44 <AmiBlitz3_noFPU_r470.ab3@4836>   CMP.w #-$7FFA,D0
00022C48 <AmiBlitz3_noFPU_r470.ab3@4837>    BEQ.w popreturn
00022C4C <AmiBlitz3_noFPU_r470.ab3@4838>   CMP.w #-$7FEA,D0
00022C50 <AmiBlitz3_noFPU_r470.ab3@4839>    BEQ.w popnext2
00022C54 <AmiBlitz3_noFPU_r470.ab3@4840>   CMP.w #-$7FF2,D0
00022C58 <AmiBlitz3_noFPU_r470.ab3@4841>    BEQ.w popselect2
00022C5C <AmiBlitz3_noFPU_r470.ab3@4842>   CMP.w #-$7FF5,D0
00022C60 <AmiBlitz3_noFPU_r470.ab3@4843>    BEQ.w get1bytemain
00022C64 <AmiBlitz3_noFPU_r470.ab3@4844>   CMP.w #-$7FF4,D0
00022C68 <AmiBlitz3_noFPU_r470.ab3@4845>    BEQ.w get1bytemain
00022C6C <AmiBlitz3_noFPU_r470.ab3@4846>   CMP.w #-$7FEC,D0
00022C70 <AmiBlitz3_noFPU_r470.ab3@4847>    BEQ.w get1bytemain
00022C74 <AmiBlitz3_noFPU_r470.ab3@4848>   CMP.w #-$7F45,D0
00022C78 <AmiBlitz3_noFPU_r470.ab3@4849>    BEQ.w get1bytemain
00022C7C <AmiBlitz3_noFPU_r470.ab3@4850> BRA.w syntaxerr
00022C82 <AmiBlitz3_noFPU_r470.ab3@4853>   TST.b debugmode
00022C86 <AmiBlitz3_noFPU_r470.ab3@4854>    BEQ.w popreturn__norerr
00022C8A <AmiBlitz3_noFPU_r470.ab3@4855>   LEA popreturn__rfix(PC),A0
00022C8E <AmiBlitz3_noFPU_r470.ab3@4856>   LEA popreturn__rfixf(PC),A1
00022C94 <AmiBlitz3_noFPU_r470.ab3@4857>    JSR pokecode
00022C98 <AmiBlitz3_noFPU_r470.ab3@4858>   MOVE.w #$C305,D1
00022C9E <AmiBlitz3_noFPU_r470.ab3@4859>    JSR Atokejsr
00022CA2 <AmiBlitz3_noFPU_r470.ab3@4860>   MOVE.w popreturn__rfix2(PC),D1
00022CA8 <AmiBlitz3_noFPU_r470.ab3@4862>    JSR writeword
00022CAC <AmiBlitz3_noFPU_r470.ab3@4863> BRA.w get1bytemain
00022CB2 <AmiBlitz3_noFPU_r470.ab3@4867>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00022CB6 <AmiBlitz3_noFPU_r470.ab3@4868>   BEQ.w popreturn__rfix2
00022CBC <AmiBlitz3_noFPU_r470.ab3@4871>   JSR $20000                                               ;reass
00022CBE <AmiBlitz3_noFPU_r470.ab3@4874>   ADDQ.w #6,A7
00022CC2 <AmiBlitz3_noFPU_r470.ab3@4878>   MOVE.w popreturn__sfix(PC),D1
00022CC8 <AmiBlitz3_noFPU_r470.ab3@4879>   JSR writeword
00022CCC <AmiBlitz3_noFPU_r470.ab3@4880> BRA.w get1bytemain
00022CCE <AmiBlitz3_noFPU_r470.ab3@4885>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00022CD4 <AmiBlitz3_noFPU_r470.ab3@4890>   MOVE.l firstfor,D0
00022CD8 <AmiBlitz3_noFPU_r470.ab3@4891>    BEQ.w noforerr
00022CDA <AmiBlitz3_noFPU_r470.ab3@4892>   MOVEA.l D0,A2
00022CDE <AmiBlitz3_noFPU_r470.ab3@4893>    BSR.w get1bytemain
00022CE2 <AmiBlitz3_noFPU_r470.ab3@4894>   BSR.w popnext
00022CE8 <AmiBlitz3_noFPU_r470.ab3@4897>   TST.b debugmode
00022CEC <AmiBlitz3_noFPU_r470.ab3@4898>    BEQ.w popnext3__ner
00022CF2 <AmiBlitz3_noFPU_r470.ab3@4899>   MOVE.l nextfixw2,D1
00022CF8 <AmiBlitz3_noFPU_r470.ab3@4900>   CMPI.w #$3,$C(A2)
00022CFC <AmiBlitz3_noFPU_r470.ab3@4901>    BCS.w writelong2
00022D02 <AmiBlitz3_noFPU_r470.ab3@4902>   MOVE.l nextfixl2,D1
00022D08 <AmiBlitz3_noFPU_r470.ab3@4903> writelong2 JMP  writelong
00022D0E <AmiBlitz3_noFPU_r470.ab3@4906>   CMPI.w #$3,$C(A2)
00022D12 <AmiBlitz3_noFPU_r470.ab3@4907>    BCS.w popnext3__skip2
00022D18 <AmiBlitz3_noFPU_r470.ab3@4908>   MOVE.l nextfixl,D1
00022D1E <AmiBlitz3_noFPU_r470.ab3@4909>   JMP writelong
00022D24 <AmiBlitz3_noFPU_r470.ab3@4912>   MOVE.w nextfixw,D1
00022D2A <AmiBlitz3_noFPU_r470.ab3@4913> JMP writeword
00022D2E <AmiBlitz3_noFPU_r470.ab3@4917>   MOVE.w $C(A2),D0
00022D34 <AmiBlitz3_noFPU_r470.ab3@4918>   TST.b debugmode
00022D38 <AmiBlitz3_noFPU_r470.ab3@4919>    BEQ.w popnext__norunerr
00022D3C <AmiBlitz3_noFPU_r470.ab3@4920>   MOVE.w #$C306,D1
00022D40 <AmiBlitz3_noFPU_r470.ab3@4921>   CMP.w #$3,D0
00022D44 <AmiBlitz3_noFPU_r470.ab3@4922>    BCS.w popnext__oktc
00022D46 <AmiBlitz3_noFPU_r470.ab3@4923>   ADDQ.w #1,D1
00022D48 <AmiBlitz3_noFPU_r470.ab3@4926>   MOVE.l A2,-(A7)
00022D4E <AmiBlitz3_noFPU_r470.ab3@4927>   JSR Atokejsr
00022D50 <AmiBlitz3_noFPU_r470.ab3@4928>   MOVEA.l (A7)+,A2
00022D52 <AmiBlitz3_noFPU_r470.ab3@4931> RTS
00022D58 <AmiBlitz3_noFPU_r470.ab3@4935>   MOVE.l firstsel,D0
00022D5C <AmiBlitz3_noFPU_r470.ab3@4936>    BEQ.w eselerr
00022D5E <AmiBlitz3_noFPU_r470.ab3@4937>   MOVEA.l D0,A2
00022D62 <AmiBlitz3_noFPU_r470.ab3@4938>    BSR.w get1bytemain
00022D66 <AmiBlitz3_noFPU_r470.ab3@4941>   MOVE.w $C(A2),D2
00022D6C <AmiBlitz3_noFPU_r470.ab3@4942>   TST.b debugmode
00022D70 <AmiBlitz3_noFPU_r470.ab3@4943>    BEQ.w popselect__norerr
00022D74 <AmiBlitz3_noFPU_r470.ab3@4944>   MOVE.w #$C313,D1
00022D78 <AmiBlitz3_noFPU_r470.ab3@4945>   CMP.w #$3,D2
00022D7C <AmiBlitz3_noFPU_r470.ab3@4946>    BCS.w popselect__chkit
00022D7E <AmiBlitz3_noFPU_r470.ab3@4947>   ADDQ.w #1,D1
00022D84 <AmiBlitz3_noFPU_r470.ab3@4950>   JSR Atokejsr                                             ;make sure next thing on stack
00022D86 <AmiBlitz3_noFPU_r470.ab3@4954>   MOVEQ.l #$02,D1
00022D8A <AmiBlitz3_noFPU_r470.ab3@4955>   CMP.w #$3,D2
00022D8E <AmiBlitz3_noFPU_r470.ab3@4956>    BCS.w popselect__doit
00022D90 <AmiBlitz3_noFPU_r470.ab3@4957>   MOVEQ.l #$04,D1
00022D94 <AmiBlitz3_noFPU_r470.ab3@4958>   CMP.w #$7,D2
00022D98 <AmiBlitz3_noFPU_r470.ab3@4959>    BCS.w popselect__doit
00022D9E <AmiBlitz3_noFPU_r470.ab3@4960>   LEA endselstr,A0
00022DA4 <AmiBlitz3_noFPU_r470.ab3@4961>   LEA endselstrf,A1
00022DAA <AmiBlitz3_noFPU_r470.ab3@4962>   TST.b debugmode
00022DAE <AmiBlitz3_noFPU_r470.ab3@4963>    BEQ.w popselect__norerr3
00022DB4 <AmiBlitz3_noFPU_r470.ab3@4964>   LEA endselstrf2,A1
00022DBA <AmiBlitz3_noFPU_r470.ab3@4967>   JSR pokecode
00022DBE <AmiBlitz3_noFPU_r470.ab3@4968>   MOVE.w #$C003,D1                                         ;global freemem
00022DC4 <AmiBlitz3_noFPU_r470.ab3@4969> JMP Atokejsr
00022DCA <AmiBlitz3_noFPU_r470.ab3@4972>   TST.b debugmode
00022DCE <AmiBlitz3_noFPU_r470.ab3@4973>    BEQ.w popselect__norerr2
00022DD0 <AmiBlitz3_noFPU_r470.ab3@4974>   ADDQ.w #2,D1                                             ;for the "sE"
00022DD2 <AmiBlitz3_noFPU_r470.ab3@4977>   LSL.w #8,D1
00022DD4 <AmiBlitz3_noFPU_r470.ab3@4978>   LSL.w #1,D1
00022DDA <AmiBlitz3_noFPU_r470.ab3@4979>   OR.w endsel,D1
00022DE0 <AmiBlitz3_noFPU_r470.ab3@4980> JMP writeword
00022DE4 <AmiBlitz3_noFPU_r470.ab3@4983> firstrep:    Ds.l 1
00022DE8 <AmiBlitz3_noFPU_r470.ab3@4984> replineat:   Ds.l 1
00022DEE <AmiBlitz3_noFPU_r470.ab3@4993>   CLR.l fp0addr
00022DF8 <AmiBlitz3_noFPU_r470.ab3@4994>   MOVE.l linenumat,replineat
00022DFA <AmiBlitz3_noFPU_r470.ab3@4995>   MOVEQ.l #$08,D0
00022E00 <AmiBlitz3_noFPU_r470.ab3@4996>   MOVEA.l _execbase,A6
00022E06 <AmiBlitz3_noFPU_r470.ab3@4997>   MOVE.l mempool,a0
00022E0A <AmiBlitz3_noFPU_r470.ab3@4998>   JSR _AllocPooled(a6)
00022E0C <AmiBlitz3_noFPU_r470.ab3@5000>   MOVEA.l D0,A0
00022E10 <AmiBlitz3_noFPU_r470.ab3@5001>   MOVE.l firstrep(PC),(A0)
00022E16 <AmiBlitz3_noFPU_r470.ab3@5002>   MOVE.l A0,firstrep
00022E1E <AmiBlitz3_noFPU_r470.ab3@5003>   MOVE.l destpointer,$4(A0)
00022E20 <AmiBlitz3_noFPU_r470.ab3@5004> RTS
00022E26 <AmiBlitz3_noFPU_r470.ab3@5007> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
00022E2A <AmiBlitz3_noFPU_r470.ab3@5010>   LEA str_temp(PC),A1
00022E2C <AmiBlitz3_noFPU_r470.ab3@5011>   CLR.w (A1)
00022E30 <AmiBlitz3_noFPU_r470.ab3@5012>   CLR.l $2(A1)
00022E32 <AmiBlitz3_noFPU_r470.ab3@5015>   MOVEQ.l #$04,D0
00022E36 <AmiBlitz3_noFPU_r470.ab3@5018>     MOVE.b $1(A1),(A1)+
00022E3A <AmiBlitz3_noFPU_r470.ab3@5019>   DBF D0,check_for_infoextention__loop
00022E3E <AmiBlitz3_noFPU_r470.ab3@5024>   LEA str_temp(PC),A1
00022E40 <AmiBlitz3_noFPU_r470.ab3@5025>   MOVE.b (A0),D0
00022E44 <AmiBlitz3_noFPU_r470.ab3@5026>   ORI.b #$20,D0
00022E48 <AmiBlitz3_noFPU_r470.ab3@5027>   MOVE.b D0,$5(A1)
00022E4A <AmiBlitz3_noFPU_r470.ab3@5028>   TST.b (A0)+
00022E4E <AmiBlitz3_noFPU_r470.ab3@5029>    BNE.w check_for_infoextention__loop2
00022E52 <AmiBlitz3_noFPU_r470.ab3@5030>   CMPI.w #$2E69,(A1)+                                      ;".i"
00022E56 <AmiBlitz3_noFPU_r470.ab3@5031>    BNE.w check_for_infoextention__no
00022E5C <AmiBlitz3_noFPU_r470.ab3@5032>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00022E5E <AmiBlitz3_noFPU_r470.ab3@5035> RTS
00022E62 <AmiBlitz3_noFPU_r470.ab3@5039>   BPL.w gettokeps__evaltoke
00022E64 <AmiBlitz3_noFPU_r470.ab3@5040>   MOVE.w D0,D1
00022E68 <AmiBlitz3_noFPU_r470.ab3@5041>   ANDI.w #$7F80,D1
00022E6C <AmiBlitz3_noFPU_r470.ab3@5042>    BEQ.w tokeerr
00022E70 <AmiBlitz3_noFPU_r470.ab3@5043>   BCLR #$F,D0
00022E72 <AmiBlitz3_noFPU_r470.ab3@5044>   MOVE.w D0,D4                                             ;got toke number
00022E76 <AmiBlitz3_noFPU_r470.ab3@5045>   BSR.w get1bytemain
00022E7A <AmiBlitz3_noFPU_r470.ab3@5046> BRA.w gettokeps__gotnum
00022E80 <AmiBlitz3_noFPU_r470.ab3@5049>   JSR JL_0_BF6A
00022E86 <AmiBlitz3_noFPU_r470.ab3@5050>   CMP.l #MaxWord,D3
00022E8A <AmiBlitz3_noFPU_r470.ab3@5051>    BHI.w tokeerr
00022E8C <AmiBlitz3_noFPU_r470.ab3@5052>   TST.w D6
00022E90 <AmiBlitz3_noFPU_r470.ab3@5053>    BNE.w tokeerr
00022E92 <AmiBlitz3_noFPU_r470.ab3@5054>   MOVE.w D3,D4
00022E94 <AmiBlitz3_noFPU_r470.ab3@5057>   MOVEQ.l #$00,D5
00022E98 <AmiBlitz3_noFPU_r470.ab3@5058>   CMP.w #$2C,D0
00022E9C <AmiBlitz3_noFPU_r470.ab3@5059>    BNE.w gettokeps__gotfrom
00022E9E <AmiBlitz3_noFPU_r470.ab3@5060>   MOVE.w D4,-(A7)
00022EA4 <AmiBlitz3_noFPU_r470.ab3@5061>    JSR AJL_0_BF6E
00022EAA <AmiBlitz3_noFPU_r470.ab3@5062>   CMP.l #MaxWord,D3
00022EAE <AmiBlitz3_noFPU_r470.ab3@5063>    BHI.w tokeerr
00022EB0 <AmiBlitz3_noFPU_r470.ab3@5064>   TST.w D6
00022EB4 <AmiBlitz3_noFPU_r470.ab3@5065>    BNE.w tokeerr
00022EB6 <AmiBlitz3_noFPU_r470.ab3@5066>   MOVE.w D3,D5
00022EB8 <AmiBlitz3_noFPU_r470.ab3@5067>   MOVE.w (A7)+,D4
00022EBA <AmiBlitz3_noFPU_r470.ab3@5070> RTS                                                        ;d4=toke, d5=form
00022EBC <AmiBlitz3_noFPU_r470.ab3@5074>   TST.w D0
00022EC0 <AmiBlitz3_noFPU_r470.ab3@5075>    BSR.w gettokeps
00022EC4 <AmiBlitz3_noFPU_r470.ab3@5076>   MOVE.w #$4EB9,D1
00022ECA <AmiBlitz3_noFPU_r470.ab3@5077>   JSR writeword
00022ECE <AmiBlitz3_noFPU_r470.ab3@5078>   BSR.w addoff
00022ED0 <AmiBlitz3_noFPU_r470.ab3@5079>   MOVE.w D5,D1
00022ED4 <AmiBlitz3_noFPU_r470.ab3@5080>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00022ED6 <AmiBlitz3_noFPU_r470.ab3@5081>   SWAP D1
00022ED8 <AmiBlitz3_noFPU_r470.ab3@5082>   MOVE.w D4,D1
00022EDE <AmiBlitz3_noFPU_r470.ab3@5083> JMP writelong
00022EE0 <AmiBlitz3_noFPU_r470.ab3@5087>   TST.w D0
00022EE4 <AmiBlitz3_noFPU_r470.ab3@5088>    BSR.w gettokeps
00022EE8 <AmiBlitz3_noFPU_r470.ab3@5089>   MOVE.w #$4EB9,D1
00022EEE <AmiBlitz3_noFPU_r470.ab3@5090>   JSR writeword
00022EF2 <AmiBlitz3_noFPU_r470.ab3@5091>   BSR.w addoff
00022EF4 <AmiBlitz3_noFPU_r470.ab3@5092>   MOVE.w D5,D1
00022EF8 <AmiBlitz3_noFPU_r470.ab3@5093>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00022EFA <AmiBlitz3_noFPU_r470.ab3@5094>   SWAP D1
00022EFC <AmiBlitz3_noFPU_r470.ab3@5095>   MOVE.w D4,D1
00022F02 <AmiBlitz3_noFPU_r470.ab3@5096>   JMP writelong
00022F08 <AmiBlitz3_noFPU_r470.ab3@5100>   JSR JL_0_BF6A
00022F0E <AmiBlitz3_noFPU_r470.ab3@5101>   CMP.l #$10000,D3
00022F12 <AmiBlitz3_noFPU_r470.ab3@5102>    BCC.w tokeerr
00022F14 <AmiBlitz3_noFPU_r470.ab3@5103>   MOVE.w D3,D1
00022F1A <AmiBlitz3_noFPU_r470.ab3@5104> JMP Atokejsr
00022F1E <AmiBlitz3_noFPU_r470.ab3@5108>   BSR.w gettokeps
00022F22 <AmiBlitz3_noFPU_r470.ab3@5109>   MOVE.w #$4EB9,D1
00022F28 <AmiBlitz3_noFPU_r470.ab3@5110>   JSR writeword
00022F2E <AmiBlitz3_noFPU_r470.ab3@5111>   MOVE.l destpointer,D3
00022F36 <AmiBlitz3_noFPU_r470.ab3@5112>   BTST #$7,blitzmode
00022F3A <AmiBlitz3_noFPU_r470.ab3@5113>    BEQ.w do_TokeJsr__inamiga
00022F3E <AmiBlitz3_noFPU_r470.ab3@5114>   BSET #$E,D5
00022F42 <AmiBlitz3_noFPU_r470.ab3@5117>   BSR.w JL_0_6E86
00022F46 <AmiBlitz3_noFPU_r470.ab3@5118>   BSR.w addoff
00022F4C <AmiBlitz3_noFPU_r470.ab3@5119>   JMP writelong
00022F50 <AmiBlitz3_noFPU_r470.ab3@5123>   BEQ.w do_VWait__zero
00022F52 <AmiBlitz3_noFPU_r470.ab3@5124>   MOVEQ.l #$02,D2                                          ;get a word
00022F58 <AmiBlitz3_noFPU_r470.ab3@5126>   JSR bakeval
00022F5C <AmiBlitz3_noFPU_r470.ab3@5127>   MOVE.w fvwait(PC),D1
00022F60 <AmiBlitz3_noFPU_r470.ab3@5128> BRA.w do_VWait__vcont
00022F64 <AmiBlitz3_noFPU_r470.ab3@5131>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00022F6A <AmiBlitz3_noFPU_r470.ab3@5134>   JSR writeword
00022F6E <AmiBlitz3_noFPU_r470.ab3@5135>   MOVE.w #$C104,D1
00022F74 <AmiBlitz3_noFPU_r470.ab3@5136> JMP Atokejsr
00022F76 <AmiBlitz3_noFPU_r470.ab3@5140>   SUBQ.w #1,D0
00022F7C <AmiBlitz3_noFPU_r470.ab3@5143>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00022F80 <AmiBlitz3_noFPU_r470.ab3@5146>   Dc.l $426d0001                                           ;clr.w $0(A5)
00022F84 <AmiBlitz3_noFPU_r470.ab3@5150>   MOVE.b debugmode(PC),D1
00022F88 <AmiBlitz3_noFPU_r470.ab3@5151>   BEQ.b debugmode_codelabel__skip
00022F8C <AmiBlitz3_noFPU_r470.ab3@5152>   MOVE.w #$D500,D1
00022F92 <AmiBlitz3_noFPU_r470.ab3@5153> JMP Atokejsr
00022F94 <AmiBlitz3_noFPU_r470.ab3@5156> RTS
00022F9C <AmiBlitz3_noFPU_r470.ab3@5160>   BSET #$0,blitzmode
00022FA4 <AmiBlitz3_noFPU_r470.ab3@5161>   BSET #$7,blitzmode
00022FA8 <AmiBlitz3_noFPU_r470.ab3@5162>   MOVE.w #$C200,D1
00022FAE <AmiBlitz3_noFPU_r470.ab3@5163>   JSR Atokejsr
00022FB4 <AmiBlitz3_noFPU_r470.ab3@5164>   TST.b debugmode
00022FB8 <AmiBlitz3_noFPU_r470.ab3@5165>    BEQ.w do_BLITZ__done
00022FBC <AmiBlitz3_noFPU_r470.ab3@5166>   MOVE.w cgoblitz(PC),D1
00022FC2 <AmiBlitz3_noFPU_r470.ab3@5167>   JSR writeword
00022FC4 <AmiBlitz3_noFPU_r470.ab3@5168>   MOVEQ.l #-$01,D1
00022FCA <AmiBlitz3_noFPU_r470.ab3@5169>   JSR writeword
00022FD0 <AmiBlitz3_noFPU_r470.ab3@5170>   JSR getbbase
00022FD6 <AmiBlitz3_noFPU_r470.ab3@5171>   JSR writeword
00022FDA <AmiBlitz3_noFPU_r470.ab3@5174> BRA.w debugmode_codelabel
00022FDE <AmiBlitz3_noFPU_r470.ab3@5178>   MOVE.w #$C201,D1
00022FE2 <AmiBlitz3_noFPU_r470.ab3@5179> BRA.w do_AMIGA__toamode
00022FE6 <AmiBlitz3_noFPU_r470.ab3@5183>   MOVE.W  #$C202,D1
00022FEE <AmiBlitz3_noFPU_r470.ab3@5186>   BSET #$0,blitzmode
00022FF6 <AmiBlitz3_noFPU_r470.ab3@5187>   BCLR #$7,blitzmode
00022FFC <AmiBlitz3_noFPU_r470.ab3@5188>   JSR Atokejsr
00023002 <AmiBlitz3_noFPU_r470.ab3@5189>   TST.b debugmode
00023006 <AmiBlitz3_noFPU_r470.ab3@5190>    BEQ.w do_AMIGA__done
0002300A <AmiBlitz3_noFPU_r470.ab3@5191>   MOVE.w cgoamiga(PC),D1
00023010 <AmiBlitz3_noFPU_r470.ab3@5192>   JSR writeword
00023016 <AmiBlitz3_noFPU_r470.ab3@5193>   JSR getbbase
0002301C <AmiBlitz3_noFPU_r470.ab3@5194>   JSR writeword
00023020 <AmiBlitz3_noFPU_r470.ab3@5197> BRA.w debugmode_codelabel
00023024 <AmiBlitz3_noFPU_r470.ab3@5201>   MOVEM.l D2-D7/A2-A4,-(A7)
00023028 <AmiBlitz3_noFPU_r470.ab3@5204>   MOVEM.l (A7)+,D2-D7/A2-A4
0002302E <AmiBlitz3_noFPU_r470.ab3@5208>   JSR JL_0_BF6A
00023034 <AmiBlitz3_noFPU_r470.ab3@5209>   CMP.l #$E,D3
00023038 <AmiBlitz3_noFPU_r470.ab3@5210>    BCC.w interr4
0002303C <AmiBlitz3_noFPU_r470.ab3@5211>   MOVE.w #$7000,D1
0002303E <AmiBlitz3_noFPU_r470.ab3@5212>   OR.w D3,D1
00023044 <AmiBlitz3_noFPU_r470.ab3@5213>   JSR writeword
00023048 <AmiBlitz3_noFPU_r470.ab3@5214>   MOVE.w #$C101,D1
0002304E <AmiBlitz3_noFPU_r470.ab3@5215> JMP Atokejsr                                               ;clear the interupt
00023050 <AmiBlitz3_noFPU_r470.ab3@5218> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023054 <AmiBlitz3_noFPU_r470.ab3@5219> errjmp:      Ds.l 1                                        ;where err jump is
00023058 <AmiBlitz3_noFPU_r470.ab3@5220> errcode:     Ds.l 1
0002305C <AmiBlitz3_noFPU_r470.ab3@5224>   MOVE.W  #$D202,D1
00023062 <AmiBlitz3_noFPU_r470.ab3@5225> JMP Atokejsr                                               ;BRA.W Atokejsr
00023066 <AmiBlitz3_noFPU_r470.ab3@5229>   MOVE.w inerr(PC),D1
0002306A <AmiBlitz3_noFPU_r470.ab3@5230>    BEQ.w errerr3
00023070 <AmiBlitz3_noFPU_r470.ab3@5231>   CLR.w inerr
00023076 <AmiBlitz3_noFPU_r470.ab3@5232>   MOVE.w dontwrite,D1
0002307A <AmiBlitz3_noFPU_r470.ab3@5233>    BNE.w doendseterr__skip
0002307E <AmiBlitz3_noFPU_r470.ab3@5234>   MOVEA.l errjmp(PC),A0
00023084 <AmiBlitz3_noFPU_r470.ab3@5235>   MOVE.l destpointer,(A0)
00023088 <AmiBlitz3_noFPU_r470.ab3@5238> BRA.w get1bytemain
0002308C <AmiBlitz3_noFPU_r470.ab3@5242>   MOVE.w #$D205,D1
00023092 <AmiBlitz3_noFPU_r470.ab3@5243> JMP Atokejsr
00023098 <AmiBlitz3_noFPU_r470.ab3@5247>   MOVE.w proceduremode,D1
0002309C <AmiBlitz3_noFPU_r470.ab3@5248>    BNE.w errerr1
000230A0 <AmiBlitz3_noFPU_r470.ab3@5249>   MOVE.w inerr(PC),D1
000230A4 <AmiBlitz3_noFPU_r470.ab3@5250>    BNE.w errerr2
000230AA <AmiBlitz3_noFPU_r470.ab3@5251>   LEA inerr,a0
000230AC <AmiBlitz3_noFPU_r470.ab3@5252>   NOT.w (a0)                                               ;reass
000230B0 <AmiBlitz3_noFPU_r470.ab3@5253>   MOVE.w #$203C,D1                                         ;move.l #x,d0
000230B6 <AmiBlitz3_noFPU_r470.ab3@5254>   JSR writeword
000230C0 <AmiBlitz3_noFPU_r470.ab3@5255>   MOVE.l destpointer,errcode
000230C4 <AmiBlitz3_noFPU_r470.ab3@5256>   BSR.w addoff
000230C8 <AmiBlitz3_noFPU_r470.ab3@5257>   BSR.w writelong
000230CC <AmiBlitz3_noFPU_r470.ab3@5258>   MOVE.w #$D201,D1
000230D2 <AmiBlitz3_noFPU_r470.ab3@5259>   JSR Atokejsr
000230D6 <AmiBlitz3_noFPU_r470.ab3@5260>   MOVE.w #$4EF9,D1                                         ;JMP
000230DC <AmiBlitz3_noFPU_r470.ab3@5261>   JSR writeword
000230E6 <AmiBlitz3_noFPU_r470.ab3@5262>   MOVE.l destpointer,errjmp
000230EA <AmiBlitz3_noFPU_r470.ab3@5263>   BSR.w addoff
000230F0 <AmiBlitz3_noFPU_r470.ab3@5264>   JSR  writelong
000230F6 <AmiBlitz3_noFPU_r470.ab3@5265>   MOVE.w dontwrite,D1
000230FA <AmiBlitz3_noFPU_r470.ab3@5266>    BNE.w do_SetErr__skip
000230FE <AmiBlitz3_noFPU_r470.ab3@5267>   MOVEA.l errcode(PC),A0
00023104 <AmiBlitz3_noFPU_r470.ab3@5268>   MOVE.l destpointer,(A0)
00023106 <AmiBlitz3_noFPU_r470.ab3@5271> RTS
0002310A <AmiBlitz3_noFPU_r470.ab3@5274> intlineat:  Ds.l 1
0002310C <AmiBlitz3_noFPU_r470.ab3@5278>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00023110 <AmiBlitz3_noFPU_r470.ab3@5279>   BSR.w errchx
00023116 <AmiBlitz3_noFPU_r470.ab3@5280>   MOVE.w D1,intstring
00023120 <AmiBlitz3_noFPU_r470.ab3@5281>   MOVE.l linenumat,intlineat
00023126 <AmiBlitz3_noFPU_r470.ab3@5282>   JSR JL_0_BF6A                                           ;get constant - int level
0002312C <AmiBlitz3_noFPU_r470.ab3@5283>   CMP.l #$E,D3
00023130 <AmiBlitz3_noFPU_r470.ab3@5284>    BCC.w interr4
00023136 <AmiBlitz3_noFPU_r470.ab3@5285>   ST intsused
0002313C <AmiBlitz3_noFPU_r470.ab3@5286>   MOVE.w D3,intlevel
00023140 <AmiBlitz3_noFPU_r470.ab3@5287>   MOVE.w #$7000,D1
00023142 <AmiBlitz3_noFPU_r470.ab3@5288>   OR.w D3,D1                                              
00023146 <AmiBlitz3_noFPU_r470.ab3@5289>   BSR.w writeword                                         ;moveq #x,d0
0002314A <AmiBlitz3_noFPU_r470.ab3@5290>   MOVE.w #$223C,D1                                        ;move.l #x,d1
0002314E <AmiBlitz3_noFPU_r470.ab3@5291>   BSR.w writeword
00023152 <AmiBlitz3_noFPU_r470.ab3@5292>   BSR.w addoff
00023158 <AmiBlitz3_noFPU_r470.ab3@5293>   MOVE.l destpointer,-(A7)
0002315C <AmiBlitz3_noFPU_r470.ab3@5294>   BSR.w writelong
00023160 <AmiBlitz3_noFPU_r470.ab3@5295>   MOVE.w #$C100,D1
00023166 <AmiBlitz3_noFPU_r470.ab3@5296>   JSR Atokejsr
0002316A <AmiBlitz3_noFPU_r470.ab3@5297>   MOVE.w #$4EF9,D1                                        ;jmp
0002316E <AmiBlitz3_noFPU_r470.ab3@5298>   BSR.w writeword
00023172 <AmiBlitz3_noFPU_r470.ab3@5299>   BSR.w addoff
0002317C <AmiBlitz3_noFPU_r470.ab3@5300>   MOVE.l destpointer,intjmpat
00023180 <AmiBlitz3_noFPU_r470.ab3@5301>   BSR.w writelong
00023182 <AmiBlitz3_noFPU_r470.ab3@5302>   MOVEA.l (A7)+,A0
00023188 <AmiBlitz3_noFPU_r470.ab3@5303>   MOVE.w dontwrite,D1
0002318C <AmiBlitz3_noFPU_r470.ab3@5304>   BNE.w do_SetInt__dontpoke
00023192 <AmiBlitz3_noFPU_r470.ab3@5305>   MOVE.l destpointer,(A0)
00023196 <AmiBlitz3_noFPU_r470.ab3@5308>   MOVE.l intstart0(PC),D1
0002319A <AmiBlitz3_noFPU_r470.ab3@5309>   BSR.w writelong
000231A0 <AmiBlitz3_noFPU_r470.ab3@5310>   TST.b debugmode
000231A4 <AmiBlitz3_noFPU_r470.ab3@5311>    BEQ.w do_SetInt__norerr
000231A6 <AmiBlitz3_noFPU_r470.ab3@5315>   MOVEQ.l #$02,D1
000231AA <AmiBlitz3_noFPU_r470.ab3@5316>   BSR.w writetrap
000231AE <AmiBlitz3_noFPU_r470.ab3@5317>   BSR.w addoff
000231B8 <AmiBlitz3_noFPU_r470.ab3@5318>   MOVE.l destpointer,intcleanat
000231BC <AmiBlitz3_noFPU_r470.ab3@5319>   BSR.w writelong
000231C2 <AmiBlitz3_noFPU_r470.ab3@5320>   MOVE.w intlevel,D1
000231C6 <AmiBlitz3_noFPU_r470.ab3@5321>   BSR.w writeword
000231CA <AmiBlitz3_noFPU_r470.ab3@5322>   MOVE.w #$C30B,D1                                         ;disable stack checks
000231D0 <AmiBlitz3_noFPU_r470.ab3@5323>   JSR Atokejsr
000231D4 <AmiBlitz3_noFPU_r470.ab3@5326>   MOVE.w #$FED3,D1
000231D8 <AmiBlitz3_noFPU_r470.ab3@5327>   BSR.w uselib
000231DC <AmiBlitz3_noFPU_r470.ab3@5328>   MOVE.w #$C102,D1
000231E2 <AmiBlitz3_noFPU_r470.ab3@5329>   JSR Atokejsr
000231EA <AmiBlitz3_noFPU_r470.ab3@5330>   MOVE.w #-1,lasta6
000231F4 <AmiBlitz3_noFPU_r470.ab3@5331>   MOVE.l linenumat,intline
000231F6 <AmiBlitz3_noFPU_r470.ab3@5332> RTS
000231F8 <AmiBlitz3_noFPU_r470.ab3@5336>             Ds.w 1                                         ;??looks like obsolved data??
000231FC <AmiBlitz3_noFPU_r470.ab3@5338> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00023200 <AmiBlitz3_noFPU_r470.ab3@5340> intjmpat:   Ds.l 1
00023204 <AmiBlitz3_noFPU_r470.ab3@5341> intline:    Ds.l 1
00023206 <AmiBlitz3_noFPU_r470.ab3@5342> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023208 <AmiBlitz3_noFPU_r470.ab3@5345> intlevel:   Ds.w 1
0002320C <AmiBlitz3_noFPU_r470.ab3@5346> intcleanat: Ds.l 1
00023210 <AmiBlitz3_noFPU_r470.ab3@5347> ret15add:   Ds.l 1
00023212 <AmiBlitz3_noFPU_r470.ab3@5348> ret15cc:    Ds.w 1
0002321A <AmiBlitz3_noFPU_r470.ab3@5352>   ADDI.l #$12,$2(A7)
00023222 <AmiBlitz3_noFPU_r470.ab3@5353>   MOVE.l $2(A7),ret15add
00023228 <AmiBlitz3_noFPU_r470.ab3@5354>   MOVE.w (A7),ret15cc
00023230 <AmiBlitz3_noFPU_r470.ab3@5355>   MOVE.l #directdo,$2(A7)
00023232 <AmiBlitz3_noFPU_r470.ab3@5356> RTE
00023236 <AmiBlitz3_noFPU_r470.ab3@5365>   MOVE.l ret15add(PC),-(A7)
0002323A <AmiBlitz3_noFPU_r470.ab3@5366>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
0002323E <AmiBlitz3_noFPU_r470.ab3@5367>   MOVEM.l D0-D7/A0-A6,-(A7)
00023248 <AmiBlitz3_noFPU_r470.ab3@5368>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023252 <AmiBlitz3_noFPU_r470.ab3@5369>   MOVE.l destbufferstart,trap15temp2
0002325C <AmiBlitz3_noFPU_r470.ab3@5370>   MOVE.l libend,templibend
00023266 <AmiBlitz3_noFPU_r470.ab3@5371>   MOVE.l data1start,tempdata1start
0002326C <AmiBlitz3_noFPU_r470.ab3@5372>   CLR.l hunkoffsetcounter
00023272 <AmiBlitz3_noFPU_r470.ab3@5374>   MOVE.l directbuffer,a0
00023278 <AmiBlitz3_noFPU_r470.ab3@5378>   MOVE.l a0,destbufferstart
0002327E <AmiBlitz3_noFPU_r470.ab3@5379>   ADD.l #3900,a0
00023284 <AmiBlitz3_noFPU_r470.ab3@5380>   MOVE.l a0,destbufferend
0002328A <AmiBlitz3_noFPU_r470.ab3@5381>   TST.b exdebug
0002328E <AmiBlitz3_noFPU_r470.ab3@5382>   BEQ 'l1
00023294 <AmiBlitz3_noFPU_r470.ab3@5383>   MOVE.l a0,libend
0002329A <AmiBlitz3_noFPU_r470.ab3@5384>   ADD.l #4000,a0
000232A0 <AmiBlitz3_noFPU_r470.ab3@5385>   MOVE.l a0,data1start
000232AA <AmiBlitz3_noFPU_r470.ab3@5388>   MOVE.l #dircont,errcont
000232B0 <AmiBlitz3_noFPU_r470.ab3@5389> 
000232B6 <AmiBlitz3_noFPU_r470.ab3@5390>   MOVE.l A7,errstack
000232BE <AmiBlitz3_noFPU_r470.ab3@5391>   MOVE.w #$FFFF,dirmode
000232C2 <AmiBlitz3_noFPU_r470.ab3@5393>     MOVEA.l ret15add(PC),A1
000232C8 <AmiBlitz3_noFPU_r470.ab3@5394>     MOVE.w -(A1),blitzmode
000232CA <AmiBlitz3_noFPU_r470.ab3@5395>     CLR.l -(A1)
000232D0 <AmiBlitz3_noFPU_r470.ab3@5396>     MOVE.l -(A1),firstglob
000232D6 <AmiBlitz3_noFPU_r470.ab3@5397>     MOVE.l -(A1),firstlocal
000232DC <AmiBlitz3_noFPU_r470.ab3@5399>   CLR.w proceduremode
000232E2 <AmiBlitz3_noFPU_r470.ab3@5400>   MOVE.l firstglob,D0
000232E8 <AmiBlitz3_noFPU_r470.ab3@5401>   OR.l firstlocal,D0
000232EC <AmiBlitz3_noFPU_r470.ab3@5402>   BEQ.b directdo__skip
000232F2 <AmiBlitz3_noFPU_r470.ab3@5403>   NOT.w proceduremode
000232F4 <AmiBlitz3_noFPU_r470.ab3@5406>   MOVEA.l -(A1),A0                                         ;address of string
000232F6 <AmiBlitz3_noFPU_r470.ab3@5410>   MOVE.l A0,-(A7)
00023334 <AmiBlitz3_noFPU_r470.ab3@5413>   !ComData_GetL{comFunc_DebugTrap,A1}
00023336 <AmiBlitz3_noFPU_r470.ab3@5415>   JSR (A1)                                                 ;tokenise line.....
00023338 <AmiBlitz3_noFPU_r470.ab3@5417>   MOVEA.l (A7)+,A5
00023342 <AmiBlitz3_noFPU_r470.ab3@5418>   MOVE.l directbuffer,destpointer
00023348 <AmiBlitz3_noFPU_r470.ab3@5419>   TST.b exdebug
0002334C <AmiBlitz3_noFPU_r470.ab3@5420>   BEQ 'noexdebug
0002334E <AmiBlitz3_noFPU_r470.ab3@5421>   MOVE.l a5,a0
00023354 <AmiBlitz3_noFPU_r470.ab3@5422>   MOVE.l #200,d0
0002335A <AmiBlitz3_noFPU_r470.ab3@5425>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
0002335E <AmiBlitz3_noFPU_r470.ab3@5426>   DBF d0,'l1
00023364 <AmiBlitz3_noFPU_r470.ab3@5431>   MOVE.l destpointer,a0
00023368 <AmiBlitz3_noFPU_r470.ab3@5432>   MOVE.w #$207c,(a0)+
0002336A <AmiBlitz3_noFPU_r470.ab3@5433>   MOVE.l a5,d0
00023370 <AmiBlitz3_noFPU_r470.ab3@5434>   ADD.l #$206,d0                                           ;constant from debuglib
00023372 <AmiBlitz3_noFPU_r470.ab3@5435>   MOVE.l d0,(a0)+
00023378 <AmiBlitz3_noFPU_r470.ab3@5436>   MOVE.l a0,destpointer
0002337A <AmiBlitz3_noFPU_r470.ab3@5437>   MOVE.l a5,a0
0002337E <AmiBlitz3_noFPU_r470.ab3@5438>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023384 <AmiBlitz3_noFPU_r470.ab3@5439>   MOVE.l #"$520",(a0)+
00023388 <AmiBlitz3_noFPU_r470.ab3@5440>   MOVE.w #"4:",(a0)+
0002338E <AmiBlitz3_noFPU_r470.ab3@5443>   CLR.w dontwrite
00023396 <AmiBlitz3_noFPU_r470.ab3@5444>   MOVE.w #$FFFF,lasta6
0002339A <AmiBlitz3_noFPU_r470.ab3@5445>   BSR.w compile_line                                        ;.....compile it
000233A0 <AmiBlitz3_noFPU_r470.ab3@5446>   TST.b exdebug
000233A4 <AmiBlitz3_noFPU_r470.ab3@5447>   BEQ 'noexdebug2
000233AA <AmiBlitz3_noFPU_r470.ab3@5448>   JSR JL_0_6C76
000233B0 <AmiBlitz3_noFPU_r470.ab3@5451>   CLR.w proceduremode
000233B4 <AmiBlitz3_noFPU_r470.ab3@5452>   BSR.w errchx
000233B8 <AmiBlitz3_noFPU_r470.ab3@5453>   MOVE.w #$4EF9,D1
000233BC <AmiBlitz3_noFPU_r470.ab3@5454>   BSR.w writeword                                          ;JMP
000233C0 <AmiBlitz3_noFPU_r470.ab3@5455>   MOVE.l ret15add(PC),D1
000233C4 <AmiBlitz3_noFPU_r470.ab3@5456>   BSR.w writelong                                          ;jmp to done
000233CA <AmiBlitz3_noFPU_r470.ab3@5457>   MOVE.w dontwrite,D0
000233CE <AmiBlitz3_noFPU_r470.ab3@5458>    BNE.w nodirmem
000233D6 <AmiBlitz3_noFPU_r470.ab3@5459>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000233DC <AmiBlitz3_noFPU_r470.ab3@5462>   CLR.w dirmode
000233E2 <AmiBlitz3_noFPU_r470.ab3@5463>   MOVE.w ret15cc(PC),$3C(A7)
000233EC <AmiBlitz3_noFPU_r470.ab3@5464>   MOVE.l trap15temp,destbufferend
000233F6 <AmiBlitz3_noFPU_r470.ab3@5465>   MOVE.l trap15temp2,destbufferstart
00023400 <AmiBlitz3_noFPU_r470.ab3@5466>   MOVE.l tempdata1start,data1start
0002340A <AmiBlitz3_noFPU_r470.ab3@5467>   MOVE.l templibend,libend
0002340E <AmiBlitz3_noFPU_r470.ab3@5468>   MOVEM.l (A7)+,D0-D7/A0-A6
00023412 <AmiBlitz3_noFPU_r470.ab3@5469>   BSR.w Aclearcache                                        ;selden used
00023414 <AmiBlitz3_noFPU_r470.ab3@5470> RTR
00023418 <AmiBlitz3_noFPU_r470.ab3@5473>   MOVEA.l ret15add(PC),A0
0002341A <AmiBlitz3_noFPU_r470.ab3@5474>   SUBQ.w #2,A0
0002341C <AmiBlitz3_noFPU_r470.ab3@5475>   MOVE.l D0,-(A0)
00023420 <AmiBlitz3_noFPU_r470.ab3@5476> BRA.w direxit
00023424 <AmiBlitz3_noFPU_r470.ab3@5480>   MOVE.w $6(A3),D1
00023428 <AmiBlitz3_noFPU_r470.ab3@5481>   BSR.w uselib                                             ;get lib for base address
0002342C <AmiBlitz3_noFPU_r470.ab3@5482>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
0002342E <AmiBlitz3_noFPU_r470.ab3@5483>   ADDQ.w #8,A3
00023430 <AmiBlitz3_noFPU_r470.ab3@5484>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023432 <AmiBlitz3_noFPU_r470.ab3@5485>   MOVE.l A3,-(A7)
00023434 <AmiBlitz3_noFPU_r470.ab3@5489>   MOVEQ.l #$00,D3
0002343A <AmiBlitz3_noFPU_r470.ab3@5490>   JSR checka4a5
0002343C <AmiBlitz3_noFPU_r470.ab3@5492>   MOVE.b (A3)+,D1
00023440 <AmiBlitz3_noFPU_r470.ab3@5493>    BMI.w stamigalib__done
00023442 <AmiBlitz3_noFPU_r470.ab3@5494>   MOVEQ.l #$03,D2
00023444 <AmiBlitz3_noFPU_r470.ab3@5495>   ADDQ.w #1,D3
00023448 <AmiBlitz3_noFPU_r470.ab3@5496>   MOVEM.l D3/A3,-(A7)
0002344E <AmiBlitz3_noFPU_r470.ab3@5497>   MOVE.b funcparloop,-(a7)
00023456 <AmiBlitz3_noFPU_r470.ab3@5498>   MOVE.b #0,funcparloop
0002345C <AmiBlitz3_noFPU_r470.ab3@5499>   MOVE.l leftsidetype,-(a7)
00023462 <AmiBlitz3_noFPU_r470.ab3@5500>   MOVE.l rightsidetype,-(a7)
00023468 <AmiBlitz3_noFPU_r470.ab3@5501>   CLR.l leftsidetype
0002346E <AmiBlitz3_noFPU_r470.ab3@5502>   CLR.l rightsidetype
00023474 <AmiBlitz3_noFPU_r470.ab3@5503>   MOVE.b blitzparloop,-(a7)
0002347C <AmiBlitz3_noFPU_r470.ab3@5504>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023482 <AmiBlitz3_noFPU_r470.ab3@5505>   JSR peval
00023488 <AmiBlitz3_noFPU_r470.ab3@5506>   MOVE.b (a7)+,blitzparloop
0002348E <AmiBlitz3_noFPU_r470.ab3@5507>   MOVE.l (a7)+,rightsidetype
00023494 <AmiBlitz3_noFPU_r470.ab3@5508>   MOVE.l (a7)+,leftsidetype
0002349A <AmiBlitz3_noFPU_r470.ab3@5509>   MOVE.b (a7)+,funcparloop
0002349E <AmiBlitz3_noFPU_r470.ab3@5510>   MOVEM.l (A7)+,D3/A3
000234A2 <AmiBlitz3_noFPU_r470.ab3@5511>   CMP.w #$2C,D0
000234A6 <AmiBlitz3_noFPU_r470.ab3@5512>    BEQ.w stamigalib__loop
000234A8 <AmiBlitz3_noFPU_r470.ab3@5513>   TST.b (A3)
000234AC <AmiBlitz3_noFPU_r470.ab3@5514>    BPL.w syntaxerr
000234AE <AmiBlitz3_noFPU_r470.ab3@5517>   MOVEA.l (A7)+,A3
000234B0 <AmiBlitz3_noFPU_r470.ab3@5518>   SUBQ.w #1,D3
000234B4 <AmiBlitz3_noFPU_r470.ab3@5519>    BPL.w stamigalib__toend
000234B8 <AmiBlitz3_noFPU_r470.ab3@5520>    BSR.w get1bytemain                                      ;no pars - get :
000234BC <AmiBlitz3_noFPU_r470.ab3@5521> BRA.w stamigalib__nopars
000234BE <AmiBlitz3_noFPU_r470.ab3@5524>   TST.b (A3)+                                              ;go to end of params
000234C2 <AmiBlitz3_noFPU_r470.ab3@5525>    BPL.w stamigalib__toend
000234C4 <AmiBlitz3_noFPU_r470.ab3@5526>   SUBQ.w #1,A3
000234C6 <AmiBlitz3_noFPU_r470.ab3@5529>    MOVEQ.l #$00,D1
000234C8 <AmiBlitz3_noFPU_r470.ab3@5530>    MOVE.b -(A3),D1
000234CC <AmiBlitz3_noFPU_r470.ab3@5531>    BTST #$4,D1
000234D0 <AmiBlitz3_noFPU_r470.ab3@5532>     BNE.w stamigalib__addreg
000234D2 <AmiBlitz3_noFPU_r470.ab3@5533>    LSL.w #8,D1
000234D4 <AmiBlitz3_noFPU_r470.ab3@5534>    LSL.w #1,D1
000234D8 <AmiBlitz3_noFPU_r470.ab3@5535>    ORI.w #$201F,D1
000234DC <AmiBlitz3_noFPU_r470.ab3@5536>  BRA.w stamigalib__gotit
000234E0 <AmiBlitz3_noFPU_r470.ab3@5539>    ANDI.w #$7,D1
000234E2 <AmiBlitz3_noFPU_r470.ab3@5540>    LSL.w #8,D1
000234E4 <AmiBlitz3_noFPU_r470.ab3@5541>    LSL.w #1,D1
000234E8 <AmiBlitz3_noFPU_r470.ab3@5542>    ORI.w #$205F,D1
000234EC <AmiBlitz3_noFPU_r470.ab3@5545>     BSR.w writeword
000234F0 <AmiBlitz3_noFPU_r470.ab3@5546>   DBF D3,stamigalib__loop2
000234F6 <AmiBlitz3_noFPU_r470.ab3@5549>   MOVE.w (A7)+,libjsr+2
000234FC <AmiBlitz3_noFPU_r470.ab3@5550>   MOVE.w (A7)+,libbase+2
00023502 <AmiBlitz3_noFPU_r470.ab3@5551>   MOVE.l libbase,D1
00023506 <AmiBlitz3_noFPU_r470.ab3@5552>    BSR.w writelong
0002350C <AmiBlitz3_noFPU_r470.ab3@5553>   MOVE.l libjsr,D1
00023512 <AmiBlitz3_noFPU_r470.ab3@5554>   JSR writelong
00023518 <AmiBlitz3_noFPU_r470.ab3@5555>   JSR restorea4a5
0002351A <AmiBlitz3_noFPU_r470.ab3@5556>   RTS
00023520 <AmiBlitz3_noFPU_r470.ab3@5559>   MOVE.l data1,D4
00023526 <AmiBlitz3_noFPU_r470.ab3@5560>   SUB.l data1start,D4
0002352C <AmiBlitz3_noFPU_r470.ab3@5561>   ADD.l #10000,d4
00023532 <AmiBlitz3_noFPU_r470.ab3@5562>   MOVE.l libend,D3
00023538 <AmiBlitz3_noFPU_r470.ab3@5563>   SUB.l destbufferend,D3
0002353E <AmiBlitz3_noFPU_r470.ab3@5564>   ADD.l #40000,d3
00023544 <AmiBlitz3_noFPU_r470.ab3@5565>   MOVE.l bigpc,D2
0002354A <AmiBlitz3_noFPU_r470.ab3@5566>   SUB.l destbufferstart,D2
00023550 <AmiBlitz3_noFPU_r470.ab3@5567>   ADD.l #20000,d2
00023556 <AmiBlitz3_noFPU_r470.ab3@5568>   MOVE.l databuffer,D5
0002355C <AmiBlitz3_noFPU_r470.ab3@5569>   ADD.l #10000,D5
00023560 <AmiBlitz3_noFPU_r470.ab3@5570> BRA newallox
00023566 <AmiBlitz3_noFPU_r470.ab3@5574>   MOVE.l objectbuffer,D2
00023568 <AmiBlitz3_noFPU_r470.ab3@5575>   LSR.l #1,D2
0002356E <AmiBlitz3_noFPU_r470.ab3@5576>   ADD.l objectbuffer,D2
00023574 <AmiBlitz3_noFPU_r470.ab3@5577>   MOVE.l libsbuffer,D3
00023576 <AmiBlitz3_noFPU_r470.ab3@5578>   LSR.l #1,D3
0002357C <AmiBlitz3_noFPU_r470.ab3@5579>   ADD.l libsbuffer,D3
00023582 <AmiBlitz3_noFPU_r470.ab3@5580>   MOVE.l systembuffer,D4
00023584 <AmiBlitz3_noFPU_r470.ab3@5581>   LSR.l #1,D4
0002358A <AmiBlitz3_noFPU_r470.ab3@5582>   ADD.l systembuffer,D4
00023590 <AmiBlitz3_noFPU_r470.ab3@5583>   MOVE.l databuffer,D5
00023592 <AmiBlitz3_noFPU_r470.ab3@5584>   LSR.l #1,D5
00023598 <AmiBlitz3_noFPU_r470.ab3@5585>   ADD.l databuffer,D5
0002359C <AmiBlitz3_noFPU_r470.ab3@5586> BRA.w newallox
000235A2 <AmiBlitz3_noFPU_r470.ab3@5590>   MOVE.l bigpc,D2
000235A8 <AmiBlitz3_noFPU_r470.ab3@5591>   SUB.l destbufferstart,D2                                     ;size of object buffer
000235AE <AmiBlitz3_noFPU_r470.ab3@5592>   SUB.l savefuncspace,d2
000235B4 <AmiBlitz3_noFPU_r470.ab3@5594>   TST.w debugversion
000235B8 <AmiBlitz3_noFPU_r470.ab3@5595>    BNE.b alloxadj__skip
000235BE <AmiBlitz3_noFPU_r470.ab3@5596>   ADDI.l #$800,D2
000235C4 <AmiBlitz3_noFPU_r470.ab3@5599>   MOVE.l libend,D3
000235CA <AmiBlitz3_noFPU_r470.ab3@5600>   SUB.l destbufferend,D3
000235D0 <AmiBlitz3_noFPU_r470.ab3@5602>   MOVE.l data1,D4
000235D6 <AmiBlitz3_noFPU_r470.ab3@5603>   SUB.l data1start,D4
000235DC <AmiBlitz3_noFPU_r470.ab3@5605>   MOVE.l data2,D5
000235E2 <AmiBlitz3_noFPU_r470.ab3@5606>   SUB.l data2at,D5
000235E8 <AmiBlitz3_noFPU_r470.ab3@5608>   CLR.l morememadd
000235EC <AmiBlitz3_noFPU_r470.ab3@5611>   BSR.w makeallox
000235F0 <AmiBlitz3_noFPU_r470.ab3@5612>   BNE.w newallox__done
000235F4 <AmiBlitz3_noFPU_r470.ab3@5613> BRA.w init_buffers
000235F6 <AmiBlitz3_noFPU_r470.ab3@5616> RTS
000235FC <AmiBlitz3_noFPU_r470.ab3@5620>   MOVEA.l _execbase,A6
00023602 <AmiBlitz3_noFPU_r470.ab3@5621>   MOVE.l objlen,D0
00023606 <AmiBlitz3_noFPU_r470.ab3@5622>   BEQ.w freeallox__skip
0002360C <AmiBlitz3_noFPU_r470.ab3@5623>   CLR.l objlen
00023612 <AmiBlitz3_noFPU_r470.ab3@5624>   MOVEA.l destbufferstart,A1
00023618 <AmiBlitz3_noFPU_r470.ab3@5625>   MOVE.l mempool,a0
0002361C <AmiBlitz3_noFPU_r470.ab3@5626> JMP _FreeVec(A6)
0002361E <AmiBlitz3_noFPU_r470.ab3@5629> RTS
00023624 <AmiBlitz3_noFPU_r470.ab3@5633>   MOVE.l objectbuffer,D2
0002362A <AmiBlitz3_noFPU_r470.ab3@5634>   MOVE.l libsbuffer,D3
00023630 <AmiBlitz3_noFPU_r470.ab3@5635>   MOVE.l systembuffer,D4
00023636 <AmiBlitz3_noFPU_r470.ab3@5636>   MOVE.l databuffer,D5
0002363E <AmiBlitz3_noFPU_r470.ab3@5639>   MOVE.w #$FFFF,anyerrs
00023642 <AmiBlitz3_noFPU_r470.ab3@5640>   BSR.w freeallox
00023644 <AmiBlitz3_noFPU_r470.ab3@5644>   ADDQ.l #1,D2
00023648 <AmiBlitz3_noFPU_r470.ab3@5645>   BCLR #$0,D2
0002364A <AmiBlitz3_noFPU_r470.ab3@5646>   ADDQ.l #1,D3
0002364E <AmiBlitz3_noFPU_r470.ab3@5647>   BCLR #$0,D3
00023650 <AmiBlitz3_noFPU_r470.ab3@5648>   ADDQ.l #1,D4
00023654 <AmiBlitz3_noFPU_r470.ab3@5649>   BCLR #$0,D4
00023656 <AmiBlitz3_noFPU_r470.ab3@5650>   TST.l d5
0002365A <AmiBlitz3_noFPU_r470.ab3@5651>   BNE 'l1
0002365C <AmiBlitz3_noFPU_r470.ab3@5654>   ADDQ.l #1,D5
00023660 <AmiBlitz3_noFPU_r470.ab3@5655>   BCLR #$0,D5
00023662 <AmiBlitz3_noFPU_r470.ab3@5656>   MOVE.l D2,D0
00023664 <AmiBlitz3_noFPU_r470.ab3@5657>   ADD.l D3,D0
00023666 <AmiBlitz3_noFPU_r470.ab3@5658>   ADD.l D4,D0
00023668 <AmiBlitz3_noFPU_r470.ab3@5659>   ADD.l D5,D0
0002366E <AmiBlitz3_noFPU_r470.ab3@5660>   ADD.l #moremem,d0
00023670 <AmiBlitz3_noFPU_r470.ab3@5661>   MOVE.l D0,D6
00023676 <AmiBlitz3_noFPU_r470.ab3@5662>   MOVE.l #MemfPublic_MemfClear,D1
0002367C <AmiBlitz3_noFPU_r470.ab3@5663>   MOVE.l mempool,a0
00023682 <AmiBlitz3_noFPU_r470.ab3@5664>   MOVEA.l _execbase,A6
00023686 <AmiBlitz3_noFPU_r470.ab3@5665>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023688 <AmiBlitz3_noFPU_r470.ab3@5667>   TST.l D0
0002368C <AmiBlitz3_noFPU_r470.ab3@5668>   BEQ.w exit_initbuffers
00023692 <AmiBlitz3_noFPU_r470.ab3@5669>   MOVE.l D6,objlen
00023698 <AmiBlitz3_noFPU_r470.ab3@5670>   MOVE.l D2,objectbuffer
0002369E <AmiBlitz3_noFPU_r470.ab3@5671>   MOVE.l D3,libsbuffer
000236A4 <AmiBlitz3_noFPU_r470.ab3@5672>   MOVE.l D4,systembuffer
000236AA <AmiBlitz3_noFPU_r470.ab3@5673>   MOVE.l D5,databuffer
000236B0 <AmiBlitz3_noFPU_r470.ab3@5674>   MOVE.l D0,destbufferstart
000236E4 <AmiBlitz3_noFPU_r470.ab3@5677>   !ComData_SetL{comPtr_DestBufferStart,D0}
000236E6 <AmiBlitz3_noFPU_r470.ab3@5678>   ADD.l D2,D0
000236EC <AmiBlitz3_noFPU_r470.ab3@5679>   MOVE.l D0,destbufferend
000236EE <AmiBlitz3_noFPU_r470.ab3@5680>   ADD.l D3,D0
000236F4 <AmiBlitz3_noFPU_r470.ab3@5681>   MOVE.l D0,data1start
000236F6 <AmiBlitz3_noFPU_r470.ab3@5682>   ADD.l D4,D0
000236FC <AmiBlitz3_noFPU_r470.ab3@5683>   MOVE.l D0,data2at
000236FE <AmiBlitz3_noFPU_r470.ab3@5684>   ADD.l D5,D0
00023704 <AmiBlitz3_noFPU_r470.ab3@5685>   MOVE.l D0,allat
00023706 <AmiBlitz3_noFPU_r470.ab3@5688> RTS
0002370A <AmiBlitz3_noFPU_r470.ab3@5692>   Dc.b $00,$00,$00,$01                                     ;         1
0002370E <AmiBlitz3_noFPU_r470.ab3@5693>   Dc.b $00,$00,$00,$0A                                     ;        10
00023712 <AmiBlitz3_noFPU_r470.ab3@5694>   Dc.b $00,$00,$00,$64                                     ;       100
00023716 <AmiBlitz3_noFPU_r470.ab3@5695>   Dc.b $00,$00,$03,$E8                                     ;      1000
0002371A <AmiBlitz3_noFPU_r470.ab3@5696>   Dc.b $00,$00,$27,$10                                     ;     10000
0002371E <AmiBlitz3_noFPU_r470.ab3@5697>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023722 <AmiBlitz3_noFPU_r470.ab3@5698>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023726 <AmiBlitz3_noFPU_r470.ab3@5699>   Dc.b $00,$98,$96,$80                                     ;  10000000
0002372A <AmiBlitz3_noFPU_r470.ab3@5700>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
0002372E <AmiBlitz3_noFPU_r470.ab3@5701>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023730 <AmiBlitz3_noFPU_r470.ab3@5705>   MOVEQ.l #$00,D1                                          ;no zero printed
00023732 <AmiBlitz3_noFPU_r470.ab3@5706>   MOVEQ.l #$24,D3                                          ; "$"
00023734 <AmiBlitz3_noFPU_r470.ab3@5709>   MOVEQ.l #$30,D4                                          ; "0"
00023738 <AmiBlitz3_noFPU_r470.ab3@5712>     CMP.l divisors(PC,D3.W),D2
0002373C <AmiBlitz3_noFPU_r470.ab3@5713>     BCS.w makelong__skip
00023740 <AmiBlitz3_noFPU_r470.ab3@5714>     SUB.l divisors(PC,D3.W),D2
00023742 <AmiBlitz3_noFPU_r470.ab3@5715>     ADDQ.w #1,D4
00023746 <AmiBlitz3_noFPU_r470.ab3@5716> BRA.w makelong__loop2
0002374A <AmiBlitz3_noFPU_r470.ab3@5719>   CMP.b #"0",D4
0002374E <AmiBlitz3_noFPU_r470.ab3@5720>   BNE.w makelong__doit
00023750 <AmiBlitz3_noFPU_r470.ab3@5721>   TST.w D1
00023754 <AmiBlitz3_noFPU_r470.ab3@5722>   BEQ.w makelong__skip2
00023756 <AmiBlitz3_noFPU_r470.ab3@5725>   MOVE.b D4,(A0)+
00023758 <AmiBlitz3_noFPU_r470.ab3@5726>   MOVEQ.l #$01,D1
0002375A <AmiBlitz3_noFPU_r470.ab3@5729>   SUBQ.w #4,D3
0002375E <AmiBlitz3_noFPU_r470.ab3@5730>   BPL.w makelong__loop
00023760 <AmiBlitz3_noFPU_r470.ab3@5731>   TST.w D1
00023764 <AmiBlitz3_noFPU_r470.ab3@5732>   BNE.w makelong__skip3
00023768 <AmiBlitz3_noFPU_r470.ab3@5733>   MOVE.b #"0",(A0)+
0002376A <AmiBlitz3_noFPU_r470.ab3@5736>   CLR.b (A0)
0002376C <AmiBlitz3_noFPU_r470.ab3@5737> RTS
0002378C <AmiBlitz3_noFPU_r470.ab3@5740> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
0002384C <AmiBlitz3_noFPU_r470.ab3@5741> str_residentpath:       Ds.l 48                                                ;respath org source
0002390C <AmiBlitz3_noFPU_r470.ab3@5742> str_residentname:       Ds.l 48                                                ;resname org source
00023912 <AmiBlitz3_noFPU_r470.ab3@5746>   MOVE.l macrobase,D0
00023916 <AmiBlitz3_noFPU_r470.ab3@5747>    BNE.w create_residentfile
0002391C <AmiBlitz3_noFPU_r470.ab3@5748>   MOVE.l newtype_string,D0
00023920 <AmiBlitz3_noFPU_r470.ab3@5749>    BNE.w create_residentfile
00023926 <AmiBlitz3_noFPU_r470.ab3@5750>   MOVEA.l labelbase,A2
0002392A <AmiBlitz3_noFPU_r470.ab3@5753>     CMPA.w #$0,A2
0002392E <AmiBlitz3_noFPU_r470.ab3@5754>      BEQ.w menu_createresidentfile__err
00023936 <AmiBlitz3_noFPU_r470.ab3@5755>     CMPI.l #$1,$4(A2)
0002393A <AmiBlitz3_noFPU_r470.ab3@5756>      BEQ.w create_residentfile
0002393C <AmiBlitz3_noFPU_r470.ab3@5757>     MOVEA.l (A2),A2
00023940 <AmiBlitz3_noFPU_r470.ab3@5758> BRA.w menu_createresidentfile__loop
0002396A <AmiBlitz3_noFPU_r470.ab3@5761>   !basic
000239CC <AmiBlitz3_noFPU_r470.ab3@5762> 
000239EA <AmiBlitz3_noFPU_r470.ab3@5763>   !asm
000239EC <AmiBlitz3_noFPU_r470.ab3@5764> RTS
00023A2A <AmiBlitz3_noFPU_r470.ab3@5770>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023A30 <AmiBlitz3_noFPU_r470.ab3@5771>   LEA str_residentrequester,A2
00023A36 <AmiBlitz3_noFPU_r470.ab3@5772>   LEA str_residentpath,A0
00023A3C <AmiBlitz3_noFPU_r470.ab3@5773>   LEA str_residentname,A1
00023A66 <AmiBlitz3_noFPU_r470.ab3@5774>   !basic
00023A9E <AmiBlitz3_noFPU_r470.ab3@5775>     Poke$ ?str_residentpath,my_residentsdir$
00023ACA <AmiBlitz3_noFPU_r470.ab3@5776>     Poke$ ?str_residentname,".res"
00023AE8 <AmiBlitz3_noFPU_r470.ab3@5777>   !asm
00023AEA <AmiBlitz3_noFPU_r470.ab3@5779>   JSR (A3)                                                 ;open ped filerequest
00023AEE <AmiBlitz3_noFPU_r470.ab3@5781>   BEQ.w menu_createresidentfile__err
00023AF0 <AmiBlitz3_noFPU_r470.ab3@5784>   MOVE.l D0,D1
00023AF6 <AmiBlitz3_noFPU_r470.ab3@5785>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00023AFA <AmiBlitz3_noFPU_r470.ab3@5786>   MOVEA.l _dosbase(PC),A6
00023AFE <AmiBlitz3_noFPU_r470.ab3@5787>   JSR _Open(A6)
00023B00 <AmiBlitz3_noFPU_r470.ab3@5788>   MOVE.l D0,D7                                             ;handle
00023B04 <AmiBlitz3_noFPU_r470.ab3@5789>   BEQ.w menu_createresidentfile__err
00023B08 <AmiBlitz3_noFPU_r470.ab3@5790>   MOVEM.l d2-d7/a0-a6,-(a7)
00023B0E <AmiBlitz3_noFPU_r470.ab3@5791>   LEA devo,a0
00023B14 <AmiBlitz3_noFPU_r470.ab3@5792>   LEA ptr_parameterstore,a1
00023B16 <AmiBlitz3_noFPU_r470.ab3@5795>     MOVE.b (a0)+,(a1)+
00023B1A <AmiBlitz3_noFPU_r470.ab3@5796>   BNE 'l1
00023B1C <AmiBlitz3_noFPU_r470.ab3@5797>   MOVEQ #13,d2
00023B22 <AmiBlitz3_noFPU_r470.ab3@5798>   JSR findlabel2
00023B26 <AmiBlitz3_noFPU_r470.ab3@5799>   BNE 'd
00023B2A <AmiBlitz3_noFPU_r470.ab3@5800>   TST.l 8(a2)
00023B2E <AmiBlitz3_noFPU_r470.ab3@5801>   BEQ 'd2
00023B58 <AmiBlitz3_noFPU_r470.ab3@5802>   !basic
00023BBA <AmiBlitz3_noFPU_r470.ab3@5803>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00023BD8 <AmiBlitz3_noFPU_r470.ab3@5804>   !asm
00023BDC <AmiBlitz3_noFPU_r470.ab3@5805>   MOVEM.l (a7)+,d2-d7/a0-a6
00023BE0 <AmiBlitz3_noFPU_r470.ab3@5806>   MOVEA.l _dosbase(PC),A6
00023BE2 <AmiBlitz3_noFPU_r470.ab3@5807>   MOVE.l d7,d1
00023BE6 <AmiBlitz3_noFPU_r470.ab3@5808>   JSR _Close(a6)
00023BEA <AmiBlitz3_noFPU_r470.ab3@5809> BRA menu_createresidentfile__err
00023BEE <AmiBlitz3_noFPU_r470.ab3@5813>   MOVEM.l (a7)+,d2-d7/a0-a6
00023BF2 <AmiBlitz3_noFPU_r470.ab3@5814>   BSR.w call_setpointerbusy
00023BF6 <AmiBlitz3_noFPU_r470.ab3@5816>   BSR.w AJL_0_7962
00023BF8 <AmiBlitz3_noFPU_r470.ab3@5817>   MOVE.l D7,D1
00023BFE <AmiBlitz3_noFPU_r470.ab3@5818>   MOVE.l #tsthead,D2                                       ;header
00023C00 <AmiBlitz3_noFPU_r470.ab3@5819>   MOVEQ.l #$20,D3
00023C04 <AmiBlitz3_noFPU_r470.ab3@5820>   MOVEA.l _dosbase(PC),A6
00023C08 <AmiBlitz3_noFPU_r470.ab3@5821>   JSR _Write(A6)
00023C0A <AmiBlitz3_noFPU_r470.ab3@5822>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00023C0E <AmiBlitz3_noFPU_r470.ab3@5823>   BSR.w restypes
00023C12 <AmiBlitz3_noFPU_r470.ab3@5824>   BSR.w resmacs
00023C16 <AmiBlitz3_noFPU_r470.ab3@5825>   BSR.w resconsts
00023C18 <AmiBlitz3_noFPU_r470.ab3@5826>   MOVE.l D6,D3
00023C1A <AmiBlitz3_noFPU_r470.ab3@5827>   ADDQ.l #3,D3
00023C20 <AmiBlitz3_noFPU_r470.ab3@5828>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00023C22 <AmiBlitz3_noFPU_r470.ab3@5829>   MOVE.l D3,-(A7)
00023C24 <AmiBlitz3_noFPU_r470.ab3@5830>   SUB.l D6,D3
00023C28 <AmiBlitz3_noFPU_r470.ab3@5831>   BEQ.w menu_createresidentfile__noalign
00023C2E <AmiBlitz3_noFPU_r470.ab3@5832>   MOVE.l #writelist,D2
00023C30 <AmiBlitz3_noFPU_r470.ab3@5833>   MOVE.l D7,D1
00023C36 <AmiBlitz3_noFPU_r470.ab3@5834>   MOVEA.l _dosbase,A6
00023C3A <AmiBlitz3_noFPU_r470.ab3@5835>   JSR _Write(A6)
00023C44 <AmiBlitz3_noFPU_r470.ab3@5838>    MOVE.l hunkoffsetcounter,tstsize3
00023C48 <AmiBlitz3_noFPU_r470.ab3@5839>    BEQ.w menu_createresidentfile__skip2a
00023C4A <AmiBlitz3_noFPU_r470.ab3@5840>   MOVE.l D7,D1
00023C50 <AmiBlitz3_noFPU_r470.ab3@5841>   MOVE.l #tstend,D2
00023C52 <AmiBlitz3_noFPU_r470.ab3@5842>   MOVEQ.l #$0C,D3
00023C58 <AmiBlitz3_noFPU_r470.ab3@5843>   MOVEA.l _dosbase,A6
00023C5C <AmiBlitz3_noFPU_r470.ab3@5844>    JSR _Write(A6)
00023C62 <AmiBlitz3_noFPU_r470.ab3@5848>   MOVEA.l hunkoffsetbase,A2
00023C66 <AmiBlitz3_noFPU_r470.ab3@5851>   CMPA.w #$0,A2
00023C6A <AmiBlitz3_noFPU_r470.ab3@5852>    BEQ.w menu_createresidentfile__skip2
00023C6E <AmiBlitz3_noFPU_r470.ab3@5853>   LEA $4(A2),A1
00023C70 <AmiBlitz3_noFPU_r470.ab3@5854>   MOVE.l D7,D1
00023C72 <AmiBlitz3_noFPU_r470.ab3@5855>   MOVE.l A1,D2
00023C74 <AmiBlitz3_noFPU_r470.ab3@5856>   MOVEQ.l #$04,D3
00023C7A <AmiBlitz3_noFPU_r470.ab3@5857>   MOVEA.l _dosbase,A6
00023C7E <AmiBlitz3_noFPU_r470.ab3@5858>    JSR _Write(A6)
00023C80 <AmiBlitz3_noFPU_r470.ab3@5859>   MOVEA.l (A2),A2
00023C84 <AmiBlitz3_noFPU_r470.ab3@5860> BRA.w menu_createresidentfile__oloop
00023C86 <AmiBlitz3_noFPU_r470.ab3@5863>   MOVE.l D7,D1
00023C8C <AmiBlitz3_noFPU_r470.ab3@5864>   MOVE.l #zero,D2
00023C8E <AmiBlitz3_noFPU_r470.ab3@5865>   MOVEQ.l #$04,D3
00023C94 <AmiBlitz3_noFPU_r470.ab3@5866>   MOVEA.l _dosbase,A6
00023C98 <AmiBlitz3_noFPU_r470.ab3@5867>   JSR _Write(A6)
00023C9A <AmiBlitz3_noFPU_r470.ab3@5870>   MOVE.l D7,D1
00023CA0 <AmiBlitz3_noFPU_r470.ab3@5871>   MOVE.l #tstdone,D2
00023CA2 <AmiBlitz3_noFPU_r470.ab3@5872>   MOVEQ.l #$04,D3
00023CA8 <AmiBlitz3_noFPU_r470.ab3@5873>   MOVEA.l _dosbase,A6
00023CAC <AmiBlitz3_noFPU_r470.ab3@5874>    JSR _Write(A6)
00023CAE <AmiBlitz3_noFPU_r470.ab3@5875>   MOVE.l (A7)+,D0
00023CB0 <AmiBlitz3_noFPU_r470.ab3@5876>   LSR.l #2,D0
00023CB6 <AmiBlitz3_noFPU_r470.ab3@5877>   MOVE.l D0,temp1
00023CB8 <AmiBlitz3_noFPU_r470.ab3@5878>   MOVE.l D7,D1
00023CBA <AmiBlitz3_noFPU_r470.ab3@5879>   MOVEQ.l #$14,D2
00023CBC <AmiBlitz3_noFPU_r470.ab3@5880>   MOVEQ.l #-$01,D3
00023CC0 <AmiBlitz3_noFPU_r470.ab3@5881>   JSR _Seek(A6)
00023CC2 <AmiBlitz3_noFPU_r470.ab3@5882>   MOVE.l D7,D1
00023CC8 <AmiBlitz3_noFPU_r470.ab3@5883>   MOVE.l #temp1,D2
00023CCA <AmiBlitz3_noFPU_r470.ab3@5884>   MOVEQ.l #$04,D3
00023CCE <AmiBlitz3_noFPU_r470.ab3@5885>    JSR _Write(A6)
00023CD0 <AmiBlitz3_noFPU_r470.ab3@5886>   MOVE.l D7,D1
00023CD2 <AmiBlitz3_noFPU_r470.ab3@5887>   MOVEQ.l #$1C,D2
00023CD4 <AmiBlitz3_noFPU_r470.ab3@5888>   MOVEQ.l #-$01,D3
00023CD8 <AmiBlitz3_noFPU_r470.ab3@5889>    JSR _Seek(A6)
00023CDA <AmiBlitz3_noFPU_r470.ab3@5890>   MOVE.l D7,D1
00023CE0 <AmiBlitz3_noFPU_r470.ab3@5891>   MOVE.l #temp1,D2
00023CE2 <AmiBlitz3_noFPU_r470.ab3@5892>   MOVEQ.l #$04,D3
00023CE6 <AmiBlitz3_noFPU_r470.ab3@5893>    JSR _Write(A6)
00023CE8 <AmiBlitz3_noFPU_r470.ab3@5894>   MOVE.l D7,D1
00023CEC <AmiBlitz3_noFPU_r470.ab3@5895>    JSR _Close(A6)
00023CF0 <AmiBlitz3_noFPU_r470.ab3@5896> BRA.w call_setpointernormal
00023CF2 <AmiBlitz3_noFPU_r470.ab3@5900>   ADDQ.w #5,D1
00023CF4 <AmiBlitz3_noFPU_r470.ab3@5901>   ADDQ.b #8,D0
00023CF8 <AmiBlitz3_noFPU_r470.ab3@5904>     CMPA.w #$0,A2
00023CFC <AmiBlitz3_noFPU_r470.ab3@5905>     BEQ.w writelist__done
00023D00 <AmiBlitz3_noFPU_r470.ab3@5906>      BSR.w writeitem
00023D02 <AmiBlitz3_noFPU_r470.ab3@5907>     MOVEA.l (A2),A2
00023D06 <AmiBlitz3_noFPU_r470.ab3@5908> BRA.w writelist__loop
00023D08 <AmiBlitz3_noFPU_r470.ab3@5911> RTS
00023D0A <AmiBlitz3_noFPU_r470.ab3@5914>   MOVEQ.l #$00,D3
00023D0E <AmiBlitz3_noFPU_r470.ab3@5915>   MOVE.b $0(A2,D5.W),D3
00023D10 <AmiBlitz3_noFPU_r470.ab3@5916>   ADDQ.w #1,D3
00023D14 <AmiBlitz3_noFPU_r470.ab3@5917>   BCLR #$0,D3                                              ;word align
00023D16 <AmiBlitz3_noFPU_r470.ab3@5918>   MOVE.l (A2),-(A7)
00023D1A <AmiBlitz3_noFPU_r470.ab3@5919>    BEQ.w writeitem__skip
00023D1E <AmiBlitz3_noFPU_r470.ab3@5920>    BSR.w resoff
00023D20 <AmiBlitz3_noFPU_r470.ab3@5921>   ADD.l D3,D6
00023D22 <AmiBlitz3_noFPU_r470.ab3@5922>   MOVE.l D6,(A2)
00023D24 <AmiBlitz3_noFPU_r470.ab3@5923>   SUB.l D3,D6
00023D26 <AmiBlitz3_noFPU_r470.ab3@5926>    ADD.l D3,D6
00023D28 <AmiBlitz3_noFPU_r470.ab3@5927>   MOVE.l A2,D2
00023D2A <AmiBlitz3_noFPU_r470.ab3@5928>   MOVE.l D7,D1
00023D30 <AmiBlitz3_noFPU_r470.ab3@5929>   MOVEA.l _dosbase,A6
00023D34 <AmiBlitz3_noFPU_r470.ab3@5930>    JSR _Write(A6)
00023D36 <AmiBlitz3_noFPU_r470.ab3@5931>   MOVE.l (A7)+,(A2)
00023D38 <AmiBlitz3_noFPU_r470.ab3@5932> RTS
00023D3A <AmiBlitz3_noFPU_r470.ab3@5935>   MOVE.l D6,D2
00023D3E <AmiBlitz3_noFPU_r470.ab3@5936> BRA.w addhunkoffset
00023D42 <AmiBlitz3_noFPU_r470.ab3@5940>     CMPA.w #$0,A2
00023D46 <AmiBlitz3_noFPU_r470.ab3@5941>      BEQ.w writeoffs__done
00023D4C <AmiBlitz3_noFPU_r470.ab3@5942>     MOVEA.l newtypebase,A1
00023D4E <AmiBlitz3_noFPU_r470.ab3@5943>     MOVEQ.l #$00,D1
00023D52 <AmiBlitz3_noFPU_r470.ab3@5946>       CMPA.w #$0,A1
00023D56 <AmiBlitz3_noFPU_r470.ab3@5947>       BEQ.w writeoffs__found
00023D5A <AmiBlitz3_noFPU_r470.ab3@5948>       CMPA.l $A(A2),A1
00023D5E <AmiBlitz3_noFPU_r470.ab3@5949>        BEQ.w writeoffs__found
00023D60 <AmiBlitz3_noFPU_r470.ab3@5950>       ADDQ.w #1,D1
00023D62 <AmiBlitz3_noFPU_r470.ab3@5951>       MOVEA.l (A1),A1
00023D66 <AmiBlitz3_noFPU_r470.ab3@5952> BRA.w writeoffs__loop2
00023D6A <AmiBlitz3_noFPU_r470.ab3@5955>     MOVE.w $A(A2),-(A7)
00023D6E <AmiBlitz3_noFPU_r470.ab3@5956>     MOVE.w D1,$A(A2)
00023D72 <AmiBlitz3_noFPU_r470.ab3@5957>      BSR.w writeitem
00023D76 <AmiBlitz3_noFPU_r470.ab3@5958>     MOVE.w (A7)+,$A(A2)
00023D78 <AmiBlitz3_noFPU_r470.ab3@5959>     MOVEA.l (A2),A2
00023D7C <AmiBlitz3_noFPU_r470.ab3@5960> BRA.w writeoffs
00023D7E <AmiBlitz3_noFPU_r470.ab3@5963> RTS
00023D80 <AmiBlitz3_noFPU_r470.ab3@5967>   MOVEQ.l #$00,D0
00023D84 <AmiBlitz3_noFPU_r470.ab3@5970>   CMPA.w #$0,A2
00023D88 <AmiBlitz3_noFPU_r470.ab3@5971>    BEQ.w countem__done
00023D8A <AmiBlitz3_noFPU_r470.ab3@5972>   ADDQ.w #1,D0
00023D8C <AmiBlitz3_noFPU_r470.ab3@5973>   MOVEA.l (A2),A2
00023D90 <AmiBlitz3_noFPU_r470.ab3@5974> BRA.w countem__loop
00023D96 <AmiBlitz3_noFPU_r470.ab3@5977>   MOVE.w D0,temp1
00023D98 <AmiBlitz3_noFPU_r470.ab3@5978>   MOVE.l D7,D1
00023D9E <AmiBlitz3_noFPU_r470.ab3@5979>   MOVE.l #temp1,D2
00023DA0 <AmiBlitz3_noFPU_r470.ab3@5980>   MOVEQ.l #$02,D3
00023DA2 <AmiBlitz3_noFPU_r470.ab3@5981>   ADDQ.l #2,D6
00023DA8 <AmiBlitz3_noFPU_r470.ab3@5982>   MOVEA.l _dosbase,A6
00023DAC <AmiBlitz3_noFPU_r470.ab3@5983> JMP _Write(A6)
00023DB2 <AmiBlitz3_noFPU_r470.ab3@5987>    TST.b resdisable
00023DB6 <AmiBlitz3_noFPU_r470.ab3@5988>    BEQ resmacs__l1
00023DBC <AmiBlitz3_noFPU_r470.ab3@5989>    MOVE.l currentmacroaddr,a3
00023DC2 <AmiBlitz3_noFPU_r470.ab3@5990>    CMP.l #0,a3
00023DC6 <AmiBlitz3_noFPU_r470.ab3@5991>    BEQ resmacs__l1
00023DC8 <AmiBlitz3_noFPU_r470.ab3@5992>    MOVE.l (a3),a3
00023DCC <AmiBlitz3_noFPU_r470.ab3@5993> BRA resmacs__l2
00023DD2 <AmiBlitz3_noFPU_r470.ab3@5996>   MOVEA.l macrobase,A3                                     ;??begin org code??
00023DD4 <AmiBlitz3_noFPU_r470.ab3@5999>   MOVEA.l A3,A2
00023DD8 <AmiBlitz3_noFPU_r470.ab3@6000>   BSR.w countem
00023DDC <AmiBlitz3_noFPU_r470.ab3@6003>    CMPA.w #$0,A3
00023DE0 <AmiBlitz3_noFPU_r470.ab3@6004>    BEQ.w resmacs__done
00023DE2 <AmiBlitz3_noFPU_r470.ab3@6005>   MOVE.l D6,D5
00023DE4 <AmiBlitz3_noFPU_r470.ab3@6006>   MOVE.l (A3),-(A7)
00023DE8 <AmiBlitz3_noFPU_r470.ab3@6007>   MOVE.l $4(A3),-(A7)
00023DEA <AmiBlitz3_noFPU_r470.ab3@6008>   MOVEQ.l #$00,D3
00023DEE <AmiBlitz3_noFPU_r470.ab3@6009>   MOVE.b $C(A3),D3
00023DF0 <AmiBlitz3_noFPU_r470.ab3@6010>   ADDQ.w #1,D3
00023DF4 <AmiBlitz3_noFPU_r470.ab3@6011>   BCLR #$0,D3
00023DF6 <AmiBlitz3_noFPU_r470.ab3@6012>   ADD.l D3,D6                                              ;add len of struct
00023DFA <AmiBlitz3_noFPU_r470.ab3@6013>   TST.w $8(A3)
00023DFE <AmiBlitz3_noFPU_r470.ab3@6014>    BEQ.w resmacs__notext
00023E02 <AmiBlitz3_noFPU_r470.ab3@6015>   MOVE.l D6,$4(A3)
00023E04 <AmiBlitz3_noFPU_r470.ab3@6016>   MOVE.l D5,D2
00023E06 <AmiBlitz3_noFPU_r470.ab3@6017>   ADDQ.l #4,D2
00023E0A <AmiBlitz3_noFPU_r470.ab3@6018>    BSR.w addhunkoffset
00023E0C <AmiBlitz3_noFPU_r470.ab3@6021>   MOVEQ.l #$00,D4
00023E10 <AmiBlitz3_noFPU_r470.ab3@6022>   MOVE.w $8(A3),D4
00023E12 <AmiBlitz3_noFPU_r470.ab3@6023>   ADDQ.w #1,D4
00023E16 <AmiBlitz3_noFPU_r470.ab3@6024>   BCLR #$0,D4
00023E18 <AmiBlitz3_noFPU_r470.ab3@6025>   ADD.l D4,D6
00023E1A <AmiBlitz3_noFPU_r470.ab3@6026>   TST.l (A3)
00023E1E <AmiBlitz3_noFPU_r470.ab3@6027>    BEQ.w resmacs__nomore
00023E20 <AmiBlitz3_noFPU_r470.ab3@6028>   MOVE.l D6,(A3)
00023E22 <AmiBlitz3_noFPU_r470.ab3@6029>   MOVE.l D5,D2
00023E26 <AmiBlitz3_noFPU_r470.ab3@6030>    BSR.w addhunkoffset
00023E28 <AmiBlitz3_noFPU_r470.ab3@6033>   MOVE.l A3,D2
00023E2A <AmiBlitz3_noFPU_r470.ab3@6034>   MOVE.l D7,D1
00023E30 <AmiBlitz3_noFPU_r470.ab3@6036>    MOVEA.l _dosbase,A6
00023E34 <AmiBlitz3_noFPU_r470.ab3@6037>    JSR _Write(a6)
00023E36 <AmiBlitz3_noFPU_r470.ab3@6038>   TST.l D4
00023E3A <AmiBlitz3_noFPU_r470.ab3@6039>    BEQ.w resmacs__skip
00023E3C <AmiBlitz3_noFPU_r470.ab3@6040>   MOVE.l (A7),D2
00023E3E <AmiBlitz3_noFPU_r470.ab3@6041>   MOVE.l D4,D3
00023E40 <AmiBlitz3_noFPU_r470.ab3@6042>   MOVE.l D7,D1
00023E46 <AmiBlitz3_noFPU_r470.ab3@6044>     MOVEA.l _dosbase,A6
00023E4A <AmiBlitz3_noFPU_r470.ab3@6045>    JSR _Write(A6)
00023E4E <AmiBlitz3_noFPU_r470.ab3@6048>   MOVE.l (A7)+,$4(A3)
00023E50 <AmiBlitz3_noFPU_r470.ab3@6049>   MOVE.l (A7)+,(A3)
00023E52 <AmiBlitz3_noFPU_r470.ab3@6050>   MOVEA.l (A3),A3
00023E56 <AmiBlitz3_noFPU_r470.ab3@6051> BRA.w resmacs__loop
00023E58 <AmiBlitz3_noFPU_r470.ab3@6054> RTS
00023E5E <AmiBlitz3_noFPU_r470.ab3@6058>   TST.b resdisable
00023E62 <AmiBlitz3_noFPU_r470.ab3@6059>   BEQ restypes__l1
00023E68 <AmiBlitz3_noFPU_r470.ab3@6060>   MOVE.l lastrestype,a3
00023E6E <AmiBlitz3_noFPU_r470.ab3@6061>   CMP.l #0,a3
00023E72 <AmiBlitz3_noFPU_r470.ab3@6062>   BEQ restypes__l1
00023E74 <AmiBlitz3_noFPU_r470.ab3@6063>   MOVE.l (a3),a3
00023E78 <AmiBlitz3_noFPU_r470.ab3@6064> BRA restypes__l2
00023E7E <AmiBlitz3_noFPU_r470.ab3@6067>   MOVEA.l newtype_string,A3
00023E80 <AmiBlitz3_noFPU_r470.ab3@6070>   MOVEA.l A3,A2
00023E84 <AmiBlitz3_noFPU_r470.ab3@6071>    BSR.w countem
00023E88 <AmiBlitz3_noFPU_r470.ab3@6074>    CMPA.w #$0,A3
00023E8C <AmiBlitz3_noFPU_r470.ab3@6075>    BEQ.w restypes__done
00023E8E <AmiBlitz3_noFPU_r470.ab3@6076>   MOVE.l D6,-(A7)
00023E92 <AmiBlitz3_noFPU_r470.ab3@6077>   MOVEA.l $4(A3),A2
00023E94 <AmiBlitz3_noFPU_r470.ab3@6078>   MOVEQ.l #$0E,D5
00023E98 <AmiBlitz3_noFPU_r470.ab3@6079>    BSR.w writeoffs
00023E9A <AmiBlitz3_noFPU_r470.ab3@6080>   MOVE.l (A7)+,D0
00023E9E <AmiBlitz3_noFPU_r470.ab3@6081>   MOVE.l $4(A3),-(A7)
00023EA2 <AmiBlitz3_noFPU_r470.ab3@6082>   MOVE.l D0,$4(A3)
00023EA4 <AmiBlitz3_noFPU_r470.ab3@6083>   MOVE.l D6,D2
00023EA6 <AmiBlitz3_noFPU_r470.ab3@6084>   ADDQ.l #4,D2
00023EAA <AmiBlitz3_noFPU_r470.ab3@6085>    BSR.w addhunkoffset
00023EAC <AmiBlitz3_noFPU_r470.ab3@6086>   MOVEQ.l #$00,D3
00023EB0 <AmiBlitz3_noFPU_r470.ab3@6087>   MOVE.b $A(A3),D3
00023EB2 <AmiBlitz3_noFPU_r470.ab3@6088>   ADDQ.w #1,D3
00023EB6 <AmiBlitz3_noFPU_r470.ab3@6089>   BCLR #$0,D3
00023EB8 <AmiBlitz3_noFPU_r470.ab3@6090>   ADD.l D3,D6
00023EBA <AmiBlitz3_noFPU_r470.ab3@6091>   MOVE.l A3,D2
00023EBC <AmiBlitz3_noFPU_r470.ab3@6092>   MOVE.l D7,D1
00023EC2 <AmiBlitz3_noFPU_r470.ab3@6094>     MOVEA.l _dosbase,A6
00023EC6 <AmiBlitz3_noFPU_r470.ab3@6095>     JSR _Write(A6)
00023ECA <AmiBlitz3_noFPU_r470.ab3@6096>   MOVE.l (A7)+,$4(A3)
00023ECC <AmiBlitz3_noFPU_r470.ab3@6097>   MOVEA.l (A3),A3
00023ED0 <AmiBlitz3_noFPU_r470.ab3@6098> BRA.w restypes__loop
00023ED2 <AmiBlitz3_noFPU_r470.ab3@6101> RTS
00023ED8 <AmiBlitz3_noFPU_r470.ab3@6105>    TST.b resdisable
00023EDC <AmiBlitz3_noFPU_r470.ab3@6106>    BEQ resconsts__l1
00023EE2 <AmiBlitz3_noFPU_r470.ab3@6107>    MOVE.l currentlabeladdr,a2
00023EE8 <AmiBlitz3_noFPU_r470.ab3@6108>    CMP.l #0,a2
00023EEC <AmiBlitz3_noFPU_r470.ab3@6109>    BEQ resconsts__l1
00023EEE <AmiBlitz3_noFPU_r470.ab3@6110>    MOVE.l (a2),a2
00023EF2 <AmiBlitz3_noFPU_r470.ab3@6111> BRA resconsts__l2
00023EF8 <AmiBlitz3_noFPU_r470.ab3@6114>    MOVEA.l labelbase,A2
00023EFA <AmiBlitz3_noFPU_r470.ab3@6117>    MOVEQ.l #$00,D0
00023EFE <AmiBlitz3_noFPU_r470.ab3@6120>    CMPA.w #$0,A2
00023F02 <AmiBlitz3_noFPU_r470.ab3@6121>    BEQ.w resconsts__done
00023F0A <AmiBlitz3_noFPU_r470.ab3@6122>   CMPI.l #$1,$4(A2)
00023F0E <AmiBlitz3_noFPU_r470.ab3@6123>    BNE.w resconsts__next
00023F10 <AmiBlitz3_noFPU_r470.ab3@6124>   ADDQ.w #1,D0
00023F12 <AmiBlitz3_noFPU_r470.ab3@6127>   MOVEA.l (A2),A2
00023F16 <AmiBlitz3_noFPU_r470.ab3@6128> BRA.w resconsts__loop
00023F1C <AmiBlitz3_noFPU_r470.ab3@6131>   MOVE.w D0,temp1
00023F1E <AmiBlitz3_noFPU_r470.ab3@6132>   MOVE.l D7,D1
00023F24 <AmiBlitz3_noFPU_r470.ab3@6133>   MOVE.l #temp1,D2
00023F26 <AmiBlitz3_noFPU_r470.ab3@6134>   MOVEQ.l #$02,D3
00023F28 <AmiBlitz3_noFPU_r470.ab3@6135>   ADDQ.l #2,D6
00023F2E <AmiBlitz3_noFPU_r470.ab3@6137>     MOVEA.l _dosbase,A6
00023F32 <AmiBlitz3_noFPU_r470.ab3@6138>     JSR _Write(A6)
00023F38 <AmiBlitz3_noFPU_r470.ab3@6139>    TST.b resdisable
00023F3C <AmiBlitz3_noFPU_r470.ab3@6140>    BEQ resconsts__done_l1
00023F42 <AmiBlitz3_noFPU_r470.ab3@6141>    MOVE.l currentlabeladdr,a2
00023F48 <AmiBlitz3_noFPU_r470.ab3@6142>    CMP.l #0,a2
00023F4C <AmiBlitz3_noFPU_r470.ab3@6143>    BEQ resconsts__done_l1
00023F4E <AmiBlitz3_noFPU_r470.ab3@6144>    MOVE.l (a2),a2
00023F52 <AmiBlitz3_noFPU_r470.ab3@6145> BRA resconsts__loop2
00023F58 <AmiBlitz3_noFPU_r470.ab3@6148>    MOVEA.l labelbase,A2                                    ;write resident labels
00023F5C <AmiBlitz3_noFPU_r470.ab3@6151>    CMPA.w #$0,A2
00023F60 <AmiBlitz3_noFPU_r470.ab3@6152>    BEQ.w resconsts__done2
00023F68 <AmiBlitz3_noFPU_r470.ab3@6153>   CMPI.l #$1,$4(A2)
00023F6C <AmiBlitz3_noFPU_r470.ab3@6154>    BNE.w resconsts__next2
00023F6E <AmiBlitz3_noFPU_r470.ab3@6155>    MOVEQ.l #$00,D3
00023F72 <AmiBlitz3_noFPU_r470.ab3@6156>   MOVE.b $12(A2),D3                                        ;length
00023F74 <AmiBlitz3_noFPU_r470.ab3@6157>   ADDQ.w #1,D3
00023F78 <AmiBlitz3_noFPU_r470.ab3@6158>   BCLR #$0,D3
00023F7A <AmiBlitz3_noFPU_r470.ab3@6159>   MOVE.l D6,D2
00023F7C <AmiBlitz3_noFPU_r470.ab3@6160>   ADD.l D3,D6
00023F7E <AmiBlitz3_noFPU_r470.ab3@6163>   MOVE.l (A2),-(A7)
00023F80 <AmiBlitz3_noFPU_r470.ab3@6164>   TST.l (A2)
00023F84 <AmiBlitz3_noFPU_r470.ab3@6165>    BEQ.w resconsts__nonext
00023F86 <AmiBlitz3_noFPU_r470.ab3@6166>   MOVE.l D6,(A2)
00023F8A <AmiBlitz3_noFPU_r470.ab3@6167>    BSR.w addhunkoffset
00023F8C <AmiBlitz3_noFPU_r470.ab3@6170>   MOVE.l A2,D2
00023F8E <AmiBlitz3_noFPU_r470.ab3@6171>   MOVE.l D7,D1
00023F94 <AmiBlitz3_noFPU_r470.ab3@6173>     MOVEA.l _dosbase,A6
00023F98 <AmiBlitz3_noFPU_r470.ab3@6174>     JSR _Write(A6)
00023F9A <AmiBlitz3_noFPU_r470.ab3@6175>   MOVE.l (A7)+,(A2)
00023F9C <AmiBlitz3_noFPU_r470.ab3@6178>   MOVEA.l (A2),A2
00023FA0 <AmiBlitz3_noFPU_r470.ab3@6179> BRA.w resconsts__loop2
00023FA2 <AmiBlitz3_noFPU_r470.ab3@6182> RTS
00023FCC <AmiBlitz3_noFPU_r470.ab3@6186>    !basic
00023FD2 <AmiBlitz3_noFPU_r470.ab3@6187>     MOVE.l ptr_resfile,d0
00023FE2 <AmiBlitz3_noFPU_r470.ab3@6188>     resfileP.l = Peek.l(?ptr_resfile)
00023FEC <AmiBlitz3_noFPU_r470.ab3@6189>     If resfileP
00024014 <AmiBlitz3_noFPU_r470.ab3@6190>       resfile$ = Peek.s(resfileP)
00024060 <AmiBlitz3_noFPU_r470.ab3@6191>       tests.b = Instr(resfile$,"/")
000240AC <AmiBlitz3_noFPU_r470.ab3@6192>       testc.b = Instr(resfile$,":")
000240CE <AmiBlitz3_noFPU_r470.ab3@6193>       If tests=0 AND testc=0
0002414E <AmiBlitz3_noFPU_r470.ab3@6194>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024160 <AmiBlitz3_noFPU_r470.ab3@6195>         Poke.l ?ptr_resfile,&resfile$
00024166 <AmiBlitz3_noFPU_r470.ab3@6197>     Else
000241A0 <AmiBlitz3_noFPU_r470.ab3@6198>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000241BE <AmiBlitz3_noFPU_r470.ab3@6200>    !asm
000241C0 <AmiBlitz3_noFPU_r470.ab3@6201> RTS
000241C6 <AmiBlitz3_noFPU_r470.ab3@6205> 
000241CC <AmiBlitz3_noFPU_r470.ab3@6206>   MOVE.l A7,errstack
000241D6 <AmiBlitz3_noFPU_r470.ab3@6209>   MOVE.l #next_resentry,errcont
000241DE <AmiBlitz3_noFPU_r470.ab3@6210>   MOVE.w #$FFFF,ezerr
000241E2 <AmiBlitz3_noFPU_r470.ab3@6211>   BSR.w Aclearallvars
000241E6 <AmiBlitz3_noFPU_r470.ab3@6212>   BSR.w free_residents
000241EC <AmiBlitz3_noFPU_r470.ab3@6214>   LEA residents_table,A5
000241EE <AmiBlitz3_noFPU_r470.ab3@6215>   MOVEQ.l #$07,D6
000241F0 <AmiBlitz3_noFPU_r470.ab3@6218>     TST.b (A5)
000241F4 <AmiBlitz3_noFPU_r470.ab3@6219>     BEQ.w next_resentry
000241FA <AmiBlitz3_noFPU_r470.ab3@6220>     MOVE.l A5,ptr_resfile
000241FE <AmiBlitz3_noFPU_r470.ab3@6221>     BSR check_residentpath
00024204 <AmiBlitz3_noFPU_r470.ab3@6222>     MOVE.l ptr_resfile,d1
0002420A <AmiBlitz3_noFPU_r470.ab3@6223>     MOVEA.l _dosbase,A6
0002420E <AmiBlitz3_noFPU_r470.ab3@6224>     JSR _LoadSeg(A6)
00024212 <AmiBlitz3_noFPU_r470.ab3@6225>     MOVE.l D0,$40(A5)
00024216 <AmiBlitz3_noFPU_r470.ab3@6226>     BNE.w reloadresident__yeah
0002421A <AmiBlitz3_noFPU_r470.ab3@6227>     BSR.w reserr
0002421C <AmiBlitz3_noFPU_r470.ab3@6230>     MOVEA.l D0,A3
0002421E <AmiBlitz3_noFPU_r470.ab3@6231>     ADDA.l A3,A3
00024220 <AmiBlitz3_noFPU_r470.ab3@6232>     ADDA.l A3,A3
00024222 <AmiBlitz3_noFPU_r470.ab3@6233>     ADDQ.w #4,A3                                           ;start of res
00024226 <AmiBlitz3_noFPU_r470.ab3@6234>     BSR.w JL_0_5A9E
0002422A <AmiBlitz3_noFPU_r470.ab3@6235>     BSR.w JL_0_5A62                                        ;add macros to list
0002422E <AmiBlitz3_noFPU_r470.ab3@6236>     BSR.w JL_0_5A32                                        ;read labels
00024232 <AmiBlitz3_noFPU_r470.ab3@6239>     LEA ResidentEntryStep(A5),A5       ;$44
00024236 <AmiBlitz3_noFPU_r470.ab3@6240>   DBF D6,reloadresident__loop
00024240 <AmiBlitz3_noFPU_r470.ab3@6245>   MOVE.l #free_residents,errcont
00024246 <AmiBlitz3_noFPU_r470.ab3@6247>   MOVEA.l newtype_string,A3
00024248 <AmiBlitz3_noFPU_r470.ab3@6248>   MOVEQ.l #$0B,D7
0002424C <AmiBlitz3_noFPU_r470.ab3@6249>   BSR.w checkclash
00024252 <AmiBlitz3_noFPU_r470.ab3@6251>   MOVEA.l macrobase,A3
00024254 <AmiBlitz3_noFPU_r470.ab3@6252>   MOVEQ.l #$d,D7
00024258 <AmiBlitz3_noFPU_r470.ab3@6253>   BSR.w checkclash
0002425E <AmiBlitz3_noFPU_r470.ab3@6255>   MOVEA.l firstconst,A3
00024260 <AmiBlitz3_noFPU_r470.ab3@6256>   MOVEQ.l #$19,D7
00024264 <AmiBlitz3_noFPU_r470.ab3@6257>   BSR.w checkclash
00024266 <AmiBlitz3_noFPU_r470.ab3@6260> RTS
00024268 <AmiBlitz3_noFPU_r470.ab3@6264>   MOVEA.l A3,A4
0002426C <AmiBlitz3_noFPU_r470.ab3@6267>     CMPA.w #$0,A4
00024270 <AmiBlitz3_noFPU_r470.ab3@6268>     BEQ.w checkclash__done
00024276 <AmiBlitz3_noFPU_r470.ab3@6270>     LEA ptr_parameterstore,A0
0002427A <AmiBlitz3_noFPU_r470.ab3@6271>     LEA $0(A4,D7.W),A1
0002427C <AmiBlitz3_noFPU_r470.ab3@6272>     MOVEQ.l #-$01,D2
0002427E <AmiBlitz3_noFPU_r470.ab3@6275>       ADDQ.w #1,D2
00024280 <AmiBlitz3_noFPU_r470.ab3@6276>       MOVE.b (A1)+,(A0)+
00024284 <AmiBlitz3_noFPU_r470.ab3@6277>     BNE.w checkclash__loop2
00024286 <AmiBlitz3_noFPU_r470.ab3@6278>     MOVEA.l A3,A2
0002428A <AmiBlitz3_noFPU_r470.ab3@6281>     BSR.w findlab
0002428E <AmiBlitz3_noFPU_r470.ab3@6282>     BNE.w checkclash__next                                  ;not found
00024290 <AmiBlitz3_noFPU_r470.ab3@6283>     CMPA.l A2,A4
00024294 <AmiBlitz3_noFPU_r470.ab3@6284>     BEQ.w checkclash__l1
00024296 <AmiBlitz3_noFPU_r470.ab3@6285>     MOVE.l a1,a5
0002429A <AmiBlitz3_noFPU_r470.ab3@6286> BRA clasherr
0002429E <AmiBlitz3_noFPU_r470.ab3@6289> BRA.w checkclash__more
000242A0 <AmiBlitz3_noFPU_r470.ab3@6292>     MOVEA.l (A4),A4
000242A4 <AmiBlitz3_noFPU_r470.ab3@6293> BRA.w checkclash__loop
000242A6 <AmiBlitz3_noFPU_r470.ab3@6296> RTS
000242AC <AmiBlitz3_noFPU_r470.ab3@6300>   MOVEA.l _dosbase,A6
000242B2 <AmiBlitz3_noFPU_r470.ab3@6302>   LEA newtype_string,A0
000242B8 <AmiBlitz3_noFPU_r470.ab3@6303>   MOVE.l A0,lastrestype
000242BA <AmiBlitz3_noFPU_r470.ab3@6304>   CLR.l (A0)
000242C0 <AmiBlitz3_noFPU_r470.ab3@6306>   LEA macrobase,A0
000242C6 <AmiBlitz3_noFPU_r470.ab3@6307>   MOVE.l A0,currentmacroaddr
000242C8 <AmiBlitz3_noFPU_r470.ab3@6308>   CLR.l (A0)
000242CE <AmiBlitz3_noFPU_r470.ab3@6310>   LEA labelbase,A0
000242D4 <AmiBlitz3_noFPU_r470.ab3@6311>   MOVE.l A0,currentlabeladdr
000242D6 <AmiBlitz3_noFPU_r470.ab3@6312>   CLR.l (A0)
000242DC <AmiBlitz3_noFPU_r470.ab3@6313>   CLR.w rescnt
00024314 <AmiBlitz3_noFPU_r470.ab3@6317>   !ComData_SetB{comByte_DebugMode,debugmode}
0002431A <AmiBlitz3_noFPU_r470.ab3@6320>   LEA residents_table,A2
0002431C <AmiBlitz3_noFPU_r470.ab3@6321>   MOVEQ.l #$07,D2
00024320 <AmiBlitz3_noFPU_r470.ab3@6324>      MOVE.l $40(A2),D1
00024324 <AmiBlitz3_noFPU_r470.ab3@6325>      BEQ.w free_residents__next
00024328 <AmiBlitz3_noFPU_r470.ab3@6326>       CLR.l $40(A2)
0002432E <AmiBlitz3_noFPU_r470.ab3@6327>       MOVEA.l _dosbase,A6
00024332 <AmiBlitz3_noFPU_r470.ab3@6328>       JSR _UnLoadSeg(A6)
00024336 <AmiBlitz3_noFPU_r470.ab3@6331>      LEA ResidentEntryStep(A2),A2   ; $44
0002433A <AmiBlitz3_noFPU_r470.ab3@6332>    DBF D2,free_residents__loop
0002433C <AmiBlitz3_noFPU_r470.ab3@6334> RTS
0002433E <AmiBlitz3_noFPU_r470.ab3@6338>   MOVE.w (A3)+,D1
00024342 <AmiBlitz3_noFPU_r470.ab3@6339>   BEQ.w JL_0_5A60
00024348 <AmiBlitz3_noFPU_r470.ab3@6340>   MOVEA.l currentlabeladdr,A2
0002434A <AmiBlitz3_noFPU_r470.ab3@6341>   MOVE.l A3,(A2)
0002434C <AmiBlitz3_noFPU_r470.ab3@6342>   SUBQ.w #1,D1
0002434E <AmiBlitz3_noFPU_r470.ab3@6345>     MOVEA.l A3,A2
00024350 <AmiBlitz3_noFPU_r470.ab3@6346>     MOVEA.l (A3),A3
00024354 <AmiBlitz3_noFPU_r470.ab3@6347>   DBF D1,JL_0_5A42
00024356 <AmiBlitz3_noFPU_r470.ab3@6349>   CLR.l (a2)                                               ;bugfix for object
0002435C <AmiBlitz3_noFPU_r470.ab3@6350>   MOVE.l A2,currentlabeladdr
0002435E <AmiBlitz3_noFPU_r470.ab3@6351>   MOVEA.l A2,A3
00024360 <AmiBlitz3_noFPU_r470.ab3@6352>   MOVEQ.l #$00,D0
00024364 <AmiBlitz3_noFPU_r470.ab3@6353>   MOVE.b $12(A3),D0
00024366 <AmiBlitz3_noFPU_r470.ab3@6354>   ADDQ.w #1,D0
0002436A <AmiBlitz3_noFPU_r470.ab3@6355>   BCLR #$0,D0
0002436C <AmiBlitz3_noFPU_r470.ab3@6356>   ADDA.w D0,A3
0002436E <AmiBlitz3_noFPU_r470.ab3@6359> RTS
00024370 <AmiBlitz3_noFPU_r470.ab3@6363>   MOVE.w (A3)+,D1
00024374 <AmiBlitz3_noFPU_r470.ab3@6364>   BEQ.w JL_0_5A9C
0002437A <AmiBlitz3_noFPU_r470.ab3@6366>   MOVEA.l currentmacroaddr,A2
0002437C <AmiBlitz3_noFPU_r470.ab3@6367>   MOVE.l A3,(A2)
0002437E <AmiBlitz3_noFPU_r470.ab3@6368>   SUBQ.w #1,D1
00024380 <AmiBlitz3_noFPU_r470.ab3@6371>     MOVEA.l A3,A2
00024382 <AmiBlitz3_noFPU_r470.ab3@6372>     MOVEA.l (A3),A3
00024386 <AmiBlitz3_noFPU_r470.ab3@6373>   DBF D1,JL_0_5A72
0002438C <AmiBlitz3_noFPU_r470.ab3@6375>   MOVE.l A2,currentmacroaddr
0002438E <AmiBlitz3_noFPU_r470.ab3@6376>   MOVEA.l A2,A3
00024390 <AmiBlitz3_noFPU_r470.ab3@6377>   MOVEQ.l #$00,D0
00024394 <AmiBlitz3_noFPU_r470.ab3@6378>   MOVE.b $C(A3),D0
00024396 <AmiBlitz3_noFPU_r470.ab3@6379>   ADDQ.w #1,D0
0002439A <AmiBlitz3_noFPU_r470.ab3@6380>   BCLR #$0,D0
0002439E <AmiBlitz3_noFPU_r470.ab3@6381>   MOVE.w $8(A3),D1
000243A0 <AmiBlitz3_noFPU_r470.ab3@6382>   ADDQ.w #1,D1
000243A4 <AmiBlitz3_noFPU_r470.ab3@6383>   BCLR #$0,D1
000243A6 <AmiBlitz3_noFPU_r470.ab3@6384>   ADDA.w D0,A3
000243A8 <AmiBlitz3_noFPU_r470.ab3@6385>   ADDA.w D1,A3
000243AA <AmiBlitz3_noFPU_r470.ab3@6388> RTS
000243AC <AmiBlitz3_noFPU_r470.ab3@6392>   MOVE.w (A3)+,D1
000243B0 <AmiBlitz3_noFPU_r470.ab3@6393>   BEQ.w JL_0_5B38
000243B2 <AmiBlitz3_noFPU_r470.ab3@6394>   MOVE.w D1,-(A7)
000243B4 <AmiBlitz3_noFPU_r470.ab3@6395>   SUBQ.w #1,D1
000243BA <AmiBlitz3_noFPU_r470.ab3@6396>   MOVEA.l lastrestype,A2
000243BC <AmiBlitz3_noFPU_r470.ab3@6397>   MOVE.l A2,-(A7)
000243BE <AmiBlitz3_noFPU_r470.ab3@6400>       MOVE.l (A3),D0
000243C2 <AmiBlitz3_noFPU_r470.ab3@6401>       BEQ.w JL_0_5ABC
000243C4 <AmiBlitz3_noFPU_r470.ab3@6402>       MOVEA.l D0,A3
000243C8 <AmiBlitz3_noFPU_r470.ab3@6403> BRA.w JL_0_5AB0
000243CC <AmiBlitz3_noFPU_r470.ab3@6406>       MOVE.b $E(A3),D0
000243CE <AmiBlitz3_noFPU_r470.ab3@6407>       ADDQ.w #1,D0
000243D2 <AmiBlitz3_noFPU_r470.ab3@6408>       BCLR #$0,D0
000243D4 <AmiBlitz3_noFPU_r470.ab3@6409>       ADDA.w D0,A3
000243D6 <AmiBlitz3_noFPU_r470.ab3@6410>       MOVE.l A3,(A2)
000243D8 <AmiBlitz3_noFPU_r470.ab3@6411>       MOVEA.l A3,A2
000243DA <AmiBlitz3_noFPU_r470.ab3@6412>       MOVEQ.l #$00,D0
000243DE <AmiBlitz3_noFPU_r470.ab3@6413>       MOVE.b $A(A3),D0
000243E0 <AmiBlitz3_noFPU_r470.ab3@6414>       ADDQ.w #1,D0
000243E4 <AmiBlitz3_noFPU_r470.ab3@6415>       BCLR #$0,D0
000243E6 <AmiBlitz3_noFPU_r470.ab3@6416>       ADDA.w D0,A3
000243EA <AmiBlitz3_noFPU_r470.ab3@6417>   DBF D1,JL_0_5AB0
000243EC <AmiBlitz3_noFPU_r470.ab3@6419>   MOVEA.l (A7)+,A0
000243EE <AmiBlitz3_noFPU_r470.ab3@6420>   MOVEA.l (A0),A0
000243F2 <AmiBlitz3_noFPU_r470.ab3@6423>     CMPA.w #$0,A0
000243F6 <AmiBlitz3_noFPU_r470.ab3@6424>     BEQ.w JL_0_5B2A
000243FA <AmiBlitz3_noFPU_r470.ab3@6425>     MOVEA.l $4(A0),A1
000243FE <AmiBlitz3_noFPU_r470.ab3@6428>     CMPA.w #$0,A1
00024402 <AmiBlitz3_noFPU_r470.ab3@6429>     BEQ.w JL_0_5B24
00024406 <AmiBlitz3_noFPU_r470.ab3@6430>     MOVE.w $A(A1),D0
0002440C <AmiBlitz3_noFPU_r470.ab3@6431>     MOVEA.l newtypebase,A4
00024410 <AmiBlitz3_noFPU_r470.ab3@6432>     CMP.w #$7,D0
00024414 <AmiBlitz3_noFPU_r470.ab3@6433>     BCS.w JL_0_5B0E
0002441A <AmiBlitz3_noFPU_r470.ab3@6434>     SUB.w rescnt,D0
0002441C <AmiBlitz3_noFPU_r470.ab3@6437>     SUBQ.w #1,D0
00024420 <AmiBlitz3_noFPU_r470.ab3@6438>     BMI.w JL_0_5B1A
00024422 <AmiBlitz3_noFPU_r470.ab3@6441>        MOVEA.l (A4),A4
00024426 <AmiBlitz3_noFPU_r470.ab3@6442>   DBF D0,JL_0_5B14
0002442A <AmiBlitz3_noFPU_r470.ab3@6445>     MOVE.l A4,$A(A1)
0002442C <AmiBlitz3_noFPU_r470.ab3@6446>     MOVEA.l (A1),A1
00024430 <AmiBlitz3_noFPU_r470.ab3@6447> BRA.w JL_0_5AEE
00024432 <AmiBlitz3_noFPU_r470.ab3@6450>     MOVEA.l (A0),A0
00024436 <AmiBlitz3_noFPU_r470.ab3@6451> BRA.w JL_0_5AE2
00024438 <AmiBlitz3_noFPU_r470.ab3@6454>   MOVE.w (A7)+,D0
0002443E <AmiBlitz3_noFPU_r470.ab3@6455>   ADD.w D0,rescnt
00024444 <AmiBlitz3_noFPU_r470.ab3@6456>   MOVE.l A2,lastrestype
00024446 <AmiBlitz3_noFPU_r470.ab3@6459> RTS
0002444C <AmiBlitz3_noFPU_r470.ab3@6463>   LEA tokens,A0
00024450 <AmiBlitz3_noFPU_r470.ab3@6464>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024452 <AmiBlitz3_noFPU_r470.ab3@6467>     MOVEA.l (A0),A0
00024456 <AmiBlitz3_noFPU_r470.ab3@6468>   DBF D0,JL_0_5BD0
0002445C <AmiBlitz3_noFPU_r470.ab3@6470>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024460 <AmiBlitz3_noFPU_r470.ab3@6471>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
00024464 <AmiBlitz3_noFPU_r470.ab3@6474>       LEA $6(A0),A2
00024466 <AmiBlitz3_noFPU_r470.ab3@6477>         TST.b (A2)+
0002446A <AmiBlitz3_noFPU_r470.ab3@6478>       BNE.w JL_0_5BE4
0002446C <AmiBlitz3_noFPU_r470.ab3@6481>         TST.b (A2)+
00024470 <AmiBlitz3_noFPU_r470.ab3@6482>       BNE.w JL_0_5BEA
00024472 <AmiBlitz3_noFPU_r470.ab3@6484>       ADDQ.w #1,A2
00024474 <AmiBlitz3_noFPU_r470.ab3@6485>       EXG.l D1,A2
00024478 <AmiBlitz3_noFPU_r470.ab3@6486>       BCLR #$0,D1
0002447A <AmiBlitz3_noFPU_r470.ab3@6487>       EXG.l D1,A2
0002447C <AmiBlitz3_noFPU_r470.ab3@6488>       MOVE.l A2,(A1)+
0002447E <AmiBlitz3_noFPU_r470.ab3@6489>       MOVEA.l (A0),A0
00024482 <AmiBlitz3_noFPU_r470.ab3@6490>   DBF D0,JL_0_5BE0
00024484 <AmiBlitz3_noFPU_r470.ab3@6491> RTS
00024488 <AmiBlitz3_noFPU_r470.ab3@6495>   BSR.w asmconst
0002448A <AmiBlitz3_noFPU_r470.ab3@6496>   MOVEQ.l #$0B,D5
0002448C <AmiBlitz3_noFPU_r470.ab3@6497> RTS
0002448E <AmiBlitz3_noFPU_r470.ab3@6500> unmove:  Ds.w 1
00024492 <AmiBlitz3_noFPU_r470.ab3@6504>   MOVE.w #$48E7,D1
00024496 <AmiBlitz3_noFPU_r470.ab3@6505>   BSR.w writeword                                          ;movem.l -(a7)
0002449A <AmiBlitz3_noFPU_r470.ab3@6506>   MOVE.w #$000F,D2
0002449C <AmiBlitz3_noFPU_r470.ab3@6507>   SUB.w D4,D2
0002449E <AmiBlitz3_noFPU_r470.ab3@6508>   MOVEQ.l #-$01,D1
000244A0 <AmiBlitz3_noFPU_r470.ab3@6509>   BCLR D2,D1
000244A4 <AmiBlitz3_noFPU_r470.ab3@6510>   BSR.w writeword
000244A6 <AmiBlitz3_noFPU_r470.ab3@6511>   MOVEQ.l #-$01,D1
000244A8 <AmiBlitz3_noFPU_r470.ab3@6512>   BCLR D4,D1
000244AE <AmiBlitz3_noFPU_r470.ab3@6513>   MOVE.w D1,unmove
000244B0 <AmiBlitz3_noFPU_r470.ab3@6514> RTS
000244B4 <AmiBlitz3_noFPU_r470.ab3@6518>   MOVE.w #$4CDF,D1
000244B8 <AmiBlitz3_noFPU_r470.ab3@6519>   BSR.w writeword
000244BC <AmiBlitz3_noFPU_r470.ab3@6520>   MOVE.w unmove(PC),D1
000244C0 <AmiBlitz3_noFPU_r470.ab3@6521> BRA.w writeword
000244C4 <AmiBlitz3_noFPU_r470.ab3@6534>   BSR.w JL_0_5D22
000244C8 <AmiBlitz3_noFPU_r470.ab3@6535>   CMP.w #$2C,D0                                            ;#','
000244CC <AmiBlitz3_noFPU_r470.ab3@6536>    BNE.w syntaxerr
000244D2 <AmiBlitz3_noFPU_r470.ab3@6537>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
000244D6 <AmiBlitz3_noFPU_r470.ab3@6538>    BSR.w writelong
000244D8 <AmiBlitz3_noFPU_r470.ab3@6539>   MOVE.w D4,D1
000244DC <AmiBlitz3_noFPU_r470.ab3@6540>   ORI.w #$2F00,D1
000244E0 <AmiBlitz3_noFPU_r470.ab3@6541>    BSR.w writeword
000244E4 <AmiBlitz3_noFPU_r470.ab3@6542>    BSR.w get1bytemain
000244E8 <AmiBlitz3_noFPU_r470.ab3@6543>    BSR.w getparameter
000244EC <AmiBlitz3_noFPU_r470.ab3@6544>    BSR.w JL_0_8E3C
000244F0 <AmiBlitz3_noFPU_r470.ab3@6545>    BSR.w calcvar
000244F4 <AmiBlitz3_noFPU_r470.ab3@6546>    BTST #$E,D2
000244F8 <AmiBlitz3_noFPU_r470.ab3@6547>    BEQ.w JL_0_5C80
000244FC <AmiBlitz3_noFPU_r470.ab3@6550>    MOVE.b #$3,D2
00024500 <AmiBlitz3_noFPU_r470.ab3@6551> BRA.w JL_0_5C8E
00024502 <AmiBlitz3_noFPU_r470.ab3@6554>   TST.b D2
00024506 <AmiBlitz3_noFPU_r470.ab3@6555>    BEQ.w JL_0_5C78
0002450A <AmiBlitz3_noFPU_r470.ab3@6556>   CMP.b #$7,D2
0002450E <AmiBlitz3_noFPU_r470.ab3@6557>    BEQ.w JL_0_5C78
00024512 <AmiBlitz3_noFPU_r470.ab3@6560>   BTST #$F,D2
00024516 <AmiBlitz3_noFPU_r470.ab3@6561>    BNE.w JL_0_5CA4
0002451A <AmiBlitz3_noFPU_r470.ab3@6562>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
0002451E <AmiBlitz3_noFPU_r470.ab3@6563>    BSR.w writeword
00024520 <AmiBlitz3_noFPU_r470.ab3@6564>   MOVE.w D3,D1
00024524 <AmiBlitz3_noFPU_r470.ab3@6565>    BSR.w writeword
00024528 <AmiBlitz3_noFPU_r470.ab3@6568>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002452C <AmiBlitz3_noFPU_r470.ab3@6569>    BSR.w writeword
00024530 <AmiBlitz3_noFPU_r470.ab3@6570>   MOVE.w #$1480,D1
00024534 <AmiBlitz3_noFPU_r470.ab3@6571>   CMP.b #$1,D2
00024538 <AmiBlitz3_noFPU_r470.ab3@6572>    BEQ.w JL_0_5CC8
0002453C <AmiBlitz3_noFPU_r470.ab3@6573>   EORI.w #$3000,D1
00024540 <AmiBlitz3_noFPU_r470.ab3@6574>   CMP.b #$2,D2
00024544 <AmiBlitz3_noFPU_r470.ab3@6575>    BNE.w JL_0_5CC8
00024548 <AmiBlitz3_noFPU_r470.ab3@6576>   ORI.w #$1000,D1
0002454C <AmiBlitz3_noFPU_r470.ab3@6579>   BSR.w writeword
00024552 <AmiBlitz3_noFPU_r470.ab3@6580>   MOVE.l #$4CDF7FFF,D1
00024556 <AmiBlitz3_noFPU_r470.ab3@6581> BRA.w writelong
0002455A <AmiBlitz3_noFPU_r470.ab3@6585>   BSR.w JL_0_5D22
0002455E <AmiBlitz3_noFPU_r470.ab3@6586>   CMP.w #$2C,D0
00024562 <AmiBlitz3_noFPU_r470.ab3@6587>    BNE.w syntaxerr
00024566 <AmiBlitz3_noFPU_r470.ab3@6588>    BSR.w regmovems
00024568 <AmiBlitz3_noFPU_r470.ab3@6589>   MOVE.w D4,-(A7)
0002456A <AmiBlitz3_noFPU_r470.ab3@6590>   MOVEQ.l #$03,D2
0002456E <AmiBlitz3_noFPU_r470.ab3@6591>    BSR.w eval
00024570 <AmiBlitz3_noFPU_r470.ab3@6592>   MOVE.w (A7)+,D1
00024574 <AmiBlitz3_noFPU_r470.ab3@6593>    BEQ.w JL_0_5D1A
00024578 <AmiBlitz3_noFPU_r470.ab3@6594>   CMP.w #$8,D1
0002457C <AmiBlitz3_noFPU_r470.ab3@6595>    BCC.w JL_0_5D0C
0002457E <AmiBlitz3_noFPU_r470.ab3@6596>   LSL.w #8,D1
00024580 <AmiBlitz3_noFPU_r470.ab3@6597>   LSL.w #1,D1
00024584 <AmiBlitz3_noFPU_r470.ab3@6598>   ORI.w #$2000,D1
00024588 <AmiBlitz3_noFPU_r470.ab3@6599>    BSR.w writeword
0002458C <AmiBlitz3_noFPU_r470.ab3@6600> BRA.w JL_0_5D1A
0002458E <AmiBlitz3_noFPU_r470.ab3@6603>   SUBQ.w #8,D1
00024590 <AmiBlitz3_noFPU_r470.ab3@6604>   LSL.w #8,D1
00024592 <AmiBlitz3_noFPU_r470.ab3@6605>   LSL.w #1,D1
00024596 <AmiBlitz3_noFPU_r470.ab3@6606>   ORI.w #$2040,D1
0002459A <AmiBlitz3_noFPU_r470.ab3@6607>   BSR.w writeword
0002459E <AmiBlitz3_noFPU_r470.ab3@6610> BRA.w dounmove
000245A2 <AmiBlitz3_noFPU_r470.ab3@6614>   BSR.w get1bytemain
000245A6 <AmiBlitz3_noFPU_r470.ab3@6617>   ORI.w #$20,D0
000245AA <AmiBlitz3_noFPU_r470.ab3@6618>   CMP.w #$64,D0
000245AE <AmiBlitz3_noFPU_r470.ab3@6619>    BEQ.w JL_0_5D4E
000245B2 <AmiBlitz3_noFPU_r470.ab3@6620>   CMP.w #$61,D0
000245B6 <AmiBlitz3_noFPU_r470.ab3@6621>    BNE.w syntaxerr
000245BA <AmiBlitz3_noFPU_r470.ab3@6622>    BSR.w JL_0_5D4E
000245BC <AmiBlitz3_noFPU_r470.ab3@6623>   ADDQ.w #8,D4
000245BE <AmiBlitz3_noFPU_r470.ab3@6624> RTS
000245EA <AmiBlitz3_noFPU_r470.ab3@6628>   !fget                                                   ;bsr.w get1bytemain
000245EE <AmiBlitz3_noFPU_r470.ab3@6630>   ORI.w #$20,D0
000245F2 <AmiBlitz3_noFPU_r470.ab3@6633>   CMP.w #$61,D0
000245F6 <AmiBlitz3_noFPU_r470.ab3@6634>   BNE.w syntaxerr
00024622 <AmiBlitz3_noFPU_r470.ab3@6637>   !fget                                                    ;bsr.w get1bytemain
00024626 <AmiBlitz3_noFPU_r470.ab3@6638>   SUBI.w #$30,D0
0002462A <AmiBlitz3_noFPU_r470.ab3@6639>    BMI.w syntaxerr
0002462E <AmiBlitz3_noFPU_r470.ab3@6640>   CMP.w #$7,D0
00024632 <AmiBlitz3_noFPU_r470.ab3@6641>    BHI.w syntaxerr
00024634 <AmiBlitz3_noFPU_r470.ab3@6642>   MOVE.w D0,D4
00024660 <AmiBlitz3_noFPU_r470.ab3@6643>   !fget
00024662 <AmiBlitz3_noFPU_r470.ab3@6644> RTS                                                        ;bra.w get1bytemain
00024664 <AmiBlitz3_noFPU_r470.ab3@6648>   ADDQ.w #8,D4
00024666 <AmiBlitz3_noFPU_r470.ab3@6651>   MOVEQ.l #$00,D5
0002466A <AmiBlitz3_noFPU_r470.ab3@6652>   SUBI.w #$30,D4
0002466E <AmiBlitz3_noFPU_r470.ab3@6655>   CMP.w #$2D,D0
00024672 <AmiBlitz3_noFPU_r470.ab3@6656>    BEQ.w JL_0_5D9E
00024676 <AmiBlitz3_noFPU_r470.ab3@6657>   CMP.w #$2F,D0
0002467A <AmiBlitz3_noFPU_r470.ab3@6658>    BEQ.w JL_0_5D8C
0002467E <AmiBlitz3_noFPU_r470.ab3@6659> BRA.w syntaxerr
00024680 <AmiBlitz3_noFPU_r470.ab3@6662>   BSET D4,D5
00024682 <AmiBlitz3_noFPU_r470.ab3@6665>   MOVE.w D5,D4
00024684 <AmiBlitz3_noFPU_r470.ab3@6666>   MOVEQ.l #$0F,D5
00024686 <AmiBlitz3_noFPU_r470.ab3@6667> RTS
00024688 <AmiBlitz3_noFPU_r470.ab3@6670>   BSET D4,D5
0002468C <AmiBlitz3_noFPU_r470.ab3@6671>   BSR.w JL_0_5D1E
0002469E <AmiBlitz3_noFPU_r470.ab3@6672>   !compare3                                                ;bsr.w JL_0_5FC0
000246A2 <AmiBlitz3_noFPU_r470.ab3@6673>   BNE.w JL_0_5D70
000246A6 <AmiBlitz3_noFPU_r470.ab3@6674> BRA.w JL_0_5D84
000246A8 <AmiBlitz3_noFPU_r470.ab3@6677>   MOVE.w D4,D1
000246AC <AmiBlitz3_noFPU_r470.ab3@6678>    BSR.w JL_0_5D1E
000246AE <AmiBlitz3_noFPU_r470.ab3@6679>   CMP.w D4,D1
000246B2 <AmiBlitz3_noFPU_r470.ab3@6680>    BLS.w JL_0_5DAC
000246B4 <AmiBlitz3_noFPU_r470.ab3@6681>   EXG.l D4,D1
000246B6 <AmiBlitz3_noFPU_r470.ab3@6684>   BSET D1,D5
000246B8 <AmiBlitz3_noFPU_r470.ab3@6685>   ADDQ.w #1,D1
000246BA <AmiBlitz3_noFPU_r470.ab3@6686>   CMP.w D4,D1
000246BE <AmiBlitz3_noFPU_r470.ab3@6687>    BLS.w JL_0_5DAC
000246D0 <AmiBlitz3_noFPU_r470.ab3@6688>   !compare3                                                ;bsr.w JL_0_5FC0
000246D4 <AmiBlitz3_noFPU_r470.ab3@6689>   BNE.w JL_0_5D70
000246D8 <AmiBlitz3_noFPU_r470.ab3@6690> BRA.w JL_0_5D86
000246DA <AmiBlitz3_noFPU_r470.ab3@6693>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024706 <AmiBlitz3_noFPU_r470.ab3@6694>    !fget
0002470A <AmiBlitz3_noFPU_r470.ab3@6695>   CMP.w #$23,D0
0002470E <AmiBlitz3_noFPU_r470.ab3@6696>    BEQ.w getimm
00024712 <AmiBlitz3_noFPU_r470.ab3@6697>   CMP.w #$28,D0
00024716 <AmiBlitz3_noFPU_r470.ab3@6698>    BEQ.w JL_0_5DFE
0002471A <AmiBlitz3_noFPU_r470.ab3@6699>   CMP.w #$2D,D0
0002471E <AmiBlitz3_noFPU_r470.ab3@6700>    BNE.w JL_0_5E20
0002474A <AmiBlitz3_noFPU_r470.ab3@6701>    !fget                                                   ;bsr.w get1bytemain       -(
0002474E <AmiBlitz3_noFPU_r470.ab3@6702>   CMP.w #$28,D0
00024752 <AmiBlitz3_noFPU_r470.ab3@6703>    BNE.w JL_0_5F4E
00024756 <AmiBlitz3_noFPU_r470.ab3@6704>    BSR.w JL_0_5D3E
0002475A <AmiBlitz3_noFPU_r470.ab3@6705>   CMP.w #$29,D0
0002475E <AmiBlitz3_noFPU_r470.ab3@6706>    BNE.w syntaxerr
00024760 <AmiBlitz3_noFPU_r470.ab3@6707>   MOVEQ.l #$04,D5
0002478C <AmiBlitz3_noFPU_r470.ab3@6708>   !fget                                                    ;bsr.w get1bytemain
0002478E <AmiBlitz3_noFPU_r470.ab3@6709> RTS
00024792 <AmiBlitz3_noFPU_r470.ab3@6713>   BSR.w JL_0_5D3E
00024796 <AmiBlitz3_noFPU_r470.ab3@6714>   CMP.w #$29,D0
0002479A <AmiBlitz3_noFPU_r470.ab3@6715>    BNE.w syntaxerr
000247C6 <AmiBlitz3_noFPU_r470.ab3@6716>   !fget                                                    ;bsr.w get1bytemain
000247CA <AmiBlitz3_noFPU_r470.ab3@6717>   CMP.w #$2B,D0
000247CE <AmiBlitz3_noFPU_r470.ab3@6718>    BEQ.w JL_0_5E1A
000247D0 <AmiBlitz3_noFPU_r470.ab3@6719>   MOVEQ.l #$02,D5
000247D2 <AmiBlitz3_noFPU_r470.ab3@6720> RTS
000247D4 <AmiBlitz3_noFPU_r470.ab3@6724>   MOVEQ.l #$03,D5
00024800 <AmiBlitz3_noFPU_r470.ab3@6725>   !fget                                                    ;bra.w get1bytemain
00024802 <AmiBlitz3_noFPU_r470.ab3@6726> RTS
00024806 <AmiBlitz3_noFPU_r470.ab3@6730>   ORI.w #$20,D0
00024808 <AmiBlitz3_noFPU_r470.ab3@6731>   MOVE.w D0,D1                                            
00024834 <AmiBlitz3_noFPU_r470.ab3@6732>    !fget                                                   ;bsr.w get1bytemain
00024838 <AmiBlitz3_noFPU_r470.ab3@6733>   CMP.w #$64,D1
0002483C <AmiBlitz3_noFPU_r470.ab3@6734>    BNE.w JL_0_5E6C
00024840 <AmiBlitz3_noFPU_r470.ab3@6735>   CMP.w #$30,D0
00024844 <AmiBlitz3_noFPU_r470.ab3@6736>    BCS.w JL_0_5EAE
00024848 <AmiBlitz3_noFPU_r470.ab3@6737>   CMP.w #$37,D0
0002484C <AmiBlitz3_noFPU_r470.ab3@6738>    BHI.w JL_0_5EAE
0002484E <AmiBlitz3_noFPU_r470.ab3@6739>   MOVE.w D0,D4
0002487A <AmiBlitz3_noFPU_r470.ab3@6740>    !fget                                                   ;bsr.w get1bytemain
0002488C <AmiBlitz3_noFPU_r470.ab3@6741>    !compare3                                               ;bsr.w JL_0_5FC0
00024890 <AmiBlitz3_noFPU_r470.ab3@6742>    BEQ.w JL_0_5E64
00024894 <AmiBlitz3_noFPU_r470.ab3@6743>   CMP.w #$2D,D0
00024898 <AmiBlitz3_noFPU_r470.ab3@6744>    BEQ.w JL_0_5D6A
0002489C <AmiBlitz3_noFPU_r470.ab3@6745>   CMP.w #$2F,D0
000248A0 <AmiBlitz3_noFPU_r470.ab3@6746>    BEQ.w JL_0_5D6A
000248A4 <AmiBlitz3_noFPU_r470.ab3@6747> BRA.w JL_0_5EB8
000248A6 <AmiBlitz3_noFPU_r470.ab3@6750>   MOVEQ.l #$00,D5
000248AA <AmiBlitz3_noFPU_r470.ab3@6751>   SUBI.w #$30,D4
000248AC <AmiBlitz3_noFPU_r470.ab3@6752> RTS
000248B0 <AmiBlitz3_noFPU_r470.ab3@6755>    CMP.w #$61,D1
000248B4 <AmiBlitz3_noFPU_r470.ab3@6756>    BNE.w JL_0_5EAE
000248B8 <AmiBlitz3_noFPU_r470.ab3@6757>   CMP.w #$30,D0
000248BC <AmiBlitz3_noFPU_r470.ab3@6758>    BCS.w JL_0_5EAE
000248C0 <AmiBlitz3_noFPU_r470.ab3@6759>   CMP.w #$37,D0
000248C4 <AmiBlitz3_noFPU_r470.ab3@6760>    BHI.w JL_0_5EAE
000248C6 <AmiBlitz3_noFPU_r470.ab3@6761>   MOVE.w D0,D4
000248F2 <AmiBlitz3_noFPU_r470.ab3@6762>    !fget                                                   ;bsr.w get1bytemain
00024904 <AmiBlitz3_noFPU_r470.ab3@6763>    !compare3                                               ;bsr.w JL_0_5FC0
00024908 <AmiBlitz3_noFPU_r470.ab3@6764>    BEQ.w JL_0_5EA6
0002490C <AmiBlitz3_noFPU_r470.ab3@6765>   CMP.w #$2D,D0
00024910 <AmiBlitz3_noFPU_r470.ab3@6766>    BEQ.w JL_0_5D68                                         ;movem
00024914 <AmiBlitz3_noFPU_r470.ab3@6767>   CMP.w #$2F,D0
00024918 <AmiBlitz3_noFPU_r470.ab3@6768>    BEQ.w JL_0_5D68
0002491C <AmiBlitz3_noFPU_r470.ab3@6769> BRA.w JL_0_5EB8
0002491E <AmiBlitz3_noFPU_r470.ab3@6772>   MOVEQ.l #1,d5
00024922 <AmiBlitz3_noFPU_r470.ab3@6773>   SUBI.w #$30,D4
00024926 <AmiBlitz3_noFPU_r470.ab3@6775> BRA 'l10
00024928 <AmiBlitz3_noFPU_r470.ab3@6776>   ADDQ.w #8,d4
0002492A <AmiBlitz3_noFPU_r470.ab3@6777>   MOVEQ #0,d5
0002492C <AmiBlitz3_noFPU_r470.ab3@6778>   BSET d4,d5
0002492E <AmiBlitz3_noFPU_r470.ab3@6779>   MOVE.w d5,d4
00024930 <AmiBlitz3_noFPU_r470.ab3@6780>   MOVEQ.l #$0f,D5                                          ;01
00024932 <AmiBlitz3_noFPU_r470.ab3@6783> RTS
00024936 <AmiBlitz3_noFPU_r470.ab3@6787>   ORI.w #$20,D0
00024938 <AmiBlitz3_noFPU_r470.ab3@6788>   MOVE.w D0,D4
00024964 <AmiBlitz3_noFPU_r470.ab3@6789>    !fget                                                   ;bsr.w get1bytemain
00024976 <AmiBlitz3_noFPU_r470.ab3@6792>   !compare3                                                ;bsr.w JL_0_5FC0
0002497A <AmiBlitz3_noFPU_r470.ab3@6793>    BNE.w JL_0_5EF2
0002497E <AmiBlitz3_noFPU_r470.ab3@6794>   CMP.w #$73,D1
00024982 <AmiBlitz3_noFPU_r470.ab3@6795>    BNE.w JL_0_5EF2
00024986 <AmiBlitz3_noFPU_r470.ab3@6796>   CMP.w #$70,D4
0002498A <AmiBlitz3_noFPU_r470.ab3@6797>    BNE.w JL_0_5EDE
0002499C <AmiBlitz3_noFPU_r470.ab3@6798>    !compare3                                               ;bsr.w JL_0_5FC0
000249A0 <AmiBlitz3_noFPU_r470.ab3@6799>    BNE.w JL_0_5F4E
000249A2 <AmiBlitz3_noFPU_r470.ab3@6800>   MOVEQ.l #$07,D4
000249A4 <AmiBlitz3_noFPU_r470.ab3@6801>   MOVEQ.l #$01,D5
000249A6 <AmiBlitz3_noFPU_r470.ab3@6802> RTS
000249AA <AmiBlitz3_noFPU_r470.ab3@6806>   CMP.w #$72,D4
000249AE <AmiBlitz3_noFPU_r470.ab3@6807>    BNE.w JL_0_5F4E
000249C0 <AmiBlitz3_noFPU_r470.ab3@6808>    !compare3                                               ;bsr.w JL_0_5FC0
000249C4 <AmiBlitz3_noFPU_r470.ab3@6809>    BNE.w JL_0_5F4E
000249C6 <AmiBlitz3_noFPU_r470.ab3@6810>   MOVEQ.l #$0D,D5
000249C8 <AmiBlitz3_noFPU_r470.ab3@6811> RTS
000249CC <AmiBlitz3_noFPU_r470.ab3@6815>   ORI.w #$20,D0
000249D0 <AmiBlitz3_noFPU_r470.ab3@6816>   CMP.w #$63,D1
000249D4 <AmiBlitz3_noFPU_r470.ab3@6817>    BNE.w JL_0_5F22
000249D8 <AmiBlitz3_noFPU_r470.ab3@6818>   CMP.w #$63,D4
000249DC <AmiBlitz3_noFPU_r470.ab3@6819>    BNE.w JL_0_5F4E
000249E0 <AmiBlitz3_noFPU_r470.ab3@6820>   CMP.w #$72,D0
000249E4 <AmiBlitz3_noFPU_r470.ab3@6821>    BNE.w JL_0_5F4E
000249E8 <AmiBlitz3_noFPU_r470.ab3@6822>    BSR.w get1bytemain                                      ;??wy not !fget
000249EC <AmiBlitz3_noFPU_r470.ab3@6823>    BEQ.w JL_0_5F1E
000249F0 <AmiBlitz3_noFPU_r470.ab3@6824>   CMP.w #$2C,D0
000249F4 <AmiBlitz3_noFPU_r470.ab3@6825>    BNE.w JL_0_5F4E
000249F6 <AmiBlitz3_noFPU_r470.ab3@6828>   MOVEQ.l #$0C,D5
000249F8 <AmiBlitz3_noFPU_r470.ab3@6829> RTS
000249FC <AmiBlitz3_noFPU_r470.ab3@6833>   CMP.w #$75,D1
00024A00 <AmiBlitz3_noFPU_r470.ab3@6834>    BNE.w JL_0_5F4E
00024A04 <AmiBlitz3_noFPU_r470.ab3@6835>   CMP.w #$73,D4
00024A08 <AmiBlitz3_noFPU_r470.ab3@6836>    BNE.w JL_0_5F4E
00024A0C <AmiBlitz3_noFPU_r470.ab3@6837>   CMP.w #$70,D0
00024A10 <AmiBlitz3_noFPU_r470.ab3@6838>    BNE.w JL_0_5F4E
00024A14 <AmiBlitz3_noFPU_r470.ab3@6839>    BSR.w get1bytemain                                      ;??wy not !fget
00024A18 <AmiBlitz3_noFPU_r470.ab3@6840>    BEQ.w JL_0_5F4A
00024A1C <AmiBlitz3_noFPU_r470.ab3@6841>   CMP.w #$2C,D0
00024A20 <AmiBlitz3_noFPU_r470.ab3@6842>    BNE.w JL_0_5F4E
00024A22 <AmiBlitz3_noFPU_r470.ab3@6845>   MOVEQ.l #$0E,D5
00024A24 <AmiBlitz3_noFPU_r470.ab3@6846> RTS
00024A26 <AmiBlitz3_noFPU_r470.ab3@6850>   MOVEA.l A4,A5
00024A2A <AmiBlitz3_noFPU_r470.ab3@6851>    BSR.w asmconst
00024A3C <AmiBlitz3_noFPU_r470.ab3@6852>    !compare3                                               ;bsr.w JL_0_5FC0
00024A40 <AmiBlitz3_noFPU_r470.ab3@6853>    BEQ.w JL_0_5FB8
00024A44 <AmiBlitz3_noFPU_r470.ab3@6854>   CMP.w #$2E,D0
00024A48 <AmiBlitz3_noFPU_r470.ab3@6855>    BEQ.w JL_0_5FA0
00024A4C <AmiBlitz3_noFPU_r470.ab3@6856>   CMP.w #$28,D0
00024A50 <AmiBlitz3_noFPU_r470.ab3@6857>    BNE.w syntaxerr
00024A54 <AmiBlitz3_noFPU_r470.ab3@6858>    BSR.w get1bytemain                                      ;??wy not !fget
00024A58 <AmiBlitz3_noFPU_r470.ab3@6859>   ORI.w #$20,D0
00024A5C <AmiBlitz3_noFPU_r470.ab3@6860>   CMP.w #$70,D0
00024A60 <AmiBlitz3_noFPU_r470.ab3@6861>    BNE.w JL_0_5F98
00024A64 <AmiBlitz3_noFPU_r470.ab3@6862>    BSR.w get1bytemain                                      ;??wy not !fget
00024A68 <AmiBlitz3_noFPU_r470.ab3@6863>   ORI.w #$20,D0
00024A6C <AmiBlitz3_noFPU_r470.ab3@6864>   CMP.w #$63,D0
00024A70 <AmiBlitz3_noFPU_r470.ab3@6865>    BNE.w syntaxerr
00024A74 <AmiBlitz3_noFPU_r470.ab3@6866>    BSR.w get1bytemain                                      ;??wy not !fget
00024A78 <AmiBlitz3_noFPU_r470.ab3@6867>    BSR.w JL_0_5FD4
00024A7A <AmiBlitz3_noFPU_r470.ab3@6868>   ADDQ.w #4,D5
00024A7C <AmiBlitz3_noFPU_r470.ab3@6869> RTS
00024A80 <AmiBlitz3_noFPU_r470.ab3@6873>   BSR.w JL_0_5D46
00024A84 <AmiBlitz3_noFPU_r470.ab3@6874> BRA.w JL_0_5FD4
00024A88 <AmiBlitz3_noFPU_r470.ab3@6878>    BSR.w get1bytemain                                     ;??wy not !fget
00024A8C <AmiBlitz3_noFPU_r470.ab3@6879>   ORI.w #$20,D0
00024A90 <AmiBlitz3_noFPU_r470.ab3@6880>   CMP.w #$77,D0
00024A94 <AmiBlitz3_noFPU_r470.ab3@6881>    BEQ.w JL_0_5FBC
00024A98 <AmiBlitz3_noFPU_r470.ab3@6882>   CMP.w #$6C,D0
00024A9C <AmiBlitz3_noFPU_r470.ab3@6883>    BNE.w syntaxerr
00024A9E <AmiBlitz3_noFPU_r470.ab3@6886>   MOVEQ.l #$08,D5
00024AA0 <AmiBlitz3_noFPU_r470.ab3@6887> RTS
00024AA2 <AmiBlitz3_noFPU_r470.ab3@6891>   MOVEQ.l #$07,D5
00024AA4 <AmiBlitz3_noFPU_r470.ab3@6892> RTS
00024AA6 <AmiBlitz3_noFPU_r470.ab3@6896>   TST.w D0
00024AAA <AmiBlitz3_noFPU_r470.ab3@6897>    BEQ.w JL_0_5FD2
00024AAE <AmiBlitz3_noFPU_r470.ab3@6898>   CMP.w #$3A,D0
00024AB2 <AmiBlitz3_noFPU_r470.ab3@6899>    BEQ.w JL_0_5FD2
00024AB6 <AmiBlitz3_noFPU_r470.ab3@6900>   CMP.w #$2C,D0
00024AB8 <AmiBlitz3_noFPU_r470.ab3@6903> RTS
00024ABC <AmiBlitz3_noFPU_r470.ab3@6907>   CMP.w #$2C,D0
00024AC0 <AmiBlitz3_noFPU_r470.ab3@6908>    BNE.w JL_0_6054
00024AC4 <AmiBlitz3_noFPU_r470.ab3@6909>    BSR.w get1bytemain                                      ;??wy not !fget
00024AC8 <AmiBlitz3_noFPU_r470.ab3@6910>   ORI.w #$20,D0
00024ACA <AmiBlitz3_noFPU_r470.ab3@6911>   MOVEQ.l #$00,D1
00024ACE <AmiBlitz3_noFPU_r470.ab3@6912>   CMP.w #$64,D0
00024AD2 <AmiBlitz3_noFPU_r470.ab3@6913>    BEQ.w JL_0_5FFA
00024AD6 <AmiBlitz3_noFPU_r470.ab3@6914>   CMP.w #$61,D0
00024ADA <AmiBlitz3_noFPU_r470.ab3@6915>    BNE.w syntaxerr
00024ADE <AmiBlitz3_noFPU_r470.ab3@6916>   BSET #$F,D1
00024AE2 <AmiBlitz3_noFPU_r470.ab3@6919>    BSR.w get1bytemain                                      ;??wy not !fget
00024AE6 <AmiBlitz3_noFPU_r470.ab3@6920>   SUBI.w #$30,D0
00024AEA <AmiBlitz3_noFPU_r470.ab3@6921>    BMI.w syntaxerr
00024AEE <AmiBlitz3_noFPU_r470.ab3@6922>   CMP.w #$7,D0
00024AF2 <AmiBlitz3_noFPU_r470.ab3@6923>    BHI.w syntaxerr
00024AF4 <AmiBlitz3_noFPU_r470.ab3@6924>   LSL.w #8,D0
00024AF6 <AmiBlitz3_noFPU_r470.ab3@6925>   LSL.w #4,D0
00024AF8 <AmiBlitz3_noFPU_r470.ab3@6926>   OR.w D0,D1
00024AFC <AmiBlitz3_noFPU_r470.ab3@6927>    BSR.w get1bytemain                                      ;??wy not !fget
00024B00 <AmiBlitz3_noFPU_r470.ab3@6928>   CMP.w #$2E,D0
00024B04 <AmiBlitz3_noFPU_r470.ab3@6929>    BNE.w JL_0_6040
00024B08 <AmiBlitz3_noFPU_r470.ab3@6930>    BSR.w get1bytemain                                      ;??wy not !fget
00024B0C <AmiBlitz3_noFPU_r470.ab3@6931>   ORI.w #$20,D0
00024B10 <AmiBlitz3_noFPU_r470.ab3@6932>   CMP.w #$77,D0
00024B14 <AmiBlitz3_noFPU_r470.ab3@6933>    BEQ.w JL_0_603C
00024B18 <AmiBlitz3_noFPU_r470.ab3@6934>   CMP.w #$6C,D0
00024B1C <AmiBlitz3_noFPU_r470.ab3@6935>    BNE.w syntaxerr
00024B20 <AmiBlitz3_noFPU_r470.ab3@6936>   BSET #$B,D1
00024B24 <AmiBlitz3_noFPU_r470.ab3@6939>    BSR.w get1bytemain                                      ;??wy not !fget
00024B28 <AmiBlitz3_noFPU_r470.ab3@6942>    CMP.b #"*",d0                                           ;020 * Mode
00024B2C <AmiBlitz3_noFPU_r470.ab3@6943>             BNE 'l1
00024B30 <AmiBlitz3_noFPU_r470.ab3@6944>             BSR.w get1bytemain                             ;??wy not !fget
00024B34 <AmiBlitz3_noFPU_r470.ab3@6945>             CMP.b #"2",d0
00024B38 <AmiBlitz3_noFPU_r470.ab3@6946>             BNE 'l2
00024B3C <AmiBlitz3_noFPU_r470.ab3@6947>             OR.w #$200,d1
00024B40 <AmiBlitz3_noFPU_r470.ab3@6948> BRA 'l1b
00024B44 <AmiBlitz3_noFPU_r470.ab3@6951>             CMP.b #"4",d0
00024B48 <AmiBlitz3_noFPU_r470.ab3@6952>             BNE 'l3
00024B4C <AmiBlitz3_noFPU_r470.ab3@6953>             OR.w #$400,d1
00024B50 <AmiBlitz3_noFPU_r470.ab3@6954> BRA 'l1b
00024B54 <AmiBlitz3_noFPU_r470.ab3@6957>             CMP.b #"8",d0
00024B58 <AmiBlitz3_noFPU_r470.ab3@6958>             BNE syntaxerr
00024B5C <AmiBlitz3_noFPU_r470.ab3@6959>             OR.w #$600,d1
00024B60 <AmiBlitz3_noFPU_r470.ab3@6962>         BSR.w get1bytemain                                 ;??wy not !fget
00024B64 <AmiBlitz3_noFPU_r470.ab3@6965>   CMP.w #$29,D0
00024B68 <AmiBlitz3_noFPU_r470.ab3@6966>    BNE.w syntaxerr
00024B6E <AmiBlitz3_noFPU_r470.ab3@6967>   MOVE.w D1,extraword
00024B70 <AmiBlitz3_noFPU_r470.ab3@6968>   MOVEQ.l #$06,D5
00024B74 <AmiBlitz3_noFPU_r470.ab3@6969> BRA.w get1bytemain                                         ;??wy not !fget
00024B78 <AmiBlitz3_noFPU_r470.ab3@6973>   CMP.w #")",D0                                            ;")"
00024B7C <AmiBlitz3_noFPU_r470.ab3@6974>    BNE.w errorbracketmiss                                  ; was syntax error
00024B7E <AmiBlitz3_noFPU_r470.ab3@6975>   MOVEQ.l #$05,D5
00024B82 <AmiBlitz3_noFPU_r470.ab3@6976> BRA.w get1bytemain                                         ;??wy not !fget
00024B88 <AmiBlitz3_noFPU_r470.ab3@6983>   MOVEA.l asmbuff,A0
00024B8E <AmiBlitz3_noFPU_r470.ab3@6984>   MOVE.w ininclude,D1
00024B94 <AmiBlitz3_noFPU_r470.ab3@6985>   OR.w inmacro,D1
00024B96 <AmiBlitz3_noFPU_r470.ab3@6986>   MOVE.w D1,(A0)+                                          ;flag!
00024B9A <AmiBlitz3_noFPU_r470.ab3@6987>    BNE.w copyconst
00024B9C <AmiBlitz3_noFPU_r470.ab3@6988>   MOVE.l A5,-(A7)
00024BA0 <AmiBlitz3_noFPU_r470.ab3@6989>    BSR.w copyconst
00024BA6 <AmiBlitz3_noFPU_r470.ab3@6990>   MOVEA.l asmbuff,A0
00024BAA <AmiBlitz3_noFPU_r470.ab3@6991>   CMP.w #$4,D1
00024BAE <AmiBlitz3_noFPU_r470.ab3@6992>    BLS.w asmconst__leave
00024BB4 <AmiBlitz3_noFPU_r470.ab3@6993>   TST.w lc
00024BB8 <AmiBlitz3_noFPU_r470.ab3@6994>    BNE.w asmconst__leave
00024BBA <AmiBlitz3_noFPU_r470.ab3@6995>   ADDQ.w #2,A0
00024BBC <AmiBlitz3_noFPU_r470.ab3@6996>   MOVE.l (A7)+,(A0)+
00024BBE <AmiBlitz3_noFPU_r470.ab3@6997>   CLR.b (A0)
00024BC6 <AmiBlitz3_noFPU_r470.ab3@6998>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00024BC8 <AmiBlitz3_noFPU_r470.ab3@6999> RTS
00024BCA <AmiBlitz3_noFPU_r470.ab3@7003>   NOT.w (A0)
00024BCC <AmiBlitz3_noFPU_r470.ab3@7004>   ADDQ.w #4,A7
00024BCE <AmiBlitz3_noFPU_r470.ab3@7005> RTS
00024BD0 <AmiBlitz3_noFPU_r470.ab3@7008> lc:  Ds.w 1
00024BD6 <AmiBlitz3_noFPU_r470.ab3@7012>   CLR.w lc
00024BD8 <AmiBlitz3_noFPU_r470.ab3@7013>   MOVEQ.l #$00,D1
00024BDA <AmiBlitz3_noFPU_r470.ab3@7016>    ADDQ.w #1,D1                                            ;label name
00024C06 <AmiBlitz3_noFPU_r470.ab3@7017>    !fget                                                   ;bsr.w get1bytemain
00024C0A <AmiBlitz3_noFPU_r470.ab3@7018>    BEQ.w copyconst__done
00024C0E <AmiBlitz3_noFPU_r470.ab3@7019>    CMP.w #$22,d0
00024C12 <AmiBlitz3_noFPU_r470.ab3@7020>    BNE.s copyconst__loop_l10
00024C18 <AmiBlitz3_noFPU_r470.ab3@7021>    NOT.w instringon
00024C1C <AmiBlitz3_noFPU_r470.ab3@7024>    CMP.w #":",d0
00024C20 <AmiBlitz3_noFPU_r470.ab3@7025>    BNE.s copyconst__loop_l11
00024C26 <AmiBlitz3_noFPU_r470.ab3@7026>    TST.w instringon
00024C2A <AmiBlitz3_noFPU_r470.ab3@7027>    BEQ copyconst__done
00024C2C <AmiBlitz3_noFPU_r470.ab3@7030>   TST.w D0
00024C30 <AmiBlitz3_noFPU_r470.ab3@7031>   BPL.w copyconst__notmi
00024C32 <AmiBlitz3_noFPU_r470.ab3@7032>   MOVE.w D0,-(A7)
00024C34 <AmiBlitz3_noFPU_r470.ab3@7033>   LSR.w #8,D0
00024C36 <AmiBlitz3_noFPU_r470.ab3@7034>   MOVE.b D0,(A0)+
00024C38 <AmiBlitz3_noFPU_r470.ab3@7035>   MOVE.w (A7)+,D0
00024C3A <AmiBlitz3_noFPU_r470.ab3@7036>   MOVE.b D0,(A0)+
00024C3C <AmiBlitz3_noFPU_r470.ab3@7037>   ADDQ.w #1,D1
00024C40 <AmiBlitz3_noFPU_r470.ab3@7038> BRA.s copyconst__loop
00024C46 <AmiBlitz3_noFPU_r470.ab3@7041>    TST.w instringon
00024C4A <AmiBlitz3_noFPU_r470.ab3@7042>    BNE.w copyconst__putbyte
00024C50 <AmiBlitz3_noFPU_r470.ab3@7043>    TST.b _dcb
00024C54 <AmiBlitz3_noFPU_r470.ab3@7044>    BNE copyconst__notmi_l10
00024C58 <AmiBlitz3_noFPU_r470.ab3@7045>    CMP.w #$28,D0
00024C5C <AmiBlitz3_noFPU_r470.ab3@7046>    BEQ.w copyconst__done
00024C60 <AmiBlitz3_noFPU_r470.ab3@7049>    CMP.w #$2C,D0
00024C64 <AmiBlitz3_noFPU_r470.ab3@7050>    BEQ.w copyconst__done
00024C68 <AmiBlitz3_noFPU_r470.ab3@7051>    CMP.b #"'",D0
00024C6C <AmiBlitz3_noFPU_r470.ab3@7052>    BNE.w copyconst__putbyte
00024C72 <AmiBlitz3_noFPU_r470.ab3@7053>    MOVE.w D0,lc                                     ;locallabels
00024C74 <AmiBlitz3_noFPU_r470.ab3@7054>    MOVE.l A1,-(A7)
00024C7A <AmiBlitz3_noFPU_r470.ab3@7055>    LEA lastgloballabel,A1
00024C7C <AmiBlitz3_noFPU_r470.ab3@7056>    TST.b (A1)
00024C80 <AmiBlitz3_noFPU_r470.ab3@7057>    BEQ.w nolocerr
00024C82 <AmiBlitz3_noFPU_r470.ab3@7060>   ADDQ.w #1,D1
00024C84 <AmiBlitz3_noFPU_r470.ab3@7061>   MOVE.b (A1)+,(A0)+
00024C88 <AmiBlitz3_noFPU_r470.ab3@7062>    BNE.w copyconst__cloop
00024C8A <AmiBlitz3_noFPU_r470.ab3@7063>   SUBQ.w #1,D1
00024C8C <AmiBlitz3_noFPU_r470.ab3@7064>   SUBQ.w #1,A0
00024C8E <AmiBlitz3_noFPU_r470.ab3@7065>   MOVEA.l (A7)+,A1
00024C90 <AmiBlitz3_noFPU_r470.ab3@7068>   MOVE.b D0,(A0)+
00024C94 <AmiBlitz3_noFPU_r470.ab3@7069> BRA.w copyconst__loop
00024C96 <AmiBlitz3_noFPU_r470.ab3@7072>   CLR.b (A0)
00024C9C <AmiBlitz3_noFPU_r470.ab3@7073>   MOVE.w D1,asmlen2
00024C9E <AmiBlitz3_noFPU_r470.ab3@7074> RTS
00024CA4 <AmiBlitz3_noFPU_r470.ab3@7079>   CMP.l #$80ad,d0
00024CA8 <AmiBlitz3_noFPU_r470.ab3@7080>   BNE.s 'l12
00024CAE <AmiBlitz3_noFPU_r470.ab3@7081> JMP bssseg
00024CB4 <AmiBlitz3_noFPU_r470.ab3@7084>   CMP.l #$807f,d0
00024CB8 <AmiBlitz3_noFPU_r470.ab3@7085>     BNE.s 'l13
00024CBE <AmiBlitz3_noFPU_r470.ab3@7086> JMP chipseg
00024CC4 <AmiBlitz3_noFPU_r470.ab3@7089>   ADDQ.l #1,destpointer                                    ;even
00024CCC <AmiBlitz3_noFPU_r470.ab3@7090>   BCLR #$0,destpointer+3
00024CD0 <AmiBlitz3_noFPU_r470.ab3@7091>   SUBI.w #$803C,D0
00024CD2 <AmiBlitz3_noFPU_r470.ab3@7092>   LSL.w #2,D0
00024CD8 <AmiBlitz3_noFPU_r470.ab3@7093>   MOVEA.l #asmpnts,A0
00024CDC <AmiBlitz3_noFPU_r470.ab3@7094>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00024CE2 <AmiBlitz3_noFPU_r470.ab3@7095>   MOVE.w D0,temp1
00024CE4 <AmiBlitz3_noFPU_r470.ab3@7096>   MOVE.l A0,-(A7)
00024CE6 <AmiBlitz3_noFPU_r470.ab3@7097>   MOVEQ.l #$01,D1
00024D12 <AmiBlitz3_noFPU_r470.ab3@7098>    !fget                                                   ;bsr.w get1bytemain
00024D16 <AmiBlitz3_noFPU_r470.ab3@7099>   CMP.w #$2E,D0
00024D1A <AmiBlitz3_noFPU_r470.ab3@7100>    BNE.w JL_0_6184
00024D46 <AmiBlitz3_noFPU_r470.ab3@7101>   !fget                                                    ;bsr.w get1bytemain
00024D4A <AmiBlitz3_noFPU_r470.ab3@7102>   ORI.w #$20,D0
00024D4E <AmiBlitz3_noFPU_r470.ab3@7103>   CMP.w #$77,D0                                            ;long
00024D52 <AmiBlitz3_noFPU_r470.ab3@7104>    BEQ.w JL_0_618A
00024D56 <AmiBlitz3_noFPU_r470.ab3@7105>   CMP.w #$62,D0                                            ;byte
00024D5A <AmiBlitz3_noFPU_r470.ab3@7106>    BEQ.w JL_0_617A
00024D5E <AmiBlitz3_noFPU_r470.ab3@7107>   CMP.w #$6C,D0                                            ;word
00024D62 <AmiBlitz3_noFPU_r470.ab3@7108>    BEQ.w JL_0_6196
00024D66 <AmiBlitz3_noFPU_r470.ab3@7109>   CMP.w #"s",d0
00024D6A <AmiBlitz3_noFPU_r470.ab3@7110>   BNE syntaxerr
00024D6E <AmiBlitz3_noFPU_r470.ab3@7111> BRA.w JL_0_617A
00024D70 <AmiBlitz3_noFPU_r470.ab3@7114>   MOVEQ.l #$00,D1
00024D74 <AmiBlitz3_noFPU_r470.ab3@7115>   MOVE.w $8(A0),D0
00024D78 <AmiBlitz3_noFPU_r470.ab3@7116> BRA.w JL_0_619E
00024D7A <AmiBlitz3_noFPU_r470.ab3@7119>   MOVEQ.l #$04,D1
00024D7E <AmiBlitz3_noFPU_r470.ab3@7120> BRA.w JL_0_61AE
00024D80 <AmiBlitz3_noFPU_r470.ab3@7123>   MOVEQ.l #$04,D1
00024D84 <AmiBlitz3_noFPU_r470.ab3@7124>   MOVE.w $8(A0),D0
00024D86 <AmiBlitz3_noFPU_r470.ab3@7125>   LSR.w #4,D0
00024D8A <AmiBlitz3_noFPU_r470.ab3@7126> BRA.w JL_0_619E
00024D8C <AmiBlitz3_noFPU_r470.ab3@7129>   MOVEQ.l #$08,D1
00024D90 <AmiBlitz3_noFPU_r470.ab3@7130>   MOVE.w $8(A0),D0
00024D92 <AmiBlitz3_noFPU_r470.ab3@7131>   LSR.w #8,D0
00024D96 <AmiBlitz3_noFPU_r470.ab3@7134>    ANDI.w #$F,D0
00024D9A <AmiBlitz3_noFPU_r470.ab3@7135>   CMP.w #$F,D0
00024D9E <AmiBlitz3_noFPU_r470.ab3@7136>    BNE.w 'cl60
00024DA6 <AmiBlitz3_noFPU_r470.ab3@7139>    CMP.l #"MULS",-6(a0)
00024DAA <AmiBlitz3_noFPU_r470.ab3@7140>    BNE 'c20
00024DB0 <AmiBlitz3_noFPU_r470.ab3@7141>    MOVE.l #$4c000800,d1
00024DB6 <AmiBlitz3_noFPU_r470.ab3@7142> JMP do32
00024DBE <AmiBlitz3_noFPU_r470.ab3@7145>    CMP.l #"MULU",-6(a0)
00024DC2 <AmiBlitz3_noFPU_r470.ab3@7146>    BNE 'c30
00024DC8 <AmiBlitz3_noFPU_r470.ab3@7147>    MOVE.l #$4c000000,d1
00024DCE <AmiBlitz3_noFPU_r470.ab3@7148> JMP do32
00024DD6 <AmiBlitz3_noFPU_r470.ab3@7151>    CMP.l #"DIVS",-6(a0)
00024DDA <AmiBlitz3_noFPU_r470.ab3@7152>    BNE 'c40
00024DE0 <AmiBlitz3_noFPU_r470.ab3@7153>    MOVE.l #$4c400800,d1
00024DE6 <AmiBlitz3_noFPU_r470.ab3@7154> JMP do32
00024DEE <AmiBlitz3_noFPU_r470.ab3@7157>    CMP.l #"DIVU",-6(a0)
00024DF2 <AmiBlitz3_noFPU_r470.ab3@7158>    BNE 'c50
00024DF8 <AmiBlitz3_noFPU_r470.ab3@7159>    MOVE.l #$4c400000,d1
00024DFE <AmiBlitz3_noFPU_r470.ab3@7160> JMP do32
00024E02 <AmiBlitz3_noFPU_r470.ab3@7163> BRA illsizeerr
00024E2E <AmiBlitz3_noFPU_r470.ab3@7166>   !fget                                                    ;bsr.w get1bytemain
00024E34 <AmiBlitz3_noFPU_r470.ab3@7169>   MOVE.w D1,asmsize
00024E36 <AmiBlitz3_noFPU_r470.ab3@7170>   MOVEQ.l #-$01,D3
00024E3A <AmiBlitz3_noFPU_r470.ab3@7171>    BSR.w reget
00024E3E <AmiBlitz3_noFPU_r470.ab3@7172>    BEQ.w JL_0_6200
00024E48 <AmiBlitz3_noFPU_r470.ab3@7173>   MOVE.l #ptr_parameterstore,asmbuff
00024E52 <AmiBlitz3_noFPU_r470.ab3@7175>    MOVE.w oldqflag,instringon
00024E58 <AmiBlitz3_noFPU_r470.ab3@7176>   MOVEA.l lastsourcepos,A5
00024E5C <AmiBlitz3_noFPU_r470.ab3@7177>    BSR.w JL_0_5DC2
00024E5E <AmiBlitz3_noFPU_r470.ab3@7178>   MOVE.l D4,D2                                             ;to src
00024E60 <AmiBlitz3_noFPU_r470.ab3@7179>   MOVE.l D5,D3
00024E6A <AmiBlitz3_noFPU_r470.ab3@7180>   MOVE.w asmlen2,asmlen
00024E6C <AmiBlitz3_noFPU_r470.ab3@7181>   MOVEQ.l #-$01,D5
00024E76 <AmiBlitz3_noFPU_r470.ab3@7182>   MOVE.w extraword,extraword2
00024E7A <AmiBlitz3_noFPU_r470.ab3@7183>   CMP.w #$2C,D0                                            ;','
00024E7E <AmiBlitz3_noFPU_r470.ab3@7184>    BNE.w JL_0_6200
00024E88 <AmiBlitz3_noFPU_r470.ab3@7185>   MOVE.l #namebuff2,asmbuff
00024E8C <AmiBlitz3_noFPU_r470.ab3@7186>    BSR.w JL_0_5DC2                                         ;dest
00024E8E <AmiBlitz3_noFPU_r470.ab3@7189>   MOVEA.l (A7)+,A0
00024E94 <AmiBlitz3_noFPU_r470.ab3@7190>   MOVEA.l destpointer,A1
00024E96 <AmiBlitz3_noFPU_r470.ab3@7191>   MOVEA.l A1,A4
00024E98 <AmiBlitz3_noFPU_r470.ab3@7192>   ADDQ.w #2,A1
00024E9A <AmiBlitz3_noFPU_r470.ab3@7193>   MOVE.w (A0),D1
00024E9C <AmiBlitz3_noFPU_r470.ab3@7194>   TST.w D3
00024EA0 <AmiBlitz3_noFPU_r470.ab3@7195>    BMI.w JL_0_639E
00024EA4 <AmiBlitz3_noFPU_r470.ab3@7196>   MOVE.w $E(A0),D0
00024EA8 <AmiBlitz3_noFPU_r470.ab3@7197>    BPL.w JL_0_6264
00024EAC <AmiBlitz3_noFPU_r470.ab3@7198>   BTST #$0,D0
00024EB0 <AmiBlitz3_noFPU_r470.ab3@7199>    BEQ.w JL_0_6240
00024EB4 <AmiBlitz3_noFPU_r470.ab3@7200>   CMP.w #$1,D5
00024EB8 <AmiBlitz3_noFPU_r470.ab3@7201>    BNE.w JL_0_6240
00024EBC <AmiBlitz3_noFPU_r470.ab3@7202>   CMP.w #$E,D3
00024EC0 <AmiBlitz3_noFPU_r470.ab3@7203>    BEQ.w JL_0_6264
00024EC6 <AmiBlitz3_noFPU_r470.ab3@7204>   MOVE.w temp1,D0
00024EC8 <AmiBlitz3_noFPU_r470.ab3@7205>   ADDQ.w #4,D0
00024ECC <AmiBlitz3_noFPU_r470.ab3@7206> BRA.w JL_0_6256
00024ED0 <AmiBlitz3_noFPU_r470.ab3@7209>   BTST #$1,D0
00024ED4 <AmiBlitz3_noFPU_r470.ab3@7210>    BEQ.w JL_0_6264
00024ED8 <AmiBlitz3_noFPU_r470.ab3@7211>   CMP.w #$B,D3
00024EDC <AmiBlitz3_noFPU_r470.ab3@7212>    BNE.w JL_0_6264
00024EE2 <AmiBlitz3_noFPU_r470.ab3@7213>   MOVE.w temp1,D0
00024EE4 <AmiBlitz3_noFPU_r470.ab3@7216>   ADDQ.w #4,D0
00024EEA <AmiBlitz3_noFPU_r470.ab3@7217>   MOVEA.l #asmpnts,A0
00024EEE <AmiBlitz3_noFPU_r470.ab3@7218>   MOVEA.l $0(A0,D0.W),A0
00024EF0 <AmiBlitz3_noFPU_r470.ab3@7219>   MOVE.w (A0),D1
00024EFA <AmiBlitz3_noFPU_r470.ab3@7222>   MOVE.l #ptr_parameterstore,buff1
00024F04 <AmiBlitz3_noFPU_r470.ab3@7223>   MOVE.l #namebuff2,buff2
00024F08 <AmiBlitz3_noFPU_r470.ab3@7224>   MOVE.l $A(A0),D0
00024F0C <AmiBlitz3_noFPU_r470.ab3@7225>    BEQ.w JL_0_62DC
00024F0E <AmiBlitz3_noFPU_r470.ab3@7226>   MOVEA.l D0,A3
00024F14 <AmiBlitz3_noFPU_r470.ab3@7227>   MOVE.w asmsize,D6
00024F16 <AmiBlitz3_noFPU_r470.ab3@7230>    JSR (A3)
00024F1A <AmiBlitz3_noFPU_r470.ab3@7231>    BPL.w JL_0_629A
00024F1E <AmiBlitz3_noFPU_r470.ab3@7232>   CMP.w #-$2,D0
00024F22 <AmiBlitz3_noFPU_r470.ab3@7233>    BEQ.w illsizeerr
00024F26 <AmiBlitz3_noFPU_r470.ab3@7234> BRA.w illeaerr
00024F2A <AmiBlitz3_noFPU_r470.ab3@7237>   BEQ.w JL_0_62DC
00024F2C <AmiBlitz3_noFPU_r470.ab3@7238>   EXG.l D2,D4
00024F2E <AmiBlitz3_noFPU_r470.ab3@7239>   EXG.l D3,D5
00024F34 <AmiBlitz3_noFPU_r470.ab3@7240>   MOVE.l extraword,D6
00024F36 <AmiBlitz3_noFPU_r470.ab3@7241>   SWAP D6
00024F3C <AmiBlitz3_noFPU_r470.ab3@7242>   MOVE.l D6,extraword
00024F46 <AmiBlitz3_noFPU_r470.ab3@7243>   MOVE.l #namebuff2,buff1
00024F50 <AmiBlitz3_noFPU_r470.ab3@7244>   MOVE.l #ptr_parameterstore,buff2
00024F56 <AmiBlitz3_noFPU_r470.ab3@7245>   MOVE.w asmlen,D6
00024F5C <AmiBlitz3_noFPU_r470.ab3@7246>   MOVE.w asmlen2,D7
00024F62 <AmiBlitz3_noFPU_r470.ab3@7247>   MOVE.w D6,asmlen2
00024F68 <AmiBlitz3_noFPU_r470.ab3@7248>   MOVE.w D7,asmlen
00024F72 <AmiBlitz3_noFPU_r470.ab3@7251>   MOVE.l buff1,asmbuff
00024F76 <AmiBlitz3_noFPU_r470.ab3@7252>   MOVE.w $E(A0),D0
00024F7A <AmiBlitz3_noFPU_r470.ab3@7253>    BEQ.w JL_0_6348
00024F7E <AmiBlitz3_noFPU_r470.ab3@7254>    BMI.w JL_0_6348
00024F82 <AmiBlitz3_noFPU_r470.ab3@7255>    CMP.w #$7000,d1
00024F86 <AmiBlitz3_noFPU_r470.ab3@7256>    BNE 'skip
00024F8A <AmiBlitz3_noFPU_r470.ab3@7257>    CMP.w #$b,d3
00024F8E <AmiBlitz3_noFPU_r470.ab3@7258>    BNE illeaerr
00024F92 <AmiBlitz3_noFPU_r470.ab3@7261>    CMP.w #$1,D0
00024F96 <AmiBlitz3_noFPU_r470.ab3@7262>    BNE.w JL_0_630E
00024F9A <AmiBlitz3_noFPU_r470.ab3@7263>    CMP.w #$B,D3
00024F9E <AmiBlitz3_noFPU_r470.ab3@7264>    BNE.w JL_0_6348
00024FA2 <AmiBlitz3_noFPU_r470.ab3@7267>    BSR.w insasm
00024FA4 <AmiBlitz3_noFPU_r470.ab3@7268>   MOVE.w D4,D2
00024FA6 <AmiBlitz3_noFPU_r470.ab3@7269>   MOVE.w D5,D3
00024FAA <AmiBlitz3_noFPU_r470.ab3@7270> BRA.w JL_0_6364
00024FAE <AmiBlitz3_noFPU_r470.ab3@7273>    CMP.w #$2,D0
00024FB2 <AmiBlitz3_noFPU_r470.ab3@7274>    BNE.w JL_0_6324
00024FB6 <AmiBlitz3_noFPU_r470.ab3@7275>   CMP.w #$8,D3
00024FBA <AmiBlitz3_noFPU_r470.ab3@7276>    BNE.w illeaerr
00024FBC <AmiBlitz3_noFPU_r470.ab3@7277>   MOVEQ.l #$09,D3
00024FC0 <AmiBlitz3_noFPU_r470.ab3@7278> BRA.w JL_0_6348
00024FC4 <AmiBlitz3_noFPU_r470.ab3@7281>    CMP.w #$3,D0
00024FC8 <AmiBlitz3_noFPU_r470.ab3@7282>    BEQ.w JL_0_6302
00024FCC <AmiBlitz3_noFPU_r470.ab3@7283>   CMP.w #$4,D0
00024FD0 <AmiBlitz3_noFPU_r470.ab3@7284>    BEQ.w JL_0_6302
00024FD4 <AmiBlitz3_noFPU_r470.ab3@7285>   CMP.w #$5,D0
00024FD8 <AmiBlitz3_noFPU_r470.ab3@7286>    BNE.w JL_0_6348
00024FDC <AmiBlitz3_noFPU_r470.ab3@7287>   CMP.w #$8,D5
00024FE0 <AmiBlitz3_noFPU_r470.ab3@7288>    BNE.w illeaerr
00024FE2 <AmiBlitz3_noFPU_r470.ab3@7289>   OR.w D2,D1
00024FE4 <AmiBlitz3_noFPU_r470.ab3@7290>   MOVEQ.l #$09,D5
00024FE8 <AmiBlitz3_noFPU_r470.ab3@7293>   MOVE.w $2(A0),D6
00024FEC <AmiBlitz3_noFPU_r470.ab3@7294>   MOVE.b $6(A0),D7
00024FF0 <AmiBlitz3_noFPU_r470.ab3@7295>   MOVEM.l D4-D5,-(A7)
00024FF6 <AmiBlitz3_noFPU_r470.ab3@7296>   MOVE.w extraword2,D4
00024FFA <AmiBlitz3_noFPU_r470.ab3@7297>    BSR.w doea
00024FFE <AmiBlitz3_noFPU_r470.ab3@7298>   MOVEM.l (A7)+,D2-D3
00025000 <AmiBlitz3_noFPU_r470.ab3@7299>   TST.w D3
00025004 <AmiBlitz3_noFPU_r470.ab3@7302>     BMI.w JL_0_6392
0002500A <AmiBlitz3_noFPU_r470.ab3@7303>   MOVE.w extraword,D4
0002500E <AmiBlitz3_noFPU_r470.ab3@7304>   MOVE.w $4(A0),D6
00025012 <AmiBlitz3_noFPU_r470.ab3@7305>   MOVE.b $7(A0),D7
0002501C <AmiBlitz3_noFPU_r470.ab3@7306>   MOVE.l buff2,asmbuff
00025026 <AmiBlitz3_noFPU_r470.ab3@7307>   MOVE.w asmlen2,asmlen
0002502A <AmiBlitz3_noFPU_r470.ab3@7308>    BSR.w doea
0002502E <AmiBlitz3_noFPU_r470.ab3@7309> BRA.w JL_0_63AA
00025032 <AmiBlitz3_noFPU_r470.ab3@7312>   MOVE.w $4(A0),D0
00025036 <AmiBlitz3_noFPU_r470.ab3@7313>    BNE.w illeaerr
0002503A <AmiBlitz3_noFPU_r470.ab3@7314> BRA.w JL_0_63AA
0002503E <AmiBlitz3_noFPU_r470.ab3@7318>   MOVE.w $2(A0),D0
00025042 <AmiBlitz3_noFPU_r470.ab3@7319>   OR.w $4(A0),D0
00025046 <AmiBlitz3_noFPU_r470.ab3@7320>    BNE.w illeaerr
0002504A <AmiBlitz3_noFPU_r470.ab3@7323>   MOVE.w $8(A0),D0
0002504E <AmiBlitz3_noFPU_r470.ab3@7324>   ANDI.w #$F000,D0
00025052 <AmiBlitz3_noFPU_r470.ab3@7325>   CMP.w #-$1000,D0
00025056 <AmiBlitz3_noFPU_r470.ab3@7326>    BEQ.w JL_0_63D2
00025058 <AmiBlitz3_noFPU_r470.ab3@7327>   LSR.w #8,D0
0002505A <AmiBlitz3_noFPU_r470.ab3@7328>   LSR.w #4,D0
0002505E <AmiBlitz3_noFPU_r470.ab3@7329>   MOVE.w $8(A0),D2
00025064 <AmiBlitz3_noFPU_r470.ab3@7330>   MOVE.w asmsize,D3
00025066 <AmiBlitz3_noFPU_r470.ab3@7331>   LSR.w D3,D2
0002506A <AmiBlitz3_noFPU_r470.ab3@7332>   ANDI.w #$F,D2
0002506C <AmiBlitz3_noFPU_r470.ab3@7333>   LSL.w D0,D2
0002506E <AmiBlitz3_noFPU_r470.ab3@7334>   OR.w D2,D1
00025074 <AmiBlitz3_noFPU_r470.ab3@7337>   CMPA.l destbufferend,A4
00025078 <AmiBlitz3_noFPU_r470.ab3@7338>    BCS.w JL_0_63E8
00025080 <AmiBlitz3_noFPU_r470.ab3@7340>   MOVE.w #$FFFF,dontwrite
00025084 <AmiBlitz3_noFPU_r470.ab3@7341> BRA.w JL_0_63EA
00025086 <AmiBlitz3_noFPU_r470.ab3@7344>   MOVE.w D1,(A4)
0002508C <AmiBlitz3_noFPU_r470.ab3@7347>   MOVE.l A1,destpointer
0002508E <AmiBlitz3_noFPU_r470.ab3@7348> RTS
00025094 <AmiBlitz3_noFPU_r470.ab3@7352>   MOVE.l destpointer,-(A7)
0002509A <AmiBlitz3_noFPU_r470.ab3@7353>   MOVE.l A1,destpointer
0002509E <AmiBlitz3_noFPU_r470.ab3@7354>    BSR.w addoff
000250A4 <AmiBlitz3_noFPU_r470.ab3@7355>   MOVEA.l destpointer,A1
000250AA <AmiBlitz3_noFPU_r470.ab3@7356>   MOVE.l (A7)+,destpointer
000250AC <AmiBlitz3_noFPU_r470.ab3@7357> RTS
000250B0 <AmiBlitz3_noFPU_r470.ab3@7361>   MOVEM.l d2-d6,-(a7)
000250B6 <AmiBlitz3_noFPU_r470.ab3@7362>   JSR stripspaces
000250BA <AmiBlitz3_noFPU_r470.ab3@7363>   CMP.b #"d",(a5)+
000250BE <AmiBlitz3_noFPU_r470.ab3@7364>   BNE noreg
000250C0 <AmiBlitz3_noFPU_r470.ab3@7365>   MOVE.b (a5)+,d0
000250C4 <AmiBlitz3_noFPU_r470.ab3@7366>   CMP.b #$30,d0
000250C8 <AmiBlitz3_noFPU_r470.ab3@7367>   BLT noreg
000250CC <AmiBlitz3_noFPU_r470.ab3@7368>   CMP.b #$37,d0
000250D0 <AmiBlitz3_noFPU_r470.ab3@7369>   BGT noreg
000250D4 <AmiBlitz3_noFPU_r470.ab3@7370>   SUB.b #$30,d0
000250D6 <AmiBlitz3_noFPU_r470.ab3@7371>   MOVEQ #0,d3
000250D8 <AmiBlitz3_noFPU_r470.ab3@7372>   MOVE.b d0,d3                                             ;reg1
000250DA <AmiBlitz3_noFPU_r470.ab3@7373>   ASL.l #8,d3
000250DC <AmiBlitz3_noFPU_r470.ab3@7374>   ASL.l #8,d3
000250E2 <AmiBlitz3_noFPU_r470.ab3@7375>   JSR stripspaces
000250E6 <AmiBlitz3_noFPU_r470.ab3@7376>   CMP.b #",",(a5)+
000250EA <AmiBlitz3_noFPU_r470.ab3@7377>   BNE noreg
000250F0 <AmiBlitz3_noFPU_r470.ab3@7378>   JSR stripspaces
000250F4 <AmiBlitz3_noFPU_r470.ab3@7379>   CMP.b #"d",(a5)+
000250F8 <AmiBlitz3_noFPU_r470.ab3@7380>   BNE noreg
000250FA <AmiBlitz3_noFPU_r470.ab3@7381>   MOVE.b (a5)+,d0
000250FE <AmiBlitz3_noFPU_r470.ab3@7382>   CMP.b #$30,d0
00025102 <AmiBlitz3_noFPU_r470.ab3@7383>   BLT noreg
00025106 <AmiBlitz3_noFPU_r470.ab3@7384>   CMP.b #$37,d0
0002510A <AmiBlitz3_noFPU_r470.ab3@7385>   BGT noreg
0002510E <AmiBlitz3_noFPU_r470.ab3@7386>   SUB.b #$30,d0
00025110 <AmiBlitz3_noFPU_r470.ab3@7387>   MOVEQ #0,d4
00025112 <AmiBlitz3_noFPU_r470.ab3@7388>   MOVE.b d0,d4                                             ;reg2
00025114 <AmiBlitz3_noFPU_r470.ab3@7389>   ASL.l #8,d4
00025116 <AmiBlitz3_noFPU_r470.ab3@7390>   ASL.l #4,d4
00025118 <AmiBlitz3_noFPU_r470.ab3@7391>   OR.b d0,d1
0002511A <AmiBlitz3_noFPU_r470.ab3@7392>   OR.l d3,d1
0002511C <AmiBlitz3_noFPU_r470.ab3@7393>   OR.l d4,d1
00025122 <AmiBlitz3_noFPU_r470.ab3@7394>   JSR writelong
00025126 <AmiBlitz3_noFPU_r470.ab3@7395>   MOVEM.l (a7)+,d2-d6
0002512A <AmiBlitz3_noFPU_r470.ab3@7396>   MOVEM.l d1/a1-a3,-(a7)
0002512E <AmiBlitz3_noFPU_r470.ab3@7397> BRA exit
00025132 <AmiBlitz3_noFPU_r470.ab3@7401>   MOVEM.l (a7)+,d2-d6
00025138 <AmiBlitz3_noFPU_r470.ab3@7402>   LEA errtext,a0
0002513A <AmiBlitz3_noFPU_r470.ab3@7403>   MOVE.l a0,-(a7)
00025140 <AmiBlitz3_noFPU_r470.ab3@7404> JMP handle_compileerror
00025146 <AmiBlitz3_noFPU_r470.ab3@7413>   MOVE.w dontwrite,D1
0002514A <AmiBlitz3_noFPU_r470.ab3@7414>    BNE.w asmfixer__done
00025152 <AmiBlitz3_noFPU_r470.ab3@7415>   BTST #$7,make_smallestcode
00025156 <AmiBlitz3_noFPU_r470.ab3@7416>    BEQ.w asmfixer__go
0002515A <AmiBlitz3_noFPU_r470.ab3@7417>   MOVE.w pass(PC),D1
0002515E <AmiBlitz3_noFPU_r470.ab3@7418>    BEQ.w asmfixer__done
00025164 <AmiBlitz3_noFPU_r470.ab3@7421>   MOVEA.l templabel,A2                                     ;insert labels in Code
0002516C <AmiBlitz3_noFPU_r470.ab3@7422>   MOVE.b #1,curtemplabel
00025174 <AmiBlitz3_noFPU_r470.ab3@7423>   MOVE.w #$FFFF,constmode
0002517A <AmiBlitz3_noFPU_r470.ab3@7424>   CLR.w regnum
00025184 <AmiBlitz3_noFPU_r470.ab3@7425>           MOVE.l #forthstack,forthsp
0002518E <AmiBlitz3_noFPU_r470.ab3@7426>           MOVE.l #precstack,precsp
00025192 <AmiBlitz3_noFPU_r470.ab3@7427>    BSR.w prepstack
00025194 <AmiBlitz3_noFPU_r470.ab3@7430>   MOVE.l A2,-(A7)
00025198 <AmiBlitz3_noFPU_r470.ab3@7431>    BSR.w chkstop
0002519A <AmiBlitz3_noFPU_r470.ab3@7432>   MOVEA.l (A7)+,A2
0002519E <AmiBlitz3_noFPU_r470.ab3@7433>   CMPA.w #$0,A2
000251A2 <AmiBlitz3_noFPU_r470.ab3@7434>    BEQ.w asmfixer__done2
000251A8 <AmiBlitz3_noFPU_r470.ab3@7435>    CLR.b iee
000251AE <AmiBlitz3_noFPU_r470.ab3@7436>   MOVE.l A2,asmbuff
000251B2 <AmiBlitz3_noFPU_r470.ab3@7437>   LEA $10(A2),A5
000251B6 <AmiBlitz3_noFPU_r470.ab3@7438>   TST.b $F(A2)
000251BA <AmiBlitz3_noFPU_r470.ab3@7439>    BNE.w asmfixer__skipo
000251BC <AmiBlitz3_noFPU_r470.ab3@7440>   MOVEA.l (A5),A5                                          ;pointer to real text
000251C2 <AmiBlitz3_noFPU_r470.ab3@7443>    CLR.w asmtype
000251C6 <AmiBlitz3_noFPU_r470.ab3@7444>    CMP.b #".",(a5)
000251CA <AmiBlitz3_noFPU_r470.ab3@7445>    BNE.s asmfixer__skipo_l10
000251CC <AmiBlitz3_noFPU_r470.ab3@7446>    MOVE.l a2,-(a7)
000251CE <AmiBlitz3_noFPU_r470.ab3@7447>    ADDQ.l #1,a5
000251D4 <AmiBlitz3_noFPU_r470.ab3@7448>    LEA newtypebase,a2
000251D8 <AmiBlitz3_noFPU_r470.ab3@7449>    BSR getparameter2
000251DC <AmiBlitz3_noFPU_r470.ab3@7450>    BEQ.w syntaxerr
000251E0 <AmiBlitz3_noFPU_r470.ab3@7451>    BSR findtype
000251E4 <AmiBlitz3_noFPU_r470.ab3@7452>    BNE.w notypeerr
000251E8 <AmiBlitz3_noFPU_r470.ab3@7453>    LEA $4(a2),a2
000251EC <AmiBlitz3_noFPU_r470.ab3@7454>    BSR getparameter2
000251F0 <AmiBlitz3_noFPU_r470.ab3@7455>    BEQ.w syntaxerr
000251F4 <AmiBlitz3_noFPU_r470.ab3@7456>    BSR.w findvariable2
000251F8 <AmiBlitz3_noFPU_r470.ab3@7457>    BNE.w notypeerr
000251FC <AmiBlitz3_noFPU_r470.ab3@7458>    MOVE.w $4(a2),d3
000251FE <AmiBlitz3_noFPU_r470.ab3@7459>    EXT.l d3
00025202 <AmiBlitz3_noFPU_r470.ab3@7460> BRA asmfixer__skipo_l30b
00025206 <AmiBlitz3_noFPU_r470.ab3@7463>   CMP.b #"\",(a5)
0002520A <AmiBlitz3_noFPU_r470.ab3@7464>     BNE asmfixer__skipo_l20
0002520C <AmiBlitz3_noFPU_r470.ab3@7465>     ADDQ.l #1,a5
0002520E <AmiBlitz3_noFPU_r470.ab3@7466>    MOVE.l a2,-(a7)
00025210 <AmiBlitz3_noFPU_r470.ab3@7467>    MOVE.l a5,a4
00025216 <AmiBlitz3_noFPU_r470.ab3@7468>    LEA usedpath,a5
0002521A <AmiBlitz3_noFPU_r470.ab3@7469>    CMP.b #"*",(a5)
0002521E <AmiBlitz3_noFPU_r470.ab3@7470>    BNE asmfixer__skipo_lm1
00025220 <AmiBlitz3_noFPU_r470.ab3@7471>    ADDQ.l #1,a5
00025224 <AmiBlitz3_noFPU_r470.ab3@7474>    BSR.w getparameter2
00025228 <AmiBlitz3_noFPU_r470.ab3@7475>    BEQ.w syntaxerr
0002522E <AmiBlitz3_noFPU_r470.ab3@7476>    LEA varbase,A2
00025236 <AmiBlitz3_noFPU_r470.ab3@7477>    MOVE.b #1,newvariable
0002523A <AmiBlitz3_noFPU_r470.ab3@7478>    BSR.w findvariable
00025240 <AmiBlitz3_noFPU_r470.ab3@7479>    CLR.b newvariable
00025246 <AmiBlitz3_noFPU_r470.ab3@7480>    CMP.l #-1,d0
0002524A <AmiBlitz3_noFPU_r470.ab3@7481>    BEQ.w notypeerr
0002524C <AmiBlitz3_noFPU_r470.ab3@7482>    MOVE.l a4,a5
00025250 <AmiBlitz3_noFPU_r470.ab3@7483>    MOVE.l $a(a2),a2
00025254 <AmiBlitz3_noFPU_r470.ab3@7484>    LEA $4(a2),a2
00025258 <AmiBlitz3_noFPU_r470.ab3@7485>    BSR getparameter2
0002525C <AmiBlitz3_noFPU_r470.ab3@7486>    BEQ.w syntaxerr
00025260 <AmiBlitz3_noFPU_r470.ab3@7487>    BSR.w findvariable2
00025264 <AmiBlitz3_noFPU_r470.ab3@7488>    BNE.w notypeerr
00025268 <AmiBlitz3_noFPU_r470.ab3@7489>   MOVE.w $4(A2),D3
0002526A <AmiBlitz3_noFPU_r470.ab3@7490>   EXT.l D3
00025270 <AmiBlitz3_noFPU_r470.ab3@7493>    CMP.b #"[",-1(a5)
00025274 <AmiBlitz3_noFPU_r470.ab3@7494>    BNE asmfixer__skipo_l30c
00025276 <AmiBlitz3_noFPU_r470.ab3@7495>    MOVEQ #0,d0
00025278 <AmiBlitz3_noFPU_r470.ab3@7496>    MOVE.b (a5)+,d0
0002527A <AmiBlitz3_noFPU_r470.ab3@7497>    MOVE.l d3,-(a7)
0002527C <AmiBlitz3_noFPU_r470.ab3@7498>    MOVEQ #0,d3
00025282 <AmiBlitz3_noFPU_r470.ab3@7499>    JSR atoi
00025284 <AmiBlitz3_noFPU_r470.ab3@7500>    MOVE.l (a7)+,d1
00025288 <AmiBlitz3_noFPU_r470.ab3@7501>    MOVE.l $a(a2),a2
0002528C <AmiBlitz3_noFPU_r470.ab3@7502>    MOVE.w 8(a2),d0
0002528E <AmiBlitz3_noFPU_r470.ab3@7503>    MULS d0,d3
00025290 <AmiBlitz3_noFPU_r470.ab3@7504>    ADD.l d1,d3
00025292 <AmiBlitz3_noFPU_r470.ab3@7507>   MOVE.l (a7)+,a2
00025296 <AmiBlitz3_noFPU_r470.ab3@7508> BRA asmfixer__oko
0002529C <AmiBlitz3_noFPU_r470.ab3@7511>   CMP.w #$c,$8(a2)
000252A0 <AmiBlitz3_noFPU_r470.ab3@7512>      BEQ asmfixer__skipo_lf1
000252A6 <AmiBlitz3_noFPU_r470.ab3@7513>      CMP.w #$d,$8(a2)
000252AA <AmiBlitz3_noFPU_r470.ab3@7514>      BEQ asmfixer__skipo_lf1
000252B0 <AmiBlitz3_noFPU_r470.ab3@7517>   JSR AJL_0_BF6E
000252B6 <AmiBlitz3_noFPU_r470.ab3@7520>   MOVEA.l asmbuff,A2
000252BA <AmiBlitz3_noFPU_r470.ab3@7521>    BEQ.w asmfixer__oko
000252BE <AmiBlitz3_noFPU_r470.ab3@7522>   CMP.w #$28,D0
000252C2 <AmiBlitz3_noFPU_r470.ab3@7523>    BEQ.w asmfixer__oko
000252C6 <AmiBlitz3_noFPU_r470.ab3@7524>   CMP.w #$2C,D0
000252CA <AmiBlitz3_noFPU_r470.ab3@7525>    BEQ.w asmfixer__oko
000252CE <AmiBlitz3_noFPU_r470.ab3@7526> BRA.w syntaxerr
000252D6 <AmiBlitz3_noFPU_r470.ab3@7529>   MOVE.b #1,iee
000252DA <AmiBlitz3_noFPU_r470.ab3@7530> BRA asmfixer__skipo_lf2
000252DE <AmiBlitz3_noFPU_r470.ab3@7533>   MOVEA.l $4(A2),A1
000252E2 <AmiBlitz3_noFPU_r470.ab3@7535>   MOVE.w $8(A2),D1                                         ;labelmode
000252E6 <AmiBlitz3_noFPU_r470.ab3@7536>   CMP.w #$5,D1
000252EA <AmiBlitz3_noFPU_r470.ab3@7537>    BNE.w asmfixer__notdan
000252EE <AmiBlitz3_noFPU_r470.ab3@7540>    BSR.w chkword                                         ;word
000252F0 <AmiBlitz3_noFPU_r470.ab3@7543>   MOVE.w D3,(A1)
000252F4 <AmiBlitz3_noFPU_r470.ab3@7544> BRA.w asmfixer__next
000252F8 <AmiBlitz3_noFPU_r470.ab3@7547>   CMP.w #$6,D1
000252FC <AmiBlitz3_noFPU_r470.ab3@7548>    BNE.w asmfixer__notdanxi
00025300 <AmiBlitz3_noFPU_r470.ab3@7551>    BSR.w chkbyte                                         ;byte
00025304 <AmiBlitz3_noFPU_r470.ab3@7554>   MOVE.b D3,$1(A1)
00025308 <AmiBlitz3_noFPU_r470.ab3@7555> BRA.w asmfixer__next
0002530C <AmiBlitz3_noFPU_r470.ab3@7558>    CMP.w #$11,D1                                           ;byte
00025310 <AmiBlitz3_noFPU_r470.ab3@7559>    BEQ.w asmfixer__isbyte2
00025314 <AmiBlitz3_noFPU_r470.ab3@7560>    CMP.w #$c,d1
00025318 <AmiBlitz3_noFPU_r470.ab3@7561>    BEQ asmfixer__single1
0002531C <AmiBlitz3_noFPU_r470.ab3@7562>    CMP.w #$d,d1
00025320 <AmiBlitz3_noFPU_r470.ab3@7563>    BEQ asmfixer__double1
00025324 <AmiBlitz3_noFPU_r470.ab3@7564>   CMP.w #$7,D1
00025328 <AmiBlitz3_noFPU_r470.ab3@7565>    BEQ.w asmfixer__word                                    ;word
0002532C <AmiBlitz3_noFPU_r470.ab3@7566>   CMP.w #$8,D1
00025330 <AmiBlitz3_noFPU_r470.ab3@7567>    BNE.w asmfixer__notabsl
00025336 <AmiBlitz3_noFPU_r470.ab3@7570>   MOVE.w asmtype,D1                                        ;long
0002533A <AmiBlitz3_noFPU_r470.ab3@7571>    BEQ.w asmfixer__notpcrel
0002533E <AmiBlitz3_noFPU_r470.ab3@7572>      BSR.w asmoff
00025340 <AmiBlitz3_noFPU_r470.ab3@7575>   MOVE.l D3,(A1)
00025344 <AmiBlitz3_noFPU_r470.ab3@7576> BRA.w asmfixer__next
0002534A <AmiBlitz3_noFPU_r470.ab3@7580>   fmove.s fp0,0(a1)
0002534E <AmiBlitz3_noFPU_r470.ab3@7581> BRA.w asmfixer__next
00025354 <AmiBlitz3_noFPU_r470.ab3@7585>   fmove.d fp0,0(a1)
00025358 <AmiBlitz3_noFPU_r470.ab3@7586> BRA.w asmfixer__next
0002535C <AmiBlitz3_noFPU_r470.ab3@7590>   CMP.w #$9,D1
00025360 <AmiBlitz3_noFPU_r470.ab3@7591>    BNE.w asmfixer__notdpc
00025362 <AmiBlitz3_noFPU_r470.ab3@7592>   SUB.l A1,D3                                              ;branchword
00025366 <AmiBlitz3_noFPU_r470.ab3@7593>    BSR.w chkword
00025368 <AmiBlitz3_noFPU_r470.ab3@7594>   MOVE.w D3,(A1)
0002536C <AmiBlitz3_noFPU_r470.ab3@7595> BRA.w asmfixer__next
00025370 <AmiBlitz3_noFPU_r470.ab3@7599>   CMP.w #$A,D1
00025374 <AmiBlitz3_noFPU_r470.ab3@7600>    BNE.w asmfixer__imm
00025376 <AmiBlitz3_noFPU_r470.ab3@7601>   SUB.l A1,D3                                              ;branchbyte
0002537A <AmiBlitz3_noFPU_r470.ab3@7602> BRA.w asmfixer__isbyte
0002537E <AmiBlitz3_noFPU_r470.ab3@7606>   CMP.w #$11,d1
00025382 <AmiBlitz3_noFPU_r470.ab3@7607>   BLE asmfixer__imm_org
00025384 <AmiBlitz3_noFPU_r470.ab3@7608>   MOVE.l a3,-(a7)
0002538A <AmiBlitz3_noFPU_r470.ab3@7609>   LEA pluginbase,a3
0002538E <AmiBlitz3_noFPU_r470.ab3@7610>   MOVE.l 8(a2),a0
00025390 <AmiBlitz3_noFPU_r470.ab3@7611>   JSR (a0)                                                 ;hook
00025392 <AmiBlitz3_noFPU_r470.ab3@7612>   MOVE.l (a7)+,a3
00025396 <AmiBlitz3_noFPU_r470.ab3@7613> BRA asmfixer__next
0002539A <AmiBlitz3_noFPU_r470.ab3@7616>   MOVE.w $A(A2),D0
0002539E <AmiBlitz3_noFPU_r470.ab3@7617>    BEQ.w asmfixer__noflag
000253A2 <AmiBlitz3_noFPU_r470.ab3@7618>   CMP.w #$1,D0
000253A6 <AmiBlitz3_noFPU_r470.ab3@7619>    BEQ.w asmfixer__tocount
000253AA <AmiBlitz3_noFPU_r470.ab3@7620>   CMP.w #$3,D0
000253AE <AmiBlitz3_noFPU_r470.ab3@7621>    BEQ.w asmfixer__tomoveq
000253B2 <AmiBlitz3_noFPU_r470.ab3@7622>   CMP.w #$4,D0
000253B6 <AmiBlitz3_noFPU_r470.ab3@7623>    BEQ.w asmfixer__totrap
000253BA <AmiBlitz3_noFPU_r470.ab3@7626>   CMP.w #$B,D1                                             ;long
000253BE <AmiBlitz3_noFPU_r470.ab3@7627>    BEQ.w asmfixer__isabsl
000253C2 <AmiBlitz3_noFPU_r470.ab3@7628> BRA asmfixer__word2                                              ;word
000253C8 <AmiBlitz3_noFPU_r470.ab3@7631>   CMP.l #$F,D3
000253CC <AmiBlitz3_noFPU_r470.ab3@7632>    BHI.w illtraperr
000253CE <AmiBlitz3_noFPU_r470.ab3@7633>   OR.b D3,-(A1)
000253D2 <AmiBlitz3_noFPU_r470.ab3@7634> BRA.w asmfixer__next
000253D8 <AmiBlitz3_noFPU_r470.ab3@7637>   CMP.l #$8,D3
000253DC <AmiBlitz3_noFPU_r470.ab3@7638>    BHI.w illimmerr
000253DE <AmiBlitz3_noFPU_r470.ab3@7639>   TST.l D3
000253E2 <AmiBlitz3_noFPU_r470.ab3@7640>    BEQ.w illimmerr
000253E6 <AmiBlitz3_noFPU_r470.ab3@7641>   ANDI.w #$7,D3
000253E8 <AmiBlitz3_noFPU_r470.ab3@7642>   LSL.w #8,D3
000253EA <AmiBlitz3_noFPU_r470.ab3@7643>   LSL.w #1,D3
000253EC <AmiBlitz3_noFPU_r470.ab3@7644>   OR.w D3,-(A1)
000253F0 <AmiBlitz3_noFPU_r470.ab3@7645> BRA.w asmfixer__next
000253F4 <AmiBlitz3_noFPU_r470.ab3@7648>    BSR.w chkbyte
000253F6 <AmiBlitz3_noFPU_r470.ab3@7649>   MOVE.b D3,-(A1)
000253F8 <AmiBlitz3_noFPU_r470.ab3@7652>   MOVEA.l (A2),A2
000253FC <AmiBlitz3_noFPU_r470.ab3@7653> BRA.w asmfixer__loop
00025402 <AmiBlitz3_noFPU_r470.ab3@7656>   CLR.w constmode
00025408 <AmiBlitz3_noFPU_r470.ab3@7659>   CLR.b curtemplabel
0002540A <AmiBlitz3_noFPU_r470.ab3@7660> RTS
0002540C <AmiBlitz3_noFPU_r470.ab3@7669>   BTST D3,D6
00025410 <AmiBlitz3_noFPU_r470.ab3@7670>    BEQ.w illeaerr
00025414 <AmiBlitz3_noFPU_r470.ab3@7671>    BSR.w makemode
00025418 <AmiBlitz3_noFPU_r470.ab3@7672>   CMP.w #$7,D3
0002541C <AmiBlitz3_noFPU_r470.ab3@7673>    BCS.w doea__skip
0002541E <AmiBlitz3_noFPU_r470.ab3@7674>   MOVE.w D3,D2
00025420 <AmiBlitz3_noFPU_r470.ab3@7675>   SUBQ.w #7,D2
00025424 <AmiBlitz3_noFPU_r470.ab3@7676>   CMP.w #$5,D2
00025428 <AmiBlitz3_noFPU_r470.ab3@7677>    BCS.w doea__skip0
0002542A <AmiBlitz3_noFPU_r470.ab3@7678>   MOVEQ.l #$04,D2
0002542C <AmiBlitz3_noFPU_r470.ab3@7681>   MOVEQ.l #$07,D3
0002542E <AmiBlitz3_noFPU_r470.ab3@7684>   MOVE.b D7,D0
00025432 <AmiBlitz3_noFPU_r470.ab3@7685>   ANDI.w #$F,D0
00025436 <AmiBlitz3_noFPU_r470.ab3@7686>   CMP.w #$F,D0
0002543A <AmiBlitz3_noFPU_r470.ab3@7687>    BEQ.w doea__skip2
0002543C <AmiBlitz3_noFPU_r470.ab3@7688>   LSL.w D0,D3
0002543E <AmiBlitz3_noFPU_r470.ab3@7689>   OR.w D3,D1
00025440 <AmiBlitz3_noFPU_r470.ab3@7692>   LSR.w #4,D7
00025444 <AmiBlitz3_noFPU_r470.ab3@7693>   ANDI.w #$F,D7
00025448 <AmiBlitz3_noFPU_r470.ab3@7694>   CMP.w #$F,D7
0002544C <AmiBlitz3_noFPU_r470.ab3@7695>    BEQ.w doea__skip3
0002544E <AmiBlitz3_noFPU_r470.ab3@7696>   LSL.w D7,D2
00025450 <AmiBlitz3_noFPU_r470.ab3@7697>   OR.w D2,D1
00025452 <AmiBlitz3_noFPU_r470.ab3@7700> RTS
00025458 <AmiBlitz3_noFPU_r470.ab3@7704>   CMP.l #$7F,D3
0002545C <AmiBlitz3_noFPU_r470.ab3@7705>    BGT.w illdiserr
00025462 <AmiBlitz3_noFPU_r470.ab3@7706>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025466 <AmiBlitz3_noFPU_r470.ab3@7707>    BLT.w illdiserr
00025468 <AmiBlitz3_noFPU_r470.ab3@7708> RTS
0002546E <AmiBlitz3_noFPU_r470.ab3@7712>   CMP.l #$7fff,D3
00025472 <AmiBlitz3_noFPU_r470.ab3@7713>    BGT.w illdiserr
00025478 <AmiBlitz3_noFPU_r470.ab3@7714>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
0002547C <AmiBlitz3_noFPU_r470.ab3@7715>    BLT.w illdiserr
0002547E <AmiBlitz3_noFPU_r470.ab3@7716> RTS
00025480 <AmiBlitz3_noFPU_r470.ab3@7721>   MOVE.b (a5)+,d0
00025482 <AmiBlitz3_noFPU_r470.ab3@7722>   CMP.b d1,d0
00025486 <AmiBlitz3_noFPU_r470.ab3@7723>   BEQ 'll10
00025488 <AmiBlitz3_noFPU_r470.ab3@7724>   TST.b d0
0002548C <AmiBlitz3_noFPU_r470.ab3@7725>   BNE 'll20
0002548E <AmiBlitz3_noFPU_r470.ab3@7728>   SUBQ #1,a5
00025490 <AmiBlitz3_noFPU_r470.ab3@7729> RTS
00025492 <AmiBlitz3_noFPU_r470.ab3@7734>   MOVE.b (a5)+,d0
00025496 <AmiBlitz3_noFPU_r470.ab3@7735>   CMP.b #",",d0
0002549A <AmiBlitz3_noFPU_r470.ab3@7736>   BEQ 'll10
0002549E <AmiBlitz3_noFPU_r470.ab3@7737>   CMP.b #";",d0
000254A2 <AmiBlitz3_noFPU_r470.ab3@7738>   BEQ 'll10
000254A6 <AmiBlitz3_noFPU_r470.ab3@7739>  CMP.b #":",d0
000254AA <AmiBlitz3_noFPU_r470.ab3@7740>   BEQ 'll10
000254AC <AmiBlitz3_noFPU_r470.ab3@7743>   TST.b d0
000254B0 <AmiBlitz3_noFPU_r470.ab3@7744>   BNE 'll20
000254B2 <AmiBlitz3_noFPU_r470.ab3@7747>   SUBQ #1,a5
000254B4 <AmiBlitz3_noFPU_r470.ab3@7748> RTS
000254B6 <AmiBlitz3_noFPU_r470.ab3@7752>   ADD.l a2,d1
000254BC <AmiBlitz3_noFPU_r470.ab3@7753>   LEA tempspace,a1
000254BE <AmiBlitz3_noFPU_r470.ab3@7754>   MOVE.l d1,a0
000254C0 <AmiBlitz3_noFPU_r470.ab3@7757>   MOVE.b (a0)+,(a1)+
000254C4 <AmiBlitz3_noFPU_r470.ab3@7758>   BNE.s 'l10
000254C6 <AmiBlitz3_noFPU_r470.ab3@7759>   SUBQ.l #1,a0
000254C8 <AmiBlitz3_noFPU_r470.ab3@7760>   SUBQ.l #1,a1
000254CA <AmiBlitz3_noFPU_r470.ab3@7763>   MOVE.b (a5)+,(a1)+
000254CE <AmiBlitz3_noFPU_r470.ab3@7764>   BNE.s 'l20
000254D0 <AmiBlitz3_noFPU_r470.ab3@7765>   CLR.b (a1)
000254D6 <AmiBlitz3_noFPU_r470.ab3@7766>   LEA tempspace,a5
000254D8 <AmiBlitz3_noFPU_r470.ab3@7767> RTS
000254DC <AmiBlitz3_noFPU_r470.ab3@7771>   MOVEM.l D1-D2/A0,-(A7)
000254DE <AmiBlitz3_noFPU_r470.ab3@7772>   MOVE.l d0,d2
000254E0 <AmiBlitz3_noFPU_r470.ab3@7773>   MOVEQ #0,d1
000254E2 <AmiBlitz3_noFPU_r470.ab3@7774>   MOVE.l a5,a4
000254E4 <AmiBlitz3_noFPU_r470.ab3@7777>   ADDQ.l #1,d1
000254E6 <AmiBlitz3_noFPU_r470.ab3@7778>   MOVE.b (a5)+,d0
000254EA <AmiBlitz3_noFPU_r470.ab3@7779>   CMP.b #",",d0
000254EE <AmiBlitz3_noFPU_r470.ab3@7780>   BEQ 'll10
000254F2 <AmiBlitz3_noFPU_r470.ab3@7781>   CMP.b #";",d0
000254F6 <AmiBlitz3_noFPU_r470.ab3@7782>   BEQ 'll10
000254FA <AmiBlitz3_noFPU_r470.ab3@7783>   CMP.b #":",d0
000254FE <AmiBlitz3_noFPU_r470.ab3@7784>   BEQ 'll10
00025502 <AmiBlitz3_noFPU_r470.ab3@7785>   CMP.b #"(",d0
00025506 <AmiBlitz3_noFPU_r470.ab3@7786>   BEQ 'll10
00025508 <AmiBlitz3_noFPU_r470.ab3@7787>   TST.b d0
0002550C <AmiBlitz3_noFPU_r470.ab3@7788>   BNE 'll20
0002550E <AmiBlitz3_noFPU_r470.ab3@7791>   SUBQ #1,a5
00025512 <AmiBlitz3_noFPU_r470.ab3@7792>   CMP.b #"'",(a4)
00025516 <AmiBlitz3_noFPU_r470.ab3@7793>   BEQ 'llocal
0002551C <AmiBlitz3_noFPU_r470.ab3@7794>   TST.w inmacro
00025520 <AmiBlitz3_noFPU_r470.ab3@7795>   BNE 'lmacro
00025522 <AmiBlitz3_noFPU_r470.ab3@7796>   MOVEQ.l #$14+4,D0
00025524 <AmiBlitz3_noFPU_r470.ab3@7797>   ADD.l d1,d0
00025526 <AmiBlitz3_noFPU_r470.ab3@7798>   MOVE.l d1,-(a7)
00025528 <AmiBlitz3_noFPU_r470.ab3@7799>   MOVEQ.l #$01,D1
0002552E <AmiBlitz3_noFPU_r470.ab3@7800>   MOVEA.l _execbase,A6
00025534 <AmiBlitz3_noFPU_r470.ab3@7801>   MOVE.l mempool2,a0
00025538 <AmiBlitz3_noFPU_r470.ab3@7802>   JSR _AllocPooled(a6)
0002553A <AmiBlitz3_noFPU_r470.ab3@7804>   MOVE.l (a7)+,d1
0002553C <AmiBlitz3_noFPU_r470.ab3@7805>   TST.l d0
00025540 <AmiBlitz3_noFPU_r470.ab3@7806>   BEQ nomemory
00025542 <AmiBlitz3_noFPU_r470.ab3@7807>   MOVEA.l D0,A0
0002554A <AmiBlitz3_noFPU_r470.ab3@7809>   MOVE.w linenumat+2,$A(A0)
00025550 <AmiBlitz3_noFPU_r470.ab3@7811>   MOVE.l templabel,(A0)
00025556 <AmiBlitz3_noFPU_r470.ab3@7812>   MOVE.l A0,templabel
0002555E <AmiBlitz3_noFPU_r470.ab3@7813>   MOVE.l destpointer,$4(A0)
00025562 <AmiBlitz3_noFPU_r470.ab3@7814>   MOVE.l d2,$8(A0)
00025566 <AmiBlitz3_noFPU_r470.ab3@7815>   LEA $E(A0),A0
0002556A <AmiBlitz3_noFPU_r470.ab3@7816>   MOVE.b #$14,(A0)+
0002556C <AmiBlitz3_noFPU_r470.ab3@7817>   CLR.b (a0)+
0002556E <AmiBlitz3_noFPU_r470.ab3@7819>   MOVE.l a0,d2
00025570 <AmiBlitz3_noFPU_r470.ab3@7820>   ADDQ.l #4,d2
00025572 <AmiBlitz3_noFPU_r470.ab3@7821>   MOVE.l d2,(a0)+
00025574 <AmiBlitz3_noFPU_r470.ab3@7824>   MOVE.b (a4)+,(a0)+
00025576 <AmiBlitz3_noFPU_r470.ab3@7825>   SUBQ.l #1,d1
0002557A <AmiBlitz3_noFPU_r470.ab3@7826>   BNE 'lc1
0002557C <AmiBlitz3_noFPU_r470.ab3@7827>   CLR.b (a0)+
00025582 <AmiBlitz3_noFPU_r470.ab3@7828>   MOVE.w linenumat,(a0)
00025586 <AmiBlitz3_noFPU_r470.ab3@7829>   MOVEM.l (A7)+,D1-D2/A0
00025588 <AmiBlitz3_noFPU_r470.ab3@7830> RTS
0002558A <AmiBlitz3_noFPU_r470.ab3@7833>   MOVEQ.l #$10+2,D0
0002558C <AmiBlitz3_noFPU_r470.ab3@7834>   ADD.l d1,d0
00025590 <AmiBlitz3_noFPU_r470.ab3@7835>   MOVEM.l a4/d3,-(a7)
00025592 <AmiBlitz3_noFPU_r470.ab3@7836>   MOVE.l d1,d3
00025594 <AmiBlitz3_noFPU_r470.ab3@7837>   MOVEQ.l #$01,D1
0002559A <AmiBlitz3_noFPU_r470.ab3@7838>   MOVEA.l _execbase,A6
000255A0 <AmiBlitz3_noFPU_r470.ab3@7839>   MOVE.l mempool2,a0
000255A4 <AmiBlitz3_noFPU_r470.ab3@7840>   JSR _AllocPooled(a6)
000255A6 <AmiBlitz3_noFPU_r470.ab3@7842>   TST.l d0
000255AA <AmiBlitz3_noFPU_r470.ab3@7843>   BEQ nomemory
000255AC <AmiBlitz3_noFPU_r470.ab3@7844>   MOVEA.l D0,A0
000255B4 <AmiBlitz3_noFPU_r470.ab3@7847>   MOVE.w linenumat+2,$C(A0)
000255BA <AmiBlitz3_noFPU_r470.ab3@7848>   MOVE.l templabel,(A0)
000255C0 <AmiBlitz3_noFPU_r470.ab3@7849>   MOVE.l A0,templabel
000255C8 <AmiBlitz3_noFPU_r470.ab3@7850>   MOVE.l destpointer,$4(A0)
000255CC <AmiBlitz3_noFPU_r470.ab3@7851>   MOVE.l d2,$8(A0)
000255D0 <AmiBlitz3_noFPU_r470.ab3@7852>   LEA $E(A0),A0
000255D2 <AmiBlitz3_noFPU_r470.ab3@7853>   MOVE.b d3,(A0)+
000255D8 <AmiBlitz3_noFPU_r470.ab3@7854>   ADD.b #$10,-1(a0)
000255DC <AmiBlitz3_noFPU_r470.ab3@7855>   MOVE.b #$1,(a0)+
000255DE <AmiBlitz3_noFPU_r470.ab3@7856>   SUBQ.w #1,d3
000255E0 <AmiBlitz3_noFPU_r470.ab3@7859>   MOVE.b (a4)+,(a0)+
000255E2 <AmiBlitz3_noFPU_r470.ab3@7860>   SUBQ.l #1,d3
000255E6 <AmiBlitz3_noFPU_r470.ab3@7861>   BNE.s 'lm2
000255E8 <AmiBlitz3_noFPU_r470.ab3@7862>   CLR.b (a0)+
000255EE <AmiBlitz3_noFPU_r470.ab3@7863>   MOVE.w linenumat,(a0)
000255F2 <AmiBlitz3_noFPU_r470.ab3@7864>   MOVEM.l (a7)+,d3/a4
000255F6 <AmiBlitz3_noFPU_r470.ab3@7865>   MOVEM.l (A7)+,D1-D2/A0
000255F8 <AmiBlitz3_noFPU_r470.ab3@7866> RTS
000255FE <AmiBlitz3_noFPU_r470.ab3@7869>   LEA lastgloballabel,a1
00025600 <AmiBlitz3_noFPU_r470.ab3@7872>   ADDQ.l #1,d1
00025602 <AmiBlitz3_noFPU_r470.ab3@7873>   TST.b (a1)+
00025606 <AmiBlitz3_noFPU_r470.ab3@7874>   BNE.s 'll11
00025608 <AmiBlitz3_noFPU_r470.ab3@7875>   MOVEQ.l #$10+2,D0
0002560A <AmiBlitz3_noFPU_r470.ab3@7876>   ADD.l d1,d0
0002560E <AmiBlitz3_noFPU_r470.ab3@7877>   MOVEM.l a4/d3,-(a7)
00025610 <AmiBlitz3_noFPU_r470.ab3@7878>   MOVE.l d1,d3
00025612 <AmiBlitz3_noFPU_r470.ab3@7879>   MOVEQ.l #$01,D1
00025618 <AmiBlitz3_noFPU_r470.ab3@7880>   MOVEA.l _execbase,A6
0002561E <AmiBlitz3_noFPU_r470.ab3@7881>   MOVE.l mempool2,a0
00025622 <AmiBlitz3_noFPU_r470.ab3@7882>   JSR _AllocPooled(a6)
00025624 <AmiBlitz3_noFPU_r470.ab3@7884>   TST.l d0
00025628 <AmiBlitz3_noFPU_r470.ab3@7885>   BEQ nomemory
0002562A <AmiBlitz3_noFPU_r470.ab3@7886>   MOVEA.l D0,A0
00025632 <AmiBlitz3_noFPU_r470.ab3@7889>   MOVE.w linenumat+2,$C(A0)
00025638 <AmiBlitz3_noFPU_r470.ab3@7890>   MOVE.l templabel,(A0)
0002563E <AmiBlitz3_noFPU_r470.ab3@7891>   MOVE.l A0,templabel
00025646 <AmiBlitz3_noFPU_r470.ab3@7892>   MOVE.l destpointer,$4(A0)
0002564A <AmiBlitz3_noFPU_r470.ab3@7893>   MOVE.l d2,$8(A0)
0002564E <AmiBlitz3_noFPU_r470.ab3@7894>   LEA $E(A0),A0
00025650 <AmiBlitz3_noFPU_r470.ab3@7895>   MOVE.b d3,(A0)+
00025656 <AmiBlitz3_noFPU_r470.ab3@7896>   ADD.b #$10,-1(a0)
0002565A <AmiBlitz3_noFPU_r470.ab3@7897>   MOVE.b #$1,(a0)+
0002565C <AmiBlitz3_noFPU_r470.ab3@7898>   SUBQ.w #1,d3
00025662 <AmiBlitz3_noFPU_r470.ab3@7899>   LEA lastgloballabel,a1
00025664 <AmiBlitz3_noFPU_r470.ab3@7902>   SUBQ.l #1,d3
00025666 <AmiBlitz3_noFPU_r470.ab3@7903>   MOVE.b (a1)+,(a0)+
0002566A <AmiBlitz3_noFPU_r470.ab3@7904>   BNE.s 'lm3
0002566C <AmiBlitz3_noFPU_r470.ab3@7905>   SUBQ.l #1,a0
0002566E <AmiBlitz3_noFPU_r470.ab3@7908>   MOVE.b (a4)+,(a0)+
00025670 <AmiBlitz3_noFPU_r470.ab3@7909>   SUBQ.l #1,d3
00025674 <AmiBlitz3_noFPU_r470.ab3@7910>   BNE.s 'lm1
00025676 <AmiBlitz3_noFPU_r470.ab3@7911>   CLR.b (a0)+
0002567C <AmiBlitz3_noFPU_r470.ab3@7912>   MOVE.w linenumat,(a0)
00025680 <AmiBlitz3_noFPU_r470.ab3@7913>   MOVEM.l (a7)+,d3/a4
00025684 <AmiBlitz3_noFPU_r470.ab3@7914>   MOVEM.l (A7)+,D1-D2/A0
00025686 <AmiBlitz3_noFPU_r470.ab3@7915> RTS
000256B0 <AmiBlitz3_noFPU_r470.ab3@7919>   !basic
00025712 <AmiBlitz3_noFPU_r470.ab3@7920>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025724 <AmiBlitz3_noFPU_r470.ab3@7921>   loop Delay_ 1
0002572A <AmiBlitz3_noFPU_r470.ab3@7922> Goto loop
0002572E <AmiBlitz3_noFPU_r470.ab3@7926>   MOVEM.l D0-D2/A0,-(A7)
00025732 <AmiBlitz3_noFPU_r470.ab3@7927>   MOVE.w $E(A0),-(A7)
00025736 <AmiBlitz3_noFPU_r470.ab3@7928>    BPL.w insasm__ok
00025738 <AmiBlitz3_noFPU_r470.ab3@7929>   CLR.w (A7)
0002573A <AmiBlitz3_noFPU_r470.ab3@7932>   MOVE.l A1,-(A7)
0002573C <AmiBlitz3_noFPU_r470.ab3@7933>   MOVEQ.l #$10+2,D0
00025742 <AmiBlitz3_noFPU_r470.ab3@7934>   ADD.w asmlen,D0
00025744 <AmiBlitz3_noFPU_r470.ab3@7935>   MOVE.w D0,D2
00025746 <AmiBlitz3_noFPU_r470.ab3@7936>   MOVEQ.l #$01,D1
0002574C <AmiBlitz3_noFPU_r470.ab3@7937>   MOVEA.l _execbase,A6
00025752 <AmiBlitz3_noFPU_r470.ab3@7938>   MOVE.l mempool2,a0
00025756 <AmiBlitz3_noFPU_r470.ab3@7939>   JSR _AllocPooled(a6)
00025758 <AmiBlitz3_noFPU_r470.ab3@7941>   MOVEA.l D0,A0
00025760 <AmiBlitz3_noFPU_r470.ab3@7944>   MOVE.w linenumat+2,$C(A0)
00025766 <AmiBlitz3_noFPU_r470.ab3@7945>   MOVE.l templabel,(A0)
0002576C <AmiBlitz3_noFPU_r470.ab3@7946>   MOVE.l A0,templabel
00025770 <AmiBlitz3_noFPU_r470.ab3@7947>   MOVE.l (A7),$4(A0)
00025774 <AmiBlitz3_noFPU_r470.ab3@7948>   MOVE.w d3,$8(A0)
0002577A <AmiBlitz3_noFPU_r470.ab3@7949>   MOVE.w $4(A7),$A(A0)
0002577E <AmiBlitz3_noFPU_r470.ab3@7950>   LEA $E(A0),A0
00025780 <AmiBlitz3_noFPU_r470.ab3@7951>   MOVE.b D2,(A0)+                                           ;length
00025786 <AmiBlitz3_noFPU_r470.ab3@7952>   MOVEA.l asmbuff,A1
00025788 <AmiBlitz3_noFPU_r470.ab3@7953>   ADDQ.w #1,A1
0002578A <AmiBlitz3_noFPU_r470.ab3@7954>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
0002578E <AmiBlitz3_noFPU_r470.ab3@7955>    BNE.w insasm__loop
00025790 <AmiBlitz3_noFPU_r470.ab3@7956>   MOVE.l (A1)+,(A0)+
00025796 <AmiBlitz3_noFPU_r470.ab3@7957>   MOVE.w linenumat,(a0)
0002579A <AmiBlitz3_noFPU_r470.ab3@7958> BRA.w insasm__loopdone
0002579C <AmiBlitz3_noFPU_r470.ab3@7961>    MOVE.b (A1)+,(A0)+
000257A0 <AmiBlitz3_noFPU_r470.ab3@7962>    BNE.w insasm__loop
000257A6 <AmiBlitz3_noFPU_r470.ab3@7963>    MOVE.w linenumat,(a0)
000257A8 <AmiBlitz3_noFPU_r470.ab3@7966>   MOVEA.l (A7)+,A1
000257AA <AmiBlitz3_noFPU_r470.ab3@7967>   ADDQ.w #2,A7
000257AE <AmiBlitz3_noFPU_r470.ab3@7968>   MOVEM.l (A7)+,D0-D2/A0
000257B0 <AmiBlitz3_noFPU_r470.ab3@7969> RTS
000257B4 <AmiBlitz3_noFPU_r470.ab3@7973>   CMP.w #$5,D3
000257B8 <AmiBlitz3_noFPU_r470.ab3@7974>    BCS.w makemode__done
000257BC <AmiBlitz3_noFPU_r470.ab3@7975>   CMP.w #$B,D3
000257C0 <AmiBlitz3_noFPU_r470.ab3@7976>    BHI.w makemode__done2
000257C4 <AmiBlitz3_noFPU_r470.ab3@7977>    BEQ.w makemode__imm
000257C8 <AmiBlitz3_noFPU_r470.ab3@7978>    BSR.w insasm
000257CC <AmiBlitz3_noFPU_r470.ab3@7979>   CMP.w #$5,D3
000257D0 <AmiBlitz3_noFPU_r470.ab3@7980>    BEQ.w makemode__word
000257D4 <AmiBlitz3_noFPU_r470.ab3@7981>   CMP.w #$6,D3
000257D8 <AmiBlitz3_noFPU_r470.ab3@7982>    BEQ.w makemode__dxi
000257DC <AmiBlitz3_noFPU_r470.ab3@7983>   CMP.w #$7,D3
000257E0 <AmiBlitz3_noFPU_r470.ab3@7984>    BEQ.w makemode__word
000257E4 <AmiBlitz3_noFPU_r470.ab3@7985>   CMP.w #$8,D3
000257E8 <AmiBlitz3_noFPU_r470.ab3@7986>    BEQ.w makemode__long
000257EC <AmiBlitz3_noFPU_r470.ab3@7987>   CMP.w #$9,D3
000257F0 <AmiBlitz3_noFPU_r470.ab3@7988>    BEQ.w makemode__word
000257F6 <AmiBlitz3_noFPU_r470.ab3@7992>   CMPA.l destbufferend,A1
000257FA <AmiBlitz3_noFPU_r470.ab3@7993>    BCS.w makemode__ok7
000257FC <AmiBlitz3_noFPU_r470.ab3@7994>   ADDQ.w #2,A1
000257FE <AmiBlitz3_noFPU_r470.ab3@7995> RTS
00025800 <AmiBlitz3_noFPU_r470.ab3@7998>   MOVE.w D4,(A1)+
00025802 <AmiBlitz3_noFPU_r470.ab3@7999> RTS
0002580A <AmiBlitz3_noFPU_r470.ab3@8002>   CMPI.w #$8,asmsize
0002580E <AmiBlitz3_noFPU_r470.ab3@8003>    BCC.w makemode__immlong
00025810 <AmiBlitz3_noFPU_r470.ab3@8004>   MOVEQ.l #$10,D3
00025814 <AmiBlitz3_noFPU_r470.ab3@8005>    BSR.w insasm
00025816 <AmiBlitz3_noFPU_r470.ab3@8006>   MOVEQ.l #$0B,D3
0002581A <AmiBlitz3_noFPU_r470.ab3@8007> BRA.w makemode__word
0002581E <AmiBlitz3_noFPU_r470.ab3@8010>   BSR.w insasm
00025820 <AmiBlitz3_noFPU_r470.ab3@8013>   ADDQ.w #2,A1
00025822 <AmiBlitz3_noFPU_r470.ab3@8016>   ADDQ.w #2,A1
00025824 <AmiBlitz3_noFPU_r470.ab3@8017> RTS
00025828 <AmiBlitz3_noFPU_r470.ab3@8020>   CMP.w #$F,D3
0002582C <AmiBlitz3_noFPU_r470.ab3@8021>    BNE.w makemode__done
00025832 <AmiBlitz3_noFPU_r470.ab3@8022>   CMPA.l destbufferend,A1
00025836 <AmiBlitz3_noFPU_r470.ab3@8023>    BCS.w makemode__ok3
00025838 <AmiBlitz3_noFPU_r470.ab3@8024>   ADDQ.w #2,A1
0002583A <AmiBlitz3_noFPU_r470.ab3@8025>   ADDQ.w #4,A7
0002583C <AmiBlitz3_noFPU_r470.ab3@8026> RTS
0002583E <AmiBlitz3_noFPU_r470.ab3@8029>   MOVE.w D2,(A1)+
00025840 <AmiBlitz3_noFPU_r470.ab3@8030>   ADDQ.w #4,A7
00025842 <AmiBlitz3_noFPU_r470.ab3@8033> RTS
00025846 <AmiBlitz3_noFPU_r470.ab3@8037>   BSR.w storeloc
00025850 <AmiBlitz3_noFPU_r470.ab3@8038>   MOVE.l linenumat,oldline
00025852 <AmiBlitz3_noFPU_r470.ab3@8039>   MOVEQ.l #$00,D1
00025856 <AmiBlitz3_noFPU_r470.ab3@8040>    BSR.w get1bytemain
0002585A <AmiBlitz3_noFPU_r470.ab3@8041>    BEQ.w JL_0_676E
0002585C <AmiBlitz3_noFPU_r470.ab3@8042>   MOVEQ.l #$00,D3
00025860 <AmiBlitz3_noFPU_r470.ab3@8043> BRA.w JL_0_6726
00025864 <AmiBlitz3_noFPU_r470.ab3@8046>    BSR.w get1bytemain
00025868 <AmiBlitz3_noFPU_r470.ab3@8047>    BNE.w JL_0_671C
0002586A <AmiBlitz3_noFPU_r470.ab3@8050>   TST.w D3
0002586E <AmiBlitz3_noFPU_r470.ab3@8051>    BNE.w brackets_                                         ;syntax error brackets
00025872 <AmiBlitz3_noFPU_r470.ab3@8052> BRA.w JL_0_676C
00025878 <AmiBlitz3_noFPU_r470.ab3@8055>    MOVE.w instringon,D4
0002587C <AmiBlitz3_noFPU_r470.ab3@8057>      BEQ JL_0_6726
0002587E <AmiBlitz3_noFPU_r470.ab3@8060>     MOVEQ #0,d0
00025880 <AmiBlitz3_noFPU_r470.ab3@8061>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025886 <AmiBlitz3_noFPU_r470.ab3@8062>      MOVE.w d0,lastchar
0002588A <AmiBlitz3_noFPU_r470.ab3@8063>      BEQ ready
0002588E <AmiBlitz3_noFPU_r470.ab3@8064>      CMP.b #$22,d0
00025892 <AmiBlitz3_noFPU_r470.ab3@8065>      BNE 'l1
00025898 <AmiBlitz3_noFPU_r470.ab3@8066>      NOT.w instringon
0002589C <AmiBlitz3_noFPU_r470.ab3@8067> BRA JL_0_670A
000258A0 <AmiBlitz3_noFPU_r470.ab3@8070>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
000258A4 <AmiBlitz3_noFPU_r470.ab3@8071>            BNE 'l10
000258A8 <AmiBlitz3_noFPU_r470.ab3@8072>            CMP.b #"@",(a5)
000258AC <AmiBlitz3_noFPU_r470.ab3@8073>            BNE 'l10
000258B2 <AmiBlitz3_noFPU_r470.ab3@8076>            TST.w ininclude
000258B6 <AmiBlitz3_noFPU_r470.ab3@8077>            BNE 'inc
000258BC <AmiBlitz3_noFPU_r470.ab3@8078>            MOVE.l sourceline3,a5
000258C2 <AmiBlitz3_noFPU_r470.ab3@8079>            CMP.l #0,a5
000258C6 <AmiBlitz3_noFPU_r470.ab3@8080>            BNE 'l11t
000258CC <AmiBlitz3_noFPU_r470.ab3@8081>            MOVEA.l sourceline,A5
000258CE <AmiBlitz3_noFPU_r470.ab3@8084>            MOVEA.l (A5),A5
000258D4 <AmiBlitz3_noFPU_r470.ab3@8085>            CMP.l #0,a5
000258D8 <AmiBlitz3_noFPU_r470.ab3@8086>            BEQ JL_0_676C
000258DE <AmiBlitz3_noFPU_r470.ab3@8087>            MOVE.l a5,sourceline3
000258E2 <AmiBlitz3_noFPU_r470.ab3@8088>            LEA $9(A5),A5
000258E6 <AmiBlitz3_noFPU_r470.ab3@8089> BRA 'l11
000258E8 <AmiBlitz3_noFPU_r470.ab3@8092>            ADDQ.l #1,a5
000258EA <AmiBlitz3_noFPU_r470.ab3@8093>            TST.b (a5)
000258EE <AmiBlitz3_noFPU_r470.ab3@8094>            BNE 'inc
000258F0 <AmiBlitz3_noFPU_r470.ab3@8098>            ADDQ.l #1,a5
000258F2 <AmiBlitz3_noFPU_r470.ab3@8099>            TST.b (a5)
000258F6 <AmiBlitz3_noFPU_r470.ab3@8100>            BEQ illeolerr
000258F8 <AmiBlitz3_noFPU_r470.ab3@8101>            MOVE.l a5,-(a7)
000258FC <AmiBlitz3_noFPU_r470.ab3@8104>       CMP.b #" ",(a5)+
00025900 <AmiBlitz3_noFPU_r470.ab3@8105>       BEQ 'l110
00025906 <AmiBlitz3_noFPU_r470.ab3@8106>        CMP.b #";",-1(a5)
00025908 <AmiBlitz3_noFPU_r470.ab3@8107>        MOVE.l (a7)+,a5
0002590C <AmiBlitz3_noFPU_r470.ab3@8108>        BEQ 'l111
00025910 <AmiBlitz3_noFPU_r470.ab3@8109> BRA JL_0_670A
00025914 <AmiBlitz3_noFPU_r470.ab3@8112>    CMP.w #$29,D0
00025918 <AmiBlitz3_noFPU_r470.ab3@8113>    BNE.w JL_0_673A
0002591A <AmiBlitz3_noFPU_r470.ab3@8114>   TST.w D3
0002591E <AmiBlitz3_noFPU_r470.ab3@8115>    BEQ.w JL_0_676C
00025920 <AmiBlitz3_noFPU_r470.ab3@8118>   SUBQ.w #1,D3
00025924 <AmiBlitz3_noFPU_r470.ab3@8119> BRA.w JL_0_670A
00025928 <AmiBlitz3_noFPU_r470.ab3@8122>    CMP.w #$7D,D0
0002592C <AmiBlitz3_noFPU_r470.ab3@8123>    BEQ.w JL_0_6734
00025930 <AmiBlitz3_noFPU_r470.ab3@8124>   CMP.w #$28,D0
00025934 <AmiBlitz3_noFPU_r470.ab3@8125>    BNE.w JL_0_6750
00025936 <AmiBlitz3_noFPU_r470.ab3@8128>    ADDQ.w #1,D3
0002593A <AmiBlitz3_noFPU_r470.ab3@8129> BRA.w JL_0_670A
0002593E <AmiBlitz3_noFPU_r470.ab3@8132>   CMP.w #$7B,D0
00025942 <AmiBlitz3_noFPU_r470.ab3@8133>    BEQ.w JL_0_674A
00025946 <AmiBlitz3_noFPU_r470.ab3@8134>   CMP.w #$2C,D0
0002594A <AmiBlitz3_noFPU_r470.ab3@8135>    BNE.w JL_0_670A
0002594C <AmiBlitz3_noFPU_r470.ab3@8136>   TST.w D3
00025950 <AmiBlitz3_noFPU_r470.ab3@8137>    BNE.w JL_0_670A
00025952 <AmiBlitz3_noFPU_r470.ab3@8138>   ADDQ.w #1,D1
00025956 <AmiBlitz3_noFPU_r470.ab3@8139> BRA.w JL_0_670A
00025958 <AmiBlitz3_noFPU_r470.ab3@8142>   ADDQ.w #1,D1
0002595E <AmiBlitz3_noFPU_r470.ab3@8145>   CLR.l sourceline3
00025968 <AmiBlitz3_noFPU_r470.ab3@8146>   MOVE.l oldline,linenumat
0002596C <AmiBlitz3_noFPU_r470.ab3@8147> BRA.w resloc
00025972 <AmiBlitz3_noFPU_r470.ab3@8151>    CLR.w numreps
00025974 <AmiBlitz3_noFPU_r470.ab3@8152>   MOVE.w D1,D0
00025978 <AmiBlitz3_noFPU_r470.ab3@8153>   ANDI.w #$FF00,D0
0002597C <AmiBlitz3_noFPU_r470.ab3@8154>    BEQ.w fetchlibps__noreps
0002597E <AmiBlitz3_noFPU_r470.ab3@8155>   LSR.w #8,D0
00025980 <AmiBlitz3_noFPU_r470.ab3@8156>   LSR.w #4,D0
00025984 <AmiBlitz3_noFPU_r470.ab3@8157>    BEQ.w fetchlibps__skip
00025986 <AmiBlitz3_noFPU_r470.ab3@8158>   SUB.b D0,D1
00025990 <AmiBlitz3_noFPU_r470.ab3@8159>    MOVE.w regnum,regnumfunc
00025996 <AmiBlitz3_noFPU_r470.ab3@8160>    MOVE.b funcparloop,-(a7)
0002599E <AmiBlitz3_noFPU_r470.ab3@8161>    MOVE.b #0,funcparloop
000259A4 <AmiBlitz3_noFPU_r470.ab3@8162>    MOVE.l leftsidetype,-(a7)
000259AA <AmiBlitz3_noFPU_r470.ab3@8163>    MOVE.l rightsidetype,-(a7)
000259B0 <AmiBlitz3_noFPU_r470.ab3@8164>    CLR.l leftsidetype
000259B6 <AmiBlitz3_noFPU_r470.ab3@8165>    CLR.l rightsidetype
000259BC <AmiBlitz3_noFPU_r470.ab3@8166>    MOVE.b blitzparloop,-(a7)
000259C4 <AmiBlitz3_noFPU_r470.ab3@8167>    MOVE.b #1,blitzparloop
000259C8 <AmiBlitz3_noFPU_r470.ab3@8168>    BSR.w fetchpees2
000259CE <AmiBlitz3_noFPU_r470.ab3@8169>    MOVE.b (a7)+,blitzparloop
000259D4 <AmiBlitz3_noFPU_r470.ab3@8170>    MOVE.l (a7)+,rightsidetype
000259DA <AmiBlitz3_noFPU_r470.ab3@8171>    MOVE.l (a7)+,leftsidetype
000259E0 <AmiBlitz3_noFPU_r470.ab3@8172>    MOVE.b (a7)+,funcparloop
000259E4 <AmiBlitz3_noFPU_r470.ab3@8173>   CMP.w #$2C,D0
000259E8 <AmiBlitz3_noFPU_r470.ab3@8174>    BNE.w syntaxerr
000259EA <AmiBlitz3_noFPU_r470.ab3@8177>   MOVE.w D1,D2
000259EC <AmiBlitz3_noFPU_r470.ab3@8178>   LSR.w #8,D2
000259F0 <AmiBlitz3_noFPU_r470.ab3@8179>   ANDI.w #$7,D2
000259F2 <AmiBlitz3_noFPU_r470.ab3@8182>    CMP.b D2,D1
000259F6 <AmiBlitz3_noFPU_r470.ab3@8183>    BCS.w fetchlibps__repsdone
000259F8 <AmiBlitz3_noFPU_r470.ab3@8184>   SUB.b D2,D1
000259FC <AmiBlitz3_noFPU_r470.ab3@8185>   MOVEM.l D2/A2,-(A7)
000259FE <AmiBlitz3_noFPU_r470.ab3@8186>   MOVE.w D2,D0
00025A04 <AmiBlitz3_noFPU_r470.ab3@8187>   MOVE.b funcparloop,-(a7)
00025A0C <AmiBlitz3_noFPU_r470.ab3@8188>   MOVE.b #0,funcparloop
00025A12 <AmiBlitz3_noFPU_r470.ab3@8189>   MOVE.l leftsidetype,-(a7)
00025A18 <AmiBlitz3_noFPU_r470.ab3@8190>   MOVE.l rightsidetype,-(a7)
00025A1E <AmiBlitz3_noFPU_r470.ab3@8191>   CLR.l leftsidetype
00025A24 <AmiBlitz3_noFPU_r470.ab3@8192>   CLR.l rightsidetype
00025A2A <AmiBlitz3_noFPU_r470.ab3@8193>   MOVE.b blitzparloop,-(a7)
00025A32 <AmiBlitz3_noFPU_r470.ab3@8194>   MOVE.b #1,blitzparloop
00025A36 <AmiBlitz3_noFPU_r470.ab3@8195>   BSR.w fetchpees4
00025A3C <AmiBlitz3_noFPU_r470.ab3@8196>   MOVE.b (a7)+,blitzparloop
00025A42 <AmiBlitz3_noFPU_r470.ab3@8197>   MOVE.l (a7)+,rightsidetype
00025A48 <AmiBlitz3_noFPU_r470.ab3@8198>   MOVE.l (a7)+,leftsidetype
00025A4E <AmiBlitz3_noFPU_r470.ab3@8199>   MOVE.b (a7)+,funcparloop
00025A52 <AmiBlitz3_noFPU_r470.ab3@8200>   MOVEM.l (A7)+,D2/A2
00025A58 <AmiBlitz3_noFPU_r470.ab3@8201>   ADDQ.w #1,numreps
00025A5C <AmiBlitz3_noFPU_r470.ab3@8202> BRA.w fetchlibps__rloop
00025A62 <AmiBlitz3_noFPU_r470.ab3@8205>    MOVE.w numreps,D3
00025A66 <AmiBlitz3_noFPU_r470.ab3@8206>    BEQ.w syntaxerr
00025A68 <AmiBlitz3_noFPU_r470.ab3@8207>   ADDA.w D2,A2
00025A6C <AmiBlitz3_noFPU_r470.ab3@8208>   ANDI.w #$FF,D1
00025A70 <AmiBlitz3_noFPU_r470.ab3@8209>    BEQ.w fetchlibps__done
00025A74 <AmiBlitz3_noFPU_r470.ab3@8210>   CMP.w #$2C,D0
00025A78 <AmiBlitz3_noFPU_r470.ab3@8211>    BNE.w syntaxerr
00025A7A <AmiBlitz3_noFPU_r470.ab3@8214>    MOVE.w D1,D0
00025A7E <AmiBlitz3_noFPU_r470.ab3@8215>    BNE.w fetchpees2b
00025A80 <AmiBlitz3_noFPU_r470.ab3@8218> RTS
00025A86 <AmiBlitz3_noFPU_r470.ab3@8221>   MOVE.b funcparloop,-(a7)
00025A8C <AmiBlitz3_noFPU_r470.ab3@8222>   MOVE.l leftsidetype,-(a7)
00025A92 <AmiBlitz3_noFPU_r470.ab3@8223>   MOVE.l rightsidetype,-(a7)
00025A98 <AmiBlitz3_noFPU_r470.ab3@8224>   CLR.l leftsidetype
00025A9E <AmiBlitz3_noFPU_r470.ab3@8225>   CLR.l rightsidetype
00025AA6 <AmiBlitz3_noFPU_r470.ab3@8226>   MOVE.b #0,funcparloop
00025AAC <AmiBlitz3_noFPU_r470.ab3@8227>   MOVE.b blitzparloop,-(a7)
00025AB4 <AmiBlitz3_noFPU_r470.ab3@8228>   MOVE.b #1,blitzparloop
00025AB8 <AmiBlitz3_noFPU_r470.ab3@8229>   BSR.w fetchpees2
00025ABE <AmiBlitz3_noFPU_r470.ab3@8230>   MOVE.b (a7)+,blitzparloop
00025AC4 <AmiBlitz3_noFPU_r470.ab3@8231>   MOVE.l (a7)+,rightsidetype
00025ACA <AmiBlitz3_noFPU_r470.ab3@8232>   MOVE.l (a7)+,leftsidetype
00025AD0 <AmiBlitz3_noFPU_r470.ab3@8233>   MOVE.b (a7)+,funcparloop
00025AD2 <AmiBlitz3_noFPU_r470.ab3@8234> RTS
00025AD6 <AmiBlitz3_noFPU_r470.ab3@8238> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00025AD8 <AmiBlitz3_noFPU_r470.ab3@8241> partostack:  Ds.w 1                                        ;pmode org source
00025ADA <AmiBlitz3_noFPU_r470.ab3@8245>   MOVEQ.l #$01,D2
00025ADE <AmiBlitz3_noFPU_r470.ab3@8246> BRA.w fetchpees3
00025AE0 <AmiBlitz3_noFPU_r470.ab3@8249>   MOVEQ.l #$00,D2
00025AE4 <AmiBlitz3_noFPU_r470.ab3@8252>   ANDI.w #$F,D0
00025AEA <AmiBlitz3_noFPU_r470.ab3@8260>   CLR.w parnum
00025AEC <AmiBlitz3_noFPU_r470.ab3@8261>   MOVE.w D1,-(A7)
00025AF0 <AmiBlitz3_noFPU_r470.ab3@8262>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00025AF6 <AmiBlitz3_noFPU_r470.ab3@8263>   MOVE.w D2,partostack
00025AF8 <AmiBlitz3_noFPU_r470.ab3@8264>   MOVE.w D0,-(A7)
00025AFC <AmiBlitz3_noFPU_r470.ab3@8265>   CMP.w #"@@",(a5)                                         ;was l15
00025B00 <AmiBlitz3_noFPU_r470.ab3@8266>   BNE fetchpees__loop
00025B06 <AmiBlitz3_noFPU_r470.ab3@8267>   TST.w ininclude                                          ;merge macrolines
00025B0A <AmiBlitz3_noFPU_r470.ab3@8268>   BNE errorjoin
00025B10 <AmiBlitz3_noFPU_r470.ab3@8269>        MOVEA.l sourceline,A5
00025B12 <AmiBlitz3_noFPU_r470.ab3@8272>            MOVEA.l (A5),A5
00025B18 <AmiBlitz3_noFPU_r470.ab3@8273>            MOVE.l a5,sourceline
00025B1C <AmiBlitz3_noFPU_r470.ab3@8274>            LEA $9(A5),A5
00025B22 <AmiBlitz3_noFPU_r470.ab3@8275>            ADDQ.l #1,linenumat
00025B24 <AmiBlitz3_noFPU_r470.ab3@8279>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00025B28 <AmiBlitz3_noFPU_r470.ab3@8280>    BNE.w fetchpees__skip0
00025B2E <AmiBlitz3_noFPU_r470.ab3@8281>   MOVE.w userp,D2                                          ;user selected type
00025B30 <AmiBlitz3_noFPU_r470.ab3@8283>    MOVE.l A2,-(A7)
00025B36 <AmiBlitz3_noFPU_r470.ab3@8284>    ADDQ.w #1,parnum
00025B3C <AmiBlitz3_noFPU_r470.ab3@8285>    TST.b funccall
00025B40 <AmiBlitz3_noFPU_r470.ab3@8286>    BEQ fetchpees__skip0_l1
00025B48 <AmiBlitz3_noFPU_r470.ab3@8287>    CMP.w #6,parnum
00025B4C <AmiBlitz3_noFPU_r470.ab3@8288>    BLE fetchpees__skip0_l1
00025B50 <AmiBlitz3_noFPU_r470.ab3@8289>    CMP.w #7,d2
00025B56 <AmiBlitz3_noFPU_r470.ab3@8295>    TST.b fpu
00025B5A <AmiBlitz3_noFPU_r470.ab3@8296>    BEQ fetchpees__skip0_old
00025B60 <AmiBlitz3_noFPU_r470.ab3@8297>    TST.w regnumfunc
00025B64 <AmiBlitz3_noFPU_r470.ab3@8298>    BEQ fetchpees__skip0_old
00025B6A <AmiBlitz3_noFPU_r470.ab3@8299>    CMP.w #$48e7,-4(a4)
00025B6E <AmiBlitz3_noFPU_r470.ab3@8300>    BNE fetchpees__skip0_old
00025B70 <AmiBlitz3_noFPU_r470.ab3@8301>    MOVEQ #0,d1
00025B76 <AmiBlitz3_noFPU_r470.ab3@8302>    MOVE.w regnum,d1
00025B7C <AmiBlitz3_noFPU_r470.ab3@8303>    CMP regnumfunc,d1                                       ;fpu reg function save
00025B80 <AmiBlitz3_noFPU_r470.ab3@8304>    BGE fetchpees__skip0_old
00025B82 <AmiBlitz3_noFPU_r470.ab3@8305>    ASL.w #7,d1
00025B84 <AmiBlitz3_noFPU_r470.ab3@8306>    MOVE.l d0,-(a7)
00025B8A <AmiBlitz3_noFPU_r470.ab3@8307>    MOVE.w regnumfunc,d0
00025B90 <AmiBlitz3_noFPU_r470.ab3@8308>    CLR.w regmask
00025B96 <AmiBlitz3_noFPU_r470.ab3@8310>    BSET d0,regmask
00025B98 <AmiBlitz3_noFPU_r470.ab3@8311>    SUBQ #1,d0
00025B9C <AmiBlitz3_noFPU_r470.ab3@8312>    BNE fetchpees__skip0_loop
00025B9E <AmiBlitz3_noFPU_r470.ab3@8313>     MOVEQ #0,d0
00025BA4 <AmiBlitz3_noFPU_r470.ab3@8316>       BTST d0,regmask
00025BA8 <AmiBlitz3_noFPU_r470.ab3@8317>       BEQ fetchpees__skip0_noa7
00025BAA <AmiBlitz3_noFPU_r470.ab3@8318>       MOVEQ #0,d1
00025BAC <AmiBlitz3_noFPU_r470.ab3@8319>       MOVE.w d0,d1
00025BAE <AmiBlitz3_noFPU_r470.ab3@8320>       SUBQ.w #1,d1
00025BB0 <AmiBlitz3_noFPU_r470.ab3@8321>       ASL #7,d1
00025BB6 <AmiBlitz3_noFPU_r470.ab3@8322>       OR.l #$f2277400,d1                                   ;fmove.d
00025BBA <AmiBlitz3_noFPU_r470.ab3@8324>       BSR writelong
00025BC0 <AmiBlitz3_noFPU_r470.ab3@8326>       ADDQ.l #2,stacktrack
00025BC6 <AmiBlitz3_noFPU_r470.ab3@8327>       MOVE.l stacktrack,d1
00025BCC <AmiBlitz3_noFPU_r470.ab3@8328>       CMP.l #180,d1
00025BD0 <AmiBlitz3_noFPU_r470.ab3@8329>       BGT conmemerr                                        ;formel too complex
00025BD2 <AmiBlitz3_noFPU_r470.ab3@8330>       MOVE.l a0,-(a7)
00025BD8 <AmiBlitz3_noFPU_r470.ab3@8331>       LEA fpustackbase,a0
00025BE0 <AmiBlitz3_noFPU_r470.ab3@8332>       MOVE.w regmask,0(a0,d1)
00025BE2 <AmiBlitz3_noFPU_r470.ab3@8333>       MOVE.l (a7)+,a0
00025BE4 <AmiBlitz3_noFPU_r470.ab3@8336>       ADDQ.w #1,d0
00025BEA <AmiBlitz3_noFPU_r470.ab3@8337>       CMP.w regnumfunc,d0
00025BEE <AmiBlitz3_noFPU_r470.ab3@8338>       BLE fetchpees__skip0_loop2
00025BF0 <AmiBlitz3_noFPU_r470.ab3@8341>       MOVE.l (a7)+,d0
00025BF6 <AmiBlitz3_noFPU_r470.ab3@8344>      MOVE.l currentfunccall,-(a7)
00025BFC <AmiBlitz3_noFPU_r470.ab3@8345>      MOVE.w parnum,-(a7)
00025C02 <AmiBlitz3_noFPU_r470.ab3@8346>      TST.l rightsidetype
00025C06 <AmiBlitz3_noFPU_r470.ab3@8347>      BSR.w JL_0_6836
00025C0C <AmiBlitz3_noFPU_r470.ab3@8348>      MOVE.w (a7)+,parnum
00025C12 <AmiBlitz3_noFPU_r470.ab3@8350>    MOVE.l (a7)+,currentfunccall
00025C18 <AmiBlitz3_noFPU_r470.ab3@8352>    TST.b typecheck                            ;typecheck for function call
00025C1C <AmiBlitz3_noFPU_r470.ab3@8353>    BEQ 'notypecheck
00025C22 <AmiBlitz3_noFPU_r470.ab3@8354>    TST.b notypecheck
00025C26 <AmiBlitz3_noFPU_r470.ab3@8355>    BNE 'notypecheck
00025C2C <AmiBlitz3_noFPU_r470.ab3@8356>    TST.b blitzparloop
00025C30 <AmiBlitz3_noFPU_r470.ab3@8357>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00025C3A <AmiBlitz3_noFPU_r470.ab3@8358>    CMP.l #0,currentfunccall
00025C3E <AmiBlitz3_noFPU_r470.ab3@8359>    BEQ 'isblitzlibcall
00025C42 <AmiBlitz3_noFPU_r470.ab3@8360>    MOVEM.l a0/a1,-(a7)
00025C48 <AmiBlitz3_noFPU_r470.ab3@8361>    MOVE.l currentfunccall,a0
00025C4E <AmiBlitz3_noFPU_r470.ab3@8362>    MOVE.w parnum,d1
00025C54 <AmiBlitz3_noFPU_r470.ab3@8363>    TST.b isconstantvalue
00025C58 <AmiBlitz3_noFPU_r470.ab3@8364>    BEQ 'noconstant
00025C62 <AmiBlitz3_noFPU_r470.ab3@8365>    CMP.l #0,lastconstantvalue
00025C66 <AmiBlitz3_noFPU_r470.ab3@8366>    BEQ 'isnull
00025C6A <AmiBlitz3_noFPU_r470.ab3@8368>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
00025C70 <AmiBlitz3_noFPU_r470.ab3@8369>    CMP.l #0,a0
00025C74 <AmiBlitz3_noFPU_r470.ab3@8370>    BEQ 'notype
00025C7C <AmiBlitz3_noFPU_r470.ab3@8371>    CMP.l #$100,4(a0)
00025C80 <AmiBlitz3_noFPU_r470.ab3@8372>    BLE 'notype
00025C86 <AmiBlitz3_noFPU_r470.ab3@8373>    MOVE.l lasttoken,d1
00025C8A <AmiBlitz3_noFPU_r470.ab3@8374>    CMP.w #$b581,d1                   ; ok, when token for null
00025C8E <AmiBlitz3_noFPU_r470.ab3@8375>    BEQ 'isnull
00025C94 <AmiBlitz3_noFPU_r470.ab3@8376>    TST.l typetocast
00025C98 <AmiBlitz3_noFPU_r470.ab3@8377>    BEQ 'nocast
00025C9E <AmiBlitz3_noFPU_r470.ab3@8378>    MOVE.l typetocast,a1
00025CA2 <AmiBlitz3_noFPU_r470.ab3@8379>    BRA 'typecheck
00025CA8 <AmiBlitz3_noFPU_r470.ab3@8381>    MOVE.l rightsidetype,a1
00025CAE <AmiBlitz3_noFPU_r470.ab3@8382>    CMP.l #0,a1
00025CB2 <AmiBlitz3_noFPU_r470.ab3@8383>    BEQ 'notype
00025CBA <AmiBlitz3_noFPU_r470.ab3@8384> 'typecheck   CMP.l #$100,4(a1)
00025CBC <AmiBlitz3_noFPU_r470.ab3@8386>    CMP.l a0,a1
00025CC0 <AmiBlitz3_noFPU_r470.ab3@8387>    BEQ 'ok
00025CC8 <AmiBlitz3_noFPU_r470.ab3@8389>    CMP.l #$100,4(a1)                 ; is a type here
00025CCC <AmiBlitz3_noFPU_r470.ab3@8390>    BLE 'error
00025CD0 <AmiBlitz3_noFPU_r470.ab3@8391>    MOVE.l 4(a1),a1                   ; load the address of type.
00025CD4 <AmiBlitz3_noFPU_r470.ab3@8392>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00025CD8 <AmiBlitz3_noFPU_r470.ab3@8393>    BEQ 'ok
00025CDE <AmiBlitz3_noFPU_r470.ab3@8394> 'error: JMP   error_convert_types    ; for syntax 4
00025CE4 <AmiBlitz3_noFPU_r470.ab3@8398>    CLR.l typetocast
00025CE8 <AmiBlitz3_noFPU_r470.ab3@8399>    MOVEM.l (a7)+,a0/a1
00025CEE <AmiBlitz3_noFPU_r470.ab3@8403>    CLR.l lastfunction
00025CF4 <AmiBlitz3_noFPU_r470.ab3@8404>    TST.b fpu
00025CF8 <AmiBlitz3_noFPU_r470.ab3@8405>    BEQ fetchpees__skip0_noprint
00025CFA <AmiBlitz3_noFPU_r470.ab3@8406>   MOVE.l (a7),a2
00025CFC <AmiBlitz3_noFPU_r470.ab3@8407>   ADDQ.l #1,a2
00025D00 <AmiBlitz3_noFPU_r470.ab3@8408>    CMP.b #5,d2
00025D04 <AmiBlitz3_noFPU_r470.ab3@8409>   BNE fetchpees__skip0_noprint
00025D0A <AmiBlitz3_noFPU_r470.ab3@8410>   CMP.b #$5d,24(a2)
00025D0E <AmiBlitz3_noFPU_r470.ab3@8411>   BNE fetchpees__skip0_noprint
00025D14 <AmiBlitz3_noFPU_r470.ab3@8412>   CMP.b #$81,25(a2)
00025D18 <AmiBlitz3_noFPU_r470.ab3@8413>   BLT fetchpees__skip0_noprint
00025D1E <AmiBlitz3_noFPU_r470.ab3@8414>   CMP.b #$86,25(a2)
00025D22 <AmiBlitz3_noFPU_r470.ab3@8415>   BEQ fetchpees__skip0_ok
00025D28 <AmiBlitz3_noFPU_r470.ab3@8416>   CMP.b #$87,25(a2)
00025D2C <AmiBlitz3_noFPU_r470.ab3@8417>   BEQ fetchpees__skip0_ok
00025D32 <AmiBlitz3_noFPU_r470.ab3@8418>   CMP.b #$88,25(a2)
00025D36 <AmiBlitz3_noFPU_r470.ab3@8419>   BEQ fetchpees__skip0_ok
00025D3C <AmiBlitz3_noFPU_r470.ab3@8420>   CMP.b #$83,25(a2)
00025D40 <AmiBlitz3_noFPU_r470.ab3@8421>   BGT fetchpees__skip0_noprint
00025D46 <AmiBlitz3_noFPU_r470.ab3@8424>   MOVE.l destpointer,a4
00025D4C <AmiBlitz3_noFPU_r470.ab3@8425>   CMP.w #$2f00,-2(a4)
00025D50 <AmiBlitz3_noFPU_r470.ab3@8426>   BNE fetchpees__skip0_noprint
00025D56 <AmiBlitz3_noFPU_r470.ab3@8427>   SUBQ.l #2,destpointer
00025D5C <AmiBlitz3_noFPU_r470.ab3@8429>   MOVE.l #$f2277400,d1
00025D60 <AmiBlitz3_noFPU_r470.ab3@8430>   BSR writelong                                            ;fmove.d fp0,-(a7)
00025D66 <AmiBlitz3_noFPU_r470.ab3@8431>   ADDQ #4,a2offset
00025D6C <AmiBlitz3_noFPU_r470.ab3@8449>   CLR.b optistring
00025D6E <AmiBlitz3_noFPU_r470.ab3@8450>   MOVEA.l (A7)+,A2
00025D72 <AmiBlitz3_noFPU_r470.ab3@8451>    CMP.w #"@",d0
00025D76 <AmiBlitz3_noFPU_r470.ab3@8452>   BNE fetchpees__skip0_l10
00025D7A <AmiBlitz3_noFPU_r470.ab3@8453>    CMP.b #"@",(a5)
00025D7E <AmiBlitz3_noFPU_r470.ab3@8454>   BNE fetchpees__skip0_l10
00025D84 <AmiBlitz3_noFPU_r470.ab3@8455>   TST.w ininclude
00025D88 <AmiBlitz3_noFPU_r470.ab3@8456>   BNE errorjoin
00025D8E <AmiBlitz3_noFPU_r470.ab3@8457>   MOVEA.l sourceline,A5
00025D90 <AmiBlitz3_noFPU_r470.ab3@8458>            MOVEA.l (A5),A5
00025D96 <AmiBlitz3_noFPU_r470.ab3@8459>            MOVE.l a5,sourceline
00025D9C <AmiBlitz3_noFPU_r470.ab3@8460>            ADDQ.l #1,linenumat
00025DA0 <AmiBlitz3_noFPU_r470.ab3@8461>            LEA $9(A5),A5
00025DA2 <AmiBlitz3_noFPU_r470.ab3@8462>            MOVEQ #0,d0
00025DA6 <AmiBlitz3_noFPU_r470.ab3@8463>            BSR get1bytemain
00025DAA <AmiBlitz3_noFPU_r470.ab3@8466>    CMP.b #32,(a5)+ ;for space after a ,
00025DAE <AmiBlitz3_noFPU_r470.ab3@8467>    BEQ fetchpees__skip0_l10:
00025DB0 <AmiBlitz3_noFPU_r470.ab3@8468>    SUBQ.l #1,a5
00025DB4 <AmiBlitz3_noFPU_r470.ab3@8470>    CMP.w #"@@",(a5)                                        ;if merge
00025DB8 <AmiBlitz3_noFPU_r470.ab3@8471>    BNE fetchpees__skip0_l15
00025DBC <AmiBlitz3_noFPU_r470.ab3@8472>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00025DC2 <AmiBlitz3_noFPU_r470.ab3@8473>    JSR mergeline
00025DC6 <AmiBlitz3_noFPU_r470.ab3@8474>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00025DC8 <AmiBlitz3_noFPU_r470.ab3@8494>       SUBQ.w #1,(A7)
00025DCC <AmiBlitz3_noFPU_r470.ab3@8495>    BEQ.w fetchpees__done
00025DD0 <AmiBlitz3_noFPU_r470.ab3@8497>     CMP.w #$2C,D0
00025DD4 <AmiBlitz3_noFPU_r470.ab3@8499>    BNE overloadfunc
00025DD8 <AmiBlitz3_noFPU_r470.ab3@8500> BRA.w fetchpees__loop
00025DDA <AmiBlitz3_noFPU_r470.ab3@8503>   ADDQ.w #2,A7
00025DE0 <AmiBlitz3_noFPU_r470.ab3@8504>   MOVE.w (A7)+,partostack
00025DE2 <AmiBlitz3_noFPU_r470.ab3@8505>   MOVE.w (A7)+,D1
00025DE8 <AmiBlitz3_noFPU_r470.ab3@8506>   CLR.b isconstantvalue
00025DF2 <AmiBlitz3_noFPU_r470.ab3@8507>   MOVE.l currentfunccall,lastfunction
00025DF8 <AmiBlitz3_noFPU_r470.ab3@8508>   CLR.b funccall
00025DFE <AmiBlitz3_noFPU_r470.ab3@8509>   CLR.l currentfunccall
00025E00 <AmiBlitz3_noFPU_r470.ab3@8510> RTS
00025E06 <AmiBlitz3_noFPU_r470.ab3@8514>   CLR.b funccall
00025E0C <AmiBlitz3_noFPU_r470.ab3@8515>   MOVE.w regnum,d1
00025E12 <AmiBlitz3_noFPU_r470.ab3@8516>   MOVE.l currentfunccall,a4
00025E16 <AmiBlitz3_noFPU_r470.ab3@8517>   CMP.b $20(a4),d1                                         ;increase if more pars
00025E1A <AmiBlitz3_noFPU_r470.ab3@8518>   BLT notparerr
00025E1C <AmiBlitz3_noFPU_r470.ab3@8521>   MOVE.b (a2)+,d2
00025E24 <AmiBlitz3_noFPU_r470.ab3@8522>   ADD.w #1,parnum
00025E2A <AmiBlitz3_noFPU_r470.ab3@8523>   TST.b fpu
00025E2E <AmiBlitz3_noFPU_r470.ab3@8524>   BEQ 'nofpu
00025E32 <AmiBlitz3_noFPU_r470.ab3@8525>   CMP.b #5,d2
00025E36 <AmiBlitz3_noFPU_r470.ab3@8526>   BNE 'nofpu
00025E38 <AmiBlitz3_noFPU_r470.ab3@8527>   MOVEQ #0,d1
00025E3E <AmiBlitz3_noFPU_r470.ab3@8528>   MOVE.w regnum,d1
00025E46 <AmiBlitz3_noFPU_r470.ab3@8529>   CMP.w #6,regnum
00025E4A <AmiBlitz3_noFPU_r470.ab3@8530>   BLT 'nostack2
00025E4E <AmiBlitz3_noFPU_r470.ab3@8535>   MOVE.w #$2c3c,d1
00025E52 <AmiBlitz3_noFPU_r470.ab3@8536>   BSR writeword
00025E58 <AmiBlitz3_noFPU_r470.ab3@8537>   MOVE.l #$bf800000,d1
00025E5C <AmiBlitz3_noFPU_r470.ab3@8538>   BSR writelong
00025E60 <AmiBlitz3_noFPU_r470.ab3@8539>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025E66 <AmiBlitz3_noFPU_r470.ab3@8540>   ADD.w parnum,d1
00025E6C <AmiBlitz3_noFPU_r470.ab3@8541>   JSR Atokejsr
00025E72 <AmiBlitz3_noFPU_r470.ab3@8542>   TST.w dontwrite
00025E76 <AmiBlitz3_noFPU_r470.ab3@8543>   BNE 'l1
00025E7C <AmiBlitz3_noFPU_r470.ab3@8544>   MOVE.l data1start,d1
00025E82 <AmiBlitz3_noFPU_r470.ab3@8545>   MOVE.l destpointer,a4
00025E86 <AmiBlitz3_noFPU_r470.ab3@8546>   ADD.l d1,-4(a4)
00025E8C <AmiBlitz3_noFPU_r470.ab3@8547>   MOVE.l destpointer,d1
00025E8E <AmiBlitz3_noFPU_r470.ab3@8548>   SUBQ.l #4,d1
00025E94 <AmiBlitz3_noFPU_r470.ab3@8549>   SUB.l destbufferstart,d1
00025E96 <AmiBlitz3_noFPU_r470.ab3@8550>   MOVE.l d2,-(a7)
00025E98 <AmiBlitz3_noFPU_r470.ab3@8551>   MOVE.l d1,d2
00025E9E <AmiBlitz3_noFPU_r470.ab3@8552>   JSR addhunkoffset
00025EA0 <AmiBlitz3_noFPU_r470.ab3@8553>   MOVE.l (a7)+,d2
00025EA4 <AmiBlitz3_noFPU_r470.ab3@8554> BRA 'l1
00025EAA <AmiBlitz3_noFPU_r470.ab3@8557>   TST.b fpu                                                ; fpucheck added  tomsmart1
00025EAE <AmiBlitz3_noFPU_r470.ab3@8558>   BEQ 'nofpu
00025EB0 <AmiBlitz3_noFPU_r470.ab3@8560>   ASL.l #7,d1
00025EB6 <AmiBlitz3_noFPU_r470.ab3@8561>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00025EBA <AmiBlitz3_noFPU_r470.ab3@8562>   BSR writelong
00025EBC <AmiBlitz3_noFPU_r470.ab3@8563>   MOVEQ #-1,d1                                             ;-1
00025EC0 <AmiBlitz3_noFPU_r470.ab3@8564>   BSR writeword
00025EC4 <AmiBlitz3_noFPU_r470.ab3@8565> BRA 'l1
00025ECA <AmiBlitz3_noFPU_r470.ab3@8568>   MOVE.w regnum,d1
00025ED2 <AmiBlitz3_noFPU_r470.ab3@8569>   CMP.w #6,regnum
00025ED6 <AmiBlitz3_noFPU_r470.ab3@8570>   BLT 'nostack
00025EDA <AmiBlitz3_noFPU_r470.ab3@8575>   CMP.b #2,d2
00025EDE <AmiBlitz3_noFPU_r470.ab3@8576>   BGT 'nw
00025EE2 <AmiBlitz3_noFPU_r470.ab3@8577> BRA 'nos
00025EE6 <AmiBlitz3_noFPU_r470.ab3@8586>   CMP.w #7,d2
00025EEA <AmiBlitz3_noFPU_r470.ab3@8587>   BNE 'nos
00025EF0 <AmiBlitz3_noFPU_r470.ab3@8588>   ADDQ #4,a2offset
00025EF6 <AmiBlitz3_noFPU_r470.ab3@8590>     MOVE.l #$48780000,d1
00025EFA <AmiBlitz3_noFPU_r470.ab3@8591>     BSR writelong
00025F00 <AmiBlitz3_noFPU_r470.ab3@8592>     ADDQ.w #4,a2offset
00025F04 <AmiBlitz3_noFPU_r470.ab3@8593>     MOVE.w #$2f3c,d1
00025F08 <AmiBlitz3_noFPU_r470.ab3@8594>     BSR writeword
00025F0E <AmiBlitz3_noFPU_r470.ab3@8595>     MOVE.l #-1,d1
00025F12 <AmiBlitz3_noFPU_r470.ab3@8596>     BSR writelong
00025F16 <AmiBlitz3_noFPU_r470.ab3@8597>   BRA 'l1
00025F1A <AmiBlitz3_noFPU_r470.ab3@8601>   CMP.b #4,d2
00025F1E <AmiBlitz3_noFPU_r470.ab3@8602>       BNE 'noq
00025F22 <AmiBlitz3_noFPU_r470.ab3@8603>       MOVE.w #$2c3c,d1
00025F26 <AmiBlitz3_noFPU_r470.ab3@8604>       BSR writeword
00025F2C <AmiBlitz3_noFPU_r470.ab3@8605>       MOVE.l #$ffff0000,d1
00025F30 <AmiBlitz3_noFPU_r470.ab3@8606>       BSR writelong
00025F34 <AmiBlitz3_noFPU_r470.ab3@8607> BRA 'noq2
00025F38 <AmiBlitz3_noFPU_r470.ab3@8610>      CMP.b #5,d2
00025F3C <AmiBlitz3_noFPU_r470.ab3@8611>      BNE 'nof
00025F40 <AmiBlitz3_noFPU_r470.ab3@8612>       MOVE.w #$2c3c,d1
00025F44 <AmiBlitz3_noFPU_r470.ab3@8613>       BSR writeword
00025F4A <AmiBlitz3_noFPU_r470.ab3@8614>       MOVE.l #$800000c1,d1
00025F4E <AmiBlitz3_noFPU_r470.ab3@8615>       BSR writelong
00025F52 <AmiBlitz3_noFPU_r470.ab3@8616> BRA 'noq2
00025F56 <AmiBlitz3_noFPU_r470.ab3@8619>   MOVE.w #$7cff,d1
00025F5A <AmiBlitz3_noFPU_r470.ab3@8620>   BSR writeword
00025F5E <AmiBlitz3_noFPU_r470.ab3@8623>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00025F64 <AmiBlitz3_noFPU_r470.ab3@8624>   ADD.w parnum,d1
00025F6A <AmiBlitz3_noFPU_r470.ab3@8625>   JSR Atokejsr
00025F70 <AmiBlitz3_noFPU_r470.ab3@8626>    TST.w dontwrite
00025F74 <AmiBlitz3_noFPU_r470.ab3@8627>    BNE 'l1
00025F7A <AmiBlitz3_noFPU_r470.ab3@8628>    MOVE.l data1start,d1
00025F80 <AmiBlitz3_noFPU_r470.ab3@8629>    MOVE.l destpointer,a4
00025F84 <AmiBlitz3_noFPU_r470.ab3@8630>    ADD.l d1,-4(a4)
00025F8A <AmiBlitz3_noFPU_r470.ab3@8631>    MOVE.l destpointer,d1
00025F8C <AmiBlitz3_noFPU_r470.ab3@8632>    SUBQ.l #4,d1
00025F92 <AmiBlitz3_noFPU_r470.ab3@8633>    SUB.l destbufferstart,d1
00025F94 <AmiBlitz3_noFPU_r470.ab3@8634>    MOVE.l d2,-(a7)
00025F96 <AmiBlitz3_noFPU_r470.ab3@8635>    MOVE.l d1,d2
00025F9C <AmiBlitz3_noFPU_r470.ab3@8636>    JSR addhunkoffset
00025F9E <AmiBlitz3_noFPU_r470.ab3@8637>    MOVE.l (a7)+,d2
00025FA2 <AmiBlitz3_noFPU_r470.ab3@8638> BRA 'l1
00025FA4 <AmiBlitz3_noFPU_r470.ab3@8641>   ASL.l #8,d1
00025FA6 <AmiBlitz3_noFPU_r470.ab3@8642>   ASL.l #1,d1
00025FAC <AmiBlitz3_noFPU_r470.ab3@8643>   OR.l #$203c,d1                                           ;-1
00025FB0 <AmiBlitz3_noFPU_r470.ab3@8644>   BSR writeword
00025FB6 <AmiBlitz3_noFPU_r470.ab3@8645>   MOVE.l #-1,d1
00025FBA <AmiBlitz3_noFPU_r470.ab3@8646>   CMP.b #4,d2
00025FBE <AmiBlitz3_noFPU_r470.ab3@8647>   BNE 'nq1
00025FC4 <AmiBlitz3_noFPU_r470.ab3@8648>   MOVE.l #$ffff0000,d1
00025FC8 <AmiBlitz3_noFPU_r470.ab3@8651>   CMP.b #5,d2
00025FCC <AmiBlitz3_noFPU_r470.ab3@8652>   BNE 'nof2
00025FD2 <AmiBlitz3_noFPU_r470.ab3@8653>   TST.b fpu
00025FD6 <AmiBlitz3_noFPU_r470.ab3@8654>   BNE 'nof2
00025FDC <AmiBlitz3_noFPU_r470.ab3@8655>   MOVE.l #$800000c1,d1
00025FE0 <AmiBlitz3_noFPU_r470.ab3@8658>    BSR writelong
00025FE4 <AmiBlitz3_noFPU_r470.ab3@8659>    CMP.b #7,d2
00025FE8 <AmiBlitz3_noFPU_r470.ab3@8660>    BNE 'l1
00025FEE <AmiBlitz3_noFPU_r470.ab3@8662>      MOVE.l #$48780000,d1
00025FF2 <AmiBlitz3_noFPU_r470.ab3@8663>      BSR writelong
00025FF8 <AmiBlitz3_noFPU_r470.ab3@8665>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00025FFE <AmiBlitz3_noFPU_r470.ab3@8666>    MOVE.l #$594f,d1                                        ; subq #4,a7
00026002 <AmiBlitz3_noFPU_r470.ab3@8667>    BSR writeword
00026004 <AmiBlitz3_noFPU_r470.ab3@8670>    SUBQ.w #1,(A7)
00026008 <AmiBlitz3_noFPU_r470.ab3@8671>    BEQ.w fetchpees__done
0002600E <AmiBlitz3_noFPU_r470.ab3@8672>    ADDQ.w #1,regnum
00026012 <AmiBlitz3_noFPU_r470.ab3@8673> BRA 'ol2
00026014 <AmiBlitz3_noFPU_r470.ab3@8676>    MOVE.w D2,D1
00026018 <AmiBlitz3_noFPU_r470.ab3@8677>    ANDI.w #$40,D1
0002601E <AmiBlitz3_noFPU_r470.ab3@8678>    MOVE.b D1,partostack
00026020 <AmiBlitz3_noFPU_r470.ab3@8679>    TST.b D2
00026024 <AmiBlitz3_noFPU_r470.ab3@8680>     BMI.w handlevara
00026028 <AmiBlitz3_noFPU_r470.ab3@8681>    BTST #$5,D2
0002602C <AmiBlitz3_noFPU_r470.ab3@8682>     BNE.w handlearr
00026032 <AmiBlitz3_noFPU_r470.ab3@8683>     MOVE.w regnumstore,-(a7)
00026038 <AmiBlitz3_noFPU_r470.ab3@8684>     MOVE.w tempregnum,-(a7)
0002603E <AmiBlitz3_noFPU_r470.ab3@8685>     MOVE.w parnum,-(a7)
00026042 <AmiBlitz3_noFPU_r470.ab3@8686>     BSR.w getap                                        ;recursive entry
00026048 <AmiBlitz3_noFPU_r470.ab3@8687>     MOVE.w (a7)+,parnum
0002604E <AmiBlitz3_noFPU_r470.ab3@8688>     MOVE.w (a7)+,tempregnum
00026054 <AmiBlitz3_noFPU_r470.ab3@8689>     MOVE.w (a7)+,regnumstore
00026058 <AmiBlitz3_noFPU_r470.ab3@8692>     MOVE.w partostack(PC),D1
0002605C <AmiBlitz3_noFPU_r470.ab3@8693>     BEQ.w JL_0_6886
00026062 <AmiBlitz3_noFPU_r470.ab3@8696>    ADDQ.w #4,a2offset
00026068 <AmiBlitz3_noFPU_r470.ab3@8699>    MOVE.w pushdn,D1
0002606E <AmiBlitz3_noFPU_r470.ab3@8700>    OR.w regnum,D1
00026072 <AmiBlitz3_noFPU_r470.ab3@8701>    CMP.w #$3,D2
00026076 <AmiBlitz3_noFPU_r470.ab3@8702>     BCC.w JL_0_6880
0002607C <AmiBlitz3_noFPU_r470.ab3@8703>    SUBQ.w #2,a2offset
00026080 <AmiBlitz3_noFPU_r470.ab3@8704>    ORI.w #$1000,D1
00026084 <AmiBlitz3_noFPU_r470.ab3@8705>    BSR.w writeword
00026086 <AmiBlitz3_noFPU_r470.ab3@8706> RTS
0002608A <AmiBlitz3_noFPU_r470.ab3@8709>   CMP.b #7,d2
0002608E <AmiBlitz3_noFPU_r470.ab3@8710>    BNE 'l10
00026096 <AmiBlitz3_noFPU_r470.ab3@8711>    CMP.b #2,optistring
0002609C <AmiBlitz3_noFPU_r470.ab3@8715>   TST.b iee
000260A0 <AmiBlitz3_noFPU_r470.ab3@8716>   BEQ 'old
000260A4 <AmiBlitz3_noFPU_r470.ab3@8717>   CMP.b #5,d2
000260A8 <AmiBlitz3_noFPU_r470.ab3@8718>   BNE 'old
000260AC <AmiBlitz3_noFPU_r470.ab3@8721>   BSR.w writeword                                          ;write val to stack
000260AE <AmiBlitz3_noFPU_r470.ab3@8722> RTS
000260B4 <AmiBlitz3_noFPU_r470.ab3@8725>   SUBQ.w #4,a2offset
000260B6 <AmiBlitz3_noFPU_r470.ab3@8726> RTS
000260BC <AmiBlitz3_noFPU_r470.ab3@8729>   ADDQ.w #1,regnum
000260BE <AmiBlitz3_noFPU_r470.ab3@8730> RTS
000260C0 <AmiBlitz3_noFPU_r470.ab3@8734>   MOVEQ.l #$03,D2
000260C4 <AmiBlitz3_noFPU_r470.ab3@8735> BRA.w JL_0_6854
000260C8 <AmiBlitz3_noFPU_r470.ab3@8739>   ANDI.w #$7,D2
000260CA <AmiBlitz3_noFPU_r470.ab3@8740>   MOVE.w D2,-(A7)
000260CE <AmiBlitz3_noFPU_r470.ab3@8741>    BSR.w JL_0_A916
000260D2 <AmiBlitz3_noFPU_r470.ab3@8742>   CMP.b #$7,D2                                             ;ignore pnt to $
000260D6 <AmiBlitz3_noFPU_r470.ab3@8743>    BEQ.w JL_0_68C0
000260DA <AmiBlitz3_noFPU_r470.ab3@8744>   BTST #$E,D2
000260DE <AmiBlitz3_noFPU_r470.ab3@8745>    BEQ.w JL_0_68B6
000260E2 <AmiBlitz3_noFPU_r470.ab3@8746>   MOVE.b #$3,D2                                            ;pointer to long
000260E6 <AmiBlitz3_noFPU_r470.ab3@8747> BRA.w JL_0_68C0
000260E8 <AmiBlitz3_noFPU_r470.ab3@8750>    TST.b D2
000260EC <AmiBlitz3_noFPU_r470.ab3@8751>    BNE.w JL_0_68C0
000260F0 <AmiBlitz3_noFPU_r470.ab3@8752>   MOVE.b #$3,D2
000260F2 <AmiBlitz3_noFPU_r470.ab3@8755>   MOVE.w (A7)+,D3
000260F4 <AmiBlitz3_noFPU_r470.ab3@8756>   TST.b D3
000260F8 <AmiBlitz3_noFPU_r470.ab3@8757>    BEQ.w JL_0_68D2
000260FA <AmiBlitz3_noFPU_r470.ab3@8758>   CMP.b D2,D3
000260FE <AmiBlitz3_noFPU_r470.ab3@8759>    BEQ.w putalp
00026102 <AmiBlitz3_noFPU_r470.ab3@8760> BRA.w mismatcherr
00026108 <AmiBlitz3_noFPU_r470.ab3@8763>   ADDQ.w #2,a2offset
0002610C <AmiBlitz3_noFPU_r470.ab3@8764>   MOVE.w ptype(PC),D1
00026110 <AmiBlitz3_noFPU_r470.ab3@8765>    BSR.w writeword
00026112 <AmiBlitz3_noFPU_r470.ab3@8766>   MOVEQ.l #$00,D1
00026114 <AmiBlitz3_noFPU_r470.ab3@8767>   MOVE.b D2,D1
00026118 <AmiBlitz3_noFPU_r470.ab3@8768>    BSR.w writeword
0002611C <AmiBlitz3_noFPU_r470.ab3@8769> BRA.w putalp
0002611E <AmiBlitz3_noFPU_r470.ab3@8772>    MOVE.w D2,-(A7)
00026122 <AmiBlitz3_noFPU_r470.ab3@8773>    BSR.w JL_0_694E
00026128 <AmiBlitz3_noFPU_r470.ab3@8774>   BTST #$4,$1(A7)
0002612C <AmiBlitz3_noFPU_r470.ab3@8775>    BEQ.w JL_0_6900
00026130 <AmiBlitz3_noFPU_r470.ab3@8776>    BSR.w JL_0_699A
00026136 <AmiBlitz3_noFPU_r470.ab3@8779>    BTST #$3,$1(A7)
0002613A <AmiBlitz3_noFPU_r470.ab3@8780>    BEQ.w JL_0_690E
0002613E <AmiBlitz3_noFPU_r470.ab3@8781>    BSR.w sendtype
00026140 <AmiBlitz3_noFPU_r470.ab3@8784>    MOVE.w (A7)+,D2
00026144 <AmiBlitz3_noFPU_r470.ab3@8785> BRA.w get1bytemain
0002614A <AmiBlitz3_noFPU_r470.ab3@8788>   MOVE.w regnum,D1
0002614C <AmiBlitz3_noFPU_r470.ab3@8789>   LSL.w #8,D1
0002614E <AmiBlitz3_noFPU_r470.ab3@8790>   LSL.w #1,D1
00026152 <AmiBlitz3_noFPU_r470.ab3@8791>   ORI.w #$7000,D1
00026158 <AmiBlitz3_noFPU_r470.ab3@8792>   BTST #$0,$7(A3)
0002615C <AmiBlitz3_noFPU_r470.ab3@8793>    BNE.w JL_0_6946                                         ;A Pointer
00026164 <AmiBlitz3_noFPU_r470.ab3@8794>   CMPI.l #$100,$4(A2)
00026168 <AmiBlitz3_noFPU_r470.ab3@8795>    BCC.w arrerr1                                           ;illegal type to send
0002616C <AmiBlitz3_noFPU_r470.ab3@8796>   MOVE.b $7(A2),D1
00026170 <AmiBlitz3_noFPU_r470.ab3@8799>   BSR.w writeword                                          ;moveq #type,d regat
00026172 <AmiBlitz3_noFPU_r470.ab3@8800>   MOVEQ.l #$02,D2                                          ;just a word.
00026176 <AmiBlitz3_noFPU_r470.ab3@8801> BRA.w JL_0_685C
0002617A <AmiBlitz3_noFPU_r470.ab3@8804>   MOVE.b #$3,D1
0002617E <AmiBlitz3_noFPU_r470.ab3@8805> BRA.w JL_0_693C
00026182 <AmiBlitz3_noFPU_r470.ab3@8809>    BSR.w get1bytemain                                      ;write array paramter code
00026186 <AmiBlitz3_noFPU_r470.ab3@8810>    BSR.w getparameter
0002618E <AmiBlitz3_noFPU_r470.ab3@8811>   BTST #$1,flagmask+1
00026192 <AmiBlitz3_noFPU_r470.ab3@8812>    BEQ.w syntaxerr
00026196 <AmiBlitz3_noFPU_r470.ab3@8813>    BSR.w JL_0_8E3C
0002619A <AmiBlitz3_noFPU_r470.ab3@8814>    BSR.w get1bytemain
0002619E <AmiBlitz3_noFPU_r470.ab3@8815>   CMP.w #$29,D0                                            ;we just want a() or whatever
000261A2 <AmiBlitz3_noFPU_r470.ab3@8816>    BNE.w syntaxerr
000261A8 <AmiBlitz3_noFPU_r470.ab3@8817>   MOVE.w notshared,D1
000261AC <AmiBlitz3_noFPU_r470.ab3@8818>    BNE.w noarrayerr
000261B2 <AmiBlitz3_noFPU_r470.ab3@8819>   MOVE.w regnum,D1
000261B4 <AmiBlitz3_noFPU_r470.ab3@8820>   LSL.w #8,D1
000261B6 <AmiBlitz3_noFPU_r470.ab3@8821>   LSL.w #1,D1
000261BA <AmiBlitz3_noFPU_r470.ab3@8822>   OR.w fbase(PC),D1
000261C0 <AmiBlitz3_noFPU_r470.ab3@8823>    TST.b varmode
000261C4 <AmiBlitz3_noFPU_r470.ab3@8824>    BEQ 'l1
000261C8 <AmiBlitz3_noFPU_r470.ab3@8825>    BCLR #0,d1
000261CC <AmiBlitz3_noFPU_r470.ab3@8828>    BSR.w writeword
000261D0 <AmiBlitz3_noFPU_r470.ab3@8829>   MOVE.w $4(A3),D1
000261D4 <AmiBlitz3_noFPU_r470.ab3@8830>    BSR.w writeword
000261D8 <AmiBlitz3_noFPU_r470.ab3@8831> BRA.w putalp
000261DE <AmiBlitz3_noFPU_r470.ab3@8835>   MOVE.w regnum,D1
000261E0 <AmiBlitz3_noFPU_r470.ab3@8836>   LSL.w #8,D1
000261E2 <AmiBlitz3_noFPU_r470.ab3@8837>   LSL.w #1,D1
000261E6 <AmiBlitz3_noFPU_r470.ab3@8838>   OR.w fbase(PC),D1
000261EC <AmiBlitz3_noFPU_r470.ab3@8839>    TST.b varmode
000261F0 <AmiBlitz3_noFPU_r470.ab3@8840>    BEQ 'l1
000261F4 <AmiBlitz3_noFPU_r470.ab3@8841>    BCLR #0,d1
000261F8 <AmiBlitz3_noFPU_r470.ab3@8844>    BSR.w writeword
000261FC <AmiBlitz3_noFPU_r470.ab3@8845>   MOVE.w $8(A3),D1
000261FE <AmiBlitz3_noFPU_r470.ab3@8846>   LSL.w #2,D1
00026204 <AmiBlitz3_noFPU_r470.ab3@8847>   MOVE.w varmode,D2
00026208 <AmiBlitz3_noFPU_r470.ab3@8848>    BEQ.w JL_0_69BE
0002620A <AmiBlitz3_noFPU_r470.ab3@8849>   NEG.w D1
0002620E <AmiBlitz3_noFPU_r470.ab3@8852>    ADD.w $4(A3),D1
00026212 <AmiBlitz3_noFPU_r470.ab3@8853>    BSR.w writeword
00026218 <AmiBlitz3_noFPU_r470.ab3@8854>   MOVE.w regnum,D1
0002621A <AmiBlitz3_noFPU_r470.ab3@8855>   LSL.w #8,D1
0002621C <AmiBlitz3_noFPU_r470.ab3@8856>   LSL.w #1,D1
00026220 <AmiBlitz3_noFPU_r470.ab3@8857>   MOVE.w partostack(PC),D2
00026224 <AmiBlitz3_noFPU_r470.ab3@8858>    BNE.w JL_0_69F4
0002622C <AmiBlitz3_noFPU_r470.ab3@8859>   CMPI.w #$7,regnum
00026230 <AmiBlitz3_noFPU_r470.ab3@8860>    BCC.w JL_0_69F4
00026234 <AmiBlitz3_noFPU_r470.ab3@8861>   OR.w pushlast(PC),D1
0002623A <AmiBlitz3_noFPU_r470.ab3@8862>   MOVE.w regnum,D2
0002623C <AmiBlitz3_noFPU_r470.ab3@8863>   SUBQ.w #1,D2
0002623E <AmiBlitz3_noFPU_r470.ab3@8864>   OR.w D2,D1
00026242 <AmiBlitz3_noFPU_r470.ab3@8865> BRA.w JL_0_69F8
00026246 <AmiBlitz3_noFPU_r470.ab3@8868>   OR.w pushadd(PC),D1
0002624A <AmiBlitz3_noFPU_r470.ab3@8871>   BSR.w writeword
00026252 <AmiBlitz3_noFPU_r470.ab3@8872>   MOVE.b #$1,partostack
00026256 <AmiBlitz3_noFPU_r470.ab3@8873> BRA.w putalp
0002625A <AmiBlitz3_noFPU_r470.ab3@8877> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
0002625C <AmiBlitz3_noFPU_r470.ab3@8878> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
0002625E <AmiBlitz3_noFPU_r470.ab3@8879> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026262 <AmiBlitz3_noFPU_r470.ab3@8884>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026266 <AmiBlitz3_noFPU_r470.ab3@8885>    BEQ.w evalu2
0002626A <AmiBlitz3_noFPU_r470.ab3@8886> BRA.w eval
00026270 <AmiBlitz3_noFPU_r470.ab3@8890>   MOVEA.l libpointer,A1
00026274 <AmiBlitz3_noFPU_r470.ab3@8893>    CMPA.w #$0,A1
00026278 <AmiBlitz3_noFPU_r470.ab3@8894>    BEQ.w resetlibs__done
0002627E <AmiBlitz3_noFPU_r470.ab3@8895>   MOVE.w #-1,$A(A1)
00026284 <AmiBlitz3_noFPU_r470.ab3@8896>   BCLR #$7,$C(A1)
00026286 <AmiBlitz3_noFPU_r470.ab3@8897>   MOVEA.l (A1),A1
0002628A <AmiBlitz3_noFPU_r470.ab3@8898> BRA.w resetlibs__loop
0002628C <AmiBlitz3_noFPU_r470.ab3@8901> RTS
00026290 <AmiBlitz3_noFPU_r470.ab3@8905>   MOVE.w #$FFFE,D1
00026294 <AmiBlitz3_noFPU_r470.ab3@8908>    BSR.w JL_0_6F38
0002629A <AmiBlitz3_noFPU_r470.ab3@8911>   TST.w cfetchmode
0002629E <AmiBlitz3_noFPU_r470.ab3@8912>    BEQ.w uselib3__noconst
000262A4 <AmiBlitz3_noFPU_r470.ab3@8913>   BTST #$6,$C(A1)
000262A8 <AmiBlitz3_noFPU_r470.ab3@8914>    BNE.w uselib3__constok
000262AC <AmiBlitz3_noFPU_r470.ab3@8915> BRA.w badconerr                                            ;Can't use this Library!
000262AE <AmiBlitz3_noFPU_r470.ab3@8918> RTS
000262B4 <AmiBlitz3_noFPU_r470.ab3@8921>    BSET #$7,$C(A1)
000262B8 <AmiBlitz3_noFPU_r470.ab3@8922>    BNE.w JL_0_6C74                                         ;already done....
000262BE <AmiBlitz3_noFPU_r470.ab3@8923>    CMPI.w #-1,$A(A1)
000262C2 <AmiBlitz3_noFPU_r470.ab3@8924>    BNE.w JL_0_6C74                                         ;something already here
000262C8 <AmiBlitz3_noFPU_r470.ab3@8928>    TST.w dirmode
000262CC <AmiBlitz3_noFPU_r470.ab3@8929>    BEQ.b JL_0_6A86
000262D2 <AmiBlitz3_noFPU_r470.ab3@8930>    TST.b exdebug
000262D6 <AmiBlitz3_noFPU_r470.ab3@8931>    BEQ 'l1
000262DA <AmiBlitz3_noFPU_r470.ab3@8932> BRA.b JL_0_6A86
000262E0 <AmiBlitz3_noFPU_r470.ab3@8935>   BCLR #$7,$C(A1)
000262E4 <AmiBlitz3_noFPU_r470.ab3@8936> BRA.w dirliberr
000262EA <AmiBlitz3_noFPU_r470.ab3@8939>   MOVE.b debugmode,-(a7)
000262EE <AmiBlitz3_noFPU_r470.ab3@8940>   MOVEM.l D1/A0/A2,-(A7)
000262F6 <AmiBlitz3_noFPU_r470.ab3@8946>   BTST #$7,use_debugger
000262FA <AmiBlitz3_noFPU_r470.ab3@8947>   BNE 'debugon
000262FC <AmiBlitz3_noFPU_r470.ab3@8948>   CLR.w D1
00026300 <AmiBlitz3_noFPU_r470.ab3@8949> BRA.b 'debugoff
00026302 <AmiBlitz3_noFPU_r470.ab3@8952>   SNE D1
00026308 <AmiBlitz3_noFPU_r470.ab3@8955>   MOVE.b d1,debugmode
0002630A <AmiBlitz3_noFPU_r470.ab3@8959>   MOVEA.l A1,A0
0002630E <AmiBlitz3_noFPU_r470.ab3@8960>   ADDA.l $12(A1),A0
00026312 <AmiBlitz3_noFPU_r470.ab3@8961>   TST.w -$2(A0)
00026316 <AmiBlitz3_noFPU_r470.ab3@8962>    BEQ.w JL_0_6AD2
0002631A <AmiBlitz3_noFPU_r470.ab3@8963>   MOVEM.l A0-A1,-(A7)
0002631E <AmiBlitz3_noFPU_r470.ab3@8964>   MOVE.w #$FB4F,D1
00026322 <AmiBlitz3_noFPU_r470.ab3@8965>    BSR.w uselib
00026326 <AmiBlitz3_noFPU_r470.ab3@8966>   MOVEM.l (A7)+,A0-A1
0002632C <AmiBlitz3_noFPU_r470.ab3@8967>   ADDQ.w #1,globalvarpointer
00026334 <AmiBlitz3_noFPU_r470.ab3@8968>   BCLR #$0,globalvarpointer+1
0002633C <AmiBlitz3_noFPU_r470.ab3@8969>   MOVE.w globalvarpointer,-$6(A0)
00026342 <AmiBlitz3_noFPU_r470.ab3@8970>   ADDQ.w #4,globalvarpointer
00026346 <AmiBlitz3_noFPU_r470.ab3@8971>   TST.l -$E(A0)
0002634A <AmiBlitz3_noFPU_r470.ab3@8972>    BEQ.w JL_0_6AD2
00026350 <AmiBlitz3_noFPU_r470.ab3@8973>   ADDQ.w #4,globalvarpointer
00026358 <AmiBlitz3_noFPU_r470.ab3@8976>   MOVE.l libend,$28(A1)
0002635A <AmiBlitz3_noFPU_r470.ab3@8977>   MOVEA.l A1,A0
0002635E <AmiBlitz3_noFPU_r470.ab3@8978>   ADDA.l $12(A1),A0
00026360 <AmiBlitz3_noFPU_r470.ab3@8979>   MOVE.l A1,D1
00026364 <AmiBlitz3_noFPU_r470.ab3@8980>   ADD.l $6(A1),D1
00026368 <AmiBlitz3_noFPU_r470.ab3@8981>   TST.l $2C(A1)
0002636C <AmiBlitz3_noFPU_r470.ab3@8982>    BEQ.w JL_0_6AFE
00026372 <AmiBlitz3_noFPU_r470.ab3@8984>   TST.b debugmode
00026376 <AmiBlitz3_noFPU_r470.ab3@8985>    BNE.w JL_0_6AFE
00026378 <AmiBlitz3_noFPU_r470.ab3@8986>   MOVE.l A1,D1
0002637C <AmiBlitz3_noFPU_r470.ab3@8987>   ADD.l $2C(A1),D1
00026382 <AmiBlitz3_noFPU_r470.ab3@8990>   MOVEA.l libend,A2
00026388 <AmiBlitz3_noFPU_r470.ab3@8993>   CMPA.l data1start,A2
0002638C <AmiBlitz3_noFPU_r470.ab3@8994>    BCS.w JL_0_6B24
00026394 <AmiBlitz3_noFPU_r470.ab3@8995>   MOVE.w #$FFFF,dontwrite
00026396 <AmiBlitz3_noFPU_r470.ab3@8998>   ADDQ.w #2,A0
00026398 <AmiBlitz3_noFPU_r470.ab3@8999>   ADDQ.w #2,A2
0002639A <AmiBlitz3_noFPU_r470.ab3@9000>   CMPA.l D1,A0
0002639E <AmiBlitz3_noFPU_r470.ab3@9001>    BCS.w JL_0_6B16
000263A2 <AmiBlitz3_noFPU_r470.ab3@9002> BRA.w JL_0_6B2C
000263A4 <AmiBlitz3_noFPU_r470.ab3@9005>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
000263A6 <AmiBlitz3_noFPU_r470.ab3@9006>   CMPA.l D1,A0
000263AA <AmiBlitz3_noFPU_r470.ab3@9007>    BCS.w JL_0_6B04
000263B0 <AmiBlitz3_noFPU_r470.ab3@9010>   MOVE.l A2,libend
000263B4 <AmiBlitz3_noFPU_r470.ab3@9011>   MOVE.l $20(A1),D1
000263B8 <AmiBlitz3_noFPU_r470.ab3@9012>    BEQ.w JL_0_6BB8
000263BC <AmiBlitz3_noFPU_r470.ab3@9013>   MOVEM.l D0/D2-D3,-(A7)
000263C0 <AmiBlitz3_noFPU_r470.ab3@9014>   MOVEA.l $24(A1),A0
000263C2 <AmiBlitz3_noFPU_r470.ab3@9015>   MOVEQ.l #$00,D3
000263C4 <AmiBlitz3_noFPU_r470.ab3@9018>   MOVE.l (A0)+,D2
000263C8 <AmiBlitz3_noFPU_r470.ab3@9019>   TST.l $2C(A1)
000263CC <AmiBlitz3_noFPU_r470.ab3@9020>    BEQ.w JL_0_6B60
000263D2 <AmiBlitz3_noFPU_r470.ab3@9021>   TST.b debugmode
000263D6 <AmiBlitz3_noFPU_r470.ab3@9022>    BNE.w JL_0_6B60
000263DA <AmiBlitz3_noFPU_r470.ab3@9023>   CMP.l $2C(A1),D2
000263DE <AmiBlitz3_noFPU_r470.ab3@9024>    BCC.w JL_0_6BA0
000263E2 <AmiBlitz3_noFPU_r470.ab3@9027>   TST.w $0(A1,D2.L)
000263E6 <AmiBlitz3_noFPU_r470.ab3@9028>    BPL.w JL_0_6B72
000263E8 <AmiBlitz3_noFPU_r470.ab3@9029>   TST.l D3
000263EC <AmiBlitz3_noFPU_r470.ab3@9030>    BNE.w JL_0_6B72
000263EE <AmiBlitz3_noFPU_r470.ab3@9031>   MOVE.l A0,D0
000263F0 <AmiBlitz3_noFPU_r470.ab3@9032>   MOVE.l D1,D3
000263F4 <AmiBlitz3_noFPU_r470.ab3@9035>   SUB.l $12(A1),D2
000263F8 <AmiBlitz3_noFPU_r470.ab3@9036>    BMI.w JL_0_6BA0
000263FC <AmiBlitz3_noFPU_r470.ab3@9037>   ADD.l $28(A1),D2
000263FE <AmiBlitz3_noFPU_r470.ab3@9038>   MOVE.l D2,-(A7)
00026404 <AmiBlitz3_noFPU_r470.ab3@9039>   SUB.l destbufferstart,D2
00026408 <AmiBlitz3_noFPU_r470.ab3@9040>    BSR.w addhunkoffset
0002640A <AmiBlitz3_noFPU_r470.ab3@9041>   MOVEA.l (A7)+,A2
00026410 <AmiBlitz3_noFPU_r470.ab3@9042>   TST.w dontwrite
00026414 <AmiBlitz3_noFPU_r470.ab3@9043>    BNE.w JL_0_6BA0
00026418 <AmiBlitz3_noFPU_r470.ab3@9044>   MOVE.l $28(A1),D2
0002641C <AmiBlitz3_noFPU_r470.ab3@9045>   SUB.l $12(A1),D2
0002641E <AmiBlitz3_noFPU_r470.ab3@9046>   ADD.l D2,(A2)
00026420 <AmiBlitz3_noFPU_r470.ab3@9049>    SUBQ.l #1,D1
00026424 <AmiBlitz3_noFPU_r470.ab3@9050>    BNE.w JL_0_6B44
00026426 <AmiBlitz3_noFPU_r470.ab3@9051>   MOVE.l D3,D2
0002642A <AmiBlitz3_noFPU_r470.ab3@9052>    BEQ.w JL_0_6BB4
0002642C <AmiBlitz3_noFPU_r470.ab3@9053>   MOVEA.l D0,A2
0002642E <AmiBlitz3_noFPU_r470.ab3@9054>   SUBQ.w #4,A2
00026432 <AmiBlitz3_noFPU_r470.ab3@9055>    BSR.w JL_0_6E34
00026436 <AmiBlitz3_noFPU_r470.ab3@9058>    MOVEM.l (A7)+,D0/D2-D3
0002643A <AmiBlitz3_noFPU_r470.ab3@9061>    MOVEM.l (A7)+,D1/A0/A2
0002643E <AmiBlitz3_noFPU_r470.ab3@9062>   MOVEM.l D1-D2,-(A7)
00026442 <AmiBlitz3_noFPU_r470.ab3@9063>   TST.w $1A(A1)
00026446 <AmiBlitz3_noFPU_r470.ab3@9064>    BNE.w JL_0_6BD0
0002644A <AmiBlitz3_noFPU_r470.ab3@9065>   CLR.w $A(A1)
0002644E <AmiBlitz3_noFPU_r470.ab3@9066> BRA.w JL_0_6C5E
00026454 <AmiBlitz3_noFPU_r470.ab3@9069>   ADDQ.w #1,globalvarpointer
0002645C <AmiBlitz3_noFPU_r470.ab3@9070>   BCLR #$0,globalvarpointer+1
00026464 <AmiBlitz3_noFPU_r470.ab3@9071>   MOVE.w globalvarpointer,$A(A1)
00026468 <AmiBlitz3_noFPU_r470.ab3@9072>   CMP.w #-$12D,D1
0002646C <AmiBlitz3_noFPU_r470.ab3@9073>    BNE.w JL_0_6C16
00026474 <AmiBlitz3_noFPU_r470.ab3@9074>   MOVE.w $A(A1),movestdn+2
0002647C <AmiBlitz3_noFPU_r470.ab3@9075>   MOVE.w $A(A1),pusha3+2
00026484 <AmiBlitz3_noFPU_r470.ab3@9076>   MOVE.w $A(A1),pusha32+2
0002648C <AmiBlitz3_noFPU_r470.ab3@9077>   MOVE.w $A(A1),pulla3+2
00026494 <AmiBlitz3_noFPU_r470.ab3@9078>   MOVE.w $A(A1),geta3+2
00026498 <AmiBlitz3_noFPU_r470.ab3@9081>    CMP.w #-$3E9,D1
0002649C <AmiBlitz3_noFPU_r470.ab3@9082>    BNE.w JL_0_6C3E
000264A4 <AmiBlitz3_noFPU_r470.ab3@9083>   MOVE.w $A(A1),dataget+2
000264AC <AmiBlitz3_noFPU_r470.ab3@9084>   MOVE.w $A(A1),dataput+2
000264B4 <AmiBlitz3_noFPU_r470.ab3@9085>   MOVE.w $A(A1),rescode+6
000264BC <AmiBlitz3_noFPU_r470.ab3@9086>   MOVE.w $A(A1),rescode2+2
000264C2 <AmiBlitz3_noFPU_r470.ab3@9089>   ADDQ.w #2,globalvarpointer
000264C6 <AmiBlitz3_noFPU_r470.ab3@9090>   TST.w $1A(A1)
000264CA <AmiBlitz3_noFPU_r470.ab3@9091>    BMI.w JL_0_6C52
000264D0 <AmiBlitz3_noFPU_r470.ab3@9092>   ADDQ.w #2,globalvarpointer
000264D4 <AmiBlitz3_noFPU_r470.ab3@9095>   MOVEM.l D1/A1,-(A7)
000264D8 <AmiBlitz3_noFPU_r470.ab3@9096>   BSR.w uselib2
000264DC <AmiBlitz3_noFPU_r470.ab3@9097>   MOVEM.l (A7)+,D1/A1
000264DE <AmiBlitz3_noFPU_r470.ab3@9100>   MOVE.w D1,D2
000264E2 <AmiBlitz3_noFPU_r470.ab3@9101>   MOVE.l $16(A1),D1
000264E6 <AmiBlitz3_noFPU_r470.ab3@9102>    BSR.w uselib2_org
000264EA <AmiBlitz3_noFPU_r470.ab3@9103>   MOVE.l $1C(A1),D1
000264EE <AmiBlitz3_noFPU_r470.ab3@9104>    BSR.w uselib2_org
000264F2 <AmiBlitz3_noFPU_r470.ab3@9105>   MOVEM.l (A7)+,D1-D2
000264F8 <AmiBlitz3_noFPU_r470.ab3@9107>   MOVE.b (a7)+,debugmode
000264FA <AmiBlitz3_noFPU_r470.ab3@9110> RTS
000264FC <AmiBlitz3_noFPU_r470.ab3@9114>   MOVEQ.l #$00,D2
00026502 <AmiBlitz3_noFPU_r470.ab3@9117>   MOVEA.l tokeslist,A2
00026504 <AmiBlitz3_noFPU_r470.ab3@9118>   CMPA.l D2,A2
00026508 <AmiBlitz3_noFPU_r470.ab3@9119>    BEQ.w JL_0_6CE0
0002650A <AmiBlitz3_noFPU_r470.ab3@9120>   MOVE.l A2,-(A7)
0002650C <AmiBlitz3_noFPU_r470.ab3@9123>   MOVEQ.l #$00,D3
00026510 <AmiBlitz3_noFPU_r470.ab3@9126>   MOVEA.l $8(A2),A3
00026512 <AmiBlitz3_noFPU_r470.ab3@9127>   CMPA.l D3,A3
00026516 <AmiBlitz3_noFPU_r470.ab3@9128>    BEQ.w JL_0_6CD2
00026518 <AmiBlitz3_noFPU_r470.ab3@9129>   MOVE.l A3,-(A7)
0002651C <AmiBlitz3_noFPU_r470.ab3@9130>   MOVEM.l D2-D3/A2-A3,-(A7)
00026520 <AmiBlitz3_noFPU_r470.ab3@9131>   MOVE.w $4(A2),D1
00026524 <AmiBlitz3_noFPU_r470.ab3@9132>   MOVE.w $6(A2),D2
00026528 <AmiBlitz3_noFPU_r470.ab3@9133>    BSR.w JL_0_6CE2
0002652C <AmiBlitz3_noFPU_r470.ab3@9134>   MOVEM.l (A7)+,D2-D3/A2-A3
00026532 <AmiBlitz3_noFPU_r470.ab3@9135>   MOVE.w dontwrite,D0
00026536 <AmiBlitz3_noFPU_r470.ab3@9136>    BEQ.w JL_0_6CBE
00026538 <AmiBlitz3_noFPU_r470.ab3@9139>   MOVEA.l (A3),A3
0002653A <AmiBlitz3_noFPU_r470.ab3@9140>   CMPA.l D3,A3
0002653E <AmiBlitz3_noFPU_r470.ab3@9141>    BNE.w JL_0_6CB2
00026542 <AmiBlitz3_noFPU_r470.ab3@9142> BRA.w JL_0_6CCC
00026546 <AmiBlitz3_noFPU_r470.ab3@9145>   MOVEA.l $4(A3),A0
00026548 <AmiBlitz3_noFPU_r470.ab3@9146>   MOVE.l D7,(A0)
0002654A <AmiBlitz3_noFPU_r470.ab3@9147>   MOVEA.l (A3),A3
0002654C <AmiBlitz3_noFPU_r470.ab3@9148>   CMPA.l D3,A3
00026550 <AmiBlitz3_noFPU_r470.ab3@9149>    BNE.w JL_0_6CBE
00026552 <AmiBlitz3_noFPU_r470.ab3@9152>   MOVE.l (A7)+,D3
00026556 <AmiBlitz3_noFPU_r470.ab3@9153> BRA.w JL_0_6C88
00026558 <AmiBlitz3_noFPU_r470.ab3@9156>    MOVEA.l (A2),A2
0002655A <AmiBlitz3_noFPU_r470.ab3@9157>   CMPA.l D2,A2
0002655E <AmiBlitz3_noFPU_r470.ab3@9158>    BNE.w JL_0_6C86
00026560 <AmiBlitz3_noFPU_r470.ab3@9159>   MOVE.l (A7)+,D2
00026564 <AmiBlitz3_noFPU_r470.ab3@9160> BRA.w JL_0_6C78
00026566 <AmiBlitz3_noFPU_r470.ab3@9163> RTS
00026568 <AmiBlitz3_noFPU_r470.ab3@9167>   MOVE.w D2,-(A7)
0002656C <AmiBlitz3_noFPU_r470.ab3@9168>    BSR.w searchinstr
0002656E <AmiBlitz3_noFPU_r470.ab3@9169>   MOVE.w (A7)+,D2
00026576 <AmiBlitz3_noFPU_r470.ab3@9170>   BCLR #$7,blitzmode
0002657A <AmiBlitz3_noFPU_r470.ab3@9171>   BCLR #$E,D2
0002657E <AmiBlitz3_noFPU_r470.ab3@9172>    BEQ.w JL_0_6D02
00026586 <AmiBlitz3_noFPU_r470.ab3@9173>   BSET #$7,blitzmode
00026588 <AmiBlitz3_noFPU_r470.ab3@9176>   TST.w (A3)
0002658C <AmiBlitz3_noFPU_r470.ab3@9177>    BEQ.w JL_0_6DAC
00026592 <AmiBlitz3_noFPU_r470.ab3@9178>   BTST #$2,$1(A3)
00026596 <AmiBlitz3_noFPU_r470.ab3@9179>    BNE.w tokeerr
0002659C <AmiBlitz3_noFPU_r470.ab3@9180>   BTST #$3,$1(A3)
000265A0 <AmiBlitz3_noFPU_r470.ab3@9181>    BNE.w tokeerr
000265A4 <AmiBlitz3_noFPU_r470.ab3@9182>   LEA $6(A3),A3
000265A6 <AmiBlitz3_noFPU_r470.ab3@9185>   MOVE.w (A3)+,D0
000265AA <AmiBlitz3_noFPU_r470.ab3@9186>    BMI.w tokeerr
000265AE <AmiBlitz3_noFPU_r470.ab3@9187>   ANDI.w #$FF,D0
000265B0 <AmiBlitz3_noFPU_r470.ab3@9188>   ADDA.w D0,A3
000265B2 <AmiBlitz3_noFPU_r470.ab3@9189>   ADDQ.w #1,A3
000265B4 <AmiBlitz3_noFPU_r470.ab3@9190>   EXG.l D0,A3
000265B8 <AmiBlitz3_noFPU_r470.ab3@9191>   BCLR #$0,D0
000265BA <AmiBlitz3_noFPU_r470.ab3@9192>   EXG.l D0,A3
000265BC <AmiBlitz3_noFPU_r470.ab3@9193>   SUBQ.w #1,D2
000265C0 <AmiBlitz3_noFPU_r470.ab3@9194>    BPL.w JL_0_6D98
000265C2 <AmiBlitz3_noFPU_r470.ab3@9195>   TST.w (A3)
000265C6 <AmiBlitz3_noFPU_r470.ab3@9196>    BNE.w JL_0_6D76
000265CA <AmiBlitz3_noFPU_r470.ab3@9197>   MOVE.l $2(A3),D0
000265CE <AmiBlitz3_noFPU_r470.ab3@9198>   OR.l $A(A3),D0
000265D2 <AmiBlitz3_noFPU_r470.ab3@9199>    BNE.w JL_0_6D76
000265D8 <AmiBlitz3_noFPU_r470.ab3@9200>   BTST #$0,$9(A3)
000265DC <AmiBlitz3_noFPU_r470.ab3@9201>    BNE.w JL_0_6D76
000265E0 <AmiBlitz3_noFPU_r470.ab3@9202>   MOVE.l $6(A3),D7
000265E4 <AmiBlitz3_noFPU_r470.ab3@9203>   MOVE.w $0(A2,D7.L),D0
000265E8 <AmiBlitz3_noFPU_r470.ab3@9204>   ANDI.w #$F000,D0
000265EC <AmiBlitz3_noFPU_r470.ab3@9205>   CMP.w #-$6000,D0
000265F0 <AmiBlitz3_noFPU_r470.ab3@9206>    BEQ.w JL_0_6D76
000265F4 <AmiBlitz3_noFPU_r470.ab3@9209>   SUB.l $12(A2),D7
000265F8 <AmiBlitz3_noFPU_r470.ab3@9210>   ADD.l $28(A2),D7
000265FA <AmiBlitz3_noFPU_r470.ab3@9211> RTS
00026600 <AmiBlitz3_noFPU_r470.ab3@9215>   LEA cutejsr,A0
00026606 <AmiBlitz3_noFPU_r470.ab3@9218>   MOVE.l destpointer,-(A7)
0002660E <AmiBlitz3_noFPU_r470.ab3@9219>   MOVE.w #$FFFF,lasta6
00026610 <AmiBlitz3_noFPU_r470.ab3@9222>    JSR (A0)
00026614 <AmiBlitz3_noFPU_r470.ab3@9223>   MOVE.w #$4E75,D1
00026618 <AmiBlitz3_noFPU_r470.ab3@9224>    BSR.w writeword
0002661A <AmiBlitz3_noFPU_r470.ab3@9225>   MOVE.l (A7)+,D7
0002661C <AmiBlitz3_noFPU_r470.ab3@9226> RTS
0002661E <AmiBlitz3_noFPU_r470.ab3@9230>   TST.w (A3)+
00026622 <AmiBlitz3_noFPU_r470.ab3@9231>    BEQ.w JL_0_6DA4
00026624 <AmiBlitz3_noFPU_r470.ab3@9232>   ADDQ.w #2,A3
00026628 <AmiBlitz3_noFPU_r470.ab3@9233> BRA.w JL_0_6D98
0002662C <AmiBlitz3_noFPU_r470.ab3@9236>   LEA $C(A3),A3
00026630 <AmiBlitz3_noFPU_r470.ab3@9237> BRA.w JL_0_6D20
00026632 <AmiBlitz3_noFPU_r470.ab3@9241>   TST.w D2
00026636 <AmiBlitz3_noFPU_r470.ab3@9242>    BNE.w tokeerr
0002663A <AmiBlitz3_noFPU_r470.ab3@9243>   TST.w $6(A3)
0002663E <AmiBlitz3_noFPU_r470.ab3@9244>    BNE.w JL_0_6DE4
00026642 <AmiBlitz3_noFPU_r470.ab3@9245>   MOVE.l $8(A3),D0
00026646 <AmiBlitz3_noFPU_r470.ab3@9246>   OR.l $10(A3),D0
0002664A <AmiBlitz3_noFPU_r470.ab3@9247>    BNE.w JL_0_6DE4
00026650 <AmiBlitz3_noFPU_r470.ab3@9248>   BTST #$0,$F(A3)
00026654 <AmiBlitz3_noFPU_r470.ab3@9249>    BNE.w JL_0_6DE4
00026658 <AmiBlitz3_noFPU_r470.ab3@9250>   MOVE.l $C(A3),D7
0002665C <AmiBlitz3_noFPU_r470.ab3@9251>   MOVE.w $0(A2,D7.L),D0
00026660 <AmiBlitz3_noFPU_r470.ab3@9252>   ANDI.w #$F000,D0
00026664 <AmiBlitz3_noFPU_r470.ab3@9253>   CMP.w #-$6000,D0
00026668 <AmiBlitz3_noFPU_r470.ab3@9254>    BNE.w JL_0_6D6C
0002666A <AmiBlitz3_noFPU_r470.ab3@9257>   MOVE.l A3,D1
0002666C <AmiBlitz3_noFPU_r470.ab3@9258>   SUB.l A2,D1
00026672 <AmiBlitz3_noFPU_r470.ab3@9259>   LEA Amakelibsub,A0
00026676 <AmiBlitz3_noFPU_r470.ab3@9260> BRA.w JL_0_6D7C
0002667C <AmiBlitz3_noFPU_r470.ab3@9264>   MOVEA.l _execbase,A6
00026682 <AmiBlitz3_noFPU_r470.ab3@9265>   MOVEA.l tokeslist,A2
00026688 <AmiBlitz3_noFPU_r470.ab3@9266>   CLR.l tokeslist
0002668C <AmiBlitz3_noFPU_r470.ab3@9269>     CMPA.w #$0,A2
00026690 <AmiBlitz3_noFPU_r470.ab3@9270>      BEQ.w JL_0_6E32
00026694 <AmiBlitz3_noFPU_r470.ab3@9271>     MOVEA.l $8(A2),A3
00026698 <AmiBlitz3_noFPU_r470.ab3@9274>       CMPA.w #$0,A3
0002669C <AmiBlitz3_noFPU_r470.ab3@9275>        BEQ.w JL_0_6E24
0002669E <AmiBlitz3_noFPU_r470.ab3@9276>       MOVEA.l A3,A1
000266A0 <AmiBlitz3_noFPU_r470.ab3@9277>       MOVEA.l (A3),A3
000266A2 <AmiBlitz3_noFPU_r470.ab3@9278>       MOVEQ.l #$08,D0
000266A8 <AmiBlitz3_noFPU_r470.ab3@9279>       MOVE.l mempool,a0
000266AE <AmiBlitz3_noFPU_r470.ab3@9280>       MOVEA.l _execbase,A6
000266B2 <AmiBlitz3_noFPU_r470.ab3@9281>       JSR _FreePooled(A6)
000266B6 <AmiBlitz3_noFPU_r470.ab3@9282> BRA.w JL_0_6E0E
000266B8 <AmiBlitz3_noFPU_r470.ab3@9285>     MOVEA.l A2,A1
000266BA <AmiBlitz3_noFPU_r470.ab3@9286>     MOVEA.l (A2),A2
000266BC <AmiBlitz3_noFPU_r470.ab3@9287>     MOVEQ.l #$0C,D0
000266C2 <AmiBlitz3_noFPU_r470.ab3@9288>     MOVE.l mempool,a0
000266C8 <AmiBlitz3_noFPU_r470.ab3@9289>     MOVEA.l _execbase,A6
000266CC <AmiBlitz3_noFPU_r470.ab3@9290>     JSR _FreePooled(A6)
000266D0 <AmiBlitz3_noFPU_r470.ab3@9291> BRA.w JL_0_6E02
000266D2 <AmiBlitz3_noFPU_r470.ab3@9294> RTS
000266D6 <AmiBlitz3_noFPU_r470.ab3@9298>   MOVEM.l D3-D5/A1-A6,-(A7)
000266D8 <AmiBlitz3_noFPU_r470.ab3@9299>   MOVEA.l A1,A4
000266DA <AmiBlitz3_noFPU_r470.ab3@9302>   MOVE.l (A2)+,D3
000266DE <AmiBlitz3_noFPU_r470.ab3@9303>   MOVE.w $0(A4,D3.L),D5
000266E2 <AmiBlitz3_noFPU_r470.ab3@9304>    BPL.w JL_0_6E7A
000266E6 <AmiBlitz3_noFPU_r470.ab3@9305>   TST.l $2C(A4)
000266EA <AmiBlitz3_noFPU_r470.ab3@9306>    BEQ.w JL_0_6E5E
000266F0 <AmiBlitz3_noFPU_r470.ab3@9307>   TST.b debugmode
000266F4 <AmiBlitz3_noFPU_r470.ab3@9308>    BNE.w JL_0_6E5E
000266F8 <AmiBlitz3_noFPU_r470.ab3@9309>   CMP.l $2C(A4),D3
000266FC <AmiBlitz3_noFPU_r470.ab3@9310>    BCC.w JL_0_6E7A
00026700 <AmiBlitz3_noFPU_r470.ab3@9313>   BCLR #$F,D5
00026704 <AmiBlitz3_noFPU_r470.ab3@9314>   MOVE.w $2(A4,D3.L),D4
00026708 <AmiBlitz3_noFPU_r470.ab3@9315>   SUB.l $12(A4),D3
0002670C <AmiBlitz3_noFPU_r470.ab3@9316>   ADD.l $28(A4),D3
00026710 <AmiBlitz3_noFPU_r470.ab3@9317>   MOVEM.l D2/A2/A4,-(A7)
00026714 <AmiBlitz3_noFPU_r470.ab3@9318>    BSR.w JL_0_6E86
00026718 <AmiBlitz3_noFPU_r470.ab3@9319>   MOVEM.l (A7)+,D2/A2/A4
0002671A <AmiBlitz3_noFPU_r470.ab3@9322>   SUBQ.l #1,D2
0002671E <AmiBlitz3_noFPU_r470.ab3@9323>    BNE.w JL_0_6E3A
00026722 <AmiBlitz3_noFPU_r470.ab3@9324>   MOVEM.l (A7)+,D3-D5/A1-A6
00026724 <AmiBlitz3_noFPU_r470.ab3@9325> RTS
0002672A <AmiBlitz3_noFPU_r470.ab3@9329>   LEA tokeslist,A3
00026730 <AmiBlitz3_noFPU_r470.ab3@9330>   MOVEA.l _execbase,A6
00026732 <AmiBlitz3_noFPU_r470.ab3@9333>   MOVE.l (A3),D0
00026736 <AmiBlitz3_noFPU_r470.ab3@9334>    BEQ.w JL_0_6EAC
00026738 <AmiBlitz3_noFPU_r470.ab3@9335>   MOVEA.l D0,A3
0002673C <AmiBlitz3_noFPU_r470.ab3@9336>   CMP.w $4(A3),D4
00026740 <AmiBlitz3_noFPU_r470.ab3@9337>    BNE.w JL_0_6E90
00026744 <AmiBlitz3_noFPU_r470.ab3@9338>   CMP.w $6(A3),D5
00026748 <AmiBlitz3_noFPU_r470.ab3@9339>    BNE.w JL_0_6E90
0002674C <AmiBlitz3_noFPU_r470.ab3@9340> BRA.w JL_0_6ED0
0002674E <AmiBlitz3_noFPU_r470.ab3@9343>   MOVEQ.l #$0C,D0
00026750 <AmiBlitz3_noFPU_r470.ab3@9344>   MOVEQ.l #$01,D1
00026756 <AmiBlitz3_noFPU_r470.ab3@9345>   MOVE.l mempool,a0
0002675A <AmiBlitz3_noFPU_r470.ab3@9346>   JSR _AllocPooled(a6)
0002675C <AmiBlitz3_noFPU_r470.ab3@9348>   MOVEA.l D0,A3
00026762 <AmiBlitz3_noFPU_r470.ab3@9349>   MOVE.l tokeslist,(A3)
00026768 <AmiBlitz3_noFPU_r470.ab3@9350>   MOVE.l A3,tokeslist
0002676C <AmiBlitz3_noFPU_r470.ab3@9351>   MOVE.w D4,$4(A3)
00026770 <AmiBlitz3_noFPU_r470.ab3@9352>   MOVE.w D5,$6(A3)
00026774 <AmiBlitz3_noFPU_r470.ab3@9353>   CLR.l $8(A3)
00026776 <AmiBlitz3_noFPU_r470.ab3@9356>   MOVEQ.l #$08,D0
00026778 <AmiBlitz3_noFPU_r470.ab3@9357>   MOVEQ.l #$01,D1
0002677E <AmiBlitz3_noFPU_r470.ab3@9358>   MOVE.l mempool,a0
00026782 <AmiBlitz3_noFPU_r470.ab3@9359>   JSR _AllocPooled(a6)
00026784 <AmiBlitz3_noFPU_r470.ab3@9361>   MOVEA.l D0,A0
00026788 <AmiBlitz3_noFPU_r470.ab3@9362>   MOVE.l D3,$4(A0)
0002678C <AmiBlitz3_noFPU_r470.ab3@9363>   MOVE.l $8(A3),(A0)
00026790 <AmiBlitz3_noFPU_r470.ab3@9364>   MOVE.l A0,$8(A3)
00026792 <AmiBlitz3_noFPU_r470.ab3@9365>   MOVE.w D4,D1
00026796 <AmiBlitz3_noFPU_r470.ab3@9366> BRA.w searchinstr
0002679A <AmiBlitz3_noFPU_r470.ab3@9369> tokeslist: Ds.l 1
0002679E <AmiBlitz3_noFPU_r470.ab3@9382>   BEQ.w uselib2_org__skip
000267A0 <AmiBlitz3_noFPU_r470.ab3@9383>   MOVE.l A1,-(A7)
000267A2 <AmiBlitz3_noFPU_r470.ab3@9384>   ADDA.l D1,A1
000267A4 <AmiBlitz3_noFPU_r470.ab3@9385>   ADDQ.w #6,A1
000267A6 <AmiBlitz3_noFPU_r470.ab3@9388>     MOVE.w (A1)+,D1
000267AA <AmiBlitz3_noFPU_r470.ab3@9389>     BEQ.w uselib2_org__done
000267AC <AmiBlitz3_noFPU_r470.ab3@9390>     CMP.w D2,D1
000267B0 <AmiBlitz3_noFPU_r470.ab3@9391>     BEQ.w uselib2_org__skip2
000267B2 <AmiBlitz3_noFPU_r470.ab3@9392>     MOVE.l A1,-(A7)
000267B6 <AmiBlitz3_noFPU_r470.ab3@9393>     BSR.w uselib
000267B8 <AmiBlitz3_noFPU_r470.ab3@9394>     MOVEA.l (A7)+,A1
000267BA <AmiBlitz3_noFPU_r470.ab3@9397>     ADDQ.w #2,A1
000267BE <AmiBlitz3_noFPU_r470.ab3@9398> BRA.w uselib2_org__loop
000267C0 <AmiBlitz3_noFPU_r470.ab3@9401>   MOVEA.l (A7)+,A1
000267C2 <AmiBlitz3_noFPU_r470.ab3@9404> RTS
000267C8 <AmiBlitz3_noFPU_r470.ab3@9408>   MOVEA.l libpointer,A1
000267CC <AmiBlitz3_noFPU_r470.ab3@9411>   CMPA.w #$0,A1
000267D0 <AmiBlitz3_noFPU_r470.ab3@9412>    BEQ.b JL_0_6F36
000267D4 <AmiBlitz3_noFPU_r470.ab3@9413>   CMP.w $4(A1),D1
000267D8 <AmiBlitz3_noFPU_r470.ab3@9414>    BEQ.w JL_0_6F34
000267DA <AmiBlitz3_noFPU_r470.ab3@9415>   MOVEA.l (A1),A1
000267DE <AmiBlitz3_noFPU_r470.ab3@9416> BRA.w JL_0_6F20
000267E0 <AmiBlitz3_noFPU_r470.ab3@9419>   MOVEQ.l #-$01,D1
000267E2 <AmiBlitz3_noFPU_r470.ab3@9422> RTS
000267E6 <AmiBlitz3_noFPU_r470.ab3@9426>   MOVEM.l d0/a2,-(a7)
000267E8 <AmiBlitz3_noFPU_r470.ab3@9427>   MOVEQ #0,d0
000267EE <AmiBlitz3_noFPU_r470.ab3@9428>   LEA instrtab+4,a2
000267F0 <AmiBlitz3_noFPU_r470.ab3@9429>   MOVE.w d1,d0
000267F2 <AmiBlitz3_noFPU_r470.ab3@9430>   ASL.l #3,d0
000267F6 <AmiBlitz3_noFPU_r470.ab3@9431>   MOVE.l 0(a2,d0.l),a1                                     ;*8
000267FC <AmiBlitz3_noFPU_r470.ab3@9432>   CMP.l #0,a1
00026800 <AmiBlitz3_noFPU_r470.ab3@9433>   BNE JL_0_6F54b
00026806 <AmiBlitz3_noFPU_r470.ab3@9435>   MOVEA.l libpointer,A1
0002680A <AmiBlitz3_noFPU_r470.ab3@9438>     CMPA.w #$0,A1
0002680E <AmiBlitz3_noFPU_r470.ab3@9439>     BEQ.w noliberr
00026812 <AmiBlitz3_noFPU_r470.ab3@9440>     CMP.w $4(A1),D1
00026816 <AmiBlitz3_noFPU_r470.ab3@9441>     BEQ.w JL_0_6F54
00026818 <AmiBlitz3_noFPU_r470.ab3@9442>    MOVEA.l (A1),A1
0002681C <AmiBlitz3_noFPU_r470.ab3@9443> BRA.w JL_0_6F3E
00026820 <AmiBlitz3_noFPU_r470.ab3@9446>   MOVE.l a1,0(a2,d0.l)
00026824 <AmiBlitz3_noFPU_r470.ab3@9449>   MOVEM.l (a7)+,d0/a2
00026826 <AmiBlitz3_noFPU_r470.ab3@9450> RTS
0002682A <AmiBlitz3_noFPU_r470.ab3@9453>   MOVEM.l d0-d1/a1,-(a7)
0002682C <AmiBlitz3_noFPU_r470.ab3@9454>   MOVEQ #0,d0
00026832 <AmiBlitz3_noFPU_r470.ab3@9455>   LEA instrtab,a1
00026834 <AmiBlitz3_noFPU_r470.ab3@9456>   MOVE.w d1,d0
00026836 <AmiBlitz3_noFPU_r470.ab3@9457>   ASL.l #3,d0
0002683A <AmiBlitz3_noFPU_r470.ab3@9458>   MOVE.l 0(a1,d0.l),a3
0002683E <AmiBlitz3_noFPU_r470.ab3@9459>   MOVE.l 4(a1,d0.l),a2
00026844 <AmiBlitz3_noFPU_r470.ab3@9460>   CMP.l #0,a3
00026848 <AmiBlitz3_noFPU_r470.ab3@9461>   BNE JL_0_6F92b
0002684E <AmiBlitz3_noFPU_r470.ab3@9463>   MOVEA.l libpointer,A2
00026852 <AmiBlitz3_noFPU_r470.ab3@9466>   CMPA.w #$0,A2
00026856 <AmiBlitz3_noFPU_r470.ab3@9467>   BEQ.w notokerr
0002685A <AmiBlitz3_noFPU_r470.ab3@9468>   CMP.w $E(A2),D1
0002685E <AmiBlitz3_noFPU_r470.ab3@9469>   BCS.w JL_0_6FB8
00026862 <AmiBlitz3_noFPU_r470.ab3@9470>   CMP.w $10(A2),D1
00026866 <AmiBlitz3_noFPU_r470.ab3@9471>   BCC.w JL_0_6FB8
0002686A <AmiBlitz3_noFPU_r470.ab3@9472>   LEA $30(A2),A3
0002686E <AmiBlitz3_noFPU_r470.ab3@9473>   TST.w $4(A2)
00026872 <AmiBlitz3_noFPU_r470.ab3@9474>   BPL.w JL_0_6FA6
00026876 <AmiBlitz3_noFPU_r470.ab3@9477>     CMP.w $E(A2),D1
0002687A <AmiBlitz3_noFPU_r470.ab3@9478>     BEQ.w JL_0_6F92
0002687C <AmiBlitz3_noFPU_r470.ab3@9479>     SUBQ.w #1,D1
00026880 <AmiBlitz3_noFPU_r470.ab3@9480>     MOVEA.l $2(A3),A3
00026884 <AmiBlitz3_noFPU_r470.ab3@9481> BRA.w JL_0_6F80
00026888 <AmiBlitz3_noFPU_r470.ab3@9484>   MOVE.l a3,0(a1,d0.l)
0002688C <AmiBlitz3_noFPU_r470.ab3@9485>   MOVE.l a2,4(a1,d0.l)
00026890 <AmiBlitz3_noFPU_r470.ab3@9488>   MOVEM.l (a7)+,d0-d1/a1
00026894 <AmiBlitz3_noFPU_r470.ab3@9489>   MOVEM.l D1/A1-a3,-(A7)
00026898 <AmiBlitz3_noFPU_r470.ab3@9490>   CMP.w #1,(a3)
0002689C <AmiBlitz3_noFPU_r470.ab3@9491>   BNE.s ex10
000268A4 <AmiBlitz3_noFPU_r470.ab3@9492>   CMP.l #$12345678,$e(a3)
000268A8 <AmiBlitz3_noFPU_r470.ab3@9493>   BNE.s ex10
000268AE <AmiBlitz3_noFPU_r470.ab3@9494>   CMP.w #$ffff,$16(a3)
000268B2 <AmiBlitz3_noFPU_r470.ab3@9495>   BNE.s ex10
000268B6 <AmiBlitz3_noFPU_r470.ab3@9496>   MOVE.l $12(a3),d1
000268BA <AmiBlitz3_noFPU_r470.ab3@9497>   BEQ.s ex10
000268C0 <AmiBlitz3_noFPU_r470.ab3@9498>   LEA pluginbase,a3
000268C4 <AmiBlitz3_noFPU_r470.ab3@9500> JMP 0(a2,d1.l)                                             ;plugin
000268C8 <AmiBlitz3_noFPU_r470.ab3@9503>   MOVEM.l (A7)+,D1/A1-a3
000268CE <AmiBlitz3_noFPU_r470.ab3@9504>   JSR stripspaces
000268D0 <AmiBlitz3_noFPU_r470.ab3@9505>   MOVEQ #0,d0
000268D2 <AmiBlitz3_noFPU_r470.ab3@9506>   MOVE.b (a5)+,d0
000268D8 <AmiBlitz3_noFPU_r470.ab3@9507>   MOVE.w d0,lastchar
000268DA <AmiBlitz3_noFPU_r470.ab3@9508>   ADDQ.l #4,a7
000268DC <AmiBlitz3_noFPU_r470.ab3@9509> RTS
000268DE <AmiBlitz3_noFPU_r470.ab3@9513>   MOVEA.l A2,A1
000268E4 <AmiBlitz3_noFPU_r470.ab3@9514>   CLR.b newmode
000268E8 <AmiBlitz3_noFPU_r470.ab3@9515>   MOVE.w $4(A1),D1
000268EC <AmiBlitz3_noFPU_r470.ab3@9518>   BSR.w uselib3
000268F0 <AmiBlitz3_noFPU_r470.ab3@9519>   MOVEM.l (A7)+,D1/A1-a3
000268F2 <AmiBlitz3_noFPU_r470.ab3@9520> RTS
000268F8 <AmiBlitz3_noFPU_r470.ab3@9523>   MOVE.w globalvarpointer,-(a7)
00026900 <AmiBlitz3_noFPU_r470.ab3@9524>   MOVE.w #$8004,globalvarpointer
00026904 <AmiBlitz3_noFPU_r470.ab3@9525>   BSR.w uselib3
0002690A <AmiBlitz3_noFPU_r470.ab3@9526>   MOVE.w (a7)+,globalvarpointer
0002690E <AmiBlitz3_noFPU_r470.ab3@9527>   MOVEM.l (A7)+,D1/A1-a3
00026910 <AmiBlitz3_noFPU_r470.ab3@9528> RTS
00026914 <AmiBlitz3_noFPU_r470.ab3@9531>     CMP.w $E(A2),D1
00026918 <AmiBlitz3_noFPU_r470.ab3@9532>     BEQ.w JL_0_6F92
0002691A <AmiBlitz3_noFPU_r470.ab3@9533>     SUBQ.w #1,D1
0002691E <AmiBlitz3_noFPU_r470.ab3@9534>     MOVEA.l $2(A3),A3
00026922 <AmiBlitz3_noFPU_r470.ab3@9535> BRA.w JL_0_6FA6
00026924 <AmiBlitz3_noFPU_r470.ab3@9538>   MOVEA.l (A2),A2
00026928 <AmiBlitz3_noFPU_r470.ab3@9539> BRA.w JL_0_6F5C
0002692E <AmiBlitz3_noFPU_r470.ab3@9542> JMP writeword
00026932 <AmiBlitz3_noFPU_r470.ab3@9545> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00026936 <AmiBlitz3_noFPU_r470.ab3@9546> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
0002693A <AmiBlitz3_noFPU_r470.ab3@9547> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
0002693C <AmiBlitz3_noFPU_r470.ab3@9553>   TST.l D0
00026940 <AmiBlitz3_noFPU_r470.ab3@9554>   BEQ.w exit_loadlibsfile
00026942 <AmiBlitz3_noFPU_r470.ab3@9555>     MOVE.l D0,D6                                           ;d6=len
00026948 <AmiBlitz3_noFPU_r470.ab3@9556>     MOVEA.l _dosbase,A6
0002694E <AmiBlitz3_noFPU_r470.ab3@9557>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026952 <AmiBlitz3_noFPU_r470.ab3@9558>     JSR _Open(A6)
00026954 <AmiBlitz3_noFPU_r470.ab3@9559>     MOVE.l D0,D7
00026958 <AmiBlitz3_noFPU_r470.ab3@9560>     BEQ.w exit_loadlibsfile
0002695A <AmiBlitz3_noFPU_r470.ab3@9561>       MOVE.l D6,D0
0002695C <AmiBlitz3_noFPU_r470.ab3@9562>       MOVEQ.l #$01,D1
00026962 <AmiBlitz3_noFPU_r470.ab3@9563>       MOVEA.l _execbase,A6
00026968 <AmiBlitz3_noFPU_r470.ab3@9564>       MOVE.l mempool,a0
0002696C <AmiBlitz3_noFPU_r470.ab3@9565>       JSR _AllocPooled(a6)
0002696E <AmiBlitz3_noFPU_r470.ab3@9566>       MOVE.l D0,D5                                         ;start address
00026970 <AmiBlitz3_noFPU_r470.ab3@9568>       MOVE.l D7,D1                                         ; handle
00026972 <AmiBlitz3_noFPU_r470.ab3@9569>       MOVE.l D5,D2                                         ; buffer addr
00026974 <AmiBlitz3_noFPU_r470.ab3@9570>       MOVE.l D6,D3                                         ; size
0002697A <AmiBlitz3_noFPU_r470.ab3@9571>       MOVEA.l _dosbase,A6
0002697E <AmiBlitz3_noFPU_r470.ab3@9572>       JSR _Read(A6)
00026980 <AmiBlitz3_noFPU_r470.ab3@9573>       MOVE.l D7,D1
00026984 <AmiBlitz3_noFPU_r470.ab3@9574>       JSR _Close(A6)
00026986 <AmiBlitz3_noFPU_r470.ab3@9576>       MOVEA.l D5,A0                                        ; buffer addr
00026988 <AmiBlitz3_noFPU_r470.ab3@9582>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
0002698C <AmiBlitz3_noFPU_r470.ab3@9583>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00026990 <AmiBlitz3_noFPU_r470.ab3@9584>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00026992 <AmiBlitz3_noFPU_r470.ab3@9585>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00026994 <AmiBlitz3_noFPU_r470.ab3@9586>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00026996 <AmiBlitz3_noFPU_r470.ab3@9587>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
0002699A <AmiBlitz3_noFPU_r470.ab3@9588>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
0002699C <AmiBlitz3_noFPU_r470.ab3@9589>           ADD.l D0,D0                                      ;   verdoppele D0
0002699E <AmiBlitz3_noFPU_r470.ab3@9590>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
000269A2 <AmiBlitz3_noFPU_r470.ab3@9591>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
000269A6 <AmiBlitz3_noFPU_r470.ab3@9592>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
000269AA <AmiBlitz3_noFPU_r470.ab3@9593>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
000269AC <AmiBlitz3_noFPU_r470.ab3@9594>           CMPA.l A0,A2
000269B0 <AmiBlitz3_noFPU_r470.ab3@9595>           BCC.b JL_0_7010                                  ; wenn A0=>A2
000269B6 <AmiBlitz3_noFPU_r470.ab3@9596>             MOVE.l -$8(A2),$20(A1)                         ;
000269BA <AmiBlitz3_noFPU_r470.ab3@9597>             MOVE.l A2,$24(A1)                              ;
000269BE <AmiBlitz3_noFPU_r470.ab3@9598> BRA.w JL_0_7010
000269C0 <AmiBlitz3_noFPU_r470.ab3@9601>       MOVE.l D5,D0
000269C2 <AmiBlitz3_noFPU_r470.ab3@9604> RTS
000269EC <AmiBlitz3_noFPU_r470.ab3@9608>   !basic
00026A60 <AmiBlitz3_noFPU_r470.ab3@9609>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026A94 <AmiBlitz3_noFPU_r470.ab3@9610>    dos_Delete{tempmapping$}
00026AD8 <AmiBlitz3_noFPU_r470.ab3@9611>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00026AF6 <AmiBlitz3_noFPU_r470.ab3@9612>   !asm
00026AFC <AmiBlitz3_noFPU_r470.ab3@9614>   LEA libpointer,A3
00026B02 <AmiBlitz3_noFPU_r470.ab3@9618>   MOVE.l size_deflibs,D0
00026B08 <AmiBlitz3_noFPU_r470.ab3@9619>   MOVE.l deflib,d1
00026B0C <AmiBlitz3_noFPU_r470.ab3@9620>   BEQ 'l1
00026B10 <AmiBlitz3_noFPU_r470.ab3@9621> BRA 'l2
00026B16 <AmiBlitz3_noFPU_r470.ab3@9624>   MOVE.l #str_path_deflibs,D1
00026B1A <AmiBlitz3_noFPU_r470.ab3@9627>   BSR.w load_libsfile
00026B20 <AmiBlitz3_noFPU_r470.ab3@9628>   MOVE.l D0,ptr_deflibs
00026B26 <AmiBlitz3_noFPU_r470.ab3@9631>   MOVE.l size_acidlibs,D0
00026B2C <AmiBlitz3_noFPU_r470.ab3@9632>   MOVE.l #str_path_acidlibs,D1
00026B30 <AmiBlitz3_noFPU_r470.ab3@9633>   BSR.w load_libsfile
00026B36 <AmiBlitz3_noFPU_r470.ab3@9634>   MOVE.l D0,ptr_acidlibs
00026B38 <AmiBlitz3_noFPU_r470.ab3@9638>   CLR.l (A3)
00026B3E <AmiBlitz3_noFPU_r470.ab3@9639>   MOVE.l A3,ptr_userlibs
00026B44 <AmiBlitz3_noFPU_r470.ab3@9644>   LEA str_libfilename,A0
00026B4A <AmiBlitz3_noFPU_r470.ab3@9645>   LEA str_path_userlibs,A1
00026B4C <AmiBlitz3_noFPU_r470.ab3@9648>     MOVE.b (A1)+,(A0)+
00026B50 <AmiBlitz3_noFPU_r470.ab3@9649>   BNE.b JL_0_708E
00026B52 <AmiBlitz3_noFPU_r470.ab3@9651>   SUBQ.w #1,A0
00026B56 <AmiBlitz3_noFPU_r470.ab3@9652>   MOVE.b #$2F,(A0)+
00026B58 <AmiBlitz3_noFPU_r470.ab3@9655>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00026B5E <AmiBlitz3_noFPU_r470.ab3@9657>   LEA ptr_userlibs_list,A2
00026B64 <AmiBlitz3_noFPU_r470.ab3@9658>   MOVEA.l ptr_userlibs,A3
00026B6A <AmiBlitz3_noFPU_r470.ab3@9659>   MOVEA.l _dosbase,A6
00026B6C <AmiBlitz3_noFPU_r470.ab3@9664>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00026B70 <AmiBlitz3_noFPU_r470.ab3@9665>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00026B72 <AmiBlitz3_noFPU_r470.ab3@9667>       CLR.l (A3)
00026B74 <AmiBlitz3_noFPU_r470.ab3@9668>       ADDQ.w #4,A7
00026B9E <AmiBlitz3_noFPU_r470.ab3@9669>       !basic
00026BB2 <AmiBlitz3_noFPU_r470.ab3@9670>       If fid<>-1
00026BBC <AmiBlitz3_noFPU_r470.ab3@9671>         file_Close{fid}
00026BC8 <AmiBlitz3_noFPU_r470.ab3@9672>         fid = -1
00026BE6 <AmiBlitz3_noFPU_r470.ab3@9674>       !asm
00026BEA <AmiBlitz3_noFPU_r470.ab3@9675> BRA.w process_libraries
00026BEC <AmiBlitz3_noFPU_r470.ab3@9678>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00026BF0 <AmiBlitz3_noFPU_r470.ab3@9679>       TST.w $4(A2)                                         ; naechste addresse pruefen
00026BF4 <AmiBlitz3_noFPU_r470.ab3@9680>     BEQ.b JL_0_70BA
00026BF8 <AmiBlitz3_noFPU_r470.ab3@9682>     LEA $6(A2),A1
00026BFA <AmiBlitz3_noFPU_r470.ab3@9683>     MOVEA.l (A7),A0
00026BFC <AmiBlitz3_noFPU_r470.ab3@9686>       MOVE.b (A1)+,(A0)+
00026C00 <AmiBlitz3_noFPU_r470.ab3@9687>     BNE.w JL_0_70D4
00026C02 <AmiBlitz3_noFPU_r470.ab3@9691>     MOVE.l A0,-(A7)
00026C08 <AmiBlitz3_noFPU_r470.ab3@9692>     MOVE.l #str_libfilename,D1
00026C0A <AmiBlitz3_noFPU_r470.ab3@9693>     MOVEQ.l #-$02,D2
00026C10 <AmiBlitz3_noFPU_r470.ab3@9694>     MOVEA.l _dosbase,A6
00026C14 <AmiBlitz3_noFPU_r470.ab3@9695>      JSR _Lock(A6)
00026C16 <AmiBlitz3_noFPU_r470.ab3@9696>     MOVE.l D0,D1
00026C1A <AmiBlitz3_noFPU_r470.ab3@9697>      BEQ.w JL_0_7156
00026C1C <AmiBlitz3_noFPU_r470.ab3@9698>     MOVEA.l (A7),A0
00026C22 <AmiBlitz3_noFPU_r470.ab3@9699>     MOVE.b #$2F,-$1(A0)
00026C24 <AmiBlitz3_noFPU_r470.ab3@9702>     MOVE.l D1,-(A7)
00026C2A <AmiBlitz3_noFPU_r470.ab3@9703>     MOVE.l #ptr_parameterstore,D2
00026C30 <AmiBlitz3_noFPU_r470.ab3@9704>     MOVEA.l _dosbase,A6
00026C34 <AmiBlitz3_noFPU_r470.ab3@9705>     JSR _Examine(A6)
00026C36 <AmiBlitz3_noFPU_r470.ab3@9706>     TST.l D0
00026C3A <AmiBlitz3_noFPU_r470.ab3@9707>      BEQ.w JL_0_7150
00026C40 <AmiBlitz3_noFPU_r470.ab3@9710>     LEA fib_FileName,A0
00026C44 <AmiBlitz3_noFPU_r470.ab3@9711>     BSR.w check_for_infoextention
00026C48 <AmiBlitz3_noFPU_r470.ab3@9712>     BEQ.w JL_0_7150
00026C72 <AmiBlitz3_noFPU_r470.ab3@9715>     !basic
00026CF6 <AmiBlitz3_noFPU_r470.ab3@9716>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
00026D14 <AmiBlitz3_noFPU_r470.ab3@9717>     !asm
00026D1A <AmiBlitz3_noFPU_r470.ab3@9718>     MOVE.l #str_libfilename,D1
00026D1E <AmiBlitz3_noFPU_r470.ab3@9719>     BSR.w open_userlibfile
00026D20 <AmiBlitz3_noFPU_r470.ab3@9722>     MOVE.l (A7)+,D1
00026D26 <AmiBlitz3_noFPU_r470.ab3@9723>     MOVEA.l _dosbase,A6
00026D2A <AmiBlitz3_noFPU_r470.ab3@9724>     JSR _UnLock(A6)
00026D2C <AmiBlitz3_noFPU_r470.ab3@9727>     ADDQ.w #4,A7
00026D30 <AmiBlitz3_noFPU_r470.ab3@9728> BRA.w JL_0_70BA
00026D36 <AmiBlitz3_noFPU_r470.ab3@9731>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026D3C <AmiBlitz3_noFPU_r470.ab3@9732>   MOVEA.l _dosbase,A6
00026D40 <AmiBlitz3_noFPU_r470.ab3@9733>    JSR _Open(A6)
00026D42 <AmiBlitz3_noFPU_r470.ab3@9734>   MOVE.l D0,D7
00026D46 <AmiBlitz3_noFPU_r470.ab3@9735>    BEQ.w exit_userlibfile
00026D48 <AmiBlitz3_noFPU_r470.ab3@9738>   MOVE.l D7,D1                                             ; filehandle
00026D4E <AmiBlitz3_noFPU_r470.ab3@9739>   MOVE.l #optstuff,D2                                     ; buffer
00026D54 <AmiBlitz3_noFPU_r470.ab3@9740>   MOVEA.l _dosbase,A6
00026D56 <AmiBlitz3_noFPU_r470.ab3@9741>   MOVEQ.l #$20,D3                                          ; size
00026D5A <AmiBlitz3_noFPU_r470.ab3@9742>   JSR _Read(A6)
00026D60 <AmiBlitz3_noFPU_r470.ab3@9745>   MOVE.l optstuff+28,D6
00026D62 <AmiBlitz3_noFPU_r470.ab3@9746>   LSL.l #2,D6
00026D64 <AmiBlitz3_noFPU_r470.ab3@9747>   MOVE.l D6,D0
00026D66 <AmiBlitz3_noFPU_r470.ab3@9748>   MOVEQ.l #$01,D1
00026D6C <AmiBlitz3_noFPU_r470.ab3@9749>   MOVEA.l _execbase,A6
00026D72 <AmiBlitz3_noFPU_r470.ab3@9750>   MOVE.l mempool,a0
00026D76 <AmiBlitz3_noFPU_r470.ab3@9751>   JSR _AllocPooled(a6)
00026D78 <AmiBlitz3_noFPU_r470.ab3@9752>   MOVEA.l D0,A5
00026D7E <AmiBlitz3_noFPU_r470.ab3@9755>   MOVEA.l _dosbase,A6
00026D80 <AmiBlitz3_noFPU_r470.ab3@9756>   MOVE.l D7,D1                                             ; filehandle
00026D82 <AmiBlitz3_noFPU_r470.ab3@9757>   MOVE.l A5,D2                                             ; buffer
00026D84 <AmiBlitz3_noFPU_r470.ab3@9758>   MOVE.l D6,D3                                             ; size
00026D88 <AmiBlitz3_noFPU_r470.ab3@9759>    JSR _Read(A6)
00026D8A <AmiBlitz3_noFPU_r470.ab3@9760>   MOVE.l A5,(A3)
00026D8C <AmiBlitz3_noFPU_r470.ab3@9762>   MOVE.l A5,d0
00026D8E <AmiBlitz3_noFPU_r470.ab3@9764>   MOVEA.l A5,A3
00026D92 <AmiBlitz3_noFPU_r470.ab3@9765>   MOVE.l D6,$6(A5)
00026D96 <AmiBlitz3_noFPU_r470.ab3@9766>   CLR.l $20(A5)
00026DC0 <AmiBlitz3_noFPU_r470.ab3@9768>   !basic
00026DCA <AmiBlitz3_noFPU_r470.ab3@9770>   addr_libnum.l = PutD0 + 4
00026DDE <AmiBlitz3_noFPU_r470.ab3@9771>   If fid<>-1
00026E7E <AmiBlitz3_noFPU_r470.ab3@9772>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00026EB0 <AmiBlitz3_noFPU_r470.ab3@9773>     file_WriteLine{fid,currentlib$}
00026ECE <AmiBlitz3_noFPU_r470.ab3@9775>   !asm
00026ED0 <AmiBlitz3_noFPU_r470.ab3@9778>   MOVE.l D7,D1                                             ; filehandle
00026ED6 <AmiBlitz3_noFPU_r470.ab3@9779>   MOVE.l #optstuff,D2                                     ; buffer
00026ED8 <AmiBlitz3_noFPU_r470.ab3@9780>   MOVEQ.l #$0C,D3                                          ; size
00026EDE <AmiBlitz3_noFPU_r470.ab3@9781>   MOVEA.l _dosbase,A6
00026EE2 <AmiBlitz3_noFPU_r470.ab3@9782>    JSR _Read(A6)
00026EE8 <AmiBlitz3_noFPU_r470.ab3@9784>   CMP.l #$C,D0
00026EEC <AmiBlitz3_noFPU_r470.ab3@9785>    BCS.w close_and_exit_userlibfile
00026EF2 <AmiBlitz3_noFPU_r470.ab3@9788>   MOVE.l optstuff+4,D0
00026EF6 <AmiBlitz3_noFPU_r470.ab3@9789>   MOVE.l D0,$20(A5)
00026EF8 <AmiBlitz3_noFPU_r470.ab3@9790>   LSL.l #2,D0
00026EFA <AmiBlitz3_noFPU_r470.ab3@9791>   MOVE.l D0,D5
00026EFC <AmiBlitz3_noFPU_r470.ab3@9792>   MOVEQ.l #$01,D1
00026F02 <AmiBlitz3_noFPU_r470.ab3@9793>   MOVEA.l _execbase,A6
00026F08 <AmiBlitz3_noFPU_r470.ab3@9794>   MOVE.l mempool,a0
00026F0C <AmiBlitz3_noFPU_r470.ab3@9795>   JSR _AllocPooled(a6)
00026F12 <AmiBlitz3_noFPU_r470.ab3@9797>   MOVEA.l _dosbase,A6
00026F16 <AmiBlitz3_noFPU_r470.ab3@9798>   MOVE.l D0,$24(A5)
00026F18 <AmiBlitz3_noFPU_r470.ab3@9799>   MOVE.l D7,D1
00026F1A <AmiBlitz3_noFPU_r470.ab3@9800>   MOVE.l D0,D2
00026F1C <AmiBlitz3_noFPU_r470.ab3@9801>   MOVE.l D5,D3
00026F20 <AmiBlitz3_noFPU_r470.ab3@9802>   JSR _Read(A6)
00026F22 <AmiBlitz3_noFPU_r470.ab3@9805>   MOVE.l D7,D1
00026F28 <AmiBlitz3_noFPU_r470.ab3@9806>   MOVEA.l _dosbase,A6
00026F2C <AmiBlitz3_noFPU_r470.ab3@9807> JMP _Close(A6)
00026F2E <AmiBlitz3_noFPU_r470.ab3@9810> RTS
00026F34 <AmiBlitz3_noFPU_r470.ab3@9816>   CLR.w number_of_objects
00026F3A <AmiBlitz3_noFPU_r470.ab3@9817>   MOVEA.l end_of_tokenlist,A3
00026F40 <AmiBlitz3_noFPU_r470.ab3@9818>   MOVEA.l libpointer,A2
00026F44 <AmiBlitz3_noFPU_r470.ab3@9821>     CMPA.w #$0,A2
00026F48 <AmiBlitz3_noFPU_r470.ab3@9822>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
00026F4C <AmiBlitz3_noFPU_r470.ab3@9824>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00026F50 <AmiBlitz3_noFPU_r470.ab3@9825>     BMI.w JL_0_7226
00026F52 <AmiBlitz3_noFPU_r470.ab3@9826>       LSL.w #7,D7
00026F54 <AmiBlitz3_noFPU_r470.ab3@9827>       ADDQ.w #1,D7
00026F58 <AmiBlitz3_noFPU_r470.ab3@9828>       MOVE.w D7,$E(A2)
00026F5C <AmiBlitz3_noFPU_r470.ab3@9831>     LEA $30(A2),A1
00026F62 <AmiBlitz3_noFPU_r470.ab3@9832>     LEA temp1,A4
00026F64 <AmiBlitz3_noFPU_r470.ab3@9835>       MOVE.w (A1),D0
00026F68 <AmiBlitz3_noFPU_r470.ab3@9836>       BMI.w JL_0_72AE
00026F6A <AmiBlitz3_noFPU_r470.ab3@9837>       MOVE.l A1,(A4)
00026F6C <AmiBlitz3_noFPU_r470.ab3@9838>       MOVEA.l A1,A4
00026F6E <AmiBlitz3_noFPU_r470.ab3@9839>       ADDQ.w #2,A4
00026F70 <AmiBlitz3_noFPU_r470.ab3@9840>       ADDQ.w #6,A1
00026F74 <AmiBlitz3_noFPU_r470.ab3@9841>       CMP.w #$8,D0
00026F78 <AmiBlitz3_noFPU_r470.ab3@9842>       BEQ.w JL_0_7290
00026F7C <AmiBlitz3_noFPU_r470.ab3@9843>         ANDI.w #$F,D0
00026F80 <AmiBlitz3_noFPU_r470.ab3@9844>         BNE.w JL_0_725C
00026F84 <AmiBlitz3_noFPU_r470.ab3@9845>           BSR.w skiplibreg
00026F88 <AmiBlitz3_noFPU_r470.ab3@9846>           LEA $C(A1),A1
00026F8A <AmiBlitz3_noFPU_r470.ab3@9847>           ADDQ.w #1,D7
00026F8E <AmiBlitz3_noFPU_r470.ab3@9848> BRA.w JL_0_7230
00026F92 <AmiBlitz3_noFPU_r470.ab3@9851>     BTST #$2,D0
00026F96 <AmiBlitz3_noFPU_r470.ab3@9852>     BEQ.w JL_0_7274
00026F98 <AmiBlitz3_noFPU_r470.ab3@9853>       ADDQ.w #4,A1
00026F9A <AmiBlitz3_noFPU_r470.ab3@9856>         TST.b (A1)+
00026F9E <AmiBlitz3_noFPU_r470.ab3@9857>       BPL.w JL_0_7266
00026FA2 <AmiBlitz3_noFPU_r470.ab3@9858>       BSR.w aligna1
00026FA6 <AmiBlitz3_noFPU_r470.ab3@9859> BRA.w JL_0_7290
00026FA8 <AmiBlitz3_noFPU_r470.ab3@9862>       MOVE.w (A1)+,D0
00026FAC <AmiBlitz3_noFPU_r470.ab3@9863>       BMI.w JL_0_7290
00026FB0 <AmiBlitz3_noFPU_r470.ab3@9864>       ANDI.w #$FF,D0
00026FB2 <AmiBlitz3_noFPU_r470.ab3@9865>       ADDA.w D0,A1
00026FB6 <AmiBlitz3_noFPU_r470.ab3@9866>       BSR.w aligna1
00026FBA <AmiBlitz3_noFPU_r470.ab3@9867>       BSR.w skiplibreg
00026FBE <AmiBlitz3_noFPU_r470.ab3@9868>       LEA $C(A1),A1
00026FC2 <AmiBlitz3_noFPU_r470.ab3@9869> BRA.w JL_0_7274
00026FC4 <AmiBlitz3_noFPU_r470.ab3@9872>     MOVE.l A1,(A3)
00026FC6 <AmiBlitz3_noFPU_r470.ab3@9873>     MOVEA.l A1,A3
00026FC8 <AmiBlitz3_noFPU_r470.ab3@9874>     ADDQ.w #4,A1
00026FCA <AmiBlitz3_noFPU_r470.ab3@9875>     MOVE.w D7,(A1)+
00026FCC <AmiBlitz3_noFPU_r470.ab3@9878>       TST.b (A1)+
00026FD0 <AmiBlitz3_noFPU_r470.ab3@9879>     BNE.w JL_0_7298
00026FD2 <AmiBlitz3_noFPU_r470.ab3@9882>       TST.b (A1)+
00026FD6 <AmiBlitz3_noFPU_r470.ab3@9883>     BNE.w JL_0_729E
00026FDA <AmiBlitz3_noFPU_r470.ab3@9885>     BSR.w aligna1
00026FDC <AmiBlitz3_noFPU_r470.ab3@9886>     ADDQ.w #1,D7
00026FE0 <AmiBlitz3_noFPU_r470.ab3@9887> BRA.w JL_0_7230
00026FE4 <AmiBlitz3_noFPU_r470.ab3@9890>     TST.w $4(A2)
00026FE8 <AmiBlitz3_noFPU_r470.ab3@9891>      BMI.w JL_0_72BA
00026FEC <AmiBlitz3_noFPU_r470.ab3@9892>     MOVE.w D7,$10(A2)
00026FEE <AmiBlitz3_noFPU_r470.ab3@9895>     ADDQ.w #2,A1
00026FF0 <AmiBlitz3_noFPU_r470.ab3@9896>     TST.l (A1)+
00026FF4 <AmiBlitz3_noFPU_r470.ab3@9897>      BEQ.w JL_0_72CC
00026FFA <AmiBlitz3_noFPU_r470.ab3@9898>     ADDQ.w #1,number_of_objects
00026FFE <AmiBlitz3_noFPU_r470.ab3@9899>     LEA $16(A1),A1
00027000 <AmiBlitz3_noFPU_r470.ab3@9902>     SUBA.l A2,A1
00027004 <AmiBlitz3_noFPU_r470.ab3@9903>     MOVE.l A1,$12(A2)
00027006 <AmiBlitz3_noFPU_r470.ab3@9904>     MOVEA.l (A2),A2
0002700A <AmiBlitz3_noFPU_r470.ab3@9905> BRA.w JL_0_720E
0002700C <AmiBlitz3_noFPU_r470.ab3@9908>   CLR.l (A3)
00027012 <AmiBlitz3_noFPU_r470.ab3@9909> 
00027018 <AmiBlitz3_noFPU_r470.ab3@9910>   MOVE.l A7,errstack
00027022 <AmiBlitz3_noFPU_r470.ab3@9911>   MOVE.l #AL_0_730E,errcont
0002702A <AmiBlitz3_noFPU_r470.ab3@9912>   MOVE.w #$FFFF,ezerr
0002702E <AmiBlitz3_noFPU_r470.ab3@9913>   MOVE.w #$FFFA,D1
00027032 <AmiBlitz3_noFPU_r470.ab3@9914>    BSR.w JL_0_6F38
00027038 <AmiBlitz3_noFPU_r470.ab3@9915>   MOVE.l A1,tempvm
0002703C <AmiBlitz3_noFPU_r470.ab3@9916>   MOVE.w #$FDA7,D1
00027040 <AmiBlitz3_noFPU_r470.ab3@9917>    BSR.w JL_0_6F38
00027046 <AmiBlitz3_noFPU_r470.ab3@9918>   MOVE.l A1,ffplib
00027048 <AmiBlitz3_noFPU_r470.ab3@9921> RTS
0002704C <AmiBlitz3_noFPU_r470.ab3@9924> ffplib:  Ds.l 1
0002704E <AmiBlitz3_noFPU_r470.ab3@9928>     TST.w (A1)+
00027052 <AmiBlitz3_noFPU_r470.ab3@9929>     BEQ.w JL_0_7320
00027054 <AmiBlitz3_noFPU_r470.ab3@9930>     ADDQ.w #2,A1
00027058 <AmiBlitz3_noFPU_r470.ab3@9931> BRA.w skiplibreg
0002705A <AmiBlitz3_noFPU_r470.ab3@9934> RTS
0002705C <AmiBlitz3_noFPU_r470.ab3@9938>   EXG.l A1,A0
00027060 <AmiBlitz3_noFPU_r470.ab3@9939>   BSR.w aligna1
00027062 <AmiBlitz3_noFPU_r470.ab3@9940>   EXG.l A1,A0
00027064 <AmiBlitz3_noFPU_r470.ab3@9941> RTS
00027066 <AmiBlitz3_noFPU_r470.ab3@9944>   EXG.l D0,A1
00027068 <AmiBlitz3_noFPU_r470.ab3@9945>   ADDQ.l #1,D0
0002706C <AmiBlitz3_noFPU_r470.ab3@9946>   BCLR #$0,D0
0002706E <AmiBlitz3_noFPU_r470.ab3@9947>   EXG.l D0,A1
00027070 <AmiBlitz3_noFPU_r470.ab3@9948> RTS
00027076 <AmiBlitz3_noFPU_r470.ab3@9952>   MOVEA.l _execbase,A6
0002707C <AmiBlitz3_noFPU_r470.ab3@9953>   MOVEA.l ptr_userlibs,A2
0002707E <AmiBlitz3_noFPU_r470.ab3@9954>   MOVE.l (A2),D0
00027080 <AmiBlitz3_noFPU_r470.ab3@9955>   CLR.l (A2)
00027082 <AmiBlitz3_noFPU_r470.ab3@9956>   MOVEA.l D0,A2
00027086 <AmiBlitz3_noFPU_r470.ab3@9959>     CMPA.w #$0,A2
0002708A <AmiBlitz3_noFPU_r470.ab3@9960>     BEQ.w free_userlib
0002708E <AmiBlitz3_noFPU_r470.ab3@9962>     MOVE.l $20(A2),D0
00027092 <AmiBlitz3_noFPU_r470.ab3@9963>     BEQ.b JL_0_7360
00027094 <AmiBlitz3_noFPU_r470.ab3@9964>       LSL.l #2,D0
0002709A <AmiBlitz3_noFPU_r470.ab3@9965>       MOVE.l mempool,a0
0002709E <AmiBlitz3_noFPU_r470.ab3@9966>       MOVEA.l $24(A2),A1
000270A2 <AmiBlitz3_noFPU_r470.ab3@9967>       JSR _FreePooled(A6)
000270A4 <AmiBlitz3_noFPU_r470.ab3@9970>     MOVEA.l A2,A1
000270A8 <AmiBlitz3_noFPU_r470.ab3@9971>     MOVE.l $6(A1),D0
000270AE <AmiBlitz3_noFPU_r470.ab3@9972>     MOVE.l mempool,a0
000270B0 <AmiBlitz3_noFPU_r470.ab3@9973>     MOVEA.l (A2),A2
000270B6 <AmiBlitz3_noFPU_r470.ab3@9974>     MOVEA.l _execbase,A6
000270BA <AmiBlitz3_noFPU_r470.ab3@9975>     JSR _FreePooled(A6)
000270BE <AmiBlitz3_noFPU_r470.ab3@9976> BRA.w JL_0_7348
000270C2 <AmiBlitz3_noFPU_r470.ab3@9980>   BSR.w free_userlibs
000270C8 <AmiBlitz3_noFPU_r470.ab3@9981>   MOVEA.l _execbase,A6
000270CE <AmiBlitz3_noFPU_r470.ab3@9982>   CLR.l libpointer
000270D4 <AmiBlitz3_noFPU_r470.ab3@9983>   MOVEA.l end_of_tokenlist,A0
000270D6 <AmiBlitz3_noFPU_r470.ab3@9984>   CLR.l (A0)
000270DC <AmiBlitz3_noFPU_r470.ab3@9986>   MOVE.l size_acidlibs,D0
000270E0 <AmiBlitz3_noFPU_r470.ab3@9987>   BEQ.b JL_0_73A2
000270E6 <AmiBlitz3_noFPU_r470.ab3@9988>     MOVE.l ptr_acidlibs,D1
000270EA <AmiBlitz3_noFPU_r470.ab3@9989>     BEQ.b JL_0_73A2
000270F0 <AmiBlitz3_noFPU_r470.ab3@9990>       CLR.l ptr_acidlibs
000270F2 <AmiBlitz3_noFPU_r470.ab3@9991>       MOVEA.l D1,A1
000270F8 <AmiBlitz3_noFPU_r470.ab3@9992>       MOVE.l mempool,a0
000270FE <AmiBlitz3_noFPU_r470.ab3@9993>       MOVEA.l _execbase,A6
00027102 <AmiBlitz3_noFPU_r470.ab3@9994>       JSR _FreePooled(A6)                                 ; free acidlibs
00027108 <AmiBlitz3_noFPU_r470.ab3@9997>   MOVE.l size_deflibs,D0
0002710C <AmiBlitz3_noFPU_r470.ab3@9998>   BEQ.b JL_0_73BE
00027112 <AmiBlitz3_noFPU_r470.ab3@9999>     MOVE.l ptr_deflibs,D1
00027116 <AmiBlitz3_noFPU_r470.ab3@10000>     BEQ.b JL_0_73BE
0002711C <AmiBlitz3_noFPU_r470.ab3@10001>       CLR.l ptr_deflibs                                    ; d0: memorySize
0002711E <AmiBlitz3_noFPU_r470.ab3@10002>       MOVEA.l D1,A1                                        ; a1: memory
00027124 <AmiBlitz3_noFPU_r470.ab3@10003>       MOVE.l mempool,a0                                    ; a0: poolHeader
0002712A <AmiBlitz3_noFPU_r470.ab3@10004>       MOVEA.l _execbase,A6
0002712E <AmiBlitz3_noFPU_r470.ab3@10005>       JSR _FreePooled(A6)                                  ; free deflibs
00027130 <AmiBlitz3_noFPU_r470.ab3@10008> RTS
00027136 <AmiBlitz3_noFPU_r470.ab3@10012>   MOVEA.l currentmacroaddr,A0
00027138 <AmiBlitz3_noFPU_r470.ab3@10013>   MOVEA.l (A0),A2
0002713A <AmiBlitz3_noFPU_r470.ab3@10014>   CLR.l (A0)
00027140 <AmiBlitz3_noFPU_r470.ab3@10015>   MOVEA.l _execbase,A6
00027144 <AmiBlitz3_noFPU_r470.ab3@10018>     CMPA.w #$0,A2
00027148 <AmiBlitz3_noFPU_r470.ab3@10019>     BEQ.w JL_0_73FA
0002714A <AmiBlitz3_noFPU_r470.ab3@10020>     MOVEQ.l #$00,D0
0002714E <AmiBlitz3_noFPU_r470.ab3@10021>     MOVE.w $8(A2),D0
00027152 <AmiBlitz3_noFPU_r470.ab3@10022>     BEQ.w JL_0_73E8
00027156 <AmiBlitz3_noFPU_r470.ab3@10023>     MOVEA.l $4(A2),A1
0002715C <AmiBlitz3_noFPU_r470.ab3@10024>     MOVE.l mempool,a0
00027160 <AmiBlitz3_noFPU_r470.ab3@10025>     JSR _FreePooled(A6)
00027162 <AmiBlitz3_noFPU_r470.ab3@10028>     MOVEA.l A2,A1
00027164 <AmiBlitz3_noFPU_r470.ab3@10029>     MOVEA.l (A2),A2
00027166 <AmiBlitz3_noFPU_r470.ab3@10030>     MOVEQ.l #$00,D0
0002716A <AmiBlitz3_noFPU_r470.ab3@10031>     MOVE.b $C(A1),D0
00027170 <AmiBlitz3_noFPU_r470.ab3@10032>     MOVE.l mempool2,a0
00027174 <AmiBlitz3_noFPU_r470.ab3@10033>     JSR _FreePooled(A6)
00027178 <AmiBlitz3_noFPU_r470.ab3@10034> BRA.w JL_0_73CE
0002717A <AmiBlitz3_noFPU_r470.ab3@10037> RTS
00027180 <AmiBlitz3_noFPU_r470.ab3@10041>   MOVEA.l templabel,A2
00027186 <AmiBlitz3_noFPU_r470.ab3@10042>   CLR.l templabel
00027188 <AmiBlitz3_noFPU_r470.ab3@10043> RTS
0002718E <AmiBlitz3_noFPU_r470.ab3@10046>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027192 <AmiBlitz3_noFPU_r470.ab3@10049>     CMPA.w #$0,A2
00027196 <AmiBlitz3_noFPU_r470.ab3@10050>     BEQ.w JL_0_7426
00027198 <AmiBlitz3_noFPU_r470.ab3@10051>     MOVEQ.l #$00,D0
0002719C <AmiBlitz3_noFPU_r470.ab3@10052>     MOVE.b $E(A2),D0                                       ;labeltemp
0002719E <AmiBlitz3_noFPU_r470.ab3@10053>     MOVEA.l A2,A1
000271A0 <AmiBlitz3_noFPU_r470.ab3@10054>     MOVEA.l (A2),A2
000271A6 <AmiBlitz3_noFPU_r470.ab3@10055>     MOVE.l mempool2,a0
000271AA <AmiBlitz3_noFPU_r470.ab3@10057> BRA.w JL_0_740C
000271AC <AmiBlitz3_noFPU_r470.ab3@10060> RTS
000271B2 <AmiBlitz3_noFPU_r470.ab3@10064>   MOVEA.l data1,A4
000271B8 <AmiBlitz3_noFPU_r470.ab3@10065>   CMPA.l data2at,A4
000271BC <AmiBlitz3_noFPU_r470.ab3@10066>   BCC.w JL_0_7442
000271BE <AmiBlitz3_noFPU_r470.ab3@10067>     MOVE.b D1,(A4)+
000271C4 <AmiBlitz3_noFPU_r470.ab3@10068>     MOVE.l A4,data1
000271C6 <AmiBlitz3_noFPU_r470.ab3@10069> RTS
000271CE <AmiBlitz3_noFPU_r470.ab3@10072>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
000271D4 <AmiBlitz3_noFPU_r470.ab3@10073>   ADDQ.l #1,data1
000271D6 <AmiBlitz3_noFPU_r470.ab3@10074> RTS
000271D8 <AmiBlitz3_noFPU_r470.ab3@10078>   SWAP D1
000271DC <AmiBlitz3_noFPU_r470.ab3@10079>   BSR.w pokedata1
000271DE <AmiBlitz3_noFPU_r470.ab3@10080>   SWAP D1
000271E4 <AmiBlitz3_noFPU_r470.ab3@10083>   MOVEA.l data1,A4
000271EA <AmiBlitz3_noFPU_r470.ab3@10084>   CMPA.l data2at,A4
000271EE <AmiBlitz3_noFPU_r470.ab3@10085>    BCC.w JL_0_7474
000271F0 <AmiBlitz3_noFPU_r470.ab3@10086>   MOVE.w D1,(A4)+
000271F6 <AmiBlitz3_noFPU_r470.ab3@10087>   MOVE.l A4,data1
000271F8 <AmiBlitz3_noFPU_r470.ab3@10088> RTS
00027200 <AmiBlitz3_noFPU_r470.ab3@10091>   MOVE.w #$FFFF,dontwrite
00027206 <AmiBlitz3_noFPU_r470.ab3@10092>   ADDQ.l #2,data1
00027208 <AmiBlitz3_noFPU_r470.ab3@10093> RTS
0002720E <AmiBlitz3_noFPU_r470.ab3@10097>   MOVE.l data1,D3                                      ;write local string/type allocs
00027210 <AmiBlitz3_noFPU_r470.ab3@10098>   MOVEQ.l #$00,D4
00027214 <AmiBlitz3_noFPU_r470.ab3@10101>   CMPA.w #$0,A2
00027218 <AmiBlitz3_noFPU_r470.ab3@10102>    BEQ.w JL_0_74CAc
0002721C <AmiBlitz3_noFPU_r470.ab3@10103>   TST.w $6(A2)
00027220 <AmiBlitz3_noFPU_r470.ab3@10104>    BNE.w JL_0_74C4c
00027224 <AmiBlitz3_noFPU_r470.ab3@10105>   MOVEA.l $A(A2),A3
0002722C <AmiBlitz3_noFPU_r470.ab3@10106>   CMPI.l #$100,$4(A3)
00027230 <AmiBlitz3_noFPU_r470.ab3@10107>    BCS.w JL_0_74C4c
00027234 <AmiBlitz3_noFPU_r470.ab3@10108>   MOVE.w $4(A2),D1
00027238 <AmiBlitz3_noFPU_r470.ab3@10109>    BSR.w pokedata1
0002723C <AmiBlitz3_noFPU_r470.ab3@10110>   MOVE.w $8(A3),D1
00027240 <AmiBlitz3_noFPU_r470.ab3@10111>    BSR.w pokedata1
00027242 <AmiBlitz3_noFPU_r470.ab3@10112>   ADDQ.w #1,D4
00027244 <AmiBlitz3_noFPU_r470.ab3@10115>    MOVEA.l (A2),A2
00027248 <AmiBlitz3_noFPU_r470.ab3@10116> BRA.w JL_0_7492c
0002724A <AmiBlitz3_noFPU_r470.ab3@10119>    TST.w D4
0002724E <AmiBlitz3_noFPU_r470.ab3@10120>    BEQ.w JL_0_74E0
00027252 <AmiBlitz3_noFPU_r470.ab3@10121>   MOVE.w #$FF37,D1
00027256 <AmiBlitz3_noFPU_r470.ab3@10122>    BSR.w uselib
0002725A <AmiBlitz3_noFPU_r470.ab3@10123>   MOVE.w #$FFFA,D1
0002725E <AmiBlitz3_noFPU_r470.ab3@10124> BRA.w uselib
00027264 <AmiBlitz3_noFPU_r470.ab3@10132>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
0002726A <AmiBlitz3_noFPU_r470.ab3@10135>   MOVE.l data1,D3
0002726C <AmiBlitz3_noFPU_r470.ab3@10136>   MOVEQ.l #$00,D4
00027272 <AmiBlitz3_noFPU_r470.ab3@10137>   TST.b iserror
00027276 <AmiBlitz3_noFPU_r470.ab3@10138>   BEQ JL_0_7492
00027278 <AmiBlitz3_noFPU_r470.ab3@10139>   RTS
0002727C <AmiBlitz3_noFPU_r470.ab3@10141>    CMPA.w #$0,A2
00027280 <AmiBlitz3_noFPU_r470.ab3@10142>    BEQ.w JL_0_74CA
00027284 <AmiBlitz3_noFPU_r470.ab3@10143>   TST.w $6(A2)
00027288 <AmiBlitz3_noFPU_r470.ab3@10144>    BNE.w JL_0_74C4
0002728C <AmiBlitz3_noFPU_r470.ab3@10145>   MOVEA.l $A(A2),A3
00027294 <AmiBlitz3_noFPU_r470.ab3@10146>   CMPI.l #$100,$4(A3)
00027298 <AmiBlitz3_noFPU_r470.ab3@10147>    BCS.w JL_0_74C4
0002729C <AmiBlitz3_noFPU_r470.ab3@10148>   MOVE.w $4(A2),D1
000272A0 <AmiBlitz3_noFPU_r470.ab3@10149>    BSR.w pokedata1
000272A4 <AmiBlitz3_noFPU_r470.ab3@10150>   MOVE.w $8(A3),D1
000272A8 <AmiBlitz3_noFPU_r470.ab3@10151>    BSR.w pokedata1
000272AA <AmiBlitz3_noFPU_r470.ab3@10152>   ADDQ.w #1,D4
000272AC <AmiBlitz3_noFPU_r470.ab3@10155>   MOVEA.l (A2),A2
000272B0 <AmiBlitz3_noFPU_r470.ab3@10156> BRA.w JL_0_7492
000272B6 <AmiBlitz3_noFPU_r470.ab3@10160>   MOVEA.l sharebase,A2
000272BA <AmiBlitz3_noFPU_r470.ab3@10163>   CMPA.w #$0,A2
000272BE <AmiBlitz3_noFPU_r470.ab3@10164>    BEQ.w JL_0_74CAb
000272C2 <AmiBlitz3_noFPU_r470.ab3@10166>   TST.w $6(A2)
000272C6 <AmiBlitz3_noFPU_r470.ab3@10167>    BNE.w JL_0_74C4b
000272CA <AmiBlitz3_noFPU_r470.ab3@10168>   MOVEA.l $A(A2),A3
000272D2 <AmiBlitz3_noFPU_r470.ab3@10169>   CMPI.l #$100,$4(A3)
000272D6 <AmiBlitz3_noFPU_r470.ab3@10170>    BCS.w JL_0_74C4b
000272DA <AmiBlitz3_noFPU_r470.ab3@10171>   MOVE.w $4(A2),D1
000272DE <AmiBlitz3_noFPU_r470.ab3@10172>    BSR.w pokedata1
000272E2 <AmiBlitz3_noFPU_r470.ab3@10173>   MOVE.w $8(A3),D1
000272E6 <AmiBlitz3_noFPU_r470.ab3@10174>    BSR.w pokedata1
000272E8 <AmiBlitz3_noFPU_r470.ab3@10175>   ADDQ.w #1,D4
000272EA <AmiBlitz3_noFPU_r470.ab3@10178>   MOVEA.l (A2),A2
000272EE <AmiBlitz3_noFPU_r470.ab3@10179> BRA.w JL_0_7492b
000272F0 <AmiBlitz3_noFPU_r470.ab3@10182>    TST.w D4
000272F4 <AmiBlitz3_noFPU_r470.ab3@10183>    BEQ.w JL_0_74E0
000272F8 <AmiBlitz3_noFPU_r470.ab3@10184>   MOVE.w #$FF37,D1
000272FC <AmiBlitz3_noFPU_r470.ab3@10185>    BSR.w uselib                                            ;use statics lib
00027300 <AmiBlitz3_noFPU_r470.ab3@10186>   MOVE.w #$FFFA,D1                                         ;use memlib
00027304 <AmiBlitz3_noFPU_r470.ab3@10187> BRA.w uselib
00027306 <AmiBlitz3_noFPU_r470.ab3@10190> RTS
0002730C <AmiBlitz3_noFPU_r470.ab3@10194>   MOVE.w numtoa2,D1
00027310 <AmiBlitz3_noFPU_r470.ab3@10195>    BSR.w writeword
00027314 <AmiBlitz3_noFPU_r470.ab3@10196>    BSR.w addoff
00027316 <AmiBlitz3_noFPU_r470.ab3@10197>   MOVE.l D3,D1
0002731A <AmiBlitz3_noFPU_r470.ab3@10198>    BSR.w writelong
0002731C <AmiBlitz3_noFPU_r470.ab3@10199>   SUBQ.w #1,D4
00027322 <AmiBlitz3_noFPU_r470.ab3@10200>   MOVE.w D4,endarray+2
00027328 <AmiBlitz3_noFPU_r470.ab3@10201>   MOVE.l endarray,D1
0002732C <AmiBlitz3_noFPU_r470.ab3@10202> BRA.w writelong
0002732E <AmiBlitz3_noFPU_r470.ab3@10206>   MOVE.l D3,-(A7)
00027334 <AmiBlitz3_noFPU_r470.ab3@10209>   MOVEA.l _dosbase,A6
00027338 <AmiBlitz3_noFPU_r470.ab3@10210>   JSR _Write(a6)
0002733A <AmiBlitz3_noFPU_r470.ab3@10212>   CMP.l (A7)+,D0
0002733E <AmiBlitz3_noFPU_r470.ab3@10213>    BNE.w JL_0_7516
00027340 <AmiBlitz3_noFPU_r470.ab3@10214> RTS
00027342 <AmiBlitz3_noFPU_r470.ab3@10217>   MOVE.l D7,D1
00027348 <AmiBlitz3_noFPU_r470.ab3@10219>   MOVEA.l _dosbase,A6
0002734C <AmiBlitz3_noFPU_r470.ab3@10220>   JSR _Close(a6)
00027352 <AmiBlitz3_noFPU_r470.ab3@10223> JMP error_create_exe
00027358 <AmiBlitz3_noFPU_r470.ab3@10232> 
0002735E <AmiBlitz3_noFPU_r470.ab3@10233>   MOVE.l A7,errstack
00027362 <AmiBlitz3_noFPU_r470.ab3@10234>   MOVEM.l d2-d7/a2-a6,-(a7)
0002736C <AmiBlitz3_noFPU_r470.ab3@10235>   MOVE.l #AL_0_7790,errcont
00027372 <AmiBlitz3_noFPU_r470.ab3@10236>    JSR call_setpointerbusy
0002737A <AmiBlitz3_noFPU_r470.ab3@10237>   MOVE.w #$FFFF,anyerrs
00027384 <AmiBlitz3_noFPU_r470.ab3@10238>   CMP.l #-1,chipstart
00027388 <AmiBlitz3_noFPU_r470.ab3@10239>   BEQ 'l01
0002738E <AmiBlitz3_noFPU_r470.ab3@10240>   MOVE.l chipend,d1
00027390 <AmiBlitz3_noFPU_r470.ab3@10241>   ADDQ.l #3,d1
00027396 <AmiBlitz3_noFPU_r470.ab3@10242>   AND.l #$fffffffc,d1                                      ;bug
0002739C <AmiBlitz3_noFPU_r470.ab3@10243>   MOVE.l d1,chipend
0002739E <AmiBlitz3_noFPU_r470.ab3@10244>   MOVE.l d1,a1
000273A4 <AmiBlitz3_noFPU_r470.ab3@10245>   MOVE.l chipstart,a0
000273A6 <AmiBlitz3_noFPU_r470.ab3@10246>   MOVE.l a1,d1
000273A8 <AmiBlitz3_noFPU_r470.ab3@10247>   SUB.l a0,d1
000273AE <AmiBlitz3_noFPU_r470.ab3@10248>   MOVE.l d1,chipsize
000273B8 <AmiBlitz3_noFPU_r470.ab3@10251>   CMP.l #-1,bssstart
000273BC <AmiBlitz3_noFPU_r470.ab3@10252>   BEQ 'l11
000273C2 <AmiBlitz3_noFPU_r470.ab3@10253>   MOVE.l realbssend,a1
000273C8 <AmiBlitz3_noFPU_r470.ab3@10254>   MOVE.l bssstart,a0
000273CA <AmiBlitz3_noFPU_r470.ab3@10255>   MOVE.l a1,d1
000273CC <AmiBlitz3_noFPU_r470.ab3@10256>   SUB.l a0,d1
000273D2 <AmiBlitz3_noFPU_r470.ab3@10257>   MOVE.l d1,bsssize
000273D6 <AmiBlitz3_noFPU_r470.ab3@10258>   BEQ 'l11
000273D8 <AmiBlitz3_noFPU_r470.ab3@10261>   TST.b (a0)+
000273DC <AmiBlitz3_noFPU_r470.ab3@10262>   BEQ 'l31
000273E2 <AmiBlitz3_noFPU_r470.ab3@10263>   TST.b debugmode
000273E6 <AmiBlitz3_noFPU_r470.ab3@10264>   BEQ 'l1
000273EC <AmiBlitz3_noFPU_r470.ab3@10265>   TST.b exdebug
000273F0 <AmiBlitz3_noFPU_r470.ab3@10266>   BNE 'l31
000273F6 <AmiBlitz3_noFPU_r470.ab3@10269>   MOVE.l #nodata,-(a7)
000273FC <AmiBlitz3_noFPU_r470.ab3@10270> JMP handle_compileerror
000273FE <AmiBlitz3_noFPU_r470.ab3@10273>   CMP.l a0,a1
00027402 <AmiBlitz3_noFPU_r470.ab3@10274>   BGT 'l32
00027408 <AmiBlitz3_noFPU_r470.ab3@10275>   MOVE.l bssend,d1
0002740A <AmiBlitz3_noFPU_r470.ab3@10276>   ADDQ.l #3,d1
00027410 <AmiBlitz3_noFPU_r470.ab3@10277>   AND.l #$fffffffc,d1                                      ;bug
00027416 <AmiBlitz3_noFPU_r470.ab3@10278>   MOVE.l d1,bssend
00027418 <AmiBlitz3_noFPU_r470.ab3@10279>   MOVE.l d1,a1
0002741E <AmiBlitz3_noFPU_r470.ab3@10280>   MOVE.l bssstart,a0
00027420 <AmiBlitz3_noFPU_r470.ab3@10281>   MOVE.l a1,d1
00027422 <AmiBlitz3_noFPU_r470.ab3@10282>   SUB.l a0,d1
00027428 <AmiBlitz3_noFPU_r470.ab3@10283>   MOVE.l d1,bsssize
0002742C <AmiBlitz3_noFPU_r470.ab3@10286>   MOVEM.l d5-d7/d3,-(a7)
00027432 <AmiBlitz3_noFPU_r470.ab3@10287>   MOVE.w dontwrite,D1
00027436 <AmiBlitz3_noFPU_r470.ab3@10288>   BNE.w JL_0_757C
0002743C <AmiBlitz3_noFPU_r470.ab3@10289>   MOVE.l chipsize,d5
00027442 <AmiBlitz3_noFPU_r470.ab3@10290>   MOVE.l bsssize,d3
00027448 <AmiBlitz3_noFPU_r470.ab3@10291>   MOVE.l chipstart,d7
0002744E <AmiBlitz3_noFPU_r470.ab3@10292>   MOVE.l bssstart,d6
00027454 <AmiBlitz3_noFPU_r470.ab3@10293>   MOVEA.l hunkoffsetbase,A2
0002745A <AmiBlitz3_noFPU_r470.ab3@10294>   MOVEA.l destbufferstart,A1
0002745C <AmiBlitz3_noFPU_r470.ab3@10295>   MOVE.l A1,D2
00027462 <AmiBlitz3_noFPU_r470.ab3@10296>   ADD.l noinits,D2
00027468 <AmiBlitz3_noFPU_r470.ab3@10297>   CLR.l hunkoffsetnum
0002746C <AmiBlitz3_noFPU_r470.ab3@10300>   CMPA.w #$0,A2
00027470 <AmiBlitz3_noFPU_r470.ab3@10301>    BEQ.w JL_0_757C
00027474 <AmiBlitz3_noFPU_r470.ab3@10302>   MOVE.l $4(A2),D0
00027478 <AmiBlitz3_noFPU_r470.ab3@10303>    LEA $0(a1,d0.l),a0
0002747A <AmiBlitz3_noFPU_r470.ab3@10304>    MOVE.l (a0),d1
0002747C <AmiBlitz3_noFPU_r470.ab3@10305>   TST.l d1
00027480 <AmiBlitz3_noFPU_r470.ab3@10306>    BMI.w 'lm1
00027488 <AmiBlitz3_noFPU_r470.ab3@10307>   MOVE.b #0,newhunk
00027492 <AmiBlitz3_noFPU_r470.ab3@10308>   CMP.l #-1,chipstart
00027496 <AmiBlitz3_noFPU_r470.ab3@10309>   BEQ 'l10
0002749C <AmiBlitz3_noFPU_r470.ab3@10310>   CMP.l chipstart,d1
000274A0 <AmiBlitz3_noFPU_r470.ab3@10311>   BLT 'l10
000274A8 <AmiBlitz3_noFPU_r470.ab3@10312>   MOVE.b #1,newhunk
000274AE <AmiBlitz3_noFPU_r470.ab3@10313>   CMP.l chipend,d1
000274B2 <AmiBlitz3_noFPU_r470.ab3@10314>   BGE 'l110
000274B4 <AmiBlitz3_noFPU_r470.ab3@10315>   SUB.l d7,(a0)
000274BC <AmiBlitz3_noFPU_r470.ab3@10316>   ADD.l #$80000000,4(a2)
000274C0 <AmiBlitz3_noFPU_r470.ab3@10317> BRA JL_0_7576
000274C4 <AmiBlitz3_noFPU_r470.ab3@10320>   SUB.l d5,0(a0)
000274CE <AmiBlitz3_noFPU_r470.ab3@10323>   CMP.l #-1,bssstart
000274D2 <AmiBlitz3_noFPU_r470.ab3@10324>     BEQ 'l11
000274D8 <AmiBlitz3_noFPU_r470.ab3@10325>   CMP.l bssstart,d1
000274DC <AmiBlitz3_noFPU_r470.ab3@10326>   BLT 'l11
000274E2 <AmiBlitz3_noFPU_r470.ab3@10327>   CMP.l bssend,d1
000274E6 <AmiBlitz3_noFPU_r470.ab3@10328>   BGE 'l111
000274EC <AmiBlitz3_noFPU_r470.ab3@10329>   TST.b newhunk
000274F0 <AmiBlitz3_noFPU_r470.ab3@10330>   BEQ 'ln1
000274F2 <AmiBlitz3_noFPU_r470.ab3@10331>   ADD.l d5,(a0)
000274F4 <AmiBlitz3_noFPU_r470.ab3@10334>   SUB.l d6,(a0)
000274FC <AmiBlitz3_noFPU_r470.ab3@10335>   ADD.l #$40000000,4(a2)
00027500 <AmiBlitz3_noFPU_r470.ab3@10336> BRA JL_0_7576
00027504 <AmiBlitz3_noFPU_r470.ab3@10339>   SUB.l d3,0(a0)
00027506 <AmiBlitz3_noFPU_r470.ab3@10342>   SUB.l D2,(A0)
0002750C <AmiBlitz3_noFPU_r470.ab3@10345>   ADDQ.l #1,hunkoffsetnum
0002750E <AmiBlitz3_noFPU_r470.ab3@10348>    MOVEA.l (A2),A2
00027512 <AmiBlitz3_noFPU_r470.ab3@10349> BRA.w JL_0_755E
00027516 <AmiBlitz3_noFPU_r470.ab3@10353>   MOVEM.l (a7)+,d5-d7/d3
0002751C <AmiBlitz3_noFPU_r470.ab3@10354>   MOVE.l ptr_newexefilename,D1
00027522 <AmiBlitz3_noFPU_r470.ab3@10355>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027528 <AmiBlitz3_noFPU_r470.ab3@10356>   MOVEA.l _dosbase,A6
0002752C <AmiBlitz3_noFPU_r470.ab3@10357>    JSR _Open(A6)
0002752E <AmiBlitz3_noFPU_r470.ab3@10358>   MOVE.l D0,D7
00027532 <AmiBlitz3_noFPU_r470.ab3@10359>    BEQ.w execerr
00027538 <AmiBlitz3_noFPU_r470.ab3@10360>   MOVE.l objlen,D0
0002753E <AmiBlitz3_noFPU_r470.ab3@10361>   SUB.l #moremem,d0
00027544 <AmiBlitz3_noFPU_r470.ab3@10362>   SUB.l noinits,D0
0002754E <AmiBlitz3_noFPU_r470.ab3@10363>   CMP.l #-1,bssstart
00027552 <AmiBlitz3_noFPU_r470.ab3@10364>   BEQ 'l60
00027558 <AmiBlitz3_noFPU_r470.ab3@10365>   SUB.l bsssize,d0
0002755E <AmiBlitz3_noFPU_r470.ab3@10366>   SUB.l chipsize,d0
00027562 <AmiBlitz3_noFPU_r470.ab3@10367> BRA.s 'l61
0002756C <AmiBlitz3_noFPU_r470.ab3@10370>   CMP.l #-1,chipstart
00027570 <AmiBlitz3_noFPU_r470.ab3@10371>   BEQ 'l61
00027576 <AmiBlitz3_noFPU_r470.ab3@10372>   SUB.l bsssize,d0
0002757C <AmiBlitz3_noFPU_r470.ab3@10373>   SUB.l chipsize,d0
0002757E <AmiBlitz3_noFPU_r470.ab3@10376>   ADDQ.l #3,D0
00027580 <AmiBlitz3_noFPU_r470.ab3@10377>   LSR.l #2,D0
00027586 <AmiBlitz3_noFPU_r470.ab3@10378>   MOVE.l D0,tstsize1
0002758C <AmiBlitz3_noFPU_r470.ab3@10379>   MOVE.l D0,tstsize2
0002758E <AmiBlitz3_noFPU_r470.ab3@10380>   MOVE.l D7,D1
00027594 <AmiBlitz3_noFPU_r470.ab3@10381>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027596 <AmiBlitz3_noFPU_r470.ab3@10382>   MOVEQ.l #$20,D3
000275A0 <AmiBlitz3_noFPU_r470.ab3@10383>   CMP.l #-1,bssstart
000275A4 <AmiBlitz3_noFPU_r470.ab3@10384>   BEQ 'lb1
000275AE <AmiBlitz3_noFPU_r470.ab3@10385>   CMP.l #-1,chipstart
000275B2 <AmiBlitz3_noFPU_r470.ab3@10386>   BEQ 'lb1
000275BC <AmiBlitz3_noFPU_r470.ab3@10387>   MOVE.l #1,bssnum
000275C6 <AmiBlitz3_noFPU_r470.ab3@10388>   MOVE.l #2,chipnum
000275C8 <AmiBlitz3_noFPU_r470.ab3@10389>   MOVEQ.l #$28,D3
000275CE <AmiBlitz3_noFPU_r470.ab3@10390>   MOVE.l bsssize,d2
000275D0 <AmiBlitz3_noFPU_r470.ab3@10391>   ADDQ.l #3,d2
000275D2 <AmiBlitz3_noFPU_r470.ab3@10392>   ASR.l #2,d2
000275D8 <AmiBlitz3_noFPU_r470.ab3@10393>   MOVE.l d2,hunkend+8
000275DE <AmiBlitz3_noFPU_r470.ab3@10394>   MOVE.l d2,bsssize3
000275E4 <AmiBlitz3_noFPU_r470.ab3@10395>   MOVE.l chipsize,d2
000275E6 <AmiBlitz3_noFPU_r470.ab3@10396>   ADDQ.l #3,d2
000275E8 <AmiBlitz3_noFPU_r470.ab3@10397>   ASR.l #2,d2
000275EE <AmiBlitz3_noFPU_r470.ab3@10398>   MOVE.l d2,chipsize2
000275F8 <AmiBlitz3_noFPU_r470.ab3@10399>   ADD.l #$40000000,chipsize2
000275FE <AmiBlitz3_noFPU_r470.ab3@10400>   MOVE.l d2,hunkend2+8
00027604 <AmiBlitz3_noFPU_r470.ab3@10401>   MOVE.l D0,tstsize1c
0002760A <AmiBlitz3_noFPU_r470.ab3@10402>   MOVE.l D0,tstsize2c
00027610 <AmiBlitz3_noFPU_r470.ab3@10403>   MOVE.l #hunkbegin2,d2
00027614 <AmiBlitz3_noFPU_r470.ab3@10404> BRA 'l100
0002761E <AmiBlitz3_noFPU_r470.ab3@10407>   CMP.l #-1,bssstart
00027622 <AmiBlitz3_noFPU_r470.ab3@10408>   BEQ 'l10
0002762C <AmiBlitz3_noFPU_r470.ab3@10409>   MOVE.l #1,bssnum
0002762E <AmiBlitz3_noFPU_r470.ab3@10410>   MOVEQ.l #$24,D3
00027634 <AmiBlitz3_noFPU_r470.ab3@10411>   MOVE.l bsssize,d2
00027636 <AmiBlitz3_noFPU_r470.ab3@10412>   ADDQ.l #3,d2
00027638 <AmiBlitz3_noFPU_r470.ab3@10413>   ASR.l #2,d2
0002763E <AmiBlitz3_noFPU_r470.ab3@10414>   MOVE.l d2,hunkend+8
00027644 <AmiBlitz3_noFPU_r470.ab3@10415>   MOVE.l d2,bsssize2
0002764A <AmiBlitz3_noFPU_r470.ab3@10416>   MOVE.l D0,tstsize1b
00027650 <AmiBlitz3_noFPU_r470.ab3@10417>   MOVE.l D0,tstsize2b
00027656 <AmiBlitz3_noFPU_r470.ab3@10418>   MOVE.l #hunkbegin,d2
00027660 <AmiBlitz3_noFPU_r470.ab3@10421>   CMP.l #-1,chipstart
00027664 <AmiBlitz3_noFPU_r470.ab3@10422>   BEQ 'l100
0002766E <AmiBlitz3_noFPU_r470.ab3@10423>   MOVE.l #1,chipnum
00027670 <AmiBlitz3_noFPU_r470.ab3@10424>   MOVEQ.l #$24,D3
00027676 <AmiBlitz3_noFPU_r470.ab3@10425>   MOVE.l chipsize,d2
00027678 <AmiBlitz3_noFPU_r470.ab3@10426>   ADDQ.l #3,d2
0002767A <AmiBlitz3_noFPU_r470.ab3@10427>   ASR.l #2,d2
00027680 <AmiBlitz3_noFPU_r470.ab3@10428>   MOVE.l d2,hunkend2+8
00027686 <AmiBlitz3_noFPU_r470.ab3@10429>   MOVE.l d2,bsssize2
00027690 <AmiBlitz3_noFPU_r470.ab3@10430>   ADD.l #$40000000,bsssize2
00027696 <AmiBlitz3_noFPU_r470.ab3@10431>   MOVE.l D0,tstsize1b
0002769C <AmiBlitz3_noFPU_r470.ab3@10432>   MOVE.l D0,tstsize2b
000276A2 <AmiBlitz3_noFPU_r470.ab3@10433>   MOVE.l #hunkbegin,d2
000276A6 <AmiBlitz3_noFPU_r470.ab3@10436>    BSR.w mywrite
000276AC <AmiBlitz3_noFPU_r470.ab3@10437>   MOVE.l destbufferstart,D2
000276B2 <AmiBlitz3_noFPU_r470.ab3@10438>   ADD.l noinits,D2
000276B8 <AmiBlitz3_noFPU_r470.ab3@10439>   MOVE.l objlen,D3
000276BE <AmiBlitz3_noFPU_r470.ab3@10440>   SUB.l #moremem,d3
000276C4 <AmiBlitz3_noFPU_r470.ab3@10441>   SUB.l noinits,D3
000276CE <AmiBlitz3_noFPU_r470.ab3@10442>   CMP.l #-1,bssstart
000276D2 <AmiBlitz3_noFPU_r470.ab3@10443>   BNE 'l40
000276DC <AmiBlitz3_noFPU_r470.ab3@10444>   CMP.l #-1,chipstart
000276E0 <AmiBlitz3_noFPU_r470.ab3@10445>   BNE 'l40
000276E4 <AmiBlitz3_noFPU_r470.ab3@10446> BRA 'l41
000276EA <AmiBlitz3_noFPU_r470.ab3@10449>   MOVE.l codeend,d1
000276EC <AmiBlitz3_noFPU_r470.ab3@10450>     SUB.l d2,d1
000276EE <AmiBlitz3_noFPU_r470.ab3@10451>     MOVE.l d1,d3
000276F4 <AmiBlitz3_noFPU_r470.ab3@10452>   SUB.l bsssize,d3
000276FA <AmiBlitz3_noFPU_r470.ab3@10453>   SUB.l chipsize,d3
000276FC <AmiBlitz3_noFPU_r470.ab3@10454>   MOVE.l D7,D1
00027700 <AmiBlitz3_noFPU_r470.ab3@10455>   BSR.w mywrite
00027706 <AmiBlitz3_noFPU_r470.ab3@10456>   MOVE.l objlen,D3
0002770C <AmiBlitz3_noFPU_r470.ab3@10457>   SUB.l #moremem,d3
00027712 <AmiBlitz3_noFPU_r470.ab3@10458>   SUB.l noinits,D3
00027714 <AmiBlitz3_noFPU_r470.ab3@10459>   MOVE.l d3,d1
0002771A <AmiBlitz3_noFPU_r470.ab3@10460>   MOVE.l destbufferstart,D2
00027720 <AmiBlitz3_noFPU_r470.ab3@10461>   ADD.l noinits,D2
00027722 <AmiBlitz3_noFPU_r470.ab3@10462>   ADD.l d2,d1
00027728 <AmiBlitz3_noFPU_r470.ab3@10463>   SUB.l codeend,d1
0002772A <AmiBlitz3_noFPU_r470.ab3@10464>   MOVE.l d1,d3
00027730 <AmiBlitz3_noFPU_r470.ab3@10465>   MOVE.l codeend,d2
00027732 <AmiBlitz3_noFPU_r470.ab3@10468>   MOVE.l d2,d1
00027734 <AmiBlitz3_noFPU_r470.ab3@10469>   ADD.l d3,d1
00027736 <AmiBlitz3_noFPU_r470.ab3@10470>   ADDQ.l #3,D1
0002773C <AmiBlitz3_noFPU_r470.ab3@10471>   ANDI.l #$FFFFFFFC,D1
0002773E <AmiBlitz3_noFPU_r470.ab3@10472>   SUB.l d2,d1
00027740 <AmiBlitz3_noFPU_r470.ab3@10473>   MOVE.l d1,d3
00027742 <AmiBlitz3_noFPU_r470.ab3@10474>   MOVE.l D7,D1
00027746 <AmiBlitz3_noFPU_r470.ab3@10475>    BSR.w mywrite
00027750 <AmiBlitz3_noFPU_r470.ab3@10476>   MOVE.l hunkoffsetcounter,tstsize3
00027754 <AmiBlitz3_noFPU_r470.ab3@10477>    BEQ.w JL_0_7646
00027756 <AmiBlitz3_noFPU_r470.ab3@10478>   MOVE.l D7,D1
0002775C <AmiBlitz3_noFPU_r470.ab3@10479>   MOVE.l #tstend,D2
0002775E <AmiBlitz3_noFPU_r470.ab3@10480>   MOVEQ.l #$04,D3
00027762 <AmiBlitz3_noFPU_r470.ab3@10481>    BSR.w mywrite
00027768 <AmiBlitz3_noFPU_r470.ab3@10482>    MOVEA.l _execbase,A6
0002776E <AmiBlitz3_noFPU_r470.ab3@10483>    MOVE.l hunkoffsetcounter,d0
00027770 <AmiBlitz3_noFPU_r470.ab3@10484>    ASL.l #2,d0
00027776 <AmiBlitz3_noFPU_r470.ab3@10485>    ADD.l #12,d0
00027778 <AmiBlitz3_noFPU_r470.ab3@10486>    MOVEQ #0,d1
0002777C <AmiBlitz3_noFPU_r470.ab3@10487>    JSR _AllocMem(a6)
0002777E <AmiBlitz3_noFPU_r470.ab3@10488>    TST.l d0
00027782 <AmiBlitz3_noFPU_r470.ab3@10489>    BEQ nomem
00027788 <AmiBlitz3_noFPU_r470.ab3@10490>    MOVE.l noinits,D4
0002778A <AmiBlitz3_noFPU_r470.ab3@10491>    MOVE.l d5,-(a7)
0002778C <AmiBlitz3_noFPU_r470.ab3@10492>    MOVE.l d0,d5
0002778E <AmiBlitz3_noFPU_r470.ab3@10493>    MOVE.l d0,a1
00027794 <AmiBlitz3_noFPU_r470.ab3@10494>    MOVEA.l hunkoffsetbase,A2
0002779C <AmiBlitz3_noFPU_r470.ab3@10495>    MOVE.b #0,newhunk
000277A0 <AmiBlitz3_noFPU_r470.ab3@10498>   CMPA.w #$0,A2
000277A4 <AmiBlitz3_noFPU_r470.ab3@10499>    BEQ.w savehunk
000277AA <AmiBlitz3_noFPU_r470.ab3@10500>   MOVE.l destbufferstart,D2
000277B0 <AmiBlitz3_noFPU_r470.ab3@10501>   ADD.l noinits,D2
000277B4 <AmiBlitz3_noFPU_r470.ab3@10502>   MOVE.l  $4(A2),d1
000277B8 <AmiBlitz3_noFPU_r470.ab3@10503>   BTST #31,d1
000277BC <AmiBlitz3_noFPU_r470.ab3@10504>   BEQ 'lh1
000277C4 <AmiBlitz3_noFPU_r470.ab3@10505>   MOVE.b #1,newhunk
000277C8 <AmiBlitz3_noFPU_r470.ab3@10506> BRA 'lh3
000277CC <AmiBlitz3_noFPU_r470.ab3@10509>   BTST #30,d1
000277D0 <AmiBlitz3_noFPU_r470.ab3@10510>   BEQ 'lh2
000277D8 <AmiBlitz3_noFPU_r470.ab3@10511>   MOVE.b #1,newhunk
000277DC <AmiBlitz3_noFPU_r470.ab3@10512> BRA 'lh3
000277DE <AmiBlitz3_noFPU_r470.ab3@10515>   ADD.l d1,d2
000277E4 <AmiBlitz3_noFPU_r470.ab3@10516>   CMP.l chipend,d2
000277E8 <AmiBlitz3_noFPU_r470.ab3@10517>   BLT 'l100
000277EE <AmiBlitz3_noFPU_r470.ab3@10518>   SUB.l chipsize,d1
000277F4 <AmiBlitz3_noFPU_r470.ab3@10521>   CMP.l bssend,d2
000277F8 <AmiBlitz3_noFPU_r470.ab3@10522>   BLT 'l101
000277FE <AmiBlitz3_noFPU_r470.ab3@10523>   SUB.l bsssize,d1
00027800 <AmiBlitz3_noFPU_r470.ab3@10526>   MOVE.l d1,(a1)
00027802 <AmiBlitz3_noFPU_r470.ab3@10527>   SUB.l D4,(A1)+
00027804 <AmiBlitz3_noFPU_r470.ab3@10530>   MOVEA.l (A2),A2
00027808 <AmiBlitz3_noFPU_r470.ab3@10531> BRA.w menu_createresidentfile__oloopb
0002780A <AmiBlitz3_noFPU_r470.ab3@10535>   MOVE.l D7,D1
00027810 <AmiBlitz3_noFPU_r470.ab3@10536>   MOVEA.l _dosbase,A6
0002781A <AmiBlitz3_noFPU_r470.ab3@10537>   MOVE.l hunkoffsetnum,tstsize3
0002781E <AmiBlitz3_noFPU_r470.ab3@10538>   BEQ 'ln1
00027824 <AmiBlitz3_noFPU_r470.ab3@10539>   MOVE.l #tstend+4,d2
00027826 <AmiBlitz3_noFPU_r470.ab3@10540>     MOVEQ #8,d3
0002782A <AmiBlitz3_noFPU_r470.ab3@10541>    JSR _Write(A6)
0002782C <AmiBlitz3_noFPU_r470.ab3@10542>   MOVE.l d7,d1
00027832 <AmiBlitz3_noFPU_r470.ab3@10543>   MOVE.l hunkoffsetnum,d3
00027834 <AmiBlitz3_noFPU_r470.ab3@10544>   ASL.l #2,d3
00027836 <AmiBlitz3_noFPU_r470.ab3@10545>   MOVE.l d5,D2
0002783A <AmiBlitz3_noFPU_r470.ab3@10546>   JSR _Write(a6)
00027840 <AmiBlitz3_noFPU_r470.ab3@10549>   TST.b newhunk
00027844 <AmiBlitz3_noFPU_r470.ab3@10550>   BEQ 'l10
0002784A <AmiBlitz3_noFPU_r470.ab3@10551>   MOVEA.l hunkoffsetbase,A2
0002784C <AmiBlitz3_noFPU_r470.ab3@10552>   MOVE.l d5,a0
0002784E <AmiBlitz3_noFPU_r470.ab3@10553>   ADDQ #8,a0
00027856 <AmiBlitz3_noFPU_r470.ab3@10554>   MOVE.l bssnum,-4(a0)
00027858 <AmiBlitz3_noFPU_r470.ab3@10555>   MOVEQ #0,d6
0002785C <AmiBlitz3_noFPU_r470.ab3@10558>   CMPA.w #$0,A2
00027860 <AmiBlitz3_noFPU_r470.ab3@10559>    BEQ.w 'lh3
00027866 <AmiBlitz3_noFPU_r470.ab3@10560>   MOVE.l destbufferstart,D2
0002786C <AmiBlitz3_noFPU_r470.ab3@10561>   ADD.l noinits,D2
00027870 <AmiBlitz3_noFPU_r470.ab3@10562>   MOVE.l  $4(A2),d1
00027874 <AmiBlitz3_noFPU_r470.ab3@10563>   BTST #30,d1
00027878 <AmiBlitz3_noFPU_r470.ab3@10564>   BEQ 'lh1
0002787C <AmiBlitz3_noFPU_r470.ab3@10565>   BCLR #30,d1
0002787E <AmiBlitz3_noFPU_r470.ab3@10566>   MOVE.l d1,(a0)
00027880 <AmiBlitz3_noFPU_r470.ab3@10567>   SUB.l D4,(A0)+
00027882 <AmiBlitz3_noFPU_r470.ab3@10568>   ADDQ.l #1,d6
00027884 <AmiBlitz3_noFPU_r470.ab3@10571>   MOVE.l (a2),a2
00027888 <AmiBlitz3_noFPU_r470.ab3@10572> BRA 'lh2
0002788A <AmiBlitz3_noFPU_r470.ab3@10575>   TST.l d6
0002788E <AmiBlitz3_noFPU_r470.ab3@10576>     BEQ 'lh10
00027890 <AmiBlitz3_noFPU_r470.ab3@10577>     MOVE.l d5,a0
00027892 <AmiBlitz3_noFPU_r470.ab3@10578>     MOVE.l d6,(a0)
00027894 <AmiBlitz3_noFPU_r470.ab3@10579>     MOVE.l d7,d1
00027896 <AmiBlitz3_noFPU_r470.ab3@10580>     MOVE.l d5,d2
00027898 <AmiBlitz3_noFPU_r470.ab3@10581>     MOVE.l d6,d3
0002789A <AmiBlitz3_noFPU_r470.ab3@10582>     ASL.l #2,d3
0002789C <AmiBlitz3_noFPU_r470.ab3@10583>     ADDQ.l #8,d3
000278A0 <AmiBlitz3_noFPU_r470.ab3@10584>     BSR.w mywrite
000278A6 <AmiBlitz3_noFPU_r470.ab3@10587>   MOVEA.l hunkoffsetbase,A2
000278A8 <AmiBlitz3_noFPU_r470.ab3@10588>   MOVE.l d5,a0
000278AA <AmiBlitz3_noFPU_r470.ab3@10589>   ADDQ #8,a0
000278B2 <AmiBlitz3_noFPU_r470.ab3@10590>   MOVE.l chipnum,-4(a0)
000278B4 <AmiBlitz3_noFPU_r470.ab3@10591>   MOVEQ #0,d6
000278B8 <AmiBlitz3_noFPU_r470.ab3@10594>   CMPA.w #$0,A2
000278BC <AmiBlitz3_noFPU_r470.ab3@10595>    BEQ.w 'lh30
000278C2 <AmiBlitz3_noFPU_r470.ab3@10596>   MOVE.l destbufferstart,D2
000278C8 <AmiBlitz3_noFPU_r470.ab3@10597>   ADD.l noinits,D2
000278CC <AmiBlitz3_noFPU_r470.ab3@10598>   MOVE.l  $4(A2),d1
000278D0 <AmiBlitz3_noFPU_r470.ab3@10599>   BTST #31,d1
000278D4 <AmiBlitz3_noFPU_r470.ab3@10600>   BEQ 'lh11
000278D8 <AmiBlitz3_noFPU_r470.ab3@10601>   BCLR #31,d1
000278DA <AmiBlitz3_noFPU_r470.ab3@10602>   MOVE.l d1,(a0)
000278DC <AmiBlitz3_noFPU_r470.ab3@10603>   SUB.l D4,(A0)+
000278DE <AmiBlitz3_noFPU_r470.ab3@10604>   ADDQ.l #1,d6
000278E0 <AmiBlitz3_noFPU_r470.ab3@10607>   MOVE.l (a2),a2
000278E4 <AmiBlitz3_noFPU_r470.ab3@10608> BRA 'lh20
000278E6 <AmiBlitz3_noFPU_r470.ab3@10611>   TST.l d6
000278EA <AmiBlitz3_noFPU_r470.ab3@10612>     BEQ 'l10
000278EC <AmiBlitz3_noFPU_r470.ab3@10613>     MOVE.l d5,a0
000278EE <AmiBlitz3_noFPU_r470.ab3@10614>     MOVE.l d6,(a0)
000278F0 <AmiBlitz3_noFPU_r470.ab3@10615>     MOVE.l d7,d1
000278F2 <AmiBlitz3_noFPU_r470.ab3@10616>     MOVE.l d5,d2
000278F4 <AmiBlitz3_noFPU_r470.ab3@10617>     MOVE.l d6,d3
000278F6 <AmiBlitz3_noFPU_r470.ab3@10618>     ASL.l #2,d3
000278F8 <AmiBlitz3_noFPU_r470.ab3@10619>     ADDQ.l #8,d3
000278FC <AmiBlitz3_noFPU_r470.ab3@10620>     BSR.w mywrite
00027902 <AmiBlitz3_noFPU_r470.ab3@10624>    MOVEA.l _execbase,A6
00027908 <AmiBlitz3_noFPU_r470.ab3@10625>    MOVE.l hunkoffsetcounter,d0
0002790A <AmiBlitz3_noFPU_r470.ab3@10626>    ASL.l #2,d0
00027910 <AmiBlitz3_noFPU_r470.ab3@10627>    ADD.l #12,d0
00027912 <AmiBlitz3_noFPU_r470.ab3@10628>    MOVE.l d5,a1
00027916 <AmiBlitz3_noFPU_r470.ab3@10629>    JSR _FreeMem(a6)
0002791C <AmiBlitz3_noFPU_r470.ab3@10630>    MOVEA.l _dosbase,A6
0002791E <AmiBlitz3_noFPU_r470.ab3@10631>    MOVE.l (a7)+,d5
00027922 <AmiBlitz3_noFPU_r470.ab3@10632> BRA JL_0_7632
00027928 <AmiBlitz3_noFPU_r470.ab3@10636>   MOVEA.l hunkoffsetbase,A2
0002792E <AmiBlitz3_noFPU_r470.ab3@10637>   MOVE.l noinits,D4
00027932 <AmiBlitz3_noFPU_r470.ab3@10640>   CMPA.w #$0,A2                                            ;write hunkoffsets
00027936 <AmiBlitz3_noFPU_r470.ab3@10641>   BEQ.w JL_0_7632
0002793A <AmiBlitz3_noFPU_r470.ab3@10642>   LEA $4(A2),A1
0002793C <AmiBlitz3_noFPU_r470.ab3@10643>   SUB.l D4,(A1)
0002793E <AmiBlitz3_noFPU_r470.ab3@10644>   MOVE.l D7,D1
00027940 <AmiBlitz3_noFPU_r470.ab3@10645>   MOVE.l A1,D2
00027942 <AmiBlitz3_noFPU_r470.ab3@10646>   MOVEQ.l #$04,D3
00027946 <AmiBlitz3_noFPU_r470.ab3@10647>   BSR.w mywrite
0002794A <AmiBlitz3_noFPU_r470.ab3@10648>   ADD.l D4,$4(A2)
0002794C <AmiBlitz3_noFPU_r470.ab3@10649>   MOVEA.l (A2),A2
00027950 <AmiBlitz3_noFPU_r470.ab3@10650> BRA.w JL_0_7610
00027956 <AmiBlitz3_noFPU_r470.ab3@10653>   CLR.l tstsize3
00027958 <AmiBlitz3_noFPU_r470.ab3@10654>   MOVE.l D7,D1
0002795E <AmiBlitz3_noFPU_r470.ab3@10655>   MOVE.l #tstsize3,D2
00027960 <AmiBlitz3_noFPU_r470.ab3@10656>   MOVEQ.l #$04,D3
00027964 <AmiBlitz3_noFPU_r470.ab3@10657>    BSR.w mywrite
0002796C <AmiBlitz3_noFPU_r470.ab3@10660>   BTST #$7,link_debuginfo
00027970 <AmiBlitz3_noFPU_r470.ab3@10661>    BEQ.w JL_0_7706
00027976 <AmiBlitz3_noFPU_r470.ab3@10662>   MOVE.l #sysdebug,D2                                      ;debughunks
00027978 <AmiBlitz3_noFPU_r470.ab3@10663>   MOVEQ.l #$04,D3
0002797A <AmiBlitz3_noFPU_r470.ab3@10664>   MOVE.l D7,D1
0002797E <AmiBlitz3_noFPU_r470.ab3@10665>    BSR.w mywrite
00027984 <AmiBlitz3_noFPU_r470.ab3@10666>   MOVEA.l labelbase,A2
00027988 <AmiBlitz3_noFPU_r470.ab3@10669>   CMPA.w #$0,A2
0002798C <AmiBlitz3_noFPU_r470.ab3@10670>    BEQ.w JL_0_76F8
00027992 <AmiBlitz3_noFPU_r470.ab3@10671>   BTST #$0,$7(A2)
00027996 <AmiBlitz3_noFPU_r470.ab3@10672>    BEQ.w JL_0_7682
0002799E <AmiBlitz3_noFPU_r470.ab3@10673>   CMPI.l #$1,$4(A2)
000279A2 <AmiBlitz3_noFPU_r470.ab3@10675>   BRA.w JL_0_76F2                                            ;only addr labels
000279A4 <AmiBlitz3_noFPU_r470.ab3@10677>   MOVEQ.l #$00,D4
000279A8 <AmiBlitz3_noFPU_r470.ab3@10678>   MOVE.b $12(A2),D4
000279AC <AmiBlitz3_noFPU_r470.ab3@10679>   SUBI.w #$13,D4
000279AE <AmiBlitz3_noFPU_r470.ab3@10680>   ADDQ.w #2,D4
000279B2 <AmiBlitz3_noFPU_r470.ab3@10681>   ANDI.w #$FFFC,D4
000279B4 <AmiBlitz3_noFPU_r470.ab3@10682>   MOVE.l D4,D5
000279B6 <AmiBlitz3_noFPU_r470.ab3@10683>   LSR.w #2,D5
000279BC <AmiBlitz3_noFPU_r470.ab3@10684>   MOVE.l D5,temp1
000279BE <AmiBlitz3_noFPU_r470.ab3@10685>   LSL.w #2,D5
000279C4 <AmiBlitz3_noFPU_r470.ab3@10686>   MOVE.l #temp1,a1
000279CA <AmiBlitz3_noFPU_r470.ab3@10688>   LEA debugstore,a0
000279CC <AmiBlitz3_noFPU_r470.ab3@10689>   MOVE.l (a1),(a0)+
000279CE <AmiBlitz3_noFPU_r470.ab3@10690>   MOVEQ.l #$04,D3
000279D2 <AmiBlitz3_noFPU_r470.ab3@10693>   LEA $13(A2),A1
000279D4 <AmiBlitz3_noFPU_r470.ab3@10694>   MOVE.l d4,d1
000279D6 <AmiBlitz3_noFPU_r470.ab3@10695>   SUBQ.l #1,d1
000279D8 <AmiBlitz3_noFPU_r470.ab3@10698>     MOVE.b (a1)+,d0
000279DC <AmiBlitz3_noFPU_r470.ab3@10699>     BEQ 'l21
000279E0 <AmiBlitz3_noFPU_r470.ab3@10700>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
000279E4 <AmiBlitz3_noFPU_r470.ab3@10701>     BNE 'ok
000279E8 <AmiBlitz3_noFPU_r470.ab3@10702>     MOVE.b #"_",d0
000279EA <AmiBlitz3_noFPU_r470.ab3@10703> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
000279EE <AmiBlitz3_noFPU_r470.ab3@10704>   DBF d1,'l10
000279F2 <AmiBlitz3_noFPU_r470.ab3@10706> BRA 'l22
000279F4 <AmiBlitz3_noFPU_r470.ab3@10709>       CLR.b (a0)+
000279F8 <AmiBlitz3_noFPU_r470.ab3@10710>   DBF d1,'l21
000279FA <AmiBlitz3_noFPU_r470.ab3@10713>   ADD.l d4,d3
000279FC <AmiBlitz3_noFPU_r470.ab3@10718>   SUB.l D4,D5
00027A00 <AmiBlitz3_noFPU_r470.ab3@10719>    BEQ.w JL_0_76CE
00027A06 <AmiBlitz3_noFPU_r470.ab3@10720>   MOVE.l #zero,a1
00027A08 <AmiBlitz3_noFPU_r470.ab3@10722>   MOVE.l (a1),(a0)+
00027A0A <AmiBlitz3_noFPU_r470.ab3@10724>   ADD.l d5,d3
00027A0E <AmiBlitz3_noFPU_r470.ab3@10729>   MOVE.l $8(A2),D2
00027A14 <AmiBlitz3_noFPU_r470.ab3@10730>   SUB.l destbufferstart,D2
00027A1A <AmiBlitz3_noFPU_r470.ab3@10731>   SUB.l noinits,D2
00027A20 <AmiBlitz3_noFPU_r470.ab3@10732>   MOVE.l D2,temp1
00027A26 <AmiBlitz3_noFPU_r470.ab3@10733>   MOVE.l #temp1,a1
00027A28 <AmiBlitz3_noFPU_r470.ab3@10735>   MOVE.l (a1),(a0)+
00027A2E <AmiBlitz3_noFPU_r470.ab3@10736>   ADD.l #4,d3
00027A34 <AmiBlitz3_noFPU_r470.ab3@10737>   LEA debugstore,a0
00027A36 <AmiBlitz3_noFPU_r470.ab3@10738>   MOVE.l a0,d2
00027A38 <AmiBlitz3_noFPU_r470.ab3@10740>   MOVE.l D7,D1
00027A3C <AmiBlitz3_noFPU_r470.ab3@10741>   BSR.w mywrite
00027A3E <AmiBlitz3_noFPU_r470.ab3@10744>   MOVEA.l (A2),A2
00027A42 <AmiBlitz3_noFPU_r470.ab3@10745> BRA.w JL_0_7664
00027A48 <AmiBlitz3_noFPU_r470.ab3@10749>   MOVE.l #zero,D2
00027A4A <AmiBlitz3_noFPU_r470.ab3@10750>   MOVEQ.l #$04,D3
00027A4C <AmiBlitz3_noFPU_r470.ab3@10751>   MOVE.l D7,D1
00027A50 <AmiBlitz3_noFPU_r470.ab3@10752>   BSR.w mywrite
00027A52 <AmiBlitz3_noFPU_r470.ab3@10755>   MOVE.l D7,D1
00027A58 <AmiBlitz3_noFPU_r470.ab3@10756>   MOVE.l #tstdone,D2                                      ;hunkend
00027A5A <AmiBlitz3_noFPU_r470.ab3@10757>   MOVEQ.l #$04,D3
00027A64 <AmiBlitz3_noFPU_r470.ab3@10758>   CMPI.l #-1,bssstart
00027A68 <AmiBlitz3_noFPU_r470.ab3@10759>   BEQ 'l10
00027A6A <AmiBlitz3_noFPU_r470.ab3@10760>   MOVEQ #16,d3
00027A70 <AmiBlitz3_noFPU_r470.ab3@10761>   MOVE.l #hunkend,d2
00027A7A <AmiBlitz3_noFPU_r470.ab3@10762>   CMPI.l #-1,chipstart
00027A7E <AmiBlitz3_noFPU_r470.ab3@10763>   BEQ 'l10
00027A80 <AmiBlitz3_noFPU_r470.ab3@10764>   MOVE.l d7,d1
00027A82 <AmiBlitz3_noFPU_r470.ab3@10765>   MOVEQ #12,d3
00027A86 <AmiBlitz3_noFPU_r470.ab3@10766>   BSR.w mywrite
00027A90 <AmiBlitz3_noFPU_r470.ab3@10769>   CMPI.l #-1,chipstart
00027A94 <AmiBlitz3_noFPU_r470.ab3@10770>   BEQ 'l11
00027A96 <AmiBlitz3_noFPU_r470.ab3@10771>   MOVEQ #12,d3
00027A9C <AmiBlitz3_noFPU_r470.ab3@10772>   MOVE.l #hunkend2,d2
00027A9E <AmiBlitz3_noFPU_r470.ab3@10773>   MOVE.l d7,d1
00027AA2 <AmiBlitz3_noFPU_r470.ab3@10774>   BSR.w mywrite
00027AA4 <AmiBlitz3_noFPU_r470.ab3@10775>   MOVE.l d7,d1
00027AAA <AmiBlitz3_noFPU_r470.ab3@10776>   MOVE.l chipstart,d2
00027AB0 <AmiBlitz3_noFPU_r470.ab3@10777>   MOVE.l chipsize,d3
00027AB4 <AmiBlitz3_noFPU_r470.ab3@10778>   BSR.w mywrite
00027AB6 <AmiBlitz3_noFPU_r470.ab3@10779>   MOVEQ #4,d3
00027ABC <AmiBlitz3_noFPU_r470.ab3@10780>   MOVE.l #hunkend,d2
00027ABE <AmiBlitz3_noFPU_r470.ab3@10781>   MOVE.l d7,d1
00027AC2 <AmiBlitz3_noFPU_r470.ab3@10784>   BSR.w mywrite
00027AC4 <AmiBlitz3_noFPU_r470.ab3@10785>   MOVE.l D7,D1
00027ACA <AmiBlitz3_noFPU_r470.ab3@10786>   MOVEA.l _dosbase,A6
00027ACE <AmiBlitz3_noFPU_r470.ab3@10787>   JSR _Close(A6)
00027AD6 <AmiBlitz3_noFPU_r470.ab3@10792>   BTST #$7,create_iconfile
00027ADA <AmiBlitz3_noFPU_r470.ab3@10793>    BEQ.w skip_createicon
00027AE0 <AmiBlitz3_noFPU_r470.ab3@10795>   MOVEA.l ptr_newexefilename,A0
00027AE2 <AmiBlitz3_noFPU_r470.ab3@10798>     TST.b (A0)+
00027AE6 <AmiBlitz3_noFPU_r470.ab3@10799>   BNE.w JL_0_772C
00027AE8 <AmiBlitz3_noFPU_r470.ab3@10800>   SUBQ.w #1,A0
00027AEA <AmiBlitz3_noFPU_r470.ab3@10801>   MOVE.l A0,-(A7)
00027AF0 <AmiBlitz3_noFPU_r470.ab3@10802>   LEA str_infoextention2,A1
00027AF2 <AmiBlitz3_noFPU_r470.ab3@10805>     MOVE.b (A1)+,(A0)+
00027AF6 <AmiBlitz3_noFPU_r470.ab3@10806>   BNE.w JL_0_773A
00027AFC <AmiBlitz3_noFPU_r470.ab3@10808>   MOVE.l ptr_newexefilename,D1
00027AFE <AmiBlitz3_noFPU_r470.ab3@10809>   MOVEQ.l #-$02,D2
00027B04 <AmiBlitz3_noFPU_r470.ab3@10810>   MOVEA.l _dosbase,A6
00027B08 <AmiBlitz3_noFPU_r470.ab3@10811>   JSR _Lock(A6)
00027B0A <AmiBlitz3_noFPU_r470.ab3@10812>   MOVE.l D0,D1
00027B0E <AmiBlitz3_noFPU_r470.ab3@10813>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00027B12 <AmiBlitz3_noFPU_r470.ab3@10814>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00027B16 <AmiBlitz3_noFPU_r470.ab3@10815> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00027B1C <AmiBlitz3_noFPU_r470.ab3@10818>   MOVE.l ptr_newexefilename,D1
00027B22 <AmiBlitz3_noFPU_r470.ab3@10819>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027B28 <AmiBlitz3_noFPU_r470.ab3@10820>   MOVEA.l _dosbase,A6
00027B2C <AmiBlitz3_noFPU_r470.ab3@10821>    JSR _Open(A6)
00027B2E <AmiBlitz3_noFPU_r470.ab3@10822>   MOVE.l D0,D7
00027B32 <AmiBlitz3_noFPU_r470.ab3@10823>    BEQ.w JL_0_7788
00027B38 <AmiBlitz3_noFPU_r470.ab3@10824>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027B3E <AmiBlitz3_noFPU_r470.ab3@10825>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00027B40 <AmiBlitz3_noFPU_r470.ab3@10826>   MOVE.l D7,D1
00027B46 <AmiBlitz3_noFPU_r470.ab3@10827>   MOVEA.l _dosbase,A6
00027B4A <AmiBlitz3_noFPU_r470.ab3@10828>   JSR _Write(A6)
00027B4C <AmiBlitz3_noFPU_r470.ab3@10829>   MOVE.l D7,D1
00027B50 <AmiBlitz3_noFPU_r470.ab3@10830>   JSR _Close(A6)
00027B52 <AmiBlitz3_noFPU_r470.ab3@10833>   MOVEA.l (A7)+,A0
00027B54 <AmiBlitz3_noFPU_r470.ab3@10834>   CLR.b (A0)
00027B5A <AmiBlitz3_noFPU_r470.ab3@10839>   TST.b exdebug
00027B5E <AmiBlitz3_noFPU_r470.ab3@10840>    BEQ JL_0_757Cb
00027B64 <AmiBlitz3_noFPU_r470.ab3@10841>   MOVE.w dontwrite,D1
00027B68 <AmiBlitz3_noFPU_r470.ab3@10842>   BNE.w JL_0_757Cb
00027B6E <AmiBlitz3_noFPU_r470.ab3@10843>   MOVE.l chipsize,d5
00027B74 <AmiBlitz3_noFPU_r470.ab3@10844>   MOVE.l bsssize,d3
00027B7A <AmiBlitz3_noFPU_r470.ab3@10845>   MOVE.l chipstart,d7
00027B80 <AmiBlitz3_noFPU_r470.ab3@10846>   MOVE.l bssstart,d6
00027B86 <AmiBlitz3_noFPU_r470.ab3@10847>   MOVEA.l hunkoffsetbase,A2
00027B8C <AmiBlitz3_noFPU_r470.ab3@10848>   MOVEA.l destbufferstart,A1
00027B8E <AmiBlitz3_noFPU_r470.ab3@10849>   MOVE.l A1,D2
00027B94 <AmiBlitz3_noFPU_r470.ab3@10850>   ADD.l noinits,D2
00027B9A <AmiBlitz3_noFPU_r470.ab3@10851>   CLR.l hunkoffsetnum
00027B9E <AmiBlitz3_noFPU_r470.ab3@10854>   CMPA.w #$0,A2
00027BA2 <AmiBlitz3_noFPU_r470.ab3@10855>    BEQ.w JL_0_757Cb
00027BA6 <AmiBlitz3_noFPU_r470.ab3@10856>   MOVE.l $4(A2),D0
00027BAA <AmiBlitz3_noFPU_r470.ab3@10857>    LEA $0(a1,d0.l),a0
00027BAC <AmiBlitz3_noFPU_r470.ab3@10858>    MOVE.l (a0),d1
00027BAE <AmiBlitz3_noFPU_r470.ab3@10859>   TST.l d1
00027BB2 <AmiBlitz3_noFPU_r470.ab3@10860>    BMI.w 'lm1
00027BBA <AmiBlitz3_noFPU_r470.ab3@10861>   MOVE.b #0,newhunk
00027BC4 <AmiBlitz3_noFPU_r470.ab3@10862>   CMP.l #-1,chipstart
00027BC8 <AmiBlitz3_noFPU_r470.ab3@10863>   BEQ 'l10
00027BCE <AmiBlitz3_noFPU_r470.ab3@10864>   CMP.l chipstart,d1
00027BD2 <AmiBlitz3_noFPU_r470.ab3@10865>   BLT 'l10
00027BDA <AmiBlitz3_noFPU_r470.ab3@10866>   MOVE.b #1,newhunk
00027BE0 <AmiBlitz3_noFPU_r470.ab3@10867>   CMP.l chipend,d1
00027BE4 <AmiBlitz3_noFPU_r470.ab3@10868>   BGE 'l110
00027BE6 <AmiBlitz3_noFPU_r470.ab3@10869>   ADD.l d7,(a0)
00027BEE <AmiBlitz3_noFPU_r470.ab3@10870>   ADD.l #$80000000,4(a2)
00027BF2 <AmiBlitz3_noFPU_r470.ab3@10871> BRA JL_0_7576b
00027BF6 <AmiBlitz3_noFPU_r470.ab3@10874>   ADD.l d5,0(a0)
00027C00 <AmiBlitz3_noFPU_r470.ab3@10877>   CMP.l #-1,bssstart
00027C04 <AmiBlitz3_noFPU_r470.ab3@10878>     BEQ 'l11
00027C0A <AmiBlitz3_noFPU_r470.ab3@10879>   CMP.l bssstart,d1
00027C0E <AmiBlitz3_noFPU_r470.ab3@10880>   BLT 'l11
00027C14 <AmiBlitz3_noFPU_r470.ab3@10881>   CMP.l bssend,d1
00027C18 <AmiBlitz3_noFPU_r470.ab3@10882>   BGE 'l111
00027C1E <AmiBlitz3_noFPU_r470.ab3@10883>   TST.b newhunk
00027C22 <AmiBlitz3_noFPU_r470.ab3@10884>   BEQ 'ln1
00027C24 <AmiBlitz3_noFPU_r470.ab3@10885>   ADD.l d5,(a0)
00027C26 <AmiBlitz3_noFPU_r470.ab3@10888>   ADD.l d6,(a0)
00027C2E <AmiBlitz3_noFPU_r470.ab3@10889>   ADD.l #$40000000,4(a2)
00027C32 <AmiBlitz3_noFPU_r470.ab3@10890> BRA JL_0_7576b
00027C36 <AmiBlitz3_noFPU_r470.ab3@10893>   ADD.l d3,0(a0)
00027C38 <AmiBlitz3_noFPU_r470.ab3@10896>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00027C3E <AmiBlitz3_noFPU_r470.ab3@10899>   ADDQ.l #1,hunkoffsetnum
00027C40 <AmiBlitz3_noFPU_r470.ab3@10902>   MOVEA.l (A2),A2
00027C44 <AmiBlitz3_noFPU_r470.ab3@10903> BRA.w JL_0_755Eb
00027C4A <AmiBlitz3_noFPU_r470.ab3@10906>   JSR call_setpointernormal
00027C4E <AmiBlitz3_noFPU_r470.ab3@10907>   MOVEM.l (a7)+,d2-d7/a2-a6
00027C50 <AmiBlitz3_noFPU_r470.ab3@10909> RTS
00027C52 <AmiBlitz3_noFPU_r470.ab3@10913>   MOVE.l D2,-(A7)
00027C58 <AmiBlitz3_noFPU_r470.ab3@10914>   MOVE.l destpointer,D2
00027C5E <AmiBlitz3_noFPU_r470.ab3@10915>   SUB.l destbufferstart,D2
00027C62 <AmiBlitz3_noFPU_r470.ab3@10916>   BSR.w addhunkoffset
00027C64 <AmiBlitz3_noFPU_r470.ab3@10917>   MOVE.l (A7)+,D2
00027C66 <AmiBlitz3_noFPU_r470.ab3@10918> RTS
00027C6A <AmiBlitz3_noFPU_r470.ab3@10922>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00027C70 <AmiBlitz3_noFPU_r470.ab3@10923>   TST.b nohunkoffset
00027C74 <AmiBlitz3_noFPU_r470.ab3@10924>   BNE 'l10
00027C76 <AmiBlitz3_noFPU_r470.ab3@10925>   MOVEQ.l #$8,D0
00027C78 <AmiBlitz3_noFPU_r470.ab3@10926>   MOVEQ.l #$01,D1
00027C7E <AmiBlitz3_noFPU_r470.ab3@10927>   MOVEA.l _execbase,A6
00027C84 <AmiBlitz3_noFPU_r470.ab3@10928>   MOVE.l mempool2,a0
00027C88 <AmiBlitz3_noFPU_r470.ab3@10929>   JSR _AllocPooled(a6)
00027C8E <AmiBlitz3_noFPU_r470.ab3@10931>   ADDQ.l #1,hunkoffsetcounter
00027C90 <AmiBlitz3_noFPU_r470.ab3@10932>   MOVEA.l D0,A0
00027C96 <AmiBlitz3_noFPU_r470.ab3@10933>   MOVE.l hunkoffsetbase,(A0)
00027C9C <AmiBlitz3_noFPU_r470.ab3@10934>   MOVE.l A0,hunkoffsetbase
00027CA0 <AmiBlitz3_noFPU_r470.ab3@10935>   MOVE.l D2,$4(A0)
00027CA4 <AmiBlitz3_noFPU_r470.ab3@10938>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00027CA6 <AmiBlitz3_noFPU_r470.ab3@10939> RTS
00027CAC <AmiBlitz3_noFPU_r470.ab3@10943>   CLR.l hunkoffsetbase
00027CB2 <AmiBlitz3_noFPU_r470.ab3@10944>   MOVEA.l _execbase,A6
00027CB8 <AmiBlitz3_noFPU_r470.ab3@10945>   MOVEA.l hunkoffsetbase,A2
00027CBC <AmiBlitz3_noFPU_r470.ab3@10948>     CMPA.w #$0,A2
00027CC0 <AmiBlitz3_noFPU_r470.ab3@10949>      BEQ.w JL_0_7988
00027CC2 <AmiBlitz3_noFPU_r470.ab3@10950>     MOVEA.l A2,A1
00027CC4 <AmiBlitz3_noFPU_r470.ab3@10951>     MOVEQ.l #$08,D0
00027CC6 <AmiBlitz3_noFPU_r470.ab3@10952>     MOVEA.l (A2),A2
00027CCC <AmiBlitz3_noFPU_r470.ab3@10953>     MOVE.l mempool2,a0
00027CD0 <AmiBlitz3_noFPU_r470.ab3@10954>     JSR _FreePooled(A6)
00027CD4 <AmiBlitz3_noFPU_r470.ab3@10955> BRA.w JL_0_7972
00027CDA <AmiBlitz3_noFPU_r470.ab3@10958>   CLR.l hunkoffsetcounter
00027CDC <AmiBlitz3_noFPU_r470.ab3@10959> RTS
00027CF4 <AmiBlitz3_noFPU_r470.ab3@10962> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00027CF8 <AmiBlitz3_noFPU_r470.ab3@10963> cmakea5:    Ds.l 1
00027CFA <AmiBlitz3_noFPU_r470.ab3@10964> cmake:      Ds.w 1
00027D7A <AmiBlitz3_noFPU_r470.ab3@10965> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00027D80 <AmiBlitz3_noFPU_r470.ab3@10969>   MOVE.l A5,lastsourcepos
00027D8A <AmiBlitz3_noFPU_r470.ab3@10970>   MOVE.w instringon,oldqflag
00027D8C <AmiBlitz3_noFPU_r470.ab3@10974>   MOVEQ.l #$00,D0
00027D8E <AmiBlitz3_noFPU_r470.ab3@10975>   MOVE.b (A5)+,D0
00027D92 <AmiBlitz3_noFPU_r470.ab3@10976>    BEQ getcharb__donea
00027D96 <AmiBlitz3_noFPU_r470.ab3@10977>   BPL getcharb__stuffa
00027D98 <AmiBlitz3_noFPU_r470.ab3@10978>   LSL.l #8,D0
00027D9A <AmiBlitz3_noFPU_r470.ab3@10979>   MOVE.b (A5)+,D0
00027D9C <AmiBlitz3_noFPU_r470.ab3@10980>   MOVE.l a1,-(a7)
00027DA2 <AmiBlitz3_noFPU_r470.ab3@10981>   LEA replacedat,a1
00027DA6 <AmiBlitz3_noFPU_r470.ab3@10982>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00027DAA <AmiBlitz3_noFPU_r470.ab3@10983>   BEQ getchar__l10
00027DAE <AmiBlitz3_noFPU_r470.ab3@10984>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00027DB0 <AmiBlitz3_noFPU_r470.ab3@10988>   MOVE.l (a7)+,a1
00027DB4 <AmiBlitz3_noFPU_r470.ab3@10989> BRA getchar__weiter
00027DB8 <AmiBlitz3_noFPU_r470.ab3@10992>   CMP.w #$22,D0
00027DBC <AmiBlitz3_noFPU_r470.ab3@10993>    BEQ.b swapquotea
00027DC0 <AmiBlitz3_noFPU_r470.ab3@10994>   CMP.w #$3B,D0
00027DC4 <AmiBlitz3_noFPU_r470.ab3@10995>    BNE.b getcharb__donea
00027DCA <AmiBlitz3_noFPU_r470.ab3@10996>   TST.w instringon
00027DCE <AmiBlitz3_noFPU_r470.ab3@10997>    BNE.b getcharb__donea
00027DD0 <AmiBlitz3_noFPU_r470.ab3@11000>   MOVE.b (A5)+,D0
00027DD4 <AmiBlitz3_noFPU_r470.ab3@11001>              BEQ getchar__l1
00027DD8 <AmiBlitz3_noFPU_r470.ab3@11002>              CMP.b #":",d0
00027DDC <AmiBlitz3_noFPU_r470.ab3@11003>              BNE getcharb__loopa                                ;:@
00027DE0 <AmiBlitz3_noFPU_r470.ab3@11004>              CMP.b #"@",(a5)
00027DE4 <AmiBlitz3_noFPU_r470.ab3@11005>              BNE getcharb__loopa
00027DE6 <AmiBlitz3_noFPU_r470.ab3@11006>              ADDQ #1,a5
00027DEC <AmiBlitz3_noFPU_r470.ab3@11009>   MOVE.w D0,lastchar
00027DF0 <AmiBlitz3_noFPU_r470.ab3@11012> BRA.s getchar__weiter
00027DF6 <AmiBlitz3_noFPU_r470.ab3@11015>   NOT.w instringon
00027DFC <AmiBlitz3_noFPU_r470.ab3@11018>    MOVE.w D0,lastchar
00027E00 <AmiBlitz3_noFPU_r470.ab3@11019>    BEQ.w getchar__done
00027E04 <AmiBlitz3_noFPU_r470.ab3@11020>    BPL.w getchar__done2
00027E08 <AmiBlitz3_noFPU_r470.ab3@11021>   CMP.w #-$7FE4,D0                                         ;cnif
00027E0C <AmiBlitz3_noFPU_r470.ab3@11022>    BEQ.w getchar__cnif
00027E10 <AmiBlitz3_noFPU_r470.ab3@11023>   CMP.w #-$7FE3,D0                                         ;csif
00027E14 <AmiBlitz3_noFPU_r470.ab3@11024>    BEQ.w getchar__csif
00027E18 <AmiBlitz3_noFPU_r470.ab3@11025>   CMP.w #-$7FE2,D0                                         ;celse
00027E1C <AmiBlitz3_noFPU_r470.ab3@11026>    BEQ.w getchar__celse
00027E20 <AmiBlitz3_noFPU_r470.ab3@11027>   CMP.w #-$7FE1,D0                                         ;cend
00027E24 <AmiBlitz3_noFPU_r470.ab3@11028>    BEQ.w getchar__cend
00027E2A <AmiBlitz3_noFPU_r470.ab3@11031>   TST.w skipcode
00027E2E <AmiBlitz3_noFPU_r470.ab3@11032>    BEQ.w getchar
00027E32 <AmiBlitz3_noFPU_r470.ab3@11033>   CMP.w #$7E,D0
00027E36 <AmiBlitz3_noFPU_r470.ab3@11034>    BEQ.w getchar__cmake                                         ;tilde
00027E3A <AmiBlitz3_noFPU_r470.ab3@11035>   CMP.w #$2,D0
00027E3E <AmiBlitz3_noFPU_r470.ab3@11036>    BNE.w getchar__notunpath
00027E44 <AmiBlitz3_noFPU_r470.ab3@11037>   MOVEA.l usedfrom,A5
00027E4A <AmiBlitz3_noFPU_r470.ab3@11038>   CLR.l usedfrom
00027E4E <AmiBlitz3_noFPU_r470.ab3@11039> BRA.w getchar
00027E52 <AmiBlitz3_noFPU_r470.ab3@11042>   CMP.w #$1,D0
00027E56 <AmiBlitz3_noFPU_r470.ab3@11043>    BNE.w getchar__done
00027E5A <AmiBlitz3_noFPU_r470.ab3@11047>   MOVEA.l cmakea5(PC),A5
00027E5E <AmiBlitz3_noFPU_r470.ab3@11048> BRA.w getchar
00027E64 <AmiBlitz3_noFPU_r470.ab3@11051>   TST.w cmake
00027E68 <AmiBlitz3_noFPU_r470.ab3@11052>    BNE.w getchar__done
00027E6C <AmiBlitz3_noFPU_r470.ab3@11054>   MOVEM.l D0-D7/A0-A6,-(A7)
00027E72 <AmiBlitz3_noFPU_r470.ab3@11055>   LEA cmake,a0                                         ;reass
00027E74 <AmiBlitz3_noFPU_r470.ab3@11056>   NOT.w (a0)
00027E78 <AmiBlitz3_noFPU_r470.ab3@11057>   LEA cmakebak(PC),A0
00027E7E <AmiBlitz3_noFPU_r470.ab3@11058>   LEA ptr_parameterstore,A1
00027E80 <AmiBlitz3_noFPU_r470.ab3@11059>   MOVEQ.l #$1F,D0
00027E82 <AmiBlitz3_noFPU_r470.ab3@11062>     MOVE.l (A1)+,(A0)+
00027E86 <AmiBlitz3_noFPU_r470.ab3@11063>   DBF D0,getchar__cmloop
00027E8C <AmiBlitz3_noFPU_r470.ab3@11066>    JSR AJL_0_BF6E
00027E90 <AmiBlitz3_noFPU_r470.ab3@11067>   CMP.w #$7E,D0
00027E94 <AmiBlitz3_noFPU_r470.ab3@11068>    BNE.w syntaxerr
00027E9A <AmiBlitz3_noFPU_r470.ab3@11069>   MOVE.l A5,cmakea5                                      ;tilde
00027E9E <AmiBlitz3_noFPU_r470.ab3@11070>   LEA cmakebuff(PC),A0
00027EA0 <AmiBlitz3_noFPU_r470.ab3@11071>   MOVE.l D3,D2
00027EA4 <AmiBlitz3_noFPU_r470.ab3@11072>   BSR.w makelong
00027EA6 <AmiBlitz3_noFPU_r470.ab3@11073>   ADDQ.b #1,(A0)
00027EAC <AmiBlitz3_noFPU_r470.ab3@11074>   LEA cmake,a0
00027EAE <AmiBlitz3_noFPU_r470.ab3@11075>   NOT.w (a0)                                               ;reass
00027EB2 <AmiBlitz3_noFPU_r470.ab3@11076>   LEA cmakebak(PC),A0
00027EB8 <AmiBlitz3_noFPU_r470.ab3@11077>   LEA ptr_parameterstore,A1
00027EBA <AmiBlitz3_noFPU_r470.ab3@11078>   MOVEQ.l #$1F,D0
00027EBC <AmiBlitz3_noFPU_r470.ab3@11081>     MOVE.l (A0)+,(A1)+
00027EC0 <AmiBlitz3_noFPU_r470.ab3@11082>   DBF D0,getchar__cmloop2
00027EC4 <AmiBlitz3_noFPU_r470.ab3@11084>   MOVEM.l (A7)+,D0-D7/A0-A6
00027EC8 <AmiBlitz3_noFPU_r470.ab3@11085>   LEA cmakebuff(PC),A5
00027ECC <AmiBlitz3_noFPU_r470.ab3@11086> BRA.w getchar
00027ECE <AmiBlitz3_noFPU_r470.ab3@11089> RTS
00027ED8 <AmiBlitz3_noFPU_r470.ab3@11093>   MOVE.l linenumat,ciflineat                               ;csif
00027EDE <AmiBlitz3_noFPU_r470.ab3@11094>   TST.w skipcode
00027EE2 <AmiBlitz3_noFPU_r470.ab3@11095>    BEQ.w getchar__incnest
00027EE6 <AmiBlitz3_noFPU_r470.ab3@11096>    BSR.w get1bytemain
00027EE8 <AmiBlitz3_noFPU_r470.ab3@11097>    MOVE.l a1,-(a7)
00027EEE <AmiBlitz3_noFPU_r470.ab3@11098>    JSR JL_0_C492
00027EF0 <AmiBlitz3_noFPU_r470.ab3@11099>    MOVE.l (a7)+,a1
00027EF4 <AmiBlitz3_noFPU_r470.ab3@11100> BRA.w getchar
00027EFE <AmiBlitz3_noFPU_r470.ab3@11103>   MOVE.l linenumat,ciflineat                               ;cnif
00027F04 <AmiBlitz3_noFPU_r470.ab3@11104>   TST.w skipcode
00027F08 <AmiBlitz3_noFPU_r470.ab3@11105>    BEQ.w getchar__incnest
00027F0C <AmiBlitz3_noFPU_r470.ab3@11106>    BSR.w get1bytemain
00027F10 <AmiBlitz3_noFPU_r470.ab3@11107>    CMP.b #"@",d0
00027F14 <AmiBlitz3_noFPU_r470.ab3@11108>    BNE getchar__cnif_ok2
00027F18 <AmiBlitz3_noFPU_r470.ab3@11109>    BSR.w get1bytemain
00027F20 <AmiBlitz3_noFPU_r470.ab3@11110>    MOVE.b #1,incnif
00027F26 <AmiBlitz3_noFPU_r470.ab3@11111>    JSR findconstant2
00027F2A <AmiBlitz3_noFPU_r470.ab3@11112>    BEQ getchar__cnif_ok2
00027F30 <AmiBlitz3_noFPU_r470.ab3@11115>    MOVE.w fast,-(a7)
00027F36 <AmiBlitz3_noFPU_r470.ab3@11116>    CLR.b fast
00027F38 <AmiBlitz3_noFPU_r470.ab3@11117>    MOVE.l a1,-(a7)
00027F3E <AmiBlitz3_noFPU_r470.ab3@11118>    JSR JL_0_C47E
00027F44 <AmiBlitz3_noFPU_r470.ab3@11119>    CLR.b incnif
00027F46 <AmiBlitz3_noFPU_r470.ab3@11120>    MOVE.l (a7)+,a1
00027F4C <AmiBlitz3_noFPU_r470.ab3@11121>    MOVE.w (a7)+,fast
00027F50 <AmiBlitz3_noFPU_r470.ab3@11122> BRA.w getchar
00027F56 <AmiBlitz3_noFPU_r470.ab3@11125>   ADDQ.w #1,connest
00027F5A <AmiBlitz3_noFPU_r470.ab3@11126> BRA.w getchar
00027F60 <AmiBlitz3_noFPU_r470.ab3@11129>   MOVE.w connest,D0                                      ;celse
00027F64 <AmiBlitz3_noFPU_r470.ab3@11130>    BNE.w getchar
00027F6A <AmiBlitz3_noFPU_r470.ab3@11131>   NOT.w skipcode
00027F6E <AmiBlitz3_noFPU_r470.ab3@11132> BRA.w getchar
00027F74 <AmiBlitz3_noFPU_r470.ab3@11135>   SUBQ.w #1,connest                                      ;cend
00027F78 <AmiBlitz3_noFPU_r470.ab3@11136>    BPL.w getchar
00027F7E <AmiBlitz3_noFPU_r470.ab3@11137>   ADDQ.w #1,connest
00027F84 <AmiBlitz3_noFPU_r470.ab3@11138>   MOVEA.l concomsp,A0
00027F8A <AmiBlitz3_noFPU_r470.ab3@11139>   CMPA.l #concomstack,A0
00027F8E <AmiBlitz3_noFPU_r470.ab3@11140>    BEQ.w nociferr
00027F90 <AmiBlitz3_noFPU_r470.ab3@11141>   SUBQ.w #2,A0
00027F96 <AmiBlitz3_noFPU_r470.ab3@11142>   MOVE.l A0,concomsp
00027F9C <AmiBlitz3_noFPU_r470.ab3@11143>   MOVE.w (A0),skipcode
00027FA0 <AmiBlitz3_noFPU_r470.ab3@11144> BRA.w getchar
00027FA4 <AmiBlitz3_noFPU_r470.ab3@11147> ciflineat:   Ds.l 1
00027FA6 <AmiBlitz3_noFPU_r470.ab3@11155>   MOVEQ.l #$00,D0
00027FA8 <AmiBlitz3_noFPU_r470.ab3@11156>   MOVE.b (A5)+,D0
00027FAC <AmiBlitz3_noFPU_r470.ab3@11157>    BEQ.b getcharb__done
00027FB0 <AmiBlitz3_noFPU_r470.ab3@11158>    BPL.b getcharb__stuff
00027FB2 <AmiBlitz3_noFPU_r470.ab3@11159>   LSL.w #8,D0
00027FB4 <AmiBlitz3_noFPU_r470.ab3@11160>   MOVE.b (A5)+,D0
00027FB6 <AmiBlitz3_noFPU_r470.ab3@11161> RTS
00027FBA <AmiBlitz3_noFPU_r470.ab3@11164>   CMP.w #$22,D0
00027FBE <AmiBlitz3_noFPU_r470.ab3@11165>    BEQ.b swapquote
00027FC2 <AmiBlitz3_noFPU_r470.ab3@11166>   CMP.w #$3B,D0
00027FC6 <AmiBlitz3_noFPU_r470.ab3@11167>    BNE.b getcharb__done
00027FCC <AmiBlitz3_noFPU_r470.ab3@11168>   TST.w instringon
00027FD0 <AmiBlitz3_noFPU_r470.ab3@11169>    BNE.b getcharb__done
00027FD2 <AmiBlitz3_noFPU_r470.ab3@11172>   MOVE.b (A5)+,D0
00027FD6 <AmiBlitz3_noFPU_r470.ab3@11173>             BEQ getcharb__loop_l1
00027FDA <AmiBlitz3_noFPU_r470.ab3@11174>             CMP.b #":",d0
00027FDE <AmiBlitz3_noFPU_r470.ab3@11175>             BNE getcharb__loop
00027FE2 <AmiBlitz3_noFPU_r470.ab3@11176>             CMP.b #"@",(a5)
00027FE6 <AmiBlitz3_noFPU_r470.ab3@11177>             BNE getcharb__loop
00027FEC <AmiBlitz3_noFPU_r470.ab3@11180>   MOVE.w D0,lastchar
00027FEE <AmiBlitz3_noFPU_r470.ab3@11183> RTS
00027FF4 <AmiBlitz3_noFPU_r470.ab3@11186>   NOT.w instringon
00027FF6 <AmiBlitz3_noFPU_r470.ab3@11187> RTS
00027FFA <AmiBlitz3_noFPU_r470.ab3@11191>   BSR.w getchar
00028000 <AmiBlitz3_noFPU_r470.ab3@11192>   TST.w instringon
00028004 <AmiBlitz3_noFPU_r470.ab3@11193>    BNE.w get1byte__skip
00028008 <AmiBlitz3_noFPU_r470.ab3@11194>   CMP.w #$20,D0
0002800C <AmiBlitz3_noFPU_r470.ab3@11195>    BEQ.w get1byte_
0002800E <AmiBlitz3_noFPU_r470.ab3@11198> RTS
00028028 <AmiBlitz3_noFPU_r470.ab3@11201> gs:        Ds.w 13                                         ;ds.b 26  org source
0002802C <AmiBlitz3_noFPU_r470.ab3@11202>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
0002802E <AmiBlitz3_noFPU_r470.ab3@11203>            Dc.b $C4,$DC
00028032 <AmiBlitz3_noFPU_r470.ab3@11209>   BSR.w getchar
00028038 <AmiBlitz3_noFPU_r470.ab3@11210>   TST.w instringon
0002803C <AmiBlitz3_noFPU_r470.ab3@11211>    BNE.w gchar2
00028040 <AmiBlitz3_noFPU_r470.ab3@11212>   CMP.w #$20,D0
00028044 <AmiBlitz3_noFPU_r470.ab3@11213>    BEQ.w get1bytemain
00028046 <AmiBlitz3_noFPU_r470.ab3@11215>   TST.w D0
0002804A <AmiBlitz3_noFPU_r470.ab3@11218>   BEQ.b get1bytemain__zero
00028050 <AmiBlitz3_noFPU_r470.ab3@11219>   TST.w instringon
00028054 <AmiBlitz3_noFPU_r470.ab3@11220>    BEQ.b get1bytemain__noqoute
00028058 <AmiBlitz3_noFPU_r470.ab3@11221>   CMP.b #$20,D0
0002805C <AmiBlitz3_noFPU_r470.ab3@11222>    BCC.b get1bytemain__skip
00028060 <AmiBlitz3_noFPU_r470.ab3@11223>   MOVE.b gs(PC,D0.W),D0
00028062 <AmiBlitz3_noFPU_r470.ab3@11224> RTS
00028066 <AmiBlitz3_noFPU_r470.ab3@11227>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
0002806A <AmiBlitz3_noFPU_r470.ab3@11228>    BEQ.b get1bytemain__zero
0002806E <AmiBlitz3_noFPU_r470.ab3@11229>   CMP.w #$3A,D0
00028072 <AmiBlitz3_noFPU_r470.ab3@11230>    BEQ.b get1bytemain__zero
00028074 <AmiBlitz3_noFPU_r470.ab3@11233>   TST.w D0
00028076 <AmiBlitz3_noFPU_r470.ab3@11236> RTS
0002807C <AmiBlitz3_noFPU_r470.ab3@11240>   MOVE.w lastchar,D0
00028080 <AmiBlitz3_noFPU_r470.ab3@11241> BRA.w gchar2
0002808A <AmiBlitz3_noFPU_r470.ab3@11245>   MOVE.w oldqflag,instringon
00028090 <AmiBlitz3_noFPU_r470.ab3@11246>   MOVEA.l lastsourcepos,A5
00028092 <AmiBlitz3_noFPU_r470.ab3@11247> RTS
00028098 <AmiBlitz3_noFPU_r470.ab3@11251>   MOVE.w D0,locchar
0002809E <AmiBlitz3_noFPU_r470.ab3@11252>   MOVE.l A5,locloc
000280A0 <AmiBlitz3_noFPU_r470.ab3@11253> RTS
000280A6 <AmiBlitz3_noFPU_r470.ab3@11257>   MOVEA.l locloc,A5
000280AC <AmiBlitz3_noFPU_r470.ab3@11258>   MOVE.w locchar,D0
000280B2 <AmiBlitz3_noFPU_r470.ab3@11259>   MOVE.w D0,lastchar
000280B4 <AmiBlitz3_noFPU_r470.ab3@11260> RTS
000280B4 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
000280FC <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
0002814E <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
0002818C <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
000281CA <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
000281F4 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00028224 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
0002826E <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
000282F4 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028356 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
0002839E <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
000283F0 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028452 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
000284A0 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
000284D6 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00028504 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
0002851E <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
0002853C <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
000285BA <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
000285E4 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
0002860A <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
0002862A <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028648 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028668 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028690 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
000286BA <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
000286BC <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
000286D8 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
000286FE <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00028716 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00028774 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00028796 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
000287BC <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
000287E4 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
00028804 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00028828 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
0002886E <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028892 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
000288B6 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
000288D6 <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
000288FA <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
0002891C <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028948 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
0002896E <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
00028978 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
0002899E <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
000289F0 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028A5A <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028AB8 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00028B26 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00028B62 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00028B80 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00028BA6 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00028BD6 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
00028BFA <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
00028C28 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
00028C4C <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00028C62 <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
00028C78 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
00028C7E <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00028C86 <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
00028C88 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
00028C8C <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
00028C94 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00028C96 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00028CD0 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
00028CFC <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
00028D2C <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
00028D64 <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
00028DBE <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00028DC0 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00028DC4 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00028DC8 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00028DCC <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00028DD0 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00028DD4 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00028DD8 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
00028DDC <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00028DE0 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00028DE4 <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
00028DE8 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
00028E26 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
00028E58 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00028E76 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00028EA0 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00028EBC <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00028ED6 <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
00028EF4 <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
00028F18 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
00028F1A <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
00028F6C <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00028F94 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00028FBC <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00028FD8 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00028FF8 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00029010 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00029054 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
0002909C <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
000290C6 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
000290F0 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
0002910A <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00029134 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029188 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
000291D4 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
0002920C <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
00029212 <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
00029220 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
00029250 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00029284 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
000292EA <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00029308 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029382 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
000293AA <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
000293C0 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
000293D4 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
000293D6 <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
000293D7 <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
000293D8 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
000293F8 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
000293FE <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
00029410 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029444 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
0002945C <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029478 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029490 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
000294B0 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
000294D0 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
000294F6 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
0002950C <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029528 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029552 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
0002956A <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029586 <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
000295A6 <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
000295BE <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
000295C2 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
000295C8 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
000295CE <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
000295E3 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
000295E9 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
000295EA <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
000295EE <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
000295F4 <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
000295FA <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
0002960D <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029613 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029614 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029632 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
0002964A <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029666 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029690 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
000296AA <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
000296CA <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
000296E8 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
00029716 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
00029720 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029752 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029770 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
0002978E <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
000297AE <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
000297D4 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
000297FA <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
00029822 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029840 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029860 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
0002987A <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
0002989C <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
000298BA <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
000298DC <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
00029900 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
00029906 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
00029922 <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
0002993E <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
0002995C <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
0002997A <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
000299C8 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
000299E6 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
00029A04 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
00029A1E <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029A6A <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029A90 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029AB0 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00029AD2 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
00029AEE <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
00029B14 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029B30 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00029B4E <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
00029B76 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
00029B92 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
00029BA2 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
00029BC4 <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
00029BC8 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
00029BCA <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
00029BE4 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
00029C08 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
00029C28 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
00029C5A <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
00029CB8 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
00029CF0 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
00029D2E <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
00029D64 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
00029D96 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
00029DBA <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
00029DDE <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
00029E28 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
00029E50 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
00029E9A <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
00029EDA <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
00029EDA <AmiBlitz3_noFPU_r470.ab3@11264> XINCLUDE "internal_errormsg.ab3"
00029EDC <AmiBlitz3_noFPU_r470.ab3@11268> ezerr:   Ds.w 1                                            ;for simple errors
00029EE2 <AmiBlitz3_noFPU_r470.ab3@11274>    MOVE.l myline,d0
00029EE6 <AmiBlitz3_noFPU_r470.ab3@11275>   BNE handle_compileerror__l2
00029EEC <AmiBlitz3_noFPU_r470.ab3@11277>     MOVE.l a5,lastsourcepos
00029EEE <AmiBlitz3_noFPU_r470.ab3@11279>     SUBA.l a5,a5
00029EF4 <AmiBlitz3_noFPU_r470.ab3@11281>   TST.l usedfrom
00029EF8 <AmiBlitz3_noFPU_r470.ab3@11282>   BEQ handle_compileerror__org
00029EFE <AmiBlitz3_noFPU_r470.ab3@11283>     MOVEA.l usedfrom,a5
00029F04 <AmiBlitz3_noFPU_r470.ab3@11286>   TST.w dirmode
00029F08 <AmiBlitz3_noFPU_r470.ab3@11287>   BNE.b handle_compileerror__quiet
00029F0E <AmiBlitz3_noFPU_r470.ab3@11288>     JSR call_setpointernormal
00029F12 <AmiBlitz3_noFPU_r470.ab3@11289>     MOVE.w ezerr(PC),D0
00029F16 <AmiBlitz3_noFPU_r470.ab3@11290>     BNE.w handle_compileerror__skip
00029F1C <AmiBlitz3_noFPU_r470.ab3@11291>       MOVE.w cfetchmode,D0
00029F20 <AmiBlitz3_noFPU_r470.ab3@11292>       BEQ.w handle_compileerror__skip2
00029F2A <AmiBlitz3_noFPU_r470.ab3@11293>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
00029F30 <AmiBlitz3_noFPU_r470.ab3@11296>   MOVE.w constmode,D0
00029F34 <AmiBlitz3_noFPU_r470.ab3@11297>   BEQ.b handle_compileerror__skip3
00029F38 <AmiBlitz3_noFPU_r470.ab3@11298>     BSR.w asmerr2
00029F3E <AmiBlitz3_noFPU_r470.ab3@11301>   MOVE.l firstlocal,D1
00029F44 <AmiBlitz3_noFPU_r470.ab3@11302>   OR.l firstglob,D1
00029F48 <AmiBlitz3_noFPU_r470.ab3@11303>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
00029F4E <AmiBlitz3_noFPU_r470.ab3@11304> 
00029F52 <AmiBlitz3_noFPU_r470.ab3@11305>     BNE handle_compileerror__notproc                       ; yes skip
00029F58 <AmiBlitz3_noFPU_r470.ab3@11306>       JSR JL_0_DB5C                                        ; no free some data ????
00029F60 <AmiBlitz3_noFPU_r470.ab3@11309>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
00029F6A <AmiBlitz3_noFPU_r470.ab3@11310>   CMP.l #"NORE",reqmode                                    ;for used functions
00029F6E <AmiBlitz3_noFPU_r470.ab3@11311>   BEQ handle_compileerror__notproc_l1
00029F78 <AmiBlitz3_noFPU_r470.ab3@11312>     MOVE.l linenumat,compilelinecounter
00029F7E <AmiBlitz3_noFPU_r470.ab3@11315>   JSR close_compilewin
00029F80 <AmiBlitz3_noFPU_r470.ab3@11318>   MOVEA.l (A7)+,A0
00029F86 <AmiBlitz3_noFPU_r470.ab3@11319>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
00029F8C <AmiBlitz3_noFPU_r470.ab3@11320>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
00029F90 <AmiBlitz3_noFPU_r470.ab3@11321>   BLT 'lesserror
00029F96 <AmiBlitz3_noFPU_r470.ab3@11322>   LEA errorlimit_text,a0
00029F9C <AmiBlitz3_noFPU_r470.ab3@11325>   ADDQ.l #1,errorcounter
00029FA2 <AmiBlitz3_noFPU_r470.ab3@11326>   JSR errorstringparse
00029FAC <AmiBlitz3_noFPU_r470.ab3@11327>   CMP.l #"NORE",reqmode                                    ;for used functions
00029FB0 <AmiBlitz3_noFPU_r470.ab3@11328>   BEQ handle_compileerror__skip_Lxx2
00029FB6 <AmiBlitz3_noFPU_r470.ab3@11329>   TST.l CLIMode
00029FBA <AmiBlitz3_noFPU_r470.ab3@11330>   BNE 'climode_output
00029FC0 <AmiBlitz3_noFPU_r470.ab3@11333>     JSR save_errorfile
00029FC4 <AmiBlitz3_noFPU_r470.ab3@11334>     BRA 'end_output
00029FCA <AmiBlitz3_noFPU_r470.ab3@11337>     JSR stdout_error
00029FD0 <AmiBlitz3_noFPU_r470.ab3@11339>      MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
00029FD6 <AmiBlitz3_noFPU_r470.ab3@11340>      CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
00029FDA <AmiBlitz3_noFPU_r470.ab3@11341>      BGT 'end_output
00029FE0 <AmiBlitz3_noFPU_r470.ab3@11342>     MOVE.l lastsourcepos,a5
00029FE2 <AmiBlitz3_noFPU_r470.ab3@11344>  'loop TST.b (a5)
00029FE6 <AmiBlitz3_noFPU_r470.ab3@11345>       BEQ 'ok2
00029FE8 <AmiBlitz3_noFPU_r470.ab3@11346>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
00029FEC <AmiBlitz3_noFPU_r470.ab3@11347>     BEQ 'ok
00029FF0 <AmiBlitz3_noFPU_r470.ab3@11348>     CMP.b #":",d0
00029FF4 <AmiBlitz3_noFPU_r470.ab3@11349>     BEQ 'ok
00029FF8 <AmiBlitz3_noFPU_r470.ab3@11350>     BRA 'loop
00029FFA <AmiBlitz3_noFPU_r470.ab3@11352>  'ok SUBQ.l #1,a5
0002A002 <AmiBlitz3_noFPU_r470.ab3@11354>  'ok2 MOVE.w #0,lastchar
0002A00A <AmiBlitz3_noFPU_r470.ab3@11355>     MOVE.b #1,iserror
0002A010 <AmiBlitz3_noFPU_r470.ab3@11356>     MOVE.l stackaddr,a7
0002A012 <AmiBlitz3_noFPU_r470.ab3@11357>     RTS
0002A014 <AmiBlitz3_noFPU_r470.ab3@11363>   MOVE.l A0,-(a7)
0002A052 <AmiBlitz3_noFPU_r470.ab3@11364>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A054 <AmiBlitz3_noFPU_r470.ab3@11365>   MOVE.l (a7)+,A0
0002A058 <AmiBlitz3_noFPU_r470.ab3@11367>   MOVEM.l d6/D7/A6,-(A7)
0002A05E <AmiBlitz3_noFPU_r470.ab3@11368>   MOVE.l includeline,d7
0002A064 <AmiBlitz3_noFPU_r470.ab3@11369>   MOVE.l #"INLN",a6
0002A06E <AmiBlitz3_noFPU_r470.ab3@11370>   MOVE.l errstack,tempa7
0002A070 <AmiBlitz3_noFPU_r470.ab3@11371>   JSR (A1)                                                  ;open ped errorrequest
0002A074 <AmiBlitz3_noFPU_r470.ab3@11373>   MOVEM.l (A7)+,D7/d6/A6
0002A07A <AmiBlitz3_noFPU_r470.ab3@11376>   MOVE.l tempa7,a7
0002A080 <AmiBlitz3_noFPU_r470.ab3@11377>   MOVEA.l errcont,A0
0002A082 <AmiBlitz3_noFPU_r470.ab3@11379> RTS
0002A088 <AmiBlitz3_noFPU_r470.ab3@11382>   MOVEA.l errstack,A7
0002A08E <AmiBlitz3_noFPU_r470.ab3@11383>   MOVEA.l errcont,A0
0002A090 <AmiBlitz3_noFPU_r470.ab3@11385> RTS
0002A092 <AmiBlitz3_noFPU_r470.ab3@11388>   MOVE.l (A7),D0
0002A098 <AmiBlitz3_noFPU_r470.ab3@11389>   MOVEA.l errstack,A7
0002A09E <AmiBlitz3_noFPU_r470.ab3@11390>   MOVEA.l errcont,A0
0002A0A0 <AmiBlitz3_noFPU_r470.ab3@11391> JMP (A0)
0002A0A4 <AmiBlitz3_noFPU_r470.ab3@11397>   CMP.w #$7A,D0                                            ;'z'
0002A0A8 <AmiBlitz3_noFPU_r470.ab3@11398>    BHI.w tstalpha__no
0002A0AC <AmiBlitz3_noFPU_r470.ab3@11399>   CMP.w #$41,D0                                            ;'A'
0002A0B0 <AmiBlitz3_noFPU_r470.ab3@11400>    BCS.w tstalpha__no
0002A0B4 <AmiBlitz3_noFPU_r470.ab3@11401>   CMP.w #$61,D0                                            ;'a'
0002A0B8 <AmiBlitz3_noFPU_r470.ab3@11402>    BCC.w tstalpha__yes
0002A0BC <AmiBlitz3_noFPU_r470.ab3@11403>   CMP.w #$5A,D0                                            ;'Z'
0002A0C0 <AmiBlitz3_noFPU_r470.ab3@11404>    BHI.w tstalpha__no
0002A0C2 <AmiBlitz3_noFPU_r470.ab3@11407>   CMP.w D0,D0
0002A0C4 <AmiBlitz3_noFPU_r470.ab3@11410> RTS
0002A0C8 <AmiBlitz3_noFPU_r470.ab3@11418>   CMP.w #$30,D0                                            ;'0'
0002A0CC <AmiBlitz3_noFPU_r470.ab3@11419>    BCS.w tstnum__skip
0002A0D0 <AmiBlitz3_noFPU_r470.ab3@11420>   CMP.w #$39,D0                                            ;'9'
0002A0D4 <AmiBlitz3_noFPU_r470.ab3@11421>    BHI.w tstnum__skip                                     
0002A0D6 <AmiBlitz3_noFPU_r470.ab3@11422>   CMP.w D0,D0
0002A0D8 <AmiBlitz3_noFPU_r470.ab3@11425> RTS
0002A0FA <AmiBlitz3_noFPU_r470.ab3@11431>   !compare1                                                ;bsr.w tstalpha
0002A0FE <AmiBlitz3_noFPU_r470.ab3@11432>    BEQ.w tstlab__skip
0002A110 <AmiBlitz3_noFPU_r470.ab3@11433>   !compare2                                                ;bsr.w tstnum2
0002A114 <AmiBlitz3_noFPU_r470.ab3@11434>    BEQ.w tstlab__skip
0002A118 <AmiBlitz3_noFPU_r470.ab3@11435>   CMP.w #$5F,D0                                            ;'_'
0002A11C <AmiBlitz3_noFPU_r470.ab3@11436>    BEQ.w tstlab__skip
0002A120 <AmiBlitz3_noFPU_r470.ab3@11437>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A122 <AmiBlitz3_noFPU_r470.ab3@11440> RTS
0002A12C <AmiBlitz3_noFPU_r470.ab3@11445>   MOVE.w oldqflag,instringon
0002A132 <AmiBlitz3_noFPU_r470.ab3@11446>   MOVEA.l lastsourcepos,A5
0002A138 <AmiBlitz3_noFPU_r470.ab3@11449>   MOVE.l a5,beforeparameterfetch
0002A13E <AmiBlitz3_noFPU_r470.ab3@11450>   LEA ptr_parameterstore,A1
0002A140 <AmiBlitz3_noFPU_r470.ab3@11453>   MOVEQ.l #$00,D2
0002A146 <AmiBlitz3_noFPU_r470.ab3@11456>   LEA chartab,a0
0002A148 <AmiBlitz3_noFPU_r470.ab3@11457>   MOVEQ #0,d0
0002A14E <AmiBlitz3_noFPU_r470.ab3@11458>   MOVE.l A5,lastsourcepos
0002A158 <AmiBlitz3_noFPU_r470.ab3@11459>   MOVE.w instringon,oldqflag
0002A15A <AmiBlitz3_noFPU_r470.ab3@11462>     MOVE.b (a5)+,d0
0002A15E <AmiBlitz3_noFPU_r470.ab3@11463>   CMP.b #$20,d0                                            ;space deftype
0002A162 <AmiBlitz3_noFPU_r470.ab3@11464>   BEQ makename4__retry
0002A168 <AmiBlitz3_noFPU_r470.ab3@11466>   MOVE.w d0,lastchar
0002A16C <AmiBlitz3_noFPU_r470.ab3@11467>   TST.b 0(a0,d0.w)
0002A170 <AmiBlitz3_noFPU_r470.ab3@11468>   BNE makename__done
0002A172 <AmiBlitz3_noFPU_r470.ab3@11477>   MOVE.b D0,(A1)+
0002A174 <AmiBlitz3_noFPU_r470.ab3@11478>   ADDQ.l #1,D2
0002A17A <AmiBlitz3_noFPU_r470.ab3@11479>   MOVE.l A5,lastsourcepos
0002A17C <AmiBlitz3_noFPU_r470.ab3@11482>   MOVE.b (a5)+,d0
0002A182 <AmiBlitz3_noFPU_r470.ab3@11483>   MOVE.b d0,lastchar+1
0002A186 <AmiBlitz3_noFPU_r470.ab3@11484>   CMP.b #$20,d0
0002A18A <AmiBlitz3_noFPU_r470.ab3@11485>   BEQ makename__loop_l20
0002A18E <AmiBlitz3_noFPU_r470.ab3@11487>   TST.b 0(a0,d0)
0002A192 <AmiBlitz3_noFPU_r470.ab3@11488>   BEQ makename__loop
0002A196 <AmiBlitz3_noFPU_r470.ab3@11489>   CMP.b #2,d0
0002A19A <AmiBlitz3_noFPU_r470.ab3@11490>   BNE makename__loop_lf1
0002A1A0 <AmiBlitz3_noFPU_r470.ab3@11491>   MOVEA.l usedfrom,A5
0002A1A6 <AmiBlitz3_noFPU_r470.ab3@11492>   CLR.l usedfrom
0002A1AA <AmiBlitz3_noFPU_r470.ab3@11493> BRA makename__loop_ln1
0002A1AE <AmiBlitz3_noFPU_r470.ab3@11496>   CMP.b #1,d0
0002A1B2 <AmiBlitz3_noFPU_r470.ab3@11497>   BNE makename__loop_l20
0002A1B6 <AmiBlitz3_noFPU_r470.ab3@11498>   MOVEA.l cmakea5(PC),A5
0002A1BA <AmiBlitz3_noFPU_r470.ab3@11499> BRA makename__loop_ln1
0002A1BE <AmiBlitz3_noFPU_r470.ab3@11502>   CMP.b #$7e,d0
0002A1C2 <AmiBlitz3_noFPU_r470.ab3@11503>             BNE makename__loop_lt
0002A1C8 <AmiBlitz3_noFPU_r470.ab3@11504>             TST.w cmake
0002A1CC <AmiBlitz3_noFPU_r470.ab3@11505>             BNE.w makename__loop_a1
0002A1CE <AmiBlitz3_noFPU_r470.ab3@11506>             SUBQ.l #1,a5
0002A1D2 <AmiBlitz3_noFPU_r470.ab3@11507>             BSR.w get1bytemain
0002A1D6 <AmiBlitz3_noFPU_r470.ab3@11508> BRA makename__loop
0002A1DA <AmiBlitz3_noFPU_r470.ab3@11512> BRA makename__loop_gpex
0002A1DE <AmiBlitz3_noFPU_r470.ab3@11516>   BSR.w getchar
0002A200 <AmiBlitz3_noFPU_r470.ab3@11517>    !compare1                                               ;bsr.w tstalpha
0002A204 <AmiBlitz3_noFPU_r470.ab3@11518>    BEQ.w makename__loop_getp1
0002A216 <AmiBlitz3_noFPU_r470.ab3@11519>    !compare2                                               ;bsr.w tstnum
0002A21A <AmiBlitz3_noFPU_r470.ab3@11520>    BEQ.w makename__loop_getp1
0002A21E <AmiBlitz3_noFPU_r470.ab3@11521>   CMP.w #$5F,D0                                            ;'_'
0002A222 <AmiBlitz3_noFPU_r470.ab3@11522>    BEQ.w makename__loop_getp1
0002A226 <AmiBlitz3_noFPU_r470.ab3@11523>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A22A <AmiBlitz3_noFPU_r470.ab3@11527>       BNE makename__loop_gpex
0002A22E <AmiBlitz3_noFPU_r470.ab3@11528>       CMP.b #$20,d0
0002A232 <AmiBlitz3_noFPU_r470.ab3@11529>       BNE.w makename__loop
0002A234 <AmiBlitz3_noFPU_r470.ab3@11532>      TST.b d0
0002A238 <AmiBlitz3_noFPU_r470.ab3@11533>      BPL makename__loop_l10
0002A23A <AmiBlitz3_noFPU_r470.ab3@11534>      SUBQ.l #1,a5
0002A23E <AmiBlitz3_noFPU_r470.ab3@11535>      BSR get1byte_
0002A242 <AmiBlitz3_noFPU_r470.ab3@11538>    CMP.w #$20,D0
0002A246 <AmiBlitz3_noFPU_r470.ab3@11539>    BNE.w makename__done
0002A248 <AmiBlitz3_noFPU_r470.ab3@11540>    MOVEQ #0,d0
0002A24E <AmiBlitz3_noFPU_r470.ab3@11541>   MOVE.l a5,lastsourcepos
0002A250 <AmiBlitz3_noFPU_r470.ab3@11544>   MOVE.b (a5)+,d0                                          ;neuneu
0002A254 <AmiBlitz3_noFPU_r470.ab3@11545>   BPL makename__loop_l101:
0002A256 <AmiBlitz3_noFPU_r470.ab3@11546>   ASL.w #8,d0
0002A258 <AmiBlitz3_noFPU_r470.ab3@11547>   MOVE.b (a5)+,d0
0002A25E <AmiBlitz3_noFPU_r470.ab3@11550>   TST.w instringon
0002A262 <AmiBlitz3_noFPU_r470.ab3@11551>   BNE makename__loop_l102
0002A266 <AmiBlitz3_noFPU_r470.ab3@11552>   CMP.b #$20,d0
0002A26A <AmiBlitz3_noFPU_r470.ab3@11553>   BEQ makename__loop_l103
0002A26E <AmiBlitz3_noFPU_r470.ab3@11554>   CMP.b #";",d0
0002A272 <AmiBlitz3_noFPU_r470.ab3@11555>   BNE makename__loop_l102
0002A274 <AmiBlitz3_noFPU_r470.ab3@11558>   MOVE.b (A5)+,D0
0002A278 <AmiBlitz3_noFPU_r470.ab3@11559>              BEQ makename__loop_l1
0002A27C <AmiBlitz3_noFPU_r470.ab3@11560>              CMP.b #":",d0
0002A280 <AmiBlitz3_noFPU_r470.ab3@11561>              BNE makename__loop_lr                         ;:@
0002A284 <AmiBlitz3_noFPU_r470.ab3@11562>              CMP.b #"@",(a5)
0002A288 <AmiBlitz3_noFPU_r470.ab3@11563>              BNE makename__loop_lr
0002A28A <AmiBlitz3_noFPU_r470.ab3@11564>              ADDQ #1,a5
0002A290 <AmiBlitz3_noFPU_r470.ab3@11568>   MOVE.w d0,lastchar
0002A294 <AmiBlitz3_noFPU_r470.ab3@11572>   CMP.b #";",d0
0002A298 <AmiBlitz3_noFPU_r470.ab3@11573>   BEQ makename__done_l11
0002A29A <AmiBlitz3_noFPU_r470.ab3@11574>   CLR.b (A1)
0002A29C <AmiBlitz3_noFPU_r470.ab3@11576>   TST.w D2
0002A29E <AmiBlitz3_noFPU_r470.ab3@11577> RTS
0002A2A0 <AmiBlitz3_noFPU_r470.ab3@11580>   CLR.b (a1)
0002A2A2 <AmiBlitz3_noFPU_r470.ab3@11581>   MOVEQ #0,d0
0002A2A8 <AmiBlitz3_noFPU_r470.ab3@11582>   MOVE.w d0,lastchar
0002A2AA <AmiBlitz3_noFPU_r470.ab3@11584>   TST.w D2
0002A2AC <AmiBlitz3_noFPU_r470.ab3@11585> RTS
0002A2AE <AmiBlitz3_noFPU_r470.ab3@11591>   MOVE.l (A2),D0
0002A2B2 <AmiBlitz3_noFPU_r470.ab3@11594>   BEQ.w findlast__here
0002A2B4 <AmiBlitz3_noFPU_r470.ab3@11595>   MOVEA.l D0,A2
0002A2B8 <AmiBlitz3_noFPU_r470.ab3@11596> BRA.w findlast__loop
0002A2BC <AmiBlitz3_noFPU_r470.ab3@11599> BRA.w reget
0002A2BE <AmiBlitz3_noFPU_r470.ab3@11605>   MOVE.l (A2),-(A7)
0002A2C2 <AmiBlitz3_noFPU_r470.ab3@11606>   BSR.w addlabel
0002A2C4 <AmiBlitz3_noFPU_r470.ab3@11607>   MOVE.l (A7)+,(A2)
0002A2C6 <AmiBlitz3_noFPU_r470.ab3@11608> RTS
0002A2CC <AmiBlitz3_noFPU_r470.ab3@11613>   CLR.l fp0addr
0002A2D2 <AmiBlitz3_noFPU_r470.ab3@11614>   TST.w dirmode
0002A2D6 <AmiBlitz3_noFPU_r470.ab3@11615>    BNE.w illdirerr
0002A2D8 <AmiBlitz3_noFPU_r470.ab3@11616>   MOVEQ.l #$00,D0
0002A2DA <AmiBlitz3_noFPU_r470.ab3@11617>   MOVE.w D7,D0
0002A2DC <AmiBlitz3_noFPU_r470.ab3@11618>   ADD.w D2,D0
0002A2DE <AmiBlitz3_noFPU_r470.ab3@11619>   ADDQ.w #1,D0
0002A2E0 <AmiBlitz3_noFPU_r470.ab3@11620>   MOVE.w D0,D2
0002A2E2 <AmiBlitz3_noFPU_r470.ab3@11621>   ADDQ.l #2,d0
0002A2E4 <AmiBlitz3_noFPU_r470.ab3@11622>   MOVEQ.l #$01,D1
0002A2EA <AmiBlitz3_noFPU_r470.ab3@11623>   MOVEA.l _execbase,A6
0002A2F0 <AmiBlitz3_noFPU_r470.ab3@11624>   MOVE.l mempool2,a0
0002A2F4 <AmiBlitz3_noFPU_r470.ab3@11625>   JSR _AllocPooled(a6)
0002A2FA <AmiBlitz3_noFPU_r470.ab3@11627>   MOVE.l lastlabel,a2
0002A2FC <AmiBlitz3_noFPU_r470.ab3@11628>   MOVE.l D0,(A2)
0002A2FE <AmiBlitz3_noFPU_r470.ab3@11629>   MOVE.l d0,a0
0002A300 <AmiBlitz3_noFPU_r470.ab3@11630>   CLR.l (a0)
0002A306 <AmiBlitz3_noFPU_r470.ab3@11631>   MOVE.l a0,lastlabel
0002A308 <AmiBlitz3_noFPU_r470.ab3@11632>   MOVE.l d0,A2
0002A30C <AmiBlitz3_noFPU_r470.ab3@11633>   LEA -$1(A0,D7.W),A0
0002A30E <AmiBlitz3_noFPU_r470.ab3@11634>   MOVE.b D2,(A0)+
0002A314 <AmiBlitz3_noFPU_r470.ab3@11635>   LEA ptr_parameterstore,A1
0002A316 <AmiBlitz3_noFPU_r470.ab3@11636>   MOVEQ #0,d0
0002A318 <AmiBlitz3_noFPU_r470.ab3@11637>   MOVEQ #0,d1
0002A31A <AmiBlitz3_noFPU_r470.ab3@11640>   MOVE.b (A1)+,d1
0002A31E <AmiBlitz3_noFPU_r470.ab3@11641>    BEQ 'l1
0002A324 <AmiBlitz3_noFPU_r470.ab3@11642>    !hashalgo
0002A326 <AmiBlitz3_noFPU_r470.ab3@11643>    MOVE.b d1,(A0)+
0002A32A <AmiBlitz3_noFPU_r470.ab3@11644> BRA addlabel_loop2a
0002A32C <AmiBlitz3_noFPU_r470.ab3@11647>    CLR.b (a0)+
0002A332 <AmiBlitz3_noFPU_r470.ab3@11648>    LEA labelhash,a0
0002A338 <AmiBlitz3_noFPU_r470.ab3@11649>    AND.l #hashsize,d0
0002A33A <AmiBlitz3_noFPU_r470.ab3@11650>    ASL.l #2,d0
0002A33E <AmiBlitz3_noFPU_r470.ab3@11651>    MOVE.l 0(a0,d0),d1
0002A342 <AmiBlitz3_noFPU_r470.ab3@11652>    MOVE.l d1,$c(a2)
0002A346 <AmiBlitz3_noFPU_r470.ab3@11653>    MOVE.l a2,0(a0,d0)
0002A348 <AmiBlitz3_noFPU_r470.ab3@11654>    MOVEQ #0,d0
0002A34C <AmiBlitz3_noFPU_r470.ab3@11655> BRA.w reget
0002A352 <AmiBlitz3_noFPU_r470.ab3@11659>    TST.b newvariable
0002A356 <AmiBlitz3_noFPU_r470.ab3@11660>    BNE addlabel
0002A35C <AmiBlitz3_noFPU_r470.ab3@11663>   TST.w dirmode
0002A360 <AmiBlitz3_noFPU_r470.ab3@11664>    BNE.w illdirerr
0002A362 <AmiBlitz3_noFPU_r470.ab3@11665>   MOVEQ.l #$00,D0
0002A364 <AmiBlitz3_noFPU_r470.ab3@11666>   MOVE.w D7,D0
0002A366 <AmiBlitz3_noFPU_r470.ab3@11667>   ADD.w D2,D0
0002A368 <AmiBlitz3_noFPU_r470.ab3@11668>   ADDQ.w #1,D0
0002A36A <AmiBlitz3_noFPU_r470.ab3@11669>   MOVE.w D0,D2
0002A36C <AmiBlitz3_noFPU_r470.ab3@11670>   MOVEQ.l #$01,D1
0002A372 <AmiBlitz3_noFPU_r470.ab3@11671>   MOVEA.l _execbase,A6
0002A378 <AmiBlitz3_noFPU_r470.ab3@11672>   MOVE.l mempool2,a0
0002A37C <AmiBlitz3_noFPU_r470.ab3@11673>   JSR _AllocPooled(a6)
0002A37E <AmiBlitz3_noFPU_r470.ab3@11674>   MOVEA.l D0,A0
0002A384 <AmiBlitz3_noFPU_r470.ab3@11676>   LEA varbase,a2
0002A386 <AmiBlitz3_noFPU_r470.ab3@11677>   MOVE.l (a2),(a0)
0002A388 <AmiBlitz3_noFPU_r470.ab3@11678>   MOVE.l A0,(A2)
0002A38A <AmiBlitz3_noFPU_r470.ab3@11679>   MOVEA.l A0,A2
0002A38E <AmiBlitz3_noFPU_r470.ab3@11680>   LEA -$1(A0,D7.W),A0
0002A390 <AmiBlitz3_noFPU_r470.ab3@11681>   MOVE.b D2,(A0)+
0002A396 <AmiBlitz3_noFPU_r470.ab3@11682>   LEA ptr_parameterstore,A1
0002A398 <AmiBlitz3_noFPU_r470.ab3@11683>   MOVEQ #0,d0
0002A39A <AmiBlitz3_noFPU_r470.ab3@11684>   MOVEQ #0,d1
0002A39C <AmiBlitz3_noFPU_r470.ab3@11687>   MOVE.b (A1)+,d1
0002A3A0 <AmiBlitz3_noFPU_r470.ab3@11688>    BEQ 'l12
0002A3A6 <AmiBlitz3_noFPU_r470.ab3@11689>    !hashalgo
0002A3A8 <AmiBlitz3_noFPU_r470.ab3@11690>    MOVE.b d1,(A0)+
0002A3AC <AmiBlitz3_noFPU_r470.ab3@11691> BRA 'l11
0002A3AE <AmiBlitz3_noFPU_r470.ab3@11694>   CLR.b (a0)+
0002A3B4 <AmiBlitz3_noFPU_r470.ab3@11695>   LEA variablehash,a0
0002A3BA <AmiBlitz3_noFPU_r470.ab3@11696>    AND.l #hashsize,d0
0002A3BC <AmiBlitz3_noFPU_r470.ab3@11697>    ASL.l #2,d0
0002A3C0 <AmiBlitz3_noFPU_r470.ab3@11698>    MOVE.l 0(a0,d0),d1
0002A3C4 <AmiBlitz3_noFPU_r470.ab3@11699>    MOVE.l d1,$e(a2)
0002A3C8 <AmiBlitz3_noFPU_r470.ab3@11700>    MOVE.l a2,0(a0,d0)
0002A3CA <AmiBlitz3_noFPU_r470.ab3@11701>    MOVEQ #0,d0
0002A3CE <AmiBlitz3_noFPU_r470.ab3@11702> BRA.w reget
0002A3D4 <AmiBlitz3_noFPU_r470.ab3@11706>   TST.w dirmode
0002A3D8 <AmiBlitz3_noFPU_r470.ab3@11707>    BNE.w illdirerr
0002A3DA <AmiBlitz3_noFPU_r470.ab3@11714>   MOVEQ.l #$00,D0
0002A3DC <AmiBlitz3_noFPU_r470.ab3@11715>   MOVE.w D7,D0
0002A3DE <AmiBlitz3_noFPU_r470.ab3@11716>   ADD.w D2,D0
0002A3E0 <AmiBlitz3_noFPU_r470.ab3@11717>   ADDQ.w #1,D0
0002A3E2 <AmiBlitz3_noFPU_r470.ab3@11718>   MOVE.w D0,D2
0002A3E4 <AmiBlitz3_noFPU_r470.ab3@11719>   MOVEQ.l #$01,D1
0002A3EA <AmiBlitz3_noFPU_r470.ab3@11720>   MOVEA.l _execbase,A6
0002A3F0 <AmiBlitz3_noFPU_r470.ab3@11721>   MOVE.l mempool2,a0
0002A3F4 <AmiBlitz3_noFPU_r470.ab3@11722>   JSR _AllocPooled(a6)
0002A3F6 <AmiBlitz3_noFPU_r470.ab3@11724>   MOVEA.l D0,A0
0002A3F8 <AmiBlitz3_noFPU_r470.ab3@11725>   MOVE.l A0,(A2)
0002A3FA <AmiBlitz3_noFPU_r470.ab3@11726>   CLR.l (a0)
0002A3FE <AmiBlitz3_noFPU_r470.ab3@11727>   CLR.l 8(a0)                                              ;clear next
0002A400 <AmiBlitz3_noFPU_r470.ab3@11728>   MOVEA.l A0,A2
0002A404 <AmiBlitz3_noFPU_r470.ab3@11729>   LEA -$1(A0,D7.W),A0
0002A406 <AmiBlitz3_noFPU_r470.ab3@11730>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A40C <AmiBlitz3_noFPU_r470.ab3@11731>   LEA ptr_parameterstore,A1
0002A40E <AmiBlitz3_noFPU_r470.ab3@11732>   MOVEQ #0,d0
0002A410 <AmiBlitz3_noFPU_r470.ab3@11733>   MOVEQ #0,d1
0002A412 <AmiBlitz3_noFPU_r470.ab3@11736>   MOVE.b (A1)+,d1
0002A414 <AmiBlitz3_noFPU_r470.ab3@11739>   MOVE.b d1,(A0)+
0002A418 <AmiBlitz3_noFPU_r470.ab3@11740>   BNE.w addlabel_loop2
0002A41C <AmiBlitz3_noFPU_r470.ab3@11741> BRA.w reget
0002A41E <AmiBlitz3_noFPU_r470.ab3@11745>   MOVEQ.l #$13,D7
0002A424 <AmiBlitz3_noFPU_r470.ab3@11746>   LEA constantbase,A2
0002A428 <AmiBlitz3_noFPU_r470.ab3@11747> BRA.w findlab
0002A42A <AmiBlitz3_noFPU_r470.ab3@11751>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A430 <AmiBlitz3_noFPU_r470.ab3@11752>   LEA xinclude_base,A2
0002A434 <AmiBlitz3_noFPU_r470.ab3@11753> BRA.w findlab
0002A436 <AmiBlitz3_noFPU_r470.ab3@11757>   MOVEQ.l #$09,D7
0002A43C <AmiBlitz3_noFPU_r470.ab3@11758>   LEA firstconst,A2
0002A440 <AmiBlitz3_noFPU_r470.ab3@11759> BRA.w findlab
0002A442 <AmiBlitz3_noFPU_r470.ab3@11763>   MOVEQ.l #$0d,D7                                          ;find macro
0002A448 <AmiBlitz3_noFPU_r470.ab3@11764>   LEA macrobase,A2
0002A44C <AmiBlitz3_noFPU_r470.ab3@11765> BRA.w findlab
0002A452 <AmiBlitz3_noFPU_r470.ab3@11769>   LEA labelhash,A2
0002A454 <AmiBlitz3_noFPU_r470.ab3@11770>   MOVEQ.l #$13,D7
0002A456 <AmiBlitz3_noFPU_r470.ab3@11771>   EXT.l d2
0002A45C <AmiBlitz3_noFPU_r470.ab3@11772>   LEA ptr_parameterstore,A0
0002A45E <AmiBlitz3_noFPU_r470.ab3@11773>   MOVEQ #0,d0
0002A460 <AmiBlitz3_noFPU_r470.ab3@11774>   MOVEQ #0,d1
0002A462 <AmiBlitz3_noFPU_r470.ab3@11777>     MOVE.b (a0)+,d1
0002A466 <AmiBlitz3_noFPU_r470.ab3@11778>     BEQ 'l15
0002A46C <AmiBlitz3_noFPU_r470.ab3@11779>     !hashalgo
0002A470 <AmiBlitz3_noFPU_r470.ab3@11780> BRA 'l20
0002A476 <AmiBlitz3_noFPU_r470.ab3@11783>   AND.l #hashsize,d0
0002A478 <AmiBlitz3_noFPU_r470.ab3@11784>   ASL.l #2,d0
0002A47C <AmiBlitz3_noFPU_r470.ab3@11785>   MOVE.l 0(a2,d0),d0
0002A480 <AmiBlitz3_noFPU_r470.ab3@11786> BRA 'l11
0002A484 <AmiBlitz3_noFPU_r470.ab3@11789>   MOVE.l $c(A2),D0                                         ;find label
0002A488 <AmiBlitz3_noFPU_r470.ab3@11792>   BEQ findlab__no
0002A48A <AmiBlitz3_noFPU_r470.ab3@11793>   MOVEA.l D0,A2
0002A48C <AmiBlitz3_noFPU_r470.ab3@11794>   MOVEQ.l #$00,D0
0002A490 <AmiBlitz3_noFPU_r470.ab3@11795>   MOVE.b -$1(A2,D7.l),D0
0002A496 <AmiBlitz3_noFPU_r470.ab3@11796>   LEA ptr_parameterstore,A0
0002A498 <AmiBlitz3_noFPU_r470.ab3@11797>   SUB.l D7,D0
0002A49A <AmiBlitz3_noFPU_r470.ab3@11798>   SUBQ.l #1,D0
0002A49C <AmiBlitz3_noFPU_r470.ab3@11799>   CMP.l D0,D2
0002A4A0 <AmiBlitz3_noFPU_r470.ab3@11800>    BNE.b 'l10
0002A4A4 <AmiBlitz3_noFPU_r470.ab3@11801>   LEA $0(A2,D7.W),A1
0002A4A6 <AmiBlitz3_noFPU_r470.ab3@11802>   SUBQ.l #1,D0
0002A4A8 <AmiBlitz3_noFPU_r470.ab3@11805>     MOVE.b (a1)+,d1
0002A4AA <AmiBlitz3_noFPU_r470.ab3@11806>     CMP.b (a0)+,d1
0002A4AE <AmiBlitz3_noFPU_r470.ab3@11808>     BNE.b 'l10
0002A4B2 <AmiBlitz3_noFPU_r470.ab3@11809>   DBF D0,'l201
0002A4B6 <AmiBlitz3_noFPU_r470.ab3@11811>   BSR.w reget
0002A4B8 <AmiBlitz3_noFPU_r470.ab3@11812>   CMP.w D0,D0
0002A4BA <AmiBlitz3_noFPU_r470.ab3@11813> RTS
0002A4BC <AmiBlitz3_noFPU_r470.ab3@11817>   MOVEQ.l #$0B,D7
0002A4C0 <AmiBlitz3_noFPU_r470.ab3@11818> BRA.w findlab
0002A4C6 <AmiBlitz3_noFPU_r470.ab3@11822>   LEA firstproc,A2
0002A4CC <AmiBlitz3_noFPU_r470.ab3@11823>   MOVE.l #$21+#funcentry_extend,D7
0002A4D0 <AmiBlitz3_noFPU_r470.ab3@11824> BRA findlab
0002A4D6 <AmiBlitz3_noFPU_r470.ab3@11828>   LEA firstfor,A2
0002A4D8 <AmiBlitz3_noFPU_r470.ab3@11829>   MOVEQ.l #$11,D7
0002A4DC <AmiBlitz3_noFPU_r470.ab3@11830> BRA.w findlab
0002A4DE <AmiBlitz3_noFPU_r470.ab3@11834>   MOVEQ.l #$0F,D7
0002A4E2 <AmiBlitz3_noFPU_r470.ab3@11835> BRA.w findlab
0002A4E4 <AmiBlitz3_noFPU_r470.ab3@11839>   MOVEQ.l #$0F+4,D7
0002A4EA <AmiBlitz3_noFPU_r470.ab3@11840>   TST.b newvariable
0002A4EE <AmiBlitz3_noFPU_r470.ab3@11841>    BNE.w findlab
0002A4F4 <AmiBlitz3_noFPU_r470.ab3@11842>   LEA variablehash,A2
0002A4FA <AmiBlitz3_noFPU_r470.ab3@11843>   LEA ptr_parameterstore,A0
0002A4FC <AmiBlitz3_noFPU_r470.ab3@11844>   MOVEQ #0,d0
0002A4FE <AmiBlitz3_noFPU_r470.ab3@11845>   MOVEQ #0,d1
0002A500 <AmiBlitz3_noFPU_r470.ab3@11848>     MOVE.b (a0)+,d1
0002A504 <AmiBlitz3_noFPU_r470.ab3@11849>     BEQ 'l15
0002A50A <AmiBlitz3_noFPU_r470.ab3@11850>     !hashalgo
0002A50E <AmiBlitz3_noFPU_r470.ab3@11851> BRA 'l20
0002A514 <AmiBlitz3_noFPU_r470.ab3@11854>   AND.l #hashsize,d0
0002A516 <AmiBlitz3_noFPU_r470.ab3@11855>   ASL.l #2,d0
0002A51A <AmiBlitz3_noFPU_r470.ab3@11856>   MOVE.l 0(a2,d0),d0
0002A51E <AmiBlitz3_noFPU_r470.ab3@11857> BRA 'l11
0002A522 <AmiBlitz3_noFPU_r470.ab3@11860>   MOVE.l $e(A2),D0                                         ;find label
0002A526 <AmiBlitz3_noFPU_r470.ab3@11863>   BEQ findlab__no
0002A528 <AmiBlitz3_noFPU_r470.ab3@11864>   MOVEA.l D0,A2
0002A52A <AmiBlitz3_noFPU_r470.ab3@11865>   MOVEQ.l #$00,D0
0002A52E <AmiBlitz3_noFPU_r470.ab3@11866>   MOVE.b -$1(A2,D7.W),D0
0002A534 <AmiBlitz3_noFPU_r470.ab3@11867>   LEA ptr_parameterstore,A0
0002A536 <AmiBlitz3_noFPU_r470.ab3@11868>   SUB.w D7,D0
0002A538 <AmiBlitz3_noFPU_r470.ab3@11869>   SUBQ.l #1,D0
0002A53A <AmiBlitz3_noFPU_r470.ab3@11870>   CMP.w D0,D2
0002A53E <AmiBlitz3_noFPU_r470.ab3@11871>    BNE.b 'l10
0002A542 <AmiBlitz3_noFPU_r470.ab3@11872>   LEA $0(A2,D7.W),A1
0002A544 <AmiBlitz3_noFPU_r470.ab3@11873>   SUBQ.l #1,D0
0002A546 <AmiBlitz3_noFPU_r470.ab3@11876>     MOVE.b (a1)+,d1
0002A548 <AmiBlitz3_noFPU_r470.ab3@11877>     CMP.b (a0)+,d1
0002A54C <AmiBlitz3_noFPU_r470.ab3@11879>     BNE.b 'l10
0002A550 <AmiBlitz3_noFPU_r470.ab3@11880>   DBF D0,'l201
0002A554 <AmiBlitz3_noFPU_r470.ab3@11882>   BSR.w reget
0002A556 <AmiBlitz3_noFPU_r470.ab3@11883>   CMP.w D0,D0
0002A558 <AmiBlitz3_noFPU_r470.ab3@11884> RTS
0002A55A <AmiBlitz3_noFPU_r470.ab3@11897>     MOVE.l (A2),D0                                         ;find label
0002A55E <AmiBlitz3_noFPU_r470.ab3@11898>      BEQ.b findlab__no
0002A560 <AmiBlitz3_noFPU_r470.ab3@11899>     MOVEA.l D0,A2
0002A562 <AmiBlitz3_noFPU_r470.ab3@11900>     MOVEQ.l #$00,D0
0002A566 <AmiBlitz3_noFPU_r470.ab3@11901>     MOVE.b -$1(A2,D7.W),D0
0002A568 <AmiBlitz3_noFPU_r470.ab3@11902>     SUB.l D7,D0
0002A56A <AmiBlitz3_noFPU_r470.ab3@11903>     SUBQ.l #1,D0
0002A56C <AmiBlitz3_noFPU_r470.ab3@11904>   CMP.w D0,D2
0002A570 <AmiBlitz3_noFPU_r470.ab3@11905>   BNE.b findlab__loop
0002A574 <AmiBlitz3_noFPU_r470.ab3@11907>   LEA $0(A2,D7.W),A1
0002A57A <AmiBlitz3_noFPU_r470.ab3@11908>   LEA ptr_parameterstore,A0
0002A57C <AmiBlitz3_noFPU_r470.ab3@11909>   SUBQ.l #1,D0
0002A57E <AmiBlitz3_noFPU_r470.ab3@11912>     MOVE.b (a1)+,d1
0002A580 <AmiBlitz3_noFPU_r470.ab3@11913>     CMP.b (a0)+,d1
0002A584 <AmiBlitz3_noFPU_r470.ab3@11915>     BNE.b findlab__loop
0002A588 <AmiBlitz3_noFPU_r470.ab3@11916>   DBF D0,findlab__loop2
0002A58C <AmiBlitz3_noFPU_r470.ab3@11918>   BSR.w reget
0002A58E <AmiBlitz3_noFPU_r470.ab3@11919>   CMP.w D0,D0
0002A590 <AmiBlitz3_noFPU_r470.ab3@11920> RTS
0002A594 <AmiBlitz3_noFPU_r470.ab3@11923>   BSR.w reget
0002A596 <AmiBlitz3_noFPU_r470.ab3@11924>   MOVEQ.l #-$01,D1
0002A598 <AmiBlitz3_noFPU_r470.ab3@11925> RTS
0002A59E <AmiBlitz3_noFPU_r470.ab3@11929>   MOVEA.l alllocals,A4
0002A5A4 <AmiBlitz3_noFPU_r470.ab3@11930>   CLR.l alllocals
0002A5A8 <AmiBlitz3_noFPU_r470.ab3@11934>     CMPA.w #$0,A4
0002A5AC <AmiBlitz3_noFPU_r470.ab3@11935>      BEQ.b freeprocvs__done
0002A5B0 <AmiBlitz3_noFPU_r470.ab3@11936>     MOVEA.l $4(A4),A3
0002A5B4 <AmiBlitz3_noFPU_r470.ab3@11938>     MOVEA.l $8(A4),A3
0002A5B6 <AmiBlitz3_noFPU_r470.ab3@11940>     MOVEA.l A4,A1
0002A5B8 <AmiBlitz3_noFPU_r470.ab3@11941>     MOVEA.l (A4),A4
0002A5BA <AmiBlitz3_noFPU_r470.ab3@11942>     MOVEQ.l #$0C,D0
0002A5C0 <AmiBlitz3_noFPU_r470.ab3@11943>     MOVEA.l _execbase,A6
0002A5C6 <AmiBlitz3_noFPU_r470.ab3@11944>     MOVE.l mempool,a0
0002A5CA <AmiBlitz3_noFPU_r470.ab3@11945>     JSR _FreePooled(A6)
0002A5CE <AmiBlitz3_noFPU_r470.ab3@11946> BRA.b freeprocvs__loop
0002A5D4 <AmiBlitz3_noFPU_r470.ab3@11949>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002A5DA <AmiBlitz3_noFPU_r470.ab3@11950>   CLR.l firstlocal
0002A5E0 <AmiBlitz3_noFPU_r470.ab3@11951>   CLR.l sharebase
0002A5E6 <AmiBlitz3_noFPU_r470.ab3@11952>   TST.l mempool2
0002A5EA <AmiBlitz3_noFPU_r470.ab3@11953>   BEQ freeprocvs__done_l10
0002A5F0 <AmiBlitz3_noFPU_r470.ab3@11955>   MOVEA.l _execbase,A6
0002A5F6 <AmiBlitz3_noFPU_r470.ab3@11956>   MOVE.l mempool2,a0
0002A5FC <AmiBlitz3_noFPU_r470.ab3@11957>   CLR.l mempool2
0002A600 <AmiBlitz3_noFPU_r470.ab3@11958>   JSR _DeletePool(a6)
0002A606 <AmiBlitz3_noFPU_r470.ab3@11961>   MOVE.l _execbase,a6
0002A60C <AmiBlitz3_noFPU_r470.ab3@11962>   MOVE.l #$10000,d0
0002A612 <AmiBlitz3_noFPU_r470.ab3@11963>   MOVE.l #80000,d1
0002A614 <AmiBlitz3_noFPU_r470.ab3@11964>   MOVE.l d1,d2
0002A618 <AmiBlitz3_noFPU_r470.ab3@11965>   JSR _CreatePool(a6)
0002A61E <AmiBlitz3_noFPU_r470.ab3@11966>   MOVE.l d0,mempool2
0002A620 <AmiBlitz3_noFPU_r470.ab3@11967> RTS
0002A624 <AmiBlitz3_noFPU_r470.ab3@11971>   CMPA.w #$0,A3
0002A628 <AmiBlitz3_noFPU_r470.ab3@11972>    BEQ.w freevars__done
0002A62A <AmiBlitz3_noFPU_r470.ab3@11973>   MOVEA.l A3,A1
0002A62C <AmiBlitz3_noFPU_r470.ab3@11974>   MOVEA.l (A3),A3
0002A62E <AmiBlitz3_noFPU_r470.ab3@11975>   MOVEQ.l #$00,D0
0002A632 <AmiBlitz3_noFPU_r470.ab3@11976>   MOVE.b $E(A1),D0
0002A638 <AmiBlitz3_noFPU_r470.ab3@11977>   MOVEA.l _execbase,A6
0002A63E <AmiBlitz3_noFPU_r470.ab3@11978>   MOVE.l mempool2,a0
0002A642 <AmiBlitz3_noFPU_r470.ab3@11979>   JSR _FreePooled(A6)
0002A646 <AmiBlitz3_noFPU_r470.ab3@11980> BRA.w freevars
0002A64A <AmiBlitz3_noFPU_r470.ab3@11983>     CMPA.w #$0,A3
0002A64E <AmiBlitz3_noFPU_r470.ab3@11984>      BEQ.w freevars__done
0002A650 <AmiBlitz3_noFPU_r470.ab3@11985>     MOVEA.l A3,A1
0002A652 <AmiBlitz3_noFPU_r470.ab3@11986>     MOVEA.l (A3),A3
0002A654 <AmiBlitz3_noFPU_r470.ab3@11987>     MOVEQ.l #$00,D0
0002A658 <AmiBlitz3_noFPU_r470.ab3@11988>     MOVE.b $E+4(A1),D0
0002A65E <AmiBlitz3_noFPU_r470.ab3@11989>     MOVEA.l _execbase,A6
0002A664 <AmiBlitz3_noFPU_r470.ab3@11990>     MOVE.l mempool2,a0
0002A668 <AmiBlitz3_noFPU_r470.ab3@11991>     JSR _FreePooled(A6)
0002A66C <AmiBlitz3_noFPU_r470.ab3@11992> BRA.w freevarsb
0002A66E <AmiBlitz3_noFPU_r470.ab3@11995> RTS
0002A674 <AmiBlitz3_noFPU_r470.ab3@11999>   MOVEA.l currentlabeladdr,A0
0002A67A <AmiBlitz3_noFPU_r470.ab3@12000>   MOVE.l a0,lastlabel
0002A67C <AmiBlitz3_noFPU_r470.ab3@12001>   MOVEA.l (A0),A2
0002A67E <AmiBlitz3_noFPU_r470.ab3@12002>   CLR.l (A0)
0002A684 <AmiBlitz3_noFPU_r470.ab3@12003>   MOVEA.l _execbase,A6
0002A688 <AmiBlitz3_noFPU_r470.ab3@12006>   CMPA.w #$0,A2
0002A68C <AmiBlitz3_noFPU_r470.ab3@12007>    BEQ.w clearlabels__done
0002A690 <AmiBlitz3_noFPU_r470.ab3@12008>   MOVE.l $4(A2),D0
0002A694 <AmiBlitz3_noFPU_r470.ab3@12009>   BTST #$0,D0
0002A698 <AmiBlitz3_noFPU_r470.ab3@12010>    BNE.w clearlabels__skip
0002A69A <AmiBlitz3_noFPU_r470.ab3@12011>   MOVEA.l D0,A3
0002A69E <AmiBlitz3_noFPU_r470.ab3@12014>     CMPA.w #$0,A3
0002A6A2 <AmiBlitz3_noFPU_r470.ab3@12015>      BEQ.w clearlabels__skip
0002A6A4 <AmiBlitz3_noFPU_r470.ab3@12016>     MOVEA.l A3,A1
0002A6A6 <AmiBlitz3_noFPU_r470.ab3@12017>     MOVEA.l (A3),A3
0002A6A8 <AmiBlitz3_noFPU_r470.ab3@12018>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002A6AE <AmiBlitz3_noFPU_r470.ab3@12019>     MOVE.l mempool,a0
0002A6B2 <AmiBlitz3_noFPU_r470.ab3@12020>     JSR _FreePooled(A6)
0002A6B6 <AmiBlitz3_noFPU_r470.ab3@12021> BRA.w clearlabels__loop2
0002A6B8 <AmiBlitz3_noFPU_r470.ab3@12024>   MOVEQ.l #$00,D0
0002A6BC <AmiBlitz3_noFPU_r470.ab3@12025>   MOVE.b $12(A2),D0
0002A6BE <AmiBlitz3_noFPU_r470.ab3@12026>   MOVEA.l A2,A1
0002A6C0 <AmiBlitz3_noFPU_r470.ab3@12027>   MOVEA.l (A2),A2
0002A6C6 <AmiBlitz3_noFPU_r470.ab3@12028>   MOVE.l mempool2,a0
0002A6CA <AmiBlitz3_noFPU_r470.ab3@12030> BRA.w clearlabels__loop
0002A6CC <AmiBlitz3_noFPU_r470.ab3@12033> RTS
0002A6D2 <AmiBlitz3_noFPU_r470.ab3@12037>   MOVEA.l firstpend,A3
0002A6D8 <AmiBlitz3_noFPU_r470.ab3@12038>   CLR.l firstpend
0002A6DE <AmiBlitz3_noFPU_r470.ab3@12039>   MOVEA.l _execbase,A6
0002A6E2 <AmiBlitz3_noFPU_r470.ab3@12042>     CMPA.w #$0,A3
0002A6E6 <AmiBlitz3_noFPU_r470.ab3@12043>      BEQ.w freepends__done
0002A6E8 <AmiBlitz3_noFPU_r470.ab3@12044>     MOVEA.l A3,A1
0002A6EA <AmiBlitz3_noFPU_r470.ab3@12045>     MOVEQ.l #$08,D0
0002A6EC <AmiBlitz3_noFPU_r470.ab3@12046>     MOVEA.l (A3),A3
0002A6F2 <AmiBlitz3_noFPU_r470.ab3@12047>     MOVE.l mempool,a0
0002A6F6 <AmiBlitz3_noFPU_r470.ab3@12048>     JSR _FreePooled(A6)
0002A6FA <AmiBlitz3_noFPU_r470.ab3@12049> BRA.w fpnd2
0002A6FC <AmiBlitz3_noFPU_r470.ab3@12052> RTS
0002A702 <AmiBlitz3_noFPU_r470.ab3@12056>   MOVEA.l firstproc,A2
0002A708 <AmiBlitz3_noFPU_r470.ab3@12057>   CLR.l firstproc
0002A70E <AmiBlitz3_noFPU_r470.ab3@12058>   MOVEA.l _execbase,A6
0002A712 <AmiBlitz3_noFPU_r470.ab3@12061>     CMPA.w #$0,A2
0002A716 <AmiBlitz3_noFPU_r470.ab3@12062>      BEQ.w clearfunctionlist__done
0002A718 <AmiBlitz3_noFPU_r470.ab3@12063>     MOVEA.l A2,A1
0002A71A <AmiBlitz3_noFPU_r470.ab3@12064>     MOVEA.l (A2),A2
0002A71C <AmiBlitz3_noFPU_r470.ab3@12065>     MOVEQ.l #$00,D0
0002A720 <AmiBlitz3_noFPU_r470.ab3@12066>     MOVE.b $20+#funcentry_extend(A1),D0
0002A726 <AmiBlitz3_noFPU_r470.ab3@12067>     MOVE.l mempool2,a0
0002A72A <AmiBlitz3_noFPU_r470.ab3@12068>     JSR _FreePooled(A6)
0002A72E <AmiBlitz3_noFPU_r470.ab3@12069> BRA.w clearfunctionlist__loop
0002A730 <AmiBlitz3_noFPU_r470.ab3@12072> RTS
0002A734 <AmiBlitz3_noFPU_r470.ab3@12076>   CMPA.w #$0,A2
0002A738 <AmiBlitz3_noFPU_r470.ab3@12077>    BEQ.w freetypes__done
0002A73C <AmiBlitz3_noFPU_r470.ab3@12078>   MOVEA.l $4(A2),A3
0002A740 <AmiBlitz3_noFPU_r470.ab3@12079>   CMPA.w #$FF,A3
0002A744 <AmiBlitz3_noFPU_r470.ab3@12080>    BEQ.w freetypes__noway
0002A748 <AmiBlitz3_noFPU_r470.ab3@12084>    BSR.w freevars
0002A74A <AmiBlitz3_noFPU_r470.ab3@12087>     MOVEA.l A2,A1
0002A74C <AmiBlitz3_noFPU_r470.ab3@12088>     MOVEA.l (A2),A2
0002A74E <AmiBlitz3_noFPU_r470.ab3@12089>     MOVEQ.l #$00,D0
0002A752 <AmiBlitz3_noFPU_r470.ab3@12090>     MOVE.b $A(A1),D0
0002A758 <AmiBlitz3_noFPU_r470.ab3@12091>     MOVEA.l _execbase,A6
0002A75E <AmiBlitz3_noFPU_r470.ab3@12092>     MOVE.l mempool2,a0
0002A762 <AmiBlitz3_noFPU_r470.ab3@12093>     JSR _FreePooled(A6)
0002A766 <AmiBlitz3_noFPU_r470.ab3@12094> BRA.w freetypes
0002A768 <AmiBlitz3_noFPU_r470.ab3@12097> RTS
0002A76E <AmiBlitz3_noFPU_r470.ab3@12101>   JSR uselib2
0002A774 <AmiBlitz3_noFPU_r470.ab3@12103>   CLR.w notshared
0002A77A <AmiBlitz3_noFPU_r470.ab3@12104>   CLR.w varmode
0002A780 <AmiBlitz3_noFPU_r470.ab3@12105>   MOVE.w proceduremode,D1
0002A784 <AmiBlitz3_noFPU_r470.ab3@12106>    BNE.w JL_0_8F4E
0002A78A <AmiBlitz3_noFPU_r470.ab3@12107>   LEA varbase,A2
0002A790 <AmiBlitz3_noFPU_r470.ab3@12108>   LEA ptr_parameterstore,a0
0002A794 <AmiBlitz3_noFPU_r470.ab3@12109>   CMP.b #$22,(a0)
0002A798 <AmiBlitz3_noFPU_r470.ab3@12110>   BNE JL_0_8E5E
0002A79A <AmiBlitz3_noFPU_r470.ab3@12111>   MOVEQ #0,d0
0002A7A0 <AmiBlitz3_noFPU_r470.ab3@12112> JMP error
0002A7A4 <AmiBlitz3_noFPU_r470.ab3@12115>   BSR.w findvariable
0002A7A8 <AmiBlitz3_noFPU_r470.ab3@12118>   BNE.w JL_0_8E7E
0002A7AE <AmiBlitz3_noFPU_r470.ab3@12121>   MOVE.b flagmask+1,D1
0002A7B2 <AmiBlitz3_noFPU_r470.ab3@12122>   MOVE.b $7(A2),D3
0002A7B4 <AmiBlitz3_noFPU_r470.ab3@12123>   EOR.b D3,D1
0002A7B8 <AmiBlitz3_noFPU_r470.ab3@12124>   BNE 'l2
0002A7C0 <AmiBlitz3_noFPU_r470.ab3@12125>   CMP.b #2,nowdeclare
0002A7C4 <AmiBlitz3_noFPU_r470.ab3@12126>   BEQ errormsg_declaredtwice
0002A7C8 <AmiBlitz3_noFPU_r470.ab3@12127> BRA.w JL_0_8FA8
0002A7CC <AmiBlitz3_noFPU_r470.ab3@12130>   BSR.w findlab
0002A7D0 <AmiBlitz3_noFPU_r470.ab3@12131>   BNE 'l1
0002A7D8 <AmiBlitz3_noFPU_r470.ab3@12132>   CMP.b #2,nowdeclare
0002A7DC <AmiBlitz3_noFPU_r470.ab3@12133>   BEQ errormsg_declaredtwice
0002A7DE <AmiBlitz3_noFPU_r470.ab3@12134>   CMP.w d0,d0
0002A7E2 <AmiBlitz3_noFPU_r470.ab3@12137> BRA.w JL_0_8E62
0002A7E4 <AmiBlitz3_noFPU_r470.ab3@12140>    MOVE.l a2,-(a7)
0002A7EA <AmiBlitz3_noFPU_r470.ab3@12141>    LEA sharebase,a2
0002A7EC <AmiBlitz3_noFPU_r470.ab3@12142>    MOVEQ #$f+4,d7
0002A7F0 <AmiBlitz3_noFPU_r470.ab3@12143>    BSR.w findlab
0002A7F4 <AmiBlitz3_noFPU_r470.ab3@12144>    BEQ 'l2x
0002A7F6 <AmiBlitz3_noFPU_r470.ab3@12145>    MOVE.l (a7)+,a2
0002A7FA <AmiBlitz3_noFPU_r470.ab3@12146> BRA 'cont
0002A7FC <AmiBlitz3_noFPU_r470.ab3@12149>   ADDQ.l #4,a7
0002A802 <AmiBlitz3_noFPU_r470.ab3@12150>   CLR.w varmode
0002A808 <AmiBlitz3_noFPU_r470.ab3@12151>   MOVE.b flagmask+1,D1
0002A80C <AmiBlitz3_noFPU_r470.ab3@12152>   MOVE.b $7(A2),D3
0002A80E <AmiBlitz3_noFPU_r470.ab3@12153>   EOR.b D3,D1
0002A812 <AmiBlitz3_noFPU_r470.ab3@12154>   BNE vardeclareerr
0002A816 <AmiBlitz3_noFPU_r470.ab3@12155> BRA JL_0_8FA8
0002A81C <AmiBlitz3_noFPU_r470.ab3@12158>    MOVE.w nonew,D1
0002A820 <AmiBlitz3_noFPU_r470.ab3@12159>    BNE.w nonewerr
0002A826 <AmiBlitz3_noFPU_r470.ab3@12160>    TST.b nowdeclare
0002A82A <AmiBlitz3_noFPU_r470.ab3@12161>    BNE 'l2
0002A830 <AmiBlitz3_noFPU_r470.ab3@12162>    TST.b declare2
0002A834 <AmiBlitz3_noFPU_r470.ab3@12163>    BEQ 'l1
0002A838 <AmiBlitz3_noFPU_r470.ab3@12164>    CMP.b #$2e,d0
0002A83C <AmiBlitz3_noFPU_r470.ab3@12165>    BEQ 'l2
0002A840 <AmiBlitz3_noFPU_r470.ab3@12166>    CMP.b #"$",d0
0002A844 <AmiBlitz3_noFPU_r470.ab3@12167>    BEQ 'l2
0002A848 <AmiBlitz3_noFPU_r470.ab3@12168> BRA vardeclareerr
0002A84E <AmiBlitz3_noFPU_r470.ab3@12171>   TST.b declare
0002A852 <AmiBlitz3_noFPU_r470.ab3@12172>    BNE vardeclareerr
0002A856 <AmiBlitz3_noFPU_r470.ab3@12175>   BSR.w addvariable
0002A85C <AmiBlitz3_noFPU_r470.ab3@12176>   NOT.w notshared
0002A85E <AmiBlitz3_noFPU_r470.ab3@12177>   MOVEA.l A2,A3
0002A864 <AmiBlitz3_noFPU_r470.ab3@12178>   MOVEA.l defaulttype,A2
0002A868 <AmiBlitz3_noFPU_r470.ab3@12179>   CMP.w #$2E,D0
0002A86C <AmiBlitz3_noFPU_r470.ab3@12180>    BEQ.w JL_0_8EB8
0002A870 <AmiBlitz3_noFPU_r470.ab3@12181>   CMP.w #$24,D0
0002A874 <AmiBlitz3_noFPU_r470.ab3@12182>    BNE.w JL_0_8ECA
0002A87A <AmiBlitz3_noFPU_r470.ab3@12183>   LEA newtype_string,A2
0002A87E <AmiBlitz3_noFPU_r470.ab3@12184>    BSR.w get1bytemain
0002A882 <AmiBlitz3_noFPU_r470.ab3@12185> BRA.w JL_0_8ECA
0002A888 <AmiBlitz3_noFPU_r470.ab3@12188> JMP JUMP_notypeerr
0002A88C <AmiBlitz3_noFPU_r470.ab3@12191>    BSR.w getparameter2
0002A892 <AmiBlitz3_noFPU_r470.ab3@12192>   LEA newtypebase,A2
0002A896 <AmiBlitz3_noFPU_r470.ab3@12193>    BSR.w findtype
0002A89A <AmiBlitz3_noFPU_r470.ab3@12194>    BNE.w notypeerr3
0002A8A0 <AmiBlitz3_noFPU_r470.ab3@12197>   CMPA.l #newtype_byte,A2
0002A8A4 <AmiBlitz3_noFPU_r470.ab3@12198>    BEQ.w JL_0_8EECb
0002A8AA <AmiBlitz3_noFPU_r470.ab3@12199>   MOVE.w varmode,D1
0002A8AE <AmiBlitz3_noFPU_r470.ab3@12200>    BNE.w JL_0_8EE4b
0002A8B4 <AmiBlitz3_noFPU_r470.ab3@12201>   ADDQ.w #1,globalvarpointer
0002A8BC <AmiBlitz3_noFPU_r470.ab3@12204>   BCLR #$0,globalvarpointer+1
0002A8C0 <AmiBlitz3_noFPU_r470.ab3@12207>   MOVE.l A2,$A(A3)
0002A8C8 <AmiBlitz3_noFPU_r470.ab3@12208>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A8CA <AmiBlitz3_noFPU_r470.ab3@12210>   MOVEQ.l #$04,D1
0002A8D2 <AmiBlitz3_noFPU_r470.ab3@12211>   BTST #$0,flagmask+1
0002A8D6 <AmiBlitz3_noFPU_r470.ab3@12212>    BNE.w JL_0_8F22b
0002A8DE <AmiBlitz3_noFPU_r470.ab3@12213>   BTST #$1,flagmask+1
0002A8E2 <AmiBlitz3_noFPU_r470.ab3@12214>    BNE.w JL_0_8F22b
0002A8EA <AmiBlitz3_noFPU_r470.ab3@12215>   CMPI.l #$100,$4(A2)
0002A8EE <AmiBlitz3_noFPU_r470.ab3@12216>    BCC.w JL_0_8F22b
0002A8F2 <AmiBlitz3_noFPU_r470.ab3@12217>   MOVE.w $8(A2),D1
0002A8F8 <AmiBlitz3_noFPU_r470.ab3@12220>   TST.w varmode
0002A8FC <AmiBlitz3_noFPU_r470.ab3@12221> BRA.w JL_0_8F3E
0002A900 <AmiBlitz3_noFPU_r470.ab3@12230>   BSR.w getparameter2
0002A906 <AmiBlitz3_noFPU_r470.ab3@12231>   LEA newtypebase,A2
0002A90A <AmiBlitz3_noFPU_r470.ab3@12232>    BSR.w findtype
0002A90E <AmiBlitz3_noFPU_r470.ab3@12233>    BNE.w notypeerr
0002A914 <AmiBlitz3_noFPU_r470.ab3@12236>   CMPA.l #newtype_byte,A2
0002A918 <AmiBlitz3_noFPU_r470.ab3@12237>    BEQ.w JL_0_8EEC
0002A91E <AmiBlitz3_noFPU_r470.ab3@12238>   MOVE.w varmode,D1
0002A922 <AmiBlitz3_noFPU_r470.ab3@12239>    BNE.w JL_0_8EE4
0002A928 <AmiBlitz3_noFPU_r470.ab3@12240>   ADDQ.w #1,globalvarpointer
0002A930 <AmiBlitz3_noFPU_r470.ab3@12243>   BCLR #$0,globalvarpointer+1
0002A934 <AmiBlitz3_noFPU_r470.ab3@12246>   MOVE.l A2,$A(A3)
0002A93C <AmiBlitz3_noFPU_r470.ab3@12247>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002A93E <AmiBlitz3_noFPU_r470.ab3@12248>   MOVEQ.l #$04,D1
0002A946 <AmiBlitz3_noFPU_r470.ab3@12249>   BTST #$0,flagmask+1
0002A94A <AmiBlitz3_noFPU_r470.ab3@12250>    BNE.w JL_0_8F22
0002A952 <AmiBlitz3_noFPU_r470.ab3@12251>   BTST #$1,flagmask+1
0002A956 <AmiBlitz3_noFPU_r470.ab3@12252>    BNE.w JL_0_8F22
0002A95E <AmiBlitz3_noFPU_r470.ab3@12253>   CMPI.l #$100,$4(A2)
0002A962 <AmiBlitz3_noFPU_r470.ab3@12254>    BCC.w JL_0_8F22
0002A966 <AmiBlitz3_noFPU_r470.ab3@12255>   MOVE.w $8(A2),D1
0002A96C <AmiBlitz3_noFPU_r470.ab3@12258>   TST.w varmode
0002A970 <AmiBlitz3_noFPU_r470.ab3@12259>    BEQ.w JL_0_8F3E
0002A972 <AmiBlitz3_noFPU_r470.ab3@12260>   NEG.w D1
0002A978 <AmiBlitz3_noFPU_r470.ab3@12261>   ADD.w D1,globalvarpointer
0002A980 <AmiBlitz3_noFPU_r470.ab3@12262>   MOVE.w globalvarpointer,$4(A3)
0002A982 <AmiBlitz3_noFPU_r470.ab3@12263> RTS
0002A98A <AmiBlitz3_noFPU_r470.ab3@12266>   MOVE.w globalvarpointer,$4(A3)
0002A990 <AmiBlitz3_noFPU_r470.ab3@12267>   ADD.w D1,globalvarpointer
0002A992 <AmiBlitz3_noFPU_r470.ab3@12268> RTS
0002A998 <AmiBlitz3_noFPU_r470.ab3@12272>   LEA firstglob,A2
0002A99C <AmiBlitz3_noFPU_r470.ab3@12273>    BSR.w findvariable2
0002A9A0 <AmiBlitz3_noFPU_r470.ab3@12276>   BNE.w JL_0_8F74
0002A9A6 <AmiBlitz3_noFPU_r470.ab3@12277>   MOVE.b flagmask+1,D1
0002A9AA <AmiBlitz3_noFPU_r470.ab3@12278>   MOVE.b $7(A2),D3
0002A9AC <AmiBlitz3_noFPU_r470.ab3@12279>   EOR.b D3,D1
0002A9B0 <AmiBlitz3_noFPU_r470.ab3@12280>    BEQ.w JL_0_8FA8
0002A9B4 <AmiBlitz3_noFPU_r470.ab3@12281>    BSR.w findlab
0002A9B8 <AmiBlitz3_noFPU_r470.ab3@12282> BRA.w JL_0_8F58
0002A9C0 <AmiBlitz3_noFPU_r470.ab3@12285>   MOVE.w #$FFFF,varmode
0002A9C6 <AmiBlitz3_noFPU_r470.ab3@12286>   MOVE.w globalvarpointer,-(A7)
0002A9D0 <AmiBlitz3_noFPU_r470.ab3@12287>   MOVE.w locvaroff,globalvarpointer
0002A9D6 <AmiBlitz3_noFPU_r470.ab3@12288>   LEA firstlocal,A2
0002A9DE <AmiBlitz3_noFPU_r470.ab3@12289>   MOVE.b #1,newvariable
0002A9E2 <AmiBlitz3_noFPU_r470.ab3@12290>    BSR.w JL_0_8E5E
0002A9E8 <AmiBlitz3_noFPU_r470.ab3@12291>   CLR.b newvariable
0002A9F2 <AmiBlitz3_noFPU_r470.ab3@12292>   MOVE.w globalvarpointer,locvaroff
0002A9F8 <AmiBlitz3_noFPU_r470.ab3@12293>   MOVE.w (A7)+,globalvarpointer
0002A9FA <AmiBlitz3_noFPU_r470.ab3@12294> RTS
0002A9FC <AmiBlitz3_noFPU_r470.ab3@12297>   MOVEA.l A2,A3
0002AA00 <AmiBlitz3_noFPU_r470.ab3@12298>   CMP.w #$2E,D0
0002AA04 <AmiBlitz3_noFPU_r470.ab3@12299>    BEQ.w JL_0_8FCE
0002AA08 <AmiBlitz3_noFPU_r470.ab3@12300>   CMP.w #$24,D0
0002AA0C <AmiBlitz3_noFPU_r470.ab3@12301>    BNE.w JL_0_8FE8
0002AA14 <AmiBlitz3_noFPU_r470.ab3@12302>   CMPI.l #newtype_string,$A(A3)
0002AA18 <AmiBlitz3_noFPU_r470.ab3@12303>    BNE.w rongtypeerr
0002AA1C <AmiBlitz3_noFPU_r470.ab3@12304>    BSR.w get1bytemain
0002AA20 <AmiBlitz3_noFPU_r470.ab3@12305> BRA.w JL_0_8FE8
0002AA24 <AmiBlitz3_noFPU_r470.ab3@12308>    BSR.w getparameter2
0002AA2A <AmiBlitz3_noFPU_r470.ab3@12309>   LEA newtypebase,A2
0002AA2E <AmiBlitz3_noFPU_r470.ab3@12310>    BSR.w findtype
0002AA32 <AmiBlitz3_noFPU_r470.ab3@12311>    BNE.w notypeerr
0002AA36 <AmiBlitz3_noFPU_r470.ab3@12312>   CMPA.l $A(A3),A2
0002AA3A <AmiBlitz3_noFPU_r470.ab3@12313>    BNE.w rongtypeerr
0002AA42 <AmiBlitz3_noFPU_r470.ab3@12315>   BTST #$0,flagmask+1
0002AA46 <AmiBlitz3_noFPU_r470.ab3@12316>    BEQ.w JL_0_8FFE
0002AA4C <AmiBlitz3_noFPU_r470.ab3@12317>   BTST #$0,$7(A3)
0002AA50 <AmiBlitz3_noFPU_r470.ab3@12318>    BEQ.w pointerr
0002AA54 <AmiBlitz3_noFPU_r470.ab3@12321>   MOVEA.l $A(A3),A2
0002AA56 <AmiBlitz3_noFPU_r470.ab3@12322> RTS
0002AA58 <AmiBlitz3_noFPU_r470.ab3@12326>    TST.l D3                                                ;newtype >32kb  .w to .l
0002AA5C <AmiBlitz3_noFPU_r470.ab3@12327>    BEQ.w JL_0_9042
0002AA66 <AmiBlitz3_noFPU_r470.ab3@12328>    MOVE.l destpointer,loada
0002AA6A <AmiBlitz3_noFPU_r470.ab3@12331> BRA JL_0_9032
0002AA6E <AmiBlitz3_noFPU_r470.ab3@12333>   CMP.w #$9,D3                                             ;_addq_arrays
0002AA72 <AmiBlitz3_noFPU_r470.ab3@12334>    BCC.w JL_0_9032
0002AA78 <AmiBlitz3_noFPU_r470.ab3@12335>   MOVE.w d3,arrayoffset
0002AA7C <AmiBlitz3_noFPU_r470.ab3@12336>   ANDI.w #$7,D3
0002AA7E <AmiBlitz3_noFPU_r470.ab3@12337>   LSL.w #8,D3
0002AA80 <AmiBlitz3_noFPU_r470.ab3@12338>   LSL.w #1,D3
0002AA88 <AmiBlitz3_noFPU_r470.ab3@12339>   ANDI.w #$F1FF,addqa0
0002AA8E <AmiBlitz3_noFPU_r470.ab3@12340>   OR.w D3,addqa0
0002AA94 <AmiBlitz3_noFPU_r470.ab3@12341>   MOVE.w addqa0,D1
0002AA98 <AmiBlitz3_noFPU_r470.ab3@12342> BRA.w writeword
0002AA9E <AmiBlitz3_noFPU_r470.ab3@12345>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002AAA2 <AmiBlitz3_noFPU_r470.ab3@12346>   BGT longoffset
0002AAA8 <AmiBlitz3_noFPU_r470.ab3@12347>   MOVE.w D3,leaa0a0+2
0002AAAE <AmiBlitz3_noFPU_r470.ab3@12348>   MOVE.w d3,arrayoffset
0002AAB4 <AmiBlitz3_noFPU_r470.ab3@12349>   MOVE.l leaa0a0,D1
0002AAB8 <AmiBlitz3_noFPU_r470.ab3@12350>   BSR.w writelong
0002AABA <AmiBlitz3_noFPU_r470.ab3@12353> RTS
0002AABE <AmiBlitz3_noFPU_r470.ab3@12356>    MOVE.w #$d5fc,d1
0002AAC2 <AmiBlitz3_noFPU_r470.ab3@12357>    BSR writeword
0002AAC4 <AmiBlitz3_noFPU_r470.ab3@12358>    MOVE.l d3,d1
0002AAC8 <AmiBlitz3_noFPU_r470.ab3@12359>    BSR.w writelong
0002AACA <AmiBlitz3_noFPU_r470.ab3@12360> RTS
0002AACE <AmiBlitz3_noFPU_r470.ab3@12364>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002AAD2 <AmiBlitz3_noFPU_r470.ab3@12367>    BCS.w arrchk3                                           
0002AAD8 <AmiBlitz3_noFPU_r470.ab3@12368>    JSR $20000                                              ;jsr 0
0002AADE <AmiBlitz3_noFPU_r470.ab3@12374>   TST.b fast
0002AAE2 <AmiBlitz3_noFPU_r470.ab3@12375>   BEQ 'l1
0002AAE4 <AmiBlitz3_noFPU_r470.ab3@12376>    MOVEQ #0,d1                                             ;faster arrays
0002AAEA <AmiBlitz3_noFPU_r470.ab3@12377>    MOVE.w regnum,d2
0002AAEC <AmiBlitz3_noFPU_r470.ab3@12378>    MOVE.w d2,d1
0002AAEE <AmiBlitz3_noFPU_r470.ab3@12379>    LSL.w #8,d1
0002AAF0 <AmiBlitz3_noFPU_r470.ab3@12380>    LSL.w #4,d1
0002AAF2 <AmiBlitz3_noFPU_r470.ab3@12381>    ADD.w d2,d1
0002AAF8 <AmiBlitz3_noFPU_r470.ab3@12382>    OR.l #$4c2d0000,d1
0002AAFE <AmiBlitz3_noFPU_r470.ab3@12383>    TST.w varmode
0002AB02 <AmiBlitz3_noFPU_r470.ab3@12384>    BEQ 'l1a
0002AB06 <AmiBlitz3_noFPU_r470.ab3@12385>    BCLR #16,d1
0002AB0A <AmiBlitz3_noFPU_r470.ab3@12388>    BSR writelong
0002AB0E <AmiBlitz3_noFPU_r470.ab3@12389>    MOVE.w $4(A7),D1
0002AB12 <AmiBlitz3_noFPU_r470.ab3@12390>    BSR.w writeword
0002AB18 <AmiBlitz3_noFPU_r470.ab3@12391>    MOVE.w regnum,D1
0002AB1A <AmiBlitz3_noFPU_r470.ab3@12392>   SUBQ.w #1,D1
0002AB1C <AmiBlitz3_noFPU_r470.ab3@12393>   LSL.w #8,D1
0002AB1E <AmiBlitz3_noFPU_r470.ab3@12394>   LSL.w #1,D1
0002AB22 <AmiBlitz3_noFPU_r470.ab3@12395>   ORI.w #$D080,D1
0002AB28 <AmiBlitz3_noFPU_r470.ab3@12396>   OR.w regnum,D1
0002AB2C <AmiBlitz3_noFPU_r470.ab3@12397>    BSR.w writeword
0002AB2E <AmiBlitz3_noFPU_r470.ab3@12398> RTS
0002AB34 <AmiBlitz3_noFPU_r470.ab3@12401>   MOVE.w regnum,D2
0002AB38 <AmiBlitz3_noFPU_r470.ab3@12402>   MOVE.w arrmul1(PC),D1
0002AB3A <AmiBlitz3_noFPU_r470.ab3@12403>   OR.w D2,D1
0002AB3C <AmiBlitz3_noFPU_r470.ab3@12404>   SUBQ.w #1,D1
0002AB40 <AmiBlitz3_noFPU_r470.ab3@12405>    BSR.w writeword
0002AB44 <AmiBlitz3_noFPU_r470.ab3@12406>   MOVE.w arrmul2(PC),D1
0002AB46 <AmiBlitz3_noFPU_r470.ab3@12407>   OR.w D2,D1
0002AB48 <AmiBlitz3_noFPU_r470.ab3@12408>   MOVE.w D2,D3
0002AB4A <AmiBlitz3_noFPU_r470.ab3@12409>   SUBQ.w #1,D3
0002AB4C <AmiBlitz3_noFPU_r470.ab3@12410>   LSL.w #8,D3
0002AB4E <AmiBlitz3_noFPU_r470.ab3@12411>   LSL.w #1,D3
0002AB50 <AmiBlitz3_noFPU_r470.ab3@12412>   OR.w D3,D1
0002AB54 <AmiBlitz3_noFPU_r470.ab3@12413>    BSR.w writeword
0002AB58 <AmiBlitz3_noFPU_r470.ab3@12414>   MOVE.w arrmul3(PC),D1
0002AB5A <AmiBlitz3_noFPU_r470.ab3@12415>   MOVE.w D2,D3
0002AB5C <AmiBlitz3_noFPU_r470.ab3@12416>   LSL.w #8,D3
0002AB5E <AmiBlitz3_noFPU_r470.ab3@12417>   LSL.w #1,D3
0002AB60 <AmiBlitz3_noFPU_r470.ab3@12418>   OR.w D3,D1
0002AB64 <AmiBlitz3_noFPU_r470.ab3@12419>    BSR.w pokewda5s
0002AB68 <AmiBlitz3_noFPU_r470.ab3@12420>   MOVE.w $4(A7),D1
0002AB6A <AmiBlitz3_noFPU_r470.ab3@12421>   ADDQ.w #2,D1
0002AB6E <AmiBlitz3_noFPU_r470.ab3@12422>    BSR.w writeword
0002AB72 <AmiBlitz3_noFPU_r470.ab3@12423>   MOVE.w arrmul4(PC),D1
0002AB74 <AmiBlitz3_noFPU_r470.ab3@12424>   MOVE.w D2,D3
0002AB76 <AmiBlitz3_noFPU_r470.ab3@12425>   SUBQ.w #1,D3
0002AB78 <AmiBlitz3_noFPU_r470.ab3@12426>   LSL.w #8,D3
0002AB7A <AmiBlitz3_noFPU_r470.ab3@12427>   LSL.w #1,D3
0002AB7C <AmiBlitz3_noFPU_r470.ab3@12428>   OR.w D3,D1
0002AB80 <AmiBlitz3_noFPU_r470.ab3@12429>    BSR.w pokewda5s
0002AB84 <AmiBlitz3_noFPU_r470.ab3@12430>   MOVE.w $4(A7),D1
0002AB88 <AmiBlitz3_noFPU_r470.ab3@12431>    BSR.w writeword
0002AB8C <AmiBlitz3_noFPU_r470.ab3@12432>   MOVE.w arrmul5(PC),D1
0002AB8E <AmiBlitz3_noFPU_r470.ab3@12433>   OR.w D2,D1
0002AB90 <AmiBlitz3_noFPU_r470.ab3@12434>   SUBQ.w #1,D1
0002AB94 <AmiBlitz3_noFPU_r470.ab3@12435>    BSR.w writeword
0002AB98 <AmiBlitz3_noFPU_r470.ab3@12436>   MOVE.w arrmul6(PC),D1
0002AB9A <AmiBlitz3_noFPU_r470.ab3@12437>   OR.w D2,D1
0002AB9C <AmiBlitz3_noFPU_r470.ab3@12438>   SUBQ.w #1,D1
0002ABA0 <AmiBlitz3_noFPU_r470.ab3@12439>    BSR.w writeword
0002ABA4 <AmiBlitz3_noFPU_r470.ab3@12440>   MOVE.w arrmul7(PC),D1
0002ABA6 <AmiBlitz3_noFPU_r470.ab3@12441>   OR.w D2,D1
0002ABA8 <AmiBlitz3_noFPU_r470.ab3@12442>   SUBQ.w #1,D1
0002ABAA <AmiBlitz3_noFPU_r470.ab3@12443>   MOVE.w D2,D3
0002ABAC <AmiBlitz3_noFPU_r470.ab3@12444>   LSL.w #8,D3
0002ABAE <AmiBlitz3_noFPU_r470.ab3@12445>   LSL.w #1,D3
0002ABB0 <AmiBlitz3_noFPU_r470.ab3@12446>   OR.w D3,D1
0002ABB4 <AmiBlitz3_noFPU_r470.ab3@12447>    BSR.w writeword
0002ABB8 <AmiBlitz3_noFPU_r470.ab3@12448>   MOVE.w arrmul8(PC),D1
0002ABBA <AmiBlitz3_noFPU_r470.ab3@12449>   MOVE.w D2,D3
0002ABBC <AmiBlitz3_noFPU_r470.ab3@12450>   SUBQ.w #1,D3
0002ABBE <AmiBlitz3_noFPU_r470.ab3@12451>   LSL.w #8,D3
0002ABC0 <AmiBlitz3_noFPU_r470.ab3@12452>   LSL.w #1,D3
0002ABC2 <AmiBlitz3_noFPU_r470.ab3@12453>   OR.w D3,D1
0002ABC6 <AmiBlitz3_noFPU_r470.ab3@12454>    BSR.w writeword
0002ABCC <AmiBlitz3_noFPU_r470.ab3@12455>   MOVE.w regnum,D1
0002ABCE <AmiBlitz3_noFPU_r470.ab3@12456>   SUBQ.w #1,D1
0002ABD0 <AmiBlitz3_noFPU_r470.ab3@12457>   LSL.w #8,D1
0002ABD2 <AmiBlitz3_noFPU_r470.ab3@12458>   LSL.w #1,D1
0002ABD6 <AmiBlitz3_noFPU_r470.ab3@12459>   ORI.w #$D080,D1
0002ABDC <AmiBlitz3_noFPU_r470.ab3@12460>   OR.w regnum,D1
0002ABE0 <AmiBlitz3_noFPU_r470.ab3@12461> BRA.w writeword
0002ABE2 <AmiBlitz3_noFPU_r470.ab3@12469> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002ABE4 <AmiBlitz3_noFPU_r470.ab3@12470> arrmul2:   MOVE  d0,d0
0002ABE8 <AmiBlitz3_noFPU_r470.ab3@12471> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002ABEC <AmiBlitz3_noFPU_r470.ab3@12472> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002ABEE <AmiBlitz3_noFPU_r470.ab3@12474> arrmul5:   SWAP d0
0002ABF0 <AmiBlitz3_noFPU_r470.ab3@12475> arrmul6:   CLR d0
0002ABF2 <AmiBlitz3_noFPU_r470.ab3@12476> arrmul7:   ADD.l d0,d0
0002ABF4 <AmiBlitz3_noFPU_r470.ab3@12477> arrmul8:   MOVE.l (a7)+,d0
0002ABF8 <AmiBlitz3_noFPU_r470.ab3@12482> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002ABFC <AmiBlitz3_noFPU_r470.ab3@12483> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002ABFE <AmiBlitz3_noFPU_r470.ab3@12484> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002AC04 <AmiBlitz3_noFPU_r470.ab3@12502>   CLR.l lastoffset_org
0002AC0A <AmiBlitz3_noFPU_r470.ab3@12503>   BTST #$1,$7(A3)
0002AC0E <AmiBlitz3_noFPU_r470.ab3@12504>    BEQ.w calcvar__notarr
0002AC14 <AmiBlitz3_noFPU_r470.ab3@12505>   MOVE.w notshared,D1
0002AC18 <AmiBlitz3_noFPU_r470.ab3@12506>    BNE.w noarrerr
0002AC1C <AmiBlitz3_noFPU_r470.ab3@12507>    BSR.w get1bytemain
0002AC20 <AmiBlitz3_noFPU_r470.ab3@12508>   CMP.w #$29,D0
0002AC24 <AmiBlitz3_noFPU_r470.ab3@12509>    BNE.w calcvar__notalist
0002AC2A <AmiBlitz3_noFPU_r470.ab3@12510>   BTST #$0,$6(A3)
0002AC2E <AmiBlitz3_noFPU_r470.ab3@12511>    BEQ.w nolisterr
0002AC36 <AmiBlitz3_noFPU_r470.ab3@12512>   MOVE.w $4(A3),listcode1+2
0002AC3A <AmiBlitz3_noFPU_r470.ab3@12513>   MOVE.l listcode1(PC),D1
0002AC3E <AmiBlitz3_noFPU_r470.ab3@12514>    BSR.w pokela5s
0002AC42 <AmiBlitz3_noFPU_r470.ab3@12515>   MOVE.l listcode2(PC),D1
0002AC46 <AmiBlitz3_noFPU_r470.ab3@12516>    BSR.w writelong
0002AC4C <AmiBlitz3_noFPU_r470.ab3@12517>   TST.b debugmode
0002AC50 <AmiBlitz3_noFPU_r470.ab3@12518>    BEQ.w calcvar__nolrerr
0002AC52 <AmiBlitz3_noFPU_r470.ab3@12522>   MOVE.l A2,-(A7)
0002AC56 <AmiBlitz3_noFPU_r470.ab3@12523>   MOVE.w #$C315,D1
0002AC5A <AmiBlitz3_noFPU_r470.ab3@12524>    BSR.w Atokejsr
0002AC5C <AmiBlitz3_noFPU_r470.ab3@12525>   MOVEA.l (A7)+,A2
0002AC60 <AmiBlitz3_noFPU_r470.ab3@12528>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002AC64 <AmiBlitz3_noFPU_r470.ab3@12530>    BSR.w writeword
0002AC68 <AmiBlitz3_noFPU_r470.ab3@12531> BRA.w calcvar__normalar
0002AC6A <AmiBlitz3_noFPU_r470.ab3@12534> calcvar__listoff:   Ds.w 1
0002AC70 <AmiBlitz3_noFPU_r470.ab3@12538>   CLR.w calcvar__listoff
0002AC76 <AmiBlitz3_noFPU_r470.ab3@12539>   BTST #$0,$6(A3)
0002AC7A <AmiBlitz3_noFPU_r470.ab3@12540>    BEQ.w calcvar__knop
0002AC82 <AmiBlitz3_noFPU_r470.ab3@12541>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002AC86 <AmiBlitz3_noFPU_r470.ab3@12544>   MOVEM.l A2-A3,-(A7)
0002AC8C <AmiBlitz3_noFPU_r470.ab3@12545>   MOVE.w varmode,-(A7)
0002AC90 <AmiBlitz3_noFPU_r470.ab3@12546>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002AC94 <AmiBlitz3_noFPU_r470.ab3@12547>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002AC96 <AmiBlitz3_noFPU_r470.ab3@12548>   MOVE.l A2,-(A7)
0002AC9C <AmiBlitz3_noFPU_r470.ab3@12549>   MOVE.w flagmask,-(A7)
0002ACA6 <AmiBlitz3_noFPU_r470.ab3@12551>   MOVE.w oldqflag,instringon
0002ACAC <AmiBlitz3_noFPU_r470.ab3@12552>   MOVEA.l lastsourcepos,A5
0002ACB0 <AmiBlitz3_noFPU_r470.ab3@12553>    BSR.w arreval
0002ACB6 <AmiBlitz3_noFPU_r470.ab3@12554>   MOVE.w (A7)+,flagmask
0002ACBE <AmiBlitz3_noFPU_r470.ab3@12555>   MOVE.w $8(A7),varmode
0002ACC4 <AmiBlitz3_noFPU_r470.ab3@12556>   TST.b debugmode
0002ACC8 <AmiBlitz3_noFPU_r470.ab3@12557>    BEQ.w calcvar__noszchk
0002ACCA <AmiBlitz3_noFPU_r470.ab3@12561>   MOVEA.l (A7)+,A2
0002ACCC <AmiBlitz3_noFPU_r470.ab3@12562>   MOVEQ.l #$04,D1
0002ACD4 <AmiBlitz3_noFPU_r470.ab3@12563>   BTST #$0,flagmask+1                                      ;pointer?
0002ACD8 <AmiBlitz3_noFPU_r470.ab3@12564>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002ACDC <AmiBlitz3_noFPU_r470.ab3@12565>   MOVE.w $8(A2),D1
0002ACE0 <AmiBlitz3_noFPU_r470.ab3@12568>   ADD.w calcvar__listoff(PC),D1
0002ACE4 <AmiBlitz3_noFPU_r470.ab3@12569>   BSR.w JL_0_B6DE
0002ACEA <AmiBlitz3_noFPU_r470.ab3@12570>   ADDQ.w #1,regnum
0002ACEC <AmiBlitz3_noFPU_r470.ab3@12573>   ADDQ.w #4,(A7)
0002ACF0 <AmiBlitz3_noFPU_r470.ab3@12574>   TST.w $4(A7)
0002ACF4 <AmiBlitz3_noFPU_r470.ab3@12575>    BEQ.w calcvar__isglob
0002ACF6 <AmiBlitz3_noFPU_r470.ab3@12576>   SUBQ.w #8,(A7)                                           ;range check local array
0002ACFC <AmiBlitz3_noFPU_r470.ab3@12579>   TST.b debugmode
0002AD00 <AmiBlitz3_noFPU_r470.ab3@12580>    BEQ.w calcvar__noer1
0002AD06 <AmiBlitz3_noFPU_r470.ab3@12581>   MOVE.w regnum,D1
0002AD08 <AmiBlitz3_noFPU_r470.ab3@12582>   SUBQ.w #1,D1
0002AD0A <AmiBlitz3_noFPU_r470.ab3@12583>   LSL.w #8,D1
0002AD0C <AmiBlitz3_noFPU_r470.ab3@12584>   LSL.w #1,D1
0002AD10 <AmiBlitz3_noFPU_r470.ab3@12585>   OR.w zarrchk(PC),D1
0002AD14 <AmiBlitz3_noFPU_r470.ab3@12586>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002AD16 <AmiBlitz3_noFPU_r470.ab3@12587>   MOVE.w (A7),D1
0002AD1A <AmiBlitz3_noFPU_r470.ab3@12588>    BSR.w writeword
0002AD1E <AmiBlitz3_noFPU_r470.ab3@12589>   MOVE.l arrchk2(PC),D1
0002AD22 <AmiBlitz3_noFPU_r470.ab3@12590>    BSR.w writelong
0002AD26 <AmiBlitz3_noFPU_r470.ab3@12591>   MOVE.w #$C309,D1
0002AD2A <AmiBlitz3_noFPU_r470.ab3@12592>    BSR.w Atokejsr
0002AD2E <AmiBlitz3_noFPU_r470.ab3@12595>   SUBQ.w #1,$2(A7)
0002AD32 <AmiBlitz3_noFPU_r470.ab3@12596>    BEQ.w calcvar__ardone
0002AD36 <AmiBlitz3_noFPU_r470.ab3@12597>   CMP.w #$2C,D0
0002AD3A <AmiBlitz3_noFPU_r470.ab3@12598>    BNE.w syntaxerr
0002AD40 <AmiBlitz3_noFPU_r470.ab3@12599>    TST.b fast
0002AD44 <AmiBlitz3_noFPU_r470.ab3@12600>    BNE 'l1
0002AD48 <AmiBlitz3_noFPU_r470.ab3@12601>    BSR.w arrevalchk
0002AD4C <AmiBlitz3_noFPU_r470.ab3@12602> BRA 'l2
0002AD50 <AmiBlitz3_noFPU_r470.ab3@12605>   BSR arreval
0002AD58 <AmiBlitz3_noFPU_r470.ab3@12608>   MOVE.w $4(A7),varmode
0002AD5C <AmiBlitz3_noFPU_r470.ab3@12609>   BSR.w JL_0_9052
0002AD60 <AmiBlitz3_noFPU_r470.ab3@12610> BRA.w calcvar__arloop
0002AD64 <AmiBlitz3_noFPU_r470.ab3@12614>   CMP.w #$29,D0
0002AD68 <AmiBlitz3_noFPU_r470.ab3@12615>    BNE.w syntaxerr
0002AD6E <AmiBlitz3_noFPU_r470.ab3@12616>   SUBQ.w #1,regnum
0002AD70 <AmiBlitz3_noFPU_r470.ab3@12617>   ADDQ.w #6,A7
0002AD74 <AmiBlitz3_noFPU_r470.ab3@12618>   MOVEM.l (A7)+,A2-A3
0002AD7C <AmiBlitz3_noFPU_r470.ab3@12619>   MOVE.w $4(A3),movea5a0+2
0002AD82 <AmiBlitz3_noFPU_r470.ab3@12620>   MOVE.l movea5a0,D1
0002AD86 <AmiBlitz3_noFPU_r470.ab3@12621>    BSR.w pokela5s
0002AD8C <AmiBlitz3_noFPU_r470.ab3@12622>   MOVE.w regnum,D1
0002AD90 <AmiBlitz3_noFPU_r470.ab3@12623>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002AD94 <AmiBlitz3_noFPU_r470.ab3@12624>    BSR.w writeword
0002AD9A <AmiBlitz3_noFPU_r470.ab3@12625>   BTST #$0,$6(A3)
0002AD9E <AmiBlitz3_noFPU_r470.ab3@12626>    BEQ.w calcvar__normalar
0002ADA2 <AmiBlitz3_noFPU_r470.ab3@12630>   MOVE.w listarfix(PC),D1
0002ADA6 <AmiBlitz3_noFPU_r470.ab3@12631>    BSR.w writeword
0002ADAA <AmiBlitz3_noFPU_r470.ab3@12634>   BSR.w get1bytemain
0002ADB0 <AmiBlitz3_noFPU_r470.ab3@12638>   BTST #$0,$7(A3)
0002ADB4 <AmiBlitz3_noFPU_r470.ab3@12639>    BEQ.w calcvar__noppnt
0002ADB8 <AmiBlitz3_noFPU_r470.ab3@12640>   CMP.w #$5C,D0
0002ADBC <AmiBlitz3_noFPU_r470.ab3@12641>    BNE.w calcvar__pmskip
0002ADC0 <AmiBlitz3_noFPU_r470.ab3@12642>   MOVE.w calcvar__pfix(PC),D1
0002ADC4 <AmiBlitz3_noFPU_r470.ab3@12643>    BSR.w writeword
0002ADC8 <AmiBlitz3_noFPU_r470.ab3@12646>   MOVE.w #$8000,D2
0002ADCC <AmiBlitz3_noFPU_r470.ab3@12647> BRA.w calcvar__loopml
0002ADD0 <AmiBlitz3_noFPU_r470.ab3@12650>   MOVE.w #$C000,D2
0002ADD4 <AmiBlitz3_noFPU_r470.ab3@12651> BRA.w calcvar__loopml
0002ADD6 <AmiBlitz3_noFPU_r470.ab3@12655> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002ADDA <AmiBlitz3_noFPU_r470.ab3@12660>   CMP.w #$28,D0
0002ADDE <AmiBlitz3_noFPU_r470.ab3@12661>    BEQ.w noarrerr
0002ADE6 <AmiBlitz3_noFPU_r470.ab3@12662>   CMPI.l #$100,$4(A2)
0002ADEA <AmiBlitz3_noFPU_r470.ab3@12663>    BCS.w calcvar__simpvar
0002ADF0 <AmiBlitz3_noFPU_r470.ab3@12664>   BTST #$0,$7(A3)
0002ADF4 <AmiBlitz3_noFPU_r470.ab3@12665>    BEQ.w calcvar__notap
0002ADF8 <AmiBlitz3_noFPU_r470.ab3@12669>   CMP.w #$5C,D0
0002ADFC <AmiBlitz3_noFPU_r470.ab3@12670>    BEQ.w calcvar__notap
0002ADFE <AmiBlitz3_noFPU_r470.ab3@12671>   MOVEQ.l #$00,D2
0002AE02 <AmiBlitz3_noFPU_r470.ab3@12672> BRA.w calcvar__simpvar2
0002AE06 <AmiBlitz3_noFPU_r470.ab3@12675>   MOVE.w #$8000,D2
0002AE0E <AmiBlitz3_noFPU_r470.ab3@12676>   MOVE.w $4(A3),movea5a0+2
0002AE14 <AmiBlitz3_noFPU_r470.ab3@12677>   MOVE.l movea5a0,D1
0002AE18 <AmiBlitz3_noFPU_r470.ab3@12678>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002AE1E <AmiBlitz3_noFPU_r470.ab3@12680>    TST.b debugmode
0002AE22 <AmiBlitz3_noFPU_r470.ab3@12681>    BEQ.w 'skip
0002AE26 <AmiBlitz3_noFPU_r470.ab3@12682>    MOVE.w #$c320,D1
0002AE2C <AmiBlitz3_noFPU_r470.ab3@12683>    JSR Atokejsr
0002AE2E <AmiBlitz3_noFPU_r470.ab3@12687>   MOVEQ.l #$00,D3
0002AE32 <AmiBlitz3_noFPU_r470.ab3@12690>   CMP.w #$5C,D0
0002AE36 <AmiBlitz3_noFPU_r470.ab3@12691>    BNE.w calcvar__done
0002AE3E <AmiBlitz3_noFPU_r470.ab3@12692>   CMPI.l #$100,$4(A2)
0002AE42 <AmiBlitz3_noFPU_r470.ab3@12693>    BCS.w rongtypeerr
0002AE44 <AmiBlitz3_noFPU_r470.ab3@12694>   MOVE.w D2,-(A7)
0002AE48 <AmiBlitz3_noFPU_r470.ab3@12695>    BSR.w getparameter2
0002AE4C <AmiBlitz3_noFPU_r470.ab3@12696>    BEQ.w syntaxerr
0002AE4E <AmiBlitz3_noFPU_r470.ab3@12697>   ADDQ.w #4,A2
0002AE52 <AmiBlitz3_noFPU_r470.ab3@12698>    BSR.w findvariable2
0002AE56 <AmiBlitz3_noFPU_r470.ab3@12699>    BNE.w noofferr
0002AE58 <AmiBlitz3_noFPU_r470.ab3@12700>   MOVE.w (A7)+,D2
0002AE5A <AmiBlitz3_noFPU_r470.ab3@12701>   MOVEA.l A2,A3                                             ;pointer to offset
0002AE5E <AmiBlitz3_noFPU_r470.ab3@12702>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002AE60 <AmiBlitz3_noFPU_r470.ab3@12703>   MOVEQ #0,d1
0002AE64 <AmiBlitz3_noFPU_r470.ab3@12704>   MOVE.w 4(a3),d1
0002AE66 <AmiBlitz3_noFPU_r470.ab3@12705>   ADD.l d1,d3
0002AE6C <AmiBlitz3_noFPU_r470.ab3@12707>   MOVE.l A3,lastoffset_org
0002AE70 <AmiBlitz3_noFPU_r470.ab3@12708>   CMP.w #$5B,D0
0002AE74 <AmiBlitz3_noFPU_r470.ab3@12709>    BNE.w calcvar__realdone
0002AE7A <AmiBlitz3_noFPU_r470.ab3@12710>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002AE7E <AmiBlitz3_noFPU_r470.ab3@12711>    BEQ.w rongtypeerr
0002AE82 <AmiBlitz3_noFPU_r470.ab3@12712>    BSR.w JL_0_9004
0002AE86 <AmiBlitz3_noFPU_r470.ab3@12713>   MOVEM.l A2-A3,-(A7)
0002AE8C <AmiBlitz3_noFPU_r470.ab3@12714>   MOVE.w varmode,-(A7)
0002AE92 <AmiBlitz3_noFPU_r470.ab3@12715>   MOVE.l lastoffset_org,-(A7)
0002AE98 <AmiBlitz3_noFPU_r470.ab3@12716>   MOVE.w pusha2,D1
0002AE9C <AmiBlitz3_noFPU_r470.ab3@12717>    BSR.w writeword
0002AE9E <AmiBlitz3_noFPU_r470.ab3@12718>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002AEA8 <AmiBlitz3_noFPU_r470.ab3@12719>   MOVE.l destpointer,deststore
0002AEAE <AmiBlitz3_noFPU_r470.ab3@12720>    MOVE.l rightsidetype,-(a7)
0002AEB4 <AmiBlitz3_noFPU_r470.ab3@12721>    MOVE.l leftsidetype,-(a7)
0002AEBA <AmiBlitz3_noFPU_r470.ab3@12722>    CLR.l rightsidetype
0002AEC0 <AmiBlitz3_noFPU_r470.ab3@12723>    CLR.l leftsidetype
0002AEC4 <AmiBlitz3_noFPU_r470.ab3@12724>    BSR.w eval
0002AECA <AmiBlitz3_noFPU_r470.ab3@12725>    MOVE.l (a7)+,rightsidetype
0002AED0 <AmiBlitz3_noFPU_r470.ab3@12726>    MOVE.l (a7)+,leftsidetype
0002AED4 <AmiBlitz3_noFPU_r470.ab3@12727>   CMP.w #$5D,D0
0002AED8 <AmiBlitz3_noFPU_r470.ab3@12728>    BNE.w syntaxerr
0002AEDE <AmiBlitz3_noFPU_r470.ab3@12729>   TST.b fast                                               ;a2,-(a7) array
0002AEE2 <AmiBlitz3_noFPU_r470.ab3@12730>   BEQ calcvar__loop0_l10
0002AEE8 <AmiBlitz3_noFPU_r470.ab3@12734>   MOVE.l destpointer,d1
0002AEEE <AmiBlitz3_noFPU_r470.ab3@12735>   SUB.l deststore,d1
0002AEF4 <AmiBlitz3_noFPU_r470.ab3@12736>   CMP.l #4,d1
0002AEF8 <AmiBlitz3_noFPU_r470.ab3@12737>   BNE calcvar__loop0_l10
0002AEFE <AmiBlitz3_noFPU_r470.ab3@12738>   MOVE.l destpointer,a4
0002AF04 <AmiBlitz3_noFPU_r470.ab3@12739>   MOVE.l -4(a4),-6(a4)
0002AF0A <AmiBlitz3_noFPU_r470.ab3@12740>   SUBQ.l #2,destpointer
0002AF10 <AmiBlitz3_noFPU_r470.ab3@12741>   CLR.l imm_addr
0002AF16 <AmiBlitz3_noFPU_r470.ab3@12742>   CLR.l load_var_addr
0002AF1A <AmiBlitz3_noFPU_r470.ab3@12743> BRA calcvar__loop0_l20
0002AF20 <AmiBlitz3_noFPU_r470.ab3@12746>   MOVE.w pulla2,D1
0002AF24 <AmiBlitz3_noFPU_r470.ab3@12747>    BSR.w writeword
0002AF2A <AmiBlitz3_noFPU_r470.ab3@12750>   MOVE.l (A7)+,lastoffset_org
0002AF30 <AmiBlitz3_noFPU_r470.ab3@12751>   MOVE.w (A7)+,varmode
0002AF34 <AmiBlitz3_noFPU_r470.ab3@12752>   MOVEM.l (A7)+,A2-A3
0002AF3A <AmiBlitz3_noFPU_r470.ab3@12758>   TST.w debugmode
0002AF3E <AmiBlitz3_noFPU_r470.ab3@12759>    BEQ.b calcvar__nobchk
0002AF42 <AmiBlitz3_noFPU_r470.ab3@12760>   MOVE.w $8(A3),D1
0002AF46 <AmiBlitz3_noFPU_r470.ab3@12761>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002AF4C <AmiBlitz3_noFPU_r470.ab3@12765>   MOVE.w D1,brchkcode+2
0002AF52 <AmiBlitz3_noFPU_r470.ab3@12766>   MOVE.w regnum,D1
0002AF54 <AmiBlitz3_noFPU_r470.ab3@12767>   LSL.w #8,D1
0002AF56 <AmiBlitz3_noFPU_r470.ab3@12768>   LSL.w #1,D1
0002AF5A <AmiBlitz3_noFPU_r470.ab3@12769>   OR.w brchkcode0(PC),D1
0002AF60 <AmiBlitz3_noFPU_r470.ab3@12770>   MOVE.w D1,brchkcode
0002AF64 <AmiBlitz3_noFPU_r470.ab3@12771>   MOVE.l brchkcode(PC),D1
0002AF68 <AmiBlitz3_noFPU_r470.ab3@12772>    BSR.w writelong
0002AF6C <AmiBlitz3_noFPU_r470.ab3@12773>   MOVE.l brchkcode+4(PC),D1
0002AF70 <AmiBlitz3_noFPU_r470.ab3@12774>    BSR.w writelong
0002AF74 <AmiBlitz3_noFPU_r470.ab3@12775>   MOVE.w brchkcode+8(PC),D1
0002AF78 <AmiBlitz3_noFPU_r470.ab3@12776>    BSR.w writeword
0002AF7A <AmiBlitz3_noFPU_r470.ab3@12779>   MOVEQ.l #$04,D1
0002AF80 <AmiBlitz3_noFPU_r470.ab3@12780>   BTST #$0,$7(A3)
0002AF84 <AmiBlitz3_noFPU_r470.ab3@12781>    BNE.w calcvar__dothemul
0002AF88 <AmiBlitz3_noFPU_r470.ab3@12782>   MOVE.w $8(A2),D1
0002AF8C <AmiBlitz3_noFPU_r470.ab3@12785>   BSR.w JL_0_B6DE
0002AF92 <AmiBlitz3_noFPU_r470.ab3@12786>   MOVE.w addrega2,D1
0002AF98 <AmiBlitz3_noFPU_r470.ab3@12787>   OR.w regnum,D1
0002AF9C <AmiBlitz3_noFPU_r470.ab3@12788>    OR.w #$100,d1                                           ;>32kb types
0002AFA0 <AmiBlitz3_noFPU_r470.ab3@12789>    BSR.w writeword
0002AFA4 <AmiBlitz3_noFPU_r470.ab3@12790>    BSR.w get1bytemain
0002AFA6 <AmiBlitz3_noFPU_r470.ab3@12791>   MOVEQ.l #$00,D3
0002AFAA <AmiBlitz3_noFPU_r470.ab3@12792>   MOVE.w #$8000,D2
0002AFB0 <AmiBlitz3_noFPU_r470.ab3@12795>   BTST #$0,$7(A3)
0002AFB4 <AmiBlitz3_noFPU_r470.ab3@12796>    BNE.w calcvar__pointer
0002AFB8 <AmiBlitz3_noFPU_r470.ab3@12797> BRA.w calcvar__loop0
0002AFBC <AmiBlitz3_noFPU_r470.ab3@12801>  CMP.w #$5C,D0
0002AFC0 <AmiBlitz3_noFPU_r470.ab3@12802>    BNE.w calcvar__done3
0002AFC2 <AmiBlitz3_noFPU_r470.ab3@12803>   TST.w D3
0002AFC6 <AmiBlitz3_noFPU_r470.ab3@12804>    BNE.w calcvar__pskip
0002AFCC <AmiBlitz3_noFPU_r470.ab3@12805>   MOVE.w movea0,D1
0002AFD0 <AmiBlitz3_noFPU_r470.ab3@12806>    BSR.w writeword
0002AFD4 <AmiBlitz3_noFPU_r470.ab3@12807> BRA.w calcvar__pmore
0002AFDA <AmiBlitz3_noFPU_r470.ab3@12810>   MOVE.w D3,movea0a0+2
0002AFE0 <AmiBlitz3_noFPU_r470.ab3@12811>   MOVE.l movea0a0,D1
0002AFE4 <AmiBlitz3_noFPU_r470.ab3@12812>    BSR.w writelong
0002AFEA <AmiBlitz3_noFPU_r470.ab3@12815>   BTST #$2,$7(A3)
0002AFEE <AmiBlitz3_noFPU_r470.ab3@12816>    BEQ.w calcvar__loopml
0002AFF4 <AmiBlitz3_noFPU_r470.ab3@12817>   MOVE.l adda0a0,D1
0002AFF8 <AmiBlitz3_noFPU_r470.ab3@12818>    BSR.w writelong
0002AFFC <AmiBlitz3_noFPU_r470.ab3@12819> BRA.w calcvar__loopml
0002B000 <AmiBlitz3_noFPU_r470.ab3@12822>   BSET #$E,D2
0002B006 <AmiBlitz3_noFPU_r470.ab3@12823>   BTST #$2,$7(A3)
0002B00A <AmiBlitz3_noFPU_r470.ab3@12824>    BNE.w calcvar__done
0002B00E <AmiBlitz3_noFPU_r470.ab3@12825>   BSET #$D,D2
0002B016 <AmiBlitz3_noFPU_r470.ab3@12828>   CMPI.l #$100,$4(A2)
0002B01A <AmiBlitz3_noFPU_r470.ab3@12829>    BCC.w calcvar__done2
0002B01E <AmiBlitz3_noFPU_r470.ab3@12830>   MOVE.b $7(A2),D2
0002B022 <AmiBlitz3_noFPU_r470.ab3@12833> BRA.w JL_0_9004
0002B026 <AmiBlitz3_noFPU_r470.ab3@12836>   MOVE.w $6(A2),D2
0002B02A <AmiBlitz3_noFPU_r470.ab3@12839>   MOVE.w $4(A3),D3
0002B030 <AmiBlitz3_noFPU_r470.ab3@12840>   BTST #$0,$7(A3)
0002B034 <AmiBlitz3_noFPU_r470.ab3@12841>    BEQ.w calcvar__nopoint
0002B038 <AmiBlitz3_noFPU_r470.ab3@12842>   BSET #$E,D2
0002B03A <AmiBlitz3_noFPU_r470.ab3@12845> RTS
0002B03E <AmiBlitz3_noFPU_r470.ab3@12849> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B042 <AmiBlitz3_noFPU_r470.ab3@12850> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B044 <AmiBlitz3_noFPU_r470.ab3@12851>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002B046 <AmiBlitz3_noFPU_r470.ab3@12852>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B048 <AmiBlitz3_noFPU_r470.ab3@12853>              Dc.b $4E,$40                                  ;TRAP    #00
0002B04E <AmiBlitz3_noFPU_r470.ab3@12861>   TST.w varmode
0002B052 <AmiBlitz3_noFPU_r470.ab3@12862>    BEQ.w writeword
0002B056 <AmiBlitz3_noFPU_r470.ab3@12863>   BCLR #$0,D1
0002B05A <AmiBlitz3_noFPU_r470.ab3@12864> BRA.w writeword
0002B060 <AmiBlitz3_noFPU_r470.ab3@12867>   TST.w varmode
0002B064 <AmiBlitz3_noFPU_r470.ab3@12868>    BEQ.w writeword
0002B068 <AmiBlitz3_noFPU_r470.ab3@12869>   BCLR #$9,D1
0002B06C <AmiBlitz3_noFPU_r470.ab3@12870> BRA.w writeword
0002B072 <AmiBlitz3_noFPU_r470.ab3@12873>   TST.w proceduremode
0002B076 <AmiBlitz3_noFPU_r470.ab3@12874>    BEQ.w writelong
0002B07A <AmiBlitz3_noFPU_r470.ab3@12875>   BCLR #$19,D1
0002B07E <AmiBlitz3_noFPU_r470.ab3@12876> BRA.w writelong
0002B084 <AmiBlitz3_noFPU_r470.ab3@12879>   TST.w varmode
0002B088 <AmiBlitz3_noFPU_r470.ab3@12880>   BEQ.w writelong
0002B08C <AmiBlitz3_noFPU_r470.ab3@12881>   BCLR #$10,D1
0002B092 <AmiBlitz3_noFPU_r470.ab3@12884>   ADDQ.l #1,destpointer
0002B09A <AmiBlitz3_noFPU_r470.ab3@12885>   BCLR #$0,destpointer+3
0002B0A0 <AmiBlitz3_noFPU_r470.ab3@12886>   MOVEA.l destpointer,A4
0002B0A6 <AmiBlitz3_noFPU_r470.ab3@12887>   CMPA.l destbufferend,A4
0002B0AA <AmiBlitz3_noFPU_r470.ab3@12888>    BCC.w writeword__overa
0002B0AC <AmiBlitz3_noFPU_r470.ab3@12889>   MOVE.l D1,(A4)+
0002B0B2 <AmiBlitz3_noFPU_r470.ab3@12892>   MOVE.l A4,destpointer
0002B0B6 <AmiBlitz3_noFPU_r470.ab3@12893>   CMPA.l bigpc(PC),A4
0002B0BA <AmiBlitz3_noFPU_r470.ab3@12894>    BHI.w writeword__nbp
0002B0BC <AmiBlitz3_noFPU_r470.ab3@12895> RTS
0002B0C4 <AmiBlitz3_noFPU_r470.ab3@12898>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B0CA <AmiBlitz3_noFPU_r470.ab3@12899>   CLR.b fast
0002B0D0 <AmiBlitz3_noFPU_r470.ab3@12900>   CLR.b fpu
0002B0D6 <AmiBlitz3_noFPU_r470.ab3@12901>   CLR.b iee
0002B0D8 <AmiBlitz3_noFPU_r470.ab3@12902>   ADDQ.w #4,A4
0002B0DC <AmiBlitz3_noFPU_r470.ab3@12903> BRA.w writeword__msa
0002B0E2 <AmiBlitz3_noFPU_r470.ab3@12909>   ADDQ.l #1,destpointer
0002B0EA <AmiBlitz3_noFPU_r470.ab3@12910>   BCLR #$0,destpointer+3
0002B0F0 <AmiBlitz3_noFPU_r470.ab3@12911>   MOVEA.l destpointer,A4
0002B0F6 <AmiBlitz3_noFPU_r470.ab3@12912>   CMPA.l destbufferend,A4
0002B0FA <AmiBlitz3_noFPU_r470.ab3@12913>    BCC.w writeword__over
0002B0FC <AmiBlitz3_noFPU_r470.ab3@12914>   MOVE.w D1,(A4)+
0002B102 <AmiBlitz3_noFPU_r470.ab3@12917>   MOVE.l A4,destpointer
0002B106 <AmiBlitz3_noFPU_r470.ab3@12918>   CMPA.l bigpc(PC),A4
0002B10A <AmiBlitz3_noFPU_r470.ab3@12919>    BHI.w writeword__nbp
0002B10C <AmiBlitz3_noFPU_r470.ab3@12920> RTS
0002B112 <AmiBlitz3_noFPU_r470.ab3@12923>   ADDQ.l #1,destpointer
0002B11A <AmiBlitz3_noFPU_r470.ab3@12924>   BCLR #$0,destpointer+3
0002B120 <AmiBlitz3_noFPU_r470.ab3@12925>   MOVEA.l destpointer,A4
0002B126 <AmiBlitz3_noFPU_r470.ab3@12926>   CMPA.l destbufferend,A4
0002B12A <AmiBlitz3_noFPU_r470.ab3@12927>    BCC.w writeword__over
0002B12C <AmiBlitz3_noFPU_r470.ab3@12928>   MOVE.w D1,(A4)+
0002B132 <AmiBlitz3_noFPU_r470.ab3@12929>   MOVE.l A4,destpointer
0002B136 <AmiBlitz3_noFPU_r470.ab3@12930>   CMPA.l bigpc(PC),A4
0002B13A <AmiBlitz3_noFPU_r470.ab3@12931>    BHI.w writeword__nbp
0002B13C <AmiBlitz3_noFPU_r470.ab3@12932> RTS
0002B142 <AmiBlitz3_noFPU_r470.ab3@12935>   TST.w cfetchmode
0002B146 <AmiBlitz3_noFPU_r470.ab3@12936>   BNE.w writeword__nbp2
0002B14C <AmiBlitz3_noFPU_r470.ab3@12937>   MOVE.l A4,bigpc
0002B14E <AmiBlitz3_noFPU_r470.ab3@12940> RTS
0002B156 <AmiBlitz3_noFPU_r470.ab3@12943>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B158 <AmiBlitz3_noFPU_r470.ab3@12944>   ADDQ.w #2,A4
0002B15E <AmiBlitz3_noFPU_r470.ab3@12945>   CLR.b fast
0002B164 <AmiBlitz3_noFPU_r470.ab3@12946>   CLR.b fpu
0002B16A <AmiBlitz3_noFPU_r470.ab3@12947>   CLR.b iee
0002B16E <AmiBlitz3_noFPU_r470.ab3@12948> BRA.w writeword__ms
0002B174 <AmiBlitz3_noFPU_r470.ab3@12952>   MOVEA.l destpointer,A4
0002B17A <AmiBlitz3_noFPU_r470.ab3@12953>   CMPA.l destbufferend,A4
0002B17E <AmiBlitz3_noFPU_r470.ab3@12954>    BCC.w writebyte__over
0002B180 <AmiBlitz3_noFPU_r470.ab3@12955>   MOVE.b D1,(A4)+
0002B186 <AmiBlitz3_noFPU_r470.ab3@12958>   MOVE.l A4,destpointer
0002B18A <AmiBlitz3_noFPU_r470.ab3@12959>   CMPA.l bigpc(PC),A4
0002B18E <AmiBlitz3_noFPU_r470.ab3@12960>    BHI.w writebyte__nbp
0002B190 <AmiBlitz3_noFPU_r470.ab3@12961> RTS
0002B196 <AmiBlitz3_noFPU_r470.ab3@12964>   TST.w cfetchmode
0002B19A <AmiBlitz3_noFPU_r470.ab3@12965>    BNE.w writebyte__nbp2
0002B1A0 <AmiBlitz3_noFPU_r470.ab3@12966>   MOVE.l A4,bigpc
0002B1A2 <AmiBlitz3_noFPU_r470.ab3@12969> RTS
0002B1AA <AmiBlitz3_noFPU_r470.ab3@12972>   MOVE.w #-1,dontwrite
0002B1AC <AmiBlitz3_noFPU_r470.ab3@12973>   ADDQ.w #1,A4
0002B1B2 <AmiBlitz3_noFPU_r470.ab3@12974>   CLR.b fast
0002B1B8 <AmiBlitz3_noFPU_r470.ab3@12975>   CLR.b fpu
0002B1BE <AmiBlitz3_noFPU_r470.ab3@12976>   CLR.b iee
0002B1C2 <AmiBlitz3_noFPU_r470.ab3@12977> BRA.w writebyte__ms
0002B1C6 <AmiBlitz3_noFPU_r470.ab3@12980> bigpc:   Ds.l 1
0002B1C8 <AmiBlitz3_noFPU_r470.ab3@12984>   MOVE.w (A0)+,D1
0002B1CC <AmiBlitz3_noFPU_r470.ab3@12985>   BSR.w writeword
0002B1CE <AmiBlitz3_noFPU_r470.ab3@12988>     CMPA.l A1,A0
0002B1D2 <AmiBlitz3_noFPU_r470.ab3@12989>     BCC.w pokecode__done
0002B1D4 <AmiBlitz3_noFPU_r470.ab3@12990>       MOVE.w (A0)+,D1
0002B1D8 <AmiBlitz3_noFPU_r470.ab3@12991>       BSR.w writeword
0002B1DC <AmiBlitz3_noFPU_r470.ab3@12992> BRA.w pokecode__loop
0002B1DE <AmiBlitz3_noFPU_r470.ab3@12995> RTS
0002B1E0 <AmiBlitz3_noFPU_r470.ab3@12998>   MOVE.w (A0)+,D1
0002B1E4 <AmiBlitz3_noFPU_r470.ab3@12999>   BSR.w writeword
0002B1E6 <AmiBlitz3_noFPU_r470.ab3@13000>   CMPA.l A1,A0
0002B1EA <AmiBlitz3_noFPU_r470.ab3@13001>   BCS.w pokecode2
0002B1EC <AmiBlitz3_noFPU_r470.ab3@13002> RTS
0002B1F2 <AmiBlitz3_noFPU_r470.ab3@13008>   TST.b iniffcommand
0002B1F6 <AmiBlitz3_noFPU_r470.ab3@13009>   BEQ 'l1
0002B1FA <AmiBlitz3_noFPU_r470.ab3@13010>     MOVE.w #$4880,D1
0002B200 <AmiBlitz3_noFPU_r470.ab3@13011>     OR.w regnum,D1
0002B204 <AmiBlitz3_noFPU_r470.ab3@13012>     BSR writeword
0002B206 <AmiBlitz3_noFPU_r470.ab3@13015> RTS
0002B20A <AmiBlitz3_noFPU_r470.ab3@13018>   BSR.w convert_byte_to_word
0002B210 <AmiBlitz3_noFPU_r470.ab3@13021>   TST.b iee
0002B214 <AmiBlitz3_noFPU_r470.ab3@13022>   BEQ 'old
0002B218 <AmiBlitz3_noFPU_r470.ab3@13023>   CMP.b #5,d2
0002B21C <AmiBlitz3_noFPU_r470.ab3@13024>   BEQ wtof
0002B220 <AmiBlitz3_noFPU_r470.ab3@13027>   MOVE.w #$48C0,D1
0002B226 <AmiBlitz3_noFPU_r470.ab3@13028>   OR.w regnum,D1
0002B22A <AmiBlitz3_noFPU_r470.ab3@13029> BRA.w writeword
0002B22C <AmiBlitz3_noFPU_r470.ab3@13032>   MOVEQ #0,d0
0002B232 <AmiBlitz3_noFPU_r470.ab3@13033>   MOVE.w regnum,d0
0002B234 <AmiBlitz3_noFPU_r470.ab3@13034>   ASL.l #7,d0
0002B23A <AmiBlitz3_noFPU_r470.ab3@13035>   MOVE.l #$f2005000,d1
0002B23C <AmiBlitz3_noFPU_r470.ab3@13036>   OR.l d0,d1
0002B23E <AmiBlitz3_noFPU_r470.ab3@13037>   ASL.l #1,d0
0002B240 <AmiBlitz3_noFPU_r470.ab3@13038>   ASL.l #8,d0
0002B242 <AmiBlitz3_noFPU_r470.ab3@13039>   OR.l d0,d1
0002B246 <AmiBlitz3_noFPU_r470.ab3@13040> BRA writelong
0002B24A <AmiBlitz3_noFPU_r470.ab3@13044>   BSR.w convert_byte_to_word
0002B24E <AmiBlitz3_noFPU_r470.ab3@13047>   MOVE.w #$4840,D1
0002B254 <AmiBlitz3_noFPU_r470.ab3@13048>   OR.w regnum,D1
0002B258 <AmiBlitz3_noFPU_r470.ab3@13049>    BSR.w writeword
0002B25C <AmiBlitz3_noFPU_r470.ab3@13050>   MOVE.w #$4240,D1
0002B262 <AmiBlitz3_noFPU_r470.ab3@13051>   OR.w regnum,D1
0002B266 <AmiBlitz3_noFPU_r470.ab3@13052> BRA.w writeword
0002B26A <AmiBlitz3_noFPU_r470.ab3@13056>   CMP.w #$ffdc,d1
0002B26E <AmiBlitz3_noFPU_r470.ab3@13057>   BNE 'negfpu
0002B270 <AmiBlitz3_noFPU_r470.ab3@13058>   MOVEQ #0,d0
0002B276 <AmiBlitz3_noFPU_r470.ab3@13059>   MOVE.w regnum,d0
0002B278 <AmiBlitz3_noFPU_r470.ab3@13060>   ASL.l #7,d0
0002B27E <AmiBlitz3_noFPU_r470.ab3@13061>   MOVE.l #$f2004000,d1
0002B280 <AmiBlitz3_noFPU_r470.ab3@13062>   OR.l d0,d1
0002B282 <AmiBlitz3_noFPU_r470.ab3@13063>   ASL.l #1,d0
0002B284 <AmiBlitz3_noFPU_r470.ab3@13064>   ASL.l #8,d0
0002B286 <AmiBlitz3_noFPU_r470.ab3@13065>   OR.l d0,d1
0002B28A <AmiBlitz3_noFPU_r470.ab3@13066> BRA writelong
0002B28C <AmiBlitz3_noFPU_r470.ab3@13070>   MOVEQ #0,d1
0002B292 <AmiBlitz3_noFPU_r470.ab3@13071>   MOVE.w regnum,d1                                         ;fpu neg
0002B294 <AmiBlitz3_noFPU_r470.ab3@13072>   ASL.l #7,d1
0002B29A <AmiBlitz3_noFPU_r470.ab3@13073>   OR.l #$f200001a,d1
0002B29C <AmiBlitz3_noFPU_r470.ab3@13074>   MOVE.l d0,-(a7)
0002B29E <AmiBlitz3_noFPU_r470.ab3@13075>   MOVEQ #0,d0
0002B2A4 <AmiBlitz3_noFPU_r470.ab3@13076>   MOVE.w regnum,d0
0002B2A6 <AmiBlitz3_noFPU_r470.ab3@13077>   ASL.l #8,d0
0002B2A8 <AmiBlitz3_noFPU_r470.ab3@13078>   ASL.l #2,d0
0002B2AA <AmiBlitz3_noFPU_r470.ab3@13079>   OR.l d0,d1
0002B2AC <AmiBlitz3_noFPU_r470.ab3@13080>   MOVE.l (a7)+,d0
0002B2B0 <AmiBlitz3_noFPU_r470.ab3@13081> BRA writelong
0002B2B6 <AmiBlitz3_noFPU_r470.ab3@13084>    TST.b iee
0002B2BA <AmiBlitz3_noFPU_r470.ab3@13085>    BNE wtof
0002B2BE <AmiBlitz3_noFPU_r470.ab3@13086>    BSR.w convert_byte_to_long
0002B2C2 <AmiBlitz3_noFPU_r470.ab3@13089>    MOVE.w #$FFDC,D1
0002B2C8 <AmiBlitz3_noFPU_r470.ab3@13092>    TST.b iee
0002B2CC <AmiBlitz3_noFPU_r470.ab3@13093>    BNE ltof
0002B2D2 <AmiBlitz3_noFPU_r470.ab3@13094>    MOVE.w D1,libjsr+2
0002B2D6 <AmiBlitz3_noFPU_r470.ab3@13095>    BSR.w JL_0_AD40
0002B2D8 <AmiBlitz3_noFPU_r470.ab3@13096>   MOVE.l D4,D1
0002B2DC <AmiBlitz3_noFPU_r470.ab3@13097>    BSR.w JL_0_AD38
0002B2E0 <AmiBlitz3_noFPU_r470.ab3@13098>   MOVE.w #$C900,D1
0002B2E4 <AmiBlitz3_noFPU_r470.ab3@13099>    BSR.w Atokejsr
0002B2E8 <AmiBlitz3_noFPU_r470.ab3@13100>    BSR.w JL_0_A352
0002B2EE <AmiBlitz3_noFPU_r470.ab3@13101>   MOVE.l libjsr,D1
0002B2F2 <AmiBlitz3_noFPU_r470.ab3@13102>    BSR.w writelong
0002B2F6 <AmiBlitz3_noFPU_r470.ab3@13103>    BSR.w JL_0_A36E
0002B2F8 <AmiBlitz3_noFPU_r470.ab3@13104>   MOVE.l D5,D1
0002B2FC <AmiBlitz3_noFPU_r470.ab3@13105> BRA.w JL_0_AD38
0002B2FE <AmiBlitz3_noFPU_r470.ab3@13108> RTS
0002B302 <AmiBlitz3_noFPU_r470.ab3@13111>   MOVE.w #$C317,D1
0002B308 <AmiBlitz3_noFPU_r470.ab3@13112>   TST.b typecheck
0002B30C <AmiBlitz3_noFPU_r470.ab3@13113>   BEQ 'l1
0002B312 <AmiBlitz3_noFPU_r470.ab3@13114>    TST.b notypecheck
0002B316 <AmiBlitz3_noFPU_r470.ab3@13115>    BNE 'l1
0002B31C <AmiBlitz3_noFPU_r470.ab3@13116>    TST.l lasttoken
0002B322 <AmiBlitz3_noFPU_r470.ab3@13123>   TST.b debugmode
0002B326 <AmiBlitz3_noFPU_r470.ab3@13124>    BEQ.w JL_0_9696
0002B32E <AmiBlitz3_noFPU_r470.ab3@13125>   BTST #$7,overflowcheck
0002B332 <AmiBlitz3_noFPU_r470.ab3@13126>    BEQ.w JL_0_9696
0002B338 <AmiBlitz3_noFPU_r470.ab3@13127>   TST.w cfetchmode
0002B33C <AmiBlitz3_noFPU_r470.ab3@13128>    BNE.w JL_0_9696
0002B342 <AmiBlitz3_noFPU_r470.ab3@13129>   TST.w regnum
0002B346 <AmiBlitz3_noFPU_r470.ab3@13130>    BEQ.w JL_0_968A
0002B348 <AmiBlitz3_noFPU_r470.ab3@13131>   MOVE.w D1,-(A7)
0002B34C <AmiBlitz3_noFPU_r470.ab3@13132>   MOVE.w JL_0_9698(PC),D1
0002B350 <AmiBlitz3_noFPU_r470.ab3@13133>    BSR.w writeword
0002B356 <AmiBlitz3_noFPU_r470.ab3@13134>   MOVE.w regnum,D1
0002B35A <AmiBlitz3_noFPU_r470.ab3@13135>   OR.w L_0_969C(PC),D1
0002B35E <AmiBlitz3_noFPU_r470.ab3@13136>    BSR.w writeword
0002B360 <AmiBlitz3_noFPU_r470.ab3@13137>   MOVE.w (A7)+,D1
0002B364 <AmiBlitz3_noFPU_r470.ab3@13138>    BSR.w JL_0_968A
0002B368 <AmiBlitz3_noFPU_r470.ab3@13139>   MOVE.w L_0_969A(PC),D1
0002B36C <AmiBlitz3_noFPU_r470.ab3@13140> BRA.w writeword
0002B370 <AmiBlitz3_noFPU_r470.ab3@13144>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B374 <AmiBlitz3_noFPU_r470.ab3@13145>    BSR.w Atokejsr
0002B378 <AmiBlitz3_noFPU_r470.ab3@13146>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B37A <AmiBlitz3_noFPU_r470.ab3@13149> RTS
0002B37C <AmiBlitz3_noFPU_r470.ab3@13152>   MOVE.l D0,-(A7)
0002B37E <AmiBlitz3_noFPU_r470.ab3@13155>   MOVE.l (A7)+,D0
0002B380 <AmiBlitz3_noFPU_r470.ab3@13158>   MOVE.l D0,D0
0002B384 <AmiBlitz3_noFPU_r470.ab3@13161>   BSR.w convert_word_to_long
0002B38A <AmiBlitz3_noFPU_r470.ab3@13162>   TST.b iee
0002B38E <AmiBlitz3_noFPU_r470.ab3@13163>   BEQ 'old
0002B392 <AmiBlitz3_noFPU_r470.ab3@13164>   CMP.b #5,d2
0002B396 <AmiBlitz3_noFPU_r470.ab3@13165>   BNE 'old
0002B398 <AmiBlitz3_noFPU_r470.ab3@13166> RTS
0002B39C <AmiBlitz3_noFPU_r470.ab3@13169> BRA.w JL_0_9600
0002B3A0 <AmiBlitz3_noFPU_r470.ab3@13173>   MOVE.w #$C316,D1
0002B3A6 <AmiBlitz3_noFPU_r470.ab3@13174>   TST.b typecheck
0002B3AA <AmiBlitz3_noFPU_r470.ab3@13175>   BEQ 'l1
0002B3B0 <AmiBlitz3_noFPU_r470.ab3@13176>   TST.b peekaddrsize
0002B3B4 <AmiBlitz3_noFPU_r470.ab3@13177>   BNE 'l1
0002B3BA <AmiBlitz3_noFPU_r470.ab3@13178>   TST.b notypecheck
0002B3BE <AmiBlitz3_noFPU_r470.ab3@13179>   BNE 'l1
0002B3C4 <AmiBlitz3_noFPU_r470.ab3@13180>   TST.l lasttoken
0002B3C8 <AmiBlitz3_noFPU_r470.ab3@13186> BRA.w JL_0_963A
0002B3CC <AmiBlitz3_noFPU_r470.ab3@13190>   MOVE.w #$C318,D1
0002B3D2 <AmiBlitz3_noFPU_r470.ab3@13191>   TST.b typecheck
0002B3D6 <AmiBlitz3_noFPU_r470.ab3@13192>   BEQ 'l1
0002B3DC <AmiBlitz3_noFPU_r470.ab3@13193>   TST.b peekaddrsize
0002B3E0 <AmiBlitz3_noFPU_r470.ab3@13194>   BNE 'l1
0002B3E6 <AmiBlitz3_noFPU_r470.ab3@13195>   TST.b notypecheck
0002B3EA <AmiBlitz3_noFPU_r470.ab3@13196>   BNE 'l1
0002B3F0 <AmiBlitz3_noFPU_r470.ab3@13197>   TST.l lasttoken
0002B3F4 <AmiBlitz3_noFPU_r470.ab3@13203> BRA.w JL_0_963A
0002B3F8 <AmiBlitz3_noFPU_r470.ab3@13207>   MOVE.w #$C318,D1
0002B3FE <AmiBlitz3_noFPU_r470.ab3@13208>   TST.b typecheck
0002B402 <AmiBlitz3_noFPU_r470.ab3@13209>   BEQ 'l1
0002B408 <AmiBlitz3_noFPU_r470.ab3@13210>   TST.b notypecheck
0002B40C <AmiBlitz3_noFPU_r470.ab3@13211>   BNE 'l1
0002B412 <AmiBlitz3_noFPU_r470.ab3@13212>   TST.l lasttoken
0002B416 <AmiBlitz3_noFPU_r470.ab3@13218>   BSR.w JL_0_963A
0002B41A <AmiBlitz3_noFPU_r470.ab3@13219> BRA.w convert_word_to_quick
0002B41E <AmiBlitz3_noFPU_r470.ab3@13223> BRA.w JL_0_9600
0002B420 <AmiBlitz3_noFPU_r470.ab3@13227> RTS
0002B424 <AmiBlitz3_noFPU_r470.ab3@13231>   MOVE.w #$C319,D1
0002B42A <AmiBlitz3_noFPU_r470.ab3@13232>   TST.b typecheck
0002B42E <AmiBlitz3_noFPU_r470.ab3@13233>   BEQ 'l1
0002B434 <AmiBlitz3_noFPU_r470.ab3@13234>   TST.b notypecheck
0002B438 <AmiBlitz3_noFPU_r470.ab3@13235>   BNE 'l1
0002B43E <AmiBlitz3_noFPU_r470.ab3@13236>   TST.l lasttoken
0002B442 <AmiBlitz3_noFPU_r470.ab3@13243>   BSR.w JL_0_963A
0002B446 <AmiBlitz3_noFPU_r470.ab3@13246>   MOVE.w #$4240,D1
0002B44C <AmiBlitz3_noFPU_r470.ab3@13247>   OR.w regnum,D1
0002B450 <AmiBlitz3_noFPU_r470.ab3@13248>   BSR.w writeword
0002B454 <AmiBlitz3_noFPU_r470.ab3@13249>   MOVE.w #$4840,D1
0002B45A <AmiBlitz3_noFPU_r470.ab3@13250>   OR.w regnum,D1
0002B45E <AmiBlitz3_noFPU_r470.ab3@13251> BRA.w writeword
0002B462 <AmiBlitz3_noFPU_r470.ab3@13255> BRA.w JL_0_96D0
0002B466 <AmiBlitz3_noFPU_r470.ab3@13259>   BSR.w JL_0_96D0
0002B46A <AmiBlitz3_noFPU_r470.ab3@13260> BRA.w convert_word_to_long
0002B46C <AmiBlitz3_noFPU_r470.ab3@13265>   MOVEQ #0,d0
0002B472 <AmiBlitz3_noFPU_r470.ab3@13266>   MOVE.w regnum,d0
0002B474 <AmiBlitz3_noFPU_r470.ab3@13267>   ASL.l #7,d0
0002B47A <AmiBlitz3_noFPU_r470.ab3@13268>   MOVE.l #$f2004000,d1
0002B47C <AmiBlitz3_noFPU_r470.ab3@13269>   OR.l d0,d1
0002B47E <AmiBlitz3_noFPU_r470.ab3@13270>   ASL.l #1,d0
0002B480 <AmiBlitz3_noFPU_r470.ab3@13271>   ASL.l #8,d0
0002B482 <AmiBlitz3_noFPU_r470.ab3@13272>   OR.l d0,d1
0002B486 <AmiBlitz3_noFPU_r470.ab3@13273>   BSR writelong
0002B48C <AmiBlitz3_noFPU_r470.ab3@13274>   MOVE.w regnum,d0
0002B48E <AmiBlitz3_noFPU_r470.ab3@13275>   ASL.l #7,d0
0002B494 <AmiBlitz3_noFPU_r470.ab3@13276>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B496 <AmiBlitz3_noFPU_r470.ab3@13277>   OR.w d0,d1
0002B49A <AmiBlitz3_noFPU_r470.ab3@13278>   BSR writelong
0002B4A0 <AmiBlitz3_noFPU_r470.ab3@13279>   MOVE.l #$37800000,d1
0002B4A4 <AmiBlitz3_noFPU_r470.ab3@13280>   BSR writelong
0002B4A6 <AmiBlitz3_noFPU_r470.ab3@13281> RTS
0002B4AC <AmiBlitz3_noFPU_r470.ab3@13285>   TST.b iee
0002B4B0 <AmiBlitz3_noFPU_r470.ab3@13286>   BNE qtof
0002B4B4 <AmiBlitz3_noFPU_r470.ab3@13287>   MOVE.w #$D300,D1
0002B4B6 <AmiBlitz3_noFPU_r470.ab3@13290>   MOVE.w D1,-(A7)
0002B4BA <AmiBlitz3_noFPU_r470.ab3@13291>    BSR.w JL_0_AD40
0002B4BC <AmiBlitz3_noFPU_r470.ab3@13292>   MOVE.l D4,D1
0002B4C0 <AmiBlitz3_noFPU_r470.ab3@13293>    BSR.w JL_0_AD38
0002B4C4 <AmiBlitz3_noFPU_r470.ab3@13294>    BSR.w JL_0_A352
0002B4C6 <AmiBlitz3_noFPU_r470.ab3@13295>   MOVE.w (A7)+,D1
0002B4CA <AmiBlitz3_noFPU_r470.ab3@13296>    BSR.w Atokejsr
0002B4CE <AmiBlitz3_noFPU_r470.ab3@13297>    BSR.w JL_0_A36E
0002B4D0 <AmiBlitz3_noFPU_r470.ab3@13298>   MOVE.l D5,D1
0002B4D4 <AmiBlitz3_noFPU_r470.ab3@13299> BRA.w JL_0_AD38
0002B4D6 <AmiBlitz3_noFPU_r470.ab3@13303> RTS
0002B4DC <AmiBlitz3_noFPU_r470.ab3@13306>   TST.b typecheck
0002B4E0 <AmiBlitz3_noFPU_r470.ab3@13307>   BEQ 'l1
0002B4E6 <AmiBlitz3_noFPU_r470.ab3@13308>   TST.b notypecheck
0002B4EA <AmiBlitz3_noFPU_r470.ab3@13309>   BNE 'l1
0002B4F0 <AmiBlitz3_noFPU_r470.ab3@13310>   TST.l lasttoken
0002B4F6 <AmiBlitz3_noFPU_r470.ab3@13315>   TST.b iee
0002B4FA <AmiBlitz3_noFPU_r470.ab3@13316>   BNE ftol
0002B4FE <AmiBlitz3_noFPU_r470.ab3@13317>   MOVE.w #$C31A,D1
0002B502 <AmiBlitz3_noFPU_r470.ab3@13318>   BSR.w JL_0_963A
0002B506 <AmiBlitz3_noFPU_r470.ab3@13319>   BSR.w JL_0_974A
0002B50A <AmiBlitz3_noFPU_r470.ab3@13320> BRA.w convert_long_to_byte
0002B50C <AmiBlitz3_noFPU_r470.ab3@13324> RTS
0002B512 <AmiBlitz3_noFPU_r470.ab3@13327>   TST.b typecheck
0002B516 <AmiBlitz3_noFPU_r470.ab3@13328>   BEQ 'l1
0002B51C <AmiBlitz3_noFPU_r470.ab3@13329>   TST.b notypecheck
0002B520 <AmiBlitz3_noFPU_r470.ab3@13330>   BNE 'l1
0002B526 <AmiBlitz3_noFPU_r470.ab3@13331>   TST.l lasttoken
0002B52C <AmiBlitz3_noFPU_r470.ab3@13336>   TST.b iee
0002B530 <AmiBlitz3_noFPU_r470.ab3@13337>   BNE ftol
0002B534 <AmiBlitz3_noFPU_r470.ab3@13338>   MOVE.w #$C31B,D1
0002B538 <AmiBlitz3_noFPU_r470.ab3@13339>   BSR.w JL_0_963A
0002B53C <AmiBlitz3_noFPU_r470.ab3@13340>   BSR.w JL_0_974A
0002B540 <AmiBlitz3_noFPU_r470.ab3@13341> BRA.w convert_long_to_word
0002B542 <AmiBlitz3_noFPU_r470.ab3@13345> RTS
0002B548 <AmiBlitz3_noFPU_r470.ab3@13348>   TST.b iee
0002B54C <AmiBlitz3_noFPU_r470.ab3@13349>   BNE ftol
0002B550 <AmiBlitz3_noFPU_r470.ab3@13350>   MOVE.w #$C31C,D1
0002B554 <AmiBlitz3_noFPU_r470.ab3@13351>   BSR.w JL_0_963A
0002B558 <AmiBlitz3_noFPU_r470.ab3@13354>   MOVE.w #$FFE2,D1
0002B55C <AmiBlitz3_noFPU_r470.ab3@13355> BRA.w JL_0_9604
0002B55E <AmiBlitz3_noFPU_r470.ab3@13358>   MOVE.l d0,-(a7)
0002B560 <AmiBlitz3_noFPU_r470.ab3@13359>   MOVEQ #0,d0
0002B566 <AmiBlitz3_noFPU_r470.ab3@13360>   MOVE.w regnum,d0
0002B568 <AmiBlitz3_noFPU_r470.ab3@13361>   ASL.l #7,d0
0002B56E <AmiBlitz3_noFPU_r470.ab3@13362>   MOVE.l #$f2006000,d1
0002B570 <AmiBlitz3_noFPU_r470.ab3@13363>   OR.l d0,d1
0002B572 <AmiBlitz3_noFPU_r470.ab3@13364>   ASL.l #1,d0
0002B574 <AmiBlitz3_noFPU_r470.ab3@13365>   ASL.l #8,d0
0002B576 <AmiBlitz3_noFPU_r470.ab3@13366>   OR.l d0,d1
0002B578 <AmiBlitz3_noFPU_r470.ab3@13367>   MOVE.l (a7)+,d0
0002B57C <AmiBlitz3_noFPU_r470.ab3@13368> BRA writelong
0002B57E <AmiBlitz3_noFPU_r470.ab3@13372>   MOVE.l d0,-(a7)
0002B580 <AmiBlitz3_noFPU_r470.ab3@13373>   MOVEQ #0,d0
0002B586 <AmiBlitz3_noFPU_r470.ab3@13374>   MOVE.l #$f23c4023,d1
0002B58C <AmiBlitz3_noFPU_r470.ab3@13375>   MOVE.w regnum,d0
0002B58E <AmiBlitz3_noFPU_r470.ab3@13376>   ASL.l #7,d0
0002B590 <AmiBlitz3_noFPU_r470.ab3@13377>   OR.l d0,d1
0002B594 <AmiBlitz3_noFPU_r470.ab3@13378>   BSR writelong
0002B59A <AmiBlitz3_noFPU_r470.ab3@13379>   MOVE.l #$00010000,d1
0002B59E <AmiBlitz3_noFPU_r470.ab3@13380>   BSR writelong
0002B5A4 <AmiBlitz3_noFPU_r470.ab3@13381>   MOVE.w regnum,d0
0002B5A6 <AmiBlitz3_noFPU_r470.ab3@13382>   ASL.l #7,d0
0002B5AC <AmiBlitz3_noFPU_r470.ab3@13383>   MOVE.l #$f2006000,d1
0002B5AE <AmiBlitz3_noFPU_r470.ab3@13384>   OR.l d0,d1
0002B5B0 <AmiBlitz3_noFPU_r470.ab3@13385>   ASL.l #1,d0
0002B5B2 <AmiBlitz3_noFPU_r470.ab3@13386>   ASL.l #8,d0
0002B5B4 <AmiBlitz3_noFPU_r470.ab3@13387>   OR.l d0,d1
0002B5B8 <AmiBlitz3_noFPU_r470.ab3@13388>   BSR writelong
0002B5BA <AmiBlitz3_noFPU_r470.ab3@13389>   MOVE.l (a7)+,d0
0002B5BC <AmiBlitz3_noFPU_r470.ab3@13390> RTS
0002B5BE <AmiBlitz3_noFPU_r470.ab3@13394> RTS
0002B5C4 <AmiBlitz3_noFPU_r470.ab3@13398>   TST.b iee
0002B5C8 <AmiBlitz3_noFPU_r470.ab3@13399>   BNE ftoq
0002B5CC <AmiBlitz3_noFPU_r470.ab3@13400>   MOVE.w #$C31B,D1
0002B5D0 <AmiBlitz3_noFPU_r470.ab3@13401>   BSR.w JL_0_963A
0002B5D4 <AmiBlitz3_noFPU_r470.ab3@13402>   MOVE.w #$D301,D1
0002B5D8 <AmiBlitz3_noFPU_r470.ab3@13403> BRA.w JL_0_96FC
0002B5DE <AmiBlitz3_noFPU_r470.ab3@13409>    TST.b blitzparloop
0002B5E2 <AmiBlitz3_noFPU_r470.ab3@13410>    BNE 'l1
0002B5E8 <AmiBlitz3_noFPU_r470.ab3@13411>    TST.b funcparloop
0002B5EC <AmiBlitz3_noFPU_r470.ab3@13412>    BNE 'l1
0002B5F0 <AmiBlitz3_noFPU_r470.ab3@13413>    BRA error_convert_types
0002B5F8 <AmiBlitz3_noFPU_r470.ab3@13416>   CMP.b #2,optistring
0002B5FC <AmiBlitz3_noFPU_r470.ab3@13417>   BEQ JLrts
0002B602 <AmiBlitz3_noFPU_r470.ab3@13418>   MOVE.w stol,D1
0002B606 <AmiBlitz3_noFPU_r470.ab3@13419>   BSR.w writeword
0002B60E <AmiBlitz3_noFPU_r470.ab3@13420>   CMPI.w #$2,sbgot
0002B612 <AmiBlitz3_noFPU_r470.ab3@13421>   BCS.w sbtolong
0002B616 <AmiBlitz3_noFPU_r470.ab3@13422>   MOVE.w ceos(PC),D1
0002B61A <AmiBlitz3_noFPU_r470.ab3@13423>   BSR.w writeword
0002B620 <AmiBlitz3_noFPU_r470.ab3@13426>   MOVE.w regnum,D1
0002B622 <AmiBlitz3_noFPU_r470.ab3@13427>   LSL.w #8,D1
0002B624 <AmiBlitz3_noFPU_r470.ab3@13428>   LSL.w #1,D1
0002B62C <AmiBlitz3_noFPU_r470.ab3@13429>   CMPI.w #$2,sbgot
0002B630 <AmiBlitz3_noFPU_r470.ab3@13430>   BCS.w JL_0_98E8
0002B636 <AmiBlitz3_noFPU_r470.ab3@13431>   MOVE.w a2offset,D3
0002B63C <AmiBlitz3_noFPU_r470.ab3@13432>   SUB.w thisstuse,D3
0002B640 <AmiBlitz3_noFPU_r470.ab3@13433>   CMP.w #$6,D3
0002B644 <AmiBlitz3_noFPU_r470.ab3@13434>   BNE.w JL_0_98D4b
0002B64A <AmiBlitz3_noFPU_r470.ab3@13435>   OR.w movestst2,D1
0002B64E <AmiBlitz3_noFPU_r470.ab3@13436>   BSR.w writeword
0002B654 <AmiBlitz3_noFPU_r470.ab3@13437>   LEA movestst2+2,A0
0002B65A <AmiBlitz3_noFPU_r470.ab3@13438>   LEA movestst2f,A1
0002B65E <AmiBlitz3_noFPU_r470.ab3@13439> BRA.w pokecode2
0002B664 <AmiBlitz3_noFPU_r470.ab3@13443>   OR.w movea7dn,D1
0002B668 <AmiBlitz3_noFPU_r470.ab3@13444>   BSR.w writeword
0002B66E <AmiBlitz3_noFPU_r470.ab3@13445>   MOVE.l #0,D1
0002B672 <AmiBlitz3_noFPU_r470.ab3@13446> BRA.w writeword
0002B678 <AmiBlitz3_noFPU_r470.ab3@13450>   ADDQ.w #1,fuckpos
0002B67C <AmiBlitz3_noFPU_r470.ab3@13451>   BSR.w writeconvertcode
0002B682 <AmiBlitz3_noFPU_r470.ab3@13452>   SUBQ.w #1,fuckpos
0002B684 <AmiBlitz3_noFPU_r470.ab3@13454> RTS
0002B686 <AmiBlitz3_noFPU_r470.ab3@13458>   MOVE.w D3,D1
0002B68A <AmiBlitz3_noFPU_r470.ab3@13459>   CMP.w #7,d1
0002B68E <AmiBlitz3_noFPU_r470.ab3@13460>   BLE 'ok
0002B694 <AmiBlitz3_noFPU_r470.ab3@13461>   JMP errorinternalconvert
0002B696 <AmiBlitz3_noFPU_r470.ab3@13462> 'ok  SUBQ.w #1,D1
0002B69A <AmiBlitz3_noFPU_r470.ab3@13463>   MULU #$7,D1
0002B69C <AmiBlitz3_noFPU_r470.ab3@13464>   ADD.w D2,D1
0002B69E <AmiBlitz3_noFPU_r470.ab3@13465>   SUBQ.w #1,D1
0002B6A0 <AmiBlitz3_noFPU_r470.ab3@13466>   LSL.w #2,D1
0002B6A6 <AmiBlitz3_noFPU_r470.ab3@13467>   LEA convtable,A0
0002B6AA <AmiBlitz3_noFPU_r470.ab3@13468>   MOVE.l $0(A0,D1.W),D1
0002B6AE <AmiBlitz3_noFPU_r470.ab3@13469>   BEQ.w JL_0_97A2
0002B6B0 <AmiBlitz3_noFPU_r470.ab3@13470>     MOVEA.l D1,A0
0002B6B4 <AmiBlitz3_noFPU_r470.ab3@13471>     CMP.b #$ff,d3
0002B6B8 <AmiBlitz3_noFPU_r470.ab3@13472>     BEQ JL_0_97A2
0002B6BA <AmiBlitz3_noFPU_r470.ab3@13473> JMP (A0)
0002B6BC <AmiBlitz3_noFPU_r470.ab3@13476> RTS
0002B6C0 <AmiBlitz3_noFPU_r470.ab3@13479> usedfrom:  Ds.l 1
0002B6C4 <AmiBlitz3_noFPU_r470.ab3@13486>   CMP.w #"\",D0
0002B6C8 <AmiBlitz3_noFPU_r470.ab3@13487>   BNE.w JL_0_97C2
0002B6CC <AmiBlitz3_noFPU_r470.ab3@13488>     CMP.b #"\",(a5)
0002B6D0 <AmiBlitz3_noFPU_r470.ab3@13489>     BNE 'first
0002B6D6 <AmiBlitz3_noFPU_r470.ab3@13490>       MOVE.l A5,usedfrom
0002B6DC <AmiBlitz3_noFPU_r470.ab3@13491>       LEA path2,A5
0002B6E0 <AmiBlitz3_noFPU_r470.ab3@13492> BRA 'g1
0002B6E2 <AmiBlitz3_noFPU_r470.ab3@13495>     SUBQ.w #1,A5
0002B6E8 <AmiBlitz3_noFPU_r470.ab3@13496>   MOVE.l A5,usedfrom
0002B6EE <AmiBlitz3_noFPU_r470.ab3@13497>   LEA usedpath,A5                                          ;read path
0002B6F2 <AmiBlitz3_noFPU_r470.ab3@13500>   BSR.w get1bytemain
0002B6F8 <AmiBlitz3_noFPU_r470.ab3@13503>   CLR.w flagmask
0002B6FC <AmiBlitz3_noFPU_r470.ab3@13504>   CMP.w #$2A,D0
0002B700 <AmiBlitz3_noFPU_r470.ab3@13505>    BNE.w JL_0_983A
0002B708 <AmiBlitz3_noFPU_r470.ab3@13506>   MOVE.w #$0001,flagmask
0002B70C <AmiBlitz3_noFPU_r470.ab3@13508>    BSR.w getparameter2
0002B710 <AmiBlitz3_noFPU_r470.ab3@13511>    BEQ.w syntaxerr
0002B714 <AmiBlitz3_noFPU_r470.ab3@13512>   CMP.w #$28,D0
0002B718 <AmiBlitz3_noFPU_r470.ab3@13513>    BEQ.w JL_0_9830
0002B71C <AmiBlitz3_noFPU_r470.ab3@13514>   CMP.w #$2E,D0
0002B720 <AmiBlitz3_noFPU_r470.ab3@13515>    BEQ.w JL_0_980C
0002B724 <AmiBlitz3_noFPU_r470.ab3@13516>   CMP.w #$24,D0
0002B728 <AmiBlitz3_noFPU_r470.ab3@13517>    BNE.w JL_0_9838
0002B730 <AmiBlitz3_noFPU_r470.ab3@13518>   ORI.w #$8,flagmask
0002B734 <AmiBlitz3_noFPU_r470.ab3@13519>    BSR.w storeloc
0002B738 <AmiBlitz3_noFPU_r470.ab3@13520>    BSR.w get1bytemain
0002B73C <AmiBlitz3_noFPU_r470.ab3@13521> BRA.w JL_0_9822
0002B740 <AmiBlitz3_noFPU_r470.ab3@13525>   BSR.w storeloc
0002B742 <AmiBlitz3_noFPU_r470.ab3@13526>   MOVE.w D2,-(A7)
0002B748 <AmiBlitz3_noFPU_r470.ab3@13527>   LEA namebuff2,A1
0002B74C <AmiBlitz3_noFPU_r470.ab3@13528>    BSR.w makename3
0002B750 <AmiBlitz3_noFPU_r470.ab3@13529>    BEQ.w syntaxerr
0002B752 <AmiBlitz3_noFPU_r470.ab3@13530>   MOVE.w (A7)+,D2
0002B754 <AmiBlitz3_noFPU_r470.ab3@13533>    MOVE.w D0,D1
0002B758 <AmiBlitz3_noFPU_r470.ab3@13534>    BSR.w resloc
0002B75C <AmiBlitz3_noFPU_r470.ab3@13535>    CMP.w #$28,D1
0002B760 <AmiBlitz3_noFPU_r470.ab3@13536>    BNE.w JL_0_9838
0002B768 <AmiBlitz3_noFPU_r470.ab3@13539>   ORI.w #$2,flagmask
0002B76A <AmiBlitz3_noFPU_r470.ab3@13542> RTS
0002B76E <AmiBlitz3_noFPU_r470.ab3@13546>   CMP.w #$40,D0
0002B772 <AmiBlitz3_noFPU_r470.ab3@13547>    BNE.w JL_0_984E
0002B77A <AmiBlitz3_noFPU_r470.ab3@13548>   MOVE.w #$0005,flagmask
0002B77E <AmiBlitz3_noFPU_r470.ab3@13549> BRA.w JL_0_97D8
0002B782 <AmiBlitz3_noFPU_r470.ab3@13553>   BSR.w makename2
0002B786 <AmiBlitz3_noFPU_r470.ab3@13554> BRA.w JL_0_97DC
0002B78A <AmiBlitz3_noFPU_r470.ab3@13558>   MOVE.w #$FED3,D1
0002B78E <AmiBlitz3_noFPU_r470.ab3@13559>    BSR.w uselib
0002B794 <AmiBlitz3_noFPU_r470.ab3@13560>   LEA pusha3,A0
0002B79A <AmiBlitz3_noFPU_r470.ab3@13561>   LEA pusha3f,A1
0002B79E <AmiBlitz3_noFPU_r470.ab3@13562> BRA.w pokecode
0002B7A2 <AmiBlitz3_noFPU_r470.ab3@13566>   MOVE.w #$FED3,D1
0002B7A6 <AmiBlitz3_noFPU_r470.ab3@13567>    BSR.w uselib
0002B7AC <AmiBlitz3_noFPU_r470.ab3@13568>   LEA pulla3,A0
0002B7B2 <AmiBlitz3_noFPU_r470.ab3@13569>   LEA pulla3f,A1
0002B7B6 <AmiBlitz3_noFPU_r470.ab3@13570> BRA.w pokecode
0002B7B8 <AmiBlitz3_noFPU_r470.ab3@13574> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002B7C0 <AmiBlitz3_noFPU_r470.ab3@13579>     CMP.b #2,optistring
0002B7C4 <AmiBlitz3_noFPU_r470.ab3@13580>    BEQ 'l10
0002B7C8 <AmiBlitz3_noFPU_r470.ab3@13581>    MOVE.w ceos(PC),D1
0002B7CC <AmiBlitz3_noFPU_r470.ab3@13582>    BSR.w writeword                                         ;clr.b (a3)
0002B7D2 <AmiBlitz3_noFPU_r470.ab3@13585>   MOVE.w regnum,D1
0002B7D4 <AmiBlitz3_noFPU_r470.ab3@13586>   LSL.w #8,D1
0002B7D6 <AmiBlitz3_noFPU_r470.ab3@13587>   LSL.w #1,D1
0002B7DE <AmiBlitz3_noFPU_r470.ab3@13588>   CMPI.w #$2,sbgot
0002B7E2 <AmiBlitz3_noFPU_r470.ab3@13589>    BCS.w JL_0_98E8
0002B7E8 <AmiBlitz3_noFPU_r470.ab3@13590>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002B7EE <AmiBlitz3_noFPU_r470.ab3@13591>   SUB.w thisstuse,D3
0002B7F2 <AmiBlitz3_noFPU_r470.ab3@13592>   CMP.w #$6,D3
0002B7F6 <AmiBlitz3_noFPU_r470.ab3@13593>    BNE.w JL_0_98D4
0002B7FC <AmiBlitz3_noFPU_r470.ab3@13594>   OR.w movestst2,D1
0002B800 <AmiBlitz3_noFPU_r470.ab3@13595>    BSR.w writeword
0002B806 <AmiBlitz3_noFPU_r470.ab3@13596>   LEA movestst2+2,A0
0002B80C <AmiBlitz3_noFPU_r470.ab3@13597>   LEA movestst2f,A1
0002B810 <AmiBlitz3_noFPU_r470.ab3@13598> BRA.w pokecode2
0002B816 <AmiBlitz3_noFPU_r470.ab3@13602>    OR.w movea7dn,D1
0002B81A <AmiBlitz3_noFPU_r470.ab3@13603>    BSR.w writeword
0002B820 <AmiBlitz3_noFPU_r470.ab3@13604>   MOVE.l movea7dn+2,D1
0002B824 <AmiBlitz3_noFPU_r470.ab3@13616>   BSR writelong
0002B82C <AmiBlitz3_noFPU_r470.ab3@13619>    CMP.w #6,regnum
0002B830 <AmiBlitz3_noFPU_r470.ab3@13620>    BEQ 'l1
0002B836 <AmiBlitz3_noFPU_r470.ab3@13621>    TST.w stackpar
0002B83A <AmiBlitz3_noFPU_r470.ab3@13622>    BNE 'l1
0002B840 <AmiBlitz3_noFPU_r470.ab3@13623>    TST.b funcparloop
0002B844 <AmiBlitz3_noFPU_r470.ab3@13624>    BEQ 'l1
0002B84A <AmiBlitz3_noFPU_r470.ab3@13625>    MOVE.l #$48780000,d1
0002B84E <AmiBlitz3_noFPU_r470.ab3@13626>    BSR writelong
0002B850 <AmiBlitz3_noFPU_r470.ab3@13630> RTS
0002B852 <AmiBlitz3_noFPU_r470.ab3@13635>      MOVE.l d1,-(a7)
0002B85A <AmiBlitz3_noFPU_r470.ab3@13636>      CMP.w #6,regnum
0002B85E <AmiBlitz3_noFPU_r470.ab3@13637>      BEQ 'l1
0002B864 <AmiBlitz3_noFPU_r470.ab3@13638>      TST.w stackpar
0002B868 <AmiBlitz3_noFPU_r470.ab3@13639>      BNE 'l1
0002B86E <AmiBlitz3_noFPU_r470.ab3@13640>      TST.b funcparloop
0002B872 <AmiBlitz3_noFPU_r470.ab3@13641>      BEQ 'l1
0002B878 <AmiBlitz3_noFPU_r470.ab3@13642>      MOVE.l #$48780000,d1
0002B87C <AmiBlitz3_noFPU_r470.ab3@13643>      BSR writelong
0002B87E <AmiBlitz3_noFPU_r470.ab3@13646>      MOVE.l (a7)+,d1
0002B884 <AmiBlitz3_noFPU_r470.ab3@13648>    OR.w movestdn,D1
0002B888 <AmiBlitz3_noFPU_r470.ab3@13649>    BSR.w writeword
0002B88C <AmiBlitz3_noFPU_r470.ab3@13650>   MOVE.w #$FED3,D1
0002B890 <AmiBlitz3_noFPU_r470.ab3@13651>    BSR.w uselib
0002B894 <AmiBlitz3_noFPU_r470.ab3@13652>   MOVE.w $A(A1),D1
0002B898 <AmiBlitz3_noFPU_r470.ab3@13653> BRA.w writeword
0002B89A <AmiBlitz3_noFPU_r470.ab3@13656> unknown:    Ds.w 1
0002B8A0 <AmiBlitz3_noFPU_r470.ab3@13659> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002B8A4 <AmiBlitz3_noFPU_r470.ab3@13660> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002B8AA <AmiBlitz3_noFPU_r470.ab3@13661>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002B8B0 <AmiBlitz3_noFPU_r470.ab3@13667>   TST.b debugmode
0002B8B4 <AmiBlitz3_noFPU_r470.ab3@13668>   BEQ.w sharreval
0002B8B8 <AmiBlitz3_noFPU_r470.ab3@13669>  BSR.w arreval
0002B8BC <AmiBlitz3_noFPU_r470.ab3@13672>   MOVE.w somecode(PC),D1
0002B8C2 <AmiBlitz3_noFPU_r470.ab3@13673>   OR.w regnum,D1
0002B8C6 <AmiBlitz3_noFPU_r470.ab3@13674>    BSR.w writeword
0002B8C8 <AmiBlitz3_noFPU_r470.ab3@13675>   MOVEQ.l #$01,D1
0002B8CA <AmiBlitz3_noFPU_r470.ab3@13676>   SWAP D1
0002B8CE <AmiBlitz3_noFPU_r470.ab3@13677>    BSR.w writelong
0002B8D2 <AmiBlitz3_noFPU_r470.ab3@13678>   MOVE.l somecode2(PC),D1
0002B8D6 <AmiBlitz3_noFPU_r470.ab3@13679>    BSR.w writelong
0002B8DA <AmiBlitz3_noFPU_r470.ab3@13680>   MOVE.w #$C309,D1
0002B8DE <AmiBlitz3_noFPU_r470.ab3@13681> BRA.w Atokejsr
0002B8E0 <AmiBlitz3_noFPU_r470.ab3@13685>   MOVEQ.l #$02,D2
0002B8E2 <AmiBlitz3_noFPU_r470.ab3@13686>   MOVEQ.l #$00,D1
0002B8E4 <AmiBlitz3_noFPU_r470.ab3@13687>   MOVEQ.l #$00,D3
0002B8E8 <AmiBlitz3_noFPU_r470.ab3@13688> BRA.w maineval2
0002B8EA <AmiBlitz3_noFPU_r470.ab3@13692>   MOVEQ.l #$03,D2
0002B8EC <AmiBlitz3_noFPU_r470.ab3@13693>   MOVEQ.l #$00,D1
0002B8EE <AmiBlitz3_noFPU_r470.ab3@13694>   MOVEQ.l #$00,D3
0002B8F4 <AmiBlitz3_noFPU_r470.ab3@13695>   MOVE.b notypecheck,-(a7)
0002B8FC <AmiBlitz3_noFPU_r470.ab3@13696>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002B902 <AmiBlitz3_noFPU_r470.ab3@13697>   JSR maineval2
0002B908 <AmiBlitz3_noFPU_r470.ab3@13698>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002B90A <AmiBlitz3_noFPU_r470.ab3@13699>   RTS
0002B914 <AmiBlitz3_noFPU_r470.ab3@13703>   MOVE.w oldqflag,instringon
0002B91A <AmiBlitz3_noFPU_r470.ab3@13704>   MOVEA.l lastsourcepos,A5
0002B91C <AmiBlitz3_noFPU_r470.ab3@13705>   MOVEQ.l #-$01,D1
0002B91E <AmiBlitz3_noFPU_r470.ab3@13706>   MOVEQ.l #-$01,D3
0002B922 <AmiBlitz3_noFPU_r470.ab3@13707> BRA.w peval
0002B92C <AmiBlitz3_noFPU_r470.ab3@13712>   MOVE.w oldqflag,instringon
0002B932 <AmiBlitz3_noFPU_r470.ab3@13713>   MOVEA.l lastsourcepos,A5
0002B934 <AmiBlitz3_noFPU_r470.ab3@13716>   MOVEQ.l #-$01,D1
0002B936 <AmiBlitz3_noFPU_r470.ab3@13717>   MOVEQ.l #$00,D3
0002B93C <AmiBlitz3_noFPU_r470.ab3@13718>   MOVE.l leftsidetype,-(a7)
0002B942 <AmiBlitz3_noFPU_r470.ab3@13719>   MOVE.l rightsidetype,-(a7)
0002B948 <AmiBlitz3_noFPU_r470.ab3@13720>   CLR.l leftsidetype
0002B94E <AmiBlitz3_noFPU_r470.ab3@13721>   CLR.l rightsidetype
0002B954 <AmiBlitz3_noFPU_r470.ab3@13722>   JSR maineval
0002B95A <AmiBlitz3_noFPU_r470.ab3@13723>   MOVE.l (a7)+,rightsidetype
0002B960 <AmiBlitz3_noFPU_r470.ab3@13724>   MOVE.l (a7)+,leftsidetype
0002B962 <AmiBlitz3_noFPU_r470.ab3@13725>   RTS
0002B96C <AmiBlitz3_noFPU_r470.ab3@13729>   MOVE.w oldqflag,instringon
0002B972 <AmiBlitz3_noFPU_r470.ab3@13730>   MOVEA.l lastsourcepos,A5
0002B974 <AmiBlitz3_noFPU_r470.ab3@13731>   MOVEQ.l #$00,D1
0002B976 <AmiBlitz3_noFPU_r470.ab3@13732>   MOVEQ.l #-$01,D3
0002B97A <AmiBlitz3_noFPU_r470.ab3@13733> BRA.w maineval
0002B97C <AmiBlitz3_noFPU_r470.ab3@13737>   MOVEQ.l #$01,D1
0002B97E <AmiBlitz3_noFPU_r470.ab3@13738>   MOVEQ.l #-$01,D3
0002B982 <AmiBlitz3_noFPU_r470.ab3@13739> BRA.w maineval
0002B98C <AmiBlitz3_noFPU_r470.ab3@13744>   MOVE.w oldqflag,instringon
0002B992 <AmiBlitz3_noFPU_r470.ab3@13745>   MOVEA.l lastsourcepos,A5
0002B994 <AmiBlitz3_noFPU_r470.ab3@13748>   MOVEQ.l #$00,D1                                        ;no push
0002B996 <AmiBlitz3_noFPU_r470.ab3@13749>   MOVEQ.l #$00,D3
0002B99E <AmiBlitz3_noFPU_r470.ab3@13770>    CMPI.w #$6,regnum
0002B9A2 <AmiBlitz3_noFPU_r470.ab3@13771>    BCS.w maineval2
0002B9A4 <AmiBlitz3_noFPU_r470.ab3@13772>    MOVEQ #0,d1
0002B9AA <AmiBlitz3_noFPU_r470.ab3@13773>    MOVE.l destpointer,a4
0002B9B0 <AmiBlitz3_noFPU_r470.ab3@13775>    CMPA.l destbufferend,A4
0002B9B4 <AmiBlitz3_noFPU_r470.ab3@13776>    BCC.w maineval__l2
0002B9BA <AmiBlitz3_noFPU_r470.ab3@13778>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002B9BE <AmiBlitz3_noFPU_r470.ab3@13780>    BNE maineval__l2
0002B9C2 <AmiBlitz3_noFPU_r470.ab3@13784> BRA maineval__l1
0002B9C4 <AmiBlitz3_noFPU_r470.ab3@13787>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002B9CC <AmiBlitz3_noFPU_r470.ab3@13790>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002B9D2 <AmiBlitz3_noFPU_r470.ab3@13793>   MOVE.w thisstuse,-(A7)
0002B9DC <AmiBlitz3_noFPU_r470.ab3@13794>   MOVE.w a2offset,thisstuse
0002B9E2 <AmiBlitz3_noFPU_r470.ab3@13795>   MOVE.w stackpar,-(A7)
0002B9E8 <AmiBlitz3_noFPU_r470.ab3@13796>   MOVE.w D1,stackpar
0002B9EE <AmiBlitz3_noFPU_r470.ab3@13797>   MOVE.w sbgot,-(A7)
0002B9F4 <AmiBlitz3_noFPU_r470.ab3@13798>   CLR.w sbgot
0002B9F8 <AmiBlitz3_noFPU_r470.ab3@13799>   MOVE.w unknown(PC),-(A7)
0002B9FE <AmiBlitz3_noFPU_r470.ab3@13800>   MOVE.w D3,unknown
0002BA00 <AmiBlitz3_noFPU_r470.ab3@13801>   MOVE.w D2,-(a7)
0002BA06 <AmiBlitz3_noFPU_r470.ab3@13802>   MOVE.w d2,mode
0002BA0A <AmiBlitz3_noFPU_r470.ab3@13803>    BSR.w eval3
0002BA0C <AmiBlitz3_noFPU_r470.ab3@13804>   MOVE.w (a7)+,d3
0002BA10 <AmiBlitz3_noFPU_r470.ab3@13805>    BEQ.w maineval__noconv
0002BA14 <AmiBlitz3_noFPU_r470.ab3@13806>   MOVE.w unknown(PC),D1
0002BA18 <AmiBlitz3_noFPU_r470.ab3@13807>    BNE.w maineval__noconv
0002BA1A <AmiBlitz3_noFPU_r470.ab3@13808>   EXG.l D2,D3
0002BA1C <AmiBlitz3_noFPU_r470.ab3@13809>    MOVE.l a2,-(a7)
0002BA22 <AmiBlitz3_noFPU_r470.ab3@13810>    TST.b curtemplabel
0002BA26 <AmiBlitz3_noFPU_r470.ab3@13811>    BEQ maineval2__l10
0002BA2C <AmiBlitz3_noFPU_r470.ab3@13812>    MOVE.l asmbuff,a2
0002BA32 <AmiBlitz3_noFPU_r470.ab3@13813>    CMP.w #$c,$8(a2)
0002BA36 <AmiBlitz3_noFPU_r470.ab3@13814>    BEQ maineval2__l20
0002BA3C <AmiBlitz3_noFPU_r470.ab3@13815>    CMP.w #$d,$8(a2)
0002BA40 <AmiBlitz3_noFPU_r470.ab3@13816>    BEQ maineval2__l20
0002BA42 <AmiBlitz3_noFPU_r470.ab3@13819>   CMP.w d2,d3
0002BA46 <AmiBlitz3_noFPU_r470.ab3@13820>   BEQ maineval2__l20
0002BA4A <AmiBlitz3_noFPU_r470.ab3@13821>   BSR.w writeconvertcode
0002BA50 <AmiBlitz3_noFPU_r470.ab3@13822>   CLR.b doimmediate
0002BA52 <AmiBlitz3_noFPU_r470.ab3@13825>   MOVE.l (a7)+,a2
0002BA58 <AmiBlitz3_noFPU_r470.ab3@13828>   MOVE.w (A7)+,unknown
0002BA5E <AmiBlitz3_noFPU_r470.ab3@13829>   MOVE.w stackpar,D1
0002BA62 <AmiBlitz3_noFPU_r470.ab3@13830>    BEQ.w maineval__skipme
0002BA66 <AmiBlitz3_noFPU_r470.ab3@13831>    BMI.w maineval__skipme
0002BA6C <AmiBlitz3_noFPU_r470.ab3@13835>   MOVE.w regnum,D1
0002BA6E <AmiBlitz3_noFPU_r470.ab3@13836>   LSL.w #8,D1
0002BA70 <AmiBlitz3_noFPU_r470.ab3@13837>   LSL.w #1,D1
0002BA74 <AmiBlitz3_noFPU_r470.ab3@13838>   CMP.w #$7,D2
0002BA78 <AmiBlitz3_noFPU_r470.ab3@13839>    BNE.w maineval__hi1
0002BA80 <AmiBlitz3_noFPU_r470.ab3@13840>    CMP.b #2,optistring
0002BA84 <AmiBlitz3_noFPU_r470.ab3@13841>    BEQ maineval__hi1a
0002BA86 <AmiBlitz3_noFPU_r470.ab3@13842>   MOVE.w D1,-(A7)
0002BA8C <AmiBlitz3_noFPU_r470.ab3@13843>   OR.w getstlen,D1
0002BA90 <AmiBlitz3_noFPU_r470.ab3@13844>    BSR.w writeword
0002BA92 <AmiBlitz3_noFPU_r470.ab3@13845>   MOVE.w (A7)+,D1
0002BA98 <AmiBlitz3_noFPU_r470.ab3@13848>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002BA9C <AmiBlitz3_noFPU_r470.ab3@13852>   MOVE.w #$3f3c,d1
0002BAA0 <AmiBlitz3_noFPU_r470.ab3@13853>    BSR.w writeword
0002BAA2 <AmiBlitz3_noFPU_r470.ab3@13857>   MOVE.w d2,d1
0002BAA8 <AmiBlitz3_noFPU_r470.ab3@13858>   MOVE.w d1,libmode
0002BAAC <AmiBlitz3_noFPU_r470.ab3@13859>    BSR.w writeword
0002BAB0 <AmiBlitz3_noFPU_r470.ab3@13860>   CMP.w #$7,D2
0002BAB4 <AmiBlitz3_noFPU_r470.ab3@13861>    BNE.w maineval__skipme
0002BABA <AmiBlitz3_noFPU_r470.ab3@13862>   MOVE.w putstlen,D1
0002BAC0 <AmiBlitz3_noFPU_r470.ab3@13863>   OR.w regnum,D1
0002BAC4 <AmiBlitz3_noFPU_r470.ab3@13864>    BSR.w writeword
0002BAC8 <AmiBlitz3_noFPU_r470.ab3@13867>    CMP.w #$7,D2
0002BACC <AmiBlitz3_noFPU_r470.ab3@13868>    BNE.w maineval__notst
0002BAD4 <AmiBlitz3_noFPU_r470.ab3@13879>    CMP.b #2,optistring
0002BAD8 <AmiBlitz3_noFPU_r470.ab3@13880>    BEQ maineval__skipme_l10
0002BADE <AmiBlitz3_noFPU_r470.ab3@13881>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002BAE2 <AmiBlitz3_noFPU_r470.ab3@13882>    BSR.w sbtolong
0002BAE6 <AmiBlitz3_noFPU_r470.ab3@13883> BRA.w maineval__notst2
0002BAEE <AmiBlitz3_noFPU_r470.ab3@13887>     CMP.w #6,regnum
0002BAF2 <AmiBlitz3_noFPU_r470.ab3@13888>     BEQ maineval__skipme_l10_l1
0002BAF8 <AmiBlitz3_noFPU_r470.ab3@13889>     TST.b funcparloop
0002BAFC <AmiBlitz3_noFPU_r470.ab3@13890>     BEQ maineval__skipme_l10_l1
0002BB02 <AmiBlitz3_noFPU_r470.ab3@13891>     MOVE.l #$48780000,d1
0002BB06 <AmiBlitz3_noFPU_r470.ab3@13892>     BSR writelong
0002BB0A <AmiBlitz3_noFPU_r470.ab3@13895> BRA.w maineval__notst2
0002BB10 <AmiBlitz3_noFPU_r470.ab3@13898>   ADDQ.w #2,a2offset
0002BB14 <AmiBlitz3_noFPU_r470.ab3@13899> BRA maineval__skipme
0002BB1C <AmiBlitz3_noFPU_r470.ab3@13902>   CMPI.w #$2,sbgot
0002BB20 <AmiBlitz3_noFPU_r470.ab3@13903>    BCS.w maineval__notst2                                         ;correct stack
0002BB24 <AmiBlitz3_noFPU_r470.ab3@13904>   MOVE.w ststfix(PC),D1
0002BB28 <AmiBlitz3_noFPU_r470.ab3@13905>    BSR.w writeword
0002BB2E <AmiBlitz3_noFPU_r470.ab3@13908>   MOVE.w (A7)+,sbgot
0002BB34 <AmiBlitz3_noFPU_r470.ab3@13909>   MOVE.w stackpar,D1
0002BB38 <AmiBlitz3_noFPU_r470.ab3@13910>    BPL.w maineval__skip
0002BB3C <AmiBlitz3_noFPU_r470.ab3@13911>    CMP.b #7,d2
0002BB40 <AmiBlitz3_noFPU_r470.ab3@13912>    BEQ maineval__notst2_l1
0002BB46 <AmiBlitz3_noFPU_r470.ab3@13913>   TST.b funcparloop
0002BB4A <AmiBlitz3_noFPU_r470.ab3@13914>   BEQ maineval__notst2_l1
0002BB4E <AmiBlitz3_noFPU_r470.ab3@13915>   CMP.b #5,d2
0002BB52 <AmiBlitz3_noFPU_r470.ab3@13916>   BNE maineval__notst2_skip
0002BB58 <AmiBlitz3_noFPU_r470.ab3@13917>   TST.b fpu
0002BB5C <AmiBlitz3_noFPU_r470.ab3@13918>   BEQ maineval__notst2_skip
0002BB62 <AmiBlitz3_noFPU_r470.ab3@13919>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002BB68 <AmiBlitz3_noFPU_r470.ab3@13920>   JSR writelong
0002BB6C <AmiBlitz3_noFPU_r470.ab3@13923>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002BB72 <AmiBlitz3_noFPU_r470.ab3@13924>   ADD.w parnum,d1
0002BB78 <AmiBlitz3_noFPU_r470.ab3@13925>   JSR Atokejsr
0002BB7E <AmiBlitz3_noFPU_r470.ab3@13926>    TST.w dontwrite
0002BB82 <AmiBlitz3_noFPU_r470.ab3@13927>    BNE maineval__notst2_l1
0002BB88 <AmiBlitz3_noFPU_r470.ab3@13928>    MOVE.l data1start,d1
0002BB8E <AmiBlitz3_noFPU_r470.ab3@13929>    MOVE.l destpointer,a4
0002BB92 <AmiBlitz3_noFPU_r470.ab3@13930>    ADD.l d1,-4(a4)
0002BB98 <AmiBlitz3_noFPU_r470.ab3@13931>    MOVE.l destpointer,d1
0002BB9A <AmiBlitz3_noFPU_r470.ab3@13932>    SUBQ.l #4,d1
0002BBA0 <AmiBlitz3_noFPU_r470.ab3@13933>    SUB.l destbufferstart,d1
0002BBA2 <AmiBlitz3_noFPU_r470.ab3@13934>    MOVE.l d2,-(a7)
0002BBA4 <AmiBlitz3_noFPU_r470.ab3@13935>    MOVE.l d1,d2
0002BBAA <AmiBlitz3_noFPU_r470.ab3@13936>    JSR addhunkoffset
0002BBAC <AmiBlitz3_noFPU_r470.ab3@13937>    MOVE.l (a7)+,d2
0002BBB0 <AmiBlitz3_noFPU_r470.ab3@13938> BRA maineval__skip
0002BBB6 <AmiBlitz3_noFPU_r470.ab3@13941>   ADDQ.w #2,a2offset
0002BBBC <AmiBlitz3_noFPU_r470.ab3@13942>   MOVE.w pushd0wd,D1
0002BBC0 <AmiBlitz3_noFPU_r470.ab3@13943>   CMP.w #$3,D2                                             ;write parameter to stack
0002BBC4 <AmiBlitz3_noFPU_r470.ab3@13944>    BCS.w maineval__ok
0002BBCA <AmiBlitz3_noFPU_r470.ab3@13945>   ADDQ.w #2,a2offset
0002BBD0 <AmiBlitz3_noFPU_r470.ab3@13946>   TST.b fpu
0002BBD4 <AmiBlitz3_noFPU_r470.ab3@13947>   BEQ maineval__notst2_nofpu
0002BBD8 <AmiBlitz3_noFPU_r470.ab3@13948>   CMP.w #5,d2
0002BBDC <AmiBlitz3_noFPU_r470.ab3@13949>   BNE maineval__notst2_nofpu
0002BBDE <AmiBlitz3_noFPU_r470.ab3@13950>   MOVEQ #0,d1
0002BBE4 <AmiBlitz3_noFPU_r470.ab3@13951>   MOVE.w regnum,d1
0002BBE6 <AmiBlitz3_noFPU_r470.ab3@13952>   ASL.l #7,d1
0002BBEC <AmiBlitz3_noFPU_r470.ab3@13953>   OR.l #$f2276400,d1
0002BBF0 <AmiBlitz3_noFPU_r470.ab3@13954>   BSR writelong
0002BBF4 <AmiBlitz3_noFPU_r470.ab3@13955> BRA maineval__skip
0002BBFA <AmiBlitz3_noFPU_r470.ab3@13958>   MOVE.w pushd0l,D1
0002BC00 <AmiBlitz3_noFPU_r470.ab3@13961>    OR.w regnum,D1
0002BC04 <AmiBlitz3_noFPU_r470.ab3@13962>    BSR.w writeword                                         ;nat
0002BC0A <AmiBlitz3_noFPU_r470.ab3@13965>   MOVE.w (A7)+,stackpar
0002BC10 <AmiBlitz3_noFPU_r470.ab3@13966>   MOVE.w (A7)+,thisstuse
0002BC12 <AmiBlitz3_noFPU_r470.ab3@13967> RTS
0002BC14 <AmiBlitz3_noFPU_r470.ab3@13970> thisstuse: Ds.w 1
0002BC16 <AmiBlitz3_noFPU_r470.ab3@13973> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002BC18 <AmiBlitz3_noFPU_r470.ab3@13974> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002BC1C <AmiBlitz3_noFPU_r470.ab3@13979>   BSR.w eval4
0002BC26 <AmiBlitz3_noFPU_r470.ab3@13980>   SUBI.l #$12,forthsp
0002BC28 <AmiBlitz3_noFPU_r470.ab3@13981> RTS
0002BC2A <AmiBlitz3_noFPU_r470.ab3@13985>   MOVEQ.l #$01,D1
0002BC2E <AmiBlitz3_noFPU_r470.ab3@13987>       MOVEA.l precsp(PC),A1
0002BC30 <AmiBlitz3_noFPU_r470.ab3@13988>       MOVE.l A0,(A1)+
0002BC32 <AmiBlitz3_noFPU_r470.ab3@13989>       MOVE.w D1,(A1)+
0002BC38 <AmiBlitz3_noFPU_r470.ab3@13990>       MOVE.l A1,precsp
0002BC3C <AmiBlitz3_noFPU_r470.ab3@13991>    BSR.w calcloop
0002BC3E <AmiBlitz3_noFPU_r470.ab3@13992>   TST.w D1
0002BC42 <AmiBlitz3_noFPU_r470.ab3@13993>    BNE.w syntaxerr
0002BC48 <AmiBlitz3_noFPU_r470.ab3@13994>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002BC4A <AmiBlitz3_noFPU_r470.ab3@13995> RTS
0002BC4E <AmiBlitz3_noFPU_r470.ab3@14000>   BSR.w JL_0_9C24
0002BC52 <AmiBlitz3_noFPU_r470.ab3@14003>   MOVEA.l precsp(PC),A1
0002BC54 <AmiBlitz3_noFPU_r470.ab3@14004>   CMP.w -(A1),D1
0002BC58 <AmiBlitz3_noFPU_r470.ab3@14005>    BHI.w JL_0_9B0A
0002BC5A <AmiBlitz3_noFPU_r470.ab3@14006> RTS
0002BC5E <AmiBlitz3_noFPU_r470.ab3@14011>   MOVEA.l precsp(PC),A1
0002BC60 <AmiBlitz3_noFPU_r470.ab3@14012>   MOVE.l A0,(A1)+
0002BC62 <AmiBlitz3_noFPU_r470.ab3@14013>   MOVE.w D1,(A1)+
0002BC68 <AmiBlitz3_noFPU_r470.ab3@14014>   MOVE.l A1,precsp
0002BC6A <AmiBlitz3_noFPU_r470.ab3@14015>   MOVE.w D2,-(A7)
0002BC70 <AmiBlitz3_noFPU_r470.ab3@14016>   ADDQ.w #1,regnum
0002BC74 <AmiBlitz3_noFPU_r470.ab3@14017>    BSR.w calcloop               ;constant optimizer
0002BC7A <AmiBlitz3_noFPU_r470.ab3@14018>   SUBQ.w #1,regnum
0002BC7C <AmiBlitz3_noFPU_r470.ab3@14019>   MOVE.w (A7)+,D3
0002BC80 <AmiBlitz3_noFPU_r470.ab3@14020>   MOVEM.l D1/A0,-(A7)
0002BC84 <AmiBlitz3_noFPU_r470.ab3@14021>    BEQ.w JL_0_9B2E
0002BC88 <AmiBlitz3_noFPU_r470.ab3@14022>    BSR.w JL_0_9770
0002BC8C <AmiBlitz3_noFPU_r470.ab3@14025>   BSR.w popprec
0002BC90 <AmiBlitz3_noFPU_r470.ab3@14026>   BSR.w writecode
0002BC94 <AmiBlitz3_noFPU_r470.ab3@14027>   MOVEA.l forthsp(PC),A0
0002BC98 <AmiBlitz3_noFPU_r470.ab3@14028>   MOVE.w -$2(A0),D1
0002BC9C <AmiBlitz3_noFPU_r470.ab3@14029>   OR.w -$14(A0),D1
0002BCA0 <AmiBlitz3_noFPU_r470.ab3@14030>   MOVE.w D1,-$14(A0)
0002BCA4 <AmiBlitz3_noFPU_r470.ab3@14031>    BNE.w JL_0_9C0E
0002BCAA <AmiBlitz3_noFPU_r470.ab3@14032>   MOVE.w dontwrite,D1
0002BCAE <AmiBlitz3_noFPU_r470.ab3@14033>    BNE.w JL_0_9C0E
0002BCB2 <AmiBlitz3_noFPU_r470.ab3@14034>    MOVEA.l -$24(A0),A0
0002BDEE <AmiBlitz3_noFPU_r470.ab3@14036>  !newcalc
0002BDF2 <AmiBlitz3_noFPU_r470.ab3@14037>    BEQ 'l10
0002BDF6 <AmiBlitz3_noFPU_r470.ab3@14038>    MOVEA.l forthsp(PC),A0
0002BDFE <AmiBlitz3_noFPU_r470.ab3@14039>    MOVE.w -$18(A0),lasta6
0002BE06 <AmiBlitz3_noFPU_r470.ab3@14040>    MOVE.l -$1C(A0),lasta6
0002BE0A <AmiBlitz3_noFPU_r470.ab3@14041>    MOVEA.l -$24(A0),A0
0002BE10 <AmiBlitz3_noFPU_r470.ab3@14042>    MOVE.l A0,destpointer
0002BE16 <AmiBlitz3_noFPU_r470.ab3@14043>    MOVEA.l _mathffpbase,A6
0002BE1C <AmiBlitz3_noFPU_r470.ab3@14044>    MOVEA.l ffplib,A1
0002BE20 <AmiBlitz3_noFPU_r470.ab3@14045> BRA cont1
0002BE24 <AmiBlitz3_noFPU_r470.ab3@14048>   MOVE.w #$2000,D1
0002BE2A <AmiBlitz3_noFPU_r470.ab3@14049>   OR.w regnum,D1
0002BE2E <AmiBlitz3_noFPU_r470.ab3@14050>    BSR.w writeword
0002BE30 <AmiBlitz3_noFPU_r470.ab3@14051>     MOVEQ #0,d1
0002BE36 <AmiBlitz3_noFPU_r470.ab3@14052>     MOVE.w regnum,D1
0002BE38 <AmiBlitz3_noFPU_r470.ab3@14053>     ASL.l #8,d1
0002BE3A <AmiBlitz3_noFPU_r470.ab3@14054>     ASL.l #2,d1
0002BE40 <AmiBlitz3_noFPU_r470.ab3@14055>     OR.l #$f2000000,d1
0002BE44 <AmiBlitz3_noFPU_r470.ab3@14056>     BSR writelong
0002BE48 <AmiBlitz3_noFPU_r470.ab3@14057>   MOVE.w #$4E75,D1
0002BE4C <AmiBlitz3_noFPU_r470.ab3@14058>    BSR.w writeword
0002BE54 <AmiBlitz3_noFPU_r470.ab3@14059>   MOVE.w -$18(A0),lasta6
0002BE5C <AmiBlitz3_noFPU_r470.ab3@14060>   MOVE.l -$1C(A0),lasta6
0002BE60 <AmiBlitz3_noFPU_r470.ab3@14061>   MOVEA.l -$24(A0),A0
0002BE66 <AmiBlitz3_noFPU_r470.ab3@14062>   MOVE.l A0,destpointer
0002BE6A <AmiBlitz3_noFPU_r470.ab3@14063>   MOVEM.l D2/A5,-(A7)
0002BE70 <AmiBlitz3_noFPU_r470.ab3@14064>   MOVEA.l _mathffpbase,A6
0002BE76 <AmiBlitz3_noFPU_r470.ab3@14065>   MOVEA.l ffplib,A1
0002BE7A <AmiBlitz3_noFPU_r470.ab3@14066>   MOVE.w $A(A1),D0
0002BE80 <AmiBlitz3_noFPU_r470.ab3@14067>   LEA _mathffpbase,A5
0002BE82 <AmiBlitz3_noFPU_r470.ab3@14068>   SUBA.w D0,A5
0002BE88 <AmiBlitz3_noFPU_r470.ab3@14069>   JSR Aclearcache                                          ;neg +
0002BE8E <AmiBlitz3_noFPU_r470.ab3@14070>   CLR.l load_var_addr
0002BE94 <AmiBlitz3_noFPU_r470.ab3@14071>   CLR.l imm_addr
0002BE9A <AmiBlitz3_noFPU_r470.ab3@14072>   TST.w dontwrite
0002BE9E <AmiBlitz3_noFPU_r470.ab3@14073>   BNE '1
0002BEA0 <AmiBlitz3_noFPU_r470.ab3@14074>   JSR (A0)                                                 ;calc constant inline expression
0002BEA4 <AmiBlitz3_noFPU_r470.ab3@14077>   MOVEM.l (A7)+,D2/A5
0002BEAA <AmiBlitz3_noFPU_r470.ab3@14080>   MOVE.b d2,isconstantvalue
0002BEB0 <AmiBlitz3_noFPU_r470.ab3@14081>   MOVE.l d0,lastconstantvalue
0002BEB6 <AmiBlitz3_noFPU_r470.ab3@14082>   MOVE.w regnum,D1
0002BEB8 <AmiBlitz3_noFPU_r470.ab3@14083>   LSL.w #8,D1
0002BEBA <AmiBlitz3_noFPU_r470.ab3@14084>   LSL.w #1,D1
0002BEBE <AmiBlitz3_noFPU_r470.ab3@14085>   ORI.w #$203C,D1
0002BEC2 <AmiBlitz3_noFPU_r470.ab3@14086>   CMP.w #$3,D2
0002BEC6 <AmiBlitz3_noFPU_r470.ab3@14087>    BCC.w JL_0_9BCE
0002BECA <AmiBlitz3_noFPU_r470.ab3@14088>   ORI.w #$1000,D1
0002BECE <AmiBlitz3_noFPU_r470.ab3@14089>    BSR.w writeword
0002BED0 <AmiBlitz3_noFPU_r470.ab3@14090>   MOVE.w D0,D1
0002BED4 <AmiBlitz3_noFPU_r470.ab3@14091>    BSR.w writeword
0002BED8 <AmiBlitz3_noFPU_r470.ab3@14092> BRA.w JL_0_9BD8
0002BEDE <AmiBlitz3_noFPU_r470.ab3@14096>   TST.b iee                                                ;fpu constant
0002BEE2 <AmiBlitz3_noFPU_r470.ab3@14097>   BEQ 'l10
0002BEE6 <AmiBlitz3_noFPU_r470.ab3@14098>   CMP.b #5,d2
0002BEEA <AmiBlitz3_noFPU_r470.ab3@14099>   BNE 'l10
0002BEEC <AmiBlitz3_noFPU_r470.ab3@14100>   MOVEQ #0,d1
0002BEF2 <AmiBlitz3_noFPU_r470.ab3@14101>   MOVE.w regnum,D1
0002BEF4 <AmiBlitz3_noFPU_r470.ab3@14102>   ASL.l #7,d1
0002BEFA <AmiBlitz3_noFPU_r470.ab3@14103>   OR.l #$f23c5400,d1
0002BEFE <AmiBlitz3_noFPU_r470.ab3@14104>   BSR writelong
0002BF00 <AmiBlitz3_noFPU_r470.ab3@14105>   SUBQ.l #8,a7
0002BF06 <AmiBlitz3_noFPU_r470.ab3@14106>   fmove.d fp0,0(a7)
0002BF08 <AmiBlitz3_noFPU_r470.ab3@14107>   MOVE.l (a7)+,d1
0002BF0C <AmiBlitz3_noFPU_r470.ab3@14108>   BSR writelong
0002BF0E <AmiBlitz3_noFPU_r470.ab3@14109>   MOVE.l (a7)+,d1
0002BF12 <AmiBlitz3_noFPU_r470.ab3@14110>   BSR writelong
0002BF16 <AmiBlitz3_noFPU_r470.ab3@14111> BRA JL_0_9BD8
0002BF1A <AmiBlitz3_noFPU_r470.ab3@14114>   BSR.w writeword
0002BF1C <AmiBlitz3_noFPU_r470.ab3@14115>   MOVE.l D0,D1
0002BF20 <AmiBlitz3_noFPU_r470.ab3@14116>   BSR.w writelong
0002BF24 <AmiBlitz3_noFPU_r470.ab3@14119>   MOVEA.l forthsp(PC),A0
0002BF28 <AmiBlitz3_noFPU_r470.ab3@14120>   MOVEA.l -$20(A0),A3
0002BF2E <AmiBlitz3_noFPU_r470.ab3@14121>   MOVEA.l hunkoffsetbase,A2
0002BF34 <AmiBlitz3_noFPU_r470.ab3@14122>   MOVE.l A3,hunkoffsetbase
0002BF3A <AmiBlitz3_noFPU_r470.ab3@14123>   MOVEA.l _execbase,A6
0002BF3C <AmiBlitz3_noFPU_r470.ab3@14126>   CMPA.l A3,A2
0002BF40 <AmiBlitz3_noFPU_r470.ab3@14127>   BEQ.w JL_0_9C0A
0002BF46 <AmiBlitz3_noFPU_r470.ab3@14128>   SUBQ.l #1,hunkoffsetcounter
0002BF48 <AmiBlitz3_noFPU_r470.ab3@14129>   MOVEA.l A2,A1
0002BF4A <AmiBlitz3_noFPU_r470.ab3@14130>   MOVEA.l (A2),A2
0002BF4C <AmiBlitz3_noFPU_r470.ab3@14131>   MOVEQ.l #$8,D0
0002BF52 <AmiBlitz3_noFPU_r470.ab3@14132>   MOVE.l mempool2,a0
0002BF56 <AmiBlitz3_noFPU_r470.ab3@14133>    JSR _FreePooled(A6)
0002BF5A <AmiBlitz3_noFPU_r470.ab3@14134> BRA.w JL_0_9BF0
0002BF5E <AmiBlitz3_noFPU_r470.ab3@14138>   MOVEA.l forthsp(PC),A0
0002BF62 <AmiBlitz3_noFPU_r470.ab3@14141>   LEA -$12(A0),A0
0002BF68 <AmiBlitz3_noFPU_r470.ab3@14142>   MOVE.l A0,forthsp
0002BF6C <AmiBlitz3_noFPU_r470.ab3@14143>   MOVEM.l (A7)+,D1/A0
0002BF70 <AmiBlitz3_noFPU_r470.ab3@14144>   BSR.w reget
0002BF74 <AmiBlitz3_noFPU_r470.ab3@14145> BRA.w JL_0_9AFE
0002BF78 <AmiBlitz3_noFPU_r470.ab3@14149>   BSR.w JL_0_A386
0002BF7A <AmiBlitz3_noFPU_r470.ab3@14150>   TST.w d0
0002BF7E <AmiBlitz3_noFPU_r470.ab3@14151>   BEQ JL_0_9C42
0002BF82 <AmiBlitz3_noFPU_r470.ab3@14152>   CMP.b #",",d0
0002BF86 <AmiBlitz3_noFPU_r470.ab3@14153>   BEQ JL_0_9C42
0002BF8A <AmiBlitz3_noFPU_r470.ab3@14154>   CMP.b #"@",d0                                            ;expandline @@
0002BF8E <AmiBlitz3_noFPU_r470.ab3@14155>   BEQ JL_0_9C42
0002BF94 <AmiBlitz3_noFPU_r470.ab3@14156>   LEA operators,A0
0002BF96 <AmiBlitz3_noFPU_r470.ab3@14159>    TST.w (A0)
0002BF9A <AmiBlitz3_noFPU_r470.ab3@14160>    BEQ.w JL_0_9C42
0002BF9C <AmiBlitz3_noFPU_r470.ab3@14161>   CMP.w (A0),D0
0002BFA0 <AmiBlitz3_noFPU_r470.ab3@14162>    BEQ.w JL_0_9C46a
0002BFA4 <AmiBlitz3_noFPU_r470.ab3@14163>   LEA $20(A0),A0
0002BFA8 <AmiBlitz3_noFPU_r470.ab3@14164> BRA.w JL_0_9C2E
0002BFAA <AmiBlitz3_noFPU_r470.ab3@14168>   MOVEQ.l #$00,D1
0002BFAC <AmiBlitz3_noFPU_r470.ab3@14169> RTS
0002BFB0 <AmiBlitz3_noFPU_r470.ab3@14173>   CMP.w #$3C,D0
0002BFB4 <AmiBlitz3_noFPU_r470.ab3@14174>    BNE.w JL_0_9C70
0002BFB8 <AmiBlitz3_noFPU_r470.ab3@14175>    BSR.w get1bytemain
0002BFBC <AmiBlitz3_noFPU_r470.ab3@14176>   CMP.w #$3D,D0
0002BFC0 <AmiBlitz3_noFPU_r470.ab3@14177>    BNE.w JL_0_9C64
0002BFC6 <AmiBlitz3_noFPU_r470.ab3@14178>   LEA ople,A0
0002BFCA <AmiBlitz3_noFPU_r470.ab3@14179> BRA.w JL_0_9CCA
0002BFCE <AmiBlitz3_noFPU_r470.ab3@14183>   CMP.w #$3E,D0
0002BFD2 <AmiBlitz3_noFPU_r470.ab3@14184>    BNE.w JL_0_9C96
0002BFD6 <AmiBlitz3_noFPU_r470.ab3@14185> BRA.w JL_0_9CC4
0002BFDA <AmiBlitz3_noFPU_r470.ab3@14189>   CMP.w #$3E,D0
0002BFDE <AmiBlitz3_noFPU_r470.ab3@14190>    BNE.w JL_0_9C9E
0002BFE2 <AmiBlitz3_noFPU_r470.ab3@14191>    BSR.w get1bytemain
0002BFE6 <AmiBlitz3_noFPU_r470.ab3@14192>   CMP.w #$3D,D0
0002BFEA <AmiBlitz3_noFPU_r470.ab3@14193>    BNE.w JL_0_9C8E
0002BFF0 <AmiBlitz3_noFPU_r470.ab3@14194>   LEA opge,A0
0002BFF4 <AmiBlitz3_noFPU_r470.ab3@14195> BRA.w JL_0_9CCA
0002BFF8 <AmiBlitz3_noFPU_r470.ab3@14199>   CMP.w #$3C,D0
0002BFFC <AmiBlitz3_noFPU_r470.ab3@14200>    BEQ.w JL_0_9CC4
0002C006 <AmiBlitz3_noFPU_r470.ab3@14204>     MOVE.w oldqflag,instringon
0002C00C <AmiBlitz3_noFPU_r470.ab3@14205>     MOVEA.l lastsourcepos,A5
0002C010 <AmiBlitz3_noFPU_r470.ab3@14206> BRA.w JL_0_9CCA
0002C014 <AmiBlitz3_noFPU_r470.ab3@14210>   CMP.w #$3D,D0
0002C018 <AmiBlitz3_noFPU_r470.ab3@14211>    BNE.w JL_0_9CCA
0002C01C <AmiBlitz3_noFPU_r470.ab3@14212>    BSR.w get1bytemain
0002C020 <AmiBlitz3_noFPU_r470.ab3@14213>   CMP.w #$3E,D0
0002C024 <AmiBlitz3_noFPU_r470.ab3@14214>    BNE.w JL_0_9CBC
0002C02A <AmiBlitz3_noFPU_r470.ab3@14215>   LEA opge,A0
0002C02E <AmiBlitz3_noFPU_r470.ab3@14216> BRA.w JL_0_9CCA
0002C032 <AmiBlitz3_noFPU_r470.ab3@14220>   CMP.w #$3C,D0
0002C036 <AmiBlitz3_noFPU_r470.ab3@14221>   BNE.w JL_0_9C96
0002C03C <AmiBlitz3_noFPU_r470.ab3@14224>   LEA opne,A0
0002C040 <AmiBlitz3_noFPU_r470.ab3@14227>   MOVE.w $1E(A0),D1
0002C042 <AmiBlitz3_noFPU_r470.ab3@14228> RTS
0002C044 <AmiBlitz3_noFPU_r470.ab3@14235>   MOVE.w d2,d1
0002C046 <AmiBlitz3_noFPU_r470.ab3@14236>   SUBQ.w #1,D1
0002C04A <AmiBlitz3_noFPU_r470.ab3@14237>    BMI.w illoperr
0002C04C <AmiBlitz3_noFPU_r470.ab3@14238>   LSL.w #2,D1
0002C050 <AmiBlitz3_noFPU_r470.ab3@14239>   MOVE.l $2(A0,D1.W),D1
0002C054 <AmiBlitz3_noFPU_r470.ab3@14240>    BEQ.w illoperr
0002C056 <AmiBlitz3_noFPU_r470.ab3@14241>   MOVEA.l D1,A0
0002C058 <AmiBlitz3_noFPU_r470.ab3@14244> JMP (A0)
0002C05C <AmiBlitz3_noFPU_r470.ab3@14260>   MOVEA.l precsp(PC),A1
0002C062 <AmiBlitz3_noFPU_r470.ab3@14261>   CMPA.l #precstackf,A1
0002C066 <AmiBlitz3_noFPU_r470.ab3@14262>    BCC.w pserr
0002C068 <AmiBlitz3_noFPU_r470.ab3@14263>   MOVE.w -(A1),D1
0002C06A <AmiBlitz3_noFPU_r470.ab3@14264>   MOVEA.l -(A1),A0
0002C070 <AmiBlitz3_noFPU_r470.ab3@14265>   MOVE.l A1,precsp
0002C072 <AmiBlitz3_noFPU_r470.ab3@14266> RTS
0002C076 <AmiBlitz3_noFPU_r470.ab3@14269> precsp:      Dc.l precstack
0002C172 <AmiBlitz3_noFPU_r470.ab3@14270> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C1F6 <AmiBlitz3_noFPU_r470.ab3@14271>              Ds.l 33
0002C1F8 <AmiBlitz3_noFPU_r470.ab3@14277> mseq:  SEQ D0
0002C1FA <AmiBlitz3_noFPU_r470.ab3@14278> msne:    SNE D0
0002C1FC <AmiBlitz3_noFPU_r470.ab3@14279> mslt:    SLT D0
0002C1FE <AmiBlitz3_noFPU_r470.ab3@14280> msle:    SLE D0
0002C200 <AmiBlitz3_noFPU_r470.ab3@14281> msgt:    SGT D0
0002C202 <AmiBlitz3_noFPU_r470.ab3@14282> msge:    SGE D0
0002C204 <AmiBlitz3_noFPU_r470.ab3@14284> cmp0:    CMP.b D0,D0
0002C206 <AmiBlitz3_noFPU_r470.ab3@14285> cmp1:    CMP.w D0,D0
0002C208 <AmiBlitz3_noFPU_r470.ab3@14286> cmp2:    CMP.l D0,D0
0002C20C <AmiBlitz3_noFPU_r470.ab3@14290>   MOVE.w cmp0(PC),D1
0002C210 <AmiBlitz3_noFPU_r470.ab3@14291> BRA.w doeqcmp2                                            ;writecompare
0002C214 <AmiBlitz3_noFPU_r470.ab3@14295>   MOVE.w cmp0(PC),D1
0002C218 <AmiBlitz3_noFPU_r470.ab3@14296> BRA.w donecmp2
0002C21C <AmiBlitz3_noFPU_r470.ab3@14300>   MOVE.w cmp0(PC),D1
0002C220 <AmiBlitz3_noFPU_r470.ab3@14301> BRA.w doltcmp2
0002C224 <AmiBlitz3_noFPU_r470.ab3@14305>   MOVE.w cmp0(PC),D1
0002C228 <AmiBlitz3_noFPU_r470.ab3@14306> BRA.w dolecmp2
0002C22C <AmiBlitz3_noFPU_r470.ab3@14310>   MOVE.w cmp0(PC),D1
0002C230 <AmiBlitz3_noFPU_r470.ab3@14311> BRA.w dogtcmp2
0002C234 <AmiBlitz3_noFPU_r470.ab3@14316>   MOVE.w cmp0(PC),D1
0002C238 <AmiBlitz3_noFPU_r470.ab3@14317> BRA.w dogecmp2
0002C23C <AmiBlitz3_noFPU_r470.ab3@14321>   MOVE.w cmp1(PC),D1
0002C240 <AmiBlitz3_noFPU_r470.ab3@14322> BRA.w doeqcmp2
0002C244 <AmiBlitz3_noFPU_r470.ab3@14326>   MOVE.w cmp1(PC),D1
0002C248 <AmiBlitz3_noFPU_r470.ab3@14327> BRA.w donecmp2
0002C24C <AmiBlitz3_noFPU_r470.ab3@14331>   MOVE.w cmp1(PC),D1
0002C250 <AmiBlitz3_noFPU_r470.ab3@14332> BRA.w doltcmp2
0002C254 <AmiBlitz3_noFPU_r470.ab3@14336>   MOVE.w cmp1(PC),D1
0002C258 <AmiBlitz3_noFPU_r470.ab3@14337> BRA.w dolecmp2
0002C25C <AmiBlitz3_noFPU_r470.ab3@14341>   MOVE.w cmp1(PC),D1
0002C260 <AmiBlitz3_noFPU_r470.ab3@14342> BRA.w dogtcmp2
0002C264 <AmiBlitz3_noFPU_r470.ab3@14347>   MOVE.w cmp1(PC),D1
0002C268 <AmiBlitz3_noFPU_r470.ab3@14348> BRA.w dogecmp2
0002C26C <AmiBlitz3_noFPU_r470.ab3@14352>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C270 <AmiBlitz3_noFPU_r470.ab3@14353> BRA doeqcmp2
0002C274 <AmiBlitz3_noFPU_r470.ab3@14356>   MOVE.w cmp2(PC),D1
0002C278 <AmiBlitz3_noFPU_r470.ab3@14357> BRA donecmp2
0002C27C <AmiBlitz3_noFPU_r470.ab3@14361>   MOVE.w cmp2(PC),D1
0002C280 <AmiBlitz3_noFPU_r470.ab3@14362> BRA.w doltcmp2
0002C284 <AmiBlitz3_noFPU_r470.ab3@14366>   MOVE.w cmp2(PC),D1
0002C288 <AmiBlitz3_noFPU_r470.ab3@14367> BRA.w dolecmp2
0002C28C <AmiBlitz3_noFPU_r470.ab3@14371>   MOVE.w cmp2(PC),D1
0002C290 <AmiBlitz3_noFPU_r470.ab3@14372> BRA.w dogtcmp2
0002C294 <AmiBlitz3_noFPU_r470.ab3@14376>   MOVE.w cmp2(PC),D1
0002C298 <AmiBlitz3_noFPU_r470.ab3@14377> BRA.w dogecmp2
0002C29A <AmiBlitz3_noFPU_r470.ab3@14380> cfregat:  Ds.w 1
0002C2A0 <AmiBlitz3_noFPU_r470.ab3@14384>   MOVE.w D1,libjsr+2
0002C2A4 <AmiBlitz3_noFPU_r470.ab3@14385>    BSR.w JL_0_AD40
0002C2A6 <AmiBlitz3_noFPU_r470.ab3@14386>   MOVE.l D4,D1
0002C2AA <AmiBlitz3_noFPU_r470.ab3@14387>    BSR.w JL_0_AD38
0002C2AE <AmiBlitz3_noFPU_r470.ab3@14388>   MOVE.w #$C900,D1
0002C2B2 <AmiBlitz3_noFPU_r470.ab3@14389>    BSR.w Atokejsr
0002C2B6 <AmiBlitz3_noFPU_r470.ab3@14390>    BSR.w JL_0_A352
0002C2BC <AmiBlitz3_noFPU_r470.ab3@14391>   MOVE.l libjsr,D1
0002C2C0 <AmiBlitz3_noFPU_r470.ab3@14392>    BSR.w writelong
0002C2CA <AmiBlitz3_noFPU_r470.ab3@14393>   MOVE.w regnum,cfregat
0002C2D0 <AmiBlitz3_noFPU_r470.ab3@14394>   CLR.w regnum
0002C2D2 <AmiBlitz3_noFPU_r470.ab3@14395> RTS
0002C2DC <AmiBlitz3_noFPU_r470.ab3@14399>   MOVE.w cfregat,regnum
0002C2E0 <AmiBlitz3_noFPU_r470.ab3@14400>    BSR.w JL_0_A36E
0002C2E2 <AmiBlitz3_noFPU_r470.ab3@14401>   MOVE.l D5,D1
0002C2E6 <AmiBlitz3_noFPU_r470.ab3@14402> BRA.w JL_0_AD38
0002C2E8 <AmiBlitz3_noFPU_r470.ab3@14406>    MOVEQ.l #-$2A,D1
0002C2EE <AmiBlitz3_noFPU_r470.ab3@14407>    TST.b fpu
0002C2F2 <AmiBlitz3_noFPU_r470.ab3@14408>    BEQ do_equal_float__nofpu
0002C2F4 <AmiBlitz3_noFPU_r470.ab3@14409>    MOVEQ #0,d1
0002C2FA <AmiBlitz3_noFPU_r470.ab3@14410>    MOVE.w regnum,d1
0002C2FC <AmiBlitz3_noFPU_r470.ab3@14411>    MOVE.l d1,d2
0002C2FE <AmiBlitz3_noFPU_r470.ab3@14412>    ASL.l #7,d1
0002C300 <AmiBlitz3_noFPU_r470.ab3@14413>    ADDQ  #1,d2
0002C302 <AmiBlitz3_noFPU_r470.ab3@14414>    ASL.l #8,d2
0002C304 <AmiBlitz3_noFPU_r470.ab3@14415>    ASL.l #2,d2
0002C306 <AmiBlitz3_noFPU_r470.ab3@14416>    OR.l d2,d1
0002C30C <AmiBlitz3_noFPU_r470.ab3@14417>    OR.l #$f2000038,d1
0002C312 <AmiBlitz3_noFPU_r470.ab3@14418>    JSR writelong
0002C316 <AmiBlitz3_noFPU_r470.ab3@14419>    MOVE.w #$f240,d1
0002C31C <AmiBlitz3_noFPU_r470.ab3@14420>    OR.w regnum,d1
0002C320 <AmiBlitz3_noFPU_r470.ab3@14421>    BSR writeword
0002C322 <AmiBlitz3_noFPU_r470.ab3@14422>    MOVEQ.l #1,d2
0002C326 <AmiBlitz3_noFPU_r470.ab3@14423>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C32A <AmiBlitz3_noFPU_r470.ab3@14424>    BSR writeword
0002C32C <AmiBlitz3_noFPU_r470.ab3@14425> RTS
0002C330 <AmiBlitz3_noFPU_r470.ab3@14428>    BSR.w docflib
0002C334 <AmiBlitz3_noFPU_r470.ab3@14429>    BSR.w doeqcmp
0002C338 <AmiBlitz3_noFPU_r470.ab3@14430> BRA.w docflib2
0002C33A <AmiBlitz3_noFPU_r470.ab3@14434>   MOVEQ.l #-$2A,D1
0002C340 <AmiBlitz3_noFPU_r470.ab3@14435>   TST.b fpu
0002C344 <AmiBlitz3_noFPU_r470.ab3@14436>    BEQ do_not_equal_float__nofpu
0002C346 <AmiBlitz3_noFPU_r470.ab3@14437>    MOVEQ #0,d1
0002C34C <AmiBlitz3_noFPU_r470.ab3@14438>    MOVE.w regnum,d1
0002C34E <AmiBlitz3_noFPU_r470.ab3@14439>    MOVE.l d1,d2
0002C350 <AmiBlitz3_noFPU_r470.ab3@14440>    ASL.l #7,d1
0002C352 <AmiBlitz3_noFPU_r470.ab3@14441>    ADDQ  #1,d2
0002C354 <AmiBlitz3_noFPU_r470.ab3@14442>    ASL.l #8,d2
0002C356 <AmiBlitz3_noFPU_r470.ab3@14443>    ASL.l #2,d2
0002C358 <AmiBlitz3_noFPU_r470.ab3@14444>    OR.l d2,d1
0002C35E <AmiBlitz3_noFPU_r470.ab3@14445>    OR.l #$f2000038,d1
0002C364 <AmiBlitz3_noFPU_r470.ab3@14446>    JSR writelong
0002C368 <AmiBlitz3_noFPU_r470.ab3@14447>    MOVE.w #$f240,d1
0002C36E <AmiBlitz3_noFPU_r470.ab3@14448>    OR.w regnum,d1
0002C372 <AmiBlitz3_noFPU_r470.ab3@14449>    BSR writeword
0002C378 <AmiBlitz3_noFPU_r470.ab3@14450>    MOVE.l #1,d2
0002C37C <AmiBlitz3_noFPU_r470.ab3@14451>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C380 <AmiBlitz3_noFPU_r470.ab3@14452>    BSR writeword
0002C382 <AmiBlitz3_noFPU_r470.ab3@14453> RTS
0002C386 <AmiBlitz3_noFPU_r470.ab3@14456>    BSR.w docflib
0002C38A <AmiBlitz3_noFPU_r470.ab3@14457>    BSR.w donecmp
0002C38E <AmiBlitz3_noFPU_r470.ab3@14458> BRA.w docflib2
0002C390 <AmiBlitz3_noFPU_r470.ab3@14462>   MOVEQ.l #-$2A,D1
0002C396 <AmiBlitz3_noFPU_r470.ab3@14463>     TST.b fpu
0002C39A <AmiBlitz3_noFPU_r470.ab3@14464>    BEQ do_littler_float__nofpu
0002C39C <AmiBlitz3_noFPU_r470.ab3@14465>    MOVEQ #0,d1
0002C3A2 <AmiBlitz3_noFPU_r470.ab3@14466>    MOVE.w regnum,d1
0002C3A4 <AmiBlitz3_noFPU_r470.ab3@14467>    MOVE.l d1,d2
0002C3A6 <AmiBlitz3_noFPU_r470.ab3@14468>    ASL.l #7,d1
0002C3A8 <AmiBlitz3_noFPU_r470.ab3@14469>    ADDQ  #1,d2
0002C3AA <AmiBlitz3_noFPU_r470.ab3@14470>    ASL.l #8,d2
0002C3AC <AmiBlitz3_noFPU_r470.ab3@14471>    ASL.l #2,d2
0002C3AE <AmiBlitz3_noFPU_r470.ab3@14472>    OR.l d2,d1
0002C3B4 <AmiBlitz3_noFPU_r470.ab3@14473>    OR.l #$f2000038,d1
0002C3BA <AmiBlitz3_noFPU_r470.ab3@14474>    JSR writelong
0002C3BE <AmiBlitz3_noFPU_r470.ab3@14475>    MOVE.w #$f240,d1
0002C3C4 <AmiBlitz3_noFPU_r470.ab3@14476>    OR.w regnum,d1
0002C3C8 <AmiBlitz3_noFPU_r470.ab3@14477>    BSR writeword
0002C3CE <AmiBlitz3_noFPU_r470.ab3@14478>    MOVE.l #$1,d2
0002C3D2 <AmiBlitz3_noFPU_r470.ab3@14479>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C3D6 <AmiBlitz3_noFPU_r470.ab3@14480>    BSR writeword
0002C3D8 <AmiBlitz3_noFPU_r470.ab3@14481> RTS
0002C3DC <AmiBlitz3_noFPU_r470.ab3@14484>    BSR.w docflib
0002C3E0 <AmiBlitz3_noFPU_r470.ab3@14485>    BSR.w doltcmp
0002C3E4 <AmiBlitz3_noFPU_r470.ab3@14486> BRA.w docflib2
0002C3E6 <AmiBlitz3_noFPU_r470.ab3@14490>   MOVEQ.l #-$2A,D1
0002C3EC <AmiBlitz3_noFPU_r470.ab3@14491>   TST.b fpu
0002C3F0 <AmiBlitz3_noFPU_r470.ab3@14492>    BEQ do_littler_equal_float__nofpu
0002C3F2 <AmiBlitz3_noFPU_r470.ab3@14493>    MOVEQ #0,d1
0002C3F8 <AmiBlitz3_noFPU_r470.ab3@14494>    MOVE.w regnum,d1
0002C3FA <AmiBlitz3_noFPU_r470.ab3@14495>    MOVE.l d1,d2
0002C3FC <AmiBlitz3_noFPU_r470.ab3@14496>    ASL.l #7,d1
0002C3FE <AmiBlitz3_noFPU_r470.ab3@14497>    ADDQ  #1,d2
0002C400 <AmiBlitz3_noFPU_r470.ab3@14498>    ASL.l #8,d2
0002C402 <AmiBlitz3_noFPU_r470.ab3@14499>    ASL.l #2,d2
0002C404 <AmiBlitz3_noFPU_r470.ab3@14500>    OR.l d2,d1
0002C40A <AmiBlitz3_noFPU_r470.ab3@14501>    OR.l #$f2000038,d1
0002C410 <AmiBlitz3_noFPU_r470.ab3@14502>    JSR writelong
0002C414 <AmiBlitz3_noFPU_r470.ab3@14503>    MOVE.w #$f240,d1
0002C41A <AmiBlitz3_noFPU_r470.ab3@14504>    OR.w regnum,d1
0002C41E <AmiBlitz3_noFPU_r470.ab3@14505>    BSR writeword
0002C424 <AmiBlitz3_noFPU_r470.ab3@14506>    MOVE.l #1,d2
0002C428 <AmiBlitz3_noFPU_r470.ab3@14507>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C42C <AmiBlitz3_noFPU_r470.ab3@14508>    BSR writeword
0002C42E <AmiBlitz3_noFPU_r470.ab3@14509> RTS
0002C432 <AmiBlitz3_noFPU_r470.ab3@14512>    BSR.w docflib
0002C436 <AmiBlitz3_noFPU_r470.ab3@14513>    BSR.w dolecmp
0002C43A <AmiBlitz3_noFPU_r470.ab3@14514> BRA.w docflib2
0002C43C <AmiBlitz3_noFPU_r470.ab3@14518>   MOVEQ.l #-$2A,D1
0002C442 <AmiBlitz3_noFPU_r470.ab3@14519>    TST.b fpu
0002C446 <AmiBlitz3_noFPU_r470.ab3@14520>    BEQ do_greater_float__nofpu
0002C448 <AmiBlitz3_noFPU_r470.ab3@14521>     MOVEQ #0,d1
0002C44E <AmiBlitz3_noFPU_r470.ab3@14522>    MOVE.w regnum,d1
0002C450 <AmiBlitz3_noFPU_r470.ab3@14523>    MOVE.l d1,d2
0002C452 <AmiBlitz3_noFPU_r470.ab3@14524>    ASL.l #7,d1
0002C454 <AmiBlitz3_noFPU_r470.ab3@14525>    ADDQ  #1,d2
0002C456 <AmiBlitz3_noFPU_r470.ab3@14526>    ASL.l #8,d2
0002C458 <AmiBlitz3_noFPU_r470.ab3@14527>    ASL.l #2,d2
0002C45A <AmiBlitz3_noFPU_r470.ab3@14528>    OR.l d2,d1
0002C460 <AmiBlitz3_noFPU_r470.ab3@14529>    OR.l #$f2000038,d1
0002C466 <AmiBlitz3_noFPU_r470.ab3@14530>    JSR writelong
0002C46A <AmiBlitz3_noFPU_r470.ab3@14531>    MOVE.w #$f240,d1
0002C470 <AmiBlitz3_noFPU_r470.ab3@14532>    OR.w regnum,d1
0002C474 <AmiBlitz3_noFPU_r470.ab3@14533>    BSR writeword
0002C47A <AmiBlitz3_noFPU_r470.ab3@14534>    MOVE.l #1,d2
0002C47E <AmiBlitz3_noFPU_r470.ab3@14535>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C482 <AmiBlitz3_noFPU_r470.ab3@14536>    BSR writeword
0002C484 <AmiBlitz3_noFPU_r470.ab3@14537> RTS
0002C488 <AmiBlitz3_noFPU_r470.ab3@14540>    BSR.w docflib
0002C48C <AmiBlitz3_noFPU_r470.ab3@14541>    BSR.w dogtcmp
0002C490 <AmiBlitz3_noFPU_r470.ab3@14542> BRA.w docflib2
0002C492 <AmiBlitz3_noFPU_r470.ab3@14546>   MOVEQ.l #-$2A,D1
0002C498 <AmiBlitz3_noFPU_r470.ab3@14547>  TST.b fpu
0002C49C <AmiBlitz3_noFPU_r470.ab3@14548>    BEQ do_greater_equal_float__nofpu
0002C49E <AmiBlitz3_noFPU_r470.ab3@14549>    MOVEQ #0,d1
0002C4A4 <AmiBlitz3_noFPU_r470.ab3@14550>    MOVE.w regnum,d1
0002C4A6 <AmiBlitz3_noFPU_r470.ab3@14551>    MOVE.l d1,d2
0002C4A8 <AmiBlitz3_noFPU_r470.ab3@14552>    ASL.l #7,d1
0002C4AA <AmiBlitz3_noFPU_r470.ab3@14553>    ADDQ  #1,d2
0002C4AC <AmiBlitz3_noFPU_r470.ab3@14554>    ASL.l #8,d2
0002C4AE <AmiBlitz3_noFPU_r470.ab3@14555>    ASL.l #2,d2
0002C4B0 <AmiBlitz3_noFPU_r470.ab3@14556>    OR.l d2,d1
0002C4B6 <AmiBlitz3_noFPU_r470.ab3@14557>    OR.l #$f2000038,d1
0002C4BC <AmiBlitz3_noFPU_r470.ab3@14558>    JSR writelong
0002C4C0 <AmiBlitz3_noFPU_r470.ab3@14559>    MOVE.w #$f240,d1
0002C4C6 <AmiBlitz3_noFPU_r470.ab3@14560>    OR.w regnum,d1
0002C4CA <AmiBlitz3_noFPU_r470.ab3@14561>    BSR writeword
0002C4D0 <AmiBlitz3_noFPU_r470.ab3@14562>    MOVE.l #1,d2
0002C4D4 <AmiBlitz3_noFPU_r470.ab3@14563>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C4D8 <AmiBlitz3_noFPU_r470.ab3@14564>    BSR writeword
0002C4DA <AmiBlitz3_noFPU_r470.ab3@14565> RTS
0002C4DE <AmiBlitz3_noFPU_r470.ab3@14568>    BSR.w docflib
0002C4E2 <AmiBlitz3_noFPU_r470.ab3@14569>    BSR.w dogecmp
0002C4E6 <AmiBlitz3_noFPU_r470.ab3@14570> BRA.w docflib2
0002C4EC <AmiBlitz3_noFPU_r470.ab3@14575>   MOVE.l #$CE00,D1
0002C4F2 <AmiBlitz3_noFPU_r470.ab3@14576>    MOVE.l d1,lastinstruction
0002C4F6 <AmiBlitz3_noFPU_r470.ab3@14577>    BSR.w Atokejsr
0002C4FA <AmiBlitz3_noFPU_r470.ab3@14578> BRA.w doeqcmp
0002C500 <AmiBlitz3_noFPU_r470.ab3@14582>   MOVE.l #$CE00,D1
0002C506 <AmiBlitz3_noFPU_r470.ab3@14583>    MOVE.l d1,lastinstruction
0002C50A <AmiBlitz3_noFPU_r470.ab3@14584>    BSR.w Atokejsr
0002C50E <AmiBlitz3_noFPU_r470.ab3@14585> BRA.w donecmp
0002C514 <AmiBlitz3_noFPU_r470.ab3@14589>   MOVE.l #$CE00,D1
0002C51A <AmiBlitz3_noFPU_r470.ab3@14590>    MOVE.l d1,lastinstruction
0002C51E <AmiBlitz3_noFPU_r470.ab3@14591>    BSR.w Atokejsr
0002C522 <AmiBlitz3_noFPU_r470.ab3@14592> BRA.w doltcmp
0002C528 <AmiBlitz3_noFPU_r470.ab3@14596>   MOVE.l #$CE00,D1
0002C52E <AmiBlitz3_noFPU_r470.ab3@14597>    MOVE.l d1,lastinstruction
0002C532 <AmiBlitz3_noFPU_r470.ab3@14598>    BSR.w Atokejsr
0002C536 <AmiBlitz3_noFPU_r470.ab3@14599> BRA.w dolecmp
0002C53C <AmiBlitz3_noFPU_r470.ab3@14603>   MOVE.l #$CE00,D1
0002C542 <AmiBlitz3_noFPU_r470.ab3@14604>    MOVE.l d1,lastinstruction
0002C546 <AmiBlitz3_noFPU_r470.ab3@14605>    BSR.w Atokejsr
0002C54A <AmiBlitz3_noFPU_r470.ab3@14606> BRA.w dogtcmp
0002C550 <AmiBlitz3_noFPU_r470.ab3@14610>   MOVE.l #$CE00,D1
0002C556 <AmiBlitz3_noFPU_r470.ab3@14611>    MOVE.l d1,lastinstruction
0002C55A <AmiBlitz3_noFPU_r470.ab3@14612>    BSR.w Atokejsr
0002C55E <AmiBlitz3_noFPU_r470.ab3@14613> BRA.w dogecmp
0002C564 <AmiBlitz3_noFPU_r470.ab3@14618>   TST.b fast                                               ;compare
0002C568 <AmiBlitz3_noFPU_r470.ab3@14619>   BEQ cmpit__org
0002C56E <AmiBlitz3_noFPU_r470.ab3@14623>   MOVE.l destpointer,a0
0002C574 <AmiBlitz3_noFPU_r470.ab3@14624>   SUB.l imm_addr,a0
0002C57A <AmiBlitz3_noFPU_r470.ab3@14625>   CMP.l #6,a0
0002C57E <AmiBlitz3_noFPU_r470.ab3@14626>   BNE cmpit__l11
0002C584 <AmiBlitz3_noFPU_r470.ab3@14627>   MOVE.l imm_addr,a0
0002C58C <AmiBlitz3_noFPU_r470.ab3@14628>   CMP.w #$223c,imm_addr
0002C590 <AmiBlitz3_noFPU_r470.ab3@14629>   BNE cmpit__org
0002C596 <AmiBlitz3_noFPU_r470.ab3@14630>   ADD.w #$8e80,-6(a4)
0002C59C <AmiBlitz3_noFPU_r470.ab3@14633>   CLR.l imm_addr
0002C59E <AmiBlitz3_noFPU_r470.ab3@14634> RTS
0002C5A4 <AmiBlitz3_noFPU_r470.ab3@14637>   CMP.l #4,a0
0002C5A8 <AmiBlitz3_noFPU_r470.ab3@14638>   BNE cmpit__l10
0002C5AC <AmiBlitz3_noFPU_r470.ab3@14639>   CMP.b #2,d3
0002C5B0 <AmiBlitz3_noFPU_r470.ab3@14640>   BNE cmpit__l11b
0002C5B6 <AmiBlitz3_noFPU_r470.ab3@14641>   ADD.w #$7e40,-4(a4)
0002C5B8 <AmiBlitz3_noFPU_r470.ab3@14642> RTS
0002C5BE <AmiBlitz3_noFPU_r470.ab3@14645>  ADD.w #$7e00,-4(a4)
0002C5C0 <AmiBlitz3_noFPU_r470.ab3@14646> RTS
0002C5C6 <AmiBlitz3_noFPU_r470.ab3@14649>    MOVE.l destpointer,a0
0002C5CC <AmiBlitz3_noFPU_r470.ab3@14650>    SUB.l load_var_addr,a0
0002C5D0 <AmiBlitz3_noFPU_r470.ab3@14651>    CMP.w #4,a0
0002C5D4 <AmiBlitz3_noFPU_r470.ab3@14652>    BNE cmpit__org
0002C5D8 <AmiBlitz3_noFPU_r470.ab3@14653>    CMP.b #3,d3
0002C5DC <AmiBlitz3_noFPU_r470.ab3@14654>    BCS cmpit__lv1
0002C5E2 <AmiBlitz3_noFPU_r470.ab3@14655>    CLR.l load_var_addr
0002C5E8 <AmiBlitz3_noFPU_r470.ab3@14656>    ADD.w #$9080-$200,-4(a4)
0002C5EA <AmiBlitz3_noFPU_r470.ab3@14657> RTS
0002C5EE <AmiBlitz3_noFPU_r470.ab3@14660>   CMP.b #2,d3
0002C5F2 <AmiBlitz3_noFPU_r470.ab3@14661>    BNE cmpit__org
0002C5F8 <AmiBlitz3_noFPU_r470.ab3@14662>    CLR.l load_var_addr
0002C5FE <AmiBlitz3_noFPU_r470.ab3@14663>    ADD.w #$8040-$200,-4(a4)
0002C600 <AmiBlitz3_noFPU_r470.ab3@14664> RTS
0002C606 <AmiBlitz3_noFPU_r470.ab3@14667>   MOVE.w regnum,D3
0002C608 <AmiBlitz3_noFPU_r470.ab3@14668>   OR.w D3,D1
0002C60A <AmiBlitz3_noFPU_r470.ab3@14669>   LSL.w #8,D3
0002C60C <AmiBlitz3_noFPU_r470.ab3@14670>   LSL.w #1,D3
0002C60E <AmiBlitz3_noFPU_r470.ab3@14671>   OR.w D3,D1
0002C610 <AmiBlitz3_noFPU_r470.ab3@14672>   ADDQ.w #1,D1
0002C614 <AmiBlitz3_noFPU_r470.ab3@14673> BRA.w writeword
0002C618 <AmiBlitz3_noFPU_r470.ab3@14677>    BSR.w cmpit
0002C61C <AmiBlitz3_noFPU_r470.ab3@14680>    MOVE.w mseq(PC),D1
0002C620 <AmiBlitz3_noFPU_r470.ab3@14681> BRA.w cpoke
0002C624 <AmiBlitz3_noFPU_r470.ab3@14685>   BSR.w cmpit
0002C628 <AmiBlitz3_noFPU_r470.ab3@14688>   MOVE.w msne(PC),D1
0002C62C <AmiBlitz3_noFPU_r470.ab3@14689> BRA.w cpoke
0002C630 <AmiBlitz3_noFPU_r470.ab3@14693>   BSR.w cmpit
0002C634 <AmiBlitz3_noFPU_r470.ab3@14696>    MOVE.w mslt(PC),D1
0002C638 <AmiBlitz3_noFPU_r470.ab3@14697> BRA.w cpoke
0002C63C <AmiBlitz3_noFPU_r470.ab3@14701>    BSR.w cmpit
0002C640 <AmiBlitz3_noFPU_r470.ab3@14704>    MOVE.w msle(PC),D1
0002C644 <AmiBlitz3_noFPU_r470.ab3@14705> BRA.w cpoke
0002C648 <AmiBlitz3_noFPU_r470.ab3@14709>    BSR.w cmpit
0002C64C <AmiBlitz3_noFPU_r470.ab3@14712>    MOVE.w msgt(PC),D1
0002C650 <AmiBlitz3_noFPU_r470.ab3@14713> BRA.w cpoke
0002C654 <AmiBlitz3_noFPU_r470.ab3@14717>   BSR.w cmpit
0002C658 <AmiBlitz3_noFPU_r470.ab3@14720>    MOVE.w msge(PC),D1
0002C65E <AmiBlitz3_noFPU_r470.ab3@14723>    OR.w regnum,D1
0002C662 <AmiBlitz3_noFPU_r470.ab3@14724>    CMP.w #5,d2
0002C666 <AmiBlitz3_noFPU_r470.ab3@14725>    BNE cpoke__nod0
0002C66A <AmiBlitz3_noFPU_r470.ab3@14726>    CMP.w #5,d3
0002C66E <AmiBlitz3_noFPU_r470.ab3@14727>    BNE cpoke__nod0
0002C670 <AmiBlitz3_noFPU_r470.ab3@14728>    MOVE.l d1,-(a7)
0002C676 <AmiBlitz3_noFPU_r470.ab3@14729>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002C67A <AmiBlitz3_noFPU_r470.ab3@14730>    BSR writelong
0002C67C <AmiBlitz3_noFPU_r470.ab3@14731>    MOVE.l (a7)+,d1
0002C680 <AmiBlitz3_noFPU_r470.ab3@14734>    BSR.w writeword                                         ;writeseq
0002C682 <AmiBlitz3_noFPU_r470.ab3@14735>    MOVEQ.l #1,d2
0002C688 <AmiBlitz3_noFPU_r470.ab3@14736>    MOVE.l lasttoken,d1
0002C68E <AmiBlitz3_noFPU_r470.ab3@14737>     TST.b fast
0002C692 <AmiBlitz3_noFPU_r470.ab3@14738>     BEQ.s cpoke__l11
0002C698 <AmiBlitz3_noFPU_r470.ab3@14739>    CMP.l #$800b,d1
0002C69C <AmiBlitz3_noFPU_r470.ab3@14740>    BEQ cpoke__l10
0002C6A0 <AmiBlitz3_noFPU_r470.ab3@14743>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002C6A6 <AmiBlitz3_noFPU_r470.ab3@14744>   OR.w regnum,D1
0002C6AA <AmiBlitz3_noFPU_r470.ab3@14745>    BSR.w writeword                                         ;writeext.w
0002C6AC <AmiBlitz3_noFPU_r470.ab3@14746>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002C6AE <AmiBlitz3_noFPU_r470.ab3@14749> RTS
0002C6B2 <AmiBlitz3_noFPU_r470.ab3@14754>   MOVE.w #$D040,D1
0002C6B4 <AmiBlitz3_noFPU_r470.ab3@14755>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002C6B8 <AmiBlitz3_noFPU_r470.ab3@14756> BRA.w doplus2
0002C6BC <AmiBlitz3_noFPU_r470.ab3@14760>   MOVE.w #$D040,D1
0002C6BE <AmiBlitz3_noFPU_r470.ab3@14761>   MOVEQ.l #$03,D2                                          ;now a long
0002C6C2 <AmiBlitz3_noFPU_r470.ab3@14762>    BSR.w doplus2
0002C6C6 <AmiBlitz3_noFPU_r470.ab3@14763> BRA.w convert_word_to_long
0002C6CA <AmiBlitz3_noFPU_r470.ab3@14767>   MOVE.w #$D080,D1                                         ;writeaddlong
0002C6CC <AmiBlitz3_noFPU_r470.ab3@14770>   MOVE.w d1,a1
0002C6D2 <AmiBlitz3_noFPU_r470.ab3@14771>   TST.b fast
0002C6D6 <AmiBlitz3_noFPU_r470.ab3@14772>   BEQ doplus2__l10
0002C6D8 <AmiBlitz3_noFPU_r470.ab3@14776>   ASR.w #8,d1
0002C6DC <AmiBlitz3_noFPU_r470.ab3@14777>   CMP.b #$90,d1
0002C6E0 <AmiBlitz3_noFPU_r470.ab3@14778>   BEQ doplus2__sub1
0002C6E4 <AmiBlitz3_noFPU_r470.ab3@14779>   CMP.b #$d0,d1
0002C6E8 <AmiBlitz3_noFPU_r470.ab3@14780>   BNE doplus2__l10
0002C6EC <AmiBlitz3_noFPU_r470.ab3@14781>   CMP.b #3,d3
0002C6F0 <AmiBlitz3_noFPU_r470.ab3@14782>   BCS doplus2__lq10
0002C6F6 <AmiBlitz3_noFPU_r470.ab3@14783>   TST.b quickadd
0002C6FC <AmiBlitz3_noFPU_r470.ab3@14787>    MOVE.l destpointer,a0
0002C702 <AmiBlitz3_noFPU_r470.ab3@14788>    CLR.b quickadd
0002C708 <AmiBlitz3_noFPU_r470.ab3@14789>    CLR.l load_var_addr
0002C70E <AmiBlitz3_noFPU_r470.ab3@14790>    SUB.l imm_addr,a0
0002C712 <AmiBlitz3_noFPU_r470.ab3@14791>    CMP.w #6,a0
0002C716 <AmiBlitz3_noFPU_r470.ab3@14792>    BEQ doplus2__li10
0002C71A <AmiBlitz3_noFPU_r470.ab3@14793>    CMP.w #4,a0
0002C71E <AmiBlitz3_noFPU_r470.ab3@14794>    BNE.s doplus2__li1
0002C724 <AmiBlitz3_noFPU_r470.ab3@14795>    CLR.l imm_addr
0002C72A <AmiBlitz3_noFPU_r470.ab3@14796>    ADD.w #$a040-$200,-4(a4)
0002C72C <AmiBlitz3_noFPU_r470.ab3@14797> RTS
0002C72E <AmiBlitz3_noFPU_r470.ab3@14800>    MOVE.l a4,a0
0002C734 <AmiBlitz3_noFPU_r470.ab3@14801>    SUB.l load_var_addr,a0
0002C73A <AmiBlitz3_noFPU_r470.ab3@14802>    CMP.l #$a,a0
0002C73E <AmiBlitz3_noFPU_r470.ab3@14803>    BNE doplus2__l10e
0002C744 <AmiBlitz3_noFPU_r470.ab3@14804>    CLR.l load_var_addr
0002C748 <AmiBlitz3_noFPU_r470.ab3@14805>    MOVE.w -$8(a4),d1
0002C74E <AmiBlitz3_noFPU_r470.ab3@14806>    MOVE.l -$4(a4),-$8(a4)
0002C752 <AmiBlitz3_noFPU_r470.ab3@14807>    MOVE.w d1,-$4(a4)
0002C758 <AmiBlitz3_noFPU_r470.ab3@14808>    SUB.w #$1980,-$a(a4)
0002C75E <AmiBlitz3_noFPU_r470.ab3@14809>    SUBQ.l #2,destpointer
0002C760 <AmiBlitz3_noFPU_r470.ab3@14810> RTS
0002C766 <AmiBlitz3_noFPU_r470.ab3@14813>   CLR.b quickadd
0002C76A <AmiBlitz3_noFPU_r470.ab3@14814> BRA doplus2__l10
0002C770 <AmiBlitz3_noFPU_r470.ab3@14817>    CLR.l imm_addr
0002C774 <AmiBlitz3_noFPU_r470.ab3@14818>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002C778 <AmiBlitz3_noFPU_r470.ab3@14819>    BNE doplus2__doit
0002C77E <AmiBlitz3_noFPU_r470.ab3@14820>    SUBQ.l #6,destpointer
0002C780 <AmiBlitz3_noFPU_r470.ab3@14821> RTS
0002C786 <AmiBlitz3_noFPU_r470.ab3@14824>    ADD.w #$b080-$200,-6(a4)
0002C788 <AmiBlitz3_noFPU_r470.ab3@14825> RTS
0002C78E <AmiBlitz3_noFPU_r470.ab3@14828>    MOVE.l destpointer,a0
0002C794 <AmiBlitz3_noFPU_r470.ab3@14829>    SUB.l load_var_addr,a0
0002C798 <AmiBlitz3_noFPU_r470.ab3@14830>    CMP.w #4,a0
0002C79C <AmiBlitz3_noFPU_r470.ab3@14831>    BNE doplus2__l10
0002C7A0 <AmiBlitz3_noFPU_r470.ab3@14832>    CMP.b #3,d3
0002C7A4 <AmiBlitz3_noFPU_r470.ab3@14833>    BNE doplus2__lv1
0002C7AA <AmiBlitz3_noFPU_r470.ab3@14834>    CLR.l load_var_addr
0002C7B0 <AmiBlitz3_noFPU_r470.ab3@14835>    ADD.w #$b080-$200,-4(a4)
0002C7B2 <AmiBlitz3_noFPU_r470.ab3@14836> RTS
0002C7B6 <AmiBlitz3_noFPU_r470.ab3@14839>   CMP.b #2,d3
0002C7BA <AmiBlitz3_noFPU_r470.ab3@14840>   BNE doplus2__l10
0002C7C0 <AmiBlitz3_noFPU_r470.ab3@14841>   CLR.l load_var_addr
0002C7C6 <AmiBlitz3_noFPU_r470.ab3@14842>   ADD.w #$a040-$200,-4(a4)
0002C7C8 <AmiBlitz3_noFPU_r470.ab3@14843> RTS
0002C7CE <AmiBlitz3_noFPU_r470.ab3@14846>   MOVE.w regnum,D3
0002C7D0 <AmiBlitz3_noFPU_r470.ab3@14847>   MOVE.w a1,d1
0002C7D2 <AmiBlitz3_noFPU_r470.ab3@14848>   OR.w D3,D1
0002C7D4 <AmiBlitz3_noFPU_r470.ab3@14849>   ADDQ.w #1,D1
0002C7D6 <AmiBlitz3_noFPU_r470.ab3@14850>   LSL.w #8,D3
0002C7D8 <AmiBlitz3_noFPU_r470.ab3@14851>   LSL.w #1,D3
0002C7DA <AmiBlitz3_noFPU_r470.ab3@14852>   OR.w D3,D1
0002C7DE <AmiBlitz3_noFPU_r470.ab3@14853> BRA.w writeword
0002C7E2 <AmiBlitz3_noFPU_r470.ab3@14856>    CMP.b #3,d3
0002C7E6 <AmiBlitz3_noFPU_r470.ab3@14857>    BCS doplus2__sub1_lq10
0002C7EC <AmiBlitz3_noFPU_r470.ab3@14858>    TST.b quickadd
0002C7F2 <AmiBlitz3_noFPU_r470.ab3@14862>    MOVE.l destpointer,a0
0002C7F8 <AmiBlitz3_noFPU_r470.ab3@14863>    CLR.b quickadd
0002C7FE <AmiBlitz3_noFPU_r470.ab3@14864>    CLR.l load_var_addr
0002C804 <AmiBlitz3_noFPU_r470.ab3@14865>    SUB.l imm_addr,a0
0002C808 <AmiBlitz3_noFPU_r470.ab3@14866>    CMP.w #6,a0
0002C80C <AmiBlitz3_noFPU_r470.ab3@14867>    BEQ doplus2__sub1_li10
0002C810 <AmiBlitz3_noFPU_r470.ab3@14868>    CMP.w #4,a0
0002C814 <AmiBlitz3_noFPU_r470.ab3@14869>    BNE.s doplus2__sub1_li1
0002C81A <AmiBlitz3_noFPU_r470.ab3@14870>    CLR.l imm_addr
0002C820 <AmiBlitz3_noFPU_r470.ab3@14871>    ADD.w #$6040-$200,-4(a4)
0002C822 <AmiBlitz3_noFPU_r470.ab3@14872> RTS
0002C824 <AmiBlitz3_noFPU_r470.ab3@14875>    MOVE.l a4,a0
0002C82A <AmiBlitz3_noFPU_r470.ab3@14876>     SUB.l load_var_addr,a0
0002C830 <AmiBlitz3_noFPU_r470.ab3@14877>     CMP.l #$a,a0
0002C834 <AmiBlitz3_noFPU_r470.ab3@14878>     BNE doplus2__sub1_l10e
0002C83A <AmiBlitz3_noFPU_r470.ab3@14879>    CLR.l load_var_addr
0002C83E <AmiBlitz3_noFPU_r470.ab3@14880>    MOVE.w -$8(a4),d1
0002C844 <AmiBlitz3_noFPU_r470.ab3@14881>    MOVE.l -$4(a4),-$8(a4)
0002C848 <AmiBlitz3_noFPU_r470.ab3@14882>    MOVE.w d1,-$4(a4)
0002C84E <AmiBlitz3_noFPU_r470.ab3@14883>    SUB.w #$1b80,-$a(a4)
0002C854 <AmiBlitz3_noFPU_r470.ab3@14884>    SUBQ.l #2,destpointer
0002C856 <AmiBlitz3_noFPU_r470.ab3@14885> RTS
0002C85C <AmiBlitz3_noFPU_r470.ab3@14888>   CLR.b quickadd
0002C860 <AmiBlitz3_noFPU_r470.ab3@14889> BRA doplus2__sub1_l10
0002C866 <AmiBlitz3_noFPU_r470.ab3@14892>    CLR.l imm_addr
0002C86C <AmiBlitz3_noFPU_r470.ab3@14893>    ADD.w #$7080-$200,-6(a4)
0002C86E <AmiBlitz3_noFPU_r470.ab3@14894> RTS
0002C874 <AmiBlitz3_noFPU_r470.ab3@14897>    MOVE.l destpointer,a0
0002C87A <AmiBlitz3_noFPU_r470.ab3@14898>    SUB.l load_var_addr,a0
0002C87E <AmiBlitz3_noFPU_r470.ab3@14899>    CMP.w #4,a0
0002C882 <AmiBlitz3_noFPU_r470.ab3@14900>    BNE doplus2__sub1_l10
0002C886 <AmiBlitz3_noFPU_r470.ab3@14901>    CMP.b #3,d3
0002C88A <AmiBlitz3_noFPU_r470.ab3@14902>    BNE doplus2__sub1_lv1
0002C890 <AmiBlitz3_noFPU_r470.ab3@14903>    CLR.l load_var_addr
0002C896 <AmiBlitz3_noFPU_r470.ab3@14904>    ADD.w #$7080-$200,-4(a4)
0002C898 <AmiBlitz3_noFPU_r470.ab3@14905> RTS
0002C89C <AmiBlitz3_noFPU_r470.ab3@14908>    CMP.b #2,d3
0002C8A0 <AmiBlitz3_noFPU_r470.ab3@14909>    BNE doplus2__sub1_l10
0002C8A6 <AmiBlitz3_noFPU_r470.ab3@14910>    CLR.l load_var_addr
0002C8AC <AmiBlitz3_noFPU_r470.ab3@14911>    ADD.w #$6040-$200,-4(a4)
0002C8AE <AmiBlitz3_noFPU_r470.ab3@14912> RTS
0002C8B4 <AmiBlitz3_noFPU_r470.ab3@14915>   MOVE.w regnum,D3
0002C8B6 <AmiBlitz3_noFPU_r470.ab3@14916>   MOVE.w a1,d1
0002C8B8 <AmiBlitz3_noFPU_r470.ab3@14917>   OR.w D3,D1
0002C8BA <AmiBlitz3_noFPU_r470.ab3@14918>   ADDQ.w #1,D1
0002C8BC <AmiBlitz3_noFPU_r470.ab3@14919>   LSL.w #8,D3
0002C8BE <AmiBlitz3_noFPU_r470.ab3@14920>   LSL.w #1,D3
0002C8C0 <AmiBlitz3_noFPU_r470.ab3@14921>   OR.w D3,D1
0002C8C4 <AmiBlitz3_noFPU_r470.ab3@14922> BRA.w writeword
0002C8C6 <AmiBlitz3_noFPU_r470.ab3@14926>   MOVEQ #0,d0
0002C8CC <AmiBlitz3_noFPU_r470.ab3@14927>   MOVE.w regnum,d0
0002C8CE <AmiBlitz3_noFPU_r470.ab3@14928>   ADDQ #1,d0
0002C8D0 <AmiBlitz3_noFPU_r470.ab3@14929>   ASL.w #8,d0
0002C8D2 <AmiBlitz3_noFPU_r470.ab3@14930>   ASL.w #2,d0
0002C8D8 <AmiBlitz3_noFPU_r470.ab3@14931>   MOVE.l #$f2000022,d1                                     ;fpu add
0002C8DA <AmiBlitz3_noFPU_r470.ab3@14932>   OR.l d0,d1
0002C8E0 <AmiBlitz3_noFPU_r470.ab3@14933>   MOVE.w regnum,d0
0002C8E2 <AmiBlitz3_noFPU_r470.ab3@14934>   ASL.w #7,d0
0002C8E4 <AmiBlitz3_noFPU_r470.ab3@14935>   OR.l d0,d1
0002C8E8 <AmiBlitz3_noFPU_r470.ab3@14936> BRA.w writelong
0002C8EE <AmiBlitz3_noFPU_r470.ab3@14942>   TST.b iee
0002C8F2 <AmiBlitz3_noFPU_r470.ab3@14943>   BNE do_plus_float__fadd1
0002C8F6 <AmiBlitz3_noFPU_r470.ab3@14944>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002C8FC <AmiBlitz3_noFPU_r470.ab3@14947>    MOVE.w D1,libjsr+2
0002C900 <AmiBlitz3_noFPU_r470.ab3@14948>    BSR.w JL_0_AD40
0002C902 <AmiBlitz3_noFPU_r470.ab3@14949>   MOVE.l D4,D1
0002C906 <AmiBlitz3_noFPU_r470.ab3@14950>    BSR.w JL_0_AD38
0002C90A <AmiBlitz3_noFPU_r470.ab3@14951>   MOVE.w #$C900,D1
0002C90E <AmiBlitz3_noFPU_r470.ab3@14952>    BSR.w Atokejsr
0002C912 <AmiBlitz3_noFPU_r470.ab3@14953>    BSR.w JL_0_A352
0002C918 <AmiBlitz3_noFPU_r470.ab3@14954>   MOVE.l libjsr,D1
0002C91C <AmiBlitz3_noFPU_r470.ab3@14955>    BSR.w writelong
0002C920 <AmiBlitz3_noFPU_r470.ab3@14956>    BSR.w JL_0_A36E
0002C922 <AmiBlitz3_noFPU_r470.ab3@14957>   MOVE.l D5,D1
0002C926 <AmiBlitz3_noFPU_r470.ab3@14958> BRA.w JL_0_AD38
0002C92C <AmiBlitz3_noFPU_r470.ab3@14962>   MOVE.w regnum,D1
0002C92E <AmiBlitz3_noFPU_r470.ab3@14963>   LSL.w #8,D1
0002C930 <AmiBlitz3_noFPU_r470.ab3@14964>   LSL.w #1,D1
0002C932 <AmiBlitz3_noFPU_r470.ab3@14965>   MOVE.w D1,-(A7)
0002C936 <AmiBlitz3_noFPU_r470.ab3@14966>   CMP.w #3072,d1
0002C93A <AmiBlitz3_noFPU_r470.ab3@14967>   BEQ 'l1
0002C940 <AmiBlitz3_noFPU_r470.ab3@14968>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002C944 <AmiBlitz3_noFPU_r470.ab3@14969> BRA 'l2
0002C948 <AmiBlitz3_noFPU_r470.ab3@14972>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002C94C <AmiBlitz3_noFPU_r470.ab3@14975>    BSR.w writeword
0002C94E <AmiBlitz3_noFPU_r470.ab3@14976>   MOVE.w (A7)+,D1
0002C954 <AmiBlitz3_noFPU_r470.ab3@14977>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002C958 <AmiBlitz3_noFPU_r470.ab3@14978> BRA.w writeword
0002C95C <AmiBlitz3_noFPU_r470.ab3@14984>   MOVE.w #$9040,D1
0002C960 <AmiBlitz3_noFPU_r470.ab3@14985> BRA.w doplus2
0002C964 <AmiBlitz3_noFPU_r470.ab3@14989>   MOVE.w #$9040,D1
0002C968 <AmiBlitz3_noFPU_r470.ab3@14990> BRA.w doplus2
0002C96C <AmiBlitz3_noFPU_r470.ab3@14994>   MOVE.w #$9080,D1
0002C970 <AmiBlitz3_noFPU_r470.ab3@14995> BRA.w doplus2
0002C976 <AmiBlitz3_noFPU_r470.ab3@14999>    TST.b iee
0002C97A <AmiBlitz3_noFPU_r470.ab3@15000>     BNE do_minus_float__fs1
0002C97E <AmiBlitz3_noFPU_r470.ab3@15001>   MOVE.w #$FFB8,D1                                         ;floatsub
0002C982 <AmiBlitz3_noFPU_r470.ab3@15002> BRA.w doflib
0002C984 <AmiBlitz3_noFPU_r470.ab3@15005>   MOVEQ #0,d0
0002C98A <AmiBlitz3_noFPU_r470.ab3@15006>   MOVE.w regnum,d0
0002C98C <AmiBlitz3_noFPU_r470.ab3@15007>   ADDQ #1,d0
0002C98E <AmiBlitz3_noFPU_r470.ab3@15008>   ASL.w #8,d0
0002C990 <AmiBlitz3_noFPU_r470.ab3@15009>   ASL.w #2,d0
0002C996 <AmiBlitz3_noFPU_r470.ab3@15010>   MOVE.l #$f2000028,d1
0002C998 <AmiBlitz3_noFPU_r470.ab3@15011>   OR.l d0,d1
0002C99E <AmiBlitz3_noFPU_r470.ab3@15012>   MOVE.w regnum,d0
0002C9A0 <AmiBlitz3_noFPU_r470.ab3@15013>   ASL.w #7,d0
0002C9A2 <AmiBlitz3_noFPU_r470.ab3@15014>   OR.l d0,d1
0002C9A6 <AmiBlitz3_noFPU_r470.ab3@15015> BRA.w writelong
0002C9AA <AmiBlitz3_noFPU_r470.ab3@15021>   MOVE.w #$C1C0,D1
0002C9AC <AmiBlitz3_noFPU_r470.ab3@15022>   MOVEQ.l #$02,D2                                          ;now a word
0002C9B0 <AmiBlitz3_noFPU_r470.ab3@15023> BRA.w doplus2
0002C9B4 <AmiBlitz3_noFPU_r470.ab3@15027>   MOVE.w #$C1C0,D1
0002C9B6 <AmiBlitz3_noFPU_r470.ab3@15028>   MOVEQ.l #$03,D2                                          ;now a long.
0002C9BA <AmiBlitz3_noFPU_r470.ab3@15029> BRA.w doplus2
0002C9BE <AmiBlitz3_noFPU_r470.ab3@15033>   MOVE.w #$CA00,D1                                         ;quickmul
0002C9C2 <AmiBlitz3_noFPU_r470.ab3@15034> BRA.w domylib
0002C9C8 <AmiBlitz3_noFPU_r470.ab3@15038>   TST.b fast
0002C9CC <AmiBlitz3_noFPU_r470.ab3@15039>   BNE.s 'l10
0002C9D0 <AmiBlitz3_noFPU_r470.ab3@15040>   MOVE.w #$CA01,D1                                         ;writelongmul
0002C9D4 <AmiBlitz3_noFPU_r470.ab3@15041> BRA.w domylib
0002C9DA <AmiBlitz3_noFPU_r470.ab3@15050>    MOVE.l destpointer,a0
0002C9E0 <AmiBlitz3_noFPU_r470.ab3@15051>    SUB.l imm_addr,a0
0002C9E4 <AmiBlitz3_noFPU_r470.ab3@15052>    CMP.w #6,a0
0002C9E8 <AmiBlitz3_noFPU_r470.ab3@15053>    BNE 'li1
0002C9EA <AmiBlitz3_noFPU_r470.ab3@15054>    MOVEQ.l #2,d1
0002C9EC <AmiBlitz3_noFPU_r470.ab3@15055>    MOVEQ #1,d3
0002C9F0 <AmiBlitz3_noFPU_r470.ab3@15058>   CMP.l -4(a4),d1
0002C9F4 <AmiBlitz3_noFPU_r470.ab3@15059>    BEQ 'oklsl
0002C9F6 <AmiBlitz3_noFPU_r470.ab3@15060>     LSL.l #1,d1
0002C9FC <AmiBlitz3_noFPU_r470.ab3@15061>     ADD.l #1,d3
0002CA02 <AmiBlitz3_noFPU_r470.ab3@15062>     CMP.l #9,d3
0002CA06 <AmiBlitz3_noFPU_r470.ab3@15063>     BNE 'ag
0002CA0A <AmiBlitz3_noFPU_r470.ab3@15064>    MOVE.w -2(a4),d1
0002CA0E <AmiBlitz3_noFPU_r470.ab3@15065>    BSR writeword
0002CA14 <AmiBlitz3_noFPU_r470.ab3@15066>    MOVE.w -6(a4),-4(a4)
0002CA1C <AmiBlitz3_noFPU_r470.ab3@15067>    MOVE.l #$4c3c0800,-8(a4)
0002CA22 <AmiBlitz3_noFPU_r470.ab3@15068>    MOVE.w regnum,D3
0002CA26 <AmiBlitz3_noFPU_r470.ab3@15069>    MULS #$1000,D3
0002CA2A <AmiBlitz3_noFPU_r470.ab3@15070>    OR.w D3,-6(a4)
0002CA30 <AmiBlitz3_noFPU_r470.ab3@15071>    CLR.l load_var_addr
0002CA36 <AmiBlitz3_noFPU_r470.ab3@15072>    CLR.l imm_addr
0002CA3A <AmiBlitz3_noFPU_r470.ab3@15073> BRA 'li3
0002CA3E <AmiBlitz3_noFPU_r470.ab3@15076>    CMP.w #8,d3
0002CA42 <AmiBlitz3_noFPU_r470.ab3@15077>    BEQ 'ok
0002CA44 <AmiBlitz3_noFPU_r470.ab3@15078>    ASL.l #1,d3
0002CA46 <AmiBlitz3_noFPU_r470.ab3@15079>    ASL.l #8,d3
0002CA4A <AmiBlitz3_noFPU_r470.ab3@15080>    MOVE.w #$e188,d1
0002CA4C <AmiBlitz3_noFPU_r470.ab3@15081>    OR.w d3,d1
0002CA50 <AmiBlitz3_noFPU_r470.ab3@15082>    MOVE.w d1,-6(a4)
0002CA54 <AmiBlitz3_noFPU_r470.ab3@15083> BRA 'okls
0002CA5A <AmiBlitz3_noFPU_r470.ab3@15086>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002CA60 <AmiBlitz3_noFPU_r470.ab3@15089>   MOVE.w regnum,d3
0002CA64 <AmiBlitz3_noFPU_r470.ab3@15090>    OR.b d3,-5(a4)
0002CA6A <AmiBlitz3_noFPU_r470.ab3@15091>    SUBQ.l #4,destpointer
0002CA70 <AmiBlitz3_noFPU_r470.ab3@15092>    CLR.l load_var_addr
0002CA76 <AmiBlitz3_noFPU_r470.ab3@15093>    CLR.l imm_addr
0002CA7A <AmiBlitz3_noFPU_r470.ab3@15094> BRA 'li3
0002CA80 <AmiBlitz3_noFPU_r470.ab3@15097>    MOVE.l destpointer,a0
0002CA86 <AmiBlitz3_noFPU_r470.ab3@15098>    SUB.l load_var_addr,a0
0002CA8A <AmiBlitz3_noFPU_r470.ab3@15099>    CMP.w #4,a0
0002CA8E <AmiBlitz3_noFPU_r470.ab3@15100>    BNE 'li2
0002CA92 <AmiBlitz3_noFPU_r470.ab3@15101>    MOVE.w -2(a4),d1
0002CA96 <AmiBlitz3_noFPU_r470.ab3@15102>    BSR writeword
0002CA9C <AmiBlitz3_noFPU_r470.ab3@15103>    MOVE.b #$4c,-6(a4)
0002CAA2 <AmiBlitz3_noFPU_r470.ab3@15104>    MOVE.w #$0800,-4(a4)
0002CAA8 <AmiBlitz3_noFPU_r470.ab3@15105>    MOVE.w regnum,D3
0002CAAC <AmiBlitz3_noFPU_r470.ab3@15106>    MULS #$1000,d3
0002CAB0 <AmiBlitz3_noFPU_r470.ab3@15107>    OR.w D3,-4(a4)
0002CAB4 <AmiBlitz3_noFPU_r470.ab3@15108> BRA 'li3
0002CABA <AmiBlitz3_noFPU_r470.ab3@15111>    MOVE.l #$4c010800,d1
0002CAC0 <AmiBlitz3_noFPU_r470.ab3@15112>    MOVE.w regnum,D3
0002CAC2 <AmiBlitz3_noFPU_r470.ab3@15113>    EXT.l d3
0002CAC6 <AmiBlitz3_noFPU_r470.ab3@15114>    MULS #$1000,d3
0002CAC8 <AmiBlitz3_noFPU_r470.ab3@15115>    OR.w D3,d1
0002CACC <AmiBlitz3_noFPU_r470.ab3@15116>    MULS #$10,d3
0002CACE <AmiBlitz3_noFPU_r470.ab3@15117>    ADD.l d3,d1
0002CAD2 <AmiBlitz3_noFPU_r470.ab3@15118>    BSR writelong
0002CAD4 <AmiBlitz3_noFPU_r470.ab3@15123> RTS
0002CAD6 <AmiBlitz3_noFPU_r470.ab3@15127>   MOVE.w D1,-(A7)
0002CADA <AmiBlitz3_noFPU_r470.ab3@15128>    BSR.w JL_0_AD40
0002CADC <AmiBlitz3_noFPU_r470.ab3@15129>   MOVE.l D4,D1
0002CAE0 <AmiBlitz3_noFPU_r470.ab3@15130>    BSR.w JL_0_AD38
0002CAE4 <AmiBlitz3_noFPU_r470.ab3@15131>    BSR.w JL_0_A352
0002CAE6 <AmiBlitz3_noFPU_r470.ab3@15132>   MOVEQ #0,d1
0002CAE8 <AmiBlitz3_noFPU_r470.ab3@15133>   MOVE.w (A7)+,D1
0002CAEE <AmiBlitz3_noFPU_r470.ab3@15134>   MOVE.l d1,lastinstruction
0002CAF2 <AmiBlitz3_noFPU_r470.ab3@15135>    BSR.w Atokejsr
0002CAF6 <AmiBlitz3_noFPU_r470.ab3@15136>    BSR.w JL_0_A36E
0002CAF8 <AmiBlitz3_noFPU_r470.ab3@15137>   MOVE.l D5,D1
0002CAFC <AmiBlitz3_noFPU_r470.ab3@15138> BRA.w JL_0_AD38
0002CB02 <AmiBlitz3_noFPU_r470.ab3@15142>    TST.b iee
0002CB06 <AmiBlitz3_noFPU_r470.ab3@15143>     BNE fm1
0002CB0A <AmiBlitz3_noFPU_r470.ab3@15144>  MOVE.w #$FFB2,D1                                          ;floatmul
0002CB0E <AmiBlitz3_noFPU_r470.ab3@15145> BRA.w doflib
0002CB10 <AmiBlitz3_noFPU_r470.ab3@15148>   MOVEQ #0,d0
0002CB16 <AmiBlitz3_noFPU_r470.ab3@15149>  MOVE.w regnum,d0
0002CB18 <AmiBlitz3_noFPU_r470.ab3@15150>  ADDQ #1,d0
0002CB1A <AmiBlitz3_noFPU_r470.ab3@15151>  ASL.w #8,d0
0002CB1C <AmiBlitz3_noFPU_r470.ab3@15152>  ASL.w #2,d0
0002CB22 <AmiBlitz3_noFPU_r470.ab3@15153>  MOVE.l #$f2000023,d1
0002CB24 <AmiBlitz3_noFPU_r470.ab3@15154>  OR.l d0,d1
0002CB2A <AmiBlitz3_noFPU_r470.ab3@15155>  MOVE.w regnum,d0
0002CB2C <AmiBlitz3_noFPU_r470.ab3@15156>  ASL.w #7,d0
0002CB2E <AmiBlitz3_noFPU_r470.ab3@15157>  OR.l d0,d1
0002CB32 <AmiBlitz3_noFPU_r470.ab3@15158> BRA.w writelong
0002CB34 <AmiBlitz3_noFPU_r470.ab3@15162>   MOVE.w D2,-(A7)                                          ;dopow
0002CB36 <AmiBlitz3_noFPU_r470.ab3@15163>   MOVE.w D2,D3
0002CB38 <AmiBlitz3_noFPU_r470.ab3@15164>   MOVEQ.l #$05,D2
0002CB3C <AmiBlitz3_noFPU_r470.ab3@15165>    BSR.w JL_0_9770
0002CB42 <AmiBlitz3_noFPU_r470.ab3@15166>   ADDQ.w #1,regnum
0002CB44 <AmiBlitz3_noFPU_r470.ab3@15167>   MOVE.w (A7)+,D3
0002CB46 <AmiBlitz3_noFPU_r470.ab3@15168>   MOVEQ.l #$05,D2
0002CB4A <AmiBlitz3_noFPU_r470.ab3@15169>    BSR.w writeconvertcode
0002CB50 <AmiBlitz3_noFPU_r470.ab3@15170>   SUBQ.w #1,regnum
0002CB54 <AmiBlitz3_noFPU_r470.ab3@15171>    BSR.w nocando
0002CB5A <AmiBlitz3_noFPU_r470.ab3@15172>    TST.b fpu
0002CB5E <AmiBlitz3_noFPU_r470.ab3@15173>    BEQ 'old
0002CB60 <AmiBlitz3_noFPU_r470.ab3@15174>    MOVEQ #0,d1
0002CB66 <AmiBlitz3_noFPU_r470.ab3@15175>    MOVE.w regnum,d1
0002CB68 <AmiBlitz3_noFPU_r470.ab3@15176>   MOVE.l d1,d0
0002CB6A <AmiBlitz3_noFPU_r470.ab3@15177>   ASL.w #7,d1
0002CB6C <AmiBlitz3_noFPU_r470.ab3@15178>   ASL.w #8,d0
0002CB6E <AmiBlitz3_noFPU_r470.ab3@15179>   ASL.w #2,d0
0002CB70 <AmiBlitz3_noFPU_r470.ab3@15180>   OR.w d0,d1
0002CB72 <AmiBlitz3_noFPU_r470.ab3@15181>   MOVE.l d1,-(a7)
0002CB78 <AmiBlitz3_noFPU_r470.ab3@15183>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002CB7C <AmiBlitz3_noFPU_r470.ab3@15184>    BSR writelong
0002CB82 <AmiBlitz3_noFPU_r470.ab3@15185>    MOVE.w regnum,d0
0002CB84 <AmiBlitz3_noFPU_r470.ab3@15186>  ADDQ #1,d0
0002CB86 <AmiBlitz3_noFPU_r470.ab3@15187>  ASL.w #8,d0
0002CB88 <AmiBlitz3_noFPU_r470.ab3@15188>  ASL.w #2,d0
0002CB8E <AmiBlitz3_noFPU_r470.ab3@15189>  MOVE.l #$f2000023,d1
0002CB90 <AmiBlitz3_noFPU_r470.ab3@15190>  OR.l d0,d1
0002CB96 <AmiBlitz3_noFPU_r470.ab3@15191>  MOVE.w regnum,d0
0002CB98 <AmiBlitz3_noFPU_r470.ab3@15192>  ASL.w #7,d0
0002CB9A <AmiBlitz3_noFPU_r470.ab3@15193>  OR.l d0,d1
0002CBA0 <AmiBlitz3_noFPU_r470.ab3@15194>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002CBA4 <AmiBlitz3_noFPU_r470.ab3@15195>    BSR writelong
0002CBA6 <AmiBlitz3_noFPU_r470.ab3@15196>    MOVE.l (a7)+,d1
0002CBAC <AmiBlitz3_noFPU_r470.ab3@15198>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002CBB0 <AmiBlitz3_noFPU_r470.ab3@15199>    BSR writelong
0002CBB2 <AmiBlitz3_noFPU_r470.ab3@15200> RTS
0002CBB6 <AmiBlitz3_noFPU_r470.ab3@15203>   MOVE.w #$6001,D1
0002CBBA <AmiBlitz3_noFPU_r470.ab3@15204> BRA.w domylib
0002CBBE <AmiBlitz3_noFPU_r470.ab3@15210>   MOVEA.l forthsp(PC),A0
0002CBC2 <AmiBlitz3_noFPU_r470.ab3@15211>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002CBC4 <AmiBlitz3_noFPU_r470.ab3@15212> RTS
0002CBC8 <AmiBlitz3_noFPU_r470.ab3@15218>   MOVE.w #$D400,D1
0002CBCC <AmiBlitz3_noFPU_r470.ab3@15219> BRA.w domylib
0002CBD0 <AmiBlitz3_noFPU_r470.ab3@15223>   MOVE.w #$D401,D1
0002CBD4 <AmiBlitz3_noFPU_r470.ab3@15224> BRA.w domylib
0002CBD8 <AmiBlitz3_noFPU_r470.ab3@15228>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002CBDC <AmiBlitz3_noFPU_r470.ab3@15229>   MOVE.w #$D402,D1
0002CBE0 <AmiBlitz3_noFPU_r470.ab3@15230> BRA.w domylib
0002CBE4 <AmiBlitz3_noFPU_r470.ab3@15234>   MOVE.w #$D403,D1
0002CBE6 <AmiBlitz3_noFPU_r470.ab3@15235>   MOVEQ.l #$02,D2                                          ;now a word.
0002CBEA <AmiBlitz3_noFPU_r470.ab3@15236> BRA.w domylib
0002CBEE <AmiBlitz3_noFPU_r470.ab3@15240>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002CBF4 <AmiBlitz3_noFPU_r470.ab3@15241>   TST.b fpu
0002CBF8 <AmiBlitz3_noFPU_r470.ab3@15242>   BEQ 'old
0002CBFA <AmiBlitz3_noFPU_r470.ab3@15243>   MOVEQ #0,d1
0002CC00 <AmiBlitz3_noFPU_r470.ab3@15244>   MOVE.w regnum,d1                                         ;fpu mod
0002CC02 <AmiBlitz3_noFPU_r470.ab3@15245>   MOVE.l d1,d0
0002CC04 <AmiBlitz3_noFPU_r470.ab3@15246>   ADDQ.l #1,d1
0002CC06 <AmiBlitz3_noFPU_r470.ab3@15247>   ASL.l #7,d0
0002CC08 <AmiBlitz3_noFPU_r470.ab3@15248>   ASL.l #8,d1
0002CC0A <AmiBlitz3_noFPU_r470.ab3@15249>   ASL.l #2,d1
0002CC0C <AmiBlitz3_noFPU_r470.ab3@15250>   OR.l d0,d1
0002CC0E <AmiBlitz3_noFPU_r470.ab3@15251>   MOVE.l d0,-(a7)
0002CC14 <AmiBlitz3_noFPU_r470.ab3@15252>   OR.l #$f2000021,d1
0002CC18 <AmiBlitz3_noFPU_r470.ab3@15253>   BSR writelong
0002CC1A <AmiBlitz3_noFPU_r470.ab3@15254>   MOVE.l (a7)+,d0
0002CC1C <AmiBlitz3_noFPU_r470.ab3@15255>  RTS
0002CC20 <AmiBlitz3_noFPU_r470.ab3@15258>   MOVE.w #$D404,D1
0002CC22 <AmiBlitz3_noFPU_r470.ab3@15259>   MOVEQ.l #$03,D2                                          ;now a long
0002CC26 <AmiBlitz3_noFPU_r470.ab3@15260> BRA.w domylib
0002CC2A <AmiBlitz3_noFPU_r470.ab3@15268>   MOVE.w #$48C0,D1
0002CC30 <AmiBlitz3_noFPU_r470.ab3@15269>   OR.w regnum,D1
0002CC34 <AmiBlitz3_noFPU_r470.ab3@15270>    BSR.w writeword
0002CC36 <AmiBlitz3_noFPU_r470.ab3@15271>   ADDQ.w #1,D1
0002CC3A <AmiBlitz3_noFPU_r470.ab3@15272>    BSR.w writeword
0002CC3E <AmiBlitz3_noFPU_r470.ab3@15275>    MOVE.w #$48C0,D1
0002CC44 <AmiBlitz3_noFPU_r470.ab3@15276>   OR.w regnum,D1
0002CC48 <AmiBlitz3_noFPU_r470.ab3@15277>    BSR.w writeword
0002CC4C <AmiBlitz3_noFPU_r470.ab3@15278>   MOVE.w #$81C0,D1
0002CC50 <AmiBlitz3_noFPU_r470.ab3@15279> BRA.w doplus2
0002CC56 <AmiBlitz3_noFPU_r470.ab3@15283>   TST.b fast
0002CC5A <AmiBlitz3_noFPU_r470.ab3@15284>   BNE.s 'l10
0002CC5E <AmiBlitz3_noFPU_r470.ab3@15285>   MOVE.w #$CB01,D1
0002CC62 <AmiBlitz3_noFPU_r470.ab3@15286> BRA.w domylib
0002CC66 <AmiBlitz3_noFPU_r470.ab3@15292>   BSR.w JL_0_AD40
0002CC68 <AmiBlitz3_noFPU_r470.ab3@15293>   MOVE.l D4,D1
0002CC6C <AmiBlitz3_noFPU_r470.ab3@15294>    BSR.w JL_0_AD38
0002CC70 <AmiBlitz3_noFPU_r470.ab3@15295>    BSR.w JL_0_A352
0002CC76 <AmiBlitz3_noFPU_r470.ab3@15309>    MOVE.l #$4c410800,d1
0002CC7A <AmiBlitz3_noFPU_r470.ab3@15310>    BSR writelong
0002CC7E <AmiBlitz3_noFPU_r470.ab3@15313>   MOVE.w #$4e71,d1
0002CC82 <AmiBlitz3_noFPU_r470.ab3@15315>    BSR.w JL_0_A36E
0002CC84 <AmiBlitz3_noFPU_r470.ab3@15316>   MOVE.l D5,D1
0002CC88 <AmiBlitz3_noFPU_r470.ab3@15317> BRA.w JL_0_AD38
0002CC8C <AmiBlitz3_noFPU_r470.ab3@15320>     CMP.w #8,d3
0002CC90 <AmiBlitz3_noFPU_r470.ab3@15321>     BEQ 'ok
0002CC92 <AmiBlitz3_noFPU_r470.ab3@15322>     ASL.l #1,d3
0002CC94 <AmiBlitz3_noFPU_r470.ab3@15323>     ASL.l #8,d3
0002CC98 <AmiBlitz3_noFPU_r470.ab3@15324>     MOVE.w #$e080,d1
0002CC9A <AmiBlitz3_noFPU_r470.ab3@15325>     OR.w d3,d1
0002CC9E <AmiBlitz3_noFPU_r470.ab3@15326> BRA 'oklsr2
0002CCA2 <AmiBlitz3_noFPU_r470.ab3@15329>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002CCA8 <AmiBlitz3_noFPU_r470.ab3@15332>      SUBQ.l #6,destpointer
0002CCAC <AmiBlitz3_noFPU_r470.ab3@15333>      BSR writeword
0002CCAE <AmiBlitz3_noFPU_r470.ab3@15334>      MOVE.l (a7)+,d3
0002CCB0 <AmiBlitz3_noFPU_r470.ab3@15335>      MOVEQ #0,d1
0002CCB6 <AmiBlitz3_noFPU_r470.ab3@15336>      CLR.l load_var_addr
0002CCBC <AmiBlitz3_noFPU_r470.ab3@15337>      CLR.l imm_addr
0002CCC0 <AmiBlitz3_noFPU_r470.ab3@15338> BRA JL_0_AD38
0002CCC4 <AmiBlitz3_noFPU_r470.ab3@15342>   MOVE.w #$CB00,D1                                         ;quickdiv
0002CCC8 <AmiBlitz3_noFPU_r470.ab3@15343> BRA.w domylib
0002CCCE <AmiBlitz3_noFPU_r470.ab3@15347>    TST.b iee
0002CCD2 <AmiBlitz3_noFPU_r470.ab3@15348>    BNE fdiv1
0002CCD6 <AmiBlitz3_noFPU_r470.ab3@15349>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002CCDA <AmiBlitz3_noFPU_r470.ab3@15350> BRA.w doflib
0002CCDC <AmiBlitz3_noFPU_r470.ab3@15354>   MOVEQ #0,d0
0002CCE2 <AmiBlitz3_noFPU_r470.ab3@15355>   MOVE.w regnum,d0
0002CCE4 <AmiBlitz3_noFPU_r470.ab3@15356>   ADDQ #1,d0
0002CCE6 <AmiBlitz3_noFPU_r470.ab3@15357>   ASL.w #8,d0
0002CCE8 <AmiBlitz3_noFPU_r470.ab3@15358>   ASL.w #2,d0
0002CCEE <AmiBlitz3_noFPU_r470.ab3@15359>   MOVE.l #$f2000020,d1                                     ;fpu div
0002CCF0 <AmiBlitz3_noFPU_r470.ab3@15360>   OR.l d0,d1
0002CCF6 <AmiBlitz3_noFPU_r470.ab3@15361>   MOVE.w regnum,d0
0002CCF8 <AmiBlitz3_noFPU_r470.ab3@15362>   ASL.w #7,d0
0002CCFA <AmiBlitz3_noFPU_r470.ab3@15363>   OR.l d0,d1
0002CCFE <AmiBlitz3_noFPU_r470.ab3@15364> BRA.w writelong
0002CD02 <AmiBlitz3_noFPU_r470.ab3@15368>   MOVE.w #$C000,D1
0002CD06 <AmiBlitz3_noFPU_r470.ab3@15369> BRA.w doplus2
0002CD0A <AmiBlitz3_noFPU_r470.ab3@15373>   MOVE.w #$C040,D1
0002CD0E <AmiBlitz3_noFPU_r470.ab3@15374> BRA.w doplus2
0002CD12 <AmiBlitz3_noFPU_r470.ab3@15378>   MOVE.w #$C080,D1
0002CD16 <AmiBlitz3_noFPU_r470.ab3@15379> BRA.w doplus2
0002CD1A <AmiBlitz3_noFPU_r470.ab3@15383>   MOVE.w #$8000,D1
0002CD1E <AmiBlitz3_noFPU_r470.ab3@15384> BRA.w doplus2
0002CD22 <AmiBlitz3_noFPU_r470.ab3@15388>   MOVE.w #$8040,D1
0002CD26 <AmiBlitz3_noFPU_r470.ab3@15389> BRA.w doplus2
0002CD2A <AmiBlitz3_noFPU_r470.ab3@15393>   MOVE.w #$8080,D1
0002CD2E <AmiBlitz3_noFPU_r470.ab3@15394> BRA.w doplus2
0002CD32 <AmiBlitz3_noFPU_r470.ab3@15398>   MOVE.w #$B100,D1
0002CD38 <AmiBlitz3_noFPU_r470.ab3@15401>    MOVE.w regnum,D3
0002CD3A <AmiBlitz3_noFPU_r470.ab3@15402>   OR.w D3,D1
0002CD3C <AmiBlitz3_noFPU_r470.ab3@15403>   ADDQ.w #1,D3
0002CD3E <AmiBlitz3_noFPU_r470.ab3@15404>   LSL.w #8,D3
0002CD40 <AmiBlitz3_noFPU_r470.ab3@15405>   LSL.w #1,D3
0002CD42 <AmiBlitz3_noFPU_r470.ab3@15406>   OR.w D3,D1
0002CD46 <AmiBlitz3_noFPU_r470.ab3@15407> BRA.w writeword
0002CD4A <AmiBlitz3_noFPU_r470.ab3@15411>   MOVE.w #$B140,D1
0002CD4E <AmiBlitz3_noFPU_r470.ab3@15412> BRA.w JL_0_A25C
0002CD52 <AmiBlitz3_noFPU_r470.ab3@15416>   MOVE.w #$B180,D1
0002CD56 <AmiBlitz3_noFPU_r470.ab3@15417> BRA.w JL_0_A25C
0002CD5A <AmiBlitz3_noFPU_r470.ab3@15421>   MOVE.w #$E1A8,D1
0002CD5E <AmiBlitz3_noFPU_r470.ab3@15422> BRA.w JL_0_A298
0002CD62 <AmiBlitz3_noFPU_r470.ab3@15426>   MOVE.w #$E0A8,D1
0002CD66 <AmiBlitz3_noFPU_r470.ab3@15427> BRA.w JL_0_A298
0002CD6A <AmiBlitz3_noFPU_r470.ab3@15431>   MOVE.w #$E0A0,D1
0002CD6E <AmiBlitz3_noFPU_r470.ab3@15432> BRA.w JL_0_A298
0002CD70 <AmiBlitz3_noFPU_r470.ab3@15436>   MOVE.w D1,-(A7)
0002CD76 <AmiBlitz3_noFPU_r470.ab3@15437>   ADDQ.w #1,regnum
0002CD78 <AmiBlitz3_noFPU_r470.ab3@15438>   MOVE.w D2,-(A7)
0002CD7A <AmiBlitz3_noFPU_r470.ab3@15439>   MOVE.w D2,D3
0002CD7C <AmiBlitz3_noFPU_r470.ab3@15440>   MOVEQ.l #$02,D2
0002CD80 <AmiBlitz3_noFPU_r470.ab3@15445>    BSR.w writeconvertcode
0002CD82 <AmiBlitz3_noFPU_r470.ab3@15447>   MOVE.w (A7)+,D2
0002CD88 <AmiBlitz3_noFPU_r470.ab3@15448>   SUBQ.w #1,regnum
0002CD8C <AmiBlitz3_noFPU_r470.ab3@15449>   CMP.w #$4,D2
0002CD90 <AmiBlitz3_noFPU_r470.ab3@15450>    BEQ.w JL_0_A2C2
0002CD92 <AmiBlitz3_noFPU_r470.ab3@15451>   MOVE.w D2,D3
0002CD94 <AmiBlitz3_noFPU_r470.ab3@15452>   MOVEQ.l #$03,D2
0002CD98 <AmiBlitz3_noFPU_r470.ab3@15453>    BSR.w JL_0_9770
0002CD9A <AmiBlitz3_noFPU_r470.ab3@15456>    MOVE.w (A7)+,D1
0002CDA0 <AmiBlitz3_noFPU_r470.ab3@15457>   MOVE.w regnum,D3
0002CDA2 <AmiBlitz3_noFPU_r470.ab3@15458>   OR.w D3,D1
0002CDA4 <AmiBlitz3_noFPU_r470.ab3@15459>   ADDQ.w #1,D3
0002CDA6 <AmiBlitz3_noFPU_r470.ab3@15460>   LSL.w #8,D3
0002CDA8 <AmiBlitz3_noFPU_r470.ab3@15461>   LSL.w #1,D3
0002CDAA <AmiBlitz3_noFPU_r470.ab3@15462>   OR.w D3,D1
0002CDAE <AmiBlitz3_noFPU_r470.ab3@15463> BRA.w writeword
0002CDB2 <AmiBlitz3_noFPU_r470.ab3@15467>   MOVE.w #$0100,D1
0002CDB6 <AmiBlitz3_noFPU_r470.ab3@15468>    BSR.w JL_0_A31C
0002CDBC <AmiBlitz3_noFPU_r470.ab3@15469>   MOVE.w regnum,D1
0002CDC0 <AmiBlitz3_noFPU_r470.ab3@15470>   ORI.w #$56C0,D1
0002CDC4 <AmiBlitz3_noFPU_r470.ab3@15471>    BSR.w writeword
0002CDCA <AmiBlitz3_noFPU_r470.ab3@15472>   MOVE.w regnum,D1
0002CDCE <AmiBlitz3_noFPU_r470.ab3@15473>   ORI.w #$4880,D1
0002CDD2 <AmiBlitz3_noFPU_r470.ab3@15474>    BSR.w writeword
0002CDD4 <AmiBlitz3_noFPU_r470.ab3@15475>   MOVEQ.l #$02,D2
0002CDD6 <AmiBlitz3_noFPU_r470.ab3@15476> RTS
0002CDDA <AmiBlitz3_noFPU_r470.ab3@15480>   MOVE.w #$01C0,D1
0002CDDE <AmiBlitz3_noFPU_r470.ab3@15483>    BSR.w JL_0_A31C
0002CDE0 <AmiBlitz3_noFPU_r470.ab3@15484>   MOVEQ.l #$03,D2
0002CDE2 <AmiBlitz3_noFPU_r470.ab3@15485> RTS
0002CDE6 <AmiBlitz3_noFPU_r470.ab3@15489>   MOVE.w #$0180,D1
0002CDEA <AmiBlitz3_noFPU_r470.ab3@15490> BRA.w JL_0_A304
0002CDEE <AmiBlitz3_noFPU_r470.ab3@15494>   MOVE.w #$0140,D1
0002CDF2 <AmiBlitz3_noFPU_r470.ab3@15495> BRA.w JL_0_A304
0002CDF4 <AmiBlitz3_noFPU_r470.ab3@15499>   MOVE.w D1,-(A7)
0002CDF6 <AmiBlitz3_noFPU_r470.ab3@15500>   MOVE.w D2,-(A7)
0002CDF8 <AmiBlitz3_noFPU_r470.ab3@15501>   MOVE.w D2,D3
0002CDFA <AmiBlitz3_noFPU_r470.ab3@15502>   MOVEQ.l #$03,D2
0002CDFE <AmiBlitz3_noFPU_r470.ab3@15503>    BSR.w JL_0_9770
0002CE00 <AmiBlitz3_noFPU_r470.ab3@15504>   MOVE.w (A7)+,D3
0002CE02 <AmiBlitz3_noFPU_r470.ab3@15505>   MOVEQ.l #$01,D2
0002CE08 <AmiBlitz3_noFPU_r470.ab3@15506>   ADDQ.w #1,regnum
0002CE0C <AmiBlitz3_noFPU_r470.ab3@15507>    BSR.w writeconvertcode
0002CE12 <AmiBlitz3_noFPU_r470.ab3@15508>   SUBQ.w #1,regnum
0002CE18 <AmiBlitz3_noFPU_r470.ab3@15509>   MOVE.w regnum,D1
0002CE1A <AmiBlitz3_noFPU_r470.ab3@15510>   MOVE.w D1,D2
0002CE1C <AmiBlitz3_noFPU_r470.ab3@15511>   ADDQ.w #1,D2
0002CE1E <AmiBlitz3_noFPU_r470.ab3@15512>   LSL.w #8,D2
0002CE20 <AmiBlitz3_noFPU_r470.ab3@15513>   LSL.w #1,D2
0002CE22 <AmiBlitz3_noFPU_r470.ab3@15514>   OR.w (A7)+,D1
0002CE24 <AmiBlitz3_noFPU_r470.ab3@15515>   OR.w D2,D1
0002CE28 <AmiBlitz3_noFPU_r470.ab3@15516> BRA.w writeword
0002CE2E <AmiBlitz3_noFPU_r470.ab3@15520>   MOVE.w regnum,D1
0002CE32 <AmiBlitz3_noFPU_r470.ab3@15521>    BEQ.w JL_0_A36C
0002CE36 <AmiBlitz3_noFPU_r470.ab3@15522>   ORI.w #$2000,D1
0002CE3A <AmiBlitz3_noFPU_r470.ab3@15523>    BSR.w writeword
0002CE3E <AmiBlitz3_noFPU_r470.ab3@15524>   ADDI.w #$201,D1
0002CE42 <AmiBlitz3_noFPU_r470.ab3@15525>    BSR.w writeword
0002CE44 <AmiBlitz3_noFPU_r470.ab3@15528> RTS
0002CE4A <AmiBlitz3_noFPU_r470.ab3@15532>   MOVE.w regnum,D1
0002CE4E <AmiBlitz3_noFPU_r470.ab3@15533>    BEQ.w JL_0_A384
0002CE50 <AmiBlitz3_noFPU_r470.ab3@15534>   LSL.w #8,D1
0002CE52 <AmiBlitz3_noFPU_r470.ab3@15535>   LSL.w #1,D1
0002CE56 <AmiBlitz3_noFPU_r470.ab3@15536>   ORI.w #$2000,D1
0002CE5A <AmiBlitz3_noFPU_r470.ab3@15537>    BSR.w writeword
0002CE5C <AmiBlitz3_noFPU_r470.ab3@15540> RTS
0002CE62 <AmiBlitz3_noFPU_r470.ab3@15544>    CLR.b isconstantvalue
0002CE68 <AmiBlitz3_noFPU_r470.ab3@15545>    CLR.l lastconstantvalue
0002CE70 <AmiBlitz3_noFPU_r470.ab3@15546>    CMPI.w #$7,regnum
0002CE74 <AmiBlitz3_noFPU_r470.ab3@15547>    BCS.w JL_0_A6B4
0002CE7A <AmiBlitz3_noFPU_r470.ab3@15548>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002CE7E <AmiBlitz3_noFPU_r470.ab3@15549>   BSR writelong
0002CE82 <AmiBlitz3_noFPU_r470.ab3@15550>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002CE86 <AmiBlitz3_noFPU_r470.ab3@15552>   CMP.w #$3,D2
0002CE8A <AmiBlitz3_noFPU_r470.ab3@15553>    BCS.w JL_0_A3A2
0002CE8E <AmiBlitz3_noFPU_r470.ab3@15554>   MOVE.w #$2F06,D1
0002CE92 <AmiBlitz3_noFPU_r470.ab3@15557>   BSR.w writeword
0002CE94 <AmiBlitz3_noFPU_r470.ab3@15558>   MOVE.w D1,-(A7)
0002CE9A <AmiBlitz3_noFPU_r470.ab3@15559>   SUBQ.w #1,regnum
0002CE9E <AmiBlitz3_noFPU_r470.ab3@15560>    BSR.w JL_0_A6B4
0002CEA4 <AmiBlitz3_noFPU_r470.ab3@15561>   ADDQ.w #1,regnum
0002CEAA <AmiBlitz3_noFPU_r470.ab3@15562>   MOVE.l #$f2001b80,d1
0002CEAE <AmiBlitz3_noFPU_r470.ab3@15563>   BSR writelong
0002CEB2 <AmiBlitz3_noFPU_r470.ab3@15564>   MOVE.w #$3E06,D1
0002CEB6 <AmiBlitz3_noFPU_r470.ab3@15565>   CMP.w #$3,D2
0002CEBA <AmiBlitz3_noFPU_r470.ab3@15566>    BCS.w JL_0_A3C8
0002CEBE <AmiBlitz3_noFPU_r470.ab3@15567>   MOVE.w #$2E06,D1
0002CEC2 <AmiBlitz3_noFPU_r470.ab3@15570>   BSR.w writeword
0002CEC4 <AmiBlitz3_noFPU_r470.ab3@15571>   MOVE.w (A7)+,D1
0002CEC8 <AmiBlitz3_noFPU_r470.ab3@15572>   ANDI.w #$F000,D1
0002CECC <AmiBlitz3_noFPU_r470.ab3@15573>   ORI.w #$C1F,D1
0002CED2 <AmiBlitz3_noFPU_r470.ab3@15574>   JSR writeword
0002CED8 <AmiBlitz3_noFPU_r470.ab3@15575>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002CEDC <AmiBlitz3_noFPU_r470.ab3@15576> BRA writelong
0002CEE0 <AmiBlitz3_noFPU_r470.ab3@15580>   BSR.w JL_0_A6B4
0002CEE4 <AmiBlitz3_noFPU_r470.ab3@15581>   MOVE.w #$4440,D1
0002CEE8 <AmiBlitz3_noFPU_r470.ab3@15582>   CMP.w #$3,D2
0002CEEC <AmiBlitz3_noFPU_r470.ab3@15583>    BCS.w JL_0_A406
0002CEF0 <AmiBlitz3_noFPU_r470.ab3@15584>   MOVE.w #$4480,D1
0002CEF4 <AmiBlitz3_noFPU_r470.ab3@15585>   CMP.w #$5,D2
0002CEF8 <AmiBlitz3_noFPU_r470.ab3@15586>    BCS.w JL_0_A406
0002CEFC <AmiBlitz3_noFPU_r470.ab3@15587>   CMP.w #$6,D2
0002CF00 <AmiBlitz3_noFPU_r470.ab3@15588>    BCC.w illoperr
0002CF04 <AmiBlitz3_noFPU_r470.ab3@15589>   MOVE.w #$FFC4,D1
0002CF08 <AmiBlitz3_noFPU_r470.ab3@15590> BRA.w JL_0_9604
0002CF0E <AmiBlitz3_noFPU_r470.ab3@15593>   OR.w regnum,D1                                           ;negate
0002CF14 <AmiBlitz3_noFPU_r470.ab3@15594>   CLR.l imm_addr
0002CF18 <AmiBlitz3_noFPU_r470.ab3@15595> BRA.w writeword
0002CF1C <AmiBlitz3_noFPU_r470.ab3@15599>    BSR.w eval4
0002CF20 <AmiBlitz3_noFPU_r470.ab3@15600>   CMP.w #")",D0
0002CF24 <AmiBlitz3_noFPU_r470.ab3@15601>    BEQ.w JL_0_A424
0002CF28 <AmiBlitz3_noFPU_r470.ab3@15602>   CMP.w #"}",D0
0002CF2C <AmiBlitz3_noFPU_r470.ab3@15603>    BNE.w brackets_                                         ;syntax error brackets
0002CF30 <AmiBlitz3_noFPU_r470.ab3@15606> BRA.w get1bytemain
0002CF34 <AmiBlitz3_noFPU_r470.ab3@15610>    BSR.w eval4
0002CF38 <AmiBlitz3_noFPU_r470.ab3@15611>   CMP.w #$5,D2
0002CF3C <AmiBlitz3_noFPU_r470.ab3@15612>    BCC.w illoperr
0002CF42 <AmiBlitz3_noFPU_r470.ab3@15613>   MOVE.w regnum,D1
0002CF46 <AmiBlitz3_noFPU_r470.ab3@15614>   ORI.w #$4640,D1
0002CF4A <AmiBlitz3_noFPU_r470.ab3@15615>   CMP.w #$3,D2
0002CF4E <AmiBlitz3_noFPU_r470.ab3@15616>    BCS.w writeword
0002CF52 <AmiBlitz3_noFPU_r470.ab3@15617>   EORI.w #$C0,D1
0002CF56 <AmiBlitz3_noFPU_r470.ab3@15618> BRA.w writeword
0002CF58 <AmiBlitz3_noFPU_r470.ab3@15622>   MOVEQ.l #$05,D2                                          ;fpu pi
0002CF5E <AmiBlitz3_noFPU_r470.ab3@15623>    TST.b fpu
0002CF62 <AmiBlitz3_noFPU_r470.ab3@15624>   BEQ 'old
0002CF68 <AmiBlitz3_noFPU_r470.ab3@15625> JMP fpupi
0002CF6E <AmiBlitz3_noFPU_r470.ab3@15628>   MOVE.w regnum,D1
0002CF70 <AmiBlitz3_noFPU_r470.ab3@15629>   LSL.w #8,D1
0002CF72 <AmiBlitz3_noFPU_r470.ab3@15630>   LSL.w #1,D1
0002CF76 <AmiBlitz3_noFPU_r470.ab3@15631>   ORI.w #$203C,D1
0002CF7A <AmiBlitz3_noFPU_r470.ab3@15632>    BSR.w writeword
0002CF80 <AmiBlitz3_noFPU_r470.ab3@15633>   MOVE.l #$C90FDA42,D1
0002CF84 <AmiBlitz3_noFPU_r470.ab3@15634>    BSR.w writelong
0002CF88 <AmiBlitz3_noFPU_r470.ab3@15635> BRA.w get1bytemain
0002D084 <AmiBlitz3_noFPU_r470.ab3@15643> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D180 <AmiBlitz3_noFPU_r470.ab3@15644>              Ds.l 63
0002D1C8 <AmiBlitz3_noFPU_r470.ab3@15645>              Ds.l 18
0002D1CC <AmiBlitz3_noFPU_r470.ab3@15646> forthsp:     Dc.l forthstack
0002D1F8 <AmiBlitz3_noFPU_r470.ab3@15651>    !fget
0002D1FC <AmiBlitz3_noFPU_r470.ab3@15652>    CMP.b #$7e,d0
0002D200 <AmiBlitz3_noFPU_r470.ab3@15653>    BNE 'noc
0002D202 <AmiBlitz3_noFPU_r470.ab3@15654>    SUBQ.l #1,a5
0002D206 <AmiBlitz3_noFPU_r470.ab3@15655>    BSR get1bytemain
0002D20A <AmiBlitz3_noFPU_r470.ab3@15658>    CMP.b #"#",d0
0002D20E <AmiBlitz3_noFPU_r470.ab3@15659>    BNE 'ld1
0002D212 <AmiBlitz3_noFPU_r470.ab3@15660>    CMP.b #$22,(a5)
0002D216 <AmiBlitz3_noFPU_r470.ab3@15661>    BNE 'ld1
0002D21C <AmiBlitz3_noFPU_r470.ab3@15662>    JSR addimmi
0002D220 <AmiBlitz3_noFPU_r470.ab3@15665>    CMP.b #$22,d0
0002D224 <AmiBlitz3_noFPU_r470.ab3@15666>    BNE 'l11
0002D22A <AmiBlitz3_noFPU_r470.ab3@15676>    NOT.w instringon
0002D22C <AmiBlitz3_noFPU_r470.ab3@15679>    TST.b d0
0002D230 <AmiBlitz3_noFPU_r470.ab3@15680>    BPL 'l10
0002D232 <AmiBlitz3_noFPU_r470.ab3@15681>    LSL.w #8,d0
0002D234 <AmiBlitz3_noFPU_r470.ab3@15682>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002D23A <AmiBlitz3_noFPU_r470.ab3@15683>    MOVE.l d0,lasttoken
0002D240 <AmiBlitz3_noFPU_r470.ab3@15684>    MOVE.w d0,lastchar
0002D246 <AmiBlitz3_noFPU_r470.ab3@15685>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D24A <AmiBlitz3_noFPU_r470.ab3@15687>   CMP.w #"(",D0
0002D24E <AmiBlitz3_noFPU_r470.ab3@15688>    BEQ.w checkcast2
0002D252 <AmiBlitz3_noFPU_r470.ab3@15689> nocast CMP.w #"{",D0
0002D256 <AmiBlitz3_noFPU_r470.ab3@15690>    BEQ.w JL_0_A410
0002D25A <AmiBlitz3_noFPU_r470.ab3@15691>   CMP.w #$2D,D0
0002D25E <AmiBlitz3_noFPU_r470.ab3@15692>    BEQ.w JL_0_A3DA
0002D262 <AmiBlitz3_noFPU_r470.ab3@15693>   CMP.w #-$7F77,D0
0002D266 <AmiBlitz3_noFPU_r470.ab3@15694>    BEQ.w JL_0_A428
0002D26A <AmiBlitz3_noFPU_r470.ab3@15695>   MOVEA.l forthsp(PC),A1
0002D270 <AmiBlitz3_noFPU_r470.ab3@15696>   CMPA.l #forthsp,A1
0002D274 <AmiBlitz3_noFPU_r470.ab3@15697>    BCC.w conmemerr
0002D27A <AmiBlitz3_noFPU_r470.ab3@15698>   MOVE.l destpointer,(A1)+
0002D280 <AmiBlitz3_noFPU_r470.ab3@15699>   MOVE.l hunkoffsetbase,(A1)+
0002D286 <AmiBlitz3_noFPU_r470.ab3@15700>   MOVE.l lasta6,(A1)+
0002D28C <AmiBlitz3_noFPU_r470.ab3@15701>   MOVE.w lasta6,(A1)+
0002D28E <AmiBlitz3_noFPU_r470.ab3@15702>   CLR.w (A1)+
0002D290 <AmiBlitz3_noFPU_r470.ab3@15703>   CLR.w (A1)+
0002D296 <AmiBlitz3_noFPU_r470.ab3@15704>   MOVE.l A1,forthsp
0002D2A8 <AmiBlitz3_noFPU_r470.ab3@15706>    !compare2
0002D2AC <AmiBlitz3_noFPU_r470.ab3@15707>    BEQ.w JL_0_B224
0002D2B0 <AmiBlitz3_noFPU_r470.ab3@15708>   CMP.w #".",D0
0002D2B4 <AmiBlitz3_noFPU_r470.ab3@15709>    BEQ.w JL_0_B21E
0002D2B8 <AmiBlitz3_noFPU_r470.ab3@15710>   CMP.w #"#",D0
0002D2BC <AmiBlitz3_noFPU_r470.ab3@15711>    BEQ.w get_constant
0002D2C0 <AmiBlitz3_noFPU_r470.ab3@15712>   CMP.w #"$",D0
0002D2C4 <AmiBlitz3_noFPU_r470.ab3@15713>    BEQ.w get_hexconstant
0002D2C8 <AmiBlitz3_noFPU_r470.ab3@15714>   CMP.w #"%",D0
0002D2CC <AmiBlitz3_noFPU_r470.ab3@15715>    BEQ.w JL_0_A8C0
0002D2D0 <AmiBlitz3_noFPU_r470.ab3@15716>   CMP.w #-$7FD1,D0
0002D2D4 <AmiBlitz3_noFPU_r470.ab3@15717>    BEQ.w _SizeOf
0002D2D8 <AmiBlitz3_noFPU_r470.ab3@15718>   CMP.w #-$7F46,D0
0002D2DC <AmiBlitz3_noFPU_r470.ab3@15719>    BEQ.w JL_0_A44E
0002D2E0 <AmiBlitz3_noFPU_r470.ab3@15720>   CMP.w #-$7F3B,D0
0002D2E4 <AmiBlitz3_noFPU_r470.ab3@15721>    BEQ.w JL_0_A83C
0002D2E8 <AmiBlitz3_noFPU_r470.ab3@15722>   CMP.w #-$7F3A,D0
0002D2EC <AmiBlitz3_noFPU_r470.ab3@15723>    BEQ.w JL_0_A846
0002D2F2 <AmiBlitz3_noFPU_r470.ab3@15724>   MOVE.w constmode,D1
0002D2F6 <AmiBlitz3_noFPU_r470.ab3@15725>    BEQ.w JL_0_A776
0002D318 <AmiBlitz3_noFPU_r470.ab3@15726>    !compare1                                               ;bsr.w tstalpha
0002D31C <AmiBlitz3_noFPU_r470.ab3@15727>    BEQ.w JL_0_AF22
0002D320 <AmiBlitz3_noFPU_r470.ab3@15728>   CMP.w #$5F,D0
0002D324 <AmiBlitz3_noFPU_r470.ab3@15729>    BEQ.w JL_0_AF22
0002D328 <AmiBlitz3_noFPU_r470.ab3@15730>   CMP.w #$22,D0
0002D32C <AmiBlitz3_noFPU_r470.ab3@15731>    BEQ.w JL_0_AF00
0002D330 <AmiBlitz3_noFPU_r470.ab3@15732> BRA.w syntaxerr
0002D336 <AmiBlitz3_noFPU_r470.ab3@15734> checkcast2 JMP checkcast
0002D33C <AmiBlitz3_noFPU_r470.ab3@15737>   MOVE.w cfetchmode,D1
0002D340 <AmiBlitz3_noFPU_r470.ab3@15738>   BEQ.w JL_0_A784
0002D344 <AmiBlitz3_noFPU_r470.ab3@15739> BRA.w badconerr
0002D34A <AmiBlitz3_noFPU_r470.ab3@15742> JMP syntaxerropt4
0002D34C <AmiBlitz3_noFPU_r470.ab3@15746>   NOT.w -(A1)
0002D36E <AmiBlitz3_noFPU_r470.ab3@15747>   !compare1                                                ;bsr.w tstalpha
0002D372 <AmiBlitz3_noFPU_r470.ab3@15748>    BEQ.w JL_0_AF4C
0002D376 <AmiBlitz3_noFPU_r470.ab3@15749>   CMP.w #$2A,D0
0002D37A <AmiBlitz3_noFPU_r470.ab3@15750>    BEQ.w JL_0_AF4C
0002D37E <AmiBlitz3_noFPU_r470.ab3@15751>   CMP.w #$5C,D0
0002D382 <AmiBlitz3_noFPU_r470.ab3@15752>    BEQ.w JL_0_AF4C
0002D386 <AmiBlitz3_noFPU_r470.ab3@15753>   CMP.w #$22,D0
0002D38A <AmiBlitz3_noFPU_r470.ab3@15754>    BEQ.w JL_0_ADC0
0002D38E <AmiBlitz3_noFPU_r470.ab3@15755>   BTST #$F,D0
0002D392 <AmiBlitz3_noFPU_r470.ab3@15756>    BNE.w JL_0_AAF2
0002D396 <AmiBlitz3_noFPU_r470.ab3@15757>   CMP.w #"&",D0
0002D39A <AmiBlitz3_noFPU_r470.ab3@15758>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D39E <AmiBlitz3_noFPU_r470.ab3@15759>   CMP.w #"?",D0
0002D3A2 <AmiBlitz3_noFPU_r470.ab3@15760>    BEQ.w JL_0_AED4
0002D3A6 <AmiBlitz3_noFPU_r470.ab3@15763>   CMP.b #"@",d0
0002D3AA <AmiBlitz3_noFPU_r470.ab3@15764>    BNE syntaxerr
0002D3B0 <AmiBlitz3_noFPU_r470.ab3@15765>   TST.b newsyntax
0002D3B4 <AmiBlitz3_noFPU_r470.ab3@15766>    BEQ JUMP_syntaxerropt4
0002D3BA <AmiBlitz3_noFPU_r470.ab3@15767>   MOVE.w regnum,D1
0002D3BC <AmiBlitz3_noFPU_r470.ab3@15768>   LSL.w #8,D1
0002D3BE <AmiBlitz3_noFPU_r470.ab3@15769>   LSL.w #1,D1
0002D3C2 <AmiBlitz3_noFPU_r470.ab3@15770>   ORI.w #$203C,D1
0002D3C6 <AmiBlitz3_noFPU_r470.ab3@15771>   BSR.w writeword
0002D3CA <AmiBlitz3_noFPU_r470.ab3@15772>   CMP.b #$22,(a5)
0002D3CE <AmiBlitz3_noFPU_r470.ab3@15773>    BNE syntaxerr
0002D3D0 <AmiBlitz3_noFPU_r470.ab3@15774>   ADDQ #1,a5
0002D3D2 <AmiBlitz3_noFPU_r470.ab3@15775>   MOVEQ #0,d0
0002D3D6 <AmiBlitz3_noFPU_r470.ab3@15776>   CMP.b #1,d2
0002D3DA <AmiBlitz3_noFPU_r470.ab3@15777>    BEQ 'l3b
0002D3DE <AmiBlitz3_noFPU_r470.ab3@15778>   CMP.b #2,d2
0002D3E2 <AmiBlitz3_noFPU_r470.ab3@15779>    BEQ 'l2b
0002D3E6 <AmiBlitz3_noFPU_r470.ab3@15780>   CMP.b #4,d2
0002D3EA <AmiBlitz3_noFPU_r470.ab3@15781>    BEQ error_convert_types
0002D3EC <AmiBlitz3_noFPU_r470.ab3@15782>   MOVE.b (a5)+,d0
0002D3F0 <AmiBlitz3_noFPU_r470.ab3@15783>   BEQ syntaxerr
0002D3F4 <AmiBlitz3_noFPU_r470.ab3@15784>   CMP.b #$22,d0
0002D3F8 <AmiBlitz3_noFPU_r470.ab3@15785>   BNE 'l1
0002D3FC <AmiBlitz3_noFPU_r470.ab3@15786>     MOVE.b #0,d0
0002D400 <AmiBlitz3_noFPU_r470.ab3@15787> BRA 'do
0002D402 <AmiBlitz3_noFPU_r470.ab3@15790>   ASL.l #8,d0
0002D404 <AmiBlitz3_noFPU_r470.ab3@15791>   MOVE.b (a5)+,d0
0002D408 <AmiBlitz3_noFPU_r470.ab3@15792>   BEQ syntaxerr
0002D40C <AmiBlitz3_noFPU_r470.ab3@15793>   CMP.b #$22,d0
0002D410 <AmiBlitz3_noFPU_r470.ab3@15794>   BNE 'l2
0002D414 <AmiBlitz3_noFPU_r470.ab3@15795>     MOVE.b #0,d0
0002D416 <AmiBlitz3_noFPU_r470.ab3@15796>     ASR.l #8,d0
0002D41A <AmiBlitz3_noFPU_r470.ab3@15797> BRA 'do
0002D41C <AmiBlitz3_noFPU_r470.ab3@15800>   ASL.l #8,d0
0002D41E <AmiBlitz3_noFPU_r470.ab3@15803>   MOVE.b (a5)+,d0
0002D422 <AmiBlitz3_noFPU_r470.ab3@15804>    BEQ syntaxerr
0002D426 <AmiBlitz3_noFPU_r470.ab3@15805>    CMP.b #$22,d0
0002D42A <AmiBlitz3_noFPU_r470.ab3@15806>    BNE 'l3
0002D42E <AmiBlitz3_noFPU_r470.ab3@15807>    MOVE.b #0,d0
0002D430 <AmiBlitz3_noFPU_r470.ab3@15808>    ASR.l #8,d0
0002D434 <AmiBlitz3_noFPU_r470.ab3@15809> BRA 'do
0002D436 <AmiBlitz3_noFPU_r470.ab3@15812>   ASL.l #8,d0
0002D438 <AmiBlitz3_noFPU_r470.ab3@15815>   MOVE.b (a5)+,d0
0002D43C <AmiBlitz3_noFPU_r470.ab3@15816>    BEQ syntaxerr
0002D440 <AmiBlitz3_noFPU_r470.ab3@15817>    CMP.b #$22,d0
0002D444 <AmiBlitz3_noFPU_r470.ab3@15818>    BNE 'l4
0002D448 <AmiBlitz3_noFPU_r470.ab3@15819>    MOVE.b #0,d0
0002D44A <AmiBlitz3_noFPU_r470.ab3@15820>    ASR.l #8,d0
0002D44E <AmiBlitz3_noFPU_r470.ab3@15821> BRA 'do
0002D452 <AmiBlitz3_noFPU_r470.ab3@15824>    CMP.b #$22,(a5)+
0002D456 <AmiBlitz3_noFPU_r470.ab3@15825>    BNE JUMP_error4char
0002D458 <AmiBlitz3_noFPU_r470.ab3@15828>   MOVE.l d0,d1
0002D45C <AmiBlitz3_noFPU_r470.ab3@15829>     BSR writelong
0002D460 <AmiBlitz3_noFPU_r470.ab3@15830>     BSR get1bytemain
0002D462 <AmiBlitz3_noFPU_r470.ab3@15831> RTS
0002D466 <AmiBlitz3_noFPU_r470.ab3@15835>   BSR.w get1bytemain
0002D46A <AmiBlitz3_noFPU_r470.ab3@15836>   CMP.w #$2E,D0
0002D46E <AmiBlitz3_noFPU_r470.ab3@15837>    BEQ.b JL_0_A7F4
0002D478 <AmiBlitz3_noFPU_r470.ab3@15839>   MOVE.w oldqflag,instringon
0002D47E <AmiBlitz3_noFPU_r470.ab3@15840>   MOVEA.l lastsourcepos,A5
0002D480 <AmiBlitz3_noFPU_r470.ab3@15841>   MOVE.w D2,-(A7)
0002D484 <AmiBlitz3_noFPU_r470.ab3@15842>    BSR.w getparameter2
0002D488 <AmiBlitz3_noFPU_r470.ab3@15843>    BEQ.w syntaxerr
0002D48E <AmiBlitz3_noFPU_r470.ab3@15844>   LEA varbase,A2
0002D492 <AmiBlitz3_noFPU_r470.ab3@15845>    BSR.w findvariable
0002D496 <AmiBlitz3_noFPU_r470.ab3@15846>    BNE.w notypeerr
0002D49A <AmiBlitz3_noFPU_r470.ab3@15847>   MOVE.w $4(A2),D3
0002D49C <AmiBlitz3_noFPU_r470.ab3@15848>   EXT.l D3
0002D49E <AmiBlitz3_noFPU_r470.ab3@15849>   MOVE.w (A7)+,D2
0002D4A2 <AmiBlitz3_noFPU_r470.ab3@15850> BRA.w JL_0_B46E
0002D4A4 <AmiBlitz3_noFPU_r470.ab3@15854>   MOVE.w D2,-(A7)
0002D4A8 <AmiBlitz3_noFPU_r470.ab3@15855>    BSR.w getparameter2
0002D4AC <AmiBlitz3_noFPU_r470.ab3@15856>    BEQ.w syntaxerr
0002D4B2 <AmiBlitz3_noFPU_r470.ab3@15857>   LEA newtypebase,A2
0002D4B6 <AmiBlitz3_noFPU_r470.ab3@15858>    BSR.w findtype
0002D4BA <AmiBlitz3_noFPU_r470.ab3@15859>    BNE.w notypeerr
0002D4BC <AmiBlitz3_noFPU_r470.ab3@15860>   MOVEQ.l #$00,D3
0002D4C0 <AmiBlitz3_noFPU_r470.ab3@15861>   CMP.w #$5C,D0
0002D4C4 <AmiBlitz3_noFPU_r470.ab3@15862>    BNE.w JL_0_A832
0002D4C8 <AmiBlitz3_noFPU_r470.ab3@15863>    BSR.w getparameter2
0002D4CC <AmiBlitz3_noFPU_r470.ab3@15864>    BEQ.w syntaxerr
0002D4D0 <AmiBlitz3_noFPU_r470.ab3@15865>   LEA $4(A2),A2
0002D4D4 <AmiBlitz3_noFPU_r470.ab3@15866>    BSR.w findvariable2
0002D4D8 <AmiBlitz3_noFPU_r470.ab3@15867>    BNE.w noofferr
0002D4DC <AmiBlitz3_noFPU_r470.ab3@15868>   MOVE.w $4(A2),D3
0002D4E0 <AmiBlitz3_noFPU_r470.ab3@15869> BRA.w JL_0_A836
0002D4E4 <AmiBlitz3_noFPU_r470.ab3@15873>   MOVE.w $8(A2),D3
0002D4E6 <AmiBlitz3_noFPU_r470.ab3@15876>   MOVE.w (A7)+,D2
0002D4EA <AmiBlitz3_noFPU_r470.ab3@15877> BRA.w JL_0_B46E
0002D4EC <AmiBlitz3_noFPU_r470.ab3@15881>   MOVEQ.l #-$01,D3
0002D4F0 <AmiBlitz3_noFPU_r470.ab3@15882>    BSR.w get1bytemain
0002D4F4 <AmiBlitz3_noFPU_r470.ab3@15883> BRA.w JL_0_B46E
0002D4F6 <AmiBlitz3_noFPU_r470.ab3@15887>   MOVEQ.l #$00,D3
0002D4FA <AmiBlitz3_noFPU_r470.ab3@15888>    BSR.w get1bytemain
0002D4FE <AmiBlitz3_noFPU_r470.ab3@15889> BRA.w JL_0_B46E
0002D502 <AmiBlitz3_noFPU_r470.ab3@15893>   CMP.w #$30,D0
0002D506 <AmiBlitz3_noFPU_r470.ab3@15894>    BCS.w JL_0_A876
0002D50A <AmiBlitz3_noFPU_r470.ab3@15895>   CMP.w #$39,D0
0002D50E <AmiBlitz3_noFPU_r470.ab3@15896>    BLS.w JL_0_A874
0002D512 <AmiBlitz3_noFPU_r470.ab3@15897>   ANDI.w #$FFDF,D0
0002D516 <AmiBlitz3_noFPU_r470.ab3@15898>   CMP.w #$46,D0
0002D51A <AmiBlitz3_noFPU_r470.ab3@15899>    BHI.w JL_0_A876
0002D51E <AmiBlitz3_noFPU_r470.ab3@15900>   CMP.w #$41,D0
0002D522 <AmiBlitz3_noFPU_r470.ab3@15901>    BCS.w JL_0_A876
0002D524 <AmiBlitz3_noFPU_r470.ab3@15904>    CMP.w D0,D0
0002D526 <AmiBlitz3_noFPU_r470.ab3@15907> RTS
0002D52A <AmiBlitz3_noFPU_r470.ab3@15911>   CMP.w #$31,D0
0002D52E <AmiBlitz3_noFPU_r470.ab3@15912>    BEQ.w JL_0_A884
0002D532 <AmiBlitz3_noFPU_r470.ab3@15913>   CMP.w #$30,D0
0002D534 <AmiBlitz3_noFPU_r470.ab3@15916> RTS
0002D536 <AmiBlitz3_noFPU_r470.ab3@15920>    MOVEQ #0,d0
0002D538 <AmiBlitz3_noFPU_r470.ab3@15921>    MOVE.b (a5)+,d0
0002D53A <AmiBlitz3_noFPU_r470.ab3@15922>    MOVE.b (a5)+,d0
0002D53E <AmiBlitz3_noFPU_r470.ab3@15923>    BSR ishex
0002D542 <AmiBlitz3_noFPU_r470.ab3@15924>    BNE syntaxerr
0002D546 <AmiBlitz3_noFPU_r470.ab3@15925>    SUBI.w #$30,D0
0002D54A <AmiBlitz3_noFPU_r470.ab3@15926>    CMP.w #$9,D0
0002D54E <AmiBlitz3_noFPU_r470.ab3@15927>    BLS.w 'l1
0002D550 <AmiBlitz3_noFPU_r470.ab3@15928>    SUBQ.w #7,D0
0002D552 <AmiBlitz3_noFPU_r470.ab3@15931>    MOVE.l d0,d1
0002D554 <AmiBlitz3_noFPU_r470.ab3@15932>    MOVE.b (a5)+,d0
0002D558 <AmiBlitz3_noFPU_r470.ab3@15933>      BSR ishex
0002D55C <AmiBlitz3_noFPU_r470.ab3@15934>     BNE syntaxerr
0002D55E <AmiBlitz3_noFPU_r470.ab3@15935>     LSL.l #4,d1
0002D562 <AmiBlitz3_noFPU_r470.ab3@15936>     SUBI.w #$30,D0
0002D566 <AmiBlitz3_noFPU_r470.ab3@15937>    CMP.w #$9,D0
0002D56A <AmiBlitz3_noFPU_r470.ab3@15938>    BLS.w 'l2
0002D56C <AmiBlitz3_noFPU_r470.ab3@15939>    SUBQ.w #7,D0
0002D56E <AmiBlitz3_noFPU_r470.ab3@15942>   ADD.l d1,d0
0002D570 <AmiBlitz3_noFPU_r470.ab3@15943> RTS
0002D574 <AmiBlitz3_noFPU_r470.ab3@15947>    BSR.w get1bytemain
0002D578 <AmiBlitz3_noFPU_r470.ab3@15948>    BSR.w ishex
0002D57C <AmiBlitz3_noFPU_r470.ab3@15949>    BNE.w syntaxerr
0002D57E <AmiBlitz3_noFPU_r470.ab3@15950>   MOVEQ.l #$00,D3
0002D582 <AmiBlitz3_noFPU_r470.ab3@15951>   CMP.w #5,d2
0002D586 <AmiBlitz3_noFPU_r470.ab3@15952>   BNE JL_0_A894
0002D58C <AmiBlitz3_noFPU_r470.ab3@15953>   CMP.l #newtype_double,a2
0002D590 <AmiBlitz3_noFPU_r470.ab3@15954>   BEQ 'doit
0002D596 <AmiBlitz3_noFPU_r470.ab3@15955>   CMP.l #newtype_float,a2
0002D59A <AmiBlitz3_noFPU_r470.ab3@15956>   BNE JL_0_A894
0002D5A2 <AmiBlitz3_noFPU_r470.ab3@15959>    fmove.s #0,fp0
0002D5A8 <AmiBlitz3_noFPU_r470.ab3@15961>   TST.b fpu
0002D5AC <AmiBlitz3_noFPU_r470.ab3@15962>   BEQ JL_0_A894
0002D5B2 <AmiBlitz3_noFPU_r470.ab3@15963>   fmove.w #16,fp1
0002D5B6 <AmiBlitz3_noFPU_r470.ab3@15964>   fmul.x fp1,fp0
0002D5BA <AmiBlitz3_noFPU_r470.ab3@15965>   SUBI.w #$30,D0
0002D5BE <AmiBlitz3_noFPU_r470.ab3@15966>   CMP.w #$9,D0
0002D5C2 <AmiBlitz3_noFPU_r470.ab3@15967>    BLS.w JL_0_A8AEa
0002D5C4 <AmiBlitz3_noFPU_r470.ab3@15968>   SUBQ.w #7,D0
0002D5C8 <AmiBlitz3_noFPU_r470.ab3@15971>    fmove.w d0,fp1
0002D5CC <AmiBlitz3_noFPU_r470.ab3@15972>    fadd.x fp1,fp0
0002D5D0 <AmiBlitz3_noFPU_r470.ab3@15973>    BSR.w get1bytemain
0002D5D4 <AmiBlitz3_noFPU_r470.ab3@15974>    BSR.w ishex
0002D5D8 <AmiBlitz3_noFPU_r470.ab3@15975>    BEQ.w JL_0_A894a
0002D5DC <AmiBlitz3_noFPU_r470.ab3@15976> BRA.w nofpregload
0002D5E2 <AmiBlitz3_noFPU_r470.ab3@15980>   CMP.l #$10000000,D3
0002D5E6 <AmiBlitz3_noFPU_r470.ab3@15981>    BCC.w overerr
0002D5E8 <AmiBlitz3_noFPU_r470.ab3@15982>   LSL.l #4,D3
0002D5EC <AmiBlitz3_noFPU_r470.ab3@15983>   SUBI.w #$30,D0
0002D5F0 <AmiBlitz3_noFPU_r470.ab3@15984>   CMP.w #$9,D0
0002D5F4 <AmiBlitz3_noFPU_r470.ab3@15985>    BLS.w JL_0_A8AE
0002D5F6 <AmiBlitz3_noFPU_r470.ab3@15986>   SUBQ.w #7,D0
0002D5F8 <AmiBlitz3_noFPU_r470.ab3@15989>   OR.w D0,D3
0002D5FC <AmiBlitz3_noFPU_r470.ab3@15990>    BSR.w get1bytemain
0002D600 <AmiBlitz3_noFPU_r470.ab3@15991>    BSR.w ishex
0002D604 <AmiBlitz3_noFPU_r470.ab3@15992>    BEQ.w JL_0_A894
0002D608 <AmiBlitz3_noFPU_r470.ab3@15993> BRA.w JL_0_B46E
0002D60C <AmiBlitz3_noFPU_r470.ab3@15997>    BSR.w get1bytemain
0002D610 <AmiBlitz3_noFPU_r470.ab3@15998>    BSR.w JL_0_A878
0002D614 <AmiBlitz3_noFPU_r470.ab3@15999>    BNE.w syntaxerr
0002D616 <AmiBlitz3_noFPU_r470.ab3@16000>    MOVEQ.l #$00,D3
0002D618 <AmiBlitz3_noFPU_r470.ab3@16003>    LSL.l #1,D3
0002D61C <AmiBlitz3_noFPU_r470.ab3@16004>    BCS.w overerr
0002D620 <AmiBlitz3_noFPU_r470.ab3@16005>   SUBI.w #$30,D0
0002D622 <AmiBlitz3_noFPU_r470.ab3@16006>   OR.w D0,D3
0002D626 <AmiBlitz3_noFPU_r470.ab3@16007>    BSR.w get1bytemain
0002D62A <AmiBlitz3_noFPU_r470.ab3@16008>    BSR.w JL_0_A878
0002D62E <AmiBlitz3_noFPU_r470.ab3@16009>    BEQ.w JL_0_A8CE
0002D632 <AmiBlitz3_noFPU_r470.ab3@16010> BRA.w JL_0_B46E
0002D634 <AmiBlitz3_noFPU_r470.ab3@16014>    MOVE.w d2,-(A7)
0002D63C <AmiBlitz3_noFPU_r470.ab3@16015>    MOVE.b #0,automode
0002D640 <AmiBlitz3_noFPU_r470.ab3@16016>    CMP.b #"@",(a5)
0002D644 <AmiBlitz3_noFPU_r470.ab3@16017>    BNE 'l1
0002D646 <AmiBlitz3_noFPU_r470.ab3@16018>    ADDQ.l #1,a5
0002D64E <AmiBlitz3_noFPU_r470.ab3@16019>    MOVE.b #1,automode
0002D652 <AmiBlitz3_noFPU_r470.ab3@16020>    BSR getparameter2
0002D656 <AmiBlitz3_noFPU_r470.ab3@16021>    BSR findlabel2
0002D65A <AmiBlitz3_noFPU_r470.ab3@16022>    BNE 'addit
0002D65E <AmiBlitz3_noFPU_r470.ab3@16023> BRA errormsg_autocount
0002D662 <AmiBlitz3_noFPU_r470.ab3@16026>   BSR.w addlabelhash
0002D66A <AmiBlitz3_noFPU_r470.ab3@16027>   MOVE.l #$1,$4(A2)
0002D66E <AmiBlitz3_noFPU_r470.ab3@16028>   MOVEM.l a2/a5,-(a7)
0002D674 <AmiBlitz3_noFPU_r470.ab3@16029>   MOVE.w lastchar,-(a7)
0002D67A <AmiBlitz3_noFPU_r470.ab3@16030>   LEA autostorename,a5
0002D67E <AmiBlitz3_noFPU_r470.ab3@16031>   BSR getparameter2
0002D682 <AmiBlitz3_noFPU_r470.ab3@16032>   BSR findlabel2
0002D686 <AmiBlitz3_noFPU_r470.ab3@16033>   BEQ 'found
0002D68A <AmiBlitz3_noFPU_r470.ab3@16034>   BSR.w addlabelhash
0002D692 <AmiBlitz3_noFPU_r470.ab3@16035>   MOVE.l #$1,$4(A2)
0002D69A <AmiBlitz3_noFPU_r470.ab3@16036>   MOVE.l #0,8(a2)
0002D69C <AmiBlitz3_noFPU_r470.ab3@16039>    MOVE.w (a7)+,d0
0002D6A2 <AmiBlitz3_noFPU_r470.ab3@16040>    MOVE.w d0,lastchar
0002D6A6 <AmiBlitz3_noFPU_r470.ab3@16041>   MOVE.l 8(a2),d3
0002D6AE <AmiBlitz3_noFPU_r470.ab3@16042>   ADD.l #1,8(a2)
0002D6B2 <AmiBlitz3_noFPU_r470.ab3@16043>   MOVEM.l (a7)+,a2/a5
0002D6B6 <AmiBlitz3_noFPU_r470.ab3@16044>   MOVE.l d3,8(a2)
0002D6BA <AmiBlitz3_noFPU_r470.ab3@16045>   MOVE.l $8(A2),D3
0002D6BE <AmiBlitz3_noFPU_r470.ab3@16046> BRA.l 'l3
0002D6C2 <AmiBlitz3_noFPU_r470.ab3@16049>   BSR.w getparameter2
0002D6C8 <AmiBlitz3_noFPU_r470.ab3@16050>     TST.b incnif
0002D6CC <AmiBlitz3_noFPU_r470.ab3@16051>     BEQ 'lc1
0002D6D0 <AmiBlitz3_noFPU_r470.ab3@16052>     BSR.w findlabel2
0002D6D4 <AmiBlitz3_noFPU_r470.ab3@16053>     BNE 'l5
0002D6D6 <AmiBlitz3_noFPU_r470.ab3@16054>     MOVEQ #1,d3
0002D6D8 <AmiBlitz3_noFPU_r470.ab3@16055>     MOVE.w (A7)+,D2
0002D6DC <AmiBlitz3_noFPU_r470.ab3@16056> BRA JL_0_B46E
0002D6DE <AmiBlitz3_noFPU_r470.ab3@16059>   MOVEQ #0,d3
0002D6E0 <AmiBlitz3_noFPU_r470.ab3@16060>     MOVE.w (A7)+,D2
0002D6E4 <AmiBlitz3_noFPU_r470.ab3@16061> BRA JL_0_B46E
0002D6E8 <AmiBlitz3_noFPU_r470.ab3@16064>    BSR.w findlabel2
0002D6EC <AmiBlitz3_noFPU_r470.ab3@16065>    BNE.w cnferr
0002D6F4 <AmiBlitz3_noFPU_r470.ab3@16068>    CMPI.l #$1,$4(A2)
0002D6F8 <AmiBlitz3_noFPU_r470.ab3@16069>    BNE.w cnferr
0002D6FC <AmiBlitz3_noFPU_r470.ab3@16071>    MOVE.l $8(A2),D3
0002D6FE <AmiBlitz3_noFPU_r470.ab3@16072>    MOVE.w (A7)+,D2
0002D702 <AmiBlitz3_noFPU_r470.ab3@16073> BRA.w JL_0_B46E
0002D708 <AmiBlitz3_noFPU_r470.ab3@16077>   CLR.w vartype
0002D710 <AmiBlitz3_noFPU_r470.ab3@16078>   MOVE.b #3,peekaddrsize
0002D714 <AmiBlitz3_noFPU_r470.ab3@16079>   BSR.w JL_0_A916
0002D71A <AmiBlitz3_noFPU_r470.ab3@16080>   MOVE.l a2,rightsidetype
0002D71C <AmiBlitz3_noFPU_r470.ab3@16081>   MOVEQ.l #$03,D2
0002D71E <AmiBlitz3_noFPU_r470.ab3@16082> RTS
0002D722 <AmiBlitz3_noFPU_r470.ab3@16086>    BSR.w get1bytemain
0002D734 <AmiBlitz3_noFPU_r470.ab3@16087>    !compare2
0002D738 <AmiBlitz3_noFPU_r470.ab3@16088>    BEQ andop2
0002D73C <AmiBlitz3_noFPU_r470.ab3@16089>    BSR.w getparameter
0002D740 <AmiBlitz3_noFPU_r470.ab3@16090>    BSR.w JL_0_8E3C
0002D744 <AmiBlitz3_noFPU_r470.ab3@16091>    BSR.w calcvar
0002D748 <AmiBlitz3_noFPU_r470.ab3@16092>   CMP.b #$7,D2
0002D74C <AmiBlitz3_noFPU_r470.ab3@16093>    BNE.w JL_0_A960
0002D750 <AmiBlitz3_noFPU_r470.ab3@16094>   BTST #$F,D2
0002D754 <AmiBlitz3_noFPU_r470.ab3@16095>    BNE.w JL_0_A94A
0002D75A <AmiBlitz3_noFPU_r470.ab3@16096>   MOVE.w D3,stamp2+2
0002D760 <AmiBlitz3_noFPU_r470.ab3@16097>   MOVE.l stamp2,D1
0002D764 <AmiBlitz3_noFPU_r470.ab3@16098>    BSR.w pokela5s
0002D768 <AmiBlitz3_noFPU_r470.ab3@16099> BRA.w JL_0_A978
0002D76E <AmiBlitz3_noFPU_r470.ab3@16103>   MOVE.w regnum,D1
0002D770 <AmiBlitz3_noFPU_r470.ab3@16104>   LSL.w #8,D1
0002D772 <AmiBlitz3_noFPU_r470.ab3@16105>   LSL.w #1,D1
0002D778 <AmiBlitz3_noFPU_r470.ab3@16106>   OR.w stamp,D1
0002D77C <AmiBlitz3_noFPU_r470.ab3@16107>    BSR.w writeword
0002D77E <AmiBlitz3_noFPU_r470.ab3@16108> RTS
0002D782 <AmiBlitz3_noFPU_r470.ab3@16112>   BTST #$F,D2
0002D786 <AmiBlitz3_noFPU_r470.ab3@16113>    BNE.w JL_0_A978
0002D78C <AmiBlitz3_noFPU_r470.ab3@16114>   MOVE.w D3,leaamp+2
0002D792 <AmiBlitz3_noFPU_r470.ab3@16115>   MOVE.l leaamp,D1
0002D796 <AmiBlitz3_noFPU_r470.ab3@16116>    BSR.w pokela5s
0002D79C <AmiBlitz3_noFPU_r470.ab3@16119>   MOVE.w regnum,D1
0002D79E <AmiBlitz3_noFPU_r470.ab3@16120>   LSL.w #8,D1
0002D7A0 <AmiBlitz3_noFPU_r470.ab3@16121>   LSL.w #1,D1
0002D7A6 <AmiBlitz3_noFPU_r470.ab3@16122>   OR.w leaamp2,D1
0002D7AA <AmiBlitz3_noFPU_r470.ab3@16123> BRA.w writeword
0002D7AE <AmiBlitz3_noFPU_r470.ab3@16127>   MOVE.w #$D200,D1
0002D7B2 <AmiBlitz3_noFPU_r470.ab3@16128>    BSR.w Atokejsr
0002D7B4 <AmiBlitz3_noFPU_r470.ab3@16129>   MOVEQ.l #$03,D2
0002D7B6 <AmiBlitz3_noFPU_r470.ab3@16130> RTS
0002D7BA <AmiBlitz3_noFPU_r470.ab3@16134> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002D7BC <AmiBlitz3_noFPU_r470.ab3@16135>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002D7BE <AmiBlitz3_noFPU_r470.ab3@16136>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002D7C2 <AmiBlitz3_noFPU_r470.ab3@16142>    BSR.w get1bytemain
0002D7C4 <AmiBlitz3_noFPU_r470.ab3@16143>   MOVE.w D0,D1
0002D7C8 <AmiBlitz3_noFPU_r470.ab3@16144>    BPL.w syntaxerr
0002D7CA <AmiBlitz3_noFPU_r470.ab3@16145>   MOVE.w D2,-(A7)
0002D7CE <AmiBlitz3_noFPU_r470.ab3@16146>   BCLR #$F,D1
0002D7D2 <AmiBlitz3_noFPU_r470.ab3@16147>    BSR.w searchinstr
0002D7D6 <AmiBlitz3_noFPU_r470.ab3@16148>   MOVE.l $12(A2),D0
0002D7DA <AmiBlitz3_noFPU_r470.ab3@16149>   TST.w -$2(A2,D0.L)
0002D7DE <AmiBlitz3_noFPU_r470.ab3@16150>    BEQ.w freeerr
0002D7E0 <AmiBlitz3_noFPU_r470.ab3@16151>   MOVE.w (A7)+,D2
0002D7E2 <AmiBlitz3_noFPU_r470.ab3@16152> RTS
0002D7E6 <AmiBlitz3_noFPU_r470.ab3@16156>   MOVE.l $0(A5),D0
0002D7EA <AmiBlitz3_noFPU_r470.ab3@16157>    BNE.b ucodeskip
0002D7EC <AmiBlitz3_noFPU_r470.ab3@16158>   MOVEQ.l #-$01,D0
0002D7F0 <AmiBlitz3_noFPU_r470.ab3@16159> BRA.b usedcodef
0002D7F4 <AmiBlitz3_noFPU_r470.ab3@16162>   SUB.l $0(A5),D0
0002D7F6 <AmiBlitz3_noFPU_r470.ab3@16165>   LSR.w #8,D0
0002D7FA <AmiBlitz3_noFPU_r470.ab3@16170>    MOVE.l $0(A5),D0
0002D7FE <AmiBlitz3_noFPU_r470.ab3@16171>    BNE.b ucodeskip2
0002D800 <AmiBlitz3_noFPU_r470.ab3@16172>   MOVEQ.l #-$01,D0
0002D804 <AmiBlitz3_noFPU_r470.ab3@16173> BRA.b usedcode2f
0002D808 <AmiBlitz3_noFPU_r470.ab3@16176>   SUB.l $0(A5),D0                                          ;usedcode2
0002D80A <AmiBlitz3_noFPU_r470.ab3@16177>   LSR.w #8,D0
0002D80C <AmiBlitz3_noFPU_r470.ab3@16180>   LSR.w #8,D0
0002D80E <AmiBlitz3_noFPU_r470.ab3@16185>   MOVE.l D0,-(A7)
0002D810 <AmiBlitz3_noFPU_r470.ab3@16188>   MOVE.l (A7)+,D0
0002D812 <AmiBlitz3_noFPU_r470.ab3@16191>   MOVE.l D0,D0
0002D816 <AmiBlitz3_noFPU_r470.ab3@16197>   BSR.w JL_0_A9A0
0002D81A <AmiBlitz3_noFPU_r470.ab3@16199>   MOVE.w -$2(A2,D0.L),D3
0002D81E <AmiBlitz3_noFPU_r470.ab3@16200>   CMP.w #$9,D3
0002D822 <AmiBlitz3_noFPU_r470.ab3@16201>    BCC.w doused__skip
0002D826 <AmiBlitz3_noFPU_r470.ab3@16205>   LEA usedcode(PC),A0
0002D82A <AmiBlitz3_noFPU_r470.ab3@16206>   LEA usedcodef(PC),A1
0002D830 <AmiBlitz3_noFPU_r470.ab3@16208>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002D834 <AmiBlitz3_noFPU_r470.ab3@16209>   ANDI.w #$7,D3
0002D836 <AmiBlitz3_noFPU_r470.ab3@16210>   LSL.w #8,D3
0002D838 <AmiBlitz3_noFPU_r470.ab3@16211>   LSL.w #1,D3
0002D83C <AmiBlitz3_noFPU_r470.ab3@16212>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002D840 <AmiBlitz3_noFPU_r470.ab3@16213> BRA.w doused__skip2
0002D844 <AmiBlitz3_noFPU_r470.ab3@16218>   LEA usedcode2(PC),A0
0002D848 <AmiBlitz3_noFPU_r470.ab3@16219>   LEA usedcode2f(PC),A1
0002D84E <AmiBlitz3_noFPU_r470.ab3@16221>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002D850 <AmiBlitz3_noFPU_r470.ab3@16222>   SUBQ.w #8,D3
0002D852 <AmiBlitz3_noFPU_r470.ab3@16223>   LSL.w #8,D3
0002D854 <AmiBlitz3_noFPU_r470.ab3@16224>   LSL.w #1,D3
0002D858 <AmiBlitz3_noFPU_r470.ab3@16225>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002D85C <AmiBlitz3_noFPU_r470.ab3@16228>   MOVE.w -$6(A2,D0.L),D3
0002D860 <AmiBlitz3_noFPU_r470.ab3@16229>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002D862 <AmiBlitz3_noFPU_r470.ab3@16230>   ADDQ.w #4,D3
0002D866 <AmiBlitz3_noFPU_r470.ab3@16231>   MOVE.w D3,$2(A0)
0002D86C <AmiBlitz3_noFPU_r470.ab3@16232>   MOVE.w regnum,D1
0002D870 <AmiBlitz3_noFPU_r470.ab3@16233>    BEQ.w doused__skip3
0002D874 <AmiBlitz3_noFPU_r470.ab3@16234>   MOVE.w usedprep(PC),D1
0002D878 <AmiBlitz3_noFPU_r470.ab3@16235>    BSR.w writeword
0002D87C <AmiBlitz3_noFPU_r470.ab3@16238>   BSR.w pokecode
0002D882 <AmiBlitz3_noFPU_r470.ab3@16239>   MOVE.w regnum,D1
0002D886 <AmiBlitz3_noFPU_r470.ab3@16240>    BEQ.w doused__skip4
0002D888 <AmiBlitz3_noFPU_r470.ab3@16241>   LSL.w #8,D1
0002D88A <AmiBlitz3_noFPU_r470.ab3@16242>   LSL.w #1,D1
0002D88E <AmiBlitz3_noFPU_r470.ab3@16243>   OR.w usedfix(PC),D1
0002D892 <AmiBlitz3_noFPU_r470.ab3@16244>    BSR.w writeword
0002D896 <AmiBlitz3_noFPU_r470.ab3@16245>   MOVE.w useddone(PC),D1
0002D89A <AmiBlitz3_noFPU_r470.ab3@16246>    BSR.w writeword
0002D89C <AmiBlitz3_noFPU_r470.ab3@16249>    MOVEQ.l #$02,D2
0002D8A0 <AmiBlitz3_noFPU_r470.ab3@16250> BRA.w get1bytemain
0002D8A4 <AmiBlitz3_noFPU_r470.ab3@16258>    BSR.w JL_0_A9A0
0002D8A6 <AmiBlitz3_noFPU_r470.ab3@16260>   MOVEQ.l #$00,D3
0002D8AA <AmiBlitz3_noFPU_r470.ab3@16261>   MOVE.w -$4(A2,D0.L),D3
0002D8AE <AmiBlitz3_noFPU_r470.ab3@16262>    BSR.w get1bytemain
0002D8B2 <AmiBlitz3_noFPU_r470.ab3@16263> BRA.w JL_0_B46E
0002D8B6 <AmiBlitz3_noFPU_r470.ab3@16270>    BSR.w get1bytemain
0002D8B8 <AmiBlitz3_noFPU_r470.ab3@16271>   MOVE.w D0,-(A7)
0002D8BC <AmiBlitz3_noFPU_r470.ab3@16272>    BSR.w get1bytemain
0002D8C0 <AmiBlitz3_noFPU_r470.ab3@16273>   CMP.w #$28,D0
0002D8C4 <AmiBlitz3_noFPU_r470.ab3@16274>    BNE.w syntaxerr
0002D8C6 <AmiBlitz3_noFPU_r470.ab3@16275>   MOVE.w (A7)+,D0
0002D8CA <AmiBlitz3_noFPU_r470.ab3@16276>    BSR.w JL_0_C340
0002D8CE <AmiBlitz3_noFPU_r470.ab3@16277>    BSR.w reget
0002D8D2 <AmiBlitz3_noFPU_r470.ab3@16278>   CMP.w #$29,D0
0002D8D6 <AmiBlitz3_noFPU_r470.ab3@16279>    BNE.w syntaxerr
0002D8DA <AmiBlitz3_noFPU_r470.ab3@16283>   LEA addrcode(PC),A0
0002D8DE <AmiBlitz3_noFPU_r470.ab3@16284>   LEA addrcodef(PC),A1
0002D8E4 <AmiBlitz3_noFPU_r470.ab3@16285>   MOVE.w -$6(A2),$2(A0)
0002D8E8 <AmiBlitz3_noFPU_r470.ab3@16286>   MOVE.w $4(A0),D1
0002D8EC <AmiBlitz3_noFPU_r470.ab3@16287>   ANDI.w #$FFF8,D1
0002D8F2 <AmiBlitz3_noFPU_r470.ab3@16288>   OR.w regnum,D1
0002D8F6 <AmiBlitz3_noFPU_r470.ab3@16289>   MOVE.w D1,$4(A0)
0002D8FA <AmiBlitz3_noFPU_r470.ab3@16290>   MOVE.w $6(A0),D1
0002D8FE <AmiBlitz3_noFPU_r470.ab3@16291>   ANDI.w #$F1FF,D1
0002D904 <AmiBlitz3_noFPU_r470.ab3@16292>   MOVE.w regnum,D0
0002D906 <AmiBlitz3_noFPU_r470.ab3@16293>   LSL.w #8,D0
0002D908 <AmiBlitz3_noFPU_r470.ab3@16294>   LSL.w #1,D0
0002D90A <AmiBlitz3_noFPU_r470.ab3@16295>   OR.w D0,D1
0002D90E <AmiBlitz3_noFPU_r470.ab3@16296>   MOVE.w D1,$6(A0)
0002D912 <AmiBlitz3_noFPU_r470.ab3@16297>    BSR.w pokecode
0002D914 <AmiBlitz3_noFPU_r470.ab3@16298>   MOVEQ.l #$03,D2
0002D918 <AmiBlitz3_noFPU_r470.ab3@16299> BRA.w get1bytemain
0002D91C <AmiBlitz3_noFPU_r470.ab3@16303>   CMP.w #-$7F4D,D0
0002D920 <AmiBlitz3_noFPU_r470.ab3@16304>    BHI.w JL_0_AAFE
0002D924 <AmiBlitz3_noFPU_r470.ab3@16305> BRA.w syntaxerr
0002D928 <AmiBlitz3_noFPU_r470.ab3@16312> .do_null   CMP.w #$b581,d0
0002D92C <AmiBlitz3_noFPU_r470.ab3@16313>    BNE 'nonull
0002D932 <AmiBlitz3_noFPU_r470.ab3@16314>    MOVE.l d0,lastinstruction
0002D936 <AmiBlitz3_noFPU_r470.ab3@16315>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002D93C <AmiBlitz3_noFPU_r470.ab3@16316>    MOVE.w regnum,d0
0002D93E <AmiBlitz3_noFPU_r470.ab3@16317>    ASL.l #7,d0
0002D940 <AmiBlitz3_noFPU_r470.ab3@16318>    ASL.l #2,d0
0002D942 <AmiBlitz3_noFPU_r470.ab3@16319>    OR.l d0,d1
0002D946 <AmiBlitz3_noFPU_r470.ab3@16320>    BSR writeword
0002D94C <AmiBlitz3_noFPU_r470.ab3@16321>    JSR get1bytemain
0002D94E <AmiBlitz3_noFPU_r470.ab3@16322>    RTS
0002D952 <AmiBlitz3_noFPU_r470.ab3@16324> 'nonull CMP.w #$c982,d0
0002D956 <AmiBlitz3_noFPU_r470.ab3@16325>        BNE nonew_
0002D958 <AmiBlitz3_noFPU_r470.ab3@16327>   MOVE.l a5,-(a7)
0002D95E <AmiBlitz3_noFPU_r470.ab3@16328>   MOVE.w lastchar,-(a7)
0002D964 <AmiBlitz3_noFPU_r470.ab3@16329>   JSR get1bytemain
0002D968 <AmiBlitz3_noFPU_r470.ab3@16330>   CMP.w #"(",d0                                             ; use oldcode
0002D96C <AmiBlitz3_noFPU_r470.ab3@16331>   BNE 'newcode
0002D972 <AmiBlitz3_noFPU_r470.ab3@16332>   JSR get1bytemain
0002D976 <AmiBlitz3_noFPU_r470.ab3@16333>   CMP.w #")",d0
0002D97A <AmiBlitz3_noFPU_r470.ab3@16334>   BEQ 'newcode
0002D980 <AmiBlitz3_noFPU_r470.ab3@16335>   MOVE.w (a7)+,lastchar
0002D982 <AmiBlitz3_noFPU_r470.ab3@16336>   MOVE.l (a7)+,a5
0002D988 <AmiBlitz3_noFPU_r470.ab3@16337>   MOVE.w lastchar,d0
0002D98C <AmiBlitz3_noFPU_r470.ab3@16338>   BRA nonew_
0002D98E <AmiBlitz3_noFPU_r470.ab3@16339> 'newcode  MOVE.l a0,-(a7)
0002D994 <AmiBlitz3_noFPU_r470.ab3@16340>   TST.b blitzparloop
0002D998 <AmiBlitz3_noFPU_r470.ab3@16341>   BNE 'err
0002D99E <AmiBlitz3_noFPU_r470.ab3@16342>   TST.b funcparloop
0002D9A2 <AmiBlitz3_noFPU_r470.ab3@16343>   BNE 'err
0002D9A6 <AmiBlitz3_noFPU_r470.ab3@16344>   BRA 'ok
0002D9AC <AmiBlitz3_noFPU_r470.ab3@16345> 'err JMP errornewnotincalls
0002D9B2 <AmiBlitz3_noFPU_r470.ab3@16346> 'ok  MOVE.l #$203c0000,d1
0002D9B6 <AmiBlitz3_noFPU_r470.ab3@16347>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002D9B8 <AmiBlitz3_noFPU_r470.ab3@16348>   MOVEQ #0,d1
0002D9BC <AmiBlitz3_noFPU_r470.ab3@16349>   MOVE.w 8(a0),d1
0002D9C0 <AmiBlitz3_noFPU_r470.ab3@16350>   BSR writeword
0002D9C4 <AmiBlitz3_noFPU_r470.ab3@16351>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002D9C8 <AmiBlitz3_noFPU_r470.ab3@16352>   BSR writeword
0002D9CC <AmiBlitz3_noFPU_r470.ab3@16353>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002D9D0 <AmiBlitz3_noFPU_r470.ab3@16354>   BSR.w tokejsr2
0002D9D2 <AmiBlitz3_noFPU_r470.ab3@16355>   MOVE.l (a7)+,a0
0002D9D4 <AmiBlitz3_noFPU_r470.ab3@16356>   ADDQ.l #6,a7                      ; a5 need not restore
0002D9D8 <AmiBlitz3_noFPU_r470.ab3@16357>   CMP.w #")",d0
0002D9DC <AmiBlitz3_noFPU_r470.ab3@16358>   BNE 'nobracket
0002D9E2 <AmiBlitz3_noFPU_r470.ab3@16359>   JSR get1bytemain
0002D9E4 <AmiBlitz3_noFPU_r470.ab3@16360> 'nobracket  RTS
0002D9E8 <AmiBlitz3_noFPU_r470.ab3@16362> nonew_  CMP.w #-$7F4A,D0
0002D9EC <AmiBlitz3_noFPU_r470.ab3@16363>    BEQ.w JL_0_A98C
0002D9F0 <AmiBlitz3_noFPU_r470.ab3@16364>   CMP.w #-$7F48,D0
0002D9F4 <AmiBlitz3_noFPU_r470.ab3@16365>    BEQ.w doaddr
0002D9F8 <AmiBlitz3_noFPU_r470.ab3@16366>   CMP.w #-$7F3C,D0
0002D9FC <AmiBlitz3_noFPU_r470.ab3@16367>    BEQ.w domaximum
0002DA00 <AmiBlitz3_noFPU_r470.ab3@16368>   CMP.w #-$7F2F,D0
0002DA04 <AmiBlitz3_noFPU_r470.ab3@16369>    BEQ.w doused
0002DA06 <AmiBlitz3_noFPU_r470.ab3@16370>   MOVE.w D2,-(A7)
0002DA08 <AmiBlitz3_noFPU_r470.ab3@16371>   MOVE.w D0,D1
0002DA0C <AmiBlitz3_noFPU_r470.ab3@16372>   BCLR #$F,D1
0002DA10 <AmiBlitz3_noFPU_r470.ab3@16374>    BSR.w searchinstr
0002DA12 <AmiBlitz3_noFPU_r470.ab3@16375>   MOVE.w (A3),D1
0002DA16 <AmiBlitz3_noFPU_r470.ab3@16376>   BTST #$1,D1
0002DA1A <AmiBlitz3_noFPU_r470.ab3@16377>    BEQ.w noreturn_                                         ;syntax error noreturn
0002DA1E <AmiBlitz3_noFPU_r470.ab3@16378>   BTST #$2,D1
0002DA22 <AmiBlitz3_noFPU_r470.ab3@16379>    BNE.w JL_0_AC1A
0002DA24 <AmiBlitz3_noFPU_r470.ab3@16380>   LSR.w #8,D1
0002DA2A <AmiBlitz3_noFPU_r470.ab3@16381>   BTST #$3,$1(A3)
0002DA2E <AmiBlitz3_noFPU_r470.ab3@16382>    BEQ.w JL_0_AB4C
0002DA34 <AmiBlitz3_noFPU_r470.ab3@16383>    JSR AJL_0_498A
0002DA3A <AmiBlitz3_noFPU_r470.ab3@16386>    CLR.l rightsidetype
0002DA3C <AmiBlitz3_noFPU_r470.ab3@16387>    MOVE.w D1,-(A7)                                         ;is library instruction
0002DA40 <AmiBlitz3_noFPU_r470.ab3@16388>   CMP.w #$7,D1
0002DA44 <AmiBlitz3_noFPU_r470.ab3@16389>    BNE.w JL_0_AB5E
0002DA46 <AmiBlitz3_noFPU_r470.ab3@16390>   MOVE.l A2,-(A7)
0002DA4A <AmiBlitz3_noFPU_r470.ab3@16391>    BSR.w makesbase
0002DA4C <AmiBlitz3_noFPU_r470.ab3@16392>   MOVEA.l (A7)+,A2
0002DA50 <AmiBlitz3_noFPU_r470.ab3@16395>     BSR.w JL_0_AFA2
0002DA52 <AmiBlitz3_noFPU_r470.ab3@16396>   MOVE.w D3,-(A7)
0002DA56 <AmiBlitz3_noFPU_r470.ab3@16397>    BSR.w get1bytemain
0002DA58 <AmiBlitz3_noFPU_r470.ab3@16398>   MOVEQ.l #$00,D1
0002DA5C <AmiBlitz3_noFPU_r470.ab3@16399>   CMP.w #$28,D0
0002DA60 <AmiBlitz3_noFPU_r470.ab3@16400>    BNE.w JL_0_AB80
0002DA66 <AmiBlitz3_noFPU_r470.ab3@16401>    JSR JL_0_66F6
0002DA68 <AmiBlitz3_noFPU_r470.ab3@16402>   TST.w D1
0002DA6C <AmiBlitz3_noFPU_r470.ab3@16403>    BEQ.w syntaxerr
0002DA70 <AmiBlitz3_noFPU_r470.ab3@16404> BRA.w JL_0_AB84
0002DA7A <AmiBlitz3_noFPU_r470.ab3@16409>   MOVE.w oldqflag,instringon
0002DA80 <AmiBlitz3_noFPU_r470.ab3@16410>   MOVEA.l lastsourcepos,A5
0002DA86 <AmiBlitz3_noFPU_r470.ab3@16413>    MOVE.w regnum,-(A7)
0002DA90 <AmiBlitz3_noFPU_r470.ab3@16414>    MOVE.w regnum,regnumstore
0002DA96 <AmiBlitz3_noFPU_r470.ab3@16415>    TST.b fpu
0002DA9A <AmiBlitz3_noFPU_r470.ab3@16416>             BEQ 'nofloat
0002DAA0 <AmiBlitz3_noFPU_r470.ab3@16417>             CMP.w #$ffff,28(a3)
0002DAA4 <AmiBlitz3_noFPU_r470.ab3@16418>             BNE 'nofloat
0002DAAA <AmiBlitz3_noFPU_r470.ab3@16419>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002DAAE <AmiBlitz3_noFPU_r470.ab3@16420>             BEQ 'nofloat
0002DAB4 <AmiBlitz3_noFPU_r470.ab3@16421>             CMP.w #$3c02,34(a3)                            ;int skip
0002DAB8 <AmiBlitz3_noFPU_r470.ab3@16422>             BEQ 'quick
0002DABC <AmiBlitz3_noFPU_r470.ab3@16423>             CMP.b #5,(a3)
0002DAC0 <AmiBlitz3_noFPU_r470.ab3@16424>             BNE 'nofloat
0002DAC6 <AmiBlitz3_noFPU_r470.ab3@16427>             CLR.l load_var_addr
0002DACA <AmiBlitz3_noFPU_r470.ab3@16428> BRA 'isfpu
0002DAD0 <AmiBlitz3_noFPU_r470.ab3@16431>    CLR.w regnum
0002DAD2 <AmiBlitz3_noFPU_r470.ab3@16434>    MOVE.w D1,-(A7)
0002DAD8 <AmiBlitz3_noFPU_r470.ab3@16435>   BTST #$3,$1(A3)
0002DADC <AmiBlitz3_noFPU_r470.ab3@16436>    BEQ.w JL_0_ABB0
0002DAE0 <AmiBlitz3_noFPU_r470.ab3@16455>   MOVE.w $6(A7),D1
0002DAE6 <AmiBlitz3_noFPU_r470.ab3@16456>   MOVE.w d1,peeksize
0002DAEA <AmiBlitz3_noFPU_r470.ab3@16466>   ORI.w #$7000,D1
0002DAEE <AmiBlitz3_noFPU_r470.ab3@16467>   BSR.w writeword                                          ;write peekmode
0002DAF4 <AmiBlitz3_noFPU_r470.ab3@16470>   ADDQ.w #1,regnum
0002DAF6 <AmiBlitz3_noFPU_r470.ab3@16471>   MOVE.w (A7),D1
0002DAFE <AmiBlitz3_noFPU_r470.ab3@16474>   MOVE.w 2(a7),tempregnum
0002DB04 <AmiBlitz3_noFPU_r470.ab3@16475>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002DB0A <AmiBlitz3_noFPU_r470.ab3@16476>   CLR.w parnum                                              ;7.2014
0002DB10 <AmiBlitz3_noFPU_r470.ab3@16477>   JSR JL_0_4878                                             ;write code of blitzfunc
0002DB16 <AmiBlitz3_noFPU_r470.ab3@16478>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002DB18 <AmiBlitz3_noFPU_r470.ab3@16479>   TST.w (A7)+
0002DB1C <AmiBlitz3_noFPU_r470.ab3@16480>   BEQ.w JL_0_ABC6
0002DB20 <AmiBlitz3_noFPU_r470.ab3@16481>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002DB24 <AmiBlitz3_noFPU_r470.ab3@16482>   BNE.w errorbracketmiss                                    ; was syntax error
0002DB2A <AmiBlitz3_noFPU_r470.ab3@16483>   CLR.l lasttoken
0002DB2E <AmiBlitz3_noFPU_r470.ab3@16484>   BSR.w get1bytemain
0002DB30 <AmiBlitz3_noFPU_r470.ab3@16487>    MOVE.w (A7)+,D1
0002DB36 <AmiBlitz3_noFPU_r470.ab3@16488>    MOVE.w D1,regnum
0002DB3A <AmiBlitz3_noFPU_r470.ab3@16489>    BEQ.w JL_0_ABDE
0002DB40 <AmiBlitz3_noFPU_r470.ab3@16490>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002DB44 <AmiBlitz3_noFPU_r470.ab3@16491>    BNE 'noval
0002DB4A <AmiBlitz3_noFPU_r470.ab3@16492>    TST.b fpu
0002DB4E <AmiBlitz3_noFPU_r470.ab3@16493>    BEQ 'noval
0002DB54 <AmiBlitz3_noFPU_r470.ab3@16494>    CLR.l load_var_addr
0002DB56 <AmiBlitz3_noFPU_r470.ab3@16495>    MOVEQ #0,d1
0002DB5C <AmiBlitz3_noFPU_r470.ab3@16496>    MOVE.w regnum,d1
0002DB5E <AmiBlitz3_noFPU_r470.ab3@16497>    LSL.l #7,d1
0002DB64 <AmiBlitz3_noFPU_r470.ab3@16498>    OR.l #$f2000000,d1
0002DB68 <AmiBlitz3_noFPU_r470.ab3@16499>    BSR writelong
0002DB6C <AmiBlitz3_noFPU_r470.ab3@16500> BRA JL_0_ABDE
0002DB72 <AmiBlitz3_noFPU_r470.ab3@16504>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002DB76 <AmiBlitz3_noFPU_r470.ab3@16505>    BEQ 'quick
0002DB7A <AmiBlitz3_noFPU_r470.ab3@16506>    CMP.b #5,d2
0002DB7E <AmiBlitz3_noFPU_r470.ab3@16507>    BNE 'nofpu
0002DB84 <AmiBlitz3_noFPU_r470.ab3@16508>    TST.b fpu
0002DB88 <AmiBlitz3_noFPU_r470.ab3@16509>    BEQ 'nofpu
0002DB8E <AmiBlitz3_noFPU_r470.ab3@16514>    CLR.l load_var_addr
0002DB92 <AmiBlitz3_noFPU_r470.ab3@16515> BRA JL_0_ABDE
0002DB94 <AmiBlitz3_noFPU_r470.ab3@16518>   LSL.w #8,D1
0002DB96 <AmiBlitz3_noFPU_r470.ab3@16519>   LSL.w #1,D1
0002DB9A <AmiBlitz3_noFPU_r470.ab3@16520>   ORI.w #$2000,D1
0002DB9E <AmiBlitz3_noFPU_r470.ab3@16521>   BSR.w writeword                                          ;write move.l d0,dx
0002DBA4 <AmiBlitz3_noFPU_r470.ab3@16522>   TST.b fpu
0002DBA8 <AmiBlitz3_noFPU_r470.ab3@16523>   BEQ JL_0_ABDE
0002DBAA <AmiBlitz3_noFPU_r470.ab3@16524>   MOVEQ #0,d1
0002DBB0 <AmiBlitz3_noFPU_r470.ab3@16525>   MOVE.w regnum,d1
0002DBB2 <AmiBlitz3_noFPU_r470.ab3@16526>   LSL.l #7,d1
0002DBB8 <AmiBlitz3_noFPU_r470.ab3@16527>   OR.l #$f2000000,d1
0002DBBA <AmiBlitz3_noFPU_r470.ab3@16531>        MOVE.w (A7)+,D3
0002DBBE <AmiBlitz3_noFPU_r470.ab3@16532>        BEQ.w JL_0_ABFC
0002DBC4 <AmiBlitz3_noFPU_r470.ab3@16533>        TST.b fpu
0002DBC8 <AmiBlitz3_noFPU_r470.ab3@16534>        BEQ 'nofpu
0002DBCA <AmiBlitz3_noFPU_r470.ab3@16535>       MOVE.l d0,-(a7)
0002DBCC <AmiBlitz3_noFPU_r470.ab3@16536>        MOVE.l a0,-(a7)
0002DBD2 <AmiBlitz3_noFPU_r470.ab3@16537>        MOVE.l stacktrack,d1
0002DBD8 <AmiBlitz3_noFPU_r470.ab3@16538>        LEA fpustackbase,a0
0002DBE0 <AmiBlitz3_noFPU_r470.ab3@16539>        MOVE.w 0(a0,d1),regmask
0002DBE2 <AmiBlitz3_noFPU_r470.ab3@16540>        MOVE.l (a7)+,a0
0002DBE6 <AmiBlitz3_noFPU_r470.ab3@16541>       MOVE.w #8,d0
0002DBEA <AmiBlitz3_noFPU_r470.ab3@16544>       BEQ 'ready
0002DBF0 <AmiBlitz3_noFPU_r470.ab3@16545>       BTST d0,regmask
0002DBF4 <AmiBlitz3_noFPU_r470.ab3@16546>       BEQ 'noa7
0002DBF6 <AmiBlitz3_noFPU_r470.ab3@16547>       MOVEQ #0,d1
0002DBF8 <AmiBlitz3_noFPU_r470.ab3@16548>       MOVE.w d0,d1
0002DBFA <AmiBlitz3_noFPU_r470.ab3@16549>       SUBQ.w #1,d1
0002DBFC <AmiBlitz3_noFPU_r470.ab3@16550>       ASL #7,d1
0002DC02 <AmiBlitz3_noFPU_r470.ab3@16552>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002DC06 <AmiBlitz3_noFPU_r470.ab3@16553>       BSR writelong
0002DC0C <AmiBlitz3_noFPU_r470.ab3@16554>       SUBQ.l #2,stacktrack
0002DC0E <AmiBlitz3_noFPU_r470.ab3@16557>       SUBQ.w #1,d0
0002DC12 <AmiBlitz3_noFPU_r470.ab3@16558>       BNE 'loop
0002DC14 <AmiBlitz3_noFPU_r470.ab3@16561>       MOVE.l (a7)+,d0
0002DC1A <AmiBlitz3_noFPU_r470.ab3@16562>       SUBQ.l #2,stacktrack                                 ;int track
0002DC1E <AmiBlitz3_noFPU_r470.ab3@16565>    MOVE.w #$4CDF,D1
0002DC22 <AmiBlitz3_noFPU_r470.ab3@16566>    BSR.w writeword                                         ;write movem.l (a7)+,
0002DC24 <AmiBlitz3_noFPU_r470.ab3@16567>   MOVEQ.l #$00,D1
0002DC26 <AmiBlitz3_noFPU_r470.ab3@16568>   MOVEQ.l #$0F,D4
0002DC28 <AmiBlitz3_noFPU_r470.ab3@16571>     LSL.w #1,D3
0002DC2A <AmiBlitz3_noFPU_r470.ab3@16572>     ROXR.w #1,D1
0002DC2E <AmiBlitz3_noFPU_r470.ab3@16573>   DBF D4,JL_0_ABF0
0002DC32 <AmiBlitz3_noFPU_r470.ab3@16575>    BSR.w writeword
0002DC38 <AmiBlitz3_noFPU_r470.ab3@16576>    TST.b fast
0002DC3C <AmiBlitz3_noFPU_r470.ab3@16577>    BEQ JL_0_ABFC
0002DC42 <AmiBlitz3_noFPU_r470.ab3@16578>    TST.w regnum
0002DC46 <AmiBlitz3_noFPU_r470.ab3@16579>    BEQ JL_0_ABFC
0002DC4C <AmiBlitz3_noFPU_r470.ab3@16580>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002DC50 <AmiBlitz3_noFPU_r470.ab3@16581>    BNE 'l1
0002DC56 <AmiBlitz3_noFPU_r470.ab3@16582>    MOVE.w regnum,d1
0002DC58 <AmiBlitz3_noFPU_r470.ab3@16583>    ASL.l #8,d1
0002DC5A <AmiBlitz3_noFPU_r470.ab3@16584>    ASL.l #1,d1
0002DC5E <AmiBlitz3_noFPU_r470.ab3@16585>    OR.w #$70ff,d1
0002DC68 <AmiBlitz3_noFPU_r470.ab3@16586>    SUB.l #12,destpointer
0002DC6C <AmiBlitz3_noFPU_r470.ab3@16587>    BSR writeword
0002DC72 <AmiBlitz3_noFPU_r470.ab3@16590>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002DC76 <AmiBlitz3_noFPU_r470.ab3@16591>    BNE 'l2
0002DC7C <AmiBlitz3_noFPU_r470.ab3@16592>     MOVE.w regnum,d1
0002DC7E <AmiBlitz3_noFPU_r470.ab3@16593>     ASL.l #8,d1
0002DC80 <AmiBlitz3_noFPU_r470.ab3@16594>     ASL.l #1,d1
0002DC84 <AmiBlitz3_noFPU_r470.ab3@16595>     OR.w #$7000,d1
0002DC8E <AmiBlitz3_noFPU_r470.ab3@16596>     SUB.l #12,destpointer
0002DC92 <AmiBlitz3_noFPU_r470.ab3@16597>     BSR writeword
0002DC94 <AmiBlitz3_noFPU_r470.ab3@16601>    MOVE.w (A7)+,D2
0002DC98 <AmiBlitz3_noFPU_r470.ab3@16602>   CMP.w #$7,D2                                             ;destination var type
0002DC9C <AmiBlitz3_noFPU_r470.ab3@16603>    BNE.w JL_0_AC16
0002DCA2 <AmiBlitz3_noFPU_r470.ab3@16604>   MOVE.w putstlen,D1
0002DCA8 <AmiBlitz3_noFPU_r470.ab3@16605>   OR.w regnum,D1
0002DCAC <AmiBlitz3_noFPU_r470.ab3@16606>    BSR.w writeword
0002DCB0 <AmiBlitz3_noFPU_r470.ab3@16609> BRA.w JL_0_AF66
0002DCB4 <AmiBlitz3_noFPU_r470.ab3@16614>   MOVE.w $6(A3),D1
0002DCB8 <AmiBlitz3_noFPU_r470.ab3@16615>    BSR.w uselib
0002DCBC <AmiBlitz3_noFPU_r470.ab3@16616>    BSR.w JL_0_AD40
0002DCBE <AmiBlitz3_noFPU_r470.ab3@16617>   MOVE.l D4,D1
0002DCC0 <AmiBlitz3_noFPU_r470.ab3@16618>   MOVE.l D5,-(A7)
0002DCC4 <AmiBlitz3_noFPU_r470.ab3@16619>    BSR.w JL_0_AD38
0002DCC8 <AmiBlitz3_noFPU_r470.ab3@16620>   MOVE.w $A(A1),-(A7)
0002DCCA <AmiBlitz3_noFPU_r470.ab3@16621>   ADDQ.w #8,A3
0002DCCC <AmiBlitz3_noFPU_r470.ab3@16622>   MOVE.w (A3)+,-(A7)
0002DCCE <AmiBlitz3_noFPU_r470.ab3@16623>   MOVE.l A3,-(A7)
0002DCD2 <AmiBlitz3_noFPU_r470.ab3@16624>    BSR.w get1bytemain
0002DCD4 <AmiBlitz3_noFPU_r470.ab3@16625>   MOVE.w D0,-(A7)
0002DCD6 <AmiBlitz3_noFPU_r470.ab3@16626>   MOVEQ.l #$00,D3
0002DCDC <AmiBlitz3_noFPU_r470.ab3@16627>   JSR checka4a5
0002DCDE <AmiBlitz3_noFPU_r470.ab3@16629>   MOVE.b (A3)+,D1
0002DCE2 <AmiBlitz3_noFPU_r470.ab3@16630>    BMI.w JL_0_AC6A
0002DCE4 <AmiBlitz3_noFPU_r470.ab3@16631>   MOVEQ.l #$03,D2
0002DCE6 <AmiBlitz3_noFPU_r470.ab3@16632>   ADDQ.w #1,D3
0002DCEA <AmiBlitz3_noFPU_r470.ab3@16633>   MOVEM.l D3/A3,-(A7)
0002DCF0 <AmiBlitz3_noFPU_r470.ab3@16634>   MOVE.b funcparloop,-(a7)
0002DCF6 <AmiBlitz3_noFPU_r470.ab3@16635>   CLR.b funcparloop
0002DCFC <AmiBlitz3_noFPU_r470.ab3@16636>   MOVE.b blitzparloop,-(a7)
0002DD04 <AmiBlitz3_noFPU_r470.ab3@16637>   MOVE.b #1,blitzparloop
0002DD0A <AmiBlitz3_noFPU_r470.ab3@16638>   MOVE.l lasttoken,-(a7)
0002DD10 <AmiBlitz3_noFPU_r470.ab3@16639>   MOVE.l leftsidetype,-(a7)
0002DD16 <AmiBlitz3_noFPU_r470.ab3@16640>   MOVE.l rightsidetype,-(a7)
0002DD1A <AmiBlitz3_noFPU_r470.ab3@16641>   BSR.w peval
0002DD20 <AmiBlitz3_noFPU_r470.ab3@16642>   MOVE.l (a7)+,rightsidetype
0002DD26 <AmiBlitz3_noFPU_r470.ab3@16643>   MOVE.l (a7)+,leftsidetype
0002DD2C <AmiBlitz3_noFPU_r470.ab3@16644>   MOVE.l (a7)+,lasttoken
0002DD32 <AmiBlitz3_noFPU_r470.ab3@16645>   MOVE.b (a7)+,blitzparloop
0002DD38 <AmiBlitz3_noFPU_r470.ab3@16646>   MOVE.b (a7)+,funcparloop
0002DD3E <AmiBlitz3_noFPU_r470.ab3@16647>   SUBQ.w #4,a2offset
0002DD42 <AmiBlitz3_noFPU_r470.ab3@16648>   MOVEM.l (A7)+,D3/A3
0002DD46 <AmiBlitz3_noFPU_r470.ab3@16649>   CMP.w #$2C,D0
0002DD4A <AmiBlitz3_noFPU_r470.ab3@16650>    BEQ.w JL_0_AC40
0002DD4C <AmiBlitz3_noFPU_r470.ab3@16651>   TST.b (A3)
0002DD50 <AmiBlitz3_noFPU_r470.ab3@16652>    BPL.w syntaxerr
0002DD52 <AmiBlitz3_noFPU_r470.ab3@16655>   MOVE.w (A7)+,D1
0002DD56 <AmiBlitz3_noFPU_r470.ab3@16656>    BSR.w JL_0_AD04
0002DD58 <AmiBlitz3_noFPU_r470.ab3@16657>   MOVEA.l (A7)+,A3
0002DD5A <AmiBlitz3_noFPU_r470.ab3@16658>   SUBQ.w #1,D3
0002DD5E <AmiBlitz3_noFPU_r470.ab3@16659>    BMI.w JL_0_ACBE
0002DD60 <AmiBlitz3_noFPU_r470.ab3@16662>   TST.b (A3)+
0002DD64 <AmiBlitz3_noFPU_r470.ab3@16663>    BPL.w JL_0_AC78
0002DD66 <AmiBlitz3_noFPU_r470.ab3@16664>   SUBQ.w #1,A3
0002DD68 <AmiBlitz3_noFPU_r470.ab3@16667>     MOVEQ.l #$00,D1
0002DD6A <AmiBlitz3_noFPU_r470.ab3@16668>     MOVE.b -(A3),D1
0002DD6E <AmiBlitz3_noFPU_r470.ab3@16669>     BTST #$4,D1
0002DD72 <AmiBlitz3_noFPU_r470.ab3@16670>      BNE.w JL_0_ACAA
0002DD78 <AmiBlitz3_noFPU_r470.ab3@16671>     CMP.w regnum,D1
0002DD7C <AmiBlitz3_noFPU_r470.ab3@16672>      BCC.w JL_0_AC9E
0002DD7E <AmiBlitz3_noFPU_r470.ab3@16673>     BSET D1,D5
0002DD80 <AmiBlitz3_noFPU_r470.ab3@16674>     MOVEQ.l #$0F,D0
0002DD82 <AmiBlitz3_noFPU_r470.ab3@16675>     SUB.w D1,D0
0002DD84 <AmiBlitz3_noFPU_r470.ab3@16676>     BSET D0,D4
0002DD86 <AmiBlitz3_noFPU_r470.ab3@16679>     LSL.w #8,D1
0002DD88 <AmiBlitz3_noFPU_r470.ab3@16680>     LSL.w #1,D1
0002DD8C <AmiBlitz3_noFPU_r470.ab3@16681>     ORI.w #$201F,D1
0002DD90 <AmiBlitz3_noFPU_r470.ab3@16682>   BRA.w JL_0_ACB6
0002DD94 <AmiBlitz3_noFPU_r470.ab3@16685>     ANDI.w #$7,D1
0002DD96 <AmiBlitz3_noFPU_r470.ab3@16686>     LSL.w #8,D1
0002DD98 <AmiBlitz3_noFPU_r470.ab3@16687>     LSL.w #1,D1
0002DD9C <AmiBlitz3_noFPU_r470.ab3@16688>     ORI.w #$205F,D1
0002DDA0 <AmiBlitz3_noFPU_r470.ab3@16691>      BSR.w writeword
0002DDA4 <AmiBlitz3_noFPU_r470.ab3@16692>   DBF D3,JL_0_AC80
0002DDAA <AmiBlitz3_noFPU_r470.ab3@16695>   MOVE.w (A7)+,libjsr+2
0002DDB0 <AmiBlitz3_noFPU_r470.ab3@16696>   MOVE.w (A7)+,libbase+2
0002DDB6 <AmiBlitz3_noFPU_r470.ab3@16697>   MOVE.l libbase,D1
0002DDBA <AmiBlitz3_noFPU_r470.ab3@16698>    BSR.w writelong
0002DDC0 <AmiBlitz3_noFPU_r470.ab3@16699>   MOVE.l libjsr,D1
0002DDC4 <AmiBlitz3_noFPU_r470.ab3@16700>    BSR.w writelong
0002DDCA <AmiBlitz3_noFPU_r470.ab3@16701>   MOVE.w regnum,D1
0002DDCE <AmiBlitz3_noFPU_r470.ab3@16702>    BEQ.w JL_0_ACF4
0002DDD0 <AmiBlitz3_noFPU_r470.ab3@16703>   LSL.w #8,D1
0002DDD2 <AmiBlitz3_noFPU_r470.ab3@16704>   LSL.w #1,D1
0002DDD6 <AmiBlitz3_noFPU_r470.ab3@16705>   ORI.w #$2000,D1
0002DDDA <AmiBlitz3_noFPU_r470.ab3@16706>    BSR.w writeword
0002DDDC <AmiBlitz3_noFPU_r470.ab3@16709>   MOVE.l (A7)+,D1
0002DDE0 <AmiBlitz3_noFPU_r470.ab3@16710>    BSR.w JL_0_AD38
0002DDE6 <AmiBlitz3_noFPU_r470.ab3@16711>    JSR restorea4a5
0002DDE8 <AmiBlitz3_noFPU_r470.ab3@16712>   MOVEQ.l #$03,D2
0002DDEC <AmiBlitz3_noFPU_r470.ab3@16713>    BSR.w reget
0002DDF0 <AmiBlitz3_noFPU_r470.ab3@16714> BRA.w JL_0_AF66
0002DDF2 <AmiBlitz3_noFPU_r470.ab3@16717>   TST.w D3
0002DDF6 <AmiBlitz3_noFPU_r470.ab3@16718>    BEQ.w JL_0_AD1E
0002DDFA <AmiBlitz3_noFPU_r470.ab3@16719>   CMP.w #$28,D1
0002DDFE <AmiBlitz3_noFPU_r470.ab3@16720>    BNE.w syntaxerr
0002DE02 <AmiBlitz3_noFPU_r470.ab3@16721>   CMP.w #$29,D0
0002DE06 <AmiBlitz3_noFPU_r470.ab3@16722>    BNE.w syntaxerr
0002DE0A <AmiBlitz3_noFPU_r470.ab3@16723> BRA.w get1bytemain
0002DE0E <AmiBlitz3_noFPU_r470.ab3@16726>   CMP.w #$28,D1
0002DE12 <AmiBlitz3_noFPU_r470.ab3@16727>    BNE.w JL_0_AD36
0002DE16 <AmiBlitz3_noFPU_r470.ab3@16728>    BSR.w get1bytemain
0002DE1A <AmiBlitz3_noFPU_r470.ab3@16729>   CMP.w #$29,D0
0002DE1E <AmiBlitz3_noFPU_r470.ab3@16730>    BNE.w syntaxerr
0002DE22 <AmiBlitz3_noFPU_r470.ab3@16731> BRA.w get1bytemain
0002DE24 <AmiBlitz3_noFPU_r470.ab3@16734> RTS
0002DE26 <AmiBlitz3_noFPU_r470.ab3@16737>   TST.w D1
0002DE2A <AmiBlitz3_noFPU_r470.ab3@16738>    BNE.w writelong
0002DE2C <AmiBlitz3_noFPU_r470.ab3@16739> RTS
0002DE30 <AmiBlitz3_noFPU_r470.ab3@16743>   MOVE.w #$48E7,D4
0002DE32 <AmiBlitz3_noFPU_r470.ab3@16744>   SWAP D4
0002DE34 <AmiBlitz3_noFPU_r470.ab3@16745>   CLR.w D4
0002DE38 <AmiBlitz3_noFPU_r470.ab3@16746>   MOVE.w #$4CDF,D5
0002DE3A <AmiBlitz3_noFPU_r470.ab3@16747>   SWAP D5
0002DE3C <AmiBlitz3_noFPU_r470.ab3@16748>   CLR.w D5
0002DE42 <AmiBlitz3_noFPU_r470.ab3@16749>   MOVE.w regnum,D1
0002DE46 <AmiBlitz3_noFPU_r470.ab3@16750>    BEQ.w JL_0_AD74
0002DE4A <AmiBlitz3_noFPU_r470.ab3@16751>   BSET #$F,D4
0002DE4E <AmiBlitz3_noFPU_r470.ab3@16752>   BSET #$0,D5
0002DE52 <AmiBlitz3_noFPU_r470.ab3@16753>   CMP.w #$2,D1
0002DE56 <AmiBlitz3_noFPU_r470.ab3@16754>    BCS.w JL_0_AD72
0002DE5A <AmiBlitz3_noFPU_r470.ab3@16757>   BSET #$E,D4
0002DE5E <AmiBlitz3_noFPU_r470.ab3@16758>   BSET #$1,D5
0002DE60 <AmiBlitz3_noFPU_r470.ab3@16761> RTS
0002DE66 <AmiBlitz3_noFPU_r470.ab3@16764>   TST.w fuckpos
0002DE6A <AmiBlitz3_noFPU_r470.ab3@16765>   BNE.w JL_0_AD6A
0002DE6C <AmiBlitz3_noFPU_r470.ab3@16766> RTS
0002DE6E <AmiBlitz3_noFPU_r470.ab3@16769> fuckpos:  Ds.w 1
0002DE74 <AmiBlitz3_noFPU_r470.ab3@16773>   MOVE.w sbasegot,D1
0002DE78 <AmiBlitz3_noFPU_r470.ab3@16774>    BEQ.w makesbase__skip
0002DE7C <AmiBlitz3_noFPU_r470.ab3@16778>   MOVE.w sbgot(PC),D1
0002DE80 <AmiBlitz3_noFPU_r470.ab3@16779>    BNE.w makesbase__skip2
0002DE88 <AmiBlitz3_noFPU_r470.ab3@16783>   MOVE.w #$0002,sbgot
0002DE8E <AmiBlitz3_noFPU_r470.ab3@16784>   MOVE.w movea3a7,D1
0002DE92 <AmiBlitz3_noFPU_r470.ab3@16785> BRA.w writeword
0002DE94 <AmiBlitz3_noFPU_r470.ab3@16788> RTS
0002DE9C <AmiBlitz3_noFPU_r470.ab3@16793>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002DEA2 <AmiBlitz3_noFPU_r470.ab3@16796>   MOVE.l #$C601,D1
0002DEAA <AmiBlitz3_noFPU_r470.ab3@16797>   MOVE.w #-1,sbasegot
0002DEB0 <AmiBlitz3_noFPU_r470.ab3@16798>   MOVE.l d1,lastinstruction
0002DEB4 <AmiBlitz3_noFPU_r470.ab3@16799>   BSR.w Atokejsr
0002DEB6 <AmiBlitz3_noFPU_r470.ab3@16800> RTS
0002DEC0 <AmiBlitz3_noFPU_r470.ab3@16805>   MOVE.l data1,litdata1
0002DEC6 <AmiBlitz3_noFPU_r470.ab3@16806>   TST.b fast
0002DECA <AmiBlitz3_noFPU_r470.ab3@16807>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002DECE <AmiBlitz3_noFPU_r470.ab3@16811> BRA 'l50                                                   ;to deactivate
0002DED4 <AmiBlitz3_noFPU_r470.ab3@16817>   TST.b optistring
0002DED8 <AmiBlitz3_noFPU_r470.ab3@16818>   BNE.s 'l21
0002DEDE <AmiBlitz3_noFPU_r470.ab3@16819>   CLR.b string1
0002DEE6 <AmiBlitz3_noFPU_r470.ab3@16820>   MOVE.b #1,optistring
0002DEEC <AmiBlitz3_noFPU_r470.ab3@16821>   TST.b nostringopt
0002DEF0 <AmiBlitz3_noFPU_r470.ab3@16822>   BNE 'l21
0002DEF2 <AmiBlitz3_noFPU_r470.ab3@16823>   MOVE.l a5,a4
0002DEF4 <AmiBlitz3_noFPU_r470.ab3@16824>   SUBQ.l #1,a4
0002DEF6 <AmiBlitz3_noFPU_r470.ab3@16827>     TST.b (a4)
0002DEFA <AmiBlitz3_noFPU_r470.ab3@16828>     BMI 'l19a
0002DEFE <AmiBlitz3_noFPU_r470.ab3@16829>     BEQ.s 'l20
0002DF02 <AmiBlitz3_noFPU_r470.ab3@16830>     CMP.b #$22,(a4)
0002DF06 <AmiBlitz3_noFPU_r470.ab3@16831>     BEQ.s 'l19
0002DF0C <AmiBlitz3_noFPU_r470.ab3@16834>     TST.w string1
0002DF10 <AmiBlitz3_noFPU_r470.ab3@16835>     BNE 'l11
0002DF14 <AmiBlitz3_noFPU_r470.ab3@16836>     CMP.b #":",(a4)
0002DF18 <AmiBlitz3_noFPU_r470.ab3@16837>     BEQ.s 'l20
0002DF1C <AmiBlitz3_noFPU_r470.ab3@16838>     CMP.b #";",(a4)
0002DF20 <AmiBlitz3_noFPU_r470.ab3@16839>     BEQ.s 'l20
0002DF24 <AmiBlitz3_noFPU_r470.ab3@16840>     CMP.b #"+",(a4)
0002DF28 <AmiBlitz3_noFPU_r470.ab3@16841>     BEQ.s 'l21
0002DF2C <AmiBlitz3_noFPU_r470.ab3@16842>     CMP.b #",",(a4)
0002DF30 <AmiBlitz3_noFPU_r470.ab3@16843>     BEQ.s 'l20                                             ;was l21
0002DF34 <AmiBlitz3_noFPU_r470.ab3@16844>     CMP.b #")",(a4)
0002DF38 <AmiBlitz3_noFPU_r470.ab3@16845>     BEQ.s 'l20                                             ;was l21
0002DF3A <AmiBlitz3_noFPU_r470.ab3@16848>     ADDQ.l #1,a4
0002DF3E <AmiBlitz3_noFPU_r470.ab3@16849> BRA.s 'l10
0002DF46 <AmiBlitz3_noFPU_r470.ab3@16852>   BCHG #0,string1
0002DF4A <AmiBlitz3_noFPU_r470.ab3@16853> BRA 'l18
0002DF4C <AmiBlitz3_noFPU_r470.ab3@16856>   ADDQ.l #1,a4
0002DF4E <AmiBlitz3_noFPU_r470.ab3@16857>   TST.b (a4)
0002DF52 <AmiBlitz3_noFPU_r470.ab3@16858>   BEQ 'l21
0002DF56 <AmiBlitz3_noFPU_r470.ab3@16859> BRA 'l11
0002DF58 <AmiBlitz3_noFPU_r470.ab3@16862>   MOVE.l a5,a4
0002DF5A <AmiBlitz3_noFPU_r470.ab3@16863>   SUBQ.l #1,a4
0002DF5E <AmiBlitz3_noFPU_r470.ab3@16866>   CMP.b #$20,-(a4)
0002DF62 <AmiBlitz3_noFPU_r470.ab3@16867>   BEQ 'll1
0002DF66 <AmiBlitz3_noFPU_r470.ab3@16868>   CMP.b #"+",(a4)
0002DF6A <AmiBlitz3_noFPU_r470.ab3@16869>   BEQ 'l21
0002DF72 <AmiBlitz3_noFPU_r470.ab3@16884>   MOVE.b #2,optistring
0002DF7A <AmiBlitz3_noFPU_r470.ab3@16887>   CMP.b #2,optistring
0002DF7E <AmiBlitz3_noFPU_r470.ab3@16888>   BEQ.s 'l100
0002DF82 <AmiBlitz3_noFPU_r470.ab3@16891>   BSR.w makesbase
0002DF86 <AmiBlitz3_noFPU_r470.ab3@16892>   BSR.w pokedata1                                          ;writestringsizespace
0002DF8A <AmiBlitz3_noFPU_r470.ab3@16893>   BSR.w pokedata1
0002DF8C <AmiBlitz3_noFPU_r470.ab3@16896>   MOVEQ.l #$00,D2
0002DF92 <AmiBlitz3_noFPU_r470.ab3@16899>     MOVE.l a5,lastsourcepos
0002DF94 <AmiBlitz3_noFPU_r470.ab3@16900>     MOVEQ #0,d0
0002DF96 <AmiBlitz3_noFPU_r470.ab3@16901>     MOVE.b (a5)+,d0
0002DF98 <AmiBlitz3_noFPU_r470.ab3@16902>     TST.w D0
0002DF9C <AmiBlitz3_noFPU_r470.ab3@16903>      BEQ.w notqerr
0002DFA0 <AmiBlitz3_noFPU_r470.ab3@16904>     CMP.w #$22,D0                                          ; --- " ---
0002DFA4 <AmiBlitz3_noFPU_r470.ab3@16905>      BEQ.w JL_0_ADF6
0002DFA8 <AmiBlitz3_noFPU_r470.ab3@16906>     CMP.b #"\",d0
0002DFAC <AmiBlitz3_noFPU_r470.ab3@16907>      BNE 'l1
0002DFB0 <AmiBlitz3_noFPU_r470.ab3@16908>     CMP.b #"\",(a5)
0002DFB4 <AmiBlitz3_noFPU_r470.ab3@16909>      BNE 'l1
0002DFBA <AmiBlitz3_noFPU_r470.ab3@16910>     TST.b newsyntax
0002DFBE <AmiBlitz3_noFPU_r470.ab3@16911>      BEQ 'l1
0002DFC4 <AmiBlitz3_noFPU_r470.ab3@16912>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002DFC8 <AmiBlitz3_noFPU_r470.ab3@16913>     BNE 'l2
0002DFCA <AmiBlitz3_noFPU_r470.ab3@16914>     ADDQ #2,a5
0002DFCC <AmiBlitz3_noFPU_r470.ab3@16917>     ADDQ.w #1,D2
0002DFCE <AmiBlitz3_noFPU_r470.ab3@16918>     MOVE.w D0,D1
0002DFD2 <AmiBlitz3_noFPU_r470.ab3@16919>     BSR.w pokedata1b                                        ;writestring
0002DFD6 <AmiBlitz3_noFPU_r470.ab3@16920> BRA.w writestring
0002DFDC <AmiBlitz3_noFPU_r470.ab3@16923>     JSR check_newconstants
0002DFE0 <AmiBlitz3_noFPU_r470.ab3@16924> BRA writestring
0002DFE6 <AmiBlitz3_noFPU_r470.ab3@16927>   NOT instringon
0002DFEC <AmiBlitz3_noFPU_r470.ab3@16928>   MOVE.w dontwrite,D1
0002DFF0 <AmiBlitz3_noFPU_r470.ab3@16929>   BNE.w JL_0_AE0A
0002DFF8 <AmiBlitz3_noFPU_r470.ab3@16930>   CMP.b #2,optistring
0002DFFC <AmiBlitz3_noFPU_r470.ab3@16931>   BEQ 'l10
0002E002 <AmiBlitz3_noFPU_r470.ab3@16932>     MOVEA.l litdata1,A0
0002E004 <AmiBlitz3_noFPU_r470.ab3@16933>     CLR.w (A0)+                                            ;writesize
0002E006 <AmiBlitz3_noFPU_r470.ab3@16934>     MOVE.w D2,(A0)
0002E00A <AmiBlitz3_noFPU_r470.ab3@16938>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002E010 <AmiBlitz3_noFPU_r470.ab3@16939>   ADDQ.l #1,data1
0002E018 <AmiBlitz3_noFPU_r470.ab3@16940>   BCLR #$0,data1+3
0002E01A <AmiBlitz3_noFPU_r470.ab3@16941>   MOVEQ.l #$07,D2
0002E01E <AmiBlitz3_noFPU_r470.ab3@16942> BRA.w get1bytemain
0002E022 <AmiBlitz3_noFPU_r470.ab3@16946>   BSR.w makename2
0002E026 <AmiBlitz3_noFPU_r470.ab3@16947>   BSR.w findlabel2
0002E02A <AmiBlitz3_noFPU_r470.ab3@16948>   BEQ.w JL_0_AE4A
0002E02E <AmiBlitz3_noFPU_r470.ab3@16949>   BSR.w addlabelhash
0002E032 <AmiBlitz3_noFPU_r470.ab3@16950>   CLR.l $4(A2)
0002E036 <AmiBlitz3_noFPU_r470.ab3@16951>   CLR.l $8(A2)
0002E03E <AmiBlitz3_noFPU_r470.ab3@16953>   MOVE.w linenumat+2,$10(A2)
0002E044 <AmiBlitz3_noFPU_r470.ab3@16954>   MOVE.w linenumat,d0
0002E046 <AmiBlitz3_noFPU_r470.ab3@16955>   MOVEQ #0,d1
0002E04A <AmiBlitz3_noFPU_r470.ab3@16956>   MOVE.b -1(a2,d7),d1
0002E04E <AmiBlitz3_noFPU_r470.ab3@16957>   MOVE.w d0,0(a2,d1)
0002E052 <AmiBlitz3_noFPU_r470.ab3@16958> BRA.w JL_0_AE52
0002E056 <AmiBlitz3_noFPU_r470.ab3@16961>   TST.l $8(A2)
0002E05A <AmiBlitz3_noFPU_r470.ab3@16962>   BNE.w JL_0_AE88
0002E060 <AmiBlitz3_noFPU_r470.ab3@16965>   MOVEA.l _execbase,A6
0002E062 <AmiBlitz3_noFPU_r470.ab3@16966>   MOVEQ.l #$0C+2,D0
0002E064 <AmiBlitz3_noFPU_r470.ab3@16967>   MOVEQ.l #$01,D1
0002E06A <AmiBlitz3_noFPU_r470.ab3@16968>   MOVE.l mempool,a0
0002E06E <AmiBlitz3_noFPU_r470.ab3@16969>   JSR _AllocPooled(a6)
0002E070 <AmiBlitz3_noFPU_r470.ab3@16971>   MOVEA.l D0,A0
0002E074 <AmiBlitz3_noFPU_r470.ab3@16972>   MOVE.l $4(A2),(A0)
0002E078 <AmiBlitz3_noFPU_r470.ab3@16973>   MOVE.l A0,$4(A2)
0002E080 <AmiBlitz3_noFPU_r470.ab3@16974>   MOVE.l destpointer,$4(A0)
0002E084 <AmiBlitz3_noFPU_r470.ab3@16975>   ADDQ.l #2,$4(A0)
0002E08C <AmiBlitz3_noFPU_r470.ab3@16976>   MOVE.w procnum,$8(A0)
0002E094 <AmiBlitz3_noFPU_r470.ab3@16977>   MOVE.w linenumat+2,$A(A0)
0002E09C <AmiBlitz3_noFPU_r470.ab3@16978>   MOVE.w linenumat,$c(a0)
0002E09E <AmiBlitz3_noFPU_r470.ab3@16979> RTS
0002E0A2 <AmiBlitz3_noFPU_r470.ab3@16982>   MOVE.l $4(A2),D1
0002E0A6 <AmiBlitz3_noFPU_r470.ab3@16983>   BTST #$0,D1
0002E0AA <AmiBlitz3_noFPU_r470.ab3@16984>    BNE.w illlaberr
0002E0B0 <AmiBlitz3_noFPU_r470.ab3@16985>   MOVE.w procnum,D1
0002E0B4 <AmiBlitz3_noFPU_r470.ab3@16986>   CMP.w $10(A2),D1
0002E0B8 <AmiBlitz3_noFPU_r470.ab3@16987>    BNE.w referr
0002E0BA <AmiBlitz3_noFPU_r470.ab3@16988> RTS
0002E0BC <AmiBlitz3_noFPU_r470.ab3@16992>   MOVE.w D0,-(A7)
0002E0C4 <AmiBlitz3_noFPU_r470.ab3@16993>   CMP.b #2,optistring
0002E0C8 <AmiBlitz3_noFPU_r470.ab3@16994>   BEQ 'l10
0002E0CE <AmiBlitz3_noFPU_r470.ab3@16997>   MOVE.w numtoa0,D1
0002E0D2 <AmiBlitz3_noFPU_r470.ab3@16998>    BSR.w writeword
0002E0D6 <AmiBlitz3_noFPU_r470.ab3@16999>    BSR.w addoff
0002E0DC <AmiBlitz3_noFPU_r470.ab3@17000>   MOVE.l litdata1,D1
0002E0E0 <AmiBlitz3_noFPU_r470.ab3@17001>    BSR.w writelong
0002E0E6 <AmiBlitz3_noFPU_r470.ab3@17002>   MOVE.w pushlen,D1
0002E0EA <AmiBlitz3_noFPU_r470.ab3@17003>    BSR.w writeword
0002E0EE <AmiBlitz3_noFPU_r470.ab3@17004>   MOVE.w #$C600,D1
0002E0F2 <AmiBlitz3_noFPU_r470.ab3@17005>    BSR.w Atokejsr
0002E0F4 <AmiBlitz3_noFPU_r470.ab3@17006>   MOVE.w (A7)+,D0
0002E0F6 <AmiBlitz3_noFPU_r470.ab3@17007> RTS
0002E0F8 <AmiBlitz3_noFPU_r470.ab3@17010>   MOVEQ #0,d1
0002E0FC <AmiBlitz3_noFPU_r470.ab3@17011>   BSR.w pokedata1b
0002E102 <AmiBlitz3_noFPU_r470.ab3@17012>   MOVE.l destpointer,a4
0002E106 <AmiBlitz3_noFPU_r470.ab3@17013>   MOVE.w #$203c,d1
0002E10C <AmiBlitz3_noFPU_r470.ab3@17014>   TST.w mode
0002E110 <AmiBlitz3_noFPU_r470.ab3@17015>   BNE 'lm10
0002E116 <AmiBlitz3_noFPU_r470.ab3@17016>    ADDQ.w #4,a2offset
0002E11A <AmiBlitz3_noFPU_r470.ab3@17017>   MOVE.w #$2f3c,d1
0002E120 <AmiBlitz3_noFPU_r470.ab3@17020>   TST.w mode
0002E124 <AmiBlitz3_noFPU_r470.ab3@17021>   BEQ 'lm3
0002E12A <AmiBlitz3_noFPU_r470.ab3@17022>   MOVE.w regnum,D0
0002E12C <AmiBlitz3_noFPU_r470.ab3@17023>   LSL.w #8,D0
0002E12E <AmiBlitz3_noFPU_r470.ab3@17024>   LSL.w #1,D0
0002E130 <AmiBlitz3_noFPU_r470.ab3@17025>   OR.w d0,d1
0002E134 <AmiBlitz3_noFPU_r470.ab3@17026>   BSR writeword
0002E138 <AmiBlitz3_noFPU_r470.ab3@17027>   BSR.w addoff
0002E13E <AmiBlitz3_noFPU_r470.ab3@17028>   MOVE.l litdata1,D1
0002E142 <AmiBlitz3_noFPU_r470.ab3@17029>   BSR.w writelong
0002E14A <AmiBlitz3_noFPU_r470.ab3@17030>   CMP.w #3,mode
0002E14E <AmiBlitz3_noFPU_r470.ab3@17031>   BEQ 'l30
0002E154 <AmiBlitz3_noFPU_r470.ab3@17032>    ADDQ.w #4,a2offset
0002E158 <AmiBlitz3_noFPU_r470.ab3@17033>   MOVE.w #$4878,D1
0002E15C <AmiBlitz3_noFPU_r470.ab3@17034>   BSR.w writeword
0002E15E <AmiBlitz3_noFPU_r470.ab3@17035>   MOVE.l d2,d1
0002E162 <AmiBlitz3_noFPU_r470.ab3@17036>   BSR writeword
0002E164 <AmiBlitz3_noFPU_r470.ab3@17039>   MOVE.w (A7)+,D0
0002E166 <AmiBlitz3_noFPU_r470.ab3@17040> RTS
0002E16C <AmiBlitz3_noFPU_r470.ab3@17043>   MOVE.l #$3f3c0007,d1
0002E170 <AmiBlitz3_noFPU_r470.ab3@17044>   BSR writelong
0002E176 <AmiBlitz3_noFPU_r470.ab3@17045>   MOVE.w regnum,D1
0002E178 <AmiBlitz3_noFPU_r470.ab3@17046>   LSL.w #8,D1
0002E17A <AmiBlitz3_noFPU_r470.ab3@17047>   LSL.w #1,D1
0002E17E <AmiBlitz3_noFPU_r470.ab3@17048>   ORI.w #$2f3c,d1
0002E182 <AmiBlitz3_noFPU_r470.ab3@17049>   BSR writeword
0002E188 <AmiBlitz3_noFPU_r470.ab3@17050>    ADDQ.w #4,a2offset
0002E18A <AmiBlitz3_noFPU_r470.ab3@17051>   MOVE.l d2,d1
0002E18E <AmiBlitz3_noFPU_r470.ab3@17052>   BSR writelong
0002E192 <AmiBlitz3_noFPU_r470.ab3@17053>   MOVE.w #$2f3c,d1
0002E196 <AmiBlitz3_noFPU_r470.ab3@17054>   BSR writeword
0002E19A <AmiBlitz3_noFPU_r470.ab3@17055>   BSR.w addoff
0002E1A0 <AmiBlitz3_noFPU_r470.ab3@17056>   MOVE.l litdata1,D1
0002E1A4 <AmiBlitz3_noFPU_r470.ab3@17057>   BSR.w writelong
0002E1A6 <AmiBlitz3_noFPU_r470.ab3@17058>   MOVE.w (A7)+,D0
0002E1A8 <AmiBlitz3_noFPU_r470.ab3@17059> RTS
0002E1AC <AmiBlitz3_noFPU_r470.ab3@17063>   BSR.w get1bytemain
0002E1B0 <AmiBlitz3_noFPU_r470.ab3@17064>    BSR.w JL_0_AE22
0002E1B6 <AmiBlitz3_noFPU_r470.ab3@17065>   MOVE.w regnum,D1
0002E1B8 <AmiBlitz3_noFPU_r470.ab3@17066>   LSL.w #8,D1
0002E1BA <AmiBlitz3_noFPU_r470.ab3@17067>   LSL.w #1,D1
0002E1BE <AmiBlitz3_noFPU_r470.ab3@17068>   ORI.w #$203C,D1
0002E1C2 <AmiBlitz3_noFPU_r470.ab3@17069>    BSR.w writeword
0002E1C6 <AmiBlitz3_noFPU_r470.ab3@17070>    BSR.w addoff
0002E1CA <AmiBlitz3_noFPU_r470.ab3@17071>   MOVE.l $8(A2),D1
0002E1CE <AmiBlitz3_noFPU_r470.ab3@17072>    BSR.w writelong
0002E1D0 <AmiBlitz3_noFPU_r470.ab3@17073>   MOVEQ.l #$03,D2
0002E1D6 <AmiBlitz3_noFPU_r470.ab3@17074>   CLR.b peekaddrsize
0002E1DA <AmiBlitz3_noFPU_r470.ab3@17075> BRA.w reget
0002E1DC <AmiBlitz3_noFPU_r470.ab3@17078>   MOVEQ.l #$00,D3
0002E1E0 <AmiBlitz3_noFPU_r470.ab3@17081>   BSR.w get1bytemain
0002E1E4 <AmiBlitz3_noFPU_r470.ab3@17082>    BEQ.w syntaxerr
0002E1E8 <AmiBlitz3_noFPU_r470.ab3@17083>   CMP.w #$22,D0
0002E1EC <AmiBlitz3_noFPU_r470.ab3@17084>    BEQ.w JL_0_AF1A
0002E1EE <AmiBlitz3_noFPU_r470.ab3@17085>   LSL.l #8,D3
0002E1F0 <AmiBlitz3_noFPU_r470.ab3@17086>   MOVE.b D0,D3
0002E1F4 <AmiBlitz3_noFPU_r470.ab3@17087> BRA.w JL_0_AF02
0002E1F8 <AmiBlitz3_noFPU_r470.ab3@17090>   BSR.w get1bytemain
0002E1FC <AmiBlitz3_noFPU_r470.ab3@17091> BRA.w JL_0_B46E
0002E1FE <AmiBlitz3_noFPU_r470.ab3@17094>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E202 <AmiBlitz3_noFPU_r470.ab3@17095>    BSR.w makename2
0002E206 <AmiBlitz3_noFPU_r470.ab3@17096>    BSR.w findlabel2
0002E20A <AmiBlitz3_noFPU_r470.ab3@17097>    BEQ.w 'l10
0002E210 <AmiBlitz3_noFPU_r470.ab3@17098>    LEA ptr_parameterstore,a0
0002E216 <AmiBlitz3_noFPU_r470.ab3@17099>    CMP.b #"@",-1(a0,d2.w)
0002E21A <AmiBlitz3_noFPU_r470.ab3@17100>    BNE cnferr
0002E21E <AmiBlitz3_noFPU_r470.ab3@17101>    CLR.b -1(a0,d2.w)
0002E220 <AmiBlitz3_noFPU_r470.ab3@17102>    SUBQ.l #1,d2
0002E226 <AmiBlitz3_noFPU_r470.ab3@17103>    LEA varbase,a2
0002E22A <AmiBlitz3_noFPU_r470.ab3@17104>    BSR findvariable
0002E22E <AmiBlitz3_noFPU_r470.ab3@17105>    BNE cnferr
0002E232 <AmiBlitz3_noFPU_r470.ab3@17106>    CMP.b #"\",d0
0002E236 <AmiBlitz3_noFPU_r470.ab3@17107>    BNE 'l6
0002E23C <AmiBlitz3_noFPU_r470.ab3@17108>    ADDQ #1,lastsourcepos
0002E240 <AmiBlitz3_noFPU_r470.ab3@17109>    MOVE.l $a(a2),a2
0002E242 <AmiBlitz3_noFPU_r470.ab3@17110>    ADDQ.l #4,a2
0002E246 <AmiBlitz3_noFPU_r470.ab3@17111>    BSR.w makename2
0002E24A <AmiBlitz3_noFPU_r470.ab3@17112>    BSR findvariable2
0002E24E <AmiBlitz3_noFPU_r470.ab3@17113>    BNE cnferr
0002E252 <AmiBlitz3_noFPU_r470.ab3@17114> BRA.s 'l6                                                  ;???
0002E256 <AmiBlitz3_noFPU_r470.ab3@17117>    MOVE.w $4(a2),d3
0002E258 <AmiBlitz3_noFPU_r470.ab3@17118>    EXT.l d3
0002E25C <AmiBlitz3_noFPU_r470.ab3@17119> BRA JL_0_AF46
0002E260 <AmiBlitz3_noFPU_r470.ab3@17122>   MOVE.l $8(A2),D3
0002E268 <AmiBlitz3_noFPU_r470.ab3@17123>   CMPI.l #$1,$4(A2)
0002E26C <AmiBlitz3_noFPU_r470.ab3@17124>    BEQ.w JL_0_AF46
0002E272 <AmiBlitz3_noFPU_r470.ab3@17125>   NOT.w asmtype
0002E274 <AmiBlitz3_noFPU_r470.ab3@17128>   MOVE.w (A7)+,D2
0002E278 <AmiBlitz3_noFPU_r470.ab3@17129> BRA.w JL_0_B46E
0002E27A <AmiBlitz3_noFPU_r470.ab3@17133>   MOVE.w D2,-(A7)
0002E27E <AmiBlitz3_noFPU_r470.ab3@17134>    BSR.w getparameter
0002E282 <AmiBlitz3_noFPU_r470.ab3@17135>   CMP.w #"{",D0                                          ;test if var = function{}
0002E286 <AmiBlitz3_noFPU_r470.ab3@17136>    BEQ.w isfunction
0002E28A <AmiBlitz3_noFPU_r470.ab3@17137>    BSR.w JL_0_8E3C
0002E28E <AmiBlitz3_noFPU_r470.ab3@17139>    BSR.w calcvar                                         ;getvaroffset+type
0002E292 <AmiBlitz3_noFPU_r470.ab3@17140>    BSR.w JL_0_B150
0002E298 <AmiBlitz3_noFPU_r470.ab3@17141>    MOVE.l a2,rightsidetype
0002E29E <AmiBlitz3_noFPU_r470.ab3@17152>    TST.b typecheck
0002E2A2 <AmiBlitz3_noFPU_r470.ab3@17153>    BEQ JL_0_AF66
0002E2AC <AmiBlitz3_noFPU_r470.ab3@17154>    CMP.l #$da01,lasttoken                                  ;poke
0002E2B0 <AmiBlitz3_noFPU_r470.ab3@17155>    BEQ 'l1
0002E2BA <AmiBlitz3_noFPU_r470.ab3@17156>    CMP.l #$da02,lasttoken                                  ;peek
0002E2BE <AmiBlitz3_noFPU_r470.ab3@17157>    BNE 'l2
0002E2C6 <AmiBlitz3_noFPU_r470.ab3@17160>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E2CA <AmiBlitz3_noFPU_r470.ab3@17161>    BNE JL_0_AF66
0002E2D0 <AmiBlitz3_noFPU_r470.ab3@17162>    MOVE.b d2,peekaddrsize
0002E2D4 <AmiBlitz3_noFPU_r470.ab3@17163>    BRA JL_0_AF66
0002E2DA <AmiBlitz3_noFPU_r470.ab3@17166>   CLR.b peekaddrsize
0002E2DE <AmiBlitz3_noFPU_r470.ab3@17169>   CMP.w #$1,D2
0002E2E2 <AmiBlitz3_noFPU_r470.ab3@17170>    BNE.w JL_0_AF7C
0002E2E8 <AmiBlitz3_noFPU_r470.ab3@17171>   MOVE.w regnum,D1
0002E2EC <AmiBlitz3_noFPU_r470.ab3@17172>   ORI.w #$4880,D1
0002E2F0 <AmiBlitz3_noFPU_r470.ab3@17173>    BSR.w writeword
0002E2F2 <AmiBlitz3_noFPU_r470.ab3@17176>   MOVE.w (A7)+,D3
0002E2F6 <AmiBlitz3_noFPU_r470.ab3@17177>    BEQ.w JL_0_AF9E
0002E2FC <AmiBlitz3_noFPU_r470.ab3@17178>    MOVE.l lastinstructionaddr,a0
0002E300 <AmiBlitz3_noFPU_r470.ab3@17179>   CMP.w #$3,D3
0002E304 <AmiBlitz3_noFPU_r470.ab3@17180>    BNE.w JL_0_AF92
0002E308 <AmiBlitz3_noFPU_r470.ab3@17181>   CMP.w #$4,D2
0002E30C <AmiBlitz3_noFPU_r470.ab3@17182>    BEQ.w JL_0_AF98
0002E30E <AmiBlitz3_noFPU_r470.ab3@17185>   CMP.w D2,D3
0002E312 <AmiBlitz3_noFPU_r470.ab3@17186>    BLS.w JL_0_AF9E
0002E314 <AmiBlitz3_noFPU_r470.ab3@17189>   EXG.l D2,D3
0002E316 <AmiBlitz3_noFPU_r470.ab3@17190>   MOVE.l a0,-(a7)
0002E31C <AmiBlitz3_noFPU_r470.ab3@17191>   TST.b typecheck
0002E320 <AmiBlitz3_noFPU_r470.ab3@17192>   BEQ 'ok
0002E326 <AmiBlitz3_noFPU_r470.ab3@17193>   TST.b notypecheck
0002E32A <AmiBlitz3_noFPU_r470.ab3@17194>   BNE 'ok
0002E330 <AmiBlitz3_noFPU_r470.ab3@17195>   MOVE.l leftsidetype,a0
0002E33A <AmiBlitz3_noFPU_r470.ab3@17196>   CMP.l #0,leftsidetype
0002E33E <AmiBlitz3_noFPU_r470.ab3@17197>   BEQ 'ok
0002E346 <AmiBlitz3_noFPU_r470.ab3@17198>   CMP.l #$100,4(a0)
0002E34A <AmiBlitz3_noFPU_r470.ab3@17199>   BLE 'ok
0002E34E <AmiBlitz3_noFPU_r470.ab3@17200>   CMP.b #3,d3
0002E352 <AmiBlitz3_noFPU_r470.ab3@17201>   BEQ 'ok
0002E356 <AmiBlitz3_noFPU_r470.ab3@17202>   CMP.b #7,d3
0002E35A <AmiBlitz3_noFPU_r470.ab3@17203>   BEQ 'ok
0002E360 <AmiBlitz3_noFPU_r470.ab3@17204>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E362 <AmiBlitz3_noFPU_r470.ab3@17206>   MOVE.l (a7)+,a0
0002E366 <AmiBlitz3_noFPU_r470.ab3@17207>   BSR.w writeconvertcode         ;called from var assign
0002E36A <AmiBlitz3_noFPU_r470.ab3@17210> BRA.w reget
0002E36C <AmiBlitz3_noFPU_r470.ab3@17213>   MOVEQ.l #$00,D3
0002E372 <AmiBlitz3_noFPU_r470.ab3@17214>   MOVE.w regnum,D1
0002E376 <AmiBlitz3_noFPU_r470.ab3@17215>    BEQ.w JL_0_AFC8
0002E378 <AmiBlitz3_noFPU_r470.ab3@17216>   SUBQ.w #1,D1
0002E37A <AmiBlitz3_noFPU_r470.ab3@17219>      LSR.l #1,D3
0002E37E <AmiBlitz3_noFPU_r470.ab3@17220>      BSET #$F,D3
0002E382 <AmiBlitz3_noFPU_r470.ab3@17221>   DBF D1,JL_0_AFB0b
0002E388 <AmiBlitz3_noFPU_r470.ab3@17223>    TST.b fpu
0002E38C <AmiBlitz3_noFPU_r470.ab3@17224>    BEQ 'l1
0002E392 <AmiBlitz3_noFPU_r470.ab3@17225>    ADDQ.l #2,stacktrack                                    ;intern command
0002E394 <AmiBlitz3_noFPU_r470.ab3@17226>     MOVE.l a0,-(a7)
0002E39A <AmiBlitz3_noFPU_r470.ab3@17227>     MOVE.l stacktrack,d1
0002E3A0 <AmiBlitz3_noFPU_r470.ab3@17228>     LEA fpustackbase,a0
0002E3A4 <AmiBlitz3_noFPU_r470.ab3@17229>     CLR.w 0(a0,d1)
0002E3AA <AmiBlitz3_noFPU_r470.ab3@17230>     CLR.w regmask
0002E3AC <AmiBlitz3_noFPU_r470.ab3@17231>     MOVE.l (a7)+,a0
0002E3B0 <AmiBlitz3_noFPU_r470.ab3@17234>   MOVE.w #$48E7,D1
0002E3B4 <AmiBlitz3_noFPU_r470.ab3@17235>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E3B6 <AmiBlitz3_noFPU_r470.ab3@17236>   MOVE.w D3,D1
0002E3BA <AmiBlitz3_noFPU_r470.ab3@17237> BRA.w writeword
0002E3BC <AmiBlitz3_noFPU_r470.ab3@17242>   MOVEQ.l #$00,D3
0002E3C2 <AmiBlitz3_noFPU_r470.ab3@17243>   MOVE.w regnum,D1
0002E3C6 <AmiBlitz3_noFPU_r470.ab3@17244>    BEQ.w JL_0_AFC8
0002E3C8 <AmiBlitz3_noFPU_r470.ab3@17245>   SUBQ.w #1,D1
0002E3CA <AmiBlitz3_noFPU_r470.ab3@17248>     LSR.l #1,D3
0002E3CE <AmiBlitz3_noFPU_r470.ab3@17249>     BSET #$F,D3
0002E3D2 <AmiBlitz3_noFPU_r470.ab3@17250>   DBF D1,JL_0_AFB0
0002E3D8 <AmiBlitz3_noFPU_r470.ab3@17252>    TST.b fpu
0002E3DC <AmiBlitz3_noFPU_r470.ab3@17253>    BEQ 'l1
0002E3E2 <AmiBlitz3_noFPU_r470.ab3@17254>    ADDQ.l #2,stacktrack                                    ;intern command
0002E3E4 <AmiBlitz3_noFPU_r470.ab3@17255>     MOVE.l a0,-(a7)
0002E3EA <AmiBlitz3_noFPU_r470.ab3@17256>     MOVE.l stacktrack,d1
0002E3F0 <AmiBlitz3_noFPU_r470.ab3@17257>     LEA fpustackbase,a0
0002E3F4 <AmiBlitz3_noFPU_r470.ab3@17258>     CLR.w 0(a0,d1)
0002E3F8 <AmiBlitz3_noFPU_r470.ab3@17259>    CMP.b #5,(a3)                                           ;result float ?
0002E3FC <AmiBlitz3_noFPU_r470.ab3@17260>     BNE 'nofpu
0002E406 <AmiBlitz3_noFPU_r470.ab3@17262>     MOVE.w regnum,regnumfunc
0002E40C <AmiBlitz3_noFPU_r470.ab3@17265>   CLR.w regmask
0002E40E <AmiBlitz3_noFPU_r470.ab3@17266>     MOVE.l (a7)+,a0
0002E412 <AmiBlitz3_noFPU_r470.ab3@17269>   MOVE.w #$48E7,D1
0002E416 <AmiBlitz3_noFPU_r470.ab3@17270>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E418 <AmiBlitz3_noFPU_r470.ab3@17271>   MOVE.w D3,D1
0002E41C <AmiBlitz3_noFPU_r470.ab3@17272> BRA.w writeword
0002E41E <AmiBlitz3_noFPU_r470.ab3@17275> RTS
0002E420 <AmiBlitz3_noFPU_r470.ab3@17279>   MOVE.l D1,-(A7)
0002E424 <AmiBlitz3_noFPU_r470.ab3@17280>   MOVE.w #$4EB9,D1
0002E428 <AmiBlitz3_noFPU_r470.ab3@17281>    BSR.w writeword
0002E42C <AmiBlitz3_noFPU_r470.ab3@17282>    BSR.w addoff
0002E42E <AmiBlitz3_noFPU_r470.ab3@17283>   MOVE.l (A7)+,D1
0002E432 <AmiBlitz3_noFPU_r470.ab3@17284> BRA.w writelong
0002E436 <AmiBlitz3_noFPU_r470.ab3@17288>    BSR.w findproc                                          ;write function call
0002E43A <AmiBlitz3_noFPU_r470.ab3@17289>    BEQ 'l1
0002E440 <AmiBlitz3_noFPU_r470.ab3@17290>    TST.l unusedfunc
0002E444 <AmiBlitz3_noFPU_r470.ab3@17291>    BEQ noprocerr
0002E44A <AmiBlitz3_noFPU_r470.ab3@17293>    JSR gotoendsource
0002E452 <AmiBlitz3_noFPU_r470.ab3@17296>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E458 <AmiBlitz3_noFPU_r470.ab3@17297>   TST.l typetocast
0002E45C <AmiBlitz3_noFPU_r470.ab3@17298>   BEQ 'nocast
0002E466 <AmiBlitz3_noFPU_r470.ab3@17299>   MOVE.l typetocast,rightsidetype
0002E46C <AmiBlitz3_noFPU_r470.ab3@17300>   CLR.l typetocast
0002E46E <AmiBlitz3_noFPU_r470.ab3@17301>   MOVE.l a1,-(a7)
0002E474 <AmiBlitz3_noFPU_r470.ab3@17302>   MOVE.l rightsidetype,a1
0002E47A <AmiBlitz3_noFPU_r470.ab3@17303>   CMP.l leftsidetype,a1
0002E47E <AmiBlitz3_noFPU_r470.ab3@17304>   BEQ 'ok
0002E484 <AmiBlitz3_noFPU_r470.ab3@17305>   JMP errorconvertreturntype2
0002E486 <AmiBlitz3_noFPU_r470.ab3@17306> 'ok  MOVE.l (a7)+,a1
0002E488 <AmiBlitz3_noFPU_r470.ab3@17308>   MOVEQ.l #$00,D1
0002E48C <AmiBlitz3_noFPU_r470.ab3@17309>   MOVE.b $5(A2),D1
0002E492 <AmiBlitz3_noFPU_r470.ab3@17310>   MOVE.b d1,retmode
0002E496 <AmiBlitz3_noFPU_r470.ab3@17311>    BMI.w illprocerr
0002E49C <AmiBlitz3_noFPU_r470.ab3@17312>    MOVE.b #1,isfunc(a2)
0002E49E <AmiBlitz3_noFPU_r470.ab3@17313>   MOVE.w D1,-(A7)
0002E4A0 <AmiBlitz3_noFPU_r470.ab3@17314>   MOVEQ.l #$00,D1
0002E4A4 <AmiBlitz3_noFPU_r470.ab3@17315>   MOVE.b $4(A2),D1
0002E4A6 <AmiBlitz3_noFPU_r470.ab3@17316>   LSR.w #4,D1
0002E4AA <AmiBlitz3_noFPU_r470.ab3@17317>    BEQ.w JL_0_B006
0002E4AC <AmiBlitz3_noFPU_r470.ab3@17318>   LSL.w #2,D1
0002E4B2 <AmiBlitz3_noFPU_r470.ab3@17319>   SUB.w D1,a2offset
0002E4B6 <AmiBlitz3_noFPU_r470.ab3@17322>   CMPI.w #$7,(A7)
0002E4BA <AmiBlitz3_noFPU_r470.ab3@17323>    BNE.b JL_0_B014
0002E4BC <AmiBlitz3_noFPU_r470.ab3@17324>   MOVE.l A2,-(A7)
0002E4C0 <AmiBlitz3_noFPU_r470.ab3@17325>    BSR.w makesbase
0002E4C2 <AmiBlitz3_noFPU_r470.ab3@17326>   MOVEA.l (A7)+,A2
0002E4C8 <AmiBlitz3_noFPU_r470.ab3@17329>   MOVE.w sbasegot,-(A7)
0002E4CC <AmiBlitz3_noFPU_r470.ab3@17330>    BEQ.b JL_0_B020
0002E4D0 <AmiBlitz3_noFPU_r470.ab3@17331>    BSR.w dopusha3
0002E4D4 <AmiBlitz3_noFPU_r470.ab3@17334>   BSR.w JL_0_AFA2func
0002E4D6 <AmiBlitz3_noFPU_r470.ab3@17335>   MOVE.w D3,-(A7)
0002E4DA <AmiBlitz3_noFPU_r470.ab3@17336>   MOVE.l $E(A2),D1
0002E4DE <AmiBlitz3_noFPU_r470.ab3@17337>   TST.b $20(a2)                                            ;increase if morepar
0002E4E2 <AmiBlitz3_noFPU_r470.ab3@17338>   BNE 'no0par
0002E4E4 <AmiBlitz3_noFPU_r470.ab3@17339>   MOVE.l a5,a4
0002E4E8 <AmiBlitz3_noFPU_r470.ab3@17342>   CMP.b #$20,(a4)+
0002E4EC <AmiBlitz3_noFPU_r470.ab3@17343>   BEQ 'l1
0002E4F2 <AmiBlitz3_noFPU_r470.ab3@17344>   CMP.b #"}",-1(a4)
0002E4F6 <AmiBlitz3_noFPU_r470.ab3@17345>   BNE  'no0par
0002E4F8 <AmiBlitz3_noFPU_r470.ab3@17346>   MOVEQ #0,d0
0002E4FC <AmiBlitz3_noFPU_r470.ab3@17349>   LEA $16(A2),A1
0002E4FE <AmiBlitz3_noFPU_r470.ab3@17352>   MOVE.l d1,-(a7)
0002E500 <AmiBlitz3_noFPU_r470.ab3@17353>   MOVE.b (a1),d2
0002E502 <AmiBlitz3_noFPU_r470.ab3@17354>   MOVE.l d0,d1
0002E506 <AmiBlitz3_noFPU_r470.ab3@17355>   CMP.w #4,d2
0002E50A <AmiBlitz3_noFPU_r470.ab3@17356>   BNE 'l1b
0002E510 <AmiBlitz3_noFPU_r470.ab3@17357>   ADD.l #$203c,d1
0002E514 <AmiBlitz3_noFPU_r470.ab3@17358>   BSR writeword
0002E51A <AmiBlitz3_noFPU_r470.ab3@17359>   MOVE.l #$ffff0000,d1
0002E51E <AmiBlitz3_noFPU_r470.ab3@17360>   BSR writelong
0002E522 <AmiBlitz3_noFPU_r470.ab3@17361> BRA 'l2b
0002E528 <AmiBlitz3_noFPU_r470.ab3@17364>    TST.b fpu
0002E52C <AmiBlitz3_noFPU_r470.ab3@17365>    BNE 'l1c
0002E530 <AmiBlitz3_noFPU_r470.ab3@17366>    CMP.w #5,d2
0002E534 <AmiBlitz3_noFPU_r470.ab3@17367>    BNE 'l1c
0002E53A <AmiBlitz3_noFPU_r470.ab3@17368>    ADD.l #$203c,d1
0002E53E <AmiBlitz3_noFPU_r470.ab3@17369>    BSR writeword
0002E544 <AmiBlitz3_noFPU_r470.ab3@17370>    MOVE.l #$800000c1,d1
0002E548 <AmiBlitz3_noFPU_r470.ab3@17371>    BSR writelong
0002E54C <AmiBlitz3_noFPU_r470.ab3@17372> BRA 'l2b
0002E552 <AmiBlitz3_noFPU_r470.ab3@17375>   ADD.l #$70ff,d1
0002E556 <AmiBlitz3_noFPU_r470.ab3@17376>   BSR writeword
0002E55A <AmiBlitz3_noFPU_r470.ab3@17377>   CMP.w #7,d2
0002E55E <AmiBlitz3_noFPU_r470.ab3@17378>   BNE 'l1d
0002E564 <AmiBlitz3_noFPU_r470.ab3@17379>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E568 <AmiBlitz3_noFPU_r470.ab3@17380>   BSR writelong
0002E56A <AmiBlitz3_noFPU_r470.ab3@17381>   MOVEQ #0,d1
0002E56E <AmiBlitz3_noFPU_r470.ab3@17382>   BSR writeword
0002E574 <AmiBlitz3_noFPU_r470.ab3@17383>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002E578 <AmiBlitz3_noFPU_r470.ab3@17384>   BSR writelong
0002E57A <AmiBlitz3_noFPU_r470.ab3@17385>   MOVEQ #0,d1
0002E57E <AmiBlitz3_noFPU_r470.ab3@17386>   BSR writeword
0002E584 <AmiBlitz3_noFPU_r470.ab3@17389>   TST.b fpu                                                ; fpucheck added  tomsmart1
0002E588 <AmiBlitz3_noFPU_r470.ab3@17390>   BEQ 'l2b
0002E58E <AmiBlitz3_noFPU_r470.ab3@17391>   MOVE.l #$f23c5000,d1
0002E590 <AmiBlitz3_noFPU_r470.ab3@17392>   MOVE.l d0,d2
0002E592 <AmiBlitz3_noFPU_r470.ab3@17393>   ASR.l #2,d2
0002E594 <AmiBlitz3_noFPU_r470.ab3@17394>   ADD.l d2,d1
0002E598 <AmiBlitz3_noFPU_r470.ab3@17395>   BSR writelong
0002E59C <AmiBlitz3_noFPU_r470.ab3@17396>   MOVE.w #$ffff,d1
0002E5A0 <AmiBlitz3_noFPU_r470.ab3@17397>   BSR writeword
0002E5A2 <AmiBlitz3_noFPU_r470.ab3@17401>   MOVE.l (a7)+,d1
0002E5A4 <AmiBlitz3_noFPU_r470.ab3@17402>      ADDQ.l #1,a1
0002E5AA <AmiBlitz3_noFPU_r470.ab3@17403>      ADD.l #$0200,d0
0002E5B0 <AmiBlitz3_noFPU_r470.ab3@17404>      CMP.l #$0e00,d0
0002E5B4 <AmiBlitz3_noFPU_r470.ab3@17405>      BEQ syntaxerr
0002E5B6 <AmiBlitz3_noFPU_r470.ab3@17406>      TST.b (a1)
0002E5BA <AmiBlitz3_noFPU_r470.ab3@17407>      BNE 'again
0002E5BE <AmiBlitz3_noFPU_r470.ab3@17408> BRA 'p1
0002E5C2 <AmiBlitz3_noFPU_r470.ab3@17411>   TST.b $4(A2)
0002E5C6 <AmiBlitz3_noFPU_r470.ab3@17412>    BNE.w JL_0_B03E
0002E5CA <AmiBlitz3_noFPU_r470.ab3@17415>   BSR.w JL_0_AFCA
0002E5CE <AmiBlitz3_noFPU_r470.ab3@17416>    BSR.w get1bytemain
0002E5D2 <AmiBlitz3_noFPU_r470.ab3@17417> BRA.w JL_0_B06C
0002E5D8 <AmiBlitz3_noFPU_r470.ab3@17421>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002E5DE <AmiBlitz3_noFPU_r470.ab3@17422>   MOVE.w regnum,-(A7)
0002E5E8 <AmiBlitz3_noFPU_r470.ab3@17423>   MOVE.w regnum,regnumfunc
0002E5EA <AmiBlitz3_noFPU_r470.ab3@17426>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002E5F2 <AmiBlitz3_noFPU_r470.ab3@17427>   MOVE.b #1,funccall
0002E5F4 <AmiBlitz3_noFPU_r470.ab3@17428>   MOVEQ.l #$00,D0
0002E5F8 <AmiBlitz3_noFPU_r470.ab3@17429>   MOVE.b $4(A2),D0
0002E602 <AmiBlitz3_noFPU_r470.ab3@17430>   MOVE.w a2offset,a2offset2
0002E60A <AmiBlitz3_noFPU_r470.ab3@17431>   MOVE.b 5(a2),retmode
0002E610 <AmiBlitz3_noFPU_r470.ab3@17432>   MOVE.l a2,currentfunccall
0002E614 <AmiBlitz3_noFPU_r470.ab3@17433>   LEA $16(A2),A2
0002E61A <AmiBlitz3_noFPU_r470.ab3@17434>   CLR.w regnum
0002E620 <AmiBlitz3_noFPU_r470.ab3@17435>   CLR.w regmask
0002E626 <AmiBlitz3_noFPU_r470.ab3@17436>   MOVE.b isconstantvalue,-(a7)
0002E62C <AmiBlitz3_noFPU_r470.ab3@17437>   MOVE.b funcparloop,-(a7)
0002E634 <AmiBlitz3_noFPU_r470.ab3@17438>   MOVE.b #1,funcparloop
0002E63A <AmiBlitz3_noFPU_r470.ab3@17439>   MOVE.l rightsidetype,-(a7)
0002E640 <AmiBlitz3_noFPU_r470.ab3@17440>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002E646 <AmiBlitz3_noFPU_r470.ab3@17441>   MOVE.b blitzparloop,-(a7)
0002E64C <AmiBlitz3_noFPU_r470.ab3@17442>   CLR.b blitzparloop
0002E652 <AmiBlitz3_noFPU_r470.ab3@17443>   JSR fetchpees2
0002E658 <AmiBlitz3_noFPU_r470.ab3@17444>   MOVE.b (a7)+,blitzparloop
0002E65E <AmiBlitz3_noFPU_r470.ab3@17445>   MOVE.l (a7)+,leftsidetype
0002E664 <AmiBlitz3_noFPU_r470.ab3@17446>   MOVE.l (a7)+,rightsidetype
0002E66A <AmiBlitz3_noFPU_r470.ab3@17447>   MOVE.b (a7)+,funcparloop
0002E670 <AmiBlitz3_noFPU_r470.ab3@17448>   MOVE.b (a7)+,isconstantvalue
0002E676 <AmiBlitz3_noFPU_r470.ab3@17449>   JSR chkstak
0002E678 <AmiBlitz3_noFPU_r470.ab3@17450>   MOVE.l (A7)+,D1
0002E67C <AmiBlitz3_noFPU_r470.ab3@17466>    BTST #0,d1
0002E680 <AmiBlitz3_noFPU_r470.ab3@17467>    BNE intern1
0002E684 <AmiBlitz3_noFPU_r470.ab3@17468>    BSR.w JL_0_AFCA
0002E68A <AmiBlitz3_noFPU_r470.ab3@17490>   MOVE.w (A7)+,regnum
0002E690 <AmiBlitz3_noFPU_r470.ab3@17491>   MOVE.w (a7)+,parnum                                     ;07.2014
0002E694 <AmiBlitz3_noFPU_r470.ab3@17494>   CMP.w #"}",D0
0002E698 <AmiBlitz3_noFPU_r470.ab3@17495>    BNE.w errorbracketmiss2
0002E69A <AmiBlitz3_noFPU_r470.ab3@17496>    MOVEQ #0,d1                                            ; end of function call pars
0002E6A0 <AmiBlitz3_noFPU_r470.ab3@17497>   MOVE.w regnum,D1
0002E6A4 <AmiBlitz3_noFPU_r470.ab3@17498>    BEQ.w JL_0_B08A
0002E6AA <AmiBlitz3_noFPU_r470.ab3@17499>    TST.b fpu
0002E6AE <AmiBlitz3_noFPU_r470.ab3@17500>    BEQ 'old
0002E6B6 <AmiBlitz3_noFPU_r470.ab3@17501>    CMP.b #5,retmode
0002E6BA <AmiBlitz3_noFPU_r470.ab3@17502>    BNE 'old
0002E6BC <AmiBlitz3_noFPU_r470.ab3@17503>    ASL.l #7,d1
0002E6C2 <AmiBlitz3_noFPU_r470.ab3@17504>    OR.l #$f2000000,d1
0002E6C6 <AmiBlitz3_noFPU_r470.ab3@17505>    BSR writelong
0002E6CA <AmiBlitz3_noFPU_r470.ab3@17506> BRA JL_0_B08A
0002E6CC <AmiBlitz3_noFPU_r470.ab3@17508>  'old  LSL.w #8,D1
0002E6CE <AmiBlitz3_noFPU_r470.ab3@17509>   LSL.w #1,D1
0002E6D2 <AmiBlitz3_noFPU_r470.ab3@17510>   ORI.w #$2000,D1
0002E6D6 <AmiBlitz3_noFPU_r470.ab3@17511>    BSR.w writeword
0002E6D8 <AmiBlitz3_noFPU_r470.ab3@17514>    MOVE.w (A7)+,D3
0002E6DC <AmiBlitz3_noFPU_r470.ab3@17515>    BEQ.w JL_0_B0A8
0002E6E2 <AmiBlitz3_noFPU_r470.ab3@17516>    TST.b fpu
0002E6E6 <AmiBlitz3_noFPU_r470.ab3@17517>    BEQ 'old
0002E6E8 <AmiBlitz3_noFPU_r470.ab3@17518>    MOVE.l d0,-(a7)
0002E6EC <AmiBlitz3_noFPU_r470.ab3@17519>    MOVE.w #8,d0
0002E6EE <AmiBlitz3_noFPU_r470.ab3@17520>    MOVE.l a0,-(a7)
0002E6F4 <AmiBlitz3_noFPU_r470.ab3@17521>    MOVE.l stacktrack,d1
0002E6FA <AmiBlitz3_noFPU_r470.ab3@17522>    LEA fpustackbase,a0
0002E702 <AmiBlitz3_noFPU_r470.ab3@17523>    MOVE.w 0(a0,d1),regmask
0002E704 <AmiBlitz3_noFPU_r470.ab3@17524>    MOVE.l (a7)+,a0
0002E708 <AmiBlitz3_noFPU_r470.ab3@17527>   BEQ 'ready
0002E70E <AmiBlitz3_noFPU_r470.ab3@17528>    BTST d0,regmask
0002E712 <AmiBlitz3_noFPU_r470.ab3@17529>    BEQ 'noa7
0002E714 <AmiBlitz3_noFPU_r470.ab3@17530>    MOVEQ #0,d1
0002E716 <AmiBlitz3_noFPU_r470.ab3@17531>    MOVE.w d0,d1
0002E718 <AmiBlitz3_noFPU_r470.ab3@17532>    SUBQ.w #1,d1
0002E71A <AmiBlitz3_noFPU_r470.ab3@17533>    ASL #7,d1
0002E720 <AmiBlitz3_noFPU_r470.ab3@17535>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002E724 <AmiBlitz3_noFPU_r470.ab3@17536>    BSR writelong
0002E72A <AmiBlitz3_noFPU_r470.ab3@17537>    SUBQ.l #2,stacktrack
0002E72C <AmiBlitz3_noFPU_r470.ab3@17540>    SUBQ.w #1,d0
0002E730 <AmiBlitz3_noFPU_r470.ab3@17541>    BNE 'loop
0002E736 <AmiBlitz3_noFPU_r470.ab3@17544>   SUBQ.l #2,stacktrack                                     ;integer sub
0002E738 <AmiBlitz3_noFPU_r470.ab3@17545>   MOVE.l (a7)+,d0
0002E73C <AmiBlitz3_noFPU_r470.ab3@17548>   MOVE.w #$4CDF,D1
0002E740 <AmiBlitz3_noFPU_r470.ab3@17549>    BSR.w writeword
0002E742 <AmiBlitz3_noFPU_r470.ab3@17550>   MOVEQ.l #$00,D1
0002E744 <AmiBlitz3_noFPU_r470.ab3@17551>   MOVEQ.l #$0F,D4
0002E746 <AmiBlitz3_noFPU_r470.ab3@17554>     LSL.w #1,D3
0002E748 <AmiBlitz3_noFPU_r470.ab3@17555>     ROXR.w #1,D1
0002E74C <AmiBlitz3_noFPU_r470.ab3@17556>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002E750 <AmiBlitz3_noFPU_r470.ab3@17558>     BSR.w writeword
0002E756 <AmiBlitz3_noFPU_r470.ab3@17559>    CLR.w regnumfunc
0002E758 <AmiBlitz3_noFPU_r470.ab3@17562>   MOVE.w (A7)+,D1
0002E75C <AmiBlitz3_noFPU_r470.ab3@17563>    BEQ.b JL_0_B0D2
0002E760 <AmiBlitz3_noFPU_r470.ab3@17564>   CMPI.w #$7,(A7)
0002E764 <AmiBlitz3_noFPU_r470.ab3@17565>    BEQ.b JL_0_B0C4
0002E76A <AmiBlitz3_noFPU_r470.ab3@17566>   LEA geta3,A0
0002E770 <AmiBlitz3_noFPU_r470.ab3@17567>   LEA numtoa0,A1
0002E774 <AmiBlitz3_noFPU_r470.ab3@17568>    BSR.w pokecode
0002E778 <AmiBlitz3_noFPU_r470.ab3@17569> BRA.b JL_0_B0CE
0002E77E <AmiBlitz3_noFPU_r470.ab3@17572>   MOVE.w deca3,D1
0002E782 <AmiBlitz3_noFPU_r470.ab3@17573>    BSR.w writeword
0002E786 <AmiBlitz3_noFPU_r470.ab3@17576>   BSR.w dopulla3                                           ;fix up string base
0002E788 <AmiBlitz3_noFPU_r470.ab3@17579>   MOVE.w (A7)+,D2                                          ;what it returns!
0002E78C <AmiBlitz3_noFPU_r470.ab3@17580>   CMP.w #$7,D2
0002E790 <AmiBlitz3_noFPU_r470.ab3@17581>    BNE.w JL_0_B0EC
0002E796 <AmiBlitz3_noFPU_r470.ab3@17582>   MOVE.w putstlen,D1
0002E79C <AmiBlitz3_noFPU_r470.ab3@17583>   OR.w regnum,D1
0002E7A0 <AmiBlitz3_noFPU_r470.ab3@17584>    BSR.w writeword
0002E7A4 <AmiBlitz3_noFPU_r470.ab3@17587>   BSR.w get1bytemain
0002E7A8 <AmiBlitz3_noFPU_r470.ab3@17588> BRA.w JL_0_AF66
0002E7AA <AmiBlitz3_noFPU_r470.ab3@17592> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002E7B2 <AmiBlitz3_noFPU_r470.ab3@17597>   CMP.b #2,optistring
0002E7B6 <AmiBlitz3_noFPU_r470.ab3@17598>   BEQ fs2
0002E7BA <AmiBlitz3_noFPU_r470.ab3@17599>   BSR.w makesbase                                          ;writestringvariable
0002E7BE <AmiBlitz3_noFPU_r470.ab3@17600>   BTST #$F,D2
0002E7C2 <AmiBlitz3_noFPU_r470.ab3@17601>    BNE.w JL_0_B112
0002E7C8 <AmiBlitz3_noFPU_r470.ab3@17602>   MOVE.w D3,leaa5d3a2+2
0002E7CE <AmiBlitz3_noFPU_r470.ab3@17603>   MOVE.l leaa5d3a2,D1
0002E7D2 <AmiBlitz3_noFPU_r470.ab3@17604>    BSR.w pokela5s
0002E7D8 <AmiBlitz3_noFPU_r470.ab3@17607>   MOVE.w regnum,D1
0002E7DA <AmiBlitz3_noFPU_r470.ab3@17608>   LSL.w #8,D1
0002E7DC <AmiBlitz3_noFPU_r470.ab3@17609>   LSL.w #1,D1
0002E7E0 <AmiBlitz3_noFPU_r470.ab3@17610>   ORI.w #$7000,D1
0002E7E6 <AmiBlitz3_noFPU_r470.ab3@17611>   LEA stvarget2,A0
0002E7E8 <AmiBlitz3_noFPU_r470.ab3@17612>   MOVE.w D1,(A0)
0002E7EE <AmiBlitz3_noFPU_r470.ab3@17613>   MOVE.w regnum,D1
0002E7F4 <AmiBlitz3_noFPU_r470.ab3@17614>   ANDI.w #$FFF8,$2(A0)
0002E7F8 <AmiBlitz3_noFPU_r470.ab3@17615>   OR.w D1,$2(A0)
0002E7FE <AmiBlitz3_noFPU_r470.ab3@17616>   LEA stvarget2f,A1
0002E802 <AmiBlitz3_noFPU_r470.ab3@17617>    BSR.w pokecode
0002E806 <AmiBlitz3_noFPU_r470.ab3@17618>   MOVE.w #$C600,D1
0002E80A <AmiBlitz3_noFPU_r470.ab3@17619>    BSR.w Atokejsr
0002E80C <AmiBlitz3_noFPU_r470.ab3@17620>   MOVEQ.l #$07,D2
0002E810 <AmiBlitz3_noFPU_r470.ab3@17621> BRA.w reget
0002E816 <AmiBlitz3_noFPU_r470.ab3@17624>      TST.w stackpar
0002E81A <AmiBlitz3_noFPU_r470.ab3@17625>      BMI 'l10
0002E820 <AmiBlitz3_noFPU_r470.ab3@17626>      MOVE.l #$3f3c0007,d1
0002E826 <AmiBlitz3_noFPU_r470.ab3@17627>      ADDQ.w #2,a2offset
0002E82A <AmiBlitz3_noFPU_r470.ab3@17628>      BSR writelong
0002E82E <AmiBlitz3_noFPU_r470.ab3@17631>   MOVE.w #$4878,d1
0002E834 <AmiBlitz3_noFPU_r470.ab3@17632>      CLR.w stackpar
0002E838 <AmiBlitz3_noFPU_r470.ab3@17633>      BSR writeword
0002E83C <AmiBlitz3_noFPU_r470.ab3@17634>      MOVE.w #$0,d1
0002E840 <AmiBlitz3_noFPU_r470.ab3@17635>      BSR writeword
0002E844 <AmiBlitz3_noFPU_r470.ab3@17636>      MOVE.w #$246d,d1
0002E848 <AmiBlitz3_noFPU_r470.ab3@17637>      BSR writeword
0002E84A <AmiBlitz3_noFPU_r470.ab3@17638>      MOVE.w d3,d1
0002E84E <AmiBlitz3_noFPU_r470.ab3@17639>      BSR writeword
0002E854 <AmiBlitz3_noFPU_r470.ab3@17640>      MOVE.l #$4a926704,d1
0002E858 <AmiBlitz3_noFPU_r470.ab3@17641>      BSR writelong
0002E85E <AmiBlitz3_noFPU_r470.ab3@17642>      MOVE.l #$2eaafffc,d1
0002E862 <AmiBlitz3_noFPU_r470.ab3@17643>      BSR writelong
0002E866 <AmiBlitz3_noFPU_r470.ab3@17644>      MOVE.w #$2f0a,d1
0002E86C <AmiBlitz3_noFPU_r470.ab3@17645>      ADDQ.w #8,a2offset
0002E870 <AmiBlitz3_noFPU_r470.ab3@17646>      BSR writeword
0002E874 <AmiBlitz3_noFPU_r470.ab3@17647> BRA.w reget
0002E878 <AmiBlitz3_noFPU_r470.ab3@17650>   CMP.b #$7,D2                                             ;load basic var
0002E87C <AmiBlitz3_noFPU_r470.ab3@17651>    BEQ.w JL_0_B0F6
0002E882 <AmiBlitz3_noFPU_r470.ab3@17653>    TST.b iee
0002E886 <AmiBlitz3_noFPU_r470.ab3@17654>    BEQ 'noiee
0002E88A <AmiBlitz3_noFPU_r470.ab3@17655>    CMP.b #5,d2
0002E88E <AmiBlitz3_noFPU_r470.ab3@17656>    BNE 'noiee
0002E890 <AmiBlitz3_noFPU_r470.ab3@17657>    MOVE.l d0,-(a7)                                         ;fpu load var
0002E894 <AmiBlitz3_noFPU_r470.ab3@17658>    BTST #15,d2
0002E898 <AmiBlitz3_noFPU_r470.ab3@17659>    BEQ 'var
0002E89E <AmiBlitz3_noFPU_r470.ab3@17660>    CMP.l #$7fff,d3
0002E8A2 <AmiBlitz3_noFPU_r470.ab3@17661>    BGT 'longoffset
0002E8A8 <AmiBlitz3_noFPU_r470.ab3@17662>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002E8AA <AmiBlitz3_noFPU_r470.ab3@17663>    TST.w d3                                                ;offset =0
0002E8AE <AmiBlitz3_noFPU_r470.ab3@17664>    BNE 'offset
0002E8B4 <AmiBlitz3_noFPU_r470.ab3@17667>   MOVE.l #$f2124400,d1
0002E8B6 <AmiBlitz3_noFPU_r470.ab3@17668>    MOVEQ #0,d3
0002E8BA <AmiBlitz3_noFPU_r470.ab3@17669> BRA 'glob
0002E8C0 <AmiBlitz3_noFPU_r470.ab3@17672>   SUBQ.l #4,destpointer
0002E8C4 <AmiBlitz3_noFPU_r470.ab3@17673> BRA 'glob
0002E8CA <AmiBlitz3_noFPU_r470.ab3@17676>   TST.b fast
0002E8CE <AmiBlitz3_noFPU_r470.ab3@17677>    BEQ 'nofastload
0002E8D4 <AmiBlitz3_noFPU_r470.ab3@17678>    TST.w regnum
0002E8D8 <AmiBlitz3_noFPU_r470.ab3@17679>    BNE 'nofastload
0002E8DE <AmiBlitz3_noFPU_r470.ab3@17680>    CMP.l fp0addr,a4
0002E8E2 <AmiBlitz3_noFPU_r470.ab3@17681>    BNE 'nofastload
0002E8E8 <AmiBlitz3_noFPU_r470.ab3@17682>    MOVE.l fp0iff,d1
0002E8EE <AmiBlitz3_noFPU_r470.ab3@17683>    CMP.l firstiff,d1
0002E8F2 <AmiBlitz3_noFPU_r470.ab3@17684>    BNE 'nofastload
0002E8F8 <AmiBlitz3_noFPU_r470.ab3@17685>    MOVE.w varmode,d1
0002E8FE <AmiBlitz3_noFPU_r470.ab3@17686>    CMP.w fp0mode,d1
0002E902 <AmiBlitz3_noFPU_r470.ab3@17687>    BNE 'nofastload
0002E908 <AmiBlitz3_noFPU_r470.ab3@17688>    CMP.w fp0var,d3
0002E90C <AmiBlitz3_noFPU_r470.ab3@17689>    BNE 'nofastload
0002E910 <AmiBlitz3_noFPU_r470.ab3@17690>    BCLR #16,d2
0002E912 <AmiBlitz3_noFPU_r470.ab3@17691>    MOVE.l (a7)+,d0
0002E914 <AmiBlitz3_noFPU_r470.ab3@17692> RTS
0002E916 <AmiBlitz3_noFPU_r470.ab3@17695>    MOVEQ #0,d0
0002E91C <AmiBlitz3_noFPU_r470.ab3@17696>    MOVE.w regnum,d0
0002E922 <AmiBlitz3_noFPU_r470.ab3@17697>    CMP.l maxregs,d0
0002E926 <AmiBlitz3_noFPU_r470.ab3@17698>    BLE 'ok
0002E92C <AmiBlitz3_noFPU_r470.ab3@17699>    LEA cmplxerr,a0
0002E92E <AmiBlitz3_noFPU_r470.ab3@17700>   MOVE.l a0,-(a7)
0002E934 <AmiBlitz3_noFPU_r470.ab3@17701> JMP handle_compileerror
0002E93A <AmiBlitz3_noFPU_r470.ab3@17704>    LEA regtable,a4
0002E93C <AmiBlitz3_noFPU_r470.ab3@17705>    TST.l (a4)
0002E940 <AmiBlitz3_noFPU_r470.ab3@17706>    BEQ 'noreg
0002E944 <AmiBlitz3_noFPU_r470.ab3@17707>    CMP.w 0+4(a4),d3
0002E948 <AmiBlitz3_noFPU_r470.ab3@17708>    BNE 'doreg1
0002E94E <AmiBlitz3_noFPU_r470.ab3@17709>    MOVE.l #$f2001c00,d1
0002E954 <AmiBlitz3_noFPU_r470.ab3@17710>    MOVE.w regnum,d0
0002E956 <AmiBlitz3_noFPU_r470.ab3@17711>    ASL.w #7,d0
0002E958 <AmiBlitz3_noFPU_r470.ab3@17712>    OR.w d0,d1
0002E95C <AmiBlitz3_noFPU_r470.ab3@17713>    BSR writelong
0002E95E <AmiBlitz3_noFPU_r470.ab3@17714>    MOVE.l (a7)+,d0
0002E960 <AmiBlitz3_noFPU_r470.ab3@17715> RTS
0002E964 <AmiBlitz3_noFPU_r470.ab3@17718>   CMP.w 8+4(a4),d3
0002E968 <AmiBlitz3_noFPU_r470.ab3@17719>    BNE 'doreg2
0002E96E <AmiBlitz3_noFPU_r470.ab3@17720>    MOVE.l #$f2001800,d1
0002E974 <AmiBlitz3_noFPU_r470.ab3@17721>    MOVE.w regnum,d0
0002E976 <AmiBlitz3_noFPU_r470.ab3@17722>    ASL.w #7,d0
0002E978 <AmiBlitz3_noFPU_r470.ab3@17723>    OR.w d0,d1
0002E97C <AmiBlitz3_noFPU_r470.ab3@17724>    BSR writelong
0002E97E <AmiBlitz3_noFPU_r470.ab3@17725>    MOVE.l (a7)+,d0
0002E980 <AmiBlitz3_noFPU_r470.ab3@17726> RTS
0002E984 <AmiBlitz3_noFPU_r470.ab3@17729>   CMP.w 16+4(a4),d3
0002E988 <AmiBlitz3_noFPU_r470.ab3@17730>    BNE 'doreg3
0002E98E <AmiBlitz3_noFPU_r470.ab3@17731>    MOVE.l #$f2001400,d1
0002E994 <AmiBlitz3_noFPU_r470.ab3@17732>    MOVE.w regnum,d0
0002E996 <AmiBlitz3_noFPU_r470.ab3@17733>    ASL.w #7,d0
0002E998 <AmiBlitz3_noFPU_r470.ab3@17734>    OR.w d0,d1
0002E99C <AmiBlitz3_noFPU_r470.ab3@17735>    BSR  writelong
0002E99E <AmiBlitz3_noFPU_r470.ab3@17736>    MOVE.l (a7)+,d0
0002E9A0 <AmiBlitz3_noFPU_r470.ab3@17737> RTS
0002E9A4 <AmiBlitz3_noFPU_r470.ab3@17740>   CMP.w 24+4(a4),d3
0002E9A8 <AmiBlitz3_noFPU_r470.ab3@17741>    BNE 'doreg4
0002E9AE <AmiBlitz3_noFPU_r470.ab3@17742>    MOVE.l #$f2001000,d1
0002E9B4 <AmiBlitz3_noFPU_r470.ab3@17743>    MOVE.w regnum,d0
0002E9B6 <AmiBlitz3_noFPU_r470.ab3@17744>    ASL.w #7,d0
0002E9B8 <AmiBlitz3_noFPU_r470.ab3@17745>    OR.w d0,d1
0002E9BC <AmiBlitz3_noFPU_r470.ab3@17746>    BSR writelong
0002E9BE <AmiBlitz3_noFPU_r470.ab3@17747>    MOVE.l (a7)+,d0
0002E9C0 <AmiBlitz3_noFPU_r470.ab3@17748> RTS
0002E9C4 <AmiBlitz3_noFPU_r470.ab3@17751>    CMP.w 32+4(a4),d3
0002E9C8 <AmiBlitz3_noFPU_r470.ab3@17752>    BNE 'noreg
0002E9CE <AmiBlitz3_noFPU_r470.ab3@17753>    MOVE.l #$f2000c00,d1
0002E9D4 <AmiBlitz3_noFPU_r470.ab3@17754>    MOVE.w regnum,d0
0002E9D6 <AmiBlitz3_noFPU_r470.ab3@17755>    ASL.w #7,d0
0002E9D8 <AmiBlitz3_noFPU_r470.ab3@17756>    OR.w d0,d1
0002E9DC <AmiBlitz3_noFPU_r470.ab3@17757>    BSR writelong
0002E9DE <AmiBlitz3_noFPU_r470.ab3@17758>    MOVE.l (a7)+,d0
0002E9E0 <AmiBlitz3_noFPU_r470.ab3@17759> RTS
0002E9E6 <AmiBlitz3_noFPU_r470.ab3@17762>    MOVE.l #$f22d4400,d1                                    ;var
0002E9EC <AmiBlitz3_noFPU_r470.ab3@17763>    TST.w varmode
0002E9F0 <AmiBlitz3_noFPU_r470.ab3@17764>   BEQ 'glob
0002E9F4 <AmiBlitz3_noFPU_r470.ab3@17765>   BCLR #16,d1                                              ;local
0002E9F6 <AmiBlitz3_noFPU_r470.ab3@17768>    MOVEQ #0,d0
0002E9FC <AmiBlitz3_noFPU_r470.ab3@17769>    MOVE.w regnum,d0
0002EA00 <AmiBlitz3_noFPU_r470.ab3@17770>    CMP.w #7,d0
0002EA04 <AmiBlitz3_noFPU_r470.ab3@17771>    BLE 'ok2
0002EA0A <AmiBlitz3_noFPU_r470.ab3@17772>    LEA cmplxerr,a0
0002EA0C <AmiBlitz3_noFPU_r470.ab3@17773>   MOVE.l a0,-(a7)
0002EA12 <AmiBlitz3_noFPU_r470.ab3@17774> JMP handle_compileerror
0002EA14 <AmiBlitz3_noFPU_r470.ab3@17777>      ASL.w #7,d0
0002EA16 <AmiBlitz3_noFPU_r470.ab3@17778>    OR.l d0,d1
0002EA1E <AmiBlitz3_noFPU_r470.ab3@17779>    CMP.l #doublecheck,8(a2)
0002EA22 <AmiBlitz3_noFPU_r470.ab3@17780>    BNE 'dbl
0002EA28 <AmiBlitz3_noFPU_r470.ab3@17781>    OR.l #$00001000,d1
0002EA2C <AmiBlitz3_noFPU_r470.ab3@17784>   BSR writelong
0002EA2E <AmiBlitz3_noFPU_r470.ab3@17785>    MOVE.l (a7)+,d0
0002EA32 <AmiBlitz3_noFPU_r470.ab3@17786>    AND.w #$ff,d2
0002EA34 <AmiBlitz3_noFPU_r470.ab3@17787>    MOVE.w d3,d1
0002EA38 <AmiBlitz3_noFPU_r470.ab3@17788>    BEQ 'nooffs
0002EA3C <AmiBlitz3_noFPU_r470.ab3@17789> BRA writeword
0002EA3E <AmiBlitz3_noFPU_r470.ab3@17794> RTS
0002EA44 <AmiBlitz3_noFPU_r470.ab3@17797>   MOVE.w regnum,D1
0002EA4A <AmiBlitz3_noFPU_r470.ab3@17798>   MOVE.w d1,load_var_reg
0002EA4C <AmiBlitz3_noFPU_r470.ab3@17799>   LSL.w #8,D1
0002EA56 <AmiBlitz3_noFPU_r470.ab3@17800>   MOVE.l destpointer,load_var_addr
0002EA5C <AmiBlitz3_noFPU_r470.ab3@17801>   MOVE.w d2,load_var_size
0002EA5E <AmiBlitz3_noFPU_r470.ab3@17802>   LSL.w #1,D1
0002EA62 <AmiBlitz3_noFPU_r470.ab3@17803>   BTST #$E,D2
0002EA66 <AmiBlitz3_noFPU_r470.ab3@17804>    BNE.w JL_0_B17A
0002EA68 <AmiBlitz3_noFPU_r470.ab3@17805>   TST.b D2
0002EA6C <AmiBlitz3_noFPU_r470.ab3@17806>    BNE.w JL_0_B17E
0002EA6E <AmiBlitz3_noFPU_r470.ab3@17807>   MOVEQ.l #$03,D2
0002EA72 <AmiBlitz3_noFPU_r470.ab3@17808>   ORI.w #$200A,D1
0002EA76 <AmiBlitz3_noFPU_r470.ab3@17809> BRA.w writeword
0002EA7A <AmiBlitz3_noFPU_r470.ab3@17812>   MOVE.b #$3,D2
0002EA7E <AmiBlitz3_noFPU_r470.ab3@17815>   BTST #$F,D2
0002EA82 <AmiBlitz3_noFPU_r470.ab3@17816>    BEQ.w JL_0_B19A                                         ;loadarray
0002EA88 <AmiBlitz3_noFPU_r470.ab3@17817>    TST.b fast                                              ;lea->move xx(a2)
0002EA8C <AmiBlitz3_noFPU_r470.ab3@17818>    BEQ 'la10
0002EA92 <AmiBlitz3_noFPU_r470.ab3@17823>    CLR.l load_var_addr
0002EA96 <AmiBlitz3_noFPU_r470.ab3@17824> BRA 'la10
0002EA9E <AmiBlitz3_noFPU_r470.ab3@17826>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002EAA2 <AmiBlitz3_noFPU_r470.ab3@17827>    BNE 'la10
0002EAA8 <AmiBlitz3_noFPU_r470.ab3@17828>    TST.b optiarray
0002EAAC <AmiBlitz3_noFPU_r470.ab3@17829>    BNE 'la10
0002EAB2 <AmiBlitz3_noFPU_r470.ab3@17830>    MOVE.l destpointer,a4
0002EAB8 <AmiBlitz3_noFPU_r470.ab3@17831>    SUB.l loada,a4
0002EABC <AmiBlitz3_noFPU_r470.ab3@17832>    CMP.w #4,a4
0002EAC0 <AmiBlitz3_noFPU_r470.ab3@17833>    BEQ 'la100
0002EAC4 <AmiBlitz3_noFPU_r470.ab3@17834>    CMP.w #2,a4
0002EAC8 <AmiBlitz3_noFPU_r470.ab3@17835>    BNE 'la10
0002EACE <AmiBlitz3_noFPU_r470.ab3@17836>    MOVE.l destpointer,a4
0002EAD2 <AmiBlitz3_noFPU_r470.ab3@17837>    CMP.b #3,d2
0002EAD6 <AmiBlitz3_noFPU_r470.ab3@17838>    BCS 'la110
0002EADC <AmiBlitz3_noFPU_r470.ab3@17839>    MOVE.w #$202a,-2(a4)
0002EAE0 <AmiBlitz3_noFPU_r470.ab3@17840>    OR.w d1,-2(a4)
0002EAE6 <AmiBlitz3_noFPU_r470.ab3@17841>    MOVE.w arrayoffset,d1
0002EAEA <AmiBlitz3_noFPU_r470.ab3@17842>    BSR writeword
0002EAEE <AmiBlitz3_noFPU_r470.ab3@17843> BRA JL_0_B194
0002EAF2 <AmiBlitz3_noFPU_r470.ab3@17846>    CMP.b #2,d2
0002EAF6 <AmiBlitz3_noFPU_r470.ab3@17847>    BNE 'la120
0002EAFC <AmiBlitz3_noFPU_r470.ab3@17848>     MOVE.w #$302a,-2(a4)
0002EB00 <AmiBlitz3_noFPU_r470.ab3@17849>    OR.w d1,-2(a4)
0002EB06 <AmiBlitz3_noFPU_r470.ab3@17851>    MOVE.w arrayoffset,d1
0002EB0A <AmiBlitz3_noFPU_r470.ab3@17852>    BSR writeword
0002EB0E <AmiBlitz3_noFPU_r470.ab3@17853> BRA JL_0_B194
0002EB12 <AmiBlitz3_noFPU_r470.ab3@17856>   CMP.b #1,d2
0002EB16 <AmiBlitz3_noFPU_r470.ab3@17857>    BNE.s 'la10
0002EB1C <AmiBlitz3_noFPU_r470.ab3@17858>     MOVE.w #$102a,-2(a4)
0002EB20 <AmiBlitz3_noFPU_r470.ab3@17859>    OR.w d1,-2(a4)
0002EB26 <AmiBlitz3_noFPU_r470.ab3@17860>    MOVE.w arrayoffset,d1
0002EB2A <AmiBlitz3_noFPU_r470.ab3@17861>    BSR writeword
0002EB2E <AmiBlitz3_noFPU_r470.ab3@17862> BRA JL_0_B194
0002EB34 <AmiBlitz3_noFPU_r470.ab3@17865>   MOVE.l destpointer,a4
0002EB3A <AmiBlitz3_noFPU_r470.ab3@17866>    CMP.w #$45ea,-2(a4)
0002EB3E <AmiBlitz3_noFPU_r470.ab3@17867>    BNE 'la10
0002EB42 <AmiBlitz3_noFPU_r470.ab3@17868>    CMP.b #3,d2
0002EB46 <AmiBlitz3_noFPU_r470.ab3@17869>    BCS 'la11
0002EB4C <AmiBlitz3_noFPU_r470.ab3@17870>    MOVE.w #$202a,-4(a4)
0002EB50 <AmiBlitz3_noFPU_r470.ab3@17871>    OR.w d1,-4(a4)
0002EB54 <AmiBlitz3_noFPU_r470.ab3@17872> BRA JL_0_B194
0002EB58 <AmiBlitz3_noFPU_r470.ab3@17875>    CMP.b #2,d2
0002EB5C <AmiBlitz3_noFPU_r470.ab3@17876>    BNE 'la12
0002EB62 <AmiBlitz3_noFPU_r470.ab3@17877>     MOVE.w #$302a,-4(a4)
0002EB66 <AmiBlitz3_noFPU_r470.ab3@17878>    OR.w d1,-4(a4)
0002EB6A <AmiBlitz3_noFPU_r470.ab3@17879> BRA JL_0_B194
0002EB6E <AmiBlitz3_noFPU_r470.ab3@17882>   CMP.b #1,d2
0002EB72 <AmiBlitz3_noFPU_r470.ab3@17883>    BNE.s 'la10
0002EB78 <AmiBlitz3_noFPU_r470.ab3@17884>     MOVE.w #$102a,-4(a4)
0002EB7C <AmiBlitz3_noFPU_r470.ab3@17885>    OR.w d1,-4(a4)
0002EB80 <AmiBlitz3_noFPU_r470.ab3@17886> BRA JL_0_B194
0002EB86 <AmiBlitz3_noFPU_r470.ab3@17889>    OR.w movea2dn,D1
0002EB8A <AmiBlitz3_noFPU_r470.ab3@17890>    BSR.w JL_0_B1B2
0002EB8E <AmiBlitz3_noFPU_r470.ab3@17891>    BSR.w writeword
0002EB92 <AmiBlitz3_noFPU_r470.ab3@17894>   ANDI.w #$FF,D2
0002EB94 <AmiBlitz3_noFPU_r470.ab3@17895> RTS
0002EB9A <AmiBlitz3_noFPU_r470.ab3@17899>    MOVE.l destpointer,a4
0002EBA2 <AmiBlitz3_noFPU_r470.ab3@17900>    MOVE.l #$f22a4400,-4(a4)
0002EBA8 <AmiBlitz3_noFPU_r470.ab3@17901>    MOVE.w arrayoffset,d1
0002EBAC <AmiBlitz3_noFPU_r470.ab3@17902> BRA writeword
0002EBB2 <AmiBlitz3_noFPU_r470.ab3@17906>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002EBB6 <AmiBlitz3_noFPU_r470.ab3@17907>    BSR.w JL_0_B1B2
0002EBBA <AmiBlitz3_noFPU_r470.ab3@17908>    BSR.w pokewda5s
0002EBBC <AmiBlitz3_noFPU_r470.ab3@17909>   MOVE.w D3,D1
0002EBC0 <AmiBlitz3_noFPU_r470.ab3@17910>    BSR.w writeword
0002EBC4 <AmiBlitz3_noFPU_r470.ab3@17911> BRA.w JL_0_B194
0002EBC8 <AmiBlitz3_noFPU_r470.ab3@17914>   BTST #$E,D2
0002EBCC <AmiBlitz3_noFPU_r470.ab3@17915>    BNE.w JL_0_B1CA
0002EBD0 <AmiBlitz3_noFPU_r470.ab3@17916>   CMP.b #$1,D2
0002EBD4 <AmiBlitz3_noFPU_r470.ab3@17917>    BEQ.w JL_0_B1CC
0002EBD8 <AmiBlitz3_noFPU_r470.ab3@17918>   CMP.b #$2,D2
0002EBDC <AmiBlitz3_noFPU_r470.ab3@17919>    BEQ.w JL_0_B1D2
0002EBDE <AmiBlitz3_noFPU_r470.ab3@17922> RTS
0002EBE2 <AmiBlitz3_noFPU_r470.ab3@17925>   EORI.w #$3000,D1
0002EBE4 <AmiBlitz3_noFPU_r470.ab3@17926> RTS
0002EBE8 <AmiBlitz3_noFPU_r470.ab3@17929>   ORI.w #$1000,D1
0002EBEA <AmiBlitz3_noFPU_r470.ab3@17930> RTS
0002EBF2 <AmiBlitz3_noFPU_r470.ab3@17934>   MOVE.w #$FFFF,dfetch
0002EBF6 <AmiBlitz3_noFPU_r470.ab3@17935>   BSR.w get1bytemain
0002EBFA <AmiBlitz3_noFPU_r470.ab3@17936>   CMP.w #$2D,D0
0002EBFE <AmiBlitz3_noFPU_r470.ab3@17937>    BNE.w JL_0_B206
0002EC02 <AmiBlitz3_noFPU_r470.ab3@17938>   BSR.w get1bytemain
0002EC06 <AmiBlitz3_noFPU_r470.ab3@17939>   BSR.w JL_0_B206
0002EC0A <AmiBlitz3_noFPU_r470.ab3@17940>   CMP.w #$5,D2
0002EC0E <AmiBlitz3_noFPU_r470.ab3@17941>    BCC.w JL_0_B200
0002EC10 <AmiBlitz3_noFPU_r470.ab3@17942>   NEG.l D0
0002EC12 <AmiBlitz3_noFPU_r470.ab3@17943> RTS
0002EC18 <AmiBlitz3_noFPU_r470.ab3@17946>   TST.b fpu
0002EC1C <AmiBlitz3_noFPU_r470.ab3@17947>   BEQ 'noneg
0002EC20 <AmiBlitz3_noFPU_r470.ab3@17948>   fneg.x fp0
0002EC22 <AmiBlitz3_noFPU_r470.ab3@17949> RTS
0002EC26 <AmiBlitz3_noFPU_r470.ab3@17952>   BCHG #$7,D0
0002EC28 <AmiBlitz3_noFPU_r470.ab3@17953> RTS
0002EC2C <AmiBlitz3_noFPU_r470.ab3@17956>   CMP.w #$24,D0
0002EC30 <AmiBlitz3_noFPU_r470.ab3@17957>    BEQ.w get_hexconstant
0002EC34 <AmiBlitz3_noFPU_r470.ab3@17958>   CMP.w #$25,D0
0002EC38 <AmiBlitz3_noFPU_r470.ab3@17959>    BEQ.w JL_0_A8C0
0002EC3C <AmiBlitz3_noFPU_r470.ab3@17960>   CMP.w #$2E,D0
0002EC40 <AmiBlitz3_noFPU_r470.ab3@17961>    BNE.w JL_0_B224
0002EC42 <AmiBlitz3_noFPU_r470.ab3@17964>   MOVEQ.l #$00,D3
0002EC46 <AmiBlitz3_noFPU_r470.ab3@17965> BRA.w JL_0_B272
0002EC48 <AmiBlitz3_noFPU_r470.ab3@17968>   MOVEQ.l #$00,D3                                          ;number
0002EC4C <AmiBlitz3_noFPU_r470.ab3@17969>    BSR.w atoi
0002EC50 <AmiBlitz3_noFPU_r470.ab3@17970>   CMP.w #$2E,D0
0002EC54 <AmiBlitz3_noFPU_r470.ab3@17971>    BEQ.w JL_0_B268
0002EC58 <AmiBlitz3_noFPU_r470.ab3@17972>   ORI.w #$20,D0
0002EC5C <AmiBlitz3_noFPU_r470.ab3@17973>   CMP.w #$65,D0
0002EC60 <AmiBlitz3_noFPU_r470.ab3@17974>    BNE.w JL_0_B46E
0002EC66 <AmiBlitz3_noFPU_r470.ab3@17975>   CMP.l #$800000,D3
0002EC6A <AmiBlitz3_noFPU_r470.ab3@17976>    BCC.w overerr
0002EC6C <AmiBlitz3_noFPU_r470.ab3@17977>   MOVEQ.l #-$01,D6
0002EC70 <AmiBlitz3_noFPU_r470.ab3@17978>   fmove.l d3,fp0
0002EC72 <AmiBlitz3_noFPU_r470.ab3@17979>   MOVE.l D3,D0
0002EC78 <AmiBlitz3_noFPU_r470.ab3@17980>   MOVEA.l _mathffpbase,A6
0002EC7C <AmiBlitz3_noFPU_r470.ab3@17981>    JSR -$24(A6)
0002EC7E <AmiBlitz3_noFPU_r470.ab3@17982>   MOVE.l D0,D3
0002EC82 <AmiBlitz3_noFPU_r470.ab3@17983>    BSR.w JL_0_B2E6
0002EC86 <AmiBlitz3_noFPU_r470.ab3@17984>    BSR.w reget
0002EC8A <AmiBlitz3_noFPU_r470.ab3@17985>    BSR.w JL_0_B480
0002EC8E <AmiBlitz3_noFPU_r470.ab3@17986> BRA.w JL_0_B3DC
0002EC92 <AmiBlitz3_noFPU_r470.ab3@17989>   CMP.b #4,d2
0002EC96 <AmiBlitz3_noFPU_r470.ab3@17990>   BEQ 'l4
0002EC9A <AmiBlitz3_noFPU_r470.ab3@17991>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002ECA0 <AmiBlitz3_noFPU_r470.ab3@17994>    TST.b fpu
0002ECA4 <AmiBlitz3_noFPU_r470.ab3@17995>    BNE 'l1
0002ECAA <AmiBlitz3_noFPU_r470.ab3@17996>    CMP.l #$800000,D3
0002ECAE <AmiBlitz3_noFPU_r470.ab3@17997>    BCC.w overerr
0002ECB2 <AmiBlitz3_noFPU_r470.ab3@17998> BRA JL_0_B272
0002ECB8 <AmiBlitz3_noFPU_r470.ab3@18001>   CMP.l #$7fffffff,d3
0002ECBC <AmiBlitz3_noFPU_r470.ab3@18002>     BCC.w overerr
0002ECBE <AmiBlitz3_noFPU_r470.ab3@18005>   MOVEQ.l #-$01,D6
0002ECC0 <AmiBlitz3_noFPU_r470.ab3@18006>   MOVE.l D3,D0
0002ECC4 <AmiBlitz3_noFPU_r470.ab3@18007>   fmove.l d3,fp0
0002ECCA <AmiBlitz3_noFPU_r470.ab3@18008>   MOVEA.l _mathffpbase,A6
0002ECCE <AmiBlitz3_noFPU_r470.ab3@18009>    JSR -$24(A6)                                            ;integer to ffp
0002ECD0 <AmiBlitz3_noFPU_r470.ab3@18010>   MOVE.l D0,-(A7)
0002ECD4 <AmiBlitz3_noFPU_r470.ab3@18011>    BSR.w get1bytemain
0002ECD8 <AmiBlitz3_noFPU_r470.ab3@18012>    BSR.w tstnum
0002ECDC <AmiBlitz3_noFPU_r470.ab3@18013>    BNE.w syntaxerr
0002ECDE <AmiBlitz3_noFPU_r470.ab3@18014>   MOVEQ.l #$00,D3
0002ECE2 <AmiBlitz3_noFPU_r470.ab3@18015>    BSR.w atoi
0002ECE4 <AmiBlitz3_noFPU_r470.ab3@18016>   TST.l D3
0002ECE8 <AmiBlitz3_noFPU_r470.ab3@18017>    BEQ.w JL_0_B2E0
0002ECEE <AmiBlitz3_noFPU_r470.ab3@18018>   TST.b fpu
0002ECF2 <AmiBlitz3_noFPU_r470.ab3@18019>   BNE 'l1
0002ECF8 <AmiBlitz3_noFPU_r470.ab3@18020>   CMP.l #$800000,D3
0002ECFC <AmiBlitz3_noFPU_r470.ab3@18021>    BCC.w overerr
0002ED00 <AmiBlitz3_noFPU_r470.ab3@18022> BRA 'l2
0002ED06 <AmiBlitz3_noFPU_r470.ab3@18025>   CMP.l #$7fffffff,d3
0002ED0A <AmiBlitz3_noFPU_r470.ab3@18026>   BCC overerr
0002ED0E <AmiBlitz3_noFPU_r470.ab3@18029>   fmove.l d5,fp1
0002ED10 <AmiBlitz3_noFPU_r470.ab3@18030>   MOVE.l D5,D0
0002ED14 <AmiBlitz3_noFPU_r470.ab3@18031>    JSR -$24(A6)
0002ED16 <AmiBlitz3_noFPU_r470.ab3@18032>   MOVE.l D0,D5
0002ED1A <AmiBlitz3_noFPU_r470.ab3@18033>   fmove.l d3,fp2
0002ED1C <AmiBlitz3_noFPU_r470.ab3@18034>   MOVE.l D3,D0
0002ED20 <AmiBlitz3_noFPU_r470.ab3@18035>    JSR -$24(A6)
0002ED24 <AmiBlitz3_noFPU_r470.ab3@18036>   fdiv.x fp1,fp2
0002ED26 <AmiBlitz3_noFPU_r470.ab3@18037>   MOVE.l D5,D1
0002ED2A <AmiBlitz3_noFPU_r470.ab3@18038>    JSR -$54(A6)
0002ED2E <AmiBlitz3_noFPU_r470.ab3@18039>   fadd.x fp2,fp0
0002ED30 <AmiBlitz3_noFPU_r470.ab3@18040>   MOVE.l (A7)+,D1
0002ED34 <AmiBlitz3_noFPU_r470.ab3@18041>    JSR -$42(A6)
0002ED36 <AmiBlitz3_noFPU_r470.ab3@18042>   MOVE.l D0,D3
0002ED3A <AmiBlitz3_noFPU_r470.ab3@18043>    BSR.w reget
0002ED3E <AmiBlitz3_noFPU_r470.ab3@18044>   ORI.w #$20,D0
0002ED42 <AmiBlitz3_noFPU_r470.ab3@18045>   CMP.w #$65,D0
0002ED46 <AmiBlitz3_noFPU_r470.ab3@18046>    BNE.w JL_0_B2D4
0002ED4A <AmiBlitz3_noFPU_r470.ab3@18047>    BSR.w JL_0_B2E6
0002ED4E <AmiBlitz3_noFPU_r470.ab3@18050>    BSR.w reget
0002ED52 <AmiBlitz3_noFPU_r470.ab3@18051>    BSR.w JL_0_B480
0002ED56 <AmiBlitz3_noFPU_r470.ab3@18052> BRA.w JL_0_B3DC
0002ED58 <AmiBlitz3_noFPU_r470.ab3@18055>   MOVE.l (A7)+,D3
0002ED5C <AmiBlitz3_noFPU_r470.ab3@18056> BRA.w JL_0_B2D4
0002ED60 <AmiBlitz3_noFPU_r470.ab3@18059>   BSR.w get1bytemain
0002ED64 <AmiBlitz3_noFPU_r470.ab3@18060>   CMP.w #$2B,D0
0002ED68 <AmiBlitz3_noFPU_r470.ab3@18061>    BEQ.w JL_0_B30E
0002ED6C <AmiBlitz3_noFPU_r470.ab3@18062>   CMP.w #$2D,D0
0002ED70 <AmiBlitz3_noFPU_r470.ab3@18063>    BNE.w JL_0_B312
0002ED74 <AmiBlitz3_noFPU_r470.ab3@18064>    BSR.w get1bytemain
0002ED78 <AmiBlitz3_noFPU_r470.ab3@18065>    BSR.w getsign
0002ED7A <AmiBlitz3_noFPU_r470.ab3@18066>   MOVE.l D3,D0
0002ED7E <AmiBlitz3_noFPU_r470.ab3@18067>   fdiv.x fp1,fp0
0002ED80 <AmiBlitz3_noFPU_r470.ab3@18068>   MOVE.l D4,D1
0002ED84 <AmiBlitz3_noFPU_r470.ab3@18069>    JSR -$54(A6)
0002ED86 <AmiBlitz3_noFPU_r470.ab3@18070>   MOVE.l D0,D3
0002ED88 <AmiBlitz3_noFPU_r470.ab3@18071> RTS
0002ED8C <AmiBlitz3_noFPU_r470.ab3@18074>   BSR.w get1bytemain
0002ED90 <AmiBlitz3_noFPU_r470.ab3@18077>   BSR.w getsign
0002ED94 <AmiBlitz3_noFPU_r470.ab3@18078>   fmul.x fp1,fp0
0002ED96 <AmiBlitz3_noFPU_r470.ab3@18079>   MOVE.l D3,D0
0002ED98 <AmiBlitz3_noFPU_r470.ab3@18080>   MOVE.l D4,D1
0002ED9C <AmiBlitz3_noFPU_r470.ab3@18081>    JSR -$4E(A6)
0002ED9E <AmiBlitz3_noFPU_r470.ab3@18082>   MOVE.l D0,D3
0002EDA0 <AmiBlitz3_noFPU_r470.ab3@18083> RTS
0002EDA4 <AmiBlitz3_noFPU_r470.ab3@18086>   BSR.w tstnum
0002EDA8 <AmiBlitz3_noFPU_r470.ab3@18087>    BNE.w syntaxerr
0002EDAA <AmiBlitz3_noFPU_r470.ab3@18088>   MOVE.w D0,D4
0002EDAE <AmiBlitz3_noFPU_r470.ab3@18089>   SUBI.w #$30,D4
0002EDB2 <AmiBlitz3_noFPU_r470.ab3@18090>    BSR.w get1bytemain
0002EDB6 <AmiBlitz3_noFPU_r470.ab3@18091>    BSR.w tstnum
0002EDBA <AmiBlitz3_noFPU_r470.ab3@18092>    BNE.w getsign__skip
0002EDBE <AmiBlitz3_noFPU_r470.ab3@18093>   MULU #$A,D4
0002EDC2 <AmiBlitz3_noFPU_r470.ab3@18094>   SUBI.w #$30,D0
0002EDC4 <AmiBlitz3_noFPU_r470.ab3@18095>   ADD.w D0,D4
0002EDC8 <AmiBlitz3_noFPU_r470.ab3@18096>    BSR.w get1bytemain
0002EDCC <AmiBlitz3_noFPU_r470.ab3@18099>   CMP.w #$12,D4
0002EDD0 <AmiBlitz3_noFPU_r470.ab3@18100>    BHI.w overerr
0002EDD2 <AmiBlitz3_noFPU_r470.ab3@18101>   LSL.w #3,D4
0002EDD8 <AmiBlitz3_noFPU_r470.ab3@18102>   LEA fputab,a0
0002EDDA <AmiBlitz3_noFPU_r470.ab3@18103>   ADD.l d4,a0
0002EDE0 <AmiBlitz3_noFPU_r470.ab3@18104>   fmove.d 0(a0),fp1
0002EDE2 <AmiBlitz3_noFPU_r470.ab3@18105>   LSR.w #1,d4
0002EDE6 <AmiBlitz3_noFPU_r470.ab3@18106>   MOVE.l facts(PC,D4.W),D4
0002EDE8 <AmiBlitz3_noFPU_r470.ab3@18107> RTS
0002EE30 <AmiBlitz3_noFPU_r470.ab3@18111>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002EE34 <AmiBlitz3_noFPU_r470.ab3@18116>   Dc.l $80000041
0002EE38 <AmiBlitz3_noFPU_r470.ab3@18117>   Dc.l $A0000044
0002EE3C <AmiBlitz3_noFPU_r470.ab3@18118>   Dc.l $C8000047
0002EE40 <AmiBlitz3_noFPU_r470.ab3@18119>   Dc.l $FA00004A
0002EE44 <AmiBlitz3_noFPU_r470.ab3@18120>   Dc.l $9C40004E
0002EE48 <AmiBlitz3_noFPU_r470.ab3@18121>   Dc.l $C3500051
0002EE4C <AmiBlitz3_noFPU_r470.ab3@18122>   Dc.l $F4240054
0002EE50 <AmiBlitz3_noFPU_r470.ab3@18123>   Dc.l $98968058
0002EE54 <AmiBlitz3_noFPU_r470.ab3@18124>   Dc.l $BEBC205B
0002EE58 <AmiBlitz3_noFPU_r470.ab3@18125>   Dc.l $EE6B285E
0002EE5C <AmiBlitz3_noFPU_r470.ab3@18126>   Dc.l $9502F962
0002EE60 <AmiBlitz3_noFPU_r470.ab3@18127>   Dc.l $BA43B765
0002EE64 <AmiBlitz3_noFPU_r470.ab3@18128>   Dc.l $E8D4A568
0002EE68 <AmiBlitz3_noFPU_r470.ab3@18129>   Dc.l $9184E76C
0002EE6C <AmiBlitz3_noFPU_r470.ab3@18130>   Dc.l $B5E6A96F
0002EE70 <AmiBlitz3_noFPU_r470.ab3@18131>   Dc.l $E35F2972
0002EE74 <AmiBlitz3_noFPU_r470.ab3@18132>   Dc.l $8E1BCA76
0002EE78 <AmiBlitz3_noFPU_r470.ab3@18133>   Dc.l $B1A2BD79
0002EE7C <AmiBlitz3_noFPU_r470.ab3@18134>   Dc.l $DE0B6C7C
0002EE7E <AmiBlitz3_noFPU_r470.ab3@18138>   MOVEQ.l #$01,D5
0002EE80 <AmiBlitz3_noFPU_r470.ab3@18141>   LSL.l #1,D5
0002EE82 <AmiBlitz3_noFPU_r470.ab3@18142>   MOVE.l D5,D1
0002EE84 <AmiBlitz3_noFPU_r470.ab3@18143>   LSL.l #2,D5
0002EE86 <AmiBlitz3_noFPU_r470.ab3@18144>   ADD.l D1,D5                                              ;divisor for frac convert!
0002EE88 <AmiBlitz3_noFPU_r470.ab3@18145>   LSL.l #1,D3
0002EE8C <AmiBlitz3_noFPU_r470.ab3@18146>    BCS.w overerr
0002EE8E <AmiBlitz3_noFPU_r470.ab3@18147>   MOVE.l D3,D1
0002EE90 <AmiBlitz3_noFPU_r470.ab3@18148>   LSL.l #1,D3
0002EE94 <AmiBlitz3_noFPU_r470.ab3@18149>    BCS.w overerr
0002EE96 <AmiBlitz3_noFPU_r470.ab3@18150>   LSL.l #1,D3
0002EE9A <AmiBlitz3_noFPU_r470.ab3@18151>    BCS.w overerr
0002EE9C <AmiBlitz3_noFPU_r470.ab3@18152>   ADD.l D1,D3
0002EEA0 <AmiBlitz3_noFPU_r470.ab3@18153>   SUBI.w #$30,D0
0002EEA2 <AmiBlitz3_noFPU_r470.ab3@18154>   ADD.l D0,D3
0002EECE <AmiBlitz3_noFPU_r470.ab3@18155>    !fget                                                   ;bsr.w get1bytemain
0002EED2 <AmiBlitz3_noFPU_r470.ab3@18156>    CMP.b #1,d0
0002EED6 <AmiBlitz3_noFPU_r470.ab3@18157>    BNE 'cm1
0002EED8 <AmiBlitz3_noFPU_r470.ab3@18158>    SUBQ.l #1,a5
0002EEDC <AmiBlitz3_noFPU_r470.ab3@18159>    BSR get1bytemain                                        ;??wy not !fget
0002EEE0 <AmiBlitz3_noFPU_r470.ab3@18162>   CMP.b #$7e,d0
0002EEE4 <AmiBlitz3_noFPU_r470.ab3@18163>    BNE 'cm2
0002EEE6 <AmiBlitz3_noFPU_r470.ab3@18164>    SUBQ.l #1,a5
0002EEEA <AmiBlitz3_noFPU_r470.ab3@18165>    BSR get1bytemain
0002EEEC <AmiBlitz3_noFPU_r470.ab3@18168>   TST.b d0
0002EEF0 <AmiBlitz3_noFPU_r470.ab3@18169>    BPL 'l10
0002EEF2 <AmiBlitz3_noFPU_r470.ab3@18170>    LSL.w #8,d0
0002EEF4 <AmiBlitz3_noFPU_r470.ab3@18171>    MOVE.b (a5)+,d0
0002EEFA <AmiBlitz3_noFPU_r470.ab3@18172>    MOVE.w d0,lastchar
0002EF0C <AmiBlitz3_noFPU_r470.ab3@18175>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002EF10 <AmiBlitz3_noFPU_r470.ab3@18176>    BEQ.w atoi__loop
0002EF12 <AmiBlitz3_noFPU_r470.ab3@18177> RTS
0002EF14 <AmiBlitz3_noFPU_r470.ab3@18180> dfetch:  Ds.w 1                                            ;fetching data?
0002EF18 <AmiBlitz3_noFPU_r470.ab3@18184>   MOVE.w dfetch(PC),D1
0002EF1C <AmiBlitz3_noFPU_r470.ab3@18185>    BEQ.w JL_0_B3EC
0002EF22 <AmiBlitz3_noFPU_r470.ab3@18186>   CLR.w dfetch
0002EF24 <AmiBlitz3_noFPU_r470.ab3@18187> RTS
0002EF2A <AmiBlitz3_noFPU_r470.ab3@18190>   MOVE.b d2,isconstantvalue
0002EF30 <AmiBlitz3_noFPU_r470.ab3@18191>   MOVE.l d0,lastconstantvalue
0002EF36 <AmiBlitz3_noFPU_r470.ab3@18192>   MOVE.w d2,imm_size
0002EF40 <AmiBlitz3_noFPU_r470.ab3@18193>   MOVE.w regnum,imm_reg
0002EF4A <AmiBlitz3_noFPU_r470.ab3@18194>   MOVE.l destpointer,imm_addr                           ; long
0002EF4E <AmiBlitz3_noFPU_r470.ab3@18195>   CMP.w #$3,D2
0002EF52 <AmiBlitz3_noFPU_r470.ab3@18196>   BEQ.w JL_0_B434
0002EF56 <AmiBlitz3_noFPU_r470.ab3@18197>   CMP.w #$5,D2                                          ;float
0002EF5A <AmiBlitz3_noFPU_r470.ab3@18198>   BEQ.w JL_0_B434
0002EF5E <AmiBlitz3_noFPU_r470.ab3@18199>   CMP.w #$1,D2
0002EF62 <AmiBlitz3_noFPU_r470.ab3@18200>   BEQ.w JL_0_B418
0002EF66 <AmiBlitz3_noFPU_r470.ab3@18201>   CMP.w #$2,D2
0002EF6A <AmiBlitz3_noFPU_r470.ab3@18202>   BEQ.w JL_0_B418
0002EF6E <AmiBlitz3_noFPU_r470.ab3@18203>   CMP.w #$4,D2
0002EF72 <AmiBlitz3_noFPU_r470.ab3@18204>   BEQ.w JL_0_B434
0002EF76 <AmiBlitz3_noFPU_r470.ab3@18206> BRA.w mismatcherr
0002EF7C <AmiBlitz3_noFPU_r470.ab3@18209>   MOVE.w regnum,D1
0002EF7E <AmiBlitz3_noFPU_r470.ab3@18210>   LSL.w #8,D1
0002EF80 <AmiBlitz3_noFPU_r470.ab3@18211>   LSL.w #1,D1
0002EF84 <AmiBlitz3_noFPU_r470.ab3@18212>   ORI.w #$303C,D1
0002EF88 <AmiBlitz3_noFPU_r470.ab3@18213>    BSR.w writeword
0002EF8A <AmiBlitz3_noFPU_r470.ab3@18214>   MOVE.w D0,D1
0002EF8E <AmiBlitz3_noFPU_r470.ab3@18215>    BSR.w writeword
0002EF92 <AmiBlitz3_noFPU_r470.ab3@18216> BRA.w reget
0002EF94 <AmiBlitz3_noFPU_r470.ab3@18219>   MOVEQ #0,d1
0002EF9A <AmiBlitz3_noFPU_r470.ab3@18220>   MOVE.w regnum,D1
0002EFA0 <AmiBlitz3_noFPU_r470.ab3@18221>   TST.b fpu
0002EFA4 <AmiBlitz3_noFPU_r470.ab3@18222>   BEQ 'f1
0002EFA8 <AmiBlitz3_noFPU_r470.ab3@18223>   CMP.w #5,d2
0002EFAC <AmiBlitz3_noFPU_r470.ab3@18224>   BEQ 'l10
0002EFB0 <AmiBlitz3_noFPU_r470.ab3@18225> BRA 'f2
0002EFB6 <AmiBlitz3_noFPU_r470.ab3@18228>   TST.b iee
0002EFBA <AmiBlitz3_noFPU_r470.ab3@18229>   BNE 'l10
0002EFBC <AmiBlitz3_noFPU_r470.ab3@18232>   LSL.w #8,D1
0002EFBE <AmiBlitz3_noFPU_r470.ab3@18233>   LSL.w #1,D1
0002EFC2 <AmiBlitz3_noFPU_r470.ab3@18234>   ORI.w #$203C,D1
0002EFC6 <AmiBlitz3_noFPU_r470.ab3@18235>    BSR.w writeword
0002EFC8 <AmiBlitz3_noFPU_r470.ab3@18236>   MOVE.l D0,D1
0002EFCC <AmiBlitz3_noFPU_r470.ab3@18237>    BSR.w writelong
0002EFD0 <AmiBlitz3_noFPU_r470.ab3@18238> BRA.w reget
0002EFD2 <AmiBlitz3_noFPU_r470.ab3@18241>   MOVEQ #5,d2
0002EFD4 <AmiBlitz3_noFPU_r470.ab3@18242>   ASL.l #7,d1
0002EFD6 <AmiBlitz3_noFPU_r470.ab3@18243>   SUBQ.l #8,a7
0002EFDC <AmiBlitz3_noFPU_r470.ab3@18248>       OR.l #$f23c4400,d1                                   ;fmove.s
0002EFE2 <AmiBlitz3_noFPU_r470.ab3@18249>        fmove.s fp0,0(a7)
0002EFE6 <AmiBlitz3_noFPU_r470.ab3@18251>   BSR writelong
0002EFE8 <AmiBlitz3_noFPU_r470.ab3@18252>   MOVE.l (a7)+,d1
0002EFEC <AmiBlitz3_noFPU_r470.ab3@18253>   BSR writelong
0002EFEE <AmiBlitz3_noFPU_r470.ab3@18254>   MOVE.l (a7)+,d1
0002EFF2 <AmiBlitz3_noFPU_r470.ab3@18258> BRA.w reget
0002EFF4 <AmiBlitz3_noFPU_r470.ab3@18264>  MOVE.l D3,D0
0002EFF6 <AmiBlitz3_noFPU_r470.ab3@18265>   TST.w D6
0002EFFA <AmiBlitz3_noFPU_r470.ab3@18266>    BEQ.w JL_0_B46C
0002F000 <AmiBlitz3_noFPU_r470.ab3@18267>   MOVEA.l _mathffpbase,A6
0002F004 <AmiBlitz3_noFPU_r470.ab3@18268>    JSR -$1E(A6)
0002F008 <AmiBlitz3_noFPU_r470.ab3@18269>    BVC.w JL_0_B46C
0002F00A <AmiBlitz3_noFPU_r470.ab3@18270>   ADDQ.w #4,A7
0002F00E <AmiBlitz3_noFPU_r470.ab3@18271> BRA.w JL_0_B5A0
0002F010 <AmiBlitz3_noFPU_r470.ab3@18274> RTS
0002F012 <AmiBlitz3_noFPU_r470.ab3@18278>   MOVEQ.l #$00,D6
0002F016 <AmiBlitz3_noFPU_r470.ab3@18279>    fmove.l d3,fp0
0002F01A <AmiBlitz3_noFPU_r470.ab3@18282>   BSR.w JL_0_B480
0002F01E <AmiBlitz3_noFPU_r470.ab3@18283> BRA.w JL_0_B3DC
0002F020 <AmiBlitz3_noFPU_r470.ab3@18286>   MOVE.w D2,-(A7)
0002F024 <AmiBlitz3_noFPU_r470.ab3@18287>    BSR.w JL_0_BF6A
0002F026 <AmiBlitz3_noFPU_r470.ab3@18288>   MOVE.w (A7)+,D2
0002F028 <AmiBlitz3_noFPU_r470.ab3@18291>   TST.w D2
0002F02C <AmiBlitz3_noFPU_r470.ab3@18292>    BNE.w JL_0_B498
0002F02E <AmiBlitz3_noFPU_r470.ab3@18293>   TST.w D6
0002F032 <AmiBlitz3_noFPU_r470.ab3@18294>    BEQ.w JL_0_B492
0002F034 <AmiBlitz3_noFPU_r470.ab3@18295>   MOVEQ.l #$04,D2
0002F038 <AmiBlitz3_noFPU_r470.ab3@18296> BRA.w JL_0_B510
0002F03A <AmiBlitz3_noFPU_r470.ab3@18299>   MOVEQ.l #$02,D2
0002F03E <AmiBlitz3_noFPU_r470.ab3@18300> BRA.w JL_0_B4C4
0002F042 <AmiBlitz3_noFPU_r470.ab3@18303>   CMP.w #$1,D2
0002F046 <AmiBlitz3_noFPU_r470.ab3@18304>    BEQ.w JL_0_B4C4
0002F04A <AmiBlitz3_noFPU_r470.ab3@18305>   CMP.w #$2,D2
0002F04E <AmiBlitz3_noFPU_r470.ab3@18306>    BEQ.w JL_0_B4F8
0002F052 <AmiBlitz3_noFPU_r470.ab3@18307>   CMP.w #$3,D2
0002F056 <AmiBlitz3_noFPU_r470.ab3@18308>    BEQ.w JL_0_B57A
0002F05A <AmiBlitz3_noFPU_r470.ab3@18309>   CMP.w #$4,D2
0002F05E <AmiBlitz3_noFPU_r470.ab3@18310>    BEQ.w JL_0_B506
0002F062 <AmiBlitz3_noFPU_r470.ab3@18311>   CMP.w #$5,D2
0002F066 <AmiBlitz3_noFPU_r470.ab3@18312>    BEQ.w JL_0_B586
0002F06A <AmiBlitz3_noFPU_r470.ab3@18313> BRA.w mismatcherr
0002F06E <AmiBlitz3_noFPU_r470.ab3@18316>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002F074 <AmiBlitz3_noFPU_r470.ab3@18317>   CMP.l #$7f,D0
0002F078 <AmiBlitz3_noFPU_r470.ab3@18318>    BGT.w JL_0_B4DC
0002F07E <AmiBlitz3_noFPU_r470.ab3@18319>   CMP.l #$FFFFFF80,D0
0002F082 <AmiBlitz3_noFPU_r470.ab3@18320>    BGE.w JL_0_B59E
0002F084 <AmiBlitz3_noFPU_r470.ab3@18323>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F08A <AmiBlitz3_noFPU_r470.ab3@18324>   CMP.l #$7fff,D0
0002F08E <AmiBlitz3_noFPU_r470.ab3@18325>    BGT.w JL_0_B4F2
0002F094 <AmiBlitz3_noFPU_r470.ab3@18326>   CMP.l #$FFFF8000,D0
0002F098 <AmiBlitz3_noFPU_r470.ab3@18327>    BGE.w JL_0_B59E
0002F09A <AmiBlitz3_noFPU_r470.ab3@18330>   MOVEQ.l #$03,D2
0002F09E <AmiBlitz3_noFPU_r470.ab3@18331> BRA.w JL_0_B59E
0002F0A0 <AmiBlitz3_noFPU_r470.ab3@18357>   TST.w D6
0002F0A4 <AmiBlitz3_noFPU_r470.ab3@18358>    BNE.w JL_0_B510
0002F0A8 <AmiBlitz3_noFPU_r470.ab3@18359>    BSR.w JL_0_B450
0002F0AC <AmiBlitz3_noFPU_r470.ab3@18360> BRA.w JL_0_B4DC
0002F0B0 <AmiBlitz3_noFPU_r470.ab3@18363>   BSR.w JL_0_B450
0002F0B2 <AmiBlitz3_noFPU_r470.ab3@18364>   TST.w D6
0002F0B6 <AmiBlitz3_noFPU_r470.ab3@18365>   BEQ.w JL_0_B560
0002F0BC <AmiBlitz3_noFPU_r470.ab3@18368>   CMP.l #MaxWordSgnd,D0
0002F0C0 <AmiBlitz3_noFPU_r470.ab3@18369>    BGT.w JL_0_B5A0
0002F0C6 <AmiBlitz3_noFPU_r470.ab3@18370>   CMP.l #$FFFF8000,D0
0002F0CA <AmiBlitz3_noFPU_r470.ab3@18371>    BLT.w JL_0_B5A0
0002F0CC <AmiBlitz3_noFPU_r470.ab3@18372>   MOVE.w D0,-(A7)
0002F0D0 <AmiBlitz3_noFPU_r470.ab3@18373>    JSR -$24(A6)
0002F0D2 <AmiBlitz3_noFPU_r470.ab3@18374>   MOVE.l D0,D1
0002F0D4 <AmiBlitz3_noFPU_r470.ab3@18375>   MOVE.l D3,D0
0002F0D8 <AmiBlitz3_noFPU_r470.ab3@18376>    JSR -$48(A6)
0002F0DE <AmiBlitz3_noFPU_r470.ab3@18377>   MOVE.l #$80000051,D1
0002F0E2 <AmiBlitz3_noFPU_r470.ab3@18378>    JSR -$4E(A6)
0002F0E6 <AmiBlitz3_noFPU_r470.ab3@18379>    JSR -$1E(A6)
0002F0EA <AmiBlitz3_noFPU_r470.ab3@18380>    BEQ.w JL_0_B55A
0002F0F0 <AmiBlitz3_noFPU_r470.ab3@18381>   CMP.l #$10000,D0
0002F0F4 <AmiBlitz3_noFPU_r470.ab3@18382>    BCC.w JL_0_B55A
0002F0F6 <AmiBlitz3_noFPU_r470.ab3@18383>   MOVE.w D0,D1
0002F0F8 <AmiBlitz3_noFPU_r470.ab3@18384>   MOVE.w (A7)+,D0
0002F0FA <AmiBlitz3_noFPU_r470.ab3@18385>   SWAP D0
0002F0FC <AmiBlitz3_noFPU_r470.ab3@18386>   MOVE.w D1,D0
0002F100 <AmiBlitz3_noFPU_r470.ab3@18387> BRA.w JL_0_B59E
0002F102 <AmiBlitz3_noFPU_r470.ab3@18390>   ADDQ.w #2,A7
0002F106 <AmiBlitz3_noFPU_r470.ab3@18391> BRA.w JL_0_B5A0
0002F10C <AmiBlitz3_noFPU_r470.ab3@18394>   CMP.l #MaxWordSgnd,D0
0002F110 <AmiBlitz3_noFPU_r470.ab3@18395>    BGT.w JL_0_B4F2
0002F116 <AmiBlitz3_noFPU_r470.ab3@18396>   CMP.l #$FFFF8000,D0
0002F11A <AmiBlitz3_noFPU_r470.ab3@18397>    BLT.w JL_0_B4F2
0002F11C <AmiBlitz3_noFPU_r470.ab3@18398>   SWAP D0
0002F120 <AmiBlitz3_noFPU_r470.ab3@18399> BRA.w JL_0_B59E
0002F122 <AmiBlitz3_noFPU_r470.ab3@18402>   TST.w D6
0002F126 <AmiBlitz3_noFPU_r470.ab3@18403>   BNE.w JL_0_B5A0
0002F128 <AmiBlitz3_noFPU_r470.ab3@18404>   MOVE.l D3,D0
0002F12C <AmiBlitz3_noFPU_r470.ab3@18405> BRA.w JL_0_B59E
0002F12E <AmiBlitz3_noFPU_r470.ab3@18408>   TST.w D6
0002F132 <AmiBlitz3_noFPU_r470.ab3@18409>   BNE.w JL_0_B5A0
0002F134 <AmiBlitz3_noFPU_r470.ab3@18410>   MOVE.l D3,D0
0002F13A <AmiBlitz3_noFPU_r470.ab3@18411>   MOVEA.l _mathffpbase,A6
0002F13E <AmiBlitz3_noFPU_r470.ab3@18412>   JSR -$24(A6)
0002F140 <AmiBlitz3_noFPU_r470.ab3@18413>   MOVE.l D0,D3
0002F144 <AmiBlitz3_noFPU_r470.ab3@18414> BRA.w JL_0_B5A0
0002F146 <AmiBlitz3_noFPU_r470.ab3@18417> RTS
0002F148 <AmiBlitz3_noFPU_r470.ab3@18420>   MOVEQ.l #$05,D2
0002F14A <AmiBlitz3_noFPU_r470.ab3@18421>   MOVE.l D3,D0
0002F14C <AmiBlitz3_noFPU_r470.ab3@18422> RTS
0002F150 <AmiBlitz3_noFPU_r470.ab3@18426>             Ds.l 1                                         ;??Looks like unused data??
0002F154 <AmiBlitz3_noFPU_r470.ab3@18427> pushpc:     Ds.l 1
0002F158 <AmiBlitz3_noFPU_r470.ab3@18428> pushoff:    Ds.l 1
0002F15C <AmiBlitz3_noFPU_r470.ab3@18429> pushdooff:  Ds.l 1
0002F15E <AmiBlitz3_noFPU_r470.ab3@18430> pushclen:   Ds.w 1
0002F162 <AmiBlitz3_noFPU_r470.ab3@18431> pushat:     Ds.l 1
0002F16C <AmiBlitz3_noFPU_r470.ab3@18435>   MOVE.l destpointer,pushpc
0002F176 <AmiBlitz3_noFPU_r470.ab3@18436>   MOVE.l hunkoffsetbase,pushoff
0002F178 <AmiBlitz3_noFPU_r470.ab3@18437> RTS
0002F17C <AmiBlitz3_noFPU_r470.ab3@18441>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F182 <AmiBlitz3_noFPU_r470.ab3@18442>   MOVE.l destpointer,D0
0002F186 <AmiBlitz3_noFPU_r470.ab3@18443>   MOVE.l pushpc(PC),D1
0002F18C <AmiBlitz3_noFPU_r470.ab3@18444>   MOVE.l D1,destpointer
0002F18E <AmiBlitz3_noFPU_r470.ab3@18445>   SUB.l D1,D0
0002F194 <AmiBlitz3_noFPU_r470.ab3@18446>   MOVE.w D0,pushclen
0002F198 <AmiBlitz3_noFPU_r470.ab3@18447>    BEQ.w JL_0_B636
0002F19E <AmiBlitz3_noFPU_r470.ab3@18448>   MOVE.w dontwrite,D1
0002F1A2 <AmiBlitz3_noFPU_r470.ab3@18449>    BNE.w JL_0_B636
0002F1AA <AmiBlitz3_noFPU_r470.ab3@18450>    CMP.w #1000,pushclen
0002F1AE <AmiBlitz3_noFPU_r470.ab3@18451>    BGE conmemerr
0002F1B4 <AmiBlitz3_noFPU_r470.ab3@18452>    MOVE.l pushat,d0
0002F1B8 <AmiBlitz3_noFPU_r470.ab3@18453>    BNE 'nomem
0002F1BE <AmiBlitz3_noFPU_r470.ab3@18454>    MOVE.l #1024,d0
0002F1C0 <AmiBlitz3_noFPU_r470.ab3@18455>   MOVEQ.l #$01,D1
0002F1C6 <AmiBlitz3_noFPU_r470.ab3@18456>   MOVEA.l _execbase,A6
0002F1CC <AmiBlitz3_noFPU_r470.ab3@18457>   MOVE.l mempool,a0
0002F1D0 <AmiBlitz3_noFPU_r470.ab3@18458>   JSR _AllocPooled(a6)
0002F1D6 <AmiBlitz3_noFPU_r470.ab3@18460>   MOVE.l D0,pushat
0002F1D8 <AmiBlitz3_noFPU_r470.ab3@18463>   MOVEA.l D0,A0
0002F1DE <AmiBlitz3_noFPU_r470.ab3@18464>   MOVEA.l pushpc,A1
0002F1E4 <AmiBlitz3_noFPU_r470.ab3@18465>   MOVE.l A1,destpointer
0002F1EA <AmiBlitz3_noFPU_r470.ab3@18466>   MOVE.w pushclen,D0
0002F1EC <AmiBlitz3_noFPU_r470.ab3@18467>   LSR.w #1,D0
0002F1EE <AmiBlitz3_noFPU_r470.ab3@18468>   SUBQ.w #1,D0
0002F1F0 <AmiBlitz3_noFPU_r470.ab3@18471>     MOVE.w (A1)+,(A0)+
0002F1F4 <AmiBlitz3_noFPU_r470.ab3@18472>   DBF D0,JL_0_B626
0002F1FE <AmiBlitz3_noFPU_r470.ab3@18474>    MOVE.l hunkoffsetbase,pushdooff
0002F202 <AmiBlitz3_noFPU_r470.ab3@18477>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F204 <AmiBlitz3_noFPU_r470.ab3@18478> RTS
0002F208 <AmiBlitz3_noFPU_r470.ab3@18482>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F20A <AmiBlitz3_noFPU_r470.ab3@18483>   MOVEQ.l #$00,D0
0002F210 <AmiBlitz3_noFPU_r470.ab3@18484>   MOVE.w pushclen,D0
0002F214 <AmiBlitz3_noFPU_r470.ab3@18485>    BEQ.w JL_0_B6D8
0002F21A <AmiBlitz3_noFPU_r470.ab3@18486>   MOVE.l destpointer,D1
0002F220 <AmiBlitz3_noFPU_r470.ab3@18487>   ADD.l D0,destpointer
0002F226 <AmiBlitz3_noFPU_r470.ab3@18488>   TST.w dontwrite
0002F22A <AmiBlitz3_noFPU_r470.ab3@18489>    BNE.w JL_0_B6D8
0002F22C <AmiBlitz3_noFPU_r470.ab3@18490>   LSR.w #1,D0
0002F22E <AmiBlitz3_noFPU_r470.ab3@18491>   SUBQ.w #1,D0
0002F230 <AmiBlitz3_noFPU_r470.ab3@18492>   MOVEA.l D1,A1
0002F236 <AmiBlitz3_noFPU_r470.ab3@18493>   MOVEA.l pushat,A0
0002F23C <AmiBlitz3_noFPU_r470.ab3@18496>     CMPA.l destbufferend,A1
0002F240 <AmiBlitz3_noFPU_r470.ab3@18497>     BCS.w JL_0_B684
0002F248 <AmiBlitz3_noFPU_r470.ab3@18499>     MOVE.w #$FFFF,dontwrite
0002F24C <AmiBlitz3_noFPU_r470.ab3@18500>   BRA.w JL_0_B6D8
0002F24E <AmiBlitz3_noFPU_r470.ab3@18503>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F252 <AmiBlitz3_noFPU_r470.ab3@18504>   DBF D0,JL_0_B66E
0002F258 <AmiBlitz3_noFPU_r470.ab3@18506>   SUB.l pushpc,D1
0002F25C <AmiBlitz3_noFPU_r470.ab3@18507>   BEQ.w JL_0_B6C2
0002F262 <AmiBlitz3_noFPU_r470.ab3@18508>   MOVEA.l pushdooff,A0
0002F268 <AmiBlitz3_noFPU_r470.ab3@18511>   CMPA.l pushoff,A0
0002F26C <AmiBlitz3_noFPU_r470.ab3@18512>   BEQ.w JL_0_B6C2
0002F270 <AmiBlitz3_noFPU_r470.ab3@18513>   MOVEA.l $4(A0),A1
0002F276 <AmiBlitz3_noFPU_r470.ab3@18514>   ADDA.l destbufferstart,A1
0002F27C <AmiBlitz3_noFPU_r470.ab3@18515>   CMPA.l destbufferend,A1
0002F280 <AmiBlitz3_noFPU_r470.ab3@18516>   BCC.w JL_0_B6BC
0002F284 <AmiBlitz3_noFPU_r470.ab3@18517>   ADD.l D1,$4(A0)
0002F286 <AmiBlitz3_noFPU_r470.ab3@18520>   MOVEA.l (A0),A0
0002F28A <AmiBlitz3_noFPU_r470.ab3@18521> BRA.w JL_0_B69A
0002F290 <AmiBlitz3_noFPU_r470.ab3@18524>   MOVEA.l pushat,A1
0002F292 <AmiBlitz3_noFPU_r470.ab3@18525>   MOVEQ.l #$00,D0
0002F298 <AmiBlitz3_noFPU_r470.ab3@18526>   MOVE.w pushclen,D0
0002F29E <AmiBlitz3_noFPU_r470.ab3@18527>   MOVEA.l _execbase,A6
0002F2A4 <AmiBlitz3_noFPU_r470.ab3@18528>   MOVE.l mempool,a0
0002F2A8 <AmiBlitz3_noFPU_r470.ab3@18532>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F2AA <AmiBlitz3_noFPU_r470.ab3@18533> RTS
0002F2AC <AmiBlitz3_noFPU_r470.ab3@18536>   MOVE.l D1,-(A7)                                          ;array mul
0002F2AE <AmiBlitz3_noFPU_r470.ab3@18537>   MOVEQ.l #$00,D2
0002F2B0 <AmiBlitz3_noFPU_r470.ab3@18538>   MOVEQ.l #$0F,D3
0002F2B2 <AmiBlitz3_noFPU_r470.ab3@18541>     LSL.w #1,D1
0002F2B6 <AmiBlitz3_noFPU_r470.ab3@18542>     BCC.w JL_0_B6EE
0002F2B8 <AmiBlitz3_noFPU_r470.ab3@18543>     ADDQ.w #1,D2
0002F2BA <AmiBlitz3_noFPU_r470.ab3@18544>     MOVE.w D3,D4
0002F2BE <AmiBlitz3_noFPU_r470.ab3@18547>   DBF D3,JL_0_B6E4
0002F2C0 <AmiBlitz3_noFPU_r470.ab3@18549>   SUBQ.w #1,D2
0002F2C4 <AmiBlitz3_noFPU_r470.ab3@18550>    BNE.w JL_0_B726
0002F2C6 <AmiBlitz3_noFPU_r470.ab3@18551>   ADDQ.w #4,A7
0002F2C8 <AmiBlitz3_noFPU_r470.ab3@18552>   MOVE.w D4,D1
0002F2CC <AmiBlitz3_noFPU_r470.ab3@18553>    BEQ.w JL_0_B724
0002F2D0 <AmiBlitz3_noFPU_r470.ab3@18554>   CMP.w #$8,D1
0002F2D4 <AmiBlitz3_noFPU_r470.ab3@18555>    BCS.w JL_0_B712
0002F2D8 <AmiBlitz3_noFPU_r470.ab3@18556>   SUBI.w #$8,D1
0002F2DC <AmiBlitz3_noFPU_r470.ab3@18557>    BSR.w JL_0_B712
0002F2DE <AmiBlitz3_noFPU_r470.ab3@18558>   MOVEQ.l #$00,D1
0002F2E0 <AmiBlitz3_noFPU_r470.ab3@18561>   LSL.w #8,D1
0002F2E2 <AmiBlitz3_noFPU_r470.ab3@18562>   LSL.w #1,D1
0002F2E6 <AmiBlitz3_noFPU_r470.ab3@18563>   ORI.w #$E188,D1
0002F2EC <AmiBlitz3_noFPU_r470.ab3@18564>   OR.w regnum,D1
0002F2F0 <AmiBlitz3_noFPU_r470.ab3@18565> BRA.w writeword
0002F2F2 <AmiBlitz3_noFPU_r470.ab3@18568> RTS
0002F2F4 <AmiBlitz3_noFPU_r470.ab3@18571>   MOVEQ #0,d1
0002F2FA <AmiBlitz3_noFPU_r470.ab3@18572>   MOVE.w regnum,D1
0002F2FC <AmiBlitz3_noFPU_r470.ab3@18573>   LSL.l #8,D1
0002F2FE <AmiBlitz3_noFPU_r470.ab3@18575>   LSL.l #4,d1
0002F304 <AmiBlitz3_noFPU_r470.ab3@18577>   OR.l #$4c3c0000,d1
0002F30A <AmiBlitz3_noFPU_r470.ab3@18578>   OR.w regnum,d1
0002F30E <AmiBlitz3_noFPU_r470.ab3@18579>   BSR.w writelong
0002F310 <AmiBlitz3_noFPU_r470.ab3@18580>   MOVE.l (A7)+,D1
0002F314 <AmiBlitz3_noFPU_r470.ab3@18582> BRA writelong
0002F31A <AmiBlitz3_noFPU_r470.ab3@18585>   MOVE.l destpointer,-(A7)
0002F31C <AmiBlitz3_noFPU_r470.ab3@18586>   MOVEQ.l #-$01,D7
0002F320 <AmiBlitz3_noFPU_r470.ab3@18589>     BSR.w findhilib
0002F324 <AmiBlitz3_noFPU_r470.ab3@18590>      BEQ.w JL_0_B8A4
0002F328 <AmiBlitz3_noFPU_r470.ab3@18591>     TST.w $C(A2)
0002F32C <AmiBlitz3_noFPU_r470.ab3@18592>      BPL.w JL_0_B746
0002F330 <AmiBlitz3_noFPU_r470.ab3@18594>     MOVE.l $16(A2),D1
0002F334 <AmiBlitz3_noFPU_r470.ab3@18595>     BEQ.w JL_0_B746
0002F338 <AmiBlitz3_noFPU_r470.ab3@18597>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F33C <AmiBlitz3_noFPU_r470.ab3@18598>     CMP.w #-$2,D1
0002F340 <AmiBlitz3_noFPU_r470.ab3@18599>      BNE.w JL_0_B772
0002F344 <AmiBlitz3_noFPU_r470.ab3@18600>     BSR.w makevsize
0002F348 <AmiBlitz3_noFPU_r470.ab3@18601> BRA.w JL_0_B7FE
0002F34C <AmiBlitz3_noFPU_r470.ab3@18604>     CMP.w #-$5C4,D1
0002F350 <AmiBlitz3_noFPU_r470.ab3@18605>      BNE.w JL_0_B790
0002F354 <AmiBlitz3_noFPU_r470.ab3@18606>     MOVE.w #$7000,D1
0002F35C <AmiBlitz3_noFPU_r470.ab3@18607>     BTST #$7,autorun
0002F35E <AmiBlitz3_noFPU_r470.ab3@18608>     SNE D1
0002F362 <AmiBlitz3_noFPU_r470.ab3@18609>     BSR.w writeword
0002F366 <AmiBlitz3_noFPU_r470.ab3@18610> BRA.w JL_0_B7FE
0002F36A <AmiBlitz3_noFPU_r470.ab3@18613>     CMP.w #-$12D,D1
0002F36E <AmiBlitz3_noFPU_r470.ab3@18614>      BNE.w JL_0_B7A0
0002F372 <AmiBlitz3_noFPU_r470.ab3@18615>     BSR.w makessize
0002F376 <AmiBlitz3_noFPU_r470.ab3@18616> BRA.w JL_0_B7FE
0002F37A <AmiBlitz3_noFPU_r470.ab3@18619>     CMP.w #-$1F5,D1
0002F37E <AmiBlitz3_noFPU_r470.ab3@18620>      BNE.w JL_0_B7C2
0002F382 <AmiBlitz3_noFPU_r470.ab3@18621>     MOVE.w #$203C,D1
0002F386 <AmiBlitz3_noFPU_r470.ab3@18622>     BSR.w writeword
0002F38A <AmiBlitz3_noFPU_r470.ab3@18623>     BSR.w addoff
0002F390 <AmiBlitz3_noFPU_r470.ab3@18624>     MOVE.l endop,D1
0002F394 <AmiBlitz3_noFPU_r470.ab3@18625>     BSR.w writelong
0002F398 <AmiBlitz3_noFPU_r470.ab3@18626> BRA.w JL_0_B7FE
0002F39C <AmiBlitz3_noFPU_r470.ab3@18629>     CMP.w #-$3E9,D1
0002F3A0 <AmiBlitz3_noFPU_r470.ab3@18630>      BNE.w JL_0_B7E4
0002F3A4 <AmiBlitz3_noFPU_r470.ab3@18631>     MOVE.w #$203C,D1
0002F3A8 <AmiBlitz3_noFPU_r470.ab3@18632>     BSR.w writeword
0002F3AC <AmiBlitz3_noFPU_r470.ab3@18633>     BSR.w addoff
0002F3B2 <AmiBlitz3_noFPU_r470.ab3@18634>     MOVE.l data2at,D1
0002F3B6 <AmiBlitz3_noFPU_r470.ab3@18635>     BSR.w writelong
0002F3BA <AmiBlitz3_noFPU_r470.ab3@18636> BRA.w JL_0_B7FE
0002F3BE <AmiBlitz3_noFPU_r470.ab3@18639>     CMP.w #$1,D1
0002F3C2 <AmiBlitz3_noFPU_r470.ab3@18640>      BNE.w JL_0_B7FE
0002F3C6 <AmiBlitz3_noFPU_r470.ab3@18641>     MOVE.w #$203C,D1
0002F3CA <AmiBlitz3_noFPU_r470.ab3@18642>     BSR.w writeword
0002F3D0 <AmiBlitz3_noFPU_r470.ab3@18643>     MOVE.l ptr_seg_debugger,D1
0002F3D4 <AmiBlitz3_noFPU_r470.ab3@18644>     BSR.w writelong
0002F3D8 <AmiBlitz3_noFPU_r470.ab3@18647>     MOVE.l $16(A2),D1
0002F3E0 <AmiBlitz3_noFPU_r470.ab3@18648>     MOVE.w #$FFFF,lasta6
0002F3E4 <AmiBlitz3_noFPU_r470.ab3@18649>     BSR.w Amakelibsub
0002F3EA <AmiBlitz3_noFPU_r470.ab3@18650>     CMPI.w #$FFFE,$4(A2)
0002F3EE <AmiBlitz3_noFPU_r470.ab3@18651>      BNE.w JL_0_B83A
0002F3F4 <AmiBlitz3_noFPU_r470.ab3@18652>     MOVE.l intdata1,D1
0002F3F8 <AmiBlitz3_noFPU_r470.ab3@18653>      BEQ.w JL_0_B83A
0002F3FE <AmiBlitz3_noFPU_r470.ab3@18654>     MOVE.w putidata1,D1
0002F402 <AmiBlitz3_noFPU_r470.ab3@18655>     BSR.w writeword
0002F406 <AmiBlitz3_noFPU_r470.ab3@18656>     BSR.w addoff
0002F40C <AmiBlitz3_noFPU_r470.ab3@18657>     MOVE.l intdata1,D1
0002F410 <AmiBlitz3_noFPU_r470.ab3@18658>     BSR.w writelong
0002F414 <AmiBlitz3_noFPU_r470.ab3@18661>     MOVE.w #$2B40,D1
0002F418 <AmiBlitz3_noFPU_r470.ab3@18662>     TST.w $1A(A2)
0002F41C <AmiBlitz3_noFPU_r470.ab3@18663>      BEQ.w JL_0_B746
0002F420 <AmiBlitz3_noFPU_r470.ab3@18664>      BPL.w JL_0_B84E
0002F424 <AmiBlitz3_noFPU_r470.ab3@18665>     MOVE.w #$3B40,D1
0002F428 <AmiBlitz3_noFPU_r470.ab3@18668>     BSR.w writeword
0002F42C <AmiBlitz3_noFPU_r470.ab3@18669>     MOVE.w $A(A2),D1
0002F430 <AmiBlitz3_noFPU_r470.ab3@18670>      BSR.w writeword
0002F436 <AmiBlitz3_noFPU_r470.ab3@18671>     CMPI.w #$FFFA,$4(A2)
0002F43A <AmiBlitz3_noFPU_r470.ab3@18672>      BNE.w JL_0_B746
0002F43C <AmiBlitz3_noFPU_r470.ab3@18673>     MOVE.w D7,-(A7)
0002F442 <AmiBlitz3_noFPU_r470.ab3@18674>     MOVE.w numstatic,D4
0002F446 <AmiBlitz3_noFPU_r470.ab3@18675>      BEQ.w JL_0_B882
0002F44C <AmiBlitz3_noFPU_r470.ab3@18676>     MOVE.l staticdata,D3
0002F452 <AmiBlitz3_noFPU_r470.ab3@18677>      JSR datastart
0002F456 <AmiBlitz3_noFPU_r470.ab3@18678>     MOVE.w #$C500,D1
0002F45A <AmiBlitz3_noFPU_r470.ab3@18679>      BSR.w tokejsr2
0002F460 <AmiBlitz3_noFPU_r470.ab3@18682>     MOVE.w maxsused,D4
0002F464 <AmiBlitz3_noFPU_r470.ab3@18683>      BEQ.w JL_0_B89E
0002F46A <AmiBlitz3_noFPU_r470.ab3@18684>     MOVE.l maxsat,D3
0002F470 <AmiBlitz3_noFPU_r470.ab3@18685>      JSR datastart
0002F474 <AmiBlitz3_noFPU_r470.ab3@18686>     MOVE.w #$CF00,D1
0002F478 <AmiBlitz3_noFPU_r470.ab3@18687>      BSR.w tokejsr2
0002F47A <AmiBlitz3_noFPU_r470.ab3@18690>     MOVE.w (A7)+,D7
0002F47E <AmiBlitz3_noFPU_r470.ab3@18691> BRA.w JL_0_B746
0002F484 <AmiBlitz3_noFPU_r470.ab3@18694>   MOVE.l destpointer,D1
0002F486 <AmiBlitz3_noFPU_r470.ab3@18695>   CMP.l (A7),D1
0002F48A <AmiBlitz3_noFPU_r470.ab3@18696>    BNE.w JL_0_B8BC
0002F492 <AmiBlitz3_noFPU_r470.ab3@18697>   MOVE.w #$0008,noinits+2
0002F496 <AmiBlitz3_noFPU_r470.ab3@18698> BRA.w JL_0_B8E6
0002F49C <AmiBlitz3_noFPU_r470.ab3@18701>   CLR.w noinits+2
0002F4A2 <AmiBlitz3_noFPU_r470.ab3@18702>   MOVE.w dontwrite,D1
0002F4A6 <AmiBlitz3_noFPU_r470.ab3@18703>    BNE.w JL_0_B8DE
0002F4AC <AmiBlitz3_noFPU_r470.ab3@18704>   TST.l newinitaddr
0002F4B0 <AmiBlitz3_noFPU_r470.ab3@18705>    BEQ 'l10
0002F4B6 <AmiBlitz3_noFPU_r470.ab3@18706>   MOVE.l newinitaddr,D2
0002F4BC <AmiBlitz3_noFPU_r470.ab3@18707>   SUB.l destbufferstart,D2
0002F4BE <AmiBlitz3_noFPU_r470.ab3@18708>   ADDQ.l #2,d2
0002F4C4 <AmiBlitz3_noFPU_r470.ab3@18709>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F4C8 <AmiBlitz3_noFPU_r470.ab3@18711>   MOVE.w #$4EB9,(A0)+
0002F4CA <AmiBlitz3_noFPU_r470.ab3@18712>   MOVE.l (A7),(A0)+
0002F4CE <AmiBlitz3_noFPU_r470.ab3@18714> BRA 'l20
0002F4D4 <AmiBlitz3_noFPU_r470.ab3@18717>   MOVEA.l destbufferstart,A0                               ;write initcode
0002F4DA <AmiBlitz3_noFPU_r470.ab3@18718>   TST.b saved0
0002F4DE <AmiBlitz3_noFPU_r470.ab3@18719>   BEQ 'l1
0002F4E2 <AmiBlitz3_noFPU_r470.ab3@18720>   MOVE.w #$23c0,(a0)+
0002F4E4 <AmiBlitz3_noFPU_r470.ab3@18721>   MOVE.l a0,a1
0002F4E6 <AmiBlitz3_noFPU_r470.ab3@18722>   ADDQ.l #6,a1
0002F4E8 <AmiBlitz3_noFPU_r470.ab3@18723>   MOVE.l a1,(a0)+
0002F4EA <AmiBlitz3_noFPU_r470.ab3@18724>   MOVEQ.l #$02,D2
0002F4EE <AmiBlitz3_noFPU_r470.ab3@18725>   BSR.w addhunkoffset
0002F4F2 <AmiBlitz3_noFPU_r470.ab3@18726>   MOVE.w #$6004,(a0)+
0002F4F8 <AmiBlitz3_noFPU_r470.ab3@18727>   MOVE.l #$4e714e71,(a0)+
0002F4FC <AmiBlitz3_noFPU_r470.ab3@18730>   MOVE.w #$4EB9,(A0)+
0002F4FE <AmiBlitz3_noFPU_r470.ab3@18731>   MOVE.l (A7),(A0)+
0002F500 <AmiBlitz3_noFPU_r470.ab3@18732>   MOVEQ #2,d2
0002F506 <AmiBlitz3_noFPU_r470.ab3@18733>   TST.b saved0
0002F50A <AmiBlitz3_noFPU_r470.ab3@18734>   BEQ 'l20
0002F50C <AmiBlitz3_noFPU_r470.ab3@18735>   MOVEQ.l #14,D2
0002F510 <AmiBlitz3_noFPU_r470.ab3@18738>   BSR.w addhunkoffset
0002F514 <AmiBlitz3_noFPU_r470.ab3@18739>   MOVE.w #$2039,(a0)+
0002F516 <AmiBlitz3_noFPU_r470.ab3@18740>   MOVE.l a1,(a0)+
0002F518 <AmiBlitz3_noFPU_r470.ab3@18741>   MOVEQ.l #20,d2
0002F51C <AmiBlitz3_noFPU_r470.ab3@18744>   BSR.w addhunkoffset
0002F520 <AmiBlitz3_noFPU_r470.ab3@18747>   MOVE.w #$4E75,D1
0002F524 <AmiBlitz3_noFPU_r470.ab3@18748>   BSR.w writeword
0002F526 <AmiBlitz3_noFPU_r470.ab3@18751>   ADDQ.w #4,A7
0002F528 <AmiBlitz3_noFPU_r470.ab3@18752> RTS
0002F52C <AmiBlitz3_noFPU_r470.ab3@18757>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002F532 <AmiBlitz3_noFPU_r470.ab3@18759>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002F538 <AmiBlitz3_noFPU_r470.ab3@18761>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002F53E <AmiBlitz3_noFPU_r470.ab3@18766>   MOVE.l stringbuffer,D1
0002F542 <AmiBlitz3_noFPU_r470.ab3@18767> BRA.w makesize
0002F544 <AmiBlitz3_noFPU_r470.ab3@18770>   MOVEQ.l #$00,D1
0002F54A <AmiBlitz3_noFPU_r470.ab3@18771>   MOVE.w globalvarpointer,D1
0002F54E <AmiBlitz3_noFPU_r470.ab3@18772>   SUBI.w #$8000,D1
0002F552 <AmiBlitz3_noFPU_r470.ab3@18773>   BNE.w makesize
0002F554 <AmiBlitz3_noFPU_r470.ab3@18774>     MOVEQ.l #$08,D1
0002F556 <AmiBlitz3_noFPU_r470.ab3@18777>   MOVE.l D1,-(A7)
0002F55A <AmiBlitz3_noFPU_r470.ab3@18778>   MOVE.w #$203C,D1
0002F55E <AmiBlitz3_noFPU_r470.ab3@18779>   BSR.w writeword
0002F560 <AmiBlitz3_noFPU_r470.ab3@18780>   MOVE.l (A7)+,D1
0002F564 <AmiBlitz3_noFPU_r470.ab3@18781> BRA.w writelong
0002F566 <AmiBlitz3_noFPU_r470.ab3@18789>   MOVEQ.l #$00,D1
0002F56C <AmiBlitz3_noFPU_r470.ab3@18790>   MOVEA.l libpointer,A1
0002F570 <AmiBlitz3_noFPU_r470.ab3@18793>     CMPA.w #$0,A1
0002F574 <AmiBlitz3_noFPU_r470.ab3@18794>     BEQ.w findhilib__done
0002F578 <AmiBlitz3_noFPU_r470.ab3@18795>       CMP.w $4(A1),D7
0002F57C <AmiBlitz3_noFPU_r470.ab3@18796>       BLS.w findhilib__next
0002F580 <AmiBlitz3_noFPU_r470.ab3@18797>         CMP.w $4(A1),D1
0002F584 <AmiBlitz3_noFPU_r470.ab3@18798>         BCC.w findhilib__next
0002F588 <AmiBlitz3_noFPU_r470.ab3@18799>           MOVE.w $4(A1),D1
0002F58A <AmiBlitz3_noFPU_r470.ab3@18800>           MOVEA.l A1,A2
0002F58C <AmiBlitz3_noFPU_r470.ab3@18803>     MOVEA.l (A1),A1
0002F590 <AmiBlitz3_noFPU_r470.ab3@18804> BRA.w findhilib__loop
0002F592 <AmiBlitz3_noFPU_r470.ab3@18807>   MOVE.w D1,D7
0002F594 <AmiBlitz3_noFPU_r470.ab3@18808> RTS
0002F596 <AmiBlitz3_noFPU_r470.ab3@18816>   MOVEQ.l #-$01,D1
0002F59C <AmiBlitz3_noFPU_r470.ab3@18817>   MOVEA.l libpointer,A1
0002F5A0 <AmiBlitz3_noFPU_r470.ab3@18820>     CMPA.w #$0,A1
0002F5A4 <AmiBlitz3_noFPU_r470.ab3@18821>      BEQ.w findlolib__done
0002F5A8 <AmiBlitz3_noFPU_r470.ab3@18822>     CMP.w $4(A1),D7
0002F5AC <AmiBlitz3_noFPU_r470.ab3@18823>      BCC.w findlolib__next
0002F5B0 <AmiBlitz3_noFPU_r470.ab3@18824>     CMP.w $4(A1),D1
0002F5B4 <AmiBlitz3_noFPU_r470.ab3@18825>      BLS.w findlolib__next
0002F5B8 <AmiBlitz3_noFPU_r470.ab3@18826>     MOVE.w $4(A1),D1
0002F5BA <AmiBlitz3_noFPU_r470.ab3@18827>     MOVEA.l A1,A2
0002F5BC <AmiBlitz3_noFPU_r470.ab3@18830>     MOVEA.l (A1),A1
0002F5C0 <AmiBlitz3_noFPU_r470.ab3@18831> BRA.w findlolib__loop
0002F5C2 <AmiBlitz3_noFPU_r470.ab3@18834>   MOVE.w D1,D7
0002F5C6 <AmiBlitz3_noFPU_r470.ab3@18835>   CMP.w #-$1,D1
0002F5C8 <AmiBlitz3_noFPU_r470.ab3@18836> RTS
0002F5CE <AmiBlitz3_noFPU_r470.ab3@18840>   ADDQ.w #1,globalvarpointer
0002F5D6 <AmiBlitz3_noFPU_r470.ab3@18841>   BCLR #$0,globalvarpointer+1
0002F5D8 <AmiBlitz3_noFPU_r470.ab3@18842>   MOVEQ.l #$00,D7
0002F5DC <AmiBlitz3_noFPU_r470.ab3@18845>     BSR.w findlolib
0002F5E0 <AmiBlitz3_noFPU_r470.ab3@18846>     BEQ.w JL_0_BA74
0002F5E4 <AmiBlitz3_noFPU_r470.ab3@18847>     TST.w $C(A2)
0002F5E8 <AmiBlitz3_noFPU_r470.ab3@18848>     BPL.w JL_0_B99A
0002F5EA <AmiBlitz3_noFPU_r470.ab3@18849>     MOVEA.l A2,A1
0002F5EE <AmiBlitz3_noFPU_r470.ab3@18850>     ADDA.l $12(A1),A1
0002F5F2 <AmiBlitz3_noFPU_r470.ab3@18851>     TST.w -$2(A1)
0002F5F6 <AmiBlitz3_noFPU_r470.ab3@18852>     BEQ.w JL_0_BA34
0002F5FA <AmiBlitz3_noFPU_r470.ab3@18853>     MOVE.l -$A(A1),D1
0002F5FE <AmiBlitz3_noFPU_r470.ab3@18854>     LEA $6(A2,D1.L),A3
0002F600 <AmiBlitz3_noFPU_r470.ab3@18857>       TST.w (A3)+
0002F604 <AmiBlitz3_noFPU_r470.ab3@18858>       BEQ.w JL_0_B9CC
0002F606 <AmiBlitz3_noFPU_r470.ab3@18859>         ADDQ.w #2,A3
0002F60A <AmiBlitz3_noFPU_r470.ab3@18860> BRA.w JL_0_B9C0
0002F60E <AmiBlitz3_noFPU_r470.ab3@18863>     TST.l $4(A3)
0002F612 <AmiBlitz3_noFPU_r470.ab3@18864>     BEQ.w JL_0_BA34
0002F616 <AmiBlitz3_noFPU_r470.ab3@18865>       MOVE.w freemax(PC),D1
0002F61A <AmiBlitz3_noFPU_r470.ab3@18866>       BSR.w writeword
0002F61E <AmiBlitz3_noFPU_r470.ab3@18867>       MOVE.w -$4(A1),D1
0002F622 <AmiBlitz3_noFPU_r470.ab3@18868>       BSR.w writeword
0002F628 <AmiBlitz3_noFPU_r470.ab3@18869>       MOVE.l free,D1
0002F62C <AmiBlitz3_noFPU_r470.ab3@18870>       MOVE.w -$6(A1),D1
0002F630 <AmiBlitz3_noFPU_r470.ab3@18871>       BSR.w writelong
0002F636 <AmiBlitz3_noFPU_r470.ab3@18872>       MOVE.l destpointer,-(A7)
0002F638 <AmiBlitz3_noFPU_r470.ab3@18873>       MOVEQ.l #$01,D1
0002F63C <AmiBlitz3_noFPU_r470.ab3@18874>       MOVE.w -$2(A1),D2
0002F63E <AmiBlitz3_noFPU_r470.ab3@18875>       LSL.w D2,D1
0002F640 <AmiBlitz3_noFPU_r470.ab3@18876>       MOVE.w D1,-(A7)
0002F644 <AmiBlitz3_noFPU_r470.ab3@18877>       MOVE.l -$A(A1),D1
0002F648 <AmiBlitz3_noFPU_r470.ab3@18878>       BSR.w Amakelibsub
0002F64C <AmiBlitz3_noFPU_r470.ab3@18879>       MOVE.w freemax3(PC),D1
0002F650 <AmiBlitz3_noFPU_r470.ab3@18880>       BSR.w writeword
0002F652 <AmiBlitz3_noFPU_r470.ab3@18881>       MOVE.w (A7)+,D1
0002F656 <AmiBlitz3_noFPU_r470.ab3@18882>       BSR.w writeword
0002F65A <AmiBlitz3_noFPU_r470.ab3@18883>       MOVE.l freemax2(PC),D1
0002F65E <AmiBlitz3_noFPU_r470.ab3@18884>       BSR.w writelong
0002F660 <AmiBlitz3_noFPU_r470.ab3@18885>       MOVE.l (A7)+,D1
0002F666 <AmiBlitz3_noFPU_r470.ab3@18886>       SUB.l destpointer,D1
0002F66A <AmiBlitz3_noFPU_r470.ab3@18887>       BSR.w writeword
0002F66E <AmiBlitz3_noFPU_r470.ab3@18888>       MOVE.w freemax4(PC),D1
0002F672 <AmiBlitz3_noFPU_r470.ab3@18889>       BSR.w writeword
0002F676 <AmiBlitz3_noFPU_r470.ab3@18892>     MOVE.l $1C(A2),D1
0002F67A <AmiBlitz3_noFPU_r470.ab3@18893>     BEQ.w JL_0_B99A
0002F67E <AmiBlitz3_noFPU_r470.ab3@18895>     MOVE.w $4(A2),D1
0002F682 <AmiBlitz3_noFPU_r470.ab3@18896>     CMP.w #-$2,D1
0002F686 <AmiBlitz3_noFPU_r470.ab3@18897>     BNE.w JL_0_BA50
0002F68A <AmiBlitz3_noFPU_r470.ab3@18898>       BSR.w makevsize
0002F68E <AmiBlitz3_noFPU_r470.ab3@18899> BRA.w JL_0_BA60
0002F692 <AmiBlitz3_noFPU_r470.ab3@18902>     CMP.w #-$12D,D1
0002F696 <AmiBlitz3_noFPU_r470.ab3@18903>     BNE.w JL_0_BA60
0002F69A <AmiBlitz3_noFPU_r470.ab3@18904>       BSR.w makessize
0002F69E <AmiBlitz3_noFPU_r470.ab3@18905> BRA.w JL_0_BA60
0002F6A2 <AmiBlitz3_noFPU_r470.ab3@18908>     MOVE.l $1C(A2),D1
0002F6AA <AmiBlitz3_noFPU_r470.ab3@18909>     MOVE.w #$FFFF,lasta6
0002F6AE <AmiBlitz3_noFPU_r470.ab3@18910>     BSR.w Amakelibsub
0002F6B2 <AmiBlitz3_noFPU_r470.ab3@18911> BRA.w JL_0_B99A
0002F6B4 <AmiBlitz3_noFPU_r470.ab3@18914> RTS
0002F6B8 <AmiBlitz3_noFPU_r470.ab3@18918> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002F6BA <AmiBlitz3_noFPU_r470.ab3@18920> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002F6BE <AmiBlitz3_noFPU_r470.ab3@18921>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002F6C0 <AmiBlitz3_noFPU_r470.ab3@18922> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002F6C4 <AmiBlitz3_noFPU_r470.ab3@18923> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002F6CA <AmiBlitz3_noFPU_r470.ab3@18928>   TST.b debugmode
0002F6CE <AmiBlitz3_noFPU_r470.ab3@18929>    BEQ.b chkstak__skip
0002F6D4 <AmiBlitz3_noFPU_r470.ab3@18930>   TST.w debugversion
0002F6D8 <AmiBlitz3_noFPU_r470.ab3@18931>    BNE.b chkstak__skip
0002F6DC <AmiBlitz3_noFPU_r470.ab3@18932>   MOVE.w #$C308,D1
0002F6E0 <AmiBlitz3_noFPU_r470.ab3@18933> BRA.w Atokejsr
0002F6E2 <AmiBlitz3_noFPU_r470.ab3@18936> RTS
0002F6EA <AmiBlitz3_noFPU_r470.ab3@18940>   MOVE.w #$FFFF,lasta6
0002F6EE <AmiBlitz3_noFPU_r470.ab3@18945>   MOVEM.l D0-d7/A0-a6,-(A7)
0002F6F6 <AmiBlitz3_noFPU_r470.ab3@18946>   MOVE.b #1,nostringopt
0002F6FC <AmiBlitz3_noFPU_r470.ab3@18947>   JSR searchinstr
0002F6FE <AmiBlitz3_noFPU_r470.ab3@18948>   MOVE.l A3,D1
0002F700 <AmiBlitz3_noFPU_r470.ab3@18949>   SUB.l A2,D1
0002F704 <AmiBlitz3_noFPU_r470.ab3@18950>   BSR.w Amakelibsub
0002F708 <AmiBlitz3_noFPU_r470.ab3@18951>   MOVEM.l (A7)+,d0-d7/a0-a6
0002F70A <AmiBlitz3_noFPU_r470.ab3@18952> RTS
0002F710 <AmiBlitz3_noFPU_r470.ab3@18959>   MOVE.l libisat,-(A7)                                   ;library write
0002F716 <AmiBlitz3_noFPU_r470.ab3@18960>   MOVE.l A2,libisat
0002F718 <AmiBlitz3_noFPU_r470.ab3@18962>   MOVEA.l A1,A2
0002F71A <AmiBlitz3_noFPU_r470.ab3@18963>   MOVE.w (A2)+,D1
0002F720 <AmiBlitz3_noFPU_r470.ab3@18964>   MOVE.l a2,lastinstructionaddr
0002F724 <AmiBlitz3_noFPU_r470.ab3@18965>   ANDI.w #$FF,D1
0002F726 <AmiBlitz3_noFPU_r470.ab3@18966>   ADDA.w D1,A2
0002F728 <AmiBlitz3_noFPU_r470.ab3@18967>   EXG.l D0,A2
0002F72A <AmiBlitz3_noFPU_r470.ab3@18968>   ADDQ.l #1,D0
0002F72E <AmiBlitz3_noFPU_r470.ab3@18969>   BCLR #$0,D0
0002F730 <AmiBlitz3_noFPU_r470.ab3@18970>   EXG.l D0,A2
0002F734 <AmiBlitz3_noFPU_r470.ab3@18971> BRA.w JL_0_BB08
0002F73A <AmiBlitz3_noFPU_r470.ab3@18975>   MOVE.l libisat,-(A7)
0002F740 <AmiBlitz3_noFPU_r470.ab3@18976>   MOVE.l A2,libisat
0002F742 <AmiBlitz3_noFPU_r470.ab3@18977>   MOVEA.l A3,A2
0002F746 <AmiBlitz3_noFPU_r470.ab3@18978> BRA.w JL_0_BB08
0002F748 <AmiBlitz3_noFPU_r470.ab3@18982>   MOVE.l a1,-(a7)
0002F74A <AmiBlitz3_noFPU_r470.ab3@18985>   MOVE.l d0,a0
0002F74E <AmiBlitz3_noFPU_r470.ab3@18986>   MOVE.l $a(a0),d0
0002F750 <AmiBlitz3_noFPU_r470.ab3@18987>   MOVE.l d0,a1
0002F758 <AmiBlitz3_noFPU_r470.ab3@18988>   CMP.l #8,4(a1)
0002F75C <AmiBlitz3_noFPU_r470.ab3@18989>   BLE 'norec
0002F75E <AmiBlitz3_noFPU_r470.ab3@18990>   MOVE.l a0,-(a7)
0002F764 <AmiBlitz3_noFPU_r470.ab3@18991>   MOVE.l typebase,-(a7)
0002F766 <AmiBlitz3_noFPU_r470.ab3@18992>   MOVEQ #0,d0
0002F76A <AmiBlitz3_noFPU_r470.ab3@18993>   MOVE.w 4(a0),d0
0002F770 <AmiBlitz3_noFPU_r470.ab3@18994>   ADD.l d0,typebase
0002F774 <AmiBlitz3_noFPU_r470.ab3@18995>   MOVE.l $4(a1),d0
0002F778 <AmiBlitz3_noFPU_r470.ab3@18996>   BSR scantype
0002F77E <AmiBlitz3_noFPU_r470.ab3@18997>   MOVE.l (a7)+,typebase
0002F780 <AmiBlitz3_noFPU_r470.ab3@18998>   MOVE.l (a7)+,a0
0002F786 <AmiBlitz3_noFPU_r470.ab3@19001>   CMP.l #newtype_string,d0
0002F78A <AmiBlitz3_noFPU_r470.ab3@19002>   BNE 'nostring
0002F790 <AmiBlitz3_noFPU_r470.ab3@19003>   ADDQ #2,a2offset
0002F796 <AmiBlitz3_noFPU_r470.ab3@19004>   MOVE.l #$3f3c0000,d1
0002F798 <AmiBlitz3_noFPU_r470.ab3@19005>   MOVEQ #0,d0
0002F79C <AmiBlitz3_noFPU_r470.ab3@19006>   MOVE.w 4(a0),d0
0002F7A2 <AmiBlitz3_noFPU_r470.ab3@19007>   ADD.l typebase,d0
0002F7A4 <AmiBlitz3_noFPU_r470.ab3@19008>   MOVE.w d0,d1
0002F7A8 <AmiBlitz3_noFPU_r470.ab3@19009>   BSR writelong
0002F7AE <AmiBlitz3_noFPU_r470.ab3@19010>   TST.b debugmode
0002F7B2 <AmiBlitz3_noFPU_r470.ab3@19011>   BEQ 'l1a
0002F7B4 <AmiBlitz3_noFPU_r470.ab3@19012>   MOVE.l d1,-(a7)
0002F7BA <AmiBlitz3_noFPU_r470.ab3@19013>   MOVE.l #$c308,d1
0002F7C0 <AmiBlitz3_noFPU_r470.ab3@19014>   JSR Atokejsr
0002F7C2 <AmiBlitz3_noFPU_r470.ab3@19015>   MOVE.l (a7)+,d1
0002F7C6 <AmiBlitz3_noFPU_r470.ab3@19018>   TST.w 8(a0)
0002F7CA <AmiBlitz3_noFPU_r470.ab3@19019>   BEQ 'nostring
0002F7CE <AmiBlitz3_noFPU_r470.ab3@19020>   MOVEM.l d2/d3,-(a7)
0002F7D0 <AmiBlitz3_noFPU_r470.ab3@19021>   MOVE.l d1,d2
0002F7D2 <AmiBlitz3_noFPU_r470.ab3@19022>   MOVEQ #0,d3
0002F7D6 <AmiBlitz3_noFPU_r470.ab3@19023>   MOVE.w 8(a0),d3
0002F7D8 <AmiBlitz3_noFPU_r470.ab3@19024>   SUBQ.l #1,d3
0002F7DC <AmiBlitz3_noFPU_r470.ab3@19025>   BEQ 'nostring2
0002F7DE <AmiBlitz3_noFPU_r470.ab3@19028>   ADDQ.l #4,d2
0002F7E0 <AmiBlitz3_noFPU_r470.ab3@19029>   MOVE.l d2,d1
0002F7E4 <AmiBlitz3_noFPU_r470.ab3@19030>   BSR writelong
0002F7EA <AmiBlitz3_noFPU_r470.ab3@19031>   TST.b debugmode
0002F7EE <AmiBlitz3_noFPU_r470.ab3@19032>   BEQ 'l1
0002F7F4 <AmiBlitz3_noFPU_r470.ab3@19033>   MOVE.l #$c308,d1
0002F7FA <AmiBlitz3_noFPU_r470.ab3@19034>   JSR Atokejsr
0002F800 <AmiBlitz3_noFPU_r470.ab3@19037>   ADDQ #2,a2offset
0002F802 <AmiBlitz3_noFPU_r470.ab3@19038>   SUBQ.l #1,d3
0002F806 <AmiBlitz3_noFPU_r470.ab3@19039>   BNE 'loop
0002F80A <AmiBlitz3_noFPU_r470.ab3@19042>   MOVEM.l (a7)+,d2/d3
0002F80C <AmiBlitz3_noFPU_r470.ab3@19045>   MOVE.l (a0),d0
0002F810 <AmiBlitz3_noFPU_r470.ab3@19046>   BNE 'more
0002F812 <AmiBlitz3_noFPU_r470.ab3@19047>   MOVE.l (a7)+,a1
0002F814 <AmiBlitz3_noFPU_r470.ab3@19048> RTS
0002F818 <AmiBlitz3_noFPU_r470.ab3@19051> libisat:   Ds.l 1
0002F81E <AmiBlitz3_noFPU_r470.ab3@19057>   MOVE.l libisat,-(A7)                                   
0002F824 <AmiBlitz3_noFPU_r470.ab3@19058>   MOVE.l A2,libisat
0002F828 <AmiBlitz3_noFPU_r470.ab3@19059>   LEA $6(A2,D1.L),A2
0002F830 <AmiBlitz3_noFPU_r470.ab3@19063>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002F834 <AmiBlitz3_noFPU_r470.ab3@19064>   BEQ 'dowritevar
0002F83C <AmiBlitz3_noFPU_r470.ab3@19065>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002F840 <AmiBlitz3_noFPU_r470.ab3@19066>   BEQ 'dowritevar
0002F848 <AmiBlitz3_noFPU_r470.ab3@19067>   CMP.l #$3e175265,$1c(a2)
0002F84C <AmiBlitz3_noFPU_r470.ab3@19068>   BEQ 'dowritevar
0002F854 <AmiBlitz3_noFPU_r470.ab3@19069>   CMP.l #$3e165772,$1c(a2)
0002F858 <AmiBlitz3_noFPU_r470.ab3@19070>   BNE 'nowritef
0002F85C <AmiBlitz3_noFPU_r470.ab3@19073>   MOVEM.l a0-a2/d2,-(a7)
0002F85E <AmiBlitz3_noFPU_r470.ab3@19074>   MOVEQ #0,d1
0002F868 <AmiBlitz3_noFPU_r470.ab3@19075>   MOVE.l #0,typebase
0002F86C <AmiBlitz3_noFPU_r470.ab3@19076>   MOVE.l $a(a3),a0
0002F870 <AmiBlitz3_noFPU_r470.ab3@19077>   MOVE.l $4(a0),d0
0002F876 <AmiBlitz3_noFPU_r470.ab3@19078>   CMP.l #8,d0
0002F87A <AmiBlitz3_noFPU_r470.ab3@19079>   BLE 'notype
0002F87E <AmiBlitz3_noFPU_r470.ab3@19080>   BSR scantype
0002F884 <AmiBlitz3_noFPU_r470.ab3@19083>   MOVE.l #$3f3c0000,d1
0002F88A <AmiBlitz3_noFPU_r470.ab3@19084>   MOVE.w a2offset,d1
0002F88E <AmiBlitz3_noFPU_r470.ab3@19085>   BSR writelong
0002F894 <AmiBlitz3_noFPU_r470.ab3@19086>   MOVE.l #$3f3c0000,d1
0002F898 <AmiBlitz3_noFPU_r470.ab3@19087>   MOVE.l $a(a3),a0
0002F89C <AmiBlitz3_noFPU_r470.ab3@19088>   MOVE.w 8(a0),d1
0002F8A0 <AmiBlitz3_noFPU_r470.ab3@19089>   BSR writelong
0002F8A6 <AmiBlitz3_noFPU_r470.ab3@19090>   MOVE.l #$3f3cab12,d1
0002F8AA <AmiBlitz3_noFPU_r470.ab3@19091>   BSR writelong
0002F8B0 <AmiBlitz3_noFPU_r470.ab3@19092>   ADDQ.w #6,a2offset
0002F8B4 <AmiBlitz3_noFPU_r470.ab3@19093>   MOVEM.l (a7)+,a0-a2/d2
0002F8BA <AmiBlitz3_noFPU_r470.ab3@19096>   TST.b fpu
0002F8BE <AmiBlitz3_noFPU_r470.ab3@19097>   BEQ 'nofpu2
0002F8C6 <AmiBlitz3_noFPU_r470.ab3@19098>   CMP.l #$496e7400,$1a(a2)
0002F8CA <AmiBlitz3_noFPU_r470.ab3@19099>   BNE 'noint
0002F8CC <AmiBlitz3_noFPU_r470.ab3@19100>   MOVEQ #0,d1
0002F8D2 <AmiBlitz3_noFPU_r470.ab3@19101>   SUBQ.l #8,destpointer                                    ;fpu int
0002F8D8 <AmiBlitz3_noFPU_r470.ab3@19102>   CLR.w a2offset
0002F8DC <AmiBlitz3_noFPU_r470.ab3@19103>   CMP.b #2,d2
0002F8E0 <AmiBlitz3_noFPU_r470.ab3@19104>   BGT 'noword
0002F8E4 <AmiBlitz3_noFPU_r470.ab3@19105>   MOVE.w #$48c0,d1
0002F8EA <AmiBlitz3_noFPU_r470.ab3@19106>   OR.w regnumstore,d1
0002F8EE <AmiBlitz3_noFPU_r470.ab3@19107>   BSR writeword
0002F8F2 <AmiBlitz3_noFPU_r470.ab3@19108> BRA 'exit2
0002F8F6 <AmiBlitz3_noFPU_r470.ab3@19111>    CMP.b #3,d2
0002F8FA <AmiBlitz3_noFPU_r470.ab3@19112>         BNE 'nolong
0002F8FE <AmiBlitz3_noFPU_r470.ab3@19113> BRA 'exit2
0002F902 <AmiBlitz3_noFPU_r470.ab3@19116>    CMP.b #4,d2
0002F906 <AmiBlitz3_noFPU_r470.ab3@19117>         BNE 'noquick
0002F90A <AmiBlitz3_noFPU_r470.ab3@19118>         MOVE.w #$e080,d1
0002F910 <AmiBlitz3_noFPU_r470.ab3@19119>         OR.w regnumstore,d1
0002F914 <AmiBlitz3_noFPU_r470.ab3@19120>         BSR writeword
0002F918 <AmiBlitz3_noFPU_r470.ab3@19121>         MOVE.w #$e080,d1
0002F91E <AmiBlitz3_noFPU_r470.ab3@19122>         OR.w regnumstore,d1
0002F922 <AmiBlitz3_noFPU_r470.ab3@19123>         BSR writeword
0002F926 <AmiBlitz3_noFPU_r470.ab3@19124> BRA 'exit2
0002F928 <AmiBlitz3_noFPU_r470.ab3@19127>         MOVEQ #0,d0
0002F92A <AmiBlitz3_noFPU_r470.ab3@19128>         MOVEQ #0,d1
0002F930 <AmiBlitz3_noFPU_r470.ab3@19129>         MOVE.w regnumstore,d0
0002F932 <AmiBlitz3_noFPU_r470.ab3@19130>         ASL.l #7,d0
0002F938 <AmiBlitz3_noFPU_r470.ab3@19131>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002F93A <AmiBlitz3_noFPU_r470.ab3@19132>         OR.l d0,d1
0002F940 <AmiBlitz3_noFPU_r470.ab3@19134>         MOVE.l #$3f000000,d1
0002F942 <AmiBlitz3_noFPU_r470.ab3@19136>         MOVEQ #0,d0
0002F944 <AmiBlitz3_noFPU_r470.ab3@19137>         MOVEQ #0,d1
0002F94A <AmiBlitz3_noFPU_r470.ab3@19138>         MOVE.w regnumstore,d0
0002F94C <AmiBlitz3_noFPU_r470.ab3@19139>         ASL.l #7,d0
0002F94E <AmiBlitz3_noFPU_r470.ab3@19140>         MOVE.l d0,d1
0002F954 <AmiBlitz3_noFPU_r470.ab3@19141>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002F956 <AmiBlitz3_noFPU_r470.ab3@19142>         ASL.l #3,d0
0002F958 <AmiBlitz3_noFPU_r470.ab3@19143>         OR.l d0,d1
0002F95C <AmiBlitz3_noFPU_r470.ab3@19144>         BSR writelong
0002F95E <AmiBlitz3_noFPU_r470.ab3@19145>         MOVEQ #0,d0
0002F964 <AmiBlitz3_noFPU_r470.ab3@19146>         MOVE.w regnumstore,d0
0002F966 <AmiBlitz3_noFPU_r470.ab3@19147>         ASL.l #7,d0
0002F96C <AmiBlitz3_noFPU_r470.ab3@19148>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002F96E <AmiBlitz3_noFPU_r470.ab3@19149>         OR.l d0,d1
0002F970 <AmiBlitz3_noFPU_r470.ab3@19150>         ASL.l #1,d0
0002F972 <AmiBlitz3_noFPU_r470.ab3@19151>         ASL.l #8,d0
0002F974 <AmiBlitz3_noFPU_r470.ab3@19152>         OR.l d0,d1
0002F978 <AmiBlitz3_noFPU_r470.ab3@19153> BRA 'exit
0002F97E <AmiBlitz3_noFPU_r470.ab3@19156>   CMP.w #$3c01,24(a2)
0002F982 <AmiBlitz3_noFPU_r470.ab3@19157>   BNE 'noval
0002F984 <AmiBlitz3_noFPU_r470.ab3@19158>   MOVE.l a2,-(a7)
0002F988 <AmiBlitz3_noFPU_r470.ab3@19159>   BSR.w JL_0_BB14
0002F98A <AmiBlitz3_noFPU_r470.ab3@19160>   MOVE.l (a7)+,a2
0002F98E <AmiBlitz3_noFPU_r470.ab3@19161> BRA 'exit2
0002F996 <AmiBlitz3_noFPU_r470.ab3@19178>   CMP.l #$41627300,$1a(a2)
0002F99A <AmiBlitz3_noFPU_r470.ab3@19179>   BNE 'noabs
0002F99C <AmiBlitz3_noFPU_r470.ab3@19180>   MOVEQ #0,d1
0002F9A2 <AmiBlitz3_noFPU_r470.ab3@19181>   MOVE.w regnumstore,d1
0002F9A4 <AmiBlitz3_noFPU_r470.ab3@19182>   MOVE.w d1,d0
0002F9A6 <AmiBlitz3_noFPU_r470.ab3@19183>   ASL.w #7,d1
0002F9A8 <AmiBlitz3_noFPU_r470.ab3@19184>   ASL.w #8,d0
0002F9AA <AmiBlitz3_noFPU_r470.ab3@19185>   ASL.w #2,d0
0002F9AC <AmiBlitz3_noFPU_r470.ab3@19186>   OR.w d0,d1
0002F9B2 <AmiBlitz3_noFPU_r470.ab3@19187>   SUBQ.l #8,destpointer                                    ;fpu abs
0002F9B6 <AmiBlitz3_noFPU_r470.ab3@19188>   MOVEM.l d3/d1,-(a7)
0002F9BA <AmiBlitz3_noFPU_r470.ab3@19189>   MOVE.w #5,d3
0002F9BC <AmiBlitz3_noFPU_r470.ab3@19190>   EXG d2,d3
0002F9C2 <AmiBlitz3_noFPU_r470.ab3@19191>   MOVE.w regnum,-(a7)
0002F9CC <AmiBlitz3_noFPU_r470.ab3@19192>   MOVE.w regnumstore,regnum
0002F9D0 <AmiBlitz3_noFPU_r470.ab3@19193>   BSR writeconvertcode
0002F9D6 <AmiBlitz3_noFPU_r470.ab3@19194>   MOVE.w (a7)+,regnum
0002F9D8 <AmiBlitz3_noFPU_r470.ab3@19195>   EXG d2,d3
0002F9DC <AmiBlitz3_noFPU_r470.ab3@19196>   MOVEM.l (a7)+,d3/d1
0002F9E2 <AmiBlitz3_noFPU_r470.ab3@19197>   OR.l #$f2000018,d1
0002F9E8 <AmiBlitz3_noFPU_r470.ab3@19198>   CLR.w a2offset
0002F9EC <AmiBlitz3_noFPU_r470.ab3@19199> BRA 'exit
0002F9F0 <AmiBlitz3_noFPU_r470.ab3@19202>   CMP.b #5,d2
0002F9F4 <AmiBlitz3_noFPU_r470.ab3@19203>   BNE 'nofpu2
0002F9F8 <AmiBlitz3_noFPU_r470.ab3@19204>   MOVE.b 24(a2),d0
0002F9FC <AmiBlitz3_noFPU_r470.ab3@19205>   CMP.b #$60,d0                                            ;nolib $edxx
0002FA00 <AmiBlitz3_noFPU_r470.ab3@19206>   BNE 'nofpu
0002FA02 <AmiBlitz3_noFPU_r470.ab3@19207>   MOVEQ #0,d1
0002FA08 <AmiBlitz3_noFPU_r470.ab3@19208>   MOVE.w regnumstore,d1
0002FA0A <AmiBlitz3_noFPU_r470.ab3@19209>   MOVE.w d1,d0
0002FA0C <AmiBlitz3_noFPU_r470.ab3@19210>   ASL.w #7,d1
0002FA0E <AmiBlitz3_noFPU_r470.ab3@19211>   ASL.w #8,d0
0002FA10 <AmiBlitz3_noFPU_r470.ab3@19212>   ASL.w #2,d0
0002FA12 <AmiBlitz3_noFPU_r470.ab3@19213>   OR.w d0,d1
0002FA16 <AmiBlitz3_noFPU_r470.ab3@19214>   MOVE.b 25(a2),d0
0002FA1A <AmiBlitz3_noFPU_r470.ab3@19215>   CMP.b #5,d0
0002FA1E <AmiBlitz3_noFPU_r470.ab3@19216>   BNE 'nocos
0002FA24 <AmiBlitz3_noFPU_r470.ab3@19217>   OR.l #$f200001d,d1                                       ;fpu cos
0002FA28 <AmiBlitz3_noFPU_r470.ab3@19218> BRA 'exit
0002FA2C <AmiBlitz3_noFPU_r470.ab3@19221>   CMP.b #$c,d0
0002FA30 <AmiBlitz3_noFPU_r470.ab3@19222>   BNE 'nosqr
0002FA36 <AmiBlitz3_noFPU_r470.ab3@19223>   OR.l #$f2000004,d1                                       ;fpu sqr
0002FA3A <AmiBlitz3_noFPU_r470.ab3@19224> BRA 'exit
0002FA3E <AmiBlitz3_noFPU_r470.ab3@19227>   CMP.b #$d,d0
0002FA42 <AmiBlitz3_noFPU_r470.ab3@19228>   BNE 'notan
0002FA48 <AmiBlitz3_noFPU_r470.ab3@19229>   OR.l #$f200000f,d1                                       ;fpu tan
0002FA4C <AmiBlitz3_noFPU_r470.ab3@19230> BRA 'exit
0002FA50 <AmiBlitz3_noFPU_r470.ab3@19233>   CMP.b #$a,d0
0002FA54 <AmiBlitz3_noFPU_r470.ab3@19234>   BNE 'nosin
0002FA5A <AmiBlitz3_noFPU_r470.ab3@19235>   OR.l #$f200000e,d1                                       ;fpu sin
0002FA5E <AmiBlitz3_noFPU_r470.ab3@19236> BRA 'exit
0002FA62 <AmiBlitz3_noFPU_r470.ab3@19239>   CMP.b #$3,d0
0002FA66 <AmiBlitz3_noFPU_r470.ab3@19240>   BNE 'noasin
0002FA6C <AmiBlitz3_noFPU_r470.ab3@19241>   OR.l #$f200000c,d1                                       ;fpu asin
0002FA70 <AmiBlitz3_noFPU_r470.ab3@19242> BRA 'exit
0002FA74 <AmiBlitz3_noFPU_r470.ab3@19245>   CMP.b #$2,d0
0002FA78 <AmiBlitz3_noFPU_r470.ab3@19246>   BNE 'noacos
0002FA7E <AmiBlitz3_noFPU_r470.ab3@19247>   OR.l #$f200001c,d1                                       ;fpu acos
0002FA82 <AmiBlitz3_noFPU_r470.ab3@19248> BRA 'exit
0002FA86 <AmiBlitz3_noFPU_r470.ab3@19251>   CMP.b #$4,d0
0002FA8A <AmiBlitz3_noFPU_r470.ab3@19252>   BNE 'noatan
0002FA90 <AmiBlitz3_noFPU_r470.ab3@19253>   OR.l #$f200000a,d1                                       ;fpu atan
0002FA94 <AmiBlitz3_noFPU_r470.ab3@19254> BRA 'exit
0002FA98 <AmiBlitz3_noFPU_r470.ab3@19257>   CMP.b #$e,d0
0002FA9C <AmiBlitz3_noFPU_r470.ab3@19258>   BNE 'nohtan
0002FAA2 <AmiBlitz3_noFPU_r470.ab3@19259>   OR.l #$f2000009,d1                                       ;fpu htan
0002FAA6 <AmiBlitz3_noFPU_r470.ab3@19260> BRA 'exit
0002FAAA <AmiBlitz3_noFPU_r470.ab3@19263>   CMP.b #$6,d0
0002FAAE <AmiBlitz3_noFPU_r470.ab3@19264>   BNE 'nohcos
0002FAB4 <AmiBlitz3_noFPU_r470.ab3@19265>   OR.l #$f2000019,d1                                       ;fpu hcos
0002FAB8 <AmiBlitz3_noFPU_r470.ab3@19266> BRA 'exit
0002FABC <AmiBlitz3_noFPU_r470.ab3@19269>   CMP.b #$b,d0
0002FAC0 <AmiBlitz3_noFPU_r470.ab3@19270>   BNE 'nohsin
0002FAC6 <AmiBlitz3_noFPU_r470.ab3@19271>   OR.l #$f2000002,d1                                       ;fpu hsin
0002FACA <AmiBlitz3_noFPU_r470.ab3@19272> BRA 'exit
0002FACE <AmiBlitz3_noFPU_r470.ab3@19275>   CMP.b #$9,d0
0002FAD2 <AmiBlitz3_noFPU_r470.ab3@19276>   BNE 'nolog
0002FAD8 <AmiBlitz3_noFPU_r470.ab3@19277>   OR.l #$f2000014,d1                                       ;fpu log
0002FADC <AmiBlitz3_noFPU_r470.ab3@19278> BRA 'exit
0002FAE0 <AmiBlitz3_noFPU_r470.ab3@19281>   CMP.b #$8,d0
0002FAE4 <AmiBlitz3_noFPU_r470.ab3@19282>   BNE 'nolog10
0002FAEA <AmiBlitz3_noFPU_r470.ab3@19283>   OR.l #$f2000015,d1                                       ;fpu log10
0002FAEE <AmiBlitz3_noFPU_r470.ab3@19284> BRA 'exit
0002FAF2 <AmiBlitz3_noFPU_r470.ab3@19287>   CMP.b #$7,d0
0002FAF6 <AmiBlitz3_noFPU_r470.ab3@19288>   BNE 'noexp
0002FAFC <AmiBlitz3_noFPU_r470.ab3@19289>   OR.l #$f2000010,d1                                       ;fpu exp
0002FB00 <AmiBlitz3_noFPU_r470.ab3@19290> BRA 'exit
0002FB06 <AmiBlitz3_noFPU_r470.ab3@19293>   LEA fpuerr,a0
0002FB08 <AmiBlitz3_noFPU_r470.ab3@19294>   MOVE.l a0,-(a7)
0002FB0E <AmiBlitz3_noFPU_r470.ab3@19295> JMP handle_compileerror
0002FB12 <AmiBlitz3_noFPU_r470.ab3@19299>   CMP.b #$3c,d0
0002FB16 <AmiBlitz3_noFPU_r470.ab3@19300>   BNE 'nofpu2
0002FB18 <AmiBlitz3_noFPU_r470.ab3@19301>   MOVEQ #0,d1
0002FB1E <AmiBlitz3_noFPU_r470.ab3@19302>       MOVE.w regnumstore,d1
0002FB20 <AmiBlitz3_noFPU_r470.ab3@19303>       MOVE.w d1,d0
0002FB22 <AmiBlitz3_noFPU_r470.ab3@19304>       ASL.w #7,d1
0002FB24 <AmiBlitz3_noFPU_r470.ab3@19305>       ASL.w #8,d0
0002FB26 <AmiBlitz3_noFPU_r470.ab3@19306>       ASL.w #2,d0
0002FB28 <AmiBlitz3_noFPU_r470.ab3@19307>       OR.w d0,d1
0002FB2E <AmiBlitz3_noFPU_r470.ab3@19308>       CMP.b #$03,25(a2)
0002FB32 <AmiBlitz3_noFPU_r470.ab3@19309>       BNE 'nosgn
0002FB38 <AmiBlitz3_noFPU_r470.ab3@19312>       SUBQ.l #8,destpointer                                ;fpu sgn
0002FB3E <AmiBlitz3_noFPU_r470.ab3@19313>         OR.l #$f200003a,d1
0002FB42 <AmiBlitz3_noFPU_r470.ab3@19314>         BSR writelong
0002FB48 <AmiBlitz3_noFPU_r470.ab3@19315>         CLR.w a2offset
0002FB4E <AmiBlitz3_noFPU_r470.ab3@19316>          MOVE.l #$F28E0006,d1
0002FB52 <AmiBlitz3_noFPU_r470.ab3@19317>          BSR writelong
0002FB58 <AmiBlitz3_noFPU_r470.ab3@19318>   MOVE.l #$7000600a,d1
0002FB5C <AmiBlitz3_noFPU_r470.ab3@19319>   BSR writelong
0002FB62 <AmiBlitz3_noFPU_r470.ab3@19320>   MOVE.l #$70014840,d1
0002FB66 <AmiBlitz3_noFPU_r470.ab3@19321>   BSR writelong
0002FB6C <AmiBlitz3_noFPU_r470.ab3@19322>   MOVE.l #$F292,d1
0002FB70 <AmiBlitz3_noFPU_r470.ab3@19323>   BSR writeword
0002FB76 <AmiBlitz3_noFPU_r470.ab3@19324>   MOVE.l #$000470FF,d1
0002FB7A <AmiBlitz3_noFPU_r470.ab3@19325> BRA 'exit
0002FB82 <AmiBlitz3_noFPU_r470.ab3@19328>   CMP.l #"Frac",$1a(a2)
0002FB86 <AmiBlitz3_noFPU_r470.ab3@19329>   BNE 'nofrac
0002FB8C <AmiBlitz3_noFPU_r470.ab3@19330> JMP notwork
0002FB90 <AmiBlitz3_noFPU_r470.ab3@19371> BRA 'exit
0002FB94 <AmiBlitz3_noFPU_r470.ab3@19375>   BSR.w JL_0_BB14                                          ;write lib code
0002FB9A <AmiBlitz3_noFPU_r470.ab3@19376>   MOVE.l (A7)+,libisat
0002FB9C <AmiBlitz3_noFPU_r470.ab3@19377> RTS
0002FBA0 <AmiBlitz3_noFPU_r470.ab3@19380>   BSR writelong
0002FBA6 <AmiBlitz3_noFPU_r470.ab3@19383>   MOVE.l (A7)+,libisat
0002FBA8 <AmiBlitz3_noFPU_r470.ab3@19384> RTS
0002FBAC <AmiBlitz3_noFPU_r470.ab3@19388>   BSR.w fetchregs
0002FBB2 <AmiBlitz3_noFPU_r470.ab3@19389>   TST.b debugmode
0002FBB6 <AmiBlitz3_noFPU_r470.ab3@19390>    BEQ.w JL_0_BB76
0002FBB8 <AmiBlitz3_noFPU_r470.ab3@19391>   MOVE.l (A2),D1
0002FBBC <AmiBlitz3_noFPU_r470.ab3@19392>   OR.l $8(A2),D1
0002FBC0 <AmiBlitz3_noFPU_r470.ab3@19393>   BCLR #$0,D1
0002FBC2 <AmiBlitz3_noFPU_r470.ab3@19394>   TST.l D1
0002FBC6 <AmiBlitz3_noFPU_r470.ab3@19395>    BEQ.w JL_0_BB76
0002FBC8 <AmiBlitz3_noFPU_r470.ab3@19396>   MOVE.l (A2)+,D1
0002FBCC <AmiBlitz3_noFPU_r470.ab3@19397>   BTST #$0,D1
0002FBD0 <AmiBlitz3_noFPU_r470.ab3@19398>    BEQ.w JL_0_BB60
0002FBD6 <AmiBlitz3_noFPU_r470.ab3@19399>   TST.w blitzmode
0002FBDA <AmiBlitz3_noFPU_r470.ab3@19400>    BPL.w blitzerr
0002FBE0 <AmiBlitz3_noFPU_r470.ab3@19401>   TST.b debugmode
0002FBE4 <AmiBlitz3_noFPU_r470.ab3@19402>    BEQ.w JL_0_BB5C
0002FBE6 <AmiBlitz3_noFPU_r470.ab3@19403>   MOVE.l D1,-(A7)
0002FBEA <AmiBlitz3_noFPU_r470.ab3@19404>   MOVE.w #$C311,D1
0002FBEE <AmiBlitz3_noFPU_r470.ab3@19405>    BSR.w makebtst
0002FBF0 <AmiBlitz3_noFPU_r470.ab3@19406>   MOVE.l (A7)+,D1
0002FBF4 <AmiBlitz3_noFPU_r470.ab3@19409>   BCLR #$0,D1
0002FBF6 <AmiBlitz3_noFPU_r470.ab3@19412>   TST.l D1
0002FBFA <AmiBlitz3_noFPU_r470.ab3@19413>    BSR.w JL_0_BBC6
0002FBFC <AmiBlitz3_noFPU_r470.ab3@19414>   MOVE.l (A2)+,D1
0002FC00 <AmiBlitz3_noFPU_r470.ab3@19415>    BSR.w JL_0_BB98
0002FC02 <AmiBlitz3_noFPU_r470.ab3@19416>   MOVE.l (A2)+,D1
0002FC06 <AmiBlitz3_noFPU_r470.ab3@19417>    BSR.w JL_0_BBC6
0002FC0A <AmiBlitz3_noFPU_r470.ab3@19418> BRA.w JL_0_BB90
0002FC10 <AmiBlitz3_noFPU_r470.ab3@19421>   BTST #$0,$3(A2)
0002FC14 <AmiBlitz3_noFPU_r470.ab3@19422>    BEQ.w JL_0_BB88
0002FC18 <AmiBlitz3_noFPU_r470.ab3@19423>   MOVE.w blitzmode(PC),D1
0002FC1C <AmiBlitz3_noFPU_r470.ab3@19424>    BPL.w blitzerr
0002FC20 <AmiBlitz3_noFPU_r470.ab3@19427>   MOVE.l $4(A2),D1
0002FC24 <AmiBlitz3_noFPU_r470.ab3@19428>    BSR.w JL_0_BB98
0002FC2A <AmiBlitz3_noFPU_r470.ab3@19431>   MOVEA.l libisat,A2
0002FC2C <AmiBlitz3_noFPU_r470.ab3@19432> RTS
0002FC30 <AmiBlitz3_noFPU_r470.ab3@19435>   BTST #$0,D1
0002FC34 <AmiBlitz3_noFPU_r470.ab3@19436>    BEQ.w JL_0_BBC4
0002FC3A <AmiBlitz3_noFPU_r470.ab3@19437>   TST.w blitzmode
0002FC3E <AmiBlitz3_noFPU_r470.ab3@19438>    BMI.w amigaerr
0002FC44 <AmiBlitz3_noFPU_r470.ab3@19439>   TST.b debugmode
0002FC48 <AmiBlitz3_noFPU_r470.ab3@19440>    BEQ.w JL_0_BBC0
0002FC4A <AmiBlitz3_noFPU_r470.ab3@19441>   MOVE.l D1,-(A7)
0002FC4E <AmiBlitz3_noFPU_r470.ab3@19442>   MOVE.w #$C312,D1
0002FC52 <AmiBlitz3_noFPU_r470.ab3@19443>    BSR.w makebtst
0002FC54 <AmiBlitz3_noFPU_r470.ab3@19444>   MOVE.l (A7)+,D1
0002FC58 <AmiBlitz3_noFPU_r470.ab3@19447>   BCLR #$0,D1
0002FC5A <AmiBlitz3_noFPU_r470.ab3@19450>   TST.l D1
0002FC5E <AmiBlitz3_noFPU_r470.ab3@19453>    BEQ.w JL_0_BBD2
0002FC60 <AmiBlitz3_noFPU_r470.ab3@19454>   MOVE.l A1,-(A7)
0002FC64 <AmiBlitz3_noFPU_r470.ab3@19455>    BSR.w JL_0_BBD4
0002FC66 <AmiBlitz3_noFPU_r470.ab3@19456>   MOVEA.l (A7)+,A1
0002FC68 <AmiBlitz3_noFPU_r470.ab3@19459> RTS
0002FC6E <AmiBlitz3_noFPU_r470.ab3@19462>   MOVEA.l libisat,A0
0002FC74 <AmiBlitz3_noFPU_r470.ab3@19463>   TST.w cfetchmode
0002FC78 <AmiBlitz3_noFPU_r470.ab3@19464>    BEQ.w JL_0_BBF6
0002FC7A <AmiBlitz3_noFPU_r470.ab3@19465>   ADD.l A0,D1
0002FC7C <AmiBlitz3_noFPU_r470.ab3@19466>   MOVE.l D1,-(A7)
0002FC80 <AmiBlitz3_noFPU_r470.ab3@19467>   MOVE.w #$4EB9,D1
0002FC84 <AmiBlitz3_noFPU_r470.ab3@19468>    BSR.w writeword
0002FC86 <AmiBlitz3_noFPU_r470.ab3@19469>   MOVE.l (A7)+,D1
0002FC8A <AmiBlitz3_noFPU_r470.ab3@19470> BRA.w writelong
0002FC8E <AmiBlitz3_noFPU_r470.ab3@19473>   LEA $0(A0,D1.L),A1
0002FC94 <AmiBlitz3_noFPU_r470.ab3@19474>   CLR.w inline
0002FC98 <AmiBlitz3_noFPU_r470.ab3@19477>   CMPI.b #$A0,(A1)+
0002FC9C <AmiBlitz3_noFPU_r470.ab3@19478>    BNE.w JL_0_BC68
0002FC9E <AmiBlitz3_noFPU_r470.ab3@19479>   TST.b (A1)+
0002FCA2 <AmiBlitz3_noFPU_r470.ab3@19480>    BEQ.w JL_0_BC18
0002FCA8 <AmiBlitz3_noFPU_r470.ab3@19481>   CMPI.b #$1,-$1(A1)
0002FCAC <AmiBlitz3_noFPU_r470.ab3@19482>    BEQ.w JL_0_BC24
0002FCB2 <AmiBlitz3_noFPU_r470.ab3@19485>   MOVE.w (A1)+,inline
0002FCB4 <AmiBlitz3_noFPU_r470.ab3@19486>   ADDQ.l #4,D1
0002FCB8 <AmiBlitz3_noFPU_r470.ab3@19487> BRA.w JL_0_BC00
0002FCBE <AmiBlitz3_noFPU_r470.ab3@19490>   TST.w blitzmode
0002FCC2 <AmiBlitz3_noFPU_r470.ab3@19491>    BPL.w JL_0_BC4A
0002FCC8 <AmiBlitz3_noFPU_r470.ab3@19492>   TST.b debugmode
0002FCCC <AmiBlitz3_noFPU_r470.ab3@19493>    BEQ.w JL_0_BC40
0002FCD0 <AmiBlitz3_noFPU_r470.ab3@19494>   MOVE.w #$C311,D1
0002FCD4 <AmiBlitz3_noFPU_r470.ab3@19495>    BSR.w makebtst
0002FCD6 <AmiBlitz3_noFPU_r470.ab3@19498>   MOVE.l (A1)+,D1
0002FCDA <AmiBlitz3_noFPU_r470.ab3@19499>   LEA $0(A0,D1.L),A1
0002FCDE <AmiBlitz3_noFPU_r470.ab3@19500> BRA.w JL_0_BC00
0002FCE4 <AmiBlitz3_noFPU_r470.ab3@19503>   TST.b debugmode
0002FCE8 <AmiBlitz3_noFPU_r470.ab3@19504>    BEQ.w JL_0_BC60
0002FCEA <AmiBlitz3_noFPU_r470.ab3@19505>   MOVE.l D1,-(A7)
0002FCEE <AmiBlitz3_noFPU_r470.ab3@19506>   MOVE.w #$C312,D1
0002FCF2 <AmiBlitz3_noFPU_r470.ab3@19507>    BSR.w makebtst
0002FCF4 <AmiBlitz3_noFPU_r470.ab3@19508>   MOVE.l (A7)+,D1
0002FCF6 <AmiBlitz3_noFPU_r470.ab3@19511>   ADDQ.w #4,A1
0002FCF8 <AmiBlitz3_noFPU_r470.ab3@19512>   ADDQ.l #6,D1
0002FCFC <AmiBlitz3_noFPU_r470.ab3@19513> BRA.w JL_0_BC00
0002FD02 <AmiBlitz3_noFPU_r470.ab3@19516>   TST.w inline
0002FD06 <AmiBlitz3_noFPU_r470.ab3@19517>    BEQ.w JL_0_BC7E
0002FD08 <AmiBlitz3_noFPU_r470.ab3@19518>   SUBQ.w #1,A1
0002FD0A <AmiBlitz3_noFPU_r470.ab3@19519>   MOVEA.l A1,A0
0002FD0E <AmiBlitz3_noFPU_r470.ab3@19520>   ADDA.w inline(PC),A1
0002FD12 <AmiBlitz3_noFPU_r470.ab3@19521> BRA.w pokecode2
0002FD16 <AmiBlitz3_noFPU_r470.ab3@19524>   MOVEM.l a0/D1,-(A7)
0002FD1C <AmiBlitz3_noFPU_r470.ab3@19525>   TST.w debugversion
0002FD20 <AmiBlitz3_noFPU_r470.ab3@19526>   BEQ 'l11
0002FD28 <AmiBlitz3_noFPU_r470.ab3@19527>   BTST #$7,link_debuginfo
0002FD2C <AmiBlitz3_noFPU_r470.ab3@19528>   BEQ.w 'l11
0002FD32 <AmiBlitz3_noFPU_r470.ab3@19529>   MOVE.l lastinstruction,d1
0002FD36 <AmiBlitz3_noFPU_r470.ab3@19530>   BEQ 'l11
0002FD3C <AmiBlitz3_noFPU_r470.ab3@19531>   CLR.l lastinstruction
0002FD42 <AmiBlitz3_noFPU_r470.ab3@19532>   CMP.l #$e000,d1
0002FD46 <AmiBlitz3_noFPU_r470.ab3@19533>   BGE 'ln99
0002FD4C <AmiBlitz3_noFPU_r470.ab3@19534>   LEA notf,a0
0002FD52 <AmiBlitz3_noFPU_r470.ab3@19535>   CMP.l #$c601,d1
0002FD56 <AmiBlitz3_noFPU_r470.ab3@19536>   BNE 'ln1
0002FD5C <AmiBlitz3_noFPU_r470.ab3@19537>   LEA strcpy,a0
0002FD60 <AmiBlitz3_noFPU_r470.ab3@19538> BRA 'ln3
0002FD66 <AmiBlitz3_noFPU_r470.ab3@19541>   CMP.l #$c700,d1
0002FD6A <AmiBlitz3_noFPU_r470.ab3@19542>   BNE 'ln2
0002FD70 <AmiBlitz3_noFPU_r470.ab3@19543>   LEA strvar,a0
0002FD74 <AmiBlitz3_noFPU_r470.ab3@19544> BRA 'ln3
0002FD7A <AmiBlitz3_noFPU_r470.ab3@19547>   CMP.l #$ce00,d1
0002FD7E <AmiBlitz3_noFPU_r470.ab3@19548>   BNE 'ln4
0002FD84 <AmiBlitz3_noFPU_r470.ab3@19549>   LEA strcmp,a0
0002FD88 <AmiBlitz3_noFPU_r470.ab3@19550> BRA 'ln3
0002FD8E <AmiBlitz3_noFPU_r470.ab3@19553>   CMP.l #$ca00,d1
0002FD92 <AmiBlitz3_noFPU_r470.ab3@19554>   BNE 'ln5
0002FD98 <AmiBlitz3_noFPU_r470.ab3@19555>   LEA qmul,a0
0002FD9C <AmiBlitz3_noFPU_r470.ab3@19556> BRA 'ln3
0002FDA2 <AmiBlitz3_noFPU_r470.ab3@19559>   CMP.l #$d000,d1
0002FDA6 <AmiBlitz3_noFPU_r470.ab3@19560>      BNE 'ln6
0002FDAC <AmiBlitz3_noFPU_r470.ab3@19561>      LEA _MaxLen,a0
0002FDB0 <AmiBlitz3_noFPU_r470.ab3@19562> BRA 'ln3
0002FDB6 <AmiBlitz3_noFPU_r470.ab3@19565>   CMP.l #$cb00,d1
0002FDBA <AmiBlitz3_noFPU_r470.ab3@19566>   BNE 'ln3
0002FDC0 <AmiBlitz3_noFPU_r470.ab3@19567>   LEA qdiv,a0
0002FDC4 <AmiBlitz3_noFPU_r470.ab3@19568> BRA 'ln3
0002FDC6 <AmiBlitz3_noFPU_r470.ab3@19571>   MOVE.l d1,a0
0002FDCA <AmiBlitz3_noFPU_r470.ab3@19572>   LEA $8(a0),a0
0002FDCE <AmiBlitz3_noFPU_r470.ab3@19575>   CMP.w #$ffff,(a0)+
0002FDD2 <AmiBlitz3_noFPU_r470.ab3@19576>   BNE 'l1
0002FDD6 <AmiBlitz3_noFPU_r470.ab3@19577>   LEA 6(a0),a0
0002FDDA <AmiBlitz3_noFPU_r470.ab3@19580>   MOVEM.l a1/a2/d7/d2,-(a7)
0002FDDC <AmiBlitz3_noFPU_r470.ab3@19581>   MOVEQ #0,d2
0002FDE2 <AmiBlitz3_noFPU_r470.ab3@19582>   LEA ptr_parameterstore,a1
0002FDE4 <AmiBlitz3_noFPU_r470.ab3@19585>   ADDQ.l #1,d2
0002FDE6 <AmiBlitz3_noFPU_r470.ab3@19586>   MOVE.b (a0)+,d0
0002FDEA <AmiBlitz3_noFPU_r470.ab3@19587> 
0002FDEE <AmiBlitz3_noFPU_r470.ab3@19588>   BNE 'nodollar
0002FDF2 <AmiBlitz3_noFPU_r470.ab3@19589>   MOVE.b #"S",d0
0002FDF6 <AmiBlitz3_noFPU_r470.ab3@19591>   CMP.b #"?",d0
0002FDFA <AmiBlitz3_noFPU_r470.ab3@19592>   BEQ 'nolabelwrite
0002FDFC <AmiBlitz3_noFPU_r470.ab3@19593>   MOVE.b d0,(a1)+
0002FE00 <AmiBlitz3_noFPU_r470.ab3@19594>   BNE 'l2
0002FE06 <AmiBlitz3_noFPU_r470.ab3@19595>   MOVE.w #"__",-1(a1)
0002FE08 <AmiBlitz3_noFPU_r470.ab3@19596>   ADDQ.l #2,d2
0002FE0C <AmiBlitz3_noFPU_r470.ab3@19597>   CLR.b 1(a1)
0002FE12 <AmiBlitz3_noFPU_r470.ab3@19598>   JSR findlabel2
0002FE16 <AmiBlitz3_noFPU_r470.ab3@19599>   BEQ 'l3
0002FE1C <AmiBlitz3_noFPU_r470.ab3@19600>   JSR addlabelhash
0002FE20 <AmiBlitz3_noFPU_r470.ab3@19603>   CLR.l 4(a2)
0002FE24 <AmiBlitz3_noFPU_r470.ab3@19604>   MOVE.l $14(a7),a0
0002FE28 <AmiBlitz3_noFPU_r470.ab3@19605>   MOVE.l $10(a7),d1
0002FE2C <AmiBlitz3_noFPU_r470.ab3@19606>   SUB.l $12(a0),d1
0002FE30 <AmiBlitz3_noFPU_r470.ab3@19607>   ADD.l $28(a0),d1
0002FE34 <AmiBlitz3_noFPU_r470.ab3@19608>   MOVE.l d1,8(a2)
0002FE38 <AmiBlitz3_noFPU_r470.ab3@19609> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
0002FE3E <AmiBlitz3_noFPU_r470.ab3@19612>   TST.b typecheck
0002FE42 <AmiBlitz3_noFPU_r470.ab3@19613>   BEQ 'p1
0002FE48 <AmiBlitz3_noFPU_r470.ab3@19614>   MOVE.l lasttoken,d1
0002FE4E <AmiBlitz3_noFPU_r470.ab3@19615>   CMP.l #$da01,d1                                          ;poke
0002FE52 <AmiBlitz3_noFPU_r470.ab3@19616>   BEQ 'lp1
0002FE58 <AmiBlitz3_noFPU_r470.ab3@19617>   CMP.l #$da02,d1                                          ;peek
0002FE5C <AmiBlitz3_noFPU_r470.ab3@19618>   BNE 'p1
0002FE62 <AmiBlitz3_noFPU_r470.ab3@19621>   TST.b peekaddrsize
0002FE66 <AmiBlitz3_noFPU_r470.ab3@19622>   BEQ 'p1
0002FE6E <AmiBlitz3_noFPU_r470.ab3@19623>   CMP.b #3,peekaddrsize
0002FE72 <AmiBlitz3_noFPU_r470.ab3@19624>   BNE errormsg_onlylong
0002FE78 <AmiBlitz3_noFPU_r470.ab3@19625>   CLR.b peekaddrsize
0002FE7E <AmiBlitz3_noFPU_r470.ab3@19633>    TST.b fpu
0002FE82 <AmiBlitz3_noFPU_r470.ab3@19634>   BNE 'optf
0002FE88 <AmiBlitz3_noFPU_r470.ab3@19635>   TST.b fast
0002FE8C <AmiBlitz3_noFPU_r470.ab3@19636>   BEQ JL11a2
0002FE94 <AmiBlitz3_noFPU_r470.ab3@19643>   CMP.l #"Poke",20(a2)                                     ;poke
0002FE98 <AmiBlitz3_noFPU_r470.ab3@19644>   BNE peekopt
0002FE9C <AmiBlitz3_noFPU_r470.ab3@19645>   TST.b 24(a2)
0002FEA0 <AmiBlitz3_noFPU_r470.ab3@19646>   BNE peekopt
0002FEA4 <AmiBlitz3_noFPU_r470.ab3@19647>   CMP.b #3,d2
0002FEA8 <AmiBlitz3_noFPU_r470.ab3@19648>   BNE 'lw1
0002FEAE <AmiBlitz3_noFPU_r470.ab3@19651>   MOVE.l #$21821990,d1
0002FEB2 <AmiBlitz3_noFPU_r470.ab3@19652> BRA.s 'lpx
0002FEB6 <AmiBlitz3_noFPU_r470.ab3@19655>   CMP.b #2,d2
0002FEBA <AmiBlitz3_noFPU_r470.ab3@19656>   BNE 'lb1
0002FEC0 <AmiBlitz3_noFPU_r470.ab3@19657>   MOVE.l #$31821990,d1
0002FEC4 <AmiBlitz3_noFPU_r470.ab3@19658> BRA.s 'lpx
0002FEC8 <AmiBlitz3_noFPU_r470.ab3@19661>   CMP.b #1,d2
0002FECC <AmiBlitz3_noFPU_r470.ab3@19662>   BNE 'lp3
0002FED2 <AmiBlitz3_noFPU_r470.ab3@19663>   MOVE.l #$11821990,d1
0002FED6 <AmiBlitz3_noFPU_r470.ab3@19664> BRA.s 'lpx
0002FEDA <AmiBlitz3_noFPU_r470.ab3@19667>   CMP.b #5,d2
0002FEDE <AmiBlitz3_noFPU_r470.ab3@19668>     BNE JL11a2
0002FEE4 <AmiBlitz3_noFPU_r470.ab3@19669>     TST.b fpu
0002FEE8 <AmiBlitz3_noFPU_r470.ab3@19670>     BEQ 'll1
0002FEEE <AmiBlitz3_noFPU_r470.ab3@19671>      MOVE.l destpointer,a4
0002FEF6 <AmiBlitz3_noFPU_r470.ab3@19672>     CMP.l #$f22d4500,-6(a4)
0002FEFA <AmiBlitz3_noFPU_r470.ab3@19673>     BNE 'noglob
0002FF00 <AmiBlitz3_noFPU_r470.ab3@19674>     TST.b doublepeek
0002FF04 <AmiBlitz3_noFPU_r470.ab3@19675>     BNE 'noglob
0002FF0A <AmiBlitz3_noFPU_r470.ab3@19676>     MOVE.w -2(a4),-4(a4)
0002FF10 <AmiBlitz3_noFPU_r470.ab3@19677>     MOVE.w #$21ad,-6(a4)
0002FF16 <AmiBlitz3_noFPU_r470.ab3@19678>     MOVE.w #$1990,-2(a4)
0002FF1E <AmiBlitz3_noFPU_r470.ab3@19679>     MOVE.w #9,peeksize
0002FF20 <AmiBlitz3_noFPU_r470.ab3@19680>     ADDQ #8,a7
0002FF22 <AmiBlitz3_noFPU_r470.ab3@19681> RTS
0002FF2A <AmiBlitz3_noFPU_r470.ab3@19684>     CMP.l #$f22c4500,-6(a4)
0002FF2E <AmiBlitz3_noFPU_r470.ab3@19685>     BNE 'nolocal
0002FF34 <AmiBlitz3_noFPU_r470.ab3@19686>     MOVE.w -2(a4),-4(a4)
0002FF3A <AmiBlitz3_noFPU_r470.ab3@19687>     TST.b doublepeek                                       ;dont move longfix on double floats
0002FF3E <AmiBlitz3_noFPU_r470.ab3@19688>     BNE 'nolocal
0002FF44 <AmiBlitz3_noFPU_r470.ab3@19689>     MOVE.w #$21ac,-6(a4)
0002FF4A <AmiBlitz3_noFPU_r470.ab3@19690>     MOVE.w #$1990,-2(a4)
0002FF52 <AmiBlitz3_noFPU_r470.ab3@19691>     MOVE.w #9,peeksize
0002FF54 <AmiBlitz3_noFPU_r470.ab3@19692>     ADDQ #8,a7
0002FF56 <AmiBlitz3_noFPU_r470.ab3@19693> RTS
0002FF5A <AmiBlitz3_noFPU_r470.ab3@19696>     MOVE.w #$f230,d1
0002FF5E <AmiBlitz3_noFPU_r470.ab3@19697>     BSR writeword
0002FF64 <AmiBlitz3_noFPU_r470.ab3@19698>   MOVE.l #$65001990,d1
0002FF6A <AmiBlitz3_noFPU_r470.ab3@19699>   TST.b doublepeek
0002FF6E <AmiBlitz3_noFPU_r470.ab3@19700>   BEQ 'lpx
0002FF74 <AmiBlitz3_noFPU_r470.ab3@19701>   OR.l   #$10000000,d1
0002FF76 <AmiBlitz3_noFPU_r470.ab3@19705>   ADDQ #8,a7
0002FF7E <AmiBlitz3_noFPU_r470.ab3@19706>   MOVE.w #9,peeksize
0002FF82 <AmiBlitz3_noFPU_r470.ab3@19707> BRA writelong
0002FF8A <AmiBlitz3_noFPU_r470.ab3@19710>   CMP.l #"Peek",20(a2)
0002FF8E <AmiBlitz3_noFPU_r470.ab3@19711>   BNE 'l10
0002FF92 <AmiBlitz3_noFPU_r470.ab3@19712>   TST.b 24(a2)
0002FF96 <AmiBlitz3_noFPU_r470.ab3@19713>   BNE 'l10
0002FF9E <AmiBlitz3_noFPU_r470.ab3@19714>   CMP.w #7,peeksize
0002FFA2 <AmiBlitz3_noFPU_r470.ab3@19715>   BEQ 'l10
0002FFAA <AmiBlitz3_noFPU_r470.ab3@19716>    CMP.w #3,peeksize
0002FFAE <AmiBlitz3_noFPU_r470.ab3@19717>    BNE.s 'lw1
0002FFB4 <AmiBlitz3_noFPU_r470.ab3@19720>   MOVE.l #$20301990,d1
0002FFB8 <AmiBlitz3_noFPU_r470.ab3@19721> BRA exitjsr
0002FFC0 <AmiBlitz3_noFPU_r470.ab3@19724>   CMP.w #2,peeksize
0002FFC4 <AmiBlitz3_noFPU_r470.ab3@19725>    BNE.s 'lb1
0002FFCA <AmiBlitz3_noFPU_r470.ab3@19726>    MOVE.l #$30301990,d1
0002FFCE <AmiBlitz3_noFPU_r470.ab3@19727> BRA exitjsr
0002FFD6 <AmiBlitz3_noFPU_r470.ab3@19730>   CMP.w #1,peeksize
0002FFDA <AmiBlitz3_noFPU_r470.ab3@19731>    BNE.s 'lf1
0002FFE0 <AmiBlitz3_noFPU_r470.ab3@19732>    MOVE.l #$10301990,d1
0002FFE4 <AmiBlitz3_noFPU_r470.ab3@19733> BRA exitjsr
0002FFEC <AmiBlitz3_noFPU_r470.ab3@19736>   CMP.w #5,peeksize
0002FFF0 <AmiBlitz3_noFPU_r470.ab3@19737>    BNE 'l10
0002FFF6 <AmiBlitz3_noFPU_r470.ab3@19738>    TST.b fpu
0002FFFA <AmiBlitz3_noFPU_r470.ab3@19739>    BEQ 'll1
0002FFFE <AmiBlitz3_noFPU_r470.ab3@19740>    MOVE.w #$f230,d1
00030002 <AmiBlitz3_noFPU_r470.ab3@19741>    BSR writeword
00030004 <AmiBlitz3_noFPU_r470.ab3@19742>    MOVEQ #0,d1
0003000A <AmiBlitz3_noFPU_r470.ab3@19743>    MOVE.w tempregnum,d1
0003000C <AmiBlitz3_noFPU_r470.ab3@19744>    ASL.l #7,d1
0003000E <AmiBlitz3_noFPU_r470.ab3@19745>    ASL.l #8,d1
00030010 <AmiBlitz3_noFPU_r470.ab3@19746>    ASL.l #8,d1
00030016 <AmiBlitz3_noFPU_r470.ab3@19747>    ADD.l #$44001990,d1
0003001C <AmiBlitz3_noFPU_r470.ab3@19748>     TST.b doublepeek
00030020 <AmiBlitz3_noFPU_r470.ab3@19749>     BEQ 'lpx2
00030026 <AmiBlitz3_noFPU_r470.ab3@19750>     OR.l   #$10000000,d1
0003002A <AmiBlitz3_noFPU_r470.ab3@19752> BRA exitjsr
0003002E <AmiBlitz3_noFPU_r470.ab3@19756>   MOVE.w #$4EB9,D1
00030032 <AmiBlitz3_noFPU_r470.ab3@19757>    BSR.w writeword                                         ;writesysjsr
00030036 <AmiBlitz3_noFPU_r470.ab3@19758>   MOVEM.l (A7)+,a0/D1
0003003C <AmiBlitz3_noFPU_r470.ab3@19759>    JSR addoff
00030040 <AmiBlitz3_noFPU_r470.ab3@19760>   SUB.l $12(A0),D1
00030044 <AmiBlitz3_noFPU_r470.ab3@19761>   ADD.l $28(A0),D1
00030048 <AmiBlitz3_noFPU_r470.ab3@19762> BRA.w writelong
0003004A <AmiBlitz3_noFPU_r470.ab3@19767>   MOVE.w D1,-(A7)
0003004E <AmiBlitz3_noFPU_r470.ab3@19768>   MOVE.w tstmode(PC),D1
00030052 <AmiBlitz3_noFPU_r470.ab3@19769>    BSR.w writeword
00030056 <AmiBlitz3_noFPU_r470.ab3@19770>    BSR.w getbbase
0003005A <AmiBlitz3_noFPU_r470.ab3@19771>    BSR.w writeword
0003005C <AmiBlitz3_noFPU_r470.ab3@19772>   MOVE.w (A7)+,D1
00030060 <AmiBlitz3_noFPU_r470.ab3@19773>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
00030064 <AmiBlitz3_noFPU_r470.ab3@19774>    BSR.w Atokejsr
00030068 <AmiBlitz3_noFPU_r470.ab3@19775>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0003006A <AmiBlitz3_noFPU_r470.ab3@19776> RTS
0003006E <AmiBlitz3_noFPU_r470.ab3@19784>   MOVE.w blitzoff(PC),D1
00030072 <AmiBlitz3_noFPU_r470.ab3@19785>   CMP.w #-$1,D1
00030076 <AmiBlitz3_noFPU_r470.ab3@19786>    BNE.w getbbase__done
0003007C <AmiBlitz3_noFPU_r470.ab3@19787>   ADDQ.w #1,globalvarpointer
00030084 <AmiBlitz3_noFPU_r470.ab3@19788>   BCLR #$0,globalvarpointer+1
0003008A <AmiBlitz3_noFPU_r470.ab3@19789>   MOVE.w globalvarpointer,D1
00030090 <AmiBlitz3_noFPU_r470.ab3@19790>   MOVE.w D1,blitzoff
00030096 <AmiBlitz3_noFPU_r470.ab3@19791>   ADDQ.w #2,globalvarpointer
00030098 <AmiBlitz3_noFPU_r470.ab3@19794> RTS
0003009C <AmiBlitz3_noFPU_r470.ab3@19798> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
0003009E <AmiBlitz3_noFPU_r470.ab3@19801> inline:     Ds.w 1
000300A0 <AmiBlitz3_noFPU_r470.ab3@19802> blitzoff:   Dc.w $FFFF                                   ;-1 org source
000300A2 <AmiBlitz3_noFPU_r470.ab3@19803> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
000300A4 <AmiBlitz3_noFPU_r470.ab3@19807>   MOVE.w (A2)+,D1
000300A8 <AmiBlitz3_noFPU_r470.ab3@19808>    BEQ.w fetchregs__done
000300AA <AmiBlitz3_noFPU_r470.ab3@19809>   MOVE.w (A2)+,D2
000300AE <AmiBlitz3_noFPU_r470.ab3@19810>    BSR.w toreg
000300B2 <AmiBlitz3_noFPU_r470.ab3@19811> BRA.w fetchregs
000300B4 <AmiBlitz3_noFPU_r470.ab3@19814> RTS
000300B8 <AmiBlitz3_noFPU_r470.ab3@19819>   CMP.w #-$100,D2
000300BC <AmiBlitz3_noFPU_r470.ab3@19820>    BCC.w toreg__yeah
000300C0 <AmiBlitz3_noFPU_r470.ab3@19822>   BCLR #$F,D2
000300C4 <AmiBlitz3_noFPU_r470.ab3@19823>    BEQ.w toreg__nobm
000300CA <AmiBlitz3_noFPU_r470.ab3@19825>   TST.w blitzmode
000300CE <AmiBlitz3_noFPU_r470.ab3@19826>    BMI.w toreg__yeah
000300D0 <AmiBlitz3_noFPU_r470.ab3@19827> RTS
000300D4 <AmiBlitz3_noFPU_r470.ab3@19830>   BCLR #$E,D2
000300D8 <AmiBlitz3_noFPU_r470.ab3@19831>    BEQ.w toreg__yeah
000300DE <AmiBlitz3_noFPU_r470.ab3@19833>   TST.w blitzmode
000300E2 <AmiBlitz3_noFPU_r470.ab3@19834>    BPL.w toreg__yeah
000300E4 <AmiBlitz3_noFPU_r470.ab3@19835> RTS
000300EA <AmiBlitz3_noFPU_r470.ab3@19838>   JSR uselib
000300EC <AmiBlitz3_noFPU_r470.ab3@19839>   TST.b D2
000300F0 <AmiBlitz3_noFPU_r470.ab3@19840>    BEQ.w toreg__norm
000300F4 <AmiBlitz3_noFPU_r470.ab3@19841>   CMP.b #$4,D2
000300F8 <AmiBlitz3_noFPU_r470.ab3@19842>    BNE.w toreg__suv
000300FC <AmiBlitz3_noFPU_r470.ab3@19843>   MOVE.w #$0004,-(A7)
00030102 <AmiBlitz3_noFPU_r470.ab3@19844>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00030106 <AmiBlitz3_noFPU_r470.ab3@19845> BRA.w toreg__sendmd
0003010A <AmiBlitz3_noFPU_r470.ab3@19848>   CMP.b #$3,D2
0003010E <AmiBlitz3_noFPU_r470.ab3@19849>    BNE.w toreg__notnmax
00030110 <AmiBlitz3_noFPU_r470.ab3@19850>   CLR.w -(A7)
00030116 <AmiBlitz3_noFPU_r470.ab3@19851>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00030118 <AmiBlitz3_noFPU_r470.ab3@19857>   LSR.w #8,D2
0003011C <AmiBlitz3_noFPU_r470.ab3@19858>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00030120 <AmiBlitz3_noFPU_r470.ab3@19859>   BTST #$7,D2
00030124 <AmiBlitz3_noFPU_r470.ab3@19860>    BEQ.w toreg__skipad
00030128 <AmiBlitz3_noFPU_r470.ab3@19861>   MOVE.w #$307C,D1                                         ;move.w #x,an
0003012C <AmiBlitz3_noFPU_r470.ab3@19862>   CMP.w #$16,D2
00030130 <AmiBlitz3_noFPU_r470.ab3@19863>    BNE.w toreg__skipad
00030138 <AmiBlitz3_noFPU_r470.ab3@19864>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0003013C <AmiBlitz3_noFPU_r470.ab3@19867>   ANDI.w #$7,D2
0003013E <AmiBlitz3_noFPU_r470.ab3@19868>   LSL.w #8,D2
00030140 <AmiBlitz3_noFPU_r470.ab3@19869>   LSL.w #1,D2
00030142 <AmiBlitz3_noFPU_r470.ab3@19870>   OR.w D2,D1
00030146 <AmiBlitz3_noFPU_r470.ab3@19871>    BSR.w writeword
0003014A <AmiBlitz3_noFPU_r470.ab3@19872>   MOVE.l $12(A1),D1
0003014C <AmiBlitz3_noFPU_r470.ab3@19873>   ADD.l (A7)+,D1
00030150 <AmiBlitz3_noFPU_r470.ab3@19874>   MOVE.w $0(A1,D1.L),D1
00030152 <AmiBlitz3_noFPU_r470.ab3@19875>   ADD.w (A7)+,D1
00030156 <AmiBlitz3_noFPU_r470.ab3@19876> BRA.w writeword
00030158 <AmiBlitz3_noFPU_r470.ab3@19879>   MOVE.w D2,-(A7)
0003015A <AmiBlitz3_noFPU_r470.ab3@19880>   LSR.w #8,D2
0003015E <AmiBlitz3_noFPU_r470.ab3@19881>   CMP.w #$16,D2
00030162 <AmiBlitz3_noFPU_r470.ab3@19882>    BNE.w toreg__isnta6
0003016A <AmiBlitz3_noFPU_r470.ab3@19883>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
0003016E <AmiBlitz3_noFPU_r470.ab3@19886>   MOVE.l $12(A1),D1                                        ;objectspace
00030172 <AmiBlitz3_noFPU_r470.ab3@19887>   MOVE.w -$6(A1,D1.L),-(A7)
00030176 <AmiBlitz3_noFPU_r470.ab3@19888>    BSR.w makeregop
0003017A <AmiBlitz3_noFPU_r470.ab3@19889>    BSR.w writeword
0003017C <AmiBlitz3_noFPU_r470.ab3@19890>   MOVE.w (A7)+,D1
0003017E <AmiBlitz3_noFPU_r470.ab3@19891>   MOVE.w (A7)+,D2
00030180 <AmiBlitz3_noFPU_r470.ab3@19892>   TST.b D2
00030184 <AmiBlitz3_noFPU_r470.ab3@19893>    BPL.w toreg__skippy1
00030188 <AmiBlitz3_noFPU_r470.ab3@19898>    BSR.w writeword                                         ;move.l x(a5),dn
0003018A <AmiBlitz3_noFPU_r470.ab3@19899>   MOVE.w D2,-(A7)                                          ;store reg used
0003018E <AmiBlitz3_noFPU_r470.ab3@19901>   ADDA.l $12(A1),A1
00030190 <AmiBlitz3_noFPU_r470.ab3@19902>   MOVE.b D2,D1
00030194 <AmiBlitz3_noFPU_r470.ab3@19903>   ANDI.w #$7,D1
0003019A <AmiBlitz3_noFPU_r470.ab3@19905>   TST.b debugmode
0003019E <AmiBlitz3_noFPU_r470.ab3@19906>    BEQ.w toreg__norerr
000301A0 <AmiBlitz3_noFPU_r470.ab3@19908>   MOVE.w D1,-(A7)
000301A2 <AmiBlitz3_noFPU_r470.ab3@19909>   LSL.w #8,D1
000301A4 <AmiBlitz3_noFPU_r470.ab3@19910>   LSL.w #1,D1
000301A8 <AmiBlitz3_noFPU_r470.ab3@19911>   ORI.w #$B07C,D1                                          ;cmp #x,dn
000301AC <AmiBlitz3_noFPU_r470.ab3@19912>    BSR.w writeword
000301B0 <AmiBlitz3_noFPU_r470.ab3@19913>   MOVE.w -$4(A1),D1
000301B4 <AmiBlitz3_noFPU_r470.ab3@19914>    BSR.w writeword
000301B8 <AmiBlitz3_noFPU_r470.ab3@19915>   MOVE.l maxchk(PC),D1                                  ;bcs
000301BC <AmiBlitz3_noFPU_r470.ab3@19916>    BSR.w writelong
000301BE <AmiBlitz3_noFPU_r470.ab3@19917>   MOVE.l A2,-(A7)
000301C2 <AmiBlitz3_noFPU_r470.ab3@19918>   MOVE.w #$C30A,D1
000301C6 <AmiBlitz3_noFPU_r470.ab3@19919>    BSR.w Atokejsr
000301C8 <AmiBlitz3_noFPU_r470.ab3@19920>   MOVEA.l (A7)+,A2
000301CA <AmiBlitz3_noFPU_r470.ab3@19921>   MOVE.w (A7)+,D1
000301CE <AmiBlitz3_noFPU_r470.ab3@19924>   MOVE.w -$2(A1),D2                                        ;shift amount
000301D2 <AmiBlitz3_noFPU_r470.ab3@19927>   CMP.w #$9,D2
000301D6 <AmiBlitz3_noFPU_r470.ab3@19928>    BCS.w toreg__simp
000301DA <AmiBlitz3_noFPU_r470.ab3@19929>   MOVEM.w D1-D2,-(A7)
000301DC <AmiBlitz3_noFPU_r470.ab3@19931>   MOVEQ.l #$00,D2                                          ;!!!!!
000301DE <AmiBlitz3_noFPU_r470.ab3@19933>   LSL.w #8,D2
000301E0 <AmiBlitz3_noFPU_r470.ab3@19934>   LSL.w #1,D2
000301E2 <AmiBlitz3_noFPU_r470.ab3@19935>   OR.w D2,D1
000301E6 <AmiBlitz3_noFPU_r470.ab3@19936>   OR.w lsldn(PC),D1
000301EA <AmiBlitz3_noFPU_r470.ab3@19937>    BSR.w writeword
000301EE <AmiBlitz3_noFPU_r470.ab3@19938>   MOVEM.w (A7)+,D1-D2
000301F0 <AmiBlitz3_noFPU_r470.ab3@19939>   SUBQ.w #8,D2
000301F4 <AmiBlitz3_noFPU_r470.ab3@19940> BRA.w toreg__shloop
000301F6 <AmiBlitz3_noFPU_r470.ab3@19943>   MOVE.w D1,-(A7)
000301FA <AmiBlitz3_noFPU_r470.ab3@19944>   OR.w #$48c0,d1
000301FE <AmiBlitz3_noFPU_r470.ab3@19945>   BSR writeword
00030200 <AmiBlitz3_noFPU_r470.ab3@19946>   MOVE.w (a7),d1
00030202 <AmiBlitz3_noFPU_r470.ab3@19947>   TST.w D2
00030206 <AmiBlitz3_noFPU_r470.ab3@19948>   BEQ.w toreg__simp2
0003020A <AmiBlitz3_noFPU_r470.ab3@19950>   ANDI.w #$7,D2                                            ;?????
0003020C <AmiBlitz3_noFPU_r470.ab3@19952>   LSL.w #8,D2
0003020E <AmiBlitz3_noFPU_r470.ab3@19953>   LSL.w #1,D2
00030210 <AmiBlitz3_noFPU_r470.ab3@19954>   OR.w D2,D1
00030214 <AmiBlitz3_noFPU_r470.ab3@19955>   OR.w lsldn(PC),D1
00030218 <AmiBlitz3_noFPU_r470.ab3@19956>    BSR.w writeword
0003021A <AmiBlitz3_noFPU_r470.ab3@19962>   MOVE.w (A7)+,D1
0003021E <AmiBlitz3_noFPU_r470.ab3@19963>   ANDI.w #$7,D1
00030222 <AmiBlitz3_noFPU_r470.ab3@19964>   OR.w maxdo(PC),D1
00030224 <AmiBlitz3_noFPU_r470.ab3@19965>   MOVE.w (A7)+,D2
00030226 <AmiBlitz3_noFPU_r470.ab3@19966>   LSL.w #1,D2
0003022A <AmiBlitz3_noFPU_r470.ab3@19967>   ANDI.w #$E00,D2
0003022C <AmiBlitz3_noFPU_r470.ab3@19968>   OR.w D2,D1
00030230 <AmiBlitz3_noFPU_r470.ab3@19969> BRA.w writeword
00030234 <AmiBlitz3_noFPU_r470.ab3@19972>   CMP.b #$1,D2
00030238 <AmiBlitz3_noFPU_r470.ab3@19973>    BEQ.w toreg__skippy
0003023A <AmiBlitz3_noFPU_r470.ab3@19977>   ADDQ.w #4,D1
00030240 <AmiBlitz3_noFPU_r470.ab3@19979>   TST.b debugmode
00030244 <AmiBlitz3_noFPU_r470.ab3@19980>    BEQ.w toreg__skippy
00030248 <AmiBlitz3_noFPU_r470.ab3@19982>    BSR.w writeword
0003024A <AmiBlitz3_noFPU_r470.ab3@19983>   SWAP D1
0003024E <AmiBlitz3_noFPU_r470.ab3@19984>   MOVE.w toreg__theretest(PC),D1
00030250 <AmiBlitz3_noFPU_r470.ab3@19985>   SWAP D1
00030254 <AmiBlitz3_noFPU_r470.ab3@19986>    BSR.w writelong
00030258 <AmiBlitz3_noFPU_r470.ab3@19987>   MOVE.l toreg__theretest+4(PC),D1
0003025C <AmiBlitz3_noFPU_r470.ab3@19988>    BSR.w writelong
00030260 <AmiBlitz3_noFPU_r470.ab3@19989>   MOVE.l toreg__theretest+8(PC),D1
00030264 <AmiBlitz3_noFPU_r470.ab3@19990> BRA.w writelong
00030268 <AmiBlitz3_noFPU_r470.ab3@19993> BRA.w writeword
0003026C <AmiBlitz3_noFPU_r470.ab3@19998>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030270 <AmiBlitz3_noFPU_r470.ab3@19999>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
00030272 <AmiBlitz3_noFPU_r470.ab3@20000>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030274 <AmiBlitz3_noFPU_r470.ab3@20001>             Dc.b $4E,$40                                   ;TRAP   #00
00030276 <AmiBlitz3_noFPU_r470.ab3@20006>   LSR.w #8,D2
0003027A <AmiBlitz3_noFPU_r470.ab3@20007>   CMP.b #$16,D2
0003027E <AmiBlitz3_noFPU_r470.ab3@20008>    BNE.w toreg__nota6
00030282 <AmiBlitz3_noFPU_r470.ab3@20009>   MOVE.w $A(A1),D1
00030288 <AmiBlitz3_noFPU_r470.ab3@20010>   CMP.w lasta6,D1
0003028C <AmiBlitz3_noFPU_r470.ab3@20011>    BEQ.w toreg__sk
00030292 <AmiBlitz3_noFPU_r470.ab3@20012>   MOVE.w D1,lasta6
00030296 <AmiBlitz3_noFPU_r470.ab3@20015>    BSR.w makeregop
0003029A <AmiBlitz3_noFPU_r470.ab3@20016>   TST.w $1A(A1)
0003029E <AmiBlitz3_noFPU_r470.ab3@20017>    BPL.w toreg__long
000302A2 <AmiBlitz3_noFPU_r470.ab3@20018>   CMP.w stackop(PC),D1
000302A6 <AmiBlitz3_noFPU_r470.ab3@20019>    BNE.w toreg__notst
000302AC <AmiBlitz3_noFPU_r470.ab3@20020>   SUBQ.w #2,a2offset
000302B0 <AmiBlitz3_noFPU_r470.ab3@20023>    ORI.w #$1000,D1
000302B4 <AmiBlitz3_noFPU_r470.ab3@20026>    BSR.w writeword
000302B8 <AmiBlitz3_noFPU_r470.ab3@20027>   MOVE.w $A(A1),D1
000302BC <AmiBlitz3_noFPU_r470.ab3@20028>    BSR.w writeword
000302BE <AmiBlitz3_noFPU_r470.ab3@20031> RTS
000302C0 <AmiBlitz3_noFPU_r470.ab3@20035> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
000302C4 <AmiBlitz3_noFPU_r470.ab3@20036> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
000302CA <AmiBlitz3_noFPU_r470.ab3@20037>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
000302CC <AmiBlitz3_noFPU_r470.ab3@20040> 
000302CE <AmiBlitz3_noFPU_r470.ab3@20043>             Dc.b $00,$00
000302D2 <AmiBlitz3_noFPU_r470.ab3@20044> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
000302D6 <AmiBlitz3_noFPU_r470.ab3@20051>   CMP.b #$FF,D2
000302DA <AmiBlitz3_noFPU_r470.ab3@20052>    BNE.w makeregop__notst
000302DE <AmiBlitz3_noFPU_r470.ab3@20053>   MOVE.w stackop(PC),D1
000302E4 <AmiBlitz3_noFPU_r470.ab3@20054>   ADDQ.w #4,a2offset
000302E6 <AmiBlitz3_noFPU_r470.ab3@20055> RTS
000302E8 <AmiBlitz3_noFPU_r470.ab3@20058>   MOVE.l A3,-(A7)
000302EE <AmiBlitz3_noFPU_r470.ab3@20059>   LEA regtransd,A3
000302F2 <AmiBlitz3_noFPU_r470.ab3@20060>   BTST #$4,D2
000302F6 <AmiBlitz3_noFPU_r470.ab3@20061>    BEQ.w makeregop__skip
000302FC <AmiBlitz3_noFPU_r470.ab3@20062>   LEA regtransa,A3
00030300 <AmiBlitz3_noFPU_r470.ab3@20065>   ANDI.w #$7,D2
00030302 <AmiBlitz3_noFPU_r470.ab3@20066>   MOVE.w D2,D1
00030304 <AmiBlitz3_noFPU_r470.ab3@20067>   LSL.w #8,D1
00030306 <AmiBlitz3_noFPU_r470.ab3@20068>   LSL.w #1,D1
00030308 <AmiBlitz3_noFPU_r470.ab3@20069>   OR.w (A3),D1
0003030A <AmiBlitz3_noFPU_r470.ab3@20070>   MOVEA.l (A7)+,A3
0003030C <AmiBlitz3_noFPU_r470.ab3@20071> RTS
00030310 <AmiBlitz3_noFPU_r470.ab3@20077>   CMP.w #$3C,D0
00030314 <AmiBlitz3_noFPU_r470.ab3@20078>    BCS.w ifchar__no
00030318 <AmiBlitz3_noFPU_r470.ab3@20079>   CMP.w #$3E,D0
0003031C <AmiBlitz3_noFPU_r470.ab3@20080>    BHI.w ifchar__no
00030320 <AmiBlitz3_noFPU_r470.ab3@20081>   SUBI.w #$3C,D0
00030322 <AmiBlitz3_noFPU_r470.ab3@20082>   CMP.w D0,D0
00030324 <AmiBlitz3_noFPU_r470.ab3@20085> RTS
0003032E <AmiBlitz3_noFPU_r470.ab3@20090>   MOVE.w oldqflag,instringon
00030334 <AmiBlitz3_noFPU_r470.ab3@20091>   MOVEA.l lastsourcepos,A5
0003033A <AmiBlitz3_noFPU_r470.ab3@20096>   MOVE.w regnum,-(A7)
00030340 <AmiBlitz3_noFPU_r470.ab3@20097>   CLR.w regnum
00030346 <AmiBlitz3_noFPU_r470.ab3@20098>   MOVE.l destpointer,-(A7)
0003034C <AmiBlitz3_noFPU_r470.ab3@20099>   MOVE.l destbufferend,-(A7)
00030352 <AmiBlitz3_noFPU_r470.ab3@20100>   MOVE.w dontwrite,-(A7)
00030358 <AmiBlitz3_noFPU_r470.ab3@20101>   MOVE.w lasta6,-(A7)
0003035E <AmiBlitz3_noFPU_r470.ab3@20102>   MOVE.w cfetchmode,-(A7)
00030362 <AmiBlitz3_noFPU_r470.ab3@20103>    BNE.w JL_0_BFB6
0003036C <AmiBlitz3_noFPU_r470.ab3@20104>   MOVE.l destbufferend,oldlibat
00030372 <AmiBlitz3_noFPU_r470.ab3@20105>   MOVEA.l constpcat,A0
00030378 <AmiBlitz3_noFPU_r470.ab3@20106>   MOVE.l A0,destpointer
0003037C <AmiBlitz3_noFPU_r470.ab3@20107> BRA.w JL_0_BFBC
00030382 <AmiBlitz3_noFPU_r470.ab3@20110>   MOVEA.l destpointer,A0
00030384 <AmiBlitz3_noFPU_r470.ab3@20113>   MOVE.l A0,-(A7)
0003038E <AmiBlitz3_noFPU_r470.ab3@20114>   MOVE.l constlibat,destbufferend
00030394 <AmiBlitz3_noFPU_r470.ab3@20115>   CLR.w dontwrite
0003039C <AmiBlitz3_noFPU_r470.ab3@20117>   MOVE.w #$FFFF,lasta6
000303A4 <AmiBlitz3_noFPU_r470.ab3@20118>   MOVE.w #$FFFF,cfetchmode
000303A8 <AmiBlitz3_noFPU_r470.ab3@20120>     BSR.w arreval
000303AA <AmiBlitz3_noFPU_r470.ab3@20121>    MOVE.l (a7),a0
000304E6 <AmiBlitz3_noFPU_r470.ab3@20123>  !newcalc
000304EA <AmiBlitz3_noFPU_r470.ab3@20124>    BEQ 'l10
000304EC <AmiBlitz3_noFPU_r470.ab3@20125>    MOVE.l d0,d3
000304EE <AmiBlitz3_noFPU_r470.ab3@20126>    MOVEA.l (A7)+,A0
000304F2 <AmiBlitz3_noFPU_r470.ab3@20127> BRA bc1
000304F6 <AmiBlitz3_noFPU_r470.ab3@20130>    MOVE.w #$2600,D1
000304FC <AmiBlitz3_noFPU_r470.ab3@20131>   OR.w regnum,D1
00030500 <AmiBlitz3_noFPU_r470.ab3@20132>    BSR.w writeword
00030504 <AmiBlitz3_noFPU_r470.ab3@20133>   MOVE.w #$4E75,D1
00030508 <AmiBlitz3_noFPU_r470.ab3@20134>    BSR.w writeword
0003050E <AmiBlitz3_noFPU_r470.ab3@20135>   MOVE.w dontwrite,D1
00030512 <AmiBlitz3_noFPU_r470.ab3@20136>    BNE.w conmemerr
00030514 <AmiBlitz3_noFPU_r470.ab3@20137>   MOVEA.l (A7)+,A0
00030516 <AmiBlitz3_noFPU_r470.ab3@20138>   NOP
0003051C <AmiBlitz3_noFPU_r470.ab3@20139>    JSR Aclearcache                                         ;simple expression
0003051E <AmiBlitz3_noFPU_r470.ab3@20142>    JSR (A0)                                                ;writeresult
00030524 <AmiBlitz3_noFPU_r470.ab3@20145>   MOVE.w (A7)+,cfetchmode
0003052A <AmiBlitz3_noFPU_r470.ab3@20146>   MOVE.w (A7)+,lasta6
00030530 <AmiBlitz3_noFPU_r470.ab3@20147>   MOVE.w (A7)+,dontwrite
00030536 <AmiBlitz3_noFPU_r470.ab3@20148>   MOVE.l (A7)+,destbufferend
0003053C <AmiBlitz3_noFPU_r470.ab3@20149>   MOVE.l (A7)+,destpointer
00030542 <AmiBlitz3_noFPU_r470.ab3@20150>   MOVE.w (A7)+,regnum
00030548 <AmiBlitz3_noFPU_r470.ab3@20153> JMP reget
0003054C <AmiBlitz3_noFPU_r470.ab3@20156> oldlibat:   Ds.l 1
00030552 <AmiBlitz3_noFPU_r470.ab3@20160>   LEA incdir,A0
00030556 <AmiBlitz3_noFPU_r470.ab3@20163>   CMP.w #$22,D0
0003055A <AmiBlitz3_noFPU_r470.ab3@20164>    BEQ.w JL_0_C052
0003055C <AmiBlitz3_noFPU_r470.ab3@20165>   MOVE.b D0,(A0)+
0003055E <AmiBlitz3_noFPU_r470.ab3@20166>   TST.w D0
00030562 <AmiBlitz3_noFPU_r470.ab3@20167>    BEQ.w JL_0_C05A
00030566 <AmiBlitz3_noFPU_r470.ab3@20168>    BMI.w syntaxerr
0003056C <AmiBlitz3_noFPU_r470.ab3@20171>   JSR get1bytemain                                         ;_long
00030570 <AmiBlitz3_noFPU_r470.ab3@20172> BRA.w JL_0_C03E
00030572 <AmiBlitz3_noFPU_r470.ab3@20175> RTS
00030578 <AmiBlitz3_noFPU_r470.ab3@20179>   LEA ptr_parameterstore,A1                                ;getparameter
0003057E <AmiBlitz3_noFPU_r470.ab3@20180>   LEA incdir,A0
00030580 <AmiBlitz3_noFPU_r470.ab3@20181>   MOVEQ.l #-$01,D2
00030582 <AmiBlitz3_noFPU_r470.ab3@20184>     ADDQ.w #1,D2
00030584 <AmiBlitz3_noFPU_r470.ab3@20185>     MOVE.b (A0)+,(A1)+
00030588 <AmiBlitz3_noFPU_r470.ab3@20186>   BNE.w JL_0_C06A
0003058A <AmiBlitz3_noFPU_r470.ab3@20187>   SUBQ.w #1,A1
00030594 <AmiBlitz3_noFPU_r470.ab3@20189>   MOVE.w oldqflag,instringon
0003059A <AmiBlitz3_noFPU_r470.ab3@20190>   MOVEA.l lastsourcepos,A5
000305A0 <AmiBlitz3_noFPU_r470.ab3@20194>   JSR get1bytemain
000305A2 <AmiBlitz3_noFPU_r470.ab3@20195>   TST.w D0
000305A6 <AmiBlitz3_noFPU_r470.ab3@20196>    BMI.w syntaxerr
000305AA <AmiBlitz3_noFPU_r470.ab3@20197>   CMP.b #$22,D0
000305AE <AmiBlitz3_noFPU_r470.ab3@20198>    BEQ.w JL_0_C078
000305B0 <AmiBlitz3_noFPU_r470.ab3@20199>   MOVE.b D0,(A1)+
000305B4 <AmiBlitz3_noFPU_r470.ab3@20200>    BEQ.w JL_0_C096
000305B6 <AmiBlitz3_noFPU_r470.ab3@20201>   ADDQ.w #1,D2
000305BA <AmiBlitz3_noFPU_r470.ab3@20202> BRA.w JL_0_C078
000305BC <AmiBlitz3_noFPU_r470.ab3@20205>   TST.w D2
000305C0 <AmiBlitz3_noFPU_r470.ab3@20206>    BEQ.w syntaxerr
000305C2 <AmiBlitz3_noFPU_r470.ab3@20207> RTS
000305C8 <AmiBlitz3_noFPU_r470.ab3@20211>   MOVEA.l constantbase,A2
000305CC <AmiBlitz3_noFPU_r470.ab3@20212>   MOVEA.l $E(A2),A5
000305D2 <AmiBlitz3_noFPU_r470.ab3@20213>   MOVE.l a5,includesourceline
000305D8 <AmiBlitz3_noFPU_r470.ab3@20214>   LEA inctab,a0
000305DE <AmiBlitz3_noFPU_r470.ab3@20215>   MOVE.w ininclude,d0
000305E2 <AmiBlitz3_noFPU_r470.ab3@20216>   MOVE.l $0(a0,d0*4),d0
000305E6 <AmiBlitz3_noFPU_r470.ab3@20217>   MOVEA.l $4(A2),A0
000305EA <AmiBlitz3_noFPU_r470.ab3@20219>   LEA $0(A0,D0.l),A0
000305EC <AmiBlitz3_noFPU_r470.ab3@20220>   MOVEA.l A5,A1
000305EE <AmiBlitz3_noFPU_r470.ab3@20223>     CMPA.l A0,A1
000305F2 <AmiBlitz3_noFPU_r470.ab3@20224>      BCC.w JL_0_C0C6
000305F4 <AmiBlitz3_noFPU_r470.ab3@20225>   TST.b (A1)+
000305F8 <AmiBlitz3_noFPU_r470.ab3@20226>   BNE.w JL_0_C0B6
000305FC <AmiBlitz3_noFPU_r470.ab3@20227> BRA.w JL_0_C112
00030600 <AmiBlitz3_noFPU_r470.ab3@20230>   MOVEA.l $4(A2),A1
00030602 <AmiBlitz3_noFPU_r470.ab3@20233>   CMPA.l A0,A5
00030606 <AmiBlitz3_noFPU_r470.ab3@20234>   BCC.w JL_0_C0D6
00030608 <AmiBlitz3_noFPU_r470.ab3@20235>   MOVE.b (A5)+,(A1)+
0003060C <AmiBlitz3_noFPU_r470.ab3@20236> BRA.w JL_0_C0CA
0003060E <AmiBlitz3_noFPU_r470.ab3@20239>   MOVE.l A1,D0
00030612 <AmiBlitz3_noFPU_r470.ab3@20240>   SUB.l $4(A2),D0
00030618 <AmiBlitz3_noFPU_r470.ab3@20241>   LEA inctab,a0
0003061A <AmiBlitz3_noFPU_r470.ab3@20242>   MOVEQ #0,d1
00030620 <AmiBlitz3_noFPU_r470.ab3@20243>   MOVE.w ininclude,d1
00030624 <AmiBlitz3_noFPU_r470.ab3@20244>   MOVE.l d0,0(a0,d1*4)
0003062A <AmiBlitz3_noFPU_r470.ab3@20246>   MOVEA.l _dosbase,A6
0003062E <AmiBlitz3_noFPU_r470.ab3@20247>   MOVE.l $8(A2),D1
00030630 <AmiBlitz3_noFPU_r470.ab3@20248>   MOVE.l A1,D2
00030636 <AmiBlitz3_noFPU_r470.ab3@20249>   MOVE.l D2,include_base
0003063C <AmiBlitz3_noFPU_r470.ab3@20251>   MOVE.l #$10000000,d3                                     ;load whole file
0003063E <AmiBlitz3_noFPU_r470.ab3@20252>   SUB.l D0,D3
00030642 <AmiBlitz3_noFPU_r470.ab3@20253>    JSR _Read(A6)
00030644 <AmiBlitz3_noFPU_r470.ab3@20254>   TST.l D0
00030648 <AmiBlitz3_noFPU_r470.ab3@20255>    BMI.w error_reading_file
0003064C <AmiBlitz3_noFPU_r470.ab3@20256>    BEQ.w JL_0_C120
00030652 <AmiBlitz3_noFPU_r470.ab3@20257>    MOVE.l D0,include_length
00030694 <AmiBlitz3_noFPU_r470.ab3@20258>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000306BE <AmiBlitz3_noFPU_r470.ab3@20259>    !basic
000306CE <AmiBlitz3_noFPU_r470.ab3@20260>    ilen.l  = Peek.l(?include_length)
000306DE <AmiBlitz3_noFPU_r470.ab3@20261>    ibase.l = Peek.l(?include_base)
000306EE <AmiBlitz3_noFPU_r470.ab3@20262>    ido.l   = Peek.l(?include_process)
000306FE <AmiBlitz3_noFPU_r470.ab3@20263>    *tn.preprocessor = Peek.l(?include_preprocessor)
00030708 <AmiBlitz3_noFPU_r470.ab3@20264>    If ido
0003071A <AmiBlitz3_noFPU_r470.ab3@20265>      ioffset.l = SkipXtraHeader{ibase,ilen}
00030740 <AmiBlitz3_noFPU_r470.ab3@20266>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00030752 <AmiBlitz3_noFPU_r470.ab3@20267>      If nilen>0
00030762 <AmiBlitz3_noFPU_r470.ab3@20271>        Poke.l ?include_length,nilen
00030780 <AmiBlitz3_noFPU_r470.ab3@20274>    !asm
0003078A <AmiBlitz3_noFPU_r470.ab3@20275>    MOVE.l #0,include_process
00030790 <AmiBlitz3_noFPU_r470.ab3@20276>    MOVE.l include_length,D0
00030796 <AmiBlitz3_noFPU_r470.ab3@20277>    LEA inctab,a0
00030798 <AmiBlitz3_noFPU_r470.ab3@20278>    MOVEQ #0,d1
0003079E <AmiBlitz3_noFPU_r470.ab3@20279>    MOVE.w ininclude,d1
000307A2 <AmiBlitz3_noFPU_r470.ab3@20280>    ADD.l d0,0(a0,d1*4)
000307A6 <AmiBlitz3_noFPU_r470.ab3@20282>   MOVEA.l $4(A2),A5
000307AA <AmiBlitz3_noFPU_r470.ab3@20284>    MOVE.l 0(a0,d1*4),d0
000307AE <AmiBlitz3_noFPU_r470.ab3@20285>   CLR.b $0(A5,D0.l)
000307B0 <AmiBlitz3_noFPU_r470.ab3@20288>   MOVEA.l A5,A0
000307B2 <AmiBlitz3_noFPU_r470.ab3@20291>     TST.b (A0)+
000307B6 <AmiBlitz3_noFPU_r470.ab3@20292>   BNE.w JL_0_C114
000307BA <AmiBlitz3_noFPU_r470.ab3@20293>   MOVE.l A0,$E(A2)
000307BC <AmiBlitz3_noFPU_r470.ab3@20294> RTS
000307C0 <AmiBlitz3_noFPU_r470.ab3@20297> include_length:        Dc.l 0                              ; for tokenizer!
000307C4 <AmiBlitz3_noFPU_r470.ab3@20298> include_base:          Dc.l 0
000307C8 <AmiBlitz3_noFPU_r470.ab3@20299> include_process:       Dc.l 0
000307CC <AmiBlitz3_noFPU_r470.ab3@20300> include_preprocessor:  Dc.l 0
000307D0 <AmiBlitz3_noFPU_r470.ab3@20304>   MOVE.l $8(A2),D1
000307D6 <AmiBlitz3_noFPU_r470.ab3@20306>   MOVEA.l _dosbase,A6
000307DA <AmiBlitz3_noFPU_r470.ab3@20307>   JSR _Close(a6)
000307E0 <AmiBlitz3_noFPU_r470.ab3@20308>   MOVEA.l _execbase,A6
000307E4 <AmiBlitz3_noFPU_r470.ab3@20309>   MOVEA.l $4(A2),A1
000307EA <AmiBlitz3_noFPU_r470.ab3@20310>   MOVE.l #$400*8,D0                                        ;exit include
000307EE <AmiBlitz3_noFPU_r470.ab3@20312>   JSR _FreeVec(a6)
000307F4 <AmiBlitz3_noFPU_r470.ab3@20315>   MOVE.l (A2),constantbase
000307F6 <AmiBlitz3_noFPU_r470.ab3@20316>   MOVEA.l A2,A1
000307F8 <AmiBlitz3_noFPU_r470.ab3@20317>   MOVEQ.l #$00,D0
000307FC <AmiBlitz3_noFPU_r470.ab3@20318>   MOVE.b $12(A2),D0
00030802 <AmiBlitz3_noFPU_r470.ab3@20319>   MOVEA.l _execbase,A6
00030808 <AmiBlitz3_noFPU_r470.ab3@20320>   MOVE.l mempool2,a0
0003080C <AmiBlitz3_noFPU_r470.ab3@20321>   JSR _FreePooled(A6)
00030812 <AmiBlitz3_noFPU_r470.ab3@20322>   JSR zero_includename
00030818 <AmiBlitz3_noFPU_r470.ab3@20323>   SUBQ.w #1,ininclude
0003081C <AmiBlitz3_noFPU_r470.ab3@20324>   BNE.w AJL_0_C09E
00030822 <AmiBlitz3_noFPU_r470.ab3@20327>   LEA _include,a0
00030826 <AmiBlitz3_noFPU_r470.ab3@20328>   MOVEM.l a0-a6/d0-d7,-(a7)
0003082C <AmiBlitz3_noFPU_r470.ab3@20329>   LEA ptr_parameterstore,a1
0003082E <AmiBlitz3_noFPU_r470.ab3@20332>     MOVE.b (a0)+,(a1)+
00030832 <AmiBlitz3_noFPU_r470.ab3@20333>   BNE 'l1b
00030834 <AmiBlitz3_noFPU_r470.ab3@20334>   MOVEQ #9,d2
0003083A <AmiBlitz3_noFPU_r470.ab3@20335>   JSR findlabel2
0003083E <AmiBlitz3_noFPU_r470.ab3@20336>   BNE 'd
00030842 <AmiBlitz3_noFPU_r470.ab3@20337>   CLR.l 8(a2)
00030846 <AmiBlitz3_noFPU_r470.ab3@20340>   MOVEM.l (a7)+,a0-a6/d0-d7
00030848 <AmiBlitz3_noFPU_r470.ab3@20341> RTS
0003084E <AmiBlitz3_noFPU_r470.ab3@20345>   MOVE.l unusedfunc,d0
00030852 <AmiBlitz3_noFPU_r470.ab3@20346>   BEQ 'noclear
00030856 <AmiBlitz3_noFPU_r470.ab3@20347>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030858 <AmiBlitz3_noFPU_r470.ab3@20350>     MOVE.l d0,a1
0003085C <AmiBlitz3_noFPU_r470.ab3@20351>     MOVE.l 4(a1),d0
0003085E <AmiBlitz3_noFPU_r470.ab3@20352>     MOVE.l (a1),d2
00030864 <AmiBlitz3_noFPU_r470.ab3@20353>     MOVE.l _execbase,a6
00030868 <AmiBlitz3_noFPU_r470.ab3@20354>     JSR _FreeMem(a6)
0003086A <AmiBlitz3_noFPU_r470.ab3@20355>     MOVE.l d2,d0
0003086E <AmiBlitz3_noFPU_r470.ab3@20356>   BNE 'f1
00030874 <AmiBlitz3_noFPU_r470.ab3@20357>   CLR.l unusedfunc
00030878 <AmiBlitz3_noFPU_r470.ab3@20358>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
0003087A <AmiBlitz3_noFPU_r470.ab3@20361> RTS
00030880 <AmiBlitz3_noFPU_r470.ab3@20365>   MOVEA.l xinclude_base,A2
00030886 <AmiBlitz3_noFPU_r470.ab3@20366>   CLR.l xinclude_base
0003088A <AmiBlitz3_noFPU_r470.ab3@20369>     CMPA.w #$0,A2
0003088E <AmiBlitz3_noFPU_r470.ab3@20370>      BEQ.w JL_0_C186
00030890 <AmiBlitz3_noFPU_r470.ab3@20371>     MOVEQ.l #$00,D0
00030894 <AmiBlitz3_noFPU_r470.ab3@20372>     MOVE.b 4+8(A2),D0
00030896 <AmiBlitz3_noFPU_r470.ab3@20373>     MOVEA.l A2,A1
00030898 <AmiBlitz3_noFPU_r470.ab3@20374>     MOVEA.l (A2),A2
0003089E <AmiBlitz3_noFPU_r470.ab3@20375>     MOVEA.l _execbase,A6
000308A4 <AmiBlitz3_noFPU_r470.ab3@20376>     MOVE.l mempool2,a0
000308A8 <AmiBlitz3_noFPU_r470.ab3@20377>     JSR _FreePooled(A6)
000308AC <AmiBlitz3_noFPU_r470.ab3@20378> BRA.w JL_0_C168
000308AE <AmiBlitz3_noFPU_r470.ab3@20381> RTS
000308B4 <AmiBlitz3_noFPU_r470.ab3@20385>   MOVEA.l constantbase,A2
000308BA <AmiBlitz3_noFPU_r470.ab3@20386>   CLR.l constantbase
000308BE <AmiBlitz3_noFPU_r470.ab3@20389>     CMPA.w #$0,A2
000308C2 <AmiBlitz3_noFPU_r470.ab3@20390>      BEQ.w JL_0_C1DC
000308C6 <AmiBlitz3_noFPU_r470.ab3@20391>     MOVE.l $8(A2),D1
000308CA <AmiBlitz3_noFPU_r470.ab3@20392>      BEQ.w JL_0_C1AE
000308D0 <AmiBlitz3_noFPU_r470.ab3@20393>     MOVEA.l _dosbase,A6
000308D4 <AmiBlitz3_noFPU_r470.ab3@20394>      JSR _Close(A6)
000308D8 <AmiBlitz3_noFPU_r470.ab3@20397>     MOVE.l $4(A2),D0
000308DC <AmiBlitz3_noFPU_r470.ab3@20398>      BEQ.w JL_0_C1C6
000308DE <AmiBlitz3_noFPU_r470.ab3@20399>     MOVEA.l D0,A1
000308E4 <AmiBlitz3_noFPU_r470.ab3@20400>     MOVE.l #$400*8,D0
000308EA <AmiBlitz3_noFPU_r470.ab3@20401>     MOVEA.l _execbase,A6
000308F0 <AmiBlitz3_noFPU_r470.ab3@20402>     MOVE.l mempool,a0
000308F4 <AmiBlitz3_noFPU_r470.ab3@20403>     JSR _FreeVec(a6)
000308F6 <AmiBlitz3_noFPU_r470.ab3@20406>     MOVEQ.l #$00,D0
000308FA <AmiBlitz3_noFPU_r470.ab3@20407>     MOVE.b $12(A2),D0
000308FC <AmiBlitz3_noFPU_r470.ab3@20408>     MOVEA.l A2,A1
000308FE <AmiBlitz3_noFPU_r470.ab3@20409>     MOVEA.l (A2),A2
00030904 <AmiBlitz3_noFPU_r470.ab3@20410>     MOVEA.l _execbase,A6
0003090A <AmiBlitz3_noFPU_r470.ab3@20411>     MOVE.l mempool2,a0
0003090E <AmiBlitz3_noFPU_r470.ab3@20412>     JSR _FreePooled(A6)
00030912 <AmiBlitz3_noFPU_r470.ab3@20413> BRA.w JL_0_C194
00030914 <AmiBlitz3_noFPU_r470.ab3@20416> RTS
00030916 <AmiBlitz3_noFPU_r470.ab3@20420>   SWAP D0
0003091A <AmiBlitz3_noFPU_r470.ab3@20421>    BSR.w JL_0_C1E6
0003091C <AmiBlitz3_noFPU_r470.ab3@20422>   SWAP D0
00030922 <AmiBlitz3_noFPU_r470.ab3@20425>   MOVEA.l data2,A4
00030928 <AmiBlitz3_noFPU_r470.ab3@20426>   CMPA.l allat,A4
0003092C <AmiBlitz3_noFPU_r470.ab3@20427>    BCC.w JL_0_C200
0003092E <AmiBlitz3_noFPU_r470.ab3@20428>   MOVE.w D0,(A4)+
00030934 <AmiBlitz3_noFPU_r470.ab3@20429>   MOVE.l A4,data2
00030936 <AmiBlitz3_noFPU_r470.ab3@20430> RTS
0003093E <AmiBlitz3_noFPU_r470.ab3@20433>   MOVE.w #$FFFF,dontwrite
00030944 <AmiBlitz3_noFPU_r470.ab3@20434>   ADDQ.l #2,data2
00030946 <AmiBlitz3_noFPU_r470.ab3@20435> RTS
0003094C <AmiBlitz3_noFPU_r470.ab3@20439>   MOVEA.l data2,A4
00030952 <AmiBlitz3_noFPU_r470.ab3@20440>   CMPA.l allat,A4
00030956 <AmiBlitz3_noFPU_r470.ab3@20441>    BCC.w JL_0_C22A
00030958 <AmiBlitz3_noFPU_r470.ab3@20442>   MOVE.b D0,(A4)+
0003095E <AmiBlitz3_noFPU_r470.ab3@20443>   MOVE.l A4,data2
00030960 <AmiBlitz3_noFPU_r470.ab3@20444> RTS
00030968 <AmiBlitz3_noFPU_r470.ab3@20447>   MOVE.w #$FFFF,dontwrite
0003096E <AmiBlitz3_noFPU_r470.ab3@20448>   ADDQ.l #1,data2
00030970 <AmiBlitz3_noFPU_r470.ab3@20449> RTS
00030974 <AmiBlitz3_noFPU_r470.ab3@20453>   CMP.w #$22,D0
00030978 <AmiBlitz3_noFPU_r470.ab3@20454>    BNE.w syntaxerr
0003097E <AmiBlitz3_noFPU_r470.ab3@20458>   JSR get1bytemain
00030982 <AmiBlitz3_noFPU_r470.ab3@20459>   CMP.b #$22,D0
00030986 <AmiBlitz3_noFPU_r470.ab3@20460>    BEQ.w JL_0_C25A
00030988 <AmiBlitz3_noFPU_r470.ab3@20461>   TST.w D0
0003098C <AmiBlitz3_noFPU_r470.ab3@20462>    BEQ.w syntaxerr
0003098E <AmiBlitz3_noFPU_r470.ab3@20463>   MOVE.b D0,(A0)+
00030992 <AmiBlitz3_noFPU_r470.ab3@20464> BRA.w JL_0_C242
00030994 <AmiBlitz3_noFPU_r470.ab3@20467>   CLR.b (A0)
00030996 <AmiBlitz3_noFPU_r470.ab3@20468> RTS
00030998 <AmiBlitz3_noFPU_r470.ab3@20471>   TST.l D3
0003099A <AmiBlitz3_noFPU_r470.ab3@20472> RTS
000309A0 <AmiBlitz3_noFPU_r470.ab3@20475>   LEA ptr_parameterstore,A0
000309A6 <AmiBlitz3_noFPU_r470.ab3@20476>   LEA namebuff2,A1
000309A8 <AmiBlitz3_noFPU_r470.ab3@20479>     MOVE.b (A0)+,D0
000309AC <AmiBlitz3_noFPU_r470.ab3@20480>     BEQ.w JL_0_C27C
000309AE <AmiBlitz3_noFPU_r470.ab3@20481>   CMP.b (A1)+,D0
000309B2 <AmiBlitz3_noFPU_r470.ab3@20482>   BEQ.w JL_0_C26E
000309B4 <AmiBlitz3_noFPU_r470.ab3@20483> RTS
000309B6 <AmiBlitz3_noFPU_r470.ab3@20486>   TST.b (A1)
000309BA <AmiBlitz3_noFPU_r470.ab3@20487>   BNE.w JL_0_C284
000309BC <AmiBlitz3_noFPU_r470.ab3@20488> RTS
000309C0 <AmiBlitz3_noFPU_r470.ab3@20491>   CMP.w #$1,D0
000309C2 <AmiBlitz3_noFPU_r470.ab3@20492> RTS
000309C6 <AmiBlitz3_noFPU_r470.ab3@20496>   CMP.w #$2E,D0                                            ;dodeftype
000309CA <AmiBlitz3_noFPU_r470.ab3@20497>    BNE.w syntaxerr
000309CE <AmiBlitz3_noFPU_r470.ab3@20498>   BSR.w getparameter2
000309D4 <AmiBlitz3_noFPU_r470.ab3@20499>   LEA newtypebase,A2
000309D8 <AmiBlitz3_noFPU_r470.ab3@20500>   BSR.w findtype
000309DC <AmiBlitz3_noFPU_r470.ab3@20501>    BNE.w notypeerr
000309E2 <AmiBlitz3_noFPU_r470.ab3@20502>   TST.b declare
000309E6 <AmiBlitz3_noFPU_r470.ab3@20503>    BNE 'l1
000309EC <AmiBlitz3_noFPU_r470.ab3@20504>   TST.b declare2
000309F0 <AmiBlitz3_noFPU_r470.ab3@20505>    BEQ 'l2
000309F8 <AmiBlitz3_noFPU_r470.ab3@20508>   MOVE.b #2,nowdeclare
000309FE <AmiBlitz3_noFPU_r470.ab3@20512>   JSR reget
00030A02 <AmiBlitz3_noFPU_r470.ab3@20513>    BNE.w JL_0_C2B4
00030A08 <AmiBlitz3_noFPU_r470.ab3@20514>   MOVE.l A2,defaulttype
00030A0A <AmiBlitz3_noFPU_r470.ab3@20515> RTS
00030A10 <AmiBlitz3_noFPU_r470.ab3@20518>   MOVE.l defaulttype,-(A7)
00030A16 <AmiBlitz3_noFPU_r470.ab3@20519>   MOVE.l A2,defaulttype
00030A1A <AmiBlitz3_noFPU_r470.ab3@20522>   BSR.w getparameter
00030A1E <AmiBlitz3_noFPU_r470.ab3@20523>    BSR.w JL_0_8E3C
00030A22 <AmiBlitz3_noFPU_r470.ab3@20524>   CMP.w #$2C,D0
00030A26 <AmiBlitz3_noFPU_r470.ab3@20525>    BNE.w JL_0_C2D8
00030A2C <AmiBlitz3_noFPU_r470.ab3@20526>    JSR get1bytemain                                        ; was BSR.w
00030A30 <AmiBlitz3_noFPU_r470.ab3@20527> BRA.w JL_0_C2C0
00030A36 <AmiBlitz3_noFPU_r470.ab3@20530>   MOVE.l (A7)+,defaulttype
00030A38 <AmiBlitz3_noFPU_r470.ab3@20531> RTS
00030A3C <AmiBlitz3_noFPU_r470.ab3@20535>   LEA $4(A5),A2                                            ;fehler function
00030A3E <AmiBlitz3_noFPU_r470.ab3@20538>   MOVE.l A2,D0
00030A42 <AmiBlitz3_noFPU_r470.ab3@20541>   BSR.w getparameter
00030A46 <AmiBlitz3_noFPU_r470.ab3@20542>   BSR.w JL_0_8E3C
00030A4A <AmiBlitz3_noFPU_r470.ab3@20543>   BSR.w calcvar
00030A4E <AmiBlitz3_noFPU_r470.ab3@20544>   CMP.b #$7,D2
00030A52 <AmiBlitz3_noFPU_r470.ab3@20545>    BNE.w mismatcherr
00030A56 <AmiBlitz3_noFPU_r470.ab3@20546>   MOVE.w varmode(PC),-(A7)
00030A5A <AmiBlitz3_noFPU_r470.ab3@20547>   CMP.w #$3D,D0
00030A5E <AmiBlitz3_noFPU_r470.ab3@20548>    BNE.w syntaxerr
00030A62 <AmiBlitz3_noFPU_r470.ab3@20549>   BTST #$F,D2
00030A66 <AmiBlitz3_noFPU_r470.ab3@20550>    BNE.w JL_0_C31C
00030A6A <AmiBlitz3_noFPU_r470.ab3@20551>   MOVE.w JL_0_C2E0(PC),D1
00030A6E <AmiBlitz3_noFPU_r470.ab3@20552>   BSR.w pokewda5s
00030A70 <AmiBlitz3_noFPU_r470.ab3@20553>   MOVE.w D3,D1
00030A74 <AmiBlitz3_noFPU_r470.ab3@20554>   BSR.w writeword
00030A78 <AmiBlitz3_noFPU_r470.ab3@20557>   MOVE.w L_0_C2E4(PC),D1
00030A7C <AmiBlitz3_noFPU_r470.ab3@20558>   BSR.w writeword
00030A82 <AmiBlitz3_noFPU_r470.ab3@20559>   ADDQ.w #1,regnum
00030A84 <AmiBlitz3_noFPU_r470.ab3@20560>   MOVEQ.l #$03,D2
00030A88 <AmiBlitz3_noFPU_r470.ab3@20561>   BSR.w eval
00030A8E <AmiBlitz3_noFPU_r470.ab3@20562>   MOVE.l #$D000,D1
00030A94 <AmiBlitz3_noFPU_r470.ab3@20563>   MOVE.l d1,lastinstruction
00030A96 <AmiBlitz3_noFPU_r470.ab3@20564>   TST.w (A7)+
00030A9A <AmiBlitz3_noFPU_r470.ab3@20565>    BEQ.w Atokejsr
00030A9C <AmiBlitz3_noFPU_r470.ab3@20566>   ADDQ.w #1,D1
00030AA0 <AmiBlitz3_noFPU_r470.ab3@20567> BRA.w Atokejsr
00030AA2 <AmiBlitz3_noFPU_r470.ab3@20571>   MOVE.w D0,D1
00030AA6 <AmiBlitz3_noFPU_r470.ab3@20572>    BPL.w syntaxerr
00030AAA <AmiBlitz3_noFPU_r470.ab3@20573>   BCLR #$F,D1
00030AB0 <AmiBlitz3_noFPU_r470.ab3@20574>    JSR searchinstr
00030AB4 <AmiBlitz3_noFPU_r470.ab3@20575>   MOVE.l $12(A2),D0
00030AB8 <AmiBlitz3_noFPU_r470.ab3@20576>   TST.w -$2(A2,D0.L)
00030ABC <AmiBlitz3_noFPU_r470.ab3@20577>    BEQ.w freeerr
00030ABE <AmiBlitz3_noFPU_r470.ab3@20578>   MOVEQ.l #$02,D2
00030AC0 <AmiBlitz3_noFPU_r470.ab3@20579>   MOVE.l A2,-(A7)
00030AC4 <AmiBlitz3_noFPU_r470.ab3@20580>    BSR.w eval
00030AC6 <AmiBlitz3_noFPU_r470.ab3@20581>   MOVEA.l (A7)+,A2
00030ACC <AmiBlitz3_noFPU_r470.ab3@20582>   MOVE.l A2,mymaxlib
00030AD0 <AmiBlitz3_noFPU_r470.ab3@20583>   ADDA.l $12(A2),A2
00030AD6 <AmiBlitz3_noFPU_r470.ab3@20584>   TST.b debugmode
00030ADA <AmiBlitz3_noFPU_r470.ab3@20585>    BEQ.w JL_0_C3A8
00030AE0 <AmiBlitz3_noFPU_r470.ab3@20586>   MOVE.w regnum,D1
00030AE2 <AmiBlitz3_noFPU_r470.ab3@20587>   LSL.w #8,D1
00030AE4 <AmiBlitz3_noFPU_r470.ab3@20588>   LSL.w #1,D1
00030AE8 <AmiBlitz3_noFPU_r470.ab3@20589>   ORI.w #$B07C,D1
00030AEC <AmiBlitz3_noFPU_r470.ab3@20590>    BSR.w writeword
00030AF0 <AmiBlitz3_noFPU_r470.ab3@20591>   MOVE.w -$4(A2),D1
00030AF4 <AmiBlitz3_noFPU_r470.ab3@20592>    BSR.w writeword
00030AFA <AmiBlitz3_noFPU_r470.ab3@20593>   MOVE.l maxchk,D1
00030AFE <AmiBlitz3_noFPU_r470.ab3@20594>    BSR.w writelong
00030B00 <AmiBlitz3_noFPU_r470.ab3@20595>   MOVE.l A2,-(A7)
00030B04 <AmiBlitz3_noFPU_r470.ab3@20596>   MOVE.w #$C30A,D1
00030B08 <AmiBlitz3_noFPU_r470.ab3@20597>    BSR.w Atokejsr
00030B0A <AmiBlitz3_noFPU_r470.ab3@20598>   MOVEA.l (A7)+,A2
00030B0E <AmiBlitz3_noFPU_r470.ab3@20601>   MOVE.w -$2(A2),D2
00030B14 <AmiBlitz3_noFPU_r470.ab3@20604>   MOVE.w regnum,D1
00030B1A <AmiBlitz3_noFPU_r470.ab3@20605>   OR.w lslimm,D1
00030B1E <AmiBlitz3_noFPU_r470.ab3@20606>   CMP.w #$8,D2
00030B22 <AmiBlitz3_noFPU_r470.ab3@20607>    BCS.w JL_0_C3CE
00030B26 <AmiBlitz3_noFPU_r470.ab3@20608>    BSR.w writeword
00030B28 <AmiBlitz3_noFPU_r470.ab3@20609>   SUBQ.w #8,D2
00030B2C <AmiBlitz3_noFPU_r470.ab3@20610>    BNE.w JL_0_C3AC
00030B30 <AmiBlitz3_noFPU_r470.ab3@20611> BRA.w JL_0_C3DA
00030B32 <AmiBlitz3_noFPU_r470.ab3@20614>   MOVE.w D2,D0
00030B34 <AmiBlitz3_noFPU_r470.ab3@20615>   LSL.w #8,D0
00030B36 <AmiBlitz3_noFPU_r470.ab3@20616>   LSL.w #1,D0
00030B38 <AmiBlitz3_noFPU_r470.ab3@20617>   OR.w D0,D1
00030B3C <AmiBlitz3_noFPU_r470.ab3@20618>   BSR.w writeword
00030B3E <AmiBlitz3_noFPU_r470.ab3@20621> RTS
00030B42 <AmiBlitz3_noFPU_r470.ab3@20626>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00030B44 <AmiBlitz3_noFPU_r470.ab3@20627>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00030B48 <AmiBlitz3_noFPU_r470.ab3@20631> mymaxlib:  Ds.l 1
00030B4C <AmiBlitz3_noFPU_r470.ab3@20635>   BSR.w JL_0_C340
00030B50 <AmiBlitz3_noFPU_r470.ab3@20636>   LEA free(PC),A0
00030B54 <AmiBlitz3_noFPU_r470.ab3@20637>   LEA freef(PC),A1
00030B5A <AmiBlitz3_noFPU_r470.ab3@20638>   MOVE.w -$6(A2),$2(A0)
00030B5E <AmiBlitz3_noFPU_r470.ab3@20639>   BSR.w pokecode
00030B62 <AmiBlitz3_noFPU_r470.ab3@20640>   MOVE.l -$A(A2),D1
00030B66 <AmiBlitz3_noFPU_r470.ab3@20643>   BEQ.w nosuperr
00030B6A <AmiBlitz3_noFPU_r470.ab3@20644>   MOVEA.l mymaxlib(PC),A2
00030B6E <AmiBlitz3_noFPU_r470.ab3@20645> BRA.w Amakelibsub
00030B72 <AmiBlitz3_noFPU_r470.ab3@20650>   BSR.w JL_0_C340
00030B78 <AmiBlitz3_noFPU_r470.ab3@20651>   LEA use,A0
00030B7E <AmiBlitz3_noFPU_r470.ab3@20652>   LEA usef,A1
00030B84 <AmiBlitz3_noFPU_r470.ab3@20653>   MOVE.w -$6(A2),$2(A0)
00030B8A <AmiBlitz3_noFPU_r470.ab3@20654>   MOVE.w -$6(A2),-$2(A1)
00030B8E <AmiBlitz3_noFPU_r470.ab3@20655>   ADDQ.w #4,-$2(A1)
00030B92 <AmiBlitz3_noFPU_r470.ab3@20656>   BSR.w pokecode
00030B96 <AmiBlitz3_noFPU_r470.ab3@20657>   MOVE.l -$E(A2),D1
00030B9A <AmiBlitz3_noFPU_r470.ab3@20658> BRA.w maxjsr
00030BA0 <AmiBlitz3_noFPU_r470.ab3@20662>   JSR get1bytemain
00030BA6 <AmiBlitz3_noFPU_r470.ab3@20666>   MOVE.l firstiff,D0
00030BAA <AmiBlitz3_noFPU_r470.ab3@20667>    BEQ.w noiferr
00030BAC <AmiBlitz3_noFPU_r470.ab3@20668>   MOVEA.l D0,A0
00030BB2 <AmiBlitz3_noFPU_r470.ab3@20669>   CMPI.b #$1,$D(A0)
00030BB6 <AmiBlitz3_noFPU_r470.ab3@20670>    BEQ.w illelseerr
00030BBA <AmiBlitz3_noFPU_r470.ab3@20671>   MOVE.w #$6000,D1
00030BC0 <AmiBlitz3_noFPU_r470.ab3@20673>     TST.b fast
00030BC4 <AmiBlitz3_noFPU_r470.ab3@20674>     BEQ 'l1
00030BCA <AmiBlitz3_noFPU_r470.ab3@20675>     OR.l #$ff,d1
00030BCE <AmiBlitz3_noFPU_r470.ab3@20676>     BSR writeword
00030BD0 <AmiBlitz3_noFPU_r470.ab3@20680>   SWAP D1
00030BD4 <AmiBlitz3_noFPU_r470.ab3@20681>   BSR.w writelong
00030BD6 <AmiBlitz3_noFPU_r470.ab3@20682>   MOVEQ.l #$00,D1
00030BDA <AmiBlitz3_noFPU_r470.ab3@20683>   BSR.w AJL_0_D7B8
00030BE2 <AmiBlitz3_noFPU_r470.ab3@20684>   MOVE.l destpointer,$8(A0)
00030BE6 <AmiBlitz3_noFPU_r470.ab3@20685> BRA.w do_then
00030BEC <AmiBlitz3_noFPU_r470.ab3@20689>   LEA ptr_parameterstore,A0
00030BEE <AmiBlitz3_noFPU_r470.ab3@20690>   MOVE.l A0,-(A7)
00030BF2 <AmiBlitz3_noFPU_r470.ab3@20691>   BSR.w JL_0_C23A
00030BF6 <AmiBlitz3_noFPU_r470.ab3@20692> BRA.w handle_compileerror
00030BFA <AmiBlitz3_noFPU_r470.ab3@20696>   BSR.w JL_0_BF6A
00030BFC <AmiBlitz3_noFPU_r470.ab3@20697>   MOVEQ.l #$05,D1
00030C06 <AmiBlitz3_noFPU_r470.ab3@20699>   MOVE.w oldqflag,instringon
00030C0C <AmiBlitz3_noFPU_r470.ab3@20700>   MOVEA.l lastsourcepos,A5
00030C12 <AmiBlitz3_noFPU_r470.ab3@20701>   LEA AJL_0_C25E,A0
00030C16 <AmiBlitz3_noFPU_r470.ab3@20702> BRA.w JL_0_C4B4
00030C1C <AmiBlitz3_noFPU_r470.ab3@20706>   LEA ptr_parameterstore,A0
00030C20 <AmiBlitz3_noFPU_r470.ab3@20707>   BSR.w JL_0_C23A
00030C26 <AmiBlitz3_noFPU_r470.ab3@20708>   JSR get1bytemain
00030C2A <AmiBlitz3_noFPU_r470.ab3@20709>   BSR.w JL_0_CCA8
00030C30 <AmiBlitz3_noFPU_r470.ab3@20710>   LEA namebuff2,A0
00030C34 <AmiBlitz3_noFPU_r470.ab3@20711>   BSR.w JL_0_C23A
00030C3A <AmiBlitz3_noFPU_r470.ab3@20712>   LEA AJL_0_C262,A0
00030C3C <AmiBlitz3_noFPU_r470.ab3@20715>   LSL.w #2,D1
00030C42 <AmiBlitz3_noFPU_r470.ab3@20716>   LEA CIF_branches,A1
00030C46 <AmiBlitz3_noFPU_r470.ab3@20717>   MOVE.l $0(A1,D1.W),-(A7)
00030C48 <AmiBlitz3_noFPU_r470.ab3@20718>   MOVEQ.l #-$01,D1
00030C4A <AmiBlitz3_noFPU_r470.ab3@20721>   JSR (A0)
00030C4C <AmiBlitz3_noFPU_r470.ab3@20723>   MOVEA.l (A7)+,A1
00030C4E <AmiBlitz3_noFPU_r470.ab3@20725> JMP (A1)
00030C52 <AmiBlitz3_noFPU_r470.ab3@20729>   BEQ.w JL_0_C4F6
00030C56 <AmiBlitz3_noFPU_r470.ab3@20730> BRA.w JL_0_C4F4
00030C5A <AmiBlitz3_noFPU_r470.ab3@20734>   BNE.w JL_0_C4F6
00030C5E <AmiBlitz3_noFPU_r470.ab3@20735> BRA.w JL_0_C4F4
00030C62 <AmiBlitz3_noFPU_r470.ab3@20739>   BLT.w JL_0_C4F6
00030C66 <AmiBlitz3_noFPU_r470.ab3@20740> BRA.w JL_0_C4F4
00030C6A <AmiBlitz3_noFPU_r470.ab3@20744>   BLE.w JL_0_C4F6
00030C6E <AmiBlitz3_noFPU_r470.ab3@20745> BRA.w JL_0_C4F4
00030C72 <AmiBlitz3_noFPU_r470.ab3@20749>   BGT.w JL_0_C4F6
00030C76 <AmiBlitz3_noFPU_r470.ab3@20750> BRA.w JL_0_C4F4
00030C7A <AmiBlitz3_noFPU_r470.ab3@20754>   BGE.w JL_0_C4F6
00030C7C <AmiBlitz3_noFPU_r470.ab3@20757>   MOVEQ.l #$00,D1
00030C82 <AmiBlitz3_noFPU_r470.ab3@20760>   MOVEA.l concomsp,A0
00030C88 <AmiBlitz3_noFPU_r470.ab3@20761>   MOVE.w skipcode,(A0)+
00030C8E <AmiBlitz3_noFPU_r470.ab3@20762>   MOVE.l A0,concomsp
00030C94 <AmiBlitz3_noFPU_r470.ab3@20763>   MOVE.w D1,skipcode
00030C9A <AmiBlitz3_noFPU_r470.ab3@20764>   JSR get1bytemain
00030C9E <AmiBlitz3_noFPU_r470.ab3@20765>    BNE.w syntaxerr
00030CA4 <AmiBlitz3_noFPU_r470.ab3@20766> JMP bakup
00030CAC <AmiBlitz3_noFPU_r470.ab3@20770> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00030CB0 <AmiBlitz3_noFPU_r470.ab3@20771> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00030CB4 <AmiBlitz3_noFPU_r470.ab3@20778>   MOVE.w #$FC17,D1
00030CBA <AmiBlitz3_noFPU_r470.ab3@20779>   JSR uselib
00030CC0 <AmiBlitz3_noFPU_r470.ab3@20781>   JSR reget
00030CC4 <AmiBlitz3_noFPU_r470.ab3@20782>    BEQ.w do_Restore__resbeg
00030CC8 <AmiBlitz3_noFPU_r470.ab3@20783>   BSR.w JL_0_AE22                                          ;get label name!
00030CCC <AmiBlitz3_noFPU_r470.ab3@20784>   MOVE.w rescode(PC),D1
00030CD0 <AmiBlitz3_noFPU_r470.ab3@20785>   BSR.w writeword
00030CD6 <AmiBlitz3_noFPU_r470.ab3@20786>   JSR addoff                                               ;add offset
00030CDA <AmiBlitz3_noFPU_r470.ab3@20787>   MOVE.l $C(A2),D1
00030CDE <AmiBlitz3_noFPU_r470.ab3@20788>   BSR.w writelong
00030CE2 <AmiBlitz3_noFPU_r470.ab3@20789>   MOVE.w rescode+6(PC),D1
00030CE6 <AmiBlitz3_noFPU_r470.ab3@20790>   BSR.w writeword
00030CEA <AmiBlitz3_noFPU_r470.ab3@20791>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00030CEE <AmiBlitz3_noFPU_r470.ab3@20792>   BEQ.w do_Restore__no
00030CF0 <AmiBlitz3_noFPU_r470.ab3@20794>   MOVEA.l D1,A1
00030CF4 <AmiBlitz3_noFPU_r470.ab3@20795>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00030CF6 <AmiBlitz3_noFPU_r470.ab3@20796> RTS
00030CF8 <AmiBlitz3_noFPU_r470.ab3@20801> RTS
00030CFC <AmiBlitz3_noFPU_r470.ab3@20804>   MOVE.w #$CD00,D1
00030D02 <AmiBlitz3_noFPU_r470.ab3@20805>   JSR Atokejsr
00030D06 <AmiBlitz3_noFPU_r470.ab3@20806>   MOVE.l rescode2(PC),D1
00030D0C <AmiBlitz3_noFPU_r470.ab3@20807> JMP writelong
00030D10 <AmiBlitz3_noFPU_r470.ab3@20811>   MOVE.w #$FC17,D1
00030D16 <AmiBlitz3_noFPU_r470.ab3@20812>   JSR uselib
00030D1C <AmiBlitz3_noFPU_r470.ab3@20815>   MOVE.l dataget,D1
00030D20 <AmiBlitz3_noFPU_r470.ab3@20816>   BSR.w writelong
00030D24 <AmiBlitz3_noFPU_r470.ab3@20817>   BSR.w getparameter
00030D28 <AmiBlitz3_noFPU_r470.ab3@20818>   BSR.w JL_0_8E3C
00030D2C <AmiBlitz3_noFPU_r470.ab3@20819>   BSR.w calcvar
00030D30 <AmiBlitz3_noFPU_r470.ab3@20820>   BTST #$E,D2
00030D34 <AmiBlitz3_noFPU_r470.ab3@20821>    BEQ.w JL_0_C5A6
00030D38 <AmiBlitz3_noFPU_r470.ab3@20822>   MOVE.b #$6,D2
00030D3A <AmiBlitz3_noFPU_r470.ab3@20825>   TST.b D2
00030D3E <AmiBlitz3_noFPU_r470.ab3@20826>    BEQ.w noleterr
00030D44 <AmiBlitz3_noFPU_r470.ab3@20827>   TST.b debugmode
00030D48 <AmiBlitz3_noFPU_r470.ab3@20828>    BEQ.w JL_0_C5D0
00030D4C <AmiBlitz3_noFPU_r470.ab3@20829>   MOVE.w #$7000,D1
00030D4E <AmiBlitz3_noFPU_r470.ab3@20830>   MOVE.b D2,D1
00030D52 <AmiBlitz3_noFPU_r470.ab3@20831>   ANDI.b #$F,D1
00030D56 <AmiBlitz3_noFPU_r470.ab3@20832>   BSR.w writeword
00030D5A <AmiBlitz3_noFPU_r470.ab3@20833>   MOVE.w #$C310,D1
00030D5C <AmiBlitz3_noFPU_r470.ab3@20834>   MOVE.w D2,-(A7)
00030D60 <AmiBlitz3_noFPU_r470.ab3@20835>   BSR.w Atokejsr
00030D62 <AmiBlitz3_noFPU_r470.ab3@20836>   MOVE.w (A7)+,D2
00030D66 <AmiBlitz3_noFPU_r470.ab3@20839>   CMP.b #$7,D2
00030D6A <AmiBlitz3_noFPU_r470.ab3@20840>    BEQ.w JL_0_C684
00030D6E <AmiBlitz3_noFPU_r470.ab3@20841>   CMP.b #$1,D2
00030D72 <AmiBlitz3_noFPU_r470.ab3@20842>    BNE.w JL_0_C62A
00030D78 <AmiBlitz3_noFPU_r470.ab3@20843>   LEA dataletb2,A0
00030D7E <AmiBlitz3_noFPU_r470.ab3@20844>   LEA dataletb2f,A1
00030D82 <AmiBlitz3_noFPU_r470.ab3@20845>   BTST #$F,D2
00030D86 <AmiBlitz3_noFPU_r470.ab3@20846>    BEQ.w JL_0_C5FC
00030D8A <AmiBlitz3_noFPU_r470.ab3@20847>   BSR.w pokecode
00030D8E <AmiBlitz3_noFPU_r470.ab3@20848> BRA.w JL_0_C668
00030D94 <AmiBlitz3_noFPU_r470.ab3@20851>   LEA dataletb,A0
00030D9A <AmiBlitz3_noFPU_r470.ab3@20852>   LEA dataletbf,A1
00030DA0 <AmiBlitz3_noFPU_r470.ab3@20853>   TST.w varmode
00030DA4 <AmiBlitz3_noFPU_r470.ab3@20854>    BEQ.w JL_0_C61E
00030DAA <AmiBlitz3_noFPU_r470.ab3@20855>   LEA dataletbl,A0
00030DB0 <AmiBlitz3_noFPU_r470.ab3@20856>   LEA dataletblf,A1
00030DB4 <AmiBlitz3_noFPU_r470.ab3@20859>   MOVE.w D3,$4(A0)
00030DB8 <AmiBlitz3_noFPU_r470.ab3@20860>   BSR.w pokecode
00030DBC <AmiBlitz3_noFPU_r470.ab3@20861> BRA.w JL_0_C668
00030DC2 <AmiBlitz3_noFPU_r470.ab3@20864>   LEA dataletw,A0
00030DC6 <AmiBlitz3_noFPU_r470.ab3@20865>   CMP.b #$3,D2
00030DCA <AmiBlitz3_noFPU_r470.ab3@20866>    BCS.w JL_0_C63E
00030DD0 <AmiBlitz3_noFPU_r470.ab3@20867>   LEA dataletl,A0
00030DD4 <AmiBlitz3_noFPU_r470.ab3@20870>   BTST #$F,D2
00030DD8 <AmiBlitz3_noFPU_r470.ab3@20871>    BEQ.w JL_0_C652
00030DDC <AmiBlitz3_noFPU_r470.ab3@20872>   MOVE.w $4(A0),D1
00030DE0 <AmiBlitz3_noFPU_r470.ab3@20873>    BSR.w writeword
00030DE4 <AmiBlitz3_noFPU_r470.ab3@20874> BRA.w JL_0_C668
00030DEA <AmiBlitz3_noFPU_r470.ab3@20877>   TST.w varmode
00030DEE <AmiBlitz3_noFPU_r470.ab3@20878>    BEQ.w JL_0_C65E
00030DF0 <AmiBlitz3_noFPU_r470.ab3@20879>   ADDQ.w #6,A0
00030DF4 <AmiBlitz3_noFPU_r470.ab3@20882>   MOVE.w D3,$2(A0)
00030DF6 <AmiBlitz3_noFPU_r470.ab3@20883>   MOVE.l (A0),D1
00030DFA <AmiBlitz3_noFPU_r470.ab3@20884>   BSR.w writelong
00030E00 <AmiBlitz3_noFPU_r470.ab3@20887>   MOVE.l dataput,D1
00030E04 <AmiBlitz3_noFPU_r470.ab3@20888>    BSR.w writelong
00030E08 <AmiBlitz3_noFPU_r470.ab3@20889>   CMP.w #$2C,D0
00030E0C <AmiBlitz3_noFPU_r470.ab3@20890>    BEQ.w JL_0_C67C
00030E0E <AmiBlitz3_noFPU_r470.ab3@20891> RTS
00030E14 <AmiBlitz3_noFPU_r470.ab3@20894>   JSR get1bytemain
00030E18 <AmiBlitz3_noFPU_r470.ab3@20895> BRA.w JL_0_C584
00030E1E <AmiBlitz3_noFPU_r470.ab3@20899>   MOVE.w stlenget,D1
00030E22 <AmiBlitz3_noFPU_r470.ab3@20900>    BSR.w writeword
00030E26 <AmiBlitz3_noFPU_r470.ab3@20901>   BTST #$F,D2
00030E2A <AmiBlitz3_noFPU_r470.ab3@20902>    BNE.w JL_0_C6C0
00030E30 <AmiBlitz3_noFPU_r470.ab3@20903>   TST.w varmode
00030E34 <AmiBlitz3_noFPU_r470.ab3@20904>    BEQ.w JL_0_C6B0
00030E3A <AmiBlitz3_noFPU_r470.ab3@20905>   MOVE.w D3,leaampl+2
00030E40 <AmiBlitz3_noFPU_r470.ab3@20906>   MOVE.l leaampl,D1
00030E44 <AmiBlitz3_noFPU_r470.ab3@20907> BRA.w JL_0_C6BC
00030E4A <AmiBlitz3_noFPU_r470.ab3@20910>   MOVE.w D3,leaamp+2
00030E50 <AmiBlitz3_noFPU_r470.ab3@20911>   MOVE.l leaamp,D1
00030E54 <AmiBlitz3_noFPU_r470.ab3@20914>   BSR.w writelong
00030E58 <AmiBlitz3_noFPU_r470.ab3@20917>   MOVE.w #$C701,D1
00030E5E <AmiBlitz3_noFPU_r470.ab3@20918>   MOVE.w varmode,D2
00030E62 <AmiBlitz3_noFPU_r470.ab3@20919>    BEQ.w JL_0_C6D0
00030E64 <AmiBlitz3_noFPU_r470.ab3@20920>   SUBQ.w #1,D1
00030E68 <AmiBlitz3_noFPU_r470.ab3@20923>   BSR.w Atokejsr
00030E70 <AmiBlitz3_noFPU_r470.ab3@20924>   MOVE.w #$FFFF,lasta6
00030E76 <AmiBlitz3_noFPU_r470.ab3@20925>   LEA stalign,A0
00030E7C <AmiBlitz3_noFPU_r470.ab3@20926>   LEA stalignf,A1
00030E80 <AmiBlitz3_noFPU_r470.ab3@20927>   BSR.w pokecode
00030E84 <AmiBlitz3_noFPU_r470.ab3@20928> BRA.w JL_0_C668
00030E88 <AmiBlitz3_noFPU_r470.ab3@20932>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
00030E8C <AmiBlitz3_noFPU_r470.ab3@20933>    BNE.w JL_0_C720
00030E92 <AmiBlitz3_noFPU_r470.ab3@20934>   JSR get1bytemain
00030E96 <AmiBlitz3_noFPU_r470.ab3@20935>   CMP.w #$77,D0
00030E9A <AmiBlitz3_noFPU_r470.ab3@20936>    BEQ.w JL_0_C71C
00030E9E <AmiBlitz3_noFPU_r470.ab3@20937>   CMP.w #$62,D0
00030EA2 <AmiBlitz3_noFPU_r470.ab3@20938>    BEQ.w JL_0_C718
00030EA6 <AmiBlitz3_noFPU_r470.ab3@20939>   CMP.w #"s",d0
00030EAA <AmiBlitz3_noFPU_r470.ab3@20940>   BEQ single3
00030EAE <AmiBlitz3_noFPU_r470.ab3@20941>   CMP.w #"d",d0
00030EB2 <AmiBlitz3_noFPU_r470.ab3@20942>   BEQ double3
00030EB6 <AmiBlitz3_noFPU_r470.ab3@20943>   CMP.w #$6C,D0
00030EBA <AmiBlitz3_noFPU_r470.ab3@20944>    BNE.w syntaxerr
00030EBC <AmiBlitz3_noFPU_r470.ab3@20945>   MOVEQ.l #$02,D1
00030EBE <AmiBlitz3_noFPU_r470.ab3@20946> RTS
00030EC6 <AmiBlitz3_noFPU_r470.ab3@20950>   MOVE.b #1,iee
00030EC8 <AmiBlitz3_noFPU_r470.ab3@20951>   MOVEQ.l #$3,d1
00030ECA <AmiBlitz3_noFPU_r470.ab3@20952> RTS
00030ED2 <AmiBlitz3_noFPU_r470.ab3@20956>   MOVE.b #1,iee
00030ED4 <AmiBlitz3_noFPU_r470.ab3@20957>   MOVEQ.l #$4,d1
00030ED6 <AmiBlitz3_noFPU_r470.ab3@20958> RTS
00030ED8 <AmiBlitz3_noFPU_r470.ab3@20962>   MOVEQ.l #$00,D1
00030EDA <AmiBlitz3_noFPU_r470.ab3@20963> RTS
00030EDC <AmiBlitz3_noFPU_r470.ab3@20967>   MOVEQ.l #$01,D1
00030EDE <AmiBlitz3_noFPU_r470.ab3@20968> RTS
00030EE0 <AmiBlitz3_noFPU_r470.ab3@20972>   MOVEQ.l #$01,D1
00030EE6 <AmiBlitz3_noFPU_r470.ab3@20973> JMP bakup
00030EEA <AmiBlitz3_noFPU_r470.ab3@20977>   BSR.w JL_0_C6F0
00030EEC <AmiBlitz3_noFPU_r470.ab3@20979>   MOVE.w D1,-(A7)
00030EF0 <AmiBlitz3_noFPU_r470.ab3@20980>    BSR.w AJL_0_BF6E
00030EF4 <AmiBlitz3_noFPU_r470.ab3@20981>   CMP.w #$2C,D0
00030EF8 <AmiBlitz3_noFPU_r470.ab3@20982>    BNE.w syntaxerr
00030EFA <AmiBlitz3_noFPU_r470.ab3@20983>   MOVE.l D3,-(A7)
00030EFE <AmiBlitz3_noFPU_r470.ab3@20984>    BSR.w AJL_0_BF6E
00030F00 <AmiBlitz3_noFPU_r470.ab3@20985>   MOVE.l D3,D1
00030F02 <AmiBlitz3_noFPU_r470.ab3@20986>   MOVE.l (A7)+,D3
00030F04 <AmiBlitz3_noFPU_r470.ab3@20987>   MOVE.w (A7)+,D2
00030F08 <AmiBlitz3_noFPU_r470.ab3@20988>    BEQ.w JL_0_C774
00030F0C <AmiBlitz3_noFPU_r470.ab3@20992>   CMP.w #$1,D2
00030F10 <AmiBlitz3_noFPU_r470.ab3@20993>    BEQ.w JL_0_C768
00030F12 <AmiBlitz3_noFPU_r470.ab3@20996>   SWAP D1
00030F16 <AmiBlitz3_noFPU_r470.ab3@20997>    BSR.w writeword
00030F18 <AmiBlitz3_noFPU_r470.ab3@20998>   SWAP D1
00030F1C <AmiBlitz3_noFPU_r470.ab3@20999>    BSR.w writeword
00030F1E <AmiBlitz3_noFPU_r470.ab3@21000>   SUBQ.l #1,D3
00030F22 <AmiBlitz3_noFPU_r470.ab3@21001>    BNE.w JL_0_C754
00030F24 <AmiBlitz3_noFPU_r470.ab3@21002> RTS
00030F28 <AmiBlitz3_noFPU_r470.ab3@21005>    BSR.w writeword
00030F2A <AmiBlitz3_noFPU_r470.ab3@21006>   SUBQ.l #1,D3
00030F2E <AmiBlitz3_noFPU_r470.ab3@21007>    BNE.w JL_0_C768
00030F30 <AmiBlitz3_noFPU_r470.ab3@21008> RTS
00030F34 <AmiBlitz3_noFPU_r470.ab3@21011>    BSR.w writebyte
00030F36 <AmiBlitz3_noFPU_r470.ab3@21012>   SUBQ.l #1,D3
00030F3A <AmiBlitz3_noFPU_r470.ab3@21013>    BNE.w JL_0_C774
00030F3C <AmiBlitz3_noFPU_r470.ab3@21014> RTS
00030F40 <AmiBlitz3_noFPU_r470.ab3@21018>   BSR.w JL_0_C6F0                                          ;definestorage
00030F42 <AmiBlitz3_noFPU_r470.ab3@21019>   MOVE.w D1,-(A7)
00030F46 <AmiBlitz3_noFPU_r470.ab3@21020>   BSR.w AJL_0_BF6E
00030F48 <AmiBlitz3_noFPU_r470.ab3@21021>   MOVE.w (A7)+,D1
00030F4A <AmiBlitz3_noFPU_r470.ab3@21022>   LSL.l D1,D3
00030F4C <AmiBlitz3_noFPU_r470.ab3@21023>   MOVE.l d3,d0
00030F50 <AmiBlitz3_noFPU_r470.ab3@21024>   BEQ 'll5
00030F52 <AmiBlitz3_noFPU_r470.ab3@21025>   MOVEQ #0,d1
00030F58 <AmiBlitz3_noFPU_r470.ab3@21028>     JSR writebyte
00030F5A <AmiBlitz3_noFPU_r470.ab3@21029>     SUBQ.l #1,d3
00030F5E <AmiBlitz3_noFPU_r470.ab3@21030>   BNE.s 'll10
00030F60 <AmiBlitz3_noFPU_r470.ab3@21033> RTS
00030F62 <AmiBlitz3_noFPU_r470.ab3@21037>   MOVE.w D0,-(A7)
00030F68 <AmiBlitz3_noFPU_r470.ab3@21038>   LEA dummyasm,A0
00030F6E <AmiBlitz3_noFPU_r470.ab3@21039>   MOVEA.l destpointer,A1
00030F78 <AmiBlitz3_noFPU_r470.ab3@21040>   MOVE.w asmlen2,asmlen
00030F7E <AmiBlitz3_noFPU_r470.ab3@21041>   JSR insasm
00030F80 <AmiBlitz3_noFPU_r470.ab3@21042>   MOVE.w (A7)+,D0
00030F82 <AmiBlitz3_noFPU_r470.ab3@21043> RTS
00030F86 <AmiBlitz3_noFPU_r470.ab3@21047>   BSR.w JL_0_C6F0
00030F90 <AmiBlitz3_noFPU_r470.ab3@21049>   MOVE.l #ptr_parameterstore,asmbuff
00030F92 <AmiBlitz3_noFPU_r470.ab3@21050>   TST.w D1
00030F96 <AmiBlitz3_noFPU_r470.ab3@21051>    BEQ.w JL_0_C7EE
00030F9A <AmiBlitz3_noFPU_r470.ab3@21052>   CMP.w #$1,D1
00030F9E <AmiBlitz3_noFPU_r470.ab3@21053>    BEQ.w JL_0_C844
00030FA2 <AmiBlitz3_noFPU_r470.ab3@21054>   CMP.w #$2,d1
00030FA6 <AmiBlitz3_noFPU_r470.ab3@21055>    BEQ long
00030FAA <AmiBlitz3_noFPU_r470.ab3@21056>   CMP.w #$3,d1
00030FAE <AmiBlitz3_noFPU_r470.ab3@21057>    BEQ single
00030FB0 <AmiBlitz3_noFPU_r470.ab3@21058>    MOVEQ.l #$0d,D3
00030FB6 <AmiBlitz3_noFPU_r470.ab3@21064>    JSR asmconst
00030FBA <AmiBlitz3_noFPU_r470.ab3@21065>    BSR.w JL_0_C796
00030FBE <AmiBlitz3_noFPU_r470.ab3@21066>    BSR.w writelong
00030FC2 <AmiBlitz3_noFPU_r470.ab3@21067>    BSR   writelong
00030FC6 <AmiBlitz3_noFPU_r470.ab3@21068>   CMP.w #$2C,D0
00030FCA <AmiBlitz3_noFPU_r470.ab3@21069>    BEQ.w JL_0_C7D8b
00030FCC <AmiBlitz3_noFPU_r470.ab3@21070> RTS
00030FCE <AmiBlitz3_noFPU_r470.ab3@21074>   MOVEQ.l #$0B,D3
00030FD6 <AmiBlitz3_noFPU_r470.ab3@21078>   MOVE.b #1,_dcb
00030FDC <AmiBlitz3_noFPU_r470.ab3@21081>   JSR asmconst
00030FE2 <AmiBlitz3_noFPU_r470.ab3@21082>   CLR.b _dcb
00030FE6 <AmiBlitz3_noFPU_r470.ab3@21083>   BSR.w JL_0_C796
00030FEA <AmiBlitz3_noFPU_r470.ab3@21084>   BSR writebyte
00030FEE <AmiBlitz3_noFPU_r470.ab3@21085>   BSR writebyte
00030FF2 <AmiBlitz3_noFPU_r470.ab3@21086>   BSR writebyte                                            ;long
00030FF6 <AmiBlitz3_noFPU_r470.ab3@21087>   BSR writebyte
00030FFA <AmiBlitz3_noFPU_r470.ab3@21088>   CMP.w #$2C,D0
00030FFE <AmiBlitz3_noFPU_r470.ab3@21089>    BEQ.w JL_0_C7D8
00031000 <AmiBlitz3_noFPU_r470.ab3@21090> RTS
00031002 <AmiBlitz3_noFPU_r470.ab3@21094>   MOVEQ.l #$0c,D3
0003100A <AmiBlitz3_noFPU_r470.ab3@21098>   MOVE.b #1,_dcb
00031010 <AmiBlitz3_noFPU_r470.ab3@21101>   JSR asmconst
00031016 <AmiBlitz3_noFPU_r470.ab3@21102>   CLR.b _dcb
0003101A <AmiBlitz3_noFPU_r470.ab3@21103>   BSR.w JL_0_C796
0003101E <AmiBlitz3_noFPU_r470.ab3@21104>   BSR.w writebyte
00031022 <AmiBlitz3_noFPU_r470.ab3@21105>   BSR.w writebyte
00031026 <AmiBlitz3_noFPU_r470.ab3@21106>   BSR.w writebyte
0003102A <AmiBlitz3_noFPU_r470.ab3@21107>   BSR.w writebyte
0003102E <AmiBlitz3_noFPU_r470.ab3@21108>   CMP.w #$2C,D0
00031032 <AmiBlitz3_noFPU_r470.ab3@21109>    BEQ.w JL_0_C7D8a
00031034 <AmiBlitz3_noFPU_r470.ab3@21110> RTS
00031036 <AmiBlitz3_noFPU_r470.ab3@21115>   MOVEQ.l #$11,D3
0003103C <AmiBlitz3_noFPU_r470.ab3@21118>   JSR get1bytemain
00031040 <AmiBlitz3_noFPU_r470.ab3@21119>   CMP.w #$22,D0
00031044 <AmiBlitz3_noFPU_r470.ab3@21120>    BNE.w JL_0_C81E
00031046 <AmiBlitz3_noFPU_r470.ab3@21123>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0003104A <AmiBlitz3_noFPU_r470.ab3@21124>    BEQ.w syntaxerr
0003104E <AmiBlitz3_noFPU_r470.ab3@21125>   CMP.w #$22,D0
00031052 <AmiBlitz3_noFPU_r470.ab3@21126>    BEQ.w JL_0_C816
00031056 <AmiBlitz3_noFPU_r470.ab3@21127>   CMP.b #"\",d0
0003105A <AmiBlitz3_noFPU_r470.ab3@21128>    BNE 'n1
0003105E <AmiBlitz3_noFPU_r470.ab3@21129>   CMP.b #"\",(a5)
00031062 <AmiBlitz3_noFPU_r470.ab3@21130>    BEQ 'do1
00031064 <AmiBlitz3_noFPU_r470.ab3@21133>   MOVE.w D0,D1
00031068 <AmiBlitz3_noFPU_r470.ab3@21134>   BSR.w writebyte
0003106C <AmiBlitz3_noFPU_r470.ab3@21135> BRA.w JL_0_C7FC
00031074 <AmiBlitz3_noFPU_r470.ab3@21138>   CMP.l #"__DA",1(a5)
00031078 <AmiBlitz3_noFPU_r470.ab3@21139>    BNE 'nodate1
00031080 <AmiBlitz3_noFPU_r470.ab3@21140>   CMP.l #"TE__",5(a5)
00031084 <AmiBlitz3_noFPU_r470.ab3@21141>    BEQ 'c1
0003108C <AmiBlitz3_noFPU_r470.ab3@21142>   CMP.l #"TE_G",5(a5)
00031090 <AmiBlitz3_noFPU_r470.ab3@21143>    BNE 'nodate1
00031098 <AmiBlitz3_noFPU_r470.ab3@21144>   CMP.l #"ER__",9(a5)
0003109C <AmiBlitz3_noFPU_r470.ab3@21145>    BNE 'nodate1
000310A2 <AmiBlitz3_noFPU_r470.ab3@21146>   JSR compiledatedc_ger
000310A6 <AmiBlitz3_noFPU_r470.ab3@21147> BRA 'n1
000310AC <AmiBlitz3_noFPU_r470.ab3@21150>   JSR compiledatedc
000310B0 <AmiBlitz3_noFPU_r470.ab3@21151> BRA 'n1
000310B8 <AmiBlitz3_noFPU_r470.ab3@21154>   CMP.l #"__VE",1(a5)
000310BC <AmiBlitz3_noFPU_r470.ab3@21155>    BNE 'n1
000310C2 <AmiBlitz3_noFPU_r470.ab3@21156>   CMP.w #"R_",5(a5)
000310C6 <AmiBlitz3_noFPU_r470.ab3@21157>    BNE 'n1
000310CC <AmiBlitz3_noFPU_r470.ab3@21158>   JSR version_string_dc
000310D0 <AmiBlitz3_noFPU_r470.ab3@21159> BRA.w JL_0_C7FC
000310D6 <AmiBlitz3_noFPU_r470.ab3@21163>   CLR.w instringon
000310DC <AmiBlitz3_noFPU_r470.ab3@21164>   JSR get1bytemain
000310E0 <AmiBlitz3_noFPU_r470.ab3@21165> BRA.w JL_0_C83A
000310EA <AmiBlitz3_noFPU_r470.ab3@21170>    MOVE.w oldqflag,instringon
000310F0 <AmiBlitz3_noFPU_r470.ab3@21171>   MOVEA.l lastsourcepos,A5
000310F6 <AmiBlitz3_noFPU_r470.ab3@21172>    JSR asmconst
000310FC <AmiBlitz3_noFPU_r470.ab3@21173>   SUBQ.l #1,destpointer
00031100 <AmiBlitz3_noFPU_r470.ab3@21174>    BSR.w JL_0_C796
00031106 <AmiBlitz3_noFPU_r470.ab3@21175>   ADDQ.l #1,destpointer
0003110A <AmiBlitz3_noFPU_r470.ab3@21176>    BSR.w writebyte
0003110E <AmiBlitz3_noFPU_r470.ab3@21179>   CMP.w #$2C,D0
00031112 <AmiBlitz3_noFPU_r470.ab3@21180>    BEQ.w JL_0_C7F0
00031114 <AmiBlitz3_noFPU_r470.ab3@21181> RTS
00031116 <AmiBlitz3_noFPU_r470.ab3@21185>   MOVEQ.l #$10,D3
0003111E <AmiBlitz3_noFPU_r470.ab3@21191>   MOVE.b #1,_dcb
00031124 <AmiBlitz3_noFPU_r470.ab3@21192>   JSR asmconst
0003112A <AmiBlitz3_noFPU_r470.ab3@21193>   CLR.b _dcb
0003112E <AmiBlitz3_noFPU_r470.ab3@21194>   BSR.w JL_0_C796
00031132 <AmiBlitz3_noFPU_r470.ab3@21195>   BSR.w writebyte
00031136 <AmiBlitz3_noFPU_r470.ab3@21196>   BSR.w writebyte
0003113A <AmiBlitz3_noFPU_r470.ab3@21197>   CMP.w #$2C,D0
0003113E <AmiBlitz3_noFPU_r470.ab3@21198>    BEQ.w JL_0_C84A
00031140 <AmiBlitz3_noFPU_r470.ab3@21199> RTS
00031146 <AmiBlitz3_noFPU_r470.ab3@21203>   ADDQ.l #3,destpointer
0003114E <AmiBlitz3_noFPU_r470.ab3@21204>   ANDI.w #$FFFC,destpointer+2
00031150 <AmiBlitz3_noFPU_r470.ab3@21205> RTS
00031156 <AmiBlitz3_noFPU_r470.ab3@21209>   ADDQ.l #7,destpointer
0003115E <AmiBlitz3_noFPU_r470.ab3@21210>   ANDI.w #$FFF8,destpointer+2
00031160 <AmiBlitz3_noFPU_r470.ab3@21211> RTS
00031166 <AmiBlitz3_noFPU_r470.ab3@21215>   ADDQ.l #1,destpointer                                    ;even
0003116E <AmiBlitz3_noFPU_r470.ab3@21216>   BCLR #$0,destpointer+3
00031170 <AmiBlitz3_noFPU_r470.ab3@21217> RTS
00031172 <AmiBlitz3_noFPU_r470.ab3@21220> datasize: Ds.w 1
00031178 <AmiBlitz3_noFPU_r470.ab3@21230>   TST.b debugmode
0003117C <AmiBlitz3_noFPU_r470.ab3@21231>   BEQ.w pdt__skip
00031180 <AmiBlitz3_noFPU_r470.ab3@21232>   MOVE.w #$4420,D0                                         ;'D '
00031184 <AmiBlitz3_noFPU_r470.ab3@21233>   MOVE.b datasize+1(PC),D0
00031188 <AmiBlitz3_noFPU_r470.ab3@21234> BRA.w JL_0_C1E6
0003118A <AmiBlitz3_noFPU_r470.ab3@21237> RTS
0003118E <AmiBlitz3_noFPU_r470.ab3@21241>   MOVE.w #$FC17,D1
00031194 <AmiBlitz3_noFPU_r470.ab3@21242>    JSR uselib
0003119E <AmiBlitz3_noFPU_r470.ab3@21244>    MOVE.w oldqflag,instringon
000311A4 <AmiBlitz3_noFPU_r470.ab3@21245>   MOVEA.l lastsourcepos,A5
000311AA <AmiBlitz3_noFPU_r470.ab3@21246>    JSR AJL_0_498A
000311B0 <AmiBlitz3_noFPU_r470.ab3@21247>   MOVE.w D1,datasize
000311B4 <AmiBlitz3_noFPU_r470.ab3@21248>   CMP.w #$7,D1
000311B8 <AmiBlitz3_noFPU_r470.ab3@21249>    BEQ.w JL_0_C944
000311BA <AmiBlitz3_noFPU_r470.ab3@21250>   MOVE.w D1,-(A7)
000311BE <AmiBlitz3_noFPU_r470.ab3@21253>   BSR.w pdt
000311C0 <AmiBlitz3_noFPU_r470.ab3@21254>   MOVE.w (A7),D2
000311C4 <AmiBlitz3_noFPU_r470.ab3@21255>    BSR.w JL_0_B1D8
000311C6 <AmiBlitz3_noFPU_r470.ab3@21256>   CMP.w (A7),D2                                            ;datamode
000311CA <AmiBlitz3_noFPU_r470.ab3@21257>    BEQ.w JL_0_C920
000311CC <AmiBlitz3_noFPU_r470.ab3@21258>   MOVE.w D2,D1
000311CE <AmiBlitz3_noFPU_r470.ab3@21259>   MOVE.w (A7),D2
000311D2 <AmiBlitz3_noFPU_r470.ab3@21260>   CMP.w #$2,D2
000311D6 <AmiBlitz3_noFPU_r470.ab3@21261>    BNE.w JL_0_C8FE
000311DA <AmiBlitz3_noFPU_r470.ab3@21262>   CMP.w #$3,D1
000311DE <AmiBlitz3_noFPU_r470.ab3@21263>    BNE.w baddaterr
000311E4 <AmiBlitz3_noFPU_r470.ab3@21264>   CMP.l #$10000,D3
000311E8 <AmiBlitz3_noFPU_r470.ab3@21265>    BCC.w baddaterr
000311EC <AmiBlitz3_noFPU_r470.ab3@21266> BRA.w JL_0_C920
000311F0 <AmiBlitz3_noFPU_r470.ab3@21269>   CMP.w #$1,D2
000311F4 <AmiBlitz3_noFPU_r470.ab3@21270>    BNE.w JL_0_C91C
000311F8 <AmiBlitz3_noFPU_r470.ab3@21271>   CMP.w #$2,D1
000311FC <AmiBlitz3_noFPU_r470.ab3@21272>    BNE.w baddaterr
00031202 <AmiBlitz3_noFPU_r470.ab3@21273>   CMP.l #$100,D3
00031206 <AmiBlitz3_noFPU_r470.ab3@21274>    BCC.w baddaterr
0003120A <AmiBlitz3_noFPU_r470.ab3@21275> BRA.w JL_0_C920
0003120E <AmiBlitz3_noFPU_r470.ab3@21278> BRA.w baddaterr
00031212 <AmiBlitz3_noFPU_r470.ab3@21281>   CMP.w #$3,D2
00031216 <AmiBlitz3_noFPU_r470.ab3@21282>   BCC.w JL_0_C930
0003121A <AmiBlitz3_noFPU_r470.ab3@21283>   BSR.w JL_0_C1E6
0003121E <AmiBlitz3_noFPU_r470.ab3@21284> BRA.w JL_0_C934
00031224 <AmiBlitz3_noFPU_r470.ab3@21287>   TST.b iee
00031228 <AmiBlitz3_noFPU_r470.ab3@21288>   BEQ 'old
0003122C <AmiBlitz3_noFPU_r470.ab3@21289>   CMP.b #5,d2
00031230 <AmiBlitz3_noFPU_r470.ab3@21290>   BNE 'old
00031236 <AmiBlitz3_noFPU_r470.ab3@21292>   TST.b fpu
0003123A <AmiBlitz3_noFPU_r470.ab3@21293>   BEQ 'old
0003123E <AmiBlitz3_noFPU_r470.ab3@21294>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031242 <AmiBlitz3_noFPU_r470.ab3@21298>   BSR.w JL_0_C1DE                                          ;write data >3
00031248 <AmiBlitz3_noFPU_r470.ab3@21301>   JSR reget
0003124C <AmiBlitz3_noFPU_r470.ab3@21302>   CMP.w #$2C,D0
00031250 <AmiBlitz3_noFPU_r470.ab3@21303>    BEQ.w JL_0_C8CC
00031252 <AmiBlitz3_noFPU_r470.ab3@21304>   ADDQ.w #2,A7
00031254 <AmiBlitz3_noFPU_r470.ab3@21305> RTS
00031258 <AmiBlitz3_noFPU_r470.ab3@21308>    BSR.w pdt
0003125E <AmiBlitz3_noFPU_r470.ab3@21309>   MOVE.l data2,-(A7)
00031262 <AmiBlitz3_noFPU_r470.ab3@21310>    BSR.w JL_0_C1DE
00031264 <AmiBlitz3_noFPU_r470.ab3@21311>   MOVEQ.l #$00,D1
0003126A <AmiBlitz3_noFPU_r470.ab3@21312>    JSR get1bytemain
0003126E <AmiBlitz3_noFPU_r470.ab3@21313>    BEQ.w JL_0_C9A6
00031272 <AmiBlitz3_noFPU_r470.ab3@21314>   CMP.w #$22,D0
00031276 <AmiBlitz3_noFPU_r470.ab3@21315>    BEQ.w JL_0_C988
0003127A <AmiBlitz3_noFPU_r470.ab3@21316>   CMP.w #$2C,D0
0003127E <AmiBlitz3_noFPU_r470.ab3@21317>    BEQ.w JL_0_C9A6
00031282 <AmiBlitz3_noFPU_r470.ab3@21320>    BSR.w JL_0_C210
00031284 <AmiBlitz3_noFPU_r470.ab3@21321>   ADDQ.w #1,D1
0003128A <AmiBlitz3_noFPU_r470.ab3@21322>    JSR getchar
0003128C <AmiBlitz3_noFPU_r470.ab3@21323>   TST.w D0
00031290 <AmiBlitz3_noFPU_r470.ab3@21324>    BEQ.w JL_0_C9A6
00031294 <AmiBlitz3_noFPU_r470.ab3@21325>   CMP.w #$2C,D0
00031298 <AmiBlitz3_noFPU_r470.ab3@21326>    BEQ.w JL_0_C9A6
0003129C <AmiBlitz3_noFPU_r470.ab3@21327> BRA.w JL_0_C96C
0003129E <AmiBlitz3_noFPU_r470.ab3@21331>    MOVEQ #0,d0
000312A0 <AmiBlitz3_noFPU_r470.ab3@21332>    MOVE.b (a5)+,d0
000312A4 <AmiBlitz3_noFPU_r470.ab3@21333>    BEQ.w notqerr2
000312A8 <AmiBlitz3_noFPU_r470.ab3@21334>   CMP.w #$22,D0
000312AC <AmiBlitz3_noFPU_r470.ab3@21335>    BEQ.w JL_0_C9A2
000312B0 <AmiBlitz3_noFPU_r470.ab3@21336>    BSR.w JL_0_C210
000312B2 <AmiBlitz3_noFPU_r470.ab3@21337>   ADDQ.w #1,D1
000312B6 <AmiBlitz3_noFPU_r470.ab3@21338> BRA.w JL_0_C988
000312BC <AmiBlitz3_noFPU_r470.ab3@21339> notqerr2 JMP notqerr
000312C2 <AmiBlitz3_noFPU_r470.ab3@21341>   CLR.w instringon
000312C8 <AmiBlitz3_noFPU_r470.ab3@21342>   JSR get1bytemain
000312CA <AmiBlitz3_noFPU_r470.ab3@21345>   MOVEA.l (A7)+,A0
000312D0 <AmiBlitz3_noFPU_r470.ab3@21346>   MOVE.w dontwrite,D2
000312D4 <AmiBlitz3_noFPU_r470.ab3@21347>    BNE.w JL_0_C9B4
000312D6 <AmiBlitz3_noFPU_r470.ab3@21348>   MOVE.l D1,(A0)
000312DC <AmiBlitz3_noFPU_r470.ab3@21351>   ADDQ.l #1,data2
000312E4 <AmiBlitz3_noFPU_r470.ab3@21352>   BCLR #$0,data2+3
000312E8 <AmiBlitz3_noFPU_r470.ab3@21353>   CMP.w #$2C,D0
000312EC <AmiBlitz3_noFPU_r470.ab3@21354>    BEQ.w JL_0_C944
000312EE <AmiBlitz3_noFPU_r470.ab3@21355> RTS
000312F4 <AmiBlitz3_noFPU_r470.ab3@21359> JMP vardeclareerr
000312FA <AmiBlitz3_noFPU_r470.ab3@21362>   MOVE.w proceduremode,D1                                  ;doshared
000312FE <AmiBlitz3_noFPU_r470.ab3@21364>   BNE.w 'l1
00031300 <AmiBlitz3_noFPU_r470.ab3@21365>   MOVE.w D1,-(A7)
00031306 <AmiBlitz3_noFPU_r470.ab3@21366>   CLR.w proceduremode
0003130C <AmiBlitz3_noFPU_r470.ab3@21369>   LEA varbase,a2
00031310 <AmiBlitz3_noFPU_r470.ab3@21370>   BSR.w getparameter
00031312 <AmiBlitz3_noFPU_r470.ab3@21371>   MOVE.w d2,-(a7)
00031318 <AmiBlitz3_noFPU_r470.ab3@21372>    JSR findvariable
0003131C <AmiBlitz3_noFPU_r470.ab3@21373>    BEQ 'checkdim
00031322 <AmiBlitz3_noFPU_r470.ab3@21374>    LEA sharebase,a2
00031324 <AmiBlitz3_noFPU_r470.ab3@21375>    MOVEQ #$f+4,d7
00031328 <AmiBlitz3_noFPU_r470.ab3@21376>    BSR.w findlab                                         ;find var
0003132C <AmiBlitz3_noFPU_r470.ab3@21377>    BEQ.b dupsherr
00031330 <AmiBlitz3_noFPU_r470.ab3@21378>    BSR addlabel
00031334 <AmiBlitz3_noFPU_r470.ab3@21379>    CMP.b #".",d0
00031338 <AmiBlitz3_noFPU_r470.ab3@21380>    BNE JUMP_vardeclareerr
0003133A <AmiBlitz3_noFPU_r470.ab3@21381>    MOVE.l a2,a3
00031340 <AmiBlitz3_noFPU_r470.ab3@21382>    JSR JL_0_8EB8b
00031342 <AmiBlitz3_noFPU_r470.ab3@21413>   MOVE.w (a7)+,d2
00031346 <AmiBlitz3_noFPU_r470.ab3@21414>    CMP.b #",",d0
0003134A <AmiBlitz3_noFPU_r470.ab3@21415>    BNE 'ret
00031350 <AmiBlitz3_noFPU_r470.ab3@21416>    JSR get1bytemain
00031354 <AmiBlitz3_noFPU_r470.ab3@21417> BRA 'again2
0003135A <AmiBlitz3_noFPU_r470.ab3@21420>   MOVE.w (A7)+,proceduremode
0003135C <AmiBlitz3_noFPU_r470.ab3@21421> RTS
00031362 <AmiBlitz3_noFPU_r470.ab3@21428>    CMP.w #2,6(a2)
00031366 <AmiBlitz3_noFPU_r470.ab3@21429>    BEQ 'do
0003136C <AmiBlitz3_noFPU_r470.ab3@21430>    CMP.w #$102,6(a2)
00031370 <AmiBlitz3_noFPU_r470.ab3@21431>    BEQ 'do
00031376 <AmiBlitz3_noFPU_r470.ab3@21432> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0003137C <AmiBlitz3_noFPU_r470.ab3@21435>   LEA varbase,a0
0003137E <AmiBlitz3_noFPU_r470.ab3@21438>   MOVE.l (A0),D0                                           ;find label
00031382 <AmiBlitz3_noFPU_r470.ab3@21439>    BEQ.b 'z1
00031384 <AmiBlitz3_noFPU_r470.ab3@21440>    CMP.l d0,a2
00031388 <AmiBlitz3_noFPU_r470.ab3@21441>    BEQ 'z1
0003138A <AmiBlitz3_noFPU_r470.ab3@21442>    MOVE.l d0,a0
0003138E <AmiBlitz3_noFPU_r470.ab3@21443> BRA 'm1
00031390 <AmiBlitz3_noFPU_r470.ab3@21446>   MOVE.l (a2),d1
00031392 <AmiBlitz3_noFPU_r470.ab3@21447>     MOVE.l d1,(a0)
00031394 <AmiBlitz3_noFPU_r470.ab3@21448>     CLR.l (a2)
0003139A <AmiBlitz3_noFPU_r470.ab3@21449>     LEA sharebase,a0
0003139C <AmiBlitz3_noFPU_r470.ab3@21450>     MOVE.l (a0),(a2)
0003139E <AmiBlitz3_noFPU_r470.ab3@21451>     MOVE.l a2,(a0)
000313A4 <AmiBlitz3_noFPU_r470.ab3@21452>     JSR get1bytemain
000313AA <AmiBlitz3_noFPU_r470.ab3@21453>     JSR get1bytemain
000313AE <AmiBlitz3_noFPU_r470.ab3@21454> BRA 'domore
000313B6 <AmiBlitz3_noFPU_r470.ab3@21457>   MOVE.b #1,nowdeclare
000313B8 <AmiBlitz3_noFPU_r470.ab3@21458>   MOVE.w D1,-(A7)
000313BE <AmiBlitz3_noFPU_r470.ab3@21459>   CLR.w proceduremode
000313C2 <AmiBlitz3_noFPU_r470.ab3@21462>    BSR.w getparameter
000313C4 <AmiBlitz3_noFPU_r470.ab3@21463>   MOVE.w D2,-(A7)
000313CA <AmiBlitz3_noFPU_r470.ab3@21464>   LEA firstglob,A2
000313CE <AmiBlitz3_noFPU_r470.ab3@21465>    BSR.w findvariable2
000313D2 <AmiBlitz3_noFPU_r470.ab3@21466>    BNE.b JL_0_CA06
000313D8 <AmiBlitz3_noFPU_r470.ab3@21469>   MOVE.b flagmask+1,D1
000313DC <AmiBlitz3_noFPU_r470.ab3@21470>   MOVE.b $7(A2),D3
000313DE <AmiBlitz3_noFPU_r470.ab3@21471>   EOR.b D3,D1
000313E2 <AmiBlitz3_noFPU_r470.ab3@21472>    BEQ.w dupsherr
000313E6 <AmiBlitz3_noFPU_r470.ab3@21473>    BSR.w findlab
000313EA <AmiBlitz3_noFPU_r470.ab3@21474>    BEQ.b JL_0_C9F0
000313EE <AmiBlitz3_noFPU_r470.ab3@21477>    BSR.w addlabel
000313F0 <AmiBlitz3_noFPU_r470.ab3@21478>   MOVE.w (A7)+,D2
000313F2 <AmiBlitz3_noFPU_r470.ab3@21479>   MOVE.l A2,-(A7)
000313F6 <AmiBlitz3_noFPU_r470.ab3@21480>    BSR.w JL_0_8E3C
000313F8 <AmiBlitz3_noFPU_r470.ab3@21481>   MOVEA.l (A7)+,A2
000313FA <AmiBlitz3_noFPU_r470.ab3@21482>   MOVEQ.l #$04,D1
000313FC <AmiBlitz3_noFPU_r470.ab3@21483>   ADDQ.w #4,A2
000313FE <AmiBlitz3_noFPU_r470.ab3@21484>   ADDQ.w #4,A3
00031400 <AmiBlitz3_noFPU_r470.ab3@21487>     MOVE.w (A3)+,(A2)+
00031404 <AmiBlitz3_noFPU_r470.ab3@21488>   DBF D1,JL_0_CA1A
0003140C <AmiBlitz3_noFPU_r470.ab3@21490>   BTST #$1,flagmask+1
00031410 <AmiBlitz3_noFPU_r470.ab3@21491>    BEQ.w JL_0_CA3C
00031416 <AmiBlitz3_noFPU_r470.ab3@21492>    JSR get1bytemain
0003141A <AmiBlitz3_noFPU_r470.ab3@21493>   CMP.w #$29,D0
0003141E <AmiBlitz3_noFPU_r470.ab3@21494>    BNE.w syntaxerrc
00031424 <AmiBlitz3_noFPU_r470.ab3@21495>    JSR get1bytemain
00031428 <AmiBlitz3_noFPU_r470.ab3@21498>    CMP.w #$2C,D0
0003142C <AmiBlitz3_noFPU_r470.ab3@21499>    BNE.w JL_0_CA4C
00031432 <AmiBlitz3_noFPU_r470.ab3@21500>    JSR get1bytemain
00031436 <AmiBlitz3_noFPU_r470.ab3@21501> BRA.w JL_0_C9DE
0003143C <AmiBlitz3_noFPU_r470.ab3@21504>   MOVE.w (A7)+,proceduremode
0003143E <AmiBlitz3_noFPU_r470.ab3@21505> RTS
00031444 <AmiBlitz3_noFPU_r470.ab3@21507> syntaxerrc JMP syntaxerr
00031448 <AmiBlitz3_noFPU_r470.ab3@21510>    BSR.w JL_0_C05C
0003144E <AmiBlitz3_noFPU_r470.ab3@21511>    JSR check_incdir                                        ; ergebnis in d2
00031454 <AmiBlitz3_noFPU_r470.ab3@21513>    LEA ptr_parameterstore,a1
00031456 <AmiBlitz3_noFPU_r470.ab3@21514>    MOVE.l d2,-(a7)
0003145C <AmiBlitz3_noFPU_r470.ab3@21515>    LEA includetemp,a0                                      ; filename in includetemp packen
0003145E <AmiBlitz3_noFPU_r470.ab3@21518>      MOVE.b (a1)+,(a0)+
00031462 <AmiBlitz3_noFPU_r470.ab3@21519>    BNE 'l4
00031468 <AmiBlitz3_noFPU_r470.ab3@21521>    LEA ptr_parameterstore,a1
0003146A <AmiBlitz3_noFPU_r470.ab3@21522>    MOVE.l a1,a0
0003146C <AmiBlitz3_noFPU_r470.ab3@21525>     TST.b (a0)+
00031470 <AmiBlitz3_noFPU_r470.ab3@21526>    BNE 'l1
00031472 <AmiBlitz3_noFPU_r470.ab3@21529>      MOVE.b -(a0),d0
00031476 <AmiBlitz3_noFPU_r470.ab3@21530>      CMP.b #":",d0
0003147A <AmiBlitz3_noFPU_r470.ab3@21531>       BEQ 'out
0003147E <AmiBlitz3_noFPU_r470.ab3@21532>      CMP.b #"/",d0
00031482 <AmiBlitz3_noFPU_r470.ab3@21533>       BEQ 'out
00031484 <AmiBlitz3_noFPU_r470.ab3@21534>      CMP.l a1,a0
00031488 <AmiBlitz3_noFPU_r470.ab3@21535>       BEQ 'out2
0003148C <AmiBlitz3_noFPU_r470.ab3@21536> BRA 'l2
0003148E <AmiBlitz3_noFPU_r470.ab3@21539>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031490 <AmiBlitz3_noFPU_r470.ab3@21542>    MOVEQ.l #-$01,D2
00031492 <AmiBlitz3_noFPU_r470.ab3@21545>      ADDQ.w #1,D2
00031494 <AmiBlitz3_noFPU_r470.ab3@21546>      MOVE.b (a0)+,(a1)+
00031498 <AmiBlitz3_noFPU_r470.ab3@21547>    BNE 'l3
0003149A <AmiBlitz3_noFPU_r470.ab3@21548>    CLR.b (a1)+
000314A0 <AmiBlitz3_noFPU_r470.ab3@21550>    LEA ptr_parameterstore,a1
000314A4 <AmiBlitz3_noFPU_r470.ab3@21551>    BSR.w findxinc                                         ;find include
000314A8 <AmiBlitz3_noFPU_r470.ab3@21552>     BEQ.w 'outb
000314AA <AmiBlitz3_noFPU_r470.ab3@21554>    MOVE.w D2,-(A7)
000314AE <AmiBlitz3_noFPU_r470.ab3@21555>    BSR.w addlabel
000314B0 <AmiBlitz3_noFPU_r470.ab3@21556>    MOVE.w (A7)+,D2
000314B6 <AmiBlitz3_noFPU_r470.ab3@21558>    LEA ptr_parameterstore,a1
000314BC <AmiBlitz3_noFPU_r470.ab3@21559>    LEA includetemp,a0                                      ; namen in includetemp schreiben
000314BE <AmiBlitz3_noFPU_r470.ab3@21562>     MOVE.b (a0)+,(a1)+
000314C2 <AmiBlitz3_noFPU_r470.ab3@21563>    BNE 'l4b
000314C4 <AmiBlitz3_noFPU_r470.ab3@21565>    MOVE.l (a7)+,d2
000314CA <AmiBlitz3_noFPU_r470.ab3@21566>    LEA ptr_parameterstore,a1
000314CE <AmiBlitz3_noFPU_r470.ab3@21567> BRA.w JL_0_CB18
000314D4 <AmiBlitz3_noFPU_r470.ab3@21570>    LEA ptr_parameterstore,a1
000314DA <AmiBlitz3_noFPU_r470.ab3@21571>    LEA includetemp,a0
000314DC <AmiBlitz3_noFPU_r470.ab3@21574>     MOVE.b (a0)+,(a1)+
000314E0 <AmiBlitz3_noFPU_r470.ab3@21575>    BNE 'l4b2
000314E2 <AmiBlitz3_noFPU_r470.ab3@21577>    MOVE.l (a7)+,d2
000314E8 <AmiBlitz3_noFPU_r470.ab3@21578>    LEA ptr_parameterstore,a1
000314EA <AmiBlitz3_noFPU_r470.ab3@21581> RTS
000314EE <AmiBlitz3_noFPU_r470.ab3@21585>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
000314F4 <AmiBlitz3_noFPU_r470.ab3@21587>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
000314FA <AmiBlitz3_noFPU_r470.ab3@21589>   MOVEA.l _dosbase,A6
000314FC <AmiBlitz3_noFPU_r470.ab3@21590>   MOVE.l D0,D7                                                 ; store Lockpointer
00031500 <AmiBlitz3_noFPU_r470.ab3@21591>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00031502 <AmiBlitz3_noFPU_r470.ab3@21592>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031508 <AmiBlitz3_noFPU_r470.ab3@21593>   MOVE.l ptr_macrobuffer_begin,D2
0003150C <AmiBlitz3_noFPU_r470.ab3@21594>    JSR _Examine(A6)
00031512 <AmiBlitz3_noFPU_r470.ab3@21595>   MOVEA.l ptr_macrobuffer_begin,A0
00031516 <AmiBlitz3_noFPU_r470.ab3@21596>   MOVE.l $4(A0),D0
0003151A <AmiBlitz3_noFPU_r470.ab3@21597>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
0003151E <AmiBlitz3_noFPU_r470.ab3@21598>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
00031520 <AmiBlitz3_noFPU_r470.ab3@21599>   MOVE.l D7,D1                                                 ; begin unlock the file
00031524 <AmiBlitz3_noFPU_r470.ab3@21600>    JSR _UnLock(A6)
0003152A <AmiBlitz3_noFPU_r470.ab3@21602>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031530 <AmiBlitz3_noFPU_r470.ab3@21603>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031534 <AmiBlitz3_noFPU_r470.ab3@21604>    JSR _Open(A6)
00031536 <AmiBlitz3_noFPU_r470.ab3@21605>   MOVE.l D0,D7
0003153A <AmiBlitz3_noFPU_r470.ab3@21606>    BEQ.w error_cant_open_include
00031540 <AmiBlitz3_noFPU_r470.ab3@21607>   MOVE.l destpointer,D0
00031542 <AmiBlitz3_noFPU_r470.ab3@21608>   ADD.l D3,D0
00031548 <AmiBlitz3_noFPU_r470.ab3@21609>   CMP.l destbufferend,D0
0003154C <AmiBlitz3_noFPU_r470.ab3@21610>    BHI.w JL_0_CAF6
00031552 <AmiBlitz3_noFPU_r470.ab3@21611>   MOVE.l destpointer,D2
00031554 <AmiBlitz3_noFPU_r470.ab3@21612>   MOVE.l D7,D1
00031558 <AmiBlitz3_noFPU_r470.ab3@21613>    JSR _Read(A6)
0003155E <AmiBlitz3_noFPU_r470.ab3@21614>   CMP.l #$FFFFFFFF,D0
00031562 <AmiBlitz3_noFPU_r470.ab3@21615>    BEQ.w error_reading_file
00031568 <AmiBlitz3_noFPU_r470.ab3@21616>   ADD.l D0,destpointer
0003156C <AmiBlitz3_noFPU_r470.ab3@21617> BRA.w JL_0_CB04
00031574 <AmiBlitz3_noFPU_r470.ab3@21620>   MOVE.w #$FFFF,dontwrite
0003157A <AmiBlitz3_noFPU_r470.ab3@21621>   MOVE.l D0,destpointer
0003157C <AmiBlitz3_noFPU_r470.ab3@21624>   MOVE.l D7,D1
00031580 <AmiBlitz3_noFPU_r470.ab3@21625> JMP _Close(A6)
00031586 <AmiBlitz3_noFPU_r470.ab3@21629> JMP illdirerr
0003158C <AmiBlitz3_noFPU_r470.ab3@21632>   TST.w dirmode                                            ;include  open
00031590 <AmiBlitz3_noFPU_r470.ab3@21633>    BNE.w JUMP_illdirerr
00031594 <AmiBlitz3_noFPU_r470.ab3@21634>   BSR.w JL_0_C05C
0003159A <AmiBlitz3_noFPU_r470.ab3@21635>   JSR check_incdir
0003159E <AmiBlitz3_noFPU_r470.ab3@21638>   BSR.w findconstant
000315A2 <AmiBlitz3_noFPU_r470.ab3@21639>    BEQ.w alincerr
000315A8 <AmiBlitz3_noFPU_r470.ab3@21641>   LEA constantbase,A2
000315AC <AmiBlitz3_noFPU_r470.ab3@21642>   BSR.w addhere2
000315B0 <AmiBlitz3_noFPU_r470.ab3@21643>   CLR.w $C(A2)
000315B4 <AmiBlitz3_noFPU_r470.ab3@21644>   CLR.l $4(A2)
000315BA <AmiBlitz3_noFPU_r470.ab3@21646>   MOVE.l #ptr_parameterstore,D1
000315BC <AmiBlitz3_noFPU_r470.ab3@21647>   MOVE.l d1,a0
000315C2 <AmiBlitz3_noFPU_r470.ab3@21648>   LEA includetemp2,a1
000315C4 <AmiBlitz3_noFPU_r470.ab3@21651>     MOVE.b (a0)+,(a1)+
000315C8 <AmiBlitz3_noFPU_r470.ab3@21652>   BNE 'l1
000315CE <AmiBlitz3_noFPU_r470.ab3@21653>   JSR save_includename
000315D8 <AmiBlitz3_noFPU_r470.ab3@21654>   MOVE.l #0,include_process
000315E0 <AmiBlitz3_noFPU_r470.ab3@21656>   CMP.l #$62623200,-4(a0)                                  ;.bb2
000315E4 <AmiBlitz3_noFPU_r470.ab3@21657>   BEQ 'ok
000315EC <AmiBlitz3_noFPU_r470.ab3@21658>   CMP.l #$61623300,-4(a0)                                  ;.ab3
000315F0 <AmiBlitz3_noFPU_r470.ab3@21659>   BEQ 'ok_tokenize
000315F8 <AmiBlitz3_noFPU_r470.ab3@21660>   CMP.l #$61623200,-4(a0)                                  ;.ab2
000315FC <AmiBlitz3_noFPU_r470.ab3@21661>   BEQ 'ok_tokenize
00031604 <AmiBlitz3_noFPU_r470.ab3@21662>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031608 <AmiBlitz3_noFPU_r470.ab3@21663>   BEQ 'ok
0003160E <AmiBlitz3_noFPU_r470.ab3@21664> JMP errortoken                                             ;can only include
00031618 <AmiBlitz3_noFPU_r470.ab3@21667>    MOVE.l #-1,include_process                              ; must tokenize the include
0003161E <AmiBlitz3_noFPU_r470.ab3@21670>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00031624 <AmiBlitz3_noFPU_r470.ab3@21671>   MOVEA.l _dosbase,A6
00031628 <AmiBlitz3_noFPU_r470.ab3@21672>   JSR _Open(A6)
0003162C <AmiBlitz3_noFPU_r470.ab3@21673>   MOVE.l D0,$8(A2)
00031630 <AmiBlitz3_noFPU_r470.ab3@21674>   BEQ.w error_cant_open_include
00031636 <AmiBlitz3_noFPU_r470.ab3@21675>   CLR.l includeline
0003163A <AmiBlitz3_noFPU_r470.ab3@21676>   MOVE.l 8(a2),d1
0003163C <AmiBlitz3_noFPU_r470.ab3@21677>   MOVE.l d3,-(a7)
0003163E <AmiBlitz3_noFPU_r470.ab3@21678>   MOVEQ #0,d2
00031640 <AmiBlitz3_noFPU_r470.ab3@21679>   MOVEQ #1,d3
00031644 <AmiBlitz3_noFPU_r470.ab3@21680>   JSR _Seek(a6)                                            ; -66
00031648 <AmiBlitz3_noFPU_r470.ab3@21681>   MOVE.l 8(a2),d1
0003164A <AmiBlitz3_noFPU_r470.ab3@21682>   MOVEQ #0,d2
0003164C <AmiBlitz3_noFPU_r470.ab3@21683>   MOVEQ #-1,d3
00031650 <AmiBlitz3_noFPU_r470.ab3@21684>   JSR _Seek(a6)                                            ; -66
00031652 <AmiBlitz3_noFPU_r470.ab3@21685>   MOVE.l (a7)+,d3
00031654 <AmiBlitz3_noFPU_r470.ab3@21686>   ADDQ.l #4,d0
0003165A <AmiBlitz3_noFPU_r470.ab3@21688>   MOVE.l #$10000,D1
00031660 <AmiBlitz3_noFPU_r470.ab3@21689>   MOVEA.l _execbase,A6
00031664 <AmiBlitz3_noFPU_r470.ab3@21692>   JSR _AllocVec(a6)
00031668 <AmiBlitz3_noFPU_r470.ab3@21694>   MOVE.l D0,$4(A2)
0003166C <AmiBlitz3_noFPU_r470.ab3@21695>   MOVE.l D0,$E(A2)
0003166E <AmiBlitz3_noFPU_r470.ab3@21696>   MOVEA.l D0,A5
00031674 <AmiBlitz3_noFPU_r470.ab3@21703>   ADDQ.w #1,ininclude                                      ;enter include
0003167A <AmiBlitz3_noFPU_r470.ab3@21706>   LEA _include,a0
0003167E <AmiBlitz3_noFPU_r470.ab3@21707>   MOVEM.l a0-a6/d0-d7,-(a7)
00031684 <AmiBlitz3_noFPU_r470.ab3@21708>   LEA ptr_parameterstore,a1
00031686 <AmiBlitz3_noFPU_r470.ab3@21711>     MOVE.b (a0)+,(a1)+
0003168A <AmiBlitz3_noFPU_r470.ab3@21712>   BNE 'l1b
0003168C <AmiBlitz3_noFPU_r470.ab3@21714>   MOVEQ #9,d2
00031692 <AmiBlitz3_noFPU_r470.ab3@21715>   JSR findlabel2
00031696 <AmiBlitz3_noFPU_r470.ab3@21716>   BNE 'd
0003169E <AmiBlitz3_noFPU_r470.ab3@21717>   MOVE.l #1,8(a2)
000316A2 <AmiBlitz3_noFPU_r470.ab3@21718>   MOVEM.l (a7)+,a0-a6/d0-d7
000316A6 <AmiBlitz3_noFPU_r470.ab3@21719> BRA 'd2
000316AC <AmiBlitz3_noFPU_r470.ab3@21722>   JSR addlabelhash
000316B4 <AmiBlitz3_noFPU_r470.ab3@21723>   MOVE.l #$1,$4(A2)
000316BC <AmiBlitz3_noFPU_r470.ab3@21724>   MOVE.l #1,8(a2)
000316C0 <AmiBlitz3_noFPU_r470.ab3@21725>   MOVEM.l (a7)+,a0-a6/d0-d7
000316C6 <AmiBlitz3_noFPU_r470.ab3@21728>   LEA inctab,a0
000316C8 <AmiBlitz3_noFPU_r470.ab3@21729>   MOVEQ #0,d1
000316CE <AmiBlitz3_noFPU_r470.ab3@21730>   MOVE.w ininclude,d1
000316D2 <AmiBlitz3_noFPU_r470.ab3@21731>   CLR.l $0(a0,d1*4)
000316D8 <AmiBlitz3_noFPU_r470.ab3@21732>   MOVEA.l passstack,A7
000316DE <AmiBlitz3_noFPU_r470.ab3@21733> JMP AJL_0_413A
000316E4 <AmiBlitz3_noFPU_r470.ab3@21735> JUMP_dupmacerr JMP dupmacerr
000316E6 <AmiBlitz3_noFPU_r470.ab3@21737> coolnest:   Ds.w 1
000316EA <AmiBlitz3_noFPU_r470.ab3@21738> macline:    Ds.l 1
000316F4 <AmiBlitz3_noFPU_r470.ab3@21742>   MOVE.l linenumat,macline
000316F8 <AmiBlitz3_noFPU_r470.ab3@21743>    BSR.w makename2
000316FC <AmiBlitz3_noFPU_r470.ab3@21744>    BEQ.w JUMP_syntaxerr
00031702 <AmiBlitz3_noFPU_r470.ab3@21746>    CLR.b thenmode
0003170C <AmiBlitz3_noFPU_r470.ab3@21748>    MOVE.w oldqflag,instringon
00031712 <AmiBlitz3_noFPU_r470.ab3@21749>   MOVEA.l lastsourcepos,A5
00031716 <AmiBlitz3_noFPU_r470.ab3@21750>    BSR.w findmac
0003171A <AmiBlitz3_noFPU_r470.ab3@21751>    BEQ.w JUMP_dupmacerr
0003171E <AmiBlitz3_noFPU_r470.ab3@21752>    BSR.w addlabel
00031722 <AmiBlitz3_noFPU_r470.ab3@21753>   CLR.w $A(A2)
00031728 <AmiBlitz3_noFPU_r470.ab3@21754>   MOVEA.l ptr_macrobuffer_begin,A0
0003172A <AmiBlitz3_noFPU_r470.ab3@21755>   MOVEQ.l #$00,D2
00031730 <AmiBlitz3_noFPU_r470.ab3@21756>   CLR.w coolnest
00031732 <AmiBlitz3_noFPU_r470.ab3@21759>   MOVE.b (a5),d0
00031736 <AmiBlitz3_noFPU_r470.ab3@21760>      BEQ 'l3
0003173A <AmiBlitz3_noFPU_r470.ab3@21761>      CMP.b #" ",d0
0003173E <AmiBlitz3_noFPU_r470.ab3@21762>       BNE 'l2                                              ;space macro
00031740 <AmiBlitz3_noFPU_r470.ab3@21763>       ADDQ.l #1,a5
00031744 <AmiBlitz3_noFPU_r470.ab3@21764> BRA 'l1
00031748 <AmiBlitz3_noFPU_r470.ab3@21767>    CMP.b #";",d0
0003174C <AmiBlitz3_noFPU_r470.ab3@21768>       BNE 'l3
0003174E <AmiBlitz3_noFPU_r470.ab3@21771>    MOVE.b (a5),d0
00031752 <AmiBlitz3_noFPU_r470.ab3@21772>       BEQ 'l5
00031756 <AmiBlitz3_noFPU_r470.ab3@21773>       BSR.w JL_0_CC98                                      ;add comment
00031758 <AmiBlitz3_noFPU_r470.ab3@21774>       ADDQ.l #1,a5
0003175C <AmiBlitz3_noFPU_r470.ab3@21775> BRA 'l4
00031760 <AmiBlitz3_noFPU_r470.ab3@21778>    MOVE.b #":",d0
00031764 <AmiBlitz3_noFPU_r470.ab3@21779>       BSR.w JL_0_CC98
00031768 <AmiBlitz3_noFPU_r470.ab3@21780>       MOVE.b #"@",d0
0003176C <AmiBlitz3_noFPU_r470.ab3@21781>       BSR.w JL_0_CC98
00031774 <AmiBlitz3_noFPU_r470.ab3@21784>    MOVE.b #0,temp
0003177C <AmiBlitz3_noFPU_r470.ab3@21785>       MOVE.b #0,thenmode
00031782 <AmiBlitz3_noFPU_r470.ab3@21788>   JSR getcharb
00031784 <AmiBlitz3_noFPU_r470.ab3@21789>   TST.w D0
00031788 <AmiBlitz3_noFPU_r470.ab3@21790>    BNE.w JL_0_CBDE
0003178C <AmiBlitz3_noFPU_r470.ab3@21791>   MOVEM.l D2/A0/A2,-(A7)
00031792 <AmiBlitz3_noFPU_r470.ab3@21792>   CMP.w #"@@",-3(a5)
00031796 <AmiBlitz3_noFPU_r470.ab3@21793>   BNE 'l2a
0003179C <AmiBlitz3_noFPU_r470.ab3@21794>   JSR nextline
000317A0 <AmiBlitz3_noFPU_r470.ab3@21795>   BEQ.w JUMP_macenderr
000317A4 <AmiBlitz3_noFPU_r470.ab3@21796>   MOVEM.l (A7)+,D2/A0/A2
000317A8 <AmiBlitz3_noFPU_r470.ab3@21797> BRA.w JL_0_CBB6
000317AE <AmiBlitz3_noFPU_r470.ab3@21800>    JSR nextline
000317B2 <AmiBlitz3_noFPU_r470.ab3@21801>    BEQ.w JUMP_macenderr
000317B6 <AmiBlitz3_noFPU_r470.ab3@21802>   MOVEM.l (A7)+,D2/A0/A2
000317B8 <AmiBlitz3_noFPU_r470.ab3@21803>   TST.w D2
000317BC <AmiBlitz3_noFPU_r470.ab3@21804>    BEQ.w JL_0_CBB6
000317BE <AmiBlitz3_noFPU_r470.ab3@21807>   MOVE.b (a5),d0
000317C2 <AmiBlitz3_noFPU_r470.ab3@21808>       CMP.b #" ",d0
000317C6 <AmiBlitz3_noFPU_r470.ab3@21809>       BNE 'l1
000317C8 <AmiBlitz3_noFPU_r470.ab3@21810>       ADDQ.w #1,a5
000317CC <AmiBlitz3_noFPU_r470.ab3@21811> BRA 'l2
000317D2 <AmiBlitz3_noFPU_r470.ab3@21814>   TST.b thenmode
000317D6 <AmiBlitz3_noFPU_r470.ab3@21815>      BEQ 'l3
000317D8 <AmiBlitz3_noFPU_r470.ab3@21816>      MOVEQ #":",d0
000317DC <AmiBlitz3_noFPU_r470.ab3@21817>      BSR.w JL_0_CC98
000317E0 <AmiBlitz3_noFPU_r470.ab3@21818>      MOVE.w #-$7FFE,D0                                     ;write end if
000317E4 <AmiBlitz3_noFPU_r470.ab3@21819>      BSR macputw
000317E8 <AmiBlitz3_noFPU_r470.ab3@21820>      MOVE.w #$800b,d0
000317EC <AmiBlitz3_noFPU_r470.ab3@21821>      BSR.w macputw
000317F2 <AmiBlitz3_noFPU_r470.ab3@21822>      CLR.b thenmode
000317F4 <AmiBlitz3_noFPU_r470.ab3@21825>    MOVEQ.l #$3A,D0
000317FC <AmiBlitz3_noFPU_r470.ab3@21826>      MOVE.b #1,temp
00031800 <AmiBlitz3_noFPU_r470.ab3@21828> BRA.w JL_0_CC2A
00031804 <AmiBlitz3_noFPU_r470.ab3@21832>   BPL.w JL_0_CC2A
00031808 <AmiBlitz3_noFPU_r470.ab3@21833>   CMP.w #-$7FF3,D0                                         ;macro ?
0003180C <AmiBlitz3_noFPU_r470.ab3@21834>    BNE.w JL_0_CBF4
00031812 <AmiBlitz3_noFPU_r470.ab3@21835>   ADDQ.w #1,coolnest
00031816 <AmiBlitz3_noFPU_r470.ab3@21836> BRA.w JL_0_CC22
0003181C <AmiBlitz3_noFPU_r470.ab3@21838> JUMP_macnesterr JMP macnesterr
00031820 <AmiBlitz3_noFPU_r470.ab3@21841>   CMP.w #$80d7,d0                                          ;object ?
00031824 <AmiBlitz3_noFPU_r470.ab3@21842>     BNE 'l1x
0003182A <AmiBlitz3_noFPU_r470.ab3@21843>     TST.b objectcount
0003182E <AmiBlitz3_noFPU_r470.ab3@21844>     BNE JUMP_macnesterr
00031832 <AmiBlitz3_noFPU_r470.ab3@21847>   CMP.w #$8021,d0
00031836 <AmiBlitz3_noFPU_r470.ab3@21848>     BNE 'nothen
0003183E <AmiBlitz3_noFPU_r470.ab3@21849>     MOVE.b #1,thenmode
00031844 <AmiBlitz3_noFPU_r470.ab3@21852>   TST.b thenmode
00031848 <AmiBlitz3_noFPU_r470.ab3@21853>         BEQ 'l1
0003184C <AmiBlitz3_noFPU_r470.ab3@21854>    CMP.w #$8002,d0                                         ;end if
00031850 <AmiBlitz3_noFPU_r470.ab3@21855>    BNE 'l1
00031854 <AmiBlitz3_noFPU_r470.ab3@21856>    MOVEM.l d0/a5,-(a7)
0003185A <AmiBlitz3_noFPU_r470.ab3@21857>    JSR get1bytemain
0003185C <AmiBlitz3_noFPU_r470.ab3@21858>    MOVE.w d0,d1
00031860 <AmiBlitz3_noFPU_r470.ab3@21859>    MOVEM.l (a7)+,a5/d0
00031864 <AmiBlitz3_noFPU_r470.ab3@21860>    CMP.w #$800b,d1
00031868 <AmiBlitz3_noFPU_r470.ab3@21861>    BNE 'l1
0003186E <AmiBlitz3_noFPU_r470.ab3@21862>    CLR.b thenmode
00031872 <AmiBlitz3_noFPU_r470.ab3@21865>    CMP.w #-$7FFE,D0                                        ;end ?
00031876 <AmiBlitz3_noFPU_r470.ab3@21866>    BNE.w JL_0_CC22
00031878 <AmiBlitz3_noFPU_r470.ab3@21867>    MOVE.l a5,-(a7)
0003187E <AmiBlitz3_noFPU_r470.ab3@21868>    JSR get1bytemain
00031880 <AmiBlitz3_noFPU_r470.ab3@21869>    MOVE.l (a7)+,a5
00031882 <AmiBlitz3_noFPU_r470.ab3@21870>    TST.w d0
00031886 <AmiBlitz3_noFPU_r470.ab3@21871>    BEQ 'doend
0003188A <AmiBlitz3_noFPU_r470.ab3@21872>    CMP.w #":",d0
0003188E <AmiBlitz3_noFPU_r470.ab3@21873>    BEQ 'doend
00031892 <AmiBlitz3_noFPU_r470.ab3@21874>    CMP.w #";",d0
00031896 <AmiBlitz3_noFPU_r470.ab3@21875>    BEQ 'doend
00031898 <AmiBlitz3_noFPU_r470.ab3@21876>    MOVE.l a5,-(a7)
0003189E <AmiBlitz3_noFPU_r470.ab3@21877>    JSR get1bytemain
000318A2 <AmiBlitz3_noFPU_r470.ab3@21878>    MOVE.l -1(a5),d0
000318A4 <AmiBlitz3_noFPU_r470.ab3@21879>    MOVE.l (a7)+,a5
000318AA <AmiBlitz3_noFPU_r470.ab3@21880>    CMP.l #"noa7",d0
000318AE <AmiBlitz3_noFPU_r470.ab3@21881>    BEQ 'doend
000318B2 <AmiBlitz3_noFPU_r470.ab3@21882> BRA 'morechar
000318B6 <AmiBlitz3_noFPU_r470.ab3@21885>   MOVE.w #$8002,D0
000318BA <AmiBlitz3_noFPU_r470.ab3@21886>    BSR.w macputw
000318BE <AmiBlitz3_noFPU_r470.ab3@21887> BRA JL_0_CBB6
000318C4 <AmiBlitz3_noFPU_r470.ab3@21890>   JSR get1bytemain
000318C8 <AmiBlitz3_noFPU_r470.ab3@21891>    CMP.w #-$7FF3,D0                                        ;end macro
000318CC <AmiBlitz3_noFPU_r470.ab3@21892>    BEQ.w 'lo1
000318D0 <AmiBlitz3_noFPU_r470.ab3@21893>   CMP.w #$80d7,d0                                          ;end object
000318D4 <AmiBlitz3_noFPU_r470.ab3@21894>   BNE JL_0_CC12
000318DA <AmiBlitz3_noFPU_r470.ab3@21895>   SUBQ.b #1,objectcount
000318E0 <AmiBlitz3_noFPU_r470.ab3@21896>   TST.b developobject
000318E4 <AmiBlitz3_noFPU_r470.ab3@21897>   BEQ 'lo1
000318E8 <AmiBlitz3_noFPU_r470.ab3@21898>   BSR skiprest
000318EA <AmiBlitz3_noFPU_r470.ab3@21899> RTS
000318F0 <AmiBlitz3_noFPU_r470.ab3@21902>   SUBQ.w #1,coolnest
000318F4 <AmiBlitz3_noFPU_r470.ab3@21903>    BMI.w JL_0_CC32
000318F6 <AmiBlitz3_noFPU_r470.ab3@21906>   MOVE.w D0,-(A7)
000318FA <AmiBlitz3_noFPU_r470.ab3@21907>   MOVE.w #$8002,D0
000318FE <AmiBlitz3_noFPU_r470.ab3@21908>    BSR.w macputw
00031900 <AmiBlitz3_noFPU_r470.ab3@21909>   MOVE.w (A7)+,D0
00031904 <AmiBlitz3_noFPU_r470.ab3@21910> BRA.w JL_0_CC22
00031908 <AmiBlitz3_noFPU_r470.ab3@21913>   BSR.w macputw
0003190C <AmiBlitz3_noFPU_r470.ab3@21914> BRA.w JL_0_CBB6
00031912 <AmiBlitz3_noFPU_r470.ab3@21916> JUMP_macenderr JMP macenderr
00031918 <AmiBlitz3_noFPU_r470.ab3@21919>     CMP.w #"@@",-1(a5)                                     ;merge lines
0003191C <AmiBlitz3_noFPU_r470.ab3@21920>     BNE 'no
00031920 <AmiBlitz3_noFPU_r470.ab3@21921>      MOVEM.l D2/A0/A2,-(A7)
00031926 <AmiBlitz3_noFPU_r470.ab3@21922>    JSR nextline
0003192A <AmiBlitz3_noFPU_r470.ab3@21923>    BEQ.w JUMP_macenderr
0003192E <AmiBlitz3_noFPU_r470.ab3@21924>   MOVEM.l (A7)+,D2/A0/A2
00031930 <AmiBlitz3_noFPU_r470.ab3@21925>     TST.w D2
00031934 <AmiBlitz3_noFPU_r470.ab3@21926>    BEQ.w JL_0_CBB6
00031938 <AmiBlitz3_noFPU_r470.ab3@21927> BRA JL_0_CBB6
0003193C <AmiBlitz3_noFPU_r470.ab3@21931>   BSR.w JL_0_CC98
00031940 <AmiBlitz3_noFPU_r470.ab3@21932> BRA.w JL_0_CBB6
00031942 <AmiBlitz3_noFPU_r470.ab3@21935>   ADDQ.w #4,A7
00031944 <AmiBlitz3_noFPU_r470.ab3@21936>   MOVE.l A0,D0
0003194A <AmiBlitz3_noFPU_r470.ab3@21937>   SUB.l ptr_macrobuffer_begin,D0
0003194E <AmiBlitz3_noFPU_r470.ab3@21940>    BEQ.w JL_0_CC5E
00031952 <AmiBlitz3_noFPU_r470.ab3@21941>   CMPI.b #":",-(A0)
00031956 <AmiBlitz3_noFPU_r470.ab3@21942>    BNE.w JL_0_CC5E
0003195A <AmiBlitz3_noFPU_r470.ab3@21943>   CMP.w #$1,D0
0003195E <AmiBlitz3_noFPU_r470.ab3@21944>    BEQ.w JL_0_CC58
00031962 <AmiBlitz3_noFPU_r470.ab3@21945>   TST.b -$1(A0)
00031966 <AmiBlitz3_noFPU_r470.ab3@21946>    BMI.w JL_0_CC5E
00031968 <AmiBlitz3_noFPU_r470.ab3@21949>   SUBQ.w #1,D0
0003196C <AmiBlitz3_noFPU_r470.ab3@21950> BRA.w JL_0_CC3C
00031970 <AmiBlitz3_noFPU_r470.ab3@21953>   MOVE.w D0,$8(A2)
00031974 <AmiBlitz3_noFPU_r470.ab3@21954>    BEQ.w JL_0_CC8E
00031976 <AmiBlitz3_noFPU_r470.ab3@21955>   MOVEQ.l #$01,D1
0003197C <AmiBlitz3_noFPU_r470.ab3@21956>   MOVEA.l _execbase,A6
00031982 <AmiBlitz3_noFPU_r470.ab3@21957>   MOVE.l mempool,a0
00031986 <AmiBlitz3_noFPU_r470.ab3@21958>   JSR _AllocPooled(a6)
00031988 <AmiBlitz3_noFPU_r470.ab3@21960>   MOVEA.l D0,A0
0003198C <AmiBlitz3_noFPU_r470.ab3@21961>   MOVE.l A0,$4(A2)
00031990 <AmiBlitz3_noFPU_r470.ab3@21962>   MOVE.w $8(A2),D1
00031994 <AmiBlitz3_noFPU_r470.ab3@21963>    BEQ.w JL_0_CC8E
00031996 <AmiBlitz3_noFPU_r470.ab3@21964>   SUBQ.w #1,D1
0003199C <AmiBlitz3_noFPU_r470.ab3@21965>   MOVEA.l ptr_macrobuffer_begin,A1
0003199E <AmiBlitz3_noFPU_r470.ab3@21968>     MOVE.b (A1)+,(A0)+
000319A2 <AmiBlitz3_noFPU_r470.ab3@21969>   DBF D1,JL_0_CC88
000319A8 <AmiBlitz3_noFPU_r470.ab3@21972> JMP get1bytemain
000319AA <AmiBlitz3_noFPU_r470.ab3@21976>   MOVE.w D0,D1
000319AC <AmiBlitz3_noFPU_r470.ab3@21977>   LSR.w #8,D1
000319AE <AmiBlitz3_noFPU_r470.ab3@21978>   MOVE.b D1,(A0)+
000319B0 <AmiBlitz3_noFPU_r470.ab3@21981>   MOVEQ.l #-$01,D2
000319B2 <AmiBlitz3_noFPU_r470.ab3@21982>   MOVE.b D0,(A0)+
000319B8 <AmiBlitz3_noFPU_r470.ab3@21983>   CMPA.l ptr_macrobuffer_end,A0
000319BC <AmiBlitz3_noFPU_r470.ab3@21984>    BCC.w macbigerr2
000319BE <AmiBlitz3_noFPU_r470.ab3@21985> RTS
000319C4 <AmiBlitz3_noFPU_r470.ab3@21986> macbigerr2 JMP macbigerr
000319C6 <AmiBlitz3_noFPU_r470.ab3@21989>   MOVE.l d0,-(a7)
000319C8 <AmiBlitz3_noFPU_r470.ab3@21990>   MOVEQ #0,d0
000319CE <AmiBlitz3_noFPU_r470.ab3@21991>   CLR.b skiptoggle
000319D0 <AmiBlitz3_noFPU_r470.ab3@21994>     MOVE.b (a5),d0
000319D4 <AmiBlitz3_noFPU_r470.ab3@21995>     BEQ 'l3
000319D8 <AmiBlitz3_noFPU_r470.ab3@21996>     CMP.b #";",d0
000319DC <AmiBlitz3_noFPU_r470.ab3@21997>     BNE 'l2
000319E4 <AmiBlitz3_noFPU_r470.ab3@21998>     MOVE.b #1,skiptoggle
000319EA <AmiBlitz3_noFPU_r470.ab3@22001>     TST.b skiptoggle
000319EE <AmiBlitz3_noFPU_r470.ab3@22002>     BNE 'l4
000319F2 <AmiBlitz3_noFPU_r470.ab3@22003>     CMP.b #":",d0
000319F6 <AmiBlitz3_noFPU_r470.ab3@22004>     BEQ 'l3
000319F8 <AmiBlitz3_noFPU_r470.ab3@22007>     ADDQ #1,a5
000319FC <AmiBlitz3_noFPU_r470.ab3@22008> BRA 'loop
00031A02 <AmiBlitz3_noFPU_r470.ab3@22011>   MOVE.w d0,lastchar
00031A04 <AmiBlitz3_noFPU_r470.ab3@22012>   MOVE.l (a7)+,d0
00031A06 <AmiBlitz3_noFPU_r470.ab3@22013> RTS
00031A0A <AmiBlitz3_noFPU_r470.ab3@22017>   BSR.w ifchar
00031A0E <AmiBlitz3_noFPU_r470.ab3@22018>    BNE.w JUMP_syntaxerr
00031A10 <AmiBlitz3_noFPU_r470.ab3@22019>   MOVE.w D0,D1
00031A16 <AmiBlitz3_noFPU_r470.ab3@22020>   JSR get1bytemain
00031A1A <AmiBlitz3_noFPU_r470.ab3@22021>   BSR.w ifchar
00031A1E <AmiBlitz3_noFPU_r470.ab3@22022>    BNE.w JL_0_CCDA
00031A20 <AmiBlitz3_noFPU_r470.ab3@22023>   ADDQ.w #1,D0
00031A22 <AmiBlitz3_noFPU_r470.ab3@22024>   MOVE.w D0,D2
00031A24 <AmiBlitz3_noFPU_r470.ab3@22025>   ADD.w D0,D0
00031A26 <AmiBlitz3_noFPU_r470.ab3@22026>   ADD.w D2,D0
00031A28 <AmiBlitz3_noFPU_r470.ab3@22027>   ADD.w D0,D1
00031A2A <AmiBlitz3_noFPU_r470.ab3@22028>   MOVE.w D1,D0
00031A2E <AmiBlitz3_noFPU_r470.ab3@22029>   ANDI.w #$3,D0
00031A32 <AmiBlitz3_noFPU_r470.ab3@22030>   CMP.w #$3,D0
00031A36 <AmiBlitz3_noFPU_r470.ab3@22031>    BEQ.w JUMP_syntaxerr
00031A3C <AmiBlitz3_noFPU_r470.ab3@22033>   JSR get1bytemain
00031A3E <AmiBlitz3_noFPU_r470.ab3@22036> RTS
00031A40 <AmiBlitz3_noFPU_r470.ab3@22042> thetst1:  TST.b D0
00031A42 <AmiBlitz3_noFPU_r470.ab3@22043> thetst2:  TST.w D0
00031A44 <AmiBlitz3_noFPU_r470.ab3@22044> thetst3:  TST.l D0
00031A46 <AmiBlitz3_noFPU_r470.ab3@22045> thetst4:  TST.l (A7)+                                      ;Any Length?
00031A4A <AmiBlitz3_noFPU_r470.ab3@22046> thetst5:  JSR _Reschedule(A6)
00031A4E <AmiBlitz3_noFPU_r470.ab3@22048> posbr:    BEQ.w posbr
00031A52 <AmiBlitz3_noFPU_r470.ab3@22049> negbr:    BNE.w negbr
00031A54 <AmiBlitz3_noFPU_r470.ab3@22053>   MOVEQ.l #-$01,D2
00031A58 <AmiBlitz3_noFPU_r470.ab3@22054> BRA.w JL_0_D04C
00031A5E <AmiBlitz3_noFPU_r470.ab3@22058>   CLR.l fp0addr
00031A60 <AmiBlitz3_noFPU_r470.ab3@22059>   MOVEQ.l #$01,D1                                          ;while flag
00031A62 <AmiBlitz3_noFPU_r470.ab3@22060>   MOVEQ.l #$00,D2                                          ;negate flag
00031A66 <AmiBlitz3_noFPU_r470.ab3@22061> BRA.w JL_0_D04E
00031A6C <AmiBlitz3_noFPU_r470.ab3@22065>   LEA firstrep,A2
00031A6E <AmiBlitz3_noFPU_r470.ab3@22066>   MOVEQ.l #$08,D2
00031A72 <AmiBlitz3_noFPU_r470.ab3@22067> BRA.w freeslist
00031A76 <AmiBlitz3_noFPU_r470.ab3@22071>   LEA firstsel(PC),A2
00031A78 <AmiBlitz3_noFPU_r470.ab3@22072>   MOVEQ.l #$0E,D2
00031A7A <AmiBlitz3_noFPU_r470.ab3@22077>   MOVEQ.l #$00,D3
00031A7C <AmiBlitz3_noFPU_r470.ab3@22085>   MOVE.l (A2),D0
00031A7E <AmiBlitz3_noFPU_r470.ab3@22086>   CLR.l (A2)
00031A80 <AmiBlitz3_noFPU_r470.ab3@22087>   MOVEA.l D0,A2
00031A86 <AmiBlitz3_noFPU_r470.ab3@22088>   MOVEA.l _execbase,A6
00031A8A <AmiBlitz3_noFPU_r470.ab3@22091>     CMPA.w #$0,A2
00031A8E <AmiBlitz3_noFPU_r470.ab3@22092>      BEQ.w freelist__done
00031A90 <AmiBlitz3_noFPU_r470.ab3@22093>     TST.w D3
00031A94 <AmiBlitz3_noFPU_r470.ab3@22094>      BEQ.w freelist__skip
00031A98 <AmiBlitz3_noFPU_r470.ab3@22095>     MOVEM.l D2-D3/A2,-(A7)
00031A9A <AmiBlitz3_noFPU_r470.ab3@22096>     ADDA.w D3,A2
00031A9C <AmiBlitz3_noFPU_r470.ab3@22097>     MOVE.l D4,D2
00031AA0 <AmiBlitz3_noFPU_r470.ab3@22098>     BSR.w freeslist
00031AA4 <AmiBlitz3_noFPU_r470.ab3@22099>     MOVEM.l (A7)+,D2-D3/A2
00031AA6 <AmiBlitz3_noFPU_r470.ab3@22102>     MOVEA.l A2,A1
00031AA8 <AmiBlitz3_noFPU_r470.ab3@22103>     MOVE.l D2,D0
00031AAA <AmiBlitz3_noFPU_r470.ab3@22104>     MOVEA.l (A2),A2
00031AB0 <AmiBlitz3_noFPU_r470.ab3@22105>     MOVE.l mempool,a0
00031AB4 <AmiBlitz3_noFPU_r470.ab3@22106>     JSR _FreePooled(A6)
00031AB8 <AmiBlitz3_noFPU_r470.ab3@22107> BRA.w freelist__loop
00031ABA <AmiBlitz3_noFPU_r470.ab3@22110> RTS
00031AC0 <AmiBlitz3_noFPU_r470.ab3@22113> JMP eselerr
00031AC4 <AmiBlitz3_noFPU_r470.ab3@22116> firstsel:  Ds.l 1
00031AC8 <AmiBlitz3_noFPU_r470.ab3@22119> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031ACA <AmiBlitz3_noFPU_r470.ab3@22122> selpushw:   MOVE.w D0,-(A7)
00031ACC <AmiBlitz3_noFPU_r470.ab3@22124> selpushl:   MOVE.l D0,-(A7)
00031AD0 <AmiBlitz3_noFPU_r470.ab3@22126> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031AD4 <AmiBlitz3_noFPU_r470.ab3@22129> selcomb:    ANDI.w #$FF,D0
00031AD6 <AmiBlitz3_noFPU_r470.ab3@22130> selcomw:    CMP.w (A7),D0
00031AD8 <AmiBlitz3_noFPU_r470.ab3@22132> selcoml:    CMP.l (A7),D0
00031ADC <AmiBlitz3_noFPU_r470.ab3@22134> selbne:     BNE.w selbne
00031ADE <AmiBlitz3_noFPU_r470.ab3@22136> endsel:     ADDQ.w #8,A7
00031AE2 <AmiBlitz3_noFPU_r470.ab3@22142>   MOVE.l firstsel(PC),D0                                  
00031AE6 <AmiBlitz3_noFPU_r470.ab3@22143>    BEQ.w JUMP_eselerr
00031AE8 <AmiBlitz3_noFPU_r470.ab3@22144>   MOVEA.l D0,A2
00031AEC <AmiBlitz3_noFPU_r470.ab3@22145>    BSR.w JL_0_CDFC
00031AF2 <AmiBlitz3_noFPU_r470.ab3@22148>   MOVEA.l _execbase,A6
00031AF6 <AmiBlitz3_noFPU_r470.ab3@22151>   MOVE.l $4(A2),D0
00031AFA <AmiBlitz3_noFPU_r470.ab3@22152>    BEQ.w doendsel__done
00031AFC <AmiBlitz3_noFPU_r470.ab3@22153>   MOVEA.l D0,A3
00031B00 <AmiBlitz3_noFPU_r470.ab3@22154>   MOVEA.l $4(A3),A0
00031B06 <AmiBlitz3_noFPU_r470.ab3@22155>   MOVE.l destpointer,D1
00031B08 <AmiBlitz3_noFPU_r470.ab3@22156>   SUB.l A0,D1
00031B0E <AmiBlitz3_noFPU_r470.ab3@22158>     TST.b fast
00031B12 <AmiBlitz3_noFPU_r470.ab3@22159>     BEQ doendsel__loop_l1
00031B18 <AmiBlitz3_noFPU_r470.ab3@22160>     MOVE.w dontwrite,D0
00031B1C <AmiBlitz3_noFPU_r470.ab3@22161>     BNE.w doendsel__skip
00031B1E <AmiBlitz3_noFPU_r470.ab3@22162>     ADDQ.l #2,d1
00031B22 <AmiBlitz3_noFPU_r470.ab3@22163>     MOVE.l d1,-2(a0)
00031B26 <AmiBlitz3_noFPU_r470.ab3@22164>   BRA doendsel__skip
00031B2C <AmiBlitz3_noFPU_r470.ab3@22168>   TST.w dontwrite
00031B30 <AmiBlitz3_noFPU_r470.ab3@22169>      BNE.w doendsel__skip
00031B36 <AmiBlitz3_noFPU_r470.ab3@22170>   CMP.l #MaxWordSgnd,D1
00031B3A <AmiBlitz3_noFPU_r470.ab3@22171>    BHI.w JUMP_cbraerr
00031B3C <AmiBlitz3_noFPU_r470.ab3@22172>   MOVE.w D1,(A0)
00031B40 <AmiBlitz3_noFPU_r470.ab3@22175>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00031B42 <AmiBlitz3_noFPU_r470.ab3@22176>   MOVEA.l A3,A1
00031B44 <AmiBlitz3_noFPU_r470.ab3@22177>   MOVEQ.l #$08,D0
00031B4A <AmiBlitz3_noFPU_r470.ab3@22178>   MOVE.l mempool,a0
00031B4E <AmiBlitz3_noFPU_r470.ab3@22179>    JSR _FreePooled(A6)
00031B52 <AmiBlitz3_noFPU_r470.ab3@22180> BRA.w doendsel__loop
00031B58 <AmiBlitz3_noFPU_r470.ab3@22183>   JSR popselect                                            ;fix stack on select
00031B5C <AmiBlitz3_noFPU_r470.ab3@22184>   MOVEA.l firstsel(PC),A1
00031B62 <AmiBlitz3_noFPU_r470.ab3@22185>   MOVE.l (A1),firstsel
00031B64 <AmiBlitz3_noFPU_r470.ab3@22186>   MOVEQ.l #$0E,D0
00031B6A <AmiBlitz3_noFPU_r470.ab3@22187>   MOVEA.l _execbase,A6
00031B70 <AmiBlitz3_noFPU_r470.ab3@22188>   MOVE.l mempool,a0
00031B74 <AmiBlitz3_noFPU_r470.ab3@22189>   JSR _FreePooled(A6)
00031B7A <AmiBlitz3_noFPU_r470.ab3@22190> JMP get1bytemain
00031B7C <AmiBlitz3_noFPU_r470.ab3@22194>   MOVEA.l (A7)+,A1
00031B7E <AmiBlitz3_noFPU_r470.ab3@22195>   SUBQ.w #8,A1
00031B80 <AmiBlitz3_noFPU_r470.ab3@22196>   MOVEQ.l #$09,D0
00031B82 <AmiBlitz3_noFPU_r470.ab3@22197>   ADD.l (A1),D0
00031B84 <AmiBlitz3_noFPU_r470.ab3@22200>   ADDQ.w #2,A7                                             ;for runtime errs!
00031B88 <AmiBlitz3_noFPU_r470.ab3@22205>   MOVE.l firstsel(PC),D0
00031B8C <AmiBlitz3_noFPU_r470.ab3@22206>    BEQ.w JUMP_defaerr
00031B8E <AmiBlitz3_noFPU_r470.ab3@22207>   MOVEA.l D0,A2
00031B92 <AmiBlitz3_noFPU_r470.ab3@22208>   BSR.w JL_0_CE26
00031B96 <AmiBlitz3_noFPU_r470.ab3@22209>   BSR.w JL_0_CDFC
00031B9A <AmiBlitz3_noFPU_r470.ab3@22210>   CLR.l $8(A2)
00031B9E <AmiBlitz3_noFPU_r470.ab3@22211>   MOVE.w $C(A2),D2
00031BA2 <AmiBlitz3_noFPU_r470.ab3@22212> BRA.w JL_0_CE5E
00031BA8 <AmiBlitz3_noFPU_r470.ab3@22215> JMP defaerr
00031BAC <AmiBlitz3_noFPU_r470.ab3@22218>   MOVE.l $8(A2),D0
00031BB0 <AmiBlitz3_noFPU_r470.ab3@22219>    BEQ.w JL_0_CE24
00031BB2 <AmiBlitz3_noFPU_r470.ab3@22220>   MOVEA.l D0,A0
00031BB8 <AmiBlitz3_noFPU_r470.ab3@22221>   MOVE.l destpointer,D1
00031BBA <AmiBlitz3_noFPU_r470.ab3@22222>   SUB.l A0,D1
00031BC0 <AmiBlitz3_noFPU_r470.ab3@22224>     TST.b fast
00031BC4 <AmiBlitz3_noFPU_r470.ab3@22225>     BEQ 'l1
00031BCA <AmiBlitz3_noFPU_r470.ab3@22226>     TST.w dontwrite
00031BCE <AmiBlitz3_noFPU_r470.ab3@22227>     BNE.w JL_0_CE24
00031BD0 <AmiBlitz3_noFPU_r470.ab3@22228>     ADDQ.l #2,d1
00031BD4 <AmiBlitz3_noFPU_r470.ab3@22229>     MOVE.l D1,-2(A0)
00031BD8 <AmiBlitz3_noFPU_r470.ab3@22230>   BRA JL_0_CE24
00031BDE <AmiBlitz3_noFPU_r470.ab3@22234>   TST.w dontwrite
00031BE2 <AmiBlitz3_noFPU_r470.ab3@22235>      BNE.w JL_0_CE24
00031BE8 <AmiBlitz3_noFPU_r470.ab3@22236>    CMP.l #MaxWordSgnd,D1
00031BEC <AmiBlitz3_noFPU_r470.ab3@22237>    BHI.w JUMP_cbraerr
00031BEE <AmiBlitz3_noFPU_r470.ab3@22238>   MOVE.w D1,(A0)
00031BF0 <AmiBlitz3_noFPU_r470.ab3@22241> RTS
00031BF6 <AmiBlitz3_noFPU_r470.ab3@22244> JMP cbraerr
00031BFA <AmiBlitz3_noFPU_r470.ab3@22248>   MOVE.l $8(A2),D0
00031BFE <AmiBlitz3_noFPU_r470.ab3@22249>    BEQ.w JL_0_CE5C
00031C00 <AmiBlitz3_noFPU_r470.ab3@22250>   MOVEA.l D0,A3
00031C04 <AmiBlitz3_noFPU_r470.ab3@22251>   MOVE.w #$6000,D1
00031C0A <AmiBlitz3_noFPU_r470.ab3@22253>    TST.b fast
00031C0E <AmiBlitz3_noFPU_r470.ab3@22254>    BEQ 'l1
00031C14 <AmiBlitz3_noFPU_r470.ab3@22255>    OR.l #$ff,d1
00031C18 <AmiBlitz3_noFPU_r470.ab3@22256>    BSR writeword
00031C1C <AmiBlitz3_noFPU_r470.ab3@22260>   BSR.w writeword
00031C1E <AmiBlitz3_noFPU_r470.ab3@22261>   MOVEQ.l #$08,D0
00031C20 <AmiBlitz3_noFPU_r470.ab3@22262>   MOVEQ.l #$01,D1
00031C26 <AmiBlitz3_noFPU_r470.ab3@22263>   MOVEA.l _execbase,A6
00031C2C <AmiBlitz3_noFPU_r470.ab3@22264>   MOVE.l mempool,a0
00031C30 <AmiBlitz3_noFPU_r470.ab3@22265>   JSR _AllocPooled(a6)
00031C32 <AmiBlitz3_noFPU_r470.ab3@22267>   MOVEA.l D0,A0
00031C36 <AmiBlitz3_noFPU_r470.ab3@22268>   MOVE.l $4(A2),(A0)
00031C3A <AmiBlitz3_noFPU_r470.ab3@22269>   MOVE.l A0,$4(A2)
00031C42 <AmiBlitz3_noFPU_r470.ab3@22270>   MOVE.l destpointer,$4(A0)
00031C46 <AmiBlitz3_noFPU_r470.ab3@22271> BRA.w writeword
00031C48 <AmiBlitz3_noFPU_r470.ab3@22274> RTS
00031C4E <AmiBlitz3_noFPU_r470.ab3@22278>   TST.b debugmode
00031C52 <AmiBlitz3_noFPU_r470.ab3@22279>    BEQ.w JL_0_CE7A
00031C56 <AmiBlitz3_noFPU_r470.ab3@22280>   MOVE.w #$C313,D1
00031C5A <AmiBlitz3_noFPU_r470.ab3@22281>   CMP.w #$3,D2
00031C5E <AmiBlitz3_noFPU_r470.ab3@22282>    BCS.w JL_0_CE76
00031C60 <AmiBlitz3_noFPU_r470.ab3@22283>   ADDQ.w #1,D1
00031C64 <AmiBlitz3_noFPU_r470.ab3@22286> BRA.w Atokejsr
00031C66 <AmiBlitz3_noFPU_r470.ab3@22289> RTS
00031C6C <AmiBlitz3_noFPU_r470.ab3@22293> JMP caseerr
00031C70 <AmiBlitz3_noFPU_r470.ab3@22296>   MOVE.l firstsel(PC),D0
00031C74 <AmiBlitz3_noFPU_r470.ab3@22297>    BEQ.w JUMP_caseerr
00031C76 <AmiBlitz3_noFPU_r470.ab3@22298>   MOVEA.l D0,A2
00031C7A <AmiBlitz3_noFPU_r470.ab3@22299>    BSR.w JL_0_CE26
00031C7E <AmiBlitz3_noFPU_r470.ab3@22300>    BSR.w JL_0_CDFC
00031C82 <AmiBlitz3_noFPU_r470.ab3@22301>   MOVE.w $C(A2),D2
00031C84 <AmiBlitz3_noFPU_r470.ab3@22302>   MOVE.w D2,-(A7)
00031C88 <AmiBlitz3_noFPU_r470.ab3@22303>    BSR.w JL_0_CE5E
00031C8A <AmiBlitz3_noFPU_r470.ab3@22304>   MOVE.w (A7),D2
00031C8E <AmiBlitz3_noFPU_r470.ab3@22305>    BSR.w bakeval
00031C90 <AmiBlitz3_noFPU_r470.ab3@22306>   MOVE.w (A7)+,D2
00031C94 <AmiBlitz3_noFPU_r470.ab3@22307>   LEA selcomb(PC),A0
00031C98 <AmiBlitz3_noFPU_r470.ab3@22308>   LEA selcombf(PC),A1
00031C9C <AmiBlitz3_noFPU_r470.ab3@22309>   CMP.w #$1,D2
00031CA0 <AmiBlitz3_noFPU_r470.ab3@22310>    BEQ.w JL_0_CED8
00031CA4 <AmiBlitz3_noFPU_r470.ab3@22311>   LEA selcomw(PC),A0
00031CA8 <AmiBlitz3_noFPU_r470.ab3@22312>   CMP.w #$2,D2
00031CAC <AmiBlitz3_noFPU_r470.ab3@22313>    BEQ.w JL_0_CED8
00031CB0 <AmiBlitz3_noFPU_r470.ab3@22314>   LEA selcoml(PC),A0
00031CB4 <AmiBlitz3_noFPU_r470.ab3@22315>   LEA selcomlf(PC),A1
00031CB8 <AmiBlitz3_noFPU_r470.ab3@22316>   CMP.w #$7,D2
00031CBC <AmiBlitz3_noFPU_r470.ab3@22317>    BCS.w JL_0_CED8
00031CC0 <AmiBlitz3_noFPU_r470.ab3@22319>   MOVE.w #$CE01,D1
00031CC4 <AmiBlitz3_noFPU_r470.ab3@22320>    BSR.w Atokejsr
00031CC8 <AmiBlitz3_noFPU_r470.ab3@22321> BRA.w JL_0_CEDC
00031CCC <AmiBlitz3_noFPU_r470.ab3@22324>   BSR.w pokecode
00031CD0 <AmiBlitz3_noFPU_r470.ab3@22327>   MOVE.w selbne(PC),D1
00031CD6 <AmiBlitz3_noFPU_r470.ab3@22329>     TST.b fast
00031CDA <AmiBlitz3_noFPU_r470.ab3@22330>     BEQ 'l1
00031CE0 <AmiBlitz3_noFPU_r470.ab3@22331>     ORI.l #$ff,d1
00031CE4 <AmiBlitz3_noFPU_r470.ab3@22332>     BSR writeword
00031CE8 <AmiBlitz3_noFPU_r470.ab3@22335>   BSR.w writeword
00031CEC <AmiBlitz3_noFPU_r470.ab3@22336>   MOVEA.l firstsel(PC),A0
00031CF4 <AmiBlitz3_noFPU_r470.ab3@22337>   MOVE.l destpointer,$8(A0)
00031CF8 <AmiBlitz3_noFPU_r470.ab3@22338> BRA.w writeword
00031CFC <AmiBlitz3_noFPU_r470.ab3@22342> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00031CFE <AmiBlitz3_noFPU_r470.ab3@22343> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00031D02 <AmiBlitz3_noFPU_r470.ab3@22346> sellineat:  Ds.l 1
00031D08 <AmiBlitz3_noFPU_r470.ab3@22352>   TST.b debugmode
00031D0C <AmiBlitz3_noFPU_r470.ab3@22353>    BEQ.w JL_0_CF0E
00031D10 <AmiBlitz3_noFPU_r470.ab3@22354>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00031D14 <AmiBlitz3_noFPU_r470.ab3@22355>    BSR.w writelong
00031D1E <AmiBlitz3_noFPU_r470.ab3@22358>   MOVE.l linenumat,sellineat
00031D28 <AmiBlitz3_noFPU_r470.ab3@22360>    MOVE.l destpointer,pushpc
00031D32 <AmiBlitz3_noFPU_r470.ab3@22361>   MOVE.l hunkoffsetbase,pushoff
00031D34 <AmiBlitz3_noFPU_r470.ab3@22362>   MOVEQ.l #$00,D2
00031D38 <AmiBlitz3_noFPU_r470.ab3@22363>    BSR.w bakevalu                                          ;Evaluate
00031D3C <AmiBlitz3_noFPU_r470.ab3@22364>    BSR.w JL_0_B5D2
00031D40 <AmiBlitz3_noFPU_r470.ab3@22365>   CMP.w #$7,D2
00031D44 <AmiBlitz3_noFPU_r470.ab3@22366>    BNE.w JL_0_CF36
00031D48 <AmiBlitz3_noFPU_r470.ab3@22367>   MOVE.w clrst(PC),D1
00031D4C <AmiBlitz3_noFPU_r470.ab3@22368>    BSR.w writeword
00031D50 <AmiBlitz3_noFPU_r470.ab3@22371>    BSR.w JL_0_B63C
00031D54 <AmiBlitz3_noFPU_r470.ab3@22372>   LEA selpushb(PC),A0
00031D58 <AmiBlitz3_noFPU_r470.ab3@22373>   LEA selpushbf(PC),A1
00031D5C <AmiBlitz3_noFPU_r470.ab3@22374>   CMP.w #$1,D2
00031D60 <AmiBlitz3_noFPU_r470.ab3@22375>    BEQ.w JL_0_CF88
00031D64 <AmiBlitz3_noFPU_r470.ab3@22376>   LEA selpushw(PC),A0
00031D68 <AmiBlitz3_noFPU_r470.ab3@22377>   CMP.w #$2,D2
00031D6C <AmiBlitz3_noFPU_r470.ab3@22378>    BEQ.w JL_0_CF88
00031D70 <AmiBlitz3_noFPU_r470.ab3@22379>   LEA selpushl(PC),A0
00031D74 <AmiBlitz3_noFPU_r470.ab3@22380>   LEA selpushlf(PC),A1
00031D78 <AmiBlitz3_noFPU_r470.ab3@22381>   CMP.w #$7,D2
00031D7C <AmiBlitz3_noFPU_r470.ab3@22382>    BCS.w JL_0_CF88
00031D82 <AmiBlitz3_noFPU_r470.ab3@22384>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00031D86 <AmiBlitz3_noFPU_r470.ab3@22385>    BSR.w writeword
00031D8A <AmiBlitz3_noFPU_r470.ab3@22386>   LEA selpushs(PC),A0
00031D8E <AmiBlitz3_noFPU_r470.ab3@22387>   LEA selpushsf(PC),A1
00031D92 <AmiBlitz3_noFPU_r470.ab3@22388>    BSR.w pokecode
00031D96 <AmiBlitz3_noFPU_r470.ab3@22389>   MOVE.w #$C701,D1
00031D9A <AmiBlitz3_noFPU_r470.ab3@22390>    BSR.w Atokejsr
00031D9E <AmiBlitz3_noFPU_r470.ab3@22391> BRA.w JL_0_CF8C
00031DA2 <AmiBlitz3_noFPU_r470.ab3@22394>   BSR.w pokecode
00031DA4 <AmiBlitz3_noFPU_r470.ab3@22397>   MOVEQ.l #$0E,D0
00031DA6 <AmiBlitz3_noFPU_r470.ab3@22398>   MOVEQ.l #$01,D1
00031DAC <AmiBlitz3_noFPU_r470.ab3@22399>   MOVEA.l _execbase,A6
00031DB2 <AmiBlitz3_noFPU_r470.ab3@22401>   MOVE.l mempool,a0
00031DB6 <AmiBlitz3_noFPU_r470.ab3@22402>   JSR _AllocPooled(a6)
00031DB8 <AmiBlitz3_noFPU_r470.ab3@22403>   MOVEA.l D0,A0
00031DBC <AmiBlitz3_noFPU_r470.ab3@22404>   MOVE.l firstsel(PC),(A0)
00031DC2 <AmiBlitz3_noFPU_r470.ab3@22405>   MOVE.l A0,firstsel
00031DC6 <AmiBlitz3_noFPU_r470.ab3@22406>   CLR.l $4(A0)
00031DCA <AmiBlitz3_noFPU_r470.ab3@22407>   CLR.l $8(A0)
00031DCE <AmiBlitz3_noFPU_r470.ab3@22408>   MOVE.w D2,$C(A0)
00031DD0 <AmiBlitz3_noFPU_r470.ab3@22409> RTS
00031DD6 <AmiBlitz3_noFPU_r470.ab3@22413>   MOVE.l firstrep,D0
00031DDA <AmiBlitz3_noFPU_r470.ab3@22414>    BEQ.w JUMP_unterr1
00031DDE <AmiBlitz3_noFPU_r470.ab3@22415>   MOVE.w #$6000,D1
00031DE2 <AmiBlitz3_noFPU_r470.ab3@22416>   BSR.w writeword
00031DE4 <AmiBlitz3_noFPU_r470.ab3@22417>   MOVEA.l D0,A0
00031DE8 <AmiBlitz3_noFPU_r470.ab3@22418>   MOVE.l $4(A0),D1
00031DEE <AmiBlitz3_noFPU_r470.ab3@22419>   SUB.l destpointer,D1
00031DF0 <AmiBlitz3_noFPU_r470.ab3@22420>   TST.w D1
00031DF4 <AmiBlitz3_noFPU_r470.ab3@22421>    BPL.w JUMP_unterr2
00031DF8 <AmiBlitz3_noFPU_r470.ab3@22422>   BSR.w writeword
00031DFE <AmiBlitz3_noFPU_r470.ab3@22423>   MOVEA.l _execbase,A6
00031E02 <AmiBlitz3_noFPU_r470.ab3@22424> BRA.w JL_0_D036
00031E08 <AmiBlitz3_noFPU_r470.ab3@22427> JMP unterr2
00031E0E <AmiBlitz3_noFPU_r470.ab3@22430> JMP unterr1
00031E14 <AmiBlitz3_noFPU_r470.ab3@22434>   MOVE.l firstrep,D0
00031E18 <AmiBlitz3_noFPU_r470.ab3@22435>    BEQ.w JUMP_unterr1
00031E1C <AmiBlitz3_noFPU_r470.ab3@22436>   BSR.w do_if
00031E22 <AmiBlitz3_noFPU_r470.ab3@22437>   JSR reget
00031E26 <AmiBlitz3_noFPU_r470.ab3@22438>    BNE.w JUMP_syntaxerr
00031E2C <AmiBlitz3_noFPU_r470.ab3@22439>   MOVE.w dontwrite,D1
00031E30 <AmiBlitz3_noFPU_r470.ab3@22440>    BNE.w JL_0_D020
00031E36 <AmiBlitz3_noFPU_r470.ab3@22441>   MOVEA.l firstrep,A0
00031E3C <AmiBlitz3_noFPU_r470.ab3@22442>   MOVEA.l destpointer,A1
00031E42 <AmiBlitz3_noFPU_r470.ab3@22444>     TST.b fast
00031E46 <AmiBlitz3_noFPU_r470.ab3@22445>     BEQ 'l1
00031E48 <AmiBlitz3_noFPU_r470.ab3@22446>     SUBQ.w #4,a1
00031E4C <AmiBlitz3_noFPU_r470.ab3@22447>     MOVE.l $4(A0),D2
00031E4E <AmiBlitz3_noFPU_r470.ab3@22448>     SUB.l A1,D2
00031E50 <AmiBlitz3_noFPU_r470.ab3@22449>     MOVE.l d2,(a1)
00031E54 <AmiBlitz3_noFPU_r470.ab3@22450>   BRA JL_0_D020
00031E56 <AmiBlitz3_noFPU_r470.ab3@22454>   SUBQ.w #2,A1
00031E5A <AmiBlitz3_noFPU_r470.ab3@22455>   MOVE.l $4(A0),D2
00031E5C <AmiBlitz3_noFPU_r470.ab3@22456>   SUB.l A1,D2
00031E5E <AmiBlitz3_noFPU_r470.ab3@22457>   TST.w D2
00031E62 <AmiBlitz3_noFPU_r470.ab3@22458>    BPL.w JUMP_unterr2
00031E64 <AmiBlitz3_noFPU_r470.ab3@22459>   MOVE.w D2,(A1)
00031E6A <AmiBlitz3_noFPU_r470.ab3@22462>   MOVEA.l firstiff,A1
00031E70 <AmiBlitz3_noFPU_r470.ab3@22463>   MOVE.l (A1),firstiff
00031E72 <AmiBlitz3_noFPU_r470.ab3@22464>   MOVEQ.l #$0E,D0
00031E78 <AmiBlitz3_noFPU_r470.ab3@22465>   MOVEA.l _execbase,A6
00031E7E <AmiBlitz3_noFPU_r470.ab3@22466>   MOVE.l mempool,a0
00031E82 <AmiBlitz3_noFPU_r470.ab3@22467>   JSR _FreePooled(A6)
00031E88 <AmiBlitz3_noFPU_r470.ab3@22470>   MOVEA.l firstrep,A1
00031E8E <AmiBlitz3_noFPU_r470.ab3@22471>   MOVE.l (A1),firstrep
00031E90 <AmiBlitz3_noFPU_r470.ab3@22472>   MOVEQ.l #$08,D0
00031E96 <AmiBlitz3_noFPU_r470.ab3@22473>   MOVE.l mempool,a0
00031E9A <AmiBlitz3_noFPU_r470.ab3@22474> JMP _FreePooled(A6)
00031E9E <AmiBlitz3_noFPU_r470.ab3@22477> iflineat:   Ds.l 1
00031EA0 <AmiBlitz3_noFPU_r470.ab3@22481>   MOVEQ.l #$00,D2
00031EA6 <AmiBlitz3_noFPU_r470.ab3@22482>   TST.b fast
00031EAA <AmiBlitz3_noFPU_r470.ab3@22483>   BEQ 'l1
00031EB2 <AmiBlitz3_noFPU_r470.ab3@22484>   MOVE.b #1,nostringopt
00031EBA <AmiBlitz3_noFPU_r470.ab3@22485>   MOVE.b #1,iniffcommand
00031EBC <AmiBlitz3_noFPU_r470.ab3@22489>   MOVEQ.l #$00,D1
00031EBE <AmiBlitz3_noFPU_r470.ab3@22492>   MOVE.w D1,-(A7)
00031EC4 <AmiBlitz3_noFPU_r470.ab3@22493>   MOVE.l destpointer,-(A7)
00031EC6 <AmiBlitz3_noFPU_r470.ab3@22494>   MOVE.w D2,-(A7)
00031ED0 <AmiBlitz3_noFPU_r470.ab3@22495>   MOVE.l linenumat,iflineat
00031ED2 <AmiBlitz3_noFPU_r470.ab3@22496>   MOVEQ.l #$00,D2
00031EDC <AmiBlitz3_noFPU_r470.ab3@22497>   MOVE.b optistring,optistring2
00031EE4 <AmiBlitz3_noFPU_r470.ab3@22498>   MOVE.b #1,optistring
00031EE8 <AmiBlitz3_noFPU_r470.ab3@22499>   BSR.w bakevalu
00031EF2 <AmiBlitz3_noFPU_r470.ab3@22500>   MOVE.b optistring2,optistring
00031EF6 <AmiBlitz3_noFPU_r470.ab3@22501>   CMP.w #$5,D2
00031EFA <AmiBlitz3_noFPU_r470.ab3@22502>    BEQ.w JL_0_D09C
00031EFE <AmiBlitz3_noFPU_r470.ab3@22503>   MOVE.w thetst1(PC),D1
00031F02 <AmiBlitz3_noFPU_r470.ab3@22504>   CMP.w #$1,D2
00031F06 <AmiBlitz3_noFPU_r470.ab3@22505>    BEQ.w writebranchcode
00031F0A <AmiBlitz3_noFPU_r470.ab3@22506>   MOVE.w thetst2(PC),D1
00031F0E <AmiBlitz3_noFPU_r470.ab3@22507>   CMP.w #$2,D2
00031F12 <AmiBlitz3_noFPU_r470.ab3@22508>    BEQ.w writebranchcode
00031F16 <AmiBlitz3_noFPU_r470.ab3@22509>   MOVE.w thetst4(PC),D1
00031F1A <AmiBlitz3_noFPU_r470.ab3@22510>   CMP.w #$7,D2
00031F1E <AmiBlitz3_noFPU_r470.ab3@22511>    BEQ.w writebranchcode
00031F22 <AmiBlitz3_noFPU_r470.ab3@22512>   MOVE.w thetst3(PC),D1
00031F26 <AmiBlitz3_noFPU_r470.ab3@22513> BRA.w writebranchcode
00031F2C <AmiBlitz3_noFPU_r470.ab3@22516>   TST.b fpu
00031F30 <AmiBlitz3_noFPU_r470.ab3@22517>   BEQ 'dofpu
00031F36 <AmiBlitz3_noFPU_r470.ab3@22518>   MOVE.l #$f200003a,d1
00031F3A <AmiBlitz3_noFPU_r470.ab3@22519>   BSR writelong
00031F3E <AmiBlitz3_noFPU_r470.ab3@22520>   MOVE.w #$f2c1,d1
00031F42 <AmiBlitz3_noFPU_r470.ab3@22521>   BSR writeword
00031F46 <AmiBlitz3_noFPU_r470.ab3@22522>   BSR writelong
00031F48 <AmiBlitz3_noFPU_r470.ab3@22523>   ADDQ.l #2,a7
00031F4C <AmiBlitz3_noFPU_r470.ab3@22524> BRA.w br2
00031F50 <AmiBlitz3_noFPU_r470.ab3@22527>    MOVE.w #$C900,D1
00031F54 <AmiBlitz3_noFPU_r470.ab3@22528>    BSR.w Atokejsr
00031F58 <AmiBlitz3_noFPU_r470.ab3@22529>   MOVE.l thetst5(PC),D1
00031F5C <AmiBlitz3_noFPU_r470.ab3@22530>    BSR.w writelong
00031F60 <AmiBlitz3_noFPU_r470.ab3@22531> BRA.w JL_0_D0B4
00031F66 <AmiBlitz3_noFPU_r470.ab3@22535>          CLR.b iniffcommand
00031F6C <AmiBlitz3_noFPU_r470.ab3@22536>          TST.b fast                                        ;branchcode
00031F70 <AmiBlitz3_noFPU_r470.ab3@22537>          BEQ b6
00031F76 <AmiBlitz3_noFPU_r470.ab3@22538>          TST.b fpu
00031F7A <AmiBlitz3_noFPU_r470.ab3@22539>          BEQ 'nofpu
00031F80 <AmiBlitz3_noFPU_r470.ab3@22543>           MOVE.l destpointer,a0
00031F86 <AmiBlitz3_noFPU_r470.ab3@22544>          SUB.l load_var_addr,a0
00031F8C <AmiBlitz3_noFPU_r470.ab3@22545>          CMP.l #4,a0
00031F90 <AmiBlitz3_noFPU_r470.ab3@22546>          BEQ 'nofpu
00031F98 <AmiBlitz3_noFPU_r470.ab3@22547>          CMP.l #$f2400014,-4(a4)                           ;<
00031F9C <AmiBlitz3_noFPU_r470.ab3@22548>          BNE 'nolt
00031FA2 <AmiBlitz3_noFPU_r470.ab3@22549>          SUBQ.l #2,destpointer
00031FA8 <AmiBlitz3_noFPU_r470.ab3@22550>          MOVE.w #$f293,-4(a4)                              ;
00031FAC <AmiBlitz3_noFPU_r470.ab3@22551> BRA 'brf
00031FB4 <AmiBlitz3_noFPU_r470.ab3@22554>   CMP.l #$f2400015,-4(a4)                                  ;<=
00031FB8 <AmiBlitz3_noFPU_r470.ab3@22555>          BNE 'nole
00031FBE <AmiBlitz3_noFPU_r470.ab3@22556>          SUBQ.l #2,destpointer
00031FC4 <AmiBlitz3_noFPU_r470.ab3@22557>          MOVE.w #$f292,-4(a4)
00031FC8 <AmiBlitz3_noFPU_r470.ab3@22558> BRA 'brf
00031FD0 <AmiBlitz3_noFPU_r470.ab3@22561>   CMP.l #$f2400013,-4(a4)                                  ;=>
00031FD4 <AmiBlitz3_noFPU_r470.ab3@22562>          BNE 'noge
00031FDA <AmiBlitz3_noFPU_r470.ab3@22563>          SUBQ.l #2,destpointer
00031FE0 <AmiBlitz3_noFPU_r470.ab3@22564>          MOVE.w #$f294,-4(a4)
00031FE4 <AmiBlitz3_noFPU_r470.ab3@22565> BRA 'brf
00031FEC <AmiBlitz3_noFPU_r470.ab3@22568>   CMP.l #$f2400012,-4(a4)                                  ;>
00031FF0 <AmiBlitz3_noFPU_r470.ab3@22569>          BNE 'nogt
00031FF6 <AmiBlitz3_noFPU_r470.ab3@22570>          SUBQ.l #2,destpointer
00031FFC <AmiBlitz3_noFPU_r470.ab3@22571>          MOVE.w #$f295,-4(a4)
00032000 <AmiBlitz3_noFPU_r470.ab3@22572> BRA 'brf
00032008 <AmiBlitz3_noFPU_r470.ab3@22575>   CMP.l #$f2400001,-4(a4)                                  ;=
0003200C <AmiBlitz3_noFPU_r470.ab3@22576>          BNE 'noeq
00032012 <AmiBlitz3_noFPU_r470.ab3@22577>          SUBQ.l #2,destpointer
00032018 <AmiBlitz3_noFPU_r470.ab3@22578>          MOVE.w #$f28e,-4(a4)
0003201C <AmiBlitz3_noFPU_r470.ab3@22579> BRA 'brf
00032024 <AmiBlitz3_noFPU_r470.ab3@22582>   CMP.l #$f240000e,-4(a4)                                  ;<>
00032028 <AmiBlitz3_noFPU_r470.ab3@22583>          BNE 'none
0003202E <AmiBlitz3_noFPU_r470.ab3@22584>          SUBQ.l #2,destpointer
00032034 <AmiBlitz3_noFPU_r470.ab3@22585>          MOVE.w #$f281,-4(a4)
00032036 <AmiBlitz3_noFPU_r470.ab3@22588>   ADDQ.l #2,a7
0003203C <AmiBlitz3_noFPU_r470.ab3@22590>     TST.b fast
00032040 <AmiBlitz3_noFPU_r470.ab3@22591>     BEQ 'l1
00032046 <AmiBlitz3_noFPU_r470.ab3@22592>     OR.b #$40,-3(a4)
0003204A <AmiBlitz3_noFPU_r470.ab3@22593>     BSR writeword
0003204E <AmiBlitz3_noFPU_r470.ab3@22597>  BSR writeword
00032052 <AmiBlitz3_noFPU_r470.ab3@22598> BRA.s br2
00032058 <AmiBlitz3_noFPU_r470.ab3@22602>   MOVE.l destpointer,a0
0003205E <AmiBlitz3_noFPU_r470.ab3@22603>          SUB.l load_var_addr,a0
00032064 <AmiBlitz3_noFPU_r470.ab3@22604>          CMP.l #4,a0
00032068 <AmiBlitz3_noFPU_r470.ab3@22605>          BEQ JL_0_D0B4
0003206E <AmiBlitz3_noFPU_r470.ab3@22606>          CMP.w #$4eb9,-6(a4)
00032072 <AmiBlitz3_noFPU_r470.ab3@22607>          BEQ b6
00032078 <AmiBlitz3_noFPU_r470.ab3@22608>          CMP.w #$5ec0,-2(a4)                               ;>
0003207C <AmiBlitz3_noFPU_r470.ab3@22609>      BNE.s 'lb1
00032082 <AmiBlitz3_noFPU_r470.ab3@22610>          MOVE.w #$6f00,-2(a4)                              ;ble
00032086 <AmiBlitz3_noFPU_r470.ab3@22611> BRA.s br
0003208C <AmiBlitz3_noFPU_r470.ab3@22614>  CMP.w #$5dc0,-2(a4)                                       ;<
00032090 <AmiBlitz3_noFPU_r470.ab3@22615>   BNE.s 'lb2
00032096 <AmiBlitz3_noFPU_r470.ab3@22616>          MOVE.w #$6c00,-2(a4)                              ;bge
0003209A <AmiBlitz3_noFPU_r470.ab3@22617> BRA.s br
000320A0 <AmiBlitz3_noFPU_r470.ab3@22620>   CMP.w #$57c0,-2(a4)                                      ;=
000320A4 <AmiBlitz3_noFPU_r470.ab3@22621>   BNE.s 'lb3
000320AA <AmiBlitz3_noFPU_r470.ab3@22622>          MOVE.w #$6600,-2(a4)                              ;bne
000320AE <AmiBlitz3_noFPU_r470.ab3@22623> BRA.s br
000320B4 <AmiBlitz3_noFPU_r470.ab3@22626>   CMP.w #$56c0,-2(a4)                                      ;<>
000320B8 <AmiBlitz3_noFPU_r470.ab3@22627>   BNE.s 'lb4
000320BE <AmiBlitz3_noFPU_r470.ab3@22628>          MOVE.w #$6700,-2(a4)                              ;beq
000320C2 <AmiBlitz3_noFPU_r470.ab3@22629> BRA.s br
000320C8 <AmiBlitz3_noFPU_r470.ab3@22632>   CMP.w #$5cc0,-2(a4)                                      ;>=
000320CC <AmiBlitz3_noFPU_r470.ab3@22633>   BNE.s 'lb5
000320D2 <AmiBlitz3_noFPU_r470.ab3@22634>          MOVE.w #$6d00,-2(a4)                              ;blt
000320D6 <AmiBlitz3_noFPU_r470.ab3@22635> BRA.s br
000320DC <AmiBlitz3_noFPU_r470.ab3@22638>   CMP.w #$5fc0,-2(a4)                                      ;<=
000320E0 <AmiBlitz3_noFPU_r470.ab3@22639>         BNE.s b6
000320E6 <AmiBlitz3_noFPU_r470.ab3@22640>          MOVE.w #$6e00,-2(a4)                              ;bgt
000320E8 <AmiBlitz3_noFPU_r470.ab3@22643>   TST.w (a7)+
000320EE <AmiBlitz3_noFPU_r470.ab3@22645>         TST.b fast
000320F2 <AmiBlitz3_noFPU_r470.ab3@22646>         BEQ 'l1
000320F8 <AmiBlitz3_noFPU_r470.ab3@22647>         OR.b #$ff,-1(a4)                                   ;long branches
000320FC <AmiBlitz3_noFPU_r470.ab3@22648>         BSR writeword
00032100 <AmiBlitz3_noFPU_r470.ab3@22652>         BSR writeword
00032104 <AmiBlitz3_noFPU_r470.ab3@22653> BRA.s br2
00032108 <AmiBlitz3_noFPU_r470.ab3@22656>   BSR.w writeword
0003210C <AmiBlitz3_noFPU_r470.ab3@22659>   MOVE.l posbr(PC),D1
0003210E <AmiBlitz3_noFPU_r470.ab3@22660>   TST.w (A7)+
00032112 <AmiBlitz3_noFPU_r470.ab3@22661>    BEQ.w JL_0_D0C2
00032116 <AmiBlitz3_noFPU_r470.ab3@22662>   MOVE.l negbr(PC),D1
0003211C <AmiBlitz3_noFPU_r470.ab3@22665>   TST.b fast
00032120 <AmiBlitz3_noFPU_r470.ab3@22666>            BEQ 'l1
00032126 <AmiBlitz3_noFPU_r470.ab3@22667>            OR.l #$00ff0000,d1
0003212A <AmiBlitz3_noFPU_r470.ab3@22668>            BSR writelong
0003212E <AmiBlitz3_noFPU_r470.ab3@22669>            BSR writeword
00032132 <AmiBlitz3_noFPU_r470.ab3@22670> BRA br2
00032136 <AmiBlitz3_noFPU_r470.ab3@22673>   BSR.w writelong
00032138 <AmiBlitz3_noFPU_r470.ab3@22676>  MOVEQ.l #$0E,D0
0003213A <AmiBlitz3_noFPU_r470.ab3@22677>   MOVEQ.l #$01,D1
00032140 <AmiBlitz3_noFPU_r470.ab3@22678>   MOVEA.l _execbase,A6
00032146 <AmiBlitz3_noFPU_r470.ab3@22680>   MOVE.l mempool,a0
0003214A <AmiBlitz3_noFPU_r470.ab3@22681>   JSR _AllocPooled(a6)
0003214C <AmiBlitz3_noFPU_r470.ab3@22682>   MOVEA.l D0,A0
00032152 <AmiBlitz3_noFPU_r470.ab3@22683>   MOVE.l firstiff,(A0)
00032158 <AmiBlitz3_noFPU_r470.ab3@22684>   MOVE.l A0,firstiff
0003215C <AmiBlitz3_noFPU_r470.ab3@22685>   MOVE.l (A7)+,$4(A0)
00032164 <AmiBlitz3_noFPU_r470.ab3@22686>   MOVE.l destpointer,$8(A0)
00032168 <AmiBlitz3_noFPU_r470.ab3@22687>   MOVE.w (A7)+,$C(A0)
0003216E <AmiBlitz3_noFPU_r470.ab3@22688>    JSR reget
00032172 <AmiBlitz3_noFPU_r470.ab3@22689>    BEQ.w JL_0_D10C
00032178 <AmiBlitz3_noFPU_r470.ab3@22690>   BSET #$7,$C(A0)
00032182 <AmiBlitz3_noFPU_r470.ab3@22694>   MOVE.w oldqflag,instringon
00032188 <AmiBlitz3_noFPU_r470.ab3@22695>   MOVEA.l lastsourcepos,A5
00032190 <AmiBlitz3_noFPU_r470.ab3@22696>   MOVE.w #$003A,lastchar
00032192 <AmiBlitz3_noFPU_r470.ab3@22699> RTS
00032196 <AmiBlitz3_noFPU_r470.ab3@22703>   CMP.w #$1,D0
0003219A <AmiBlitz3_noFPU_r470.ab3@22704>    BLT.w JL_0_D128
0003219E <AmiBlitz3_noFPU_r470.ab3@22705>   CMP.w #$0,D0
000321A2 <AmiBlitz3_noFPU_r470.ab3@22706>    BGT.w JL_0_D128
000321A4 <AmiBlitz3_noFPU_r470.ab3@22707>   ADD.w D0,D0
000321A6 <AmiBlitz3_noFPU_r470.ab3@22708>   ADD.w D0,D0
000321AA <AmiBlitz3_noFPU_r470.ab3@22709>   MOVEA.l JL_0_D128(PC,D0.W),A0
000321AC <AmiBlitz3_noFPU_r470.ab3@22712> JMP (A0)
000321B0 <AmiBlitz3_noFPU_r470.ab3@22715> BRA.w JL_0_D128
000321B4 <AmiBlitz3_noFPU_r470.ab3@22719>   CMP.w #$1,D0
000321B8 <AmiBlitz3_noFPU_r470.ab3@22720>    BLT.w JL_0_D146
000321BC <AmiBlitz3_noFPU_r470.ab3@22721>   CMP.w #$0,D0
000321C0 <AmiBlitz3_noFPU_r470.ab3@22722>    BGT.w JL_0_D146
000321C2 <AmiBlitz3_noFPU_r470.ab3@22723>   ADD.w D0,D0
000321C4 <AmiBlitz3_noFPU_r470.ab3@22724>   ADD.w D0,D0
000321C8 <AmiBlitz3_noFPU_r470.ab3@22725>   MOVEA.l JL_0_D146(PC,D0.W),A0
000321CA <AmiBlitz3_noFPU_r470.ab3@22728>   JSR (A0)
000321CE <AmiBlitz3_noFPU_r470.ab3@22731> BRA.w JL_0_D146
000321D2 <AmiBlitz3_noFPU_r470.ab3@22735>   CMP.w #$1,D0
000321D6 <AmiBlitz3_noFPU_r470.ab3@22736>    BLT.w JL_0_D168
000321DA <AmiBlitz3_noFPU_r470.ab3@22737>   CMP.w #$0,D0
000321DE <AmiBlitz3_noFPU_r470.ab3@22738>    BGT.w JL_0_D168
000321E0 <AmiBlitz3_noFPU_r470.ab3@22739>   ADD.w D0,D0
000321E2 <AmiBlitz3_noFPU_r470.ab3@22740>   ADD.w D0,D0
000321E6 <AmiBlitz3_noFPU_r470.ab3@22741>   MOVEA.l JL_0_D168(PC,D0.W),A0
000321EA <AmiBlitz3_noFPU_r470.ab3@22744>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
000321EC <AmiBlitz3_noFPU_r470.ab3@22747>    JSR (A0)
000321F0 <AmiBlitz3_noFPU_r470.ab3@22750> BRA.w JL_0_D168
000321F2 <AmiBlitz3_noFPU_r470.ab3@22753> labcnt:   Ds.w 1
000321F4 <AmiBlitz3_noFPU_r470.ab3@22760>   MOVEQ.l #$02,D2
000321F8 <AmiBlitz3_noFPU_r470.ab3@22761>    BSR.w bakeval
000321FC <AmiBlitz3_noFPU_r470.ab3@22762>   LEA JL_0_D10E(PC),A0
00032200 <AmiBlitz3_noFPU_r470.ab3@22763>   LEA JL_0_D12C(PC),A1
00032204 <AmiBlitz3_noFPU_r470.ab3@22764>   MOVE.w #$001A,D1
00032208 <AmiBlitz3_noFPU_r470.ab3@22765>   CMP.w #-$7FFB,D0
0003220C <AmiBlitz3_noFPU_r470.ab3@22766>    BEQ.w JL_0_D1B6
00032210 <AmiBlitz3_noFPU_r470.ab3@22767>   CMP.w #-$7FFA,D0
00032214 <AmiBlitz3_noFPU_r470.ab3@22768>    BNE.w JUMP_syntaxerr
00032218 <AmiBlitz3_noFPU_r470.ab3@22769>   LEA JL_0_D12C(PC),A0
0003221C <AmiBlitz3_noFPU_r470.ab3@22770>   LEA JL_0_D14A(PC),A1
00032220 <AmiBlitz3_noFPU_r470.ab3@22771>   MOVE.w #$001A,D1
00032226 <AmiBlitz3_noFPU_r470.ab3@22772>   TST.b debugmode
0003222A <AmiBlitz3_noFPU_r470.ab3@22773>    BEQ.b JL_0_D1B6
00032230 <AmiBlitz3_noFPU_r470.ab3@22774>    JSR chkstak
00032234 <AmiBlitz3_noFPU_r470.ab3@22775>   LEA JL_0_D14A(PC),A0
00032238 <AmiBlitz3_noFPU_r470.ab3@22776>   LEA labcnt(PC),A1
0003223C <AmiBlitz3_noFPU_r470.ab3@22777>   MOVE.w #$001E,D1
0003223E <AmiBlitz3_noFPU_r470.ab3@22780>   MOVE.w D1,-(A7)
00032244 <AmiBlitz3_noFPU_r470.ab3@22781>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032248 <AmiBlitz3_noFPU_r470.ab3@22782>    BSR.w pokecode
0003224E <AmiBlitz3_noFPU_r470.ab3@22783>   CLR.w labcnt
00032254 <AmiBlitz3_noFPU_r470.ab3@22788>    JSR get1bytemain
0003225A <AmiBlitz3_noFPU_r470.ab3@22789>   SUBQ.l #2,destpointer                                    ;for makealab!
0003225E <AmiBlitz3_noFPU_r470.ab3@22790>    BSR.w JL_0_AE22
00032264 <AmiBlitz3_noFPU_r470.ab3@22791>   ADDQ.l #2,destpointer
0003226A <AmiBlitz3_noFPU_r470.ab3@22792>    JSR addoff
0003226E <AmiBlitz3_noFPU_r470.ab3@22793>   MOVE.l $8(A2),D1
00032272 <AmiBlitz3_noFPU_r470.ab3@22794>    BSR.w writelong
00032278 <AmiBlitz3_noFPU_r470.ab3@22795>   ADDQ.w #1,labcnt
0003227E <AmiBlitz3_noFPU_r470.ab3@22796>    JSR reget
00032282 <AmiBlitz3_noFPU_r470.ab3@22797>   CMP.w #$2C,D0
00032286 <AmiBlitz3_noFPU_r470.ab3@22798>    BEQ.w JL_0_D1C8
00032288 <AmiBlitz3_noFPU_r470.ab3@22799>   MOVEA.l (A7)+,A0
0003228A <AmiBlitz3_noFPU_r470.ab3@22800>   MOVE.w (A7)+,D2
00032290 <AmiBlitz3_noFPU_r470.ab3@22801>   MOVE.w dontwrite,D1
00032294 <AmiBlitz3_noFPU_r470.ab3@22802>    BNE.w JL_0_D21A
00032298 <AmiBlitz3_noFPU_r470.ab3@22803>   MOVE.w labcnt(PC),D1
0003229C <AmiBlitz3_noFPU_r470.ab3@22804>   MOVE.w D1,$A(A0)
0003229E <AmiBlitz3_noFPU_r470.ab3@22805>   ADD.w D1,D1
000322A0 <AmiBlitz3_noFPU_r470.ab3@22806>   ADD.w D1,D1
000322A2 <AmiBlitz3_noFPU_r470.ab3@22807>   ADDQ.w #2,D1
000322A6 <AmiBlitz3_noFPU_r470.ab3@22808>   MOVE.w D1,$2(A0,D2.W)
000322A8 <AmiBlitz3_noFPU_r470.ab3@22811> RTS
000322AE <AmiBlitz3_noFPU_r470.ab3@22815>   TST.b debugmode
000322B2 <AmiBlitz3_noFPU_r470.ab3@22816>    BEQ.w JL_0_D236
000322B8 <AmiBlitz3_noFPU_r470.ab3@22817>    JSR chkstak
000322BE <AmiBlitz3_noFPU_r470.ab3@22818>   MOVE.l AL_0_D162,D1
000322C2 <AmiBlitz3_noFPU_r470.ab3@22819>    BSR.w writelong
000322C8 <AmiBlitz3_noFPU_r470.ab3@22821>   MOVE.w gosubcode,D1
000322CC <AmiBlitz3_noFPU_r470.ab3@22822> BRA.w JL_0_D246
000322D2 <AmiBlitz3_noFPU_r470.ab3@22826>   MOVE.w gotocode,D1
000322D4 <AmiBlitz3_noFPU_r470.ab3@22829>   MOVE.w D1,-(A7)
000322D8 <AmiBlitz3_noFPU_r470.ab3@22830>    BSR.w JL_0_AE22
000322DA <AmiBlitz3_noFPU_r470.ab3@22831>   MOVE.w (A7)+,D1
000322DE <AmiBlitz3_noFPU_r470.ab3@22832>    BSR.w writeword
000322E4 <AmiBlitz3_noFPU_r470.ab3@22833>    JSR addoff
000322E8 <AmiBlitz3_noFPU_r470.ab3@22834>   MOVE.l $8(A2),D1
000322EC <AmiBlitz3_noFPU_r470.ab3@22835> BRA.w writelong
000322F2 <AmiBlitz3_noFPU_r470.ab3@22839>   MOVE.w proceduremode,D1
000322F6 <AmiBlitz3_noFPU_r470.ab3@22840>    BEQ.w JUMP_badpenderr
000322FA <AmiBlitz3_noFPU_r470.ab3@22841>   MOVE.w #$4EF9,D1
000322FE <AmiBlitz3_noFPU_r470.ab3@22842>    BSR.w writeword
00032304 <AmiBlitz3_noFPU_r470.ab3@22843>    JSR addoff
0003230A <AmiBlitz3_noFPU_r470.ab3@22844>   MOVEA.l _execbase,A6
0003230C <AmiBlitz3_noFPU_r470.ab3@22845>   MOVEQ.l #$08,D0
0003230E <AmiBlitz3_noFPU_r470.ab3@22846>   MOVEQ.l #$01,D1
00032314 <AmiBlitz3_noFPU_r470.ab3@22848>   MOVE.l mempool,a0
00032318 <AmiBlitz3_noFPU_r470.ab3@22849>   JSR _AllocPooled(a6)
0003231A <AmiBlitz3_noFPU_r470.ab3@22850>   MOVEA.l D0,A0
00032320 <AmiBlitz3_noFPU_r470.ab3@22851>   MOVE.l firstpend,(A0)
00032326 <AmiBlitz3_noFPU_r470.ab3@22852>   MOVE.l A0,firstpend
0003232E <AmiBlitz3_noFPU_r470.ab3@22853>   MOVE.l destpointer,$4(A0)
00032332 <AmiBlitz3_noFPU_r470.ab3@22854> BRA.w writelong
00032336 <AmiBlitz3_noFPU_r470.ab3@22858>   BSR.w do_AsmExit
0003233C <AmiBlitz3_noFPU_r470.ab3@22859> JMP get1bytemain
00032344 <AmiBlitz3_noFPU_r470.ab3@22863>   MOVE.b #1,nostringopt
00032348 <AmiBlitz3_noFPU_r470.ab3@22864>   MOVEM.l a0/a1/d1,-(a7)
0003234E <AmiBlitz3_noFPU_r470.ab3@22865>   MOVEA.l currentfunction,A0
00032354 <AmiBlitz3_noFPU_r470.ab3@22866>     CMP.l #0,a0
00032358 <AmiBlitz3_noFPU_r470.ab3@22867>     BNE 'l1
0003235E <AmiBlitz3_noFPU_r470.ab3@22868>     JMP errorasmexit
00032360 <AmiBlitz3_noFPU_r470.ab3@22869> 'l1 MOVEQ.l #$00,D2
00032364 <AmiBlitz3_noFPU_r470.ab3@22870>   MOVE.b $5(A0),D2
00032368 <AmiBlitz3_noFPU_r470.ab3@22871>   BSR.w eval
0003236E <AmiBlitz3_noFPU_r470.ab3@22873>   MOVEA.l currentfunction,A0
00032372 <AmiBlitz3_noFPU_r470.ab3@22874>   MOVE.l funcstruct_returntype(a0),a0
00032378 <AmiBlitz3_noFPU_r470.ab3@22875>   CMP.l #0,a0
0003237C <AmiBlitz3_noFPU_r470.ab3@22876>   BEQ 'isstatement
00032384 <AmiBlitz3_noFPU_r470.ab3@22877>   CMP.l #$100,4(a0)
00032388 <AmiBlitz3_noFPU_r470.ab3@22878>   BLT.w 'isvar
0003238A <AmiBlitz3_noFPU_r470.ab3@22879>   MOVE.l a2,a1
00032390 <AmiBlitz3_noFPU_r470.ab3@22880>   TST.l typetocast
00032394 <AmiBlitz3_noFPU_r470.ab3@22881>   BEQ 'nocast
0003239A <AmiBlitz3_noFPU_r470.ab3@22882>   MOVE.l typetocast,a1
0003239C <AmiBlitz3_noFPU_r470.ab3@22883> 'nocast  CMP.l a0,a1
000323A0 <AmiBlitz3_noFPU_r470.ab3@22884>   BEQ 'ok
000323A6 <AmiBlitz3_noFPU_r470.ab3@22885>   CLR.l typetocast
000323AC <AmiBlitz3_noFPU_r470.ab3@22886>   MOVE.l lasttoken,d1
000323B0 <AmiBlitz3_noFPU_r470.ab3@22887>   CMP.w #$b581,d1                   ; ok, when token for null
000323B4 <AmiBlitz3_noFPU_r470.ab3@22888>   BEQ 'isnull
000323BA <AmiBlitz3_noFPU_r470.ab3@22889> 'error  JMP errorconvertreturntype
000323BE <AmiBlitz3_noFPU_r470.ab3@22896>   MOVEM.l (a7)+,a0/a1/d1
000323C2 <AmiBlitz3_noFPU_r470.ab3@22897> BRA.w do_AsmExit
000323C8 <AmiBlitz3_noFPU_r470.ab3@22899> error_convert_types2 JMP error_convert_types
000323CE <AmiBlitz3_noFPU_r470.ab3@22912>   TST.b debugmode
000323D2 <AmiBlitz3_noFPU_r470.ab3@22913>    BEQ.w JL_0_D2CA
000323D6 <AmiBlitz3_noFPU_r470.ab3@22914>   MOVE.w #$C305,D1
000323DA <AmiBlitz3_noFPU_r470.ab3@22915> BRA.w Atokejsr
000323DE <AmiBlitz3_noFPU_r470.ab3@22918>   MOVE.w #$4E75,D1
000323E2 <AmiBlitz3_noFPU_r470.ab3@22919> BRA.w writeword
000323E6 <AmiBlitz3_noFPU_r470.ab3@22922> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
000323EA <AmiBlitz3_noFPU_r470.ab3@22923> proclocals:  Ds.l 1                                        ;for debugga!
000323EC <AmiBlitz3_noFPU_r470.ab3@22924> procnum:     Ds.w 1
000323EE <AmiBlitz3_noFPU_r470.ab3@22925> procnum2:    Ds.w 1
000323F2 <AmiBlitz3_noFPU_r470.ab3@22926> prolineat:   Ds.l 1
000323F8 <AmiBlitz3_noFPU_r470.ab3@22930>    TST.w proceduremode
000323FC <AmiBlitz3_noFPU_r470.ab3@22931>    BGT JUMP_sreterr
00032400 <AmiBlitz3_noFPU_r470.ab3@22932>    CMP.w #-$7FF9,D0
00032404 <AmiBlitz3_noFPU_r470.ab3@22933>    BEQ.w JL_0_D29C
00032406 <AmiBlitz3_noFPU_r470.ab3@22934>    MOVEQ.l #-$01,D1
0003240A <AmiBlitz3_noFPU_r470.ab3@22935> BRA.w do_function2
00032410 <AmiBlitz3_noFPU_r470.ab3@22938> JMP sreterr
00032416 <AmiBlitz3_noFPU_r470.ab3@22942>   CLR.b skipfunc
0003241C <AmiBlitz3_noFPU_r470.ab3@22943>   TST.l unusedfunc
00032420 <AmiBlitz3_noFPU_r470.ab3@22944>   BEQ 'ex
00032424 <AmiBlitz3_noFPU_r470.ab3@22945>   MOVEM.l d0-d7/a0-a6,-(a7)
0003242A <AmiBlitz3_noFPU_r470.ab3@22946>   MOVE.l unusedfunc,d1
00032430 <AmiBlitz3_noFPU_r470.ab3@22947>   LEA ptr_parameterstore,a5
00032432 <AmiBlitz3_noFPU_r470.ab3@22950>   MOVE.l d1,a0
00032436 <AmiBlitz3_noFPU_r470.ab3@22951>   LEA 12(a0),a2
00032438 <AmiBlitz3_noFPU_r470.ab3@22952>   MOVE.l a5,a1
0003243A <AmiBlitz3_noFPU_r470.ab3@22954>   CMPM.b (a1)+,(a2)+
0003243E <AmiBlitz3_noFPU_r470.ab3@22955>   BNE 'neq
00032440 <AmiBlitz3_noFPU_r470.ab3@22956>   TST.b (a2)
00032444 <AmiBlitz3_noFPU_r470.ab3@22957>   BNE 'ch
00032446 <AmiBlitz3_noFPU_r470.ab3@22958>   TST.b (a1)
0003244A <AmiBlitz3_noFPU_r470.ab3@22959>   BNE 'neq
00032452 <AmiBlitz3_noFPU_r470.ab3@22960>   MOVE.b #1,skipfunc
00032456 <AmiBlitz3_noFPU_r470.ab3@22961> BRA 'out
00032458 <AmiBlitz3_noFPU_r470.ab3@22964>   MOVE.l (a0),d1
0003245C <AmiBlitz3_noFPU_r470.ab3@22965>   BNE 'ag
00032460 <AmiBlitz3_noFPU_r470.ab3@22968>   MOVEM.l (a7)+,d0-d7/a0-a6
00032462 <AmiBlitz3_noFPU_r470.ab3@22971> RTS
00032468 <AmiBlitz3_noFPU_r470.ab3@22975> JMP dupprocerr
0003246E <AmiBlitz3_noFPU_r470.ab3@22978> JMP illprocperr
00032476 <AmiBlitz3_noFPU_r470.ab3@22985>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
0003247A <AmiBlitz3_noFPU_r470.ab3@22986>    BEQ JUMP_sreterr
0003247E <AmiBlitz3_noFPU_r470.ab3@22987>   CMP.w #-$7FF9,D0
00032482 <AmiBlitz3_noFPU_r470.ab3@22988>    BEQ.w do_function_return
0003248C <AmiBlitz3_noFPU_r470.ab3@22991>   MOVE.w oldqflag,instringon
00032492 <AmiBlitz3_noFPU_r470.ab3@22992>   MOVEA.l lastsourcepos,A5
00032498 <AmiBlitz3_noFPU_r470.ab3@22993>   JSR getfunctionreturntype
0003249E <AmiBlitz3_noFPU_r470.ab3@22994>   JSR get1bytemain
000324A4 <AmiBlitz3_noFPU_r470.ab3@22997>   TST.b declare
000324A8 <AmiBlitz3_noFPU_r470.ab3@22998>   BEQ 'l1
000324B0 <AmiBlitz3_noFPU_r470.ab3@22999>   MOVE.b #1,nowdeclare
000324B6 <AmiBlitz3_noFPU_r470.ab3@23002>   JSR errchx                                           ;writejumpoverfunction
000324BC <AmiBlitz3_noFPU_r470.ab3@23005>   CLR.b fastfunc
000324C6 <AmiBlitz3_noFPU_r470.ab3@23006>   MOVE.l firstiff,firstiffstore
000324CE <AmiBlitz3_noFPU_r470.ab3@23007>   CMP.l #"FAST",-1(a5)
000324D2 <AmiBlitz3_noFPU_r470.ab3@23008>   BNE 'nofast
000324D8 <AmiBlitz3_noFPU_r470.ab3@23009>   CMP.b #" ",3(a5)
000324DC <AmiBlitz3_noFPU_r470.ab3@23010>   BNE 'nofast
000324DE <AmiBlitz3_noFPU_r470.ab3@23011>   ADDQ.l #3,a5
000324E2 <AmiBlitz3_noFPU_r470.ab3@23014>     CMP.b #" ",(a5)
000324E6 <AmiBlitz3_noFPU_r470.ab3@23015>      BNE 'x1
000324E8 <AmiBlitz3_noFPU_r470.ab3@23016>     ADDQ #1,a5
000324EC <AmiBlitz3_noFPU_r470.ab3@23017> BRA 'x2
000324F2 <AmiBlitz3_noFPU_r470.ab3@23020>   MOVE.l a5,lastsourcepos
000324FA <AmiBlitz3_noFPU_r470.ab3@23021>   MOVE.b #1,fastfunc
00032502 <AmiBlitz3_noFPU_r470.ab3@23024>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032506 <AmiBlitz3_noFPU_r470.ab3@23025> BRA 'noopt
0003250C <AmiBlitz3_noFPU_r470.ab3@23027>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032510 <AmiBlitz3_noFPU_r470.ab3@23028>   BNE 'noopt
00032512 <AmiBlitz3_noFPU_r470.ab3@23029>   ADDQ.l #4,a5
00032516 <AmiBlitz3_noFPU_r470.ab3@23032>     CMP.b #" ",(a5)
0003251A <AmiBlitz3_noFPU_r470.ab3@23033>      BNE 'x1b
0003251C <AmiBlitz3_noFPU_r470.ab3@23034>     ADDQ #1,a5
00032520 <AmiBlitz3_noFPU_r470.ab3@23035> BRA 'x2b
00032526 <AmiBlitz3_noFPU_r470.ab3@23038>   MOVE.l a5,lastsourcepos
0003252C <AmiBlitz3_noFPU_r470.ab3@23040>   JSR makename2
00032530 <AmiBlitz3_noFPU_r470.ab3@23041> BRA 'l1
00032536 <AmiBlitz3_noFPU_r470.ab3@23045>   JSR makename2
0003253C <AmiBlitz3_noFPU_r470.ab3@23046>   JSR checkused
00032542 <AmiBlitz3_noFPU_r470.ab3@23047>   TST.b skipfunc
00032546 <AmiBlitz3_noFPU_r470.ab3@23048>    BEQ 'l1
0003254C <AmiBlitz3_noFPU_r470.ab3@23049>   JSR skipme
00032552 <AmiBlitz3_noFPU_r470.ab3@23050>   CLR.b fastfunc
00032554 <AmiBlitz3_noFPU_r470.ab3@23051> RTS
0003255E <AmiBlitz3_noFPU_r470.ab3@23054>   MOVE.l linenumat,prolineat
00032564 <AmiBlitz3_noFPU_r470.ab3@23055>   ADDQ.w #1,procnum2
0003256C <AmiBlitz3_noFPU_r470.ab3@23056>   MOVE.w procnum2(PC),procnum
00032572 <AmiBlitz3_noFPU_r470.ab3@23057>   MOVE.w D1,proceduremode
00032578 <AmiBlitz3_noFPU_r470.ab3@23058>   CLR.w locvaroff
0003257C <AmiBlitz3_noFPU_r470.ab3@23059>   CMP.w #$7B,D0
00032580 <AmiBlitz3_noFPU_r470.ab3@23060>    BNE.w JUMP_syntaxerr
00032588 <AmiBlitz3_noFPU_r470.ab3@23061>    MOVE.b #1,infunctioncode
0003258E <AmiBlitz3_noFPU_r470.ab3@23062>   MOVEA.l tempvm,A0
00032596 <AmiBlitz3_noFPU_r470.ab3@23063>   MOVE.w $C(A0),memlibstat
0003259C <AmiBlitz3_noFPU_r470.ab3@23064>   BCLR #$7,$C(A0)                                          ;Bit out of range
000325A0 <AmiBlitz3_noFPU_r470.ab3@23065>   MOVE.w #$4EF9,D1
000325A4 <AmiBlitz3_noFPU_r470.ab3@23066>    BSR.w writeword
000325AA <AmiBlitz3_noFPU_r470.ab3@23067>    JSR addoff
000325AE <AmiBlitz3_noFPU_r470.ab3@23068>    BSR.w writelong
000325B4 <AmiBlitz3_noFPU_r470.ab3@23069>    JSR findproc                                          ;findproc function
000325B8 <AmiBlitz3_noFPU_r470.ab3@23070>    BEQ.w JUMP_dupprocerr
000325BE <AmiBlitz3_noFPU_r470.ab3@23071>    JSR addlabel
000325C4 <AmiBlitz3_noFPU_r470.ab3@23072>    MOVE.b #31,$20(a2)                                      ;increase if more pars
000325CA <AmiBlitz3_noFPU_r470.ab3@23073>    MOVE.b #0,isfunc(a2)
000325D2 <AmiBlitz3_noFPU_r470.ab3@23074>    MOVE.l functionreturntype,funcstruct_returntype(a2)
000325DA <AmiBlitz3_noFPU_r470.ab3@23075>   MOVE.l destpointer,$E(A2)
000325E0 <AmiBlitz3_noFPU_r470.ab3@23076>   MOVE.l A2,currentfunction
000325E6 <AmiBlitz3_noFPU_r470.ab3@23077>   LEA nops8,A0
000325EC <AmiBlitz3_noFPU_r470.ab3@23078>   LEA dataget,A1
000325F0 <AmiBlitz3_noFPU_r470.ab3@23079>    BSR.w pokecode2
000325F6 <AmiBlitz3_noFPU_r470.ab3@23080>   TST.b debugmode
000325FA <AmiBlitz3_noFPU_r470.ab3@23081>    BEQ.b JL_0_D3AA
000325FC <AmiBlitz3_noFPU_r470.ab3@23082>   MOVEQ.l #$04,D1
00032602 <AmiBlitz3_noFPU_r470.ab3@23083>    JSR writetrap
0003260C <AmiBlitz3_noFPU_r470.ab3@23084>   MOVE.l destpointer,proclocals
00032610 <AmiBlitz3_noFPU_r470.ab3@23085>    BSR.w writelong
00032614 <AmiBlitz3_noFPU_r470.ab3@23086>    BSR.w writelong
00032618 <AmiBlitz3_noFPU_r470.ab3@23089>    LEA $16(A2),A4
00032620 <AmiBlitz3_noFPU_r470.ab3@23090>   MOVE.b proceduremode+1,$5(A2)
00032622 <AmiBlitz3_noFPU_r470.ab3@23091>   MOVEQ.l #$00,D6
00032624 <AmiBlitz3_noFPU_r470.ab3@23092>   MOVEQ.l #$00,D5
0003262A <AmiBlitz3_noFPU_r470.ab3@23093>    JSR get1bytemain
0003262E <AmiBlitz3_noFPU_r470.ab3@23094>   CMP.w #$7D,D0
00032632 <AmiBlitz3_noFPU_r470.ab3@23095>    BEQ.w JL_0_D466
00032636 <AmiBlitz3_noFPU_r470.ab3@23098>    CMP.b #"@",d0
0003263A <AmiBlitz3_noFPU_r470.ab3@23099>    BNE 'l2
0003263C <AmiBlitz3_noFPU_r470.ab3@23100>    MOVE.l a0,-(a7)
00032642 <AmiBlitz3_noFPU_r470.ab3@23101>    MOVE.l currentfunction,a0
00032648 <AmiBlitz3_noFPU_r470.ab3@23102>    CMP.b #31,$20(a0)                                       ;increase if morepars
0003264C <AmiBlitz3_noFPU_r470.ab3@23103>    BNE 'l1
00032650 <AmiBlitz3_noFPU_r470.ab3@23104>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032656 <AmiBlitz3_noFPU_r470.ab3@23107>    JSR get1bytemain
00032658 <AmiBlitz3_noFPU_r470.ab3@23108>    MOVE.l (a7)+,a0
0003265C <AmiBlitz3_noFPU_r470.ab3@23111>    BSR.w getparameter
00032660 <AmiBlitz3_noFPU_r470.ab3@23112>    BSR.w JL_0_8E3C
00032668 <AmiBlitz3_noFPU_r470.ab3@23113>   CMPI.l #$7,$4(A2)
0003266C <AmiBlitz3_noFPU_r470.ab3@23114>    BNE.w JL_0_D3F6
00032672 <AmiBlitz3_noFPU_r470.ab3@23115>   LEA stbuff,A0
00032674 <AmiBlitz3_noFPU_r470.ab3@23116>   MOVE.w D5,D1
00032676 <AmiBlitz3_noFPU_r470.ab3@23117>   LSL.w #2,D1
0003267A <AmiBlitz3_noFPU_r470.ab3@23118>   MOVE.w D6,$0(A0,D1.W)
00032680 <AmiBlitz3_noFPU_r470.ab3@23119>   MOVE.w $4(A3),$2(A0,D1.W)
00032682 <AmiBlitz3_noFPU_r470.ab3@23120>   ADDQ.w #1,D5
00032684 <AmiBlitz3_noFPU_r470.ab3@23121>   MOVEQ.l #$07,D2
00032688 <AmiBlitz3_noFPU_r470.ab3@23122> BRA.w JL_0_D442
0003268E <AmiBlitz3_noFPU_r470.ab3@23125> JMP toovarerr
00032692 <AmiBlitz3_noFPU_r470.ab3@23128>   MOVE.w #$2940,D1
00032694 <AmiBlitz3_noFPU_r470.ab3@23129>   MOVEQ.l #$03,D2
0003269C <AmiBlitz3_noFPU_r470.ab3@23130>   BTST #$0,flagmask+1
000326A0 <AmiBlitz3_noFPU_r470.ab3@23131>    BNE.w JL_0_D430
000326A8 <AmiBlitz3_noFPU_r470.ab3@23132>   CMPI.l #$100,$4(A2)
000326AC <AmiBlitz3_noFPU_r470.ab3@23133>    BCC.w JUMP_illprocperr
000326B0 <AmiBlitz3_noFPU_r470.ab3@23134>   MOVE.w $6(A2),D2
000326B4 <AmiBlitz3_noFPU_r470.ab3@23135>   CMP.w #$2,D2
000326B8 <AmiBlitz3_noFPU_r470.ab3@23136>    BHI.w JL_0_D430
000326BC <AmiBlitz3_noFPU_r470.ab3@23137>    BEQ.w JL_0_D42C
000326C0 <AmiBlitz3_noFPU_r470.ab3@23138>   EORI.w #$3000,D1
000326C4 <AmiBlitz3_noFPU_r470.ab3@23139> BRA.w JL_0_D430
000326CA <AmiBlitz3_noFPU_r470.ab3@23142> JMP more6pard
000326CE <AmiBlitz3_noFPU_r470.ab3@23145>   ORI.w #$1000,D1
000326D0 <AmiBlitz3_noFPU_r470.ab3@23148>   OR.w D6,D1
000326D6 <AmiBlitz3_noFPU_r470.ab3@23149>   TST.b fpu
000326DA <AmiBlitz3_noFPU_r470.ab3@23150>   BEQ 'nofpu
000326DE <AmiBlitz3_noFPU_r470.ab3@23151>   CMP.b #5,d2
000326E2 <AmiBlitz3_noFPU_r470.ab3@23152>   BNE 'nofpu
000326E6 <AmiBlitz3_noFPU_r470.ab3@23153>   CMP.w #6,d6
000326EA <AmiBlitz3_noFPU_r470.ab3@23154>   BLT 'l10a
000326F0 <AmiBlitz3_noFPU_r470.ab3@23155>   CMP.l #newtype_double,a2
000326F4 <AmiBlitz3_noFPU_r470.ab3@23156>   BEQ JUMP_more6pard
000326F8 <AmiBlitz3_noFPU_r470.ab3@23157> BRA 'nofpu
000326FE <AmiBlitz3_noFPU_r470.ab3@23160>   MOVE.l #$f22c6400,d1
00032702 <AmiBlitz3_noFPU_r470.ab3@23161>   MOVEM.l d0/a4,-(a7)
00032704 <AmiBlitz3_noFPU_r470.ab3@23162>   MOVE.l d6,d0
00032706 <AmiBlitz3_noFPU_r470.ab3@23163>   ASL.l #7,d0
00032708 <AmiBlitz3_noFPU_r470.ab3@23164>   OR.w d0,d1
0003270E <AmiBlitz3_noFPU_r470.ab3@23165>   CMP.l #newtype_double,a2
00032712 <AmiBlitz3_noFPU_r470.ab3@23166>   BNE 'l1
00032718 <AmiBlitz3_noFPU_r470.ab3@23167>   OR.l #$1000,d1
0003271C <AmiBlitz3_noFPU_r470.ab3@23170>   BSR writelong
00032720 <AmiBlitz3_noFPU_r470.ab3@23171>   MOVE.w 4(a3),d1
00032724 <AmiBlitz3_noFPU_r470.ab3@23172>   BSR writeword
00032728 <AmiBlitz3_noFPU_r470.ab3@23173>   MOVEM.l (a7)+,a4/d0
0003272C <AmiBlitz3_noFPU_r470.ab3@23174> BRA JL_0_D442
0003272E <AmiBlitz3_noFPU_r470.ab3@23177>   MOVE.l A4,-(A7)
00032732 <AmiBlitz3_noFPU_r470.ab3@23178>    CMP.w #6,d6
00032736 <AmiBlitz3_noFPU_r470.ab3@23179>    BLT 'l10
0003273A <AmiBlitz3_noFPU_r470.ab3@23180>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
0003273C <AmiBlitz3_noFPU_r470.ab3@23181>    ADD.w d6,d1
00032742 <AmiBlitz3_noFPU_r470.ab3@23182>    JSR Atokejsr
00032748 <AmiBlitz3_noFPU_r470.ab3@23183>    TST.w dontwrite
0003274C <AmiBlitz3_noFPU_r470.ab3@23184>    BNE 'l10
00032752 <AmiBlitz3_noFPU_r470.ab3@23185>    MOVE.l data1start,d1
00032758 <AmiBlitz3_noFPU_r470.ab3@23186>    MOVE.l destpointer,a4
0003275C <AmiBlitz3_noFPU_r470.ab3@23187>    ADD.l d1,-6(a4)
00032762 <AmiBlitz3_noFPU_r470.ab3@23188>    MOVE.l destpointer,d1
00032764 <AmiBlitz3_noFPU_r470.ab3@23189>    SUBQ.l #6,d1
0003276A <AmiBlitz3_noFPU_r470.ab3@23190>    SUB.l destbufferstart,d1
0003276C <AmiBlitz3_noFPU_r470.ab3@23192>    MOVE.l d2,-(a7)
0003276E <AmiBlitz3_noFPU_r470.ab3@23193>    MOVE.l d1,d2
00032774 <AmiBlitz3_noFPU_r470.ab3@23194>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032776 <AmiBlitz3_noFPU_r470.ab3@23195>    MOVE.l (a7)+,d2
0003277C <AmiBlitz3_noFPU_r470.ab3@23196>    MOVE.l destpointer,a4
00032780 <AmiBlitz3_noFPU_r470.ab3@23197>    CMP.w #2,d2
00032784 <AmiBlitz3_noFPU_r470.ab3@23198>    BNE 'nw1
0003278A <AmiBlitz3_noFPU_r470.ab3@23200>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00032792 <AmiBlitz3_noFPU_r470.ab3@23201>    ADD.l #2,-6(a4)
00032796 <AmiBlitz3_noFPU_r470.ab3@23204>    CMP.w #1,d2
0003279A <AmiBlitz3_noFPU_r470.ab3@23205>    BNE 'nb
000327A0 <AmiBlitz3_noFPU_r470.ab3@23206>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000327A8 <AmiBlitz3_noFPU_r470.ab3@23207>    ADD.l #3,-6(a4)
000327AE <AmiBlitz3_noFPU_r470.ab3@23210>    MOVE.w $4(a3),-2(a4)
000327B2 <AmiBlitz3_noFPU_r470.ab3@23211> BRA 'ne1
000327B6 <AmiBlitz3_noFPU_r470.ab3@23214>   BSR.w writeword                                          ;write storeparameter
000327BA <AmiBlitz3_noFPU_r470.ab3@23217>   MOVE.w $4(A3),D1
000327BE <AmiBlitz3_noFPU_r470.ab3@23218>    BSR.w writeword
000327C0 <AmiBlitz3_noFPU_r470.ab3@23221>   MOVEA.l (A7)+,A4
000327C6 <AmiBlitz3_noFPU_r470.ab3@23224>   CLR.l functionreturntype
000327C8 <AmiBlitz3_noFPU_r470.ab3@23225>   ADDQ.w #1,D6
000327CC <AmiBlitz3_noFPU_r470.ab3@23226>   CMP.w #11,D6                                             ;max function parameters
000327D0 <AmiBlitz3_noFPU_r470.ab3@23227>    BCC.w JUMP_toovarerr
000327D6 <AmiBlitz3_noFPU_r470.ab3@23228>   MOVE.l currentfunction,a0
000327DA <AmiBlitz3_noFPU_r470.ab3@23229>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
000327DC <AmiBlitz3_noFPU_r470.ab3@23230>   MOVE.b D2,(A4)+
000327E0 <AmiBlitz3_noFPU_r470.ab3@23231>   CMP.w #$2C,D0
000327E4 <AmiBlitz3_noFPU_r470.ab3@23232>    BNE.w JL_0_D45E
000327EA <AmiBlitz3_noFPU_r470.ab3@23233>    JSR get1bytemain
000327EE <AmiBlitz3_noFPU_r470.ab3@23245> BRA.w JL_0_D3C6
000327F2 <AmiBlitz3_noFPU_r470.ab3@23248>   CMP.w #$7D,D0
000327F6 <AmiBlitz3_noFPU_r470.ab3@23249>    BNE.w JUMP_syntaxerr
000327FC <AmiBlitz3_noFPU_r470.ab3@23252>   MOVEA.l currentfunction,A2
000327FE <AmiBlitz3_noFPU_r470.ab3@23253>   LSL.w #4,D5
00032800 <AmiBlitz3_noFPU_r470.ab3@23254>   OR.w D5,D6
00032804 <AmiBlitz3_noFPU_r470.ab3@23255>   MOVE.b D6,$4(A2)
00032806 <AmiBlitz3_noFPU_r470.ab3@23256>   LSR.w #4,D6
0003280A <AmiBlitz3_noFPU_r470.ab3@23257>    BEQ.w JL_0_D4C4
00032810 <AmiBlitz3_noFPU_r470.ab3@23258>   LEA stbuff,A0
00032812 <AmiBlitz3_noFPU_r470.ab3@23259>   SUBQ.w #1,D6
00032814 <AmiBlitz3_noFPU_r470.ab3@23262>     MOVE.w D6,D1                                           ;function stringpars
00032816 <AmiBlitz3_noFPU_r470.ab3@23263>     LSL.w #2,D1                                            ;stringsize was 2
00032818 <AmiBlitz3_noFPU_r470.ab3@23265>       LSL.w #1,d1
0003281A <AmiBlitz3_noFPU_r470.ab3@23266>       ADDQ.w #4,d1
0003281C <AmiBlitz3_noFPU_r470.ab3@23268>     ADDQ.w #8,D1
00032822 <AmiBlitz3_noFPU_r470.ab3@23269>     MOVE.w D1,funcst+2
00032828 <AmiBlitz3_noFPU_r470.ab3@23270>     MOVE.l funcst,D1
0003282C <AmiBlitz3_noFPU_r470.ab3@23271>     BSR.w writelong
0003282E <AmiBlitz3_noFPU_r470.ab3@23272>     MOVE.w (A0)+,D1
00032832 <AmiBlitz3_noFPU_r470.ab3@23273>     CMP.b #5,d1
00032836 <AmiBlitz3_noFPU_r470.ab3@23274>     BLE 's1
0003283A <AmiBlitz3_noFPU_r470.ab3@23275>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
0003283E <AmiBlitz3_noFPU_r470.ab3@23276>     BSR writeinstruction
00032840 <AmiBlitz3_noFPU_r470.ab3@23277>     MOVE.w D6,D1                                           ;function stringpars
00032842 <AmiBlitz3_noFPU_r470.ab3@23278>     LSL.w #2,D1                                            ;stringsize was 2
00032844 <AmiBlitz3_noFPU_r470.ab3@23280>       LSL.w #1,d1
00032846 <AmiBlitz3_noFPU_r470.ab3@23282>     ADDQ.w #8,D1
0003284A <AmiBlitz3_noFPU_r470.ab3@23283>     BSR writeword
0003284E <AmiBlitz3_noFPU_r470.ab3@23284>   BRA 's2
00032854 <AmiBlitz3_noFPU_r470.ab3@23287>     OR.w movedna3,D1
00032858 <AmiBlitz3_noFPU_r470.ab3@23288>      BSR.w writeword
0003285E <AmiBlitz3_noFPU_r470.ab3@23291>     MOVE.w (A0)+,least+2
00032864 <AmiBlitz3_noFPU_r470.ab3@23292>     MOVE.l least,D1
00032868 <AmiBlitz3_noFPU_r470.ab3@23293>      BSR.w writelong
0003286A <AmiBlitz3_noFPU_r470.ab3@23294>     MOVE.l A0,-(A7)
0003286E <AmiBlitz3_noFPU_r470.ab3@23295>     MOVE.w #$C700,D1
00032872 <AmiBlitz3_noFPU_r470.ab3@23296>      BSR.w Atokejsr
00032874 <AmiBlitz3_noFPU_r470.ab3@23297>     MOVEA.l (A7)+,A0
00032878 <AmiBlitz3_noFPU_r470.ab3@23298>   DBF D6,JL_0_D482
0003287E <AmiBlitz3_noFPU_r470.ab3@23301> JMP get1bytemain
00032884 <AmiBlitz3_noFPU_r470.ab3@23305>   MOVE.w dontwrite,D1
00032888 <AmiBlitz3_noFPU_r470.ab3@23306>    BNE.w JL_0_D4F6
0003288E <AmiBlitz3_noFPU_r470.ab3@23307>   MOVE.l destpointer,-(A7)
00032894 <AmiBlitz3_noFPU_r470.ab3@23308>   MOVE.l A0,destpointer
0003289A <AmiBlitz3_noFPU_r470.ab3@23309>   MOVE.l linksize,D1
0003289E <AmiBlitz3_noFPU_r470.ab3@23310>    BSR.w writelong                                         ;writefunctions jumppos
000328A4 <AmiBlitz3_noFPU_r470.ab3@23311>    TST.b fastfunc
000328A8 <AmiBlitz3_noFPU_r470.ab3@23312>    BNE 'skip
000328AC <AmiBlitz3_noFPU_r470.ab3@23313>   MOVE.w #$CC00,D1
000328B0 <AmiBlitz3_noFPU_r470.ab3@23314>    BSR.w tokejsr2                                          ;write clearvars
000328B6 <AmiBlitz3_noFPU_r470.ab3@23317>   MOVE.l (A7)+,destpointer
000328B8 <AmiBlitz3_noFPU_r470.ab3@23320> RTS
000328BE <AmiBlitz3_noFPU_r470.ab3@23324>   MOVEA.l currentfunction,A2
000328C2 <AmiBlitz3_noFPU_r470.ab3@23325>   MOVEA.l $E(A2),A0
000328C6 <AmiBlitz3_noFPU_r470.ab3@23326>   MOVE.w $6(A2),D1
000328CA <AmiBlitz3_noFPU_r470.ab3@23327>    BEQ.w JL_0_D538
000328D0 <AmiBlitz3_noFPU_r470.ab3@23328>   MOVE.w D1,linksize+2
000328D4 <AmiBlitz3_noFPU_r470.ab3@23329>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
000328D8 <AmiBlitz3_noFPU_r470.ab3@23330>    BNE.w JL_0_D522
000328DA <AmiBlitz3_noFPU_r470.ab3@23331>   ADDQ.w #6,A0
000328DE <AmiBlitz3_noFPU_r470.ab3@23332>   MOVE.l A0,$E(A2)
000328E2 <AmiBlitz3_noFPU_r470.ab3@23333> BRA.w JL_0_D4C8
000328E4 <AmiBlitz3_noFPU_r470.ab3@23336>   MOVE.l A0,-(A7)
000328E8 <AmiBlitz3_noFPU_r470.ab3@23337>    BSR.w JL_0_D4C8
000328EA <AmiBlitz3_noFPU_r470.ab3@23338>   MOVEA.l (A7)+,A0
000328EE <AmiBlitz3_noFPU_r470.ab3@23339>   LEA $A(A0),A0
000328F4 <AmiBlitz3_noFPU_r470.ab3@23340>   MOVEA.l currentfunction,A2
000328F8 <AmiBlitz3_noFPU_r470.ab3@23341> BRA.w JL_0_D54A
000328FC <AmiBlitz3_noFPU_r470.ab3@23344>   MOVE.w $8(A2),D1
00032900 <AmiBlitz3_noFPU_r470.ab3@23345>    BNE.w JL_0_D54A
00032904 <AmiBlitz3_noFPU_r470.ab3@23346>   LEA $10(A0),A0
00032908 <AmiBlitz3_noFPU_r470.ab3@23347>   MOVE.l A0,$E(A2)
0003290A <AmiBlitz3_noFPU_r470.ab3@23348> RTS
00032910 <AmiBlitz3_noFPU_r470.ab3@23352> JMP errormsg_nofast
00032916 <AmiBlitz3_noFPU_r470.ab3@23355>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
0003291A <AmiBlitz3_noFPU_r470.ab3@23356>    BNE.w JL_0_D580
00032920 <AmiBlitz3_noFPU_r470.ab3@23357>    TST.b fastfunc
00032924 <AmiBlitz3_noFPU_r470.ab3@23358>    BNE JUMP_errormsg_nofast
0003292A <AmiBlitz3_noFPU_r470.ab3@23359>   MOVE.l destpointer,-(A7)
00032930 <AmiBlitz3_noFPU_r470.ab3@23360>   MOVE.l A0,destpointer
00032934 <AmiBlitz3_noFPU_r470.ab3@23361>   MOVE.w #$4EB9,D1
00032938 <AmiBlitz3_noFPU_r470.ab3@23362>    BSR.w writeword
0003293E <AmiBlitz3_noFPU_r470.ab3@23363>    JSR addoff
00032942 <AmiBlitz3_noFPU_r470.ab3@23364>    BSR.w writelong
00032944 <AmiBlitz3_noFPU_r470.ab3@23365>   MOVEA.l (A7)+,A0
0003294A <AmiBlitz3_noFPU_r470.ab3@23366>   MOVEA.l destpointer,A1
0003294C <AmiBlitz3_noFPU_r470.ab3@23367>   MOVE.l A0,-(A1)
00032952 <AmiBlitz3_noFPU_r470.ab3@23368>   MOVE.l A0,destpointer
00032956 <AmiBlitz3_noFPU_r470.ab3@23371>   MOVE.w $8(A2),D4
0003295A <AmiBlitz3_noFPU_r470.ab3@23372>    BPL.w JL_0_D59E
0003295E <AmiBlitz3_noFPU_r470.ab3@23373>   MOVE.w #$C004,D1
00032962 <AmiBlitz3_noFPU_r470.ab3@23374>    BSR.w tokejsr2
00032968 <AmiBlitz3_noFPU_r470.ab3@23375>   MOVEA.l currentfunction,A2
0003296C <AmiBlitz3_noFPU_r470.ab3@23376>   MOVE.w $8(A2),D4
00032970 <AmiBlitz3_noFPU_r470.ab3@23377>   ANDI.w #$7FFF,D4
00032974 <AmiBlitz3_noFPU_r470.ab3@23380>    BEQ.w JL_0_D5E0
00032978 <AmiBlitz3_noFPU_r470.ab3@23381>   MOVE.b $4(A2),D1
0003297C <AmiBlitz3_noFPU_r470.ab3@23382>   ANDI.w #$F,D1
0003297E <AmiBlitz3_noFPU_r470.ab3@23383>   MOVE.w D1,-(A7)
00032982 <AmiBlitz3_noFPU_r470.ab3@23384>   CMP.w #$5,D1
00032986 <AmiBlitz3_noFPU_r470.ab3@23385>    BCS.w JL_0_D5BC
0003298A <AmiBlitz3_noFPU_r470.ab3@23386>   MOVE.w #$2F04,D1
0003298E <AmiBlitz3_noFPU_r470.ab3@23387>    BSR.w writeword
00032994 <AmiBlitz3_noFPU_r470.ab3@23390>   MOVE.l locdatast,D3
0003299A <AmiBlitz3_noFPU_r470.ab3@23391>    JSR datastart
0003299E <AmiBlitz3_noFPU_r470.ab3@23392>   MOVE.w #$C501,D1
000329A2 <AmiBlitz3_noFPU_r470.ab3@23393>    BSR.w tokejsr2
000329A4 <AmiBlitz3_noFPU_r470.ab3@23394>   MOVE.w (A7)+,D1
000329A8 <AmiBlitz3_noFPU_r470.ab3@23395>   CMP.w #$5,D1
000329AC <AmiBlitz3_noFPU_r470.ab3@23396>    BCS.w JL_0_D5E0
000329B0 <AmiBlitz3_noFPU_r470.ab3@23397>   MOVE.w #$281F,D1
000329B4 <AmiBlitz3_noFPU_r470.ab3@23398>    BSR.w writeword
000329B8 <AmiBlitz3_noFPU_r470.ab3@23400>   MOVE.w #$4E75,D1
000329BC <AmiBlitz3_noFPU_r470.ab3@23401> BRA.w writeword
000329C2 <AmiBlitz3_noFPU_r470.ab3@23405>   LEA mwait,A0
000329C8 <AmiBlitz3_noFPU_r470.ab3@23406>   LEA mwaitf,A1
000329CC <AmiBlitz3_noFPU_r470.ab3@23407> BRA.w pokecode
000329D2 <AmiBlitz3_noFPU_r470.ab3@23411> JMP laberr
000329D6 <AmiBlitz3_noFPU_r470.ab3@23414>   CMP.w #$2E,D0
000329DA <AmiBlitz3_noFPU_r470.ab3@23415>   BNE.w JUMP_syntaxerr
000329E0 <AmiBlitz3_noFPU_r470.ab3@23416>   JSR getparameter2
000329E4 <AmiBlitz3_noFPU_r470.ab3@23417>   BEQ.w JUMP_laberr
000329EA <AmiBlitz3_noFPU_r470.ab3@23418>   LEA newtypebase,A2
000329F0 <AmiBlitz3_noFPU_r470.ab3@23419>   JSR findtype
000329F4 <AmiBlitz3_noFPU_r470.ab3@23420>   BNE.w JL_0_D626
000329FC <AmiBlitz3_noFPU_r470.ab3@23421>   CMPI.l #MaxByte,$4(A2)
00032A00 <AmiBlitz3_noFPU_r470.ab3@23422>   BNE.w JUMP_typeerr
00032A04 <AmiBlitz3_noFPU_r470.ab3@23423> BRA.w JL_0_D62A
00032A0A <AmiBlitz3_noFPU_r470.ab3@23426> JMP typeerr
00032A10 <AmiBlitz3_noFPU_r470.ab3@23429>   JSR addlabel
00032A14 <AmiBlitz3_noFPU_r470.ab3@23432>   CLR.l $4(A2)
00032A1A <AmiBlitz3_noFPU_r470.ab3@23433>   MOVE.l A2,thistype
00032A20 <AmiBlitz3_noFPU_r470.ab3@23434>   CLR.l prevtype
00032A26 <AmiBlitz3_noFPU_r470.ab3@23435>   CLR.w typelen
00032A2C <AmiBlitz3_noFPU_r470.ab3@23436>   CLR.w linemode
00032A32 <AmiBlitz3_noFPU_r470.ab3@23437>   JSR reget
00032A36 <AmiBlitz3_noFPU_r470.ab3@23438>   BNE.w typemode
00032A38 <AmiBlitz3_noFPU_r470.ab3@23439> RTS
00032A3C <AmiBlitz3_noFPU_r470.ab3@23442>   CMP.w #-$7FFE,D0
00032A40 <AmiBlitz3_noFPU_r470.ab3@23443>   BEQ.w JL_0_D82E
00032A4A <AmiBlitz3_noFPU_r470.ab3@23445>   MOVE.w oldqflag,instringon
00032A50 <AmiBlitz3_noFPU_r470.ab3@23446>   MOVEA.l lastsourcepos,A5
00032A52 <AmiBlitz3_noFPU_r470.ab3@23447>   MOVEQ.l #$00,D6
00032A56 <AmiBlitz3_noFPU_r470.ab3@23448>   CMP.w #$2A,D0
00032A5A <AmiBlitz3_noFPU_r470.ab3@23449>   BNE.w JL_0_D670
00032A5C <AmiBlitz3_noFPU_r470.ab3@23450>   MOVEQ.l #$01,D6
00032A62 <AmiBlitz3_noFPU_r470.ab3@23451>   JSR get1bytemain
00032A66 <AmiBlitz3_noFPU_r470.ab3@23452> BRA.w JL_0_D67E
00032A6A <AmiBlitz3_noFPU_r470.ab3@23455>   CMP.w #$40,D0
00032A6E <AmiBlitz3_noFPU_r470.ab3@23456>   BNE.w JL_0_D67E
00032A70 <AmiBlitz3_noFPU_r470.ab3@23457>   MOVEQ.l #$05,D6
00032A76 <AmiBlitz3_noFPU_r470.ab3@23458>   JSR get1bytemain
00032A7C <AmiBlitz3_noFPU_r470.ab3@23461>   MOVE.w D6,flagmask
00032A82 <AmiBlitz3_noFPU_r470.ab3@23462>   JSR getparameter2
00032A86 <AmiBlitz3_noFPU_r470.ab3@23463>   BEQ.w JUMP_syntaxerr
00032A8C <AmiBlitz3_noFPU_r470.ab3@23464>   MOVEA.l thistype,A2
00032A8E <AmiBlitz3_noFPU_r470.ab3@23465>   ADDQ.w #4,A2
00032A94 <AmiBlitz3_noFPU_r470.ab3@23466>   JSR findvariable2
00032A98 <AmiBlitz3_noFPU_r470.ab3@23467>   BEQ.w JUMP_dupofferr
00032A9E <AmiBlitz3_noFPU_r470.ab3@23468>   JSR addlabel
00032AA0 <AmiBlitz3_noFPU_r470.ab3@23469>   MOVE.l A2,-(A7)
00032AA4 <AmiBlitz3_noFPU_r470.ab3@23470>   CMP.w #$2E,D0
00032AA8 <AmiBlitz3_noFPU_r470.ab3@23471>    BEQ.w JL_0_D6CE
00032AAC <AmiBlitz3_noFPU_r470.ab3@23472>   CMP.w #$24,D0
00032AB0 <AmiBlitz3_noFPU_r470.ab3@23473>    BNE.w JL_0_D6C0
00032AB6 <AmiBlitz3_noFPU_r470.ab3@23474>   MOVE.l #newtype_string,D2
00032ABC <AmiBlitz3_noFPU_r470.ab3@23475>    JSR get1bytemain
00032AC0 <AmiBlitz3_noFPU_r470.ab3@23476> BRA.w JL_0_D710
00032AC6 <AmiBlitz3_noFPU_r470.ab3@23479> JMP dupofferr
00032ACC <AmiBlitz3_noFPU_r470.ab3@23482>   MOVE.l prevtype,D2
00032AD0 <AmiBlitz3_noFPU_r470.ab3@23483>   BEQ.w JUMP_notypeerr
00032AD4 <AmiBlitz3_noFPU_r470.ab3@23484> BRA.w JL_0_D706
00032ADA <AmiBlitz3_noFPU_r470.ab3@23487> JMP notypeerr
00032AE0 <AmiBlitz3_noFPU_r470.ab3@23490>   JSR getparameter2
00032AE4 <AmiBlitz3_noFPU_r470.ab3@23491>    BEQ.w JUMP_syntaxerr
00032AEA <AmiBlitz3_noFPU_r470.ab3@23492>   LEA newtypebase,A2
00032AF0 <AmiBlitz3_noFPU_r470.ab3@23493>    JSR findtype
00032AF4 <AmiBlitz3_noFPU_r470.ab3@23494>    BEQ.w JL_0_D704
00032AFC <AmiBlitz3_noFPU_r470.ab3@23495>   BTST #$0,flagmask+1
00032B00 <AmiBlitz3_noFPU_r470.ab3@23496>    BEQ.w JUMP_notypeerr
00032B06 <AmiBlitz3_noFPU_r470.ab3@23497>   JSR addlabel
00032B0E <AmiBlitz3_noFPU_r470.ab3@23500>   MOVE.w linenumat+2,$8(A2)
00032B16 <AmiBlitz3_noFPU_r470.ab3@23501>   MOVE.l #MaxByte,$4(A2)
00032B18 <AmiBlitz3_noFPU_r470.ab3@23504>   MOVE.l A2,D2
00032B1E <AmiBlitz3_noFPU_r470.ab3@23507>   CMP.l #newtype_byte,D2
00032B22 <AmiBlitz3_noFPU_r470.ab3@23508>    BEQ.w JL_0_D71E
00032B28 <AmiBlitz3_noFPU_r470.ab3@23511>   ADDQ.w #1,typelen
00032B30 <AmiBlitz3_noFPU_r470.ab3@23512>   BCLR #$0,typelen+1
00032B32 <AmiBlitz3_noFPU_r470.ab3@23515>   MOVEQ.l #$00,D3
00032B34 <AmiBlitz3_noFPU_r470.ab3@23516>   MOVEA.l D2,A2
00032B3A <AmiBlitz3_noFPU_r470.ab3@23517>   MOVE.l A2,prevtype
00032B3E <AmiBlitz3_noFPU_r470.ab3@23518>   MOVE.w $8(A2),D3
00032B40 <AmiBlitz3_noFPU_r470.ab3@23519>   MOVEA.l (A7)+,A2
00032B44 <AmiBlitz3_noFPU_r470.ab3@23520>   MOVE.l D2,$A(A2)
00032B46 <AmiBlitz3_noFPU_r470.ab3@23521>   MOVEQ.l #$00,D4
00032B4C <AmiBlitz3_noFPU_r470.ab3@23522>   MOVE.w typelen,D4
00032B50 <AmiBlitz3_noFPU_r470.ab3@23523>   MOVE.w D4,$4(A2)
00032B58 <AmiBlitz3_noFPU_r470.ab3@23524>   BTST #$0,flagmask+1
00032B5C <AmiBlitz3_noFPU_r470.ab3@23525>    BEQ.w JL_0_D74C
00032B5E <AmiBlitz3_noFPU_r470.ab3@23526>   MOVEQ.l #$04,D3
00032B62 <AmiBlitz3_noFPU_r470.ab3@23529>   CMP.w #$5B,D0
00032B66 <AmiBlitz3_noFPU_r470.ab3@23530>    BNE.w JL_0_D782
00032B6A <AmiBlitz3_noFPU_r470.ab3@23531>   MOVEM.l D3-D4/A2,-(A7)
00032B6E <AmiBlitz3_noFPU_r470.ab3@23532>    BSR.w AJL_0_BF6E
00032B72 <AmiBlitz3_noFPU_r470.ab3@23533>   CMP.w #$5D,D0
00032B76 <AmiBlitz3_noFPU_r470.ab3@23534>    BNE.w JUMP_syntaxerr
00032B78 <AmiBlitz3_noFPU_r470.ab3@23535>   TST.w D6
00032B7C <AmiBlitz3_noFPU_r470.ab3@23536>    BNE.w JUMP_fpconerr
00032B7E <AmiBlitz3_noFPU_r470.ab3@23537>   MOVE.l D3,D1
00032B82 <AmiBlitz3_noFPU_r470.ab3@23538>   MOVEM.l (A7)+,D3-D4/A2
00032B88 <AmiBlitz3_noFPU_r470.ab3@23539>    JSR get1bytemain
00032B8C <AmiBlitz3_noFPU_r470.ab3@23540>   MOVE.w D1,$8(A2)
00032B90 <AmiBlitz3_noFPU_r470.ab3@23541>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00032B98 <AmiBlitz3_noFPU_r470.ab3@23542>   ORI.w #$2,flagmask
00032B9A <AmiBlitz3_noFPU_r470.ab3@23545>   ADD.l D3,D4
00032BA0 <AmiBlitz3_noFPU_r470.ab3@23548>     CMP.l #65532,d4
00032BA4 <AmiBlitz3_noFPU_r470.ab3@23553>   BCC JUMP_toolongerr
00032BAC <AmiBlitz3_noFPU_r470.ab3@23554>   MOVE.w flagmask,$6(A2)
00032BB2 <AmiBlitz3_noFPU_r470.ab3@23555>   MOVE.w D4,typelen
00032BB4 <AmiBlitz3_noFPU_r470.ab3@23556> RTS
00032BBA <AmiBlitz3_noFPU_r470.ab3@23559> JMP badenderr
00032BC0 <AmiBlitz3_noFPU_r470.ab3@23562> JMP noiferr
00032BC6 <AmiBlitz3_noFPU_r470.ab3@23565> JMP toolongerr
00032BCC <AmiBlitz3_noFPU_r470.ab3@23568> JMP fpconerr
00032BD2 <AmiBlitz3_noFPU_r470.ab3@23571>   MOVE.l firstiff,D0
00032BD6 <AmiBlitz3_noFPU_r470.ab3@23572>    BEQ.w JUMP_noiferr
00032BD8 <AmiBlitz3_noFPU_r470.ab3@23573>   MOVEA.l D0,A0
00032BDC <AmiBlitz3_noFPU_r470.ab3@23574>   MOVE.w $C(A0),D0
00032BE0 <AmiBlitz3_noFPU_r470.ab3@23575>   ANDI.w #$FF,D0
00032BE2 <AmiBlitz3_noFPU_r470.ab3@23576>   CMP.w D0,D1
00032BE6 <AmiBlitz3_noFPU_r470.ab3@23577>    BNE.w JUMP_badenderr
00032BEA <AmiBlitz3_noFPU_r470.ab3@23580>   CMP.w #$1,D1
00032BEE <AmiBlitz3_noFPU_r470.ab3@23581>   BNE.w JL_0_D7D8
00032BF2 <AmiBlitz3_noFPU_r470.ab3@23582>   MOVE.w #$6000,D1
00032BF8 <AmiBlitz3_noFPU_r470.ab3@23585>     TST.b fast
00032BFC <AmiBlitz3_noFPU_r470.ab3@23586>     BEQ 'l1
00032C02 <AmiBlitz3_noFPU_r470.ab3@23587>     OR.l #$ff,d1
00032C06 <AmiBlitz3_noFPU_r470.ab3@23591>   BSR.w writeword
00032C0C <AmiBlitz3_noFPU_r470.ab3@23592>   MOVEA.l destpointer,A1
00032C10 <AmiBlitz3_noFPU_r470.ab3@23593>   MOVE.l $4(A0),D1
00032C12 <AmiBlitz3_noFPU_r470.ab3@23594>   SUB.l A1,D1
00032C18 <AmiBlitz3_noFPU_r470.ab3@23597>     TST.b fast
00032C1C <AmiBlitz3_noFPU_r470.ab3@23598>     BEQ 'l2
00032C20 <AmiBlitz3_noFPU_r470.ab3@23599>     BSR writelong
00032C24 <AmiBlitz3_noFPU_r470.ab3@23600>   BRA JL_0_D7D8
00032C28 <AmiBlitz3_noFPU_r470.ab3@23604>   BSR.w writeword
00032C2C <AmiBlitz3_noFPU_r470.ab3@23607>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00032C32 <AmiBlitz3_noFPU_r470.ab3@23608>   MOVE.l destpointer,D1
00032C34 <AmiBlitz3_noFPU_r470.ab3@23609>   SUB.l A1,D1
00032C3A <AmiBlitz3_noFPU_r470.ab3@23612>     TST.b fast
00032C3E <AmiBlitz3_noFPU_r470.ab3@23613>     BEQ 'l1
00032C40 <AmiBlitz3_noFPU_r470.ab3@23614>     ADDQ.l #4,D1
00032C46 <AmiBlitz3_noFPU_r470.ab3@23615>     MOVE.w dontwrite,D0
00032C4A <AmiBlitz3_noFPU_r470.ab3@23616>     BNE.w JL_0_D7FE
00032C4E <AmiBlitz3_noFPU_r470.ab3@23617>     MOVE.l d1,-$4(a1)
00032C52 <AmiBlitz3_noFPU_r470.ab3@23618>   BRA JL_0_D7FE
00032C54 <AmiBlitz3_noFPU_r470.ab3@23622>   ADDQ.l #2,d1
00032C5A <AmiBlitz3_noFPU_r470.ab3@23623>   TST.w dontwrite
00032C5E <AmiBlitz3_noFPU_r470.ab3@23624>   BNE JL_0_D7FE
00032C64 <AmiBlitz3_noFPU_r470.ab3@23625>   CMP.l #MinWordSgnd,D1
00032C68 <AmiBlitz3_noFPU_r470.ab3@23626>   BCC.w JUMP_bigiferr
00032C6C <AmiBlitz3_noFPU_r470.ab3@23627>   MOVE.w D1,-$2(A1)
00032C6E <AmiBlitz3_noFPU_r470.ab3@23630> RTS
00032C74 <AmiBlitz3_noFPU_r470.ab3@23633> JMP bigiferr
00032C7E <AmiBlitz3_noFPU_r470.ab3@23638>   MOVE.w oldqflag,instringon
00032C84 <AmiBlitz3_noFPU_r470.ab3@23639>   MOVEA.l lastsourcepos,A5
00032C86 <AmiBlitz3_noFPU_r470.ab3@23642>   MOVEQ.l #$01,D1
00032C8A <AmiBlitz3_noFPU_r470.ab3@23643> BRA.w JL_0_D810
00032C94 <AmiBlitz3_noFPU_r470.ab3@23647>   MOVE.w oldqflag,instringon
00032C9A <AmiBlitz3_noFPU_r470.ab3@23648>   MOVEA.l lastsourcepos,A5
00032C9C <AmiBlitz3_noFPU_r470.ab3@23651>   MOVEQ.l #$00,D1
00032CA0 <AmiBlitz3_noFPU_r470.ab3@23654>   BSR.w JL_0_D79E
00032CA4 <AmiBlitz3_noFPU_r470.ab3@23655>   BSR.w AJL_0_D81C
00032CAA <AmiBlitz3_noFPU_r470.ab3@23656> JMP get1bytemain
00032CB0 <AmiBlitz3_noFPU_r470.ab3@23659>   MOVE.l (A0),firstiff
00032CB2 <AmiBlitz3_noFPU_r470.ab3@23660>   MOVEA.l A0,A1
00032CB4 <AmiBlitz3_noFPU_r470.ab3@23661>   MOVEQ.l #$0E,D0
00032CBA <AmiBlitz3_noFPU_r470.ab3@23662>   MOVEA.l _execbase,A6
00032CC0 <AmiBlitz3_noFPU_r470.ab3@23663>   MOVE.l mempool,a0
00032CC4 <AmiBlitz3_noFPU_r470.ab3@23664> JMP _FreePooled(A6)
00032CCA <AmiBlitz3_noFPU_r470.ab3@23668>   JSR get1bytemain
00032CCE <AmiBlitz3_noFPU_r470.ab3@23671>   BEQ.w JL_0_D980
00032CD6 <AmiBlitz3_noFPU_r470.ab3@23672>   CMP.l #"noa7",-1(a5)
00032CDA <AmiBlitz3_noFPU_r470.ab3@23673>   BNE 'l1
00032CE0 <AmiBlitz3_noFPU_r470.ab3@23674>   JSR get1bytemain
00032CE6 <AmiBlitz3_noFPU_r470.ab3@23675>   JSR get1bytemain
00032CEC <AmiBlitz3_noFPU_r470.ab3@23676>   JSR get1bytemain
00032CF4 <AmiBlitz3_noFPU_r470.ab3@23677>   MOVE.w #$3a,lastchar
00032CF8 <AmiBlitz3_noFPU_r470.ab3@23678> BRA JL_0_D980
00032CFE <AmiBlitz3_noFPU_r470.ab3@23681>   CMP.w #"d0",-1(a5)
00032D02 <AmiBlitz3_noFPU_r470.ab3@23682>   BNE 'l2
00032D0A <AmiBlitz3_noFPU_r470.ab3@23683>   MOVE.b #1,returncode
00032D10 <AmiBlitz3_noFPU_r470.ab3@23684>   CLR.w lastchar
00032D14 <AmiBlitz3_noFPU_r470.ab3@23685> BRA JL_0_D980
00032D18 <AmiBlitz3_noFPU_r470.ab3@23688>   CMP.w #$80d7,d0
00032D1C <AmiBlitz3_noFPU_r470.ab3@23689>   BNE JL_0_D836
00032D22 <AmiBlitz3_noFPU_r470.ab3@23690>   JSR skiprest
00032D24 <AmiBlitz3_noFPU_r470.ab3@23691> RTS
00032D28 <AmiBlitz3_noFPU_r470.ab3@23694>   BSR.w JL_0_D844
00032D2E <AmiBlitz3_noFPU_r470.ab3@23695>   JSR reget
00032D32 <AmiBlitz3_noFPU_r470.ab3@23696>   BNE.w JL_0_D836
00032D34 <AmiBlitz3_noFPU_r470.ab3@23697> RTS
00032D38 <AmiBlitz3_noFPU_r470.ab3@23700>   CMP.w #-$7FFF,D0
00032D3C <AmiBlitz3_noFPU_r470.ab3@23701>    BNE.w JL_0_D87E
00032D42 <AmiBlitz3_noFPU_r470.ab3@23702>   MOVE.w linemode,D1
00032D46 <AmiBlitz3_noFPU_r470.ab3@23703>    BNE.w JUMP_modeerr
00032D4C <AmiBlitz3_noFPU_r470.ab3@23704>   ADDQ.w #1,typelen
00032D54 <AmiBlitz3_noFPU_r470.ab3@23705>   BCLR #$0,typelen+1
00032D5A <AmiBlitz3_noFPU_r470.ab3@23706>   MOVEA.l thistype,A0
00032D62 <AmiBlitz3_noFPU_r470.ab3@23707>   MOVE.w typelen,$8(A0)
00032D6A <AmiBlitz3_noFPU_r470.ab3@23708>   MOVE.w #$FFFF,linemode
00032D70 <AmiBlitz3_noFPU_r470.ab3@23709> JMP get1bytemain
00032D76 <AmiBlitz3_noFPU_r470.ab3@23712> JMP modeerr
00032D7A <AmiBlitz3_noFPU_r470.ab3@23715>   CMP.w #-$7FF5,D0
00032D7E <AmiBlitz3_noFPU_r470.ab3@23716>    BEQ.w JL_0_D80E
00032D82 <AmiBlitz3_noFPU_r470.ab3@23717>   CMP.w #-$7FF4,D0
00032D86 <AmiBlitz3_noFPU_r470.ab3@23718>    BEQ.w JL_0_D804
00032D8A <AmiBlitz3_noFPU_r470.ab3@23719>   CMP.w #-$7FF8,D0
00032D8E <AmiBlitz3_noFPU_r470.ab3@23720>    BNE.w JL_0_D89A
00032D92 <AmiBlitz3_noFPU_r470.ab3@23723> BRA.w JL_0_D9E8
00032D98 <AmiBlitz3_noFPU_r470.ab3@23726> JMP interr3
00032D9C <AmiBlitz3_noFPU_r470.ab3@23729>   CMP.w #-$7FF7,D0
00032DA0 <AmiBlitz3_noFPU_r470.ab3@23730>    BNE.w JL_0_D8C8
00032DA6 <AmiBlitz3_noFPU_r470.ab3@23731>    TST.b fpu
00032DAA <AmiBlitz3_noFPU_r470.ab3@23732>    BEQ 'nof
00032DB0 <AmiBlitz3_noFPU_r470.ab3@23733>    MOVEA.l currentfunction,A0
00032DB6 <AmiBlitz3_noFPU_r470.ab3@23734>    CMP.l #0,a0
00032DBA <AmiBlitz3_noFPU_r470.ab3@23735>    BEQ 'nof
00032DC0 <AmiBlitz3_noFPU_r470.ab3@23736>    CMP.b #5,$5(a0)
00032DC4 <AmiBlitz3_noFPU_r470.ab3@23737>     BNE 'nof
00032DCA <AmiBlitz3_noFPU_r470.ab3@23738>    MOVE.l #$f23c5000,d1
00032DCE <AmiBlitz3_noFPU_r470.ab3@23739>    BSR writelong
00032DD2 <AmiBlitz3_noFPU_r470.ab3@23740>    MOVE.w #0,d1
00032DD6 <AmiBlitz3_noFPU_r470.ab3@23741>    BSR writeword
00032DDA <AmiBlitz3_noFPU_r470.ab3@23744>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00032DDE <AmiBlitz3_noFPU_r470.ab3@23745>    BSR.w writeword
00032DE4 <AmiBlitz3_noFPU_r470.ab3@23746>   MOVEA.l currentfunction,A0
00032DEA <AmiBlitz3_noFPU_r470.ab3@23747>   CMP.l #0,a0
00032DEE <AmiBlitz3_noFPU_r470.ab3@23748>   BEQ JL_0_D896
00032DF4 <AmiBlitz3_noFPU_r470.ab3@23749>   MOVE.l destpointer,d1
00032DF8 <AmiBlitz3_noFPU_r470.ab3@23750>   SUB.l $e(a0),d1
00032DFC <AmiBlitz3_noFPU_r470.ab3@23751>   MOVE.l d1,isfunc+1(a0)
00032E02 <AmiBlitz3_noFPU_r470.ab3@23752>   CMPI.b #$7,$5(A0)
00032E06 <AmiBlitz3_noFPU_r470.ab3@23753>    BNE.w JL_0_D896
00032E0C <AmiBlitz3_noFPU_r470.ab3@23754>   MOVE.w putstlen,D1
00032E10 <AmiBlitz3_noFPU_r470.ab3@23755>    BSR.w writeword
00032E14 <AmiBlitz3_noFPU_r470.ab3@23756> BRA.w JL_0_D896
00032E1A <AmiBlitz3_noFPU_r470.ab3@23759> JMP interr
00032E1E <AmiBlitz3_noFPU_r470.ab3@23762>  CMP.w #-$7FD0,D0
00032E22 <AmiBlitz3_noFPU_r470.ab3@23763>    BNE.w JL_0_D966
00032E28 <AmiBlitz3_noFPU_r470.ab3@23764>   MOVE.w proceduremode,D1
00032E2C <AmiBlitz3_noFPU_r470.ab3@23765>    BNE.w JUMP_interr3
00032E32 <AmiBlitz3_noFPU_r470.ab3@23766>   TST.b debugmode
00032E36 <AmiBlitz3_noFPU_r470.ab3@23767>    BEQ.w JL_0_D90A
00032E38 <AmiBlitz3_noFPU_r470.ab3@23768>   MOVEQ.l #$03,D1
00032E3E <AmiBlitz3_noFPU_r470.ab3@23769>    JSR writetrap
00032E44 <AmiBlitz3_noFPU_r470.ab3@23770>   MOVE.w dontwrite,D1
00032E48 <AmiBlitz3_noFPU_r470.ab3@23771>    BNE.w JL_0_D90A
00032E4E <AmiBlitz3_noFPU_r470.ab3@23772>   MOVEA.l intcleanat,A0
00032E54 <AmiBlitz3_noFPU_r470.ab3@23773>   MOVE.l destpointer,(A0)
00032E58 <AmiBlitz3_noFPU_r470.ab3@23774>   MOVE.w #$C30C,D1
00032E5C <AmiBlitz3_noFPU_r470.ab3@23775>    BSR.w Atokejsr
00032E62 <AmiBlitz3_noFPU_r470.ab3@23778>   MOVE.w intstring,D1
00032E66 <AmiBlitz3_noFPU_r470.ab3@23779>    BEQ.w JUMP_interr
00032E6A <AmiBlitz3_noFPU_r470.ab3@23780>    BPL.w JL_0_D934
00032E70 <AmiBlitz3_noFPU_r470.ab3@23781>   MOVE.w intlevel,D1
00032E74 <AmiBlitz3_noFPU_r470.ab3@23782>   ORI.w #$7200,D1
00032E78 <AmiBlitz3_noFPU_r470.ab3@23783>    BSR.w writeword
00032E7C <AmiBlitz3_noFPU_r470.ab3@23784>   MOVE.w #$C103,D1
00032E80 <AmiBlitz3_noFPU_r470.ab3@23785>    BSR.w Atokejsr
00032E86 <AmiBlitz3_noFPU_r470.ab3@23786>   CLR.w intlevel
00032E8C <AmiBlitz3_noFPU_r470.ab3@23789>  CLR.w intstring
00032E92 <AmiBlitz3_noFPU_r470.ab3@23790>   MOVE.l intfin,D1
00032E96 <AmiBlitz3_noFPU_r470.ab3@23791>    BSR.w writelong
00032E9C <AmiBlitz3_noFPU_r470.ab3@23792>   MOVE.l #$70004E75,D1
00032EA0 <AmiBlitz3_noFPU_r470.ab3@23793>    BSR.w writelong
00032EA6 <AmiBlitz3_noFPU_r470.ab3@23794>   MOVE.w dontwrite,D1
00032EAA <AmiBlitz3_noFPU_r470.ab3@23795>    BNE.w JL_0_D962
00032EB0 <AmiBlitz3_noFPU_r470.ab3@23796>   MOVEA.l intjmpat,A0
00032EB4 <AmiBlitz3_noFPU_r470.ab3@23797>   MOVE.l destpointer(PC),(A0)
00032EBA <AmiBlitz3_noFPU_r470.ab3@23800> JMP get1bytemain
00032EBE <AmiBlitz3_noFPU_r470.ab3@23804>   CMP.w #-$7FF2,D0
00032EC2 <AmiBlitz3_noFPU_r470.ab3@23805>    BEQ.w doendsel
00032EC6 <AmiBlitz3_noFPU_r470.ab3@23806>   CMP.w #-$7F4C,D0
00032ECA <AmiBlitz3_noFPU_r470.ab3@23807>    BNE.w JL_0_D97C
00032ED0 <AmiBlitz3_noFPU_r470.ab3@23808> JMP doendseterr
00032ED6 <AmiBlitz3_noFPU_r470.ab3@23812> JMP syntaxerr
00032EDC <AmiBlitz3_noFPU_r470.ab3@23816>   TST.w dirmode
00032EE0 <AmiBlitz3_noFPU_r470.ab3@23817>   BNE.w JUMP_baddirerr
00032EE4 <AmiBlitz3_noFPU_r470.ab3@23818>   MOVE.w #$C800,D1
00032EEA <AmiBlitz3_noFPU_r470.ab3@23819>   JSR Atokejsr                                            ;end
00032EF2 <AmiBlitz3_noFPU_r470.ab3@23820>   CMP.l #"noa7",-4(a5)
00032EF6 <AmiBlitz3_noFPU_r470.ab3@23821>   BNE 'l10
00032EFC <AmiBlitz3_noFPU_r470.ab3@23822>   TST.w dontwrite
00032F00 <AmiBlitz3_noFPU_r470.ab3@23823>   BNE 'l10
00032F06 <AmiBlitz3_noFPU_r470.ab3@23824>   MOVE.l destpointer,d1
00032F08 <AmiBlitz3_noFPU_r470.ab3@23825>   SUBQ.l #4,d1
00032F0A <AmiBlitz3_noFPU_r470.ab3@23826>   MOVE.l a0,-(a7)
00032F0C <AmiBlitz3_noFPU_r470.ab3@23827>   MOVE.l d1,a0
00032F0E <AmiBlitz3_noFPU_r470.ab3@23828>   MOVE.l (a0),a0
00032F14 <AmiBlitz3_noFPU_r470.ab3@23829>   MOVE.l #$60000002,(a0)+
00032F18 <AmiBlitz3_noFPU_r470.ab3@23830>   MOVE.w #$588f,(a0)
00032F1A <AmiBlitz3_noFPU_r470.ab3@23831>   MOVE.l (a7)+,a0
00032F1C <AmiBlitz3_noFPU_r470.ab3@23834> RTS
00032F22 <AmiBlitz3_noFPU_r470.ab3@23838>   TST.w dirmode                                            ;stop
00032F26 <AmiBlitz3_noFPU_r470.ab3@23839>   BNE.w JUMP_baddirerr
00032F28 <AmiBlitz3_noFPU_r470.ab3@23840>   MOVE.w d0,d1
00032F2C <AmiBlitz3_noFPU_r470.ab3@23841>   BEQ 'l10
00032F30 <AmiBlitz3_noFPU_r470.ab3@23842>   CMP.b #$3a,d0
00032F34 <AmiBlitz3_noFPU_r470.ab3@23843>   BEQ 'l10
00032F3A <AmiBlitz3_noFPU_r470.ab3@23844>   JSR get1bytemain
00032F40 <AmiBlitz3_noFPU_r470.ab3@23847>   TST.b debugmode
00032F44 <AmiBlitz3_noFPU_r470.ab3@23848>   BEQ.w newstop
00032F48 <AmiBlitz3_noFPU_r470.ab3@23849>   MOVE.w #$D501,D1
00032F4C <AmiBlitz3_noFPU_r470.ab3@23850> BRA.w Atokejsr
00032F4E <AmiBlitz3_noFPU_r470.ab3@23854>     RTS
00032F50 <AmiBlitz3_noFPU_r470.ab3@23856>   MOVE.w d1,d0
00032F54 <AmiBlitz3_noFPU_r470.ab3@23857>   BEQ 'l10
00032F58 <AmiBlitz3_noFPU_r470.ab3@23858>   CMP.b #$3a,d0
00032F5C <AmiBlitz3_noFPU_r470.ab3@23859>   BEQ 'l10
00032F60 <AmiBlitz3_noFPU_r470.ab3@23860>   SUB.b #$30,d0
00032F64 <AmiBlitz3_noFPU_r470.ab3@23861>   MOVE.w #$4e40,d1
00032F68 <AmiBlitz3_noFPU_r470.ab3@23862> BRA 'l11
00032F6C <AmiBlitz3_noFPU_r470.ab3@23865>   MOVE.w #$4e4a,d1
00032F70 <AmiBlitz3_noFPU_r470.ab3@23866> BRA writeword
00032F72 <AmiBlitz3_noFPU_r470.ab3@23869>   ADD.b d0,d1
00032F76 <AmiBlitz3_noFPU_r470.ab3@23870> BRA writeword
00032F7C <AmiBlitz3_noFPU_r470.ab3@23874> JMP badconterr
00032F80 <AmiBlitz3_noFPU_r470.ab3@23877>   MOVE.w #$4E71,D1
00032F84 <AmiBlitz3_noFPU_r470.ab3@23878> BRA.w writeword
00032F8A <AmiBlitz3_noFPU_r470.ab3@23881>   MOVEA.l firstfor,A2
00032F90 <AmiBlitz3_noFPU_r470.ab3@23882>   CLR.l firstfor
00032F96 <AmiBlitz3_noFPU_r470.ab3@23883>   MOVEA.l _execbase,A6
00032F9A <AmiBlitz3_noFPU_r470.ab3@23886>   CMPA.w #$0,A2
00032F9E <AmiBlitz3_noFPU_r470.ab3@23887>   BEQ.w JL_0_D9E6
00032FA0 <AmiBlitz3_noFPU_r470.ab3@23888>   MOVEA.l A2,A1
00032FA2 <AmiBlitz3_noFPU_r470.ab3@23889>   MOVEA.l (A1),A2
00032FA4 <AmiBlitz3_noFPU_r470.ab3@23890>   MOVEQ.l #$00,D0
00032FAA <AmiBlitz3_noFPU_r470.ab3@23891>   MOVE.l mempool2,a0
00032FAE <AmiBlitz3_noFPU_r470.ab3@23892>   MOVE.b $10(A1),D0
00032FB2 <AmiBlitz3_noFPU_r470.ab3@23893>   JSR _FreePooled(A6)                                      ;freememfor_error
00032FB6 <AmiBlitz3_noFPU_r470.ab3@23894> BRA.w JL_0_D9CC
00032FB8 <AmiBlitz3_noFPU_r470.ab3@23897> RTS
00032FBE <AmiBlitz3_noFPU_r470.ab3@23901> JMP badpenderr
00032FC4 <AmiBlitz3_noFPU_r470.ab3@23907>   MOVE.w proceduremode,D1
00032FC8 <AmiBlitz3_noFPU_r470.ab3@23908>    BEQ.w JUMP_badpenderr
00032FCE <AmiBlitz3_noFPU_r470.ab3@23910>   MOVE.w dontwrite,D1
00032FD2 <AmiBlitz3_noFPU_r470.ab3@23911>    BNE.w JL_0_DA1A
00032FD8 <AmiBlitz3_noFPU_r470.ab3@23912>   MOVEA.l firstpend,A2
00032FDC <AmiBlitz3_noFPU_r470.ab3@23915>   CMPA.w #$0,A2
00032FE0 <AmiBlitz3_noFPU_r470.ab3@23916>    BEQ.w JL_0_DA1A
00032FE4 <AmiBlitz3_noFPU_r470.ab3@23917>   MOVEA.l $4(A2),A0
00032FEA <AmiBlitz3_noFPU_r470.ab3@23918>   MOVE.l destpointer,(A0)
00032FEC <AmiBlitz3_noFPU_r470.ab3@23919>   MOVEA.l (A2),A2
00032FF0 <AmiBlitz3_noFPU_r470.ab3@23920> BRA.w JL_0_DA02
00032FF6 <AmiBlitz3_noFPU_r470.ab3@23923>   TST.b debugmode
00032FFA <AmiBlitz3_noFPU_r470.ab3@23924>    BEQ.b JL_0_DA2A
00032FFC <AmiBlitz3_noFPU_r470.ab3@23925>   MOVEQ.l #$05,D1
00033002 <AmiBlitz3_noFPU_r470.ab3@23926>   JSR writetrap
00033008 <AmiBlitz3_noFPU_r470.ab3@23929>   MOVEA.l firstlocal,A2                                    ;firstlocal
0003300E <AmiBlitz3_noFPU_r470.ab3@23930>   JSR calcstatic2b                                           ;calcstatic
00033014 <AmiBlitz3_noFPU_r470.ab3@23931>   MOVEA.l currentfunction,A0
0003301A <AmiBlitz3_noFPU_r470.ab3@23932>   MOVE.l destpointer,d1
0003301E <AmiBlitz3_noFPU_r470.ab3@23933>   SUB.l $e(a0),d1
00033022 <AmiBlitz3_noFPU_r470.ab3@23934>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00033026 <AmiBlitz3_noFPU_r470.ab3@23935>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
0003302C <AmiBlitz3_noFPU_r470.ab3@23936>   MOVE.l D3,locdatast
00033032 <AmiBlitz3_noFPU_r470.ab3@23937>   MOVEA.l tempvm,A1
00033038 <AmiBlitz3_noFPU_r470.ab3@23938>  CLR.b infunctioncode
0003303E <AmiBlitz3_noFPU_r470.ab3@23939>   MOVE.l firstiffstore,d1
00033044 <AmiBlitz3_noFPU_r470.ab3@23940>   CMP.l firstiff,d1
00033048 <AmiBlitz3_noFPU_r470.ab3@23941>   BNE JUMP_noenderr
0003304C <AmiBlitz3_noFPU_r470.ab3@23942>   TST.w $C(A1)                                             ;dim
00033050 <AmiBlitz3_noFPU_r470.ab3@23943>    BPL.w JL_0_DA64
00033056 <AmiBlitz3_noFPU_r470.ab3@23944>  BSET #$7,$8(A0)
0003305A <AmiBlitz3_noFPU_r470.ab3@23945>   MOVE.w #$C005,D1
0003305E <AmiBlitz3_noFPU_r470.ab3@23946>    BSR.w tokejsr2                                          ;writefreememstatement
00033062 <AmiBlitz3_noFPU_r470.ab3@23947> BRA.w JL_0_DA6C
00033068 <AmiBlitz3_noFPU_r470.ab3@23950> JMP noenderr
00033070 <AmiBlitz3_noFPU_r470.ab3@23953>   MOVE.w memlibstat,$C(A1)
00033076 <AmiBlitz3_noFPU_r470.ab3@23956>   MOVEA.l currentfunction,A0
0003307A <AmiBlitz3_noFPU_r470.ab3@23957>   MOVE.l $E(A0),-(A7)
00033082 <AmiBlitz3_noFPU_r470.ab3@23958>   MOVE.w locvaroff,$6(A0)
00033088 <AmiBlitz3_noFPU_r470.ab3@23959>   BCLR #$1,$7(A0)
0003308E <AmiBlitz3_noFPU_r470.ab3@23960>   BCLR #$0,$7(A0)
00033094 <AmiBlitz3_noFPU_r470.ab3@23961>   CMPI.b #$7,$5(A0)
00033098 <AmiBlitz3_noFPU_r470.ab3@23962>    BNE.w JL_0_DA9E
0003309E <AmiBlitz3_noFPU_r470.ab3@23963>   MOVE.w getstlen,D1
000330A2 <AmiBlitz3_noFPU_r470.ab3@23964>    BSR.w writeword
000330A6 <AmiBlitz3_noFPU_r470.ab3@23967>   TST.w $6(A0)
000330AA <AmiBlitz3_noFPU_r470.ab3@23968>    BEQ.w JL_0_DAB8
000330AE <AmiBlitz3_noFPU_r470.ab3@23969>   MOVE.w #$FC7B,D1
000330B4 <AmiBlitz3_noFPU_r470.ab3@23970>    JSR uselib
000330BA <AmiBlitz3_noFPU_r470.ab3@23971>   MOVE.w unlinka4,D1
000330BE <AmiBlitz3_noFPU_r470.ab3@23972>    BSR.w writeword
000330C4 <AmiBlitz3_noFPU_r470.ab3@23975>   MOVEA.l currentfunction,A0
000330C6 <AmiBlitz3_noFPU_r470.ab3@23976>   MOVEQ.l #$00,D1
000330CA <AmiBlitz3_noFPU_r470.ab3@23977>   MOVE.b $4(A0),D1
000330CC <AmiBlitz3_noFPU_r470.ab3@23978>   LSR.w #4,D1
000330D0 <AmiBlitz3_noFPU_r470.ab3@23979>    BEQ.w JL_0_DB24
000330D2 <AmiBlitz3_noFPU_r470.ab3@23981>      LSL.w #1,d1
000330D6 <AmiBlitz3_noFPU_r470.ab3@23983>   CMP.w #$1,D1
000330DA <AmiBlitz3_noFPU_r470.ab3@23984>    BNE.w JL_0_DAE0
000330E0 <AmiBlitz3_noFPU_r470.ab3@23985>   MOVE.w fix1,D1
000330E6 <AmiBlitz3_noFPU_r470.ab3@23986>    JSR writeword
000330EA <AmiBlitz3_noFPU_r470.ab3@23987> BRA.w JL_0_DB24
000330EC <AmiBlitz3_noFPU_r470.ab3@23990>   LSL.w #2,D1
000330EE <AmiBlitz3_noFPU_r470.ab3@23991>   MOVE.w D1,-(A7)
000330F4 <AmiBlitz3_noFPU_r470.ab3@23992>   MOVE.w D1,moverts+2
000330FA <AmiBlitz3_noFPU_r470.ab3@23993>   MOVE.l moverts,D1
00033100 <AmiBlitz3_noFPU_r470.ab3@23994>    JSR writelong
00033102 <AmiBlitz3_noFPU_r470.ab3@23995>   MOVE.w (A7)+,D1
00033106 <AmiBlitz3_noFPU_r470.ab3@23996>   CMP.w #$8,D1
0003310A <AmiBlitz3_noFPU_r470.ab3@23997>    BHI.w JL_0_DB14
0003310E <AmiBlitz3_noFPU_r470.ab3@23998>   ANDI.w #$7,D1
00033110 <AmiBlitz3_noFPU_r470.ab3@23999>   LSL.w #8,D1
00033112 <AmiBlitz3_noFPU_r470.ab3@24000>   LSL.w #1,D1
00033118 <AmiBlitz3_noFPU_r470.ab3@24001>   OR.w fixq,D1
0003311E <AmiBlitz3_noFPU_r470.ab3@24002>    JSR writeword
00033122 <AmiBlitz3_noFPU_r470.ab3@24003> BRA.w JL_0_DB24
00033128 <AmiBlitz3_noFPU_r470.ab3@24007>    MOVE.w D1,fixstack+2
0003312E <AmiBlitz3_noFPU_r470.ab3@24008>   MOVE.l fixstack,D1
00033134 <AmiBlitz3_noFPU_r470.ab3@24009>    JSR writelong
00033138 <AmiBlitz3_noFPU_r470.ab3@24012>    BSR.w JL_0_D2CA
0003313C <AmiBlitz3_noFPU_r470.ab3@24013>    BSR.w JL_0_D4F8
0003313E <AmiBlitz3_noFPU_r470.ab3@24014>   MOVEA.l (A7)+,A0
00033144 <AmiBlitz3_noFPU_r470.ab3@24015>   MOVE.w dontwrite,D1
00033148 <AmiBlitz3_noFPU_r470.ab3@24016>    BNE.w JL_0_DB3E
0003314E <AmiBlitz3_noFPU_r470.ab3@24017>   MOVE.l destpointer,-(A0)
00033154 <AmiBlitz3_noFPU_r470.ab3@24020>   CLR.w proceduremode
0003315A <AmiBlitz3_noFPU_r470.ab3@24021>   CLR.l currentfunction
00033160 <AmiBlitz3_noFPU_r470.ab3@24022>   CLR.w procnum
00033164 <AmiBlitz3_noFPU_r470.ab3@24023>    BSR.w JL_0_DB5C
0003316A <AmiBlitz3_noFPU_r470.ab3@24024>    JSR freepends
00033170 <AmiBlitz3_noFPU_r470.ab3@24025> JMP get1bytemain
00033172 <AmiBlitz3_noFPU_r470.ab3@24028>   MOVEQ.l #$0C,D0
00033174 <AmiBlitz3_noFPU_r470.ab3@24029>   MOVEQ.l #$01,D1
0003317A <AmiBlitz3_noFPU_r470.ab3@24030>   MOVEA.l _execbase,A6
00033180 <AmiBlitz3_noFPU_r470.ab3@24032>   MOVE.l mempool,a0
00033184 <AmiBlitz3_noFPU_r470.ab3@24033>   JSR _AllocPooled(a6)
00033186 <AmiBlitz3_noFPU_r470.ab3@24034>   MOVEA.l D0,A0
0003318C <AmiBlitz3_noFPU_r470.ab3@24035>   MOVE.l alllocals,(A0)
00033192 <AmiBlitz3_noFPU_r470.ab3@24036>   MOVE.l A0,alllocals
00033198 <AmiBlitz3_noFPU_r470.ab3@24037>   MOVE.l firstlocal,D0
0003319E <AmiBlitz3_noFPU_r470.ab3@24038>   CLR.l firstlocal
000331A2 <AmiBlitz3_noFPU_r470.ab3@24039>   MOVE.l D0,$4(A0)
000331A8 <AmiBlitz3_noFPU_r470.ab3@24040>   MOVE.l firstglob,D1
000331AE <AmiBlitz3_noFPU_r470.ab3@24041>   CLR.l firstglob
000331B2 <AmiBlitz3_noFPU_r470.ab3@24042>   MOVE.l D1,$8(A0)
000331B8 <AmiBlitz3_noFPU_r470.ab3@24043>   TST.b debugmode
000331BC <AmiBlitz3_noFPU_r470.ab3@24044>    BEQ.b JL_0_DBB0
000331C2 <AmiBlitz3_noFPU_r470.ab3@24045>   TST.w dontwrite
000331C6 <AmiBlitz3_noFPU_r470.ab3@24046>    BNE.b JL_0_DBB0
000331CA <AmiBlitz3_noFPU_r470.ab3@24047>   MOVEA.l proclocals(PC),A0
000331CC <AmiBlitz3_noFPU_r470.ab3@24048>   MOVE.l D0,(A0)+
000331CE <AmiBlitz3_noFPU_r470.ab3@24049>   MOVE.l D1,(A0)
000331D0 <AmiBlitz3_noFPU_r470.ab3@24052> RTS
000331D6 <AmiBlitz3_noFPU_r470.ab3@24055> JMP baddirerr
000331DC <AmiBlitz3_noFPU_r470.ab3@24059>   TST.w dirmode
000331E0 <AmiBlitz3_noFPU_r470.ab3@24060>    BNE.w JUMP_baddirerr
000331E6 <AmiBlitz3_noFPU_r470.ab3@24061>   MOVE.l firstfor,D1
000331EA <AmiBlitz3_noFPU_r470.ab3@24062>    BEQ.w JUMP_noforerr
000331F0 <AmiBlitz3_noFPU_r470.ab3@24063>   JSR reget
000331F4 <AmiBlitz3_noFPU_r470.ab3@24064>    BEQ.w JL_0_DC18
000331F8 <AmiBlitz3_noFPU_r470.ab3@24067>   BSR.w getparameter
000331FC <AmiBlitz3_noFPU_r470.ab3@24068>   MOVEA.l firstfor(PC),A2
000331FE <AmiBlitz3_noFPU_r470.ab3@24069>   MOVEQ.l #$00,D1
00033202 <AmiBlitz3_noFPU_r470.ab3@24070>   MOVE.b $10(A2),D1
00033206 <AmiBlitz3_noFPU_r470.ab3@24071>   SUBI.w #$12,D1
00033208 <AmiBlitz3_noFPU_r470.ab3@24072>   CMP.w D1,D2
0003320C <AmiBlitz3_noFPU_r470.ab3@24073>    BNE.w JUMP_noforerr
00033210 <AmiBlitz3_noFPU_r470.ab3@24074>   LEA ptr_parameterstore(PC),A0
00033214 <AmiBlitz3_noFPU_r470.ab3@24075>   LEA $11(A2),A1
00033216 <AmiBlitz3_noFPU_r470.ab3@24076>   SUBQ.w #1,D2
00033218 <AmiBlitz3_noFPU_r470.ab3@24079>     CMPM.b (A0)+,(A1)+
0003321C <AmiBlitz3_noFPU_r470.ab3@24080>     BNE.w JUMP_noforerr
00033220 <AmiBlitz3_noFPU_r470.ab3@24081>   DBF D2,JL_0_DBF0
00033224 <AmiBlitz3_noFPU_r470.ab3@24083>    BSR.w JL_0_DC1A
0003322A <AmiBlitz3_noFPU_r470.ab3@24084>    JSR reget
0003322E <AmiBlitz3_noFPU_r470.ab3@24085>    BEQ.w JL_0_DC16
00033232 <AmiBlitz3_noFPU_r470.ab3@24086>   CMP.w #$2C,D0
00033236 <AmiBlitz3_noFPU_r470.ab3@24087>    BNE.w JUMP_syntaxerr
0003323C <AmiBlitz3_noFPU_r470.ab3@24088>    JSR get1bytemain
00033240 <AmiBlitz3_noFPU_r470.ab3@24089> BRA.w JL_0_DBCE
00033246 <AmiBlitz3_noFPU_r470.ab3@24092> JMP noforerr
00033248 <AmiBlitz3_noFPU_r470.ab3@24095> RTS
0003324C <AmiBlitz3_noFPU_r470.ab3@24099>   MOVE.l 8(a7),a2
00033250 <AmiBlitz3_noFPU_r470.ab3@24100>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033254 <AmiBlitz3_noFPU_r470.ab3@24101>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033258 <AmiBlitz3_noFPU_r470.ab3@24102>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
0003325A <AmiBlitz3_noFPU_r470.ab3@24106>   MOVEA.l D1,A2
00033260 <AmiBlitz3_noFPU_r470.ab3@24109>   JSR popnext                                           ;error checking for next.
00033264 <AmiBlitz3_noFPU_r470.ab3@24110>   MOVE.w $C(A2),D0
0003326A <AmiBlitz3_noFPU_r470.ab3@24111>   LEA nextb,A0
00033270 <AmiBlitz3_noFPU_r470.ab3@24112>   LEA nextbf,A1
00033274 <AmiBlitz3_noFPU_r470.ab3@24113>   CMP.w #$1,D0
00033278 <AmiBlitz3_noFPU_r470.ab3@24114>    BEQ.w JL_0_DC74
0003327E <AmiBlitz3_noFPU_r470.ab3@24115>   LEA nextw,A0
00033284 <AmiBlitz3_noFPU_r470.ab3@24116>   LEA nextwf,A1
00033288 <AmiBlitz3_noFPU_r470.ab3@24117>   CMP.w #$2,D0
0003328C <AmiBlitz3_noFPU_r470.ab3@24118>    BEQ.w JL_0_DC74
00033292 <AmiBlitz3_noFPU_r470.ab3@24119>   LEA nextl,A0
00033298 <AmiBlitz3_noFPU_r470.ab3@24120>   LEA nextlf,A1
0003329C <AmiBlitz3_noFPU_r470.ab3@24121>   CMP.w #$5,D0
000332A0 <AmiBlitz3_noFPU_r470.ab3@24122>    BNE.w JL_0_DC74
000332A6 <AmiBlitz3_noFPU_r470.ab3@24123>    TST.b fpu
000332AA <AmiBlitz3_noFPU_r470.ab3@24124>    BEQ 'old
000332B0 <AmiBlitz3_noFPU_r470.ab3@24125>    LEA fpu2dats,a0                                         ;fpu next code
000332B6 <AmiBlitz3_noFPU_r470.ab3@24126>    LEA fpu2date,a1
000332BA <AmiBlitz3_noFPU_r470.ab3@24127> BRA JL_0_DC74
000332BE <AmiBlitz3_noFPU_r470.ab3@24130>   MOVE.w #$C900,D1
000332C2 <AmiBlitz3_noFPU_r470.ab3@24131>    BSR.w Atokejsr
000332C8 <AmiBlitz3_noFPU_r470.ab3@24132>   LEA nextf,A0
000332CE <AmiBlitz3_noFPU_r470.ab3@24133>   LEA nextff,A1
000332D4 <AmiBlitz3_noFPU_r470.ab3@24136>   JSR pokecode
000332DA <AmiBlitz3_noFPU_r470.ab3@24137>     TST.b fast                                             ;fast for next deactivate
000332DE <AmiBlitz3_noFPU_r470.ab3@24138> BRA 'l1
000332E4 <AmiBlitz3_noFPU_r470.ab3@24140>     TST.b onestep
000332E8 <AmiBlitz3_noFPU_r470.ab3@24141>     BEQ 'l1
000332EE <AmiBlitz3_noFPU_r470.ab3@24142>     CLR.b onestep
000332F4 <AmiBlitz3_noFPU_r470.ab3@24143>     SUBQ.l #4,destpointer
000332F8 <AmiBlitz3_noFPU_r470.ab3@24144>     MOVE.w #$5292,d1
000332FE <AmiBlitz3_noFPU_r470.ab3@24145>     JSR writeword
00033302 <AmiBlitz3_noFPU_r470.ab3@24148>   MOVE.l JL_0_DCF4(PC),D1
00033308 <AmiBlitz3_noFPU_r470.ab3@24149>    JSR writelong
0003330E <AmiBlitz3_noFPU_r470.ab3@24150>   MOVEA.l firstfor,A2
00033314 <AmiBlitz3_noFPU_r470.ab3@24151>   MOVE.l (A2),firstfor
00033318 <AmiBlitz3_noFPU_r470.ab3@24152>   MOVEA.l $8(A2),A0
0003331E <AmiBlitz3_noFPU_r470.ab3@24153>   MOVEA.l destpointer,A1
00033320 <AmiBlitz3_noFPU_r470.ab3@24154>   MOVE.l A1,D1
00033322 <AmiBlitz3_noFPU_r470.ab3@24155>   SUB.l A0,D1
00033324 <AmiBlitz3_noFPU_r470.ab3@24156>   ADDQ.l #2,D1
0003332A <AmiBlitz3_noFPU_r470.ab3@24157>   CMP.l #MinWordSgnd,D1
0003332E <AmiBlitz3_noFPU_r470.ab3@24158>    BCC.w JUMP_bigforerr
00033334 <AmiBlitz3_noFPU_r470.ab3@24159>   TST.w dontwrite
00033338 <AmiBlitz3_noFPU_r470.ab3@24160>    BNE.w JL_0_DCB4
0003333C <AmiBlitz3_noFPU_r470.ab3@24161>   MOVE.w D1,-$2(A0)
0003333E <AmiBlitz3_noFPU_r470.ab3@24164>   MOVE.l A1,D1
00033342 <AmiBlitz3_noFPU_r470.ab3@24165>   SUB.l $4(A2),D1
00033344 <AmiBlitz3_noFPU_r470.ab3@24166>   SUBQ.l #6,D1
0003334A <AmiBlitz3_noFPU_r470.ab3@24167>   CMP.l #MinWordSgnd,D1
0003334E <AmiBlitz3_noFPU_r470.ab3@24168>    BCC.w JUMP_bigforerr
00033354 <AmiBlitz3_noFPU_r470.ab3@24169>   TST.w dontwrite
00033358 <AmiBlitz3_noFPU_r470.ab3@24170>    BNE.w JL_0_DCD6
0003335A <AmiBlitz3_noFPU_r470.ab3@24171>   NEG.w D1
0003335E <AmiBlitz3_noFPU_r470.ab3@24172>   MOVE.w D1,-$2(A1)
00033364 <AmiBlitz3_noFPU_r470.ab3@24175>   JSR popnext3
0003336A <AmiBlitz3_noFPU_r470.ab3@24176>   MOVEA.l _execbase,A6
0003336C <AmiBlitz3_noFPU_r470.ab3@24177>   MOVEA.l A2,A1
0003336E <AmiBlitz3_noFPU_r470.ab3@24178>   MOVEQ.l #$00,D0
00033372 <AmiBlitz3_noFPU_r470.ab3@24179>   MOVE.b $10(A1),D0
00033378 <AmiBlitz3_noFPU_r470.ab3@24180>   MOVE.l mempool2,a0
0003337C <AmiBlitz3_noFPU_r470.ab3@24181>   JSR _FreePooled(A6)
00033382 <AmiBlitz3_noFPU_r470.ab3@24182> JMP reget
00033388 <AmiBlitz3_noFPU_r470.ab3@24185> JMP notallowd
0003338E <AmiBlitz3_noFPU_r470.ab3@24188> JMP bigforerr
00033392 <AmiBlitz3_noFPU_r470.ab3@24195>   MOVE.w #$664F,-(A7)
00033396 <AmiBlitz3_noFPU_r470.ab3@24198> BRA.w JL_0_DCF4
0003339C <AmiBlitz3_noFPU_r470.ab3@24201> JMP error_dublicate_for
000333A0 <AmiBlitz3_noFPU_r470.ab3@24204> forlineat:   Ds.l 1
000333A2 <AmiBlitz3_noFPU_r470.ab3@24205> fortemp:     Ds.w 1
000333A8 <AmiBlitz3_noFPU_r470.ab3@24212>   CLR.l fp0addr
000333AE <AmiBlitz3_noFPU_r470.ab3@24213>   TST.w dirmode
000333B2 <AmiBlitz3_noFPU_r470.ab3@24214>    BNE.w JUMP_baddirerr
000333BC <AmiBlitz3_noFPU_r470.ab3@24215>   MOVE.l linenumat,forlineat
000333C2 <AmiBlitz3_noFPU_r470.ab3@24219>   MOVE.l A5,letstart
000333C6 <AmiBlitz3_noFPU_r470.ab3@24220>   BSR.w getparameter
000333CC <AmiBlitz3_noFPU_r470.ab3@24221>   MOVE.w D2,fortemp
000333D2 <AmiBlitz3_noFPU_r470.ab3@24222>   JSR findfor
000333D6 <AmiBlitz3_noFPU_r470.ab3@24223>    BEQ.w JUMP_error_dublicate_for
000333DC <AmiBlitz3_noFPU_r470.ab3@24224>   LEA firstfor,A2
000333E2 <AmiBlitz3_noFPU_r470.ab3@24225>   JSR addhere2
000333E4 <AmiBlitz3_noFPU_r470.ab3@24226>   MOVE.l A2,-(A7)
000333EA <AmiBlitz3_noFPU_r470.ab3@24227>   TST.b debugmode
000333EE <AmiBlitz3_noFPU_r470.ab3@24228>    BEQ.b JL_0_DD4C
000333F4 <AmiBlitz3_noFPU_r470.ab3@24229>   JSR chkstak
000333FA <AmiBlitz3_noFPU_r470.ab3@24230>   MOVE.l AJL_0_DCF0,D1
00033400 <AmiBlitz3_noFPU_r470.ab3@24231>   JSR  writelong
00033404 <AmiBlitz3_noFPU_r470.ab3@24234>   MOVE.w fortemp(PC),D2
0003340C <AmiBlitz3_noFPU_r470.ab3@24235>   MOVE.b #1,formode
00033410 <AmiBlitz3_noFPU_r470.ab3@24236>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00033416 <AmiBlitz3_noFPU_r470.ab3@24237>   CLR.b formode
0003341A <AmiBlitz3_noFPU_r470.ab3@24238>   CMP.w #-$7FE8,D0
0003341E <AmiBlitz3_noFPU_r470.ab3@24239>    BNE.w JUMP_syntaxerr
00033424 <AmiBlitz3_noFPU_r470.ab3@24240>   MOVE.w commode,D1
00033428 <AmiBlitz3_noFPU_r470.ab3@24241>    BNE.w JUMP_syntaxerr
0003342C <AmiBlitz3_noFPU_r470.ab3@24242>   CMP.b #$6,D2
00033430 <AmiBlitz3_noFPU_r470.ab3@24243>    BCC.w JUMP_badforerr
00033434 <AmiBlitz3_noFPU_r470.ab3@24244>   BTST #$F,D2
00033438 <AmiBlitz3_noFPU_r470.ab3@24245>    BNE.w JL_0_DD86
0003343E <AmiBlitz3_noFPU_r470.ab3@24246>   MOVE.w leaamp,D1
00033444 <AmiBlitz3_noFPU_r470.ab3@24247>   JSR pokewda5s
00033446 <AmiBlitz3_noFPU_r470.ab3@24248>   MOVE.w D3,D1
0003344C <AmiBlitz3_noFPU_r470.ab3@24249>   JSR  writeword
00033452 <AmiBlitz3_noFPU_r470.ab3@24252>   MOVE.w pushindex,D1
00033458 <AmiBlitz3_noFPU_r470.ab3@24253>   JSR  writeword
0003345C <AmiBlitz3_noFPU_r470.ab3@24254>   ANDI.w #$FF,D2
0003345E <AmiBlitz3_noFPU_r470.ab3@24256>   MOVEA.l (A7),A1
00033462 <AmiBlitz3_noFPU_r470.ab3@24257>   MOVE.w D2,$C(A1)
00033464 <AmiBlitz3_noFPU_r470.ab3@24258>   MOVE.w D2,-(A7)
00033468 <AmiBlitz3_noFPU_r470.ab3@24259>    BSR.w eval
0003346E <AmiBlitz3_noFPU_r470.ab3@24260>    CLR.b onestep
00033472 <AmiBlitz3_noFPU_r470.ab3@24261>    CMP.w #$8019,d0
00033476 <AmiBlitz3_noFPU_r470.ab3@24262>    BEQ 'l1
0003347E <AmiBlitz3_noFPU_r470.ab3@24263>    MOVE.b #1,onestep
00033480 <AmiBlitz3_noFPU_r470.ab3@24266>   MOVE.w (A7),D2
00033486 <AmiBlitz3_noFPU_r470.ab3@24267>   MOVE.w pushd0l,D1
0003348A <AmiBlitz3_noFPU_r470.ab3@24268>   CMP.w #$3,D2
0003348E <AmiBlitz3_noFPU_r470.ab3@24269>    BCC.w JL_0_DDB6
00033494 <AmiBlitz3_noFPU_r470.ab3@24270>   MOVE.w pushd0wd,D1
00033496 <AmiBlitz3_noFPU_r470.ab3@24273>    MOVE.w D1,-(A7)
0003349C <AmiBlitz3_noFPU_r470.ab3@24274>    TST.b fpu
000334A0 <AmiBlitz3_noFPU_r470.ab3@24275>    BEQ 'old
000334A4 <AmiBlitz3_noFPU_r470.ab3@24276>    CMP.b #5,d2
000334A8 <AmiBlitz3_noFPU_r470.ab3@24277>    BNE 'old
000334AE <AmiBlitz3_noFPU_r470.ab3@24278>    MOVE.l #$f2276400,d1
000334B4 <AmiBlitz3_noFPU_r470.ab3@24280>    JSR writelong
000334B8 <AmiBlitz3_noFPU_r470.ab3@24281> BRA 'weit
000334BE <AmiBlitz3_noFPU_r470.ab3@24284>    JSR  writeword                                          ;fpu for end value
000334C2 <AmiBlitz3_noFPU_r470.ab3@24287>   CMP.w #-$7FE7,D0
000334C6 <AmiBlitz3_noFPU_r470.ab3@24288>    BNE.w JL_0_DDCC
000334CA <AmiBlitz3_noFPU_r470.ab3@24289>    BSR.w eval
000334D0 <AmiBlitz3_noFPU_r470.ab3@24290>    TST.b fpu
000334D4 <AmiBlitz3_noFPU_r470.ab3@24291>    BEQ JL_0_DE0C
000334D8 <AmiBlitz3_noFPU_r470.ab3@24292>    CMP.b #5,d2
000334DC <AmiBlitz3_noFPU_r470.ab3@24293>    BNE JL_0_DE0C
000334E2 <AmiBlitz3_noFPU_r470.ab3@24294>    MOVE.l #$f2276400,d1                                    ;write step <> 1
000334E8 <AmiBlitz3_noFPU_r470.ab3@24296>   JSR writelong
000334EA <AmiBlitz3_noFPU_r470.ab3@24299>    MOVE.w (a7)+,d1
000334EE <AmiBlitz3_noFPU_r470.ab3@24300> BRA fpur
000334F2 <AmiBlitz3_noFPU_r470.ab3@24303>   CMP.w #$4,D2
000334F6 <AmiBlitz3_noFPU_r470.ab3@24304>    BCC.w JL_0_DDE0
000334FA <AmiBlitz3_noFPU_r470.ab3@24305>   MOVE.w #$7001,D1
00033500 <AmiBlitz3_noFPU_r470.ab3@24306>   JSR writeword
00033504 <AmiBlitz3_noFPU_r470.ab3@24307> BRA.w JL_0_DE0C
0003350A <AmiBlitz3_noFPU_r470.ab3@24310> JMP badforerr
0003350E <AmiBlitz3_noFPU_r470.ab3@24313>   BNE.w JL_0_DDFA
00033512 <AmiBlitz3_noFPU_r470.ab3@24314>   MOVE.w #$7001,D1
00033518 <AmiBlitz3_noFPU_r470.ab3@24315>   JSR writeword
0003351E <AmiBlitz3_noFPU_r470.ab3@24316>   MOVE.w swapd0,D1
00033524 <AmiBlitz3_noFPU_r470.ab3@24317>   JSR writeword
00033528 <AmiBlitz3_noFPU_r470.ab3@24318> BRA.w JL_0_DE0C
0003352E <AmiBlitz3_noFPU_r470.ab3@24321>   TST.b fpu
00033532 <AmiBlitz3_noFPU_r470.ab3@24322>    BEQ 'old
00033536 <AmiBlitz3_noFPU_r470.ab3@24323>   CMP.b #5,d2
0003353A <AmiBlitz3_noFPU_r470.ab3@24324>    BNE 'old
00033540 <AmiBlitz3_noFPU_r470.ab3@24325>   MOVE.l #$f23c5000,d1
00033546 <AmiBlitz3_noFPU_r470.ab3@24326>   JSR writelong
0003354A <AmiBlitz3_noFPU_r470.ab3@24327>   MOVE.w #$1,d1
00033550 <AmiBlitz3_noFPU_r470.ab3@24328>   JSR writeword
00033556 <AmiBlitz3_noFPU_r470.ab3@24329>   MOVE.l #$f2276400,d1
0003355C <AmiBlitz3_noFPU_r470.ab3@24330>   JSR writelong
0003355E <AmiBlitz3_noFPU_r470.ab3@24331>   MOVE.w (a7)+,d1
00033562 <AmiBlitz3_noFPU_r470.ab3@24332> BRA fpur
00033566 <AmiBlitz3_noFPU_r470.ab3@24335>   MOVE.w #$203C,D1                                         ;write step 1
0003356C <AmiBlitz3_noFPU_r470.ab3@24336>   JSR writeword
00033572 <AmiBlitz3_noFPU_r470.ab3@24337>   MOVE.l #$80000041,D1                                     ;ffp '1'
00033578 <AmiBlitz3_noFPU_r470.ab3@24338>   JSR writelong
0003357A <AmiBlitz3_noFPU_r470.ab3@24341>   MOVE.w (A7)+,D1
00033580 <AmiBlitz3_noFPU_r470.ab3@24342>   JSR writeword                                            ;push step on stack
00033582 <AmiBlitz3_noFPU_r470.ab3@24345>   MOVE.w (A7)+,D2
00033584 <AmiBlitz3_noFPU_r470.ab3@24346>   MOVEA.l (A7),A1
0003358C <AmiBlitz3_noFPU_r470.ab3@24347>   MOVE.l destpointer,$4(A1)
00033592 <AmiBlitz3_noFPU_r470.ab3@24348>   LEA forcompb,A0
00033598 <AmiBlitz3_noFPU_r470.ab3@24349>   LEA forcompbf,A1
0003359C <AmiBlitz3_noFPU_r470.ab3@24350>   CMP.w #$1,D2
000335A0 <AmiBlitz3_noFPU_r470.ab3@24351>    BEQ.w JL_0_DE7E
000335A6 <AmiBlitz3_noFPU_r470.ab3@24352>   LEA forcompw,A0
000335AC <AmiBlitz3_noFPU_r470.ab3@24353>   LEA forcompwf,A1
000335B0 <AmiBlitz3_noFPU_r470.ab3@24354>   CMP.w #$2,D2
000335B4 <AmiBlitz3_noFPU_r470.ab3@24355>    BEQ.w JL_0_DE7E
000335BA <AmiBlitz3_noFPU_r470.ab3@24356>   LEA forcompl,A0
000335C0 <AmiBlitz3_noFPU_r470.ab3@24357>   LEA forcomplf,A1
000335C4 <AmiBlitz3_noFPU_r470.ab3@24358>   CMP.w #$5,D2
000335C8 <AmiBlitz3_noFPU_r470.ab3@24359>    BNE.w JL_0_DE7E
000335CE <AmiBlitz3_noFPU_r470.ab3@24360>   TST.b fpu
000335D2 <AmiBlitz3_noFPU_r470.ab3@24361>    BEQ 'old
000335D8 <AmiBlitz3_noFPU_r470.ab3@24362>   LEA fpu_start,a0
000335DE <AmiBlitz3_noFPU_r470.ab3@24363>   LEA fpu_end,a1
000335E4 <AmiBlitz3_noFPU_r470.ab3@24364>   JSR pokecode
000335E8 <AmiBlitz3_noFPU_r470.ab3@24365> BRA fpu3
000335EE <AmiBlitz3_noFPU_r470.ab3@24368>   LEA forcompf,A0                                         ;
000335F4 <AmiBlitz3_noFPU_r470.ab3@24369>   LEA forcompff,A1
000335FA <AmiBlitz3_noFPU_r470.ab3@24370>   JSR pokecode
000335FE <AmiBlitz3_noFPU_r470.ab3@24371>   MOVE.w #$C900,D1
00033602 <AmiBlitz3_noFPU_r470.ab3@24372>   BSR.w Atokejsr
00033608 <AmiBlitz3_noFPU_r470.ab3@24373>   LEA forcompf2,A0
0003360E <AmiBlitz3_noFPU_r470.ab3@24374>   LEA forcompf2f,A1
00033614 <AmiBlitz3_noFPU_r470.ab3@24377>   JSR pokecode
0003361A <AmiBlitz3_noFPU_r470.ab3@24378>   TST.b fast                                               ;fast for next
0003361E <AmiBlitz3_noFPU_r470.ab3@24379>    BEQ 's1
00033622 <AmiBlitz3_noFPU_r470.ab3@24380>   CMP.w #3,d2
00033626 <AmiBlitz3_noFPU_r470.ab3@24381>    BNE 's1
0003362C <AmiBlitz3_noFPU_r470.ab3@24382>   TST.b onestep
00033630 <AmiBlitz3_noFPU_r470.ab3@24383>    BEQ 's1
0003363A <AmiBlitz3_noFPU_r470.ab3@24384>   SUB.l #10,destpointer
0003363E <AmiBlitz3_noFPU_r470.ab3@24385>   MOVE.w #$b081,d1
00033644 <AmiBlitz3_noFPU_r470.ab3@24386>   JSR writeword
00033648 <AmiBlitz3_noFPU_r470.ab3@24390>   MOVE.l thebgt(PC),D1
0003364E <AmiBlitz3_noFPU_r470.ab3@24391>   JSR writelong
00033650 <AmiBlitz3_noFPU_r470.ab3@24394>   MOVEA.l (A7)+,A1
00033658 <AmiBlitz3_noFPU_r470.ab3@24395>   MOVE.l destpointer,$8(A1)
0003365E <AmiBlitz3_noFPU_r470.ab3@24396> JMP reget
00033662 <AmiBlitz3_noFPU_r470.ab3@24399>   MOVEA.l 8(a7),a2
00033666 <AmiBlitz3_noFPU_r470.ab3@24400>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
0003366C <AmiBlitz3_noFPU_r470.ab3@24401>   fmove.s 4(a7),fp1
00033670 <AmiBlitz3_noFPU_r470.ab3@24402>   BTST.b #7,(a7)
00033674 <AmiBlitz3_noFPU_r470.ab3@24403>   BNE 'negi
00033678 <AmiBlitz3_noFPU_r470.ab3@24404>   fcmp.x fp1,fp0
0003367C <AmiBlitz3_noFPU_r470.ab3@24405> BRA 'negi2
00033680 <AmiBlitz3_noFPU_r470.ab3@24408>   fcmp.x fp0,fp1
00033684 <AmiBlitz3_noFPU_r470.ab3@24411>   Dc.l $f2920000                                           ;fbgt.w
00033688 <AmiBlitz3_noFPU_r470.ab3@24415>   BGT.w thebgt
0003368E <AmiBlitz3_noFPU_r470.ab3@24418>   MOVE.l A5,letstart
00033692 <AmiBlitz3_noFPU_r470.ab3@24419>   BSR.w getparameter
0003369C <AmiBlitz3_noFPU_r470.ab3@24425>   MOVE.l destpointer,pushpc
000336A6 <AmiBlitz3_noFPU_r470.ab3@24426>   MOVE.l hunkoffsetbase,pushoff
000336AC <AmiBlitz3_noFPU_r470.ab3@24427>   CLR.l rightsidetype
000336B4 <AmiBlitz3_noFPU_r470.ab3@24428>   MOVE.w #$0001,regnum
000336BA <AmiBlitz3_noFPU_r470.ab3@24429>   JSR JL_0_8E3C
000336C0 <AmiBlitz3_noFPU_r470.ab3@24430>   JSR calcvar
000336C6 <AmiBlitz3_noFPU_r470.ab3@24431>   TST.b formode
000336CA <AmiBlitz3_noFPU_r470.ab3@24432>   BEQ 'lf1
000336D0 <AmiBlitz3_noFPU_r470.ab3@24433>   CMP.l #newtype_double,A2
000336D4 <AmiBlitz3_noFPU_r470.ab3@24434>   BEQ JUMP_notallowd
000336DA <AmiBlitz3_noFPU_r470.ab3@24435>   MOVE.l a2,currtype
000336E0 <AmiBlitz3_noFPU_r470.ab3@24438>   CLR.w startoffsetmore
000336E4 <AmiBlitz3_noFPU_r470.ab3@24439>   CMP.w #$3d,d0
000336E8 <AmiBlitz3_noFPU_r470.ab3@24440>   BNE 'l1a
000336EC <AmiBlitz3_noFPU_r470.ab3@24441>   BTST #15,d2
000336F0 <AmiBlitz3_noFPU_r470.ab3@24442>   BEQ 'l1a
000336F4 <AmiBlitz3_noFPU_r470.ab3@24443>   CMP.b #1,d2
000336F8 <AmiBlitz3_noFPU_r470.ab3@24444>   BNE 'l1a
00033702 <AmiBlitz3_noFPU_r470.ab3@24445>   MOVE.w leaa0a0+2,startoffsetmore
00033708 <AmiBlitz3_noFPU_r470.ab3@24448>   CLR.w regnum
0003370C <AmiBlitz3_noFPU_r470.ab3@24449>   BSR.w JL_0_B5D2
00033712 <AmiBlitz3_noFPU_r470.ab3@24450>   CLR.w commode
00033718 <AmiBlitz3_noFPU_r470.ab3@24451>   CLR.w stackcorrect
0003371E <AmiBlitz3_noFPU_r470.ab3@24452>   CLR.w pcodd
00033724 <AmiBlitz3_noFPU_r470.ab3@24453>   MOVE.w startoffsetmore,d1
00033728 <AmiBlitz3_noFPU_r470.ab3@24454>   BTST #0,d1
0003372C <AmiBlitz3_noFPU_r470.ab3@24455>   BEQ 'l2a
00033734 <AmiBlitz3_noFPU_r470.ab3@24456>   MOVE.w #1,pcodd
00033738 <AmiBlitz3_noFPU_r470.ab3@24459>   CMP.w #$3D,D0                                            ;=
0003373C <AmiBlitz3_noFPU_r470.ab3@24460>   BEQ.w JL_0_DEE0
0003373E <AmiBlitz3_noFPU_r470.ab3@24463>   MOVE.b (a5)+,d1
00033742 <AmiBlitz3_noFPU_r470.ab3@24464>   BEQ 'l10
00033746 <AmiBlitz3_noFPU_r470.ab3@24465>   CMP.b #":",d1
0003374A <AmiBlitz3_noFPU_r470.ab3@24466>   BEQ 'l10
0003374E <AmiBlitz3_noFPU_r470.ab3@24467>   CMP.b #";",d1
00033752 <AmiBlitz3_noFPU_r470.ab3@24468>   BEQ 'l10
00033756 <AmiBlitz3_noFPU_r470.ab3@24469>   CMP.b #"0",d1
0003375A <AmiBlitz3_noFPU_r470.ab3@24470>   BLT 'l11
0003375E <AmiBlitz3_noFPU_r470.ab3@24471>   CMP.b #"9",d1
00033762 <AmiBlitz3_noFPU_r470.ab3@24472>   BGT 'l11
00033766 <AmiBlitz3_noFPU_r470.ab3@24473> BRA.s 'l1
0003376E <AmiBlitz3_noFPU_r470.ab3@24476>   MOVE.b #1,quickadd
00033774 <AmiBlitz3_noFPU_r470.ab3@24479>   MOVEA.l letstart,A5
00033776 <AmiBlitz3_noFPU_r470.ab3@24480>   SUBQ.w #1,A5
0003377A <AmiBlitz3_noFPU_r470.ab3@24483>   CMP.b #$7,D2
0003377E <AmiBlitz3_noFPU_r470.ab3@24484>    BNE.w JL_0_DF8A
00033782 <AmiBlitz3_noFPU_r470.ab3@24490>   MOVEM.w D2-D3,-(A7)
00033788 <AmiBlitz3_noFPU_r470.ab3@24491>   MOVE.l lastoffset_org,-(A7)
0003378E <AmiBlitz3_noFPU_r470.ab3@24492>   MOVE.w varmode,-(A7)
00033798 <AmiBlitz3_noFPU_r470.ab3@24494>    MOVE.l #forthstack,forthsp
000337A2 <AmiBlitz3_noFPU_r470.ab3@24495>    MOVE.l #precstack,precsp
000337A8 <AmiBlitz3_noFPU_r470.ab3@24496>    CLR.w regnum
000337AE <AmiBlitz3_noFPU_r470.ab3@24497>    CLR.w nonew
000337B4 <AmiBlitz3_noFPU_r470.ab3@24498>    CLR.w sbasegot
000337BE <AmiBlitz3_noFPU_r470.ab3@24499>    MOVE.w varcodelen,oldvcodelen
000337C4 <AmiBlitz3_noFPU_r470.ab3@24500>    CLR.w varcodelen
000337CC <AmiBlitz3_noFPU_r470.ab3@24501>    MOVE.w #$FFFF,lasta6
000337CE <AmiBlitz3_noFPU_r470.ab3@24504>   MOVEQ.l #$07,D2
000337D2 <AmiBlitz3_noFPU_r470.ab3@24505>    BSR.w eval
000337D8 <AmiBlitz3_noFPU_r470.ab3@24506>   MOVE.w (A7)+,varmode
000337DE <AmiBlitz3_noFPU_r470.ab3@24507>   MOVE.l (A7)+,lastoffset_org
000337E4 <AmiBlitz3_noFPU_r470.ab3@24508>   MOVE.w moved0a3,D1
000337EA <AmiBlitz3_noFPU_r470.ab3@24509>    JSR writeword
000337F0 <AmiBlitz3_noFPU_r470.ab3@24510>   MOVE.w commode,D1
000337F4 <AmiBlitz3_noFPU_r470.ab3@24511>    BEQ.w JL_0_DF38
000337FA <AmiBlitz3_noFPU_r470.ab3@24512>   LEA pulla2st,A0
00033800 <AmiBlitz3_noFPU_r470.ab3@24513>   LEA pulla2stf,A1
00033806 <AmiBlitz3_noFPU_r470.ab3@24514>    JSR pokecode
0003380A <AmiBlitz3_noFPU_r470.ab3@24515> BRA.w JL_0_DF3C
0003380E <AmiBlitz3_noFPU_r470.ab3@24518>   BSR.w JL_0_B63C
00033812 <AmiBlitz3_noFPU_r470.ab3@24521>   MOVEM.w (A7)+,D2-D3
00033816 <AmiBlitz3_noFPU_r470.ab3@24522>   BTST #$F,D2
0003381A <AmiBlitz3_noFPU_r470.ab3@24523>   BNE.w JL_0_DF58
00033820 <AmiBlitz3_noFPU_r470.ab3@24524>     MOVE.w D3,leaa5d3a2+2
00033826 <AmiBlitz3_noFPU_r470.ab3@24525>     MOVE.l leaa5d3a2,D1
0003382C <AmiBlitz3_noFPU_r470.ab3@24526>     JSR pokela5s
00033830 <AmiBlitz3_noFPU_r470.ab3@24529>   MOVE.w #$FE6F,D1
00033836 <AmiBlitz3_noFPU_r470.ab3@24530>   JSR uselib
0003383C <AmiBlitz3_noFPU_r470.ab3@24531>   MOVE.l #$C700,D1
00033842 <AmiBlitz3_noFPU_r470.ab3@24532>   MOVE.l d1,lastinstruction
00033848 <AmiBlitz3_noFPU_r470.ab3@24533>   MOVE.w varmode,D2
0003384C <AmiBlitz3_noFPU_r470.ab3@24534>   BNE.w JL_0_DF70
0003384E <AmiBlitz3_noFPU_r470.ab3@24535>     ADDQ.w #1,D1
00033852 <AmiBlitz3_noFPU_r470.ab3@24538>   BSR.w Atokejsr
00033856 <AmiBlitz3_noFPU_r470.ab3@24539>   CMP.w #$2C,D0
0003385A <AmiBlitz3_noFPU_r470.ab3@24540>   BNE.w JL_0_E0C6
00033860 <AmiBlitz3_noFPU_r470.ab3@24542>   MOVE.w addq4a2,D1
00033866 <AmiBlitz3_noFPU_r470.ab3@24543>   JSR writeword
0003386A <AmiBlitz3_noFPU_r470.ab3@24544> BRA.w JL_0_E018
00033870 <AmiBlitz3_noFPU_r470.ab3@24547> JMP error4char
00033876 <AmiBlitz3_noFPU_r470.ab3@24550> JMP error_convert_types
0003387A <AmiBlitz3_noFPU_r470.ab3@24554>    BTST #$E,D2
0003387E <AmiBlitz3_noFPU_r470.ab3@24555>    BNE.w JL_0_DF9C
00033880 <AmiBlitz3_noFPU_r470.ab3@24556>   TST.b D2
00033884 <AmiBlitz3_noFPU_r470.ab3@24557>    BEQ.w JUMP_noleterr
0003388A <AmiBlitz3_noFPU_r470.ab3@24558>    TST.b newsyntax
0003388E <AmiBlitz3_noFPU_r470.ab3@24559>    BEQ JL_0_DFA0
00033892 <AmiBlitz3_noFPU_r470.ab3@24562>    CMP.w #$4022,(a5)
00033896 <AmiBlitz3_noFPU_r470.ab3@24563>    BNE JL_0_DFA0
0003389C <AmiBlitz3_noFPU_r470.ab3@24564>    CMP.l #3,d2
000338A0 <AmiBlitz3_noFPU_r470.ab3@24565>    BNE  JUMP_error_convert_types
000338A2 <AmiBlitz3_noFPU_r470.ab3@24566>    ADDQ #2,a5
000338A4 <AmiBlitz3_noFPU_r470.ab3@24567>    MOVEQ #0,d0
000338A6 <AmiBlitz3_noFPU_r470.ab3@24568>    MOVE.b (a5)+,d0
000338AA <AmiBlitz3_noFPU_r470.ab3@24569>    BEQ JL_0_DFA0
000338AE <AmiBlitz3_noFPU_r470.ab3@24570>    CMP.b #$22,d0
000338B2 <AmiBlitz3_noFPU_r470.ab3@24571>    BNE 'l1
000338B6 <AmiBlitz3_noFPU_r470.ab3@24572>    MOVE.b #0,d0
000338BA <AmiBlitz3_noFPU_r470.ab3@24573> BRA 'do
000338BC <AmiBlitz3_noFPU_r470.ab3@24576>   ASL.l #8,d0
000338BE <AmiBlitz3_noFPU_r470.ab3@24577>    MOVE.b (a5)+,d0
000338C2 <AmiBlitz3_noFPU_r470.ab3@24578>    BEQ JL_0_DFA0
000338C6 <AmiBlitz3_noFPU_r470.ab3@24579>    CMP.b #$22,d0
000338CA <AmiBlitz3_noFPU_r470.ab3@24580>    BNE 'l2
000338CE <AmiBlitz3_noFPU_r470.ab3@24581>    MOVE.b #0,d0
000338D0 <AmiBlitz3_noFPU_r470.ab3@24582>    ASR.l #8,d0
000338D4 <AmiBlitz3_noFPU_r470.ab3@24583> BRA 'do
000338D6 <AmiBlitz3_noFPU_r470.ab3@24586>   ASL.l #8,d0
000338D8 <AmiBlitz3_noFPU_r470.ab3@24587>     MOVE.b (a5)+,d0
000338DC <AmiBlitz3_noFPU_r470.ab3@24588>    BEQ JL_0_DFA0
000338E0 <AmiBlitz3_noFPU_r470.ab3@24589>    CMP.b #$22,d0
000338E4 <AmiBlitz3_noFPU_r470.ab3@24590>    BNE 'l3
000338E8 <AmiBlitz3_noFPU_r470.ab3@24591>    MOVE.b #0,d0
000338EA <AmiBlitz3_noFPU_r470.ab3@24592>    ASR.l #8,d0
000338EE <AmiBlitz3_noFPU_r470.ab3@24593> BRA 'do
000338F0 <AmiBlitz3_noFPU_r470.ab3@24596>   ASL.l #8,d0
000338F2 <AmiBlitz3_noFPU_r470.ab3@24597>     MOVE.b (a5)+,d0
000338F6 <AmiBlitz3_noFPU_r470.ab3@24598>    BEQ JL_0_DFA0
000338FA <AmiBlitz3_noFPU_r470.ab3@24599>    CMP.b #$22,d0
000338FE <AmiBlitz3_noFPU_r470.ab3@24600>    BNE 'l4
00033902 <AmiBlitz3_noFPU_r470.ab3@24601>    MOVE.b #0,d0
00033904 <AmiBlitz3_noFPU_r470.ab3@24602>    ASR.l #8,d0
00033908 <AmiBlitz3_noFPU_r470.ab3@24603> BRA 'do
0003390C <AmiBlitz3_noFPU_r470.ab3@24606>    CMP.b #$22,(a5)+
00033910 <AmiBlitz3_noFPU_r470.ab3@24607>    BNE JUMP_error4char
00033914 <AmiBlitz3_noFPU_r470.ab3@24610>   MOVE.w #$2b7c,d1
0003391A <AmiBlitz3_noFPU_r470.ab3@24611>    TST.w varmode
0003391E <AmiBlitz3_noFPU_r470.ab3@24612>    BEQ 'g3
00033922 <AmiBlitz3_noFPU_r470.ab3@24613>    BCLR #9,d1
00033928 <AmiBlitz3_noFPU_r470.ab3@24616>     JSR writeword
0003392A <AmiBlitz3_noFPU_r470.ab3@24617>     MOVE.l d0,d1
00033930 <AmiBlitz3_noFPU_r470.ab3@24618>     JSR writelong
00033932 <AmiBlitz3_noFPU_r470.ab3@24619>     MOVE.w d3,d1
00033938 <AmiBlitz3_noFPU_r470.ab3@24620>     JSR writeword
0003393E <AmiBlitz3_noFPU_r470.ab3@24621>     JSR get1bytemain
00033940 <AmiBlitz3_noFPU_r470.ab3@24622> RTS
00033946 <AmiBlitz3_noFPU_r470.ab3@24628> JMP noleterr
0003394C <AmiBlitz3_noFPU_r470.ab3@24632>   MOVE.w d2,vartype
00033950 <AmiBlitz3_noFPU_r470.ab3@24633>   MOVE.b #$3,D2
00033954 <AmiBlitz3_noFPU_r470.ab3@24636>   CMP.b #5,d2
00033958 <AmiBlitz3_noFPU_r470.ab3@24637>   BNE 'l1
0003395E <AmiBlitz3_noFPU_r470.ab3@24638>   MOVE.l a2,currtype
00033962 <AmiBlitz3_noFPU_r470.ab3@24642>   MOVEM.w D2-D3,-(A7)
00033968 <AmiBlitz3_noFPU_r470.ab3@24643>   MOVE.w varmode,-(A7)
0003396E <AmiBlitz3_noFPU_r470.ab3@24644>   MOVE.l a2,leftsidetype
00033972 <AmiBlitz3_noFPU_r470.ab3@24645>   BTST #$f,d2
00033976 <AmiBlitz3_noFPU_r470.ab3@24646>   BEQ 'nomultiassign
0003397C <AmiBlitz3_noFPU_r470.ab3@24647>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033980 <AmiBlitz3_noFPU_r470.ab3@24648> 'nomultiassign  ANDI.w #$FF,D2
00033986 <AmiBlitz3_noFPU_r470.ab3@24649>   MOVE.l lastoffset_org,-(A7)
0003398A <AmiBlitz3_noFPU_r470.ab3@24650>   BSR.w eval                                ; calc right side of var assign
0003398E <AmiBlitz3_noFPU_r470.ab3@24652>   MOVEM.l a0/a1,-(a7)
00033994 <AmiBlitz3_noFPU_r470.ab3@24653>   MOVE.l leftsidetype,a0
0003399A <AmiBlitz3_noFPU_r470.ab3@24654>   CMP.l #0,a0
0003399E <AmiBlitz3_noFPU_r470.ab3@24655>   BEQ 'nocheck
000339A6 <AmiBlitz3_noFPU_r470.ab3@24656>   CMP.l #$100,4(a0)
000339AA <AmiBlitz3_noFPU_r470.ab3@24657>   BLE 'nocheck
000339B0 <AmiBlitz3_noFPU_r470.ab3@24658>   TST.l typetocast
000339B4 <AmiBlitz3_noFPU_r470.ab3@24659>   BEQ 'nocast
000339BA <AmiBlitz3_noFPU_r470.ab3@24660>   MOVE.l typetocast,a1
000339BE <AmiBlitz3_noFPU_r470.ab3@24661>   BRA 'typecheck
000339C4 <AmiBlitz3_noFPU_r470.ab3@24662> 'nocast  TST.l rightsidetype
000339C8 <AmiBlitz3_noFPU_r470.ab3@24663>   BEQ 'nocheck
000339CE <AmiBlitz3_noFPU_r470.ab3@24664>   MOVE.l rightsidetype,a1
000339D6 <AmiBlitz3_noFPU_r470.ab3@24665>   CMP.l #$100,4(a1)
000339DA <AmiBlitz3_noFPU_r470.ab3@24666>   BGE 'typecheck
000339E2 <AmiBlitz3_noFPU_r470.ab3@24667>   CMP.l #$3,4(a1)
000339E6 <AmiBlitz3_noFPU_r470.ab3@24668>   BEQ 'ok                              ;long assign is allow with this codelines
000339EA <AmiBlitz3_noFPU_r470.ab3@24669>   BRA 'error
000339F0 <AmiBlitz3_noFPU_r470.ab3@24671>   TST.b typecheck
000339F4 <AmiBlitz3_noFPU_r470.ab3@24672>   BEQ 'nocheck
000339FA <AmiBlitz3_noFPU_r470.ab3@24673>   TST.b notypecheck
000339FE <AmiBlitz3_noFPU_r470.ab3@24674>   BNE 'ok
00033A00 <AmiBlitz3_noFPU_r470.ab3@24675>   CMP.l a0,a1
00033A04 <AmiBlitz3_noFPU_r470.ab3@24676>   BEQ 'ok
00033A08 <AmiBlitz3_noFPU_r470.ab3@24678>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00033A0C <AmiBlitz3_noFPU_r470.ab3@24679>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00033A10 <AmiBlitz3_noFPU_r470.ab3@24680>   BEQ 'ok
00033A16 <AmiBlitz3_noFPU_r470.ab3@24682>  JMP   error_convert_types     ;for syntax 4  = typecheck
00033A1C <AmiBlitz3_noFPU_r470.ab3@24685>    CLR.l typetocast
00033A20 <AmiBlitz3_noFPU_r470.ab3@24686>    MOVEM.l (a7)+, a0/a1
00033A26 <AmiBlitz3_noFPU_r470.ab3@24687>   MOVE.l (A7)+,lastoffset_org
00033A2C <AmiBlitz3_noFPU_r470.ab3@24688>   MOVE.w commode,D1
00033A30 <AmiBlitz3_noFPU_r470.ab3@24689>    BNE.w JL_0_DFCC
00033A34 <AmiBlitz3_noFPU_r470.ab3@24690>    BSR.w JL_0_B63C
00033A3A <AmiBlitz3_noFPU_r470.ab3@24693>   MOVE.w (A7)+,varmode
00033A3E <AmiBlitz3_noFPU_r470.ab3@24694>   MOVEM.w (A7)+,D2-D3
00033A42 <AmiBlitz3_noFPU_r470.ab3@24696>   MOVE.w #$2B40,D1
00033A48 <AmiBlitz3_noFPU_r470.ab3@24697>   MOVE.w varmode,D4
00033A4C <AmiBlitz3_noFPU_r470.ab3@24698>    BEQ.w JL_0_DFE8
00033A50 <AmiBlitz3_noFPU_r470.ab3@24699>   BCLR #$9,D1
00033A54 <AmiBlitz3_noFPU_r470.ab3@24702>   BTST #$F,D2
00033A58 <AmiBlitz3_noFPU_r470.ab3@24703>    BEQ.w JL_0_E090
00033A5E <AmiBlitz3_noFPU_r470.ab3@24704>    TST.b stackcorrect
00033A62 <AmiBlitz3_noFPU_r470.ab3@24705>    BNE 'st1
00033A68 <AmiBlitz3_noFPU_r470.ab3@24706>   MOVE.w commode,D1
00033A6C <AmiBlitz3_noFPU_r470.ab3@24707>    BEQ.w JL_0_E004
00033A72 <AmiBlitz3_noFPU_r470.ab3@24710>   MOVE.w pulla2,D1
00033A78 <AmiBlitz3_noFPU_r470.ab3@24711>    JSR writeword
00033A7C <AmiBlitz3_noFPU_r470.ab3@24714>   MOVE.w #$2480,D1
00033A80 <AmiBlitz3_noFPU_r470.ab3@24715>    MOVEM.l a0/d0,-(a7)
00033A86 <AmiBlitz3_noFPU_r470.ab3@24716>    MOVEA.l lastoffset_org,A0
00033A88 <AmiBlitz3_noFPU_r470.ab3@24717>    MOVE.l A0,D0
00033A8C <AmiBlitz3_noFPU_r470.ab3@24718>    BEQ.w 'skip
00033A8E <AmiBlitz3_noFPU_r470.ab3@24719>    MOVEA.l D0,A0
00033A96 <AmiBlitz3_noFPU_r470.ab3@24720>    MOVE.l $A(A0),currtype
00033A9A <AmiBlitz3_noFPU_r470.ab3@24723>   MOVEM.l (a7)+,a0/d0
00033A9E <AmiBlitz3_noFPU_r470.ab3@24724>   CMP.w #$2C,D0
00033AA2 <AmiBlitz3_noFPU_r470.ab3@24725>    BNE.w JL_0_E090
00033AA6 <AmiBlitz3_noFPU_r470.ab3@24726>     MOVE.w #$24C0,D1
00033AAA <AmiBlitz3_noFPU_r470.ab3@24727>    BSR.w JL_0_E090                                         ;write store
00033AB0 <AmiBlitz3_noFPU_r470.ab3@24730>    MOVE.l lastoffset_org,D0
00033AB8 <AmiBlitz3_noFPU_r470.ab3@24734>   MOVE.w #$FFFF,commode
00033ABE <AmiBlitz3_noFPU_r470.ab3@24735>   CLR.w varcodelen
00033AC6 <AmiBlitz3_noFPU_r470.ab3@24736>   MOVE.b #1,optiarray
00033ACC <AmiBlitz3_noFPU_r470.ab3@24737>   MOVE.w pusha2,D1
00033AD2 <AmiBlitz3_noFPU_r470.ab3@24738>    JSR writeword
00033AD8 <AmiBlitz3_noFPU_r470.ab3@24739>   TST.l lastoffset_org
00033ADC <AmiBlitz3_noFPU_r470.ab3@24740>   BEQ dimmore
00033AE2 <AmiBlitz3_noFPU_r470.ab3@24741>   MOVEA.l lastoffset_org,A0
00033AE4 <AmiBlitz3_noFPU_r470.ab3@24742>   MOVE.l (A0),D0
00033AE8 <AmiBlitz3_noFPU_r470.ab3@24743>    BEQ.w JUMP_comerr
00033AEA <AmiBlitz3_noFPU_r470.ab3@24744>   MOVEA.l D0,A0
00033AF0 <AmiBlitz3_noFPU_r470.ab3@24745>   MOVE.l A0,lastoffset_org
00033AF6 <AmiBlitz3_noFPU_r470.ab3@24746>   BTST #$1,$7(A0)
00033AFA <AmiBlitz3_noFPU_r470.ab3@24747>    BNE.w JUMP_nocomerr
00033AFE <AmiBlitz3_noFPU_r470.ab3@24748>   MOVEA.l $A(A0),A1
00033B02 <AmiBlitz3_noFPU_r470.ab3@24749>   MOVE.l $4(A1),D2
00033B08 <AmiBlitz3_noFPU_r470.ab3@24752>   BTST #$0,$7(A0)
00033B0C <AmiBlitz3_noFPU_r470.ab3@24753>    BNE.w JL_0_E078
00033B12 <AmiBlitz3_noFPU_r470.ab3@24754>   CMP.l #$100,D2
00033B16 <AmiBlitz3_noFPU_r470.ab3@24755>    BCC.l JUMP_nocomerr
00033B1A <AmiBlitz3_noFPU_r470.ab3@24756> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00033B20 <AmiBlitz3_noFPU_r470.ab3@24759>         CLR.b optiarray
00033B24 <AmiBlitz3_noFPU_r470.ab3@24760>         CMP.w #"@@",(a5)
00033B28 <AmiBlitz3_noFPU_r470.ab3@24761>         BEQ 'n1
00033B2C <AmiBlitz3_noFPU_r470.ab3@24762> BRA 'd1
00033B32 <AmiBlitz3_noFPU_r470.ab3@24765>   JSR nextline
00033B34 <AmiBlitz3_noFPU_r470.ab3@24766>         MOVE.l a5,-(a7)
00033B36 <AmiBlitz3_noFPU_r470.ab3@24769>   MOVE.b (a5)+,d0
00033B3A <AmiBlitz3_noFPU_r470.ab3@24770>         CMP.b #$20,d0
00033B3E <AmiBlitz3_noFPU_r470.ab3@24771>         BEQ 'l2
00033B40 <AmiBlitz3_noFPU_r470.ab3@24772>         MOVE.l (a7)+,a5
00033B44 <AmiBlitz3_noFPU_r470.ab3@24773>         CMP.b #";",d0
00033B48 <AmiBlitz3_noFPU_r470.ab3@24774>         BEQ 'n1
00033B4E <AmiBlitz3_noFPU_r470.ab3@24777>         TST.w debugmode
00033B52 <AmiBlitz3_noFPU_r470.ab3@24778>         BEQ JL_0_DEE0
00033B54 <AmiBlitz3_noFPU_r470.ab3@24779>         MOVE.l a0,-(a7)
00033B5A <AmiBlitz3_noFPU_r470.ab3@24780>         MOVE.l pushat,a0
00033B60 <AmiBlitz3_noFPU_r470.ab3@24781>         CMP.l #0,a0
00033B64 <AmiBlitz3_noFPU_r470.ab3@24782>         BNE 'o1
00033B68 <AmiBlitz3_noFPU_r470.ab3@24783> BRA 'skip
00033B70 <AmiBlitz3_noFPU_r470.ab3@24786>         ADD.l #1,2(a0)
00033B76 <AmiBlitz3_noFPU_r470.ab3@24789>   CLR.w commode
00033B7E <AmiBlitz3_noFPU_r470.ab3@24790>         MOVE.b #1,stackcorrect
00033B80 <AmiBlitz3_noFPU_r470.ab3@24791>         MOVE.l (a7)+,a0
00033B86 <AmiBlitz3_noFPU_r470.ab3@24792> JMP JL_0_DEE0
00033B8C <AmiBlitz3_noFPU_r470.ab3@24795> JMP nocomerr
00033B92 <AmiBlitz3_noFPU_r470.ab3@24798>   CMP.l #$100,D2
00033B96 <AmiBlitz3_noFPU_r470.ab3@24799>    BCS.w JL_0_E084
00033B98 <AmiBlitz3_noFPU_r470.ab3@24800>   MOVEQ.l #$00,D2
00033B9C <AmiBlitz3_noFPU_r470.ab3@24803>   BSET #$E,D2
00033BA0 <AmiBlitz3_noFPU_r470.ab3@24806>   BSET #$F,D2
00033BA4 <AmiBlitz3_noFPU_r470.ab3@24807> BRA.w JL_0_DEE0
00033BAA <AmiBlitz3_noFPU_r470.ab3@24810>    MOVE.l destpointer,a4
00033BB2 <AmiBlitz3_noFPU_r470.ab3@24811>    MOVE.l #$f22a6400,-4(a4)
00033BB8 <AmiBlitz3_noFPU_r470.ab3@24812>    MOVE.w arrayoffset,d1
00033BBE <AmiBlitz3_noFPU_r470.ab3@24813> JMP writeword
00033BC4 <AmiBlitz3_noFPU_r470.ab3@24816> JMP comerr
00033BCA <AmiBlitz3_noFPU_r470.ab3@24819>    TST.b fpu
00033BCE <AmiBlitz3_noFPU_r470.ab3@24820>    BEQ 'nofloat
00033BD2 <AmiBlitz3_noFPU_r470.ab3@24821>    CMP.b #5,d2
00033BD6 <AmiBlitz3_noFPU_r470.ab3@24822>    BNE 'nofloat
00033BDC <AmiBlitz3_noFPU_r470.ab3@24823>    CLR.w fp0var
00033BE2 <AmiBlitz3_noFPU_r470.ab3@24824>    LEA regtable,a4
00033BE4 <AmiBlitz3_noFPU_r470.ab3@24825>    TST.l (a4)
00033BE8 <AmiBlitz3_noFPU_r470.ab3@24826>    BEQ 'noreg
00033BEC <AmiBlitz3_noFPU_r470.ab3@24827>    BTST #15,d2                                             ;regvars
00033BF0 <AmiBlitz3_noFPU_r470.ab3@24828>    BNE 'noreg
00033BF4 <AmiBlitz3_noFPU_r470.ab3@24829>    CMP.w 0+4(a4),d3
00033BF8 <AmiBlitz3_noFPU_r470.ab3@24830>    BNE 'doreg1
00033BFE <AmiBlitz3_noFPU_r470.ab3@24831>    MOVE.l #$f2000380,d1
00033C04 <AmiBlitz3_noFPU_r470.ab3@24832>    MOVE.w regnum,d0
00033C08 <AmiBlitz3_noFPU_r470.ab3@24833>    BNE 'noopt
00033C0E <AmiBlitz3_noFPU_r470.ab3@24839>    MOVE.l destpointer,a4
00033C16 <AmiBlitz3_noFPU_r470.ab3@24840>    CMP.l #$f2001c80,-8(a4)
00033C1A <AmiBlitz3_noFPU_r470.ab3@24841>    BNE 'noopt
00033C22 <AmiBlitz3_noFPU_r470.ab3@24842>    CMP.l #$f2000422,-4(a4)
00033C26 <AmiBlitz3_noFPU_r470.ab3@24843>    BNE 'noopt
00033C2C <AmiBlitz3_noFPU_r470.ab3@24844>    MOVE.l #$f20003a2,d1
00033C36 <AmiBlitz3_noFPU_r470.ab3@24845>    SUB.l #8,destpointer
00033C38 <AmiBlitz3_noFPU_r470.ab3@24848>    ASL.w #7,d0
00033C3A <AmiBlitz3_noFPU_r470.ab3@24849>    OR.w d0,d1
00033C40 <AmiBlitz3_noFPU_r470.ab3@24850>    JSR writelong
00033C42 <AmiBlitz3_noFPU_r470.ab3@24851> RTS
00033C46 <AmiBlitz3_noFPU_r470.ab3@24854>   CMP.w 8+4(a4),d3
00033C4A <AmiBlitz3_noFPU_r470.ab3@24855>    BNE 'doreg2
00033C50 <AmiBlitz3_noFPU_r470.ab3@24856>    MOVE.l #$f2000300,d1
00033C56 <AmiBlitz3_noFPU_r470.ab3@24857>    MOVE.w regnum,d0
00033C58 <AmiBlitz3_noFPU_r470.ab3@24858>    ASL.w #7,d0
00033C5A <AmiBlitz3_noFPU_r470.ab3@24859>    OR.w d0,d1
00033C60 <AmiBlitz3_noFPU_r470.ab3@24860>    JSR writelong
00033C62 <AmiBlitz3_noFPU_r470.ab3@24861> RTS
00033C66 <AmiBlitz3_noFPU_r470.ab3@24864>   CMP.w 16+4(a4),d3
00033C6A <AmiBlitz3_noFPU_r470.ab3@24865>    BNE 'doreg3
00033C70 <AmiBlitz3_noFPU_r470.ab3@24866>    MOVE.l #$f2000280,d1
00033C76 <AmiBlitz3_noFPU_r470.ab3@24867>    MOVE.w regnum,d0
00033C78 <AmiBlitz3_noFPU_r470.ab3@24868>    ASL.w #7,d0
00033C7A <AmiBlitz3_noFPU_r470.ab3@24869>    OR.w d0,d1
00033C80 <AmiBlitz3_noFPU_r470.ab3@24870>    JSR  writelong
00033C82 <AmiBlitz3_noFPU_r470.ab3@24871>  RTS
00033C86 <AmiBlitz3_noFPU_r470.ab3@24874>   CMP.w 24+4(a4),d3
00033C8A <AmiBlitz3_noFPU_r470.ab3@24875>    BNE 'doreg4
00033C90 <AmiBlitz3_noFPU_r470.ab3@24876>    MOVE.l #$f2000200,d1
00033C96 <AmiBlitz3_noFPU_r470.ab3@24877>    MOVE.w regnum,d0
00033C98 <AmiBlitz3_noFPU_r470.ab3@24878>    ASL.w #7,d0
00033C9A <AmiBlitz3_noFPU_r470.ab3@24879>    OR.w d0,d1
00033CA0 <AmiBlitz3_noFPU_r470.ab3@24880>    JSR writelong
00033CA2 <AmiBlitz3_noFPU_r470.ab3@24881> RTS
00033CA6 <AmiBlitz3_noFPU_r470.ab3@24884>   CMP.w 32+4(a4),d3
00033CAA <AmiBlitz3_noFPU_r470.ab3@24885>    BNE 'noreg
00033CB0 <AmiBlitz3_noFPU_r470.ab3@24886>    MOVE.l #$f2000180,d1
00033CB6 <AmiBlitz3_noFPU_r470.ab3@24887>    MOVE.w regnum,d0
00033CB8 <AmiBlitz3_noFPU_r470.ab3@24888>    ASL.w #7,d0
00033CBA <AmiBlitz3_noFPU_r470.ab3@24889>    OR.w d0,d1
00033CC0 <AmiBlitz3_noFPU_r470.ab3@24890>    JSR writelong
00033CC2 <AmiBlitz3_noFPU_r470.ab3@24891> RTS
00033CC8 <AmiBlitz3_noFPU_r470.ab3@24894>    TST.w regnum
00033CCC <AmiBlitz3_noFPU_r470.ab3@24895>    BNE 'nofp0
00033CD2 <AmiBlitz3_noFPU_r470.ab3@24896>    MOVE.l destpointer ,a4
00033CDA <AmiBlitz3_noFPU_r470.ab3@24897>    CMP.l #$f2304400,-6(a4)
00033CDE <AmiBlitz3_noFPU_r470.ab3@24898>    BNE 'do
00033CE4 <AmiBlitz3_noFPU_r470.ab3@24899>    CMP.w #$1990,-2(a4)
00033CE8 <AmiBlitz3_noFPU_r470.ab3@24900>    BNE 'do
00033CEC <AmiBlitz3_noFPU_r470.ab3@24901>    BTST #15,d2                                             ;types ?
00033CF0 <AmiBlitz3_noFPU_r470.ab3@24902>    BNE 'do
00033CF6 <AmiBlitz3_noFPU_r470.ab3@24903>   MOVE.l #$2b701990,d1                                     ;var
00033CFC <AmiBlitz3_noFPU_r470.ab3@24904>   TST.w varmode
00033D00 <AmiBlitz3_noFPU_r470.ab3@24905>   BEQ 'glob1
00033D04 <AmiBlitz3_noFPU_r470.ab3@24906>   BCLR #25,d1
00033D08 <AmiBlitz3_noFPU_r470.ab3@24909>   MOVE.l d1,-6(a4)
00033D0C <AmiBlitz3_noFPU_r470.ab3@24910>   MOVE.w d3,-2(a4)
00033D12 <AmiBlitz3_noFPU_r470.ab3@24911>   CLR.w fp0var
00033D1A <AmiBlitz3_noFPU_r470.ab3@24912>   MOVE.w #$ffff,fp0mode
00033D1C <AmiBlitz3_noFPU_r470.ab3@24913> RTS
00033D24 <AmiBlitz3_noFPU_r470.ab3@24916>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00033D28 <AmiBlitz3_noFPU_r470.ab3@24917>    BNE 'do3
00033D32 <AmiBlitz3_noFPU_r470.ab3@24918>    CMP.l #newtype_double,currtype
00033D36 <AmiBlitz3_noFPU_r470.ab3@24919>    BEQ 'do4
00033D3A <AmiBlitz3_noFPU_r470.ab3@24922>   MOVE.w #$2b6d,d1
00033D40 <AmiBlitz3_noFPU_r470.ab3@24923>    TST.w varmode
00033D44 <AmiBlitz3_noFPU_r470.ab3@24924>    BEQ 'g2
00033D48 <AmiBlitz3_noFPU_r470.ab3@24925>     BCLR #9,d1
00033D4C <AmiBlitz3_noFPU_r470.ab3@24928>     CMP.w #$2b6d,d1
00033D50 <AmiBlitz3_noFPU_r470.ab3@24929>     BNE 'd1
00033D54 <AmiBlitz3_noFPU_r470.ab3@24930>     CMP.w -2(a4),d3
00033D58 <AmiBlitz3_noFPU_r470.ab3@24931>     BNE 'd1
00033D5E <AmiBlitz3_noFPU_r470.ab3@24932>     SUBQ.l #6,destpointer
00033D62 <AmiBlitz3_noFPU_r470.ab3@24933> BRA 'd12
00033D66 <AmiBlitz3_noFPU_r470.ab3@24936>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00033D6C <AmiBlitz3_noFPU_r470.ab3@24937>     MOVE.w -2(a4),-4(a4)
00033D70 <AmiBlitz3_noFPU_r470.ab3@24938>     MOVE.w d3,-2(a4)
00033D76 <AmiBlitz3_noFPU_r470.ab3@24941>   CLR.w fp0var
00033D7E <AmiBlitz3_noFPU_r470.ab3@24942>     MOVE.w #$ffff,fp0mode
00033D80 <AmiBlitz3_noFPU_r470.ab3@24943> RTS
00033D88 <AmiBlitz3_noFPU_r470.ab3@24946>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00033D8C <AmiBlitz3_noFPU_r470.ab3@24947>    BNE 'do4
00033D90 <AmiBlitz3_noFPU_r470.ab3@24948>    MOVE.w #$2b6c,d1
00033D96 <AmiBlitz3_noFPU_r470.ab3@24949>       TST.w varmode
00033D9A <AmiBlitz3_noFPU_r470.ab3@24950>    BEQ 'g3
00033D9E <AmiBlitz3_noFPU_r470.ab3@24951>    BCLR #9,d1
00033DA2 <AmiBlitz3_noFPU_r470.ab3@24954>   MOVE.w d1,-6(a4)
00033DA8 <AmiBlitz3_noFPU_r470.ab3@24955>     MOVE.w -2(a4),-4(a4)
00033DAC <AmiBlitz3_noFPU_r470.ab3@24956>     MOVE.w d3,-2(a4)
00033DB2 <AmiBlitz3_noFPU_r470.ab3@24957>     CLR.w fp0var
00033DBA <AmiBlitz3_noFPU_r470.ab3@24958>     MOVE.w #$ffff,fp0mode
00033DBC <AmiBlitz3_noFPU_r470.ab3@24959> RTS
00033DC2 <AmiBlitz3_noFPU_r470.ab3@24962>   MOVE.w d3,fp0var
00033DCC <AmiBlitz3_noFPU_r470.ab3@24963>    MOVE.w varmode,fp0mode
00033DCE <AmiBlitz3_noFPU_r470.ab3@24964>    ADDQ.l #6,a4
00033DD4 <AmiBlitz3_noFPU_r470.ab3@24965>    MOVE.l a4,fp0addr
00033DDE <AmiBlitz3_noFPU_r470.ab3@24966>    MOVE.l firstiff,fp0iff
00033DE2 <AmiBlitz3_noFPU_r470.ab3@24969>   MOVEM.l d0/d4,-(a7)
00033DE4 <AmiBlitz3_noFPU_r470.ab3@24970>    MOVEQ #0,d0
00033DEA <AmiBlitz3_noFPU_r470.ab3@24971>     MOVE.w regnum,d0
00033DEC <AmiBlitz3_noFPU_r470.ab3@24972>    ASL.w #7,d0                                             ;fpu store var
00033DF0 <AmiBlitz3_noFPU_r470.ab3@24973>   BTST #15,d2
00033DF4 <AmiBlitz3_noFPU_r470.ab3@24974>    BEQ 'var
00033DF6 <AmiBlitz3_noFPU_r470.ab3@24975>    MOVE.w d1,d4
00033DFA <AmiBlitz3_noFPU_r470.ab3@24976>    CMP.w #$24c0,d4
00033DFE <AmiBlitz3_noFPU_r470.ab3@24977>    BNE 'nopl
00033E04 <AmiBlitz3_noFPU_r470.ab3@24978>    MOVE.l #$f21a6400,d1
00033E06 <AmiBlitz3_noFPU_r470.ab3@24979>    MOVEQ #0,d3
00033E0A <AmiBlitz3_noFPU_r470.ab3@24980> BRA 'glob
00033E10 <AmiBlitz3_noFPU_r470.ab3@24984>   MOVE.l #$f2126400,d1
00033E12 <AmiBlitz3_noFPU_r470.ab3@24985>    TST.w d3                                                ;offset =0
00033E16 <AmiBlitz3_noFPU_r470.ab3@24986>    BNE 'offset
00033E1C <AmiBlitz3_noFPU_r470.ab3@24987>    MOVE.l #$f2126400,d1
00033E1E <AmiBlitz3_noFPU_r470.ab3@24995>    MOVEQ #0,d3
00033E22 <AmiBlitz3_noFPU_r470.ab3@24996> BRA 'glob
00033E28 <AmiBlitz3_noFPU_r470.ab3@24999>   MOVE.l #$f22d6400,d1                                     ;var
00033E2E <AmiBlitz3_noFPU_r470.ab3@25000>   TST.w varmode
00033E32 <AmiBlitz3_noFPU_r470.ab3@25001>   BEQ 'glob
00033E36 <AmiBlitz3_noFPU_r470.ab3@25002>   BCLR #16,d1
00033E38 <AmiBlitz3_noFPU_r470.ab3@25003>  'glob OR.l d0,d1
00033E42 <AmiBlitz3_noFPU_r470.ab3@25006>   CMP.l #newtype_double,currtype
00033E46 <AmiBlitz3_noFPU_r470.ab3@25007>   BNE 'dbl1
00033E4C <AmiBlitz3_noFPU_r470.ab3@25008>   OR.l #$00001000,d1
00033E52 <AmiBlitz3_noFPU_r470.ab3@25011>   JSR writelong
00033E58 <AmiBlitz3_noFPU_r470.ab3@25012>   CLR.l currtype
00033E5C <AmiBlitz3_noFPU_r470.ab3@25013>   MOVEM.l (a7)+,d0/d4
00033E5E <AmiBlitz3_noFPU_r470.ab3@25014>   MOVE.l d3,d1
00033E62 <AmiBlitz3_noFPU_r470.ab3@25015>   BEQ 'nooffs
00033E68 <AmiBlitz3_noFPU_r470.ab3@25016> JMP writeword
00033E6A <AmiBlitz3_noFPU_r470.ab3@25019> RTS
00033E70 <AmiBlitz3_noFPU_r470.ab3@25033>     TST.b fast                                             ;write lea->xx(a2)
00033E74 <AmiBlitz3_noFPU_r470.ab3@25034>    BEQ 'la10
00033E7A <AmiBlitz3_noFPU_r470.ab3@25038>    TST.b quickadd
00033E80 <AmiBlitz3_noFPU_r470.ab3@25040>      CLR.b quickadd
00033E84 <AmiBlitz3_noFPU_r470.ab3@25041>    CMP.w #$2480,d1
00033E88 <AmiBlitz3_noFPU_r470.ab3@25042>    BNE 'la10
00033E8E <AmiBlitz3_noFPU_r470.ab3@25043>    TST.b optiarray
00033E92 <AmiBlitz3_noFPU_r470.ab3@25044>    BNE 'la10
00033E98 <AmiBlitz3_noFPU_r470.ab3@25045>    MOVE.l destpointer,a4
00033E9E <AmiBlitz3_noFPU_r470.ab3@25046>    CMP.w #$45ea,-4(a4)
00033EA2 <AmiBlitz3_noFPU_r470.ab3@25047>    BNE 'la10
00033EAA <AmiBlitz3_noFPU_r470.ab3@25048>    CMP.w #8,pushclen
00033EAE <AmiBlitz3_noFPU_r470.ab3@25049>    BEQ 'la100
00033EB6 <AmiBlitz3_noFPU_r470.ab3@25050>    CMP.w #6,pushclen
00033EBA <AmiBlitz3_noFPU_r470.ab3@25051>    BNE 'la10
00033EBE <AmiBlitz3_noFPU_r470.ab3@25052>    CMP.b #3,d2
00033EC2 <AmiBlitz3_noFPU_r470.ab3@25053>    BCS 'la110
00033EC8 <AmiBlitz3_noFPU_r470.ab3@25055>    MOVE.w #$2540,-2(a4)
00033ECE <AmiBlitz3_noFPU_r470.ab3@25056>    MOVE.w arrayoffset,d1
00033ED4 <AmiBlitz3_noFPU_r470.ab3@25057> JMP writeword
00033EDA <AmiBlitz3_noFPU_r470.ab3@25060>    CLR.b quickadd
00033EDC <AmiBlitz3_noFPU_r470.ab3@25061> RTS
00033EE0 <AmiBlitz3_noFPU_r470.ab3@25064>    CMP.b #2,d2
00033EE4 <AmiBlitz3_noFPU_r470.ab3@25065>    BNE 'la120
00033EEA <AmiBlitz3_noFPU_r470.ab3@25066>     MOVE.w #$3540,-2(a4)
00033EF0 <AmiBlitz3_noFPU_r470.ab3@25067>    MOVE.w arrayoffset,d1
00033EF6 <AmiBlitz3_noFPU_r470.ab3@25068> JMP writeword
00033EFA <AmiBlitz3_noFPU_r470.ab3@25071>   CMP.b #1,d2
00033EFE <AmiBlitz3_noFPU_r470.ab3@25072>    BNE.s 'la10
00033F04 <AmiBlitz3_noFPU_r470.ab3@25073>     MOVE.w #$1540,-2(a4)
00033F0A <AmiBlitz3_noFPU_r470.ab3@25074>    MOVE.w arrayoffset,d1
00033F10 <AmiBlitz3_noFPU_r470.ab3@25075> JMP writeword
00033F14 <AmiBlitz3_noFPU_r470.ab3@25078>    CMP.b #3,d2
00033F18 <AmiBlitz3_noFPU_r470.ab3@25079>    BCS 'la11
00033F1E <AmiBlitz3_noFPU_r470.ab3@25080>    MOVE.w #$2540,-4(a4)
00033F20 <AmiBlitz3_noFPU_r470.ab3@25081> RTS
00033F24 <AmiBlitz3_noFPU_r470.ab3@25084>    CMP.b #2,d2
00033F28 <AmiBlitz3_noFPU_r470.ab3@25085>    BNE 'la12
00033F2E <AmiBlitz3_noFPU_r470.ab3@25086>     MOVE.w #$3540,-4(a4)
00033F30 <AmiBlitz3_noFPU_r470.ab3@25087> RTS
00033F34 <AmiBlitz3_noFPU_r470.ab3@25089>  'la12 CMP.b #1,d2
00033F38 <AmiBlitz3_noFPU_r470.ab3@25090>    BNE.s 'la10
00033F3E <AmiBlitz3_noFPU_r470.ab3@25091>     MOVE.w #$1540,-4(a4)
00033F40 <AmiBlitz3_noFPU_r470.ab3@25092> RTS
00033F46 <AmiBlitz3_noFPU_r470.ab3@25095>   CLR.b optiarray
00033F4A <AmiBlitz3_noFPU_r470.ab3@25096>    CMP.b #$1,D2
00033F4E <AmiBlitz3_noFPU_r470.ab3@25097>    BEQ.w JL_0_E0AC
00033F52 <AmiBlitz3_noFPU_r470.ab3@25098>    BSR.w varalign
00033F56 <AmiBlitz3_noFPU_r470.ab3@25099>    CMP.b #$3,D2
00033F5A <AmiBlitz3_noFPU_r470.ab3@25100>    BCC.w writevarlong
00033F60 <AmiBlitz3_noFPU_r470.ab3@25101>    TST.b fast                                              ;optiimmi
00033F64 <AmiBlitz3_noFPU_r470.ab3@25102>    BEQ 'l10b
00033F6A <AmiBlitz3_noFPU_r470.ab3@25107>    MOVE.l destpointer,a0
00033F70 <AmiBlitz3_noFPU_r470.ab3@25108>    SUB.l imm_addr,a0
00033F76 <AmiBlitz3_noFPU_r470.ab3@25109>    CMP.l #4,a0
00033F7A <AmiBlitz3_noFPU_r470.ab3@25110>    BNE 'l10
00033F80 <AmiBlitz3_noFPU_r470.ab3@25111>    CLR.l imm_addr
00033F86 <AmiBlitz3_noFPU_r470.ab3@25112>    MOVE.l destpointer,a4
00033F8A <AmiBlitz3_noFPU_r470.ab3@25113>    OR.w #$107c,d1
00033F8E <AmiBlitz3_noFPU_r470.ab3@25114>    MOVE.w d1,-4(a4)
00033F90 <AmiBlitz3_noFPU_r470.ab3@25115>     MOVE.w D3,D1
00033F96 <AmiBlitz3_noFPU_r470.ab3@25116> JMP writeword
00033F9C <AmiBlitz3_noFPU_r470.ab3@25119>   MOVE.l destpointer,a0
00033FA2 <AmiBlitz3_noFPU_r470.ab3@25120>   SUB.l load_var_addr,a0
00033FA8 <AmiBlitz3_noFPU_r470.ab3@25121>   CMP.l #4,a0
00033FAC <AmiBlitz3_noFPU_r470.ab3@25122>   BNE 'l10b
00033FB2 <AmiBlitz3_noFPU_r470.ab3@25123>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
00033FB6 <AmiBlitz3_noFPU_r470.ab3@25124>   BNE 'l10b
00033FBC <AmiBlitz3_noFPU_r470.ab3@25126>   CLR.l load_var_addr
00033FC2 <AmiBlitz3_noFPU_r470.ab3@25127>   MOVE.l destpointer,a4
00033FC6 <AmiBlitz3_noFPU_r470.ab3@25128>   OR.w #$102d,d1
00033FCA <AmiBlitz3_noFPU_r470.ab3@25129>   MOVE.w d1,-4(a4)
00033FCC <AmiBlitz3_noFPU_r470.ab3@25130>   MOVE.w d3,d1
00033FD2 <AmiBlitz3_noFPU_r470.ab3@25131> JMP writeword
00033FD6 <AmiBlitz3_noFPU_r470.ab3@25134>   ORI.w #$1000,D1                                          ;word
00033FDA <AmiBlitz3_noFPU_r470.ab3@25135> BRA.w writestorevar
00033FE0 <AmiBlitz3_noFPU_r470.ab3@25139>    TST.b fast                                              ;optiimmi
00033FE4 <AmiBlitz3_noFPU_r470.ab3@25140>    BEQ 'l10b
00033FEA <AmiBlitz3_noFPU_r470.ab3@25145>    MOVE.l destpointer,a0
00033FF0 <AmiBlitz3_noFPU_r470.ab3@25146>    SUB.l imm_addr,a0
00033FF6 <AmiBlitz3_noFPU_r470.ab3@25147>    CMP.l #4,a0
00033FFA <AmiBlitz3_noFPU_r470.ab3@25148>    BNE 'l10
00034000 <AmiBlitz3_noFPU_r470.ab3@25149>    CLR.l imm_addr
00034006 <AmiBlitz3_noFPU_r470.ab3@25150>    MOVE.l destpointer,a4
0003400A <AmiBlitz3_noFPU_r470.ab3@25151>    OR.w #$7c,d1
0003400E <AmiBlitz3_noFPU_r470.ab3@25152>    EORI #$3000,d1
00034012 <AmiBlitz3_noFPU_r470.ab3@25153>    MOVE.w d1,-4(a4)
00034014 <AmiBlitz3_noFPU_r470.ab3@25154>       MOVE.w D3,D1
0003401A <AmiBlitz3_noFPU_r470.ab3@25155> JMP writeword
00034020 <AmiBlitz3_noFPU_r470.ab3@25158>   MOVE.l destpointer,a0
00034026 <AmiBlitz3_noFPU_r470.ab3@25159>   SUB.l load_var_addr,a0
0003402C <AmiBlitz3_noFPU_r470.ab3@25160>   CMP.l #4,a0
00034030 <AmiBlitz3_noFPU_r470.ab3@25161>   BNE 'l10b
00034036 <AmiBlitz3_noFPU_r470.ab3@25162>   CLR.l load_var_addr
0003403C <AmiBlitz3_noFPU_r470.ab3@25163>   MOVE.l destpointer,a4
00034042 <AmiBlitz3_noFPU_r470.ab3@25164>    CMP.w #$1b6d,-4(a4)
00034046 <AmiBlitz3_noFPU_r470.ab3@25165>    BNE 'l10b
0003404A <AmiBlitz3_noFPU_r470.ab3@25166>    OR.w #$2d,d1
0003404E <AmiBlitz3_noFPU_r470.ab3@25167>    EORI #$3000,d1
00034052 <AmiBlitz3_noFPU_r470.ab3@25168>    MOVE.w d1,-4(a4)
00034054 <AmiBlitz3_noFPU_r470.ab3@25169>   MOVE.w d3,d1
0003405A <AmiBlitz3_noFPU_r470.ab3@25170> JMP writeword
00034060 <AmiBlitz3_noFPU_r470.ab3@25173>   ADDQ.w #1,pcodd                                          ;byte
00034064 <AmiBlitz3_noFPU_r470.ab3@25174>   EORI.w #$3000,D1
0003406A <AmiBlitz3_noFPU_r470.ab3@25177>   JSR writeword
0003406E <AmiBlitz3_noFPU_r470.ab3@25178>   BTST #$7,D1
00034072 <AmiBlitz3_noFPU_r470.ab3@25179>    BNE JL_0_E0C6
00034074 <AmiBlitz3_noFPU_r470.ab3@25180>   MOVE.w D3,D1
0003407A <AmiBlitz3_noFPU_r470.ab3@25181> JMP writeword
00034080 <AmiBlitz3_noFPU_r470.ab3@25184>    TST.b fast                                              ;optiimmi
00034084 <AmiBlitz3_noFPU_r470.ab3@25185>    BEQ 'l10b
0003408A <AmiBlitz3_noFPU_r470.ab3@25189>    MOVE.l destpointer,a0
00034090 <AmiBlitz3_noFPU_r470.ab3@25190>    SUB.l imm_addr,a0
00034096 <AmiBlitz3_noFPU_r470.ab3@25191>    CMP.l #6,a0
0003409A <AmiBlitz3_noFPU_r470.ab3@25192>    BNE 'l10
000340A0 <AmiBlitz3_noFPU_r470.ab3@25193>    CLR.l imm_addr
000340A6 <AmiBlitz3_noFPU_r470.ab3@25194>    MOVE.l destpointer,a4
000340AA <AmiBlitz3_noFPU_r470.ab3@25195>    OR.w #$7c,d1
000340AE <AmiBlitz3_noFPU_r470.ab3@25196>    MOVE.w d1,-6(a4)
000340B0 <AmiBlitz3_noFPU_r470.ab3@25197>     MOVE.w D3,D1
000340B6 <AmiBlitz3_noFPU_r470.ab3@25198> JMP writeword
000340BC <AmiBlitz3_noFPU_r470.ab3@25201>   MOVE.l destpointer,a0
000340C2 <AmiBlitz3_noFPU_r470.ab3@25202>   SUB.l load_var_addr,a0
000340C8 <AmiBlitz3_noFPU_r470.ab3@25203>   CMP.l #4,a0
000340CC <AmiBlitz3_noFPU_r470.ab3@25204>   BNE 'l10b
000340D2 <AmiBlitz3_noFPU_r470.ab3@25205>   CLR.l load_var_addr
000340D8 <AmiBlitz3_noFPU_r470.ab3@25206>   MOVE.l destpointer,a4
000340DE <AmiBlitz3_noFPU_r470.ab3@25207>   CMP.w #$245f,-2(a4)
000340E2 <AmiBlitz3_noFPU_r470.ab3@25208>   BEQ 'l10b
000340E6 <AmiBlitz3_noFPU_r470.ab3@25209>   OR.w #$28,d1
000340EA <AmiBlitz3_noFPU_r470.ab3@25210>   OR.w d1,-4(a4)
000340F0 <AmiBlitz3_noFPU_r470.ab3@25211>   CMP.w #$2b6d,-4(a4)
000340F4 <AmiBlitz3_noFPU_r470.ab3@25212>   BNE 'd1
000340F8 <AmiBlitz3_noFPU_r470.ab3@25213>   CMP.w -2(a4),d3
000340FC <AmiBlitz3_noFPU_r470.ab3@25214>   BNE 'd1
00034102 <AmiBlitz3_noFPU_r470.ab3@25215>   SUBQ.l #4,destpointer
00034104 <AmiBlitz3_noFPU_r470.ab3@25216> RTS
00034106 <AmiBlitz3_noFPU_r470.ab3@25219>   MOVE.w d3,d1
0003410C <AmiBlitz3_noFPU_r470.ab3@25220> JMP writeword
00034112 <AmiBlitz3_noFPU_r470.ab3@25223>   JSR writeword
00034116 <AmiBlitz3_noFPU_r470.ab3@25224>   BTST #$7,D1
0003411A <AmiBlitz3_noFPU_r470.ab3@25225>    BNE.b JL_0_E0C6
0003411C <AmiBlitz3_noFPU_r470.ab3@25226>   MOVE.w D3,D1
00034122 <AmiBlitz3_noFPU_r470.ab3@25227> JMP writeword
00034124 <AmiBlitz3_noFPU_r470.ab3@25230> RTS
00034126 <AmiBlitz3_noFPU_r470.ab3@25234>   MOVE.w D1,-(A7)
0003412A <AmiBlitz3_noFPU_r470.ab3@25235>   MOVE.w pcodd(PC),D1
0003412C <AmiBlitz3_noFPU_r470.ab3@25236>   LSR.w #1,D1
00034130 <AmiBlitz3_noFPU_r470.ab3@25237>    BCC.b JL_0_E0E2
00034136 <AmiBlitz3_noFPU_r470.ab3@25238>   CLR.w pcodd
0003413C <AmiBlitz3_noFPU_r470.ab3@25239>   MOVE.w add1a2,D1
00034142 <AmiBlitz3_noFPU_r470.ab3@25240>    JSR writeword
00034144 <AmiBlitz3_noFPU_r470.ab3@25243>   MOVE.w (A7)+,D1
00034146 <AmiBlitz3_noFPU_r470.ab3@25244> RTS
00034148 <AmiBlitz3_noFPU_r470.ab3@25248> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
0003414A <AmiBlitz3_noFPU_r470.ab3@25251> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
0003414C <AmiBlitz3_noFPU_r470.ab3@25252> listadd:   Ds.w 1                                          ;set to 8 if it's a list
0003414E <AmiBlitz3_noFPU_r470.ab3@25253> listsize:  Ds.w 1
00034154 <AmiBlitz3_noFPU_r470.ab3@25257>   ADDQ.w #1,regnum
0003415C <AmiBlitz3_noFPU_r470.ab3@25258>   MOVE.b #1,nowdeclare
00034162 <AmiBlitz3_noFPU_r470.ab3@25259>   CLR.b dimkeep
0003416A <AmiBlitz3_noFPU_r470.ab3@25260>    CMP.l #"KEEP",-1(a5)
0003416E <AmiBlitz3_noFPU_r470.ab3@25261>   BNE 'nokeep
00034174 <AmiBlitz3_noFPU_r470.ab3@25262>   CMP.b #" ",3(a5)
00034178 <AmiBlitz3_noFPU_r470.ab3@25263>   BNE 'nokeep
0003417A <AmiBlitz3_noFPU_r470.ab3@25264>   ADDQ.l #3,a5
0003417E <AmiBlitz3_noFPU_r470.ab3@25267>     CMP.b #" ",(a5)
00034182 <AmiBlitz3_noFPU_r470.ab3@25268>     BNE '1
00034184 <AmiBlitz3_noFPU_r470.ab3@25269>    ADDQ #1,a5
00034188 <AmiBlitz3_noFPU_r470.ab3@25270> BRA '2
0003418E <AmiBlitz3_noFPU_r470.ab3@25273>   MOVE.l a5,lastsourcepos
00034196 <AmiBlitz3_noFPU_r470.ab3@25274>   MOVE.b #1,dimkeep
0003419A <AmiBlitz3_noFPU_r470.ab3@25282>   MOVE.w #$FF9A,D1
000341A0 <AmiBlitz3_noFPU_r470.ab3@25283>   JSR uselib
000341A6 <AmiBlitz3_noFPU_r470.ab3@25286>   CLR.w listadd
000341AA <AmiBlitz3_noFPU_r470.ab3@25287>   CMP.w #-$7F4D,D0
000341AE <AmiBlitz3_noFPU_r470.ab3@25288>    BNE.w JL_0_E11E
000341B6 <AmiBlitz3_noFPU_r470.ab3@25289>   MOVE.w #$0008,listadd
000341BA <AmiBlitz3_noFPU_r470.ab3@25290>   MOVE.w #$FFFA,D1
000341C0 <AmiBlitz3_noFPU_r470.ab3@25291>    JSR uselib
000341C6 <AmiBlitz3_noFPU_r470.ab3@25292>    JSR get1bytemain
000341CC <AmiBlitz3_noFPU_r470.ab3@25295>   CLR.w nonew
000341D2 <AmiBlitz3_noFPU_r470.ab3@25296>    JSR getparameter
000341DA <AmiBlitz3_noFPU_r470.ab3@25297>   BTST #$1,flagmask+1
000341DE <AmiBlitz3_noFPU_r470.ab3@25298>    BEQ.w JUMP_syntaxerr
000341E4 <AmiBlitz3_noFPU_r470.ab3@25299>    JSR JL_0_8E3C
000341EA <AmiBlitz3_noFPU_r470.ab3@25300>   MOVE.w notshared,D1
000341EE <AmiBlitz3_noFPU_r470.ab3@25301>    BNE.w JL_0_E198
000341F6 <AmiBlitz3_noFPU_r470.ab3@25302>   MOVE.w $8(A3),temp1
000341FC <AmiBlitz3_noFPU_r470.ab3@25303>   MOVE.w proceduremode,D2
00034200 <AmiBlitz3_noFPU_r470.ab3@25304>    BNE.w JL_0_E176
00034206 <AmiBlitz3_noFPU_r470.ab3@25305>   MOVE.w globalvarpointer,-(A7)
0003420E <AmiBlitz3_noFPU_r470.ab3@25306>   MOVE.w $4(A3),globalvarpointer
00034214 <AmiBlitz3_noFPU_r470.ab3@25307>   ADDQ.w #4,globalvarpointer
00034218 <AmiBlitz3_noFPU_r470.ab3@25308>    BSR.w write_dim_code
0003421E <AmiBlitz3_noFPU_r470.ab3@25309>   MOVE.w (A7)+,globalvarpointer
00034222 <AmiBlitz3_noFPU_r470.ab3@25310> BRA.w JL_0_E1BA
00034228 <AmiBlitz3_noFPU_r470.ab3@25321>   MOVE.w globalvarpointer,-(A7)
0003422E <AmiBlitz3_noFPU_r470.ab3@25322>             MOVE.w proceduremode,-(a7)
00034234 <AmiBlitz3_noFPU_r470.ab3@25323>             CLR.w proceduremode
0003423C <AmiBlitz3_noFPU_r470.ab3@25324>   MOVE.w $4(A3),globalvarpointer
00034242 <AmiBlitz3_noFPU_r470.ab3@25325>   ADDQ.w #4,globalvarpointer
00034246 <AmiBlitz3_noFPU_r470.ab3@25326>    BSR.w write_dim_code
0003424C <AmiBlitz3_noFPU_r470.ab3@25327>    MOVE.w (a7)+,proceduremode
00034252 <AmiBlitz3_noFPU_r470.ab3@25328>   MOVE.w (A7)+,globalvarpointer
00034256 <AmiBlitz3_noFPU_r470.ab3@25329> BRA.w JL_0_E1BA
0003425E <AmiBlitz3_noFPU_r470.ab3@25332>   MOVE.w #$FFFF,temp1
00034262 <AmiBlitz3_noFPU_r470.ab3@25333>   MOVE.w listadd(PC),D1
00034266 <AmiBlitz3_noFPU_r470.ab3@25334>    BEQ.w JL_0_E1B6
0003426E <AmiBlitz3_noFPU_r470.ab3@25335>   MOVE.w #$4000,temp1
00034274 <AmiBlitz3_noFPU_r470.ab3@25336>   BSET #$0,$6(A3)
0003427A <AmiBlitz3_noFPU_r470.ab3@25339>         TST.w proceduremode
0003427E <AmiBlitz3_noFPU_r470.ab3@25340>        BNE 'l1
00034284 <AmiBlitz3_noFPU_r470.ab3@25341>        MOVE.w locvaroff,-(a7)
00034288 <AmiBlitz3_noFPU_r470.ab3@25344>   BSR.w write_dim_code
0003428E <AmiBlitz3_noFPU_r470.ab3@25345>         TST.w proceduremode
00034292 <AmiBlitz3_noFPU_r470.ab3@25346>         BNE JL_0_E1BA
00034298 <AmiBlitz3_noFPU_r470.ab3@25347>        MOVE.w (A7)+,locvaroff
0003429E <AmiBlitz3_noFPU_r470.ab3@25350>   JSR get1bytemain
000342A2 <AmiBlitz3_noFPU_r470.ab3@25351>   CMP.w #$2C,D0
000342A6 <AmiBlitz3_noFPU_r470.ab3@25352>    BNE.w JL_0_E1CE
000342AC <AmiBlitz3_noFPU_r470.ab3@25353>    JSR get1bytemain
000342B0 <AmiBlitz3_noFPU_r470.ab3@25354> BRA.w JL_0_E0FC
000342B2 <AmiBlitz3_noFPU_r470.ab3@25357> RTS
000342BA <AmiBlitz3_noFPU_r470.ab3@25360>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
000342C0 <AmiBlitz3_noFPU_r470.ab3@25361>   MOVE.w beginarr,D1
000342C6 <AmiBlitz3_noFPU_r470.ab3@25362>    JSR writeword
000342C8 <AmiBlitz3_noFPU_r470.ab3@25363>   MOVEQ.l #$00,D1
000342CE <AmiBlitz3_noFPU_r470.ab3@25364>    JSR writeword
000342D0 <AmiBlitz3_noFPU_r470.ab3@25365>   MOVEQ.l #$04,D1
000342D8 <AmiBlitz3_noFPU_r470.ab3@25366>   BTST #$0,flagmask+1
000342DC <AmiBlitz3_noFPU_r470.ab3@25367>    BNE.w write_dim_code__pointer
000342E0 <AmiBlitz3_noFPU_r470.ab3@25368>   MOVE.w $8(A2),D1
000342E4 <AmiBlitz3_noFPU_r470.ab3@25371>   ADD.w listadd(PC),D1                                     ;size of one element.
000342EA <AmiBlitz3_noFPU_r470.ab3@25372>   MOVE.w D1,listsize
000342F0 <AmiBlitz3_noFPU_r470.ab3@25373>    JSR writeword
000342F6 <AmiBlitz3_noFPU_r470.ab3@25374>   CLR.w temp2                                              ;# dim's got
000342F8 <AmiBlitz3_noFPU_r470.ab3@25375>   MOVE.l A3,-(A7)
000342FE <AmiBlitz3_noFPU_r470.ab3@25378>   ADDQ.w #1,temp2
00034300 <AmiBlitz3_noFPU_r470.ab3@25379>   MOVEQ.l #$03,D2                                          ;get word
00034306 <AmiBlitz3_noFPU_r470.ab3@25380>   MOVE.w notshared,-(a7)
0003430C <AmiBlitz3_noFPU_r470.ab3@25381>    JSR eval
00034312 <AmiBlitz3_noFPU_r470.ab3@25382>   MOVE.w (a7)+,notshared
00034318 <AmiBlitz3_noFPU_r470.ab3@25383>   TST.b debugmode
0003431C <AmiBlitz3_noFPU_r470.ab3@25384>    BEQ.w write_dim_code__norerr0
00034320 <AmiBlitz3_noFPU_r470.ab3@25385>   MOVE.w #$C30F,D1
00034324 <AmiBlitz3_noFPU_r470.ab3@25391>       MOVE.w #$5281,d1
0003432A <AmiBlitz3_noFPU_r470.ab3@25392>       JSR writeword
00034330 <AmiBlitz3_noFPU_r470.ab3@25393>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034336 <AmiBlitz3_noFPU_r470.ab3@25394>       JSR writelong
0003433C <AmiBlitz3_noFPU_r470.ab3@25395>   MOVE.w proceduremode,D2
00034340 <AmiBlitz3_noFPU_r470.ab3@25396>    BEQ.w write_dim_code__global
00034346 <AmiBlitz3_noFPU_r470.ab3@25397>   SUBQ.w #4,locvaroff
00034350 <AmiBlitz3_noFPU_r470.ab3@25398>   MOVE.w locvaroff,putarr+2
00034354 <AmiBlitz3_noFPU_r470.ab3@25399> BRA.w write_dim_code__doit
0003435A <AmiBlitz3_noFPU_r470.ab3@25402> JMP syntaxerr
00034364 <AmiBlitz3_noFPU_r470.ab3@25405>   MOVE.w globalvarpointer,putarr+2
0003436A <AmiBlitz3_noFPU_r470.ab3@25406>   ADDQ.w #4,globalvarpointer
00034370 <AmiBlitz3_noFPU_r470.ab3@25409>   TST.b dimkeep
00034374 <AmiBlitz3_noFPU_r470.ab3@25410>            BEQ write_dim_code__doit_l1
00034376 <AmiBlitz3_noFPU_r470.ab3@25411>       MOVEQ #0,d1
0003437C <AmiBlitz3_noFPU_r470.ab3@25412>       MOVE.w putarr+2,d1
00034382 <AmiBlitz3_noFPU_r470.ab3@25413>       OR.l  #$222d0000,d1
00034388 <AmiBlitz3_noFPU_r470.ab3@25414>       MOVE.w proceduremode,D2
0003438C <AmiBlitz3_noFPU_r470.ab3@25415>       BEQ write_dim_code__doit_l2
00034392 <AmiBlitz3_noFPU_r470.ab3@25416>       TST.w notshared
00034396 <AmiBlitz3_noFPU_r470.ab3@25417>       BEQ write_dim_code__doit_l2
0003439C <AmiBlitz3_noFPU_r470.ab3@25418>       SUB.l #$00010000,d1
000343A2 <AmiBlitz3_noFPU_r470.ab3@25421>   JSR writelong
000343A8 <AmiBlitz3_noFPU_r470.ab3@25424>   MOVE.l putarr,D1
000343AE <AmiBlitz3_noFPU_r470.ab3@25425>       TST.w notshared
000343B2 <AmiBlitz3_noFPU_r470.ab3@25426>       BNE write_dim_code__doit_l1a
000343B8 <AmiBlitz3_noFPU_r470.ab3@25427>       JSR writelong
000343BC <AmiBlitz3_noFPU_r470.ab3@25428> BRA write_dim_code__doit_l4
000343C2 <AmiBlitz3_noFPU_r470.ab3@25431>   JSR pokela5d
000343C6 <AmiBlitz3_noFPU_r470.ab3@25434>   CMP.w #$2C,D0
000343CA <AmiBlitz3_noFPU_r470.ab3@25435>    BEQ.w write_dim_code__loop
000343CE <AmiBlitz3_noFPU_r470.ab3@25436>   CMP.w #$29,D0
000343D2 <AmiBlitz3_noFPU_r470.ab3@25437>    BNE.w JUMP_syntaxerr
000343D4 <AmiBlitz3_noFPU_r470.ab3@25438>   MOVEA.l (A7)+,A3
000343DA <AmiBlitz3_noFPU_r470.ab3@25439>   MOVE.w temp1,D1
000343DE <AmiBlitz3_noFPU_r470.ab3@25440>    BMI.w write_dim_code__nocare
000343E2 <AmiBlitz3_noFPU_r470.ab3@25444>   BTST #$E,D1
000343E6 <AmiBlitz3_noFPU_r470.ab3@25445>    BEQ.w write_dim_code__notl
000343EE <AmiBlitz3_noFPU_r470.ab3@25446>   CMPI.w #$1,temp2
000343F2 <AmiBlitz3_noFPU_r470.ab3@25447>    BNE.w JUMP_redimerr
000343F6 <AmiBlitz3_noFPU_r470.ab3@25448> BRA.w write_dim_code__nocare
000343FC <AmiBlitz3_noFPU_r470.ab3@25451> JMP redimerr
00034402 <AmiBlitz3_noFPU_r470.ab3@25454>   CMP.w temp2,D1
00034406 <AmiBlitz3_noFPU_r470.ab3@25455>    BNE.w JUMP_redimerr                                      ;range too long
0003440C <AmiBlitz3_noFPU_r470.ab3@25458>   LEA globalvarpointer,A0
00034412 <AmiBlitz3_noFPU_r470.ab3@25459>   MOVE.w proceduremode,D1
00034416 <AmiBlitz3_noFPU_r470.ab3@25460>   BEQ.w write_dim_code__gskip
0003441C <AmiBlitz3_noFPU_r470.ab3@25461>   LEA locvaroff,A0
00034422 <AmiBlitz3_noFPU_r470.ab3@25464>   MOVE.W  extraword,(A0)
00034426 <AmiBlitz3_noFPU_r470.ab3@25465>   BRA.W   write_dim_code__care
0003442E <AmiBlitz3_noFPU_r470.ab3@25468>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034434 <AmiBlitz3_noFPU_r470.ab3@25471>   LEA doarr,A0
0003443A <AmiBlitz3_noFPU_r470.ab3@25472>   MOVE.w $4(A3),$2(A0)
00034442 <AmiBlitz3_noFPU_r470.ab3@25473>   MOVE.w putarr+2,$6(A0)
00034444 <AmiBlitz3_noFPU_r470.ab3@25474>   MOVE.l (A0)+,D1
0003444A <AmiBlitz3_noFPU_r470.ab3@25475>    JSR writelong
0003444C <AmiBlitz3_noFPU_r470.ab3@25476>   MOVE.l (A0),D1
00034452 <AmiBlitz3_noFPU_r470.ab3@25477>    JSR writelong
00034458 <AmiBlitz3_noFPU_r470.ab3@25478>    TST.b dimkeep
0003445C <AmiBlitz3_noFPU_r470.ab3@25479>   BNE write_dim_code__care_l3
00034460 <AmiBlitz3_noFPU_r470.ab3@25482>   MOVE.w #$C400,D1
00034464 <AmiBlitz3_noFPU_r470.ab3@25483> BRA write_dim_code__care_l2
00034468 <AmiBlitz3_noFPU_r470.ab3@25486>   MOVE.w #$C405,d1
0003446E <AmiBlitz3_noFPU_r470.ab3@25489>   MOVE.w proceduremode,D2
00034472 <AmiBlitz3_noFPU_r470.ab3@25490>    BEQ.w write_dim_code__isg
00034478 <AmiBlitz3_noFPU_r470.ab3@25491>    TST.w notshared
0003447C <AmiBlitz3_noFPU_r470.ab3@25492>    BEQ write_dim_code__isg
0003447E <AmiBlitz3_noFPU_r470.ab3@25493>   ADDQ.w #1,D1
00034482 <AmiBlitz3_noFPU_r470.ab3@25496>   MOVE.w listadd(PC),D2
00034486 <AmiBlitz3_noFPU_r470.ab3@25497>    BEQ.w write_dim_code__isrg
00034488 <AmiBlitz3_noFPU_r470.ab3@25498>   MOVE.w D1,-(A7)
0003448C <AmiBlitz3_noFPU_r470.ab3@25499>   MOVE.w setles(PC),D1
00034492 <AmiBlitz3_noFPU_r470.ab3@25500>    JSR writeword
00034496 <AmiBlitz3_noFPU_r470.ab3@25501>   MOVE.w listsize(PC),D1
0003449C <AmiBlitz3_noFPU_r470.ab3@25502>    JSR writeword
0003449E <AmiBlitz3_noFPU_r470.ab3@25503>   MOVE.w (A7)+,D1
000344A0 <AmiBlitz3_noFPU_r470.ab3@25504>   ADDQ.w #3,D1
000344A4 <AmiBlitz3_noFPU_r470.ab3@25507> BRA.w Atokejsr
000344AA <AmiBlitz3_noFPU_r470.ab3@25514>     MOVE.l #$f23c4400,d1
000344B0 <AmiBlitz3_noFPU_r470.ab3@25516>   MOVE.w regnum,d0
000344B2 <AmiBlitz3_noFPU_r470.ab3@25517>   ASL.w #7,d0
000344B4 <AmiBlitz3_noFPU_r470.ab3@25518>   OR.w d0,d1
000344BA <AmiBlitz3_noFPU_r470.ab3@25519>   JSR writelong
000344C0 <AmiBlitz3_noFPU_r470.ab3@25525>     MOVE.l #$40490fd9,d1
000344C6 <AmiBlitz3_noFPU_r470.ab3@25527>   JSR writelong
000344CC <AmiBlitz3_noFPU_r470.ab3@25528> JMP get1bytemain
000344D0 <AmiBlitz3_noFPU_r470.ab3@25532> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
000344D4 <AmiBlitz3_noFPU_r470.ab3@25539> vbr:                Ds.l 1
000344D6 <AmiBlitz3_noFPU_r470.ab3@25540> cfetchmode:         Ds.w 1                               ;1=fetching a constant
000344DC <AmiBlitz3_noFPU_r470.ab3@25542> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
000344E0 <AmiBlitz3_noFPU_r470.ab3@25546> constpcat:          Ds.l 1
000344E4 <AmiBlitz3_noFPU_r470.ab3@25547> constlibat:         Ds.l 1
000344E8 <AmiBlitz3_noFPU_r470.ab3@25548> constmaxpc:         Dc.l $400
000344EC <AmiBlitz3_noFPU_r470.ab3@25550> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
000344F0 <AmiBlitz3_noFPU_r470.ab3@25551> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
000344F4 <AmiBlitz3_noFPU_r470.ab3@25552> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
000344F8 <AmiBlitz3_noFPU_r470.ab3@25553> lastrestype:        Dc.l newtype_string
000344FA <AmiBlitz3_noFPU_r470.ab3@25554> rescnt:             Ds.w 1                               ;# resident
000344FC <AmiBlitz3_noFPU_r470.ab3@25555> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034500 <AmiBlitz3_noFPU_r470.ab3@25556> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034502 <AmiBlitz3_noFPU_r470.ab3@25557> linedone:           Ds.w 1
00034518 <AmiBlitz3_noFPU_r470.ab3@25558> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
0003451C <AmiBlitz3_noFPU_r470.ab3@25567>   Dc.l 0                                        ; bytetobyte
00034520 <AmiBlitz3_noFPU_r470.ab3@25568>   Dc.l convert_byte_to_word                     ; bytetoword
00034524 <AmiBlitz3_noFPU_r470.ab3@25569>   Dc.l convert_byte_to_long                     ; bytetolong
00034528 <AmiBlitz3_noFPU_r470.ab3@25570>   Dc.l convert_byte_to_quick                    ; bytetoquick
0003452C <AmiBlitz3_noFPU_r470.ab3@25571>   Dc.l convert_byte_to_float                    ; bytetofloat
00034530 <AmiBlitz3_noFPU_r470.ab3@25572>   Dc.l convert_byte_to_long                     ; bytetolong
00034534 <AmiBlitz3_noFPU_r470.ab3@25573>   Dc.l error_convert_types                      ; noconerr
00034538 <AmiBlitz3_noFPU_r470.ab3@25576>   Dc.l convert_word_to_byte                     ; wordtobyte
0003453C <AmiBlitz3_noFPU_r470.ab3@25577>   Dc.l 0                                        ; wordtoword
00034540 <AmiBlitz3_noFPU_r470.ab3@25578>   Dc.l convert_word_to_long                     ; wordtolong
00034544 <AmiBlitz3_noFPU_r470.ab3@25579>   Dc.l convert_word_to_quick                    ; wordtoquick
00034548 <AmiBlitz3_noFPU_r470.ab3@25580>   Dc.l convert_word_to_float                    ; wordtofloat
0003454C <AmiBlitz3_noFPU_r470.ab3@25581>   Dc.l convert_word_to_long                     ; wordtolong
00034550 <AmiBlitz3_noFPU_r470.ab3@25582>   Dc.l error_convert_types                      ; noconerr
00034554 <AmiBlitz3_noFPU_r470.ab3@25585>   Dc.l convert_long_to_byte                     ; longtobyte
00034558 <AmiBlitz3_noFPU_r470.ab3@25586>   Dc.l convert_long_to_word                     ; longtoword
0003455C <AmiBlitz3_noFPU_r470.ab3@25587>   Dc.l 0                                        ; longtolong
00034560 <AmiBlitz3_noFPU_r470.ab3@25588>   Dc.l convert_long_to_quick                    ; longtoquick
00034564 <AmiBlitz3_noFPU_r470.ab3@25589>   Dc.l convert_long_to_float                    ; longtofloat
00034568 <AmiBlitz3_noFPU_r470.ab3@25590>   Dc.l 0                                        ; longtolong
0003456C <AmiBlitz3_noFPU_r470.ab3@25591>   Dc.l error_convert_types                      ; noconerr
00034570 <AmiBlitz3_noFPU_r470.ab3@25594>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034574 <AmiBlitz3_noFPU_r470.ab3@25595>   Dc.l convert_quick_to_word                    ; quicktoword
00034578 <AmiBlitz3_noFPU_r470.ab3@25596>   Dc.l convert_quick_to_long                    ; quicktolong
0003457C <AmiBlitz3_noFPU_r470.ab3@25597>   Dc.l 0                                        ; quicktoquick
00034580 <AmiBlitz3_noFPU_r470.ab3@25598>   Dc.l convert_quick_to_float                   ; quicktofloat
00034584 <AmiBlitz3_noFPU_r470.ab3@25599>   Dc.l convert_quick_to_long                    ; quicktolong
00034588 <AmiBlitz3_noFPU_r470.ab3@25600>   Dc.l error_convert_types                      ; noconerr
0003458C <AmiBlitz3_noFPU_r470.ab3@25603>   Dc.l convert_float_to_byte                    ; floattobyte
00034590 <AmiBlitz3_noFPU_r470.ab3@25604>   Dc.l convert_float_to_word                    ; floattoword
00034594 <AmiBlitz3_noFPU_r470.ab3@25605>   Dc.l convert_float_to_long                    ; floattolong
00034598 <AmiBlitz3_noFPU_r470.ab3@25606>   Dc.l convert_float_to_quick                   ; floattoquick
0003459C <AmiBlitz3_noFPU_r470.ab3@25607>   Dc.l 0                                        ; floattofloat
000345A0 <AmiBlitz3_noFPU_r470.ab3@25608>   Dc.l convert_float_to_long                    ; floattolong
000345A4 <AmiBlitz3_noFPU_r470.ab3@25609>   Dc.l error_convert_types                      ; noconerr
000345A8 <AmiBlitz3_noFPU_r470.ab3@25612>   Dc.l convert_long_to_byte                     ; longtobyte
000345AC <AmiBlitz3_noFPU_r470.ab3@25613>   Dc.l convert_long_to_word                     ; longtoword
000345B0 <AmiBlitz3_noFPU_r470.ab3@25614>   Dc.l 0                                        ; longtolong
000345B4 <AmiBlitz3_noFPU_r470.ab3@25615>   Dc.l convert_long_to_quick                    ; longtoquick
000345B8 <AmiBlitz3_noFPU_r470.ab3@25616>   Dc.l convert_long_to_float                    ; longtofloat
000345BC <AmiBlitz3_noFPU_r470.ab3@25617>   Dc.l 0                                        ; longtolong
000345C0 <AmiBlitz3_noFPU_r470.ab3@25618>   Dc.l error_convert_types                      ; noconerr
000345C4 <AmiBlitz3_noFPU_r470.ab3@25621>   Dc.l error_convert_types                      ; noconerr
000345C8 <AmiBlitz3_noFPU_r470.ab3@25622>   Dc.l error_convert_types                      ; noconerr
000345CC <AmiBlitz3_noFPU_r470.ab3@25623>   Dc.l string_to_long                           ; stringtolong
000345D0 <AmiBlitz3_noFPU_r470.ab3@25624>   Dc.l error_convert_types                      ; noconerr
000345D4 <AmiBlitz3_noFPU_r470.ab3@25625>   Dc.l error_convert_types                      ; noconerr
000345D8 <AmiBlitz3_noFPU_r470.ab3@25626>   Dc.l string_to_long                           ; stringtolong
000345DC <AmiBlitz3_noFPU_r470.ab3@25627>   Ds.l 1
000345DE <AmiBlitz3_noFPU_r470.ab3@25633>   Dc.b $00,$2B                                  ;+ ; add
000345E2 <AmiBlitz3_noFPU_r470.ab3@25634>   Dc.l do_plus_byte                             ;doplusb
000345E6 <AmiBlitz3_noFPU_r470.ab3@25635>   Dc.l do_plus_word                             ;doplusw
000345EA <AmiBlitz3_noFPU_r470.ab3@25636>   Dc.l do_plus_long                             ;doplusl
000345EE <AmiBlitz3_noFPU_r470.ab3@25637>   Dc.l do_plus_long                             ;doplusl
000345F2 <AmiBlitz3_noFPU_r470.ab3@25638>   Dc.l do_plus_float                            ;doplusf
000345F6 <AmiBlitz3_noFPU_r470.ab3@25639>   Ds.l 1
000345FA <AmiBlitz3_noFPU_r470.ab3@25640>   Dc.l add_strings                              ;addstrings
000345FC <AmiBlitz3_noFPU_r470.ab3@25641>   Dc.b $0B,$B8
000345FE <AmiBlitz3_noFPU_r470.ab3@25643>   Dc.b $00,$2D                                  ;- ; sub
00034602 <AmiBlitz3_noFPU_r470.ab3@25644>   Dc.l do_minus_byte                            ;dominusb
00034606 <AmiBlitz3_noFPU_r470.ab3@25645>   Dc.l do_minus_word                            ;dominusw
0003460A <AmiBlitz3_noFPU_r470.ab3@25646>   Dc.l do_minus_long                            ;dominusl
0003460E <AmiBlitz3_noFPU_r470.ab3@25647>   Dc.l do_minus_long                            ;dominusl
00034612 <AmiBlitz3_noFPU_r470.ab3@25648>   Dc.l do_minus_float                           ;dominusf
0003461A <AmiBlitz3_noFPU_r470.ab3@25649>   Ds.l 2
0003461C <AmiBlitz3_noFPU_r470.ab3@25650>   Dc.b $0B,$B8
0003461E <AmiBlitz3_noFPU_r470.ab3@25652>   Dc.b $00,$2A                                  ;* ; mul
00034622 <AmiBlitz3_noFPU_r470.ab3@25653>   Dc.l do_times_byte                            ;dotimesb
00034626 <AmiBlitz3_noFPU_r470.ab3@25654>   Dc.l do_times_word                            ;dotimesw
0003462A <AmiBlitz3_noFPU_r470.ab3@25655>   Dc.l do_times_long                            ;dotimesl
0003462E <AmiBlitz3_noFPU_r470.ab3@25656>   Dc.l do_times_quick                           ;dotimesq
00034632 <AmiBlitz3_noFPU_r470.ab3@25657>   Dc.l do_times_float                           ;dotimesf
0003463A <AmiBlitz3_noFPU_r470.ab3@25658>   Ds.l 2
0003463C <AmiBlitz3_noFPU_r470.ab3@25659>   Dc.b $0F,$A0
0003463E <AmiBlitz3_noFPU_r470.ab3@25661>   Dc.b $00,$2F                                  ;/ ; div
00034642 <AmiBlitz3_noFPU_r470.ab3@25662>   Dc.l do_Div_byte                              ;dodivb
00034646 <AmiBlitz3_noFPU_r470.ab3@25663>   Dc.l do_Div_word                              ;dodivb
0003464A <AmiBlitz3_noFPU_r470.ab3@25664>   Dc.l do_Div_long                              ;dodivl
0003464E <AmiBlitz3_noFPU_r470.ab3@25665>   Dc.l do_Div_quick                             ;dodivq
00034652 <AmiBlitz3_noFPU_r470.ab3@25666>   Dc.l do_Div_float                             ;dodivf
0003465A <AmiBlitz3_noFPU_r470.ab3@25667>   Ds.l 2
0003465C <AmiBlitz3_noFPU_r470.ab3@25668>   Dc.b $0F,$A0
0003465E <AmiBlitz3_noFPU_r470.ab3@25670>   Dc.b $00,$26                                  ;& ; & int
00034662 <AmiBlitz3_noFPU_r470.ab3@25671>   Dc.l do_AND_byte                              ;doandb
00034666 <AmiBlitz3_noFPU_r470.ab3@25672>   Dc.l do_AND_word                              ;doandw
0003466A <AmiBlitz3_noFPU_r470.ab3@25673>   Dc.l do_AND_long                              ;doandl
0003466E <AmiBlitz3_noFPU_r470.ab3@25674>   Dc.l do_AND_long                              ;doandl
0003467A <AmiBlitz3_noFPU_r470.ab3@25675>   Ds.l 3
0003467C <AmiBlitz3_noFPU_r470.ab3@25676>   Dc.b $13,$88
0003467E <AmiBlitz3_noFPU_r470.ab3@25678>   Dc.b $00,$7C                                  ;| ;or int ;
00034682 <AmiBlitz3_noFPU_r470.ab3@25679>   Dc.l do_OR_byte                               ;doorb
00034686 <AmiBlitz3_noFPU_r470.ab3@25680>   Dc.l do_OR_word                               ;doorw
0003468A <AmiBlitz3_noFPU_r470.ab3@25681>   Dc.l do_OR_long                               ;doorl
0003468E <AmiBlitz3_noFPU_r470.ab3@25682>   Dc.l do_OR_long                               ;doorl
0003469A <AmiBlitz3_noFPU_r470.ab3@25683>   Ds.l 3
0003469C <AmiBlitz3_noFPU_r470.ab3@25684>   Dc.b $13,$88
0003469E <AmiBlitz3_noFPU_r470.ab3@25686>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
000346A2 <AmiBlitz3_noFPU_r470.ab3@25687>   Dc.l do_AND_byte                              ;doandb
000346A6 <AmiBlitz3_noFPU_r470.ab3@25688>   Dc.l do_AND_word                              ;doandw
000346AA <AmiBlitz3_noFPU_r470.ab3@25689>   Dc.l do_AND_long                              ;doandl
000346AE <AmiBlitz3_noFPU_r470.ab3@25690>   Dc.l do_AND_long                              ;doandl
000346BA <AmiBlitz3_noFPU_r470.ab3@25691>   Ds.l 3
000346BC <AmiBlitz3_noFPU_r470.ab3@25692>   Dc.b $03,$E8
000346BE <AmiBlitz3_noFPU_r470.ab3@25694>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
000346C2 <AmiBlitz3_noFPU_r470.ab3@25695>   Dc.l do_OR_byte                               ;doorb
000346C6 <AmiBlitz3_noFPU_r470.ab3@25696>   Dc.l do_OR_word                               ;doorw
000346CA <AmiBlitz3_noFPU_r470.ab3@25697>   Dc.l do_OR_long                               ;doorl
000346CE <AmiBlitz3_noFPU_r470.ab3@25698>   Dc.l do_OR_long                               ;doorl
000346DA <AmiBlitz3_noFPU_r470.ab3@25699>   Ds.l 3
000346DC <AmiBlitz3_noFPU_r470.ab3@25700>   Dc.b $03,$E8
000346DE <AmiBlitz3_noFPU_r470.ab3@25702>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
000346E2 <AmiBlitz3_noFPU_r470.ab3@25703>   Dc.l do_EOR_byte                              ;doeorb
000346E6 <AmiBlitz3_noFPU_r470.ab3@25704>   Dc.l do_EOR_word                              ;doeorw
000346EA <AmiBlitz3_noFPU_r470.ab3@25705>   Dc.l do_EOR_long                              ;doeorl
000346EE <AmiBlitz3_noFPU_r470.ab3@25706>   Dc.l do_EOR_long                              ;doeorl
000346FA <AmiBlitz3_noFPU_r470.ab3@25707>   Ds.l 3
000346FC <AmiBlitz3_noFPU_r470.ab3@25708>   Dc.b $03,$E8
000346FE <AmiBlitz3_noFPU_r470.ab3@25710>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00034702 <AmiBlitz3_noFPU_r470.ab3@25711>   Dc.l do_LSL                                   ;dolslb
00034706 <AmiBlitz3_noFPU_r470.ab3@25712>   Dc.l do_LSL                                   ;dolslw
0003470A <AmiBlitz3_noFPU_r470.ab3@25713>   Dc.l do_LSL                                   ;dolsll
0003470E <AmiBlitz3_noFPU_r470.ab3@25714>   Dc.l do_LSL                                   ;dolsll
0003471A <AmiBlitz3_noFPU_r470.ab3@25715>   Ds.l 3
0003471C <AmiBlitz3_noFPU_r470.ab3@25716>   Dc.b $17,$70
0003471E <AmiBlitz3_noFPU_r470.ab3@25718>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00034722 <AmiBlitz3_noFPU_r470.ab3@25719>   Dc.l do_LSL                                   ;dolslb
00034726 <AmiBlitz3_noFPU_r470.ab3@25720>   Dc.l do_LSL                                   ;dolslw
0003472A <AmiBlitz3_noFPU_r470.ab3@25721>   Dc.l do_LSL                                   ;dolsll
0003472E <AmiBlitz3_noFPU_r470.ab3@25722>   Dc.l do_LSL                                   ;dolsll
0003473A <AmiBlitz3_noFPU_r470.ab3@25723>   Ds.l 3
0003473C <AmiBlitz3_noFPU_r470.ab3@25724>   Dc.b $17,$70
0003473E <AmiBlitz3_noFPU_r470.ab3@25726>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00034742 <AmiBlitz3_noFPU_r470.ab3@25727>   Dc.l do_LSR                                   ;dolsrb
00034746 <AmiBlitz3_noFPU_r470.ab3@25728>   Dc.l do_LSR                                   ;dolsrw
0003474A <AmiBlitz3_noFPU_r470.ab3@25729>   Dc.l do_LSR                                   ;dolsrl
0003474E <AmiBlitz3_noFPU_r470.ab3@25730>   Dc.l do_LSR                                   ;dolsrl
0003475A <AmiBlitz3_noFPU_r470.ab3@25731>   Ds.l 3
0003475C <AmiBlitz3_noFPU_r470.ab3@25732>   Dc.b $17,$70
0003475E <AmiBlitz3_noFPU_r470.ab3@25734>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034762 <AmiBlitz3_noFPU_r470.ab3@25735>   Dc.l do_ASR                                   ;doasrb
00034766 <AmiBlitz3_noFPU_r470.ab3@25736>   Dc.l do_ASR                                   ;doasrw
0003476A <AmiBlitz3_noFPU_r470.ab3@25737>   Dc.l do_ASR                                   ;doasrl
0003476E <AmiBlitz3_noFPU_r470.ab3@25738>   Dc.l do_ASR                                   ;doasrl
0003477A <AmiBlitz3_noFPU_r470.ab3@25739>   Ds.l 3
0003477C <AmiBlitz3_noFPU_r470.ab3@25740>   Dc.b $17,$70
0003477E <AmiBlitz3_noFPU_r470.ab3@25742>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034782 <AmiBlitz3_noFPU_r470.ab3@25743>   Dc.l do_mod_byte                              ;domodb
00034786 <AmiBlitz3_noFPU_r470.ab3@25744>   Dc.l do_mod_word                              ;domodw
0003478A <AmiBlitz3_noFPU_r470.ab3@25745>   Dc.l do_mod_long                              ;domodl
0003478E <AmiBlitz3_noFPU_r470.ab3@25746>   Dc.l do_mod_quick                             ;domodq
00034792 <AmiBlitz3_noFPU_r470.ab3@25747>   Dc.l do_mod_float                             ;domodf
0003479A <AmiBlitz3_noFPU_r470.ab3@25748>   Ds.l 2
0003479C <AmiBlitz3_noFPU_r470.ab3@25749>   Dc.b $13,$88
0003479E <AmiBlitz3_noFPU_r470.ab3@25752>   Dc.b $00,$5E                                  ;^
000347A2 <AmiBlitz3_noFPU_r470.ab3@25753>   Dc.l do_pow                                   ;dopow
000347A6 <AmiBlitz3_noFPU_r470.ab3@25754>   Dc.l do_pow                                   ;dopow
000347AA <AmiBlitz3_noFPU_r470.ab3@25755>   Dc.l do_pow                                   ;dopow
000347AE <AmiBlitz3_noFPU_r470.ab3@25756>   Dc.l do_pow                                   ;dopow
000347B2 <AmiBlitz3_noFPU_r470.ab3@25757>   Dc.l do_pow                                   ;dopow
000347BA <AmiBlitz3_noFPU_r470.ab3@25758>   Ds.l 2
000347BC <AmiBlitz3_noFPU_r470.ab3@25759>   Dc.b $1B,$58                                  ;7000
000347BE <AmiBlitz3_noFPU_r470.ab3@25762>   Dc.b $00,$3D                                  ;=
000347C2 <AmiBlitz3_noFPU_r470.ab3@25763>   Dc.l do_equal_byte                            ;doeqb
000347C6 <AmiBlitz3_noFPU_r470.ab3@25764>   Dc.l do_equal_word                            ;doeqw
000347CA <AmiBlitz3_noFPU_r470.ab3@25765>   Dc.l do_equal_long                            ;doeql
000347CE <AmiBlitz3_noFPU_r470.ab3@25766>   Dc.l do_equal_long                            ;doeql
000347D2 <AmiBlitz3_noFPU_r470.ab3@25767>   Dc.l do_equal_float                           ;doeqf
000347D6 <AmiBlitz3_noFPU_r470.ab3@25768>   Dc.l do_equal_long                            ;doeql
000347DA <AmiBlitz3_noFPU_r470.ab3@25769>   Dc.l do_equal_string                          ;doeqs
000347DC <AmiBlitz3_noFPU_r470.ab3@25770>   Dc.b $07,$D0                                  ;2000
000347DE <AmiBlitz3_noFPU_r470.ab3@25773>   Dc.b $3C,$3E                                  ;<>
000347E2 <AmiBlitz3_noFPU_r470.ab3@25774>   Dc.l do_not_equal_byte                        ;doneb
000347E6 <AmiBlitz3_noFPU_r470.ab3@25775>   Dc.l do_not_equal_word                        ;donew
000347EA <AmiBlitz3_noFPU_r470.ab3@25776>   Dc.l do_not_equal_long                        ;donel
000347EE <AmiBlitz3_noFPU_r470.ab3@25777>   Dc.l do_not_equal_long                        ;donel
000347F2 <AmiBlitz3_noFPU_r470.ab3@25778>   Dc.l do_not_equal_float                       ;donef
000347F6 <AmiBlitz3_noFPU_r470.ab3@25779>   Dc.l do_not_equal_long                        ;donel
000347FA <AmiBlitz3_noFPU_r470.ab3@25780>   Dc.l do_not_equal_string                      ;dones
000347FC <AmiBlitz3_noFPU_r470.ab3@25781>   Dc.b $07,$D0                                  ;2000
000347FE <AmiBlitz3_noFPU_r470.ab3@25784>   Dc.b $00,$3C                                  ;<
00034802 <AmiBlitz3_noFPU_r470.ab3@25785>   Dc.l do_littler_byte                          ;doltb
00034806 <AmiBlitz3_noFPU_r470.ab3@25786>   Dc.l do_littler_word                          ;doltw
0003480A <AmiBlitz3_noFPU_r470.ab3@25787>   Dc.l do_littler_long                          ;doltl
0003480E <AmiBlitz3_noFPU_r470.ab3@25788>   Dc.l do_littler_long                          ;doltl
00034812 <AmiBlitz3_noFPU_r470.ab3@25789>   Dc.l do_littler_float                         ;doltf
00034816 <AmiBlitz3_noFPU_r470.ab3@25790>   Dc.l do_littler_long                          ;doltl
0003481A <AmiBlitz3_noFPU_r470.ab3@25791>   Dc.l do_littler_string                        ;dolts
0003481C <AmiBlitz3_noFPU_r470.ab3@25792>   Dc.b $07,$D0                                  ;2000
0003481E <AmiBlitz3_noFPU_r470.ab3@25795>   Dc.b $3C,$3D                                  ;<=
00034822 <AmiBlitz3_noFPU_r470.ab3@25796>   Dc.l do_littler_equal_byte                    ;doleb
00034826 <AmiBlitz3_noFPU_r470.ab3@25797>   Dc.l do_littler_equal_word                    ;doleb
0003482A <AmiBlitz3_noFPU_r470.ab3@25798>   Dc.l do_littler_equal_long                    ;dolel
0003482E <AmiBlitz3_noFPU_r470.ab3@25799>   Dc.l do_littler_equal_long                    ;dolel
00034832 <AmiBlitz3_noFPU_r470.ab3@25800>   Dc.l do_littler_equal_float                   ;dolef
00034836 <AmiBlitz3_noFPU_r470.ab3@25801>   Dc.l do_littler_equal_long                    ;dolel
0003483A <AmiBlitz3_noFPU_r470.ab3@25802>   Dc.l do_littler_equal_string                  ;doles
0003483C <AmiBlitz3_noFPU_r470.ab3@25803>   Dc.b $07,$D0                                  ;2000
0003483E <AmiBlitz3_noFPU_r470.ab3@25806>   Dc.b $00,$3E                                  ;>
00034842 <AmiBlitz3_noFPU_r470.ab3@25807>   Dc.l do_greater_byte                          ;dogtb
00034846 <AmiBlitz3_noFPU_r470.ab3@25808>   Dc.l do_greater_word                          ;dogtw
0003484A <AmiBlitz3_noFPU_r470.ab3@25809>   Dc.l do_greater_long                          ;dogtl
0003484E <AmiBlitz3_noFPU_r470.ab3@25810>   Dc.l do_greater_long                          ;dogtl
00034852 <AmiBlitz3_noFPU_r470.ab3@25811>   Dc.l do_greater_float                         ;dogtf
00034856 <AmiBlitz3_noFPU_r470.ab3@25812>   Dc.l do_greater_long                          ;dogtl
0003485A <AmiBlitz3_noFPU_r470.ab3@25813>   Dc.l do_greater_string                        ;dogts
0003485C <AmiBlitz3_noFPU_r470.ab3@25814>   Dc.b $07,$D0                                  ;2000
0003485E <AmiBlitz3_noFPU_r470.ab3@25817>   Dc.b $3E,$3D                                  ;>=
00034862 <AmiBlitz3_noFPU_r470.ab3@25818>   Dc.l do_greater_equal_byte                    ;dogeb
00034866 <AmiBlitz3_noFPU_r470.ab3@25819>   Dc.l do_greater_equal_word                    ;dogew
0003486A <AmiBlitz3_noFPU_r470.ab3@25820>   Dc.l do_greater_equal_long                    ;dogel
0003486E <AmiBlitz3_noFPU_r470.ab3@25821>   Dc.l do_greater_equal_long                    ;dogel
00034872 <AmiBlitz3_noFPU_r470.ab3@25822>   Dc.l do_greater_equal_float                   ;dogef
00034876 <AmiBlitz3_noFPU_r470.ab3@25823>   Dc.l do_greater_equal_long                    ;dogel
0003487A <AmiBlitz3_noFPU_r470.ab3@25824>   Dc.l do_greater_equal_string                  ;doges
0003487C <AmiBlitz3_noFPU_r470.ab3@25825>   Dc.b $07,$D0                                  ;2000
0003487E <AmiBlitz3_noFPU_r470.ab3@25827>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034882 <AmiBlitz3_noFPU_r470.ab3@25828>   Dc.l _BitTst
00034886 <AmiBlitz3_noFPU_r470.ab3@25829>   Dc.l _BitTst
0003488A <AmiBlitz3_noFPU_r470.ab3@25830>   Dc.l _BitTst
0003488E <AmiBlitz3_noFPU_r470.ab3@25831>   Dc.l _BitTst
0003489A <AmiBlitz3_noFPU_r470.ab3@25832>   Ds.l 3
0003489C <AmiBlitz3_noFPU_r470.ab3@25833>   Dc.b $1F,$40                                  ;8000
0003489E <AmiBlitz3_noFPU_r470.ab3@25835>   Dc.b $80,$CE                                  ;$8000+27+tnum
000348A2 <AmiBlitz3_noFPU_r470.ab3@25836>   Dc.l _BitSet
000348A6 <AmiBlitz3_noFPU_r470.ab3@25837>   Dc.l _BitSet
000348AA <AmiBlitz3_noFPU_r470.ab3@25838>   Dc.l _BitSet
000348AE <AmiBlitz3_noFPU_r470.ab3@25839>   Dc.l _BitSet
000348BA <AmiBlitz3_noFPU_r470.ab3@25840>   Ds.l 3
000348BC <AmiBlitz3_noFPU_r470.ab3@25841>   Dc.b $1F,$40                                  ;8000
000348BE <AmiBlitz3_noFPU_r470.ab3@25843>   Dc.b $80,$CF                                  ;$8000+28+tnum
000348C2 <AmiBlitz3_noFPU_r470.ab3@25844>   Dc.l _BitClr
000348C6 <AmiBlitz3_noFPU_r470.ab3@25845>   Dc.l _BitClr
000348CA <AmiBlitz3_noFPU_r470.ab3@25846>   Dc.l _BitClr
000348CE <AmiBlitz3_noFPU_r470.ab3@25847>   Dc.l _BitClr
000348DA <AmiBlitz3_noFPU_r470.ab3@25848>   Ds.l 3
000348DC <AmiBlitz3_noFPU_r470.ab3@25849>   Dc.b $1F,$40                                  ;8000
000348DE <AmiBlitz3_noFPU_r470.ab3@25851>   Dc.b $80,$D0                                  ;$8000+29+tnum
000348E2 <AmiBlitz3_noFPU_r470.ab3@25852>   Dc.l _BitChg
000348E6 <AmiBlitz3_noFPU_r470.ab3@25853>   Dc.l _BitChg
000348EA <AmiBlitz3_noFPU_r470.ab3@25854>   Dc.l _BitChg
000348EE <AmiBlitz3_noFPU_r470.ab3@25855>   Dc.l _BitChg
000348FA <AmiBlitz3_noFPU_r470.ab3@25856>   Ds.l 3
000348FC <AmiBlitz3_noFPU_r470.ab3@25857>   Dc.b $1F,$40                                  ;8000
000348FE <AmiBlitz3_noFPU_r470.ab3@25859>   Dc.b $00,$00
00034902 <AmiBlitz3_noFPU_r470.ab3@25864> modetable:   Dc.l typemode
00034906 <AmiBlitz3_noFPU_r470.ab3@25867> newtypebase: Dc.l newtype_byte
0003490E <AmiBlitz3_noFPU_r470.ab3@25870>   Dc.l newtype_word,$01                                    
00034910 <AmiBlitz3_noFPU_r470.ab3@25871>   Dc.w $0001
00034914 <AmiBlitz3_noFPU_r470.ab3@25872>   Dc.b 13,"b",0,0
0003491C <AmiBlitz3_noFPU_r470.ab3@25875>   Dc.l newtype_long,$02
0003491E <AmiBlitz3_noFPU_r470.ab3@25876>   Dc.w $0002
00034922 <AmiBlitz3_noFPU_r470.ab3@25877>   Dc.b 13,"w",0,0
0003492A <AmiBlitz3_noFPU_r470.ab3@25880>   Dc.l newtype_quick,$03                                   
0003492C <AmiBlitz3_noFPU_r470.ab3@25881>   Dc.w $0004
00034930 <AmiBlitz3_noFPU_r470.ab3@25882>   Dc.b 13,"l",0,0
00034938 <AmiBlitz3_noFPU_r470.ab3@25885>   Dc.l newtype_float,$04                                   
0003493A <AmiBlitz3_noFPU_r470.ab3@25886>   Dc.w $0004
0003493E <AmiBlitz3_noFPU_r470.ab3@25887>   Dc.b 13,"q",0,0
00034946 <AmiBlitz3_noFPU_r470.ab3@25891>   Dc.l newtype_double,$05                                  ;make problems on old residents
00034948 <AmiBlitz3_noFPU_r470.ab3@25892>   Dc.w $0004
0003494C <AmiBlitz3_noFPU_r470.ab3@25893>   Dc.b 13,"f",0,0
00034954 <AmiBlitz3_noFPU_r470.ab3@25896>   Dc.l newtype_double,$06
00034956 <AmiBlitz3_noFPU_r470.ab3@25897>   Dc.w $0004
0003495A <AmiBlitz3_noFPU_r470.ab3@25898>   Dc.b 13,"a",0,0
00034962 <AmiBlitz3_noFPU_r470.ab3@25901>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00034964 <AmiBlitz3_noFPU_r470.ab3@25902>   Dc.w $0008
00034968 <AmiBlitz3_noFPU_r470.ab3@25903>   Dc.b 13,"d",0,0
00034970 <AmiBlitz3_noFPU_r470.ab3@25907>   Dc.l $0000000,$07                                        ;stringtype
00034972 <AmiBlitz3_noFPU_r470.ab3@25908>   Dc.w $0004
00034976 <AmiBlitz3_noFPU_r470.ab3@25909>   Dc.b 13,"s",0,0
0003497E <AmiBlitz3_noFPU_r470.ab3@25912>   Dc.l $00,$00
00034980 <AmiBlitz3_noFPU_r470.ab3@25913>   Dc.w $0000
00034984 <AmiBlitz3_noFPU_r470.ab3@25914>   Dc.b $01,$00,$00,$00
000349E4 <AmiBlitz3_noFPU_r470.ab3@25917> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
000349E6 <AmiBlitz3_noFPU_r470.ab3@25921> dirmode:              Ds.w 1                               ;shows if directmode is on
000349EA <AmiBlitz3_noFPU_r470.ab3@25923>                       Ds.l 1                               ;int org source ;intuition!
000349EC <AmiBlitz3_noFPU_r470.ab3@25924> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
000349F0 <AmiBlitz3_noFPU_r470.ab3@25925> maxsat:               Ds.l 1                               ;data1 info pos
000349F2 <AmiBlitz3_noFPU_r470.ab3@25926> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
000349F4 <AmiBlitz3_noFPU_r470.ab3@25928> maxsused:             Ds.w 1                               ;maximums used in prog
000349F6 <AmiBlitz3_noFPU_r470.ab3@25932> dark:                 Ds.w 1                               ;dark compile?
000349F8 <AmiBlitz3_noFPU_r470.ab3@25933> qlab:                 Ds.w 1                               ;quick lab allocate
000349FC <AmiBlitz3_noFPU_r470.ab3@25934> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
000349FE <AmiBlitz3_noFPU_r470.ab3@25939> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00034A00 <AmiBlitz3_noFPU_r470.ab3@25940> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00034A04 <AmiBlitz3_noFPU_r470.ab3@25941> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00034A08 <AmiBlitz3_noFPU_r470.ab3@25943> letstart:             Ds.l 1
00034A0A <AmiBlitz3_noFPU_r470.ab3@25944> dontwrite:            Ds.w 1                               ;nomemleft org source
00034A8A <AmiBlitz3_noFPU_r470.ab3@25945> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034A8E <AmiBlitz3_noFPU_r470.ab3@25947> locdatast:            Ds.l 1
00034A92 <AmiBlitz3_noFPU_r470.ab3@25948> firstpend:            Ds.l 1
00034A96 <AmiBlitz3_noFPU_r470.ab3@25952> data2at:              Ds.l 1
00034A9A <AmiBlitz3_noFPU_r470.ab3@25953> data2:                Ds.l 1
00034A9E <AmiBlitz3_noFPU_r470.ab3@25954> data1start:           Ds.l 1                               ;data1at org source
00034AA2 <AmiBlitz3_noFPU_r470.ab3@25955> data1:                Ds.l 1                               ;pc for initialized data!
00034AA6 <AmiBlitz3_noFPU_r470.ab3@25956> destbufferstart:      Ds.l 1                               ;pcat org source
00034AAA <AmiBlitz3_noFPU_r470.ab3@25960> destbufferend:        Ds.l 1                               ;libat org source
00034AAE <AmiBlitz3_noFPU_r470.ab3@25961> libend:               Ds.l 1                               ;lib org source
00034AB2 <AmiBlitz3_noFPU_r470.ab3@25962> allat:                Ds.l 1                               ;highest allocmemd location for code
00034ABC <AmiBlitz3_noFPU_r470.ab3@25963> dummyasm:             Dc.w 0,0,0,0,0
00034AC0 <AmiBlitz3_noFPU_r470.ab3@25964>                       Dc.l 0
00034AC2 <AmiBlitz3_noFPU_r470.ab3@25965>                       Dc.w 0
00034AC6 <AmiBlitz3_noFPU_r470.ab3@25969> buff1:                Ds.l 1                               ;buffer for text get
00034ACA <AmiBlitz3_noFPU_r470.ab3@25970> buff2:                Ds.l 1                               ;ditto for dest
00034ACC <AmiBlitz3_noFPU_r470.ab3@25971> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00034ACE <AmiBlitz3_noFPU_r470.ab3@25972> asmtype:              Ds.w 1                               ;0=contains no prog reference
00034AD0 <AmiBlitz3_noFPU_r470.ab3@25973> extraword:            Ds.w 1                               ;the extension word for assembler
00034AD2 <AmiBlitz3_noFPU_r470.ab3@25974> extraword2:           Ds.w 1                               ;ditto
00034AD4 <AmiBlitz3_noFPU_r470.ab3@25975> asmsize:              Ds.w 1
00034AD8 <AmiBlitz3_noFPU_r470.ab3@25976> asmbuff:              Ds.l 1
00034ADA <AmiBlitz3_noFPU_r470.ab3@25977> asmlen:               Ds.w 1                               ;first (src) text len
00034ADC <AmiBlitz3_noFPU_r470.ab3@25978> asmlen2:              Ds.w 1                               ;second (dest)
00034AE0 <AmiBlitz3_noFPU_r470.ab3@25979> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00034AE2 <AmiBlitz3_noFPU_r470.ab3@25982> macnum:               Ds.w 1
00034AE6 <AmiBlitz3_noFPU_r470.ab3@25984>                       Dc.l 0                               ;address of next 0 in include fil
00034AEA <AmiBlitz3_noFPU_r470.ab3@25985> titleat:              Ds.l 1                               ;5 longs for compile streaks
00034AF4 <AmiBlitz3_noFPU_r470.ab3@25986> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00034AF6 <AmiBlitz3_noFPU_r470.ab3@25987> connest:              Ds.w 1                               ;conditional nest level
00034AFA <AmiBlitz3_noFPU_r470.ab3@25988> firstconst:           Ds.l 1                               ;first constant (#a)
00034AFC <AmiBlitz3_noFPU_r470.ab3@25989> numarg:               Ds.w 1                               ;number of macro arguements
00034B00 <AmiBlitz3_noFPU_r470.ab3@25990> myoline:              Ds.l 1                               ;macro done yet?
00034B04 <AmiBlitz3_noFPU_r470.ab3@25991> myline:               Ds.l 1                               ;pointer to some memory to create
00034B08 <AmiBlitz3_noFPU_r470.ab3@25994>                       Ds.l 1
00034B48 <AmiBlitz3_noFPU_r470.ab3@25995> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00034B4C <AmiBlitz3_noFPU_r470.ab3@25996> concomsp:             Dc.l concomstack                     ;stack pointer
00034B4E <AmiBlitz3_noFPU_r470.ab3@25997> oldqflag:             Ds.w 1
00034B52 <AmiBlitz3_noFPU_r470.ab3@26000>                       Ds.l 1
00034B54 <AmiBlitz3_noFPU_r470.ab3@26002>                       Ds.w 1
00034B58 <AmiBlitz3_noFPU_r470.ab3@26003> firstfor:             Ds.l 1                               ;first for
00034B5A <AmiBlitz3_noFPU_r470.ab3@26004> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00034B5C <AmiBlitz3_noFPU_r470.ab3@26005> sbgot:                Ds.w 1                               ;flag for string got 2
00034B5E <AmiBlitz3_noFPU_r470.ab3@26006> convsize:             Ds.w 1                               ;usertype org source
00034B60 <AmiBlitz3_noFPU_r470.ab3@26007> userp:                Ds.w 1
00034B64 <AmiBlitz3_noFPU_r470.ab3@26012> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00034B66 <AmiBlitz3_noFPU_r470.ab3@26013> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00034B68 <AmiBlitz3_noFPU_r470.ab3@26014> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00034B6C <AmiBlitz3_noFPU_r470.ab3@26016> locloc:               Ds.l 1
00034B6E <AmiBlitz3_noFPU_r470.ab3@26017> locchar:              Ds.w 1
00034BEE <AmiBlitz3_noFPU_r470.ab3@26018> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00034BF0 <AmiBlitz3_noFPU_r470.ab3@26019> commode:              Ds.w 1                               ;in comma mode...
00034BF4 <AmiBlitz3_noFPU_r470.ab3@26020> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00034BF8 <AmiBlitz3_noFPU_r470.ab3@26021> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00034BFC <AmiBlitz3_noFPU_r470.ab3@26022> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00034BFE <AmiBlitz3_noFPU_r470.ab3@26024>                       Ds.w 1                               ;opt reset offset
00034CFE <AmiBlitz3_noFPU_r470.ab3@26026>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00034DFE <AmiBlitz3_noFPU_r470.ab3@26028>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00034E00 <AmiBlitz3_noFPU_r470.ab3@26029> varcodelen:           Ds.w 1                               ;and length
00034E02 <AmiBlitz3_noFPU_r470.ab3@26031>                       Ds.w 1
00034E08 <AmiBlitz3_noFPU_r470.ab3@26032> oldvcodelen:          Ds.w 3                               ;old varcodelen
00034E0C <AmiBlitz3_noFPU_r470.ab3@26036> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00034E0E <AmiBlitz3_noFPU_r470.ab3@26037> memlibstat:           Ds.w 1                               ;status of memory library during
00034E10 <AmiBlitz3_noFPU_r470.ab3@26040>                       Dc.w 0
00034E12 <AmiBlitz3_noFPU_r470.ab3@26042>                       Dc.w 0
00034E14 <AmiBlitz3_noFPU_r470.ab3@26044> varmode:              Ds.w 1                               ;0 a5 pointer to global
00034E18 <AmiBlitz3_noFPU_r470.ab3@26046> currentfunction:      Ds.l 1                               ;thisproc org source
00034E1C <AmiBlitz3_noFPU_r470.ab3@26047> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00034E1E <AmiBlitz3_noFPU_r470.ab3@26048> 
00034E20 <AmiBlitz3_noFPU_r470.ab3@26050> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00034E24 <AmiBlitz3_noFPU_r470.ab3@26051> passstack:            Ds.l 1
00034E28 <AmiBlitz3_noFPU_r470.ab3@26052> zero:                 Ds.l 1                               ;ZERO!
00034E2A <AmiBlitz3_noFPU_r470.ab3@26053> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00034E2E <AmiBlitz3_noFPU_r470.ab3@26055> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00034E32 <AmiBlitz3_noFPU_r470.ab3@26056> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00034E34 <AmiBlitz3_noFPU_r470.ab3@26057> lasta6:               Dc.w $FFFF                           ;-1 org source
00034E36 <AmiBlitz3_noFPU_r470.ab3@26058> instringon:           Ds.w 1                               ;quoteflag org source
00034E3A <AmiBlitz3_noFPU_r470.ab3@26059> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00034E3E <AmiBlitz3_noFPU_r470.ab3@26060> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00034E42 <AmiBlitz3_noFPU_r470.ab3@26061> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00034E46 <AmiBlitz3_noFPU_r470.ab3@26062> endop:                Ds.l 1                               ;end of program pc - before finishups!
00034E4A <AmiBlitz3_noFPU_r470.ab3@26063> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
00034E4E <AmiBlitz3_noFPU_r470.ab3@26064> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
00034E50 <AmiBlitz3_noFPU_r470.ab3@26065> numstatic:            Ds.w 1                               ;number of static structs
00034E54 <AmiBlitz3_noFPU_r470.ab3@26066> staticdata:           Ds.l 1                               ;data1 val for statics
00034E58 <AmiBlitz3_noFPU_r470.ab3@26067> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00034E5A <AmiBlitz3_noFPU_r470.ab3@26068> sbasegot:             Ds.w 1                               ;string base got?
00034E5E <AmiBlitz3_noFPU_r470.ab3@26069> litdata1:             Ds.l 1
00034E62 <AmiBlitz3_noFPU_r470.ab3@26073> objlen:               Ds.l 1
00034E66 <AmiBlitz3_noFPU_r470.ab3@26074> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00034E6A <AmiBlitz3_noFPU_r470.ab3@26075> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00034E6C <AmiBlitz3_noFPU_r470.ab3@26077> flagmask:             Ds.w 1                               ;mask for flag of variable when
00034E6E <AmiBlitz3_noFPU_r470.ab3@26079> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
00034E70 <AmiBlitz3_noFPU_r470.ab3@26080> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00034E74 <AmiBlitz3_noFPU_r470.ab3@26081> temp1:                Ds.l 1
00034E78 <AmiBlitz3_noFPU_r470.ab3@26082> temp2:                Ds.l 1
00034E7C <AmiBlitz3_noFPU_r470.ab3@26084> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
00034E80 <AmiBlitz3_noFPU_r470.ab3@26085> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00034EF4 <AmiBlitz3_noFPU_r470.ab3@26086> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00034EF8 <AmiBlitz3_noFPU_r470.ab3@26087> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00034F78 <AmiBlitz3_noFPU_r470.ab3@26089> namebuff2:            Ds.b 128
00034F80 <AmiBlitz3_noFPU_r470.ab3@26090>                       Ds.b 8                               ;for fileinfoblock
00034FC0 <AmiBlitz3_noFPU_r470.ab3@26093> optstuff:             Ds.b 64                              ;temp opt make buffer
00034FC2 <AmiBlitz3_noFPU_r470.ab3@26110>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00034FC6 <AmiBlitz3_noFPU_r470.ab3@26111>   Dc.l xtra_versionnumber                                  ; vers org source
00034FCA <AmiBlitz3_noFPU_r470.ab3@26112>   Dc.l create_iconfile                                     ; create icon for executable
00034FCE <AmiBlitz3_noFPU_r470.ab3@26113>   Ds.l 1
00034FD0 <AmiBlitz3_noFPU_r470.ab3@26115>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00034FD4 <AmiBlitz3_noFPU_r470.ab3@26118>   Dc.l set_use_debugger
00034FD8 <AmiBlitz3_noFPU_r470.ab3@26119>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00034FDC <AmiBlitz3_noFPU_r470.ab3@26120>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00034FE0 <AmiBlitz3_noFPU_r470.ab3@26121>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00034FE4 <AmiBlitz3_noFPU_r470.ab3@26122>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00034FE8 <AmiBlitz3_noFPU_r470.ab3@26123>   Dc.l set_make_smallestcode
00034FEC <AmiBlitz3_noFPU_r470.ab3@26124>   Dc.l set_link_debuginfo
00034FF0 <AmiBlitz3_noFPU_r470.ab3@26125>   Dc.l set_autorun
00034FF4 <AmiBlitz3_noFPU_r470.ab3@26126>   Dc.l set_interruptcheck
00034FF8 <AmiBlitz3_noFPU_r470.ab3@26127>   Dc.l set_assemblercheck
00034FFC <AmiBlitz3_noFPU_r470.ab3@26129>   Dc.l set_overflowcheck
00035000 <AmiBlitz3_noFPU_r470.ab3@26130>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00035004 <AmiBlitz3_noFPU_r470.ab3@26131>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00035008 <AmiBlitz3_noFPU_r470.ab3@26132>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
0003500C <AmiBlitz3_noFPU_r470.ab3@26135>   Ds.l 1
0003500E <AmiBlitz3_noFPU_r470.ab3@26137>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00035012 <AmiBlitz3_noFPU_r470.ab3@26144>   Dc.l objectbuffer
00035016 <AmiBlitz3_noFPU_r470.ab3@26145>   Dc.l libsbuffer
0003501A <AmiBlitz3_noFPU_r470.ab3@26146>   Dc.l systembuffer
0003501E <AmiBlitz3_noFPU_r470.ab3@26147>   Dc.l databuffer
00035022 <AmiBlitz3_noFPU_r470.ab3@26148>   Dc.l macrobuffer_size
00035026 <AmiBlitz3_noFPU_r470.ab3@26149>   Dc.l stringbuffer
0003502A <AmiBlitz3_noFPU_r470.ab3@26152>   Ds.l 1
0003502C <AmiBlitz3_noFPU_r470.ab3@26156>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035034 <AmiBlitz3_noFPU_r470.ab3@26157>   Dc.l residents_table,0
00035036 <AmiBlitz3_noFPU_r470.ab3@26161>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
0003503E <AmiBlitz3_noFPU_r470.ab3@26162>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00035040 <AmiBlitz3_noFPU_r470.ab3@26163>   Ds.w 1
0003513C <AmiBlitz3_noFPU_r470.ab3@26167>   Ds.l 63
00035238 <AmiBlitz3_noFPU_r470.ab3@26168>   Ds.l 63
00035334 <AmiBlitz3_noFPU_r470.ab3@26169>   Ds.l 63
00035416 <AmiBlitz3_noFPU_r470.ab3@26170>   Ds.w 113
00035418 <AmiBlitz3_noFPU_r470.ab3@26173> comsettings_message:  Ds.w 1                               ;allchg org source
0003541A <AmiBlitz3_noFPU_r470.ab3@26174> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035420 <AmiBlitz3_noFPU_r470.ab3@26178>   CLR.b exefilename
00035422 <AmiBlitz3_noFPU_r470.ab3@26179>   TST.l d0
00035426 <AmiBlitz3_noFPU_r470.ab3@26180>   BNE read_xtrafile__l10
00035428 <AmiBlitz3_noFPU_r470.ab3@26181> RTS
0003542E <AmiBlitz3_noFPU_r470.ab3@26184>   JSR free_residents                                       ;jsr freeres2 org source
00035434 <AmiBlitz3_noFPU_r470.ab3@26185> 
0003543A <AmiBlitz3_noFPU_r470.ab3@26186>   LEA ptr_xtradata,A2
0003543C <AmiBlitz3_noFPU_r470.ab3@26187>   MOVEQ.l #$00,D4
0003543E <AmiBlitz3_noFPU_r470.ab3@26190>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035442 <AmiBlitz3_noFPU_r470.ab3@26191>     BEQ.b read_xtrafile__done
00035444 <AmiBlitz3_noFPU_r470.ab3@26194>     MOVE.l (A2)+,D2
00035448 <AmiBlitz3_noFPU_r470.ab3@26195>   BEQ.b read_xtrafile__loop
0003544A <AmiBlitz3_noFPU_r470.ab3@26197>   MOVE.l D4,D3
0003544C <AmiBlitz3_noFPU_r470.ab3@26198>   MOVE.l D7,D1
00035450 <AmiBlitz3_noFPU_r470.ab3@26199>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035452 <AmiBlitz3_noFPU_r470.ab3@26200>   TST.l D0
00035456 <AmiBlitz3_noFPU_r470.ab3@26201>   BNE.b read_xtrafile__loop2
0003545A <AmiBlitz3_noFPU_r470.ab3@26202> BRA.w read_xtrafile__done2
00035460 <AmiBlitz3_noFPU_r470.ab3@26205>   TST.b xtra_versionnumber
00035464 <AmiBlitz3_noFPU_r470.ab3@26206>    BNE.b read_xtrafile__nover0
0003546C <AmiBlitz3_noFPU_r470.ab3@26207>   MOVE.w #$0080,set_autorun                                ;auto run on
00035476 <AmiBlitz3_noFPU_r470.ab3@26208>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
0003547C <AmiBlitz3_noFPU_r470.ab3@26209>   CLR.w set_assemblercheck                                 ;assembler checking off
00035486 <AmiBlitz3_noFPU_r470.ab3@26210>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
0003548A <AmiBlitz3_noFPU_r470.ab3@26211> BRA.b read_xtrafile__ver0
0003548C <AmiBlitz3_noFPU_r470.ab3@26214>   MOVE.l D7,D1                                             ;load cli arg!
00035492 <AmiBlitz3_noFPU_r470.ab3@26215>   MOVE.l #str_cliarguments,D2
00035498 <AmiBlitz3_noFPU_r470.ab3@26216>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
0003549C <AmiBlitz3_noFPU_r470.ab3@26217>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
000354A2 <AmiBlitz3_noFPU_r470.ab3@26218>   MOVE.l #str_cliarguments,A0
000354A8 <AmiBlitz3_noFPU_r470.ab3@26219>   ADDA.l #115,A0
000354AE <AmiBlitz3_noFPU_r470.ab3@26220>   MOVE.l #0,(a0) ; terminate it!
000354B0 <AmiBlitz3_noFPU_r470.ab3@26222>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
000354B6 <AmiBlitz3_noFPU_r470.ab3@26223>   MOVE.l #stacksize,D2
000354BC <AmiBlitz3_noFPU_r470.ab3@26224>   MOVE.l #4,D3
000354C0 <AmiBlitz3_noFPU_r470.ab3@26225>   JSR _Read(A6)
000354CA <AmiBlitz3_noFPU_r470.ab3@26226>   CMP.l ##MIN_STACKSIZE,stacksize
000354CE <AmiBlitz3_noFPU_r470.ab3@26227>   BGE 'stackok
000354D8 <AmiBlitz3_noFPU_r470.ab3@26228>   MOVE.l ##MIN_STACKSIZE,stacksize
000354DA <AmiBlitz3_noFPU_r470.ab3@26231>   MOVE.l D7,D1
000354E0 <AmiBlitz3_noFPU_r470.ab3@26232>   MOVE.l #versioninformation,D2
000354E6 <AmiBlitz3_noFPU_r470.ab3@26233>   MOVE.l #4,D3
000354EA <AmiBlitz3_noFPU_r470.ab3@26234>   JSR _Read(A6)
000354EC <AmiBlitz3_noFPU_r470.ab3@26236>   MOVE.l D7,D1
000354F2 <AmiBlitz3_noFPU_r470.ab3@26237>   MOVE.l #number_of_builds,D2
000354F8 <AmiBlitz3_noFPU_r470.ab3@26238>   MOVE.l #4,D3
000354FC <AmiBlitz3_noFPU_r470.ab3@26239>   JSR _Read(A6)
00035502 <AmiBlitz3_noFPU_r470.ab3@26245> 
00035508 <AmiBlitz3_noFPU_r470.ab3@26246>   MOVE.l A7,errstack
00035512 <AmiBlitz3_noFPU_r470.ab3@26247>   MOVE.l #read_xtrafile__done2,errcont
0003551A <AmiBlitz3_noFPU_r470.ab3@26248>   MOVE.w #$FFFF,ezerr
00035520 <AmiBlitz3_noFPU_r470.ab3@26251>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035522 <AmiBlitz3_noFPU_r470.ab3@26252>     MOVEQ.l #$04,D3
00035524 <AmiBlitz3_noFPU_r470.ab3@26253>     MOVE.l D7,D1
00035528 <AmiBlitz3_noFPU_r470.ab3@26254>     JSR _Read(A6)
0003552A <AmiBlitz3_noFPU_r470.ab3@26255>     TST.l D0
0003552E <AmiBlitz3_noFPU_r470.ab3@26256>     BEQ.b read_xtrafile__done2
00035534 <AmiBlitz3_noFPU_r470.ab3@26257>     MOVE.w temp1,D1
00035536 <AmiBlitz3_noFPU_r470.ab3@26258>     TST.w d1                                               ;new
0003553A <AmiBlitz3_noFPU_r470.ab3@26259>     BEQ read_xtrafile__done2                                         ;new
00035540 <AmiBlitz3_noFPU_r470.ab3@26260>      JSR AJL_0_6F1A
00035546 <AmiBlitz3_noFPU_r470.ab3@26262>     CMP.l #0,a1
0003554A <AmiBlitz3_noFPU_r470.ab3@26263>     BEQ read_xtrafile__dloop
0003554E <AmiBlitz3_noFPU_r470.ab3@26264>     MOVE.l $12(A1),D0
00035556 <AmiBlitz3_noFPU_r470.ab3@26265>     MOVE.w temp1+2,-$4(A1,D0.L)
0003555A <AmiBlitz3_noFPU_r470.ab3@26266> BRA.b read_xtrafile__dloop
0003555E <AmiBlitz3_noFPU_r470.ab3@26272>   LEA residents_table(PC),A0
00035560 <AmiBlitz3_noFPU_r470.ab3@26273>   MOVEQ.l #$07,D0
00035564 <AmiBlitz3_noFPU_r470.ab3@26276>     CLR.l $40(A0)
00035568 <AmiBlitz3_noFPU_r470.ab3@26277>     LEA ResidentEntryStep(A0),A0   ; $44
0003556C <AmiBlitz3_noFPU_r470.ab3@26278>   DBF D0,read_xtrafile__loop3
00035570 <AmiBlitz3_noFPU_r470.ab3@26280>   MOVEM.l D7/A6,-(A7)
00035576 <AmiBlitz3_noFPU_r470.ab3@26281>   JSR init_buffers
0003557C <AmiBlitz3_noFPU_r470.ab3@26282>   JSR reloadresident
00035580 <AmiBlitz3_noFPU_r470.ab3@26283>   MOVEM.l (A7)+,D7/A6
00035582 <AmiBlitz3_noFPU_r470.ab3@26284> RTS
0003558A <AmiBlitz3_noFPU_r470.ab3@26288>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035590 <AmiBlitz3_noFPU_r470.ab3@26297>   LEA ptr_xtradata,A2
00035592 <AmiBlitz3_noFPU_r470.ab3@26298>   MOVEQ.l #$00,D4
00035594 <AmiBlitz3_noFPU_r470.ab3@26302>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035598 <AmiBlitz3_noFPU_r470.ab3@26303>   BEQ.b write_xtrafile__done
0003559A <AmiBlitz3_noFPU_r470.ab3@26306>    MOVE.l (A2)+,D2
0003559E <AmiBlitz3_noFPU_r470.ab3@26307>    BEQ.b write_xtrafile__loop
000355A0 <AmiBlitz3_noFPU_r470.ab3@26309>    MOVE.l D4,D3
000355A2 <AmiBlitz3_noFPU_r470.ab3@26310>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
000355A6 <AmiBlitz3_noFPU_r470.ab3@26311>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
000355AA <AmiBlitz3_noFPU_r470.ab3@26312> BRA.b write_xtrafile__loop2
000355AC <AmiBlitz3_noFPU_r470.ab3@26315>   MOVE.l D7,D1
000355B2 <AmiBlitz3_noFPU_r470.ab3@26316>   MOVE.l #str_cliarguments,D2
000355B8 <AmiBlitz3_noFPU_r470.ab3@26317>   MOVE.l #116,D3
000355BC <AmiBlitz3_noFPU_r470.ab3@26318>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
000355BE <AmiBlitz3_noFPU_r470.ab3@26320>   MOVE.l D7,D1
000355C4 <AmiBlitz3_noFPU_r470.ab3@26321>   MOVE.l #stacksize,D2
000355CA <AmiBlitz3_noFPU_r470.ab3@26322>   MOVE.l #4,D3
000355CE <AmiBlitz3_noFPU_r470.ab3@26323>   JSR _Write(A6)
000355D0 <AmiBlitz3_noFPU_r470.ab3@26325>   MOVE.l D7,D1
000355D6 <AmiBlitz3_noFPU_r470.ab3@26326>   MOVE.l #versioninformation,D2
000355DC <AmiBlitz3_noFPU_r470.ab3@26327>   MOVE.l #4,D3
000355E0 <AmiBlitz3_noFPU_r470.ab3@26328>   JSR _Write(A6)
000355E2 <AmiBlitz3_noFPU_r470.ab3@26330>   MOVE.l D7,D1
000355E8 <AmiBlitz3_noFPU_r470.ab3@26331>   MOVE.l #number_of_builds,D2
000355EE <AmiBlitz3_noFPU_r470.ab3@26332>   MOVE.l #4,D3
000355F2 <AmiBlitz3_noFPU_r470.ab3@26333>   JSR _Write(A6)
000355F8 <AmiBlitz3_noFPU_r470.ab3@26339>   LEA libpointer,A2
000355FA <AmiBlitz3_noFPU_r470.ab3@26342>     MOVE.l (A2),D0
000355FE <AmiBlitz3_noFPU_r470.ab3@26343>     BEQ.w write_xtrafile__done2
00035600 <AmiBlitz3_noFPU_r470.ab3@26344>     MOVEA.l D0,A2
00035604 <AmiBlitz3_noFPU_r470.ab3@26345>     MOVE.l $12(A2),D4
00035608 <AmiBlitz3_noFPU_r470.ab3@26346>     TST.w -$2(A2,D4.L)
0003560C <AmiBlitz3_noFPU_r470.ab3@26347>     BEQ.w write_xtrafile__loop3
00035610 <AmiBlitz3_noFPU_r470.ab3@26349>     LEA $4(A2),A0
00035612 <AmiBlitz3_noFPU_r470.ab3@26350>     MOVE.l A0,D2
00035614 <AmiBlitz3_noFPU_r470.ab3@26351>     MOVEQ.l #$02,D3
00035616 <AmiBlitz3_noFPU_r470.ab3@26352>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
0003561A <AmiBlitz3_noFPU_r470.ab3@26353>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003561E <AmiBlitz3_noFPU_r470.ab3@26355>     LEA -$4(A2,D4.L),A0
00035620 <AmiBlitz3_noFPU_r470.ab3@26356>     MOVE.l A0,D2
00035622 <AmiBlitz3_noFPU_r470.ab3@26357>     MOVEQ.l #$02,D3
00035624 <AmiBlitz3_noFPU_r470.ab3@26358>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035628 <AmiBlitz3_noFPU_r470.ab3@26359>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003562C <AmiBlitz3_noFPU_r470.ab3@26360> BRA.w write_xtrafile__loop3
00035632 <AmiBlitz3_noFPU_r470.ab3@26365>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035634 <AmiBlitz3_noFPU_r470.ab3@26366>   MOVE.l A2,D2           ; move the address to d2
0003563A <AmiBlitz3_noFPU_r470.ab3@26367>   MOVE.l #4,D3           ; we only need 4 bytes to save
0003563C <AmiBlitz3_noFPU_r470.ab3@26368>   MOVE.l D7,D1           ; we set the file handle
00035640 <AmiBlitz3_noFPU_r470.ab3@26369>   JSR _Write(A6)         ; and we write it.
00035642 <AmiBlitz3_noFPU_r470.ab3@26371> RTS
00035648 <AmiBlitz3_noFPU_r470.ab3@26376>   LEA optssave,A0                      ; backup address
0003564E <AmiBlitz3_noFPU_r470.ab3@26377>   LEA ptr_xtradata,A1                  ; source address
00035650 <AmiBlitz3_noFPU_r470.ab3@26380>   MOVE.w (A1)+,D0                                          ;length of data move
00035654 <AmiBlitz3_noFPU_r470.ab3@26381>   BEQ.b 'backupdone
00035656 <AmiBlitz3_noFPU_r470.ab3@26382>   SUBQ.w #1,D0
00035658 <AmiBlitz3_noFPU_r470.ab3@26385>     MOVE.l (A1)+,D1
0003565C <AmiBlitz3_noFPU_r470.ab3@26386>     BEQ.b 'backuploop
0003565E <AmiBlitz3_noFPU_r470.ab3@26387>     MOVEA.l D1,A2
00035660 <AmiBlitz3_noFPU_r470.ab3@26388>     MOVE.w D0,D1
00035662 <AmiBlitz3_noFPU_r470.ab3@26391>       MOVE.b (A2)+,(A0)+
00035666 <AmiBlitz3_noFPU_r470.ab3@26392>   DBF D1,'backuploop3
0003566A <AmiBlitz3_noFPU_r470.ab3@26394> BRA.w 'backuploop2
00035670 <AmiBlitz3_noFPU_r470.ab3@26398>   LEA bufferlist,A1
00035672 <AmiBlitz3_noFPU_r470.ab3@26401>     MOVE.l (A1)+,D2
00035676 <AmiBlitz3_noFPU_r470.ab3@26402>     BEQ.b 'loop4done
00035678 <AmiBlitz3_noFPU_r470.ab3@26404>     MOVEA.l D2,A0
0003567A <AmiBlitz3_noFPU_r470.ab3@26405>     MOVE.l (A0),D2
0003567C <AmiBlitz3_noFPU_r470.ab3@26406>     ADDQ.w #8,A0
00035682 <AmiBlitz3_noFPU_r470.ab3@26407>     JSR makelong
00035686 <AmiBlitz3_noFPU_r470.ab3@26408> BRA.b 'loop4
0003568C <AmiBlitz3_noFPU_r470.ab3@26411>   CLR.w state_of_residents                                 ;resident change
00035692 <AmiBlitz3_noFPU_r470.ab3@26412>   CLR.w comsettings_message                                ;alloc change
00035698 <AmiBlitz3_noFPU_r470.ab3@26413>   CLR.w maxobject_pos
0003569A <AmiBlitz3_noFPU_r470.ab3@26414> RTS   ; new tomsmart1
000356A0 <AmiBlitz3_noFPU_r470.ab3@26418>   LEA optssave,A0
000356A6 <AmiBlitz3_noFPU_r470.ab3@26419>   LEA ptr_xtradata,A1
000356A8 <AmiBlitz3_noFPU_r470.ab3@26422>   MOVE.w (A1)+,D0
000356AC <AmiBlitz3_noFPU_r470.ab3@26423>   BEQ.b 'restoredone
000356AE <AmiBlitz3_noFPU_r470.ab3@26424>   SUBQ.w #1,D0
000356B0 <AmiBlitz3_noFPU_r470.ab3@26427>     MOVE.l (A1)+,D1
000356B4 <AmiBlitz3_noFPU_r470.ab3@26428>     BEQ.b 'restoreloop1
000356B6 <AmiBlitz3_noFPU_r470.ab3@26429>     MOVEA.l D1,A2
000356B8 <AmiBlitz3_noFPU_r470.ab3@26430>     MOVE.w D0,D1
000356BA <AmiBlitz3_noFPU_r470.ab3@26433>       MOVE.b (A0)+,(A2)+
000356BE <AmiBlitz3_noFPU_r470.ab3@26434>   DBF D1,'restoreloop3
000356C2 <AmiBlitz3_noFPU_r470.ab3@26436> BRA.b 'restoreloop2
000356C4 <AmiBlitz3_noFPU_r470.ab3@26439> RTS
000356CA <AmiBlitz3_noFPU_r470.ab3@26443>   JSR free_residents                    ; first free the allready loaded residents
000356D0 <AmiBlitz3_noFPU_r470.ab3@26444>   JSR Clear_Residents_table             ; second clear the complete resident table
000356D2 <AmiBlitz3_noFPU_r470.ab3@26445> RTS
000356DA <AmiBlitz3_noFPU_r470.ab3@26449>   MOVE.w #$FFFF,state_of_residents
000356E0 <AmiBlitz3_noFPU_r470.ab3@26450>   MOVE.w state_of_residents,D0
000356E6 <AmiBlitz3_noFPU_r470.ab3@26451>   JSR reloadresident
000356E8 <AmiBlitz3_noFPU_r470.ab3@26452> RTS
000356EA <AmiBlitz3_noFPU_r470.ab3@26457>   MOVE.l d0,a1
000356F0 <AmiBlitz3_noFPU_r470.ab3@26458>   MOVEA.l libpointer,A2
000356F4 <AmiBlitz3_noFPU_r470.ab3@26461>     MOVE.l $12(A2),D0
000356F8 <AmiBlitz3_noFPU_r470.ab3@26462>     TST.w -$2(A2,D0.L)
000356FC <AmiBlitz3_noFPU_r470.ab3@26463>      BEQ.w JL_0_102AAa
000356FE <AmiBlitz3_noFPU_r470.ab3@26464>     SUBQ.w #1,D1
00035702 <AmiBlitz3_noFPU_r470.ab3@26465>      BPL.w JL_0_102AAa
00035706 <AmiBlitz3_noFPU_r470.ab3@26466>     MOVEA.l -$1A(A2,D0.L),A3
00035708 <AmiBlitz3_noFPU_r470.ab3@26467>     ADDA.l A2,A3
0003570A <AmiBlitz3_noFPU_r470.ab3@26470>       MOVE.b (A3)+,(A1)+
0003570E <AmiBlitz3_noFPU_r470.ab3@26471>     BNE.w JL_0_10294a
00035710 <AmiBlitz3_noFPU_r470.ab3@26473>     CLR.b -(A1)
00035714 <AmiBlitz3_noFPU_r470.ab3@26474>     MOVE.w -$4(A2,D0.L),D0
0003571A <AmiBlitz3_noFPU_r470.ab3@26475>     AND.l #$ffff,d0
0003571C <AmiBlitz3_noFPU_r470.ab3@26476> RTS
0003571E <AmiBlitz3_noFPU_r470.ab3@26479>     MOVEA.l (A2),A2
00035722 <AmiBlitz3_noFPU_r470.ab3@26480> BRA.w JL_0_1027Ca
00035732 <AmiBlitz3_noFPU_r470.ab3@26485> str_maxobjects_name:   Dc.b "              ",0 : Even
00035742 <AmiBlitz3_noFPU_r470.ab3@26486> str_maxobjects_name2:  Dc.b "              ",0 : Even
00035746 <AmiBlitz3_noFPU_r470.ab3@26487> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
0003574A <AmiBlitz3_noFPU_r470.ab3@26488>                        Dc.l $00000000
00035756 <AmiBlitz3_noFPU_r470.ab3@26489> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
0003575A <AmiBlitz3_noFPU_r470.ab3@26491> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
0003575E <AmiBlitz3_noFPU_r470.ab3@26492>                        Dc.l $00000000
0003576A <AmiBlitz3_noFPU_r470.ab3@26493> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
0003576E <AmiBlitz3_noFPU_r470.ab3@26495> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
00035772 <AmiBlitz3_noFPU_r470.ab3@26496>                        Dc.l $00000000
0003577E <AmiBlitz3_noFPU_r470.ab3@26497> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035782 <AmiBlitz3_noFPU_r470.ab3@26499> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035786 <AmiBlitz3_noFPU_r470.ab3@26500>                        Dc.l $00000000
00035792 <AmiBlitz3_noFPU_r470.ab3@26501> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035796 <AmiBlitz3_noFPU_r470.ab3@26503> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
0003579A <AmiBlitz3_noFPU_r470.ab3@26504>                        Dc.l $00000000
000357A6 <AmiBlitz3_noFPU_r470.ab3@26505> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
000357AA <AmiBlitz3_noFPU_r470.ab3@26507> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
000357AE <AmiBlitz3_noFPU_r470.ab3@26508>                        Dc.l $00000000
000357BA <AmiBlitz3_noFPU_r470.ab3@26509> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
000357BC <AmiBlitz3_noFPU_r470.ab3@26511> maxobjects_value:      Dc.w $0064
000357C0 <AmiBlitz3_noFPU_r470.ab3@26512>                        Dc.l $00000000
000357CC <AmiBlitz3_noFPU_r470.ab3@26513> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
000357CE <AmiBlitz3_noFPU_r470.ab3@26515> maxobjects_value2:     Dc.w $0014
000357D0 <AmiBlitz3_noFPU_r470.ab3@26516>                        Dc.w $0000
000357DC <AmiBlitz3_noFPU_r470.ab3@26518> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
000357DD <AmiBlitz3_noFPU_r470.ab3@26522> set_create_iconfile:   Dc.b $00
000357E0 <AmiBlitz3_noFPU_r470.ab3@26523> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
000357E2 <AmiBlitz3_noFPU_r470.ab3@26524>                        Dc.b $00,$01
000357E3 <AmiBlitz3_noFPU_r470.ab3@26526> set_use_debugger:      Dc.b $00                            ; Flags.w
000357E6 <AmiBlitz3_noFPU_r470.ab3@26527> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
000357E8 <AmiBlitz3_noFPU_r470.ab3@26528>                        Dc.b $00,$01                        ; GadgetType.w
000357EC <AmiBlitz3_noFPU_r470.ab3@26529> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
000357F0 <AmiBlitz3_noFPU_r470.ab3@26530> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
000357F4 <AmiBlitz3_noFPU_r470.ab3@26531> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
000357F6 <AmiBlitz3_noFPU_r470.ab3@26532> AL_0_11094:            Ds.w 1
000357F7 <AmiBlitz3_noFPU_r470.ab3@26534> set_make_smallestcode: Ds.b 1
000357FA <AmiBlitz3_noFPU_r470.ab3@26535> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
000357FC <AmiBlitz3_noFPU_r470.ab3@26536>                        Dc.b $00,$01
000357FD <AmiBlitz3_noFPU_r470.ab3@26537> set_link_debuginfo:    Ds.b 1
00035800 <AmiBlitz3_noFPU_r470.ab3@26538> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00035802 <AmiBlitz3_noFPU_r470.ab3@26539>                        Dc.b $00,$01
00035A22 <AmiBlitz3_noFPU_r470.ab3@26544>   Ds.l 136         ;resident files STEP $44 piece 8
00035AA2 <AmiBlitz3_noFPU_r470.ab3@26549> str_calcexpression:        Ds.l 32
00035AA6 <AmiBlitz3_noFPU_r470.ab3@26550> destbufferend_backup_calc: Ds.l 1
00035AB0 <AmiBlitz3_noFPU_r470.ab3@26555>   MOVE.l destbufferend,destbufferend_backup_calc
00035AB6 <AmiBlitz3_noFPU_r470.ab3@26556> 
00035ABC <AmiBlitz3_noFPU_r470.ab3@26557>   MOVE.l A7,errstack
00035AC6 <AmiBlitz3_noFPU_r470.ab3@26558>   MOVE.l #Calc_Error_Exit,errcont
00035AF0 <AmiBlitz3_noFPU_r470.ab3@26565>   !basic         ; get the flage for the conversion form the editor
00035B34 <AmiBlitz3_noFPU_r470.ab3@26566>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00035B78 <AmiBlitz3_noFPU_r470.ab3@26567>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00035B96 <AmiBlitz3_noFPU_r470.ab3@26568>   !asm
00035B9C <AmiBlitz3_noFPU_r470.ab3@26570>   LEA str_calcexpression,A0
00035BA2 <AmiBlitz3_noFPU_r470.ab3@26579>   JSR setcvars
00035BA8 <AmiBlitz3_noFPU_r470.ab3@26580>   JSR setsvars
00035BAE <AmiBlitz3_noFPU_r470.ab3@26581>   CLR.w connest
00035BB4 <AmiBlitz3_noFPU_r470.ab3@26582>   LEA str_calcexpression,A5
00035BBA <AmiBlitz3_noFPU_r470.ab3@26583>   JSR AJL_0_BF6E
00035BC0 <AmiBlitz3_noFPU_r470.ab3@26584>   LEA str_calcexpression,A0
00035BC2 <AmiBlitz3_noFPU_r470.ab3@26585>   TST.l D3
00035BC6 <AmiBlitz3_noFPU_r470.ab3@26586>    BPL.w JL_0_11AE8
00035BCA <AmiBlitz3_noFPU_r470.ab3@26587>   MOVE.b #$2D,(A0)+
00035BCC <AmiBlitz3_noFPU_r470.ab3@26588>   NEG.l D3
00035BD4 <AmiBlitz3_noFPU_r470.ab3@26591>   CMPI.w #$80,CalculatorButtonDecFlag
00035BD8 <AmiBlitz3_noFPU_r470.ab3@26592>    BEQ.w JL_0_11B74
00035BDA <AmiBlitz3_noFPU_r470.ab3@26593>   MOVEQ.l #$00,D1
00035BE2 <AmiBlitz3_noFPU_r470.ab3@26594>   CMPI.w #$80,CalculatorButtonBinFlag
00035BE6 <AmiBlitz3_noFPU_r470.ab3@26595>    BNE.w JL_0_11B36
00035BE8 <AmiBlitz3_noFPU_r470.ab3@26596>   MOVEQ.l #$1F,D0
00035BEC <AmiBlitz3_noFPU_r470.ab3@26597>   MOVE.b #$25,(A0)+
00035BEE <AmiBlitz3_noFPU_r470.ab3@26600>       LSL.l #1,D3
00035BF2 <AmiBlitz3_noFPU_r470.ab3@26601>        BCC.w JL_0_11B18
00035BF6 <AmiBlitz3_noFPU_r470.ab3@26602>       MOVE.b #"1",(A0)+
00035BF8 <AmiBlitz3_noFPU_r470.ab3@26603>       MOVEQ.l #-$01,D1
00035BFC <AmiBlitz3_noFPU_r470.ab3@26604>   BRA.w JL_0_11B22
00035BFE <AmiBlitz3_noFPU_r470.ab3@26607>       TST.w D1
00035C02 <AmiBlitz3_noFPU_r470.ab3@26608>       BEQ.w JL_0_11B22
00035C06 <AmiBlitz3_noFPU_r470.ab3@26609>       MOVE.b #"0",(A0)+
00035C0A <AmiBlitz3_noFPU_r470.ab3@26612>  DBF D0,JL_0_11B08
00035C0C <AmiBlitz3_noFPU_r470.ab3@26615>   TST.w D1
00035C10 <AmiBlitz3_noFPU_r470.ab3@26616>   BNE.w JL_0_11B30
00035C14 <AmiBlitz3_noFPU_r470.ab3@26617>   MOVE.b #"0",(A0)+
00035C16 <AmiBlitz3_noFPU_r470.ab3@26620>   CLR.b (A0)
00035C1A <AmiBlitz3_noFPU_r470.ab3@26621> BRA.w JL_0_11B7C
00035C1C <AmiBlitz3_noFPU_r470.ab3@26624>   MOVEQ.l #$07,D0
00035C20 <AmiBlitz3_noFPU_r470.ab3@26625>   MOVE.b #$24,(A0)+
00035C22 <AmiBlitz3_noFPU_r470.ab3@26628>     MOVE.l D3,D2
00035C24 <AmiBlitz3_noFPU_r470.ab3@26629>     SWAP D2
00035C26 <AmiBlitz3_noFPU_r470.ab3@26630>     LSR.w #8,D2
00035C28 <AmiBlitz3_noFPU_r470.ab3@26631>     LSR.w #4,D2
00035C2C <AmiBlitz3_noFPU_r470.ab3@26632>     ADDI.w #$30,D2
00035C30 <AmiBlitz3_noFPU_r470.ab3@26633>     CMP.w #$3A,D2
00035C34 <AmiBlitz3_noFPU_r470.ab3@26634>      BCS.w JL_0_11B52
00035C36 <AmiBlitz3_noFPU_r470.ab3@26635>     ADDQ.w #7,D2
00035C3A <AmiBlitz3_noFPU_r470.ab3@26638>     CMP.w #$30,D2
00035C3E <AmiBlitz3_noFPU_r470.ab3@26639>     BEQ.w JL_0_11B62
00035C40 <AmiBlitz3_noFPU_r470.ab3@26640>     MOVE.b D2,(A0)+
00035C42 <AmiBlitz3_noFPU_r470.ab3@26641>     MOVEQ.l #-$01,D1
00035C46 <AmiBlitz3_noFPU_r470.ab3@26642>   BRA.w JL_0_11B6A
00035C48 <AmiBlitz3_noFPU_r470.ab3@26645>     TST.w D1
00035C4C <AmiBlitz3_noFPU_r470.ab3@26646>      BEQ.w JL_0_11B6A
00035C4E <AmiBlitz3_noFPU_r470.ab3@26647>     MOVE.b D2,(A0)+
00035C50 <AmiBlitz3_noFPU_r470.ab3@26650>     LSL.l #4,D3
00035C54 <AmiBlitz3_noFPU_r470.ab3@26651>  DBF D0,JL_0_11B3C
00035C58 <AmiBlitz3_noFPU_r470.ab3@26653> BRA.w JL_0_11B26
00035C5A <AmiBlitz3_noFPU_r470.ab3@26656>   MOVE.l D3,D2
00035C60 <AmiBlitz3_noFPU_r470.ab3@26657>   JSR makelong
00035C6A <AmiBlitz3_noFPU_r470.ab3@26664>   MOVE.l destbufferend_backup_calc,destbufferend
00035C6C <AmiBlitz3_noFPU_r470.ab3@26666> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00035D6B <AmiBlitz3_noFPU_r470.ab3@26670> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00035D6C <AmiBlitz3_noFPU_r470.ab3@26672> Even
00035D6E <AmiBlitz3_noFPU_r470.ab3@26686>     MOVE.b (a5)+,d0
00035D72 <AmiBlitz3_noFPU_r470.ab3@26687>     BEQ 'l2
00035D76 <AmiBlitz3_noFPU_r470.ab3@26688>     CMP.b #$80,d0
00035D7A <AmiBlitz3_noFPU_r470.ab3@26689>     BNE 'l1
00035D7C <AmiBlitz3_noFPU_r470.ab3@26690>     MOVE.b (a5)+,d0
00035D80 <AmiBlitz3_noFPU_r470.ab3@26691>     BEQ 'l2
00035D84 <AmiBlitz3_noFPU_r470.ab3@26692>     CMP.b #$02,d0
00035D88 <AmiBlitz3_noFPU_r470.ab3@26693>   BNE 'l1
00035D8C <AmiBlitz3_noFPU_r470.ab3@26696>     CMP.b #$20,(a5)+
00035D90 <AmiBlitz3_noFPU_r470.ab3@26697>   BEQ 'l3
00035D92 <AmiBlitz3_noFPU_r470.ab3@26698>   SUBQ.l #1,a5
00035D94 <AmiBlitz3_noFPU_r470.ab3@26699>   TST.b (a5)
00035D98 <AmiBlitz3_noFPU_r470.ab3@26700>   BEQ 'l2
00035D9C <AmiBlitz3_noFPU_r470.ab3@26701>   CMP.w #$8008,(a5)
00035DA0 <AmiBlitz3_noFPU_r470.ab3@26702>   BEQ 'l4
00035DA4 <AmiBlitz3_noFPU_r470.ab3@26703>   CMP.w #$8009,(a5)
00035DA8 <AmiBlitz3_noFPU_r470.ab3@26704>   BEQ 'l4
00035DAC <AmiBlitz3_noFPU_r470.ab3@26705> BRA 'l1
00035DAE <AmiBlitz3_noFPU_r470.ab3@26708>   ADDQ.l #2,a5
00035DB4 <AmiBlitz3_noFPU_r470.ab3@26709>   JSR skiprest
00035DB6 <AmiBlitz3_noFPU_r470.ab3@26710> RTS
00035DBC <AmiBlitz3_noFPU_r470.ab3@26713>   JSR nextline
00035DC0 <AmiBlitz3_noFPU_r470.ab3@26714>   BNE 'l1
00035DC2 <AmiBlitz3_noFPU_r470.ab3@26715> RTS
00035DEC <AmiBlitz3_noFPU_r470.ab3@26719>   !basic
00035DF6 <AmiBlitz3_noFPU_r470.ab3@26720>   DateFormat 1
00035E04 <AmiBlitz3_noFPU_r470.ab3@26721>   i.l=SystemDate
00035E2A <AmiBlitz3_noFPU_r470.ab3@26722>   a$=Date$ (i)
00035EA8 <AmiBlitz3_noFPU_r470.ab3@26723>   a$=Replace$(a$,"/",".")
00035EAE <AmiBlitz3_noFPU_r470.ab3@26724>   GetD0 &a$
00035EB0 <AmiBlitz3_noFPU_r470.ab3@26725>   MOVEQ #8,d2
00035EB2 <AmiBlitz3_noFPU_r470.ab3@26726>   MOVE.l d0,a0
00035EB4 <AmiBlitz3_noFPU_r470.ab3@26729>     MOVE.b (a0)+,d1
00035EBA <AmiBlitz3_noFPU_r470.ab3@26730>     JSR pokedata1b
00035EBE <AmiBlitz3_noFPU_r470.ab3@26731>  DBF d2,'l1
00035EC0 <AmiBlitz3_noFPU_r470.ab3@26733>   MOVEQ #0,d0
00035EC2 <AmiBlitz3_noFPU_r470.ab3@26734>   MOVE.b (a0)+,d0
00035EE0 <AmiBlitz3_noFPU_r470.ab3@26735>   !asm
00035EE6 <AmiBlitz3_noFPU_r470.ab3@26736>   ADD.l #9,d2
00035EEC <AmiBlitz3_noFPU_r470.ab3@26737>   ADD.l #9,a5
00035EEE <AmiBlitz3_noFPU_r470.ab3@26738> RTS
00035F18 <AmiBlitz3_noFPU_r470.ab3@26742>   !basic
00035F22 <AmiBlitz3_noFPU_r470.ab3@26743>   DateFormat 0
00035F30 <AmiBlitz3_noFPU_r470.ab3@26744>   i.l=SystemDate
00035F56 <AmiBlitz3_noFPU_r470.ab3@26745>   a$=Date$ (i)
00035FD4 <AmiBlitz3_noFPU_r470.ab3@26746>   a$=Replace$(a$,"/",".")
00035FDA <AmiBlitz3_noFPU_r470.ab3@26747>   GetD0 &a$
00035FDC <AmiBlitz3_noFPU_r470.ab3@26748>   MOVEQ #8,d2
00035FDE <AmiBlitz3_noFPU_r470.ab3@26749>   MOVE.l d0,a0
00035FE0 <AmiBlitz3_noFPU_r470.ab3@26752>     MOVE.b (a0)+,d1
00035FE6 <AmiBlitz3_noFPU_r470.ab3@26753>     JSR pokedata1b
00035FEA <AmiBlitz3_noFPU_r470.ab3@26754>  DBF d2,'l1
00035FEC <AmiBlitz3_noFPU_r470.ab3@26756>   MOVEQ #0,d0
00035FEE <AmiBlitz3_noFPU_r470.ab3@26757>   MOVE.b (a0)+,d0
0003600C <AmiBlitz3_noFPU_r470.ab3@26758>   !asm
00036012 <AmiBlitz3_noFPU_r470.ab3@26759>   ADD.l #9,d2
00036018 <AmiBlitz3_noFPU_r470.ab3@26760>   ADD.l #13,a5
0003601A <AmiBlitz3_noFPU_r470.ab3@26761> RTS
00036044 <AmiBlitz3_noFPU_r470.ab3@26765>   !basic
0003604E <AmiBlitz3_noFPU_r470.ab3@26766>   DateFormat 1
0003605C <AmiBlitz3_noFPU_r470.ab3@26767>   i.l = SystemDate
00036082 <AmiBlitz3_noFPU_r470.ab3@26768>   a$ = Date$ (i)
00036100 <AmiBlitz3_noFPU_r470.ab3@26769>   a$ = Replace$(a$,"/",".")
00036106 <AmiBlitz3_noFPU_r470.ab3@26770>   GetD0 &a$
00036108 <AmiBlitz3_noFPU_r470.ab3@26771>   MOVEQ #8,d2
0003610A <AmiBlitz3_noFPU_r470.ab3@26772>   MOVE.l d0,a0
0003610C <AmiBlitz3_noFPU_r470.ab3@26775>     MOVE.b (a0)+,d1
00036112 <AmiBlitz3_noFPU_r470.ab3@26776>     JSR writebyte
00036116 <AmiBlitz3_noFPU_r470.ab3@26777>  DBF d2,'l1
00036118 <AmiBlitz3_noFPU_r470.ab3@26779>   MOVEQ #0,d0
0003611A <AmiBlitz3_noFPU_r470.ab3@26780>   MOVE.b (a0)+,d0
00036138 <AmiBlitz3_noFPU_r470.ab3@26781>   !asm
0003613E <AmiBlitz3_noFPU_r470.ab3@26782>   ADD.l #9,a5
00036140 <AmiBlitz3_noFPU_r470.ab3@26783> RTS
0003616A <AmiBlitz3_noFPU_r470.ab3@26787>   !basic
00036174 <AmiBlitz3_noFPU_r470.ab3@26788>   DateFormat 0
00036182 <AmiBlitz3_noFPU_r470.ab3@26789>   i.l=SystemDate
000361A8 <AmiBlitz3_noFPU_r470.ab3@26790>   a$=Date$ (i)
00036226 <AmiBlitz3_noFPU_r470.ab3@26791>   a$=Replace$(a$,"/",".")
0003622C <AmiBlitz3_noFPU_r470.ab3@26792>   GetD0 &a$
0003622E <AmiBlitz3_noFPU_r470.ab3@26793>   MOVEQ #8,d2
00036230 <AmiBlitz3_noFPU_r470.ab3@26794>   MOVE.l d0,a0
00036232 <AmiBlitz3_noFPU_r470.ab3@26797>     MOVE.b (a0)+,d1
00036238 <AmiBlitz3_noFPU_r470.ab3@26798>     JSR writebyte
0003623C <AmiBlitz3_noFPU_r470.ab3@26799>  DBF d2,'l1
0003623E <AmiBlitz3_noFPU_r470.ab3@26801>   MOVEQ #0,d0
00036240 <AmiBlitz3_noFPU_r470.ab3@26802>   MOVE.b (a0)+,d0
0003625E <AmiBlitz3_noFPU_r470.ab3@26803>   !asm
00036264 <AmiBlitz3_noFPU_r470.ab3@26804>   ADD.l #13,a5
00036266 <AmiBlitz3_noFPU_r470.ab3@26805> RTS
00036268 <AmiBlitz3_noFPU_r470.ab3@26809>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003626A <AmiBlitz3_noFPU_r470.ab3@26810>   MOVE.l a5,d0
00036294 <AmiBlitz3_noFPU_r470.ab3@26811>   !basic
00036298 <AmiBlitz3_noFPU_r470.ab3@26812>   _myD0.l = PutD0
000362A2 <AmiBlitz3_noFPU_r470.ab3@26813>   If _myD0
000362E8 <AmiBlitz3_noFPU_r470.ab3@26814>     verstring$ = Left$(Peek.s(_myD0),9+3)
0003633A <AmiBlitz3_noFPU_r470.ab3@26815>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036340 <AmiBlitz3_noFPU_r470.ab3@26816>   Else
0003637A <AmiBlitz3_noFPU_r470.ab3@26817>     error{"INTERNAL: Invalid pointer in version_string!"}
0003638A <AmiBlitz3_noFPU_r470.ab3@26822>   actual_version.l = Peek.l(?versioninformation)
0003639A <AmiBlitz3_noFPU_r470.ab3@26823>   actual_build.l   = Peek.l(?number_of_builds)
000363BE <AmiBlitz3_noFPU_r470.ab3@26825>   Format "00"
000363F4 <AmiBlitz3_noFPU_r470.ab3@26826>   Select verstring$
00036418 <AmiBlitz3_noFPU_r470.ab3@26828>     Case "VER_MAJOR"
00036454 <AmiBlitz3_noFPU_r470.ab3@26829>      put_versionstr$ = Str$(actual_version LSR 24)
0003647E <AmiBlitz3_noFPU_r470.ab3@26831>     Case "VER_MINOR"
000364C2 <AmiBlitz3_noFPU_r470.ab3@26832>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000364EC <AmiBlitz3_noFPU_r470.ab3@26834>     Case "VER_PATCH"
00036530 <AmiBlitz3_noFPU_r470.ab3@26835>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003655A <AmiBlitz3_noFPU_r470.ab3@26837>     Case "VER_BUILD"
0003657E <AmiBlitz3_noFPU_r470.ab3@26838>      Format ""
000365B2 <AmiBlitz3_noFPU_r470.ab3@26839>      put_versionstr$ = Str$(actual_build)
000365B8 <AmiBlitz3_noFPU_r470.ab3@26841>     Default
000365E0 <AmiBlitz3_noFPU_r470.ab3@26842>      put_versionstr$ = "{unknown compilerconstant}"
000365EE <AmiBlitz3_noFPU_r470.ab3@26845>   End Select
00036612 <AmiBlitz3_noFPU_r470.ab3@26846>   Format ""
00036622 <AmiBlitz3_noFPU_r470.ab3@26848>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00036624 <AmiBlitz3_noFPU_r470.ab3@26849>   MOVE.l d0,d2
00036626 <AmiBlitz3_noFPU_r470.ab3@26850>   MOVE.l d2,-(a7)
0003662A <AmiBlitz3_noFPU_r470.ab3@26851>   SUB #1,d2
00036630 <AmiBlitz3_noFPU_r470.ab3@26853>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036632 <AmiBlitz3_noFPU_r470.ab3@26854>   MOVE.l d0,a0
00036634 <AmiBlitz3_noFPU_r470.ab3@26857>     MOVE.b (a0)+,d1
0003663A <AmiBlitz3_noFPU_r470.ab3@26858>     JSR pokedata1b
0003663E <AmiBlitz3_noFPU_r470.ab3@26859>  DBF d2,'l1
00036640 <AmiBlitz3_noFPU_r470.ab3@26861>   MOVEQ #0,d0
0003665E <AmiBlitz3_noFPU_r470.ab3@26862>   !asm
00036660 <AmiBlitz3_noFPU_r470.ab3@26863>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036662 <AmiBlitz3_noFPU_r470.ab3@26864>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036664 <AmiBlitz3_noFPU_r470.ab3@26865>   ADD.l d0,d2
0003666A <AmiBlitz3_noFPU_r470.ab3@26866>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003666C <AmiBlitz3_noFPU_r470.ab3@26867>   MOVEQ #0,d0
0003666E <AmiBlitz3_noFPU_r470.ab3@26868> RTS
00036670 <AmiBlitz3_noFPU_r470.ab3@26872>   MOVE.l a5,d0
0003669A <AmiBlitz3_noFPU_r470.ab3@26873>   !basic
0003669E <AmiBlitz3_noFPU_r470.ab3@26874>   _myD0.l = PutD0
000366A8 <AmiBlitz3_noFPU_r470.ab3@26875>   If _myD0
000366EE <AmiBlitz3_noFPU_r470.ab3@26876>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036740 <AmiBlitz3_noFPU_r470.ab3@26877>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036746 <AmiBlitz3_noFPU_r470.ab3@26878>   Else
00036780 <AmiBlitz3_noFPU_r470.ab3@26879>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036790 <AmiBlitz3_noFPU_r470.ab3@26884>   actual_version.l = Peek.l(?versioninformation)
000367A0 <AmiBlitz3_noFPU_r470.ab3@26885>   actual_build.l   = Peek.l(?number_of_builds)
000367C4 <AmiBlitz3_noFPU_r470.ab3@26887>   Format ""
000367FA <AmiBlitz3_noFPU_r470.ab3@26888>   Select verstring$
0003681E <AmiBlitz3_noFPU_r470.ab3@26890>     Case "VER_MAJOR"
0003685A <AmiBlitz3_noFPU_r470.ab3@26891>      put_versionstr$ = Str$(actual_version LSR 24)
00036884 <AmiBlitz3_noFPU_r470.ab3@26893>     Case "VER_MINOR"
000368C8 <AmiBlitz3_noFPU_r470.ab3@26894>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000368F2 <AmiBlitz3_noFPU_r470.ab3@26896>     Case "VER_PATCH"
00036936 <AmiBlitz3_noFPU_r470.ab3@26897>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036960 <AmiBlitz3_noFPU_r470.ab3@26899>     Case "VER_BUILD"
00036984 <AmiBlitz3_noFPU_r470.ab3@26900>      Format ""
000369B8 <AmiBlitz3_noFPU_r470.ab3@26901>      put_versionstr$ = Str$(actual_build)
000369BE <AmiBlitz3_noFPU_r470.ab3@26903>     Default
000369E6 <AmiBlitz3_noFPU_r470.ab3@26904>      put_versionstr$ = "{unknown compilerconstant}"
000369F4 <AmiBlitz3_noFPU_r470.ab3@26906>   End Select
00036A18 <AmiBlitz3_noFPU_r470.ab3@26907>   Format ""
00036A2E <AmiBlitz3_noFPU_r470.ab3@26909>   GetD0 FLen(put_versionstr$)-1
00036A30 <AmiBlitz3_noFPU_r470.ab3@26910>   MOVE.l d0,d2
00036A36 <AmiBlitz3_noFPU_r470.ab3@26912>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036A38 <AmiBlitz3_noFPU_r470.ab3@26913>   MOVE.l d0,a0
00036A3A <AmiBlitz3_noFPU_r470.ab3@26916>     MOVE.b (a0)+,d1
00036A40 <AmiBlitz3_noFPU_r470.ab3@26917>     JSR writebyte
00036A44 <AmiBlitz3_noFPU_r470.ab3@26918>  DBF d2,'l1
00036A46 <AmiBlitz3_noFPU_r470.ab3@26920>   MOVEQ #0,d0
00036A48 <AmiBlitz3_noFPU_r470.ab3@26921>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036A66 <AmiBlitz3_noFPU_r470.ab3@26922>   !asm
00036A6C <AmiBlitz3_noFPU_r470.ab3@26923>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036A6E <AmiBlitz3_noFPU_r470.ab3@26924> RTS
00036A70 <AmiBlitz3_noFPU_r470.ab3@27026>  MOVE.l a5,-(a7)
00036A9C <AmiBlitz3_noFPU_r470.ab3@27027>  !fget
00036AA0 <AmiBlitz3_noFPU_r470.ab3@27028>  CMP.w #".",d0
00036AA4 <AmiBlitz3_noFPU_r470.ab3@27029>  BNE 'skip
00036AA8 <AmiBlitz3_noFPU_r470.ab3@27030>  MOVEM.l a2/d2,-(a7)
00036AAE <AmiBlitz3_noFPU_r470.ab3@27031>  LEA newtypebase,a2
00036AB4 <AmiBlitz3_noFPU_r470.ab3@27032>  JSR getparameter2
00036AB8 <AmiBlitz3_noFPU_r470.ab3@27033>  BEQ.w JUMP_syntaxerr
00036ABE <AmiBlitz3_noFPU_r470.ab3@27034>  JSR findtype
00036AC2 <AmiBlitz3_noFPU_r470.ab3@27035>  BNE.w JUMP_notypeerr
00036AC8 <AmiBlitz3_noFPU_r470.ab3@27036>  MOVE.l a2,typetocast
00036ACC <AmiBlitz3_noFPU_r470.ab3@27037>  MOVEM.l (a7)+,a2/d2
00036AD0 <AmiBlitz3_noFPU_r470.ab3@27038>  CMP.w #")",d0
00036AD4 <AmiBlitz3_noFPU_r470.ab3@27039>  BNE JUMP_errorbracketmiss
00036AD6 <AmiBlitz3_noFPU_r470.ab3@27040>  ADDQ.l #4,a7
00036B02 <AmiBlitz3_noFPU_r470.ab3@27041>  !fget
00036B08 <AmiBlitz3_noFPU_r470.ab3@27042>  JMP nocast
00036B0A <AmiBlitz3_noFPU_r470.ab3@27044> 'skip MOVE.l (a7)+,a5
00036B10 <AmiBlitz3_noFPU_r470.ab3@27045>  JMP JL_0_A410
00036B16 <AmiBlitz3_noFPU_r470.ab3@27047> JUMP_errorbracketmiss JMP errorbracketmiss
00036B40 <AmiBlitz3_noFPU_r470.ab3@27049> Function.l ab3_GetIncludeLock{filename.s}
00036B60 <AmiBlitz3_noFPU_r470.ab3@27050>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00036BB8 <AmiBlitz3_noFPU_r470.ab3@27051>   ex.s       = dos_GetExt{filename}
00036BCC <AmiBlitz3_noFPU_r470.ab3@27053>   If incLock = False
00036C40 <AmiBlitz3_noFPU_r470.ab3@27054>     filename = dos_SetExt{filename,"ab3"}
00036C60 <AmiBlitz3_noFPU_r470.ab3@27055>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00036C74 <AmiBlitz3_noFPU_r470.ab3@27058>   If incLock = False
00036CE8 <AmiBlitz3_noFPU_r470.ab3@27059>     filename = dos_SetExt{filename,"ab2"}
00036D08 <AmiBlitz3_noFPU_r470.ab3@27060>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00036D1C <AmiBlitz3_noFPU_r470.ab3@27063>   If incLock = False
00036D90 <AmiBlitz3_noFPU_r470.ab3@27064>     filename = dos_SetExt{filename,"bb2"}
00036DB0 <AmiBlitz3_noFPU_r470.ab3@27065>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00036DC4 <AmiBlitz3_noFPU_r470.ab3@27068>   If incLock = False
00036E56 <AmiBlitz3_noFPU_r470.ab3@27069>     filename = dos_SetExt{filename,ex+".ab3"}
00036E76 <AmiBlitz3_noFPU_r470.ab3@27070>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00036E8A <AmiBlitz3_noFPU_r470.ab3@27073>   If incLock = False
00036EFE <AmiBlitz3_noFPU_r470.ab3@27074>     filename = dos_SetExt{filename,"ab2"}
00036F1E <AmiBlitz3_noFPU_r470.ab3@27075>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00036F32 <AmiBlitz3_noFPU_r470.ab3@27078>   If incLock = False
00036FA6 <AmiBlitz3_noFPU_r470.ab3@27079>     filename = dos_SetExt{filename,"bb2"}
00036FC6 <AmiBlitz3_noFPU_r470.ab3@27080>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00036FD0 <AmiBlitz3_noFPU_r470.ab3@27083>  Function Return incLock
00036FEA <AmiBlitz3_noFPU_r470.ab3@27084> End Function
00037014 <AmiBlitz3_noFPU_r470.ab3@27088>   !basic
0003703E <AmiBlitz3_noFPU_r470.ab3@27089>   incString.s = Peek$(?ptr_parameterstore)
0003706C <AmiBlitz3_noFPU_r470.ab3@27091>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037070 <AmiBlitz3_noFPU_r470.ab3@27092>   incDirP.l   = PutD0                                       ;    "
00037098 <AmiBlitz3_noFPU_r470.ab3@27093>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037118 <AmiBlitz3_noFPU_r470.ab3@27094>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003714A <AmiBlitz3_noFPU_r470.ab3@27095>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
0003715E <AmiBlitz3_noFPU_r470.ab3@27097>   If incLock = False ; not found => check default Include Directory
0003716E <AmiBlitz3_noFPU_r470.ab3@27098>     incDirP.l = Peek.l(?incd)
00037178 <AmiBlitz3_noFPU_r470.ab3@27099>     If incDirP
000371A0 <AmiBlitz3_noFPU_r470.ab3@27100>       incDir_.s = Peek.s(incDirP)
000371A6 <AmiBlitz3_noFPU_r470.ab3@27101>     Else
00037210 <AmiBlitz3_noFPU_r470.ab3@27102>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037290 <AmiBlitz3_noFPU_r470.ab3@27104>     incFile.s = dos_AddPart{incDir_,incString}
000372C2 <AmiBlitz3_noFPU_r470.ab3@27105>     incLock.l = ab3_GetIncludeLock{incFile}
000372D6 <AmiBlitz3_noFPU_r470.ab3@27108>   If incLock = False ; not found => check relative to current source
000372EE <AmiBlitz3_noFPU_r470.ab3@27109>     incDepth.l = Peek.w(?ininclude)-1
00037314 <AmiBlitz3_noFPU_r470.ab3@27110>     If incDepth >= 0 AND incDepth < #maxincludes
00037374 <AmiBlitz3_noFPU_r470.ab3@27111>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
000373F4 <AmiBlitz3_noFPU_r470.ab3@27112>       incFile.s = dos_AddPart{incDir_,incString}
00037426 <AmiBlitz3_noFPU_r470.ab3@27113>       incLock.l = ab3_GetIncludeLock{incFile}
0003743A <AmiBlitz3_noFPU_r470.ab3@27117>   If incLock = False ; still not found => check default Include Directory and name only
0003744A <AmiBlitz3_noFPU_r470.ab3@27118>     incDirP.l = Peek.l(?incd)
00037454 <AmiBlitz3_noFPU_r470.ab3@27119>     If incDirP
0003747C <AmiBlitz3_noFPU_r470.ab3@27120>       incDir_.s = Peek.s(incDirP)
00037482 <AmiBlitz3_noFPU_r470.ab3@27121>     Else
000374EC <AmiBlitz3_noFPU_r470.ab3@27122>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003759A <AmiBlitz3_noFPU_r470.ab3@27124>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
000375CC <AmiBlitz3_noFPU_r470.ab3@27125>     incLock.l = ab3_GetIncludeLock{incFile}
000375D6 <AmiBlitz3_noFPU_r470.ab3@27128>   If incLock
000375EC <AmiBlitz3_noFPU_r470.ab3@27129>     MaxLen incFile = 1024
00037610 <AmiBlitz3_noFPU_r470.ab3@27130>     NameFromLock_ incLock,&incFile,1024
0003763A <AmiBlitz3_noFPU_r470.ab3@27131>     incFile = Peek.s(&incFile)
00037672 <AmiBlitz3_noFPU_r470.ab3@27132>     Poke$ ?ptr_parameterstore,incFile
00037686 <AmiBlitz3_noFPU_r470.ab3@27133>     i = FLen(incFile)
00037692 <AmiBlitz3_noFPU_r470.ab3@27134>     GetReg d0,i
00037698 <AmiBlitz3_noFPU_r470.ab3@27135>     MOVE.l d0,tempstore
000376A8 <AmiBlitz3_noFPU_r470.ab3@27136>     UnLock_ incLock
000376C6 <AmiBlitz3_noFPU_r470.ab3@27139>   !asm
000376CC <AmiBlitz3_noFPU_r470.ab3@27140>   TST.l tempstore
000376D0 <AmiBlitz3_noFPU_r470.ab3@27141>    BEQ 'l1
000376D6 <AmiBlitz3_noFPU_r470.ab3@27142>   MOVE.l tempstore,d2
000376D8 <AmiBlitz3_noFPU_r470.ab3@27145> RTS
00037702 <AmiBlitz3_noFPU_r470.ab3@27149>   !basic
0003772C <AmiBlitz3_noFPU_r470.ab3@27150>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
0003775A <AmiBlitz3_noFPU_r470.ab3@27151>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003775E <AmiBlitz3_noFPU_r470.ab3@27152>   incDirP.l   = PutD0                                       ;    "
00037786 <AmiBlitz3_noFPU_r470.ab3@27153>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037806 <AmiBlitz3_noFPU_r470.ab3@27154>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037826 <AmiBlitz3_noFPU_r470.ab3@27155>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
0003783A <AmiBlitz3_noFPU_r470.ab3@27157>   If incLock = False                                        ; not found => try orignal string only to find
0003785A <AmiBlitz3_noFPU_r470.ab3@27158>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037864 <AmiBlitz3_noFPU_r470.ab3@27161>   If incLock                                                ; found => store full path
0003787A <AmiBlitz3_noFPU_r470.ab3@27162>     MaxLen incFile = 1024
0003789E <AmiBlitz3_noFPU_r470.ab3@27163>     NameFromLock_ incLock,&incFile,1024
000378C8 <AmiBlitz3_noFPU_r470.ab3@27164>     incFile = Peek.s(&incFile)
00037900 <AmiBlitz3_noFPU_r470.ab3@27165>     Poke$ ?ptr_parameterstore,incFile
0003790C <AmiBlitz3_noFPU_r470.ab3@27168> 
0003792A <AmiBlitz3_noFPU_r470.ab3@27169>   !asm
0003792C <AmiBlitz3_noFPU_r470.ab3@27170> RTS
00037932 <AmiBlitz3_noFPU_r470.ab3@27181>   JSR Aclearallvars
00037938 <AmiBlitz3_noFPU_r470.ab3@27182>   JSR free_unusedfunctions
00037942 <AmiBlitz3_noFPU_r470.ab3@27197>   MOVE.l #"NORE",reqmode
00037948 <AmiBlitz3_noFPU_r470.ab3@27198> JSR handle_compileerror
0003794A <AmiBlitz3_noFPU_r470.ab3@27201>   MOVE.l d0,-(a7)
0003794C <AmiBlitz3_noFPU_r470.ab3@27202>   MOVE.l a5,d0
00037956 <AmiBlitz3_noFPU_r470.ab3@27203>   !basica7
0003795A <AmiBlitz3_noFPU_r470.ab3@27204>   i.l = PutD0
00037964 <AmiBlitz3_noFPU_r470.ab3@27205>   If i
0003798C <AmiBlitz3_noFPU_r470.ab3@27206>     a$ = Peek$(i)
000379BE <AmiBlitz3_noFPU_r470.ab3@27207>     b$ = Peeks$(i-7,7)
00037AF6 <AmiBlitz3_noFPU_r470.ab3@27209> 
00037AFC <AmiBlitz3_noFPU_r470.ab3@27210>     MOVE.l d0,result
00037B00 <AmiBlitz3_noFPU_r470.ab3@27212>   !asma7
00037B02 <AmiBlitz3_noFPU_r470.ab3@27213>   MOVE.l (a7)+,d0
00037B04 <AmiBlitz3_noFPU_r470.ab3@27214> RTS
00037B2E <AmiBlitz3_noFPU_r470.ab3@27218>   !basic
00037B5C <AmiBlitz3_noFPU_r470.ab3@27219>   !ComData_LEA{comStr_CurrentDir,D0}
00037B60 <AmiBlitz3_noFPU_r470.ab3@27220>   currentDirP.l = PutD0
00037B8E <AmiBlitz3_noFPU_r470.ab3@27222>   !ComData_LEA{comStr_SourceName,D0}
00037B92 <AmiBlitz3_noFPU_r470.ab3@27223>   fileNameP.l = PutD0
00037BBA <AmiBlitz3_noFPU_r470.ab3@27225>   check_dirname$  = Peek$(currentDirP)
00037BE2 <AmiBlitz3_noFPU_r470.ab3@27226>   check_filename$ = Peek$(fileNameP)
00037C68 <AmiBlitz3_noFPU_r470.ab3@27227>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
00037C6E <AmiBlitz3_noFPU_r470.ab3@27228>     JSR free_unusedfunctions
00037CB8 <AmiBlitz3_noFPU_r470.ab3@27230>   olddirname$ = Peek$(check_dirname$)
00037D02 <AmiBlitz3_noFPU_r470.ab3@27231>   oldfilename$ = Peek$(check_filename$)
00037D2C <AmiBlitz3_noFPU_r470.ab3@27232>   For i = 0 To #maxincludes-1
00037D40 <AmiBlitz3_noFPU_r470.ab3@27233>     incline(i) = 0
00037D50 <AmiBlitz3_noFPU_r470.ab3@27234>   Next
00037D6E <AmiBlitz3_noFPU_r470.ab3@27235>   !asm
00037D70 <AmiBlitz3_noFPU_r470.ab3@27236> RTS
00037D72 <AmiBlitz3_noFPU_r470.ab3@27240>   MOVEQ #0,d1
00037D74 <AmiBlitz3_noFPU_r470.ab3@27243>   MOVE.b (a5)+,d0
00037D78 <AmiBlitz3_noFPU_r470.ab3@27244>   BEQ 'er1
00037D7C <AmiBlitz3_noFPU_r470.ab3@27245>   CMP.b #$20,d0
00037D80 <AmiBlitz3_noFPU_r470.ab3@27246>   BEQ 'l1
00037D82 <AmiBlitz3_noFPU_r470.ab3@27247>   ADDQ #1,d1
00037D86 <AmiBlitz3_noFPU_r470.ab3@27248>   CMP.b #$22,d0
00037D8A <AmiBlitz3_noFPU_r470.ab3@27249>   BNE 'l1
00037D8C <AmiBlitz3_noFPU_r470.ab3@27250> RTS
00037D92 <AmiBlitz3_noFPU_r470.ab3@27253> JMP syntaxerr
00037DB6 <AmiBlitz3_noFPU_r470.ab3@27264> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00037DD4 <AmiBlitz3_noFPU_r470.ab3@27265> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00037DDA <AmiBlitz3_noFPU_r470.ab3@27270>   TST.b exdebug
00037DDE <AmiBlitz3_noFPU_r470.ab3@27271>   BNE 'l10
00037DE4 <AmiBlitz3_noFPU_r470.ab3@27272>   MOVE.l #$4e71,d1
00037DEA <AmiBlitz3_noFPU_r470.ab3@27273>   JSR writeword
00037DF0 <AmiBlitz3_noFPU_r470.ab3@27274>   MOVE.l destpointer,d0
00037DF2 <AmiBlitz3_noFPU_r470.ab3@27275>   MOVE.l d0,d1
00037DF4 <AmiBlitz3_noFPU_r470.ab3@27276>   ADDQ.l #3,d1
00037DFA <AmiBlitz3_noFPU_r470.ab3@27277>   AND.l #$fffffffc,d1
00037E00 <AmiBlitz3_noFPU_r470.ab3@27278>   MOVE.l d1,destpointer
00037E06 <AmiBlitz3_noFPU_r470.ab3@27279>   SUB.l destpointer,d0
00037E0A <AmiBlitz3_noFPU_r470.ab3@27280>   BEQ 'lnf1
00037E14 <AmiBlitz3_noFPU_r470.ab3@27281>   CMP.l #-1,bssstart
00037E18 <AmiBlitz3_noFPU_r470.ab3@27282>   BNE 'lnf1
00037E22 <AmiBlitz3_noFPU_r470.ab3@27283>   CMP.l #-1,chipstart
00037E26 <AmiBlitz3_noFPU_r470.ab3@27284>   BNE 'lnf1
00037E2C <AmiBlitz3_noFPU_r470.ab3@27285>   MOVE.l destpointer,a4
00037E32 <AmiBlitz3_noFPU_r470.ab3@27286>   TST.w dontwrite
00037E36 <AmiBlitz3_noFPU_r470.ab3@27287>   BNE 'lnf1
00037E3C <AmiBlitz3_noFPU_r470.ab3@27288>   MOVE.w #$4e71,-2(a4)
00037E46 <AmiBlitz3_noFPU_r470.ab3@27291>   CMP.l #-1,bssstart
00037E4A <AmiBlitz3_noFPU_r470.ab3@27292>   BEQ 'l11
00037E50 <AmiBlitz3_noFPU_r470.ab3@27293>   MOVE.l #erro1t,-(a7)
00037E56 <AmiBlitz3_noFPU_r470.ab3@27294> JMP handle_compileerror
00037E60 <AmiBlitz3_noFPU_r470.ab3@27297>   MOVE.l destpointer,bssstart
00037E68 <AmiBlitz3_noFPU_r470.ab3@27298>   MOVE.b #1,bssmode
00037E6E <AmiBlitz3_noFPU_r470.ab3@27301>   TST.b chipmode
00037E72 <AmiBlitz3_noFPU_r470.ab3@27302>   BEQ 'l10
00037E7C <AmiBlitz3_noFPU_r470.ab3@27303>   MOVE.l destpointer,chipend
00037E82 <AmiBlitz3_noFPU_r470.ab3@27304>   CLR.b chipmode
00037E88 <AmiBlitz3_noFPU_r470.ab3@27307>   JSR get1bytemain
00037E8A <AmiBlitz3_noFPU_r470.ab3@27308> RTS
00037E90 <AmiBlitz3_noFPU_r470.ab3@27312>    TST.b exdebug
00037E94 <AmiBlitz3_noFPU_r470.ab3@27313>   BNE 'x1
00037E9A <AmiBlitz3_noFPU_r470.ab3@27314>   MOVE.l destpointer,d0
00037EA0 <AmiBlitz3_noFPU_r470.ab3@27315>   MOVE.l d0,realbssend
00037EA6 <AmiBlitz3_noFPU_r470.ab3@27316>   MOVE.l #$4e71,d1
00037EAC <AmiBlitz3_noFPU_r470.ab3@27317>   JSR writeword
00037EB2 <AmiBlitz3_noFPU_r470.ab3@27318>   MOVE.l destpointer,d0
00037EB4 <AmiBlitz3_noFPU_r470.ab3@27319>   MOVE.l d0,d1
00037EB6 <AmiBlitz3_noFPU_r470.ab3@27320>   ADDQ.l #3,d1
00037EBC <AmiBlitz3_noFPU_r470.ab3@27321>   AND.l #$fffffffc,d1
00037EC2 <AmiBlitz3_noFPU_r470.ab3@27322>   MOVE.l d1,destpointer
00037EC8 <AmiBlitz3_noFPU_r470.ab3@27323>   SUB.l destpointer,d0
00037ECC <AmiBlitz3_noFPU_r470.ab3@27324>   BEQ 'lnf1
00037ED2 <AmiBlitz3_noFPU_r470.ab3@27325>   MOVE.l destpointer,a4
00037EDC <AmiBlitz3_noFPU_r470.ab3@27326>   CMP.l #-1,bssstart
00037EE0 <AmiBlitz3_noFPU_r470.ab3@27327>   BNE 'lnf1
00037EEA <AmiBlitz3_noFPU_r470.ab3@27328>   CMP.l #-1,chipstart
00037EEE <AmiBlitz3_noFPU_r470.ab3@27329>   BNE 'lnf1
00037EF4 <AmiBlitz3_noFPU_r470.ab3@27330>   TST.w dontwrite
00037EF8 <AmiBlitz3_noFPU_r470.ab3@27331>   BNE 'lnf1
00037EFE <AmiBlitz3_noFPU_r470.ab3@27332>   MOVE.w #$4e71,-2(a4)
00037F04 <AmiBlitz3_noFPU_r470.ab3@27335>   TST.b bssmode
00037F08 <AmiBlitz3_noFPU_r470.ab3@27336>   BEQ 'l10
00037F12 <AmiBlitz3_noFPU_r470.ab3@27337>   MOVE.l destpointer,bssend
00037F18 <AmiBlitz3_noFPU_r470.ab3@27338>   CLR.b bssmode
00037F22 <AmiBlitz3_noFPU_r470.ab3@27343>   CMP.l #-1,chipstart
00037F26 <AmiBlitz3_noFPU_r470.ab3@27344>   BEQ 'l11
00037F2C <AmiBlitz3_noFPU_r470.ab3@27345>   MOVE.l #erro1t,-(a7)
00037F32 <AmiBlitz3_noFPU_r470.ab3@27346> JMP handle_compileerror
00037F3C <AmiBlitz3_noFPU_r470.ab3@27349>   MOVE.l destpointer,chipstart
00037F44 <AmiBlitz3_noFPU_r470.ab3@27350>   MOVE.b #1,chipmode
00037F4A <AmiBlitz3_noFPU_r470.ab3@27353>   JSR get1bytemain
00037F4C <AmiBlitz3_noFPU_r470.ab3@27354> RTS
00037F76 <AmiBlitz3_noFPU_r470.ab3@27358>   !basic
00037F88 <AmiBlitz3_noFPU_r470.ab3@27368>   i.l = Peek.w(?ininclude)
00037FAE <AmiBlitz3_noFPU_r470.ab3@27369>   If i>=0 AND i<#maxincludes
00037FE0 <AmiBlitz3_noFPU_r470.ab3@27370>     incdim (i) = Peek.s(?includetemp2)
00037FFA <AmiBlitz3_noFPU_r470.ab3@27371>     incline(i) = Peek.l(?includeline)
00038004 <AmiBlitz3_noFPU_r470.ab3@27373>     If CLIMode
000380B2 <AmiBlitz3_noFPU_r470.ab3@27374>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
000380D0 <AmiBlitz3_noFPU_r470.ab3@27378>   !asm
000380D2 <AmiBlitz3_noFPU_r470.ab3@27379> RTS
000380FC <AmiBlitz3_noFPU_r470.ab3@27383>   !basic
0003810E <AmiBlitz3_noFPU_r470.ab3@27384>   i.l = Peek.w(?ininclude)
00038134 <AmiBlitz3_noFPU_r470.ab3@27385>   If i>=0 AND i<#maxincludes
00038164 <AmiBlitz3_noFPU_r470.ab3@27386>     incdim (i) = ""
00038178 <AmiBlitz3_noFPU_r470.ab3@27387>     incline(i) = 0
000381B0 <AmiBlitz3_noFPU_r470.ab3@27388>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
000381CE <AmiBlitz3_noFPU_r470.ab3@27390>   !asm
000381D0 <AmiBlitz3_noFPU_r470.ab3@27391> RTS
000381D6 <AmiBlitz3_noFPU_r470.ab3@27395>   LEA replacedat,a0
000381DA <AmiBlitz3_noFPU_r470.ab3@27396>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
000381DC <AmiBlitz3_noFPU_r470.ab3@27397> RTS
000381E2 <AmiBlitz3_noFPU_r470.ab3@27401>   TST.b fpu
000381E6 <AmiBlitz3_noFPU_r470.ab3@27402>   BEQ 'l1
000381F0 <AmiBlitz3_noFPU_r470.ab3@27405>   MOVE.l destpointer,newinitaddr
000381F6 <AmiBlitz3_noFPU_r470.ab3@27406>   JSR writeword
000381FC <AmiBlitz3_noFPU_r470.ab3@27407>   JSR writelong
000381FE <AmiBlitz3_noFPU_r470.ab3@27408> RTS
00038200 <AmiBlitz3_noFPU_r470.ab3@27413>   TST.b (a5)
00038204 <AmiBlitz3_noFPU_r470.ab3@27414>    BEQ.s 'll20
00038208 <AmiBlitz3_noFPU_r470.ab3@27415>   CMP.b #$20,(a5)
0003820C <AmiBlitz3_noFPU_r470.ab3@27416>    BNE.s 'll10
0003820E <AmiBlitz3_noFPU_r470.ab3@27417>   ADDQ.l #1,a5
00038212 <AmiBlitz3_noFPU_r470.ab3@27418> BRA.s 'll21
00038216 <AmiBlitz3_noFPU_r470.ab3@27421>   CMP.b #";",(a5)
0003821A <AmiBlitz3_noFPU_r470.ab3@27422>   BNE.s 'll20
0003821C <AmiBlitz3_noFPU_r470.ab3@27425>   TST.b (a5)+
00038220 <AmiBlitz3_noFPU_r470.ab3@27426>   BEQ.s 'll23
00038224 <AmiBlitz3_noFPU_r470.ab3@27427> BRA.s 'll25
00038226 <AmiBlitz3_noFPU_r470.ab3@27430>   SUBQ.l #1,a5
00038228 <AmiBlitz3_noFPU_r470.ab3@27433> RTS
0003822C <AmiBlitz3_noFPU_r470.ab3@27437>   MOVEM.l a2/d2,-(a7)
0003822E <AmiBlitz3_noFPU_r470.ab3@27438>   MOVEQ #0,d2
00038234 <AmiBlitz3_noFPU_r470.ab3@27439>   LEA ptr_parameterstore,a0
0003823A <AmiBlitz3_noFPU_r470.ab3@27440>   LEA chartab,a2
0003823C <AmiBlitz3_noFPU_r470.ab3@27443>   MOVE.b (a5),d0
00038240 <AmiBlitz3_noFPU_r470.ab3@27444>   TST.b 0(a2,d0)
00038244 <AmiBlitz3_noFPU_r470.ab3@27445>   BNE 'l10
00038246 <AmiBlitz3_noFPU_r470.ab3@27446>   ADDQ.l #1,a5
00038248 <AmiBlitz3_noFPU_r470.ab3@27447>   MOVE.b d0,(a0)+
0003824A <AmiBlitz3_noFPU_r470.ab3@27448>   ADDQ.l #1,d2
0003824E <AmiBlitz3_noFPU_r470.ab3@27449> BRA fc2
00038250 <AmiBlitz3_noFPU_r470.ab3@27452>   CLR.b (a0)+
00038256 <AmiBlitz3_noFPU_r470.ab3@27453>   JSR findlabel2
00038258 <AmiBlitz3_noFPU_r470.ab3@27454>   MOVE.l a2,a0
0003825C <AmiBlitz3_noFPU_r470.ab3@27455>   MOVEM.l (a7)+,a2/d2
0003825E <AmiBlitz3_noFPU_r470.ab3@27456> RTS
00038260 <AmiBlitz3_noFPU_r470.ab3@27460>   TST.l d0
00038264 <AmiBlitz3_noFPU_r470.ab3@27461>   BNE 'l10
0003826A <AmiBlitz3_noFPU_r470.ab3@27462>     MOVE.l #syntax_,-(a7)
00038270 <AmiBlitz3_noFPU_r470.ab3@27463> JMP handle_compileerror
00038276 <AmiBlitz3_noFPU_r470.ab3@27466>   CMP.l #1,d0
0003827A <AmiBlitz3_noFPU_r470.ab3@27467>   BNE 'l20
00038280 <AmiBlitz3_noFPU_r470.ab3@27468>     MOVE.l #overflow,-(a7)
00038286 <AmiBlitz3_noFPU_r470.ab3@27469> JMP handle_compileerror
00038288 <AmiBlitz3_noFPU_r470.ab3@27472>   ADD.l a2,d0
0003828A <AmiBlitz3_noFPU_r470.ab3@27473>   MOVE.l d0,-(a7)
00038290 <AmiBlitz3_noFPU_r470.ab3@27474> JMP handle_compileerror
00038296 <AmiBlitz3_noFPU_r470.ab3@27478>   JMP _return
0003829C <AmiBlitz3_noFPU_r470.ab3@27479>   JMP _return
000382A2 <AmiBlitz3_noFPU_r470.ab3@27480>   JMP _return
000382A8 <AmiBlitz3_noFPU_r470.ab3@27481>   JMP _return
000382AE <AmiBlitz3_noFPU_r470.ab3@27482>   JMP _return
000382B4 <AmiBlitz3_noFPU_r470.ab3@27483>   JMP _return
000382BA <AmiBlitz3_noFPU_r470.ab3@27484>   JMP _return
000382C0 <AmiBlitz3_noFPU_r470.ab3@27485>   JMP _return
000382C6 <AmiBlitz3_noFPU_r470.ab3@27486>   JMP _return
000382CC <AmiBlitz3_noFPU_r470.ab3@27487>   JMP _return
000382D2 <AmiBlitz3_noFPU_r470.ab3@27488>   JMP Atokejsr
000382D8 <AmiBlitz3_noFPU_r470.ab3@27489>   JMP writeinit
000382DE <AmiBlitz3_noFPU_r470.ab3@27490>   JMP macroexecute
000382E4 <AmiBlitz3_noFPU_r470.ab3@27491>   JMP findnext
000382EA <AmiBlitz3_noFPU_r470.ab3@27492>   JMP replacelib
000382F0 <AmiBlitz3_noFPU_r470.ab3@27493>   JMP findconstant2
000382F6 <AmiBlitz3_noFPU_r470.ab3@27494>   JMP findchar                                             ;char in d1
000382FC <AmiBlitz3_noFPU_r470.ab3@27495>   JMP stripspaces
00038302 <AmiBlitz3_noFPU_r470.ab3@27496>   JMP calc                                                 ;d0 varmode
00038308 <AmiBlitz3_noFPU_r470.ab3@27497>   JMP error
0003830E <AmiBlitz3_noFPU_r470.ab3@27498>   JMP writelong                                            ;d1 value
00038314 <AmiBlitz3_noFPU_r470.ab3@27499>   JMP writeword                                            ;d1 value
0003831A <AmiBlitz3_noFPU_r470.ab3@27500>   JMP writebyte                                            ;d1 value
00038320 <AmiBlitz3_noFPU_r470.ab3@27501> JMP exit
00038324 <AmiBlitz3_noFPU_r470.ab3@27505>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00038326 <AmiBlitz3_noFPU_r470.ab3@27508>   fast            Dc.w 0
00038328 <AmiBlitz3_noFPU_r470.ab3@27509>   fpu             Dc.w 0
0003832A <AmiBlitz3_noFPU_r470.ab3@27510>   newsyntax       Dc.w 0
0003832B <AmiBlitz3_noFPU_r470.ab3@27512>   optistring      Dc.b 0
0003832C <AmiBlitz3_noFPU_r470.ab3@27513>   optistring2     Dc.b 0
0003832D <AmiBlitz3_noFPU_r470.ab3@27514>   optiarray       Dc.b 0
0003832E <AmiBlitz3_noFPU_r470.ab3@27515>   quickadd        Dc.b 0
00038330 <AmiBlitz3_noFPU_r470.ab3@27516>   newmode         Dc.w 0
00038332 <AmiBlitz3_noFPU_r470.ab3@27517>   mode            Dc.w 0
00038334 <AmiBlitz3_noFPU_r470.ab3@27518>   string1         Dc.w 0
00038336 <AmiBlitz3_noFPU_r470.ab3@27519>   load_var_size   Dc.w 0
00038338 <AmiBlitz3_noFPU_r470.ab3@27520>   load_var_reg    Dc.w 0
0003833C <AmiBlitz3_noFPU_r470.ab3@27521>   load_var_addr   Dc.l 0
0003833E <AmiBlitz3_noFPU_r470.ab3@27522>   imm_size        Dc.w 0
00038340 <AmiBlitz3_noFPU_r470.ab3@27523>   imm_reg         Dc.w 0
00038344 <AmiBlitz3_noFPU_r470.ab3@27524>   imm_addr        Dc.l 0
00038345 <AmiBlitz3_noFPU_r470.ab3@27525>   iee             Dc.b 0
00038346 <AmiBlitz3_noFPU_r470.ab3@27526>   _dcb            Dc.b 0
0003834A <AmiBlitz3_noFPU_r470.ab3@27527>   nohunkoffset    Dc.l 0
0003834E <AmiBlitz3_noFPU_r470.ab3@27530> teddata:        Dc.l tokens
00038352 <AmiBlitz3_noFPU_r470.ab3@27531>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038356 <AmiBlitz3_noFPU_r470.ab3@27532>                 Dc.l read_xtrafile
0003835A <AmiBlitz3_noFPU_r470.ab3@27533>                 Dc.l write_xtrafile
0003835E <AmiBlitz3_noFPU_r470.ab3@27534>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038362 <AmiBlitz3_noFPU_r470.ab3@27535>                 Dc.l 0
00038366 <AmiBlitz3_noFPU_r470.ab3@27536>                 Dc.b ":",34,".;"
0003836A <AmiBlitz3_noFPU_r470.ab3@27537>                 Dc.l "NEW1"
0003836E <AmiBlitz3_noFPU_r470.ab3@27538>                 Dc.l newtypebase
00038372 <AmiBlitz3_noFPU_r470.ab3@27539> realconstbase:  Dc.l labelbase
00038376 <AmiBlitz3_noFPU_r470.ab3@27540> deflib          Dc.l 0
0003837A <AmiBlitz3_noFPU_r470.ab3@27541> incd            Dc.l 0
0003837E <AmiBlitz3_noFPU_r470.ab3@27542>                 Dc.l 0
00038382 <AmiBlitz3_noFPU_r470.ab3@27543>                 Dc.l 0
00038386 <AmiBlitz3_noFPU_r470.ab3@27544>                 Dc.l 0
00038388 <AmiBlitz3_noFPU_r470.ab3@27545> _return         RTS
00038389 <AmiBlitz3_noFPU_r470.ab3@27546>                 Dc.b 0
00038789 <AmiBlitz3_noFPU_r470.ab3@27547> chartab2        Ds.l 256
0003878D <AmiBlitz3_noFPU_r470.ab3@27548> codeend         Dc.l 0
00038791 <AmiBlitz3_noFPU_r470.ab3@27549> hunkoffsetnum   Dc.l 0
00038795 <AmiBlitz3_noFPU_r470.ab3@27550> chipsize        Dc.l 0
00038799 <AmiBlitz3_noFPU_r470.ab3@27551> bsssize         Dc.l 0
0003879D <AmiBlitz3_noFPU_r470.ab3@27552> bssstart        Dc.l -1
000387A1 <AmiBlitz3_noFPU_r470.ab3@27553> bssend          Dc.l -1
000387A5 <AmiBlitz3_noFPU_r470.ab3@27554> chipstart       Dc.l -1
000387A9 <AmiBlitz3_noFPU_r470.ab3@27555> chipend         Dc.l -1
000387AA <AmiBlitz3_noFPU_r470.ab3@27556> bssmode         Dc.b 0
000387AB <AmiBlitz3_noFPU_r470.ab3@27557> chipmode        Dc.b 0
000387AC <AmiBlitz3_noFPU_r470.ab3@27558> newhunk         Dc.b 0
000387B0 <AmiBlitz3_noFPU_r470.ab3@27559> bssnum          Dc.l 0
000387B4 <AmiBlitz3_noFPU_r470.ab3@27560> chipnum         Dc.l 0
000387B8 <AmiBlitz3_noFPU_r470.ab3@27561> lastinstruction Dc.l 0
000387BC <AmiBlitz3_noFPU_r470.ab3@27562> lastinstructionaddr Dc.l 0
000387D0 <AmiBlitz3_noFPU_r470.ab3@27563> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
000387D4 <AmiBlitz3_noFPU_r470.ab3@27564> tstsize1b:      Ds.l 1
000387D8 <AmiBlitz3_noFPU_r470.ab3@27565> bsssize2        Dc.l 1
000387DC <AmiBlitz3_noFPU_r470.ab3@27566>                 Dc.l $03E9
000387E0 <AmiBlitz3_noFPU_r470.ab3@27567> tstsize2b:      Dc.l $100
000387F4 <AmiBlitz3_noFPU_r470.ab3@27568> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
000387F8 <AmiBlitz3_noFPU_r470.ab3@27569> tstsize1c:      Ds.l 1
000387FC <AmiBlitz3_noFPU_r470.ab3@27570> bsssize3        Dc.l 1
00038800 <AmiBlitz3_noFPU_r470.ab3@27571> chipsize2       Dc.l 1
00038804 <AmiBlitz3_noFPU_r470.ab3@27572>                 Dc.l $3e9
00038808 <AmiBlitz3_noFPU_r470.ab3@27573> tstsize2c       Dc.l 0
00038818 <AmiBlitz3_noFPU_r470.ab3@27574> hunkend         Dc.l $3f2,$3eb,0,$3f2
00038828 <AmiBlitz3_noFPU_r470.ab3@27575> hunkend2        Dc.l $3f2,$3ea,0,$3f2
0003882F <AmiBlitz3_noFPU_r470.ab3@27576> strcpy          Dc.b "strcpy",0
00038836 <AmiBlitz3_noFPU_r470.ab3@27577> strcmp          Dc.b "strcmp",0
0003883D <AmiBlitz3_noFPU_r470.ab3@27578> strvar          Dc.b "strvar",0
00038842 <AmiBlitz3_noFPU_r470.ab3@27579> qmul            Dc.b "qmul",0
00038847 <AmiBlitz3_noFPU_r470.ab3@27580> qdiv            Dc.b "qdiv",0
0003884E <AmiBlitz3_noFPU_r470.ab3@27581> _MaxLen         Dc.b "maxlen",0
00038853 <AmiBlitz3_noFPU_r470.ab3@27582> notf            Dc.b "????",0
00038876 <AmiBlitz3_noFPU_r470.ab3@27584> errtext         Dc.b "only reg addressing Mode supported",0
000388A0 <AmiBlitz3_noFPU_r470.ab3@27585> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
000388E2 <AmiBlitz3_noFPU_r470.ab3@27586> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
000388E4 <AmiBlitz3_noFPU_r470.ab3@27587> peeksize        Dc.w 0
000388E8 <AmiBlitz3_noFPU_r470.ab3@27589> mainstart       Dc.l 0
000388E9 <AmiBlitz3_noFPU_r470.ab3@27591> infunctioncode  Dc.b 0
000388EB <AmiBlitz3_noFPU_r470.ab3@27592> regnumstore     Dc.w 0
00038918 <AmiBlitz3_noFPU_r470.ab3@27593>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00038920 <AmiBlitz3_noFPU_r470.ab3@27594> testcode        Dc.b "print i",0
00038984 <AmiBlitz3_noFPU_r470.ab3@27595>                 Ds.b 100
00038992 <AmiBlitz3_noFPU_r470.ab3@27596> devo            Dc.b "developobject",0 : Even
000389A4 <AmiBlitz3_noFPU_r470.ab3@27597> autostorename   Dc.b "__autoconstantnum",0
000389AE <AmiBlitz3_noFPU_r470.ab3@27598> _include        Dc.b "__include",0
000389B6 <AmiBlitz3_noFPU_r470.ab3@27599> _debug          Dc.b "__debug",0
000389BA <AmiBlitz3_noFPU_r470.ab3@27600> unusedfunc      Dc.l 0
000389BC <AmiBlitz3_noFPU_r470.ab3@27604>   MOVE.l a0,d0
000389E6 <AmiBlitz3_noFPU_r470.ab3@27605>   !basic
000389EA <AmiBlitz3_noFPU_r470.ab3@27606>   *olderror.l= PutD0
00038A44 <AmiBlitz3_noFPU_r470.ab3@27607> 
00038A78 <AmiBlitz3_noFPU_r470.ab3@27608>   error_type$ = error$
00038B14 <AmiBlitz3_noFPU_r470.ab3@27609> 
00038B28 <AmiBlitz3_noFPU_r470.ab3@27610>   If Peek.l (?beforeparameterfetch)
00038B3E <AmiBlitz3_noFPU_r470.ab3@27611>     MaxLen detokenline.s = 65536
00038B80 <AmiBlitz3_noFPU_r470.ab3@27612>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00038B90 <AmiBlitz3_noFPU_r470.ab3@27613>    *tn.preprocessor = Peek.l(?include_preprocessor)
00038BBA <AmiBlitz3_noFPU_r470.ab3@27614>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
00038BE2 <AmiBlitz3_noFPU_r470.ab3@27615>     If written>0 Then Poke.b &detokenline+written,0
00038C0C <AmiBlitz3_noFPU_r470.ab3@27616>     sourceLineText.s = Peek.s(&detokenline)
00038C12 <AmiBlitz3_noFPU_r470.ab3@27617>   Else
00038C3A <AmiBlitz3_noFPU_r470.ab3@27618>     sourceLineText = "NULL"
00038C6E <AmiBlitz3_noFPU_r470.ab3@27620>   error_source$ = sourceLineText
00038CC0 <AmiBlitz3_noFPU_r470.ab3@27621>   error$=error$+sourceLineText
00038CC6 <AmiBlitz3_noFPU_r470.ab3@27622>   GetD0 &error$
00038CE4 <AmiBlitz3_noFPU_r470.ab3@27623>   !asm
00038CE6 <AmiBlitz3_noFPU_r470.ab3@27624>   MOVE.l d0,a0
00038CE8 <AmiBlitz3_noFPU_r470.ab3@27625> RTS
00038CEA <AmiBlitz3_noFPU_r470.ab3@27629>   MOVE.l a0,-(a7)
00038CEC <AmiBlitz3_noFPU_r470.ab3@27630>   MOVE.l a0,d0
00038CEE <AmiBlitz3_noFPU_r470.ab3@27631>   MOVE.l a5,a0                                             ;macro title
00038D18 <AmiBlitz3_noFPU_r470.ab3@27632>   !basic
00038D1C <AmiBlitz3_noFPU_r470.ab3@27633>   i = PutD0
00038D1E <AmiBlitz3_noFPU_r470.ab3@27634>   MOVEQ #20,d0
00038D20 <AmiBlitz3_noFPU_r470.ab3@27637>     MOVE.b -(a0),d1
00038D24 <AmiBlitz3_noFPU_r470.ab3@27638>     BEQ 'l1
00038D28 <AmiBlitz3_noFPU_r470.ab3@27639>     CMP.b #":",d1
00038D2C <AmiBlitz3_noFPU_r470.ab3@27640>     BEQ 'l1
00038D2E <AmiBlitz3_noFPU_r470.ab3@27641>     SUBQ.l #1,d0
00038D32 <AmiBlitz3_noFPU_r470.ab3@27642>     BNE 'l2
00038D34 <AmiBlitz3_noFPU_r470.ab3@27645>   ADDQ #1,a0
00038D36 <AmiBlitz3_noFPU_r470.ab3@27646>   MOVE.l a0,d0
00038D3A <AmiBlitz3_noFPU_r470.ab3@27647>   i2.l = PutD0
00038D56 <AmiBlitz3_noFPU_r470.ab3@27648>   If Peek.w (?ininclude)>0
00038DB0 <AmiBlitz3_noFPU_r470.ab3@27649>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00038DC0 <AmiBlitz3_noFPU_r470.ab3@27650>     errorline.l = Peek.l(?includeline);-1
00038DE8 <AmiBlitz3_noFPU_r470.ab3@27651>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00038E12 <AmiBlitz3_noFPU_r470.ab3@27652>     errorfile.s = Peek.s(?includetemp2)
00038E18 <AmiBlitz3_noFPU_r470.ab3@27653>   Else
00038E50 <AmiBlitz3_noFPU_r470.ab3@27654>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00038E66 <AmiBlitz3_noFPU_r470.ab3@27655>     errorline.l = Peek.l(?compilelinecounter) + 1
00038E9A <AmiBlitz3_noFPU_r470.ab3@27656>     errorfile.s = cli_sourcefile
00038EA4 <AmiBlitz3_noFPU_r470.ab3@27659>   If i
00038F48 <AmiBlitz3_noFPU_r470.ab3@27660>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00038FC6 <AmiBlitz3_noFPU_r470.ab3@27661>     errortext.s = Replace$(errortext,"\n","\\0a")
00038FCC <AmiBlitz3_noFPU_r470.ab3@27662>   Else
00038FF4 <AmiBlitz3_noFPU_r470.ab3@27663>     errortext.s = "???"
0003916C <AmiBlitz3_noFPU_r470.ab3@27666>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039234 <AmiBlitz3_noFPU_r470.ab3@27667>   NPrint "  ",error_type$,"\\n  ",error_source$
00039252 <AmiBlitz3_noFPU_r470.ab3@27671>   !asm
00039254 <AmiBlitz3_noFPU_r470.ab3@27672>   MOVE.l (a7)+,a0
00039256 <AmiBlitz3_noFPU_r470.ab3@27673> RTS
00039258 <AmiBlitz3_noFPU_r470.ab3@27677>   MOVE.l a0,-(a7)
0003925A <AmiBlitz3_noFPU_r470.ab3@27678>   MOVE.l a0,d0
0003925C <AmiBlitz3_noFPU_r470.ab3@27679>   MOVE.l a5,a0                                             ;macro title
00039286 <AmiBlitz3_noFPU_r470.ab3@27680>   !basic
0003928A <AmiBlitz3_noFPU_r470.ab3@27681>   i = PutD0
0003928C <AmiBlitz3_noFPU_r470.ab3@27682>   MOVEQ #20,d0
0003928E <AmiBlitz3_noFPU_r470.ab3@27685>     MOVE.b -(a0),d1
00039292 <AmiBlitz3_noFPU_r470.ab3@27686>     BEQ 'l1
00039296 <AmiBlitz3_noFPU_r470.ab3@27687>     CMP.b #":",d1
0003929A <AmiBlitz3_noFPU_r470.ab3@27688>     BEQ 'l1
0003929C <AmiBlitz3_noFPU_r470.ab3@27689>     SUBQ.l #1,d0
000392A0 <AmiBlitz3_noFPU_r470.ab3@27690>     BNE 'l2
000392A2 <AmiBlitz3_noFPU_r470.ab3@27693>   ADDQ #1,a0
000392A4 <AmiBlitz3_noFPU_r470.ab3@27694>   MOVE.l a0,d0
000392A8 <AmiBlitz3_noFPU_r470.ab3@27695>   i2.l = PutD0
0003932C <AmiBlitz3_noFPU_r470.ab3@27696>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039340 <AmiBlitz3_noFPU_r470.ab3@27697>   If fid <> -1
0003935C <AmiBlitz3_noFPU_r470.ab3@27698>     If Peek.w (?ininclude)>0
000393B6 <AmiBlitz3_noFPU_r470.ab3@27699>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
000393BC <AmiBlitz3_noFPU_r470.ab3@27700>     Else
000393E8 <AmiBlitz3_noFPU_r470.ab3@27701>       Poke$(?includetemp2),""
00039412 <AmiBlitz3_noFPU_r470.ab3@27703>     a$ = Peek$(?includetemp2)
00039484 <AmiBlitz3_noFPU_r470.ab3@27704>     x$ = Replace$(Peek$(i),"\\0a","\n")
000394B6 <AmiBlitz3_noFPU_r470.ab3@27705>     file_WriteLine{fid,x$}
00039500 <AmiBlitz3_noFPU_r470.ab3@27706>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
0003952C <AmiBlitz3_noFPU_r470.ab3@27707>     If a$
0003955E <AmiBlitz3_noFPU_r470.ab3@27708>       file_WriteLine{fid,a$}
000395A8 <AmiBlitz3_noFPU_r470.ab3@27709>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
000395D0 <AmiBlitz3_noFPU_r470.ab3@27710>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000395D6 <AmiBlitz3_noFPU_r470.ab3@27711>     Else
000395FC <AmiBlitz3_noFPU_r470.ab3@27712>       file_WriteLine{fid,"none"}
0003962C <AmiBlitz3_noFPU_r470.ab3@27714>     file_WriteLine{fid,Peek$(i2)}
00039682 <AmiBlitz3_noFPU_r470.ab3@27715>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
000396CC <AmiBlitz3_noFPU_r470.ab3@27716>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
000396D6 <AmiBlitz3_noFPU_r470.ab3@27717>     file_Close{fid}
000396F4 <AmiBlitz3_noFPU_r470.ab3@27719>   !asm
000396F6 <AmiBlitz3_noFPU_r470.ab3@27720>   MOVE.l (a7)+,a0
000396F8 <AmiBlitz3_noFPU_r470.ab3@27721> RTS
00039722 <AmiBlitz3_noFPU_r470.ab3@27725>   !basic
00039726 <AmiBlitz3_noFPU_r470.ab3@27726>   progress.l     = PutD0
00039738 <AmiBlitz3_noFPU_r470.ab3@27727>   total.l        = Peek.w(?progressbar_width)
00039756 <AmiBlitz3_noFPU_r470.ab3@27728>   calcpro        = (progress * 100) / total +1
00039768 <AmiBlitz3_noFPU_r470.ab3@27729>   pass.l         = Peek.w(?pass)
0003977A <AmiBlitz3_noFPU_r470.ab3@27730>   typ.l          = Peek.w(?compiler_job)
00039798 <AmiBlitz3_noFPU_r470.ab3@27733> If (pass><pass_old OR typ><typ_old)
000397A6 <AmiBlitz3_noFPU_r470.ab3@27735>     If pass_old><pass
00039842 <AmiBlitz3_noFPU_r470.ab3@27736>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039898 <AmiBlitz3_noFPU_r470.ab3@27737>       If cli_verbose>=2 Then NPrint passtatusstr
0003989E <AmiBlitz3_noFPU_r470.ab3@27740>     pass_old = pass
000398A4 <AmiBlitz3_noFPU_r470.ab3@27741>     typ_old  = typ
000398AA <AmiBlitz3_noFPU_r470.ab3@27742>     update_comstatus_gui = True
000398BC <AmiBlitz3_noFPU_r470.ab3@27743>     If typ=0
0003999C <AmiBlitz3_noFPU_r470.ab3@27744>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
000399A4 <AmiBlitz3_noFPU_r470.ab3@27745>       calcpro = 0  ; set gauge to 0
000399B6 <AmiBlitz3_noFPU_r470.ab3@27747>     If typ=1
00039A96 <AmiBlitz3_noFPU_r470.ab3@27748>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00039A9E <AmiBlitz3_noFPU_r470.ab3@27749>       calcpro = 0  ; set gauge to 0
00039AF4 <AmiBlitz3_noFPU_r470.ab3@27752>     If cli_verbose>=3 Then NPrint comstatusstr
00039B02 <AmiBlitz3_noFPU_r470.ab3@27755>   If (calcpro >< calcpro_old)
00039B56 <AmiBlitz3_noFPU_r470.ab3@27756>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
00039B5C <AmiBlitz3_noFPU_r470.ab3@27757>     calcpro_old = calcpro
00039B62 <AmiBlitz3_noFPU_r470.ab3@27758>     update_comstatus_gui = True
00039B7C <AmiBlitz3_noFPU_r470.ab3@27761>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
00039B9A <AmiBlitz3_noFPU_r470.ab3@27762>     !asm
00039BCC <AmiBlitz3_noFPU_r470.ab3@27763> 
00039BF6 <AmiBlitz3_noFPU_r470.ab3@27764>     !basic
00039BFC <AmiBlitz3_noFPU_r470.ab3@27765>     update_comstatus_gui  = False ; because we update the gui
00039C1A <AmiBlitz3_noFPU_r470.ab3@27767>   !asm
00039C1C <AmiBlitz3_noFPU_r470.ab3@27768> RTS
00039C22 <AmiBlitz3_noFPU_r470.ab3@27773>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
00039C28 <AmiBlitz3_noFPU_r470.ab3@27774>   LEA maxobjects_value,A3                                  ;current value
00039C2E <AmiBlitz3_noFPU_r470.ab3@27775>   MOVEA.l libpointer,A2
00039C32 <AmiBlitz3_noFPU_r470.ab3@27778>   CMPA.w #$0,A2
00039C36 <AmiBlitz3_noFPU_r470.ab3@27779>   BEQ.w menu4c__igotb
00039C38 <AmiBlitz3_noFPU_r470.ab3@27780>   MOVEA.l A2,A1
00039C3C <AmiBlitz3_noFPU_r470.ab3@27781>   ADDA.l $12(A1),A1
00039C40 <AmiBlitz3_noFPU_r470.ab3@27782>   TST.w -$2(A1)
00039C44 <AmiBlitz3_noFPU_r470.ab3@27783>   BEQ.w JL_0_FFF6b
00039C46 <AmiBlitz3_noFPU_r470.ab3@27784>   SUBQ.w #1,D5
00039C4A <AmiBlitz3_noFPU_r470.ab3@27785>   BMI.w JL_0_FFFCb
00039C4C <AmiBlitz3_noFPU_r470.ab3@27788>   MOVEA.l (A2),A2
00039C50 <AmiBlitz3_noFPU_r470.ab3@27789> BRA.w JL_0_FFDAb
00039C54 <AmiBlitz3_noFPU_r470.ab3@27792>   MOVE.w (A3),-$4(A1)
00039C56 <AmiBlitz3_noFPU_r470.ab3@27795> RTS
00039C5C <AmiBlitz3_noFPU_r470.ab3@27799>   MOVE.w debugnest,d0
00039C62 <AmiBlitz3_noFPU_r470.ab3@27800>   LEA storedebugmode, a0
00039C6A <AmiBlitz3_noFPU_r470.ab3@27801>   MOVE.b 0(a0,d0.w),debugmode
00039C70 <AmiBlitz3_noFPU_r470.ab3@27802>   TST.w debugnest
00039C74 <AmiBlitz3_noFPU_r470.ab3@27803>   BEQ JUMP_unpairrunerrs
00039C7A <AmiBlitz3_noFPU_r470.ab3@27804>   SUBQ.w #1,debugnest
00039C7C <AmiBlitz3_noFPU_r470.ab3@27805> RTS
00039C82 <AmiBlitz3_noFPU_r470.ab3@27808> JMP runerrsoverflow
00039C88 <AmiBlitz3_noFPU_r470.ab3@27811> JMP unpairrunerrs
00039C90 <AmiBlitz3_noFPU_r470.ab3@27815>   BCHG #$7,use_debugger
00039C98 <AmiBlitz3_noFPU_r470.ab3@27817>   BTST #$7,use_debugger
00039C9C <AmiBlitz3_noFPU_r470.ab3@27818>   BNE 'debugon
00039CA2 <AmiBlitz3_noFPU_r470.ab3@27819>   CLR.w debugmode
00039CA6 <AmiBlitz3_noFPU_r470.ab3@27820> BRA.b 'debugoff
00039CAC <AmiBlitz3_noFPU_r470.ab3@27823>   SNE debugmode
00039CAE <AmiBlitz3_noFPU_r470.ab3@27826>   MOVE.l a0,-(a7)
00039CE6 <AmiBlitz3_noFPU_r470.ab3@27829>   !ComData_SetB{comByte_DebugMode,debugmode}
00039CE8 <AmiBlitz3_noFPU_r470.ab3@27834>   MOVE.l (a7)+,a0
00039CEA <AmiBlitz3_noFPU_r470.ab3@27835> RTS
00039CF2 <AmiBlitz3_noFPU_r470.ab3@27840>   BTST #$7,use_debugger
00039CF6 <AmiBlitz3_noFPU_r470.ab3@27841>   BNE 'debugon
00039CFC <AmiBlitz3_noFPU_r470.ab3@27842>   CLR.w debugmode
00039D00 <AmiBlitz3_noFPU_r470.ab3@27843> BRA.b 'debugoff
00039D06 <AmiBlitz3_noFPU_r470.ab3@27846>   SNE debugmode
00039D08 <AmiBlitz3_noFPU_r470.ab3@27849> RTS
00039D0E <AmiBlitz3_noFPU_r470.ab3@27853>   ADDQ.w #1,debugnest
00039D14 <AmiBlitz3_noFPU_r470.ab3@27854>   MOVE.w debugnest,d0
00039D18 <AmiBlitz3_noFPU_r470.ab3@27855>   CMP.w #18,d0
00039D1C <AmiBlitz3_noFPU_r470.ab3@27856>    BGE JUMP_runerrsoverflow
00039D22 <AmiBlitz3_noFPU_r470.ab3@27857>   LEA storedebugmode, a0
00039D2A <AmiBlitz3_noFPU_r470.ab3@27858>   MOVE.b debugmode,0( a0,d0.w)
00039D30 <AmiBlitz3_noFPU_r470.ab3@27861>   SF debugmode
00039D32 <AmiBlitz3_noFPU_r470.ab3@27862> RTS
00039DB2 <AmiBlitz3_noFPU_r470.ab3@27865> usedpath:  Ds.l 32
00039DB6 <AmiBlitz3_noFPU_r470.ab3@27869>   BEQ.w JUMP_syntaxerr
00039DBC <AmiBlitz3_noFPU_r470.ab3@27870>   LEA lastpath,A0
00039DC0 <AmiBlitz3_noFPU_r470.ab3@27871>   MOVEM.l a0-a1/d0,-(a7)
00039DC6 <AmiBlitz3_noFPU_r470.ab3@27872>   LEA lastpath2,a1
00039DC8 <AmiBlitz3_noFPU_r470.ab3@27875>     MOVE.b (a0)+,(a1)+
00039DCC <AmiBlitz3_noFPU_r470.ab3@27876>   BNE 'l2
00039DD0 <AmiBlitz3_noFPU_r470.ab3@27877>   MOVEM.l (a7)+,a0-a1/d0
00039DD4 <AmiBlitz3_noFPU_r470.ab3@27878>   LEA usedpath(PC),A0
00039DD8 <AmiBlitz3_noFPU_r470.ab3@27879>   MOVEM.l a0-a1/d0,-(a7)
00039DDE <AmiBlitz3_noFPU_r470.ab3@27880>   LEA lastpath,a1
00039DE0 <AmiBlitz3_noFPU_r470.ab3@27883>     MOVE.b (a0)+,(a1)+
00039DE4 <AmiBlitz3_noFPU_r470.ab3@27884>   BNE 'l1
00039DE8 <AmiBlitz3_noFPU_r470.ab3@27885>   MOVEM.l (a7)+,a0-a1/d0
00039DEA <AmiBlitz3_noFPU_r470.ab3@27888>   TST.w D0
00039DEE <AmiBlitz3_noFPU_r470.ab3@27889>    BMI.w JUMP_syntaxerr
00039DF0 <AmiBlitz3_noFPU_r470.ab3@27890>   MOVE.b D0,(A0)+
00039DF4 <AmiBlitz3_noFPU_r470.ab3@27891>   BSR.w JUMP_get1bytemain
00039DF8 <AmiBlitz3_noFPU_r470.ab3@27892>    BNE.w JL_0_4AA8
00039DFC <AmiBlitz3_noFPU_r470.ab3@27893>   MOVE.b #$2,(A0)
00039DFE <AmiBlitz3_noFPU_r470.ab3@27894> RTS
00039E02 <AmiBlitz3_noFPU_r470.ab3@27898>   BEQ.w JUMP_syntaxerr
00039E08 <AmiBlitz3_noFPU_r470.ab3@27899>   LEA path2,A0
00039E0A <AmiBlitz3_noFPU_r470.ab3@27909>   TST.w D0
00039E0E <AmiBlitz3_noFPU_r470.ab3@27910>    BMI.w JUMP_syntaxerr
00039E10 <AmiBlitz3_noFPU_r470.ab3@27911>   MOVE.b D0,(A0)+
00039E14 <AmiBlitz3_noFPU_r470.ab3@27912>   BSR.w JUMP_get1bytemain
00039E18 <AmiBlitz3_noFPU_r470.ab3@27913>    BNE.w JL_0_4AA8b
00039E1C <AmiBlitz3_noFPU_r470.ab3@27914>   MOVE.b #$2,(A0)
00039E1E <AmiBlitz3_noFPU_r470.ab3@27915> RTS
00039E24 <AmiBlitz3_noFPU_r470.ab3@27924> JMP errormsg_reg
00039E2E <AmiBlitz3_noFPU_r470.ab3@27928>   MOVE.l #$f22d6780,fpucodeglobal
00039E38 <AmiBlitz3_noFPU_r470.ab3@27929>   MOVE.l #$f22c6780,fpucodelocal
00039E3E <AmiBlitz3_noFPU_r470.ab3@27930>   LEA regtable,a0
00039E48 <AmiBlitz3_noFPU_r470.ab3@27931>   MOVE.l #7,maxregs
00039E4A <AmiBlitz3_noFPU_r470.ab3@27934>   MOVE.l (a0),d0
00039E4E <AmiBlitz3_noFPU_r470.ab3@27935>   BEQ 'e1
00039E50 <AmiBlitz3_noFPU_r470.ab3@27936>   CLR.l (a0)
00039E54 <AmiBlitz3_noFPU_r470.ab3@27937>   MOVE.w 4(a0),d0
00039E5E <AmiBlitz3_noFPU_r470.ab3@27938>   MOVE.l fpucodeglobal,fpucode
00039E62 <AmiBlitz3_noFPU_r470.ab3@27939>   TST.w 6(a0)
00039E66 <AmiBlitz3_noFPU_r470.ab3@27940>   BEQ 'glob
00039E70 <AmiBlitz3_noFPU_r470.ab3@27941>   MOVE.l fpucodelocal,fpucode
00039E76 <AmiBlitz3_noFPU_r470.ab3@27944>   MOVE.l fpucode,d1
00039E7C <AmiBlitz3_noFPU_r470.ab3@27945>   JSR writelong
00039E86 <AmiBlitz3_noFPU_r470.ab3@27946>   SUB.l #$80,fpucodelocal
00039E90 <AmiBlitz3_noFPU_r470.ab3@27947>   SUB.l #$80,fpucodeglobal
00039E92 <AmiBlitz3_noFPU_r470.ab3@27948>   MOVE.w d0,d1
00039E98 <AmiBlitz3_noFPU_r470.ab3@27949>   JSR writeword
00039E9A <AmiBlitz3_noFPU_r470.ab3@27950>   ADDQ #8,a0
00039E9E <AmiBlitz3_noFPU_r470.ab3@27951> BRA 'again
00039EA0 <AmiBlitz3_noFPU_r470.ab3@27954> RTS
00039EA6 <AmiBlitz3_noFPU_r470.ab3@27961> JMP notypeerr
00039EAC <AmiBlitz3_noFPU_r470.ab3@27964> JMP illtypeerr
00039EB6 <AmiBlitz3_noFPU_r470.ab3@27967>   MOVE.l #$f22d4780,fpucodeglobal
00039EC0 <AmiBlitz3_noFPU_r470.ab3@27968>   MOVE.l #$f22c4780,fpucodelocal
00039EC6 <AmiBlitz3_noFPU_r470.ab3@27969>   LEA regtable,a0
00039EC8 <AmiBlitz3_noFPU_r470.ab3@27970>   TST.l (a0)
00039ECC <AmiBlitz3_noFPU_r470.ab3@27971>    BNE JUMP_errormsg_reg
00039ECE <AmiBlitz3_noFPU_r470.ab3@27972>   MOVE.l d7,-(a7)
00039ED0 <AmiBlitz3_noFPU_r470.ab3@27973>   SUBQ.l #1,a5
00039ED6 <AmiBlitz3_noFPU_r470.ab3@27976>   JSR getparameter2
00039EDA <AmiBlitz3_noFPU_r470.ab3@27977>   BEQ.w 'nopar
00039EE0 <AmiBlitz3_noFPU_r470.ab3@27978>   MOVE.w d0,lastchar
00039EE6 <AmiBlitz3_noFPU_r470.ab3@27979>   JSR findvariable
00039EEA <AmiBlitz3_noFPU_r470.ab3@27980>   BNE 'islocal
00039EF4 <AmiBlitz3_noFPU_r470.ab3@27981>   MOVE.l fpucodeglobal,fpucode
00039EFE <AmiBlitz3_noFPU_r470.ab3@27982>   MOVE.l #3,maxregs
00039F00 <AmiBlitz3_noFPU_r470.ab3@27983>   MOVEQ #0,d7
00039F08 <AmiBlitz3_noFPU_r470.ab3@27986>   CMP.l #newtype_float,$a(a2)                              ;is float type
00039F0C <AmiBlitz3_noFPU_r470.ab3@27987>    BEQ 'doit
00039F14 <AmiBlitz3_noFPU_r470.ab3@27988>   CMP.l #newtype_double,$a(a2)
00039F18 <AmiBlitz3_noFPU_r470.ab3@27989>    BNE JUMP_illtypeerr
00039F1E <AmiBlitz3_noFPU_r470.ab3@27992>   LEA regtable,a0
00039F20 <AmiBlitz3_noFPU_r470.ab3@27993>   MOVEQ #0,d0
00039F22 <AmiBlitz3_noFPU_r470.ab3@27996>   TST.l (a0)
00039F26 <AmiBlitz3_noFPU_r470.ab3@27997>    BEQ 'store
00039F28 <AmiBlitz3_noFPU_r470.ab3@27998>   ADDQ.l #4,d0
00039F2A <AmiBlitz3_noFPU_r470.ab3@27999>   ADDQ.l #8,a0
00039F30 <AmiBlitz3_noFPU_r470.ab3@28000>   CMP.l #16,d0
00039F34 <AmiBlitz3_noFPU_r470.ab3@28001>    BCS 'loop
00039F3E <AmiBlitz3_noFPU_r470.ab3@28002>   MOVE.l #2,maxregs
00039F44 <AmiBlitz3_noFPU_r470.ab3@28003>   CMP.l #20,d0
00039F48 <AmiBlitz3_noFPU_r470.ab3@28004>    BCS 'loop
00039F52 <AmiBlitz3_noFPU_r470.ab3@28005>   MOVE.l #1,maxregs
00039F58 <AmiBlitz3_noFPU_r470.ab3@28006>   CMP.l #24,d0
00039F5C <AmiBlitz3_noFPU_r470.ab3@28007>    BCS 'loop
00039F62 <AmiBlitz3_noFPU_r470.ab3@28008> JMP toovarerr
00039F68 <AmiBlitz3_noFPU_r470.ab3@28011>   TST.b fpu
00039F6C <AmiBlitz3_noFPU_r470.ab3@28012>    BEQ 'nofpu
00039F6E <AmiBlitz3_noFPU_r470.ab3@28013>   MOVE.l a2,(a0)
00039F74 <AmiBlitz3_noFPU_r470.ab3@28014>   MOVE.w 4(a2),4(a0)
00039F78 <AmiBlitz3_noFPU_r470.ab3@28015>   MOVE.w d7,6(a0)
00039F7E <AmiBlitz3_noFPU_r470.ab3@28016>   MOVE.l fpucode,d1
00039F88 <AmiBlitz3_noFPU_r470.ab3@28017>   SUB.l #$80,fpucodeglobal
00039F92 <AmiBlitz3_noFPU_r470.ab3@28018>   SUB.l #$80,fpucodelocal
00039F98 <AmiBlitz3_noFPU_r470.ab3@28019>   JSR writelong
00039F9C <AmiBlitz3_noFPU_r470.ab3@28020>   MOVE.w 4(a2),d1
00039FA2 <AmiBlitz3_noFPU_r470.ab3@28021>   JSR writeword
00039FA8 <AmiBlitz3_noFPU_r470.ab3@28024>   MOVE.w lastchar,d0
00039FAC <AmiBlitz3_noFPU_r470.ab3@28025>   CMP.w #":",d0
00039FB0 <AmiBlitz3_noFPU_r470.ab3@28026>    BEQ 'nopar
00039FB2 <AmiBlitz3_noFPU_r470.ab3@28027>   TST.w d0
00039FB6 <AmiBlitz3_noFPU_r470.ab3@28028>    BEQ 'nopar
00039FBA <AmiBlitz3_noFPU_r470.ab3@28029>   CMP.w #",",d0
00039FBE <AmiBlitz3_noFPU_r470.ab3@28030>   BNE JUMP_syntaxerr
00039FC2 <AmiBlitz3_noFPU_r470.ab3@28031> BRA 'l2
00039FC4 <AmiBlitz3_noFPU_r470.ab3@28034>    MOVE.l (a7)+,d7
00039FC6 <AmiBlitz3_noFPU_r470.ab3@28035> RTS
00039FC8 <AmiBlitz3_noFPU_r470.ab3@28038>   MOVEQ #1,d7
00039FD0 <AmiBlitz3_noFPU_r470.ab3@28039>   MOVE.b #1,newvariable
00039FD6 <AmiBlitz3_noFPU_r470.ab3@28040>   LEA firstlocal,a2
00039FDC <AmiBlitz3_noFPU_r470.ab3@28041>   JSR findvariable
00039FE2 <AmiBlitz3_noFPU_r470.ab3@28042>   CLR.b newvariable
00039FE8 <AmiBlitz3_noFPU_r470.ab3@28043>   CMP.l #-1,d0
00039FEC <AmiBlitz3_noFPU_r470.ab3@28044>   BEQ.w JUMP_notypeerr2
00039FF6 <AmiBlitz3_noFPU_r470.ab3@28045>   MOVE.l fpucodelocal,fpucode
00039FFA <AmiBlitz3_noFPU_r470.ab3@28046> BRA 'go
00039FFE <AmiBlitz3_noFPU_r470.ab3@28049>   CMP.b #".",d0
0003A002 <AmiBlitz3_noFPU_r470.ab3@28050>    BNE 'l1
0003A006 <AmiBlitz3_noFPU_r470.ab3@28051>   BSR JUMP_get1bytemain
0003A00A <AmiBlitz3_noFPU_r470.ab3@28052>   BSR JUMP_get1bytemain
0003A00E <AmiBlitz3_noFPU_r470.ab3@28055>   ORI .b #$20,d0
0003A012 <AmiBlitz3_noFPU_r470.ab3@28056>   CMP.b #"d",d0
0003A016 <AmiBlitz3_noFPU_r470.ab3@28057>    BNE JUMP_illeaerr
0003A01A <AmiBlitz3_noFPU_r470.ab3@28058>   BSR JUMP_get1bytemain
0003A01E <AmiBlitz3_noFPU_r470.ab3@28059>   SUB.b #$30,d0
0003A022 <AmiBlitz3_noFPU_r470.ab3@28060>   CMP.b #$7,d0
0003A026 <AmiBlitz3_noFPU_r470.ab3@28061>    BGT JUMP_syntaxerr
0003A02A <AmiBlitz3_noFPU_r470.ab3@28062>   MOVE.w #$49c0,d1
0003A02C <AmiBlitz3_noFPU_r470.ab3@28063>   ADD.b d0,d1
0003A032 <AmiBlitz3_noFPU_r470.ab3@28064>   JSR writeword
0003A036 <AmiBlitz3_noFPU_r470.ab3@28065>   BSR JUMP_get1bytemain
0003A038 <AmiBlitz3_noFPU_r470.ab3@28066> RTS
0003A03E <AmiBlitz3_noFPU_r470.ab3@28070>   LEA lastpath,a0
0003A042 <AmiBlitz3_noFPU_r470.ab3@28071>   LEA usedpath(PC),A1
0003A044 <AmiBlitz3_noFPU_r470.ab3@28074>     MOVE.b (a0)+,(a1)+
0003A048 <AmiBlitz3_noFPU_r470.ab3@28075>   BNE 'l1
0003A04E <AmiBlitz3_noFPU_r470.ab3@28077>   LEA lastpath2,a0
0003A054 <AmiBlitz3_noFPU_r470.ab3@28078>   LEA lastpath,A1
0003A056 <AmiBlitz3_noFPU_r470.ab3@28081>     MOVE.b (a0)+,(a1)+
0003A05A <AmiBlitz3_noFPU_r470.ab3@28082>   BNE 'l2
0003A05C <AmiBlitz3_noFPU_r470.ab3@28083> RTS
0003A062 <AmiBlitz3_noFPU_r470.ab3@28087>   TST.b objectcount
0003A066 <AmiBlitz3_noFPU_r470.ab3@28088>   BEQ 'l2a
0003A06C <AmiBlitz3_noFPU_r470.ab3@28089> JMP macnesterr
0003A072 <AmiBlitz3_noFPU_r470.ab3@28092>   LEA devo,a0
0003A078 <AmiBlitz3_noFPU_r470.ab3@28093>   ADDQ.b #1,objectcount
0003A07C <AmiBlitz3_noFPU_r470.ab3@28094>   MOVEM.l a1/d2,-(a7)
0003A082 <AmiBlitz3_noFPU_r470.ab3@28095>   LEA ptr_parameterstore,a1
0003A084 <AmiBlitz3_noFPU_r470.ab3@28098>     MOVE.b (a0)+,(a1)+
0003A088 <AmiBlitz3_noFPU_r470.ab3@28099>   BNE 'l1
0003A08A <AmiBlitz3_noFPU_r470.ab3@28101>   MOVEQ #13,d2
0003A090 <AmiBlitz3_noFPU_r470.ab3@28102>   JSR findlabel2
0003A094 <AmiBlitz3_noFPU_r470.ab3@28103>   BNE 'd
0003A098 <AmiBlitz3_noFPU_r470.ab3@28104>   TST.l 8(a2)
0003A09C <AmiBlitz3_noFPU_r470.ab3@28105>   BEQ 'd
0003A0A2 <AmiBlitz3_noFPU_r470.ab3@28106>   SUBQ.b #1,objectcount
0003A0A6 <AmiBlitz3_noFPU_r470.ab3@28107>   MOVEM.l (a7)+,a1/d2
0003A0AC <AmiBlitz3_noFPU_r470.ab3@28108>   JSR skiprest
0003A0B4 <AmiBlitz3_noFPU_r470.ab3@28109>   MOVE.b #1,developobject
0003A0B6 <AmiBlitz3_noFPU_r470.ab3@28110> RTS
0003A0BA <AmiBlitz3_noFPU_r470.ab3@28113>   MOVEM.l (a7)+,a1/d2
0003A0C2 <AmiBlitz3_noFPU_r470.ab3@28114>   MOVE.b #1,resdisable
0003A0C8 <AmiBlitz3_noFPU_r470.ab3@28117>   CLR.b developobject
0003A0CE <AmiBlitz3_noFPU_r470.ab3@28118> JMP do_Macro
0003A0D4 <AmiBlitz3_noFPU_r470.ab3@28122> JMP illeaerr
0003A0DA <AmiBlitz3_noFPU_r470.ab3@28126>   CLR.b typecheck
0003A0E0 <AmiBlitz3_noFPU_r470.ab3@28127>   CLR.b declare
0003A0E6 <AmiBlitz3_noFPU_r470.ab3@28128>   CLR.b declare2
0003A0EA <AmiBlitz3_noFPU_r470.ab3@28129>   SUB.b #$30,d0
0003A0EE <AmiBlitz3_noFPU_r470.ab3@28130>   BTST #0,d0
0003A0F2 <AmiBlitz3_noFPU_r470.ab3@28131>   BEQ 'l1
0003A0FA <AmiBlitz3_noFPU_r470.ab3@28132>   MOVE.b #1,declare
0003A0FE <AmiBlitz3_noFPU_r470.ab3@28135>   BTST #1,d0
0003A102 <AmiBlitz3_noFPU_r470.ab3@28136>   BEQ 'l2
0003A10A <AmiBlitz3_noFPU_r470.ab3@28137>   MOVE.b #1,declare2
0003A10E <AmiBlitz3_noFPU_r470.ab3@28140>   BTST #2,d0
0003A112 <AmiBlitz3_noFPU_r470.ab3@28141>   BEQ 'l3
0003A11A <AmiBlitz3_noFPU_r470.ab3@28142>   MOVE.b #1,typecheck
0003A11E <AmiBlitz3_noFPU_r470.ab3@28144>   BSR.w JUMP_get1bytemain
0003A120 <AmiBlitz3_noFPU_r470.ab3@28145> RTS
0003A126 <AmiBlitz3_noFPU_r470.ab3@28148> JMP get1bytemain
0003A150 <AmiBlitz3_noFPU_r470.ab3@28152>   !basic
0003A170 <AmiBlitz3_noFPU_r470.ab3@28154>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A18E <AmiBlitz3_noFPU_r470.ab3@28155>   !asm
0003A190 <AmiBlitz3_noFPU_r470.ab3@28156> Return
0003A192 <AmiBlitz3_noFPU_r470.ab3@28161>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A194 <AmiBlitz3_noFPU_r470.ab3@28162>   ADDQ #1,a5
0003A196 <AmiBlitz3_noFPU_r470.ab3@28163>   MOVE.l a5,-(a7)
0003A1C0 <AmiBlitz3_noFPU_r470.ab3@28164>   !basic
0003A1C6 <AmiBlitz3_noFPU_r470.ab3@28165>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A1D0 <AmiBlitz3_noFPU_r470.ab3@28166>   If _myD0
0003A210 <AmiBlitz3_noFPU_r470.ab3@28167>     newconst$ = UCase$(Peek.s(_myD0))
0003A216 <AmiBlitz3_noFPU_r470.ab3@28168>   Else
0003A250 <AmiBlitz3_noFPU_r470.ab3@28169>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A278 <AmiBlitz3_noFPU_r470.ab3@28170>     nwconst$="xxx"
0003A2A0 <AmiBlitz3_noFPU_r470.ab3@28172>   condata$ =""
0003A2B0 <AmiBlitz3_noFPU_r470.ab3@28173>   Poke.b ?skip_bytes,0
0003A30C <AmiBlitz3_noFPU_r470.ab3@28174>   If Left$(newconst$,2) = "__"
0003A366 <AmiBlitz3_noFPU_r470.ab3@28175>     Select Mid$(newconst$,3,4)
0003A38A <AmiBlitz3_noFPU_r470.ab3@28177>      Case "DATE"
0003A3E4 <AmiBlitz3_noFPU_r470.ab3@28178>       Select Mid$(newconst$,3,6)
0003A422 <AmiBlitz3_noFPU_r470.ab3@28179>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A466 <AmiBlitz3_noFPU_r470.ab3@28180>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003A474 <AmiBlitz3_noFPU_r470.ab3@28181>       End Select
0003A482 <AmiBlitz3_noFPU_r470.ab3@28182>       i.l=SystemDate
0003A4A8 <AmiBlitz3_noFPU_r470.ab3@28183>       condata$ = Date$ (i)
0003A526 <AmiBlitz3_noFPU_r470.ab3@28184>       condata$ = Replace$(condata$,"/",".")
0003A550 <AmiBlitz3_noFPU_r470.ab3@28186>      Case "VER_"
0003A560 <AmiBlitz3_noFPU_r470.ab3@28189>       actual_version.l = Peek.l(?versioninformation)
0003A570 <AmiBlitz3_noFPU_r470.ab3@28190>       actual_build.l   = Peek.l(?number_of_builds)
0003A594 <AmiBlitz3_noFPU_r470.ab3@28192>       Format ""
0003A5EE <AmiBlitz3_noFPU_r470.ab3@28193>       Select Mid$(newconst$,3,9)
0003A612 <AmiBlitz3_noFPU_r470.ab3@28195>        Case "VER_MAJOR"
0003A64E <AmiBlitz3_noFPU_r470.ab3@28196>         condata$ = Str$(actual_version LSR 24)
0003A678 <AmiBlitz3_noFPU_r470.ab3@28198>        Case "VER_MINOR"
0003A6BC <AmiBlitz3_noFPU_r470.ab3@28199>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003A6E6 <AmiBlitz3_noFPU_r470.ab3@28201>        Case "VER_PATCH"
0003A72A <AmiBlitz3_noFPU_r470.ab3@28202>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003A754 <AmiBlitz3_noFPU_r470.ab3@28204>        Case "VER_BUILD"
0003A778 <AmiBlitz3_noFPU_r470.ab3@28205>         Format ""
0003A7AC <AmiBlitz3_noFPU_r470.ab3@28206>         condata$ = Str$(actual_build)
0003A7B2 <AmiBlitz3_noFPU_r470.ab3@28208>        Default
0003A7DA <AmiBlitz3_noFPU_r470.ab3@28209>         condata$ = "{unknown compiler constant}"
0003A7E8 <AmiBlitz3_noFPU_r470.ab3@28211>       End Select
0003A80C <AmiBlitz3_noFPU_r470.ab3@28212>       Format ""
0003A81C <AmiBlitz3_noFPU_r470.ab3@28213>       Poke.b ?skip_bytes,11
0003A846 <AmiBlitz3_noFPU_r470.ab3@28215>      Case "THIS"
0003A8A0 <AmiBlitz3_noFPU_r470.ab3@28216>       Select Mid$(newconst$,3,9)
0003A8C4 <AmiBlitz3_noFPU_r470.ab3@28218>        Case "THIS_FUNC"
0003A8D4 <AmiBlitz3_noFPU_r470.ab3@28219>         Poke.b ?skip_bytes,15
0003A8F4 <AmiBlitz3_noFPU_r470.ab3@28220>         If Peek.l(?currentfunction)<>0
0003A940 <AmiBlitz3_noFPU_r470.ab3@28221>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003A946 <AmiBlitz3_noFPU_r470.ab3@28222>         Else
0003A96E <AmiBlitz3_noFPU_r470.ab3@28223>           condata$ = "GLOBAL"
0003A998 <AmiBlitz3_noFPU_r470.ab3@28226>        Case "THIS_INCL"
0003A9A8 <AmiBlitz3_noFPU_r470.ab3@28227>         Poke.b ?skip_bytes,14
0003A9C8 <AmiBlitz3_noFPU_r470.ab3@28228>         If Peek.l(?includetemp2)<>0
0003AA16 <AmiBlitz3_noFPU_r470.ab3@28229>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003AA40 <AmiBlitz3_noFPU_r470.ab3@28232>        Case "THIS_POIN"
0003AA50 <AmiBlitz3_noFPU_r470.ab3@28233>         Poke.b ?skip_bytes,14
0003AA70 <AmiBlitz3_noFPU_r470.ab3@28234>         If Peek.l(?currentfunction)<>0
0003AA9E <AmiBlitz3_noFPU_r470.ab3@28235>           condata$ = Hex$(Peek.l(?currentfunction))
0003AAAC <AmiBlitz3_noFPU_r470.ab3@28238>       End Select
0003AAD6 <AmiBlitz3_noFPU_r470.ab3@28240>      Case "CODE"
0003AAE6 <AmiBlitz3_noFPU_r470.ab3@28241>       Poke.b ?skip_bytes,10
0003AB48 <AmiBlitz3_noFPU_r470.ab3@28242>       If Mid$(newconst$,3,8) = "CODELINE"
0003AB84 <AmiBlitz3_noFPU_r470.ab3@28243>         condata$ = Str$(Peek.l(?globallinecount))
0003AB92 <AmiBlitz3_noFPU_r470.ab3@28246>     End Select
0003AB98 <AmiBlitz3_noFPU_r470.ab3@28248>   Else
0003ABEC <AmiBlitz3_noFPU_r470.ab3@28249>     Select Left$(newconst$,1)
0003AC10 <AmiBlitz3_noFPU_r470.ab3@28251>      Case "R"
0003AC20 <AmiBlitz3_noFPU_r470.ab3@28252>       Poke.b ?skip_bytes,3
0003AC98 <AmiBlitz3_noFPU_r470.ab3@28253>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003AD18 <AmiBlitz3_noFPU_r470.ab3@28254>         condata$ = condata$ + Mid$(newconst$,4,1)
0003AD28 <AmiBlitz3_noFPU_r470.ab3@28255>       Next
0003AD52 <AmiBlitz3_noFPU_r470.ab3@28257>      Case "N"
0003AD62 <AmiBlitz3_noFPU_r470.ab3@28258>       Poke.b ?skip_bytes,1
0003AD86 <AmiBlitz3_noFPU_r470.ab3@28259>       condata$ = Chr$(10)
0003AD8C <AmiBlitz3_noFPU_r470.ab3@28261>      Default
0003AD9E <AmiBlitz3_noFPU_r470.ab3@28262>       char1.b = Peek.b(&newconst$)
0003ADB6 <AmiBlitz3_noFPU_r470.ab3@28263>       char2.b = Peek.b(&newconst$+1)
0003ADC2 <AmiBlitz3_noFPU_r470.ab3@28264>       nibble1.l = -1
0003ADCE <AmiBlitz3_noFPU_r470.ab3@28265>       nibble2.l = -1
0003AE0C <AmiBlitz3_noFPU_r470.ab3@28267>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003AE4A <AmiBlitz3_noFPU_r470.ab3@28268>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003AE8E <AmiBlitz3_noFPU_r470.ab3@28270>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003AED2 <AmiBlitz3_noFPU_r470.ab3@28271>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003AF16 <AmiBlitz3_noFPU_r470.ab3@28273>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003AF5A <AmiBlitz3_noFPU_r470.ab3@28274>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003AF80 <AmiBlitz3_noFPU_r470.ab3@28276>       If nibble1>=0 AND nibble2>=0
0003AF96 <AmiBlitz3_noFPU_r470.ab3@28277>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003AFBA <AmiBlitz3_noFPU_r470.ab3@28278>         condata$ = Chr$(newchar)
0003AFCA <AmiBlitz3_noFPU_r470.ab3@28279>         Poke.b ?skip_bytes,2
0003AFD8 <AmiBlitz3_noFPU_r470.ab3@28282>     End Select
0003B038 <AmiBlitz3_noFPU_r470.ab3@28284>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B15E <AmiBlitz3_noFPU_r470.ab3@28285>     !cout{"detected unknown const: " + newconst$}
0003B192 <AmiBlitz3_noFPU_r470.ab3@28286>     condata$ = newconst$
0003B1A8 <AmiBlitz3_noFPU_r470.ab3@28289>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B1AA <AmiBlitz3_noFPU_r470.ab3@28290>   MOVE.l d0,d2
0003B1AC <AmiBlitz3_noFPU_r470.ab3@28291>   MOVE.l d2,-(a7)
0003B1B2 <AmiBlitz3_noFPU_r470.ab3@28293>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B1B4 <AmiBlitz3_noFPU_r470.ab3@28294>   MOVE.l d0,a0
0003B1B6 <AmiBlitz3_noFPU_r470.ab3@28297>     MOVE.b (a0)+,d1
0003B1BC <AmiBlitz3_noFPU_r470.ab3@28298>     JSR pokedata1b
0003B1C0 <AmiBlitz3_noFPU_r470.ab3@28299>  DBF d2,'l1
0003B1DE <AmiBlitz3_noFPU_r470.ab3@28301>   !asm
0003B1E0 <AmiBlitz3_noFPU_r470.ab3@28302>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B1E2 <AmiBlitz3_noFPU_r470.ab3@28303>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B1E4 <AmiBlitz3_noFPU_r470.ab3@28304>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B1EA <AmiBlitz3_noFPU_r470.ab3@28305>   ADD.l #1,d2
0003B1F0 <AmiBlitz3_noFPU_r470.ab3@28307>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B1F6 <AmiBlitz3_noFPU_r470.ab3@28308>   MOVE.b skip_bytes,D0
0003B1F8 <AmiBlitz3_noFPU_r470.ab3@28309>   ADD.l D0,a5
0003B1FA <AmiBlitz3_noFPU_r470.ab3@28310> RTS
0003B1FE <AmiBlitz3_noFPU_r470.ab3@28385> MOVEM.l a3/d1,-(a7)
0003B204 <AmiBlitz3_noFPU_r470.ab3@28387> CLR.b a4a5store
0003B206 <AmiBlitz3_noFPU_r470.ab3@28388> 'continue: MOVE.b (a3)+,d1
0003B20A <AmiBlitz3_noFPU_r470.ab3@28389> CMP.b #$15,d1
0003B20E <AmiBlitz3_noFPU_r470.ab3@28390> BEQ 'find
0003B212 <AmiBlitz3_noFPU_r470.ab3@28391> CMP.b #$14,d1
0003B216 <AmiBlitz3_noFPU_r470.ab3@28392> BEQ 'find
0003B21A <AmiBlitz3_noFPU_r470.ab3@28393> CMP.b #$ff,d1
0003B21E <AmiBlitz3_noFPU_r470.ab3@28394> BNE 'continue
0003B222 <AmiBlitz3_noFPU_r470.ab3@28395> BRA 'notfind
0003B228 <AmiBlitz3_noFPU_r470.ab3@28397> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B22E <AmiBlitz3_noFPU_r470.ab3@28398> JSR writelong
0003B236 <AmiBlitz3_noFPU_r470.ab3@28399> MOVE.b #1,a4a5store
0003B23A <AmiBlitz3_noFPU_r470.ab3@28400> 'notfind: MOVEM.l (a7)+,a3/d1
0003B23C <AmiBlitz3_noFPU_r470.ab3@28401> RTS
0003B242 <AmiBlitz3_noFPU_r470.ab3@28404> TST.b a4a5store
0003B246 <AmiBlitz3_noFPU_r470.ab3@28405> BEQ 'no
0003B24C <AmiBlitz3_noFPU_r470.ab3@28406> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B252 <AmiBlitz3_noFPU_r470.ab3@28407> JSR writelong
0003B258 <AmiBlitz3_noFPU_r470.ab3@28408> CLR.b a4a5store
0003B25A <AmiBlitz3_noFPU_r470.ab3@28409> 'no RTS
0003B25A <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003B25E <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B260 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B268 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B274 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B278 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B27A <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B27E <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B2C7 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B2C8 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B2CC <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B2CE <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B2D2 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B2EE <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B2F2 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B2F4 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B2F8 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B355 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B356 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B35A <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B35C <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B361 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B371 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B372 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B376 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B378 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B37E <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B38E <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B392 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B394 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B39B <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B39C <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B3A0 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B3A2 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B3AC <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B3DF <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B3E0 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B3E4 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B3E6 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B3EF <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003B42A <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003B42E <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003B430 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003B43A <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003B43B <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003B43C <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003B440 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003B442 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003B445 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003B45C <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003B460 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003B462 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003B468 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003B475 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003B476 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003B47A <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003B47C <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003B482 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003B48E <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003B492 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003B494 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003B49B <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003B4A8 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003B4AC <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003B4AE <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003B4B3 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003B4C0 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003B4C4 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003B4C6 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003B4CE <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003B4CF <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003B4D0 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003B4D4 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003B4D6 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003B4DE <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003B4DF <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003B4E0 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003B4E4 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003B4E6 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003B4EF <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003B4FA <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003B4FE <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003B500 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003B508 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003B513 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003B514 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003B518 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003B51A <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003B521 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003B583 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003B584 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003B588 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003B58A <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003B591 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003B5A0 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003B5A4 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003B5A6 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003B5AA <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003B5E0 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003B5E4 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003B5E6 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003B5EB <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003B5FA <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003B5FE <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003B600 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003B603 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003B624 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003B628 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003B62A <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003B62F <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003B63B <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003B63C <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003B640 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003B642 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003B647 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003B65E <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003B662 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003B664 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003B669 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003B678 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003B67C <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003B67E <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003B683 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003B6A2 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003B6A6 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003B6A8 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003B6AD <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003B6CC <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003B6D0 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003B6D2 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003B6D8 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003B6D9 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003B6DA <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003B6DE <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003B6E0 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003B6E5 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003B6E6 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003B6EA <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003B6EC <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003B6F1 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003B6FE <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003B702 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003B704 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003B709 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003B718 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003B71C <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003B71E <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003B723 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003B732 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003B736 <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003B738 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003B73E <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003B75B <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003B75C <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003B760 <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003B762 <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003B768 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003B785 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003B786 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003B78A <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003B78C <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003B78F <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003B7A6 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003B7AA <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003B7AC <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003B7AF <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003B7BE <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003B7C2 <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003B7C4 <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003B7C9 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003B7CA <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003B7CE <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003B7D0 <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003B7D4 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003B7E9 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003B7EA <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003B7EE <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003B7F0 <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003B7F7 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003B810 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003B814 <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003B816 <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003B81D <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003B828 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003B82C <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003B82E <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003B833 <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003B84A <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003B84E <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003B850 <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003B854 <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003B86B <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003B86C <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003B870 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003B872 <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003B877 <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003B878 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003B87C <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003B87E <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003B883 <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003B887 <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003B888 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003B88C <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003B88E <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003B895 <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003B8AD <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003B8AE <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003B8B2 <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003B8B4 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003B8BB <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003B8C0 <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003B8C4 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003B8C6 <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003B8CD <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003B8D2 <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003B8D6 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003B8D8 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003B8DF <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003B8FA <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003B8FE <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003B900 <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003B908 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003B921 <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003B922 <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003B926 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003B928 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003B92E <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003B92F <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003B930 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003B934 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003B936 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003B93C <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003B93D <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003B93E <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003B942 <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003B944 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003B94B <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003B94C <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003B950 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003B952 <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003B958 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003B961 <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003B962 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003B966 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003B968 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003B970 <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003B97D <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003B97E <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003B982 <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003B984 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003B98C <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003B999 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003B99A <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003B99E <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003B9A0 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003B9A8 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003B9B5 <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003B9B6 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003B9BA <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003B9BC <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003B9C1 <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003B9C6 <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003B9C8 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003B9CD <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003B9CE <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003B9D0 <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003B9D4 <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003B9D6 <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003B9D8 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003B9DC <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003B9DE <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003B9E2 <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003B9E4 <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003B9E8 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003B9E9 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003B9EA <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003B9EC <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003B9F0 <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003B9F2 <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003B9F4 <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003B9F8 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003B9FA <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003B9FE <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003BA00 <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003BA05 <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003BA06 <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003BA08 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003BA0C <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003BA0E <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003BA10 <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003BA14 <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003BA16 <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003BA1A <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003BA1C <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003BA21 <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003BA22 <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003BA24 <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003BA28 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003BA2A <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003BA2C <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003BA30 <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003BA32 <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003BA36 <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003BA38 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003BA3D <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003BA3E <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003BA40 <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003BA44 <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003BA46 <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003BA48 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003BA4C <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003BA4E <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003BA52 <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003BA54 <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003BA59 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003BA5A <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003BA5C <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003BA60 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003BA62 <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003BA64 <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003BA68 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003BA6A <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003BA6E <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003BA70 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003BA74 <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003BA75 <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003BA76 <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003BA78 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003BA7C <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003BA7E <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003BA80 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003BA84 <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003BA86 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003BA8A <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003BA8C <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003BA91 <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003BA92 <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003BA94 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003BA98 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003BA9A <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003BA9C <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003BAA0 <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003BAA2 <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003BAA6 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003BAA8 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003BAAC <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003BAAD <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003BAAE <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003BAB0 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003BAB4 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003BAB6 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003BAB8 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003BABC <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003BABE <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003BAC2 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003BAC4 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003BAC8 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003BAC9 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003BACA <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003BACC <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003BAD0 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003BAD2 <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003BAD4 <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003BAD8 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003BADA <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003BADE <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003BAE0 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003BAE4 <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003BAE5 <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003BAE6 <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003BAE8 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003BAEC <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003BAEE <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003BAF0 <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003BAF4 <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003BAF6 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003BAFA <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003BAFC <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003BB00 <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003BB01 <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003BB02 <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003BB04 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003BB08 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003BB0A <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003BB0C <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003BB10 <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003BB12 <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003BB16 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003BB18 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003BB1C <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003BB1D <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003BB1E <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003BB20 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003BB24 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003BB26 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003BB28 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003BB2C <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003BB2E <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003BB32 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003BB34 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003BB38 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003BB39 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003BB3A <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003BB3C <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003BB40 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003BB42 <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003BB44 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003BB48 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003BB4A <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003BB4E <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003BB50 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003BB54 <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003BB55 <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003BB56 <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003BB58 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003BB5C <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003BB5E <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003BB60 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003BB64 <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003BB66 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003BB6A <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003BB6C <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003BB70 <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003BB71 <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003BB72 <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003BB74 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003BB78 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003BB7A <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003BB7C <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003BB80 <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003BB82 <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003BB86 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003BB88 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003BB8C <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003BB8D <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003BB8E <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003BB90 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003BB94 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003BB96 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003BB98 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003BB9C <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003BB9E <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003BBA2 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003BBA4 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003BBA8 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003BBA9 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003BBAA <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003BBAC <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003BBB0 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003BBB2 <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003BBB4 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003BBB8 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003BBBA <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003BBBE <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003BBC0 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003BBC4 <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003BBC5 <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003BBC6 <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003BBC8 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003BBCC <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003BBCE <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003BBD0 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003BBD4 <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003BBD6 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003BBDA <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003BBDC <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003BBE0 <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003BBE1 <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003BBE2 <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003BBE4 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003BBE8 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003BBEA <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003BBEC <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003BBF0 <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003BBF2 <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003BBF6 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003BBF8 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003BBFC <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003BBFD <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003BBFE <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003BC00 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003BC04 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003BC06 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003BC08 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003BC0C <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003BC0E <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003BC12 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003BC14 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003BC18 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003BC19 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003BC1A <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003BC1C <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003BC20 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003BC22 <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003BC24 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003BC28 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003BC2A <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003BC2E <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003BC30 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003BC34 <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003BC35 <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003BC36 <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003BC38 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003BC3C <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003BC3E <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003BC40 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003BC44 <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003BC46 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003BC4A <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003BC4C <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003BC50 <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003BC51 <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003BC52 <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003BC54 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003BC58 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003BC5A <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003BC5C <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003BC60 <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003BC62 <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003BC66 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003BC68 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003BC6D <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003BC6E <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003BC70 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003BC74 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003BC76 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003BC78 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003BC7C <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003BC7E <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003BC82 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003BC84 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003BC89 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003BC8A <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003BC8C <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003BC90 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003BC92 <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003BC94 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003BC98 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003BC9A <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003BC9E <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003BCA0 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003BCA5 <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003BCA6 <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003BCA8 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003BCAC <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003BCAE <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003BCB0 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003BCB4 <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003BCB6 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003BCBA <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003BCBC <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003BCC1 <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003BCC2 <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003BCC4 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003BCC8 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003BCCA <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003BCCC <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003BCD0 <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003BCD2 <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003BCD6 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003BCD8 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003BCDC <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003BCDD <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003BCDE <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003BCE0 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003BCE4 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003BCE6 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003BCE8 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003BCEC <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003BCEE <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003BCF2 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003BCF4 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003BCF8 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003BCF9 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003BCFA <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003BCFC <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003BD00 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003BD02 <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003BD04 <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003BD08 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003BD0A <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003BD0E <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003BD10 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003BD14 <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003BD15 <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003BD16 <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003BD18 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003BD1C <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003BD1E <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003BD20 <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003BD24 <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003BD26 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003BD2A <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003BD2C <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003BD30 <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003BD31 <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003BD32 <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003BD34 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003BD38 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003BD3A <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003BD3C <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003BD40 <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003BD42 <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003BD46 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003BD48 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003BD4C <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003BD4D <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003BD4E <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003BD50 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003BD54 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003BD56 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003BD58 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003BD5C <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003BD5E <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003BD62 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003BD64 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003BD69 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003BD6A <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003BD6C <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003BD70 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003BD72 <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003BD74 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003BD78 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003BD7A <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003BD7E <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003BD80 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003BD85 <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003BD86 <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003BD88 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003BD8C <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003BD8E <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003BD90 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003BD94 <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003BD96 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003BD9A <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003BD9C <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003BDA1 <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003BDA2 <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003BDA4 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003BDA8 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003BDAA <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003BDAC <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003BDB0 <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003BDB2 <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003BDB6 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003BDB8 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003BDBD <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003BDBE <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003BDC0 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003BDC4 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003BDC6 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003BDC8 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003BDCC <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003BDCE <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003BDD2 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003BDD4 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003BDD9 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003BDDA <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003BDDC <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003BDE0 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003BDE2 <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003BDE4 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003BDEA <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003BDEE <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003BDF0 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003BDF5 <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003BDF6 <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003BDF8 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003BDFC <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003BDFE <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003BE00 <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003BE04 <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003BE06 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003BE0A <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003BE0C <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003BE11 <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003BE12 <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003BE14 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003BE18 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003BE1A <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003BE1C <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003BE20 <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003BE22 <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003BE26 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003BE28 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003BE2D <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003BE2E <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003BE30 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003BE34 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003BE36 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003BE38 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003BE3C <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003BE3E <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003BE42 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003BE44 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003BE49 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003BE4A <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003BE4C <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003BE50 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003BE52 <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003BE54 <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003BE58 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003BE5A <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003BE5E <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003BE60 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003BE65 <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003BE66 <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003BE68 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003BE6C <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003BE6E <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003BE70 <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003BE74 <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003BE76 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003BE7A <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003BE7C <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003BE81 <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003BE82 <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003BE84 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003BE88 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003BE8A <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003BE8C <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003BE90 <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003BE92 <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003BE96 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003BE98 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003BE9D <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003BE9E <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003BEA0 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003BEA4 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003BEA6 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003BEA8 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003BEAC <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003BEAE <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003BEB2 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003BEB4 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003BEB9 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003BEBC <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003BEC2 <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003BEC4 <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003BECA <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003BECE <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003BED0 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003BED5 <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003BED6 <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003BED8 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003BEDE <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003BEE0 <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003BEE4 <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003BEE6 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003BEEA <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003BEEC <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003BEF1 <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003BEF2 <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003BEF8 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003BEFC <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003BF00 <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003BF06 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003BF0D <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003BF14 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003BF22 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003BF29 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003BF2A <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003BF38 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003BF3A <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003BF3E <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003BF44 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003BF45 <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003BF48 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003BF4C <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003BF54 <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003BF56 <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003BF5A <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003BF5C <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003BF61 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003BF62 <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003BF68 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003BF72 <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003BF76 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003BF78 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003BF7C <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003BF7D <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003BF7E <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003BF80 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003BF84 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003BF86 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003BF8C <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003BF92 <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003BF94 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003BF99 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003BF9A <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003BF9C <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003BFA0 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003BFAA <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003BFAE <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003BFB0 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003BFB5 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003BFB8 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003BFC4 <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003BFC6 <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003BFCA <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003BFCC <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003BFD1 <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003BFD2 <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003BFDA <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003BFE0 <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003BFE6 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003BFE8 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003BFED <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003BFEE <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003BFF6 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003BFFC <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003BFFE <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C002 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C004 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003C009 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003C00A <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C010 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C012 <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003C01A <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C01E <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C020 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003C025 <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003C026 <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003C028 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C02E <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003C036 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C03A <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C03C <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003C045 <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003C048 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003C04E <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003C056 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003C061 <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C06A <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C06C <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003C072 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003C07D <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C086 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003C099 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003C09A <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C0A2 <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003C0AA <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C0B5 <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003C0B6 <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C0BE <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C0C0 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003C0C6 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C0CA <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C0D0 <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003C0D1 <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003C0D2 <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C0DA <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003C0E2 <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C0E6 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C0EC <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003C0ED <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003C0EE <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003C0F0 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C0F6 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C0FC <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003C0FE <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C102 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C109 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003C10A <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C112 <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003C11A <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C125 <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003C126 <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C12E <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003C142 <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003C143 <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003C144 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C14A <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C14C <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003C152 <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C154 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C158 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C15A <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003C160 <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003C161 <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C168 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003C170 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003C17E <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003C17F <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C182 <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C194 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003C19B <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003C19E <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C1B0 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003C1B7 <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003C1C2 <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003C1C6 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C1CC <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003C1D3 <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C1DE <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C1E8 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C1EE <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003C1EF <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C204 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C20B <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003C20E <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C220 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C226 <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003C227 <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003C22A <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C232 <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C23C <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C23E <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003C243 <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003C246 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C258 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C25A <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C25D <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003C25E <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C264 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C26C <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C272 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C278 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C279 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C280 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C282 <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C288 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C290 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C295 <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C296 <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C29C <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C2A4 <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C2AA <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C2AC <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C2B2 <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C2B3 <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C2B6 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C2C8 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C2CF <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C2DA <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C2E0 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C2EA <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C2EB <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C2EE <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C2F2 <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C2F6 <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C2FC <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C300 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C307 <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C30A <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C318 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C31C <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C323 <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C334 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C338 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C33E <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C33F <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C342 <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C348 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C356 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C35B <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C35C <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C35E <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C362 <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C370 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C372 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C376 <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C377 <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C378 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C37A <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C37E <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C38C <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C393 <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C396 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C39A <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C3A8 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C3AA <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C3AF <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C3B2 <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C3B6 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C3C4 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C3CB <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C3CE <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C3D2 <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C3D6 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C3E0 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C3E7 <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C3EA <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C3F0 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C3FC <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C403 <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003C406 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003C418 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003C41F <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003C434 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003C43B <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003C446 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003C450 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003C457 <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003C45A <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003C45E <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003C46C <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003C472 <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003C473 <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003C488 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003C48F <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003C49A <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003C4A4 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003C4AB <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003C4C6 <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003C4C7 <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003C4DC <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003C4E3 <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003C4E6 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003C4EE <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003C4FF <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003C502 <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003C50A <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003C51B <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003C51E <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003C522 <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003C526 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003C535 <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003C536 <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003C53E <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003C54A <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003C54F <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003C552 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003C566 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003C56B <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003C56E <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003C576 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003C582 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003C587 <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003C58A <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003C592 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003C59E <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003C5A3 <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003C5A6 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003C5AE <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003C5BA <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003C5BF <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003C5C2 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003C5CA <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003C5D6 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003C5DB <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003C5E6 <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003C5F7 <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003C602 <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003C613 <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003C61E <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003C62E <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003C62F <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003C64B <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003C652 <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003C65A <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003C669 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003C685 <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003C6A1 <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003C6B0 <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003C6BF <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003C6CC <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003C6E8 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003C6EE <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003C6F6 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003C704 <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003C70C <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003C720 <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003C736 <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003C768 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003C7A4 <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003C7B6 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003C7DC <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003C7E4 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003C7FA <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003C80E <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003C816 <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003C81E <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003C82A <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003C832 <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003C84C <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003C854 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003C85C <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003C870 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003C884 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003C88C <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003C894 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003C8A8 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003C8B0 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003C8C4 <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003C8CC <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003C8E8 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003C8F6 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003C8FC <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003C90C <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003C922 <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003C928 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003C93E <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003C950 <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003C955 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003C95A <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003C963 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003C971 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003C981 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003C988 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003C98D <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003C9A1 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003C9A8 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003C9AC <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003C9AD <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003C9AE <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003C9B7 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003C9C5 <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003C9CA <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003C9DF <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003C9E6 <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003C9ED <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003CA05 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003CA10 <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003CA33 <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003CA3A <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003CA41 <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003CA4C <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003CA50 <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003CA59 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003CA5E <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003CA65 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003CA6A <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003CA6C <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003CA73 <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003CA85 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003CA86 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003CA96 <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003CA97 <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003CA9C <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003CA9E <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003CAB3 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003CAB8 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003CABA <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003CABD <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003CAF8 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003CAFE <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003CB03 <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003CB13 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003CB14 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003CB1A <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003CB22 <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003CB36 <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003CB41 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003CB49 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003CB4A <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003CB61 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003CB62 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003CB66 <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003CB68 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003CB71 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003CB72 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003CB76 <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003CB78 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003CB7E <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003CB7F <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003CB84 <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003CB8D <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003CB8E <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003CB92 <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003CB94 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003CB9B <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003CBA2 <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003CBA9 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003CBAA <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003CBB0 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003CBB7 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003CBB8 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003CBBE <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003CBC3 <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003CBD9 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003CBDA <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003CBEB <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003CBF2 <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003CBFD <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003CBFE <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003CC02 <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003CC3D <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003CC3E <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003CC42 <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003CC44 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003CC4C <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003CC83 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003CC84 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003CC8A <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003CC92 <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003CCB1 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003CCB2 <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003CCB6 <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003CCB8 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003CCBF <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003CCF5 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003CCFA <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003CCFC <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003CD05 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003CD40 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003CD50 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003CD87 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003CD88 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003CD88 <AmiBlitz3_noFPU_r470.ab3@28413> INCLUDE "internal_commands.ab3"
0003CD8C <AmiBlitz3_noFPU_r470.ab3@28418>            Dc.l cif_lt                                     ;ciflt
0003CD90 <AmiBlitz3_noFPU_r470.ab3@28419>            Dc.l cif_eq                                     ;cifeq
0003CD94 <AmiBlitz3_noFPU_r470.ab3@28420>            Dc.l cif_gt                                     ;cifgt
0003CD98 <AmiBlitz3_noFPU_r470.ab3@28421>            Ds.l 1                                          ;0
0003CD9C <AmiBlitz3_noFPU_r470.ab3@28422>            Dc.l cif_le                                     ;cifle
0003CDA0 <AmiBlitz3_noFPU_r470.ab3@28423>            Dc.l cif_ne                                     ;cifne
0003CDA4 <AmiBlitz3_noFPU_r470.ab3@28424>            Dc.l cif_le                                     ;cifge
0003CDA8 <AmiBlitz3_noFPU_r470.ab3@28425>            Ds.l 1                                          ;0
0003CDAC <AmiBlitz3_noFPU_r470.ab3@28426>            Dc.l cif_ge                                     ;cifge
0003CDB0 <AmiBlitz3_noFPU_r470.ab3@28427>            Dc.l cif_ne                                     ;cifne
0003CDB4 <AmiBlitz3_noFPU_r470.ab3@28428>            Dc.l cif_ge                                     ;cifge
0003CDB8 <AmiBlitz3_noFPU_r470.ab3@28429>            Ds.l 1                                          ;0
0003CDBC <AmiBlitz3_noFPU_r470.ab3@28432>            Dc.l do_newtype                                 ;donewtype
0003CDC0 <AmiBlitz3_noFPU_r470.ab3@28433>            Dc.l do_end                                     ;doend
0003CDC4 <AmiBlitz3_noFPU_r470.ab3@28434>            Dc.l do_let                                     ;dolet
0003CDC8 <AmiBlitz3_noFPU_r470.ab3@28435>            Dc.l do_dim                                     ;dodim
0003CDCC <AmiBlitz3_noFPU_r470.ab3@28436>            Dc.l do_goto                                    ;dogoto
0003CDD0 <AmiBlitz3_noFPU_r470.ab3@28437>            Dc.l do_gosub                                   ;dogosub
0003CDD4 <AmiBlitz3_noFPU_r470.ab3@28438>            Dc.l do_return                                  ;doreturn
0003CDD8 <AmiBlitz3_noFPU_r470.ab3@28439>            Dc.l do_statement                               ;dostatement
0003CDDC <AmiBlitz3_noFPU_r470.ab3@28440>            Dc.l do_function                                ;dofunc
0003CDE0 <AmiBlitz3_noFPU_r470.ab3@28441>            Dc.l do_mousewait                               ;domwait
0003CDE4 <AmiBlitz3_noFPU_r470.ab3@28442>            Dc.l do_if                                      ;doif
0003CDE8 <AmiBlitz3_noFPU_r470.ab3@28443>            Dc.l do_while                                   ;dowhile
0003CDEC <AmiBlitz3_noFPU_r470.ab3@28444>            Dc.l do_Macro                                   ;domacro
0003CDF0 <AmiBlitz3_noFPU_r470.ab3@28445>            Dc.l do_select                                  ;doselect
0003CDF4 <AmiBlitz3_noFPU_r470.ab3@28446>            Dc.l do_case                                    ;docase
0003CDF8 <AmiBlitz3_noFPU_r470.ab3@28447>            Dc.l do_default                                 ;dodefault
0003CDFC <AmiBlitz3_noFPU_r470.ab3@28448>            Dc.l do_AsmExit                                 ;doasmexit
0003CE00 <AmiBlitz3_noFPU_r470.ab3@28449>            Dc.l do_xinclude                                ;doxinclude
0003CE04 <AmiBlitz3_noFPU_r470.ab3@28450>            Dc.l do_INCLUDE                                 ;doinclude
0003CE08 <AmiBlitz3_noFPU_r470.ab3@28451>            Dc.l do_syntax                                  ;syntaxerr
0003CE0C <AmiBlitz3_noFPU_r470.ab3@28452>            Dc.l do_shared                                  ;doshared
0003CE10 <AmiBlitz3_noFPU_r470.ab3@28453>            Dc.l do_for                                     ;dofor
0003CE14 <AmiBlitz3_noFPU_r470.ab3@28454>            Dc.l do_next                                    ;donext
0003CE18 <AmiBlitz3_noFPU_r470.ab3@28455>            Dc.l syntaxerr                                  ; To
0003CE1C <AmiBlitz3_noFPU_r470.ab3@28456>            Dc.l syntaxerr                                  ; Step
0003CE20 <AmiBlitz3_noFPU_r470.ab3@28457>            Dc.l do_data                                    ;dodata
0003CE24 <AmiBlitz3_noFPU_r470.ab3@28458>            Dc.l do_read                                    ;doread
0003CE28 <AmiBlitz3_noFPU_r470.ab3@28462>            Dc.l syntaxerr                                  ; CNIF
0003CE2C <AmiBlitz3_noFPU_r470.ab3@28463>            Dc.l syntaxerr                                  ; CSIF
0003CE30 <AmiBlitz3_noFPU_r470.ab3@28464>            Dc.l syntaxerr                                  ; CELSE
0003CE34 <AmiBlitz3_noFPU_r470.ab3@28465>            Dc.l syntaxerr                                  ; CEND
0003CE38 <AmiBlitz3_noFPU_r470.ab3@28466>            Dc.l do_cerr                                    ;docerr
0003CE3C <AmiBlitz3_noFPU_r470.ab3@28467>            Dc.l do_then                                    ;dothen
0003CE40 <AmiBlitz3_noFPU_r470.ab3@28468>            Dc.l do_else                                    ;doelse
0003CE44 <AmiBlitz3_noFPU_r470.ab3@28469>            Dc.l do_even4                                   ;doeven4
0003CE48 <AmiBlitz3_noFPU_r470.ab3@28470>            Dc.l do_even8                                   ;doeven8
0003CE4C <AmiBlitz3_noFPU_r470.ab3@28472>            Dc.l do_dc                                      ;dodc
0003CE50 <AmiBlitz3_noFPU_r470.ab3@28473>            Dc.l do_ds                                      ;dods
0003CE54 <AmiBlitz3_noFPU_r470.ab3@28474>            Dc.l do_even                                    ;doeven
0003CE58 <AmiBlitz3_noFPU_r470.ab3@28475>            Dc.l do_dcb                                     ;dodcb
0003CE5C <AmiBlitz3_noFPU_r470.ab3@28476>            Dc.l do_setreg                                  ;dosetreg
0003CE60 <AmiBlitz3_noFPU_r470.ab3@28477>            Dc.l do_IncBin                                  ;doincbin
0003CE64 <AmiBlitz3_noFPU_r470.ab3@28478>            Dc.l do_free                                    ;dofree
0003CE68 <AmiBlitz3_noFPU_r470.ab3@28479>            Dc.l do_use                                     ;douse
0003CE6C <AmiBlitz3_noFPU_r470.ab3@28480>            Dc.l do_Stop                                    ;dostop
0003CE70 <AmiBlitz3_noFPU_r470.ab3@28481>            Dc.l do_Cont                                    ;docont
0003CE74 <AmiBlitz3_noFPU_r470.ab3@28482>            Dc.l syntaxerr                                  ;syntaxeer
0003CE78 <AmiBlitz3_noFPU_r470.ab3@28483>            Dc.l do_SetInt                                  ;dosetint
0003CE7C <AmiBlitz3_noFPU_r470.ab3@28484>            Dc.l do_ClrInt                                  ;doclrint
0003CE80 <AmiBlitz3_noFPU_r470.ab3@28485>            Dc.l do_MaxLen                                  ;domaxlen
0003CE84 <AmiBlitz3_noFPU_r470.ab3@28486>            Dc.l do_DEFTYPE                                 ;dodeftype
0003CE88 <AmiBlitz3_noFPU_r470.ab3@28487>            Dc.l do_BLITZ                                   ;doblitz
0003CE8C <AmiBlitz3_noFPU_r470.ab3@28488>            Dc.l do_AMIGA                                   ;doamiga
0003CE90 <AmiBlitz3_noFPU_r470.ab3@28489>            Dc.l do_QAMIGA                                  ;doqamiga
0003CE94 <AmiBlitz3_noFPU_r470.ab3@28490>            Dc.l do_VWait                                   ;dovwait
0003CE98 <AmiBlitz3_noFPU_r470.ab3@28491>            Dc.l do_LibJsr                                  ;dolibjsr
0003CE9C <AmiBlitz3_noFPU_r470.ab3@28492>            Dc.l do_TokeJsr                                 ;dotokejsr
0003CEA0 <AmiBlitz3_noFPU_r470.ab3@28493>            Dc.l do_BLibJsr                                 ;doblibjsr
0003CEA4 <AmiBlitz3_noFPU_r470.ab3@28494>            Dc.l _extb                                      ;syntaxerr
0003CEA8 <AmiBlitz3_noFPU_r470.ab3@28498>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003CEAC <AmiBlitz3_noFPU_r470.ab3@28499>            Dc.l do_SetErr                                  ;doseterr
0003CEB0 <AmiBlitz3_noFPU_r470.ab3@28500>            Dc.l do_ClrErr                                  ;doclrerr
0003CEB4 <AmiBlitz3_noFPU_r470.ab3@28501>            Dc.l syntaxerr                                  ;syntaxerr
0003CEB8 <AmiBlitz3_noFPU_r470.ab3@28502>            Dc.l do_ErrFail                                 ;doerrfail
0003CEBC <AmiBlitz3_noFPU_r470.ab3@28503>            Dc.l syntaxerr
0003CEC0 <AmiBlitz3_noFPU_r470.ab3@28504>            Dc.l syntaxerr                                  ;mod
0003CEC4 <AmiBlitz3_noFPU_r470.ab3@28505>            Dc.l syntaxerr                                  ;Pi
0003CEC8 <AmiBlitz3_noFPU_r470.ab3@28506>            Dc.l do_Repeat                                  ;dorepeat
0003CECC <AmiBlitz3_noFPU_r470.ab3@28507>            Dc.l do_Until                                   ;dountil
0003CED0 <AmiBlitz3_noFPU_r470.ab3@28508>            Dc.l do_PutReg                                  ;doputreg
0003CED4 <AmiBlitz3_noFPU_r470.ab3@28509>            Dc.l do_Pop                                     ;dopop
0003CED8 <AmiBlitz3_noFPU_r470.ab3@28510>            Dc.l do_INCDIR                                  ;doincdir
0003CEDC <AmiBlitz3_noFPU_r470.ab3@28511>            Dc.l mydo_Endif2                                ;mydoendif2
0003CEE0 <AmiBlitz3_noFPU_r470.ab3@28512>            Dc.l do_Wend                                    ;dowend
0003CEE4 <AmiBlitz3_noFPU_r470.ab3@28513>            Dc.l do_SysJsr                                  ;dosysjsr
0003CEE8 <AmiBlitz3_noFPU_r470.ab3@28514>            Dc.l do_WBStartup                               ;dowbstartup
0003CEEC <AmiBlitz3_noFPU_r470.ab3@28515>            Dc.l syntaxerr
0003CEF0 <AmiBlitz3_noFPU_r470.ab3@28516>            Dc.l do_Ongo                                    ;doongo
0003CEF4 <AmiBlitz3_noFPU_r470.ab3@28517>            Dc.l syntaxerr
0003CEF8 <AmiBlitz3_noFPU_r470.ab3@28518>            Dc.l do_Forever                                 ;doforever
0003CEFC <AmiBlitz3_noFPU_r470.ab3@28519>            Dc.l do_Restore                                 ;dorestore
0003CF00 <AmiBlitz3_noFPU_r470.ab3@28520>            Dc.l do_Exchange                                ;doexchange
0003CF04 <AmiBlitz3_noFPU_r470.ab3@28521>            Dc.l do_USEPATH                                 ;dousepath
0003CF08 <AmiBlitz3_noFPU_r470.ab3@28522>            Dc.l do_CloseEd                                 ;doclosed
0003CF0C <AmiBlitz3_noFPU_r470.ab3@28523>            Dc.l do_NoCli                                   ;donocli
0003CF10 <AmiBlitz3_noFPU_r470.ab3@28524>            Dc.l syntaxerr                                  ;syntaxerr
0003CF14 <AmiBlitz3_noFPU_r470.ab3@28525>            Dc.l syntaxerr                                  ;syntaxerr
0003CF18 <AmiBlitz3_noFPU_r470.ab3@28526>            Dc.l syntaxerr                                  ;syntaxerr
0003CF1C <AmiBlitz3_noFPU_r470.ab3@28527>            Dc.l syntaxerr                                  ;syntaxerr
0003CF20 <AmiBlitz3_noFPU_r470.ab3@28528>            Dc.l syntaxerr                                  ;syntaxerr
0003CF24 <AmiBlitz3_noFPU_r470.ab3@28529>            Dc.l do_runerrson                               ;dorunerrson
0003CF28 <AmiBlitz3_noFPU_r470.ab3@28530>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003CF2C <AmiBlitz3_noFPU_r470.ab3@28531>            Dc.l do_uselastpath
0003CF30 <AmiBlitz3_noFPU_r470.ab3@28532>            Dc.l do_regload
0003CF34 <AmiBlitz3_noFPU_r470.ab3@28533>            Dc.l do_regsave
0003CF38 <AmiBlitz3_noFPU_r470.ab3@28534>            Dc.l do_Object
0003CF3C <AmiBlitz3_noFPU_r470.ab3@28535>            Dc.l do_usepath2
0003CF40 <AmiBlitz3_noFPU_r470.ab3@28536>            Dc.l do_LastRunErrsMode
0003CF44 <AmiBlitz3_noFPU_r470.ab3@28559> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003CF48 <AmiBlitz3_noFPU_r470.ab3@28560>            Dc.l menu_run
0003CF4C <AmiBlitz3_noFPU_r470.ab3@28561>            Dc.l menu_createexecutable
0003CF50 <AmiBlitz3_noFPU_r470.ab3@28562>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003CF54 <AmiBlitz3_noFPU_r470.ab3@28563>            Dc.l menu_createresidentfile
0003CF58 <AmiBlitz3_noFPU_r470.ab3@28564> 
0003CF5C <AmiBlitz3_noFPU_r470.ab3@28565> 
0003CF60 <AmiBlitz3_noFPU_r470.ab3@28566>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003CF64 <AmiBlitz3_noFPU_r470.ab3@28567>            Dc.l menu_reloadlibs
0003CF68 <AmiBlitz3_noFPU_r470.ab3@28568>            Dc.l menu_loaddebugmodule
0003CF6C <AmiBlitz3_noFPU_r470.ab3@28569>            Dc.l menu_dummyfunc
0003CF70 <AmiBlitz3_noFPU_r470.ab3@28570>            Dc.l menu_newcreate
0003CF74 <AmiBlitz3_noFPU_r470.ab3@28571>            Dc.l menu_dummyfunc
0003CF78 <AmiBlitz3_noFPU_r470.ab3@28572>            Dc.l menu_toggledebug
0003CF7C <AmiBlitz3_noFPU_r470.ab3@28573>            Dc.l menu_dummyfunc
0003CF80 <AmiBlitz3_noFPU_r470.ab3@28574>            Dc.l menu_dummyfunc
0003CFAA <AmiBlitz3_noFPU_r470.ab3@28579>   !basic
0003D00C <AmiBlitz3_noFPU_r470.ab3@28580>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003D02A <AmiBlitz3_noFPU_r470.ab3@28581>   !asm
0003D02C <AmiBlitz3_noFPU_r470.ab3@28582> RTS
0003D02D <AmiBlitz3_noFPU_r470.ab3@28588> set_autorun:               Dc.b $00
0003D032 <AmiBlitz3_noFPU_r470.ab3@28589> autorun:                   Dc.b $80,$01,$01,$00,$01
0003D033 <AmiBlitz3_noFPU_r470.ab3@28591> set_interruptcheck:        Dc.b $00
0003D038 <AmiBlitz3_noFPU_r470.ab3@28592> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003D039 <AmiBlitz3_noFPU_r470.ab3@28594> set_assemblercheck:        Ds.b 1
0003D03E <AmiBlitz3_noFPU_r470.ab3@28595> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003D03F <AmiBlitz3_noFPU_r470.ab3@28597> set_overflowcheck:         Ds.b 1
0003D044 <AmiBlitz3_noFPU_r470.ab3@28598> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003D04A <AmiBlitz3_noFPU_r470.ab3@28600> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003D050 <AmiBlitz3_noFPU_r470.ab3@28601> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D056 <AmiBlitz3_noFPU_r470.ab3@28602> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D058 <AmiBlitz3_noFPU_r470.ab3@28603> Even4
0003D064 <AmiBlitz3_noFPU_r470.ab3@28606> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D06C <AmiBlitz3_noFPU_r470.ab3@28607>                            Dc.l $00000000,$00000000
0003D074 <AmiBlitz3_noFPU_r470.ab3@28608> tstsize1:                  Dc.l $00000100,$000003E9
0003D078 <AmiBlitz3_noFPU_r470.ab3@28609> tstsize2:                  Dc.l $00000100
0003D07C <AmiBlitz3_noFPU_r470.ab3@28610> tstend:                    Dc.l $000003EC
0003D084 <AmiBlitz3_noFPU_r470.ab3@28611> tstsize3:                  Ds.l 2
0003D088 <AmiBlitz3_noFPU_r470.ab3@28612> tstdone:                   Dc.l $000003F2
0003D08C <AmiBlitz3_noFPU_r470.ab3@28615> edstruct:                  Dc.l tokens                     ;data for ted
0003D090 <AmiBlitz3_noFPU_r470.ab3@28619>                            Dc.l 0
0003D094 <AmiBlitz3_noFPU_r470.ab3@28621>                            Dc.l read_xtrafile              ;load .xtra routine
0003D098 <AmiBlitz3_noFPU_r470.ab3@28622>                            Dc.l write_xtrafile             ;save .xtra routine
0003D09C <AmiBlitz3_noFPU_r470.ab3@28623>                            Dc.l call_menuentry             ;Menu Routine
0003D0A0 <AmiBlitz3_noFPU_r470.ab3@28624>                            Ds.l 1                          ;cleanup (?)
0003D0A4 <AmiBlitz3_noFPU_r470.ab3@28625>                            Dc.b ":",34,".;"
0003D1A0 <AmiBlitz3_noFPU_r470.ab3@28628> 
0003D280 <AmiBlitz3_noFPU_r470.ab3@28629>                            Ds.l 56
0003D282 <AmiBlitz3_noFPU_r470.ab3@28634> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D286 <AmiBlitz3_noFPU_r470.ab3@28637> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D288 <AmiBlitz3_noFPU_r470.ab3@28638>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D28C <AmiBlitz3_noFPU_r470.ab3@28639>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D292 <AmiBlitz3_noFPU_r470.ab3@28643> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D294 <AmiBlitz3_noFPU_r470.ab3@28647>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D298 <AmiBlitz3_noFPU_r470.ab3@28650> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D29C <AmiBlitz3_noFPU_r470.ab3@28653> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D2A0 <AmiBlitz3_noFPU_r470.ab3@28654>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D2A2 <AmiBlitz3_noFPU_r470.ab3@28660>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D2A4 <AmiBlitz3_noFPU_r470.ab3@28664>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D2A6 <AmiBlitz3_noFPU_r470.ab3@28667> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D2A8 <AmiBlitz3_noFPU_r470.ab3@28668>                            Dc.b $4E,$71                                             ;NOP
0003D2AA <AmiBlitz3_noFPU_r470.ab3@28669>                            Dc.b $4E,$71                                             ;NOP
0003D2AC <AmiBlitz3_noFPU_r470.ab3@28670>                            Dc.b $4E,$71                                             ;NOP
0003D2AE <AmiBlitz3_noFPU_r470.ab3@28671> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D2B0 <AmiBlitz3_noFPU_r470.ab3@28673>                            Dc.b $4E,$71                                             ;NOP
0003D2B2 <AmiBlitz3_noFPU_r470.ab3@28674>                            Dc.b $4E,$71                                             ;NOP
0003D2B4 <AmiBlitz3_noFPU_r470.ab3@28675>                            Dc.b $4E,$71                                             ;NOP
0003D2B8 <AmiBlitz3_noFPU_r470.ab3@28679> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D2BC <AmiBlitz3_noFPU_r470.ab3@28682> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D2BE <AmiBlitz3_noFPU_r470.ab3@28685> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D2C0 <AmiBlitz3_noFPU_r470.ab3@28688> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D2C2 <AmiBlitz3_noFPU_r470.ab3@28689>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D2C6 <AmiBlitz3_noFPU_r470.ab3@28690>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D2C8 <AmiBlitz3_noFPU_r470.ab3@28691>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D2CA <AmiBlitz3_noFPU_r470.ab3@28697> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D2CE <AmiBlitz3_noFPU_r470.ab3@28698>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D2D0 <AmiBlitz3_noFPU_r470.ab3@28703> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D2D4 <AmiBlitz3_noFPU_r470.ab3@28704>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D2D6 <AmiBlitz3_noFPU_r470.ab3@28708> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D2D8 <AmiBlitz3_noFPU_r470.ab3@28709>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D2DC <AmiBlitz3_noFPU_r470.ab3@28715> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D2DE <AmiBlitz3_noFPU_r470.ab3@28716>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D2E2 <AmiBlitz3_noFPU_r470.ab3@28717>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D2E6 <AmiBlitz3_noFPU_r470.ab3@28721> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D2E8 <AmiBlitz3_noFPU_r470.ab3@28722>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D2EC <AmiBlitz3_noFPU_r470.ab3@28723>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D2EE <AmiBlitz3_noFPU_r470.ab3@28726> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D2F2 <AmiBlitz3_noFPU_r470.ab3@28729> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D2F6 <AmiBlitz3_noFPU_r470.ab3@28732> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D2FA <AmiBlitz3_noFPU_r470.ab3@28735> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D2FE <AmiBlitz3_noFPU_r470.ab3@28739>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D300 <AmiBlitz3_noFPU_r470.ab3@28740>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D302 <AmiBlitz3_noFPU_r470.ab3@28741>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D306 <AmiBlitz3_noFPU_r470.ab3@28746>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D308 <AmiBlitz3_noFPU_r470.ab3@28747>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D30A <AmiBlitz3_noFPU_r470.ab3@28748>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D30E <AmiBlitz3_noFPU_r470.ab3@28753>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D310 <AmiBlitz3_noFPU_r470.ab3@28754>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D312 <AmiBlitz3_noFPU_r470.ab3@28755>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D316 <AmiBlitz3_noFPU_r470.ab3@28760>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D318 <AmiBlitz3_noFPU_r470.ab3@28761>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D31A <AmiBlitz3_noFPU_r470.ab3@28762>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D31E <AmiBlitz3_noFPU_r470.ab3@28763>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D320 <AmiBlitz3_noFPU_r470.ab3@28764>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D324 <AmiBlitz3_noFPU_r470.ab3@28769>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D326 <AmiBlitz3_noFPU_r470.ab3@28770>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D32A <AmiBlitz3_noFPU_r470.ab3@28771>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D32C <AmiBlitz3_noFPU_r470.ab3@28772>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D330 <AmiBlitz3_noFPU_r470.ab3@28773>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D332 <AmiBlitz3_noFPU_r470.ab3@28774>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D334 <AmiBlitz3_noFPU_r470.ab3@28777>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D338 <AmiBlitz3_noFPU_r470.ab3@28782>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D33A <AmiBlitz3_noFPU_r470.ab3@28783>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D33E <AmiBlitz3_noFPU_r470.ab3@28784>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D340 <AmiBlitz3_noFPU_r470.ab3@28785>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D344 <AmiBlitz3_noFPU_r470.ab3@28786>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D346 <AmiBlitz3_noFPU_r470.ab3@28787>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D348 <AmiBlitz3_noFPU_r470.ab3@28790>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D34C <AmiBlitz3_noFPU_r470.ab3@28795>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D34E <AmiBlitz3_noFPU_r470.ab3@28796>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D352 <AmiBlitz3_noFPU_r470.ab3@28797>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D354 <AmiBlitz3_noFPU_r470.ab3@28798>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D358 <AmiBlitz3_noFPU_r470.ab3@28799>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D35A <AmiBlitz3_noFPU_r470.ab3@28800>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D35C <AmiBlitz3_noFPU_r470.ab3@28803>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D360 <AmiBlitz3_noFPU_r470.ab3@28808>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D362 <AmiBlitz3_noFPU_r470.ab3@28809>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D366 <AmiBlitz3_noFPU_r470.ab3@28810>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D36C <AmiBlitz3_noFPU_r470.ab3@28811>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D370 <AmiBlitz3_noFPU_r470.ab3@28812>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D372 <AmiBlitz3_noFPU_r470.ab3@28813>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D376 <AmiBlitz3_noFPU_r470.ab3@28820>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D378 <AmiBlitz3_noFPU_r470.ab3@28824> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D37A <AmiBlitz3_noFPU_r470.ab3@28827> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D37E <AmiBlitz3_noFPU_r470.ab3@28830> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D380 <AmiBlitz3_noFPU_r470.ab3@28831> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D384 <AmiBlitz3_noFPU_r470.ab3@28834> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D386 <AmiBlitz3_noFPU_r470.ab3@28837> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D38A <AmiBlitz3_noFPU_r470.ab3@28840> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D38C <AmiBlitz3_noFPU_r470.ab3@28844>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D38E <AmiBlitz3_noFPU_r470.ab3@28847> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D390 <AmiBlitz3_noFPU_r470.ab3@28850> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D394 <AmiBlitz3_noFPU_r470.ab3@28853> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D398 <AmiBlitz3_noFPU_r470.ab3@28856> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D39C <AmiBlitz3_noFPU_r470.ab3@28859> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D39E <AmiBlitz3_noFPU_r470.ab3@28862> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D3A0 <AmiBlitz3_noFPU_r470.ab3@28865> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D3A4 <AmiBlitz3_noFPU_r470.ab3@28868> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D3AA <AmiBlitz3_noFPU_r470.ab3@28869>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D3AC <AmiBlitz3_noFPU_r470.ab3@28870>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D3B0 <AmiBlitz3_noFPU_r470.ab3@28874> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D3B2 <AmiBlitz3_noFPU_r470.ab3@28875>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D3B4 <AmiBlitz3_noFPU_r470.ab3@28879> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D3B8 <AmiBlitz3_noFPU_r470.ab3@28882> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D3BA <AmiBlitz3_noFPU_r470.ab3@28886>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D3BC <AmiBlitz3_noFPU_r470.ab3@28890>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D3BE <AmiBlitz3_noFPU_r470.ab3@28894>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D3C2 <AmiBlitz3_noFPU_r470.ab3@28897> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D3C6 <AmiBlitz3_noFPU_r470.ab3@28900> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D3C8 <AmiBlitz3_noFPU_r470.ab3@28903> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D3CA <AmiBlitz3_noFPU_r470.ab3@28906> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D3CC <AmiBlitz3_noFPU_r470.ab3@28909> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D3D0 <AmiBlitz3_noFPU_r470.ab3@28912> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D3D4 <AmiBlitz3_noFPU_r470.ab3@28915> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D3D6 <AmiBlitz3_noFPU_r470.ab3@28918> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D3D8 <AmiBlitz3_noFPU_r470.ab3@28922>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D3DC <AmiBlitz3_noFPU_r470.ab3@28925>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D3DE <AmiBlitz3_noFPU_r470.ab3@28931>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D3E2 <AmiBlitz3_noFPU_r470.ab3@28934>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D3E4 <AmiBlitz3_noFPU_r470.ab3@28940>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D3E8 <AmiBlitz3_noFPU_r470.ab3@28944> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D3EA <AmiBlitz3_noFPU_r470.ab3@28947> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D3EC <AmiBlitz3_noFPU_r470.ab3@28951>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D3EE <AmiBlitz3_noFPU_r470.ab3@28955>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D3F4 <AmiBlitz3_noFPU_r470.ab3@28958> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D3FA <AmiBlitz3_noFPU_r470.ab3@28961> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D402 <AmiBlitz3_noFPU_r470.ab3@28965> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003D406 <AmiBlitz3_noFPU_r470.ab3@28966>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003D408 <AmiBlitz3_noFPU_r470.ab3@28970> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003D40C <AmiBlitz3_noFPU_r470.ab3@28973> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003D410 <AmiBlitz3_noFPU_r470.ab3@28976> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003D414 <AmiBlitz3_noFPU_r470.ab3@28979> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D418 <AmiBlitz3_noFPU_r470.ab3@28980> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003D41C <AmiBlitz3_noFPU_r470.ab3@28984>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003D420 <AmiBlitz3_noFPU_r470.ab3@28986>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003D422 <AmiBlitz3_noFPU_r470.ab3@28989> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D426 <AmiBlitz3_noFPU_r470.ab3@28992> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D428 <AmiBlitz3_noFPU_r470.ab3@28995> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003D42A <AmiBlitz3_noFPU_r470.ab3@28996>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D42C <AmiBlitz3_noFPU_r470.ab3@28997>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003D430 <AmiBlitz3_noFPU_r470.ab3@28998> 
0003D432 <AmiBlitz3_noFPU_r470.ab3@28999>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003D434 <AmiBlitz3_noFPU_r470.ab3@29000>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003D436 <AmiBlitz3_noFPU_r470.ab3@29001>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003D43C <AmiBlitz3_noFPU_r470.ab3@29003>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D43E <AmiBlitz3_noFPU_r470.ab3@29008> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D440 <AmiBlitz3_noFPU_r470.ab3@29009>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003D442 <AmiBlitz3_noFPU_r470.ab3@29013> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003D446 <AmiBlitz3_noFPU_r470.ab3@29016> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D448 <AmiBlitz3_noFPU_r470.ab3@29019> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D44A <AmiBlitz3_noFPU_r470.ab3@29023>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003D44C <AmiBlitz3_noFPU_r470.ab3@29026> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D450 <AmiBlitz3_noFPU_r470.ab3@29029> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D452 <AmiBlitz3_noFPU_r470.ab3@29030>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D456 <AmiBlitz3_noFPU_r470.ab3@29034> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003D45A <AmiBlitz3_noFPU_r470.ab3@29035> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D45E <AmiBlitz3_noFPU_r470.ab3@29039> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003D462 <AmiBlitz3_noFPU_r470.ab3@29043> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D468 <AmiBlitz3_noFPU_r470.ab3@29047> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003D46E <AmiBlitz3_noFPU_r470.ab3@29050> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003D472 <AmiBlitz3_noFPU_r470.ab3@29054> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003D476 <AmiBlitz3_noFPU_r470.ab3@29058>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D47A <AmiBlitz3_noFPU_r470.ab3@29059>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D480 <AmiBlitz3_noFPU_r470.ab3@29064>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003D484 <AmiBlitz3_noFPU_r470.ab3@29069>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D486 <AmiBlitz3_noFPU_r470.ab3@29074>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D48A <AmiBlitz3_noFPU_r470.ab3@29078>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D48C <AmiBlitz3_noFPU_r470.ab3@29082> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003D48E <AmiBlitz3_noFPU_r470.ab3@29085> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D490 <AmiBlitz3_noFPU_r470.ab3@29086>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D494 <AmiBlitz3_noFPU_r470.ab3@29090>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003D498 <AmiBlitz3_noFPU_r470.ab3@29094> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D49C <AmiBlitz3_noFPU_r470.ab3@29097> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003D49E <AmiBlitz3_noFPU_r470.ab3@29100> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003D4A2 <AmiBlitz3_noFPU_r470.ab3@29103> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003D4A4 <AmiBlitz3_noFPU_r470.ab3@29106> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003D4AD <AmiBlitz3_noFPU_r470.ab3@29110>                            Dc.b "ram:test",0
0003D4AE <AmiBlitz3_noFPU_r470.ab3@29111> Even
0003D4B2 <AmiBlitz3_noFPU_r470.ab3@29115>                            Dc.l  0                          ;was  Ds.w 3 org source
0003D4B4 <AmiBlitz3_noFPU_r470.ab3@29117>                            Dc.w  0
0003D4B8 <AmiBlitz3_noFPU_r470.ab3@29120> _mathffpbase:              Ds.l 1                           ;maths org source
0003D4BA <AmiBlitz3_noFPU_r470.ab3@29121> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003D4BC <AmiBlitz3_noFPU_r470.ab3@29122> typelen:                   Ds.w 1
0003D4C0 <AmiBlitz3_noFPU_r470.ab3@29123> prevtype:                  Ds.l 1
0003D4C4 <AmiBlitz3_noFPU_r470.ab3@29124> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003D4C6 <AmiBlitz3_noFPU_r470.ab3@29125> lastchar:                  Ds.w 1
0003D4CA <AmiBlitz3_noFPU_r470.ab3@29126> thistype:                  Ds.l 1
0003D4CE <AmiBlitz3_noFPU_r470.ab3@29127> errstack:                  Ds.l 1
0003D4D2 <AmiBlitz3_noFPU_r470.ab3@29128> errcont:                   Ds.l 1
0003D4D4 <AmiBlitz3_noFPU_r470.ab3@29129> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003D4D6 <AmiBlitz3_noFPU_r470.ab3@29130> linesleft:                 Ds.w 1
0003D4DA <AmiBlitz3_noFPU_r470.ab3@29131> sourceline:                Ds.l 1                          ;thisitem org source
0003D4DE <AmiBlitz3_noFPU_r470.ab3@29132> varbase:                   Ds.l 1                          ;firstvar org source
0003D4E2 <AmiBlitz3_noFPU_r470.ab3@29133> alllocals:                 Ds.l 1
0003D4E6 <AmiBlitz3_noFPU_r470.ab3@29134> firstlocal:                Ds.l 1
0003D4EA <AmiBlitz3_noFPU_r470.ab3@29135> firstglob:                 Ds.l 1
0003D4EC <AmiBlitz3_noFPU_r470.ab3@29136> globalvarpointer:          Ds.w 1                          ;varoff org source
0003D4EE <AmiBlitz3_noFPU_r470.ab3@29137> locvaroff:                 Ds.w 1
0003D4F2 <AmiBlitz3_noFPU_r470.ab3@29138> firstitem_:                 Ds.l 1
0003D4F4 <AmiBlitz3_noFPU_r470.ab3@29139> numlines_org:              Ds.w 1                          ;numlines org source
0003D4F6 <AmiBlitz3_noFPU_r470.ab3@29140> returncode_org:            Ds.w 1                          ;returncode org source
0003D4FA <AmiBlitz3_noFPU_r470.ab3@29141> firstiff:                  Ds.l 1                          ;firstif org source
0003D4FE <AmiBlitz3_noFPU_r470.ab3@29142> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003D6FE <AmiBlitz3_noFPU_r470.ab3@29143> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003D70E <AmiBlitz3_noFPU_r470.ab3@29144> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003D90E <AmiBlitz3_noFPU_r470.ab3@29145> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003DB0E <AmiBlitz3_noFPU_r470.ab3@29146> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003DD0E <AmiBlitz3_noFPU_r470.ab3@29147> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003DD12 <AmiBlitz3_noFPU_r470.ab3@29149> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003DF12 <AmiBlitz3_noFPU_r470.ab3@29150> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E112 <AmiBlitz3_noFPU_r470.ab3@29152> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E116 <AmiBlitz3_noFPU_r470.ab3@29153> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E316 <AmiBlitz3_noFPU_r470.ab3@29154> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E31A <AmiBlitz3_noFPU_r470.ab3@29155> size_deflibs:              Ds.l 1                          ;deflibs org source
0003E51A <AmiBlitz3_noFPU_r470.ab3@29156> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003E71A <AmiBlitz3_noFPU_r470.ab3@29158> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003E71E <AmiBlitz3_noFPU_r470.ab3@29159> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003E91E <AmiBlitz3_noFPU_r470.ab3@29161> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E922 <AmiBlitz3_noFPU_r470.ab3@29167>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003E926 <AmiBlitz3_noFPU_r470.ab3@29168>   Dc.b $00,$00,$00,$00
0003E92A <AmiBlitz3_noFPU_r470.ab3@29169>   Dc.b $00,$19,$00,$11
0003E92E <AmiBlitz3_noFPU_r470.ab3@29170>   Dc.b $00,$2E,$00,$18
0003E932 <AmiBlitz3_noFPU_r470.ab3@29171>   Dc.b $00,$04,$00,$03
0003E936 <AmiBlitz3_noFPU_r470.ab3@29172>   Dc.b $00,$01,$00,$22
0003E93A <AmiBlitz3_noFPU_r470.ab3@29173>   Dc.b $73,$68,$00,$00
0003E93E <AmiBlitz3_noFPU_r470.ab3@29174>   Dc.b $00,$00,$00,$00
0003E942 <AmiBlitz3_noFPU_r470.ab3@29175>   Dc.b $00,$00,$00,$00
0003E946 <AmiBlitz3_noFPU_r470.ab3@29176>   Dc.b $00,$00,$00,$00
0003E94A <AmiBlitz3_noFPU_r470.ab3@29177>   Dc.b $00,$00,$00,$00
0003E94E <AmiBlitz3_noFPU_r470.ab3@29178>   Dc.b $00,$00,$00,$00
0003E952 <AmiBlitz3_noFPU_r470.ab3@29179>   Dc.b $03,$22,$00,$21
0003E956 <AmiBlitz3_noFPU_r470.ab3@29180>   Dc.b $3C,$28,$00,$22
0003E95A <AmiBlitz3_noFPU_r470.ab3@29181>   Dc.b $6E,$C0,$00,$00
0003E95E <AmiBlitz3_noFPU_r470.ab3@29182>   Dc.b $00,$12,$00,$00
0003E962 <AmiBlitz3_noFPU_r470.ab3@29183>   Dc.b $00,$0E,$00,$00
0003E966 <AmiBlitz3_noFPU_r470.ab3@29184>   Dc.b $00,$00,$00,$00
0003E96A <AmiBlitz3_noFPU_r470.ab3@29185>   Dc.b $00,$00,$00,$00
0003E96E <AmiBlitz3_noFPU_r470.ab3@29186>   Dc.b $00,$00,$00,$00
0003E972 <AmiBlitz3_noFPU_r470.ab3@29187>   Dc.b $00,$00,$00,$2E
0003E976 <AmiBlitz3_noFPU_r470.ab3@29188>   Dc.b $00,$17,$00,$02
0003E97A <AmiBlitz3_noFPU_r470.ab3@29189>   Dc.b $00,$01,$8E,$80
0003E97E <AmiBlitz3_noFPU_r470.ab3@29190>   Dc.b $03,$00,$00,$00
0003E982 <AmiBlitz3_noFPU_r470.ab3@29191>   Dc.b $00,$00,$FF,$FF
0003E986 <AmiBlitz3_noFPU_r470.ab3@29192>   Dc.b $FF,$FF,$FF,$FC
0003E98A <AmiBlitz3_noFPU_r470.ab3@29193>   Dc.b $80,$00,$00,$00
0003E98E <AmiBlitz3_noFPU_r470.ab3@29194>   Dc.b $00,$00,$80,$00
0003E992 <AmiBlitz3_noFPU_r470.ab3@29195>   Dc.b $00,$3F,$BB,$40
0003E996 <AmiBlitz3_noFPU_r470.ab3@29196>   Dc.b $80,$1F,$C0,$00
0003E99A <AmiBlitz3_noFPU_r470.ab3@29197>   Dc.b $00,$00,$80,$3F
0003E99E <AmiBlitz3_noFPU_r470.ab3@29198>   Dc.b $C0,$0F,$BB,$40
0003E9A2 <AmiBlitz3_noFPU_r470.ab3@29199>   Dc.b $80,$1F,$C0,$00
0003E9A6 <AmiBlitz3_noFPU_r470.ab3@29200>   Dc.b $00,$00,$8E,$00
0003E9AA <AmiBlitz3_noFPU_r470.ab3@29201>   Dc.b $F8,$00,$00,$00
0003E9AE <AmiBlitz3_noFPU_r470.ab3@29202>   Dc.b $8F,$01,$FF,$00
0003E9B2 <AmiBlitz3_noFPU_r470.ab3@29203>   Dc.b $3B,$40,$81,$E3
0003E9B6 <AmiBlitz3_noFPU_r470.ab3@29204>   Dc.b $F7,$C0,$00,$00
0003E9BA <AmiBlitz3_noFPU_r470.ab3@29205>   Dc.b $80,$7F,$F8,$70
0003E9BE <AmiBlitz3_noFPU_r470.ab3@29206>   Dc.b $3B,$40,$80,$0F
0003E9C2 <AmiBlitz3_noFPU_r470.ab3@29207>   Dc.b $7C,$E0,$00,$00
0003E9C6 <AmiBlitz3_noFPU_r470.ab3@29208>   Dc.b $80,$00,$FD,$80
0003E9CA <AmiBlitz3_noFPU_r470.ab3@29209>   Dc.b $00,$00,$80,$01
0003E9CE <AmiBlitz3_noFPU_r470.ab3@29210>   Dc.b $F6,$00,$FB,$40
0003E9D2 <AmiBlitz3_noFPU_r470.ab3@29211>   Dc.b $80,$03,$EF,$00
0003E9D6 <AmiBlitz3_noFPU_r470.ab3@29212>   Dc.b $00,$00,$80,$07
0003E9DA <AmiBlitz3_noFPU_r470.ab3@29213>   Dc.b $87,$80,$3B,$40
0003E9DE <AmiBlitz3_noFPU_r470.ab3@29214>   Dc.b $80,$0F,$01,$C0
0003E9E2 <AmiBlitz3_noFPU_r470.ab3@29215>   Dc.b $00,$00,$80,$03
0003E9E6 <AmiBlitz3_noFPU_r470.ab3@29216>   Dc.b $F0,$70,$1D,$40
0003E9EA <AmiBlitz3_noFPU_r470.ab3@29217>   Dc.b $80,$00,$18,$1C
0003E9EE <AmiBlitz3_noFPU_r470.ab3@29218>   Dc.b $00,$00,$80,$00
0003E9F2 <AmiBlitz3_noFPU_r470.ab3@29219>   Dc.b $10,$06,$03,$40
0003E9F6 <AmiBlitz3_noFPU_r470.ab3@29220>   Dc.b $80,$00,$20,$1F
0003E9FA <AmiBlitz3_noFPU_r470.ab3@29221>   Dc.b $00,$00,$80,$00
0003E9FE <AmiBlitz3_noFPU_r470.ab3@29222>   Dc.b $00,$00,$01,$40
0003EA02 <AmiBlitz3_noFPU_r470.ab3@29223>   Dc.b $80,$00,$00,$00
0003EA06 <AmiBlitz3_noFPU_r470.ab3@29224>   Dc.b $00,$00,$80,$00
0003EA0A <AmiBlitz3_noFPU_r470.ab3@29225>   Dc.b $00,$00,$00,$00
0003EA0E <AmiBlitz3_noFPU_r470.ab3@29226>   Dc.b $00,$00,$00,$00
0003EA12 <AmiBlitz3_noFPU_r470.ab3@29227>   Dc.b $00,$00,$00,$00
0003EA16 <AmiBlitz3_noFPU_r470.ab3@29228>   Dc.b $00,$00,$00,$04
0003EA1A <AmiBlitz3_noFPU_r470.ab3@29229>   Dc.b $00,$3F,$FC,$01
0003EA1E <AmiBlitz3_noFPU_r470.ab3@29230>   Dc.b $BB,$44,$00,$60
0003EA22 <AmiBlitz3_noFPU_r470.ab3@29231>   Dc.b $FE,$00,$00,$04
0003EA26 <AmiBlitz3_noFPU_r470.ab3@29232>   Dc.b $00,$CF,$FF,$01
0003EA2A <AmiBlitz3_noFPU_r470.ab3@29233>   Dc.b $BB,$44,$1F,$EF
0003EA2E <AmiBlitz3_noFPU_r470.ab3@29234>   Dc.b $FF,$00,$00,$04
0003EA32 <AmiBlitz3_noFPU_r470.ab3@29235>   Dc.b $33,$FF,$FF,$E0
0003EA36 <AmiBlitz3_noFPU_r470.ab3@29236>   Dc.b $00,$04,$37,$FE
0003EA3A <AmiBlitz3_noFPU_r470.ab3@29237>   Dc.b $7F,$FC,$1B,$44
0003EA3E <AmiBlitz3_noFPU_r470.ab3@29238>   Dc.b $0F,$9C,$FF,$FF
0003EA42 <AmiBlitz3_noFPU_r470.ab3@29239>   Dc.b $00,$04,$03,$E3
0003EA46 <AmiBlitz3_noFPU_r470.ab3@29240>   Dc.b $FF,$FF,$DB,$44
0003EA4A <AmiBlitz3_noFPU_r470.ab3@29241>   Dc.b $00,$7F,$BF,$FF
0003EA4E <AmiBlitz3_noFPU_r470.ab3@29242>   Dc.b $80,$04,$00,$0F
0003EA52 <AmiBlitz3_noFPU_r470.ab3@29243>   Dc.b $3F,$FE,$00,$04
0003EA56 <AmiBlitz3_noFPU_r470.ab3@29244>   Dc.b $00,$06,$7F,$F8
0003EA5A <AmiBlitz3_noFPU_r470.ab3@29245>   Dc.b $1B,$44,$00,$0C
0003EA5E <AmiBlitz3_noFPU_r470.ab3@29246>   Dc.b $F7,$FC,$00,$04
0003EA62 <AmiBlitz3_noFPU_r470.ab3@29247>   Dc.b $00,$19,$F9,$FE
0003EA66 <AmiBlitz3_noFPU_r470.ab3@29248>   Dc.b $1B,$44,$00,$33
0003EA6A <AmiBlitz3_noFPU_r470.ab3@29249>   Dc.b $FE,$7F,$00,$04
0003EA6E <AmiBlitz3_noFPU_r470.ab3@29250>   Dc.b $00,$0F,$FF,$BF
0003EA72 <AmiBlitz3_noFPU_r470.ab3@29251>   Dc.b $CD,$44,$00,$03
0003EA76 <AmiBlitz3_noFPU_r470.ab3@29252>   Dc.b $EF,$EF,$F0,$04
0003EA7A <AmiBlitz3_noFPU_r470.ab3@29253>   Dc.b $00,$00,$7F,$DF
0003EA7E <AmiBlitz3_noFPU_r470.ab3@29254>   Dc.b $FB,$44,$00,$00
0003EA82 <AmiBlitz3_noFPU_r470.ab3@29255>   Dc.b $FF,$A7,$FC,$04
0003EA86 <AmiBlitz3_noFPU_r470.ab3@29256>   Dc.b $00,$00,$7E,$3F
0003EA8A <AmiBlitz3_noFPU_r470.ab3@29257>   Dc.b $FD,$44,$00,$00
0003EA8E <AmiBlitz3_noFPU_r470.ab3@29258>   Dc.b $00,$00,$00,$04
0003EA92 <AmiBlitz3_noFPU_r470.ab3@29259>   Dc.b $7F,$FF,$FF,$FF
0003EA96 <AmiBlitz3_noFPU_r470.ab3@29260>   Dc.b $FF,$FC,$00,$00
0003EA9A <AmiBlitz3_noFPU_r470.ab3@29261>   Dc.b $00,$01,$00,$00
0003EA9D <AmiBlitz3_noFPU_r470.ab3@29262>   Dc.b $00,$00,$04
0003EAA3 <AmiBlitz3_noFPU_r470.ab3@29265> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003EAFB <AmiBlitz3_noFPU_r470.ab3@29266> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003EAFC <AmiBlitz3_noFPU_r470.ab3@29267> Even
0003EB00 <AmiBlitz3_noFPU_r470.ab3@29269> sysdebug:            Dc.l $3F0
0003EB04 <AmiBlitz3_noFPU_r470.ab3@29273> exelock              Ds.l 1
0003EB08 <AmiBlitz3_noFPU_r470.ab3@29277> includesourceline    Dc.l 0
0003EB0C <AmiBlitz3_noFPU_r470.ab3@29278> linenum              Ds.l 1
0003EB10 <AmiBlitz3_noFPU_r470.ab3@29279> globallinecount      Ds.l 1
0003EB2E <AmiBlitz3_noFPU_r470.ab3@29280> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003EB32 <AmiBlitz3_noFPU_r470.ab3@29281> calc_option          Dc.l 1
0003EB36 <AmiBlitz3_noFPU_r470.ab3@29282> versioninformation   Dc.l $00
0003EB3A <AmiBlitz3_noFPU_r470.ab3@29283> number_of_builds     Dc.l $00
0003EB3C <AmiBlitz3_noFPU_r470.ab3@29286> BSS
0003EB3E <AmiBlitz3_noFPU_r470.ab3@29287> debugnest            Ds.w 1
0003EB42 <AmiBlitz3_noFPU_r470.ab3@29288> instringf            Ds.l 1
0003EB46 <AmiBlitz3_noFPU_r470.ab3@29289> funcscanon           Ds.l 1
0003EB5A <AmiBlitz3_noFPU_r470.ab3@29290> storedebugmode       Ds.b 20
0003EB5E <AmiBlitz3_noFPU_r470.ab3@29291> firsttimepref        Ds.l 1
0003EB5F <AmiBlitz3_noFPU_r470.ab3@29292> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003EB60 <AmiBlitz3_noFPU_r470.ab3@29293> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003EB62 <AmiBlitz3_noFPU_r470.ab3@29294> nostringopt          Ds.w 1
0003EBE2 <AmiBlitz3_noFPU_r470.ab3@29295> path2:               Ds.l 32
0003EBE6 <AmiBlitz3_noFPU_r470.ab3@29296> typebase             Dc.l 0
0003EBE8 <AmiBlitz3_noFPU_r470.ab3@29297> doublepeek           Dc.w 0
0003EBEC <AmiBlitz3_noFPU_r470.ab3@29298> lastoffset           Dc.l 0
0003EBEE <AmiBlitz3_noFPU_r470.ab3@29299> firsttime            Dc.w 0
0003EBF2 <AmiBlitz3_noFPU_r470.ab3@29300> lastdestpointer      Dc.l 0
0003EBF6 <AmiBlitz3_noFPU_r470.ab3@29301> prevwritedat         Dc.l 0
0003EBFA <AmiBlitz3_noFPU_r470.ab3@29302> lastsourceline       Dc.l 0
0003EBFE <AmiBlitz3_noFPU_r470.ab3@29303> lastwritedat         Dc.l 0
0003EC00 <AmiBlitz3_noFPU_r470.ab3@29304> makeexec             Dc.w 0
0003EC02 <AmiBlitz3_noFPU_r470.ab3@29305> makeexec_remember    Dc.w 0
0003EC06 <AmiBlitz3_noFPU_r470.ab3@29306> sharebase            Ds.l 1
0003EC0A <AmiBlitz3_noFPU_r470.ab3@29307> tempa7               Ds.l 1
0003EC0C <AmiBlitz3_noFPU_r470.ab3@29308> incnif               Ds.w 1
0003EC10 <AmiBlitz3_noFPU_r470.ab3@29309> tempstore            Ds.l 1
0003EC14 <AmiBlitz3_noFPU_r470.ab3@29310> result               Ds.l 1
0003EC16 <AmiBlitz3_noFPU_r470.ab3@29311> automode             Ds.w 1
0003EC18 <AmiBlitz3_noFPU_r470.ab3@29312> stackcorrect         Ds.w 1
0003EC1A <AmiBlitz3_noFPU_r470.ab3@29313> formode              Ds.w 1
0003EC1E <AmiBlitz3_noFPU_r470.ab3@29314> limitregs            Ds.l 1
0003EC20 <AmiBlitz3_noFPU_r470.ab3@29315> onestep              Ds.w 1
0003EC24 <AmiBlitz3_noFPU_r470.ab3@29316> reqmode              Ds.l 1
0003ECC4 <AmiBlitz3_noFPU_r470.ab3@29317> inctab               Ds.l 40
0003ECC6 <AmiBlitz3_noFPU_r470.ab3@29318> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003ECCA <AmiBlitz3_noFPU_r470.ab3@29319> includeline          Ds.l 1
0003ECCE <AmiBlitz3_noFPU_r470.ab3@29320> morememadd           Ds.l 1
0003ECD0 <AmiBlitz3_noFPU_r470.ab3@29321> objectcount          Ds.w 1
0003ECD4 <AmiBlitz3_noFPU_r470.ab3@29322> savefuncspace        Ds.l 1
0003ECD8 <AmiBlitz3_noFPU_r470.ab3@29323> lasttrap1            Ds.l 1
0003ECDC <AmiBlitz3_noFPU_r470.ab3@29324> currentfunccall      Ds.l 1
0003ECDD <AmiBlitz3_noFPU_r470.ab3@29325> skipfunc             Ds.b 1
0003ECDE <AmiBlitz3_noFPU_r470.ab3@29326> resdisable           Ds.b 1
0003ECDF <AmiBlitz3_noFPU_r470.ab3@29327> skiptoggle           Ds.b 1
0003ECE0 <AmiBlitz3_noFPU_r470.ab3@29328> developobject        Ds.b 1
0003ECE2 <AmiBlitz3_noFPU_r470.ab3@29329> iniffcommand         Ds.w 1
0003ECE4 <AmiBlitz3_noFPU_r470.ab3@29330> startoffsetmore      Ds.w 1
0003ECE6 <AmiBlitz3_noFPU_r470.ab3@29331> olddebugmode         Ds.w 1
0003ECEA <AmiBlitz3_noFPU_r470.ab3@29332> fpucodeglobal        Ds.l 1
0003ECEE <AmiBlitz3_noFPU_r470.ab3@29333> fpucodelocal         Ds.l 1
0003ECF2 <AmiBlitz3_noFPU_r470.ab3@29334> maxregs              Ds.l 1
0003ECF6 <AmiBlitz3_noFPU_r470.ab3@29335> fpucode              Ds.l 1
0003ECF8 <AmiBlitz3_noFPU_r470.ab3@29336> firstmline           Ds.w 1
0003ED38 <AmiBlitz3_noFPU_r470.ab3@29337> regtable             Ds.l 16
0003ED3A <AmiBlitz3_noFPU_r470.ab3@29338> exdebug              Ds.w 1
0003ED3C <AmiBlitz3_noFPU_r470.ab3@29339> a2offset2            Ds.w 1
0003ED40 <AmiBlitz3_noFPU_r470.ab3@29340> parnumtemp           Ds.l 1
0003ED41 <AmiBlitz3_noFPU_r470.ab3@29341> doimmediate          Ds.b 1
0003ED42 <AmiBlitz3_noFPU_r470.ab3@29342> notypecheck          Ds.b 1
0003ED44 <AmiBlitz3_noFPU_r470.ab3@29343> vartype              Ds.w 1
0003ED45 <AmiBlitz3_noFPU_r470.ab3@29344> peekaddrsize         Ds.b 1
0003ED46 <AmiBlitz3_noFPU_r470.ab3@29345> declare2             Ds.b 1
0003ED48 <AmiBlitz3_noFPU_r470.ab3@29346> parameternum         Ds.w 1
0003ED4C <AmiBlitz3_noFPU_r470.ab3@29347> lasttoken            Ds.l 1
0003ED4E <AmiBlitz3_noFPU_r470.ab3@29348> newvariable          Ds.w 1
0003ED4F <AmiBlitz3_noFPU_r470.ab3@29349> declare              Ds.b 1
0003ED50 <AmiBlitz3_noFPU_r470.ab3@29350> typecheck            Ds.b 1
0003ED51 <AmiBlitz3_noFPU_r470.ab3@29351> nowdeclare           Ds.b 1
0003ED52 <AmiBlitz3_noFPU_r470.ab3@29352> dimkeep              Ds.b 1
0003ED53 <AmiBlitz3_noFPU_r470.ab3@29353> a4a5store            Ds.b 1
0003ED54 <AmiBlitz3_noFPU_r470.ab3@29354> ___freetouse         Ds.b 1
0003ED58 <AmiBlitz3_noFPU_r470.ab3@29355> firstiffstore        Ds.l 1
0003ED5C <AmiBlitz3_noFPU_r470.ab3@29356> destpointer2         Ds.l 1
0003ED60 <AmiBlitz3_noFPU_r470.ab3@29357> stackaddr            Ds.l 1
0003EE64 <AmiBlitz3_noFPU_r470.ab3@29358> allowtab             Ds.b 260
0003EF64 <AmiBlitz3_noFPU_r470.ab3@29359> templine             Ds.b 256
0003EF66 <AmiBlitz3_noFPU_r470.ab3@29360> thenmode             Ds.w 1
0003EF68 <AmiBlitz3_noFPU_r470.ab3@29361> temp                 Ds.w 1
0003EF6A <AmiBlitz3_noFPU_r470.ab3@29362> tempregnum           Ds.w 1
0003EF6E <AmiBlitz3_noFPU_r470.ab3@29364> numlines2            Ds.l 1
0003EF72 <AmiBlitz3_noFPU_r470.ab3@29365> numlines             Ds.l 1
0003EF74 <AmiBlitz3_noFPU_r470.ab3@29366> exmac                Ds.w 1
0003EF76 <AmiBlitz3_noFPU_r470.ab3@29367> returncode           Ds.w 1
0003EF7A <AmiBlitz3_noFPU_r470.ab3@29368> fp0iff               Ds.l 1
0003EF7E <AmiBlitz3_noFPU_r470.ab3@29369> fp0addr              Ds.l 1
0003EF80 <AmiBlitz3_noFPU_r470.ab3@29370> fp0mode              Ds.w 1
0003EF82 <AmiBlitz3_noFPU_r470.ab3@29371> fp0var               Ds.w 1
0003EF84 <AmiBlitz3_noFPU_r470.ab3@29372> fastfunc             Ds.w 1
0003EF86 <AmiBlitz3_noFPU_r470.ab3@29373> retmode              Ds.w 1
0003EF88 <AmiBlitz3_noFPU_r470.ab3@29374> parnum               Ds.w 1
0003EF8A <AmiBlitz3_noFPU_r470.ab3@29375> regmask              Ds.w 1
0003EF8C <AmiBlitz3_noFPU_r470.ab3@29376> regnumfunc           Ds.w 1
0003EF8E <AmiBlitz3_noFPU_r470.ab3@29377> libmode              Ds.w 1
0003EF92 <AmiBlitz3_noFPU_r470.ab3@29378> oldline              Ds.l 1
0003EF96 <AmiBlitz3_noFPU_r470.ab3@29379> sourceline3          Ds.l 1
0003F05E <AmiBlitz3_noFPU_r470.ab3@29380> debugstore           Ds.b 200
0003F062 <AmiBlitz3_noFPU_r470.ab3@29381> deststore            Ds.l 1
0003F066 <AmiBlitz3_noFPU_r470.ab3@29383> loada                Ds.l 1
0003F06A <AmiBlitz3_noFPU_r470.ab3@29385> currtype             Ds.l 1
0003F06E <AmiBlitz3_noFPU_r470.ab3@29386> arrayoffset          Ds.l 1
0003F072 <AmiBlitz3_noFPU_r470.ab3@29387> lastlabel            Ds.l 1
0003F076 <AmiBlitz3_noFPU_r470.ab3@29388> curtemplabel         Ds.l 1
0003F07A <AmiBlitz3_noFPU_r470.ab3@29389> sourceline2          Ds.l 1
0003F17A <AmiBlitz3_noFPU_r470.ab3@29390> chartab              Ds.b 256
0003F1F2 <AmiBlitz3_noFPU_r470.ab3@29391> tempspace            Ds.b 120
000BF202 <AmiBlitz3_noFPU_r470.ab3@29392> instrtab             Ds.l 65538*2
000C7202 <AmiBlitz3_noFPU_r470.ab3@29394> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E7206 <AmiBlitz3_noFPU_r470.ab3@29395> replacedat           Ds.w 65538
000EF206 <AmiBlitz3_noFPU_r470.ab3@29396> variablehash         Ds.l 8192
000EF20A <AmiBlitz3_noFPU_r470.ab3@29397> newinitaddr          Ds.l 1
000EF20E <AmiBlitz3_noFPU_r470.ab3@29398> realbssend           Ds.l 1
000EF210 <AmiBlitz3_noFPU_r470.ab3@29399> saved0               Ds.w 1
000EF290 <AmiBlitz3_noFPU_r470.ab3@29400> lastpath             Ds.b 128
000EF310 <AmiBlitz3_noFPU_r470.ab3@29401> lastpath2            Ds.b 128
000EF3D8 <AmiBlitz3_noFPU_r470.ab3@29402> fpustackbase         Ds.w 100
000EF3DC <AmiBlitz3_noFPU_r470.ab3@29403> 
000EF3DE <AmiBlitz3_noFPU_r470.ab3@29404> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF3E2 <AmiBlitz3_noFPU_r470.ab3@29405> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF3E6 <AmiBlitz3_noFPU_r470.ab3@29406> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF3EA <AmiBlitz3_noFPU_r470.ab3@29407> rightsidetype        Dc.l 0  ; same as above but right side
000EF3EE <AmiBlitz3_noFPU_r470.ab3@29410> trap15temp           Ds.l 1
000EF3F2 <AmiBlitz3_noFPU_r470.ab3@29411> trap15temp2          Ds.l 1
000EF3F6 <AmiBlitz3_noFPU_r470.ab3@29412> templibend           Ds.l 1
000EF3FA <AmiBlitz3_noFPU_r470.ab3@29413> tempdata1start       Ds.l 1
000EF3FE <AmiBlitz3_noFPU_r470.ab3@29414> stacktrack           Ds.l 1
000EF402 <AmiBlitz3_noFPU_r470.ab3@29415> pad                  Ds.l 1
000EF502 <AmiBlitz3_noFPU_r470.ab3@29416> includetemp          Ds.b 256
000EFF02 <AmiBlitz3_noFPU_r470.ab3@29417> includetemp2         Ds.b 256*10
000EFF04 <AmiBlitz3_noFPU_r470.ab3@29418> funccall             Ds.w 1
000EFF08 <AmiBlitz3_noFPU_r470.ab3@29421> ptr_resfile          Ds.l 1
000EFF0A <AmiBlitz3_noFPU_r470.ab3@29422> CalculatorButtonBinFlag:    Ds.w 1
000EFF0C <AmiBlitz3_noFPU_r470.ab3@29423> CalculatorButtonDecFlag:    Ds.w 1
000EFF10 <AmiBlitz3_noFPU_r470.ab3@29424> ped_startup_addr:    Ds.l 1
000EFF11 <AmiBlitz3_noFPU_r470.ab3@29425> start_without_libs:  Ds.b 1
000EFF12 <AmiBlitz3_noFPU_r470.ab3@29426> skip_bytes:          Ds.b 1
000EFF16 <AmiBlitz3_noFPU_r470.ab3@29427> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000EFF1A <AmiBlitz3_noFPU_r470.ab3@29428> beforeparameterfetch Ds.l 1
000EFF1E <AmiBlitz3_noFPU_r470.ab3@29429> typetocast           Ds.l 1
000EFF22 <AmiBlitz3_noFPU_r470.ab3@29430> errorcounter         Ds.l 1
000EFF23 <AmiBlitz3_noFPU_r470.ab3@29431> iserror              Ds.b 1
000EFF24 <AmiBlitz3_noFPU_r470.ab3@29432> Even
000EFF28 <AmiBlitz3_noFPU_r470.ab3@29434> CLIMode:             Dc.l 0
000EFF2C <AmiBlitz3_noFPU_r470.ab3@29435> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000EFF30 <AmiBlitz3_noFPU_r470.ab3@29436> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
