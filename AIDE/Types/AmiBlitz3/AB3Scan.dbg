00000008 <AB3Scan.ab3@0> 
00000014 <AB3Scan.ab3@2> optimize 7
00000014 <ab3support.include.ab3@1> XINCLUDE "ab3support.include.ab3"
00000014 <error.include.ab3@1> XINCLUDE "ab3support.include.ab3"
0000004C <error.include.ab3@62> XINCLUDE "ab3support.include.ab3"
00000074 <error.include.ab3@63> XINCLUDE "ab3support.include.ab3"
0000009C <error.include.ab3@64> XINCLUDE "ab3support.include.ab3"
000000C4 <error.include.ab3@65> XINCLUDE "ab3support.include.ab3"
000000CA <error.include.ab3@66> XINCLUDE "ab3support.include.ab3"
000000FE <error.include.ab3@67> XINCLUDE "ab3support.include.ab3"
00000132 <error.include.ab3@68> XINCLUDE "ab3support.include.ab3"
00000166 <error.include.ab3@69> XINCLUDE "ab3support.include.ab3"
00000182 <error.include.ab3@73> XINCLUDE "ab3support.include.ab3"
0000019C <error.include.ab3@99> XINCLUDE "ab3support.include.ab3"
000001A8 <error.include.ab3@101> XINCLUDE "ab3support.include.ab3"
000001AC <error.include.ab3@102> XINCLUDE "ab3support.include.ab3"
000001BA <error.include.ab3@104> XINCLUDE "ab3support.include.ab3"
000001FC <error.include.ab3@124> XINCLUDE "ab3support.include.ab3"
00000280 <error.include.ab3@126> XINCLUDE "ab3support.include.ab3"
000002EC <error.include.ab3@127> XINCLUDE "ab3support.include.ab3"
00000306 <error.include.ab3@129> XINCLUDE "ab3support.include.ab3"
0000033E <error.include.ab3@130> XINCLUDE "ab3support.include.ab3"
0000039E <error.include.ab3@131> XINCLUDE "ab3support.include.ab3"
000003AC <error.include.ab3@133> XINCLUDE "ab3support.include.ab3"
000003BA <error.include.ab3@134> XINCLUDE "ab3support.include.ab3"
000003C8 <error.include.ab3@135> XINCLUDE "ab3support.include.ab3"
000003D6 <error.include.ab3@136> XINCLUDE "ab3support.include.ab3"
000003FE <error.include.ab3@137> XINCLUDE "ab3support.include.ab3"
0000040C <error.include.ab3@138> XINCLUDE "ab3support.include.ab3"
00000414 <error.include.ab3@139> XINCLUDE "ab3support.include.ab3"
00000446 <error.include.ab3@141> XINCLUDE "ab3support.include.ab3"
00000460 <error.include.ab3@146> XINCLUDE "ab3support.include.ab3"
00000498 <error.include.ab3@147> XINCLUDE "ab3support.include.ab3"
0000049E <error.include.ab3@148> XINCLUDE "ab3support.include.ab3"
000004E2 <error.include.ab3@149> XINCLUDE "ab3support.include.ab3"
0000052A <error.include.ab3@150> XINCLUDE "ab3support.include.ab3"
00000534 <error.include.ab3@154> XINCLUDE "ab3support.include.ab3"
0000054E <error.include.ab3@156> XINCLUDE "ab3support.include.ab3"
0000054E <ab3support.include.ab3@9> XINCLUDE "ab3support.include.ab3"
00000556 <ab3support.include.ab3@45> XINCLUDE "ab3support.include.ab3"
00000570 <ab3support.include.ab3@58> XINCLUDE "ab3support.include.ab3"
0000057A <ab3support.include.ab3@61> XINCLUDE "ab3support.include.ab3"
0000059C <ab3support.include.ab3@62> XINCLUDE "ab3support.include.ab3"
000005B2 <ab3support.include.ab3@63> XINCLUDE "ab3support.include.ab3"
000005CC <ab3support.include.ab3@65> XINCLUDE "ab3support.include.ab3"
000005FE <ab3support.include.ab3@66> XINCLUDE "ab3support.include.ab3"
00000608 <ab3support.include.ab3@67> XINCLUDE "ab3support.include.ab3"
0000060E <ab3support.include.ab3@68> XINCLUDE "ab3support.include.ab3"
00000614 <ab3support.include.ab3@69> XINCLUDE "ab3support.include.ab3"
00000626 <ab3support.include.ab3@70> XINCLUDE "ab3support.include.ab3"
0000069A <ab3support.include.ab3@71> XINCLUDE "ab3support.include.ab3"
000006A0 <ab3support.include.ab3@72> XINCLUDE "ab3support.include.ab3"
000006DA <ab3support.include.ab3@73> XINCLUDE "ab3support.include.ab3"
000006E4 <ab3support.include.ab3@76> XINCLUDE "ab3support.include.ab3"
000006EA <ab3support.include.ab3@78> XINCLUDE "ab3support.include.ab3"
00000700 <ab3support.include.ab3@81> XINCLUDE "ab3support.include.ab3"
0000070A <ab3support.include.ab3@83> XINCLUDE "ab3support.include.ab3"
00000720 <ab3support.include.ab3@85> XINCLUDE "ab3support.include.ab3"
00000722 <ab3support.include.ab3@88> XINCLUDE "ab3support.include.ab3"
00000750 <ab3support.include.ab3@89> XINCLUDE "ab3support.include.ab3"
0000077E <ab3support.include.ab3@106> XINCLUDE "ab3support.include.ab3"
000007A6 <ab3support.include.ab3@107> XINCLUDE "ab3support.include.ab3"
000007E0 <ab3support.include.ab3@113> XINCLUDE "ab3support.include.ab3"
00000812 <ab3support.include.ab3@116> XINCLUDE "ab3support.include.ab3"
00000848 <ab3support.include.ab3@119> XINCLUDE "ab3support.include.ab3"
00000876 <ab3support.include.ab3@121> XINCLUDE "ab3support.include.ab3"
000008A8 <ab3support.include.ab3@123> XINCLUDE "ab3support.include.ab3"
000008D2 <ab3support.include.ab3@124> XINCLUDE "ab3support.include.ab3"
00000900 <ab3support.include.ab3@125> XINCLUDE "ab3support.include.ab3"
0000092E <ab3support.include.ab3@126> XINCLUDE "ab3support.include.ab3"
00000958 <ab3support.include.ab3@130> XINCLUDE "ab3support.include.ab3"
00000958 <AB3Scan.ab3@3> XINCLUDE "ab3support.include.ab3"
000009B4 <AB3Scan.ab3@5> If AB3Support_OpenLib{0}=False Then error{"Please install ab3support.library!"} : End
000009B4 <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
000009B4 <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
000009B4 <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
000009B4 <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000009B4 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
000009CE <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
000009D8 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000A20 <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000A24 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000A46 <strptr.include.ab3@159> XINCLUDE "dos.include.ab3"
00000A50 <strptr.include.ab3@160> XINCLUDE "dos.include.ab3"
00000A98 <strptr.include.ab3@161> XINCLUDE "dos.include.ab3"
00000AA2 <strptr.include.ab3@162> XINCLUDE "dos.include.ab3"
00000AB4 <strptr.include.ab3@163> XINCLUDE "dos.include.ab3"
00000ABC <strptr.include.ab3@164> XINCLUDE "dos.include.ab3"
00000AEA <strptr.include.ab3@165> XINCLUDE "dos.include.ab3"
00000AFC <strptr.include.ab3@167> XINCLUDE "dos.include.ab3"
00000B20 <strptr.include.ab3@171> XINCLUDE "dos.include.ab3"
00000B2A <strptr.include.ab3@173> XINCLUDE "dos.include.ab3"
00000B38 <strptr.include.ab3@174> XINCLUDE "dos.include.ab3"
00000B42 <strptr.include.ab3@175> XINCLUDE "dos.include.ab3"
00000B68 <strptr.include.ab3@176> XINCLUDE "dos.include.ab3"
00000B82 <strptr.include.ab3@177> XINCLUDE "dos.include.ab3"
00000B86 <strptr.include.ab3@182> XINCLUDE "dos.include.ab3"
00000BB4 <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000BBE <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000C06 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000C1A <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000C2C <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000C50 <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000C5A <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000C68 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000C72 <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000C9A <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000CB4 <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000CCC <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000CE6 <strptr.include.ab3@240> XINCLUDE "dos.include.ab3"
00000CFC <strptr.include.ab3@241> XINCLUDE "dos.include.ab3"
00000D08 <strptr.include.ab3@242> XINCLUDE "dos.include.ab3"
00000D0E <strptr.include.ab3@243> XINCLUDE "dos.include.ab3"
00000D28 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000D32 <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000D40 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000D72 <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000D9A <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000D9A <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000DB0 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00000DCA <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
00000DD4 <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
00000DF6 <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00000E1A <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00000E2C <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
00000E44 <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00000E58 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
00000E6A <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
00000E7A <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
00000E80 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
00000E90 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
00000EA0 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
00000EBA <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
00000EBE <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00000ED8 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00000F08 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
00000F12 <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00000F1C <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00000F3E <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
00000F62 <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
00000F74 <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
00000F8C <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
00000FA0 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
00000FB2 <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
00000FC2 <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00000FC8 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00000FD8 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001008 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
0000100E <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
00001012 <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
0000102C <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
00001034 <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
0000103E <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
00001054 <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
00001068 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
00001094 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000010AC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000010BC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000010C2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
000010E0 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
000010E8 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001126 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000113A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
00001184 <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
0000118E <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
00001194 <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
0000119E <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000011A2 <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000011A8 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000011C2 <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000011CC <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000011D6 <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
000011EC <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
000011FC <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
00001206 <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
0000120C <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
00001232 <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
00001254 <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
0000125E <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
00001274 <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
00001288 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
000012E6 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001320 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001332 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001354 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000135A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000013B8 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
000013F2 <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
000013F8 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
00001432 <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
0000146C <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
0000147E <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
00001488 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
0000148E <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
00001498 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000014AC <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
000014F2 <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
000014FA <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001518 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
00001544 <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
00001562 <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
0000157C <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
00001596 <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001618 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
0000162C <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
00001644 <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
00001662 <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001678 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
00001692 <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000016B4 <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001748 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001778 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001808 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
0000180E <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
0000181C <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
000018B0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
000018E0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
000018E6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001900 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
0000190E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001948 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
0000197E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
000019AE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
000019BC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
000019C6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
000019CC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
000019D6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
000019EA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
000019EA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
000019EA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001A00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001A0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001A22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001A24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001A52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001A52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001A68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001A70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001A78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001AA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001AA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001AD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001AF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001B20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001B28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001B30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001B38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001B40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001B48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001B50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001B58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001B60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001B68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001B88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001B90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001B98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001BC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001BD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001BE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001BE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001BFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001C16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001C2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001C56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001C60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001C66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001C7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001C96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001CAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001CD6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001CE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001CE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001CFC <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001D0E <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00001DB2 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
00001DCA <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00001DE0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
00001E1C <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00001E50 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00001E76 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00001EB6 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
00001EF6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
00001F00 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00001F28 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
00001F2E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00001F80 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
00001F9E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
00001FC8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002038 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002062 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002080 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@1037> XINCLUDE "dos.include.ab3"
0000209C <dos.include.ab3@1040> XINCLUDE "dos.include.ab3"
000020A2 <dos.include.ab3@1041> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@1042> XINCLUDE "dos.include.ab3"
000020B8 <dos.include.ab3@1043> XINCLUDE "dos.include.ab3"
000020BC <dos.include.ab3@1045> XINCLUDE "dos.include.ab3"
000020BE <dos.include.ab3@1048> XINCLUDE "dos.include.ab3"
000020D8 <dos.include.ab3@1089> XINCLUDE "dos.include.ab3"
00002100 <dos.include.ab3@1090> XINCLUDE "dos.include.ab3"
0000210E <dos.include.ab3@1091> XINCLUDE "dos.include.ab3"
00002126 <dos.include.ab3@1094> XINCLUDE "dos.include.ab3"
00002130 <dos.include.ab3@1095> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@1096> XINCLUDE "dos.include.ab3"
00002162 <dos.include.ab3@1097> XINCLUDE "dos.include.ab3"
00002190 <dos.include.ab3@1098> XINCLUDE "dos.include.ab3"
000021BA <dos.include.ab3@1103> XINCLUDE "dos.include.ab3"
000021D2 <dos.include.ab3@1104> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
0000220A <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
000022FA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002322 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
0000234C <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002376 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002394 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
000023BE <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
0000242A <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002460 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002494 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
000024A2 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
000024FC <dos.include.ab3@1199> XINCLUDE "dos.include.ab3"
00002548 <dos.include.ab3@1200> XINCLUDE "dos.include.ab3"
000025C8 <dos.include.ab3@1201> XINCLUDE "dos.include.ab3"
000025D6 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
000025FA <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002624 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
0000264E <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
0000266C <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002682 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002688 <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00002692 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
0000269C <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
000026C0 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
000026C6 <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
000026D6 <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
000026DC <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
000026E4 <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
0000270C <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
00002716 <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00002720 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
00002734 <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
0000274A <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
00002750 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
00002774 <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
00002798 <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
000027BC <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
000027C2 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
000027EE <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
0000281E <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
00002848 <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
0000285C <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
0000289A <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00002980 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00002986 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
000029D6 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00002A00 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00002A1E <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00002A48 <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00002A5C <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00002A9A <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00002B80 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00002B86 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00002BF8 <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00002C22 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00002C40 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
00002C7A <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
00002CB2 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00002D0A <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
00002D98 <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
00002DB8 <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
00002DE2 <dos.include.ab3@2643> XINCLUDE "dos.include.ab3"
00002DE8 <dos.include.ab3@2645> XINCLUDE "dos.include.ab3"
00002E28 <dos.include.ab3@2646> XINCLUDE "dos.include.ab3"
00002E48 <dos.include.ab3@2647> XINCLUDE "dos.include.ab3"
00002E6E <dos.include.ab3@2648> XINCLUDE "dos.include.ab3"
00002E9A <dos.include.ab3@2649> XINCLUDE "dos.include.ab3"
00002EB2 <dos.include.ab3@2650> XINCLUDE "dos.include.ab3"
00002EB8 <dos.include.ab3@2651> XINCLUDE "dos.include.ab3"
00002EBE <dos.include.ab3@2652> XINCLUDE "dos.include.ab3"
00002EC4 <dos.include.ab3@2653> XINCLUDE "dos.include.ab3"
00002ED4 <dos.include.ab3@2656> XINCLUDE "dos.include.ab3"
00002EDE <dos.include.ab3@2658> XINCLUDE "dos.include.ab3"
00002EF8 <dos.include.ab3@2659> XINCLUDE "dos.include.ab3"
00002EF8 <AB3Scan.ab3@7> XINCLUDE "dos.include.ab3"
00002EF8 <prefixtree.include.ab3@1> XINCLUDE "prefixtree.include.ab3"
00002F20 <prefixtree.include.ab3@36> XINCLUDE "prefixtree.include.ab3"
00002F4E <prefixtree.include.ab3@39> XINCLUDE "prefixtree.include.ab3"
00002F82 <prefixtree.include.ab3@41> XINCLUDE "prefixtree.include.ab3"
00002FA8 <prefixtree.include.ab3@42> XINCLUDE "prefixtree.include.ab3"
00002FC8 <prefixtree.include.ab3@43> XINCLUDE "prefixtree.include.ab3"
00002FE6 <prefixtree.include.ab3@45> XINCLUDE "prefixtree.include.ab3"
00003004 <prefixtree.include.ab3@47> XINCLUDE "prefixtree.include.ab3"
0000307C <prefixtree.include.ab3@49> XINCLUDE "prefixtree.include.ab3"
00003096 <prefixtree.include.ab3@52> XINCLUDE "prefixtree.include.ab3"
000030B0 <prefixtree.include.ab3@53> XINCLUDE "prefixtree.include.ab3"
000030C4 <prefixtree.include.ab3@54> XINCLUDE "prefixtree.include.ab3"
000030CE <prefixtree.include.ab3@55> XINCLUDE "prefixtree.include.ab3"
000030D4 <prefixtree.include.ab3@56> XINCLUDE "prefixtree.include.ab3"
0000310E <prefixtree.include.ab3@59> XINCLUDE "prefixtree.include.ab3"
00003128 <prefixtree.include.ab3@61> XINCLUDE "prefixtree.include.ab3"
0000313C <prefixtree.include.ab3@63> XINCLUDE "prefixtree.include.ab3"
00003162 <prefixtree.include.ab3@64> XINCLUDE "prefixtree.include.ab3"
00003182 <prefixtree.include.ab3@65> XINCLUDE "prefixtree.include.ab3"
000031A0 <prefixtree.include.ab3@67> XINCLUDE "prefixtree.include.ab3"
000031AA <prefixtree.include.ab3@69> XINCLUDE "prefixtree.include.ab3"
000031C4 <prefixtree.include.ab3@82> XINCLUDE "prefixtree.include.ab3"
000031D8 <prefixtree.include.ab3@84> XINCLUDE "prefixtree.include.ab3"
000031FE <prefixtree.include.ab3@85> XINCLUDE "prefixtree.include.ab3"
0000321E <prefixtree.include.ab3@86> XINCLUDE "prefixtree.include.ab3"
0000323C <prefixtree.include.ab3@88> XINCLUDE "prefixtree.include.ab3"
00003246 <prefixtree.include.ab3@90> XINCLUDE "prefixtree.include.ab3"
00003284 <prefixtree.include.ab3@92> XINCLUDE "prefixtree.include.ab3"
000032D4 <prefixtree.include.ab3@94> XINCLUDE "prefixtree.include.ab3"
000032F0 <prefixtree.include.ab3@96> XINCLUDE "prefixtree.include.ab3"
0000331A <prefixtree.include.ab3@105> XINCLUDE "prefixtree.include.ab3"
0000332A <prefixtree.include.ab3@107> XINCLUDE "prefixtree.include.ab3"
00003334 <prefixtree.include.ab3@108> XINCLUDE "prefixtree.include.ab3"
0000334E <prefixtree.include.ab3@110> XINCLUDE "prefixtree.include.ab3"
0000334E <AB3Scan.ab3@9> XINCLUDE "prefixtree.include.ab3"
0000335A <AB3Scan.ab3@11> error_SetFlags{#error_stdout}
00003384 <AB3Scan.ab3@24> vers.s = Peek.s(?version)
000033AE <AB3Scan.ab3@125> Function.s GetDosFileName{filename.s}
000033C4 <AB3Scan.ab3@127>   MaxLen buff.s = 1024
000033E4 <AB3Scan.ab3@129>   lock.l = Lock_(&filename,#ACCESS_READ);
000033EE <AB3Scan.ab3@130>   If lock
00003412 <AB3Scan.ab3@131>     NameFromLock_ lock,&buff,1023
0000343C <AB3Scan.ab3@132>     filename = Peek.s(&buff)
00003454 <AB3Scan.ab3@133>     UnLock_ lock : lock=0
0000347E <AB3Scan.ab3@136>   Function Return filename
0000349C <AB3Scan.ab3@138> End Function
000034BA <AB3Scan.ab3@141> Function.l FAST _ab3_ParseComment{*parser.Parser,cpos.l}
000034CC <AB3Scan.ab3@143>   If cpos<2
000034E4 <AB3Scan.ab3@145>   If *parser\ab3header=#AB3H_FOUND
00003506 <AB3Scan.ab3@146>     While cpos<*parser\clength-4
00003532 <AB3Scan.ab3@147>       If Peek.b(*parser\bptr+cpos)=@"/"
00003540 <AB3Scan.ab3@148>         cpos+1
0000356C <AB3Scan.ab3@149>         If Peek.b(*parser\bptr+cpos)=@"X"
0000357A <AB3Scan.ab3@150>           cpos+1
000035A6 <AB3Scan.ab3@151>           If Peek.b(*parser\bptr+cpos)=@"T"
000035B4 <AB3Scan.ab3@152>             cpos+1
000035E0 <AB3Scan.ab3@153>             If Peek.b(*parser\bptr+cpos)=@"R"
000035EE <AB3Scan.ab3@154>               cpos+1
0000361A <AB3Scan.ab3@155>               If Peek.b(*parser\bptr+cpos)=@"A"
00003628 <AB3Scan.ab3@156>                 *parser\linecount=0
00003636 <AB3Scan.ab3@157>                 *parser\ab3header = #AB3H_DONE
00003644 <AB3Scan.ab3@163>       cpos+1
0000364A <AB3Scan.ab3@164>     Wend
00003662 <AB3Scan.ab3@167>   If *parser\ab3header=#AB3H_SEARCH
00003684 <AB3Scan.ab3@168>     While cpos<*parser\clength-3
000036B0 <AB3Scan.ab3@169>       If Peek.b(*parser\bptr+cpos)=@"X"
000036BE <AB3Scan.ab3@170>         cpos+1
000036EA <AB3Scan.ab3@171>         If Peek.b(*parser\bptr+cpos)=@"T"
000036F8 <AB3Scan.ab3@172>           cpos+1
00003724 <AB3Scan.ab3@173>           If Peek.b(*parser\bptr+cpos)=@"R"
00003732 <AB3Scan.ab3@174>             cpos+1
0000375E <AB3Scan.ab3@175>             If Peek.b(*parser\bptr+cpos)=@"A"
0000376C <AB3Scan.ab3@176>               *parser\ab3header = #AB3H_FOUND
0000377A <AB3Scan.ab3@181>       cpos+1
00003780 <AB3Scan.ab3@182>     Wend
00003790 <AB3Scan.ab3@186>   Function Return *parser\clength; just skip to end of line
00003796 <AB3Scan.ab3@188> End Function
000037B8 <AB3Scan.ab3@191> Function.l FAST _ab3_SkipTill{*parser.Parser,cpos.l,char.b}
000037D4 <AB3Scan.ab3@193>   While cpos<*parser\clength
000037F0 <AB3Scan.ab3@194>     c.b = Peek.b(*parser\bptr+cpos)
0000380E <AB3Scan.ab3@195>     If c=char Then Function Return cpos
0000381C <AB3Scan.ab3@196>     cpos+1
00003822 <AB3Scan.ab3@197>   Wend
0000382C <AB3Scan.ab3@198>   Function Return cpos
00003832 <AB3Scan.ab3@200> End Function
00003850 <AB3Scan.ab3@203> Function.l _ab3_ParseString{*parser.Parser,cpos.l}
00003878 <AB3Scan.ab3@205>   bpos.l = cpos-1 : If bpos<0 Then bpos=0
00003894 <AB3Scan.ab3@206>   While cpos<*parser\clength
000038C4 <AB3Scan.ab3@207>     c.w = Peek.b(*parser\bptr+cpos)&$FF : cpos+1
000038E6 <AB3Scan.ab3@208>     If AmiBlitz3\CharFlags[c]&#AB3TF_QUOT
00003906 <AB3Scan.ab3@210>         If *parser\dflags&(#DF_STRING)><0
00003942 <AB3Scan.ab3@211>           string.s = Peeks$(*parser\bptr+bpos,cpos-bpos)
000039E6 <AB3Scan.ab3@212>           NPrint "STRING\\09",*parser\linecount,"\\09",string
000039F0 <AB3Scan.ab3@215>       Function Return cpos
000039F6 <AB3Scan.ab3@217>   Wend
00003A00 <AB3Scan.ab3@218>   Function Return cpos
00003A14 <AB3Scan.ab3@220> End Function
00003A32 <AB3Scan.ab3@223> Function.l FAST _ab3_SkipWhiteSpaces{*parser.Parser,cpos.l}
00003AA4 <AB3Scan.ab3@225>   While cpos<*parser\clength AND AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]&#AB3TF_SPACE : cpos+1 : Wend
00003AAE <AB3Scan.ab3@226>   Function Return cpos
00003AB4 <AB3Scan.ab3@228> End Function
00003AD2 <AB3Scan.ab3@231> Function.l FAST _ab3_SkipToken{*parser.Parser,cpos.l}
00003ADA <AB3Scan.ab3@233>   cf.l = 0
00003B10 <AB3Scan.ab3@234>   While (cf&#AB3TF_STOP)=0 AND cpos<*parser\clength
00003B3E <AB3Scan.ab3@235>     cpos+1 : If cpos>=*parser\clength Then Function Return cpos
00003B74 <AB3Scan.ab3@236>     cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00003B7A <AB3Scan.ab3@237>   Wend
00003B84 <AB3Scan.ab3@238>   Function Return cpos
00003B8A <AB3Scan.ab3@240> End Function
00003BA8 <AB3Scan.ab3@243> Function.l _ab3_ParseNewtype{*parser.Parser,cpos.l}
00003BB2 <AB3Scan.ab3@245>   *parser\in_newtype=False
00003BEC <AB3Scan.ab3@246>   If *parser\first><False AND *parser\dflags&(#DF_NEWTYPE|#DF_FIELD)><0
00003C3C <AB3Scan.ab3@247>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Newtype..."
00003C64 <AB3Scan.ab3@248>     name.s     = ""
00003C8C <AB3Scan.ab3@249>     comment.s  = ""
00003C9E <AB3Scan.ab3@250>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00003CBA <AB3Scan.ab3@251>     c.b = Peek.b(*parser\bptr + cpos)
00003CCE <AB3Scan.ab3@252>     If c = @"."
00003CDC <AB3Scan.ab3@253>       opos.l = cpos+1
00003CEE <AB3Scan.ab3@254>       cpos.l = _ab3_SkipToken{*parser,cpos}
00003D2A <AB3Scan.ab3@255>       name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00003D42 <AB3Scan.ab3@257>       cpos = _ab3_SkipTill{*parser,cpos,@";"}
00003D70 <AB3Scan.ab3@258>       If cpos<*parser\clength Then cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
00003D86 <AB3Scan.ab3@259>       If cpos<*parser\clength
00003DC8 <AB3Scan.ab3@260>         comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
00003DD6 <AB3Scan.ab3@261>         cpos = *parser\clength
00003E02 <AB3Scan.ab3@263>       If name
00003E22 <AB3Scan.ab3@264>         If *parser\dflags&(#DF_NEWTYPE)><0
00003F22 <AB3Scan.ab3@265>           NPrint "NEWTYPE\\09",*parser\linecount,"\\09",name,"\\09",comment
00003F42 <AB3Scan.ab3@267>         If *parser\dflags&(#DF_FIELD)><0
00003F4C <AB3Scan.ab3@268>           *parser\in_newtype = True
00003F52 <AB3Scan.ab3@270>       Else
00003FA2 <AB3Scan.ab3@271>         If *parser\verbose>=#VB_INFO Then NPrint "ERROR Newtype, unable to find name???"
00003FA8 <AB3Scan.ab3@273>     Else
00003FF8 <AB3Scan.ab3@274>       If *parser\verbose>=#VB_INFO Then NPrint "ERROR Newtype, but no . following???"
00004002 <AB3Scan.ab3@278>   Function Return cpos
00004016 <AB3Scan.ab3@280> End Function
00004040 <AB3Scan.ab3@283> Function.l ab3_GetIncludeLock{filename.s}
00004060 <AB3Scan.ab3@284>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000040B8 <AB3Scan.ab3@285>   ex.s       = dos_GetExt{filename}
000040CC <AB3Scan.ab3@287>   If incLock = False
00004140 <AB3Scan.ab3@288>     filename = dos_SetExt{filename,"ab3"}
00004160 <AB3Scan.ab3@289>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00004174 <AB3Scan.ab3@292>   If incLock = False
000041E8 <AB3Scan.ab3@293>     filename = dos_SetExt{filename,"ab2"}
00004208 <AB3Scan.ab3@294>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
0000421C <AB3Scan.ab3@297>   If incLock = False
00004290 <AB3Scan.ab3@298>     filename = dos_SetExt{filename,"bb2"}
000042B0 <AB3Scan.ab3@299>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000042C4 <AB3Scan.ab3@302>   If incLock = False
00004356 <AB3Scan.ab3@303>     filename = dos_SetExt{filename,ex+".ab3"}
00004376 <AB3Scan.ab3@304>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
0000438A <AB3Scan.ab3@307>   If incLock = False
000043FE <AB3Scan.ab3@308>     filename = dos_SetExt{filename,"ab2"}
0000441E <AB3Scan.ab3@309>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00004432 <AB3Scan.ab3@312>   If incLock = False
000044A6 <AB3Scan.ab3@313>     filename = dos_SetExt{filename,"bb2"}
000044C6 <AB3Scan.ab3@314>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
000044D0 <AB3Scan.ab3@317>   Function Return incLock
000044EA <AB3Scan.ab3@318> End Function
00004508 <AB3Scan.ab3@321> Function.l _ab3_ParseInclude{*parser.Parser,cpos.l}
00004552 <AB3Scan.ab3@323>   If *parser\first><False AND str_Len{*parser\incpath}>0
000045A2 <AB3Scan.ab3@324>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Include..."
000045CA <AB3Scan.ab3@325>     name.s     = ""
000045F2 <AB3Scan.ab3@326>     comment.s  = ""
00004604 <AB3Scan.ab3@327>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
0000462E <AB3Scan.ab3@328>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
0000464C <AB3Scan.ab3@329>     If c<0 Then Function Return cpos-1
0000465A <AB3Scan.ab3@331>     If c = $22
00004668 <AB3Scan.ab3@332>       opos.l = cpos-1
0000467E <AB3Scan.ab3@333>       cpos = _ab3_SkipTill{*parser,cpos,$22}
00004694 <AB3Scan.ab3@334>       If cpos<*parser\clength
000046A6 <AB3Scan.ab3@336>       cpos.l = _ab3_SkipToken{*parser,cpos}
000046E2 <AB3Scan.ab3@337>       name.s = Peeks$(*parser\bptr+opos,cpos-opos)
000046FA <AB3Scan.ab3@339>       cpos = _ab3_SkipTill{*parser,cpos,@";"}
00004728 <AB3Scan.ab3@340>       If cpos<*parser\clength Then cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
0000473E <AB3Scan.ab3@341>       If cpos<*parser\clength
00004780 <AB3Scan.ab3@342>         comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
000047AC <AB3Scan.ab3@344>       If name
0000482A <AB3Scan.ab3@345>         name = Replace$(name,"\\22","")
000048B0 <AB3Scan.ab3@347>         filename.s = dos_AddPart{str_Read{&*parser\path},name}
000048E2 <AB3Scan.ab3@348>         lock.l = ab3_GetIncludeLock{filename}
000048F4 <AB3Scan.ab3@349>         If lock=0
0000497A <AB3Scan.ab3@350>           filename.s = dos_AddPart{str_Read{&*parser\incpath},name}
000049AC <AB3Scan.ab3@351>           lock.l = ab3_GetIncludeLock{filename}
000049B6 <AB3Scan.ab3@353>         If lock
000049CC <AB3Scan.ab3@354>           MaxLen dosname.s = 1024
000049F0 <AB3Scan.ab3@355>           NameFromLock_ lock,&dosname,1023
00004A08 <AB3Scan.ab3@356>           UnLock_ lock : lock=0
00004A32 <AB3Scan.ab3@357>           dosname.s = Peek.s(&dosname) ; GetDosFileName{filename}
00004A98 <AB3Scan.ab3@358>           If pft_FindItem{*parser\filesT,dosname}=""
00004AEC <AB3Scan.ab3@359>             pft_AddItem{*parser\filesT,dosname,"todo"}
00004B06 <AB3Scan.ab3@361>           If *parser\dflags&#DF_INCLUDE
00004C06 <AB3Scan.ab3@362>             NPrint "INCLUDE\\09",*parser\linecount,"\\09",dosname,"\\09",comment
00004C0C <AB3Scan.ab3@364>         Else
00004CB8 <AB3Scan.ab3@365>           If *parser\verbose>=#VB_INFO Then NPrint "ERROR Unable to find include: \\22",filename,"\\22"
00004CC2 <AB3Scan.ab3@372>   Function Return cpos
00004CD6 <AB3Scan.ab3@374> End Function
00004CF4 <AB3Scan.ab3@377> Function.l _ab3_ParseMacro{*parser.Parser,cpos.l}
00004D2E <AB3Scan.ab3@379>   If *parser\first><False AND *parser\dflags&#DF_MACRO><0
00004D7E <AB3Scan.ab3@380>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Macro..."
00004DA6 <AB3Scan.ab3@381>     name.s     = ""
00004DCE <AB3Scan.ab3@382>     comment.s  = ""
00004DE0 <AB3Scan.ab3@383>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00004DE6 <AB3Scan.ab3@384>     opos.l = cpos
00004DF8 <AB3Scan.ab3@385>     cpos.l = _ab3_SkipToken{*parser,cpos}
00004E34 <AB3Scan.ab3@386>     name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00004E4C <AB3Scan.ab3@388>     cpos = _ab3_SkipTill{*parser,cpos,@";"}
00004E7A <AB3Scan.ab3@389>     If cpos<*parser\clength Then cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
00004E90 <AB3Scan.ab3@390>     If cpos<*parser\clength
00004ED2 <AB3Scan.ab3@391>       comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
00004EFE <AB3Scan.ab3@393>     If name
00004FFE <AB3Scan.ab3@394>       NPrint "MACRO\\09",*parser\linecount,"\\09",name,"\\09",comment
00005008 <AB3Scan.ab3@398>   Function Return cpos
0000501C <AB3Scan.ab3@400> End Function
0000503A <AB3Scan.ab3@403> Function.l _ab3_ParseConstant{*parser.Parser,cpos.l}
00005074 <AB3Scan.ab3@405>   If *parser\first><False AND *parser\dflags&#DF_CONSTANT><0
000050C4 <AB3Scan.ab3@406>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Constant..."
000050EC <AB3Scan.ab3@407>     name.s     = ""
00005114 <AB3Scan.ab3@408>     value.s    = ""
0000513C <AB3Scan.ab3@409>     comment.s  = ""
0000514E <AB3Scan.ab3@410>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005154 <AB3Scan.ab3@411>     opos.l = cpos
00005166 <AB3Scan.ab3@412>     cpos.l = _ab3_SkipToken{*parser,cpos}
000051A2 <AB3Scan.ab3@413>     name.s = Peeks$(*parser\bptr+opos,cpos-opos)
000051B4 <AB3Scan.ab3@414>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
000051DE <AB3Scan.ab3@415>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005200 <AB3Scan.ab3@416>     If c><@"=" Then Function Return cpos-1
00005212 <AB3Scan.ab3@417>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005218 <AB3Scan.ab3@418>     opos.l = cpos
00005230 <AB3Scan.ab3@419>     cpos = _ab3_SkipTill{*parser,cpos,@":"}
0000525E <AB3Scan.ab3@420>     If cpos>=*parser\clength Then cpos = _ab3_SkipTill{*parser,opos,@";"}
000052CE <AB3Scan.ab3@421>     If opos>0 Then While cpos>opos AND Peek.b(*parser\bptr + cpos-1)=@" ":cpos-1:Wend
0000530A <AB3Scan.ab3@422>     value.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005322 <AB3Scan.ab3@424>     cpos = _ab3_SkipTill{*parser,cpos,@";"}
00005338 <AB3Scan.ab3@425>     If cpos<*parser\clength 
00005350 <AB3Scan.ab3@426>       cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
00005366 <AB3Scan.ab3@427>       If cpos<*parser\clength
000053A8 <AB3Scan.ab3@428>         comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
000053D4 <AB3Scan.ab3@431>     If name
00005530 <AB3Scan.ab3@432>       NPrint "CONSTANT\\09",*parser\linecount,"\\09",name,"\\09",value,"\\09",comment
0000553A <AB3Scan.ab3@435>   Function Return cpos
0000554E <AB3Scan.ab3@437> End Function
0000556C <AB3Scan.ab3@439> Function.l _ab3_ParseEnd{*parser.Parser,cpos.l}
00005604 <AB3Scan.ab3@441>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse End... F:",*parser\in_function," NT:",*parser\in_newtype
00005616 <AB3Scan.ab3@442>   cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005632 <AB3Scan.ab3@443>   c.w = Peek.b(*parser\bptr + cpos) 
00005640 <AB3Scan.ab3@444>   If c<0
00005672 <AB3Scan.ab3@445>     tokenid.l = Peek.w(*parser\bptr+cpos)&$FFFF : cpos+2
00005678 <AB3Scan.ab3@446>     Select tokenid
00005690 <AB3Scan.ab3@447>       Case #TOKEN_Function  : *parser\in_function = False
000056AE <AB3Scan.ab3@448>       Case #TOKEN_Statement : *parser\in_function = False
000056CC <AB3Scan.ab3@449>       Case #TOKEN_NEWTYPE   : *parser\in_newtype  = False
000056EA <AB3Scan.ab3@450>       Case #TOKEN_Macro     : *parser\in_macro    = False
000056EC <AB3Scan.ab3@451>     End Select
00005762 <AB3Scan.ab3@452>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG End: ",Hex$(tokenid)
00005768 <AB3Scan.ab3@454>   Else
0000576E <AB3Scan.ab3@455>     opos.l = cpos
00005780 <AB3Scan.ab3@456>     cpos.l = _ab3_SkipToken{*parser,cpos}
000057BC <AB3Scan.ab3@457>     token.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005840 <AB3Scan.ab3@458>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG End: ",token
0000585A <AB3Scan.ab3@459>     tokenid.l = pftlib_GetInt32{AmiBlitz3\TokenT,&token}
00005860 <AB3Scan.ab3@461>     Select tokenid
00005878 <AB3Scan.ab3@462>       Case #TOKEN_Function  : *parser\in_function = False
00005896 <AB3Scan.ab3@463>       Case #TOKEN_Statement : *parser\in_function = False
000058B4 <AB3Scan.ab3@464>       Case #TOKEN_NEWTYPE   : *parser\in_newtype  = False
000058D2 <AB3Scan.ab3@465>       Case #TOKEN_Macro     : *parser\in_macro    = False
000058D4 <AB3Scan.ab3@466>     End Select
0000596C <AB3Scan.ab3@469>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse ===... F:",*parser\in_function," NT:",*parser\in_newtype
00005976 <AB3Scan.ab3@471>   Function Return cpos
0000598A <AB3Scan.ab3@472> End Function
000059A8 <AB3Scan.ab3@474> Function.l _ab3_ParseFunction{*parser.Parser,cpos.l}
000059E2 <AB3Scan.ab3@476>     If *parser\first><False AND *parser\dflags&#DF_FUNCTION><0
00005A32 <AB3Scan.ab3@477>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Function..."
00005A5A <AB3Scan.ab3@478>     typ.s      = ""
00005A82 <AB3Scan.ab3@479>     name.s     = ""
00005AAA <AB3Scan.ab3@480>     modifier.s = ""
00005AD2 <AB3Scan.ab3@481>     track.s    = ""
00005AFA <AB3Scan.ab3@482>     comment.s  = ""
00005B0C <AB3Scan.ab3@483>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005B36 <AB3Scan.ab3@484>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005B54 <AB3Scan.ab3@485>     If c<0 Then Function Return cpos-1
00005B66 <AB3Scan.ab3@487>     If c = @"."
00005B6C <AB3Scan.ab3@488>       opos.l = cpos
00005B7E <AB3Scan.ab3@489>       cpos.l = _ab3_SkipToken{*parser,cpos}
00005BBA <AB3Scan.ab3@490>       typ.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005BCC <AB3Scan.ab3@491>       cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005BF6 <AB3Scan.ab3@492>       c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005C04 <AB3Scan.ab3@494>     opos.l = cpos-1
00005C16 <AB3Scan.ab3@495>     cpos.l = _ab3_SkipToken{*parser,cpos}
00005C52 <AB3Scan.ab3@496>     name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005C8A <AB3Scan.ab3@497>     If name="FAST"
00005CBE <AB3Scan.ab3@498>       modifier=name
00005CD0 <AB3Scan.ab3@499>       opos.l = _ab3_SkipWhiteSpaces{*parser,cpos}
00005CE2 <AB3Scan.ab3@500>       cpos.l = _ab3_SkipToken{*parser,opos}
00005D1E <AB3Scan.ab3@501>       name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005D30 <AB3Scan.ab3@503>     cpos.l = _ab3_SkipWhiteSpaces{*parser,cpos}
00005D5A <AB3Scan.ab3@504>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005D7C <AB3Scan.ab3@505>     If c><@"{" Then Function Return cpos-1
00005D82 <AB3Scan.ab3@506>     opos = cpos
00005D9A <AB3Scan.ab3@507>     cpos = _ab3_SkipTill{*parser,cpos,@"}"}
00005DB0 <AB3Scan.ab3@508>     If cpos<*parser\clength
00005DDC <AB3Scan.ab3@509>       If name
00005E18 <AB3Scan.ab3@510>         track.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005E96 <AB3Scan.ab3@511>         track=Replace$(track," ","")
00005F14 <AB3Scan.ab3@512>         track=Replace$(track,"\\09","")
00005F92 <AB3Scan.ab3@513>         comment=Replace$(comment,"\\09"," ")
0000614A <AB3Scan.ab3@514>         NPrint "FUNCTION\\09",*parser\linecount,"\\09",name,"\\09",typ,"\\09",track,"\\09",comment
00006154 <AB3Scan.ab3@515>         *parser\in_function = True
00006174 <AB3Scan.ab3@516>         If *parser\dflags&#DF_LOCAL><0
0000617C <AB3Scan.ab3@517>           kpos.l=0
0000618A <AB3Scan.ab3@519>             opos.l = kpos+1
000061DA <AB3Scan.ab3@520>             kpos.l = Instr(track,",",opos)
00006206 <AB3Scan.ab3@521>             If kpos=0 Then kpos=FLen(track)+1
00006214 <AB3Scan.ab3@522>             If kpos>opos
0000626A <AB3Scan.ab3@523>               ppos.l = Instr(track,".",opos+1)
00006294 <AB3Scan.ab3@524>               If ppos>0 AND ppos<kpos-1
000062EE <AB3Scan.ab3@525>                 name.s = Mid$(track,opos,ppos-opos)
00006354 <AB3Scan.ab3@526>                 typ.s  = Mid$(track,ppos+1,kpos-ppos-1)
00006454 <AB3Scan.ab3@528>                 NPrint "PARAM\\09",*parser\linecount,"\\09",name,"\\09",typ
00006468 <AB3Scan.ab3@531>           Until kpos<=opos
00006472 <AB3Scan.ab3@537>   Function Return cpos
00006486 <AB3Scan.ab3@539> End Function
000064A4 <AB3Scan.ab3@542> Function.l _ab3_ParseToken{*parser.Parser,cpos.l}
000064B2 <AB3Scan.ab3@543>   opos.l  = cpos-1
000064C4 <AB3Scan.ab3@544>   cpos    = _ab3_SkipToken{*parser,opos}
00006500 <AB3Scan.ab3@545>   token.s = Peeks$(*parser\bptr+opos,cpos-opos)
0000651A <AB3Scan.ab3@547>   tokenid.l=pftlib_GetInt32{AmiBlitz3\TokenT,&token}
000065EC <AB3Scan.ab3@548>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Text Token ",token," => ",Hex$(tokenid)
000065FE <AB3Scan.ab3@549>   If tokenid=0
00006610 <AB3Scan.ab3@550>      If *parser\in_newtype
00006622 <AB3Scan.ab3@551>        If opos>0
00006644 <AB3Scan.ab3@552>          c.w = Peek.b(*parser\bptr + opos-1)
0000669C <AB3Scan.ab3@553>          If c=@"*" Then token="*"+token
000066AE <AB3Scan.ab3@556>        cpos.l = _ab3_SkipWhiteSpaces{*parser,cpos}
000066D8 <AB3Scan.ab3@557>        c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00006700 <AB3Scan.ab3@558>        typ.s = ""
00006712 <AB3Scan.ab3@559>        If c=@"."
00006718 <AB3Scan.ab3@560>          opos.l = cpos
0000672A <AB3Scan.ab3@561>          cpos.l = _ab3_SkipToken{*parser,cpos}
00006766 <AB3Scan.ab3@562>          typ.s = Peeks$(*parser\bptr+opos,cpos-opos)
00006866 <AB3Scan.ab3@564>        NPrint "FIELD\\09",*parser\linecount,"\\09",token,"\\09",typ
0000686C <AB3Scan.ab3@565>      Else
00006896 <AB3Scan.ab3@566>        c.w = Peek.b(*parser\bptr + cpos) : cpos+1
000068BE <AB3Scan.ab3@567>        typ.s = ""
000068D0 <AB3Scan.ab3@568>        If c=@"."
000068D6 <AB3Scan.ab3@569>          opos.l = cpos
000068E8 <AB3Scan.ab3@570>          cpos.l = _ab3_SkipToken{*parser,cpos}
00006924 <AB3Scan.ab3@571>          typ.s = Peeks$(*parser\bptr+opos,cpos-opos)
0000695C <AB3Scan.ab3@573>          If typ><""
0000696E <AB3Scan.ab3@574>            If *parser\in_function ; todo: doenst recognize shared
0000698E <AB3Scan.ab3@575>              If *parser\dflags&#DF_LOCAL><0
00006A8E <AB3Scan.ab3@576>                NPrint "LOCAL\\09",*parser\linecount,"\\09",token,"\\09",typ
00006A94 <AB3Scan.ab3@578>            Else
00006AB4 <AB3Scan.ab3@579>              If *parser\dflags&#DF_GLOBAL><0
00006BB4 <AB3Scan.ab3@580>                NPrint "GLOBAL\\09",*parser\linecount,"\\09",token,"\\09",typ
00006BBA <AB3Scan.ab3@584>        Else
00006BC4 <AB3Scan.ab3@588>      Function Return cpos
00006BCA <AB3Scan.ab3@591>   Select tokenid
00006BEA <AB3Scan.ab3@592>     Case #TOKEN_Function  : cpos = _ab3_ParseFunction{*parser,cpos}
00006C10 <AB3Scan.ab3@593>     Case #TOKEN_Statement : cpos = _ab3_ParseFunction{*parser,cpos}
00006C36 <AB3Scan.ab3@594>     Case #TOKEN_Macro     : cpos = _ab3_ParseMacro   {*parser,cpos}
00006C5C <AB3Scan.ab3@595>     Case #TOKEN_NEWTYPE   : cpos = _ab3_ParseNewtype {*parser,cpos}
00006C82 <AB3Scan.ab3@596>     Case #TOKEN_XINCLUDE  : cpos = _ab3_ParseInclude {*parser,cpos}
00006CA8 <AB3Scan.ab3@597>     Case #TOKEN_INCLUDE   : cpos = _ab3_ParseInclude {*parser,cpos}
00006CCE <AB3Scan.ab3@598>     Case #TOKEN_End       : cpos = _ab3_ParseEnd     {*parser,cpos}
00006CD0 <AB3Scan.ab3@599>   End Select
00006CDA <AB3Scan.ab3@601>   Function Return cpos
00006CEE <AB3Scan.ab3@603> End Function
00006D0C <AB3Scan.ab3@606> Function.l _ab3_Parse2ByteToken{*parser.Parser,cpos.l}
00006D3A <AB3Scan.ab3@608>   tokenid.w = Peek.w(*parser\bptr+cpos-1) : cpos +1
00006DF8 <AB3Scan.ab3@609>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse 2Byte Token ($",Right$(Hex$(tokenid),4),")"
00006DFE <AB3Scan.ab3@611>   Select tokenid
00006E1E <AB3Scan.ab3@612>     Case #TOKEN_Function  : cpos = _ab3_ParseFunction{*parser,cpos}      
00006E44 <AB3Scan.ab3@613>     Case #TOKEN_Statement : cpos = _ab3_ParseFunction{*parser,cpos}      
00006E6A <AB3Scan.ab3@614>     Case #TOKEN_Macro     : cpos = _ab3_ParseMacro   {*parser,cpos}      
00006E90 <AB3Scan.ab3@615>     Case #TOKEN_NEWTYPE   : cpos = _ab3_ParseNewtype {*parser,cpos}
00006EB6 <AB3Scan.ab3@616>     Case #TOKEN_XINCLUDE  : cpos = _ab3_ParseInclude {*parser,cpos}
00006EDC <AB3Scan.ab3@617>     Case #TOKEN_INCLUDE   : cpos = _ab3_ParseInclude {*parser,cpos}
00006F02 <AB3Scan.ab3@618>     Case #TOKEN_End       : cpos = _ab3_ParseEnd     {*parser,cpos}
00006F04 <AB3Scan.ab3@619>   End Select
00006F0E <AB3Scan.ab3@620>   Function Return cpos
00006F14 <AB3Scan.ab3@622> End Function
00006F32 <AB3Scan.ab3@625> Function.l FAST _ab3_SkipBinary{*parser.Parser,cpos.l}
00006F3A <AB3Scan.ab3@627>   cf.l = 0
00006F68 <AB3Scan.ab3@630>     cpos+1 : If cpos>=*parser\clength Then Function Return cpos
00006F9E <AB3Scan.ab3@631>     cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00006FC8 <AB3Scan.ab3@632>     If (cf&#AB3TF_BIN)=0 Then Function Return cpos-1
00006FE4 <AB3Scan.ab3@633>   Until cpos>=*parser\clength
00006FEE <AB3Scan.ab3@635>   Function Return cpos
00006FF4 <AB3Scan.ab3@637> End Function
00007012 <AB3Scan.ab3@640> Function.l FAST _ab3_SkipHex{*parser.Parser,cpos.l}
00007028 <AB3Scan.ab3@643>     If cpos<*parser\clength
0000705E <AB3Scan.ab3@644>       cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00007064 <AB3Scan.ab3@645>     Else
0000706C <AB3Scan.ab3@646>       cf = 0
0000707A <AB3Scan.ab3@648>     cpos+1
000070B0 <AB3Scan.ab3@649>   Until (cf&#AB3TF_HEX)=0 OR cpos>=*parser\clength
000070C0 <AB3Scan.ab3@651>   Function Return cpos-1
000070C6 <AB3Scan.ab3@653> End Function
000070E4 <AB3Scan.ab3@656> Function.l FAST _ab3_ParseNumber{*parser.Parser,cpos.l}
000070FA <AB3Scan.ab3@659>     If cpos<*parser\clength
00007130 <AB3Scan.ab3@660>       cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00007136 <AB3Scan.ab3@661>     Else
0000713E <AB3Scan.ab3@662>       cf = 0
0000714C <AB3Scan.ab3@664>     cpos+1
00007182 <AB3Scan.ab3@665>   Until (cf&#AB3TF_DEC)=0 OR cpos>=*parser\clength
000071B4 <AB3Scan.ab3@667>   If (Peek.b(*parser\bptr + cpos-1)=@".") ; has a decimal point
000071CA <AB3Scan.ab3@669>       If cpos<*parser\clength
00007200 <AB3Scan.ab3@670>         cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00007206 <AB3Scan.ab3@671>       Else
0000720E <AB3Scan.ab3@672>         cf = 0
0000721C <AB3Scan.ab3@674>       cpos+1
00007252 <AB3Scan.ab3@675>     Until (cf&#AB3TF_DEC)=0 OR cpos>=*parser\clength
00007260 <AB3Scan.ab3@678>   cpos-1
0000726A <AB3Scan.ab3@679>   Function Return cpos
00007270 <AB3Scan.ab3@681> End Function
0000728A <AB3Scan.ab3@684> Function.l ab3_ParseLine{*parser.Parser}
00007294 <AB3Scan.ab3@686>   *parser\first   = True
0000729C <AB3Scan.ab3@687>   cpos.l = 0
000072B8 <AB3Scan.ab3@689>   While cpos<*parser\clength
000072E2 <AB3Scan.ab3@690>     c.b = Peek.b(*parser\bptr+cpos) : cpos+1
00007306 <AB3Scan.ab3@691>     cf.l = AmiBlitz3\CharFlags[c&$FF]
00007344 <AB3Scan.ab3@693>     If (cf&#AB3TF_COMMENT   ) Then cpos = _ab3_ParseComment   {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
00007382 <AB3Scan.ab3@694>     If (cf&#AB3TF_QUOT      ) Then cpos = _ab3_ParseString    {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
000073C0 <AB3Scan.ab3@695>     If (cf&#AB3TF_FIRST     ) Then cpos = _ab3_ParseToken     {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
000073FE <AB3Scan.ab3@696>     If (cf&#AB3TF_DEC       ) Then cpos = _ab3_ParseNumber    {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
0000743C <AB3Scan.ab3@697>     If (cf&#AB3TF_2BYTETOKEN) Then cpos = _ab3_Parse2ByteToken{*parser,cpos} : cf = 0 : c=0 : *parser\first=False
00007448 <AB3Scan.ab3@699>     Select c
00007464 <AB3Scan.ab3@700>       Case @":" : *parser\first=True
0000747C <AB3Scan.ab3@701>       Case @"#"
0000749A <AB3Scan.ab3@702>         Select Peek.b(*parser\bptr+cpos)
000074AA <AB3Scan.ab3@703>           Case $22
000074C2 <AB3Scan.ab3@704>             cpos = _ab3_ParseString{*parser,cpos+1}
000074C8 <AB3Scan.ab3@705>           Default
00007502 <AB3Scan.ab3@706>             If *parser\first><False AND *parser\dflags&#DF_CONSTANT><0
00007514 <AB3Scan.ab3@707>               cpos = _ab3_ParseConstant{*parser,cpos}
0000751A <AB3Scan.ab3@708>             Else
0000752C <AB3Scan.ab3@709>               cpos = _ab3_SkipToken{*parser,cpos}
0000752E <AB3Scan.ab3@711>         End Select
00007538 <AB3Scan.ab3@712>         *parser\first=False
00007550 <AB3Scan.ab3@714>       Case @"!" ; its a macro reference
00007562 <AB3Scan.ab3@715>         cpos = _ab3_SkipToken{*parser,cpos}
0000756C <AB3Scan.ab3@716>         *parser\first=False
00007584 <AB3Scan.ab3@718>       Case @"."
000075BE <AB3Scan.ab3@719>         If *parser\first><False AND *parser\dflags&#DF_LABEL><0
000075C4 <AB3Scan.ab3@720>           opos.l = cpos
000075D6 <AB3Scan.ab3@721>           cpos = _ab3_SkipToken{*parser,cpos}
00007682 <AB3Scan.ab3@722>           NPrint "LABEL\\09",*parser\linecount,"\\09",Peeks$(*parser\bptr+opos,cpos-opos)
00007688 <AB3Scan.ab3@723>         Else
0000769A <AB3Scan.ab3@725>           cpos = _ab3_SkipToken{*parser,cpos}
000076A4 <AB3Scan.ab3@727>         *parser\first=False
000076BC <AB3Scan.ab3@729>       Case @"\" ; its a member reference
000076CE <AB3Scan.ab3@730>         cpos = _ab3_SkipToken{*parser,cpos}
000076D8 <AB3Scan.ab3@731>         *parser\first=False
000076F0 <AB3Scan.ab3@733>       Case @"%"
00007702 <AB3Scan.ab3@734>         cpos = _ab3_SkipBinary{*parser,cpos}
0000770C <AB3Scan.ab3@735>         *parser\first=False
00007724 <AB3Scan.ab3@737>       Case @"$"
00007736 <AB3Scan.ab3@738>         cpos = _ab3_SkipHex{*parser,cpos}
00007740 <AB3Scan.ab3@739>         *parser\first=False
00007758 <AB3Scan.ab3@741>       Case @"@"
00007776 <AB3Scan.ab3@742>         Select Peek.b(*parser\bptr+cpos)
00007788 <AB3Scan.ab3@743>           Case @"@" ; its @@
00007796 <AB3Scan.ab3@744>             cpos+1
000077AC <AB3Scan.ab3@745>             If cpos<*parser\clength ; remaining chars
000077BA <AB3Scan.ab3@746>               cpos=*parser\clength
000077D0 <AB3Scan.ab3@748>           Case $22 ; its @"ILBM"
000077E8 <AB3Scan.ab3@749>             cpos = _ab3_ParseString{*parser,cpos+1}
00007800 <AB3Scan.ab3@750>           Case @"#" ; its @#constant
00007812 <AB3Scan.ab3@752>             cpos = _ab3_SkipToken{*parser,cpos}
00007818 <AB3Scan.ab3@753>           Default
0000782A <AB3Scan.ab3@755>             cpos = _ab3_SkipToken{*parser,cpos}
0000782C <AB3Scan.ab3@757>         End Select
00007836 <AB3Scan.ab3@758>         *parser\first=False
0000783C <AB3Scan.ab3@760>       Default
0000783E <AB3Scan.ab3@762>     End Select
00007844 <AB3Scan.ab3@764>   Wend
0000784E <AB3Scan.ab3@765>   Function Return cpos
00007854 <AB3Scan.ab3@767> End Function
0000789A <AB3Scan.ab3@770> Function.Parser ab3_CreateParser{incpath.s,pattern.s,recursive.l,dflags.l,verbose.l}
000078BA <AB3Scan.ab3@772>   *parser.Parser = AllocVec_(SizeOf.Parser,#MEMF_ANY)
000078C4 <AB3Scan.ab3@773>   If *parser
000078CC <AB3Scan.ab3@775>     *parser\filename    = Null
000078D6 <AB3Scan.ab3@776>     *parser\path        = Null
000078E0 <AB3Scan.ab3@777>     *parser\tokenized   = False
000078EE <AB3Scan.ab3@778>     *parser\ab3header   = #AB3H_NONE
000078F8 <AB3Scan.ab3@781>     *parser\first       = True
00007902 <AB3Scan.ab3@782>     *parser\bptr        = Null
00007910 <AB3Scan.ab3@783>     *parser\clength     = 0
0000791C <AB3Scan.ab3@787>     *parser\recursive   = recursive
00007926 <AB3Scan.ab3@788>     *parser\pattern     = Null
00007930 <AB3Scan.ab3@789>     *parser\incpath     = Null
00007944 <AB3Scan.ab3@790>     *parser\filesT      = pft_Create{4096}
00007950 <AB3Scan.ab3@791>     *parser\verbose     = verbose
0000795C <AB3Scan.ab3@792>     *parser\dflags      = dflags
00007966 <AB3Scan.ab3@793>     *parser\in_newtype  = False
00007970 <AB3Scan.ab3@794>     *parser\in_function = False
0000797A <AB3Scan.ab3@795>     *parser\in_macro    = False
000079E2 <AB3Scan.ab3@797>     tempbuf.s = LSet$(" ",FLen(pattern)*3+4)
00007A12 <AB3Scan.ab3@798>     ParsePatternNoCase_ &pattern,&tempbuf,FLen(tempbuf)
00007A2E <AB3Scan.ab3@799>     str_WritePtr{&*parser\pattern,&tempbuf}
00007A66 <AB3Scan.ab3@800>     str_Write{&*parser\incpath,incpath}
00007A8A <AB3Scan.ab3@802>     *parser\fbuffer = AllocVec_(#FBUFF_SIZE,#MEMF_ANY)
00007A98 <AB3Scan.ab3@803>     *parser\fbuffer_currentpos = 0
00007AA6 <AB3Scan.ab3@804>     *parser\fbuffer_fillpos    = 0
00007AB0 <AB3Scan.ab3@808>   Function Return *parser
00007ACC <AB3Scan.ab3@810> End Function
00007AE6 <AB3Scan.ab3@813> Statement ab3_FreeParser{*parser.Parser}
00007AF2 <AB3Scan.ab3@815>   str_Free{&*parser\filename}
00007B02 <AB3Scan.ab3@816>   str_Free{&*parser\path}
00007B12 <AB3Scan.ab3@817>   str_Free{&*parser\incpath}
00007B22 <AB3Scan.ab3@818>   str_Free{&*parser\pattern}
00007B4E <AB3Scan.ab3@819>   If *parser\filesT  Then pft_Free{*parser\filesT}  : *parser\filesT = Null
00007B80 <AB3Scan.ab3@820>   If *parser\fbuffer Then FreeVec_(*parser\fbuffer) : *parser\fbuffer = Null
00007B84 <AB3Scan.ab3@822> End Statement
00007BA2 <AB3Scan.ab3@825> Function.l file_ReadAB3Line2 {*parser.Parser,fid.l}
00007BAA <AB3Scan.ab3@827>   dummy.l = 0
00007BB8 <AB3Scan.ab3@828>   bpos.l  = *parser\fbuffer_currentpos
00007BBE <AB3Scan.ab3@829>   eol.l = False
00007BD4 <AB3Scan.ab3@832>     If bpos>=*parser\fbuffer_fillpos
00007BE8 <AB3Scan.ab3@833>       copylength.l = bpos-*parser\fbuffer_currentpos
00007C32 <AB3Scan.ab3@834>       If copylength>0 Then CopyMem_ *parser\fbuffer+*parser\fbuffer_currentpos,*parser\fbuffer,copylength
00007C3E <AB3Scan.ab3@835>       *parser\fbuffer_fillpos    = copylength
00007C4A <AB3Scan.ab3@836>       *parser\fbuffer_currentpos = copylength
00007C8E <AB3Scan.ab3@837>       readlength.l = Read_ (fid,*parser\fbuffer+*parser\fbuffer_fillpos,#FBUFF_SIZE-*parser\fbuffer_fillpos)
00007CA6 <AB3Scan.ab3@838>       *parser\fbuffer_fillpos + readlength
00007CB4 <AB3Scan.ab3@839>       bpos = *parser\fbuffer_currentpos
00007CCC <AB3Scan.ab3@840>       If readlength<=0 Then eol=True
00007CD2 <AB3Scan.ab3@841>     Else
00007CF0 <AB3Scan.ab3@842>       dummy=Peek.b(*parser\fbuffer + bpos)
00007D02 <AB3Scan.ab3@843>       If *parser\tokenized
00007D14 <AB3Scan.ab3@844>         If dummy<0 
00007D22 <AB3Scan.ab3@845>           bpos+1
00007D40 <AB3Scan.ab3@846>           dummy=Peek.b(*parser\fbuffer + bpos)
00007D52 <AB3Scan.ab3@847>           If dummy=0 
00007D60 <AB3Scan.ab3@848>             bpos+1
00007D7E <AB3Scan.ab3@849>             dummy=Peek.b(*parser\fbuffer + bpos)
00007D96 <AB3Scan.ab3@852>         If dummy=$00 Then eol=True
00007D9C <AB3Scan.ab3@853>       Else
00007DB4 <AB3Scan.ab3@854>         If dummy=$0a Then eol=True
00007DC2 <AB3Scan.ab3@857>       bpos+1
00007DCC <AB3Scan.ab3@859>   Until eol
00007DEA <AB3Scan.ab3@861>   *parser\bptr    = *parser\fbuffer + *parser\fbuffer_currentpos
00007E08 <AB3Scan.ab3@862>   *parser\clength = bpos-*parser\fbuffer_currentpos-1
00007E14 <AB3Scan.ab3@863>   *parser\fbuffer_currentpos = bpos
00007E2C <AB3Scan.ab3@864>   If *parser\clength>=0
00007E44 <AB3Scan.ab3@865>     *parser\linecount+1
00007F1C <AB3Scan.ab3@866>     NPrint "Line ",*parser\linecount,":(",bpos,"):",Peeks$(*parser\bptr,*parser\clength)
00007F22 <AB3Scan.ab3@867>   Else
00007F5A <AB3Scan.ab3@868>     NPrint "EOF"
00007F78 <AB3Scan.ab3@870>   Function Return *parser\clength>=0
00007F7E <AB3Scan.ab3@872> End Function
00007FAC <AB3Scan.ab3@875> Function.l ab3_ParseFile{*parser.Parser,filename.s}
00008004 <AB3Scan.ab3@877>   dosname.s = GetDosFileName{filename}
00008066 <AB3Scan.ab3@879>   status.s = pft_FindItem{*parser\filesT,dosname}
000080A6 <AB3Scan.ab3@880>   If status="done" Then Function Return False
000080FA <AB3Scan.ab3@882>   pft_AddItem{*parser\filesT,dosname,"done"}
00008168 <AB3Scan.ab3@883>   str_Write{&*parser\path,dos_PathPart{dosname}}
0000819C <AB3Scan.ab3@884>   str_Write{&*parser\filename,dosname}
000081BC <AB3Scan.ab3@886>   fid.l = Open_ (&filename,#MODE_OLDFILE)
000081D6 <AB3Scan.ab3@887>   If fid=0 Then Function Return False
000081E0 <AB3Scan.ab3@889>   *parser\tokenized = False
000081EE <AB3Scan.ab3@890>   *parser\linecount = 0
00008260 <AB3Scan.ab3@891>   Select LCase$(dos_GetExt{filename})
00008292 <AB3Scan.ab3@892>     Case "ab3" : *parser\ab3header  = #AB3H_SEARCH
000082C6 <AB3Scan.ab3@893>     Case "bb2" : *parser\tokenized=True
000082FA <AB3Scan.ab3@894>     Case "bb"  : *parser\tokenized=True
0000830A <AB3Scan.ab3@895>     Default:     *parser\tokenized=False
00008318 <AB3Scan.ab3@896>   End Select
00008338 <AB3Scan.ab3@898>   If *parser\dflags&#DF_SOURCE><0
000083A4 <AB3Scan.ab3@899>     NPrint "SOURCE\\09",dosname
000083B2 <AB3Scan.ab3@902>   *parser\fbuffer_currentpos = 0
000083C0 <AB3Scan.ab3@903>   *parser\fbuffer_fillpos    = 0
000083D6 <AB3Scan.ab3@904>   While file_ReadAB3Line2{*parser,fid}
000083E0 <AB3Scan.ab3@905>     ab3_ParseLine{*parser}
000083E6 <AB3Scan.ab3@906>   Wend
000083F6 <AB3Scan.ab3@908>   Close_ fid
000083FE <AB3Scan.ab3@910>   Function Return True
00008418 <AB3Scan.ab3@912> End Function
00008446 <AB3Scan.ab3@915> Function.l ab3_Scan{*parser.Parser,path.s}
000084CA <AB3Scan.ab3@918>   If *parser\verbose>1 Then NPrint "INFO Scan ",path
000084EA <AB3Scan.ab3@919>   lock.l = Lock_(&path,#ACCESS_READ)
000084F4 <AB3Scan.ab3@920>   If lock
00008516 <AB3Scan.ab3@921>     If Examine_ (lock,&fib)
00008544 <AB3Scan.ab3@922>       While ExNext_(lock,&fib)><0
00008588 <AB3Scan.ab3@923>         If SetSignal_(0,0)&#SIGBREAKF_CTRL_C Then UnLock_ lock : Function Return False
0000860C <AB3Scan.ab3@925>         filename.s = dos_AddPart{path,Peek.s(&fib\fib_FileName)}
00008624 <AB3Scan.ab3@926>         If fib\fib_DirEntryType<0
00008660 <AB3Scan.ab3@927>           If MatchPatternNoCase_ (&*parser\pattern\str,&fib\fib_FileName)><0 
00008692 <AB3Scan.ab3@929>             ab3_ParseFile{*parser,filename}
00008698 <AB3Scan.ab3@931>         Else
000086AA <AB3Scan.ab3@932>           If *parser\recursive
000086EC <AB3Scan.ab3@933>             If ab3_Scan{*parser,filename} = False
000086FC <AB3Scan.ab3@934>               UnLock_ lock
00008704 <AB3Scan.ab3@935>               Function Return False
0000870A <AB3Scan.ab3@939>       Wend
0000871A <AB3Scan.ab3@941>     UnLock_ lock
00008736 <AB3Scan.ab3@944>   pft_Reset{*parser\filesT}
0000874E <AB3Scan.ab3@945>   While pft_GetNextItem{*parser\filesT}
00008788 <AB3Scan.ab3@946>     status.s   = pft_GetString{*parser\filesT}
000087C2 <AB3Scan.ab3@947>     filename.s = pft_GetKey{*parser\filesT}
000087FA <AB3Scan.ab3@949>     If status="todo"
0000882C <AB3Scan.ab3@950>       ab3_ParseFile{*parser,filename}
00008880 <AB3Scan.ab3@951>       pft_AddItem{*parser\filesT,filename,"done"}
0000889C <AB3Scan.ab3@952>       pft_Reset{*parser\filesT}
000088A2 <AB3Scan.ab3@954>   Wend
000088AA <AB3Scan.ab3@956>   Function Return True
000088D4 <AB3Scan.ab3@958> End Function
000088EA <AB3Scan.ab3@961> Statement ab3_Deinit{}
00008916 <AB3Scan.ab3@963>   If AmiBlitz3\TokenT Then pft_Free{AmiBlitz3\TokenT} : AmiBlitz3\TokenT = Null
00008918 <AB3Scan.ab3@965> End Statement
00008942 <AB3Scan.ab3@968> Function.l ab3_Init{tokenfile.s}
0000896C <AB3Scan.ab3@970>   For n.l=0 To 255
0000897E <AB3Scan.ab3@971>     AmiBlitz3\CharFlags[n] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW |#AB3TF_2BYTETOKEN
0000898E <AB3Scan.ab3@972>   Next
000089A6 <AB3Scan.ab3@974>   AmiBlitz3\CharFlags[   0] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_EOL ; Null
000089BE <AB3Scan.ab3@975>   AmiBlitz3\CharFlags[   1] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SOH
000089D6 <AB3Scan.ab3@976>   AmiBlitz3\CharFlags[   2] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; STX
000089EE <AB3Scan.ab3@977>   AmiBlitz3\CharFlags[   3] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ETX
00008A06 <AB3Scan.ab3@978>   AmiBlitz3\CharFlags[   4] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; EOT
00008A1E <AB3Scan.ab3@979>   AmiBlitz3\CharFlags[   5] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ENQ
00008A36 <AB3Scan.ab3@980>   AmiBlitz3\CharFlags[   6] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ACK
00008A4E <AB3Scan.ab3@981>   AmiBlitz3\CharFlags[   7] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; BELL
00008A66 <AB3Scan.ab3@982>   AmiBlitz3\CharFlags[   8] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; BS  (backspace)
00008A7E <AB3Scan.ab3@983>   AmiBlitz3\CharFlags[   9] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW|#AB3TF_SPACE ; TAB (tabulator)
00008A96 <AB3Scan.ab3@984>   AmiBlitz3\CharFlags[  10] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW|#AB3TF_EOL ; LF  (line feed) Linux Return
00008AAE <AB3Scan.ab3@985>   AmiBlitz3\CharFlags[  11] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; VT
00008AC6 <AB3Scan.ab3@986>   AmiBlitz3\CharFlags[  12] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; FF  (feed forward)
00008ADE <AB3Scan.ab3@987>   AmiBlitz3\CharFlags[  13] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CR  (carrier return) Windows Return
00008AF6 <AB3Scan.ab3@988>   AmiBlitz3\CharFlags[  14] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SO
00008B0E <AB3Scan.ab3@989>   AmiBlitz3\CharFlags[  15] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SI
00008B26 <AB3Scan.ab3@990>   AmiBlitz3\CharFlags[  16] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; DLE
00008B3E <AB3Scan.ab3@991>   AmiBlitz3\CharFlags[  17] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; DC1
00008B56 <AB3Scan.ab3@992>   AmiBlitz3\CharFlags[  18] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CD2
00008B6E <AB3Scan.ab3@993>   AmiBlitz3\CharFlags[  19] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CD3
00008B86 <AB3Scan.ab3@994>   AmiBlitz3\CharFlags[  20] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CD4
00008B9E <AB3Scan.ab3@995>   AmiBlitz3\CharFlags[  21] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; NAK
00008BB6 <AB3Scan.ab3@996>   AmiBlitz3\CharFlags[  22] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SYN
00008BCE <AB3Scan.ab3@997>   AmiBlitz3\CharFlags[  23] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ETB
00008BE6 <AB3Scan.ab3@998>   AmiBlitz3\CharFlags[  24] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CAN (Cancel)
00008BFE <AB3Scan.ab3@999>   AmiBlitz3\CharFlags[  25] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; EM
00008C16 <AB3Scan.ab3@1000>   AmiBlitz3\CharFlags[  26] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SUB
00008C2E <AB3Scan.ab3@1001>   AmiBlitz3\CharFlags[  27] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ESC (Escape)
00008C46 <AB3Scan.ab3@1002>   AmiBlitz3\CharFlags[  28] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; FS
00008C5E <AB3Scan.ab3@1003>   AmiBlitz3\CharFlags[  29] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; GS
00008C76 <AB3Scan.ab3@1004>   AmiBlitz3\CharFlags[  30] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; RS
00008C8E <AB3Scan.ab3@1005>   AmiBlitz3\CharFlags[  31] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; US
00008CA6 <AB3Scan.ab3@1006>   AmiBlitz3\CharFlags[@" "] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY|#AB3TF_SPACE ; Space
00008CBE <AB3Scan.ab3@1007>   AmiBlitz3\CharFlags[@"!"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008CD6 <AB3Scan.ab3@1008>   AmiBlitz3\CharFlags[  34] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY|#AB3TF_QUOT
00008CEE <AB3Scan.ab3@1009>   AmiBlitz3\CharFlags[@"#"] = #AB3TF_STOP | #AB3TF_IS   | #AB3TF_COPY
00008D06 <AB3Scan.ab3@1010>   AmiBlitz3\CharFlags[@"$"] = #AB3TF_STOP | #AB3TF_IS   | #AB3TF_COPY
00008D1E <AB3Scan.ab3@1011>   AmiBlitz3\CharFlags[@"%"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008D36 <AB3Scan.ab3@1012>   AmiBlitz3\CharFlags[@"&"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008D4E <AB3Scan.ab3@1013>   AmiBlitz3\CharFlags[@"'"] = #AB3TF_STOP | #AB3TF_COPY
00008D66 <AB3Scan.ab3@1014>   AmiBlitz3\CharFlags[@"("] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008D7E <AB3Scan.ab3@1015>   AmiBlitz3\CharFlags[@")"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008D96 <AB3Scan.ab3@1016>   AmiBlitz3\CharFlags[@"*"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008DAE <AB3Scan.ab3@1017>   AmiBlitz3\CharFlags[@"+"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008DC6 <AB3Scan.ab3@1018>   AmiBlitz3\CharFlags[@","] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008DDE <AB3Scan.ab3@1019>   AmiBlitz3\CharFlags[@"-"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008DF6 <AB3Scan.ab3@1020>   AmiBlitz3\CharFlags[@"."] = #AB3TF_STOP | #AB3TF_COPY
00008E0E <AB3Scan.ab3@1021>   AmiBlitz3\CharFlags[@"/"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008E26 <AB3Scan.ab3@1022>   AmiBlitz3\CharFlags[@"0"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_BIN |#AB3TF_HEX|#AB3TF_DEC
00008E3E <AB3Scan.ab3@1023>   AmiBlitz3\CharFlags[@"1"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_BIN |#AB3TF_HEX|#AB3TF_DEC
00008E56 <AB3Scan.ab3@1024>   AmiBlitz3\CharFlags[@"2"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008E6E <AB3Scan.ab3@1025>   AmiBlitz3\CharFlags[@"3"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008E86 <AB3Scan.ab3@1026>   AmiBlitz3\CharFlags[@"4"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008E9E <AB3Scan.ab3@1027>   AmiBlitz3\CharFlags[@"5"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008EB6 <AB3Scan.ab3@1028>   AmiBlitz3\CharFlags[@"6"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008ECE <AB3Scan.ab3@1029>   AmiBlitz3\CharFlags[@"7"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008EE6 <AB3Scan.ab3@1030>   AmiBlitz3\CharFlags[@"8"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008EFE <AB3Scan.ab3@1031>   AmiBlitz3\CharFlags[@"9"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008F16 <AB3Scan.ab3@1032>   AmiBlitz3\CharFlags[@":"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008F2E <AB3Scan.ab3@1033>   AmiBlitz3\CharFlags[@";"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COMMENT|#AB3TF_COPY
00008F46 <AB3Scan.ab3@1034>   AmiBlitz3\CharFlags[@"<"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008F5E <AB3Scan.ab3@1035>   AmiBlitz3\CharFlags[@"="] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008F76 <AB3Scan.ab3@1036>   AmiBlitz3\CharFlags[@">"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008F8E <AB3Scan.ab3@1037>   AmiBlitz3\CharFlags[@"?"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008FA6 <AB3Scan.ab3@1038>   AmiBlitz3\CharFlags[@"@"] = #AB3TF_STOP | #AB3TF_COPY
00008FBE <AB3Scan.ab3@1039>   AmiBlitz3\CharFlags[@"A"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00008FD6 <AB3Scan.ab3@1040>   AmiBlitz3\CharFlags[@"B"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00008FEE <AB3Scan.ab3@1041>   AmiBlitz3\CharFlags[@"C"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00009006 <AB3Scan.ab3@1042>   AmiBlitz3\CharFlags[@"D"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
0000901E <AB3Scan.ab3@1043>   AmiBlitz3\CharFlags[@"E"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00009036 <AB3Scan.ab3@1044>   AmiBlitz3\CharFlags[@"F"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
0000904E <AB3Scan.ab3@1045>   AmiBlitz3\CharFlags[@"G"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009066 <AB3Scan.ab3@1046>   AmiBlitz3\CharFlags[@"H"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000907E <AB3Scan.ab3@1047>   AmiBlitz3\CharFlags[@"I"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009096 <AB3Scan.ab3@1048>   AmiBlitz3\CharFlags[@"J"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090AE <AB3Scan.ab3@1049>   AmiBlitz3\CharFlags[@"K"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090C6 <AB3Scan.ab3@1050>   AmiBlitz3\CharFlags[@"L"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090DE <AB3Scan.ab3@1051>   AmiBlitz3\CharFlags[@"M"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090F6 <AB3Scan.ab3@1052>   AmiBlitz3\CharFlags[@"N"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000910E <AB3Scan.ab3@1053>   AmiBlitz3\CharFlags[@"O"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009126 <AB3Scan.ab3@1054>   AmiBlitz3\CharFlags[@"P"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000913E <AB3Scan.ab3@1055>   AmiBlitz3\CharFlags[@"Q"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009156 <AB3Scan.ab3@1056>   AmiBlitz3\CharFlags[@"R"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000916E <AB3Scan.ab3@1057>   AmiBlitz3\CharFlags[@"S"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009186 <AB3Scan.ab3@1058>   AmiBlitz3\CharFlags[@"T"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000919E <AB3Scan.ab3@1059>   AmiBlitz3\CharFlags[@"U"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000091B6 <AB3Scan.ab3@1060>   AmiBlitz3\CharFlags[@"V"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000091CE <AB3Scan.ab3@1061>   AmiBlitz3\CharFlags[@"W"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000091E6 <AB3Scan.ab3@1062>   AmiBlitz3\CharFlags[@"X"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000091FE <AB3Scan.ab3@1063>   AmiBlitz3\CharFlags[@"Y"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009216 <AB3Scan.ab3@1064>   AmiBlitz3\CharFlags[@"Z"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000922E <AB3Scan.ab3@1065>   AmiBlitz3\CharFlags[@"["] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009246 <AB3Scan.ab3@1066>   AmiBlitz3\CharFlags[@"\"] = #AB3TF_STOP | #AB3TF_COPY
0000925E <AB3Scan.ab3@1067>   AmiBlitz3\CharFlags[@"]"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009276 <AB3Scan.ab3@1068>   AmiBlitz3\CharFlags[@"^"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
0000928E <AB3Scan.ab3@1069>   AmiBlitz3\CharFlags[@"_"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000092A6 <AB3Scan.ab3@1070>   AmiBlitz3\CharFlags[@"`"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
000092BE <AB3Scan.ab3@1071>   AmiBlitz3\CharFlags[@"a"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
000092D6 <AB3Scan.ab3@1072>   AmiBlitz3\CharFlags[@"b"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
000092EE <AB3Scan.ab3@1073>   AmiBlitz3\CharFlags[@"c"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
00009306 <AB3Scan.ab3@1074>   AmiBlitz3\CharFlags[@"d"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
0000931E <AB3Scan.ab3@1075>   AmiBlitz3\CharFlags[@"e"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
00009336 <AB3Scan.ab3@1076>   AmiBlitz3\CharFlags[@"f"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
0000934E <AB3Scan.ab3@1077>   AmiBlitz3\CharFlags[@"g"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009366 <AB3Scan.ab3@1078>   AmiBlitz3\CharFlags[@"h"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000937E <AB3Scan.ab3@1079>   AmiBlitz3\CharFlags[@"i"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009396 <AB3Scan.ab3@1080>   AmiBlitz3\CharFlags[@"j"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093AE <AB3Scan.ab3@1081>   AmiBlitz3\CharFlags[@"k"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093C6 <AB3Scan.ab3@1082>   AmiBlitz3\CharFlags[@"l"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093DE <AB3Scan.ab3@1083>   AmiBlitz3\CharFlags[@"m"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093F6 <AB3Scan.ab3@1084>   AmiBlitz3\CharFlags[@"n"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000940E <AB3Scan.ab3@1085>   AmiBlitz3\CharFlags[@"o"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009426 <AB3Scan.ab3@1086>   AmiBlitz3\CharFlags[@"p"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000943E <AB3Scan.ab3@1087>   AmiBlitz3\CharFlags[@"q"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009456 <AB3Scan.ab3@1088>   AmiBlitz3\CharFlags[@"r"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000946E <AB3Scan.ab3@1089>   AmiBlitz3\CharFlags[@"s"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009486 <AB3Scan.ab3@1090>   AmiBlitz3\CharFlags[@"t"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000949E <AB3Scan.ab3@1091>   AmiBlitz3\CharFlags[@"u"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000094B6 <AB3Scan.ab3@1092>   AmiBlitz3\CharFlags[@"v"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000094CE <AB3Scan.ab3@1093>   AmiBlitz3\CharFlags[@"w"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000094E6 <AB3Scan.ab3@1094>   AmiBlitz3\CharFlags[@"x"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000094FE <AB3Scan.ab3@1095>   AmiBlitz3\CharFlags[@"y"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009516 <AB3Scan.ab3@1096>   AmiBlitz3\CharFlags[@"z"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000952E <AB3Scan.ab3@1097>   AmiBlitz3\CharFlags[@"{"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009546 <AB3Scan.ab3@1098>   AmiBlitz3\CharFlags[@"|"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
0000955E <AB3Scan.ab3@1099>   AmiBlitz3\CharFlags[@"}"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009576 <AB3Scan.ab3@1100>   AmiBlitz3\CharFlags[@"~"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
0000958E <AB3Scan.ab3@1101>   AmiBlitz3\CharFlags[ 127] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW
000095C4 <AB3Scan.ab3@1103>   AmiBlitz3\TokenT = pft_Load{tokenfile}
000095DE <AB3Scan.ab3@1105>   If AmiBlitz3\TokenT=Null
000095F2 <AB3Scan.ab3@1106>     AmiBlitz3\TokenT = pft_Create{4096}
00009626 <AB3Scan.ab3@1107>     pftlib_SetInt32{AmiBlitz3\TokenT,"End",#TOKEN_End}
0000965A <AB3Scan.ab3@1108>     pftlib_SetInt32{AmiBlitz3\TokenT,"Return",#TOKEN_Return    } ; $8007
0000968E <AB3Scan.ab3@1109>     pftlib_SetInt32{AmiBlitz3\TokenT,"Statement",#TOKEN_Statement } ; $8008
000096C2 <AB3Scan.ab3@1110>     pftlib_SetInt32{AmiBlitz3\TokenT,"Function",#TOKEN_Function  } ; $8009
000096F6 <AB3Scan.ab3@1111>     pftlib_SetInt32{AmiBlitz3\TokenT,"If",#TOKEN_If        } ; $800B
0000972A <AB3Scan.ab3@1112>     pftlib_SetInt32{AmiBlitz3\TokenT,"While",#TOKEN_While     } ; $800C
0000975E <AB3Scan.ab3@1113>     pftlib_SetInt32{AmiBlitz3\TokenT,"Macro",#TOKEN_Macro     } ; $800D
00009792 <AB3Scan.ab3@1114>     pftlib_SetInt32{AmiBlitz3\TokenT,"Select",#TOKEN_Select    } ; $800E
000097C6 <AB3Scan.ab3@1115>     pftlib_SetInt32{AmiBlitz3\TokenT,"Case",#TOKEN_Case      } ; $800F
000097FA <AB3Scan.ab3@1116>     pftlib_SetInt32{AmiBlitz3\TokenT,"For",#TOKEN_For       } ; $8016
0000982E <AB3Scan.ab3@1117>     pftlib_SetInt32{AmiBlitz3\TokenT,"Then",#TOKEN_Then      } ; $8021
00009862 <AB3Scan.ab3@1118>     pftlib_SetInt32{AmiBlitz3\TokenT,"Stop",#TOKEN_Stop      } ; $802D
00009896 <AB3Scan.ab3@1119>     pftlib_SetInt32{AmiBlitz3\TokenT,"TRAP",#TOKEN_TRAP      } ; $80AE
000098CA <AB3Scan.ab3@1120>     pftlib_SetInt32{AmiBlitz3\TokenT,"Repeat",#TOKEN_Repeat    } ; $80BB
000098FE <AB3Scan.ab3@1121>     pftlib_SetInt32{AmiBlitz3\TokenT,"EndIf",#TOKEN_EndIf     } ; $80C0
00009932 <AB3Scan.ab3@1122>     pftlib_SetInt32{AmiBlitz3\TokenT,"Object",#TOKEN_Object    } ; $80D7
00009966 <AB3Scan.ab3@1123>     pftlib_SetInt32{AmiBlitz3\TokenT,"NEWTYPE",#TOKEN_NEWTYPE   } ; $8001
0000999A <AB3Scan.ab3@1124>     pftlib_SetInt32{AmiBlitz3\TokenT,"INCLUDE",#TOKEN_INCLUDE   } ; $8013
000099CE <AB3Scan.ab3@1125>     pftlib_SetInt32{AmiBlitz3\TokenT,"XINCLUDE",#TOKEN_XINCLUDE  } ; $8012
00009A02 <AB3Scan.ab3@1126>     pftlib_SetInt32{AmiBlitz3\TokenT,"SHARED",#TOKEN_SHARED    } ; $8015
00009A36 <AB3Scan.ab3@1127>     pftlib_SetInt32{AmiBlitz3\TokenT,"DEFTYPE",#TOKEN_DEFTYPE   } ; $8033
00009A6A <AB3Scan.ab3@1128>     pftlib_SetInt32{AmiBlitz3\TokenT,"SizeOf",#TOKEN_SizeOf    } ; $802F
00009A72 <AB3Scan.ab3@1134>   Function Return True
00009A8C <AB3Scan.ab3@1136> End Function
00009A92 <AB3Scan.ab3@1149> err.l        = False ; indicate that an error has occured
00009A98 <AB3Scan.ab3@1150> showhelp.l   = False ; show the CLI tool's help
00009AA0 <AB3Scan.ab3@1153> verbose.l    = 1
00009AA6 <AB3Scan.ab3@1154> recursive.l  = False
00009ACE <AB3Scan.ab3@1155> incpath.s    = ""
00009AD6 <AB3Scan.ab3@1156> dflags.l     = #DF_ALL
00009B22 <AB3Scan.ab3@1157> exefile.s    = dos_GetProgFile{""}
00009B7A <AB3Scan.ab3@1158> tokendir.s   = dos_PathPart{exefile}
00009BEE <AB3Scan.ab3@1159> tokenfile.s  = dos_AddPart{tokendir,"tokens.pft"}
00009C1E <AB3Scan.ab3@1162> filename.s = dos_GetNextArg{} ; first read the filename
00009C56 <AB3Scan.ab3@1163> If filename.s = ""
00009C8E <AB3Scan.ab3@1164>   NPrint "*** ERROR: No filename specified!"
00009C94 <AB3Scan.ab3@1165>   err=True
00009CC4 <AB3Scan.ab3@1170>   arg.s = dos_GetNextArg{} ; get the next CLI argument
00009D10 <AB3Scan.ab3@1171>   larg.s = LCase$(arg) ; lower case the option string
00009DBE <AB3Scan.ab3@1172>   If Left$(larg.s,1) = "-" Then larg=UnRight$(larg,1)
00009DF4 <AB3Scan.ab3@1173>   Select larg
00009E48 <AB3Scan.ab3@1174>     Case "v"  : verbose    = Vallong(dos_GetNextArg{})
00009E78 <AB3Scan.ab3@1175>     Case "h"  : showhelp   = True  ; show the help and quit
00009EA8 <AB3Scan.ab3@1176>     Case "r"  : recursive  = True
00009F02 <AB3Scan.ab3@1177>     Case "i"  : incpath    = dos_GetNextArg{}
00009F5C <AB3Scan.ab3@1178>     Case "t"  : tokenfile  = dos_GetNextArg{}
00009F8E <AB3Scan.ab3@1179>     Case "df" : dflags   = 0
00009FD6 <AB3Scan.ab3@1180>       flags.s = LCase$(dos_GetNextArg{})
0000A036 <AB3Scan.ab3@1181>       If Instr(flags,"f") Then dflags|#DF_FUNCTION
0000A096 <AB3Scan.ab3@1182>       If Instr(flags,"m") Then dflags|#DF_MACRO
0000A0F6 <AB3Scan.ab3@1183>       If Instr(flags,"t") Then dflags|#DF_NEWTYPE
0000A156 <AB3Scan.ab3@1184>       If Instr(flags,"c") Then dflags|#DF_CONSTANT
0000A1B6 <AB3Scan.ab3@1185>       If Instr(flags,"l") Then dflags|#DF_LABEL
0000A216 <AB3Scan.ab3@1186>       If Instr(flags,"s") Then dflags|#DF_SOURCE
0000A276 <AB3Scan.ab3@1187>       If Instr(flags,"n") Then dflags|#DF_FIELD
0000A2D6 <AB3Scan.ab3@1188>       If Instr(flags,"g") Then dflags|#DF_GLOBAL
0000A336 <AB3Scan.ab3@1189>       If Instr(flags,"v") Then dflags|#DF_LOCAL
0000A396 <AB3Scan.ab3@1190>       If Instr(flags,"i") Then dflags|#DF_INCLUDE
0000A3F6 <AB3Scan.ab3@1191>       If Instr(flags,"$") Then dflags|#DF_STRING
0000A3FC <AB3Scan.ab3@1192>     Default
0000A434 <AB3Scan.ab3@1193>       If arg><""
0000A4C8 <AB3Scan.ab3@1194>         NPrint "*** ERROR: Unknown option \\22",arg,"\\22 specified!"
0000A4CE <AB3Scan.ab3@1195>         err = True
0000A4DC <AB3Scan.ab3@1197>   End Select
0000A51A <AB3Scan.ab3@1198> Until arg = "" ; until we processed all arguments
0000A53C <AB3Scan.ab3@1201> If err><False OR showhelp = True
0000A580 <AB3Scan.ab3@1202>   NPrint vers
0000A5B8 <AB3Scan.ab3@1203>   NPrint "Scan an \\22Amiblitz\\22 source code for various properties."
0000A5F0 <AB3Scan.ab3@1204>   NPrint "\\nSyntax: AB3Scan <sourcefile> [options]"
0000A628 <AB3Scan.ab3@1205>   NPrint "  required"
0000A660 <AB3Scan.ab3@1206>   NPrint "  <sourcefile>      : source file to process"
0000A698 <AB3Scan.ab3@1207>   NPrint "  optional"
0000A6D0 <AB3Scan.ab3@1208>   NPrint "  -(df)lags <flags> : flags to indicate what to output:"
0000A708 <AB3Scan.ab3@1209>   NPrint "                      S = source file"
0000A740 <AB3Scan.ab3@1210>   NPrint "                      F = functions"
0000A778 <AB3Scan.ab3@1211>   NPrint "                      M = macros"
0000A7B0 <AB3Scan.ab3@1212>   NPrint "                      T = newtypes"
0000A7E8 <AB3Scan.ab3@1213>   NPrint "                      N = newtype fields"
0000A820 <AB3Scan.ab3@1214>   NPrint "                      C = constants"
0000A858 <AB3Scan.ab3@1215>   NPrint "                      L = labels"
0000A890 <AB3Scan.ab3@1216>   NPrint "                      G = global variables"
0000A8C8 <AB3Scan.ab3@1217>   NPrint "                      V = local variables"
0000A900 <AB3Scan.ab3@1218>   NPrint "                      I = includes"
0000A938 <AB3Scan.ab3@1219>   NPrint "                      $ = strings"
0000A970 <AB3Scan.ab3@1220>   NPrint "  -(i)nclude <path> : include directory"
0000A9A8 <AB3Scan.ab3@1221>   NPrint "  -(t)okens <file>  : prefixtree file with AmiBlitz3 tokens"
0000A9E0 <AB3Scan.ab3@1222>   NPrint "  -(r)ecursive      : scan recursive (XINCLUDES) too"
0000AA18 <AB3Scan.ab3@1223>   NPrint "  -(v)erbose <v>    : verbose level"
0000AA50 <AB3Scan.ab3@1224>   NPrint "  -(h)help          : show this help"
0000AA88 <AB3Scan.ab3@1225>   NPrint "\\nExample:"
0000AAC0 <AB3Scan.ab3@1226>   NPrint "  AB3Scan \\22DH0:Files\MyProgram.ab3\\22 -r -df SFM\\n"
0000AAC6 <AB3Scan.ab3@1227>   End
0000AAFC <AB3Scan.ab3@1230> If dos_IsDir{filename}
0000AB30 <AB3Scan.ab3@1231>   path.s    = filename
0000AB58 <AB3Scan.ab3@1232>   pattern.s = "#?.(bb|bb2|ab2|ab3)"
0000AB5E <AB3Scan.ab3@1233> Else
0000ABB6 <AB3Scan.ab3@1234>   path.s    = dos_PathPart{filename}
0000AC0E <AB3Scan.ab3@1235>   pattern.s = dos_FilePart{filename}
0000AD10 <AB3Scan.ab3@1239> If verbose>1 Then NPrint "INFO Scan \\22",path,"\\22 for \\22",pattern,"\\22..."
0000AD3E <AB3Scan.ab3@1240> ab3_Init{tokenfile}
0000ADA4 <AB3Scan.ab3@1241> *parser.Parser = ab3_CreateParser{incpath,pattern,recursive,dflags,verbose}
0000ADF6 <AB3Scan.ab3@1242> If *parser = Null Then NPrint "*** Unable to create AB3 Parser!" : Goto exit
0000AE28 <AB3Scan.ab3@1243> ab3_Scan{*parser,path}
0000AE78 <AB3Scan.ab3@1246> If *parser\verbose>1 Then NPrint "INFO Done."
0000AE92 <AB3Scan.ab3@1248> If *parser Then ab3_FreeParser{*parser} : *parser = Null
0000AE98 <AB3Scan.ab3@1249> ab3_Deinit{}
0000AE9E <AB3Scan.ab3@1250> End
0000AEA4 <AB3Scan.ab3@1252> Dc.b "$VER: "
0000AEC9 <AB3Scan.ab3@1254> Dc.b "AB3Scan \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0
0000AED5 <AB3Scan.ab3@1256> Dc.b "AB3Scan \\__VER_MAJOR.\\__VER_MINOR",0
