00000008 <AB3Scan.ab3@0> 
00000014 <AB3Scan.ab3@2> optimize 7
00000014 <error.include.ab3@1> XINCLUDE "error.include.ab3"
0000004C <error.include.ab3@62> XINCLUDE "error.include.ab3"
00000074 <error.include.ab3@63> XINCLUDE "error.include.ab3"
0000009C <error.include.ab3@64> XINCLUDE "error.include.ab3"
000000C4 <error.include.ab3@65> XINCLUDE "error.include.ab3"
000000CA <error.include.ab3@66> XINCLUDE "error.include.ab3"
000000FE <error.include.ab3@67> XINCLUDE "error.include.ab3"
00000132 <error.include.ab3@68> XINCLUDE "error.include.ab3"
00000166 <error.include.ab3@69> XINCLUDE "error.include.ab3"
00000182 <error.include.ab3@73> XINCLUDE "error.include.ab3"
0000019C <error.include.ab3@99> XINCLUDE "error.include.ab3"
000001A8 <error.include.ab3@101> XINCLUDE "error.include.ab3"
000001AC <error.include.ab3@102> XINCLUDE "error.include.ab3"
000001BA <error.include.ab3@104> XINCLUDE "error.include.ab3"
000001FC <error.include.ab3@124> XINCLUDE "error.include.ab3"
00000280 <error.include.ab3@126> XINCLUDE "error.include.ab3"
000002EC <error.include.ab3@127> XINCLUDE "error.include.ab3"
00000306 <error.include.ab3@129> XINCLUDE "error.include.ab3"
0000033E <error.include.ab3@130> XINCLUDE "error.include.ab3"
0000039E <error.include.ab3@131> XINCLUDE "error.include.ab3"
000003AC <error.include.ab3@133> XINCLUDE "error.include.ab3"
000003BA <error.include.ab3@134> XINCLUDE "error.include.ab3"
000003C8 <error.include.ab3@135> XINCLUDE "error.include.ab3"
000003D6 <error.include.ab3@136> XINCLUDE "error.include.ab3"
000003FE <error.include.ab3@137> XINCLUDE "error.include.ab3"
0000040C <error.include.ab3@138> XINCLUDE "error.include.ab3"
00000414 <error.include.ab3@139> XINCLUDE "error.include.ab3"
00000446 <error.include.ab3@141> XINCLUDE "error.include.ab3"
00000460 <error.include.ab3@146> XINCLUDE "error.include.ab3"
00000498 <error.include.ab3@147> XINCLUDE "error.include.ab3"
0000049E <error.include.ab3@148> XINCLUDE "error.include.ab3"
000004E2 <error.include.ab3@149> XINCLUDE "error.include.ab3"
0000052A <error.include.ab3@150> XINCLUDE "error.include.ab3"
00000534 <error.include.ab3@154> XINCLUDE "error.include.ab3"
0000054E <error.include.ab3@156> XINCLUDE "error.include.ab3"
0000054E <AB3Scan.ab3@6> XINCLUDE "error.include.ab3"
0000055A <AB3Scan.ab3@7> error_SetFlags{#error_stdout}
0000055A <ab3support.include.ab3@1> XINCLUDE "ab3support.include.ab3"
00000562 <ab3support.include.ab3@44> XINCLUDE "ab3support.include.ab3"
0000057C <ab3support.include.ab3@57> XINCLUDE "ab3support.include.ab3"
00000586 <ab3support.include.ab3@60> XINCLUDE "ab3support.include.ab3"
000005A8 <ab3support.include.ab3@61> XINCLUDE "ab3support.include.ab3"
000005BE <ab3support.include.ab3@62> XINCLUDE "ab3support.include.ab3"
000005D8 <ab3support.include.ab3@64> XINCLUDE "ab3support.include.ab3"
0000060A <ab3support.include.ab3@65> XINCLUDE "ab3support.include.ab3"
00000614 <ab3support.include.ab3@66> XINCLUDE "ab3support.include.ab3"
0000061A <ab3support.include.ab3@67> XINCLUDE "ab3support.include.ab3"
00000620 <ab3support.include.ab3@68> XINCLUDE "ab3support.include.ab3"
0000062A <ab3support.include.ab3@75> XINCLUDE "ab3support.include.ab3"
00000630 <ab3support.include.ab3@77> XINCLUDE "ab3support.include.ab3"
00000646 <ab3support.include.ab3@80> XINCLUDE "ab3support.include.ab3"
00000650 <ab3support.include.ab3@82> XINCLUDE "ab3support.include.ab3"
00000666 <ab3support.include.ab3@84> XINCLUDE "ab3support.include.ab3"
00000668 <ab3support.include.ab3@87> XINCLUDE "ab3support.include.ab3"
00000696 <ab3support.include.ab3@88> XINCLUDE "ab3support.include.ab3"
000006C4 <ab3support.include.ab3@105> XINCLUDE "ab3support.include.ab3"
000006EC <ab3support.include.ab3@106> XINCLUDE "ab3support.include.ab3"
00000726 <ab3support.include.ab3@112> XINCLUDE "ab3support.include.ab3"
00000758 <ab3support.include.ab3@115> XINCLUDE "ab3support.include.ab3"
0000078E <ab3support.include.ab3@118> XINCLUDE "ab3support.include.ab3"
000007BC <ab3support.include.ab3@120> XINCLUDE "ab3support.include.ab3"
000007EE <ab3support.include.ab3@122> XINCLUDE "ab3support.include.ab3"
00000818 <ab3support.include.ab3@123> XINCLUDE "ab3support.include.ab3"
00000846 <ab3support.include.ab3@124> XINCLUDE "ab3support.include.ab3"
00000874 <ab3support.include.ab3@125> XINCLUDE "ab3support.include.ab3"
0000089E <ab3support.include.ab3@129> XINCLUDE "ab3support.include.ab3"
0000089E <AB3Scan.ab3@9> XINCLUDE "ab3support.include.ab3"
000008FA <AB3Scan.ab3@11> If AB3Support_OpenLib{2}=False Then error{"Please install ab3support.library v2!"} : End
000008FA <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
000008FA <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
000008FA <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
000008FA <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008FA <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000924 <strptr.include.ab3@40> XINCLUDE "dos.include.ab3"
0000093E <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000948 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000998 <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
0000099C <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
000009BE <strptr.include.ab3@159> XINCLUDE "dos.include.ab3"
000009C8 <strptr.include.ab3@160> XINCLUDE "dos.include.ab3"
00000A18 <strptr.include.ab3@161> XINCLUDE "dos.include.ab3"
00000A22 <strptr.include.ab3@162> XINCLUDE "dos.include.ab3"
00000A34 <strptr.include.ab3@163> XINCLUDE "dos.include.ab3"
00000A3C <strptr.include.ab3@164> XINCLUDE "dos.include.ab3"
00000A6A <strptr.include.ab3@165> XINCLUDE "dos.include.ab3"
00000A7C <strptr.include.ab3@167> XINCLUDE "dos.include.ab3"
00000A9E <strptr.include.ab3@169> XINCLUDE "dos.include.ab3"
00000AA8 <strptr.include.ab3@173> XINCLUDE "dos.include.ab3"
00000AB6 <strptr.include.ab3@174> XINCLUDE "dos.include.ab3"
00000AC0 <strptr.include.ab3@175> XINCLUDE "dos.include.ab3"
00000AE6 <strptr.include.ab3@176> XINCLUDE "dos.include.ab3"
00000B00 <strptr.include.ab3@177> XINCLUDE "dos.include.ab3"
00000B04 <strptr.include.ab3@182> XINCLUDE "dos.include.ab3"
00000B32 <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000B3C <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000B8C <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000BA0 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000BB2 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000BD4 <strptr.include.ab3@203> XINCLUDE "dos.include.ab3"
00000BDE <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000BEC <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000BF6 <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000C1E <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000C38 <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000C50 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000C6A <strptr.include.ab3@240> XINCLUDE "dos.include.ab3"
00000C80 <strptr.include.ab3@241> XINCLUDE "dos.include.ab3"
00000C8C <strptr.include.ab3@242> XINCLUDE "dos.include.ab3"
00000C92 <strptr.include.ab3@243> XINCLUDE "dos.include.ab3"
00000CAC <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000CB6 <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000CC4 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000CF6 <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000D14 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000D1E <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000D34 <strptr.include.ab3@291> XINCLUDE "dos.include.ab3"
00000D3E <strptr.include.ab3@292> XINCLUDE "dos.include.ab3"
00000D4E <strptr.include.ab3@293> XINCLUDE "dos.include.ab3"
00000D56 <strptr.include.ab3@294> XINCLUDE "dos.include.ab3"
00000D58 <strptr.include.ab3@296> XINCLUDE "dos.include.ab3"
00000D86 <strptr.include.ab3@297> XINCLUDE "dos.include.ab3"
00000D86 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000D9C <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00000DB6 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
00000DC0 <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
00000DE2 <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00000E06 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00000E18 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
00000E30 <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00000E44 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
00000E56 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
00000E66 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
00000E6C <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
00000E7C <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
00000E8C <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
00000EA6 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
00000EAA <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00000EC4 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00000EF4 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
00000EFE <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00000F08 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00000F2A <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
00000F4E <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
00000F60 <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
00000F78 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
00000F8C <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
00000F9E <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
00000FAE <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00000FB4 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00000FC4 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00000FD4 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
00000FEE <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00000FF4 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00000FFA <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
00000FFE <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001018 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
00001020 <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
0000102A <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
00001040 <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
00001054 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
00001080 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
0000108E <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
00001098 <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
0000109E <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000010A8 <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000010AE <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
000010CC <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
000010D4 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
000010DE <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
000010FC <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001112 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
00001126 <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
00001162 <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
00001170 <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
0000117A <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
00001180 <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
0000118A <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
0000118E <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
00001194 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000011AE <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000011B8 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000011C2 <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
000011E8 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
000011F2 <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
000011F8 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
000011FC <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000121E <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001226 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
00001260 <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
00001274 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
0000130C <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
0000131E <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
00001346 <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000013A4 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
000013DE <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
000013E4 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000141E <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001458 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
0000146A <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
00001474 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
0000147A <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
00001484 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
00001498 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
000014DE <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
000014E6 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001504 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
00001530 <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000154E <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001568 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
00001582 <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001604 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001618 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
00001630 <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001636 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000164E <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001664 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
0000167E <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
00001692 <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
000016FE <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001734 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001764 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
000017F4 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
000017FA <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001808 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001866 <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
0000189C <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
000018D2 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
000018EC <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
000018FA <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001934 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
0000196A <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
0000199A <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
000019A8 <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
000019B2 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
000019B8 <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
000019C2 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
000019D6 <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
000019D6 <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
000019D6 <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
000019EC <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
000019F6 <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001A0E <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001A10 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001A3E <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001A3E <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001A54 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001A5C <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001A64 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001A8C <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001A94 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001ABC <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001AE4 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001B0C <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001B14 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001B1C <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001B24 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001B2C <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001B34 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001B3C <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001B44 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001B4C <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001B54 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001B74 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001B7C <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001B84 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001BAC <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001BC2 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001BCE <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001BD2 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001BE8 <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001C02 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001C18 <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001C42 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001C4C <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001C82 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001C98 <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001CC2 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001CCC <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001CD2 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001CE8 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001CFA <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
00001D74 <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00001D9E <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
00001DB6 <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00001DCC <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
00001DCE <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
00001E08 <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00001E3C <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00001E62 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00001E82 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00001EA2 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
00001ECC <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
00001EE2 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
00001EEC <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00001F14 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
00001F1A <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00001F42 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00001F6C <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
00001FB4 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002024 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
0000204E <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
0000206C <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
00002082 <dos.include.ab3@1037> XINCLUDE "dos.include.ab3"
00002088 <dos.include.ab3@1040> XINCLUDE "dos.include.ab3"
0000208E <dos.include.ab3@1041> XINCLUDE "dos.include.ab3"
0000209E <dos.include.ab3@1042> XINCLUDE "dos.include.ab3"
000020A4 <dos.include.ab3@1043> XINCLUDE "dos.include.ab3"
000020A8 <dos.include.ab3@1045> XINCLUDE "dos.include.ab3"
000020AA <dos.include.ab3@1048> XINCLUDE "dos.include.ab3"
000020C4 <dos.include.ab3@1089> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@1090> XINCLUDE "dos.include.ab3"
000020FA <dos.include.ab3@1091> XINCLUDE "dos.include.ab3"
00002112 <dos.include.ab3@1094> XINCLUDE "dos.include.ab3"
0000211C <dos.include.ab3@1095> XINCLUDE "dos.include.ab3"
00002132 <dos.include.ab3@1096> XINCLUDE "dos.include.ab3"
0000214E <dos.include.ab3@1097> XINCLUDE "dos.include.ab3"
0000217C <dos.include.ab3@1098> XINCLUDE "dos.include.ab3"
000021A6 <dos.include.ab3@1103> XINCLUDE "dos.include.ab3"
000021BE <dos.include.ab3@1104> XINCLUDE "dos.include.ab3"
000021E8 <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
000021F6 <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
000022BC <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
0000230E <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002338 <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002362 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002380 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
000023AA <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002416 <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
0000243E <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
0000244C <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002480 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
0000248E <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
000024E8 <dos.include.ab3@1199> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@1200> XINCLUDE "dos.include.ab3"
000025B4 <dos.include.ab3@1201> XINCLUDE "dos.include.ab3"
000025C2 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
000025E6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002610 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
0000266E <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002674 <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
0000267E <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00002688 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
000026A6 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
000026AC <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
000026B2 <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
000026C8 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
000026D0 <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
000026F8 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
00002702 <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
0000270C <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
00002720 <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
00002736 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
0000273C <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
00002760 <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
000027A8 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
000027AE <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
000027DA <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
000027DC <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
0000280A <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
00002834 <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00002848 <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00002886 <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
0000296C <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00002972 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
000029C2 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
000029EC <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00002A0A <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00002A34 <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00002A48 <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00002A86 <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00002B6C <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00002B72 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00002BE4 <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00002C0E <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00002C2C <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
00002C66 <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
00002C9E <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00002CF6 <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00002D5A <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
00002D84 <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
00002DA4 <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
00002DCE <dos.include.ab3@2643> XINCLUDE "dos.include.ab3"
00002DD4 <dos.include.ab3@2645> XINCLUDE "dos.include.ab3"
00002E14 <dos.include.ab3@2646> XINCLUDE "dos.include.ab3"
00002E34 <dos.include.ab3@2647> XINCLUDE "dos.include.ab3"
00002E5A <dos.include.ab3@2648> XINCLUDE "dos.include.ab3"
00002E86 <dos.include.ab3@2649> XINCLUDE "dos.include.ab3"
00002E9E <dos.include.ab3@2650> XINCLUDE "dos.include.ab3"
00002EA4 <dos.include.ab3@2651> XINCLUDE "dos.include.ab3"
00002EAA <dos.include.ab3@2652> XINCLUDE "dos.include.ab3"
00002EB0 <dos.include.ab3@2653> XINCLUDE "dos.include.ab3"
00002EC0 <dos.include.ab3@2656> XINCLUDE "dos.include.ab3"
00002ECA <dos.include.ab3@2658> XINCLUDE "dos.include.ab3"
00002EE4 <dos.include.ab3@2659> XINCLUDE "dos.include.ab3"
00002EE4 <AB3Scan.ab3@13> XINCLUDE "dos.include.ab3"
00002EE4 <prefixtree.include.ab3@1> XINCLUDE "prefixtree.include.ab3"
00002F0C <prefixtree.include.ab3@36> XINCLUDE "prefixtree.include.ab3"
00002F3A <prefixtree.include.ab3@39> XINCLUDE "prefixtree.include.ab3"
00002F6E <prefixtree.include.ab3@41> XINCLUDE "prefixtree.include.ab3"
00002F94 <prefixtree.include.ab3@42> XINCLUDE "prefixtree.include.ab3"
00002FB4 <prefixtree.include.ab3@43> XINCLUDE "prefixtree.include.ab3"
00002FD2 <prefixtree.include.ab3@45> XINCLUDE "prefixtree.include.ab3"
00002FF0 <prefixtree.include.ab3@47> XINCLUDE "prefixtree.include.ab3"
00003068 <prefixtree.include.ab3@49> XINCLUDE "prefixtree.include.ab3"
00003082 <prefixtree.include.ab3@52> XINCLUDE "prefixtree.include.ab3"
0000309C <prefixtree.include.ab3@53> XINCLUDE "prefixtree.include.ab3"
000030B0 <prefixtree.include.ab3@54> XINCLUDE "prefixtree.include.ab3"
000030BA <prefixtree.include.ab3@55> XINCLUDE "prefixtree.include.ab3"
000030C0 <prefixtree.include.ab3@56> XINCLUDE "prefixtree.include.ab3"
000030FA <prefixtree.include.ab3@59> XINCLUDE "prefixtree.include.ab3"
00003114 <prefixtree.include.ab3@61> XINCLUDE "prefixtree.include.ab3"
00003128 <prefixtree.include.ab3@63> XINCLUDE "prefixtree.include.ab3"
0000314E <prefixtree.include.ab3@64> XINCLUDE "prefixtree.include.ab3"
0000316E <prefixtree.include.ab3@65> XINCLUDE "prefixtree.include.ab3"
0000318C <prefixtree.include.ab3@67> XINCLUDE "prefixtree.include.ab3"
00003196 <prefixtree.include.ab3@69> XINCLUDE "prefixtree.include.ab3"
000031B0 <prefixtree.include.ab3@82> XINCLUDE "prefixtree.include.ab3"
000031C4 <prefixtree.include.ab3@84> XINCLUDE "prefixtree.include.ab3"
000031EA <prefixtree.include.ab3@85> XINCLUDE "prefixtree.include.ab3"
0000320A <prefixtree.include.ab3@86> XINCLUDE "prefixtree.include.ab3"
00003228 <prefixtree.include.ab3@88> XINCLUDE "prefixtree.include.ab3"
00003232 <prefixtree.include.ab3@90> XINCLUDE "prefixtree.include.ab3"
00003270 <prefixtree.include.ab3@92> XINCLUDE "prefixtree.include.ab3"
000032C0 <prefixtree.include.ab3@94> XINCLUDE "prefixtree.include.ab3"
000032DC <prefixtree.include.ab3@96> XINCLUDE "prefixtree.include.ab3"
00003306 <prefixtree.include.ab3@105> XINCLUDE "prefixtree.include.ab3"
00003332 <prefixtree.include.ab3@107> XINCLUDE "prefixtree.include.ab3"
00003342 <prefixtree.include.ab3@108> XINCLUDE "prefixtree.include.ab3"
00003348 <prefixtree.include.ab3@109> XINCLUDE "prefixtree.include.ab3"
0000334E <prefixtree.include.ab3@110> XINCLUDE "prefixtree.include.ab3"
00003358 <prefixtree.include.ab3@112> XINCLUDE "prefixtree.include.ab3"
00003372 <prefixtree.include.ab3@114> XINCLUDE "prefixtree.include.ab3"
00003372 <AB3Scan.ab3@15> XINCLUDE "prefixtree.include.ab3"
0000339C <AB3Scan.ab3@28> vers.s = Peek.s(?version)
000033C6 <AB3Scan.ab3@129> Function.s GetDosFileName{filename.s}
000033DC <AB3Scan.ab3@131>   MaxLen buff.s = 1024
000033FC <AB3Scan.ab3@133>   lock.l = Lock_(&filename,#ACCESS_READ);
00003406 <AB3Scan.ab3@134>   If lock
0000342A <AB3Scan.ab3@135>     NameFromLock_ lock,&buff,1023
00003454 <AB3Scan.ab3@136>     filename = Peek.s(&buff)
0000346C <AB3Scan.ab3@137>     UnLock_ lock : lock=0
00003496 <AB3Scan.ab3@140>   Function Return filename
000034B4 <AB3Scan.ab3@142> End Function
000034D2 <AB3Scan.ab3@145> Function.l FAST _ab3_ParseComment{*parser.Parser,cpos.l}
000034E4 <AB3Scan.ab3@147>   If cpos<2
000034FC <AB3Scan.ab3@149>   If *parser\ab3header=#AB3H_FOUND
0000351E <AB3Scan.ab3@150>     While cpos<*parser\clength-4
0000354A <AB3Scan.ab3@151>       If Peek.b(*parser\bptr+cpos)=@"/"
00003558 <AB3Scan.ab3@152>         cpos+1
00003584 <AB3Scan.ab3@153>         If Peek.b(*parser\bptr+cpos)=@"X"
00003592 <AB3Scan.ab3@154>           cpos+1
000035BE <AB3Scan.ab3@155>           If Peek.b(*parser\bptr+cpos)=@"T"
000035CC <AB3Scan.ab3@156>             cpos+1
000035F8 <AB3Scan.ab3@157>             If Peek.b(*parser\bptr+cpos)=@"R"
00003606 <AB3Scan.ab3@158>               cpos+1
00003632 <AB3Scan.ab3@159>               If Peek.b(*parser\bptr+cpos)=@"A"
00003640 <AB3Scan.ab3@160>                 *parser\linecount=0
0000364E <AB3Scan.ab3@161>                 *parser\ab3header = #AB3H_DONE
0000365C <AB3Scan.ab3@167>       cpos+1
00003662 <AB3Scan.ab3@168>     Wend
0000367A <AB3Scan.ab3@171>   If *parser\ab3header=#AB3H_SEARCH
0000369C <AB3Scan.ab3@172>     While cpos<*parser\clength-3
000036C8 <AB3Scan.ab3@173>       If Peek.b(*parser\bptr+cpos)=@"X"
000036D6 <AB3Scan.ab3@174>         cpos+1
00003702 <AB3Scan.ab3@175>         If Peek.b(*parser\bptr+cpos)=@"T"
00003710 <AB3Scan.ab3@176>           cpos+1
0000373C <AB3Scan.ab3@177>           If Peek.b(*parser\bptr+cpos)=@"R"
0000374A <AB3Scan.ab3@178>             cpos+1
00003776 <AB3Scan.ab3@179>             If Peek.b(*parser\bptr+cpos)=@"A"
00003784 <AB3Scan.ab3@180>               *parser\ab3header = #AB3H_FOUND
00003792 <AB3Scan.ab3@185>       cpos+1
00003798 <AB3Scan.ab3@186>     Wend
000037A8 <AB3Scan.ab3@190>   Function Return *parser\clength; just skip to end of line
000037AE <AB3Scan.ab3@192> End Function
000037D0 <AB3Scan.ab3@195> Function.l FAST _ab3_SkipTill{*parser.Parser,cpos.l,char.b}
000037EC <AB3Scan.ab3@197>   While cpos<*parser\clength
00003808 <AB3Scan.ab3@198>     c.b = Peek.b(*parser\bptr+cpos)
00003826 <AB3Scan.ab3@199>     If c=char Then Function Return cpos
00003834 <AB3Scan.ab3@200>     cpos+1
0000383A <AB3Scan.ab3@201>   Wend
00003844 <AB3Scan.ab3@202>   Function Return cpos
0000384A <AB3Scan.ab3@204> End Function
00003868 <AB3Scan.ab3@207> Function.l _ab3_ParseString{*parser.Parser,cpos.l}
00003890 <AB3Scan.ab3@209>   bpos.l = cpos-1 : If bpos<0 Then bpos=0
000038AC <AB3Scan.ab3@210>   While cpos<*parser\clength
000038DC <AB3Scan.ab3@211>     c.w = Peek.b(*parser\bptr+cpos)&$FF : cpos+1
000038FE <AB3Scan.ab3@212>     If AmiBlitz3\CharFlags[c]&#AB3TF_QUOT
0000391E <AB3Scan.ab3@214>         If *parser\dflags&(#DF_STRING)><0
0000395A <AB3Scan.ab3@215>           string.s = Peeks$(*parser\bptr+bpos,cpos-bpos)
000039FE <AB3Scan.ab3@216>           NPrint "STRING\\09",*parser\linecount,"\\09",string
00003A08 <AB3Scan.ab3@219>       Function Return cpos
00003A0E <AB3Scan.ab3@221>   Wend
00003A18 <AB3Scan.ab3@222>   Function Return cpos
00003A2C <AB3Scan.ab3@224> End Function
00003A4A <AB3Scan.ab3@227> Function.l FAST _ab3_SkipWhiteSpaces{*parser.Parser,cpos.l}
00003ABC <AB3Scan.ab3@229>   While cpos<*parser\clength AND AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]&#AB3TF_SPACE : cpos+1 : Wend
00003AC6 <AB3Scan.ab3@230>   Function Return cpos
00003ACC <AB3Scan.ab3@232> End Function
00003AEA <AB3Scan.ab3@235> Function.l FAST _ab3_SkipToken{*parser.Parser,cpos.l}
00003AF2 <AB3Scan.ab3@237>   cf.l = 0
00003B28 <AB3Scan.ab3@238>   While (cf&#AB3TF_STOP)=0 AND cpos<*parser\clength
00003B56 <AB3Scan.ab3@239>     cpos+1 : If cpos>=*parser\clength Then Function Return cpos
00003B8C <AB3Scan.ab3@240>     cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00003B92 <AB3Scan.ab3@241>   Wend
00003B9C <AB3Scan.ab3@242>   Function Return cpos
00003BA2 <AB3Scan.ab3@244> End Function
00003BC0 <AB3Scan.ab3@247> Function.l _ab3_ParseNewtype{*parser.Parser,cpos.l}
00003BCA <AB3Scan.ab3@249>   *parser\in_newtype=False
00003C04 <AB3Scan.ab3@250>   If *parser\first><False AND *parser\dflags&(#DF_NEWTYPE|#DF_FIELD)><0
00003C54 <AB3Scan.ab3@251>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Newtype..."
00003C7C <AB3Scan.ab3@252>     name.s     = ""
00003CA4 <AB3Scan.ab3@253>     comment.s  = ""
00003CB6 <AB3Scan.ab3@254>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00003CD2 <AB3Scan.ab3@255>     c.b = Peek.b(*parser\bptr + cpos)
00003CE6 <AB3Scan.ab3@256>     If c = @"."
00003CF4 <AB3Scan.ab3@257>       opos.l = cpos+1
00003D06 <AB3Scan.ab3@258>       cpos.l = _ab3_SkipToken{*parser,cpos}
00003D42 <AB3Scan.ab3@259>       name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00003D5A <AB3Scan.ab3@261>       cpos = _ab3_SkipTill{*parser,cpos,@";"}
00003D88 <AB3Scan.ab3@262>       If cpos<*parser\clength Then cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
00003D9E <AB3Scan.ab3@263>       If cpos<*parser\clength
00003DE0 <AB3Scan.ab3@264>         comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
00003DEE <AB3Scan.ab3@265>         cpos = *parser\clength
00003E1A <AB3Scan.ab3@267>       If name
00003E3A <AB3Scan.ab3@268>         If *parser\dflags&(#DF_NEWTYPE)><0
00003F3A <AB3Scan.ab3@269>           NPrint "NEWTYPE\\09",*parser\linecount,"\\09",name,"\\09",comment
00003F5A <AB3Scan.ab3@271>         If *parser\dflags&(#DF_FIELD)><0
00003F64 <AB3Scan.ab3@272>           *parser\in_newtype = True
00003F6A <AB3Scan.ab3@274>       Else
00003FBA <AB3Scan.ab3@275>         If *parser\verbose>=#VB_INFO Then NPrint "ERROR Newtype, unable to find name???"
00003FC0 <AB3Scan.ab3@277>     Else
00004010 <AB3Scan.ab3@278>       If *parser\verbose>=#VB_INFO Then NPrint "ERROR Newtype, but no . following???"
0000401A <AB3Scan.ab3@282>   Function Return cpos
0000402E <AB3Scan.ab3@284> End Function
00004058 <AB3Scan.ab3@287> Function.l ab3_GetIncludeLock{filename.s}
00004078 <AB3Scan.ab3@288>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000040D0 <AB3Scan.ab3@289>   ex.s       = dos_GetExt{filename}
000040E4 <AB3Scan.ab3@291>   If incLock = False
00004158 <AB3Scan.ab3@292>     filename = dos_SetExt{filename,"ab3"}
00004178 <AB3Scan.ab3@293>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0000418C <AB3Scan.ab3@296>   If incLock = False
00004200 <AB3Scan.ab3@297>     filename = dos_SetExt{filename,"ab2"}
00004220 <AB3Scan.ab3@298>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00004234 <AB3Scan.ab3@301>   If incLock = False
000042A8 <AB3Scan.ab3@302>     filename = dos_SetExt{filename,"bb2"}
000042C8 <AB3Scan.ab3@303>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000042DC <AB3Scan.ab3@306>   If incLock = False
0000436E <AB3Scan.ab3@307>     filename = dos_SetExt{filename,ex+".ab3"}
0000438E <AB3Scan.ab3@308>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
000043A2 <AB3Scan.ab3@311>   If incLock = False
00004416 <AB3Scan.ab3@312>     filename = dos_SetExt{filename,"ab2"}
00004436 <AB3Scan.ab3@313>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
0000444A <AB3Scan.ab3@316>   If incLock = False
000044BE <AB3Scan.ab3@317>     filename = dos_SetExt{filename,"bb2"}
000044DE <AB3Scan.ab3@318>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
000044E8 <AB3Scan.ab3@321>   Function Return incLock
00004502 <AB3Scan.ab3@322> End Function
00004520 <AB3Scan.ab3@325> Function.l _ab3_ParseInclude{*parser.Parser,cpos.l}
0000456A <AB3Scan.ab3@327>   If *parser\first><False AND str_Len{*parser\incpath}>0
000045BA <AB3Scan.ab3@328>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Include..."
000045E2 <AB3Scan.ab3@329>     name.s     = ""
0000460A <AB3Scan.ab3@330>     comment.s  = ""
0000461C <AB3Scan.ab3@331>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00004646 <AB3Scan.ab3@332>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00004664 <AB3Scan.ab3@333>     If c<0 Then Function Return cpos-1
00004672 <AB3Scan.ab3@335>     If c = $22
00004680 <AB3Scan.ab3@336>       opos.l = cpos-1
00004696 <AB3Scan.ab3@337>       cpos = _ab3_SkipTill{*parser,cpos,$22}
000046AC <AB3Scan.ab3@338>       If cpos<*parser\clength
000046BE <AB3Scan.ab3@340>       cpos.l = _ab3_SkipToken{*parser,cpos}
000046FA <AB3Scan.ab3@341>       name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00004712 <AB3Scan.ab3@343>       cpos = _ab3_SkipTill{*parser,cpos,@";"}
00004740 <AB3Scan.ab3@344>       If cpos<*parser\clength Then cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
00004756 <AB3Scan.ab3@345>       If cpos<*parser\clength
00004798 <AB3Scan.ab3@346>         comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
000047C4 <AB3Scan.ab3@348>       If name
00004842 <AB3Scan.ab3@349>         name = Replace$(name,"\\22","")
000048C8 <AB3Scan.ab3@351>         filename.s = dos_AddPart{str_Read{&*parser\path},name}
000048FA <AB3Scan.ab3@352>         lock.l = ab3_GetIncludeLock{filename}
0000490C <AB3Scan.ab3@353>         If lock=0
00004992 <AB3Scan.ab3@354>           filename.s = dos_AddPart{str_Read{&*parser\incpath},name}
000049C4 <AB3Scan.ab3@355>           lock.l = ab3_GetIncludeLock{filename}
000049CE <AB3Scan.ab3@357>         If lock
000049E4 <AB3Scan.ab3@358>           MaxLen dosname.s = 1024
00004A08 <AB3Scan.ab3@359>           NameFromLock_ lock,&dosname,1023
00004A20 <AB3Scan.ab3@360>           UnLock_ lock : lock=0
00004A4A <AB3Scan.ab3@361>           dosname.s = Peek.s(&dosname) ; GetDosFileName{filename}
00004AB0 <AB3Scan.ab3@362>           If pft_FindItem{*parser\filesT,dosname}=""
00004B04 <AB3Scan.ab3@363>             pft_AddItem{*parser\filesT,dosname,"todo"}
00004B1E <AB3Scan.ab3@365>           If *parser\dflags&#DF_INCLUDE
00004C1E <AB3Scan.ab3@366>             NPrint "INCLUDE\\09",*parser\linecount,"\\09",dosname,"\\09",comment
00004C24 <AB3Scan.ab3@368>         Else
00004CD0 <AB3Scan.ab3@369>           If *parser\verbose>=#VB_INFO Then NPrint "ERROR Unable to find include: \\22",filename,"\\22"
00004CDA <AB3Scan.ab3@376>   Function Return cpos
00004CEE <AB3Scan.ab3@378> End Function
00004D0C <AB3Scan.ab3@381> Function.l _ab3_ParseMacro{*parser.Parser,cpos.l}
00004D46 <AB3Scan.ab3@383>   If *parser\first><False AND *parser\dflags&#DF_MACRO><0
00004D96 <AB3Scan.ab3@384>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Macro..."
00004DBE <AB3Scan.ab3@385>     name.s     = ""
00004DE6 <AB3Scan.ab3@386>     comment.s  = ""
00004DF8 <AB3Scan.ab3@387>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00004DFE <AB3Scan.ab3@388>     opos.l = cpos
00004E10 <AB3Scan.ab3@389>     cpos.l = _ab3_SkipToken{*parser,cpos}
00004E4C <AB3Scan.ab3@390>     name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00004E64 <AB3Scan.ab3@392>     cpos = _ab3_SkipTill{*parser,cpos,@";"}
00004E92 <AB3Scan.ab3@393>     If cpos<*parser\clength Then cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
00004EA8 <AB3Scan.ab3@394>     If cpos<*parser\clength
00004EEA <AB3Scan.ab3@395>       comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
00004F16 <AB3Scan.ab3@397>     If name
00005016 <AB3Scan.ab3@398>       NPrint "MACRO\\09",*parser\linecount,"\\09",name,"\\09",comment
00005020 <AB3Scan.ab3@402>   Function Return cpos
00005034 <AB3Scan.ab3@404> End Function
00005052 <AB3Scan.ab3@407> Function.l _ab3_ParseConstant{*parser.Parser,cpos.l}
0000508C <AB3Scan.ab3@409>   If *parser\first><False AND *parser\dflags&#DF_CONSTANT><0
000050DC <AB3Scan.ab3@410>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Constant..."
00005104 <AB3Scan.ab3@411>     name.s     = ""
0000512C <AB3Scan.ab3@412>     value.s    = ""
00005154 <AB3Scan.ab3@413>     comment.s  = ""
00005166 <AB3Scan.ab3@414>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
0000516C <AB3Scan.ab3@415>     opos.l = cpos
0000517E <AB3Scan.ab3@416>     cpos.l = _ab3_SkipToken{*parser,cpos}
000051BA <AB3Scan.ab3@417>     name.s = Peeks$(*parser\bptr+opos,cpos-opos)
000051CC <AB3Scan.ab3@418>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
000051F6 <AB3Scan.ab3@419>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005218 <AB3Scan.ab3@420>     If c><@"=" Then Function Return cpos-1
0000522A <AB3Scan.ab3@421>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005230 <AB3Scan.ab3@422>     opos.l = cpos
00005248 <AB3Scan.ab3@423>     cpos = _ab3_SkipTill{*parser,cpos,@":"}
00005276 <AB3Scan.ab3@424>     If cpos>=*parser\clength Then cpos = _ab3_SkipTill{*parser,opos,@";"}
000052E6 <AB3Scan.ab3@425>     If opos>0 Then While cpos>opos AND Peek.b(*parser\bptr + cpos-1)=@" ":cpos-1:Wend
00005322 <AB3Scan.ab3@426>     value.s = Peeks$(*parser\bptr+opos,cpos-opos)
0000533A <AB3Scan.ab3@428>     cpos = _ab3_SkipTill{*parser,cpos,@";"}
00005350 <AB3Scan.ab3@429>     If cpos<*parser\clength 
00005368 <AB3Scan.ab3@430>       cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
0000537E <AB3Scan.ab3@431>       If cpos<*parser\clength
000053C0 <AB3Scan.ab3@432>         comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
000053EC <AB3Scan.ab3@435>     If name
00005548 <AB3Scan.ab3@436>       NPrint "CONSTANT\\09",*parser\linecount,"\\09",name,"\\09",value,"\\09",comment
00005552 <AB3Scan.ab3@439>   Function Return cpos
00005566 <AB3Scan.ab3@441> End Function
00005584 <AB3Scan.ab3@443> Function.l _ab3_ParseEnd{*parser.Parser,cpos.l}
0000561C <AB3Scan.ab3@445>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse End... F:",*parser\in_function," NT:",*parser\in_newtype
0000562E <AB3Scan.ab3@446>   cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
0000564A <AB3Scan.ab3@447>   c.w = Peek.b(*parser\bptr + cpos) 
00005658 <AB3Scan.ab3@448>   If c<0
0000568A <AB3Scan.ab3@449>     tokenid.l = Peek.w(*parser\bptr+cpos)&$FFFF : cpos+2
00005690 <AB3Scan.ab3@450>     Select tokenid
000056A8 <AB3Scan.ab3@451>       Case #TOKEN_Function  : *parser\in_function = False
000056C6 <AB3Scan.ab3@452>       Case #TOKEN_Statement : *parser\in_function = False
000056E4 <AB3Scan.ab3@453>       Case #TOKEN_NEWTYPE   : *parser\in_newtype  = False
00005702 <AB3Scan.ab3@454>       Case #TOKEN_Macro     : *parser\in_macro    = False
00005704 <AB3Scan.ab3@455>     End Select
0000577A <AB3Scan.ab3@456>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG End: ",Hex$(tokenid)
00005780 <AB3Scan.ab3@458>   Else
00005786 <AB3Scan.ab3@459>     opos.l = cpos
00005798 <AB3Scan.ab3@460>     cpos.l = _ab3_SkipToken{*parser,cpos}
000057D4 <AB3Scan.ab3@461>     token.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005858 <AB3Scan.ab3@462>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG End: ",token
00005872 <AB3Scan.ab3@463>     tokenid.l = pftlib_GetInt32{AmiBlitz3\TokenT,&token}
00005878 <AB3Scan.ab3@465>     Select tokenid
00005890 <AB3Scan.ab3@466>       Case #TOKEN_Function  : *parser\in_function = False
000058AE <AB3Scan.ab3@467>       Case #TOKEN_Statement : *parser\in_function = False
000058CC <AB3Scan.ab3@468>       Case #TOKEN_NEWTYPE   : *parser\in_newtype  = False
000058EA <AB3Scan.ab3@469>       Case #TOKEN_Macro     : *parser\in_macro    = False
000058EC <AB3Scan.ab3@470>     End Select
00005984 <AB3Scan.ab3@473>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse ===... F:",*parser\in_function," NT:",*parser\in_newtype
0000598E <AB3Scan.ab3@475>   Function Return cpos
000059A2 <AB3Scan.ab3@476> End Function
000059C0 <AB3Scan.ab3@478> Function.l _ab3_ParseFunction{*parser.Parser,cpos.l}
000059FA <AB3Scan.ab3@480>     If *parser\first><False AND *parser\dflags&#DF_FUNCTION><0
00005A4A <AB3Scan.ab3@481>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Function..."
00005A72 <AB3Scan.ab3@482>     typ.s      = ""
00005A9A <AB3Scan.ab3@483>     name.s     = ""
00005AC2 <AB3Scan.ab3@484>     modifier.s = ""
00005AEA <AB3Scan.ab3@485>     track.s    = ""
00005B12 <AB3Scan.ab3@486>     comment.s  = ""
00005B24 <AB3Scan.ab3@487>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005B4E <AB3Scan.ab3@488>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005B6C <AB3Scan.ab3@489>     If c<0 Then Function Return cpos-1
00005B7E <AB3Scan.ab3@491>     If c = @"."
00005B84 <AB3Scan.ab3@492>       opos.l = cpos
00005B96 <AB3Scan.ab3@493>       cpos.l = _ab3_SkipToken{*parser,cpos}
00005BD2 <AB3Scan.ab3@494>       typ.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005BE4 <AB3Scan.ab3@495>       cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005C0E <AB3Scan.ab3@496>       c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005C1C <AB3Scan.ab3@498>     opos.l = cpos-1
00005C2E <AB3Scan.ab3@499>     cpos.l = _ab3_SkipToken{*parser,cpos}
00005C6A <AB3Scan.ab3@500>     name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005CA2 <AB3Scan.ab3@501>     If name="FAST"
00005CD6 <AB3Scan.ab3@502>       modifier=name
00005CE8 <AB3Scan.ab3@503>       opos.l = _ab3_SkipWhiteSpaces{*parser,cpos}
00005CFA <AB3Scan.ab3@504>       cpos.l = _ab3_SkipToken{*parser,opos}
00005D36 <AB3Scan.ab3@505>       name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005D48 <AB3Scan.ab3@507>     cpos.l = _ab3_SkipWhiteSpaces{*parser,cpos}
00005D72 <AB3Scan.ab3@508>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005D94 <AB3Scan.ab3@509>     If c><@"{" Then Function Return cpos-1
00005D9A <AB3Scan.ab3@510>     opos = cpos
00005DB2 <AB3Scan.ab3@511>     cpos = _ab3_SkipTill{*parser,cpos,@"}"}
00005DC8 <AB3Scan.ab3@512>     If cpos<*parser\clength
00005DF4 <AB3Scan.ab3@513>       If name
00005E30 <AB3Scan.ab3@514>         track.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005EAE <AB3Scan.ab3@515>         track=Replace$(track," ","")
00005F2C <AB3Scan.ab3@516>         track=Replace$(track,"\\09","")
00005FAA <AB3Scan.ab3@517>         comment=Replace$(comment,"\\09"," ")
00006162 <AB3Scan.ab3@518>         NPrint "FUNCTION\\09",*parser\linecount,"\\09",name,"\\09",typ,"\\09",track,"\\09",comment
0000616C <AB3Scan.ab3@519>         *parser\in_function = True
0000618C <AB3Scan.ab3@520>         If *parser\dflags&#DF_LOCAL><0
00006194 <AB3Scan.ab3@521>           kpos.l=0
000061A2 <AB3Scan.ab3@523>             opos.l = kpos+1
000061F2 <AB3Scan.ab3@524>             kpos.l = Instr(track,",",opos)
0000621E <AB3Scan.ab3@525>             If kpos=0 Then kpos=FLen(track)+1
0000622C <AB3Scan.ab3@526>             If kpos>opos
00006282 <AB3Scan.ab3@527>               ppos.l = Instr(track,".",opos+1)
000062AC <AB3Scan.ab3@528>               If ppos>0 AND ppos<kpos-1
00006306 <AB3Scan.ab3@529>                 name.s = Mid$(track,opos,ppos-opos)
0000636C <AB3Scan.ab3@530>                 typ.s  = Mid$(track,ppos+1,kpos-ppos-1)
0000646C <AB3Scan.ab3@532>                 NPrint "PARAM\\09",*parser\linecount,"\\09",name,"\\09",typ
00006480 <AB3Scan.ab3@535>           Until kpos<=opos
0000648A <AB3Scan.ab3@541>   Function Return cpos
0000649E <AB3Scan.ab3@543> End Function
000064BC <AB3Scan.ab3@546> Function.l _ab3_ParseToken{*parser.Parser,cpos.l}
000064CA <AB3Scan.ab3@547>   opos.l  = cpos-1
000064DC <AB3Scan.ab3@548>   cpos    = _ab3_SkipToken{*parser,opos}
00006518 <AB3Scan.ab3@549>   token.s = Peeks$(*parser\bptr+opos,cpos-opos)
00006532 <AB3Scan.ab3@551>   tokenid.l=pftlib_GetInt32{AmiBlitz3\TokenT,&token}
00006604 <AB3Scan.ab3@552>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Text Token ",token," => ",Hex$(tokenid)
00006616 <AB3Scan.ab3@553>   If tokenid=0
00006628 <AB3Scan.ab3@554>      If *parser\in_newtype
0000663A <AB3Scan.ab3@555>        If opos>0
0000665C <AB3Scan.ab3@556>          c.w = Peek.b(*parser\bptr + opos-1)
000066B4 <AB3Scan.ab3@557>          If c=@"*" Then token="*"+token
000066C6 <AB3Scan.ab3@560>        cpos.l = _ab3_SkipWhiteSpaces{*parser,cpos}
000066F0 <AB3Scan.ab3@561>        c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00006718 <AB3Scan.ab3@562>        typ.s = ""
0000672A <AB3Scan.ab3@563>        If c=@"."
00006730 <AB3Scan.ab3@564>          opos.l = cpos
00006742 <AB3Scan.ab3@565>          cpos.l = _ab3_SkipToken{*parser,cpos}
0000677E <AB3Scan.ab3@566>          typ.s = Peeks$(*parser\bptr+opos,cpos-opos)
0000687E <AB3Scan.ab3@568>        NPrint "FIELD\\09",*parser\linecount,"\\09",token,"\\09",typ
00006884 <AB3Scan.ab3@569>      Else
000068AE <AB3Scan.ab3@570>        c.w = Peek.b(*parser\bptr + cpos) : cpos+1
000068D6 <AB3Scan.ab3@571>        typ.s = ""
000068E8 <AB3Scan.ab3@572>        If c=@"."
000068EE <AB3Scan.ab3@573>          opos.l = cpos
00006900 <AB3Scan.ab3@574>          cpos.l = _ab3_SkipToken{*parser,cpos}
0000693C <AB3Scan.ab3@575>          typ.s = Peeks$(*parser\bptr+opos,cpos-opos)
00006974 <AB3Scan.ab3@577>          If typ><""
00006986 <AB3Scan.ab3@578>            If *parser\in_function ; todo: doenst recognize shared
000069A6 <AB3Scan.ab3@579>              If *parser\dflags&#DF_LOCAL><0
00006AA6 <AB3Scan.ab3@580>                NPrint "LOCAL\\09",*parser\linecount,"\\09",token,"\\09",typ
00006AAC <AB3Scan.ab3@582>            Else
00006ACC <AB3Scan.ab3@583>              If *parser\dflags&#DF_GLOBAL><0
00006BCC <AB3Scan.ab3@584>                NPrint "GLOBAL\\09",*parser\linecount,"\\09",token,"\\09",typ
00006BD2 <AB3Scan.ab3@588>        Else
00006BDC <AB3Scan.ab3@592>      Function Return cpos
00006BE2 <AB3Scan.ab3@595>   Select tokenid
00006C02 <AB3Scan.ab3@596>     Case #TOKEN_Function  : cpos = _ab3_ParseFunction{*parser,cpos}
00006C28 <AB3Scan.ab3@597>     Case #TOKEN_Statement : cpos = _ab3_ParseFunction{*parser,cpos}
00006C4E <AB3Scan.ab3@598>     Case #TOKEN_Macro     : cpos = _ab3_ParseMacro   {*parser,cpos}
00006C74 <AB3Scan.ab3@599>     Case #TOKEN_NEWTYPE   : cpos = _ab3_ParseNewtype {*parser,cpos}
00006C9A <AB3Scan.ab3@600>     Case #TOKEN_XINCLUDE  : cpos = _ab3_ParseInclude {*parser,cpos}
00006CC0 <AB3Scan.ab3@601>     Case #TOKEN_INCLUDE   : cpos = _ab3_ParseInclude {*parser,cpos}
00006CE6 <AB3Scan.ab3@602>     Case #TOKEN_End       : cpos = _ab3_ParseEnd     {*parser,cpos}
00006CE8 <AB3Scan.ab3@603>   End Select
00006CF2 <AB3Scan.ab3@605>   Function Return cpos
00006D06 <AB3Scan.ab3@607> End Function
00006D24 <AB3Scan.ab3@610> Function.l _ab3_Parse2ByteToken{*parser.Parser,cpos.l}
00006D52 <AB3Scan.ab3@612>   tokenid.w = Peek.w(*parser\bptr+cpos-1) : cpos +1
00006E10 <AB3Scan.ab3@613>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse 2Byte Token ($",Right$(Hex$(tokenid),4),")"
00006E16 <AB3Scan.ab3@615>   Select tokenid
00006E36 <AB3Scan.ab3@616>     Case #TOKEN_Function  : cpos = _ab3_ParseFunction{*parser,cpos}      
00006E5C <AB3Scan.ab3@617>     Case #TOKEN_Statement : cpos = _ab3_ParseFunction{*parser,cpos}      
00006E82 <AB3Scan.ab3@618>     Case #TOKEN_Macro     : cpos = _ab3_ParseMacro   {*parser,cpos}      
00006EA8 <AB3Scan.ab3@619>     Case #TOKEN_NEWTYPE   : cpos = _ab3_ParseNewtype {*parser,cpos}
00006ECE <AB3Scan.ab3@620>     Case #TOKEN_XINCLUDE  : cpos = _ab3_ParseInclude {*parser,cpos}
00006EF4 <AB3Scan.ab3@621>     Case #TOKEN_INCLUDE   : cpos = _ab3_ParseInclude {*parser,cpos}
00006F1A <AB3Scan.ab3@622>     Case #TOKEN_End       : cpos = _ab3_ParseEnd     {*parser,cpos}
00006F1C <AB3Scan.ab3@623>   End Select
00006F26 <AB3Scan.ab3@624>   Function Return cpos
00006F2C <AB3Scan.ab3@626> End Function
00006F4A <AB3Scan.ab3@629> Function.l FAST _ab3_SkipBinary{*parser.Parser,cpos.l}
00006F52 <AB3Scan.ab3@631>   cf.l = 0
00006F80 <AB3Scan.ab3@634>     cpos+1 : If cpos>=*parser\clength Then Function Return cpos
00006FB6 <AB3Scan.ab3@635>     cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00006FE0 <AB3Scan.ab3@636>     If (cf&#AB3TF_BIN)=0 Then Function Return cpos-1
00006FFC <AB3Scan.ab3@637>   Until cpos>=*parser\clength
00007006 <AB3Scan.ab3@639>   Function Return cpos
0000700C <AB3Scan.ab3@641> End Function
0000702A <AB3Scan.ab3@644> Function.l FAST _ab3_SkipHex{*parser.Parser,cpos.l}
00007040 <AB3Scan.ab3@647>     If cpos<*parser\clength
00007076 <AB3Scan.ab3@648>       cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
0000707C <AB3Scan.ab3@649>     Else
00007084 <AB3Scan.ab3@650>       cf = 0
00007092 <AB3Scan.ab3@652>     cpos+1
000070C8 <AB3Scan.ab3@653>   Until (cf&#AB3TF_HEX)=0 OR cpos>=*parser\clength
000070D8 <AB3Scan.ab3@655>   Function Return cpos-1
000070DE <AB3Scan.ab3@657> End Function
000070FC <AB3Scan.ab3@660> Function.l FAST _ab3_ParseNumber{*parser.Parser,cpos.l}
00007112 <AB3Scan.ab3@663>     If cpos<*parser\clength
00007148 <AB3Scan.ab3@664>       cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
0000714E <AB3Scan.ab3@665>     Else
00007156 <AB3Scan.ab3@666>       cf = 0
00007164 <AB3Scan.ab3@668>     cpos+1
0000719A <AB3Scan.ab3@669>   Until (cf&#AB3TF_DEC)=0 OR cpos>=*parser\clength
000071CC <AB3Scan.ab3@671>   If (Peek.b(*parser\bptr + cpos-1)=@".") ; has a decimal point
000071E2 <AB3Scan.ab3@673>       If cpos<*parser\clength
00007218 <AB3Scan.ab3@674>         cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
0000721E <AB3Scan.ab3@675>       Else
00007226 <AB3Scan.ab3@676>         cf = 0
00007234 <AB3Scan.ab3@678>       cpos+1
0000726A <AB3Scan.ab3@679>     Until (cf&#AB3TF_DEC)=0 OR cpos>=*parser\clength
00007278 <AB3Scan.ab3@682>   cpos-1
00007282 <AB3Scan.ab3@683>   Function Return cpos
00007288 <AB3Scan.ab3@685> End Function
000072A2 <AB3Scan.ab3@688> Function.l ab3_ParseLine{*parser.Parser}
000072AC <AB3Scan.ab3@690>   *parser\first   = True
000072B4 <AB3Scan.ab3@691>   cpos.l = 0
000072D0 <AB3Scan.ab3@693>   While cpos<*parser\clength
000072FA <AB3Scan.ab3@694>     c.b = Peek.b(*parser\bptr+cpos) : cpos+1
0000731E <AB3Scan.ab3@695>     cf.l = AmiBlitz3\CharFlags[c&$FF]
0000735C <AB3Scan.ab3@697>     If (cf&#AB3TF_COMMENT   ) Then cpos = _ab3_ParseComment   {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
0000739A <AB3Scan.ab3@698>     If (cf&#AB3TF_QUOT      ) Then cpos = _ab3_ParseString    {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
000073D8 <AB3Scan.ab3@699>     If (cf&#AB3TF_FIRST     ) Then cpos = _ab3_ParseToken     {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
00007416 <AB3Scan.ab3@700>     If (cf&#AB3TF_DEC       ) Then cpos = _ab3_ParseNumber    {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
00007454 <AB3Scan.ab3@701>     If (cf&#AB3TF_2BYTETOKEN) Then cpos = _ab3_Parse2ByteToken{*parser,cpos} : cf = 0 : c=0 : *parser\first=False
00007460 <AB3Scan.ab3@703>     Select c
0000747C <AB3Scan.ab3@704>       Case @":" : *parser\first=True
00007494 <AB3Scan.ab3@705>       Case @"#"
000074B2 <AB3Scan.ab3@706>         Select Peek.b(*parser\bptr+cpos)
000074C2 <AB3Scan.ab3@707>           Case $22
000074DA <AB3Scan.ab3@708>             cpos = _ab3_ParseString{*parser,cpos+1}
000074E0 <AB3Scan.ab3@709>           Default
0000751A <AB3Scan.ab3@710>             If *parser\first><False AND *parser\dflags&#DF_CONSTANT><0
0000752C <AB3Scan.ab3@711>               cpos = _ab3_ParseConstant{*parser,cpos}
00007532 <AB3Scan.ab3@712>             Else
00007544 <AB3Scan.ab3@713>               cpos = _ab3_SkipToken{*parser,cpos}
00007546 <AB3Scan.ab3@715>         End Select
00007550 <AB3Scan.ab3@716>         *parser\first=False
00007568 <AB3Scan.ab3@718>       Case @"!" ; its a macro reference
0000757A <AB3Scan.ab3@719>         cpos = _ab3_SkipToken{*parser,cpos}
00007584 <AB3Scan.ab3@720>         *parser\first=False
0000759C <AB3Scan.ab3@722>       Case @"."
000075D6 <AB3Scan.ab3@723>         If *parser\first><False AND *parser\dflags&#DF_LABEL><0
000075DC <AB3Scan.ab3@724>           opos.l = cpos
000075EE <AB3Scan.ab3@725>           cpos = _ab3_SkipToken{*parser,cpos}
0000769A <AB3Scan.ab3@726>           NPrint "LABEL\\09",*parser\linecount,"\\09",Peeks$(*parser\bptr+opos,cpos-opos)
000076A0 <AB3Scan.ab3@727>         Else
000076B2 <AB3Scan.ab3@729>           cpos = _ab3_SkipToken{*parser,cpos}
000076BC <AB3Scan.ab3@731>         *parser\first=False
000076D4 <AB3Scan.ab3@733>       Case @"\" ; its a member reference
000076E6 <AB3Scan.ab3@734>         cpos = _ab3_SkipToken{*parser,cpos}
000076F0 <AB3Scan.ab3@735>         *parser\first=False
00007708 <AB3Scan.ab3@737>       Case @"%"
0000771A <AB3Scan.ab3@738>         cpos = _ab3_SkipBinary{*parser,cpos}
00007724 <AB3Scan.ab3@739>         *parser\first=False
0000773C <AB3Scan.ab3@741>       Case @"$"
0000774E <AB3Scan.ab3@742>         cpos = _ab3_SkipHex{*parser,cpos}
00007758 <AB3Scan.ab3@743>         *parser\first=False
00007770 <AB3Scan.ab3@745>       Case @"@"
0000778E <AB3Scan.ab3@746>         Select Peek.b(*parser\bptr+cpos)
000077A0 <AB3Scan.ab3@747>           Case @"@" ; its @@
000077AE <AB3Scan.ab3@748>             cpos+1
000077C4 <AB3Scan.ab3@749>             If cpos<*parser\clength ; remaining chars
000077D2 <AB3Scan.ab3@750>               cpos=*parser\clength
000077E8 <AB3Scan.ab3@752>           Case $22 ; its @"ILBM"
00007800 <AB3Scan.ab3@753>             cpos = _ab3_ParseString{*parser,cpos+1}
00007818 <AB3Scan.ab3@754>           Case @"#" ; its @#constant
0000782A <AB3Scan.ab3@756>             cpos = _ab3_SkipToken{*parser,cpos}
00007830 <AB3Scan.ab3@757>           Default
00007842 <AB3Scan.ab3@759>             cpos = _ab3_SkipToken{*parser,cpos}
00007844 <AB3Scan.ab3@761>         End Select
0000784E <AB3Scan.ab3@762>         *parser\first=False
00007854 <AB3Scan.ab3@764>       Default
00007856 <AB3Scan.ab3@766>     End Select
0000785C <AB3Scan.ab3@768>   Wend
00007866 <AB3Scan.ab3@769>   Function Return cpos
0000786C <AB3Scan.ab3@771> End Function
000078B2 <AB3Scan.ab3@774> Function.Parser ab3_CreateParser{incpath.s,pattern.s,recursive.l,dflags.l,verbose.l}
000078D2 <AB3Scan.ab3@776>   *parser.Parser = AllocVec_(SizeOf.Parser,#MEMF_ANY)
000078DC <AB3Scan.ab3@777>   If *parser
000078E4 <AB3Scan.ab3@779>     *parser\filename    = Null
000078EE <AB3Scan.ab3@780>     *parser\path        = Null
000078F8 <AB3Scan.ab3@781>     *parser\tokenized   = False
00007906 <AB3Scan.ab3@782>     *parser\ab3header   = #AB3H_NONE
00007910 <AB3Scan.ab3@785>     *parser\first       = True
0000791A <AB3Scan.ab3@786>     *parser\bptr        = Null
00007928 <AB3Scan.ab3@787>     *parser\clength     = 0
00007934 <AB3Scan.ab3@791>     *parser\recursive   = recursive
0000793E <AB3Scan.ab3@792>     *parser\pattern     = Null
00007948 <AB3Scan.ab3@793>     *parser\incpath     = Null
0000795C <AB3Scan.ab3@794>     *parser\filesT      = pft_Create{4096}
00007968 <AB3Scan.ab3@795>     *parser\verbose     = verbose
00007974 <AB3Scan.ab3@796>     *parser\dflags      = dflags
0000797E <AB3Scan.ab3@797>     *parser\in_newtype  = False
00007988 <AB3Scan.ab3@798>     *parser\in_function = False
00007992 <AB3Scan.ab3@799>     *parser\in_macro    = False
000079FA <AB3Scan.ab3@801>     tempbuf.s = LSet$(" ",FLen(pattern)*3+4)
00007A2A <AB3Scan.ab3@802>     ParsePatternNoCase_ &pattern,&tempbuf,FLen(tempbuf)
00007A46 <AB3Scan.ab3@803>     str_WritePtr{&*parser\pattern,&tempbuf}
00007A7E <AB3Scan.ab3@804>     str_Write{&*parser\incpath,incpath}
00007AA2 <AB3Scan.ab3@806>     *parser\fbuffer = AllocVec_(#FBUFF_SIZE,#MEMF_ANY)
00007AB0 <AB3Scan.ab3@807>     *parser\fbuffer_currentpos = 0
00007ABE <AB3Scan.ab3@808>     *parser\fbuffer_fillpos    = 0
00007AC8 <AB3Scan.ab3@812>   Function Return *parser
00007AE4 <AB3Scan.ab3@814> End Function
00007AFE <AB3Scan.ab3@817> Statement ab3_FreeParser{*parser.Parser}
00007B08 <AB3Scan.ab3@819>   If *parser
00007B14 <AB3Scan.ab3@820>     str_Free{&*parser\filename}
00007B24 <AB3Scan.ab3@821>     str_Free{&*parser\path}
00007B34 <AB3Scan.ab3@822>     str_Free{&*parser\incpath}
00007B44 <AB3Scan.ab3@823>     str_Free{&*parser\pattern}
00007B70 <AB3Scan.ab3@824>     If *parser\filesT  Then pft_Free{*parser\filesT}  : *parser\filesT = Null
00007BA2 <AB3Scan.ab3@825>     If *parser\fbuffer Then FreeVec_(*parser\fbuffer) : *parser\fbuffer = Null
00007BB8 <AB3Scan.ab3@826>     FreeVec_ *parser : *parser = Null     ; free *parser structure and set it to Null  tomsmart1
00007BBC <AB3Scan.ab3@829> End Statement
00007BDA <AB3Scan.ab3@832> Function.l file_ReadAB3Line2 {*parser.Parser,fid.l}
00007BE2 <AB3Scan.ab3@834>   dummy.l = 0
00007BF0 <AB3Scan.ab3@835>   bpos.l  = *parser\fbuffer_currentpos
00007BF6 <AB3Scan.ab3@836>   eol.l = False
00007C0C <AB3Scan.ab3@839>     If bpos>=*parser\fbuffer_fillpos
00007C20 <AB3Scan.ab3@840>       copylength.l = bpos-*parser\fbuffer_currentpos
00007C6A <AB3Scan.ab3@841>       If copylength>0 Then CopyMem_ *parser\fbuffer+*parser\fbuffer_currentpos,*parser\fbuffer,copylength
00007C76 <AB3Scan.ab3@842>       *parser\fbuffer_fillpos    = copylength
00007C82 <AB3Scan.ab3@843>       *parser\fbuffer_currentpos = copylength
00007CC6 <AB3Scan.ab3@844>       readlength.l = Read_ (fid,*parser\fbuffer+*parser\fbuffer_fillpos,#FBUFF_SIZE-*parser\fbuffer_fillpos)
00007CDE <AB3Scan.ab3@845>       *parser\fbuffer_fillpos + readlength
00007CEC <AB3Scan.ab3@846>       bpos = *parser\fbuffer_currentpos
00007D04 <AB3Scan.ab3@847>       If readlength<=0 Then eol=True
00007D0A <AB3Scan.ab3@848>     Else
00007D28 <AB3Scan.ab3@849>       dummy=Peek.b(*parser\fbuffer + bpos)
00007D3A <AB3Scan.ab3@850>       If *parser\tokenized
00007D4C <AB3Scan.ab3@851>         If dummy<0 
00007D5A <AB3Scan.ab3@852>           bpos+1
00007D78 <AB3Scan.ab3@853>           dummy=Peek.b(*parser\fbuffer + bpos)
00007D8A <AB3Scan.ab3@854>           If dummy=0 
00007D98 <AB3Scan.ab3@855>             bpos+1
00007DB6 <AB3Scan.ab3@856>             dummy=Peek.b(*parser\fbuffer + bpos)
00007DCE <AB3Scan.ab3@859>         If dummy=$00 Then eol=True
00007DD4 <AB3Scan.ab3@860>       Else
00007DEC <AB3Scan.ab3@861>         If dummy=$0a Then eol=True
00007DFA <AB3Scan.ab3@864>       bpos+1
00007E04 <AB3Scan.ab3@866>   Until eol
00007E22 <AB3Scan.ab3@868>   *parser\bptr    = *parser\fbuffer + *parser\fbuffer_currentpos
00007E40 <AB3Scan.ab3@869>   *parser\clength = bpos-*parser\fbuffer_currentpos-1
00007E4C <AB3Scan.ab3@870>   *parser\fbuffer_currentpos = bpos
00007E64 <AB3Scan.ab3@871>   If *parser\clength>=0
00007E7C <AB3Scan.ab3@872>     *parser\linecount+1
00007E9A <AB3Scan.ab3@877>   Function Return *parser\clength>=0
00007EA0 <AB3Scan.ab3@879> End Function
00007ECE <AB3Scan.ab3@882> Function.l ab3_ParseFile{*parser.Parser,filename.s}
00007F26 <AB3Scan.ab3@884>   dosname.s = GetDosFileName{filename}
00007F88 <AB3Scan.ab3@886>   status.s = pft_FindItem{*parser\filesT,dosname}
00007FC8 <AB3Scan.ab3@887>   If status="done" Then Function Return False
0000801C <AB3Scan.ab3@889>   pft_AddItem{*parser\filesT,dosname,"done"}
0000808A <AB3Scan.ab3@890>   str_Write{&*parser\path,dos_PathPart{dosname}}
000080BE <AB3Scan.ab3@891>   str_Write{&*parser\filename,dosname}
000080DE <AB3Scan.ab3@893>   fid.l = Open_ (&filename,#MODE_OLDFILE)
000080F8 <AB3Scan.ab3@894>   If fid=0 Then Function Return False
00008102 <AB3Scan.ab3@896>   *parser\tokenized = False
00008110 <AB3Scan.ab3@897>   *parser\linecount = 0
00008182 <AB3Scan.ab3@898>   Select LCase$(dos_GetExt{filename})
000081B4 <AB3Scan.ab3@899>     Case "ab3" : *parser\ab3header  = #AB3H_SEARCH
000081E8 <AB3Scan.ab3@900>     Case "bb2" : *parser\tokenized=True
0000821C <AB3Scan.ab3@901>     Case "bb"  : *parser\tokenized=True
0000822C <AB3Scan.ab3@902>     Default:     *parser\tokenized=False
0000823A <AB3Scan.ab3@903>   End Select
0000825A <AB3Scan.ab3@905>   If *parser\dflags&#DF_SOURCE><0
000082C6 <AB3Scan.ab3@906>     NPrint "SOURCE\\09",dosname
000082D4 <AB3Scan.ab3@909>   *parser\fbuffer_currentpos = 0
000082E2 <AB3Scan.ab3@910>   *parser\fbuffer_fillpos    = 0
000082F8 <AB3Scan.ab3@911>   While file_ReadAB3Line2{*parser,fid}
00008302 <AB3Scan.ab3@912>     ab3_ParseLine{*parser}
00008308 <AB3Scan.ab3@913>   Wend
00008318 <AB3Scan.ab3@915>   Close_ fid
00008320 <AB3Scan.ab3@917>   Function Return True
0000833A <AB3Scan.ab3@919> End Function
00008368 <AB3Scan.ab3@922> Function.l ab3_Scan{*parser.Parser,path.s}
000083EC <AB3Scan.ab3@925>   If *parser\verbose>1 Then NPrint "INFO Scan ",path
0000840C <AB3Scan.ab3@926>   lock.l = Lock_(&path,#ACCESS_READ)
00008416 <AB3Scan.ab3@927>   If lock
00008438 <AB3Scan.ab3@928>     If Examine_ (lock,&fib)
00008466 <AB3Scan.ab3@929>       While ExNext_(lock,&fib)><0
000084AA <AB3Scan.ab3@930>         If SetSignal_(0,0)&#SIGBREAKF_CTRL_C Then UnLock_ lock : Function Return False
0000852E <AB3Scan.ab3@932>         filename.s = dos_AddPart{path,Peek.s(&fib\fib_FileName)}
00008546 <AB3Scan.ab3@933>         If fib\fib_DirEntryType<0
00008582 <AB3Scan.ab3@934>           If MatchPatternNoCase_ (&*parser\pattern\str,&fib\fib_FileName)><0 
000085B4 <AB3Scan.ab3@936>             ab3_ParseFile{*parser,filename}
000085BA <AB3Scan.ab3@938>         Else
000085CC <AB3Scan.ab3@939>           If *parser\recursive
0000860E <AB3Scan.ab3@940>             If ab3_Scan{*parser,filename} = False
0000861E <AB3Scan.ab3@941>               UnLock_ lock
00008626 <AB3Scan.ab3@942>               Function Return False
0000862C <AB3Scan.ab3@946>       Wend
0000863C <AB3Scan.ab3@948>     UnLock_ lock
00008658 <AB3Scan.ab3@951>   pft_Reset{*parser\filesT}
00008670 <AB3Scan.ab3@952>   While pft_GetNextItem{*parser\filesT}
000086AA <AB3Scan.ab3@953>     status.s   = pft_GetString{*parser\filesT}
000086E4 <AB3Scan.ab3@954>     filename.s = pft_GetKey{*parser\filesT}
0000871C <AB3Scan.ab3@956>     If status="todo"
0000874E <AB3Scan.ab3@957>       ab3_ParseFile{*parser,filename}
000087A2 <AB3Scan.ab3@958>       pft_AddItem{*parser\filesT,filename,"done"}
000087BE <AB3Scan.ab3@959>       pft_Reset{*parser\filesT}
000087C4 <AB3Scan.ab3@961>   Wend
000087CC <AB3Scan.ab3@963>   Function Return True
000087F6 <AB3Scan.ab3@965> End Function
0000880C <AB3Scan.ab3@968> Statement ab3_Deinit{}
00008838 <AB3Scan.ab3@970>   If AmiBlitz3\TokenT Then pft_Free{AmiBlitz3\TokenT} : AmiBlitz3\TokenT = Null
0000883A <AB3Scan.ab3@972> End Statement
00008864 <AB3Scan.ab3@975> Function.l ab3_Init{tokenfile.s}
0000888E <AB3Scan.ab3@977>   For n.l=0 To 255
000088A0 <AB3Scan.ab3@978>     AmiBlitz3\CharFlags[n] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW |#AB3TF_2BYTETOKEN
000088B0 <AB3Scan.ab3@979>   Next
000088C8 <AB3Scan.ab3@981>   AmiBlitz3\CharFlags[   0] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_EOL ; Null
000088E0 <AB3Scan.ab3@982>   AmiBlitz3\CharFlags[   1] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SOH
000088F8 <AB3Scan.ab3@983>   AmiBlitz3\CharFlags[   2] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; STX
00008910 <AB3Scan.ab3@984>   AmiBlitz3\CharFlags[   3] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ETX
00008928 <AB3Scan.ab3@985>   AmiBlitz3\CharFlags[   4] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; EOT
00008940 <AB3Scan.ab3@986>   AmiBlitz3\CharFlags[   5] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ENQ
00008958 <AB3Scan.ab3@987>   AmiBlitz3\CharFlags[   6] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ACK
00008970 <AB3Scan.ab3@988>   AmiBlitz3\CharFlags[   7] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; BELL
00008988 <AB3Scan.ab3@989>   AmiBlitz3\CharFlags[   8] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; BS  (backspace)
000089A0 <AB3Scan.ab3@990>   AmiBlitz3\CharFlags[   9] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW|#AB3TF_SPACE ; TAB (tabulator)
000089B8 <AB3Scan.ab3@991>   AmiBlitz3\CharFlags[  10] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW|#AB3TF_EOL ; LF  (line feed) Linux Return
000089D0 <AB3Scan.ab3@992>   AmiBlitz3\CharFlags[  11] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; VT
000089E8 <AB3Scan.ab3@993>   AmiBlitz3\CharFlags[  12] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; FF  (feed forward)
00008A00 <AB3Scan.ab3@994>   AmiBlitz3\CharFlags[  13] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CR  (carrier return) Windows Return
00008A18 <AB3Scan.ab3@995>   AmiBlitz3\CharFlags[  14] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SO
00008A30 <AB3Scan.ab3@996>   AmiBlitz3\CharFlags[  15] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SI
00008A48 <AB3Scan.ab3@997>   AmiBlitz3\CharFlags[  16] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; DLE
00008A60 <AB3Scan.ab3@998>   AmiBlitz3\CharFlags[  17] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; DC1
00008A78 <AB3Scan.ab3@999>   AmiBlitz3\CharFlags[  18] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CD2
00008A90 <AB3Scan.ab3@1000>   AmiBlitz3\CharFlags[  19] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CD3
00008AA8 <AB3Scan.ab3@1001>   AmiBlitz3\CharFlags[  20] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CD4
00008AC0 <AB3Scan.ab3@1002>   AmiBlitz3\CharFlags[  21] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; NAK
00008AD8 <AB3Scan.ab3@1003>   AmiBlitz3\CharFlags[  22] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SYN
00008AF0 <AB3Scan.ab3@1004>   AmiBlitz3\CharFlags[  23] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ETB
00008B08 <AB3Scan.ab3@1005>   AmiBlitz3\CharFlags[  24] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CAN (Cancel)
00008B20 <AB3Scan.ab3@1006>   AmiBlitz3\CharFlags[  25] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; EM
00008B38 <AB3Scan.ab3@1007>   AmiBlitz3\CharFlags[  26] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SUB
00008B50 <AB3Scan.ab3@1008>   AmiBlitz3\CharFlags[  27] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ESC (Escape)
00008B68 <AB3Scan.ab3@1009>   AmiBlitz3\CharFlags[  28] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; FS
00008B80 <AB3Scan.ab3@1010>   AmiBlitz3\CharFlags[  29] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; GS
00008B98 <AB3Scan.ab3@1011>   AmiBlitz3\CharFlags[  30] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; RS
00008BB0 <AB3Scan.ab3@1012>   AmiBlitz3\CharFlags[  31] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; US
00008BC8 <AB3Scan.ab3@1013>   AmiBlitz3\CharFlags[@" "] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY|#AB3TF_SPACE ; Space
00008BE0 <AB3Scan.ab3@1014>   AmiBlitz3\CharFlags[@"!"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008BF8 <AB3Scan.ab3@1015>   AmiBlitz3\CharFlags[  34] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY|#AB3TF_QUOT
00008C10 <AB3Scan.ab3@1016>   AmiBlitz3\CharFlags[@"#"] = #AB3TF_STOP | #AB3TF_IS   | #AB3TF_COPY
00008C28 <AB3Scan.ab3@1017>   AmiBlitz3\CharFlags[@"$"] = #AB3TF_STOP | #AB3TF_IS   | #AB3TF_COPY
00008C40 <AB3Scan.ab3@1018>   AmiBlitz3\CharFlags[@"%"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008C58 <AB3Scan.ab3@1019>   AmiBlitz3\CharFlags[@"&"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008C70 <AB3Scan.ab3@1020>   AmiBlitz3\CharFlags[@"'"] = #AB3TF_STOP | #AB3TF_COPY
00008C88 <AB3Scan.ab3@1021>   AmiBlitz3\CharFlags[@"("] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008CA0 <AB3Scan.ab3@1022>   AmiBlitz3\CharFlags[@")"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008CB8 <AB3Scan.ab3@1023>   AmiBlitz3\CharFlags[@"*"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008CD0 <AB3Scan.ab3@1024>   AmiBlitz3\CharFlags[@"+"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008CE8 <AB3Scan.ab3@1025>   AmiBlitz3\CharFlags[@","] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008D00 <AB3Scan.ab3@1026>   AmiBlitz3\CharFlags[@"-"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008D18 <AB3Scan.ab3@1027>   AmiBlitz3\CharFlags[@"."] = #AB3TF_STOP | #AB3TF_COPY
00008D30 <AB3Scan.ab3@1028>   AmiBlitz3\CharFlags[@"/"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008D48 <AB3Scan.ab3@1029>   AmiBlitz3\CharFlags[@"0"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_BIN |#AB3TF_HEX|#AB3TF_DEC
00008D60 <AB3Scan.ab3@1030>   AmiBlitz3\CharFlags[@"1"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_BIN |#AB3TF_HEX|#AB3TF_DEC
00008D78 <AB3Scan.ab3@1031>   AmiBlitz3\CharFlags[@"2"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008D90 <AB3Scan.ab3@1032>   AmiBlitz3\CharFlags[@"3"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008DA8 <AB3Scan.ab3@1033>   AmiBlitz3\CharFlags[@"4"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008DC0 <AB3Scan.ab3@1034>   AmiBlitz3\CharFlags[@"5"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008DD8 <AB3Scan.ab3@1035>   AmiBlitz3\CharFlags[@"6"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008DF0 <AB3Scan.ab3@1036>   AmiBlitz3\CharFlags[@"7"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008E08 <AB3Scan.ab3@1037>   AmiBlitz3\CharFlags[@"8"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008E20 <AB3Scan.ab3@1038>   AmiBlitz3\CharFlags[@"9"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008E38 <AB3Scan.ab3@1039>   AmiBlitz3\CharFlags[@":"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008E50 <AB3Scan.ab3@1040>   AmiBlitz3\CharFlags[@";"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COMMENT|#AB3TF_COPY
00008E68 <AB3Scan.ab3@1041>   AmiBlitz3\CharFlags[@"<"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008E80 <AB3Scan.ab3@1042>   AmiBlitz3\CharFlags[@"="] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008E98 <AB3Scan.ab3@1043>   AmiBlitz3\CharFlags[@">"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008EB0 <AB3Scan.ab3@1044>   AmiBlitz3\CharFlags[@"?"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008EC8 <AB3Scan.ab3@1045>   AmiBlitz3\CharFlags[@"@"] = #AB3TF_STOP | #AB3TF_COPY
00008EE0 <AB3Scan.ab3@1046>   AmiBlitz3\CharFlags[@"A"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00008EF8 <AB3Scan.ab3@1047>   AmiBlitz3\CharFlags[@"B"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00008F10 <AB3Scan.ab3@1048>   AmiBlitz3\CharFlags[@"C"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00008F28 <AB3Scan.ab3@1049>   AmiBlitz3\CharFlags[@"D"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00008F40 <AB3Scan.ab3@1050>   AmiBlitz3\CharFlags[@"E"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00008F58 <AB3Scan.ab3@1051>   AmiBlitz3\CharFlags[@"F"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00008F70 <AB3Scan.ab3@1052>   AmiBlitz3\CharFlags[@"G"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00008F88 <AB3Scan.ab3@1053>   AmiBlitz3\CharFlags[@"H"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00008FA0 <AB3Scan.ab3@1054>   AmiBlitz3\CharFlags[@"I"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00008FB8 <AB3Scan.ab3@1055>   AmiBlitz3\CharFlags[@"J"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00008FD0 <AB3Scan.ab3@1056>   AmiBlitz3\CharFlags[@"K"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00008FE8 <AB3Scan.ab3@1057>   AmiBlitz3\CharFlags[@"L"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009000 <AB3Scan.ab3@1058>   AmiBlitz3\CharFlags[@"M"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009018 <AB3Scan.ab3@1059>   AmiBlitz3\CharFlags[@"N"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009030 <AB3Scan.ab3@1060>   AmiBlitz3\CharFlags[@"O"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009048 <AB3Scan.ab3@1061>   AmiBlitz3\CharFlags[@"P"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009060 <AB3Scan.ab3@1062>   AmiBlitz3\CharFlags[@"Q"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009078 <AB3Scan.ab3@1063>   AmiBlitz3\CharFlags[@"R"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009090 <AB3Scan.ab3@1064>   AmiBlitz3\CharFlags[@"S"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090A8 <AB3Scan.ab3@1065>   AmiBlitz3\CharFlags[@"T"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090C0 <AB3Scan.ab3@1066>   AmiBlitz3\CharFlags[@"U"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090D8 <AB3Scan.ab3@1067>   AmiBlitz3\CharFlags[@"V"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090F0 <AB3Scan.ab3@1068>   AmiBlitz3\CharFlags[@"W"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009108 <AB3Scan.ab3@1069>   AmiBlitz3\CharFlags[@"X"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009120 <AB3Scan.ab3@1070>   AmiBlitz3\CharFlags[@"Y"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009138 <AB3Scan.ab3@1071>   AmiBlitz3\CharFlags[@"Z"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009150 <AB3Scan.ab3@1072>   AmiBlitz3\CharFlags[@"["] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009168 <AB3Scan.ab3@1073>   AmiBlitz3\CharFlags[@"\"] = #AB3TF_STOP | #AB3TF_COPY
00009180 <AB3Scan.ab3@1074>   AmiBlitz3\CharFlags[@"]"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009198 <AB3Scan.ab3@1075>   AmiBlitz3\CharFlags[@"^"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
000091B0 <AB3Scan.ab3@1076>   AmiBlitz3\CharFlags[@"_"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000091C8 <AB3Scan.ab3@1077>   AmiBlitz3\CharFlags[@"`"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
000091E0 <AB3Scan.ab3@1078>   AmiBlitz3\CharFlags[@"a"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
000091F8 <AB3Scan.ab3@1079>   AmiBlitz3\CharFlags[@"b"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
00009210 <AB3Scan.ab3@1080>   AmiBlitz3\CharFlags[@"c"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
00009228 <AB3Scan.ab3@1081>   AmiBlitz3\CharFlags[@"d"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
00009240 <AB3Scan.ab3@1082>   AmiBlitz3\CharFlags[@"e"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
00009258 <AB3Scan.ab3@1083>   AmiBlitz3\CharFlags[@"f"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
00009270 <AB3Scan.ab3@1084>   AmiBlitz3\CharFlags[@"g"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009288 <AB3Scan.ab3@1085>   AmiBlitz3\CharFlags[@"h"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000092A0 <AB3Scan.ab3@1086>   AmiBlitz3\CharFlags[@"i"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000092B8 <AB3Scan.ab3@1087>   AmiBlitz3\CharFlags[@"j"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000092D0 <AB3Scan.ab3@1088>   AmiBlitz3\CharFlags[@"k"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000092E8 <AB3Scan.ab3@1089>   AmiBlitz3\CharFlags[@"l"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009300 <AB3Scan.ab3@1090>   AmiBlitz3\CharFlags[@"m"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009318 <AB3Scan.ab3@1091>   AmiBlitz3\CharFlags[@"n"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009330 <AB3Scan.ab3@1092>   AmiBlitz3\CharFlags[@"o"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009348 <AB3Scan.ab3@1093>   AmiBlitz3\CharFlags[@"p"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009360 <AB3Scan.ab3@1094>   AmiBlitz3\CharFlags[@"q"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009378 <AB3Scan.ab3@1095>   AmiBlitz3\CharFlags[@"r"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009390 <AB3Scan.ab3@1096>   AmiBlitz3\CharFlags[@"s"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093A8 <AB3Scan.ab3@1097>   AmiBlitz3\CharFlags[@"t"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093C0 <AB3Scan.ab3@1098>   AmiBlitz3\CharFlags[@"u"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093D8 <AB3Scan.ab3@1099>   AmiBlitz3\CharFlags[@"v"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093F0 <AB3Scan.ab3@1100>   AmiBlitz3\CharFlags[@"w"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009408 <AB3Scan.ab3@1101>   AmiBlitz3\CharFlags[@"x"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009420 <AB3Scan.ab3@1102>   AmiBlitz3\CharFlags[@"y"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009438 <AB3Scan.ab3@1103>   AmiBlitz3\CharFlags[@"z"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009450 <AB3Scan.ab3@1104>   AmiBlitz3\CharFlags[@"{"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009468 <AB3Scan.ab3@1105>   AmiBlitz3\CharFlags[@"|"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009480 <AB3Scan.ab3@1106>   AmiBlitz3\CharFlags[@"}"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009498 <AB3Scan.ab3@1107>   AmiBlitz3\CharFlags[@"~"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
000094B0 <AB3Scan.ab3@1108>   AmiBlitz3\CharFlags[ 127] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW
000094E6 <AB3Scan.ab3@1110>   AmiBlitz3\TokenT = pft_Load{tokenfile}
00009500 <AB3Scan.ab3@1112>   If AmiBlitz3\TokenT=Null
00009514 <AB3Scan.ab3@1113>     AmiBlitz3\TokenT = pft_Create{4096}
00009548 <AB3Scan.ab3@1114>     pftlib_SetInt32{AmiBlitz3\TokenT,"End",#TOKEN_End}
0000957C <AB3Scan.ab3@1115>     pftlib_SetInt32{AmiBlitz3\TokenT,"Return",#TOKEN_Return    } ; $8007
000095B0 <AB3Scan.ab3@1116>     pftlib_SetInt32{AmiBlitz3\TokenT,"Statement",#TOKEN_Statement } ; $8008
000095E4 <AB3Scan.ab3@1117>     pftlib_SetInt32{AmiBlitz3\TokenT,"Function",#TOKEN_Function  } ; $8009
00009618 <AB3Scan.ab3@1118>     pftlib_SetInt32{AmiBlitz3\TokenT,"If",#TOKEN_If        } ; $800B
0000964C <AB3Scan.ab3@1119>     pftlib_SetInt32{AmiBlitz3\TokenT,"While",#TOKEN_While     } ; $800C
00009680 <AB3Scan.ab3@1120>     pftlib_SetInt32{AmiBlitz3\TokenT,"Macro",#TOKEN_Macro     } ; $800D
000096B4 <AB3Scan.ab3@1121>     pftlib_SetInt32{AmiBlitz3\TokenT,"Select",#TOKEN_Select    } ; $800E
000096E8 <AB3Scan.ab3@1122>     pftlib_SetInt32{AmiBlitz3\TokenT,"Case",#TOKEN_Case      } ; $800F
0000971C <AB3Scan.ab3@1123>     pftlib_SetInt32{AmiBlitz3\TokenT,"For",#TOKEN_For       } ; $8016
00009750 <AB3Scan.ab3@1124>     pftlib_SetInt32{AmiBlitz3\TokenT,"Then",#TOKEN_Then      } ; $8021
00009784 <AB3Scan.ab3@1125>     pftlib_SetInt32{AmiBlitz3\TokenT,"Stop",#TOKEN_Stop      } ; $802D
000097B8 <AB3Scan.ab3@1126>     pftlib_SetInt32{AmiBlitz3\TokenT,"TRAP",#TOKEN_TRAP      } ; $80AE
000097EC <AB3Scan.ab3@1127>     pftlib_SetInt32{AmiBlitz3\TokenT,"Repeat",#TOKEN_Repeat    } ; $80BB
00009820 <AB3Scan.ab3@1128>     pftlib_SetInt32{AmiBlitz3\TokenT,"EndIf",#TOKEN_EndIf     } ; $80C0
00009854 <AB3Scan.ab3@1129>     pftlib_SetInt32{AmiBlitz3\TokenT,"Object",#TOKEN_Object    } ; $80D7
00009888 <AB3Scan.ab3@1130>     pftlib_SetInt32{AmiBlitz3\TokenT,"NEWTYPE",#TOKEN_NEWTYPE   } ; $8001
000098BC <AB3Scan.ab3@1131>     pftlib_SetInt32{AmiBlitz3\TokenT,"INCLUDE",#TOKEN_INCLUDE   } ; $8013
000098F0 <AB3Scan.ab3@1132>     pftlib_SetInt32{AmiBlitz3\TokenT,"XINCLUDE",#TOKEN_XINCLUDE  } ; $8012
00009924 <AB3Scan.ab3@1133>     pftlib_SetInt32{AmiBlitz3\TokenT,"SHARED",#TOKEN_SHARED    } ; $8015
00009958 <AB3Scan.ab3@1134>     pftlib_SetInt32{AmiBlitz3\TokenT,"DEFTYPE",#TOKEN_DEFTYPE   } ; $8033
0000998C <AB3Scan.ab3@1135>     pftlib_SetInt32{AmiBlitz3\TokenT,"SizeOf",#TOKEN_SizeOf    } ; $802F
00009994 <AB3Scan.ab3@1141>   Function Return True
000099AE <AB3Scan.ab3@1143> End Function
000099B4 <AB3Scan.ab3@1156> err.l        = False ; indicate that an error has occured
000099BA <AB3Scan.ab3@1157> showhelp.l   = False ; show the CLI tool's help
000099C2 <AB3Scan.ab3@1160> verbose.l    = 1
000099C8 <AB3Scan.ab3@1161> recursive.l  = False
000099F0 <AB3Scan.ab3@1162> incpath.s    = ""
000099F8 <AB3Scan.ab3@1163> dflags.l     = #DF_ALL
00009A44 <AB3Scan.ab3@1164> exefile.s    = dos_GetProgFile{""}
00009A9C <AB3Scan.ab3@1165> tokendir.s   = dos_PathPart{exefile}
00009B10 <AB3Scan.ab3@1166> tokenfile.s  = dos_AddPart{tokendir,"tokens.pft"}
00009B40 <AB3Scan.ab3@1169> filename.s = dos_GetNextArg{} ; first read the filename
00009B78 <AB3Scan.ab3@1170> If filename.s = ""
00009BB0 <AB3Scan.ab3@1171>   NPrint "*** ERROR: No filename specified!"
00009BB6 <AB3Scan.ab3@1172>   err=True
00009BE6 <AB3Scan.ab3@1177>   arg.s = dos_GetNextArg{} ; get the next CLI argument
00009C32 <AB3Scan.ab3@1178>   larg.s = LCase$(arg) ; lower case the option string
00009CE0 <AB3Scan.ab3@1179>   If Left$(larg.s,1) = "-" Then larg=UnRight$(larg,1)
00009D16 <AB3Scan.ab3@1180>   Select larg
00009D6A <AB3Scan.ab3@1181>     Case "v"  : verbose    = Vallong(dos_GetNextArg{})
00009D9A <AB3Scan.ab3@1182>     Case "h"  : showhelp   = True  ; show the help and quit
00009DCA <AB3Scan.ab3@1183>     Case "r"  : recursive  = True
00009E24 <AB3Scan.ab3@1184>     Case "i"  : incpath    = dos_GetNextArg{}
00009E7E <AB3Scan.ab3@1185>     Case "t"  : tokenfile  = dos_GetNextArg{}
00009EB0 <AB3Scan.ab3@1186>     Case "df" : dflags   = 0
00009EF8 <AB3Scan.ab3@1187>       flags.s = LCase$(dos_GetNextArg{})
00009F58 <AB3Scan.ab3@1188>       If Instr(flags,"f") Then dflags|#DF_FUNCTION
00009FB8 <AB3Scan.ab3@1189>       If Instr(flags,"m") Then dflags|#DF_MACRO
0000A018 <AB3Scan.ab3@1190>       If Instr(flags,"t") Then dflags|#DF_NEWTYPE
0000A078 <AB3Scan.ab3@1191>       If Instr(flags,"c") Then dflags|#DF_CONSTANT
0000A0D8 <AB3Scan.ab3@1192>       If Instr(flags,"l") Then dflags|#DF_LABEL
0000A138 <AB3Scan.ab3@1193>       If Instr(flags,"s") Then dflags|#DF_SOURCE
0000A198 <AB3Scan.ab3@1194>       If Instr(flags,"n") Then dflags|#DF_FIELD
0000A1F8 <AB3Scan.ab3@1195>       If Instr(flags,"g") Then dflags|#DF_GLOBAL
0000A258 <AB3Scan.ab3@1196>       If Instr(flags,"v") Then dflags|#DF_LOCAL
0000A2B8 <AB3Scan.ab3@1197>       If Instr(flags,"i") Then dflags|#DF_INCLUDE
0000A318 <AB3Scan.ab3@1198>       If Instr(flags,"$") Then dflags|#DF_STRING
0000A31E <AB3Scan.ab3@1199>     Default
0000A356 <AB3Scan.ab3@1200>       If arg><""
0000A3EA <AB3Scan.ab3@1201>         NPrint "*** ERROR: Unknown option \\22",arg,"\\22 specified!"
0000A3F0 <AB3Scan.ab3@1202>         err = True
0000A3FE <AB3Scan.ab3@1204>   End Select
0000A43C <AB3Scan.ab3@1205> Until arg = "" ; until we processed all arguments
0000A45E <AB3Scan.ab3@1208> If err><False OR showhelp = True
0000A4A2 <AB3Scan.ab3@1209>   NPrint vers
0000A4DA <AB3Scan.ab3@1210>   NPrint "Scan an \\22Amiblitz\\22 source code for various properties."
0000A512 <AB3Scan.ab3@1211>   NPrint "\\nSyntax: AB3Scan <sourcefile> [options]"
0000A54A <AB3Scan.ab3@1212>   NPrint "  required"
0000A582 <AB3Scan.ab3@1213>   NPrint "  <sourcefile>      : source file to process"
0000A5BA <AB3Scan.ab3@1214>   NPrint "  optional"
0000A5F2 <AB3Scan.ab3@1215>   NPrint "  -(df)lags <flags> : flags to indicate what to output:"
0000A62A <AB3Scan.ab3@1216>   NPrint "                      S = source file"
0000A662 <AB3Scan.ab3@1217>   NPrint "                      F = functions"
0000A69A <AB3Scan.ab3@1218>   NPrint "                      M = macros"
0000A6D2 <AB3Scan.ab3@1219>   NPrint "                      T = newtypes"
0000A70A <AB3Scan.ab3@1220>   NPrint "                      N = newtype fields"
0000A742 <AB3Scan.ab3@1221>   NPrint "                      C = constants"
0000A77A <AB3Scan.ab3@1222>   NPrint "                      L = labels"
0000A7B2 <AB3Scan.ab3@1223>   NPrint "                      G = global variables"
0000A7EA <AB3Scan.ab3@1224>   NPrint "                      V = local variables"
0000A822 <AB3Scan.ab3@1225>   NPrint "                      I = includes"
0000A85A <AB3Scan.ab3@1226>   NPrint "                      $ = strings"
0000A892 <AB3Scan.ab3@1227>   NPrint "  -(i)nclude <path> : include directory"
0000A8CA <AB3Scan.ab3@1228>   NPrint "  -(t)okens <file>  : prefixtree file with AmiBlitz3 tokens"
0000A902 <AB3Scan.ab3@1229>   NPrint "  -(r)ecursive      : scan recursive (XINCLUDES) too"
0000A93A <AB3Scan.ab3@1230>   NPrint "  -(v)erbose <v>    : verbose level"
0000A972 <AB3Scan.ab3@1231>   NPrint "  -(h)help          : show this help"
0000A9AA <AB3Scan.ab3@1232>   NPrint "\\nExample:"
0000A9E2 <AB3Scan.ab3@1233>   NPrint "  AB3Scan \\22DH0:Files\MyProgram.ab3\\22 -r -df SFM\\n"
0000A9E8 <AB3Scan.ab3@1234>   End
0000AA1E <AB3Scan.ab3@1237> If dos_IsDir{filename}
0000AA52 <AB3Scan.ab3@1238>   path.s    = filename
0000AA7A <AB3Scan.ab3@1239>   pattern.s = "#?.(bb|bb2|ab2|ab3)"
0000AA80 <AB3Scan.ab3@1240> Else
0000AAD8 <AB3Scan.ab3@1241>   path.s    = dos_PathPart{filename}
0000AB30 <AB3Scan.ab3@1242>   pattern.s = dos_FilePart{filename}
0000AC32 <AB3Scan.ab3@1246> If verbose>1 Then NPrint "INFO Scan \\22",path,"\\22 for \\22",pattern,"\\22..."
0000AC60 <AB3Scan.ab3@1247> ab3_Init{tokenfile}
0000ACC6 <AB3Scan.ab3@1248> *parser.Parser = ab3_CreateParser{incpath,pattern,recursive,dflags,verbose}
0000AD18 <AB3Scan.ab3@1249> If *parser = Null Then NPrint "*** Unable to create AB3 Parser!" : Goto exit
0000AD4A <AB3Scan.ab3@1250> ab3_Scan{*parser,path}
0000AD9A <AB3Scan.ab3@1253> If *parser\verbose>1 Then NPrint "INFO Done."
0000ADAE <AB3Scan.ab3@1255> If *parser Then ab3_FreeParser{*parser}
0000ADB4 <AB3Scan.ab3@1256> ab3_Deinit{}
0000ADBA <AB3Scan.ab3@1257> End
0000ADC0 <AB3Scan.ab3@1259> Dc.b "$VER: "
0000ADE5 <AB3Scan.ab3@1261> Dc.b "AB3Scan \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0
0000ADF1 <AB3Scan.ab3@1263> Dc.b "AB3Scan \\__VER_MAJOR.\\__VER_MINOR",0
