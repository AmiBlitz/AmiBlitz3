00000008 <AB3Scan.ab3@0> 
00000014 <AB3Scan.ab3@2> optimize 7
00000014 <error.include.ab3@1> XINCLUDE "error.include.ab3"
0000004C <error.include.ab3@62> XINCLUDE "error.include.ab3"
00000074 <error.include.ab3@63> XINCLUDE "error.include.ab3"
0000009C <error.include.ab3@64> XINCLUDE "error.include.ab3"
000000C4 <error.include.ab3@65> XINCLUDE "error.include.ab3"
000000CA <error.include.ab3@66> XINCLUDE "error.include.ab3"
000000FE <error.include.ab3@67> XINCLUDE "error.include.ab3"
00000132 <error.include.ab3@68> XINCLUDE "error.include.ab3"
00000166 <error.include.ab3@69> XINCLUDE "error.include.ab3"
00000182 <error.include.ab3@73> XINCLUDE "error.include.ab3"
0000019C <error.include.ab3@99> XINCLUDE "error.include.ab3"
000001A8 <error.include.ab3@101> XINCLUDE "error.include.ab3"
000001AC <error.include.ab3@102> XINCLUDE "error.include.ab3"
000001BA <error.include.ab3@104> XINCLUDE "error.include.ab3"
000001FC <error.include.ab3@124> XINCLUDE "error.include.ab3"
00000280 <error.include.ab3@126> XINCLUDE "error.include.ab3"
000002EC <error.include.ab3@127> XINCLUDE "error.include.ab3"
00000306 <error.include.ab3@129> XINCLUDE "error.include.ab3"
0000033E <error.include.ab3@130> XINCLUDE "error.include.ab3"
0000039E <error.include.ab3@131> XINCLUDE "error.include.ab3"
000003AC <error.include.ab3@133> XINCLUDE "error.include.ab3"
000003BA <error.include.ab3@134> XINCLUDE "error.include.ab3"
000003C8 <error.include.ab3@135> XINCLUDE "error.include.ab3"
000003D6 <error.include.ab3@136> XINCLUDE "error.include.ab3"
000003FE <error.include.ab3@137> XINCLUDE "error.include.ab3"
0000040C <error.include.ab3@138> XINCLUDE "error.include.ab3"
00000414 <error.include.ab3@139> XINCLUDE "error.include.ab3"
00000446 <error.include.ab3@141> XINCLUDE "error.include.ab3"
00000460 <error.include.ab3@146> XINCLUDE "error.include.ab3"
00000498 <error.include.ab3@147> XINCLUDE "error.include.ab3"
0000049E <error.include.ab3@148> XINCLUDE "error.include.ab3"
000004E2 <error.include.ab3@149> XINCLUDE "error.include.ab3"
0000052A <error.include.ab3@150> XINCLUDE "error.include.ab3"
00000534 <error.include.ab3@154> XINCLUDE "error.include.ab3"
0000054E <error.include.ab3@156> XINCLUDE "error.include.ab3"
0000054E <AB3Scan.ab3@6> XINCLUDE "error.include.ab3"
0000055A <AB3Scan.ab3@7> error_SetFlags{#error_stdout}
0000055A <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000055A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000055A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000055A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
0000055A <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000584 <strptr.include.ab3@40> XINCLUDE "dos.include.ab3"
0000059E <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
000005A8 <strptr.include.ab3@99> XINCLUDE "dos.include.ab3"
000005F8 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
000005FC <strptr.include.ab3@102> XINCLUDE "dos.include.ab3"
0000061E <strptr.include.ab3@166> XINCLUDE "dos.include.ab3"
00000628 <strptr.include.ab3@168> XINCLUDE "dos.include.ab3"
00000678 <strptr.include.ab3@169> XINCLUDE "dos.include.ab3"
00000682 <strptr.include.ab3@170> XINCLUDE "dos.include.ab3"
00000694 <strptr.include.ab3@171> XINCLUDE "dos.include.ab3"
0000069C <strptr.include.ab3@172> XINCLUDE "dos.include.ab3"
000006CA <strptr.include.ab3@173> XINCLUDE "dos.include.ab3"
000006DC <strptr.include.ab3@175> XINCLUDE "dos.include.ab3"
000006FE <strptr.include.ab3@177> XINCLUDE "dos.include.ab3"
00000708 <strptr.include.ab3@181> XINCLUDE "dos.include.ab3"
00000716 <strptr.include.ab3@182> XINCLUDE "dos.include.ab3"
00000720 <strptr.include.ab3@183> XINCLUDE "dos.include.ab3"
00000746 <strptr.include.ab3@184> XINCLUDE "dos.include.ab3"
00000760 <strptr.include.ab3@185> XINCLUDE "dos.include.ab3"
00000764 <strptr.include.ab3@190> XINCLUDE "dos.include.ab3"
00000792 <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
0000079C <strptr.include.ab3@207> XINCLUDE "dos.include.ab3"
000007EC <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000800 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000812 <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000834 <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
0000083E <strptr.include.ab3@217> XINCLUDE "dos.include.ab3"
0000084C <strptr.include.ab3@218> XINCLUDE "dos.include.ab3"
00000856 <strptr.include.ab3@219> XINCLUDE "dos.include.ab3"
0000087E <strptr.include.ab3@220> XINCLUDE "dos.include.ab3"
00000898 <strptr.include.ab3@221> XINCLUDE "dos.include.ab3"
000008B0 <strptr.include.ab3@225> XINCLUDE "dos.include.ab3"
000008CA <strptr.include.ab3@269> XINCLUDE "dos.include.ab3"
000008E0 <strptr.include.ab3@271> XINCLUDE "dos.include.ab3"
000008EC <strptr.include.ab3@272> XINCLUDE "dos.include.ab3"
000008F2 <strptr.include.ab3@274> XINCLUDE "dos.include.ab3"
0000090C <strptr.include.ab3@315> XINCLUDE "dos.include.ab3"
00000916 <strptr.include.ab3@317> XINCLUDE "dos.include.ab3"
00000924 <strptr.include.ab3@318> XINCLUDE "dos.include.ab3"
00000956 <strptr.include.ab3@320> XINCLUDE "dos.include.ab3"
00000974 <strptr.include.ab3@322> XINCLUDE "dos.include.ab3"
0000097E <strptr.include.ab3@323> XINCLUDE "dos.include.ab3"
00000994 <strptr.include.ab3@326> XINCLUDE "dos.include.ab3"
0000099E <strptr.include.ab3@327> XINCLUDE "dos.include.ab3"
000009AE <strptr.include.ab3@328> XINCLUDE "dos.include.ab3"
000009B6 <strptr.include.ab3@329> XINCLUDE "dos.include.ab3"
000009B8 <strptr.include.ab3@331> XINCLUDE "dos.include.ab3"
000009E6 <strptr.include.ab3@332> XINCLUDE "dos.include.ab3"
000009E6 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
000009FC <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00000A16 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
00000A20 <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
00000A42 <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00000A66 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00000A78 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
00000A90 <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00000AA4 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
00000AB6 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
00000AC6 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
00000ACC <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
00000ADC <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
00000AEC <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
00000B06 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
00000B0A <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00000B24 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00000B54 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
00000B5E <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00000B68 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00000B8A <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
00000BAE <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
00000BC0 <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
00000BD8 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
00000BEC <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
00000BFE <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
00000C0E <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00000C14 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00000C24 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00000C34 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
00000C4E <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00000C54 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00000C5A <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
00000C5E <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00000C78 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
00000C80 <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00000C8A <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
00000CA0 <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
00000CB4 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
00000CE0 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
00000CEE <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
00000CF8 <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
00000CFE <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
00000D08 <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
00000D0E <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00000D2C <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00000D34 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00000D3E <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00000D5C <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00000D72 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
00000D86 <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
00000DC2 <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
00000DD0 <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
00000DDA <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
00000DE0 <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
00000DEA <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
00000DEE <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
00000DF4 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
00000E0E <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
00000E18 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
00000E22 <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00000E38 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00000E48 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
00000E52 <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00000E58 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00000E5C <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
00000E7E <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00000E86 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
00000EA0 <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00000EAA <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
00000EC0 <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
00000ED4 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00000F32 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00000F6C <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00000F7E <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00000FA0 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
00000FA6 <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
00001004 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000103E <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001044 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000107E <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
000010CA <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000010D4 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000010DA <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000010E4 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000010F8 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000113E <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001146 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001164 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
00001190 <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
000011AE <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
000011C8 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000011E2 <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001278 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
00001290 <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001296 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
000012AE <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000012DE <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
00001300 <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
0000135E <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001394 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
000013C4 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001454 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001468 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
000014C6 <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
000014FC <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
0000152C <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001532 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
0000154C <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
0000155A <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001594 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
000015CA <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
000015FA <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001608 <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001612 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001618 <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001622 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001636 <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001636 <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001636 <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
0000164C <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001656 <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
0000166E <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001670 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
0000169E <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
0000169E <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
000016B4 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
000016BC <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
000016C4 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
000016EC <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
000016F4 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
0000171C <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001744 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
0000176C <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001774 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
0000177C <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001784 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
0000178C <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001794 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
0000179C <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
000017A4 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
000017AC <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
000017B4 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
000017D4 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
000017DC <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
000017E4 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
0000180C <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001822 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
0000182E <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001832 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001848 <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001862 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001878 <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
000018A2 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
000018AC <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
000018B2 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
000018C8 <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
000018E2 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
000018F8 <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001922 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
0000192C <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001932 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001948 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
0000195A <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
000019D4 <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
000019FE <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
00001A16 <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00001A2C <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
00001A2E <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
00001A68 <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00001A9C <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00001AC2 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00001AE2 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00001B02 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
00001B2C <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
00001B42 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
00001B4C <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00001B74 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
00001B7A <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00001BA2 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00001BCC <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
00001C14 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00001C84 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00001CAE <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00001CCC <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
00001CE2 <dos.include.ab3@1037> XINCLUDE "dos.include.ab3"
00001CE8 <dos.include.ab3@1040> XINCLUDE "dos.include.ab3"
00001CEE <dos.include.ab3@1041> XINCLUDE "dos.include.ab3"
00001CFE <dos.include.ab3@1042> XINCLUDE "dos.include.ab3"
00001D04 <dos.include.ab3@1043> XINCLUDE "dos.include.ab3"
00001D08 <dos.include.ab3@1045> XINCLUDE "dos.include.ab3"
00001D0A <dos.include.ab3@1048> XINCLUDE "dos.include.ab3"
00001D24 <dos.include.ab3@1099> XINCLUDE "dos.include.ab3"
00001D4C <dos.include.ab3@1100> XINCLUDE "dos.include.ab3"
00001D5A <dos.include.ab3@1101> XINCLUDE "dos.include.ab3"
00001D72 <dos.include.ab3@1104> XINCLUDE "dos.include.ab3"
00001D7C <dos.include.ab3@1105> XINCLUDE "dos.include.ab3"
00001D92 <dos.include.ab3@1106> XINCLUDE "dos.include.ab3"
00001DAE <dos.include.ab3@1107> XINCLUDE "dos.include.ab3"
00001DDC <dos.include.ab3@1108> XINCLUDE "dos.include.ab3"
00001E06 <dos.include.ab3@1113> XINCLUDE "dos.include.ab3"
00001E1E <dos.include.ab3@1114> XINCLUDE "dos.include.ab3"
00001E48 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@1173> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@1174> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@1175> XINCLUDE "dos.include.ab3"
00001F6E <dos.include.ab3@1177> XINCLUDE "dos.include.ab3"
00001F98 <dos.include.ab3@1178> XINCLUDE "dos.include.ab3"
00001FC2 <dos.include.ab3@1180> XINCLUDE "dos.include.ab3"
00001FE0 <dos.include.ab3@1181> XINCLUDE "dos.include.ab3"
0000200A <dos.include.ab3@1199> XINCLUDE "dos.include.ab3"
00002076 <dos.include.ab3@1201> XINCLUDE "dos.include.ab3"
0000209E <dos.include.ab3@1202> XINCLUDE "dos.include.ab3"
000020AC <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
000020E0 <dos.include.ab3@1204> XINCLUDE "dos.include.ab3"
000020EE <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002148 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002194 <dos.include.ab3@1210> XINCLUDE "dos.include.ab3"
00002214 <dos.include.ab3@1211> XINCLUDE "dos.include.ab3"
00002222 <dos.include.ab3@1217> XINCLUDE "dos.include.ab3"
00002246 <dos.include.ab3@1218> XINCLUDE "dos.include.ab3"
00002270 <dos.include.ab3@1219> XINCLUDE "dos.include.ab3"
0000229A <dos.include.ab3@1225> XINCLUDE "dos.include.ab3"
000022B8 <dos.include.ab3@1226> XINCLUDE "dos.include.ab3"
000022CE <dos.include.ab3@1375> XINCLUDE "dos.include.ab3"
000022D4 <dos.include.ab3@1377> XINCLUDE "dos.include.ab3"
000022DE <dos.include.ab3@1378> XINCLUDE "dos.include.ab3"
000022E8 <dos.include.ab3@1379> XINCLUDE "dos.include.ab3"
00002306 <dos.include.ab3@1382> XINCLUDE "dos.include.ab3"
0000230C <dos.include.ab3@1383> XINCLUDE "dos.include.ab3"
00002312 <dos.include.ab3@1384> XINCLUDE "dos.include.ab3"
00002322 <dos.include.ab3@1386> XINCLUDE "dos.include.ab3"
00002328 <dos.include.ab3@1387> XINCLUDE "dos.include.ab3"
00002330 <dos.include.ab3@1388> XINCLUDE "dos.include.ab3"
00002358 <dos.include.ab3@1389> XINCLUDE "dos.include.ab3"
00002362 <dos.include.ab3@1390> XINCLUDE "dos.include.ab3"
0000236C <dos.include.ab3@1392> XINCLUDE "dos.include.ab3"
00002380 <dos.include.ab3@1393> XINCLUDE "dos.include.ab3"
00002396 <dos.include.ab3@1498> XINCLUDE "dos.include.ab3"
0000239C <dos.include.ab3@1504> XINCLUDE "dos.include.ab3"
000023C0 <dos.include.ab3@1505> XINCLUDE "dos.include.ab3"
000023E4 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
00002408 <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
0000240E <dos.include.ab3@1508> XINCLUDE "dos.include.ab3"
0000243A <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000243C <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
0000246A <dos.include.ab3@1511> XINCLUDE "dos.include.ab3"
00002494 <dos.include.ab3@2244> XINCLUDE "dos.include.ab3"
000024A8 <dos.include.ab3@2245> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@2246> XINCLUDE "dos.include.ab3"
000025CC <dos.include.ab3@2247> XINCLUDE "dos.include.ab3"
000025D2 <dos.include.ab3@2248> XINCLUDE "dos.include.ab3"
00002622 <dos.include.ab3@2249> XINCLUDE "dos.include.ab3"
0000264C <dos.include.ab3@2250> XINCLUDE "dos.include.ab3"
0000266A <dos.include.ab3@2251> XINCLUDE "dos.include.ab3"
00002694 <dos.include.ab3@2275> XINCLUDE "dos.include.ab3"
000026A8 <dos.include.ab3@2276> XINCLUDE "dos.include.ab3"
000026E6 <dos.include.ab3@2277> XINCLUDE "dos.include.ab3"
000027CC <dos.include.ab3@2278> XINCLUDE "dos.include.ab3"
000027D2 <dos.include.ab3@2279> XINCLUDE "dos.include.ab3"
00002844 <dos.include.ab3@2280> XINCLUDE "dos.include.ab3"
0000286E <dos.include.ab3@2281> XINCLUDE "dos.include.ab3"
0000288C <dos.include.ab3@2282> XINCLUDE "dos.include.ab3"
000028C6 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000028FE <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
00002956 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
000029E4 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
00002A04 <dos.include.ab3@2314> XINCLUDE "dos.include.ab3"
00002A2E <dos.include.ab3@2666> XINCLUDE "dos.include.ab3"
00002A34 <dos.include.ab3@2668> XINCLUDE "dos.include.ab3"
00002A74 <dos.include.ab3@2669> XINCLUDE "dos.include.ab3"
00002A94 <dos.include.ab3@2670> XINCLUDE "dos.include.ab3"
00002ABA <dos.include.ab3@2671> XINCLUDE "dos.include.ab3"
00002AE6 <dos.include.ab3@2672> XINCLUDE "dos.include.ab3"
00002AFE <dos.include.ab3@2673> XINCLUDE "dos.include.ab3"
00002B04 <dos.include.ab3@2674> XINCLUDE "dos.include.ab3"
00002B0A <dos.include.ab3@2675> XINCLUDE "dos.include.ab3"
00002B10 <dos.include.ab3@2676> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@2679> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@2681> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@2682> XINCLUDE "dos.include.ab3"
00002B44 <AB3Scan.ab3@9> XINCLUDE "dos.include.ab3"
00002B44 <prefixtree.include.ab3@1> XINCLUDE "prefixtree.include.ab3"
00002B4A <prefixtree.include.ab3@48> XINCLUDE "prefixtree.include.ab3"
00002B72 <prefixtree.include.ab3@49> XINCLUDE "prefixtree.include.ab3"
00002B7A <prefixtree.include.ab3@50> XINCLUDE "prefixtree.include.ab3"
00002B90 <prefixtree.include.ab3@70> XINCLUDE "prefixtree.include.ab3"
00002BA4 <prefixtree.include.ab3@73> XINCLUDE "prefixtree.include.ab3"
00002BC2 <prefixtree.include.ab3@74> XINCLUDE "prefixtree.include.ab3"
00002BD2 <prefixtree.include.ab3@75> XINCLUDE "prefixtree.include.ab3"
00002BD8 <prefixtree.include.ab3@76> XINCLUDE "prefixtree.include.ab3"
00002BF8 <prefixtree.include.ab3@79> XINCLUDE "prefixtree.include.ab3"
00002BFE <prefixtree.include.ab3@80> XINCLUDE "prefixtree.include.ab3"
00002C12 <prefixtree.include.ab3@81> XINCLUDE "prefixtree.include.ab3"
00002C16 <prefixtree.include.ab3@83> XINCLUDE "prefixtree.include.ab3"
00002C2C <prefixtree.include.ab3@95> XINCLUDE "prefixtree.include.ab3"
00002C36 <prefixtree.include.ab3@98> XINCLUDE "prefixtree.include.ab3"
00002C46 <prefixtree.include.ab3@99> XINCLUDE "prefixtree.include.ab3"
00002C4C <prefixtree.include.ab3@100> XINCLUDE "prefixtree.include.ab3"
00002C54 <prefixtree.include.ab3@101> XINCLUDE "prefixtree.include.ab3"
00002C56 <prefixtree.include.ab3@104> XINCLUDE "prefixtree.include.ab3"
00002C84 <prefixtree.include.ab3@105> XINCLUDE "prefixtree.include.ab3"
00002CBC <prefixtree.include.ab3@117> XINCLUDE "prefixtree.include.ab3"
00002CF8 <prefixtree.include.ab3@118> XINCLUDE "prefixtree.include.ab3"
00002D3E <prefixtree.include.ab3@126> XINCLUDE "prefixtree.include.ab3"
00002DB4 <prefixtree.include.ab3@127> XINCLUDE "prefixtree.include.ab3"
00002DFA <prefixtree.include.ab3@128> XINCLUDE "prefixtree.include.ab3"
00002E3C <prefixtree.include.ab3@134> XINCLUDE "prefixtree.include.ab3"
00002E6A <prefixtree.include.ab3@135> XINCLUDE "prefixtree.include.ab3"
00002E7E <prefixtree.include.ab3@136> XINCLUDE "prefixtree.include.ab3"
00002EA6 <prefixtree.include.ab3@137> XINCLUDE "prefixtree.include.ab3"
00002EC4 <prefixtree.include.ab3@138> XINCLUDE "prefixtree.include.ab3"
00002EE2 <prefixtree.include.ab3@139> XINCLUDE "prefixtree.include.ab3"
00002F28 <prefixtree.include.ab3@140> XINCLUDE "prefixtree.include.ab3"
00002F8E <prefixtree.include.ab3@141> XINCLUDE "prefixtree.include.ab3"
00002FD4 <prefixtree.include.ab3@144> XINCLUDE "prefixtree.include.ab3"
00003002 <prefixtree.include.ab3@145> XINCLUDE "prefixtree.include.ab3"
00003030 <prefixtree.include.ab3@146> XINCLUDE "prefixtree.include.ab3"
0000303A <prefixtree.include.ab3@147> XINCLUDE "prefixtree.include.ab3"
00003054 <prefixtree.include.ab3@148> XINCLUDE "prefixtree.include.ab3"
00003092 <prefixtree.include.ab3@155> XINCLUDE "prefixtree.include.ab3"
000030D4 <prefixtree.include.ab3@156> XINCLUDE "prefixtree.include.ab3"
000030EE <prefixtree.include.ab3@157> XINCLUDE "prefixtree.include.ab3"
000030F6 <prefixtree.include.ab3@158> XINCLUDE "prefixtree.include.ab3"
0000310A <prefixtree.include.ab3@159> XINCLUDE "prefixtree.include.ab3"
0000313C <prefixtree.include.ab3@160> XINCLUDE "prefixtree.include.ab3"
0000315C <prefixtree.include.ab3@161> XINCLUDE "prefixtree.include.ab3"
00003166 <prefixtree.include.ab3@162> XINCLUDE "prefixtree.include.ab3"
000031A8 <prefixtree.include.ab3@163> XINCLUDE "prefixtree.include.ab3"
000031C2 <prefixtree.include.ab3@164> XINCLUDE "prefixtree.include.ab3"
000031CA <prefixtree.include.ab3@165> XINCLUDE "prefixtree.include.ab3"
000031DE <prefixtree.include.ab3@166> XINCLUDE "prefixtree.include.ab3"
00003210 <prefixtree.include.ab3@167> XINCLUDE "prefixtree.include.ab3"
0000322E <prefixtree.include.ab3@168> XINCLUDE "prefixtree.include.ab3"
00003238 <prefixtree.include.ab3@169> XINCLUDE "prefixtree.include.ab3"
00003276 <prefixtree.include.ab3@176> XINCLUDE "prefixtree.include.ab3"
000032A0 <prefixtree.include.ab3@177> XINCLUDE "prefixtree.include.ab3"
000032B0 <prefixtree.include.ab3@178> XINCLUDE "prefixtree.include.ab3"
000032BA <prefixtree.include.ab3@179> XINCLUDE "prefixtree.include.ab3"
000032D4 <prefixtree.include.ab3@180> XINCLUDE "prefixtree.include.ab3"
00003310 <prefixtree.include.ab3@181> XINCLUDE "prefixtree.include.ab3"
0000343A <prefixtree.include.ab3@190> XINCLUDE "prefixtree.include.ab3"
0000343A <AB3Scan.ab3@11> XINCLUDE "prefixtree.include.ab3"
00003464 <AB3Scan.ab3@24> vers.s = Peek.s(?version)
0000348E <AB3Scan.ab3@126> Function.s GetDosFileName{filename.s}
000034A4 <AB3Scan.ab3@128>   MaxLen buff.s = 1024
000034C4 <AB3Scan.ab3@130>   lock.l = Lock_(&filename,#ACCESS_READ);
000034CE <AB3Scan.ab3@131>   If lock
000034F2 <AB3Scan.ab3@132>     NameFromLock_ lock,&buff,1023
0000351C <AB3Scan.ab3@133>     filename = Peek.s(&buff)
00003534 <AB3Scan.ab3@134>     UnLock_ lock : lock=0
0000355E <AB3Scan.ab3@137>   Function Return filename
0000357C <AB3Scan.ab3@139> End Function
0000359A <AB3Scan.ab3@142> Function.l FAST _ab3_ParseComment{*parser.Parser,cpos.l}
000035AC <AB3Scan.ab3@144>   If cpos<2
000035C4 <AB3Scan.ab3@146>   If *parser\ab3header=#AB3H_FOUND
000035E6 <AB3Scan.ab3@147>     While cpos<*parser\clength-4
00003612 <AB3Scan.ab3@148>       If Peek.b(*parser\bptr+cpos)=@"/"
00003620 <AB3Scan.ab3@149>         cpos+1
0000364C <AB3Scan.ab3@150>         If Peek.b(*parser\bptr+cpos)=@"X"
0000365A <AB3Scan.ab3@151>           cpos+1
00003686 <AB3Scan.ab3@152>           If Peek.b(*parser\bptr+cpos)=@"T"
00003694 <AB3Scan.ab3@153>             cpos+1
000036C0 <AB3Scan.ab3@154>             If Peek.b(*parser\bptr+cpos)=@"R"
000036CE <AB3Scan.ab3@155>               cpos+1
000036FA <AB3Scan.ab3@156>               If Peek.b(*parser\bptr+cpos)=@"A"
00003708 <AB3Scan.ab3@157>                 *parser\linecount=0
00003716 <AB3Scan.ab3@158>                 *parser\ab3header = #AB3H_DONE
00003724 <AB3Scan.ab3@164>       cpos+1
0000372A <AB3Scan.ab3@165>     Wend
00003742 <AB3Scan.ab3@168>   If *parser\ab3header=#AB3H_SEARCH
00003764 <AB3Scan.ab3@169>     While cpos<*parser\clength-3
00003790 <AB3Scan.ab3@170>       If Peek.b(*parser\bptr+cpos)=@"X"
0000379E <AB3Scan.ab3@171>         cpos+1
000037CA <AB3Scan.ab3@172>         If Peek.b(*parser\bptr+cpos)=@"T"
000037D8 <AB3Scan.ab3@173>           cpos+1
00003804 <AB3Scan.ab3@174>           If Peek.b(*parser\bptr+cpos)=@"R"
00003812 <AB3Scan.ab3@175>             cpos+1
0000383E <AB3Scan.ab3@176>             If Peek.b(*parser\bptr+cpos)=@"A"
0000384C <AB3Scan.ab3@177>               *parser\ab3header = #AB3H_FOUND
0000385A <AB3Scan.ab3@182>       cpos+1
00003860 <AB3Scan.ab3@183>     Wend
00003870 <AB3Scan.ab3@187>   Function Return *parser\clength; just skip to end of line
00003876 <AB3Scan.ab3@189> End Function
00003898 <AB3Scan.ab3@192> Function.l FAST _ab3_SkipTill{*parser.Parser,cpos.l,char.b}
000038B4 <AB3Scan.ab3@194>   While cpos<*parser\clength
000038D0 <AB3Scan.ab3@195>     c.b = Peek.b(*parser\bptr+cpos)
000038EE <AB3Scan.ab3@196>     If c=char Then Function Return cpos
000038FC <AB3Scan.ab3@197>     cpos+1
00003902 <AB3Scan.ab3@198>   Wend
0000390C <AB3Scan.ab3@199>   Function Return cpos
00003912 <AB3Scan.ab3@201> End Function
00003930 <AB3Scan.ab3@204> Function.l _ab3_ParseString{*parser.Parser,cpos.l}
00003958 <AB3Scan.ab3@206>   bpos.l = cpos-1 : If bpos<0 Then bpos=0
00003974 <AB3Scan.ab3@207>   While cpos<*parser\clength
000039A4 <AB3Scan.ab3@208>     c.w = Peek.b(*parser\bptr+cpos)&$FF : cpos+1
000039C6 <AB3Scan.ab3@209>     If AmiBlitz3\CharFlags[c]&#AB3TF_QUOT
000039E6 <AB3Scan.ab3@211>         If *parser\dflags&(#DF_STRING)><0
00003A22 <AB3Scan.ab3@212>           string.s = Peeks$(*parser\bptr+bpos,cpos-bpos)
00003AC6 <AB3Scan.ab3@213>           NPrint "STRING\\09",*parser\linecount,"\\09",string
00003AD0 <AB3Scan.ab3@216>       Function Return cpos
00003AD6 <AB3Scan.ab3@218>   Wend
00003AE0 <AB3Scan.ab3@219>   Function Return cpos
00003AF4 <AB3Scan.ab3@221> End Function
00003B12 <AB3Scan.ab3@224> Function.l FAST _ab3_SkipWhiteSpaces{*parser.Parser,cpos.l}
00003B84 <AB3Scan.ab3@226>   While cpos<*parser\clength AND AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]&#AB3TF_SPACE : cpos+1 : Wend
00003B8E <AB3Scan.ab3@227>   Function Return cpos
00003B94 <AB3Scan.ab3@229> End Function
00003BB2 <AB3Scan.ab3@232> Function.l FAST _ab3_SkipToken{*parser.Parser,cpos.l}
00003BBA <AB3Scan.ab3@234>   cf.l = 0
00003BF0 <AB3Scan.ab3@235>   While (cf&#AB3TF_STOP)=0 AND cpos<*parser\clength
00003C1E <AB3Scan.ab3@236>     cpos+1 : If cpos>=*parser\clength Then Function Return cpos
00003C54 <AB3Scan.ab3@237>     cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00003C5A <AB3Scan.ab3@238>   Wend
00003C64 <AB3Scan.ab3@239>   Function Return cpos
00003C6A <AB3Scan.ab3@241> End Function
00003C88 <AB3Scan.ab3@244> Function.l _ab3_ParseNewtype{*parser.Parser,cpos.l}
00003C92 <AB3Scan.ab3@246>   *parser\in_newtype=False
00003CCC <AB3Scan.ab3@247>   If *parser\first><False AND *parser\dflags&(#DF_NEWTYPE|#DF_FIELD)><0
00003D1C <AB3Scan.ab3@248>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Newtype..."
00003D44 <AB3Scan.ab3@249>     name.s     = ""
00003D6C <AB3Scan.ab3@250>     comment.s  = ""
00003D7E <AB3Scan.ab3@251>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00003D9A <AB3Scan.ab3@252>     c.b = Peek.b(*parser\bptr + cpos)
00003DAE <AB3Scan.ab3@253>     If c = @"."
00003DBC <AB3Scan.ab3@254>       opos.l = cpos+1
00003DCE <AB3Scan.ab3@255>       cpos.l = _ab3_SkipToken{*parser,cpos}
00003E0A <AB3Scan.ab3@256>       name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00003E22 <AB3Scan.ab3@258>       cpos = _ab3_SkipTill{*parser,cpos,@";"}
00003E50 <AB3Scan.ab3@259>       If cpos<*parser\clength Then cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
00003E66 <AB3Scan.ab3@260>       If cpos<*parser\clength
00003EA8 <AB3Scan.ab3@261>         comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
00003EB6 <AB3Scan.ab3@262>         cpos = *parser\clength
00003EE2 <AB3Scan.ab3@264>       If name
00003F02 <AB3Scan.ab3@265>         If *parser\dflags&(#DF_NEWTYPE)><0
00004002 <AB3Scan.ab3@266>           NPrint "NEWTYPE\\09",*parser\linecount,"\\09",name,"\\09",comment
00004022 <AB3Scan.ab3@268>         If *parser\dflags&(#DF_FIELD)><0
0000402C <AB3Scan.ab3@269>           *parser\in_newtype = True
00004032 <AB3Scan.ab3@271>       Else
00004082 <AB3Scan.ab3@272>         If *parser\verbose>=#VB_INFO Then NPrint "ERROR Newtype, unable to find name???"
00004088 <AB3Scan.ab3@274>     Else
000040D8 <AB3Scan.ab3@275>       If *parser\verbose>=#VB_INFO Then NPrint "ERROR Newtype, but no . following???"
000040E2 <AB3Scan.ab3@279>   Function Return cpos
000040F6 <AB3Scan.ab3@281> End Function
00004120 <AB3Scan.ab3@284> Function.l ab3_GetIncludeLock{filename.s}
00004140 <AB3Scan.ab3@285>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00004198 <AB3Scan.ab3@286>   ex.s       = dos_GetExt{filename}
000041AC <AB3Scan.ab3@288>   If incLock = False
00004220 <AB3Scan.ab3@289>     filename = dos_SetExt{filename,"ab3"}
00004240 <AB3Scan.ab3@290>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00004254 <AB3Scan.ab3@293>   If incLock = False
000042C8 <AB3Scan.ab3@294>     filename = dos_SetExt{filename,"ab2"}
000042E8 <AB3Scan.ab3@295>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000042FC <AB3Scan.ab3@298>   If incLock = False
00004370 <AB3Scan.ab3@299>     filename = dos_SetExt{filename,"bb2"}
00004390 <AB3Scan.ab3@300>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000043A4 <AB3Scan.ab3@303>   If incLock = False
00004436 <AB3Scan.ab3@304>     filename = dos_SetExt{filename,ex+".ab3"}
00004456 <AB3Scan.ab3@305>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
0000446A <AB3Scan.ab3@308>   If incLock = False
000044DE <AB3Scan.ab3@309>     filename = dos_SetExt{filename,"ab2"}
000044FE <AB3Scan.ab3@310>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00004512 <AB3Scan.ab3@313>   If incLock = False
00004586 <AB3Scan.ab3@314>     filename = dos_SetExt{filename,"bb2"}
000045A6 <AB3Scan.ab3@315>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
000045B0 <AB3Scan.ab3@318>   Function Return incLock
000045CA <AB3Scan.ab3@319> End Function
000045E8 <AB3Scan.ab3@322> Function.l _ab3_ParseInclude{*parser.Parser,cpos.l}
00004632 <AB3Scan.ab3@324>   If *parser\first><False AND str_Len{*parser\incpath}>0
00004682 <AB3Scan.ab3@325>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Include..."
000046AA <AB3Scan.ab3@326>     name.s     = ""
000046D2 <AB3Scan.ab3@327>     comment.s  = ""
000046E4 <AB3Scan.ab3@328>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
0000470E <AB3Scan.ab3@329>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
0000472C <AB3Scan.ab3@330>     If c<0 Then Function Return cpos-1
0000473A <AB3Scan.ab3@332>     If c = $22
00004748 <AB3Scan.ab3@333>       opos.l = cpos-1
0000475E <AB3Scan.ab3@334>       cpos = _ab3_SkipTill{*parser,cpos,$22}
00004774 <AB3Scan.ab3@335>       If cpos<*parser\clength
00004786 <AB3Scan.ab3@337>       cpos.l = _ab3_SkipToken{*parser,cpos}
000047C2 <AB3Scan.ab3@338>       name.s = Peeks$(*parser\bptr+opos,cpos-opos)
000047DA <AB3Scan.ab3@340>       cpos = _ab3_SkipTill{*parser,cpos,@";"}
00004808 <AB3Scan.ab3@341>       If cpos<*parser\clength Then cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
0000481E <AB3Scan.ab3@342>       If cpos<*parser\clength
00004860 <AB3Scan.ab3@343>         comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
0000488C <AB3Scan.ab3@345>       If name
0000490A <AB3Scan.ab3@346>         name = Replace$(name,"\\22","")
00004990 <AB3Scan.ab3@348>         filename.s = dos_AddPart{str_Read{&*parser\path},name}
000049C2 <AB3Scan.ab3@349>         lock.l = ab3_GetIncludeLock{filename}
000049D4 <AB3Scan.ab3@350>         If lock=0
00004A5A <AB3Scan.ab3@351>           filename.s = dos_AddPart{str_Read{&*parser\incpath},name}
00004A8C <AB3Scan.ab3@352>           lock.l = ab3_GetIncludeLock{filename}
00004A96 <AB3Scan.ab3@354>         If lock
00004AAC <AB3Scan.ab3@355>           MaxLen dosname.s = 1024
00004AD0 <AB3Scan.ab3@356>           NameFromLock_ lock,&dosname,1023
00004AE8 <AB3Scan.ab3@357>           UnLock_ lock : lock=0
00004B12 <AB3Scan.ab3@358>           dosname.s = Peek.s(&dosname) ; GetDosFileName{filename}
00004B78 <AB3Scan.ab3@359>           If pft_GetString{*parser\filesT,dosname} = ""
00004BCC <AB3Scan.ab3@360>             pft_SetString{*parser\filesT,dosname,"todo"}
00004BE6 <AB3Scan.ab3@362>           If *parser\dflags&#DF_INCLUDE
00004CE6 <AB3Scan.ab3@363>             NPrint "INCLUDE\\09",*parser\linecount,"\\09",dosname,"\\09",comment
00004CEC <AB3Scan.ab3@365>         Else
00004D98 <AB3Scan.ab3@366>           If *parser\verbose>=#VB_INFO Then NPrint "ERROR Unable to find include: \\22",filename,"\\22"
00004DA2 <AB3Scan.ab3@373>   Function Return cpos
00004DB6 <AB3Scan.ab3@375> End Function
00004DD4 <AB3Scan.ab3@378> Function.l _ab3_ParseMacro{*parser.Parser,cpos.l}
00004E0E <AB3Scan.ab3@380>   If *parser\first><False AND *parser\dflags&#DF_MACRO><0
00004E5E <AB3Scan.ab3@381>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Macro..."
00004E86 <AB3Scan.ab3@382>     name.s     = ""
00004EAE <AB3Scan.ab3@383>     comment.s  = ""
00004EC0 <AB3Scan.ab3@384>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00004EC6 <AB3Scan.ab3@385>     opos.l = cpos
00004ED8 <AB3Scan.ab3@386>     cpos.l = _ab3_SkipToken{*parser,cpos}
00004F14 <AB3Scan.ab3@387>     name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00004F2C <AB3Scan.ab3@389>     cpos = _ab3_SkipTill{*parser,cpos,@";"}
00004F5A <AB3Scan.ab3@390>     If cpos<*parser\clength Then cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
00004F70 <AB3Scan.ab3@391>     If cpos<*parser\clength
00004FB2 <AB3Scan.ab3@392>       comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
00004FDE <AB3Scan.ab3@394>     If name
000050DE <AB3Scan.ab3@395>       NPrint "MACRO\\09",*parser\linecount,"\\09",name,"\\09",comment
000050E8 <AB3Scan.ab3@399>   Function Return cpos
000050FC <AB3Scan.ab3@401> End Function
0000511A <AB3Scan.ab3@404> Function.l _ab3_ParseConstant{*parser.Parser,cpos.l}
00005154 <AB3Scan.ab3@406>   If *parser\first><False AND *parser\dflags&#DF_CONSTANT><0
000051A4 <AB3Scan.ab3@407>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Constant..."
000051CC <AB3Scan.ab3@408>     name.s     = ""
000051F4 <AB3Scan.ab3@409>     value.s    = ""
0000521C <AB3Scan.ab3@410>     comment.s  = ""
0000522E <AB3Scan.ab3@411>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005234 <AB3Scan.ab3@412>     opos.l = cpos
00005246 <AB3Scan.ab3@413>     cpos.l = _ab3_SkipToken{*parser,cpos}
00005282 <AB3Scan.ab3@414>     name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005294 <AB3Scan.ab3@415>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
000052BE <AB3Scan.ab3@416>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
000052E0 <AB3Scan.ab3@417>     If c><@"=" Then Function Return cpos-1
000052F2 <AB3Scan.ab3@418>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
000052F8 <AB3Scan.ab3@419>     opos.l = cpos
00005310 <AB3Scan.ab3@420>     cpos = _ab3_SkipTill{*parser,cpos,@":"}
0000533E <AB3Scan.ab3@421>     If cpos>=*parser\clength Then cpos = _ab3_SkipTill{*parser,opos,@";"}
000053AE <AB3Scan.ab3@422>     If opos>0 Then While cpos>opos AND Peek.b(*parser\bptr + cpos-1)=@" ":cpos-1:Wend
000053EA <AB3Scan.ab3@423>     value.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005402 <AB3Scan.ab3@425>     cpos = _ab3_SkipTill{*parser,cpos,@";"}
00005418 <AB3Scan.ab3@426>     If cpos<*parser\clength
00005430 <AB3Scan.ab3@427>       cpos = _ab3_SkipWhiteSpaces{*parser,cpos+1}
00005446 <AB3Scan.ab3@428>       If cpos<*parser\clength
00005488 <AB3Scan.ab3@429>         comment = Peeks$(*parser\bptr+cpos,*parser\clength-cpos)
000054B4 <AB3Scan.ab3@432>     If name
00005610 <AB3Scan.ab3@433>       NPrint "CONSTANT\\09",*parser\linecount,"\\09",name,"\\09",value,"\\09",comment
0000561A <AB3Scan.ab3@436>   Function Return cpos
0000562E <AB3Scan.ab3@438> End Function
0000564C <AB3Scan.ab3@440> Function.l _ab3_ParseEnd{*parser.Parser,cpos.l}
000056E4 <AB3Scan.ab3@442>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse End... F:",*parser\in_function," NT:",*parser\in_newtype
000056F6 <AB3Scan.ab3@443>   cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005712 <AB3Scan.ab3@444>   c.w = Peek.b(*parser\bptr + cpos)
00005720 <AB3Scan.ab3@445>   If c<0
00005752 <AB3Scan.ab3@446>     tokenid.l = Peek.w(*parser\bptr+cpos)&$FFFF : cpos+2
00005758 <AB3Scan.ab3@447>     Select tokenid
00005770 <AB3Scan.ab3@448>       Case #TOKEN_Function  : *parser\in_function = False
0000578E <AB3Scan.ab3@449>       Case #TOKEN_Statement : *parser\in_function = False
000057AC <AB3Scan.ab3@450>       Case #TOKEN_NEWTYPE   : *parser\in_newtype  = False
000057CA <AB3Scan.ab3@451>       Case #TOKEN_Macro     : *parser\in_macro    = False
000057CC <AB3Scan.ab3@452>     End Select
00005842 <AB3Scan.ab3@453>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG End: ",Hex$(tokenid)
00005848 <AB3Scan.ab3@455>   Else
0000584E <AB3Scan.ab3@456>     opos.l = cpos
00005860 <AB3Scan.ab3@457>     cpos.l = _ab3_SkipToken{*parser,cpos}
0000589C <AB3Scan.ab3@458>     token.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005920 <AB3Scan.ab3@459>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG End: ",token
00005962 <AB3Scan.ab3@460>     tokenid.l = pft_GetInt32{AmiBlitz3\TokenT,token,#TOKEN_Unknown}
00005968 <AB3Scan.ab3@462>     Select tokenid
00005980 <AB3Scan.ab3@463>       Case #TOKEN_Function  : *parser\in_function = False
0000599E <AB3Scan.ab3@464>       Case #TOKEN_Statement : *parser\in_function = False
000059BC <AB3Scan.ab3@465>       Case #TOKEN_NEWTYPE   : *parser\in_newtype  = False
000059DA <AB3Scan.ab3@466>       Case #TOKEN_Macro     : *parser\in_macro    = False
000059DC <AB3Scan.ab3@467>     End Select
00005A74 <AB3Scan.ab3@470>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse ===... F:",*parser\in_function," NT:",*parser\in_newtype
00005A7E <AB3Scan.ab3@472>   Function Return cpos
00005A92 <AB3Scan.ab3@473> End Function
00005AB0 <AB3Scan.ab3@475> Function.l _ab3_ParseFunction{*parser.Parser,cpos.l}
00005AEA <AB3Scan.ab3@477>     If *parser\first><False AND *parser\dflags&#DF_FUNCTION><0
00005B3A <AB3Scan.ab3@478>     If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Function..."
00005B62 <AB3Scan.ab3@479>     typ.s      = ""
00005B8A <AB3Scan.ab3@480>     name.s     = ""
00005BB2 <AB3Scan.ab3@481>     modifier.s = ""
00005BDA <AB3Scan.ab3@482>     track.s    = ""
00005C02 <AB3Scan.ab3@483>     comment.s  = ""
00005C14 <AB3Scan.ab3@484>     cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005C3E <AB3Scan.ab3@485>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005C5C <AB3Scan.ab3@486>     If c<0 Then Function Return cpos-1
00005C6E <AB3Scan.ab3@488>     If c = @"."
00005C74 <AB3Scan.ab3@489>       opos.l = cpos
00005C86 <AB3Scan.ab3@490>       cpos.l = _ab3_SkipToken{*parser,cpos}
00005CC2 <AB3Scan.ab3@491>       typ.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005CD4 <AB3Scan.ab3@492>       cpos = _ab3_SkipWhiteSpaces{*parser,cpos}
00005CFE <AB3Scan.ab3@493>       c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005D0C <AB3Scan.ab3@495>     opos.l = cpos-1
00005D1E <AB3Scan.ab3@496>     cpos.l = _ab3_SkipToken{*parser,cpos}
00005D5A <AB3Scan.ab3@497>     name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005D92 <AB3Scan.ab3@498>     If name="FAST"
00005DC6 <AB3Scan.ab3@499>       modifier=name
00005DD8 <AB3Scan.ab3@500>       opos.l = _ab3_SkipWhiteSpaces{*parser,cpos}
00005DEA <AB3Scan.ab3@501>       cpos.l = _ab3_SkipToken{*parser,opos}
00005E26 <AB3Scan.ab3@502>       name.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005E38 <AB3Scan.ab3@504>     cpos.l = _ab3_SkipWhiteSpaces{*parser,cpos}
00005E62 <AB3Scan.ab3@505>     c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00005E84 <AB3Scan.ab3@506>     If c><@"{" Then Function Return cpos-1
00005E8A <AB3Scan.ab3@507>     opos = cpos
00005EA2 <AB3Scan.ab3@508>     cpos = _ab3_SkipTill{*parser,cpos,@"}"}
00005EB8 <AB3Scan.ab3@509>     If cpos<*parser\clength
00005EE4 <AB3Scan.ab3@510>       If name
00005F20 <AB3Scan.ab3@511>         track.s = Peeks$(*parser\bptr+opos,cpos-opos)
00005F9E <AB3Scan.ab3@512>         track=Replace$(track," ","")
0000601C <AB3Scan.ab3@513>         track=Replace$(track,"\\09","")
0000609A <AB3Scan.ab3@514>         comment=Replace$(comment,"\\09"," ")
00006252 <AB3Scan.ab3@515>         NPrint "FUNCTION\\09",*parser\linecount,"\\09",name,"\\09",typ,"\\09",track,"\\09",comment
0000625C <AB3Scan.ab3@516>         *parser\in_function = True
0000627C <AB3Scan.ab3@517>         If *parser\dflags&#DF_LOCAL><0
00006284 <AB3Scan.ab3@518>           kpos.l=0
00006292 <AB3Scan.ab3@520>             opos.l = kpos+1
000062E2 <AB3Scan.ab3@521>             kpos.l = Instr(track,",",opos)
0000630E <AB3Scan.ab3@522>             If kpos=0 Then kpos=FLen(track)+1
0000631C <AB3Scan.ab3@523>             If kpos>opos
00006372 <AB3Scan.ab3@524>               ppos.l = Instr(track,".",opos+1)
0000639C <AB3Scan.ab3@525>               If ppos>0 AND ppos<kpos-1
000063F6 <AB3Scan.ab3@526>                 name.s = Mid$(track,opos,ppos-opos)
0000645C <AB3Scan.ab3@527>                 typ.s  = Mid$(track,ppos+1,kpos-ppos-1)
0000655C <AB3Scan.ab3@529>                 NPrint "PARAM\\09",*parser\linecount,"\\09",name,"\\09",typ
00006570 <AB3Scan.ab3@532>           Until kpos<=opos
0000657A <AB3Scan.ab3@538>   Function Return cpos
0000658E <AB3Scan.ab3@540> End Function
000065AC <AB3Scan.ab3@543> Function.l _ab3_ParseToken{*parser.Parser,cpos.l}
000065BA <AB3Scan.ab3@544>   opos.l  = cpos-1
000065CC <AB3Scan.ab3@545>   cpos    = _ab3_SkipToken{*parser,opos}
00006608 <AB3Scan.ab3@546>   token.s = Peeks$(*parser\bptr+opos,cpos-opos)
0000664A <AB3Scan.ab3@548>   tokenid.l=pft_GetInt32{AmiBlitz3\TokenT,token,#TOKEN_Unknown}
0000671C <AB3Scan.ab3@549>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse Text Token ",token," => ",Hex$(tokenid)
0000672E <AB3Scan.ab3@550>   If tokenid=#TOKEN_Unknown
00006740 <AB3Scan.ab3@551>      If *parser\in_newtype
00006752 <AB3Scan.ab3@552>        If opos>0
00006774 <AB3Scan.ab3@553>          c.w = Peek.b(*parser\bptr + opos-1)
000067CC <AB3Scan.ab3@554>          If c=@"*" Then token="*"+token
000067DE <AB3Scan.ab3@557>        cpos.l = _ab3_SkipWhiteSpaces{*parser,cpos}
00006808 <AB3Scan.ab3@558>        c.w = Peek.b(*parser\bptr + cpos) : cpos+1
00006830 <AB3Scan.ab3@559>        typ.s = ""
00006842 <AB3Scan.ab3@560>        If c=@"."
00006848 <AB3Scan.ab3@561>          opos.l = cpos
0000685A <AB3Scan.ab3@562>          cpos.l = _ab3_SkipToken{*parser,cpos}
00006896 <AB3Scan.ab3@563>          typ.s = Peeks$(*parser\bptr+opos,cpos-opos)
00006996 <AB3Scan.ab3@565>        NPrint "FIELD\\09",*parser\linecount,"\\09",token,"\\09",typ
0000699C <AB3Scan.ab3@566>      Else
000069C6 <AB3Scan.ab3@567>        c.w = Peek.b(*parser\bptr + cpos) : cpos+1
000069EE <AB3Scan.ab3@568>        typ.s = ""
00006A00 <AB3Scan.ab3@569>        If c=@"."
00006A06 <AB3Scan.ab3@570>          opos.l = cpos
00006A18 <AB3Scan.ab3@571>          cpos.l = _ab3_SkipToken{*parser,cpos}
00006A54 <AB3Scan.ab3@572>          typ.s = Peeks$(*parser\bptr+opos,cpos-opos)
00006A8C <AB3Scan.ab3@574>          If typ><""
00006A9E <AB3Scan.ab3@575>            If *parser\in_function ; todo: doenst recognize shared
00006ABE <AB3Scan.ab3@576>              If *parser\dflags&#DF_LOCAL><0
00006BBE <AB3Scan.ab3@577>                NPrint "LOCAL\\09",*parser\linecount,"\\09",token,"\\09",typ
00006BC4 <AB3Scan.ab3@579>            Else
00006BE4 <AB3Scan.ab3@580>              If *parser\dflags&#DF_GLOBAL><0
00006CE4 <AB3Scan.ab3@581>                NPrint "GLOBAL\\09",*parser\linecount,"\\09",token,"\\09",typ
00006CEA <AB3Scan.ab3@585>        Else
00006CF4 <AB3Scan.ab3@589>      Function Return cpos
00006CFA <AB3Scan.ab3@592>   Select tokenid
00006D1A <AB3Scan.ab3@593>     Case #TOKEN_Function  : cpos = _ab3_ParseFunction{*parser,cpos}
00006D40 <AB3Scan.ab3@594>     Case #TOKEN_Statement : cpos = _ab3_ParseFunction{*parser,cpos}
00006D66 <AB3Scan.ab3@595>     Case #TOKEN_Macro     : cpos = _ab3_ParseMacro   {*parser,cpos}
00006D8C <AB3Scan.ab3@596>     Case #TOKEN_NEWTYPE   : cpos = _ab3_ParseNewtype {*parser,cpos}
00006DB2 <AB3Scan.ab3@597>     Case #TOKEN_XINCLUDE  : cpos = _ab3_ParseInclude {*parser,cpos}
00006DD8 <AB3Scan.ab3@598>     Case #TOKEN_INCLUDE   : cpos = _ab3_ParseInclude {*parser,cpos}
00006DFE <AB3Scan.ab3@599>     Case #TOKEN_End       : cpos = _ab3_ParseEnd     {*parser,cpos}
00006E00 <AB3Scan.ab3@600>   End Select
00006E0A <AB3Scan.ab3@602>   Function Return cpos
00006E1E <AB3Scan.ab3@604> End Function
00006E3C <AB3Scan.ab3@607> Function.l _ab3_Parse2ByteToken{*parser.Parser,cpos.l}
00006E6A <AB3Scan.ab3@609>   tokenid.w = Peek.w(*parser\bptr+cpos-1) : cpos +1
00006F28 <AB3Scan.ab3@610>   If *parser\verbose>=#VB_DEBUG Then NPrint "DEBUG Parse 2Byte Token ($",Right$(Hex$(tokenid),4),")"
00006F2E <AB3Scan.ab3@612>   Select tokenid
00006F4E <AB3Scan.ab3@613>     Case #TOKEN_Function  : cpos = _ab3_ParseFunction{*parser,cpos}
00006F74 <AB3Scan.ab3@614>     Case #TOKEN_Statement : cpos = _ab3_ParseFunction{*parser,cpos}
00006F9A <AB3Scan.ab3@615>     Case #TOKEN_Macro     : cpos = _ab3_ParseMacro   {*parser,cpos}
00006FC0 <AB3Scan.ab3@616>     Case #TOKEN_NEWTYPE   : cpos = _ab3_ParseNewtype {*parser,cpos}
00006FE6 <AB3Scan.ab3@617>     Case #TOKEN_XINCLUDE  : cpos = _ab3_ParseInclude {*parser,cpos}
0000700C <AB3Scan.ab3@618>     Case #TOKEN_INCLUDE   : cpos = _ab3_ParseInclude {*parser,cpos}
00007032 <AB3Scan.ab3@619>     Case #TOKEN_End       : cpos = _ab3_ParseEnd     {*parser,cpos}
00007034 <AB3Scan.ab3@620>   End Select
0000703E <AB3Scan.ab3@621>   Function Return cpos
00007044 <AB3Scan.ab3@623> End Function
00007062 <AB3Scan.ab3@626> Function.l FAST _ab3_SkipBinary{*parser.Parser,cpos.l}
0000706A <AB3Scan.ab3@628>   cf.l = 0
00007098 <AB3Scan.ab3@631>     cpos+1 : If cpos>=*parser\clength Then Function Return cpos
000070CE <AB3Scan.ab3@632>     cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
000070F8 <AB3Scan.ab3@633>     If (cf&#AB3TF_BIN)=0 Then Function Return cpos-1
00007114 <AB3Scan.ab3@634>   Until cpos>=*parser\clength
0000711E <AB3Scan.ab3@636>   Function Return cpos
00007124 <AB3Scan.ab3@638> End Function
00007142 <AB3Scan.ab3@641> Function.l FAST _ab3_SkipHex{*parser.Parser,cpos.l}
00007158 <AB3Scan.ab3@644>     If cpos<*parser\clength
0000718E <AB3Scan.ab3@645>       cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00007194 <AB3Scan.ab3@646>     Else
0000719C <AB3Scan.ab3@647>       cf = 0
000071AA <AB3Scan.ab3@649>     cpos+1
000071E0 <AB3Scan.ab3@650>   Until (cf&#AB3TF_HEX)=0 OR cpos>=*parser\clength
000071F0 <AB3Scan.ab3@652>   Function Return cpos-1
000071F6 <AB3Scan.ab3@654> End Function
00007214 <AB3Scan.ab3@657> Function.l FAST _ab3_ParseNumber{*parser.Parser,cpos.l}
0000722A <AB3Scan.ab3@660>     If cpos<*parser\clength
00007260 <AB3Scan.ab3@661>       cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00007266 <AB3Scan.ab3@662>     Else
0000726E <AB3Scan.ab3@663>       cf = 0
0000727C <AB3Scan.ab3@665>     cpos+1
000072B2 <AB3Scan.ab3@666>   Until (cf&#AB3TF_DEC)=0 OR cpos>=*parser\clength
000072E4 <AB3Scan.ab3@668>   If (Peek.b(*parser\bptr + cpos-1)=@".") ; has a decimal point
000072FA <AB3Scan.ab3@670>       If cpos<*parser\clength
00007330 <AB3Scan.ab3@671>         cf.l = AmiBlitz3\CharFlags[Peek.b(*parser\bptr + cpos)&$FF]
00007336 <AB3Scan.ab3@672>       Else
0000733E <AB3Scan.ab3@673>         cf = 0
0000734C <AB3Scan.ab3@675>       cpos+1
00007382 <AB3Scan.ab3@676>     Until (cf&#AB3TF_DEC)=0 OR cpos>=*parser\clength
00007390 <AB3Scan.ab3@679>   cpos-1
0000739A <AB3Scan.ab3@680>   Function Return cpos
000073A0 <AB3Scan.ab3@682> End Function
000073BA <AB3Scan.ab3@685> Function.l ab3_ParseLine{*parser.Parser}
000073C4 <AB3Scan.ab3@687>   *parser\first   = True
000073CC <AB3Scan.ab3@688>   cpos.l = 0
000073E8 <AB3Scan.ab3@690>   While cpos<*parser\clength
00007412 <AB3Scan.ab3@691>     c.b = Peek.b(*parser\bptr+cpos) : cpos+1
00007436 <AB3Scan.ab3@692>     cf.l = AmiBlitz3\CharFlags[c&$FF]
00007474 <AB3Scan.ab3@694>     If (cf&#AB3TF_COMMENT   ) Then cpos = _ab3_ParseComment   {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
000074B2 <AB3Scan.ab3@695>     If (cf&#AB3TF_QUOT      ) Then cpos = _ab3_ParseString    {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
000074F0 <AB3Scan.ab3@696>     If (cf&#AB3TF_FIRST     ) Then cpos = _ab3_ParseToken     {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
0000752E <AB3Scan.ab3@697>     If (cf&#AB3TF_DEC       ) Then cpos = _ab3_ParseNumber    {*parser,cpos} : cf = 0 : c=0 : *parser\first=False
0000756C <AB3Scan.ab3@698>     If (cf&#AB3TF_2BYTETOKEN) Then cpos = _ab3_Parse2ByteToken{*parser,cpos} : cf = 0 : c=0 : *parser\first=False
00007578 <AB3Scan.ab3@700>     Select c
00007594 <AB3Scan.ab3@701>       Case @":" : *parser\first=True
000075AC <AB3Scan.ab3@702>       Case @"#"
000075CA <AB3Scan.ab3@703>         Select Peek.b(*parser\bptr+cpos)
000075DA <AB3Scan.ab3@704>           Case $22
000075F2 <AB3Scan.ab3@705>             cpos = _ab3_ParseString{*parser,cpos+1}
000075F8 <AB3Scan.ab3@706>           Default
00007632 <AB3Scan.ab3@707>             If *parser\first><False AND *parser\dflags&#DF_CONSTANT><0
00007644 <AB3Scan.ab3@708>               cpos = _ab3_ParseConstant{*parser,cpos}
0000764A <AB3Scan.ab3@709>             Else
0000765C <AB3Scan.ab3@710>               cpos = _ab3_SkipToken{*parser,cpos}
0000765E <AB3Scan.ab3@712>         End Select
00007668 <AB3Scan.ab3@713>         *parser\first=False
00007680 <AB3Scan.ab3@715>       Case @"!" ; its a macro reference
00007692 <AB3Scan.ab3@716>         cpos = _ab3_SkipToken{*parser,cpos}
0000769C <AB3Scan.ab3@717>         *parser\first=False
000076B4 <AB3Scan.ab3@719>       Case @"."
000076EE <AB3Scan.ab3@720>         If *parser\first><False AND *parser\dflags&#DF_LABEL><0
000076F4 <AB3Scan.ab3@721>           opos.l = cpos
00007706 <AB3Scan.ab3@722>           cpos = _ab3_SkipToken{*parser,cpos}
000077B2 <AB3Scan.ab3@723>           NPrint "LABEL\\09",*parser\linecount,"\\09",Peeks$(*parser\bptr+opos,cpos-opos)
000077B8 <AB3Scan.ab3@724>         Else
000077CA <AB3Scan.ab3@726>           cpos = _ab3_SkipToken{*parser,cpos}
000077D4 <AB3Scan.ab3@728>         *parser\first=False
000077EC <AB3Scan.ab3@730>       Case @"\" ; its a member reference
000077FE <AB3Scan.ab3@731>         cpos = _ab3_SkipToken{*parser,cpos}
00007808 <AB3Scan.ab3@732>         *parser\first=False
00007820 <AB3Scan.ab3@734>       Case @"%"
00007832 <AB3Scan.ab3@735>         cpos = _ab3_SkipBinary{*parser,cpos}
0000783C <AB3Scan.ab3@736>         *parser\first=False
00007854 <AB3Scan.ab3@738>       Case @"$"
00007866 <AB3Scan.ab3@739>         cpos = _ab3_SkipHex{*parser,cpos}
00007870 <AB3Scan.ab3@740>         *parser\first=False
00007888 <AB3Scan.ab3@742>       Case @"@"
000078A6 <AB3Scan.ab3@743>         Select Peek.b(*parser\bptr+cpos)
000078B8 <AB3Scan.ab3@744>           Case @"@" ; its @@
000078C6 <AB3Scan.ab3@745>             cpos+1
000078DC <AB3Scan.ab3@746>             If cpos<*parser\clength ; remaining chars
000078EA <AB3Scan.ab3@747>               cpos=*parser\clength
00007900 <AB3Scan.ab3@749>           Case $22 ; its @"ILBM"
00007918 <AB3Scan.ab3@750>             cpos = _ab3_ParseString{*parser,cpos+1}
00007930 <AB3Scan.ab3@751>           Case @"#" ; its @#constant
00007942 <AB3Scan.ab3@753>             cpos = _ab3_SkipToken{*parser,cpos}
00007948 <AB3Scan.ab3@754>           Default
0000795A <AB3Scan.ab3@756>             cpos = _ab3_SkipToken{*parser,cpos}
0000795C <AB3Scan.ab3@758>         End Select
00007966 <AB3Scan.ab3@759>         *parser\first=False
0000796C <AB3Scan.ab3@761>       Default
0000796E <AB3Scan.ab3@763>     End Select
00007974 <AB3Scan.ab3@765>   Wend
0000797E <AB3Scan.ab3@766>   Function Return cpos
00007984 <AB3Scan.ab3@768> End Function
000079CA <AB3Scan.ab3@771> Function.Parser ab3_CreateParser{incpath.s,pattern.s,recursive.l,dflags.l,verbose.l}
000079EA <AB3Scan.ab3@773>   *parser.Parser = AllocVec_(SizeOf.Parser,#MEMF_ANY)
000079F4 <AB3Scan.ab3@774>   If *parser
000079FC <AB3Scan.ab3@776>     *parser\filename    = Null
00007A06 <AB3Scan.ab3@777>     *parser\path        = Null
00007A10 <AB3Scan.ab3@778>     *parser\tokenized   = False
00007A1E <AB3Scan.ab3@779>     *parser\ab3header   = #AB3H_NONE
00007A28 <AB3Scan.ab3@782>     *parser\first       = True
00007A32 <AB3Scan.ab3@783>     *parser\bptr        = Null
00007A40 <AB3Scan.ab3@784>     *parser\clength     = 0
00007A4C <AB3Scan.ab3@788>     *parser\recursive   = recursive
00007A56 <AB3Scan.ab3@789>     *parser\pattern     = Null
00007A60 <AB3Scan.ab3@790>     *parser\incpath     = Null
00007A6E <AB3Scan.ab3@791>     *parser\filesT      = pft_Create{}
00007A7A <AB3Scan.ab3@792>     *parser\verbose     = verbose
00007A86 <AB3Scan.ab3@793>     *parser\dflags      = dflags
00007A90 <AB3Scan.ab3@794>     *parser\in_newtype  = False
00007A9A <AB3Scan.ab3@795>     *parser\in_function = False
00007AA4 <AB3Scan.ab3@796>     *parser\in_macro    = False
00007B0C <AB3Scan.ab3@798>     tempbuf.s = LSet$(" ",FLen(pattern)*3+4)
00007B3C <AB3Scan.ab3@799>     ParsePatternNoCase_ &pattern,&tempbuf,FLen(tempbuf)
00007B58 <AB3Scan.ab3@800>     str_WritePtr{&*parser\pattern,&tempbuf}
00007B90 <AB3Scan.ab3@801>     str_Write{&*parser\incpath,incpath}
00007BB4 <AB3Scan.ab3@803>     *parser\fbuffer = AllocVec_(#FBUFF_SIZE,#MEMF_ANY)
00007BC2 <AB3Scan.ab3@804>     *parser\fbuffer_currentpos = 0
00007BD0 <AB3Scan.ab3@805>     *parser\fbuffer_fillpos    = 0
00007BDA <AB3Scan.ab3@809>   Function Return *parser
00007BF6 <AB3Scan.ab3@811> End Function
00007C10 <AB3Scan.ab3@814> Statement ab3_FreeParser{*parser.Parser}
00007C1A <AB3Scan.ab3@816>   If *parser
00007C26 <AB3Scan.ab3@817>     str_Free{&*parser\filename}
00007C36 <AB3Scan.ab3@818>     str_Free{&*parser\path}
00007C46 <AB3Scan.ab3@819>     str_Free{&*parser\incpath}
00007C56 <AB3Scan.ab3@820>     str_Free{&*parser\pattern}
00007C82 <AB3Scan.ab3@821>     If *parser\filesT  Then pft_Free{*parser\filesT}  : *parser\filesT = Null
00007CB4 <AB3Scan.ab3@822>     If *parser\fbuffer Then FreeVec_(*parser\fbuffer) : *parser\fbuffer = Null
00007CCA <AB3Scan.ab3@823>     FreeVec_ *parser : *parser = Null     ; free *parser structure and set it to Null  tomsmart1
00007CCE <AB3Scan.ab3@826> End Statement
00007CEC <AB3Scan.ab3@829> Function.l file_ReadAB3Line2 {*parser.Parser,fid.l}
00007CF4 <AB3Scan.ab3@831>   dummy.l = 0
00007D02 <AB3Scan.ab3@832>   bpos.l  = *parser\fbuffer_currentpos
00007D08 <AB3Scan.ab3@833>   eol.l = False
00007D1E <AB3Scan.ab3@836>     If bpos>=*parser\fbuffer_fillpos
00007D32 <AB3Scan.ab3@837>       copylength.l = bpos-*parser\fbuffer_currentpos
00007D7C <AB3Scan.ab3@838>       If copylength>0 Then CopyMem_ *parser\fbuffer+*parser\fbuffer_currentpos,*parser\fbuffer,copylength
00007D88 <AB3Scan.ab3@839>       *parser\fbuffer_fillpos    = copylength
00007D94 <AB3Scan.ab3@840>       *parser\fbuffer_currentpos = copylength
00007DD8 <AB3Scan.ab3@841>       readlength.l = Read_ (fid,*parser\fbuffer+*parser\fbuffer_fillpos,#FBUFF_SIZE-*parser\fbuffer_fillpos)
00007DF0 <AB3Scan.ab3@842>       *parser\fbuffer_fillpos + readlength
00007DFE <AB3Scan.ab3@843>       bpos = *parser\fbuffer_currentpos
00007E16 <AB3Scan.ab3@844>       If readlength<=0 Then eol=True
00007E1C <AB3Scan.ab3@845>     Else
00007E3A <AB3Scan.ab3@846>       dummy=Peek.b(*parser\fbuffer + bpos)
00007E4C <AB3Scan.ab3@847>       If *parser\tokenized
00007E5E <AB3Scan.ab3@848>         If dummy<0
00007E6C <AB3Scan.ab3@849>           bpos+1
00007E8A <AB3Scan.ab3@850>           dummy=Peek.b(*parser\fbuffer + bpos)
00007E9C <AB3Scan.ab3@851>           If dummy=0
00007EAA <AB3Scan.ab3@852>             bpos+1
00007EC8 <AB3Scan.ab3@853>             dummy=Peek.b(*parser\fbuffer + bpos)
00007EE0 <AB3Scan.ab3@856>         If dummy=$00 Then eol=True
00007EE6 <AB3Scan.ab3@857>       Else
00007EFE <AB3Scan.ab3@858>         If dummy=$0a Then eol=True
00007F0C <AB3Scan.ab3@861>       bpos+1
00007F16 <AB3Scan.ab3@863>   Until eol
00007F34 <AB3Scan.ab3@865>   *parser\bptr    = *parser\fbuffer + *parser\fbuffer_currentpos
00007F52 <AB3Scan.ab3@866>   *parser\clength = bpos-*parser\fbuffer_currentpos-1
00007F5E <AB3Scan.ab3@867>   *parser\fbuffer_currentpos = bpos
00007F76 <AB3Scan.ab3@868>   If *parser\clength>=0
00007F8E <AB3Scan.ab3@869>     *parser\linecount+1
00007FAC <AB3Scan.ab3@874>   Function Return *parser\clength>=0
00007FB2 <AB3Scan.ab3@876> End Function
00007FE0 <AB3Scan.ab3@879> Function.l ab3_ParseFile{*parser.Parser,filename.s}
00008038 <AB3Scan.ab3@881>   dosname.s = GetDosFileName{filename}
0000809A <AB3Scan.ab3@883>   status.s = pft_GetString{*parser\filesT,dosname}
000080DA <AB3Scan.ab3@884>   If status="done" Then Function Return False
0000812E <AB3Scan.ab3@886>   pft_SetString{*parser\filesT,dosname,"done"}
0000819C <AB3Scan.ab3@887>   str_Write{&*parser\path,dos_PathPart{dosname}}
000081D0 <AB3Scan.ab3@888>   str_Write{&*parser\filename,dosname}
000081F0 <AB3Scan.ab3@890>   fid.l = Open_ (&filename,#MODE_OLDFILE)
0000820A <AB3Scan.ab3@891>   If fid=0 Then Function Return False
00008214 <AB3Scan.ab3@893>   *parser\tokenized = False
00008222 <AB3Scan.ab3@894>   *parser\linecount = 0
00008294 <AB3Scan.ab3@895>   Select LCase$(dos_GetExt{filename})
000082C6 <AB3Scan.ab3@896>     Case "ab3" : *parser\ab3header  = #AB3H_SEARCH
000082FA <AB3Scan.ab3@897>     Case "bb2" : *parser\tokenized=True
0000832E <AB3Scan.ab3@898>     Case "bb"  : *parser\tokenized=True
0000833E <AB3Scan.ab3@899>     Default:     *parser\tokenized=False
0000834C <AB3Scan.ab3@900>   End Select
0000836C <AB3Scan.ab3@902>   If *parser\dflags&#DF_SOURCE><0
000083D8 <AB3Scan.ab3@903>     NPrint "SOURCE\\09",dosname
000083E6 <AB3Scan.ab3@906>   *parser\fbuffer_currentpos = 0
000083F4 <AB3Scan.ab3@907>   *parser\fbuffer_fillpos    = 0
0000840A <AB3Scan.ab3@908>   While file_ReadAB3Line2{*parser,fid}
00008414 <AB3Scan.ab3@909>     ab3_ParseLine{*parser}
0000841A <AB3Scan.ab3@910>   Wend
0000842A <AB3Scan.ab3@912>   Close_ fid
00008432 <AB3Scan.ab3@914>   Function Return True
0000844C <AB3Scan.ab3@916> End Function
0000847A <AB3Scan.ab3@919> Function.l ab3_Scan{*parser.Parser,path.s}
000084FE <AB3Scan.ab3@922>   If *parser\verbose>1 Then NPrint "INFO Scan ",path
0000851E <AB3Scan.ab3@923>   lock.l = Lock_(&path,#ACCESS_READ)
00008528 <AB3Scan.ab3@924>   If lock
0000854A <AB3Scan.ab3@925>     If Examine_ (lock,&fib)
00008578 <AB3Scan.ab3@926>       While ExNext_(lock,&fib)><0
000085BC <AB3Scan.ab3@927>         If SetSignal_(0,0)&#SIGBREAKF_CTRL_C Then UnLock_ lock : Function Return False
00008640 <AB3Scan.ab3@929>         filename.s = dos_AddPart{path,Peek.s(&fib\fib_FileName)}
00008658 <AB3Scan.ab3@930>         If fib\fib_DirEntryType<0
00008694 <AB3Scan.ab3@931>           If MatchPatternNoCase_ (&*parser\pattern\str,&fib\fib_FileName)><0
000086C6 <AB3Scan.ab3@933>             ab3_ParseFile{*parser,filename}
000086CC <AB3Scan.ab3@935>         Else
000086DE <AB3Scan.ab3@936>           If *parser\recursive
00008720 <AB3Scan.ab3@937>             If ab3_Scan{*parser,filename} = False
00008730 <AB3Scan.ab3@938>               UnLock_ lock
00008738 <AB3Scan.ab3@939>               Function Return False
0000873E <AB3Scan.ab3@943>       Wend
0000874E <AB3Scan.ab3@945>     UnLock_ lock
0000876E <AB3Scan.ab3@948>   *iter.pftiterator  = pft_Iterate{*parser\filesT}
00008780 <AB3Scan.ab3@949>   While pft_HasNext{*iter}
000087B4 <AB3Scan.ab3@950>     status.s   = pft_GetIteratorString{*iter}
000087E8 <AB3Scan.ab3@951>     filename.s = pft_GetIteratorKey{*iter}
00008820 <AB3Scan.ab3@953>     If status="todo"
00008852 <AB3Scan.ab3@954>       ab3_ParseFile{*parser,filename}
000088A6 <AB3Scan.ab3@955>       pft_SetString{*parser\filesT,filename,"done"}
000088B0 <AB3Scan.ab3@956>       pft_FreeIterator{*iter}
000088E0 <AB3Scan.ab3@957>       *iter = pft_Iterate{*parser\filesT, ""}
000088E6 <AB3Scan.ab3@959>   Wend
000088F0 <AB3Scan.ab3@960>   pft_FreeIterator{*iter}
000088F8 <AB3Scan.ab3@962>   Function Return True
00008922 <AB3Scan.ab3@964> End Function
00008938 <AB3Scan.ab3@967> Statement ab3_Deinit{}
00008964 <AB3Scan.ab3@969>   If AmiBlitz3\TokenT Then pft_Free{AmiBlitz3\TokenT} : AmiBlitz3\TokenT = Null
00008966 <AB3Scan.ab3@971> End Statement
00008990 <AB3Scan.ab3@974> Function.l ab3_Init{tokenfile.s}
000089BA <AB3Scan.ab3@976>   For n.l=0 To 255
000089CC <AB3Scan.ab3@977>     AmiBlitz3\CharFlags[n] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW |#AB3TF_2BYTETOKEN
000089DC <AB3Scan.ab3@978>   Next
000089F4 <AB3Scan.ab3@980>   AmiBlitz3\CharFlags[   0] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_EOL ; Null
00008A0C <AB3Scan.ab3@981>   AmiBlitz3\CharFlags[   1] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SOH
00008A24 <AB3Scan.ab3@982>   AmiBlitz3\CharFlags[   2] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; STX
00008A3C <AB3Scan.ab3@983>   AmiBlitz3\CharFlags[   3] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ETX
00008A54 <AB3Scan.ab3@984>   AmiBlitz3\CharFlags[   4] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; EOT
00008A6C <AB3Scan.ab3@985>   AmiBlitz3\CharFlags[   5] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ENQ
00008A84 <AB3Scan.ab3@986>   AmiBlitz3\CharFlags[   6] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ACK
00008A9C <AB3Scan.ab3@987>   AmiBlitz3\CharFlags[   7] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; BELL
00008AB4 <AB3Scan.ab3@988>   AmiBlitz3\CharFlags[   8] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; BS  (backspace)
00008ACC <AB3Scan.ab3@989>   AmiBlitz3\CharFlags[   9] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW|#AB3TF_SPACE ; TAB (tabulator)
00008AE4 <AB3Scan.ab3@990>   AmiBlitz3\CharFlags[  10] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW|#AB3TF_EOL ; LF  (line feed) Linux Return
00008AFC <AB3Scan.ab3@991>   AmiBlitz3\CharFlags[  11] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; VT
00008B14 <AB3Scan.ab3@992>   AmiBlitz3\CharFlags[  12] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; FF  (feed forward)
00008B2C <AB3Scan.ab3@993>   AmiBlitz3\CharFlags[  13] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CR  (carrier return) Windows Return
00008B44 <AB3Scan.ab3@994>   AmiBlitz3\CharFlags[  14] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SO
00008B5C <AB3Scan.ab3@995>   AmiBlitz3\CharFlags[  15] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SI
00008B74 <AB3Scan.ab3@996>   AmiBlitz3\CharFlags[  16] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; DLE
00008B8C <AB3Scan.ab3@997>   AmiBlitz3\CharFlags[  17] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; DC1
00008BA4 <AB3Scan.ab3@998>   AmiBlitz3\CharFlags[  18] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CD2
00008BBC <AB3Scan.ab3@999>   AmiBlitz3\CharFlags[  19] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CD3
00008BD4 <AB3Scan.ab3@1000>   AmiBlitz3\CharFlags[  20] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CD4
00008BEC <AB3Scan.ab3@1001>   AmiBlitz3\CharFlags[  21] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; NAK
00008C04 <AB3Scan.ab3@1002>   AmiBlitz3\CharFlags[  22] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SYN
00008C1C <AB3Scan.ab3@1003>   AmiBlitz3\CharFlags[  23] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ETB
00008C34 <AB3Scan.ab3@1004>   AmiBlitz3\CharFlags[  24] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; CAN (Cancel)
00008C4C <AB3Scan.ab3@1005>   AmiBlitz3\CharFlags[  25] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; EM
00008C64 <AB3Scan.ab3@1006>   AmiBlitz3\CharFlags[  26] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; SUB
00008C7C <AB3Scan.ab3@1007>   AmiBlitz3\CharFlags[  27] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; ESC (Escape)
00008C94 <AB3Scan.ab3@1008>   AmiBlitz3\CharFlags[  28] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; FS
00008CAC <AB3Scan.ab3@1009>   AmiBlitz3\CharFlags[  29] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; GS
00008CC4 <AB3Scan.ab3@1010>   AmiBlitz3\CharFlags[  30] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; RS
00008CDC <AB3Scan.ab3@1011>   AmiBlitz3\CharFlags[  31] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW ; US
00008CF4 <AB3Scan.ab3@1012>   AmiBlitz3\CharFlags[@" "] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY|#AB3TF_SPACE ; Space
00008D0C <AB3Scan.ab3@1013>   AmiBlitz3\CharFlags[@"!"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008D24 <AB3Scan.ab3@1014>   AmiBlitz3\CharFlags[  34] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY|#AB3TF_QUOT
00008D3C <AB3Scan.ab3@1015>   AmiBlitz3\CharFlags[@"#"] = #AB3TF_STOP | #AB3TF_IS   | #AB3TF_COPY
00008D54 <AB3Scan.ab3@1016>   AmiBlitz3\CharFlags[@"$"] = #AB3TF_STOP | #AB3TF_IS   | #AB3TF_COPY
00008D6C <AB3Scan.ab3@1017>   AmiBlitz3\CharFlags[@"%"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008D84 <AB3Scan.ab3@1018>   AmiBlitz3\CharFlags[@"&"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008D9C <AB3Scan.ab3@1019>   AmiBlitz3\CharFlags[@"'"] = #AB3TF_STOP | #AB3TF_COPY
00008DB4 <AB3Scan.ab3@1020>   AmiBlitz3\CharFlags[@"("] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008DCC <AB3Scan.ab3@1021>   AmiBlitz3\CharFlags[@")"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008DE4 <AB3Scan.ab3@1022>   AmiBlitz3\CharFlags[@"*"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008DFC <AB3Scan.ab3@1023>   AmiBlitz3\CharFlags[@"+"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008E14 <AB3Scan.ab3@1024>   AmiBlitz3\CharFlags[@","] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008E2C <AB3Scan.ab3@1025>   AmiBlitz3\CharFlags[@"-"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008E44 <AB3Scan.ab3@1026>   AmiBlitz3\CharFlags[@"."] = #AB3TF_STOP | #AB3TF_COPY
00008E5C <AB3Scan.ab3@1027>   AmiBlitz3\CharFlags[@"/"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008E74 <AB3Scan.ab3@1028>   AmiBlitz3\CharFlags[@"0"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_BIN |#AB3TF_HEX|#AB3TF_DEC
00008E8C <AB3Scan.ab3@1029>   AmiBlitz3\CharFlags[@"1"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_BIN |#AB3TF_HEX|#AB3TF_DEC
00008EA4 <AB3Scan.ab3@1030>   AmiBlitz3\CharFlags[@"2"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008EBC <AB3Scan.ab3@1031>   AmiBlitz3\CharFlags[@"3"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008ED4 <AB3Scan.ab3@1032>   AmiBlitz3\CharFlags[@"4"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008EEC <AB3Scan.ab3@1033>   AmiBlitz3\CharFlags[@"5"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008F04 <AB3Scan.ab3@1034>   AmiBlitz3\CharFlags[@"6"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008F1C <AB3Scan.ab3@1035>   AmiBlitz3\CharFlags[@"7"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008F34 <AB3Scan.ab3@1036>   AmiBlitz3\CharFlags[@"8"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008F4C <AB3Scan.ab3@1037>   AmiBlitz3\CharFlags[@"9"] = #AB3TF_IS   | #AB3TF_COPY | #AB3TF_HEX |#AB3TF_DEC
00008F64 <AB3Scan.ab3@1038>   AmiBlitz3\CharFlags[@":"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008F7C <AB3Scan.ab3@1039>   AmiBlitz3\CharFlags[@";"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COMMENT|#AB3TF_COPY
00008F94 <AB3Scan.ab3@1040>   AmiBlitz3\CharFlags[@"<"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008FAC <AB3Scan.ab3@1041>   AmiBlitz3\CharFlags[@"="] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008FC4 <AB3Scan.ab3@1042>   AmiBlitz3\CharFlags[@">"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008FDC <AB3Scan.ab3@1043>   AmiBlitz3\CharFlags[@"?"] = #AB3TF_STOP | #AB3TF_NEW  | #AB3TF_COPY
00008FF4 <AB3Scan.ab3@1044>   AmiBlitz3\CharFlags[@"@"] = #AB3TF_STOP | #AB3TF_COPY
0000900C <AB3Scan.ab3@1045>   AmiBlitz3\CharFlags[@"A"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00009024 <AB3Scan.ab3@1046>   AmiBlitz3\CharFlags[@"B"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
0000903C <AB3Scan.ab3@1047>   AmiBlitz3\CharFlags[@"C"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00009054 <AB3Scan.ab3@1048>   AmiBlitz3\CharFlags[@"D"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
0000906C <AB3Scan.ab3@1049>   AmiBlitz3\CharFlags[@"E"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
00009084 <AB3Scan.ab3@1050>   AmiBlitz3\CharFlags[@"F"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY|#AB3TF_HEX
0000909C <AB3Scan.ab3@1051>   AmiBlitz3\CharFlags[@"G"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090B4 <AB3Scan.ab3@1052>   AmiBlitz3\CharFlags[@"H"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090CC <AB3Scan.ab3@1053>   AmiBlitz3\CharFlags[@"I"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090E4 <AB3Scan.ab3@1054>   AmiBlitz3\CharFlags[@"J"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000090FC <AB3Scan.ab3@1055>   AmiBlitz3\CharFlags[@"K"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009114 <AB3Scan.ab3@1056>   AmiBlitz3\CharFlags[@"L"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000912C <AB3Scan.ab3@1057>   AmiBlitz3\CharFlags[@"M"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009144 <AB3Scan.ab3@1058>   AmiBlitz3\CharFlags[@"N"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000915C <AB3Scan.ab3@1059>   AmiBlitz3\CharFlags[@"O"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009174 <AB3Scan.ab3@1060>   AmiBlitz3\CharFlags[@"P"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000918C <AB3Scan.ab3@1061>   AmiBlitz3\CharFlags[@"Q"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000091A4 <AB3Scan.ab3@1062>   AmiBlitz3\CharFlags[@"R"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000091BC <AB3Scan.ab3@1063>   AmiBlitz3\CharFlags[@"S"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000091D4 <AB3Scan.ab3@1064>   AmiBlitz3\CharFlags[@"T"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
000091EC <AB3Scan.ab3@1065>   AmiBlitz3\CharFlags[@"U"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009204 <AB3Scan.ab3@1066>   AmiBlitz3\CharFlags[@"V"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000921C <AB3Scan.ab3@1067>   AmiBlitz3\CharFlags[@"W"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009234 <AB3Scan.ab3@1068>   AmiBlitz3\CharFlags[@"X"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000924C <AB3Scan.ab3@1069>   AmiBlitz3\CharFlags[@"Y"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
00009264 <AB3Scan.ab3@1070>   AmiBlitz3\CharFlags[@"Z"] = #AB3TF_FIRST| #AB3TF_IS  |#AB3TF_COPY
0000927C <AB3Scan.ab3@1071>   AmiBlitz3\CharFlags[@"["] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009294 <AB3Scan.ab3@1072>   AmiBlitz3\CharFlags[@"\"] = #AB3TF_STOP | #AB3TF_COPY
000092AC <AB3Scan.ab3@1073>   AmiBlitz3\CharFlags[@"]"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
000092C4 <AB3Scan.ab3@1074>   AmiBlitz3\CharFlags[@"^"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
000092DC <AB3Scan.ab3@1075>   AmiBlitz3\CharFlags[@"_"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000092F4 <AB3Scan.ab3@1076>   AmiBlitz3\CharFlags[@"`"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
0000930C <AB3Scan.ab3@1077>   AmiBlitz3\CharFlags[@"a"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
00009324 <AB3Scan.ab3@1078>   AmiBlitz3\CharFlags[@"b"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
0000933C <AB3Scan.ab3@1079>   AmiBlitz3\CharFlags[@"c"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
00009354 <AB3Scan.ab3@1080>   AmiBlitz3\CharFlags[@"d"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
0000936C <AB3Scan.ab3@1081>   AmiBlitz3\CharFlags[@"e"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
00009384 <AB3Scan.ab3@1082>   AmiBlitz3\CharFlags[@"f"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY | #AB3TF_HEX
0000939C <AB3Scan.ab3@1083>   AmiBlitz3\CharFlags[@"g"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093B4 <AB3Scan.ab3@1084>   AmiBlitz3\CharFlags[@"h"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093CC <AB3Scan.ab3@1085>   AmiBlitz3\CharFlags[@"i"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093E4 <AB3Scan.ab3@1086>   AmiBlitz3\CharFlags[@"j"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000093FC <AB3Scan.ab3@1087>   AmiBlitz3\CharFlags[@"k"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009414 <AB3Scan.ab3@1088>   AmiBlitz3\CharFlags[@"l"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000942C <AB3Scan.ab3@1089>   AmiBlitz3\CharFlags[@"m"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009444 <AB3Scan.ab3@1090>   AmiBlitz3\CharFlags[@"n"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000945C <AB3Scan.ab3@1091>   AmiBlitz3\CharFlags[@"o"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009474 <AB3Scan.ab3@1092>   AmiBlitz3\CharFlags[@"p"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000948C <AB3Scan.ab3@1093>   AmiBlitz3\CharFlags[@"q"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000094A4 <AB3Scan.ab3@1094>   AmiBlitz3\CharFlags[@"r"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000094BC <AB3Scan.ab3@1095>   AmiBlitz3\CharFlags[@"s"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000094D4 <AB3Scan.ab3@1096>   AmiBlitz3\CharFlags[@"t"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
000094EC <AB3Scan.ab3@1097>   AmiBlitz3\CharFlags[@"u"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009504 <AB3Scan.ab3@1098>   AmiBlitz3\CharFlags[@"v"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000951C <AB3Scan.ab3@1099>   AmiBlitz3\CharFlags[@"w"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009534 <AB3Scan.ab3@1100>   AmiBlitz3\CharFlags[@"x"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000954C <AB3Scan.ab3@1101>   AmiBlitz3\CharFlags[@"y"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
00009564 <AB3Scan.ab3@1102>   AmiBlitz3\CharFlags[@"z"] = #AB3TF_FIRST| #AB3TF_IS  | #AB3TF_COPY
0000957C <AB3Scan.ab3@1103>   AmiBlitz3\CharFlags[@"{"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
00009594 <AB3Scan.ab3@1104>   AmiBlitz3\CharFlags[@"|"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
000095AC <AB3Scan.ab3@1105>   AmiBlitz3\CharFlags[@"}"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
000095C4 <AB3Scan.ab3@1106>   AmiBlitz3\CharFlags[@"~"] = #AB3TF_STOP | #AB3TF_NEW | #AB3TF_COPY
000095DC <AB3Scan.ab3@1107>   AmiBlitz3\CharFlags[ 127] = #AB3TF_ILLEGAL | #AB3TF_STOP | #AB3TF_NEW
00009612 <AB3Scan.ab3@1109>   AmiBlitz3\TokenT = pft_Load{tokenfile}
0000962C <AB3Scan.ab3@1111>   If AmiBlitz3\TokenT=Null
0000963A <AB3Scan.ab3@1112>     AmiBlitz3\TokenT = pft_Create{}
0000966E <AB3Scan.ab3@1113>     pftlib_SetInt32{AmiBlitz3\TokenT,"End",#TOKEN_End}
000096A2 <AB3Scan.ab3@1114>     pftlib_SetInt32{AmiBlitz3\TokenT,"Return",#TOKEN_Return    } ; $8007
000096D6 <AB3Scan.ab3@1115>     pftlib_SetInt32{AmiBlitz3\TokenT,"Statement",#TOKEN_Statement } ; $8008
0000970A <AB3Scan.ab3@1116>     pftlib_SetInt32{AmiBlitz3\TokenT,"Function",#TOKEN_Function  } ; $8009
0000973E <AB3Scan.ab3@1117>     pftlib_SetInt32{AmiBlitz3\TokenT,"If",#TOKEN_If        } ; $800B
00009772 <AB3Scan.ab3@1118>     pftlib_SetInt32{AmiBlitz3\TokenT,"While",#TOKEN_While     } ; $800C
000097A6 <AB3Scan.ab3@1119>     pftlib_SetInt32{AmiBlitz3\TokenT,"Macro",#TOKEN_Macro     } ; $800D
000097DA <AB3Scan.ab3@1120>     pftlib_SetInt32{AmiBlitz3\TokenT,"Select",#TOKEN_Select    } ; $800E
0000980E <AB3Scan.ab3@1121>     pftlib_SetInt32{AmiBlitz3\TokenT,"Case",#TOKEN_Case      } ; $800F
00009842 <AB3Scan.ab3@1122>     pftlib_SetInt32{AmiBlitz3\TokenT,"For",#TOKEN_For       } ; $8016
00009876 <AB3Scan.ab3@1123>     pftlib_SetInt32{AmiBlitz3\TokenT,"Then",#TOKEN_Then      } ; $8021
000098AA <AB3Scan.ab3@1124>     pftlib_SetInt32{AmiBlitz3\TokenT,"Stop",#TOKEN_Stop      } ; $802D
000098DE <AB3Scan.ab3@1125>     pftlib_SetInt32{AmiBlitz3\TokenT,"TRAP",#TOKEN_TRAP      } ; $80AE
00009912 <AB3Scan.ab3@1126>     pftlib_SetInt32{AmiBlitz3\TokenT,"Repeat",#TOKEN_Repeat    } ; $80BB
00009946 <AB3Scan.ab3@1127>     pftlib_SetInt32{AmiBlitz3\TokenT,"EndIf",#TOKEN_EndIf     } ; $80C0
0000997A <AB3Scan.ab3@1128>     pftlib_SetInt32{AmiBlitz3\TokenT,"Object",#TOKEN_Object    } ; $80D7
000099AE <AB3Scan.ab3@1129>     pftlib_SetInt32{AmiBlitz3\TokenT,"NEWTYPE",#TOKEN_NEWTYPE   } ; $8001
000099E2 <AB3Scan.ab3@1130>     pftlib_SetInt32{AmiBlitz3\TokenT,"INCLUDE",#TOKEN_INCLUDE   } ; $8013
00009A16 <AB3Scan.ab3@1131>     pftlib_SetInt32{AmiBlitz3\TokenT,"XINCLUDE",#TOKEN_XINCLUDE  } ; $8012
00009A4A <AB3Scan.ab3@1132>     pftlib_SetInt32{AmiBlitz3\TokenT,"SHARED",#TOKEN_SHARED    } ; $8015
00009A7E <AB3Scan.ab3@1133>     pftlib_SetInt32{AmiBlitz3\TokenT,"DEFTYPE",#TOKEN_DEFTYPE   } ; $8033
00009AB2 <AB3Scan.ab3@1134>     pftlib_SetInt32{AmiBlitz3\TokenT,"SizeOf",#TOKEN_SizeOf    } ; $802F
00009ABA <AB3Scan.ab3@1140>   Function Return True
00009AD4 <AB3Scan.ab3@1142> End Function
00009ADA <AB3Scan.ab3@1155> err.l        = False ; indicate that an error has occured
00009AE0 <AB3Scan.ab3@1156> showhelp.l   = False ; show the CLI tool's help
00009AE8 <AB3Scan.ab3@1159> verbose.l    = 1
00009AEE <AB3Scan.ab3@1160> recursive.l  = False
00009B16 <AB3Scan.ab3@1161> incpath.s    = ""
00009B1E <AB3Scan.ab3@1162> dflags.l     = #DF_ALL
00009B6A <AB3Scan.ab3@1163> exefile.s    = dos_GetProgFile{""}
00009BC2 <AB3Scan.ab3@1164> tokendir.s   = dos_PathPart{exefile}
00009C36 <AB3Scan.ab3@1165> tokenfile.s  = dos_AddPart{tokendir,"tokens.pft"}
00009C66 <AB3Scan.ab3@1168> filename.s = dos_GetNextArg{} ; first read the filename
00009C9E <AB3Scan.ab3@1169> If filename.s = ""
00009CD6 <AB3Scan.ab3@1170>   NPrint "*** ERROR: No filename specified!"
00009CDC <AB3Scan.ab3@1171>   err=True
00009D0C <AB3Scan.ab3@1176>   arg.s = dos_GetNextArg{} ; get the next CLI argument
00009D58 <AB3Scan.ab3@1177>   larg.s = LCase$(arg) ; lower case the option string
00009E06 <AB3Scan.ab3@1178>   If Left$(larg.s,1) = "-" Then larg=UnRight$(larg,1)
00009E3C <AB3Scan.ab3@1179>   Select larg
00009E90 <AB3Scan.ab3@1180>     Case "v"  : verbose    = Vallong(dos_GetNextArg{})
00009EC0 <AB3Scan.ab3@1181>     Case "h"  : showhelp   = True  ; show the help and quit
00009EF0 <AB3Scan.ab3@1182>     Case "r"  : recursive  = True
00009F4A <AB3Scan.ab3@1183>     Case "i"  : incpath    = dos_GetNextArg{}
00009FA4 <AB3Scan.ab3@1184>     Case "t"  : tokenfile  = dos_GetNextArg{}
00009FD6 <AB3Scan.ab3@1185>     Case "df" : dflags   = 0
0000A01E <AB3Scan.ab3@1186>       flags.s = LCase$(dos_GetNextArg{})
0000A07E <AB3Scan.ab3@1187>       If Instr(flags,"f") Then dflags|#DF_FUNCTION
0000A0DE <AB3Scan.ab3@1188>       If Instr(flags,"m") Then dflags|#DF_MACRO
0000A13E <AB3Scan.ab3@1189>       If Instr(flags,"t") Then dflags|#DF_NEWTYPE
0000A19E <AB3Scan.ab3@1190>       If Instr(flags,"c") Then dflags|#DF_CONSTANT
0000A1FE <AB3Scan.ab3@1191>       If Instr(flags,"l") Then dflags|#DF_LABEL
0000A25E <AB3Scan.ab3@1192>       If Instr(flags,"s") Then dflags|#DF_SOURCE
0000A2BE <AB3Scan.ab3@1193>       If Instr(flags,"n") Then dflags|#DF_FIELD
0000A31E <AB3Scan.ab3@1194>       If Instr(flags,"g") Then dflags|#DF_GLOBAL
0000A37E <AB3Scan.ab3@1195>       If Instr(flags,"v") Then dflags|#DF_LOCAL
0000A3DE <AB3Scan.ab3@1196>       If Instr(flags,"i") Then dflags|#DF_INCLUDE
0000A43E <AB3Scan.ab3@1197>       If Instr(flags,"$") Then dflags|#DF_STRING
0000A444 <AB3Scan.ab3@1198>     Default
0000A47C <AB3Scan.ab3@1199>       If arg><""
0000A510 <AB3Scan.ab3@1200>         NPrint "*** ERROR: Unknown option \\22",arg,"\\22 specified!"
0000A516 <AB3Scan.ab3@1201>         err = True
0000A524 <AB3Scan.ab3@1203>   End Select
0000A562 <AB3Scan.ab3@1204> Until arg = "" ; until we processed all arguments
0000A584 <AB3Scan.ab3@1207> If err><False OR showhelp = True
0000A5C8 <AB3Scan.ab3@1208>   NPrint vers
0000A600 <AB3Scan.ab3@1209>   NPrint "Scan an \\22Amiblitz\\22 source code for various properties."
0000A638 <AB3Scan.ab3@1210>   NPrint "\\nSyntax: AB3Scan <sourcefile> [options]"
0000A670 <AB3Scan.ab3@1211>   NPrint "  required"
0000A6A8 <AB3Scan.ab3@1212>   NPrint "  <sourcefile>      : source file to process"
0000A6E0 <AB3Scan.ab3@1213>   NPrint "  optional"
0000A718 <AB3Scan.ab3@1214>   NPrint "  -(df)lags <flags> : flags to indicate what to output:"
0000A750 <AB3Scan.ab3@1215>   NPrint "                      S = source file"
0000A788 <AB3Scan.ab3@1216>   NPrint "                      F = functions"
0000A7C0 <AB3Scan.ab3@1217>   NPrint "                      M = macros"
0000A7F8 <AB3Scan.ab3@1218>   NPrint "                      T = newtypes"
0000A830 <AB3Scan.ab3@1219>   NPrint "                      N = newtype fields"
0000A868 <AB3Scan.ab3@1220>   NPrint "                      C = constants"
0000A8A0 <AB3Scan.ab3@1221>   NPrint "                      L = labels"
0000A8D8 <AB3Scan.ab3@1222>   NPrint "                      G = global variables"
0000A910 <AB3Scan.ab3@1223>   NPrint "                      V = local variables"
0000A948 <AB3Scan.ab3@1224>   NPrint "                      I = includes"
0000A980 <AB3Scan.ab3@1225>   NPrint "                      $ = strings"
0000A9B8 <AB3Scan.ab3@1226>   NPrint "  -(i)nclude <path> : include directory"
0000A9F0 <AB3Scan.ab3@1227>   NPrint "  -(t)okens <file>  : prefixtree file with AmiBlitz3 tokens"
0000AA28 <AB3Scan.ab3@1228>   NPrint "  -(r)ecursive      : scan recursive (XINCLUDES) too"
0000AA60 <AB3Scan.ab3@1229>   NPrint "  -(v)erbose <v>    : verbose level"
0000AA98 <AB3Scan.ab3@1230>   NPrint "  -(h)help          : show this help"
0000AAD0 <AB3Scan.ab3@1231>   NPrint "\\nExample:"
0000AB08 <AB3Scan.ab3@1232>   NPrint "  AB3Scan \\22DH0:Files\MyProgram.ab3\\22 -r -df SFM\\n"
0000AB0E <AB3Scan.ab3@1233>   End
0000AB44 <AB3Scan.ab3@1236> If dos_IsDir{filename}
0000AB78 <AB3Scan.ab3@1237>   path.s    = filename
0000ABA0 <AB3Scan.ab3@1238>   pattern.s = "#?.(bb|bb2|ab2|ab3)"
0000ABA6 <AB3Scan.ab3@1239> Else
0000ABFE <AB3Scan.ab3@1240>   path.s    = dos_PathPart{filename}
0000AC56 <AB3Scan.ab3@1241>   pattern.s = dos_FilePart{filename}
0000AD58 <AB3Scan.ab3@1245> If verbose>1 Then NPrint "INFO Scan \\22",path,"\\22 for \\22",pattern,"\\22..."
0000AD86 <AB3Scan.ab3@1246> ab3_Init{tokenfile}
0000ADEC <AB3Scan.ab3@1247> *parser.Parser = ab3_CreateParser{incpath,pattern,recursive,dflags,verbose}
0000AE3E <AB3Scan.ab3@1248> If *parser = Null Then NPrint "*** Unable to create AB3 Parser!" : Goto exit
0000AE70 <AB3Scan.ab3@1249> ab3_Scan{*parser,path}
0000AEC0 <AB3Scan.ab3@1252> If *parser\verbose>1 Then NPrint "INFO Done."
0000AED4 <AB3Scan.ab3@1254> If *parser Then ab3_FreeParser{*parser}
0000AEDA <AB3Scan.ab3@1255> ab3_Deinit{}
0000AEE0 <AB3Scan.ab3@1256> End
0000AEE6 <AB3Scan.ab3@1258> Dc.b "$VER: "
0000AF0B <AB3Scan.ab3@1260> Dc.b "AB3Scan \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0
0000AF17 <AB3Scan.ab3@1262> Dc.b "AB3Scan \\__VER_MAJOR.\\__VER_MINOR",0
