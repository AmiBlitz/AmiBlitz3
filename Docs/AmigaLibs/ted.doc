TABLE OF CONTENTS

ted.library/TEDSetLabelList
ted.library/TEDSetLabelCount
ted.library/TEDGetLabelList
ted.library/TEDGetLabelCount
ted.library/TEDSetJumpTable
ted.library/TEDGetJumpTable
ted.library/TEDError
ted.library/TEDSetFirstLine
ted.library/TEDSetCurrentLine
ted.library/TEDGetFirstLine
ted.library/TEDGetCurrentLine
ted.library/TEDDetoke
ted.library/TEDGetFilename
ted.library/TEDSetLabelList
                                                    ted.library/TEDSetLabelList
   NAME
       TEDSetLabelList -- tell the library where the address of label-list pointer
                      is

   SYNOPSIS
       TEDSetLabelList(&mice)
                        A0

   FUNCTION
       TEDSetLabelList attempts to tell ted.library where the pointer to the
       list of 'mouseabel' labels is.

   INPUTS
       &mice -- address of the pointer to the label list

ted.library/TEDSetLabelCount
                                                   ted.library/TEDSetLabelCount
   NAME
       TEDSetLabelCount -- tell the library where the address of the label
                           counter is

   SYNOPSIS
       TEDSetLabelCount(&micecount)
                            A0

   FUNCTION
       Attempt to tell ted.library where the label counter is held.

   INPUTS
       &micecount -- address of label counter

ted.library/TEDGetLabelList
                                                    ted.library/TEDGetLabelList
   NAME
       TEDGetLabelList -- obtain the address of the label-list

   SYNOPSIS
       address = TEDGetLabelList()
       D0

   FUNCTION
       Returns the address of the label-list

   RESULT
       address -- address of the label-list (0 for failure)

   NOTES
       The label-list is constructed as follows :

            *NextLabel
            *LabelText

       where LabelText :
            *PrevLine
            *NextLine
            linelength.b
            <actual tokenised text>
ted.library/TEDGetLabelCount
                                                   ted.library/TEDGetLabelCount
   NAME
       TEDGetLabelCount -- find out how many mouseable labels there are

   SYNOPSIS
       count = TEDGetLabelCount()
       D0

   FUNCTION
       Find out the number of 'mouseable' labels there are.

   RESULT
       count -- the number of 'mouseable' labels (0=failure or no labels)
ted.library/TEDSetJumpTable
                                                   ted.library/TEDSetJumpTable
   NAME
       TEDSetJumpTable -- tell the library where SuperTED's pointer to the
                         function jumptable is.

   SYNOPSIS
       TEDSetJumpTable(&jumptable)
                           A0

   FUNCTION
       Tell the ted library where SuperTED's function jump table pointer is

   INPUTS
       &jumptable -- the address of the pointer to SuperTED's jump table
ted.library/TEDGetJumpTable
                                                   ted.library/TEDGetJumpTable
   NAME
       TEDGetJumpTable -- obtain the locaton of SuperTED's function jump table

   SYNOPSIS
       jumptable = TEDGetJumpTable()
       D0

   FUNCTION
       Get the locaton of SuperTED's internal function jump table
 
   RESULT
       jumptable -- the address of SuperTED's internal function jump table

   NOTES
       At present SuperTED's function jump table is structured thus :

         A series of longword pointers to subroutines inside SuperTED :

		00	->	Open Requester
		04	->	Close Requester
		08	->	Get Input
		12	->	Error Requester
		16	->	Detoke Entire File
		20	->	Tokenise Entire File
		24	->	File Requester
		28	->	Refresh Gadgets
		32	->	Get Input(2)
		36	->	RESERVED
		40	->	Screen Ptr
		44	->	RESERVED
		48	->	Change Colours
		52	->	RESERVED
		
		56	->	Tokenise One Line
		60	->	Open IO
		64	->	Close IO
		68	->	Activate Gadget
		72	->	Normal Mouse Pointer
		76	->	Busy Mouse Pointer
		80	->	RESERVED
		84	->	RESERVED
		88	->	Allocate Memory
		92.w	->	Bitmap Modulo
		94	->	Current Requester's Window
		98.w	->	Button Status
		100	->	Detoknise One Line
		104	->	RESERVED
		108	->	RESERVED
		112	->	RESERVED
		116	->	RESERVED
		120	->	RESERVED
		128	->	RESERVED
ted.library/TEDError
                                                  ted.library/TEDError
   NAME
       TEDError -- bring up an error requester on SuperTED's screen

   SYNOPSIS
       TEDError(bodytext)
                   A0

   FUNCTION
       Tell SuperTED to open its standard Error Requester containing
       the specified 'bodytext'. The requester has only one button - 'Okay'

   INPUTS
       bodytext -- a pointer to the requester's body text
ted.library/TEDSetFirstLine
                                                  ted.library/TEDSetFirstLine
   NAME
       TEDSetFirstLine -- tell the library where the first line pointer is

   SYNOPSIS
       TEDSetFirstLine(&firstlineptr)
                             A0

   FUNCTION
       Tell ted.library where SuperTED holds the pointer to the first line
       in the document

   INPUTS
       &firstlineptr -- address of the first line pointer (!)
ted.library/TEDSetCurrentLine
                                                  ted.library/TEDSetCurrentLine
   NAME
       TEDSetCurrentLine -- tell the library where the current line pointer is

   SYNOPSIS
       TEDSetCurrentLine(&currentlineptr)
                             A0

   FUNCTION
       Tell ted.library where SuperTED holds the pointer to the current line
       in the document

   INPUTS
       &currentlineptr -- address of the current line pointer (!)
ted.library/TEDGetFirstLine
                                                  ted.library/TEDGetFirstLine
   NAME
       TEDGetFirstLine -- get the pointer to the first line of text

   SYNOPSIS
       lineptr = TEDGetFirstLine()
       D0

   FUNCTION
       Retrieve a pointer to the first line of text

   RESULTS
       lineptr -- address of the first line of text
ted.library/TEDGetCurrentLine
                                                  ted.library/TEDGetCurrentLine
   NAME
       TEDGetCurrentLine -- get the pointer to the current line of text

   SYNOPSIS
       lineptr = TEDGetCurrentLine()
       D0

   FUNCTION
       Retrieve a pointer to the current line of text

   RESULTS
       lineptr -- address of the current line of text
ted.library/TEDDetoke
                                                  ted.library/TEDDetoke
   NAME
       TEDDetoke -- detokenise a line of source code

   SYNOPSIS
       detokenised_line = TEDDetoke(sourceline)
       D0                               A0

   FUNCTION
       Get SuperTED to detokenise a line of source code

   INPUTS
       sourceline -- the actual tokenised text (NOT the line structure!)

   RESULTS
       detokenised_line -- a pointer to detokenised null-terminated text.

   NOTES
       Remember to pass the actual tokenised text, not the line structure!
       SuperTED's line structure is as follows:

            *PrevLine
            *NextLine
            linelength.b
            <actual tokenised text>
ted.library/TEDGetFilename
                                                  ted.library/TEDGetFilename
   NAME
       TEDGetFilename -- return the name of file currently loaded

   SYNOPSIS
       filename = TEDGetFilename()
       D0

   FUNCTION
       Get SuperTED to return a string holding the name of the current file

   RESULTS
       filename  -- a pointer to a null terminated string holding the
                    full path to the currnt file

   NOTES
       The pathname is taken from the 'directory' string in the Load
       requester - so it may well be blank.
