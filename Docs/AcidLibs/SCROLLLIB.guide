@DATABASE SCROLLLIB
@Author Conversion program
@$VER: SCROLLLIB V1.1 (27.01.2007)- Updated by mrodfr.
@NODE OVERVIEW "Overview of SCROLLLIB"

                                  @{b}@{u}Overview@{ub}@{uu}


                          An Acid Software Library

                         Converted to AmigaGuide by

                            Red When Excited Ltd

                 Used with the permission of Acid Software

          Edited, fixed and cleaned by Toby Zuijdveld 27/02/1999.
                       mailto:hotcakes\@abacus.net.au



@ENDNODE OVERVIEW

@NODE Scroll "SCROLLLIB"

@{fg shine}Statement: Scroll@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Scroll X1,Y1,Width,Height,X2,Y2[,BitMap#]

Scroll allows rectangular areas within a bitmap to be moved around. X1, 
Y1, Width and Height specify the position and size of the rectangle to 
be moved. X2 and Y2 specify the position the rectangle is to be moved 
to.

An optional Source BitMap parameter allows you to move rectangular 
areas from one bitmap to another.


@ENDNODE Scroll

@NODE Gap "SCROLLLIB"

@{fg shine}Statement: Gap@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Gap *Plot X,Y,Colour

Plot is used to alter the colour of an individual pixel on the currently 
used bitmap. X and Y specify the location of the pixel to be altered, and 
Colour specifies the colour to change the pixel to.

A Colour parameter of -1 will cause the pixel at the specified pixel 
position to be 'inverted'.


@ENDNODE Plot
@NODE Plot "SCROLLLIB"

@{fg shine}Statement: Plot@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Plot X,Y,Colour

Plot is used to alter the colour of an individual pixel on the 
currently used bitmap. X and Y specify the location of the pixel to be 
altered, and Colour specifies the colour to change the pixel to.

A Colour parameter of -1 will cause the pixel at the specified pixel 
position to be 'inverted'.


@ENDNODE Plot

@NODE Point "SCROLLLIB"

@{fg shine}Statement: Point@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Point X,Y,Colour

The Point function will return the colour of a particular pixel in the 
currently used bitmap. The pixel to be examined is specified by the X 
and Y parameters.

If X and Y specify a point outside the edges of the bitmap, a value of 
-1 will be returned.


@ENDNODE Point

@NODE Cls "SCROLLLIB"

@{fg shine}Statement: Cls@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Cls [Colour]

Cls allows you to fill the currently used bitmap with the colour 
specified by the Colour parameter. If Colour is omitted, the currently 
used bitmap will be filled with colour 0.

A Colour parameter of -1 will cause the entire bitmap to be 
'inverted'.


@ENDNODE Cls

@NODE BlockScroll "SCROLLLIB"

@{fg shine}Statement: BlockScroll@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : BlockScroll X1,Y1,Width,Height,X2,Y2[,BitMap#]

Same as the Scroll command except that BlockScroll is much faster but 
only works with 16 bit aligned areas. This means that X1, X2 and Width 
must all be multiples of 16. Useful for block scrolling routines that 
render the same blocks to both sides of the display, the programmer can 
now choose to render just one set and then copy the result to the other 
side with the BlockScroll command.
@ENDNODE BlockScroll

@NODE MAIN "SCROLLLIB"

.-----------------------------------------------------------------------------.
|                                 @{b}SCROLLLIB@{ub}                                   |
`-----------------------------------------------------------------------------'

                             @{"     Overview     " link OVERVIEW}

                               Command Index                                

                               @{" BlockScroll  " link BlockScroll}
                               @{" Cls          " link Cls}
                               @{" Gap          " link Gap}
                               @{" Point        " link Point}
                               @{" Plot         " link Plot}
                               @{" Scroll       " link Scroll}

@ENDNODE MAIN

