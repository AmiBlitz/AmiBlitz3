@DATABASE PALETTELIB
@Author Conversion program
@$VER: PALETTELIB V1.1 (27.01.2007)- Updated by mrodfr.
@NODE OVERVIEW "Overview of PALETTELIB"

                                  @{b}@{u}Overview@{ub}@{uu}


                          An Acid Software Library

                         Converted to AmigaGuide by

                            Red When Excited Ltd

                 Used with the permission of Acid Software


@ENDNODE OVERVIEW

@NODE LoadPalette "PALETTELIB"

@{fg shine}Statement: LoadPalette@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : LoadPalette Palette#,Filename$[,Palette Offset]

LoadPalette creates and initializes a palette object. Filename$ 
specifies the name of an ILBM IFF file containing colour information. 
If the file contains colour cycling information, this will also be 
loaded into the palette object.

An optional Palette Offset may be specified to allow the colour 
information to be loaded at a specified point (colour register) in the 
palette. This is especially useful in the case of sprite colours, as 
these must begin at colour register sixteen.

LoadPalette does not actually change any display colours. Once a 
palette is loaded, Use Palette can be used to cause display 
changes.


@ENDNODE LoadPalette

@NODE Cycle "PALETTELIB"

@{fg shine}Statement: Cycle@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Cycle Palette#

Cycle will cause the colour cycling information contained in the 
specified palette to be cycled on the currently used Screen. Colour 
cycling information is created when LoadPalette is executed or with the 
SetCycle command.


@ENDNODE Cycle

@NODE Ernie "PALETTELIB"

@{fg shine}Statement: Ernie@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Ernie 

Hi Bert



@ENDNODE Ernie

@NODE Bert "PALETTELIB"

@{fg shine}Statement: Bert@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Bert 

Hi Ernie



@ENDNODE Bert

@NODE RGB "PALETTELIB"

@{fg shine}Statement: RGB@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : RGB Colour Register,Red,Green,Blue

RGB enables you to set individual colour registers in a palette to an 
RGB colour value. If executed in Amiga mode, RGB sets colour registers 
in the currently used screen. If executed in Blitz Mode, RGB sets 
colour registers in the currently used slice. Note that RGB does not 
alter palette objects in any way.


@ENDNODE RGB

@NODE Red "PALETTELIB"

@{fg shine}Function: Red@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Red (Colour Register)

Red returns the amount of RGB red in a specified colour register. If 
executed in Amiga mode, Red returns the amount of red in the specified 
colour register of the currently used screen. If executed in Blitz 
mode, Red returns the amount of red in the specified colour register of 
the currently used slice.

Red will always return a value in the range zero to fifteen.




@ENDNODE Red

@NODE Green "PALETTELIB"

@{fg shine}Function: Green@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Green (Colour Register)

Green returns the amount of RGB green in a specified colour register. 
If executed in Amiga mode, Green returns the amount of green in the 
specified colour register of the currently used screen. If executed in 
Blitz mode, Green returns the amount of green in the specified colour 
register of the currently used slice.

Green will always return a value in the range zero to fifteen.


@ENDNODE Green

@NODE Blue "PALETTELIB"

@{fg shine}Function: Blue@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Blue (Colour Register)

Blue returns the amount of RGB blue in a specified colour register. If 
executed in Amiga mode, Blue returns the amount of blue in the 
specified colour register of the currently used screen. If executed in 
Blitz mode, Blue returns the amount of blue in the specified colour 
register of the currently used slice.

Blue will always return a value in the range zero to fifteen.


@ENDNODE Blue

@NODE Palette "PALETTELIB"

@{fg shine}Statement: Palette@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Palette colour and cycling information



@ENDNODE Palette

@NODE PalRGB "PALETTELIB"

@{fg shine}Statement: PalRGB@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : PalRGB Palette#,Colour Register,Red,Green,Blue

PalRGB allows you to set an individual colour register within a palette 
object. Unless an RGB has also been executed, the actual colour change 
will not come into effect until the next time Use Palette is 
executed.


@ENDNODE PalRGB

@NODE SetCycle "PALETTELIB"

@{fg shine}Statement: SetCycle@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SetCycle Palette#,Cycle,Low Colour,High Colour[,Speed]

SetCycle is used to configure colour cycling information for the Cycle 
command. The low and high colours specify the range of colours that 
will cycle. You may have a maximum of 7 different cycles for a single 
palette. The optional parameter Speed specifies how quickly the colours 
will cycle, a negative value will cycle the colours backwards.



@ENDNODE SetCycle

@NODE StopCycle "PALETTELIB"

@{fg shine}Statement: StopCycle@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : StopCycle 

StopCycle will halt all colour cycling started with the Cycle 
command.



@ENDNODE StopCycle

@NODE AGARGB "PALETTELIB"

@{fg shine}Statement: AGARGB@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : AGARGB Colour Register,Red,Green,Blue

The AGARGB command is the AGA equivalent of the RGB command. The 'Red', 
'Green' and 'Blue' parameters must be in the range 0 through 255, while 
'Colour Register' is limited to the number of colours available on the 
currently used screen.


@ENDNODE AGARGB

@NODE AGAPalRGB "PALETTELIB"

@{fg shine}Statement: AGAPalRGB@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : AGAPalRGB Palette#,Colour Register,Red,Green,Blue

The AGAPalRGB command is the AGA equivalent of the PalRGB command. 
AGAPalRGB allows you to set an individual colour register within a 
palette object. This command only sets up an entry in a palette object, 
and will not alter the actual screen palette until a 'Use Palette' is 
executed.


@ENDNODE AGAPalRGB

@NODE BigBird "PALETTELIB"

@{fg shine}Statement: BigBird@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : BigBird 

Hi Everyone...



@ENDNODE BigBird

@NODE AGARed "PALETTELIB"

@{fg shine}Function: AGARed@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : AGARed (Colour Register)

The AGARed function returns the red component of the specified 
colour register within the currently used screen. The returned value will be 
within the range 0 (being no red) through 255 (being full red).


@ENDNODE AGARed

@NODE AGAGreen "PALETTELIB"

@{fg shine}Function: AGAGreen@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : AGAGreen (Colour Register)

The AGAGreen function returns the green component of the specified 
colour register within the currently used screen. The returned value 
will be within the range 0 (being no green) through 255 (being full 
green).


@ENDNODE AGAGreen

@NODE AGABlue "PALETTELIB"

@{fg shine}Function: AGABlue@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : AGABlue (Colour Register)

The AGABlue function returns the blue component of the specified colour 
register within the currently used screen. The returned value will be 
within the range 0 (being no blue) through 255 (being full 
blue).


@ENDNODE AGABlue

@NODE ShowPalette "PALETTELIB"

@{fg shine}Statement: ShowPalette@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : ShowPalette Palette#

ShowPalette replaces Use Palette for copying a palette's colours to the 
current Screen or Slice.


@ENDNODE ShowPalette

@NODE NewPaletteMode "PALETTELIB"

@{fg shine}Statement: NewPaletteMode@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : NewPaletteMode On|Off

The NewPaletteMode flag has been added for compatibility with older 
Blitz2 programs. By setting NewPaletteMode to On the Use Palette 
command merely makes the specified palette the current object and does 
not try to copy the colour information to the current Screen or 
Slice.


@ENDNODE NewPaletteMode

@NODE CyclePalette "PALETTELIB"

@{fg shine}Statement: CyclePalette@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : CyclePalette Palette#

CyclePalette uses the standard color cycling parameters in the palette 
object to cycle the colors. Unlike the Cycle command which copied the 
resulting palette to the current screen the CyclePalette command just 
modifies the palette object and can hence be used with the 
DisplayBitmap command in the new Display library.


@ENDNODE CyclePalette

@NODE FadePalette "PALETTELIB"

@{fg shine}Statement: FadePalette@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : FadePalette SrcPalette#,DestPalette#,Brightness.q

FadePalette multiplies all colours in a Palette by the Brightness 
argument and places the result in the DestPalette.


@ENDNODE FadePalette

@NODE InitPalette "PALETTELIB"

@{fg shine}Statement: InitPalette@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : InitPalette Palette#,NumColors

InitPalette simply initialises a palette object to hold NumColors. All 
colors will be set to black.


@ENDNODE InitPalette

@NODE PaletteRange "PALETTELIB"

@{fg shine}Statement: PaletteRange@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : PaletteRange Palette#,StartCol,EndCol,r0,g0,b0,r1,g1,b1

PaletteRange creates a spread of colors within a palette. Similar to 
DPaint's spread function PaletteRange takes a start and end colour and 
creates the color tweens between them.


@ENDNODE PaletteRange

@NODE DuplicatePalette "PALETTELIB"

@{fg shine}Statement: DuplicatePalette@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : DuplicatePalette SrcPalette#,DestPalette#



@ENDNODE DuplicatePalette

@NODE DecodePalette "PALETTELIB"

@{fg shine}Statement: DecodePalette@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : DecodePalette Palette#,MemoryLocation[,Palette Offset]

DecodePalette allows the programmer to unpack included iff palette 
information to Blitz2 palette objects.
@ENDNODE DecodePalette

@NODE MAIN "PALETTELIB"

.-----------------------------------------------------------------------------.
|                                 @{b}PALETTELIB@{ub}                                  |
`-----------------------------------------------------------------------------'

                             @{"     Overview     " link OVERVIEW}

                               Command Index                                

           @{" AGABlue          " link AGABlue}                @{" AGAGreen         " link AGAGreen}
           @{" AGAPalRGB        " link AGAPalRGB}                @{" AGARed           " link AGARed}
           @{" AGARGB           " link AGARGB}                @{" Bert             " link Bert}
           @{" BigBird          " link BigBird}                @{" Blue             " link Blue}
           @{" Cycle            " link Cycle}                @{" CyclePalette     " link CyclePalette}
           @{" DecodePalette    " link DecodePalette}                @{" DuplicatePalette " link DuplicatePalette}
           @{" Ernie            " link Ernie}                @{" FadePalette      " link FadePalette}
           @{" Green            " link Green}                @{" InitPalette      " link InitPalette}
           @{" LoadPalette      " link LoadPalette}                @{" NewPaletteMode   " link NewPaletteMode}
           @{" Palette          " link Palette}                @{" PaletteRange     " link PaletteRange}
           @{" PalRGB           " link PalRGB}                @{" Red              " link Red}
           @{" RGB              " link RGB}                @{" SetCycle         " link SetCycle}
           @{" ShowPalette      " link ShowPalette}                @{" StopCycle        " link StopCycle}
@ENDNODE MAIN

