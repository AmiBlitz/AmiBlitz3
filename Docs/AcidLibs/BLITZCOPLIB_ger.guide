@DATABASE BLITZCOPLIB
@Author (Translator) Blackbird
@$VER: BLITZCOPLIB V1.1 (27.01.2007)- Updated by mrodfr.
@NODE OVERVIEW "Überblick zu BLITZCOPLIB"

                                  @{b}@{u}Überblick@{ub}@{uu}


                          Eine Acid Software Library

                         Konvertiert nach AmigaGuide von

                            Red When Excited Ltd

                 Verwendet mit der Erlaubnis von Acid Software

          Bearbeitet und fehlerbereinigt von Toby Zuijdveld 27/02/1999.
                       mailto:hotcakes\@abacus.net.au

     Deutsche Übersetzung von Margit Möring, Marco Möring und Franz Schlick.
          Bestandteil der deutschsprachigen Amiblitz Supportpage Amiforce.
                            @{b}@{u}http://www.amiforce.de@{ub}@{uu} 



@ENDNODE OVERVIEW

@NODE Slice "BLITZCOPLIB"

@{fg shine}Statement: Slice@{fg text}
--------------------------------------------------------------------------------
Modes  : Amiga/Blitz
Syntax : Slice [Slice#,Y,Flags]|[Slice#,Y,Width,Hite,Flgs,Bitplns,Sprts,Colrs,Fscrnw,Bscrnw]

Slice Slice#,Y,Width,Height,Flags,BitPlanes,Sprites,Colours,Width1,Width2

Das Slice-Kommando wird benutzt um ein BLITZ2 SLICE OBJEKT zu erzeugen.
SLICES werden in erster Linie im BLITZ-MODE benutzt, sie erlauben ihnen
gewöhnliche Bildschirme zu erzeugen. 

In beiden Formen des SLICE Kommandos spezifiziert der Y Parameter
die "abwärts" Pixelposition von oben des SLICE.
Ein Y Wert von 44 wird den SLICE oben auf dem Bildschirm positionieren.
 
In der ersten Form des SLICE Kommandos, bezieht sich FLAGS zu der Nummer  
aus BITPLANES in jeder BITMAP (BITMAPTIEFE) die im SLICE angezeigt werden.
Diese Form des SLICE Kommandos wird einen normalen LO-RES SLICE erzeugen,
dies wird gewechselt zu einem HI-RES SLICE bei einer Angabe von 8 im FLAGS
Parameter. 

Beispiele: 
Ein FLAG-WERT von 4 erzeugt ein LO-RES SLICE mit 4 BITPLANES (16 Farben) 
Ein FLAG-WERT von 10 erzeugt ein HI-RES SLICE mit 2 BITPLANES (4 Fraben)

Die Breite eines SLICE für einen LO-RES SLICE ist 320 Pixel oder 640 Pixel für
einen HI-RES SLICE 
Die Höhe eines SLICE für einen NTSC-AMIGA ist 200 Pixel, oder 256 Pixel für einen 
PAL AMIGA.

Die zweite Form des SLICE Kommandos ist etwas mehr vielseitiger,
obwohl auch ein wenig complexer.

Breite und Höhe ermöglicht ihnen einen speziellen Wert für die 
SLICE Dimensionierung zu benutzen. Diese Parameter sind in Pixeln
anzugeben.

BITPLANES beziehen sich auf die Tiefe aus jeder BITMAP die sie in dem SLICE 
darstellen wollen.

SPRITES bezieht sich auf wie viele Kanäle in diesem SLICE verfügbar sein sollen. 
Jeder SLICE kann bis zu acht SPRITE Kanäle besitzen, und erlaubt SPRITES zu
"vervielfachen".  Dies ist ein Weg um das 'eight sprite limit' des AMigas zu überwinden. 
Es wird empfholen das der erste SLICE mit allen acht Kanälen erzeugt wird,
dies verhindert ein Sprite-flackern bei unbenutzten Sprites.

COLOURS bezieht sich  auf wieviele Farbpaletteneinträge verfügbar sein sollen in 
diesen SLICE. Dieser Wert sollte nicht größer als 32 sein.

WIDTH1 und WIDTH2 spezifiziert die Breite in Pixel jeder BITMAP die angezeigt 
werden soll in diesem SLICE. Wenn ein SLICE als DUAL-PLAYFIELD SLICE definiert 
wurde, bezieht sich Width1 zu der Breite der "Vordergrund" Bitmap, und Width2 
bezieht sich zu der Breite der "Hintergrund" Bitmap.  Wenn ein SLICE nicht zu einem 
DUAL-PLAYFIELD SLICE gesetzt wurde, sollten beide Width1 und Width2 auf den selben 
Wert gesetzt werden. Dieser Parameter erlaubt ihnen breitere Bitmaps als der SLICE 
selbst ist anzuzeigen.

Der FLAGS Parameter ist der letzte aber der complexeste. 
FLAGS erlaubt ihnen  die Kontrolle  über viele Aspekte des SLICE, 
und welchen Effekt der SLICE hat. Hier sind einige Beispiele für FLAGS:

Flags          Effekt                           Max BitPlanes

$fff8          Ein standard lo-res slice          6
$fff9          Ein standard hi-res slice          4
$fffa          Ein lo-res, dual-playfield slice   6
$fffb          Ein hi-res, dual-playfiled slice   4
$fffc          EIn HAM slice                      nur 6 

WARNUNG ! das nächste BIT ist definitiv nur für  Fortgeschrittene User! 
Das Wissen über das nun folgende ist NICHT notwendig um einen Guten SLICE 
zu erzeugen.

FLAGS ist eine Kollektion von individualen bit-flags. Die bit-flags 
kontrollieren die SLICE 'copper list'. Hier ist eine Liste der 
bit nummern und ihrer Effekte:

Bit #  Effect
 
15     erzeugt copper MOVE BPLCON0
14     erzeugt copper MOVE BPLCON1
13     erzeugt copper MOVE BPLCON2
12     erzeugt copper MOVE DIWSTRT and MOVE DIWSTOP
10     erzeugt copper MOVE DDFSTRT and MOVE DDFSTOP
8       erzeugt copper MOVE BPL1MOD
7       erzeugt copper MOVE BPL2MOD
4       erzeugt 2 blanke linien oben im Slice
3       Erlaubt weiches horizontales Scrolling 
2      HAM slice
1      Dual-playfield slice
0      Hi-res slice - standart ist lo-res

Klevere Auswahl aus diesen bits erlaubt ihnen einen "minimalen" SLICE zu erzeugen
der sehr wenig spezifische System-Register benötigt.

Der BITPLANES Parameter may also be modified to specify 'odd only' or 'even 
only' bitplanes. Dies wird benutzt wenn dual-playfield Bildschirme genutzt werden, 
es ermöglicht ihnen einen Bildschirm-SLICE mittlerer Auflösung zu erstellen der eine
andere Vorder- oder Hintergrundbitmap zeigt, aber die jeweils andere Bitmap intakt 
läßt. Um nur eine Vordergrundbitmap zu spezifizieren, genügt es das bit 15 des BitPlanes 
Parameter zu setzen. Um eine Hintergrundbitmap zu spezifizieren setzen sie das bit 14 
des BitPlanes Parameters.
@ENDNODE Slice

@NODE CopLoc "BLITZCOPLIB"

@{fg shine}Statement: CopLoc@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : CopLoc 

CopLoc gibt die Speicheradresse  der Blitzmodecopperliste zurück. Alle 
Slices, ColSplits, und CustomCops die ausgeführt werden werden in eine 
copper list geschrieben, die adresse die gefunden wurde benutzt die CopLoc 
funktion.
@ENDNODE CopLoc

@NODE CustomCop "BLITZCOPLIB"

@{fg shine}Statement: CustomCop@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : CustomCop Copins$,Y

CustomCop erlaubt es geübten Programmierern ihre eigenen copper 
instruktionen auf einer spezifizierten Position auf den Bildschirm anzuzeigen. 
Copins$ bezieht sich auf einen String aus Zeichen equivalent zu einer Reihe aus copper 
instruktionen. Y bezieht sich zu einer Position abwärts des Bildschirms.
@ENDNODE CustomCop

@NODE Show "BLITZCOPLIB"

@{fg shine}Statement: Show@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Show Bitmap#[,X,Y]

Show wird genutzt um eine Bitmap in dem zur Zeit benutzten SLICE anzuzeigen. 
Dieser SLICE sollte kein dual-playfield-slice sein. Optionale X und Y 
Parameter wird benutzt um die Position der Bitmap auf einen anderen Punkt als 
den obersten linken zu setzen. Dies wird normalerweise nur gemacht wenn eine 
Bitmap größer als die Breite oder/und Höhe des SLICE gesetzt wurde.
@ENDNODE Show

@NODE ShowF "BLITZCOPLIB"

@{fg shine}Statement: ShowF@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : ShowF Bitmap#[,X,Y[,ShowB X]]

ShowF wird benutzt um eine Bitmap im benutzten SLICE als Vordergrund darzustellen.
Der SLICE muss mit den angemessenen Flags Parametern für einen dual-playfield-Bildschirm 
erzeugt werden.

Die optionalen X und Y Parameter werden benutzt um die Position der Bitmap auf einen anderen 
Punkt als den obersten linken zu setzen. Bei Nichtangabe der X und Y Parameter liefert X und Y 
Werte von 0.

Der optionale ShowB X Parameter wird nur in bestimmten Situationen gebraucht wo ein 
dual-playfield-slice erzeugt wurde der nur EINE Vordergrundbitmap angezeigt wird. 
In diesem Fall sollte der X-offset der Hintergrundbitmap ShowB x Parameter spezifiziert werden.
@ENDNODE ShowF

@NODE ShowB "BLITZCOPLIB"

@{fg shine}Statement: ShowB@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : ShowB Bitmap#[,X,Y[,ShowF X]]

ShowB wird benutzt um eine Hintergrundbitmap im benutzten SLICE darzustellen.
Der SLICE muss mit den angemessenen Flags Parametern für einen dual-playfield-Bildschirm 
erzeugt werden. 

Die optionalen X und Y Parameter werden benutzt um die Position der Bitmap auf einen anderen 
Punkt als den obersten linken zu setzen. Bei Nichtangabe der X und Y Parameter liefert X und Y 
Werte von 0.

Der optionale ShowF X Parameter wird nur in bestimmten Situationen gebraucht wo ein 
dual-playfield-slice erzeugt wurde der nur EINE Vordergrundbitmap angezeigt wird. 
In diesem Fall sollte der X-offset der Vordergrundbitmap ShowF x Parameter spezifiziert werden.
@ENDNODE ShowB

@NODE CopLen "BLITZCOPLIB"

@{fg shine}Statement: CopLen@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : CopLen 

CopLen gibt die länge in bytes der Blitzmodecopperlist zurück. Alle 
Slices, ColSplits, und CustomCops die ausgeführt werden, werden in eine 
copper list geschrieben, die länge die gefunden wurde benutzt die CopLen 
funktion.
@ENDNODE CopLen

@NODE ColSplit "BLITZCOPLIB"

@{fg shine}Statement: ColSplit@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : ColSplit Colour Register,Red,Green,Blue,Y

ColSplit erlaubt ihnen jede Farbpaletteregister auf einer Position relativ zum ersten verwendeten 
SLICE zu wechseln . Dies erlaubt ihnen Die Farbregister auf verschiedenen Positionen zu reduzieren 
um verschiedene Farben auf dem Bildschirm darzustellen.

Y spezifiziert einen vertikalen offset von oben des aktuell genutzten SLICE. 
@ENDNODE ColSplit

@NODE ShowBlitz "BLITZCOPLIB"

@{fg shine}Statement: ShowBlitz@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : ShowBlitz 

ShowBlitz  zeigt den zuvor erzeugten SLICE wieder an. Dies ist nötig wenn sie in den Amigamodus 
geschalten hatten und in den Blitzmodus zurückkehren möchten. Der SLICE bleibt dabei intakt.
@ENDNODE ShowBlitz

@NODE FreeSlices "BLITZCOPLIB"

@{fg shine}Statement: FreeSlices@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : FreeSlices 

FREESLICE wird benutzt um alle SLICES die benutzt werden zu löschen.
@ENDNODE FreeSlices

@NODE DisplayOff "BLITZCOPLIB"

@{fg shine}Statement: DisplayOff@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : DisplayOff 

Schaltet den Bildschirm aus.
@ENDNODE DisplayOff

@NODE DisplayOn "BLITZCOPLIB"

@{fg shine}Statement: DisplayOn@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : DisplayOn 

Schaltet den Bildschirm an.
@ENDNODE DisplayOn

@NODE SetBPLCON0 "BLITZCOPLIB"

@{fg shine}Statement: SetBPLCON0@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SetBPLCON0 BPLCON0 Default

bit#1-ERSY externer sync (für Genlock )
bit#2-LACE interlace modus
bit#3-LPEN light pen angeschalten
@ENDNODE SetBPLCON0

@NODE SetBLWait "BLITZCOPLIB"

@{fg shine}Statement: SetBLWait@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SetBLWait Wait move for line 256 (eg:$ffe1fffe
@ENDNODE SetBLWait

@NODE MAIN "BLITZCOPLIB"

.-----------------------------------------------------------------------------.
|                                @{b}BLITZCOPLIB@{ub}                                  |
`-----------------------------------------------------------------------------'

                                   @{"Überblick" link OVERVIEW}

                                 Command Index                                

                 @{" ColSplit   " link ColSplit}                @{" CopLen     " link CopLen}
                 @{" CopLoc     " link CopLoc}                @{" CustomCop  " link CustomCop}
                 @{" DisplayOff " link DisplayOff}                @{" DisplayOn  " link DisplayOn}
                 @{" FreeSlices " link FreeSlices}                @{" SetBLWait  " link SetBLWait}
                 @{" SetBPLCON0 " link SetBPLCON0}                @{" Show       " link Show}
                 @{" ShowB      " link ShowB}                @{" ShowBlitz  " link ShowBlitz}
                 @{" ShowF      " link ShowF}                @{" Slice      " link Slice}
@ENDNODE MAIN
