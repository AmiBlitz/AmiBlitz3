@DATABASE MEDLIB
@Author Conversion program
@$VER: MEDLIB V1.1 (27.01.2007)- Updated by mrodfr.
@NODE OVERVIEW "Overview of MEDLIB"

                                  @{b}@{u}Overview@{ub}@{uu}


                          An Acid Software Library

                         Converted to AmigaGuide by

                            Red When Excited Ltd

                 Used with the permission of Acid Software

          Edited, fixed and cleaned by Toby Zuijdveld 27/02/1999.
                       mailto:hotcakes\@abacus.net.au



@ENDNODE OVERVIEW

@NODE LoadMedModule "MEDLIB"

@{fg shine}Statement: LoadMedModule@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : LoadMedModule MedModule#,Name

The LoadMedModule command loads any version 4 channel Octamed module. 
The following routines support upto and including version 3 of the 
Amiganut's Med standard.

The number of MedModules loaded in memory at one time is only limited 
by the MedModules maximum set in the Blitz2 Options requester. Like any 
Blitz commands that access files LoadMedModule can only be used in 
AmigaMode.


@ENDNODE LoadMedModule

@NODE StartMedModule "MEDLIB"

@{fg shine}Statement: StartMedModule@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : StartMedModule MedModule#

StartMedModule is responsible for initialising the module including 
linking after it is loaded from disk using the LoadMedModule command. 
It can also be used to restart a module from the beginning.


@ENDNODE StartMedModule

@NODE PlayMed "MEDLIB"

@{fg shine}Statement: PlayMed@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : PlayMed 

PlayMed is responsible for playing the current MedModule, it must be 
called every 50th of a second either on an interupt (#5) or after a 
VWait in a program loop.


@ENDNODE PlayMed

@NODE StopMed "MEDLIB"

@{fg shine}Statement: StopMed@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : StopMed 

StopMed will cause any med module to stop playing. This not only means 
that PlayMed will have no affect until the next StartMedModule but 
silences the audio channels so they are not left ringing as is the 
effect when PlayMed is not called every vertical blank.


@ENDNODE StopMed

@NODE JumpMed "MEDLIB"

@{fg shine}Statement: JumpMed@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : JumpMed Pattern#

JumpMed will change the pattern being played in the current 
module.


@ENDNODE JumpMed

@NODE SetMedVolume "MEDLIB"

@{fg shine}Statement: SetMedVolume@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SetMedVolume Volume

SetMedVolume changes the overall volume that the Med Library plays the 
module, all the audio channels are affected. This is most useful for 
fading out music by slowly decreasing the volume from 64 to 0.


@ENDNODE SetMedVolume

@NODE GetMedVolume "MEDLIB"

@{fg shine}Statement: GetMedVolume@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : GetMedVolume Channel

GetMedVolume returns the current volume setting of the specified audio 
channel. This is useful for graphic effects that you may wish to sync 
to certain channels of the music playing.


@ENDNODE GetMedVolume

@NODE GetMedNote "MEDLIB"

@{fg shine}Statement: GetMedNote@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : GetMedNote Channel

GetMedNote returns the current note playing from the specified channel. 
As with GetMedVolume this is useful for producing graphics effects synced 
to the music the Med Library is playing.


@ENDNODE GetMedNote

@NODE GetMedInstr "MEDLIB"

@{fg shine}Statement: GetMedInstr@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : GetMedInstr Channel

GetMedInstr returns the current instrument playing through the 
specified audio channel.


@ENDNODE GetMedInstr

@NODE SetMedMask "MEDLIB"

@{fg shine}Statement: SetMedMask@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SetMedMask Channel Mask

SetMedMask allows the user to mask out audio channels needed by sound 
effects stopping the Med Library using them.


@ENDNODE SetMedMask

@NODE DecodeMedModule "MEDLIB"

@{fg shine}Statement: DecodeMedModule@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : DecodeMedModule MedModule#,MemoryLocation

DecodeMedModule replaces the cludgemedmodule, as med modules are not 
packed but used raw, DecodeMedModule simply checks to see the 
memorylocation passed is in ChipMem (if not it copies the data to chip) 
and points the Blitz2 MedModule object to that memory.


@ENDNODE DecodeMedModule

@NODE MedModule "MEDLIB"

@{fg shine}Statement: MedModule@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : MedModule 
@ENDNODE MedModule

@NODE MAIN "MEDLIB"

.-----------------------------------------------------------------------------.
|                                   @{b}MEDLIB@{ub}                                    |
`-----------------------------------------------------------------------------'

                             @{"     Overview     " link OVERVIEW}

                               Command Index                                

           @{" DecodeMedModule  " link DecodeMedModule}                @{" GetMedInstr      " link GetMedInstr}
           @{" GetMedNote       " link GetMedNote}                @{" GetMedVolume     " link GetMedVolume}
           @{" JumpMed          " link JumpMed}                @{" LoadMedModule    " link LoadMedModule}
           @{" MedModule        " link MedModule}                @{" PlayMed          " link PlayMed}
           @{" SetMedMask       " link SetMedMask}                @{" SetMedVolume     " link SetMedVolume}
           @{" StartMedModule   " link StartMedModule}                @{" StopMed          " link StopMed}
@ENDNODE MAIN

