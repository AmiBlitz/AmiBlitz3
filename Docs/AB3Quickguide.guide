@DATABASE "Command Help"
@WORDWRAP
@NODE MAIN "quickguide"

@{fg shine}****************** PED Shortcuts *******************************@{fg text}

  @{fg shine}@{b}!!! Important Shortcuts based on english Keymap so may not all work !!!@{ub}@{fg text}


<TAB>                         in all browser windows make sourcewindow active
<ESC>                         closes any active helpwindow

<ALT> + <CURSOR UP>           move history up
<ALT> + <CURSOR DOWN>         move history down

<ALT> + <CURSOR RIGHT>        Jump to label/func
<ALT> + <CURSOR LEFT>         Back from Label/func
<ALT> + Left Mousebutton      Jump to label/func
<ALT> + Middle Mousebutton    Back from Label/func

<ALT> + click on a filename   save and compile and run (see above)
<CTRL> + click on filename    save and create exe(save both if you click on different)

<CTRL> + <E>                  insert 'end if '
<CTRL> + <F>                  insert a 'Function' skeleton
<CTRL> + <N>                  insert a 'NewType' skeleton
<CTRL> + <S>                  insert a 'Statement' skeleton

<CTRL> + <X>                  CUT same as <AMIGA> + <X>
<CTRL> + <C>                  COPY vertical, all select lines only copyed at the select column
<CTRL> + <V>                  PASTE vertical, all lines pasted at the cursor culumn

<CTRL> + <I>                  Switch Intellisens for Commands 'on/off' if Intellisens is enabled

<CTRL> + <U>                  undo current line

<CTRL> + <CURSOR RIGHT>       TAB marked block
<CTRL> + <CURSOR LEFT>        un-TAB marked block

<CTRL> + <CURSOR UP>          Jump to first line
<CTRL> + <CURSOR DOWN>        Jump to last line

<HELP> + <SHIFT>              opens guide/autodoc of instruction under cursor
<HELP> + <CTRL>               opens parameter diagnostic for actual function
<HELP> on any function        displays correct syntax in screens titlebar
<HELP> on '\\'                 opens window 'type browser' and shows newtype information
<HELP> on 'EndIf'             shows corresponding IF-Blockheader

<L-AMIGA> + <A>               Jump to position in source code where text was last added
<L-AMIGA> + <1>-<3>           Jump to previously stored bookmark
<L-AMIGA> + <SHIFT> + <1>-<3> Store a bookmark for this line

<L-AMIGA> + <F4>-<F6>         save winconfig
<F4> - <F6>                   load winconfig (F4 also startconfig)
<F7>                          window autolayout variant #1
<F8>                          window autolayout variant #2

<F9>                          goto previous document
<F10>                         goto next document

@{fg shine}****** AB3 to BB2 language extensions ******************************@{fg text}
@{b}Compiler constants and directives:@{ub}
Note optimize minimum 4 must be set for following:
#__include is -1 when this file is include 0 when this is standalone
#__debug   is -1 if this is a debug build 0 when no debug build

CNIF @#constant=0
  execute here if the constant is not defined
CEND

@{b}buildin string constants:@{ub}
\\__VER_MAJOR                 insert major version code (if set in project settings)
\\__VER_MINOR                 insert minor version code
\\__VER_PATCH                 insert patch number
\\__VER_BUILD                 insert build number

\\__DATE__                    insert date of compilation (english format)
\\__DATE_GER__                insert date of compilation (german format)
\\__THIS_FUNCTION             insert name of current statement or function
\\__THIS_INCLUDE              insert name of current include
\\__CODELINE                  insert current source line

\\n                           insert carriage return
\\R05*                        insert repeatation of "*" 5 times


@{b}Fast string comparision for string upto 4 characters:@{ub}
if a.l=\@"char1" ....  (a.w=\@"ab" a.b=\@"b")  to compare 4(2/1) char strings fast.

@{b}Merging Lines:@{ub}
functioncall {tag1,value1,\@\@     ; use \@\@ to merge lines
              tag2,value2}

@{b}Using "Escape Characters" in strings.@{ub}
\\n     carriage return
\\22    A 2 char hexcode that is added as a char in string (22 = ")
\R09a   print 09 repeatet a. Note that the repeat must always 2 digits

@{b}Fast calling of functions:@{ub}
Function FAST testfunc{var1,var2,\@var3,\@var4}

Functions can be called upto 10-20* faster.
Dont works if you have strings or newtypes in functions.

Also note, that same as in C, local vars are not set to 0 automatically. Use
this carefully and init all your vars. A speed boost is only noticable, if your functions is
called more than 10 000 times/sec. On functions that are called not frequently
its not needed.

@{b}Optional parameter handling for Functions & Statements@{ub}
Functions and Statements can have variable parameters.
The "\@" before variables indicates these (\@var3,\@var4) are optional:

Function testfunc{var1,var2,\@var3,\@var4}
End Function

If var3 = -1 then this par is not set do default

@{b}Redimensionation for Arrays@{ub}
Dim KEEP test(20)

This change the dim but hold old values.Note that you only can resize the last
dimension of a array

Dim List test(0)

Indicate it as a dynamic linked list,that can grow as much mem is available
If Getd0=0 show that there is no memory to increase the list

@{b}Support for FPU Datatypes@{ub}
AB2 supports FPU Datatypes when FPU optimizer (bit 1) is on
.d = FPU 64 bit
.f = FPU 32 bit

Note that data from ffp format to FPU format must convert by code
@ENDNODE MAIN

