@database 683da1c0-0
@master NewFDConvert.guide
@$VER: 1.0
@author "James L Boyd"
@(c) "1998 Public Domain"
@remark Created with Heddley v1.1 (c) Edd Dumbill 1994

@node "Main" "New FD Convert  (JAN 1999)"


    @{b}@{fg shine}New@{fg text}FDConvert@{ub}

    @{" What is it? " link "wotsit" 0}  What this program does...

    @{" Usage       " link "usage" 0}  How to use it...

    @{" Contact     " link "contact" 0}  Who made it...
@endnode

@node "wotsit" "What is it?"

  @{b}@{fg shine}New@{fg text}FDConvert@{ub}

  AB2FDConvert is the program supplied with BlitzBasic 2
  and Amiblitz2  which converts 3rd-party library .fd files
  into Blitz format.

  This is just a quick hack-job to make FDConvert a lot
  friendlier to use, by adding a couple of file requesters...

  I've tried not to use any commands which aren't in the manual,
  so it should still work on WB1.3 (if it ever did!)

 -  Additions by Curt Esser:

  @{fg shine}Scans all your Blitzlib: subdirectories and gives you a list
  of available library numbers to choose from@{fg text}

 * NOTE: it is set for the standard arraingement:

     Blitzlibs:
  
        Amigalibs/
        Otherlibs/
        Userlibs/
        blitz2:userlibs/beta

    If you have a different setup, you'll need to modify the source

  

  @{fg shine}Can run your makedeflibs (or other) program for you@{fg text}
  
  See the @{"ToolTypes" link "ToolTypes" 0} section for information on how to set this up.




@endnode

@node "usage" "Usage"

  @{b}Usage@{ub}

  Just run it from WB or CLI (no parameters any more, otherwise
  there's no point ;)

  You'll be asked for the .fd file you want to convert, followed
  by another requester to get the name of the library you're
  converting.

  @{b}Example@{ub}

  For FDInfo.library,you'd unpack the fidlib80.lha archive
  to RAM:,install the FDInfo.library in your libs drawer,
  and run NewFDConvert.

  You'd choose "RAM:FileID_Library/include/fd/FileID_lib.fd"
  in the first requester,then "LIBS:FileID.library" in the
  second requester (this actually just gets the name for the
  new Blitz library,so you can really select any library and
  it'll work,but you don't really want your FileID conversion to
  be called PowerPacker.library1,do you? ;)

  If there is already a Blitz library with the same name, you will
  be given the option to overwrite it, or to cancel the conversion.

  If you choose to overwrite the existing library, the new library
  will automatically use the same library number, to prevent any
  tokenization problems with older Blitz sources you may have.

  Now you'll see a requester listing all free library numbers, with
  one selected as a default.  You can just click OK to use the
  suggested library number, or enter a different number if you like.

  The program will refuse any number that clashes with an existing
  Blitz library number, and ask you to enter another number.

  Now the new Blitz library will be created and saved.

  You will get a list of the converted commands in the output
  window.

  You will need to restart Amiblitz
  This is possible because your convertet libs are in Blitz2:userlibs/beta
  always load on AB2 BB2 startup so you need not generate the deflibs file

  If you dont like this method you can of course use the other fdconverter

  Finally, you will get a requester with 2 options:

  Continue    -  convert another library
  Quit        -  well, you get it...

  That's it  -  have fun...
@endnode

@node "contact" "Contact"

  @{b}Contact@{ub}

  This program was written by James L Boyd :

  @{b}@{i}jamesboyd@velvety.demon.co.uk@{ub}@{ui}

 
  v1.1 additions (tooltypes and library number scanning)
  by Curt Esser

  @{b}@{i}camge@ix.netcom.com@{ub}@{ui}

  Yes, James knows I did this stuff - I didn't steal his program  ;)
@endnode

@node "ToolTypes" "ToolType Options:"

 There are some tooltypes on the program's icon that you can set:

 * FD_PATH=Blitz2:    (default)  

   Change this to show the location where you keep your .fd files 
   This will be the initial directory used by the ASL file requester.

 
 *  There are 3 tooltypes to set the middle button on the "Exit"
    requester to run an outside program of your choice:
    
    The tooltypes are by default set to:
    
    COMMAND=MakeDefLibs                 name of the command
    PATH=C:                             full path to the command
    PARAM=>CON:0/10//180/MakeDefLibs    optional parameters

  This setup (assuming you have MakeDefLibs in C:) will add a button
  marked "MakeDefLibs" to the Exit requester.

  Clicking the button will run MakeDefLibs in a console window.


  If you'd rather run Blitz2:Libman, you would change these to:

    COMMAND=LibMan
    PATH=Blitz2:
    PARAM=

  Just make sure to specify the FULL path to the command...



  If you'd rather not have the middle button at all:

    COMMAND=
    PATH=
    PARAM=

  - or just delete all these tooltypes...
@endnode

