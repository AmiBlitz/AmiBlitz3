@DATABASE RIDOSLibV2.6
@Author Conversion program
@$VER: RIDOSLIB V2.60 (27.01.2007)- Updated by mrodfr.
@NODE OVERVIEW "Overview of RI DOS Lib V2.6"

                                  @{b}@{u}Overview@{ub}@{uu}

This library has been written because the RIMiscLib library has reached
the point where any extra command additions would make the library size
(hence any compiled programs which use the library) too big for comfort.

All commands in this library are aimed at providing easy access to DOS
related functions (though not simply direct DOS calls).

@ENDNODE OVERVIEW

@NODE AddNotify "RI DOS Lib V2.5"

@{fg shine}Statement/Function: AddNotify@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : [success=]AddNotify(notify#,filespec$)

  This tells DOS to keep an eye on <filespec$> (which may either be a
filename or directory name) for alterations.

The value notify# is the slot number to occupy in the librarys internal list. 

NOTE: For Version 1.00, the maximum number of Notification requests is 64
      and NO CHECKING is made to ensure slots are free.

@ENDNODE AddNotify

@NODE RemNotify "RI DOS Lib V2.5"

@{fg shine}Statement: RemNotify@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : RemNotify notify#

  This is to remove a notification request which was setup with @{"AddNotify" link AddNotify}.

notify# should be the value returned by @{"AddNotify" link AddNotify}.

@ENDNODE RemNotify

@NODE CheckNotify "RI DOS Lib V2.5"

@{fg shine}Function: CheckNotify@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : notify#=CheckNotify

  This command checks to see if any notification messages have been posted
by DOS. If so, this command returns the notification number (as returned
by @{"AddNotify" link AddNotify}).

@ENDNODE CheckNotify

@NODE WaitNotify "RI DOS Lib V2.5"

@{fg shine}Function: WaitNotify@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : notify#=WaitNotify

  This command is identical to @{"CheckNotify" link CheckNotify} except that
it WAITS for a notifications message to be received before returning.

@ENDNODE WaitNotify

@NODE GetDeviceList "RI DOS Lib V2.5"

@{fg shine}Statement: GetDeviceList@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : success=GetDeviceList(flags)

  This command will attempt to lock the DOS objects list ready for 
traversing.

Note: whilst this is locked, no programs may use the DOS object list.

The FLAGS parameter is a bit pattern showing which information you want
to extract. BIT 0 should always be set. NEVER set bit 1.

Valid flag values :

 DEVICES		= %100
 VOLUMES		= %1000
 ASSIGNS		= %10000

Add combinations together to get more than 1 type of entry.

This command optionally returns a success value (which you should check for).

See Also:

        NextDevice
        FreeDeviceList

@ENDNODE GetDeviceList

@NODE NextDevice "RI DOS Lib V2.5"

@{fg shine}Statement: NextDevice@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : devicename$=NextDevice

  This command will move to the next entry in the DOS object list and returns
a null-terminated string of its name. Note that the FLAGS parameter used in
@{"GetDeviceList" link GetDeviceList} determines the type of information it returns. A ':' is NOT
appended to the name.

See the @{"Examples" link Examples} for example usage of these commands.

See Also:

        @{"GetDeviceList" link GetDeviceList}
        @{"FreeDeviceList" link FreeDeviceList}

@ENDNODE NextDevice

@NODE FreeDeviceList "RI DOS Lib V2.5"

@{fg shine}Statement: FreeDeviceList@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : FreeDeviceList

  This command will free the DOS objects list which was previously locked
with a call to @{"GetDeviceList" link GetDeviceList}. You should call this command as soon as
you are finished with the device list.

@ENDNODE FreeDeviceList

@NODE NotifyPort "RI DOS Lib V2.5"

@{fg shine}Function: NotifyPort@{fg text}
-----------------------------------------------------------------------------
Modes  : Any
Syntax : msgport.l=NotifyPort

  This command will return the address of the message port associated with
the file notifications (for use with @{"AddWaitEvent" link /AcidLibs/WindowsLib.GUIDE/AddWaitEvent} and @{"PortSigBit" link RIMiscLib.Guide/PortSigBit})

@ENDNODE NotifyPort

@NODE GetFileName "RI DOS Lib V2.5"

@{fg shine}Function: GetFileName@{fg text}
-----------------------------------------------------------------------------
Modes  : Any
Syntax : filename$=GetFileName(filespec$)

  This command will return the FILE name component of the given filespec.

e.g. 

  GetFileName("Work:Test/test.txt") will return 'test.txt'

@ENDNODE GetFileName

@NODE GetPathName "RI DOS Lib V2.5"

@{fg shine}Function: GetPathName@{fg text}
----------------------------------------------------------------------------
Modes  : Any
Syntax : pathname$=GetPathName(filespec$)

  This command will return the PATH name component of the given filespec.

e.g.

  GetPathName("Work:Test/test.txt") will return 'Work:Test/'

@ENDNODE GetPathName

@NODE MAIN "RI DOS Lib V2.5"

.---------------------------------------------------------------------------.
|                              @{b}RI DOS Lib V2.5@{ub}                              |
`---------------------------------------------------------------------------'

                         ©1996 Red When Excited Ltd

        Undocumented commands added by Toby Zuijdveld 02/03/1999
                         mailto: hotcakes\@abacus.net.au

                             @{"     Overview     " link OVERVIEW}

                               Command Index                                

                              @{" AddNotify      " link AddNotify}
                              @{" CheckNotify    " link CheckNotify}
                              @{" FreeDeviceList " link FreeDeviceList}
                              @{" GetDeviceList  " link GetDeviceList}
                              @{" GetFileName    " link GetFileName}
                              @{" GetPathName    " link GetPathName}
                              @{" NextDevice     " link NextDevice}
                              @{" NotifyPort     " link NotifyPort}
                              @{" RemNotify      " link RemNotify}
                              @{" WaitNotify     " link WaitNotify}

                               DeviceEntryType dev=3d0,dir=3d1,vol=3d2,nonblind=3d4

                                @{" Examples " LINK Examples}

@ENDNODE MAIN

@NODE Examples "Example Programs"

                             @{b}@{u}Example Programs@{ub}@{uu}

@{fg shine}EXAMPLE 1@{fg text} - Example usage of the Device List :

	@{" Load Example 1 " system "run >NIL: BLITZ3:Amiblitz3 Blitz3:Docs/UserLibs/Examples/RIDOSLib1.bb"}

@{fg shine}EXAMPLE 2@{fg text} - More complex version of Example 1

	@{" Load Example 2 " system "run >NIL: BLITZ3:Amiblitz3 Blitz3:Docs/UserLibs/Examples/RIDOSLib2.bb"}

@ENDNODE Examples
