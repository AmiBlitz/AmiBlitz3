; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 0
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 5
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
; A general AREXX Example
;

WbToScreen 0
ShowScreen 0

NoCli

portname$="TestPort1"

If FindPort_(portname$) Then End  ; Another program is using the same name!

port.l=RXCreatePort(portname$)
If port=0 Then End                ; If we could not create the AREXX port,
                                  ; we should quit immediately

Execute_ "SYS:REXXC/rx Blitz2:REDHelp/REDBlitzLibs/Examples/RIARexxLib1.rx",0,0


Dim arg$(16)                      ; Max. 16 arguments

Repeat
  ev.l=RXWaitPort


;----------------------------------------------------------------
; This is a routine which pulls all the arguments into different
; elements in the array.
;
; When ARexx scripts send your application some commands,
; you might find your arguments in 16 'slots', or they
; may be all in one slot, but seperated by spaces.
; The InitArgParse and NextArg$ commands are from RIMiscLib
  argc.w=0
  For h=1 To RXNumArgs
    InitArgParse RXGetArg(h)
    For n=0 To 15
      arg$(argc)=NextArg$
      argc+1
    Next n
  Next h
;----------------------------------------------------------------

  cmd$=arg$(0)
  reply$=""

  Select cmd$
    Case "VERSION"
      EZRequest "TestPort1","Version 2.5","Ok"
      reply$="2.5"
    Case "ABOUT"
      EZRequest "About","Written by Red When Excited|Supplied With Blitz Support Suite||An Example AREXX Port Program","Thanks"
    Case "LOAD"
      If arg$(1)="" Then EZRequest "Load","You didnt give me a filename!","Whoops"
      If arg$(1)<>"" Then EZRequest "Load","You asked me to load "+arg$(1),"I know I did"
      reply$="Error Loading"
    Case "SAVE"
      If arg$(1)="" Then EZRequest "Save","You didnt give me a filename!","Whoops"
      If arg$(1)<>"" Then EZRequest "Save","You asked me to save "+arg$(1),"I know I did"
      reply$="Error Saving"
    Case "SHOW"
      EZRequest "BOO!","I'm scared"
      reply$="Hidden"
    Case "HIDE"
      EZRequest "I'll go and hide in the corner!","You Do That"
      reply$="Shown"
    Case "REQUEST"
      If arg$(1)=""
        EZRequest "Request","You didnt tell me|what to ask!","Silly me"
        reply$="Error"
      Else If arg$(2)=""
        reply$=Str$(EZRequest(arg$(1)))
      Else If arg$(3)=""
        reply$=Str$(EZRequest(arg$(1),arg$(2)))
      Else
        reply$=Str$(EZRequest(arg$(1),arg$(2),arg$(3)))
      EndIf:EndIf:EndIf
    Case "QUIT"
      quitflag=EZRequest("Quit","I'll be off now","Goodbye|No Dont!")
    Case "EXIT"
      quitflag=EZRequest("Exit","I'm exiting...","Go on then|I've changed my mind")
  End Select
  RXReplyMsg 0,reply$
Until quitflag
End

