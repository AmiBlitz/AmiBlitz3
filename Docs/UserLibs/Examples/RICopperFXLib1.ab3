; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 5
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
;Filling the screen with 4096 colours using the copper...

;Hardware register addresses, given as offsets from $dff000
;Mainly for use with copperlists

#bltddat        =$000
#dmaconr        =$002
#vposr          =$004
#vhposr         =$006
#dskdatr        =$008
#joy0dat        =$00A
#joy1dat        =$00C
#clxdat         =$00E

#adkconr        =$010
#pot0dat        =$012
#pot1dat        =$014
#potinp         =$016
#serdatr        =$018
#dskbytr        =$01A
#intenar        =$01C
#intreqr        =$01E

#dskpt         =$020
#dsklen        =$024
#dskdat        =$026
#refptr        =$028
#vposw         =$02A
#vhposw        =$02C
#copcon        =$02E
#serdat        =$030
#serper        =$032
#potgo         =$034
#joytest       =$036
#str           =$038
#strvbl        =$03A
#strhor        =$03C
#strlong       =$03E

#bltcon0       =$040
#bltcon1       =$042
#bltafwm       =$044
#bltalwm       =$046
#bltcpt        =$048
#bltbpt        =$04C
#bltapt        =$050
#bltdpt        =$054
#bltsize       =$058
#bltcon0l      =$05B   ; note: byte access only
#bltsizv       =$05C
#bltsizh       =$05E

#bltcmod       =$060
#bltbmod       =$062
#bltamod       =$064
#bltdmod       =$066

#bltcdat       =$070
#bltbdat       =$072
#bltadat       =$074

#deniseid      =$07C
#dsksync       =$07E

#cop1lc        =$080
#cop2lc        =$084
#copjmp1       =$088
#copjmp2       =$08A
#copins        =$08C
#diwstrt       =$08E
#diwstop       =$090
#ddfstrt       =$092
#ddfstop       =$094
#dmacon        =$096
#clxcon        =$098
#intena        =$09A
#intreq        =$09C
#adkcon        =$09E

#aud           =$0A0
#aud0          =$0A0
#aud1          =$0B0
#aud2          =$0C0
#aud3          =$0D0

* AudChannel
#ac_ptr        =$0d0+$0  ; ptr to start of waveform data
#ac_len        =$0d0+$4 ; length of waveform in words
#ac_per        =$0d0+$6 ; sample period
#ac_vol        =$0d0+$8 ; volume
#ac_dat        =$0d0+$A ; sample pair
#ac_SIZEOF     =$0d0+$10

#bplpt         =$0E0

#bplcon0       =$100
#bplcon1       =$102
#bplcon2       =$104
#bplcon3       =$106
#bplmod1       =$108
#bplmod2       =$10A
#bplcon4       =$10C
#clxcon2       =$10E

#bpldat        =$110

#sprpt         =$120

#spr           =$140

* SpriteDef
#sd_pos        =#spr+$00
#sd_ctl        =#spr+$02
#sd_dataa      =#spr+$04
#sd_dataB      =#spr+$06
#sd_SIZEOF     =#spr+$08

#color00       =$180
#color01       =$182
#color02       =$184
#color03       =$186
#color04       =$188
#color05       =$18a
#color06       =$18c
#color07       =$18e
#color08       =$190
#color09       =$192
#color10       =$194
#color11       =$196
#color12       =$198
#color13       =$19a
#color14       =$19c
#color15       =$19e
#color16       =$1a0
#color17       =$1a2
#color18       =$1a4
#color19       =$1a6
#color20       =$1a8
#color21       =$1aa
#color22       =$1ac
#color23       =$1ae
#color24       =$1b0
#color25       =$1b2
#color26       =$1b4
#color27       =$1b6
#color28       =$1b8
#color29       =$1ba
#color30       =$1bc
#color31       =$1be

#htotal        =$1c0
#hsstop        =$1c2
#hbstrt        =$1c4
#hbstop        =$1c6
#vtotal        =$1c8
#vsstop        =$1ca
#vbstrt        =$1cc
#vbstop        =$1ce
#sprhstrt      =$1d0
#sprhstop      =$1d2
#bplhstrt      =$1d4
#bplhstop      =$1d6
#hhposw        =$1d8
#hhposr        =$1da
#beamcon0      =$1dc
#hsstrt        =$1de
#vsstrt        =$1e0
#hcenter       =$1e2
#diwhigh       =$1e4
#fmode         =$1fc
#noop          =$1fe

height=DispHeight
offset=36

InitCopList 0,offset,height,$10004,8,16,20000       ; 7 instructions on 200 lines
BitMap 0,320,256,4

PalRGB 0,1,15,15,15
PalRGB 0,2,0,0,0
DisplayBitMap 0,0
DisplayPalette 0,0

FNSOutput 0,1
FNSShadowPrint 0,160,118,"Red When Excited",%1,1,2

DEFTYPE.w

CopperReset 0,offset,0
x=0
y=offset
For r=0 To 15
  For g=0 To 15
    x=0
    For b=0 To 15
      CopperWait x,y
      CopperMove #color00,(r ASL 8)+(g ASL 4)+b
      x+($9b/16)
    Next b

    y+1
    If y=256 Then CopperCommand $ffe1,$ffee   ; Wait for copper counter wrap
    If y>height+offset Goto endthis         ; End of display - end
  Next g
Next r

endthis:
CopperWait 0,y                                ; Wait for end of display
CopperMove #color00,$000                      ; Clear colour 0
CopperMove #dmacon,$0120                      ; Switch off sprite and bitplane dma

BLITZ
CreateDisplay 0

MouseWait
End



