@Database "EFMUILib.guide"
@Index Index
@Author "Rob Hutchinson & Andreas Håkansson & Erwan Fouret"
@$VER: EFMUILib Guide 2.1 (27.01.2007)- Updated by mrodfr.
@Node MAIN "Welcome to the EFMUILib documents.."

                         ****** ******  ******  **  ** ****** **    ****** *****
                         **     **     ** ** ** **  **   **   **      **   **  **    
                         ****   ****   ** ** ** **  **   **   **      **   *****     
                         **     **     **    ** **  **   **   **      **   **  **
                         ****** **     **    **  ****  ****** ***** ****** *****     

                                        Version 1.5 By Erwan Fouret
                               V1.5 Copyright ©1997/98 By Vivid Imagination
                                 Additional V2.0 Coding by Rob Hutchinson
                                  Copyright ©1999/2000 By Rob Hutchinson

                  =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

                                         @{"  Introduction       " link Introduction      }
                                         @{"  Disclaimer         " link Disclaimer        }
                                         @{"  Using              " link Using             }
                                         @{"  Install            " link Install           }
                                         @{"  FAQ                " link FAQ               }
                                         @{"  Authors            " link Authors           }
                                         @{"  Bugs               " link Bugs              }
                                         @{"  History            " link History           }
                                         @{"  Future             " link Future            }
                                         @{"  About MUI          " link MUI               }
                                         @{"  Vivid Imagination  " link VividImagination  }
                                         @{"  Stack Appender     " link StackAppender     }

                                         @{"  Index              " link Index             }


                 @{"  MUISetMaximumTags          " Link MUISetMaximumTags         }    @{"  MUIApplicationTitle        " Link MUIApplicationTitle       }
                 @{"  MUIApplicationVersion      " Link MUIApplicationVersion     }    @{"  MUIApplicationCopyright    " Link MUIApplicationCopyright   }
                 @{"  MUIApplicationAuthor       " Link MUIApplicationAuthor      }    @{"  MUIApplicationDescription  " Link MUIApplicationDescription }
                 @{"  MUIApplicationBase         " Link MUIApplicationBase        }    @{"  MUIAddApplicationTags      " Link MUIAddApplicationTags     }
                 @{"  MUICreateApplication       " Link MUICreateApplication      }    @{"  MUIRemoveApplication       " Link MUIRemoveApplication      }
                 @{"  MUIApplicationLoc          " Link MUIApplicationLoc         }    @{"  MUIApplicationObj          " Link MUIApplicationObj         }
                 @{"  MUIAddSubWindow            " Link MUIAddSubWindow           }    @{"  MUIFreeObject              " Link MUIFreeObject             }
                 @{"  MUICreateWindow            " Link MUICreateWindow           }    @{"  MUIOpenWindow              " Link MUIOpenWindow             }
                 @{"  MUICloseWindow             " Link MUICloseWindow            }    @{"  MUICreateMenu              " Link MUICreateMenu             }
                 @{"  MUISetMenu                 " Link MUISetMenu                }    @{"  MUIObjLoc                  " Link MUIObjLoc                 }
                 @{"  MUIRequest                 " Link MUIRequest                }    @{"  MUIAddTags                 " Link MUIAddTags                }
                 @{"  MUINewObject               " Link MUINewObject              }    @{"  MUIMakeObject              " Link MUIMakeObject             }
                 @{"  MUIHVSpace                 " Link MUIHVSpace                }    @{"  MUIHSpace                  " Link MUIHSpace                 }
                 @{"  MUIVSpace                  " Link MUIVSpace                 }    @{"  MUIString                  " Link MUIString                 }
                 @{"  MUIKeyString               " Link MUIKeyString              }    @{"  MUICheckMark               " Link MUICheckMark              }
                 @{"  MUIKeyCheckMark            " Link MUIKeyCheckMark           }    @{"  MUISimpleButton            " Link MUISimpleButton           }
                 @{"  MUIKeyButton               " Link MUIKeyButton              }    @{"  MUICycle                   " Link MUICycle                  }
                 @{"  MUIKeyCycle                " Link MUIKeyCycle               }    @{"  MUIRadio                   " Link MUIRadio                  }
                 @{"  MUIKeyRadio                " Link MUIKeyRadio               }    @{"  MUISlider                  " Link MUISlider                 }
                 @{"  MUIKeySlider               " Link MUIKeySlider              }    @{"  MUILabel                   " Link MUILabel                  }
                 @{"  MUINumericButton           " Link MUINumericButton          }    @{"  MUIListHook                " Link MUIListHook               }
                 @{"  MUIList                    " Link MUIList                   }    @{"  MUIChangeList              " Link MUIChangeList             }
                 @{"  MUIListview                " Link MUIListview               }    @{"  MUIPopButton               " Link MUIPopButton              }
                 @{"  MUIImageButton             " Link MUIImageButton            }    @{"  MUIBalanceObject           " Link MUIBalanceObject          }
                 @{"  MUIBitmapObject            " Link MUIBitmapObject           }    @{"  MUIShapeObject             " Link MUIShapeObject            }
                 @{"  MUIChangeBitmap            " Link MUIChangeBitmap           }    @{"  MUIChangeShape             " Link MUIChangeShape            }
                 @{"  MUIAddObjHGroup            " Link MUIAddObjHGroup           }    @{"  MUICreateHGroup            " Link MUICreateHGroup           }
                 @{"  MUIAddObjVGroup            " Link MUIAddObjVGroup           }    @{"  MUICreateVGroup            " Link MUICreateVGroup           }
                 @{"  MUIAddObjPage              " Link MUIAddObjPage             }    @{"  MUICreatePage              " Link MUICreatePage             }
                 @{"  MUIAddObjsHGroup           " Link MUIAddObjsHGroup          }    @{"  MUIAddObjsVGroup           " Link MUIAddObjsVGroup          }
                 @{"  MUIAddObjsPage             " Link MUIAddObjsPage            }    @{"  MUIInsertSingle            " Link MUIInsertSingle           }
                 @{"  MUIRemoveSingle            " Link MUIRemoveSingle           }    @{"  MUIRedrawSingle            " Link MUIRedrawSingle           }
                 @{"  MUIListTitle               " Link MUIListTitle              }    @{"  MUISet                     " Link MUISet                    }
                 @{"  MUIGet                     " Link MUIGet                    }    @{"  MUIRedraw                  " Link MUIRedraw                 }
                 @{"  MUIDoMethod                " Link MUIDoMethod               }    @{"  MUINotify                  " Link MUINotify                 }
                 @{"  MUINotifyApp               " Link MUINotifyApp              }    @{"  MUIEvent                   " Link MUIEvent                  }
                 @{"  MUIWaitEvent               " Link MUIWaitEvent              }    @{"  MUIFindUData               " Link MUIFindUData              }
                 @{"  MUIGetCM                   " Link MUIGetCM                  }    @{"  MUIGetCycle                " Link MUIGetCycle               }
                 @{"  MUIGetString$              " Link MUIGetString              }    @{"  MUISetCM                   " Link MUISetCM                  }
                 @{"  MUISetCycle                " Link MUISetCycle               }    @{"  MUISetString               " Link MUISetString              }

    -[ Version 2 Commands ]--------------------------------------------------------------------

                 @{"  MUINList                   " Link MUINList                  }    @{"  MUICycleChains             " Link MUICycleChains            }
                 @{"  MUINListView               " Link MUINListView              }    @{"  MUIGroupSpacing            " Link MUIGroupSpacing           }
                 @{"  MUINListHook               " Link MUINListHook              }    @{"  MUIGroupHSpacing(V)        " Link MUIGroupHSpacing          }
                 @{"  MUIBetterString            " Link MUIBetterString           }    @{"  MUIText                    " Link MUIText                   }
                 @{"  MUIKeyBetterString         " Link MUIKeyBetterString        }    @{"  MUITextContents            " Link MUITextContents           }
                 @{"  MUICreateHVirtGroup        " Link MUICreateHVirtGroup       }    @{"  MUIShortHelp               " Link MUIShortHelp              }
                 @{"  MUICreateVVirtGroup        " Link MUICreateVVirtGroup       }    @{"  MUIHookToNList             " Link MUIHookToNList            }
                 @{"  MUIBetterBalance           " Link MUIBetterBalance          }    @{"  MUINListEntries            " Link MUINListEntries           }
                 @{"  MUIWeight                  " Link MUIWeight                 }    @{"  MUINListGetActive          " Link MUINListGetActive         }
                 @{"  MUIVertWeight              " Link MUIVertWeight             }    @{"  MUINListSetActive          " Link MUINListSetActive         }
                 @{"  MUIHorizWeight             " Link MUIHorizWeight            }    @{"  MUIAllocDispatcherHook     " Link MUIAllocDispatcherHook    }
                 @{"  MUICycleChain              " Link MUICycleChain             }    @{"  MUINewObjectClass          " Link MUINewObjectClass         }
                 @{"  MUICreateCustomClass       " Link MUICreateCustomClass      }    @{"  MUIDeleteCustomClass       " Link MUIDeleteCustomClass      }
                 @{"  MUICDoMethodA              " Link MUICDoMethodA             }    @{"  MUICoerceMethodA           " Link MUICoerceMethodA          }
                 @{"  MUICDoMethod               " Link MUICDoMethod              }    @{"  MUICoerceMethod            " Link MUICoerceMethod           }
                 @{"  MUIDoSuperMethodA          " Link MUIDoSuperMethodA         }    @{"  MUISetSuperAttrs           " Link MUISetSuperAttrs          }
                 @{"  MUIDoSuperMethod           " Link MUIDoSuperMethod          }

@EndNode

@Node Introduction "Introduction"

  @{B}@{U}Introduction@{UU}@{UB}

  This is the complete package to easily develop MUI applications using Blitz Basic 2.
It is as easy to create MUI applications as creating GadTools+Intuition Applications
with blitz. Infact, it is even easier than that, MUI handles many things that
you would have to do manually if you were using Intuition.

This version of the EFMUILib (2.0) has been developed by Rob Hutchinson.
As far as I know, the development of the EFMUILib by its original authors stopped in
1998. It was quite apparent that the EFMUILib needed updating, with all the new
Custom Classes and such appearing. There was a need to update the resident also.
So I have taken it upon myself to continue development. Sorry if the original authors
are bothered about this?.. I take no credit for the great work of Erwan and
Andreas on this library, and any changes I have made are (arguably) for the better and
documented fully.

The need for Custom Class header files to be converted to Blitz and then added to the
resident was high. This was the first thing I worked on before I learnt assembly.
The new MUI2.RES resident file has the header files for the following MCC versions:

    BetterBalance.mcc  - Maik "bZ!" Schreiber - V11.1
    BetterString.mcc   - Allan Odgaard        - V11.3
    Busy.mcc           - Klaus Melchior       - V16.36
    Date.mcc           - Kai Hofmann          - -
    DateString.mcc     - Kai Hofmann          - V12.3
    DateText.mcc       - Kai Hofmann          - V12.0
    HexEdit.mcc        - Miloslaw Smyk        - V14.0
    HotkeyString.mcc   - Allan Odgaard        - V11.2
    HTMLtext.mcc       - Dirk Holtwick        - V14.8
    HTMLview.mcc       - Allan Odgaard        - V12.5
    Icon.mcc           - Russell Leighton     - V1.1
    ImageButton.mcc    - Maik "bZ!" Schreiber - V11.4
    InfoText.mcc       - Benny Kjfr Nielsen   - V15.3
    Lamp.mcc           - Maik "bZ!" Schreiber - V11.1
    LayGroup.mcc       - Alessandro Zummo     - V19.1
    MailText.mcc       - Olaf Peters          - V19.8
    MathString.mcc     - V. Gervasi           - V1.5
    MimeEditor.mcc     - Ole Friis Xstergaard - V1.4
    NFloattext.BB2     - Gilles Masson        - V19.46
    NList.BB2          - Gilles Masson        - V19.97
    NListView.BB2      - Gilles Masson        - V19.62
    Pkb.BB2            - Calogero CALI'       - V14.6
    Readargsgroup.BB2  - Szymon Ulatowski     - V11.0
    SettingsWindow.BB2 - Ingo Weinhold        - V1.00
    TableGroup.BB2     - Henning Thielemann   - V01.000
    TearOffBay.BB2     - Szymon Ulatowski     - V13.0
    TearOffPanel.BB2   - Szymon Ulatowski     - V13.0
    TextEditor.BB2     - Allan Odgaard        - V15.5
    TextInput.BB2      - Oliver Wagner        - V18.2
    ToolBar.BB2        - Benny Kjfr Nielsen   - V15.5
    TransferAnim.BB2   - Linus McCabe         - V1.02
    TWFmultiLED.BB2    - Christopher Page     - V12.5


NOTE: It is recommended that you get the full MUI developer package from aminet.

Version 2 now handles private MUI Custom Classes :).

  NOTE AGAIN:
  You can find further updates to the EFMUILib on the SDS website:
  http://www.satanicdreams.com/


@EndNode
@Node Disclaimer "Disclaimer"

 @{fg shine}@{u}Disclaimer@{uu}@{fg text}

 This software is provided as-is, without warranty of any kind,
 either expressed or implied. In no event will the author(s) be
 liable for direct, indirect, incidental or consequential damages
 or data loss resulting from the use or application of this software.
 The entire risk as to the results and performance of this software
 is assumed by the user!

@EndNode
@Node Using "Using"

  @{B}@{U}Using@{UU}@{UB}

  When you create a MUI application, don't forget to include the resident MUI2.RES
(type blitzlibs:MUI2.RES in the resident part of compiler options).

  The structure of a standard MUI application is :

  MUIxxx                      ;create objects

  MUIAddObjVGroup #g,#        ;can be HGroup or Page
  or
  MUIAddObjsVGroup #g,#,#,... ;can be HGroup or Page

  MUICreateVGroup #g

  MUICreateWindow #w,"Title","BASE",#g ;the second number is the first child of the win

  MUIAddSubWindow #w          ;Don't forget that!

  If MUICreateApplication<>True Then End

  MUINotifyApp #w,#MUIA_Window_CloseRequest,1,-1
  ;returns -1 if the user closes the window

  MUIOpenWindow #w

  Repeat
    ev.l=MUIWaitEvent
  Until ev=-1

  MUICloseWindow #w

  End  ;You don't need to use RemoveApplication


  Watch out! The TRUE value for MUI is not the same as the True value for Blitz!
The first is 1 and the second is -1. However, often it will not matter, as
MUI and classes usually use an "If 0 -> False -> Else -> True" system.

Make sure you check through the examples to learn MUI, there are various
beginner examples written by myself bundled with this archive.

@EndNode
@Node FAQ "FAQ"

  @{B}@{U}FAQ@{UU}@{UB}

@{fg shine}Q. When I compile my program, the window opens well, with the right gadgets, but the
system is blocked, I can't do anything! What's the problem?

@{fg text}A. You should have used WaitEvent instead of MUIWaitEvent.

@{fg shine}Q. When I compile my program the window doesn't open, however I use the MUIOpenWindow
with the right number! What can I do?

@{fg text}A. You must have forgotten to add the command MUIAddSubWindow #.

@{fg shine}Q. Where can I find the autodocs of MUI?

@{fg text}A. Download the archive mui38dev.lha (dev/mui).

@{fg shine}Q. Where can I find the source of the lib and of the installation utilities?

@{fg text}A. They are available on Aminet : dev/basic/EFMUILibSrc.lha
Well, the sources for versions upto V1.5 are ;).

@{fg shine}Q. The lib doesn't work! However I used the Install script! Why?

@{fg text}A. Unfortunately, the lib must have the number of 8. If this number
is already used by one of your lib, download the sources (dev/basic/EFMUILibSrc.lha)
and change #bbmuilib=8 by #bbmuilib=# (where # is free lib number). Then compile
it (don't forget to include the residents mui.res and libmacs.res, see the
MethodLib (dev/basic) doc for more details on how to compile a lib)
Or of course, you could use cln or ChangeLibNumber from aminet also.

@EndNode
@Node Authors "Authors"

  @{B}@{U}Authors@{UU}@{UB}

  The lib      : Erwan Fouret (Erwan.Fouret\@wanadoo.fr)
                 Additional V2 coding by Rob Hutchinson.
                 Email: rob\@satanicdreams.com for any needed help, etc.

  The ORIGINAL examples : Erwan Fouret and Andreas Håkansson
                          (andy\@bjuv.mail.telia.com)

  Updated and new examples : Rob Hutchinson and Jean Zydorczyk(NList hooks).
                             All examples from the original have been
                             updated!! Sorry, but they really did suck guys ;)

  The docs     :
    ·English version : Erwan Fouret and Andreas Håkansson
                       Version 2 docs extenstion and better explainations
                       by Rob Hutchinson.

    ·German version  : Frank Hartung (hardy\@freeway.shnet.org)
                       => available on Aminet soon.
                       [Erm, did this ever get released?]

  @{B}IRC@{UB} : If you want to chat with us, come to DALNet IRC (e.g. server irc.dal.net
        port 6667) on channels #Amiga(Fr) and/or #Blitz. Our nicks are :

        TJoMMe (Andreas Håkansson)
        WanOO  (Erwan Fouret)

        ^L0KI^ (Rob Hutchinson)
               [irc.esper.net/6667 -> #SatanicDreams (Sunday Afternoons for definate).]

  You can find further updates to the EFMUILib on the SDS website:
  http://www.satanicdreams.com/



@EndNode
@Node Bugs "Bugs"

  @{B}@{U}Bugs@{UU}@{UB}

  - Some problems reported with 68060
  - Some problems with @{"MUIChangeShape" Link MUIChangeShape} and @{"MUIChangeBitmap" Link MUIChangeBitmap}

  Please report bugs to: rob\@satanicdreams.com
  If anyone knows anything more about the above problems, please gimme
  a shout and I`ll try and fix them, if possible.

  @{B}@{U}Bugs Fixed since V1.5@{UU}@{UB}

  - Fixed MUIGetCM(), now does crash.
  - Fixed MUIDoMethod(), now a function and returns values.
  - Fixed MUIOpenWindow(), now returns true or false.

@EndNode
@Node Install "Installation"

  @{B}@{U}Installation@{UU}@{UB}

  You can use the included install script to install and setup the
  library automatically for you. If you dont want to use this,
  you can do it manually by copying the Blitzlibs/OtherLibs/EFMUILib.obj
  file to BlitzLibs:OtherLibs/ Or BlitzLibs:UserLibs/ depending
  on which you use. Then using a library deflibs creation program
  to recreate your deflibs file. Once you have done this copy the
  resident file from BlitzLibs/MUI2.RES to BlitzLibs:. 
  Then copy the rest of the archive to somewhere handy that you can
  get at easily. The examples will no doubt come in handy :)

  Everything should work fine after this.

@EndNode

@Node History "History"

  @{B}@{U}History@{UU}@{UB}

  Version 2.0 (25.02.2000)
  ~~~~~~~~~~~
  · MUINList() command added.
  · MUINListView() Command added.
  · MUINListHook() Command added.
  · MUIBetterString() Command added.
  · MUIKeyBetterString() Command added.
  · MUICreateHVirtGroup() Command added.
  · MUICreateVVirtGroup() Command added.
  · MUIBetterBalance() Command added.
  · MUIWeight() Command added.
  · MUIVertWeight() Command added.
  · MUIHorizWeight() Command added.
  · MUICycleChain() Command added.
  · MUICycleChains() Command added.
  · MUIGroupSpacing() Command added.
  · MUIGroupHSpacing() Command added.
  · MUIGroupVSpacing() Command added.
  · MUIText() Command added.
  · MUITextContents() Command added.
  · MUIShortHelp() Command added.
  · MUIHookToNList() Command added.
  · MUINListEntries() Command added.
  · MUINListGetActive() Command added.
  · MUINListSetActive() Command added.
  · MUIAllocDispatcherHook() Command added.
  · MUINewObjectClass() Command added.
  · MUICreateCustomClass() Command added.
  · MUIDeleteCustomClass() Command added.
  · MUICDoMethodA() Command added.     Erwan Fouret
  · MUICDoMethod() Command added.      Erwan Fouret
  · MUIDoSuperMethodA() Command added. Erwan Fouret
  · MUIDoSuperMethod() Command added.  Erwan Fouret
  · MUICoerceMethodA() Command added.  Erwan Fouret
  · MUICoerceMethod() Command added.   Erwan Fouret
  · MUISetSuperAttrs() Command added.  Erwan Fouret

  Version 1.5 (08.03.98)
  ~~~~~~~~~~~
  ·MUIGetxxx commands added
  ·MUISetxxx commands added

  Version 1.4a (13.02.98)
  ~~~~~~~~~~~~
  ·Enforcer Hits removed for functions MUIHSpace and MUIVSpace.
  ·Not released in P.D.

  Version 1.4 (01.02.98)
  ~~~~~~~~~~~~~~~~~~~~~~
  ·@{"MUIChangeBitmap" Link MUIChangeBitmap} and @{"MUIChangeShape" Link MUIChangeShape} added
  ·@{"MUIRedraw" Link MUIRedraw} added
  ·@{"MUIList" Link MUIList} changed (now works)
  ·@{"MUIListHook" Link MUIListHook} and @{"MUIChangeList" Link MUIChangeList} added
  ·@{"MUIShapeObject" Link MUIShapeObject} bug removed
  ·Max tags sets to 25 by default (was 16)

  Version 1.3 (22.01.98)
  ~~~~~~~~~~~~~~~~~~~~~~
  ·@{"MUIBitmapObject" Link MUIBitmapObject} added
  ·@{"MUIShapeObject" Link MUIShapeObject} added
  ·@{"MUICreateWindow" Link MUICreateWindow} ID bug removed
  ·Not released in P.D.

  Version 1.2 (14.12.97)
  ~~~~~~~~~~~~~~~~~~~~~~
  ·@{"MUIBalanceObject" Link MUIBalanceObject} added
  ·@{"MUINotifyApp" Link MUINotifyApp} added
  ·@{"MUIAddObjsHGroup" Link MUIAddObjsHGroup} added
  ·@{"MUIAddObjsVGroup" Link MUIAddObjsVGroup} added
  ·@{"MUIAddObjsPage" Link MUIAddObjsPage} added

  Version 1.1a (11.12.97)
  ~~~~~~~~~~~~~~~~~~~~~~~
  ·@{"MUIImageButton" Link MUIImageButton} : bug fixed.
  ·Not released in P.D.

  Version 1.1 (07.12.97)
  ~~~~~~~~~~~~~~~~~~~~~~
  ·MUIApplicationxxx bugs removed
  ·@{"MUIDoMethod" Link MUIDoMethod} is now a command
  ·Menu support added :
     @{"MUICreateMenu" Link MUICreateMenu}
     @{"MUISetMenu" Link MUISetMenu}
     @{"MUIFindUData" Link MUIFindUData}
  ·Max objects sets to 50 by default

  Version 1.0 (24.11.97)
  ~~~~~~~~~~~~~~~~~~~~~~
  ·First release
@EndNode
@Node Future "Future"

  @{B}@{U}Future@{UU}@{UB}

  - More examples (if necessary)
  - More commands (again, if necessary)
    Well guys, they were necessary..  :)
  - Maybe public custom class support?? Dream on.
  - Library NList hook support. Maybe. If I can figure out how
    to do it easily. Currently, my plan is to directly create the
    hook by dumping instructions in memory the way MUIAllocDispatcherHook()
    works. The trouble is that this would be much much more complex
    to get NList to work this way.
  - Add more MCC`s.. PLEASE email me if there are new MCC`s you want adding
    or there are some I`ve missed or the featured ones have been updated
    and the .h files have changed.
  - More shortcuts to mcc's in the EFMUILib.
  - Direct Gauge.mui support. Coming soon! Oooooo! ;) ahahah

@EndNode
@Node MUI "About MUI"

  @{B}@{U}About MUI@{UU}@{UB}


                        MUI - MagicUserInterface

                (c) Copyright 1992-97 by Stefan Stuntz


  MUI is a system to generate and maintain graphical user interfaces. With
the  aid  of  a  preferences program, the user of an application has the
ability to customize the outfit according to his personal taste.

  MUI is distributed as shareware. To obtain a complete package containing
lots of examples and more information about registration please look for
a  file  called  "muiXXusr.lha"  (XX means the latest version number) on
your local bulletin boards or on public domain disks.

          If you want to register directly, feel free to send


                         DM 30.-  or  US$ 20.-

                                  to

                             Stefan Stuntz
                        Eduard-Spranger-Straße 7
                             80935 München
                                GERMANY



             Support and online registration is available at

                          http://www.sasg.com/

@EndNode
@Node VividImagination "Vivid Imagination"

  @{B}@{U}Vivid Imagination@{UU}@{UB}


  Vivid Imagination is an amiga development group, founded by
Andreas  Håkansson,  and  is  run  by him  and his Co-Partner
Erwan Fouret. The  aim  of Vivid  Imagination  is to  produce
high quality games and applications fot the amiga.

  Vivid Imagination is structured in  a  way,  so  that  each
member  spends  his  time  doing  what he  or she is best at,
this  is so that  the result  always will  be  at  its  best.
This  is  also to keep  the group  organized, in the way that
the rest of  the group knows  who does  what.  The  way  it's
structured is so  that the Coders  only spend their time with
the  programming of  the software, and the  graphics  artists
spend their time doing graphics, etc etc.

  If you would be interested of joining our  team,  then  you
should  look at  our homepage  (http://vivid.home.ml.org), on
the JOIN US  page, to read more  about how to join, and  what
rules you  have to follow  as a member of  Vivid Imagination.
We are  looking for all  kind of people. Story  writers  (for
the  storyboards  of  games  etc.),  coders (Blitz  Basic  or
Assembler), graphics  artists (both  2D  and  3D),  musicians
(preferbly module  makers) and people  with other skills that
may fit into our group.

  You can get in touch with the founder  (Andreas  Håkansson)
at andy\@bjuv.mail.telia.com

 Sincerly,

			     - Andreas Håkansson
			       Founder of Vivid Imagination

- NOTE from Rob, the above website address does not work I`m
  afraid.. :(

@EndNode
@Node Index "Index"

  @{B}@{U}Index@{UU}@{UB}

                 @{"  MUIAddApplicationTags      " Link MUIAddApplicationTags     }
                 @{"  MUIAddObjHGroup            " Link MUIAddObjHGroup           }
                 @{"  MUIAddObjPage              " Link MUIAddObjPage             }
                 @{"  MUIAddObjsHGroup           " Link MUIAddObjsHGroup          }
                 @{"  MUIAddObjsPage             " Link MUIAddObjsPage            }
                 @{"  MUIAddObjsVGroup           " Link MUIAddObjsVGroup          }
                 @{"  MUIAddObjVGroup            " Link MUIAddObjVGroup           }
                 @{"  MUIAddSubWindow            " Link MUIAddSubWindow           }
                 @{"  MUIAddTags                 " Link MUIAddTags                }
                 @{"  MUIApplicationAuthor       " Link MUIApplicationAuthor      }
                 @{"  MUIApplicationBase         " Link MUIApplicationBase        }
                 @{"  MUIApplicationCopyright    " Link MUIApplicationCopyright   }
                 @{"  MUIApplicationDescription  " Link MUIApplicationDescription }
                 @{"  MUIApplicationLoc          " Link MUIApplicationLoc         }
                 @{"  MUIApplicationObj          " Link MUIApplicationObj         }
                 @{"  MUIApplicationTitle        " Link MUIApplicationTitle       }
                 @{"  MUIApplicationVersion      " Link MUIApplicationVersion     }
                 @{"  MUIBalanceObject           " Link MUIBalanceObject          }
                 @{"  MUIBitmapObject            " Link MUIBitmapObject           }
                 @{"  MUIChangeBitmap            " Link MUIChangeBitmap           }
                 @{"  MUIChangeList              " Link MUIChangeList             }
                 @{"  MUIChangeShape             " Link MUIChangeShape            }
                 @{"  MUICheckMark               " Link MUICheckMark              }
                 @{"  MUICloseWindow             " Link MUICloseWindow            }
                 @{"  MUICreateApplication       " Link MUICreateApplication      }
                 @{"  MUICreateHGroup            " Link MUICreateHGroup           }
                 @{"  MUICreateMenu              " Link MUICreateMenu             }
                 @{"  MUICreatePage              " Link MUICreatePage             }
                 @{"  MUICreateVGroup            " Link MUICreateVGroup           }
                 @{"  MUICreateWindow            " Link MUICreateWindow           }
                 @{"  MUICycle                   " Link MUICycle                  }
                 @{"  MUIDoMethod                " Link MUIDoMethod               }
                 @{"  MUIEvent                   " Link MUIEvent                  }
                 @{"  MUIFindUData               " Link MUIFindUData              }
                 @{"  MUIFreeObject              " Link MUIFreeObject             }
                 @{"  MUIGet                     " Link MUIGet                    }
                 @{"  MUIGetCM                   " Link MUIGetCM                  }
                 @{"  MUIGetCycle                " Link MUIGetCycle               }
                 @{"  MUIGetString$              " Link MUIGetString              }
                 @{"  MUIHSpace                  " Link MUIHSpace                 }
                 @{"  MUIHVSpace                 " Link MUIHVSpace                }
                 @{"  MUIImageButton             " Link MUIImageButton            }
                 @{"  MUIInsertSingle            " Link MUIInsertSingle           }
                 @{"  MUIKeyButton               " Link MUIKeyButton              }
                 @{"  MUIKeyCheckMark            " Link MUIKeyCheckMark           }
                 @{"  MUIKeyCycle                " Link MUIKeyCycle               }
                 @{"  MUIKeyRadio                " Link MUIKeyRadio               }
                 @{"  MUIKeySlider               " Link MUIKeySlider              }
                 @{"  MUIKeyString               " Link MUIKeyString              }
                 @{"  MUILabel                   " Link MUILabel                  }
                 @{"  MUIList                    " Link MUIList                   }
                 @{"  MUIListHook                " Link MUIListHook               }
                 @{"  MUIListTitle               " Link MUIListTitle              }
                 @{"  MUIListview                " Link MUIListview               }
                 @{"  MUIMakeObject              " Link MUIMakeObject             }
                 @{"  MUINewObject               " Link MUINewObject              }
                 @{"  MUINotify                  " Link MUINotify                 }
                 @{"  MUINotifyApp               " Link MUINotifyApp              }
                 @{"  MUINumericButton           " Link MUINumericButton          }
                 @{"  MUIObjLoc                  " Link MUIObjLoc                 }
                 @{"  MUIOpenWindow              " Link MUIOpenWindow             }
                 @{"  MUIPopButton               " Link MUIPopButton              }
                 @{"  MUIRadio                   " Link MUIRadio                  }
                 @{"  MUIRedraw                  " Link MUIRedraw                 }
                 @{"  MUIRedrawSingle            " Link MUIRedrawSingle           }
                 @{"  MUIRemoveApplication       " Link MUIRemoveApplication      }
                 @{"  MUIRemoveSingle            " Link MUIRemoveSingle           }
                 @{"  MUIRequest                 " Link MUIRequest                }
                 @{"  MUISet                     " Link MUISet                    }
                 @{"  MUISetCM                   " Link MUISetCM                  }
                 @{"  MUISetCycle                " Link MUISetCycle               }
                 @{"  MUISetMaximumTags          " Link MUISetMaximumTags         }
                 @{"  MUISetMenu                 " Link MUISetMenu                }
                 @{"  MUISetString               " Link MUISetString              }
                 @{"  MUIShapeObject             " Link MUIShapeObject            }
                 @{"  MUISimpleButton            " Link MUISimpleButton           }
                 @{"  MUISlider                  " Link MUISlider                 }
                 @{"  MUIString                  " Link MUIString                 }
                 @{"  MUIVSpace                  " Link MUIVSpace                 }
                 @{"  MUIWaitEvent               " Link MUIWaitEvent              }
                 @{"  MUINList                   " Link MUINList                  }
                 @{"  MUINListView               " Link MUINListView              }
                 @{"  MUINListHook               " Link MUINListHook              }
                 @{"  MUIBetterString            " Link MUIBetterString           }
                 @{"  MUIKeyBetterString         " Link MUIKeyBetterString        }
                 @{"  MUICreateHVirtGroup        " Link MUICreateHVirtGroup       }
                 @{"  MUICreateVVirtGroup        " Link MUICreateVVirtGroup       }
                 @{"  MUIBetterBalance           " Link MUIBetterBalance          }
                 @{"  MUIWeight                  " Link MUIWeight                 }
                 @{"  MUIVertWeight              " Link MUIVertWeight             }
                 @{"  MUIHorizWeight             " Link MUIHorizWeight            }
                 @{"  MUICycleChain              " Link MUICycleChain             }
                 @{"  MUICreateCustomClass       " Link MUICreateCustomClass      }
                 @{"  MUICycleChains             " Link MUICycleChains            }
                 @{"  MUIGroupSpacing            " Link MUIGroupSpacing           }
                 @{"  MUIGroupHSpacing(V)        " Link MUIGroupHSpacing          }
                 @{"  MUIText                    " Link MUIText                   }
                 @{"  MUITextContents            " Link MUITextContents           }
                 @{"  MUIShortHelp               " Link MUIShortHelp              }
                 @{"  MUIHookToNList             " Link MUIHookToNList            }
                 @{"  MUINListEntries            " Link MUINListEntries           }
                 @{"  MUINListGetActive          " Link MUINListGetActive         }
                 @{"  MUINListSetActive          " Link MUINListSetActive         }
                 @{"  MUIAllocDispatcherHook     " Link MUIAllocDispatcherHook    }
                 @{"  MUINewObjectClass          " Link MUINewObjectClass         }
                 @{"  MUIDeleteCustomClass       " Link MUIDeleteCustomClass      }
                 @{"  MUICDoMethodA              " Link MUICDoMethodA             }
                 @{"  MUICDoMethod               " Link MUICDoMethod              }
                 @{"  MUIDoSuperMethodA          " Link MUIDoSuperMethodA         }
                 @{"  MUIDoSuperMethod           " Link MUIDoSuperMethod          }
                 @{"  MUICoerceMethodA           " Link MUICoerceMethodA          }
                 @{"  MUICoerceMethod            " Link MUICoerceMethod           }
                 @{"  MUISetSuperAttrs           " Link MUISetSuperAttrs          }

@EndNode

@Node StackAppender "Stack Appender"

 @{fg shine}@{u}Stack Change Macro@{uu}@{fg text}

 You can use this macro that I have written to append bytes to your
 programs stack value. This way you can gaurentee that your program
 will have a minumum amount of stack. The 2 macros are:

  !StackOpen{Bytes}
  !StackClose

 The first should be placed at the top of your code with Bytes replaced
 with a word value of the amount of bytes you want your stack to have.
 Remember that it`s a WORD not a LONG and can only be upto around 30000.
 But you wont need more than this, you wont even need that! :)
 The second should be placed on the line BEFORE then "End" command.
 Simple!

 The reason for this addition to the MUI2.RES was becasue many MUI
 custom classes use LARGE amounts of stack space. Without this space
 your application will fall on its arse. For Example NList.

@EndNode

@Node MUISetMaximumTags "MUISetMaximumTags max"

  @{B}@{U}MUISetMaximumTags@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUISetMaximumTags max

    @{B}Function@{UB} : Set the maximum tags that will be allocated on objects creations.
                        Whenever you use the MUIAddTags command, add tags
                        to an object in any way, or even add objects to a group,
                        you use a tag or two. You should experiment with the
                        MUISetMaximumTags command to see how many tags you can get
                        away with. This defaults at 20. You may be able to use less.

    @{B}Example@{UB}  :

      @{fg fill}MUISetMaximumTags@{fg text} 40

    @{B}See also@{UB} : @{"  MUIAddTags                 " Link MUIAddTags}
               @{"  MUINewObject               " Link MUINewObject}
               @{"  MUINewObjectClass          " Link MUINewObjectClass}

@EndNode
@Node MUIApplicationTitle "MUIApplicationTitle title$"

  @{B}@{U}MUIApplicationTitle@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIApplicationTitle title$

    @{B}Function@{UB} : Sets the title of the MUI Application.
                        This title is used in Exchange.

    @{B}Example@{UB}  :

      @{fg fill}MUIApplicationTitle@{fg text} "My OWN Application"

    @{B}See also@{UB} : @{"  MUIApplicationVersion      " Link MUIApplicationVersion}
               @{"  MUIApplicationCopyright    " Link MUIApplicationCopyright}
               @{"  MUIApplicationAuthor       " Link MUIApplicationAuthor}
               @{"  MUIApplicationDescription  " Link MUIApplicationDescription}
               @{"  MUIApplicationBase         " Link MUIApplicationBase}
@EndNode
@Node MUIApplicationVersion "MUIApplicationVersion version$"

  @{B}@{U}MUIApplicationVersion@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIApplicationVersion version$

    @{B}Function@{UB} : Sets the version of the MUI Application.
                        This is your $VER version.

    @{B}Example@{UB}  :

      @{fg fill}MUIApplicationVersion@{fg text} "$VER: MyApp Version 1.0 (17.11.97)"

    @{B}See also@{UB} : @{"  MUIApplicationTitle        " Link MUIApplicationTitle}
               @{"  MUIApplicationCopyright    " link MUIApplicationCopyright}
               @{"  MUIApplicationAuthor       " link MUIApplicationAuthor}
               @{"  MUIApplicationDescription  " link MUIApplicationDescription}
               @{"  MUIApplicationBase         " link MUIApplicationBase}
@EndNode
@Node MUIApplicationCopyright "MUIApplicationCopyright copyright$"

  @{B}@{U}MUIApplicationCopyright@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIApplicationCopyright copyright$

    @{B}Function@{UB} : Sets the copyright of the MUI Application.

    @{B}Example@{UB}  :

      @{fg fill}MUIApplicationCopyright@{fg text} "(c)1997 by Me"

    @{B}See also@{UB} : @{"  MUIApplicationTitle        " link MUIApplicationTitle}
               @{"  MUIApplicationVersion      " link MUIApplicationVersion}
               @{"  MUIApplicationAuthor       " link MUIApplicationAuthor}
               @{"  MUIApplicationDescription  " link MUIApplicationDescription}
               @{"  MUIApplicationBase         " link MUIApplicationBase}
@EndNode
@Node MUIApplicationAuthor "MUIApplicationAuthor author$"

  @{B}@{U}MUIApplicationAuthor@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIApplicationAuthor author$

    @{B}Function@{UB} : Sets the author of the MUI Application.
                        IE, you ;)

    @{B}Example@{UB}  :

      @{fg fill}MUIApplicationAuthor@{fg text} "Me, of course"

    @{B}See also@{UB} : @{"  MUIApplicationTitle        " link MUIApplicationTitle}
               @{"  MUIApplicationVersion      " link MUIApplicationVersion}
               @{"  MUIApplicationCopyright    " link MUIApplicationCopyright}
               @{"  MUIApplicationDescription  " link MUIApplicationDescription}
               @{"  MUIApplicationBase         " link MUIApplicationBase}
@EndNode
@Node MUIApplicationDescription "MUIApplicationDescription description$"

  @{B}@{U}MUIApplicationDescription@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIApplicationDescription description$

    @{B}Function@{UB} : Sets the description of the MUI Application.
                        This description is used in Exchange.

    @{B}Example@{UB}  :

      @{fg fill}MUIApplicationDescription@{fg text} "This is a test application"

    @{B}See also@{UB} : @{"  MUIApplicationTitle        " link MUIApplicationTitle}
               @{"  MUIApplicationVersion      " link MUIApplicationVersion}
               @{"  MUIApplicationCopyright    " link MUIApplicationCopyright}
               @{"  MUIApplicationAuthor       " link MUIApplicationAuthor}
               @{"  MUIApplicationBase         " link MUIApplicationBase}
@EndNode
@Node MUIApplicationBase "MUIApplicationBase base$"

  @{B}@{U}MUIApplicationBase@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIApplicationBase base$

    @{B}Function@{UB} : Sets the base of the MUI Application.
                        The base should be no more than 4 characters.

    @{B}Example@{UB}  :

      @{fg fill}MUIApplicationBase@{fg text} "MYAPPLICATION"

    @{B}See also@{UB} : @{"  MUIApplicationTitle        " link MUIApplicationTitle}
               @{"  MUIApplicationVersion      " link MUIApplicationVersion}
               @{"  MUIApplicationCopyright    " link MUIApplicationCopyright}
               @{"  MUIApplicationAuthor       " link MUIApplicationAuthor}
               @{"  MUIApplicationDescription  " link MUIApplicationDescription}
@EndNode
@Node MUIAddApplicationTags "MUIAddApplicationTags &TagList | Tag,Value [,Tag,Value...]"

  @{B}@{U}MUIAddApplicationTags@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIApplicationTags &TagList | Tag,Value [,Tag,Value...]

    @{B}Function@{UB} : Adds some tags to the application.
                        Some of the MUI application methods you need to add to
                        the application directly. For these you use this command.

    @{B}Example@{UB}  :

      @{fg fill}MUIAddApplicationTags@{fg text} #MUIA_Application_SingleTask,0

    @{B}See also@{UB} : @{"  MUICreateApplication       " link MUICreateApplication}

@EndNode
@Node MUICreateApplication "MUICreateApplication"

  @{B}@{U}MUICreateApplication@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICreateApplication

    @{B}Function@{UB} : Creates the MUI application. Returns True (-1) if the
               application has been successfully created.
               Note that you should NOT just simply END if you have used the
               !StackOpen{} macro. Be sure to close the stack and all custom
               classes you create before you exit. It is YOUR responsibity.

    @{B}Example@{UB}  :

      @{fg fill}If MUICreateApplication@{fg text}<>@{fg fill}True Then End@{fg text}

    @{B}See also@{UB} : @{"  MUIAddApplicationTags      " link MUIAddApplicationTags}
               @{"  MUIRemoveApplication       " link MUIRemoveApplication}
               @{"  MUIApplicationLoc          " link MUIApplicationLoc}
               @{"  MUIApplicationObj          " link MUIApplicationObj}

@EndNode
@Node MUIRemoveApplication "MUIRemoveApplication"

  @{B}@{U}MUIRemoveApplication@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIRemoveApplication

    @{B}Function@{UB} : Removes the MUI Application.
                        Make sure you use this command BEFORE freeing 
                        and create private MUI custom classes.
                        See Class1.BB2 example included.

    @{B}Example@{UB}  :

      @{fg fill}MUIRemoveApplication@{fg text}

    @{B}See also@{UB} : @{"  MUICreateApplication       " link MUICreateApplication}
@EndNode
@Node MUIApplicationLoc "MUIApplicationLoc"

  @{B}@{U}MUIApplicationLoc@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIApplicationLoc

    @{B}Function@{UB} : Returns the address of the application structure.
               This structure is the same as others MUIObjects :

               NEWTYPE.MUIObject
                 adr.l            ;00 : Address of the object
                 kind.w           ;04 : Kind of the object
                 tagl.l           ;06 : Address of the taglist
                 tagp.w           ;10 : Pointer of the taglist
                 size.w           ;12 : Size of the taglist
                 special.l        ;14 : Special Info
                 spesize.w        ;18 : Special info size
                 spe2.l           ;20 : Special Info 2 (Hook)
                 spe2size.w       ;24 : Special Info 2 size
               End NEWTYPE        ;26 : SizeOf

               Where kind is :

               #kind_noting=-1    ;Nothing
               #kind_app=0        ;Application Object
               #kind_win=1        ;Window Object
               #kind_menu=2       ;Menu Object (not available)
               #kind_gadget=3     ;Gadget Object
               #kind_label=4      ;Label Object
               #kind_other=5      ;Other Object

    @{B}Example@{UB}  :

      *app.MUIObject=@{fg fill}MUIApplicationLoc@{fg text}

    @{B}See also@{UB} : @{"  MUICreateApplication       " link MUICreateApplication}
               @{"  MUIApplicationObj          " link MUIApplicationObj}
@EndNode
@Node MUIApplicationObj "MUIApplicationObj To MUIObject#"

  @{B}@{U}MUIApplicationObj@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIApplicationObj To MUIObject#

    @{B}Function@{UB} : Puts the application object into the MUIObject#.
                        This can be used as a reference for methods
                        and so on..

    @{B}Example@{UB}  :

      @{fg fill}MUIApplicationObj@{fg text} 11
      @{fg fill}MUINotify@{fg text} 10,#MUIA_Window_CloseRequest,1,11,#MUIM_Application_ReturnID,-1

    @{B}N.B.@{UB}     : This not very useful now, use @{"MUINotifyApp" Link MUINotifyApp} instead.
                        Unless you are using Toolbar.mcc of course ;)

    @{B}See also@{UB} : @{"  MUICreateApplication       " link MUICreateApplication}
               @{"  MUIApplicationLoc          " link MUIApplicationLoc}
               @{"  MUINotify                  " link MUINotify}
@EndNode
@Node MUIAddSubWindow "MUIAddSubWindow MUIObject#"

  @{B}@{U}MUIAddSubWindow@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIAddSubWindow MUIObject#

    @{B}Function@{UB} : Adds the window MUIObject# to the application.
               Note : The Application must not be created when using this function.

    @{B}Example@{UB}  :

      @{fg fill}MUIAddSubWindow@{fg text} 10

    @{B}See also@{UB} : @{"  MUICreateWindow            " link MUICreateWindow}
@EndNode
@Node MUIFreeObject "MUIFreeObject MUIObject#"

  @{B}@{U}MUIFreeObject MUIObject#@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIFreeObject MUIObject#

    @{B}Function@{UB} : Frees the MUIObject#.
               Note : Freeing an object will free all children of this object.
               e.g. freeing the application (using @{"MUIRemoveApplication" link MUIRemoveApplication} or using End)
               will free ALL objects.

    @{B}Example@{UB}  :

      @{fg fill}MUIFreeObject@{fg text} 0

    @{B}See also@{UB} :

@EndNode
@Node MUICreateWindow "MUICreateWindow MUIObject#,title$ [,id$ [,MUIObject#] ]"

  @{B}@{U}MUICreateWindow@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICreateWindow MUIObject#,title$ [,id$ [,MUIObject#] ]

    @{B}Function@{UB} : Creates a MUI window. The second MUIObject# is the first child
               of the window (it's often a group).

    @{B}Example@{UB}  :

      @{fg fill}MUICreateWindow@{fg text} 10,"My Window","MYWI",0

    @{B}See also@{UB} : @{"  MUIOpenWindow              " link MUIOpenWindow}
               @{"  MUIAddSubWindow            " link MUIAddSubWindow}
@EndNode
@Node MUIOpenWindow "MUIOpenWindow MUIObject#"

  @{B}@{U}MUIOpenWindow@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : Succ=MUIOpenWindow(MUIObject#)

    @{B}Function@{UB} : Opens the specified window.
                        Note that this command has been extended and is now
                        a function as of V2. It returns address or false
                        depending on whether or not it fails. You will no
                        longer get bad floating applications because your
                        window didn`t open. Use an appropriate close method
                        as shown below.

    @{B}Example@{UB}  :

      If MUIOpenWindow(#OUR_Window)=False
        ;
        ; Close stack or custom classes if necessary.
        ;
        End   ; jump to end, or endif to end..
      Endif

    @{B}See also@{UB} : @{"  MUICloseWindow             " link MUICloseWindow}
               @{"  MUICreateWindow            " link MUICreateWindow}
@EndNode
@Node MUICloseWindow "MUICloseWindow MUIObject#"

  @{B}@{U}MUICloseWindow@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICloseWindow MUIObject#

    @{B}Function@{UB} : Closes the specified window.
                        This will not fail, you do not need to check for that.

    @{B}Example@{UB}  :

      @{fg fill}MUICloseWindow@{fg text} 10

    @{B}See also@{UB} : @{"  MUIOpenWindow              " link MUIOpenWindow}
               @{"  MUICreateWindow            " link MUICreateWindow}
@EndNode
@Node MUICreateMenu "MUICreateMenu MUIObject#,GTMenuList#,Flags [,TitleUData1 [,...]]"

  @{B}@{U}MUICreateMenu@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICreateMenu MUIObject#,GTMenuList#,Flags [,TitleUData1 [,...]]

    @{B}Function@{UB} : Creates a menu from the GTMenuList specified.

    @{B}Bugs@{UB}     : There is a bug with SubItem shortcuts, due to a problem into
               the RIGTMenuLib. This will only happen when you have subitems though.
               if you do not have subitems with shortcuts, you will not experience this
               bug.

    @{B}Example@{UB}  :

      @{fg fill}MUICreateMenu@{fg text} 20,0,0,#MEN_PROJECT

    @{B}See also@{UB} : @{"  MUISetMenu                 " link MUISetMenu}
@EndNode
@Node MUISetMenu "MUISetMenu To MUIObject#,MUIObject#"

  @{B}@{U}MUISetMenu@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUISetMenu To MUIObject#,MUIObject#

    @{B}Function@{UB} : Sets a menu to a window. See examples.

    @{B}Example@{UB}  :

      @{fg fill}MUISetMenu@{fg text} 10,20

    @{B}See also@{UB} : @{"  MUICreateMenu              " link MUICreateMenu}
@EndNode
@Node MUIObjLoc "MUIObjLoc (MUIObject#)"

  @{B}@{U}MUIObjLoc@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : =MUIObjLoc(MUIObject#)

    @{B}Function@{UB} : Returns the address of the specified object if created or 0 if not.
                        Note that some methods may need an address, not an MUI Blitz object
                        number. try not to get caught by this.

    @{B}Example@{UB}  :

      *obj.l=@{fg fill}MUIObjLoc@{fg text}(0)

    @{B}See also@{UB} :
@EndNode
@Node MUIRequest "MUIRequest To MUIObject#,Flags,Title$,Gadgets$,Format$  [,Param...]"

  @{B}@{U}MUIRequest@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIRequest To MUIObject#,Flags,Title$,Gadgets$,Format$  [,Param...]

    @{B}Function@{UB} : Opens a MUI Request in the window MUIObject#.
                        Note that there may be a bug in this.. ??

    @{B}Example@{UB}  :

      @{fg fill}MUIRequest@{fg text} 10,0,"Infos","OK|Yes|Yeah","We have a=%ld",a

    @{B}See also@{UB} : @{"  MUICreateWindow            " link MUICreateWindow}
@EndNode
@Node MUIAddTags "MUIAddTags MUIObject#,  &TagList | Tag,Value [,Tag,Value...]"

  @{B}@{U}MUIAddTags@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIAddTags MUIObject#,  &TagList | Tag,Value [,Tag,Value...]

    @{B}Function@{UB} : Adds tags before the creation of an object.
                        You cannot use this after the object has been created.
                        You would then use MUISet().

    @{B}Example@{UB}  :

      @{fg fill}MUIAddTags@{fg text} 0,#MUIA_Frame,#MUIV_Frame_Group

    @{B}See also@{UB} : @{"  MUINewObject               " link MUINewObject}
               @{"  MUISetMaximumTags          " link MUISetMaximumTags}
@EndNode
@Node MUINewObject "MUINewObject MUIObject#,Class$,  &TagList | Tag,Value [,Tag,Value...]"

  @{B}@{U}MUINewObject@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUINewObject MUIObject#,Class$,  &TagList | Tag,Value [,Tag,Value...]

    @{B}Function@{UB} : Creates an object of the specified class.
                        This can be used to open mui custom classes and
                        use them in your own programs.

    @{B}Example@{UB}  :

      @{fg fill}MUINewObject@{fg text} 1,"Balance.mui",#MUIA_CycleChain,1

    @{B}See also@{UB} : @{"  MUIMakeObject              " link MUIMakeObject}
               @{"  MUIAddTags                 " link MUIAddTags}
               @{"  MUISetMaximumTags          " link MUISetMaximumTags}
@EndNode
@Node MUIMakeObject "MUIMakeObject MUIObject#,Type,  &TagList | Tag,Value [,Tag,Value...]"

  @{B}@{U}MUIMakeObject@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIMakeObject MUIObject#,Type,  &TagList | Tag,Value [,Tag,Value...]

    @{B}Function@{UB} : Makes an object of the specified type.
                        IE, you could make a Horizonal bar, see below.

    @{B}Example@{UB}  :

      @{fg fill}MUIMakeObject@{fg text} 2,#MUIO_HBar,10

    @{B}See also@{UB} : @{"  MUINewObject               " link MUINewObject}
@EndNode
@Node MUIHVSpace "MUIHVSpace MUIObject#"

  @{B}@{U}MUIHVSpace@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIHVSpace MUIObject#

    @{B}Function@{UB} : Creates a simple horizontal and vertical space.

    @{B}Example@{UB}  :

      @{fg fill}MUIHVSpace@{fg text} 3

    @{B}See also@{UB} : @{"  MUIHSpace                  " Link MUIHSpace}
               @{"  MUIVSpace                  " Link MUIVSpace}
@EndNode
@Node MUIHSpace "MUIHSpace MUIObject#,x"

  @{B}@{U}MUIHSpace@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIHSpace MUIObject#,x

    @{B}Function@{UB} : Creates a simple horizontal space of the specified size.

    @{B}Example@{UB}  :

      @{fg fill}MUIHSpace@{fg text} 3,10

    @{B}See also@{UB} : @{"  MUIHVSpace                 " Link MUIHVSpace}
               @{"  MUIVSpace                  " Link MUIVSpace}
@EndNode
@Node MUIVSpace "MUIVSpace MUIObject#,x"

  @{B}@{U}MUIVSpace@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIVSpace MUIObject#,x

    @{B}Function@{UB} : Creates a simple vertical space of specified size.

    @{B}Example@{UB}  :

      @{fg fill}MUIVSpace@{fg text} 3,10

    @{B}See also@{UB} : @{"  MUIHVSpace                 " Link MUIHVSpace}
               @{"  MUIHSpace                  " Link MUIHSpace}
@EndNode
@Node MUIString "MUIString MUIObject#,Contents$,MaxLen"

  @{B}@{U}MUIString@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIString MUIObject#,Contents$,MaxLen

    @{B}Function@{UB} : Creates a String object.
                        This is a standard MUI string object, note that
                        you can now easily open the betterstring class
                        with MUIBetterString and MUIKeyBetterString.
                        BetterString.mcc can be found on aminet in the
                        mui directory.

    @{B}Example@{UB}  :

      @{fg fill}MUIString@{fg text} 4,"This is a text",150

    @{B}See also@{UB} : @{"  MUIKeyString               " Link MUIKeyString}
@EndNode
@Node MUIKeyString "MUIKeyString MUIObject#,Contents,MaxLen,ControlChar$"

  @{B}@{U}MUIKeyString@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIKeyString MUIObject#,Contents$,MaxLen,ControlChar$

    @{B}Function@{UB} : Creates a String object. When the users press the key, the string
               is activated.

    @{B}Example@{UB}  :

      @{fg fill}MUIKeyString@{fg text} 4,"This is a text",150,"s"

    @{B}See also@{UB} : @{"  MUIString                  " Link MUIString}
@EndNode
@Node MUICheckMark "MUICheckMark MUIObject#,Selected"

  @{B}@{U}MUICheckMark MUIObject#,Selected@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICheckMark MUIObject#,Selected

    @{B}Function@{UB} : Creates a CheckMark object. If selected is set to true (1), the
               checkmark will be activated.

    @{B}Example@{UB}  :

      @{fg fill}MUICheckMark@{fg text} 4,1

    @{B}See also@{UB} : @{"  MUIKeyCheckMark            " Link MUIKeyCheckMark}
@EndNode
@Node MUIKeyCheckMark "MUIKeyCheckMark MUIObject#,Selected,ControlChar$"

  @{B}@{U}MUIKeyCheckMark@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIKeyCheckMark MUIObject#,Selected,ControlChar$

    @{B}Function@{UB} : Creates a CheckMark object. If selected is set to true (1), the
               checkmark will be activated. When the user press the key, the checkmark
               toggles.

    @{B}Example@{UB}  :

      @{fg fill}MUICheckMark@{fg text} 4,1,"c"

    @{B}See also@{UB} : @{"  MUICheckMark               " Link MUICheckMark}
@EndNode
@Node MUISimpleButton "MUISimpleButton MUIObject#,Name$"

  @{B}@{U}MUISimpleButton@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUISimpleButton MUIObject#,Name$

    @{B}Function@{UB} : Creates a simple button.

    @{B}Example@{UB}  :

      @{fg fill}MUISimpleButton@{fg text} 4,"Button1"

    @{B}See also@{UB} : @{"  MUIKeyButton               " Link MUIKeyButton}
@EndNode
@Node MUIKeyButton "MUIKeyButton MUIObject#,Name$,Key$"

  @{B}@{U}MUIKeyButton MUIObject#,Name$,Key$@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIKeyButton MUIObject#,Name$,Key$

    @{B}Function@{UB} : Creates a simple button. When the user presses the key, the button
               is activated.

    @{B}Example@{UB}  :

      @{fg fill}MUIKeyButton@{fg text} 4,"Button1","b"

    @{B}See also@{UB} : @{"  MUISimpleButton            " Link MUISimpleButton}
@EndNode
@Node MUICycle "MUICycle MUIObject#,  Entry$ [,Entry$...] | *Array"

  @{B}@{U}MUICycle@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICycle MUIObject#,  Entry$ [,Entry$] | *Array

    @{B}Function@{UB} : Creates a cycle object.

    @{B}Example@{UB}  :

      @{fg fill}MUICycle@{fg text} 5,"One","Two","Three","..."

    @{B}See also@{UB} : @{"  MUIKeyCycle                " Link MUIKeyCycle}
@EndNode
@Node MUIKeyCycle "MUIKeyCycle MUIObject#,Key$,  Entry$ [,Entry$...] | *Array"

  @{B}@{U}MUIKeyCycle@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIKeyCycle MUIObject#,Key$,  Entry$ [,Entry$] | *Array

    @{B}Function@{UB} : Creates a cycle object. When the users presses the key, the gadget
               cycles.

    @{B}Example@{UB}  :

      @{fg fill}MUIKeyCycle@{fg text} 5,"c","One","Two","Three","..."

    @{B}See also@{UB} : @{"  MUICycle                   " Link MUICycle}
@EndNode
@Node MUIRadio "MUIRadio MUIObject#,Name$,  Entry$ [,Entry$...] | *Array"

  @{B}@{U}MUIRadio@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIRadio MUIObject#,Name$,  Entry$ [,Entry$] | *Array

    @{B}Function@{UB} : Creates a radio object.

    @{B}Example@{UB}  :

      @{fg fill}MUIRadio@{fg text} 5,"My Radio","One","Two","Three","..."

    @{B}See also@{UB} : @{"  MUIKeyRadio                " Link MUIKeyRadio}
@EndNode
@Node MUIKeyRadio "MUIKeyRadio MUIObject#,Key$,Name$,  Entry$ [,Entry$...] | *Array"

  @{B}@{U}MUIKeyRadio@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIKeyRadio MUIObject#,Key$,Name$,  Entry$ [,Entry$] | *Array

    @{B}Function@{UB} : Creates a radio object. When the users presses the key, the gadget
               cycles.

    @{B}Example@{UB}  :

      @{fg fill}MUIKeyRadio@{fg text} 5,"r","My Radio","One","Two","Three","..."

    @{B}See also@{UB} : @{"  MUIRadio                   " Link MUIRadio}
@EndNode
@Node MUISlider "MUISlider MUIObject#,Min,Max,Level"

  @{B}@{U}MUISlider@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUISlider MUIObject#,Min,Max,Level

    @{B}Function@{UB} : Creates a slider object. "level" indicates the actual level of
               the slider.

    @{B}Example@{UB}  :

      @{fg fill}MUISlider@{fg text} 5,0,100,99

    @{B}See also@{UB} : @{"  MUIKeySlider               " Link MUIKeySlider}
@EndNode
@Node MUIKeySlider "MUIKeySlider MUIObject#,Min,Max,Level,Key$"

  @{B}@{U}MUIKeySlider@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIKeySlider MUIObject#,Min,Max,Level,Key$

    @{B}Function@{UB} : Creates a slider object. "level" indicates the actual level of
               the slider. When the user presses the key, the level is changed.

    @{B}Example@{UB}  :

      @{fg fill}MUIKeySlider@{fg text} 5,0,100,99,"s"

    @{B}See also@{UB} : @{"  MUISlider                  " Link MUISlider}
@EndNode
@Node MUILabel "MUILabel MUIObject#,Label$,Flags"

  @{B}@{U}MUILabel@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUILabel MUIObject#,Label$,Flags

    @{B}Function@{UB} : Creates a label. The flags are defined in the autodoc
               file MUI_Label.doc.

    @{B}Example@{UB}  :

      @{fg fill}MUILabel@{fg text} 6,"My Label",#MUIO_Label_Centered

    @{B}See also@{UB} : @{"  MUIKeySlider               " Link MUIKeySlider}
@EndNode
@Node MUINumericButton "MUINumericButton MUIObject#,Format$,Min,Max"

  @{B}@{U}MUINumericButton@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUINumericButton MUIObject#,Format$,Min,Max

    @{B}Function@{UB} : Creates a Numeric Button. Format$ must contain something like :
               "%ld"  : Standard long decimal format
               "%4ld" : Only 4 figures
               "%x"   : In Hexadecimal

    @{B}Example@{UB}  :

      @{fg fill}MUINumericButton@{fg text} 6,"Rating : %3ld %%",95,250

    @{B}See also@{UB} :
@EndNode
@Node MUIList "MUIList MUIObject#,Format$,Array$()"

  @{B}@{U}MUIList@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIList MUIObject#,Format$,Array$()

    @{B}Function@{UB} : Creates a simple list object that can be used in a listview.
               Format$ indicates things like the width of the columns... See the
               autodoc MUI_List.doc.

               Note that this command if bugged to hell. Please try to use
               NList and the included nlist hooks, they are much nicer and you
               will not have any problems with them.

    @{B}Example@{UB}  :

      @{fg fill}Dim@{fg text} entries$(10)
      entries$(0)="Hello"
      entries$(1)="World"
      entries$(2)="!!!"

      @{fg fill}MUIListHook Off
      MUIList@{fg text} 6,"WEIGHT=150",entries$()
      @{fg fill}MUIListView@{fg text} 7,6

    @{B}See also@{UB} : @{"  MUIListHook                " Link MUIListHook}
               @{"  MUIChangeList              " Link MUIChangeList}
               @{"  MUIListview                " Link MUIListview}
               @{"  MUIInsertSingle            " Link MUIInsertSingle}
               @{"  MUIRemoveSingle            " Link MUIRemoveSingle}
               @{"  MUIRedrawSingle            " Link MUIRedrawSingle}
               @{"  MUIListTitle               " Link MUIListTitle}
               For Multi-columns lists, see the EFListMulti example.
@EndNode
@Node MUIListHook "MUIListHook On|Off"

  @{B}@{U}MUIListHook@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIListHook On|Off

    @{B}Function@{UB} : Should be called before lists creation to
               specify if a Display Hook should or not be installed.
               Note : for a multi-columns list, a Hook is required.
               By default, MUIListHook is Off.

               EFMUILib internal hook system is really poor, I definately
               advise you use your own. See examples. [Rob]

    @{B}Example@{UB}  :

      @{fg fill}MUIListHook On@{fg text}

    @{B}See also@{UB} : @{"  MUIList                    " Link MUIList}
               For Multi-columns lists, see the EFListMulti example.
@EndNode
@Node MUIChangeList "MUIChangeList MUIObject# [,Array$(),Position]"

  @{B}@{U}MUIChangeList@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIChangeList MUIObject# [,Array$(),Position]

    @{B}Function@{UB} : Clear (if no parameters after MUIObject#) or change
               the contents of the list. If speicified, Position should normally
               be #MUIV_List_Insert_Bottom.

    @{B}Example@{UB}  :

      @{fg fill}MUIChangeList@{fg text} 6

    @{B}See also@{UB} : @{"  MUIList                    " Link MUIList}
@EndNode
@Node MUIListview "MUIListview To MUIObject#,MUIObject#"

  @{B}@{U}MUIListview@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIListview To MUIObject#,MUIObject#

    @{B}Function@{UB} : Creates a listview using the list specified.

    @{B}Example@{UB}  :

      @{fg fill}MUIListview@{fg text} 7,6

    @{B}See also@{UB} : @{"  MUIList                    " Link MUIList}
@EndNode
@Node MUIPopButton "MUIPopButton MUIObject#,Image"

  @{B}@{U}MUIPopButton@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIPopButton MUIObject#,Image

    @{B}Function@{UB} : Creates a pop button of the image specified (MUII_xxx).

    @{B}Example@{UB}  :

      @{fg fill}MUIPopButton@{fg text} 8,#MUII_PopFile

    @{B}See also@{UB} :
@EndNode
@Node MUIImageButton "MUIImageButton MUIObject#,Shape#"

  @{B}@{U}MUIImageButton@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIImageButton MUIObject#,Shape#

    @{B}Function@{UB} : Creates a button showing the shape specified.

    @{B}Example@{UB}  :

      @{fg fill}MUIImageButton@{fg text} 8,0

    @{B}See also@{UB} :
@EndNode
@Node MUIBalanceObject "MUIBalanceObject MUIObject#"

  @{B}@{U}MUIBalanceObject@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIBalanceObject MUIObject#

    @{B}Function@{UB} : Creates a simple Balance bar.

    @{B}Example@{UB}  :

      @{fg fill}MUIBalanceObject@{fg text} 8

    @{B}See also@{UB} : EFBalancing example
@EndNode
@Node MUIBitmapObject "MUIBitmapObject MUIObject#,BitMap# [,Palette#]"

  @{B}@{U}MUIBitmapObject@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIBitmapObject MUIObject#,BitMap# [,Palette#]

    @{B}Function@{UB} : Creates an object showing the bitmap specified.

    @{B}Example@{UB}  :

      @{fg fill}MUIBitmapObject@{fg text} 8,0,0

    @{B}See also@{UB} : @{"  MUIShapeObject             " Link MUIShapeObject}
               @{"  MUIChangeBitmap            " Link MUIChangeBitmap}
@EndNode
@Node MUIShapeObject "MUIShapeObject MUIObject#,Shape# [,Palette#]"

  @{B}@{U}MUIShapeObject@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIShapeObject MUIObject#,Shape# [,Palette#]

    @{B}Function@{UB} : Creates an object showing the shape specified.

    @{B}Example@{UB}  :

      @{fg fill}MUIShapeObject@{fg text} 8,0,0

    @{B}See also@{UB} : @{"  MUIBitmapObject            " Link MUIBitmapObject}
               @{"  MUIChangeShape             " Link MUIChangeShape}
@EndNode
@Node MUIChangeBitmap "MUIChangeBitmap MUIObject#,BitMap# [,Palette#]"

  @{B}@{U}MUIChangeBitmap@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIChangeBitmap MUIObject#,BitMap# [,Palette#]

    @{B}Function@{UB} : Changes the bitmap showed in a @{"BitmapObject" Link MUIBitmapObject}.

    @{B}Example@{UB}  :

      @{fg fill}MUIChangeBitmap@{fg text} 8,1,1

    @{B}Bugs@{UB}     : · The bitmap doesn't change if the object was created with a palette.
               · The palette doesn't change at all!

                 These bugs seem to come from the Bitmap.mui class, so perhaps they won't
               be fixed in a next release of EFMUILib but in a next release of MUI. (I'm
               not sure!).

    @{B}See also@{UB} : @{"  MUIBitmapObject            " Link MUIBitmapObject}
@EndNode
@Node MUIChangeShape "MUIChangeShape MUIObject#,Shape# [,Palette#]"

  @{B}@{U}MUIChangeBitmap@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIChangeShape MUIObject#,Shape# [,Palette#]

    @{B}Function@{UB} : Changes the shape showed in a @{"ShapeObject" Link MUIShapeObject}.

    @{B}Example@{UB}  :

      @{fg fill}MUIChangeShape@{fg text} 8,1,1

    @{B}Bugs@{UB}     : · The object doesn't redraw itself, you have to use @{"MUIRedraw" Link MUIRedraw}.

                 This bug seems to come from the Bitmap.mui class, so perhaps it won't
               be fixed in a next release of EFMUILib but in a next release of MUI. (I'm
               not sure!).

    @{B}See also@{UB} : @{"  MUIShapeObject             " Link MUIShapeObject}
@EndNode
@Node MUIAddObjHGroup "MUIAddObjHGroup To MUIObject#,MUIObject#"

  @{B}@{U}MUIAddObjHGroup@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIAddObjHGroup To MUIObject#,MUIObject#
                
    @{B}Function@{UB} : Adds the object (MUIObject#) to the Horizontal Group (To MUIObject#).
                 
    @{B}Example@{UB}  :

      @{fg fill}MUIAddObjHGroup@{fg text} 0,5
                             
    @{B}See also@{UB} : @{"  MUICreateHGroup            " Link MUICreateHGroup}
               @{"  MUIAddObjsHGroup           " Link MUIAddObjsHGroup}
@EndNode
@Node MUICreateHGroup "MUICreateHGroup MUIObject#"

  @{B}@{U}MUICreateHGroup@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICreateHGroup MUIObject#
                
    @{B}Function@{UB} : Creates an Horizontal Group.
                 
    @{B}Example@{UB}  :

      @{fg fill}MUIAddObjHGroup@{fg text} 0,5
      @{fg fill}MUICreateHGroup@{fg text} 0
                             
    @{B}See also@{UB} : @{"  MUIAddObjHGroup            " Link MUIAddObjHGroup}
               @{"  MUIAddObjsHGroup           " Link MUIAddObjsHGroup}
@EndNode
@Node MUIAddObjVGroup "MUIAddObjVGroup To MUIObject#,MUIObject#"

  @{B}@{U}MUIAddObjVGroup@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIAddObjVGroup To MUIObject#,MUIObject#
                
    @{B}Function@{UB} : Adds the object (MUIObject#) to the Vertical Group (To MUIObject#).
                 
    @{B}Example@{UB}  :

      @{fg fill}MUIAddObjVGroup@{fg text} 0,5
                             
    @{B}See also@{UB} : @{"  MUICreateVGroup            " Link MUICreateVGroup}
               @{"  MUIAddObjsVGroup           " Link MUIAddObjsVGroup}
@EndNode
@Node MUICreateVGroup "MUICreateVGroup MUIObject#"

  @{B}@{U}MUICreateVGroup@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICreateVGroup MUIObject#
                
    @{B}Function@{UB} : Creates a Vertical Group.
                 
    @{B}Example@{UB}  :

      @{fg fill}MUIAddObjVGroup@{fg text} 0,5
      @{fg fill}MUICreateVGroup@{fg text} 0
                             
    @{B}See also@{UB} : @{"  MUIAddObjHGroup            " Link MUIAddObjHGroup}
               @{"  MUIAddObjsVGroup           " Link MUIAddObjsVGroup}
@EndNode
@Node MUIAddObjPage "MUIAddObjPage To MUIObject#,MUIObject#"

  @{B}@{U}MUIAddObjPage@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIAddObjPage To MUIObject#,MUIObject#
                
    @{B}Function@{UB} : Adds the object (MUIObject#) to the Register Page (To MUIObject#).
                 
    @{B}Example@{UB}  :

      @{fg fill}MUIAddObjPage@{fg text} 0,5
                             
    @{B}See also@{UB} : @{"  MUICreatePage              " Link MUICreatePage}
               @{"  MUIAddObjsPage             " Link MUIAddObjsPage}
@EndNode
@Node MUICreatePage "MUICreatePage MUIObject#  ,Page1$ [,Page2$...] | &Page$(0)"

  @{B}@{U}MUICreatePage@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICreatePage MUIObject#  ,Page1$ [,Page2$...] | &Page$(0)
                
    @{B}Function@{UB} : Creates a Page.
                 
    @{B}Example@{UB}  :

      @{fg fill}MUIAddObjPage@{fg text} 0,5
      @{fg fill}MUIAddObjPage@{fg text} 0,6
      @{fg fill}MUICreatePage@{fg text} 0,"Page1","Page2"
      
      or
      
      @{fg fill}MUIAddObjsPage@{fg text} 0,5,6
      @{fg fill}MUICreatePage@{fg text} 0,"Page1","Page2"
                             
    @{B}See also@{UB} : @{"  MUIAddObjPage              " Link MUIAddObjPage}
               @{"  MUIAddObjsPage             " Link MUIAddObjsPage}
@EndNode
@Node MUIAddObjsHGroup "MUIAddObjsHGroup To MUIObject#,MUIObject# [,MUIObject# [,...]]"

  @{B}@{U}MUIAddObjsHGroup@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIAddObjsHGroup To MUIObject#,MUIObject# [,MUIObject# [,...]]
                
    @{B}Function@{UB} : Adds the objects specified to the Horizontal Group (To MUIObject#).
                 
    @{B}Example@{UB}  :

      @{fg fill}MUIAddObjsHGroup@{fg text} 0,1,2,3,4,5,8
                             
    @{B}See also@{UB} : @{"  MUICreateHGroup            " Link MUICreateHGroup}
               @{"  MUIAddObjHGroup            " Link MUIAddObjHGroup}
@EndNode
@Node MUIAddObjsVGroup "MUIAddObjsVGroup To MUIObject#,MUIObject# [,MUIObject# [,...]]"

  @{B}@{U}MUIAddObjsVGroup@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIAddObjsVGroup To MUIObject#,MUIObject# [,MUIObject# [,...]]
                
    @{B}Function@{UB} : Adds the objects specified to the Vertical Group (To MUIObject#).
                 
    @{B}Example@{UB}  :

      @{fg fill}MUIAddObjsVGroup@{fg text} 0,1,2,3,4,5,8

    @{B}See also@{UB} : @{"  MUICreateVGroup            " Link MUICreateVGroup}
               @{"  MUIAddObjVGroup            " Link MUIAddObjVGroup}
@EndNode
@Node MUIAddObjsPage "MUIAddObjsPage To MUIObject#,MUIObject# [,MUIObject# [,...]]"

  @{B}@{U}MUIAddObjsPage@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIAddObjsPage To MUIObject#,MUIObject# [,MUIObject# [,...]]
                
    @{B}Function@{UB} : Adds the objects specified to the Register Page (To MUIObject#).
                 
    @{B}Example@{UB}  :

      @{fg fill}MUIAddObjsPage@{fg text} 0,1,2,3,4,5,8
                             
    @{B}See also@{UB} : @{"  MUICreatePage              " Link MUICreatePage}
               @{"  MUIAddObjPage              " Link MUIAddObjPage}
@EndNode
@Node MUIInsertSingle "MUIInsertSingle MUIObject#,Position,  Entry$ [,Entry$...] | *Array"

  @{B}@{U}MUIInsertSingle@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIInsertSingle MUIObject#,Position,  Entry$ [,Entry$...] | *Array
                
    @{B}Function@{UB} : Inserts a line in a list.
                 
    @{B}Example@{UB}  :
     
      @{fg fill}MUIInsertSingle@{fg text} 6,5,"Col#1","And #2","Here : #3"
                             
    @{B}See also@{UB} : @{"  MUIList                    " Link MUIList}
               @{"  MUIRemoveSingle            " Link MUIRemoveSingle}
               @{"  MUIRedrawSingle            " Link MUIRedrawSingle}
               @{"  MUIListTitle               " Link MUIListTitle}
@EndNode
@Node MUIRemoveSingle "MUIRemoveSingle MUIObject#,Position"

  @{B}@{U}MUIRemoveSingle@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIRemoveSingle MUIObject#,Position
                
    @{B}Function@{UB} : Removes a line in a list.
                 
    @{B}Example@{UB}  :
     
      @{fg fill}MUIRemoveSingle@{fg text} 6,4
                             
    @{B}See also@{UB} : @{"  MUIList                    " Link MUIList}
               @{"  MUIInsertSingle            " Link MUIInsertSingle}
               @{"  MUIRedrawSingle            " Link MUIRedrawSingle}
               @{"  MUIListTitle               " Link MUIListTitle}
@EndNode
@Node MUIRedrawSingle "MUIRedrawSingle MUIObject#,Position"

  @{B}@{U}MUIRedrawSingle@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIRedrawSingle MUIObject#,Position
                
    @{B}Function@{UB} : Redraws a line in a list.
                 
    @{B}Example@{UB}  :
     
      @{fg fill}MUIRedrawSingle@{fg text} 6,5
                             
    @{B}See also@{UB} : @{"  MUIList                    " Link MUIList}
               @{"  MUIInsertSingle            " Link MUIInsertSingle}
               @{"  MUIRemoveSingle            " Link MUIRemoveSingle}
               @{"  MUIListTitle               " Link MUIListTitle}
@EndNode
@Node MUIListTitle "MUIListTitle MUIObject#,  Title$ [,Title$...] | *Array"

  @{B}@{U}MUIListTitle@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIListTitle MUIObject#,  Title$ [,Title$...] | *Array
                
    @{B}Function@{UB} : Changes the title(s) of a list.
                 
    @{B}Example@{UB}  :
     
      @{fg fill}MUIListTitle@{fg text} 6,"First","Second","Third..."
                             
    @{B}See also@{UB} : @{"  MUIList                    " Link MUIList}
               @{"  MUIInsertSingle            " Link MUIInsertSingle}
               @{"  MUIRemoveSingle            " Link MUIRemoveSingle}
               @{"  MUIRedrawSingle            " Link MUIRedrawSingle}
@EndNode
@Node MUISet "MUISet MUIObject#,  &TagList | Attr,Value [,Attr,Value...]"

  @{B}@{U}MUISet@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUISet MUIObject#,  &TagList | Attr,Value [,Attr,Value...]
                
    @{B}Function@{UB} : Changes an attribute of an object.
                 
    @{B}Example@{UB}  :

      @{fg fill}MUISet@{fg text} 4,#MUIA_ShowMe,0
                             
    @{B}See also@{UB} : @{"  MUIGet                     " Link MUIGet}
@EndNode
@Node MUIGet "MUIGet (MUIObject#,Attribute)"

  @{B}@{U}MUIGet@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIGet (MUIObject#,Attribute)
                
    @{B}Function@{UB} : Returns the value of the attribute.
                 
    @{B}Example@{UB}  :
     
      act.l=@{fg fill}MUIGet@{fg text}(6,#MUIA_List_Active)
                             
    @{B}See also@{UB} : @{"  MUISet                     " Link MUISet}
@EndNode
@Node MUIRedraw "MUIRedraw MUIObject#,Flags"

  @{B}@{U}MUIRedraw@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIRedraw MUIObject#,Flags
                
    @{B}Function@{UB} : Redraw the specified object. Flags can be :
               · #MADF_DRAWUPDATE to update the object
               · #MADF_DRAWOBJECT to draw the object
                 
    @{B}Example@{UB}  :
     
      @{fg fill}MUIRedraw@{fg text} 8,#MADF_DRAWUPDATE
      
    @{B}N.B.@{UB}     : Normally, you don't have to use this since MUI should redraws
               the objects itself, but in particular cases (see @{"MUIChangeShape" Link MUIChangeShape})
               you have to use that command.
                             
    @{B}See also@{UB} : 
@EndNode
@Node MUIDoMethod "MUIDoMethod MUIObject#,  Method,Tag [,Tag] | &TagList"

  @{B}@{U}MUIDoMethod@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIDoMethod MUIObject#,  Method,Tag [,Tag] | &TagList

    @{B}Function@{UB} : Executes the method specified for the object.
                 
    @{B}Example@{UB}  :

      @{fg fill}MUIDoMethod@{fg text} 10,#MUIM_Window_ToBack
                             
    @{B}See also@{UB} :
@EndNode
@Node MUINotify "MUINotify MUIObject#,Tag,Value,MUIObject#,  Tag [,Tag...] | &TagList"

  @{B}@{U}MUINotify@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUINotify MUIObject#,Tag,Value,MUIObject#,  Method,Tag [,Tag...] | &TagList
                   
    @{B}Function@{UB} : When the value of the tag of the first object is equal to Value,
               then MUI will executes the Method for the second object.
                 
    @{B}Example@{UB}  :
     
      @{fg fill}MUINotify@{fg text} 4,#MUIA_Pressed,0,11,#MUIM_Application_ReturnID,#ID_BUTTON
      
      @{fg fill}Repeat@{fg text}
        ev.l=@{fg fill}MUIWaitEvent
        If@{fg text} ev=#ID_BUTTON
          @{fg fill}MUIRequest@{fg text} 10,"Info","OK","Button has been released"
        @{fg fill}EndIf
      Until@{fg text} ev=-1
     
    @{B}N.B.@{UB}     : For this example, MUINotifyApp is better.
                             
    @{B}See also@{UB} : @{"  MUIEvent                   " Link MUIEvent}
               @{"  MUIWaitEvent               " Link MUIWaitEvent}
               @{"  MUINotifyApp               " Link MUINotifyApp}
@EndNode
@Node MUINotifyApp "MUINotifyApp MUIObject#,Tag,Value,ReturnID"

  @{B}@{U}MUINotifyApp@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUINotifyApp MUIObject#,Tag,Value,ReturnID
                   
    @{B}Function@{UB} : When the value of the tag of the first object is equal to Value,
               then The ReturnID will be sent to the application.
                 
    @{B}Example@{UB}  :

      @{fg fill}MUINotifyApp@{fg text} 4,#MUIA_Pressed,0,#ID_BUTTON
      
      @{fg fill}Repeat@{fg text}
        ev.l=@{fg fill}MUIWaitEvent
        If@{fg text} ev=#ID_BUTTON
          @{fg fill}MUIRequest@{fg text} 10,"Info","OK","Button has been released"
        @{fg fill}EndIf
      Until@{fg text} ev=-1
                             
    @{B}See also@{UB} : @{"  MUIEvent                   " Link MUIEvent}
               @{"  MUIWaitEvent               " Link MUIWaitEvent}
               @{"  MUINotify                  " Link MUINotify}
@EndNode
@Node MUIEvent "MUIEvent"

  @{B}@{U}MUIEvent@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : =MUIEvent
                   
    @{B}Function@{UB} : It is the same as Event but for MUI.
                 
    @{B}Example@{UB}  :
    
      ev.l=@{fg fill}MUIEvent@{fg text}

    @{B}See also@{UB} : @{"  MUIWaitEvent               " Link MUIWaitEvent}
@EndNode
@Node MUIWaitEvent "MUIWaitEvent"

  @{B}@{U}MUIWaitEvent@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : =MUIWaitEvent
                   
    @{B}Function@{UB} : It is the same as WaitEvent but for MUI.
                 
    @{B}Example@{UB}  :
    
      ev.l=@{fg fill}MUIWaitEvent@{fg text}

    @{B}See also@{UB} : @{"  MUIEvent                   " Link MUIEvent}
@EndNode
@Node MUIFindUData "MUIFindUData To MUIObject#,MUIObject#,UserData"

  @{B}@{U}MUIFindUData@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIFindUData To MUIObject#,MUIObject#,UserData
                   
    @{B}Function@{UB} : Please see the autodoc MUI_Notify.
                 
    @{B}Example@{UB}  :
    
      @{fg fill}MUIFindUData@{fg text} 21,20,#MEN_PROJECT

    @{B}See also@{UB} :  
@EndNode
@Node MUIGetCM "MUIGetCM (MUIObject#)"

  @{B}@{U}MUIGetCM@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : res=MUIGetCM (MUIObject#)
                   
    @{B}Function@{UB} : Returns the state of a CheckMark (1 if checked, 0 if not)
                 
    @{B}Example@{UB}  :
    
      @{fg fill}If MUIGetCM@{fg text}(4)=1
        @{fg fill}NPrint@{fg text} "Checked"
      @{fg fill}Else
        NPrint@{fg text} "Not Checked"
      @{fg fill}EndIf@{fg text}

    @{B}See also@{UB} : @{"  MUISetCM                   " Link MUISetCM}
@EndNode
@Node MUIGetCycle "MUIGetCycle (MUIObject#)"

  @{B}@{U}MUIGetCycle@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : res=MUIGetCycle (MUIObject#)
                   
    @{B}Function@{UB} : Returns the state of a Cycle (0 being the first choice)
                 
    @{B}Example@{UB}  :
    
      cyc=@{fg fill}MUIGetCycle@{fg text}(5)
      
    @{B}See also@{UB} : @{"  MUISetCycle                " Link MUISetCycle}
@EndNode
@Node MUIGetString "MUIGetString$ (MUIObject#)"

  @{B}@{U}MUIGetString$@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : res$=MUIGetString$ (MUIObject#)
                   
    @{B}Function@{UB} : Returns the contents of a String.
                 
    @{B}Example@{UB}  :
    
      s$=@{fg fill}MUIGetString$@{fg text}(4)
      
    @{B}See also@{UB} : @{"  MUISetString               " Link MUISetString}
@EndNode
@Node MUISetCM "MUISetCM MUIObject#,Selected"

  @{B}@{U}MUISetCM@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUISetCM MUIObject#,Selected
                   
    @{B}Function@{UB} : Sets the state of a checkmark.
                 
    @{B}Example@{UB}  :
    
      @{fg fill}MUISetCM@{fg text} 4,1
      
    @{B}See also@{UB} : @{"  MUIGetCM                   " Link MUIGetCM}
@EndNode
@Node MUISetCycle "MUISetCycle MUIObject#,Selected"

  @{B}@{U}MUISetCycle@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUISetCycle MUIObject#,Selected
                   
    @{B}Function@{UB} : Sets the state of a cycle.
                 
    @{B}Example@{UB}  :
    
      @{fg fill}MUISetCycle@{fg text} 5,2
      
    @{B}See also@{UB} : @{"  MUIGetCycle                " Link MUIGetCycle}
@EndNode
@Node MUISetString "MUISetString MUIObject#,String$"

  @{B}@{U}MUISetString@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUISetString MUIObject#,String$
                   
    @{B}Function@{UB} : Sets the contents of a String.

    @{B}Example@{UB}  :

      @{fg fill}MUISetString$@{fg text} 4,"Hello"
      
    @{B}See also@{UB} : @{"  MUIGetString$              " Link MUIGetString}
@EndNode

@Node MUINList "MUINList MUIObject#,Format$,Array$()"

  @{B}@{U}MUINList@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUINList MUIObject#,Format$,Array$()

    @{B}Function@{UB} : Exactly the same as MUIList, except that it will
               open an NList instead, it uses the MUINListHook
               command to set multi column hook. I really advise
               against the use of these commands. They suck
               beyond belief :)  And they may be removed in
               future versions.

@EndNode

@Node MUINListView "MUINListView To MUIObject#,MUIObject#"

  @{B}@{U}MUINListView @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUINListView To MUIObject#,MUIObject#

    @{B}Function@{UB} : Same function as MUIListView, except for NList.
               Please do not use.

@EndNode

@Node MUINListHook "MUINListHook On|Off"

  @{B}@{U}MUINListHook @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUINListHook On/Off

    @{B}Function@{UB} : Set the Nlist hook on or off, same function
               as MUIListHook except for NList objects.

@EndNode

@Node MUIBetterString "MUIBetterString MUIObject#,Contents$,MaxLen"

  @{B}@{U}MUIBetterString@{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIBetterString MUIObject#,Contents$,MaxLen

    @{B}Function@{UB} : Open BetterString.mcc by Allan Odgaard.
               must be installed for this. Other than that
               MUIBetterString can be used the same way as
               String.mui. MUISetString and MUIGetString
               will work fine with it.

@EndNode

@Node MUIKeyBetterString "MUIKeyBetterString MUIObject#,Contents$,MaxLen,ControlChar$"

  @{B}@{U}MUIKeyBetterString @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIKeyBetterString MUIObject#,Contents$,MaxLen,ControlChar$

    @{B}Function@{UB} : Same as MUIBetterString except that you can set
               a control character that will be used to activate
               the object via the keyboard. IE "a", not ascii
               value.

@EndNode

@Node MUICreateHVirtGroup "MUICreateHVirtGroup MUIObject#"

  @{B}@{U}MUICreateHVirtGroup @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICreateHVirtGroup MUIObject#

    @{B}Function@{UB} : Exactly the same as MUICreateHGroup, except that the
               group will become a virtual group. This means the
               objects in it will become scrollable. Create your
               group in exactly same way as normal except use this
               in place of MUICreateHGroup.

@EndNode

@Node MUICreateVVirtGroup "MUICreateVVirtGroup MUIObject#"

  @{B}@{U}MUICreateVVirtGroup @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICreateVVirtGroup MUIObject#

    @{B}Function@{UB} : Exactly the same as MUICreateVGroup, except that the
               group will become a virtual group. This means the
               objects in it will become scrollable. Create your
               group in exactly same way as normal except use this
               in place of MUICreateVGroup.

@EndNode

@Node MUIBetterBalance "MUIBetterBalance MUIObject#"

  @{B}@{U}MUIBetterBalance @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIBetterBalance MUIObject#

    @{B}Function@{UB} : Will open the BetterBalance.mcc MUI Custom Class.
               This class is public and available from aminet.
               The reason I added this command was because
               Balance.mui does NOT save the last positions
               of your balance objects. BetterBalance can do
               this, although it doesn`t by default, see
               the included example.

@EndNode

@Node MUIWeight "MUIWeight MUIObject#,Lbs"

  @{B}@{U}MUIWeight @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIWeight MUIObject#,Lbs

    @{B}Function@{UB} : SET the weight of a object. Note that you are
               setting the width and height weight and that
               this command should be used AFTER object
               creation not before because it is a SET command.

@EndNode

@Node MUIVertWeight "MUIVertWeight MUIObject#,Lbs"

  @{B}@{U}MUIVertWeight @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIVertWeight MUIObject#,Lbs

    @{B}Function@{UB} : Set only the Vertical weight of an object.
               As MUIWeight

@EndNode

@Node MUIHorizWeight "MUIHorizWeight MUIObject#,Lbs"

  @{B}@{U}MUIHorizWeight @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIHorizWeight MUIObject#,Lbs

    @{B}Function@{UB} : Set only the Horizontal weight of an object.
               As MUIWeight

@EndNode

@Node MUICycleChain "MUICycleChain MUIObject#,Chain"

  @{B}@{U}MUICycleChain @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICycleChain MUIObject#,Chain

    @{B}Function@{UB} : Add an object to the given cycle chain.
               This will allow the object to be selected
               (white box around it) with the TAB button.
               (TAB Cycles through chain, enter selects).

@EndNode

@Node MUICycleChains "MUICycleChains Chain,MUIObject# [,MUIObject# [,...]]"

  @{B}@{U}MUICycleChains @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICycleChains Chain,MUIObject# [,MUIObject# [,...]]

    @{B}Function@{UB} : Add object(s) to the given cycle chain.
               Otherwise as MUICycleChain.

@EndNode

@Node MUIGroupSpacing "MUIGroupSpacing MUIObject#,Pixels"

  @{B}@{U}MUIGroupSpacing @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIGroupSpacing MUIObject#,Pixels

    @{B}Function@{UB} : SET the spacing of a group, the vertical and
               horizontal spacing will be set. Note that this
               should be used AFTER the object is created.

@EndNode

@Node MUIGroupHSpacing "MUIGroupHSpacing MUIObject#,Pixels"

  @{B}@{U}MUIGroupHSpacing @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIGroupHSpacing MUIObject#,Pixels

    @{B}Function@{UB} : MUIGroupHSpacing and MUIGroupVSpacing SET
               the group Horizontal and Vertical spacing
               respectively. Otherwise same as MUIGroupSpacing.

@EndNode

@Node MUIText "MUIText MUIObject#,Contents$,SetVMax"

  @{B}@{U}MUIText @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIText MUIObject#,Contents$,SetVMax

    @{B}Function@{UB} : MUIText will open a Text.mui object with the
               given Contents$. The SetVMax parameter will
               set the vertical maximum. If False, the object
               will stretch on the Y Axis, if True it will not.
               You can use MUITextContents to set the contents
               of the object.

@EndNode

@Node MUITextContents "MUITextContents MUIObject#,Contents$"

  @{B}@{U}MUITextContents @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUITextContents MUIObject#,Contents$

    @{B}Function@{UB} : Set the contents of a Text.mui object.
               The Contents$ will be set in the given object.

@EndNode

@Node MUIShortHelp "MUIShortHelp MUIObject#,Help$"

  @{B}@{U}MUIShortHelp @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIShortHelp MUIObject#,Help$

    @{B}Function@{UB} : Set the short help (bubble help) for the given
               object. Make sure that you use this AFTER you
               have created the object. The best way to do this
               is to add all your ShortHelp's after the
               MUIAddSubWindow command. Help$ is formatted as
               all MUI text. See Text.mui autodoc.

@EndNode

@Node MUIHookToNList "MUIHookToNList MUIObject#,Format$,*Construct,*Display,*Destruct"

  @{B}@{U}MUIHookToNList @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIHookToNList MUIObject#,Format$,*Construct,*Display,*Destruct

    @{B}Function@{UB} : Used to quickly set the Format, Construct hook,
               Display hook and Destruct hook and open an NList.
               The Nlist will be opened with the given hooks and
               formatting.
               This is a conveinience command.

@EndNode

@Node MUINListEntries "MUINListEntries(MUIObject#)"

  @{B}@{U}MUINListEntries @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : =MUINListEntries(MUIObject#)

    @{B}Function@{UB} : Get the number of entries in the given Nlist
               object. -1 if not init, 0 if no entries.

@EndNode

@Node MUINListGetActive "MUINListGetActive(MUIObject#)"

  @{B}@{U}MUINListGetActive @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : =MUINListGetActive(MUIObject#)

    @{B}Function@{UB} : Get the active entry number in the given NList
               object -1 if nothing active.

@EndNode

@Node MUINListSetActive "MUINListSetActive MUIObject#,Entry"

  @{B}@{U}MUINListSetActive @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUINListSetActive MUIObject#,Entry

    @{B}Function@{UB} : Activate the given entry in the given NList
               object. This will move the highlight over
               the given entry number.

@EndNode

@Node MUIAllocDispatcherHook "MUIAllocDispatcherHook(*HookTo)"

  @{B}@{U}MUIAllocDispatcherHook @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : =MUIAllocDispatcherHook(*HookTo)

    @{B}Function@{UB} : This command can be used to create a Dispatcher
               hook for which will link a custom class to your
               given dispatcher function. MUIAllocDispatcherHook()
               returns the address of the hook it has just created
               for you. Note that this is not an OS .Hook format
               hook, it is a custom Dispatcher hook, MUI handles
               the creation of the Hook object for you..

               The Dispatcher function of a custom class is function
               which calls all other functions. IE, when it gets
               passed a method.

               See Class1.BB2 for more information.

@EndNode

@Node MUINewObjectClass "MUINewObjectClass MUIObject#,ClassPtr,ClassID,&TagList"

  @{B}@{U}MUINewObjectClass @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUINewObjectClass MUIObject#,ClassPtr,ClassID,&TagList

    @{B}Function@{UB} : This command will create an MUIObject# from the given
               class pointer. This will allow you to easily create
               MUI Custom Classes. See Class1.BB2

@EndNode

@Node MUICreateCustomClass "MUICreateCustomClass (Base,Supername$,SuperMCC,DataSize,DispatcherHook)"

  @{B}@{U}MUICreateCustomClass @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICreateCustomClass (Base,Supername$,SuperMCC,DataSize,DispatcherHook)

    @{B}Function@{UB} : Calls MUI_CreateCustomClass_()
               For private custom classes:
                Base           = 0
                Supername$     = Name of class you want to subclass.
                SuperMCC       = 0
                DataSize       = Size of data space used for your object.
                DispatcherHook = Returned from MUIAllocDispatcherHook().

               See Class1.bb2

@EndNode

@Node MUIDeleteCustomClass "MUIDeleteCustomClass *MCC"

  @{B}@{U}MUIDeleteCustomClass @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIDeleteCustomClass *MCC

    @{B}Function@{UB} : Delete a previously create MUI Custom Class.
               Calls MUI_DeleteCustomClass_()
               You should call this for all created custom
               classes on exit. But before you call it, make sure
               you use MUIRemoveApplication. See Class1.BB2 for more
               information.

@EndNode

@Node MUICDoMethodA "MUICDoMethodA(Obj,Message)"

  @{B}@{U}MUICDoMethodA @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICDoMethodA(Obj,Message)

    @{B}Function@{UB} : Call a method on an object. Via Message. This
               function requires the address of the object.
               It is similar to MUIDoMethod.

@EndNode

@Node MUICDoMethod "MUICDoMethod (Obj,MethodID,Tag[,Tag..])"

  @{B}@{U}MUICDoMethod @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICDoMethod (Obj,MethodID,Tag[,Tag..])

    @{B}Function@{UB} : Same as MUICDoMethodA() except you can specify
               tags.

@EndNode

@Node MUIDoSuperMethodA "MUIDoSuperMethodA (Class,Obj,Message)"

  @{B}@{U}MUIDoSuperMethodA @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIDoSuperMethodA (Class,Obj,Message)

    @{B}Function@{UB} : Call DoSuperMethodA function. Used in
               BOOPSI, custom class creation, see Class1.BB2.

@EndNode

@Node MUIDoSuperMethod "MUIDoSuperMethod (Class,Obj,MethodID,Tag[,Tag..])"

  @{B}@{U}MUIDoSuperMethod @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUIDoSuperMethod (Class,Obj,MethodID,Tag[,Tag..])

    @{B}Function@{UB} : Same as MUIDoSuperMethodA except you specity
                        the tags.

@EndNode

@Node MUICoerceMethodA "MUICoerceMethodA(Class,Obj,Message)"

  @{B}@{U}MUICoerceMethodA @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICoerceMethodA(Class,Obj,Message)

    @{B}Function@{UB} : Calls CoerceMethodA with message.

@EndNode

@Node MUICoerceMethod "MUICoerceMethod(Class,Obj,MethodID,Tag[,Tag..])"

  @{B}@{U}MUICoerceMethod @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUICoerceMethod(Class,Obj,MethodID,Tag[,Tag..])

    @{B}Function@{UB} : Calls CoerceMethodA with tags.

@EndNode

@Node MUISetSuperAttrs "MUISetSuperAttrs(Class,Obj,Tag[,Tag..])"

  @{B}@{U}MUISetSuperAttrs @{UU}@{UB}

    @{B}Modes@{UB}    : Amiga
    @{B}Syntax@{UB}   : MUISetSuperAttrs(Class,Obj,Tag[,Tag..])

    @{B}Function@{UB} : Sets Super method attributes.

@EndNode


