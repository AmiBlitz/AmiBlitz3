@DATABASE RITrackDiskLibV2.6
@Author Conversion program
@$VER: RITRACKDISKLIB V2.60 (27.01.2007)- Updated by mrodfr.
@NODE OVERVIEW "Overview of RI TrackDisk Lib V2.6"

                                  @{b}@{u}Overview@{ub}@{uu}

@ENDNODE OVERVIEW

@NODE OpenDisk "RI TrackDisk Lib V2.5"

@{fg shine}Statement/Function : OpenDisk@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : success=OpenDisk(unit#)

  This attempts to open unit 'unit#' of the trackdisk.device, for use with
the other Statement/Functions in this library. A return value of 0 indicates
failure, -1 indicates success.

@ENDNODE OpenDisk

@NODE MotorOn "RI TrackDisk Lib V2.5"

@{fg shine}Statement : MotorOn@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : MotorOn unit#

  This attempts to switch the drive motor on for the previously opened
trackdisk unit (called with OpenDisk). You must call this Statement/Function
before attempting to ReadSector/WriteSector/FormatTrack/WriteBoot

@ENDNODE MotorOn

@NODE MotorOff "RI TrackDisk Lib V2.5"

@{fg shine}Statement : MotorOff@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : MotorOff unit#

  This turns the drive motor of 'unit#' off. Oh, I see...

@ENDNODE MotorOff

@NODE ReadSector "RI TrackDisk Lib V2.5"

@{fg shine}Statement/Function : ReadSector@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : [success=]ReadSector(unit#,sector#,buffer[,numsectors])

  This attempts to read 'numsectors' sectors from a trackdisk device which
has been opened with OpenDisk and has its Motor On. If numsectors is
omitted then 1 sector is read. The data is read into the memory location
pointed to by 'buffer'.

@ENDNODE ReadSector

@NODE WriteSector "RI TrackDisk Lib V2.5"

@{fg shine}Statement/Function : WriteSector@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : [success=]WriteSector(unit#,sector#,buffer[,numsectors])

  This is the same as ReadSector except it will write from buffer to the
disk drive specified by unit#

@ENDNODE WriteSector

@NODE FormatTrack "RI TrackDisk Lib V2.5"

@{fg shine}Statement/Function : FormatTrack@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : [success=]FormatTrack(unit#,track#,buffer[,numtracks])

  This does a TD_FORMAT on the specified track number. Buffer should point
to the area of memory which the track should be formatted with.

@ENDNODE FormatTrack

@NODE WriteBoot "RI TrackDisk Lib V2.5"

@{fg shine}Statement/Function : WriteBoot@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : [success=]WriteBoot(unit#[,buffer])

  This writes 1k of data to the bootblock of the specified disk unit. The
optional buffer parameter should point to an area of memory with which to
write the bootblock.

@ENDNODE WriteBoot

@NODE CloseDisk "RI TrackDisk Lib V2.5"

@{fg shine}Statement : CloseDisk@{fg text}
-----------------------------------------------------------------------------
Modes  : Amiga
Syntax : CloseDisk unit#

  This closes the trackdisk.device of the specified unit#. The Motor is
automatically switched off if it is already on.

@ENDNODE CloseDisk

@NODE MAIN "RI TrackDisk Lib V2.5"
.---------------------------------------------------------------------------.
|                           @{b}RI TrackDisk Lib V2.5@{ub}                           |
`---------------------------------------------------------------------------'

                         ©1996 Red When Excited Ltd

        Undocumented commands added by Toby Zuijdveld 02/03/1999
                       mailto: hotcakes\@abacus.net.au

                             @{"     Overview     " link OVERVIEW}

                               Command Index                                

                               @{" CloseDisk    " link CloseDisk}
                               @{" FormatTrack  " link FormatTrack}
                               @{" MotorOff     " link MotorOff}
                               @{" MotorOn      " link MotorOn}
                               @{" OpenDisk     " link OpenDisk}
                               @{" ReadSector   " link ReadSector}
                               @{" WriteBoot    " link WriteBoot}
                               @{" WriteSector  " link WriteSector}

                                DiskStatus   unit#
                                DiskIO       unit#
                                BootProg     unit#,memoryaddress

                                @{" Examples " LINK Examples}

                              @{" Main Document " LINK "REDBLITZLIBS.GUIDE/MAIN"}
                              @{" Library Index " LINK "REDBLITZLIBS.GUIDE/LIBRARYLIST"}

@ENDNODE MAIN

@NODE Examples "Example Programs"

                             @{b}@{u}Example Programs@{ub}@{uu}

@{fg shine}EXAMPLE 1@{fg text} - A simple disk-copier :

	@{" Load Example 1 " system "run >NIL: BLITZ3:Amiblitz3 Blitz3:Docs/UserLibs/Examples/RITrackDiskLib1.bb"}

@ENDNODE Examples
