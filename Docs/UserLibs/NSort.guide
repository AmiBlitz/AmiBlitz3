@DATABASE SortV1.10
@$VER: Sort V1.10 (27.01.2007)Updated by mrodfr(10.06.1999) by Laboureur -> AlphaSOUND <- Frédéric
@NODE MAIN "Sort V1.10"

    @{b}Sort V1.00 General Information:@{ub}

  * Blitz Basic II library number         : #131
  * Library size when linked to executable: 630 bytes
  * Number of commands                    : 2
  * Resources automatically freed at end  : Yes

  This library allows you to sort numerical arrays in aascending
  or descending order. The routine used is based on the QuickSort
  algorithm, rewritten in optimized assembler.

    @{b}Commands summary:@{ub}

  @{" NSortDown   " LINK NSortDown} Statement
  @{" NSortUp     " LINK NSortUp} Statement

@ENDNODE


@NODE NSortDown

    @{b}SYNTAX@{ub}
  NSortDown @{b}array()@{ub}, @{b}start.w@{ub}, @{b}end.w@{ub}

    @{b}STATEMENT@{ub}
  Sort the array in descending order (high numbers first).

  @{b}array()@{ub}: name of the array to sort. The array must be an array
           of byte, word or long. String and quick arrays aren't
           supported.

  @{b}start.w@{ub}: index for the start of the sort. You can sort only a
           part of the array if you need to.

  @{b}end.w@{ub}  : index for the end of the sort.

  NOTE: @{b}start.w@{ub} and @{b}end.w@{ub} MUST be valid values !

@ENDNODE


@NODE NSortUp

    @{b}SYNTAX@{ub}
  NSortUp @{b}array()@{ub}, @{b}start.w@{ub}, @{b}end.w@{ub}

    @{b}STATEMENT@{ub}
  Sort the array in ascending order (low numbers first).

  @{b}array()@{ub}: name of the array to sort. The array must be an array
           of byte, word or long. String and quick arrays aren't
           supported.

  @{b}start.w@{ub}: index for the start of the sort. You can sort only a
           part of the array if you need to.

  @{b}end.w@{ub}  : index for the end of the sort.

  NOTE: @{b}start.w@{ub} and @{b}end.w@{ub} MUST be valid values !

@ENDNODE
