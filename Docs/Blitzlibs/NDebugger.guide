@DATABASE DebuggerV1.10
@$VER: Debugger V1.10 (27.01.2007)- Updated by mrodfr. (29.04.1999) by Laboureur -> AlphaSOUND <- Frédéric
@NODE MAIN "Debugger V1.10"

    @{b}Debugger support for the NCS Library:@{ub}

  Blitz Basic has very good debugger support which allows you to detect
  possible errors at the execution stage, indicates at which line
  any errors occur, and finally, prevents a crash.

  Since NCS 1.80, most of the libraries include basic debugger
  support to eliminate little errors, like objects number overflow,
  missing init routines, etc.

  Here is a quick list of the most common errors you can encounter
  when running a NCS program with debugger activated:

    + "NInit<LibName> don't have been called before...": remember that
      almost all NCS libraries need a NInitXXXXX function call before
      you use any other functions from that library.

    + "Maximum <Object Name> object reached": as the max number of objects
      possible is defined with the NInitXXXX function, you can
      call a number greater than the one you've defined. Example:

        NInitWindow 1                    ; Allow up to 2 windows (0 and 1)
        Window 3, 100, 100, 100, 100, 0  ; Will generate an error as
                                         ; only 0 and 1 are valid

    + "There is no current <ObjectName>": You tried to use a function which
      needs a current object but it doesn't exist or isn't activated. To
      activate an object previously created, use the "NUse<ObjectName>"
      function

    + "Specified <ObjectName> number isn't initialized": You referenced a valid
      Object number but it hasn't been created.

@ENDNODE

