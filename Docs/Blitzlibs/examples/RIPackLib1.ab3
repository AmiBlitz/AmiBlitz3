; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = "amigalibs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 5
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
;Demonstrates loading and displaying an ILBM IFF picture

;=======================================================================
;=                            Picture Viewer                           =
;=                                                                     =
;= Demonstration program for the RI Pack Library.                      =
;=                                                                     =
;= This program loads any ILBM IFF picture file and displays it on a   =
;= screen.  Press a mouse button on the screen to make the program end.=
;=======================================================================

DEFTYPE.w

;=======================================================================
;=                             Statements                              =
;=======================================================================
Statement ViewBitmap{bitm.w,pal.w,w.w,h.w,d.w,modeid.l}
  ;Open the screen
  Screen 0,0,0,w,h,d,modeid,"",-1,-1

  ;Put the screens title behind all windows on the screen
  ShowTitle_ Peek.l(Addr Screen(0)),False

  ;Open a window on the screen
  Window 0,0,0,w,h,#WFLG_BACKDROP|#WFLG_BORDERLESS,"",-1,-1

  ;use the palette
  Use Palette pal

  ;And display the bitmap
  BitMaptoWindow bitm,0
End Statement

;=======================================================================
;=                           Initialisation                            =
;=======================================================================
MaxLen pa$=192
MaxLen fi$=192

;Get a screen to open the file requester on
WbToScreen 0
Use Screen 0

;=======================================================================
;=                                Main                                 =
;=======================================================================
.Main
fil$=ASLFileRequest$("Select a picture file to view...",pa$,fi$)

;If no file selected then end
If fil$="" Then End

;If we couldn't load the file then end
If BLoad(fil$,0)=0
  EZRequest "Could not load file!"
  End
EndIf

d=IFFDepth(Start(0))

w=IFFWidth(Start(0))

h=IFFHeight(Start(0))

modeid.l=IFFViewmode(Start(0))

If d=0 OR w=0 OR h=0
  EZRequest "Not an ILBM IFF file!"
  End
EndIf

NPrint "Filename : "+fil$
NPrint "IFF Depth   : ",d
NPrint "IFF Width   : ",w
NPrint "IFF Height  : ",h
NPrint "IFF viewmode: ",Hex$(modeid)

BitMap 0,w,h,d
ILBMGrab Start(0),0,0

ViewBitmap{0,0,w,h,d,modeid}

;Wait for the user to press a mouse button before ending
Repeat
  ev.l=WaitEvent
Until ev=#IDCMP_MOUSEBUTTONS
End

