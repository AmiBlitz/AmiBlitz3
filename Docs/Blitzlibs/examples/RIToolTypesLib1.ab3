; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 5
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 100
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
;Demonstrating Loads Of Different ToolType Commands
;
;ToolTypes library (C)1996 Red When Excited
;Example program V2
;By Stephen McNamara
;Please feel free to use any part of the program
; in whatever way you feel like

;PLEASE make sure that 'TestIcon' exists in the current directory!

;Startup the program up
WBStartup
WbToScreen 0
ShowScreen 0
Use Screen 0

;Get a window to print into!
Window 0,0,11,640,200,$100a,"ToolTypes Test Program",2,1
Use Window 0

;our filename.  You should note that the filename has .info added
;automatically to it when used in the GET/PUTDiskObject commands.
filename$="TestIcon"

;get a disk object and return success (you don't have to get success back)
;you could just use: GetIconObject filename$
suc.l=GetIconObject(filename$)

;check to see if it was loaded okay
If suc=0
  NPrint "Couldn't open file: "+filename$
  NPrint "Did you CD into the directory?"
  Repeat
    ev.l=WaitEvent
  Until ev=$200
  End
End If

;Get some tooltype information
NPrint "Tooltype ICONX has value "+FindToolValue("ICONX")
NPrint "Tooltype ICONY has value "+FindToolValue("ICONY")

;check for tool value match
If MatchToolValue("LANGUAGE","ENGLISH") AND MatchToolValue("LANGUAGE","ENGLISH")
  NPrint "Tooltype LANGUAGE has values ENGLISH and FRENCH"
EndIf

;now change some tooltypes
suc.l=SetToolValue("ICONX","150")
NPrint "Change tooltype ICONX to 150 (-1=success): "+Str$(suc)
suc.l=SetToolValue("ICONY","100")
NPrint "Change tooltype ICONY to 100 (-1=success): "+Str$(suc)

;create a new tooltype
suc.l=NewToolType("ICONVALUE","CLOSED",False)
NPrint "Create tooltype ICONTYPE with value CLOSED and switch OFF (-1=success): "+Str$(suc)

y=WCursY

IconToShape 0,1
x=160
WLocate x,100
Print "Gadget_Render"
WBlit 0,x,136

x+ShapeWidth(1)+64
WLocate x,100
Print "Select_Render"
WBlit 1,x,136

WLocate 0,y

;save out our icon information to RAM:
suc.l=PutIconObject("RAM:"+filename$)
NPrint "Saved okay? (-1=success): "+Str$(suc)

NPrint "Close this window to end!"

Repeat
  ev.l=WaitEvent
Until ev=$200

Free Window 0
Free Screen 0
End
