; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 0
; Residents       = "amigalibs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 5
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
; A directory viewer that converts Acid->LEShapes

;=======================================================================
;=                   Acid->LEShape Converter                           =
;=                                                                     =
;= Demonstration program for the RI Shapes Library                     =
;=                                                                     =
;=======================================================================

DEFTYPE.w

;=======================================================================
;=                         Constant Declarations                       =
;=======================================================================

#WINFLAGS=#WFLG_CLOSEGADGET|#WFLG_ACTIVATE|#WFLG_DRAGBAR|#WFLG_DEPTHGADGET
#WINFLAGS=#WINFLAGS | #WFLG_RMBTRAP
#WINWIDTH=320

#DIRSTRING    =100
#PARENTGADGET =101
#DEVICEGADGET =102
#LVGADGET     =103

#LD_DEVICES   =%100
#LD_VOLUMES   =%1000
#LD_ASSIGNS   =%10000

;values for 'currentmode'
#DEVICELIST   =0
#DIRLIST      =1

NEWTYPE .entry
  pad.w
  name$
  size.l
  reserved.b[8]
End NEWTYPE

Dim List firstlist.entry(4000)

;=======================================================================
;=                             Statements                              =
;=======================================================================


;Count the number of shapes
Function.w CountShapes{}
  n.w=0
  While Peek.l(Addr Shape(n))<>0
    n+1
  Wend
  Function Return n
End Function

;Read in the contents of a directory.
Statement ScanDir{cd$}
  SHARED firstlist()

  ClearList firstlist()
  num=0

  fib.l=AllocDosObject_ (2,0) ; Get a FileInfoBlock for examining.

  alock.l=Lock_ (cd$,-2)        ; Try to get a shared lock on the dir
  If alock<>0
    Examine_ alock,fib          ; Examine it to determine if it
    While ExNext_ (alock,fib)   ; is a dir or not.
      num+1
      ftype.l=Peek.l(fib+4)     ; ftype>0=Directory <0=File
      filename$=Peek$(fib+8)
      fsize.l=Peek.l(fib+124)
      If ftype>=0
        AddFirst firstlist()
        a$="/"
        If Right$(cd$,1)=":" Then a$=""
        firstlist()\name="*"+filename$
        firstlist()\size=-1
      Else
        AddLast firstlist()
        a$="/"
        If Right$(cd$,1)=":" Then a$=""
        firstlist()\name=filename$
        firstlist()\size=Peek.l(fib+124)
      EndIf
    Wend
  Else
    BeepScreen 0
  EndIf

  UnLock_  alock            ; Unlock the directory

  FreeDosObject_ 2,fib

  ;Sort the list of filenames into alphabetical order.
  StringSort firstlist(),SizeOf.entry,2
End Statement

Statement ScanDevices{}
  SHARED firstlist()

  ClearList firstlist()
  num=0

  GetDeviceList #LD_ASSIGNS|#LD_VOLUMES|#LD_DEVICES|%1

  flag=0
  While (flag=0)
    a$=NextDevice
    If a$<>""
      num+1
      AddFirst firstlist()
      Select DeviceEntryType
        Case 0
          firstlist()\name="<DRV> "
        Case 1
          firstlist()\name="<ASN> "
        Case 2
          firstlist()\name="<VOL> "
        Case 3
          firstlist()\name="<ASN> "
        Case 4
          firstlist()\name="<ASN> "
      End Select
      firstlist()\name+a$+":"
    Else
      flag=1
    EndIf
  Wend

  FreeDeviceList

  ;Sort the list of filenames into alphabetical order.
  StringSort firstlist(),SizeOf.entry,2
End Statement

;Locate the requested listitem and make it the current item
Statement FindItem{item.w}
  SHARED firstlist()

  ResetList firstlist()
  For n=0 To item
    If NextItem(firstlist())=0
      EZRequest "Error in selection!"
      End
    EndIf
  Next n
End Statement

;=======================================================================
;=                           Initialisation                            =
;=======================================================================
prog$="Directory Viewer"
dir$=""
currentmode=#DEVICELIST

;***** Get the screen and font to use *****
WbToScreen 0
ShowScreen 0
*scr.Screen=Peek.l(Addr Screen(0))
*myfont.TextAttr=*scr\Font
fontheight=*myfont\ta_YSize
ad1.l=*myfont\ta_Name
fontname$=Peek$(ad1)

LoadFont 1,fontname$,fontheight,0

LECompressShapes On

Gosub OpenGUI

t$="A simple shape converter that uses the|"
t$+"RIShapesLib to compress Blitz shapes."

EZRequest prog$,t$,"  Ok  "

;=======================================================================
;=                              Main Loop                              =
;=======================================================================
Gosub GetDir

Repeat
  ev.l=WaitEvent
  If ev=#IDCMP_GADGETUP
    Select GadgetHit
      Case #DIRSTRING
        dir$=GTGetString(0,#DIRSTRING)
        Gosub GetDir
      Case #LVGADGET
        item=EventCode
        Gosub Selection
      Case #PARENTGADGET
        Gosub Parent
      Case #DEVICEGADGET
        currentmode=#DEVICELIST
        Gosub GetDir
    End Select
 EndIf
Until ev=#IDCMP_CLOSEWINDOW

End

;=======================================================================
;=                              OpenGUI                                =
;=                                                                     =
;= Open the graphical user interface.  This routine uses the OS call   =
;= TextLength_ to calculate the pixel width of a string, it then uses  =
;= this width to size its gadgets horizontally.  This allows proper    =
;= sizes of gadgets even when using proportional fonts.                =
;=======================================================================
.OpenGUI:
  butwidth=TextLength_(*scr\_RastPort,"Parent",6)+14
  AddIDCMP #LISTVIEWIDCMP

  Window 0,0,fontheight+3,#WINWIDTH,200,#WINFLAGS,prog$,-1,-1

  GTButton 0,#DEVICEGADGET,1,1,butwidth,fontheight+6,"Device",0

  GTButton 0,#PARENTGADGET,1+butwidth,1,butwidth,fontheight+6,"Parent",0

  GTString 0,#DIRSTRING,1+(2*butwidth),1,#WINWIDTH-10-(2*butwidth),fontheight+6,"",0,256,dir$

  GTListView 0,#LVGADGET,1,fontheight+7,#WINWIDTH-10,InnerHeight-fontheight-7,"",0,firstlist()

  AttachGTList 0,0
  WindowFont 1
Return

;=======================================================================
;=                              GetDir                                 =
;=                                                                     =
;= Get the directory of dir$ and put it into the listview gadget       =
;=======================================================================
.GetDir:
  GTChangeList 0,#LVGADGET
  If currentmode=#DEVICELIST
    ScanDevices{}
    dir$="<Device List>"
  Else
    ScanDir {dir$}
  EndIf

  GTSetString 0,#DIRSTRING,dir$

  GTChangeList 0,#LVGADGET,firstlist()
  Redraw 0,#LVGADGET
Return

;=======================================================================
;=                            Selection                                =
;=                                                                     =
;= Handle user selection of an entry inside the listview gadget.       =
;=======================================================================
.Selection:
  FindItem{item}

  If currentmode=#DEVICELIST
    currentmode=#DIRLIST
    dir$=Mid$(firstlist()\name,7)
    Gosub GetDir
    Return
  EndIf

  If Left$(firstlist()\name,1)="*"
    ;The item is a directory - so move into it...
    If Right$(dir$,1)<>":" Then dir$+"/"
    dir$+Mid$(firstlist()\name,2)
    Gosub GetDir
  Else
    For h=1 To CountShapes{}:Free Shape h-1:Next h    ; Erase
    LoadShapes 0,dir$+firstlist()\name
    LESaveShapes 0,CountShapes{},dir$+firstlist()\name+".leshapes"
    For h=1 To CountShapes{}:Free Shape h-1:Next h    ; Erase
    Gosub GetDir
  EndIf
Return

;=======================================================================
;=                             Parent                                  =
;=                                                                     =
;= Move out of the current directory.                                  =
;=======================================================================
.Parent:
  If currentmode=#DEVICELIST Then Return

  If Right$(dir$,1)<>":"
    found=False
    pos=Len(dir$)
    While (found=False AND pos<>0)
      If Mid$(dir$,pos,1)="/"
        dir$=Left$(dir$,pos-1)
        found=True
      Else
        If Mid$(dir$,pos,1)=":"
          dir$=Left$(dir$,pos)
          found=True
        Else
          pos-1
        EndIf
      EndIf
    Wend

    If found
      Gosub GetDir
    EndIf
  Else
    currentmode=#DEVICELIST
    Gosub GetDir
  EndIf
Return

