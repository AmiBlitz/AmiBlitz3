; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "c:"
; ExeFile         = "CDPlayer"
; CreateIcon      = 1
; Residents       = "amigalibs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 5
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
; A font sensitive Encrypter for data files

;=======================================================================
;=                            RED Encrypter                            =
;=                                                                     =
;= Demonstration program for the RI Eval Library.                      =
;=                                                                     =
;= WARNING: Since this program saves data there is a chance that its   =
;= misuse could lead to loss of data.  No warranty is given with this  =
;= program - it is upto the user to ensure that their data is kept save=
;= and is properly backed up.                                          =
;=                                                                     =
;= To decrypt any encrypted data you will need to record the three     =
;= wheel positions (held in 3 input gadgets in the window) after       =
;= encryption has been performed.  Not recording these values will make=
;= it impossible to retrieve the data.                                 =
;=                                                                     =
;= This program is meant as a demonstration program ONLY.  Use of this =
;= program in any development situation is permitted BUT no the        =
;= authors accept no responsibility for loss of data.                  =
;=======================================================================

DEFTYPE.w

;=======================================================================
;=                         Constant Declarations                       =
;=======================================================================

#WINFLAGS=#WFLG_CLOSEGADGET|#WFLG_ACTIVATE|#WFLG_DRAGBAR|#WFLG_DEPTHGADGET
#WINFLAGS=#WINFLAGS | #WFLG_RMBTRAP

#WHEELBUTTONS     =0
#LOADBUTTON       =3
#SAVEBUTTON       =4
#ABOUTBUTTON      =5
#ENCRYPTBUTTON    =6
#RANDOMBUTTON     =7
#DECRYPTBUTTON    =8

;Gadget text position values
#_LEFT        =1
#_RIGHT       =2
#_ABOVE       =4
#_BELOW       =8

#_DISABLE     =$40

;=======================================================================
;=                            Statements                               =
;=======================================================================

;Centre a line of text about a given x coordinate in a given window
Statement CentreText{win.w,x.w,y.w,t$}
  Use Window win
  strlen.w=TextLength_(RastPort(win),t$,Len(t$))
  WLocate x-(strlen/2),y
  Print t$
End Statement

Statement SetWheels{}
  For wheel=0 To 2
    GTSetInteger 0,#WHEELBUTTONS+wheel,GetWheel(wheel+1)
  Next wheel
End Statement

;=======================================================================
;=                           Initialisation                            =
;=======================================================================
NoCli
WBStartup

Reserve 0,256

MaxLen pa$=192
MaxLen fi$=192

Dim wheelval.w(256)

prog$="RED Encrypter"

;***** Get the screen and font to use *****
WbToScreen 0
ShowScreen 0
*scr.Screen=Peek.l(Addr Screen(0))
*myfont.TextAttr=*scr\Font
fontheight=*myfont\ta_YSize
ad1.l=*myfont\ta_Name
fontname$=Peek$(ad1)

LoadFont 1,fontname$,fontheight,0

Gosub OpenGUI

;=======================================================================
;=                              Main Loop                              =
;=======================================================================
t$="Demo program for RIEvalLib|WARNING: You can permanently scramble your data|if you misuse this program.  Do not encrypt|"
t$=t$+"anything you have not got backed up.|"
t$=t$+"To decrypt data you must record the wheel|positions after encrypting the data."

reply=EZRequest(prog$,t$,"  Run Program  |  Don't Run  ")
If reply=0 Then End

Repeat
  ev.l=WaitEvent

; ***** Check to user events *****
  Select ev
    Case #IDCMP_GADGETUP
      Gosub DoGadgetUp
  End Select

Until ev=#IDCMP_CLOSEWINDOW

;***** Close down the program *****
End

;=======================================================================
;=                              OpenGUI                                =
;=                                                                     =
;= Open the graphical user interface.  This routine uses the OS call   =
;= TextLength_ to calculate the pixel width of a string, it then uses  =
;= these widths to size its gadgets horizontally.  This allows proper  =
;= sizes of gadgets even when using proportional fonts.                =
;=======================================================================
.OpenGUI:
  butwidth=TextLength_(*scr\_RastPort,"About",5)+14
  obutwidth=TextLength_(*scr\_RastPort,"Encrypt",7)+14
  wheelwidth=TextLength_(*scr\_RastPort,"Wheel 3:",8)+14

  xoffset=1
  yoffset=1

  gadpos=butwidth*5

  winheight=*scr\BarHeight+5+(3*(fontheight+4))

  x=xoffset
  y=yoffset

  gadx2=x+wheelwidth+butwidth
  gadx3=gadx2+72

  GTButton 0,#LOADBUTTON,x,y,butwidth,fontheight+4,"Load",0
  GTInteger 0,#WHEELBUTTONS+0,gadx2,y,64,fontheight+4,"Wheel 1:",#_LEFT,Rnd(256)
  GTButton 0,#RANDOMBUTTON,gadx3,y,obutwidth,fontheight+4,"Random",0

  y+fontheight+4
  GTButton 0,#SAVEBUTTON,x,y,butwidth,fontheight+4,"Save",#_DISABLE
  GTInteger 0,#WHEELBUTTONS+1,gadx2,y,64,fontheight+4,"Wheel 2:",#_LEFT,Rnd(256)
  GTButton 0,#ENCRYPTBUTTON,gadx3,y,obutwidth,fontheight+4,"Encrypt",#_DISABLE

  y+fontheight+4
  GTButton 0,#ABOUTBUTTON,x,y,butwidth,fontheight+4,"About",0
  GTInteger 0,#WHEELBUTTONS+2,gadx2,y,64,fontheight+4,"Wheel 3:",#_LEFT,Rnd(256)
  GTButton 0,#DECRYPTBUTTON,gadx3,y,obutwidth,fontheight+4,"Decrypt",#_DISABLE

  x=gadx3+obutwidth+8
  Window 0,0,fontheight+3,x+butwidth+8,winheight,#WINFLAGS,prog$,-1,-1
  AttachGTList 0,0
  WindowFont 1

  GTBevelBox 0,WLeftOff+x,WTopOff+1,butwidth,InnerHeight-2,0

  y=(InnerHeight/2)-fontheight

  CentreText{0,x+butwidth/2,y,"RWE"}
  CentreText{0,x+butwidth/2,y+fontheight,"1996"}
Return

;=======================================================================
;=                             DoGadgetUp                              =
;=                                                                     =
;= Handle the gadget events from the user.                             =
;=======================================================================
.DoGadgetUp:
  gad=GadgetHit
  If gad<#WHEELBUTTONS+3
    Return
  EndIf

  Select gad
    Case #LOADBUTTON
      fil$=ASLFileRequest$("Select load file:",pa$,fi$)
      If fil$<>""
        Erase 0

        If BLoad(fil$,0)=0
          EZRequest prog$,"Could not load the requested file.","  Ok  "
        EndIf

        If Length(0)
          GTEnable 0,#ENCRYPTBUTTON
          GTEnable 0,#DECRYPTBUTTON
        Else
          GTDisable 0,#SAVEBUTTON
          GTDisable 0,#ENCRYPTBUTTON
          GTDisable 0,#DECRYPTBUTTON
        EndIf

        Redraw 0,#SAVEBUTTON
        Redraw 0,#ENCRYPTBUTTON
        Redraw 0,#DECRYPTBUTTON
      EndIf

    Case #ABOUTBUTTON
      EZRequest prog$,"A demo program for the RIEncryptLib","  Ok  "

    Case #ENCRYPTBUTTON
      For wheel=0 To 2
        wheelval(wheel)=GTGetInteger(0,#WHEELBUTTONS+wheel)
      Next wheel

      Encrypt Start(0),Length(0),wheelval(0),wheelval(1),wheelval(2)

      GTEnable 0,#SAVEBUTTON
      GTDisable 0,#ENCRYPTBUTTON
      GTDisable 0,#DECRYPTBUTTON
      Redraw 0,#SAVEBUTTON
      Redraw 0,#ENCRYPTBUTTON
      Redraw 0,#DECRYPTBUTTON

      SetWheels{}

    Case #DECRYPTBUTTON
      For wheel=0 To 2
        wheelval(wheel)=GTGetInteger(0,#WHEELBUTTONS+wheel)
      Next wheel

      Decrypt Start(0),Length(0),wheelval(0),wheelval(1),wheelval(2)

      GTEnable 0,#SAVEBUTTON
      GTDisable 0,#ENCRYPTBUTTON
      GTDisable 0,#DECRYPTBUTTON
      Redraw 0,#SAVEBUTTON
      Redraw 0,#ENCRYPTBUTTON
      Redraw 0,#DECRYPTBUTTON

      SetWheels{}

    Case #SAVEBUTTON
      If Length(0)
        fil$=ASLFileRequest$("Select save filename:",pa$,fi$)
        If fil$<>""
          flag=1
          If Exists(fil$)
            EZRequest "Overwrite existing file?","Yes|No"
            If reply=0 Then flag=0
          EndIf

          If flag=1
            If BSave(fil$,0)
              EZRequest "Saved file okay.  Remember to record the|wheel positions in order to decrypt|it later."
            Else
              EZRequest "Could not save to the file"
            EndIf
          EndIf
        EndIf
      EndIf

    Case #RANDOMBUTTON
      For wheel=0 To 2
        GTSetInteger 0,#WHEELBUTTONS+wheel,Rnd(256)
      Next wheel
  End Select
Return

