; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "sys:wbstartup"
; ExeFile         = "Calc"
; CreateIcon      = 1
; Residents       = "amigalibs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 5
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
; A font sensitive commodity calculator

;=======================================================================
;=                       Calculator Demo Program                       =
;=                                                                     =
;= This program demonstrates using the RIEvalLib.  As a side effect,   =
;= it also demonstrates several other RI libraries, including          =
;= RIToolTypesLib and RICommoditiesLib.                                =
;=                                                                     =
;= The default 'popkey' for this program is CTRL LALT A - use this     =
;= keyboard sequence to open the calculator after compiling and running=
;= this code.  You can also open this program from Exchange.           =
;=======================================================================

#quitgadget=5
#pfgadget=4
#cyclegadget=3

DEFTYPE.w

Function.s StripLeading {a$}
  pos=0
  While Mid$(a$,pos,1)="0" AND pos<Len(a$)
    pos+1
  Wend
  Function Return Mid$(a$,pos)
End Function

;=======================================================================
;=                           Initialisation                            =
;=======================================================================
NoCli
WBStartup

Reserve 0,256

scrtitle$="Calculator"
popkey$="ctrl lalt a"

xpos=-1
ypos=-1
pf=0

comment$="Enter expression"

;=======================================================================
;=                           ToolType Check                            =
;=                                                                     =
;= Check the program tooltypes (if available) for a replace commodity  =
;= popkey.                                                             =
;=======================================================================

ad.l=Start(0)
a.l=GetProgramDir_
NameFromLock_ a,ad,256
path$=Peek$(ad)
a$=Right$(path$,1)
If a$<>":" AND a$<>"/" Then path$+"/"

If GetIconObject(path$+"Calc")
  If FindToolType("CX_POPKEY") Then popkey$=FindToolValue("CX_POPKEY")
  FreeIconObject
EndIf

;=======================================================================
;=                              Menu Setup                             =
;=======================================================================
GTMenuTitle 0,0,"Project"
GTMenuItem 0,0,0,0,"About...","A"
GTMenuItem 0,0,0,1,"Quit","Q"

;=======================================================================
;=                           Commodity Setup                           =
;=======================================================================
If MakeCommodity("Calculator","RWE Calculator","Popkey: "+popkey$)=0 Then End
If SetHotKey(0,popkey$)=0
  End
EndIf

;=======================================================================
;=                              Main Loop                              =
;=======================================================================
EZRequest "RWE Calculator","A demo program for the RIEvalLib|Use '"+popkey$+"' to open the calculator.","  Ok  "

AddWaitEvent PortSigBit(CommodityMsgPort),$800000
Repeat:
  ev.l=WaitEvent
  If ev=$800000
    If CommodityEvent
      ev=ExchangeMessage
      If ev=CxUnique OR ev=CxAppear Then Gosub Calculator
      If HotKeyHit<>-1 Then Gosub Calculator
    EndIf
  EndIf
Until ev=CxKill
End

;=======================================================================
;=                        Calculator Main Loop                         =
;=======================================================================
.Calculator:
Gosub findsc

LoadFont 1,fontname$,fontheight,0

Gosub opengui
If Peek.l(Addr Window(0))=0 Then Return

Repeat
  ev.l=WaitEvent
  gad=GadgetHit
  If ev=64
    Select gad
    Case 0
      Gosub DoCalc
    Case #cyclegadget
      mode=EventCode
      Gosub DoCalc
    Case #pfgadget
      pf=NOT(pf)
      Gosub opengui
    End Select
  EndIf

  a$=LCase$(Inkey$)

  If ev=$100
    If MenuHit=0
      If ItemHit=1 Then a$="q"
      If ItemHit=0
        EZRequest "Calculator","Written by Stephen McNamara|(C) 1996 Red When Excited","Continue"
      EndIf
    EndIf
  EndIf
  If a$=Chr$(13) Then ActivateString 0,0
  If a$="q" Then ev=64 : gad=#quitgadget
Until ev=$200 OR (ev=64 AND gad=#quitgadget)

If ev=64 AND gad=#quitgadget Then ev=CxKill Else ev=0

Gosub closegui
Poke.l Addr Screen(0),0
Return

;=======================================================================
;=                            Calculation                              =
;=======================================================================
.DoCalc:
  b$=GTGetString(0,0)               ; Get the gadget string
  ConvToPostFix b$,Start(0)         ; Convert it to postfix
  a.l=PFEvaluate(Peek$(Start(0)))   ; And evaluate it...
  If PFErrorType=0                  ; Check for errors
    Select mode
    Case 0
      a$=Str$(a)
    Case 1
      a$=Hex$(a)
      a$="$"+StripLeading{a$}
    Case 2
      a$=Bin$(a)
      a$="%"+StripLeading{a$}
    End Select
    comment$="Valid expression"
  Else
    a$=b$
    comment$=PFErrorText
  EndIf
  GTSetString 0,0,a$                ; Place the return value
  GTSetString 0,1,comment$          ; Place any comments
  If pf
    b$=Peek$(Start(0))
    GTSetString 0,2,b$
  EndIf
Return

;=======================================================================
;=                      Window Creation/Updating                       =
;=======================================================================
.opengui:
  If xpos=-1
    xpos=0
    ypos=fontheight+3
  EndIf

  If Peek.l(Addr Window(0))
    xpos=WindowX
    ypos=WindowY
  EndIf

  height=fontheight+6
  winheight=7+fontheight+(((height+2)*3)-2)
  If pf Then winheight+height+2

  adjust=0

  scrw=ScreenWidth
  scrh=ScreenHeight
  If scrw<320 OR scrh<winheight
    EZRequest "Calculator","Screen to small to open on!","_Abort"
    Return
  EndIf
  If xpos+320>scrw Then xpos=scrw-320:adjust=-1
  If ypos+winheight>scrh Then ypos=scrh-winheight:adjust=-1

  If Peek.l(Addr Window(0))=0
    Window 0,xpos,ypos,320,winheight,$201000+%1110,"",-1,-1
    CreateMenuStrip 0
    GTSetMenu 0
    EZOutput 0
    a$=""
  Else
    If adjust Then WMove xpos,ypos
    a$=GTGetString(0,0)
    Use Window 0
    x=WLeftOff
    y=WTopOff+((height+2)ASL1)
    DetachGTList 0
    Free GTList 0
    WSize 320,winheight
    InnerCls
  EndIf

  GTString 0,0,0,0,310,height,"",0,80,a$
  GTText   0,1,0,height+2,310,height,"",0,comment$
  y=(height+2)ASL1
  If pf
    GTText   0,2,0,y,310,height,"",0,""
    y+height+2
  EndIf

  GTCycle  0,3,0,y,210,height,"",0,"Decimal|Hexadecimal|Binary",mode
  GTButton 0,4,214,y,30,height,"PF",0
  GTButton 0,5,248,y,62,height,"_Quit",0

  AttachGTList 0,0
  WTitle scrtitle$,scrtitle$
Return

.closegui:
  Use Window 0
  xpos=WindowX
  ypos=WindowY
  GTUnSetMenu
  Free Window 0
  Free GTList 0
Return

.findsc:
  FindScreen 0
  *scr.Screen=Peek.l(Addr Screen(0))
  *myfont.TextAttr=*scr\Font
  fontheight=*myfont\ta_YSize
  ad1.l=*myfont\ta_Name
  fontname$=Peek$(ad1)
Return

