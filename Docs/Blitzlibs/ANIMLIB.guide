@DATABASE ANIMLIB
@Author Conversion program
@$VER: ANIMLIB V1.1 (27.01.2007)- Updated by mrodfr.
@NODE OVERVIEW "Overview of ANIMLIB"

                                  @{b}@{u}Overview@{ub}@{uu}


                          An Acid Software Library

                         Converted to AmigaGuide by

                            Red When Excited Ltd

                 Used with the permission of Acid Software

          Edited, fixed and cleaned by Toby Zuijdveld 26/02/1999.
                       mailto:hotcakes\@abacus.net.au



@ENDNODE OVERVIEW

@NODE Anim "ANIMLIB"

@{fg shine}Statement: Anim@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Anim - IFF Anim



@ENDNODE Anim

@NODE LoadAnim "ANIMLIB"

@{fg shine}Statement: LoadAnim@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : LoadAnim Anim#,Filename$[,Palette#]

The LoadAnim command will create an Anim object and load a DPaint 
compatible animation. The ILBMInfo command can be used to find the 
correct screensize and resolution for the anim file. The optional 
Palette# parameter can be used to load a palette with the anims correct 
colours. 

Notes: unlike more advanced anim formats DPaint anims use a single 
static palette for the entire animation. Like all other Blitz commands 
that access files the command must be executed in Amiga mode.


@ENDNODE LoadAnim

@NODE InitAnim "ANIMLIB"

@{fg shine}Statement: InitAnim@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : InitAnim Anim#[,BitMap#]

InitAnim renders the first two frames of the Anim onto the current 
BitMap and the BitMap specified by the second parameter. The second 
BitMap# parameter is optional, this is to support Anims that are not in 
a double-buffered format (each frame is a delta of the last frame not 
from two frames ago). However, the two parameter double buffered form 
of InitAnim should always be used. (hmmm don't ask me O.K.!)


@ENDNODE InitAnim

@NODE NextFrame "ANIMLIB"

@{fg shine}Statement: NextFrame@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : NextFrame Anim#

NextFrame renders the nextframe of an Anim to the current BitMap. If 
the last frame of an Anim has been rendered NextFrame will loop back to 
the start of the Animation.


@ENDNODE NextFrame

@NODE Frames "ANIMLIB"

@{fg shine}Function: Frames@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Frames (Anim#)

The Frames() function returns the number of frames in the specified 
Anim.


@ENDNODE Frames

@NODE MAIN "ANIMLIB"
.-----------------------------------------------------------------------------.
|                                  @{b}ANIMLIB@{ub}                                    |
`-----------------------------------------------------------------------------'

                             @{"     Overview     " link OVERVIEW}

                               Command Index                                

                                @{" Anim       " link Anim}
                                @{" Frames     " link Frames}
                                @{" InitAnim   " link InitAnim}
                                @{" LoadAnim   " link LoadAnim}
                                @{" NextFrame  " link NextFrame}

@ENDNODE MAIN

