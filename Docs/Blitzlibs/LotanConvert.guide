@DataBase "LotanConvert"
@$VER: LOTANCONVERTLIB V1.1 (27.01.2007)- Updated by mrodfr.

@Node Main "LotanConvert"

  @{b}Lotan's Convert Library 0.01 (07-02-99)@{ub}
  These functions are similar to the corresponding Arexx functions

    @{" d2c " link d2c} Function (String)
    @{" d2b " link d2b} Function
    @{" d2s " link d2s} Function (String)
    @{" d2x " link d2x} Function (String)
    @{" c2b " link c2b} Function (String)
    @{" c2d " link c2d} Function (Long)
    @{" c2x " link c2x} Function (String)
    @{" s2d " link s2d} Function (Long)
    @{" x2d " link x2d} Function (Long)

  @{b}Author@{ub}

    Olivier Laviale, Doumenge 46230 Montdoumerc, FRANCE

  @{b}Overview@{ub}

    People familiar with ARexx will surely appreciate this set, as functions are very
    close with ARexx ones.

    They are very good alternative to Blitz convertion functions.
@EndNode

@Node c2d "LotanConvert : c2d"

  @{b}@{u}c2d@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.l @{ui}= c2d(Str)
               @{i}rc.l @{ui}= c2d(Str,Len)

    @{b}Function@{ub} : Returns numeric value hold in a string.

               This function doesn't convert the value in @{fg highlight}Str@{fg text}, the value hold in  @{fg highlight}Str@{fg text}
               is  moved  in  @{b}rc@{ub}.  To  convert  a  string in a decimal number use @{fg highlight}s2d@{fg text}
               instead.

    @{b}Values@{ub}   : @{b}Len@{ub} specify the number of chars to move (1-4).

    @{b}Example@{ub}  : @{fg highlight}c2d@{fg text}("a")       >> 97         ($61)
               @{fg highlight}c2d@{fg text}("a",8)     >> 97         ($61)
               @{fg highlight}c2d@{fg text}("abcd")    >> 1633837924 ($61626364)
               @{fg highlight}c2d@{fg text}("abcd",1)  >> 97         ($61)
               @{fg highlight}c2d@{fg text}("abcd",8)  >> 1633837924 ($61626364)

    @{b}See also@{ub} : @{" d2c " link d2c}
               @{" s2d " link s2d}
@EndNode
@Node c2x "LotanConvert : c2x"

  @{b}@{u}c2x@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.s @{ui}= c2x(Str)
               @{i}rc.s @{ui}= c2x(Str,Len)

    @{b}Function@{ub} : Converts a decimal value hold in a string into an hexadecimal string.

               This function will do the same as @{fg highlight}d2x@{fg text}(@{fg highlight}c2d@{fg text}()).

    @{b}Values@{ub}   : If @{b}Len@{ub} is supplied, the result will be truncated  from  the  right  or
               padded with 0 to that size. @{b}Len@{ub} @{u}must@{uu} be higher than 0.

    @{b}See also@{ub} : @{" c2d " link c2d}
               @{" d2x " link d2x}
@EndNode
@Node d2b "LotanConvert : d2b"

  @{b}@{u}d2b@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.s @{ui}= d2b(Int)
               @{i}rc.s @{ui}= d2b(Int,Len)

    @{b}Function@{ub} : Converts a decimal into binary digits.

    @{b}Values@{ub}   : @{b}Int@{ub} is a decimal number.

               You can specify the number of characters to output using the  argument
               @{b}Len@{ub}  by  default  the  number  of characters returned is 32. If @{b}Len@{ub} is
               greater than 32 the result will be paded with zeros. If @{b}Len@{ub}  is  lower
               than 32 the result will be trucated.
@EndNode
@Node d2c "LotanConvert : d2c"

  @{b}@{u}d2c@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.s @{ui}= d2c(Int)
               @{i}rc.s @{ui}= d2c(Int,Len)

    @{b}Function@{ub} : Returns a numeric value into a string.

               This function does not converts @{b}Int@{ub} into it's ASCII representation, in
               fact @{b}Int@{ub} is moved into a string and returned. Use @{fg highlight}d2s@{fg text} for conversion.

    @{b}Values@{ub}   : If @{b}Len@{ub} is supplied, the result will be truncated  from  the  right  or
               padded with 0 to that size. @{b}Len@{ub} @{u}must@{uu} be higher than 0.

    @{b}Example@{ub}  : a.s = @{fg highlight}d2c@{fg text}($61626364)     >> "d"
               a.s = @{fg highlight}d2c@{fg text}($61626364,2)   >> "ab"
               a.s = @{fg highlight}d2c@{fg text}($61626364,4)   >> "abcd"
               a.s = @{fg highlight}d2c@{fg text}($61626364,8)   >> "....abcd"  (dots  are  null
                                        chars.)

    @{b}See also@{ub} : @{" c2d " link c2d}
               @{" d2s " link d2s}
@EndNode
@Node d2s "LotanConvert : d2s"

  @{b}@{u}d2s@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.s @{ui}= d2s(Int)
               @{i}rc.s @{ui}= d2s(Int,Len)

    @{b}Function@{ub} : Converts a numeric value into a string.

    @{b}Example@{ub}  : @{fg highlight}d2s@{fg text}(52)      >>    "52"
               @{fg highlight}d2s@{fg text}(52,2)    >>    "52"
               @{fg highlight}d2s@{fg text}(52,4)    >>  "0052"
               @{fg highlight}d2s@{fg text}(5200,3)  >>   "200"
               @{fg highlight}d2s@{fg text}(-52,4)   >>  "-054"

    @{b}See also@{ub} : @{" s2d " link s2d}
@EndNode
@Node d2x "LotanConvert : d2x"

 BUGS  BUGS  BUGS  BUGS  BUGS  BUGS  BUGS  BUGS  BUGS  BUGS  BUGS  BUGS

  @{b}@{u}d2x@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.s @{ui}= d2x(Int)
               @{i}rc.s @{ui}= d2x(Int,Len)

    @{b}Function@{ub} : Converts a numeric value into an hexadecimal string.

    @{b}Values@{ub}   : If @{b}Len@{ub} is supplied, the result will be truncated  from  the  right  or
               padded with 0 to that size. @{b}Len@{ub} @{u}must@{uu} be higher than 0.

    @{b}Example@{ub}  : a.s = @{fg highlight}d2x@{fg text}($12345678)     >> "12345678"
               a.s = @{fg highlight}d2x@{fg text}($12345678,3)   >> "123"
               a.s = @{fg highlight}d2x@{fg text}($12345678,12)  >> "000012345678"
               a.s = @{fg highlight}d2x@{fg text}($12,12)        >> "000000000012"

    @{b}See also@{ub} : @{" x2d " link x2d}
@EndNode
@Node s2d "LotanConvert : s2d"

  @{b}@{u}s2d@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.l @{ui}= s2d(Str)

    @{b}Function@{ub} : Converts a string into a numeric value.

    @{b}Example@{ub}  : @{fg highlight}s2d@{fg text}("52") >> 52
               @{fg highlight}s2d@{fg text}("52Olivier32") >> 52

    @{b}See also@{ub} : @{" d2s " link d2s}
@EndNode
@Node x2d "LotanConvert : x2d"

  @{b}@{u}x2d@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.l @{ui}= x2d(Str)

    @{b}Function@{ub} : Converts a string of hexadecimal digits to a whole decimal number.

               Str must be an expression that evaluates to a valid hex  number  --  a
               string  of digits and/or the characters "a" through "f" or "A" through
               "F".

    @{b}Example@{ub}  : @{fg highlight}x2d@{fg text}("416D6967")    >> 1097689447
               @{fg highlight}x2d@{fg text}("464653")      >> 4605523

    @{b}See also@{ub} : @{" d2x " link d2x}
@EndNode
