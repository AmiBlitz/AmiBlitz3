@DATABASE LocaleV1.10
@$VER: Locale V1.10 (27.01.2007)- Updated by mrodfr. (21.11.1998) by Laboureur -> AlphaSOUND <- Frédéric
@NODE MAIN "Locale V1.10"

    @{b}Locale V1.00 General Information:@{ub}

  * Blitz Basic II library number         : #137
  * Library size when linked to executable: 428 bytes
  * Number of commands                    : 4
  * Resources automatically freed at end  : Yes

  NInitLocale() must be put before any other Locale functions. Don't
  forget to turn the @{"debugger" LINK "/Tools/RedDebugger.guide/Main"} ON when developing.

  Note: This library isn't fully finished, you can ONLY have
  one catalog open at any one time ! So don't forget to close the
  previously opened catalog before opening a new one.

    @{b}Commands summary:@{ub}

  @{" NCloseCatalog     " LINK NCloseCatalog} Statement
  @{" NGetCatalogString " LINK NGetCatalogString} Function (String)
  @{" NInitLocale       " LINK NInitLocale} Command (Boolean)
  @{" NOpenCatalog      " LINK NOpenCatalog} Command (CatalogID)
 
@ENDNODE


@NODE NInitLocale

    @{b}SYNTAX@{ub}
  result.l = NInitLocale

    @{b}FUNCTION@{ub}
  Init all the Locale  environments for  later  use.  You  must  put  this
  function at the top of  your  source code if you want to use the NLocale
  commands. This command tries to open the locale.library, so if it fails,
  it will return 0. Please always use this function to check whether the
  locale is found or not.

@ENDNODE


@NODE NOpenCatalog

    @{b}SYNTAX@{ub}
  CatalogID.l = NOpenCatalog(FileName$, TagList)

    @{b}FUNCTION@{ub}
  Tries to open the specified catalog file. Note it searches in the
  PROGDIR:Catalogs/ before searching LOCALE:Catalogs, so try to
  keep your catalogs in the software drawer to ensure that removal
  is faster (only delete the software drawer).

  If CatalogID is NULL, no catalogs are found.

@ENDNODE


@NODE NCloseCatalog

    @{b}SYNTAX@{ub}
  NCloseCatalog

    @{b}STATEMENT@{ub}
  Close the previously opened catalog.

@ENDNODE


@NODE NGetCatalogString

    @{b}SYNTAX@{ub}
  Text$ = NGetCatalogString(TextNumber)

    @{b}FUNCTION@{ub}
  Return the catalog string corresponding to the given number.

@ENDNODE



