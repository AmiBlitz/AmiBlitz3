@DATABASE MenuV1.27
@$VER: GadTools V1.27 (27.01.2007)- Updated by mrodfr. (31.01.1999) by Laboureur -> AlphaSOUND <- Frédéric
@NODE MAIN "Menu V1.27"

    @{b}Menu V1.26 General Information:@{ub}

  * Blitz Basic II library number         : #181
  * Library size when linked to executable: 956 bytes
  * Number of commands                    : 14
  * Resources automatically freed at end  : Yes

  NInitMenu() must be put before any other Menu functions
  or you will enjoy BIG crashes.

  @{" NAttachMenu        " LINK NAttachMenu} Statement
  @{" NCreateMenu        " LINK NCreateMenu} Function (long)
  @{" NFreeMenu          " LINK NFreeMenu} Statement
  @{" NInitMenu          " LINK NInitMenu} Command (long)
  @{" NMenuBar           " LINK NMenuBar} Statement
  @{" NMenuCheckItem     " LINK NMenuCheckItem} Statement
  @{" NMenuCheckSubItem  " LINK NMenuCheckSubItem} Statement
  @{" NMenuItem          " LINK NMenuItem} Statement
  @{" NMenuTitle         " LINK NMenuTitle} Statement
  @{" NMenuSubBar        " LINK NMenuSubBar} Statement
  @{" NMenuSubItem       " LINK NMenuSubItem} Statement
  @{" NMenuToggleItem    " LINK NMenuToggleItem} Statement
  @{" NMenuToggleSubItem " LINK NMenuToggleSubItem} Statement
  @{" NSetMenuColour     " LINK NSetMenuColour} Statement

@ENDNODE


@NODE NAttachMenu

    @{b}SYNTAX@{ub}
  NAttachMenu #Menu, WindowID

    @{b}STATEMENT@{ub}
  Attach the specified menu to the given window.

  To Detach a menu from a window, you must use the NDetachMenu()
  command of the NWindow.library.

@ENDNODE


@NODE NCreateMenu

    @{b}SYNTAX@{ub}
  NCreateMenu #Menu, ScreenID

    @{b}STATEMENT@{ub}
  Creates a previously-defined menu, and attaches it to ScreenID.

@ENDNODE


@NODE NMenuTitle

    @{b}SYNTAX@{ub}
  NMenuTitle &Title$

    @{b}STATEMENT@{ub}
  Creates a title entry for the menu

@ENDNODE


@NODE NMenuItem

    @{b}SYNTAX@{ub}
  NMenuItem MenuID, &Text$, &ShortCut

    @{b}STATEMENT@{ub}
  Creates an item entry for the menu.

@ENDNODE


@NODE NMenuSubItem

    @{b}SYNTAX@{ub}
  NMenuSubItem MenuID, &Text$, &ShortCut

    @{b}STATEMENT@{ub}
  Creates a subitem entry for the menu.

@ENDNODE


@NODE NMenuBar

    @{b}SYNTAX@{ub}
  NMenuBar

    @{b}STATEMENT@{ub}
  Creates a separator bar for the menu.

@ENDNODE


@NODE NMenuSubBar

    @{b}SYNTAX@{ub}
  NMenuSubBar

    @{b}STATEMENT@{ub}
  Creates a separator bar for the menu.

@ENDNODE



@NODE NSetMenuColour

    @{b}SYNTAX@{ub}
  NSetMenuColour colour

    @{b}STATEMENT@{ub}
  Set the front menu colour for newly-created  menus.  Must  be  called
  before the create menu command or it wonn't have any effect.

@ENDNODE


@NODE NFreeMenu

    @{b}SYNTAX@{ub}
  NFreeMenu #Menu

    @{b}STATEMENT@{ub}
  Remove the specified menu from memory. After calling this function,
  you can't attach this menu anymore, but you can reuse the #menu
  number for another menulist.

@ENDNODE


@NODE NMenuCheckItem

    @{b}SYNTAX@{ub}
  NMenuCheckItem #Item, &Label$, &CommandKey$, State

    @{b}STATEMENT@{ub}
  Add a 'Check' type menu entry to the menu list
  which is being created.

@ENDNODE


@NODE NMenuCheckSubItem

    @{b}SYNTAX@{ub}
  NMenuCheckSubItem #Item, &Label$, &CommandKey$, State

    @{b}STATEMENT@{ub}
  Add a 'Check' type menu sub-entry to the menu list
  which is being created.

@ENDNODE


@NODE NMenuToggleItem

    @{b}SYNTAX@{ub}
  NMenuToggleItem #Item, &Label$, &CommandKey$, State

    @{b}STATEMENT@{ub}
  Add a 'Toggle' type menu entry to the menu list
  which is being created.

@ENDNODE


@NODE NMenuToggleSubItem

    @{b}SYNTAX@{ub}
  NMenuToggleSubItem #Item, &Label$, &CommandKey$, State

    @{b}STATEMENT@{ub}
  Add a 'Tioggle' type menu sub-entry to the menu list
  which is being created.

@ENDNODE
