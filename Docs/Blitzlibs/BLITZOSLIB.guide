@DATABASE BLITZOSLIB
@Author Conversion program
@$VER: BLITZOSLIB V1.1 (27.01.2007)- Updated by mrodfr.
@NODE OVERVIEW "Overview of BLITZOSLIB"

                                  @{b}@{u}Overview@{ub}@{uu}


This blitzlib can be used in blitzmode to provide some kind of gadgets to the user.

It draws boxes into a given bitmap and checks interactions with the mousepointer.
The boxes can behave similar to intuition gadget types.

Currently there are textbuttons, proportional slider gadgets, labels and shape boxes.

@ENDNODE OVERVIEW

@NODE Page "BLITZOSLIB"

@{fg shine}Statement: Page@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Page 

A page is the object of this blitzlib that handles the boxes that are defined
in it. A page can be  @{"initiated" link InitPage} and @{"freed" link FreePage}.

@ENDNODE Page

@NODE InitPage "BLITZOSLIB"

@{fg shine}Statement: InitPage@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : InitPage Page#,BitMap#,NumBoxes

To use the functions of the blitzlib, a page has to be initiated to store all
information about the current "page" on the screen.

Page#     The Id of the page to be identified with
BitMap#   A page needs a bitmap to draw its objects on
NumBoxes  The number of boxes the page should handle

@ENDNODE InitPage

@NODE FreePage "BLITZOSLIB"

@{fg shine}Statement: FreePage@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : FreePage Page#

Frees the page with Id Page# from memory.

@ENDNODE FreePage

@NODE AddBox "BLITZOSLIB"

@{fg shine}Statement: AddBox@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : AddBox Page#,Box#,x,y,w,h,type[,text$]|[,shape,shape]

This command adds a new box to the given page.
The box can be placed freely on the page (the corresponding bitmap).

The parameter type can be used to change the purpose of the box:

 0 box with frame, without any function, can be used as a static text frame
 1 box without frame, without any function, can be used as label frame
 2 standard gadget
 3 standard gadget, will be rendered as selected 
 4 text input gadget
 6 propotional gadget
10 <unknown>
12 <unknown>

@ENDNODE AddBox

@NODE RedrawPage "BLITZOSLIB"

@{fg shine}Statement: RedrawPage@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : RedrawPage 

Draws all boxes of the current page.

@ENDNODE RedrawPage

@NODE RedrawBox "BLITZOSLIB"

@{fg shine}Statement: RedrawBox@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : RedrawBox Box#

Redraws the box with the number Box.

@ENDNODE RedrawBox

@NODE SelectBox "BLITZOSLIB"

@{fg shine}Statement: SelectBox@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SelectBox [Box#]|[x+,y+][0,x,y] ;deselects previously selected

Selects either the box with the given Box# oder the given coordinates.

@ENDNODE SelectBox

@NODE ActivateSelectedBox "BLITZOSLIB"

@{fg shine}Statement: ActivateSelectedBox@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : ActivateSelectedBox 

Activates the selected box of the last event for e.g. input.


@ENDNODE ActivateSelectedBox

@NODE SetBox "BLITZOSLIB"

@{fg shine}Statement: SetBox@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SetBox Box#[,Value]|[xprop,yprop]

Sets the value of a box, or the x,y-propotional values of a propotional box.

@ENDNODE SetBox

@NODE BoxValue "BLITZOSLIB"

@{fg shine}Function: BoxValue@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : =BoxValue (Box#)|(Page#,Box#)

Gets the value of a box

@ENDNODE BoxValue

@NODE SetBoxString "BLITZOSLIB"

@{fg shine}Statement: SetBoxString@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SetBoxString Box#,String$

Sets the string value of an input box. 

@ENDNODE SetBoxString

@NODE BoxString "BLITZOSLIB"

@{fg shine}Function: BoxString@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : =BoxString (Box#)|(Page#,Box#)

Gets the current string value of a string box.

@ENDNODE BoxString

@NODE BoxShow "BLITZOSLIB"

@{fg shine}Statement: BoxShow@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : BoxShow Box#[,Bitmap#,x,y]|[dx,dy]

Moves an existing box to another position.

@ENDNODE BoxShow

@NODE BoxSelected "BLITZOSLIB"

@{fg shine}Function: BoxSelected@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : =BoxSelected 

Returns the current selected box of the last blitzevent.

@ENDNODE BoxSelected

@NODE BoxPrint "BLITZOSLIB"

@{fg shine}Statement: BoxPrint@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : BoxPrint Box#[,String$]|[Bank#,Line]

<the purpose of this statment is unknown.>

@ENDNODE BoxPrint

@NODE SetBoxColor "BLITZOSLIB"

@{fg shine}Statement: SetBoxColor@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SetBoxColor Box#,color

Sets the maincolor of the given box.

@ENDNODE SetBoxColor

@NODE BlitzEvent "BLITZOSLIB"

@{fg shine}Statement: BlitzEvent@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : BlitzEvent ;handles user input and returns event

This statement handles all the interaction with the boxes and should be 
used in a loop.

It returns "True" if there was any event concerning the boxes and immediataly
updates all boxes that had any interaction with.

@ENDNODE BlitzEvent

@NODE SetBoxTitle "BLITZOSLIB"

@{fg shine}Statement: SetBoxTitle@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SetBoxTitle Box#,String$

Sets the title of a standard gadget.

@ENDNODE SetBoxTitle

@NODE DisableBox "BLITZOSLIB"

@{fg shine}Statement: DisableBox@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : DisableBox Box#

Disables a box so that there is not interaction possible anymore.
A disabled box will be grayed out.

@ENDNODE DisableBox

@NODE EnableBox "BLITZOSLIB"

@{fg shine}Statement: EnableBox@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : EnableBox Box#

Enables a box if it was disabled before.

@ENDNODE EnableBox

@NODE MAIN "BLITZOSLIB"

.-----------------------------------------------------------------------------.
|                                 @{b}BLITZOSLIB@{ub}                                  |
`-----------------------------------------------------------------------------'

                             @{"     Overview     " link OVERVIEW}

                               Command Index                                

       @{" ActivateSelectedBox  " link ActivateSelectedBox}                @{" AddBox               " link AddBox}
       @{" BlitzEvent           " link BlitzEvent}                @{" BoxPrint             " link BoxPrint}
       @{" BoxSelected          " link BoxSelected}                @{" BoxShow              " link BoxShow}
       @{" BoxString            " link BoxString}                @{" BoxValue             " link BoxValue}
       @{" DisableBox           " link DisableBox}                @{" EnableBox            " link EnableBox}
       @{" FreePage             " link FreePage}                @{" InitPage             " link InitPage}
       @{" Page                 " link Page}
       @{" RedrawBox            " link RedrawBox}                @{" RedrawPage           " link RedrawPage}
       @{" SelectBox            " link SelectBox}                @{" SetBox               " link SetBox}
       @{" SetBoxColor          " link SetBoxColor}                @{" SetBoxString         " link SetBoxString}
       @{" SetBoxTitle          " link SetBoxTitle}

@ENDNODE MAIN

