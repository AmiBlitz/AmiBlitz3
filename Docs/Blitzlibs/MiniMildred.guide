@DATABASE MINIMILDRED.guide
@$VER: MINIMILDREDLIB V1.1 (27.01.2007)- Updated by mrodfr.
@node main "MINIMILDRED"

Blitz library 'blitzlibs:userlibs/MiniMildred.obj' (#16)

@{"MMC2PROWLACING      " link "MMC2PROWLACING"}
@{"MMC2PCOLUMNLACING   " link "MMC2PCOLUMNLACING"}
@{"MMC2PROWTOGGLE      " link "MMC2PROWTOGGLE"}
@{"MMC2PCOLUMNTOGGLE   " link "MMC2PCOLUMNTOGGLE"}
@{"MMC2PTOGGLESINGLE   " link "MMC2PTOGGLESINGLE"}
@{"MMC2PTOGGLEDOUBLE   " link "MMC2PTOGGLEDOUBLE"}
@{"MMC2PTOGGLETRIPLE   " link "MMC2PTOGGLETRIPLE"}
@{"MMC2PTOGGLE         " link "MMC2PTOGGLE"}
@{"MM040C2PUSAGE       " link "MM040C2PUSAGE"}
@{"MMC2PCPUMODE        " link "MMC2PCPUMODE"}
@{"MMC2PWINDOW         " link "MMC2PWINDOW"}
@{"MMC2PWINDOWWIDTH    " link "MMC2PWINDOWWIDTH"}
@{"MMC2PWINDOWHEIGHT   " link "MMC2PWINDOWHEIGHT"}
@{"MMC2PWINDOWNEWHEIGHT" link "MMC2PWINDOWNEWHEIGHT"}
@{"MMC2P               " link "MMC2P"}
@{"MMRESERVEC2PWINDOWS " link "MMRESERVEC2PWINDOWS"}
@{"MMFREEC2PWINDOWS    " link "MMFREEC2PWINDOWS"}
@{"MMFREEC2PWINDOW     " link "MMFREEC2PWINDOW"}
@{"MMADDRC2PWINDOW     " link "MMADDRC2PWINDOW"}
@{"MMUSEC2PWINDOWS     " link "MMUSEC2PWINDOWS"}
@{"MMUSEC2PWINDOW      " link "MMUSEC2PWINDOW"}
@{"MMUSEDC2PWINDOW     " link "MMUSEDC2PWINDOW"}
@{"MMAUTOUSEC2PWINDOWS " link "MMAUTOUSEC2PWINDOWS"}
@{"MMCOPYC2PWINDOW     " link "MMCOPYC2PWINDOW"}
@{"MMGENERICPTR        " link "MMGENERICPTR"}
@endnode

@node MMC2PROWLACING "MMc2pRowLacing "

MMc2pRowLacing State.b ; Toggle row-lacing in c2p On/Off. NonZero=On
@endnode

@node MMC2PCOLUMNLACING "MMc2pColumnLacing"

MMc2pColumnLacing State.b ; Toggle column-lacing in c2p On/Off
@endnode

@node MMC2PROWTOGGLE "MMc2pRowToggle"

MMc2pRowToggle  ; Toggle c2p row lacing between Even/Odd rows
@endnode
@node MMC2PCOLUMNTOGGLE "MMc2pColumnToggle"

MMc2pColumnToggle  ; Toggle c2p column lacing between Even/Odd columns
@endnode

@node MMC2PTOGGLESINGLE "MMc2pToggleSingle"

MMc2pToggleSingle  ; Toggle c2p lacing for single-buffered display
@endnode
@node MMC2PTOGGLEDOUBLE "MMc2pToggleDouble"

MMc2pToggleDouble Buf.b ; 0 or 1. Toggle c2p lacing for double-buffered display
@endnode
@node MMC2PTOGGLETRIPLE "MMc2pToggleTriple"

MMc2pToggleTriple Buf.b ; 0, 1 or 2. Toggle c2p lacing for triple-buffered display
@endnode

@node MMC2PTOGGLE "MMc2pToggle"

MMc2pToggle Buffers.b,Buf.b ; 1, 2 or 3, and 0, 1 or 2. Toggle c2p lacing.
@endnode
@node MM040C2PUSAGE "MM040c2pUsage"

MM040c2pUsage Status.b ; On/Off - Availability of 040 c2p. Overrides Mc2pCPUmode
@endnode
@node MMC2PCPUMODE "MMc2pCPUmode"

MMc2pCPUmode CPU.b ; Set cpu c2p uses. Use Blitz's `Processor'. <4=030-, 4=040+
@endnode
@node MMC2PWINDOW "MMc2pWindow"

MMc2pWindow c2pWindow#.w,OpWidth.w,OpHeight.w[,SourceBWidth.w[,Processor.b],PlanarWidth.w,PlanarHeight.w]
@endnode
@node MMC2PWINDOWWIDTH "MMc2pWindowWidth"

MMc2pWindowWidth (c2pWindowNumber.w) ; Returns width of c2pWindow
@endnode
@node MMC2PWINDOWHEIGHT "MMc2pWindowHeight"

MMc2pWindowHeight (c2pWindowNumber.w) ; Returns height of c2pWindow
@endnode
@node MMC2PWINDOWNEWHEIGHT "MMc2pWindowNewHeight"

MMc2pWindowNewHeight c2pWindow#.w,NewHeight.w ; Change height of already defined c2p object
@endnode
@node MMC2P "MMc2p"

MMc2p c2pWindow#.w,Chunky.l,Planar.l ; Convert chunky to planar (Use Mc2pWindow first)
@endnode
@node MMRESERVEC2PWINDOWS "MMReservec2pWindows"

MMReservec2pWindows [(]NumberOfWindows.w[)] ; Reserve structure-memory for c2pWindows
@endnode
@node MMFREEC2PWINDOWS "MMFreec2pWindows"

MMFreec2pWindows [Firstc2pWindow.w,Lastc2pWindow.w] ; Free/delete all/range of c2pwindows
@endnode
@node MMFREEC2PWINDOW "MMFreec2pWindow"

MMFreec2pWindow  Free/delete a pre-existing c2pWindow
@endnode
@node MMADDRC2PWINDOW "MMAddrc2pWindow"

MMAddrc2pWindow (c2pWindowNumer.w} ; Returns address of c2pWindow structure
@endnode
@node MMUSEC2PWINDOWS "MMUsec2pWindows"

MMUsec2pWindows Mainc2pWindowNum.w[,Secondc2pWindowNum.w[,Thirdc2pWindowNum.w]] ; Current to use
@endnode
@node MMUSEC2PWINDOW "MMUsec2pWindow"

MMUsec2pWindow c2pWindowNumber.w ; Current to use
@endnode
@node MMUSEDC2PWINDOW "MMUsedc2pWindow"

MMUsedc2pWindow  ; Returns currently used c2pWindow
@endnode
@node MMAUTOUSEC2PWINDOWS "MMAutoUsec2pWindows"

MMAutoUsec2pWindows True/False ; Automatically `use' new c2pWindows. <>0=True
@endnode
@node MMCOPYC2PWINDOW "MMCopyc2pWindow"

MMCopyc2pWindow Sourcec2pWindow.w,Destc2pWindow.w ; Copy definition-data only
@endnode
@node MMGENERICPTR "MMGenericPtr"

MMGenericPtr Xpos.w,Ypos.w,BaseAddress.l,RowWidth.w ; Calculate and return address based on inputs
@endnode


