@DataBase "LotanArgs"
@$VER: LOTANARGSLIB V1.1 (27.01.2007)- Updated by mrodfr.
@Node Main "LotanArgs"

  @{b}Lotan's Args Library 0.02 (19-05-99)@{ub}

    @{" cArg        " link cArg} Function (Long)
    @{" ReadArgs    " link ReadArgs} Function (Long)
    @{" WBArg       " link WBArg} Function (String)
    @{" WBArgs      " link WBArgs} Function (Long)
    @{" wbmessage   " link wbmessage} Command (Long)

  @{b}Author@{ub}

    Olivier Laviale, Doumenge 46230 Montdoumerc, FRANCE

  @{b}Overview@{ub}

    I made this set because @{b}CLIArgs@{ub} really sucks... I made it especially to have good
    functions for parsing arguments.

  @{b}Note@{ub}

    Don't use @{fg highlight}WBStartup@{fg text} with @{b}LotanArgs@{ub}, because the @{i}WBStartup code@{ui}  is  automatically
    added to be able to parse Workbench arguments.

  @{b}See also@{ub}

    @{" History " link HIST}
@EndNode

@Node cArg "LotanArgs : cArg"

  @{b}@{u}cArg@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.l @{ui}= cArg(Num)

    @{b}Function@{ub} : Returns the address of a parsed CLI argument.

    @{b}See also@{ub} : @{" ReadArgs " link ReadArgs}
               @{" wArg     " link wArg}
@EndNode
@Node ReadArgs "LotanArgs : ReadArgs"

  @{b}@{u}ReadArgs@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.l @{ui}= ReadArgs(Template)

    @{b}Function@{ub} : Used to parse CLI arguments.

    @{b}Values@{ub}   : @{b}Template@{ub} is the template that will be used  to  check  arguments,  and
               manage them. The template describe the kind of each argument :

               /S : This argument is a switch.
               /A : This argument is absolutely necessery.
               /N : This argument is a number.
               /M : This argument handles multiple parameter.
               /K : This argument requires a key-word.

               This template is printed if the user enter "?".

               @{b}rc@{ub} is a pointer to the @{i}RDArgs structure@{ui} initialized by @{fg highlight}ReadArgs@{fg text}.

    @{b}Example@{ub}  : @{fg highlight}If ReadArgs@{fg text}("FILE/A,OLDFILE,NUM/A/N,ALL/S,LINE/N,TITLE/K")
                  NFile.s = @{fg highlight}PeekS@{fg text}(@{fg highlight}Arg@{fg text}(0))
                  OFile.s = @{fg highlight}PeekS@{fg text}(@{fg highlight}Arg@{fg text}(1))
                  nFich.s = @{fg highlight}PeekL@{fg text}(@{fg highlight}Arg@{fg text}(2))
                  All.b   = @{fg highlight}Arg@{fg text}(3)
                  nLine.l = @{fg highlight}PeekL@{fg text}(@{fg highlight}Arg@{fg text}(4))
                  Title.s = @{fg highlight}PeekS@{fg text}(@{fg highlight}Arg@{fg text}(5))
               @{fg highlight}Else
                  PrintFault_ IoErr_@{fg text},"Test"
               @{fg highlight}EndIf@{fg text}

    @{b}Note@{ub}     : This function requires AmigDOS 2.0 or above.

               Don't use @{fg highlight}FreeArgs()@{fg text} to free the @{i}RDArgs structure@{ui}, this structure will
               be automaticaly freed at the end of your program.

    @{b}See also@{ub} : @{" cArg         " link cArg}
               @{" PeekS        " link LotanMem.guide/PeekS}
                PrintFault() on dos.doc on NDK.
               @{" wArg         " link wArg}
@EndNode
@Node wArg "LotanArgs : wArg"

  @{b}@{u}wArg@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.s @{ui}= wArg(Num)

    @{b}Function@{ub} : Used to get arguments passed by the Workbench.

    @{b}Values@{ub}   : @{b}Num@{ub} is the argument number of the argument you want to get. Note  that
               argument 0 is always the path and the name of your program.

    @{b}Example@{ub}  : Let's say you  start your program called @{i}Test @{ui}from @{i}Ram Disk  @{ui}with,  as
               argument,  the  partition  @{i}Sys@{ui}, the drawer @{i}Tools@{ui} of the partition, and
               the file @{i}SnoopDOS @{ui}of the drawer.

               @{fg highlight}wArg@{fg text}(0)   >> "Ram Disk:Test"
               @{fg highlight}wArg@{fg text}(1)   >> "Sys:"
               @{fg highlight}wArg@{fg text}(2)   >>  "Sys:Tools/"
               @{fg highlight}wArg@{fg text}(3)   >> "Sys:Tools/SnoopDOS"

    @{b}Example@{ub}  : Use this to get all arguments, without the name of your program :

               @{fg highlight}For@{fg text} i.b = 1 @{fg highlight}To WBArgs@{fg text}-1
                  @{fg highlight}EZRequest wArg@{fg text}(i)
               @{fg highlight}Next@{fg text}

    @{b}See also@{ub} : @{" WBArgs    " link WBArgs}
               @{" wbmessage " link wbmessage}
@EndNode
@Node WBArgs "LotanArgs : WBArgs"

  @{b}@{u}WBArgs@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.l @{ui}= WBArgs

    @{b}Function@{ub} : Used to known how many arguments have been passed by the Workbench.

               @{fg highlight}WBArgs@{fg text} will at least return 1, never 0, because there  is  always  one
               argument passed : the path and the name of your program.

    @{b}See also@{ub} : @{" wArg      " link wArg}
               @{" wbmessage " link wbmessage}
@EndNode
@Node wbmessage "LotanArgs : wbmessage"

  @{b}@{u}wbmessage@{ub}@{uu}

    @{b}Syntax@{ub}   : wbmessage
               @{i}rc.l @{ui}= wbmessage

    @{b}Function@{ub} : Used to known if program was started from CLI or Workbench.

               It will return 0 if your  program  was  started  from  the  Shell/CLI,
               otherwise  it  will  return  a  pointer to the Workbench message which
               contains information about the icons selected  when  you  started  the
               program from Workbench.

    @{b}Example@{ub}  : @{fg highlight}If wbmessage
                  EZRequest@{fg text} "Started from Workbench"
               @{fg highlight}Else
                  Printf@{fg text} "Started from Shell/CLI\n"
               @{fg highlight}EndIf@{fg text}

    @{b}See also@{ub} : @{" WBArgs " link WBArgs}
               @{" WBArg  " link WBArg}
@EndNode

@Node HIST "LotanArgs : History"
@Prev Main

  @{b}@{u}History@{ub}@{uu}

    @{b}0.00@{ub}

      All commands were moved from @{fg highlight}LotanSystem@{fg text}.

    @{b}0.01@{ub}

      Reduce the code and squash some bugs.

    @{b}0.02@{ub}

      Renamed @{fg highlight}Arg@{fg text} to @{fg highlight}cArg@{fg text} and @{fg highlight}WBArg@{fg text} to @{fg highlight}wArg@{fg text}.

  @{b}@{u}See also@{ub}@{uu}

    @{" BlitzLibs / LotanSystem " link LotanSystem.guide/Main}
@EndNode
