@database 08448218-5
@master Blitz2:Docs/wzlib.guide
@$VER: 1.0
@author ""
@(c) ""
@width 96
@remark Created with Heddley v1.20� � Edd Dumbill 1994-5

@node "Main" "wizlib""

                          @{"About this library" link "About" 0}

 ************************ Window Commands *********************************

 @{"WZWindow    " link "wzwindow" 0} @{"WZCloseWindow" link "wzclosewindow" 0}  @{"WZWindowAddr" link "wzwindowaddr" 0} @{"WZXFontsize  " link "WZXFontsize" 0} @{"WZYFontsize" link "WZYFontsize" 0}
 @{"WZSurface   " link "WZSurface" 0} @{"WZHandle     " link "WZHandle" 0}  @{"WZTags      " link "WZTags" 0} @{"WZDoubleclick" link "WZDoubleclick" 0}



 ************************ Gadget Commands *********************************

 @{"WZGadHit    " link "WZGadHit" 0} @{"WZGadName    " link "wzgadname" 0}  @{"WZInput     " link "WZInput" 0} @{"WZPrint      " link "wzprint" 0}
 @{"WZEnable    " link "wzenable" 0} @{"WZDisable    " link "wzdisable" 0}  @{"WZGadAddr   " link "WZGadAddr" 0} @{"WZGadHelp    " link "WZGadHelp" 0}



 ************************ Menu Commands ***********************************

 @{"WZMenuName  " link "WZMenuName" 0} @{"WZMenuHelp   " link "WZMenuHelp" 0}  @{"WZMenuOn    " link "WZMenuOn" 0} @{"WZMenuOff    " link "WZMenuOff" 0}
 @{"WZMenuGet   " link "WZMenuGet" 0} @{"WZMenuSet    " link "WZMenuSet" 0}



 ************************ Listview Commands *******************************

 @{"WZListAdd   " link "wzlistadd" 0} @{"WZListRemove " link "wzlistremove" 0}  @{"WZListString" link "wzliststring" 0} @{"WZListAddr " link "wzlistaddr" 0} @{"WZListItems " link "wzlistitems" 0}



 ************************ Misc Commands ***********************************

 @{"WZWaitEvent" link "wzwaitevent" 0} @{"WZPutMsg " link "wzputmsg" 0} 

                                  @{"Insert MessageLoop" system "run >NIL: Blitz2:REDHelp/ShowExample FILE=a_basic:parts/message.ab3"}
@endnode

@node "wzwindow" "WZWindow"

    WZWindow  win#,?addr or fname,maxgads,[x,y,w,h,wzid]


    Beschreibung:

    Dieser Befehl �ffnet ein Fenster so, wie es in der angegebenen Wizarddatei vorliegt.
    Es gibt zwei M�glichkeiten, die Wizarddatei einzubinden:
    1) Die Datei wird bei der �bersetzung mittels INCBIN gleich mit eingebunden.
        In diesem Fall mu� dem WZWINDOW-Befehl die Speicheradresse angegeben 
        werden (mittels ?<sprungmarke>, siehe Beispiel).
        Die Wizarddatei wird dann zur Ausf�hrung nicht mehr ben�tigt.
    2) Der Dateiname wird dem direkt Befehl �bergeben. Das f�hrt zu einer
        kleineren EXE-Datei, die Wizarddatei mu� allerdings mit dem Programm 
        mitgeliefert werden.

    
    Parameter:

    win#        Fensternummer, wie sie in der Wizarddatei abgelegt ist.
                Ohne "wzid" entspricht win# auch der Fensternummer
                in AB2. win# MUSS MIT 1 BEGINNEN!
    ?addr      Speicheradresse der mit INCBIN eingebundenen Wizarddatei.
    fname      Dateiname der Wizarddatei, in der die Oberfl�che abgelegt ist.
    maxgads     Anzahl der Gadgets, die in dem Fenster verwendet werden. Wichtige Angabe!    
    x,y,w,h    Fensterdimensionen, falls andere als die in der Wizarddatei gew�nschten.
    wzid        Fensternummer f�r AB2, falls andere als die in der Wizarddatei.


    Beispiel:

    WZWindow 1,?surfdata,10
    surfdata: incbin "h0:surface.wizard"

    oder

    WZWindow 2,"dh0:surface.wizard",10,0,0,320,200,2



    siehe auch:   @{"WZCloseWindow" link "wzclosewindow" 0}
@endnode

@node "wzwaitevent" "wzwaitevent"

    WZWaitEvent (msg)


    Description:
    Put a Message from Port and copies it to the AmiBlitz3-Port
    replies the Message

    Example:
    msg.l = getmsg_ (myport)
    WZWaitEvent msg
@endnode

@node "wzputMsg" "wzputMsg"

    WZPutMsg


    Description:
    Put message in Reg D0 to Blitzport. You must not reply�the�message.

    Example:
    msg.l = getmsg_ (myport)
    WZPutMsg

@endnode

@node "wzclosewindow" "WZCloseWindow"

    WZCloseWindow win#



    Beschreibung:
    Gegenst�ck zu WZWindow.
    Schlie�t ein mit WZWindow ge�ffnetes Fenster und gibt alle Resourcen wieder frei.

    Parameter:
    win#    Die Fensternummer, die bei @{"WzWindow" link "wzwindow" 0} verwendet wurde.


@endnode

@node "WZGadHit" "WZGadHit"

    WZGadHit


    Description:
    gibt die WZID des zuletzt bet�tigten Wizard-Gadgets zurueck, analog zu GadgetHit fuer
    GadgetTools-Gadgets. Die WZID ist die ID, die vom StromWizard-Designer vergeben wird.



    Example:
    {...}
    Select WZGadHit
    Case 1 : Gosub About
    Case 2 : Gosub Exit
    End Select
    {...}


    siehe auch: @{"WZGadName" link "wzgadname" 0}
@endnode

@node "WZInput" "WZInput"

    WZInput


    Bedeutung:
    �quivalent zur AB2-Funktion "Eventcode" in Bezug auf Gadgets.  Liefert den R�ckgabewert des
    letzen Gadgets zur�ck. Bei einem  Cycle-Gadget etwa die ausgew�hlte Option, oder bei einem
    Slider-Gadget den aktuellen Wert.


    siehe auch: WZInputStr, WZGetString
@endnode

@node "wzprint" "WZPrint"

    WZPrint gadname,value



    Bedeutung:
    Setzt Werte f�r ein bestimmtes Gadget.


    Parameter:
    gadname    Der Name des Gadgets in "", der mit dem StormWizard festgelegt wurde.
    value          Der Wert, den das Gadget annehmen soll.


    Beispiel:
    WZPrint "NAME", "Sven"   ; fuer ein Stringgadget mit dem WZ-Namen "NAME"
    WZPrint "ALTER", 25      ; fuer ein Integergadget mit dem WZ-Namen "ALTER"
 

    siehe auch: @{"WZInput" link "WZInput" 0}



    WZPrint laesst sich fuer alle WZ-Gadgets nutzen, analog zu GT_SetGadgetAttrs_ fuer
    GadTools-Gadgets:

                           Parameters
    Gadget-Class           1                 2                      3
    ----------------------------------------------------------------------------
    String                 String with & z.b WZPrint #stringgad1,&i$
    Slider                 Level             Min                     Max
    Scroller               Top               Visible                 Total
    Listview               Listnum           var.List                mode
    Date                   Day               Month                   Year
    Cycle                  Active            Labels
    ArgGadget              arg0              arg1                    arg2
    Gauge                  Current           Total


    Example:
    WZPrint "slider1",20   ; ueber den WZ-Namen "slider1" wird dem Slider der Wert 20 zugewiesen
    WZPrint #slider1,20    ; ueber die WZID in der Konstante #slider1 wird der Wert zugewiesen
@endnode

@node "wzenable" "WZEnable"

    WZEnable gad#     oder
    WZEnable "gad"


    Bedeutung:
    Aktiviert das angegebene Gadget. Das Gadget ist dann fuer bearbeitbar bzw. bedienbar.
    

    Parameter:
    Es kann entweder die WZID oder der WZ-Namen als Parameter verwendet werden:
    gad#    Gadgetnummer in der Wizarddatei
    "gad"   Gadgetname in der Wizarddatei


    Beispiel:
    WZEnable "gadget1" or
    WZEnable #Gadget1



    siehe auch:  @{"WZDisable" link "wzdisable" 0}
@endnode


@node "wzdisable" "WZDisable"

    WZDisable gad#     oder
    WZDisable "gad1"


    Bedeutung:
    Deaktiviert das angegebene Gadget, soda� es nicht mehr vom User benutzt werden kann.


    Parameter:
    Es kann entweder die WZID oder der WZ-Namen als Parameter verwendet werden:
    gad#    Gadgetnummer in der Wizarddatei
    "gad"   Gadgetname in der Wizarddatei


    Beispiel:
    WZDisable "gadget1" or
    WZDisable #Gadget1

    siehe auch:  @{"WZEnable" link "wzenable" 0}
@endnode


@node "wzlistadd" "WZListAdd"

	Syntax: WZListAdd wizardlist.List, name.s, value.b

	Adds a listentry the the list "wizardlist"

	value can be:
	 0 = reverse sorting
	-1 = alphanumeric sorting
	-2 = no sorting
@endnode

@node "wzlistremove" "WZListRemove"
    WZListRemove Listbase [,num]
    
    Removes an entry or the complete list.
    
@endnode

@node "wzliststring" "WZListString"
    WZListString(Listbase, Item [,Mode])

    Returns the item string of the item Item.
    Mode: 1.. all
          2.. clear select
          
@endnode

@node "wzlistaddr" "WZListAddr"

@endnode

@node "wzListitems" "WZListItems"
    WZListItems(Listbase)
    
    Returns the number of entries in the provided list
@endnode

@node "wzWindowaddr" "WZWindowAddr"

    WZWindowaddr

@endnode

@node "WZXFontsize" "WZXFontsize"

@endnode

@node "WZYFontsize" "WZYFontsize"

@endnode

@node "WZSurface" "WZSurface"

@endnode

@node "WZHandle" "WZHandle"

@endnode

@node "WZTags" "WZTags"

@endnode

@node "wzGadname" "WZGadName"

@endnode

@node "WZDoubleclick" "WZDoubleclick"

    WZDoubleclick


    Description:
    returns "1" if gadget has been doubleclicked
    (dont forget to set Doubleclick-Event in Stormwizard for Listview)



    Parameter:
    none

@endnode


@node "WZGadAddr" "WZGadAddr"

@endnode


@node "WZGadHelp" "WZGadHelp"

@endnode

@node "WZMenuName" "WZMenuName"

@endnode

@node "WZMenuOn" "WZMenuOn"

@endnode

@node "WZMenuOff" "WZMenuOff"

@endnode

@node "WZMenuGet" "WZMenuGet"

@endnode

@node "WZMenuSet" "WZMenuSet"

@endnode

@node "_examples" "Examples"

@endnode

@node "About" "About"

    Diese Library wurde von Bernd Roesch kompiliert. Sie dient dazu, Programmoberfl�chen (GUIs), die
    mit dem Oberfl�chengenerator "StormWIZARD" von Haage&Partner erstellt wurden, in AB2 verwenden
    zu k�nnen.

    Zu diesem Zweck stellt die wizard.lib einige Befehle zur Verf�gung, um die Oberfl�chen
    ansprechen, und auf Ereignisse reagieren zu k�nnen.

    Dieses Guide-File wurde von Bernd Roesch erstellt und von Sven Dr�ge erweitert.
@endnode

