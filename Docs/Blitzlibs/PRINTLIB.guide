@DATABASE PRINTLIB
@Author Conversion program
@$VER: PRINTLIB V1.1 (27.01.2007)- Updated by mrodfr.
@NODE OVERVIEW "Overview of PRINTLIB"

                                  @{b}@{u}Overview@{ub}@{uu}


                          An Acid Software Library

                         Converted to AmigaGuide by

                            Red When Excited Ltd

                 Used with the permission of Acid Software

          Edited, fixed and cleaned by Toby Zuijdveld 27/02/1999.
                       mailto:hotcakes\@abacus.net.au



@ENDNODE OVERVIEW

@NODE Print "PRINTLIB"

@{fg shine}Statement: Print@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Print Expression[,Expression...]

Print allows you to output either strings or numeric values to the 
current output channel. Commands such as WindowOutput or BitMapOutput 
may be used to alter the current output channel.


@ENDNODE Print

@NODE NPrint "PRINTLIB"

@{fg shine}Statement: NPrint@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : NPrint Expression[,Expression...]

NPrint allows you to output either strings or numeric values to the 
current output channel. Commands such as WindowOutput or BitMapOutput 
may be used to alter the current output channel.

After all Expressions have been output, NPrint automatically prints a 
newline character.





@ENDNODE NPrint

@NODE Str$ "PRINTLIB"

@{fg shine}Function: Str$@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Str$ (Expression)

This returns a string equivalent of the numeric value Expression. This 
now allows you to perform string operations on this string.

If the Format command has been used to alter numeric output, this will 
be applied to the resultant string.


@ENDNODE Str$

@NODE Format "PRINTLIB"

@{fg shine}Statement: Format@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Format FormatString

Character	Format effect

 #	         If no digit to print, insert spaces into output
 0	         If no digit to print, insert zeros ('0') into output 
 .	         Insert decimal point into output
 +	         Insert sign of value
 -	         Insert sign of value, only if negative
 ,	         Insert commas every 3 digits to left of number


Any other characters in FormatString will appear at appropriate 
positions in the output.

Here are some example of FormatStrings and their output:


Format	        StringValue	PrintedOutput

"####.00"	5.2	        5.20
"0000.00"	5.2	        0005.20
"###,###.00"	10240.25	10,240.25
"Total: -#####"	-10.5	        Total: -  11


Format affects the operation of the Str$ function.


@ENDNODE Format

@NODE FloatMode "PRINTLIB"

@{fg shine}Statement: FloatMode@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : FloatMode Mode : -1=standard, 0=guess, 1=exp

FloatMode allows you to control how floating point numbers are output 
by the Print or NPrint commands.

Floating point numbers may be displayed in one of two ways - in 
exponential format, or in standard format. Exponential format displays 
a floating point number as a value multiplied by ten raised to a power. 
For example, 10240 expressed exponentially is displayed as '1.024E+4', 
ie: 1.024 times 10 to the power of 4. Standard format simply prints 
values 'as is'.

A Mode parameter of 1 will cause floating point values to ALWAYS be 
displayed in exponential format. 
A Mode parameter of -1 will cause floating point values to ALWAYS be 
displayed in standard format. 
A Mode parameter of 0 will cause Blitz 2 to take a 'best guess' at the 
most appropriate format to use. This is the default mode for floating 
point output.

Note that if Format has been used to alter numeric output, standard 
mode will always be used to print floating point numbers.


@ENDNODE FloatMode

@NODE UStr$ "PRINTLIB"

@{fg shine}Function: UStr$@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : UStr$ (Expression)

This returns a string equivalent of the numeric value Expression. This 
now allows you to perform string operations on this string.

Unlike Str$, UStr$ is not affected by any active Format 
commands.
@ENDNODE UStr$

@NODE MAIN "PRINTLIB"

.-----------------------------------------------------------------------------.
|                                  @{b}PRINTLIB@{ub}                                   |
`-----------------------------------------------------------------------------'

                             @{"     Overview     " link OVERVIEW}

                               Command Index                                

                                @{" FloatMode  " link FloatMode}
                                @{" Format     " link Format}
                                @{" NPrint     " link NPrint}
                                @{" Print      " link Print}
                                @{" Str$       " link Str$}
                                @{" UStr$      " link UStr$}

@ENDNODE MAIN

