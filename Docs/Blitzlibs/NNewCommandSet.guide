@DATABASE NewCommandsSet.Guide
@$VER: New Commands Set.guide V1.91 (27.01.2007)-Updated by mrodfr(10.06.1999) by Laboureur -> AlphaSOUND <- Frédéric
@NODE MAIN "New Commands Set V1.91.guide"

*************************************************************************

                          New Commands Set V1.90

              Coding done by AlphaSOUND & Richard Andersson

                      © 1999 - Fantaisie Software -

*************************************************************************


  @{"      Introduction       " LINK INTRO}  Why you should use the libraries.
  @{"       Copyrights        " LINK COPYR}  Legal stuff.
  @{"      Installation       " LINK INSTA}  How to install/remove this package

  @{"  Libraries description  " LINK DESCR}  All command descriptions.
  @{"       Xtra Tools        " LINK TOOLS}  Some useful tools/files
  @{"  Recommended libraries  " LINK RECOM}  Recommended libraries I haven't done.

  @{"      Future plans       " LINK FUTUR}  What could be done.
  @{"       Big Thanks        " LINK THANK}  The people who helped...
  @{"       The author        " LINK AUTHO}  Contact me !

  @{"         History         " LINK HISTO}  What's new ?



                       © 1999 - Fantaisie Software

@ENDNODE


@NODE INTRO "Introduction"

    @{b}Introduction:@{ub}

  This is a new library set for Blitz Basic II and has  been  designed to
  replace the old Blitz2 functions with more efficient routines.

  
    @{b}Advantages of the new library set:@{ub}

  + ALL the functions can be tested for success. It's very important
  to  know  if  a  screen  or  a window has been successfully opened
  before attempting to operate on it ! Old commands didn't allow this
  and programs could crash.

  + The tiny size of the executable compiled with the new  library  set.
  You  can  expect  under  2  Kb  program  which  opens a screen and some
  windows! Try it with the original commmands and you will have a huge
  30 kb program, even if you only have 2 code lines.

  + All libraries are INDEPENDENT ! If you want, open your  screen  with
  C/C++  like  functions  and use the new palette command with it ! It's
  really easy.

  + More commmands than original libraries

  + Totally system-friendly (100% Guarantee)

  + Easy to use and to install

  + Supported and under development

  + All functions are fully-tested and seemingly bug-free. If a bug is
  found, it will be removed as soon as possible...

  In fact, the only way to develop QUICKLY a FAST'n'SMALL application on
  the  AMIGA  is  to use BLITZ BASIC with the NewCommandSet. This is the
  only way. If someone has another suggestion, I'm open :).

@ENDNODE


@NODE COPYR "Copyrights"

    @{b}Copyrights:@{ub}

  This package is Giftware. If you find it useful, try to send  me  what
  you  want  to  my  adress  (keyfiles  of  your own program, money 8-).
  Therefore, it's freely-distributable so spread it as you wish.

  In ALL cases, send me at least a postcard of your country ! (It's not
  too much to ask ? I spend my time on this project...)

  I do it for free only to have a chance to see good, small and fast software
  appears on the AmigaOS. You've now the tools, so create now :-) !

  This package CAN NOT be spread on any media without the express
  agreement of the author. Just ask me the right and you will obtain
  it. I wish to know where it's put... Exeption is done for Aminet
  CD collections (Good work guys !).

@ENDNODE


@NODE INSTA "Installation"

    @{b}Installation:@{ub}

  1 - Automatic solution (Recommended)

    Click on the Install icon and follow the instructions.

   2 - Manual solution:
      + Create a BlitzLibs:NLibs/ drawer
      + Copy the *.obj file in this drawer
      + Copy the examples and the help files where you want.



    @{b}UnInstall:@{ub}

  If the NCS doesn't fill up your needs, follow theses steps to
  uninstall it completely:

  1 - Go in your 'BlitzLibs:' drawer
  2 - delete the 'NLibs' drawer
  3 - delete the NLibs.res file (resident file)
  4 - delete the examples directory which contain all
      the NExamples files
  5 - delete the NHelp directory which contain the docs.

@ENDNODE


@NODE DESCR "Libraries description"

    @{b}Libraries description:@{ub}

  Actually, the New Commands Set supports 24 libraries :

    @{"    App     " LINK "NApp.guide/Main"}
    @{"    ASL     " LINK "NASL.guide/Main"}
    @{"   BitMap   " LINK "NBitMap.guide/Main"}
    @{"   Chunky   " LINK "NChunky.guide/Main"}
    @{" ClipBoard  " LINK "NClipBoard.guide/Main"}
    @{" Commodities" LINK "NCommodities.guide/Main"}
    @{"  Drawing   " LINK "NDrawing.guide/Main"}
    @{"    Font    " LINK "NFont.guide/Main"}
    @{"   Gadget   " LINK "NGadTools.guide/Main"}
    @{"   Locale   " LINK "NLocale.guide/Main"}
    @{"   Memory   " LINK "NMemory.guide/Main"}
    @{"    Menu    " LINK "NMenu.guide/Main"}
    @{"    Misc    " LINK "NMisc.guide/Main"}
    @{"     OS     " LINK "NOS.guide/Main"}
    @{"  Palette   " LINK "NPalette.guide/Main"}
    @{"  Picture   " LINK "NPicture.guide/Main"}
    @{"   Screen   " LINK "NScreen.guide/Main"}
    @{"    Sort    " LINK "NSort.guide/Main"}
    @{"   String   " LINK "NString.guide/Main"}
    @{"  TagList   " LINK "NTagList.guide/Main"}
    @{" ToolTypes  " LINK "NToolTypes.guide/Main"}
    @{" WbStartup  " LINK "NWbStartup.guide/Main"}
    @{"   Window   " Link "NWindow.guide/Main"}
    @{"    XPK     " LINK "NXpk.guide/Main"}

@ENDNODE


@NODE RECOM "Recommended libraries"

  @{b}Recommended libraries:@{ub}

    Maybe you want to have other libraries that the NCS doesn't support
  like playing Protracker modules, displaying anims and more... Here is a
  quick list of available libraries which work without any problem with
  NCS and which are cool and powerful.

  + Enhanced Music Library V1.7 by Paul Reece:

  The only choice to have full control over Protracker modules. The replay
  routine is 100% OS friendly, fast and all the commands are easy to use.
  Many commands are available, good work Paul. The size of the library is
  really small too (compared to the work which is done).

  + MildRed by Paul West:

  The most powerful library I've ever seen to manipulate chunky graphics
  very easily. If you need to play with these kind of graphics, get it at
  the MildRed support page:

    http://www.stationone.demon.co.uk

@ENDNODE


@NODE TOOLS "Xtra Cooooool Tools"

    @{b}The supplied extra tools:@{ub}

  + NewFDConvert: It's an updated version of the original FDConvert command
                  which converts .fd (file descriptor) library files into
                  Blitz 2 libraries, to enable you to use those commands
                  inside Blitz. Now, it's fully GUI guided, so their are
                  no more difficulties in doing these convertions.
                  Big Thanks to James L Boyd.

  + OpenBlitz: A little tool (written by me) which takes a C/C++ header
               file (.h) and converts it into Blitz 2 code file. It converts
               any files near-perfect, BUT not perfectly, some hand
               changes must be done.

  + NewMakeDefLibs: New version (faster and accepts big libraries) written
                    by Paul West for his MildRed package. It should replace
                    the old one forever as it works flawlessly.

  + AmigaLibs.res: The version of this file is a fully ROM 3.1 compatiable
                   AmigaLibs.res file. It contain all the RKM includes
                   with a minimum of changes about the syntax. You should
                   replace the old file with this new one, as it's much more
                   complete. Brought to you by AlphaSOUND.

@ENDNODE


@NODE FUTUR "Future plans"

    @{b}Future plans:@{ub}

  May be some PPC specific libraries will come out too. I will buy a PPC
  card soon, so :).

  May be developing a Visual Environement, with drag'n'drop editing to
  construct complex applications.

  If anyone wants to correct all the grammar and spelling  mistakes  I've
  done in this guide, I will be very gratefull :-). English isn't my
  native langage... This guide could be the start of a new Blitz 2 online
  manual. It's now very modular.

  I search for coders (ASM) which could help me to create new  libraries.
  Contact me if you're interested..

  My goal is easy. When I've written all the libraries I  want,  I  will
  propose  to  completely  replace  OLD libraries with new libraries (So I
  could remove this nasty 'N' before all commands to avoid  conflict).  I
  will  give  a  bit  the  Blitz3.  Optimized  executable  size, modular
  concept, easy to program. Flexibility. What more ??

      Bye bye,

            Fred.

@ENDNODE


@NODE AUTHO "Informations about the author"

  If you have any problem while installing/using my  libraries,  if  you
  found  some  bugs or if you want to add some commands, contact me at:

  e-mail:  alphasnd\@sdv.fr

  s-mail:  Laboureur Frederic
           10, rue de lausanne
           67640 FEGERSHEIM
           France

  I've coded other software for the Amiga and  if  you  want  you  can
  check them on the Aminet:

  + F-Base: an easy-to-use Database manager (with really COOL  interface
  (coloured)
  (biz/database/F-BaseV2_40.lha)

  +  F-Bench:  a  powerful file manager (yes another one). But with this
  cool interface and some extra coooooool functions...
  (util/wb/F-BenchV2_00.lha)

  + TheBoss: a ToolManager like util but easier to  use  and  much  less
  memory  use (only 30kb memory used...). This last tools is very handy.
  Fast to configure and reliable.
  (util/wb/TheBossV2_10.lha)

           Have Fun With The Best Computer EVER !

                Fred.

@ENDNODE


@NODE THANK "Thank you guys !"

  I would like to acknowledge the following people who have helped at one
  time or another in the developement of the NCS:

    + Marcin Nowak : My best beta tester I've ever had :=). He has reported
                     several big bugs and has even sent source code for adding
                     new commands (NInnerHeight, TextLenght, ObtainBestPen...) !
                     Mega thanks...

    + Paul West    : For developing the best chunky support ever done for the
                     Amiga (and not only for Blitz). At when a real Amiga
                     Shared library ? Very good work !

    + Christian Uceda : For sending me really good source code for Clip Board
                        support (without use the iffparse.library like I've had...).
                        It's him too who got the idea to redo a new function
                        for UCase$()/LCase$() with accent support (for non English
                        people).

    + David McMinn : For helping me to do working exclusive Menus.
                     To have suggested the NWaitWindowEvent and some other
                     useful stuff. And some bugs reports too :) Thanks !

    + Richard Andersson : For helping me to develop new powerful libraries. He's
                          the coder of the NCommodity and the NToolType
                          libraries. He has helped me a lot on several other
                          stuffs like the 'Asynchronous Blitter' library :)

    + Victor Bell : To have spend his time to correct the spell mistakes in theses
                    guides. Thanks ! It looks more professionnal...


    + All the people who believe in the Amiga, all the people who use
      Blitz and finally all the people who use the NCS !

@ENDNODE

@NODE HISTO "New Set Library history"

  @{b}V1.90: 10/06/1999@{ub}

+ NToolType Library modified and updated. More functions, easier to handle.

+ NCommodity Library updated.

+ NSort Library added:
    * NSortUp()
    * NSortDown()

+ Misc:
  All the guides have been grammar corrected by Victor Bell !
  No bug fixes this time ? Are the libraries bug free ? :-)


  @{b}V1.85: 13/05/1999@{ub}

NCommodity Library (Re)Added:
  + 16 functions to handle all the commodity related stuffs.
  + Runtime debugger support for all functions.

NToolTypes Added:
  + Brand new commodity to read the ToolTypes contained in
    any icons. Runtime debugger is supported.
  Functions summary:
    + NFindToolType()
    + NInitToolType()
    + NLoadToolType()
    + NMatchToolTypeValue()

Xpk Library:
  + Added NUnPackTagList() for advanced users

Bug Fixes:
  + Possible NASLFileRequester() error (strange) removed...

Misc:
  + Documentation updated for NCommodity & NToolTypes.


Added debugger support, so no more crashes should appends when
developing a program with the debugger ON.
The new debugger support has been added for:
  + NASL library
  + NBitMap library
  + NDrawing library
  + NFont library
  + NLocale library
  + NScreen library
  + NTagList library
  + NWindow library

Bug Fixes:
  + NScreen : Removed an enforcer hit and a bug
  + NGadget : NDisableGadget() function
  + NMenu   : NInitMenu() caused a GURU everytime... Shame on me :-(.
  + NWindow : 2 nasty bugs which cause 2 enforcer hits and crashes
  + NLocale : 2 major bugs (library wasn't closed at the end and bad
              address was given to CloseCatalog())
  + NTagList: NAddTag() command.

NWbStartup:
  + Now returns '0' if started from CLI and the pointer to the
  WBMessage else.. So you can know from where is started your
  proggy.
  + Changed the library number from 159 to 199 to fix one bug
  when the program ended... (sometimes).

NXpk Library
  + Fixed a big enforcer hit in the example file
  (Not in the library, -> Hello Amorel :*)

Misc:
  + Optimized a bit NFont, NGadTools and NLocale libraries
  + Removed NCommodity library and example because of bugs
  + AmigaLibs.res file corrected and updated.
  + Added an example to handle GT_Shape like gadgets
  + Added Debugger.guide and updated other docs...


 @{b}V1.70: 31/01/1999@{ub}

NTagList Library Added:
  + NInitTagList()
  + NResestTagList()
  + NAddTag()
  + NTagListID()
  + NFreeTagList()

NBitMap Library()
  + Changed NBitmap() now automatially clears the new bitmap

NWindow Library:
  + Added NWindowEvent(), NWaitWindowEvent()
  + Added NDetachGadgetList()
  + Added NWindowEventID()
  + Changed all the internal gestion of the windows. Now you can open
    an unlimited number of windows. A shared msgport is used to reduce
    code size and improve speed.
  + Changed the way NWindow() works. Now, it takes InnerWidth and
    InnerHeight as parameter instead of Width and Height. So you now
    have Border sensitive window without doing anything. Magic ? :)
  + Removed NWCursX(), NWCursY() -> NDrawing Library

NPalette Library:
  + Fixed NRed(), NBlue(), NGreen()

NDrawing Library:
  + Added NCursX(), NCursY()
  + Fixed NObtainBestPen()

NFont Library:
  + Changed NLoadFont() is now a command (no more only a function)

NMenu Library:
  + Standalone menu library (was inside GadTools Library Before)
  + Fixed the NToggle(Sub)Item() functions. Now works flawlessly.
    (Took me a while, so be happy please :-D...)

NScreen Library:
  + Fixed a little bug when closing a screen

NString Library:
  + Fixed NChr$()
  + Fixed NLeft$(), NRight$()

Documentations changes:
  + Added TagList guide
  + Added NGadgetAttrs() in the Gadget.guide (it was missing !)
  + Added IDCMP informartions in the Window guide
    (see NWaitWindowEvent())
  + Added the full Tags definitions (100%) for any commands which
    requires a TagList.
  + Corrected Drawing guide (lot of mistakes)
  + Updated all other guides to reflect the changes.

Misc:
  + Included a new AmigaLibs.res file with all OS 3.1 includes.
  + Included NewFDConvert from James L Boyd.
  + Included OpenBlitz, a C/C++ header -> Blitz 2 convertor
  + Included a new version of MakeDefLibs
  + Removed NLibs.res (no more needed)
  + Changed GadTools -> Gadget (more logical)
  + Optimized ASL.library a bit.
  + Richard Andersson has joined the team !


 @{b}V1.60: 09/01/1999@{ub}

NOS Library Added:
  + NGraphicsBase()
  + NDosBase()
  + NExecBase()
  + NIntuitionBase()

NClipboard Library Added:
  + NSetClipText()
  + NGetClipText()

NGadTools:
  + No more crashes when using RUN instead of COMPILE/RUN in TED. Before
    using RUN (with no compilation) caused a GURU :-(. Fixed now.
  + NRefreshGadgetList() function added - Refresh the current gadgetlist
  + Optimized the library a little more.
  + NSetGadgetFont() fixed (at least more documented...) This function is
    very dangerous to use.. Look at the examples files.
  + Added NFreeMenu()
  + Added NMenuCheckItem(), NMenuCheckSubItem()
  + Added NMenuToggleItem(), NMenuToggleSubItem()
  + Fixed a memory loss bug when using GadTools menus.

NStrings:
  + NLeft$()  added
  + NRight$() added
  + NUCase$() added - These functions support accent letters, not like old
  + NLCase$() added - ACID ones.
  + NMki$(), NMkl$() added
  + NCvi(), NCvl() added
  + NLen() fixed (gave bad results in some average cases) - Thx Marcin !

NBitmap:
  + NShowBitmap() fixed (displaying the current bitmap one frame after)

NDrawing:
  + NPoint() added
  + NTextLength() added
  + NObtainBestPen() added
  + NReleasePen() added
  + NDrawingRastPort() added
  + NBoxFill() changed (coordinates can be given in any orders)

NScreen:
  + NFindFrontScreen() added
  + NScreenDepth() added
  + NViewPort() added
  + NWBorderTop(), NWBorderBottom(), NWBorderLeft(), NWBorderRight() added
  + NSBarHeight() added
  + NSFontHeight() added
  + NFindScreen() fixed - Didn't take the default screen if a null string was given.

NWbStartup:
  + No more installed by default, because it hangs Blitz2 V1.9+.
    Nevertheless, it works fawlessly with Blitz V1.7.
    In V2.1, the standard WbStartup is bug free, so it's cool :).

NWindow:
  + Added NWCursX(), NWCursY()
  + Added NInnerHeigth(), NInnerWidth()
  + Added NDetachMenu()
  + Fixed NBusyPointer() - It doesn't work
  + Fixed NActivate() - Argument in more

NPalette:
  + NFade() added (very powerful and fast function)
  + NASyncFade() added (NFade which don't halt the program flow)
  + NASyncFadeStatus()
  + NFadeOut() optimized a little bit
  + NNbColour() added - Return the nbcolour of the current palette.

NApp Library Added:
  + NInitApp()
  + NAddAppWindow()
  + NRemoveAppWindow()
  + NAddAppMenu()
  + NRemoveAppMenu()
  + NAppEvent()
  + NAppNumFiles()
  + NNextAppFile()

Documentations changes:
  + NPackerInfo() corrected
  + Bad links: NDisableGadget(), NRight$(), NFreeBitMap(), NCloseGadgetList()
  + Updated to new commands :-).


  @{b}V1.50: 23/11/1998@{ub}

  * New Locale library (Preview version)
  * New BitMap library
  * New Picture library (Full IFF/ILBM support)
  * New Drawing library
  * Added NPeek$(), NChr$() and NRight$() to String.library
  * Added fast OS double-buffering support via the BitMap.library
  * Adding OS blit functions via Drawing.library/Picture.library
  * NInitFont is now a command (not only a function)
  * NRefreshGadget function fixed (before, it refreshed all the gadgets)
  * Added NGetPicturePalette() to palette.library
  * Changed a lot the Window.library
  * Changed the way to render 2D Drawing (Box, Circle...) in windows.
    Consult the Drawing.guide for more details
  * Changed a bit Screen.library (NScreen syntax)
  * Add NProgramPriority() to Misc.library
  * Optimized again Misc, Screen and XPK libraries
  * Finally updated the guides files ! You have an updated doc (be aware it
    tooks me more than 1 day to achieve this :-). Remarks than all the
    functions are now alphabetically sorted (Who has said it takes time ? :-)
  * The library list number has been finally added.
  * I've changed my e-mail adresse :-)

  @{b}V1.40: 13/09/1998@{ub}

  * !!! Warning !!! All the libraries number have changed (I really use
  free libraries number). I've included the now OFFICIAL free libraries
  number. If you are lib coder, please consult it !
  * GadTools library has been debugged a lot (some nasty bugs were here)
  and some new functions has appears:
    + FreeGadgetList, DisableGadget, GadgetBorder,
    + ActivateGadget, RefreshGadget, OptionGadget
    + GetStringText, SetStringText.
  GadTools has been optimized a lot too.
  * Screen Library OPTIMIZED ! (-96 bytes).
    + NFindScreen has now a title$ parameter
    Removed a little bug.
  * Corrected a big bug in Misc lib (NVWait didn't work)
    Optimized a bit this Misc lib.
  * WindowLib even more optimized
  * Added the NWbStartup replacement for extra small exec size !
    and better, you can check if the program is launch from
    CLI or from WB with this command.
  * New Palette library with extra fast FadeOut (up to 256 colour).
  * New XPK library (experimental)
  * 030 especially optimized Chunky2Planar added (thx to Paul West)


  @{b}V1.30: 28/07/1998@{ub}

  * After 5 days of coding, I've finally finished the  GadTools  library
  for  the  New  Commands Set. Arf. An 2 kb library of 100 % ASM coding.
  It's the biggest library I've done until now. With this  library,  you
  should  be  able  to  write small'n'fast application very easely. More
  examples will follow to show  how  write  Font  Sensitive  application
  using this new library. Menus and gadgets are fully supported.
  * Fixed a nasty bug in the Chunky library. It caused lot of  crashs...
  Should work fine now. Remove the render.library support.
  * Added an C2P  library  which  contain  2  very  fast  ChunkyToPlanar
  routine  optimized  for the 040 (030 routines will follow). Big thanks
  to Paul West for its Blitz2 conversion... Blitz has  now  one  of  the
  best support for writting Chunky based games.
  * I've changed the status of lot of functions. Now  you  can  use  the
  functions  as  statement  of  function.  You  don't  need to check the
  function result if you don't want.
  * Optimized a bit some libraries...
  * Changed again the guide format. More modular, better.

  WARNING ----- Window/Screen and Misc libraries have changed their  lib
  numbers  because  of  conflits  with other libraries. So save your old
  program in ASCII form before reload them with the new command set.


  @{b}V1.20: Aminet and Blitz ML-List release@{ub}

  * Major Changes : All ressources are automatically freed by Blitz 2 at
  the  end  of  the  program  (like other Blitz 2 libraries). No need to
  close your Screen/Windows/Chunkybuffers/Asl stuffs anyways. Cool hey ?
  :)  You  can reuse the debugger while developing... Now, you MUST use
  the Init<Library  name>  at the top of your  program  to  use  the  new
  libraries.   I   used   the  numbers  again,  so  you  must  define  a
  nummaxobjects through the Init command.
  * ASL library added : Access to all the library elements. Easy to use.
  It can replace 100 % the old and bad coded Acid library.
  * Chunky library fully recoded and fully functionnal.
  * Window library recoded (with autoclose for any opened windows !) and
  really optimized !
  * Screen library recoded (like Window) and optimized too...
  * Font library added
  * Updated the guide file and changed a bit its structure

  @{b}V1.10: 14/07/1998 - Aminet release@{ub}

  * Chunky library added (experimental)
  * String library added
  * Memory library added
  * Guide revised and updated


  @{b}V1.00: Blitz mailing list release@{ub}

@ENDNODE
