@DATABASE BLITLIB
@Author Conversion program
@$VER: BLITLIB V1.1 (27.01.2007)- Updated by mrodfr.
@NODE OVERVIEW "Overview of BLITLIB"

                                  @{b}@{u}Overview@{ub}@{uu}


                          An Acid Software Library

                         Converted to AmigaGuide by

                            Red When Excited Ltd

                 Used with the permission of Acid Software

          Edited, fixed and cleaned by Toby Zuijdveld 26/02/1999.
                       mailto:hotcakes\@abacus.net.au



@ENDNODE OVERVIEW

@NODE Blit "BLITLIB"

@{fg shine}Statement: Blit@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Blit Shape#,X,Y[,Excessonoff]

Blit is the simplest of all the blitting commands. Blit will simply 
draw a shape object onto the currently used bitmap at the pixel 
position specified by X,Y. The shape's handle, if any, will be taken 
into account when positioning the blit.
 
The optional Excessonoff parameter only comes into use if you are 
blitting a shape which has less bitplanes (colours) than the bitmap to 
which it is being blitted. In this case, Excessonoff allows you to 
specify an on/off value for the excess bitplanes - ie, the bitplanes 
beyond those altered by the shape. Bit zero of Excessonoff will specify 
an on/off value for the first excess bitplane, bit one an on/off value 
for the second excess bitplane and so on.

The manner in which the shape is drawn onto the bitmap may be altered by 
use of the BlitMode command.


@ENDNODE Blit

@NODE BlitMode "BLITLIB"

@{fg shine}Statement: BlitMode@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : BlitMode BLTCON0

BLTCON0     ModeEffect

CookieMode  Shapes are drawn 'as is'.

EraseMode   An area of the size and shape of the shape will be 'erased' on the 
            destination bitmap.

InvMode     An area of the size and shape of the shape will be 'inversed'
            on the destination bitmap.

SolidMode   The shape will be drawn as a solid area of one colour. 


Actually, these modes are all just special functions which return a useful value. 

Advanced programmers may be interested to know that the BLTCON0 parameter is 
used by the Blit command's blitter routine to determine the blitter MINITERM 
and CHANNEL USE flags. Bits zero through seven specify the miniterm, and bits 
eight through eleven specify which of the blitter channels are used. For the 
curious out there, all the blitter routines in Blitz 2 assume the following 
blitter channel setup:


Channel  Use

A        Pointer to shape's cookie cut

B        Pointer to shape data

C        Pointer to destination

D        Pointer to destination

@ENDNODE BlitMode

@NODE CookieMode "BLITLIB"

@{fg shine}Statement: CookieMode@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : CookieMode 

The CookieMode function returns a value which may be used by one of the 
commands involved in blitting modes.

Using CookieMode as a blitting mode will cause a shape to be blitted 
cleanly, 'as is', onto a bitmap.


@ENDNODE CookieMode

@NODE EraseMode "BLITLIB"

@{fg shine}Statement: EraseMode@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : EraseMode 

The EraseMode function returns a value which may be used by one the 
commands involved in blitting modes.

Using EraseMode as a blitting mode will cause a blitted shape to erase 
a section of a bitmap corresponding to the outline of the shape.



@ENDNODE EraseMode

@NODE InvMode "BLITLIB"

@{fg shine}Statement: InvMode@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : InvMode 

The InvMode function returns a value which may be used by one the 
commands involved in blitting modes.

Using InvMode as a blitting mode will cause a shape to 'invert' a 
section of a bitmap corresponding to the outline of the blitted 
shape.


@ENDNODE InvMode

@NODE SolidMode "BLITLIB"

@{fg shine}Statement: SolidMode@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : SolidMode 

The SolidMode function returns a value which may be used by one the 
commands involved in blitting modes.

Using SolidMode as a blitting mode will cause a shape to overwrite a 
section of a bitmap corresponding to the outline of the blitted 
shape.


@ENDNODE SolidMode

@NODE Gap "BLITLIB"
@{fg shine}Statement: Gap@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Gap 


@ENDNODE Gap

@NODE Block "BLITLIB"

@{fg shine}Statement: Block@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : Block Shape#,X,Y

Block is an extremely fast version of the Blit command with some 
restrictions. Block should only be used with shapes that are 
16,32,48,64... pixels wide and that are being blitted to an x position 
of 0,16,32,48,64... Note that the height and y destination of the shape 
are not limited by the Block command.

Block is intended for use with map type displays.


@ENDNODE Block

@NODE BlitColl "BLITLIB"

@{fg shine}Function: BlitColl@{fg text}
--------------------------------------------------------------------------------
Modes  : 
Syntax : =BlitColl (Shape#,x,y)

BlitColl is a fast way of collision detection when blitting shapes. 
BlitColl returns -1 if a collision occurs, 0 if no collision. A 
collision occurs if any pixel on the current BitMap is non zero where 
your shape would have been blitted.

ShapesHit is faster but less accurate as it checks only the rectangular 
area of each shape, where as BlitColl takes into account the shape of 
the shape and of course1bcan not tell you what shapeyou have collided 
with.

Note: make sure only things that you want to collide with have been 
drawn on the BitMap e.g. don't Blit your ship and then try 
BlitColl!
@ENDNODE BlitColl

@NODE MAIN "BLITLIB"

.-----------------------------------------------------------------------------.
|                                  @{b}BLITLIB@{ub}                                    |
`-----------------------------------------------------------------------------'

                             @{"     Overview     " link OVERVIEW}

                               Command Index                                

                                @{" Blit       " link Blit}
                                @{" BlitColl   " link BlitColl}
                                @{" BlitMode   " link BlitMode}
                                @{" Block      " link Block}
                                @{" CookieMode " link CookieMode}
                                @{" Gap        " link Gap}
                                @{" EraseMode  " link EraseMode}
                                @{" InvMode    " link InvMode}
                                @{" SolidMode  " link SolidMode}

@ENDNODE MAIN

