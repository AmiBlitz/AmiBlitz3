@DATABASE BitMapV1.10
@$VER: BitMap V1.10 - Updated by mrodfr.
@NODE MAIN "BitMap V1.10"

    @{b}BitMap V1.00 General Information:@{ub}

  * Blitz Basic II library number         : #184
  * Library size when linked to executable: 648 bytes
  * Number of commands                    : 7
  * Resources automatically freed at end  : Yes

  NInitBitMap must be put before any other BitMap functions. Don't
  forget to turn the @{"debugger" LINK "/Tools/RedDebugger.guide/Main"} ON when developing.


    @{b}Commands summary:@{ub}

  @{" NBitMap         " LINK NBitMap} Command (BitMapID)
  @{" NBitMapID       " LINK NBitMapID} Function (BitMapID)
  @{" NBitMapRastPort " LINK NBitMapRastPort} Function (RastPort)
  @{" NFreeBitMap     " LINK NFreeBitMap} Statement
  @{" NInitBitMap     " LINK NInitBitMap} Command (Boolean)
  @{" NUseBitMap      " LINK NUseBitMap} Statement
  @{" NShowBitMap     " LINK NShowBitMap} Statement

@ENDNODE


@NODE NFreeBitMap

    @{b}SYNTAX@{ub}
  NFreeBitMap(#BitMap)

    @{b}STATEMENT@{ub}
  Free the given BitMap.

@ENDNODE


@NODE NInitBitMap

    @{b}SYNTAX@{ub}
  result.l = NInitBitMap(#NumBitMapMax)

    @{b}FUNCTION@{ub}
  Init all the BitMap environments for later  use.  You  must  put  this
  function at the top of  your  source code if you want to use the NBitMap
  commands. 

  #NumBitMapMax : Maximum number of BitMaps to handle.

@ENDNODE


@NODE NBitMapID

    @{b}SYNTAX@{ub}
  BitMapID.l = NBitMapID

    @{b}FUNCTION@{ub}
  Returns the BitMap pointer.

@ENDNODE


@NODE NBitMapRastPort

    @{b}SYNTAX@{ub}
  RastPort.l = NBitMapRastPort

    @{b}FUNCTION@{ub}
  Returns the current BitMap's rastport. Needed to use the 2D Drawing
  functions available in the new Drawing library.

@ENDNODE


@NODE NBitMap

    @{b}SYNTAX@{ub}
  BitMapID.l = NBitMap(#BitMap, Width, Height, Depth)

    @{b}FUNCTION@{ub}
  Create a new BitMap object with given parameters. If the
  result is NULL, then there is not enough memory, so STOP
  your bitmap manipulations !

@ENDNODE


@NODE NUseBitMap

    @{b}SYNTAX@{ub}
  NUseBitMap(#BitMap)

    @{b}STATEMENT@{ub}
  Change the currently used BitMap to #BitMap.

@ENDNODE


@NODE NShowBitMap

    @{b}SYNTAX@{ub}
  NShowBitMap(#BitMap, ScreenID, x, y)

    @{b}STATEMENT@{ub}
  Display the given bitmap on the screen at position x, y. This function
  is 100% OS friendly and allows fast double-buffering. This function
  automatically handles a VWAIT, so there is no need to put one in your main
  loop.

  If you do a multitask game, don't forget to use the NProgramPriority to have
  a high priority, gaining much more cpu time.

@ENDNODE
