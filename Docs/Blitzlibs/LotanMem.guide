@DataBase "LotanMem"
@$VER: LOTANMEMLIB V1.1 (27.01.2007)- Updated by mrodfr.
@Node Main "LotanMem"

  @{b}Lotan's Memory Library 1.0 (24-01-98)@{ub}

    @{" MemCls " link MemCls} Statement
    @{" PeekB  " link PeekB} Function (Byte)
    @{" PeekL  " link PeekL} Function (Long)
    @{" PeekS  " link PeekS} Function (String)
    @{" PeekT  " link PeekT} Function (String)
    @{" PeekW  " link PeekW} Function (Word)
    @{" PokeB  " link PokeB} Statement
    @{" PokeL  " link PokeL} Statement
    @{" PokeS  " link PokeS} Statement
    @{" PokeW  " link PokeW} Statement

  @{b}Author@{ub}

    Olivier Laviale, Doumenge 46230 Montdoumerc, FRANCE

  @{b}Overview@{ub}

    I created this library because I was fed up with using @{b}MemAcc@{ub}. Peeking and Poking
    is faster, and the library is really small (128 bytes).

  @{b}See also@{ub}

    @{" BlitzLibs / LotanArray  " link LotanArray.guide/Main}
    @{" BlitzLibs / LotanMemExt " link LotanMemExt.guide/Main}
    @{" BlitzLibs / LotanSystem " link LotanSystem.guide/Main}
@EndNode

@Node MemCls "LotanMem : MemCls"

  @{b}@{u}MemCls@{ub}@{uu}

    @{b}Syntax@{ub}   : MemCls Addr,Len
               MemCls Addr,Len,Byte

    @{b}Function@{ub} : Fills memory with a special byte.

               This function will fill  consecutive  memory  location  from  @{b}Addr@{ub}  to
               @{b}Addr@{ub}+@{b}Len@{ub}.

    @{b}Values@{ub}   : @{b}Addr@{ub} is an absolute memory location.

               @{b}Len@{ub} is the number of bytes to alter.

               If you specify @{b}Byte@{ub}, memory will be filled with it. Else  memory  will
               be filled with 0.
@EndNode
@Node PeekB "LotanMem : PeekB"

  @{b}@{u}PeekB@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.b @{ui}= PeekB(Addr)

    @{b}Function@{ub} : Reads a Byte from memory.

    @{b}Values@{ub}   : @{b}Addr@{ub} is an absolute memory location. @{b}rc@{ub}  is  a  Byte  read  from  this
               location.

    @{b}See also@{ub} : @{" PokeB " link PokeB}
@EndNode
@Node PeekL "LotanMem : PeekL"

  @{b}@{u}PeekL@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.l @{ui}= PeekL(Addr)

    @{b}Function@{ub} : Reads a Long from memory.

    @{b}Values@{ub}   : @{b}Addr@{ub} is an absolute memory location. @{b}rc@{ub}  is  a  Long  read  from  this
               location.

    @{b}See also@{ub} : @{" PokeL " link PokeL}
@EndNode
@Node PeekS "LotanMem : PeekS"

  @{b}@{u}PeekS@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.s @{ui}= PeekS(Addr)
               @{i}rc.s @{ui}= PeekS(Addr,Len)

    @{b}Function@{ub} : Reads a String from memory.

    @{b}Values@{ub}   : @{b}Addr@{ub} is an absolute memory location. @{b}rc@{ub} is a  String  read  from  this
               location.

               If can specify the lenght of the  string  to  be  read  by  using  the
               argument  @{b}Len@{ub}. Else a @{fg highlight}PeekS@{fg text} will read from consecutive memory location
               until a byte of 0 is found.

    @{b}See also@{ub} : @{" PeekT " link PeekT}
               @{" PokeS " link PokeS}
@EndNode
@Node PeekT "LotanMem : PeekT"

  @{b}@{u}PeekT@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.s @{ui}= PeekT(Addr,Byte)

    @{b}Function@{ub} : Reads memory into a string upto a specified byte.

    @{b}Values@{ub}   : @{b}Addr@{ub} is an absolute memory location. @{b}rc@{ub} is a  String  read  from  this
               location.

               @{b}Byte@{ub} specify what terminator byte to search for.

    @{b}See also@{ub} : @{" PeekS " link PeekS}
@EndNode
@Node PeekW "LotanMem : PeekW"

  @{b}@{u}PeekW@{ub}@{uu}

    @{b}Syntax@{ub}   : @{i}rc.w @{ui}= PeekW(Addr)

    @{b}Function@{ub} : Reads a Word from memory.

    @{b}Values@{ub}   : @{b}Addr@{ub} is an absolute memory location. @{b}rc@{ub}  is  a  Word  read  from  this
               location.

    @{b}See also@{ub} : @{" PokeW " link PokeW}
@EndNode
@Node PokeB "LotanMem : PokeB"

  @{b}@{u}PokeB@{ub}@{uu}

    @{b}Syntax@{ub}   : PokeB Addr,Byte

    @{b}Function@{ub} : Writes a Byte in memory.

    @{b}Values@{ub}   : @{b}Addr@{ub} is an absolute memory location.  @{b}Byte@{ub}  will  be  placed  at  this
               location.

    @{b}See also@{ub} : @{" PeekB " link PeekB}
@EndNode
@Node PokeL "LotanMem : PokeL"

  @{b}@{u}PokeL@{ub}@{uu}

    @{b}Syntax@{ub}   : PokeL Addr,Long

    @{b}Function@{ub} : Writes a Long in memory.

    @{b}Values@{ub}   : @{b}Addr@{ub} is an absolute memory location.  @{b}Long@{ub}  will  be  placed  at  this
               location.

    @{b}See also@{ub} : @{" PeekL " link PeekL}
@EndNode
@Node PokeS "LotanMem : PokeS"

  @{b}@{u}PokeS@{ub}@{uu}

    @{b}Syntax@{ub}   : PokeS Addr,Str
               PokeS Addr,Str,Len

    @{b}Function@{ub} : Writes a string to an absolute memory location.

    @{b}Values@{ub}   : @{b}Addr@{ub} is an absolute memory location you want to copy @{b}Str@{ub} to.

               The number of bytes to copy can be specified using @{b}Len@{ub}. If  you  don't
               specify @{b}Len@{ub}, the entire string will be copied.

    @{b}See also@{ub} : @{" PeekS " link PeekS}
@EndNode
@Node PokeW "LotanMem : PokeW"

  @{b}@{u}PokeW@{ub}@{uu}

    @{b}Syntax@{ub}   : PokeW Addr,Word

    @{b}Function@{ub} : Writes a Word in memory.

    @{b}Values@{ub}   : @{b}Addr@{ub} is an absolute memory location.  @{b}Word@{ub}  will  be  placed  at  this
               location.

    @{b}See also@{ub} : @{" PeekW " link PeekW}
@EndNode
