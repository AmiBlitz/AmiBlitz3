@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "convert_audio.include"

@{B}convert_audio.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" FlipEndian16 " link FlipEndian16} 
   @{" FlipEndian24 " link FlipEndian24} 
   @{" FlipEndian32 " link FlipEndian32} 
   @{" Resample " link Resample} 
   @{" ResampleASM " link ResampleASM} 
   @{" Unsigned2Signed16 " link Unsigned2Signed16} 
   @{" Unsigned2Signed24 " link Unsigned2Signed24} 
   @{" Unsigned2Signed32 " link Unsigned2Signed32} 
   @{" Unsigned2Signed8 " link Unsigned2Signed8} 
   @{" conv_16_Float " link conv_16_Float} 
   @{" conv_16m_16m " link conv_16m_16m} 
   @{" conv_16m_16s " link conv_16m_16s} 
   @{" conv_16m_24m " link conv_16m_24m} 
   @{" conv_16m_32m " link conv_16m_32m} 
   @{" conv_16m_32m_extent " link conv_16m_32m_extent} 
   @{" conv_16m_32s " link conv_16m_32s} 
   @{" conv_16m_32s_extent " link conv_16m_32s_extent} 
   @{" conv_16m_8m " link conv_16m_8m} 
   @{" conv_16m_8s " link conv_16m_8s} 
   @{" conv_16s_16m " link conv_16s_16m} 
   @{" conv_16s_16s " link conv_16s_16s} 
   @{" conv_16s_24s " link conv_16s_24s} 
   @{" conv_16s_32s " link conv_16s_32s} 
   @{" conv_16s_32s_extent " link conv_16s_32s_extent} 
   @{" conv_16s_8m " link conv_16s_8m} 
   @{" conv_16s_8s " link conv_16s_8s} 
   @{" conv_24m_16m " link conv_24m_16m} 
   @{" conv_24m_16m_im " link conv_24m_16m_im} 
   @{" conv_24m_24m " link conv_24m_24m} 
   @{" conv_24m_32m " link conv_24m_32m} 
   @{" conv_24m_8m " link conv_24m_8m} 
   @{" conv_24s_16s " link conv_24s_16s} 
   @{" conv_24s_16s_im " link conv_24s_16s_im} 
   @{" conv_24s_24s " link conv_24s_24s} 
   @{" conv_24s_32s " link conv_24s_32s} 
   @{" conv_24s_8s " link conv_24s_8s} 
   @{" conv_32_Float " link conv_32_Float} 
   @{" conv_32m_16m " link conv_32m_16m} 
   @{" conv_32m_16s " link conv_32m_16s} 
   @{" conv_32m_24m " link conv_32m_24m} 
   @{" conv_32m_24s " link conv_32m_24s} 
   @{" conv_32m_32s " link conv_32m_32s} 
   @{" conv_32m_8m " link conv_32m_8m} 
   @{" conv_32m_8s " link conv_32m_8s} 
   @{" conv_32s_16m " link conv_32s_16m} 
   @{" conv_32s_16m_clip " link conv_32s_16m_clip} 
   @{" conv_32s_16s " link conv_32s_16s} 
   @{" conv_32s_16s_clip " link conv_32s_16s_clip} 
   @{" conv_32s_24m " link conv_32s_24m} 
   @{" conv_32s_24s " link conv_32s_24s} 
   @{" conv_32s_8m " link conv_32s_8m} 
   @{" conv_32s_8s " link conv_32s_8s} 
   @{" conv_8m_16m " link conv_8m_16m} 
   @{" conv_8m_16s " link conv_8m_16s} 
   @{" conv_8m_24m " link conv_8m_24m} 
   @{" conv_8m_24s " link conv_8m_24s} 
   @{" conv_8m_8m " link conv_8m_8m} 
   @{" conv_8m_8s " link conv_8m_8s} 
   @{" conv_8s_16m " link conv_8s_16m} 
   @{" conv_8s_16s " link conv_8s_16s} 
   @{" conv_8s_24s " link conv_8s_24s} 
   @{" conv_8s_8m " link conv_8s_8m} 
   @{" conv_8s_8s " link conv_8s_8s} 
   @{" conv_Float_16 " link conv_Float_16} 
   @{" conv_Float_32 " link conv_Float_32} 
   @{" conv_any " link conv_any} 
   @{" conv_x_x " link conv_x_x} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE FlipEndian16 "FlipEndian16"

@{B}FlipEndian16@{UB}

@{B}Syntax:@{UB} FlipEndian16 \{sourceaddr.l,destaddr.l,flength.l\}

@{B}Description:@{UB}
Convert to intel to motorola byte order (little endian <=> big endian).
The function is symetric, it converts also from motorola to intel.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in 16bit words (byte length / 2)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE FlipEndian24 "FlipEndian24"

@{B}FlipEndian24@{UB}

@{B}Syntax:@{UB} FlipEndian24 \{sourceaddr.l,destaddr.l,flength.l\}

@{B}Description:@{UB}
Convert to intel to motorola byte order (little endian <=> big endian).
The function is symetric, it converts also from motorola to intel.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE FlipEndian32 "FlipEndian32"

@{B}FlipEndian32@{UB}

@{B}Syntax:@{UB} FlipEndian32 \{sourceaddr.l,destaddr.l,flength.l\}

@{B}Description:@{UB}
Convert to intel to motorola byte order (little endian <=> big endian).
The function is symetric, it converts also from motorola to intel.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in 32bit longwords (byte length / 4)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} convert_audio.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, AmigaOS4, MOS

@{B}Date:@{UB} 11.03.2006

@{B}Author:@{UB} Thilo Koehler

@{B}Requirements:@{UB} Amiblitz2.4

@{B}Purpose:@{UB}
Provide some convertion functions for audio processing, mainly to convert between 8, 16 and 24 bit.

@{B}Abstract:@{UB}
Here you find some useful functions, that convert between different audio data formats, and a resampling and big-endian vs. little-endian function.

@{B}User Constants:@{UB}    none

@{B}Example:@{UB}                                                 none



@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Resample "Resample"

@{B}Resample@{UB}

@{B}Syntax:@{UB}  written.l = Resample \{sourceaddr.l,destaddr.l,sourcelength.l,sourcerate.l,destrate.l,channels.l,*brain.resample_brain\}

@{B}Description:@{UB}
Change the sampling rate of the given audio signal (16bit, stereo, signed) up or down. If the sampling rate is lowered, the algorithm performs an implicit lowpass filtering to avoid aliasing.
This algorithm is far from being perfect, but it is much better than reampling by dropping or doubling samples.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l      : memory address of the destination buffer
- sourcelength.l  : length of the source signal in sample frames (=bytelength/4)
- ratio.l        : ratio of the sampling rate change
- *brain.resample_brain   : pointer to some memory to store history data for the next call of this function
- sourcerate.l    : ???
- destrate.l    : ???
- channels.l    : ???

@{B}Result:@{UB}      
- written.l      : number of sampelframes written

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ResampleASM "ResampleASM"

@{B}ResampleASM@{UB}

@{B}Syntax:@{UB} ResampleASM \{sourceaddr.l,destaddr.l,sourcelength.l,ratio.l,base.l,stack.l\}

@{B}Description:@{UB}
Convert the sourcebuffer to a different sample rate.
The sample rate change will be newsr = oldsr * a / b.
It converts 16bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- sourcelength.l    : length of the source buffer in sampleframes (byte length / 2)
- ratio.l    : a
- base.l    : b
- stack.l    : memory pointer to 12 bytes of memory

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Unsigned2Signed16 "Unsigned2Signed16"

@{B}Unsigned2Signed16@{UB}

@{B}Syntax:@{UB} Unsigned2Signed16 \{sourceaddr.l,destaddr.l,wlength.l\}

@{B}Description:@{UB}
Convert 16bit signed audio signal to 16bit unsigned. This function can convert mono or stereo data.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- wlength.l    : length in 16bit words (byte length / 2)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Unsigned2Signed24 "Unsigned2Signed24"

@{B}Unsigned2Signed24@{UB}

@{B}Syntax:@{UB} Unsigned2Signed24 \{sourceaddr.l,destaddr.l,slength.l\}

@{B}Description:@{UB}
Convert 24bit signed audio signal to 24bit unsigned. This function can convert mono or stereo data.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- slength.l    : length in samples

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Unsigned2Signed32 "Unsigned2Signed32"

@{B}Unsigned2Signed32@{UB}

@{B}Syntax:@{UB} Unsigned2Signed32 \{sourceaddr.l,destaddr.l,slength.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- slength.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Unsigned2Signed8 "Unsigned2Signed8"

@{B}Unsigned2Signed8@{UB}

@{B}Syntax:@{UB} Unsigned2Signed8 \{sourceaddr.l,destaddr.l,blength.l\}

@{B}Description:@{UB}
Convert 8bit signed audio signal to 8bit unsigned. This function can convert mono or stereo data.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- blength.l    : byte length

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16_Float "conv_16_Float"

@{B}conv_16_Float@{UB}

@{B}Syntax:@{UB} conv_16_Float \{sourceaddr.l,destaddr.l,flength.l,norm.f\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- norm.f    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16m_16m "conv_16m_16m"

@{B}conv_16m_16m@{UB}

@{B}Syntax:@{UB} conv_16m_16m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit mono to 16bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16m_16s "conv_16m_16s"

@{B}conv_16m_16s@{UB}

@{B}Syntax:@{UB} conv_16m_16s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit mono to 16bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16m_24m "conv_16m_24m"

@{B}conv_16m_24m@{UB}

@{B}Syntax:@{UB} conv_16m_24m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit mono to 24bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16m_32m "conv_16m_32m"

@{B}conv_16m_32m@{UB}

@{B}Syntax:@{UB} conv_16m_32m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16m_32m_extent "conv_16m_32m_extent"

@{B}conv_16m_32m_extent@{UB}

@{B}Syntax:@{UB} conv_16m_32m_extent \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16m_32s "conv_16m_32s"

@{B}conv_16m_32s@{UB}

@{B}Syntax:@{UB} conv_16m_32s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit mono to 32bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16m_32s_extent "conv_16m_32s_extent"

@{B}conv_16m_32s_extent@{UB}

@{B}Syntax:@{UB} conv_16m_32s_extent \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16m_8m "conv_16m_8m"

@{B}conv_16m_8m@{UB}

@{B}Syntax:@{UB} conv_16m_8m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit mono to 8bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16m_8s "conv_16m_8s"

@{B}conv_16m_8s@{UB}

@{B}Syntax:@{UB} conv_16m_8s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit mono to 8bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16s_16m "conv_16s_16m"

@{B}conv_16s_16m@{UB}

@{B}Syntax:@{UB} conv_16s_16m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit stereo to 16bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16s_16s "conv_16s_16s"

@{B}conv_16s_16s@{UB}

@{B}Syntax:@{UB} conv_16s_16s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit stereo to 16bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16s_24s "conv_16s_24s"

@{B}conv_16s_24s@{UB}

@{B}Syntax:@{UB} conv_16s_24s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit stereo to 24bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16s_32s "conv_16s_32s"

@{B}conv_16s_32s@{UB}

@{B}Syntax:@{UB} conv_16s_32s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit mono to 32bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16s_32s_extent "conv_16s_32s_extent"

@{B}conv_16s_32s_extent@{UB}

@{B}Syntax:@{UB} conv_16s_32s_extent \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16s_8m "conv_16s_8m"

@{B}conv_16s_8m@{UB}

@{B}Syntax:@{UB} conv_16s_8m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit stereo to 8bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_16s_8s "conv_16s_8s"

@{B}conv_16s_8s@{UB}

@{B}Syntax:@{UB} conv_16s_8s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 16bit stereo to 8bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_24m_16m "conv_24m_16m"

@{B}conv_24m_16m@{UB}

@{B}Syntax:@{UB} conv_24m_16m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 24bit mono to 16bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_24m_16m_im "conv_24m_16m_im"

@{B}conv_24m_16m_im@{UB}

@{B}Syntax:@{UB} conv_24m_16m_im \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 24bit mono to 16bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_24m_24m "conv_24m_24m"

@{B}conv_24m_24m@{UB}

@{B}Syntax:@{UB} conv_24m_24m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 24bit mono to 24bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_24m_32m "conv_24m_32m"

@{B}conv_24m_32m@{UB}

@{B}Syntax:@{UB} conv_24m_32m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_24m_8m "conv_24m_8m"

@{B}conv_24m_8m@{UB}

@{B}Syntax:@{UB} conv_24m_8m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 24bit mono to 8bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_24s_16s "conv_24s_16s"

@{B}conv_24s_16s@{UB}

@{B}Syntax:@{UB} conv_24s_16s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 24bit stereo to 16bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_24s_16s_im "conv_24s_16s_im"

@{B}conv_24s_16s_im@{UB}

@{B}Syntax:@{UB} conv_24s_16s_im \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 24bit stereo to 16bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_24s_24s "conv_24s_24s"

@{B}conv_24s_24s@{UB}

@{B}Syntax:@{UB} conv_24s_24s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 24bit stereo to 24bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_24s_32s "conv_24s_32s"

@{B}conv_24s_32s@{UB}

@{B}Syntax:@{UB} conv_24s_32s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_24s_8s "conv_24s_8s"

@{B}conv_24s_8s@{UB}

@{B}Syntax:@{UB} conv_24s_8s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 24bit stereo to 8bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32_Float "conv_32_Float"

@{B}conv_32_Float@{UB}

@{B}Syntax:@{UB} conv_32_Float \{sourceaddr.l,destaddr.l,flength.l,norm.f\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- norm.f    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32m_16m "conv_32m_16m"

@{B}conv_32m_16m@{UB}

@{B}Syntax:@{UB} conv_32m_16m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32m_16s "conv_32m_16s"

@{B}conv_32m_16s@{UB}

@{B}Syntax:@{UB} conv_32m_16s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32m_24m "conv_32m_24m"

@{B}conv_32m_24m@{UB}

@{B}Syntax:@{UB} conv_32m_24m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32m_24s "conv_32m_24s"

@{B}conv_32m_24s@{UB}

@{B}Syntax:@{UB} conv_32m_24s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32m_32s "conv_32m_32s"

@{B}conv_32m_32s@{UB}

@{B}Syntax:@{UB} conv_32m_32s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32m_8m "conv_32m_8m"

@{B}conv_32m_8m@{UB}

@{B}Syntax:@{UB} conv_32m_8m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32m_8s "conv_32m_8s"

@{B}conv_32m_8s@{UB}

@{B}Syntax:@{UB} conv_32m_8s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32s_16m "conv_32s_16m"

@{B}conv_32s_16m@{UB}

@{B}Syntax:@{UB} conv_32s_16m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32s_16m_clip "conv_32s_16m_clip"

@{B}conv_32s_16m_clip@{UB}

@{B}Syntax:@{UB} conv_32s_16m_clip \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 32bit stereo to 16bit mono.
NOTE: This function assumes 16bit dynamic range in the 32bit data and will clip values out of [-32768...32767]!

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32s_16s "conv_32s_16s"

@{B}conv_32s_16s@{UB}

@{B}Syntax:@{UB} conv_32s_16s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32s_16s_clip "conv_32s_16s_clip"

@{B}conv_32s_16s_clip@{UB}

@{B}Syntax:@{UB} conv_32s_16s_clip \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 32bit stereo to 16bit stereo.
NOTE: This function assumes 16bit dynamic range in the 32bit data and will clip values out of [-32768...32767]!

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32s_24m "conv_32s_24m"

@{B}conv_32s_24m@{UB}

@{B}Syntax:@{UB} conv_32s_24m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32s_24s "conv_32s_24s"

@{B}conv_32s_24s@{UB}

@{B}Syntax:@{UB} conv_32s_24s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32s_8m "conv_32s_8m"

@{B}conv_32s_8m@{UB}

@{B}Syntax:@{UB} conv_32s_8m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_32s_8s "conv_32s_8s"

@{B}conv_32s_8s@{UB}

@{B}Syntax:@{UB} conv_32s_8s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8m_16m "conv_8m_16m"

@{B}conv_8m_16m@{UB}

@{B}Syntax:@{UB} conv_8m_16m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 8bit mono to 16bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8m_16s "conv_8m_16s"

@{B}conv_8m_16s@{UB}

@{B}Syntax:@{UB} conv_8m_16s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 8bit mono to 16bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8m_24m "conv_8m_24m"

@{B}conv_8m_24m@{UB}

@{B}Syntax:@{UB} conv_8m_24m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 8bit mono to 24bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8m_24s "conv_8m_24s"

@{B}conv_8m_24s@{UB}

@{B}Syntax:@{UB} conv_8m_24s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8m_8m "conv_8m_8m"

@{B}conv_8m_8m@{UB}

@{B}Syntax:@{UB} conv_8m_8m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 8bit mono to 8bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8m_8s "conv_8m_8s"

@{B}conv_8m_8s@{UB}

@{B}Syntax:@{UB} conv_8m_8s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 8bit mono to 8bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8s_16m "conv_8s_16m"

@{B}conv_8s_16m@{UB}

@{B}Syntax:@{UB} conv_8s_16m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 8bit stereo to 16bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8s_16s "conv_8s_16s"

@{B}conv_8s_16s@{UB}

@{B}Syntax:@{UB} conv_8s_16s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 8bit stereo to 16bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8s_24s "conv_8s_24s"

@{B}conv_8s_24s@{UB}

@{B}Syntax:@{UB} conv_8s_24s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 8bit stereo to 24bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8s_8m "conv_8s_8m"

@{B}conv_8s_8m@{UB}

@{B}Syntax:@{UB} conv_8s_8m \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 8bit stereo to 8bit mono.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_8s_8s "conv_8s_8s"

@{B}conv_8s_8s@{UB}

@{B}Syntax:@{UB} conv_8s_8s \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l\}

@{B}Description:@{UB}
Convert from 8bit stereo to 8bit stereo.

@{B}Inputs:@{UB}      
- sourceaddr.l    : memory address of the source buffer
- destaddr.l    : memory address of the destination buffer
- flength.l    : length in sample frames
- mode.l    : 1 = left channel, -1 = right channel, 0 = mix (if from stereo=>mono)
- quality.l    : 0 = fast, -1 = quality mode (if available)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_Float_16 "conv_Float_16"

@{B}conv_Float_16@{UB}

@{B}Syntax:@{UB} conv_Float_16 \{sourceaddr.l,destaddr.l,flength.l,norm.f\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- norm.f    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_Float_32 "conv_Float_32"

@{B}conv_Float_32@{UB}

@{B}Syntax:@{UB} conv_Float_32 \{sourceaddr.l,destaddr.l,flength.l,norm.f\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- norm.f    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_any "conv_any"

@{B}conv_any@{UB}

@{B}Syntax:@{UB} conv_any \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l,sbits.l,schannels.l,dbits.l,dchannels.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???
- sbits.l    : ???
- schannels.l    : ???
- dbits.l    : ???
- dchannels.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE conv_x_x "conv_x_x"

@{B}conv_x_x@{UB}

@{B}Syntax:@{UB} conv_x_x \{sourceaddr.l,destaddr.l,flength.l,mode.l,quality.l,sbit.l,schannels.l,dbit.l,dchannels.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- mode.l    : ???
- quality.l    : ???
- sbit.l    : ???
- schannels.l    : ???
- dbit.l    : ???
- dchannels.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
