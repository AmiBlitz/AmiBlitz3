@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "map.include"

@{B}map.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" map_AccessImage " link map_AccessImage} 
   @{" map_CleanUp " link map_CleanUp} 
   @{" map_Create " link map_Create} 
   @{" map_CreateImage " link map_CreateImage} 
   @{" map_CreateObject " link map_CreateObject} 
   @{" map_CreatePin " link map_CreatePin} 
   @{" map_CreateTile " link map_CreateTile} 
   @{" map_DePinObject " link map_DePinObject} 
   @{" map_FindMapImageByName " link map_FindMapImageByName} 
   @{" map_FindObjectByUserData " link map_FindObjectByUserData} 
   @{" map_FindPin " link map_FindPin} 
   @{" map_FootHandle " link map_FootHandle} 
   @{" map_Free " link map_Free} 
   @{" map_FreeAlpha " link map_FreeAlpha} 
   @{" map_FreeImage " link map_FreeImage} 
   @{" map_FreeObject " link map_FreeObject} 
   @{" map_FreeTile " link map_FreeTile} 
   @{" map_GetAttr " link map_GetAttr} 
   @{" map_GetFreeAlpha " link map_GetFreeAlpha} 
   @{" map_GetFreeImage " link map_GetFreeImage} 
   @{" map_GetHeight " link map_GetHeight} 
   @{" map_GetPinObject " link map_GetPinObject} 
   @{" map_GetPinX " link map_GetPinX} 
   @{" map_GetPinY " link map_GetPinY} 
   @{" map_GetTileAlpha " link map_GetTileAlpha} 
   @{" map_GetTileCarpet " link map_GetTileCarpet} 
   @{" map_GetTileEdgeHeight " link map_GetTileEdgeHeight} 
   @{" map_GetTileHeight " link map_GetTileHeight} 
   @{" map_GetTileImage " link map_GetTileImage} 
   @{" map_GetTileMode " link map_GetTileMode} 
   @{" map_HitPin " link map_HitPin} 
   @{" map_LayoutPin " link map_LayoutPin} 
   @{" map_LoadAlpha " link map_LoadAlpha} 
   @{" map_LoadImage " link map_LoadImage} 
   @{" map_Long2String " link map_Long2String} 
   @{" map_MovePin " link map_MovePin} 
   @{" map_ObjectExist " link map_ObjectExist} 
   @{" map_OpenMap " link map_OpenMap} 
   @{" map_OpenXMLMap " link map_OpenXMLMap} 
   @{" map_OpenXMLProject " link map_OpenXMLProject} 
   @{" map_PinObject " link map_PinObject} 
   @{" map_ReleaseImage " link map_ReleaseImage} 
   @{" map_RemPin " link map_RemPin} 
   @{" map_RemTile " link map_RemTile} 
   @{" map_Render " link map_Render} 
   @{" map_RenderOverview " link map_RenderOverview} 
   @{" map_Resize " link map_Resize} 
   @{" map_SaveData " link map_SaveData} 
   @{" map_SaveMap " link map_SaveMap} 
   @{" map_SaveProject " link map_SaveProject} 
   @{" map_SaveXMLMap " link map_SaveXMLMap} 
   @{" map_SaveXMLProject " link map_SaveXMLProject} 
   @{" map_ScrollTo " link map_ScrollTo} 
   @{" map_SetAttrs " link map_SetAttrs} 
   @{" map_SetHandle " link map_SetHandle} 
   @{" map_SetImageAttrs " link map_SetImageAttrs} 
   @{" map_SetObject " link map_SetObject} 
   @{" map_SetTile " link map_SetTile} 
   @{" map_SetTileEdgeHeight " link map_SetTileEdgeHeight} 
   @{" map_SetTileHeight " link map_SetTileHeight} 
   @{" map_Trim " link map_Trim} 
   @{" map_UpdateHeightInfo " link map_UpdateHeightInfo} 
   @{" map_UpdateObject " link map_UpdateObject} 
   @{" map_WriteAlpha " link map_WriteAlpha} 
   @{" map_WriteString " link map_WriteString} 
   @{" map_WriteStringN " link map_WriteStringN} 
   @{" map_X2Tile " link map_X2Tile} 
   @{" map_Y2Tile " link map_Y2Tile} 

@{B}Public Macro Index:@{UB}

   @{" !map_AddDrawPin Listname,x,y " link !map_AddDrawPin Listname,x,y} 
   @{" !map_GetHeightMap " link !map_GetHeightMap} 
   @{" !map_GetPinHead " link !map_GetPinHead} 
   @{" !map_GetTile " link !map_GetTile} 
   @{" !map_GetTileEdgeHeight " link !map_GetTileEdgeHeight} 
   @{" !map_SetPinHead " link !map_SetPinHead} 
   @{" !map_SetTileEdgeHeight " link !map_SetTileEdgeHeight} 

@ENDNODE
@NODE !map_AddDrawPin Listname,x,y "!map_AddDrawPin Listname,x,y"

@{B}!map_AddDrawPin Listname,x,y@{UB}

@{B}Syntax:@{UB} !map_AddDrawPin Listname,x,y

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !map_GetHeightMap "!map_GetHeightMap"

@{B}!map_GetHeightMap@{UB}

@{B}Syntax:@{UB} !map_GetHeightMap

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !map_GetPinHead "!map_GetPinHead"

@{B}!map_GetPinHead@{UB}

@{B}Syntax:@{UB} !map_GetPinHead \{xpos.l,ypos.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- xpos.l    : ???
- ypos.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !map_GetTile "!map_GetTile"

@{B}!map_GetTile@{UB}

@{B}Syntax:@{UB} !map_GetTile \{xpos.l,ypos.l\}

@{B}Description:@{UB}
Get the pointer to a tile at xpos/ypos postion in the map.

@{B}Inputs:@{UB}      
- xpos.l    : x position
- ypos.l    : y position

@{B}Result:@{UB}      
*tile.maptile : pointer to a tile

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !map_GetTileEdgeHeight "!map_GetTileEdgeHeight"

@{B}!map_GetTileEdgeHeight@{UB}

@{B}Syntax:@{UB} !map_GetTileEdgeHeight \{map,col,row\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- map    : ???
- col    : ???
- row    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !map_SetPinHead "!map_SetPinHead"

@{B}!map_SetPinHead@{UB}

@{B}Syntax:@{UB} !map_SetPinHead \{pinhead.l,xpos.l,ypos.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- pinhead.l    : ???
- xpos.l    : ???
- ypos.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !map_SetTileEdgeHeight "!map_SetTileEdgeHeight"

@{B}!map_SetTileEdgeHeight@{UB}

@{B}Syntax:@{UB} !map_SetTileEdgeHeight \{map,col,row,h\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- map    : ???
- col    : ???
- row    : ???
- h    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} map.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 24/05/2007

@{B}Author:@{UB} Thilo Koehler

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Provide map functionality for games.
Maps can be edited with MapEdit, and used with this include within your game.

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#MAX_LAYERS = n
#MAX_ALPHAS = n
#MAX_IMAGES = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_AccessImage "map_AccessImage"

@{B}map_AccessImage@{UB}

@{B}Syntax:@{UB}  result.l = map_AccessImage \{mimage.l,@*map.mapbase\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mimage.l    : ???
- *map.mapbase    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_CleanUp "map_CleanUp"

@{B}map_CleanUp@{UB}

@{B}Syntax:@{UB} map_CleanUp \{\}

@{B}Description:@{UB}
Clean everything up. This function is called on autoexit.
All maps that are created during runtime will be tracked
and freed by this function, if not already done so.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_Create "map_Create"

@{B}map_Create@{UB}

@{B}Syntax:@{UB}  result.l = map_Create \{name.s,tile_width.l,tile_height.l\}

@{B}Description:@{UB}
Create a new map.

@{B}Inputs:@{UB}      
- name.s        : name of the map
- tile_width.l  : tile size in pixels
- tile_height.l :

@{B}Result:@{UB}      
- result.l      : pointer to a map or 0 if failed

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_CreateImage "map_CreateImage"

@{B}map_CreateImage@{UB}

@{B}Syntax:@{UB}  result.l = map_CreateImage \{filename.s,fileoffset.l,@mimage.l,@image.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- filename.s    : ???
- fileoffset.l    : ???
- mimage.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_CreateObject "map_CreateObject"

@{B}map_CreateObject@{UB}

@{B}Syntax:@{UB}  result.l = map_CreateObject \{name.s,vm.f,@mainimage.l,@shadowimage.l,@heightimage.l,@user_data.l,@shadowdepth.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- name.s    : ???
- vm.f    : ???
- mainimage.l    : ???
- shadowimage.l    : ???
- heightimage.l    : ???
- user_data.l    : ???
- shadowdepth.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_CreatePin "map_CreatePin"

@{B}map_CreatePin@{UB}

@{B}Syntax:@{UB}  result.l = map_CreatePin \{*obj.mapobject,x.l,y.l,@z.l,@user_data.l,@flags.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *obj.mapobject    : ???
- x.l    : ???
- y.l    : ???
- z.l    : ???
- user_data.l    : ???
- flags.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_CreateTile "map_CreateTile"

@{B}map_CreateTile@{UB}

@{B}Syntax:@{UB}  result.l = map_CreateTile \{\}

@{B}Description:@{UB}
Create a new tile. This is only for internal use.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_DePinObject "map_DePinObject"

@{B}map_DePinObject@{UB}

@{B}Syntax:@{UB}  result.l = map_DePinObject \{*pinhead.mappinhead,*obj.mapobject\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pinhead.mappinhead    : ???
- objID.l    : ???
- *obj.mapobject    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_FindMapImageByName "map_FindMapImageByName"

@{B}map_FindMapImageByName@{UB}

@{B}Syntax:@{UB}  result.l = map_FindMapImageByName \{filename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- filename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_FindObjectByUserData "map_FindObjectByUserData"

@{B}map_FindObjectByUserData@{UB}

@{B}Syntax:@{UB}  result.l = map_FindObjectByUserData \{user_data.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- user_data.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_FindPin "map_FindPin"

@{B}map_FindPin@{UB}

@{B}Syntax:@{UB}  result.l = map_FindPin \{*map.mapbase,*obj.mapobject\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- *obj.mapobject    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_FootHandle "map_FootHandle"

@{B}map_FootHandle@{UB}

@{B}Syntax:@{UB} map_FootHandle \{mimage.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mimage.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_Free "map_Free"

@{B}map_Free@{UB}

@{B}Syntax:@{UB} map_Free \{*map.mapbase\}

@{B}Description:@{UB}
Free a map and all associated resources.

@{B}Inputs:@{UB}      
- *map.mapbase    : pointer to a map.

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_FreeAlpha "map_FreeAlpha"

@{B}map_FreeAlpha@{UB}

@{B}Syntax:@{UB}  result.l = map_FreeAlpha \{alpha.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- alpha.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_FreeImage "map_FreeImage"

@{B}map_FreeImage@{UB}

@{B}Syntax:@{UB}  result.l = map_FreeImage \{mimage.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mimage.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_FreeObject "map_FreeObject"

@{B}map_FreeObject@{UB}

@{B}Syntax:@{UB}  result.l = map_FreeObject \{*obj.mapobject\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *obj.mapobject    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_FreeTile "map_FreeTile"

@{B}map_FreeTile@{UB}

@{B}Syntax:@{UB}  result.l = map_FreeTile \{*tile.maptile\}

@{B}Description:@{UB}
Free a tile. Internal use only.

@{B}Inputs:@{UB}      
- *tile.maptile    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetAttr "map_GetAttr"

@{B}map_GetAttr@{UB}

@{B}Syntax:@{UB}  result.l = map_GetAttr \{*map.mapbase,tag.l,@tagdata.l\}

@{B}Description:@{UB}
Get an attribute from a map

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- tag.l    : ???
- tagdata.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetFreeAlpha "map_GetFreeAlpha"

@{B}map_GetFreeAlpha@{UB}

@{B}Syntax:@{UB}  result.l = map_GetFreeAlpha \{@minalpha.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- minalpha.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetFreeImage "map_GetFreeImage"

@{B}map_GetFreeImage@{UB}

@{B}Syntax:@{UB}  result.l = map_GetFreeImage \{@minmimage.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- minmimage.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetHeight "map_GetHeight"

@{B}map_GetHeight@{UB}

@{B}Syntax:@{UB}  result.l = map_GetHeight \{*map.mapbase,absx.l,absy.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- absx.l    : ???
- absy.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetPinObject "map_GetPinObject"

@{B}map_GetPinObject@{UB}

@{B}Syntax:@{UB}  result.l = map_GetPinObject \{*pin.mapPin\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- objID.l    : ???
- *pin.mapPin    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetPinX "map_GetPinX"

@{B}map_GetPinX@{UB}

@{B}Syntax:@{UB}  result.l = map_GetPinX \{*pin.mapPin\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- objID.l    : ???
- *pin.mapPin    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetPinY "map_GetPinY"

@{B}map_GetPinY@{UB}

@{B}Syntax:@{UB}  result.l = map_GetPinY \{*pin.mapPin\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- objID.l    : ???
- *pin.mapPin    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetTileAlpha "map_GetTileAlpha"

@{B}map_GetTileAlpha@{UB}

@{B}Syntax:@{UB}  result.l = map_GetTileAlpha \{*map.mapbase,col.l,row.l,layer.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???
- layer.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetTileCarpet "map_GetTileCarpet"

@{B}map_GetTileCarpet@{UB}

@{B}Syntax:@{UB}  result.l = map_GetTileCarpet \{*map.mapbase,col.l,row.l,layer.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???
- layer.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetTileEdgeHeight "map_GetTileEdgeHeight"

@{B}map_GetTileEdgeHeight@{UB}

@{B}Syntax:@{UB}  result.l = map_GetTileEdgeHeight \{*map.mapbase,col.l,row.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetTileHeight "map_GetTileHeight"

@{B}map_GetTileHeight@{UB}

@{B}Syntax:@{UB}  result.l = map_GetTileHeight \{*map.mapbase,col.l,row.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetTileImage "map_GetTileImage"

@{B}map_GetTileImage@{UB}

@{B}Syntax:@{UB}  result.l = map_GetTileImage \{*map.mapbase,col.l,row.l,layer.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???
- layer.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_GetTileMode "map_GetTileMode"

@{B}map_GetTileMode@{UB}

@{B}Syntax:@{UB}  result.l = map_GetTileMode \{*map.mapbase,col.l,row.l,layer.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???
- layer.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_HitPin "map_HitPin"

@{B}map_HitPin@{UB}

@{B}Syntax:@{UB}  result.l = map_HitPin \{*map.mapbase,absx.l,absy.l,@absz.l\}

@{B}Description:@{UB}
Check the given  coordinates and return an object handle,
if any object was hit. If absz is omitted, the hit will be
performed "from sky", useful for map editors. Otherwise the
hit will respect the height of the in-game-pixel, useful for
in-game hitting

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- absx.l    : ???
- absy.l    : ???
- absz.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_LayoutPin "map_LayoutPin"

@{B}map_LayoutPin@{UB}

@{B}Syntax:@{UB} map_LayoutPin \{*map.mapbase,*pin.mapPin,set.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- objID.l    : ???
- set.l    : ???
- *pin.mapPin    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_LoadAlpha "map_LoadAlpha"

@{B}map_LoadAlpha@{UB}

@{B}Syntax:@{UB}  result.l = map_LoadAlpha \{*map.mapbase,filename.s,@alpha.l\}

@{B}Description:@{UB}
Load a greyscale image as an alpha channel.
If the image is a multiple of the tile dimensions, it is read as several alphas.
Check the return value how many alphas were read.

@{B}Inputs:@{UB}      
- *map.mapbase  : pointer to the map
- filename.s    : of the image file
- alpha.l       : load to a specific alpha ID or -1 for auto select

@{B}Result:@{UB}      
- result.l      : number of alphas read

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_LoadImage "map_LoadImage"

@{B}map_LoadImage@{UB}

@{B}Syntax:@{UB}  result.l = map_LoadImage \{*map.mapbase,filename.s,@mimage.l,@count.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase  : ???
- filename.s    : ???
- mimage.l      : ???
- count.l       : ???

@{B}Result:@{UB}      
- result.l      : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_Long2String "map_Long2String"

@{B}map_Long2String@{UB}

@{B}Syntax:@{UB}  result.s = map_Long2String \{long.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- long.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_MovePin "map_MovePin"

@{B}map_MovePin@{UB}

@{B}Syntax:@{UB}  result.l = map_MovePin \{*map.mapbase,*pin.mapPin,absx.l,absy.l\}

@{B}Description:@{UB}
move an object on the map.
NOTE: this is much more efficient than removing an object and setting it again.

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- objID.l    : ???
- absx.l    : ???
- absy.l    : ???
- *pin.mapPin    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_ObjectExist "map_ObjectExist"

@{B}map_ObjectExist@{UB}

@{B}Syntax:@{UB}  result.l = map_ObjectExist \{name.s,vm.f,@mainimage.l,@shadowimage.l,@heightimage.l,@user_data.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- name.s    : ???
- vm.f    : ???
- mainimage.l    : ???
- shadowimage.l    : ???
- heightimage.l    : ???
- user_data.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_OpenMap "map_OpenMap"

@{B}map_OpenMap@{UB}

@{B}Syntax:@{UB}  result.l = map_OpenMap \{filename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- filename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_OpenXMLMap "map_OpenXMLMap"

@{B}map_OpenXMLMap@{UB}

@{B}Syntax:@{UB}  result.l = map_OpenXMLMap \{filename.s\}

@{B}Description:@{UB}
Open a map from disk, either in develope or release mode.

@{B}Inputs:@{UB}      
- filename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_OpenXMLProject "map_OpenXMLProject"

@{B}map_OpenXMLProject@{UB}

@{B}Syntax:@{UB}  result.l = map_OpenXMLProject \{filename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- filename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_PinObject "map_PinObject"

@{B}map_PinObject@{UB}

@{B}Syntax:@{UB}  result.l = map_PinObject \{*pinhead.mappinhead,*pin.mapPin\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pinhead.mappinhead    : ???
- objID.l    : ???
- *pin.mapPin    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_ReleaseImage "map_ReleaseImage"

@{B}map_ReleaseImage@{UB}

@{B}Syntax:@{UB} map_ReleaseImage \{mimage.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mimage.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_RemPin "map_RemPin"

@{B}map_RemPin@{UB}

@{B}Syntax:@{UB} map_RemPin \{*map.mapbase,*pin.mapPin\}

@{B}Description:@{UB}
Remove an object from the map.

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- objID.l    : ???
- *pin.mapPin    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_RemTile "map_RemTile"

@{B}map_RemTile@{UB}

@{B}Syntax:@{UB} map_RemTile \{*map.mapbase,col.l,row.l,layer.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???
- layer.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_Render "map_Render"

@{B}map_Render@{UB}

@{B}Syntax:@{UB} map_Render \{*map.mapbase,*rp.RastPort,rpx.l,rpy.l,width.l,height.l,@flags.l\}

@{B}Description:@{UB}
Render a map to a given rastport at the given rastport coordinates
This function respects the current offset of the map, set by
@{" map_ScrollTo " link map_ScrollTo}.

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- *rp.RastPort    : ???
- rpx.l    : ???
- rpy.l    : ???
- width.l    : ???
- height.l    : ???
- flags.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_RenderOverview "map_RenderOverview"

@{B}map_RenderOverview@{UB}

@{B}Syntax:@{UB} map_RenderOverview \{*map.mapbase,*rp.RastPort,rpx.l,rpy.l,startcol.l,startrow.l,width.l,height.l,@flags.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- *rp.RastPort    : ???
- rpx.l    : ???
- rpy.l    : ???
- startcol.l    : ???
- startrow.l    : ???
- width.l    : ???
- height.l    : ???
- flags.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_Resize "map_Resize"

@{B}map_Resize@{UB}

@{B}Syntax:@{UB}  result.l = map_Resize \{*map.mapbase,col.l,row.l\}

@{B}Description:@{UB}
Resize a map. Internal use only.

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SaveData "map_SaveData"

@{B}map_SaveData@{UB}

@{B}Syntax:@{UB}  result.l = map_SaveData \{basename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- basename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SaveMap "map_SaveMap"

@{B}map_SaveMap@{UB}

@{B}Syntax:@{UB}  result.l = map_SaveMap \{*map.mapbase,filename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- filename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SaveProject "map_SaveProject"

@{B}map_SaveProject@{UB}

@{B}Syntax:@{UB}  result.l = map_SaveProject \{basename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- basename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SaveXMLMap "map_SaveXMLMap"

@{B}map_SaveXMLMap@{UB}

@{B}Syntax:@{UB}  result.l = map_SaveXMLMap \{*map.mapbase,filename.s\}

@{B}Description:@{UB}
Save a map to disk. This can be in develope mode (all images are only
referred and thus can be changed any time), or release mode,
were all data inlcuding images will be packet as one file.

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- filename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SaveXMLProject "map_SaveXMLProject"

@{B}map_SaveXMLProject@{UB}

@{B}Syntax:@{UB}  result.l = map_SaveXMLProject \{basename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- basename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_ScrollTo "map_ScrollTo"

@{B}map_ScrollTo@{UB}

@{B}Syntax:@{UB} map_ScrollTo \{*map.mapbase,xoffset.l,yoffset.l\}

@{B}Description:@{UB}
Scroll the map to the given pixel coordinates. @{" map_Render " link map_Render} will
automatically respect those offsets.
Note: Nothing will be redrawn, this function simply sets the offset parameters.
you have to take care about the refreshing, which can be a complete redraw  using @{" map_Render " link map_Render}, but also a ScrollRastPort_ and a subsequent restauration of the newly-scrolled-in areas.

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- xoffset.l    : ???
- yoffset.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SetAttrs "map_SetAttrs"

@{B}map_SetAttrs@{UB}

@{B}Syntax:@{UB}  result.l = map_SetAttrs \{*map.mapbase,*taglist.TagItem\}

@{B}Description:@{UB}
Set attributes for a map

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- *taglist.TagItem    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SetHandle "map_SetHandle"

@{B}map_SetHandle@{UB}

@{B}Syntax:@{UB} map_SetHandle \{mimage.l,x.l,y.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mimage.l    : ???
- x.l    : ???
- y.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SetImageAttrs "map_SetImageAttrs"

@{B}map_SetImageAttrs@{UB}

@{B}Syntax:@{UB} map_SetImageAttrs \{mimage.l,xs.l,ys.l,ABGR.l,hotx.l,hoty.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mimage.l    : ???
- xs.l    : ???
- ys.l    : ???
- ABGR.l    : ???
- hotx.l    : ???
- hoty.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SetObject "map_SetObject"

@{B}map_SetObject@{UB}

@{B}Syntax:@{UB}  result.l = map_SetObject \{*map.mapbase,*obj.mapobject,absx.l,absy.l,@absz.l\}

@{B}Description:@{UB}
Set an object to the map and return a handle that identifies
this instance of the object

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- *obj.mapobject    : ???
- absx.l    : ???
- absy.l    : ???
- absz.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SetTile "map_SetTile"

@{B}map_SetTile@{UB}

@{B}Syntax:@{UB}  result.l = map_SetTile \{*map.mapbase,col.l,row.l,layer.l,@mimage.l,@alpha.l,@mode.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???
- layer.l    : ???
- mimage.l    : ???
- alpha.l    : ???
- mode.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SetTileEdgeHeight "map_SetTileEdgeHeight"

@{B}map_SetTileEdgeHeight@{UB}

@{B}Syntax:@{UB} map_SetTileEdgeHeight \{*map.mapbase,col.l,row.l,h.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???
- h.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_SetTileHeight "map_SetTileHeight"

@{B}map_SetTileHeight@{UB}

@{B}Syntax:@{UB} map_SetTileHeight \{*map.mapbase,col.l,row.l,h.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- col.l    : ???
- row.l    : ???
- h.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_Trim "map_Trim"

@{B}map_Trim@{UB}

@{B}Syntax:@{UB}  result.l = map_Trim \{*map.mapbase\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_UpdateHeightInfo "map_UpdateHeightInfo"

@{B}map_UpdateHeightInfo@{UB}

@{B}Syntax:@{UB} map_UpdateHeightInfo \{*map.mapbase\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *map.mapbase    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_UpdateObject "map_UpdateObject"

@{B}map_UpdateObject@{UB}

@{B}Syntax:@{UB} map_UpdateObject \{*obj.mapobject\}

@{B}Description:@{UB}
Calculate the new bounding box of an object.

@{B}Inputs:@{UB}      
- *obj.mapobject    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_WriteAlpha "map_WriteAlpha"

@{B}map_WriteAlpha@{UB}

@{B}Syntax:@{UB}  result.l = map_WriteAlpha \{fid.l,alpha.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fid.l    : ???
- alpha.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_WriteString "map_WriteString"

@{B}map_WriteString@{UB}

@{B}Syntax:@{UB}  result.l = map_WriteString \{fid.l,string.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fid.l    : ???
- string.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_WriteStringN "map_WriteStringN"

@{B}map_WriteStringN@{UB}

@{B}Syntax:@{UB}  result.l = map_WriteStringN \{fid.l,string.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fid.l    : ???
- string.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_X2Tile "map_X2Tile"

@{B}map_X2Tile@{UB}

@{B}Syntax:@{UB}  result.l = map_X2Tile \{*map.mapbase,x.l\}

@{B}Description:@{UB}
Convert screen pixel coordinates to a tile offset number.

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- x.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE map_Y2Tile "map_Y2Tile"

@{B}map_Y2Tile@{UB}

@{B}Syntax:@{UB}  result.l = map_Y2Tile \{*map.mapbase,y.l\}

@{B}Description:@{UB}
Convert screen pixel coordinates to a tile offset number.

@{B}Inputs:@{UB}      
- *map.mapbase    : ???
- y.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
