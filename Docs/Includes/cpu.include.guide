@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "cpu.include"

@{B}cpu.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" GetCPU " link GetCPU} 
   @{" GetCPUText " link GetCPUText} 
   @{" GetEmu " link GetEmu} 
   @{" GetEmuText " link GetEmuText} 
   @{" GetFPU " link GetFPU} 
   @{" GetFPUFlags " link GetFPUFlags} 
   @{" GetFPUText " link GetFPUText} 
   @{" SetFPUFlags " link SetFPUFlags} 

@{B}Public Macro Index:@{UB}

   @{" !getfpcr_x " link !getfpcr_x} 
   @{" !setfpcr_x " link !setfpcr_x} 

@ENDNODE
@NODE !getfpcr_x "!getfpcr_x"

@{B}!getfpcr_x@{UB}

@{B}Syntax:@{UB} !getfpcr_x

@{B}Description:@{UB}
This macro reads the FPU flag. It is already compiled in all.res, this is why it has _x at the end to avoid name clashing.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !setfpcr_x "!setfpcr_x"

@{B}!setfpcr_x@{UB}

@{B}Syntax:@{UB} !setfpcr_x

@{B}Description:@{UB}
This macro sets the FPU flag. It is already compiled in all.res, this is why it has _x at the end to avoid name clashing.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE GetCPU "GetCPU"

@{B}GetCPU@{UB}

@{B}Syntax:@{UB}  cou.b = GetCPU \{\}

@{B}Description:@{UB}
Check for 68k CPU.
NOTE: The peek on address 4 might cause a enforcer hit !
The result is:
6 : 68060
4 : 68040
3 : 68030
2 : 68020
1 : 68010
0 : 68000

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- cou.b     : cpu id

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE GetCPUText "GetCPUText"

@{B}GetCPUText@{UB}

@{B}Syntax:@{UB}  result.s = GetCPUText \{cpu.b\}

@{B}Description:@{UB}
fpu=4                       ; 68040 FPU (math emulation)
fpu=6                       ; 68060 FPU (math emulation)
fpu=3                       ; 68040 FPU (no math emulation)
fpu=5                       ; 68060 FPU (no math emulation)

@{B}Inputs:@{UB}      
- cpu.b    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE GetEmu "GetEmu"

@{B}GetEmu@{UB}

@{B}Syntax:@{UB}  result.b = GetEmu \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.b     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE GetEmuText "GetEmuText"

@{B}GetEmuText@{UB}

@{B}Syntax:@{UB}  result.s = GetEmuText \{emu.b\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- emu.b    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE GetFPU "GetFPU"

@{B}GetFPU@{UB}

@{B}Syntax:@{UB}  fpu.b = GetFPU \{\}

@{B}Description:@{UB}
0 = No FPU
1 = 68881 FPU
2 = 68882 FPU
3 = 68040 FPU (no math emulation) ; 040.library not loaded
4 = 68040 FPU (math emulation)
5 = 68060 FPU (no math emulation) ; 060.library not loaded
6 = 68060 FPU (math emulation)

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- fpu.b     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE GetFPUFlags "GetFPUFlags"

@{B}GetFPUFlags@{UB}

@{B}Syntax:@{UB}  result.l = GetFPUFlags \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE GetFPUText "GetFPUText"

@{B}GetFPUText@{UB}

@{B}Syntax:@{UB}  result.s = GetFPUText \{fpu.b\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fpu.b    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} cpu.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, AmigaOS4, MOS

@{B}Date:@{UB} 11.03.2006

@{B}Author:@{UB} Thilo Koehler

@{B}Requirements:@{UB} Amiblitz2.4

@{B}Purpose:@{UB}
This include has some functions to determine the system CPU/FPU and to set some FPU flags.

@{B}Abstract:@{UB}
Under emulated 68K, it will report the 68K CPU, not the host CPU.

@{B}User Constants:@{UB}    none

@{B}Example:@{UB}                                                 none



@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE SetFPUFlags "SetFPUFlags"

@{B}SetFPUFlags@{UB}

@{B}Syntax:@{UB} SetFPUFlags \{@flags.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- flags.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
