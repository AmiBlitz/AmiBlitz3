@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "HDRec_fx.include"

@{B}HDRec_fx.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" fx_create " link fx_create} 
   @{" fx_create_num " link fx_create_num} 
   @{" fx_findfree " link fx_findfree} 
   @{" fx_load " link fx_load} 
   @{" fx_notify " link fx_notify} 
   @{" fx_remove " link fx_remove} 
   @{" fx_reset " link fx_reset} 
   @{" fx_save " link fx_save} 
   @{" fx_supported_channels " link fx_supported_channels} 
   @{" fx_supported_insert " link fx_supported_insert} 
   @{" fx_supported_send " link fx_supported_send} 
   @{" fx_update " link fx_update} 
   @{" fx_visual_add " link fx_visual_add} 
   @{" fx_win " link fx_win} 
   @{" fxgui_free " link fxgui_free} 
   @{" fxgui_parse " link fxgui_parse} 
   @{" fxgui_read " link fxgui_read} 
   @{" fxgui_resetele " link fxgui_resetele} 
   @{" fxgui_tag_getparam " link fxgui_tag_getparam} 
   @{" fxgui_tag_getvalue " link fxgui_tag_getvalue} 
   @{" fxgui_tag_name " link fxgui_tag_name} 
   @{" fxgui_tag_next " link fxgui_tag_next} 
   @{" fxgui_tag_skipline " link fxgui_tag_skipline} 
   @{" fxgui_writeele " link fxgui_writeele} 
   @{" fxi_create " link fxi_create} 
   @{" fxi_findfree " link fxi_findfree} 
   @{" fxi_name " link fxi_name} 
   @{" fxi_process_insert " link fxi_process_insert} 
   @{" fxi_process_send " link fxi_process_send} 
   @{" fxi_remove " link fxi_remove} 
   @{" fxi_reset " link fxi_reset} 
   @{" fxi_update " link fxi_update} 
   @{" fxi_visual_add " link fxi_visual_add} 
   @{" fxi_visual_draw_all " link fxi_visual_draw_all} 
   @{" fxi_visual_drawx " link fxi_visual_drawx} 
   @{" fxi_visual_redraw " link fxi_visual_redraw} 
   @{" fxi_visual_remove " link fxi_visual_remove} 
   @{" fxi_visual_remove_all " link fxi_visual_remove_all} 
   @{" fxi_win " link fxi_win} 
   @{" fxlib_close " link fxlib_close} 
   @{" fxlib_find " link fxlib_find} 
   @{" fxlib_findfree " link fxlib_findfree} 
   @{" fxlib_free_all " link fxlib_free_all} 
   @{" fxlib_install " link fxlib_install} 
   @{" fxlib_open " link fxlib_open} 
   @{" fxlib_scan " link fxlib_scan} 
   @{" fxparseerr " link fxparseerr} 
   @{" fxtui_visual_remove " link fxtui_visual_remove} 
   @{" menu_fx " link menu_fx} 
   @{" metafile_read_fx " link metafile_read_fx} 
   @{" metafile_write_fx " link metafile_write_fx} 
   @{" startup_message " link startup_message} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} HDRec_fx.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 19/01/2007

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Extend AB3 functionality.
* no description available *

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_create "fx_create"

@{B}fx_create@{UB}

@{B}Syntax:@{UB}  result.l = fx_create \{libid.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- libid.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_create_num "fx_create_num"

@{B}fx_create_num@{UB}

@{B}Syntax:@{UB}  result.l = fx_create_num \{fxlibnum.l\}

@{B}Description:@{UB}
       ;   error \{"Freed "+Str$(fxlib(\libnum)\geo\user_data_size)+" Bytes"\}
    ; error \{"Can't remove fx because of pending instanced ! ("+Str$(\opencount)+")"\}

@{B}Inputs:@{UB}      
- fxlibnum.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_findfree "fx_findfree"

@{B}fx_findfree@{UB}

@{B}Syntax:@{UB}  result.l = fx_findfree \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_load "fx_load"

@{B}fx_load@{UB}

@{B}Syntax:@{UB}  result.l = fx_load \{filename.s,channels.l,is_insert.l,is_send.l\}

@{B}Description:@{UB}
  ;Else
  ;  error \{"This effect is not correct installed ! (id="+Str$(libid)+")"\}

@{B}Inputs:@{UB}      
- filename.s    : ???
- channels.l    : ???
- is_insert.l    : ???
- is_send.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_notify "fx_notify"

@{B}fx_notify@{UB}

@{B}Syntax:@{UB} fx_notify \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_remove "fx_remove"

@{B}fx_remove@{UB}

@{B}Syntax:@{UB}  result.l = fx_remove \{fx.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fx.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_reset "fx_reset"

@{B}fx_reset@{UB}

@{B}Syntax:@{UB} fx_reset \{fx.l,framepos.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fx.l    : ???
- framepos.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_save "fx_save"

@{B}fx_save@{UB}

@{B}Syntax:@{UB}  result.l = fx_save \{fx.l,filename.s,@force.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fx.l    : ???
- filename.s    : ???
- force.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_supported_channels "fx_supported_channels"

@{B}fx_supported_channels@{UB}

@{B}Syntax:@{UB}  result.l = fx_supported_channels \{fx.l,channels.l\}

@{B}Description:@{UB}
    ptr.l = fxlib(\libnum)\gui_ptr ; +8
            ;\params\user_param[*tobj\param] = *tobj\pdef
     error \{"Allocated "+Str$(fxlib(fxlibnum)\geo\user_data_size)+" Bytes"\}

@{B}Inputs:@{UB}      
- fx.l    : ???
- channels.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_supported_insert "fx_supported_insert"

@{B}fx_supported_insert@{UB}

@{B}Syntax:@{UB}  result.l = fx_supported_insert \{fx.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fx.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_supported_send "fx_supported_send"

@{B}fx_supported_send@{UB}

@{B}Syntax:@{UB}  result.l = fx_supported_send \{fx.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fx.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_update "fx_update"

@{B}fx_update@{UB}

@{B}Syntax:@{UB} fx_update \{fx.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fx.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_visual_add "fx_visual_add"

@{B}fx_visual_add@{UB}

@{B}Syntax:@{UB} fx_visual_add \{fx.l,win.l,tuiobj.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fx.l    : ???
- win.l    : ???
- tuiobj.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fx_win "fx_win"

@{B}fx_win@{UB}

@{B}Syntax:@{UB} fx_win \{fx.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fx.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxgui_free "fxgui_free"

@{B}fxgui_free@{UB}

@{B}Syntax:@{UB} fxgui_free \{fxlibnum.l\}

@{B}Description:@{UB}
     ; If tagfx
     ; End If

@{B}Inputs:@{UB}      
- fxlibnum.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxgui_parse "fxgui_parse"

@{B}fxgui_parse@{UB}

@{B}Syntax:@{UB} fxgui_parse \{filename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- filename.s    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxgui_read "fxgui_read"

@{B}fxgui_read@{UB}

@{B}Syntax:@{UB}  result.l = fxgui_read \{filename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- filename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxgui_resetele "fxgui_resetele"

@{B}fxgui_resetele@{UB}

@{B}Syntax:@{UB} fxgui_resetele \{typ.l\}

@{B}Description:@{UB}
If guiheap(ghe)\typ = #tobj_hgroup Then error \{"close hgroup "+Str$(ghe)\}

@{B}Inputs:@{UB}      
- typ.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxgui_tag_getparam "fxgui_tag_getparam"

@{B}fxgui_tag_getparam@{UB}

@{B}Syntax:@{UB}  result.s = fxgui_tag_getparam \{dos.l\}

@{B}Description:@{UB}
error \{"found "+name.s\}

@{B}Inputs:@{UB}      
- dos.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxgui_tag_getvalue "fxgui_tag_getvalue"

@{B}fxgui_tag_getvalue@{UB}

@{B}Syntax:@{UB}  result.s = fxgui_tag_getvalue \{dos.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- dos.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxgui_tag_name "fxgui_tag_name"

@{B}fxgui_tag_name@{UB}

@{B}Syntax:@{UB}  result.s = fxgui_tag_name \{dos.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- dos.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxgui_tag_next "fxgui_tag_next"

@{B}fxgui_tag_next@{UB}

@{B}Syntax:@{UB} fxgui_tag_next \{dos.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- dos.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxgui_tag_skipline "fxgui_tag_skipline"

@{B}fxgui_tag_skipline@{UB}

@{B}Syntax:@{UB} fxgui_tag_skipline \{dos.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- dos.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxgui_writeele "fxgui_writeele"

@{B}fxgui_writeele@{UB}

@{B}Syntax:@{UB} fxgui_writeele \{dos.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- dos.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_create "fxi_create"

@{B}fxi_create@{UB}

@{B}Syntax:@{UB}  result.l = fxi_create \{fx.l,stereo.l,samplerate.l,fx_start.l,fx_end.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fx.l    : ???
- stereo.l    : ???
- samplerate.l    : ???
- fx_start.l    : ???
- fx_end.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_findfree "fxi_findfree"

@{B}fxi_findfree@{UB}

@{B}Syntax:@{UB}  result.l = fxi_findfree \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_name "fxi_name"

@{B}fxi_name@{UB}

@{B}Syntax:@{UB}  result.s = fxi_name \{fxi.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fxi.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_process_insert "fxi_process_insert"

@{B}fxi_process_insert@{UB}

@{B}Syntax:@{UB} fxi_process_insert \{fxi.l,sourceaddr.l,destaddr.l,flength.l,workbufferaddr.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fxi.l    : ???
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- workbufferaddr.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_process_send "fxi_process_send"

@{B}fxi_process_send@{UB}

@{B}Syntax:@{UB} fxi_process_send \{fxi.l,sourceaddr.l,destaddr.l,flength.l,workbufferaddr.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fxi.l    : ???
- sourceaddr.l    : ???
- destaddr.l    : ???
- flength.l    : ???
- workbufferaddr.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_remove "fxi_remove"

@{B}fxi_remove@{UB}

@{B}Syntax:@{UB} fxi_remove \{fxi.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fxi.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_reset "fxi_reset"

@{B}fxi_reset@{UB}

@{B}Syntax:@{UB} fxi_reset \{fxi.l,framepos.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fxi.l    : ???
- framepos.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_update "fxi_update"

@{B}fxi_update@{UB}

@{B}Syntax:@{UB} fxi_update \{fxi.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fxi.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_visual_add "fxi_visual_add"

@{B}fxi_visual_add@{UB}

@{B}Syntax:@{UB} fxi_visual_add \{fxi.l,win.l,tuiobj.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fxi.l    : ???
- win.l    : ???
- tuiobj.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_visual_draw_all "fxi_visual_draw_all"

@{B}fxi_visual_draw_all@{UB}

@{B}Syntax:@{UB} fxi_visual_draw_all \{force.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- force.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_visual_drawx "fxi_visual_drawx"

@{B}fxi_visual_drawx@{UB}

@{B}Syntax:@{UB} fxi_visual_drawx \{fxi.l,win.l,tuiobj.l,force.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fxi.l    : ???
- win.l    : ???
- tuiobj.l    : ???
- force.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_visual_redraw "fxi_visual_redraw"

@{B}fxi_visual_redraw@{UB}

@{B}Syntax:@{UB} fxi_visual_redraw \{win.l,tuiobj.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- win.l    : ???
- tuiobj.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_visual_remove "fxi_visual_remove"

@{B}fxi_visual_remove@{UB}

@{B}Syntax:@{UB} fxi_visual_remove \{fxi.l,win.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fxi.l    : ???
- win.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_visual_remove_all "fxi_visual_remove_all"

@{B}fxi_visual_remove_all@{UB}

@{B}Syntax:@{UB} fxi_visual_remove_all \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxi_win "fxi_win"

@{B}fxi_win@{UB}

@{B}Syntax:@{UB} fxi_win \{fxi.l\}

@{B}Description:@{UB}
    ;tui_button     \{1,"snap",#notify_fxsnap\}     : tui_sethelp \{1,"snap the effect to the current range"\}
            ;  error \{"Nops: "+Str$(npos)\}
               ; error \{"Creating filname.s : "+filename.s\}
               ; If image_find_name \{filename.s\}>=0 Then a.s=" Already loaded!":Else a.s = " Load new!"
               ; error \{"Found image: "+filename.s+a.s\}
          )
          ; ....
    win_settranskeys\{\}  ; defined in HD-Rec (?)

@{B}Inputs:@{UB}      
- fxi.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxlib_close "fxlib_close"

@{B}fxlib_close@{UB}

@{B}Syntax:@{UB} fxlib_close \{fxlibnum.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- fxlibnum.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxlib_find "fxlib_find"

@{B}fxlib_find@{UB}

@{B}Syntax:@{UB}  result.l = fxlib_find \{libid.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- libid.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxlib_findfree "fxlib_findfree"

@{B}fxlib_findfree@{UB}

@{B}Syntax:@{UB}  result.l = fxlib_findfree \{\}

@{B}Description:@{UB}
#max_fxlibs     = 256       ; Effect libs
#max_fx         = 512      ; Effects
#max_fxi        = 1024     ; Effect instances
#max_fxparamcount = 512    ; Max supported params
user_param.l[#max_fxparamcount] ; Offset = 16
*params.fxparams    ; Pointer to params
user_data.l         ; user data, e.g. pointer to ringbuffer
fast.b              ; indicates to optionally call a faster low quality routine
stereo.b            ; indicates that the input signal is stereo
samplerate.l        ; effects samplerate
mono.l             ; supports mono ?
stereo.l           ; supports stereo ?
insert.l           ; supports insert
send.l             ; supports send
maxparams.l        ; maximum number of parameters
param_size.l       ; param size in bytes+4

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxlib_free_all "fxlib_free_all"

@{B}fxlib_free_all@{UB}

@{B}Syntax:@{UB} fxlib_free_all \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxlib_install "fxlib_install"

@{B}fxlib_install@{UB}

@{B}Syntax:@{UB}  result.l = fxlib_install \{filename.s,platform.s\}

@{B}Description:@{UB}
                ;error \{"Found fx: "+\fxname\}
    ;Else
    ;  error \{"File is not an FX GUI !"\}
    ;End If

@{B}Inputs:@{UB}      
- filename.s    : ???
- platform.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxlib_open "fxlib_open"

@{B}fxlib_open@{UB}

@{B}Syntax:@{UB}  result.l = fxlib_open \{fxlibnum.l\}

@{B}Description:@{UB}
  ;error \{"Found platform effect !"\}
    ;error \{"Reduced: "+fxname_s.s \}
error \{"Suche nach: <"+fxname.s+"> / <"+fxname_x.s+">"\}
  ;If \libstem><"" Then error \{"Test: "+\libstem+"..."\}
      ;If pri = 3 Then error \{"Found platform fx !"+filename.s+" for ID= "+Str$(\libid)+fxname_p.s+" / "+fxname_b.s\}
      ;If pri = 2 Then error \{"Found base fx !"+filename.s+" for ID= "+Str$(\libid)+fxname_p.s+" / "+fxname_b.s\}
      ;If pri = 1 Then error \{"Found substitute fx !"+filename.s+" for ID= "+Str$(\libid)+fxname_p.s+" / "+fxname_b.s\}

@{B}Inputs:@{UB}      
- fxlibnum.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxlib_scan "fxlib_scan"

@{B}fxlib_scan@{UB}

@{B}Syntax:@{UB} fxlib_scan \{path.s,platform.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- path.s    : ???
- platform.s    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxparseerr "fxparseerr"

@{B}fxparseerr@{UB}

@{B}Syntax:@{UB} fxparseerr \{dos.l,text.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- dos.l    : ???
- text.s    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE fxtui_visual_remove "fxtui_visual_remove"

@{B}fxtui_visual_remove@{UB}

@{B}Syntax:@{UB} fxtui_visual_remove \{win.l,tuiobj.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- win.l    : ???
- tuiobj.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE menu_fx "menu_fx"

@{B}menu_fx@{UB}

@{B}Syntax:@{UB} menu_fx \{fx.l\}

@{B}Description:@{UB}
error \{"Scanning for "+platform.s\}
CNIF #debug
CEND
        ;error \{"Installed: "+EntryName$+Str$(succ)\}
    ;@{" startup_message " link startup_message} \{"scan for default effects..."+fxlib(n)\fxname\}
      ;error \{"Will create "+Str$(n)+" with id= "+Str$(fxlib(n)\libid)+"\\n"+filename.s\}
      ;fx.l = fx_create_num\{n\}
      ;error \{"Num = "+Str$(n)+" already exists !\\n"+filename.s\}

@{B}Inputs:@{UB}      
- fx.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE metafile_read_fx "metafile_read_fx"

@{B}metafile_read_fx@{UB}

@{B}Syntax:@{UB}  result.l = metafile_read_fx \{dos.l,@channels.l,@is_insert.l,@is_send.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- dos.l    : ???
- channels.l    : ???
- is_insert.l    : ???
- is_send.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE metafile_write_fx "metafile_write_fx"

@{B}metafile_write_fx@{UB}

@{B}Syntax:@{UB}  result.l = metafile_write_fx \{dos.l,fx.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- dos.l    : ???
- fx.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE startup_message "startup_message"

@{B}startup_message@{UB}

@{B}Syntax:@{UB} startup_message \{text.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- text.s    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
