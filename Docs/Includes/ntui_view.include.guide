@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "ntui_view.include"

@{B}ntui_view.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" ntui_View " link ntui_View} 

@{B}Private Function Index:@{UB}

   @{" _ntui_DrawView " link _ntui_DrawView} 
   @{" _ntui_FreeView " link _ntui_FreeView} 
   @{" _ntui_GetViewMinSize " link _ntui_GetViewMinSize} 
   @{" _ntui_HandleView " link _ntui_HandleView} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} @{" ntui_View " link ntui_View}.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 06/01/2009

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Extend AB3 functionality.
* no description available *

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_DrawView "_ntui_DrawView"

@{B}_ntui_DrawView@{UB}

@{B}Syntax:@{UB} _ntui_DrawView \{*tuiView.tuiView,*rp.RastPort\}

@{B}Description:@{UB}
* draw the view in all its beauty */

@{B}Inputs:@{UB}      
- *tuiView.tuiView    : ???
- *rp.RastPort    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_FreeView "_ntui_FreeView"

@{B}_ntui_FreeView@{UB}

@{B}Syntax:@{UB} _ntui_FreeView \{*tuiView.tuiView\}

@{B}Description:@{UB}
* free everything special that we allocated for the button */
If *tuiView\img Then ntui_FreeImage\{*tuiView\img\}  : *tuiView\img = !_NULL

@{B}Inputs:@{UB}      
- *tuiView.tuiView    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_GetViewMinSize "_ntui_GetViewMinSize"

@{B}_ntui_GetViewMinSize@{UB}

@{B}Syntax:@{UB}  result.l = _ntui_GetViewMinSize \{*tuiView.tuiView,*rp.RastPort\}

@{B}Description:@{UB}
* calculate the minimum size for the button */

@{B}Inputs:@{UB}      
- *tuiView.tuiView    : ???
- *rp.RastPort    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_HandleView "_ntui_HandleView"

@{B}_ntui_HandleView@{UB}

@{B}Syntax:@{UB}  result.w = _ntui_HandleView \{*tuiView.tuiView,*tuiEvent.tuiEvent\}

@{B}Description:@{UB}
* tui View newtype */
obj.tuiObject            ; tui object header
* do what happens if the user operates the View */

@{B}Inputs:@{UB}      
- *tuiView.tuiView    : ???
- *tuiEvent.tuiEvent    : ???

@{B}Result:@{UB}      
- result.w     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_View "ntui_View"

@{B}ntui_View@{UB}

@{B}Syntax:@{UB}  result.l = ntui_View \{width.l,height.l,reportIDCMP.l,@notify.l,@help.s,@flags.l,@userID.l\}

@{B}Description:@{UB}
* create function for tui View */

@{B}Inputs:@{UB}      
- width.l    : ???
- height.l    : ???
- notify.l    : ???
- help.s    : ???
- flags.l    : ???
- userID.l    : ???
- reportIDCMP.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
