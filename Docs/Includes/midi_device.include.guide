@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "midi_device.include"

@{B}midi_device.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" midiport_close " link midiport_close} 
   @{" midiport_close_all " link midiport_close_all} 
   @{" midiport_open " link midiport_open} 
   @{" midiport_read " link midiport_read} 
   @{" midiport_receive " link midiport_receive} 
   @{" midiport_received_length " link midiport_received_length} 
   @{" midiport_received_ptr " link midiport_received_ptr} 
   @{" midiport_sigflag " link midiport_sigflag} 
   @{" midiport_write " link midiport_write} 
   @{" midiport_write_c " link midiport_write_c} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} midi_device.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 19/01/2007

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Extend AB3 functionality.
* no description available *

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE midiport_close "midiport_close"

@{B}midiport_close@{UB}

@{B}Syntax:@{UB} midiport_close \{mp.w\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mp.w    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE midiport_close_all "midiport_close_all"

@{B}midiport_close_all@{UB}

@{B}Syntax:@{UB} midiport_close_all \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE midiport_open "midiport_open"

@{B}midiport_open@{UB}

@{B}Syntax:@{UB}  result.w = midiport_open \{mp.w,devicename.s,unit.l,@baud.l\}

@{B}Description:@{UB}
 WaitIO_ \msg_in

@{B}Inputs:@{UB}      
- mp.w    : ???
- devicename.s    : ???
- unit.l    : ???
- baud.l    : ???

@{B}Result:@{UB}      
- result.w     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE midiport_read "midiport_read"

@{B}midiport_read@{UB}

@{B}Syntax:@{UB} midiport_read \{mp.w,ptr.l,blength.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mp.w    : ???
- ptr.l    : ???
- blength.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE midiport_receive "midiport_receive"

@{B}midiport_receive@{UB}

@{B}Syntax:@{UB}  result.w = midiport_receive \{mp.w\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mp.w    : ???

@{B}Result:@{UB}      
- result.w     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE midiport_received_length "midiport_received_length"

@{B}midiport_received_length@{UB}

@{B}Syntax:@{UB}  result.l = midiport_received_length \{mp.w\}

@{B}Description:@{UB}
    ; Rest lesen

@{B}Inputs:@{UB}      
- mp.w    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE midiport_received_ptr "midiport_received_ptr"

@{B}midiport_received_ptr@{UB}

@{B}Syntax:@{UB}  result.l = midiport_received_ptr \{mp.w\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mp.w    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE midiport_sigflag "midiport_sigflag"

@{B}midiport_sigflag@{UB}

@{B}Syntax:@{UB}  result.l = midiport_sigflag \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE midiport_write "midiport_write"

@{B}midiport_write@{UB}

@{B}Syntax:@{UB} midiport_write \{mp.w,ptr.l,blength.l\}

@{B}Description:@{UB}
          *serialIO\IOSer\io_Command  = #SDCMD_SETPARAMS       ; erstmal Parameter setzen
          *serialIO\io_Baud           = baud     ; set the midi baud !
          *serialIO\io_SerFlags       = 0 SERB_RAD_BOOGIE
            *serialIO\IOSer\io_Command  = #SDCMD_QUERY ; erstmal Parameter setzen
            error \{"Device is not compatible with serial.device !"\} ; Parameter setzen hat nicht geklappt !

@{B}Inputs:@{UB}      
- mp.w    : ???
- ptr.l    : ???
- blength.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE midiport_write_c "midiport_write_c"

@{B}midiport_write_c@{UB}

@{B}Syntax:@{UB} midiport_write_c \{mp.w,ptr.l,blength.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- mp.w    : ???
- ptr.l    : ???
- blength.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
