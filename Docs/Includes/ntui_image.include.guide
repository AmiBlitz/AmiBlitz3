@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "ntui_image.include"

@{B}ntui_image.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" ntui_Image " link ntui_Image} 

@{B}Private Function Index:@{UB}

   @{" _ntui_DrawImage " link _ntui_DrawImage} 
   @{" _ntui_FreeImage " link _ntui_FreeImage} 
   @{" _ntui_GetImageMinSize " link _ntui_GetImageMinSize} 
   @{" _ntui_HandleImage " link _ntui_HandleImage} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} @{" ntui_Image " link ntui_Image}.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 06/01/2009

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Extend AB3 functionality.
* no description available *

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_DrawImage "_ntui_DrawImage"

@{B}_ntui_DrawImage@{UB}

@{B}Syntax:@{UB} _ntui_DrawImage \{*tuiImage.tuiImage,*rp.RastPort\}

@{B}Description:@{UB}
ntui_Refresh\{*tuiImage\}
* draw the Image in all its beauty */

@{B}Inputs:@{UB}      
- *tuiImage.tuiImage    : ???
- *rp.RastPort    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_FreeImage "_ntui_FreeImage"

@{B}_ntui_FreeImage@{UB}

@{B}Syntax:@{UB} _ntui_FreeImage \{*tuiImage.tuiImage\}

@{B}Description:@{UB}
* free everything special that we allocated for the Image */

@{B}Inputs:@{UB}      
- *tuiImage.tuiImage    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_GetImageMinSize "_ntui_GetImageMinSize"

@{B}_ntui_GetImageMinSize@{UB}

@{B}Syntax:@{UB}  result.l = _ntui_GetImageMinSize \{*tuiImage.tuiImage,*rp.RastPort\}

@{B}Description:@{UB}
* calculate the minimum size for the Image */

@{B}Inputs:@{UB}      
- *tuiImage.tuiImage    : ???
- *rp.RastPort    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_HandleImage "_ntui_HandleImage"

@{B}_ntui_HandleImage@{UB}

@{B}Syntax:@{UB}  result.w = _ntui_HandleImage \{*tuiImage.tuiImage,*tuiEvent.tuiEvent\}

@{B}Description:@{UB}
* do what happens if the user operates the Image */

@{B}Inputs:@{UB}      
- *tuiImage.tuiImage    : ???
- *tuiEvent.tuiEvent    : ???

@{B}Result:@{UB}      
- result.w     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_Image "ntui_Image"

@{B}ntui_Image@{UB}

@{B}Syntax:@{UB}  result.l = ntui_Image \{imagefile.s,@tuiWidth.l,@tuiHeight.l,@help.s,@flags.l,userID.l\}

@{B}Description:@{UB}
* create an image tui Image */

@{B}Inputs:@{UB}      
- imagefile.s    : ???
- help.s    : ???
- flags.l    : ???
- userID.l    : ???
- tuiWidth.l    : ???
- tuiHeight.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
