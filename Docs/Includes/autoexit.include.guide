@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "autoexit.include"

@{B}autoexit.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

 * no functions/statements defined * 

@{B}Public Macro Index:@{UB}

   @{" !autoexit_x " link !autoexit_x} 

@ENDNODE
@NODE !autoexit_x "!autoexit_x"

@{B}!autoexit_x@{UB}

@{B}Syntax:@{UB} !autoexit_x

@{B}Description:@{UB}
Execute the given Function on program exit.
Usually here are functions that check for pending resources and free them.

@{B}Inputs:@{UB}      
Function Name

@{B}Result:@{UB}      none

@{B}Example:@{UB}                                                 none




@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB}  autoexit.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 11.03.2006

@{B}Author:@{UB} Thilo Koehler

@{B}Requirements:@{UB} Amiblitz2.4

@{B}Purpose:@{UB}
Define the autoexit macro, that can be used to declare functions to be executed on program end, either normal termination or Debugger forced termination.

* This include is obsolete, since this macro in already in all.res ! *

However, the functionality is the same. This macro is important if you want to write your own include that does not require the programmer to free the resources owned by your include manually.

@{B}Abstract:@{UB}

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     
__________________________________________________________________ snip!
. XINCLUDE "autoexit.include.ab3"
.
. Statement free_everything\{\}
. If <something allocated>
.   <free stuff here>
. EndIf
. End Statement
.
. !autoexit\{free_everything\}
__________________________________________________________________ snip!



@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
