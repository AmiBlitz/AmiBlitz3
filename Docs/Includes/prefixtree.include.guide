@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "prefixtree.include"

@{B}prefixtree.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" pft_AddItem " link pft_AddItem} 
   @{" pft_Create " link pft_Create} 
   @{" pft_Expand " link pft_Expand} 
   @{" pft_FindValue " link pft_FindValue} 
   @{" pft_Free " link pft_Free} 
   @{" pft_GetKey " link pft_GetKey} 
   @{" pft_GetLongestMatch " link pft_GetLongestMatch} 
   @{" pft_GetNextItem " link pft_GetNextItem} 
   @{" pft_GetValue " link pft_GetValue} 
   @{" pft_Load " link pft_Load} 
   @{" pft_Match " link pft_Match} 
   @{" pft_Optimize " link pft_Optimize} 
   @{" pft_PrevItem " link pft_PrevItem} 
   @{" pft_Read " link pft_Read} 
   @{" pft_RemItem " link pft_RemItem} 
   @{" pft_Reset " link pft_Reset} 
   @{" pft_Rethink " link pft_Rethink} 
   @{" pft_Save " link pft_Save} 
   @{" pft_Write " link pft_Write} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} prefixtree.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 08/01/2008

@{B}Author:@{UB} Thilo Koehler

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Add a prefix tree data structure to AB3.

@{B}Abstract:@{UB}
A prefix tree is a tree-structure that stores efficiently string pairs, one called the 'key' and the other one 'value'.
You can add string values to the structure with a key string to find it. This is ideal
for e.g.a lexicon for voice synthesis, where the key is the written form and the
String value is the phonem sequence.
The string values are found in O(k) time, where k is the length of the key.

@{B}User Constants:@{UB}

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_AddItem "pft_AddItem"

@{B}pft_AddItem@{UB}

@{B}Syntax:@{UB}  result.l = pft_AddItem \{*pft.prefixtree,key.s,string.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft          : ???
- name.s    : ???
- string.s    : ???
- *pft.prefixtree    : ???
- key.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Create "pft_Create"

@{B}pft_Create@{UB}

@{B}Syntax:@{UB}  result.l = pft_Create \{@blocksize.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- blocksize.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Expand "pft_Expand"

@{B}pft_Expand@{UB}

@{B}Syntax:@{UB} result.l = pft_Expand \{*pft.prefixtree,minFree.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???
- minFree.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_FindValue "pft_FindValue"

@{B}pft_FindValue@{UB}

@{B}Syntax:@{UB}  result.s = pft_FindValue \{*pft.prefixtree,key.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pt.prefixtree    : ???
- name.s    : ???
- *pft.prefixtree    : ???
- key.s    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Free "pft_Free"

@{B}pft_Free@{UB}

@{B}Syntax:@{UB} pft_Free \{*pft.prefixtree\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pt.prefixtree    : ???
- *pft.prefixtree    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_GetKey "pft_GetKey"

@{B}pft_GetKey@{UB}

@{B}Syntax:@{UB} result.s = pft_GetKey \{*pft.prefixtree\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_GetLongestMatch "pft_GetLongestMatch"

@{B}pft_GetLongestMatch@{UB}

@{B}Syntax:@{UB} result.s = pft_GetLongestMatch \{*pft.prefixtree,key.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???
- key.s    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_GetNextItem "pft_GetNextItem"

@{B}pft_GetNextItem@{UB}

@{B}Syntax:@{UB} result.l = pft_GetNextItem \{*pft.prefixtree\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_GetValue "pft_GetValue"

@{B}pft_GetValue@{UB}

@{B}Syntax:@{UB} result.s = pft_GetValue \{*pft.prefixtree\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Load "pft_Load"

@{B}pft_Load@{UB}

@{B}Syntax:@{UB}  result.l = pft_Load \{filename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- filename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Match "pft_Match"

@{B}pft_Match@{UB}

@{B}Syntax:@{UB} result.l = pft_Match \{*pft.prefixtree,key.s,*pftmatch.pftmatch\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???
- key.s    : ???
- *pftmatch.pftmatch    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Optimize "pft_Optimize"

@{B}pft_Optimize@{UB}

@{B}Syntax:@{UB} result.l = pft_Optimize \{*pft.prefixtree\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_PrevItem "pft_PrevItem"

@{B}pft_PrevItem@{UB}

@{B}Syntax:@{UB} result.l = pft_PrevItem \{*pft.prefixtree\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Read "pft_Read"

@{B}pft_Read@{UB}

@{B}Syntax:@{UB}  result.l = pft_Read \{fid.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- filename.s    : ???
- fid.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_RemItem "pft_RemItem"

@{B}pft_RemItem@{UB}

@{B}Syntax:@{UB}  result.l = pft_RemItem \{*pt.prefixtree,key.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pt.prefixtree    : ???
- name.s    : ???
- key.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Reset "pft_Reset"

@{B}pft_Reset@{UB}

@{B}Syntax:@{UB} pft_Reset \{*pft.prefixtree\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Rethink "pft_Rethink"

@{B}pft_Rethink@{UB}

@{B}Syntax:@{UB} result.l = pft_Rethink \{*pftS.prefixtree,*pftD.prefixtree,node.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pftS.prefixtree    : ???
- *pftD.prefixtree    : ???
- node.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Save "pft_Save"

@{B}pft_Save@{UB}

@{B}Syntax:@{UB} result.l = pft_Save \{*pft.prefixtree,filename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???
- filename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE pft_Write "pft_Write"

@{B}pft_Write@{UB}

@{B}Syntax:@{UB} result.l = pft_Write \{*pft.prefixtree,fid.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *pft.prefixtree    : ???
- fid.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
