@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "cmap.include"

@{B}cmap.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" cmap_AddPixelArrayToHistory " link cmap_AddPixelArrayToHistory} 
   @{" cmap_CreateBlackWhite " link cmap_CreateBlackWhite} 
   @{" cmap_CreateGrayScale " link cmap_CreateGrayScale} 
   @{" cmap_CreateRGB8 " link cmap_CreateRGB8} 
   @{" cmap_GetNumColorsInHistory " link cmap_GetNumColorsInHistory} 
   @{" cmap_GetRGB " link cmap_GetRGB} 
   @{" cmap_GrabFromScreen " link cmap_GrabFromScreen} 
   @{" cmap_Init " link cmap_Init} 
   @{" cmap_InitMapTable " link cmap_InitMapTable} 
   @{" cmap_Load " link cmap_Load} 
   @{" cmap_LoadViaCMAP " link cmap_LoadViaCMAP} 
   @{" cmap_LoadViaDT " link cmap_LoadViaDT} 
   @{" cmap_LockScreenPens " link cmap_LockScreenPens} 
   @{" cmap_PutToScreen " link cmap_PutToScreen} 
   @{" cmap_ReleaseScreenPens " link cmap_ReleaseScreenPens} 
   @{" cmap_RemapPixelArray " link cmap_RemapPixelArray} 
   @{" cmap_Save " link cmap_Save} 
   @{" cmap_SetRGB " link cmap_SetRGB} 
   @{" cmap_UpdateFromHistory " link cmap_UpdateFromHistory} 
   @{" cmap_UpdateMapTable " link cmap_UpdateMapTable} 
   @{" cmap_Write " link cmap_Write} 

@{B}Private Function Index:@{UB}

   @{" cmap_Free " link cmap_Free} 
   @{" cmap_InitHistory " link cmap_InitHistory} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} colmap.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 24/05/2007

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
ColorMap handling for color indexed screens.

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_AddPixelArrayToHistory "cmap_AddPixelArrayToHistory"

@{B}cmap_AddPixelArrayToHistory@{UB}

@{B}Syntax:@{UB} cmap_AddPixelArrayToHistory \{*cmap.cmap,ARGBPtr.l,xs.l,ys.l,bpr.l\}

@{B}Description:@{UB}
Add an image to the history, to be able to calculate a good set of pens for remapping.

@{B}Inputs:@{UB}      
- ARGBPtr.l : ???
- xs.l      : ???
- ys.l      : ???
- bpr.l     : ???
- *cmap.cmap    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_CreateBlackWhite "cmap_CreateBlackWhite"

@{B}cmap_CreateBlackWhite@{UB}

@{B}Syntax:@{UB} result.l = cmap_CreateBlackWhite \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_CreateGrayScale "cmap_CreateGrayScale"

@{B}cmap_CreateGrayScale@{UB}

@{B}Syntax:@{UB} result.l = cmap_CreateGrayScale \{@numcolors.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- numcolors.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_CreateRGB8 "cmap_CreateRGB8"

@{B}cmap_CreateRGB8@{UB}

@{B}Syntax:@{UB} result.l = cmap_CreateRGB8 \{@numcolors.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- numcolors.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_Free "cmap_Free"

@{B}cmap_Free@{UB}

@{B}Syntax:@{UB} cmap_Free \{*cmap.cmap\}

@{B}Description:@{UB}
* private *

@{B}Inputs:@{UB}      
- *cmap.cmap    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_GetNumColorsInHistory "cmap_GetNumColorsInHistory"

@{B}cmap_GetNumColorsInHistory@{UB}

@{B}Syntax:@{UB} result.l = cmap_GetNumColorsInHistory \{*cmap.cmap\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *cmap.cmap    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_GetRGB "cmap_GetRGB"

@{B}cmap_GetRGB@{UB}

@{B}Syntax:@{UB} result.l = cmap_GetRGB \{*cmap.cmap,pen.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *cmap.cmap    : ???
- pen.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_GrabFromScreen "cmap_GrabFromScreen"

@{B}cmap_GrabFromScreen@{UB}

@{B}Syntax:@{UB} result.l = cmap_GrabFromScreen \{@*scr.Screen\}

@{B}Description:@{UB}
Create a colormap out of the screens palette.
Optionally, a screen other than the used screen can be specified by its pointer.

@{B}Inputs:@{UB}      
- *friendlyscreen.Screen    : pointer to a screen
- *scr.Screen    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    image_cmap_fromfile, image_cmap_toscreen




@ENDNODE
@NODE cmap_Init "cmap_Init"

@{B}cmap_Init@{UB}

@{B}Syntax:@{UB} result.l = cmap_Init \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_InitHistory "cmap_InitHistory"

@{B}cmap_InitHistory@{UB}

@{B}Syntax:@{UB}  result.l = cmap_InitHistory \{*cmap.cmap\}

@{B}Description:@{UB}
* private *

@{B}Inputs:@{UB}      
- *cmap.cmap    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_InitMapTable "cmap_InitMapTable"

@{B}cmap_InitMapTable@{UB}

@{B}Syntax:@{UB} result.l = cmap_InitMapTable \{*cmap.cmap\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *cmap.cmap    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_Load "cmap_Load"

@{B}cmap_Load@{UB}

@{B}Syntax:@{UB} result.l = cmap_Load \{filename.s\}

@{B}Description:@{UB}
Load a colormap from an IFF-ILBM file as a colormap for remapping.
NOTE: This loads actually the CMAP chunk.

@{B}Inputs:@{UB}      
- filename.s    : file name of the IFF-ILBM file that contains the color map

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    @{" cmap_GrabFromScreen " link cmap_GrabFromScreen}




@ENDNODE
@NODE cmap_LoadViaCMAP "cmap_LoadViaCMAP"

@{B}cmap_LoadViaCMAP@{UB}

@{B}Syntax:@{UB} result.l = cmap_LoadViaCMAP \{filename.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- filename.s    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_LoadViaDT "cmap_LoadViaDT"

@{B}cmap_LoadViaDT@{UB}

@{B}Syntax:@{UB} result.l = cmap_LoadViaDT \{filename.s,@imgnum.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- filename.s    : ???
- imgnum.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_LockScreenPens "cmap_LockScreenPens"

@{B}cmap_LockScreenPens@{UB}

@{B}Syntax:@{UB} cmap_LockScreenPens \{*cmap.cmap\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *cmap.cmap    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_PutToScreen "cmap_PutToScreen"

@{B}cmap_PutToScreen@{UB}

@{B}Syntax:@{UB} cmap_PutToScreen \{*cmap.cmap,@*scr.Screen\}

@{B}Description:@{UB}
Use the colormap as the new screens palette.
If no screen pointer is given, the used screen is used.

@{B}Inputs:@{UB}      
- *friendlyscreen.Screen    : pointer to a screen.
- *cmap.cmap    : ???
- *scr.Screen    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_ReleaseScreenPens "cmap_ReleaseScreenPens"

@{B}cmap_ReleaseScreenPens@{UB}

@{B}Syntax:@{UB} cmap_ReleaseScreenPens \{*cmap.cmap\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *cmap.cmap    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_RemapPixelArray "cmap_RemapPixelArray"

@{B}cmap_RemapPixelArray@{UB}

@{B}Syntax:@{UB} cmap_RemapPixelArray \{*cmap.cmap,ARGBPtr.l,xs.l,ys.l,bpr.l,penArray8.l,bpr8.l,@dithering.l\}

@{B}Description:@{UB}
Remap the image accordings the colmap.

@{B}Inputs:@{UB}      
- penArray8.l  : LUT8 pixelarray that holds the resulting image
- dithering.l  : use dithering
- ARGBPtr.l    : pointer to ARGB pixelarray
- xs.l         : width
- ys.l         : height
- bpr.l        : bytes per row of the ARGB pixelarray
- bpr8.l       : bytes per row of the LUT8 pixelarray
- *cmap.cmap    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_Save "cmap_Save"

@{B}cmap_Save@{UB}

@{B}Syntax:@{UB}  result.l = cmap_Save \{*cmap.cmap,filename.s,@force.l\}

@{B}Description:@{UB}
Save a colormap to a file as IFF-ILBM CMAP chunk.
The colormap can be read by most Amiga paint programs.

@{B}Inputs:@{UB}      
- filename.s    : file name
- force.l    : -1 = overwrite, 0 = ask
- *cmap.cmap    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_SetRGB "cmap_SetRGB"

@{B}cmap_SetRGB@{UB}

@{B}Syntax:@{UB} cmap_SetRGB \{*cmap.cmap,pen.l,ARGB.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *cmap.cmap    : ???
- pen.l    : ???
- ARGB.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_UpdateFromHistory "cmap_UpdateFromHistory"

@{B}cmap_UpdateFromHistory@{UB}

@{B}Syntax:@{UB} result.l = cmap_UpdateFromHistory \{*cmap.cmap,@numcolors.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *cmap.cmap    : ???
- numcolors.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_UpdateMapTable "cmap_UpdateMapTable"

@{B}cmap_UpdateMapTable@{UB}

@{B}Syntax:@{UB} cmap_UpdateMapTable \{*cmap.cmap\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *cmap.cmap    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE cmap_Write "cmap_Write"

@{B}cmap_Write@{UB}

@{B}Syntax:@{UB}  result.l = cmap_Write \{*cmap.cmap,fid.l\}

@{B}Description:@{UB}
Write the colormap to an IFF-ILBM file as CMAP chunk imto an already open file.

@{B}Inputs:@{UB}      
- fid.l    : file handle returned by file_open (file.include)
- *cmap.cmap    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
