@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "image_ext.include"

@{B}image_ext.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" image_ConeBlit " link image_ConeBlit} 
   @{" image_DrawLineAA " link image_DrawLineAA} 
   @{" image_DrawLine_t " link image_DrawLine_t} 
   @{" image_DryMudFilter " link image_DryMudFilter} 
   @{" image_Filter " link image_Filter} 
   @{" image_FloodFill " link image_FloodFill} 
   @{" image_GetAvgARGB " link image_GetAvgARGB} 
   @{" image_GetBrightness " link image_GetBrightness} 
   @{" image_GrowGrass " link image_GrowGrass} 
   @{" image_GrowLeave " link image_GrowLeave} 
   @{" image_IlluminateRGB " link image_IlluminateRGB} 
   @{" image_Mirror " link image_Mirror} 
   @{" image_Mix " link image_Mix} 
   @{" image_Patternize " link image_Patternize} 
   @{" image_PerlinNoise " link image_PerlinNoise} 
   @{" image_Rotate " link image_Rotate} 
   @{" image_Scroll " link image_Scroll} 
   @{" image_Smooth " link image_Smooth} 
   @{" image_Square2Iso " link image_Square2Iso} 

@{B}Private Function Index:@{UB}

   @{" _image_ConeBlit_old " link _image_ConeBlit_old} 

@{B}Public Macro Index:@{UB}

   @{" !image_nrnd " link !image_nrnd} 
   @{" !image_rnd255 " link !image_rnd255} 
   @{" !image_rndf " link !image_rndf} 
   @{" !image_rndset " link !image_rndset} 
   @{" !imagext_ClipARGB " link !imagext_ClipARGB} 
   @{" !imagext_GetARGB " link !imagext_GetARGB} 
   @{" !imagext_SetARGB " link !imagext_SetARGB} 
   @{" !imagext_median " link !imagext_median} 
   @{" !setAPenRGB " link !setAPenRGB} 
   @{" !setBPenRGB rp,bgRGB " link !setBPenRGB rp,bgRGB} 
   @{" !setPenRGB rp,fgRGB,bgRGB " link !setPenRGB rp,fgRGB,bgRGB} 

@{B}Private Macro Index:@{UB}

   @{" !_addfillpoint " link !_addfillpoint} 
   @{" !_getfillpoint " link !_getfillpoint} 

@ENDNODE
@NODE !_addfillpoint "!_addfillpoint"

@{B}!_addfillpoint@{UB}

@{B}Syntax:@{UB} !_addfillpoint

@{B}Description:@{UB}
* private

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !_getfillpoint "!_getfillpoint"

@{B}!_getfillpoint@{UB}

@{B}Syntax:@{UB} !_getfillpoint

@{B}Description:@{UB}
* private

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !image_nrnd "!image_nrnd"

@{B}!image_nrnd@{UB}

@{B}Syntax:@{UB} !image_nrnd \{seed\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- seed    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !image_rnd255 "!image_rnd255"

@{B}!image_rnd255@{UB}

@{B}Syntax:@{UB} !image_rnd255 \{seed\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- seed    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !image_rndf "!image_rndf"

@{B}!image_rndf@{UB}

@{B}Syntax:@{UB} !image_rndf \{seed\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- seed    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !image_rndset "!image_rndset"

@{B}!image_rndset@{UB}

@{B}Syntax:@{UB} !image_rndset \{seed,value\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- seed    : ???
- value    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !imagext_ClipARGB "!imagext_ClipARGB"

@{B}!imagext_ClipARGB@{UB}

@{B}Syntax:@{UB} !imagext_ClipARGB \{A,R,G,B\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- A    : ???
- R    : ???
- G    : ???
- B    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !imagext_GetARGB "!imagext_GetARGB"

@{B}!imagext_GetARGB@{UB}

@{B}Syntax:@{UB} !imagext_GetARGB \{ptr.l,A.l,R.l,G.l,B.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- ptr.l    : ???
- A.l    : ???
- R.l    : ???
- G.l    : ???
- B.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !imagext_SetARGB "!imagext_SetARGB"

@{B}!imagext_SetARGB@{UB}

@{B}Syntax:@{UB} !imagext_SetARGB \{ptr.l,A.l,R.l,G.l,B.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- ptr.l    : ???
- A.l    : ???
- R.l    : ???
- G.l    : ???
- B.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !imagext_median "!imagext_median"

@{B}!imagext_median@{UB}

@{B}Syntax:@{UB} !imagext_median \{A,count\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- A    : ???
- count    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !setAPenRGB "!setAPenRGB"

@{B}!setAPenRGB@{UB}

@{B}Syntax:@{UB} !setAPenRGB \{rp,fgRGB\}

@{B}Description:@{UB}
Set the foreground pen as RGB value in penless mode (24bit)
NOTE: This function requires OS4, MOS or AfA OS and a hi/true color screen

@{B}Inputs:@{UB}      
- rp    : ???
- fgRGB    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !setBPenRGB rp,bgRGB "!setBPenRGB rp,bgRGB"

@{B}!setBPenRGB rp,bgRGB@{UB}

@{B}Syntax:@{UB} !setBPenRGB rp,bgRGB

@{B}Description:@{UB}
Set the background pen as RGB value in penless mode (24bit)
NOTE: This function requires OS4, MOS or AfA OS and a hi/true color screen

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !setPenRGB rp,fgRGB,bgRGB "!setPenRGB rp,fgRGB,bgRGB"

@{B}!setPenRGB rp,fgRGB,bgRGB@{UB}

@{B}Syntax:@{UB} !setPenRGB rp,fgRGB,bgRGB

@{B}Description:@{UB}
Set the fore- and background pen as RGB value in penless mode (24bit)
NOTE: This function requires OS4, MOS or AfA OS and a hi/true color screen

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} image_ext.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 19/01/2007

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Extend AB3 functionality.
* no description available *

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _image_ConeBlit_old "_image_ConeBlit_old"

@{B}_image_ConeBlit_old@{UB}

@{B}Syntax:@{UB} _image_ConeBlit_old \{image.l,x1.l,y1.l,x2.l,y2.l,fat1.f,fat2.f,angle.f,light.f\}

@{B}Description:@{UB}
NOTE: dirty

@{B}Inputs:@{UB}      
- image.l    : ???
- x1.l    : ???
- y1.l    : ???
- x2.l    : ???
- y2.l    : ???
- fat1.f    : ???
- fat2.f    : ???
- angle.f    : ???
- light.f    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_ConeBlit "image_ConeBlit"

@{B}image_ConeBlit@{UB}

@{B}Syntax:@{UB} image_ConeBlit \{image.l,*tc.texcone,@image2.l,@*rp.RastPort,@zbuffer.l\}

@{B}Description:@{UB}
NOTE: dirty

@{B}Inputs:@{UB}      
- image.l    : ???
- *tc.texcone    : ???
- image2.l    : ???
- *rp.RastPort    : ???
- zbuffer.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_DrawLineAA "image_DrawLineAA"

@{B}image_DrawLineAA@{UB}

@{B}Syntax:@{UB} image_DrawLineAA \{image.l,x1.f,y1.f,x2.f,y2.f,argb.l,thickness.f,@flags.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- image.l    : ???
- x1.f    : ???
- y1.f    : ???
- x2.f    : ???
- y2.f    : ???
- argb.l    : ???
- thickness.f    : ???
- flags.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_DrawLine_t "image_DrawLine_t"

@{B}image_DrawLine_t@{UB}

@{B}Syntax:@{UB} image_DrawLine_t \{image.l,x1.l,y1.l,x2.l,y2.l,argb.l,thickness.f,@flags.l\}

@{B}Description:@{UB}
NOTE: dirty

@{B}Inputs:@{UB}      
- image.l    : ???
- x1.l    : ???
- y1.l    : ???
- x2.l    : ???
- y2.l    : ???
- argb.l    : ???
- thickness.f    : ???
- flags.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_DryMudFilter "image_DryMudFilter"

@{B}image_DryMudFilter@{UB}

@{B}Syntax:@{UB} image_DryMudFilter \{image.l,image2.l,@opacity.l,@threshold.l\}

@{B}Description:@{UB}
NOTE: dirty

@{B}Inputs:@{UB}      
- image.l    : ???
- image2.l    : ???
- opacity.l    : ???
- threshold.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_Filter "image_Filter"

@{B}image_Filter@{UB}

@{B}Syntax:@{UB} result.l = image_Filter \{image.l,filterType.l,mix.l,@*taglist.TagItem,@destimage.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- image.l    : ???
- filterType.l    : ???
- mix.l    : ???
- *taglist.TagItem    : ???
- destimage.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_FloodFill "image_FloodFill"

@{B}image_FloodFill@{UB}

@{B}Syntax:@{UB} image_FloodFill \{image.l,x.l,y.l,fillRGB.l,borderRGB.l,@mask.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- image.l    : ???
- x.l    : ???
- y.l    : ???
- fillRGB.l    : ???
- borderRGB.l    : ???
- mask.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_GetAvgARGB "image_GetAvgARGB"

@{B}image_GetAvgARGB@{UB}

@{B}Syntax:@{UB}  result.l = image_GetAvgARGB \{image.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- image.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_GetBrightness "image_GetBrightness"

@{B}image_GetBrightness@{UB}

@{B}Syntax:@{UB}  result.l = image_GetBrightness \{RGBA.l\}

@{B}Description:@{UB}
Get the brightness of an RGB value

@{B}Inputs:@{UB}      
- RGBA.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_GrowGrass "image_GrowGrass"

@{B}image_GrowGrass@{UB}

@{B}Syntax:@{UB} image_GrowGrass \{image.l,amount.l,@image2.l,@opacity.l,@light.f,@maxdrift.f,@gravity.f,@doalpha.l\}

@{B}Description:@{UB}
NOTE: dirty

@{B}Inputs:@{UB}      
- image.l    : ???
- amount.l    : ???
- image2.l    : ???
- opacity.l    : ???
- light.f    : ???
- maxdrift.f    : ???
- gravity.f    : ???
- doalpha.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_GrowLeave "image_GrowLeave"

@{B}image_GrowLeave@{UB}

@{B}Syntax:@{UB} image_GrowLeave \{image.l,amount.l,image2.l,@opacity.l,@light.f,@maxdrift.f,@gravity.f,@doalpha.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- image.l    : ???
- amount.l    : ???
- image2.l    : ???
- opacity.l    : ???
- light.f    : ???
- maxdrift.f    : ???
- gravity.f    : ???
- doalpha.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_IlluminateRGB "image_IlluminateRGB"

@{B}image_IlluminateRGB@{UB}

@{B}Syntax:@{UB}  result.l = image_IlluminateRGB \{RGBA.l,brightness.f\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- RGBA.l    : ???
- brightness.f    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_Mirror "image_Mirror"

@{B}image_Mirror@{UB}

@{B}Syntax:@{UB} image_Mirror \{image.l,direction.l,@image2.l\}

@{B}Description:@{UB}
sourcebpr.l = \bpr ; img_width*4
destbpr.l = imagedat(image2)\bpr ; img_width*4
    ;A/3
    ;A=(A*A)
dirty

@{B}Inputs:@{UB}      
- image.l    : ???
- direction.l    : ???
- image2.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_Mix "image_Mix"

@{B}image_Mix@{UB}

@{B}Syntax:@{UB} image_Mix \{image.l,image2.l,mode.l,ratio.l\}

@{B}Description:@{UB}
Mix two images in different possbile modes.
NOTE: dirty

@{B}Inputs:@{UB}      
- image.l    : ???
- image2.l   : ???
- mode.l     : ???
- ratio.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_Patternize "image_Patternize"

@{B}image_Patternize@{UB}

@{B}Syntax:@{UB} image_Patternize \{image.l,fadex.f,fadey.f,@dstimage.l,@hq.l,@xoffset.l,@yoffset.l\}

@{B}Description:@{UB}
Dirty

@{B}Inputs:@{UB}      
- image.l     : source image
- fadex.f     : horizontal fade zone 0...1
- fadey.f     : vertical fade zone 0...1
- dstimage.l  : destination image
- hq.l        : enable high quality algorithm
- xoffset.l   : horizontal offsset for blending
- yoffset.l   : vertical offset for blending

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_PerlinNoise "image_PerlinNoise"

@{B}image_PerlinNoise@{UB}

@{B}Syntax:@{UB}  result.l = image_PerlinNoise \{image.l,*rec.Rectangle,*perlinPars.perlinPars,@*rp.RastPort\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- image.l    : ???
- *rec.perlinRect    : ???
- *perlinPars.perlinPars    : ???
- *rp.RastPort    : ???
- *rec.Rectangle    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_Rotate "image_Rotate"

@{B}image_Rotate@{UB}

@{B}Syntax:@{UB} image_Rotate \{image.l,beta.f,@image2.l\}

@{B}Description:@{UB}
Rotate an image by the angle of beta.
beta is in clockwise degrees.

@{B}Inputs:@{UB}      
- image.l    : image to rotate
- beta.f     : angle of rotation
- image2.l   : optional destination image, if different from source image

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_Scroll "image_Scroll"

@{B}image_Scroll@{UB}

@{B}Syntax:@{UB} image_Scroll \{image.l,dx.l,dy.l\}

@{B}Description:@{UB}
* Scroll the image data by dx and dy.

@{B}Inputs:@{UB}      
- image.l    : ???
- dx.l    : ???
- dy.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_Smooth "image_Smooth"

@{B}image_Smooth@{UB}

@{B}Syntax:@{UB} image_Smooth \{image.l,smoothing.l,@image2.l\}

@{B}Description:@{UB}
Smooth an image.
Note: dirty

@{B}Inputs:@{UB}      
- image.l    : ???
- smoothing.l    : ???
- image2.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE image_Square2Iso "image_Square2Iso"

@{B}image_Square2Iso@{UB}

@{B}Syntax:@{UB} image_Square2Iso \{image.l,dstimage.l,@dw.l,@dh.l,@interpol.l\}

@{B}Description:@{UB}
Rotate image 45 degree and resize.
This function can be used to convert a square (or rectangle) tile graphic into an iso view tile.

@{B}Inputs:@{UB}      
- image.l    : source image
- dstimage.l : destination image
- dw.l       : destination width
- dh.l       : destination height
- interpol   : -1 = use lienar interpolation, 0 = no interpolation
- interpol.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
