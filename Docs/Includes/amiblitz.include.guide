@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "amiblitz.include"

@{B}amiblitz.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" ab2_GetLib " link ab2_GetLib} 
   @{" ab2_ReadAB2Lib " link ab2_ReadAB2Lib} 
   @{" ab2_ReadSysLib " link ab2_ReadSysLib} 
   @{" ted_AddAB2 " link ted_AddAB2} 
   @{" ted_AddAB2GetEm " link ted_AddAB2GetEm} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} amiblitz.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 11.03.2006

@{B}Author:@{UB} Thilo Koehler

@{B}Requirements:@{UB} Amiblitz2.4, file.include, tui.include

@{B}Purpose:@{UB}
Scan through Blitzlibs and find tokens. * private *

@{B}Abstract:@{UB}
This include can be used to search for tokens (Functions and Statements) within Blitzlibs files (also Deflibs or Acidlibs).
It has some functions to add the found tokens to the texteditor gadget of TUI (texteditor.include).
The include is very specialized and probably not very useful for you. However, you can check out how I scan through the Blitzlibs, maybe this is interesting for you.

Note: The scanning of the Blitzlibs is not 100% perfect. It is not based on original Blitzbasic source code.
Note: This include is only used by TuiTED so far, when TuiTED does the scanning for blitzlibs.

@{B}User Constants:@{UB}    none

@{B}Example:@{UB}                                                 none



@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ab2_GetLib "ab2_GetLib"

@{B}ab2_GetLib@{UB}

@{B}Syntax:@{UB} ab2_GetLib \{filename.s\}

@{B}Description:@{UB}
Open a Blitzlib file and add all found tokens to the texteditor engine (texteditor.include).
Texteditor objects will now be able to highlight and tokenize AB2 sourcecodes.
The function calls ab2_read_ab2lib or ab2_read_syslib to read the tokens.

@{B}Inputs:@{UB}      
- filename.s    : filename of a blitzlibs (or deflib or acidlib)

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        
Some blitzlibs are wired coded, and the last tokens can be not found.



@{B}See also:@{UB}    -


@ENDNODE
@NODE ab2_ReadAB2Lib "ab2_ReadAB2Lib"

@{B}ab2_ReadAB2Lib@{UB}

@{B}Syntax:@{UB}  succ.l = ab2_ReadAB2Lib \{dos.l,libnum.l\}

@{B}Description:@{UB}
Read the next token out of a blitzlib and add the token to the texteditor engine.

@{B}Inputs:@{UB}      
- dos.l    : file handle returned by file_open from file.include
- libnum.l    : library id that has to be determined earlier, e.g. ab2_getlib

@{B}Result:@{UB}      
- succ.l     : -1 if everything went well, 0 if it failed
Some blitzlibs are wired coded, and the last tokens can be not found.

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ab2_ReadSysLib "ab2_ReadSysLib"

@{B}ab2_ReadSysLib@{UB}

@{B}Syntax:@{UB}  succ.l = ab2_ReadSysLib \{dos.l,libnum.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- dos.l    : file handle returned by file_open from file.include
- libnum.l    : library id that has to be determined earlier, e.g. ab2_getlib

@{B}Result:@{UB}      
- succ.l     : -1 if everything went well, 0 if it failed

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ted_AddAB2 "ted_AddAB2"

@{B}ted_AddAB2@{UB}

@{B}Syntax:@{UB} ted_AddAB2 \{path.s,@*ted.tuited\}

@{B}Description:@{UB}
Add all AB2 tokens found in blitzlibs found in path.s to the texteditor engine.
This function calls ted_addab2_getem.

@{B}Inputs:@{UB}      
- path.s    : dos path to your blitzlibs
- *ted.tuited    : texteditor object that should display the progress andrecalculated after the blitzlibs are loaded

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ted_AddAB2GetEm "ted_AddAB2GetEm"

@{B}ted_AddAB2GetEm@{UB}

@{B}Syntax:@{UB} ted_AddAB2GetEm \{path.s,@*ted.tuited\}

@{B}Description:@{UB}
Read all blitzlibs found at path.s, optionally refresh the texteditor object.
Libclashes (token and lib ID are the same) will cause an error message.

@{B}Inputs:@{UB}      
- path.s    : dos path to your blitzlibs
- *ted.tuited    : texteditor object that should display the progress andrecalculated after the blitzlibs are loaded

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
