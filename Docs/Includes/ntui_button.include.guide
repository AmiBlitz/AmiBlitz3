@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "ntui_button.include"

@{B}ntui_button.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" ntui_Button " link ntui_Button} 
   @{" ntui_CheckBox " link ntui_CheckBox} 
   @{" ntui_FunctionButton " link ntui_FunctionButton} 
   @{" ntui_ImageButton " link ntui_ImageButton} 
   @{" ntui_ToolButton " link ntui_ToolButton} 

@{B}Private Function Index:@{UB}

   @{" _ntui_DrawButton " link _ntui_DrawButton} 
   @{" _ntui_FreeButton " link _ntui_FreeButton} 
   @{" _ntui_GetButtonMinSize " link _ntui_GetButtonMinSize} 
   @{" _ntui_HandleButton " link _ntui_HandleButton} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} @{" ntui_Button " link ntui_Button}.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 06/01/2009

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Extend AB3 functionality.
* no description available *

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_DrawButton "_ntui_DrawButton"

@{B}_ntui_DrawButton@{UB}

@{B}Syntax:@{UB} _ntui_DrawButton \{*tuiButton.tuiButton,*rp.RastPort\}

@{B}Description:@{UB}
        ;Case *tuiButton\hotkey
* draw the button in all its beauty */

@{B}Inputs:@{UB}      
- *tuiButton.tuiButton    : ???
- *rp.RastPort    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_FreeButton "_ntui_FreeButton"

@{B}_ntui_FreeButton@{UB}

@{B}Syntax:@{UB} _ntui_FreeButton \{*tuiButton.tuiButton\}

@{B}Description:@{UB}
 Case #TUIBUTTON_TOOL
   *tuiButton\obj\minsize\x = iwidth
   *tuiButton\obj\minsize\y = iheight
* free everything special that we allocated for the button */

@{B}Inputs:@{UB}      
- *tuiButton.tuiButton    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_GetButtonMinSize "_ntui_GetButtonMinSize"

@{B}_ntui_GetButtonMinSize@{UB}

@{B}Syntax:@{UB}  result.l = _ntui_GetButtonMinSize \{*tuiButton.tuiButton,*rp.RastPort\}

@{B}Description:@{UB}
  *tuiButton\tbi            = ntui_CreateTBImage\{*tuiButton\obj\tuiEngine,image,#TUISIZE_NATIVE,#TUISIZE_NATIVE\}TUISIZE_BUTTON,#TUISIZE_BUTTON\}
* calculate the minimum size for the button */

@{B}Inputs:@{UB}      
- *tuiButton.tuiButton    : ???
- *rp.RastPort    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_HandleButton "_ntui_HandleButton"

@{B}_ntui_HandleButton@{UB}

@{B}Syntax:@{UB}  result.w = _ntui_HandleButton \{*tuiButton.tuiButton,*tuiEvent.tuiEvent\}

@{B}Description:@{UB}
* tui button newtype */
obj.tuiObject            ; tui object header
* do what happens if the user operates the button */

@{B}Inputs:@{UB}      
- *tuiButton.tuiButton    : ???
- *tuiEvent.tuiEvent    : ???

@{B}Result:@{UB}      
- result.w     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_Button "ntui_Button"

@{B}ntui_Button@{UB}

@{B}Syntax:@{UB}  result.l = ntui_Button \{text.s,image.s,@notify.l,@help.s,@flags.l,@userID.l\}

@{B}Description:@{UB}
   iy2.l = y1+*tuiButton\tbi\height-1
   If *tuiButton\obj\string Then iy2+ *tuiEngine\defPad\y
* create function for tui button */

@{B}Inputs:@{UB}      
- text.s    : ???
- image.s    : ???
- notify.l    : ???
- help.s    : ???
- flags.l    : ???
- userID.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_CheckBox "ntui_CheckBox"

@{B}ntui_CheckBox@{UB}

@{B}Syntax:@{UB}  result.l = ntui_CheckBox \{checked.l,@notify.l,@help.s,@flags.l,@userID.l\}

@{B}Description:@{UB}
* create function for tui button */

@{B}Inputs:@{UB}      
- checked.l    : ???
- notify.l    : ???
- help.s    : ???
- flags.l    : ???
- userID.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_FunctionButton "ntui_FunctionButton"

@{B}ntui_FunctionButton@{UB}

@{B}Syntax:@{UB}  result.l = ntui_FunctionButton \{funcID.l,@notify.l,@help.s,@flags.l,@userID.l\}

@{B}Description:@{UB}
* create function for tui button */

@{B}Inputs:@{UB}      
- funcID.l    : ???
- notify.l    : ???
- help.s    : ???
- flags.l    : ???
- userID.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_ImageButton "ntui_ImageButton"

@{B}ntui_ImageButton@{UB}

@{B}Syntax:@{UB}  result.l = ntui_ImageButton \{text.s,image.s,@notify.l,@help.s,@flags.l,@userID.l\}

@{B}Description:@{UB}
       ;str_Write\{&*tuiButton\obj\string,"?"\}
       tuiButton\tbi            = !_NULL
* create an image tui button */

@{B}Inputs:@{UB}      
- text.s    : ???
- image.s    : ???
- notify.l    : ???
- help.s    : ???
- flags.l    : ???
- userID.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_ToolButton "ntui_ToolButton"

@{B}ntui_ToolButton@{UB}

@{B}Syntax:@{UB}  result.l = ntui_ToolButton \{text.s,image.s,@notify.l,@help.s,@flags.l,@userID.l\}

@{B}Description:@{UB}
* create an image tui button */

@{B}Inputs:@{UB}      
- text.s    : ???
- image.s    : ???
- notify.l    : ???
- help.s    : ???
- flags.l    : ???
- userID.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
