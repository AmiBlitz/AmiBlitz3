@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "http.include"

@{B}http.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" http_Check " link http_Check} 
   @{" http_Connect " link http_Connect} 
   @{" http_Disconnect " link http_Disconnect} 
   @{" http_Free " link http_Free} 
   @{" http_GetAuthorization " link http_GetAuthorization} 
   @{" http_GetDocument " link http_GetDocument} 
   @{" http_GetDomain " link http_GetDomain} 
   @{" http_GetHost " link http_GetHost} 
   @{" http_GetReceivedBody " link http_GetReceivedBody} 
   @{" http_GetReceivedErrCode " link http_GetReceivedErrCode} 
   @{" http_GetReceivedFile " link http_GetReceivedFile} 
   @{" http_GetReceivedReferer " link http_GetReceivedReferer} 
   @{" http_GetReceivedSize " link http_GetReceivedSize} 
   @{" http_GetReceivedSocket " link http_GetReceivedSocket} 
   @{" http_GetReceivedUrl " link http_GetReceivedUrl} 
   @{" http_GetUrl " link http_GetUrl} 
   @{" http_IsConnected " link http_IsConnected} 
   @{" http_IsUsed " link http_IsUsed} 
   @{" http_SetProxy " link http_SetProxy} 

@{B}Private Function Index:@{UB}

   @{" _BASE64_Decode " link _BASE64_Decode} 
   @{" _BASE64_Encode " link _BASE64_Encode} 
   @{" _http_Get " link _http_Get} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} http.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 19/01/2007

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Extend AB3 functionality.
* no description available *

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _BASE64_Decode "_BASE64_Decode"

@{B}_BASE64_Decode@{UB}

@{B}Syntax:@{UB}  result.s = _BASE64_Decode \{a$\}

@{B}Description:@{UB}
decode BASE64 string to plain text

@{B}Inputs:@{UB}      
- a$    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _BASE64_Encode "_BASE64_Encode"

@{B}_BASE64_Encode@{UB}

@{B}Syntax:@{UB}  result.s = _BASE64_Encode \{a$\}

@{B}Description:@{UB}
encode plain text to BASE64 string

@{B}Inputs:@{UB}      
- a$    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _http_Get "_http_Get"

@{B}_http_Get@{UB}

@{B}Syntax:@{UB}  result.l = _http_Get \{socket.l\}

@{B}Description:@{UB}
Send http GET command, socket must be already connected !
NOTE: this function is private and will not be called by you !

@{B}Inputs:@{UB}      
- socket.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_Check "http_Check"

@{B}http_Check@{UB}

@{B}Syntax:@{UB}  result.l = http_Check \{@timeout.l\}

@{B}Description:@{UB}
  host.s = "http://" + http_GetHost\{url.s\}       ; bei Proxynutzung mu_ die komplette URL inkl. http:// bei GET aufgerufen werden

Call this in regular intervals (e.g. 2 times a second or more) to perfrom I/O
If it returns success one or more sockets are done, and you can ask with
http_GetReceived_... for information

@{B}Inputs:@{UB}      
- timeout.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_Connect "http_Connect"

@{B}http_Connect@{UB}

@{B}Syntax:@{UB}  result.l = http_Connect \{socket.l,url.s,referer.s,filename.s,timeout.l\}

@{B}Description:@{UB}
  ;If socket_GetPort\{socket\} = #port_http
    socket_AddPacketStringN\{socket,"Accept: */*;q=1"\}
    ;error\{tcp\socket[socket]\packet\}
  ;Else
  ;  error\{"Socket is not connected to HTTP port ("+Str$(#port_http)+") !"\}
  ;End If

Start to make a connection to the given URL
NOTE: socket may NOT be connected yet when this function returns
After the socket is connected, you can do _http_Get\{\}

@{B}Inputs:@{UB}      
- socket.l    : ???
- url.s    : ???
- referer.s    : ???
- filename.s    : ???
- timeout.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_Disconnect "http_Disconnect"

@{B}http_Disconnect@{UB}

@{B}Syntax:@{UB} http_Disconnect \{socket.l,@keepfile.l\}

@{B}Description:@{UB}
Shut the socket and remove it

@{B}Inputs:@{UB}      
- socket.l    : ???
- keepfile.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_Free "http_Free"

@{B}http_Free@{UB}

@{B}Syntax:@{UB} http_Free \{\}

@{B}Description:@{UB}
close http engine, all sockets will be removed automatically

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetAuthorization "http_GetAuthorization"

@{B}http_GetAuthorization@{UB}

@{B}Syntax:@{UB}  result.s = http_GetAuthorization \{url.s\}

@{B}Description:@{UB}
Extract the BASE64 encoded authorization string from an "@" URL
e.g. "myuser:mypasswd@www.myhompage.com/index.html"

@{B}Inputs:@{UB}      
- url.s    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetDocument "http_GetDocument"

@{B}http_GetDocument@{UB}

@{B}Syntax:@{UB}  result.s = http_GetDocument \{url.s\}

@{B}Description:@{UB}
Get document from URL string
e.g. "mypath/index.html" out of "http://www.hd-rec.de/mypath/index.html"

@{B}Inputs:@{UB}      
- url.s    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetDomain "http_GetDomain"

@{B}http_GetDomain@{UB}

@{B}Syntax:@{UB}  result.s = http_GetDomain \{url.s\}

@{B}Description:@{UB}
Get domain name from URL
e.g. "de" out of "http://www.hd-rec.de/index.html"

@{B}Inputs:@{UB}      
- url.s    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetHost "http_GetHost"

@{B}http_GetHost@{UB}

@{B}Syntax:@{UB}  result.s = http_GetHost \{url.s\}

@{B}Description:@{UB}
Get host name from URL
e.g. "www.hd-rec.de" out of "http://www.hd-rec.de/index.html"

@{B}Inputs:@{UB}      
- url.s    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetReceivedBody "http_GetReceivedBody"

@{B}http_GetReceivedBody@{UB}

@{B}Syntax:@{UB}  result.s = http_GetReceivedBody \{\}

@{B}Description:@{UB}
            ;pos.l = Instr(body.s,"Content-Length:")
            ;error\{"Length: "+Mid$(body.s,pos-100,200)\}
         If tcp_GetReceivedState\{\} = #packet_stat_error Then error\{"Error occured !"\}

return body (=data) of last received socket after @{" http_Check " link http_Check}
NOTE: the string may contain 0 bytes !!!
NOTE: if you specified a filename during @{" http_Connect " link http_Connect}, the body string will
be empty. You downloaded directly to a file (e.g. good for large files)

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetReceivedErrCode "http_GetReceivedErrCode"

@{B}http_GetReceivedErrCode@{UB}

@{B}Syntax:@{UB}  result.l = http_GetReceivedErrCode \{\}

@{B}Description:@{UB}
return error code of last received socket after @{" http_Check " link http_Check}

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetReceivedFile "http_GetReceivedFile"

@{B}http_GetReceivedFile@{UB}

@{B}Syntax:@{UB}  result.s = http_GetReceivedFile \{\}

@{B}Description:@{UB}
return filename of last received socket after @{" http_Check " link http_Check}
\ is "" if you did not define a filename during @{" http_Connect " link http_Connect}

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetReceivedReferer "http_GetReceivedReferer"

@{B}http_GetReceivedReferer@{UB}

@{B}Syntax:@{UB}  result.s = http_GetReceivedReferer \{\}

@{B}Description:@{UB}
return data bytelength of last received socket after http_Check\{\}

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetReceivedSize "http_GetReceivedSize"

@{B}http_GetReceivedSize@{UB}

@{B}Syntax:@{UB}  result.l = http_GetReceivedSize \{\}

@{B}Description:@{UB}
return data bytelength of last received socket after @{" http_Check " link http_Check}

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetReceivedSocket "http_GetReceivedSocket"

@{B}http_GetReceivedSocket@{UB}

@{B}Syntax:@{UB}  result.l = http_GetReceivedSocket \{\}

@{B}Description:@{UB}
return socket number of last received socket after @{" http_Check " link http_Check}

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetReceivedUrl "http_GetReceivedUrl"

@{B}http_GetReceivedUrl@{UB}

@{B}Syntax:@{UB}  result.s = http_GetReceivedUrl \{\}

@{B}Description:@{UB}
return data bytelength of last received socket after http_Check\{\}

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_GetUrl "http_GetUrl"

@{B}http_GetUrl@{UB}

@{B}Syntax:@{UB}  result.s = http_GetUrl \{socket.l\}

@{B}Description:@{UB}
Return the sockets URL

@{B}Inputs:@{UB}      
- socket.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_IsConnected "http_IsConnected"

@{B}http_IsConnected@{UB}

@{B}Syntax:@{UB}  result.l = http_IsConnected \{socket.l\}

@{B}Description:@{UB}
Is the socket already connected ?

@{B}Inputs:@{UB}      
- socket.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_IsUsed "http_IsUsed"

@{B}http_IsUsed@{UB}

@{B}Syntax:@{UB}  result.l = http_IsUsed \{socket.l\}

@{B}Description:@{UB}
Is the socket in use ?

@{B}Inputs:@{UB}      
- socket.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE http_SetProxy "http_SetProxy"

@{B}http_SetProxy@{UB}

@{B}Syntax:@{UB} http_SetProxy \{socket.l,proxy_name.s,@proxy_port.l,@username.s,@password.s\}

@{B}Description:@{UB}
set a proxy server for a socket, or remove it (when proxy_name.s = "")

@{B}Inputs:@{UB}      
- socket.l    : ???
- proxy_name.s    : ???
- proxy_port.l    : ???
- username.s    : ???
- password.s    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
