@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "asl.include"

@{B}asl.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" ASLFO_GetFontName " link ASLFO_GetFontName} 
   @{" ASLFO_GetFontSize " link ASLFO_GetFontSize} 
   @{" ASLFO_Request " link ASLFO_Request} 
   @{" ASLFO_SetInitialFont " link ASLFO_SetInitialFont} 
   @{" ASLFO_SetRequesterTitle " link ASLFO_SetRequesterTitle} 
   @{" ASLFR_EasyRequest " link ASLFR_EasyRequest} 
   @{" ASLFR_GetFile " link ASLFR_GetFile} 
   @{" ASLFR_GetNextFile " link ASLFR_GetNextFile} 
   @{" ASLFR_GetNumFilesChosen " link ASLFR_GetNumFilesChosen} 
   @{" ASLFR_GetPath " link ASLFR_GetPath} 
   @{" ASLFR_GetPattern " link ASLFR_GetPattern} 
   @{" ASLFR_Request " link ASLFR_Request} 
   @{" ASLFR_SetFile " link ASLFR_SetFile} 
   @{" ASLFR_SetPath " link ASLFR_SetPath} 
   @{" ASLFR_SetPattern " link ASLFR_SetPattern} 
   @{" ASLFR_SetRequesterTitle " link ASLFR_SetRequesterTitle} 
   @{" ASLSM_GetAutoscroll " link ASLSM_GetAutoscroll} 
   @{" ASLSM_GetBestModeID " link ASLSM_GetBestModeID} 
   @{" ASLSM_GetDepth " link ASLSM_GetDepth} 
   @{" ASLSM_GetHeight " link ASLSM_GetHeight} 
   @{" ASLSM_GetModeID " link ASLSM_GetModeID} 
   @{" ASLSM_GetModeName " link ASLSM_GetModeName} 
   @{" ASLSM_GetOverscan " link ASLSM_GetOverscan} 
   @{" ASLSM_GetWidth " link ASLSM_GetWidth} 
   @{" ASLSM_Request " link ASLSM_Request} 
   @{" ASLSM_SetInitialDims " link ASLSM_SetInitialDims} 
   @{" ASLSM_SetInitialModeID " link ASLSM_SetInitialModeID} 
   @{" ASLSM_SetMaxDims " link ASLSM_SetMaxDims} 
   @{" ASLSM_SetMinDims " link ASLSM_SetMinDims} 
   @{" ASLSM_SetRequesterTitle " link ASLSM_SetRequesterTitle} 
   @{" ASL_SetRequesterDims " link ASL_SetRequesterDims} 

@{B}Public Macro Index:@{UB}

   @{" !_ASL_Init " link !_ASL_Init} 

@ENDNODE
@NODE !_ASL_Init "!_ASL_Init"

@{B}!_ASL_Init@{UB}

@{B}Syntax:@{UB} !_ASL_Init

@{B}Description:@{UB}
Open a Font ASL Requester and ask the user to select a font.

@{B}Inputs:@{UB}      
- initfontname.s    : initial font name, e.g. "helvetica.font"
- initfontsize.l    : initial font Y size, e.g. 13
- allowpropfont.l   : True if propotional fonts should be allowed, False for fix fonts only (default: True)
- *scr.Screen       : pointer to a screen where to open the requester, orcurrently used screen if omitted.

@{B}Result:@{UB}      
- result.w     : True, if a font was selected, False if cancelled

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFO_GetFontName "ASLFO_GetFontName"

@{B}ASLFO_GetFontName@{UB}

@{B}Syntax:@{UB}  result.s = ASLFO_GetFontName \{\}

@{B}Description:@{UB}
Get the font name of the last requester.
NOTE: This returns your initial font if the requester was cancelled.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.s     : font name

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFO_GetFontSize "ASLFO_GetFontSize"

@{B}ASLFO_GetFontSize@{UB}

@{B}Syntax:@{UB}  result.l = ASLFO_GetFontSize \{\}

@{B}Description:@{UB}
Get the font y size of the last requester.
NOTE: This returns your intianl font size If the requester was cancelled.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : font y size

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFO_Request "ASLFO_Request"

@{B}ASLFO_Request@{UB}

@{B}Syntax:@{UB}  result.l = ASLFO_Request \{@allowpropfont.l,@*scr.Screen\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- allowpropfont.l    : ???
- *scr.Screen    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFO_SetInitialFont "ASLFO_SetInitialFont"

@{B}ASLFO_SetInitialFont@{UB}

@{B}Syntax:@{UB} ASLFO_SetInitialFont \{initfontname.s,initfontsize.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- initfontname.s    : ???
- initfontsize.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFO_SetRequesterTitle "ASLFO_SetRequesterTitle"

@{B}ASLFO_SetRequesterTitle@{UB}

@{B}Syntax:@{UB} ASLFO_SetRequesterTitle \{title.s,ok.s,cancel.s\}

@{B}Description:@{UB}
Set the requesters window title, ok-text and cancel-text.

@{B}Inputs:@{UB}      
- title.s    : window title, e.g. "Please choose a font"
- ok.s       : text for ok button, e.g. "Okeydokey!"
- cancel.s   : text for cancel button, e.g."Eeeek!"

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_EasyRequest "ASLFR_EasyRequest"

@{B}ASLFR_EasyRequest@{UB}

@{B}Syntax:@{UB}  result.s = ASLFR_EasyRequest \{id.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- id.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_GetFile "ASLFR_GetFile"

@{B}ASLFR_GetFile@{UB}

@{B}Syntax:@{UB}  result.s = ASLFR_GetFile \{id.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- id.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_GetNextFile "ASLFR_GetNextFile"

@{B}ASLFR_GetNextFile@{UB}

@{B}Syntax:@{UB}  result.s = ASLFR_GetNextFile \{\}

@{B}Description:@{UB}
  ;asltag(n)\ti_Tag = #ASLFR_InitialShowVolumes,True               : n+1
    ;d$=Left$(d$,Instr(d$,Chr$(0))-1)
    ;f$=Left$(f$,Instr(f$,Chr$(0))-1)

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_GetNumFilesChosen "ASLFR_GetNumFilesChosen"

@{B}ASLFR_GetNumFilesChosen@{UB}

@{B}Syntax:@{UB}  result.l = ASLFR_GetNumFilesChosen \{id.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- id.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_GetPath "ASLFR_GetPath"

@{B}ASLFR_GetPath@{UB}

@{B}Syntax:@{UB}  result.s = ASLFR_GetPath \{id.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- id.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_GetPattern "ASLFR_GetPattern"

@{B}ASLFR_GetPattern@{UB}

@{B}Syntax:@{UB}  result.s = ASLFR_GetPattern \{id.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- id.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_Request "ASLFR_Request"

@{B}ASLFR_Request@{UB}

@{B}Syntax:@{UB}  result.l = ASLFR_Request \{id.l,savemode.l,multiselect.l,drawersonly.l,@*scr.Screen,@noIcons.l\}

@{B}Description:@{UB}
* Do an ASL FileRequester.

@{B}Inputs:@{UB}      
- id.l             : id slot
- savemode.l       : -1 = ASL behaviour is for "save file", otherwise "load file"
- multiselect.l    : -1 = allow multiselect
- drawersonly.l    : -1 = show only drawers
- *scr.Screen      : pointer to a screen to open the requester on
- noIcons.l        : -1 = hide icon files

@{B}Result:@{UB}      
- result.w         : -1 if the requester was answered by the user, 0 if cancelled

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_SetFile "ASLFR_SetFile"

@{B}ASLFR_SetFile@{UB}

@{B}Syntax:@{UB} ASLFR_SetFile \{id.l,fil.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- id.l    : ???
- fil.s    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_SetPath "ASLFR_SetPath"

@{B}ASLFR_SetPath@{UB}

@{B}Syntax:@{UB} ASLFR_SetPath \{id.l,path.s,@fil.s,@patt.s,@optional.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- id.l    : ???
- path.s    : ???
- fil.s    : ???
- patt.s    : ???
- optional.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_SetPattern "ASLFR_SetPattern"

@{B}ASLFR_SetPattern@{UB}

@{B}Syntax:@{UB} ASLFR_SetPattern \{id.l,pattern.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- id.l    : ???
- pattern.s    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLFR_SetRequesterTitle "ASLFR_SetRequesterTitle"

@{B}ASLFR_SetRequesterTitle@{UB}

@{B}Syntax:@{UB} ASLFR_SetRequesterTitle \{id.l,title.s,ok.s,cancel.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- id.l    : ???
- title.s    : ???
- ok.s    : ???
- cancel.s    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLSM_GetAutoscroll "ASLSM_GetAutoscroll"

@{B}ASLSM_GetAutoscroll@{UB}

@{B}Syntax:@{UB}  result.l = ASLSM_GetAutoscroll \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLSM_GetBestModeID "ASLSM_GetBestModeID"

@{B}ASLSM_GetBestModeID@{UB}

@{B}Syntax:@{UB}  result.l = ASLSM_GetBestModeID \{scr_width.l,scr_height.l,scr_depth.l\}

@{B}Description:@{UB}
Return the best screenmode ID for the given screen dimensions.

@{B}Inputs:@{UB}      
- scr_width.l    : ???
- scr_height.l    : ???
- scr_depth.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLSM_GetDepth "ASLSM_GetDepth"

@{B}ASLSM_GetDepth@{UB}

@{B}Syntax:@{UB}  result.l = ASLSM_GetDepth \{\}

@{B}Description:@{UB}
Return the screen depth (2^depth = number of colours) selected by the last call of screen_asl.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : screen depth

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    screen_asl




@ENDNODE
@NODE ASLSM_GetHeight "ASLSM_GetHeight"

@{B}ASLSM_GetHeight@{UB}

@{B}Syntax:@{UB}  result.l = ASLSM_GetHeight \{\}

@{B}Description:@{UB}
Return the screen height selected by the last call of screen_asl.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : screen height

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    screen_asl




@ENDNODE
@NODE ASLSM_GetModeID "ASLSM_GetModeID"

@{B}ASLSM_GetModeID@{UB}

@{B}Syntax:@{UB}  result.l = ASLSM_GetModeID \{\}

@{B}Description:@{UB}
Return the screen mode ID selected by the last call of screen_asl.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : screen mode ID

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    screen_asl




@ENDNODE
@NODE ASLSM_GetModeName "ASLSM_GetModeName"

@{B}ASLSM_GetModeName@{UB}

@{B}Syntax:@{UB}  result.s = ASLSM_GetModeName \{@modeid.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- modeid.l    : ???

@{B}Result:@{UB}      
- result.s     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLSM_GetOverscan "ASLSM_GetOverscan"

@{B}ASLSM_GetOverscan@{UB}

@{B}Syntax:@{UB}  result.l = ASLSM_GetOverscan \{\}

@{B}Description:@{UB}
Return the overscan value selected by the last call of screen_asl.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : overscan value

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    screen_asl




@ENDNODE
@NODE ASLSM_GetWidth "ASLSM_GetWidth"

@{B}ASLSM_GetWidth@{UB}

@{B}Syntax:@{UB}  result.l = ASLSM_GetWidth \{\}

@{B}Description:@{UB}
Return the screen width that was selected by the last call of screen_asl or screen_ask.

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      
- result.l     : screen width

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    screen_asl




@ENDNODE
@NODE ASLSM_Request "ASLSM_Request"

@{B}ASLSM_Request@{UB}

@{B}Syntax:@{UB}  result.l = ASLSM_Request \{@doDims.l,@doDepth.l,@doOverscan.l,@doAutoscroll.l,@*scr.Screen\}

@{B}Description:@{UB}
Open an ASL screen requester and let the user choose a screenmode.
To reduce the number of screenmodes to the ones matching your specs, use screen_ASL_setmin, screen_aslsetmax and screen_aslsetinitial.
This is a bit more lowlevel than screen_ask. You have to compose your bit mask out of the following values:

#asl_scr_width      =  1 ; ask for width
#asl_scr_height     =  2 ; ask for height
#asl_scr_depth      =  4 ; ask for depth
#asl_scr_overscan   =  8 ; ask for overscan
#asl_scr_ascroll    = 16 ; ask for auto scroll

After calling the requester, you can read out the screen information by screen_ASL_width, screen_ASL_height, screen_ASL_depth, screen_ASL_id, screen_ASL_autoscroll and screen_ask_overscan.

@{B}Inputs:@{UB}      
- title.s    : title of the ASL requester
- mask.l    : bit mask of things you want the ASL requester to ask
- doDims.l    : ???
- doDepth.l    : ???
- doOverscan.l    : ???
- doAutoscroll.l    : ???
- *scr.Screen    : ???

@{B}Result:@{UB}      
- result.w     : -1 if the requester was answered, 0 if aborted

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    
screen_ASL_setmin, screen_aslsetmax, screen_aslsetinitial
screen_ASL_width, screen_ASL_height, screen_ASL_depth, screen_ASL_id, screen_ASL_autoscroll, screen_ask_overscan




@ENDNODE
@NODE ASLSM_SetInitialDims "ASLSM_SetInitialDims"

@{B}ASLSM_SetInitialDims@{UB}

@{B}Syntax:@{UB} ASLSM_SetInitialDims \{init_width.l,init_height.l,init_depth.l\}

@{B}Description:@{UB}
Set the initial values of the ASL screen mode requester.
Note: Usually, you set this to the values of the current screen.

@{B}Inputs:@{UB}      
- init_id.l    : screen mode id
- init_width.l    : screen width
- init_height.l    : screen height
- init_depth.l    : screen depth

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    screen_asl




@ENDNODE
@NODE ASLSM_SetInitialModeID "ASLSM_SetInitialModeID"

@{B}ASLSM_SetInitialModeID@{UB}

@{B}Syntax:@{UB} ASLSM_SetInitialModeID \{init_id.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- init_id.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASLSM_SetMaxDims "ASLSM_SetMaxDims"

@{B}ASLSM_SetMaxDims@{UB}

@{B}Syntax:@{UB} ASLSM_SetMaxDims \{max_width.l,max_height.l,max_depth.l\}

@{B}Description:@{UB}
Set the maximum dimensions of the screen you which to be selectable in the ASL requester.
Screenmodes that can not handle your dimensions will be filtered out from the list.

@{B}Inputs:@{UB}      
- max_width.l    : screen width
- max_height.l    : screen height
- max_depth.l    : screen depth

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    screen_asl, screen_ASL_setmin




@ENDNODE
@NODE ASLSM_SetMinDims "ASLSM_SetMinDims"

@{B}ASLSM_SetMinDims@{UB}

@{B}Syntax:@{UB} ASLSM_SetMinDims \{min_width.l,min_height.l,min_depth.l\}

@{B}Description:@{UB}
Set the minimum dimensions of the screen you which to be selectable in the ASL requester.
Screenmodes that can not handle your dimensions will be filtered out from the list.
Hint: To force hi/true color screen modes, depth min_depth to 16.

@{B}Inputs:@{UB}      
- min_width.l    : screen width
- min_height.l    : screen height
- min_depth.l    : screen depth

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    screen_asl, screen_ASL_setmax




@ENDNODE
@NODE ASLSM_SetRequesterTitle "ASLSM_SetRequesterTitle"

@{B}ASLSM_SetRequesterTitle@{UB}

@{B}Syntax:@{UB} ASLSM_SetRequesterTitle \{title.s,ok.s,cancel.s\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- title.s    : ???
- ok.s    : ???
- cancel.s    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ASL_SetRequesterDims "ASL_SetRequesterDims"

@{B}ASL_SetRequesterDims@{UB}

@{B}Syntax:@{UB} ASL_SetRequesterDims \{x.l,y.l,xs.l,ys.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- x.l    : ???
- y.l    : ???
- xs.l    : ???
- ys.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} file_ASL.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 19/01/2007

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Extend AB3 functionality.
* no description available *

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
