@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "dynamicarray.include"

@{B}dynamicarray.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" da_AddItem " link da_AddItem} 
   @{" da_AutoExit " link da_AutoExit} 
   @{" da_Clear " link da_Clear} 
   @{" da_Create " link da_Create} 
   @{" da_ExchangeItems " link da_ExchangeItems} 
   @{" da_Expand " link da_Expand} 
   @{" da_Free " link da_Free} 
   @{" da_GetItem " link da_GetItem} 
   @{" da_GetItemFast " link da_GetItemFast} 
   @{" da_GetUseN " link da_GetUseN} 
   @{" da_InsertItem " link da_InsertItem} 
   @{" da_InsertItemSortedByLong " link da_InsertItemSortedByLong} 
   @{" da_Pointer2Index " link da_Pointer2Index} 
   @{" da_RemoveItem " link da_RemoveItem} 
   @{" da_SetItem " link da_SetItem} 
   @{" da_Unuse " link da_Unuse} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} dynamicarray.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 08/01/2008

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Extend AB3 functionality.
* no description available *

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_AddItem "da_AddItem"

@{B}da_AddItem@{UB}

@{B}Syntax:@{UB} result.l =  da_AddItem \{*da.dynArray,@itemPtr.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???
- itemPtr.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_AutoExit "da_AutoExit"

@{B}da_AutoExit@{UB}

@{B}Syntax:@{UB} da_AutoExit \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_Clear "da_Clear"

@{B}da_Clear@{UB}

@{B}Syntax:@{UB} da_Clear \{*da.dynArray\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_Create "da_Create"

@{B}da_Create@{UB}

@{B}Syntax:@{UB}  result.l = da_Create \{itemSize.l,@incItems.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- itemSize.l    : ???
- incItems.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_ExchangeItems "da_ExchangeItems"

@{B}da_ExchangeItems@{UB}

@{B}Syntax:@{UB} da_ExchangeItems \{*da.dynArray,itemA.l,itemB.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???
- itemA.l    : ???
- itemB.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_Expand "da_Expand"

@{B}da_Expand@{UB}

@{B}Syntax:@{UB}  result.l = da_Expand \{*da.dynArray,itemMax.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???
- itemMax.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_Free "da_Free"

@{B}da_Free@{UB}

@{B}Syntax:@{UB} da_Free \{*da.dynArray\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_GetItem "da_GetItem"

@{B}da_GetItem@{UB}

@{B}Syntax:@{UB}  result.l =  da_GetItem \{*da.dynArray,itemX.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???
- itemN.l    : ???
- itemX.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_GetItemFast "da_GetItemFast"

@{B}da_GetItemFast@{UB}

@{B}Syntax:@{UB}  result.l =  da_GetItemFast \{*da.dynArray,itemX.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???
- itemN.l    : ???
- itemX.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_GetUseN "da_GetUseN"

@{B}da_GetUseN@{UB}

@{B}Syntax:@{UB}  result.l =  da_GetUseN \{*da.dynArray\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_InsertItem "da_InsertItem"

@{B}da_InsertItem@{UB}

@{B}Syntax:@{UB} result.l =  da_InsertItem \{*da.dynArray,itemX.l,@itemPtr.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???
- itemX.l    : ???
- itemPtr.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_InsertItemSortedByLong "da_InsertItemSortedByLong"

@{B}da_InsertItemSortedByLong@{UB}

@{B}Syntax:@{UB} result.l =  da_InsertItemSortedByLong \{*da.dynArray,structoffset.l,long.l,@itemPtr.l,@ascending.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???
- structoffset.l    : ???
- long.l    : ???
- itemPtr.l    : ???
- ascending.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_Pointer2Index "da_Pointer2Index"

@{B}da_Pointer2Index@{UB}

@{B}Syntax:@{UB} result.l = da_Pointer2Index \{*da.dynArray,ptr.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???
- ptr.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_RemoveItem "da_RemoveItem"

@{B}da_RemoveItem@{UB}

@{B}Syntax:@{UB} da_RemoveItem \{*da.dynArray,itemX.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???
- itemX.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_SetItem "da_SetItem"

@{B}da_SetItem@{UB}

@{B}Syntax:@{UB}  newitemPtr.l =  da_SetItem \{*da.dynArray,itemX.l,@itemPtr.l\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray : pointer to dynamic array
- itemN.l      : index of item
- itemPtr.l    : optional pointer to existing item that will be copied
- itemX.l    : ???

@{B}Result:@{UB}      
- newitemPtr.l : Pointer to new array item or 0 if failed

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE da_Unuse "da_Unuse"

@{B}da_Unuse@{UB}

@{B}Syntax:@{UB} da_Unuse \{*da.dynArray\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      
- *da.dynArray    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
