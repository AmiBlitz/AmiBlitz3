@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "ntui_scroller.include"

@{B}ntui_scroller.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" ntui_AddArrows " link ntui_AddArrows} 
   @{" ntui_HScroller " link ntui_HScroller} 
   @{" ntui_VScroller " link ntui_VScroller} 

@{B}Private Function Index:@{UB}

   @{" _ntui_DrawScroller " link _ntui_DrawScroller} 
   @{" _ntui_FreeScroller " link _ntui_FreeScroller} 
   @{" _ntui_GetScrollerMinSize " link _ntui_GetScrollerMinSize} 
   @{" _ntui_HandleScroller " link _ntui_HandleScroller} 
   @{" _ntui_UpdateScroller " link _ntui_UpdateScroller} 

@{B}Public Macro Index:@{UB}

 * no macros defined * 

@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} ntui_scroller.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 06/01/2009

@{B}Author:@{UB} <unknown>

@{B}Requirements:@{UB}  Amiblitz3

@{B}Purpose:@{UB}
Extend AB3 functionality.
* no description available *

@{B}Abstract:@{UB}
* no abstract available *

@{B}User Constants:@{UB}
#max_objects   = n

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_DrawScroller "_ntui_DrawScroller"

@{B}_ntui_DrawScroller@{UB}

@{B}Syntax:@{UB} _ntui_DrawScroller \{*tuiScroller.tuiScroller,*rp.RastPort\}

@{B}Description:@{UB}
* draw the button in all its beauty */

@{B}Inputs:@{UB}      
- *tuiScroller.tuiScroller    : ???
- *rp.RastPort    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_FreeScroller "_ntui_FreeScroller"

@{B}_ntui_FreeScroller@{UB}

@{B}Syntax:@{UB} _ntui_FreeScroller \{*tuiScroller.tuiScroller\}

@{B}Description:@{UB}
* free everything special that we allocated for the button */
If *tuiScroller\img Then ntui_FreeImage\{*tuiScroller\img\}  : *tuiScroller\img = !_NULL

@{B}Inputs:@{UB}      
- *tuiScroller.tuiScroller    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_GetScrollerMinSize "_ntui_GetScrollerMinSize"

@{B}_ntui_GetScrollerMinSize@{UB}

@{B}Syntax:@{UB}  result.l = _ntui_GetScrollerMinSize \{*tuiScroller.tuiScroller,*rp.RastPort\}

@{B}Description:@{UB}
* calculate the minimum size for the button */

@{B}Inputs:@{UB}      
- *tuiScroller.tuiScroller    : ???
- *rp.RastPort    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_HandleScroller "_ntui_HandleScroller"

@{B}_ntui_HandleScroller@{UB}

@{B}Syntax:@{UB}  result.w = _ntui_HandleScroller \{*tuiScroller.tuiScroller,*tuiEvent.tuiEvent\}

@{B}Description:@{UB}
* do what happens if the user operates the scroller */

@{B}Inputs:@{UB}      
- *tuiScroller.tuiScroller    : ???
- *tuiEvent.tuiEvent    : ???

@{B}Result:@{UB}      
- result.w     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE _ntui_UpdateScroller "_ntui_UpdateScroller"

@{B}_ntui_UpdateScroller@{UB}

@{B}Syntax:@{UB} _ntui_UpdateScroller \{*tuiScroller.tuiScroller,@top.l,@visible.l,@total.l\}

@{B}Description:@{UB}
* tui scroller newtype */
obj.tuiObject            ; tui object header
* update the scrollers values */

@{B}Inputs:@{UB}      
- *tuiScroller.tuiScroller    : ???
- top.l    : ???
- visible.l    : ???
- total.l    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_AddArrows "ntui_AddArrows"

@{B}ntui_AddArrows@{UB}

@{B}Syntax:@{UB} ntui_AddArrows \{\}

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_HScroller "ntui_HScroller"

@{B}ntui_HScroller@{UB}

@{B}Syntax:@{UB}  result.l = ntui_HScroller \{top.l,total.l,visible.l,@notify.l,@help.s,@flags.l,@userID.l\}

@{B}Description:@{UB}
* create function for tui scroller */

@{B}Inputs:@{UB}      
- top.l    : ???
- total.l    : ???
- visible.l    : ???
- notify.l    : ???
- help.s    : ???
- flags.l    : ???
- userID.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_VScroller "ntui_VScroller"

@{B}ntui_VScroller@{UB}

@{B}Syntax:@{UB}  result.l = ntui_VScroller \{top.l,total.l,visible.l,@notify.l,@help.s,@flags.l,@userID.l\}

@{B}Description:@{UB}
 ;   If (*tuiScroller\total>0) OR True
 ;   Else
 ;     cx1=x1
 ;     cy1=y1
 ;     cx2=x2
 ;     cy2=y2
 ;   End If
   If *tuiScroller\total>*tuiScroller\visible  OR *tuiScroller\obj\value>0
   *bs.tuiBorderSize = -ntui_GetBorderSize\{*tuiEngine,#TUIBORDER_BUTTON\}
   ntui_DrawButtonBorder\{*tuiEngine,*rp,cx1,cy1,cx2,cy2,*tuiScroller\obj\flags\}
   Else
   SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_HALFSHADOW]
    RectFill_ *rp,cx1,cy1,cx2,cy2
   End If
  ;  If (*tuiScroller\total>0) OR True
  ;  Else
  ;    cx1=x1
  ;    cy1=y1
  ;    cx2=x2
  ;    cy2=y2
  ;  End If
   If *tuiScroller\total>*tuiScroller\visible OR *tuiScroller\obj\value>0
    bs.tuiBorderSize= ntui_GetBorderSize\{*tuiEngine,#TUIBORDER_BUTTON\}
 ;   ntui_DrawButtonBorder\{*tuiEngine,*rp,cx1,cy1,cx2,cy2,*tuiScroller\obj\flags\}
 ;      Else
 ;      SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_HALFSHADOW]
 ;       RectFill_ *rp,cx1,cy1,cx2,cy2
   End If
* create function for tui scroller */

@{B}Inputs:@{UB}      
- top.l    : ???
- total.l    : ???
- visible.l    : ???
- notify.l    : ???
- help.s    : ???
- flags.l    : ???
- userID.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
