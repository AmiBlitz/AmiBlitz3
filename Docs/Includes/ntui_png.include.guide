@Database "AB3Includes"
@Width 80
@font helvetica.font 13
@wordwrap
@TAB 3

@NODE main "ntui_png.include"

@{B}ntui_png.include@{UB}

@{B}Abstract@{UB}

   @{" Introduction " link Introduction} 

@{B}Public Function Index:@{UB}

   @{" ntui_DecodePNG " link ntui_DecodePNG} 
   @{" ntui_FindPNGChunk " link ntui_FindPNGChunk} 
   @{" ntui_FreePNG " link ntui_FreePNG} 
   @{" ntui_GetPNGHeight " link ntui_GetPNGHeight} 
   @{" ntui_GetPNGWidth " link ntui_GetPNGWidth} 
   @{" ntui_ReadPNG " link ntui_ReadPNG} 

@{B}Private Function Index:@{UB}

   @{" ntui_UnfilterPNG " link ntui_UnfilterPNG} 

@{B}Public Macro Index:@{UB}

   @{" !ntui_png_inc_buffer " link !ntui_png_inc_buffer} 
   @{" !ntui_png_init_a " link !ntui_png_init_a} 
   @{" !ntui_png_init_b " link !ntui_png_init_b} 
   @{" !ntui_png_init_c " link !ntui_png_init_c} 
   @{" !ntui_png_shift_b " link !ntui_png_shift_b} 
   @{" !ntui_png_shift_c " link !ntui_png_shift_c} 
   @{" !ntui_png_unfilter_adam7_argb " link !ntui_png_unfilter_adam7_argb} 
   @{" !ntui_png_unfilter_average " link !ntui_png_unfilter_average} 
   @{" !ntui_png_unfilter_peath " link !ntui_png_unfilter_peath} 
   @{" !ntui_png_unfilter_sub " link !ntui_png_unfilter_sub} 
   @{" !ntui_png_unfilter_up " link !ntui_png_unfilter_up} 

@ENDNODE
@NODE !ntui_png_inc_buffer "!ntui_png_inc_buffer"

@{B}!ntui_png_inc_buffer@{UB}

@{B}Syntax:@{UB} !ntui_png_inc_buffer

@{B}Description:@{UB}
  ;End If

* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !ntui_png_init_a "!ntui_png_init_a"

@{B}!ntui_png_init_a@{UB}

@{B}Syntax:@{UB} !ntui_png_init_a

@{B}Description:@{UB}
p.l = Int((`1a+`1b)/2) + `1px

* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !ntui_png_init_b "!ntui_png_init_b"

@{B}!ntui_png_init_b@{UB}

@{B}Syntax:@{UB} !ntui_png_init_b

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !ntui_png_init_c "!ntui_png_init_c"

@{B}!ntui_png_init_c@{UB}

@{B}Syntax:@{UB} !ntui_png_init_c

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !ntui_png_shift_b "!ntui_png_shift_b"

@{B}!ntui_png_shift_b@{UB}

@{B}Syntax:@{UB} !ntui_png_shift_b

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !ntui_png_shift_c "!ntui_png_shift_c"

@{B}!ntui_png_shift_c@{UB}

@{B}Syntax:@{UB} !ntui_png_shift_c

@{B}Description:@{UB}
* no description available *

  ;If y>0

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !ntui_png_unfilter_adam7_argb "!ntui_png_unfilter_adam7_argb"

@{B}!ntui_png_unfilter_adam7_argb@{UB}

@{B}Syntax:@{UB} !ntui_png_unfilter_adam7_argb \{xoff,yoff,xstep,ystep\}

@{B}Description:@{UB}
     ; error\{"Decoding filter id="+Str$(filt)+"!"\}

* no description available *

@{B}Inputs:@{UB}      
- xoff    : ???
- yoff    : ???
- xstep    : ???
- ystep    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !ntui_png_unfilter_average "!ntui_png_unfilter_average"

@{B}!ntui_png_unfilter_average@{UB}

@{B}Syntax:@{UB} !ntui_png_unfilter_average

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !ntui_png_unfilter_peath "!ntui_png_unfilter_peath"

@{B}!ntui_png_unfilter_peath@{UB}

@{B}Syntax:@{UB} !ntui_png_unfilter_peath

@{B}Description:@{UB}
Aa.l = 0 ; left
Ab.l = 0 ; above
Ac.l = 0 ; upperleft
Ra.l = 0 ; left
Rb.l = 0 ; above
Rc.l = 0 ; upperleft
Ga.l = 0 ; left
Gb.l = 0 ; above
Gc.l = 0 ; upperleft
Ba.l = 0 ; left
Bb.l = 0 ; above
Bc.l = 0 ; upperleft

* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !ntui_png_unfilter_sub "!ntui_png_unfilter_sub"

@{B}!ntui_png_unfilter_sub@{UB}

@{B}Syntax:@{UB} !ntui_png_unfilter_sub

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE !ntui_png_unfilter_up "!ntui_png_unfilter_up"

@{B}!ntui_png_unfilter_up@{UB}

@{B}Syntax:@{UB} !ntui_png_unfilter_up

@{B}Description:@{UB}
* no description available *

@{B}Inputs:@{UB}      none

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE Introduction "Introduction"

@{B}Name:@{UB} png.include

@{B}Platforms:@{UB} Classic, WinUAE, Amithlon, MorphOS, AmigaOS4

@{B}Date:@{UB} 29/12/2006

@{B}Author:@{UB} Thilo Koehler

@{B}Requirements:@{UB}  Amiblitz2.4, zlib.library

@{B}Purpose:@{UB}
This is a include to support the image.inlcude with png functionality.

@{B}Abstract:@{UB}
This include is of not much use stand alone, as you can load and save images through the image.include, but you might want to have a look at the source code for educational reasons.

This include is used by the image.include to load the alpha channel of a .png file, because picture.datatype on OS3.x does not support this.
It can also be used to save a png file from an ARGB or RGB pixel array.

@{B}User Constants:@{UB} none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_DecodePNG "ntui_DecodePNG"

@{B}ntui_DecodePNG@{UB}

@{B}Syntax:@{UB} ntui_DecodePNG \{*tuiPNG.tuiPNG,destbuffer.l,bpr.l\}

@{B}Description:@{UB}
Decode (means decompress and unfilter) a png buffer into an ARGB pixel array.

@{B}Inputs:@{UB}      
- destbuffer.l    : memory pointer of the ARGB pixel array (make sure it is big enough: width*height*4 bytes!)
- bpr.l    : bpr of the ARGB pixel array
- *tuiPNG.tuiPNG    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_FindPNGChunk "ntui_FindPNGChunk"

@{B}ntui_FindPNGChunk@{UB}

@{B}Syntax:@{UB}  result.l = ntui_FindPNGChunk \{*fh.FileHandle,chunk.l,posP.l,blength.l,immediate.l\}

@{B}Description:@{UB}
Find a chunk within a png file.
NOTE: The chunk format is different from the FORM chunks, so the png.include needs its own function.

@{B}Inputs:@{UB}      
- dos.l    : file object ID (file.include)
- chunk.l    : chunk header ID
- pos.l    : file seek position from where to start
- blength.l    : maximum byte length
- immediate.l    : allow the first chunk to be found
- *fh.FileHandle    : ???
- posP.l    : ???

@{B}Result:@{UB}      
- result.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_FreePNG "ntui_FreePNG"

@{B}ntui_FreePNG@{UB}

@{B}Syntax:@{UB} ntui_FreePNG \{*tuiPNG.tuiPNG\}

@{B}Description:@{UB}
    ;error\{"Called file_findchunk() with invalid seek position ! ("+Str$(pos)+")"\}

Close the png file.

@{B}Inputs:@{UB}      
- *tuiPNG.tuiPNG    : ???

@{B}Result:@{UB}      none

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_GetPNGHeight "ntui_GetPNGHeight"

@{B}ntui_GetPNGHeight@{UB}

@{B}Syntax:@{UB}  height.l = ntui_GetPNGHeight \{*tuiPNG.tuiPNG\}

@{B}Description:@{UB}
Return the height of the png image in pixel.

@{B}Inputs:@{UB}      
- *tuiPNG.tuiPNG    : ???

@{B}Result:@{UB}      
- height.l     : height in pixel

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_GetPNGWidth "ntui_GetPNGWidth"

@{B}ntui_GetPNGWidth@{UB}

@{B}Syntax:@{UB}  width.l = ntui_GetPNGWidth \{*tuiPNG.tuiPNG\}

@{B}Description:@{UB}
img_width.l ; :              4 bytes
img_height.l ; :             4 bytes
img_bitdepth.b ; :          1 byte
img_colortype.b ; :         1 byte
img_compression_method.b ; : 1 byte
img_filter_method.b ; :          1 byte
img_interlace_method.b ; :   1 byte
dy.l
Color                        Allowed     Interpretation
#ntui_png_color_gray  =   0 ;  1,2,4,8,16  Each pixel is a grayscale sample.
#ntui_png_color_rgb   =   2 ;  8,16        Each pixel is an R,G,B triple.
#ntui_png_color_clut  =   3 ;  1,2,4,8     Each pixel is a Index;  a PLTE chunk must appear.
#ntui_png_color_ga    =   4 ;  8,16        Each pixel is a grayscale sample, followed by an alpha sample.
#ntui_png_color_rgba  =   6 ;  8,16        Each pixel is an R,G,B triple, followed by an alpha sample.
#ntui_png_filter_none    =   0   ; None
#ntui_png_filter_sub     =   1   ; SUB
#ntui_png_filter_up      =   2   ; Up
#ntui_png_filter_average =   3   ; Average
#ntui_png_filter_paeth   =   4   ; Paeth
#ntui_png_interlace_none     = 0 ; no interlacing
#ntui_png_interlace_adam7    = 1 ; adam7 scheme interlacing
#ntui_png_compression_zlib   = 0 ; zlib compression
#ntui_png_filtermethod_5  = 0; 5 filters, standard

Return the width of the open png image in pixel.

@{B}Inputs:@{UB}      
- *tuiPNG.tuiPNG    : ???

@{B}Result:@{UB}      
- width.l     : width in pixel

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_ReadPNG "ntui_ReadPNG"

@{B}ntui_ReadPNG@{UB}

@{B}Syntax:@{UB}  succ.l = ntui_ReadPNG \{filename.s\}

@{B}Description:@{UB}
Open a png file for reading.

@{B}Inputs:@{UB}      
- filename.s    : file name of the png file

@{B}Result:@{UB}      
- succ.l     : ???

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
@NODE ntui_UnfilterPNG "ntui_UnfilterPNG"

@{B}ntui_UnfilterPNG@{UB}

@{B}Syntax:@{UB}  result.l = ntui_UnfilterPNG \{sourceaddr.l,destaddr.l,pixelwidth.l,scanlines.l,bpr.l,bpp.l\}

@{B}Description:@{UB}
* private *

@{B}Inputs:@{UB}      
- sourceaddr.l    : ???
- destaddr.l    : ???
- bpr.l    : ???
- mode.l    : ???
- pixelwidth.l    : ???
- scanlines.l    : ???
- bpp.l    : ???

@{B}Result:@{UB}      
- result.l     : ???
sBytesPerPixel.l = 4 ; we only decode ARGB pngs

@{B}Example:@{UB}     no example

@{B}Bugs:@{UB}        no bugs

@{B}See also:@{UB}    -


@ENDNODE
