; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Sys:Programme/AIDE"
; ExeFile         = "AIDE"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 503
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 65535
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 408
; CursorColumn    = 57
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 30
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 1
; Max GadgetList  = 1
; Max Queue       = 1
; Max Screen      = 2
; Max Shape       = 1
; Max CopList     = 1
; Max Sprite      = 1
; Max Stencil     = 1
; Max Module      = 1
; Max Window      = 30
; Max Anim        = 1
; Max Sound       = 1
; Max Bank        = 1
; Max Buffer      = 1
; Max BitMap      = 1
; Max Slice       = 1
; Max Page        = 1
; Max Tape        = 1
; Max IntuiFont   = 12
; Max MedModule   = 1
; Max Palette     = 1
; Max MenuList    = 1
; Max BlitzFont   = 1
; Max GTList      = 30
; /XTRA

; ========================= AMIGA GUIDE ====================
#HAS_AMIGAGUIDE = 1

NEWTYPE.AmigaGuide_Base

  *pftg.prefixtree
  *pftn.prefixtree
  *pfti.prefixtree
  IsInit.l

End NEWTYPE
SHARED AmigaGuide.AmigaGuide_Base


Function.l _ag_StyleSeekToChar{ptr.l,cpos.l,clen.l,c.b,e.b}

  While cpos<clen
    If Peek.b(ptr+cpos)=c Then Function Return cpos
    cpos+1
  Wend
  Function Return cpos

End Function


Function.l _ag_StyleSkipWhiteSpaces{ptr.l,cpos.l,clen.l}

  While cpos<clen
    If (Peek.b(ptr+cpos)&$FF)>32 Then Function Return cpos
    cpos+1
  Wend
  Function Return cpos

End Function


Function.l _ag_StyleSkipTokenChars{ptr.l,cpos.l,clen.l}

  While cpos<clen
    c.w = Peek.b(ptr+cpos)&$FF : isToken.w = False
    If (c>=@"a" AND c<=@"z") OR (c>=@"A" AND c<=@"Z") Then isToken=True
    If c=@"$" OR c=@":" OR c=@"(" OR c=@")" Then isToken=True
    If isToken=False Then Function Return cpos
    cpos+1
  Wend
  Function Return clen

End Function


Function.l _ag_StyleParseOpenTag{*tline.tline,cpos.l}

  bpos.l = cpos-1
  cpos.l = _ag_StyleSkipWhiteSpaces{*tline\text,cpos,*tline\clength}

  ; parse leading string, if any
  If Peek.b(*tline\text+cpos)=$22
    epos.l = _ag_StyleSeekToChar{*tline\text,cpos+1,*tline\clength,$22,$5C}+1
    _tb_SetStyleCommand{*tline,cpos ,#TUITBSC_FGPEN,#TUITBPEN_TEXT}
    If epos>=*tline\clength ; unterminated quotes!
      _tb_SetStyleCommand{*tline,cpos,#TUITBSC_WARN,1}
      Function Return epos
    End If
    cpos = _ag_StyleSkipWhiteSpaces{*tline\text,epos,*tline\clength}
  End If

  ; parse token
  epos.l = _ag_StyleSkipTokenChars{*tline\text,cpos,*tline\clength}
  If epos>cpos
    _tb_SetStyleCommand{*tline,cpos,#TUITBSC_FGPEN,#TUITBPEN_TOKEN}
    token.s = Peeks$(*tline\text+cpos,epos-cpos)
    token.s = LCase$(token)
    If pft_GetString{AmigaGuide\pfti,token}
      _tb_SetStyleCommand{*tline,cpos,#TUITBSC_BOLD,1}
      _tb_SetStyleCommand{*tline,epos,#TUITBSC_BOLD,0}
    Else
      _tb_SetStyleCommand{*tline,cpos,#TUITBSC_WARN,1}
      _tb_SetStyleCommand{*tline,epos,#TUITBSC_WARN,0}
    End If
    cpos = _ag_StyleSkipWhiteSpaces{*tline\text,epos,*tline\clength}
  Else
    ; error no token chars
    _tb_SetStyleCommand{*tline, cpos ,#TUITBSC_WARN,1,0}
  End If

  ; parse trailing string or data, if any
  _tb_SetStyleCommand{*tline,cpos,#TUITBSC_FGPEN,#TUITBPEN_STRING}
  If Peek.b(*tline\text+cpos)=$22
    epos.l = _ag_StyleSeekToChar{*tline\text,cpos+1,*tline\clength,$22,$5C}+1
    If epos>cpos
;      _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_PEN,#TUITBPEN_String,#TUITBPEN_BG}
;      _tb_SetStyleCommand{*tline,epos  ,#TUITBSC_PEN,#TUITBPEN_Token  ,#TUITBPEN_BG} ; include the quotes
    End If

    If epos>=*tline\clength ; unterminated quotes!
      _tb_SetStyleCommand{*tline,cpos,#TUITBSC_WARN,1}
      Function Return epos
    End If
  End If

  epos.l = _ag_StyleSeekToChar{*tline\text,cpos,*tline\clength,@"}",$5C}
  If epos>=*tline\clength
    ;_tb_SetStyleCommand{*tline,cpos,#TUITBSC_PEN,#TUITBPEN_Text  ,#TUITBPEN_BG}
   ; Stop
    _tb_SetStyleCommand{*tline,bpos,#TUITBSC_WARN,1}
  Else
    _tb_SetStyleCommand{*tline,epos,#TUITBSC_FGPEN,#TUITBPEN_TOKEN }
    cpos = epos+1
    _tb_SetStyleCommand{*tline,cpos,#TUITBSC_FGPEN,#TUITBPEN_TEXT  }
  End If
  Function Return cpos

End Function


Function.l _ag_StyleParseTag{*tline.tline,cpos.l}

  ; open tag
  If Peek.b(*tline\text+cpos)=@"{"
    Function Return _ag_StyleParseOpenTag{*tline,cpos+1}
  End If

  ; one line tag
  epos.l = _ag_StyleSkipTokenChars{*tline\text,cpos,*tline\clength}
  If epos>cpos
    token.s = Peeks$(*tline\text+cpos,epos-cpos)
    If token><"$VER:"
      token.s = LCase$(token)
    End If
    found.w = False
    If pft_GetString{AmigaGuide\pftg,token} Then found.w=True
    If found=False Then If pft_GetString{AmigaGuide\pftn,token} Then found.w=True
    If found
      _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_BOLD,1}
      _tb_SetStyleCommand{*tline,epos  ,#TUITBSC_BOLD,0}
    Else
      _tb_SetStyleCommand{*tline, cpos ,#TUITBSC_WARN,1}
      _tb_SetStyleCommand{*tline, epos ,#TUITBSC_WARN,0}
    End If
    _tb_SetStyleCommand{*tline,epos ,#TUITBSC_FGPEN,#TUITBPEN_STRING}
    cpos = _ag_StyleSkipWhiteSpaces{*tline\text,epos,*tline\clength}
    cpos = *tline\clength
  Else
    ; error, no token after @
    _tb_SetStyleCommand{*tline, cpos-1 ,#TUITBSC_WARN,1}
    _tb_SetStyleCommand{*tline, cpos   ,#TUITBSC_WARN,0}
    _tb_SetStyleCommand{*tline, cpos   ,#TUITBSC_FGPEN,#TUITBPEN_TEXT}
  End If

  Function Return cpos

End Function


_ag_StyleCallback:
Function.l _ag_StyleCallback{*textBox.tuiTextBox,lpos.l,*tline.tline}

  If *tline\text
    *tline\sclength = 0
    backslashed.w = False
    cpos.l = 0

    While cpos<*tline\clength
      c.b = Peek.b(*tline\text+cpos) : cpos+1
      Select c
        Case $5C
          backslashed.w = True
        Case @"@"
          If backslashed = False
            _tb_SetStyleCommand{*tline,cpos-1  ,#TUITBSC_FGPEN,#TUITBPEN_TOKEN}
            cpos = _ag_StyleParseTag{*tline,cpos}
          Else
            backslashed=False
          End If
        Default
          backslashed=False
      End Select
    Wend
    *tline\flags|#TUITBLF_STYLED
  End If
  Function Return #TUISCB_DONE

End Function
!_MakeGlobalFuncPointer{_ag_StyleCallback,{Null,0,Null}}


AmigaGuide_Prepare:
Function.l AmigaGuide_Prepare{docTypeX.l}

  If AmigaGuide\IsInit Then Function Return Default_Prepare{docTypeX}

  *pftg.prefixtree = pft_Create{}
  *pftn.prefixtree = pft_Create{}
  *pfti.prefixtree = pft_Create{}

  ; escapes
  ;pft_SetString{*pft,"\\33\\33","escaped backslash"}
  ;pft_SetString{*pft,"\@","escaped at sign"}

  ; global tags
  pft_SetString{*pftg,"$VER:"   ,"The version information for the AmigaDOS version command. Example: @$VER: safalra.guide 1.0 (18/12/2003)"}
  pft_SetString{*pftg,"(c)"     ,"The copyright information. This information is not currently used by Amigaguide. Example: @(c) 2003 Safalra (Stephen Morley)"}
  pft_SetString{*pftg,"author"  ,"The name of the author or authors. This information is not currently used by Amigaguide. Example: @author Safalra (Stephen Morley)"}
  pft_SetString{*pftg,"database","Identifies the file as an Amigaguide document (this allows Multiview to display it using the Amigaguide datatype). This must be the first line of the file. Example: @database"}
  pft_SetString{*pftg,"dnode"   ,"Indicates a dynamic node. This was never implemented and should not be used."}
  pft_SetString{*pftg,"endnode" ,"The end of a node. Example: @endnode"}
  pft_SetString{*pftg,"font"    ,"Specifies the font to use, specified by name and size. Example: @font safalra.font 12"}
  pft_SetString{*pftg,"height"  ,"Specifies the height (in rows) of the largest node. This information is not currently used by Amigaguide. Example: @height 42"}
  pft_SetString{*pftg,"help"    ,"Specifies the node to be displayed when the user clicks the ‘Help’ button. Example: @help \\22A helpful node\\22"}
  pft_SetString{*pftg,"index"   ,"Specifies the node to be displayed when the user clicks the ‘Index’ button. Example: @index \\22The index node\\22"}
  pft_SetString{*pftg,"master"  ,"The name of the master copy of this amigaguide document. This information is not currently used by Amigaguide. Example: @master \\22Documents:Amigaguide/safalra.guide\\22"}
  pft_SetString{*pftg,"node"    ,"The start of a node, followe by a name and title. The title is displayed in Amigaguide’s title bar, and the name is used to identify the node. Example: @node \\22Node name\\22 \\22Node title\\22"}
  pft_SetString{*pftg,"rem"     ,"A comment that is not displayed. Example: @rem Amigaguide won't display this"}
  pft_SetString{*pftg,"remark"  ,"A comment that is not displayed. Example: @remark Amigaguide won't display this"}
  pft_SetString{*pftg,"width"   ,"Specifies the width (in columns) of the largest node. This information is not currently used by Amigaguide. Example: @width 78"}

  ; node level tags
  pft_SetString{*pftn,"font"    ,"The same as the global font command, but only effects this node. Example: @font safalra.font 12"}
  pft_SetString{*pftn,"help"    ,"The same as the global help command, but only effects this node. Example: @help \\22A helpful node\\22"}
  pft_SetString{*pftn,"index"   ,"The same as the global index command, but only effects this node. Example: @index \\22The index node\\22"}
  pft_SetString{*pftn,"keywords","The keywords for this node. This information is not currently used by Amigaguide. Example: @keywords Torquay \\22English Riviera\\22 Devon \\22Fawlty Towers\\22"}
  pft_SetString{*pftn,"next"    ,"The next node, displayed when the user clicks the ‘Browser >’ button. This defaults to the next node in the document source. Example: @next \\22The next node\\22"}
  pft_SetString{*pftn,"prev"    ,"The previous node, displayed when the user clicks the ‘< Browser’ button. This defaults to the previous node in the document source. Example: @prev \\22The previous node\\22"}
  pft_SetString{*pftn,"title"   ,"Specifies the title of this node. This overrides the title specified in the @node tag. Example: @title \\22Node title\\22"}
  pft_SetString{*pftn,"toc"     ,"The contents page, displayed when the user clicks the ‘Contents’ button. This defaults to the main node. Example: @toc \\22A contents node\\22"}

  ; inline tags
  help.s = "Specifies a hypertext link to open in a new window. Non-local links are specifed using the path to the amigaguide file, followed by / and the node name."
  help.s + "A line number can also be specified. Example: @{\\22Link text\\22 alink \\22local node\\22 7}"
  help.s + "Note: deprecated since V39"
  pft_SetString{*pfti,"alink"   ,help}
  pft_SetString{*pfti,"bg"      ,"Specifies the background colour to use from the next character onwards. Valid values are back, background, fill, filltext, highlight, shadow, shine’and text. Example: @{bg background}"}
  pft_SetString{*pfti,"close"   ,"Closes this window. This is used in combination with @{alink}. Example: @{\\22Back to previous node\\22 close} Note: depracted since V39"}
  pft_SetString{*pfti,"fg"      ,"Specifies the text colour to use from the next character onwards. Valid values are back, background, fill, filltext, highlight, shadow, shine’and‘text. Example: @{fg text}"}
  help.s = "Specifies a hypertext link to another node. Non-local links are specifed using the path to the amigaguide file, followed by / and the node name. A line number can also be specified."
  help.s + "Example: @{\\22Link text\\22 link \\22Documents:Amigaguide/safalra.guide/non local node name\\22 12}"
  pft_SetString{*pfti,"link"    ,help}
  pft_SetString{*pfti,"rx"      ,"Specifies a hypertext link that executes an ARexx script. Example: @{\\22Execute a script\\22 rx \\22script.rexx\\22}"}
  pft_SetString{*pfti,"rxs"     ,"Specifies a hypertext link that executes an ARexx string. Example: @{\\22Execute a string\\22 rxs \\22Say 'hello'\\22}"}
  pft_SetString{*pfti,"system"  ,"Specifies a hypertext link that executes an AmigaDOS command. Example: @{\\22Format DF0: now\\22 system \\22Format DF0:\\22}"}
  pft_SetString{*pfti,"quit"    ,"Specifies a hypertext link that closes Amigaguide. Example: @{\\22Close Amigaguide\\22 quit} Note: deprecated since V39"}

  ; global V39
  pft_SetString{*pftg,"wordwrap","Wraps paragraphs without linefeeds. Example: @wordwrap"}
  pft_SetString{*pftg,"xref"    ,"Specifies other amigaguide documents to refer to. Example: @xref \\22Documents:Amigaguide/safalra.guide\\22"}

  ; node level V39
  pft_SetString{*pftn,"embed"   ,"Embeds a text document withing this node. Example: @embed \\22Documents:Text/speech.txt\\22"}
  pft_SetString{*pftn,"proportional","Specifies that a proportional font is used for this node. Example: @proportional"}
  pft_SetString{*pftn,"wordwrap","The same as the global @wordwrap command, but only effects this node. Example: @wordwrap"}

  ; inline V39
  pft_SetString{*pfti,"b"       ,"Turns on bold text. Example: @{b}"}
  pft_SetString{*pfti,"beep"    ,"Specifies a hypertext link that makes a ‘beep’ sound when clicked. Example: @{\\22Click me to beep\\22 beep}"}
  pft_SetString{*pfti,"guide"   ,"Specifies a hypertext link to another amigaguide document. Example: @{\\22Another amigaguide document\\22 guide \\22Document:Amigaguides/safalra.guide\\22}"}
  pft_SetString{*pfti,"i"       ,"Turns on italic text. Example: @{i}"}
  pft_SetString{*pfti,"u"       ,"Turns on underlined text. Example: @{u}"}
  pft_SetString{*pfti,"ub"      ,"Turns off bold text. Example: @{ub}"}
  pft_SetString{*pfti,"ui"      ,"Turns off italic text. Example: @{ui}"}
  pft_SetString{*pfti,"uu"      ,"Turns off underlined text. Example: @{uu}"}

  ; global V40
  help.s = "Defines a macro. A macro consists of a name, and a string to substitute for it in the document. This string may contain arguments, refered to as $1, $2 and so on."
  help.s + " A macro can override the built-in tags and commands. Examle: @macro bulletlink @{\\22 \\22 LINK $2} $1"
  pft_SetString{*pftg,"macro"   ,help}
  pft_SetString{*pftg,"onclose" ,"Specifies an ARexx script to execute when the document is closed. The return value of the script is ignored. Example: @onclose \\22script.rexx\\22"}
  pft_SetString{*pftg,"onopen"  ,"Specifies an ARexx script to execute when the document is opened. If the script returns an error code, the document is not opened. Example: @onopen \\22script.rexx\\22"}
  pft_SetString{*pftg,"smartwrap","Wraps text in the same way as HTML. Paragraphs are separated by two linefeeds, or using the @{par} tag. Example: @smartwrap"}
  pft_SetString{*pftg,"tab"     ,"Specifies the number of spaces in a tab. The default value is 8. Example: @tab 3"}

  ; node level V40
  pft_SetString{*pftn,"macro"   ,"The same as the global @macro command, but only effects this node. Example: @macro bulletlink @{\\22 \\22 link $2} $1"}
  pft_SetString{*pftn,"onclose" ,"The same as the global @onclose command, but only effects this node. Example: @onclose \\22script.rexx\\22"}
  pft_SetString{*pftn,"onopen"  ,"The same as the global @onpen command, but only effects this node. Example: @onopen \\22script.rexx\\22"}
  pft_SetString{*pftn,"smartwrap","The same as the global @smartwrap command, but only effects this node. Example: @smartwrap"}
  pft_SetString{*pftn,"tab"     ,"The same as the global @tab command, but only effects this node. Example: @tab 3"}

  ; inline V40
  pft_SetString{*pfti,"amigaguide","Displays Amigaguide(R)”in bold. Authors of other amigaguide viewers should change this to display their own information. Example: @{amigaguide}"}
  pft_SetString{*pfti,"apen"     ,"Sets the pen number used for the text colour. The default value is 1. Example: @{apen 2}"}
  pft_SetString{*pfti,"body"     ,"Use default formatting from the next character onwards. Example: @{body}"}
  pft_SetString{*pfti,"bpen"     ,"Sets the pen number used for the background colour. The default value is 0. Example: @{bpen 3}"}
  pft_SetString{*pfti,"cleartabs","Use the default tab stops from the next character onwards. Example: @{cleartabs}"}
  pft_SetString{*pfti,"code"     ,"Turns off wordwrapping. Only linefeeds will cause new lines. Example: @{code}"}
  pft_SetString{*pfti,"jcenter"  ,"Turns on centred text. Example: @{jcenter}"}
  pft_SetString{*pfti,"jleft"    ,"Turns on left-aligned text. Example: @{jleft}"}
  pft_SetString{*pfti,"jright"   ,"Turns on right-aligned text. Example: @{jright}"}
  pft_SetString{*pfti,"lindent"  ,"Sets the indent, in spaces, to be used for lines of text. The default value is 0. Example: @{lindent 3}"}
  pft_SetString{*pfti,"line"     ,"A linefeed that does not start a new paragraph. Example: @{line}"}
  pft_SetString{*pfti,"par"      ,"Starts a new paragraph (equivalent to two linefeeds). Example: @{par}"}
  pft_SetString{*pfti,"pard"     ,"Use default paragraph settings. Example: @{pard}"}
  pft_SetString{*pfti,"pari"     ,"Sets the indent, in spaces, to be used for the first line of a paragraph. Example: @{pari 3}"}
  pft_SetString{*pfti,"plain"    ,"Turns off bold, italics and underlining. Example: @{plain}"}
  pft_SetString{*pfti,"settabs"  ,"Sets the tab stops, in characters. Example: @{settabs 4 8 12}"}
  pft_SetString{*pfti,"tab"      ,"Inserts a tab character. Example: @{tab}"}

  AmigaGuide\pftg = *pftg
  AmigaGuide\pftn = *pftn
  AmigaGuide\pfti = *pfti
  AmigaGuide\IsInit = True
  Function Return Default_Prepare{docTypeX}

End Function
!_MakeGlobalFuncPointer{AmigaGuide_Prepare,{0}}


AmigaGuide_Unregister:
Statement AmigaGuide_Unregister{baseTypeX.l}

  If AmigaGuide\pftg Then pft_Free{AmigaGuide\pftg} : AmigaGuide\pftg = Null
  If AmigaGuide\pftn Then pft_Free{AmigaGuide\pftn} : AmigaGuide\pftn = Null
  If AmigaGuide\pfti Then pft_Free{AmigaGuide\pfti} : AmigaGuide\pfti = Null
  AmigaGuide\IsInit = False
  Default_Unregister{baseTypeX}

End Statement
!_MakeGlobalFuncPointer{AmigaGuide_Unregister,{0}}


AmigaGuide_InitDocType:
Function.l AmigaGuide_InitDocType{baseTypeX.l, docTypeX.l}

  If NOT(Default_InitDocType{baseTypeX, docTypeX}) Then Function Return False
  DocType_SetPattern{docTypeX, "#?.(guide|amigaguide)"}
  AIDE\DocType[docTypeX]\Name          = "AmigaGuide"
  AIDE\DocType[docTypeX]\DefIcon       = "Icons/def_amigaguide.info"
  AIDE\DocType[docTypeX]\TestCmd       = !MULTIVIEW_CMD
  AIDE\DocType[docTypeX]\Prepare       = *AmigaGuide_Prepare
  AIDE\DocType[docTypeX]\StyleCallback = *_ag_StyleCallback
  Function Return True

End Function
!_MakeGlobalFuncPointer{AmigaGuide_InitDocType,{0,0}}


Statement AmigaGuide_Register{baseTypeX.l}

  AmigaGuide\pftg = Null
  AmigaGuide\pftn = Null
  AmigaGuide\pfti = Null
  AmigaGuide\IsInit = False

  AIDE\BaseType[baseTypeX]\Name = "AmigaGuide"
  AIDE\BaseType[baseTypeX]\IsAvailable = True
  AIDE\BaseType[baseTypeX]\InitDocType = *AmigaGuide_InitDocType
  AIDE\BaseType[baseTypeX]\Unregister = *AmigaGuide_Unregister

End Statement

AmigaGuide_Register{#BASETYPE_AMIGAGUIDE}

; ===========================================================
