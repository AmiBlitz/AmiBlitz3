; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Sys:Programme/AIDE"
; ExeFile         = "AIDE"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 503
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 65535
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 408
; CursorColumn    = 57
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 30
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 1
; Max GadgetList  = 1
; Max Queue       = 1
; Max Screen      = 2
; Max Shape       = 1
; Max CopList     = 1
; Max Sprite      = 1
; Max Stencil     = 1
; Max Module      = 1
; Max Window      = 30
; Max Anim        = 1
; Max Sound       = 1
; Max Bank        = 1
; Max Buffer      = 1
; Max BitMap      = 1
; Max Slice       = 1
; Max Page        = 1
; Max Tape        = 1
; Max IntuiFont   = 12
; Max MedModule   = 1
; Max Palette     = 1
; Max MenuList    = 1
; Max BlitzFont   = 1
; Max GTList      = 30
; /XTRA

; ========================= GNU Makefile ====================
#HAS_MAKEFILE = 1

NEWTYPE.DocType_Makefile

  MakeExe.s
  MakeArgs.s
  DocType.l
  IsPrepared.l

End NEWTYPE
SHARED Makefile.DocType_Makefile


Makefile_ReadPrefs:
Statement Makefile_ReadPrefs{*iconP.b}

  icon.s = Peek.s(*iconP)
  Makefile\MakeExe  = dos_GetToolString  {"Makefile_Exe" ,"GG:bin/sh"                ,icon}
  Makefile\MakeArgs = dos_GetToolString  {"Makefile_Args","-c \\22make 2>&1 -f %f\\22",icon}

End Statement
!_MakeGlobalFuncPointer{Makefile_ReadPrefs,{Null}}


Makefile_WritePrefs:
Statement Makefile_WritePrefs{*iconP.b}

  icon.s = Peek.s(*iconP)
  dos_SetToolString   {"Makefile_Exe"        ,Makefile\MakeExe  ,icon}
  dos_SetToolString   {"Makefile_Args"       ,Makefile\MakeArgs ,icon}

End Statement
!_MakeGlobalFuncPointer{Makefile_WritePrefs,{Null}}


Makefile_Make:
Statement Makefile_Make{docX.l,*filenameP.b}

  filename.s = Peek.s(*filenameP)
  exe.s      = Makefile\MakeExe
  args.s     = Replace$(Makefile\MakeArgs,"%f",filename)
  path.s     = dos_PathPart{filename}

  *con.tuiTextBox = (.tuiTextBox)ntui_GetObjectByID{*ntui,!obj_main_console}
  If *con
    pipefile.s = "Pipe:"+Hex$(FindTask_(0))
    txt.s = "\\1B[33m\\1B[1mMakefile >>>\\n"
    ntui_SetAttr{*con,#TUITBA_TEXT,&txt}
    fh.l = Open_(&pipefile,#MODE_NEWFILE)
    If fh=0
      msg.s = "\\1B[33m\\1B[1mUnable to open "+pipefile+"!\\n"
      ntui_SetAttr{*con, #TUITBA_APPENDTEXT,&msg}
    Else
      ntui_SetTextBoxFileListener{*con,&pipefile}
    End If

    msg.s = exe+" "+args+"\\n"
    ntui_SetAttr{*con, #TUITBA_APPENDTEXT,&msg}

    If path Then tmplock.l = Lock_(&path,#ACCESS_READ):Else tmplock=0
    If tmplock
      oldlock.l = CurrentDir_ (tmplock)
    Else
      oldlock=-1
    End If
    AIDE\BuildPath = path
    AIDE\BuildArgs = args
    AIDE\BuildExe  = exe    
    ret.l = dos_RunCli{exe,-1,32768,False,args,-1,fh}
    
    If oldlock><-1 Then CurrentDir_ oldlock
    If tmplock><0  Then UnLock_ tmplock

    If ret><0
      msg.s = "\\1B[33m\\1B[1mFailed with #"+Str$(ret)+"\\n"
      ntui_SetAttr{*con, #TUITBA_APPENDTEXT,&msg}
    End If
  End If

End Statement
!_MakeGlobalFuncPointer{Makefile_Make,{0,Null}}


_Makefile_Prepare:
Function.l _Makefile_Prepare{}

  Makefile\IsPrepared = True
  Function Return True

End Function
!_MakeGlobalFuncPointer{_Makefile_Prepare,{}}


Makefile_Deinit:
Statement Makefile_Deinit{}

  Makefile\IsPrepared = False

End Statement
!_MakeGlobalFuncPointer{Makefile_Deinit,{}}


Makefile_Attach:
Function.l Makefile_Attach{docX.l}

  If Makefile\IsPrepared=False Then _Makefile_Prepare{}
  If Makefile\IsPrepared=False Then Function Return False

  AIDE\Document[docX]\DocType = Makefile\DocType
  ;ntui_SetAttr{AIDE\Document[docX]\TextBox,#TUITBA_STYLECB,*_mk_StyleCallback}

  Function Return True

End Function
!_MakeGlobalFuncPointer{Makefile_Attach,{0}}


Makefile_Init:
Statement Makefile_Init{docType.l}

  AIDE\DocType[docType]\Pattern     = "makefile|#?.mk"
  AIDE\DocType[docType]\Name        = "Makefile"
  AIDE\DocType[docType]\DefIcon     = dos_AddPart{AIDE\GuiPath,"icons/def_makefile.info"}

  AIDE\DocType[docType]\Deinit       = *Makefile_Deinit
  AIDE\DocType[docType]\Attach       = *Makefile_Attach
  AIDE\DocType[docType]\ReadPrefs    = *Makefile_ReadPrefs
  AIDE\DocType[docType]\WritePrefs   = *Makefile_WritePrefs
  AIDE\DocType[docType]\Import       = Null ; default
  AIDE\DocType[docType]\Export       = Null ; default
  AIDE\DocType[docType]\Detach       = Null
  AIDE\DocType[docType]\DebugSource  = Null
  AIDE\DocType[docType]\BuildSource  = *Makefile_Make
  AIDE\DocType[docType]\DebugProject = Null
  AIDE\DocType[docType]\BuildProject = Null

  Makefile\DocType = docType

End Statement

Makefile_Init{#DOCTYPE_MAKEFILE}


; ===========================================================


