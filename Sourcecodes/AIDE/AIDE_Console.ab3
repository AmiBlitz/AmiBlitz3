; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Sys:Programme/AIDE"
; ExeFile         = "AIDE"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 503
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 65535
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 60
; CursorColumn    = 11
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 30
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 1
; Max GadgetList  = 1
; Max Queue       = 1
; Max Screen      = 2
; Max Shape       = 1
; Max CopList     = 1
; Max Sprite      = 1
; Max Stencil     = 1
; Max Module      = 1
; Max Window      = 30
; Max Anim        = 1
; Max Sound       = 1
; Max Bank        = 1
; Max Buffer      = 1
; Max BitMap      = 1
; Max Slice       = 1
; Max Page        = 1
; Max Tape        = 1
; Max IntuiFont   = 12
; Max MedModule   = 1
; Max Palette     = 1
; Max MenuList    = 1
; Max BlitzFont   = 1
; Max GTList      = 30
; /XTRA

; ========================= CONSOLE ====================
#HAS_CONSOLE = 1


Function.l _con_StyleSeekToChar{ptr.l,cpos.l,clen.l,c.b,e.b}

  While cpos<clen
    If Peek.b(ptr+cpos)=c Then Function Return cpos
    cpos+1
  Wend
  Function Return cpos

End Function

Function.l _con_StyleSkipWhiteSpaces{ptr.l,cpos.l,clen.l}

  While cpos<clen
    If (Peek.b(ptr+cpos)&$FF)>32 Then Function Return cpos
    cpos+1
  Wend
  Function Return cpos

End Function

Function.l _con_StyleSkipTokenChars{ptr.l,cpos.l,clen.l}

  While cpos<clen
    c.w = Peek.b(ptr+cpos)&$FF : isToken.w = False
    If (c>=@"a" AND c<=@"z") OR (c>=@"A" AND c<=@"Z") Then isToken=True
    If c=@"$" OR c=@":" OR c=@"(" OR c=@")" Then isToken=True
    If isToken=False Then Function Return cpos
    cpos+1
  Wend
  Function Return clen

End Function

;Clear Screen
;Example: Echo "*E[0;0H*E[J"
;Purpose: Clears the AmigaOS Screen. Uses printer commands To control text formatting in CLI, so *E is equivalent To ESC character.
;The command clear is normally defined using an Alias OR an AmigaDOS script in S: folder.
;Text in Italics
;Example: Echo "*E[3mItalics*E[23m"
;Purpose: *E[3m turns On italics AND *E[23m turns Off italics
;Text in Bold
;Example: Echo "*E[1mBold*E[22m"
;Purpose: *E[1m turns On bold, AND *E[22m turns Off bold.
;Underline Text
;Example: Echo "*E[4mUnderline*E[24m"
;Purpose: *E[4m turns On underline, AND *E24m turns Off underline.
;Coloured Text
;Example: Echo "*E[32mRed Text*E[0m"
;Purpose: *E[nm where n=30-39 For foreground color OR n=40-49 For background Colour.
;*E[0m resets to normal character set.
;

_con_StyleCallback:
Function.l _con_StyleCallback{*textBox.tuiTextBox,lpos.l,*tline.tline}

  If *tline\text
    *tline\sclength = 0
    backslashed.w = False
    cpos.l = 0

    While cpos<*tline\clength
      c.b = Peek.b(*tline\text+cpos) : cpos+1
      Select c
        Case $5C
          backslashed.w = True
        Case 27 ; ESC
          If backslashed = False
            If Peek.b(*tline\text+cpos)=@"[" ; its a shell escape!
              apos.l = cpos-1
              cpos +1
              cmd.l = -1
              c.b = Peek.b(*tline\text+cpos)
              If c>=@"0" AND c<=@"9"
                cmd = c - @"0" : cpos+1 : c.b = Peek.b(*tline\text+cpos)
                If c>=@"0" AND c<=@"9"
                  cmd = cmd*10 + c - @"0" : cpos+1 : c.b = Peek.b(*tline\text+cpos)
                End If
                If c=@"m" Then cpos+1

                _tb_SetStyleCommand{*tline,apos  ,#TUITBSC_SKIP,cpos-apos}
                Select cmd
                  Case 0 ; normal
                    _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_RESET,0}
                  Case 1 ; bold
                    _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_BOLD,1}
                  Case 3 ; italic
                    _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_ITALIC,1}
                  Case 4 ; underlined
                    _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_UNDERLINED,1}
                  Case 21 ; bold
                    _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_BOLD,0}
                  Case 23 ; italic
                    _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_ITALIC,0}
                  Case 24 ; underlined
                    _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_UNDERLINED,0}
                End Select
                If cmd>=30 AND cmd<=39
                  _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_FGPEN,cmd-30}
                End If
                If cmd>=40 AND cmd<=49
                  _tb_SetStyleCommand{*tline,cpos  ,#TUITBSC_BGPEN,cmd-40}
                End If

              End If

            End If

          Else
            backslashed=False
          End If
        Default
          backslashed=False
      End Select
    Wend
    *tline\flags|#TUITBLF_STYLED
  End If
  Function Return #TUISCB_DONE

End Function
!_MakeGlobalFuncPointer{_con_StyleCallback,{Null,0,Null}}


; ===========================================================


