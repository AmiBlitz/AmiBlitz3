; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "/Bin"
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 2
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max ChunkyBuffer= 2
; /XTRA
NEWTYPE.WinUAE
audio_running.l
audio_samplerate.l
audio_buffsize.l
End NEWTYPE

SHARED WinUAE.WinUAE

Function.l WinUAE_StartAudio{}
If \audio_running=False
  ; open the WinUAE audio device
  GetReg d2,\audio_samplerate    ;samplerate
  GetReg d3,\audio_buffsize
  MOVEQ #0,d0
  MOVEQ #0,d1              ;Mode= open sounddevice
  JSR $f0ffc0              ;call the uaelib    (d0 contain samplerate)

  ; install the audio interrupt
  MOVE.l a6,-(a7)
  MOVE.l $4,a6
  LEA uae_intstruct,a1
  MOVE.l a1,uae_lev7_Int
  MOVEQ #13,d0
  JSR -$A8(A6)             ;install the level 6 Interrupt
  MOVE.l (a7)+,a6
  \audio_running=True
End If
End Function


Function.l WinUAE_StopAudio{}
If \audio_running
  ; remove the audio interrupt
  MOVE.l a6,-(a7)
  MOVEQ #13,d0
  MOVE.l $4,a6
  LEA uae_intstruct ,a1
  JSR -174(A6)               ;remove the level 6 Interrupt

  ; close the WinUAE audio device
  MOVEQ #1,d0
  MOVEQ #0,d1
  JSR $f0ffc0           ;call the uaelib to close uae audio
  MOVE.l (a7)+,a6
  \audio_running=False
End If
End Function


.uae_soundfunc
RunErrsOff
!basica7
     MOVEQ #4,d0
     JSR $f0ffc0              ;check if our interrupt
     TST.l d0
     BGT uae_int
!asma7
     MOVEQ #0,d0
     RTS


uae_int:
Call ?playerfunc
MOVE.l #uae_retaddr,-(a7)       ; fake the register saving and return address
MOVEM.l a0-a6/d2-d4,-(a7)
JMP soundfunc_getdata       ; jump into the real soundfunc and skip the AHI_SETSOUND part


uae_retaddr:
MOVE.l out_buffer_ptr1,a0:MOVEQ #2,d0:JSR $f0ffc0 ;write to soundcard



TST.l in_do_rec_winuae
BEQ uae_skiprec

uae_recloop:
   MOVE.l in_buffer_winuae,a0
   MOVE.l in_fsize_winuae,d0

   TST.l in_buffer_winuae
   BEQ uae_skiprec

   MOVEQ #3,d0:JSR $f0ffc0  ;read a block
   rest.l=PutRegD0              ;number of remaining blocks -1=none

   recstruct.l = ?uae_recstruct
   MOVE.l recstruct@(a5),a1
   MOVE.l #3,uae_sampletype
   MOVE.l in_buffer_winuae,uae_recaddr
   MOVE.l in_fsize_winuae,uae_recsize

   Call ?recfunc
   If rest > 1 Goto uae_recloop      ;this sync to output but dont work on some cards

uae_skiprec:
   !asma7
MOVEQ #0,d0
RTS


LastRunErrsMode
Even

uae_recstruct:
uae_sampletype: Dc.l 3
uae_recaddr:    Dc.l 0
uae_recsize:    Dc.l 0


uae_lev7_Int: Dc.l 0

uae_intstruct: Dc.l 0,0
          Dc.b 2,0
          Dc.l 0,0,uae_soundfunc,0




