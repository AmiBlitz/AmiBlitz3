; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "ram:"
; ExeFile         = "test"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 4096
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 172
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 30
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 1
; Max GadgetList  = 1
; Max Queue       = 1
; Max Screen      = 2
; Max Shape       = 1
; Max CopList     = 1
; Max Sprite      = 1
; Max Stencil     = 1
; Max Module      = 1
; Max Window      = 30
; Max Anim        = 1
; Max Sound       = 1
; Max Bank        = 1
; Max Buffer      = 1
; Max BitMap      = 1
; Max Slice       = 1
; Max Page        = 1
; Max Tape        = 1
; Max IntuiFont   = 12
; Max MedModule   = 1
; Max Palette     = 1
; Max MenuList    = 1
; Max BlitzFont   = 1
; Max GTList      = 30
; /XTRA
CNIF #__include=0
 OPTIMIZE 7
 SYNTAX 6
 WBStartup
CEND

XINCLUDE "error.include.ab3"

; Library offsets:
#AB3ZLIB_VERSION = 1
#AB3ZLIB_REVISION = 0
#_LVO_MOD = -6
#_LVO_BIAS = -30

#_LVO_AB3ZLIBBASE_zlib_zlibVersion     = #_LVO_BIAS + (#_LVO_MOD *  0)
#_LVO_AB3ZLIBBASE_zlib_deflateInit     = #_LVO_BIAS + (#_LVO_MOD *  1)
#_LVO_AB3ZLIBBASE_zlib_deflate         = #_LVO_BIAS + (#_LVO_MOD *  2)
#_LVO_AB3ZLIBBASE_zlib_deflateEnd      = #_LVO_BIAS + (#_LVO_MOD *  3)
#_LVO_AB3ZLIBBASE_zlib_inflateInit     = #_LVO_BIAS + (#_LVO_MOD *  4)
#_LVO_AB3ZLIBBASE_zlib_inflate         = #_LVO_BIAS + (#_LVO_MOD *  5)
#_LVO_AB3ZLIBBASE_zlib_inflateEnd      = #_LVO_BIAS + (#_LVO_MOD *  6)
#_LVO_AB3ZLIBBASE_zlib_compress        = #_LVO_BIAS + (#_LVO_MOD *  7)
#_LVO_AB3ZLIBBASE_zlib_compress2       = #_LVO_BIAS + (#_LVO_MOD *  8)
#_LVO_AB3ZLIBBASE_zlib_compressBound   = #_LVO_BIAS + (#_LVO_MOD *  9)
#_LVO_AB3ZLIBBASE_zlib_uncompress      = #_LVO_BIAS + (#_LVO_MOD * 10)
#_LVO_AB3ZLIBBASE_zlib_gzopen          = #_LVO_BIAS + (#_LVO_MOD * 11)
#_LVO_AB3ZLIBBASE_zlib_gzdopen         = #_LVO_BIAS + (#_LVO_MOD * 12)
#_LVO_AB3ZLIBBASE_zlib_gzbuffer        = #_LVO_BIAS + (#_LVO_MOD * 13)
#_LVO_AB3ZLIBBASE_zlib_gzsetparams     = #_LVO_BIAS + (#_LVO_MOD * 14)
#_LVO_AB3ZLIBBASE_zlib_gzread          = #_LVO_BIAS + (#_LVO_MOD * 15)
#_LVO_AB3ZLIBBASE_zlib_gzwrite         = #_LVO_BIAS + (#_LVO_MOD * 16)
#_LVO_AB3ZLIBBASE_zlib_gzputs          = #_LVO_BIAS + (#_LVO_MOD * 17)
#_LVO_AB3ZLIBBASE_zlib_gzgets          = #_LVO_BIAS + (#_LVO_MOD * 18)
#_LVO_AB3ZLIBBASE_zlib_gzputc          = #_LVO_BIAS + (#_LVO_MOD * 19)
#_LVO_AB3ZLIBBASE_zlib_gzgetc          = #_LVO_BIAS + (#_LVO_MOD * 20)
#_LVO_AB3ZLIBBASE_zlib_gzungetc        = #_LVO_BIAS + (#_LVO_MOD * 21)
#_LVO_AB3ZLIBBASE_zlib_gzflush         = #_LVO_BIAS + (#_LVO_MOD * 22)
#_LVO_AB3ZLIBBASE_zlib_gzseek          = #_LVO_BIAS + (#_LVO_MOD * 23)
#_LVO_AB3ZLIBBASE_zlib_gzrewind        = #_LVO_BIAS + (#_LVO_MOD * 24)
#_LVO_AB3ZLIBBASE_zlib_gztell          = #_LVO_BIAS + (#_LVO_MOD * 25)
#_LVO_AB3ZLIBBASE_zlib_gzoffset        = #_LVO_BIAS + (#_LVO_MOD * 26)
#_LVO_AB3ZLIBBASE_zlib_gzeof           = #_LVO_BIAS + (#_LVO_MOD * 27)
#_LVO_AB3ZLIBBASE_zlib_gzdirect        = #_LVO_BIAS + (#_LVO_MOD * 28)
#_LVO_AB3ZLIBBASE_zlib_gzclose         = #_LVO_BIAS + (#_LVO_MOD * 29)
#_LVO_AB3ZLIBBASE_zlib_gzclose_r       = #_LVO_BIAS + (#_LVO_MOD * 30)
#_LVO_AB3ZLIBBASE_zlib_gzclose_w       = #_LVO_BIAS + (#_LVO_MOD * 31)
#_LVO_AB3ZLIBBASE_zlib_gzerror         = #_LVO_BIAS + (#_LVO_MOD * 32)
#_LVO_AB3ZLIBBASE_zlib_gzclearerr      = #_LVO_BIAS + (#_LVO_MOD * 33)
#_LVO_AB3ZLIBBASE_zlib_adler32         = #_LVO_BIAS + (#_LVO_MOD * 34)
#_LVO_AB3ZLIBBASE_zlib_adler32_combine = #_LVO_BIAS + (#_LVO_MOD * 35)
#_LVO_AB3ZLIBBASE_zlib_crc32           = #_LVO_BIAS + (#_LVO_MOD * 36)
#_LVO_AB3ZLIBBASE_zlib_crc32_combine   = #_LVO_BIAS + (#_LVO_MOD * 37)
#_LVO_AB3ZLIBBASE_zlib_zError          = #_LVO_BIAS + (#_LVO_MOD * 38)
#_LVO_AB3ZLIBBASE_zlib_reserved        = #_LVO_BIAS + (#_LVO_MOD * 39)

; ZLib Constants

#Z_NO_FLUSH      = 0
#Z_PARTIAL_FLUSH = 1
#Z_SYNC_FLUSH    = 2
#Z_FULL_FLUSH    = 3
#Z_FINISH        = 4
#Z_BLOCK         = 5
#Z_TREES         = 6
; Allowed flush values; see deflate() and inflate() below for details

#Z_OK            = 0
#Z_STREAM_END    = 1
#Z_NEED_DICT     = 2
#Z_ERRNO         = (-1)
#Z_STREAM_ERROR  = (-2)
#Z_DATA_ERROR    = (-3)
#Z_MEM_ERROR     = (-4)
#Z_BUF_ERROR     = (-5)
#Z_VERSION_ERROR = (-6)
; Return codes for the compression/decompression functions. Negative values
; are errors, positive values are used for special but normal events.

#Z_NO_COMPRESSION         = 0
#Z_BEST_SPEED             = 1
#Z_BEST_COMPRESSION       = 9
#Z_DEFAULT_COMPRESSION    = (-1)
; compression levels

#Z_FILTERED            = 1
#Z_HUFFMAN_ONLY        = 2
#Z_RLE                 = 3
#Z_FIXED               = 4
#Z_DEFAULT_STRATEGY    = 0
; compression strategy; see deflateInit2() below for details

#Z_BINARY   = 0
#Z_TEXT     = 1
#Z_ASCII    = #Z_TEXT ; for compatibility with 1.2.2 and earlier
#Z_UNKNOWN  = 2
; Possible values of the data_type field (though see inflate())

#Z_DEFLATED   = 8
; The deflate compression method (the only one supported in this version)

#Z_NULL  = 0 ; For initializing zalloc, zfree, opaque */

SHARED *_AB3ZLibBase.Library
SHARED __AB3ZLibName.s
*_AB3ZLibBase = Null
__AB3ZLibName = "ab3zlib.library"
__AB3ZLibBase.l = 0

; Helper Macros:
Macro __AB3ZLib_SaveRegs
MOVE.l a4,-(a7) : MOVE.l a5,-(a7) : MOVE.l a6,-(a7) : MOVE.l d7,-(a7)
End Macro

Macro __AB3ZLib_RestoreRegs
MOVE.l (a7)+,d7 : MOVE.l (a7)+,a6 : MOVE.l (a7)+,a5 : MOVE.l (a7)+,a4
End Macro

Macro __AB3ZLib_CallDirect
  !__AB3ZLib_SaveRegs
  MOVE.l __AB3ZLibBase@(A5),A6
  JSR _LVO_AB3ZLIBBASE_`1(A6)
  !__AB3ZLib_RestoreRegs
  AsmExit
End Macro

; Open/Close Library:
Function.l InitAB3ZLib{}
  SHARED __AB3ZLibBase

  If (*_AB3ZLibBase >< Null)
    If (#AB3ZLIB_VERSION <= *_AB3ZLibBase\lib_Version) Then Function Return True
    CloseLibrary_ *_AB3ZLibBase
    *_AB3ZLibBase = Null
  End If

  *_AB3ZLibBase = OpenLibrary_ (&__AB3ZLibName, #AB3ZLIB_VERSION)
  __AB3ZLibBase = *_AB3ZLibBase
  Function Return *_AB3ZLibBase >< Null

End Function

Macro InitAB3ZLib
If InitAB3ZLib{} = False
  __LibVersion.s = __AB3ZLibName + " V"+Str$(#AB3ZLIB_VERSION) + "." + Str$(#AB3ZLIB_REVISION)
  error{"\\__THIS_INCLUDE: Please install " +__LibVersion + " or higher!"}
  End
End If
End Macro

RunErrsOff
Statement DeinitAB3ZLib{}
  SHARED __AB3ZLibBase

  If *_AB3ZLibBase
    CloseLibrary_ *_AB3ZLibBase
    *_AB3ZLibBase = Null
    __AB3ZLibBase = 0
  End If

End Statement
!autoexit{DeinitAB3ZLib}
LastRunErrsMode

; zlib High Level API
RunErrsOff
Function.l FAST zlib_Compress{*dest.l,*destLen.l,*source.l, sourceLen.l, level.l} : !__AB3ZLib_CallDirect{zlib_compress2} : End Function
Function.l FAST zlib_Uncompress{*dest.l,*destLen.l,*source.l, sourceLen.l} : !__AB3ZLib_CallDirect{zlib_uncompress} : End Function
Function.l FAST zlib_CompressBound{sourceLen.l} : !__AB3ZLib_CallDirect{zlib_compressBound} : End Function
LastRunErrsMode

!InitAB3ZLib


CNIF #__include=0
NPrint __AB3ZLibName, " is open! base = ", Hex$(__AB3ZLibBase)

string.s = "this is a test"
stringSize.l = FLen(string) + 1 ; length plus 0 byte
bufferSize.l = zlib_CompressBound{stringSize} ; max size of the compressed buffer
Dim compressed.b(bufferSize)
Dim uncompressed.b(stringSize)

NPrint "Compress the string \\22", string, "\\22 of length ", stringSize, " bytes..."
compressedSize.l = bufferSize
status.l = zlib_Compress{&compressed(0), &compressedSize, &string, stringSize, 9}
If status >< #Z_OK
  NPrint "  ... zlib error: ", status
  End
End If
NPrint "  ... to ", compressedSize, " bytes"
NPrint "Uncompress the buffer..."
uncompressedSize.l = stringSize
status.l = zlib_Uncompress{&uncompressed(0), &uncompressedSize, &compressed(0), compressedSize}
If status >< #Z_OK
  NPrint "  ... zlib error: ", status
  End
End If
NPrint "  ... back to ", uncompressedSize, " bytes = \\22", Peek.s(&uncompressed(0)), "\\22"
End
CEND
