; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "/Bin"
; ExeFile         = "CInternalDemo"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 3
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 19
; LabelSearch     = ""
; LabelRemark     = 60
; LabelAll        = 5
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max ChunkyBuffer= 2
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: c_internal                                                            /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 19/01/2007                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ C/C++ files may have the extensions:                                        /
;/                                                                             /
;/ .c                                                                          /
;/ .cpp                                                                        /
;/ .h                                                                          /
;/ .hpp                                                                        /
;/                                                                             /
;/ C/C++ Keywords: (1 color)                                                   /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
;C/C++ files may have the extensions:
;
; .c
; .cpp
; .h
; .hpp
;
;
;C/C++ Keywords: (1 color)
;-----------------
CNIF #__include=0
SYNTAX 2
OPTIMIZE 7
XINCLUDE "error.include.ab3"
error {"This include has no internal demo!"}
End
CELSE
 

CNIF @#c_nocasesense = 0
  #c_nocasesense = 0
CEND
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ted_AddC {}                                                         /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement ted_AddC {}
SHARED te_c
If te_c\is_init Then Statement Return
ted_addtoken_c {"auto"      ,0, 0,"",#c_nocasesense}
ted_addtoken_c {"bool"      ,0, 1,"",#c_nocasesense}
ted_addtoken_c {"break"     ,0, 2,"",#c_nocasesense}
ted_addtoken_c {"case"      ,0, 3,"",#c_nocasesense}
ted_addtoken_c {"catch"     ,0, 4,"",#c_nocasesense}
ted_addtoken_c {"char"      ,0, 5,"",#c_nocasesense}
ted_addtoken_c {"cerr"      ,0, 6,"",#c_nocasesense}
ted_addtoken_c {"cin"       ,0, 7,"",#c_nocasesense}
ted_addtoken_c {"class"     ,0, 8,"",#c_nocasesense}
ted_addtoken_c {"const"     ,0, 9,"",#c_nocasesense}
ted_addtoken_c {"continue"  ,0,10,"",#c_nocasesense}
ted_addtoken_c {"cout"      ,0,11,"",#c_nocasesense}
ted_addtoken_c {"default"   ,0,12,"",#c_nocasesense}
ted_addtoken_c {"delete"    ,0,13,"",#c_nocasesense}
ted_addtoken_c {"do"        ,0,14,"",#c_nocasesense}
ted_addtoken_c {"double"    ,0,15,"",#c_nocasesense}
ted_addtoken_c {"else"      ,0,16,"",#c_nocasesense}
ted_addtoken_c {"enum"      ,0,17,"",#c_nocasesense}
ted_addtoken_c {"explicit"  ,0,18,"",#c_nocasesense}
ted_addtoken_c {"extern"    ,0,19,"",#c_nocasesense}
ted_addtoken_c {"float"     ,0,20,"",#c_nocasesense}
ted_addtoken_c {"for"       ,0,21,"",#c_nocasesense}
ted_addtoken_c {"friend"    ,0,22,"",#c_nocasesense}
ted_addtoken_c {"goto"      ,0,23,"",#c_nocasesense}
ted_addtoken_c {"if"        ,0,24,"",#c_nocasesense}
ted_addtoken_c {"inline"    ,0,25,"",#c_nocasesense}
ted_addtoken_c {"int"       ,0,26,"",#c_nocasesense}
ted_addtoken_c {"long"      ,0,27,"",#c_nocasesense}
ted_addtoken_c {"namespace" ,0,28,"",#c_nocasesense}
ted_addtoken_c {"new"       ,0,29,"",#c_nocasesense}
ted_addtoken_c {"operator"  ,0,30,"",#c_nocasesense}
ted_addtoken_c {"private"   ,0,31,"",#c_nocasesense}
ted_addtoken_c {"protected" ,0,32,"",#c_nocasesense}
ted_addtoken_c {"public"    ,0,33,"",#c_nocasesense}
ted_addtoken_c {"register"  ,0,34,"",#c_nocasesense}
ted_addtoken_c {"return"    ,0,35,"",#c_nocasesense}
ted_addtoken_c {"short"     ,0,36,"",#c_nocasesense}
ted_addtoken_c {"signed"    ,0,37,"",#c_nocasesense}
ted_addtoken_c {"sizeof"    ,0,38,"",#c_nocasesense}
ted_addtoken_c {"static"    ,0,39,"",#c_nocasesense}
ted_addtoken_c {"struct"    ,0,40,"",#c_nocasesense}
ted_addtoken_c {"switch"    ,0,41,"",#c_nocasesense}
ted_addtoken_c {"template"  ,0,42,"",#c_nocasesense}
ted_addtoken_c {"this"      ,0,43,"",#c_nocasesense}
ted_addtoken_c {"throw"     ,0,44,"",#c_nocasesense}
ted_addtoken_c {"try"       ,0,45,"",#c_nocasesense}
ted_addtoken_c {"typedef"   ,0,46,"",#c_nocasesense}
ted_addtoken_c {"uint"      ,0,47,"",#c_nocasesense}
ted_addtoken_c {"ulong"     ,0,48,"",#c_nocasesense}
ted_addtoken_c {"union"     ,0,49,"",#c_nocasesense}
ted_addtoken_c {"unsigned"  ,0,50,"",#c_nocasesense}
ted_addtoken_c {"uword"     ,0,51,"",#c_nocasesense}
ted_addtoken_c {"virtual"   ,0,52,"",#c_nocasesense}
ted_addtoken_c {"void"      ,0,53,"",#c_nocasesense}
ted_addtoken_c {"volatile"  ,0,54,"",#c_nocasesense}
ted_addtoken_c {"while"     ,0,55,"",#c_nocasesense}
ted_addtoken_c {"using"     ,0,56,"",#c_nocasesense}
ted_addtoken_c {"__asm"     ,0,57,"",#c_nocasesense}
ted_addtoken_c {"__fastcall",0,58,"",#c_nocasesense}
ted_addtoken_c {"__based"   ,0,59,"",#c_nocasesense}
ted_addtoken_c {"__cdecl"   ,0,60,"",#c_nocasesense}
ted_addtoken_c {"__pascal"  ,0,61,"",#c_nocasesense}
ted_addtoken_c {"__inline"  ,0,62,"",#c_nocasesense}
ted_addtoken_c {"__multiple_inheritance",0,63,"",#c_nocasesense}
ted_addtoken_c {"__single_inheritance"  ,0,64,"",#c_nocasesense}
ted_addtoken_c {"__virtual_inheritance" ,0,65,"",#c_nocasesense}



;C Comments: (1 another color)
;------------------------


;    Line
;    Comment


;C strings: (1 another color)
;---------------------

;"....."


;Compiler directives (another color)
;---------------------------

ted_addtoken_c {"#define"  ,1, 0,"",#c_nocasesense}
ted_addtoken_c {"#error"   ,1, 1,"",#c_nocasesense}
ted_addtoken_c {"#include" ,1, 2,"",#c_nocasesense}
ted_addtoken_c {"#elif"    ,1, 3,"",#c_nocasesense}
ted_addtoken_c {"#if"      ,1, 4,"",#c_nocasesense}
ted_addtoken_c {"#line"    ,1, 5,"",#c_nocasesense}
ted_addtoken_c {"#else"    ,1, 6,"",#c_nocasesense}
ted_addtoken_c {"#ifdef"   ,1, 7,"",#c_nocasesense}
ted_addtoken_c {"#pragma"  ,1, 8,"",#c_nocasesense}
ted_addtoken_c {"#endif"   ,1, 9,"",#c_nocasesense}
ted_addtoken_c {"#ifndef"  ,1,10,"",#c_nocasesense}
ted_addtoken_c {"#undef"   ,1,11,"",#c_nocasesense}
ted_addtoken_c {"#if"      ,1,12,"",#c_nocasesense}
ted_addtoken_c {"#else"    ,1,13,"",#c_nocasesense}
ted_addtoken_c {"#endif"   ,1,14,"",#c_nocasesense}
te_c\is_init = True
te_c\libname[0] = "Keywords"
te_c\libname[1] = "Directives"
End Statement

CEND
