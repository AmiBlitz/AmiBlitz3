; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "/Bin"
; ExeFile         = "Win32Demo"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 5
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 1
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 9
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max ChunkyBuffer= 2
; /XTRA
Object Win32_CloseDLL;{alib or dll pointer}
If `1
     GetReg d1,`1:MOVEQ #103,d0:JSR $f0ffc0
End If
End Object

Object Win32_Call ;{alib or dll pointer,par1[,...,par8}
GetRegD0 `1:
MOVE.l d0,a0
CNIF `0 > 1
PushD0 `2
MOVE.l d0,d1
CEND
CNIF `0 > 2
GetRegD0 `3
MOVE.l d0,d2
CEND
CNIF `0 > 3
GetRegD0 `4
MOVE.l d0,d3
CEND
CNIF `0 > 4
GetRegD0 `5
MOVE.l d0,d4
CEND
CNIF `0 > 5
GetRegD0 `6
MOVE.l d0,d5
CEND
CNIF `0 > 6
GetRegD0 `7
MOVE.l d0,d6
CEND
CNIF `0 > 7
GetRegD0 `8
MOVE.l d0,d7
CEND
MOVEQ #102,d0
JSR $f0ffc0
End Object

Object Win32_GetFunction ;{dll or alibbase,function or varname}
GetReg a0,`2:MOVEQ #101,d0:GetReg d1,`1:JSR $f0ffc0
`3=PutRegD0
End Object

Object Win32_OpenDLL ;{return var for dll or alibbase,alibname}
MOVEQ #0,d0
TST.l $f0ffc0
BEQ nowinuae
MOVEQ #100,d0
GetReg a0,`2
JSR $f0ffc0
`1=PutRegD0
nowinuae
End Object


Function.l win32_OpenDLL{dllname.s}
!Win32_OpenDLL{*dll,&dllname}
Function Return *dll
End Function


Function.l win32_GetAddr{*dll,name.s}
If *dll
   !Win32_GetFunction{*dll,&name,*dlladdr}
End If
Function Return *dlladdr
End Function


Function.l win32_Call{*dlladdr,@param1.l,@param2.l,@param3.l,@param4.l}
!Win32_Call{*dlladdr,param1,param2,param3,param4}
ret.l = PutRegD0
Function Return ret
End Function


Statement win32_CloseDLL{*dll}
If *dll
  !Win32_CloseDLL{*dll}
End If
End Statement

CNIF #__include=0
*myDLL = win32_OpenDLL{"my.dll"}
If *myDLL
  NPrint "DLL open!"
  win32_CloseDLL{*myDLL}
Else
  NPrint "Unable to open DLL!"
End If

CEND
