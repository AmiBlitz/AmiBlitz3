; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 80000
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 9
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max ChunkyBuffer= 2
; /XTRA
; aglu.include.bb2 automatically generated by FD2Include (Thilo Koehler)

CNIF #__include=0
OPTIMIZE 7
SYNTAX 2
WBStartup
CEND

XINCLUDE "error.include.ab3"

; Library offsets:
#_LVO_GLUBASE_registerGLU             = -30
#_LVO_GLUBASE_gluLookAt               = -36
#_LVO_GLUBASE_gluOrtho2D              = -42
#_LVO_GLUBASE_gluPerspective          = -48
#_LVO_GLUBASE_gluPickMatrix           = -54
#_LVO_GLUBASE_gluProject              = -60
#_LVO_GLUBASE_gluUnProject            = -66
#_LVO_GLUBASE_gluErrorString          = -72
#_LVO_GLUBASE_gluScaleImage           = -78
#_LVO_GLUBASE_gluBuild1DMipmaps       = -84
#_LVO_GLUBASE_gluBuild2DMipmaps       = -90
#_LVO_GLUBASE_gluNewQuadric           = -96
#_LVO_GLUBASE_gluDeleteQuadric        = -102
#_LVO_GLUBASE_gluQuadricDrawStyle     = -108
#_LVO_GLUBASE_gluQuadricOrientation   = -114
#_LVO_GLUBASE_gluQuadricNormals       = -120
#_LVO_GLUBASE_gluQuadricTexture       = -126
#_LVO_GLUBASE_gluQuadricCallback      = -132
#_LVO_GLUBASE_gluCylinder             = -138
#_LVO_GLUBASE_gluSphere               = -144
#_LVO_GLUBASE_gluDisk                 = -150
#_LVO_GLUBASE_gluPartialDisk          = -156
#_LVO_GLUBASE_gluNewNurbsRenderer     = -162
#_LVO_GLUBASE_gluDeleteNurbsRenderer  = -168
#_LVO_GLUBASE_gluLoadSamplingMatrices = -174
#_LVO_GLUBASE_gluNurbsProperty        = -180
#_LVO_GLUBASE_gluGetNurbsProperty     = -186
#_LVO_GLUBASE_gluBeginCurve           = -192
#_LVO_GLUBASE_gluEndCurve             = -198
#_LVO_GLUBASE_gluNurbsCurve           = -204
#_LVO_GLUBASE_gluBeginSurface         = -210
#_LVO_GLUBASE_gluEndSurface           = -216
#_LVO_GLUBASE_gluNurbsSurface         = -222
#_LVO_GLUBASE_gluBeginTrim            = -228
#_LVO_GLUBASE_gluEndTrim              = -234
#_LVO_GLUBASE_gluPwlCurve             = -240
#_LVO_GLUBASE_gluNurbsCallback        = -246
#_LVO_GLUBASE_gluNewTess              = -252
#_LVO_GLUBASE_gluTessCallback         = -258
#_LVO_GLUBASE_gluDeleteTess           = -264
#_LVO_GLUBASE_gluBeginPolygon         = -270
#_LVO_GLUBASE_gluEndPolygon           = -276
#_LVO_GLUBASE_gluNextContour          = -282
#_LVO_GLUBASE_gluTessVertex           = -288
#_LVO_GLUBASE_gluGetString            = -294

SHARED *_gluBase.Library

; Helper Macros:
Macro __gluBase_SaveRegs
MOVE.l a4,-(a7) : MOVE.l a5,-(a7) : MOVE.l a6,-(a7) : MOVE.l d7,-(a7)
End Macro

Macro __gluBase_RestoreRegs
MOVE.l (a7)+,d7 : MOVE.l (a7)+,a6 : MOVE.l (a7)+,a5 : MOVE.l (a7)+,a4
End Macro


; Wrapper Macros:
Macro aglu_registerGLU;{ret.l,ptr}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_registerGLU(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluLookAt;{ret.l,GLdouble_eyex,GLdouble_eyey,GLdouble_eyez,GLdouble_centerx,GLdouble_centery,GLdouble_centerz,GLdouble_upx,GLdouble_upy,GLdouble_upz}
!__gluBase_SaveRegs
GetReg fp0,`2
GetReg fp1,`3
GetReg fp2,`4
GetReg fp3,`5
GetReg fp4,`6
GetReg fp5,`7
GetReg fp6,`8
GetReg fp7,`9
GetReg d0,`10
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluLookAt(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluOrtho2D;{ret.l,GLdouble_left,GLdouble_right,GLdouble_bottom,GLdouble_top}
!__gluBase_SaveRegs
GetReg fp0,`2
GetReg fp1,`3
GetReg fp2,`4
GetReg fp3,`5
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluOrtho2D(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluPerspective;{ret.l,GLdouble_fovy,GLdouble_aspect,GLdouble_zNear,GLdouble_zFar}
!__gluBase_SaveRegs
GetReg fp0,`2
GetReg fp1,`3
GetReg fp2,`4
GetReg fp3,`5
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluPerspective(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluPickMatrix;{ret.l,GLdouble_x,GLdouble_y,GLdouble_width,GLdouble_height,GLint_viewport}
!__gluBase_SaveRegs
GetReg fp0,`2
GetReg fp1,`3
GetReg fp2,`4
GetReg fp3,`5
GetReg a0,`6
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluPickMatrix(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluProject;{ret.l,GLdouble_objx,GLdouble_objy,GLdouble_objz,GLdouble_modelMatrix,GLdouble_projMatrix,GLint_viewport,GLdouble_winx,GLdouble_winy,GLdouble_winz}
!__gluBase_SaveRegs
GetReg fp0,`2
GetReg fp1,`3
GetReg fp2,`4
GetReg a0,`5
GetReg a1,`6
GetReg a2,`7
GetReg a3,`8
GetReg d0,`9
GetReg d1,`10
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluProject(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluUnProject;{ret.l,GLdouble_winx,GLdouble_winy,GLdouble_winz,GLdouble_modelMatrix,GLdouble_projMatrix,GLint_viewport,GLdouble_objx,GLdouble_objy,GLdouble_objz}
!__gluBase_SaveRegs
GetReg fp0,`2
GetReg fp1,`3
GetReg fp2,`4
GetReg a0,`5
GetReg a1,`6
GetReg a2,`7
GetReg a3,`8
GetReg d0,`9
GetReg d1,`10
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluUnProject(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluErrorString;{ret.l,GLenum_errorCode}
!__gluBase_SaveRegs
GetReg d0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluErrorString(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluScaleImage;{ret.l,GLenum_format,GLint_widthin,GLint_heightin,GLenum_typein,void_datain,GLint_widthout,GLint_heightout,GLenum_typeout,void_dataout}
!__gluBase_SaveRegs
GetReg d0,`2
GetReg d1,`3
GetReg d2,`4
GetReg d3,`5
GetReg a0,`6
GetReg d4,`7
GetReg d5,`8
GetReg d6,`9
GetReg a1,`10
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluScaleImage(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluBuild1DMipmaps;{ret.l,GLenum_target,GLint_components,GLint_width,GLenum_format,GLenum_type,void_data}
!__gluBase_SaveRegs
GetReg d0,`2
GetReg d1,`3
GetReg d2,`4
GetReg d3,`5
GetReg d4,`6
GetReg a0,`7
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluBuild1DMipmaps(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluBuild2DMipmaps;{ret.l,GLenum_target,GLint_components,GLint_width,GLint_height,GLenum_format,GLenum_type,void_data}
!__gluBase_SaveRegs
GetReg d0,`2
GetReg d1,`3
GetReg d2,`4
GetReg d3,`5
GetReg d4,`6
GetReg d5,`7
GetReg a0,`8
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluBuild2DMipmaps(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluNewQuadric;{ret.l}
!__gluBase_SaveRegs
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluNewQuadric(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluDeleteQuadric;{ret.l,GLUquadricObj_state}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluDeleteQuadric(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluQuadricDrawStyle;{ret.l,GLUquadricObj_quadObject,GLenum_drawStyle}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluQuadricDrawStyle(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluQuadricOrientation;{ret.l,GLUquadricObj_quadObject,GLenum_orientation}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluQuadricOrientation(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluQuadricNormals;{ret.l,GLUquadricObj_quadObject,GLenum_normals}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluQuadricNormals(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluQuadricTexture;{ret.l,GLUquadricObj_quadObject,GLboolean_textureCoords}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluQuadricTexture(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluQuadricCallback;{ret.l,GLUquadricObj_qobj,GLenum_which,void_fn}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluQuadricCallback(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluCylinder;{ret.l,GLUquadricObj_qobj,GLdouble_baseRadius,GLdouble_topRadius,GLdouble_height,GLint_slices,GLint_stacks}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg fp0,`3
GetReg fp1,`4
GetReg fp2,`5
GetReg d0,`6
GetReg d1,`7
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluCylinder(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluSphere;{ret.l,GLUquadricObj_obj,GLdouble_radius,GLint_slices,GLint_stacks}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg fp0,`3
GetReg d0,`4
GetReg d1,`5
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluSphere(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluDisk;{ret.l,GLUquadricObj_qobj,GLdouble_InnerRadius,GLdouble_outerRadius,GLint_slices,GLint_loops}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg fp0,`3
GetReg fp1,`4
GetReg d0,`5
GetReg d1,`6
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluDisk(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluPartialDisk;{ret.l,GLUquadricObj_qobj,GLdouble_innerRadius,GLdouble_outerRadius,GLint_slices,GLint_loops,GLdouble_startAngle,GLdouble_sweepAngle}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg fp0,`3
GetReg fp1,`4
GetReg d0,`5
GetReg d1,`6
GetReg fp2,`7
GetReg fp3,`8
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluPartialDisk(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluNewNurbsRenderer;{ret.l}
!__gluBase_SaveRegs
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluNewNurbsRenderer(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluDeleteNurbsRenderer;{ret.l,GLUnurbsObj_nobj}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluDeleteNurbsRenderer(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluLoadSamplingMatrices;{ret.l,GLUnurbsObj_nobj,GLfloat_modelMatrix,GLfloat_projMatrix,GLint_viewport}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a1,`3
GetReg a2,`4
GetReg a3,`5
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluLoadSamplingMatrices(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluNurbsProperty;{ret.l,GLUnurbsObj_nobj,GLenum_property,GLfloat_value}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg fp0,`4
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluNurbsProperty(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluGetNurbsProperty;{ret.l,GLUnurbsObj_nobj,GLenum_property,GLfloat_value}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluGetNurbsProperty(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluBeginCurve;{ret.l,GLUnurbsObj_nobj}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluBeginCurve(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluEndCurve;{ret.l,GLUnurbsObj_nobj}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluEndCurve(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluNurbsCurve;{ret.l,GLUnurbsObj_nobj,GLint_nknots,GLfloat_knot,GLint_stride,GLfloat_ctlarray,GLint_order,GLenum_type}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg d1,`5
GetReg a2,`6
GetReg d2,`7
GetReg d3,`8
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluNurbsCurve(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluBeginSurface;{ret.l,GLUnurbsObj_nobj}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluBeginSurface(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluEndSurface;{ret.l,GLUnurbsObj_nobj}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluEndSurface(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluNurbsSurface;{ret.l,GLUnurbsObj_nobj,GLint_sknot_count,GLfloat_sknot,GLint_tknot_count,GLfloat_tknot,GLint_s_stride,GLint_t_stride,GLfloat_ctlarray,GLint_sorder,GLint_torder,GLenum_type}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg d1,`5
GetReg a2,`6
GetReg d2,`7
GetReg d3,`8
GetReg a3,`9
GetReg d4,`10
GetReg d5,`11
GetReg d6,`12
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluNurbsSurface(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluBeginTrim;{ret.l,GLUnurbsObj_nobj}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluBeginTrim(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluEndTrim;{ret.l,GLUnurbsObj_nobj}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluEndTrim(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluPwlCurve;{ret.l,GLUnurbsObj_nobj,GLint_count,GLfloat_array,GLint_stride,GLenum_type}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg d1,`5
GetReg d2,`6
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluPwlCurve(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluNurbsCallback;{ret.l,GLUnurbsObj_nobj,GLenum_which,void_fn}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluNurbsCallback(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluNewTess;{ret.l}
!__gluBase_SaveRegs
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluNewTess(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluTessCallback;{ret.l,GLUtriangulatorObj_tobj,GLenum_which,void_fn}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluTessCallback(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluDeleteTess;{ret.l,GLUtriangulatorObj_tobj}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluDeleteTess(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluBeginPolygon;{ret.l,GLUtriangulatorObj_tobj}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluBeginPolygon(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluEndPolygon;{ret.l,GLUtriangulatorObj_tobj}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluEndPolygon(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluNextContour;{ret.l,GLUtriangulatorObj_tobj,GLenum_type}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluNextContour(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluTessVertex;{ret.l,GLUtriangulatorObj_tobj,GLdouble_v,void_data}
!__gluBase_SaveRegs
GetReg a0,`2
GetReg a1,`3
GetReg a2,`4
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluTessVertex(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro

Macro aglu_gluGetString;{ret.l,GLenum_name}
!__gluBase_SaveRegs
GetReg d0,`2
GetReg a6,*_gluBase
JSR _LVO_GLUBASE_gluGetString(a6)
!__gluBase_RestoreRegs
`1 = PutRegD0
End Macro


; Open/Close Library:
Function.l aglu_OpenLib{@minVersion.l}
If (*_gluBase)
  If (minVersion<=*_gluBase\lib_Version) Then Function Return *_gluBase
  CloseLibrary_ *_gluBase : *_gluBase = 0
End If
If minVersion<0 Then minVersion = 0
*_gluBase = OpenLibrary_ ("aglu.library",minVersion)
If *_gluBase
  ; (!) Do some other init stuff here...
Else
  If (minVersion>0)
    error{"Unable to open aglu.library (v"+Str$(minVersion)+"+)!"}
  Else
    error{"Unable to open aglu.library!"}
  End If
End If
Function Return *_gluBase
End Function

Statement aglu_CloseLib?{}
If *_gluBase
  ; (!) Do some freeing stuff here that you inited in _gluBase_Init{}...
  CloseLibrary_ *_gluBase : *_gluBase = 0
End If
End Statement
!autoexit{aglu_CloseLib}


; Wrapper Functions:
Function.l aglu_registerGLU{_ptr.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_registerGLU{result.l,_ptr}
End If
Function Return result
End Function

Function.l aglu_gluLookAt{_GLdouble_eyex.l,_GLdouble_eyey.l,_GLdouble_eyez.l,_GLdouble_centerx.l,_GLdouble_centery.l,_GLdouble_centerz.l,_GLdouble_upx.l,_GLdouble_upy.l,_GLdouble_upz.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluLookAt{result.l,_GLdouble_eyex,_GLdouble_eyey,_GLdouble_eyez,_GLdouble_centerx,_GLdouble_centery,_GLdouble_centerz,_GLdouble_upx,_GLdouble_upy,_GLdouble_upz}
End If
Function Return result
End Function

Function.l aglu_gluOrtho2D{_GLdouble_left.l,_GLdouble_right.l,_GLdouble_bottom.l,_GLdouble_top.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluOrtho2D{result.l,_GLdouble_left,_GLdouble_right,_GLdouble_bottom,_GLdouble_top}
End If
Function Return result
End Function

Function.l aglu_gluPerspective{_GLdouble_fovy.l,_GLdouble_aspect.l,_GLdouble_zNear.l,_GLdouble_zFar.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluPerspective{result.l,_GLdouble_fovy,_GLdouble_aspect,_GLdouble_zNear,_GLdouble_zFar}
End If
Function Return result
End Function

Function.l aglu_gluPickMatrix{_GLdouble_x.l,_GLdouble_y.l,_GLdouble_width.l,_GLdouble_height.l,_GLint_viewport.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluPickMatrix{result.l,_GLdouble_x,_GLdouble_y,_GLdouble_width,_GLdouble_height,_GLint_viewport}
End If
Function Return result
End Function

Function.l aglu_gluProject{_GLdouble_objx.l,_GLdouble_objy.l,_GLdouble_objz.l,_GLdouble_modelMatrix.l,_GLdouble_projMatrix.l,_GLint_viewport.l,_GLdouble_winx.l,_GLdouble_winy.l,_GLdouble_winz.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluProject{result.l,_GLdouble_objx,_GLdouble_objy,_GLdouble_objz,_GLdouble_modelMatrix,_GLdouble_projMatrix,_GLint_viewport,_GLdouble_winx,_GLdouble_winy,_GLdouble_winz}
End If
Function Return result
End Function

Function.l aglu_gluUnProject{_GLdouble_winx.l,_GLdouble_winy.l,_GLdouble_winz.l,_GLdouble_modelMatrix.l,_GLdouble_projMatrix.l,_GLint_viewport.l,_GLdouble_objx.l,_GLdouble_objy.l,_GLdouble_objz.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluUnProject{result.l,_GLdouble_winx,_GLdouble_winy,_GLdouble_winz,_GLdouble_modelMatrix,_GLdouble_projMatrix,_GLint_viewport,_GLdouble_objx,_GLdouble_objy,_GLdouble_objz}
End If
Function Return result
End Function

Function.l aglu_gluErrorString{_GLenum_errorCode.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluErrorString{result.l,_GLenum_errorCode}
End If
Function Return result
End Function

Function.l aglu_gluScaleImage{_GLenum_format.l,_GLint_widthin.l,_GLint_heightin.l,_GLenum_typein.l,_void_datain.l,_GLint_widthout.l,_GLint_heightout.l,_GLenum_typeout.l,_void_dataout.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluScaleImage{result.l,_GLenum_format,_GLint_widthin,_GLint_heightin,_GLenum_typein,_void_datain,_GLint_widthout,_GLint_heightout,_GLenum_typeout,_void_dataout}
End If
Function Return result
End Function

Function.l aglu_gluBuild1DMipmaps{_GLenum_target.l,_GLint_components.l,_GLint_width.l,_GLenum_format.l,_GLenum_type.l,_void_data.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluBuild1DMipmaps{result.l,_GLenum_target,_GLint_components,_GLint_width,_GLenum_format,_GLenum_type,_void_data}
End If
Function Return result
End Function

Function.l aglu_gluBuild2DMipmaps{_GLenum_target.l,_GLint_components.l,_GLint_width.l,_GLint_height.l,_GLenum_format.l,_GLenum_type.l,_void_data.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluBuild2DMipmaps{result.l,_GLenum_target,_GLint_components,_GLint_width,_GLint_height,_GLenum_format,_GLenum_type,_void_data}
End If
Function Return result
End Function

Function.l aglu_gluNewQuadric{}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluNewQuadric{result.l}
End If
Function Return result
End Function

Function.l aglu_gluDeleteQuadric{_GLUquadricObj_state.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluDeleteQuadric{result.l,_GLUquadricObj_state}
End If
Function Return result
End Function

Function.l aglu_gluQuadricDrawStyle{_GLUquadricObj_quadObject.l,_GLenum_drawStyle.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluQuadricDrawStyle{result.l,_GLUquadricObj_quadObject,_GLenum_drawStyle}
End If
Function Return result
End Function

Function.l aglu_gluQuadricOrientation{_GLUquadricObj_quadObject.l,_GLenum_orientation.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluQuadricOrientation{result.l,_GLUquadricObj_quadObject,_GLenum_orientation}
End If
Function Return result
End Function

Function.l aglu_gluQuadricNormals{_GLUquadricObj_quadObject.l,_GLenum_normals.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluQuadricNormals{result.l,_GLUquadricObj_quadObject,_GLenum_normals}
End If
Function Return result
End Function

Function.l aglu_gluQuadricTexture{_GLUquadricObj_quadObject.l,_GLboolean_textureCoords.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluQuadricTexture{result.l,_GLUquadricObj_quadObject,_GLboolean_textureCoords}
End If
Function Return result
End Function

Function.l aglu_gluQuadricCallback{_GLUquadricObj_qobj.l,_GLenum_which.l,_void_fn.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluQuadricCallback{result.l,_GLUquadricObj_qobj,_GLenum_which,_void_fn}
End If
Function Return result
End Function

Function.l aglu_gluCylinder{_GLUquadricObj_qobj.l,_GLdouble_baseRadius.l,_GLdouble_topRadius.l,_GLdouble_height.l,_GLint_slices.l,_GLint_stacks.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluCylinder{result.l,_GLUquadricObj_qobj,_GLdouble_baseRadius,_GLdouble_topRadius,_GLdouble_height,_GLint_slices,_GLint_stacks}
End If
Function Return result
End Function

Function.l aglu_gluSphere{_GLUquadricObj_obj.l,_GLdouble_radius.l,_GLint_slices.l,_GLint_stacks.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluSphere{result.l,_GLUquadricObj_obj,_GLdouble_radius,_GLint_slices,_GLint_stacks}
End If
Function Return result
End Function

Function.l aglu_gluDisk{_GLUquadricObj_qobj.l,_GLdouble_InnerRadius.l,_GLdouble_outerRadius.l,_GLint_slices.l,_GLint_loops.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluDisk{result.l,_GLUquadricObj_qobj,_GLdouble_InnerRadius,_GLdouble_outerRadius,_GLint_slices,_GLint_loops}
End If
Function Return result
End Function

Function.l aglu_gluPartialDisk{_GLUquadricObj_qobj.l,_GLdouble_innerRadius.l,_GLdouble_outerRadius.l,_GLint_slices.l,_GLint_loops.l,_GLdouble_startAngle.l,_GLdouble_sweepAngle.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluPartialDisk{result.l,_GLUquadricObj_qobj,_GLdouble_innerRadius,_GLdouble_outerRadius,_GLint_slices,_GLint_loops,_GLdouble_startAngle,_GLdouble_sweepAngle}
End If
Function Return result
End Function

Function.l aglu_gluNewNurbsRenderer{}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluNewNurbsRenderer{result.l}
End If
Function Return result
End Function

Function.l aglu_gluDeleteNurbsRenderer{_GLUnurbsObj_nobj.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluDeleteNurbsRenderer{result.l,_GLUnurbsObj_nobj}
End If
Function Return result
End Function

Function.l aglu_gluLoadSamplingMatrices{_GLUnurbsObj_nobj.l,_GLfloat_modelMatrix.l,_GLfloat_projMatrix.l,_GLint_viewport.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluLoadSamplingMatrices{result.l,_GLUnurbsObj_nobj,_GLfloat_modelMatrix,_GLfloat_projMatrix,_GLint_viewport}
End If
Function Return result
End Function

Function.l aglu_gluNurbsProperty{_GLUnurbsObj_nobj.l,_GLenum_property.l,_GLfloat_value.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluNurbsProperty{result.l,_GLUnurbsObj_nobj,_GLenum_property,_GLfloat_value}
End If
Function Return result
End Function

Function.l aglu_gluGetNurbsProperty{_GLUnurbsObj_nobj.l,_GLenum_property.l,_GLfloat_value.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluGetNurbsProperty{result.l,_GLUnurbsObj_nobj,_GLenum_property,_GLfloat_value}
End If
Function Return result
End Function

Function.l aglu_gluBeginCurve{_GLUnurbsObj_nobj.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluBeginCurve{result.l,_GLUnurbsObj_nobj}
End If
Function Return result
End Function

Function.l aglu_gluEndCurve{_GLUnurbsObj_nobj.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluEndCurve{result.l,_GLUnurbsObj_nobj}
End If
Function Return result
End Function

Function.l aglu_gluNurbsCurve{_GLUnurbsObj_nobj.l,_GLint_nknots.l,_GLfloat_knot.l,_GLint_stride.l,_GLfloat_ctlarray.l,_GLint_order.l,_GLenum_type.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluNurbsCurve{result.l,_GLUnurbsObj_nobj,_GLint_nknots,_GLfloat_knot,_GLint_stride,_GLfloat_ctlarray,_GLint_order,_GLenum_type}
End If
Function Return result
End Function

Function.l aglu_gluBeginSurface{_GLUnurbsObj_nobj.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluBeginSurface{result.l,_GLUnurbsObj_nobj}
End If
Function Return result
End Function

Function.l aglu_gluEndSurface{_GLUnurbsObj_nobj.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluEndSurface{result.l,_GLUnurbsObj_nobj}
End If
Function Return result
End Function

Function.l aglu_gluNurbsSurface{_GLUnurbsObj_nobj.l,_GLint_sknot_count.l,_GLfloat_sknot.l,_GLint_tknot_count.l,_GLfloat_tknot.l,_GLint_s_stride.l,_GLint_t_stride.l,_GLfloat_ctlarray.l,_GLint_sorder.l,_GLint_torder.l,_GLenum_type.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluNurbsSurface{result.l,_GLUnurbsObj_nobj,_GLint_sknot_count,_GLfloat_sknot,_GLint_tknot_count,_GLfloat_tknot,_GLint_s_stride,_GLint_t_stride,_GLfloat_ctlarray,_GLint_sorder,_GLint_torder,_GLenum_type}
End If
Function Return result
End Function

Function.l aglu_gluBeginTrim{_GLUnurbsObj_nobj.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluBeginTrim{result.l,_GLUnurbsObj_nobj}
End If
Function Return result
End Function

Function.l aglu_gluEndTrim{_GLUnurbsObj_nobj.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluEndTrim{result.l,_GLUnurbsObj_nobj}
End If
Function Return result
End Function

Function.l aglu_gluPwlCurve{_GLUnurbsObj_nobj.l,_GLint_count.l,_GLfloat_array.l,_GLint_stride.l,_GLenum_type.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluPwlCurve{result.l,_GLUnurbsObj_nobj,_GLint_count,_GLfloat_array,_GLint_stride,_GLenum_type}
End If
Function Return result
End Function

Function.l aglu_gluNurbsCallback{_GLUnurbsObj_nobj.l,_GLenum_which.l,_void_fn.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluNurbsCallback{result.l,_GLUnurbsObj_nobj,_GLenum_which,_void_fn}
End If
Function Return result
End Function

Function.l aglu_gluNewTess{}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluNewTess{result.l}
End If
Function Return result
End Function

Function.l aglu_gluTessCallback{_GLUtriangulatorObj_tobj.l,_GLenum_which.l,_void_fn.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluTessCallback{result.l,_GLUtriangulatorObj_tobj,_GLenum_which,_void_fn}
End If
Function Return result
End Function

Function.l aglu_gluDeleteTess{_GLUtriangulatorObj_tobj.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluDeleteTess{result.l,_GLUtriangulatorObj_tobj}
End If
Function Return result
End Function

Function.l aglu_gluBeginPolygon{_GLUtriangulatorObj_tobj.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluBeginPolygon{result.l,_GLUtriangulatorObj_tobj}
End If
Function Return result
End Function

Function.l aglu_gluEndPolygon{_GLUtriangulatorObj_tobj.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluEndPolygon{result.l,_GLUtriangulatorObj_tobj}
End If
Function Return result
End Function

Function.l aglu_gluNextContour{_GLUtriangulatorObj_tobj.l,_GLenum_type.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluNextContour{result.l,_GLUtriangulatorObj_tobj,_GLenum_type}
End If
Function Return result
End Function

Function.l aglu_gluTessVertex{_GLUtriangulatorObj_tobj.l,_GLdouble_v.l,_void_data.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluTessVertex{result.l,_GLUtriangulatorObj_tobj,_GLdouble_v,_void_data}
End If
Function Return result
End Function

Function.l aglu_gluGetString{_GLenum_name.l}
If (aglu_OpenLib{}) ; (!) put your min version here if needed!
  !aglu_gluGetString{result.l,_GLenum_name}
End If
Function Return result
End Function


; User Functions...
Function.l aglu_MyFunction{myParam.l}
If aglu_OpenLib{}
  ; (!) Do here your stuff for this function.
  ; (!) The OpenLib call makes sure that your library is open when you need it!
  ; (!) A library function is called via macro like this: 
  !aglu_registerGLU{myResult.l,_ptr.l}
  ; (!) Note: The first macro parameter is always the return value of the lib function as a long word, followed by the lib function parameters.
  ; (!) Note: Not all functions will return something meaningful. Read always the librarie's autodocs!
  ; (!) Note: Strings have to be passed as a pointer (&myString$) to the macro, no expressions are allowed!
End If
Function Return myResult
End Function


CNIF #__include=0

; (!) place your built-in demo here

End

CEND


