; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 9
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 2
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 100
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max ChunkyBuffer= 2
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: ttfont.include                                                        /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 19/01/2007                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
CNIF #__include=0
OPTIMIZE 7
SYNTAX 2
CEND


XINCLUDE "error.include.ab3"

NEWTYPE.fontengine
fontname.s
ysize.l
End NEWTYPE


#TT_FontFile             = $6EDA0000    ; OG.. */

#TT_FontStyle            = $6EDA0001    ; OG.. */

#TT_FontStyle_Regular    = 0
#TT_FontStyle_Italic     = 1

#TT_FamilyTable          = $6EDA0002    ; O... */
#TT_FontSize             = $6EDA0003    ; OG.. */

#TT_FontWeight           = $6EDA0004    ; OG.. */

#TT_FontWeight_Normal    = 400
#TT_FontWeight_Bold      = 700

#TT_ColorMap             = $6EDA0005    ; O... */
#TT_Screen               = $6EDA0006    ; O... */
#TT_Window               = $6EDA0007    ; O... */
#TT_FontAscender         = $6EDA0008    ; .G.. */
#TT_FontDescender        = $6EDA0009    ; .G.. */

#TT_Antialias            = $6EDA000F    ; .GSP */

#TT_Antialias_Auto       = 0
#TT_Antialias_Off        = 1
#TT_Antialias_On         = 2

#TT_Encoding             = $6EDA0010    ; .GSP */

; All encoding numbers (excluding TT_Encoding_Default) are equal To IANA */
; registered encoding numbers                                            */

#TT_Encoding_Default     = 0             ; Use ENV:ttfcodepage OR ISO-8859-1 If NOT found */
#TT_Encoding_ISO8859_1   = 4             ; Western Europe AND US */
#TT_Encoding_ISO8859_2   = 5             ; Eastern Europe */
#TT_Encoding_ISO8859_3   = 6
#TT_Encoding_ISO8859_4   = 7
#TT_Encoding_ISO8859_5   = 8
#TT_Encoding_ISO8859_6   = 9
#TT_Encoding_ISO8859_7   = 10
#TT_Encoding_ISO8859_8   = 11
#TT_Encoding_ISO8859_9   = 12
#TT_Encoding_ISO8859_10  = 13
#TT_Encoding_ISO8859_11  = 14
#TT_Encoding_ISO8859_13  = 109
#TT_Encoding_ISO8859_14  = 110
#TT_Encoding_ISO8859_15  = 111
#TT_Encoding_ISO8859_16  = 112
#TT_Encoding_UTF16_BE    = 1013
#TT_Encoding_UTF32_BE    = 1018
#TT_Encoding_UTF8        = 106
#TT_Encoding_UTF16_LE    = 1014
#TT_Encoding_UTF32_LE    = 1019
#TT_Encoding_UTF16       = 1015
#TT_Encoding_UTF32       = 1017

#TT_FontName             = $6EDA0011    ; .G.. */
#TT_FamilyName           = $6EDA0012    ; .G.. */
#TT_SubfamilyName        = $6EDA0013    ; .G.. */
#TT_Transparency         = $6EDA0014    ; .GS.  from 0 To 255 */
#TT_ScaleX               = $6EDA0015    ; O.SP  single precision floating Point +- 0.01 To 100 */
#TT_ScaleY               = $6EDA0016    ; O.SP  single precision floating Point +- 0.01 To 100 */

#TT_SoftStyle            = $6EDA0017    ; ..SP (V5) */

#TT_SoftStyle_None           = $0000
#TT_SoftStyle_Underlined     = $0001
#TT_SoftStyle_DblUnderlined  = $0002
#TT_SoftStyle_Overstriked    = $0004
#TT_SoftStyle_DblOverstriked = $0008

#TT_Foreground           = $6EDA0018    ; ..S.  foreground RGB value*/

#TT_Foreground_UseRastPort  = $FFFFFFFF

#TT_Background           = $6EDA0019    ; ..S.  background RGB value*/

#TT_Background_UseRastPort  = $FFFFFFFF

#TT_FontMaxTop           = $6EDA001E    ; .G.. */
#TT_FontMaxBottom        = $6EDA001F    ; .G.. */
#TT_FontDesignHeight     = $6EDA0020    ; .G.. */
#TT_FontRealAscender     = $6EDA0021    ; .G.. */
#TT_FontRealDescender    = $6EDA0022    ; .G.. */
#TT_FontAccentedAscender = $6EDA0023    ; .G.. */
#TT_CustomEncoding       = $6EDA0024    ; ..SP */
#TT_Gamma                = $6EDA0025    ; ..S. */

; Structure returned by TT_GetPixmap() (V5)*/

NEWTYPE.TT_Pixmap
   ttp_Size.l;       ; size of the structure inculdung this field */
   ttp_Width.l;      ; also equal to bytes per row */
   ttp_Height.l;     ; number of rows */
   *ttp_Data.b;       ; grayscale pixmap data */
End NEWTYPE

; font requester attributes (V6) */

                                            ; Type,             Default value     */

#TTRQ_Window             = $6EDA2000  ; struct Window*,   Null              */
#TTRQ_PubScreenName      = $6EDA2001  ; STRPTR,           Null [Workbench]  */
#TTRQ_Screen             = $6EDA2002  ; struct Screen*,   Null              */
#TTRQ_SleepWindow        = $6EDA2003  ; BOOL,             False             */
#TTRQ_TitleText          = $6EDA2004  ; STRPTR,           "Select TrueType font" OR localized */
#TTRQ_PositiveText       = $6EDA2005  ; STRPTR,           "OK" OR localized */
#TTRQ_NegativeText       = $6EDA2006  ; STRPTR,           "Cancel" OR localized */
#TTRQ_InitialLeftEdge    = $6EDA2007  ; Word,             centered On Screen */
#TTRQ_InitialTopEdge     = $6EDA2008  ; Word,             centered On Screen */
#TTRQ_InitialWidth       = $6EDA2009  ; Word,             Max(200, 25% of sceeen width) */
#TTRQ_InitialHeight      = $6EDA200A  ; Word,             Max(200, 50% of Screen height) */
#TTRQ_DoSizes            = $6EDA200B  ; BOOL,             True              */
#TTRQ_DoWeight           = $6EDA200C  ; BOOL,             False             */
#TTRQ_DoStyle            = $6EDA200D  ; BOOL,             False             */



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = font_exist {f$}                                         /
;/                                                                             /
;/ Description:                                                                /
;/ #TT_FontFile             = $6EDA0000    ; OG.. */                           /
;/ #TT_FontStyle            = $6EDA0001    ; OG.. */                           /
;/ #TT_FamilyTable          = $6EDA0002    ; O... */                           /
;/ #TT_FontSize             = $6EDA0003    ; OG.. */                           /
;/ #TT_FontWeight           = $6EDA0004    ; OG.. */                           /
;/ #TT_ColorMap             = $6EDA0005    ; O... */                           /
;/ #TT_Screen               = $6EDA0006    ; O... */                           /
;/ #TT_Window               = $6EDA0007    ; O... */                           /
;/ #TT_FontAscender         = $6EDA0008    ; .G.. */                           /
;/ #TT_FontDescender        = $6EDA0009    ; .G.. */                           /
;/ #TT_Antialias            = $6EDA000F    ; .GSP */                           /
;/ #TT_Encoding             = $6EDA0010    ; .GSP */                           /
;/ All encoding numbers (excluding TT_Encoding_Default) are equal To IANA */   /
;/ registered encoding numbers                                            */   /
;/ #TT_Encoding_Default     = 0             ; Use ENV:ttfcodepage OR ISO-885:: /
;/ 9-1 If NOT found */                                                         /
;/ #TT_Encoding_ISO8859_1   = 4             ; Western Europe AND US */         /
;/ #TT_Encoding_ISO8859_2   = 5             ; Eastern Europe */                /
;/ #TT_FontName             = $6EDA0011    ; .G.. */                           /
;/ #TT_FamilyName           = $6EDA0012    ; .G.. */                           /
;/ #TT_SubfamilyName        = $6EDA0013    ; .G.. */                           /
;/ #TT_Transparency         = $6EDA0014    ; .GS.  from 0 To 255 */            /
;/ #TT_ScaleX               = $6EDA0015    ; O.SP  single precision floating:: /
;/  Point +- 0.01 To 100 */                                                    /
;/ #TT_ScaleY               = $6EDA0016    ; O.SP  single precision floating:: /
;/  Point +- 0.01 To 100 */                                                    /
;/ #TT_SoftStyle            = $6EDA0017    ; ..SP (V5) */                      /
;/ #TT_Foreground           = $6EDA0018    ; ..S.  foreground RGB value*/      /
;/ #TT_Background           = $6EDA0019    ; ..S.  background RGB value*/      /
;/ #TT_FontMaxTop           = $6EDA001E    ; .G.. */                           /
;/ #TT_FontMaxBottom        = $6EDA001F    ; .G.. */                           /
;/ #TT_FontDesignHeight     = $6EDA0020    ; .G.. */                           /
;/ #TT_FontRealAscender     = $6EDA0021    ; .G.. */                           /
;/ #TT_FontRealDescender    = $6EDA0022    ; .G.. */                           /
;/ #TT_FontAccentedAscender = $6EDA0023    ; .G.. */                           /
;/ #TT_CustomEncoding       = $6EDA0024    ; ..SP */                           /
;/ #TT_Gamma                = $6EDA0025    ; ..S. */                           /
;/ Structure returned by TT_GetPixmap() (V5)*/                                 /
;/    ttp_Size.l;       ; size of the structure inculdung this field */        /
;/    ttp_Width.l;      ; also equal to bytes per row */                       /
;/    ttp_Height.l;     ; number of rows */                                    /
;/    *ttp_Data.b;       ; grayscale pixmap data */                            /
;/ font requester attributes (V6) */                                           /
;/                                             ; Type,             Default v:: /
;/ alue     */                                                                 /
;/ #TTRQ_Window             = $6EDA2000  ; struct Window*,   Null           :: /
;/    */                                                                       /
;/ #TTRQ_PubScreenName      = $6EDA2001  ; STRPTR,           Null [Workbench:: /
;/ ]  */                                                                       /
;/ #TTRQ_Screen             = $6EDA2002  ; struct Screen*,   Null           :: /
;/    */                                                                       /
;/ #TTRQ_SleepWindow        = $6EDA2003  ; BOOL,             False          :: /
;/    */                                                                       /
;/ #TTRQ_TitleText          = $6EDA2004  ; STRPTR,           "Select TrueTyp:: /
;/ e font" OR localized */                                                     /
;/ #TTRQ_PositiveText       = $6EDA2005  ; STRPTR,           "OK" OR localiz:: /
;/ ed */                                                                       /
;/ #TTRQ_NegativeText       = $6EDA2006  ; STRPTR,           "Cancel" OR loc:: /
;/ alized */                                                                   /
;/ #TTRQ_InitialLeftEdge    = $6EDA2007  ; Word,             centered On Scr:: /
;/ een */                                                                      /
;/ #TTRQ_InitialTopEdge     = $6EDA2008  ; Word,             centered On Scr:: /
;/ een */                                                                      /
;/ #TTRQ_InitialWidth       = $6EDA2009  ; Word,             Max(200, 25% of:: /
;/  sceeen width) */                                                           /
;/ #TTRQ_InitialHeight      = $6EDA200A  ; Word,             Max(200, 50% of:: /
;/  Screen height) */                                                          /
;/ #TTRQ_DoSizes            = $6EDA200B  ; BOOL,             True           :: /
;/    */                                                                       /
;/ #TTRQ_DoWeight           = $6EDA200C  ; BOOL,             False          :: /
;/    */                                                                       /
;/ #TTRQ_DoStyle            = $6EDA200D  ; BOOL,             False          :: /
;/    */                                                                       /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - f$    : ???                                                               /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l font_exist {f$}
lock.l=Lock_(&f$,#ACCESS_READ)
If lock
DEFTYPE .FileInfoBlock fib
If Examine_(lock, fib) <> 0
  If fib\fib_DirEntryType < 0
    size.l=Peek.l(&fib\fib_Size)  ; file
  Else size=-1                  ; drawer
  EndIf
  Else size=-2 ; failed to examine file! rare occurence!
EndIf
UnLock_ lock
Else size=0 ; failed to lock file (doesn't exist basically)...
EndIf
Function Return size
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = font_load {fontname.s,ysize.l}                          /
;/                                                                             /
;/ Description:                                                                /
;/ filename.s = dos_addpart {"FONTS:",fontname.s}                              /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - fontname.s    : ???                                                       /
;/ - ysize.l    : ???                                                          /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l font_load {fontname.s,ysize.l}
;filename.s = dos_addpart {"FONTS:",fontname.s}
If LCase$(Right$(fontname.s,3)) = "ttf"
  font.l = ????Lib212/1 (Tags(#TT_FontFile,&fontname.s,#TT_FontSize,ysize))
  If font=0 Then error {"Font "+fontname.s+"/"+Str$(ysize)+" not found !"}
Else
  font.l = OpenDiskFont_ (0)
  If font=0 Then error {"Font "+fontname.s+"/"+Str$(ysize)+" not found !"}
End If
Function Return font
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: font_setfont {*rp.RastPort,font.l}                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *rp.RastPort    : ???                                                     /
;/ - font.l    : ???                                                           /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement font_setfont {*rp.RastPort,font.l}
????Lib212/2 *rp,font
????Lib212/5 *rp,Tags(#TT_Window,*rp\Layer\Window,#TT_Antialias,#TT_Antialias_On)
End Statement



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: font_text {rp.l,str_ptr.l,@count.l}                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - rp.l    : ???                                                             /
;/ - str_ptr.l    : ???                                                        /
;/ - count.l    : ???                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement font_text {rp.l,str_ptr.l,@count.l}
If count<1 Then count = Peek.l(str_ptr-4)
????Lib212/4 rp,str_ptr,count.l
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = font_textlength {rp.l,str_ptr.l,count.l,@font.l}        /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - rp.l    : ???                                                             /
;/ - str_ptr.l    : ???                                                        /
;/ - count.l    : ???                                                          /
;/ - font.l    : ???                                                           /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l font_textlength {rp.l,str_ptr.l,count.l,@font.l}
If count<1 Then count = Peek.l(str_ptr-4)
If font><-1 AND font><0 Then ????Lib212/2 rp,font
tlen.l = ????Lib212/7 (rp,str_ptr,count)
Function Return tlen
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = font_size {font.l}                                      /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - font.l    : ???                                                           /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l font_size {font.l}
Function Return 14
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: font_close {font.l}                                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - font.l    : ???                                                           /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement font_close {font.l}
If font
  ????Lib212/3 font
End If
End Statement



CNIF #__include=0
WbToScreen 0
Window 0,400,0,320,200,$e,"Test",1,0
myfont.l = font_load {"fonts:arial.ttf",18}
If myfont
  *win.Window = Peek.l(Addr Window(0))
  font_setfont {*win\RPort,myfont}
  a.s = "Hallo Welt !"
  Move_ *win\RPort,40,40
  SetAPen_ *win\RPort,1
  SetDrMd_ *win\RPort,#JAM1
  font_text {*win\RPort,&a.s}
  font_close {myfont}
  error {"OK!"}
Else
  error {"Unable to load font !"}
End If

End
CEND
