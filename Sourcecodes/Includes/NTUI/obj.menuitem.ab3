; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 6
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 987
; CursorColumn    = 19
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
#TUI_HAS_MENUITEM = 1

;/* menu item subclassIDs */
#TUIMENU_ITEM      = 1
#TUIMENU_SUBMENU   = 2
#TUIMENU_POPUP     = 3
#TUIMENU_DROPDOWN  = 4
;#TUIMENU_SEPERATOR = 5

#TUIMIA_BASE               = #TUIA_USER
#TUIMIA_IMAGE              = #TUIMIA_BASE + 0 ; rw
#TUIMIA_TOGGLE             = #TUIMIA_BASE + 1 ; rw
#TUIMIA_CHECKED            = #TUIA_VALUE      ; rw
#TUIMIA_SHORTCUT           = #TUIMIA_BASE + 2 ; rw
#TUIMIA_LABEL              = #TUIA_STRING
#TUIMIA_ONCLICK            = #TUIMIA_BASE + 3 ; rw
#TUIMIA_ONCLICKCB          = #TUIMIA_BASE + 4
#TUIMIA_SUBCLASSID         = #TUIMIA_BASE + 5

NEWTYPE.tuiMenuItem

  obj.tuiObject
  subClassID.l

  *tbi.tuiTBImage
  *link_.tuiTBImage
  *alt.tuiTBImage
  *shift.tuiTBImage
  *amiga_.tuiTBImage
  *ctrl.tuiTBImage

  *subTuiWin.tuiWindow

  subSize.tuiPixel
  shortkey.l
  shortqual.l
  *shortcut.str
  shortdisabled.l
  state.l           ; menuitem is pressed/open
  sticky.l
  tickCount.l
  tickDelay.l

  onClick.tuiNotifyHandler

End NEWTYPE


_ntui_SetMenuItemAttr:
Function.l _ntui_SetMenuItemAttr{*menuItem_.tuiMenuItem,ti_Tag.l,ti_Data.l}
  !_ASSERT{*menuItem_}
  !_ASSERT{*menuItem_\obj\classID=#TUICLASS_MENUITEM}

  done.l = True

  *rp.RastPort = ntui_ObtainRastPort{*menuItem_}

  Select ti_Tag
    Case #TUIMIA_LABEL   : str_WritePtr{&*menuItem_\obj\string,ti_Data}
    Case #TUIMIA_IMAGE
      If *menuItem_\tbi Then ntui_FreeTBImage{*menuItem_\tbi} : *menuItem_\tbi = Null
      If ti_Data Then *menuItem_\tbi = ntui_CreateTBImage{*menuItem_\obj\engine,Peek.s(ti_Data),#TUISIZE_INLINE,#TUISIZE_INLINE}

    Case #TUIMIA_SHORTCUT
      If ti_Data Then shortcut.s = Peek.s(ti_Data) : Else shortcut=""

      ; set the qualifiers
      *menuItem_\shortqual = 0
      If Instr(shortcut,"RAMIGA+") Then *menuItem_\shortqual|#TUIQUAL_RCOM    : shortcut=Replace$(shortcut,"RAMIGA+","")
      If Instr(shortcut,"LAMIGA+") Then *menuItem_\shortqual|#TUIQUAL_LCOM    : shortcut=Replace$(shortcut,"LAMIGA+","")
      If Instr(shortcut,"AMIGA+")  Then *menuItem_\shortqual|#TUIQUAL_COM     : shortcut=Replace$(shortcut,"AMIGA+" ,"")
      If Instr(shortcut,"CTRL+")   Then *menuItem_\shortqual|#TUIQUAL_CTRL    : shortcut=Replace$(shortcut,"CTRL+"  ,"")
      If Instr(shortcut,"RALT+")   Then *menuItem_\shortqual|#TUIQUAL_RALT    : shortcut=Replace$(shortcut,"RALT+"  ,"")
      If Instr(shortcut,"LALT+")   Then *menuItem_\shortqual|#TUIQUAL_LALT    : shortcut=Replace$(shortcut,"LALT+"  ,"")
      If Instr(shortcut,"ALT+")    Then *menuItem_\shortqual|#TUIQUAL_ALT     : shortcut=Replace$(shortcut,"ALT+"   ,"")
      If Instr(shortcut,"RSHIFT+") Then *menuItem_\shortqual|#TUIQUAL_RSHIFT  : shortcut=Replace$(shortcut,"RSHIFT+","")
      If Instr(shortcut,"LSHIFT+") Then *menuItem_\shortqual|#TUIQUAL_LSHIFT  : shortcut=Replace$(shortcut,"LSHIFT+","")
      If Instr(shortcut,"SHIFT+")  Then *menuItem_\shortqual|#TUIQUAL_SHIFT   : shortcut=Replace$(shortcut,"SHIFT+" ,"")

      shortcut=Replace$(shortcut,"++","")
      If (Right$(shortcut,1)="-" AND FLen(shortcut)>1)
        *menuItem_\shortdisabled = True
        shortcut=Left$(shortcut,FLen(shortcut)-1)
      EndIf

      ; set the actual shortcut key
      Select shortcut
        Case "ENTER" : *menuItem_\shortkey = 13                  : isRaw.l = False
        Case "SPACE" : *menuItem_\shortkey = 32                  : isRaw.l = False
        Case "HASH"  : *menuItem_\shortkey = @"#"                : isRaw.l = False : shortcut="#"
        Case "DEL"   : *menuItem_\shortkey = #RAWKEY_DEL         : isRaw.l = True
        Case "ESC"   : *menuItem_\shortkey = #RAWKEY_ESC         : isRaw.l = True
        Case "BS"    : *menuItem_\shortkey = #RAWKEY_BACKSPACE   : isRaw.l = True
        Case "F1"    : *menuItem_\shortkey = #RAWKEY_F1          : isRaw.l = True
        Case "F2"    : *menuItem_\shortkey = #RAWKEY_F2          : isRaw.l = True
        Case "F3"    : *menuItem_\shortkey = #RAWKEY_F3          : isRaw.l = True
        Case "F4"    : *menuItem_\shortkey = #RAWKEY_F4          : isRaw.l = True
        Case "F5"    : *menuItem_\shortkey = #RAWKEY_F5          : isRaw.l = True
        Case "F6"    : *menuItem_\shortkey = #RAWKEY_F6          : isRaw.l = True
        Case "F7"    : *menuItem_\shortkey = #RAWKEY_F7          : isRaw.l = True
        Case "F8"    : *menuItem_\shortkey = #RAWKEY_F8          : isRaw.l = True
        Case "F9"    : *menuItem_\shortkey = #RAWKEY_F9          : isRaw.l = True
        Default
          shortcut = LCase$(shortcut)
          *menuItem_\shortkey = Peek.b(&shortcut)   : isRaw.l = False
      End Select

      ; free old images
      If (*menuItem_\amiga_) Then ntui_FreeTBImage{*menuItem_\amiga_} : *menuItem_\amiga_ = Null
      If (*menuItem_\alt   ) Then ntui_FreeTBImage{*menuItem_\alt   } : *menuItem_\alt    = Null
      If (*menuItem_\shift ) Then ntui_FreeTBImage{*menuItem_\shift } : *menuItem_\shift  = Null
      If (*menuItem_\ctrl  ) Then ntui_FreeTBImage{*menuItem_\ctrl  } : *menuItem_\ctrl   = Null

      ; set new images
      If (*menuItem_\shortqual&(#TUIQUAL_COM))   = (#TUIQUAL_COM)   Then *menuItem_\amiga_ = ntui_CreateTBImage{*menuItem_\obj\engine,"AMIGA"  ,#TUISIZE_INLINE,#TUISIZE_INLINE}
      If (*menuItem_\shortqual&(#TUIQUAL_ALT))   = (#TUIQUAL_ALT)   Then *menuItem_\alt    = ntui_CreateTBImage{*menuItem_\obj\engine,"ALT"    ,#TUISIZE_INLINE,#TUISIZE_INLINE}
      If (*menuItem_\shortqual&(#TUIQUAL_SHIFT)) = (#TUIQUAL_SHIFT) Then *menuItem_\shift  = ntui_CreateTBImage{*menuItem_\obj\engine,"SHIFT"  ,#TUISIZE_INLINE,#TUISIZE_INLINE}
      If (*menuItem_\shortqual&(#TUIQUAL_CTRL))  = (#TUIQUAL_CTRL)  Then *menuItem_\ctrl   = ntui_CreateTBImage{*menuItem_\obj\engine,"CTRL"   ,#TUISIZE_INLINE,#TUISIZE_INLINE}

      ; write shortcut string
      str_Write{&*menuItem_\shortcut,UCase$(shortcut)}
      ntui_RegisterHotKey{*menuItem_,*menuItem_\shortkey,isRaw,*menuItem_\shortqual}
      
      ; hack to map AMIGA to CTRL
      If ((*menuItem_\shortqual&#TUIQUAL_COM) >< 0) AND ((*menuItem_\shortqual&#TUIQUAL_CTRL) = 0)
        ntui_RegisterHotKey{*menuItem_,*menuItem_\shortkey,isRaw,(*menuItem_\shortqual|#TUIQUAL_CTRL|#TUIQUAL_COM)-#TUIQUAL_COM}
      End If
    Case #TUIMIA_ONCLICK     : str_WritePtr{&*menuItem_\onClick\notifyID ,ti_Data}
    Case #TUIMIA_ONCLICKCB   : *menuItem_\onClick\callback = ti_Data
    Case #TUIMIA_SUBCLASSID  : *menuItem_\subClassID = ti_Data
                                                                                                                                                                                                                                                         
    Default
      done = False
  End Select

  If *rp Then ntui_ReleaseRastPort{*menuItem_}

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_SetMenuItemAttr,{Null,0,0}}


_ntui_GetMenuItemAttr:
Function.l _ntui_GetMenuItemAttr{*menuItem_.tuiMenuItem,ti_Tag.l,*ti_Data.longP}
  !_ASSERT{*menuItem_}
  !_ASSERT{*menuItem_\obj\classID=#TUICLASS_MENUITEM}

  done.l = True
  Select ti_Tag
    Case #TUIMIA_IMAGE          : *ti_Data\l = 0 ; todo
    Case #TUIMIA_SUBCLASSID     : *ti_Data\l = *menuItem_\subClassID
    Case #TUIMIA_ONCLICK        : *ti_Data\l = str_GetPtr{*menuItem_\onClick\notifyID}
    Case #TUIMIA_ONCLICKCB      : *ti_Data\l = *menuItem_\onClick\callback
    Default
      done = False
  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_GetMenuItemAttr,{Null,0,Null}}


Statement _ntui_CollapseMenuItem{*obj.tuiObject}

  !_ASSERT{*obj}

  *child.tuiObject = *obj\child
  While *child
    _ntui_CollapseMenuItem{*child}
    *child = *child\next_
  Wend

  If *obj\classID=#TUICLASS_MENUITEM
    *menuItem_.tuiMenuItem = (.tuiMenuItem)*obj
    If *menuItem_\subTuiWin
      ntui_HideWindow{*menuItem_\subTuiWin}
      ntui_SetFocus{*menuItem_\subTuiWin}
    End If
    *menuItem_\obj\flags|#TUIF_ACTIVE - #TUIF_ACTIVE
    *menuItem_\state  = 0
    *menuItem_\sticky = False
    ntui_Refresh{*menuItem_,Null}

  End If

End Statement


Statement _ntui_CollapseMenu{*obj.tuiObject}

  !_ASSERT{*obj}

  *rootWin.tuiWindow = ntui_GetRootWindow{*obj}
  _ntui_CollapseMenuItem{*rootWin}

End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_OpenMenuOptions {*menuItem_.tuiMenuItem}                    /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *menuItem_.tuiMenuItem    : ???                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement _ntui_ExpandMenuItem{*menuItem_.tuiMenuItem}

  !_ASSERT{*menuItem_}
  !_ASSERT{*menuItem_\obj\classID=#TUICLASS_MENUITEM}

  *engine.tuiEngine = *menuItem_\obj\engine
  *rootWin.tuiWindow = ntui_GetRootWindow{*menuItem_}

  If *rootWin=Null Then Statement Return
  If *rootWin\oswin=Null Then Statement Return

  *menuWin.tuiWindow = ntui_GetWindow{*menuItem_}
  If *menuWin\oswin=Null Then Statement Return

  *subWin.tuiWindow = *menuItem_\subTuiWin
  If *subWin=Null Then Statement Return
  If *subWin\oswin Then Statement Return

  xs.l = !tuiRectWidth{*subWin\obj\bbox}
  ys.l = !tuiRectHeight{*subWin\obj\bbox}

  ys = *subWin\obj\minsize\y ; for some reason, the bbox is not setup yet, but should in Layout
 
  Select *menuItem_\subClassID
    Case #TUIMENU_DROPDOWN
      x.l = *menuItem_\obj\bbox\left        + *menuWin\oswin\LeftEdge
      y.l = *menuItem_\obj\bbox\bottom   +1 + *menuWin\oswin\TopEdge
    Case #TUIMENU_POPUP
      x.l = *menuItem_\obj\bbox\left        + *menuWin\oswin\LeftEdge
      y.l = *menuItem_\obj\bbox\top     -ys + *menuWin\oswin\TopEdge
    Case #TUIMENU_SUBMENU
      x.l = *menuItem_\obj\bbox\right    +1 + *menuWin\oswin\LeftEdge
      y.l = *menuItem_\obj\bbox\top         + *menuWin\oswin\TopEdge
    Default
      x.l = 0
      y.l = 0
  End Select
 
  ntui_ShowWindow{*subWin,x,y,*rootWin,False}
 
End Statement


Statement _ntui_ActivateMenuItem{*menuItem_.tuiMenuItem}

  *menuItem_\obj\flags|#TUIF_ACTIVE
  *menuItem_\state  = 1
  *menuItem_\sticky = False
  *menuItem_\tickCount = 0

  ntui_SetFocus{*menuItem_}
  ntui_Refresh{*menuItem_,Null}

  If *menuItem_\subTuiWin
    _ntui_ExpandMenuItem{*menuItem_}
  End If

End Statement


Statement _ntui_DeactivateMenuItem{*menuItem_.tuiMenuItem}

  *menuItem_\obj\flags | #TUIF_ACTIVE - #TUIF_ACTIVE
  *menuItem_\state = 0
  *menuItem_\sticky = False

  ntui_Refresh{*menuItem_,Null}

  If *menuItem_\subTuiWin
    _ntui_CollapseMenuItem{*menuItem_}
  End If
 
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_HandleMenuItemx {*menuItem_.tuiMenuItem,*tuiEv:: /
;/ ent.tuiEvent}                                                               /
;/                                                                             /
;/ Description:                                                                /
;/     ; we are not interessted in any other events                            /
;/ * do what happens if the user operates a MenuItem */                        /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *menuItem_.tuiMenuItem    : ???                                         /
;/ - *ev.tuiEvent    : ???                                               /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
;XINCLUDE "xlog.include.ab3"

_ntui_DispatchMenuItemEvent:
Function.l _ntui_DispatchMenuItemEvent{*menuItem_.tuiMenuItem,*ev.tuiEvent}
  !_ASSERT{*menuItem_}
  !_ASSERT{*menuItem_\obj\classID=#TUICLASS_MENUITEM}

  *engine.tuiEngine = *menuItem_\obj\engine
  !_ASSERT{*engine}
  *obj.tuiObject = *menuItem_\obj
  !_ASSERT{*ev}
  done.l = False

  If *menuItem_\subTuiWin ; redirect event to sub window, if any
    If *menuItem_\subTuiWin\oswin ; ...if open
      *win.tuiWindow = ntui_GetWindow{*menuItem_}
      If *win
        If *win\oswin
          ox.l = *ev\pos\x
          oy.l = *ev\pos\y

          *ev\pos\x + *win\oswin\LeftEdge - *menuItem_\subTuiWin\oswin\LeftEdge
          *ev\pos\y + *win\oswin\TopEdge  - *menuItem_\subTuiWin\oswin\TopEdge

          If _ntui_DispatchWindowEvent{*menuItem_\subTuiWin,*ev}
            Function Return True
          Else
            ;xlog{"Checking sub window for "+Str$(*menuItem_\subTuiWin\obj\bbox\left)}
            If !tuiRectHit{*menuItem_\subTuiWin\obj\bbox,*ev\pos\x,*ev\pos\y} ; we are in the subwindow, just no one interessted in the event
              ;SetAPen_   *menuItem_\subTuiWin\oswin\RPort,RNDPen{}
              ;RectFill_  *menuItem_\subTuiWin\oswin\RPort,30,30,40,40

              ; Mouse Events will be cancelled if over sub window
              Select *ev\id
                Case #TUIEV_MOUSEDOWN : Function Return True
                Case #TUIEV_MOUSEUP   : Function Return True
                Case #TUIEV_MOUSEMOVE : Function Return True
              End Select

            End If
          End If
          *ev\pos\x = ox
          *ev\pos\y = oy
        End If
      End If

    End If
  End If

  *win.tuiWindow = ntui_GetWindow{*menuItem_}
  If *win
    If *win\oswin
      ;SetAPen_   *win\oswin\RPort,RNDPen{}
      ;RectFill_  *win\oswin\RPort,10,30,20,40
      ;RectFill_  *win\oswin\RPort,*ev\pos\x,*ev\pos\y,*ev\pos\x+5,*ev\pos\y+5
    End If
  End If


  Select *ev\id
    Case #TUIEV_HOTKEYDOWN:
      If (*menuItem_\shortdisabled=False)
        _ntui_CollapseMenu{*menuItem_}
        _ntui_DeactivateMenuItem{*menuItem_}
        !tuiHandleNotify{done,*menuItem_,onClick,*ev}
        done=True
      End If
      
    Case #TUIEV_HOTKEYUP:
      If (*menuItem_\shortdisabled=False)
        done=True
      End If

    Case #TUIEV_MOUSEDOWN:
      If *ev\value = 0 ; we want button 0
        If !tuiRectHit{*menuItem_\obj\bbox,*ev\pos\x,*ev\pos\y}
          If *menuItem_\state=0
            _ntui_ActivateMenuItem{*menuItem_}
          Else
            _ntui_DeactivateMenuItem{*menuItem_}
          EndIf
          done = True
        End If
      End If

    Case #TUIEV_MOUSEUP:
      If *ev\value = 0 ; we want button 0
        ;Select *menuItem_\state
        ;  Case 1
            If !tuiRectHit{*menuItem_\obj\bbox,*ev\pos\x,*ev\pos\y}
              If *menuItem_\subTuiWin=Null ; its a leaf
                _ntui_CollapseMenu{*menuItem_}
                _ntui_DeactivateMenuItem{*menuItem_}
                !tuiHandleNotify{done,*menuItem_,onClick,*ev}
              Else
                *menuItem_\sticky = True ; clicked sub menu becomes sticky
              End If
              done    = True
            Else ; outside the menu
              _ntui_CollapseMenu{*menuItem_}
              _ntui_DeactivateMenuItem{*menuItem_}
            End If

            ntui_Refresh{*menuItem_,Null}
        ;End Select
      End If

    Case #TUIEV_MOUSEMOVE:
      *menuWin.tuiWindow = ntui_GetWindow{*menuItem_}
      If *menuWin\oswin ; are we in the MenuItems Window?
        If !tuiRectHit{*menuWin\obj\bbox,*ev\pos\x,*ev\pos\y}

          If !tuiRectHit{*menuItem_\obj\bbox,*ev\pos\x,*ev\pos\y}
            If *ev\qualifier_&#TUIQUAL_MB ;OR *menuItem_\subTuiWin><Null or *menuItem_\subClassID=#TUIMENU_SUBMENU
              _ntui_ActivateMenuItem{*menuItem_} ; sets also focus
            End If
          Else
            *mover.tuiObject = ntui_HitObject{*menuWin,*ev\pos\x,*ev\pos\y}
            If *mover
              If *mover\classID = #TUICLASS_MENUITEM
                _ntui_DeactivateMenuItem{*menuItem_}
              End If
            End If
          End If

        End If
      End If

    Case #TUIEV_KEYDOWN:
      Select *ev\value
        Case #RAWKEY_RETURN
          If *menuItem_\state=0
            _ntui_ActivateMenuItem{*menuItem_}
          Else
            _ntui_DeactivateMenuItem{*menuItem_}
            If *menuItem_\subTuiWin=Null
              !tuiHandleNotify{done,*menuItem_,onClick,*ev}
              _ntui_CollapseMenu{*menuItem_}
            End If
          End If
          done=True

        Case #RAWKEY_ESC
          _ntui_CollapseMenu{*menuItem_}
          done=True

      End Select

    Case #TUIEV_LOSEFOCUS
      If *menuItem_\subTuiWin
        _ntui_CollapseMenu{*menuItem_}
        _ntui_DeactivateMenuItem{*menuItem_}
      End If
      done=True

    Case #TUIEV_FOCUS
       _ntui_ActivateMenuItem{*menuItem_}

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_DispatchMenuItemEvent,{Null,Null}}



;If *menuItem_\subTuiWin ; are we in a subwindow?
;  inSubWin.l = False
;  *hit.tuiMenuItem=Null
;  If *menuItem_\subTuiWin\oswin ; subwindow is open...
;    *active.tuiMenuItem = *menuItem_\subTuiWin\active
;    If *active Then If *active\obj\typeID><#TUIOBJ_MENUITEM Then *active=Null
;    *focus.tuiMenuItem = *menuItem_\subTuiWin\focus
;    If *focus Then If *focus\obj\typeID><#TUIOBJ_MENUITEM Then *focus=Null
;
;    x.l = !tuiev_ScreenX - *menuItem_\subTuiWin\oswin\LeftEdge
;    y.l = !tuiev_ScreenY - *menuItem_\subTuiWin\oswin\TopEdge
;
;    If x>=0 AND y>=0 AND x<*menuItem_\subTuiWin\oswin\Width AND y<*menuItem_\subTuiWin\oswin\Height ; our pointer is in the subwindow
;      *hit=ntui_HitObject{*menuItem_\subTuiWin\obj\child,x,y} ; hit which object?
;      If *hit\obj\typeID><#TUIOBJ_MENUITEM Then *hit=Null
;      inSubWin=True
;    Else
;      If *focus
;        done.l = _ntui_HandleMenuItem{*focus,*ev}
;      End If
;    End If
;
;    If *hit=Null ;nothing hit?
;      ;*hit=*active
;    End If
;    If *hit
;      If *hit\obj\typeID = #TUIOBJ_MENUITEM ; it's a menu item!
;        done.l = _ntui_HandleMenuItem{*hit,*ev}
;      End If
;    End If
;  End If
;  If release=False Then If inSubWin OR done Then Function Return True
;End If
;
;x.l = !tuiev_ScreenX - *menuItem_\obj\tuiWindow\oswin\LeftEdge
;y.l = !tuiev_ScreenY - *menuItem_\obj\tuiWindow\oswin\TopEdge
;*mover.tuiMenuItem = ntui_HitObject{*menuItem_\obj\tuiWindow,x,y}
;
;done=False
;Select *menuItem_\subTypeID
;  Case #TUIMENU_ITEM
;    If release ; we release mousebutton over MenuItem => close
;      If *mover=*menuItem_
;        *ev\notify = *menuItem_\obj\notify
;      Else
;        *ev\notify = #NOTIFY_NOTHING
;      End If
;      done=False
;      ; we came from a submenu item, so tell it to close
;    End If
;
;    If press
;      If *mover=*menuItem_
;        _ntui_SetFocus{*menuItem_\obj\tuiWindow,*menuItem_}
;        _ntui_SetActive{*menuItem_\obj\tuiWindow,Null }
;        done=True ; activate and do nothing else
;      Else
;        If *menuItem_\obj\tuiWindow\focus=*menuItem_
;          _ntui_SetFocus{*menuItem_\obj\tuiWindow,Null}
;          _ntui_SetActive{*menuItem_\obj\tuiWindow,Null }
;        End If
;      End If
;    End If
;
;  Default ; submenu
;    If release
;      If *menuItem_\sticky=False
;        _ntui_CloseMenuOptions{*menuItem_}
;        done=False
;      Else
;        done=True  ; release over activated submenu
;        *menuItem_\sticky=False
;      End If
;    End If
;
;    If click
;      If *mover=*menuItem_
;        *menuItem_\sticky=True ; active submenu to become sticky
;        _ntui_SetFocus{*menuItem_\obj\tuiWindow,*menuItem_}
;        _ntui_OpenMenuOptions{*menuItem_}
;        done=True
;      End If
;    End If
;
;    If click=False AND release=False
;      If *mover=*menuItem_
;        _ntui_SetFocus{*menuItem_\obj\tuiWindow,*menuItem_}
;        If press><0 OR True
;          _ntui_OpenMenuOptions{*menuItem_}
;        End If
;      Else
;        If *mover
;          If *mover\obj\typeID=#TUIOBJ_MENUITEM
;            _ntui_CloseMenuOptions{*menuItem_}
;            If *mover\subTypeID=#TUIMENU_ITEM
;              _ntui_SetFocus {*menuItem_\obj\tuiWindow,*mover}
;            Else
;              _ntui_OpenMenuOptions{*mover}
;            End If
;          End If
;        End If
;      End If
;    End If
;End Select
;Function Return done
;End Function
;
;

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawMenuItem {*menuItem_.tuiMenuItem,*rp.RastPort}           /
;/                                                                             /
;/ Description:                                                                /
;/     ; we are not interessted in any other events                            /
;/       *hit=ntui_HitObject{*menuItem_\subTuiWin\obj\child,x,y} ; hit whi:: /
;/ ch object?                                                                  /
;/       ;*hit=*active                                                         /
;/       ; we came from a submenu item, so tell it to close                    /
;/ * draw the Menu in all its beauty */                                        /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *menuItem_.tuiMenuItem    : ???                                         /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DrawMenuItem:
Statement _ntui_DrawMenuItem{*menuItem_.tuiMenuItem,*rp.RastPort,*clip.tuiRect}

  !_ASSERT{*menuItem_}
  !_ASSERT{*menuItem_\obj\classID=#TUICLASS_MENUITEM}

  *engine.tuiEngine = *menuItem_\obj\engine
  !_ASSERT{*engine}
  *obj.tuiObject = *menuItem_

  If *menuItem_\state=1 ;OR *menuItem_\obj\flags&#TUIF_MOVER
    bgTuiPen.l = #TUIPEN_MARKER
    fgTuiPen.l = #TUIPEN_ACTIVETEXT
  Else
    bgTuiPen = *menuItem_\obj\bgTuiPen
    fgTuiPen = *menuItem_\obj\fgTuiPen
  End If
  bgTuiPenIcon.l = bgTuiPen
  If bgTuiPenIcon=#TUIPEN_TRANSPARENT Then bgTuiPenIcon=#TUIPEN_BG

  If *menuItem_\subClassID = #TUIMENU_ITEM OR *menuItem_\subClassID = #TUIMENU_SUBMENU
    !tuiCopyRect{gbox.tuiRect,*menuItem_\obj\bbox}
    gbox\right = gbox\left+*engine\defSize[#TUISIZE_INLINE]-1 + !tuiBorderWidth{*obj\padding} + !tuiBorderWidth{*obj\border}
    ;gpen.l = #TUIPEN_BG
    If *engine\fillStyle=1
    ;  _ntui_DrawGradientBox{*menuItem_\obj\engine,*rp,gbox,bgTuiPenIcon,#TUIORIENT_INVVERTICAL}
    Else
      ;FillPixelArray_ *rp,gbox\left,gbox\top,gbox\right-gbox\left+1,gbox\bottom-gbox\top+1,*engine\penInfo[#TUIPEN_HALFHALFSHADOW]\rgb_
      SetAPen_ *rp,*engine\pen[bgTuiPenIcon]
    ;  RectFill_ *rp,gbox\left,gbox\top,gbox\right,gbox\bottom
    End If
    ;SetAPen_ *rp,*menuItem_\obj\engine\pen[#TUIPEN_HALFSHINE]
    ;Move_ *rp,gbox\right,gbox\top
    ;Draw_ *rp,gbox\right,gbox\bottom
    ;SetAPen_ *rp,*menuItem_\obj\engine\pen[#TUIPEN_HALFSHADOW]
    ;Move_ *rp,gbox\right-1,gbox\top
    ;Draw_ *rp,gbox\right-1,gbox\bottom
  ;Else
   ; bgTuiPenIcon = bgTuiPen
  End If

  ;If *menuItem_\obj\flags&#TUIF_MOVER Then fgTuiPen = #TUIPEN_ACTIVETEXT:bgTuiPen.l = #TUIPEN_MARKER
  bgTuiPen = _ntui_DrawBG{*engine,*rp,*menuItem_\obj\bbox,*menuItem_\obj\ibox,*clip,Null,bgTuiPen,*menuItem_\obj\borderType,*menuItem_\obj\flags,#TUIORIENT_HORIZONTAL}
  ;fgTuiPen = #TUIPEN_ACTIVETEXT

  If *menuItem_\subClassID = #TUIMENU_ITEM OR *menuItem_\subClassID = #TUIMENU_SUBMENU
    !tuiCopyRect{gbox.tuiRect,*menuItem_\obj\ibox}
    gbox\right = gbox\left+*engine\defSize[#TUISIZE_INLINE]-1 + !tuiBorderWidth{*obj\padding} + !tuiBorderWidth{*obj\border}

    ;gpen.l = #TUIPEN_BG
    ;If bgTuiPen><#TUIPEN_TRANSPARENT Then gpen = bgTuiPenIcon
    If *engine\fillStyle=1
     ; _ntui_DrawGradientBox{*menuItem_\obj\engine,*rp,gbox,bgTuiPenIcon,#TUIORIENT_INVVERTICAL}
      bgTuiPenIcon.l = #TUIPEN_TRANSPARENT

    Else
      ;FillPixelArray_ *rp,gbox\left,gbox\top,gbox\right-gbox\left+1,gbox\bottom-gbox\top+1,*engine\penInfo[#TUIPEN_HALFHALFSHADOW]\rgb_
      SetAPen_ *rp,*engine\pen[bgTuiPenIcon]
      ;RectFill_ *rp,gbox\left,gbox\top,gbox\right,gbox\bottom
    End If
    ;SetAPen_ *rp,*menuItem_\obj\engine\pen[#TUIPEN_HALFSHINE]
    ;Move_ *rp,gbox\right,gbox\top
    ;Draw_ *rp,gbox\right,gbox\bottom
    ;SetAPen_ *rp,*menuItem_\obj\engine\pen[#TUIPEN_HALFSHADOW]
    ;Move_ *rp,gbox\right-1,gbox\top
    ;Draw_ *rp,gbox\right-1,gbox\bottom
  ;Else
  ;  bgTuiPenIcon = bgTuiPen
  End If

  If bgTuiPen=#TUIPEN_TRANSPARENT Then bgTuiPenIcon = bgTuiPen

  !tuiCopyRect{cbox.tuiRect,*obj\cbox}
  !tuiCopyRect{ibox.tuiRect,*obj\ibox}

  x1.l = ibox\left
  x2.l = ibox\right

  If *menuItem_\link_
    ibox\left  = x2-ntui_GetTBImageWidth{*menuItem_\link_}+1 - !tuiBorderWidth{*obj\padding}
    ibox\right = x2
    ntui_DrawTBImage{*menuItem_\link_,*rp,ibox,ibox,*obj\flags,bgTuiPen}
    x2 = ibox\left-1
  End If

  If *menuItem_\shortcut
    tuifont.l = _ntui_SetFont{*engine,*obj\flags}
    _ntui_GetTextRect{*engine,*menuItem_\shortcut,tx.tuiRect,*obj\flags,*rp}
    xs.l = !tuiRectWidth{tx} + !tuiBorderWidth{*obj\padding}
    If xs<*engine\font[tuifont]\tf_YSize Then xs=*engine\font[tuifont]\tf_YSize
    ibox\left  = x2-xs+1
    ibox\right = x2
    _ntui_Print{*engine,*menuItem_\shortcut,ibox,ibox,(*menuItem_\obj\flags|#TUIF_CENTER|#TUIF_LEFT)-#TUIF_LEFT,*rp,fgTuiPen,bgTuiPen}
    x2 = ibox\left-1
  End If

  If *menuItem_\amiga_
    ibox\left  = x2-ntui_GetTBImageWidth{*menuItem_\amiga_}+1 - !tuiBorderWidth{*obj\padding}/2
    ibox\right = x2
    ntui_DrawTBImage{*menuItem_\amiga_,*rp,ibox,ibox,*menuItem_\obj\flags,bgTuiPen}
    x2 = ibox\left-1
  End If

  If *menuItem_\alt
    ibox\left  = x2-ntui_GetTBImageWidth{*menuItem_\alt}+1  - !tuiBorderWidth{*obj\padding}/2
    ibox\right = x2
    ntui_DrawTBImage{*menuItem_\alt,*rp,ibox,ibox,*menuItem_\obj\flags,bgTuiPen}
    x2 = ibox\left-1
  End If

  If *menuItem_\ctrl
    ibox\left  = x2-ntui_GetTBImageWidth{*menuItem_\ctrl}+1 - !tuiBorderWidth{*obj\padding}/2
    ibox\right = x2
    ntui_DrawTBImage{*menuItem_\ctrl,*rp,ibox,ibox,*menuItem_\obj\flags,bgTuiPen}
    x2 = ibox\left-1
  End If

  If *menuItem_\shift
    ibox\left  = x2-ntui_GetTBImageWidth{*menuItem_\shift}+1 - !tuiBorderWidth{*obj\padding}/2
    ibox\right = x2
    ntui_DrawTBImage{*menuItem_\shift,*rp,ibox,ibox,*menuItem_\obj\flags,bgTuiPen}
    x2 = ibox\left-1
  End If

  If *menuItem_\tbi
    ibox\left  = x1
    ;If *menuItem_\obj\string
      ibox\right = x1+ntui_GetTBImageWidth{*menuItem_\tbi}-1 + !tuiBorderWidth{*obj\padding}
    ;Else
    ;  ibox\right = x2
    ;End If
    ntui_DrawTBImage{*menuItem_\tbi,*rp,ibox,ibox,*obj\flags,bgTuiPenIcon}
    x1 = ibox\right+1
  Else
    x1 = x1+*menuItem_\obj\engine\defSize[#TUISIZE_INLINE] + !tuiBorderWidth{*obj\padding}
  End If

  If *menuItem_\obj\string
    ibox\left  = x1
    ibox\right = x2
    cbox\left  = ibox\left + *obj\padding\left
    cbox\right = ibox\right - *obj\padding\right
    _ntui_Print{*engine,*menuItem_\obj\string,ibox,cbox,*menuItem_\obj\flags,*rp,fgTuiPen,bgTuiPen}
  End If

  If (*menuItem_\obj\flags&#TUIF_FOCUS)
    If ((*menuItem_\obj\flags&#TUIF_ACTIVE)=0)
      _ntui_DrawDottedBorder{*menuItem_\obj\engine,*rp,*menuItem_\obj\cbox,*menuItem_\obj\flags}
    End If
  End If


End Statement
!_MakeGlobalFuncPointer{_ntui_DrawMenuItem,{Null,Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetMenuItemMinSize {*menuItem_.tuiMenuItem,*rp:: /
;/ .RastPort}                                                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * calculate the minimum size for the Menu */                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *menuItem_.tuiMenuItem    : ???                                         /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_CalculateMenuItemMinSize:
Statement _ntui_CalculateMenuItemMinSize{*menuItem_.tuiMenuItem,*rp.RastPort}
  !_ASSERT{*menuItem_}
  !_ASSERT{*menuItem_\obj\classID=#TUICLASS_MENUITEM}

  *engine.tuiEngine = *menuItem_\obj\engine
  !_ASSERT{*engine}
  *obj.tuiObject = *menuItem_

  _ntui_GetBorderSize{*engine,*obj\borderType,*obj\flags,*obj\border}

  *obj\minsize\x  = 0
  *obj\minsize\y  = 0

  hasShortcut.l  = False
  hasQualifier.l = False
  hasIcon.l      = False

  If *obj\string
    _ntui_GetTextRect{*engine,*obj\string,tx.tuiRect,*obj\flags,*rp}
    *obj\minsize\x  = !tuiRectWidth{tx} + !tuiBorderWidth{*obj\padding}
    *obj\minsize\y  = !tuiRectHeight{tx}
  End If

  If *menuItem_\shortcut
    _ntui_GetTextRect{*engine,*menuItem_\shortcut,tx.tuiRect,*obj\flags,*rp}

    tuifont.l = _ntui_SetFont{*engine,*obj\flags}
    xs.l = !tuiRectWidth{tx} + !tuiBorderWidth{*obj\padding}
    If xs<*engine\font[tuifont]\tf_YSize Then xs=*engine\font[tuifont]\tf_YSize

    *obj\minsize\x  + xs;!tuiRectWidth{tx} + !tuiBorderWidth{*obj\padding}
    If !tuiRectHeight{tx}>*obj\minsize\y Then *obj\minsize\y = !tuiRectHeight{tx}
    hasShortcut = True
  End If

  If *menuItem_\tbi
    *obj\minsize\x + ntui_GetTBImageWidth{*menuItem_\tbi} + !tuiBorderWidth{*obj\padding}
    If (ntui_GetTBImageHeight{*menuItem_\tbi}>*obj\minsize\y) Then *obj\minsize\y =  ntui_GetTBImageHeight{*menuItem_\tbi}
    hasIcon = True
  End If

  If *menuItem_\ctrl
    *obj\minsize\x + ntui_GetTBImageWidth{*menuItem_\ctrl} + !tuiBorderWidth{*obj\padding}/2
    If (ntui_GetTBImageHeight{*menuItem_\ctrl}>*obj\minsize\y) Then *obj\minsize\y =  ntui_GetTBImageHeight{*menuItem_\ctrl}
    hasQualifier = True
  End If

  If *menuItem_\shift
    *obj\minsize\x + ntui_GetTBImageWidth{*menuItem_\shift} + !tuiBorderWidth{*obj\padding}/2
    If (ntui_GetTBImageHeight{*menuItem_\shift}>*obj\minsize\y) Then *obj\minsize\y =  ntui_GetTBImageHeight{*menuItem_\shift}
    hasQualifier = True
  End If

  If *menuItem_\alt
    *obj\minsize\x + ntui_GetTBImageWidth{*menuItem_\alt} + !tuiBorderWidth{*obj\padding}/2
    If (ntui_GetTBImageHeight{*menuItem_\alt}>*obj\minsize\y) Then *obj\minsize\y =  ntui_GetTBImageHeight{*menuItem_\alt}
    hasQualifier = True
  End If

  If *menuItem_\amiga_
    *obj\minsize\x + ntui_GetTBImageWidth{*menuItem_\amiga_} + !tuiBorderWidth{*obj\padding}/2
    If (ntui_GetTBImageHeight{*menuItem_\amiga_}>*obj\minsize\y) Then *obj\minsize\y =  ntui_GetTBImageHeight{*menuItem_\amiga_}
    hasQualifier = True
  End If

  If *menuItem_\link_
    *obj\minsize\x + ntui_GetTBImageWidth{*menuItem_\link_} + !tuiBorderWidth{*obj\padding}
    If (ntui_GetTBImageHeight{*menuItem_\link_}>*obj\minsize\y) Then *obj\minsize\y =  ntui_GetTBImageHeight{*menuItem_\link_}
    hasShortcut = True
  End If

  If *menuItem_\subTuiWin
    _ntui_CalculateMinSize{*menuItem_\subTuiWin,*rp}
  End If

  If hasShortcut  = False Then *obj\minsize\x + *engine\defSize[#TUISIZE_INLINE] + !tuiBorderWidth{*obj\padding}
  If hasIcon      = False Then *obj\minsize\x + *engine\defSize[#TUISIZE_INLINE] + !tuiBorderWidth{*obj\padding}
  If hasQualifier = False Then *obj\minsize\x + *engine\defSize[#TUISIZE_INLINE] + !tuiBorderWidth{*obj\padding}/2

  *obj\minsize\x + !tuiBorderWidth{*obj\border}
  *obj\minsize\y + !tuiBorderHeight{*obj\padding} + !tuiBorderHeight{*obj\border}

End Statement
!_MakeGlobalFuncPointer{_ntui_CalculateMenuItemMinSize,{Null,Null}}


_ntui_LayoutMenuItem:
Statement _ntui_LayoutMenuItem{*menuItem_.tuiMenuItem,*rp.RastPort,*bbox.tuiRect}
  !_ASSERT{*menuItem_}
  !_ASSERT{*menuItem_\obj\classID=#TUICLASS_MENUITEM}
  !_ASSERT{*rp}
  *obj.tuiObject = *menuItem_

  If *bbox
    !tuiCopyRect{*obj\bbox,*bbox}
  End If
  !tuiRemBorder{*obj\ibox,*obj\bbox,*obj\border}
  !tuiRemBorder{*obj\cbox,*obj\ibox,*obj\padding}

  If *menuItem_\subTuiWin
    ;*child.tuiObject=*menuItem_\subTuiWin\obj\child
    ;sbox.tuiRect\left = 0,0,*child\minsize\x,*child\minsize\y
    _ntui_Layout{*menuItem_\subTuiWin,*rp,Null};sbox}
  End If

End Statement
!_MakeGlobalFuncPointer{_ntui_LayoutMenuItem,{Null,Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_FreeMenuItem {*menuItem_.tuiMenuItem}                       /
;/                                                                             /
;/ Description:                                                                /
;/  If *menuItem_\img\height >*menuItem_\obj\minsize\y Then *menuItem_:: /
;/ \obj\minsize\y = *menuItem_\img\height                                    /
;/  If *menuItem_\linkimg\height >*menuItem_\obj\minsize\y Then *objMenu:: /
;/ Item\obj\minsize\y = *menuItem_\linkimg\height                            /
;/  If *menuItem_\ami\height >*menuItem_\obj\minsize\y Then *menuItem_:: /
;/ \obj\minsize\y = *menuItem_\ami\height                                    /
;/  If *menuItem_\ctrl\height >*menuItem_\obj\minsize\y Then *objMenuIte:: /
;/ m\obj\minsize\y = *menuItem_\ctrl\height                                  /
;/  If *menuItem_\shift\height >*menuItem_\obj\minsize\y Then *objMenuIt:: /
;/ em\obj\minsize\y = *menuItem_\shift\height                                /
;/  If *menuItem_\alt\height >*menuItem_\obj\minsize\y Then *menuItem_:: /
;/ \obj\minsize\y = *menuItem_\alt\height                                    /
;/ * free everything special that we allocated for the Menu */                 /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *menuItem_.tuiMenuItem    : ???                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DeinitMenuItem:
Statement _ntui_DeinitMenuItem{*menuItem_.tuiMenuItem}
  !_ASSERT{*menuItem_}
  !_ASSERT{*menuItem_\obj\classID=#TUICLASS_MENUITEM}

  If *menuItem_\tbi    Then ntui_FreeTBImage{*menuItem_\tbi   }  : *menuItem_\tbi    = Null
  If *menuItem_\amiga_ Then ntui_FreeTBImage{*menuItem_\amiga_}  : *menuItem_\amiga_ = Null
  If *menuItem_\ctrl   Then ntui_FreeTBImage{*menuItem_\ctrl  }  : *menuItem_\ctrl   = Null
  If *menuItem_\alt    Then ntui_FreeTBImage{*menuItem_\alt   }  : *menuItem_\alt    = Null
  If *menuItem_\shift  Then ntui_FreeTBImage{*menuItem_\shift }  : *menuItem_\shift  = Null
  If *menuItem_\link_  Then ntui_FreeTBImage{*menuItem_\link_ }  : *menuItem_\link_  = Null

  If *menuItem_\subTuiWin
   ; _ntui_CloseMenuOptions{*menuItem_,False}
    ;ntui_HideWindow{*menuItem_\subTuiWin}
    ;*menuItem_\obj\child = *menuItem_\subTuiWin
    ;*menuItem_\subTuiWin = Null
  End If
  !tuiFreeNotifyHandler{*menuItem_\onClick}

  ntui_UnregisterHotKey{*menuItem_,-1,-1,-1} ; all keys

End Statement
!_MakeGlobalFuncPointer{_ntui_DeinitMenuItem,{Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_MenuItem {name.s,@imagefile.s,@short.s,@notify.l,:: /
;/ @help.s,@flags.l,@itemID.l}                                                 /
;/                                                                             /
;/ Description:                                                                /
;/   ix2.l = x2-xs+1;-1- *engine\defPad\x                                   /
;/ * create function for tui Menu */                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - name.s    : ???                                                           /
;/ - imagefile.s    : ???                                                      /
;/ - short.s    : ???                                                          /
;/ - notify.l    : ???                                                         /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - itemID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
ntui_MenuItem:
Function.tuiMenuItem ntui_MenuItem{*tagList.TagItem}

  flags.l = #TUIF_LEFT|#TUIF_MIDDLE|#TUIF_FIXSIZE|#TUIF_WANTMOVER|#TUIF_WANTTAB
  *menuItem_.tuiMenuItem = (.tuiMenuItem)_ntui_CreateObject{#TUICLASS_MENUITEM,SizeOf.tuiMenuItem,flags}
  If *menuItem_
    *menuItem_\subTuiWin            = Null
    *menuItem_\link_                = Null
    *menuItem_\tbi                  = Null
    *menuItem_\amiga_               = Null
    *menuItem_\alt                  = Null
    *menuItem_\ctrl                 = Null
    *menuItem_\shift                = Null
    *menuItem_\subClassID           = #TUIMENU_ITEM
    *menuItem_\obj\borderType       = #TUIBORDER_TOOL
    *menuItem_\shortqual            = 0
    *menuItem_\shortkey             = 0
    *menuItem_\shortcut             = Null
    *menuItem_\shortdisabled        = False
    *menuItem_\obj\margin\left      = 0,0,0,0

    *menuItem_\obj\Draw             = *_ntui_DrawMenuItem
    *menuItem_\obj\Layout           = Null ;*_ntui_LayoutMenuItem
    *menuItem_\obj\DispatchEvent    = *_ntui_DispatchMenuItemEvent
    *menuItem_\obj\CalculateMinSize = *_ntui_CalculateMenuItemMinSize
    *menuItem_\obj\Deinit           = *_ntui_DeinitMenuItem
    *menuItem_\obj\SetAttr          = *_ntui_SetMenuItemAttr
    *menuItem_\obj\GetAttr          = *_ntui_GetMenuItemAttr

    !tuiInitNotifyHandler{*menuItem_\onClick}

    If *tagList Then ntui_SetAttrs{*menuItem_,*tagList}

  End If

  Function Return *menuItem_

End Function
!_MakeGlobalFuncPointer{ntui_MenuItem,{Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_BeginMenuTitle {name.s,@imagefile.s,@help.s,@flag:: /
;/ s.l,@itemID.l}                                                              /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - name.s    : ???                                                           /
;/ - imagefile.s    : ???                                                      /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - itemID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
;#NTUI_MENUWFLGS = #WFLG_BORDERLESS|#WFLG_SIMPLE_REFRESH|#WFLG_NOCAREREFRESH
#NTUI_MENUWFLGS = #WFLG_BORDERLESS|#WFLG_SMART_REFRESH
ntui_BeginMenuTitle:
Function.tuiMenuItem ntui_BeginMenuTitle{*tagList.TagItem}

  DEFTYPE.tagL10 ltagList : n.l = 0
  ltagList\tag[n]\ti_Tag = #TUIA_BORDERTYPE   ,#TUIBORDER_TOOL     : n=n+1
  ltagList\tag[n]\ti_Tag = #TUIMIA_SUBCLASSID ,#TUIMENU_DROPDOWN   : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE          ,0
  *menuItem_.tuiMenuItem = ntui_MenuItem{ltagList}

  If *menuItem_
    ;*menuItem_\link_    = ntui_CreateTBImage{*menuItem_\obj\engine,"DROPDOWN",#TUISIZE_KNOB,#TUISIZE_KNOB}
    _ntui_BeginChildren{*menuItem_}
    n=0
;    ltagList\tag[n]\ti_Tag = #TUIWA_OSWINFLAGS  ,#NTUI_MENUWFLGS  : n=n+1
    ltagList\tag[n]\ti_Tag = #TUIWA_BORDERLESS  ,True             : n=n+1
    ltagList\tag[n]\ti_Tag = #TUIA_SETFLAGS     ,#TUIF_FIXSIZE    : n=n+1
    ltagList\tag[n]\ti_Tag = #TAG_DONE          ,0

    *subWin.tuiWindow = ntui_BeginWindow{ltagList}
    If *subWin
      *subWin\obj\padding\left = 0,0,0,0
      *group.tuiGroup = ntui_BeginGroup{Null}
      If *group
        *group\obj\borderType = #TUIBORDER_RAISED
      End If
    End If
    *menuItem_\subTuiWin   = *subWin

    If *tagList Then ntui_SetAttrs{*menuItem_,*tagList}

  End If

  Function Return *menuItem_

End Function
!_MakeGlobalFuncPointer{ntui_BeginMenuTitle,{Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_BeginDropDown {name.s,@imagefile.s,@help.s,@flags:: /
;/ .l,@itemID.l}                                                               /
;/                                                                             /
;/ Description:                                                                /
;/   *menuItem_\linkimg             = Null;ntui_CreateTBImage{*tuiMenuIt:: /
;/ em\obj\engine,"ARROWDOWN",#TUISIZE_KNOB,#TUISIZE_KNOB}                   /
;/ * create function for tui Menu */                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - name.s    : ???                                                           /
;/ - imagefile.s    : ???                                                      /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - itemID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
ntui_BeginDropDown:
Function.tuiMenuItem ntui_BeginDropDown{*tagList.TagItem}

  DEFTYPE.tagL10 ltagList : n.l = 0
  ltagList\tag[n]\ti_Tag = #TUIA_BORDERTYPE   ,#TUIBORDER_BUTTON   : n=n+1
  ltagList\tag[n]\ti_Tag = #TUIA_BGPEN        ,#TUIPEN_HALFSHINE   : n=n+1
  ltagList\tag[n]\ti_Tag = #TUIMIA_SUBCLASSID ,#TUIMENU_DROPDOWN   : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE          ,0
  *menuItem_.tuiMenuItem = ntui_BeginMenuTitle{ltagList}

  If *menuItem_
    !tuiCopyRect{*menuItem_\obj\margin,*menuItem_\obj\engine\defMargin}
    *menuItem_\link_    = ntui_CreateTBImage{*menuItem_\obj\engine,"DROPDOWN",#TUISIZE_KNOB,#TUISIZE_KNOB}
    If *tagList Then ntui_SetAttrs{*menuItem_,*tagList}

  End If

  Function Return *menuItem_

End Function
!_MakeGlobalFuncPointer{ntui_BeginDropDown,{Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_BeginPopUp {name.s,@imagefile.s,@help.s,@flags.l,:: /
;/ @itemID.l}                                                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * create function for tui Menu */                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - name.s    : ???                                                           /
;/ - imagefile.s    : ???                                                      /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - itemID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
ntui_BeginPopUp:
Function.tuiMenuItem ntui_BeginPopUp{*tagList.TagItem}

  DEFTYPE.tagL10 ltagList : n.l = 0
  ltagList\tag[n]\ti_Tag = #TUIA_BORDERTYPE   ,#TUIBORDER_BUTTON   : n=n+1
  ltagList\tag[n]\ti_Tag = #TUIA_BGPEN        ,#TUIPEN_HALFSHINE   : n=n+1
  ltagList\tag[n]\ti_Tag = #TUIMIA_SUBCLASSID ,#TUIMENU_POPUP      : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE          ,0
  *menuItem_.tuiMenuItem = ntui_BeginMenuTitle{ltagList}

  If *menuItem_
    !tuiCopyRect{*menuItem_\obj\margin,*menuItem_\obj\engine\defMargin}
    *menuItem_\link_    = ntui_CreateTBImage{*menuItem_\obj\engine,"POPUP",#TUISIZE_KNOB,#TUISIZE_KNOB}
    If *tagList Then ntui_SetAttrs{*menuItem_,*tagList}
  End If

  Function Return *menuItem_

End Function
!_MakeGlobalFuncPointer{ntui_BeginPopUp,{Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_BeginSubMenu {name.s,@imagefile.s,@help.s,@flags.:: /
;/ l,@itemID.l}                                                                /
;/                                                                             /
;/ Description:                                                                /
;/ * create function for tui Menu */                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - name.s    : ???                                                           /
;/ - imagefile.s    : ???                                                      /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - itemID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
ntui_BeginSubMenu:
Function.tuiMenuItem ntui_BeginSubMenu{*tagList.TagItem}

  DEFTYPE.tagL10 ltagList : n.l = 0
  ltagList\tag[n]\ti_Tag = #TUIA_BORDERTYPE   ,#TUIBORDER_TOOL   : n=n+1
  ltagList\tag[n]\ti_Tag = #TUIMIA_SUBCLASSID ,#TUIMENU_SUBMENU  : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE          ,0
  *menuItem_.tuiMenuItem = ntui_BeginMenuTitle{ltagList}

  If *menuItem_
    *menuItem_\link_    = ntui_CreateTBImage{*menuItem_\obj\engine,"RIGHT",#TUISIZE_KNOB,#TUISIZE_KNOB}
    If *tagList Then ntui_SetAttrs{*menuItem_,*tagList}
  End If

  Function Return *menuItem_

End Function
!_MakeGlobalFuncPointer{ntui_BeginSubMenu,{Null}}


ntui_EndMenu:
Function.tuiMenuItem ntui_EndMenu{}

  ntui_EndGroup{}
  ntui_EndWindow{}
  *menuItem_.tuiMenuItem = (.tuiMenuItem)_ntui_EndChildren{#TUICLASS_MENUITEM}
  Function Return *menuItem_

End Function
!_MakeGlobalFuncPointer{ntui_EndMenu,{}}


Statement ntui_InitMenuItemClass{}

  classID.l = ntui_RegisterClass{"menuitem",(.tuiFunc)*ntui_MenuItem,Null}

  ntui_RegisterAttr{classID,"image"         , #TUIMIA_IMAGE        ,#TUIAT_STRING , 0,0 }
  ntui_RegisterAttr{classID,"toggle"        , #TUIMIA_TOGGLE       ,#TUIAT_BOOL   , 0,0 }
  ntui_RegisterAttr{classID,"checked"       , #TUIMIA_CHECKED      ,#TUIAT_BOOL   , 0,0 }
  ntui_RegisterAttr{classID,"shortcut"      , #TUIMIA_SHORTCUT     ,#TUIAT_STRING , 0,0 }
  ntui_RegisterAttr{classID,"label"         , #TUIMIA_LABEL        ,#TUIAT_STRING , 0,0 }
  ntui_RegisterAttr{classID,"onclick"      ,  #TUIMIA_ONCLICK      ,#TUIAT_STRING , 0,0 }
  ntui_RegisterAttr{classID,"onclickcb"     , #TUIMIA_ONCLICKCB    ,#TUIAT_PTR    , 0,0 }

  classID.l = ntui_RegisterClass{"menutitle",(.tuiFunc)*ntui_BeginMenuTitle,(.tuiFunc)*ntui_EndMenu}

  ntui_RegisterAttr{classID,"image"         , #TUIMIA_IMAGE        ,#TUIAT_STRING , 0,0 }
  ntui_RegisterAttr{classID,"label"         , #TUIMIA_LABEL        ,#TUIAT_STRING , 0,0 }

  classID.l = ntui_RegisterClass{"submenu",(.tuiFunc)*ntui_BeginSubMenu,(.tuiFunc)*ntui_EndMenu}

  ntui_RegisterAttr{classID,"image"         , #TUIMIA_IMAGE        ,#TUIAT_STRING , 0,0 }
  ntui_RegisterAttr{classID,"label"         , #TUIMIA_LABEL        ,#TUIAT_STRING , 0,0 }

  classID.l = ntui_RegisterClass{"dropdown",(.tuiFunc)*ntui_BeginDropDown,(.tuiFunc)*ntui_EndMenu}

  ntui_RegisterAttr{classID,"image"         , #TUIMIA_IMAGE        ,#TUIAT_STRING , 0,0 }
  ntui_RegisterAttr{classID,"label"         , #TUIMIA_LABEL        ,#TUIAT_STRING , 0,0 }

  classID.l = ntui_RegisterClass{"popup",(.tuiFunc)*ntui_BeginPopUp,(.tuiFunc)*ntui_EndMenu}

  ntui_RegisterAttr{classID,"image"         , #TUIMIA_IMAGE        ,#TUIAT_STRING , 0,0 }
  ntui_RegisterAttr{classID,"label"         , #TUIMIA_LABEL        ,#TUIAT_STRING , 0,0 }
End Statement

ntui_InitMenuItemClass{}
