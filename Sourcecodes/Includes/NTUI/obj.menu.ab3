; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 745
; CursorColumn    = 14
; LabelSearch     = ""
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: ntui_menu.include                                                     /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 06/01/2009                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
optimize 7
Syntax 2

#TUIMENU_ITEM      = 1
#TUIMENU_SUBMENU   = 2
#TUIMENU_POPUP     = 3
#TUIMENU_DROPDOWN  = 4
#TUIMENU_SEPERATOR = 5

NEWTYPE.tuiMenuItem
obj.tuiObject
subTypeID.l
*img.tuiTBImage
*linkimg.tuiTBImage
*alt.tuiTBImage
*shift.tuiTBImage
*ami.tuiTBImage
*ctrl.tuiTBImage
*subTuiWin.tuiWindow
*masterTuiWin.tuiWindow
subSize.tuiPixel
shortkey.l
shortqual.l
*shortstr.str
shortTE.TextExtent
state.l
sticky.l
End NEWTYPE


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_CloseMenuOptions {*tuiMenuItem.tuiMenuItem}                   /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiMenuItem.tuiMenuItem    : ???                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement _ntui_CloseMenuOptions{*tuiMenuItem.tuiMenuItem}
If *tuiMenuItem=!_NULL Then Statement Return
If *tuiMenuItem\obj\typeID><#TUIOBJ_MENUITEM Then Statement Return
If *tuiMenuItem\subTuiWin
  _ntui_CloseMenuOptions{*tuiMenuItem\subTuiWin\active}
  ntui_HideWindow{*tuiMenuItem\subTuiWin}
End If
If *tuiMenuItem\obj\tuiWindow\active=*tuiMenuItem
  _ntui_SetActive{*tuiMenuItem\obj\tuiWindow,!_NULL}
End If
*tuiMenuItem\sticky=False
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_OpenMenuOptions {*tuiMenuItem.tuiMenuItem}                    /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiMenuItem.tuiMenuItem    : ???                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement _ntui_OpenMenuOptions{*tuiMenuItem.tuiMenuItem}
*tuiEngine.tuiEngine = *tuiMenuItem\obj\tuiEngine
*win.Window = *tuiMenuItem\obj\tuiWindow\win
If *win=!_NULL Then Statement Return
If *tuiMenuItem\subTuiWin\win Then Statement Return
xs.l = *tuiMenuItem\subTuiWin\obj\size\x
ys.l = *tuiMenuItem\subTuiWin\obj\size\y

Select *tuiMenuItem\subTypeID
  Case #TUIMENU_DROPDOWN
    x.l = *tuiMenuItem\obj\pos\x                            + *win\LeftEdge- *tuiMenuItem\obj\border\west
    y.l = *tuiMenuItem\obj\pos\y + *tuiMenuItem\obj\size\y  + *win\TopEdge + *tuiMenuItem\obj\border\north
  Case #TUIMENU_POPUP
    x.l = *tuiMenuItem\obj\pos\x                            + *win\LeftEdge - *tuiMenuItem\obj\border\west
    y.l = *tuiMenuItem\obj\pos\y - ys + *win\TopEdge        - *tuiMenuItem\obj\border\south     ;  - *tuiEngine\defPad\y
  Case #TUIMENU_SUBMENU
    x.l = *tuiMenuItem\obj\pos\x + *tuiMenuItem\obj\size\x  + *win\LeftEdge - *tuiMenuItem\obj\border\west - 2
    y.l = *tuiMenuItem\obj\pos\y + *win\TopEdge             - *tuiMenuItem\obj\border\north -1    - *tuiEngine\defPad\y
End Select
_ntui_SetFocus {*tuiMenuItem\subTuiWin,!_NULL}
_ntui_SetActive{*tuiMenuItem\subTuiWin,!_NULL}
_ntui_SetMover {*tuiMenuItem\subTuiWin,!_NULL}
_ntui_SetMover {*tuiMenuItem\obj\tuiWindow,!_NULL}
_ntui_SetActive{*tuiMenuItem\obj\tuiWindow,*tuiMenuItem}
_ntui_SetFocus {*tuiMenuItem\obj\tuiWindow,*tuiMenuItem}
ntui_CauseEvent{#NOTIFY_INTERNAL_SHOW,*tuiMenuItem\subTuiWin,x,y,xs,ys}
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.w = _ntui_HandleMenuItem {*tuiMenuItem.tuiMenuItem,*tuiEve:: /
;/ nt.tuiEvent}                                                                /
;/                                                                             /
;/ Description:                                                                /
;/     y.l = *tuiMenuItem\obj\pos\y - ys + *win\TopEdge        - *tuiMenuIte:: /
;/ m\obj\border\south     ;  - *tuiEngine\defPad\y                             /
;/ * do what happens if the user operates a MenuItem */                        /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiMenuItem.tuiMenuItem    : ???                                         /
;/ - *tuiEvent.tuiEvent    : ???                                               /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.w _ntui_HandleMenuItemx{*tuiMenuItem.tuiMenuItem,*tuiEvent.tuiEvent}
If *tuiMenuItem\obj\typeID><#TUIOBJ_MENUITEM Then Function Return False
click.l = False : release.l = False  : press.l = False : done.w = False
Select *tuiEvent\msg\Class
  Case #IDCMP_MOUSEBUTTONS : click=!tuiev_MouseClick : release=!tuiev_MouseRelease : press = !ntui_MouseButtonStatus{1}
  Case #IDCMP_MOUSEMOVE    : click=False                        : release=False                : press = !ntui_MouseButtonStatus{1}
  Default
    ; we are not interessted in any other events
    Function Return False
End Select

If *tuiMenuItem\subTuiWin ; are we in a subwindow?

End If

Function Return done
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.w = _ntui_HandleMenuItemx {*tuiMenuItem.tuiMenuItem,*tuiEv:: /
;/ ent.tuiEvent}                                                               /
;/                                                                             /
;/ Description:                                                                /
;/     ; we are not interessted in any other events                            /
;/ * do what happens if the user operates a MenuItem */                        /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiMenuItem.tuiMenuItem    : ???                                         /
;/ - *tuiEvent.tuiEvent    : ???                                               /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.w _ntui_HandleMenuItem{*tuiMenuItem.tuiMenuItem,*tuiEvent.tuiEvent}
If *tuiMenuItem\obj\typeID><#TUIOBJ_MENUITEM Then Function Return False
click.l = False : release.l = False  : press.l = False : done.w = False
Select *tuiEvent\msg\Class
  Case #IDCMP_MOUSEBUTTONS : click=!tuiev_MouseClick : release=!tuiev_MouseRelease : press = !ntui_MouseButtonStatus{1}
  Case #IDCMP_MOUSEMOVE    : click=False                        : release=False                : press = !ntui_MouseButtonStatus{1}
  Default
    ; we are not interessted in any other events
    Function Return False
End Select


If *tuiMenuItem\subTuiWin ; are we in a subwindow?
  inSubWin.l = False
  *hit.tuiMenuItem=!_NULL
  If *tuiMenuItem\subTuiWin\win ; subwindow is open...
    *active.tuiMenuItem = *tuiMenuItem\subTuiWin\active
    If *active Then If *active\obj\typeID><#TUIOBJ_MENUITEM Then *active=!_NULL
    *focus.tuiMenuItem = *tuiMenuItem\subTuiWin\focus
    If *focus Then If *focus\obj\typeID><#TUIOBJ_MENUITEM Then *focus=!_NULL

    x.l = !tuiev_ScreenX - *tuiMenuItem\subTuiWin\win\LeftEdge
    y.l = !tuiev_ScreenY - *tuiMenuItem\subTuiWin\win\TopEdge

    If x>=0 AND y>=0 AND x<*tuiMenuItem\subTuiWin\win\Width AND y<*tuiMenuItem\subTuiWin\win\Height ; our pointer is in the subwindow
      *hit=ntui_HitObject{*tuiMenuItem\subTuiWin\obj\child,x,y} ; hit which object?
      If *hit\obj\typeID><#TUIOBJ_MENUITEM Then *hit=!_NULL
      inSubWin=True
    Else
      If *focus
        done.w = _ntui_HandleMenuItem{*focus,*tuiEvent}
      End If
    End If

    If *hit=!_NULL ;nothing hit?
      ;*hit=*active
    End If
    If *hit
      If *hit\obj\typeID = #TUIOBJ_MENUITEM ; it's a menu item!
        done.w = _ntui_HandleMenuItem{*hit,*tuiEvent}
      End If
    End If
  End If
  If release=False Then If inSubWin OR done Then Function Return True
End If

x.l = !tuiev_ScreenX - *tuiMenuItem\obj\tuiWindow\win\LeftEdge
y.l = !tuiev_ScreenY - *tuiMenuItem\obj\tuiWindow\win\TopEdge
*mover.tuiMenuItem = ntui_HitObject{*tuiMenuItem\obj\tuiWindow,x,y}

done=False
Select *tuiMenuItem\subTypeID
  Case #TUIMENU_ITEM
    If release ; we release mousebutton over MenuItem => close
      If *mover=*tuiMenuItem
        *tuiEvent\notify = *tuiMenuItem\obj\notify
      Else
        *tuiEvent\notify = #NOTIFY_NOTHING
      End If
      done=False
      ; we came from a submenu item, so tell it to close
    End If

    If press
      If *mover=*tuiMenuItem
        _ntui_SetFocus{*tuiMenuItem\obj\tuiWindow,*tuiMenuItem}
        _ntui_SetActive{*tuiMenuItem\obj\tuiWindow,!_NULL }
        done=True ; activate and do nothing else
      Else
        If *tuiMenuItem\obj\tuiWindow\focus=*tuiMenuItem
          _ntui_SetFocus{*tuiMenuItem\obj\tuiWindow,!_NULL}
          _ntui_SetActive{*tuiMenuItem\obj\tuiWindow,!_NULL }
        End If
      End If
    End If

  Default ; submenu
    If release
      If *tuiMenuItem\sticky=False
        _ntui_CloseMenuOptions{*tuiMenuItem}
        done=False
      Else
        done=True  ; release over activated submenu
        *tuiMenuItem\sticky=False
      End If
    End If

    If click
      If *mover=*tuiMenuItem
        *tuiMenuItem\sticky=True ; active submenu to become sticky
        _ntui_SetFocus{*tuiMenuItem\obj\tuiWindow,*tuiMenuItem}
        _ntui_OpenMenuOptions{*tuiMenuItem}
        done=True
      End If
    End If

    If click=False AND release=False
      If *mover=*tuiMenuItem
        _ntui_SetFocus{*tuiMenuItem\obj\tuiWindow,*tuiMenuItem}
        If press><0 OR True
          _ntui_OpenMenuOptions{*tuiMenuItem}
        End If
      Else
        If *mover
          If *mover\obj\typeID=#TUIOBJ_MENUITEM
            _ntui_CloseMenuOptions{*tuiMenuItem}
            If *mover\subTypeID=#TUIMENU_ITEM
              _ntui_SetFocus {*tuiMenuItem\obj\tuiWindow,*mover}
            Else
              _ntui_OpenMenuOptions{*mover}
            End If
          End If
        End If
      End If
    End If
End Select
Function Return done
End Function
 


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawMenuItem {*tuiMenuItem.tuiMenuItem,*rp.RastPort}           /
;/                                                                             /
;/ Description:                                                                /
;/     ; we are not interessted in any other events                            /
;/       *hit=ntui_HitObject{*tuiMenuItem\subTuiWin\obj\child,x,y} ; hit whi:: /
;/ ch object?                                                                  /
;/       ;*hit=*active                                                         /
;/       ; we came from a submenu item, so tell it to close                    /
;/ * draw the Menu in all its beauty */                                        /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiMenuItem.tuiMenuItem    : ???                                         /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement _ntui_DrawMenuItem{*tuiMenuItem.tuiMenuItem,*rp.RastPort}
*tuiEngine.tuiEngine = *tuiMenuItem\obj\tuiEngine : If *tuiEngine=!_NULL OR *rp=!_NULL Then Statement Return
x1.l =    *tuiMenuItem\obj\pos\x
x2.l = x1+*tuiMenuItem\obj\size\x-1
y1.l =    *tuiMenuItem\obj\pos\y
y2.l = y1+*tuiMenuItem\obj\size\y-1

If *tuiMenuItem\obj\flags&#TUIF_FOCUS
  bgpen.l = #TUIPEN_MARKER
  fgpen.l = #TUIPEN_ACTIVETEXT
Else
  If *tuiMenuItem\obj\borderType=#TUIBORDER_BUTTON
    bgpen=#TUIPEN_HALFSHINE
  Else
    bgpen.l = _ntui_GetBGTuiPen{*tuiMenuItem}
  End If

  fgpen.l = #TUIPEN_TEXT
End If


If *tuiMenuItem\img
  ix2.l = x1+ntui_GetTBImageWidth{*tuiMenuItem\img}+*tuiEngine\defPad\x -1
  If ix2>x2 OR *tuiMenuItem\obj\string=!_NULL Then ix2=x2
  ntui_DrawTBImage{*tuiMenuItem\img,*rp,x1,y1,ix2,y2,*tuiMenuItem\obj\flags,bgpen}
  x1 = ix2+ 1
End If

If *tuiMenuItem\linkimg
  ix2.l = x2-ntui_GetTBImageWidth{*tuiMenuItem\linkimg}-*tuiEngine\defPad\x +1
  ntui_DrawTBImage{*tuiMenuItem\linkimg,*rp,ix2,y1,x2,y2,*tuiMenuItem\obj\flags,bgpen}
  x2 = ix2 -1
End If

If *tuiMenuItem\shortstr
  tuifont.l = _ntui_SetFont{*tuiEngine,*tuiMenuItem\obj\flags}
  xs.l = *tuiMenuItem\shortTE\te_Extent\MaxX-*tuiMenuItem\shortTE\te_Extent\MinX+1
  If xs<*tuiEngine\font[tuifont]\tf_YSize Then xs=*tuiEngine\font[tuifont]\tf_YSize

  ix2.l = x2-xs+1;-1- *tuiEngine\defPad\x
  _ntui_Print{*tuiEngine,*tuiMenuItem\shortstr,ix2,y1,x2,y2,(*tuiMenuItem\obj\flags|#TUIF_CENTER|#TUIF_LEFT)-#TUIF_LEFT,*rp,fgpen,bgpen}
  x2 = ix2-1
End If

If *tuiMenuItem\ami
  ix2.l = x2-ntui_GetTBImageWidth{ *tuiMenuItem\ami}-*tuiEngine\defPad\x +1
  ntui_DrawTBImage{*tuiMenuItem\ami,*rp,ix2,y1,x2,y2,*tuiMenuItem\obj\flags,bgpen}
  x2 = ix2 -1
End If

If *tuiMenuItem\shift
  ix2.l = x2-ntui_GetTBImageWidth{ *tuiMenuItem\shift}-*tuiEngine\defPad\x +1
  ntui_DrawTBImage{*tuiMenuItem\shift,*rp,ix2,y1,x2,y2,*tuiMenuItem\obj\flags,bgpen}
  x2 = ix2 -1
End If

If *tuiMenuItem\alt
  ix2.l = x2-ntui_GetTBImageWidth{ *tuiMenuItem\alt}-*tuiEngine\defPad\x +1
  ntui_DrawTBImage{*tuiMenuItem\alt,*rp,ix2,y1,x2,y2,*tuiMenuItem\obj\flags,bgpen}
  x2 = ix2 -1
End If

If *tuiMenuItem\ctrl
  ix2.l = x2-ntui_GetTBImageWidth{ *tuiMenuItem\ctrl}-*tuiEngine\defPad\x +1
  ntui_DrawTBImage{*tuiMenuItem\ctrl,*rp,ix2,y1,x2,y2,*tuiMenuItem\obj\flags,bgpen}
  x2 = ix2 -1
End If

If *tuiMenuItem\obj\string
  _ntui_Print{*tuiEngine,*tuiMenuItem\obj\string,x1,y1,x2,y2,*tuiMenuItem\obj\flags,*rp,fgpen,bgpen}
End If

If *tuiMenuItem\subTuiWin
  If (*tuiMenuItem\obj\flags&#TUIF_ACTIVE)
    If *tuiMenuItem\subTuiWin\win = !_NULL
      _ntui_OpenMenuOptions{*tuiMenuItem}
    End If
  Else
    If *tuiMenuItem\subTuiWin\win Then _ntui_CloseMenuOptions{*tuiMenuItem}
  End If
End If
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_MenuItem {name.s,@imagefile.s,@short.s,@notify.l,:: /
;/ @help.s,@flags.l,@itemID.l}                                                 /
;/                                                                             /
;/ Description:                                                                /
;/   ix2.l = x2-xs+1;-1- *tuiEngine\defPad\x                                   /
;/ * create function for tui Menu */                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - name.s    : ???                                                           /
;/ - imagefile.s    : ???                                                      /
;/ - short.s    : ???                                                          /
;/ - notify.l    : ???                                                         /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - itemID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_MenuItem{name.s,@imagefile.s,@short.s,@notify.l,@help.s,@flags.l,@itemID.l}
If (flags&#TUIF_NOFLAGS) Then flags=#TUIF_GAPLESS
flags | #TUIF_LEFT|#TUIF_MIDDLE|#TUIF_FIXHEIGHT|#TUIF_WANTMOVER|#TUIF_FIXWIDTH
*tuiMenuItem.tuiMenuItem = _ntui_CreateObject{#TUIOBJ_MENUITEM,SizeOf.tuiMenuItem,notify,help,flags,itemID}
If *tuiMenuItem
  *tuiEngine.tuiEngine       = *tuiMenuItem\obj\tuiEngine
  *tuiMenuItem\subTuiWin     = !_NULL
  *tuiMenuItem\obj\bindFlags = #TUIBIND_DELTA|#TUIBIND_VALUE|#TUIBIND_STRING|#TUIBIND_ABLE
  *tuiMenuItem\linkimg       = !_NULL
  *tuiMenuItem\img           = !_NULL
  *tuiMenuItem\masterTuiWin  = tuiGlobal\buildHelper\tuiRootWin
  If imagefile Then *tuiMenuItem\img           = ntui_CreateTBImage{*tuiMenuItem\obj\tuiEngine,imagefile,#TUISIZE_KNOB,#TUISIZE_KNOB}
  *tuiMenuItem\shortqual     = 0
  *tuiMenuItem\shortkey      = 0
  *tuiMenuItem\shortstr      = !_NULL
  str_Write{&*tuiMenuItem\obj\string,name}
  If short
    If Instr(short,"RAMIGA+") Then *tuiMenuItem\shortqual|#IEQUALIFIER_RAMIGA                     : short=Replace$(short,"RAMIGA+","")
    If Instr(short,"LAMIGA+") Then *tuiMenuItem\shortqual|#IEQUALIFIER_LAMIGA                     : short=Replace$(short,"LAMIGA+","")
    If Instr(short,"AMIGA+")  Then *tuiMenuItem\shortqual|#IEQUALIFIER_LAMIGA|#IEQUALIFIER_RAMIGA : short=Replace$(short,"AMIGA+" ,"")
    If Instr(short,"CTRL+")   Then *tuiMenuItem\shortqual|#IEQUALIFIER_CONTROL                    : short=Replace$(short,"CTRL+"  ,"")
    If Instr(short,"RALT+")   Then *tuiMenuItem\shortqual|#IEQUALIFIER_RALT                       : short=Replace$(short,"RALT+"  ,"")
    If Instr(short,"LALT+")   Then *tuiMenuItem\shortqual|#IEQUALIFIER_LALT                       : short=Replace$(short,"LALT+"  ,"")
    If Instr(short,"ALT+")    Then *tuiMenuItem\shortqual|#IEQUALIFIER_RALT|#IEQUALIFIER_LALT     : short=Replace$(short,"ALT+"   ,"")
    If Instr(short,"RSHIFT+") Then *tuiMenuItem\shortqual|#IEQUALIFIER_RSHIFT                     : short=Replace$(short,"RSHIFT+","")
    If Instr(short,"LSHIFT+") Then *tuiMenuItem\shortqual|#IEQUALIFIER_LSHIFT                     : short=Replace$(short,"LSHIFT+","")
    If Instr(short,"SHIFT+")  Then *tuiMenuItem\shortqual|#IEQUALIFIER_LSHIFT|#IEQUALIFIER_RSHIFT : short=Replace$(short,"SHIFT+" ,"")
    short=Replace$(short,"++","")
    Select short
      Case "ENTER" : *tuiMenuItem\shortkey = 13
      Case "SPACE" : *tuiMenuItem\shortkey = 32
      Case "DEL"   : *tuiMenuItem\shortkey = #RAWKEY_DEL
      Case "ESC"   : *tuiMenuItem\shortkey = #RAWKEY_ESC
      Case "BS"    : *tuiMenuItem\shortkey = #RAWKEY_BACKSPACE
      Case "F1"    : *tuiMenuItem\shortkey = #RAWKEY_F1
      Case "F2"    : *tuiMenuItem\shortkey = #RAWKEY_F2
      Case "F3"    : *tuiMenuItem\shortkey = #RAWKEY_F3
      Case "F4"    : *tuiMenuItem\shortkey = #RAWKEY_F4
      Case "F5"    : *tuiMenuItem\shortkey = #RAWKEY_F5
      Case "F6"    : *tuiMenuItem\shortkey = #RAWKEY_F6
      Case "F7"    : *tuiMenuItem\shortkey = #RAWKEY_F7
      Case "F8"    : *tuiMenuItem\shortkey = #RAWKEY_F8
      Case "F9"    : *tuiMenuItem\shortkey = #RAWKEY_F9
      Default      : *tuiMenuItem\shortkey = Peek.b(&short)
    End Select
    If (*tuiMenuItem\shortqual&(#IEQUALIFIER_LAMIGA|#IEQUALIFIER_RAMIGA))  = (#IEQUALIFIER_LAMIGA|#IEQUALIFIER_RAMIGA) Then *tuiMenuItem\ami   = ntui_CreateTBImage{*tuiMenuItem\obj\tuiEngine,"AMIGA"  ,#TUISIZE_KNOB,#TUISIZE_KNOB}
    If (*tuiMenuItem\shortqual&(#IEQUALIFIER_LALT|#IEQUALIFIER_RALT))      = (#IEQUALIFIER_LALT|#IEQUALIFIER_RALT)     Then *tuiMenuItem\alt   = ntui_CreateTBImage{*tuiMenuItem\obj\tuiEngine,"ALT"    ,#TUISIZE_KNOB,#TUISIZE_KNOB}
    If (*tuiMenuItem\shortqual&(#IEQUALIFIER_LSHIFT|#IEQUALIFIER_RSHIFT))  = (#IEQUALIFIER_LSHIFT|#IEQUALIFIER_RSHIFT) Then *tuiMenuItem\shift = ntui_CreateTBImage{*tuiMenuItem\obj\tuiEngine,"SHIFT"  ,#TUISIZE_KNOB,#TUISIZE_KNOB}
    If (*tuiMenuItem\shortqual&(#IEQUALIFIER_CONTROL))                     = (#IEQUALIFIER_CONTROL)                    Then *tuiMenuItem\shift = ntui_CreateTBImage{*tuiMenuItem\obj\tuiEngine,"CTRL"   ,#TUISIZE_KNOB,#TUISIZE_KNOB}
    str_Write{&*tuiMenuItem\shortstr,short}
  End If
  *tuiMenuItem\subTypeID      = #TUIMENU_ITEM
  *tuiMenuItem\obj\borderType = #TUIBORDER_NONE
End If
Function Return *tuiMenuItem
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_BeginMenuTitle {name.s,@imagefile.s,@help.s,@flag:: /
;/ s.l,@itemID.l}                                                              /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - name.s    : ???                                                           /
;/ - imagefile.s    : ???                                                      /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - itemID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_BeginMenuTitle{name.s,@imagefile.s,@help.s,@flags.l,@itemID.l}
*tuiMenuItem.tuiMenuItem = ntui_MenuItem{name,imagefile,"",#NOTIFY_NOTHING,help,flags,itemID}
If *tuiMenuItem
  *tuiMenuItem\subTypeID           = #TUIMENU_DROPDOWN
  tuiGlobal\buildHelper\tuiParent  = *tuiMenuItem
  tuiGlobal\buildHelper\tuiPrev    = !_NULL
  *tuiMenuItem\subTuiWin           = ntui_CreateWindow{*tuiMenuItem\obj\tuiEngine,"",#WINID_MENU,*tuiMenuItem}
  *tuiMenuItem\obj\borderType      = #TUIBORDER_TOOL
  *tuiMenuItem\obj\child           = !_NULL
  *tuiMenuItem\subTuiWin\WFlags    = #WFLG_BORDERLESS|#WFLG_SMART_REFRESH
  *tuiMenuItem\subTuiWin\obj\flags = #TUIF_GAPLESS|#TUIF_FIXSIZE
  *tuiMenuItem\linkimg             = !_NULL;ntui_CreateTBImage{*tuiMenuItem\obj\tuiEngine,"ARROWDOWN",#TUISIZE_KNOB,#TUISIZE_KNOB}
  If ntui_BeginVGroup{0}
    tuiGlobal\buildHelper\tuiCurrent\flags      = #TUIF_FIXSIZE
    tuiGlobal\buildHelper\tuiCurrent\borderType = #TUIBORDER_RAISED
  End If
End If
Function Return *tuiMenuItem
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_BeginDropDown {name.s,@imagefile.s,@help.s,@flags:: /
;/ .l,@itemID.l}                                                               /
;/                                                                             /
;/ Description:                                                                /
;/   *tuiMenuItem\linkimg             = !_NULL;ntui_CreateTBImage{*tuiMenuIt:: /
;/ em\obj\tuiEngine,"ARROWDOWN",#TUISIZE_KNOB,#TUISIZE_KNOB}                   /
;/ * create function for tui Menu */                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - name.s    : ???                                                           /
;/ - imagefile.s    : ???                                                      /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - itemID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_BeginDropDown{name.s,@imagefile.s,@help.s,@flags.l,@itemID.l}
If flags&#TUIF_NOFLAGS Then flags=0
*tuiMenuItem.tuiMenuItem = ntui_MenuItem{name,imagefile,"",#NOTIFY_NOTHING,help,flags,itemID}
If *tuiMenuItem
  *tuiMenuItem\subTypeID   = #TUIMENU_DROPDOWN
  tuiGlobal\buildHelper\tuiParent              = *tuiMenuItem
  tuiGlobal\buildHelper\tuiPrev                = !_NULL
  *tuiMenuItem\subTuiWin   = ntui_CreateWindow{*tuiMenuItem\obj\tuiEngine,"",#WINID_MENU,*tuiMenuItem}
  *tuiMenuItem\obj\borderType = #TUIBORDER_BUTTON
  *tuiMenuItem\obj\child   = !_NULL
  *tuiMenuItem\subTuiWin\WFlags = #WFLG_BORDERLESS|#WFLG_SMART_REFRESH
  *tuiMenuItem\subTuiWin\obj\flags  = #TUIF_GAPLESS|#TUIF_FIXSIZE
  *tuiMenuItem\linkimg     = ntui_CreateTBImage{*tuiMenuItem\obj\tuiEngine,"DROPDOWN",#TUISIZE_KNOB,#TUISIZE_KNOB}
  If ntui_BeginVGroup{0}
    tuiGlobal\buildHelper\tuiCurrent\flags = #TUIF_FIXSIZE
    tuiGlobal\buildHelper\tuiCurrent\borderType = #TUIBORDER_RAISED
  End If
End If
Function Return *tuiMenuItem
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_BeginPopUp {name.s,@imagefile.s,@help.s,@flags.l,:: /
;/ @itemID.l}                                                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * create function for tui Menu */                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - name.s    : ???                                                           /
;/ - imagefile.s    : ???                                                      /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - itemID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_BeginPopUp{name.s,@imagefile.s,@help.s,@flags.l,@itemID.l}
If flags&#TUIF_NOFLAGS Then flags=0
*tuiMenuItem.tuiMenuItem = ntui_MenuItem{name,imagefile,"",#NOTIFY_NOTHING,help,flags,itemID}
If *tuiMenuItem
  *tuiMenuItem\subTypeID   = #TUIMENU_POPUP
  tuiGlobal\buildHelper\tuiParent              = *tuiMenuItem
  tuiGlobal\buildHelper\tuiPrev                = !_NULL
  *tuiMenuItem\subTuiWin   = ntui_CreateWindow{*tuiMenuItem\obj\tuiEngine,"",#WINID_MENU,*tuiMenuItem}
  *tuiMenuItem\obj\child   = !_NULL
  *tuiMenuItem\obj\borderType = #TUIBORDER_BUTTON
  *tuiMenuItem\subTuiWin\WFlags = #WFLG_BORDERLESS|#WFLG_SMART_REFRESH
  *tuiMenuItem\subTuiWin\obj\flags  = #TUIF_GAPLESS|#TUIF_FIXSIZE
  *tuiMenuItem\linkimg = ntui_CreateTBImage{*tuiMenuItem\obj\tuiEngine,"POPUP",#TUISIZE_KNOB,#TUISIZE_KNOB}
  If ntui_BeginVGroup{0}
    tuiGlobal\buildHelper\tuiCurrent\flags = #TUIF_FIXSIZE
    tuiGlobal\buildHelper\tuiCurrent\borderType = #TUIBORDER_RAISED
  End If
End If
Function Return *tuiMenuItem
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_BeginSubMenu {name.s,@imagefile.s,@help.s,@flags.:: /
;/ l,@itemID.l}                                                                /
;/                                                                             /
;/ Description:                                                                /
;/ * create function for tui Menu */                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - name.s    : ???                                                           /
;/ - imagefile.s    : ???                                                      /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - itemID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_BeginSubMenu{name.s,@imagefile.s,@help.s,@flags.l,@itemID.l}
*tuiMenuItem.tuiMenuItem = ntui_MenuItem{name,imagefile,"",#NOTIFY_NOTHING,help,flags,itemID}
If *tuiMenuItem
  *tuiMenuItem\subTypeID   = #TUIMENU_SUBMENU
  tuiGlobal\buildHelper\tuiParent             = *tuiMenuItem
  tuiGlobal\buildHelper\tuiPrev               = !_NULL
  *tuiMenuItem\subTuiWin   = ntui_CreateWindow{*tuiMenuItem\obj\tuiEngine,"",#WINID_MENU,*tuiMenuItem}
  *tuiMenuItem\obj\child   = !_NULL
  *tuiMenuItem\subTuiWin\WFlags = #WFLG_BORDERLESS|#WFLG_SMART_REFRESH
  *tuiMenuItem\subTuiWin\obj\flags  = #TUIF_GAPLESS|#TUIF_FIXSIZE
  *tuiMenuItem\linkimg     = ntui_CreateTBImage{*tuiMenuItem\obj\tuiEngine,"RIGHT",#TUISIZE_KNOB,#TUISIZE_KNOB}
  If ntui_BeginVGroup{0}
    tuiGlobal\buildHelper\tuiCurrent\flags      = #TUIF_FIXSIZE
    tuiGlobal\buildHelper\tuiCurrent\borderType = #TUIBORDER_RAISED
  End If
End If
Function Return *tuiMenuItem
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_EndMenu {}                                          /
;/                                                                             /
;/ Description:                                                                /
;/ * end a group definition */                                                 /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_EndMenu{}
ntui_EndGroup{}
ntui_EndWindow{}
tuiGlobal\buildHelper\tuiPrev    = tuiGlobal\buildHelper\tuiParent
tuiGlobal\buildHelper\tuiCurrent = tuiGlobal\buildHelper\tuiParent
If tuiGlobal\buildHelper\tuiParent Then tuiGlobal\buildHelper\tuiParent = tuiGlobal\buildHelper\tuiParent\parent
If tuiGlobal\buildHelper\tuiCurrent\typeID><#TUIOBJ_MENUITEM Then error{"\\__THIS_FUNCTION: EndMenu does not match a BeginSubMenu/PopUp/DropDown!"}
*tuiMenuItem.tuiMenuItem = tuiGlobal\buildHelper\tuiCurrent
tuiGlobal\buildHelper\tuiWindow = *tuiMenuItem\obj\tuiWindow
Function Return *tuiMenuItem
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetMenuItemMinSize {*tuiMenuItem.tuiMenuItem,*rp:: /
;/ .RastPort}                                                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * calculate the minimum size for the Menu */                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiMenuItem.tuiMenuItem    : ???                                         /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l _ntui_GetMenuItemMinSize{*tuiMenuItem.tuiMenuItem,*rp.RastPort}
*tuiEngine.tuiEngine = *tuiMenuItem\obj\tuiEngine : If *tuiEngine=!_NULL OR *rp=!_NULL Then Function Return *tuiMenuItem\obj\minsize

If *tuiMenuItem\obj\string
  _ntui_GetTextLengthEx{*tuiEngine,*tuiMenuItem\obj\string,*tuiMenuItem\obj\stringTE,*tuiMenuItem\obj\flags,*rp}
  *tuiMenuItem\obj\minsize\x  = *tuiMenuItem\obj\stringTE\te_Extent\MaxX-*tuiMenuItem\obj\stringTE\te_Extent\MinX+1 + 1 + *tuiEngine\defPad\x*2

  If *tuiMenuItem\obj\flags&(#TUIF_SMALL|#TUIF_BIG|#TUIF_FIX)
    *tuiMenuItem\obj\minsize\y  = *tuiMenuItem\obj\stringTE\te_Extent\MaxY-*tuiMenuItem\obj\stringTE\te_Extent\MinY+1 + 1 + *tuiEngine\defPad\y*2
  Else
    *tuiMenuItem\obj\minsize\y  = *tuiEngine\defSize[#TUISIZE_BUTTON]
  End If
Else
  *tuiMenuItem\obj\stringTE\te_Extent\MinX=0,0,0,0
 *tuiMenuItem\obj\minsize\x  = 0
 *tuiMenuItem\obj\minsize\y  = 0
End If

If *tuiMenuItem\shortstr
  _ntui_GetTextLengthEx{*tuiEngine,*tuiMenuItem\shortstr,*tuiMenuItem\shortTE,*tuiMenuItem\obj\flags,*rp}
  xs.l = *tuiMenuItem\shortTE\te_Extent\MaxX-*tuiMenuItem\shortTE\te_Extent\MinX
  If xs<*rp\Font\tf_YSize Then xs=*rp\Font\tf_YSize
  *tuiMenuItem\obj\minsize\x + xs + *tuiEngine\defPad\x
  *tuiMenuItem\obj\minsize\x + *tuiEngine\defPad\x
End If

If *tuiMenuItem\img
  *tuiMenuItem\obj\minsize\x + ntui_GetTBImageWidth{*tuiMenuItem\img} + *tuiEngine\defPad\x
;  If *tuiMenuItem\img\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuItem\obj\minsize\y = *tuiMenuItem\img\height
End If

If *tuiMenuItem\linkimg
  *tuiMenuItem\obj\minsize\x + ntui_GetTBImageWidth{ *tuiMenuItem\linkimg} + *tuiEngine\defPad\x
;  If *tuiMenuItem\linkimg\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuItem\obj\minsize\y = *tuiMenuItem\linkimg\height
End If

If *tuiMenuItem\ami
  *tuiMenuItem\obj\minsize\x + ntui_GetTBImageWidth{ *tuiMenuItem\ami} + *tuiEngine\defPad\x
;  If *tuiMenuItem\ami\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuItem\obj\minsize\y = *tuiMenuItem\ami\height
End If
If *tuiMenuItem\ctrl
  *tuiMenuItem\obj\minsize\x + ntui_GetTBImageWidth{ *tuiMenuItem\ctrl} + *tuiEngine\defPad\x
;  If *tuiMenuItem\ctrl\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuItem\obj\minsize\y = *tuiMenuItem\ctrl\height
End If

If *tuiMenuItem\shift
  *tuiMenuItem\obj\minsize\x + ntui_GetTBImageWidth{ *tuiMenuItem\shift} + *tuiEngine\defPad\x
;  If *tuiMenuItem\shift\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuItem\obj\minsize\y = *tuiMenuItem\shift\height
End If

If *tuiMenuItem\alt
  *tuiMenuItem\obj\minsize\x + ntui_GetTBImageWidth{ *tuiMenuItem\alt} + *tuiEngine\defPad\x
;  If *tuiMenuItem\alt\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuItem\obj\minsize\y = *tuiMenuItem\alt\height
End If
    Select *tuiMenuItem\subTypeID
      Case #TUIMENU_DROPDOWN : _ntui_GetMinSize{*tuiMenuItem\subTuiWin,*rp}
      Case #TUIMENU_POPUP    : _ntui_GetMinSize{*tuiMenuItem\subTuiWin,*rp}
      Case #TUIMENU_SUBMENU  : _ntui_GetMinSize{*tuiMenuItem\subTuiWin,*rp}
    End Select

Function Return *tuiMenuItem\obj\minsize
End Function

Statement _ntui_LayoutMenuItem{}
        *tuiMenuItem.tuiMenuItem = *tui
        If *tuiMenuItem\subTuiWin
          *child.tuiObject=*tuiMenuItem\subTuiWin\obj\child
          _ntui_Layout{*tuiMenuItem\subTuiWin,*rp,0,0,*child\minsize\x,*child\minsize\y}
        End If
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_FreeMenuItem {*tuiMenuItem.tuiMenuItem}                       /
;/                                                                             /
;/ Description:                                                                /
;/  If *tuiMenuItem\img\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuItem:: /
;/ \obj\minsize\y = *tuiMenuItem\img\height                                    /
;/  If *tuiMenuItem\linkimg\height >*tuiMenuItem\obj\minsize\y Then *tuiMenu:: /
;/ Item\obj\minsize\y = *tuiMenuItem\linkimg\height                            /
;/  If *tuiMenuItem\ami\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuItem:: /
;/ \obj\minsize\y = *tuiMenuItem\ami\height                                    /
;/  If *tuiMenuItem\ctrl\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuIte:: /
;/ m\obj\minsize\y = *tuiMenuItem\ctrl\height                                  /
;/  If *tuiMenuItem\shift\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuIt:: /
;/ em\obj\minsize\y = *tuiMenuItem\shift\height                                /
;/  If *tuiMenuItem\alt\height >*tuiMenuItem\obj\minsize\y Then *tuiMenuItem:: /
;/ \obj\minsize\y = *tuiMenuItem\alt\height                                    /
;/ * free everything special that we allocated for the Menu */                 /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiMenuItem.tuiMenuItem    : ???                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement _ntui_FreeMenuItem{*tuiMenuItem.tuiMenuItem}
If *tuiMenuItem\img Then ntui_FreeTBImage{*tuiMenuItem\img}  : *tuiMenuItem\img = !_NULL
If *tuiMenuItem\subTuiWin
  _ntui_CloseMenuOptions{*tuiMenuItem}
  ;ntui_HideWindow{*tuiMenuItem\subTuiWin}
  *tuiMenuItem\obj\child = *tuiMenuItem\subTuiWin
  *tuiMenuItem\subTuiWin = !_NULL
End If
End Statement


