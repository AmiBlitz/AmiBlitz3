; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram Disk:"
; ExeFile         = "MLDemo"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 100000
; MakeSmallest    = 1
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 10
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 601
; CursorColumn    = 9
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 15
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 15
; Max BlitzFont   = 4
; Max GTList      = 15
; /XTRA
#TUI_HAS_TREEVIEW = 1

;/* ntui TreeView Sub-Types */
#TUITRV_SIMPLE           = 0
#TUITRV_FILESYSTEM       = 1

#TUITRAV_BASE               = #TUIA_USER
#TUITRAV_ONEXPAND           = #TUITRAV_BASE +  0; rw
#TUITRAV_ONEXPANDCB         = #TUITRAV_BASE +  1; rw
#TUITRAV_ONCOLLAPSE         = #TUITRAV_BASE +  2; rw
#TUITRAV_ONCOLLAPSECB       = #TUITRAV_BASE +  3; rw
#TUITRAV_ONSELECT           = #TUITRAV_BASE +  4; rw
#TUITRAV_ONSELECTCB         = #TUITRAV_BASE +  5; rw
#TUITRAV_ROWHEIGHT          = #TUITRAV_BASE +  6; r
#TUITRAV_VISIBLELINES       = #TUITRAV_BASE +  7; r
#TUITRAV_TOTALLINES         = #TUITRAV_BASE +  8; r
#TUITRAV_TOPLINE            = #TUITRAV_BASE +  9; rw
#TUITRAV_VISIBLEWIDTH       = #TUITRAV_BASE + 10; r
#TUITRAV_TOTALWIDTH         = #TUITRAV_BASE + 11; r
#TUITRAV_LEFTOFFSET         = #TUITRAV_BASE + 12; rw
#TUITRAV_SELECTED           = #TUITRAV_BASE + 13; rw
#TUITRAV_DOSPATTERN         = #TUITRAV_BASE + 14; rw
#TUITRAV_SUBCLASSID         = #TUITRAV_BASE + 15
#TUITRAV_ROOTNODE           = #TUITRAV_BASE + 16
#TUITRAV_ROOT               = #TUITRAV_BASE + 17

NEWTYPE.tuiTreeView

  obj.tuiObject        ; tui object header
  subClassID.l
  ;*hScroller.tuiScroller
  ;*vScroller.tuiScroller
  visibleLines.l
  topLine.l
  totalWidth.l
  visibleWidth.l
  leftOffset.l
  totalLines.l         ;  Number of used lines in Ted
  step_.tuiPixel
  rowheight.l
  onExpand.tuiNotifyHandler
  onCollapse.tuiNotifyHandler
  onSelect.tuiNotifyHandler
  *collapseImg.tuiTBImage
  *expandImg.tuiTBImage
  *root.tuiTreeNode
  *active.tuiTreeNode
  *dosPattern.str
  *dosPatternP.b ; match pattern

  ;*scrollView.tuiScrollView

End NEWTYPE


_ntui_SetTreeViewAttr:
Function.l _ntui_SetTreeViewAttr{*treeView.tuiTreeView,ti_Tag.l,ti_Data.l}
  !_ASSERT{*treeView}
  !_ASSERT{*treeView\obj\classID=#TUICLASS_TREEVIEW}

  done.l = True

;  *rp.RastPort = ntui_ObtainRastPort{*treeView}

  Select ti_Tag
    Case #TUITRAV_TOPLINE
    ;: _ntui_ScrollTreeView{*treeView,0,ti_Data-*treeView\topLine,*rp}  : _ntui_PropagateBind{*treeView,#TUIEV_BIND_VVALUE,*treeView\topLine,Null}
    Case #TUITRAV_LEFTOFFSET
    ;: _ntui_ScrollTreeView{*treeView,ti_Data-*treeView\leftOffset,0,*rp} : _ntui_PropagateBind{*treeView,#TUIEV_BIND_HVALUE,*treeView\leftOffset,Null}
    Case #TUITRAV_ONCOLLAPSE         : str_WritePtr{&*treeView\onCollapse\notifyID,ti_Data}
    Case #TUITRAV_ONCOLLAPSECB       : *treeView\onCollapse\callback = ti_Data
    Case #TUITRAV_ONEXPAND           : str_WritePtr{&*treeView\onExpand\notifyID,ti_Data}
    Case #TUITRAV_ONEXPANDCB         : *treeView\onExpand\callback = ti_Data
    Case #TUITRAV_ONSELECT           : str_WritePtr{&*treeView\onSelect\notifyID,ti_Data}
    Case #TUITRAV_ONSELECTCB         : *treeView\onSelect\callback = ti_Data

    Case #TUITRAV_DOSPATTERN
      str_WritePtr{&*treeView\dosPattern,ti_Data}
      If *treeView\dosPatternP Then FreeVec_ *treeView\dosPatternP
      If *treeView\dosPattern
        *treeView\dosPatternP = AllocVec_(str_Len{*treeView\dosPattern}*3+4,#MEMF_ANY)
        ParsePatternNoCase_ str_GetPtr{*treeView\dosPattern},*treeView\dosPatternP,str_Len{*treeView\dosPattern}*3+4
      End If
    Case #TUITRAV_SELECTED           : ; todo
    Case #TUITRAV_SUBCLASSID         : *treeView\subClassID = ti_Data
    Case #TUITRAV_ROOTNODE           :
    Case #TUITRAV_ROOT
      ntui_DestroyAllNodes{*treeView\root}
      root.s = Peek.s(ti_Data)
      *treeView\root =  ntui_CreateNode{Null,#TUINODE_BRANCH,root.s,root.s,0,#TUIINSERT_HEAD,False}


    Default
      done = False
  End Select

;  If *rp Then ntui_ReleaseRastPort{*treeView}

  Function Return done
End Function
!_MakeGlobalFuncPointer{_ntui_SetTreeViewAttr,{Null,0,0}}


_ntui_GetTreeViewAttr:
Function.l _ntui_GetTreeViewAttr{*treeView.tuiTreeView,ti_Tag.l,*ti_Data.longP}
  !_ASSERT{*treeView}
  !_ASSERT{*treeView\obj\classID=#TUICLASS_TREEVIEW}

  done.l = True
  Select ti_Tag
    Case #TUITRAV_ROWHEIGHT          : *ti_Data\l = *treeView\rowheight
    Case #TUITRAV_VISIBLELINES       : *ti_Data\l = *treeView\visibleLines
    Case #TUITRAV_TOTALLINES         : *ti_Data\l = *treeView\totalLines
    Case #TUITRAV_TOPLINE            : *ti_Data\l = *treeView\topLine
    Case #TUITRAV_VISIBLEWIDTH       : *ti_Data\l = *treeView\visibleWidth
    Case #TUITRAV_TOTALWIDTH         : *ti_Data\l = *treeView\totalWidth
    Case #TUITRAV_LEFTOFFSET         : *ti_Data\l = *treeView\leftOffset
    Case #TUITRAV_ONEXPAND           : *ti_Data\l = str_GetPtr{*treeView\onExpand\notifyID}
    Case #TUITRAV_ONEXPANDCB         : *ti_Data\l = *treeView\onExpand\callback
    Case #TUITRAV_ONCOLLAPSE         : *ti_Data\l = str_GetPtr{*treeView\onCollapse\notifyID}
    Case #TUITRAV_ONCOLLAPSECB       : *ti_Data\l = *treeView\onCollapse\callback
    Case #TUITRAV_ONSELECT           : *ti_Data\l = str_GetPtr{*treeView\onSelect\notifyID}
    Case #TUITRAV_ONSELECTCB         : *ti_Data\l = *treeView\onSelect\callback
    Case #TUITRAV_DOSPATTERN         : *ti_Data\l = str_GetPtr{*treeView\dosPattern}
    Case #TUITRAV_SELECTED           : *ti_Data\l = 0 ; todo
    Case #TUITRAV_SUBCLASSID         : *ti_Data\l = *treeView\subClassID
    Case #TUITRAV_ROOTNODE           : *ti_Data\l = *treeView\root
    Case #TUITRAV_ROOT               : *ti_Data\l = Null

    Default
      done = False

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_GetTreeViewAttr,{Null,0,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  pixels.l = ml_GetPixelWidth {*rp.RastPort,*node.tuiTreeNode,sdepth.l}  /
;/                                                                             /
;/ Description:                                                                /
;/ Calculate the width in pixels needed to draw the list in the current state. /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *rp.RastPort   : rastport to draw into                                    /
;/ - *node.tuiTreeNode  : node to start                                            /
;/ - sdepth.l       : ???                                                      /
;/                                                                             /
;/ Result:                                                                     /
;/ - pixels.l     : number of pixels                                           /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l _ntui_GetPixelWidth {*rp.RastPort,*node.tuiTreeNode,sdepth.l}
pixwidth.l=1
xs.l = sdepth * *rp\TxWidth*2
While *node
  If *node\typ = #TUINODE_BRANCH
    If *node\expanded
     b.s = "[-] "+str_Read{&*node\label}
     tstwidth.l = TextLength_ (*rp,&b.s,Peek.l(&b.s-4)) +xs
     pixwidth.l = Max(tstwidth,pixwidth)
     tstwidth.l = _ntui_GetPixelWidth{*rp,*node\child_node,sdepth+1}
    Else
     b.s = "[+] "+str_Read{&*node\label}
     tstwidth.l = TextLength_ (*rp,&b.s,Peek.l(&b.s-4)) + xs
    End If
  Else
    b.s = str_Read{&*node\label}
    tstwidth.l = TextLength_ (*rp,&b.s,Peek.l(&b.s-4)) + xs
  End If
  pixwidth.l = Max(tstwidth,pixwidth)
  *node=*node\next_node
Wend
Function Return pixwidth
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ml_ExpandPath {*node.tuiTreeNode,@pattern.s}                            /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *node.tuiTreeNode  : ???                                                      /
;/ - pattern.s      : ???                                                      /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_TreeViewOnExpandPath:
Function.l _ntui_TreeViewOnExpandPath {*treeView.tuiTreeView,*ev.tuiEvent,*notifyID.str}
  !_ASSERT{*treeView}
  !_ASSERT{*treeView\obj\classID=#TUICLASS_TREEVIEW}

  *node.tuiTreeNode = *treeView\active
  If *node
    If *node\typ=#TUINODE_BRANCH
      ntui_DestroyAllChildren {*node}
      path.s = str_Read{&*node\userStr}
      *fib.FileInfoBlock = AllocDosObject_ (#DOS_FIB,#TAG_DONE)
      If *fib
        lock.l = Lock_(&path.s,#ACCESS_READ)
        If lock
          oldlock.l = CurrentDir_(lock)
          If oldlock
            If Examine_(lock,*fib)
              While ExNext_(lock,*fib)
                file_.s = Peek.s(&*fib\fib_FileName)
                filename.s = _ntui_AddPart{path,file_}
                *newnode.tuiTreeNode=Null
                If *fib\fib_DirEntryType<0
                  If *treeView\dosPatternP Then accept.l=MatchPatternNoCase_ (*treeView\dosPatternP,&file_):Else accept=True
                  If accept
                    *newnode.tuiTreeNode = ntui_CreateNode{*node,#TUINODE_LEAF,file_,filename,0,#TUIINSERT_SORTLABEL,True}
                    If *newnode
                      *tbi.tuiTBImage = ntui_CreateTBImage{*treeView\obj\engine,"FILE",#TUISIZE_INLINE,#TUISIZE_INLINE}
                      ;*tbi.tuiTBImage = ntui_CreateTBImage{*treeView\obj\engine,filename,#TUISIZE_INLINE,#TUISIZE_INLINE}
                      If *tbi
                        ntui_SetNodeAttr{*newnode,#TUINA_IMAGE,*tbi}
                      End If
                    End If
                  End If
                Else
                  *newnode.tuiTreeNode = ntui_CreateNode {*node,#TUINODE_BRANCH,file_,filename,1,#TUIINSERT_SORTLABEL,True}
                  If *newnode
                    *tbi.tuiTBImage = ntui_CreateTBImage{*treeView\obj\engine,"PATH",#TUISIZE_INLINE,#TUISIZE_INLINE}
                    ;*tbi.tuiTBImage = ntui_CreateTBImage{*treeView\obj\engine,filename,#TUISIZE_INLINE,#TUISIZE_INLINE}
                    If *tbi
                      ntui_SetNodeAttr{*newnode,#TUINA_IMAGE,*tbi}
                    End If
                  End If
                End If
              Wend
            End If

            oldlock = CurrentDir_ (oldlock)
          End If
          UnLock_ lock
          FreeDosObject_ #DOS_FIB,*fib
        End If
      End If
      ntui_SetNodeAttr{*node,#TUINA_EXPANDED,True}
    End If
  End If

  Function Return True

End Function
!_MakeGlobalFuncPointer{_ntui_TreeViewOnExpandPath,{Null,Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ml_CollapsePath {*node.tuiTreeNode}                                     /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *node.tuiTreeNode    : ???                                                    /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_TreeViewOnCollapsePath:
Function.l _ntui_TreeViewOnCollapsePath{*treeView.tuiTreeView,*ev.tuiEvent,*notifyID.str}
  !_ASSERT{*treeView}
  !_ASSERT{*treeView\obj\classID=#TUICLASS_TREEVIEW}

  *node.tuiTreeNode = *treeView\active
  If *node
    If *node\typ=#TUINODE_BRANCH
      ntui_DestroyAllChildren {*node}
      ntui_SetNodeAttr{*node,#TUINA_EXPANDED,False}
    End If
  End If

  Function Return True

End Function
!_MakeGlobalFuncPointer{_ntui_TreeViewOnCollapsePath,{Null,Null,Null}}


_ntui_CalculateTreeViewMinSize:
Statement _ntui_CalculateTreeViewMinSize{*treeView.tuiTreeView,*rp.RastPort}
  !_ASSERT{*treeView}
  !_ASSERT{*treeView\obj\classID=#TUICLASS_TREEVIEW}

  *engine.tuiEngine = *treeView\obj\engine : If *engine=Null OR *rp=Null Then Statement Return
  *treeView\obj\minsize\x  = !tuiBorderWidth{*treeView\obj\padding}
  *treeView\obj\minsize\y  = !tuiBorderHeight{*treeView\obj\padding}

  _ntui_GetBorderSize{*engine,*treeView\obj\borderType,*treeView\obj\flags,*treeView\obj\border}

  *treeView\obj\minsize\x + !tuiBorderWidth{*treeView\obj\border}
  *treeView\obj\minsize\y + !tuiBorderHeight{*treeView\obj\border}

  If *treeView\obj\borderType><#TUIBORDER_NONE
  ;  If *treeView\hScroller Then ntui_SetAttr{*treeView\hScroller,#TUIA_BORDERTYPE,#TUIBORDER_NONE}
  ;  If *treeView\vScroller Then ntui_SetAttr{*treeView\vScroller,#TUIA_BORDERTYPE,#TUIBORDER_NONE}
  End If

  *treeView\rowheight = *engine\defSize[#TUISIZE_INLINE]

  *child.tuiObject = *treeView\obj\child
  While *child
    _ntui_CalculateMinSize{*child,*rp}
    *child=*child\next_
  Wend

;  If *treeView\hScroller Then *treeView\obj\minsize\y + *treeView\hScroller\obj\minsize\y
;  If *treeView\vScroller Then *treeView\obj\minsize\x + *treeView\vScroller\obj\minsize\x

  h.l = ntui_GetVisibleRows {*treeView\root}
  *treeView\obj\minsize\y + h * *treeView\rowheight
  w.l = _ntui_GetPixelWidth {*rp,*treeView\root,0}
  *treeView\obj\minsize\x + w

End Statement
!_MakeGlobalFuncPointer{_ntui_CalculateTreeViewMinSize,{Null,Null}}




_ntui_DrawTreeView:
Statement _ntui_DrawTreeView{*treeView.tuiTreeView,*rp.RastPort,*rpclip.tuiRect}
  !_ASSERT{*treeView}
  !_ASSERT{*treeView\obj\classID=#TUICLASS_TREEVIEW}

  *engine.tuiEngine = *treeView\obj\engine
  !_ASSERT{*engine}
  !_ASSERT{*rp}

  !tuiAndRect{bclip.tuiRect,*treeView\obj\bbox,*rpclip}
  If !tuiValidRect{bclip}=False Then Statement Return

  If (*treeView\obj\borderType><#TUIBORDER_NONE)
    bgDone.l = ntui_DrawBorder{*engine,*rp,*treeView\obj\bbox,*treeView\obj\borderType,*treeView\obj\flags}
  Else
    bgDone = False
  End If

;    If *treeView\hScroller
;      If (*treeView\hScroller\obj\flags&#TUIF_ONSCREEN) Then _ntui_Draw{*treeView\hScroller,*rp,*rpclip}
;    End If
;    If *treeView\vScroller
;      If (*treeView\vScroller\obj\flags&#TUIF_ONSCREEN) Then _ntui_Draw{*treeView\vScroller,*rp,*rpclip}
;    End If

  !tuiAndRect{iclip.tuiRect,*rpclip,*treeView\obj\ibox}
  If !tuiValidRect{iclip}=False Then Statement Return

  If *treeView\obj\bgTuiPen><#TUIPEN_TRANSPARENT AND bgDone=False
    CNIF #TUI_DEBUG
    SetAPen_ *rp,*engine\pen[#TUIPEN_GREEN]
    CELSE
    SetAPen_ *rp,*engine\pen[*treeView\obj\bgTuiPen]
    CEND
    !tuiAndRect{iclip.tuiRect,*treeView\obj\ibox,*rpclip}
    If !tuiValidRect{iclip}
      RectFill_ *rp,iclip\left,iclip\top,iclip\right,iclip\bottom
    End If
  End If


  !tuiAndRect{cclip.tuiRect,*rpclip,*treeView\obj\cbox}
  If !tuiValidRect{cclip}=False Then Statement Return


  depth_.l = 0
  y1.l = *treeView\obj\cbox\top
  x1.l = *treeView\obj\cbox\left
  iw.l = ntui_GetTBImageWidth{*treeView\expandImg}
  dxs.l = iw*2/3
  *node.tuiTreeNode = *treeView\root
  *next_.tuiTreeNode = Null
  hasprev.l = False
  hasnext.l = False
  While *node><Null AND y1<=cclip\bottom
    If *node\active
      SetBPen_ *rp,*engine\pen[#TUIPEN_MARKER]
      SetDrMd_ *rp,1
    Else
      If *treeView\obj\bgTuiPen><#TUIPEN_TRANSPARENT
        SetBPen_ *rp,*engine\pen[*treeView\obj\bgTuiPen]
        SetDrMd_ *rp,1
      Else
        SetDrMd_ *rp,0
      End If
    End If
    y2.l = y1 + *treeView\rowheight-1
    yt.l = y1 + *rp\TxBaseline
    xoff.l = x1+depth_*dxs

    If *node\typ = #TUINODE_BRANCH
      bbox.tuiRect\left = xoff,y1,xoff+iw-1,y2
      If *node\expanded
        If y2>=cclip\top
          ntui_DrawTBImage{*treeView\collapseImg,*rp,bbox,bbox,0,#TUIPEN_TRANSPARENT}
          If *node\tbi
            bbox\left=bbox\right+1
            bbox\right=bbox\left+iw-1
            ntui_DrawTBImage{*node\tbi,*rp,bbox,bbox,0,#TUIPEN_TRANSPARENT}
            Move_ *rp,xoff+iw+iw,yt
          Else
            Move_ *rp,xoff+iw,yt
          End If

          If *node\label
            SetAPen_ *rp,2
            Text_ *rp,&*node\label\str,*node\label\size
          End If
        End If
        *next_ = ntui_GetHeadNode{*node\child_node}
        If *next_
          depth_+1
        Else
          *next_ = *node\next_node
        End If
      Else
        If y2>=cclip\top
          ntui_DrawTBImage{*treeView\expandImg,*rp,bbox,bbox,0,#TUIPEN_TRANSPARENT}
          If *node\tbi
            bbox\left=bbox\right+1
            bbox\right=bbox\left+iw-1
            ntui_DrawTBImage{*node\tbi,*rp,bbox,bbox,0,#TUIPEN_TRANSPARENT}
            Move_ *rp,xoff+iw+iw,yt
          Else
            Move_ *rp,xoff+iw,yt
          End If
          If *node\label
            SetAPen_ *rp,2
            Text_ *rp,&*node\label\str,*node\label\size
          End If
        End If
        *next_ = *node\next_node
      End If
    Else
      If y2>=cclip\top
        If *node\tbi
          bbox.tuiRect\left = xoff,y1,xoff+iw-1,y2
          ntui_DrawTBImage{*node\tbi,*rp,bbox,bbox,0,#TUIPEN_TRANSPARENT}
          Move_ *rp,xoff+iw,yt
        Else
          Move_ *rp,xoff,yt
        End If

        If *node\label
          SetAPen_ *rp,1
          Text_ *rp,&*node\label\str,*node\label\size
        End If
      End If
      *next_ = *node\next_node
    End If

    If *node\next_node Then hasnext=True : Else hasnext=False
    If *node\prev_node Then hasprev=True : Else hasprev=False

    *snode.tuiTreeNode=*node

    While *next_=Null AND depth_>0
      depth_-1
      *next_ = *node\parent_node
      If *next_ Then *node=*next_:*next_=*next_\next_node
    Wend

    If xoff>x1 AND y2>=cclip\top
      xm.l = xoff-dxs/2-1
      If hasnext
        SetAPen_ *rp,*engine\pen[#TUIPEN_SHADOW]
        Move_ *rp,xm,y1  : Draw_ *rp,xm,y2
        Move_ *rp,xm,(y1+y2+1)/2 : Draw_ *rp,xoff-2,(y1+y2+1)/2
      Else
        SetAPen_ *rp,*engine\pen[#TUIPEN_SHADOW]
        Move_ *rp,xm,y1  : Draw_ *rp,xm,(y2+y1)/2
        Move_ *rp,xm,(y1+y2+1)/2  : Draw_ *rp,xoff-2,(y1+y2+1)/2
      End If

      While xoff>x1
        xoff-dxs
        If *snode
          *snode = *snode\parent_node
          If *snode\next_node
            Move_ *rp,xoff-dxs/2-1,y1 : Draw_ *rp,xoff-dxs/2-1,y2
          End If
        End If
      Wend
    End If
    y1 + *treeView\rowheight
    *node=*next_

  Wend

End Statement
!_MakeGlobalFuncPointer{_ntui_DrawTreeView,{Null,Null,Null}}


_ntui_LayoutTreeView:
Statement _ntui_LayoutTreeView{*treeView.tuiTreeView,*rp.RastPort,*bbox.tuiRect}
  !_ASSERT{*treeView}
  !_ASSERT{*treeView\obj\classID=#TUICLASS_TREEVIEW}

  *tui.tuiObject = *treeView
  *engine.tuiEngine = *treeView\obj\engine
  !_ASSERT{*engine}
  !_ASSERT{*rp}

  If *bbox
    !tuiCopyRect{*tui\bbox,*bbox}
  End If
  _ntui_GetBorderSize{*tui\engine,*tui\borderType,*tui\flags,*tui\border}
  !tuiRemBorder{*tui\ibox,*tui\bbox,*tui\border}
  !tuiRemBorder{*tui\cbox,*tui\ibox,*tui\padding}
;
;  If *treeView\vScroller
;    xs.l = *treeView\vScroller\obj\minsize\x
;    !tuiCopyRect{sbox.tuiRect,*tui\ibox}
;    *tui\ibox\right - xs
;    *tui\cbox\right = *tui\ibox\right
;    sbox\left  = *tui\cbox\right +1
;    _ntui_Layout{*treeView\vScroller,*rp,sbox}
;  End If
;
;  If *treeView\hScroller
;    ys.l = *treeView\hScroller\obj\minsize\y
;    !tuiCopyRect{sbox.tuiRect,*tui\ibox}
;    *tui\ibox\bottom - ys
;    *tui\cbox\bottom = *tui\ibox\bottom
;    sbox\top  = *tui\cbox\bottom +1
;    _ntui_Layout{*treeView\hScroller,*rp,sbox}
;  End If

  *treeView\visibleLines = !tuiRectHeight{*tui\cbox} /*treeView\rowheight
  *treeView\visibleWidth = !tuiRectWidth{*tui\cbox}

  ;If *treeView\vScroller Then _ntui_UpdateScroller{*treeView\vScroller,*treeView\topLine,*treeView\visibleLines,*treeView\totalLines,1,False}
  ;If *treeView\hScroller Then _ntui_UpdateScroller{*treeView\hScroller,*treeView\leftOffset,*treeView\visibleWidth,*treeView\totalWidth,1,False}
End Statement
!_MakeGlobalFuncPointer{_ntui_LayoutTreeView,{Null,Null,Null}}







_ntui_DeinitTreeView:
Statement _ntui_DeinitTreeView{*treeView.tuiTreeView}
  !_ASSERT{*treeView}
  !_ASSERT{*treeView\obj\classID=#TUICLASS_TREEVIEW}

  If *treeView\root
    ntui_DestroyAllNodes{*treeView\root}
    *treeView\root = Null
  End If

  If *treeView\dosPatternP Then FreeVec_ *treeView\dosPatternP
  str_Free{&*treeView\dosPattern}

  !tuiFreeNotifyHandler{*treeView\onExpand}
  !tuiFreeNotifyHandler{*treeView\onCollapse}
  !tuiFreeNotifyHandler{*treeView\onSelect}

End Statement
!_MakeGlobalFuncPointer{_ntui_DeinitTreeView,{Null}}


_ntui_DispatchTreeViewEvent:
Function.l _ntui_DispatchTreeViewEvent{*treeView.tuiTreeView,*ev.tuiEvent}
  !_ASSERT{*treeView}
  !_ASSERT{*treeView\obj\classID=#TUICLASS_TREEVIEW}

  done.l = False
  Select *ev\id
    Case #TUIEV_MOUSEDOWN
      If *ev\value = 0 ; we want TreeView 0
        If ntui_HitObject{*treeView,*ev\pos\x,*ev\pos\y}
          ntui_SetFocus{*treeView}
          *treeView\obj\flags | #TUIF_ACTIVE
          ;str_Dup{&*ev\notifyID,*treeView\obj\onTouch}
          ntui_Refresh{*treeView,Null}
          hitl.l = (*ev\pos\y - *treeView\obj\cbox\top) / *treeView\rowheight
          hito.l = (*ev\pos\x - *treeView\obj\cbox\left)

          *node.tuiTreeNode = ntui_FindNode{*treeView\root,hitl}
          *treeView\active = *node
          If *node
            If *node\typ=#TUINODE_BRANCH
              ntui_DeactivateAll{*treeView\root}
              If *node\expanded=False
                !tuiHandleNotify{done,*treeView,onExpand,*ev}
                ;If *treeView\expandHook Then !_CallFuncPointer{*treeView\expandHook,res.l,*treeView,*node}
                ntui_SetNodeAttr{*node,#TUINA_ACTIVE,True}
                ntui_SetNodeAttr{*node,#TUINA_EXPANDED,True}
              Else
                !tuiHandleNotify{done,*treeView,onCollapse,*ev}
                ;If *treeView\collapseHook Then !_CallFuncPointer{*treeView\collapseHook,res.l,*treeView,*node}
                ntui_SetNodeAttr{*node,#TUINA_ACTIVE,False}
                ntui_SetNodeAttr{*node,#TUINA_EXPANDED,False}
              End If
            End If

            *rp.RastPort = ntui_ObtainRastPort{*treeView\obj\parent}
            If *rp
              _ntui_CalculateTreeViewMinSize{*treeView,*rp}
              _ntui_Layout{*treeView\obj\parent,*rp,Null}
              ntui_ReleaseRastPort{*treeView\obj\parent}
            End If
          End If
        End If
      End If

    Case #TUIEV_MOUSEUP
      If *ev\value = 0 ; we want TreeView 0
        If *treeView\obj\flags&#TUIF_ACTIVE
          If ntui_HitObject{*treeView,*ev\pos\x,*ev\pos\y}
            *treeView\obj\flags|#TUIF_ACTIVE - #TUIF_ACTIVE
            If *treeView\active
              !tuiHandleNotify{done,*treeView,onSelect,*ev}
            End If
          ;  ntui_Refresh{*treeView,Null}
          End If
          *treeView\active = Null
        End If
      End If

    Case #TUIEV_MOUSEMOVE

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_DispatchTreeViewEvent,{Null,Null}}


ntui_TreeView:
Function.tuiTreeView ntui_TreeView{*tagList.TagItem}
  *scrollView.tuiScrollView = ntui_BeginScrollView{Null}

  If *scrollView=Null Then Function Return Null

  flags.l = #TUIF_WANTTAB|#TUIF_WANTMOVER
  *treeView.tuiTreeView = (.tuiTreeView)_ntui_CreateObject{#TUICLASS_TREEVIEW,SizeOf.tuiTreeView,flags}

  If *treeView

    *treeView\step_\x              = *treeView\obj\engine\defStep\x
    *treeView\step_\y              = 1
    *treeView\subClassID           = #TUITRV_SIMPLE

    *treeView\rowheight            = 8
    *treeView\obj\borderType       = #TUIBORDER_NONE;RECESSED
    *treeView\leftOffset           = 0
    *treeView\topLine              = 0
    *treeView\dosPattern           = Null
    *treeView\dosPatternP          = Null

    *treeView\obj\bgTuiPen         = #TUIPEN_HALFSHADOW
    *treeView\obj\margin\left      = 0,0,0,0
    ;*treeView\scrollView           = *scrollView
    *treeView\root                 = ntui_CreateNode{Null,#TUINODE_BRANCH,"root","",0,#TUIINSERT_HEAD,False}
    *treeView\active               = Null

    *treeView\obj\Draw             = *_ntui_DrawTreeView
    *treeView\obj\Layout           = *_ntui_LayoutTreeView
    *treeView\obj\DispatchEvent    = *_ntui_DispatchTreeViewEvent
    *treeView\obj\CalculateMinSize = *_ntui_CalculateTreeViewMinSize
    *treeView\obj\Deinit           = *_ntui_DeinitTreeView
    *treeView\obj\SetAttr          = *_ntui_SetTreeViewAttr
    *treeView\obj\GetAttr          = *_ntui_GetTreeViewAttr

    !tuiInitNotifyHandler{*treeView\onExpand}
    !tuiInitNotifyHandler{*treeView\onCollapse}
    !tuiInitNotifyHandler{*treeView\onSelect}

    If *tagList Then ntui_SetAttrs{*treeView,*tagList}

;    _ntui_BeginChildren{*treeView}
;
;    *treeView\vScroller    = ntui_Scroller{Null}
;    If *treeView\vScroller
;      ntui_SetAttr{*treeView\vScroller,#TUISCA_ORIENTATION,#TUIORIENT_VERTICAL}
;      ntui_SetAttr{*treeView\vScroller,#TUISCA_HASARROWS,True}
;      ntui_SetAttr{*treeView\vScroller,#TUIA_BORDERTYPE,#TUIBORDER_NONE}
;    End If
;
;    *treeView\hScroller    = ntui_Scroller{Null}
;    If *treeView\hScroller
;      ntui_SetAttr{*treeView\hScroller,#TUISCA_ORIENTATION,#TUIORIENT_HORIZONTAL}
;      ntui_SetAttr{*treeView\hScroller,#TUISCA_HASARROWS,True}
;      ntui_SetAttr{*treeView\hScroller,#TUIA_BORDERTYPE,#TUIBORDER_NONE}
;    End If
;
;    _ntui_EndChildren{#TUICLASS_LISTVIEW}
;
;    If (*treeView\vScroller) Then ntui_Bind{*treeView,*treeView\vScroller}
;    If (*treeView\hScroller) Then ntui_Bind{*treeView,*treeView\hScroller}

    *treeView\collapseImg = ntui_CreateTBImage{*treeView\obj\engine,"NODECOLLAPSE",#TUISIZE_INLINE,#TUISIZE_INLINE}
    *treeView\expandImg   = ntui_CreateTBImage{*treeView\obj\engine,"NODEEXPAND",#TUISIZE_INLINE,#TUISIZE_INLINE}

    ntui_SetAttr{*scrollView,#TUIA_PADDING,0}
    ntui_SetAttr{*scrollView,#TUIA_BGPEN,*treeView\obj\bgTuiPen}

  End If

  ntui_EndScrollView{}

  Function Return *treeView

End Function
!_MakeGlobalFuncPointer{ntui_TreeView,{Null}}


ntui_DirView:
Function.tuiTreeView ntui_DirView{*tagList.TagItem}

  DEFTYPE.tagL10 ltagList : n.l = 0
  ltagList\tag[n]\ti_Tag = #TUITRAV_SUBCLASSID  , #TUITRV_FILESYSTEM   : n=n+1
  ltagList\tag[n]\ti_Tag = #TUITRAV_ONCOLLAPSECB, *_ntui_TreeViewOnCollapsePath  : n=n+1
  ltagList\tag[n]\ti_Tag = #TUITRAV_ONEXPANDCB  , *_ntui_TreeViewOnExpandPath    : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE,0

  *treeView.tuiTreeView = ntui_TreeView{ltagList}
  If *treeView
    ntui_DestroyAllNodes{*treeView\root}
    *treeView\root =  ntui_CreateNode{Null,#TUINODE_BRANCH,"Sys:","Sys:",0,#TUIINSERT_HEAD,False}
    If *tagList Then ntui_SetAttrs{*treeView,*tagList}
  End If

  Function Return *treeView

End Function
!_MakeGlobalFuncPointer{ntui_DirView,{Null}}


Statement ntui_InitTreeViewClass{}

  classID.l = ntui_RegisterClass{"treeview",(.tuiFunc)*ntui_TreeView,Null}

  ntui_RegisterAttr{classID,"onexpand"        ,#TUITRAV_ONEXPAND           ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"onexpandcb"      ,#TUITRAV_ONEXPANDCB         ,#TUIAT_PTR      , 0,0 }
  ntui_RegisterAttr{classID,"oncollapse"      ,#TUITRAV_ONCOLLAPSE         ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"oncollapsecb"    ,#TUITRAV_ONCOLLAPSECB       ,#TUIAT_PTR      , 0,0 }
  ntui_RegisterAttr{classID,"onselect"        ,#TUITRAV_ONSELECT           ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"onselectcb"      ,#TUITRAV_ONSELECTCB         ,#TUIAT_PTR      , 0,0 }
  ntui_RegisterAttr{classID,"rowheight"       ,#TUITRAV_ROWHEIGHT          ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"visiblelines"    ,#TUITRAV_VISIBLELINES       ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"totallines"      ,#TUITRAV_TOTALLINES         ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"topline"         ,#TUITRAV_TOPLINE            ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"visiblewidth"    ,#TUITRAV_VISIBLEWIDTH       ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"totalwidth"      ,#TUITRAV_TOTALWIDTH         ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"leftoffset"      ,#TUITRAV_LEFTOFFSET         ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"selected"        ,#TUITRAV_SELECTED           ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"dospattern"      ,#TUITRAV_DOSPATTERN         ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"subclassid"      ,#TUITRAV_SUBCLASSID         ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"rootnode"        ,#TUITRAV_ROOTNODE           ,#TUIAT_PTR      , 0,0 }

  classID.l = ntui_RegisterClass{"dirview",(.tuiFunc)*ntui_DirView,Null}

  ntui_RegisterAttr{classID,"onexpand"        ,#TUITRAV_ONEXPAND           ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"onexpandcb"      ,#TUITRAV_ONEXPANDCB         ,#TUIAT_PTR      , 0,0 }
  ntui_RegisterAttr{classID,"oncollapse"      ,#TUITRAV_ONCOLLAPSE         ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"oncollapsecb"    ,#TUITRAV_ONCOLLAPSECB       ,#TUIAT_PTR      , 0,0 }
  ntui_RegisterAttr{classID,"onselect"        ,#TUITRAV_ONSELECT           ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"onselectcb"      ,#TUITRAV_ONSELECTCB         ,#TUIAT_PTR      , 0,0 }
  ntui_RegisterAttr{classID,"rowheight"       ,#TUITRAV_ROWHEIGHT          ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"visiblelines"    ,#TUITRAV_VISIBLELINES       ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"totallines"      ,#TUITRAV_TOTALLINES         ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"topline"         ,#TUITRAV_TOPLINE            ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"visiblewidth"    ,#TUITRAV_VISIBLEWIDTH       ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"totalwidth"      ,#TUITRAV_TOTALWIDTH         ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"leftoffset"      ,#TUITRAV_LEFTOFFSET         ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"selected"        ,#TUITRAV_SELECTED           ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"dospattern"      ,#TUITRAV_DOSPATTERN         ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"rootnode"        ,#TUITRAV_ROOTNODE           ,#TUIAT_PTR      , 0,0 }
  ntui_RegisterAttr{classID,"root"            ,#TUITRAV_ROOT               ,#TUIAT_STRING   , 0,0 }
  
End Statement

ntui_InitTreeViewClass{}
