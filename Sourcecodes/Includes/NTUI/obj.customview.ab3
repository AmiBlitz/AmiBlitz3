; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 1
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 94
; CursorColumn    = 19
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
#TUI_HAS_CUSTOMVIEW = 1

#TUICVA_BASE          =  #TAG_USER

#TUICVA_HTOTAL        =  #TUICVA_BASE + 1 ; rw
#TUICVA_VTOTAL        =  #TUICVA_BASE + 2 ; rw
#TUICVA_HVISIBLE      =  #TUICVA_BASE + 3 ; rw
#TUICVA_VVISIBLE      =  #TUICVA_BASE + 4 ; rw
#TUICVA_HOFFSET       =  #TUICVA_BASE + 5 ; rw
#TUICVA_VOFFSET       =  #TUICVA_BASE + 6 ; rw
#TUICVA_HSTEP         =  #TUICVA_BASE + 7 ; rw
#TUICVA_VSTEP         =  #TUICVA_BASE + 8 ; rw

NEWTYPE.tuiCustomView

  obj.tuiObject            ; tui object header
  totalH.l
  totalV.l
  visibleH.l
  visibleV.l
  offsetH.l
  offsetV.l
  stepH.l
  stepV.l
  maxValue.l
  minValue.l
  step_.l

End NEWTYPE


_ntui_DrawCustomView:
Statement _ntui_DrawCustomView{*customView.tuiCustomView,*rp.RastPort,*rpclip.tuiRect}
  !_ASSERT{*customView}
  !_ASSERT{*customView\obj\classID=#TUICLASS_CUSTOMVIEW}

  *engine.tuiEngine = *customView\obj\engine
  !_ASSERT{*engine}
  !_ASSERT{*rp}

  If (*customView\obj\borderType><#TUIBORDER_NONE)
    ntui_DrawBorder{*engine,*rp,*customView\obj\bbox,*customView\obj\borderType,*customView\obj\flags}
  End If

  ; padding area, background color/image?

  ntui_PostNotify{*customView,!NOTIFYID_REFRESH}

End Statement
!_MakeGlobalFuncPointer{_ntui_DrawCustomView,{Null,Null,Null}}


_ntui_SetCustomViewAttr:
Function.l _ntui_SetCustomViewAttr{*customView.tuiCustomView,ti_Tag.l,ti_Data.l}
  !_ASSERT{*customView}
  !_ASSERT{*customView\obj\classID=#TUICLASS_CUSTOMVIEW}

  done.l = True
  Select ti_Tag
    Case #TUICVA_HTOTAL       : *customView\totalH   = ti_Data : _ntui_PropagateBind{*customView,#TUIEV_BIND_HTOTAL  ,*customView\totalH  ,Null}
    Case #TUICVA_VTOTAL       : *customView\totalV   = ti_Data : _ntui_PropagateBind{*customView,#TUIEV_BIND_VTOTAL  ,*customView\totalV  ,Null}
    Case #TUICVA_HVISIBLE     : *customView\visibleH = ti_Data : _ntui_PropagateBind{*customView,#TUIEV_BIND_HVISIBLE,*customView\visibleH,Null}
    Case #TUICVA_VVISIBLE     : *customView\visibleV = ti_Data : _ntui_PropagateBind{*customView,#TUIEV_BIND_VVISIBLE,*customView\visibleV,Null}
    Case #TUICVA_HOFFSET      : *customView\offsetH  = ti_Data : _ntui_PropagateBind{*customView,#TUIEV_BIND_HVALUE  ,*customView\offsetH ,Null}
    Case #TUICVA_VOFFSET      : *customView\offsetV  = ti_Data : _ntui_PropagateBind{*customView,#TUIEV_BIND_VVALUE  ,*customView\offsetV ,Null}
    Case #TUICVA_HSTEP        : *customView\stepH    = ti_Data : _ntui_PropagateBind{*customView,#TUIEV_BIND_HSTEP   ,*customView\stepH   ,Null}
    Case #TUICVA_VSTEP        : *customView\stepV    = ti_Data : _ntui_PropagateBind{*customView,#TUIEV_BIND_VSTEP   ,*customView\stepV   ,Null}
    Default
      done = False
  End Select
  Function Return done
End Function
!_MakeGlobalFuncPointer{_ntui_SetCustomViewAttr,{Null,0,0}}


_ntui_GetCustomViewAttr:
Function.l _ntui_GetCustomViewAttr{*customView.tuiCustomView,ti_Tag.l,*ti_Data.longP}
  !_ASSERT{*customView}
  !_ASSERT{*customView\obj\classID=#TUICLASS_CUSTOMVIEW}

  done.l = True
  Select ti_Tag
    Case #TUICVA_HTOTAL       : *ti_Data\l = *customView\totalH
    Case #TUICVA_VTOTAL       : *ti_Data\l = *customView\totalV
    Case #TUICVA_HVISIBLE     : *ti_Data\l = *customView\visibleH
    Case #TUICVA_VVISIBLE     : *ti_Data\l = *customView\visibleV
    Case #TUICVA_HOFFSET      : *ti_Data\l = *customView\offsetH
    Case #TUICVA_VOFFSET      : *ti_Data\l = *customView\offsetV
    Case #TUICVA_HSTEP        : *ti_Data\l = *customView\stepH
    Case #TUICVA_VSTEP        : *ti_Data\l = *customView\stepV
    Default
      done = False
  End Select
  Function Return done
End Function
!_MakeGlobalFuncPointer{_ntui_GetCustomViewAttr,{Null,0,Null}}


_ntui_LayoutCustomView:
Statement _ntui_LayoutCustomView{*customView.tuiCustomView,*rp.RastPort,*bbox.tuiRect}

  !_ASSERT{*customView}
  !_ASSERT{*customView\obj\classID=#TUICLASS_CUSTOMVIEW}
  !_ASSERT{*rp}
  *engine.tuiEngine = *customView\obj\engine
  !_ASSERT{*engine}

 *obj.tuiObject = *customView

  If *bbox
    !tuiCopyRect{*obj\bbox,*bbox}
  End If
  !tuiRemBorder{*obj\ibox,*obj\bbox,*obj\border}
  !tuiRemBorder{*obj\cbox,*obj\ibox,*obj\padding}

  _ntui_SetCustomViewAttr{*customView,#TUICVA_HVISIBLE, !tuiRectWidth{*customView\obj\cbox} }
  _ntui_SetCustomViewAttr{*customView,#TUICVA_VVISIBLE, !tuiRectHeight{*customView\obj\cbox} }

End Statement
!_MakeGlobalFuncPointer{_ntui_LayoutCustomView,{Null,Null,Null}}


_ntui_DispatchCustomViewEvent:
Function.l _ntui_DispatchCustomViewEvent{*customView.tuiCustomView,*ev.tuiEvent}
  !_ASSERT{*customView}
  !_ASSERT{*customView\obj\classID=#TUICLASS_CUSTOMVIEW}

  *engine.tuiEngine = *customView\obj\engine
  !_ASSERT{*engine}

  done.l = False

  Select  *ev\id
    Case #TUIEV_MOUSEDOWN
      If  (!tuiRectHit{*customView\obj\bbox,*ev\pos\x,*ev\pos\y}) OR ((*customView\obj\flags&#TUIF_ACTIVE)=#TUIF_ACTIVE)
      End If

    Case #TUIEV_MOUSEUP

    Case #TUIEV_MOUSEMOVE
      If ((*customView\obj\flags&#TUIF_ACTIVE)=#TUIF_ACTIVE) OR (!tuiRectHit{*customView\obj\bbox,*ev\pos\x,*ev\pos\y})
        If ((*customView\obj\flags&#TUIF_ACTIVE)=0) Then Function Return False ; others can have this event too
      End If

    Case #TUIEV_KEYDOWN   :
    Case #TUIEV_KEYUP     :
    Case #TUIEV_TICK      :

    Case #TUIEV_HSCROLL
      _ntui_SetCustomViewAttr{*customView,#TUICVA_HOFFSET,*customView\offsetH + *customView\stepH * *ev\value }
      done = True

    Case #TUIEV_VSCROLL
      _ntui_SetCustomViewAttr{*customView,#TUICVA_VOFFSET,*customView\offsetV + *customView\stepV * *ev\value }
      done = True

    ; horizontal bindings
    Case #TUIEV_BIND_HVALUE   : *customView\offsetH  = *ev\value : done = True          ;: str_Dup{&*ev\notifyID,*customView\onScroll}
    Case #TUIEV_BIND_HTOTAL   : *customView\totalH   = *ev\value : done = True
    Case #TUIEV_BIND_HVISIBLE : *customView\visibleH = *ev\value : done = True
    Case #TUIEV_BIND_HDELTA   : *customView\offsetH  + *customView\stepH * *ev\value :done = True ;: str_Dup{&*ev\notifyID,*customView\onScroll}
    Case #TUIEV_BIND_HSTEP    : *customView\stepH    = *ev\value : done = True

    ; vertical bindings
    Case #TUIEV_BIND_VVALUE   : *customView\offsetV  = *ev\value : done = True          ;: str_Dup{&*ev\notifyID,*customView\onScroll}
    Case #TUIEV_BIND_VTOTAL   : *customView\totalV   = *ev\value : done = True
    Case #TUIEV_BIND_VVISIBLE : *customView\visibleV = *ev\value : done = True
    Case #TUIEV_BIND_VDELTA   : *customView\offsetV  + *customView\stepV * *ev\value :done = True ;: str_Dup{&*ev\notifyID,*customView\onScroll}
    Case #TUIEV_BIND_VSTEP    : *customView\stepV    = *ev\value : done = True

    ; value bindings
    Case #TUIEV_BIND_VALUE    : *customView\obj\value  = *ev\value : done = True
    Case #TUIEV_BIND_MAXVALUE : *customView\maxValue   = *ev\value : done=True
    Case #TUIEV_BIND_MINVALUE : *customView\minValue   = *ev\value : done=True
    Case #TUIEV_BIND_DELTA    : *customView\obj\value  + *ev\value * *customView\step_ : done=True
    Case #TUIEV_BIND_STEP     : *customView\step_      = *ev\value : done=True

    ; string binding
    Case #TUIEV_BIND_STRING   :
      If *ev\string Then str_WritePtr{&*customView\obj\string,&*ev\string\str,*ev\string\size} : Else str_Free{&*customView\obj\string}
      done=True

    Case #TUIEV_PROPAGATE
      _ntui_PropagateBind{*customView,#TUIEV_BIND_VTOTAL   ,*customView\totalV    ,Null}
      _ntui_PropagateBind{*customView,#TUIEV_BIND_VVISIBLE ,*customView\visibleV  ,Null}
      _ntui_PropagateBind{*customView,#TUIEV_BIND_VVALUE   ,*customView\offsetV   ,Null}
      _ntui_PropagateBind{*customView,#TUIEV_BIND_VSTEP    ,*customView\stepV     ,Null}

      _ntui_PropagateBind{*customView,#TUIEV_BIND_HTOTAL   ,*customView\totalH    ,Null}
      _ntui_PropagateBind{*customView,#TUIEV_BIND_HVISIBLE ,*customView\visibleH  ,Null}
      _ntui_PropagateBind{*customView,#TUIEV_BIND_HVALUE   ,*customView\offsetH   ,Null}
      _ntui_PropagateBind{*customView,#TUIEV_BIND_HSTEP    ,*customView\stepH     ,Null}

      _ntui_PropagateBind{*customView,#TUIEV_BIND_MINVALUE ,*customView\minValue  ,Null}
      _ntui_PropagateBind{*customView,#TUIEV_BIND_MAXVALUE ,*customView\maxValue  ,Null}
      _ntui_PropagateBind{*customView,#TUIEV_BIND_VALUE    ,*customView\obj\value ,Null}
      _ntui_PropagateBind{*customView,#TUIEV_BIND_STEP     ,*customView\step_     ,Null}

      _ntui_PropagateBind{*customView,#TUIEV_BIND_STRING   ,0,*customView\obj\string}
      done=True

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_DispatchCustomViewEvent,{Null,Null}}


_ntui_CalculateCustomViewMinSize:
Statement _ntui_CalculateCustomViewMinSize{*customView.tuiCustomView,*rp.RastPort}
  !_ASSERT{*customView}
  !_ASSERT{*customView\obj\classID=#TUICLASS_CUSTOMVIEW}

*engine.tuiEngine = *customView\obj\engine : If *engine=Null OR *rp=Null Then Statement Return

*customView\obj\minsize\x  + !tuiBorderWidth{*customView\obj\padding}
*customView\obj\minsize\y  + !tuiBorderHeight{*customView\obj\padding}

_ntui_GetBorderSize{*engine,*customView\obj\borderType,*customView\obj\flags,*customView\obj\border}
*customView\obj\minsize\x + !tuiBorderWidth{*customView\obj\border}
*customView\obj\minsize\y + !tuiBorderHeight{*customView\obj\border}

End Statement
!_MakeGlobalFuncPointer{_ntui_CalculateCustomViewMinSize,{Null,Null}}


_ntui_DeinitCustomView:
Statement _ntui_DeinitCustomView{*customView.tuiCustomView}
  !_ASSERT{*customView}
  !_ASSERT{*customView\obj\classID=#TUICLASS_CUSTOMVIEW}

End Statement
!_MakeGlobalFuncPointer{_ntui_DeinitCustomView,{Null}}


ntui_CustomView:
Function.tuiCustomView ntui_CustomView{*tagList.TagItem}

  flags.l = #TUIF_CENTER|#TUIF_MIDDLE|#TUIF_WANTMOVER|#TUIF_WANTTAB
  *customView.tuiCustomView = (.tuiCustomView)_ntui_CreateObject{#TUICLASS_CUSTOMVIEW,SizeOf.tuiCustomView,flags}
  If *customView

    *customView\stepH           = 1
    *customView\stepV           = 1
    *customView\visibleH        = 1
    *customView\visibleV        = 1
    *customView\totalH          = 1
    *customView\totalV          = 1
    *customView\offsetH         = 0
    *customView\offsetV         = 0

    *customView\obj\borderType = #TUIBORDER_RECESSED

    *customView\obj\Draw             = *_ntui_DrawCustomView
    *customView\obj\Layout           = *_ntui_LayoutCustomView
    *customView\obj\DispatchEvent    = *_ntui_DispatchCustomViewEvent
    *customView\obj\CalculateMinSize = *_ntui_CalculateCustomViewMinSize
    *customView\obj\Deinit           = *_ntui_DeinitCustomView
    *customView\obj\SetAttr          = *_ntui_SetCustomViewAttr
    *customView\obj\GetAttr          = *_ntui_GetCustomViewAttr

    If *tagList Then ntui_SetAttrs{*customView,*tagList}

  End If

  Function Return *customView

End Function
!_MakeGlobalFuncPointer{ntui_CustomView,{Null}}


Statement ntui_InitCustomViewClass{}

  classID.l = ntui_RegisterClass{"customview",(.tuiFunc)*ntui_CustomView,Null}
  ntui_RegisterAttr{classID,"htotal"      , #TUICVA_HTOTAL    ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"vtotal"      , #TUICVA_VTOTAL    ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"hvisible"    , #TUICVA_HVISIBLE  ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"vvisible"    , #TUICVA_VVISIBLE  ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"hoffset"     , #TUICVA_HOFFSET   ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"voffset"     , #TUICVA_VOFFSET   ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"hstep"       , #TUICVA_HSTEP     ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"vstep"       , #TUICVA_VSTEP     ,#TUIAT_INT    , 0,0 }

End Statement

ntui_InitCustomViewClass{}
