; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res,SDSTCP2.res,xpk.res,ttengine.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 4
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 504
; CursorColumn    = 14
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: ntui_scroller.include                                                 /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 06/01/2009                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
#TUI_HAS_SCROLLER=1

CNIF #__include=0
optimize 7
Syntax 2
CEND

NEWTYPE.tuiScroller
obj.tuiObject            ; tui object header
visible.l                ; logic visible
total.l                  ; logic total
step_.l                  ; logic scroll step
orient.l
grab.tuiPixel
grabValue.l
grabbed.l
*incArrow.tuiButton
*decArrow.tuiButton
onChange.tuiEventHandler
End NEWTYPE

#TUISCA_BASE       = #TUIA_USER
#TUISCA_TOP        = #TUIA_VALUE      ; top value of scroller
#TUISCA_VISIBLE    = #TUISCA_BASE  +1 ; visible logic units
#TUISCA_TOTAL      = #TUISCA_BASE  +2 ; total logic units
#TUISCA_STEP       = #TUISCA_BASE  +3 ; units to scroll
#TUISCA_ONCHANGE   = #TUISCA_BASE  +4 ; when the value of the scroller changes

#TUISCROLLER_AUTO   = 0
#TUISCROLLER_ALWAYS = 1
#TUISCROLLER_NEVER  = 2


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_UpdateScroller {*scroller.tuiScroller,@top.l,@visible.l,:: /
;/ @total.l}                                                                   /
;/                                                                             /
;/ Description:                                                                /
;/ * tui scroller newtype */                                                   /
;/ obj.tuiObject            ; tui object header                                /
;/ * update the scrollers values */                                            /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scroller.tuiScroller    : ???                                         /
;/ - top.l    : ???                                                            /
;/ - visible.l    : ???                                                        /
;/ - total.l    : ???                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement _ntui_UpdateScroller{*scroller.tuiScroller,top.l,visible.l,total.l,step_.l,bind.w}
!_ASSERT{*scroller}
!_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}

If visible<0 Then visible=0
If total  <0 Then total  =0
If top    <0 Then top    =0
If step_  <1 Then step_  =1

If top+visible>total Then top=total-visible
If top<0 Then top=0
If top><*scroller\obj\value OR visible><*scroller\visible OR total><*scroller\total OR step_><*scroller\step_
 ; If visible>total Then visible=total

  If *scroller\orient=#TUIORIENT_HORIZONTAL
    If top    ><*scroller\obj\value Then *scroller\obj\value = top     : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_HVALUE  ,top    ,Null}
    If visible><*scroller\visible   Then *scroller\visible   = visible : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_HVISIBLE,visible,Null}
    If total  ><*scroller\total     Then *scroller\total     = total   : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_HTOTAL  ,total  ,Null}
    If step_  ><*scroller\step_     Then *scroller\step_     = step_   : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_HSTEP   ,step_  ,Null}
  Else
    If top    ><*scroller\obj\value Then *scroller\obj\value = top     : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_VVALUE  ,top    ,Null}
    If visible><*scroller\visible   Then *scroller\visible   = visible : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_VVISIBLE,visible,Null}
    If total  ><*scroller\total     Then *scroller\total     = total   : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_VTOTAL  ,total  ,Null}
    If step_  ><*scroller\step_     Then *scroller\step_     = step_   : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_VSTEP   ,step_  ,Null}
  End If

  ntui_Refresh{*scroller,*scroller\obj\cbox}
End If
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_AddArrows {}                                                   /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                            /
;///////////////////////////////////////////////////////////////////////////////
Statement ntui_AddArrows{*scroller.tuiScroller}
  If *scroller=Null
    If tuiGlobal\buildHelper\current\classID=#TUICLASS_SCROLLER
      *scroller = (.tuiScroller)tuiGlobal\buildHelper\current
    End If
  End If

  If *scroller
    _ntui_BeginChildren{*scroller}
    ;tuiGlobal\buildHelper\tuiParent              = *scroller
    ;tuiGlobal\buildHelper\tuiPrev                = Null

    If *scroller\orient = #TUIORIENT_HORIZONTAL
      *scroller\decArrow    = ntui_FunctionButton{#TUIBUTTON_ARROWLEFT ,"",*scroller\obj\flags}
      *scroller\incArrow    = ntui_FunctionButton{#TUIBUTTON_ARROWRIGHT,"",*scroller\obj\flags}
      *scroller\obj\flags | #TUIF_FIXHEIGHT
    Else
      *scroller\incArrow    = ntui_FunctionButton{#TUIBUTTON_ARROWDOWN ,"",*scroller\obj\flags}
      *scroller\decArrow    = ntui_FunctionButton{#TUIBUTTON_ARROWUP   ,"",*scroller\obj\flags}
      *scroller\obj\flags | #TUIF_FIXWIDTH
    End If

    _ntui_EndChildren{#TUICLASS_SCROLLER}
    ;tuiGlobal\buildHelper\tuiPrev    = tuiGlobal\buildHelper\tuiParent
    ;tuiGlobal\buildHelper\tuiCurrent = tuiGlobal\buildHelper\tuiParent
    ;If tuiGlobal\buildHelper\tuiParent Then tuiGlobal\buildHelper\tuiParent = tuiGlobal\buildHelper\tuiParent\parent

    If (*scroller\decArrow) Then ntui_Bind{*scroller,*scroller\decArrow}
    If (*scroller\incArrow) Then ntui_Bind{*scroller,*scroller\incArrow}

  End If
End Statement


_ntui_SetScrollerAttr:
Function.w _ntui_SetScrollerAttr{*scroller.tuiScroller,ti_Tag.l,ti_Data.l}
!_ASSERT{*scroller}
!_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}

  done.w = True
  Select ti_Tag
    Case #TUISCA_TOP        : _ntui_UpdateScroller{*scroller,ti_Data,*scroller\visible,*scroller\total,*scroller\step_,True}
    Case #TUISCA_VISIBLE    : _ntui_UpdateScroller{*scroller,*scroller\obj\value,ti_Data,*scroller\total,*scroller\step_,True}
    Case #TUISCA_TOTAL      : _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,ti_Data,*scroller\step_,True}
    Case #TUISCA_STEP       : _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,*scroller\total,ti_Data,True}
    Case #TUISCA_ONCHANGE   : str_WritePtr{&*scroller\onChange\notifyID ,ti_Data}

    Case #TUIA_XMLATTR
      *xmlA.tuiXmlAttr = ti_Data
      Select Peek.s(*xmlA\nameP)
        Case "top"         : done=ntui_SetAttr{*scroller,#TUISCA_TOP       ,*xmlA\value}
        Case "visible"     : done=ntui_SetAttr{*scroller,#TUISCA_VISIBLE   ,*xmlA\value}
        Case "total"       : done=ntui_SetAttr{*scroller,#TUISCA_TOTAL     ,*xmlA\value}
        Case "step"        : done=ntui_SetAttr{*scroller,#TUISCA_STEP      ,*xmlA\value}
        Case "onchange"    : done=ntui_SetAttr{*scroller,#TUISCA_ONCHANGE  ,*xmlA\stringP}
        Case "arrows"      :
          If *xmlA\value
            ntui_AddArrows{*scroller}
          Else
            If *scroller\incArrow Then ntui_FreeObject{*scroller\incArrow} : *scroller\incArrow = Null
            If *scroller\decArrow Then ntui_FreeObject{*scroller\decArrow} : *scroller\decArrow = Null
          End If
        Default
          done = False
       End Select

    Default
      done=False

  End Select
  Function Return done

End Function


_ntui_GetScrollerAttr:
Function.w _ntui_GetScrollerAttr{*scroller.tuiScroller,ti_Tag.l,*ti_Data.longP}
!_ASSERT{*scroller}
!_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}

done.w = True
Select ti_Tag
  Case #TUISCA_TOP        : *ti_Data\l = *scroller\obj\value
  Case #TUISCA_VISIBLE    : *ti_Data\l = *scroller\visible
  Case #TUISCA_TOTAL      : *ti_Data\l = *scroller\total
  Case #TUISCA_STEP       : *ti_Data\l = *scroller\step_
  Case #TUISCA_ONCHANGE   : *ti_Data\l = str_GetPtr{*scroller\onChange\notifyID}
  Default
    done=False

End Select
Function Return done
End Function


_ntui_LayoutScroller:
Statement _ntui_LayoutScroller{*scroller.tuiScroller,*rp.RastPort,*bbox.tuiRect}
  !_ASSERT{*scroller}
  !_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}

  *tui.tuiObject = *scroller

  If *bbox
    !tuiCopyRect{*tui\bbox,*bbox}
  End If

  !tuiRemBorder{*tui\ibox,*tui\bbox,*tui\border}
  ;!tuiCopyRect{*tui\ibox,*tui\bbox}
  If *scroller\incArrow
    *iabs.tuiRect = *scroller\incArrow\obj\border
    *dabs.tuiRect = *scroller\decArrow\obj\border

    If *scroller\orient=#TUIORIENT_HORIZONTAL
      fbb.l = !tuiRectHeight{*tui\ibox}
      fba.l = *scroller\obj\minsize\x ; !tuiRectWidth{*tui\ibox}
      If fbb>fba Then fbb=fba
      abox.tuiRect\left = *tui\ibox\right-fbb+1,*tui\ibox\top,*tui\ibox\right,*tui\ibox\bottom
      _ntui_Layout{*scroller\incArrow,*rp,abox}
      *tui\ibox\right = abox\left-1

      abox.tuiRect\left = *tui\ibox\left,*tui\ibox\top,*tui\ibox\left+fbb-1,*tui\ibox\bottom
      _ntui_Layout{*scroller\decArrow,*rp,abox}
      *tui\ibox\left = abox\right+1
    Else
      fbb.l = !tuiRectWidth{*tui\ibox}
      ;fba.l = !tuiRectHeight{*tui\ibox}
      fba.l = *scroller\obj\minsize\y
      If fbb>fba Then fbb=fba

      abox.tuiRect\left = *tui\ibox\left,*tui\ibox\bottom-fbb+1,*tui\ibox\right,*tui\ibox\bottom
      _ntui_Layout{*scroller\incArrow,*rp,abox}
      *tui\ibox\bottom = abox\top-1

      abox.tuiRect\left = *tui\ibox\left,*tui\ibox\top,*tui\ibox\right,*tui\ibox\top+fbb-1
      _ntui_Layout{*scroller\decArrow,*rp,abox}
      *tui\ibox\top = abox\bottom+1
    End If
  End If
  ;!tuiRemBorder{*tui\cbox,*tui\ibox,*tui\padding}
  !tuiCopyRect{*tui\cbox,*tui\ibox}
End Statement



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.w = _ntui_DispatchScroller {*scroller.tuiScroller,*tuiEve:: /
;/ nt.tuiEvent}                                                                /
;/                                                                             /
;/ Description:                                                                /
;/ * do what happens if the user operates the scroller */                      /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scroller.tuiScroller    : ???                                         /
;/ - *ev.tuiEvent    : ???                                               /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_OnScrollerChange:
Function.w _ntui_OnScrollerChange{*scroller.tuiScroller,*ev.tuiEvent}
  str_Dup{&*ev\notifyID,*scroller\onChange\notifyID}
  Function Return False
End Function


_ntui_DispatchScrollerEvent:
Function.w _ntui_DispatchScrollerEvent{*scroller.tuiScroller,*ev.tuiEvent}
  !_ASSERT{*scroller}
  !_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}
  !_ASSERT{*ev}
  *tuiEngine.tuiEngine = *scroller\obj\engine
  *tui.tuiObject = *scroller\obj
  done.w = False

  Select *ev\evID
    Case #TUIEV_MOUSEDOWN:
      If *ev\value=0
        If !tuiRectHit{*tui\cbox,*ev\pos\x,*ev\pos\y}
          done=True
          ntui_SetFocus{*scroller}
          *scroller\obj\flags | #TUIF_ACTIVE
          ;str_Dup{&*ev\notifyID,*scroller\obj\onTouch}
          ntui_Refresh{*scroller,Null}

          *scroller\grab\x    = *ev\pos\x - *scroller\obj\cbox\left
          *scroller\grab\y    = *ev\pos\y - *scroller\obj\cbox\top
          *scroller\grabValue = *scroller\obj\value
          *scroller\grabbed   = True

           ;/* check if not clicked in empty area */
          cbox.tuiRect\left   = *scroller\obj\cbox\left
          cbox.tuiRect\top    = *scroller\obj\cbox\top
          cbox.tuiRect\right  = *scroller\obj\cbox\right
          cbox.tuiRect\bottom = *scroller\obj\cbox\bottom
          total.l = *scroller\total
          If total<=0 Then total=1

          Select *scroller\orient
            Case #TUIORIENT_HORIZONTAL
              totalPixel.l   = !tuiRectWidth{*scroller\obj\cbox}
              visiblePixel.l = *scroller\visible   * totalPixel / total
              If visiblePixel<*tuiEngine\defSize[#TUISIZE_MIN] Then visiblePixel=*tuiEngine\defSize[#TUISIZE_MIN]
              vtotal.l       = *scroller\total-*scroller\visible
              If vtotal<1 Then vtotal=1
              topPixel.l     = (*scroller\obj\value) * (totalPixel-visiblePixel) / (vtotal)

              If *scroller\grab\x<topPixel
                _ntui_UpdateScroller{*scroller,*scroller\obj\value - *scroller\visible+1,*scroller\visible,*scroller\total,*scroller\step_,True}
                *scroller\grabbed = False
              End If
              If *scroller\grab\x>topPixel + visiblePixel
                _ntui_UpdateScroller{*scroller,*scroller\obj\value + *scroller\visible-1,*scroller\visible,*scroller\total,*scroller\step_,True}
                *scroller\grabbed = False
              End If

            Case #TUIORIENT_VERTICAL
              totalPixel.l   = !tuiRectHeight{*scroller\obj\cbox}
              visiblePixel.l = *scroller\visible   * totalPixel / total
              If visiblePixel<*tuiEngine\defSize[#TUISIZE_MIN] Then visiblePixel=*tuiEngine\defSize[#TUISIZE_MIN]
              vtotal.l       = *scroller\total-*scroller\visible
              If vtotal<1 Then vtotal=1
              topPixel.l     = (*scroller\obj\value) * (totalPixel-visiblePixel) / (vtotal)

              If *scroller\grab\y<topPixel
                _ntui_UpdateScroller{*scroller,*scroller\obj\value - *scroller\visible+1,*scroller\visible,*scroller\total,*scroller\step_,True}
                *scroller\grabbed = False
              End If
              If *scroller\grab\y>topPixel + visiblePixel
                _ntui_UpdateScroller{*scroller,*scroller\obj\value + *scroller\visible-1,*scroller\visible,*scroller\total,*scroller\step_,True}
                *scroller\grabbed = False
              End If

          End Select
        End If
      End If

    Case #TUIEV_MOUSEUP
      If *ev\value=0
        ;str_Dup{&*ev\notifyID,*scroller\obj\onRelease}
        *scroller\obj\flags|#TUIF_ACTIVE - #TUIF_ACTIVE
        ntui_Refresh{*scroller,Null}
        *scroller\grabbed=False
        done=True
      End If

    Case #TUIEV_VSCROLL
      If *scroller\orient=#TUIORIENT_VERTICAL
        _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value + *scroller\step_ * *ev\value} : done=True
      End If

    Case #TUIEV_HSCROLL
      If *scroller\orient=#TUIORIENT_HORIZONTAL
        _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value + *scroller\step_ * *ev\value} : done=True
      End If

    Case #TUIEV_BIND_VDELTA
      If *scroller\orient=#TUIORIENT_VERTICAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value+*scroller\step_ * *ev\value,*scroller\visible,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_HDELTA
       If *scroller\orient=#TUIORIENT_HORIZONTAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value+*scroller\step_ * *ev\value,*scroller\visible,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_VVALUE
      If *scroller\orient=#TUIORIENT_VERTICAL
        _ntui_UpdateScroller{*scroller,*ev\value,*scroller\visible,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_HVALUE
      If *scroller\orient=#TUIORIENT_HORIZONTAL
        _ntui_UpdateScroller{*scroller,*ev\value,*scroller\visible,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_HVISIBLE
      If *scroller\orient=#TUIORIENT_HORIZONTAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*ev\value,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_VVISIBLE
      If *scroller\orient=#TUIORIENT_VERTICAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*ev\value,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_HTOTAL
      If *scroller\orient=#TUIORIENT_HORIZONTAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,*ev\value,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_VTOTAL
      If *scroller\orient=#TUIORIENT_VERTICAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,*ev\value,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_HSTEP
      If *scroller\orient=#TUIORIENT_HORIZONTAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,*scroller\total,*ev\value,False} : done=True
      End If

    Case #TUIEV_BIND_VSTEP
      If *scroller\orient=#TUIORIENT_VERTICAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,*scroller\total,*ev\value,False} : done=True
      End If

    Case #TUIEV_PROPAGATE
      If *scroller\orient=#TUIORIENT_VERTICAL
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_VTOTAL  ,*scroller\total    ,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_VVALUE  ,*scroller\obj\value,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_VVISIBLE,*scroller\visible  ,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_VSTEP   ,*scroller\step_    ,Null}
        done=True
      End If
      If *scroller\orient=#TUIORIENT_HORIZONTAL
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_HTOTAL  ,*scroller\total    ,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_HVALUE  ,*scroller\obj\value,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_HVISIBLE,*scroller\visible  ,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_HSTEP   ,*scroller\step_    ,Null}
        done=True
      End If

    Case #TUIEV_KEYDOWN
      Select *ev\value
        Case #RAWKEY_LEFT
          If *scroller\orient=#TUIORIENT_HORIZONTAL
            _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value - *scroller\step_}
          Else
            _ntui_PropagateBind{*scroller,#TUIEV_BIND_HDELTA  ,-1    ,Null}
          End If
          done=True
        Case #RAWKEY_RIGHT
          If *scroller\orient=#TUIORIENT_HORIZONTAL
            _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value + *scroller\step_}
          Else
            _ntui_PropagateBind{*scroller,#TUIEV_BIND_HDELTA  ,1    ,Null}
          End If
          done=True
        Case #RAWKEY_UP
          If *scroller\orient=#TUIORIENT_VERTICAL
            _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value - *scroller\step_}
          Else
            _ntui_PropagateBind{*scroller,#TUIEV_BIND_VDELTA  ,-1    ,Null}
          End If
          done=True
        Case #RAWKEY_DOWN
          If *scroller\orient=#TUIORIENT_VERTICAL
            _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value + *scroller\step_}
          Else
            _ntui_PropagateBind{*scroller,#TUIEV_BIND_VDELTA  ,1    ,Null}
          End If
          done=True
        ;Case #RAWKEY_WHEELUP   : _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value + *scroller\step_} : done=True
        ;Case #RAWKEY_WHEELDOWN : _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value - *scroller\step_} : done=True
      End Select

    Case #TUIEV_MOUSEMOVE
      If *scroller\obj\flags&#TUIF_ACTIVE
        If *scroller\grabbed

          Select *scroller\orient
            Case #TUIORIENT_HORIZONTAL
              totalpixel.l = !tuiRectWidth{*scroller\obj\cbox} : If totalpixel<=0 Then totalpixel=1
              newPos.l   = *ev\pos\x - *scroller\obj\cbox\left - *scroller\grab\x
              newValue.l = newPos * *scroller\total / totalpixel + *scroller\grabValue
            Case #TUIORIENT_VERTICAL
              totalpixel.l = !tuiRectHeight{*scroller\obj\cbox} : If totalpixel<=0 Then totalpixel=1
              newPos.l   = *ev\pos\y - *scroller\obj\cbox\top - *scroller\grab\y
              newValue.l = newPos * *scroller\total / totalpixel + *scroller\grabValue
          End Select
          ;If newvalue>*scroller\total-*scroller\visible Then newvalue = *scroller\total-*scroller\visible
          ;If newvalue<0 Then newvalue=0
          ;If (*scroller\obj\flags&#TUIF_IMMIDIATE) Then *ev\notify = *scroller\obj\notify
          ;str_Dup{&*ev\notifyID,*scroller\obj\onClick}
           If *scroller\onChange\callback Then !_CallFuncPointer{*scroller\onChange\callback,done,*scroller,*ev}
           If done=False
            _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,newValue}
          End If
        End If
        done=True
      End If

    Default
      done = False

  End Select

  If done
    If (*ev\notifyID)
      *ev\obj = *scroller
      _ntui_QueueEvent{*scroller\obj\engine\outQ,*ev}
    Else
      _ntui_DestroyEvent{*ev}
    End If
  End If


Function Return done
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawScroller {*scroller.tuiScroller,*rp.RastPort}           /
;/                                                                             /
;/ Description:                                                                /
;/ * draw the Scroller in all its beauty */                                      /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scroller.tuiScroller    : ???                                         /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DrawScroller:
Statement _ntui_DrawScroller{*scroller.tuiScroller,*rp.RastPort,*rpclip.tuiRect}
  !_ASSERT{*scroller}
  !_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}
  *tuiEngine.tuiEngine = *scroller\obj\engine
  !_ASSERT{*tuiEngine}
  *tui.tuiObject = *scroller\obj

  If ((*tui\flags&#TUIF_ONSCREEN)=0) Then Statement Return

  !tuiAndRect{bclip.tuiRect,*tui\bbox,*rpclip}
  If !tuiValidRect{bclip}=False Then Statement Return

    If *scroller\incArrow
      If (*scroller\incArrow\obj\flags&#TUIF_ONSCREEN) Then _ntui_Draw{*scroller\incArrow,*rp,*rpclip}
    End If
    If *scroller\decArrow
      If (*scroller\decArrow\obj\flags&#TUIF_ONSCREEN) Then _ntui_Draw{*scroller\decArrow,*rp,*rpclip}
    End If


  If (*tui\borderType><#TUIBORDER_NONE)
    bgDone.l = ntui_DrawBorder{*tuiEngine,*rp,*tui\bbox,*tui\borderType,*tui\flags}
  End If

  ;/* get the colors */
  If *scroller\obj\flags&#TUIF_ACTIVE
    bgpen.l = *tuiEngine\pen[#TUIPEN_MARKER]
    fgpen.l = *tuiEngine\pen[#TUIPEN_ACTIVETEXT]
  Else
    bgpen.l = *tuiEngine\pen[#TUIPEN_HALFSHINE]
    fgpen.l = *tuiEngine\pen[#TUIPEN_TEXT]
  End If

  If (*scroller\obj\flags&#TUIF_DISABLED)
    containerPen.l = #TUIPEN_BACKGROUND
    knobPen.l      = #TUIPEN_HALFHALFSHINE
  Else
    If *scroller\obj\flags&#TUIF_ACTIVE
      containerPen   = #TUIPEN_HALFSHADOW
      knobPen        = #TUIPEN_MARKER
    Else
      If *scroller\obj\flags&#TUIF_FOCUS
        containerPen   = #TUIPEN_HALFSHADOW
        knobPen        = #TUIPEN_HALFSHINE
      Else
        containerPen   = #TUIPEN_HALFSHADOW
        knobPen        = #TUIPEN_HALFSHINE
      End If
    End If
  End If
  If bgDone Then containerPen=-1

    CNIF #NTUI_DEBUG
      fgpen   =  RNDPen{}
      knobPen =  RNDPen{}
    CEND


  ;/* knob box */
  kbox.tuiRect\left = *tui\cbox\left,*tui\cbox\top,*tui\cbox\right,*tui\cbox\bottom
  total.l       = *scroller\total
  If total<*scroller\visible Then total = *scroller\visible
  If total<1 Then total=1

  Select *scroller\orient
    Case #TUIORIENT_HORIZONTAL
      totalPixel.l   = !tuiRectWidth{*scroller\obj\cbox}
      visiblePixel.l = *scroller\visible   * totalPixel / total
      If visiblePixel<*tuiEngine\defSize[#TUISIZE_MIN] Then visiblePixel=*tuiEngine\defSize[#TUISIZE_MIN]
      vtotal.l       = *scroller\total-*scroller\visible
      If vtotal<1 Then vtotal=1
      topPixel.l     = (*scroller\obj\value) * (totalPixel-visiblePixel) / (vtotal)
      kbox\left      = topPixel + *tui\cbox\left
      kbox\right     = kbox\left + visiblePixel-1

    Case #TUIORIENT_VERTICAL
      totalPixel.l   = !tuiRectHeight{*scroller\obj\cbox}
      visiblePixel.l = *scroller\visible   * totalPixel / total
      If visiblePixel<*tuiEngine\defSize[#TUISIZE_MIN] Then visiblePixel=*tuiEngine\defSize[#TUISIZE_MIN]
      vtotal.l       = *scroller\total-*scroller\visible
      If vtotal<1 Then vtotal=1
      topPixel.l     = (*scroller\obj\value) * (totalPixel-visiblePixel) / (vtotal)
      kbox\top       = topPixel + *tui\cbox\top
      kbox\bottom    = kbox\top + visiblePixel-1

  End Select

  If kbox\left  <*tui\cbox\left   Then kbox\left   = *tui\cbox\left
  If kbox\top   <*tui\cbox\top    Then kbox\top    = *tui\cbox\top
  If kbox\right >*tui\cbox\right  Then kbox\right  = *tui\cbox\right
  If kbox\bottom>*tui\cbox\bottom Then kbox\bottom = *tui\cbox\bottom

  ;/* draw the container */
  If containerPen><#TUIPEN_TRANSPARENT
  cbox.tuiRect\left = *tui\cbox\left,*tui\cbox\top,*tui\cbox\right,*tui\cbox\bottom
  SetAPen_ *rp,*tuiEngine\pen[containerPen]
  If kbox\left  >cbox\left   Then RectFill_ *rp,cbox\left   ,cbox\top     ,kbox\left-1 ,cbox\bottom
  If kbox\top   >cbox\top    Then RectFill_ *rp,cbox\left   ,cbox\top     ,cbox\right  ,kbox\top-1
  If kbox\right <cbox\right  Then RectFill_ *rp,kbox\right+1,cbox\top     ,cbox\right  ,cbox\bottom
  If kbox\bottom<cbox\bottom Then RectFill_ *rp,cbox\left   ,kbox\bottom+1,cbox\right  ,cbox\bottom
  EndIf
  borderType.l = #TUIBORDER_BUTTON;RAISED
  _ntui_GetBorderSize{*tuiEngine,borderType,0,bs.tuiRect}
  knobBgDone.l = ntui_DrawBorder{*tuiEngine,*rp,kbox,borderType,*scroller\obj\flags}
  !tuiRemBorder{kbox,kbox,bs}

  If knobBgDone=False
  CNIF #TUI_DEBUG
  SetAPen_ *rp,bgpen + RRnd(1,20)
  CELSE
  SetAPen_ *rp,*tuiEngine\pen[knobPen]
  CEND
  RectFill_ *rp,kbox\left,kbox\top,kbox\right,kbox\bottom
  End If

  kx.l = (kbox\left + kbox\right )/2
  ky.l = (kbox\top  + kbox\bottom)/2


  Select *scroller\orient
    Case #TUIORIENT_HORIZONTAL
        kx.l = (kbox\left+kbox\right)/2
        ky1.l = kbox\top  + 4
        ky2.l = kbox\bottom - 4

      If (!tuiRectWidth{kbox}>8)
        SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_HALFSHADOW]
        Move_ *rp,kx -3 , ky1
        Draw_ *rp,kx -3 , ky2
        Move_ *rp,kx    , ky1
        Draw_ *rp,kx    , ky2
        Move_ *rp,kx +3 , ky1
        Draw_ *rp,kx +3 , ky2

        SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_WHITE]
        Move_ *rp,kx -2 , ky1
        Draw_ *rp,kx -2 , ky2
        Move_ *rp,kx +1 , ky1
        Draw_ *rp,kx +1 , ky2
        Move_ *rp,kx +4 , ky1
        Draw_ *rp,kx +4 , ky2
      End If

    Case #TUIORIENT_VERTICAL
        kx1.l = kbox\left  + 4
        kx2.l = kbox\right - 4
        ky.l = (kbox\top+kbox\bottom)/2

      If (!tuiRectHeight{kbox}>8)
        SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_HALFSHADOW]
        Move_ *rp,kx1 , ky -3
        Draw_ *rp,kx2 , ky -3
        Move_ *rp,kx1 , ky
        Draw_ *rp,kx2 , ky
        Move_ *rp,kx1 , ky +3
        Draw_ *rp,kx2 , ky +3

        SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_WHITE]
        Move_ *rp,kx1 , ky -2
        Draw_ *rp,kx2 , ky -2
        Move_ *rp,kx1 , ky +1
        Draw_ *rp,kx2 , ky +1
        Move_ *rp,kx1 , ky +4
        Draw_ *rp,kx2 , ky +4
      End If

  End Select
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_FreeScroller {*scroller.tuiScroller}                       /
;/                                                                             /
;/ Description:                                                                /
;/ * free everything special that we allocated for the Scroller */               /
;/ If *scroller\img Then ntui_FreeImage{*scroller\img}  : *scroller:: /
;/ \img = Null                                                               /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scroller.tuiScroller    : ???                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DeinitScroller:
Statement _ntui_DeinitScroller{*scroller.tuiScroller}
;If *scroller\img Then ntui_FreeImage{*scroller\img}  : *scroller\img = Null
End Statement



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetScrollerMinSize {*scroller.tuiScroller,*rp:: /
;/ .RastPort}                                                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * calculate the minimum size for the Scroller */                              /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scroller.tuiScroller    : ???                                         /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_CalculateScrollerMinSize:
Statement _ntui_CalculateScrollerMinSize{*scroller.tuiScroller,*rp.RastPort}
*tuiEngine.tuiEngine = *scroller\obj\engine : If *tuiEngine=Null OR *rp=Null Then Statement Return
*scroller\obj\minsize\x  = *tuiEngine\defSize[#TUISIZE_SCROLLER]
*scroller\obj\minsize\y  = *tuiEngine\defSize[#TUISIZE_SCROLLER]

;If ((*scroller\obj\minsize\x&1) = 0) Then *scroller\obj\minsize\x+1
;If ((*scroller\obj\minsize\y&1) = 0) Then *scroller\obj\minsize\y+1

_ntui_GetBorderSize{*tuiEngine,*scroller\obj\borderType,*scroller\obj\flags,*scroller\obj\border}
*scroller\obj\minsize\x + !tuiBorderWidth{*scroller\obj\border}
*scroller\obj\minsize\y + !tuiBorderHeight{*scroller\obj\border}
*scroller\obj\minsize\x + !tuiBorderWidth{*scroller\obj\padding}
*scroller\obj\minsize\y + !tuiBorderHeight{*scroller\obj\padding}

If *scroller\incArrow Then  _ntui_CalculateButtonMinSize{*scroller\incArrow,*rp}
If *scroller\decArrow Then  _ntui_CalculateButtonMinSize{*scroller\decArrow,*rp}
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_VScroller {top.l,total.l,visible.l,@notify.l,@hel:: /
;/ p.s,@flags.l,@userID.l}                                                     /
;/                                                                             /
;/ Description:                                                                /
;/ Create function for tui scroller.                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - top.l    : ???                                                            /
;/ - total.l    : ???                                                          /
;/ - visible.l    : ???                                                        /
;/ - notify.l    : ???                                                         /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - userID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.tuiScroller ntui_VScroller{top.l,total.l,visible.l,@onChange.s,@help.s,@flags.l,@nameID.s}
If (flags=#TUI_NOFLAGS) Then flags=0
flags | #TUIF_CENTER|#TUIF_MIDDLE |#TUIF_FIXWIDTH|#TUIF_WANTTAB;|#TUIF_WANTMOVER
*scroller.tuiScroller = (.tuiScroller)_ntui_CreateObject{#TUICLASS_SCROLLER,SizeOf.tuiScroller,help,flags,nameID}
If *scroller
  *scroller\incArrow        = Null
  *scroller\decArrow        = Null
  If top<0     Then top=0
  If visible<0 Then visible=0
  If total<0   Then total=0
  str_Write{&*scroller\onChange\notifyID,onChange}
  _ntui_UpdateScroller{*scroller,top,visible,total,1,False}
  *scroller\orient     = #TUIORIENT_VERTICAL
  *scroller\obj\borderType  = #TUIBORDER_VSCROLLERCONTAINER

  !_GetFuncPointer{*scroller\obj\Draw            ,_ntui_DrawScroller,{0,0,0}}
  !_GetFuncPointer{*scroller\obj\Layout          ,_ntui_LayoutScroller,{0,0,0}}
  !_GetFuncPointer{*scroller\obj\DispatchEvent   ,_ntui_DispatchScrollerEvent,{0,0}}
  !_GetFuncPointer{*scroller\obj\CalculateMinSize,_ntui_CalculateScrollerMinSize,{0,0}}
  !_GetFuncPointer{*scroller\obj\Deinit          ,_ntui_DeinitScroller,{0}}
  !_GetFuncPointer{*scroller\obj\SetAttr         ,_ntui_SetScrollerAttr,{0,0,0}}
  !_GetFuncPointer{*scroller\obj\GetAttr         ,_ntui_GetScrollerAttr,{0,0,0}}

  !_GetFuncPointer{*scroller\onChange\callback    ,_ntui_OnScrollerChange,{Null,Null}}

End If
Function Return *scroller
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_HScroller {top.l,total.l,visible.l,@notify.l,@hel:: /
;/ p.s,@flags.l,@userID.l}                                                     /
;/                                                                             /
;/ Description:                                                                /
;/ * create function for tui scroller */                                       /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - top.l    : ???                                                            /
;/ - total.l    : ???                                                          /
;/ - visible.l    : ???                                                        /
;/ - notify.l    : ???                                                         /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - userID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.tuiScroller ntui_HScroller{top.l,total.l,visible.l,@onChange.s,@help.s,@flags.l,@nameID.s}
*scroller.tuiScroller = ntui_VScroller{top,total,visible,onChange,help,flags,nameID}
If *scroller
  *scroller\orient = #TUIORIENT_HORIZONTAL
  *scroller\obj\flags   = (*scroller\obj\flags| #TUIF_FIXSIZE) - #TUIF_FIXWIDTH
  *scroller\obj\borderType  = #TUIBORDER_HSCROLLERCONTAINER
End If
Function Return *scroller
End Function







