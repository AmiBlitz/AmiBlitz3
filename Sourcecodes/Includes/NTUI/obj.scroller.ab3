; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 2
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 611
; CursorColumn    = 54
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: ntui_scroller.include                                                 /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 06/01/2009                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
#TUI_HAS_SCROLLER=1

CNIF #__include=0
optimize 7
Syntax 2
CEND

NEWTYPE.tuiScroller
obj.tuiObject            ; tui object header
visible.l                ; logic visible
total.l                  ; logic total
step_.l                  ; logic scroll step
orientation.l
grab.tuiPixel
grabValue.l
grabbed.l
*incArrow.tuiButton
*decArrow.tuiButton
End NEWTYPE

#TUISCA_BASE       = #TUIA_USER
#TUISCA_TOP        = #TUIA_VALUE      ; top value of scroller
#TUISCA_VISIBLE    = #TUISCA_BASE  +1 ; visible logic units
#TUISCA_TOTAL      = #TUISCA_BASE  +2 ; total logic units
#TUISCA_SCROLLSTEP = #TUISCA_BASE  +3 ; units to scroll

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_UpdateScroller {*tuiScroller.tuiScroller,@top.l,@visible.l,:: /
;/ @total.l}                                                                   /
;/                                                                             /
;/ Description:                                                                /
;/ * tui scroller newtype */                                                   /
;/ obj.tuiObject            ; tui object header                                /
;/ * update the scrollers values */                                            /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiScroller.tuiScroller    : ???                                         /
;/ - top.l    : ???                                                            /
;/ - visible.l    : ???                                                        /
;/ - total.l    : ???                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement _ntui_UpdateScroller{*tuiScroller.tuiScroller,top.l,visible.l,total.l}
!_ASSERT{*tuiScroller}
!_ASSERT{*tuiScroller\obj\typeID=#TUIOBJ_SCROLLER}

If visible<0 Then visible=0
If total  <0 Then total  =0
If top    <0 Then top    =0

If top+visible-1>total Then top=total-visible+1
If top<0 Then top=0
If top><*tuiScroller\obj\value OR visible><*tuiScroller\visible OR total><*tuiScroller\total
  If visible>total Then visible=total
  *tuiScroller\obj\value = top
  *tuiScroller\visible   = visible
  *tuiScroller\total     = total
  ntui_Refresh{*tuiScroller}
End If
End Statement


_ntui_SetScrollerAttr:
Function.w _ntui_SetScrollerAttr{*tuiScroller.tuiScroller,ti_Tag.l,ti_Data.l}
!_ASSERT{*tuiScroller}
!_ASSERT{*tuiScroller\obj\typeID=#TUIOBJ_SCROLLER}

done.w = True
Select ti_Tag
  Case #TUISCA_TOP        : _ntui_UpdateScroller{*tuiScroller,ti_Data,*tuiScroller\visible,*tuiScroller\total}
  Case #TUISCA_VISIBLE    : _ntui_UpdateScroller{*tuiScroller,*tuiScroller\obj\value,ti_Data,*tuiScroller\total}
  Case #TUISCA_TOTAL      : _ntui_UpdateScroller{*tuiScroller,*tuiScroller\obj\value,*tuiScroller\visible,ti_Data}
  Case #TUISCA_SCROLLSTEP : *tuiScroller\step_ = ti_Data
  Default
    done=False

End Select
Function Return done
End Function


_ntui_GetScrollerAttr:
Function.w _ntui_GetScrollerAttr{*tuiScroller.tuiScroller,ti_Tag.l,*ti_Data.longP}
!_ASSERT{*tuiScroller}
!_ASSERT{*tuiScroller\obj\typeID=#TUIOBJ_SCROLLER}

done.w = True
Select ti_Tag
  Case #TUISCA_TOP        : *ti_Data\l = *tuiScroller\obj\value
  Case #TUISCA_VISIBLE    : *ti_Data\l = *tuiScroller\visible
  Case #TUISCA_TOTAL      : *ti_Data\l = *tuiScroller\total
  Case #TUISCA_SCROLLSTEP : *ti_Data\l = *tuiScroller\step_
  Default
    done=False

End Select
Function Return done
End Function


_ntui_LayoutScroller:
Statement _ntui_LayoutScroller{*tuiScroller.tuiScroller,*rp.RastPort,*bbox.tuiRect}
  !_ASSERT{*tuiScroller}
  !_ASSERT{*tuiScroller\obj\typeID=#TUIOBJ_SCROLLER}

  *tui.tuiObject = *tuiScroller

  If *bbox
    !tuiCopyRect{*tui\bbox,*bbox}
  End If

  !tuiRemBorder{*tui\ibox,*tui\bbox,*tui\border}
  ;!tuiCopyRect{*tui\ibox,*tui\bbox}
  If *tuiScroller\incArrow
    *iabs.tuiRect = *tuiScroller\incArrow\obj\border
    *dabs.tuiRect = *tuiScroller\decArrow\obj\border

    If *tuiScroller\orientation=#TUIORIENT_HORIZONTAL
      fbb.l = !tuiRectHeight{*tui\ibox}
      abox.tuiRect\left = *tui\ibox\right-fbb+1,*tui\ibox\top,*tui\ibox\right,*tui\ibox\bottom
      _ntui_Layout{*tuiScroller\incArrow,*rp,abox}
      *tui\ibox\right = abox\left-1

      abox.tuiRect\left = *tui\ibox\left,*tui\ibox\top,*tui\ibox\left+fbb-1,*tui\ibox\bottom
      _ntui_Layout{*tuiScroller\decArrow,*rp,abox}
      *tui\ibox\left = abox\right+1
    Else
      fbb.l = !tuiRectWidth{*tui\ibox}
      abox.tuiRect\left = *tui\ibox\left,*tui\ibox\bottom-fbb+1,*tui\ibox\right,*tui\ibox\bottom
      _ntui_Layout{*tuiScroller\incArrow,*rp,abox}
      *tui\ibox\bottom = abox\top-1

      abox.tuiRect\left = *tui\ibox\left,*tui\ibox\top,*tui\ibox\right,*tui\ibox\top+fbb-1
      _ntui_Layout{*tuiScroller\decArrow,*rp,abox}
      *tui\ibox\top = abox\bottom+1
    End If
  End If
  ;!tuiRemBorder{*tui\cbox,*tui\ibox,*tui\padding}
  !tuiCopyRect{*tui\cbox,*tui\ibox}
End Statement



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.w = _ntui_DispatchScroller {*tuiScroller.tuiScroller,*tuiEve:: /
;/ nt.tuiEvent}                                                                /
;/                                                                             /
;/ Description:                                                                /
;/ * do what happens if the user operates the scroller */                      /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiScroller.tuiScroller    : ???                                         /
;/ - *tuiEvent.tuiEvent    : ???                                               /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DispatchScrollerEvent:
Function.w _ntui_DispatchScrollerEvent{*tuiScroller.tuiScroller,*tuiEvent.tuiEvent}
  !_ASSERT{*tuiScroller}
  !_ASSERT{*tuiScroller\obj\typeID=#TUIOBJ_SCROLLER}
  !_ASSERT{*tuiEvent}
  *tui.tuiObject = *tuiScroller\obj
  done.w = False

  Select *tuiEvent\evID
    Case #TUIEV_MOUSEDOWN:
      If *tuiEvent\value=0
        If !tuiRectHit{*tui\cbox,*tuiEvent\pos\x,*tuiEvent\pos\y}
;        If ntui_HitObject{*tuiScroller,*tuiEvent\pos\x,*tuiEvent\pos\y}
          done=True
          ntui_SetFocus{*tuiScroller\obj\tuiEngine,*tuiScroller}
          *tuiScroller\obj\flags | #TUIF_ACTIVE
          str_Dup{&*tuiEvent\notifyID,*tuiScroller\obj\onTouch}
          ntui_Refresh{*tuiScroller}

          *tuiScroller\grab\x    = *tuiEvent\pos\x - *tuiScroller\obj\cbox\left
          *tuiScroller\grab\y    = *tuiEvent\pos\y - *tuiScroller\obj\cbox\top
          *tuiScroller\grabValue = *tuiScroller\obj\value
          *tuiScroller\grabbed   = True

           ;/* check if not clicked in empty area */
          cbox.tuiRect\left   = *tuiScroller\obj\cbox\left
          cbox.tuiRect\top    = *tuiScroller\obj\cbox\top
          cbox.tuiRect\right  = *tuiScroller\obj\cbox\right
          cbox.tuiRect\bottom = *tuiScroller\obj\cbox\bottom

          Select *tuiScroller\orientation
            Case #TUIORIENT_HORIZONTAL
              totalPixel.l   = !tuiRectWidth{*tuiScroller\obj\cbox}
              topPixel.l     = *tuiScroller\obj\value * totalPixel / *tuiScroller\total
              visiblePixel.l = *tuiScroller\visible   * totalPixel / *tuiScroller\total
              If *tuiScroller\grab\x<topPixel
                _ntui_UpdateScroller{*tuiScroller,*tuiScroller\obj\value - *tuiScroller\visible,*tuiScroller\visible,*tuiScroller\total}

                ;If (*tuiScroller\obj\flags&#TUIF_IMMIDIATE) Then *tuiEvent\notify = *tuiScroller\obj\notify
                *tuiScroller\grabbed = False
              End If
              If *tuiScroller\grab\x>topPixel + visiblePixel
                _ntui_UpdateScroller{*tuiScroller,*tuiScroller\obj\value + *tuiScroller\visible,*tuiScroller\visible,*tuiScroller\total}
                ;If (*tuiScroller\obj\flags&#TUIF_IMMIDIATE) Then *tuiEvent\notify = *tuiScroller\obj\notify
                *tuiScroller\grabbed = False
              End If

            Case #TUIORIENT_VERTICAL
              totalPixel.l   = !tuiRectHeight{*tuiScroller\obj\cbox}
              topPixel.l     = *tuiScroller\obj\value * totalPixel / *tuiScroller\total
              visiblePixel.l = *tuiScroller\visible   * totalPixel / *tuiScroller\total
              If *tuiScroller\grab\y<topPixel
                _ntui_UpdateScroller{*tuiScroller,*tuiScroller\obj\value - *tuiScroller\visible,*tuiScroller\visible,*tuiScroller\total}
                *tuiScroller\grabbed = False
                ;If (*tuiScroller\obj\flags&#TUIF_IMMIDIATE) Then *tuiEvent\notify = *tuiScroller\obj\notify
              End If
              If *tuiScroller\grab\y>topPixel + visiblePixel
                _ntui_UpdateScroller{*tuiScroller,*tuiScroller\obj\value + *tuiScroller\visible,*tuiScroller\visible,*tuiScroller\total}
                ;If (*tuiScroller\obj\flags&#TUIF_IMMIDIATE) Then *tuiEvent\notify = *tuiScroller\obj\notify
                *tuiScroller\grabbed = False
              End If

          End Select
        End If
      End If

    Case #TUIEV_MOUSEUP
      If *tuiEvent\value=0
        str_Dup{&*tuiEvent\notifyID,*tuiScroller\obj\onRelease}
        *tuiScroller\obj\flags|#TUIF_ACTIVE - #TUIF_ACTIVE
        ntui_Refresh{*tuiScroller}
        *tuiScroller\grabbed=False
        done=True
      End If

    Case #TUIEV_VSCROLL
      If *tuiScroller\orientation=#TUIORIENT_VERTICAL
        _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiScroller\obj\value + *tuiScroller\step_* *tuiEvent\value} : done=True
      End If

    Case #TUIEV_HSCROLL
      If *tuiScroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiScroller\obj\value + *tuiScroller\step_* *tuiEvent\value} : done=True
      End If

    Case #TUIEV_BIND_VDELTA
      If *tuiScroller\orientation=#TUIORIENT_VERTICAL
        _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiScroller\obj\value + *tuiScroller\step_* *tuiEvent\value} : done=True
      End If

    Case #TUIEV_BIND_HDELTA
      _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiScroller\obj\value + *tuiScroller\step_* *tuiEvent\value} : done=True

    Case #TUIEV_BIND_VVALUE
      If *tuiScroller\orientation=#TUIORIENT_VERTICAL
        _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiEvent\value} : done=True
      End If

    Case #TUIEV_BIND_HVALUE
      If *tuiScroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiEvent\value} : done=True
      End If

    Case #TUIEV_BIND_VALUE
      _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiEvent\value} : done=True

    Case #TUIEV_BIND_HVISIBLE
      If *tuiScroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_VISIBLE,*tuiEvent\value} : done=True
      End If

    Case #TUIEV_BIND_VVISIBLE
      If *tuiScroller\orientation=#TUIORIENT_VERTICAL
        _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_VISIBLE,*tuiEvent\value} : done=True
      End If

    Case #TUIEV_BIND_HTOTAL
      If *tuiScroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_VISIBLE,*tuiEvent\value} : done=True
      End If

    Case #TUIEV_BIND_VTOTAL
      If *tuiScroller\orientation=#TUIORIENT_VERTICAL
        _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_VISIBLE,*tuiEvent\value} : done=True
      End If

    Case #TUIEV_PROPAGATE
      If *tuiScroller\orientation=#TUIORIENT_VERTICAL
        _ntui_PropagateBind{*tuiScroller,#TUIEV_BIND_VTOTAL  ,*tuiScroller\total    ,#NULL}
        _ntui_PropagateBind{*tuiScroller,#TUIEV_BIND_VVALUE  ,*tuiScroller\obj\value,#NULL}
        _ntui_PropagateBind{*tuiScroller,#TUIEV_BIND_VVISIBLE,*tuiScroller\visible  ,#NULL}
        done=True
      End If
      If *tuiScroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_PropagateBind{*tuiScroller,#TUIEV_BIND_HTOTAL  ,*tuiScroller\total    ,#NULL}
        _ntui_PropagateBind{*tuiScroller,#TUIEV_BIND_HVALUE  ,*tuiScroller\obj\value,#NULL}
        _ntui_PropagateBind{*tuiScroller,#TUIEV_BIND_HVISIBLE,*tuiScroller\visible  ,#NULL}
        done=True
      End If

    Case #TUIEV_KEYDOWN
      Select *tuiEvent\value
        Case #RAWKEY_LEFT      : _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiScroller\obj\value - *tuiScroller\step_} : done=True
        Case #RAWKEY_UP        : _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiScroller\obj\value - *tuiScroller\step_} : done=True
        Case #RAWKEY_RIGHT     : _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiScroller\obj\value + *tuiScroller\step_} : done=True
        Case #RAWKEY_DOWN      : _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiScroller\obj\value + *tuiScroller\step_} : done=True
        Case #RAWKEY_WHEELUP   : _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiScroller\obj\value + *tuiScroller\step_} : done=True
        Case #RAWKEY_WHEELDOWN : _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,*tuiScroller\obj\value - *tuiScroller\step_} : done=True
      End Select

    Case #TUIEV_MOUSEMOVE
      If *tuiScroller\obj\flags&#TUIF_ACTIVE
        If *tuiScroller\grabbed
          Select *tuiScroller\orientation
            Case #TUIORIENT_HORIZONTAL
              newPos.l   = *tuiEvent\pos\x - *tuiScroller\obj\cbox\left - *tuiScroller\grab\x
              newValue.l = newPos * *tuiScroller\total / !tuiRectWidth{*tuiScroller\obj\cbox} + *tuiScroller\grabValue
            Case #TUIORIENT_VERTICAL
              newPos.l   = *tuiEvent\pos\y - *tuiScroller\obj\cbox\top - *tuiScroller\grab\y
              newValue.l = newPos * *tuiScroller\total / !tuiRectHeight{*tuiScroller\obj\cbox} + *tuiScroller\grabValue
          End Select
          ;If newvalue>*tuiScroller\total-*tuiScroller\visible Then newvalue = *tuiScroller\total-*tuiScroller\visible
          ;If newvalue<0 Then newvalue=0
          ;If (*tuiScroller\obj\flags&#TUIF_IMMIDIATE) Then *tuiEvent\notify = *tuiScroller\obj\notify
          str_Dup{&*tuiEvent\notifyID,*tuiScroller\obj\onClick}
          _ntui_SetScrollerAttr{*tuiScroller,#TUISCA_TOP,newValue}
        End If
        done=True
      End If

    Default
      done = False

  End Select

  If done
    If (*tuiEvent\notifyID)
      *tuiEvent\tuiObject = *tuiScroller
      _ntui_QueueEvent{*tuiScroller\obj\tuiEngine\outQ,*tuiEvent}
    Else
      _ntui_DestroyEvent{*tuiEvent}
    End If
  End If


Function Return done
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawScroller {*tuiScroller.tuiScroller,*rp.RastPort}           /
;/                                                                             /
;/ Description:                                                                /
;/ * draw the Scroller in all its beauty */                                      /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiScroller.tuiScroller    : ???                                         /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DrawScroller:
Statement _ntui_DrawScroller{*tuiScroller.tuiScroller,*rp.RastPort}
  !_ASSERT{*tuiScroller}
  !_ASSERT{*tuiScroller\obj\typeID=#TUIOBJ_SCROLLER}
  *tuiEngine.tuiEngine = *tuiScroller\obj\tuiEngine
  !_ASSERT{*tuiEngine}
  *tui.tuiObject = *tuiScroller\obj

  If (*tui\borderType><#TUIBORDER_NONE)
    bgDone.l = ntui_DrawBorder{*tuiEngine,*rp,*tui\bbox,*tui\borderType,*tui\flags}
  End If

  ;/* get the colors */
  If *tuiScroller\obj\flags&#TUIF_ACTIVE
    bgpen.l = *tuiEngine\pen[#TUIPEN_MARKER]
    fgpen.l = *tuiEngine\pen[#TUIPEN_ACTIVETEXT]
  Else
    bgpen.l = *tuiEngine\pen[#TUIPEN_HALFSHINE]
    fgpen.l = *tuiEngine\pen[#TUIPEN_TEXT]
  End If

  If (*tuiScroller\obj\flags&#TUIF_DISABLED)
    containerPen.l = #TUIPEN_BACKGROUND
    knobPen.l      = #TUIPEN_HALFHALFSHINE
  Else
    If *tuiScroller\obj\flags&#TUIF_ACTIVE
      containerPen   = #TUIPEN_HALFSHADOW
      knobPen        = #TUIPEN_MARKER
    Else
      If *tuiScroller\obj\flags&#TUIF_FOCUS
        containerPen   = #TUIPEN_HALFSHADOW
        knobPen        = #TUIPEN_HALFSHINE
      Else
        containerPen   = #TUIPEN_HALFSHADOW
        knobPen        = #TUIPEN_HALFSHINE
      End If
    End If
  End If
  If bgDone Then containerPen=-1

  ;/* knob box */
  kbox.tuiRect\left = *tui\cbox\left,*tui\cbox\top,*tui\cbox\right,*tui\cbox\bottom
  total.l = *tuiScroller\total
  If total<*tuiScroller\visible Then total=*tuiScroller\visible
  If total<1 Then total=1

  Select *tuiScroller\orientation
    Case #TUIORIENT_HORIZONTAL
      totalPixel.l   = !tuiRectWidth{*tuiScroller\obj\cbox}
      topPixel.l     = *tuiScroller\obj\value * totalPixel / total
      visiblePixel.l = *tuiScroller\visible   * totalPixel / total
      kbox\left      = topPixel + *tui\cbox\left
      kbox\right     = kbox\left + visiblePixel-1

    Case #TUIORIENT_VERTICAL
      totalPixel.l   = !tuiRectHeight{*tuiScroller\obj\cbox}
      topPixel.l     = *tuiScroller\obj\value * totalPixel / total
      visiblePixel.l = *tuiScroller\visible   * totalPixel / total
      kbox\top       = topPixel + *tui\cbox\top
      kbox\bottom    = kbox\top + visiblePixel-1

  End Select

  If kbox\left  <*tui\cbox\left   Then kbox\left   = *tui\cbox\left
  If kbox\top   <*tui\cbox\top    Then kbox\top    = *tui\cbox\top
  If kbox\right >*tui\cbox\right  Then kbox\right  = *tui\cbox\right
  If kbox\bottom>*tui\cbox\bottom Then kbox\bottom = *tui\cbox\bottom

  ;/* draw the container */
  If containerPen><#TUIPEN_TRANSPARENT
  cbox.tuiRect\left = *tui\cbox\left,*tui\cbox\top,*tui\cbox\right,*tui\cbox\bottom
  SetAPen_ *rp,*tuiEngine\pen[containerPen]
  If kbox\left  >cbox\left   Then RectFill_ *rp,cbox\left   ,cbox\top     ,kbox\left-1 ,cbox\bottom
  If kbox\top   >cbox\top    Then RectFill_ *rp,cbox\left   ,cbox\top     ,cbox\right  ,kbox\top-1
  If kbox\right <cbox\right  Then RectFill_ *rp,kbox\right+1,cbox\top     ,cbox\right  ,cbox\bottom
  If kbox\bottom<cbox\bottom Then RectFill_ *rp,cbox\left   ,kbox\bottom+1,cbox\right  ,cbox\bottom
  EndIf
  borderType.l = #TUIBORDER_BUTTON;RAISED
  _ntui_GetBorderSize{*tuiEngine,borderType,0,bs.tuiRect}
  knobBgDone.l = ntui_DrawBorder{*tuiEngine,*rp,kbox,borderType,*tuiScroller\obj\flags}
  !tuiRemBorder{kbox,kbox,bs}

  If knobBgDone=False
  CNIF #TUI_DEBUG
  SetAPen_ *rp,bgpen + RRnd(1,20)
  CELSE
  SetAPen_ *rp,*tuiEngine\pen[knobPen]
  CEND
  RectFill_ *rp,kbox\left,kbox\top,kbox\right,kbox\bottom
  End If

  kx.l = (kbox\left + kbox\right )/2
  ky.l = (kbox\top  + kbox\bottom)/2
  ks.l = Min(!tuiRectWidth{kbox},!tuiRectHeight{kbox})/2 - 4

  Select *tuiScroller\orientation
    Case #TUIORIENT_HORIZONTAL

      SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_HALFSHADOW]
      Move_ *rp,kx -3 , ky+ks
      Draw_ *rp,kx -3 , ky-ks
      Move_ *rp,kx    , ky+ks
      Draw_ *rp,kx    , ky-ks
      Move_ *rp,kx +3 , ky+ks
      Draw_ *rp,kx +3 , ky-ks

      SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_WHITE]
      Move_ *rp,kx -2 , ky+ks
      Draw_ *rp,kx -2 , ky-ks
      Move_ *rp,kx +1 , ky+ks
      Draw_ *rp,kx +1 , ky-ks
      Move_ *rp,kx +4 , ky+ks
      Draw_ *rp,kx +4 , ky-ks

    Case #TUIORIENT_VERTICAL

      SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_HALFSHADOW]
      Move_ *rp,kx-ks , ky -3
      Draw_ *rp,kx+ks , ky -3
      Move_ *rp,kx-ks , ky
      Draw_ *rp,kx+ks , ky
      Move_ *rp,kx-ks , ky +3
      Draw_ *rp,kx+ks , ky +3

      SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_WHITE]
      Move_ *rp,kx-ks , ky -2
      Draw_ *rp,kx+ks , ky -2
      Move_ *rp,kx-ks , ky +1
      Draw_ *rp,kx+ks , ky +1
      Move_ *rp,kx-ks , ky +4
      Draw_ *rp,kx+ks , ky +4

  End Select
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_FreeScroller {*tuiScroller.tuiScroller}                       /
;/                                                                             /
;/ Description:                                                                /
;/ * free everything special that we allocated for the Scroller */               /
;/ If *tuiScroller\img Then ntui_FreeImage{*tuiScroller\img}  : *tuiScroller:: /
;/ \img = #NULL                                                               /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiScroller.tuiScroller    : ???                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DeinitScroller:
Statement _ntui_DeinitScroller{*tuiScroller.tuiScroller}
;If *tuiScroller\img Then ntui_FreeImage{*tuiScroller\img}  : *tuiScroller\img = #NULL
End Statement



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetScrollerMinSize {*tuiScroller.tuiScroller,*rp:: /
;/ .RastPort}                                                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * calculate the minimum size for the Scroller */                              /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiScroller.tuiScroller    : ???                                         /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_CalculateScrollerMinSize:
Function.l _ntui_CalculateScrollerMinSize{*tuiScroller.tuiScroller,*rp.RastPort}
*tuiEngine.tuiEngine = *tuiScroller\obj\tuiEngine : If *tuiEngine=#NULL OR *rp=#NULL Then Function Return *tuiScroller\obj\minsize
*tuiScroller\obj\minsize\x  = *tuiEngine\defSize[#TUISIZE_SCROLLER]
*tuiScroller\obj\minsize\y  = *tuiEngine\defSize[#TUISIZE_SCROLLER]
If ((*tuiScroller\obj\minsize\x&1) = 0) Then *tuiScroller\obj\minsize\x+1
If ((*tuiScroller\obj\minsize\y&1) = 0) Then *tuiScroller\obj\minsize\y+1

_ntui_GetBorderSize{*tuiEngine,*tuiScroller\obj\borderType,*tuiScroller\obj\flags,*tuiScroller\obj\border}
*tuiScroller\obj\minsize\x + !tuiBorderWidth{*tuiScroller\obj\border}
*tuiScroller\obj\minsize\y + !tuiBorderHeight{*tuiScroller\obj\border}
*tuiScroller\obj\minsize\x + !tuiBorderWidth{*tuiScroller\obj\padding}
*tuiScroller\obj\minsize\y + !tuiBorderHeight{*tuiScroller\obj\padding}

If *tuiScroller\incArrow Then  _ntui_CalculateButtonMinSize{*tuiScroller\incArrow,*rp}
If *tuiScroller\decArrow Then  _ntui_CalculateButtonMinSize{*tuiScroller\decArrow,*rp}
Function Return *tuiScroller\obj\minsize
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_VScroller {top.l,total.l,visible.l,@notify.l,@hel:: /
;/ p.s,@flags.l,@userID.l}                                                     /
;/                                                                             /
;/ Description:                                                                /
;/ Create function for tui scroller.                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - top.l    : ???                                                            /
;/ - total.l    : ???                                                          /
;/ - visible.l    : ???                                                        /
;/ - notify.l    : ???                                                         /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - userID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_VScroller{top.l,total.l,visible.l,@onClick.s,@help.s,@flags.l,@nameID.s}
If (flags=#TUI_NOFLAGS) Then flags=0
flags | #TUIF_CENTER|#TUIF_MIDDLE |#TUIF_FIXWIDTH|#TUIF_WANTTAB|#TUIF_WANTMOVER
*tuiScroller.tuiScroller = _ntui_CreateObject{#TUIOBJ_SCROLLER,SizeOf.tuiScroller,help,flags,nameID}
If *tuiScroller
  *tuiScroller\incArrow        = #NULL
  *tuiScroller\decArrow        = #NULL
  If top<0     Then top=0
  If visible<0 Then visible=0
  If total<0   Then total=0
  str_Write{&*tuiScroller\obj\onClick,onClick}
  _ntui_UpdateScroller{*tuiScroller,top,visible,total}
  *tuiScroller\step_           = 1
  *tuiScroller\orientation     = #TUIORIENT_VERTICAL
  *tuiScroller\obj\bindFlags   = #TUIBIND_VDELTA|#TUIBIND_VSCROLL|#TUIBIND_ABLE
  *tuiScroller\obj\borderType  = #TUIBORDER_VSCROLLERCONTAINER

  !_GetFuncPointer{*tuiScroller\obj\Draw            ,_ntui_DrawScroller,{0,0}}
  !_GetFuncPointer{*tuiScroller\obj\Layout          ,_ntui_LayoutScroller,{0,0,0}}
  !_GetFuncPointer{*tuiScroller\obj\DispatchEvent   ,_ntui_DispatchScrollerEvent,{0,0}}
  !_GetFuncPointer{*tuiScroller\obj\CalculateMinSize,_ntui_CalculateScrollerMinSize,{0,0}}
  !_GetFuncPointer{*tuiScroller\obj\Deinit          ,_ntui_DeinitScroller,{0}}
  !_GetFuncPointer{*tuiScroller\obj\SetAttr         ,_ntui_SetScrollerAttr,{0,0,0}}
  !_GetFuncPointer{*tuiScroller\obj\GetAttr         ,_ntui_GetScrollerAttr,{0,0,0}}

End If
Function Return *tuiScroller
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_HScroller {top.l,total.l,visible.l,@notify.l,@hel:: /
;/ p.s,@flags.l,@userID.l}                                                     /
;/                                                                             /
;/ Description:                                                                /
;/ * create function for tui scroller */                                       /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - top.l    : ???                                                            /
;/ - total.l    : ???                                                          /
;/ - visible.l    : ???                                                        /
;/ - notify.l    : ???                                                         /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - userID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_HScroller{top.l,total.l,visible.l,@onClick.s,@help.s,@flags.l,@nameID.s}
*tuiScroller.tuiScroller = ntui_VScroller{top,total,visible,onClick,help,flags,nameID}
If *tuiScroller
  *tuiScroller\orientation = #TUIORIENT_HORIZONTAL
  *tuiScroller\obj\flags   = (*tuiScroller\obj\flags| #TUIF_FIXSIZE) - #TUIF_FIXWIDTH
  *tuiScroller\obj\bindFlags   = #TUIBIND_HDELTA|#TUIBIND_HSCROLL|#TUIBIND_ABLE
  *tuiScroller\obj\borderType  = #TUIBORDER_HSCROLLERCONTAINER
End If
Function Return *tuiScroller
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_AddArrows {}                                                   /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement ntui_AddArrows{}
If tuiGlobal\buildHelper\tuiCurrent\typeID=#TUIOBJ_SCROLLER
  *tuiScroller.tuiScroller = tuiGlobal\buildHelper\tuiCurrent

  tuiGlobal\buildHelper\tuiParent              = *tuiScroller
  tuiGlobal\buildHelper\tuiPrev                = #NULL
  If *tuiScroller\orientation = #TUIORIENT_HORIZONTAL
    *tuiScroller\decArrow    = ntui_FunctionButton{#TUIBUTTON_ARROWLEFT ,"",*tuiScroller\obj\flags}
    *tuiScroller\incArrow    = ntui_FunctionButton{#TUIBUTTON_ARROWRIGHT,"",*tuiScroller\obj\flags}
    *tuiScroller\obj\flags |#TUIF_FIXHEIGHT
  Else
    *tuiScroller\incArrow    = ntui_FunctionButton{#TUIBUTTON_ARROWDOWN ,"",*tuiScroller\obj\flags}
    *tuiScroller\decArrow    = ntui_FunctionButton{#TUIBUTTON_ARROWUP   ,"",*tuiScroller\obj\flags}
    *tuiScroller\obj\flags |#TUIF_FIXWIDTH
  End If

  tuiGlobal\buildHelper\tuiPrev    = tuiGlobal\buildHelper\tuiParent
  tuiGlobal\buildHelper\tuiCurrent = tuiGlobal\buildHelper\tuiParent
  If tuiGlobal\buildHelper\tuiParent Then tuiGlobal\buildHelper\tuiParent = tuiGlobal\buildHelper\tuiParent\parent

  If (*tuiScroller\decArrow) Then ntui_Bind{*tuiScroller,*tuiScroller\decArrow}
  If (*tuiScroller\incArrow) Then ntui_Bind{*tuiScroller,*tuiScroller\incArrow}


End If
End Statement






