; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 5
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 627
; CursorColumn    = 8
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
#TUI_HAS_SCROLLER=1

;XINCLUDE "longlong.include.ab3"

Function.l _ntui_MulDiv32{a.l,b.l,c.l}

  ad.d = a
  bd.d = b
  cd.d = c
  rd.d = a * b / c
  r.l = Int(rd)
  Function Return r
  
  ;!ll_Mulu3232{ll.ll,a,b}
  ;!ll_Divu6432{rl.ll,ll,c}
  ;!ll_ToLong{r.l,rl}
  ;Function Return r
  
End Function


NEWTYPE.tuiScroller

  obj.tuiObject            ; tui object header
  visible.l                ; logic visible
  total.l                  ; logic total
  step_.l                  ; logic scroll step
  orientation.l
  grab.tuiPixel
  grabValue.l
  grabbed.l
  *incArrow.tuiButton
  *decArrow.tuiButton
  onChange.tuiNotifyHandler

End NEWTYPE

#TUISCA_BASE        = #TUIA_USER
#TUISCA_TOP         = #TUIA_VALUE      ; top value of scroller
#TUISCA_VISIBLE     = #TUISCA_BASE  +1 ; visible logic units
#TUISCA_TOTAL       = #TUISCA_BASE  +2 ; total logic units
#TUISCA_STEP        = #TUISCA_BASE  +3 ; units to scroll
#TUISCA_ONCHANGE    = #TUISCA_BASE  +4 ; when the value of the scroller changes
#TUISCA_ONCHANGECB  = #TUISCA_BASE  +5
#TUISCA_ORIENTATION = #TUISCA_BASE  +6
#TUISCA_HASARROWS   = #TUISCA_BASE  +7


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_UpdateScroller {*scroller.tuiScroller,@top.l,@visible.l,:: /
;/ @total.l}                                                                   /
;/                                                                             /
;/ Description:                                                                /
;/ * tui scroller newtype */                                                   /
;/ obj.tuiObject            ; tui object header                                /
;/ * update the scrollers values */                                            /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scroller.tuiScroller    : ???                                         /
;/ - top.l    : ???                                                            /
;/ - visible.l    : ???                                                        /
;/ - total.l    : ???                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement _ntui_UpdateScroller{*scroller.tuiScroller,top.l,visible.l,total.l,step_.l,bind.l}
!_ASSERT{*scroller}
!_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}

If visible<0 Then visible=0
If total  <0 Then total  =0
If top    <0 Then top    =0
If step_  <1 Then step_  =1

If top+visible>total Then top=total-visible
If top<0 Then top=0
If top><*scroller\obj\value OR visible><*scroller\visible OR total><*scroller\total OR step_><*scroller\step_
 ; If visible>total Then visible=total

  If *scroller\orientation=#TUIORIENT_HORIZONTAL
    If top    ><*scroller\obj\value Then *scroller\obj\value = top     : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_HVALUE  ,top    ,Null}
    If visible><*scroller\visible   Then *scroller\visible   = visible : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_HVISIBLE,visible,Null}
    If total  ><*scroller\total     Then *scroller\total     = total   : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_HTOTAL  ,total  ,Null}
    If step_  ><*scroller\step_     Then *scroller\step_     = step_   : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_HSTEP   ,step_  ,Null}
  Else
    If top    ><*scroller\obj\value Then *scroller\obj\value = top     : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_VVALUE  ,top    ,Null}
    If visible><*scroller\visible   Then *scroller\visible   = visible : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_VVISIBLE,visible,Null}
    If total  ><*scroller\total     Then *scroller\total     = total   : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_VTOTAL  ,total  ,Null}
    If step_  ><*scroller\step_     Then *scroller\step_     = step_   : If bind Then _ntui_PropagateBind{*scroller,#TUIEV_BIND_VSTEP   ,step_  ,Null}
  End If

  ntui_Refresh{*scroller,*scroller\obj\cbox}
End If
End Statement


_ntui_SetScrollerAttr:
Function.l _ntui_SetScrollerAttr{*scroller.tuiScroller,ti_Tag.l,ti_Data.l}
  !_ASSERT{*scroller}
  !_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}

  done.l = True
  Select ti_Tag
    Case #TUISCA_TOP         : _ntui_UpdateScroller{*scroller,ti_Data,*scroller\visible,*scroller\total,*scroller\step_,True}
    Case #TUISCA_VISIBLE     : _ntui_UpdateScroller{*scroller,*scroller\obj\value,ti_Data,*scroller\total,*scroller\step_,True}
    Case #TUISCA_TOTAL       : _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,ti_Data,*scroller\step_,True}
    Case #TUISCA_STEP        : _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,*scroller\total,ti_Data,True}
    Case #TUISCA_ONCHANGE    : str_WritePtr{&*scroller\onChange\notifyID ,ti_Data}
    Case #TUISCA_ONCHANGECB  : *scroller\onChange\callback = ti_Data
    Case #TUISCA_HASARROWS   :
      If ti_Data
        If *scroller\decArrow=Null
          _ntui_BeginChildren{*scroller}
          If *scroller\orientation = #TUIORIENT_HORIZONTAL
            tagList.tag5\ti_Tag = #TUIBA_IMAGESIZE,#TUISIZE_KNOB,#TUIBA_FUNCTION,#TUIFUNC_LEFT,#TUIA_GRADIENT,*scroller\obj\gradient,#TAG_DONE,0
            *scroller\decArrow = ntui_FunctionButton{(.TagItem)tagList}
            tagList.tag5\ti_Tag = #TUIBA_IMAGESIZE,#TUISIZE_KNOB,#TUIBA_FUNCTION,#TUIFUNC_RIGHT,#TUIA_GRADIENT,*scroller\obj\gradient,#TAG_DONE,0
            *scroller\incArrow = ntui_FunctionButton{(.TagItem)tagList}
          Else
            tagList.tag5\ti_Tag = #TUIBA_IMAGESIZE,#TUISIZE_KNOB,#TUIBA_FUNCTION,#TUIFUNC_DOWN,#TUIA_GRADIENT,*scroller\obj\gradient,#TAG_DONE,0
            *scroller\incArrow = ntui_FunctionButton{(.TagItem)tagList}
            tagList.tag5\ti_Tag = #TUIBA_IMAGESIZE,#TUISIZE_KNOB,#TUIBA_FUNCTION,#TUIFUNC_UP,#TUIA_GRADIENT,*scroller\obj\gradient,#TAG_DONE,0
            *scroller\decArrow = ntui_FunctionButton{(.TagItem)tagList}
          End If
          _ntui_EndChildren{#TUICLASS_SCROLLER}
          If (*scroller\decArrow) Then ntui_Bind{*scroller,*scroller\decArrow}
          If (*scroller\incArrow) Then ntui_Bind{*scroller,*scroller\incArrow}
        End If
      Else
        If (*scroller\decArrow) Then ntui_FreeObject{*scroller\decArrow} : *scroller\decArrow = Null
        If (*scroller\incArrow) Then ntui_FreeObject{*scroller\incArrow} : *scroller\incArrow = Null
      End If

    Case #TUISCA_ORIENTATION :
      Select ti_Data
        Case #TUIORIENT_HORIZONTAL
          *scroller\orientation         = #TUIORIENT_HORIZONTAL
          *scroller\obj\borderType = #TUIBORDER_HSCROLLERCONTAINER
          *scroller\obj\flags      = (*scroller\obj\flags | #TUIF_FIXSIZE) - #TUIF_FIXWIDTH

        Default
          *scroller\orientation         = #TUIORIENT_VERTICAL
          *scroller\obj\borderType = #TUIBORDER_VSCROLLERCONTAINER
          *scroller\obj\flags      = (*scroller\obj\flags | #TUIF_FIXSIZE) - #TUIF_FIXHEIGHT

      End Select

    Default
      done=False

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_SetScrollerAttr,{Null,0,0}}


_ntui_GetScrollerAttr:
Function.l _ntui_GetScrollerAttr{*scroller.tuiScroller,ti_Tag.l,*ti_Data.longP}
  !_ASSERT{*scroller}
  !_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}

  done.l = True
  Select ti_Tag
    Case #TUISCA_TOP         : *ti_Data\l = *scroller\obj\value
    Case #TUISCA_VISIBLE     : *ti_Data\l = *scroller\visible
    Case #TUISCA_TOTAL       : *ti_Data\l = *scroller\total
    Case #TUISCA_STEP        : *ti_Data\l = *scroller\step_
    Case #TUISCA_ONCHANGE    : *ti_Data\l = str_GetPtr{*scroller\onChange\notifyID}
    Case #TUISCA_ONCHANGECB  : *ti_Data\l = *scroller\onChange\callback
    Case #TUISCA_ORIENTATION : *ti_Data\l = *scroller\orientation
    Case #TUISCA_HASARROWS   : If *scroller\incArrow Then *ti_Data\l = True: Else *ti_Data\l = False
    Default
      done=False

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_GetScrollerAttr,{Null,0,Null}}


_ntui_LayoutScroller:
Statement _ntui_LayoutScroller{*scroller.tuiScroller,*rp.RastPort,*bbox.tuiRect}
  !_ASSERT{*scroller}
  !_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}

  *obj.tuiObject = *scroller

  If *bbox
    !tuiCopyRect{*obj\bbox,*bbox}
  End If

  !tuiRemBorder{*obj\ibox,*obj\bbox,*obj\border}
  ;!tuiCopyRect{*obj\ibox,*obj\bbox}
  If *scroller\incArrow
    *iabs.tuiRect = *scroller\incArrow\obj\border
    *dabs.tuiRect = *scroller\decArrow\obj\border

    If *scroller\orientation=#TUIORIENT_HORIZONTAL
      fbb.l = !tuiRectHeight{*obj\ibox}
      fba.l = *scroller\obj\minsize\x ; !tuiRectWidth{*obj\ibox}
      If fbb>fba Then fbb=fba
      abox.tuiRect\left = *obj\ibox\right-fbb+1,*obj\ibox\top,*obj\ibox\right,*obj\ibox\bottom
      _ntui_Layout{*scroller\incArrow,*rp,abox}
      *obj\ibox\right = abox\left-1

      abox.tuiRect\left = *obj\ibox\left,*obj\ibox\top,*obj\ibox\left+fbb-1,*obj\ibox\bottom
      _ntui_Layout{*scroller\decArrow,*rp,abox}
      *obj\ibox\left = abox\right+1
    Else
      fbb.l = !tuiRectWidth{*obj\ibox}
      ;fba.l = !tuiRectHeight{*obj\ibox}
      fba.l = *scroller\obj\minsize\y
      If fbb>fba Then fbb=fba

      abox.tuiRect\left = *obj\ibox\left,*obj\ibox\bottom-fbb+1,*obj\ibox\right,*obj\ibox\bottom
      _ntui_Layout{*scroller\incArrow,*rp,abox}
      *obj\ibox\bottom = abox\top-1

      abox.tuiRect\left = *obj\ibox\left,*obj\ibox\top,*obj\ibox\right,*obj\ibox\top+fbb-1
      _ntui_Layout{*scroller\decArrow,*rp,abox}
      *obj\ibox\top = abox\bottom+1
    End If
  End If
  ;!tuiRemBorder{*obj\cbox,*obj\ibox,*obj\padding}
  !tuiCopyRect{*obj\cbox,*obj\ibox}

End Statement
!_MakeGlobalFuncPointer{_ntui_LayoutScroller,{Null,Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_DispatchScroller {*scroller.tuiScroller,*tuiEve:: /
;/ nt.tuiEvent}                                                                /
;/                                                                             /
;/ Description:                                                                /
;/ * do what happens if the user operates the scroller */                      /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scroller.tuiScroller    : ???                                         /
;/ - *ev.tuiEvent    : ???                                               /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DispatchScrollerEvent:
Function.l _ntui_DispatchScrollerEvent{*scroller.tuiScroller,*ev.tuiEvent}
  !_ASSERT{*scroller}
  !_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}
  !_ASSERT{*ev}

  *engine.tuiEngine = *scroller\obj\engine
  *obj.tuiObject = *scroller\obj
  done.l = False

  Select *ev\id
    Case #TUIEV_MOUSEDOWN:
      If *ev\value=0
        If !tuiRectHit{*obj\cbox,*ev\pos\x,*ev\pos\y}
          done=True
          ntui_SetFocus{*scroller}
          *scroller\obj\flags | #TUIF_ACTIVE
          ;str_Dup{&*ev\notifyID,*scroller\obj\onTouch}
          ntui_Refresh{*scroller,Null}

          *scroller\grab\x    = *ev\pos\x - *scroller\obj\cbox\left
          *scroller\grab\y    = *ev\pos\y - *scroller\obj\cbox\top
          *scroller\grabValue = *scroller\obj\value
          *scroller\grabbed   = True

           ;/* check if not clicked in empty area */
          cbox.tuiRect\left   = *scroller\obj\cbox\left
          cbox.tuiRect\top    = *scroller\obj\cbox\top
          cbox.tuiRect\right  = *scroller\obj\cbox\right
          cbox.tuiRect\bottom = *scroller\obj\cbox\bottom
          total.l = *scroller\total
          If total<=0 Then total=1

          Select *scroller\orientation
            Case #TUIORIENT_HORIZONTAL
              totalPixel.l   = !tuiRectWidth{*scroller\obj\cbox}
              visiblePixel.l = _ntui_MulDiv32{*scroller\visible, totalPixel, total }
              If visiblePixel<*engine\defSize[#TUISIZE_MIN] Then visiblePixel=*engine\defSize[#TUISIZE_MIN]
              vtotal.l       = *scroller\total-*scroller\visible
              If vtotal<1 Then vtotal=1
              topPixel.l     = _ntui_MulDiv32{(*scroller\obj\value), (totalPixel-visiblePixel), (vtotal)}

              If *scroller\grab\x<topPixel
                _ntui_UpdateScroller{*scroller,*scroller\obj\value - *scroller\visible+1,*scroller\visible,*scroller\total,*scroller\step_,True}
                *scroller\grabbed = False
              End If
              If *scroller\grab\x>topPixel + visiblePixel
                _ntui_UpdateScroller{*scroller,*scroller\obj\value + *scroller\visible-1,*scroller\visible,*scroller\total,*scroller\step_,True}
                *scroller\grabbed = False
              End If

            Case #TUIORIENT_VERTICAL
              totalPixel.l   = !tuiRectHeight{*scroller\obj\cbox}
              visiblePixel.l = _ntui_MulDiv32{*scroller\visible, totalPixel, total}
              If visiblePixel<*engine\defSize[#TUISIZE_MIN] Then visiblePixel=*engine\defSize[#TUISIZE_MIN]
              vtotal.l       = *scroller\total-*scroller\visible
              If vtotal<1 Then vtotal=1
              topPixel.l     = _ntui_MulDiv32{(*scroller\obj\value), (totalPixel-visiblePixel), (vtotal)}

              If *scroller\grab\y<topPixel
                _ntui_UpdateScroller{*scroller,*scroller\obj\value - *scroller\visible+1,*scroller\visible,*scroller\total,*scroller\step_,True}
                *scroller\grabbed = False
              End If
              If *scroller\grab\y>topPixel + visiblePixel
                _ntui_UpdateScroller{*scroller,*scroller\obj\value + *scroller\visible-1,*scroller\visible,*scroller\total,*scroller\step_,True}
                *scroller\grabbed = False
              End If

          End Select
        End If
      End If

    Case #TUIEV_MOUSEUP
      If *ev\value=0
        ;str_Dup{&*ev\notifyID,*scroller\obj\onRelease}
        *scroller\obj\flags|#TUIF_ACTIVE - #TUIF_ACTIVE
        ntui_Refresh{*scroller,Null}
        *scroller\grabbed=False
        done=True
      End If

    Case #TUIEV_VSCROLL
      If *scroller\orientation=#TUIORIENT_VERTICAL
        _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value + *scroller\step_ * *ev\value} : done=True
      End If

    Case #TUIEV_HSCROLL
      If *scroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value + *scroller\step_ * *ev\value} : done=True
      End If

    Case #TUIEV_BIND_VDELTA
      If *scroller\orientation=#TUIORIENT_VERTICAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value+*scroller\step_ * *ev\value,*scroller\visible,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_HDELTA
       If *scroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value+*scroller\step_ * *ev\value,*scroller\visible,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_VVALUE
      If *scroller\orientation=#TUIORIENT_VERTICAL
        _ntui_UpdateScroller{*scroller,*ev\value,*scroller\visible,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_HVALUE
      If *scroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_UpdateScroller{*scroller,*ev\value,*scroller\visible,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_HVISIBLE
      If *scroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*ev\value,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_VVISIBLE
      If *scroller\orientation=#TUIORIENT_VERTICAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*ev\value,*scroller\total,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_HTOTAL
      If *scroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,*ev\value,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_VTOTAL
      If *scroller\orientation=#TUIORIENT_VERTICAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,*ev\value,*scroller\step_,False} : done=True
      End If

    Case #TUIEV_BIND_HSTEP
      If *scroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,*scroller\total,*ev\value,False} : done=True
      End If

    Case #TUIEV_BIND_VSTEP
      If *scroller\orientation=#TUIORIENT_VERTICAL
        _ntui_UpdateScroller{*scroller,*scroller\obj\value,*scroller\visible,*scroller\total,*ev\value,False} : done=True
      End If

    Case #TUIEV_PROPAGATE
      If *scroller\orientation=#TUIORIENT_VERTICAL
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_VTOTAL  ,*scroller\total    ,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_VVALUE  ,*scroller\obj\value,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_VVISIBLE,*scroller\visible  ,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_VSTEP   ,*scroller\step_    ,Null}
        done=True
      End If
      If *scroller\orientation=#TUIORIENT_HORIZONTAL
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_HTOTAL  ,*scroller\total    ,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_HVALUE  ,*scroller\obj\value,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_HVISIBLE,*scroller\visible  ,Null}
        _ntui_PropagateBind{*scroller,#TUIEV_BIND_HSTEP   ,*scroller\step_    ,Null}
        done=True
      End If

    Case #TUIEV_KEYDOWN
      Select *ev\value
        Case #RAWKEY_LEFT
          If *scroller\orientation=#TUIORIENT_HORIZONTAL
            _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value - *scroller\step_}
          Else
            _ntui_PropagateBind{*scroller,#TUIEV_BIND_HDELTA  ,-1    ,Null}
          End If
          done=True
        Case #RAWKEY_RIGHT
          If *scroller\orientation=#TUIORIENT_HORIZONTAL
            _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value + *scroller\step_}
          Else
            _ntui_PropagateBind{*scroller,#TUIEV_BIND_HDELTA  ,1    ,Null}
          End If
          done=True
        Case #RAWKEY_UP
          If *scroller\orientation=#TUIORIENT_VERTICAL
            _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value - *scroller\step_}
          Else
            _ntui_PropagateBind{*scroller,#TUIEV_BIND_VDELTA  ,-1    ,Null}
          End If
          done=True
        Case #RAWKEY_DOWN
          If *scroller\orientation=#TUIORIENT_VERTICAL
            _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value + *scroller\step_}
          Else
            _ntui_PropagateBind{*scroller,#TUIEV_BIND_VDELTA  ,1    ,Null}
          End If
          done=True
        ;Case #RAWKEY_WHEELUP   : _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value + *scroller\step_} : done=True
        ;Case #RAWKEY_WHEELDOWN : _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,*scroller\obj\value - *scroller\step_} : done=True
      End Select

    Case #TUIEV_MOUSEMOVE
      If *scroller\obj\flags&#TUIF_ACTIVE
        If *scroller\grabbed

          Select *scroller\orientation
            Case #TUIORIENT_HORIZONTAL
              totalpixel.l = !tuiRectWidth{*scroller\obj\cbox} : If totalpixel<=0 Then totalpixel=1
              newPos.l   = *ev\pos\x - *scroller\obj\cbox\left - *scroller\grab\x
              newValue.l = _ntui_MulDiv32{newPos, *scroller\total, totalpixel} + *scroller\grabValue
            Case #TUIORIENT_VERTICAL
              totalpixel.l = !tuiRectHeight{*scroller\obj\cbox} : If totalpixel<=0 Then totalpixel=1
              newPos.l   = *ev\pos\y - *scroller\obj\cbox\top - *scroller\grab\y
              newValue.l = _ntui_MulDiv32{newPos, *scroller\total, totalpixel} + *scroller\grabValue
          End Select
          ;If newvalue>*scroller\total-*scroller\visible Then newvalue = *scroller\total-*scroller\visible
          ;If newvalue<0 Then newvalue=0
          ;If (*scroller\obj\flags&#TUIF_IMMIDIATE) Then *ev\notify = *scroller\obj\notify
          ;str_Dup{&*ev\notifyID,*scroller\obj\onClick}
          !tuiHandleNotify{done,*scroller,onChange,*ev}
          If done=False
            _ntui_SetScrollerAttr{*scroller,#TUISCA_TOP,newValue}
            If *scroller\obj\flags&#TUIF_DIRTY
              _ntui_Redraw{*scroller,Null}
              ;*scroller\obj\flags|#TUIF_DIRTY-#TUIF_DIRTY
            End If
          End If
        End If
        done=True
      End If

    Default
      done = False

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_DispatchScrollerEvent,{Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawScroller {*scroller.tuiScroller,*rp.RastPort}           /
;/                                                                             /
;/ Description:                                                                /
;/ * draw the Scroller in all its beauty */                                      /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scroller.tuiScroller    : ???                                         /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DrawScroller:
Statement _ntui_DrawScroller{*scroller.tuiScroller,*rp.RastPort,*rpclip.tuiRect}
  !_ASSERT{*scroller}
  !_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}
  *engine.tuiEngine = *scroller\obj\engine
  !_ASSERT{*engine}
  *obj.tuiObject = *scroller\obj

  If ((*obj\flags&#TUIF_ONSCREEN)=0) Then Statement Return

  !tuiAndRect{bclip.tuiRect,*obj\bbox,*rpclip}
  If !tuiValidRect{bclip}=False Then Statement Return

    If *scroller\incArrow
      If (*scroller\incArrow\obj\flags&#TUIF_ONSCREEN) Then _ntui_Draw{*scroller\incArrow,*rp,*rpclip}
    End If
    If *scroller\decArrow
      If (*scroller\decArrow\obj\flags&#TUIF_ONSCREEN) Then _ntui_Draw{*scroller\decArrow,*rp,*rpclip}
    End If


  If (*obj\borderType><#TUIBORDER_NONE)
    bgDone.l = ntui_DrawBorder{*engine,*rp,*obj\bbox,*obj\borderType,*obj\flags}
  End If

  ;/* get the colors */
  If *scroller\obj\flags&#TUIF_ACTIVE
    bgpen.l = *engine\pen[#TUIPEN_MARKER]
    fgpen.l = *engine\pen[#TUIPEN_ACTIVETEXT]
  Else
    bgpen.l = *engine\pen[#TUIPEN_HALFSHINE]
    fgpen.l = *engine\pen[#TUIPEN_TEXT]
  End If

  If (*scroller\obj\flags&#TUIF_DISABLED)
    containerPen.l = #TUIPEN_BACKGROUND
    knobPen.l      = #TUIPEN_HALFHALFSHINE
  Else
    If *scroller\obj\flags&#TUIF_ACTIVE
      containerPen   = #TUIPEN_HALFSHADOW
      knobPen        = #TUIPEN_MARKER
    Else
      If *scroller\obj\flags&#TUIF_FOCUS
        containerPen   = #TUIPEN_HALFSHADOW
        knobPen        = #TUIPEN_HALFSHINE
      Else
        containerPen   = #TUIPEN_HALFSHADOW
        knobPen        = #TUIPEN_HALFSHINE
      End If
    End If
  End If
  If bgDone Then containerPen=-1

    CNIF #NTUI_DEBUG
      fgpen   =  RNDPen{}
      knobPen =  RNDPen{}
    CEND


  ;/* knob box */
  kbox.tuiRect\left = *obj\cbox\left,*obj\cbox\top,*obj\cbox\right,*obj\cbox\bottom
  total.l       = *scroller\total
  If total<*scroller\visible Then total = *scroller\visible
  If total<1 Then total=1

  Select *scroller\orientation
    Case #TUIORIENT_HORIZONTAL
      totalPixel.l   = !tuiRectWidth{*scroller\obj\cbox}
      visiblePixel.l = _ntui_MulDiv32{*scroller\visible, totalPixel, total}
      If visiblePixel<*engine\defSize[#TUISIZE_MIN] Then visiblePixel=*engine\defSize[#TUISIZE_MIN]
      vtotal.l       = *scroller\total-*scroller\visible
      If vtotal<1 Then vtotal=1
      topPixel.l     = _ntui_MulDiv32{(*scroller\obj\value), (totalPixel-visiblePixel), (vtotal)}
      kbox\left      = topPixel + *obj\cbox\left
      kbox\right     = kbox\left + visiblePixel-1

    Case #TUIORIENT_VERTICAL
      totalPixel.l   = !tuiRectHeight{*scroller\obj\cbox}
      visiblePixel.l = _ntui_MulDiv32{*scroller\visible, totalPixel, total}
      If visiblePixel<*engine\defSize[#TUISIZE_MIN] Then visiblePixel=*engine\defSize[#TUISIZE_MIN]
      vtotal.l       = *scroller\total-*scroller\visible
      If vtotal<1 Then vtotal=1
      topPixel.l     = _ntui_MulDiv32{(*scroller\obj\value), (totalPixel-visiblePixel), (vtotal)}
      kbox\top       = topPixel + *obj\cbox\top
      kbox\bottom    = kbox\top + visiblePixel-1

  End Select

  If kbox\left  <*obj\cbox\left   Then kbox\left   = *obj\cbox\left
  If kbox\top   <*obj\cbox\top    Then kbox\top    = *obj\cbox\top
  If kbox\right >*obj\cbox\right  Then kbox\right  = *obj\cbox\right
  If kbox\bottom>*obj\cbox\bottom Then kbox\bottom = *obj\cbox\bottom

  ;/* draw the container */
  If containerPen><#TUIPEN_TRANSPARENT
    cbox.tuiRect\left = *obj\cbox\left,*obj\cbox\top,*obj\cbox\right,*obj\cbox\bottom
    If *scroller\obj\gradient
      ;cbox\left = (cbox\left+cbox\right)/2-2 : cbox\right = cbox\left+4
      _ntui_DrawGradientBox{*scroller\obj\engine,*rp,cbox,containerPen,-*scroller\orientation}
    Else
      SetAPen_ *rp,*engine\pen[containerPen]
      If kbox\left  >cbox\left   Then RectFill_ *rp,cbox\left   ,cbox\top     ,kbox\left-1 ,cbox\bottom
      If kbox\top   >cbox\top    Then RectFill_ *rp,cbox\left   ,cbox\top     ,cbox\right  ,kbox\top-1
      If kbox\right <cbox\right  Then RectFill_ *rp,kbox\right+1,cbox\top     ,cbox\right  ,cbox\bottom
      If kbox\bottom<cbox\bottom Then RectFill_ *rp,cbox\left   ,kbox\bottom+1,cbox\right  ,cbox\bottom
    End If
  EndIf

  borderType.l = #TUIBORDER_BUTTON;RAISED
  _ntui_GetBorderSize{*engine,borderType,0,bs.tuiRect}
  knobBgDone.l = ntui_DrawBorder{*engine,*rp,kbox,borderType,*scroller\obj\flags}
  !tuiRemBorder{kbox,kbox,bs}

  If knobBgDone=False
    If *scroller\obj\engine\fillStyle=0
      CNIF #TUI_DEBUG
      SetAPen_ *rp,bgpen + RRnd(1,20)
      CELSE
      SetAPen_ *rp,*engine\pen[knobPen]
      CEND
      RectFill_ *rp,kbox\left,kbox\top,kbox\right,kbox\bottom
    Else
      _ntui_DrawGradientBox{*engine,*rp,kbox,knobPen,*scroller\orientation}
    End If
  End If

  kx.l = (kbox\left + kbox\right )/2
  ky.l = (kbox\top  + kbox\bottom)/2


  Select *scroller\orientation
    Case #TUIORIENT_HORIZONTAL
        kx.l = (kbox\left+kbox\right)/2
        ky1.l = kbox\top  + 4
        ky2.l = kbox\bottom - 4

      If (!tuiRectWidth{kbox}>8)
        SetAPen_ *rp,*engine\pen[#TUIPEN_HALFSHADOW]
        Move_ *rp,kx -3 , ky1
        Draw_ *rp,kx -3 , ky2
        Move_ *rp,kx    , ky1
        Draw_ *rp,kx    , ky2
        Move_ *rp,kx +3 , ky1
        Draw_ *rp,kx +3 , ky2

        SetAPen_ *rp,*engine\pen[#TUIPEN_WHITE]
        Move_ *rp,kx -2 , ky1
        Draw_ *rp,kx -2 , ky2
        Move_ *rp,kx +1 , ky1
        Draw_ *rp,kx +1 , ky2
        Move_ *rp,kx +4 , ky1
        Draw_ *rp,kx +4 , ky2
      End If

    Case #TUIORIENT_VERTICAL
        kx1.l = kbox\left  + 4
        kx2.l = kbox\right - 4
        ky.l = (kbox\top+kbox\bottom)/2

      If (!tuiRectHeight{kbox}>8)
        SetAPen_ *rp,*engine\pen[#TUIPEN_HALFSHADOW]
        Move_ *rp,kx1 , ky -3
        Draw_ *rp,kx2 , ky -3
        Move_ *rp,kx1 , ky
        Draw_ *rp,kx2 , ky
        Move_ *rp,kx1 , ky +3
        Draw_ *rp,kx2 , ky +3

        SetAPen_ *rp,*engine\pen[#TUIPEN_WHITE]
        Move_ *rp,kx1 , ky -2
        Draw_ *rp,kx2 , ky -2
        Move_ *rp,kx1 , ky +1
        Draw_ *rp,kx2 , ky +1
        Move_ *rp,kx1 , ky +4
        Draw_ *rp,kx2 , ky +4
      End If

  End Select
End Statement
!_MakeGlobalFuncPointer{_ntui_DrawScroller,{Null,Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_FreeScroller {*scroller.tuiScroller}                       /
;/                                                                             /
;/ Description:                                                                /
;/ * free everything special that we allocated for the Scroller */               /
;/ If *scroller\img Then ntui_FreeImage{*scroller\img}  : *scroller:: /
;/ \img = Null                                                               /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scroller.tuiScroller    : ???                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DeinitScroller:
Statement _ntui_DeinitScroller{*scroller.tuiScroller}
  !_ASSERT{*scroller}
  !_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}

   ;If *scroller\img Then ntui_FreeImage{*scroller\img}  : *scroller\img = Null

End Statement
!_MakeGlobalFuncPointer{_ntui_DeinitScroller,{Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetScrollerMinSize {*scroller.tuiScroller,*rp:: /
;/ .RastPort}                                                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * calculate the minimum size for the Scroller */                              /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scroller.tuiScroller    : ???                                         /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_CalculateScrollerMinSize:
Statement _ntui_CalculateScrollerMinSize{*scroller.tuiScroller,*rp.RastPort}
  !_ASSERT{*scroller}
  !_ASSERT{*scroller\obj\classID=#TUICLASS_SCROLLER}

  *engine.tuiEngine = *scroller\obj\engine : If *engine=Null OR *rp=Null Then Statement Return
  *scroller\obj\minsize\x  = *engine\defSize[#TUISIZE_SCROLLER]
  *scroller\obj\minsize\y  = *engine\defSize[#TUISIZE_SCROLLER]

  ;If ((*scroller\obj\minsize\x&1) = 0) Then *scroller\obj\minsize\x+1
  ;If ((*scroller\obj\minsize\y&1) = 0) Then *scroller\obj\minsize\y+1

  _ntui_GetBorderSize{*engine,*scroller\obj\borderType,*scroller\obj\flags,*scroller\obj\border}
  *scroller\obj\minsize\x + !tuiBorderWidth{*scroller\obj\border}
  *scroller\obj\minsize\y + !tuiBorderHeight{*scroller\obj\border}
  *scroller\obj\minsize\x + !tuiBorderWidth{*scroller\obj\padding}
  *scroller\obj\minsize\y + !tuiBorderHeight{*scroller\obj\padding}

  If *scroller\incArrow Then  _ntui_CalculateButtonMinSize{*scroller\incArrow,*rp}
  If *scroller\decArrow Then  _ntui_CalculateButtonMinSize{*scroller\decArrow,*rp}

End Statement
!_MakeGlobalFuncPointer{_ntui_CalculateScrollerMinSize,{Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_VScroller {top.l,total.l,visible.l,@notify.l,@hel:: /
;/ p.s,@flags.l,@userID.l}                                                     /
;/                                                                             /
;/ Description:                                                                /
;/ Create function for tui scroller.                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - top.l    : ???                                                            /
;/ - total.l    : ???                                                          /
;/ - visible.l    : ???                                                        /
;/ - notify.l    : ???                                                         /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - userID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
ntui_VScroller:
Function.tuiScroller ntui_VScroller{*tagList.TagItem}

  flags.l = #TUIF_CENTER|#TUIF_MIDDLE|#TUIF_FIXWIDTH|#TUIF_WANTTAB
  *scroller.tuiScroller = (.tuiScroller)_ntui_CreateObject{#TUICLASS_SCROLLER,SizeOf.tuiScroller,flags}
  If *scroller

    *scroller\incArrow             = Null
    *scroller\decArrow             = Null
    *scroller\orientation          = #TUIORIENT_VERTICAL
    *scroller\obj\gradient         = #TUIORIENT_VERTICAL

    *scroller\visible              = 1  ; logic visible
    *scroller\total                = 1  ; logic total
    *scroller\step_                = 1  ; logic scroll step
    *scroller\grab\x               = 0,0
    *scroller\grabValue            = 0
    *scroller\grabbed              = False

    *scroller\obj\borderType       = #TUIBORDER_VSCROLLERCONTAINER

    *scroller\obj\Draw             = *_ntui_DrawScroller
    *scroller\obj\Layout           = *_ntui_LayoutScroller
    *scroller\obj\DispatchEvent    = *_ntui_DispatchScrollerEvent
    *scroller\obj\CalculateMinSize = *_ntui_CalculateScrollerMinSize
    *scroller\obj\Deinit           = *_ntui_DeinitScroller
    *scroller\obj\SetAttr          = *_ntui_SetScrollerAttr
    *scroller\obj\GetAttr          = *_ntui_GetScrollerAttr

    !tuiInitNotifyHandler{*scroller\onChange}

    If *tagList Then ntui_SetAttrs{*scroller,*tagList}

  End If

  Function Return *scroller

End Function
!_MakeGlobalFuncPointer{ntui_VScroller,{Null}}


ntui_HScroller:
Function.tuiScroller ntui_HScroller{*tagList.TagItem}

  DEFTYPE.tagL10 ltagList : n.l = 0
  ltagList\tag[n]\ti_Tag = #TUISCA_ORIENTATION ,#TUIORIENT_HORIZONTAL       : n=n+1
  ltagList\tag[n]\ti_Tag = #TUIA_GRADIENT, #TUIORIENT_HORIZONTAL            : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE,0

  *scroller.tuiScroller = ntui_VScroller{ltagList}
  If *scroller
    If *tagList Then ntui_SetAttrs{*scroller,*tagList}
  End If

  Function Return *scroller

End Function
!_MakeGlobalFuncPointer{ntui_HScroller,{Null}}


Statement ntui_InitScrollerClass{}

  classID.l = ntui_RegisterClass{"vscroller",(.tuiFunc)*ntui_VScroller,Null}
  ntui_RegisterAttr{classID,"top"           ,#TUISCA_TOP         ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"visible"       ,#TUISCA_VISIBLE     ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"total"         ,#TUISCA_TOTAL       ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"step"          ,#TUISCA_STEP        ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"onchange"      ,#TUISCA_ONCHANGE    ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"onchangecb"    ,#TUISCA_ONCHANGECB  ,#TUIAT_PTR      , 0,0 }
  ntui_RegisterAttr{classID,"orientation"   ,#TUISCA_ORIENTATION ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"hasarrows"     ,#TUISCA_HASARROWS   ,#TUIAT_BOOL     , 0,0 }
  ntui_RegisterAttr{classID,"arrows"        ,#TUISCA_HASARROWS   ,#TUIAT_BOOL     , 0,0 }

  classID.l = ntui_RegisterClass{"hscroller",(.tuiFunc)*ntui_HScroller,Null}
  ntui_RegisterAttr{classID,"top"           ,#TUISCA_TOP         ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"visible"       ,#TUISCA_VISIBLE     ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"total"         ,#TUISCA_TOTAL       ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"step"          ,#TUISCA_STEP        ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"onchange"      ,#TUISCA_ONCHANGE    ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"onchangecb"    ,#TUISCA_ONCHANGECB  ,#TUIAT_PTR      , 0,0 }
  ntui_RegisterAttr{classID,"orientation"   ,#TUISCA_ORIENTATION ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"hasarrows"     ,#TUISCA_HASARROWS   ,#TUIAT_BOOL     , 0,0 }
  ntui_RegisterAttr{classID,"arrows"        ,#TUISCA_HASARROWS   ,#TUIAT_BOOL     , 0,0 }

End Statement

ntui_InitScrollerClass{}
