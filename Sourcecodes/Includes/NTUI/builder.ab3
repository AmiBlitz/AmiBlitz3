; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "ram:"
; ExeFile         = "Empty"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 100000
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 5
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 80000
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 578
; CursorColumn    = 41
; LabelSearch     = "get"
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 100
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 100
; Max GadgetList  = 100
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 200
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 100
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 1
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 10
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 100
; Max BlitzFont   = 1
; Max GTList      = 100
; /XTRA

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntuib_SetUserID {userID.l}                                /
;/                                                                             /
;/ Description:                                                                /
;/ Usage only during buildhelper.                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - userID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntuib_SetID{id.s}
Function Return ntui_SetAttr{tuiGlobal\buildHelper\current,#TUIA_ID,&id}
End Function




;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_SetMinSize {width.l,height.l}                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - width.l    : ???                                                          /
;/ - height.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntuib_SetMinSize{width.l,height.l}

  done.l = -1
  done & ntui_SetAttr{tuiGlobal\buildHelper\current, #TUIA_MINWIDTH ,width}
  done & ntui_SetAttr{tuiGlobal\buildHelper\current, #TUIA_MINHEIGHT,height}
  Function Return done

End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_SetMaxSize {width.l,height.l}                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - width.l    : ???                                                          /
;/ - height.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntuib_SetMaxSize{width.l,height.l}

  done.l = -1
  done & ntui_SetAttr{tuiGlobal\buildHelper\current, #TUIA_MAXWIDTH,width}
  done & ntui_SetAttr{tuiGlobal\buildHelper\current, #TUIA_MAXHEIGHT,height}
  Function Return done

End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_SetBorder {borderType.l}                            /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - borderType.l    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntuib_SetBorder{borderType.l}

  Function Return ntui_SetAttr{tuiGlobal\buildHelper\current,#TUIA_BORDERTYPE,borderType}

End Function


Statement FAST ntuib_SetFlags{flags.l,@nochildren.l}

  ntui_SetFlags{tuiGlobal\buildHelper\current,flags,nochildren}

End Statement

Statement FAST ntuib_ClearFlags{flags.l,@nochildren.l}

  ntui_ClearFlags{tuiGlobal\buildHelper\current,flags,nochildren}

End Statement


; builders
Function.tuiTabView ntuib_BeginTabView{initialTab.l,@tabStyle.l,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUITVA_ACTIVETAB, initialTab           : n=n+1
  If (tabStyle>=0) tagList\tag[n]\ti_Tag = #TUITVA_TABSTYLE, tabStyle          : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *tabView.tuiTabView = ntui_BeginTabView{tagList}

  Function Return *tabView

End Function


Function.tuiProgressBar ntuib_ProgressBar{text.s,done.l,total.l,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  If text    Then tagList\tag[n]\ti_Tag = #TUIPBA_TEXT  ,&text    : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  tagList\tag[n]\ti_Tag = #TUIPBA_TOTAL ,total    : n=n+1
  tagList\tag[n]\ti_Tag = #TUIPBA_DONE  ,done     : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *progressBar.tuiProgressBar = ntui_ProgressBar{tagList}

  Function Return *progressBar

End Function


Function.tuiBalancer ntuib_VBalancer{}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUIBCA_ORIENTATION,#TUIORIENT_VERTICAL : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *balancer.tuiBalancer = ntui_Balancer{tagList}

  Function Return *balancer

End Function


Function.tuiBalancer ntuib_HBalancer{}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUIBCA_ORIENTATION,#TUIORIENT_HORIZONTAL : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *balancer.tuiBalancer = ntui_Balancer{tagList}

  Function Return *balancer

End Function


Function.tuiButton ntuib_CheckButton{label.s,checked.l,@onClick.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 ltagList : n.l = 0
  ltagList\tag[n]\ti_Tag = #TUIBA_CHECKED      ,checked         : n=n+1
  If help       Then ltagList\tag[n]\ti_Tag = #TUIA_HELP       ,&help    : n=n+1
  If nameID     Then ltagList\tag[n]\ti_Tag = #TUIA_ID         ,&nameID  : n=n+1
  If onClick    Then ltagList\tag[n]\ti_Tag = #TUIBA_ONCLICK   ,&onClick : n=n+1
  If label      Then ltagList\tag[n]\ti_Tag = #TUIBA_LABEL     ,&label   : n=n+1
  If flags><#TUI_NOFLAGS Then ltagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE,0

  *button.tuiButton = ntui_CheckButton{ltagList}

  Function Return *button

End Function


Function.tuiButton ntuib_RadioButton{label.s,checked.l,@onClick.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 ltagList : n.l = 0
  ltagList\tag[n]\ti_Tag = #TUIBA_CHECKED      ,checked         : n=n+1
  If help       Then ltagList\tag[n]\ti_Tag = #TUIA_HELP       ,&help    : n=n+1
  If nameID     Then ltagList\tag[n]\ti_Tag = #TUIA_ID         ,&nameID  : n=n+1
  If onClick    Then ltagList\tag[n]\ti_Tag = #TUIBA_ONCLICK   ,&onClick : n=n+1
  If label      Then ltagList\tag[n]\ti_Tag = #TUIBA_LABEL     ,&label   : n=n+1
  If flags><#TUI_NOFLAGS Then ltagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE,0

  *button.tuiButton = ntui_RadioButton{ltagList}

  Function Return *button

End Function


Function.tuiButton ntuib_ToolButton{label.s,image.s,@tuiSize.l,@onClick.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 ltagList : n.l = 0
  If help       Then ltagList\tag[n]\ti_Tag = #TUIA_HELP       ,&help    : n=n+1
  If nameID     Then ltagList\tag[n]\ti_Tag = #TUIA_ID         ,&nameID  : n=n+1
  If onClick    Then ltagList\tag[n]\ti_Tag = #TUIBA_ONCLICK   ,&onClick : n=n+1
  If tuiSize>=0 Then ltagList\tag[n]\ti_Tag = #TUIBA_IMAGESIZE ,tuiSize  : n=n+1
  If image      Then ltagList\tag[n]\ti_Tag = #TUIBA_IMAGE     ,&image   : n=n+1
  If label      Then ltagList\tag[n]\ti_Tag = #TUIBA_LABEL     ,&label   : n=n+1
  If flags><#TUI_NOFLAGS Then ltagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE,0

  *button.tuiButton = ntui_ToolButton{ltagList}

  Function Return *button

End Function


Function.tuiButton ntuib_ImageButton{label.s,image.s,@onClick.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 ltagList : n.l = 0
  If help    Then ltagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then ltagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If onClick Then ltagList\tag[n]\ti_Tag = #TUIBA_ONCLICK,&onClick : n=n+1
  If image   Then ltagList\tag[n]\ti_Tag = #TUIBA_IMAGE  ,&image   : n=n+1
  If label   Then ltagList\tag[n]\ti_Tag = #TUIBA_LABEL  ,&label   : n=n+1
  If flags><#TUI_NOFLAGS Then ltagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE,0

  *button.tuiButton = ntui_ImageButton{ltagList}

  Function Return *button

End Function


Function.tuiButton ntuib_FunctionButton{funcID.l,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUIBA_FUNCTION    ,funcID : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *button.tuiButton = ntui_FunctionButton{tagList}

  Function Return *button

End Function


Function.tuiButton ntuib_CheckBox{checked.l,@onClick.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 ltagList : n.l = 0
  If help    Then ltagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then ltagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If onClick Then ltagList\tag[n]\ti_Tag = #TUIBA_ONCLICK,&onClick : n=n+1
  ltagList\tag[n]\ti_Tag = #TUIBA_CHECKED ,checked   : n=n+1
  If flags><#TUI_NOFLAGS Then ltagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  ltagList\tag[n]\ti_Tag = #TAG_DONE,0

  *button.tuiButton = ntui_CheckBox{ltagList}

  Function Return *button

End Function


Function.tuiButton ntuib_Button{label.s,image.s,@onClick.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  If label   Then tagList\tag[n]\ti_Tag = #TUIBA_LABEL  ,&label   : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If onClick Then tagList\tag[n]\ti_Tag = #TUIBA_ONCLICK,&onClick : n=n+1
  If image   Then tagList\tag[n]\ti_Tag = #TUIBA_IMAGE  ,&image   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *button.tuiButton = ntui_Button{tagList}

  Function Return *button

End Function


Function.tuiCustomView ntuib_CustomView{width.l,height.l,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUIA_MINWIDTH , width    : n=n+1
  tagList\tag[n]\ti_Tag = #TUIA_MINHEIGHT, height   : n=n+1
  If help     Then tagList\tag[n]\ti_Tag = #TUIA_HELP     , &help     : n=n+1
  If nameID   Then tagList\tag[n]\ti_Tag = #TUIA_ID       , &nameID   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS, flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *customView.tuiCustomView = ntui_CustomView{tagList}

  Function Return *customView

End Function


Function.tuiEngine ntuib_Engine{appName.s,@arexxPort.s,@appMenu.s,@appIcon.s,@pubScreenName.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  If appName       Then tagList\tag[n]\ti_Tag = #TUIEA_APPNAME      ,&appName       : n=n+1
  If appName       Then tagList\tag[n]\ti_Tag = #TUIEA_APPICONTEXT  ,&appName       : n=n+1
  If arexxPort     Then tagList\tag[n]\ti_Tag = #TUIEA_AREXXPORT    ,&arexxPort     : n=n+1
  If appMenu       Then tagList\tag[n]\ti_Tag = #TUIEA_APPMENUTEXT  ,&appMenu       : n=n+1
  If appIcon       Then tagList\tag[n]\ti_Tag = #TUIEA_APPICONFILE  ,&appIcon       : n=n+1
  If pubScreenName Then tagList\tag[n]\ti_Tag = #TUIEA_PUBSCREENNAME,&pubScreenName : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *engine.tuiEngine = ntui_Engine{tagList}

  Function Return *engine

End Function


Function.tuiGroup ntuib_BeginVGroup{wrap.l,@title.s,@image.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUIGA_WRAP  ,wrap  : n=n+1
  tagList\tag[n]\ti_Tag = #TUIGA_ORIENTATION  ,#TUIORIENT_VERTICAL  : n=n+1
  If title
    tagList\tag[n]\ti_Tag = #TUIGA_TITLE  ,&title   : n=n+1
    tagList\tag[n]\ti_Tag = #TUIA_BORDERTYPE  ,#TUIBORDER_TITLE
  End If
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If image   Then tagList\tag[n]\ti_Tag = #TUIGA_IMAGE  ,&image   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *group.tuiGroup = ntui_BeginGroup{tagList}

  Function Return *group

End Function


Function.tuiImageView ntuib_ImageView{imagefile.s,@tuiSize.l,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  If tuiSize>=0 Then tagList\tag[n]\ti_Tag = #TUIIVA_SIZE    ,tuiSize    : n=n+1
  If imagefile  Then tagList\tag[n]\ti_Tag = #TUIIVA_IMAGE   ,&imagefile : n=n+1
  If help       Then tagList\tag[n]\ti_Tag = #TUIA_HELP      ,&help      : n=n+1
  If nameID     Then tagList\tag[n]\ti_Tag = #TUIA_ID        ,&nameID    : n=n+1

  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *image.tuiImageView = ntui_ImageView{tagList}

  Function Return *image

End Function


Function.tuiGroup ntuib_BeginHGroup{wrap.l,@title.s,@image.s,@flags.l,@nameID.s}

  *group.tuiGroup = ntuib_BeginVGroup{wrap,title,image,flags,nameID}
  *group\orientation = #TUIORIENT_HORIZONTAL

  Function Return *group

End Function


Function.tuiLabel ntuib_Label{text.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  If text    Then tagList\tag[n]\ti_Tag = #TUILA_TEXT   ,&text    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *label.tuiLabel = ntui_Label{tagList}

  Function Return *label

End Function


Function.tuiListView ntuib_ListView{title.s,@multiSelect.l,@onSelect.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUILVA_MULTISELECT, multiSelect    : n=n+1
  If title    Then tagList\tag[n]\ti_Tag = #TUILVA_TITLE  , &title    : n=n+1
  If help     Then tagList\tag[n]\ti_Tag = #TUIA_HELP     , &help     : n=n+1
  If onSelect Then tagList\tag[n]\ti_Tag = #TUILVA_ONSELECT , &onSelect : n=n+1
  If nameID   Then tagList\tag[n]\ti_Tag = #TUIA_ID       , &nameID   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS, flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *listView.tuiListView = ntui_ListView{tagList}

  Function Return *listView

End Function


Function.tuiMenuItem ntuib_MenuItem{text.s,@image.s,@shortcut.s,@onSelect.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  If text     Then tagList\tag[n]\ti_Tag = #TUIMIA_LABEL    ,&text     : n=n+1
  If help     Then tagList\tag[n]\ti_Tag = #TUIA_HELP       ,&help     : n=n+1
  If nameID   Then tagList\tag[n]\ti_Tag = #TUIA_ID         ,&nameID   : n=n+1
  If onSelect Then tagList\tag[n]\ti_Tag = #TUIMIA_ONCLICK  ,&onSelect : n=n+1
  If image    Then tagList\tag[n]\ti_Tag = #TUIMIA_IMAGE    ,&image    : n=n+1
  If shortcut Then tagList\tag[n]\ti_Tag = #TUIMIA_SHORTCUT ,&shortcut : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *menuItem_.tuiMenuItem = ntui_MenuItem{tagList}

  Function Return *menuItem_

End Function


Function.tuiMenuItem ntuib_BeginSubMenu{text.s,@image.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  If text    Then tagList\tag[n]\ti_Tag = #TUIMIA_LABEL  ,&text    : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP     ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID       ,&nameID  : n=n+1
  If image   Then tagList\tag[n]\ti_Tag = #TUIMIA_IMAGE  ,&image   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *menuItem_.tuiMenuItem = ntui_BeginSubMenu{tagList}

  Function Return *menuItem_

End Function


Function.tuiMenuItem ntuib_BeginPopUp{text.s,@image.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  If text    Then tagList\tag[n]\ti_Tag = #TUIMIA_LABEL  ,&text    : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP     ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID       ,&nameID  : n=n+1
  If image   Then tagList\tag[n]\ti_Tag = #TUIMIA_IMAGE  ,&image   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *menuItem_.tuiMenuItem = ntui_BeginPopUp{tagList}

  Function Return *menuItem_

End Function


Function.tuiMenuItem ntuib_BeginDropDown{text.s,@image.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  If text    Then tagList\tag[n]\ti_Tag = #TUIMIA_LABEL  ,&text    : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP     ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID       ,&nameID  : n=n+1
  If image   Then tagList\tag[n]\ti_Tag = #TUIMIA_IMAGE  ,&image   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *menuItem_.tuiMenuItem = ntui_BeginDropDown{tagList}

  Function Return *menuItem_

End Function


Function.tuiMenuItem ntuib_BeginMenuTitle{text.s,@image.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  If text    Then tagList\tag[n]\ti_Tag = #TUIMIA_LABEL  ,&text    : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP     ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID       ,&nameID  : n=n+1
  If image   Then tagList\tag[n]\ti_Tag = #TUIMIA_IMAGE  ,&image   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *menuItem_.tuiMenuItem = ntui_BeginMenuTitle{tagList}

  Function Return *menuItem_

End Function


Function.tuiScroller ntuib_VScroller{top.l,total.l,visible.l,@onChange.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUISCA_TOP     ,top     : n=n+1
  tagList\tag[n]\ti_Tag = #TUISCA_TOTAL   ,total   : n=n+1
  tagList\tag[n]\ti_Tag = #TUISCA_VISIBLE ,visible : n=n+1
  If onChange Then tagList\tag[n]\ti_Tag = #TUISCA_ONCHANGE   ,&onChange   : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *scroller.tuiScroller = ntui_VScroller{tagList}

  Function Return *scroller

End Function


Function.tuiScroller ntuib_HScroller{top.l,total.l,visible.l,@onChange.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUISCA_TOP     ,top     : n=n+1
  tagList\tag[n]\ti_Tag = #TUISCA_TOTAL   ,total   : n=n+1
  tagList\tag[n]\ti_Tag = #TUISCA_VISIBLE ,visible : n=n+1
  If onChange Then tagList\tag[n]\ti_Tag = #TUISCA_ONCHANGE   ,&onChange   : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *scroller.tuiScroller = ntui_HScroller{tagList}

  Function Return *scroller

End Function


Statement ntuib_AddArrows{}

  If tuiGlobal\buildHelper\current\classID=#TUICLASS_SCROLLER
    *scroller.tuiScroller = (.tuiScroller)tuiGlobal\buildHelper\current
  End If

  If *scroller
    ntui_SetAttr{*scroller,#TUISCA_HASARROWS,True}
  End If

End Statement


Function.tuiScrollView ntuib_BeginScrollView{width.l,height.l,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUIA_MINWIDTH , width    : n=n+1
  tagList\tag[n]\ti_Tag = #TUIA_MINHEIGHT, height   : n=n+1
  If help     Then tagList\tag[n]\ti_Tag = #TUIA_HELP     , &help     : n=n+1
  If nameID   Then tagList\tag[n]\ti_Tag = #TUIA_ID       , &nameID   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS, flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *scrollView.tuiScrollView = ntui_BeginScrollView{tagList}

  Function Return *scrollView

End Function


Function.tuiSeperator ntuib_VSeperator{text.s,@flags.l}

  DEFTYPE.tagL10 tagList : n.l = 0
  If text    Then tagList\tag[n]\ti_Tag = #TUIA_STRING   ,&text    : n=n+1
  tagList\tag[n]\ti_Tag = #TUISEA_ORIENTATION  ,#TUIORIENT_VERTICAL   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *seperator.tuiSeperator = ntui_Seperator{tagList}

  Function Return *seperator

End Function


Function.tuiSeperator ntuib_HSeperator{text.s,@flags.l}

  DEFTYPE.tagL10 tagList : n.l = 0
  If text    Then tagList\tag[n]\ti_Tag = #TUIA_STRING   ,&text    : n=n+1
  tagList\tag[n]\ti_Tag = #TUISEA_ORIENTATION  ,#TUIORIENT_HORIZONTAL   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *seperator.tuiSeperator = ntui_Seperator{tagList}

  Function Return *seperator

End Function


Function.tuiSlider ntuib_VSlider{value.l,minValue.l,maxValue.l,@label.s,@onChange.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUISLA_VALUE       , value     : n=n+1
  tagList\tag[n]\ti_Tag = #TUISLA_MINVALUE    , minValue  : n=n+1
  tagList\tag[n]\ti_Tag = #TUISLA_MAXVALUE    , maxValue  : n=n+1
  tagList\tag[n]\ti_Tag = #TUISLA_ORIENTATION , #TUIORIENT_VERTICAL : n=n+1
  If label    Then tagList\tag[n]\ti_Tag = #TUISLA_LABEL    , &label    : n=n+1
  If onChange Then tagList\tag[n]\ti_Tag = #TUISLA_ONCHANGE , &onChange : n=n+1
  If help     Then tagList\tag[n]\ti_Tag = #TUIA_HELP       , &help     : n=n+1
  If nameID   Then tagList\tag[n]\ti_Tag = #TUIA_ID         , &nameID   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *slider.tuiSlider = ntui_VSlider{tagList}

  Function Return *slider

End Function


Function.tuiSlider ntuib_HSlider{value.l,minValue.l,maxValue.l,@label.s,@onChange.s,@help.s,@flags.l,@nameID.s}

  *slider.tuiSlider = ntuib_VSlider{value,minValue,maxValue,label,onChange,help,flags,nameID}
  If *slider
    ntui_SetAttr{*slider,#TUISLA_ORIENTATION ,#TUIORIENT_HORIZONTAL}
  End If

  Function Return *slider

End Function


Function.tuiSpace ntuib_Space{width.l,height.l,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUIA_MINWIDTH , width   : n=n+1
  tagList\tag[n]\ti_Tag = #TUIA_MINHEIGHT, height  : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *space.tuiSpace = ntui_Space{tagList}

  Function Return *space

End Function


Function.tuiTextBox ntuib_Console{text.s,maxLines.l,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUITBA_MAXLINES,maxLines
  tagList\tag[n]\ti_Tag = #TUITBA_SCROLLERMODE,#TUISCROLLER_ALWAYS : n=n+1
  If text    Then tagList\tag[n]\ti_Tag = #TUITBA_TEXT  ,&text    : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *textBox.tuiTextBox = ntui_TextBox{tagList}
  If *textBox
    *textBox\subClassID                   = #TUITB_CONSOLE
    *textBox\tuiPenN[#TUITBPEN_BG]        = #TUIPEN_BACKGROUND
    *textBox\tuiPenN[#TUITBPEN_BGFOCUS]   = #TUIPEN_BACKGROUND
    *textBox\tuiPenN[#TUITBPEN_BGNOFOCUS] = #TUIPEN_BACKGROUND
    *textBox\tuiPenN[#TUITBPEN_BGDISABLED]= #TUIPEN_HALFSHADOW
    *textBox\edflags                      = #TUITBF_NotePad|#TUITBF_READONLY
    *textBox\blink_speed                  = -1
    *textBox\obj\borderType               = #TUIBORDER_RECESSED
  End If

  Function Return *textBox

End Function


Function.tuiTextBox ntuib_String{text.s,maxChars.l,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUITBA_MAXCHARS,maxChars : n=n+1
  If text    Then tagList\tag[n]\ti_Tag = #TUITBA_TEXT  ,&text    : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *textBox.tuiTextBox = ntui_String{tagList}

  Function Return *textBox

End Function


Function.tuiTextBox ntuib_EditLabel{string.s,maxChars.l,bgTuiPen.l,@help.s,@flags.l,@nameID.s}
*textBox.tuiTextBox = ntuib_String{string,maxChars,help,flags,nameID}
If *textBox
  *textBox\tuiPenN[#TUITBPEN_BG]         = bgTuiPen
  *textBox\tuiPenN[#TUITBPEN_BGFOCUS]    = bgTuiPen
  *textBox\tuiPenN[#TUITBPEN_BGNOFOCUS]  = bgTuiPen
  *textBox\tuiPenN[#TUITBPEN_BGDISABLED] = bgTuiPen
  *textBox\obj\borderType                = #TUIBORDER_NONE
  *textBox\obj\gradient                  = #TUIORIENT_NONE
End If
Function Return *textBox
End Function


Function.tuiTextBox ntuib_NumString{value.l,minValue.l,maxValue.l,@help.s,@flags.l,@nameID.s}
If minValue>maxValue Then Exchange minValue,maxValue
If value<minValue Then value=minValue
If value>maxValue Then value=maxValue
string.s =  Str$(value)
*textBox.tuiTextBox = ntuib_String{string,16,help,flags,nameID}
If *textBox
  *textBox\subClassID                = #TUITB_STRING_NUMERIC
  *textBox\numMin                    = minValue
  *textBox\numMax                    = maxValue
  *textBox\obj\value                 = value
  ntui_SetValidTextBoxChars{*textBox,"0123456789+-"}
End If
Function Return *textBox
End Function


Function.tuiTextBox ntuib_NumEditLabel{value.l,minValue.l,maxValue.l,bgTuiPen.l,@help.s,@flags.l,@nameID.s}
*textBox.tuiTextBox = ntuib_NumString{value,minValue,maxValue,help,flags,nameID}
If *textBox
  *textBox\obj\borderType               = #TUIBORDER_NONE
  *textBox\tuiPenN[#TUITBPEN_BG]        = bgTuiPen
  *textBox\tuiPenN[#TUITBPEN_BGFOCUS]   = bgTuiPen
  *textBox\tuiPenN[#TUITBPEN_BGNOFOCUS] = bgTuiPen
  *textBox\tuiPenN[#TUITBPEN_BGDISABLED]= bgTuiPen
  *textBox\obj\gradient                 = #TUIORIENT_NONE
End If
Function Return *textBox
End Function


Function.tuiTextBox ntuib_TextBox{text.s,maxLines.l,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUITBA_MAXLINES,maxLines
  tagList\tag[n]\ti_Tag = #TUITBA_SCROLLERMODE,#TUISCROLLER_ALWAYS : n=n+1
  If text    Then tagList\tag[n]\ti_Tag = #TUITBA_TEXT  ,&text    : n=n+1
  If help    Then tagList\tag[n]\ti_Tag = #TUIA_HELP    ,&help    : n=n+1
  If nameID  Then tagList\tag[n]\ti_Tag = #TUIA_ID      ,&nameID  : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *textBox.tuiTextBox = ntui_TextBox{tagList}

  Function Return *textBox

End Function


Function.tuiTreeView ntuib_DirView{width.l,height.l,pattern.s,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUIA_MINWIDTH , width    : n=n+1
  tagList\tag[n]\ti_Tag = #TUIA_MINHEIGHT, height   : n=n+1
  If help     Then tagList\tag[n]\ti_Tag = #TUIA_HELP     , &help     : n=n+1
  If nameID   Then tagList\tag[n]\ti_Tag = #TUIA_ID       , &nameID   : n=n+1
  If pattern  Then tagList\tag[n]\ti_Tag = #TUITRAV_DOSPATTERN  , &pattern    : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS, flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *treeView.tuiTreeView = ntui_DirView{tagList}

  Function Return *treeView

End Function


Function.tuiTreeView ntuib_TreeView{width.l,height.l,@help.s,@flags.l,@nameID.s}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUIA_MINWIDTH , width    : n=n+1
  tagList\tag[n]\ti_Tag = #TUIA_MINHEIGHT, height   : n=n+1
  If help     Then tagList\tag[n]\ti_Tag = #TUIA_HELP     , &help     : n=n+1
  If nameID   Then tagList\tag[n]\ti_Tag = #TUIA_ID       , &nameID   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS, flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *treeView.tuiTreeView = ntui_TreeView{tagList}

  Function Return *treeView

End Function


Function.tuiWindow ntuib_BeginWindow{title.s,nameID.s,@instanceID.l,@WFlags.l,@flags.l}

  DEFTYPE.tagL10 tagList : n.l = 0
  tagList\tag[n]\ti_Tag = #TUIWA_INSTANCEID      ,instanceID  : n=n+1
  If title      Then tagList\tag[n]\ti_Tag = #TUIWA_TITLE      ,&title   : n=n+1
  If nameID     Then tagList\tag[n]\ti_Tag = #TUIA_ID          ,&nameID  : n=n+1
;  If WFlags><-1 Then tagList\tag[n]\ti_Tag = #TUIWA_OSWINFLAGS ,WFlags   : n=n+1
  If flags><#TUI_NOFLAGS Then tagList\tag[n]\ti_Tag = #TUIA_SETFLAGS,flags : n=n+1
  tagList\tag[n]\ti_Tag = #TAG_DONE,0

  *win.tuiWindow = ntui_BeginWindow{tagList}

  Function Return *win

End Function
