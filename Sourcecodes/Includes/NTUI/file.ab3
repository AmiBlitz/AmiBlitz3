; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "ram:"
; ExeFile         = "Empty"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 100000
; MakeSmallest    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 4
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8192
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 74
; CursorColumn    = 13
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 100
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 100
; Max GadgetList  = 100
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 200
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 100
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 1
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 10
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 100
; Max BlitzFont   = 1
; Max GTList      = 100
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.s = _ml_AddPart {pathpart.s,filepart.s}                     /
;/                                                                             /
;/ Description:                                                                /
;/ * private *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - pathpart.s    : ???                                                       /
;/ - filepart.s    : ???                                                       /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.s     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.s _ntui_AddPart {pathpart.s,filepart.s}
*temp.b = _ntui_ObtainTempBuffer{FLen(pathpart)+FLen(filepart)+8+4}
If *temp
  Poke.s *temp,pathpart
  If filepart
    AddPart_ *temp,&filepart,FLen(pathpart)+FLen(filepart)+8
  End If
  ret.s = Peek.s(*temp)
  _ntui_ReleaseTempBuffer{}
End If
Function Return ret
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.s = _ml_FilePart {filename.s}                               /
;/                                                                             /
;/ Description:                                                                /
;/ * private *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - filename.s    : ???                                                       /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.s     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.s _ntui_FilePart {filename.s}
fptr.l = FilePart_(&filename.s)
If fptr
  filepart.s = Peek.s(fptr)
Else
  filepath.s = ""
End If
Function Return filepart.s
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.s = _ml_PathPart {filename.s}                               /
;/                                                                             /
;/ Description:                                                                /
;/ * private *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - filename.s    : ???                                                       /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.s     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.s _ntui_PathPart {filename.s}
pathpart.s = Left$(filename.s,PathPart_(&filename.s)-&filename.s)
Function Return pathpart.s
End Function


Function.l _ntui_GetLibVersion{library.s}
libversion.l = -1
*lib.Library=OpenLibrary_(&library.s,0)
If *lib
libversion.l = *lib\lib_Version
CloseLibrary_ *lib
End If
Function Return libversion
End Function


