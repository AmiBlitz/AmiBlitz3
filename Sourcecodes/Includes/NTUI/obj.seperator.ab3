; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 53
; CursorColumn    = 31
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
#TUI_HAS_SEPERATOR = 1

NEWTYPE.tuiSeperator

  obj.tuiObject
  orientation.l
  
End NEWTYPE

#TUISEA_BASE         = #TUIA_USER
#TUISEA_ORIENTATION  = #TUISEA_BASE + 0

_ntui_SetSeperatorAttr:
Function.l _ntui_SetSeperatorAttr{*seperator.tuiSeperator,ti_Tag.l,ti_Data.l}
  !_ASSERT{*seperator}
  !_ASSERT{*seperator\obj\classID=#TUICLASS_SEPERATOR}

  done.l = True
  Select ti_Tag
    Case #TUISEA_ORIENTATION
      Select ti_Data
        Case #TUIORIENT_HORIZONTAL
          *seperator\orientation = #TUIORIENT_HORIZONTAL
          *seperator\obj\flags   | #TUIF_FIXSIZE - #TUIF_FIXWIDTH
        Case #TUIORIENT_VERTICAL
          *seperator\orientation = #TUIORIENT_VERTICAL
          *seperator\obj\flags | #TUIF_FIXSIZE - #TUIF_FIXHEIGHT
        Default
          done=False
      End Select
      ntui_Refresh{*seperator,Null}
      
    Default
      done = False

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_SetSeperatorAttr,{Null,0,0}}


_ntui_GetSeperatorAttr:
Function.l _ntui_GetSeperatorAttr{*seperator.tuiSeperator,ti_Tag.l,*ti_Data.longP}
  !_ASSERT{*seperator}
  !_ASSERT{*seperator\obj\classID=#TUICLASS_SEPERATOR}

  done.l = True
  Select ti_Tag
    Case #TUISEA_ORIENTATION   : *ti_Data\l = *seperator\orientation

    Default
      done = False

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_GetSeperatorAttr,{Null,0,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetSeperatorMinSize {*seperator.tuiSeperator,:: /
;/ *rp.RastPort}                                                               /
;/                                                                             /
;/ Description:                                                                /
;/ * calculate the minimum size for the Seperator */                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *seperator.tuiSeperator    : ???                                       /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
 _ntui_CalculateSeperatorMinSize:
Statement _ntui_CalculateSeperatorMinSize{*seperator.tuiSeperator,*rp.RastPort}
  !_ASSERT{*seperator}
  !_ASSERT{*seperator\obj\classID=#TUICLASS_SEPERATOR}

  *seperator\obj\minsize\x  = 2
  *seperator\obj\minsize\y  = 2
  If *seperator\obj\string
    *seperator\obj\minsize\y = *seperator\obj\engine\defSize[#TUISIZE_INLINE]
  End If

End Statement
!_MakeGlobalFuncPointer{_ntui_CalculateSeperatorMinSize,{Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawSeperator {*seperator.tuiSeperator,*rp.RastPort}        /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *seperator.tuiSeperator    : ???                                       /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DrawSeperator:
Statement _ntui_DrawSeperator{*seperator.tuiSeperator,*rp.RastPort,*rpclip.tuiRect}
!_ASSERT{*seperator}
!_ASSERT{*seperator\obj\classID=#TUICLASS_SEPERATOR}

*tuiEngine.tuiEngine = *seperator\obj\engine : If *tuiEngine=Null OR *rp=Null Then Statement Return
bgTuiPen.l = *seperator\obj\bgTuiPen ; _ntui_GetBGTuiPen{*seperator}

ym.l = (*seperator\obj\cbox\top +*seperator\obj\cbox\bottom)/2
xm.l = (*seperator\obj\cbox\left+*seperator\obj\cbox\right )/2
y1.l = *seperator\obj\cbox\top
y2.l = *seperator\obj\cbox\bottom
x1.l = *seperator\obj\cbox\left
x2.l = *seperator\obj\cbox\right

If *seperator\orientation = #TUIORIENT_HORIZONTAL
  If *seperator\obj\string
    xs.l = _ntui_GetTextWidth{*tuiEngine,*seperator\obj\string,*seperator\obj\flags,*rp}
    lx1.l = xm-xs/2
    lx2.l = lx1+xs
    cbox.tuiRect\left = lx1,y1,lx2,y2
    lx1 - *seperator\obj\padding\left
    lx2 + *seperator\obj\padding\right
    tbox.tuiRect\left = lx1,y1,lx2,y2
    _ntui_Print{*tuiEngine,*seperator\obj\string,tbox,tbox,*seperator\obj\flags,*rp,#TUIPEN_TEXT,bgTuiPen}
  Else
    lx1=x2
    lx2=x2
  End If

  SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_HALFSHADOW]
  Move_ *rp,x1,ym : Draw_ *rp,lx1,ym
  If lx2<x2 Then Move_ *rp,lx2,ym : Draw_ *rp,x2,ym

  SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_HALFSHINE]
  Move_ *rp,x1,ym+1 : Draw_ *rp,lx1,ym+1
  If lx2<x2 Then Move_ *rp,lx2,ym+1 : Draw_ *rp,x2,ym+1
End If

If *seperator\orientation = #TUIORIENT_VERTICAL
  SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_HALFSHADOW]
  Move_ *rp,xm,y1 : Draw_ *rp,xm,y2
  SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_HALFSHINE]
  Move_ *rp,xm+1,y1 : Draw_ *rp,xm+1,y2
End If

End Statement
!_MakeGlobalFuncPointer{_ntui_DrawSeperator,{Null,Null,Null}}


ntui_Seperator:
Function.tuiSeperator ntui_Seperator{*tagList.TagItem}

  *seperator.tuiSeperator = (.tuiSeperator)_ntui_CreateObject{#TUICLASS_SEPERATOR,SizeOf.tuiSeperator,#TUIF_FIXSIZE}
  If *seperator
    *seperator\orientation          = #TUIORIENT_VERTICAL

    *seperator\obj\Draw             = *_ntui_DrawSeperator
    *seperator\obj\Layout           = Null ;*_ntui_LayoutSeperator
    *seperator\obj\DispatchEvent    = Null ;*_ntui_DispatchSeperatorEvent
    *seperator\obj\CalculateMinSize = *_ntui_CalculateSeperatorMinSize
    *seperator\obj\Deinit           = Null ;*_ntui_DeinitSeperator
    *seperator\obj\SetAttr          = *_ntui_SetSeperatorAttr
    *seperator\obj\GetAttr          = *_ntui_GetSeperatorAttr

    If *tagList Then ntui_SetAttrs{*seperator,*tagList}

  End If

  Function Return *seperator

End Function
!_MakeGlobalFuncPointer{ntui_Seperator,{Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_HSeperator {}                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * create function for tui Seperator */                                      /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
ntui_HSeperator:
Function.tuiSeperator ntui_HSeperator{*tagList.TagItem}

  *seperator.tuiSeperator = ntui_Seperator{*tagList}
  If *seperator
    _ntui_SetSeperatorAttr{*seperator,#TUISEA_ORIENTATION,#TUIORIENT_HORIZONTAL}
  End If
  Function Return *seperator

End Function
!_MakeGlobalFuncPointer{ntui_HSeperator,{Null}}


Statement ntui_InitSeperatorClass{}

  classID.l = ntui_RegisterClass{"seperator",(.tuiFunc)*ntui_Seperator,Null}
  ntui_RegisterAttr{classID,"orientation",#TUISEA_ORIENTATION,#TUIAT_INT,#TUIORIENT_VERTICAL,#TUIORIENT_HORIZONTAL}
  classID.l = ntui_RegisterClass{"hseperator",(.tuiFunc)*ntui_HSeperator,Null}
  classID.l = ntui_RegisterClass{"vseperator",(.tuiFunc)*ntui_Seperator,Null}

End Statement

ntui_InitSeperatorClass{}
