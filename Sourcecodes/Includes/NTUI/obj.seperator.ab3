; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 82
; CursorColumn    = 10
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: ntui_seperator.include                                                /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 06/01/2009                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
#TUI_HAS_SEPERATOR = 1

CNIF #__include=0
optimize 7
Syntax 2
CEND


NEWTYPE.tuiSeperator
obj.tuiObject
orientation.l
End NEWTYPE



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetSeperatorMinSize {*tuiSeperator.tuiSeperator,:: /
;/ *rp.RastPort}                                                               /
;/                                                                             /
;/ Description:                                                                /
;/ * calculate the minimum size for the Seperator */                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiSeperator.tuiSeperator    : ???                                       /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
 _ntui_CalculateSeperatorMinSize:
Function.l _ntui_CalculateSeperatorMinSize{*tuiSeperator.tuiSeperator,*rp.RastPort}
*tuiSeperator\obj\minsize\x  = 2
*tuiSeperator\obj\minsize\y  = 2
If *tuiSeperator\obj\string
  *tuiSeperator\obj\minsize\y = *tuiSeperator\obj\tuiEngine\defSize[#TUISIZE_INLINE]
End If
Function Return *tuiSeperator\obj\minsize
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawSeperator {*tuiSeperator.tuiSeperator,*rp.RastPort}        /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *tuiSeperator.tuiSeperator    : ???                                       /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DrawSeperator:
Statement _ntui_DrawSeperator{*tuiSeperator.tuiSeperator,*rp.RastPort}
*tuiEngine.tuiEngine = *tuiSeperator\obj\tuiEngine : If *tuiEngine=!_NULL OR *rp=!_NULL Then Statement Return
bgTuiPen.l = *tuiSeperator\obj\bgTuiPen ; _ntui_GetBGTuiPen{*tuiSeperator}

ym.l = (*tuiSeperator\obj\bbox\top +*tuiSeperator\obj\bbox\bottom)/2
xm.l = (*tuiSeperator\obj\bbox\left+*tuiSeperator\obj\bbox\right )/2
y1.l = *tuiSeperator\obj\bbox\top
y2.l = *tuiSeperator\obj\bbox\bottom
x1.l = *tuiSeperator\obj\bbox\left
x2.l = *tuiSeperator\obj\bbox\right


If *tuiSeperator\obj\string
;  xs.l = _ntui_GetTextWidth{*tuiEngine,*tuiSeperator\obj\string,*tuiSeperator\obj\flags,*rp}
  _ntui_Print{*tuiEngine,*tuiSeperator\obj\string,*tuiSeperator\obj\ibox,*tuiSeperator\obj\cbox,*tuiSeperator\obj\flags,*rp,#TUIPEN_TEXT,bgTuiPen}
Else
  If bgTuiPen><#TUIPEN_TRANSPARENT
    SetAPen_ *rp,*tuiEngine\pen[bgTuiPen]
    RectFill_ *rp,x1,y1,x2,y2
  EndIf
End If

If *tuiSeperator\orientation = #TUIORIENT_HORIZONTAL
  SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_SHADOW]
  Move_ *rp,x1,ym : Draw_ *rp,x2,ym
  SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_SHINE]
  Move_ *rp,x1,ym+1 : Draw_ *rp,x2,ym+1
End If
If *tuiSeperator\orientation = #TUIORIENT_VERTICAL
  SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_SHADOW]
  Move_ *rp,xm,y1 : Draw_ *rp,xm,y2
  SetAPen_ *rp,*tuiEngine\pen[#TUIPEN_SHINE]
  Move_ *rp,xm+1,y1 : Draw_ *rp,xm+1,y2
End If

End Statement


Function.l ntui_Seperator{text.s,@orientation.l,@flags.l,@nameID.s}
If flags=#TUI_NOFLAGS Then flags=0
flags | #TUIF_FIXSIZE
*tuiSeperator.tuiSeperator = _ntui_CreateObject{#TUIOBJ_SEPERATOR,SizeOf.tuiSeperator,"",flags,nameID}
If *tuiSeperator
  If text Then str_Write{&*tuiSeperator\obj\string,text}
  If orientation=-1 Then orientation=#TUIORIENT_HORIZONTAL
  *tuiSeperator\orientation   = orientation
  *tuiSeperator\obj\bindFlags = #TUIBIND_ABLE

  !_GetFuncPointer{*tuiSeperator\obj\Draw            ,_ntui_DrawSeperator,{0,0}}
;  !_GetFuncPointer{*tuiSeperator\obj\Layout          ,_ntui_LayoutSeperator,{0,0,0}}
;  !_GetFuncPointer{*tuiSeperator\obj\DispatchEvent   ,_ntui_DispatchSeperatorEvent,{0,0}}
  !_GetFuncPointer{*tuiSeperator\obj\CalculateMinSize,_ntui_CalculateSeperatorMinSize,{0,0}}
;  !_GetFuncPointer{*tuiSeperator\obj\Deinit          ,_ntui_DeinitSeperator,{0}}
;  !_GetFuncPointer{*tuiSeperator\obj\SetAttr         ,_ntui_SetSeperatorAttr,{0,0,0}}
;  !_GetFuncPointer{*tuiSeperator\obj\GetAttr         ,_ntui_GetSeperatorAttr,{0,0,0}}

End If
Function Return *tuiSeperator
End Function



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_VSeperator {}                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * create function for tui Seperator */                                      /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_VSeperator{}
*tuiSeperator.tuiSeperator = ntui_Seperator{"",#TUIORIENT_VERTICAL}
Function Return *tuiSeperator
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_HSeperator {}                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * create function for tui Seperator */                                      /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_HSeperator{}
*tuiSeperator.tuiSeperator = ntui_Seperator{"",#TUIORIENT_HORIZONTAL}
Function Return *tuiSeperator
End Function



