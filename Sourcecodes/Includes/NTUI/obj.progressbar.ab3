; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 12
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 102
; CursorColumn    = 37
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
#TUI_HAS_PROGRESSBAR = 1

#TUIPBA_BASE      = #TUIA_USER
#TUIPBA_DONEPEN   = #TUIPBA_BASE + 0
#TUIPBA_TODOPEN   = #TUIPBA_BASE + 1
#TUIPBA_DONE      = #TUIA_VALUE
#TUIPBA_TOTAL     = #TUIPBA_BASE + 2
#TUIPBA_TEXT      = #TUIA_STRING

NEWTYPE.tuiProgressBar

  obj.tuiObject            ; tui object header
  total.l
  donePen.l
  todoPen.l

End NEWTYPE


_ntui_SetProgressBarAttr:
Function.l _ntui_SetProgressBarAttr{*progressBar.tuiProgressBar,ti_Tag.l,ti_Data.l}
  !_ASSERT{*progressBar}
  !_ASSERT{*progressBar\obj\classID=#TUICLASS_PROGRESSBAR}

  done.l = True
  Select ti_Tag
    Case #TUIPBA_TEXT      : str_WritePtr{&*progressBar\obj\string  ,ti_Data}
    Case #TUIPBA_DONE      : *progressBar\obj\value = ti_Data  : ntui_Refresh{*progressBar,Null}
    Case #TUIPBA_TOTAL     : *progressBar\total = ti_Data
    Case #TUIPBA_DONEPEN   : *progressBar\donePen = ti_Data
    Case #TUIPBA_TODOPEN   : *progressBar\todoPen = ti_Data
    Default
      done = False

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_SetProgressBarAttr,{Null,0,0}}


_ntui_GetProgressBarAttr:
Function.l _ntui_GetProgressBarAttr{*progressBar.tuiProgressBar,ti_Tag.l,*ti_Data.longP}
  !_ASSERT{*progressBar}
  !_ASSERT{*progressBar\obj\classID=#TUICLASS_PROGRESSBAR}

  done.l = True
  Select ti_Tag
    Case #TUIPBA_TOTAL      : *ti_Data\l = *progressBar\total
    Case #TUIPBA_DONEPEN    : *ti_Data\l = *progressBar\donePen
    Case #TUIPBA_TODOPEN    : *ti_Data\l = *progressBar\todoPen
    Case #TUIPBA_TEXT       : *ti_Data\l = str_GetPtr{*progressBar\obj\string}
    Case #TUIPBA_DONE       : *ti_Data\l = *progressBar\obj\value

    Default
      done = False

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_GetProgressBarAttr,{Null,0,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawProgressBar {*progressBar.tuiProgressBar,*rp.RastPort}        /
;/                                                                             /
;/ Description:                                                                /
;/ * draw the ProgressBar */                                                     /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *progressBar.tuiProgressBar    : ???                                       /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DrawProgressBar:
Statement _ntui_DrawProgressBar{*progressBar.tuiProgressBar,*rp.RastPort,*rpclip.tuiRect}
  !_ASSERT{*progressBar}
  !_ASSERT{*progressBar\obj\classID=#TUICLASS_PROGRESSBAR}
  !_ASSERT{*rp}

  *engine.tuiEngine = *progressBar\obj\engine
  *obj.tuiObject = *progressBar\obj
  !_ASSERT{*engine}

  ;/* draw the border */
  If (*progressBar\obj\borderType><#TUIBORDER_NONE)
    ntui_DrawBorder{*engine,*rp,*obj\bbox,*obj\borderType,*obj\flags}
  End If

  !tuiCopyRect{cbox.tuiRect,*obj\cbox}
  !tuiCopyRect{dbox.tuiRect,*obj\cbox}

  pixelSize.l = !tuiRectWidth{*obj\cbox}

  If *progressBar\total>0
    dbox\right = dbox\left + *progressBar\obj\value * pixelSize / *progressBar\total -1
    percent.l =*progressBar\obj\value * 100 / *progressBar\total
  Else
    percent=100
  End If
  cbox\left = dbox\right+1

  If dbox\right>=dbox\left                        ; draw the "done" area
    If *progressBar\obj\engine\fillStyle=0
      If (*progressBar\obj\flags&#TUIF_DISABLED)
        SetAPen_  *rp,*engine\pen[#TUIPEN_HALFMARKER]
      Else
        SetAPen_  *rp,*engine\pen[*progressBar\donePen]
      End If
      RectFill_ *rp,dbox\left,dbox\top,dbox\right,dbox\bottom
    Else
      _ntui_DrawGradientBox{*engine,*rp,dbox,*progressBar\donePen,*progressBar\obj\gradient}
    End If
  End If

  If cbox\left<=cbox\right                       ; draw the "todo" area
    If *progressBar\obj\engine\fillStyle=0
      If (*progressBar\obj\flags&#TUIF_DISABLED)
        SetAPen_  *rp,*engine\pen[#TUIPEN_HALFHALFSHADOW]
      Else
        SetAPen_  *rp,*engine\pen[*progressBar\todoPen]
      End If
      RectFill_ *rp,cbox\left,cbox\top,cbox\right,cbox\bottom
    Else
      _ntui_DrawGradientBox{*engine,*rp,cbox,*progressBar\todoPen,-*progressBar\obj\gradient}
    End If
  End If

  text.s = str_Read{&*progressBar\obj\string}
  text = Replace$(text,"%d",Str$(*progressBar\obj\value))
  text = Replace$(text,"%t",Str$(*progressBar\total))
  text = Replace$(text,"%p",Str$(percent))
  DEFTYPE.str *tmp
  *tmp=Null
  str_Write{&*tmp,text}
  _ntui_Print{*engine,*tmp,*obj\ibox,*obj\cbox,*obj\flags,*rp,#TUIPEN_TEXT,-1}
  str_Free{&*tmp}

End Statement
!_MakeGlobalFuncPointer{_ntui_DrawProgressBar,{Null,Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetProgressBarMinSize {*progressBar.tuiProgressBar,:: /
;/ *rp.RastPort}                                                               /
;/                                                                             /
;/ Description:                                                                /
;/ * get the minimum size of the ProgressBar */                                  /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *progressBar.tuiProgressBar    : ???                                       /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_CalculateProgressBarMinSize:
Statement _ntui_CalculateProgressBarMinSize{*progressBar.tuiProgressBar,*rp.RastPort}
  !_ASSERT{*progressBar}
  !_ASSERT{*rp}
  !_ASSERT{*progressBar\obj\classID=#TUICLASS_PROGRESSBAR}

  *engine.tuiEngine = *progressBar\obj\engine
  !_ASSERT{*engine}

  DEFTYPE.tuiRect tx
  If *progressBar\obj\string
    _ntui_GetTextRect{*engine,*progressBar\obj\string,tx,*progressBar\obj\flags,*rp}
  Else
    tx\left = 0,0,8,*engine\defSize[#TUISIZE_INLINE]
  End If
  *progressBar\obj\minsize\x  = !tuiRectWidth{tx}  + 1 + *progressBar\obj\padding\left + *progressBar\obj\padding\right ; (in case we draw recessed)
  *progressBar\obj\minsize\y  = !tuiRectHeight{tx} + 1 + *progressBar\obj\padding\top  + *progressBar\obj\padding\bottom; (in case we draw recessed)

  _ntui_GetBorderSize{*engine,*progressBar\obj\borderType,*progressBar\obj\flags,*progressBar\obj\border}
  *progressBar\obj\minsize\x + *progressBar\obj\border\left + *progressBar\obj\border\right
  *progressBar\obj\minsize\y + *progressBar\obj\border\top  + *progressBar\obj\border\bottom

End Statement
!_MakeGlobalFuncPointer{_ntui_CalculateProgressBarMinSize,{Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_ProgressBar {text.s,done.l,total.l,@help.s,@flags.l:: /
;/ ,@userID.l}                                                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * tui ProgressBar newtype */                                                  /
;/ obj.tuiObject            ; tui object header                                /
;/ * create function for tui ProgressBar */                                      /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - text.s    : ???                                                           /
;/ - done.l    : ???                                                           /
;/ - total.l    : ???                                                          /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - userID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
ntui_ProgressBar:
Function.tuiProgressBar ntui_ProgressBar{*tagList.TagItem}

  flags.l = #TUIF_CENTER|#TUIF_MIDDLE|#TUIF_FIXHEIGHT
  *progressBar.tuiProgressBar = (.tuiProgressBar)_ntui_CreateObject{#TUICLASS_PROGRESSBAR,SizeOf.tuiProgressBar,flags}
  If *progressBar

    *progressBar\obj\borderType       = #TUIBORDER_RECESSED
    *progressBar\total                = 100
    *progressBar\donePen              = #TUIPEN_MARKER
    *progressBar\todoPen              = #TUIPEN_HALFSHADOW
    *progressBar\obj\gradient         = #TUIORIENT_HORIZONTAL

    *progressBar\obj\Draw             = *_ntui_DrawProgressBar
    *progressBar\obj\Layout           = Null ;*_ntui_LayoutProgressBar
    *progressBar\obj\DispatchEvent    = Null ;*_ntui_DispatchProgressBarEvent
    *progressBar\obj\CalculateMinSize = *_ntui_CalculateProgressBarMinSize
    *progressBar\obj\Deinit           = Null ;*_ntui_DeinitProgressBar
    *progressBar\obj\SetAttr          = *_ntui_SetProgressBarAttr
    *progressBar\obj\GetAttr          = *_ntui_GetProgressBarAttr

    If *tagList Then ntui_SetAttrs{*progressBar,*tagList}

  End If

  Function Return *progressBar

End Function
!_MakeGlobalFuncPointer{ntui_ProgressBar,{Null}}


Statement ntui_InitProgressBarClass{}

  classID.l = ntui_RegisterClass{"progressbar",(.tuiFunc)*ntui_ProgressBar,Null}

  ntui_RegisterAttr{classID,"text"       , #TUIPBA_TEXT    ,#TUIAT_STRING   , 0,0 }
  ntui_RegisterAttr{classID,"total"      , #TUIPBA_TOTAL   ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"done"       , #TUIPBA_DONE    ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"donepen"    , #TUIPBA_DONEPEN ,#TUIAT_INT      , 0,0 }
  ntui_RegisterAttr{classID,"todopen"    , #TUIPBA_TODOPEN ,#TUIAT_INT      , 0,0 }

End Statement

ntui_InitProgressBarClass{}
