; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res,SDSTCP2.res,xpk.res,ttengine.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 1
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 131
; CursorColumn    = 47
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: ntui_label.include                                                    /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 06/01/2009                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
#TUI_HAS_LABEL = 1

NEWTYPE.tuiLabel
obj.tuiObject            ; tui object header
End NEWTYPE

#TUILA_BASE      = #TUIA_USER
#TUILA_TEXT      = #TUIA_STRING

_ntui_SetLabelAttr:
Function.w _ntui_SetLabelAttr{*label.tuiLabel,ti_Tag.l,ti_Data.l}
  !_ASSERT{*label}
  !_ASSERT{*label\obj\classID=#TUICLASS_LABEL}

  done.w = True
  Select ti_Tag
    Case #TUIA_XMLATTR
      *xmlA.tuiXmlAttr = ti_Data
      Select Peek.s(*xmlA\nameP)
        Case "text"              : done=ntui_SetAttr{*label,#TUILA_TEXT          ,*xmlA\stringP}
        Default
          done = False
       End Select
    Default
      done = False

  End Select
  Function Return done
End Function


_ntui_GetLabelAttr:
Function.w _ntui_GetLabelAttr{*label.tuiLabel,ti_Tag.l,*ti_Data.longP}
  !_ASSERT{*label}
  !_ASSERT{*label\obj\classID=#TUICLASS_LABEL}

  done.w = True
  Select ti_Tag
    Default
      done = False

  End Select
  Function Return done
End Function



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.w = _ntui_DispatchLabel {*label.tuiLabel,*tuiEvent.tuiEve:: /
;/ nt}                                                                         /
;/                                                                             /
;/ Description:                                                                /
;/ flags = #TUIF_MIDDLE | flags | #TUIF_FIXSIZE ; | #TUIF_WANTBACKGROUND       /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *label.tuiLabel    : ???                                               /
;/ - *tuiEvent.tuiEvent    : ???                                               /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DispatchLabelEvent:
Function.w _ntui_DispatchLabelEvent{*label.tuiLabel,*tuiEvent.tuiEvent}
  !_ASSERT{*label}
  !_ASSERT{*label\obj\classID=#TUICLASS_LABEL}

Function Return False  ; we are not interessted in any events
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawLabel {*label.tuiLabel,*rp.RastPort}                    /
;/                                                                             /
;/ Description:                                                                /
;/       ;case hotkey                                                          /
;/ * draw the label */                                                         /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *label.tuiLabel    : ???                                               /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DrawLabel:
Statement _ntui_DrawLabel{*label.tuiLabel,*rp.RastPort,*rpclip.tuiRect}
  !_ASSERT{*label}
  !_ASSERT{*label\obj\classID=#TUICLASS_LABEL}

*tuiEngine.tuiEngine = *label\obj\engine : If *tuiEngine=Null OR *rp=Null Then Statement Return

  CNIF #TUI_DEBUG
    *tui.tuiObject = *label\obj
    SetAPen_ *rp,3
    RectFill_*rp,*tui\bbox\left,*tui\bbox\top,*tui\bbox\right,*tui\bbox\bottom

    SetAPen_ *rp,7
    RectFill_*rp,*tui\cbox\left,*tui\cbox\top,*tui\cbox\right,*tui\cbox\bottom
  CEND


If (*label\obj\borderType><#TUIBORDER_NONE)
  ntui_DrawBorder{*tuiEngine,*rp,*label\obj\bbox,*label\obj\borderType,*label\obj\flags}
End If

If (*label\obj\bgImage)
  ntui_DrawTBImage{*label\obj\bgImage,*rp,&*label\obj\ibox,&*label\obj\ibox,0,*label\obj\bgTuiPen}
End If

If *label\obj\string
  ;If *label\obj\onClick
  ;  moreFlags.l = 0
  ;  If *label\obj\flags&#TUIF_MOVER Then moreFlags.l = #TUIF_UNDERLINED
  ;  If *label\obj\value
  ;    _ntui_Print{*tuiEngine,*label\obj\string,*label\obj\ibox,*label\obj\cbox,*label\obj\flags|moreFlags,*rp,*label\obj\fgTuiPen,#TUIPEN_MARKER}
  ;  Else
  ;    _ntui_Print{*tuiEngine,*label\obj\string,*label\obj\ibox,*label\obj\cbox,*label\obj\flags|moreFlags,*rp,*label\obj\fgTuiPen,*label\obj\bgTuiPen}
  ;  End If
  ;Else
    _ntui_Print{*tuiEngine,*label\obj\string,*label\obj\ibox,*label\obj\cbox,*label\obj\flags,*rp,*label\obj\fgTuiPen,*label\obj\bgTuiPen}
  ;End If
End If
End Statement



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetLabelMinSize {*label.tuiLabel,*rp.RastPort}  /
;/                                                                             /
;/ Description:                                                                /
;/ * get the minimum size of the label */                                      /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *label.tuiLabel    : ???                                               /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_CalculateLabelMinSize:
Statement _ntui_CalculateLabelMinSize{*label.tuiLabel,*rp.RastPort}
  !_ASSERT{*label}
  !_ASSERT{*label\obj\classID=#TUICLASS_LABEL}

*tuiEngine.tuiEngine = *label\obj\engine : If *tuiEngine=Null OR *rp=Null Then Statement Return
DEFTYPE.tuiRect tx

If *label\obj\string
  _ntui_GetTextRect{*tuiEngine,*label\obj\string,tx,*label\obj\flags,*rp}
Else
  tx\left=0,0,8,*tuiEngine\font[#TUIFONT_NORMAL]\tf_YSize
End If

_ntui_GetBorderSize{*tuiEngine,*label\obj\borderType,*label\obj\flags,*label\obj\border}

*label\obj\minsize\x  = !tuiRectWidth{tx}  + !tuiBorderWidth{*label\obj\padding}  + !tuiBorderWidth{*label\obj\border}
*label\obj\minsize\y  = !tuiRectHeight{tx} + !tuiBorderHeight{*label\obj\padding} + !tuiBorderHeight{*label\obj\border}

End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_Label {text.s,@flags.l,@userID.l}                   /
;/                                                                             /
;/ Description:                                                                /
;/ * tui label newtype */                                                      /
;/ obj.tuiObject            ; tui object header                                /
;/ * create function for tui label */                                          /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - text.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - userID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.tuiLabel ntui_Label{text.s,@flags.l,@nameID.s}
If flags.l=-1 Then flags=0
flags = #TUIF_MIDDLE | flags | #TUIF_FIXSIZE ; | #TUIF_WANTBACKGROUND
*label.tuiLabel = (.tuiLabel)_ntui_CreateObject{#TUICLASS_LABEL,SizeOf.tuiLabel,"",flags,nameID}
If *label
  str_Write{&*label\obj\string,text}
;  *label\obj\bindFlags = #TUIBIND_STRING
  *label\obj\fgTuiPen = #TUIPEN_TEXT
  *label\obj\bgTuiPen = #TUIPEN_TRANSPARENT ; BACKGROUND

  !_GetFuncPointer{*label\obj\Draw            ,_ntui_DrawLabel,{0,0,0}}
;  !_GetFuncPointer{*label\obj\Layout          ,_ntui_LayoutLabel,{0,0,0}}
;  !_GetFuncPointer{*label\obj\DispatchEvent   ,_ntui_DispatchLabelEvent,{0,0}}
  !_GetFuncPointer{*label\obj\CalculateMinSize,_ntui_CalculateLabelMinSize,{0,0}}
;  !_GetFuncPointer{*label\obj\Deinit          ,_ntui_DeinitLabel,{0}}
  !_GetFuncPointer{*label\obj\SetAttr         ,_ntui_SetLabelAttr,{0,0,0}}
  !_GetFuncPointer{*label\obj\GetAttr         ,_ntui_GetLabelAttr,{0,0,0}}

End If
Function Return *label
End Function


