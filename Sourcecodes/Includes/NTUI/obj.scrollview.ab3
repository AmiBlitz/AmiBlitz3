; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 4
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 256
; CursorColumn    = 21
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: ntui_ScrollView.include                                                     /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 06/01/2009                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
#TUI_HAS_SCROLLVIEW = 1

CNIF #__include=0
optimize 7
Syntax 2
CEND

#TUISVMODE_AUTO   = 0
#TUISVMODE_ALWAYS = 1
#TUISVMODE_NEVER  = 2

#TUISVA_BASE        = #TUIA_USER
#TUISVA_SCROLLMODE  = #TUISVA_BASE + 0
#TUISVA_VOFFSET     = #TUISVA_BASE + 1
#TUISVA_VVISIBLE    = #TUISVA_BASE + 2 ; visible logic units
#TUISVA_VTOTAL      = #TUISVA_BASE + 3 ; total logic units
#TUISVA_VSTEP       = #TUISVA_BASE + 4 ; units to scroll
#TUISVA_HOFFSET     = #TUISVA_BASE + 5
#TUISVA_HVISIBLE    = #TUISVA_BASE + 6 ; visible logic units
#TUISVA_HTOTAL      = #TUISVA_BASE + 7 ; total logic units
#TUISVA_HSTEP       = #TUISVA_BASE + 8 ; units to scroll

NEWTYPE.tuiScrollView
obj.tuiObject            ; tui object header
total.tuiPixel
visible.tuiPixel
offset.tuiPixel
lastOffset.tuiPixel
step_.tuiPixel
*hScroller.tuiScroller
*vScroller.tuiScroller
*content.tuiObject
scrollMode.l             ; one of #TUISVMODE_...
End NEWTYPE



Statement _ntui_ScrollOffset{*scrollView.tuiScrollView,*tui.tuiObject,dx.l,dy.l}
  !_ASSERT{*tui}

;  If (*tui\flags&#TUIF_ONSCREEN=0) Then Statement Return

  *tui\bbox\left   - dx
  *tui\bbox\top    - dy
  *tui\bbox\right  - dx
  *tui\bbox\bottom - dy

  *tui\cbox\left   - dx
  *tui\cbox\top    - dy
  *tui\cbox\right  - dx
  *tui\cbox\bottom - dy

  *tui\ibox\left   - dx
  *tui\ibox\top    - dy
  *tui\ibox\right  - dx
  *tui\ibox\bottom - dy

  *tui = *tui\child
  While (*tui><#NULL)
    ;If (*tui\flags&#TUIF_ONSCREEN) Then
    _ntui_ScrollOffset{*scrollView,*tui,dx,dy}
    If !tuiRectOverlap{*tui\bbox,*scrollView\obj\cbox}
      *tui\flags | #TUIF_ONSCREEN
    Else
      *tui\flags | #TUIF_ONSCREEN - #TUIF_ONSCREEN
    End If
    *tui = *tui\next_
  Wend

End Statement


Statement _ntui_UpdateScrollView{*scrollView.tuiScrollView,hoffset.l,hvisible.l,htotal.l,voffset.l,vvisible.l,vtotal.l,bind.w}

If hoffset+hvisible>htotal Then hoffset=htotal-hvisible
If voffset+vvisible>vtotal Then voffset=vtotal-vvisible
If hoffset<0 Then hoffset=0
If voffset<0 Then voffset=0

dx.l = hoffset-*scrollView\offset\x
dy.l = voffset-*scrollView\offset\y

hstep_.l = *scrollView\step_\x
vstep_.l = *scrollView\step_\y

If hoffset ><*scrollView\offset\x  Then *scrollView\offset\x  = hoffset  : If bind Then _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HVALUE  ,hoffset ,#NULL}
If hvisible><*scrollView\visible\x Then *scrollView\visible\x = hvisible : If bind Then _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HVISIBLE,hvisible,#NULL}
If htotal  ><*scrollView\total\x   Then *scrollView\total\x   = htotal   : If bind Then _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HTOTAL  ,htotal  ,#NULL}
If hstep_  ><*scrollView\step_\x   Then *scrollView\step_\x   = hstep_   : If bind Then _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HSTEP   ,hstep_  ,#NULL}

If voffset ><*scrollView\offset\y  Then *scrollView\offset\y  = voffset  : If bind Then _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VVALUE  ,voffset ,#NULL}
If vvisible><*scrollView\visible\y Then *scrollView\visible\y = vvisible : If bind Then _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VVISIBLE,vvisible,#NULL}
If vtotal  ><*scrollView\total\y   Then *scrollView\total\y   = vtotal   : If bind Then _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VTOTAL  ,vtotal  ,#NULL}
If vstep_  ><*scrollView\step_\y   Then *scrollView\step_\y   = vstep_   : If bind Then _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VSTEP   ,vstep_  ,#NULL}

If *scrollView\obj\flags&#TUIF_ONSCREEN
  *tuiWindow.tuiWindow = ntui_GetObjectWindow{*scrollView}
  If *tuiWindow
    If *tuiWindow\oswin
      *rp.RastPort = *tuiWindow\oswin\RPort
      *oswin.Window = *tuiWindow\oswin
    End If
  End If
End If


If dx><0
  _ntui_ScrollOffset{*scrollView,*scrollView\content,dx,0}
  adx.l = dx: If adx<0 Then adx=0-adx
  If *rp><#NULL AND adx<!tuiRectWidth{*scrollView\obj\cbox}
    ScrollWindowRaster_ *oswin,dx,0,*scrollView\obj\cbox\left,*scrollView\obj\cbox\top,*scrollView\obj\cbox\right,*scrollView\obj\cbox\bottom
    !tuiCopyRect{clip.tuiRect,*scrollView\obj\cbox}
    If dx<0 Then clip\right=clip\left-dx-1
    If dx>0 Then clip\left =clip\right-dx+1
    _ntui_Redraw{*scrollView,clip}
  Else
    ntui_Refresh{*scrollView,*scrollView\obj\cbox}
  End If
End If

If dy
  ady.l = dy: If ady<0 Then ady=0-ady
  _ntui_ScrollOffset{*scrollView,*scrollView\content,0,dy}
  If *rp><#NULL AND ady<!tuiRectHeight{*scrollView\obj\cbox}
    ScrollWindowRaster_ *oswin,0,dy,*scrollView\obj\cbox\left,*scrollView\obj\cbox\top,*scrollView\obj\cbox\right,*scrollView\obj\cbox\bottom
    !tuiCopyRect{clip.tuiRect,*scrollView\obj\cbox}
    If dy<0 Then clip\bottom=clip\top-dy-1
    If dy>0 Then clip\top   =clip\bottom-dy+1
    _ntui_Redraw{*scrollView,clip}
  Else
    ntui_Refresh{*scrollView,*scrollView\obj\cbox}
  End If
End If
End Statement


_ntui_LayoutScrollView:
Statement _ntui_LayoutScrollView{*scrollView.tuiScrollView,*rp.RastPort,*bbox.tuiRect}
  !_ASSERT{*scrollView}
  !_ASSERT{*scrollView\obj\classID=#TUICLASS_SCROLLVIEW}

  *obj.tuiObject = *scrollView
  *engine.tuiEngine = *scrollView\obj\tuiEngine
  !_ASSERT{*engine}
  !_ASSERT{*rp}

  If *bbox
    !tuiCopyRect{*scrollView\obj\bbox,*bbox}
  End If
  _ntui_GetBorderSize{*engine,*scrollView\obj\borderType,*scrollView\obj\flags,*scrollView\obj\border}
  !tuiRemBorder{*scrollView\obj\ibox,*scrollView\obj\bbox,*scrollView\obj\border}
  !tuiRemBorder{*scrollView\obj\cbox,*scrollView\obj\ibox,*scrollView\obj\padding}

  ; calculate total
  If *scrollView\content
    cbox.tuiRect\left = 0,0,*scrollView\content\minsize\x-1,*scrollView\content\minsize\y-1
    cbox.tuiRect\left   + *scrollView\obj\cbox\left   - *scrollView\offset\x
    cbox.tuiRect\top    + *scrollView\obj\cbox\top    - *scrollView\offset\y
    cbox.tuiRect\right  + *scrollView\obj\cbox\left   - *scrollView\offset\x
    cbox.tuiRect\bottom + *scrollView\obj\cbox\top    - *scrollView\offset\y
  Else
    !tuiCopyRect{cbox,*scrollView\obj\cbox}
  End If

  ; calculate visible
  *scrollView\visible\x = !tuiRectWidth{*scrollView\obj\cbox}
  *scrollView\visible\y = !tuiRectHeight{*scrollView\obj\cbox}
  *scrollView\total\x   = !tuiRectWidth{cbox}
  *scrollView\total\y   = !tuiRectHeight{cbox}

  ; layout scrollers
  If *scrollView\vScroller
    If *scrollView\visible\y<*scrollView\total\y
      xs.l = *scrollView\vScroller\obj\minsize\x
      !tuiCopyRect{sbox.tuiRect,*scrollView\obj\ibox}
      *scrollView\obj\ibox\right - xs
      *scrollView\obj\cbox\right = *scrollView\obj\ibox\right
      sbox\left  = *scrollView\obj\cbox\right +1
      _ntui_Layout{*scrollView\vScroller,*rp,sbox}
      *scrollView\visible\x = !tuiRectWidth{*scrollView\obj\cbox}
    Else
      *scrollView\vScroller\obj\flags|#TUIF_ONSCREEN - #TUIF_ONSCREEN
    End If
  End If

  If *scrollView\hScroller
    If *scrollView\visible\x<*scrollView\total\x
      ys.l = *scrollView\hScroller\obj\minsize\y
      !tuiCopyRect{sbox.tuiRect,*scrollView\obj\ibox}
      *scrollView\obj\ibox\bottom - ys
      *scrollView\obj\cbox\bottom = *scrollView\obj\ibox\bottom
      sbox\top  = *scrollView\obj\cbox\bottom +1
      _ntui_Layout{*scrollView\hScroller,*rp,sbox}
      *scrollView\visible\y = !tuiRectHeight{*scrollView\obj\cbox}
    Else
      *scrollView\hScroller\obj\flags|#TUIF_ONSCREEN - #TUIF_ONSCREEN
    End If
  End If

  If *scrollView\vScroller
    If (*scrollView\vScroller\obj\flags&#TUIF_ONSCREEN)=0
      If !tuiRectHeight{*scrollView\obj\cbox}<*scrollView\total\y
        xs.l = *scrollView\vScroller\obj\minsize\x
        !tuiCopyRect{sbox.tuiRect,*scrollView\obj\ibox}
        *scrollView\obj\cbox\right = *scrollView\obj\ibox\right - xs
        sbox\left  = *scrollView\obj\cbox\right +1
        _ntui_Layout{*scrollView\vScroller,*rp,sbox}
         *scrollView\visible\x = !tuiRectWidth{*scrollView\obj\cbox}
      Else
        *scrollView\vScroller\obj\flags|#TUIF_ONSCREEN - #TUIF_ONSCREEN
      End If
    End If
  End If

  If cbox\right <*scrollView\obj\cbox\right  Then cbox\left = *scrollView\obj\cbox\right  - !tuiRectWidth{cbox}+1 : cbox\right =*scrollView\obj\cbox\right
  If cbox\bottom<*scrollView\obj\cbox\bottom Then cbox\top  = *scrollView\obj\cbox\bottom - !tuiRectHeight{cbox}+1 :cbox\bottom=*scrollView\obj\cbox\bottom
  If cbox\top >*scrollView\obj\cbox\top  Then cbox\top  = *scrollView\obj\cbox\top
  If cbox\left>*scrollView\obj\cbox\left Then cbox\left = *scrollView\obj\cbox\left

  *scrollView\offset\x = *scrollView\obj\cbox\left - cbox\left
  *scrollView\offset\y = *scrollView\obj\cbox\top  - cbox\top

  If *scrollView\content Then _ntui_Layout{*scrollView\content,*rp,cbox}

  _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HTOTAL    ,*scrollView\total\x    ,#NULL}
  _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VTOTAL    ,*scrollView\total\y    ,#NULL}
  _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HVISIBLE  ,*scrollView\visible\x  ,#NULL}
  _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HVALUE    ,*scrollView\offset\x   ,#NULL}
  _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VVISIBLE  ,*scrollView\visible\y  ,#NULL}
  _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VVALUE    ,*scrollView\offset\y   ,#NULL}
  _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HSTEP     ,*scrollView\step_\x   ,#NULL}
  _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VSTEP     ,*scrollView\step_\y   ,#NULL}

;  If *scrollView\vScroller Then _ntui_UpdateScroller{*scrollView\vScroller,*scrollView\offset\y,*scrollView\visible\y,*scrollView\total\y,*scrollView\step_\y,False}
;  If *scrollView\hScroller Then _ntui_UpdateScroller{*scrollView\hScroller,*scrollView\offset\x,*scrollView\visible\x,*scrollView\total\x,*scrollView\step_\x,False}

End Statement



_ntui_SetScrollViewAttr:
Function.w _ntui_SetScrollViewAttr{*scrollView.tuiScrollView,ti_Tag.l,ti_Data.l}
!_ASSERT{*scrollView}
!_ASSERT{*scrollView\obj\classID=#TUICLASS_SCROLLVIEW}

done.w = True
Select ti_Tag
  Case #TUISVA_HOFFSET    : _ntui_UpdateScrollView{*scrollView,ti_Data                ,*scrollView\visible\x,*scrollView\total\x,*scrollView\offset\y,*scrollView\visible\y,*scrollView\total\y,True}
  Case #TUISVA_HVISIBLE   : _ntui_UpdateScrollView{*scrollView,*scrollView\offset\x,ti_Data                 ,*scrollView\total\x,*scrollView\offset\y,*scrollView\visible\y,*scrollView\total\y,True}
  Case #TUISVA_HTOTAL     : _ntui_UpdateScrollView{*scrollView,*scrollView\offset\x,*scrollView\visible\x,ti_Data               ,*scrollView\offset\y,*scrollView\visible\y,*scrollView\total\y,True}
  Case #TUISVA_HSTEP      : *scrollView\step_\x = ti_Data
  Case #TUISVA_VOFFSET    : _ntui_UpdateScrollView{*scrollView,*scrollView\offset\x,*scrollView\visible\x,*scrollView\total\x,ti_Data                ,*scrollView\visible\y,*scrollView\total\y,True}
  Case #TUISVA_VVISIBLE   : _ntui_UpdateScrollView{*scrollView,*scrollView\offset\x,*scrollView\visible\x,*scrollView\total\x,*scrollView\offset\y,ti_Data                 ,*scrollView\total\y,True}
  Case #TUISVA_VTOTAL     : _ntui_UpdateScrollView{*scrollView,*scrollView\offset\x,*scrollView\visible\x,*scrollView\total\x,*scrollView\offset\y,*scrollView\visible\y,ti_Data               ,True}
  Case #TUISVA_VSTEP      : *scrollView\step_\y = ti_Data
  Case #TUISVA_SCROLLMODE : *scrollView\scrollMode = ti_Data
  Default
    done=False

End Select
Function Return done
End Function


_ntui_GetScrollViewAttr:
Function.w _ntui_GetScrollViewAttr{*scrollView.tuiScrollView,ti_Tag.l,*ti_Data.longP}
!_ASSERT{*scrollView}
!_ASSERT{*scrollView\obj\classID=#TUICLASS_SCROLLVIEW}

done.w = True
Select ti_Tag
  Case #TUISVA_HOFFSET    : *ti_Data\l = *scrollView\offset\x
  Case #TUISVA_HVISIBLE   : *ti_Data\l = *scrollView\visible\x
  Case #TUISVA_HTOTAL     : *ti_Data\l = *scrollView\total\x
  Case #TUISVA_HSTEP      : *ti_Data\l = *scrollView\step_\x
  Case #TUISVA_VOFFSET    : *ti_Data\l = *scrollView\offset\y
  Case #TUISVA_VVISIBLE   : *ti_Data\l = *scrollView\visible\y
  Case #TUISVA_VTOTAL     : *ti_Data\l = *scrollView\total\y
  Case #TUISVA_VSTEP      : *ti_Data\l = *scrollView\step_\y
  Case #TUISVA_SCROLLMODE : *ti_Data\l = *scrollView\scrollMode
  Default
    done=False

End Select
Function Return done
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.w = _ntui_DispatchScrollView {*scrollView.tuiScrollView,*ev.tuiEvent}   /
;/                                                                             /
;/ Description:                                                                /
;/ * tui ScrollView newtype */                                                       /
;/ obj.tuiObject            ; tui object header                                /
;/ * do what happens if the user operates the ScrollView */                          /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scrollView.tuiScrollView    : ???                                                 /
;/ - *ev.tuiEvent    : ???                                               /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DispatchScrollViewEvent:
Function.w _ntui_DispatchScrollViewEvent{*scrollView.tuiScrollView,*ev.tuiEvent}
  !_ASSERT{*scrollView}
  !_ASSERT{*scrollView\obj\classID=#TUICLASS_SCROLLVIEW}

  *tuiEngine.tuiEngine = *scrollView\obj\tuiEngine
  !_ASSERT{*tuiEngine}

  done.w = False

  Select *ev\evID
    Case #TUIEV_HSCROLL
      nv.l = *scrollView\offset\x + *scrollView\step_\x * *ev\value
      _ntui_UpdateScrollView{*scrollView,nv,*scrollView\visible\x,*scrollView\total\x,*scrollView\offset\y,*scrollView\visible\y,*scrollView\total\y,True}
      done = True

    Case #TUIEV_VSCROLL
      nv.l = *scrollView\offset\y + *scrollView\step_\y * *ev\value
      _ntui_UpdateScrollView{*scrollView,*scrollView\offset\x,*scrollView\visible\x,*scrollView\total\x,nv,*scrollView\visible\y,*scrollView\total\y,True}
      done = True

    Case #TUIEV_BIND_HDELTA
      nv.l = *scrollView\offset\x + *scrollView\step_\x * *ev\value
      _ntui_UpdateScrollView{*scrollView,nv,*scrollView\visible\x,*scrollView\total\x,*scrollView\offset\y,*scrollView\visible\y,*scrollView\total\y,False}
      done = True

    Case #TUIEV_BIND_VDELTA
      nv.l = *scrollView\offset\y + *scrollView\step_\y * *ev\value
      _ntui_UpdateScrollView{*scrollView,*scrollView\offset\x,*scrollView\visible\x,*scrollView\total\x,nv,*scrollView\visible\y,*scrollView\total\y,False}
      done = True

    Case #TUIEV_BIND_HVALUE
      nv.l = *ev\value
      _ntui_UpdateScrollView{*scrollView,nv,*scrollView\visible\x,*scrollView\total\x,*scrollView\offset\y,*scrollView\visible\y,*scrollView\total\y,False}
      done = True

    Case #TUIEV_BIND_VVALUE
      nv.l = *ev\value
      _ntui_UpdateScrollView{*scrollView,*scrollView\offset\x,*scrollView\visible\x,*scrollView\total\x,nv,*scrollView\visible\y,*scrollView\total\y,False}
      done = True

    Case #TUIEV_PROPAGATE
      _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VTOTAL  ,*scrollView\total\y   ,#NULL}
      _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VVALUE  ,*scrollView\offset\y  ,#NULL}
      _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VVISIBLE,*scrollView\visible\y ,#NULL}
      _ntui_PropagateBind{*scrollView,#TUIEV_BIND_VSTEP   ,*scrollView\step_\y   ,#NULL}
      _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HTOTAL  ,*scrollView\total\x   ,#NULL}
      _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HVALUE  ,*scrollView\offset\x  ,#NULL}
      _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HVISIBLE,*scrollView\visible\x ,#NULL}
      _ntui_PropagateBind{*scrollView,#TUIEV_BIND_HSTEP   ,*scrollView\step_\x   ,#NULL}
      done=True

  End Select

  If (*ev\notifyID)
    *ev\tuiObject = *scrollView
    _ntui_QueueEvent{*tuiEngine\outQ,*ev}
    done=True
  EndIf

Function Return done
End Function
 
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawScrollView {*scrollView.tuiScrollView,*rp.RastPort}                       /
;/                                                                             /
;/ Description:                                                                /
;/ * draw the ScrollView in all its beauty */                                        /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scrollView.tuiScrollView    : ???                                                 /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DrawScrollView:
Statement _ntui_DrawScrollView{*scrollView.tuiScrollView,*rp.RastPort,*rpclip.tuiRect}
  !_ASSERT{*scrollView}
  !_ASSERT{*scrollView\obj\classID=#TUICLASS_SCROLLVIEW}

  *tuiEngine.tuiEngine = *scrollView\obj\tuiEngine
  !_ASSERT{*tuiEngine}
  !_ASSERT{*rp}

  !tuiAndRect{bclip.tuiRect,*scrollView\obj\bbox,*rpclip}
  If !tuiValidRect{bclip}=False Then Statement Return

  If (*scrollView\obj\borderType><#TUIBORDER_NONE)
    ntui_DrawBorder{*tuiEngine,*rp,*scrollView\obj\bbox,*scrollView\obj\borderType,*scrollView\obj\flags}
  End If

  If *scrollView\content
    !tuiAndRect{cclip.tuiRect,*rpclip,*scrollView\obj\cbox}
    If !tuiValidRect{cclip}
      ntui_SetClip{*rp,cclip}
      _ntui_Draw{*scrollView\content,*rp,cclip}
      ntui_RemClip{*rp}
    End If

    If *scrollView\hScroller
      If (*scrollView\hScroller\obj\flags&#TUIF_ONSCREEN) Then _ntui_Draw{*scrollView\hScroller,*rp,*rpclip}
    End If
    If *scrollView\vScroller
      If (*scrollView\vScroller\obj\flags&#TUIF_ONSCREEN) Then _ntui_Draw{*scrollView\vScroller,*rp,*rpclip}
    End If

  Else
    *tui.tuiObject = *scrollView
    SetAPen_ *rp,1
    RectFill_ *rp,*tui\cbox\left,*tui\cbox\top,*tui\cbox\right,*tui\cbox\bottom
  End If
  *scrollView\lastOffset\x = *scrollView\offset\x,*scrollView\offset\y

End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetScrollViewMinSize {*scrollView.tuiScrollView,*rp.RastPort}     /
;/                                                                             /
;/ Description:                                                                /
;/ * calculate the minimum size for the button */                              /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scrollView.tuiScrollView    : ???                                                 /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_CalculateScrollViewMinSize:
Function.l _ntui_CalculateScrollViewMinSize{*scrollView.tuiScrollView,*rp.RastPort}
*tuiEngine.tuiEngine = *scrollView\obj\tuiEngine : If *tuiEngine=#NULL OR *rp=#NULL Then Function Return *scrollView\obj\minsize

*scrollView\obj\minsize\x  = !tuiBorderWidth{*scrollView\obj\padding}
*scrollView\obj\minsize\y  = !tuiBorderHeight{*scrollView\obj\padding}

_ntui_GetBorderSize{*tuiEngine,*scrollView\obj\borderType,*scrollView\obj\flags,*scrollView\obj\border}
*scrollView\obj\minsize\x + !tuiBorderWidth{*scrollView\obj\border}
*scrollView\obj\minsize\y + !tuiBorderHeight{*scrollView\obj\border}

If *scrollView\obj\borderType><#TUIBORDER_NONE
  ntui_SetAttr{*scrollView\hScroller,#TUIA_BORDERTYPE,#TUIBORDER_NONE}
  ntui_SetAttr{*scrollView\vScroller,#TUIA_BORDERTYPE,#TUIBORDER_NONE}
End If


*child.tuiObject = *scrollView\obj\child
While *child
  _ntui_CalculateMinSize{*child,*rp}
  *child=*child\next_
Wend

If *scrollView\hScroller Then *scrollView\obj\minsize\y + *scrollView\hScroller\obj\minsize\y
If *scrollView\vScroller Then *scrollView\obj\minsize\x + *scrollView\hScroller\obj\minsize\x

Function Return *scrollView\obj\minsize
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_FreeScrollView {*scrollView.tuiScrollView}                                   /
;/                                                                             /
;/ Description:                                                                /
;/ * free everything special that we allocated for the button */               /
;/ If *scrollView\img Then ntui_FreeImage{*scrollView\img}  : *scrollView\img = !_NULL  /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *scrollView.tuiScrollView    : ???                                                 /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DeinitScrollView:
Statement _ntui_DeinitScrollView{*scrollView.tuiScrollView}
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_ScrollView {width.l,height.l,@notify.l,@help.s,@flags.l:: /
;/ ,@userID.l}                                                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * create function for tui ScrollView */                                           /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - width.l    : ???                                                          /
;/ - height.l    : ???                                                         /
;/ - notify.l    : ???                                                         /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - userID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l ntui_BeginScrollView{width.l,height.l,@help.s,@flags.l,@nameID.s}
If (flags=#TUI_NOFLAGS) Then flags=0
flags | #TUIF_CENTER|#TUIF_MIDDLE|#TUIF_WANTTAB
*scrollView.tuiScrollView = _ntui_CreateObject{#TUICLASS_SCROLLVIEW,SizeOf.tuiScrollView,help,flags,nameID}
If *scrollView
  *scrollView\step_\x        = *scrollView\obj\tuiEngine\defStep\x,*scrollView\obj\tuiEngine\defStep\y
  *scrollView\obj\borderType = #TUIBORDER_RECESSED
  *scrollView\obj\minsize\x  = width,height
  *scrollView\scrollMode     = #TUISVMODE_AUTO

  _ntui_BeginChildren{*scrollView}

  *scrollView\vScroller = ntui_VScroller{*scrollView\offset\y,*scrollView\total\y,*scrollView\visible\y}
  If *scrollView\vScroller
    ntui_AddArrows{#NULL}
    ;*scrollView\vScroller\obj\borderType=#TUIBORDER_NONE
    ntui_Bind{*scrollView,*scrollView\vScroller}
  End If

  *scrollView\hScroller = ntui_HScroller{*scrollView\offset\x,*scrollView\total\x,*scrollView\visible\x}
  If *scrollView\hScroller
    ntui_AddArrows{#NULL}
    ;*scrollView\hScroller\obj\borderType=#TUIBORDER_NONE
    ntui_Bind{*scrollView,*scrollView\hScroller}
  End If

  *scrollView\lastOffset\x = -1,-1

  !_GetFuncPointer{*scrollView\obj\Draw            ,_ntui_DrawScrollView,{0,0,0}}
  !_GetFuncPointer{*scrollView\obj\Layout          ,_ntui_LayoutScrollView,{0,0,0}}
  !_GetFuncPointer{*scrollView\obj\DispatchEvent   ,_ntui_DispatchScrollViewEvent,{0,0}}
  !_GetFuncPointer{*scrollView\obj\CalculateMinSize,_ntui_CalculateScrollViewMinSize,{0,0}}
  !_GetFuncPointer{*scrollView\obj\Deinit          ,_ntui_DeinitScrollView,{0}}
  !_GetFuncPointer{*scrollView\obj\SetAttr         ,_ntui_SetScrollViewAttr,{0,0,0}}
  !_GetFuncPointer{*scrollView\obj\GetAttr         ,_ntui_GetScrollViewAttr,{0,0,0}}

End If
Function Return *scrollView
End Function


Function.l ntui_EndScrollView{}
*tuiContent.tuiObject = tuiGlobal\buildHelper\tuiCurrent
*scrollView.tuiScrollView = _ntui_EndChildren{#TUICLASS_SCROLLVIEW}
If *scrollView
  If *scrollView\obj\classID=#TUICLASS_SCROLLVIEW
    *scrollView\content = *tuiContent
  End If
End If
Function Return *scrollView
End Function




