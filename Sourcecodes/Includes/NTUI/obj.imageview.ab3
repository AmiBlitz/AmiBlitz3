; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 8192
; MakeSmallest    = 1
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 60
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
#TUI_HAS_IMAGEVIEW = 1

#TUIIVA_BASE   = #TUIA_USER
#TUIIVA_IMAGE  = #TUIIVA_BASE + 0
#TUIIVA_WIDTH  = #TUIIVA_BASE + 1
#TUIIVA_HEIGHT = #TUIIVA_BASE + 2
#TUIIVA_SIZE   = #TUIIVA_BASE + 4

NEWTYPE.tuiImageView

  obj.tuiObject
  *tbi.tuiTBImage
  tuiWidth.l
  tuiHeight.l

End NEWTYPE


_ntui_SetImageViewAttr:
Function.l _ntui_SetImageViewAttr{*image.tuiImageView,ti_Tag.l,ti_Data.l}
  !_ASSERT{*image}
  !_ASSERT{*image\obj\classID=#TUICLASS_IMAGEVIEW}

  done.l = True
  Select ti_Tag
    Case #TUIIVA_IMAGE
      If *image\tbi Then ntui_FreeTBImage{*image\tbi} : *image\tbi = Null
      If ti_Data Then *image\tbi = ntui_CreateTBImage{*image\obj\engine,Peek.s(ti_Data),*image\tuiWidth,*image\tuiHeight}
      If *image\obj\flags&#TUIF_ONSCREEN Then ntui_Refresh{*image,Null}
    Case #TUIIVA_WIDTH  : *image\tuiWidth  = ti_Data
    Case #TUIIVA_HEIGHT : *image\tuiHeight = ti_Data
    Case #TUIIVA_SIZE   : *image\tuiWidth  = ti_Data : *image\tuiHeight  = ti_Data

    Default
      done=False

  End Select
  
      If *image\tbi
        *image\tbi\tuiWidth  = *image\tuiWidth
        *image\tbi\tuiHeight = *image\tuiHeight
      End If


  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_SetImageViewAttr,{Null,0,0}}


_ntui_GetImageViewAttr:
Function.l _ntui_GetImageViewAttr{*image.tuiImageView,ti_Tag.l,*ti_Data.longP}
  !_ASSERT{*image}
  !_ASSERT{*image\obj\classID=#TUICLASS_IMAGEVIEW}

  done.l = True
  Select ti_Tag
    Case #TUIIVA_IMAGE      : *ti_Data\l = *image\tbi
    Case #TUIIVA_WIDTH     : *ti_Data\l = *image\tuiWidth
    Case #TUIIVA_HEIGHT    : *ti_Data\l = *image\tuiHeight
    Default
      done=False

  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_GetImageViewAttr,{Null,0,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_HandleImageView {*image.tuiImageView,*ev.tuiEve:: /
;/ nt}                                                                         /
;/                                                                             /
;/ Description:                                                                /
;/ * do what happens if the user operates the Image */                         /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *image.tuiImage    : ???                                               /
;/ - *ev.tuiEvent    : ???                                               /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DispatchImageViewEvent:
Function.l _ntui_DispatchImageViewEvent{*image.tuiImageView,*ev.tuiEvent}
  !_ASSERT{*image}
  !_ASSERT{*image\obj\classID=#TUICLASS_IMAGEVIEW}

  done.l = True
  Select *ev\id
    Case #TUIEV_TICK
      done = False
    Default
      done = False
  End Select

  Function Return done

End Function
!_MakeGlobalFuncPointer{_ntui_DispatchImageViewEvent,{Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: ntui_DrawImageView {*image.tuiImageView,*rp.RastPort}                    /
;/                                                                             /
;/ Description:                                                                /
;/ ntui_Refresh{*image}                                                     /
;/ * draw the Image in all its beauty */                                       /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *image.tuiImage    : ???                                               /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DrawImageView:
Statement _ntui_DrawImageView{*image.tuiImageView,*rp.RastPort,*rpclip.tuiRect}
 !_ASSERT{*image}
 !_ASSERT{*rp}
 !_ASSERT{*image\obj\classID=#TUICLASS_IMAGEVIEW}

 *engine.tuiEngine = *image\obj\engine
 *obj.tuiObject = *image\obj
 !_ASSERT{*engine}

 ;/* draw the border */
 If (*image\obj\borderType><#TUIBORDER_NONE)
   ntui_DrawBorder{*engine,*rp,*obj\bbox,*obj\borderType,*obj\flags}
 End If

  If (*image\tbi)
    bgTuiPen.l = *image\obj\bgTuiPen;#TUIPEN_BACKGROUND;_ntui_GetBGTuiPen{*image}
  ;  ntui_DrawTBImage{*image\img,*rp,x1,y1,x2,y2,*image\obj\flags&(#TUIF_LEFT|#TUIF_RIGHT|#TUIF_CENTER|#TUIF_TOP|#TUIF_BOTTOM|#TUIF_MIDDLE),bgTuiPen}
    ntui_DrawTBImage{*image\tbi,*rp,*image\obj\ibox,*image\obj\cbox,*image\obj\flags,bgTuiPen}
  End If

End Statement
!_MakeGlobalFuncPointer{_ntui_DrawImageView,{Null,Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = _ntui_GetImageViewMinSize {*image.tuiImageView,*rp.RastPort}  /
;/                                                                             /
;/ Description:                                                                /
;/ * calculate the minimum size for the Image */                               /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *image.tuiImageView    : ???                                               /
;/ - *rp.RastPort    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_CalculateImageViewMinSize:
Statement _ntui_CalculateImageViewMinSize{*image.tuiImageView,*rp.RastPort}
  !_ASSERT{*image}
  !_ASSERT{*rp}
  !_ASSERT{*image\obj\classID=#TUICLASS_IMAGEVIEW}

  *engine.tuiEngine = *image\obj\engine
  !_ASSERT{*engine}

  *image\obj\minsize\x = *image\obj\padding\left + *image\obj\padding\right
  *image\obj\minsize\y = *image\obj\padding\top  + *image\obj\padding\bottom

  If *image\tbi
    *image\obj\minsize\x + ntui_GetTBImageWidth {*image\tbi}
    *image\obj\minsize\y + ntui_GetTBImageHeight{*image\tbi}
  End If

  _ntui_GetBorderSize{*engine,*image\obj\borderType,*image\obj\flags,*image\obj\border}
  *image\obj\minsize\x + *image\obj\border\left + *image\obj\border\right
  *image\obj\minsize\y + *image\obj\border\top  + *image\obj\border\bottom

End Statement
!_MakeGlobalFuncPointer{_ntui_CalculateImageViewMinSize,{Null,Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: _ntui_FreeImageView {*image.tuiImageView}                                /
;/                                                                             /
;/ Description:                                                                /
;/ * free everything special that we allocated for the Image */                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - *image.tuiImage    : ???                                               /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
_ntui_DeinitImageView:
Statement _ntui_DeinitImageView{*image.tuiImageView}
  !_ASSERT{*image}
  !_ASSERT{*image\obj\classID=#TUICLASS_IMAGEVIEW}

  If *image\tbi Then ntui_FreeTBImage{*image\tbi}  : *image\tbi = Null

End Statement
!_MakeGlobalFuncPointer{_ntui_DeinitImageView,{Null}}


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: result.l = ntui_ImageView {imagefile.s,@help.s,@flags.l,userID.l}       /
;/                                                                             /
;/ Description:                                                                /
;/ * create an image tui Image */                                              /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - imagefile.s    : ???                                                      /
;/ - help.s    : ???                                                           /
;/ - flags.l    : ???                                                          /
;/ - userID.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
ntui_ImageView:
Function.tuiImageView ntui_ImageView{*tagList.TagItem}

  flags.l = #TUIF_CENTER|#TUIF_MIDDLE|#TUIF_FIXSIZE
  *image.tuiImageView = (.tuiImageView)_ntui_CreateObject{#TUICLASS_IMAGEVIEW,SizeOf.tuiImageView,flags}

  If *image

    *image\obj\borderType       = #TUIBORDER_NONE
    *image\tbi                  = Null
    *image\tuiWidth             = #TUISIZE_NATIVE
    *image\tuiHeight            = #TUISIZE_NATIVE

    *image\obj\Draw             = *_ntui_DrawImageView
    *image\obj\Layout           = Null ;*_ntui_LayoutImageView
    *image\obj\DispatchEvent    = *_ntui_DispatchImageViewEvent
    *image\obj\CalculateMinSize = *_ntui_CalculateImageViewMinSize
    *image\obj\Deinit           = *_ntui_DeinitImageView
    *image\obj\SetAttr          = *_ntui_SetImageViewAttr
    *image\obj\GetAttr          = *_ntui_GetImageViewAttr

    ;!tuiInitNotifyHandler{*image\onClick}

    If *tagList Then ntui_SetAttrs{*image,*tagList}

  End If

  Function Return *image

End Function
!_MakeGlobalFuncPointer{ntui_ImageView,{Null}}


Statement ntui_InitImageViewClass{}

  classID.l = ntui_RegisterClass{"imageview",(.tuiFunc)*ntui_ImageView,Null}

  ntui_RegisterAttr{classID,"width"     , #TUIIVA_WIDTH     ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"height"    , #TUIIVA_HEIGHT    ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"size"      , #TUIIVA_SIZE      ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"isize"     , #TUIIVA_SIZE      ,#TUIAT_INT    , 0,0 }
  ntui_RegisterAttr{classID,"image"     , #TUIIVA_IMAGE     ,#TUIAT_STRING , 0,0 }

End Statement

ntui_InitImageViewClass{}
