; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "/Bin"
; ExeFile         = "imageBltDemo"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 1
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 1
; LabelSearch     = "fix"
; LabelRemark     = 1
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 30
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max ChunkyBuffer= 2
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: image_blitmacros                                                      /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 08/01/2008                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !decompose_dest                                                     /
;/                                                                             /
;/ Description:                                                                /
;/ Help macros for 32bit functions                                             /
;/                                                                             /
;/ decompose the destination pixel into R G B                                  /
;/     ; decompose dest                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro decompose_dest
    ; decompose dest
    MOVE.l (a1),d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6
    MOVE.l d6,_dR
    LSR.l #8,d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6
    MOVE.l d6,_dG
    LSR.l #8,d0
    AND.l #%11111111,d0 : MULU.l d7,d0
    MOVE.l d0,_dB

End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !decompose_dest_add                                                 /
;/                                                                             /
;/ Description:                                                                /
;/     ; decompose dest                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro decompose_dest_add
    ; decompose dest
    MOVE.l (a1),d0
    MOVE.l d0,d6
    AND.l #%11111111,d6
    MOVE.l d6,_dR
    LSR.l #8,d0
    MOVE.l d0,d6
    AND.l #%11111111,d6
    MOVE.l d6,_dG
    LSR.l #8,d0
    AND.l #%11111111,d0
    MOVE.l d0,_dB
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !decompose_source                                                   /
;/                                                                             /
;/ Description:                                                                /
;/ decompose the source pixel into R G B                                       /
;/     ; decompose source                                                      /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro decompose_source
    ; decompose source
    MOVE.l (a0),d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6
    MOVE.l d6,_sR
    LSR.l #8,d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6
    MOVE.l d6,_sG
    LSR.l #8,d0
    AND.l #%11111111,d0 : MULU.l d7,d0
    MOVE.l d0,_sB

End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !decompose_source_mul                                               /
;/                                                                             /
;/ Description:                                                                /
;/     ; decompose source                                                      /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro decompose_source_mul
    ; decompose source
    MOVE.l (a0),d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6 : LSR.l #8,d6 : ADD.l muloff,d6
    MOVE.l d6,_sR
    LSR.l #8,d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6 : LSR.l #8,d6 : ADD.l muloff,d6
    MOVE.l d6,_sG
    LSR.l #8,d0
    AND.l #%11111111,d0 : MULU.l d7,d0 : LSR.l #8,d0 : ADD.l muloff,d0
    MOVE.l d0,_sB

End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !decompose_source_add                                               /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro decompose_source_add
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6  : LSR.l #8,d6
    MOVE.l d6,_sR
    LSR.l #8,d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6  : LSR.l #8,d6
    MOVE.l d6,_sG
    LSR.l #8,d0
    AND.l #%11111111,d0 : MULU.l d7,d0  : LSR.l #8,d0
    MOVE.l d0,_sB
End Macro

;decompose the source pixel including alpha channel into R G B A
; * obsolete *
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !_obsolete_decompose_source_alpha                                   /
;/                                                                             /
;/ Description:                                                                /
;/ decompose the source pixel including alpha channel into R G B A             /
;/ * obsolete                                                                  /
;/     ; decompose source                                                      /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro _obsolete_decompose_source_alpha
    ; decompose source
    MOVE.l (a0),d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6
    MOVE.l d6,_sR
    LSR.l #8,d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6
    MOVE.l d6,_sG
    LSR.l #8,d0
    AND.l #%11111111,d0 : MULU.l d7,d0
    MOVE.l d0,_sB
    LSR.l #8,d0
    AND.l #%11111111,d0 : MULU.l d7,d0
    MOVE.l d0,_sA
End Macro

; * obsolete *
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !compose_trans                                                      /
;/                                                                             /
;/ Description:                                                                /
;/ * obsolete                                                                  /
;/     ; compose result                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro compose_trans
    ; compose result
    CLR.l d6
    MOVE.l _sR,d0
    ADD.l _dR,d0
    LSR.l #8,d0
    OR.l  d0,d6

    MOVE.l _sG,d0
    ADD.l _dG,d0      : LSR.l #8,d0

    LSL.l   #8,d0
    OR.l  d0,d6

    MOVE.l _sB,d0
    ADD.l _dB,d0      : LSR.l #8,d0

    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6

End Macro



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !compose_add                                                        /
;/                                                                             /
;/ Description:                                                                /
;/     ; compose result                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro compose_add
    ; compose result
    CLR.l d6
    MOVE.l _sR,d0
    ADD.l _dR,d0
    CMP.l #255,d0
    BLT '_skip_red
    MOVE.l #255,d0
    '_skip_red:
    OR.l  d0,d6

    MOVE.l _sG,d0
    ADD.l _dG,d0
    CMP.l #255,d0
    BLT '_skip_green
    MOVE.l #255,d0
    '_skip_green:

    LSL.l   #8,d0
    OR.l  d0,d6

    MOVE.l _sB,d0
    ADD.l _dB,d0
    CMP.l #255,d0
    BLT '_skip_blue
    MOVE.l #255,d0
    '_skip_blue:

    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !compose_mul                                                        /
;/                                                                             /
;/ Description:                                                                /
;/     ; compose result                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro compose_mul
    ; compose result
    CLR.l d6
    MOVE.l _sR,d0
    MOVE.l _dR,d6
    MULU.l d6,d0  : LSR.l #8,d0
    CLR.l d6
    CMP.l #255,d0
    BLT '_skip_red
    MOVE.l #255,d0
    '_skip_red:
    OR.l  d0,d6
    MOVE.l d6,pixelm

    MOVE.l _sG,d0
    MOVE.l _dG,d6
    MULU.l d6,d0  : LSR.l #8,d0
    CMP.l #255,d0
    BLT '_skip_green
    MOVE.l #255,d0
    '_skip_green:
    MOVE.l pixelm,d6
    LSL.l   #8,d0
    OR.l  d0,d6
    MOVE.l d6,pixelm

    MOVE.l _sB,d0
    MOVE.l _dB,d6
    MULU.l d6,d0  : LSR.l #8,d0
    CMP.l #255,d0
    BLT '_skip_blue
    MOVE.l #255,d0
    '_skip_blue:
    MOVE.l pixelm,d6
    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !compose_sub                                                        /
;/                                                                             /
;/ Description:                                                                /
;/     ; compose result                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro compose_sub
    ; compose result
    CLR.l d6
    MOVE.l _dR,d0
    SUB.l _sR,d0
    CMP.l #0,d0
    BGE '_skip_red
    MOVE.l #0,d0
    '_skip_red:
    OR.l  d0,d6

    MOVE.l _dG,d0
    SUB.l _sG,d0
    CMP.l #0,d0
    BGE '_skip_green
    MOVE.l #0,d0
    '_skip_green:

    LSL.l   #8,d0
    OR.l  d0,d6

    MOVE.l _dB,d0
    SUB.l _sB,d0
    CMP.l #0,d0
    BGE '_skip_blue
    MOVE.l #0,d0
    '_skip_blue:

    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6

End Macro



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_trans_32                                                     /
;/                                                                             /
;/ Description:                                                                /
;/ image_blitmode_trans, only 32 bit  (mask+no mask)                           /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_trans_32
MOVE.l d7,-(a7)
MOVE.l bd,d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
    NEG.l d7: ADD.l #255,d7
    !decompose_dest
    NEG.l d7: ADD.l #255,d7
    !decompose_source
    !compose_trans
    MOVE.l d6,(a1)     ;copy the data to graphiccard
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel
  MOVE.l (a7)+,d7

End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_trans_mask_32                                                /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_trans_mask_32
MOVE.l d7,-(a7)
MOVE.l bd,d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    NEG.l d7: ADD.l #255,d7
    !decompose_dest
    NEG.l d7: ADD.l #255,d7
    !decompose_source
    !compose_trans
    MOVE.l d6,(a1)     ;copy the data to graphiccard
'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel
  MOVE.l (a7)+,d7

End Macro



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_add_32                                                       /
;/                                                                             /
;/ Description:                                                                /
;/ image_blitmode_add, only 32 bit  (mask+no mask)                             /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_add_32
MOVE.l d7,-(a7)
MOVE.l bd,d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
    MOVE.l (a0),d0
    BEQ '_skippixel
    !decompose_source_add
    !decompose_dest_add
    !compose_add
    MOVE.l d6,(a1)     ;copy the data to graphiccard
'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

MOVE.l (a7)+,d7
End Macro



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_add_mask_32                                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_add_mask_32
MOVE.l d7,-(a7)
MOVE.l bd,d7

'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    MOVE.l (a0),d0
    !decompose_source_add
    !decompose_dest_add
    !compose_add
    MOVE.l d6,(a1)     ;copy the data to graphiccard
'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

MOVE.l (a7)+,d7
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_mul_32                                                       /
;/                                                                             /
;/ Description:                                                                /
;/ image_blitmode_mul, only 32 bit  (mask+no mask)                             /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_mul_32
MOVE.l d7,-(a7)
MOVE.l bd,d7
NEG.l d7 : ADD.l #256,d7
MOVE.l d7,muloff
SUB.l #256,d7
NEG.l d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
;    MOVE.l (a0),d0
    ;BEQ '_skippixel
    !decompose_source_mul
    !decompose_dest_add
    !compose_mul
    MOVE.l d6,(a1)     ;copy the data to graphiccard
'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

MOVE.l (a7)+,d7
BRA '_skipdat
'_skipdat
muloff:
Dc.l 0
pixelm:
Dc.l 0
End Macro



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_mul_mask_32                                                  /
;/                                                                             /
;/ Description:                                                                /
;/    MOVE.l (a0),d0                                                           /
;/     ;BEQ '_skippixel                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_mul_mask_32
MOVE.l d7,-(a7)
MOVE.l bd,d7
NEG.l d7 : ADD.l #256,d7
MOVE.l d7,muloff
SUB.l #256,d7
NEG.l d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    ;MOVE.l (a0),d0
    !decompose_source_mul
    !decompose_dest_add
    !compose_mul
    MOVE.l d6,(a1)     ;copy the data to graphiccard
'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

MOVE.l (a7)+,d7
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_sub_mask_32                                                  /
;/                                                                             /
;/ Description:                                                                /
;/     ;MOVE.l (a0),d0                                                         /
;/                                                                             /
;/ image_blitmode_sub, only 32 bit  (mask+no mask)                             /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_sub_mask_32
MOVE.l d7,-(a7)
MOVE.l bd,d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    MOVE.l (a0),d0

  !decompose_source_add
  !decompose_dest_add
  !compose_sub
  MOVE.l d6,(a1)     ;copy the data to graphiccard
'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

MOVE.l (a7)+,d7
End Macro



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_sub_32                                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_sub_32
MOVE.l d7,-(a7)
MOVE.l bd,d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
    MOVE.l (a0),d0
    BEQ '_skippixel
    !decompose_source_add
    !decompose_dest_add
    !compose_sub
    MOVE.l d6,(a1)     ;copy the data to graphiccard
'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

MOVE.l (a7)+,d7
End Macro

Macro image_suba_32
MOVE.l d7,-(a7)
MOVE.l bd,d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
    MOVE.b (a0),d0
    BEQ '_skippixel
    MOVE.l (a1),d6
    AND.l #%11111110111111101111111011111110,d6
    LSR.l #1,d6
    MOVE.l d6,(a1)     ;copy the data to graphiccard
'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

MOVE.l (a7)+,d7
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_external_alpha_own_32                                        /
;/                                                                             /
;/ Description:                                                                /
;/ image_blitmode_alpha, only 32 bit, no mask, mask makes no sense             /
;/ Alpha comes from a different source                                         /
;/ ! obsolete !                                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_external_alpha_own_32
MOVE.l d7,-(a7)
MOVE.l bd,d3
CLR.l d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADDQ.l #1,a3
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
    ; decompose source
    CLR.l d7
    MOVE.b (a3),d7
    BEQ '_skippixel

    CLR.l d6
    MOVE.b (a0),d6     ; fetch alpha
    BEQ '_skippixel

    MULU.l d6,d7 : LSR.l #8,d7
    MULU.l d3,d7 : LSR.l #8,d7

    CMP.l #255,d7
    BLT '_trans_pix

'_full_pix
  MOVE.l (a0),(a1)+     ;copy the data to graphiccard
  DBF d1,'_nextpixel

BRA '_exit

'_trans_pix
    !decompose_source
    NEG.l d7: ADD.l #255,d7
;    SUB.l 100,d7
;    BGT 'noclip
;    MOVE.l #0,d7
;    'noclip:
    !decompose_dest

    ; compose result
    CLR.l d6
    MOVE.l _sR,d0
    ADD.l _dR,d0
    LSR.l #8,d0
    OR.l  d0,d6

    MOVE.l _sG,d0
    ADD.l _dG,d0      : LSR.l #8,d0

    LSL.l   #8,d0
    OR.l  d0,d6

    MOVE.l _sB,d0
    ADD.l _dB,d0      : LSR.l #8,d0

    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6

    ;LSL.l  #8,d6
    MOVE.l d6,(a1)     ;copy the data to graphiccard

'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

'_exit
MOVE.l (a7)+,d7
End Macro

 


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_invexternal_alpha_own_32                                     /
;/                                                                             /
;/ Description:                                                                /
;/ image_blitmode_alpha, only 32 bit, no mask, mask makes no sense             /
;/ Alpha comes from a different source                                         /
;/ ! obsolete !                                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_invexternal_alpha_own_32
MOVE.l d7,-(a7)
MOVE.l bd,d3
CLR.l d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADDQ.l #1,a3
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
    ; decompose source
    CLR.l d7
    MOVE.b (a3),d7
    NOT.b d7
 ;   AND.l #255,d7
    BEQ '_skippixel

    CLR.l d6
    MOVE.b (a0),d6     ; fetch alpha
    BEQ '_skippixel

    MULU.l d6,d7 : LSR.l #8,d7
    MULU.l d3,d7 : LSR.l #8,d7

    CMP.l #255,d7
    BLT '_trans_pix

'_full_pix
  MOVE.l (a0),(a1)+     ;copy the data to graphiccard
  DBF d1,'_nextpixel

BRA '_exit

'_trans_pix
    !decompose_source
    NEG.l d7: ADD.l #255,d7
    !decompose_dest

    ; compose result
    CLR.l d6
    MOVE.l _sR,d0
    ADD.l _dR,d0
    LSR.l #8,d0
    OR.l  d0,d6

    MOVE.l _sG,d0
    ADD.l _dG,d0      : LSR.l #8,d0

    LSL.l   #8,d0
    OR.l  d0,d6

    MOVE.l _sB,d0
    ADD.l _dB,d0      : LSR.l #8,d0

    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6

    ;LSL.l  #8,d6
    MOVE.l d6,(a1)     ;copy the data to graphiccard

'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

'_exit
MOVE.l (a7)+,d7
End Macro
 
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_invexternal_alpha_32                                         /
;/                                                                             /
;/ Description:                                                                /
;/ image_blitmode_alpha, only 32 bit, no mask, mask makes no sense             /
;/ Alpha comes from a different source                                         /
;/ ! obsolete !                                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_invexternal_alpha_32
MOVE.l d7,-(a7)
MOVE.l bd,d3
CLR.l d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADDQ.l #1,a3
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
    ; decompose source
    CLR.l d7
    MOVE.b (a3),d7
    NOT.b d7
    BEQ '_skippixel

    MULU.l d3,d7 : LSR.l #8,d7

    CMP.l #255,d7
    BLT '_trans_pix

'_full_pix
  MOVE.l (a0),(a1)+     ;copy the data to graphiccard
  DBF d1,'_nextpixel

BRA '_exit

'_trans_pix
    MOVE.l d7,-(A7)

;    MOVE.l d7,d6           ; darkening 2
;    CMP.l #128,d6
;    BLE 'noflip
;    NEG.l d6: ADD.l #256,d6
;    'noflip
;    LSR.l #1,d6
;
;    SUB.l d6,d7
;    BGE 'noclip
;    MOVE.l #0,d7
;    'noclip

    !decompose_source
    MOVE.l (a7)+,d7

    NEG.l d7: ADD.l #256,d7

;    MOVE.l d7,d6
;    CMP.l #128,d6
;    BLE 'noflip2
;    NEG.l d6: ADD.l #256,d6
;    'noflip2
;    LSR.l #8,d6 ; amount of darkening
;
;
;    SUB.l d6,d7
;    BGE 'noclip2
;    MOVE.l #0,d7
;    'noclip2

    !decompose_dest

    ; compose result
    CLR.l d6
    MOVE.l _sR,d0
    ADD.l _dR,d0
    LSR.l #8,d0
    OR.l  d0,d6

    MOVE.l _sG,d0
    ADD.l _dG,d0      : LSR.l #8,d0

    LSL.l   #8,d0
    OR.l  d0,d6

    MOVE.l _sB,d0
    ADD.l _dB,d0      : LSR.l #8,d0

    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6

    ;LSL.l  #8,d6
    MOVE.l d6,(a1)     ;copy the data to graphiccard

'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

'_exit
MOVE.l (a7)+,d7
End Macro
 


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_external_alpha_32                                            /
;/                                                                             /
;/ Description:                                                                /
;/ image_blitmode_alpha, only 32 bit, no mask, mask makes no sense             /
;/ Alpha comes from a different source                                         /
;/ ! obsolete !                                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_external_alpha_32
MOVE.l d7,-(a7)
MOVE.l bd,d3
CLR.l d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADDQ.l #1,a3
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
    ; decompose source
    CLR.l d7
    MOVE.b (a3),d7
    BEQ '_skippixel

    MULU.l d3,d7 : LSR.l #8,d7

    CMP.l #255,d7
    BLT '_trans_pix

'_full_pix
  MOVE.l (a0),(a1)+     ;copy the data to graphiccard
  DBF d1,'_nextpixel

BRA '_exit

'_trans_pix

    MOVE.l d7,-(A7)

;    MOVE.l d7,d6
;    CMP.l #128,d6
;    BLE 'noflip
;    NEG.l d6: ADD.l #256,d6
;    'noflip
;    LSR.l #2,d6
;
;    SUB.l d6,d7
;    BGE 'noclip
;    MOVE.l #0,d7
;    'noclip

    !decompose_source
    MOVE.l (a7)+,d7

    NEG.l d7: ADD.l #256,d7

;    MOVE.l d7,d6
;    CMP.l #128,d6
;    BLE 'noflip2
;    NEG.l d6: ADD.l #256,d6
;    'noflip2
;    LSR.l #8,d6   ; amount of darkeing
;
;
;    SUB.l d6,d7
;    BGE 'noclip2
;    MOVE.l #0,d7
;    'noclip2

;    !decompose_source
;    NEG.l d7: ADD.l #255,d7
    !decompose_dest

    ; compose result
    CLR.l d6
    MOVE.l _sR,d0
    ADD.l _dR,d0
    LSR.l #8,d0
    OR.l  d0,d6

    MOVE.l _sG,d0
    ADD.l _dG,d0      : LSR.l #8,d0

    LSL.l   #8,d0
    OR.l  d0,d6

    MOVE.l _sB,d0
    ADD.l _dB,d0      : LSR.l #8,d0

    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6

    ;LSL.l  #8,d6
    MOVE.l d6,(a1)     ;copy the data to graphiccard

'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

'_exit
MOVE.l (a7)+,d7
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_invalpha_own_32                                              /
;/                                                                             /
;/ Description:                                                                /
;/     ; decompose source                                                      /
;/     ; compose result                                                        /
;/     ;LSL.l  #8,d6                                                           /
;/                                                                             /
;/ image_blitmode_invalpha, only 32 bit, only no mask, mask makes no sense     /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_invalpha_own_32
MOVE.l d7,-(a7)
MOVE.l bd,d3
CLR.l d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
;  ADDQ.l #1,a3         ; alpha++ ?
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
    ; decompose source
    CLR.l d7
    MOVE.b (a0),d7     ; fetch alpha
    NOT.b d7
    BEQ '_skippixel

    MULU.l d3,d7 : LSR.l #8,d7

    CMP.l #255,d7
    BLT '_trans_pix

'_full_pix
  MOVE.l (a0),(a1)+     ;copy the data to graphiccard
  DBF d1,'_nextpixel

BRA '_exit

'_trans_pix
    !decompose_source
    NEG.l d7: ADD.l #255,d7
    !decompose_dest

    ; compose result
    CLR.l d6
    MOVE.l _sR,d0
    ADD.l _dR,d0
    LSR.l #8,d0
    OR.l  d0,d6

    MOVE.l _sG,d0
    ADD.l _dG,d0      : LSR.l #8,d0

    LSL.l   #8,d0
    OR.l  d0,d6

    MOVE.l _sB,d0
    ADD.l _dB,d0      : LSR.l #8,d0

    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6

    ;LSL.l  #8,d6
    MOVE.l d6,(a1)+     ;copy the data to graphiccard
    DBF d1,'_nextpixel
BRA '_exit

'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

'_exit
MOVE.l (a7)+,d7
End Macro
 


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_alpha_own_32                                                 /
;/                                                                             /
;/ Description:                                                                /
;/     ; decompose source                                                      /
;/     ; compose result                                                        /
;/     ;LSL.l  #8,d6                                                           /
;/                                                                             /
;/ image_blitmode_alpha, only 32 bit, only no mask, mask makes no sense        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_alpha_own_32
MOVE.l d7,-(a7)
MOVE.l bd,d3
CLR.l d7
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
;  ADDQ.l #1,a3         ; alpha++ ?
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
    ; decompose source
    CLR.l d7
    MOVE.b (a0),d7     ; fetch alpha
    BEQ '_skippixel

    MULU.l d3,d7 : LSR.l #8,d7

    CMP.l #255,d7
    BLT '_trans_pix

'_full_pix
  MOVE.l (a0),(a1)+     ;copy the data to graphiccard
  DBF d1,'_nextpixel

BRA '_exit

'_trans_pix
    !decompose_source
    NEG.l d7: ADD.l #255,d7
    !decompose_dest

    ; compose result
    CLR.l d6
    MOVE.l _sR,d0
    ADD.l _dR,d0
    LSR.l #8,d0
    OR.l  d0,d6

    MOVE.l _sG,d0
    ADD.l _dG,d0      : LSR.l #8,d0

    LSL.l   #8,d0
    OR.l  d0,d6

    MOVE.l _sB,d0
    ADD.l _dB,d0      : LSR.l #8,d0

    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6
    OR.l #$FF000000,d6
    ;LSL.l  #8,d6
    MOVE.l d6,(a1)+     ;copy the data to graphiccard
    DBF d1,'_nextpixel
BRA '_exit

'_skippixel
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

'_exit
MOVE.l (a7)+,d7
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_alpha_own_32_fix                                             /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_alphaadd_own_32_fix
MOVE.l d7,-(a7)
CLR.l d7
'_nextpixel
'_tstpixel
    ; decompose source
    MOVE.b (a0),d7     ; fetch alpha
    BEQ '_skippixel
    CMP.l #200,d7
    BLT '_trans_pix

'_full_pix
  MOVE.l (a0)+,(a1)+     ;copy the data to graphiccard
  DBF d1,'_nextpixel

BRA '_exit

'_trans_pix
    ; d0, d3,d4,d5,d6,d7
    ; decompose source
    MOVE.l (a0)+,d5
    MOVE.l d5,d3
    AND.l #%11111111,d3 : MULU.l d7,d3
    LSR.l #8,d5
    MOVE.l d5,d4
    AND.l #%11111111,d4 : MULU.l d7,d4
    LSR.l #8,d5
    AND.l #%11111111,d5 : MULU.l d7,d5

    NEG.l d7: ADD.l #255,d7

    ; decompose dest
    MOVE.l (a1),d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6
    ADD.l d6,d3
    LSR.l #8,d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6
    ADD.l d6,d4
    LSR.l #8,d0
    AND.l #%11111111,d0 : MULU.l d7,d0
    ADD.l d0,d5

;    CLR.l d6
    MOVE.b (a1),d6 : LSL.l #8,d6

    LSR.l #8,d3
    OR.l  d3,d6
    LSL.l #8,d6

    LSR.l #8,d4
    OR.l d4,d6
    LSL.l #8,d6

    LSR.l #8,d5
    OR.l d4,d6

    MOVE.l d6,(a1)+     ;copy the data to graphiccard
    DBF d1,'_nextpixel
BRA '_exit

'_skippixel
  ADDQ.l #4,a1         ; dest ++
  ADDQ.l #4,a0
  DBF d1,'_nextpixel

'_exit
MOVE.l (a7)+,d7
End Macro
 


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_alpha_own_32_fix                                             /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_alpha_own_32_fix
MOVE.l d7,-(a7)
CLR.l d7
'_nextpixel
'_tstpixel
    ; decompose source
    MOVE.b (a0),d7     ; fetch alpha
    BEQ '_skippixel
    CMP.l #255,d7
    BLT '_trans_pix

'_full_pix
  MOVE.l (a0)+,(a1)+     ;copy the data to graphiccard
  DBF d1,'_nextpixel

BRA '_exit

'_trans_pix
    ; d0, d3,d4,d5,d6,d7
    ; decompose source
    MOVE.l (a0)+,d5
    MOVE.l d5,d3
    AND.l #%11111111,d3 : MULU.l d7,d3  ; B
    LSR.l #8,d5
    MOVE.l d5,d4
    AND.l #%11111111,d4 : MULU.l d7,d4  ; G
    LSR.l #8,d5
    AND.l #%11111111,d5 : MULU.l d7,d5  ; R

    NEG.l d7: ADD.l #255,d7

    ; decompose dest
    MOVE.l (a1),d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6 : ADD.l d6,d3
    LSR.l #8,d0
    MOVE.l d0,d6
    AND.l #%11111111,d6 : MULU.l d7,d6 : ADD.l d6,d4
    LSR.l #8,d0
    AND.l #%11111111,d0 : MULU.l d7,d0 : ADD.l d0,d5

    ; compose
    CLR.l d6

    LSR.l #8,d5
    OR.l  d5,d6
    LSL.l #8,d6

    LSR.l #8,d4
    OR.l d4,d6
    LSL.l #8,d6

    LSR.l #8,d3
    OR.l d3,d6   ; was d4
    OR.l #$FF000000,d6

    MOVE.l d6,(a1)+     ;copy the data to graphiccard
    DBF d1,'_nextpixel
BRA '_exit
 


'_trans_pixx
    !decompose_source
    NEG.l d7: ADD.l #255,d7
    !decompose_dest

    ; compose result
    CLR.l d6
    MOVE.l _sR,d0
    ADD.l _dR,d0
    LSR.l #8,d0
    OR.l  d0,d6

    MOVE.l _sG,d0
    ADD.l _dG,d0      : LSR.l #8,d0

    LSL.l   #8,d0
    OR.l  d0,d6

    MOVE.l _sB,d0
    ADD.l _dB,d0      : LSR.l #8,d0

    LSL.l  #8,d0   : LSL.l  #8,d0
    OR.l  d0,d6

    MOVE.l d6,(a1)+     ;copy the data to graphiccard
    ADDQ.l #4,a0
    DBF d1,'_nextpixel
BRA '_exit

'_skippixel
  ADDQ.l #4,a1         ; dest ++
  ADDQ.l #4,a0
  DBF d1,'_nextpixel

'_exit
MOVE.l (a7)+,d7
End Macro
 


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_opaque_32                                                    /
;/                                                                             /
;/ Description:                                                                /
;/  ADDQ.l #1,a3         ; alpha++ ?                                           /
;/     ; decompose source                                                      /
;/     ; compose result                                                        /
;/     ;LSL.l  #8,d6                                                           /
;/                                                                             /
;/ image_blitmode_opaque, only 32 bit  (mask+no mask)                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_opaque_32
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale
  MOVE.l (a0),(a1)
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_opaque_mask_32                                               /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_opaque_mask_32
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    MOVE.l (a0),(a1)
'_skippixel
  ADDQ.l #4,a1         ; dest ++

  DBF d1,'_nextpixel

End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_mask_opaque_8                                        /
;/                                                                             /
;/ Description:                                                                /
;/ Opaque, masked                                                              /
;/ used by image_cpu_blit                                                      /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_mask_opaque_8
'_nextpixel
'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    MOVE.b (a0),(a1)     ;copy the data to graphiccard
'_skippixel
    ADDQ.l #1,a0         ; add source
    ADDQ.l #1,a1         ; add dest

  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  DBF d1,'_nextpixel

BRA cpublit_opaque_mask_nextrow
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_mask_opaque_16                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_mask_opaque_16
'_nextpixel
'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    MOVE.w (a0),(a1)     ;copy the data to graphiccard
'_skippixel
    ADDQ.l #2,a0         ; add source
    ADDQ.l #2,a1         ; add dest

  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  DBF d1,'_nextpixel

BRA cpublit_opaque_mask_nextrow
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_mask_opaque_24                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_mask_opaque_24
'_nextpixel
'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    MOVE.b  (a0), (a1)     ;copy the data to graphiccard
    MOVE.b 1(a0),1(a1)
    MOVE.b 2(a0),2(a1)
'_skippixel
    ADDQ.l #3,a0         ; add source
    ADDQ.l #3,a1         ; add dest

  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  DBF d1,'_nextpixel

BRA cpublit_opaque_mask_nextrow
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_mask_opaque_32                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_mask_opaque_32
'_nextpixel
'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    MOVE.l (a0),(a1)     ;copy the data to graphiccard
'_skippixel
    ADDQ.l #4,a0         ; add source
    ADDQ.l #4,a1         ; add dest

  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  DBF d1,'_nextpixel

BRA cpublit_opaque_mask_nextrow
End Macro
 
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_mask_scale_opaque_8                                  /
;/                                                                             /
;/ Description:                                                                /
;/  Opaque, scaled, masked                                                     /
;/  use by image_cpublit_scaled                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_mask_scale_opaque_8
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #1,a0         ; source ++
  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    MOVE.b (a0),(a1)
'_skippixel
  ADDQ.l #1,a1         ; dest ++

  DBF d1,'_nextpixel

BRA cpublit_opaque_mask_scale_nextrow
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_mask_scale_opaque_16                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_mask_scale_opaque_16
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #2,a0         ; source ++
  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    MOVE.w (a0),(a1)
'_skippixel
  ADDQ.l #2,a1         ; dest ++

  DBF d1,'_nextpixel

BRA cpublit_opaque_mask_scale_nextrow
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_mask_scale_opaque_24                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_mask_scale_opaque_24
BRA cpublit_opaque_mask_scale_nextrow
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_mask_scale_opaque_32                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_mask_scale_opaque_32
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  SUBQ.l #1,d3         ; dec mask
  BGE '_skipmask
  MOVE.w (a2)+,d2      ; neue maske
  MOVEQ #15,d3
'_skipmask
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale

'_tstpixel
  BTST.l d3,d2
  BEQ '_skippixel
    MOVE.l (a0),(a1)
'_skippixel
  ADDQ.l #4,a1         ; dest ++

  DBF d1,'_nextpixel

BRA cpublit_opaque_mask_scale_nextrow
End Macro



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_scale_opaque_8                                       /
;/                                                                             /
;/ Description:                                                                /
;/  Opaque, scaled                                                             /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_scale_opaque_8
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #1,a0         ; source ++
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale
  MOVE.b (a0),(a1)
  ADDQ.l #1,a1         ; dest ++
  DBF d1,'_nextpixel

BRA cpublit_opaque_scale_nextrow
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_scale_opaque_16                                      /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_scale_opaque_16
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #2,a0         ; source ++
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale
  MOVE.w (a0),(a1)
  ADDQ.l #2,a1         ; dest ++
  DBF d1,'_nextpixel

BRA cpublit_opaque_scale_nextrow
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_scale_opaque_24                                      /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_scale_opaque_24
BRA cpublit_opaque_scale_nextrow
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_blitrow_scale_opaque_32                                      /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_blitrow_scale_opaque_32
'_nextpixel
'_scale
  TST.l d5
  BGT '_noscale
  ADDQ.l #4,a0         ; source ++
  ADD.l ##image_scaleres,d5  ; konto + scaleres
  BLE '_scale
'_noscale
  SUB.l d4,d5          ; konto - xscale
  MOVE.l (a0),(a1)
  ADDQ.l #4,a1         ; dest ++
  DBF d1,'_nextpixel

BRA cpublit_opaque_scale_nextrow
End Macro
 

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_cpublit_mask_scale_opaque                                    /
;/                                                                             /
;/ Description:                                                                /
;/ Top Layer Macro for mask scale                                              /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_cpublit_mask_scale_opaque
      For i.l=y1 To y2
        sourceaddr.l = sourcebaseaddr + sourcebpr * Int(yoff/#image_scaleres)  + xoff*pixelsize
        ;alphaaddr.l = alphabaseaddr + alphabpr * Int(yoff/#image_scaleres)  + xoff
        maskaddr.l   = maskbaseaddr   + maskbpr   * Int(yoff/#image_scaleres)  + Int(xoff/16)*2
        GetRegD0 blitwidth :MOVE.l d0,d1
        GetRegD0 sourceaddr:MOVE.l d0,a0
        GetRegD0 destaddr  :MOVE.l d0,a1
        GetRegD0 maskaddr  :MOVE.l d0,a2
        ;GetRegD0 alphaaddr :MOVE.l d0,a3
        GetRegD0 maskoff   :MOVE.l d0,d3
        GetRegD0 xscale    :MOVE.l d0,d4
        GetRegD0 konto     :MOVE.l d0,d5
        GetRegD0 pixelsize
        MOVE.w (a2)+,d2  ; mask
        CMP.l #1,d0
        BEQ cpublit_opaque_mask_8
        CMP.l #2,d0
        BEQ cpublit_opaque_mask_16
        CMP.l #3,d0
        BEQ cpublit_opaque_mask_24
        CMP.l #4,d0
        BEQ cpublit_opaque_mask_32
        BRA cpublit_opaque_mask_scale_nextrow
        cpublit_opaque_mask_8 : !image_blitrow_mask_scale_opaque_8
        cpublit_opaque_mask_16: !image_blitrow_mask_scale_opaque_16
        cpublit_opaque_mask_24: !image_blitrow_mask_scale_opaque_24
        cpublit_opaque_mask_32: !image_blitrow_mask_scale_opaque_32
        cpublit_opaque_mask_scale_nextrow:
        yoff + yscale
        destaddr + destbpr
      Next
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !image_cpublit_scale_opaque                                         /
;/                                                                             /
;/ Description:                                                                /
;/         ;alphaaddr.l = alphabaseaddr + alphabpr * Int(yoff/#image_scalere:: /
;/ s)  + xoff                                                                  /
;/         ;GetRegD0 alphaaddr :MOVE.l d0,a3                                      /
;/                                                                             /
;/ Top Layer Macro for scale                                                   /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro image_cpublit_scale_opaque
      For i.l=y1 To y2
        sourceaddr.l = sourcebaseaddr + sourcebpr * Int(yoff/#image_scaleres)  + xoff*pixelsize
        ;alphaaddr.l = alphabaseaddr + alphabpr * Int(yoff/#image_scaleres)  + xoff
        ;maskaddr.l   = maskbaseaddr   + maskbpr   * Int(yoff/#image_scaleres)  + Int(xoff/16)*2
        GetRegD0 blitwidth :MOVE.l d0,d1
        GetRegD0 sourceaddr:MOVE.l d0,a0
        GetRegD0 destaddr  :MOVE.l d0,a1
        ;GetRegD0 alphaaddr :MOVE.l d0,a3
        ;GetRegD0 maskoff   :MOVE.l d0,d3
        GetRegD0 xscale    :MOVE.l d0,d4
        GetRegD0 konto     :MOVE.l d0,d5
        GetRegD0 pixelsize
        ;MOVE.w (a2)+,d2  ; mask
        CMP.l #1,d0
        BEQ cpublit_opaque_8
        CMP.l #2,d0
        BEQ cpublit_opaque_16
        CMP.l #3,d0
        BEQ cpublit_opaque_24
        CMP.l #4,d0
        BEQ cpublit_opaque_32
        BRA cpublit_opaque_scale_nextrow

        cpublit_opaque_8 : !image_blitrow_scale_opaque_8
        cpublit_opaque_16: !image_blitrow_scale_opaque_16
        cpublit_opaque_24: !image_blitrow_scale_opaque_24
        cpublit_opaque_32: !image_blitrow_scale_opaque_32
        cpublit_opaque_scale_nextrow:
        yoff + yscale
        destaddr + destbpr
      Next
End Macro


