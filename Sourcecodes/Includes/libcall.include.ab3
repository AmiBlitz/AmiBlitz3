; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 3
; CursorColumn    = 18
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 100
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max ChunkyBuffer= 2
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: libcall.include                                                       /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 19/01/2007                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////

NEWTYPE.registers
a.l[8]
d.l[8]
End NEWTYPE

DEFTYPE.registers registers

.libcall
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = libcall {libbase.l,offset.l}                            /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - libbase.l    : ???                                                        /
;/ - offset.l    : ???                                                         /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l libcall {libbase.l,offset.l}
SHARED registers
If libbase><False AND offset>0
  registers\a[6] = libbase
  registers\a[5] = libbase - offset
  GetReg a0,&registers\a[0]
  MOVEM.l a0-a6/d1-d7,-(a7)  ; save all registers except d0
  MOVE.l 60(a0),d7           ; fill the registers ...
  MOVE.l 56(a0),d6
  MOVE.l 52(a0),d5
  MOVE.l 48(a0),d4
  MOVE.l 44(a0),d3
  MOVE.l 40(a0),d2
  MOVE.l 36(a0),d1
  MOVE.l 32(a0),d0
; MOVE.l 28(a0),a7           ; uh, not a good idea !
  MOVE.l 24(a0),a6
  MOVE.l 20(a0),a5
  MOVE.l 16(a0),a4
  MOVE.l 12(a0),a3
  MOVE.l  8(a0),a2
  MOVE.l  4(a0),a1
  MOVE.l   (a0),a0           ; ... and finally a0
  JSR (a5)                   ; and jump to the library function !
  MOVEM.l (a7)+,a0-a6/d1-d7  ; restore all registers except d0
  MOVE.l d0,32(a0)           ; save the result
Else
  error {"Libcall with libbase=0 or invalid offset !"}
End If
Function Return registers\d[0]
End Function

.libcall_datreg
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: libcall_dat_low {d0.l,d1.l,d2.l,d3.l}                               /
;/                                                                             /
;/ Description:                                                                /
;/ MOVE.l 28(a0),a7           ; uh, not a good idea !                          /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - d0.l    : ???                                                             /
;/ - d1.l    : ???                                                             /
;/ - d2.l    : ???                                                             /
;/ - d3.l    : ???                                                             /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement FAST libcall_dat_low {d0.l,d1.l,d2.l,d3.l}
SHARED registers
registers\d[0] = d0
registers\d[1] = d1
registers\d[2] = d2
registers\d[3] = d3
End Statement

.libcall_datreg2
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: libcall_dat_hi {d4.l,d5.l,d6.l,d7.l}                                /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - d4.l    : ???                                                             /
;/ - d5.l    : ???                                                             /
;/ - d6.l    : ???                                                             /
;/ - d7.l    : ???                                                             /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement FAST libcall_dat_hi {d4.l,d5.l,d6.l,d7.l}
SHARED registers
registers\d[4] = d4
registers\d[5] = d5
registers\d[6] = d6
registers\d[7] = d7
End Statement

.libcall_addreg
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: libcall_adr {a0.l,a1.l,a2.l,a3.l,a4.l}                              /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - a0.l    : ???                                                             /
;/ - a1.l    : ???                                                             /
;/ - a2.l    : ???                                                             /
;/ - a3.l    : ???                                                             /
;/ - a4.l    : ???                                                             /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement FAST libcall_adr {a0.l,a1.l,a2.l,a3.l,a4.l}
SHARED registers
registers\a[0] = a0
registers\a[1] = a1
registers\a[2] = a2
registers\a[3] = a3
registers\a[4] = a4
End Statement

