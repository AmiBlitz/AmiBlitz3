; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram Disk:"
; ExeFile         = ""
; CreateIcon      = 0
; Residents       = "all.res,sdstcp.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 1
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 0
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 15
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 200
; Max ChunkyBuffer= 2
; /XTRA
NEWTYPE.statuscode
  code.l
  description.s
End NEWTYPE
Dim List http_statuscodes.statuscode(0)
SHARED http_statuscodes()

Restore statuscodes
Repeat
  Read sc.l
  If sc>0
    Read sstr$
    If AddLast(http_statuscodes())
      http_statuscodes()\code = sc
      http_statuscodes()\description = sstr$
    EndIf
  EndIf
Until sc = -1

statuscodes:
Data.l 100
Data$ "Continue"
Data.l 101
Data$ "Switching Protocols (siehe auch HTTP-Parameter Upgrade)"
Data.l 200
Data$ "OK (Eine korrekte Antwort konnte zurückgesendet werden)"
Data.l 201
Data$ "Created (File wurde erzeugt oder abgelegt und der Verzeichnispfad übermittelt"
Data.l 202
Data$ "Accepted (Anfrage wurde angenommen und wird noch bearbeitet)"
Data.l 203
Data$ "Non-Authoritative Information"
Data.l 204
Data$ "No Content (Anfrage war ok, jedoch kein Inhalt zum zurücksenden)"
Data.l 205
Data$ "Reset Content"
Data.l 206
Data$ "Partial Content (Anfrage war ok, jedoch kann nur ein Teil zurückgesendet werden)"
Data.l 300
Data$ "Multiple Content, beispielsweise liegt der Content in mehreren Sprachen vor."
Data.l 301
Data$ "Document moves permanently (das angefragte Dokument wurde dauerhaft verschoben, siehe URL im Location-Header)"
Data.l 302
Data$ "Veraltet und bedeutete früher: Document moved temporarily (das angefragte Dokument wurde temporär verschoben, siehe URL im Location-Header). Inzwischen wird hierfür der Statuscode 307 verwendet"
Data.l 303
Data$ "See other"
Data.l 304
Data$ "Not modified since last retrieval. Das Dokument kann auch aus einem vorgeschlagenen Proxy-Server geholt werden oder aus dem lokalen Cache. (Siehe auch HTTP-Parameter If-Modified-Since)"
Data.l 305
Data$ "Use proxy: Der Client soll die angeforderte Daten nicht vom Server, sondern von einem angegebenen Proxy beziehen. Dies ist bei Hochlast-Serverfarmen möglich."
Data.l 307
Data$ "Document moved temporarily (das angefragte Dokument wurde temporär verschoben, siehe URL im Location-Header)."
Data.l 400
Data$ "Bad Request (Anfrage war nicht verständlich, Browserproblem)"
Data.l 401
Data$ "Unauthorized. Daten wurden angefragt, für den sich der User ausweisen muss (siehe auch HTTP-Parameter WWW-Authenticate)"
Data.l 402
Data$ "Payment Required"
Data.l 403
Data$ "Access forbidden (Anfrage war verständlich, der Server weigert sich jedoch das Dokument zu senden, da dieser oder der Client keine Berechtigung haben. Beispiel: keine Leserechte der Datei)"
Data.l 404
Data$ "Document not found"
Data.l 405
Data$ "Method not allowed (die Abfragemethode z. B. POST ist explizit gesperrt)"
Data.l 406
Data$ "Not Acceptable (siehe auch HTTP-Parameter Accept-Charset, Accept-Encoding etc.)"
Data.l 407
Data$ "Proxy Authentication Required"
Data.l 408
Data$ "Request timeout (Server überlastet? Fehlkonfiguriert?)"
Data.l 409
Data$ "Confict"
Data.l 410
Data$ "Gone"
Data.l 411
Data$ "Length required"
Data.l 412
Data$ "Precondition Failed (siehe auch HTTP-Parameter If-Match, If-None-Match, If-Unmodified-Since)"
Data.l 413
Data$ "Request Entity too large"
Data.l 414
Data$ "Request URI too large (siehe auch HTTP-Methode GET)"
Data.l 415
Data$ "Unsupported media type (siehe auch HTTP-Parameter Content-Encoding)"
Data.l 416
Data$ "Requested range not satisfiable (siehe auch HTTP-Parameter Content-Range)"
Data.l 417
Data$ "Expectation Failed (siehe auch HTTP-Parameter Expect)"
Data.l 424
Data$ "Site too ugly. "
Data.l 500
Data$ "Internal server error (interner Fehler, CGI-Programm ist entweder fehlerhaft geschrieben oder Server falsch konfiguriert oder Zugriffsrechte nicht als ausführbare Rechte gesetzt)"
Data.l 501
Data$ "Not Implemented (Anfrage wird vom Server nicht unterstützt, da notwendige Module nicht implementiert)"
Data.l 502
Data$ "Bad Gateway (Proxy- oder Gateway-Server erhielt eine ungültige Antwort von einem anderen Server, z. B. dem eigentlichen Webserver des Dokuments)"
Data.l 503
Data$ "Service Unavailable (z. B. wenn ein hinterliegender Datenbankserver nicht reagiert)"
Data.l 504
Data$ "Gateway time out"
Data.l 505
Data$ "HTTP Version not supported"
Data.l -1



