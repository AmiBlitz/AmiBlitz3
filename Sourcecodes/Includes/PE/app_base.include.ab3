; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Jessica:Programme/proBanking"
; ExeFile         = ""
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 20000
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 13
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 0
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 4
; CursorColumn    = 1
; LabelSearch     = "max_image"
; LabelRemark     = 0
; LabelAll        = 1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 20
; Max GadgetList  = 100
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 16
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 500
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; /XTRA
CNIF #__include =0
  OPTIMIZE 4
CEND
#max_images = 100
XINCLUDE "PE/ReqTools.include.ab3"
XINCLUDE "wizard_table.include.ab3"
;XINCLUDE "PE/myHTTP.include.ab3"
XINCLUDE "semaphore.include.ab3"
XINCLUDE "image.include.ab3"


NEWTYPE.application
  name.s
  version.s
  progdir.s
  systemdir.s
  datadir.s
  tempdir.s
  prefsfile.s
  aiss_path.s

  language.s
  systemlanguage.s
  heute.l
  registered.b

  internal_cat.l
End NEWTYPE

NEWTYPE.language
  name.s
End NEWTYPE

Dim List my_languages.language(0)
SHARED my.application

Function.b APP_Start{}
  If sema_Create{my\name}
    my\language = "deutsch"

    Function Return True
  Else
    Function Return False
  EndIf

End Function

Function.b APP_Close{}
  sema_Remove{}

  CloseWindow 49
  If my\internal_cat<>0 Then CloseCatalog_ my\internal_cat
End Function


Statement APP_Startup_Open{@picname$}
SHARED app_image_num.l
  If Peek.l(Addr Window(WZID("WIN_STARTUP"))) = 0
    app_image_num = image_GetFree{}
    If image_Load{app_image_num,picname$}                    ; This scans the datatype file
      winh.l = image_GetHeight{app_image_num} + 2 + WZYFontsize+4
      winw.l = image_GetWidth{app_image_num} + 4
      WZWindow WZID("WIN_STARTUP"),?wzgui,8,(ScreenWidth-winw)/2,(ScreenHeight-winh)/2,winw,winh,WZID("WIN_STARTUP")
      image_BlitMask{app_image_num,2,1} ;DataTypeWidth,DataTypeHeight)
      WZ_SetFont{"WIN_STARTUP"}
      *win.Window = WZWindowAddr
      *g.Gadget  = WZGadAddr("STARTUP_TEXT")
      DrPort RastPort(Used Window)
      WindowFont 0,2
      WJam 0 : WColour 2,0
      v$ = "Version " + my\version
      WLocate *g\Width-DrTextLen(v$)-2,*g\TopEdge-16 : Print v$
      WJam 1
    EndIf
  EndIf
End Statement

Statement APP_Startup_Print{t$}
  If Peek.l(Addr Window(WZID("WIN_STARTUP")))>0
    WZPrint "STARTUP_TEXT",&t$
  EndIf
End Statement

Statement APP_Startup_Close{}
SHARED app_image_num
  If Peek.l(Addr Window(WZID("WIN_STARTUP")))>0
    WZCloseWindow WZID("WIN_STARTUP")
    image_Free{app_image_num}
  EndIf
End Statement



Statement APP_About{@gfx_name$}
  If gfx_name$<>""
    APP_Startup_Open{gfx_name$}
  Else
    APP_Startup_Open{my\systemdir + my\name + ".logo"}
  EndIf
  APP_Startup_Print{"Danke, dass Sie " + my\name + " benutzen !"}

  *scr.Screen = Peek.l(Addr Screen(0))
  *win.Window = Peek.l(Addr Window(WZID("WIN_STARTUP")))
  If *win > 0
    *g.Gadget = WZGadAddr("STARTUP_TEXT")
    VWait 50
    *mask.l = AllocMem(4,0)
    If (*mask > 0)
      Poke.b *mask  ,%01010101: Poke.b *mask+1,%01010101
      Poke.b *mask+2,!UBYTE{%10101010}: Poke.b *mask+3,!UBYTE{%10101010}
      *win\RPort\AreaPtrn = *mask
      *win\RPort\AreaPtSz = 1
      SetAPen_ *win\RPort,1
      RectFill_ *win\RPort,*win\BorderLeft+1,*win\BorderTop+1,*win\Width-*win\BorderRight-2,*win\Height-*win\BorderTop-*g\Height-2
    EndIf

    *cm.ColorMap = *scr\ViewPort\ColorMap
    cr.l=  255 LSL 24
    cg.l=  255 LSL 24
    cb.l=  255 LSL 24
    cl.l = ObtainBestPenA_(*cm,cr,cg,cb,Tags(#OBP_Precision,#PRECISION_GUI))
    WJam 0
    WColour cl,0 : WLocate 4,0
    NPrint "  "
    NPrint "  "+my\name + " " + my\version
    NPrint "  (c) 2008 by programmed-excellence"
    NPrint ""
    CNIF @#INC_KEYFILE<>0
    If my\registered
      NPrint "  Registriert f�r:      " + keyfile\nutzer
      NPrint "  Registrierungscode: " + Str$(keyfile\lz1) + "-" + keyfile\lz2+ "-" + Str$(keyfile\lz3)
    Else
      NPrint "  ** Unregistrierte DEMO-Version **"
    EndIf
    CEND
    NPrint ""
    NPrint "  Diese Software ist urheberrechtlich gesch�tzt."
    NPrint "  Sie ist geistiges Eigentum des Autors."
    NPrint""
    NPrint "  http://www.programmed-excellence.de"
    NPrint "  eMail: sven.droege@programmed-excellence.de"
    WJam 1
    ReleasePen_ *cm,cl

    Use Window WZID("WIN_STARTUP")
    about_exit.b = False
    Repeat
      about_ev.l = WaitEvent
      If about_ev = #IDCMP_MOUSEBUTTONS Then about_exit = True
    Until about_exit = True

    APP_Startup_Close{}
    If *mask > 0 Then FreeMem *mask,4
    VWait 5
    FlushEvents
  EndIf
End Statement

 
Function.b APP_MakeBackground{scrn.w,filename.s}
    inum.w = image_GetFree{}
    *scr.Screen = Peek.l(Addr Screen(scrn))
    If image_Load{inum,filename,1}
      sh.w = *scr\Height - *scr\BarHeight - 1
      sw.w = *scr\Width
      Window 49,0,*scr\BarHeight+1,sw,sh,#WFLG_BACKDROP|#WFLG_BORDERLESS,"",0,1
      Use Window 49
      pw.w = image_GetWidth{inum}
      ph.w = image_GetHeight{inum}
      px.w = sw-pw-8 ;(sw - pw) / 2
      py.w = sh-ph-8  ;(sh - ph) / 2
      ;image_Blit{inum,px,py} ;,pw,ph}
      image_FancyBlit{inum,px,py,-1,-1,RastPort(49),#image_blitmode_alpha}
      ;image_BlitMask{inum,px,py,RastPort(49)};,#image_blitmode_alpha}
      image_Free{inum}
    EndIf
End Function


Function.l APP_CheckVersion{}
  CNIF @#USE_HTTP<>0
  versionfile$="http://www.programmed-excellence.de/download/" + my\name + "/version.txt"

  datei$ = my\tempdir + "version"
  DeleteFile_ datei$
  WZ_ShowMessage{"Pr�fe Onlineversion..."}
  success.l = HTTP_Get{versionfile$,datei$}

  If success = 200
    If OpenFile(#WORK,datei$)
      Format ""
      lf_ = Lof(#WORK)
      FileInput #WORK
      Repeat
        a$ = Edit$(300)
      Until Loc(#WORK) = lf_
      DefaultInput
      CloseFile #WORK
      DeleteFile_(datei$)

      vs$ = LCase$(Right$(a$,12))
      If (vs$<>my\version) AND (FindStrg(">",vs$)=0) AND (Len(vs$)>0)
        WZ_HideMessage{}
        msg$ = "Es wurde eine neuere Programm-Version gefunden." + Chr$(10)
        msg$ + "installiert: " + my\version + Chr$(10)
        msg$ + "verf�gbar: "+vs$      + Chr$(10)
        msg$ + "unter \\nhttp://www.programmed-excellence.de/download/" + my\name + "/" + Chr$(10) + Chr$(10)
        msg$ + "M�chten Sie das Update gleich herunterladen ?"
        dummy = RTEZRequest("",msg$,"_Ja|_Nein")
        If dummy = 1
          vs$ = StrPack(vs$," ,.")
          host$="www.programmed-excellence.de"
          send$ = "/download/proBonds/"+my\name+"V" + vs$ + ".lha"
          datei$ = my\progdir + my\name + "V" + vs$ + ".lha"
          DeleteFile_ datei$
          WZ_ShowMessage{"Lade Update herunter..."}
          http_error.l = HTTP_Get{host$+send$,datei$}
          If http_error = 200
            msg$ = "Download von "+Chr$(34)+my\name+ "V"+vs$+".lha"+Chr$(34)+" beendet."+Chr$(10)
            msg$ + "Das Update liegt nun im " + my\name + "-Ordner bereit."
          Else
            msg$ = "Der Download ist fehlgeschlagen.\\n"
            msg$ + "Der Server meldet folgenden Fehler:\\n"
            msg$ + Str$(http_error) + ": " + HTTP_ErrorString{http_error}
            DeleteFile_ datei$
          EndIf
          dummy = RTEZRequest("",msg$,"_Ok")
        EndIf
      Else
        WZ_ShowMessage{"Die installierte Version ist aktuell."}
        VWait 150
        WZ_HideMessage{}
      EndIf
    EndIf
  Else
    WZ_HideMessage{}
    msg$ = "Die Anfrage konnte nicht durchgef�hrt werden:\\nDer Server liefert folgenden Fehler:\\n" + Str$(success)+" : "+HTTP_ErrorString{success}
    dummy = RTEZRequest("",msg$,"_Ok")
;  Else
;    dummy$ = RTEZRequest("","Es wurde keine neuere Version gefunden.","_Ok")
  EndIf
  Function Return success
  CEND
End Function

;-----------------------------------------------------------------------
Function.l APP_GetAvailableLanguages{}
SHARED my_languages()
  ClearList my_languages()
  catdir$ = dos_GetProgDir{""}
  catdir$ = dos_AddPart{catdir$,"Catalogs"}
  If ChDir (catdir$)
    num_files.l = 0
    While MoreEntries
      If EntryDIR
        language$ = EntryName$
        If AddLast(my_languages())
          my_languages()\name = language$
        EndIf
      EndIf
    Wend
  EndIf
End Function

Function.b APP_LanguageIsAvailable{lang$}
  SHARED my_languages()
  If FirstItem(my_languages())
    Repeat
      If my_languages()\name = lang$ Then Function Return True
    Until NOT NextItem(my_languages())
  EndIf
  Function Return False
End Function

Function.s APP_GetSystemLanguage{}
  *locale.Locale = OpenLocale_(Null)
  If *locale
;    sysloc$ = PeekS(*locale\loc_LocaleName)
    syslan$ = StrChg(Peek$(*locale\loc_LanguageName),".language","")
    CloseLocale_ *locale
  EndIf
  my\systemlanguage = syslan$
  Function Return syslan$
End Function


Function.b APP_SetMyLanguage{lang$}
SHARED my_languages
  If lang$<>my\language
    If my\internal_cat <> 0
      CloseCatalog_ my\internal_cat
      my\internal_cat = 0
    EndIf
    ;catfile$ = dos_AddPart{dos_GetProgDir{""},"Catalogs"}
    ;catfile$ = dos_AddPart{catfile$,lang$}
    ;catfile$ = dos_AddPart{catfile$,my\name + ".catalog"}
    catfile$ = my\name+".catalog"
    *cat.Catalog = OpenCatalogA_(0,catfile$,Tags(#OC_BuiltInLanguage,&my\language,#OC_Language,&lang$,#TAG_DONE,0))
    If *cat<>0
      WZTags #SFH_Catalog,*cat
      my\internal_cat = *cat
      Function Return True
    EndIf
  EndIf
End Function

CNIF #__include =0
  WBenchToFront_
  FindScreen 0
  WZLoadGUI ?wzgui
  gn$ = RTEZLoadFile("Give me the picture:","syS:")
  If gn$<>"" Then APP_About{gn$}
End

wzgui:
IncBin "stormwizard:mmi/probonds.wizard"
CEND
