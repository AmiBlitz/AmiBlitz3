; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram Disk:"
; ExeFile         = ""
; CreateIcon      = 0
; Residents       = "all.res,sdstcp.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 1
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 0
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 51
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 15
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 200
; Max ChunkyBuffer= 2
; /XTRA
; Description:  Procedures and constants to be able to parse and classify HTTP header field names
;               as numbers instead of strings

; Type:         Misc

; History:
;   18th November 2002  Created.

; Contents:

; Requires:


; List of possible response headers from server - includes response and entity headers
#HTTP_HEADER_UNKNOWN        = -1
#HTTP_HEADER_ACCEPTRANGES   = 0
#HTTP_HEADER_AGE            = 1
#HTTP_HEADER_ETAG           = 2
#HTTP_HEADER_LOCATION       = 3
#HTTP_HEADER_PROXYAUTHORIZE = 4
#HTTP_HEADER_RETRYAFTER     = 5
#HTTP_HEADER_SERVER         = 6
#HTTP_HEADER_VARY           = 7
#HTTP_HEADER_WWWAUTH        = 8

#HTTP_HEADER_ALLOW          = 9
#HTTP_HEADER_CENCODING      = 10
#HTTP_HEADER_CLANG          = 11
#HTTP_HEADER_CLENGTH        = 12
#HTTP_HEADER_CLOCATION      = 13
#HTTP_HEADER_CMD5           = 14
#HTTP_HEADER_CRANGE         = 15
#HTTP_HEADER_CTYPE          = 16
#HTTP_HEADER_EXPIRES        = 17
#HTTP_HEADER_LASTMODIFIED   = 18

#HTTP_HEADER_CACHECONTROL   = 19
#HTTP_HEADER_CONNECTION     = 20
#HTTP_HEADER_DATE           = 21
#HTTP_HEADER_PRAGMA         = 22
#HTTP_HEADER_TRAILER        = 23
#HTTP_HEADER_TRANSFERENC    = 24
#HTTP_HEADER_UPGRADE        = 25
#HTTP_HEADER_VIA            = 26
#HTTP_HEADER_WARNING        = 27

#HTTP_HEADER_ACCEPT         = 28
#HTTP_HEADER_ACCEPTENC      = 29
#HTTP_HEADER_ACCEPTCHAR     = 30
#HTTP_HEADER_ACCEPTLANG     = 31
#HTTP_HEADER_AUTH           = 32
#HTTP_HEADER_EXPECT         = 33
#HTTP_HEADER_FROM           = 34
#HTTP_HEADER_HOST           = 35
#HTTP_HEADER_IFMATCH        = 36
#HTTP_HEADER_IFMODSINCE     = 37
#HTTP_HEADER_IFNOMATCH      = 38
#HTTP_HEADER_IFRANGE        = 39
#HTTP_HEADER_IFUNMODSINCE   = 40
#HTTP_HEADER_MAXFORWARD     = 41
#HTTP_HEADER_PROXYAUTHENTIC = 42
#HTTP_HEADER_RANGE          = 43
#HTTP_HEADER_REFERER        = 44
#HTTP_HEADER_TE             = 45
#HTTP_HEADER_USERAGENT      = 46

#HTTP_HEADER_TOTAL          = 47


Dim http_header_string.s(#HTTP_HEADER_TOTAL)
http_header_string(#HTTP_HEADER_ACCEPTRANGES) = "Accept-Ranges"
http_header_string(#HTTP_HEADER_AGE) = "Age"
http_header_string(#HTTP_HEADER_ETAG) = "ETag"
http_header_string(#HTTP_HEADER_LOCATION) = "Location"
http_header_string(#HTTP_HEADER_PROXYAUTHORIZE) = "Proxy-Authenticate"
http_header_string(#HTTP_HEADER_RETRYAFTER) = "Retry-After"
http_header_string(#HTTP_HEADER_SERVER) = "Server"
http_header_string(#HTTP_HEADER_VARY) = "Vary"
http_header_string(#HTTP_HEADER_WWWAUTH) = "WWW-Authenticate"

http_header_string(#HTTP_HEADER_ALLOW) = "Allow"
http_header_string(#HTTP_HEADER_CENCODING) = "Content-Encoding"
http_header_string(#HTTP_HEADER_CLANG) = "Content-Language"
http_header_string(#HTTP_HEADER_CLENGTH) = "Content-Length"
http_header_string(#HTTP_HEADER_CLOCATION) = "Content-Location"
http_header_string(#HTTP_HEADER_CMD5) = "Content-MD5"
http_header_string(#HTTP_HEADER_CRANGE) = "Content-Range"
http_header_string(#HTTP_HEADER_CTYPE) = "Content-Type"
http_header_string(#HTTP_HEADER_EXPIRES) = "Expires"
http_header_string(#HTTP_HEADER_LASTMODIFIED) = "Last-Modified"

http_header_string(#HTTP_HEADER_CACHECONTROL) = "Cache-Control"
http_header_string(#HTTP_HEADER_CONNECTION) = "Connection"
http_header_string(#HTTP_HEADER_DATE) = "Date"
http_header_string(#HTTP_HEADER_PRAGMA) = "Pragma"
http_header_string(#HTTP_HEADER_TRAILER) = "Trailer"
http_header_string(#HTTP_HEADER_TRANSFERENC) = "Transfer-Encoding"
http_header_string(#HTTP_HEADER_UPGRADE) = "Upgrade"
http_header_string(#HTTP_HEADER_VIA) = "Via"
http_header_string(#HTTP_HEADER_WARNING) = "Warning"

http_header_string(#HTTP_HEADER_ACCEPT) = "Accept"
http_header_string(#HTTP_HEADER_ACCEPTENC) = "Accept-Encoding"
http_header_string(#HTTP_HEADER_ACCEPTCHAR) = "Accept-Charset"
http_header_string(#HTTP_HEADER_ACCEPTLANG) = "Accept-Language"
http_header_string(#HTTP_HEADER_AUTH) = "Authorization"
http_header_string(#HTTP_HEADER_EXPECT) = "Expect"
http_header_string(#HTTP_HEADER_FROM) = "From"
http_header_string(#HTTP_HEADER_HOST) = "Host"
http_header_string(#HTTP_HEADER_IFMATCH) = "If-Match"
http_header_string(#HTTP_HEADER_IFMODSINCE) = "If-Modified-Since"
http_header_string(#HTTP_HEADER_IFNOMATCH) = "If-None-Match"
http_header_string(#HTTP_HEADER_IFRANGE) = "If-Range"
http_header_string(#HTTP_HEADER_IFUNMODSINCE) = "If-Unmodified-Since"
http_header_string(#HTTP_HEADER_MAXFORWARD) = "Max-Forwards"
http_header_string(#HTTP_HEADER_PROXYAUTHENTIC) = "Proxy-Authorization"
http_header_string(#HTTP_HEADER_RANGE) = "Range"
http_header_string(#HTTP_HEADER_REFERER) = "Referer"
http_header_string(#HTTP_HEADER_TE) = "TE"
http_header_string(#HTTP_HEADER_USERAGENT) = "User-Agent"


Procedure.l HTTPHeaderNumber(field_name.s)
    DEFTYPE.l   header_number
    DEFTYPE.l   i

    header_number = #HTTP_HEADER_UNKNOWN

    i = 0
    While i<#HTTP_HEADER_TOTAL AND header_number=#HTTP_HEADER_UNKNOWN
        ;Debug "Comparing header -<"+field_name+">- to -<"+http_header_string(i)+">-"
        If UCase(field_name)=UCase(http_header_string(i))
            header_number=i
        EndIf
        i + 1
    Wend

    ProcedureReturn(header_number)
EndProcedure


