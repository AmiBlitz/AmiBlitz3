; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 12
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 9
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max ChunkyBuffer= 2
; /XTRA
; -- AISS Include
; -- 2007 by Sven Droege
; --
CNIF #__include=0
  OPTIMIZE 4
CEND

XINCLUDE "dos.include.ab3"
XINCLUDE "image.include.ab3"

#AISS_NORMAL = 0
#AISS_SELECTED = 1
#AISS_GHOSTED = 2


NEWTYPE.aiss_data
  imageid.l
  imagename.s
  imagestatus.b
End NEWTYPE

Dim List aiss_repository.aiss_data(0)
SHARED aiss_repository()
SHARED AISS_Path.s
AISS_Path.s = "TBImages:"

Function.b AISS_IsAvailable{}
  If dos_CheckAssign{AISS_Path.s}
    Function Return True
  Else
    Function Return False
  EndIf
End Function

Function.l AISS_OpenImage{_type$,@status.b}
  If _type$ = "" Then Function Return 0

  ; -- get optional extention
  If status<>-1
    Select status
    Case #AISS_NORMAL
      extent$ = ""
    Case #AISS_SELECTED
      extent$ = "_s"
    Case #AISS_GHOSTED
      extent$ = "_g"
    Default
      extent$ =""
    End Select
  EndIf

  ; -- open the image
  imagefile$ = dos_AddPart{AISS_Path.s,_type$ + extent$}
  If dos_Exist{imagefile$}
    imagenum.l = image_GetFree{}
    If image_Load{imagenum,imagefile$}
      If AddLast(aiss_repository())
        aiss_repository()\imageid = imagenum
        aiss_repository()\imagename = _type$
        aiss_repository()\imagestatus = extent
        Function Return imagenum
      End If
    EndIf
  EndIf
End Function

Function AISS_CloseAllImages{}
  ResetList aiss_repository()
  While NextItem(aiss_repository())
    If aiss_repository()\imageid <> 0
      image_Free{aiss_repository()\imageid}
    EndIf
  Wend
  ClearList aiss_repository()
End Function


Function.l AISS_DrawImage{imagenum.l,x.l,y.l}
  image_Draw{imagenum,x,y}
End Function


CNIF #__include = 0
  If NOT AISS_IsAvailable{}
    aissstate$ = "not"
  EndIf
  !cout{"AISS is "+aissstate$+" available."}
CEND
