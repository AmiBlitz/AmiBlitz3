; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "/Bin"
; ExeFile         = "sf2Demo"
; CreateIcon      = 1
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 21
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 9
; LabelSearch     = "samplet"
; LabelRemark     = 0
; LabelAll        = 1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max ChunkyBuffer= 2
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: sf2.include                                                           /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 19/01/2007                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
CNIF #__include=0
OPTIMIZE 7
CEND

XINCLUDE "error.include.ab3"
XINCLUDE "dos.include.ab3"
XINCLUDE "convert.include.ab3"
XINCLUDE "convert_audio.include.ab3"
XINCLUDE "file.include.ab3"

NEWTYPE.sf_riff
RIFF.l
size.l
sfbk.l
End NEWTYPE

NEWTYPE.sf_list
LIST_.l
size.l
typ.l
End NEWTYPE

NEWTYPE.sf_smpl
smpl.l
size.l
End NEWTYPE

NEWTYPE.sf_shdr
name.b[20]
s_start.l
s_end.l
loop_start.l
loop_end.l
samplerate.l
rootkey.b
fine.b
samplelink.w
sampletype.w
End NEWTYPE

#sfstyp_mono = 1
#sfstyp_left = 4
#sfstyp_right = 2
#sfstyp_linked = 8


NEWTYPE.sf_sample_add
count.l
filepos1.l
filepos2.l
blength.l
flength.l
samplerate.l
rootkey.l
highkey.l
lowkey.l
fine.l
loop_start.l
loop_start_frac.l
loop_end.l
loop_end_frac.l
loop.l
gain.l
pan.l
sampletype.w
End NEWTYPE

NEWTYPE.sfengine
dos1.l
dos2.l
is_open.l
numsamps.l
header.sf_riff
sample.sf_shdr
sample_add.sf_sample_add
sflist.sf_list
End NEWTYPE




DEFTYPE.sfengine sfengine
USEPATH sfengine


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: sf_close {}                                                         /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement sf_close {}
SHARED sfengine
If \is_open
  file_Close{\dos1}
  file_Close{\dos2}
  \is_open = False
End If
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_open {filename.s}                                    /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - filename.s    : ???                                                       /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_open {filename.s}
SHARED sfengine
succ.l = False
If \is_open Then sf_close{}
\dos1=file_Open {filename.s,#file_read}
\dos2=file_Open {filename.s,#file_read}
If \dos1>=0 AND \dos2>=0
  If file_ReadMem {\dos1,&\header,12}
    If \header\RIFF=Cvl("RIFF") AND \header\sfbk=Cvl("sfbk")
      \is_open = True
      \sample_add\count   = 0
      file_SetLittleEndian {\dos1}
      file_SetLittleEndian {\dos2}

      succ.l = True


      succ.l = file_FindChunk {\dos1,@"LIST",12}
      Repeat
        If succ=False
          error {"LIST chunk not found !"}
        Else
          succ = file_ReadMem {\dos1,&\sflist,12}
          \sample_add\filepos1 = file_GetSeekPos {\dos1}
          succ & file_SeekRel {\dos1,-12}
        End If
        succ.l = file_FindChunk {\dos1,@"LIST",-1,-1,False}
      Until \sflist\typ = Cvl("sdta") OR succ=False

      If \sflist\typ = @"sdta" Then succ1.l=True:Else succ1=False

      succ.l = file_FindChunk {\dos1,@"LIST",12}
      Repeat
        If succ=False
          error {"LIST chunk not found !"}
        Else
          succ = file_ReadMem {\dos1,&\sflist,12}
          \sample_add\filepos2 = file_GetSeekPos {\dos1}
          succ & file_SeekRel {\dos1,-12}
        End If
        succ.l = file_FindChunk {\dos1,@"LIST",-1,-1,False}
      Until \sflist\typ = @"pdta" OR succ=False

      If \sflist\typ = @"pdta" Then succ2.l=True:Else succ2=False

      If succ1&succ2
        succ1.l = file_FindChunk {\dos1,@"smpl",\sample_add\filepos1}
        If succ1=False Then error {"smpl chunk not found !"}
        succ2.l = file_FindChunk {\dos2,@"shdr",\sample_add\filepos2}
        If succ2=False Then error {"shdr chunk not found !"}
        \sample_add\filepos1 = file_GetSeekPos {\dos1} +8
        \sample_add\filepos2 = file_GetSeekPos {\dos2} +8

        succ2.l = file_ReadMem {\dos2,&dummy.l,4}
        succ2.l = file_ReadMem {\dos2,&dummy,4}
        \numsamps = con_LFlip{dummy} / SizeOf.sf_shdr
        succ = succ1&succ2
      Else
        error {"Did not find all LIST chunks !"}
      End If
    Else
      error {"File is not a Soundfont !"}
    End If
  End If
End If
If succ=False Then sf_close{}
Function Return succ
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_tst {filename.s}                                     /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - filename.s    : ???                                                       /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_tst {filename.s}
SHARED sfengine
succ.l = False
dos.l=file_Open {filename.s,#file_read}
If dos>=0
  If file_ReadMem {dos,\header,12}
    If \header\RIFF=@"RIFF" AND \header\sfbk=@"sfbk"
      succ=True
    End If
  End If
  file_Close{dos}
End If
Function Return succ
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.s = sf_name {}                                              /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.s     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.s sf_name {}
SHARED sfengine
name.s = dos_RemExt{file_GetName {\dos1}}
Function Return name.s
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_numsamps {}                                          /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_numsamps {}
SHARED sfengine
Function Return \numsamps
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.s = sf_getname {ptr.l,maxlength.l}                          /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - ptr.l    : ???                                                            /
;/ - maxlength.l    : ???                                                      /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.s     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.s sf_getname {ptr.l,maxlength.l}
SHARED sfengine
name.s =""
While maxlength>0
  If Peek.b(ptr)>31 Then name.s = name.s+Chr$(Peek.b(ptr))
  ptr+1
  maxlength-1
Wend
If name.s ="" Then name.s="unknown"
Function Return name.s
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.s = sf_sample_name {}                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.s     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.s sf_sample_name {}
SHARED sfengine
name.s = sf_getname {&\sample\name[0],20}
Function Return name.s
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_nextsample {}                                        /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_nextsample {}
SHARED sfengine
succ.l = False
If \sample_add\count<\numsamps
  \sample_add\count+1
  succ=file_Seek {\dos2,\sample_add\filepos2}
  If file_ReadMem {\dos2,\sample,SizeOf.sf_shdr}
    name.s = sf_getname {&\sample\name[0],20}
    If Left$(name.s,3)><"EOS"
      succ=True
      \sample_add\flength     = con_LFlip{\sample\s_end} - con_LFlip{\sample\s_start}
      soffset.l = con_LFlip{\sample\s_start}
      \sample_add\samplerate  = con_LFlip{\sample\samplerate}
      If \sample_add\samplerate<4410 Then \sample_add\samplerate  = 4410
      If \sample_add\samplerate>96000 Then \sample_add\samplerate  = 96000

      \sample_add\loop_start = con_LFlip{\sample\loop_start}  - soffset
      \sample_add\loop_end   = con_LFlip{\sample\loop_end}    - soffset

      \sample_add\blength = \sample_add\flength * 2
      \sample_add\sampletype = con_WFlip{\sample\sampletype}
      If \sample\rootkey>=0
        \sample_add\rootkey = \sample\rootkey
      Else
        \sample_add\rootkey = 60
      End If
      \sample_add\fine    = \sample\fine
      succ.l = file_Seek {\dos1,\sample_add\filepos1+soffset*2}
      \sample_add\filepos2 + SizeOf.sf_shdr
      \sample_add\gain    = 100
      \sample_add\pan     = 0
      \sample_add\lowkey  = \sample_add\rootkey
      \sample_add\highkey = \sample_add\rootkey
      \sample_add\loop_end_frac = 0
      \sample_add\loop_start_frac = 0
    Else
      succ = False;
    End If
  End If
End If
Function Return succ
End Function



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_blength {}                                    /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_blength {}
SHARED sfengine
Function Return \sample_add\blength
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_flength {}                                    /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_flength {}
SHARED sfengine
Function Return \sample_add\flength
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_loop_start {}                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_loop_start {}
SHARED sfengine
Function Return \sample_add\loop_start
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_loop_start_frac {}                            /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_loop_start_frac {}
SHARED sfengine
Function Return \sample_add\loop_start_frac
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_loop {}                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_loop {}
SHARED sfengine
Function Return \sample_add\loop
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_loop_end {}                                   /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_loop_end {}
SHARED sfengine
Function Return \sample_add\loop_end
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_loop_end_frac {}                              /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_loop_end_frac {}
SHARED sfengine
Function Return \sample_add\loop_end_frac
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_rootkey {}                                    /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_rootkey {}
SHARED sfengine
Function Return \sample_add\rootkey
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_lowkey {}                                     /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_lowkey {}
SHARED sfengine
Function Return \sample_add\lowkey
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_highkey {}                                    /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_highkey {}
SHARED sfengine
Function Return \sample_add\highkey
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_fine {}                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_fine {}
SHARED sfengine
Function Return \sample_add\fine
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_rate {}                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_rate {}
SHARED sfengine
Function Return \sample_add\samplerate
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_gain {}                                       /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_gain {}
SHARED sfengine
Function Return \sample_add\gain
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_pan {}                                        /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_pan {}
SHARED sfengine
Function Return \sample_add\pan
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_sampletype {}                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_sampletype {}
SHARED sfengine
Function Return \sample_add\sampletype
End Function



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = sf_sample_readdata {ptr.l,maxbytes.l}                   /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - ptr.l    : ???                                                            /
;/ - maxbytes.l    : ???                                                       /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l sf_sample_readdata {ptr.l,maxbytes.l}
SHARED sfengine
succ.l = False
If ptr
  blength.l = \sample_add\blength
  If maxbytes<=0 Then maxbytes=blength
  maxbytes.l = Min(maxbytes,blength)
  If file_ReadMem {\dos1,ptr,maxbytes}
    FlipEndian16 {ptr,ptr,maxbytes/2}
  End If
End If
Function Return succ
End Function



CNIF #__include=0
If sf_open {"workbench:programme/hd-rec/plugins/sweeper/voices/soundfonts/rolandnicepiano.sf2"}
  NPrint sf_name{}
  NPrint "# samples: ",sf_numsamps{}
  While sf_nextsample{}

    NPrint "Sample: ",sf_sample_name {}," rootkey: ",con_Note2String{sf_sample_rootkey{}}," fine: ",sf_sample_fine{}

  Wend
  sf_close{}
End If
Delay_ 200
End
CEND
