; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelCase       = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max BlitzFont   = 4
; Max Window      = 20
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max TagList     = 5
; Max Database    = 16
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;
; $VER: execbase.ab3 40.0 (28.02.94)
;

XINCLUDE "exec/lists.ab3"

XINCLUDE "exec/interrupts.ab3"

XINCLUDE "exec/libraries.ab3"

XINCLUDE "exec/tasks.ab3"

;/* Definition of the Exec library base structure (pointed to by location 4).
;** Most fields are not to be viewed or modified by user programs.  Use
;** extreme caution.
;*/
NEWTYPE.ExecBase
LibNode.Library;/* Standard library node */

;/******** Static System Variables ********/

SoftVer.w ;/* kickstart release number (obs.) */
LowMemChkSum.w ;/* checksum of 68000 trap vectors */
ChkBase.l ;/* system base pointer complement */
*ColdCapture.b ;/* coldstart soft capture vector */
*CoolCapture.b ;/* coolstart soft capture vector */
*WarmCapture.b ;/* warmstart soft capture vector */
*SysStkUpper.b ;/* system stack base   (upper bound) */
*SysStkLower.b ;/* top of system stack (lower bound) */
MaxLocMem.l ;/* top of chip memory */
*DebugEntry.b ;/* global debugger entry point */
*DebugData.b ;/* global debugger data segment */
*AlertData.b ;/* alert data segment */
*MaxExtMem.b ;/* top of extended mem, or null if none */

ChkSum.w ;/* for all of the above (minus 2) */

;/****** Interrupt Related ***************************************/

IntVects.IntVector[16]

;/****** Dynamic System Variables *************************************/

*ThisTask.Task;/* pointer to current task (readable) */

IdleCount.l ;/* idle counter */
DispCount.l ;/* dispatch counter */
Quantum.w ;/* time slice quantum */
Elapsed.w ;/* current quantum ticks */
SysFlags.w ;/* misc internal system flags */
IDNestCnt.b ;/* interrupt disable nesting count */
TDNestCnt.b ;/* task disable nesting count */

AttnFlags.w ;/* special attention flags (readable) */

AttnResched.w ;/* rescheduling attention */
*ResModules.b ;/* resident module array pointer */
*TaskTrapCode.b
*TaskExceptCode.b
*TaskExitCode.b
TaskSigAlloc.l
TaskTrapAlloc.w


;/****** System Lists (private!) ********************************/

MemList.List
ResourceList.List
DeviceList.List
IntrList.List
LibList.List
PortList.List
TaskReady.List
TaskWait.List

SoftInts.SoftIntList[5]

;/****** Other Globals *******************************************/

LastAlert.l[4]

;/* these next two variables are provided to allow
; ** system developers to have a rough idea of the
; ** period of two externally controlled signals --
; ** the time between vertical blank interrupts and the
; ** external line rate (which is counted by CIA A's
; ** "time of day" clock).  In general these values
; ** will be 50 or 60, and may or may not track each
; ** other.  These values replace the obsolete AFB_PAL
; ** and AFB_50HZ flags.
; */
VBlankFrequency.b ;/* (readable) */
PowerSupplyFrequency.b ;/* (readable) */

SemaphoreList.List

;/* these next two are to be able to kickstart into user ram.
; ** KickMemPtr holds a singly linked list of MemLists which
; ** will be removed from the memory list via AllocAbs.  If
; ** all the AllocAbs's succeeded, then the KickTagPtr will
; ** be added to the rom tag list.
; */
*KickMemPtr.b ;/* ptr to queue of mem lists */
*KickTagPtr.b ;/* ptr to rom tag queue */
*KickCheckSum.b ;/* checksum for mem and tags */

;/****** V36 Exec additions start here **************************************/

ex_Pad0.w ;/* Private internal use */
ex_LaunchPoint.l ;/* Private to Launch/Switch */
*ex_RamLibPrivate.b
;/* The next ULONG contains the system "E" clock frequency,
; ** expressed in Hertz.  The E clock is used as a timebase for
; ** the Amiga's 8520 I/O chips. (E is connected to "02").
; ** Typical values are 715909 for NTSC, or 709379 for PAL.
; */
ex_EClockFrequency.l ;/* (readable) */
ex_CacheControl.l ;/* Private to CacheControl calls */
ex_TaskID.l ;/* Next available task ID */

ex_Reserved.l[5]

*ex_MMULock.b ;/* private */

ex_Reserved2.l[3]

;/****** V39 Exec additions start here **************************************/

;/* The following list and data element are used
;  * for V39 exec's low memory handler...
;  */
ex_MemHandlers.MinList;/* The handler list */
*ex_MemHandler.b ;/* Private! handler pointer */
End NEWTYPE


;/****** Bit defines for AttnFlags (see above) ******************************/

;/*  Processors and Co-processors: */
#AFB_68010=0 ;/* also set for 68020 */
#AFB_68020=1 ;/* also set for 68030 */
#AFB_68030=2 ;/* also set for 68040 */
#AFB_68040=3
#AFB_68881=4 ;/* also set for 68882 */
#AFB_68882=5
#AFB_FPU40=6 ;/* Set if 68040 FPU */
;/*
; * The AFB_FPU40 bit is set when a working 68040 FPU
; * is in the system.  If this bit is set and both the
; * AFB_68881 and AFB_68882 bits are not set, then the 68040
; * math emulation code has not been loaded and only 68040
; * FPU instructions are available.  This bit is valid *ONLY*
; * if the AFB_68040 bit is set.
; */

#AFB_PRIVATE=15;/* Just what it says */

#AFF_68010=(1LSL0)
#AFF_68020=(1LSL1)
#AFF_68030=(1LSL2)
#AFF_68040=(1LSL3)
#AFF_68881=(1LSL4)
#AFF_68882=(1LSL5)
#AFF_FPU40=(1LSL6)

#AFF_PRIVATE=(1LSL15)

;/* #define AFB_RESERVED8   8 */
;/* #define AFB_RESERVED9   9 */

;/****** Selected flag definitions for Cache manipulation calls **********/

#CACRF_EnableI=(1LSL0);/* Enable instruction cache */
#CACRF_FreezeI=(1LSL1);/* Freeze instruction cache */
#CACRF_ClearI=(1LSL3);/* Clear instruction cache  */
#CACRF_IBE=(1LSL4);/* Instruction burst enable */
#CACRF_EnableD=(1LSL8);/* 68030 Enable data cache  */
#CACRF_FreezeD=(1LSL9);/* 68030 Freeze data cache  */
#CACRF_ClearD=(1LSL11);/* 68030 Clear data cache  */
#CACRF_DBE=(1LSL12);/* 68030 Data burst enable */
#CACRF_WriteAllocate=(1LSL13);/* 68030 Write-Allocate mode
;         (must always be set!)  */
#CACRF_EnableE=(1LSL30);/* Master enable for external caches */
;/* External caches should track the */
;/* state of the internal caches */
;/* such that they do not cache anything */
;/* that the internal cache turned off */
;/* for. */
#CACRF_CopyBack=(1LSL31);/* Master enable for copyback caches */

#DMA_Continue=(1LSL1);/* Continuation flag for CachePreDMA */
#DMA_NoModify=(1LSL2);/* Set if DMA does not update memory */
#DMA_ReadFromRAM=(1LSL3);/* Set if DMA goes *FROM* RAM to device */
