; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelCase       = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max BlitzFont   = 4
; Max Window      = 20
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max TagList     = 5
; Max Database    = 16
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
CNIF @#DOS_EXALL_H=0 
#DOS_EXALL_H = 1
;
; $VER: exall.ab3 40.0 (28.02.94)
;

CNIF @#EXEC_TYPES_H=0 
XINCLUDE "OS/exec/types.ab3"
CEND 

CNIF @#UTILITY_HOOKS_H=0 
XINCLUDE "OS/utility/hooks.ab3" 
CEND 

;/* NOTE: V37 dos.library, when doing ExAll() emulation, and V37 filesystems  */
;/* will return an error if passed ED_OWNER.  If you get ERROR_BAD_NUMBER,    */
;/* retry with ED_COMMENT to get everything but owner info.  All filesystems  */
;/* supporting ExAll() must support through ED_COMMENT, and must check Type   */
;/* and return ERROR_BAD_NUMBER if they don't support the type.       */

;/* values that can be passed for what data you want from ExAll() */
;/* each higher value includes those below it (numerically)  */
;/* you MUST chose one of these values */
#ED_NAME=1
#ED_TYPE=2
#ED_SIZE=3
#ED_PROTECTION=4
#ED_DATE=5
#ED_COMMENT=6
#ED_OWNER=7

;/*
; *   Structure in which exall results are returned in. Note that only the
; *   fields asked for will exist!
; */

NEWTYPE.ExAllData
*ed_Next.ExAllData
*ed_Name.b
ed_Type.l
ed_Size.l
ed_Prot.l
ed_Days.l
ed_Mins.l
ed_Ticks.l
*ed_Comment.b ;/* strings will be after last used field */
ed_OwnerUID.w ;/* new for V39 */
ed_OwnerGID.w
End NEWTYPE

;/*
; *   Control structure passed to ExAll.  Unused fields MUST be initialized to
; *   0, expecially eac_LastKey.
; *
; *   eac_MatchFunc is a hook (see utility.library documentation for usage)
; *   It should return true if the entry is to returned, false if it is to be
; *   ignored.
; *
; *   This structure MUST be allocated by AllocDosObject()!
; */

NEWTYPE.ExAllControl
eac_Entries.l ;/* number of entries returned in buffer      */
eac_LastKey.l ;/* Don't touch inbetween linked ExAll calls! */
*eac_MatchString.b ;/* wildcard string for pattern match or NULL */
*eac_MatchFunc.Hook;/* optional private wildcard function     */
End NEWTYPE

CEND