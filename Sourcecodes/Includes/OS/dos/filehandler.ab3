; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelCase       = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max BlitzFont   = 4
; Max Window      = 20
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max TagList     = 5
; Max Database    = 16
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
CNIF @#DOS_FILEHANDLER_H=0 
#DOS_FILEHANDLER_H = 1
;
; $VER: filehandler.ab3 40.0 (28.02.94)
;

CNIF @#EXEC_PORTS_H=0 
XINCLUDE "OS/exec/ports.ab3" 
CEND 

CNIF @#DOS_DOS_H=0 
XINCLUDE "OS/dos/dos.ab3" 
CEND 

;/* The disk "environment" is a longword array that describes the
; * disk geometry.  It is variable sized, with the length at the beginning.
; * Here are the constants for a standard geometry.
; */

NEWTYPE.DosEnvec
de_TableSize.l ;/* Size of Environment vector */
de_SizeBlock.l ;/* in longwords: standard value is 128 */
de_SecOrg.l ;/* not used; must be 0 */
de_Surfaces.l ;/* # of heads (surfaces). drive specific */
de_SectorPerBlock.l ;/* not used; must be 1 */
de_BlocksPerTrack.l ;/* blocks per track. drive specific */
de_Reserved.l ;/* DOS reserved blocks at start of partition. */
de_PreAlloc.l ;/* DOS reserved blocks at end of partition */
de_Interleave.l ;/* usually 0 */
de_LowCyl.l ;/* starting cylinder. typically 0 */
de_HighCyl.l ;/* max cylinder. drive specific */
de_NumBuffers.l ;/* Initial # DOS of buffers.  */
de_BufMemType.l ;/* type of mem to allocate for buffers */
de_MaxTransfer.l ;/* Max number of bytes to transfer at a time */
de_Mask.l ;/* Address Mask to block out certain memory */
de_BootPri.l ;/* Boot priority for autoboot */
de_DosType.l ;/* ASCII (HEX) string showing filesystem type;
;           * 0X444F5300 is old filesystem,
;           * 0X444F5301 is fast file system */
de_Baud.l ;/* Baud rate for serial handler */
de_Control.l ;/* Control word for handler/filesystem */
de_BootBlocks.l ;/* Number of blocks containing boot code */
End NEWTYPE

;/* these are the offsets into the array */
;/* DE_TABLESIZE is set to the number of longwords in the table minus 1 */

#DE_TABLESIZE=0;/* minimum value is 11 (includes NumBuffers) */
#DE_SIZEBLOCK=1;/* in longwords: standard value is 128 */
#DE_SECORG=2;/* not used; must be 0 */
#DE_NUMHEADS=3;/* # of heads (surfaces). drive specific */
#DE_SECSPERBLK=4;/* not used; must be 1 */
#DE_BLKSPERTRACK=5;/* blocks per track. drive specific */
#DE_RESERVEDBLKS=6;/* unavailable blocks at start.  usually 2 */
#DE_PREFAC=7;/* not used; must be 0 */
#DE_INTERLEAVE=8;/* usually 0 */
#DE_LOWCYL=9;/* starting cylinder. typically 0 */
#DE_UPPERCYL=10;/* max cylinder.  drive specific */
#DE_NUMBUFFERS=11;/* starting # of buffers.  typically 5 */
#DE_MEMBUFTYPE=12;/* type of mem to allocate for buffers. */
#DE_BUFMEMTYPE=12;/* same as above, better name
;        * 1 is public, 3 is chip, 5 is fast */
#DE_MAXTRANSFER=13;/* Max number bytes to transfer at a time */
#DE_MASK=14;/* Address Mask to block out certain memory */
#DE_BOOTPRI=15;/* Boot priority for autoboot */
#DE_DOSTYPE=16;/* ASCII (HEX) string showing filesystem type;
;        * 0X444F5300 is old filesystem,
;        * 0X444F5301 is fast file system */
#DE_BAUD=17;/* Baud rate for serial handler */
#DE_CONTROL=18;/* Control word for handler/filesystem */
#DE_BOOTBLOCKS=19;/* Number of blocks containing boot code */

;/* The file system startup message is linked into a device node's startup
;** field.  It contains a pointer to the above environment, plus the
;** information needed to do an exec OpenDevice().
;*/
NEWTYPE.FileSysStartupMsg
fssm_Unit.l ;/* exec unit number for this device */
*fssm_Device.b ;/* null terminated bstring to the device name */
*fssm_Environ.b ;/* ptr to environment table (see above) */
fssm_Flags.l ;/* flags for OpenDevice() */
End NEWTYPE

;/* The include file "libraries/dosextens.h" has a DeviceList structure.
; * The "device list" can have one of three different things linked onto
; * it. Dosextens defines the structure for a volume.  DLT_DIRECTORY
; * is for an assigned directory.  The following structure is for
; * a dos "device" (DLT_DEVICE).
;*/

NEWTYPE.DeviceNode
*dn_Next.b ;/* singly linked list */
dn_Type.l ;/* always 0 for dos "devices" */
*dn_Task.MsgPort;/* standard dos "task" field.  If this is
;        * null when the node is accesses, a task
;        * will be started up */
*dn_Lock.b ;/* not used for devices -- leave null */
*dn_Handler.b ;/* filename to loadseg (if seglist is null) */
dn_StackSize.l ;/* stacksize to use when starting task */
dn_Priority.l ;/* task priority when starting task */
*dn_Startup.b ;/* startup msg: FileSysStartupMsg for disks */
*dn_SegList.b ;/* code to run to start new task (if necessary).
;        * if null then dn_Handler will be loaded. */
*dn_GlobalVec.b ;/* BCPL global vector to use when starting
;        * a task.  -1 means that dn_SegList is not
;        * for a bcpl program, so the dos won't
;        * try and construct one.  0 tell the
;        * dos that you obey BCPL linkage rules,
;        * and that it should construct a global
;        * vector for you.
;        */
*dn_Name.b ;/* the node name, e.g. '\3','D','F','3' */
End NEWTYPE

CEND