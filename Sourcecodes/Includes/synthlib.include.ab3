; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "ram:"
; ExeFile         = "test"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 1024
; MakeSmallest    = 0
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 4000
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = -1
; InterruptCheck  = -1
; AutoRun         = -1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 0
; CursorColumn    = 0
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; /XTRA
CNIF #__include=0
OPTIMIZE 7
SYNTAX 2
WBStartup
CEND

XINCLUDE "error.include.ab3"
XINCLUDE "synth.definitions.ab3"

#SIZEOF_SYNTH       = 4
#SIZEOF_FILTER      = 92
#SIZEOF_OSC         = 92
#SIZEOF_ENV         = 60
#SIZEOF_ENSEMBLE    = 32864
#SIZEOF_TAPDELAY    = 32878
#SIZEOF_STRING      = 33200
#SIZEOF_FLUTE       = 33132
#SIZEOF_DELAYMATRIX = 33132
#SIZEOF_AMPLIFIER   = 128

; Library offsets:
#_LVO_SYNTHBASE_synth_Deinit              = -30
#_LVO_SYNTHBASE_synth_Init                = -36
#_LVO_SYNTHBASE_synth_GetAttr             = -42
#_LVO_SYNTHBASE_synth_SetAttr             = -48
#_LVO_SYNTHBASE_synth_GetSizeOfSample     = -54
#_LVO_SYNTHBASE_synth_ConvertSampleFormat = -60
#_LVO_SYNTHBASE_synth_ToLittleEndian      = -66
#_LVO_SYNTHBASE_synth_ToBigEndian         = -72
#_LVO_SYNTHBASE_synth_RenderMix           = -78
#_LVO_SYNTHBASE_synth_RenderScale         = -84
#_LVO_SYNTHBASE_synth_RenderStereoAmp     = -90
#_LVO_SYNTHBASE_synth_RenderWaveShape     = -96
#_LVO_SYNTHBASE_synth_RenderDistorsion    = -102
#_LVO_SYNTHBASE_synth_RenderAM            = -108
#_LVO_SYNTHBASE_synth_RESERVED            = -114

#_LVO_SYNTHBASE_synth_InitFilter          = -156
#_LVO_SYNTHBASE_synth_GetFilterAttr       = -162
#_LVO_SYNTHBASE_synth_SetFilterAttr       = -168
#_LVO_SYNTHBASE_synth_UpdateFilter        = -174
#_LVO_SYNTHBASE_synth_RenderFilter        = -180

#_LVO_SYNTHBASE_synth_InitOsc             = -216
#_LVO_SYNTHBASE_synth_GetOscAttr          = -222
#_LVO_SYNTHBASE_synth_SetOscAttr          = -228
#_LVO_SYNTHBASE_synth_UpdateOsc           = -234
#_LVO_SYNTHBASE_synth_RenderOsc           = -240

#_LVO_SYNTHBASE_synth_InitEnv             = -276
#_LVO_SYNTHBASE_synth_GetEnvAttr          = -282
#_LVO_SYNTHBASE_synth_SetEnvAttr          = -288
#_LVO_SYNTHBASE_synth_InitEnvLevel        = -294
#_LVO_SYNTHBASE_synth_InitEnvDuration     = -300
#_LVO_SYNTHBASE_synth_StepEnv             = -306
#_LVO_SYNTHBASE_synth_ReleaseEnv          = -312
#_LVO_SYNTHBASE_synth_ResetEnv            = -318

#_LVO_SYNTHBASE_synth_InitEnsemble        = -336
#_LVO_SYNTHBASE_synth_GetEnsembleAttr     = -342
#_LVO_SYNTHBASE_synth_SetEnsembleAttr     = -348
#_LVO_SYNTHBASE_synth_UpdateEnsemble      = -354
#_LVO_SYNTHBASE_synth_RenderEnsemble      = -360

#_LVO_SYNTHBASE_synth_InitTapDelay        = -396
#_LVO_SYNTHBASE_synth_GetTapDelayAttr     = -402
#_LVO_SYNTHBASE_synth_SetTapDelayAttr     = -408
#_LVO_SYNTHBASE_synth_UpdateTapDelay      = -414
#_LVO_SYNTHBASE_synth_RenderTapDelay      = -420

#_LVO_SYNTHBASE_synth_InitString          = -456
#_LVO_SYNTHBASE_synth_GetStringAttr       = -462
#_LVO_SYNTHBASE_synth_SetStringAttr       = -468
#_LVO_SYNTHBASE_synth_UpdateString        = -474
#_LVO_SYNTHBASE_synth_RenderString        = -480

#_LVO_SYNTHBASE_synth_InitFlute           = -516
#_LVO_SYNTHBASE_synth_GetFluteAttr        = -522
#_LVO_SYNTHBASE_synth_SetFluteAttr        = -528
#_LVO_SYNTHBASE_synth_UpdateFlute         = -534
#_LVO_SYNTHBASE_synth_RenderFlute         = -540

#_LVO_SYNTHBASE_synth_InitDelayMatrix     = -576
#_LVO_SYNTHBASE_synth_GetDelayMatrixAttr  = -582
#_LVO_SYNTHBASE_synth_SetDelayMatrixAttr  = -588
#_LVO_SYNTHBASE_synth_UpdateDelayMatrix   = -594
#_LVO_SYNTHBASE_synth_RenderDelayMatrix   = -600

#_LVO_SYNTHBASE_synth_InitAmp             = -636
#_LVO_SYNTHBASE_synth_GetAmpAttr          = -642
#_LVO_SYNTHBASE_synth_SetAmpAttr          = -648
#_LVO_SYNTHBASE_synth_UpdateAmp           = -654
#_LVO_SYNTHBASE_synth_RenderAmp           = -660

SHARED *_SynthBase.Library

; Helper Macros:
Macro __SynthBase_SaveRegs
MOVE.l a4,-(a7) : MOVE.l a5,-(a7) : MOVE.l a6,-(a7) : MOVE.l d7,-(a7)
End Macro

Macro __SynthBase_RestoreRegs
MOVE.l (a7)+,d7 : MOVE.l (a7)+,a6 : MOVE.l (a7)+,a5 : MOVE.l (a7)+,a4
End Macro

Macro __Synth_LoadIntReg; {REG,Value}
  GetReg `1,(`2)
End Macro

Macro __Synth_LoadPtrReg; {REG,Value}
  GetReg `1,(`2)
End Macro

Macro __Synth_LoadFloatReg; {REG,Value}
  GetReg `1,Peek.l(&`2)
End Macro

Macro __Synth_ReturnFloat ; {var}
  __synth_tmpD0__.l = PutRegD0
  `1 = Peek.f(&__synth_tmpD0__.l)
End Macro

Macro __Synth_ReturnPtr ; {var}
  `1 = PutRegD0
End Macro

Macro __Synth_ReturnInt; {var}
  `1 = PutRegD0
End Macro

; Wrapper Macros:
; ======================== SYNTH ==========================
NEWTYPE.synth_T
_private_.b[4]
End NEWTYPE

Macro synth_Init;{ret.l}
!__SynthBase_SaveRegs
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_Init(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnPtr{`1}
End Macro

Macro synth_Deinit;{synth}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_Deinit(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RESERVED;{c,a,b}
!__SynthBase_SaveRegs
GetReg d0,`2
GetReg d1,`3
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RESERVED(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_GetAttr;{ret.l,synth,attr,valueP}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_SetAttr;{ret.l,synth,attr,value}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_SetAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_ConvertSampleFormat;{out,in,sampleN,format}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_ConvertSampleFormat(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_GetSizeOfSample;{ret.l,format}
!__SynthBase_SaveRegs
GetReg d0,`2
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetSizeOfSample(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_ToLittleEndian;{out,in,sampleN,bytesize}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_ToLittleEndian(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_ToBigEndian;{out,in,sampleN,bytesize}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_ToBigEndian(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderMix;{out,in1,in2,sampleN,gain1,gain2}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
!__Synth_LoadFloatReg{d1,`5}
!__Synth_LoadFloatReg{d2,`6}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderMix(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderScale;{out,in,sampleN,gain,offset}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg d0,`3
!__Synth_LoadFloatReg{d1,`4}
!__Synth_LoadFloatReg{d2,`5}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderScale(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderStereoAmp;{out,in,sampleN,gain,panorama}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg d0,`3
!__Synth_LoadFloatReg{d1,`4}
!__Synth_LoadFloatReg{d2,`5}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderStereoAmp(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderWaveShape;{table,out,in,sampleN,drive}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
!__Synth_LoadFloatReg{d1,`5}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderWaveShape(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderDistorsion;{table,out,in,sampleN,drive}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
!__Synth_LoadFloatReg{d1,`5}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderDistorsion(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderAM;{out,carrier,modulator,sampleN,depth}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
!__Synth_LoadFloatReg{d1,`5}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderAM(a6)
!__SynthBase_RestoreRegs
End Macro

; ======================== FILTER ==========================
NEWTYPE.filter_T
_private_.b[#SIZEOF_FILTER]
End NEWTYPE

Macro synth_InitFilter;{filter,type,samplerate,frequency,resonance}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg d0,`2
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadFloatReg{d2,`4}
!__Synth_LoadFloatReg{d3,`5}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitFilter(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_UpdateFilter;{filter,detune}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_UpdateFilter(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderFilter;{filter,out,in,sampleN}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderFilter(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_GetFilterAttr;{ret.l,filter,attr,valueP}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetFilterAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_SetFilterAttr;{ret.l,filter,attr,value}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_SetFilterAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

; ======================== OSCILLATOR ==========================
NEWTYPE.osc_T
_private_.b[#SIZEOF_OSC]
End NEWTYPE

Macro synth_InitOsc;{osc,wave,samplerate,frequency,phase,gain,mod,moddepth}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg d0,`2
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadFloatReg{d2,`4}
!__Synth_LoadFloatReg{d3,`5}
!__Synth_LoadFloatReg{d4,`6}
!__Synth_LoadIntReg{d5,`7}
!__Synth_LoadFloatReg{d6,`8}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitOsc(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_UpdateOsc;{filter,fmod,amod,mmod}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadFloatReg{d2,`4}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_UpdateOsc(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderOsc;{filter,out,in,sampleN}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderOsc(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_GetOscAttr;{ret.l,filter,attr,valueP}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetOscAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_SetOscAttr;{ret.l,filter,attr,value}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_SetOscAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

; ======================== ENVELOPE ==========================
NEWTYPE.env_T
_private_.b[#SIZEOF_ENV]
End NEWTYPE

Macro synth_InitEnv;{env,d_attack,d_decay,d_sustain,d_release,l_attack,l_decay,l_systain,l_release}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadFloatReg{d2,`4}
!__Synth_LoadFloatReg{d3,`5}
!__Synth_LoadFloatReg{d4,`6}
!__Synth_LoadFloatReg{d5,`7}
!__Synth_LoadFloatReg{d6,`8}
!__Synth_LoadFloatReg{d7,`9}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitEnv(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_GetEnvAttr;{ret.l,env,attr,valueP}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetEnvAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_SetEnvAttr;{ret.l,env,attr,value}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_SetEnvAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_InitEnvLevel;{env,l_attack,l_decay,l_systain,l_release}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadFloatReg{d2,`4}
!__Synth_LoadFloatReg{d3,`5}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitEnvLevel(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_InitEnvDuration;{ret.l,env,d_attack,d_decay,d_sustain,d_release}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadFloatReg{d2,`4}
!__Synth_LoadFloatReg{d3,`5}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitEnvDuration(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_StepEnv;{ret.f,env}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_StepEnv(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnFloat{`1}
End Macro

Macro synth_ReleaseEnv;{env}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_ReleaseEnv(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_ResetEnv;{env}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_ResetEnv(a6)
!__SynthBase_RestoreRegs
End Macro

; ======================== ENSEMBLE ==========================
NEWTYPE.ensemble_T
_private_.b[#SIZEOF_ENSEMBLE]
End NEWTYPE

Macro synth_InitEnsemble;{ensemble,samplerate,mix,detune,shift,feedback}
!__SynthBase_SaveRegs
!__Synth_LoadPtrReg  {a0,`1}
!__Synth_LoadFloatReg{d0,`2}
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadFloatReg{d2,`4}
!__Synth_LoadFloatReg{d3,`5}
!__Synth_LoadFloatReg{d4,`6}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitEnsemble(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_GetEnsembleAttr;{ret.l,ensemble,attr,valueP}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetEnsembleAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_SetEnsembleAttr;{ret.l,ensemble,attr,value}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_SetEnsembleAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_UpdateEnsemble;{ensemble}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_UpdateEnsemble(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderEnsemble;{ensemble,out,in,sampleN}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderEnsemble(a6)
!__SynthBase_RestoreRegs
End Macro

; ======================== TAPDELAY ==========================
NEWTYPE.tapdelay_T
_private_.b[#SIZEOF_TAPDELAY]
End NEWTYPE

Macro synth_InitTapDelay;{tapdelay,samplerate,frequency,feedback,wetmix}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadFloatReg{d2,`4}
!__Synth_LoadFloatReg{d3,`5}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitTapDelay(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_GetTapDelayAttr;{ret.l,tapdelay,attr,valueP}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetTapDelayAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_SetTapDelayAttr;{ret.l,tapdelay,attr,value}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_SetTapDelayAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_UpdateTapDelay;{tapdelay,detune}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_UpdateTapDelay(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderTapDelay;{tapdelay,out,in,sampleN}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderTapDelay(a6)
!__SynthBase_RestoreRegs
End Macro

; ======================== STRING ==========================
NEWTYPE.string_T
_private_.b[#SIZEOF_STRING]
End NEWTYPE

Macro synth_InitString;{string,samplerate,frequency,feedback,pass,highpass,lowpass,stiffness,stifffreq}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadFloatReg{d2,`4}
!__Synth_LoadFloatReg{d3,`5}
!__Synth_LoadFloatReg{d4,`6}
!__Synth_LoadFloatReg{d5,`7}
!__Synth_LoadFloatReg{d6,`8}
!__Synth_LoadFloatReg{d7,`9}
!__Synth_LoadFloatReg{a1,pickuppos}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitString(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_GetStringAttr;{ret.l,string,attr,valueP}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetStringAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_SetStringAttr;{ret.l,string,attr,value}
!__SynthBase_SaveRegs
!__Synth_LoadPtrReg  {a0,`2}
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_SetStringAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_UpdateString;{string,detune}
!__SynthBase_SaveRegs
!__Synth_LoadPtrReg  {a0,`1}
!__Synth_LoadFloatReg{d0,`2}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_UpdateString(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderString;{string,out,in,sampleN}
!__SynthBase_SaveRegs
!__Synth_LoadPtrReg  {a0,`1}
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderString(a6)
!__SynthBase_RestoreRegs
End Macro

; ======================== FLUTE ==========================
NEWTYPE.flute_T
_private_.b[#SIZEOF_FLUTE]
End NEWTYPE

Macro synth_InitFlute;{flute,samplerate,frequency,jet_feedback,jet_harmonic,bore_feedback,bore_harmonic,lowpass,hipass,--gain}
!__SynthBase_SaveRegs
!__Synth_LoadPtrReg  {a0,`1}
!__Synth_LoadFloatReg{d0,`2}
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadFloatReg{d2,`4}
!__Synth_LoadFloatReg{d3,`5}
!__Synth_LoadFloatReg{d4,`6}
!__Synth_LoadFloatReg{d5,`7}
!__Synth_LoadFloatReg{d6,`8}
!__Synth_LoadFloatReg{d7,`9}
!__Synth_LoadFloatReg{a1,gain}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitFlute(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_GetFluteAttr;{ret.l,flute,attr,valueP}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetFluteAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_SetFluteAttr;{ret.l,flute,attr,value}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_SetFluteAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_UpdateFlute;{flute,detune}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_UpdateFlute(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderFlute;{flute,out,in,sampleN}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderFlute(a6)
!__SynthBase_RestoreRegs
End Macro

; ======================== DELAY MATRIX ==========================
NEWTYPE.delaymatrix_T
_private_.b[#SIZEOF_DELAYMATRIX]
End NEWTYPE

Macro synth_InitDelayMatrix;{delaymatrix,samplerate}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitDelayMatrix(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_GetDelayMatrixAttr;{ret.l,delaymatrix,attr,valueP}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetDelayMatrixAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_SetDelayMatrixAttr;{ret.l,delaymatrix,attr,value}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_SetDelayMatrixAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_UpdateDelayMatrix;{delaymatrix,detune}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_UpdateDelayMatrix(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderDelayMatrix;{delaymatrix,out,in,sampleN}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderDelayMatrix(a6)
!__SynthBase_RestoreRegs
End Macro


; ======================== AMPLIFIER ==========================
NEWTYPE.amp_T
_private_.b[#SIZEOF_AMPLIFIER]
End NEWTYPE

Macro synth_InitAmp;{amp,gain,pan,channels}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
!__Synth_LoadFloatReg{d1,`3}
!__Synth_LoadIntReg  {d2,`4}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_InitAmp(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_GetAmpAttr;{ret.l,amp,attr,valueP}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg a1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_GetAmpAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_SetAmpAttr;{ret.l,amp,attr,value}
!__SynthBase_SaveRegs
GetReg a0,`2
GetReg d0,`3
GetReg d1,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_SetAmpAttr(a6)
!__SynthBase_RestoreRegs
!__Synth_ReturnInt{`1}
End Macro

Macro synth_UpdateAmp;{amp,gain,pan}
!__SynthBase_SaveRegs
GetReg a0,`1
!__Synth_LoadFloatReg{d0,`2}
!__Synth_LoadFloatReg{d1,`3}
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_UpdateAmp(a6)
!__SynthBase_RestoreRegs
End Macro

Macro synth_RenderAmp;{amp,out,in,sampleN}
!__SynthBase_SaveRegs
GetReg a0,`1
GetReg a1,`2
GetReg a2,`3
GetReg d0,`4
GetReg a6,*_SynthBase
JSR _LVO_SYNTHBASE_synth_RenderAmp(a6)
!__SynthBase_RestoreRegs
End Macro


; Open/Close Library:
Function.l synthlib_Open{@minVersion.l}
If (*_SynthBase)
  If (minVersion<=*_SynthBase\lib_Version) Then Function Return *_SynthBase
  CloseLibrary_ *_SynthBase : *_SynthBase = 0
End If
If minVersion<0 Then minVersion = 0
*_SynthBase = OpenLibrary_ ("synth.library",minVersion)
If *_SynthBase
  ; (!) Do some other init stuff here...
  !synth_GetAttr{succ.l,Null,0,&size.l}
  If size>SizeOf.synth_T Then error{"synth Newtype too small: "+Str$(SizeOf.synth_T)+", but must be at least "+Str$(size)+" bytes!"}
  !synth_GetFilterAttr{succ.l,Null,0,&size.l}
  If size>SizeOf.filter_T Then error{"filter_T Newtype too small: "+Str$(SizeOf.filter_T)+", but must be at least "+Str$(size)+" bytes!"}
  !synth_GetOscAttr{succ.l,Null,0,&size.l}
  If size>SizeOf.osc_T Then error{"osc_T Newtype too small: "+Str$(SizeOf.osc_T)+", but must be at least "+Str$(size)+" bytes!"}
  !synth_GetEnsembleAttr{succ.l,Null,0,&size.l}
  If size>SizeOf.ensemble_T Then error{"ensemble_T Newtype too small: "+Str$(SizeOf.ensemble_T)+", but must be at least "+Str$(size)+" bytes!"}
  !synth_GetEnvAttr{succ.l,Null,0,&size.l}
  If size>SizeOf.env_T Then error{"env_T Newtype too small: "+Str$(SizeOf.env_T)+", but must be at least "+Str$(size)+" bytes!"}
  !synth_GetTapDelayAttr{succ.l,Null,0,&size.l}
  If size>SizeOf.tapdelay_T Then error{"tapdelay_T Newtype too small: "+Str$(SizeOf.tapdelay_T)+", but must be at least "+Str$(size)+" bytes!"}
  !synth_GetStringAttr{succ.l,Null,0,&size.l}
  If size>SizeOf.string_T Then error{"string_T Newtype too small: "+Str$(SizeOf.string_T)+", but must be at least "+Str$(size)+" bytes!"}
  !synth_GetFluteAttr{succ.l,Null,0,&size.l}
  If size>SizeOf.flute_T Then error{"flute_T Newtype too small: "+Str$(SizeOf.flute_T)+", but must be at least "+Str$(size)+" bytes!"}
  !synth_GetDelayMatrixAttr{succ.l,Null,0,&size.l}
  If size>SizeOf.delaymatrix_T Then error{"delaymatrix_T Newtype too small: "+Str$(SizeOf.delaymatrix_T)+", but must be at least "+Str$(size)+" bytes!"}
  !synth_GetAmpAttr{succ.l,Null,0,&size.l}
  If size>SizeOf.amp_T Then error{"amp_T Newtype too small: "+Str$(SizeOf.amp_T)+", but must be at least "+Str$(size)+" bytes!"}
Else
  If (minVersion>0)
    error{"Unable to open synth.library (v"+Str$(minVersion)+"+)!"}
  Else
    error{"Unable to open synth.library!"}
  End If
End If
Function Return *_SynthBase
End Function

Statement synthlib_Close{}
If *_SynthBase
  ; (!) Do some freeing stuff here that you inited in _SynthBase_Init{}...
  CloseLibrary_ *_SynthBase : *_SynthBase = Null
End If
End Statement
!autoexit{synthlib_Close}


; Wrapper Functions:
; =================================== SYNTH ===============================
Function.synth_T synth_Init{}
  If (synthlib_Open{}) ; (!) put your min version here if needed!
    !synth_Init{*synth.synth_T}
  End If
  Function Return *synth
End Function

Statement synth_Deinit{*synth.synth_T}
  !synth_Deinit{*synth}
End Statement

Function.l FAST synth_RESERVED{a.l,b.l}
  !synth_RESERVED{c.l,a,b}
  Function Return c
End Function

Statement FAST synth_ConvertSampleFormat{*out.l,*in.l,sampleN.l,_format.l}
  !synth_ConvertSampleFormat{*out,*in,sampleN,_format}
End Statement

Statement FAST synth_RenderStereoAmp{*out.l,*in.l,sampleN.l,gain.f,panorama.f}
  !synth_RenderStereoAmp{*out,*in,sampleN,gain,panorama}
End Statement

Statement FAST synth_RenderWaveShape{*table.l,*out.l,*in.l,sampleN.l,drive.f}
  !synth_RenderWaveShape{*table,*out,*in,sampleN,drive}
End Statement

Statement FAST synth_RenderDistorsion{*table.l,*out.l,*in.l,sampleN.l,drive.f}
  !synth_RenderStereoAmp{*table,*out,*in,sampleN,drive}
End Statement

Statement FAST synth_RenderScale{*out.l,*in.l,sampleN.l,gain.f,offset.f}
  !synth_RenderScale{*out,*in,sampleN,gain,offset}
End Statement

Statement FAST synth_RenderMix{*out.l,*in1.l,*in2.l,sampleN.l,gain1.f,gain2.f}
  !synth_RenderMix{*out,*in1,*in2,sampleN,gain1,gain2}
End Statement

Statement FAST synth_RenderAM{*out.l,*carrier.l,*modulator.l,sampleN.l,depth_.f}
  !synth_RenderAM{*out,*carrier,*modulator,sampleN,depth_}
End Statement

Function.l FAST synth_GetSizeOfSample{_format.l}
  !synth_GetSizeOfSample{result.l,_format}
  Function Return result
End Function

Function.l FAST synth_GetAttr{*synth.synth_T,attr.l,*valueP.l}
  !synth_GetAttr{succ.l,*synth,attr,*valueP}
  Function Return succ
End Function

Function.l FAST synth_SetAttr{*synth.synth_T,attr.l,value.l}
  !synth_SetAttr{succ.l,*synth,attr,value}
  Function Return succ
End Function

Function.l FAST synth_SetAttrF{*synth.synth_T,attr.l,value.f}
  !synth_SetAttr{succ.l,*synth,attr,Peek.l(&value)}
  Function Return succ
End Function

; ========================================= FILTER ==============================
Statement FAST synth_InitFilter{*filter_.filter_T,type_.l,samplerate.f,frequency.f,q.f}
  !synth_InitFilter{*filter_,type_,samplerate,frequency,q}
End Statement

Statement FAST synth_UpdateFilter{*filter_.filter_T,detune.f}
  !synth_UpdateFilter{*filter_,detune}
End Statement

Statement FAST synth_RenderFilter{*filter_.filter_T,*out.l,*in.l,sampleN.l}
  !synth_RenderFilter{*filter_,*out,*in,sampleN}
End Statement

Function.l FAST synth_GetFilterAttr{*filter_.filter_T,attr.l,*valueP.l}
  !synth_GetFilterAttr{result.l,*filter_,attr,*valueP}
  Function Return result
End Function

Function.l FAST synth_SetFilterAttr{*filter_.filter_T,attr.l,value.l}
  !synth_SetFilterAttr{result.l,*filter_,attr,value}
  Function Return result
End Function

Function.l FAST synth_SetFilterAttrF{*filter_.filter_T,attr.l,value.f}
  !synth_SetFilterAttr{result.l,*filter_,attr,Peek.l(&value)}
  Function Return result
End Function

; =================================== OSCILLATOR ===============================
Statement synth_InitOsc{*osc.osc_T,wave.l,samplerate.f,frequency.f,phase.f,gain.f,modtype.l,moddepth.f}
  !synth_InitOsc{*osc,wave,samplerate,frequency,phase,gain,modtype,moddepth}
End Statement

Statement FAST synth_UpdateOsc{*osc.osc_T,fmod.f,amod.f,mmod.f}
  !synth_UpdateOsc{*osc,fmod,amod,mmod}
End Statement

Statement FAST synth_RenderOsc{*osc.osc_T,*out.l,*in.l,sampleN.l}
  !synth_RenderOsc{*osc,*out,*in,sampleN}
End Statement

Function.l FAST synth_GetOscAttr{*osc.osc_T,attr.l,*valueP.l}
  !synth_GetOscAttr{result.l,*osc,attr,*valueP}
  Function Return result
End Function

Function.l FAST synth_SetOscAttr{*osc.osc_T,attr.l,value.l}
  !synth_SetOscAttr{result.l,*osc,attr,value}
  Function Return result
End Function

Function.l FAST synth_SetOscAttrF{*osc.osc_T,attr.l,value.f}
  !synth_SetOscAttr{result.l,*osc,attr,Peek.l(&value)}
  Function Return result
End Function

; =================================== ENVELOPE ===============================
Statement FAST synth_InitEnvDuration{*env.env_T,d_attack.f,d_decay.f,d_sustain.f,d_release.f}
  !synth_InitEnvDuration{*env,d_attack,d_decay,d_sustain,d_release}
End Statement

Statement FAST synth_InitEnvLevel{*env.env_T,l_attack.f,l_decay.f,l_sustain.f,l_release.f}
  !synth_InitEnvLevel{*env,l_attack,l_decay,l_sustain,l_release}
End Statement

Statement FAST synth_ResetEnv{*env.env_T}
  !synth_ResetEnv{*env}
End Statement

Statement FAST synth_ReleaseEnv{*env.env_T}
  !synth_ReleaseEnv{*env}
End Statement

Function.f FAST synth_StepEnv{*env.env_T}
  !synth_StepEnv{value.f,*env}
  Function Return value
End Function

Function.l FAST synth_GetEnvAttr{*env.env_T,attr.l,*valueP.l}
  !synth_GetEnvAttr{result.l,*env,attr,*valueP}
  Function Return result
End Function

Function.l FAST synth_SetEnvAttr{*env.env_T,attr.l,value.l}
  !synth_SetEnvAttr{result.l,*env,attr,value}
  Function Return result
End Function

Function.l FAST synth_SetEnvAttrF{*env.env_T,attr.l,value.f}
  !synth_SetEnvAttr{result.l,*env,attr,Peek.l(&value)}
  Function Return result
End Function

; ===================================== ENSEMBLE ===========================
Statement FAST synth_InitEnsemble{*ensemble.ensemble_T,samplerate.f,mix.f,detune.f,shift.f,feedback.f}
  !synth_InitEnsemble{*ensemble,samplerate,mix,detune,shift,feedback}
End Statement

Statement FAST synth_UpdateEnsemble{*ensemble.ensemble_T}
  !synth_UpdateEnsemble{*ensemble}
End Statement

Statement FAST synth_RenderEnsemble{*ensemble.ensemble_T,*out.l,*in.l,sampleN.l}
  !synth_RenderEnsemble{*ensemble,*out,*in,sampleN}
End Statement

Function.l FAST synth_GetEnsembleAttr{*ensemble.ensemble_T,attr.l,*valueP.l}
  !synth_GetEnsembleAttr{result.l,*ensemble,attr,*valueP}
  Function Return result
End Function

Function.l FAST synth_SetEnsembleAttr{*ensemble.ensemble_T,attr.l,value.l}
  !synth_SetEnsembleAttr{result.l,*ensemble,attr,value}
  Function Return result
End Function

Function.l FAST synth_SetEnsembleAttrF{*ensemble.ensemble_T,attr.l,value.f}
  !synth_SetEnsembleAttr{result.l,*ensemble,attr,Peek.l(&value)}
  Function Return result
End Function

; ===================================== TAPDELAY ===========================
Statement FAST synth_InitTapDelay{*tapdelay.tapdelay_T,samplerate.f,frequency.f,feedback.f,pass.f}
  !synth_InitTapDelay{*tapdelay,samplerate,frequency,feedback,pass}
End Statement

Statement FAST synth_UpdateTapDelay{*tapdelay.tapdelay_T,detune.f}
  !synth_UpdateTapDelay{*tapdelay,detune}
End Statement

Statement FAST synth_RenderTapDelay{*tapdelay.tapdelay_T,*out.l,*in.l,sampleN.l}
  !synth_RenderTapDelay{*tapdelay,*out,*in,sampleN}
End Statement

Function.l FAST synth_GetTapDelayAttr{*tapdelay.tapdelay_T,attr.l,*valueP.l}
  !synth_GetTapDelayAttr{result.l,*tapdelay,attr,*valueP}
  Function Return result
End Function

Function.l FAST synth_SetTapDelayAttr{*tapdelay.tapdelay_T,attr.l,value.l}
  !synth_SetTapDelayAttr{result.l,*tapdelay,attr,value}
  Function Return result
End Function

Function.l FAST synth_SetTapDelayAttrF{*tapdelay.tapdelay_T,attr.l,value.f}
  !synth_SetTapDelayAttr{result.l,*tapdelay,attr,Peek.l(&value)}
  Function Return result
End Function

; ===================================== STRING ===========================
Statement FAST synth_InitString{*string.string_T,samplerate.f,frequency.f,feedback.f,pass.f,highpass.f,lowpass.f,stiffness.f,stifffreq.f,pickuppos.f}
  !synth_InitString{*string,samplerate,frequency,feedback,pass,highpass,lowpass,stiffness,stifffreq,pickuppos}
End Statement

Statement FAST synth_UpdateString{*string.string_T,detune.f}
  !synth_UpdateString{*string,detune}
End Statement

Statement FAST synth_RenderString{*string.string_T,*out.l,*in.l,sampleN.l}
  !synth_RenderString{*string,*out,*in,sampleN}
End Statement

Function.l FAST synth_GetStringAttr{*string.string_T,attr.l,*valueP.l}
  !synth_GetStringAttr{result.l,*string,attr,*valueP}
  Function Return result
End Function

Function.l FAST synth_SetStringAttr{*string.string_T,attr.l,value.l}
  !synth_SetStringAttr{result.l,*string,attr,value}
  Function Return result
End Function

Function.l FAST synth_SetStringAttrF{*string.string_T,attr.l,value.f}
  !synth_SetStringAttr{result.l,*string,attr,Peek.l(&value)}
  Function Return result
End Function

; ===================================== FLUTE ===========================
Statement FAST synth_InitFlute{*flute.flute_T,samplerate.f,frequency.f,jet_feedback.f,jet_harmonic.f,bore_feedback.f,bore_harmonic.f,lowpass.f,hipass.f,gain.f}
  ; gain
  !synth_InitFlute{*flute,samplerate,frequency,jet_feedback,jet_harmonic,bore_feedback,bore_harmonic,lowpass,hipass}
End Statement

Statement FAST synth_UpdateFlute{*flute.flute_T,detune.f}
  !synth_UpdateFlute{*flute,detune}
End Statement

Statement FAST synth_RenderFlute{*flute.flute_T,*out.l,*in.l,sampleN.l}
  !synth_RenderFlute{*flute,*out,*in,sampleN}
End Statement

Function.l FAST synth_GetFluteAttr{*flute.flute_T,attr.l,*valueP.l}
  !synth_GetFluteAttr{result.l,*flute,attr,*valueP}
  Function Return result
End Function

Function.l FAST synth_SetFluteAttr{*flute.flute_T,attr.l,value.l}
  !synth_SetFluteAttr{result.l,*flute,attr,value}
  Function Return result
End Function

Function.l FAST synth_SetFluteAttrF{*flute.flute_T,attr.l,value.f}
  !synth_SetFluteAttr{result.l,*flute,attr,Peek.l(&value)}
  Function Return result
End Function

; ===================================== DELAYMATRIX ===========================
Statement FAST synth_InitDelayMatrix{*delaymatrix.delaymatrix_T,samplerate.f}
  !synth_InitDelayMatrix{*delaymatrix,samplerate}
End Statement

Statement FAST synth_UpdateDelayMatrix{*delaymatrix.delaymatrix_T,detune.f}
  !synth_UpdateDelayMatrix{*delaymatrix,detune}
End Statement

Statement FAST synth_RenderDelayMatrix{*delaymatrix.delaymatrix_T,*out.l,*in.l,sampleN.l}
  !synth_RenderDelayMatrix{*delaymatrix,*out,*in,sampleN}
End Statement

Function.l FAST synth_GetDelayMatrixAttr{*delaymatrix.delaymatrix_T,attr.l,*valueP.l}
  !synth_GetDelayMatrixAttr{result.l,*delaymatrix,attr,*valueP}
  Function Return result
End Function

Function.l FAST synth_SetDelayMatrixAttr{*delaymatrix.delaymatrix_T,attr.l,value.l}
  !synth_SetDelayMatrixAttr{result.l,*delaymatrix,attr,value}
  Function Return result
End Function

Function.l FAST synth_SetDelayMatrixAttrF{*delaymatrix.delaymatrix_T,attr.l,value.f}
  !synth_SetDelayMatrixAttr{result.l,*delaymatrix,attr,Peek.l(&value)}
  Function Return result
End Function

; ===================================== AMPLIFIER ===========================
Statement FAST synth_InitAmp{*amp.amp_T,gain.f,panorama.f,channels.l}
  !synth_InitAmp{*amp,gain,panorama,channels}
End Statement

Statement FAST synth_UpdateAmp{*amp.amp_T,gain.f,panorama.f}
  !synth_UpdateAmp{*amp,gain,panorama}
End Statement

Statement FAST synth_RenderAmp{*amp.amp_T,*out.l,*in.l,sampleN.l}
  !synth_RenderAmp{*amp,*out,*in,sampleN}
End Statement

Function.l FAST synth_GetAmpAttr{*amp.amp_T,attr.l,*valueP.l}
  !synth_GetAmpAttr{result.l,*amp,attr,*valueP}
  Function Return result
End Function

Function.l FAST synth_SetAmpAttr{*amp.amp_T,attr.l,value.l}
  !synth_SetAmpAttr{result.l,*amp,attr,value}
  Function Return result
End Function

Function.l FAST synth_SetAmpAttrF{*amp.amp_T,attr.l,value.f}
  !synth_SetAmpAttr{result.l,*amp,attr,Peek.l(&value)}
  Function Return result
End Function

CNIF #__include=0
*synth.synth_T = synth_Init{}
If *synth
; (!) place your built-in demo here
Dim out.f(100)
Dim in1.f(100)
Dim in2.f(100)
in1(0) = 123
in2(0) = 321
gain1.f = 1
gain2.f = 1
sampleN.l = 2
synth_RenderMix{&out(0),&in1(0),&in2(0),sampleN,gain1.f,gain2.f}

a.l = 1
b.l = 2
c.l = synth_RESERVED{a,b}
NPrint "a-b         = ",c

synth_InitString{string.string_T,48000,220,0.9,0.5,20000,20,0.4,211,0.123}
synth_GetStringAttr{string,#STRA_Samplerate  ,&value.f} : NPrint "D2/String: samplerate = ",value,"Hz"
synth_GetStringAttr{string,#STRA_Frequency   ,&value.f} : NPrint "D3/String: frequency  = ",value,"Hz"
synth_GetStringAttr{string,#STRA_Feedback    ,&value.f} : NPrint "D4/String: feedback   = ",value
synth_GetStringAttr{string,#STRA_Pass        ,&value.f} : NPrint "D5/String: pass       = ",value
synth_GetStringAttr{string,#STRA_LowPassFreq ,&value.f} : NPrint "D6/String: low pass   = ",value,"Hz"
synth_GetStringAttr{string,#STRA_HighPassFreq,&value.f} : NPrint "D7/String: high pass  = ",value,"Hz"
synth_GetStringAttr{string,#STRA_Stiffness   ,&value.f} : NPrint "A1/String: stiffness  = ",value
synth_GetStringAttr{string,#STRA_StiffFreq   ,&value.f} : NPrint "A2/String: stiff freq = ",value,"Hz"
synth_GetStringAttr{string,#STRA_PickUpPos   ,&value.f} : NPrint "A3/String: pickpos    = ",value

Else
  NPrint "Unable to open lib!"
EndIf
End

CEND


