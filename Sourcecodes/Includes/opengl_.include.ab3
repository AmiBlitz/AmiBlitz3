; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "/Bin"
; ExeFile         = "GLDemo"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 2000
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 10
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 9
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 1
; Max Sound       = 1
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 1
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max ChunkyBuffer= 2
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: opengl.include                                                        /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 05/10/2007                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
XINCLUDE "opengl_.definitions.ab3"

CNIF @#maxobjects=0
#maxobjects=1000
CEND


NEWTYPE .obj
texnum.l
mode.b          ;mode=1 =image 2=sphere
width.l
height.l
texx.f
texy.f
texw.f
texh.f
*objdat.l
End NEWTYPE

NEWTYPE .quad
width.f
height.f
depth_.f
texfront.l
texback.l
textop.l
texbuttom.l
texleft.l
texright.l
End NEWTYPE

NEWTYPE .globaldat
xsize.l
ysize.l
zsize.l
reversey.b
scalx.f
scaly.f
scalz.f
_red.f
_green.f
_blue.f
bytetof.f
fonttpl.l
tilewidth.l
tileheight.l
textposx.f
textposy.f
fontobjectnum.l
fontscale.f
textred.f
textgreen.f
textblue.f
alpha.f
*quadric.l
slices.w
stacks.w
End NEWTYPE

SHARED gl_globaldata.globaldat
Dim ogl_objectstruct.obj (#maxobjects)
SHARED ogl_objectstruct ()

NEWTYPE .fv
r.f
g.f
b.f
a.f
End NEWTYPE

CNIF #__include=0
OPTIMIZE 7
SYNTAX 2
CEND
XINCLUDE "image.include.ab3"
gl_globaldata\bytetof=1/255


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_quit {}                                                          /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_quit{}
SHARED *ogl_mesa.l
USEPATH gl_globaldata
USEPATH2 ogl_objectstruct(objectnum)
If \quadric Then gluDeleteQuadric_ \quadric
glDeleteLists_ 1,#maxobjects
AmigaMesaDestroyContext_ *ogl_mesa
End Statement
!autoexit{gl_quit}
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_init {width.l,height.l,dep.l,win.l}                              /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - width.l    : ???                                                          /
;/ - height.l    : ???                                                         /
;/ - dep.l    : ???                                                            /
;/ - win.l    : ???                                                            /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_init{width.l,height.l,dep.l,win.l} ;win =0 is fullscreen or a address to win

SHARED *ogl_mesa
 Screen 0,0,0,width,height,dep,0,"",0,1
 If win=0
 Window 0,0,0,width,height,$100f,"test",0,1 ;gimmezerozero $400 for win borders
 *ogl_mesa=AmigaMesaCreateContext_(Tags(#AMA_WINDOW,Peek.l(Addr Window(Used Window)),@@
                          #AMA_FULLSCREEN,1,@@
                          #AMA_DOUBLEBUF,1,@@
                          #AMA_ALPHAFLAG,1,@@
                          #AMA_DIRECTRENDER,0))
 Else
 *ogl_mesa=AmigaMesaCreateContext_(Tags(#AMA_WINDOW,win,@@
                          #AMA_FULLSCREEN,0,@@
                          #AMA_DOUBLEBUF,1,@@
                          #AMA_ALPHAFLAG,1,@@
                          #AMA_DIRECTRENDER,0))
 End If
 If *ogl_mesa=0
 i.l=Request ("cannot create Mesa Contest","Cannot create mesa context","End Program"):End
 End If
 AmigaMesaMakeCurrent_ *ogl_mesa,Peek.l(*ogl_mesa+8)
 glHint_ #GL_PERSPECTIVE_CORRECTION_HINT,#GL_NICEST
 glHint_ #GL_POLYGON_SMOOTH_HINT ,#GL_NICEST
 glMatrixMode_ #GL_PROJECTION;         // Choose Projection Matrix
 glLoadIdentity_;                      // Reset Projection Matrix
 gluPerspective_ 45.0,@@;              // Viewing Angle
                 width/height,@@; // Aspect Ratio
                 0.1,@@ ;         // Can See From This Near
                 1281*4;           // Can See To This Far
 glMatrixMode_ #GL_MODELVIEW

 glLoadIdentity_;
 glShadeModel_ #GL_SMOOTH;            // Smooth-Shaded Polygons
 glClearColor_ 0, 0, 0, 0;   // Set Clear Color
 glClearDepth_ 1.0;                  // Clear Depth Buffer
 glDepthFunc_ #GL_LEQUAL ;            // Type of Depth Testing
 glEnable_ #GL_DEPTH_TEST ;           // Enable Depth Testing

 glEnable_ #GL_BLEND;
 ;glLightModeli_ #GL_LIGHT_MODEL_TWO_SIDE,1
 ;glFrontFace_ #GL_CCW
\quadric=gluNewQuadric_
 gluQuadricTexture_ \quadric,1
 glClear_ #GL_COLOR_BUFFER_BIT |#GL_DEPTH_BUFFER_BIT;
 LightAmbient.fv\r= 0.5, 0.5, 0.5, 1.0 ;    // Ambient Light Values ( NEW )
 LightDiffuse.fv\r= .6, .6, .6, 1.0 ;   // Diffuse Light Values ( NEW )
 LightPosition.fv\r =0.0, 0.0, 2.0, 1.0 ;    // Light Position ( NEW )
 glLightfv_ #GL_LIGHT0, #GL_AMBIENT, LightAmbient;   // Setup The Ambient Light
 glLightfv_ #GL_LIGHT0, #GL_DIFFUSE, LightDiffuse;   // Setup The Diffuse Light
 glLightfv_ #GL_LIGHT0, #GL_POSITION,LightPosition;  // Position The Light
 glEnable_ #GL_LIGHT0
 glEnable_ #GL_LIGHTING
 glEnable_ #GL_COLOR_MATERIAL
 ;glEnable_ #GL_CULL_FACE  used if you dont have 3D Hardware,but inside polygon not visible
gl_globaldata\scalx=1,1,1:gl_globaldata\_red=1,1,1
 \slices=10:\stacks=10
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_light {num.l,@posx.f,@posy.f,@posz.f,@_red.f,@_green.f,@_blue.f} /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - num.l    : ???                                                            /
;/ - posx.f    : ???                                                           /
;/ - posy.f    : ???                                                           /
;/ - posz.f    : ???                                                           /
;/ - _red.f    : ???                                                           /
;/ - _green.f    : ???                                                         /
;/ - _blue.f    : ???                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_light{num.l,@posx.f,@posy.f,@posz.f,@_red.f,@_green.f,@_blue.f};num 0-7 posz 0-3000
glLoadIdentity_
If posx <> -1
     If gl_globaldata\xsize
     posx=posx+gl_globaldata\xsize:posy=gl_globaldata\ysize-posy
     End If
glLightf_  #GL_LIGHT0+num, #GL_SPOT_CUTOFF,40;spotlight_cutoff
glLightf_  #GL_LIGHT0+num, #GL_SPOT_EXPONENT,80;spotlight_exponent
LightPosition.fv\r =posx,posy, posz, 1.0
;glLightfv_ #GL_LIGHT0+num,#GL_SPOT_DIRECTION,spotlightDirection
Else
glLightf_  #GL_LIGHT0+num, #GL_SPOT_CUTOFF,180;spotlight_cutoff
glLightf_  #GL_LIGHT0+num, #GL_SPOT_EXPONENT,0;spotlight_exponent
LightPosition.fv\r =0,0,2, 1.0
End If
If _red=-1 Then _red=255
If _green=-1 Then _green=_red
If _blue=-1 Then _blue=_green


;spotlightDirection.fv\r =posx, posy,0, 1.0
LightAmbient.fv\r= _red*\bytetof,_green*\bytetof,_blue*\bytetof, 1.0 ;    // Ambient Light Values ( NEW )
LightDiffuse.fv\r= _red*\bytetof,_green*\bytetof,_blue*\bytetof,1 ;   // Diffuse Light Values ( NEW )
specularLight.fv\r= 1, 1,1, 1.0

glLightfv_ #GL_LIGHT0+num,#GL_SPECULAR,specularLight

glLightfv_ #GL_LIGHT0+num, #GL_AMBIENT, LightAmbient;   // Setup The Ambient Light
glLightfv_ #GL_LIGHT0+num, #GL_DIFFUSE, LightDiffuse;   // Setup The Diffuse Light
glLightfv_ #GL_LIGHT0+num, #GL_POSITION,LightPosition;  // Position The Light


glEnable_ #GL_LIGHT0+num

End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_color {r.f,@g.f,@b.f}                                            /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - r.f    : ???                                                              /
;/ - g.f    : ???                                                              /
;/ - b.f    : ???                                                              /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement FAST gl_color {r.f,@g.f,@b.f};set color from 0-255 r par mean r to g and b
If g=-1 Then g=r
If b=-1 Then b=g
\_red=r*\bytetof,g*\bytetof,b*\bytetof
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_textcolor {r.f,@g.f,@b.f,@transparency.f}                        /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - r.f    : ???                                                              /
;/ - g.f    : ???                                                              /
;/ - b.f    : ???                                                              /
;/ - transparency.f    : ???                                                   /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement FAST gl_textcolor {r.f,@g.f,@b.f,@transparency.f};set color from 0-255 r par mean r to g and b
If g=-1 Then g=r
If b=-1 Then b=g
\textred=r*\bytetof,g*\bytetof,b*\bytetof
End Statement
 



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_scale {x.f,@y.f,@z.f}                                            /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - x.f    : ???                                                              /
;/ - y.f    : ???                                                              /
;/ - z.f    : ???                                                              /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_scale {x.f,@y.f,@z.f};scale only x par mean x y and z same
If y=-1 Then y=x
If z=-1 Then z=y
\scalx=x,y,z
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_2dview {x.l,y.l}                                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - x.l    : ???                                                              /
;/ - y.l    : ???                                                              /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_2dview {x.l,y.l};set size of view or 0 for default ogl view (zero in mid and y- move to buttom)

gl_globaldata\xsize=(-x/2):gl_globaldata\zsize=-x:gl_globaldata\ysize=y/2
;gl_globaldata\reversey=reversey
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_texcoord {objectnum.l,x.f,y.f,width.f,height.f}                  /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - objectnum.l    : ???                                                      /
;/ - x.f    : ???                                                              /
;/ - y.f    : ???                                                              /
;/ - width.f    : ???                                                          /
;/ - height.f    : ???                                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_texcoord {objectnum.l,x.f,y.f,width.f,height.f}
\\texx=x/(\\width*2)
\\texy=y/(\\height*2)
\\texw=width/(\\width*2)+\\texx
\\texh=height/(\\height*2)+\\texy
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_texmode {@mode.l}                                                /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mode.l    : ???                                                           /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_texmode {@mode.l};1 nearest 2 linear 3 sperical (or ogl constants #GL_xxxx)
If mode=1 Then mode=#GL_NEAREST:
If mode=2 Then mode=#GL_LINEAR
If mode=3
glTexGeni_ #GL_S,#GL_TEXTURE_GEN_MODE,#GL_SPHERE_MAP ; // Set The Texture Generation Mode For S To Sphere Mapping (New)
glTexGeni_ #GL_T,#GL_TEXTURE_GEN_MODE,#GL_SPHERE_MAP
glEnable_ #GL_TEXTURE_GEN_S ;                                 // Enable Texture Coord Generation For S (New)
glEnable_ #GL_TEXTURE_GEN_T ;                                 // Enable Texture Coord Generation For T (New)
mode=#GL_LINEAR
Else
glDisable_ #GL_TEXTURE_GEN_S ;                    Enable Texture Coord Generation For S (New)
glDisable_ #GL_TEXTURE_GEN_T;
End If

glTexParameteri_ #GL_TEXTURE_2D,@@         ;     // Set 2D Texture Parameter
        #GL_TEXTURE_MIN_FILTER,@@;      // Select Minification Filter Type
                mode;            ;      // Set To GL_NEAREST (Blocky & Fastest)
glTexParameteri_ #GL_TEXTURE_2D,@@         ;     // Set 2D Texture Parameter
        #GL_TEXTURE_MAG_FILTER,@@ ;     // Select Magnification Filter Type
                mode;                    // Set To GL_LINEAR (Smoothest & Slowest)

End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_reset {}                                                         /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_reset {};set color from 0-255 r par mean r to g and b
gl_globaldata\scalx=1,1,1:gl_globaldata\_red=1,1,1
gl_texmode {2}
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_sphere {objectnum.l,width.f,@texturenum.l,@slices.l,@stacks.l}   /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - objectnum.l    : ???                                                      /
;/ - width.f    : ???                                                          /
;/ - texturenum.l    : ???                                                     /
;/ - slices.l    : ???                                                         /
;/ - stacks.l    : ???                                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_sphere {objectnum.l,width.f,@texturenum.l,@slices.l,@stacks.l};texture can set if that is not objectnum
\\mode=2
If slices=-1 Then slices=\slices
If stacks=-1 Then stacks=\stacks
\\texnum=texturenum+1
ogl_objectstruct(objectnum)\width=ogl_objectstruct(texturenum)\width
glDeleteLists_ objectnum+1,1
glNewList_ objectnum+1,#GL_COMPILE
gluSphere_ \quadric,width,slices,stacks
glEndList_

End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_quad {objectnum.l,width.f,height.f,depth_.f,texfront.f,@texbac:: /
;/ k.l,@textop.l,@texbuttom.l,@texleft.l,@texright.l}                          /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - objectnum.l    : ???                                                      /
;/ - width.f    : ???                                                          /
;/ - height.f    : ???                                                         /
;/ - depth_.f    : ???                                                         /
;/ - texfront.f    : ???                                                       /
;/ - texback.l    : ???                                                        /
;/ - textop.l    : ???                                                         /
;/ - texbuttom.l    : ???                                                      /
;/ - texleft.l    : ???                                                        /
;/ - texright.l    : ???                                                       /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_quad {objectnum.l,width.f,height.f,depth_.f,texfront.f,@texback.l,@textop.l,@texbuttom.l,@texleft.l,@texright.l};texture can set if that is not objectnum
\\mode=3
If texback=-1 Then texback=texfront
If textop=-1 Then textop=texback
If texbuttom=-1 Then texbuttom=texback
If texleft=-1 Then texleft=texbuttom
If texright=-1 Then texright=texleft
FreeMem \\objdat,0
\\objdat=AllocMem (SizeOf.quad,0)
*ptr.quad=\\objdat
*ptr\width=width,height,depth_
*ptr\texfront=texfront,texback,textop,texbuttom,texleft,texright

End Statement
 


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_cylinder {objectnum.l,height.f,baseradius.f,@topradius.f,@text:: /
;/ urenum.l,@slices.l,@stacks.l}                                               /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - objectnum.l    : ???                                                      /
;/ - height.f    : ???                                                         /
;/ - baseradius.f    : ???                                                     /
;/ - topradius.f    : ???                                                      /
;/ - texturenum.l    : ???                                                     /
;/ - slices.l    : ???                                                         /
;/ - stacks.l    : ???                                                         /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_cylinder {objectnum.l,height.f,baseradius.f,@topradius.f,@texturenum.l,@slices.l,@stacks.l};texture can set if that is not objectnum
\\mode=2
If slices=-1 Then slices=\slices
If stacks=-1 Then stacks=\stacks
If topradius=-1 Then topradius=baseradius
\\texnum=texturenum+1
ogl_objectstruct(objectnum)\width=ogl_objectstruct(texturenum)\width
glDeleteLists_ objectnum+1,1
glNewList_ objectnum+1,#GL_COMPILE
gluCylinder_  \quadric,baseradius,topradius,height,slices,stacks
glEndList_
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_usefont {objectnum.l,tilewidth.l,tileheight.l,@scal.f}           /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - objectnum.l    : ???                                                      /
;/ - tilewidth.l    : ???                                                      /
;/ - tileheight.l    : ???                                                     /
;/ - scal.f    : ???                                                           /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_usefont {objectnum.l,tilewidth.l,tileheight.l,@scal.f}
;% {objectnum.l,tilewidth.l,tileheight.l,@scal.f}
;% Statement allow to use a image for Text or Game Tile Blitting
;% tilewidth = the width of each tile
;% tilehight = the height of each tile
;% Width must fit exact tilewidth.The tiles per row is calculate automatic
;% the first tile has the number 32
;%-------------
;% gl_usefont{0,32,32}           ;use pic 0 and 32*32 tiles
;% gl_textcolor{200,100,100,100} ;change the color and alpha if you dont like the defaults
;% gl_print{"hello"}
\fonttpl=\\width*2/tilewidth
\tilewidth=tilewidth
\tileheight=tileheight
\fontobjectnum=objectnum
If scal=-1 Then scal=1
\fontscale=scal
\alpha=255:
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_blit {objectnum.l,xval.f,yval.f,@zval.f,@transparency.f,@rotat:: /
;/ ex.f,@rotatey.f,@rotatez.f}                                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - objectnum.l    : ???                                                      /
;/ - xval.f    : ???                                                           /
;/ - yval.f    : ???                                                           /
;/ - zval.f    : ???                                                           /
;/ - transparency.f    : ???                                                   /
;/ - rotatex.f    : ???                                                        /
;/ - rotatey.f    : ???                                                        /
;/ - rotatez.f    : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_blit {objectnum.l,xval.f,yval.f,@zval.f,@transparency.f,@rotatex.f,@rotatey.f,@rotatez.f}
     glLoadIdentity_;                           // Reset Matrix
     If transparency=-1
                   glBlendFunc_ #GL_SRC_ALPHA,#GL_ONE_MINUS_SRC_ALPHA
                   glColor4f_ \_red,\_green,\_blue,1
                   glEnable_(#GL_BLEND)
                   glEnable_(#GL_DEPTH_TEST)
     Else
                     glColor4f_ \_red,\_green,\_blue,transparency*\bytetof
                     glBlendFunc_ #GL_SRC_ALPHA,1
                    glEnable_(#GL_BLEND)
                    glEnable_(#GL_DEPTH_TEST)
     End If
       If ogl_objectstruct(objectnum)\width <> 0
          glEnable_ #GL_TEXTURE_2D;
          glBindTexture_ #GL_TEXTURE_2D,@@        ;        // Bind/Select A 2D Texture
                      ogl_objectstruct(objectnum)\texnum; // Bind/Select Second Texture
       Else

             glDisable_ #GL_TEXTURE_2D;
       End If

     If zval=-1 Then zval=0
     If gl_globaldata\xsize
          glTranslatef_ xval+gl_globaldata\xsize ,gl_globaldata\ysize -yval,zval+gl_globaldata\zsize+21
       If \\mode=1
          scx.f=\scalx*ogl_objectstruct(objectnum)\width
          scy.f= \scaly*ogl_objectstruct(objectnum)\height
       End If

       If \\mode=2
           glScalef_ \scalx, \scaly,\scalz
       End If

       If \\mode=3
        *quaddat.quad=\\objdat
        scx.f=\scalx* *quaddat\width
        scy.f= \scaly* *quaddat\height
        scz.f= \scalz* *quaddat\depth_
       End If
     Else
          glTranslatef_ xval,yval,zval ;
             glScalef_ \scalx, \scaly,\scalz

     End If

     If rotatex<>-1
          glRotatef_ rotatex, 1.0, 0.0, 0.0;         // Rotate Around Y-Axis
     End If
      If rotatey<>-1
           glRotatef_ rotatey, 0.0, 1.0, 0.0;         // Rotate Around Y-Axis
      End If
                                                                                                                                                                                                                                                     
     If rotatez<>-1
     glRotatef_ rotatez, 0.0, 0.0, 1.0;         // Rotate Around Y-Axis
     End If
Select \\mode

Case 1

          ;/********************************************
          ;As stated in the accompanying tutorial
          ;  (AND To refresh your mind...;)), the
          ;  texture coordinates are set up like so:

          ;  (0,1)           (1,1)
          ;    +---------------+
          ;     |               |
          ;     |               |
          ;     | My Texture... |
          ;     |               |
          ;     |               |
          ;     |               |
          ;     +---------------+
          ;(0,0)           (1,0)


          ;These coordinates are what you Use inside
          ;  glTexCoord2f().


        glBegin_ #GL_QUADS;                               // I Want � Draw A Quadrilateral!...:)
            glTexCoord2f_ \\texx,\\texh;                 //
            glVertex3f_ -1*scx,-1.0*scy, 0;

            glTexCoord2f_ \\texw, \\texh ;                 // Upper Right Of Texture
            glVertex3f_ 1.0*scx,-1.0*scy, 0;

            glTexCoord2f_ \\texw, \\texy  ;               // Upper Left Of Texture
            glVertex3f_ 1.0*scx,1.0*scy,0

            glTexCoord2f_ \\texx, \\texy  ;                // Lower Left Of Texture
            glVertex3f_ -1.0*scx,1.0*scy, 0.0
       glEnd_
Case 2
   ;gluSphere_ \quadric,100,10,10
   glCallList_ objectnum+1
Case 3
      ;// Top Face
                glEnable_ #GL_TEXTURE_2D;

                glBindTexture_ #GL_TEXTURE_2D,*quaddat\texfront+1        ;        // Bind/Select A 2D Texture
            glBegin_ #GL_QUADS;
               ;front face


       ;  top face

               glNormal3f_  0.0, 1.0, 0.0;
               glTexCoord2f_ 0.0, 1.0: glVertex3f_ -1.0*scx,  1.0*scy, -1.0*scz;
               glTexCoord2f_ 0.0, 0.0: glVertex3f_-1.0*scx,  1.0*scy,  1.0*scz;
               glTexCoord2f_ 1.0, 0.0: glVertex3f_ 1.0*scx,  1.0*scy,  1.0*scz;
               glTexCoord2f_ 1.0, 1.0: glVertex3f_ 1.0*scx,  1.0*scy, -1.0*scz;
;
;      ;         // Bottom Face
               glNormal3f_ 0.0,-1.0, 0.0
               glTexCoord2f_ 1.0, 1.0:glVertex3f_ -1.0*scx, -1.0*scy, -1.0*scz
               glTexCoord2f_ 0.0, 1.0:glVertex3f_ 1.0*scx, -1.0*scy, -1.0*scz
               glTexCoord2f_ 0.0, 0.0:glVertex3f_  1.0*scx, -1.0*scy,  1.0*scz
               glTexCoord2f_ 1.0, 0.0:glVertex3f_ -1.0*scx, -1.0*scy,  1.0*scz
;
;      ;         // Right face
               glNormal3f_ 1.0, 0.0, 0.0
               glTexCoord2f_ 1.0, 0.0: glVertex3f_ 1.0*scx, -1.0*scy, -1.0*scz
               glTexCoord2f_ 1.0, 1.0: glVertex3f_ 1.0*scx,  1.0*scy, -1.0*scz
               glTexCoord2f_ 0.0, 1.0: glVertex3f_ 1.0*scx,  1.0*scy,  1.0*scz
               glTexCoord2f_ 0.0, 0.0: glVertex3f_ 1.0*scx, -1.0*scy,  1.0*scz
;
;      ;         // Left Face
               glNormal3f_ -1.0, 0.0, 0.0
               glTexCoord2f_ 0.0, 0.0: glVertex3f_ -1.0*scx, -1.0*scy, -1.0*scz
               glTexCoord2f_ 1.0, 0.0: glVertex3f_ -1.0*scx, -1.0*scy,  1.0*scz
               glTexCoord2f_ 1.0, 1.0: glVertex3f_ -1.0*scx,  1.0*scy,  1.0*scz
               glTexCoord2f_ 0.0, 1.0: glVertex3f_ -1.0*scx,  1.0*scy, -1.0*scz

  glNormal3f_  0.0, 0.0, 1.0
  glTexCoord2f_ 0.0, 0.0: glVertex3f_ -1.0*scx, -1.0*scy,  1.0*scz
  glTexCoord2f_ 1.0, 0.0: glVertex3f_  1.0*scx, -1.0*scy,  1.0*scz
  glTexCoord2f_ 1.0, 1.0: glVertex3f_  1.0*scx,  1.0*scy,  1.0*scz
  glTexCoord2f_ 0.0, 1.0: glVertex3f_ -1.0*scx,  1.0*scy,  1.0*scz
;                ;// Back Face
  glNormal3f_  0.0, 0.0,-1.0
  glTexCoord2f_ 1.0, 0.0: glVertex3f_ -1.0*scx, -1.0*scy, -1.0*scz
  glTexCoord2f_ 1.0, 1.0: glVertex3f_ -1.0*scx,  1.0*scy, -1.0*scz
  glTexCoord2f_ 0.0, 1.0: glVertex3f_  1.0*scx,  1.0*scy, -1.0*scz
  glTexCoord2f_ 0.0, 0.0 :glVertex3f_ 1.0*scx, -1.0*scy, -1.0*scz

         glEnd_
End Select
  gl_reset{}
  \\texw=1:\\texh=1:\\texx=0:\\texy=0
End Statement

;Statement gl_blit {objectnum.l,xval.f,yval.f,@zval.f,@transparency.f,@rotatex.f,@rotatey.f,@rotatez.f}
;gl_blitk {objectnum.l,xval.f,yval.f,@zval.f,@transparency.f,@rotatex.f,@rotatey.f,@rotatez.f}
;
;
;End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_print {a$,@xpos.f,@ypos.f,@scal.f}                               /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - a$    : ???                                                               /
;/ - xpos.f    : ???                                                           /
;/ - ypos.f    : ???                                                           /
;/ - scal.f    : ???                                                           /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_print {a$,@xpos.f,@ypos.f,@scal.f}
If xpos <> -1 Then \textposx=xpos
If ypos <> -1 Then \textposy=ypos
If \fonttpl=0 Then Statement Return
If scal=-1 Then scal=\fontscale
For i.l = 1 To StrLen (a$)
c.l=Asc(Mid$(a$,i,1))
c-32
row.l=c/\fonttpl
col.l=c-(row*\fonttpl)
gl_texcoord {\fontobjectnum,col*\tilewidth,row*\tileheight,\tilewidth-4,\tileheight-4}
xscale.f=1/(ogl_objectstruct(\fontobjectnum)\width*2/\tilewidth)*scal
yscale.f=1/(ogl_objectstruct(\fontobjectnum)\height*2/\tileheight)*scal
gl_scale {xscale,yscale}
\_red=\textred,\textgreen,\textblue
gl_blit {\fontobjectnum,\textposx+(\tilewidth*0.5*scal),\textposy+(\tileheight*0.5/(1/scal)),0,\alpha}
\textposx+(\tilewidth*scal)
Next
ogl_objectstruct(\fontobjectnum)\texx=0,0,1,1
End Statement



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_nprint {a$,@xpos.f,@ypos.f,@scal.f}                              /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - a$    : ???                                                               /
;/ - xpos.f    : ???                                                           /
;/ - ypos.f    : ???                                                           /
;/ - scal.f    : ???                                                           /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_nprint {a$,@xpos.f,@ypos.f,@scal.f}
If scal=-1 Then scal=\fontscale
gl_print {a$,xpos,ypos,scal}
\textposy+(\tileheight*scal)+1
\textposx=0
End Statement
 
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: gl_show {}                                                          /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement gl_show{}
SHARED *ogl_mesa
AmigaMesaSwapBuffers_ *ogl_mesa;
gl_reset{}
glClear_ #GL_COLOR_BUFFER_BIT |#GL_DEPTH_BUFFER_BIT;
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = gl_load {objectnum.l,a$,@trgb.l}                        /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - objectnum.l    : ???                                                      /
;/ - a$    : ???                                                               /
;/ - trgb.l    : ???                                                           /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l gl_load {objectnum.l,a$,@trgb.l};option par of mask
 SHARED imagedat(),ogl_objectstruct()
;USEPATH ogl_objectstruct(imagenum)
 ret.l=image_Load {#max_images-1,a$}
 If ret
     glGenTextures_ 1,&ogl_objectstruct(objectnum)\texnum;       // Generate Texture ID
     glBindTexture_ #GL_TEXTURE_2D,@@       ;        // Bind/Select A 2D Texture
                    \\texnum; // Bind/Select First Texture
     width.l =imagedat(#max_images-1)\bpr ; image_GetWidth{#max_images-1}
     height.l=image_GetHeight{#max_images-1}
     \\width=width/2
     \\height=height/2
     \\texx=0
     \\texy=0
     \\texw=1
     \\texh=1
     \\mode=1

     glTexParameteri_ #GL_TEXTURE_2D,@@         ;     // Set 2D Texture Parameter
             #GL_TEXTURE_MIN_FILTER,@@;      // Select Minification Filter Type
             #GL_LINEAR;            ;      // Set To GL_NEAREST (Blocky & Fastest)
     glTexParameteri_ #GL_TEXTURE_2D,@@         ;     // Set 2D Texture Parameter
             #GL_TEXTURE_MAG_FILTER,@@ ;     // Select Magnification Filter Type
             #GL_LINEAR;                    // Set � GL_LINEAR (Smoothest & Slowest)

     ;glEnable_ #GL_TEXTURE_2D;
     *texP.b = image_GetOpenGLTexturePtr{#max_images-1}
     glTexImage2D_ #GL_TEXTURE_2D, 0, 4,width,height, 0, #GL_RGBA, #GL_UNSIGNED_BYTE, *texP
;     gluBuild2DMipmaps_ #GL_TEXTURE_2D,@@;            // Texture Is A 2D Texture
;                              3,@@;                        // 3 Means "RGB" Texture...=)
;                              width,@@ ;           // BitMap's Width
;                              height,@@ ;           // BitMap's Height
;                      #GL_RGBA,@@          ;         // BitMap Is RGB Format
;                      #GL_UNSIGNED_BYTE,@@;         // Type Of Data Each Pixel Is Stored
;                              res3 ;         // BitMap Data
     image_Free {#max_images-1}
 End If
 Function Return ret
 End Function

CNIF #__include=0
;Amiblitz 2 test for opengl
SYNTAX 2  ;the relax declare mode
OPTIMIZE 7:

WBStartup


.begin
width.l=640:height.l=480
gl_init{width,height,32,0}  ;the screen open
gl_2dview{640,480}        ;need to set coord leftedge=0 rightedge=640 and hold size of pics
                          ;depent on this resolution
                          ;topedge=0 and buttom edge=480
                          ;on default ogl use leftedge=-1 rightedge+1 top +1 buttom -1

gl_load {0,"/Data/pattern"}
gl_load {1,"/Data/ball64x64",0}
gl_load {2,"/Data/opengl/reflect.jpg",0}
gl_load {3,"/data/opengl/times32.png",0}
gl_sphere {4,40,0,15,15}    ;create the sphere at beginning for more speed.But possible on all place
gl_cylinder{5,110,30,50,0,15,15}    ;a cylinder with texture 0
gl_cylinder{6,110,30,50,2,15,15}    ;another cylinder for the reflection with texture2
gl_quad{7,50,50,50,0}
gl_quad{8,50,50,50,2}
.startvals
zval.f=0:xval.f=320:yval.f=240:trans.f=255:yvallight.f=yval:rot.f=6:tsize.f=1:rot.f=84
Repeat
ev.l=Event
Select ev
 Case #IDCMP_RAWKEY
     Select EventCode
     Case $4e
     xval+10
     Case $4f
     xval-10
     Case $4c
     yval-10
     Case $4d
     yval+10
     Case $13
     rot.f+6
     Case $45
     ev=#IDCMP_CLOSEWINDOW
     End Select
 Select EventVanillaKey
          Case @"q"
          zval-10
          Case @"a"
          zval+10
          Case @"t"
          trans.f+10
          Case @"g"
          trans.f-10
          Case @"m"
          tpos.l+2
          Case @"Q"
          yvallight.f-10
          Case @"A"
          yvallight+10
          Case @"s"
          tsize.f*1.01
          Case @"S"
          tsize.f*0.99

          ;Case @"r"
          ;rot.f+6
 End Select
End Select
FlushEvents
;If light Then glEnable_ #GL_LIGHTING: Else glDisable_ #GL_LIGHTING


;this example Show all what is possible with that 3dlib
gl_blit{0,xval,yval} ;simple blit a image
gl_light{ 0,320,yvallight,0,255,255,160} ;switch on a yellow spotlight
gl_color{255,150,150}         ;tint texture red
    ;blit this image
gl_texcoord{0,tpos,0,128*tsize,128*tsize} ;for scroll the texture with m key
gl_blit{0,xval+128,yval}      ;and blit


gl_light{0}                   ;now use the default light.
gl_blit{1,200,yval,zval,-1,0,0,rot} ;another image but rotatable -1 mean make that not transparent

;now blit a reflective object
gl_blit{7,xval-128,yval-128,zval,-1,rot+15,rot+15,0}
gl_texmode{3}       ;now switch on the spherical mode for the reflect effect
gl_blit{8,xval-128,yval-128,zval,255,rot+15,rot+15,0} ;blit the reflection map

gl_light{ 0,220,yvallight,0,255,255,160} ;switch on a yellow spotlight for the font

gl_usefont {3,32,32,0.3} ;use picture 3 with 32*32 tile and scale the font by 0.5
gl_textcolor {220,220,220,200} ;we dont want the color of the bitmap
gl_print{"test",48,200}        ;print 2 lines
gl_nprint{" 2. Part"}          ;print 2 lines
gl_textcolor {0,200,255}       ;change color again
gl_print{"This is a line scale to 0.4",65,230,0.4}
gl_light{0}                    ;default light

gl_color{160}           ;make 2. ball a little darker only 1 color mean r g and b is set to 160
gl_scale{2.4,1.0,1.0}   ;size the ball in x
gl_blit{1,300,yval,zval,trans,0,0,rot} ;make the ball transparent choose with g and t
gl_blit{4,300,100,0,-1,rot}

gl_color{255,200,0}
gl_scale{0.3,1,1}
gl_blit{4,320,250,zval,-1,-1,rot,-1}     ;blit another sphere but diffrent color and size


gl_color{140,70,140}                     ;blit a reflective cone
gl_scale{0.5,1,1}
gl_blit{5,180,370,zval,-1,-1,rot,-1}
gl_scale{0.5,1,1}
gl_texmode{3}
gl_blit{6,180,370,zval,255,-1,rot,-1}

gl_texmode{3}
gl_blit{6,320,270,zval,150,-1,rot,-1}    ;blit the transparency cone

gl_nprint{"Key r=Rotate "+Str$(rot),360,0}
gl_nprint{"m=Move Texture",360}
gl_nprint{"s=Size Texture",360}
gl_nprint{"Crsr = move",360}
gl_nprint{"q    = z +",360}
gl_nprint{"a    = z -",360}
gl_nprint{"Q    = Light y +",360}
gl_nprint{"A    = Light y -",360}


Delay_ 1
gl_show {}  ;show the render and clear all realtime effects (it call gl_reset)
Until ev=#IDCMP_CLOSEWINDOW

End
CEND
