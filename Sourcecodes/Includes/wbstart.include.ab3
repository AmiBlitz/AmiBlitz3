; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram Disk:"
; ExeFile         = "test"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 2
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 80000
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 28
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max ChunkyBuffer= 2
; /XTRA
; wbstart.include automatically generated by FD2Include (Thilo Koehler)
; create to get rid of the bugged wbstart.library1 blitzlib  tomsmart1
; this fix startup problems if wbstart.library is not present on the system !

CNIF #__include=0
SYNTAX 4
OPTIMIZE 5
CEND

XINCLUDE "error.include.ab3"

; Library offsets:
#_LVO_WBSTARTBASE_WBStartTagList = -36

SHARED *_WBStartBase.Library

; Helper Macros:
Macro __WBStartBase_SaveRegs
MOVE.l a4,-(a7) : MOVE.l a5,-(a7) : MOVE.l a6,-(a7) : MOVE.l d7,-(a7)
End Macro

Macro __WBStartBase_RestoreRegs
MOVE.l (a7)+,d7 : MOVE.l (a7)+,a6 : MOVE.l (a7)+,a5 : MOVE.l (a7)+,a4
End Macro


Macro WBStartTagList;{ret.l,tags}
!__WBStartBase_SaveRegs
GetReg a0,`2
GetReg a6,*_WBStartBase
JSR _LVO_WBSTARTBASE_WBStartTagList(a6)
!__WBStartBase_RestoreRegs
`1 = PutRegD0
End Macro


; Open/Close Library:
Function.l wbstart_OpenLib{@minVersion.l}
If (*_WBStartBase)
  If (minVersion<=*_WBStartBase\lib_Version) Then Function Return *_WBStartBase
  CloseLibrary_ *_WBStartBase : *_WBStartBase = 0
End If
If minVersion<0 Then minVersion = 0
*_WBStartBase = OpenLibrary_ ("wbstart.library",minVersion)
If *_WBStartBase
  ; (!) Do some other init stuff here...
Else
  If (minVersion>0)
    error{"Unable to open wbstart.library (v"+Str$(minVersion)+"+)!"}
  Else
    error{"Unable to open wbstart.library!"}
  End If
End If
Function Return *_WBStartBase
End Function

Statement wbstart_CloseLib{}
If *_WBStartBase
  ; (!) Do some freeing stuff here that you inited in _WBStartBase_Init{}...
  CloseLibrary_ *_WBStartBase : *_WBStartBase = 0
End If
End Statement
!autoexit{wbstart_CloseLib}


; Wrapper Functions:
Function.l wbstart_TagList{_tags.l}
If (wbstart_OpenLib{2}) ; (!) put your min version here if needed!
  !WBStartTagList{result.l,_tags}
End If
Function Return result
End Function



