; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 9
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 9
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max ChunkyBuffer= 2
; /XTRA
#_AllocPotBits = -6
#_FreePotBits  = -12
#_WritePotgo   = -18

SHARED *potgoBase.Library
*potgoBase  = 0

Function.w potgo_AllocPotBits{mask.w}
  SHARED *potgoBase
  If *potgoBase=0 Then Function Return 0

  CLR.l d0
  GetRegD0 mask,*potgoBase
  MOVEM.l D6-D7/A4-A6,-(A7)
  MOVE.l d1,A6
  JSR _AllocPotBits(A6)
  MOVEM.l (A7)+,D6-D7/A4-A6
  mask = PutRegD0

Function Return mask
End Function


Statement potgo_FreePotBits{mask.w}
  SHARED *potgoBase
  If *potgoBase=0 Then Statement Return

  CLR.l d0
  GetRegD0 mask,*potgoBase
  MOVEM.l D6-D7/A4-A6,-(A7)
  MOVE.l d1,A6
  JSR _FreePotBits(A6)
  MOVEM.l (A7)+,D6-D7/A4-A6

End Statement


Statement potgo_WritePotgo{wword.w,mask.w}
  SHARED *potgoBase
  If *potgoBase=0 Then Statement Return

  CLR.l d0
  CLR.l d1
  GetRegD0 wword,mask,*potgoBase
  MOVEM.l D6-D7/A4-A6,-(A7)
  MOVE.l d2,A6
  JSR _WritePotgo(A6)
  MOVEM.l (A7)+,D6-D7/A4-A6

End Statement
 

; note: there is no Close Resource, resources are not closed!
Function.l potgo_Open{}
  SHARED *potgoBase
  If *potgoBase=0
    *potgoBase = OpenResource_("potgo.resource")
  End If
  Function Return *potgoBase
End Function
 

CNIF #__include=0   ; internal demo

NPrint "Opening resource..."

If potgo_Open{}=False Then NPrint "Can't open potgo.resource!":End

mask.w = %1111000000000000

NPrint "Allocating...",Right$(Bin$(mask),16)
allocmask.w = potgo_AllocPotBits{mask}
NPrint "and got......",Right$(Bin$(allocmask),16)

NPrint "Writing..."
potgo_WritePotgo{allocmask,allocmask}

NPrint "Freeing..."
potgo_FreePotBits{allocmask}

NPrint "Done."
End

CEND

