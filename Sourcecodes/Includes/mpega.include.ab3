; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "/Bin"
; ExeFile         = "MpegaDemo"
; CreateIcon      = 1
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 3
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 7
; CursorColumn    = 42
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max ChunkyBuffer= 2
; /XTRA
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Name: mpega.include                                                         /
;/                                                                             /
;/ Platforms: Classic, WinUAE, Amithlon, MorphOS, AmigaOS4                     /
;/                                                                             /
;/ Date: 19/01/2007                                                            /
;/                                                                             /
;/ Author: <unknown>                                                           /
;/                                                                             /
;/ Requirements:  Amiblitz3                                                    /
;/                                                                             /
;/ Purpose:                                                                    /
;/ Extend AB3 functionality.                                                   /
;/ * no description available *                                                /
;/                                                                             /
;/ Abstract:                                                                   /
;/ * no abstract available *                                                   /
;/                                                                             /
;/ User Constants:                                                             /
;/ #max_objects   = n                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
CNIF #__include=0
SYNTAX 2
OPTIMIZE 7
CEND

XINCLUDE "error.include.ab3"

; Library offsets:
#_LVO_MPEGABASE_MPEGA_open         = -30
#_LVO_MPEGABASE_MPEGA_close        = -36
#_LVO_MPEGABASE_MPEGA_decode_frame = -42
#_LVO_MPEGABASE_MPEGA_seek         = -48
#_LVO_MPEGABASE_MPEGA_time         = -54
#_LVO_MPEGABASE_MPEGA_find_sync    = -60
#_LVO_MPEGABASE_MPEGA_scale        = -66

SHARED *_MPEGABase.Library

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !_MPEGA_RescueRegs                                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro _MPEGA_RescueRegs
MOVE.l a5,-(a7) : MOVE.l a6,-(a7) : MOVE.l d7,-(a7)
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !_MPEGA_RestoreRegs                                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro _MPEGA_RestoreRegs
MOVE.l (a7)+,d7 : MOVE.l (a7)+,a6 : MOVE.l (a7)+,a5
End Macro

; Wrapper Macros:
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !_MPEGA_open {ret.l,filename,ctrl}                                  /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - ret.l    : ???                                                            /
;/ - filename    : ???                                                         /
;/ - ctrl    : ???                                                             /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro _MPEGA_open ; {ret.l,filename,ctrl}
GetReg a0,`2
GetReg a1,`3
!_MPEGA_RescueRegs
GetReg a6,*_MPEGABase
JSR _LVO_MPEGABASE_MPEGA_open(a6)
!_MPEGA_RestoreRegs
`1 = PutRegD0
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !_MPEGA_close {ret.l,mpds}                                          /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - ret.l    : ???                                                            /
;/ - mpds    : ???                                                             /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro _MPEGA_close ; {ret.l,mpds}
GetReg a0,`2
!_MPEGA_RescueRegs
GetReg a6,*_MPEGABase
JSR _LVO_MPEGABASE_MPEGA_close(a6)
!_MPEGA_RestoreRegs
`1 = PutRegD0
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !_MPEGA_decode_frame {ret.l,mpds,pcm}                               /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - ret.l    : ???                                                            /
;/ - mpds    : ???                                                             /
;/ - pcm    : ???                                                              /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro _MPEGA_decode_frame ; {ret.l,mpds,pcm}
GetReg a0,`2
GetReg a1,`3
!_MPEGA_RescueRegs
GetReg a6,*_MPEGABase
JSR _LVO_MPEGABASE_MPEGA_decode_frame(a6)
!_MPEGA_RestoreRegs
`1 = PutRegD0
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !_MPEGA_seek {ret.l,mpds,ms_time_position}                          /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - ret.l    : ???                                                            /
;/ - mpds    : ???                                                             /
;/ - ms_time_position    : ???                                                 /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro _MPEGA_seek ; {ret.l,mpds,ms_time_position}
GetReg a0,`2
GetReg d0,`3
!_MPEGA_RescueRegs
GetReg a6,*_MPEGABase
JSR _LVO_MPEGABASE_MPEGA_seek(a6)
!_MPEGA_RestoreRegs
`1 = PutRegD0
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !_MPEGA_time {ret.l,mpds,ms_time_position}                          /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - ret.l    : ???                                                            /
;/ - mpds    : ???                                                             /
;/ - ms_time_position    : ???                                                 /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro _MPEGA_time ; {ret.l,mpds,ms_time_position}
GetReg a0,`2
GetReg a1,`3
!_MPEGA_RescueRegs
GetReg a6,*_MPEGABase
JSR _LVO_MPEGABASE_MPEGA_time(a6)
!_MPEGA_RestoreRegs
`1 = PutRegD0
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !_MPEGA_find_sync {ret.l,buffer,buffer_size}                        /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - ret.l    : ???                                                            /
;/ - buffer    : ???                                                           /
;/ - buffer_size    : ???                                                      /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro _MPEGA_find_sync ; {ret.l,buffer,buffer_size}
GetReg a0,`2
GetReg d0,`3
!_MPEGA_RescueRegs
GetReg a6,*_MPEGABase
JSR _LVO_MPEGABASE_MPEGA_find_sync(a6)
!_MPEGA_RestoreRegs
`1 = PutRegD0
End Macro

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: !_MPEGA_scale {ret.l,mpds,scale_percent}                            /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - ret.l    : ???                                                            /
;/ - mpds    : ???                                                             /
;/ - scale_percent    : ???                                                    /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Macro _MPEGA_scale ; {ret.l,mpds,scale_percent}
GetReg a0,`2
GetReg d0,`3
!_MPEGA_RescueRegs
GetReg a6,*_MPEGABase
JSR _LVO_MPEGABASE_MPEGA_scale(a6)
!_MPEGA_RestoreRegs
`1 = PutRegD0
End Macro


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = mpega_InitLib {@doerror.l,@minVersion.l}                /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - doerror.l    : ???                                                        /
;/ - minVersion.l    : ???                                                     /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l mpega_InitLib {@doerror.l,@minVersion.l}
If *_MPEGABase Then Function Return *_MPEGABase
If minVersion<0 Then minVersion = 0
*_MPEGABase = OpenLibrary_ ("mpega.library",minVersion)
If *_MPEGABase
  ; ** Do some other init stuff here...
Else
  If doerror Then error {"Unable to open mpega.library (v"+Str$(minVersion)+".0+)!"}
End If
Function Return *_MPEGABase
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: mpega_FreeLib {}                                                    /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement mpega_FreeLib {}
If *_MPEGABase
  ; ** Do some freeing stuff here that you inited in _MPEGABase_Init{}...
  CloseLibrary_ *_MPEGABase : *_MPEGABase = 0
End If
End Statement
!autoexit {mpega_FreeLib}

XINCLUDE "dos.include.ab3"

#MPEGA_VERSION = 2

; /* Controls For decoding */

; /* Qualities */
#MPEGA_QUALITY_LOW    = 0
#MPEGA_QUALITY_MEDIUM = 1
#MPEGA_QUALITY_HIGH   = 2

#MPEGA_BSFUNC_OPEN  = 0
#MPEGA_BSFUNC_CLOSE = 1
#MPEGA_BSFUNC_READ  = 2
#MPEGA_BSFUNC_SEEK  = 3


; /* Decoding output settings */

NEWTYPE.MPEGA_OUTPUT
freq_div.w;    /* 1, 2 or 4 */
quality.w;     /* 0 (low) .. 2 (high) */
freq_max.l;    /* for automatic freq_div (if mono_freq_div == 0) */
End NEWTYPE

; /* Decoding layer settings */
NEWTYPE.MPEGA_LAYER
force_mono.w;        /* 1 to decode stereo stream in mono, 0 otherwise */
mono.MPEGA_OUTPUT;      /* mono settings */
stereo.MPEGA_OUTPUT;    /* stereo settings */
End NEWTYPE

; /* Full control structure of MPEG Audio decoding */
NEWTYPE.MPEGA_CTRL
bs_access.l ; Hook;    /* NULL for default access (file I/O) or give your own bitstream access */
layer_1_2.MPEGA_LAYER;     /* Layer I & II settings */
layer_3.MPEGA_LAYER;       /* Layer III settings */
check_mpeg.w;           /* 1 to check for mpeg audio validity at start of stream, 0 otherwise */
stream_buffer_size.l;   /* size of bitstream buffer in bytes (0 -> default size) */
End NEWTYPE

; /* MPEG Audio modes */

#MPEGA_MODE_STEREO   = 0
#MPEGA_MODE_J_STEREO = 1
#MPEGA_MODE_DUAL     = 2
#MPEGA_MODE_MONO     = 3

NEWTYPE.MPEGA_STREAM
norm.w;          /* 1 or 2 */
layer.w;         /* 1..3 */
mode.w;          /* 0..3  (MPEGA_MODE_xxx) */
bitrate.w;       /* in kbps */
frequency.l;     /* in Hz */
channels.w;      /* 1 or 2 */
ms_duration.l;   /* stream duration in ms */
private_bit.w;   /* 0 or 1 */
copyright.w;     /* 0 or 1 */
original.w;      /* 0 or 1 */

;   /* Decoding info according To MPEG control */
dec_channels.w;  /* decoded channels 1 or 2 */
dec_quality.w;   /* decoding quality 0..2 */
dec_frequency.l; /* decoding frequency in Hz */

; /* Private Data */
xhandle.l;
End NEWTYPE

#MPEGA_MAX_CHANNELS = 2     ; // Max channels
#MPEGA_PCM_SIZE     = 1152  ; // Max samples per frame

; /* Error codes */

#MPEGA_ERR_NONE     = 0
#MPEGA_ERR_BASE     = 0
#MPEGA_ERR_EOF      = (#MPEGA_ERR_BASE-1)
#MPEGA_ERR_BADFRAME = (#MPEGA_ERR_BASE-2)
#MPEGA_ERR_MEM      = (#MPEGA_ERR_BASE-3)
#MPEGA_ERR_NO_SYNC  = (#MPEGA_ERR_BASE-4)
#MPEGA_ERR_BADVALUE = (#MPEGA_ERR_BASE-5) ;/* #1 */


NEWTYPE.mpegadat
*mpegahandle.MPEGA_STREAM
is_open.w
err.w
buffer_ptr.l [#MPEGA_MAX_CHANNELS]
buffer_offset.l
buffer_todo.l
seekfpos.l
filelength.l
flength.l
blength.l
showerr.w
End NEWTYPE

CNIF @#max_mpegafile=0
  CNIF @#max_files=0
    #max_mpegafiles = 100
  CELSE
    #max_mpegafiles = #max_files
  CEND
CEND

DEFTYPE.MPEGA_CTRL mpega_ctrl
mpega_ctrl\bs_access = False
mpega_ctrl\layer_1_2\mono\freq_div = 1
mpega_ctrl\layer_1_2\mono\quality  = 2
mpega_ctrl\layer_1_2\mono\freq_max = 96000

mpega_ctrl\layer_3\mono\freq_div = 1
mpega_ctrl\layer_3\mono\quality  = 2
mpega_ctrl\layer_3\mono\freq_max = 96000

mpega_ctrl\layer_1_2\stereo\freq_div = 1
mpega_ctrl\layer_1_2\stereo\quality  = 2
mpega_ctrl\layer_1_2\stereo\freq_max = 96000

mpega_ctrl\layer_3\stereo\freq_div = 1
mpega_ctrl\layer_3\stereo\quality  = 2
mpega_ctrl\layer_3\stereo\freq_max = 96000

mpega_ctrl\layer_1_2\force_mono = False
mpega_ctrl\layer_3\force_mono = False

mpega_ctrl\check_mpeg = 1

mpega_ctrl\stream_buffer_size = 0
Dim mpegadat.mpegadat (#max_mpegafiles)

USEPATH mpegadat(mpega)


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: mpega_Close {mpega.l}                                               /
;/                                                                             /
;/ Description:                                                                /
;/ Close a file opened with mpega_Open.                                        /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : handle returned by mpega_Open                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement mpega_Close {mpega.l}
SHARED mpegadat()
If \mpegahandle Then !_MPEGA_close {succ.l,\mpegahandle}  : \mpegahandle = False
\is_open = False
If \buffer_ptr[0] Then FreeMem_ \buffer_ptr[0],#MPEGA_PCM_SIZE *2  :\buffer_ptr[0] = False
If \buffer_ptr[1] Then FreeMem_ \buffer_ptr[1],#MPEGA_PCM_SIZE *2  :\buffer_ptr[1] = False
End Statement

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: mpega_CloseAll {}                                                   /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement mpega_CloseAll{}
For n.l=0 To #max_mpegafiles-1
  mpega_Close{n}
Next
End Statement
!autoexit{mpega_CloseAll}


#testchunk_size = 32768
;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.w = mpega_Examine {filename.s}                              /
;/                                                                             /
;/ Description:                                                                /
;/ examine if file contains an mpeg stream and return mpeg layer 1, 2 or 3     /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - filename.s    : ???                                                       /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.w mpega_Examine {filename.s}
SHARED mpega_ctrl
mpeglayer.w = 0
If mpega_InitLib{False}
  succ.w = False
  temp.l = AllocVec_(#testchunk_size,#MEMF_CLEAR)
  dos.l = Open_(&filename.s,#MODE_OLDFILE)
  If dos><False AND temp><False
    bread.l= Read_ (dos,temp,#testchunk_size)
    If bread>0
      !_MPEGA_find_sync{err.l,temp,bread}
      If err>=0
        succ.w = True
      End If
    End If
  End If
  If dos Then Close_ dos
  If temp Then FreeVec_ temp : temp=0
  If succ
    !_MPEGA_open {*mpegawrap.MPEGA_STREAM,&filename.s,&mpega_ctrl\bs_access}
    If *mpegawrap
      mpeglayer.w=*mpegawrap\layer
      !_MPEGA_close{ret.l, *mpegawrap}
    End If
  End If
End If
Function Return mpeglayer
End Function



;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.w = mpega_Open {mpega.l,filename.s}                         /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : ???                                                          /
;/ - filename.s    : ???                                                       /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.w mpega_Open {mpega.l,filename.s}
SHARED mpegadat(),mpega_ctrl
If \is_open Then mpega_Close {mpega}
If mpega_InitLib{}
  \filelength = dos_GetFileSize{filename}

  \buffer_ptr[0] = AllocMem_ (#MPEGA_PCM_SIZE*2,0)
  \buffer_ptr[1] = AllocMem_ (#MPEGA_PCM_SIZE*2,0)
  !_MPEGA_open {\mpegahandle  ,&filename.s,&mpega_ctrl\bs_access}
  If \mpegahandle Then \is_open = True:Else mpega_Close {mpega}
  If \is_open = False Then error {"Unable to open MPEG file "+filename.s+"!"}
  \buffer_todo = 0
  \buffer_offset = 0
  \seekfpos = 0
  \err = False
  \showerr=False

  blengthf.f = (\mpegahandle\ms_duration-1)/100.0 * \mpegahandle\frequency / 10.0
  \flength = Int(blengthf)

  maxlength.l = (\filelength / \mpegahandle\bitrate*8)/1000 * \mpegahandle\frequency
  ;error {"MP3 says :"+Str$(\flength)+" samples, file length estimation :"+Str$(maxlength)+" (@"+Str$(\mpegahandle\bitrate)+"kbps)!"}
  If maxlength<\flength
    ;\flength = maxlength
  End If
  \blength = \flength * 2 * \mpegahandle\channels
Else
  error {"Please install mpega.library !"}
End If
Function Return \is_open
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = mpega_GetByteLength {mpega.l}                           /
;/                                                                             /
;/ Description:                                                                /
;/  error {"MP3 says :"+Str$(\flength)+" samples, file length estimation :"+:: /
;/ Str$(maxlength)+" (@"+Str$(\mpegahandle\bitrate)+"kbps)!"}                  /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : ???                                                          /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l mpega_GetByteLength {mpega.l}
SHARED mpegadat()
Function Return \blength
End Function

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = mpega_GetFrameLength {mpega.l}                          /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : ???                                                          /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l mpega_GetFrameLength {mpega.l}
SHARED mpegadat()
Function Return \flength
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: mpega_ReportErrs {mpega.l,bool.w}                                   /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : ???                                                          /
;/ - bool.w    : ???                                                           /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement mpega_ReportErrs {mpega.l,bool.w}
SHARED mpegadat()
\showerr = bool.w
End Statement

RunErrsOff

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: mpega_JoinMem {source1.l,source2.l,dest.l,count.l}                  /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - source1.l    : ???                                                        /
;/ - source2.l    : ???                                                        /
;/ - dest.l    : ???                                                           /
;/ - count.l    : ???                                                          /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement mpega_JoinMem {source1.l,source2.l,dest.l,count.l}
UNLK a4
MOVE.l d0,a0
MOVE.l d1,a1
MOVE.l d2,a2

joinmemloop:
MOVE.w (a0)+,(a2)+
MOVE.w (a1)+,(a2)+
SUB.l #1,d3
BGT joinmemloop
RTS
End Statement


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax: mpega_Zero {sourceaddr.l,blength.l}                                 /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - sourceaddr.l    : ???                                                     /
;/ - blength.l    : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Statement mpega_Zero {sourceaddr.l,blength.l} ; blength = # of bytes ; ----------
UNLK a4
MOVE.l d0,a0

mpega_zeroloop:
MOVE.b #0,(a0)+
SUB.l #1,d1
BGT mpega_zeroloop

RTS
End Statement

LastRunErrsMode

;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.w = mpega_Read {mpega.l,ptr.l,blength.l}                    /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : ???                                                          /
;/ - ptr.l    : ???                                                            /
;/ - blength.l    : ???                                                        /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.w mpega_Read {mpega.l,ptr.l,blength.l}
SHARED mpegadat()
succ.w = True
*mpegawrap.MPEGA_STREAM = \mpegahandle

scount.l = \buffer_todo
offset.l = \buffer_offset
frsize.l = 2 * *mpegawrap\channels
\seekfpos + blength / frsize
err.w = False
While blength.l>0
  If scount <=0
    !_MPEGA_decode_frame {scount.l,\mpegahandle,&\buffer_ptr[0]}
    offset.l = 0
  End If

  If scount>=0
    blength - (scount * frsize)

    If blength>=0
      If *mpegawrap\channels = 2
        mpega_JoinMem {\buffer_ptr[0]+offset,\buffer_ptr[1]+offset,ptr,scount}
      Else
        CopyMem_ \buffer_ptr[0]+offset,ptr,scount * 2
      End If
      ptr + (scount * frsize)
      scount.l = 0
      offset.l = 0
    Else
      todo.l = ((scount * frsize) + blength) / frsize

      If *mpegawrap\channels = 2
        mpega_JoinMem {\buffer_ptr[0]+offset,\buffer_ptr[1]+offset,ptr,todo}
      Else
        CopyMem_ \buffer_ptr[0]+offset,ptr,todo*2
      End If

      offset + (todo * 2)
      scount - todo
    End If

  Else
    mpegerr.l = scount
    If  mpegerr = #MPEGA_ERR_EOF
      succ.w = True
      While blength > 0
        Poke.w (ptr),0 : ptr+2 : blength-2
      Wend
    End If
    scount = 0
    If \err=False
      If \showerr
        Select mpegerr
          Case #MPEGA_ERR_EOF
            succ.w = True

          Case #MPEGA_ERR_BADFRAME
            If ask {"Bad frame in MPEG file !","Continue|Cancel"} Then succ.w = True:Else succ = False : blength = 0

          Case #MPEGA_ERR_NO_SYNC
            If ask {"No sync found in MPEG file !","Continue|Cancel"} Then succ.w = True:Else succ = False : blength = 0

          Case #MPEGA_ERR_MEM
            If ask {"Memory problem in MPEG file !","Continue|Cancel"} Then succ.w = True:Else succ = False : blength = 0

          Case #MPEGA_ERR_BADVALUE
            If ask {"Bad value in MPEG file !","Continue|Cancel"} Then succ.w = True:Else succ = False : blength = 0

          Default
            If ask {"Undefined error in MPEG file ("+Str$(mpegerr)+") !","Continue|Cancel"}
              succ.w = True
            Else
              succ = False
            End If

         End Select
       Else
        Select mpegerr
          Case #MPEGA_ERR_EOF
            succ.w = True

          Case #MPEGA_ERR_BADFRAME
            succ.w = True

          Case #MPEGA_ERR_NO_SYNC
            succ.w = True

          Case #MPEGA_ERR_MEM
            succ.w = True

          Case #MPEGA_ERR_BADVALUE
            succ.w = True

          Default
            succ.w = True

         End Select
       End If
       \err = True
    Else
      succ.w = True
    End If
  End If
Wend
\buffer_todo   = scount
\buffer_offset = offset
Function Return succ
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.w = mpega_seek {mpega.l,fpos.l}                             /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : ???                                                          /
;/ - fpos.l    : ???                                                           /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.w mpega_seek {mpega.l,fpos.l}
SHARED mpegadat()
succ.w = True
If \seekfpos><fpos
  *mpegawrap.MPEGA_STREAM = \mpegahandle
  msposf.f = fpos / *mpegawrap\frequency * 1000
  mspos.l = msposf
  !_MPEGA_seek {err.l,\mpegahandle,mspos}
  If err
    succ=False
  Else
    \buffer_offset = 0
    \buffer_todo = 0
    \seekfpos = fpos
  End If
End If
Function Return succ
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = mpega_GetSamplerate {mpega.l}                           /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : ???                                                          /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l mpega_GetSamplerate {mpega.l}
SHARED mpegadat()
*mpegawrap.MPEGA_STREAM = \mpegahandle
Function Return *mpegawrap\frequency
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.l = mpega_GetChannels {mpega.l}                             /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : ???                                                          /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.l     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.l mpega_GetChannels {mpega.l}
SHARED mpegadat()
*mpegawrap.MPEGA_STREAM = \mpegahandle
Function Return *mpegawrap\channels
End Function




;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.w = mpega_GetLayer {mpega.l}                                /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : ???                                                          /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.w mpega_GetLayer {mpega.l}
SHARED mpegadat()
*mpegawrap.MPEGA_STREAM = \mpegahandle
Function Return *mpegawrap\layer
End Function


;///////////////////////////////////////////////////////////////////////////////
;/                                                                             /
;/ Syntax:  result.w = mpega_GetErrCode {mpega.l}                              /
;/                                                                             /
;/ Description:                                                                /
;/ * no description available *                                                /
;/                                                                             /
;/ Inputs:                                                                     /
;/ - mpega.l    : ???                                                          /
;/                                                                             /
;/ Result:                                                                     /
;/ - result.w     : ???                                                        /
;/                                                                             /
;///////////////////////////////////////////////////////////////////////////////
Function.w mpega_GetErrCode {mpega.l}
SHARED mpegadat()
Function Return \err
End Function


CNIF #__include=0
NPrint "This is for use under file_audio.include."
End
CEND
