;******************************************************************
;*                       defaulddbug                              *
;*                                                                *
;* It its use to start the Reddebugger                            *
;*                                                                *
;* This source are based of a disassemble of the executable form  *
;* /debug/defaultdbug because there was no source available.      *
;* I modify the disassembly for a better readablity and overview. *
;* Also i change the way the Debugger get started to set his      *
;* stacksize and i added a Versionstring.                         *
;* 12.03.2010  tomsmart1                                          *
;******************************************************************


;Importend constants for starting the Debugger
#Debugger_Priority  = 0                            ; 0 is normal Taskpriority
#Debugger_Stacksize = $3000                        ; set it to 12KB for savety, min is 8k because Reddebugger use the wizard.library


XINCLUDE "/Shared/library_offsets.ab3"             ; Include Libraryoffsets

;Start of the program

    BSR.W   CreatePort                             ; jump create own MessageProt

    MOVEA.L _execbase,A6
    LEA doslib(PC),A1                              ; Open dos.library
    MOVEQ   #$00,D0
    JSR _OpenLibrary(A6)
    MOVE.L  D0,dosbasepointer                      ; save dos.library pointer

    SUBA.L  A1,A1                                  ; find own Task
    JSR _FindTask(A6)
    MOVEA.L D0,A0
    MOVE.L  $0058(A0),D0                           ; get ?? data form own TaskStructure

    BSR.W   RunDebugger                            ; jump to start Debugger
    BSR.W   RemovePort                             ; jump to remove own MessageProt
   RTS                                             ; End


CreatePort:                                        ; creat own MessagePort
    MOVEA.L _execbase,A6
    JSR _CreateMsgPortA(A6)
    MOVE.L  D0,MsgPortPointer                      ; save pointer to the MessagePort
    MOVE.L  D0,MsgPortPointer_backup               ; save pointer to the MessagePort for backup
   RTS


RemovePort:                                        ; remove own MessageProt
    MOVEA.L _execbase,A6
    MOVEA.L MsgPortPointer,A0
    JSR _DeleteMsgPort (A6)
    CLR.L   MsgPortPointer                         ; clear pointer of the MessageProt
   RTS


RunDebugger:                                       ; start Debugger
    MOVE.L  D0,DataOfOwnTask                       ; save ?? data of the own taskstructure

    MOVEA.L _execbase,A6                           ; test if the Debugger already running
    LEA DebuggerTaskname(PC),A1
    JSR _FindPort(A6)
    TST.L   D0
    BNE.W   TestMsgPort                            ; if yes than jump to test his MessagePort

    MOVEA.l dosbasepointer,a6                      ; no, start the Debugger so we can set Stacksize, Priority an so on
    MOVE.l  #Filename,D1                            
    MOVE.l  #Taglist,D2
    JSR _SystemTagList(A6)


WaitForDebugger:                                   ; wait till the Debugger is started
    MOVEA.L dosbasepointer,A6                      ; wait some time
    MOVEQ   #$0A,D1                                ; 10 ticks
    JSR _Delay(A6)

    MOVEA.L _execbase,A6                           ; test if the Debugger is running
    LEA DebuggerTaskname(PC),A1
    JSR _FindPort(A6)
    TST.L   D0
    BEQ.W   WaitForDebugger                        ; if not running the wait again


TestMsgPort:                                       ; test the MessagePort of the Debugger
    MOVEA.L D0,A0                                  ; send the Message to the Debugger
    LEA Message(PC),A1
    JSR _PutMsg(A6)

    MOVEA.L MsgPortPointer,A0                      ; wait for the ReturnMessage form the Debugger
    JSR _WaitPort(A6)

    MOVEA.L MsgPortPointer,A0                      ; get the ReturnMessage form the Debugger
    JSR _GetMsg(A6)
   RTS


doslib:                                            ; name of dos.library
    Dc.b    "dos.library",0
    Even


dosbasepointer:                                    ; place for pointer to the dos.library
    Dc.l    $00000000


DebuggerTaskname:                                  ; name of the Debugger task
    Dc.b    "REDDebugger",0
    Even


MsgPortPointer:                                    ; place for pointer of the own MessagePort
    Dc.l    $00000000


Message:                                           ; Message that are send to the Debugger
    Dc.l    $00000000
    Dc.l    $00000000
    Dc.l    $00000000
    Dc.w    $0000


MsgPortPointer_backup:                             ; backup of the own MessagePort pointer
    Dc.l    $00000000
    Dc.w    $001C                                  ; ??


DataOfOwnTask:                                     ; place for ?? data of own task structer
    Dc.l    $00000000
    Dc.l    "DBUG"                                 ; ??


Taglist:                                           ; Taglist to start the Debugger
    Dc.l $800003F5,#Debugger_Priority              ; NP_Priority   , 0        ; to set the priority
    Dc.l $800003F3,#Debugger_Stacksize             ; NP_Stacksize  , 12kb     ; to set the Stacksize
    Dc.l $80000023,$00000001                       ; Sys_Asynch    , yes      ; to run the Debugger asyncron
    Dc.l $80000021,$00000000                       ; Sys_Input     , no       ; we need no input
    Dc.l $80000022,$00000000                       ; Sys_Output    , no       ; we have no output
    Dc.l $00000000,$00000000                       ; Tag_End                  ; end of the Taglist


Filename:                                          ; Filename with path of the Debugger
    Dc.b "Blitz3:Debug/REDDebugger",0
    Even

Versionstring:
    Dc.b "$VER: defaultdbug \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD)",0
    Even

