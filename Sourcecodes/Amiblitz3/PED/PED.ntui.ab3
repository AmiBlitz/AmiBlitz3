; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 80000
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 65535
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; /XTRA
XINCLUDE "ntui.include.bb2"

;/* define use constants */
#notify_calculator_evaluate = 1
#notify_calculator_format   = 2

#winid_calculator           = 1
#winid_about                = 2
#winid_source               = 3
#winid_browser              = 4
#winid_find                 = 5
#winid_compilersettings     = 6
#winid_ideprefs             = 7
#winid_error                = 8

;/* init tui environment */
SHARED *tuiPED.tuiEngine
*tuiPED = ntui_CreateEngine{"PED","PED_NTUI_REXX","",""}
If *tuiPED = !_NULL Then error{"Unable to init NTUI environment!"} : End


;/* event handler function */
Statement ntui_Handle{}
*tuiEvent.tuiEvent = ntui_GetEvent{*tuiPED}
While *tuiEvent
  Select !tuiev_Notify
    Case #NOTIFY_POPUP   : error {"NTUI wants to pop up!"}
    Case #NOTIFY_ICONIFY : error {"NTUI wants to iconify!"}
    Case #NOTIFY_AREXX   : error {"NTUI got arexx message!"}
    Case #NOTIFY_CLOSE   : ntui_FreeWindow{!tuiev_TuiWindow}
    Case #notify_calculator_evaluate
    Case #notify_calculator_format
  End Select
  *tuiEvent.tuiEvent = ntui_GetEvent{*tuiPED}
Wend
End Statement



;/* open window functions */
Statement OpenCalculator{}
;/* create the demo window */
If ntui_CreateWindow{*tuiPED,"Calculator",#winid_calculator}
  ntui_BeginVGroup{0}
    ntui_BeginVGroup{0,"Expression"}
      ntui_String{"",32,#notify_calculator_evaluate,"type your constant expression to evaluate here"}

      ntui_BeginHGroup{0,"","",#TUIF_SAMESIZE}
        ntui_Button{"Hex","",#notify_calculator_format ,"set output format to hexadecimal",#TUIF_TOGGLE,@"CHEX"}
        ntui_Button{"Dec","",#notify_calculator_format ,"set output format to decimal"    ,#TUIF_TOGGLE,@"CDEC"}
        ntui_Button{"Bin","",#notify_calculator_format ,"set output format to binary"     ,#TUIF_TOGGLE,@"CBIN"}
      ntui_EndGroup{}

    ntui_EndGroup{}
    ntui_Button{"Close","TBImages:quit",#NOTIFY_CLOSE,"close the calculator"}
    ntui_SetMinSize{300,10}
  ntui_EndGroup{}

ntui_EndWindow{}
End If

; /* now we can actually open the window */
If ntui_ShowWindowByID{*tuiPED,#winid_calculator}=False Then error{"\\__THIS_FUNCTION: Unable to open Calculator!"}
End Statement


Statement OpenSource{}
If ntui_CreateWindow{*tuiPED,"Source Editor",#winid_source}
  ntui_BeginVGroup{0}
  ntui_BeginHGroup{0} : ntui_SetBorder{#TUIBORDER_GROUP}
    ntui_ToolButton{"","TBImages:open"}
    ntui_ToolButton{"","TBImages:save"}
    ntui_ToolButton{"","TBImages:saveall"}
    ntui_ToolButton{"","TBImages:close"}
    ntui_VSeperator{}
    ntui_ToolButton{"","TBImages:cut"}
    ntui_ToolButton{"","TBImages:copy"}
    ntui_ToolButton{"","TBImages:paste"}
    ntui_VSeperator{}
    ntui_ToolButton{"","TBImages:help"}
    ntui_Space{0,0,#TUIF_FIXHEIGHT}
  ntui_EndGroup{}

  ntui_BeginPage{0,-1,"",#TUIF_BOTTOM|#TUIF_SMALL}
    ntui_BeginVGroup{0,"myProgram.ab2","TBImages:file"}
      ntui_TextBox{"XINCLUDE \\22error.include.bb2\\22\\n\\nNPrint \\22Hello World\\22\\nEnd\\n",32000,0,"",#TUIF_FIX}
      ntui_Label{"Line: 000001 Column: 101",#TUIF_LEFT|#TUIF_FIX}
    ntui_EndGroup{}

    ntui_BeginVGroup{0,"another.include.bb2","TBImages:file"}
      ntui_TextBox{"NPrint \\22Test\\22 : End\\n",32000,0,"",#TUIF_FIX }
      ntui_Label{"Line: 000001 Column: 101",#TUIF_LEFT|#TUIF_FIX}
    ntui_EndGroup{}

  ntui_EndPage{}
  ntui_EndGroup{}
ntui_EndWindow{}
End If
If ntui_ShowWindowByID{*tuiPED,#winid_source}=False Then error{"\\__THIS_FUNCTION: Unable to open Source Window!"}
End Statement

Statement OpenBrowser{}
If ntui_CreateWindow{*tuiPED,"Browser",#winid_browser}
  ntui_BeginVGroup{0}
  ntui_BeginPage{0,-1,"",#TUIF_TOP|#TUIF_SMALL}
    ntui_BeginVGroup{0,"Source","TBImages:file"}
    ntui_String{"",32} : ntui_SetMinSize{300,0}
    ntui_ListView{""} : ntui_SetMinSize{0,100}
    ntui_EndGroup{}

    ntui_BeginVGroup{0,"Libraries","TBImages:addressbook"}
    ntui_String{"",32}
    ntui_ListView{""}
    ntui_EndGroup{}


    ntui_BeginVGroup{0,"Constants","TBImages:file"}
    ntui_String{"",32}
    ntui_ListView{""}
    ntui_EndGroup{}


    ntui_BeginVGroup{0,"Structures","TBImages:appointment"}
    ntui_String{"",32}
    ntui_ListView{""}
    ntui_EndGroup{}

    ntui_BeginVGroup{0,"Variables","TBImages:file"}
    ntui_String{"",32}
    ntui_ListView{""}
    ntui_EndGroup{}

  ntui_EndPage{}
  ntui_EndGroup{}
ntui_EndWindow{}
End If
If ntui_ShowWindowByID{*tuiPED,#winid_browser}=False Then error{"\\__THIS_FUNCTION: Unable to open Browser Window!"}
End Statement
 



Statement OpenAbout{}
SHARED acidlibdate$,deflibdate$
If ntui_CreateWindow{*tuiPED,"About",#winid_about}
  ntui_BeginVGroup{0}
  ntui_BeginVGroup{0} : ntui_SetBorder{#TUIBORDER_GROUP}
  ntui_Image{"Blitz3:System/Logo.png"}
  ntui_Label{"1993-2001 by AcidSoft"}
  ntui_Label{"2001-2009 by Bernd Roesch/Sven Droege"}
  ntui_HSeperator{}
  ntui_BeginHGroup{2}
  ntui_Label{"PED:"          ,#TUIF_RIGHT} : ntui_Label{" V\\__VER_MAJOR.\\__VER_MINOR.\\__VER_PATCH",#TUIF_LEFT}
  ntui_Label{"Compiler:"     ,#TUIF_RIGHT} : ntui_Label{" V" + Peek.s(Peek.l(?compvers)),#TUIF_LEFT }
  ntui_Label{"AREXX Port:"   ,#TUIF_RIGHT} : ntui_Label{" "+Peek.s(?str_Arexx_PortName)    ,#TUIF_LEFT }
  ntui_Label{"Public Screen:",#TUIF_RIGHT} : ntui_Label{" "+Peek.s(?str_defaultpubscreen)  ,#TUIF_LEFT }
  ntui_Label{"ACIDLIBS:"     ,#TUIF_RIGHT} : ntui_Label{" "+acidlibdate$  ,#TUIF_LEFT }
  ntui_Label{"DEFLIBS:"      ,#TUIF_RIGHT} : ntui_Label{" "+deflibdate$   ,#TUIF_LEFT }
  ntui_EndGroup{}
  ntui_EndGroup{}
  ntui_Button{"Close","TBImages:close",#NOTIFY_CLOSE}
  ntui_EndGroup{}
ntui_EndWindow{}
End If
If ntui_ShowWindowByID{*tuiPED,#winid_about}=False Then error{"\\__THIS_FUNCTION: Unable to open About Window!"}
OpenSource{}
OpenCalculator{}
OpenBrowser{}
End Statement


 

