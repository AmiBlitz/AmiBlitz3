; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 1
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 80000
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 65535
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 69
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max Window      = 20
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;***** System library : MEMLIB

#localalloc = $c000
;  D0.l : bytesize
;  D1.l : requirements
;
;  D0.l : memory block

#localfree = $c001
;  A1.l : memory block
;  D0.l : bytesize

#globalalloc = $c002
;  D0.l : bytesize
;  D1.l : requirements
;
;  D0.l : memory block

#globalfree = $c003
;  A1.l : memory block
;  D0.l : bytesize

#newlocalmem = $c004
#freelocalmem= $c005

; **** System library : ARRAYSLIB
#newarr     = $c400
#newlocarr  = $c401
#arrmult    = $c402
#newlist    = $c403
#newloclist = $c404
#newarr2    = $c405
#newlocarr2 = $c406


;***** System library : INTLIB
;Adds an interupt at the level specified, Low 4 bits of dO should contain interupt level, high
;bit must be set, other bits can be Used For ID. Interupt code should be pointed To by register
;d1.

;It is up To the programmer To determine whether ALibJsr of BLibJsr is appropriate by
;determining which mode their command is being called in. AMIGA mode interupt code
;MUST preserve d2-d7/a2-a4 AND End with MOVEQ #0,dO, BLITZ mode interupts should
;preserve registers d5-d7/a4.

;Command: #clranint=:$c10t (intlib)
;SYNTAX: clranint level+ID+$8Q00 dO.w
;Description:

;Removes the interupt(s) with specified ID from the interupt List.
;Reserved Interupt ID'S are:
;Level 3: $8003-BlitzKeys (strobe)
;Level 5: $8005-FadeLib

#addanint   = $c100 ;(AMIGA/BLITZ)
;  D0.w : level - low 4 bits are interupt level. High bit should be set.
;         other bits may be used for id purposes to allow selective interupt
;         clearing
;  D1.l : code to be executed on interupt. Code added using an ALibJsr
;         MUST preserve registers D2-D7/A2-A4, and MUST end with a MOVEQ #0,D0
;         Code added using a BLibJsr MUST preserve registers D5-D7/A4.
;
#clranint   = $c101 ;(AMIGA/BLITZ)
;  D0.w : level, as above.


;***** System library : SWITCHLIB
#goblitz    = $c200
#goamiga    = $c201
#goqamiga   = $c202
#ownblit    = $c203
#disownblit = $c204
#setcoplist = $c205
#goblitzS   = $c206


;***** System library : EXITSLIB
#progend    = $c800


;***** System library : FFPLIB
#getffpbase = $c900
;  A6.l : library base of mathffp.library


;***** System library : LMULLIB
#quickmult  = $ca00
;  D0.q : factor 1
;  D1.q : factor 2
;
;  D0.q : factor 1 * factor 2

#longmult   = $ca01
;  D0.l : factor 1
;  D1.l : factor 2
;
;  D0.l : factor 1 * factor 2


;***** System library : LDIVLIB
#quickdiv   = $cb00
;  D0.q :
;  D1.q :
;
;  D0.q : D0/D1

#longdiv    = $cb01
;  D0.l :
;  D1.l :
;
;  D0.l : D0/D1


;***** System library : MAXSLIB
#allocstring= $cf01
;  D0.l : start of string. A null terminated copy of the string is created,
;         a pointer to which is returned in D0. This is mainly used to create
;         copies of string parameters for such things as screen
;         or window titles.
;  D1.l : length of string.
#freestring = $cf02
;  D0.l : string to free.


;***** System library : FLOATQUICKLIB
#quicktofloat=$d300
;  D0.q : quick value to be converted.
;
;  D0.l : converted value in fast ffp format.

#floattoquick=$d301
;  D0.l : float value to be converted.
;
;  D0.q : converted value in quick format.

;***** System library : DEBUGLIB
#newmode    = $d500

