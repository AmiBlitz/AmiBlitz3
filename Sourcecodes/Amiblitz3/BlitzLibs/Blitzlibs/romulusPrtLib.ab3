; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = "romulusPrintLib.obj"
; CreateIcon      = 1
; Residents       = "libmacs.res,libnums.res,all.res,libjsrs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 65535
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max Window      = 20
; Max BlitzFont   = 4
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;
; andre's prtlib  (rev bum6)
;

!libheader {#romulusprtlib,init,0,finit,0}

!astatement
!args{#string}
!libs
!subs{_txt+1,0,0}
!name{"PrtText","String"}

!astatement
!args{#long,#word,#word,#word,#word,#long,#long,#word}
!libs{#screenslib,$1080}
!subs{_gfx+1,0,0}
!name{"Hardcopy","Screen#,X,Y,Width,Height,PtrWidth,PrtHeight,Flags"}

!astatement
!args{#word,#byte,#byte,#byte,#byte}
!libs
!subs{_stzeichen+1,0,0}
!name{"PrtCommand","Command,Para1,Para2,Para3,Para4"}

!afunction{#byte}
!args
!libs
!subs{_checkprt,0,0}
!name{"CheckPrt","-1=Printer Off|-3=Printer Offline|-4=Printer On"}

init:!nullsub{libinit,0,0}
finit:!nullsub{libfinit,0,0}


!libfin

#_LVOOpenDevice =  -444
#_LVOCloseDevice = -450
#_LVODoIO  =       -456
#_LVOAddPort =     -354
#_LVORemPort =     -360
#_LVOFindTask=     -294

_checkprt:
  MOVE.l  #12570624,a0
  MOVE.b  (a0),d0
  RTS

_stzeichen:
  MOVE.w  d0,steuer
  MOVE.b  d1,para1
  MOVE.b  d2,para2
  MOVE.b  d3,para3
  MOVE.b  d4,para4
  JSR steuerzeichen
  RTS

_txt:
  MOVE.l  d0,txt
  JSR _PrtText
  MOVE.w  #3,steuer
  JSR steuerzeichen
  RTS

_gfx:
  MOVE.l  (a0),scrpointer
  MOVE.w  d1,x
  MOVE.w  d2,y
  MOVE.w  d3,width
  MOVE.w  d4,height
  MOVE.l  d5,ptrwidth
  MOVE.l  -(a2),ptrheight
  MOVE.w  -(a2),flags
  JSR _Hardcopy
  RTS


libinit:
  SUBA.l a1,a1
  ;!CALLEXEC{FindTask}   ;eigenen Task ermitteln
  MOVE.l 4,a6
  JSR    _LVOFindTask(a6)
  MOVE.l d0,IOPort+16   ;in IOPort-Struktur eintragen
  LEA IOPort,a1
  ;!CALLEXEC{AddPort}
  MOVE.l 4,a6
  JSR    _LVOAddPort(a6)
  RTS

._PrtText:
  LEA IORequestT,a1   ;Zeiger auf IO-Request-Struktur
  LEA devicename,a0   ;Zeiger auf Devicenamen
  CLR.l d0      ;Unit 0
  CLR.l d1      ;Keine Flags
  ;!CALLEXEC{OpenDevice}   ;Device vffnen
  MOVE.l 4,a6
  JSR    _LVOOpenDevice(a6)
  TST.l d0      ;Fehler ?
  BNE pfin     ;Ja, Abbruch !
  LEA IORequestT,a1   ;Zeiger auf IORequest-Struktur
  ;!CALLEXEC{DoIO}     ;Kommando ausf|hren
  MOVE.l 4,a6
  JSR    _LVODoIO(a6)
  LEA IORequestT,a1
  ;!CALLEXEC{CloseDevice}    ;und Device schlie_en
  MOVE.l 4,a6
  JSR    _LVOCloseDevice(a6)
pfin:
  RTS

.steuerzeichen:
  LEA IORequestS,a1   ;Zeiger auf IO-Request-Struktur
  LEA devicename,a0   ;Zeiger auf Devicenamen
  CLR.l d0      ;Unit 0
  CLR.l d1      ;Keine Flags
  ;!CALLEXEC{OpenDevice}   ;Device vffnen
  MOVE.l 4,a6
  JSR    _LVOOpenDevice(a6)
  TST.l d0      ;Fehler ?
  BNE sfin     ;Ja, Abbruch !
  LEA IORequestS,a1   ;Zeiger auf IORequest-Struktur
  ;!CALLEXEC{DoIO}     ;Kommando ausf|hren
  MOVE.l 4,a6
  JSR    _LVODoIO(a6)
  LEA IORequestS,a1
  ;!CALLEXEC{CloseDevice}    ;und Device schlie_en
  MOVE.l 4,a6
  JSR    _LVOCloseDevice(a6)
sfin:
  RTS

._Hardcopy:
  MOVE.l scrpointer,a0
  MOVE.l a0,d0
  ADD.l #$54,d0     ;Zeiger auf Rast-Port-Struktur
  MOVE.l d0,rastp     ;in IORequest-Struktur
;  MOVE.w $0C(a0),width    ;Screen-Breite und -Hvhe in
;  MOVE.w $0E(a0),height   ;IORequest-Struktur eintragen
  ADDA.l #$2C,a0      ;Zeiger auf View-Port-Struktur
  MOVE.l 4(a0),color    ;Zeiger auf Color-Map und
  CLR.l d0
  MOVE.w $20(a0),d0
  MOVE.l d0,viewm     ;View-Mode in IORequest-Struktur

  LEA IORequestH,a1   ;Zeiger auf IO-Request-Struktur
  LEA devicename,a0   ;Zeiger auf Devicenamen
  CLR.l d0      ;Unit 0
  CLR.l d1      ;Keine Flags
  ;!CALLEXEC{OpenDevice}   ;Device vffnen
  MOVE.l 4,a6
  JSR    _LVOOpenDevice(a6)
  TST.l d0      ;Fehler ?
  BNE hfin     ;Ja, Abbruch !
  LEA IORequestH,a1   ;Zeiger auf IORequest-Struktur
  ;!CALLEXEC{DoIO}     ;Kommando ausf|hren
  MOVE.l 4,a6
  JSR    _LVODoIO(a6)
  LEA IORequestH,a1
  ;!CALLEXEC{CloseDevice}    ;und Device schlie_en
  MOVE.l 4,a6
  JSR    _LVOCloseDevice(a6)
hfin:
  RTS

libfinit: LEA IOPort,a1
  ;!CALLEXEC{RemPort}
  MOVE.l 4,a6
  JSR    _LVORemPort(a6)
  RTS

devicename:  Dc.b "printer.device",0
portname:    Dc.b "printer.port",0

;* IOPort-Struktur f|r Messages

IOPort:     Dc.l 0,0   ;Reply-Port (Initialisierung im Programm)
     Dc.b 4
     Dc.b 0
     Dc.l portname
     Dc.b 0
     Dc.b 31
     Dc.l 0
lh1:    Dc.l lh2
lh2:    Dc.l 0
     Dc.l lh1
     Dc.b 0,0

;* IORequest-Struktur f|r Hardcopy

IORequestH: Dc.l 0,0
     Dc.b 5,0
     Dc.l 0
     Dc.l IOPort    ;Zeiger auf IOPort-Struktur
     Dc.w 62    ;Grv_e der IORequest-Struktur in Bytes
     Dc.l 0,0
command:    Dc.w 11    ;Kommando: DumpRastPort (Hardcopy)
     Dc.b 0,0
rastp:    Dc.l 0   ;Zeiger auf Rastport
color:    Dc.l 0   ;Zeiger auf Color-Map
viewm:    Dc.l 0   ;View-Port Mode
x:        Dc.w 0   ;x-Ursprung
y:        Dc.w 0   ;y-Ursprung
width:    Dc.w 0   ;Breite des Rast-Ports
height:   Dc.w 0   ;Hvhe des Rastports
ptrwidth: Dc.l 0   ;Breite des Ausdrucks in Punkten
ptrheight:Dc.l 0   ;Hvhe des Ausdrucks in Punkten egal
flags:    Dc.w 0   ;wegen Flag

;* IORequest-Struktur f|r Steuerzeichen

IORequestS: Dc.l 0,0
     Dc.b 5,0
     Dc.l 0
     Dc.l IOPort    ;Zeiger auf IOPort-Struktur
     Dc.w 48    ;Grv_e der IORequest-Struktur in Bytes
     Dc.l 0,0
     Dc.w 10    ;Kommando: Steuerzeichen senden
     Dc.b 0,0
steuer:     Dc.w 0   ;Code f|r Steuerzeichen
para1:    Dc.b 0   ;1.Parameter
para2:    Dc.b 0   ;2.Parameter
para3:    Dc.b 0   ;3.Parameter
para4:    Dc.b 0   ;4.Parameter
     Dc.l 0,0,0,0

;* IORequest-Struktur f|r Textausgabe

IORequestT: Dc.l 0,0
     Dc.b 5,0
     Dc.l 0
     Dc.l IOPort    ;Zeiger auf IOPort-Struktur
     Dc.w 48    ;Grv_e der IORequest-Struktur in Bytes
     Dc.l 0,0
     Dc.w 9   ;Kommando: Text drucken
     Dc.b 0,0
     Dc.l 0
     Dc.l -1    ;Textldnge
txt: Dc.l 0     ;Zeiger auf Text
     Dc.w 0,0,0,0
     Dc.l 0,0
     Dc.w 0

scrpointer:  Dc.l 0
