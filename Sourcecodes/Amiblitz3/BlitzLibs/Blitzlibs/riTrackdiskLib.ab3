; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram Disk:"
; ExeFile         = "riTrackdiskLib.obj"
; CreateIcon      = 0
; Residents       = "libnums.res,libmacs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max Window      = 20
; Max BlitzFont   = 4
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;#ritrackdisklib=91

!libheader {#ritrackdisklib,init,0,finit,0}

!acommand {#long}
!args {#long}
!libs
!subs {_opentrack,0,0}
!name {"OpenDisk","unit#"}

!acommand {#byte}
!args {#long}
!libs
!subs {_motoron,0,0}
!name {"MotorOn","unit#"}

!acommand {#long}
!args {#long}
!libs
!subs {_closedisk,0,0}
!name {"CloseDisk","unit#"}

!acommand {#byte}
!args {#long,#long,#long}
!libs
!subs {_readsector1,0,0}
!args {#long,#long,#long,#long}
!libs
!subs {_readsector2,0,0}
!name {"ReadSector","unit#,sector#,buffer[,numsectors]"}

!acommand {#byte}
!args {#long}
!libs
!subs {_motoroff,0,0}
!name {"MotorOff","unit#"}

!acommand {#byte}
!args {#long,#long,#long}
!libs
!subs {_writesector1,0,0}
!args {#long,#long,#long,#long}
!libs
!subs {_writesector2,0,0}
!name {"WriteSector","unit#,sector#,buffer[,numsectors]"}

!acommand {#byte}
!args {#long,#long,#long}
!libs
!subs {_formatsector1,0,0}
!args {#long,#long,#long,#long}
!libs
!subs {_formatsector2,0,0}
!name {"FormatTrack","unit#,track#,buffer[,numtracks]"}

!acommand {#byte}
!args {#long}
!libs
!subs {_install1,0,0}
!args {#long,#long}
!libs
!subs {_install2,0,0}
!name {"WriteBoot","unit#[,bootdata]"}

!afunction {#long}
!args {#long}
!libs
!subs {_iostatus+1,0,0}
!name {"DiskStatus","unit#"}

!afunction {#long}
!args {#long}
!libs
!subs {_ioreq+1,0,0}
!name {"DiskIO","unit#"}


finit:  !nullsub{_libfinit,0,0}
init:   !nullsub{_libinit,0,0}
!libfin


_libinit:
        MOVE.l  4,a6
        LEA     iorequests,a0
        MOVE.l  #0,(a0)
        MOVE.l  #0,4(a0)
        MOVE.l  #0,8(a0)
        MOVE.l  #0,a1
        JSR     _CreateMsgPort(a6)
        TST.l   d0
        BEQ     'oops
        MOVE.l  d0,msgport
        RTS
'oops:
        MOVE.l #0,msgport
        RTS

_libfinit:
        MOVE.l  4,a6
        MOVE.l  #0,d0
        BSR     _closedisk
        MOVE.l  #1,d0
        BSR     _closedisk
        MOVE.l  #2,d0
        BSR     _closedisk
        TST.l   msgport
        BEQ     'oops
        MOVE.l  msgport,a0
        JSR     _DeleteMsgPort(a6)
        MOVE.l  #0,msgport
'oops:
        RTS

;IN : D0=Unit Number
._closedisk:
        MOVE.l  4,a6
        CMP.l   #3,d0
        BGT     'oops
        TST.l   msgport
        BEQ     'oops
        MOVE.l  d0,d7
        BSR     getioreq
        CMPA.l  #0,a0
        BEQ     'oops
        MOVEM.l d0-d7/a0-a6,-(a7)
          BSR   _motoroff
        MOVEM.l (a7)+,d0-d7/a0-a6
        MOVE.l  a0,-(a7)
        MOVE.l  a0,a1
        JSR     _CloseDevice(a6)
        MOVE.l  (a7)+,a0
        JSR     _DeleteIORequest(a6)
        MOVE.l  d7,d0
        MOVEQ.l #0,d1
        BSR     putioreq
        MOVEQ.l #-1,d0
        RTS
'oops:
        MOVEQ.l #0,d0
        RTS



._opentrack:
        MOVE.l  4,a6
        MOVE.l  d0,d7
        CMP.l   #3,d0
        BGT     'oops
        TST.l   msgport
        BEQ     'oops1
        MOVE.l  msgport,a0
        MOVE.l  #200,d0
        JSR     _CreateIORequest(a6)
        TST.l   d0
        BEQ     'oops

        MOVE.l  d0,d1
        MOVE.l  d7,d0
        BSR     putioreq
        MOVE.l  d1,a1
        LEA     trackname(pc),a0
        MOVE.l  d7,d0
        MOVEQ.l #0,d1
        JSR     _OpenDevice(a6)
        TST.l   d0
        BEQ     'ok2
        MOVEQ.l #0,d1
        MOVE.l  d7,d0
        BSR     getioreq
        MOVE.l  a0,d6
        BSR     putioreq
        MOVE.l  d6,a0
        JSR     _DeleteIORequest(a6)
'oops:  MOVEQ   #0,d0
        RTS
'ok2:
        MOVEQ.l #-1,d0
        RTS
'oops1: MOVE.l  #1,d0
        RTS

; IN : D0=Request Number
; OUT : A0=Address Of IORequest
.getioreq:
        TST.l   d0
        BMI     'oops
        CMP.l   #3,d0
        BGT     'oops
        ASL.l   #2,d0
        LEA     iorequests(pc),a0
        MOVE.l  0(a0,d0.l),a0
        ASR.l   #2,d0
        RTS
'oops:
        MOVE.l #0,a0
        RTS

; IN : D0=Request Number, D1=Value
.putioreq:
        TST.l   d0
        BMI     'oops
        CMP.l   #3,d0
        BGT     'oops
        ASL.l   #2,d0
        LEA     iorequests(pc),a0
        MOVE.l  d1,0(a0,d0.l)
        ASR.l   #2,d0
        RTS
'oops:
        RTS

; IN : D0=Unit   D1=Sector  D2=Buffer (D3)=Number Of Sectors

._install2:
        MOVE.l  #0,d1
        MOVE.l  #2,d3
        BRA     _formatsector2
._install1:
        MOVE.l  #0,d1
        LEA     defaultboot(pc),a0
        MOVE.l  a0,d2
        MOVE.l  #2,d3
        BRA     _formatsector2
._formatsector1:
        MOVEQ.l #1,d3
._formatsector2:
        MOVE.l  #TD_FORMAT,d4
        MOVE.l  #11,d5
        BRA     okok
._writesector1:
        MOVEQ.l #1,d3
._writesector2:
        MOVE.l  #CMD_WRITE,d4
        MOVEQ.l #1,d5
        BRA     okok
._readsector1:
        MOVEQ.l #1,d3
._readsector2:
        MOVE.l  #CMD_READ,d4
        MOVEQ.l #1,d5
okok:
        MOVE.l  4,a6
        MULU.w  #512,d3
        TST.l   msgport
        BEQ     'oops
        BSR     getioreq
        CMP.l   #0,a0
        BEQ     'oops
        MOVE.l  a0,d7
        MOVE.l  a0,a1
        MOVE.l  msgport,14(a1)
        MOVE.w  d4,28(a1)
        MOVE.w  #0,30(a1)
        MOVE.l  #0,32(a1)
        MULU.w  d5,d3
        MOVE.l  d3,36(a1)
        MOVE.l  d2,40(a1)
        MULU.w  #512,d1
        MULU.w  d5,d1
        MOVE.l  d1,44(a1)
        MOVE.b  #0,30(a1)
        JSR     _DoIO(a6)
        MOVE.l  d7,a0
        MOVE.b  31(a0),d0
        RTS
'oops:  MOVEQ.l #0,d0
        RTS

._iostatus:
            MOVE.l  4,a6
            TST.l   msgport
            BEQ     'oops
            BSR     getioreq
            CMP.l   #0,a0
            BEQ     'oops
            MOVE.l  a0,a1
            JSR     _CheckIO(a6)
            RTS
'oops:
            MOVEQ.l #0,d0
            RTS

._motoron:
            MOVE.l  4,a6
            TST.l   msgport
            BEQ     'oops
            BSR     getioreq
            CMP.l   #0,a0
            BEQ     'oops
            MOVE.l  a0,d7
            MOVE.l  a0,a1
            MOVE.l  msgport,14(a1)
            MOVE.w  #TD_MOTOR,28(a1)
            MOVE.l  #1,36(a1)
            MOVE.b  #0,30(a1)
            JSR     _DoIO(a6)
            MOVE.l  d7,a0
            MOVE.b  31(a0),d0
            RTS
'oops:      MOVEQ.l #0,d0
            RTS

._ioreq:
            MOVE.l  4,a6
            TST.l   msgport
            BEQ     'oops
            BSR     getioreq
            CMP.l   #0,a0
            BEQ     'oops
            MOVE.l  a0,d0
            RTS
'oops:
            MOVEQ.l #0,d0
            RTS


._motoroff:
            MOVE.l  4,a6
            TST.l   msgport
            BEQ     'oops
            BSR     getioreq
            CMP.l   #0,a0
            BEQ     'oops
            MOVE.l  a0,d7
            MOVE.l  a0,a1
            MOVE.w  #TD_MOTOR,28(a1)
            MOVE.b  #0,30(a1)
            MOVE.l  #0,36(a1)
            JSR     _DoIO(a6)
            MOVE.l  d7,a0
            MOVE.b  31(a0),d0
            RTS
'oops:
            MOVEQ.l #0,d0
            RTS

#TD_MOTOR = 9
#TD_FORMAT = 11
#CMD_READ = 2
#CMD_WRITE = 3
#_CheckIO=-468
#_CreateIORequest=-654
#_DeleteIORequest=-660
#_DoIO=-456
#_WaitIO=-474
#_SendIO=-462
#_CloseDevice=-450
#_OpenDevice=-444
#_FindTask=-294
#_CreateMsgPort=-666
#_DeleteMsgPort=-672

    Even

trackname:  Dc.b  "trackdisk.device",0
    Even

iorequests: Dcb.l 4,0
msgport:    Dc.l  0

defaultboot:  IncBin "riTrackdiskLib_OFSBootBlock.BIN"

