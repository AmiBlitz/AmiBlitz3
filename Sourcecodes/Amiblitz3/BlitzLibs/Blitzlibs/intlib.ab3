; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Development:AmiBlitz3/BlitzLibs/Decompiled/acidlibs"
; ExeFile         = "intlib2.obj"
; CreateIcon      = 0
; Residents       = "libmacs.res,libnums.res,libjsrs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 97
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 225
; CursorColumn    = 17
; LabelSearch     = "globalfree"
; LabelRemark     = 0
; LabelAll        = 1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max Window      = 20
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
; IRA V2.09 (06.03.18) (c)1993-1995 Tim Ruehsen
; (c)2009-2015 Frank Wille, (c)2014-2017 Nicolas Bastien
#intlib      = 65520
#ABSEXECBASE = $4
#VPOSR       = $DFF005

;syslibheader{libnum,firsttoke,lasttoke+1,init   ,return,finit  ,error[,flags]}
!syslibheader{#intlib,$c100   ,$c108     ,init,     0,     0 ,0,0}

!nullsub{AddAnInt,0,0} ;c100
!nullsub{ClrAnInt,0,0} ;c101                                                                                                                                                                                                                              
!nullsub{LAB_001B,0,0} ;c102
!nullsub{LAB_001C,0,0} ;c103

;!nullsub{LAB_0008,0,0,$FE56,0} ; c104
Dc.w 0,0,0
Dc.b 0
Dc.w $FE56
Dc.w 0,0,0
Dc.b 0
Dc.l LAB_0008
Dc.l 0
!nullsub{LAB_000E,0,0} ;c105
!nullsub{LAB_0028,0,0} ;c106
!nullsub{LAB_002A,0,0} ;c107

init: !nullsub{do_init,0,0}
!libfin

; ============================================================================0

LAB_0002:
 ORI.B #$00,D0   ;0ee: 00000000
LAB_0004:
 ORI.B #$00,D0   ;0f2: 00000000
 ORI.B #$00,D0   ;0f6: 00000000
 ORI.B #$00,D0   ;0fa: 00000000
 ORI.B #$00,D0   ;0fe: 00000000
 ORI.B #$00,D0   ;102: 00000000
 ORI.B #$00,D0   ;106: 00000000
 ORI.B #$00,D0   ;10a: 00000000
 ORI.B #$00,D0   ;10e: 00000000
 ORI.B #$00,D0   ;112: 00000000
 ORI.B #$00,D0   ;116: 00000000
 ORI.B #$00,D0   ;11a: 00000000
 ORI.B #$00,D0   ;11e: 00000000
 ORI.B #$00,D0   ;122: 00000000
 ORI.B #$00,D0   ;126: 00000000
 ORI.B #$00,D0   ;12a: 00000000
 ORI.B #$00,D0   ;12e: 00000000
LAB_0005:
 ORI.B #$00,D0   ;132: 00000000
 ORI.B #$00,D0   ;136: 00000000
 ORI.B #$00,D0   ;13a: 00000000
 ORI.B #$00,D0   ;13e: 00000000
 ORI.B #$00,D0   ;142: 00000000
 ORI.B #$00,D0   ;146: 00000000
 ORI.B #$00,D0   ;14a: 00000000
 ORI.B #$00,D0   ;14e: 00000000
 ORI.B #$00,D0   ;152: 00000000
 ORI.B #$00,D0   ;156: 00000000
 ORI.B #$00,D0   ;15a: 00000000
 ORI.B #$00,D0   ;15e: 00000000
 ORI.B #$00,D0   ;162: 00000000
 ORI.B #$00,D0   ;166: 00000000
 ORI.B #$00,D0   ;16a: 00000000
 ORI.B #$00,D0   ;16e: 00000000
LAB_0006:
 ORI.B #$00,D0   ;172: 00000000
LAB_0007:
 ORI.B #$00,D0   ;176: 00000000
 Dc.w $0000      ;17a

LAB_0008:
  Dc.w $a001 : Dc.l LAB_000A  ;17e: 0000018e

  MOVE.w D0,D2
  LAB_0009:
    JSR -270(A6)      ; _Enqueue(A0:list, A1: node)
  DBF D2,LAB_0009
  RTS
  LAB_000A:
    BTST #0,VPOSR  ;18e: 0839000000dff005                                                                                                                                                                                                                   
    BEQ.w LAB_000A  ;196: 6700fff6
    LAB_000B:
      BTST #0,VPOSR  ;19a: 0839000000dff005                                                                                                                                                                                                                 
    BNE.w LAB_000B
  DBF D0,LAB_000A
RTS


.do_init:
  CLR.w LAB_0007+2        ;1ac: 427900000178
  LEA LAB_0004+2(PC),A0   ;1b2: 41faff40
  MOVEQ #31,D0            ;1b6: 701f
  LAB_000D:
    CLR.l (A0)+           ;1b8: 4298
  DBF D0,LAB_000D         ;1ba: 51c8fffc
  MOVE.l A5,LAB_0002+2    ;1be: 23cd000000f0
RTS                       ;1c4: 4e75



LAB_000E:
  LEA LAB_0004+2(PC),A2   ;1c6: 45faff2c
  BSR.w LAB_0017          ;1ca: 6100006c
  TST.w LAB_0007+2        ;1ce: 4a7900000178
  BEQ.w LAB_000F          ;1d4: 6700000a
    LEA LAB_0005+2(PC),A2 ;1d8: 45faff5a
    BSR.w LAB_0017        ;1dc: 6100005a
  LAB_000F:
  LEA LAB_0004+2(PC),A2   ;1e0: 45faff12
  MOVEQ #31,D2            ;1e4: 741f
  LAB_0010:
    MOVE.l (A2)+,D0       ;1e6: 201a
    BEQ.w LAB_0012        ;1e8: 6700001a
      CLR.l -4(A2)        ;1ec: 42aafffc
      LAB_0011:
        MOVEA.l D0,A3     ;1f0: 2640
        MOVE.l (A3),-(A7) ;1f2: 2f13
        MOVEA.l A3,A1     ;1f4: 224b
        MOVEQ #28,D0      ;1f6: 701c
        ALibJsr #globalfree  ;$C003
        MOVE.l (A7)+,D0   ;1fe: 201f
      BNE.w LAB_0011      ;200: 6600ffee
    LAB_0012:
  DBF D2,LAB_0010         ;204: 51caffe0
RTS                       ;208: 4e75

.LAB_0013:
  MOVEA.l ABSEXECBASE,A6
  MOVEQ #15,D2
  LAB_0014:
    MOVE.l (A2)+,D0
    BEQ.w LAB_0016
      LAB_0015:
        MOVEA.l D0,A3
        LEA 6(A3),A1      ; pointer to interrupt server node
        MOVE.w 4(A3),D0
        AND.l #$0000000f,D0
        JSR -168(A6)      ; AddIntServer(D0-0:4 :intNum, A1:interrupt
        MOVE.l (A3),D0
      BNE.w LAB_0015
    LAB_0016:
  DBF D2,LAB_0014
RTS

.LAB_0017:
  MOVEA.l ABSEXECBASE,A6
  MOVEQ #15,D2
  LAB_0018:
    MOVE.l (A2)+,D0
    BEQ.w LAB_001A
      LAB_0019:
        MOVEA.l D0,A3
        LEA 6(A3),A1      ; pointer to interrupt server node
        MOVE.w 4(A3),D0
        AND.l #$0000000f,D0
        JSR -174(A6)      ; RemIntServer(D0: intNumer, A1:interrupt)
        MOVE.l (A3),D0
      BNE.w LAB_0019
    LAB_001A:
  DBF D2,LAB_0018
RTS

LAB_001B:
  MOVEA.l LAB_0002+2(PC),A5
RTS

LAB_001C:
RTS

LAB_001D:
  MOVE.l #LAB_0005+2,LAB_0006+2 ;26e: 23fc0000013400000174
  TST.w LAB_0007+2
  SEQ LAB_0002
  BRA.w LAB_001F
  AddAnInt:                                                                                                                                                                                                                                               
  Dc.w $a001 : Dc.l LAB_001D
  MOVE.l #LAB_0004+2,LAB_0006+2 ;28e: 23fc000000f400000174
  CLR.w LAB_0002
  LAB_001F:

  MOVEM.l D2/A0-A1/A6,-(A7)
  MOVEM.l D0-D1,-(A7)
  MOVEQ #28,D0
  MOVE.l #$00010001,D1
  ALibJsr #globalalloc      ;$C002
  MOVEA.l D0,A1
  MOVEM.l (A7)+,D0-D1
  MOVEA.l LAB_0006+2(PC),A0
  MOVE.w D0,D2
  AND.w #$000f,D2
  LSL.w #2,D2
  ADDA.w D2,A0
  MOVE.l (A0),(A1)
  MOVE.l A1,(A0)
  ADDQ.w #4,A1
  MOVE.w D0,(A1)+
  MOVE.l D1,18(A1)
  MOVE.B #$02,8(A1)
  TST.w LAB_0002
  BNE.w LAB_0020
    MOVEA.l ABSEXECBASE,A6
    AND.l #$0000000f,D0  ;AddIntServer (D0:intNum, A1:interrupt)
    JSR -168(A6)
  LAB_0020:
  MOVEM.l (A7)+,D2/A0-A1/A6
RTS

LAB_0021:
  MOVE.l #LAB_0005+2,LAB_0006+2;2fa: 23fc0000013400000174
  TST.w LAB_0007+2
  SEQ LAB_0002
  BRA.w LAB_0023

  .ClrAnInt:
  Dc.w $a001 : Dc.l LAB_0021
  MOVE.l #LAB_0004+2,LAB_0006+2 ;31a: 23fc000000f400000174
  CLR.w LAB_0002  ;324: 4279000000ee
  LAB_0023:
  MOVEM.l D1-D2/A0-A3/A6,-(A7) ;32a: 48e760f2
  MOVE.w D0,D2
  AND.w #$000f,D0
  LSL.w #2,D0
  MOVEA.l LAB_0006+2(PC),A2
  LEA 0(A2,D0.w),A3

  LAB_0024:
    MOVE.l (A3),D1
    BEQ.w LAB_0027
      MOVEA.l D1,A2
      CMP.w 4(A2),D2
      BEQ.w LAB_0025
        MOVEA.l A2,A3
    BRA.w LAB_0024
    LAB_0025:

    TST.w LAB_0002
    BNE.w LAB_0026
      LEA 6(A2),A1
      MOVE.w D2,D0
      AND.l #$0000000f,D0
      MOVEA.l ABSEXECBASE,A6
      JSR -174(A6)          ;RemIntServer(D0:intNumber, A1:interrupt)
    LAB_0026:
    MOVEA.l A2,A1
    MOVE.l (A2),(A3)
    MOVEQ #28,D0
    ALibJsr #globalfree     ;$c003
  BRA.w LAB_0024
  LAB_0027:

  MOVEM.l (A7)+,D1-D2/A0-A3/A6
RTS

LAB_0028:
  TST.w LAB_0007+2  ;38a: 4a7900000178
  BNE.w LAB_0029  ;390: 66000018
    ST LAB_0007+2  ;394: 50f900000178
    MOVEM.l D0-D2/A0-A3/A6,-(A7) ;39a: 48e7e0f2
    LEA LAB_0005+2(PC),A2 ;39e: 45fafd94
    BSR.w LAB_0013  ;3a2: 6100fe66
    MOVEM.l (A7)+,D0-D2/A0-A3/A6 ;3a6: 4cdf4f07
  LAB_0029:
RTS    ;3aa: 4e75

LAB_002A:
  TST.w LAB_0007+2  ;3ac: 4a7900000178
  BEQ.w LAB_002B  ;3b2: 67000018
    SF LAB_0007+2  ;3b6: 51f900000178
    MOVEM.l D0-D2/A0-A3/A6,-(A7) ;3bc: 48e7e0f2
    LEA LAB_0005+2(PC),A2 ;3c0: 45fafd72
    BSR.w LAB_0017  ;3c4: 6100fe72
    MOVEM.l (A7)+,D0-D2/A0-A3/A6 ;3c8: 4cdf4f07
  LAB_002B:
RTS    ;3cc: 4e75
