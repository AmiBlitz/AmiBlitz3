; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Development:AmiBlitz3/BlitzLibs/Decompiled/thirdpartylibs"
; ExeFile         = "LotanMemLib_new.obj"
; CreateIcon      = 0
; Residents       = "libmacs.res,libnums.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 20000
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 3.9.11
; NumberOfBuilds  = 536
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 64000
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 65
; CursorColumn    = 11
; LabelSearch     = "errors"
; LabelRemark     = 0
; LabelAll        = 1
; LabelCase       = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 25
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 25
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max BlitzFont   = 4
; Max Window      = 25
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max TagList     = 5
; Max Database    = 16
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
#lotanmemlib = 172
!libheader {#lotanmemlib,0,0,0,errors}

!afunction{#byte}
!args{#long}
!libs
!subs{do_PeekB,0,0}
!name{"PeekB","(Addr) - Reads a Byte from memory."}

!afunction{#word}
!args{#long}
!libs
!subs{do_PeekW,0,0}
!name{"PeekW","(Addr) - Reads a Word from memory."}

!afunction{#long}
!args{#long}
!libs
!subs{do_PeekL,0,0}
!name{"PeekL","(Addr) - Reads a Long from memory."}

!astatement
!args{#long,#byte}
!libs
!subs{do_PokeB,0,0}
!name{"PokeB","Addr,Byte - Writes a Byte in memory."}

!astatement
!args{#long,#word}
!libs
!subs{do_PokeW,0,0}
!name{"PokeW","Addr,Word - Writes a Word in memory."}

!astatement
!args{#long,#long}
!libs
!subs{do_PokeL,0,0}
!name{"PokeL","Addr,Long - Writes a Long in memory."}

!afunction{#string}
!args{#long}
!libs
!subs{do_PeekS,0,0}
!args{#long,#long}
!libs
!subs{do_PeekS2,0,0}
!name{"PeekS","(Addr[,Len]) - Reads a String from memory."}

!astatement
!args{#long,#string}
!libs
!subs{do_PokeS,0,0}
!args{#long,#string,#long}
!libs
!subs{do_PokeS2,0,0}
!name{"PokeS","Addr,Str[,Len] - Writes a String in memory."}

!afunction{#string}
!args{#long,#byte}
!libs
!subs{do_PeekT,0,0}
!name{"PeekT","(Addr,Byte) - Reads memory into a String from Addr upto Byte."}

!astatement
!repargs{1,1,#long,#long}
!libs
!subs{do_MPokeL,0,0}
!name{"MPokeL","Addr,Long[,Long...] - Writes multiple Longs."}

!astatement
!args{#long,#long}
!libs
!subs{do_MemCls,0,0}
!args{#long,#long,#byte}
!libs
!subs{do_MemCls2,0,0}
!name{"MemCls","Addr,Len[,Byte] - Fills memory."}

!libfin
; =========================================================================================

.do_PeekB:
  MOVEA.l D0,A0
  MOVE.b (A0),D0
RTS

.do_PeekW:
 MOVEA.l D0,A0
 MOVE.w (A0),D0
RTS

.do_PeekL:
 MOVEA.l D0,A0
 MOVE.l (A0),D0
RTS

.do_PokeB:
  MOVEA.l D0,A0
  MOVE.b D1,(A0)
RTS

.do_PokeW:
  MOVEA.l D0,A0
  MOVE.w D1,(A0)
RTS

.do_PokeL:
  MOVEA.l D0,A0
  MOVE.l D1,(A0)
RTS

.do_PeekS:
  MOVEA.l D0,A0
  MOVE.l A3,-(A7)
  LAB_0007:
    MOVE.b (A0)+,(A3)+
  BNE.w LAB_0007
  SUBQ.l #1,A3
  MOVE.l A3,D0
  SUB.l (A7)+,D0
RTS

.do_PeekS2:
  MOVEA.l D0,A0
  MOVE.l D1,D0
  SUBQ.l #1,D1
  LAB_0009:
    MOVE.b (A0)+,(A3)+
  DBF D1,LAB_0009
RTS

.do_PokeS:
  MOVE.l -(A2),D2

do_PokeS2:
  MOVEA.l D0,A0
  MOVEA.l D1,A1
  SUBQ.l #1,D2
  LAB_000C:
    MOVE.b (A1)+,(A0)+
  DBF D2,LAB_000C
 CLR.b (A0)+
RTS

.do_PeekT:
  MOVEA.l D0,A0
  MOVE.l A3,-(A7)
  LAB_000E:
    CMP.b (A0),D1            ;Dc.w $b210
    BEQ.w LAB_000F
      MOVE.b (A0)+,(A3)+
  BRA.w LAB_000E
  LAB_000F:

  MOVE.l A3,D0
  SUB.l (A7)+,D0
RTS

.do_MPokeL:
  SUBQ.w #1,D7
  MOVEA.l D0,A0
  LAB_0011:
    MOVE.l -(A2),(A0)+
  DBF D7,LAB_0011
RTS

.do_MemCls:
  MOVEQ #0,D2   

do_MemCls2:
  SUBQ.l #1,D1   
  MOVEA.l D0,A0  
  LAB_0014:
    MOVE.b D2,(A0)+
  DBF D1,LAB_0014
RTS

errors: Dc.b "$VER: Lotan's Memory Library 1.0 (24.01.98)",0

