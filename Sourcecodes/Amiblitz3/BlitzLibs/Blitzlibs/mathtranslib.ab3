; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Development:"
; ExeFile         = "mathtranslib.obj"
; CreateIcon      = 0
; Residents       = "libmacs.res, LVO.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 63
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 106
; CursorColumn    = 24
; LabelSearch     = "log"
; LabelRemark     = 0
; LabelAll        = 1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max BitMap      = 10
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; /XTRA
; IRA V2.09 (06.03.18) (c)1993-1995 Tim Ruehsen
#_execbase         = $4

!libheader{#mathtranslib,init,1,finit,0}

!nullsub{do_Pow,0,0,#mathtranslib,#la6}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_ACos,0,0}
!name{"ACos","(Float)"}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_ASin,0,0}
!name{"ASin","(Float)"}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_ATan,0,0}
!name{"ATan","(Float)"}
;Dc.b $69

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_Cos,0,0}
!name{"Cos","(Float)"}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_Cosh,0,0}
!name{"HCos","(Float)"}
;Dc.b $6F

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_Exp,0,0}
!name{"Exp","(Float)"}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_Log10,0,0}
!name{"Log10","(Float)"}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_Log,0,0}
!name{"Log","(Float)"}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_Sin,0,0}
!name{"Sin","(Float)"}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_Sinh,0,0}
!name{"HSin","(Float)"}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_Sqrt,0,0}
!name{"Sqr","(Float)"}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_Tan,0,0}
!name{"Tan","(Float)"}

!afunction{5}
!args{5}
!libs{#mathtranslib,#la6}
!subs{do_Tanh,0,0}
!name{"HTan","(Float)"}


init:                       ; LAB_0008
!nullsub{do_init,0,0}

finit:                      ;LAB_000A
!nullsub{do_finit,0,0,#mathtranslib,#la1}
!libfin

; ################### CODE BELOW ################################
str_mathtranslib: Dc.b "mathtrans.library",0
Even

do_init:
  MOVEA.L _execbase,A6
  LAB_000E:
    LEA str_mathtranslib(PC),A1
    JSR _OldOpenLibrary(A6)
  TST.L D0
  BEQ.W LAB_000E
RTS

do_finit:                    ;LAB_000F
  MOVEA.L _execbase,A6
JMP _CloseLibrary(A6)

do_Pow:               ;LAB_0010:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPPow(A6)

do_ACos:              ;LAB_0011
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPAcos(A6)

do_ASin:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPAsin(A6)

do_ATan:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPAtan(A6)

do_Cos:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPCos(A6)

do_Cosh:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPCosh(A6)

do_Exp:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPExp(A6)

do_Log:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPLog(A6)

do_Log10:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPLog10(A6)

do_Sin:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPSin(A6)

do_Sinh:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPSinh(A6)

do_Sqrt:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPSqrt(A6)

do_Tan:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPTan(A6)

do_Tanh:
  Dc.w $a000
  Dc.w $0004
  JSR _LVOSPTanh(A6)

