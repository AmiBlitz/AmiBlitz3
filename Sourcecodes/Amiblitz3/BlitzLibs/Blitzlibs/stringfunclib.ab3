; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Development:Amiblitz3/BlitzLibs/Decompiled"
; ExeFile         = "stringfunclib_new.obj"
; CreateIcon      = 0
; Residents       = "libmacs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 139
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1151
; CursorColumn    = 17
; LabelSearch     = "striptrai"
; LabelRemark     = 0
; LabelAll        = 1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max BitMap      = 10
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; /XTRA
; IRA V2.09 (06.03.18) (c)1993-1995 Tim Ruehsen
; (c)2009-2015 Frank Wille, (c)2014-2017 Nicolas Bastien

!libheader{#stringfunclib,init,1,0,0}
;MOVEQ #0,D0
;RTS
;Dc.l $00b90000
;Ds.l 3
;Ds.w 1
;Dc.l init
;Dc.l $00010000
;Ds.l 4
;Dc.w $0000


!afunction{#string}
!args{#string,#long}
!libs
!subs{do_Left,0,0}
!name{"Left$","(String$,Length)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00020703
;Ds.l 1
;Ds.w 1
;Dc.l do_Left
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $4c656674,$24002853,$7472696e,$67242c4c
;Dc.l $656e6774,$68290000

!afunction{#string}
!args{#string,#long}
!libs
!subs{do_Right,0,0}
!name{"Right$","(String$,Length)"}
;Dc.l $07020000,$00000002
;Dc.l $07030000
;Ds.l 1
;Dc.l do_Right
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $52696768,$74240028,$53747269,$6e67242c
;Dc.l $4c656e67,$74682900

!acommand{#string}
!args{#string,#long,#long}
!libs
!subs{do_Mid,0,0}
!args{#string,#long}
!libs
!subs{do_MidOnlyLeft,0,0}
!args{#string,#long,#long,#string}
!libs
!subs{do_MidWithReplace,0,0}
!name{"Mid$","(String$,Startchar[,Length][,Replace$])"}
;Dc.l $07030000,$00000003
;Dc.l $07030300
;Ds.l 1
;Ds.w 1
;Dc.l do_Mid
;Ds.l 1
;Dc.l $00020703
;Ds.l 1
;Ds.w 1
;Dc.l do_MidOnlyLeft
;Ds.l 1
;Dc.l $00040703,$03070000
;Ds.l 1
;Dc.l do_MidWithReplace
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $4d696424,$00285374,$72696e67,$242c5374
;Dc.l $61727463,$6861725b,$2c4c656e,$6774685d
;Dc.l $5b2c5265,$706c6163,$65245d29
;dc.w $0000

!afunction{#string}
!args{#long}
!libs
!subs{do_Hex,0,0}
!name{"Hex$","(Expression)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00010300
;Ds.l 1
;Ds.w 1
;Dc.l do_Hex
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $48657824,$00284578,$70726573,$73696f6e
;Dc.l $2900

!afunction{#string}
!args{#long}
!libs
!subs{do_Bin,0,0}
!name{"Bin$","(Expression)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00010300
;Ds.l 1
;Ds.w 1
;Dc.l do_Bin
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $42696e24,$00284578,$70726573,$73696f6e
;Dc.w $2900

!afunction{#string}
!args{#word}
!libs
!subs{do_Chr,0,0}
!name{"Chr$","(Expression)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00010200
;Ds.l 1
;Ds.w 1
;Dc.l do_Chr
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $43687224,$00284578,$70726573,$73696f6e
;Dc.w $2900


!afunction{#word}
!args{#string}
!libs
!subs{do_Asc,0,0}
!name{"Asc","(String$)"}
;Dc.w $0202
;Ds.l 1
;Dc.l $00010700
;Ds.l 1
;Ds.w 1
;Dc.l do_Asc
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $41736300,$28537472,$696e6724
;Dc.w $2900

!afunction{#string}
!args{#string,#long}
!libs
!subs{do_String,0,0}
!name{"String$","(String$,Repeats)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00020703
;Ds.l 1
;Ds.w 1
;Dc.l do_String
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $53747269,$6e672400,$28537472,$696e6724
;Dc.l $2c526570,$65617473
;Dc.w $2900


!afunction{#long}
!args{#string,#string}
!libs
!subs{do_Instr,0,0}
!args{#string,#string,#long}
!libs
!subs{do_InstrStartPos,0,0}
!name{"Instr","(String$,Findstring$[,Startpos])"}
;Dc.w $0302
;Ds.l 1
;Dc.l $00020707
;Ds.l 1
;Ds.w 1
;Dc.l do_Instr
;Ds.l 1
;Dc.l $00030707,$03000000
;Ds.l 1
;Dc.l do_InstrStartPos
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $496e7374,$72002853,$7472696e,$67242c46
;Dc.l $696e6473,$7472696e,$67245b2c,$53746172
;Dc.l $74706f73,$5d290000

!afunction{#string}
!args{#string,#string,#string}
!libs
!subs{do_Replace,0,0}
!name{"Replace$","(String$,Findstring$,Replacestring$)"}
;Dc.l $07020000,$00000003
;Dc.l $07070700
;Ds.l 1
;Ds.w 1
;Dc.l do_Replace
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $5265706c,$61636524,$00285374,$72696e67
;Dc.l $242c4669,$6e647374,$72696e67,$242c5265
;Dc.l $706c6163,$65737472,$696e6724
;Dc.w $2900

!afunction{#string}
!args{#long}
!libs
!subs{do_Mki,0,0}
!name{"Mki$","(Integer)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00010300
;Ds.l 1
;Ds.w 1
;Dc.l do_Mki
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $4d6b6924,$0028496e,$74656765,$72290000


!afunction{#string}
!args{#long}
!libs
!subs{do_Mklq,0,0}
!name{"Mkl$","(Long)"}
;Dc.l $07020000,$00000001,$03000000
;Ds.l 1
;Dc.l do_Len
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $4d6b6c24,$00284c6f,$6e672900

!afunction{#word}
!args{#string}
!libs
!subs{do_Cvi,0,0}
!name{"Cvi","(String$)"}
;Dc.w $0202
;Dc.W $0000
;Dc.l $00000001,$07000000
;Ds.l 1
;Dc.l do_Cvi
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $43766900,$28537472,$696e6724
;Dc.w $2900

!afunction{#long}
!args{#string}
!libs
!subs{do_Cvlq,0,0}
!name{"Cvl","(String$)"}
;Dc.w $0302
;Ds.l 1
;Dc.l $00010700
;Ds.l 1
;Ds.w 1
;Dc.l do_Cvlq
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $43766c00,$28537472,$696e6724
;Dc.w $2900


!afunction{#long}
!args{#string}
!libs
!subs{do_Len,0,0}
!name{"Len","(String$)"}
;Dc.w $0302
;Ds.l 1
;Dc.l $00010700
;Ds.l 1
;Ds.w 1
;Dc.l do_Len
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $4c656e00,$28537472,$696e6724
;Dc.w $2900

!afunction{#string}
!args{#string,#long}
!libs
!subs{do_UnLeft,0,0}
!name{"UnLeft$","(String$,Length)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00020703
;Ds.l 1
;Ds.w 1
;Dc.l do_UnLeft
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $556e4c65,$66742400,$28537472,$696e6724
;Dc.l $2c4c656e,$67746829
;Dc.w $0000


!afunction{#string}
!args{#string,#long}
!libs
!subs{do_UnRight,0,0}
!name{"UnRight$","(String$,Length)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00020703
;Ds.l 1
;Ds.w 1
;Dc.l do_UnRight
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $556e5269,$67687424,$00285374,$72696e67
;Dc.l $242c4c65,$6e677468
;Dc.w $2900

!afunction{#string}
!args{#string,#word}
!libs
!subs{do_striplead,0,0}
!name{"StripLead$","(String$,Ascii)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00020702
;Ds.l 1
;Ds.w 1
;Dc.l do_striplead
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $53747269,$704c6561,$64240028,$53747269
;Dc.l $6e67242c,$41736369,$69290000


!afunction{#string}
!args{#string,#word}
!libs
!subs{do_StripTrail,0,0}
!name{"StripTrail$","(String$,Ascii)"}
;Dc.l $07020000
;Dc.l $00000002,$07020000
;Ds.l 1
;Dc.l do_StripTrail
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $53747269,$70547261,$696c2400,$28537472
;Dc.l $696e6724,$2c417363,$69692900


!afunction{#string}
!args{#string,#long}
!libs
!subs{do_LSet,0,0}
!name{"LSet$","(String$,Characters)"}
;Dc.l $07020000
;Dc.l $00000002,$07030000
;Ds.l 1
;Dc.l do_LSet
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $4c536574,$24002853,$7472696e,$67242c43
;Dc.l $68617261,$63746572,$73290000

!afunction{#string}
!args{#string,#long}
!libs
!subs{do_RSet,0,0}
!name{"RSet$","(String$,Characters)"}
;Dc.l $07020000
;Dc.l $00000002,$07030000
;Ds.l 1
;Dc.l do_RSet
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $52536574,$24002853,$7472696e,$67242c43
;Dc.l $68617261,$63746572,$73290000

!afunction{#string}
!args{#string,#long}
!libs
!subs{do_Centre,0,0}
!name{"Centre$","(String$,Characters)"}
;Dc.l $07020000
;Dc.l $00000002
;Dc.l $07030000
;Ds.l 1
;Dc.l do_Centre
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $43656e74,$72652400,$28537472,$696e6724
;Dc.l $2c436861,$72616374,$65727329
;Dc.w $0000

!afunction{#string}
!args{#string}
!libs
!subs{do_LCase,0,0}
!name{"LCase$","(String$)"}
;Dc.w $0702
;Ds.l 1
;Dc.w $0001
;Dc.w $0700
;Ds.l 1
;Ds.w 1
;Dc.l do_LCase
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $4c436173,$65240028,$53747269,$6e672429
;Dc.w $0000

!afunction{#string}
!args{#string}
!libs
!subs{do_UCase,0,0}
!name{"UCase$","(String$)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00010700
;Ds.l 1
;Ds.w 1
;Dc.l do_UCase
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $55436173,$65240028,$53747269,$6e672429
;Dc.w $0000

!astatement
!args{#word}
!libs
!subs{do_CaseSense,0,0}
!name{"CaseSense","On|Off"}
;Dc.w $0001
;Ds.l 1
;Dc.l $00010200
;Ds.l 1
;Ds.w 1
;Dc.l do_CaseSense
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $43617365,$53656e73,$65004f6e,$7c4f6666
;Dc.w $0000

!afunction{#string}
!args{#quick}
!libs
!subs{do_Mklq,0,0}
!name{"Mkq$","(Quick)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00010400
;Ds.l 1
;Ds.w 1
;Dc.l do_Mklq
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $4d6b7124,$00285175,$69636b29
;Dc.w $0000

!afunction{#quick}
!args{#string}
!libs
!subs{do_Cvlq,0,0}
!name{"Cvq","(String$)"}
;Dc.w $0402
;Ds.l 1
;Dc.l $00010700
;Ds.l 1
;Ds.w 1
;Dc.l do_Cvlq
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $43767100,$28537472,$696e6724
;Dc.w $2900

!afunction{#string}
!args{#byte}
!libs
!subs{do_Hexb,0,0}
!name{"Hexb$","(Expression)"}
;Dc.w $0702
;Ds.l 1
;Dc.l $00010100
;Ds.l 1
;Ds.w 1
;Dc.l do_Hexb
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $48657862,$24002845,$78707265,$7373696f
;Dc.l $6e290000

!afunction{#string}
!args{#word}
!libs
!subs{do_Hexw,0,0}
!name{"Hexw$","(Expression)"}
;Dc.l $07020000,$00000001,$02000000
;Ds.l 1
;Dc.l do_Hexw
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $48657877,$24002845,$78707265,$7373696f
;Dc.l $6e290000

!afunction{#string}
!args{#byte}
!libs
!subs{do_Binb,0,0}
!name{"Binb$","(Expression)"}
;Dc.l $07020000,$00000001,$01000000
;Ds.l 1
;Dc.l do_Binb
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $42696e62,$24002845,$78707265,$7373696f
;Dc.l $6e290000

!afunction{#string}
!args{#word}
!libs
!subs{do_Binw,0,0}
!name{"Binw$","(Expression)"}
;Dc.l $07020000,$00000001,$02000000
;Ds.l 1
;Dc.l do_Binw
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $42696e77,$24002845,$78707265,$7373696f
;Dc.l $6e290000

!afunction{#string}
!args{#long,#word}
!libs
!subs{do_PeekMax,0,0}
!name{"PeekMax$","(Addr, MaxChars)"}
;Dc.l $07020000,$00000002,$03020000
;Ds.l 1
;Dc.l do_PeekMax
;Ds.l 1
;Dc.l $ffff0000
;Ds.l 1
;Dc.l $5065656b,$4d617824,$00616464,$722c6d61
;Dc.l $78636861,$72730000

!afunction{#string}
!args{#string}
!libs
!subs{do_Trim,0,0}
!name{"Trim$","(String$)"}


; =========================================================================================================
.init:
!nullsub{do_init,0,0}
!libfin
;Ds.l 3
;Dc.l do_init
;Ds.l 1
;Dc.l $ffff0000
;Ds.w 1

mode_casesense:     Ds.w 1                            ;DAT_0021f75c

do_CaseSense:                                         ;LAB_0002
  MOVE.w D0,mode_casesense
RTS


.do_PeekMax:
  MOVEA.l D0,A0
  MOVEQ   #-1,D0
  SUBQ.w  #1,D1
  do_PeekMaxb:
    ADDQ.l #1,D0
    MOVE.b (A0)+,(A3)+
    BEQ.w do_PeekMaxc
  DBF D1,do_PeekMaxb
  do_PeekMaxc:
  SUBQ.l #1,A3
RTS
;Dc.l $204070ff,$53415280,$16d86700,$000651c9
;Dc.l $fff6538b
;Dc.w $4e75

.copyNewStringA3:     ; (a0: string pointer, d1: length)
  ;Dc.w $2001
  ;Dc.l $6700003a,$0c810000
  ;Dc.l $00086500,$00282401,$e68a6700,$002016d8
  ;Dc.l $16d816d8,$16d816d8,$16d816d8,$16d85382
  ;Dc.l $6600ffec,$c27c0007,$6700000a,$534116d8
  ;Dc.l $51c9fffc
  ;Dc.w $4e75
  MOVE.l     D1,D0
  BEQ.w      LAB_0021f7ba           ; if length is 0 just return d0 = 0

  CMPI.l     #8,D1
  BCS.w      LAB_0021f7b2           ; if length is less than 8 goto ...
    MOVE.l     D1,D2
    LSR.l      #3,D2
    BEQ.w      LAB_0021f7b2
      LAB_0021f794:;                                    XREF[1]:     0021f7a6(j)
        MOVE.b     (A0)+,(A3)+
        MOVE.b     (A0)+,(A3)+
        MOVE.b     (A0)+,(A3)+
        MOVE.b     (A0)+,(A3)+
        MOVE.b     (A0)+,(A3)+
        MOVE.b     (A0)+,(A3)+
        MOVE.b     (A0)+,(A3)+
        MOVE.b     (A0)+,(A3)+
        SUBQ.l     #1,D2
      BNE.w      LAB_0021f794
      AND.w      #7,D1
      BEQ.w      LAB_0021f7ba
    LAB_0021f7b2:;                                    XREF[2]:     0021f788(j), 0021f790(j)

    SUBQ.w     #1,D1

    LAB_0021f7b4:;                                    XREF[1]:     0021f7b6(j)
      MOVE.b     (A0)+,(A3)+
    DBF D1,LAB_0021f7b4
  LAB_0021f7ba:;                                    XREF[2]:     0021f77e(j), 0021f7ae(j)
RTS





do_init:                                         ;LAB_0004
  MOVE.w #-1,mode_casesense
  ;LEA    -$4a(PC),A0                             ;copyNewStringA3
  LEA copyNewStringA3(PC),A0
  ;Dc.l $41faffb6
  MOVE.l A0,D0
RTS

.do_StripTrail:       ;(d0:string$,d1:character)
  MOVEA.l D0,A3       ; stringpointer to a3
  MOVE.l  -(A2),D0    ; length of string
  ADDA.l  D0,A3       ; move pointer to end of string

  LAB_0021f7d2:;                                    XREF[1]:     0021f7da(j)
    SUBQ.l  #1,D0
    BMI.w   LAB_0021f7e0
  CMP.b   -(A3),D1
  BEQ.w   LAB_0021f7d2

  ADDQ.w  #1,A3
  LAB_0021f7e0:;                                    XREF[1]:     0021f7d4(j)
  ADDQ.l  #1,D0
RTS


.do_UnLeft:     ; (d0: String,d1:Length)
  ;Dc.l $242afffc,$94812202
  MOVE.l  -4(A2),D2 ; stringlength
  SUB.l   D1,D2     ; sub length of stringlength
  MOVE.l  D2,D1     ; set as new stringlength

.do_Left:                                      ;LAB_0007
  ;Dc.l $4a816a00,$00047200,$2640b2a2,$6d000004
  ;Dc.l $22122001,$d7c04e75
  TST.l  D1
  BPL.w  LAB_0021f7f4
    MOVEQ #0,D1
  LAB_0021f7f4:;                                    XREF[1]:     0021f7ee(j)

  MOVEA.l D0,A3       ; stringpointer to A3
  CMP.l   -(A2),D1
  BLT.w   LAB_0021f7fe
    MOVE.l  (A2),D1
  LAB_0021f7fe:;                                    XREF[1]:     0021f7f8(j)
  MOVE.l  D1,D0
  ADDA.l  D0,A3
RTS


.do_LSet:
  ;Dc.l $4a816a00,$00047200,$534b2601,$24229682
  ;Dc.l $67000014,$6b00000c,$16fc0020,$53836600
  ;Dc.l $fff82640,$d7c12001
  ;Dc.w $4e75
  TST.l      D1
  BPL.w      LAB_0021f80c
    MOVEQ      #0,D1
  LAB_0021f80c:;                                    XREF[1]:     0021f806(j)
  SUBQ.w     #1,A3
  MOVE.l     D1,D3
  MOVE.l     -(A2),D2
  SUB.l      D2,D3
  BEQ.w      LAB_0021f82a
  BMI.w      LAB_0021f826
  LAB_0021f81c:;                                    XREF[1]:     0021f822(j)
  MOVE.b     #$20,(A3)+
  SUBQ.l     #1,D3
  BNE.w      LAB_0021f81c
  LAB_0021f826:;                                    XREF[1]:     0021f818(j)
  MOVEA.l    D0,A3
  ADDA.l     D1,A3
  LAB_0021f82a:;                                    XREF[1]:     0021f814(j)
  MOVE.l     D1,D0
RTS

.do_RSet:
Dc.l $4a816a00,$00047200,$534b2601,$24229682
Dc.l $67000026,$6b000026,$2040d1c1,$4a826700
Dc.l $000a1123,$53826600,$fffa113c,$00205383
Dc.l $6600fff8,$2640d7c1,$20014e75,$2040d1c2
Dc.l $91c12640,$6000ff08

.do_Centre:
Dc.l $4a816a00,$00047200,$534b2601,$24229682
Dc.l $6b000058,$67000050,$20402801,$e28cd1c4
Dc.l $2802e28c,$d1c43801,$c842e24c,$55c44884
Dc.l $90c42f08,$4a826700,$000a1123,$53826600
Dc.l $fffa2803,$e28c6700,$000e113c,$00205383
Dc.l $53846600,$fff6205f,$10fc0020,$53836600
Dc.l $fff82640,$d7c12001,$4e752040,$e28ad1c2
Dc.l $2401e28a,$91c22640,$6000fe8c

.do_LCase:
Dc.l $22226700,$00242640,$24010c1b,$00416500
Dc.l $00120c2b,$005affff,$62000008,$002b0020
Dc.l $ffff5382,$6600ffe4,$20014e75

.do_UCase:
Dc.l $22226700,$00242640,$24010c1b,$00616500
Dc.l $00120c2b,$007affff,$62000008,$022b00df
Dc.l $ffff5382,$6600ffe4,$20014e75

.do_striplead:      ; (d0: String$, d1: ascii, -(a2): length)
  ;Dc.l $34012640,$204b2222,$53816b00,$0010b418
  ;Dc.l $6700fff6,$53485281,$6000fe18,$70004e75
  MOVE.w     D1,D2      ;char > d2
  MOVEA.l    D0,A3      ;
  MOVEA.l    A3,A0      ;strg > a0
  MOVE.l     -(A2),D1   ;lngth > D1
  LAB_0021f952:
    SUBQ.l     #1,D1
    BMI.w      LAB_0021f966 ; if string is empty just return an empty string
  CMP.b      (A0)+,D2       ; while current character is equal decrease length
  BEQ.w      LAB_0021f952

  SUBQ.w     #1,A0          ; move pointer 1 back
  ADDQ.l     #1,D1          ; add 1 to length due to loop
  BRA.w      copyNewStringA3;                                     undefined copyNewStringA3()
  LAB_0021f966:;                                    XREF[1]:     0021f954(j)
  MOVEQ      #0,D0
RTS

.do_UnRight:
  ;Dc.l $242afffc,$94812202
  MOVE.l     -4(A2),D2
  SUB.l      D1,D2
  MOVE.l     D2,D1

.do_Right:                                   ;LAB_000F
  ;Dc.l $4a816a00,$00047200,$2640b2a2,$6c00000e
  ;Dc.l $20129081,$41f30000,$6000fdf0,$2012d7c0
  ;Dc.w $4e75
  TST.l      D1
  BPL.w      LAB_0021f97a
    MOVEQ      #0,D1
  LAB_0021f97a:;                                    XREF[1]:     0021f974(j)

  MOVEA.l    D0,A3          ; stringpointer to a3
  CMP.l      -(A2),D1       ; compare original length with d1
  BGE.w      LAB_0021f98e   ; if original length greater or equal ...
    MOVE.l     (A2),D0      ; original length to d0
    SUB.l      D1,D0        ; substract charactercount from original length
    LEA        0(A3,D0.w),A0; move stringpointer to new start in A0
    BRA.w      copyNewStringA3 ;                                    undefined copyNewStringA3()
  LAB_0021f98e:;                                    XREF[1]:     0021f97e(j)
  MOVE.l     (A2),D0  ; original length to d0
  ADDA.l     D0,A3    ;
RTS


.do_MidWithReplace:  ; (D0:String$,D1:Startchar,D2:Length,D3:Replace)"
;Dc.l $28222a22,$b2846e00,$00125381,$d0812040
;Dc.l $22435382,$10d951ca,$fffc2004
;Dc.w $4e75
  MOVE.l     -(A2),D4       ; length of mainstring
  MOVE.l     -(A2),D5       ; length of replacestring
  CMP.l      D4,D1
  BGT.w      LAB_0021f9ae
    SUBQ.l     #1,D1
    ADD.l      D1,D0
    MOVEA.l    D0,A0
    MOVEA.l    D3,A1
    SUBQ.l     #1,D2
    LAB_0021f9a8;                                    XREF[1]:     0021f9aa(j)
      MOVE.b     (A1)+,(A0)+
    DBF        D2,LAB_0021f9a8
  LAB_0021f9ae:;                                    XREF[1]:     0021f99a(j)

  MOVE.l     D4,D0
RTS

.do_MidOnlyLeft:
;Dc.l $242afffc,$94815282,$60000002
  MOVE.l     -4(A2),D2
  SUB.l      D1,D2
  ADDQ.l     #1,D2
BRA.w      do_Mid


.do_Mid:
  ;Dc.l $26405381,$4a816a00,$00047200,$4a826a00
  ;Dc.l $00047400,$b2a26e00,$00162601,$d682b692
  ;Dc.l $6e000010,$41f31800,$22026000,$fd927000
  ;Dc.l $4e752412,$94816000
  ;Dc.w $ffec
  MOVEA.l    D0,A3
  SUBQ.l     #1,D1

  TST.l      D1
  BPL.w      LAB_0021f9ca
    MOVEQ      #0,D1
  LAB_0021f9ca:;                                    XREF[1]:     0021f9c4(j)

  TST.l      D2
  BPL.w      LAB_0021f9d2
    MOVEQ      #0,D2
  LAB_0021f9d2:;                                    XREF[1]:     0021f9cc(j)

  CMP.l      -(A2),D1
  BGT.w      LAB_0021f9ec
    MOVE.l     D1,D3
    ADD.l      D2,D3
    CMP.l      (A2),D3
    BGT.w      LAB_0021f9f0
  LAB_0021f9e2:;                                    XREF[1]:     0021f9f4(j)
      LEA        0(A3,D1.l),A0
      MOVE.l     D2,D1
      BRA.w      copyNewStringA3 ;                                    undefined copyNewStringA3()
  LAB_0021f9ec:;                                    XREF[1]:     0021f9d4(j)
    MOVEQ      #0,D0
    RTS
  LAB_0021f9f0:;                                    XREF[1]:     0021f9de(j)
  MOVE.l     (A2),D2
  SUB.l      D1,D2
BRA.w      LAB_0021f9e2




.do_Chr:
  ;Dc.l $a0000004,$16c07001
  ;Dc.w $4e75
  Dc $a000,'f-'s
 's:
  MOVE.b D0,(A3)+
  MOVEQ  #1,D0
 'f:
  RTS


.do_Bin:                                          ;LAB_0014
  ;Dc.l $741f7600,$7230e388,$d34316c1,$51cafff6
  ;Dc.l $70204e75
  MOVEQ #$1f,D2
  MOVEQ #0,D3
  LAB_0021fa06:
    MOVEQ #$30,D1
    LSL.l #1,D0
    ADDX.w D3,D1
    MOVE.b D1,(A3)+
  DBF D2,LAB_0021fa06
  MOVEQ #32,D0
RTS

.do_Binb:
  ;Dc.l $74077600,$02800000,$00ffe098,$7230e388
  ;Dc.l $d34316c1,$51cafff6,$70084e75
  MOVEQ  #7,D2
  MOVEQ  #0,D3
  ANDI.l #$ff,D0
  ROR.l  #8,D0
  LAB_0021fa22:
    MOVEQ #$30,D1
    LSL.l #1,D0
    ADDX.w D3,D1
    MOVE.b D1,(A3)+
  DBF D2,LAB_0021fa22
  MOVEQ #8,D0
RTS

.do_Binw:
  ;Dc.l $740f7600,$48407230,$e388d343,$16c151ca
  ;Dc.l $fff67010
  ;Dc.w $4e75
  MOVEQ #$f,D2
  MOVEQ #0,D3
  SWAP D0
  LAB_0021fa38:
    MOVEQ #$30,D1
    LSL.l #1,D0
    ADDX.w D3,D1
    MOVE.b D1,(A3)+
  DBF D2,LAB_0021fa38
  MOVEQ #16,D0
RTS

.do_Hex:
  ;Dc.l $74077200,$e388e351,$e388e351,$e388e351
  ;Dc.l $e388e351,$06410030,$0c410039,$63000004
  ;Dc.l $5e4116c1,$51caffdc,$70084e75
  MOVEQ #7,D2

  LAB_0021fa4a:
    MOVEQ  #0,D1

    LSL.l  #1,D0
    ROXL.w #1,D1
    LSL.l  #1,D0
    ROXL.w #1,D1
    LSL.l  #1,D0
    ROXL.w #1,D1
    LSL.l  #1,D0
    ROXL.w #1,D1
    ADDI.w #$30,D1

    CMPI.w #$39,D1
    BLS.w  LAB_0021fa6a
      ADDQ.w #7,D1
    LAB_0021fa6a:
    MOVE.b D1,(A3)+                             ; returns string in A3, length in d0
  DBF D2,LAB_0021fa4a
  MOVEQ #8,D0
RTS

.do_Hexb:
;Dc.l $02800000,$00ffe098,$74017200,$e388e351
;Dc.l $e388e351,$e388e351,$e388e351,$06410030
;Dc.l $0c410039,$63000004,$5e4116c1,$51caffdc
;Dc.l $70024e75
  ANDI.l #$ff,D0
  ROR.l #8,D0
  MOVEQ #1,D2

  LAB_0021fa7e:
    MOVEQ  #0,D1

    LSL.l  #1,D0
    ROXL.w #1,D1

    LSL.l  #1,D0
    ROXL.w #1,D1

    LSL.l  #1,D0
    ROXL.w #1,D1

    LSL.l  #1,D0
    ROXL.w #1,D1

    ADDI.w #$30,D1

    CMPI.w #$39,D1
    BLS.w LAB_0021fa9e
      ADDQ.w #7,D1
    LAB_0021fa9e:
    MOVE.b D1,(A3)+
  DBF D2,LAB_0021fa7e
  MOVEQ #2,D0
RTS


.do_Hexw:
  ;Dc.l $02800000,$ffff4840,$74037200,$e388e351
  ;Dc.l $e388e351,$e388e351,$e388e351,$06410030
  ;Dc.l $0c410039,$63000004,$5e4116c1,$51caffdc
  ;Dc.l $70044e75
  ANDI.l #$ffff,D0

  SWAP   D0
  MOVEQ  #3,D2

  LAB_0021fab2:;                                    XREF[1]:     0021fad4(j)
    MOVEQ  #0,D1
    LSL.l  #1,D0
    ROXL.w #1,D1
    LSL.l  #1,D0
    ROXL.w #1,D1
    LSL.l  #1,D0
    ROXL.w #1,D1
    LSL.l  #1,D0
    ROXL.w #1,D1
    ADDI.w #$30,D1
    CMPI.w #$39,D1
    BLS.w LAB_0021fad2
    ADDQ.w #7,D1
    LAB_0021fad2:;                                    XREF[1]:     0021facc(j)
    MOVE.b D1,(A3)+
  DBF D2,LAB_0021fab2

  MOVEQ #4,D0
RTS

.do_Asc:
  ;Dc.l $4aa26700,$000a2640,$70001013,$4e7570ff
  ;Dc.w $4e75
  TST.l -(A2)
  BEQ.w LAB_0021faea
    MOVEA.l D0,A3
    MOVEQ  #0,D0
    MOVE.b (A3),D0
    RTS
  LAB_0021faea:
  MOVEQ #-1,D0
RTS

.do_String:       ; (d0:String, d1:Repeats)
  ;Dc.l $534b2601,$6f000024,$20402f08,$2f0b2222
  ;Dc.l $78006100,$fc7a2200,$d8815383,$6600fff4
  ;Dc.l $205f265f,$22046000,$fc662640,$70004e75
  SUBQ.w #1,A3
  MOVE.l D1,D3
  BLE.w  LAB_0021fb18
    MOVEA.l D0,A0
    MOVE.l A0,-(A7)
    MOVE.l A3,-(A7)
    MOVE.l -(A2),D1
    MOVEQ  #0,D4
    LAB_0021fb00:
      BSR.w copyNewStringA3
      MOVE.l D0,D1
      ADD.l D1,D4
      SUBQ.l #1,D3
    BNE.w LAB_0021fb00
    MOVEA.l (A7)+,A0
    MOVEA.l (A7)+,A3
    MOVE.l D4,D1
    BRA.w  copyNewStringA3
  LAB_0021fb18:

  MOVEA.l D0,A3
  MOVEQ #0,D0
RTS


do_InstrStartPos:
  Dc.l $28025584,$60000004

do_Instr:
Dc.l $78ff2640,$24222622,$52842a04,$da83ba82
Dc.l $6e00005a,$2040d1c4,$22412a03,$67000048
Dc.l $3e3afc14,$66000034,$1e180c07,$007a6200
Dc.l $000e0c07,$00616500,$0006ce3c,$00df1c19
Dc.l $0c06007a,$6200000e,$0c060061,$65000006
Dc.l $cc3c00df,$be066000,$0004b308,$6600ffaa
Dc.l $53856000,$ffb85284,$20044e75,$70004e75

do_Replace:
Dc.l $26222822,$670000b4,$594a2f0b,$2f002040
Dc.l $7a002c03,$6700009a,$2e08de84,$be816200
Dc.l $00862f08,$22412e04,$303afb9c,$66000042
Dc.l $3f011018,$0c00007a,$6200000e,$0c000061
Dc.l $65000006,$c03c00df,$12190c01,$007a6200
Dc.l $000e0c01,$00616500,$0006c23c,$00dfb001
Dc.l $66000036,$53876600,$ffca321f,$6000000e
Dc.l $b3086600,$00265387,$6600fff6,$205f2242
Dc.l $2e126700,$000a16d9,$53876000,$fff6da92
Dc.l $d1c49c84,$6000ff7e,$321f205f,$16d85285
Dc.l $53866000,$ff7016d8,$52855386,$6600fff8
Dc.l $265f205f,$22056000,$fb2e2003
Dc.w $4e75

do_Mki:
  ;Dc.l $17400001,$e0481680,$544b7002
  ;Dc.w $4e75
  MOVE.b D0,1(A3)
  LSR.w  #8,D0
  MOVE.b D0,(A3)
  ADDQ.w #2,A3
  MOVEQ  #2,D0
RTS

.do_Mklq:
  ;Dc.l $17400003,$e0481740,$00024840,$17400001
  ;Dc.l $e0481680,$584b7004
  ;Dc.w $4e75
  MOVE.b D0,3(A3)
  LSR.w  #8,D0
  MOVE.b D0,2(A3)
  SWAP   D0
  MOVE.b D0,1(A3)
  LSR.w  #8,D0
  MOVE.b D0,(A3)
  ADDQ.w #4,A3
  MOVEQ  #4,D0
RTS

.do_Cvi:
  ;Dc.l $20402640,$1018e148,$10104e75
  MOVEA.l D0,A0
  MOVEA.l D0,A3
  MOVE.b (A0)+,D0
  LSL.w #8,D0
  MOVE.b (A0),D0
RTS

.do_Cvlq:
  ;Dc.l $20402640,$7203e188,$101851c9,$fffa4e75
  MOVEA.l D0,A0
  MOVEA.l D0,A3
  MOVEQ #3,D1
  LAB_0021fc8e:
    LSL.l #8,D0
    MOVE.b (A0)+,D0
  DBF D1,LAB_0021fc8e
RTS

.do_Len:
  ;Dc.l $a0000004
  ;Dc.l $26402022
  ;Dc.w $4e75
  ;Dc.w $7000
  ;Dc.l $4e750
  Dc $a000,'f-'s
 's:
  MOVEA.l D0,A3
  MOVE.l -(A2),D0
 'f:
  RTS

.do_Trim:                 ; (d0:String$) /  -(a2): length)
  MOVEA.l D0,A3           ; stringpointer to a3
  MOVEA.l D0,A1           ;
  MOVEA.l A1,A0           ;strg > a0
  MOVE.l -(A2),D0         ;lngth > D1
  MOVEQ #" ",D1           ; space

  ;left
  MOVEQ #-1,D2
  loop_left:
    ADDQ.l #1,D2
    CMP.w D2,D0
    BCS.w exit_trim
  CMP.b (A1)+,D1
  BEQ.w loop_left
  SUBQ #1,A1              ; D2 contains number of first character / A1 points to begin of string

  ; right:
  ADDA.l D0,A0            ; go to the end of the string
  SUB.l D2,D0
  loop_right:
    SUBQ #1,D0
    BMI.w exit_trim
  CMP.b -(A0),D1
  BEQ.w loop_right
  ADDQ #1,D0
  ;D0 contains length of string

  MOVE.l D0,D1
  MOVE.l A1,A0
  BRA copyNewStringA3

  exit_trim:
  MOVEQ  #0,D0
RTS

