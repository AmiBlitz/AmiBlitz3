; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "ram:"
; ExeFile         = "menuslib.obj"
; CreateIcon      = 0
; Residents       = "blitzlibs:libmacs.res,blitzlibs:blitzoffs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 335
; CursorColumn    = 1
; LabelSearch     = "textcalc"
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
;********************************
;*                              *
;*  MENUSLIB - Intuition menus  *
;*                              *
;********************************

!libheader{#menuslib,0,0,0,errors}

!astatement
!args{2,2,7}
!libs{#menuslib,$1380}
!subs{domenutitle,menutitlechk,0}
!name{"MenuTitle","MenuList#,Menu,Title$"}  ;*****

!astatement
!args{2}
!libs{#windowslib,$1202,#menuslib,$1380,#intuitionlib,#la6}
!subs{dosetmenu+1,setmenuchk,0}
!name{"SetMenu","Menulist#"}    ;*****

!astatement
!args{2,$43,2,2,7}
!libs{#menuslib,$1380,#intuifontlib,#la1,#intuitionlib,#la6}
!subs{domenuitem,itemchk2,0}
!args{2,$43,2,2,7,7}
!libs{#menuslib,$1380,#intuifontlib,#la1,#intuitionlib,#la6}
!subs{domenuitem2,itemchk2,0}   ;*****
!name{"MenuItem","MenuList#,Flags,Menu,Item,Itemtext$[,Shortcut$]"}

!astatement
!args{2,$43,2,2,2,7}
!libs{#menuslib,$1380,#intuifontlib,#la1,#intuitionlib,#la6}
!subs{dosubitem,subchk2,0}
!args{2,$43,2,2,2,7,7}
!libs{#menuslib,$1380,#intuifontlib,#la1,#intuitionlib,#la6}
!subs{dosubitem2,subchk2,0} ;*****
!name{"SubItem","MenuList#,Flags,Menu,Item,Subitem,Subitemtext$[,Shortcut$]"}

!astatement
!args{2,$43,2,2,2}
!libs{#menuslib,$1380,shapeslib,$1283}
!subs{doshapeitem,shapeitemchk,0}   ;*****
!name{"ShapeItem","MenuList#,Flags,Menu,Item,Shape#"}

!astatement
!args{2,$43,2,2,2,2}
!libs{#menuslib,$1380,shapeslib,$1284}
!subs{doshapesub,shapesubchk,0} ;*****
!name{"ShapeSub","MenuList#,Flags,Menu,Item,Subitem,Shape#"}

!astatement
!args{2,2}
!libs
!subs{domenugap,0,0}
!name{"MenuGap","X Gap,Y Gap"}  ;*****

!astatement
!args{2,2}
!libs
!subs{dosubitemoff,0,0}
!name{"SubItemOff","X Offset,Y Offset"} ;*****

;!astatement
;!args{2}
;!libs
;!subs{domenuflags,0,0}
;!name{"DefMenuFlags","Flags"}   ;?????

!nullsub{0,0,0}

!astatement
!args{2,2}
!libs{#menuslib,$1380}
!subs{domenustate,0,0}
!args{2,2,2}
!libs{#menuslib,$1380}
!subs{domenustate2,statechk2,0}
!args{2,2,2,2}
!libs{#menuslib,$1380}
!subs{domenustate3,statechk3,0}
!args{2,2,2,2,2}
!libs{#menuslib,$1380}
!subs{domenustate4,statechk4,0} ;*****
!name{"MenuState","MenuList#[,Menu[,Item[,Subitem]]],On|Off"}

!astatement
!args{2}
!libs
!subs{domenupens,0,0}
!name{"MenuColour","Colour"}    ;*****

!afunction{2}
;
!args{2,2,2}
!libs{#menuslib,$1280}
!subs{domenuchecked,chkchk3,0}
;
!args{2,2,2,2}
!libs{#menuslib,$1280}
!subs{domenuchecked2,chkchk4,0}  ;*****
;
!name{"MenuChecked","(MenuList#,Menu,Item[,Subitem])"}

!dumtoke{"MenuList","List of Menus",_toke}

_load:!nullsub{0,0,0}

_save:!nullsub{0,0,0}

_use:!nullsub{0,0,0}

_free:!nullsub{freemenu,0,0}

!libfin{_toke,_load,_save,_use,_free,5,2}

;***************** Code Below *******************

menufpen:Dc.b 1
menubpen:Dc.b 2
menumode:Dc.b 0
Even
dmenflags:Dc $10+2+$40
menflags:Dc 0
subxoff:Dc 48
subyoff:Dc 4
menuxxs:Dc 4
menuyxs:Dc 2
fonthite:Dc 8
shortcut:Dc 0
mexclude:Dc.l 0
temp:Dc 0

dumintuitext
Dc.b 0,0,0,0:Dc 0,0
fontattr:Dc.l 0
dumpoint:Dc.l 0,0

.domenupens
MOVE.b d0,menufpen:RTS
;MOVE.b d1,menubpen:RTS

.changestate
TST d7:BEQ 'off:BSET #0,13(a3):RTS
'off:BCLR #0,13(a3):RTS

changestate2
TST d7:BEQ 'off:BSET #4,13(a3):RTS
'off:BCLR #4,13(a3):RTS

domenustate:;turn off a whole menu list
;
MOVE d1,d7
'loop:MOVE.l (a3),d0:BEQ 'done:MOVE.l d0,a3
BSR changestate:BRA 'loop
'done:RTS

domenustate2:;turn off a particular menu
;
MOVE d2,d7
'loop:MOVE.l (a3),a3:DBF d1,'loop:BRA changestate2

.domenuchecked
;
'loop:MOVE.l (a2),a2:DBF d1,'loop:LEA 18(a2),a2
'loop2:MOVE.l (a2),a2:DBF d2,'loop2
BRA checked

domenustate3:;turn off an item
;
MOVE d3,d7
'loop:MOVE.l (a3),a3:DBF d1,'loop:LEA 18(a3),a3
'loop2:MOVE.l (a3),a3:DBF d2,'loop2:BRA changestate2

.domenuchecked2
;
'loop:MOVE.l (a2),a2:DBF d1,'loop:LEA 18(a2),a2
'loop2:MOVE.l (a2),a2:DBF d2,'loop:LEA 28(a2),a2
'loop3:MOVE.l (a2),a2:DBF d3,'loop
;
checked
BTST #0,12(a2):SNE d0:EXT d0:RTS

domenustate4:;turn off a sub item
;
MOVE d4,d7
'loop:MOVE.l (a3),a3:DBF d1,'loop:LEA 18(a3),a3
'loop2:MOVE.l (a3),a3:DBF d2,'loop2:LEA 28(a3),a3
'loop3:MOVE.l (a3),a3:DBF d3,'loop3:BRA changestate2

.sussflags
CLR.l mexclude:MOVE dmenflags(pc),d6
MOVE.l -(a2),d7:BEQ 'done:MOVE d7,d6:CMP #5,d7:BCC 'done
'skip0:CMP #1,d7:BNE 'skip1:MOVE #$005b,d6:BRA 'done
'skip1:CMP #2,d7:BNE 'skip2:MOVE #$005b,d6:BRA 'skip4
'skip2:CMP #3,d7:BNE 'skip3:MOVE #$015b,d6:BRA 'done
'skip3:MOVE #$015b,d6
'skip4:MOVEQ #-1,d7:BCLR d5,d7:MOVE.l d7,mexclude
;
'done:MOVE d6,menflags:RTS

;CLR.l mexclude:MOVE.l -(a2),d7
;CMP #1,d7:BNE 'notone:MOVE #$005b,d7:BRA 'knob  ;toggle.
;'notone
;CMP #2,d7:BNE 'nottwo:MOVE #$805b,d7:BRA 'knob  ;mexclude.
;'nottwo
;;
;'knob:LSL #1,d7:BCC 'skip
;MOVEQ #-1,d6:BCLR d5,d6:MOVE.l d6,mexclude
;'skip:LSR #1,d7:BNE 'skip2:MOVE dmenflags(pc),d7
;'skip2:MOVE d7,menflags:RTS

domenugap:MOVE d0,menuxxs:MOVE d1,menuyxs:RTS

dosubitemoff:MOVE d0,subxoff:MOVE d1,subyoff:RTS

;domenuflags:MOVE d0,menflags:RTS

.dosetmenu
;a2=window, a3=menulist, a6=intuition
;
MOVE.l a3,a1
'loop:MOVE.l (a1),d0:BEQ 'done:MOVE.l d0,a1
LEA 18(a1),a0:BSR setmax:BRA 'loop
;
'done:MOVE.l (a2),a0:MOVE.l 28(a0),d0:BEQ 'nomenu
JSR _ClearMenuStrip(a6):MOVE.l (a2),a0
'nomenu:MOVE.l (a3),a1
JMP _SetMenuStrip(a6)

setmax
MOVE.l a0,-(a7):MOVEQ #0,d1
'loop:MOVE.l (a0),d0:BEQ 'skip
MOVE.l d0,a0:TST.l 28(a0):BEQ 'skip2
;
MOVEM.l d1/a0,-(a7)
LEA 28(a0),a0:BSR setmax
MOVEM.l (a7)+,d1/a0
;
'skip2:CMP 8(a0),d1:BCC 'loop:MOVE 8(a0),d1:BRA 'loop
'skip:MOVE.l (a7)+,a0
'loop2:MOVE.l (a0),d0:BEQ 'done
MOVE.l d0,a0:MOVE d1,8(a0):BRA 'loop2
'done:RTS

.domenutitle
;
;a3=menulist, d1=menu#, d2=text
;
MOVE d1,-(a7):MOVE.l -(a2),d1:; get length
MOVE d1,d3:LSL #3,d3:ADDQ #8,d3
MOVE d3,d6:;8 wide font, for now.
MOVE.l d2,d0:ALibJsr $cf01:;alloc string
MOVE.l d0,d7
;
MOVE (a7)+,d1:MOVE.l a3,a0
MOVEQ #30,d0:MOVEQ #4,d2:MOVEQ #18,d4
CLR shortcut:BSR findthing
;
ADDQ #2,4(a0)
MOVE.l d7,14(a0):;text
MOVE d6,8(a0):MOVE #10,10(a0)
MOVE #1,12(a0):RTS

.shapecalc
;
MOVE.l a2,-(a7):LEA temp(pc),a2:MOVE d7,(a2)+
BSR sussflags:MOVE.l (a7)+,a2
;
CLR shortcut
MOVE menuxxs(pc),d5:ADD d5,d5:ADD (a2),d5:;width
MOVE menuyxs(pc),d3:ADD d3,d3:ADD 2(a2),d3:;height
MOVE d3,d6:RTS

.doshapesub
;
MOVE 4(a7),d7:MOVE d3,d5
MOVE d3,-(a7):BSR shapecalc
MOVE.l a3,a0:BSR getthing:LEA 18(a0),a0
MOVE d2,d1:BSR getthing:LEA 28(a0),a0:MOVE (a7)+,d1
BSR shapecont:BRA subcont

.doshapeitem
;
MOVE 4(a7),d7:MOVE d2,d5:BSR shapecalc
;
MOVE.l a3,a0:BSR getthing:LEA 18(a0),a0:MOVE d2,d1
;
shapecont:BSR finditem
;
MOVE menuxxs(pc),(a1):MOVE menuyxs(pc),2(a1):MOVE (a2),4(a1)
MOVE 2(a2),6(a1):MOVE 4(a2),8(a1)
MOVE.l 14(a2),10(a1):MOVE #-1,14(a1)
;
MOVE.l a1,18(a0):MOVE d5,8(a0):MOVE d6,10(a0)
MOVE menflags(pc),d0:BCLR #1,d0:MOVE d0,12(a0)
RTS

.fontcalc:MOVE.l (a1),a1:MOVE.l a1,fontattr
MOVE 4(a1),fonthite:RTS

domenuitem2
;
MOVE.l d4,a0:MOVE.b (a0),shortcut:BRA menuit2
;
.domenuitem:CLR shortcut
;
menuit2:BSR fontcalc
;
;a3=MenuList, d1=menu#, d2=item#, d3=Text
;
MOVE d1,-(a7):MOVE.l d3,d0
MOVE d2,d5:BSR textcalc:MOVE (a7)+,d1
;
MOVE.l a3,a0:BSR getthing:LEA 18(a0),a0:MOVE d2,d1
;
menucont:BSR finditem
;
MOVE.l fontattr(pc),8(a1)
MOVE.l d7,12(a1):MOVE menufpen(pc),(a1)
MOVE.b menumode(pc),2(a1)
MOVE menuxxs(pc),4(a1):MOVE menuyxs(pc),6(a1)
;
MOVE menflags(pc),d0:BSET #1,d0:OR d0,12(a0)
RTS

.textcalc:BSR sussflags
;
MOVE menuyxs(pc),d3:ADD d3,d3:ADD fonthite(pc),d3
MOVE d3,d6:;hite
MOVE.l -(a2),d1:
TST.l d1
BNE 'l1
MOVEQ #1,d1
'l1
ALibJsr $cf01:MOVE.l d0,d7
;
LEA dumintuitext(pc),a0:
 MOVE.l d7,12(a0)
JSR _IntuiTextLength(a6):MOVE d0,d5
ADD menuxxs(pc),d5:ADD menuxxs(pc),d5:;width
RTS

dosubitem2:MOVE.l d5,a0:MOVE.b (a0),shortcut:BRA dosub2
.dosubitem:CLR shortcut
dosub2:BSR fontcalc
;
;d1=menu#, d2=item#, d3=subitem#, d4=text
;
MOVEM d1/d3-d4,-(a7)
;
MOVE.l d4,d0:MOVE d3,d5:BSR textcalc
;
MOVEM (a7)+,d1/d3-d4:MOVE.l a3,a0:BSR getthing
LEA 18(a0),a0:MOVE d2,d1:BSR getthing
LEA 28(a0),a0:MOVE d3,d1
BSR menucont
;
subcont:MOVE subxoff(pc),d0:ADD d0,4(a0)
MOVE subyoff(pc),d0:ADD d0,6(a0)
RTS

.finditem:MOVEQ #54,d0:MOVEQ #6,d2:MOVEQ #28,d4:BSR findthing
MOVE d5,8(a0):MOVE d6,10(a0)
LEA 34(a0),a1:MOVE.l a1,18(a0)
MOVE.l mexclude(pc),14(a0):RTS

.getthing:;d1=number, a0=list
'loop:MOVE.l (a0),a0:SUBQ #1,d1:BPL 'loop:RTS

.findthing
;
;a0=first
;thing to find in d1, memlen in d0.
;d2=offset for insert correction (eg width for title)
;d3=correction amount, d4=offset to list off this
;
MOVEM.l d5/a1,-(a7):MOVEQ #0,d5
'loop0:SUBQ #1,d1:BMI 'here
MOVE.l (a0),a0:ADD 4(a0,d2),d5:BRA 'loop0
;
'here:MOVE.l (a0),d1:BEQ 'ad
;
;ok, it already exists! we have to free it up,
;and then alloc a new one, and then adjust following ones!
;
MOVE.l d1,a1:MOVE.l (a1),-(a7)
MOVE.l a0,-(a7):MOVE.l 0(a1,d4),-(a7)
MOVE.l d0,-(a7)
SUB 4(a1,d2),d3
CMP #28,d4:BEQ 'isitem
MOVE.l 14(a1),d0:ALibJsr $cf02:BRA 'dofree
'isitem:BTST #1,13(a1):BEQ 'dofree
MOVE.l 34+12(a1),d0:ALibJsr $cf02
'dofree:MOVE.l (a7),d0:ALibJsr $c003
MOVE.l (a7)+,d0:MOVE.l #$10001,d1
ALibJsr $c002:MOVE.l d0,a0:MOVE.l (a7)+,d0
MOVE.l d0,0(a0,d4)
MOVE.l (a7)+,a1:MOVE.l a0,(a1):MOVE.l (a7)+,(a0)
MOVE.l a0,a1
'loop
MOVE.l (a1),d0:BEQ 'done:MOVE.l d0,a1
ADD d3,0(a1,d2):BRA 'loop
;
'ad
MOVE.l a0,a1:MOVE.l #$10001,d1:ALibJsr $c002
MOVE.l d0,a0:CLR.l (a0):MOVE.l a0,(a1)
CLR.l 0(a0,d4)
;
'done:MOVE d5,0(a0,d2):MOVE.b shortcut(pc),d5:BEQ 'dskip
MOVE.b d5,26(a0):MOVE #4,12(a0)
'dskip:MOVEM.l (a7)+,d5/a1
RTS

.freemenu:;menu item in a3
;
MOVEM.l a4-a5,-(a7):MOVE.l (a3),a2:CLR.l (a3)
;
'loop:CMP #0,a2:BEQ 'done:MOVE.l 18(a2),a4
'loop2:CMP #0,a4:BEQ 'done2:MOVE.l 28(a4),a5
'loop3:CMP #0,a5:BEQ 'done3
MOVE.l a5,a1:MOVEQ #54,d0:MOVE.l (a5),a5
BSR freeitem:BRA 'loop3
'done3:MOVE.l a4,a1:MOVEQ #54,d0:MOVE.l (a4),a4
BSR freeitem:BRA 'loop2
'done2:MOVE.l 14(a2),d0:ALibJsr $cf02
MOVE.l a2,a1:MOVEQ #30,d0:MOVE.l (a2),a2
ALibJsr $c003:BRA 'loop
;
'done
MOVEM.l (a7)+,a4-a5:RTS

freeitem
BTST #1,13(a1):BEQ 'nofree
MOVE.l d0,-(a7):MOVE.l 34+12(a1),d0:ALibJsr $cf02:MOVE.l (a7)+,d0
'nofree:ALibJsr $c003:RTS

;***************** ERRORS! **********************

errors

err1:MOVE.l #mess1,d0:TRAP #0
err2:MOVE.l #mess2,d0:TRAP #0
err3:MOVE.l #mess3,d0:TRAP #0
err4:MOVE.l #mess4,d0:TRAP #0
err5:MOVE.l #mess5,d0:TRAP #0
err6:MOVE.l #mess6,d0:TRAP #0
err7:MOVE.l #mess7,d0:TRAP #0
err8:MOVE.l #mess8,d0:TRAP #0

mess8:Dc.b "No string with length 0 allowed",0
mess1:Dc.b "Illegal Menu number",0
mess2:Dc.b "Illegal Menu Item number",0
mess3:Dc.b "Illegal Menu Sub Item number",0
mess4:Dc.b "Uninitialized Shape",0
mess5:Dc.b "Uninitialized Window",0
mess6:Dc.b "Uninitialized Menu List",0
mess7:Dc.b "Uninitialized IntuiFont",0
Even

setmenuchk:TST.l (a2):BEQ err5:TST.l (a3):BEQ err6
RTS

nextchk:;make sure d0 is only 1 bigger than list a0
SUBQ #1,d0:BPL existschk:RTS
existschk:;make sure d0 exists
'loop:MOVE.l (a0),d7:BEQ 'done:MOVE.l d7,a0:DBF d0,'loop
'done:RTS

menutitlechk
MOVE.l a3,a0:MOVE d1,d0:BSR nextchk:BEQ err1
RTS

itemchk2:TST.l 8(a1):BEQ err7:BRA itemchk

shapeitemchk:TST (a2):BEQ err4
;
itemchk:MOVE.l a3,a0:MOVE d1,d0:BSR existschk
BEQ err1:LEA 18(a0),a0:MOVE d2,d0:BSR nextchk
BEQ err2:RTS

subchk2:TST.l 8(a1):BEQ err7:BRA subchk

shapesubchk:TST (a2):BEQ err4
;
subchk:MOVE.l a3,a0:MOVE d1,d0:BSR existschk
BEQ err1:LEA 18(a0),a0:MOVE d2,d0:BSR existschk
BEQ err2:LEA 28(a0),a0:MOVE d3,d0:BSR nextchk
BEQ err3:RTS

statechk2:MOVE.l a3,a0:MOVE d1,d0:BSR existschk
BEQ err1:RTS

chkchk3:EXG a2,a3:BSR statechk3:EXG a2,a3:RTS
;
statechk3:BSR statechk2:LEA 18(a0),a0:MOVE d2,d0:BSR existschk
BEQ err2:RTS

chkchk4:EXG a2,a3:BSR statechk4:EXG a2,a3:RTS
;
statechk4:BSR statechk3:LEA 28(a0),a0:MOVE d3,d0:BSR existschk
BEQ err3:RTS

