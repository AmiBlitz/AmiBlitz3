; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "ram:"
; ExeFile         = "test"
; CreateIcon      = 0
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 113
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max BitMap      = 10
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; /XTRA
;
; Additional Blitz Assembler commands in macro form, added
; to Blitzlibs for BUM10.
;
; Generously donated by Steve Matty - RI/RWE - August '96
;


.shortbranch
;
;Collection of shortbranch macros
;
;e.g:           TST.w  d0
;               BNE    goto_here
;               ADDQ   #1,d0
;           goto_here:
;
;
;macrocall:     !SBNE{goto_here}
;
Macro SBRA
  Dc.b $60,`1-'label0`@
'label0`@
End Macro

Macro SBCC
  Dc.b $64,`1-'labelz`@
'labelz`@
End Macro

Macro SBCS
  Dc.b $65,`1-'label5`@
'label5`@
End Macro

Macro SBNE
  Dc.b $66,`1-'label6`@
'label6`@
End Macro

Macro SBEQ
  Dc.b $67,`1-'label7`@
'label7`@
End Macro

Macro SBPL
  Dc.b $6A,`1-'labela`@
'labela`@
End Macro

Macro SBMI
  Dc.b $6B,`1-'labelb`@
'labelb`@
End Macro

Macro SBGE
  Dc.b $6C,`1-'labelc`@
'labelc`@
End Macro

Macro SBLT
  Dc.b $6D,`1-'labeld`@
'labeld`@
End Macro

Macro SBGT
  Dc.b $6E,`1-'labele`@
'labele`@
End Macro

Macro SBLE
  Dc.b $6F,`1-'labelf`@
'labelf`@
End Macro


.leascale020
;
;For 020+ processors only
;
;e.g:        LEA (aX,dX.l*8),aX
;
;
;macrocall:  !LEASCALE{source_aX, dX, scale(2/4/8), dest_aX}
;
Macro LEASCALE
  Dc.b  $41+{`4*2}
  Dc.b  $f0+`1
  CNIF `3=2
    Dc.b  $10*{`2}+$a
  CELSE
    CNIF `3=4
      Dc.b  $10*{`2}+$c
    CELSE
      CNIF `3=8
        Dc.b  $10*{`2}+$e
      CEND
    CEND
  CEND
  Dc.b  0
End Macro

Macro fmove
    CNIF `1<8
    Dc.l $f2394400+{`2*$80},`1
    CELSE
    Dc.l $f2106400+{`3*$80}+`2*$10000
    Dc.w `1
    CEND
End Macro

!fmove{7,1}
!fmove{4,0,0}
