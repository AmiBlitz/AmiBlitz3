; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram_Disk:"
; ExeFile         = "RIGTMenuLib.obj"
; CreateIcon      = 0
; Residents       = "blitzlibs:bb2objtypes.res,blitzlibs:amigalibs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 12
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 5
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 0
; Max Sound       = 0
; Max Bank        = 0
; Max Buffer      = 0
; Max BitMap      = 0
; Max Slice       = 0
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 0
; /XTRA
; Reflective Images library
; (C)1994

;Version details
; 10/03/96
;     - Fixed bug in menuchecked setting/retrieving.
;     - Added mutual exclude to menuitems and subitems
; 29/6/95
;     - Fixed bug with disabling a menu title
; 8/6/95
;     - Fixed Freemenus to stop crashes and mem drain
; 23/5/95
;     - Fixed bug in freemenus code - was trying to free data when
;       there was none present


;EXEC lib
#_OpenLibrary       =-552
#_CloseLibrary      =-414

#_CreateMenusA      =-48
#_FreeMenus         =-54
#_LayoutMenuItemsA  =-60
#_LayoutMenusA      =-66
#_CreateContext     =-114
#_GetVisualInfoA    =-126
#_FreeVisualInfo    =-132

;Intuition
#_SetMenuStrip      =-264
#_ClearMenuStrip    =-54

;Size of items in the lists
#titlesize          =12
#itemsize           =30

#mi_SIZEOF          =34
#rigtmenulib=37

INCDIR "BlitzLibs:"
XINCLUDE "libmacs.bb"

!libheader {#rigtmenulib,init,0,finit,errors}

!dumtoke{"GTMenuList","List of GT Menus",_toke}

!acommand {#long}
!args {#word}
!libs {#rigtmenulib,#ia3|#pd0,#screenslib,#ua0}
!subs {_CreateMenuStrip,createchk,0}
!name {"CreateMenuStrip","GTMenuList#"}

!astatement
!args {#word}
!libs {#rigtmenulib,#ia3|#pd0,#windowslib,#ua1,#intuitionlib,#la6,#screenslib,#ua0}
!subs {_setmenu,setchk,0}
!name {"GTSetMenu","GTMenuList#"}

!astatement
!args
!libs {#windowslib,#ua2,#intuitionlib,#la6}
!subs {_gtunsetmenu,0,0}
!name {"GTUnSetMenu","- removes the gtmenulist from the current window"}

!astatement
!args {#word,#word,#string}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtmenutitle,0,0}
!name {"GTMenuTitle","GTMenuList#,menu,title$"}

!astatement
!args {#word,#word,#word,#word}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtmenuitem2,0,0}
!args {#word,#word,#word,#word,#string}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtmenuitem3,0,0}
!args {#word,#word,#word,#word,#string,#string}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtmenuitem,0,0}
!args {#word,#word,#word,#word,#string,#string,#long}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtmenuitem4,0,0}
!args {#word,#word,#word,#word,#string,#string,#long,#long}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtmenuitem5,0,0}
!name {"GTMenuItem","GTMenuList#,flags,menu,item[,itemtext$[,shortcut$[,mutualexclude[,UserData]]"}

!astatement
!args{2,2}
!libs{#rigtmenulib,$1380}
!subs{domenustate,0,0}
!args{2,2,2}
!libs{#rigtmenulib,$1380}
!subs{domenustate2,statechk2,0}
!args{2,2,2,2}
!libs{#rigtmenulib,$1380}
!subs{domenustate3,statechk3,0}
!args{2,2,2,2,2}
!libs{#rigtmenulib,$1380}
!subs{domenustate4,statechk4,0} ;*****
!name{"GTMenuState","GTMenuList#[,Menu[,Item[,Subitem]]],On|Off"}

!astatement
!args {#word,#word,#word,#word,#word}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtsubitem2,0,0}
!args {#word,#word,#word,#word,#word,#string}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtsubitem3,0,0}
!args {#word,#word,#word,#word,#word,#string,#string|#push}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtsubitem,0,0}
!args {#word,#word,#word,#word,#word,#string,#string,#long}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtsubitem4,0,0}
!args {#word,#word,#word,#word,#word,#string,#string,#long,#long}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_gtsubitem5,0,0}
!name {"GTSubItem","GTMenuList#,flags,menu,item,subitem[,itemtext$[,shortcut$[,mutualexclude[,UserData]]]]"}

!afunction{2}
!args{2,2,2}
!libs{#rigtmenulib,$1280}
!subs{domenuchecked,chkchk3,0}
!args{2,2,2,2}
!libs{#rigtmenulib,$1280}
!subs{domenuchecked2,chkchk4,0}  ;*****
!name{"GTMenuChecked","(GTMenuList#,Menu,Item[,Subitem])"}

!astatement
!args{2,2,2,2}
!libs{#rigtmenulib,$1280}
!subs{setmenuchecked,chkchk3,0}
!args{2,2,2,2,2}
!libs{#rigtmenulib,$1280}
!subs{setmenuchecked2,chkchk4,0}  ;*****
!name{"GTSetMenuChecked","GTMenuList#,Menu,Item[,Subitem],Off|On"}

!astatement
!args {#word,#word}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_freetitle,0,0}
!args {#word,#word,#word}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_freeitem,0,0}
!args {#word,#word,#word,#word}
!libs {#rigtmenulib,#ia3|#pd0}
!subs {_freesubitem,0,0}
!name {"GTFreeMenu","GTMenuList#,Menu[,Item[,Subitem]]"}

!afunction{#long}
!args{2,2,2}
!libs{#rigtmenulib,$1280}
!subs{_GetUserData,chkchk3,0}
!args{2,2,2,2}
!libs{#rigtmenulib,$1280}
!subs{_GetUserData2,chkchk5,0}  ;*****
!name{"GTGetUserData","(GTMenuList#,Menu,Item[,Subitem])"}

init: !nullsub{_libinit,0,0}
finit:!nullsub{_libfinit,0,0}

_load:!nullsub{0,0,0}

_save:!nullsub{0,0,0}

_use:!nullsub{0,0,0}

_free:!nullsub{freemenu,0,0}

!libfin{_toke,_load,_save,_use,_free,5,4}

; GTMenuList object:

;   +0.l    Address of created menus
;   +4.l    Address of linked list of items to create menu from
;   +8.w    Number of items in linked list

; List looks like:

;   +0.l    Next title
;   +4.l    Pointer to string
;   +8.l    First item

; Menu item looks like:

;   +0.l    Next item
;   +4.l    String pointer
;   +8.l    First subitem
;   +12.w   flags
;   +14.l   keyboard shortcut
;   +18.l   First subitem pointer
;   +22.l   mutual exclude
;   +26.l   UserData

;==============================================================

._libinit:
  LEA       gtname(pc),a1
  MOVEQ     #0,d0
  MOVE.l    4,a6
  JSR       _OpenLibrary(a6)
  MOVE.l    d0,gtbase
  RTS

._libfinit:
  TST.l     gtbase
  BNE       'ok
  MOVE.l    gtbase,a1
  MOVE.l    4,a6
  JSR       _CloseLibrary(a6)
  CLR.l     gtbase
'ok:
  RTS


;a3=GTMenuList item
;a0=used screen
._CreateMenuStrip:
  TST.l     gtbase
  BEQ       err

  MOVE.l    gtbase,a6

  TST.l     (a3)
  BEQ       'nomenu

  MOVEM.l   d1/a0/a3,-(a7)
  MOVE.l    (a3),a0
  JSR       _FreeMenus(a6)
  MOVEM.l   (a7)+,d1/a0/a3
  CLR.l     (a3)

'nomenu:
  BSR       makearray
  TST.l     d1
  BEQ       err

  MOVEM.l   d1/a0/a3,-(a7)
  MOVE.l    d1,a0
  LEA       taglist(pc),a1
  JSR       _CreateMenusA(a6)

  MOVEM.l   (a7)+,d1/a0/a3
  MOVE.l    d0,(a3)

  MOVE.l    (a0),a0               ; screen
  SUB.l     a1,a1
  JSR       _GetVisualInfoA(a6)
  MOVE.l    d0,vi
  MOVE.l    (a3),a0
  MOVE.l    d0,a1
  LEA       tl_layout(pc),a2
  JSR       _LayoutMenusA(a6)

  MOVE.l    vi,a0
  JSR       _FreeVisualInfo(a6)

  BSR       freearray
  MOVEQ     #-1,d0
  RTS
err:
  MOVEQ     #0,d0
  RTS

vi:         Dc.l  0
marray:     Dc.l  0
marraysize: Dc.l  0

;Returns: d1=array pointer
.makearray:
  MOVEM.l   a0/a3,-(a7)
  MOVE.l    4(a3),a0
  MOVEQ     #0,d0
  MOVE.w    8(a3),d0
  MOVE.l    #$10001,d1
  ADDQ.l    #1,d0
  MULU.w    #20,d0
  MOVE.l    d0,marraysize
  ALibJsr   $c002

  MOVE.l    d0,marray

  MOVE.l    d0,a1

;a0=list
;a1=array
'dotitle:
  MOVE.b    #NM_TITLE,(a1)
  ADDQ.w    #2,a1
  MOVE.l    4(a0),(a1)
  LEA       18(a1),a1

  TST.l     8(a0)
  BEQ       'skipitems
  MOVE.l    8(a0),a2
'doitems:
  MOVE.b    #NM_ITEM,(a1)
  ADDQ.w    #2,a1
  MOVE.l    4(a2),(a1)
  MOVE.l    14(a2),4(a1)
  MOVE.w    12(a2),8(a1)
  MOVE.l    22(a2),10(a1)
  MOVE.l    26(a2),14(a1)
  LEA       18(a1),a1

  TST.l     18(a2)
  BEQ       'nosubs
  MOVE.l    a2,-(a7)
  MOVE.l    18(a2),a2
'dosubitems:
  MOVE.b    #NM_SUB,(a1)
  ADDQ.w    #2,a1
  MOVE.l    4(a2),(a1)
  MOVE.l    14(a2),4(a1)
  MOVE.w    12(a2),8(a1)
  MOVE.l    22(a2),10(a1)
  MOVE.l    26(a2),14(a1)

  LEA       18(a1),a1
  TST.l     (a2)
  BEQ       'donesubs
  MOVE.l    (a2),a2
  BRA       'dosubitems
'donesubs:
  MOVE.l    (a7)+,a2
'nosubs:
  TST.l     (a2)
  BEQ       'skipitems
  MOVE.l    (a2),a2
  BRA       'doitems
'skipitems:
  MOVE.l    (a0),d0
  BEQ       'endthis
  MOVE.l    d0,a0
  BRA       'dotitle
'endthis:
  MOVE.b    #NM_END,(a1)
  MOVE.l    marray,d1
  MOVEM.l   (a7)+,a0/a3
  RTS

freearray:
  MOVE.l    marray,a1
  MOVE.l    marraysize,d0
  ALibJsr   $c003
  RTS

.freemenu:
  MOVE.l    (a3),d0
  BEQ       'n
  MOVE.l    d0,a0
  MOVE.l    gtbase,a6
  JSR       _FreeMenus(a6)
'n:
  MOVE.l    4(a3),d0
  BEQ       'endthis
  MOVE.l    d0,a0
'loop:
  MOVE.l    (a0),-(a7)

  MOVE.l    8(a0),a2
  MOVE.l    a0,a1
  MOVEQ     #titlesize,d1
  ALibJsr   $c003
  CMP.l     #0,a2
  BEQ       'donext
  MOVE.l    a2,a0
  MOVE.l    #99999,d0
  BSR       freeitemlist
'donext:
  MOVE.l    (a7)+,a0
  CMP.l     #0,a0
  BNE       'loop
'endthis:
  CLR.l     (a3)
  CLR.l     4(a3)
  CLR.l     8(a3)
  RTS

;a0=used screen
;a1=used window
;a3=menulist
;a6=intuition
._setmenu:
  TST.l     (a3)
  BNE       'ok

  MOVEM.l   a0/a1/a3/a6,-(a7)
  BSR       _CreateMenuStrip
  MOVEM.l   (a7)+,a0/a1/a3/a6
  TST.l     (a3)
  BNE       'ok
  RTS
'ok:
  MOVE.l    a1,a0
  MOVE.l    (a0),a0
  MOVE.l    28(a0),d0
  BEQ       'nomenu
  MOVE.l    a0,-(a7)
  JSR       _ClearMenuStrip(a6)
  MOVE.l    (a7)+,a0
'nomenu:
  MOVE.l    (a3),a1
  JSR       _SetMenuStrip(a6)
  RTS

._gtunsetmenu:
  MOVE.l  (a2),a0
  TST.l   28(a0)
  BEQ     'nomenu
  JSR     _ClearMenuStrip(a6)
'nomenu:
  RTS

taglist:
    Dc.l    #GTMN_FullMenu,-1
    Dc.l    0,0

tl_layout:
    Dc.l    #GTMN_NewLookMenus,-1
    Dc.l    0,0

;a3=menulist
;d1=title number
;d2=string pointer
._gtmenutitle:
  TST.l     gtbase
  BNE       'ok
  RTS
'ok:
  LEA       4(a3),a0
  SUBQ.w    #1,d1
  BMI       'gotit
'loop:
  MOVE.l    (a0),d0
  BEQ       'err
  MOVE.l    d0,a0
  DBRA      d1,'loop
'gotit:
  MOVEQ     #titlesize,d0
  MOVEQ     #%1,d1
  ALibJsr   $c002
  TST.l     d0
  BEQ       'err

  MOVE.l    d0,a1                 ; Add item to list
  MOVE.l    (a0),(a1)
  MOVE.l    d0,(a0)

  MOVE.l    d2,d0                 ; get string
  MOVE.l    -(a2),d1              ; get length
  ALibJsr   $cf01
  MOVE.l    d0,4(a1)
  CLR.l     8(a1)
  ADD.w     #1,8(a3)
'err:
  RTS

_gtmenuitem5:
  MOVE.l    -16(a2),userdata
  BRA       _do_gtitem

;a3=menulist
;d1=flags
;d2=title number
;d3=item number
;d4=string pointer     (or -1 for NM_BARLABEL)
;d5=shortcut$          (or 0 for non)
;d6=mutualexclude
_gtmenuitem2:
  MOVEQ     #-1,d4
_gtmenuitem3:
  MOVEQ     #0,d5
._gtmenuitem:
  MOVEQ     #0,d6
_gtmenuitem4:
  MOVE.l    d6,me
  CLR.l     userdata
_do_gtitem:
  TST.l     gtbase
  BNE       'ok
  RTS
'ok:
  MOVE.w    d1,flags

  LEA       4(a3),a0
'loop:
  MOVE.l    (a0),d0
  BEQ       'err
  MOVE.l    d0,a0
  DBRA      d2,'loop
'gotit:
  LEA       8(a0),a0
  SUBQ.w    #1,d3
  BMI       'gotitem
'loop2:
  MOVE.l    (a0),d0
  BEQ       'err
  MOVE.l    d0,a0
  DBRA      d3,'loop2
'gotitem:
  MOVEQ     #itemsize,d0
  MOVE.l    #$10001,d1
  ALibJsr   $c002
  TST.l     d0
  BEQ       'err

  MOVE.l    d0,a1                 ; Add item to list
  MOVE.l    (a0),(a1)
  MOVE.l    d0,(a0)

  TST.l     d4
  BPL       'copystring
  MOVEQ     #NM_BARLABEL,d0
  BRA       'skipcopy
'copystring:
  MOVE.l    d4,d0                 ; get string
  MOVE.l    -(a2),d1              ; get length
  ALibJsr   $cf01
'skipcopy:
  MOVE.l    d0,4(a1)
  CLR.l     8(a1)
  MOVE.w    flags,12(a1)
  TST.w     d5
  BEQ       'kip
  MOVE.l    d5,d0
  MOVE.l    -(a2),d1
  ALibJsr   $cf01
  MOVE.l    d0,14(a1)
'kip:
  MOVE.l    me(pc),22(a1)
  MOVE.l    userdata(pc),26(a1)
  ADD.w     #1,8(a3)
'err:
  RTS

_gtsubitem5:
  MOVE.l    -20(a2),userdata
  MOVE.l    -16(a2),me
  BRA       _do_gtsubitem

_gtsubitem4:
  CLR.l     userdata
  MOVE.l    -16(a2),me
  BRA       _do_gtsubitem

;a3=menulist
;d1=flags
;d2=title number
;d3=item number
;d4=subitem number
;d5=string pointer     (or -1 for NM_BARLABEL)
;d6=shortcut$          (or 0 for non)
_gtsubitem2:
  MOVEQ     #-1,d5
_gtsubitem3:
  MOVEQ     #0,d6
._gtsubitem:
  CLR.l     me
  CLR.l     userdata
._do_gtsubitem:
  TST.l     gtbase
  BNE       'ok
  RTS
'ok:
  MOVE.w    d1,flags

  LEA       4(a3),a0
'loop:
  MOVE.l    (a0),d0
  BEQ       'err
  MOVE.l    d0,a0
  DBRA      d2,'loop
'gotit:
  LEA       8(a0),a0
'loop2:
  MOVE.l    (a0),d0
  BEQ       'err
  MOVE.l    d0,a0
  DBRA      d3,'loop2
'gotitem:
  LEA       18(a0),a0
  SUBQ.w    #1,d4
  BMI       'gotsubitem
'loop3:
  MOVE.l    (a0),d0
  BEQ       'err
  MOVE.l    d0,a0
  DBRA      d4,'loop3
'gotsubitem:
  MOVEQ     #itemsize,d0
  MOVE.l    #$10001,d1
  ALibJsr   $c002
  TST.l     d0
  BEQ       'err

  MOVE.l    d0,a1                 ; Add item to list
  MOVE.l    (a0),(a1)
  MOVE.l    d0,(a0)

  TST.l     d5
  BPL       'copystring
  MOVEQ     #NM_BARLABEL,d0
  BRA       'skipcopy
'copystring:
  MOVE.l    d5,d0                 ; get string
  MOVE.l    -(a2),d1              ; get length
  ALibJsr   $cf01
'skipcopy:
  MOVE.l    d0,4(a1)
  CLR.l     8(a1)
  MOVE.w    flags,12(a1)
  TST.w     d6
  BEQ       'kip
  MOVE.l    -(a2),d1
  MOVE.l    -(a2),d0
  ALibJsr   $cf01
  MOVE.l    d0,14(a1)
'kip:
  MOVE.l    me(pc),22(a1)
  MOVE.l    userdata(pc),26(a1)
  ADD.w     #1,8(a3)
'err:
  RTS

._freetitle:
  MOVEQ     #-1,d2
  MOVEQ     #-1,d3
  BSR       finditem
  TST.l     d0
  BEQ       err
  MOVE.l    (a0),(a1)
  MOVE.l    8(a0),a2
  MOVE.l    a0,a1
  MOVEQ     #titlesize,d1
  ALibJsr   $c003
  CMP.l     #0,a2
  BEQ       'endthis
  MOVE.l    a2,a0
  MOVE.l    #99999,d0
  BSR       freeitemlist
'endthis:
  RTS

._freeitem:
  MOVEQ     #-1,d3
  BSR       finditem
  TST.l     d0
  BEQ       err
  MOVE.l    (a0),(a1)
  MOVEQ     #1,d0
  BSR       freeitemlist
  RTS

;a3=menulist
;d1=menu
;d2=item
;d3=subitem
._freesubitem:
  BSR       finditem
  TST.l     d0
  BEQ       err
  MOVE.l    (a0),(a1)
  MOVEQ     #1,d0
  BSR       freeitemlist
  RTS

;a3=menulist
;d1=menu
;d2=item
;d3=subitem
;Returns:
;         d0=-1 for OK or 0 for error
;         a0=item pointer
;         a1=previous item
.finditem:
  TST.l     gtbase
  BEQ       err

  TST.l     4(a3)
  BEQ       err
  LEA       4(a3),a0
'gettitle:
  MOVE.l    a0,a1
  MOVE.l    (a0),d0
  BEQ       err
  MOVE.l    d0,a0
  DBRA      d1,'gettitle
  TST.l     d2
  BMI       'gotit
  LEA       8(a0),a0
'getitem:
  MOVE.l    a0,a1
  MOVE.l    (a0),d0
  BEQ       err
  MOVE.l    d0,a0
  DBRA      d2,'getitem
  TST.l     d3
  BMI       'gotit
  LEA       18(a0),a0
'getsubitem:
  MOVE.l    a0,a1
  MOVE.l    (a0),d0
  BEQ       err
  MOVE.l    d0,a0
  DBRA      d3,'getsubitem
'gotit:
  MOVEQ     #-1,d0
  RTS



;a0=firstitem pointer
;d7=number to free
.freeitemlist:
  MOVEM.l   d7/a2,-(a7)
  MOVE.l    a0,a2
  MOVE.l    d0,d7
  SUBQ.l    #1,d7
'doitem:
  MOVE.l    4(a2),d0
  BMI       'noitemtitle
  BEQ       'noitemtitle
  ALibJsr   $cf02
'noitemtitle
  MOVE.l    14(a2),d0
  BEQ       'noshortcut
  ALibJsr   $cf02
'noshortcut:
  TST.l     18(a2)              ; subitems?
  BEQ       'nosubs

  MOVE.l    a2,-(a7)
  MOVE.l    18(a2),a2
;free subitems
'dosubitem
  MOVE.l    4(a2),d0
  BMI       'nosubitemtitle
  BEQ       'nosubitemtitle
  ALibJsr   $cf02
'nosubitemtitle
  MOVE.l    14(a2),d0
  BEQ       'nosubshortcut
  ALibJsr   $cf02
'nosubshortcut:
  MOVE.l    a2,a1
  MOVE.l    (a2),a2
  MOVEQ     #itemsize,d1
  ALibJsr   $c003
  CMP.l     #0,a2
  BNE       'dosubitem
  MOVE.l    (a7)+,a2
'nosubs:
  MOVE.l    a2,a1
  MOVE.l    (a2),a2
  MOVEQ     #itemsize,d1
  ALibJsr   $c003
  CMP.l     #0,a2
  BEQ       'endthis

  DBRA      d7,'doitem

'endthis:
  MOVEM.l   (a7)+,d7/a2
  RTS

;menu + item
._GetUserData:
MOVEQ.l #-1,d3
_GetUserData2:
'loop:MOVE.l (a2),a2:DBF d1,'loop:LEA 18(a2),a2
'loop2:MOVE.l (a2),a2:DBF d2,'loop2
;check subitem
    TST.w   d3
    BMI     'ok
    LEA     28(a2),a2
'loop3:
    MOVE.l  (a2),a2
    DBF     d3,'loop3
'ok:
    MOVE.l  mi_SIZEOF(a2),d0
    RTS

;menu + item + subitem
;_GetUserData2:
;'loop:MOVE.l (a2),a2:DBF d1,'loop:LEA 18(a2),a2
;'loop2:MOVE.l (a2),a2:DBF d2,'loop2:LEA 28(a2),a2
;'loop3:MOVE.l (a2),a2:DBF d3,'loop3
;MOVE.l mi_SIZEOF(a2),d0:RTS

.changestate
TST d7:BEQ '_Off:BSET #0,13(a3):RTS
'_Off:BCLR #0,13(a3):RTS

changestate2
TST d7:BEQ '_Off:BSET #4,13(a3):RTS
'_Off:BCLR #4,13(a3):RTS

domenustate:;turn off a whole menu list
;
MOVE d1,d7
'loop:MOVE.l (a3),d0:BEQ 'done:MOVE.l d0,a3
BSR changestate:BRA 'loop
'done:RTS

domenustate2:;turn off a particular menu
;
MOVE d2,d7
'loop:MOVE.l (a3),a3:DBF d1,'loop:BRA changestate ;2

domenustate3:;turn off an item
;
MOVE d3,d7
'loop:MOVE.l (a3),a3:DBF d1,'loop:LEA 18(a3),a3
'loop2:MOVE.l (a3),a3:DBF d2,'loop2:BRA changestate2

domenustate4:;turn off a sub item
;
MOVE d4,d7
'loop:MOVE.l (a3),a3:DBF d1,'loop:LEA 18(a3),a3
'loop2:MOVE.l (a3),a3:DBF d2,'loop2:LEA 28(a3),a3
'loop3:MOVE.l (a3),a3:DBF d3,'loop3:BRA changestate2

.domenuchecked
;
'loop:MOVE.l (a2),a2:DBF d1,'loop:LEA 18(a2),a2
'loop2:MOVE.l (a2),a2:DBF d2,'loop2
BRA checked

domenuchecked2
;
'loop:MOVE.l (a2),a2:DBF d1,'loop:LEA 18(a2),a2
'loop2:MOVE.l (a2),a2:DBF d2,'loop2:LEA 28(a2),a2
'loop3:MOVE.l (a2),a2:DBF d3,'loop3
;
checked
BTST #0,12(a2):SNE d0:EXT d0:RTS

.setmenuchecked
;
MOVE.w d3,d0
'loop:MOVE.l (a2),a2:DBF d1,'loop:LEA 18(a2),a2
'loop2:MOVE.l (a2),a2:DBF d2,'loop2
BRA setchecked

setmenuchecked2
;
MOVE.w d4,d0
'loop:MOVE.l (a2),a2:DBF d1,'loop:LEA 18(a2),a2
'loop2:MOVE.l (a2),a2:DBF d2,'loop2:LEA 28(a2),a2
'loop3:MOVE.l (a2),a2:DBF d3,'loop3
;
setchecked
TST.w d0
BEQ 'setoff
BSET #0,12(a2):RTS
'setoff:BCLR #0,12(a2):RTS

shortcutlen:  Dc.l  0
flags:  Dc.w  0
me:     Dc.l  0     ; mutual exclude
userdata:Dc.l 0
gtbase: Dc.l  0
gtname: Dc.b "gadtools.library",0

Even

;==============================================================
errors:
err1:MOVE.l #mess1,d0:TRAP #0
err2:MOVE.l #mess2,d0:TRAP #0
err3:MOVE.l #mess3,d0:TRAP #0
err4:MOVE.l #mess4,d0:TRAP #0
err5:MOVE.l #mess5,d0:TRAP #0
err6:MOVE.l #mess6,d0:TRAP #0
err8:MOVE.l #mess8,d0:TRAP #0

mess1:Dc.b "Illegal Menu number",0
mess2:Dc.b "Illegal Menu Item number",0
mess3:Dc.b "Illegal Menu Sub Item number",0
mess4:Dc.b "Uninitialized Shape",0
mess5:Dc.b "Uninitialized Window",0
mess6:Dc.b "Uninitialized GTMenuList - call CreateMenuStrip first!",0
mess8:Dc.b "GTMenu has no data to build GTMenuList from!",0
Even

createchk:TST.l 4(a3):BEQ err8:RTS

setchk:TST.l 4(a3):BEQ err8:RTS

;================

existschk:;make sure d0 exists
'loop:MOVE.l (a0),d7:BEQ 'done:MOVE.l d7,a0:DBF d0,'loop
'done:RTS

statechk2:MOVE.l a3,a0:MOVE d1,d0:BSR existschk
BEQ err1:RTS

chkchk3:EXG a2,a3:BSR statechk3:EXG a2,a3:RTS
;
statechk3:BSR statechk2:LEA 18(a0),a0:MOVE d2,d0:BSR existschk
BEQ err2:RTS

chkchk4:EXG a2,a3:BSR statechk4:EXG a2,a3:RTS
;
statechk4:BSR statechk3:LEA 28(a0),a0:MOVE d3,d0:BSR existschk
BEQ err3:RTS

chkchk5:
CMP.w #-1,d3
BEQ chkchk3
EXG a2,a3:BSR statechk4:EXG a2,a3:RTS

