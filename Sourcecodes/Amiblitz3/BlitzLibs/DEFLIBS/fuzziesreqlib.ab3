; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram Disk:"
; ExeFile         = "fuzziesreq.obj"
; CreateIcon      = 0
; Residents       = "libmacs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 2
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 65535
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 13
; CursorColumn    = 22
; LabelSearch     = "closelib"
; LabelRemark     = 0
; LabelAll        = 1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max Window      = 5
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 100
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
; *******************
; *                 *
; *  Req   Library  *
; *  Ver         1  *
; *  By King Fuzzy  *
; *                 *
; *******************
;
;   $VER:Req library version 1.1

; #fuzziesreqlib = 53
#_CloseLibrary = -414
#_OpenLibrary  = -552

!libheader{#fuzziesreqlib,init,0,finit,errors}

!dumtoke{"ReqLib","Req Library",_toke}

!afunction{#word}
!args{#word}
!libs
!subs{_ClrReq,0,0}
!name{"ColourRequest","Colour#"}

!afunction{#word}
!args{#string,#string,#string}
!libs
!subs{_TxtReq1,0,0}
!args{#string,#string,#string,#string}
!libs
!subs{_TxtReq2,0,0}
!args{#string,#string,#string,#string,#string}
!libs
!subs{_TxtReq3,0,0}
!name{"TextRequest","(Text,Title,Left Text[,[Middle Text,]Right Text])"}

!astatement
!args{#word,#word,#word}
!libs
!subs{_FilReqSiz,0,0}
!name{"FileReqSize","Lines High,File Length,Device Length,"}

!afunction{#string}
!args{#string,#varptr+#string,#varptr+#string,#word}
!libs
!subs{_FilReq,freqchk,0}
!name{"ReqFileRequest$","(Title$,File$,Path$,Flags)"}

!astatement
!args{#string,#string}
!libs
!subs{_Filter,0,0}
!name{"FileFilter","Show$,Hide$"}

!astatement
!args{#word}
!libs
!subs{_Timeout,0,0}
!name{"TextTimeout","Timeout Seconds"}

!astatement
!args{#word,#word,#word}
!libs
!subs{_ReqClr1,0,0}
!args{#word,#word,#word,#word,#word,#word}
!libs
!subs{_ReqClr2,0,0}
!args{#word,#word,#word,#word,#word,#word,#word,#word,#word,#word,#word}
!libs
!subs{_ReqClr3,0,0}
!name{"ReqColours","Text,Detail,Block[,File,Dir,Device[,GadText,GadBox,StringName,StringBox,Frame]]"}

!afunction{#string}
!args{#string,#varptr+#string,#long,#long}
!libs
!subs{_GetStr,gstrchk,0}
!name{"GetString$","(Title$,Default$,Visable size,Max length)"}

!afunction{#long}
!args
!libs
!subs{_Fstruct,0,0}
!name{"FileStructure","Pointer to file requester structor"}

!afunction{#string}
!args
!libs
!subs{_NxtFile,0,0}
!name{"NextFile$","Returns next file form MaxSelect$"}

!afunction{#string}
!args{#string,#varptr+#string,#varptr+#string,#word,#word}
!libs
!subs{_MaxSel,freqchk,0}
!name{"MaxSelect$","Path$=(Title$,File$,Path$,Flags,number of files)"}

!afunction{#word}
!args
!libs
!subs{_Fntsiz,0,0}
!name{"ReqFontSize","Returns font size"}

!afunction{#long}
!args
!libs
!subs{_Rbas,0,0}
!name{"Req_Base","Returns pointer to req.library"}

!afunction{#long}
!args
!libs
!subs{_Dbas,0,0}
!name{"Dos_Base","Returns pointer to dos.library"}

!afunction{#long}
!args
!libs
!subs{_Ibas,0,0}
!name{"Int_Base","Returns pointer to intuition.library"}

!afunction{#long}
!args
!libs
!subs{_Gbas,0,0}
!name{"Gfx_Base","Returns pointer to graphics.library"}

!afunction{#long}
!args
!libs
!subs{_Rbas,0,0}
!name{"Rex_Base","Returns pointer to RexxSys.library ?"}

!afunction{#long}
!args
!libs
!subs{_Cbas,0,0}
!name{"Con_Base","Returns pointer to console.device"}

.nextfunction:
init:!nullsub{_codeinit,0,0}

finit:!nullsub{_codefinit,0,0}

_load:!nullsub{0,0,0}

_save:!nullsub{0,0,0}

_use:!nullsub{0,0,0}

_free:!nullsub{0,0,0}

!libfin{_toke,_load,_save,_use,_free,5,4} ;don't change!!!(cludged)

;----------------------------------------------------------------

._Rbas: MOVE.l rqbase,d0:RTS
._Dbas: MOVE.l rqbase,a0:MOVE.l $26(a0),d0:RTS
._Ibas: MOVE.l rqbase,a0:MOVE.l $2a(a0),d0:RTS
._Gbas: MOVE.l rqbase,a0:MOVE.l $2e(a0),d0:RTS
._Xbas: MOVE.l rqbase,a0:MOVE.l $44(a0),d0:RTS
._Cbas: MOVE.l rqbase,a0:MOVE.l $3c(a0),d0:RTS

;._Rbas: MOVE.l rbase,d0:MOVE.l (a0),d0:RTS


._codeinit:
  LEA rqname(pc),a1:MOVEQ#0,d0:MOVE.l 4,a6:JSR _OpenLibrary(a6)
  MOVE.l d0,rqbase:RTS

._codefinit:
  MOVEM.l d0-d7/a0-a6,-(a7):TST.b prge:BEQ npg
  MOVE.l rqbase(pc),a6:LEA FrqStr(pc),a0
  JSR -$72(a6)
npg:
  MOVE.l rqbase(pc),d0:BEQ noclose:MOVE.l d0,a1:MOVE.l 4,a6
  JSR _CloseLibrary(a6):CLR.l rqbase:noclose
  MOVEM.l (a7)+,d0-d7/a0-a6:RTS

rqname:Dc.b "req.library",0
prge:  Dc.b     0
  Even
.rqbase:Dc.l 0

._ClrReq:
  MOVEM.l a0/a6,-(a7)
  MOVE.l  rqbase(pc),a6
  JSR -$5a(a6)
  MOVEM.l (a7)+,a0/a6
  RTS

._Timeout:
  LEA TxtStr(pc),a0
  MOVE.w  d0,38(a0)
  RTS

._TxtReq1:
  MOVEQ.l #0,d4
  MOVEQ.l #0,d5
  BRA txrqsd
._TxtReq2:
  MOVE.l -16(a2),d5
  MOVEQ.l #0,d4
  BRA txrqsd
._TxtReq3:
  MOVE.l -16(a2),d4
  MOVE.l -20(a2),d5
txrqsd:
  MOVE.l -(a2),d1
  MOVE.l -(a2),d2
  MOVE.l -(a2),d3

  MOVEM.l  d6-d7/a0-a6,-(a7)

  MOVE.l  d0,a5
  MOVE.l  4,a6

  MOVEQ.l #0,d0
  MOVE.w  d1,d0
  ADD.w   d2,d0
  ADD.w   d3,d0
  ADD.w   d4,d0
  ADD.w   d5,d0
  ADD.w   #5,d0

  MOVE.l  d0,d7  ;keep length

  MOVEM.w d1-d5,-(a7)
  MOVE.l  #0,d1
  JSR -198(a6)
  MOVEM.w (a7)+,d1-d5
  MOVE.l d0,d6   ;keep address
  BEQ nomem

  MOVE.l  d0,a1
  LEA  TxtStr(pc),a0

      MOVE.l  a1,(a0)
 gt1: MOVE.b (a5)+,(a1)+
      DBF d1,gt1
      MOVE.b -(a5),-(a1)
      CLR.b (a1)+

      MOVE.l  a1,24(a0)
 gt2: MOVE.b (a5)+,(a1)+
      DBF d2,gt2
      MOVE.b -(a5),-(a1)
      CLR.b (a1)+

      MOVE.l  a1,16(a0)
 gt3: MOVE.b (a5)+,(a1)+
      DBF d3,gt3
      MOVE.b -(a5),-(a1)
      CLR.b (a1)+

      CLR.l 12(a0)
      TST.w d4
      BEQ gtt5
      MOVE.l  a1,12(a0)
 gt4: MOVE.b (a5)+,(a1)+
      DBF d4,gt4
      MOVE.b -(a5),-(a1)
      CLR.b (a1)+
gtt5:
      CLR.l 20(a0)
      TST.w d5
      BEQ gott
      MOVE.l  a1,20(a0)
 gt5: MOVE.b (a5)+,(a1)+
      DBF d5,gt5
      MOVE.b -(a5),-(a1)
      CLR.b (a1)+
gott:
      MOVE.l  rqbase(pc),a6
      JSR -$ae(a6)
      MOVE.l  d0,d5
      MOVE.l  d6,a1
      MOVE.l  d7,d0
      MOVE.l  4,a6
      JSR -210(a6)
      MOVE.l  d5,d0
nomem:
  MOVEM.l  (a7)+,d6-d7/a0-a6

  RTS

._FilReqSiz:
  LEA FrqStr(pc),a0
  MOVE.w d0,24(a0)
  MOVE.w d1,26(a0)
  MOVE.w d2,28(a0)
  RTS

._Filter:
  MOVEM.l d0-d1/a0-a2,-(a7)

  LEA FrqStr(pc),a0
  MOVE.l  d0,a1
  MOVE.l  -(a2),d0
  MOVE.l  -(a2),d1
  LEA $98(a0),a2
  BRA s
fqsh:
  MOVE.b (a1)+,(a2)+
s:DBF  d0,fqsh
  MOVE.b #0,(a2)
  LEA $78(a0),a2
  BRA h
fqhd:
  MOVE.b (a1)+,(a2)+
h:DBF  d1,fqhd
  MOVE.b #0,(a2)
ff:
  MOVEM.l (a7)+,d0-d1/a0-a2
  RTS

._FilReq:
  BCLR   #1,d3
  LEA    FrqStr(pc),a0
  BSR    _FRQ
  LEA    fnam(pc),a0
  TST.l  d0
  BEQ    nostr
  BSR    _RetStr
nostr:
  RTS

TxtStr:
  Dcb.l 7,0
  Dc.w  $ffff
  Dcb.w 8,0
._ReqClr3:

 LEA FrqStr(pc),a0
 MOVE.w -(a2),$30(a0)
 MOVE.w -(a2),$3a(a0)
 MOVE.w -(a2),$34(a0)
 MOVE.w -(a2),$36(a0)
 MOVE.w -(a2),$38(a0)
._ReqClr2:
 LEA FrqStr(pc),a0
 MOVE.w d3,$24(a0)
 MOVE.w d3,$28(a0)
 MOVE.w d4,$22(a0)
 MOVE.w d5,$26(a0)
 MOVE.w d5,$2a(a0)
._ReqClr1:
 LEA FrqStr(pc),a0
MOVE.l  a1,-(a7)
 LEA TxtStr(pc),a1

 MOVE.w d0,$32(a0)
 MOVE.w d0,30(a1)
 MOVE.w d1,$2c(a0)
 MOVE.w d1,32(a1)
 MOVE.w d2,$2e(a0)
 MOVE.w d2,34(a1)

MOVE.l  (a7)+,a1
 RTS

._GetStr:
MOVEM.l a0-a2/a5-a6,-(a7)
MOVE.l  rqbase(pc),a6
MOVE.l  d0,a1
MOVE.l -(a2),d0
SUB.l  d0,a3
MOVE.l  d1,a0
MOVE.l  d2,d0
MOVE.l  d3,d1
SUB.l   a2,a2
MOVE.l  a0,a5
JSR -$a2(a6)
TST.l    d0
BEQ     ngst
MOVE.l  a5,a0
BSR _RetStr
ngst:
MOVEM.l (a7)+,a0-a2/a5-a6
RTS

._RetStr:
  MOVEQ.l #0,d0
RetStr1:
  MOVE.b (a0)+,(a3)+
  BEQ   RetStr2
  ADDQ.l #1,d0
  BRA    RetStr1
RetStr2:
  SUB.l #1,a3
  RTS
EXs:    Dc.l    0

._FRQ:
  MOVE.l d1,10(a0)
  MOVE.l d2,6(a0)
  MOVE.l d0,2(a0)
  MOVE.w d3,32(a0)
  MOVE.l -(a2),d0
  SUB.l  d0,a3
  MOVEM.l d1-d7/a1-a2/a4-a6,-(a7)
  LEA fnam(pc),a1
  MOVE.l  a1,14(a0)
  MOVE.l  rqbase(pc),a6
  MOVE.b #-1,prge
  JSR -$54(a6)
  MOVEM.l (a7)+,d1-d7/a1-a2/a4-a6
  RTS

._MaxSel:
  MOVE.l d2,-(a7)
  LEA FrqStr(pc),a0
  MOVE.w  d4,$16(a0)
  BSET    #1,d3
  BSR _FRQ
  MOVE.l $74+FrqStr(pc),EXs
  MOVE.l (a7)+,a0
  TST.l  d0
  BEQ    nomstr
  BSR    _RetStr
nomstr:
  RTS



  RTS

._NxtFile:
MOVE.l  EXs(pc),a0
MOVEQ.l #0,d0
CMP.l   d0,a0
BEQ     NoName
MOVE.w   #-1,rff
MOVE.l  (a0),EXs
MOVE.w  4(a0),d1
LEA     12(a0),a0
BSR     _RetStr
nofl:
RTS
NoName:
CMP.w    #-1,rff
BEQ      nofl
MOVE.w   #-1,rff
MOVE.l   10+FrqStr(pc),a0
BSR     _RetStr
RTS
rff:     Dc.w     0
._Fntsiz:
MOVE.w $70+FrqStr(pc),d0
RTS

._Fstruct:
MOVE.l #FrqStr,d0
RTS

FrqStr:
  Dc.w  $0
  Dc.l  0               ;stitle
  Dc.l  0               ;svldpath
  Dc.l  0               ;svldfile
  Dc.l  fnam            ;FILE_NAME
  Dc.l  0

  Dc.w  $01             ;# Batchload files
  Dc.w  $008            ;# LINES IN FILE SELECTOR
  Dc.w  $010            ;# CHARS IN FILE SELECTOR
  Dc.w  $00a            ;# CHARS IN PATH SELECTOR
  Dc.w  $ffff
  Dc.w  $04             ;flags
  Dc.w  $02             ;Directories Color
  Dc.w  $01             ;File COLOR
  Dc.w  $03             ;Path COLOR
  Dc.w  $0
  Dc.w  $0
  Dc.w  $03             ;title bar text color/slideborder
  Dc.w  $02             ;title bar back color/border/slide
  Dc.w  $03             ;Icon text color
  Dc.w  $02             ;# files  Showen/Hiden color
  Dc.w  $03             ;'drawers' 'file''Hide/Show' text color
  Dc.w  $02             ;'DRAWERS' 'FILE''Hide/Show' box color
  Dc.w  $03             ;Files box color
  Dc.w  $02             ;icon box color
  Dcb.w 24,$0
  Dc.w  100             ;X POSITION
  Dc.w  20              ;Y POSITION
  Dc.l  0
  Dc.l  0
  Dcb.b 300,$0

fnam: Dcb.b 164,0


;----------------------------------------------------------------

;******************** Error Checking ******************;

.errors:

err1:MOVEQ.l #1,d0:TRAP #0
err2:MOVE.l #mess2,d0:TRAP #0
err3:MOVE.l #mess3,d0:TRAP #0

mess2:Dc.b "Not enough space in PATH string",0
mess3:Dc.b "Not enough space in NAME string",0

Even
gstrchk:TST.l d1:BEQ err1
MOVE.l d1,a0:CMP.l -8(a0),d3:BCC err3
RTS

freqchk:TST.l d1:BEQ err1:TST.l d2:BEQ err1
MOVE.l d1,a0:CMP.l #32,-8(a0):BCS err3
MOVE.l d2,a0:CMP.l #132,-8(a0):BCS err2
RTS

