; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram Disk:"
; ExeFile         = "riAppLib.obj"
; CreateIcon      = 0
; Residents       = "libnums.res,libmacs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 1
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 85
; CursorColumn    = 29
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max Window      = 20
; Max BlitzFont   = 4
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;#riapplib=61

#ExecBase=4

!libheader {#riapplib,init,0,finit,0}

!acommand {#long}
!args {#push|#long}
!libs {#windowslib,#ia0|#pd0}
!subs {addwindow+1,0,0}
!name {"AddAppWindow","(windownumber)"}

!acommand {#long}
!args {#long}
!libs
!subs {delwindow+1,0,0}
!name {"DelAppWindow","(windownumber)"}

!afunction {#string}
!args {#long}
!libs
!subs {appeventwindow+1,0,0}
!name {"AppWindowEvent","(windownumber)"}

!acommand {#long}
!args
!libs
!subs {getappevent+1,0,0}
!name {"AppEvent",""}

!acommand {#long}
!args {#long,#string}
!libs
!subs {addmenu+1,0,0}
!name {"AddAppMenu","(id,text$)"}

!afunction {#string}
!args {#long}
!libs
!subs {appeventmenu2+1,0,0}
!name {"AppMenuEvent","(id)"}

!afunction {#long}
!args
!libs
!subs {appeventmenu+1,0,0}
!name {"AppMenuNumber","  -- returns number of selected AppMenu"}

!acommand {#long}
!args {#long}
!libs
!subs {delmenu+1,0,0}
!name {"DelAppMenu","(id)"}

!acommand {#long}
!args {#long,#string,#string}
!libs
!subs {addicon+1,0,0}
!name {"AddAppIcon","(id,text$,string$)"}

!afunction {#string}
!args {#long}
!libs
!subs {appeventicon+1,0,0}
!name {"AppIconEvent","(id)  -- return !! for double-click"}

!acommand {#long}
!args {#long}
!libs
!subs {delicon+1,0,0}
!name {"DelAppIcon","(id)"}

!afunction {#long}
!args {#long}
!libs
!subs {_appicon2,0,0}
!name {"AppIconHit","(id)"}

finit:!nullsub{_libfinit,0,0}
init:!nullsub{_libinit,0,0}

!libfin

._libinit:
    LEA     appwindows(pc),a0
    MOVE.l  #0,(a0)+
    MOVE.l  #0,(a0)+
    MOVE.l  #0,(a0)+
    MOVE.l  #0,(a0)+

    MOVE.l  4,a6                    ;Open workbench.library
    MOVE.l  #0,windownumber
    LEA     wbname(pc),a1
    MOVEQ.l #0,d0
    JSR     -552(a6)
    MOVE.l  d0,wbbase

    LEA     dosname(pc),a1          ; Open dos.library
    MOVEQ.l #37,d0
    JSR     -552(a6)
    MOVE.l  d0,_dosbase

    LEA     iconlibname(pc),a1
    MOVEQ.l #0,d0
    JSR     -552(a6)
    MOVE.l  d0,_iconbase

    MOVE.l  #0,appwindow_msgport
    MOVE.l  #0,appmenu_msgport
    MOVE.l  #0,appicon_msgport
    RTS

._libfinit:
    TST.l   wbbase                  ;Close workbench.library
    BEQ     'oops
    MOVE.l  #4,d0
    BSR     delwindow
    MOVE.l  #3,d0
    BSR     delwindow
    MOVE.l  #2,d0
    BSR     delwindow
    MOVE.l  #1,d0
    BSR     delwindow
    MOVE.l  #0,d0
    BSR     delwindow

    MOVE.l  #15,d0
'loop2:
    MOVE.l  d0,-(a7)
    BSR     delmenu
    MOVE.l  (a7)+,d0
    DBRA    d0,'loop2

    MOVE.l  #15,d0
'loop3:
    MOVE.l  d0,-(a7)
    BSR     delicon
    MOVE.l  (a7)+,d0
    DBRA    d0,'loop3

    TST.l   appwindow_msgport
    BEQ     'oops1
    MOVE.l  appwindow_msgport,a0
    BSR     delmsgport
    MOVE.l  #0,appwindow_msgport

'oops1:
    TST.l   appmenu_msgport
    BEQ     'oops2
    MOVE.l  appmenu_msgport,a0
    BSR     delmsgport
    MOVE.l  #0,appmenu_msgport

'oops2:
    TST.l   appicon_msgport
    BEQ     'oops3
    MOVE.l  appicon_msgport,a0
    BSR     delmsgport
    MOVE.l  #0,appicon_msgport
'oops3:
    MOVE.l  4,a6
    MOVE.l  _dosbase,a1
    JSR     -414(a6)
    MOVE.l  wbbase,a1
    JSR     -414(a6)
    MOVE.l  _iconbase,a1
    JSR     -414(a6)
'oops:
    RTS

_appicon2:
    MOVE.l  #1,flag
    BRA     skip111
.appeventicon:
    MOVE.l  #0,flag
skip111:
    TST.l   appicon_msgport
    BEQ     'oops
    MOVE.l  d0,iconnumber
    CMP.l   #16,d0
    BGE     'oops
    TST.l   wbbase
    BEQ     'oops
    TST.l   _dosbase
    BEQ     'oops
    TST.l   iconmessage
    BEQ     'oops
    CMPI.w  #8,iconmsgtype
    BNE     'oops
    MOVE.l  iconmsgid,d0
    CMP.l   iconnumber,d0
    BNE     'oops
    TST.l   flag
    BEQ     'skip
    CMPI.l  #0,iconnumargs
    BEQ     'doubleclick
    MOVEQ.l #0,d0
    RTS
'skip:
    CMPI.l  #0,iconnumargs
    BEQ     'oops
    MOVE.l  iconmessage,a0
    BSR     _returnfilename
    RTS
'oops:
    MOVEQ.l    #0,d0
    RTS
'doubleclick:
    MOVE.l      #-1,d0
    RTS

;===== FLAG = 1  : Filename
;===== FLAG = 0  : Menu Item
.appeventmenu:
    MOVE.l  #0,flag
    MOVE.l  #0,d0
    BRA     app2
appeventmenu2:
    MOVE.l  #1,flag
app2:
    TST.l   appmenu_msgport
    BEQ     'oops
    MOVE.l  d0,menunumber
    CMP.l   #16,d0
    BGE     'oops
    TST.l   wbbase
    BEQ     'oops
    TST.l   _dosbase
    BEQ     'oops
    TST.l   menumessage
    BEQ     'oops
    CMPI.w   #9,menumsgtype
    BNE     'oops
    TST.l   flag
    BEQ     'skip2
    MOVE.l  menumsgid,d0
    CMP.l   menunumber,d0
    BNE     'oops
    TST.l   menunumargs
    BNE     'afilename
    MOVEQ.l #0,d0
    RTS
'skip2:
    TST.l   menumsgid
    BEQ     'skip3
    MOVE.l  menumsgid,d0
    RTS

'skip3:
    MOVE.l  #-1,d0
    RTS

'afilename:
    MOVE.l  menumessage,a0
    BSR     _returnfilename
    RTS

'oops:
    TST.l   flag
    BEQ     'skip3
    MOVEQ.l #0,d0
    RTS

.appeventwindow:
    TST.l   appwindow_msgport
    BEQ     'oops
    MOVE.l  d0,windownumber
    CMP.l   #5,d0
    BGE     'oops
    TST.l   wbbase
    BEQ     'oops
    TST.l   _dosbase
    BEQ     'oops
    TST.l   winmessage
    BEQ     'oops
    CMPI.w   #7,winmsgtype
    BNE     'oops
    MOVE.l  winmsgid,d0
    CMP.l   windownumber,d0
    BNE     'oops
    CMPI.l  #0,numargs
    BEQ     'oops
    MOVE.l  winmessage,a0
    BSR     _returnfilename
    RTS

'oops:
    MOVEQ.l #0,d0
    RTS


.getappevent:
    MOVE.l  #0,msg
    BSR   _getwinevent
    BSR   _getmenuevent
    BSR   _geticonevent
    MOVE.l  msg,d0
    RTS

.addmenu:
    MOVE.l  d0,menunumber
    MOVE.l  d1,temp
    TST.l   appmenu_msgport
    BNE     'ok
    BSR     makemsgport
    TST.l   d0
    BEQ     'oops1
    MOVE.l  d0,appmenu_msgport
    MOVE.l  menunumber,d0
'ok:
    CMP.l   #15,d0
    BGE     'oops
    TST.l   wbbase                        ; wb lib open?
    BEQ     'oops
    TST.l   _dosbase                      ; doslib open?
    BEQ     'oops
    LEA     appmenus(pc),a2
    ASL.l   #2,d0
    TST.l   0(a2,d0.l)
    BNE     'oops
    ASR.l   #2,d0
    MOVE.l  wbbase,a6
    MOVEQ.l #0,d1
    MOVE.l  temp,a0
    MOVE.l  appmenu_msgport,a1
    MOVE.l  #0,a2
    JSR     -72(a6)
    TST.l   d0
    BEQ     'oops
    LEA     appmenus(pc),a0
    MOVE.l  menunumber,d1
    ASL.l   #2,d1
    MOVE.l  d0,0(a0,d1.l)
    MOVE.l  #-1,d0
    RTS
'oops:
    MOVEQ.l #0,d0
    RTS
'oops1:
    MOVEQ.l #1,d0
    RTS


.addicon:
    TST.l   wbbase
    BEQ     'oops
    TST.l   _dosbase
    BEQ     'oops
    TST.l   _iconbase     ;srm
    BEQ     'oops1         ;srm
    CMP.l   #16,d0
    BGE     'oops
    MOVE.l  d0,iconnumber
    MOVE.l  d1,icontext
    MOVE.l  d2,iconname
    TST.l   appicon_msgport
    BNE     'ok
    BSR     makemsgport
    TST.l   d0
    BEQ     'oops3
    MOVE.l  d0,appicon_msgport
'ok:
    MOVE.l  iconname,d0
    BSR     getdiskobj
    TST.l   d0
    BEQ     'oops2
    MOVE.l  d0,a3
    LEA     diskobjects(pc),a0
    MOVE.l  iconnumber,d1
    ASL.l   #2,d1
    MOVE.l  d0,0(a0,d1.l)
    MOVE.l  wbbase,a6
    MOVE.l  appicon_msgport,a1
    MOVE.l  iconnumber,d0
    MOVEQ.l #0,d1
    MOVE.l  #0,a4
    MOVE.l  #0,a2
    MOVE.l  icontext,a0
    JSR     -60(a6)

    TST.l   d0
    BEQ     'oops
    LEA     appicons(pc),a0
    MOVE.l  iconnumber,d1
    ASL.l   #2,d1
    MOVE.l  d0,0(a0,d1.l)

    LEA     diskobjects(pc),a0
    MOVE.l  iconnumber,d1
    ASL.l   #2,d1
    MOVE.l  0(a0,d1.l),d0
    MOVE.l  #-1,d0

    RTS
'oops1:
    MOVEQ.l #1,d0
    RTS

'oops:
    MOVEQ.l #0,d0
    RTS
'oops2:
    MOVEQ.l #2,d0
    RTS
'oops3:
    MOVEQ.l #3,d0
    RTS

.addwindow:
    TST.l   wbbase                        ; wb lib open?
    BEQ     'oops
    TST.l   _dosbase                      ; doslib open?
    BEQ     'oops
    MOVE.l  (a0),windowptr                ; Store window ptr
    MOVE.l  -(a2),d0                      ; Get window number
    CMP.l   #5,d0                         ; Too many?
    BGE     'oops
    MOVE.l  d0,windownumber
    TST.l   appwindow_msgport
    BNE     'ok
    BSR     makemsgport
    TST.l   d0
    BEQ     'oops
    MOVE.l  d0,appwindow_msgport
    MOVE.l  windownumber,d0
'ok:
    LEA     appwindows(pc),a0
    ASL.l   #2,d0
    MOVE.l  0(a0,d0.l),d0
    TST.l   d0
    BNE     'oops
    MOVE.l  wbbase,a6                     ; wb.lib base
    MOVE.l  windownumber,d0               ; NULL
    MOVEQ.l #0,d1                         ; NULL
    MOVE.l  windowptr,a0                  ; window ptr
    MOVE.l  appwindow_msgport,a1          ; msg port
    MOVE.l  #0,a2                         ; NULL
    JSR     -48(a6)                       ; AddAppWindow()
    TST.l   d0                            ; success
    BEQ     'oops
    MOVE.l  d0,a1                         ; Store -> a1
    MOVE.l  windownumber,d0               ; Window number
    LEA     appwindows(pc),a0             ; AppWindow list
    ASL.l   #2,d0
    MOVE.l  a1,0(a0,d0.l)
    MOVE.l  #-1,d0
    RTS
'oops:
    MOVE.l  #0,d0
    RTS


.delwindow:
    TST.l     appwindow_msgport
    BEQ       'oops
    MOVE.l    d0,windownumber
    CMPI.l    #5,d0
    BGE       'oops
    TST.l     wbbase
    BEQ       'oops
    TST.l     _dosbase
    BEQ       'oops

    MOVE.l    windownumber,d0
    LEA       appwindows(pc),a0
    ASL.l     #2,d0
    MOVE.l    0(a0,d0.l),d1
    MOVE.l    d1,d0
    TST.l     d0
    BEQ       'oops
    MOVE.l    d0,a0

    MOVE.l    wbbase,a6
    JSR       -54(a6)
    TST.l     d0
    BEQ       'oops
    MOVE.l    windownumber,d0
    LEA       appwindows(pc),a0
    ASL.l     #2,d0
    MOVE.l    #0,0(a0,d0.l)
    MOVE.l    #-1,d0
    RTS
'oops:
    MOVEQ.l    #0,d0
    RTS

.delicon:
    TST.l     appicon_msgport
    BEQ       'oops
    MOVE.l    d0,iconnumber
    CMPI.l    #16,d0
    BGE       'oops
    TST.l     wbbase
    BEQ       'oops
    TST.l     _dosbase
    BEQ       'oops
    TST.l     _iconbase
    BEQ       'oops
    LEA       appicons(pc),a0
    ASL.l     #2,d0
    MOVE.l    0(a0,d0.l),d0
    BEQ       'oops
    MOVE.l    d0,a0
    MOVE.l    wbbase,a6
    JSR       -66(a6)
    TST.l     d0
    BEQ       'oops
    MOVE.l    iconnumber,d0
    LEA       appicons(pc),a0
    ASL.l     #2,d0
    MOVE.l    #0,0(a0,d0.l)
    MOVE.l    iconnumber,d0
    LEA       diskobjects(pc),a0
    ASL.l     #2,d0
    MOVE.l    0(a0,d0.l),a0
    TST.l     _iconbase
    BEQ       'oops
    MOVEM.l  d0-d7/a0-a6,-(a7)
    MOVE.l    _iconbase,a6
    MOVEQ.l   #0,d0
    MOVEQ.l   #0,d1
    MOVEQ.l   #0,d2
    MOVEQ.l   #0,d3
    SUBA.l    a1,a1
    SUBA.l    a2,a2
    JSR       -90(a6)
    MOVEM.l (a7)+,d0-d7/a0-a6
    MOVEQ.l   #-1,d0
    RTS

'oops:
    MOVEQ.l   #0,d0
    RTS

.delmenu:
    TST.l     appmenu_msgport
    BEQ       'oops
    MOVE.l    d0,menunumber
    CMPI.l    #16,d0
    BGE       'oops
    TST.l     wbbase
    BEQ       'oops
    TST.l     _dosbase
    BEQ       'oops
    MOVE.l    menunumber,d0
    LEA       appmenus(pc),a0
    ASL.l     #2,d0
    MOVE.l    0(a0,d0.l),d1
    MOVE.l    d1,d0
    TST.l     d0
    BEQ       'oops
    MOVE.l    d0,a0
    MOVE.l    wbbase,a6
    JSR       -78(a6)
    TST.l     d0
    BEQ       'oops
    MOVE.l    menunumber,d0
    LEA       appmenus(pc),a0
    ASL.l     #2,d0
    MOVE.l    #0,0(a0,d0.l)
    MOVE.l    #-1,d0
    RTS

'oops:
    MOVEQ.l   #0,d0
    RTS


.SUB_ROUTINES

._retfilename
_returnfilename
;a0=pointer to filename
;d1=length
    MOVE.l  34(a0),a1
    MOVE.l  a1,arglist
    MOVE.l  (a1),d1
    MOVE.l  _dosbase,a6
    LEA     args(pc),a1
    MOVE.l  a1,d2
    MOVE.l  #255,d3
    JSR     -402(a6)            ; Get name from LOCK
    TST.l   d0
    BEQ     'oops
    MOVE.l  #0,d0
    LEA     args(pc),a0
    MOVEQ.l #0,d0
'aloop:
    TST.b   (a0)+
    BEQ     'endloop
    ADDQ.l  #1,d0
    BRA     'aloop
'endloop:
    SUBQ.l  #1,a0
    CMP.b   #":",-1(a0)
    BEQ     'nope
    MOVE.b  #"/",(a0)+
'nope:
    ADDI.l  #4,arglist
    MOVE.l  arglist,a1
    MOVE.l  (a1),a1
'aloop2:
    MOVE.b  (a1)+,(a0)+
    BNE     'aloop2
    LEA     args(pc),a1
    SUB.l   a1,a0
    MOVE.l  a0,d0
    SUBQ.l  #1,d0
'aloop3:
    MOVE.b  (a1)+,(a3)+
    BNE     'aloop3
    MOVE.b  #0,(a3)
    RTS
'oops:
    MOVE.l  #0,d0
    RTS



._getmenuevent:
    MOVEM.l  d0-d7/a1-a6,-(a7)
    MOVE.l  4,a6
    TST.l   appmenu_msgport
    BEQ     'oops
    TST.l   menumessage
    BEQ     'ok
    MOVE.l  menumessage,a1
    JSR     -378(a6)
'ok:
    MOVE.l  appmenu_msgport,a0
    JSR     -372(a6)
    TST.l   d0
    BEQ     'oops
    MOVE.l  d0,a0
    MOVE.l  d0,menumessage
    MOVE.l  30(a0),menunumargs
    MOVE.l  26(a0),menumsgid
    MOVE.w  20(a0),menumsgtype
    MOVE.l  #-1,msg
    MOVEM.l (a7)+,d0-d7/a1-a6
    RTS
'oops:
    MOVE.l  #0,menumessage
    MOVE.l  #0,menumsgid
    MOVE.w  #0,menumsgtype
    MOVE.l  #0,menunumargs
    MOVEM.l (a7)+,d0-d7/a1-a6
    RTS


._getwinevent:
    MOVEM.l  d0-d7/a1-a6,-(a7)
    MOVE.l  4,a6
    TST.l   appwindow_msgport
    BEQ     'oops
    TST.l   winmessage
    BEQ     'ok
    MOVE.l  winmessage,a1
    JSR     -378(a6)
'ok:
    MOVE.l  appwindow_msgport,a0
    JSR     -372(a6)
    TST.l   d0
    BEQ     'oops
    MOVE.l  d0,a0
    MOVE.l  d0,winmessage
    MOVE.l  26(a0),winmsgid
    MOVE.w  20(a0),winmsgtype
    MOVE.l  30(a0),numargs
    MOVE.l  #-1,msg
    MOVEM.l (a7)+,d0-d7/a1-a6
    RTS
'oops:
    MOVE.l  #0,winmessage
    MOVE.l  #0,winmsgid
    MOVE.w  #0,winmsgtype
    MOVE.l  #0,numargs
    MOVEM.l (a7)+,d0-d7/a1-a6
    RTS

._geticonevent:
    MOVEM.l  d0-d7/a1-a6,-(a7)
    MOVE.l  4,a6
    TST.l   appicon_msgport
    BEQ     'oops
    TST.l   iconmessage
    BEQ     'ok
    MOVE.l  iconmessage,a1
    JSR     -378(a6)
'ok:
    MOVE.l  appicon_msgport,a0
    JSR     -372(a6)
    TST.l   d0
    BEQ     'oops
    MOVE.l  d0,a0
    MOVE.l  d0,iconmessage
    MOVE.l  26(a0),iconmsgid
    MOVE.w  20(a0),iconmsgtype
    MOVE.l  30(a0),iconnumargs
    MOVE.l  #-1,msg
    MOVEM.l (a7)+,d0-d7/a1-a6
    RTS
'oops:
    MOVE.l  #0,iconmessage
    MOVE.l  #0,iconmsgid
    MOVE.w  #0,iconmsgtype
    MOVE.l  #0,iconnumargs
    MOVEM.l (a7)+,d0-d7/a1-a6
    RTS


;= A0 = Message pointer
;= D0 = Length of filename
;= A0 = Pointer to filename
._getappfile:
    MOVEM.l d1-d7/a1-a6,-(a7)
    MOVE.l  34(a0),a1
    MOVE.l  a1,arglist
    MOVE.l  (a1),d1
    MOVE.l  _dosbase,a6
    LEA     args(pc),a1
    MOVE.l  a1,d2
    MOVE.l  #255,d3
    JSR     -402(a6)            ; Get name from LOCK
    TST.l   d0
    BEQ     'oops
    MOVE.l  #0,d0
    LEA     args(pc),a0
    MOVEQ.l #0,d0
'aloop:
    TST.b   (a0)+
    BEQ     'endloop
    ADDQ.l  #1,d0             ; Count length of PATH
    BRA     'aloop
'endloop:
    SUBQ.l  #1,a0
    CMP.b   #":",-1(a0)
    BEQ     'nope
    MOVE.b  #"/",(a0)+        ; Append / if necessary
'nope:
    ADDI.l  #4,arglist
    MOVE.l  arglist,a1
    MOVE.l  (a1),a1
'aloop2:
    MOVE.b  (a1)+,(a0)+
    BNE     'aloop2
    LEA     args(pc),a1
    SUB.l   a1,a0
    MOVE.l  a0,d0
    MOVEM.l (a7)+,d1-d7/a1-a6
    RTS
'oops:
    MOVEM.l (a7)+,d1-d7/a1-a6
    MOVE.l  #0,d0
    MOVE.l  #0,a0
    RTS

.delmsgport:
    CMP.l   #0,a0
    BEQ     'oops
    MOVE.l  4,a6
    JSR     -672(a6)
'oops:
    RTS

.makemsgport:
    MOVE.l  4,a6
    JSR     -666(a6)
    RTS


.getdiskobj:
;== ICON.LIBRARY --> A6
;== IN D0 *filename
;== OUT D0 DiskObject
  TST.l     _iconbase
  BEQ       'oops
  MOVE.l    _iconbase,a6
  MOVE.l    d0,a0                    ; get file name
  JSR       -78(a6)                  ; call GetDiskObject()
  RTS                                ; return
'oops:
  MOVEQ.l   #0,d0
  RTS

;========== Library Stuff =========
wbname:     Dc.b    "workbench.library",0
      Even
wbbase:     Dc.l    0
_dosbase:   Dc.l    0
dosname:    Dc.b    "dos.library",0
      Even
_iconbase:  Dc.l    0
iconlibname:   Dc.b    "icon.library",0
      Even

;========== AppWindow Stuff ===========
appwindows:         Dcb.l   8,0
windowptr:          Dc.l    0
windownumber:       Dc.l    0
arglist:            Dc.l    0
args:               Dcb.b   512,0
numargs:            Dc.l    0
menunumargs:        Dc.l    0
appwindow_msgport:  Dc.l    0
winmsgid:           Dc.l    0
winmessage:         Dc.l    0
winmsgtype:         Dc.w    0


;======== AppMenu Stuff =========
menumessage:        Dc.l    0
menunumber:         Dc.l    0
appmenu_msgport:    Dc.l    0
appmenus:           Dcb.l   16,0
menumsgid:          Dc.l    0
menumsgtype:        Dc.l    0

iconmessage:        Dc.l    0
iconnumber:         Dc.l    0
iconname:           Dc.l    0
icontext:           Dc.l    0
appicon_msgport:    Dc.l    0
appicons:           Dcb.l   16,0
diskobjects:        Dcb.l   16,0
iconmsgid:          Dc.l    0
iconmsgtype:        Dc.l    0
iconnumargs:        Dc.l    0

temp:               Dc.l    0
flag:               Dc.l    0
msg:                Dc.l    0

    MOVE.l    #"FUCK",d0
    RTS
