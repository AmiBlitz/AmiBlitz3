; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram Disk:"
; ExeFile         = "environlib.obj"
; CreateIcon      = 0
; Residents       = "libmacs.res,blitzoffs.res,all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 8
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 129
; CursorColumn    = 3
; LabelSearch     = ""
; LabelRemark     = 25
; LabelAll        = 20
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Screen      = 5
; Max Shape       = 100
; Max Window      = 5
; Max Bank        = 5
; Max IntuiFont   = 5
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max Palette     = 4
; Max BitMap      = 10
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 100
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;
; ********* ALRIGHTY - A VAL( FUNCITON
;
;Nov25th, 2019
; added ProcessorFPU command to get available FPU
;Aug28th
; fixed WBDepth cos getscreen data was only fetching 84 bytes
; add 060 /FPU values
!libheader{#environlib,init,0,0,0}

!afunction{3}
!args
!libs
!subs{dowbwidth,0,0}
!name{"WBWidth",""}

!afunction{3}
!args
!libs
!subs{dowbhite,0,0}
!name{"WBHeight",""}

!afunction{2}
!args
!libs
!subs{dowbdepth,0,0}
!name{"WBDepth",""}

!afunction{2}
!args
!libs
!subs{dowbviewmode,0,0}
!name{"WBViewMode",""}

!afunction{2}
!args
!libs
!subs{doprocessor,0,0}
!name{"Processor","0=68000,1=68010,2=68020,3=68030,4=68040,5=68060"}

!afunction{3}
!args
!libs
!subs{docr_vbr,0,0}
!name{"cr_vbr",""}

!afunction{2}
!args
!libs
!subs{doexecversion,0,0}
!name{"ExecVersion",""}

!afunction{2}
!args
!libs
!subs{doextwbviewmode,0,0}
!name{"WBExtViewMode",""}

!afunction{2}
!args
!libs
!subs{doprocessorfpu,0,0}
!name{"ProcessorFPU","0=none, 1=68881, 2=68882, 3=68040, 4=68060"}

init:!nullsub{codeinit,0,0,#intuitionlib,#la6}

!libfin

;********************* CODE BELOW ************************

scdata   :Ds.b  346  ;new screen size

wbwidth_ :Dc.l 0
wbhite_  :Dc.l 0
wbview_  :Dc.l 0
wbdepth_ :Dc.w 0

cpu_     :Dc.w 0  ;0=68000,1= 68010, 2=68020, 3=68030, 4=68040, 5=68060
fpu_     :Dc.w 0  ;0=none, 1= 68881, 2=68882, 3=68040, 4=68060
vbr_     :Dc.l 0
execver_ :Dc 0

.codeinit
  MOVE.l 4,a0
  MOVE 20(a0),execver_
  LEA scdata(pc),a0
  MOVE.l #346,d0
  MOVEQ #1,d1
  SUB.l a1,a1
  JSR -426(a6)                                        ; _SetMode
  LEA scdata(pc),a0
  MOVE 12(a0),wbwidth_+2
  MOVE 14(a0),wbhite_+2
  MOVE.l 88(a0),a1
  MOVE.b 5(a1),wbdepth_+1
  MOVE.l 44+32(a0),wbview_

  ;-- cpu / fpu checks
  MOVE.l 4,a0
  MOVE 296(a0),d0                                     ; AttnFlags of execbase

  BTST #7,d0
  BNE `cpu_68060

  MOVE d0,-(a7)
  AND #15,d0
  BSR `get_highest_bit
  MOVE d0,cpu_

  MOVE.w (a7)+,d0
  LSR #4,d0
  AND #7,d0
  BSR `get_highest_bit
  MOVE d0,fpu_
  BRA `cpu_fpu_done

 `cpu_68060:
  MOVE #5, cpu_
  MOVE #4, fpu_
  BRA `cpu_fpu_done

 `get_highest_bit:
  MOVEQ #0,d1
 `loop_highest_bit
  TST d0
  BEQ `done_highest_bit
    ADDQ #1,d1
    LSR #1,d0
    BRA `loop_highest_bit
 `done_highest_bit
  MOVE.l d1, d0
  RTS
 `cpu_fpu_done:
                                                                                                                                                                                                                                                        

  ;-- check vbr
  MOVEQ #0,d2
  CMP #2,d1 : BCS 'skip
    MOVE.l 4,a6
    JSR -150(a6)                                      ; _Superstate
    Dc $4e7a,$2801
    JSR -156(a6)                                      ; _Userstate
 'skip:
  MOVE.l d2,vbr_
RTS

.dowbwidth
  MOVE.l wbwidth_(pc),d0
RTS

.dowbhite
  MOVE.l wbhite_(pc),d0
RTS

.dowbdepth
  MOVE wbdepth_(pc),d0
RTS

.dowbviewmode
  MOVE.w wbview_(pc),d0
RTS

.doextwbviewmode
  MOVE.w wbview_+2(pc),d0
RTS

.doprocessor
  MOVE cpu_(pc),d0
RTS

.doprocessorfpu
  MOVE fpu_(pc),d0
RTS

.docr_vbr
  MOVE.l vbr_,d0
RTS

.doexecversion
  MOVE execver_(pc),d0
RTS

;******************** ERROR CHECKING *********************

errors

