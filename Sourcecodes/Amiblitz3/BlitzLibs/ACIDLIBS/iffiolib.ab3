; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Development:AmiBlitz3/BlitzLibs/Decompiled/acidlibs"
; ExeFile         = "iffiolib_new.obj"
; CreateIcon      = 0
; Residents       = "libmacs.res,blitzoffs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 28
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 3
; CursorColumn    = 10
; LabelSearch     = "lab_0003"
; LabelRemark     = 0
; LabelAll        = 1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 5
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max Window      = 5
; Max BlitzFont   = 4
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
#_Open                       = -$1E     ; -30
#_Close                      = -$24     ; -36
#_Read                       = -$2A     ; -42

!libheader{#iffiolib,init,1,0,0}                                                                                                                                                                                                                         

!nullsub{do_OpenIFF,0,0}      ; $5101
!nullsub{do_CloseIFF,0,0}     ; $5102
!nullsub{do_ReadIFF,0,0}      ; $5103
!nullsub{LAB_000F,0,0}        ; $5104
!nullsub{LAB_0017,0,0}        ; $5105
!nullsub{LAB_0011,0,0}        ; $5106
!nullsub{LAB_0019,0,0}        ; $5107
!nullsub{LAB_001C,0,0}        ; $5108

.init:
!nullsub{codeinit,0,0,#doslib,#la0}
!libfin

_buffer:     Dc.l $00000000
LAB_0003:    Dc.w $0000
_bytesread:  Dc.w $0000
_filehandle: Dc.l $00000000                                                                                                                                                                                                                              
_dosbase:    Dc.l $00000000

; *******************************************************************+++
.codeinit:
  MOVE.l A0,_dosbase                                                                                                                                                                                                                                       
  MOVE.l #$00000800,D0    ;2048
  MOVEQ #1,D1
  ALibJsr $C002
  MOVE.l D0,_buffer                                                                                                                                                                                                                                        
RTS

.do_OpenIFF:                                                                                                                                                                                                                                             
  MOVEM.l D0-D2/A1/A6,-(A7)
  MOVE.l A0,D1
  MOVE.l #$000003ed,D2
  MOVEA.l _dosbase(PC),A6
  JSR _Open(A6)  ;_Open
  MOVE.l D0,_filehandle                                                                                                                                                                                                                                    
  MOVEM.l (A7)+,D0-D2/A1/A6
  BNE.w readBuffer                                                                                                                                                                                                                                        
  MOVEQ #-1,D0
RTS

.readBuffer:                                                                                                                                                                                                                                             
  MOVEM.l D0-D3/A0-A1/A6,-(A7)
  MOVE.l _filehandle(PC),D1     ;file
  MOVE.l _buffer(PC),D2         ;buffer
  MOVE.l #$00000800,D3          ;length
  MOVEA.l _dosbase(PC),A6
  JSR _Read(A6)                 ; (file,buffer,length)
  MOVE.w D0,_bytesread                                                                                                                                                                                                                                      
  CLR.w LAB_0003
  MOVEM.l (A7)+,D0-D3/A0-A1/A6
RTS

.do_CloseIFF:                                                                                                                                                                                                                                            
  MOVEM.l D0-D1/A0-A1/A6,-(A7)
  MOVE.l _filehandle(PC),D1
  MOVEA.l _dosbase(PC),A6
  JSR _Close(A6)
  MOVEM.l (A7)+,D0-D1/A0-A1/A6
RTS

.do_ReadIFF:                                                                                                                                                                                                                                             
  MOVEM.l D1/A0,-(A7)
  MOVEA.l _buffer(PC),A0
  MOVE.w LAB_0003(PC),D1
  CMPI.w #$0800,D1
  BCS.w LAB_000C
    BSR.w readBuffer
    MOVEQ #0,D1
  LAB_000C:

  CMP.w _bytesread(PC),D1                                                                                                                                                                                                                                  
  BCS.w LAB_000D
    MOVEQ #-1,D0
    BRA.w LAB_000E
  LAB_000D:
    MOVE.B 0(A0,D1.w),D0
    ADDQ.w #1,LAB_0003
    CMP.w D0,D0
  LAB_000E:
  MOVEM.l (A7)+,D1/A0
RTS

.LAB_000F:
  MOVE.l D1,-(A7)
  BSR.w do_ReadIFF                                                                                                                                                                                                                                        
  BNE.w LAB_0010
    MOVE.w D0,D1
    LSL.w #8,D1
    BSR.w do_ReadIFF                                                                                                                                                                                                                                      
    BNE.w LAB_0010
      MOVE.B D0,D1
      MOVE.w D1,D0
      MOVE.l (A7)+,D1
      CMP.w D0,D0
      RTS
  LAB_0010:
  MOVE.l (A7)+,D1
  MOVEQ #-1,D0
RTS

.LAB_0011:
  MOVEM.l D1-D2/A0,-(A7)
  MOVEQ #0,D2
  MOVEA.l _buffer(PC),A0
  MOVE.w LAB_0003(PC),D1
  LAB_0012:
  CMPI.w #$0800,D1
  BCS.w LAB_0013
    BSR.w readBuffer
    MOVEQ #0,D1
  LAB_0013:
  CMP.w _bytesread(PC),D1                                                                                                                                                                                                                                  
  BCS.w LAB_0015
    LAB_0014:
    MOVEM.l (A7)+,D1-D2/A0
    MOVEQ #-1,D0
    RTS
  LAB_0015:
  ADDQ.w #1,D1
  MOVE.w D1,LAB_0003
  LSL.l #8,D2
  MOVE.B -1(A0,D1.w),D2
  CMP.l D0,D2
  BEQ.w LAB_0016
    CMPI.l #$424f4459,D2  ; "BODY"
    BNE.w LAB_0012
    BRA.w LAB_0014
  LAB_0016:
  MOVEM.l (A7)+,D1-D2/A0
  LAB_0017:
  MOVE.l D1,-(A7)
  BSR.w LAB_000F
  BNE.w LAB_0018
  MOVE.w D0,D1
  SWAP D1
  BSR.w LAB_000F
  BNE.w LAB_0018
  MOVE.w D0,D1
  MOVE.l D1,D0
  MOVE.l (A7)+,D1
  CMP.w D0,D0
    RTS
  LAB_0018:
  MOVE.l (A7)+,D1
  MOVEQ #-1,D0
  RTS
  LAB_0019:
  MOVE.l D0,-(A7)
  LAB_001A:
  BSR.w do_ReadIFF
  BNE.w LAB_001B
  SUBQ.l #1,(A7)
  BNE.w LAB_001A
  LAB_001B:
  ADDQ.w #4,A7
RTS

.LAB_001C:
  MOVEM.l D1-D3/A1/A6,-(A7)
  MOVE.w LAB_0003(PC),D1
  MOVEA.l _buffer(PC),A1

  LAB_001D:
    CMPI.w #$0800,D1
    BCC.w LAB_001F
      CMP.w _bytesread(PC),D1                                                                                                                                                                                                                              
      BCS.w LAB_001E
        MOVE.w D1,LAB_0003
        BRA.w LAB_0020
      LAB_001E:
      MOVE.B 0(A1,D1.w),(A0)+
      ADDQ.w #1,D1
      SUBQ.l #1,D0
      BNE.w LAB_001D
        MOVE.w D1,LAB_0003
        BRA.w LAB_0020
    LAB_001F:
      MOVE.w D1,LAB_0003
      MOVEA.l _dosbase(PC),A6
      MOVE.l A0,D2              ;buffer
      MOVE.l D0,D3              ;length
      MOVE.l _filehandle(PC),D1 ;file
      JSR _Read(A6)
    LAB_0020:
  MOVEM.l (A7)+,D1-D3/A1/A6
RTS
