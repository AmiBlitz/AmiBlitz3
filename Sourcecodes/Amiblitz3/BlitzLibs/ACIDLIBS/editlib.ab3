; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram Disk:"
; ExeFile         = "editlib.obj"
; CreateIcon      = 0
; Residents       = "blitzlibs:libmacs.res,blitzlibs:blitzoffs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 1
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 3
; CursorColumn    = 51
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = -1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max Window      = 5
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 16
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 100
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;
;  LIBRARY 241 - EDIT LIB
;
; 20221114: moved GetRegD0/PutRegD0 into envionlib

!libheader{#editlib,0,0,0,errorchecking}

!afunction{7}
!args{3}
!libs ;{#windowslib,$1102}
!subs{doeditstr2,editchk1,0}
!args{7,3}
!libs ;{#windowslib,$1102}
!subs{doeditstr,editchk2,0} ;*****
!name{"Edit$","([DefaultString$,]Characters)"}

!afunction{7}
!args
!libs ;{#windowslib,$1102}
!subs{doinkey,0,0}
!args{3}
!libs ;{#windowslib,$1102}
!subs{doinkey2,0,0} ;*****
!name{"Inkey$","[(Characters)]"}

!afunction{5}
;
!args{3}
!libs;{#windowslib,$1102}
!subs{doedit2,editchkz,0}
;
!args{5,3}
!libs;{#windowslib,$1102}
!subs{doedit,editchk,0} ;*****
;
!name{"Edit","([DefaultValue,]Characters)"}

!afunction{7}
!args
!libs;{#windowslib,$1102}
!subs{doreadline,0,0}
!name{"ReadLine$",";read fast a string until $0 is reach or max 2000 chars"}


!afunction{7}
!args{3}
!libs ;{#windowslib,$1102}
!subs{doeditstr2,editchk1,0}
!args{7,3}
!libs ;{#windowslib,$1102}
!subs{doeditstr,editchk2,0} ;*****
!name{"Input$","([DefaultString$,]Characters)"}

!afunction{5}
;
!args{3}
!libs;{#windowslib,$1102}
!subs{doedit2,editchkz,0}
;
!args{5,3}
!libs;{#windowslib,$1102}
!subs{doedit,editchk,0} ;*****
;
!name{"Input","([DefaultValue,]Characters)"}
 


!libfin

;********************** CODE BELOW ***************************

.doinkey: ;perform inkey$
  ALibJsr #getByteFromChannel
  TST d0
  BMI 'null
    MOVE.b d0,(a3)+
    MOVEQ #1,d0
    RTS
 'null:
  MOVEQ #0,d0
RTS

.doinkey2:;repeated inkey's
MOVE.l d0,d7:BEQ 'none:MOVEQ #0,d6
'loop:ALibJsr #getByteFromChannel:TST d0:BMI 'null
MOVE.b d0,(a3)+:ADDQ.l #1,d6
'null:SUBQ.l #1,d7:BNE 'loop
'none:MOVE.l d6,d0:RTS

.doreadline:;repeated inkey's
MOVE.l #2000,d7:BEQ 'none:MOVEQ #0,d6
'loop:ALibJsr #getByteFromChannel:TST d0:BMI 'none
BEQ 'none
MOVE.b d0,(a3)+:ADDQ.l #1,d6
'null:SUBQ.l #1,d7:BNE 'loop
'none:MOVE.l d6,d0:RTS


.doeditstr2:;no default string
MOVE.l d2,-(a7)
MOVE.l d0,d1:MOVE.l a3,d0:MOVEQ #0,d2:BRA editstr

.doeditstr:;a default string
MOVE.l d2,-(a7)
MOVE.l -(a2),d2
;
editstr
;
;d0=default string, d1=maxchars, a3=string destination
;d2=strings length.
;
MOVE.l d1,-(a7)
SUB.l d2,d1 : BMI 'skip
SUBQ.l #1,d1 : BMI 'skip
  ;
  CMP.l a3,d0:BEQ 'noclu:SUBQ#1,a3:'noclu
  ;
  'loop:
    MOVE.b #32,(a3)+
    SUBQ.l #1,d1
  BPL 'loop
  ;
'skip:
;CMP.l #0,a1
;BEQ 'l3
;MOVE.l (a1),a1
;'l3
MOVE.l d0,a3 : MOVE.l d0,a0 : MOVE.l (a7)+,d0
MOVE.l a1,-(a7)
;CMP.l #0,a1
;BEQ 'l1
;MOVE.l $52(a1),oldidcmp
;MOVE.l $52(a1),d1
;BCLR #21,d1
;MOVE.l d1,$52(a1)
;'l1
ALibJsr #getDataFromChannel:;input a string
MOVE.l (a7)+,a1
;CMP.l #0,a1
;BEQ 'l2
;MOVE.l oldidcmp,$52(a1)
'l2: ADD.l d0,a3
MOVE.l (a7)+,d2:RTS
oldidcmp:Dc.l 0
editbuff:Ds.b 80
pars:Dc.l 0:Dc 5  ;float
parsf

.doedit2  ;no default.
;
MOVEM.l a2-a3/a6,-(a7)
;
MOVE.l d0,d1
LEA editbuff(pc),a3:MOVE.l a3,d0:MOVE.b #"0",(a3)+
LEA pars(pc),a2:MOVE.l #1,(a2)+
BRA doeditz

.doedit                 ;numeric of edit$
  ;
  ;d0.f=default, d1.l=numchars
  ;
  MOVEM.l a2-a3/a6,-(a7)
  ;
  MOVE.l d1,-(a7)
  LEA parsf(pc),a2:LEA editbuff(pc),a3
  ALibJsr #printlib LSL 7+6  ;ustr$
  ;
  LEA pars(pc),a2:MOVE.l d0,(a2)+
  MOVE.l #editbuff,d0:MOVE.l (a7)+,d1
  ;
  doeditz:
  BSR doeditstr ;do the edit
  ;
  CLR.b (a3):LEA pars(pc),a2:MOVE.l d0,(a2)+
  MOVE.l #editbuff,d0:ALibJsr #vallib LSL 7+1  ;val...
  ;
  MOVEM.l (a7)+,a2-a3/a6
RTS

; ----------------------------------------------------------
; further functions placed here due to free slot limitations


;************************ ERRORS *************************
errorchecking:
err1:MOVE.l #mess1,d0:TRAP #0
err2:MOVE.l #mess2,d0:TRAP #0

mess1:Dc.b "Can't Edit 0 Characters!",0
mess2:Dc.b "Can only Edit up to 80 characters",0
Even

editchk1:TST.l d0:BEQ err1:RTS

editchk2:TST.l d1:BEQ err1:RTS

editchkz:MOVE.l d0,d1
editchk:TST.l d1:BEQ err1:CMP.l #80,d1:BHI err2:
RTS

