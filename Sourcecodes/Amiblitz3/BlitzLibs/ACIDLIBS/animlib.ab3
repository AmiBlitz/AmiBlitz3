; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Development:AmiBlitz3/BlitzLibs/Decompiled/acidlibs"
; ExeFile         = "animlib_new.obj"
; CreateIcon      = 0
; Residents       = ",libnums.res,libmacs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 71
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 144
; CursorColumn    = 46
; LabelSearch     = "do_loadanim1"
; LabelRemark     = 0
; LabelAll        = 1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max Window      = 20
; Max BlitzFont   = 4
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
; animlib

!libheader{#animlib,codeinit,0,0,errorChecking}                                                                                                                                                                                                          

!dumtoke{"Anim","- IFF Anim",_tokens}


!astatement
!args{#word,#string}
!libs{#animlib,#ia0}                                        ;$1080
!subs{do_LoadAnim2+1,0,0}

!args{#word,#string,#word}
!libs{#animlib,#ia0,#palettelib,#ia1|#pd2}                  ;$1182}
!subs{do_LoadAnim1+1,0,0} ; only in Amigamode
!name{"LoadAnim","Anim#,Filename$[,Palette#]"}


!astatement
!args{#word}
!libs{#animlib,#ia0,#bitmaplib,#ua1}
!subs{do_InitAnim1,check_bitmap,0}                                                                                                                                                                                                                       

!args{#word,#word}
!libs{#animlib,#ia0,#bitmaplib,#ua1,#bitmaplib,#ia2|#pd1}  ;$1281}
!subs{do_InitAnim2,check_both,0}                                                                                                                                                                                                                         
!name{"InitAnim","Anim#[,BitMap#]"}


!astatement
!args{#word}
!libs{#animlib,$1080,#bitmaplib,#ua1}
!subs{do_NextFrame,check_frames,0}
!name{"NextFrame","Anim#"}


!afunction{#word}
!args{#word}
!libs{#animlib,#ia0}
!subs{do_Frames,check_animobject,0}                                                                                                                                                                                                                      
!name{"Frames","(Anim#)"}


codeinit: !nullsub{0,0,0}
_load:    !nullsub{0,0,0}
_save:    !nullsub{0,0,0}
_use:     !nullsub{0,0,0}
_free:    !nullsub{free_up,0,0}                                                                                                                                                                                                                          


; libfin{toke,load,save,use,free,defmax,shift} if maximums needed for this
;            1    2   3    4    5     6     7
; toke: pointer to !dumtoke confining the objects name
; load: not implemented, points to nullsub
; save: not implemented, points to nullsub
; used: called, when object is used bei "Use"-command
; free: called at end of program
; default number ob obects allocated by compiler, can be changed in compiler options
; size of each object as 1<<"shift"
!libfin{_tokens,_load,_save,_use,_free,10,5}

; ********************************************************************
.free_up:                                                                                                                                                                                                                                                
  TST.W (A3)
  BEQ.W LAB_000E
    CLR.W (A3)
    MOVEA.L 10(A3),A1
    MOVE.L 14(A3),D0

    ALibJsr $c003       ; globalfree

    LEA 18(A3),A2
    LAB_000D:
      MOVE.L (A2),D0
      BEQ.W LAB_000E
      MOVEA.L D0,A1
      MOVE.L 4(A2),D0
      MOVEA.L A1,A2

      ALibJsr $c003    ; globalfree
    BRA.W LAB_000D
  LAB_000E:
RTS

.do_Frames:
  Dc.w $a000
  Dc.w $0004
  's:
    MOVE.W 8(A0),D0
  'f:
RTS

.do_LoadAnim1:
  MOVEM.L D1/A0,-(A7)
  MOVEA.L D1,A0
  ALibJsr $4e03          ; palettelib: getPal(A0: palette#)

  MOVEM.L (A7)+,D1/A0

.do_LoadAnim2:
  MOVE.L A4,-(A7)
  MOVEA.L A0,A4
  MOVE.L D1,-(A7)        ; filename to stack
  MOVEA.L A0,A3
  BSR.W free_up
  MOVEA.L (A7)+,A0       ; filename from stack To A0
  ALibJsr $5081          ; ilbmifflib: open file
  BEQ.W err_open_anim

  MOVE.L (A0),(A4)
  MOVE.W 4(A0),4(A4)
  MOVE.W 6(A0),D0
  LSL.W #1,D0
  MOVE.W D0,6(A4)
  MOVE.W #$0001,8(A4)
  MOVE.L #$424f4459,D0  ;"BODY"
  ALibJsr $5106         ; iffiolib: readChunk

  MOVE.L D0,14(A4)
  MOVEQ #1,D1
  MOVE.L D0,D2
  ALibJsr $c002         ; globalalloc

  MOVE.L D0,10(A4)
  MOVEA.L D0,A0
  MOVE.L D2,D0

  ALibJsr $5108         ; iffiolib

  CLR.L 26(A4)
  CLR.W 30(A4)
  LEA 18(A4),A3
  CLR.L (A3)
  MOVE.L #$414e4844,D0  ;"ANHD"
  ALibJsr $5106         ; iffiolib: readChunk
  BNE.W LAB_0013

    ALibJsr $5103       ; iffiolib
    CMPI.B #$05,D0
    BNE.W err_animformat

    MOVEQ #19,D0
    ALibJsr $5107       ; iffiolib
    ALibJsr $5105       ; iffiolib

    AND.W #$0002,D0
    MOVE.W D0,30(A4)
    MOVE.W #$ffff,8(A4)

    LAB_0012:
      MOVE.L #$444c5441,D0 ; "DLTA"
      ALibJsr $5106     ; iffiolib: readChunk
      BNE.W LAB_0013

      MOVE.L D0,D2
      ADDQ.W #1,8(A4)
      ADDQ.L #8,D0
      MOVE.L D0,4(A3)
      MOVEQ #1,D1
      ALibJsr $c002    ; globalalloc
      MOVE.L D0,(A3)
      MOVEA.L D0,A3
      CLR.L (A3)
      LEA 8(A3),A0
      MOVE.L D2,D0
      ALibJsr $5108    ; iffiolib
    BRA.W LAB_0012
  LAB_0013:
  ALibJsr $5102        ; iffiolib: close file

  MOVEA.L (A7)+,A4
RTS

.do_InitAnim1:
  MOVEM.L A4-A6,-(A7)
  MOVEA.L 10(A0),A3
  SUBA.L A6,A6
  MOVE.W 2(A0),D7
  SUBQ.W #1,D7

  LAB_0015:
    MOVE.W 4(A0),D6
    SUBQ.W #1,D6
    LEA 8(A1),A5

    LAB_0016:
      MOVE.W 6(A0),D5
      SUBQ.W #1,D5
      MOVEA.L (A5)+,A4
      ADDA.L A6,A4
      LAB_0017:
      MOVEQ #0,D0
      MOVE.B (A3)+,D0
      BMI.W LAB_0019
        SUB.W D0,D5
        SUBQ.W #1,D5
        LAB_0018:
          MOVE.B (A3)+,(A4)+
        DBF D0,LAB_0018
        BRA.W LAB_001B
      LAB_0019:
        NEG.B D0
        BMI.W LAB_0017
        SUB.W D0,D5
        SUBQ.W #1,D5
        MOVE.B (A3)+,D1
        LAB_001A:
          MOVE.B D1,(A4)+
        DBF D0,LAB_001A
      LAB_001B:
      TST.W D5
      BPL.W LAB_0017
    DBF D6,LAB_0016
    ADDA.W (A1),A6
  DBF D7,LAB_0015
  MOVE.L 18(A0),26(A0)
  MOVEM.L (A7)+,A4-A6
RTS

.do_InitAnim2:
  MOVE.L A4,-(A7)
  MOVE.L A2,-(A7)
  BSR.W do_InitAnim1
  MOVEA.L (A7)+,A2
  MOVE.W (A1),D0
  ADDQ.W #8,A1
  MOVE.W (A2),D1
  ADDQ.W #8,A2
  MOVE.W 6(A0),D3
  MOVE.W D3,D2
  LSR.W #1,D2
  SUBQ.W #1,D2
  MOVE.W 4(A0),D7
  SUBQ.W #1,D7

  LAB_001D:
    MOVEA.L (A1)+,A3
    MOVEA.L (A2)+,A4
    MOVE.W 2(A0),D6
    SUBQ.W #1,D6

    LAB_001E:
      MOVE.W D2,D5
      LAB_001F:
        MOVE.W (A3)+,(A4)+
      DBF D5,LAB_001F
      SUBA.W D3,A3
      ADDA.W D0,A3
      SUBA.W D3,A4
      ADDA.W D1,A4
    DBF D6,LAB_001E
  DBF D7,LAB_001D
  MOVEA.L (A7)+,A4
RTS

.do_NextFrame:
  MOVEM.L A4-A6,-(A7)
  LEA 8(A1),A2
  MOVE.W 4(A0),D7
  SUBQ.W #1,D7
  MOVEA.L 26(A0),A3
  LEA 8(A3),A4
  MOVE.W (A1),D4
  MOVE.W 6(A0),D3
  SUBQ.W #1,D3

  LAB_0021:
    MOVEA.L (A2)+,A6
    MOVE.L (A4)+,D0
    BEQ.W LAB_0031

    LEA 8(A3,D0.L),A5
    MOVE.W D3,D6

    LAB_0022:
      MOVEQ #0,D5
      MOVE.B (A5)+,D5
      BEQ.W LAB_0030

      SUBQ.W #1,D5
      MOVE.L A6,-(A7)
      TST.W 30(A0)
      BEQ.W LAB_0029
        LAB_0023:
          MOVEQ #0,D0   ;41e: 7000
          MOVE.B (A5)+,D0  ;420: 101d
          BEQ.W LAB_0026  ;422: 67000022
            BMI.W LAB_0024  ;426: 6b00000a
              MULU D4,D0   ;42a: c0c4
              ADDA.L D0,A6   ;42c: ddc0
              BRA.W LAB_0028  ;42e: 60000026
            LAB_0024:
            AND.W #$007f,D0  ;432: c07c007f
            SUBQ.W #1,D0   ;436: 5340
            LAB_0025:
              MOVE.B (A5)+,D1  ;438: 121d
              EOR.B D1,(A6)   ;43a: b316
              ADDA.W D4,A6   ;43c: dcc4
            DBF D0,LAB_0025  ;43e: 51c8fff8
            BRA.W LAB_0028  ;442: 60000012
          LAB_0026:
          MOVEQ #0,D1   ;446: 7200
          MOVE.B (A5)+,D1  ;448: 121d
          SUBQ.W #1,D1   ;44a: 5341
          MOVE.B (A5)+,D2  ;44c: 141d
          LAB_0027:
            EOR.B D2,(A6)   ;44e: b516
            ADDA.W D4,A6   ;450: dcc4
          DBF D1,LAB_0027  ;452: 51c9fffa
          LAB_0028:
        DBF D5,LAB_0023  ;456: 51cdffc6
        BRA.W LAB_002F  ;45a: 6000003c
      LAB_0029:
        MOVEQ #0,D0
        MOVE.B (A5)+,D0
        BEQ.W LAB_002C
          BMI.W LAB_002A
            MULU D4,D0
            ADDA.L D0,A6
            BRA.W LAB_002E
          LAB_002A:
          AND.W #$007f,D0
          SUBQ.W #1,D0
          LAB_002B:
            MOVE.B (A5)+,(A6)
            ADDA.W D4,A6
          DBF D0,LAB_002B
          BRA.W LAB_002E
        LAB_002C:
          MOVEQ #0,D1
          MOVE.B (A5)+,D1
          SUBQ.W #1,D1
          MOVE.B (A5)+,D2
          LAB_002D:
            MOVE.B D2,(A6)
            ADDA.W D4,A6
          DBF D1,LAB_002D
        LAB_002E:
        DBF D5,LAB_0029
      LAB_002F:

      MOVEA.L (A7)+,A6
      LAB_0030:
      ADDQ.W #1,A6
    DBF D6,LAB_0022
    LAB_0031:
  DBF D7,LAB_0021

  MOVE.L (A3),D0
  BNE.W LAB_0032
    MOVEA.L 18(A0),A3
    MOVE.L (A3),D0
  LAB_0032:
  MOVE.L D0,26(A0)
  MOVEM.L (A7)+,A4-A6
RTS

.err_animformat:                                                                                                                                                                                                                                         
 MOVE.L #msg_err_format,D0
TRAP #0

; ****************************** error echecking
errorChecking:
err_bitmapsize: MOVE.L #LAB_003A,D0 : TRAP #0
err_bitmap:     MOVE.L #LAB_003B,D0 : TRAP #0
err_anim:       MOVE.L #LAB_003C,D0 : TRAP #0
err_animinit:   MOVE.L #LAB_003E,D0 : TRAP #0
err_only1frame: MOVE.L #LAB_003F,D0 : TRAP #0                                                                                                                                                                                                                
err_open_anim:  MOVE.L #LAB_0044,D0 : TRAP #0

LAB_003A: Dc.b "BitMap not large enough for ANIM",0
LAB_003B: Dc.b "Uninitialized BitMap",0
LAB_003C: Dc.b "Uninitialized Anim",0
LAB_003E: Dc.b "Anim not Initialized",0
LAB_003F: Dc.b "Anim has only 1 frame",0
msg_err_format: Dc.b "Anim format not supported",0                                                                                                                                                                                                       
LAB_0044: Dc.b "Can't Open Anim File",0,0

; ***************************** check routines
.check_both:                                                                                                                                                                                                                                             
  EXG A1,A2
  BSR.W check_bitmap                                                                                                                                                                                                                                      
  EXG A1,A2

.check_bitmap:                                                                                                                                                                                                                                           
  TST.W (A0)
  BEQ.W err_anim                                                                                                                                                                                                                                          
    TST.W (A1)
    BEQ.W err_bitmap
      MOVE.W 6(A0),D7
      CMP.W (A1),D7
      BGT.W err_bitmapsize
        MOVE.W 2(A0),D7
        CMP.W 2(A1),D7
        BGT.W err_bitmapsize
          MOVE.W 4(A0),D7
          CMP.W 4(A1),D7
          BGT.W err_bitmapsize
RTS

.check_frames:
  CMPI.W #$0002,8(A0)
  BLT.W err_only1frame                                                                                                                                                                                                                                    
    TST.L 26(A0)
    BEQ.W err_animinit                                                                                                                                                                                                                                    
BRA.W check_bitmap                                                                                                                                                                                                                                        

.check_animobject:                                                                                                                                                                                                                                       
  TST.W (A0)
  BEQ.W err_anim                                                                                                                                                                                                                                          
RTS

