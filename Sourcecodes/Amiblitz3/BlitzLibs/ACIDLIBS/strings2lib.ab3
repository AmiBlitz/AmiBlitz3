; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram Disk:"
; ExeFile         = "strings2lib.obj"
; CreateIcon      = 0
; Residents       = "libmacs.res,blitzoffs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 1
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 3
; LabelSearch     = "mode"
; LabelRemark     = 0
; LabelAll        = 43
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max BitMap      = 10
; Max IconInfo    = 1
; Max NChunky     = 20
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; /XTRA
#inclen=4

!syslibheader{#strings2lib,$c700,$c705,0,0,0,0}

!nullsub{stringass,0,0,#memlib,#la6}  ;C700
!nullsub{gstringass,0,0,#memlib,#la6} ;C701
!nullsub{stringass2,0,0,#memlib,#la6} ;C702
!nullsub{setfpumode,0,0}              ;C703
!nullsub{getfpumode,0,0}              ;C704

!libfin

;******************** CODE BELOW ********************

.setfpumode              ;mode 0=normal 2=fpu
  MOVE.l d0,_fpumode
  CMP.l #2,d0
  BNE 'l2
    MOVEQ.l #0,d0
    Dc.l $f2009000
 'l2
  RTS

.getfpumode
  MOVE.l _fpumode,d0
RTS

.gstringass:
  ADDQ #8,a6

.stringass   ;ass string at a3 to a2. len in 4(a7)
    ;
    ;string format as follows:
    ;-8...alloc'd len
    ;-4...string len
    ;0....characters,0.b
    ;
  CMP.l #$ffffffff,a3
  BNE 'ok
    MOVE.l (a7)+,(a7)
    RTS
 'ok:
  MOVE.l  d1,-(a7):
  MOVE.l (a2),d0
  BEQ 'allocnews
    MOVE.l d0,a1:MOVE.l 8(a7),d0:CMP.l -8(a1),d0:BHI 'lengthen
    MOVE.l d0,-4(a1):BEQ 'endass:BRA 'nofree
 'lengthen:
    MOVEQ #9,d0:SUBQ #8,a1:ADD.l (a1),d0
    JSR 4(a6)
 'allocnews:
  ADD.l #inclen,8(a7)
  MOVEQ #9,d0:ADD.l 8(a7),d0:MOVEQ #1,d1:JSR (a6)
  MOVE.l d0,a1:MOVE.l 8(a7),(a1):
  SUB.l #inclen,8(a7)
  MOVE.l 8(a7),4(a1)
  ADDQ.l #8,a1
  ;MOVE.l (a1)+,(a1)+
  MOVE.l a1,(a2)
 'nofree:
  MOVE.l 8(a7),d0:CMP.l #8,d0:BCS 'under8
  MOVE.l d0,d1:LSR.l #3,d1
 'loop
    MOVE.b (a3)+,(a1)+:MOVE.b (a3)+,(a1)+
    MOVE.b (a3)+,(a1)+:MOVE.b (a3)+,(a1)+
    MOVE.b (a3)+,(a1)+:MOVE.b (a3)+,(a1)+
    MOVE.b (a3)+,(a1)+:MOVE.b (a3)+,(a1)+
    SUBQ.l #1,d1
  BNE 'loop
  AND #7,d0
 'under8:
  SUBQ #1,d0
  BMI 'endass
   'loop2:
      MOVE.b (a3)+,(a1)+
    DBF d0,'loop2
 'endass:
  CLR.b (a1):
  MOVE.l (a7)+,d1
  MOVE.l (a7)+,(a7)
RTS

stringass2   ;ass string at a3 to a2. len in 4(a7)
    ;
    ;string format as follows:
    ;-8...alloc'd len
    ;-4...string len
    ;0....characters,0.b
    ;
ADDQ #8,a6
MOVE.l  d1,-(a7):MOVE.l (a2),d0:BEQ 'allocnews
MOVE.l d0,a1:MOVE.l 12(a7),d0:CMP.l -8(a1),d0:BHI 'lengthen
MOVE.l d0,-4(a1):BEQ 'endass:BRA 'nofree
'lengthen:MOVEQ #9,d0:SUBQ #8,a1:ADD.l (a1),d0
JSR 4(a6)

'allocnews:
ADD.l #inclen,12(a7)
MOVEQ #9,d0:ADD.l 12(a7),d0:MOVEQ #1,d1:JSR (a6)
MOVE.l d0,a1:MOVE.l 12(a7),(a1):
SUB.l #inclen,12(a7)
MOVE.l 12(a7),4(a1)
ADDQ.l #8,a1
;MOVE.l (a1)+,(a1)+
MOVE.l a1,(a2)

'nofree:MOVE.l 12(a7),d0:CMP.l #8,d0:BCS 'under8
MOVE.l d0,d1:LSR.l #3,d1
'loop
MOVE.b (a3)+,(a1)+:MOVE.b (a3)+,(a1)+
MOVE.b (a3)+,(a1)+:MOVE.b (a3)+,(a1)+
MOVE.b (a3)+,(a1)+:MOVE.b (a3)+,(a1)+
MOVE.b (a3)+,(a1)+:MOVE.b (a3)+,(a1)+
SUBQ.l #1,d1:BNE 'loop:AND #7,d0
'under8:SUBQ #1,d0:BMI 'endass
'loop2:MOVE.b (a3)+,(a1)+:DBF d0,'loop2
'endass:CLR.b (a1):MOVE.l (a7)+,d1
RTS

_fpumode: Dc.l 0
