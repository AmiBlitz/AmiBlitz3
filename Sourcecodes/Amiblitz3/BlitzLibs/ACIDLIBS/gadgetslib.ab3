; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "blitzlibs:basic"
; ExeFile         = "gadgetslib.obj"
; CreateIcon      = 0
; Residents       = "libmacs.res,blitzoffs.res,amigalibs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 411
; CursorColumn    = 1
; LabelSearch     = "fontcalc"
; LabelRemark     = 0
; LabelAll        = 1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max Window      = 5
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA

;**********************************
;*                                *
;* GADGETSLIB - Intuition gadgets *
;*                                *
;**********************************

;20/8/93
;added SetGadgetStatus so you can set cylcling gadgets from your prog
;
;August 28 (BUM5)
;changed depth of borders to work with new default screenpens nah!
;extended togglegadget syntax to allow program to toggle gadget
;gadgets are attached to NewWindow not to Window

!libheader{#gadgetslib,init,0,0,errors}

!astatement
!args{2,2,2,3,2,7}
!libs{#gadgetslib,$1380,#intuitionlib,#la6,#intuifontlib,#la1}
!subs{dotextgadget,0,0} ;*****
!name{"TextGadget","GadgetList#,X,Y,Flags,Id,Text$"}

!astatement
!args{2,2,2,3,2,2,2}
!libs{#gadgetslib,$1380}
!subs{dostringgadget,0,0}   ;*****
!name{"StringGadget","GadgetList#,X,Y,Flags,Id,Maxlen,Width"}

!astatement
!args{2,2,2,3,2,2,2}
!libs{#gadgetslib,$1380}
!subs{dopropgadget,0,0} ;*****
!name{"PropGadget","GadgetList#,X,Y,Flags,Id,Width,Height"}

!astatement
;
!args{2,2,2,3,2,2}
!libs{#gadgetslib,$1380,#shapeslib,$1285}
!subs{doshapegadget,sgchk,0}    ;*****
;
!args{2,2,2,3,2,2,2}
!libs{#gadgetslib,$1380,#shapeslib,$1285,#shapeslib,$1186}
!subs{doshapegadget2,sgchk2,0}    ;*****
;
!name{"ShapeGadget","GadgetList#,X,Y,Flags,Id,Shape#[,Shape#]"}

!astatement
!args{2,2,4,4}
!libs{#gadgetslib,$1180}
!subs{dosethprop,propchk,0} ;*****
!name{"SetHProp","GadgetList#,Id,Pot,Body"}

!astatement
!args{2,2,4,4}
!libs{#gadgetslib,$1180}
!subs{dosetvprop,propchk,0} ;*****
!name{"SetVProp","GadgetList#,Id,Pot,Body"}

!afunction{4}
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{dohproppot,propchk,0} ;*****
!name{"HPropPot","(GadgetList#,Id)"}

!afunction{4}
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{dohpropbody,propchk,0}    ;*****
!name{"HPropBody","(GadgetList#,Id)"}

!afunction{4}
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{dovproppot,propchk,0} ;*****
!name{"VPropPot","(GadgetList#,Id)"}

!afunction{4}
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{dovpropbody,propchk,0}    ;*****
!name{"VPropBody","(GadgetList#,Id)"}

!astatement
!args{2,2}
!libs{#windowslib,$1180,#intuitionlib,#la6}
!subs{doredraw+1,redrawchk,0}
!name{"Redraw","Window#,Id"}    ;*****

!nullsub{0,0,0}

!nullsub{0,0,0}

!astatement
;
!args{2,2,2}
!libs{#gadgetslib,$1180}
!subs{doselect,gchk,0}
;
!args{2,2}                   ;simon was here
!libs{#gadgetslib,$1180}
!subs{doselect2,gchk,0}
;
!name{"Toggle","GadgetList#,Id [,On|Off]"}

!nullsub{0,0,0}

!astatement
!args{2,2,2,2}
!libs{#windowslib,$1102,#intuitionlib,#la6}
!subs{dogborder+1,wchk,0}
!name{"GadgetBorder","X,Y,Width,Height"}    ;*****

!astatement
;
!args{2}
!libs
!subs{dogb2,0,0}
;
!args{2,2}
!libs
!subs{dogb,0,0}
;
!name{"Borders","[On|Off]|[Width,Height]"}  ;*****

!astatement
!args{2,2}
!libs{#windowslib,$1180,#intuitionlib,#la6}
!subs{dostringactivate+1,actchk,0}
!name{"ActivateString","Window#,Id"}    ;*****

!astatement
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{dostringreset,reschk,0}
!name{"ResetString","GadgetList#,Id"}   ;*****

!afunction{7}
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{dostringtext,reschk,0}
!name{"StringText$","(GadgetList#,Id)"} ;*****

!astatement
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{dostringclear,reschk,0}
!name{"ClearString","GadgetList#,Id"}   ;*****

!dumtoke{"GadgetList","List of Gadgets",_toke}

!astatement
!args{2}
!libs
!subs{dogpens2,0,0}
!args{2,2}
!libs
!subs{dogpens,0,0}
!name{"GadgetPens","Foreground Colour[,Background Colour]"}

!astatement
!args{2,2}
!libs
!subs{dobpens,0,0}
!name{"BorderPens","Highlight Colour,Shadow Colour"}

!astatement
!args{2}
!libs
!subs{dogjam,0,0}
!name{"GadgetJam","Jammode"}

!astatement
!args{2}
!libs
!subs{doselectmode,0,0}
!name{"SelectMode","1=Box, 0=Inverse"}

!astatement
!args{2,2,7}
!libs{#gadgetslib,$1180}
!subs{dosetstring,settest,0}
!name{"SetString","GadgetList#,Id,String$"}

!astatement
!args{2}
!libs
!subs{dobgroup,bgroupchk,0}
!name{"ButtonGroup","Group"}

!afunction{2}
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{dogstatus,gchk,0} ;*****
!name{"GadgetStatus","(GadgetList#,Id)"}

!afunction{2}
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{dobuttonid,0,0}
!name{"ButtonId","(GadgetList#,ButtonGroup)"}

!astatement
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{doenable,gchk,0} ;*****
!name{"Enable","(GadgetList#,Id)"}

!astatement
!args{2,2}
!libs{#gadgetslib,$1180}
!subs{dodisable,gchk,0} ;*****
!name{"Disable","(GadgetList#,Id)"}

!astatement
!args{2,2,2}
!libs{#gadgetslib,$1180}
!subs{setdogstatus,gchk,0} ;*****
!name{"SetGadgetStatus","(GadgetList#,Id,Value)"}

!astatement
!args{2,2,#string}
!libs{#gadgetslib,$1180}
!subs{settextgadget,gchk,0} ;*****
!name{"SetTextGadget","GadgetList#,Id,Text$"}

init:!nullsub{codeinit,0,0}

_load:!nullsub{0,0,0}

_save:!nullsub{0,0,0}

_use:!nullsub{0,0,0}

_free:!nullsub{freegadget,0,0}

!libfin{_toke,_load,_save,_use,_free,5,2}

;***************** Code Below *******************

#bordersiz=36
#bordermem=#bordersiz*2

fpen:Dc.b 1 ;intuitext foreground pen
bpen:Dc.b 0 ;intuitext background pen
bco1:Dc.b 1 ;left edge of border        ;default 2,1
bco2:Dc.b 2 ;right edge of border
mode:Dc.b 0 ;jam mode for intuitext
Even
bxxs:Dc 4 ;border stuff x excess
byxs:Dc 2 ;bordey stuff y excess
fhit:Dc 8 ;font hite
bordersok:Dc -1
bxxs2:Dc 4
byxs2:Dc 2
fontattr:Dc.l 0
selmode:Dc 0
defflags:Dc 0
bgroup:Dc 0

.setdogstatus
BSR findgadget:MOVE.l 26(a0),d0:BEQ 'ignore:BTST #0,14(a0):BNE 'ignore
MOVE.l d0,a0:MOVE.l 20(a0),a1:SUBQ#1,d2:BMI 'ignore:BRA 'nxstr  ;:MOVEQ #1,d0
'floop:TST.b (a1)+:BNE 'floop
'nxstr:DBRA d2,'floop:MOVE.l a1,12(a0)        ;find d2th string
'ignore:RTS

.dogstatus
BSR findgadget:MOVE.l 26(a0),d0:BEQ 'skip:BTST #0,14(a0):BNE 'skip
MOVE.l d0,a0:MOVE.l 12(a0),a1:MOVE.l 20(a0),a0:MOVEQ #1,d0
'loop:CMP.l a1,a0:BCC 'done:ADDQ #1,d0
'loop2:TST.b (a0)+:BNE 'loop2:BRA 'loop
'skip:BTST #7,13(a0):SNE d0:EXT.w d0
'done:RTS

.doenable:BSR findgadget:BCLR #0,12(a0):RTS

.dodisable:BSR findgadget:BSET #0,12(a0):RTS

dobgroup:MOVE d0,bgroup:RTS

dobuttonid  ;d1=group
'loop:MOVE.l (a1),d0:BEQ 'none:MOVE.l d0,a1
CMP 42(a1),d1:BNE 'loop:BTST #7,13(a1):BEQ 'loop
MOVE 38(a1),d0:RTS
'none:MOVEQ #-1,d0:RTS

dosetstring ;put some stuff into string gadget
;
;d1=id
;
;a2,d2=text to set string gadget to.
;
BSR findgadget:MOVE.l 34(a0),a0:MOVE.l (a0),a0
MOVE.l d2,a1
'loop:MOVE.b (a1)+,(a0)+:BNE 'loop
RTS

doselectmode:CLR selmode:TST d0:BEQ 'done:ADDQ #1,selmode
'done:RTS

dogjam:MOVE.b d0,mode:RTS

dogpens
MOVE.b d1,bpen
dogpens2
MOVE.b d0,fpen:RTS

dobpens
MOVE.b d0,bco1:MOVE.b d1,bco2:RTS

.codeinit
MOVE #1,bgroup
MOVE.l #$01000102,fpen:MOVE.b #1,mode
MOVE.l #$00040002,bxxs
MOVE.l #$00040002,bxxs2
MOVE #8,fhit:MOVE #-1,bordersok:CLR.l fontattr:RTS

.dogb ;Borders
MOVE d0,bxxs:MOVE d1,byxs:MOVE.l bxxs(pc),bxxs2:RTS

.dogb2  ;turn borders on or off.
TST d0:BEQ 'boff
MOVE bordersok(pc),d1:BNE 'skip:NOT bordersok
MOVE.l bxxs2(pc),bxxs:RTS
'boff:MOVE bordersok(pc),d1:BEQ 'skip:MOVE d0,bordersok
MOVE.l bxxs(pc),bxxs2:CLR.l bxxs
'skip:RTS

.dogborder:;draw up a gadget border
;
MOVE d2,d6:MOVE d3,d7
ADD bxxs2(pc),d6:ADD bxxs2(pc),d6
ADD byxs2(pc),d7:ADD byxs2(pc),d7
BSR allocborder2
MOVE.l a0,-(a7)
MOVE.l (a1),a2:MOVE.l a0,a1:MOVE.l 50(a2),a0
SUB bxxs2(pc),d0:SUB byxs2(pc),d1
JSR _DrawBorder(a6)
MOVE.l (a7)+,a1:MOVEQ #bordermem,d0:ALibJsr $c003
RTS

.dosethprop:MOVEQ #2,d7
;
setprop2
CMP.l #$10000,d2:BCS 'skip:MOVE #$ffff,d2
'skip:CMP.l #$10000,d3:BCS 'skip2:MOVE #$ffff,d3
;
'skip2:BSR findgadget:MOVE.l 34(a0),a0
MOVE d2,0(a0,d7):MOVE d3,4(a0,d7):RTS

.dosetvprop:MOVEQ #4,d7:BRA setprop2

.dohproppot:MOVEQ #2,d0:BRA readprop
.dohpropbody:MOVEQ #6,d0:BRA readprop
.dovproppot:MOVEQ #4,d0:BRA readprop
.dovpropbody:MOVEQ #8,d0
;
readprop:BSR findgadget:MOVE.l 34(a0),a0
MOVE d0,d1:MOVEQ #0,d0:MOVE 0(a0,d1),d0:RTS

.doredraw:MOVE.l (a1),a2:LEA 62(a2),a1
BSR findgadget:MOVE.l a2,a1:SUB.l a2,a2:MOVEQ #1,d0
JMP _RefreshGList(a6)

.dostringactivate
MOVE.l (a1),a2:LEA 62(a2),a1
BSR findgadget:MOVE.l a2,a1:SUB.l a2,a2
JMP _ActivateGadget(a6)

;.dogadgeton:;enable a gadget!
;;
;BSR findgadget:BCLR #0,12(a0):RTS

;.dogadgetoff:;disable a gadget!
;;
;BSR findgadget:BSET #0,12(a0):RTS

.doselect:;select a gadget!
;
BSR findgadget:TST d2:BEQ 'skip:BSET #7,13(a0):RTS
'skip:BCLR #7,13(a0):RTS

.doselect2:;toggle a gadget!
;
BSR findgadget:BCHG #7,13(a0):RTS

.dostringclear
;
BSR findgadget:MOVE.l 34(a0),a0
CLR 8(a0):CLR 12(a0):MOVE.l (a0),a0:CLR.b (a0):RTS

.dostringreset
;
BSR findgadget:MOVE.l 34(a0),a0
CLR 8(a0):CLR 12(a0):RTS

.dostringtext
;
BSR findgadget:MOVE.l 34(a0),a0:MOVE.l (a0),a0
MOVEQ #-1,d0
'loop:ADDQ.l #1,d0:MOVE.b (a0)+,(a3)+:BNE 'loop
SUBQ #1,a3:RTS

.findgadget:;gadget list a1, id in d1, return a0, gadget struct
;
MOVE.l a1,a0
'loop:MOVE.l (a0),a0:CMP 38(a0),d1:BNE 'loop:TST 16(a0):BMI 'loop
RTS

.fontcalc:
  MOVE.l (a1),a1
  MOVE.l a1,fontattr
  MOVE 4(a1),fhit
RTS

.findmaxlen:
  MOVE.l 12(a0),a2:MOVE.l a2,-(a7):MOVE.l a0,-(a7):MOVEQ #0,d7
  ;
 'loop2:
    MOVE.l a2,a0
   'loop:
      MOVE.b (a0)+,d0 : BEQ 'last
      CMP.b #"|",d0
    BNE 'loop
    CLR.b -1(a0)
    MOVE.l a0,-(a7)
    MOVE.l 4(a7),a0:MOVE.l a2,12(a0):JSR _IntuiTextLength(a6)
    MOVE.l (a7)+,a2
  CMP d7,d0
  BLE 'loop2
  MOVE d0,d7
  BRA 'loop2
  ;
 'last
  MOVE.l (a7),a0 : MOVE.l a2,12(a0) : JSR _IntuiTextLength(a6)
  CMP d7,d0 : BLE 'skip
    MOVE d0,d7
 'skip:
  MOVE.l (a7)+,a0
  MOVE.l (a7)+,12(a0)
  MOVE d7,d0
RTS

.
.settextgadget
  BSR findgadget : MOVE.l 26(a0),d0 : BEQ dungun
    MOVE.l d0,a1:MOVE.l 12(a1),d0:BEQ dungun:MOVE.l d0,a1:MOVE.l d2,a0
    nxc1:TST.b (a1):BEQ dungun:MOVE.b (a0)+,(a1)+:BNE nxc1:MOVE.b#32,-1(a1)
    nxc2:TST.b (a1):BEQ dungun:MOVE.b #32,(a1)+:BRA nxc2
  dungun:
RTS

.dotextgadget        ;d1=x, d2=y, d3=flags, d4=id, d5=text
  BSR fontcalc
  MOVE d1,-(a7)
  MOVE.l d5,d0 : MOVE.l -(a2),d1
  BSR allocintui : BSR findmaxlen : MOVE.l a0,a2
  MOVE bxxs(pc),d6                                           ;LeftEdge
  MOVE byxs(pc),d7                                           ;TopEdge
  MOVE d6,4(a2)
  MOVE d7,6(a2)
  ADD d6,d6 : ADD d0,d6
  ADD d7,d7 : ADD fhit(pc),d7
  BSR allocborder                                            ; d6 = width, d = height
  MOVE (a7)+,d1 : MOVE.l a0,-(a7)
  BSR allocgadget : MOVE.l (a7)+,18(a0)
  MOVE.l a2,26(a0) : MOVE #1,16(a0)
BRA handleflags

.dostringgadget
;
;d1=x,d2=y,d3=flags,d4=id,d5=maxlen,-(a2)=width
;
MOVE -(a2),d6
ADD bxxs(pc),d6:ADD bxxs(pc),d6
MOVE fhit(pc),d7:ADD byxs(pc),d7:ADD byxs(pc),d7
BSR allocborder:MOVE (a2),d6:MOVE fhit(pc),d7
MOVE bxxs(pc),d0:ADD d0,d1:NEG d0
MOVE d0,(a0):MOVE d0,bordersiz(a0)
MOVE byxs(pc),d0:ADD d0,d2:NEG d0
MOVE d0,2(a0):MOVE d0,2+bordersiz(a0)
MOVE.l a0,-(a7)
BSR allocgadget:MOVE #4,16(a0):BSR handleflags
MOVE.l (a7)+,18(a0)
MOVEQ #36,d0:MOVE.l #$10001,d1:ALibJsr $c002
MOVE.l d0,a1:MOVE.l a1,34(a0)
MOVEQ #0,d0:MOVE d5,d0:MOVEQ #1,d1:ALibJsr $c002
MOVE.l d0,(a1):MOVE d5,10(a1):MOVE.l d0,a0:SUBQ #1,d5
'loop:CLR.b (a0)+:DBF d5,'loop
RTS

.dopropgadget
;
;d1=x,d2=y,d3=flags,d4=id,d5=width,-(a2)=height
;
;bit 5 of flags, 1 = free horiz
;bit 6 of flags, 1 = free vertical
;
MOVE d5,d6:MOVE -(a2),d7
BSR allocgadget
MOVEQ #22,d0:MOVE.l #$10001,d1:ALibJsr $c002:MOVE.l d0,a1
MOVE #3,16(a0):BSR handleflags:MOVEQ #1,d0
LSR #1,d3:BCC 'skip:BSET #1,d0
'skip:LSR #1,d3:BCC 'skip2:BSET #2,d0
'skip2:LSR #1,d3:BCC 'skip3:BSET #3,d0
'skip3:BSET#4,d0:MOVE d0,(a1)
MOVE.l #$80008000,2(a1):MOVE.l #$80008000,6(a1):MOVE.l a1,34(a0)
MOVEQ #20,d0:MOVE.l #$10001,d1:ALibJsr $c002
MOVE.l d0,18(a0):BSET #2,13(a0)
RTS

makeintuishape
MOVEQ #20,d0:MOVE.l #$10001,d1:ALibJsr $c002:MOVE.l d0,a1
MOVE (a2),d6:MOVE d6,4(a1)
MOVE 2(a2),d7:MOVE d7,6(a1):MOVE 4(a2),d1:MOVE d1,8(a1)
MOVE.l 14(a2),10(a1):MOVEQ #0,d0:SUBQ #1,d1
'ppl:LSL #1,d0:BSET #0,d0:DBF d1,'ppl
MOVE.b d0,14(a1):CLR.b 15(a1)
RTS

doshapegadget2  ;a0=alternate shape#
MOVEM.l d1-d4/a2,-(a7)
MOVE.l a1,a2:BSR makeintuishape
MOVEM.l (a7)+,d1-d4/a2
MOVE.l a1,-(a7):BRA doshapegadget3

.doshapegadget
;
CLR.l -(a7)
;
doshapegadget3
;
;d1=x,d2=y,d3=flags,d4=id,a2=shape stuff
;
SUB 10(a2),d1:SUB 12(a2),d2 ;adjust for x,y handle
;
MOVE d1,-(a7):BSR makeintuishape:MOVE (a7)+,d1
;
BSR allocgadget
;
MOVE #1,16(a0):BSET #2,13(a0)
MOVE.l a1,18(a0):MOVE.l (a7)+,22(a0):BEQ 'bye:BSET #1,13(a0)
'bye
;
.handleflags
;
BTST #16,d3:BEQ 'gzz:BSET #5,16(a0):'gzz
BTST #15,d3:BEQ 'bor0:BSET #7,15(a0):'bor0
BTST #14,d3:BEQ 'bor1:BSET #6,15(a0):'bor1
BTST #13,d3:BEQ 'bor2:BSET #5,15(a0):'bor2
BTST #12,d3:BEQ 'bor3:BSET #4,15(a0):'bor3
;
BTST #9,d3:BEQ 'skip0:MOVE bgroup(pc),42(a0)
'skip0:LSR #1,d3:BCC 'skip:BSET #0,14(a0)   ;toggle
'skip:LSR #1,d3:BCC 'skip2:BSET #4,13(a0)   ;rel right
'skip2:LSR #1,d3:BCC 'skip3:BSET #3,13(a0)  ;rel bottom
'skip3:LSR #1,d3:BCC 'skip4:BSET #5,13(a0)  ;rel width
'skip4:LSR #1,d3:BCC 'skip5:BSET #6,13(a0)  ;rel height
'skip5:LSR #1,d3:BCC 'skip6:BSET #0,13(a0)  ;box select
'skip6
RTS

.allocgadget
;
;d1=x,d2=y,d3=flags,d4=id,d6=width,d7=hite
;a3=item
;
MOVEM.l d0/a1,-(a7)
MOVE d1,-(a7)
MOVEQ #44,d0:MOVE.l #$10001,d1:ALibJsr $c002:MOVE.l d0,a0
MOVE.l a3,d0
'loop:MOVE.l d0,a1:MOVE.l (a1),d0:BNE 'loop
MOVE.l a0,(a1)
MOVE (a7)+,4(a0):MOVE d2,6(a0):MOVE d6,8(a0):MOVE d7,10(a0)
;
MOVE defflags(pc),12(a0)
;
MOVE d4,38(a0):MOVE #3,14(a0)
MOVE #"bL",40(a0):CLR 42(a0) ;blitz type gadget!
MOVEM.l (a7)+,d0/a1:RTS

.allocintui:    ;d0=string, d1=length, return a0 - pointer to intuitext!
  ;
  MOVE.l a1,-(a7)
  ;
  ALibJsr $cf01 : MOVE.l d0,-(a7)
  ;
  MOVEQ #24,d0:MOVE.l #$10001,d1 : ALibJsr $c002:;global alloc
  MOVE.l d0,a0 : MOVE.l (a7)+,d0 : MOVE.l d0,12(a0) : MOVE.l d0,20(a0)
  MOVE fpen(pc),(a0) : MOVE.b mode(pc),2(a0)
  ;
  MOVE.l fontattr(pc),8(a0)
  ;
  MOVE.l (a7)+,a1
RTS

.allocborder:
  TST bordersok:BNE allocborder2:SUB.l a0,a0:RTS

.allocborder2:;d6=width, d7=height, return a0
  ;
  MOVEM.l d0-d1/a1,-(a7)
  ;
  MOVEQ #bordermem,d0:MOVE.l #$10001,d1:ALibJsr $c002
  MOVE.l d0,a0:MOVE.b bco1(pc),4(a0):MOVE.b bco2(pc),4+36(a0)
  MOVE.b #5,7(a0):MOVE.b #5,7+36(a0)
  LEA 16(a0),a1:MOVE.l a1,8(a0):LEA 36(a0),a1:MOVE.l a1,12(a0)
  LEA 16+36(a0),a1:MOVE.l a1,8+36(a0)
  ;
  SUBQ #1,d6:SUBQ #1,d7
  MOVE d6,16(a0):MOVE d7,26(a0)                      ;tr tl br
  SUBQ#1,d7:MOVE d7,30(a0):ADDQ#1,d7
  MOVE#1,28(a0):MOVE#1,32(a0):MOVE#1,34(a0)

  MOVE d7,36+18(a0):MOVE d7,36+22(a0):MOVE d7,36+34(a0)
  MOVE #1,36+30(a0):MOVE#1,36+16(a0):MOVE d6,36+20(a0):MOVE d6,36+24(a0)
  SUBQ#1,d6:MOVE d6,36+28(a0):MOVE d6,36+32(a0):ADDQ#1,d6
  ;
  ADDQ #1,d6:ADDQ #1,d7
  ;
  MOVEM.l (a7)+,d0-d1/a1
RTS

;    MOVEM.l d0-d1/a1,-(a7)
;    ;
;    MOVEQ #28*2,d0:MOVE.l #$10001,d1:ALibJsr $c002
;    MOVE.l d0,a0:MOVE.b bco1(pc),4(a0):MOVE.b bco2(pc),4+28(a0)
;    MOVE.b #3,7(a0):MOVE.b #3,7+28(a0)
;    LEA 16(a0),a1:MOVE.l a1,8(a0):LEA 28(a0),a1:MOVE.l a1,12(a0)
;    LEA 16+28(a0),a1:MOVE.l a1,8+28(a0)
;    ;
;    SUBQ #1,d6:SUBQ #1,d7
;    MOVE d6,16(a0):MOVE d6,16+28(a0):MOVE d6,20+28(a0)
;    MOVE d7,26(a0):MOVE d7,22+28(a0):MOVE d7,26+28(a0)
;    MOVE #1,18+28(a0):MOVE #1,24+28(a0)
;    ADDQ #1,d6:ADDQ #1,d7
;    ;
;    MOVEM.l (a7)+,d0-d1/a1:RTS

.freegadget:;a3=gadget list
;
MOVE.l (a3),a2:CLR.l (a3)
'loop:CMP #0,a2:BEQ 'done
CMP #"bL",40(a2):BEQ 'do
MOVE.l (a2),a2:BRA 'loop
;
'do:MOVE.l 26(a2),d0:BEQ 'notext
;
MOVE.l d0,a1:MOVE.l 20(a1),d0:ALibJsr $cf02
MOVEQ #24,d0:ALibJsr $c003
;
'notext:MOVE.l 18(a2),d0:BSR freerend
MOVE.l 22(a2),d0:BSR freerend
MOVE.l 34(a2),d0:BEQ 'nosinfo:MOVE.l d0,a1
MOVE 16(a2),d0:AND #15,d0
MOVEQ #22,d0:CMP #3,d0:BEQ 'freeit
CMP #4,d0:BNE 'nosinfo ;no special info
;
MOVE.l a1,-(a7)
;
MOVEQ #0,d0:MOVE 10(a1),d0:MOVE.l (a1),a1:ALibJsr $c003
;
MOVE.l (a7)+,a1:MOVEQ #36,d0
;
'freeit:ALibJsr $c003:BRA 'nosinfo
;
'nostring
;
'nosinfo:MOVE.l a2,a1:MOVEQ #44,d0:MOVE.l (a2),a2:ALibJsr $c003
BRA 'loop
'done:RTS

freerend:BEQ 'done:MOVE.l d0,a1
MOVEQ #bordermem,d0:BTST #2,13(a2):BEQ 'freeit:MOVEQ #20,d0
;
'freeit:ALibJsr $c003
;
'done:RTS

;***************** ERRORS! **********************
errors

err1:MOVE.l #mess1,d0:TRAP #0
err2:MOVE.l #mess2,d0:TRAP #0
err3:MOVE.l #mess3,d0:TRAP #0
err4:MOVE.l #mess4,d0:TRAP #0
err5:MOVE.l #mess5,d0:TRAP #0
err6:MOVE.l #mess6,d0:TRAP #0

mess1:Dc.b "Can't Find Gadget",0
mess2:Dc.b "Uninitialized Window",0
mess3:Dc.b "Not a String Gadget",0
mess4:Dc.b "String to long for Gadget",0
mess5:Dc.b "Uninitialized Shape",0
mess6:Dc.b "Button Group MUST be greater than zero",0
Even

sgchk2:TST (a1):BEQ err5
;
sgchk:TST (a2):BEQ err5:RTS

actchk:BSR redrawchk:BTST #2,17(a0):BEQ err3:RTS

redrawchk:TST.l (a1):BEQ err2
MOVE.l a1,-(a7)
MOVE.l (a1),a1:LEA 62(a1),a1:BSR gchk
MOVE.l (a7)+,a1:RTS

reschk:BSR gchk:BTST #2,17(a0):BEQ err3:RTS

gchk:;check gadget exists - a1=glist, d1=id
;
MOVE.l a1,a0
'loop:MOVE.l (a0),d0:BEQ err1:MOVE.l d0,a0
CMP 38(a0),d1:BNE 'loop:TST 16(a0):BMI 'loop  ;system gadget!
RTS

propchk:  ;check whether it's a prop gadget
BSR gchk:CMP.b #3,17(a0):BNE err1
RTS

wchk:TST.l (a1):BEQ err2:RTS

settest:BSR reschk
MOVE.l 34(a0),a0:MOVEQ #0,d7:MOVE 10(a0),d7
CMP.l -4(a2),d7:BLS err4
RTS

bgroupchk:TST d0:BLE err6:RTS

