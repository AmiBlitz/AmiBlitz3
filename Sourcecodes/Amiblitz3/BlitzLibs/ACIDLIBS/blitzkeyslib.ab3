; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = "blitzlibs:basic/blitzkeyslib.obj"
; CreateIcon      = 0
; Residents       = "libmacs.res,blitzoffs.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 42
; CursorColumn    = 1
; LabelSearch     = "init"
; LabelRemark     = 67
; LabelAll        = 5
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 100
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max BitMap      = 10
; Max IconInfo    = 1
; Max NChunky     = 1
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 16
; Max XBSound     = 10
; Max Chunky      = 20
; /XTRA
;
; Blitz Raw Key Reader!
;
!libheader{#blitzkeyslib,init,0,0,0}

!astatement
!args{2}
!libs
!subs{dobkeys,1,0}
!name{"BlitzKeys","On|Off"} ;*****

!afunction{2}
!args{2}
!libs
!subs{dorstat,0,0}                   ;was 1,0
!name{"RawStatus","(Rawkey)"} ;*****

!astatement
!args{2,2}
!libs
!subs{doblitzrepeat,0,0}
!name{"BlitzRepeat","Delay,Speed"}  ;*****

!afunction{2}
!args
!libs
!subs{doblitzqualifier,0,0}
!name{"BlitzQualifier",""}

!astatement
!args
!libs
!subs{0,0,0}
!name{"HandleRawKey",""}  ;*****

!afunction{#word}
!args
!libs
!subs{binkey,0,0}
!name{"BlitzKey",";same as inkey$ after a bitmapinput"}

init:!nullsub{codeinit,0,0,#switchlib,#la0}

!libfin

;********************* CODE BELOW **********************
;
key:Dc.l 0
ison:Dc 0 ;flag for if blitzkeys is already on
bqual:Dc 0
oldin:Dc.l 0  ;old input handler.
matoff:Dc 0

.doblitzqualifier
;
MOVE bqual(pc),d0:RTS

.codeinit
MOVE.l a0,key:CLR ison:CLR bqual

MOVE#$136,d0:MOVE.l 4,a0:CMP #36,20(a0):BCC 'skip:MOVE #$106,d0

'skip:MOVE d0,matoff

RTS

.doblitzrepeat:RTS

.dobkeys
TST d0:BEQ bkoff:MOVE ison(pc),d0:BNE 'done:NOT ison
;
LEA binkey(pc),a0:ALibJsr #inputoutputlib LSL 7+3:MOVE.l d0,oldin
;
'done:RTS

bkoff:MOVE ison(pc),d0:BEQ 'done:NOT ison
;
'done:RTS

BRA dobinkey2
.binkey
;
;single character to d0! don't fuck any registers tho'
;
MOVEM.l d1/a0-a1,-(a7):MOVE.l key(pc),a0
MOVE $70(a0),d1
'retry:ADDQ #4,d1:AND #127,d1:CMP $72(a0),d1:BEQ 'nokey:MOVE d1,$70(a0)
MOVE $74(a0,d1),d0:BTST #7,d0:BNE 'retry:CMP #$7d,d0:BEQ 'nokey
MOVE $76(a0,d1),d1:MOVE d1,bqual:ALibJsr #rawkeylib LSL 7+3
;
MOVEM.l (a7)+,d1/a0-a1:RTS
;
'nokey:MOVEQ #-1,d0:MOVEM.l (a7)+,d1/a0-a1:RTS

.dobinkey2
MOVE.l oldin(pc),a6:JMP -4(a6)

.dorstat
;
MOVE.l key(pc),a0:MOVE d0,d1:AND #7,d1:LSR #3,d0:ADD matoff(pc),a0
BTST d1,0(a0,d0):SNE d0:EXT d0:RTS

