; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 26
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelCase       = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 5
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max BlitzFont   = 4
; Max Window      = 5
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 1
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 1
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 1
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
.structwith_
NEWTYPE ._BitMap
  BytesPerRow.w
  Rows.w
  Flags.b
  _Depth.b
  pad.w
  *Planes.l[8]
End NEWTYPE

NEWTYPE ._ViewPort
  *_Next._ViewPort
  *ColorMap.ColorMap ;  table of colors for this viewport
  ;  if this is nil, MakeVPort assumes default values
  *DspIns.CopList ;  used by MakeVPort()
  *SprIns.CopList ;  used by sprite stuff
  *ClrIns.CopList ;  used by sprite stuff
  *UCopIns.UCopList ;  User copper list
  DWidth.w
  DHeight.w
  DxOffset.w
  DyOffset.w
  Modes.w
  SpritePriorities.b
  ExtendedModes.b
  *RasInfo.RasInfo
End NEWTYPE

NEWTYPE ._RastPort
  *Layer.Layer
  *_BitMap.BitMap
  *AreaPtrn.w      ;  ptr to areafill pattern
  *TmpRas.TmpRas
  *AreaInfo.AreaInfo
  *GelsInfo.GelsInfo
  Mask.b       ;  write mask for this raster
  FgPen.b       ;  foreground pen for this raster
  BgPen.b       ;  background pen
  AOlPen.b       ;  areafill outline pen
  DrawMode.b       ;  drawing mode for fill, lines, and text
  AreaPtSz.b       ;  2^n words for areafill pattern
  linpatcnt.b       ;  current line drawing pattern preshift
  dummy.b
  Flags.w      ;  miscellaneous control bits
  LinePtrn.w      ;  16 bits for textured lines
  cp_x.w
  cp_y.w      ;  current pen position
  minterms.b[8]
  PenWidth.w
  PenHeight.w
  *Font.TextFont   ;  current font address
  AlgoStyle.b       ;  the algorithmically generated style
  TxFlags.b       ;  text specific flags
  TxHeight.w       ;  text height
  TxWidth.w       ;  text nominal width
  TxBaseline.w       ;  text baseline
  TxSpacing.w       ;  text spacing (per character)
  *RP_User.l
  longreserved.l[2]
  wordreserved.w[7]  ;  used to be a node
  reserved.b[8]      ;  for future use
End NEWTYPE


NEWTYPE ._Screen
    *NextScreen._Screen  ;  linked list of screens
    *FirstWindow._Window  ;  linked list Screen's Windows

    LeftEdge.w
    TopEdge.w  ;  parameters of the screen
    Width.w
    Height.w   ;  parameters of the screen

    _MouseY.w
    _MouseX.w  ;  position relative to upper-left

    Flags.w   ;  see definitions below

    *Title.b   ;  null-terminated Title text
    *DefaultTitle.b  ;  for Windows without ScreenTitle

    ;  Bar sizes for this Screen and all Window's in this Screen
    ;  Note that BarHeight is one less than the actual menu bar
;      * height. We're going to keep this in V36 for compatibility,
;      * although V36 artwork might use that extra pixel
;      *
;      * Also, the title bar height of a window is calculated from the
;      * screen's WBorTop field, plus the font height, plus one.
;
    BarHeight.b
    BarVBorder.b
    BarHBorder.b
    MenuVBorder.b
    MenuHBorder.b
    WBorTop.b
    WBorLeft.b
    WBorRight.b
    WBorBottom.b

    Pad.b           ; NEEDED !!! Really bad done the RKMs... C/C++ round up automatically, not PureBasic :-)

    *Font.TextAttr  ;  this screen's default font

    ;  the display data structures for this Screen
    _ViewPort._ViewPort  ;  describing the Screen's display
    _RastPort._RastPort  ;  describing Screen rendering
    _BitMap._BitMap  ;  SEE WARNING ABOVE!
    LayerInfo.Layer_Info ;  each screen gets a LayerInfo

    ;  Only system gadgets may be attached to a screen.
;      * You get the standard system Screen Gadgets automatically
;
    *FirstGadget.Gadget

    DetailPen.b
    BlockPen.b  ;  for bar/border/gadget rendering

    ;  the following variable(s) are maintained by Intuition to support the
;      * DisplayBeep() color flashing technique
;
    SaveColor0.w

    ;  This layer is for the Screen and Menu bars
    *BarLayer.Layer

    *ExtData.b

    *UserData.b ;  general-purpose pointer to User data extension

    ; *** Data below this point are SYSTEM PRIVATE ***
End NEWTYPE



NEWTYPE ._Window

    *NextWindow._Window  ;  for the linked list in a screen

    LeftEdge.w
    TopEdge.w  ;  screen dimensions of window
    Width.w
    Height.w   ;  screen dimensions of window

    _MouseY.w
    _MouseX.w  ;  relative to upper-left of window

    MinWidth.w
    MinHeight.w  ;  minimum sizes
    MaxWidth.w
    MaxHeight.w  ;  maximum sizes

    Flags.l   ;  see below for defines

    *MenuStrip.Menu  ;  the strip of Menu headers

    *Title.b   ;  the title text for this window

    *FirstRequest.Requester ;  all active Requesters

    *DMRequest.Requester ;  double-click Requester

    ReqCount.w   ;  count of reqs blocking Window

    *WScreen._Screen  ;  this Window's Screen
    *RPort._RastPort  ;  this Window's very own RastPort

    ;  the border variables describe the window border.  If you specify
;      * WFLG_GIMMEZEROZERO when you open the window, then the upper-left of
;      * the ClipRect for this window will be upper-left of the BitMap (with
;      * correct offsets when in SuperBitMap mode; you MUST select
;      * WFLG_GIMMEZEROZERO when using SuperBitMap).  If you don't specify
;      * ZeroZero, then you save memory (no allocation of RastPort, Layer,
;      * ClipRect and associated Bitmaps), but you also must offset all your
;      * writes by BorderTop, BorderLeft and do your own mini-clipping to
;      * prevent writing over the system gadgets
;
    BorderLeft.b
    BorderTop.b
    BorderRight.b
    BorderBottom.b
    *BorderRPort._RastPort


    ;  You supply a linked-list of Gadgets for your Window.
;      * This list DOES NOT include system gadgets.  You get the standard
;      * window system gadgets by setting flag-bits in the variable Flags (see
;      * the bit definitions below)
;
    *FirstGadget.Gadget

    ;  these are for opening/closing the windows
    *Parent.Window
    *Descendant.Window

    ;  sprite data information for your own Pointer
;      * set these AFTER you Open the Window by calling SetPointer()
;
    *_Pointer.w ;  sprite data
    PtrHeight.b ;  sprite height (not including sprite padding)
    PtrWidth.b ;  sprite width (must be less than or equal to 16)
    XOffset.b
    YOffset.b ;  sprite offsets

    ;  the IDCMP Flags and User's and Intuition's Message Ports
    IDCMPFlags.l ;  User-selected flags
    *UserPort.MsgPort
    *WindowPort.MsgPort
    *MessageKey.IntuiMessage

    DetailPen.b
    BlockPen.b ;  for bar/border/gadget rendering

    ;  the CheckMark is a pointer to the imagery that will be used when
;      * rendering MenuItems of this Window that want to be checkmarked
;      * if this is equal to NULL, you'll get the default imagery
;
    *CheckMark.Image

    *ScreenTitle.b ;  if non-null, Screen title when Window is active

    ;  These variables have the mouse coordinates relative to the
;      * inner-Window of WFLG_GIMMEZEROZERO Windows.  This is compared with the
;      * MouseX and MouseY variables, which contain the mouse coordinates
;      * relative to the upper-left corner of the Window, WFLG_GIMMEZEROZERO
;      * notwithstanding
;
    GZZMouseX.w
    GZZMouseY.w
    ;  these variables contain the width and height of the inner-Window of
;      * WFLG_GIMMEZEROZERO Windows
;
    GZZWidth.w
    GZZHeight.w

    *ExtData.b

    *UserData.b ;  general-purpose pointer to User data extension

    ; * 11/18/85: this pointer keeps a duplicate of what
;      * Window.RPort->Layer is _supposed_ to be pointing at
;
    *WLayer.Layer

    ;  NEW 1.2: need to keep track of the font that
;      * OpenWindow opened, in case user SetFont's into RastPort
;
    *IFont.TextFont

    ;  (V36) another flag word (the Flags field is used up).
;      * At present, all flag values are system private.
;      * Until further notice, you may not change nor use this field.
;
    MoreFlags.l

    ; *** Data beyond this point are Intuition Private.  DO NOT USE ***
End NEWTYPE
.structwith_end
