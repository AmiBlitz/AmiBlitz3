optimize 7
Syntax 2
XINCLUDE "file.include.bb2"
XINCLUDE "strptr.include.bb2"

filename.s = Par$(1)
dosA.l = file_Open{filename.s,#file_read}
dosC.l = file_Open{"Ram:test.c",#file_write}
dosH.l = file_Open{"Ram:test.h",#file_write}

#type_l = 0
#type_w = 1
#type_b = 2
#type_f = 3
#type_d = 4
#type_s = 5

NEWTYPE.func
name.s
argname[16]
argtyp.l[16]
End NEWTYPE

NEWTYPE.var
name.s
typ.l
End NEWTYPE

NEWTYPE.pengine
End NEWTYPE


Dim List funcs(0)
Dim List gvars(0)
Dim List lvars(0)

DEFTYPE.pengine  pengine


Function.l find{strptr.l,string.s,pos.l}
xlen.l    = Peek.l(strptr-4)
quoted.l  = 0
comment.l = 0
succ.l    = False
ylen.l    = Peek.l(&string.s-4)
pos        -1
If pos<0 Then pos=0
spos.l    =-1
While pos<xlen AND succ=False
    c.b = Peek.b(strptr+pos)
    Select c.b
      Case $22
        If comment=0
          quoted=1-quoted
        End If
      Case 10
        quoted=0
        comment=0
      Case @";"
        If quoted=0 AND comment=0
          comment=1
        End If
      Default
        If quoted=0 AND comment=0
            ypos.l = 0
            succ.l = True
            While ypos<ylen
              If Peek.b(strptr+pos+ypos)><Peek.b(&string.s+ypos) Then succ=False:ypos=ylen
              ypos+1
            Wend
            If succ
              spos.l = pos
            End If
        End If
    End Select
    pos+1
Wend
;error {"String "+string.s+" found at: "+Str$(spos)}
Function Return spos+1
End Function


Function.s replace{text.s,find.s,repl.s}
pos.l = 0
xa.b =  Peek.b(&find.s)

xb.b =  Peek.b(&find.s+FLen(find.s)-1)


While pos<FLen(text.s)
  pos = find{&text.s,find.s,pos}
  If pos>0
    If pos>1 AND xa><$20
      cv.b = Peek.b(&text.s+pos-2)
    Else
      cv=$20
    End If

    If xb><$20
      cp.b = Peek.b(&text.s+pos+FLen(find.s)-1)
    Else
      cp = $20
    End If
    ;NPrint "V = ",Chr$(cv)," ( ",cv
    ;NPrint "P = ",Chr$(cp)," ( ",cp
    ;a.s = Chr$(cv)
    succ.l=True
    If succ
    text.s = Left$(text.s,pos-1) + repl.s + Right$(text.s,FLen(text.s)-FLen(find.s)-pos+1)

    pos.l + FLen(repl.s)
    Else
      pos +1
    End If
  Else
    pos = FLen(text.s)
  End If

Wend

Function Return text.s
End Function



Function.l findToken{text.s,find.s,pos.l}
;pos.l = 0
xa.b =  Peek.b(&find.s)

xb.b =  Peek.b(&find.s+FLen(find.s)-1)

While pos<FLen(text.s)
  pos = find {&text.s,find.s,pos}
  If pos>0
    If pos>1 AND xa><$20
      cv.b = Peek.b(&text.s+pos-2)
    Else
      cv=$20
    End If

    If xb><$20
      cp.b = Peek.b(&text.s+pos+FLen(find.s)-1)
    Else
      cp = $20
    End If

    succ.l=True
    If (cp>=@"a" AND cp<=@"z") OR (cp>=@"A" AND cp<=@"Z") OR (cp>=@"0" AND cp<=@"9") OR cp=@"_"
      succ=False
    End If
    If (cv>=@"a" AND cv<=@"z") OR (cv>=@"A" AND cv<=@"Z") OR (cv>=@"0" AND cv<=@"9") OR cv=@"_"
      succ=False
    End If
    If succ
      Function Return pos
    End If
    pos+1
  Else
    pos = FLen(text.s)
  End If

Wend


Function Return 0
End Function

Function.s replaceToken{text.s,find.s,repl.s}
pos.l = 0
xa.b =  Peek.b(&find.s)

xb.b =  Peek.b(&find.s+FLen(find.s)-1)


While pos<FLen(text.s)
  pos = find{&text.s,find.s,pos}
  If pos>0
    If pos>1 AND xa><$20
      cv.b = Peek.b(&text.s+pos-2)
    Else
      cv=$20
    End If

    If xb><$20
      cp.b = Peek.b(&text.s+pos+FLen(find.s)-1)
    Else
      cp = $20
    End If
    ;NPrint "V = ",Chr$(cv)," ( ",cv
    ;NPrint "P = ",Chr$(cp)," ( ",cp
    ;a.s = Chr$(cv)
    succ.l=True
    If (cp>=@"a" AND cp<=@"z") OR (cp>=@"A" AND cp<=@"Z") OR (cp>=@"0" AND cp<=@"9") OR cp=@"_"
      succ=False
    End If
    If (cv>=@"a" AND cv<=@"z") OR (cv>=@"A" AND cv<=@"Z") OR (cv>=@"0" AND cv<=@"9") OR cv=@"_"
      succ=False
    End If
    If succ
    text.s = Left$(text.s,pos-1) + repl.s + Right$(text.s,FLen(text.s)-FLen(find.s)-pos+1)

    pos.l + FLen(repl.s)
    Else
      pos +1
    End If
  Else
    pos = FLen(text.s)
  End If

Wend

Function Return text.s
End Function




If dosA>=0 AND dosC>=0 AND dosH>=0
  a.s = LSet$(" ",file_GetLength{dosA})
  ;While file_eof{dosA}=0
    ;a.s = file_readline{dosA}   ; get us the line!
  ;Wend
  file_ReadMem{dosA,&a.s,file_GetLength{dosA}}


  ; remove If...Then
  pos.l = 0
  While pos<FLen(a.s)
    pos = findToken{a.s,"Then",pos+1}
    If pos=0
      pos = FLen(a.s)
    Else
      npos.l = Instr(a.s,"\\n",pos)
      a.s = Left$(a.s,pos-2) + "\\n"+Mid$(a.s,pos+3,npos-pos-3)+"\\nEndIf\\n" + Right$(a.s,FLen(a.s)-npos)
    End If
  Wend

  a.s = replace{a.s,"{","("}
  a.s = replace{a.s,"}",")"}


  ; get of EndIf, Wend, Next
  a.s = replaceToken{a.s,"EndIf","}"}
  a.s = replaceToken{a.s,"End If","}"}
  a.s = replaceToken{a.s,"Next","}"}
  a.s = replaceToken{a.s,"Wend","}"}
  a.s = replaceToken{a.s,"Else","} else {"}


  ; convert "If a ..." to "If (a) {..."
  pos.l = 0
  While pos<FLen(a.s)
    pos = findToken{a.s,"If",pos+1}
    If pos=0
      pos = FLen(a.s)
    Else
      npos.l = Instr(a.s,"\\n",pos+1)
      a.s = Left$(a.s,pos-1) + "if ("+Mid$(a.s,pos+3,npos-pos-3)+") {\\n" + Right$(a.s,FLen(a.s)-npos-1)
    End If
  Wend

  ; convert "While a ..." to "While (a) {..."
  pos.l = 0
  While pos<FLen(a.s)
    pos = findToken{a.s,"While",pos+1}
    If pos=0
      pos = FLen(a.s)
    Else
      npos.l = Instr(a.s,"\\n",pos)
      a.s = Left$(a.s,pos-1) + "while ("+Mid$(a.s,pos+6,npos-pos-3-3)+") {\\n" + Right$(a.s,FLen(a.s)-npos-1)
    End If
  Wend


  ; convert "For a=1 To x ..." to "For (a=1; a<x; a++) {..."
;  pos.l = 0
;  While pos<flen(a.s)
;    pos    = findToken{a.s,"For",pos+1}
;    If pos=0
;      pos = flen(a.s)
;    Else
;      tpos.l = findToken{a.s,"To",pos+1}
;      spos.l = findToken{a.s,"Step",pos+1}
;      npos.l = Instr(a.s,"\\n",pos)
;      If spos=0 OR spos>npos Then ste.s = "1"
;      Poke.b &a.s+pos+1,@"("
;      a.s = Left$(a.s,pos-1) + "( {\\n" + Right$(a.s,flen(a.s)-npos-1)
;    End If
;  Wend

  ;easy pre-cleanup!
  quoted.l=0
  comment.l=0
  For pos.l = 0 To FLen(a.s)-1
    c.b = Peek.b(&a.s+pos)
    Select c.b
      Case $22
        If comment=0
          quoted=1-quoted
        End If
      Case 10
        quoted=0
        comment=0
      Case @":"
        If quoted=0 AND comment=0
          Poke.b &a.s+pos,10
        End If
      Case @";"
        If quoted=0 AND comment=0
          comment=1
          a.s = Left$(a.s,pos) + "//" + Right$(a.s,FLen(a.s)-pos-1)
        End If
    End Select
  Next


  succ.l = file_WriteMem{dosC,&a.s,FLen(a.s)}

End If


If dosC>=0 Then file_Close{dosC}
If dosH>=0 Then file_Close{dosH}
If dosA>=0 Then file_Close{dosA}
End

