; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "RAM:"
; ExeFile         = "SimpleApp"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; ------------ -------------------------------------------
; StringBuffer    = 10000
; MakeSmallest    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 1
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8192
; RuntimeDebug    = 0
; DebugInfo       = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 1
; LabelSearch     = ""
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 50
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 50
; Max Anim        = 100
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 50
; /XTRA
; Simple App Template (Thilo Koehler 2007)

; control the compiler ...
; 1 : integer optimizer, exe will need 68020+ CPU
; 2 : floating point usage, exe will need 68881+ FPU
; 4 : allow AB3 compiler extentions
OPTIMIZE 5 ; = 1|4
 
; do some more strict syntax (e.g. declare variables),
; which is very useful for larger projects
SYNTAX 2

; we need to include the WBStartup Code
WBStartup

; get the frontmost screen as screen object 0 (use "WBToScreen 0" for workbench screen)
FindScreen 0

; give our WB App a version string
!version {"MyApp 1.0 (\\__DATE_GER__)"}

; open a simple window
WindowFlags.l = #WFLG_CLOSEGADGET|#WFLG_DRAGBAR|#WFLG_DEPTHGADGET|#WFLG_ACTIVATE|#WFLG_SIZEGADGET
Window 0,10,10,320,200,WindowFlags,"MyApp",1,0

exit.l = False
Repeat ; message loop, runs until we set exit=True
  idcmp.l = WaitEvent  ; put the app to sleep until we receive an event
  Select idcmp  ; check what kind of event happend (#IDCMP_...)
    Case #IDCMP_CLOSEWINDOW  ; someone hit the close gadget
      exit = True

    Case #IDCMP_MOUSEBUTTONS
      ; ... check mouse buttons

    Case #IDCMP_GADGETUP
      ; ... check Gadgets

    Case #IDCMP_MENUPICK
      ; ... check Menu Picks

    ; Case #IDCMP_... ; see Definition Browser for more event types

    Default
      ; we are not interested in this event, so we do nothing

  End Select
Until exit

End ; never forget "End", it closes the window for us and frees all resources


