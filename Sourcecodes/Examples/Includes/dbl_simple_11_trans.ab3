; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "//bin"
; ExeFile         = "dbl_simple_11_trans"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 11
; LabelSearch     = ""
; LabelRemark     = 140
; LabelAll        = 5
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; /XTRA
OPTIMIZE 5
SYNTAX 6

WBStartup

XINCLUDE "dbl_display.include.ab3"

NEWTYPE.ball
  x.f:y.f:xs.f:ys.f
End NEWTYPE

Dim List ball.ball(0)

speed.f = 0.2
scaler.f= 1
addvs.l = 16
addv.l  = 0
If AddItem(ball()) Then  ball()\x=100,160,1.0*speed,-0.1 *speed
If AddItem(ball()) Then  ball()\x=200,150,1.2*speed,-0.3 *speed
If AddItem(ball()) Then  ball()\x=300,140,1.4*speed,-0.2 *speed
If AddItem(ball()) Then  ball()\x=400,130,1.6*speed,-0.4 *speed

gfxpath.s = "/Data/"
succ.l = image_Load {2,gfxpath.s+"glass_big",$FF00FF,20}  : image_MidHandle {2}
succ   & image_Load {3,gfxpath.s+"explo_big"}             : image_MidHandle {3}
succ   & image_Load {1,gfxpath.s+"pattern"}               : image_MidHandle {1}

succ   & dbl_Init {"MyGame",#dbl_scr_BestModeID,640,480,24}
If succ
  dbl_BGBlitPattern{1,0,0,!dbl_GetWidth,!dbl_GetHeight}

  ; lets fade in ...

  For n.l=0 To 255 Step 2
    dbl_Flip{}
    dbl_Unqueue{}
    dbl_QBlit {1,!dbl_GetWidth/2-image_GetWidth{1}    ,!dbl_GetHeight/2,-1,-1,#image_blitmode_add,n}
    dbl_QBlit {1,!dbl_GetWidth/2+image_GetWidth{1}    ,!dbl_GetHeight/2,-1,-1,#image_blitmode_sub,n}
    dbl_QBlit {1,!dbl_GetWidth/2    ,!dbl_GetHeight/2,-1,-1,#image_blitmode_trans,n}

  Next

  ; and blit it permanently in the final state
  dbl_BGBlit {1,!dbl_GetWidth/2    ,!dbl_GetHeight/2,-1,1,1,#image_blitmode_opaque}
  dbl_BGBlit {1,!dbl_GetWidth/2-image_GetWidth{1},!dbl_GetHeight/2,-1,1,1,#image_blitmode_add,256}
  dbl_BGBlit {1,!dbl_GetWidth/2+image_GetWidth{1},!dbl_GetHeight/2,-1,1,1,#image_blitmode_sub,256}

  Repeat
    dbl_Flip{}
    dbl_Unqueue{}

    ; move balls
    ResetList ball()
    While NextItemFast(ball())
      ball()\ys + 0.01
      ball()\x+ball()\xs
      ball()\y+ball()\ys
      If ball()\x<0 OR ball()\x>!dbl_GetWidth  Then ball()\xs=-ball()\xs : ball()\x+ball()\xs
      If ball()\y<0 OR ball()\y>!dbl_GetHeight Then ball()\ys=-ball()\ys : ball()\y+ball()\ys
    Wend
    ResetList   ball()

    ; blit the opaque ball
    If NextItemFast(ball())
      dbl_QBlit {2,ball()\x,ball()\y,scaler,scaler,#image_blitmode_opaque}
      dbl_QPrint {"opaque",ball()\x,ball()\y+35,-1,-1,0}

    EndIf

    ; blit the transparent ball
    If NextItemFast(ball())
      dbl_QBlit {2,ball()\x,ball()\y,scaler,scaler,#image_blitmode_trans,128}
      dbl_QPrint {"transparent",ball()\x,ball()\y+35,-1,-1,0}
    EndIf


    ; blit the additive "explosion"
    If NextItemFast(ball())
      dbl_QBlit {3,ball()\x,ball()\y,scaler,scaler,#image_blitmode_add,addv}
      addv+addvs
      If addv>512 Then addvs=-8
      If addv< 40 Then addvs=64
      dbl_QPrint {"additive",ball()\x,ball()\y+35,-1,-1,0}
    EndIf

    ; blit the subtractive "shadow"
    If NextItemFast(ball())
      dbl_QBlit {3,ball()\x,ball()\y,scaler,-1,#image_blitmode_sub,128}
      dbl_QPrint {"subtractive",ball()\x,ball()\y+35,-1,-1,0}
    EndIf

  Until Event=#IDCMP_MOUSEBUTTONS
End If
End



