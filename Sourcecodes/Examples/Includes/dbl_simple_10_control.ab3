; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "//Bin"
; ExeFile         = "dbl_simple_10_control"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 2
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 11
; LabelSearch     = ""
; LabelRemark     = 140
; LabelAll        = 5
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; /XTRA
OPTIMIZE 5
SYNTAX 6

WBStartup

XINCLUDE "dbl_display.include.ab3"
XINCLUDE "intuition.include.ab3"   ; we want intui.include for input

NEWTYPE.ball
  x.f:y.f:xv.f:yv.f
End NEWTYPE

Dim List ball.ball(0)
If AddItem(ball()) Then  ball()\x=  0,200,1,-2
If AddItem(ball()) Then  ball()\x=  0,200,2,-1
If AddItem(ball()) Then  ball()\x=  0,200,1.5,-1.5

gfxpath.s = "/Data/"
succ.l = image_Load {2,gfxpath.s+"glass_big",$FF00FF,20}  : image_MidHandle {2}
succ   & image_Load {1,gfxpath.s+"pattern"}               : image_MidHandle {1}

succ   & dbl_Init {"MyGame",#dbl_scr_BestModeID,640,480,24}
breakme.l = False

If succ
  dbl_BGBlitPattern{1,0,0,!dbl_GetWidth,!dbl_GetHeight}

  ; print some instructions
  dbl_BGPrint {"Use arrow keys or mouse to move, ESC to quit !",10,10,1}
  x.f = !dbl_GetWidth/2
  y.f = !dbl_GetHeight/2
  a.s = "nothing pressed"

  Repeat
    dbl_Flip{}
    dbl_Unqueue{}

    ; Get IDCMP message based input
    ; Use this for events like pause, exit or mouse etc.
    Repeat
      idcmp.l = intui_GetEvent{}
      Select idcmp
        Case #IDCMP_MOUSEBUTTONS
          If !event_click ; Mouse clicked ?
            Select !event_mb  ; Which Mouse button
              Case 1
                a.s = "Mousebutton 1"
              Case 2
                a.s = "Mousebutton 2"
              Default
                a.s = "Cool, you have more than 2 mousebuttons!"
            End Select
          Else ; no, releaed !
            a.s = "nothing pressed"
          End If

        Case #IDCMP_MOUSEMOVE
          ; The mouse was moved, get new absolute coos on screen !
          x = !event_mx
          y = !event_my

        Case #IDCMP_RAWKEY
          ; Someone pressed or released a key
          If !event_keydown
            a.s = "Rawkey: $"+Right$(Hex$(!event_rawkey),2)+" => Vanillakey: \\22"+Chr$(!event_vanillakey)+"\\22"
          Else
            a.s = "nothing pressed"
          End If

          Select !event_vanillakey
            Case 27 ; ESC
              breakme = True
          End Select

      End Select
    Until idcmp=0

    ; Here we can ask every raw key at any time for pressed/released
    ; Use this to control your space ship
    If !intui_rawstatus{$4C} Then y-2   ; Up
    If !intui_rawstatus{$4D} Then y+2   ; Down
    If !intui_rawstatus{$4E} Then x+2   ; Left
    If !intui_rawstatus{$4F} Then x-2   ; Right

    ; the same with mouse buttons
    If !intui_joyb{1} Then  ; mouse button 1 pressed ?
    If !intui_joyb{2} Then  ; mouse button 2 pressed ?


    dbl_QBlit {2,x,y}     ;draw ball
    dbl_QPrint{a.s,x,y+20,1,-1,0}

  Until breakme
End If
End



