; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "ram:"
; ExeFile         = "Empty"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 100000
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 141
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8192
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 18
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 100
; Max GadgetList  = 100
; Max Shape       = 200
; Max Bank        = 1
; Max MenuList    = 100
; Max BlitzFont   = 1
; Max GTList      = 100
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 10
; Max Window      = 100
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 100
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;NoCli
INCLUDE "error.include.ab3"

SourceWindowIDCMPFlags.l = #IDCMP_INTUITICKS|#IDCMP_IDCMPUPDATE|#IDCMP_CLOSEWINDOW
SourceWindowIDCMPFlags | #IDCMP_MOUSEMOVE|#IDCMP_MOUSEBUTTONS|#IDCMP_NEWSIZE|#IDCMP_REFRESHWINDOW
SourceWindowWFlags.l = #WFLG_WBENCHWINDOW|#WFLG_ACTIVATE|#WFLG_GIMMEZEROZERO
SourceWindowWFlags   | #WFLG_SIZEBBOTTOM|#WFLG_SIZEBRIGHT|#WFLG_SIZEGADGET|#WFLG_CLOSEGADGET|#WFLG_DEPTHGADGET
SourceWindowWFlags   | #WFLG_DRAGBAR|#WFLG_REPORTMOUSE

WbToScreen 0
DefaultIDCMP SourceWindowIDCMPFlags
Window 0,10,10,320,240,SourceWindowWFlags,"Test",0,1
*win.Window = Peek.l(Addr Window(0))

_pointerData.l = AllocMem_(112,#MEMF_CLEAR + #MEMF_CHIP)
If _pointerData <>0
  xoffset.w = 0
  yoffset.w = 0

  gfxdata.l = ?pointerGfxdata
  Poke.l _pointerData,0            ; poke to empty words in sprite data used by OS
  adder.w = 4
  gfxdata + 4

  For i.b = 0 To 28 Step 2
    value.w = Peek.w(gfxdata + i)
    value1.w = NOT (value ROL 8)
    Poke.w _pointerData+adder,value1
    adder + 2

    value.w = Peek.w(gfxdata + 32 + i)
    value2.w = (value ROL 8)
    Poke.w _pointerData+adder,value2
    adder + 2

;    NPrint Hexb$(i/2), " " + Binw$(value1)
    NPrint Hexb$(i/2), " " + Binw$(value2)
  Next i
  SetPointer_ *win,_pointerData,16,16,xoffset,yoffset
  MouseWait
  FreeMem_ _pointerdata,112
Else
  NPrint "Could not allocate memory."
EndIf
End


pointerGfxdata:
  Dc.w  $0000,$0000

  Dc.w  $ff9f,$ff8f                       ;168 bytes
  Dc.w  $ff87,$ff83
  Dc.w  $ff81,$ff80
  Dc.w  $7f80,$3f80
  Dc.w  $1f80,$0f80
  Dc.w  $ff80,$7f88
  Dc.w  $7f98,$3ffc
  Dc.w  $3ffc,$fffe ;239ce

  Dc.w  $0000,$0020
  Dc.w  $0030,$0038
  Dc.w  $003c,$003e
  Dc.w  $003f,$803f ;239de
  Dc.w  $c03f,$e03f
  Dc.w  $003e,$0023
  Dc.w  $0003,$8001
  Dc.w  $8001,$0000 ;239ee

  Ds.w  8     ;239fe
  Dc.l  $00000008,$00800088,$08000808,$08300888 ;23a1e
  Dc.l  $0555044f,$00f000ff,$0f440f0f,$0ff00fff ;23a2e
  Dc.l  $0fff0000,$00000fff,$0f000fff,$0ff00000 ;23a3e
  Dc.l  $00f00f0f,$00ff000f,$0f000fff,$0ff00000 ;23a4e
  Ds.l  2     ;23a5e

pointerGfxdata2:
  Dc.w  $0000, $0000

  Dc.w  $0400, $07C0       ;64
  Dc.w  $0000, $07C0
  Dc.w  $0100, $0380
  Dc.w  $0000, $07E0
  Dc.w  $07C0, $1FF8
  Dc.w  $1FF0, $3FEC
  Dc.w  $3FF8, $7FDE
  Dc.w  $3FF8, $7FBE
  Dc.w  $7FFC, $FF7F
  Dc.w  $7EFC, $FFFF
  Dc.w  $7FFC, $FFFF
  Dc.w  $3FF8, $7FFE
  Dc.w  $3FF8, $7FFE
  Dc.w  $1FF0, $3FFC
  Dc.w  $07C0, $1FF8
  Dc.w  $0000, $07E0

  Dc.w  $0000, $0000
