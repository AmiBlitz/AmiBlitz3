; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = "Prog.exe"
; CreateIcon      = 0
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 2
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 32768
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 41
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelCase       = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max BlitzFont   = 4
; Max Window      = 20
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max TagList     = 5
; Max Database    = 16
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; Max ChunkyBuffer= 2
; /XTRA
; 2B3D DEMO 2
; 
; This is an attempt to create a 3d environment, with ability to walk around
; a bit. The background bitmap I created in a rush, so it probably looks that
; way. Nevertheless, it looks better than no bitmap at all in the background,
; and it serves as an example how to manipulate bitmaps using TouchPalette()
; function.
; 
; Now, if it only was synchrinized with 3d camera movement and scrolled
; around a bit...

INCLUDE "gorny.ab3"

LoadFont 0,"topaz.font",8        ;IT ALLOWS MORE INFO IN LESS SPACE

PLGLoadObject{"pyramid.plg",2.5}     ;LOAD SOME OBJECTS AND SPREAD THEM
PositionObject{-500,0,0}             ;AROUND LITTLE BIT
PLGLoadObject{"pyramid.plg",2.5}
PositionObject{650,0,0}
PLGLoadObject{"pyramid.plg",1}
PositionObject{400,0,400}
PLGLoadObject{"pyramid.plg",2}
PositionObject{-400,0,750}

PLGLoadObject{"cube.plg",2}
PositionObject{360,0,800}
PLGLoadObject{"cube.plg",2}
PositionObject{-300,0,400}
PLGLoadObject{"cube.plg",2}
PositionObject{-370,0,-400}
PLGLoadObject{"cube.plg",1.5}
PositionObject{400,0,-400}

MenuTitle 0,0,"About 2B3D"         ;PREPARE MENU FOR THE PROGRAM
  MenuItem 0,0,0,0,"Control "
  MenuItem 0,0,0,1,"Author  "
  MenuItem 0,0,0,2,"Quit "

Screen 0,0,0,320,200,5,0,"",1,2    ;PREPARE LO-RES SCREEN. THE HIGHER
Window 0,0,0,320,200,6144,"",1,2   ;RES THE SCREEN THE SLOWER PLAYBACK IS
SetMenu 0

Use IntuiFont 0

BitMap 0,320,200,5
BitMap 1,320,200,5
BitMap 2,320,200,4
LoadBitMap 2,"background.iff",0

db.b=0
done.b=False

Use BitMap db
BitMapOutput db
Cls

;FIX SCREENS PALETTE SO IT CONTAINS 16 SHADES OF GREY
;(REGISTERS 0-15)

Use Palette 0                     ;USE LOADED BITMAPS PALETTE, BUT...

color1.rgbtype\r=0,0,0            ;USE THE REMAINDER OF THE PALETTE
color2.rgbtype\r=15,0,0           ;AS A SHADING FOR THE POLYGONS.
TouchPalette{16,31,color1,color2} ;REGISTERS 16-31 WILL BE USED
ObjectsUseColor{16}               ;NOW 16 IS A BASE COLOR FOR SHADES
Display3D{320,200,300}            ;MUST BE CALLED BEFORE ANY 3D OPERATIONS

;  THE SCREEN OPENED HAS 5 BITPLANES WHICH GIVES IT 32 COLORS,
;  REGISTERS 0 - 31.
;
;  THE IFF USED IS ONLY A 16 COLOR PICTURE (0-15). THAT LEAVES US
;  WITH REMAINING 16 REGISTERS OF THE SCREEN PALETTE FOR USE AS
;  SHADES OF SOME COLOR WITH WHICH TO RENDER POLYGONS.
;
;   ___________________________________________________________
;  | |          | | |           | | |                        | |
;  |_|__________|_|_|___________|_|_|________________________|_|
;
;   0            7 8            15 16                         31
;
;        IFF's           IFF's       TouchPalette{16,31,C1,C2}
;

Frustum{500,16000}            ;CHANGE SOME SETTINGS
ClipMode{#ZPLANE}             ;EITHER #FRUSTUM OR #ZPLANE
AmbientLight{2}               ;ANYWHERE BETWEEN 0 AND 15
PositionCamera{0,150,-1000}   ;CAMERA AT SOME HEIGHT OFF THE GROUND

anglex.w=0                    ;INITIAL VIEWING ANGLES
angley.w=0                    ;AND MOVING SPEED
anglez.w=0
speed=100                     ;CHANGE THIS TO SOME OTHER VALUE
                              ;AMIGA I WAS USING WAS 68000 1.3 WB
NewView{}                     ;SO IT TOOK FOREVER TO MOVE AROUND
CopyBitMap 2,db
PaintFrame{}
BitMaptoWindow db,0

Repeat                        ;MAIN LOOP
  ev.l=Event
  If ev=$400;keypress         ;CHECK FOR KEYBOARD ACTIVITY
    keypress.s=Inkey$
    Select RawKey
      Case $45 ;ESC
        done=True
      Case $4c ;up
        MoveForward{speed}
      Case $4d ;down
        MoveForward{-speed}
      Case $4f ;left
        angley-2:If angley<0 Then angley=360
        ViewAngle{anglex, angley, anglez}
      Case $4e ;right
        angley+2:If angley>360 Then angley=0
        ViewAngle{anglex, angley, anglez}
      Case $01 ;"1"
        speed-10:If speed<10 Then speed=10
      Case $02 ;"2"
        speed+10
      Case $10 ;"Q"
        MoveUp{speed}
      Case $20 ;"A"
        MoveDown{speed}
    End Select
    NewView{}                 ;VIEW COULD HAVE POSSIBLY CHANGED!
    db=1-db                   ;SWITCH BITMAPS
    Use BitMap db
    CopyBitMap 2,db           ;USE THE BACKGROUND BITMAP INSTEAD CLS
    PaintFrame{}              ;RENDER NEW VIEW TO A CURRENT BITMAP
    BitMaptoWindow db,0       ;DISPLAY RESULTING BITMAP IMAGE
  EndIf

If ev=$100 ;menu
  Select ItemHit
    Case 0
      Window 1,20,20,180,120,4106," 2B3D HELP ",1,2
      WColour 12,0
      NPrint ""
      NPrint " Use arrow keys to move"
      NPrint " forward, back, and turns:"
      NPrint ""
      NPrint " LEFT, RIGHT, UP, and DOWN"
      NPrint ""
      NPrint ""
      NPrint " '1' LOOSE SPEED"
      NPrint " '2' SPEED UP"
      NPrint " 'Q' GO UP"
      NPrint " 'A' GO DOWN"
      NPrint " ESC TO QUIT"
      NPrint ""
      Repeat: av.l=WaitEvent:Until av=512
      Free Window 1:Use Window 0
    Case 1
      Window 2,20,20,165,100,4106,"",1,2
      WColour 12,0
      NPrint ""
      NPrint "           2B3D"
      NPrint ""
      NPrint "        Version 0.9"
      NPrint ""
      NPrint " 3D GRAPHICS MINI-LIBRARY"
      NPrint "    FOR BLITZ BASIC II"
      NPrint ""
      NPrint "       Maciej Gorny"
      NPrint "  gorny@elvis.rowan.edu"
      Repeat: cv.l=WaitEvent:Until cv=512
      Free Window 2:Use Window 0
    Case 2
      done=True
  End Select
EndIf
Until done
End














