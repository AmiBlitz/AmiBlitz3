; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "//Bin"
; ExeFile         = "dbl_simple_06_wall"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 3
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1
; CursorColumn    = 11
; LabelSearch     = ""
; LabelRemark     = 140
; LabelAll        = 5
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 20
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 20
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; /XTRA
OPTIMIZE 5
SYNTAX 6

WBStartup

XINCLUDE "dbl_display.include.ab3"

NEWTYPE.ball
  x.f:y.f:xs.f:ys.f
End NEWTYPE

Dim List ball.ball(0)
If AddItem(ball()) Then  ball()\x=  10,100,1,3
If AddItem(ball()) Then  ball()\x=  10,100,2,2
If AddItem(ball()) Then  ball()\x=  10,100,1.5,2.5

gfxpath.s = "/Data/"
succ.l = image_Load {2,gfxpath.s+"glass_big",$FF00FF,20}  : image_MidHandle {2}
succ   & image_Load {1,gfxpath.s+"pattern"}
succ   & image_Load {3,gfxpath.s+"foreground",$FF00FF,5}  : image_MidHandle {3}

succ   & dbl_Init {"MyGame",#dbl_scr_BestModeID,640,480,24}

If succ
  ; blit the background pattern in window
  dbl_BGBlitPattern{1,0,0,!dbl_GetWidth,!dbl_GetHeight}
  ; copy background to the collision bitmap
  dbl_InitCollision{}
  ; everything we blit from now is different to the collision bitmap
  ; and will cause dbl_Hit{} = True
  ; so draw our foreground
  dbl_BGBlit {3,!dbl_GetWidth/2,!dbl_GetHeight/2}

  Repeat
    dbl_Flip{}
    dbl_Unqueue{}

    ; move balls (draw em later, because otherwise they will cause
    ; collision too !!!
    ResetList ball()
    While NextItemFast(ball())
      ox.f = ball()\x  ; remember our last coos
      oy.f = ball()\y

      ball()\ys + 0.1
      ball()\x+ball()\xs
      ball()\y+ball()\ys

      If ball()\x<0 OR ball()\x>!dbl_GetWidth  Then ball()\x=ox :ball()\xs=-ball()\xs
      If ball()\y<0 OR ball()\y>!dbl_GetHeight Then ball()\y=oy :ball()\ys=-ball()\ys

      ; We hit something ?
      If dbl_Hit{ball()\x,ball()\y}
        ball()\x= ox  ; first go back to our last coos
        ball()\y= oy  ; for safety reasons

        If dbl_Hit{ball()\x+ball()\xs,ball()\y} = False  ; check horizontal...
          ball()\ys=-ball()\ys
        Else

          If dbl_Hit{ball()\x,ball()\y+ball()\ys} = False ; check vertical
            ball()\xs=-ball()\xs
          Else
            ball()\xs=-ball()\xs  ; no way, we have to bounce 180deg back!
            ball()\ys=-ball()\ys
          End If
        End If
        ball()\x+ball()\xs
        ball()\y+ball()\ys

      End If

    Wend

    ; now draw the balls
    ResetList ball()
    While NextItemFast(ball())
      dbl_QBlit {2,ball()\x,ball()\y}
    Wend

  Until Event=#IDCMP_MOUSEBUTTONS
End If
End



