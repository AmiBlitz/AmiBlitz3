; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 15
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 10
; CursorColumn    = 32
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelCase       = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max BlitzFont   = 4
; Max Window      = 20
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max TagList     = 5
; Max Database    = 16
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;
;This dinky little example shows a technique by which
;map based horizontal scrolling may be achieved.
;
;Once running, a joystick in joyport 1 controls scrolling.
;hit joystick button to quit...
;

BitMap 0,256,12,1
LoadBitMap 0,"//Data/scrollmap"

Dim m(255,63)

For x=0 To 255
For y=0 To 11
m(x,y)=Point(x,y)
Next:Next

LoadShape 0,"//Data/block",0

BLITZ

w=704

Statement b{s,x,y}
If s Then BlitMode CookieMode Else BlitMode EraseMode
Blit 0,x,y
End Statement

Statement c{s,x,y}
If s Then BlitMode CookieMode:Blit 0,x,y
End Statement

BitMap 0,w,192,3
;Boxf 16,0,351,191,2
BitMapOutput 0

For y=0 To 11
;
For x=0 To 20
c{m(x,y),x LSL 4,y LSL 4}
c{m(x,y),352+x LSL 4,y LSL 4}
Next
;
Next

InitCopList 0,44,192,$13,8,8,0
DisplayPalette 0,0
CreateDisplay 0

sx=0  ;scroll x
mx=0  ;map x
;
oxs=0:xs=0

a=.5    ;acceleration
f=.25  ;friction

g=15:ga=-.5

While Joyb(1)=0 AND RawStatus($45)=0
  ;
  VWait
  ;
  PalRGB 0,4,0,g,0:g+ga:If g>=16 OR g<8 Then g-ga:ga=-ga
  ;
  DisplayBitMap 0,0,sx,sy
  DisplayPalette 0,0
  ;
  ox2=x2
  oy2=y2
  oxs=xs
  ;
  x2=Int(mx LSR 4)
  y2=Int(my LSR 4)
  ;
  If Joyx(1)=-1 OR RawStatus($4f) Then xs-a:If xs<-16 Then xs=-16
  If Joyx(1)=1 OR RawStatus($4e) Then xs+a:If xs>16 Then xs=16
  If Joyy(1) OR RawStatus($40) Then xs=0
  ;
  If xs>0 Then xs-f:If xs<0 Then xs=0
  If xs<0 Then xs+f:If xs>0 Then xs=0
  ;
  If Joyy(1) Then xs=0
  ;
  ;
  If x2<>ox2 OR Sgn(oxs)<>Sgn(xs)
    If xs>0
      sx2=sx AND $fff0
      For y=0 To 11
      b{m(x2+21 AND 255,y),sx2+336,y LSL 4}
      b{m(x2+21 AND 255,y),sx2-16,y LSL 4}
      Next
    EndIf
    If xs<0
      sx2=sx AND $fff0
      For y=0 To 11
      b{m(x2-1 AND 255,y),sx2-16,y LSL 4}
      b{m(x2-1 AND 255,y),sx2+336,y LSL 4}
      Next
    EndIf
  EndIf
  ;
  mx=QWrap(mx+xs,0,4096)
  sx=QWrap(sx+xs,16,368)
  ;
  ;Poke.w $dff180,8
  ;
Wend

End

