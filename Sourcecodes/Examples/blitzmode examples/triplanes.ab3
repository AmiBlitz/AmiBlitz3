; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = ""
; ExeFile         = ""
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 0
; Version         = 0.0.0
; NumberOfBuilds  = 4
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 129
; CursorColumn    = 24
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelCase       = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Shape       = 100
; Max Bank        = 5
; Max MenuList    = 5
; Max GTList      = 20
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 5
; Max BlitzFont   = 4
; Max Window      = 20
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max TagList     = 5
; Max Database    = 16
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
;
; Another display lib example that uses a big full overscan
; display and the sneaky display trick, so it may go wrong.
; The weirdo colours are set up by the copper
;

Dim coslup1.q(720),sinlup1.q(720)
Dim coslup2.q(720),sinlup2.q(720)

For n = 0 To 720
  ang1.f = n*Pi/180
  ang2.f = n*Pi/90
  coslup1(n) = Cos(ang2) * 32
  sinlup1(n) = Sin(ang2) * 32
  coslup2(n) = Cos(ang1) * 32
  sinlup2(n) = Sin(ang1) * 32
Next

BitMap 0,480,500,3
BitMap 1,480,500,3
BitPlanesBitMap 0,2,$01:BitPlanesBitMap 1,3,$01
BitPlanesBitMap 0,4,$02:BitPlanesBitMap 1,5,$02
BitPlanesBitMap 0,6,$04:BitPlanesBitMap 1,7,$04

InitPalette 0,8
InitShape 0,32,32,1

InitCopList 0,34,270,$0013,8,8,-7

;
; big fat overscan display
;
DisplayAdjust 0,2,-8,0,-16,0

BLITZ

Gosub initpal
Gosub initshp
Gosub initbmp
CreateDisplay 0:DisplayPalette 0,0

Repeat
  VWait
  t+1:If t>359 Then t=0
  DisplayBitMap 0,db,fx,fy,db,bx,by

  fx=64+sinlup2(t)                      ; move first two layers
  fy=64+coslup1(t)                      ;
  bx=64+sinlup1(t)                      ;
  by=64+coslup2(t)                      ;

  db=1-db:Use BitMap 4+db               ; move and create third
  yy=32+coslup2(t)                      ; layer
  BlockScroll 16,0,432,345,0,yy,2+db    ;

;  Poke.w $dff180,$fff
Until Joyb(0)<>0

End

.initpal
  For n=0 To 136 Step 9                 ; copper colours on
    r.w=QLimit(n/9,0,14)                ; colour registers
    DisplayRGB 0,1,n,1+r,0,0,0          ; 1-7
  Next                                  ;
  For n=137 To 255 Step 9
    r.w=QLimit((255-n)/9,0,14)
    DisplayRGB 0,1,n,1+r,0,0,0
  Next
  For n=0 To 136 Step 9
    g.w=QLimit(n/9,0,14)
    DisplayRGB 0,2,n,0,1+g,0,1
  Next
  For n=137 To 255 Step 9
    g.w=QLimit((255-n)/9,0,14)
    DisplayRGB 0,2,n,0,1+g,0,1
  Next
  For n=0 To 136 Step 9
    r.w=QLimit(n/9,0,14)
    g.w=QLimit(n/9,0,14)
    DisplayRGB 0,3,n,1+r,1+g,0,2
  Next
  For n=137 To 255 Step 9
    r.w=QLimit((255-n)/9,0,14)
    g.w=QLimit((255-n)/9,0,14)
    DisplayRGB 0,3,n,1+r,1+g,0,2
  Next
  For n=0 To 136 Step 9
    b.w=QLimit(n/9,0,14)
    DisplayRGB 0,4,n,0,0,1+b,3
  Next
  For n=137 To 255 Step 9
    b.w=QLimit((255-n)/9,0,14)
    DisplayRGB 0,4,n,0,0,1+b,3
  Next
  For n=0 To 136 Step 9
    r.w=QLimit(n/9,0,14)
    b.w=QLimit(n/9,0,14)
    DisplayRGB 0,5,n,1+r,0,1+b,4
  Next
  For n=137 To 255 Step 9
    r.w=QLimit((255-n)/9,0,14)
    b.w=QLimit((255-n)/9,0,14)
    DisplayRGB 0,5,n,1+r,0,1+b,4
  Next
  For n=0 To 136 Step 9
    g.w=QLimit(n/9,0,14)
    b.w=QLimit(n/9,0,14)
    DisplayRGB 0,6,n,0,1+g,1+b,5
  Next
  For n=137 To 255 Step 9
    g.w=QLimit((255-n)/9,0,14)
    b.w=QLimit((255-n)/9,0,14)
    DisplayRGB 0,6,n,0,1+g,1+b,5
  Next
  For n=0 To 136 Step 9
    r.w=QLimit(n/9,0,14)
    g.w=QLimit(n/9,0,14)
    b.w=QLimit(n/9,0,14)
    DisplayRGB 0,7,n,1+r,1+g,1+b,6
  Next
  For n=137 To 255 Step 9
    r.w=QLimit((255-n)/9,0,14)
    g.w=QLimit((255-n)/9,0,14)
    b.w=QLimit((255-n)/9,0,14)
    DisplayRGB 0,7,n,1+r,1+g,1+b,6
  Next
  For n=17 To 31:PalRGB 0,n,15,15,15:Next
Return

.initshp
  Use BitMap 2:Cls 1
  Boxf 5,5,27,27,0
  GetaShape 0,0,0,32,32
  Cls
Return

.initbmp
  For bmp=0 To 1
    Use BitMap bmp:Cls
    For x=0 To 13
      For y=0 To 13
        Block 0,x LSL 5,y LSL 5
      Next
    Next
  Next
Return
