; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram:"
; ExeFile         = "test"
; CreateIcon      = 1
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 3
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 1
; InterruptCheck  = 0
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 5
; CursorColumn    = 11
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; Max IconInfo    = 1
; Max NChunky     = 20
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; /XTRA
;DEBUG
optimize 5
Syntax 4
DEFTYPE .l

WBStartup
FindScreen(0)
;Screen 1,11
i$="arg0":WZListAdd lv1.List,"test"
WZWindow 1,?SurfaceData,250    ;surface for Window
WZEnable 15
a$=WZGetString ("name")
WZPrint "lst1",s.b,lv1.List
 If ChDir ("dh0:")
  While MoreEntries
  ;no num For sorted List
  WZListAdd lv1.List,EntryName$
  Wend
End If
WZPrint "lst1",1,lv1;Before attach list you must call wzlistadd before
                     ;or you get Enforcer Hits
WZPrint "lst1",1,0 ;set to 0 when use of wzlistadd or wzlistremove
WZTags #WENTRYA_TextStyle,#FSF_BOLD,#WENTRYA_TextPen,2
WZListAdd lv1.List,"Colour Text",5
WZListRemove lv1,15
WZListAdd lv1,"test2",15
x.l=WZListAddr (lv1,4)
WZPrint "lst1",10,lv1,10
;WZPrint "sl1",1,-100,100
WZMenuSet "togg1",0
ret.l = WZMenuGet ("togg1")
WTitle Str$(ret)
Repeat:
ev.l=WaitEvent
Use Window EventWindow
WLocate 10,12
Format "##############"
Select EventWindow
 Case 1:               ;message of first window
  Select ev
      Case #IDCMP_CLOSEWINDOW:exit=1
      Case $400000 :Print EventQualifier
      Case #IDCMP_MENUPICK
        Select WZMenuName
            Case "quit": exit=1
            Case "2": exit=1
        End Select
      Case #IDCMP_IDCMPUPDATE
          Select WZGadName
            Case "but2":
               WZListRemove child1.List
               WZListRemove child2.List
               WZListRemove maintree.List
               WZWindow 2,?SurfaceData,200:
               tree1.l=WZListAddTree (maintree.List,"meine",0,-1,child1) ;set child 1 as child
               WZTags #WENTRYA_TreePen,2    ;set one entry To white
               WZListAddTree child1.List,"child1",tree1 ;is a child of tree1
               tree2.l=WZListAddTree (child1     ,"child2",tree1,-1,child2.List)
               WZListAddTree child2.List,"child2_1",tree2,-1,0,$12345678
               WZListAddTree child2.List,"child2_2",tree2
               WZListAddTree child2.List,"child2_3",tree2
               WZListAddTree maintree.List,"mainnode",0,-2
               WZPrint "hr1",0,maintree
                    ;Use Window EventWindow
            Case "name":name$=WZInputstr:WZPrint "argg1",&name$
            Case "Intgad1":sl=WZInput:WZPrint "sl1",sl
            Case "sl1":sl=WZInput
            Case "lst1":
                  var2$=WZListString(lv1,WZInput)
                  WZPrint "argg1",&var2$,WZDoubleClick
          End Select
     Case #IDCMP_MENUHELP:
     Case #IDCMP_GADGETHELP:
           WTitle WZGadHelp
           ;a$=WZGadgetConfig (WZHandle,WZGadAddr("argg1"))
           ;WTitle a$
     Case #IDCMP_MOUSEMOVE:
    End Select
  Case 2:             ;message of second window
      Select ev
      Case #IDCMP_CLOSEWINDOW:WZCloseWindow 2:
      Case $400000 :
      Case #IDCMP_MENUPICK
        Select WZMenuName
        End Select
      Case #IDCMP_IDCMPUPDATE
          Select WZGadName
          Case "hr1"
                           ;hierachy Gadget
          node.l=WZGetNode(maintree)     ;get the current item
          ;WTitle WZListString(node,0)+"  "+Hex$(WZListData(node,0))+" "+Str$(WZDoubleClick)
          End Select
     Case #IDCMP_MENUHELP:
     Case #IDCMP_GADGETHELP:
     Case #IDCMP_MOUSEMOVE:
    End Select
 End Select
Until exit=1
End
SurfaceData: IncBin "wizard_test.wizard"
SurfaceDataEnd:

