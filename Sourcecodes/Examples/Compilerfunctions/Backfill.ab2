WBStartup
; --
; -- this examples shows, how you can realize an own Backfillhook for windows
; -- using the WindowBackFillHook-function


; -- put following lines  at begin of your program
; --------------------------------------------------------------------------------
!initasm
!basic
optimize 7
Syntax 2
XINCLUDE "image.include.bb2"
RunErrsOff
Statement winbackfill {image.l,x.l,y.l,x2.l,y2.l,xoffset.l,yoffset.l,destbitmap_ptr.l}
SHARED imagedat()
USEPATH imagedat(image)
If \bitmap_ptr=False Then image_InitBitMap {image}
If \bitmap_ptr><False AND destbitmap_ptr
  dx.l  = x
  px.l  = xoffset MOD \img_width
  pxs.l = \img_width-px
  x2+1
  y2+1
  While dx<x2
    If dx+pxs>x2 Then pxs = x2-dx
    dy.l  = y
    py.l  = yoffset MOD \img_height
    pys.l = \img_height-py

    While dy<y2
      If dy+pys>y2 Then pys = y2-dy
      BltBitMap_ \bitmap_ptr,px,py,destbitmap_ptr,dx,dy,pxs,pys,$c0,$ff,0
      dy+pys
      pys = \img_height
      py = 0
    Wend
    dx+pxs
    pxs = \img_width
    px = 0
  Wend
End If
End Statement

DEFTYPE.w _bf_x1,_bf_y1,_bf_x2,_bf_y2
DEFTYPE.l _bf_layer,_bf_rp,_bf_offx,_bf_offy
BRA begin
backfillfunc:
!basica7
MOVE.l a2,_bf_rp@(a5)
MOVE.l  0(a1),_bf_layer@(a5)
MOVE.w  4(a1),_bf_x1@(a5)
MOVE.w  6(a1),_bf_y1@(a5)
MOVE.w  8(a1),_bf_x2@(a5)
MOVE.w 10(a1),_bf_y2@(a5)
MOVE.l 12(a1),_bf_offx@(a5)
MOVE.l 16(a1),_bf_offy@(a5)
*layer.Layer = _bf_layer.l
*rp.RastPort = _bf_rp.l
If image_IsUsed{0}
  image_winbackfill {0,_bf_x1,_bf_y1,_bf_x2,_bf_y2,_bf_offx,_bf_offy,*rp\BitMap}
  image_bli
End If
!asma7
RTS
.begin:
; ------------------------------------------------------------------------------------
RunErrsOn
; -- here comes the user program

ret.l = image_Load{0,"blitz3:sourcecodes/Examples/Data/pattern"}
If ret Then WindowBackFillHook ?backfillfunc ;only if pic is found or it crash badly
FindScreen (0)
Stop
foo.l = GTButton(0,1,20,20,100,15,"Normal",#PLACETEXT_IN)
Window 0,20,100,200,280,$1004f,"",0,1
AttachGTList 0,0
Repeat
  ev.l = WaitEvent
Until ev=#IDCMP_CLOSEWINDOW
End


