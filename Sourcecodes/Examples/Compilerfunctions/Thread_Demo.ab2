; --
; -- this example shows how to realize threads with AmiBlitz
; --

;DEBUG              ;debug program standalone if aktivate
;WARNING !!!!!  all source is add from the includes in binary
#debug_subtask=1    ;choose here if debug sub (1) or maintask  (0)
WBStartup
MOVE.l a5,globalvars
optimize 7

.test
al.l = 2 : a$ = "test"
NEWTYPE .fputest
  single.f
  double.d
  double2.d
End NEWTYPE
a.d = b.d * c.d
*process.Process = CreateNewProc_(Tags(#NP_Entry,?newtask,#NP_Name,"a second task",@@
                                       #NP_Priority,0,#NP_StackSize,40000,#TAG_DONE,0))
NPrint test.fputest\double2
test.fputest\double2=$10000000

Repeat
  Delay_ 1
Until aglob = 1
End

globalvars Dc.l 0
newtask
CNIF #__debug
CNIF #debug_subtask=1   ;important must be the first command of the new task
Dc.w $7001
SysJsr $d50a            ;this set the debugger to current task
                        ;if set a stop in other task
                        ;the task that is activate for debug is stop
                        ;stackcheck runtimecheck now work with this task
                        ;NOTE: dont press close button of debugger
                        ;press run to quit the task normal or reboot
CELSE
Dc.w $7000
SysJsr $d50a            ;this set this task to nondebug
                        ;note stackcheck runtimecheck now dont work
CEND
CEND

MOVE.l globalvars,a5

Function local{al}      ;
  x.l = v.l
  Function Return x
End Function

al = x.l + al.l
Delay_ 1
Delay_ 1
Stop
ret.l = local{al}
aglob = 1
RTS
