; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram_Disk:"
; ExeFile         = "test"
; CreateIcon      = 1
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 1
; DebugInfo       = 1
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 1
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 2
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = -1
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
; --
; -- this example shows how to realize threads with AmiBlitz
; --

;DEBUG              ;debug program standalone if aktivate
;WARNING !!!!!  all source is add from the includes in binary
#debug_subtask=1    ;choose here if debug sub (1) or maintask  (0)
WBStartup
MOVE.l a5,globalvars
OPTIMIZE 7

.test
al.l = 2 : a$ = "test"
NEWTYPE .fputest
  single.f
  double.d
  double2.d
End NEWTYPE
a.d = b.d * c.d
*process.Process = CreateNewProc_(Tags(#NP_Entry,?newtask,#NP_Name,"a second task",@@
                                       #NP_Priority,0,#NP_StackSize,40000,#TAG_DONE,0))
NPrint test.fputest\double2
test.fputest\double2=$10000000

Repeat
  Delay_ 1
Until aglob = 1
End

globalvars Dc.l 0
newtask
CNIF #__debug
CNIF #debug_subtask=1   ;important must be the first command of the new task
Dc.w $7001
SysJsr $d50a            ;this set the debugger to current task
                        ;if set a stop in other task
                        ;the task that is activate for debug is stop
                        ;stackcheck runtimecheck now work with this task
                        ;NOTE: dont press close button of debugger
                        ;press run to quit the task normal or reboot
CELSE
Dc.w $7000
SysJsr $d50a            ;this set this task to nondebug
                        ;note stackcheck runtimecheck now dont work
CEND
CEND

MOVE.l globalvars,a5

Function local{al}      ;
  x.l = v.l
  Function Return x
End Function

al = x.l + al.l
Delay_ 1
Delay_ 1
Stop
ret.l = local{al}
aglob = 1
RTS
