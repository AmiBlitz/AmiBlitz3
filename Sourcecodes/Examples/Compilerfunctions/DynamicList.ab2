; -- this example shows the improved dynamic-list handling of AB
; --
; -- the list can increase entries as much as you want
; -- If you want to free the mem on runtime you must
; -- call a dim list test(0)
; -- before loading a new File etc.

NEWTYPE .test
  b.l
  c.s
  d.b[32754]
  a.l
End NEWTYPE

Statement test2{}
  Dim List te.test(0)
  For i=1 To 20
    AddLast te()
  Next
End Statement

For i.l=1 To 10
  test2{}
Next
a$="abcdefg"
Dim List test.test(0) ;0 is used to show blitz that we want it dynamic

For i.l= 1 To 1000
  AddLast test()
  test()\a=i
  test()\c="Element "
  If i=10
    PushItem test()
  EndIf
  If i=12
   PushItem test()
  End If
  ;NPrint test()\c,test()\a
Next

LastItem test()

For i= 1 To 1000
  NPrint test()\c,test()\a
  PrevItem test()
Next

PopItem test()             ;to test pushitem and popitem
  NPrint test()\c,test()\a
 PopItem test()             ;to test pushitem and popitem
  NPrint test()\c,test()\a
  Dim te.l(10)
For i= 1 To 10000:
If AddLast (test())=0
a=Request ("out of mem",Str$(i)+" Items reserved","ok")
Pop For:Goto out
End If
Next
out
Dim List test.test(0)      ;free mem
AddLast test()
AddLast test()
AddLast test()

MouseWait

