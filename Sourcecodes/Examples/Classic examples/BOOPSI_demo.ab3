; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "ram:"
; ExeFile         = "Empty"
; CreateIcon      = 0
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 100000
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 47
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8192
; RuntimeDebug    = 1
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 36
; CursorColumn    = 66
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 100
; Max GadgetList  = 100
; Max Shape       = 200
; Max Bank        = 1
; Max MenuList    = 100
; Max GTList      = 100
; Max Palette     = 4
; Max BitMap      = 10
; Max Screen      = 5
; Max IntuiFont   = 10
; Max BlitzFont   = 1
; Max Window      = 100
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 100
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 5
; Max Sound       = 10
; Max MedModule   = 8
; Max Buffer      = 10
; Max Queue       = 10
; Max Sprite      = 20
; Max Module      = 5
; Max Slice       = 10
; Max Page        = 4
; Max CopList     = 10
; Max PTModule    = 5
; Max Anim        = 10
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 5
; Max XBSound     = 10
; /XTRA
WBStartup : NoCli : SYNTAX 4

XINCLUDE "error.include.ab3"

;-- get the current screen
WbToScreen 0
*scr.Screen = LockPubScreen_(0)

;-- get drawinfodata for some gadgets
*drinfo.DrawInfo = GetScreenDrawInfo_ (*scr)
gadtop.l = *scr\Font\ta_YSize + 10

;-- create the window
WindowFlags.l = #WFLG_CLOSEGADGET|#WFLG_DEPTHGADGET|#WFLG_DRAGBAR
WindowFlags   | #WFLG_SIZEBBOTTOM|#WFLG_SIZEBRIGHT|#WFLG_SIZEGADGET
WindowTags 0,WindowFlags,"Testwindow",Tags(#WA_Height,gadtop+21*4,@@
                                           #WA_Width,400,@@
                                           #WA_IDCMP,#IDCMP_CLOSEWINDOW|#IDCMP_GADGETUP|#IDCMP_INTUITICKS,#TAG_DONE,0)

;-- create the gadget
*string.Gadget = NewObjectA_(0,"strgclass",Tags(#GA_ID,2,@@
                                                #GA_Immediate,True,@@
                                                #GA_RelVerify,True,@@
                                                #GA_Top,gadtop,@@
                                                #GA_Left,10,@@
                                                #GA_Width,24,@@
                                                #GA_Height,12,@@
                                                #STRINGA_MaxChars,3,@@
                                                #STRINGA_LongVal,25,@@
                                                #STRINGA_Justification,2,@@
                                                #TAG_DONE,0))

label.s = "Hallo"+Chr$(0)
*mybutton.Gadget = NewObjectA_(0,"buttongclass",Tags(#GA_ID, 3,@@
                                                #GA_Previous,*string, @@
                                                #GA_Top,gadtop,@@
                                                #GA_Left,20,@@
                                                #GA_Width,50,@@
                                                #GA_Height,18,@@
                                                #GA_Text,&label,@@
                                                #GA_Immediate,True,@@
                                                #TAG_DONE,0))
;SetAttrsA_ *mybutton,Tags(#GA_Left,50,#GA_Width,50,#GA_Height,18,#TAG_DONE,0)

If *mybutton = 0
  error{"Could not init gadget."}
EndIf

;-- add the gadget to the window and refresh
*win.Window = Peek.l(Addr Window(0))
AddGList_ *win,*string,0,-1,0
RefreshGList_ *string,*win,0,-1


;-- wait for close window event
Repeat
  ev.l = WaitEvent
Until ev = #IDCMP_CLOSEWINDOW

;-- free gadgets and objects
RemoveGList_ *win,*string,-1
DisposeObject_ *string
CloseWindow 0
FreeScreenDrawInfo_ *scr,*drinfo
UnlockPubScreen_ 0,*scr
End
