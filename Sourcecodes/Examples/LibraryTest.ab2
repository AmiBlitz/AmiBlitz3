; test.include.bb2 automatically generated by FD2Include (Thilo Koehler)

optimize 7
Syntax 2
WBStartup
XINCLUDE "error.include.bb2"

; Library offsets:
#_LVO_TESTBASE_AddTwoIntegers = -30
#_LVO_TESTBASE_SubTwoIntegers = -36

SHARED *_TestBase.Library

; Helper Macros:
Macro __TestBase_SaveRegs
MOVE.l a4,-(a7) : MOVE.l a5,-(a7) : MOVE.l a6,-(a7) : MOVE.l d7,-(a7)
End Macro

Macro __TestBase_RestoreRegs
MOVE.l (a7)+,d7 : MOVE.l (a7)+,a6 : MOVE.l (a7)+,a5 : MOVE.l (a7)+,a4
End Macro


; Wrapper Macros:
Macro test_AddTwoIntegers;{ret.l,a,b}
!__TestBase_SaveRegs
GetReg d0,`2
GetReg d1,`3
GetReg a6,*_TestBase
JSR _LVO_TESTBASE_AddTwoIntegers(a6)
!__TestBase_RestoreRegs
`1 = PutD0
End Macro

Macro test_SubTwoIntegers;{ret.l,a,b}
!__TestBase_SaveRegs
GetReg d0,`2
GetReg d1,`3
GetReg a6,*_TestBase
JSR _LVO_TESTBASE_SubTwoIntegers(a6)
!__TestBase_RestoreRegs
`1 = PutD0
End Macro


; Open/Close Library:
Function.l test_OpenLib{@minVersion.l}
If (*_TestBase)
  If (minVersion<=*_TestBase\lib_Version) Then Function Return *_TestBase
  CloseLibrary_ *_TestBase : *_TestBase = 0
End If
If minVersion<0 Then minVersion = 0
*_TestBase = OpenLibrary_ ("test.library",minVersion)
If *_TestBase
  ; (!) Do some other init stuff here...
Else
  If (minVersion>0)
    error{"Unable to open test.library (v"+Str$(minVersion)+"+)!"}
  Else
    error{"Unable to open test.library!"}
  End If
End If
Function Return *_TestBase
End Function

Statement test_CloseLib{}
If *_TestBase
  ; (!) Do some freeing stuff here that you inited in _TestBase_Init{}...
  CloseLibrary_ *_TestBase : *_TestBase = 0
End If
End Statement
!autoexit{test_CloseLib}


; Wrapper Functions:
Function.l test_AddTwoIntegers{_a.l,_b.l}
If (test_OpenLib{}) ; (!) put your min version here if needed!
  !test_AddTwoIntegers{result.l,_a,_b}
End If
Function Return result
End Function

Function.l test_SubTwoIntegers{_a.l,_b.l}
If (test_OpenLib{}) ; (!) put your min version here if needed!
  !test_SubTwoIntegers{result.l,_a,_b}
End If
Function Return result
End Function



a.l = 7
b.l = 3
Stop
c.l = test_AddTwoIntegers{a,b}
NPrint a,"+",b," = ",c
c.l = test_SubTwoIntegers{a,b}
NPrint a,"-",b," = ",c

End



