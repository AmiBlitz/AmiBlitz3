; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "Ram_Disk:"
; ExeFile         = "test"
; CreateIcon      = 1
; Residents       = ""
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 0
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 4
; CursorColumn    = 1
; LabelSearch     = ""
; LabelRemark     = 37
; LabelAll        = 5
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
; -- this example shows the improved dynamic-list handling of AB
; --
; -- the list can increase entries as much as you want
; -- If you want to free the mem on runtime you must
; -- call a dim list test(0)
; -- before loading a new File etc.

NEWTYPE .test
  b.l
  c.s
  d.b[32754]
  a.l
End NEWTYPE

Statement test2{}
  Dim List te.test(0)
  For i=1 To 20
    AddLast te()
  Next
End Statement

For i.l=1 To 10
  test2{}
Next
a$="abcdefg"
Dim List test.test(0) ;0 is used to show blitz that we want it dynamic

For i.l= 1 To 1000
  AddLast test()
  test()\a=i
  test()\c="Element "
  If i=10
    PushItem test()
  EndIf
  If i=12
   PushItem test()
  End If
  ;NPrint test()\c,test()\a
Next

LastItem test()

For i= 1 To 1000
  NPrint test()\c,test()\a
  PrevItem test()
Next

PopItem test()             ;to test pushitem and popitem
  NPrint test()\c,test()\a
 PopItem test()             ;to test pushitem and popitem
  NPrint test()\c,test()\a
  Dim te.l(10)
For i= 1 To 10000:
If AddLast (test())=0
a=Request ("out of mem",Str$(i)+" Items reserved","ok")
Pop For:Goto out
End If
Next
out
Dim List test.test(0)      ;free mem
AddLast test()
AddLast test()
AddLast test()

MouseWait

