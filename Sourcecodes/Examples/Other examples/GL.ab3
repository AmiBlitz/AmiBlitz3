; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "/Bin"
; ExeFile         = "opengl_test"
; CreateIcon      = 1
; Residents       = "all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 538
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 0
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 1387
; CursorColumn    = 28
; LabelSearch     = ""
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max File        = 1
; Max GadgetList  = 1
; Max Shape       = 1
; Max Bank        = 1
; Max MenuList    = 1
; Max BlitzFont   = 1
; Max GTList      = 30
; Max Palette     = 1
; Max BitMap      = 1
; Max Screen      = 2
; Max IntuiFont   = 12
; Max Window      = 30
; Max IconInfo    = 1
; Max MUIObject   = 50
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 30
; Max Console     = 5
; Max TCPSock     = 5
; Max Tape        = 1
; Max Sound       = 1
; Max MedModule   = 1
; Max Buffer      = 1
; Max Queue       = 1
; Max Sprite      = 1
; Max Module      = 1
; Max Slice       = 1
; Max Page        = 1
; Max CopList     = 1
; Max PTModule    = 5
; Max Anim        = 1
; Max NChunky     = 50
; Max Chunky      = 20
; Max Stencil     = 1
; Max XBSound     = 10
; /XTRA
;
;IMPORTANT:
;to run this demo, you need the StormMesa agl*.libraries installed
;

CNIF @#maxobjects = 0
  #maxobjects=1000
CEND

NEWTYPE .obj
  texnum.l
  mode.b          ;mode=1 =image 2=sphere
  width.l
  height.l
  texx.f
  texy.f
  texw.f
  texh.f
  *objdat.l
End NEWTYPE

NEWTYPE .quad
  width.f
  height.f
  depth_.f
  texfront.l
  texback.l
  textop.l
  texbuttom.l
  texleft.l
  texright.l
End NEWTYPE

NEWTYPE .globaldat
  xsize.l
  ysize.l
  zsize.l
  reversey.b
  scalx.f
  scaly.f
  scalz.f
  _red.f
  _green.f
  _blue.f
  bytetof.f
  fonttpl.l
  tilewidth.l
  tileheight.l
  textposx.f
  textposy.f
  fontobjectnum.l
  fontscale.f
  textred.f
  textgreen.f
  textblue.f
  alpha.f
  *quadric.l
  slices.w
  stacks.w
End NEWTYPE

SHARED gl_globaldata.globaldat
Dim ogl_objectstruct.obj (#maxobjects)
SHARED ogl_objectstruct ()

NEWTYPE .fv
  r.f
  g.f
  b.f
  a.f
End NEWTYPE

CNIF #__include = 0
  OPTIMIZE 7
  SYNTAX 2
CEND

XINCLUDE "dbl_display.include.ab3"
XINCLUDE "image.include.ab3"

gl_globaldata\bytetof = 1 / 255
#GL_CURRENT_BIT          = $00000001
#GL_POINT_BIT            = $00000002
#GL_LINE_BIT             = $00000004
#GL_POLYGON_BIT          = $00000008
#GL_POLYGON_STIPPLE_BIT  = $00000010
#GL_PIXEL_MODE_BIT       = $00000020
#GL_LIGHTING_BIT         = $00000040
#GL_FOG_BIT              = $00000080
#GL_DEPTH_BUFFER_BIT     = $00000100
#GL_ACCUM_BUFFER_BIT     = $00000200
#GL_STENCIL_BUFFER_BIT   = $00000400
#GL_VIEWPORT_BIT         = $00000800
#GL_TRANSFORM_BIT        = $00001000
#GL_ENABLE_BIT           = $00002000
#GL_COLOR_BUFFER_BIT     = $00004000
#GL_HINT_BIT             = $00008000
#GL_EVAL_BIT             = $00010000
#GL_LIST_BIT             = $00020000
#GL_TEXTURE_BIT          = $00040000
#GL_SCISSOR_BIT          = $00080000
#GL_ALL_ATTRIB_BITS      = $000fffff

#FLAG_OWNVISUAL          =     1
#FLAG_OWNBUFFER          =     2
#FLAG_FORBI3DHW          =     4
#FLAG_FULLSCREEN         =     8
#FLAG_DIRECTRENDER       =     16
#FLAG_TWOBUFFERS         =     32
#FLAG_FAST               =     64
#FLAG_VERYFAST           =     128
#FLAG_RGBA               =     256
#FLAG_SYNC               =     512
#FLAG_TRIPLE             =     1024

#AMA_DUMMY       =     #TAG_USER + 32
#AMA_LEFT        =     #AMA_DUMMY + 1
#AMA_BOTTOM      =     #AMA_DUMMY + 2
#AMA_WIDTH       =     #AMA_DUMMY + 3
#AMA_HEIGHT      =     #AMA_DUMMY + 4
#AMA_DRAWMODE    =     #AMA_DUMMY + 5
#AMA_SCREEN      =     #AMA_DUMMY + 6
#AMA_WINDOW      =     #AMA_DUMMY + 7
#AMA_RASTPORT    =     #AMA_DUMMY + 8
#AMA_DOUBLEBUF   =     #AMA_DUMMY + $30
#AMA_RGBMODE     =     #AMA_DUMMY + $31
#AMA_ALPHAFLAG   =     #AMA_DUMMY + $32
#AMA_FORBID3DHW  =     #AMA_DUMMY + $33
#AMA_FULLSCREEN  =     #AMA_DUMMY + $34
#AMA_DIRECTRENDER =   #AMA_DUMMY + $35
#AMA_TWOBUFFERS  =   #AMA_DUMMY + $36
#AMA_FAST        =     #AMA_DUMMY + $37
#AMA_VERYFAST    =     #AMA_DUMMY + $38
#AMA_NODEPTH     =     #AMA_DUMMY + $39
#AMA_NOSTENCIL   =     #AMA_DUMMY + $3a
#AMA_NOACCUM     =     #AMA_DUMMY + $3b
#AMA_VISUAL      =     #AMA_DUMMY + $41
#AMA_BUFFER      =     #AMA_DUMMY + $42
#AMA_WINDOWID    =     #AMA_DUMMY + $43


#GL_FALSE                        = 0
#GL_TRUE                         = 1

; Data types */
#GL_BYTE                         = $1400
#GL_UNSIGNED_BYTE                = $1401
#GL_SHORT                        = $1402
#GL_UNSIGNED_SHORT               = $1403
#GL_INT                          = $1404
#GL_UNSIGNED_INT                 = $1405
#GL_FLOAT                        = $1406
#GL_DOUBLE                       = $140A
#GL_2_BYTES                      = $1407
#GL_3_BYTES                      = $1408
#GL_4_BYTES                      = $1409

        ;/* Primitives */
        #GL_LINES                        = $0001
        #GL_POINTS                       = $0000
        #GL_LINE_STRIP                   = $0003
        #GL_LINE_LOOP                    = $0002
        #GL_TRIANGLES                    = $0004
        #GL_TRIANGLE_STRIP               = $0005
        #GL_TRIANGLE_FAN                 = $0006
        #GL_QUADS                        = $0007
        #GL_QUAD_STRIP                   = $0008
        #GL_POLYGON                      = $0009
        #GL_EDGE_FLAG                    = $0B43

        ;/* Vertex Arrays */
        #GL_VERTEX_ARRAY                 = $8074
        #GL_NORMAL_ARRAY                 = $8075
        #GL_COLOR_ARRAY                  = $8076
        #GL_INDEX_ARRAY                  = $8077
        #GL_TEXTURE_COORD_ARRAY          = $8078
        #GL_EDGE_FLAG_ARRAY              = $8079
        #GL_VERTEX_ARRAY_SIZE            = $807A
        #GL_VERTEX_ARRAY_TYPE            = $807B
        #GL_VERTEX_ARRAY_STRIDE          = $807C
        #GL_NORMAL_ARRAY_TYPE            = $807E
        #GL_NORMAL_ARRAY_STRIDE          = $807F
        #GL_COLOR_ARRAY_SIZE             = $8081
        #GL_COLOR_ARRAY_TYPE             = $8082
        #GL_COLOR_ARRAY_STRIDE           = $8083
        #GL_INDEX_ARRAY_TYPE             = $8085
        #GL_INDEX_ARRAY_STRIDE           = $8086
        #GL_TEXTURE_COORD_ARRAY_SIZE     = $8088
        #GL_TEXTURE_COORD_ARRAY_TYPE     = $8089
        #GL_TEXTURE_COORD_ARRAY_STRIDE   = $808A
        #GL_EDGE_FLAG_ARRAY_STRIDE       = $808C
        #GL_VERTEX_ARRAY_POINTER         = $808E
        #GL_NORMAL_ARRAY_POINTER         = $808F
        #GL_COLOR_ARRAY_POINTER          = $8090
        #GL_INDEX_ARRAY_POINTER          = $8091
        #GL_TEXTURE_COORD_ARRAY_POINTER  = $8092
        #GL_EDGE_FLAG_ARRAY_POINTER      = $8093
        #GL_V2F                          = $2A20
        #GL_V3F                          = $2A21
        #GL_C4UB_V2F                     = $2A22
        #GL_C4UB_V3F                     = $2A23
        #GL_C3F_V3F                      = $2A24
        #GL_N3F_V3F                      = $2A25
        #GL_C4F_N3F_V3F                  = $2A26
        #GL_T2F_V3F                      = $2A27
        #GL_T4F_V4F                      = $2A28
        #GL_T2F_C4UB_V3F                 = $2A29
        #GL_T2F_C3F_V3F                  = $2A2A
        #GL_T2F_N3F_V3F                  = $2A2B
        #GL_T2F_C4F_N3F_V3F              = $2A2C
        #GL_T4F_C4F_N3F_V4F              = $2A2D

        ;/* Matrix Mode */
        #GL_MATRIX_MODE                  = $0BA0
        #GL_MODELVIEW                    = $1700
        #GL_PROJECTION                   = $1701
        #GL_TEXTURE                      = $1702

        ;/* Points */
        #GL_POINT_SMOOTH                 = $0B10
        #GL_POINT_SIZE                   = $0B11
        #GL_POINT_SIZE_GRANULARITY       = $0B13
        #GL_POINT_SIZE_RANGE             = $0B12

        ;/* Lines */
        #GL_LINE_SMOOTH                  = $0B20
        #GL_LINE_STIPPLE                 = $0B24
        #GL_LINE_STIPPLE_PATTERN         = $0B25
        #GL_LINE_STIPPLE_REPEAT          = $0B26
        #GL_LINE_WIDTH                   = $0B21
        #GL_LINE_WIDTH_GRANULARITY       = $0B23
        #GL_LINE_WIDTH_RANGE             = $0B22

        ;/* Polygons */
        #GL_POINT                        = $1B00
        #GL_LINE                         = $1B01
        #GL_FILL                         = $1B02
        #GL_CCW                          = $0901
        #GL_CW                           = $0900
        #GL_FRONT                        = $0404
        #GL_BACK                         = $0405
        #GL_CULL_FACE                    = $0B44
        #GL_CULL_FACE_MODE               = $0B45
        #GL_POLYGON_SMOOTH               = $0B41
        #GL_POLYGON_STIPPLE              = $0B42
        #GL_FRONT_FACE                   = $0B46
        #GL_POLYGON_MODE                 = $0B40
        #GL_POLYGON_OFFSET_FACTOR        = $8038
        #GL_POLYGON_OFFSET_UNITS         = $2A00
        #GL_POLYGON_OFFSET_POINT         = $2A01
        #GL_POLYGON_OFFSET_LINE          = $2A02
        #GL_POLYGON_OFFSET_FILL          = $8037

        ;/* Display Lists */
        #GL_COMPILE                      = $1300
        #GL_COMPILE_AND_EXECUTE          = $1301
        #GL_LIST_BASE                    = $0B32
        #GL_LIST_INDEX                   = $0B33
        #GL_LIST_MODE                    = $0B30

        ;/* Depth Buffer */
        #GL_NEVER                        = $0200
        #GL_LESS                         = $0201
        #GL_GEQUAL                       = $0206
        #GL_LEQUAL                       = $0203
        #GL_GREATER                      = $0204
        #GL_NOTEQUAL                     = $0205
        #GL_EQUAL                        = $0202
        #GL_ALWAYS                       = $0207
        #GL_DEPTH_TEST                   = $0B71
        #GL_DEPTH_BITS                   = $0D56
        #GL_DEPTH_CLEAR_VALUE            = $0B73
        #GL_DEPTH_FUNC                   = $0B74
        #GL_DEPTH_RANGE                  = $0B70
        #GL_DEPTH_WRITEMASK              = $0B72
        #GL_DEPTH_COMPONENT              = $1902

        ;/* Lighting */
        #GL_LIGHTING                     = $0B50
        #GL_LIGHT0                       = $4000
        #GL_LIGHT1                       = $4001
        #GL_LIGHT2                       = $4002
        #GL_LIGHT3                       = $4003
        #GL_LIGHT4                       = $4004
        #GL_LIGHT5                       = $4005
        #GL_LIGHT6                       = $4006
        #GL_LIGHT7                       = $4007
        #GL_SPOT_EXPONENT                = $1205
        #GL_SPOT_CUTOFF                  = $1206
        #GL_CONSTANT_ATTENUATION         = $1207
        #GL_LINEAR_ATTENUATION           = $1208
        #GL_QUADRATIC_ATTENUATION        = $1209
        #GL_AMBIENT                      = $1200
        #GL_DIFFUSE                      = $1201
        #GL_SPECULAR                     = $1202
        #GL_SHININESS                    = $1601
        #GL_EMISSION                     = $1600
        #GL_POSITION                     = $1203
        #GL_SPOT_DIRECTION               = $1204
        #GL_AMBIENT_AND_DIFFUSE          = $1602
        #GL_COLOR_INDEXES                = $1603
        #GL_LIGHT_MODEL_TWO_SIDE         = $0B52
        #GL_LIGHT_MODEL_LOCAL_VIEWER     = $0B51
        #GL_LIGHT_MODEL_AMBIENT          = $0B53
        #GL_FRONT_AND_BACK               = $0408
        #GL_SHADE_MODEL                  = $0B54
        #GL_FLAT                         = $1D00
        #GL_SMOOTH                       = $1D01
        #GL_COLOR_MATERIAL               = $0B57
        #GL_COLOR_MATERIAL_FACE          = $0B55
        #GL_COLOR_MATERIAL_PARAMETER     = $0B56
        #GL_NORMALIZE                    = $0BA1

        ;/* User clipping planes */
        #GL_CLIP_PLANE0                  = $3000
        #GL_CLIP_PLANE1                  = $3001
        #GL_CLIP_PLANE2                  = $3002
        #GL_CLIP_PLANE3                  = $3003
        #GL_CLIP_PLANE4                  = $3004
        #GL_CLIP_PLANE5                  = $3005

        ;/* Accumulation Buffer */
        #GL_ACCUM_RED_BITS               = $0D58
        #GL_ACCUM_GREEN_BITS             = $0D59
        #GL_ACCUM_BLUE_BITS              = $0D5A
        #GL_ACCUM_ALPHA_BITS             = $0D5B
        #GL_ACCUM_CLEAR_VALUE            = $0B80
        #GL_ACCUM                        = $0100
        #GL_ADD                          = $0104
        #GL_LOAD                         = $0101
        #GL_MULT                         = $0103
        #GL_RETURN                       = $0102

        ;/* Alpha testing */
        #GL_ALPHA_TEST                   = $0BC0
        #GL_ALPHA_TEST_REF               = $0BC2
        #GL_ALPHA_TEST_FUNC              = $0BC1

        ;/* Blending */
        #GL_BLEND                        = $0BE2
        #GL_BLEND_SRC                    = $0BE1
        #GL_BLEND_DST                    = $0BE0
        #GL_ZERO                         = 0
        #GL_ONE                          = 1
        #GL_SRC_COLOR                    = $0300
        #GL_ONE_MINUS_SRC_COLOR          = $0301
        #GL_DST_COLOR                    = $0306
        #GL_ONE_MINUS_DST_COLOR          = $0307
        #GL_SRC_ALPHA                    = $0302
        #GL_ONE_MINUS_SRC_ALPHA          = $0303
        #GL_DST_ALPHA                    = $0304
        #GL_ONE_MINUS_DST_ALPHA          = $0305
        #GL_SRC_ALPHA_SATURATE           = $0308
        #GL_CONSTANT_COLOR               = $8001
        #GL_ONE_MINUS_CONSTANT_COLOR     = $8002
        #GL_CONSTANT_ALPHA               = $8003
        #GL_ONE_MINUS_CONSTANT_ALPHA     = $8004

        ;/* Render Mode */
        #GL_FEEDBACK                     = $1C01
        #GL_RENDER                       = $1C00
        #GL_SELECT                       = $1C02

        ;/* Feedback */
        #GL_2D                           = $0600
        #GL_3D                           = $0601
        #GL_3D_COLOR                     = $0602
        #GL_3D_COLOR_TEXTURE             = $0603
        #GL_4D_COLOR_TEXTURE             = $0604
        #GL_POINT_TOKEN                  = $0701
        #GL_LINE_TOKEN                   = $0702
        #GL_LINE_RESET_TOKEN             = $0707
        #GL_POLYGON_TOKEN                = $0703
        #GL_BITMAP_TOKEN                 = $0704
        #GL_DRAW_PIXEL_TOKEN             = $0705
        #GL_COPY_PIXEL_TOKEN             = $0706
        #GL_PASS_THROUGH_TOKEN           = $0700
        #GL_FEEDBACK_BUFFER_POINTER      = $0DF0
        #GL_FEEDBACK_BUFFER_SIZE         = $0DF1
        #GL_FEEDBACK_BUFFER_TYPE         = $0DF2

        ;/* Selection */
        #GL_SELECTION_BUFFER_POINTER     = $0DF3
        #GL_SELECTION_BUFFER_SIZE        = $0DF4

        ;/* Fog */
        #GL_FOG                          = $0B60
        #GL_FOG_MODE                     = $0B65
        #GL_FOG_DENSITY                  = $0B62
        #GL_FOG_COLOR                    = $0B66
        #GL_FOG_INDEX                    = $0B61
        #GL_FOG_START                    = $0B63
        #GL_FOG_END                      = $0B64
        #GL_LINEAR                       = $2601
        #GL_EXP                          = $0800
        #GL_EXP2                         = $0801

        ;/* Logic Ops */
        #GL_LOGIC_OP                     = $0BF1
        #GL_INDEX_LOGIC_OP               = $0BF1
        #GL_COLOR_LOGIC_OP               = $0BF2
        #GL_LOGIC_OP_MODE                = $0BF0
        #GL_CLEAR                        = $1500
        #GL_SET                          = $150F
        #GL_COPY                         = $1503
        #GL_COPY_INVERTED                = $150C
        #GL_NOOP                         = $1505
        #GL_INVERT                       = $150A
        #GL_AND                          = $1501
        #GL_NAND                         = $150E
        #GL_OR                           = $1507
        #GL_NOR                          = $1508
        #GL_XOR                          = $1506
        #GL_EQUIV                        = $1509
        #GL_AND_REVERSE                  = $1502
        #GL_AND_INVERTED                 = $1504
        #GL_OR_REVERSE                   = $150B
        #GL_OR_INVERTED                  = $150D

        ;/* Stencil */
        #GL_STENCIL_TEST                 = $0B90
        #GL_STENCIL_WRITEMASK            = $0B98
        #GL_STENCIL_BITS                 = $0D57
        #GL_STENCIL_FUNC                 = $0B92
        #GL_STENCIL_VALUE_MASK           = $0B93
        #GL_STENCIL_REF                  = $0B97
        #GL_STENCIL_FAIL                 = $0B94
        #GL_STENCIL_PASS_DEPTH_PASS      = $0B96
        #GL_STENCIL_PASS_DEPTH_FAIL      = $0B95
        #GL_STENCIL_CLEAR_VALUE          = $0B91
        #GL_STENCIL_INDEX                = $1901
        #GL_KEEP                         = $1E00
        #GL_REPLACE                      = $1E01
        #GL_INCR                         = $1E02
        #GL_DECR                         = $1E03

        ;/* Buffers, Pixel Drawing/Reading */
        #GL_NONE                         = 0
        #GL_LEFT                         = $0406
        #GL_RIGHT                        = $0407
        ;/*GL_FRONT                      = $0404, */
        ;/*GL_BACK                       = $0405, */
        ;/*GL_FRONT_AND_BACK             = $0408, */
        #GL_FRONT_LEFT                   = $0400
        #GL_FRONT_RIGHT                  = $0401
        #GL_BACK_LEFT                    = $0402
        #GL_BACK_RIGHT                   = $0403
        #GL_AUX0                         = $0409
        #GL_AUX1                         = $040A
        #GL_AUX2                         = $040B
        #GL_AUX3                         = $040C
        #GL_COLOR_INDEX                  = $1900
        #GL_RED                          = $1903
        #GL_GREEN                        = $1904
        #GL_BLUE                         = $1905
        #GL_ALPHA                        = $1906
        #GL_LUMINANCE                    = $1909
        #GL_LUMINANCE_ALPHA              = $190A
        #GL_ALPHA_BITS                   = $0D55
        #GL_RED_BITS                     = $0D52
        #GL_GREEN_BITS                   = $0D53
        #GL_BLUE_BITS                    = $0D54
        #GL_INDEX_BITS                   = $0D51
        #GL_SUBPIXEL_BITS                = $0D50
        #GL_AUX_BUFFERS                  = $0C00
        #GL_READ_BUFFER                  = $0C02
        #GL_DRAW_BUFFER                  = $0C01
        #GL_DOUBLEBUFFER                 = $0C32
        #GL_STEREO                       = $0C33
        #GL_BITMAP                       = $1A00
        #GL_COLOR                        = $1800
        #GL_DEPTH                        = $1801
        #GL_STENCIL                      = $1802
        #GL_DITHER                       = $0BD0
        #GL_RGB                          = $1907
        #GL_RGBA                         = $1908

        ;/* Implementation limits */
        #GL_MAX_LIST_NESTING             = $0B31
        #GL_MAX_ATTRIB_STACK_DEPTH       = $0D35
        #GL_MAX_MODELVIEW_STACK_DEPTH    = $0D36
        #GL_MAX_NAME_STACK_DEPTH         = $0D37
        #GL_MAX_PROJECTION_STACK_DEPTH   = $0D38
        #GL_MAX_TEXTURE_STACK_DEPTH      = $0D39
        #GL_MAX_EVAL_ORDER               = $0D30
        #GL_MAX_LIGHTS                   = $0D31
        #GL_MAX_CLIP_PLANES              = $0D32
        #GL_MAX_TEXTURE_SIZE             = $0D33
        #GL_MAX_PIXEL_MAP_TABLE          = $0D34
        #GL_MAX_VIEWPORT_DIMS            = $0D3A
        #GL_MAX_CLIENT_ATTRIB_STACK_DEPTH= $0D3B

        ;/* Gets */
        #GL_ATTRIB_STACK_DEPTH           = $0BB0
        #GL_CLIENT_ATTRIB_STACK_DEPTH    = $0BB1
        #GL_COLOR_CLEAR_VALUE            = $0C22
        #GL_COLOR_WRITEMASK              = $0C23
        #GL_CURRENT_INDEX                = $0B01
        #GL_CURRENT_COLOR                = $0B00
        #GL_CURRENT_NORMAL               = $0B02
        #GL_CURRENT_RASTER_COLOR         = $0B04
        #GL_CURRENT_RASTER_DISTANCE      = $0B09
        #GL_CURRENT_RASTER_INDEX         = $0B05
        #GL_CURRENT_RASTER_POSITION      = $0B07
        #GL_CURRENT_RASTER_TEXTURE_COORDS = $0B06
        #GL_CURRENT_RASTER_POSITION_VALID = $0B08
        #GL_CURRENT_TEXTURE_COORDS       = $0B03
        #GL_INDEX_CLEAR_VALUE            = $0C20
        #GL_INDEX_MODE                   = $0C30
        #GL_INDEX_WRITEMASK              = $0C21
        #GL_MODELVIEW_MATRIX             = $0BA6
        #GL_MODELVIEW_STACK_DEPTH        = $0BA3
        #GL_NAME_STACK_DEPTH             = $0D70
        #GL_PROJECTION_MATRIX            = $0BA7
        #GL_PROJECTION_STACK_DEPTH       = $0BA4
        #GL_RENDER_MODE                  = $0C40
        #GL_RGBA_MODE                    = $0C31
        #GL_TEXTURE_MATRIX               = $0BA8
        #GL_TEXTURE_STACK_DEPTH          = $0BA5
        #GL_VIEWPORT                     = $0BA2


        ;/* Evaluators */
        #GL_AUTO_NORMAL                  = $0D80
        #GL_MAP1_COLOR_4                 = $0D90
        #GL_MAP1_GRID_DOMAIN             = $0DD0
        #GL_MAP1_GRID_SEGMENTS           = $0DD1
        #GL_MAP1_INDEX                   = $0D91
        #GL_MAP1_NORMAL                  = $0D92
        #GL_MAP1_TEXTURE_COORD_1         = $0D93
        #GL_MAP1_TEXTURE_COORD_2         = $0D94
        #GL_MAP1_TEXTURE_COORD_3         = $0D95
        #GL_MAP1_TEXTURE_COORD_4         = $0D96
        #GL_MAP1_VERTEX_3                = $0D97
        #GL_MAP1_VERTEX_4                = $0D98
        #GL_MAP2_COLOR_4                 = $0DB0
        #GL_MAP2_GRID_DOMAIN             = $0DD2
        #GL_MAP2_GRID_SEGMENTS           = $0DD3
        #GL_MAP2_INDEX                   = $0DB1
        #GL_MAP2_NORMAL                  = $0DB2
        #GL_MAP2_TEXTURE_COORD_1         = $0DB3
        #GL_MAP2_TEXTURE_COORD_2         = $0DB4
        #GL_MAP2_TEXTURE_COORD_3         = $0DB5
        #GL_MAP2_TEXTURE_COORD_4         = $0DB6
        #GL_MAP2_VERTEX_3                = $0DB7
        #GL_MAP2_VERTEX_4                = $0DB8
        #GL_COEFF                        = $0A00
        #GL_DOMAIN                       = $0A02
        #GL_ORDER                        = $0A01

       ; /* Hints */
        #GL_FOG_HINT                     = $0C54
        #GL_LINE_SMOOTH_HINT             = $0C52
        #GL_PERSPECTIVE_CORRECTION_HINT  = $0C50
        #GL_POINT_SMOOTH_HINT            = $0C51
        #GL_POLYGON_SMOOTH_HINT          = $0C53
        #GL_DONT_CARE                    = $1100
        #GL_FASTEST                      = $1101
        #GL_NICEST                       = $1102

        ;/* Scissor Box */
        #GL_SCISSOR_TEST                 = $0C11
        #GL_SCISSOR_BOX                  = $0C10

        ;/* Pixel Mode / Transfer */
        #GL_MAP_COLOR                    = $0D10
        #GL_MAP_STENCIL                  = $0D11
        #GL_INDEX_SHIFT                  = $0D12
        #GL_INDEX_OFFSET                 = $0D13
        #GL_RED_SCALE                    = $0D14
        #GL_RED_BIAS                     = $0D15
        #GL_GREEN_SCALE                  = $0D18
        #GL_GREEN_BIAS                   = $0D19
        #GL_BLUE_SCALE                   = $0D1A
        #GL_BLUE_BIAS                    = $0D1B
        #GL_ALPHA_SCALE                  = $0D1C
        #GL_ALPHA_BIAS                   = $0D1D
        #GL_DEPTH_SCALE                  = $0D1E
        #GL_DEPTH_BIAS                   = $0D1F
        #GL_PIXEL_MAP_S_TO_S_SIZE        = $0CB1
        #GL_PIXEL_MAP_I_TO_I_SIZE        = $0CB0
        #GL_PIXEL_MAP_I_TO_R_SIZE        = $0CB2
        #GL_PIXEL_MAP_I_TO_G_SIZE        = $0CB3
        #GL_PIXEL_MAP_I_TO_B_SIZE        = $0CB4
        #GL_PIXEL_MAP_I_TO_A_SIZE        = $0CB5
        #GL_PIXEL_MAP_R_TO_R_SIZE        = $0CB6
        #GL_PIXEL_MAP_G_TO_G_SIZE        = $0CB7
        #GL_PIXEL_MAP_B_TO_B_SIZE        = $0CB8
        #GL_PIXEL_MAP_A_TO_A_SIZE        = $0CB9
        #GL_PIXEL_MAP_S_TO_S             = $0C71
        #GL_PIXEL_MAP_I_TO_I             = $0C70
        #GL_PIXEL_MAP_I_TO_R             = $0C72
        #GL_PIXEL_MAP_I_TO_G             = $0C73
        #GL_PIXEL_MAP_I_TO_B             = $0C74
        #GL_PIXEL_MAP_I_TO_A             = $0C75
        #GL_PIXEL_MAP_R_TO_R             = $0C76
        #GL_PIXEL_MAP_G_TO_G             = $0C77
        #GL_PIXEL_MAP_B_TO_B             = $0C78
        #GL_PIXEL_MAP_A_TO_A             = $0C79
        #GL_PACK_ALIGNMENT               = $0D05
        #GL_PACK_LSB_FIRST               = $0D01
        #GL_PACK_ROW_LENGTH              = $0D02
        #GL_PACK_SKIP_PIXELS             = $0D04
        #GL_PACK_SKIP_ROWS               = $0D03
        #GL_PACK_SWAP_BYTES              = $0D00
        #GL_UNPACK_ALIGNMENT             = $0CF5
        #GL_UNPACK_LSB_FIRST             = $0CF1
        #GL_UNPACK_ROW_LENGTH            = $0CF2
        #GL_UNPACK_SKIP_PIXELS           = $0CF4
        #GL_UNPACK_SKIP_ROWS             = $0CF3
        #GL_UNPACK_SWAP_BYTES            = $0CF0
        #GL_ZOOM_X                       = $0D16
        #GL_ZOOM_Y                       = $0D17

       ; /* Texture mapping */
        #GL_TEXTURE_ENV                  = $2300
        #GL_TEXTURE_ENV_MODE             = $2200
        #GL_TEXTURE_1D                   = $0DE0
        #GL_TEXTURE_2D                   = $0DE1
        #GL_TEXTURE_WRAP_S               = $2802
        #GL_TEXTURE_WRAP_T               = $2803
        #GL_TEXTURE_MAG_FILTER           = $2800
        #GL_TEXTURE_MIN_FILTER           = $2801
        #GL_TEXTURE_ENV_COLOR            = $2201
        #GL_TEXTURE_GEN_S                = $0C60
        #GL_TEXTURE_GEN_T                = $0C61
        #GL_TEXTURE_GEN_MODE             = $2500
        #GL_TEXTURE_BORDER_COLOR         = $1004
        #GL_TEXTURE_WIDTH                = $1000
        #GL_TEXTURE_HEIGHT               = $1001
        #GL_TEXTURE_BORDER               = $1005
        #GL_TEXTURE_COMPONENTS           = $1003
        #GL_TEXTURE_RED_SIZE             = $805C
        #GL_TEXTURE_GREEN_SIZE           = $805D
        #GL_TEXTURE_BLUE_SIZE            = $805E
        #GL_TEXTURE_ALPHA_SIZE           = $805F
        #GL_TEXTURE_LUMINANCE_SIZE       = $8060
        #GL_TEXTURE_INTENSITY_SIZE       = $8061
        #GL_NEAREST_MIPMAP_NEAREST       = $2700
        #GL_NEAREST_MIPMAP_LINEAR        = $2702
        #GL_LINEAR_MIPMAP_NEAREST        = $2701
        #GL_LINEAR_MIPMAP_LINEAR         = $2703
        #GL_OBJECT_LINEAR                = $2401
        #GL_OBJECT_PLANE                 = $2501
        #GL_EYE_LINEAR                   = $2400
        #GL_EYE_PLANE                    = $2502
        #GL_SPHERE_MAP                   = $2402
        #GL_DECAL                        = $2101
        #GL_MODULATE                     = $2100
        #GL_NEAREST                      = $2600
        #GL_REPEAT                       = $2901
        #GL_CLAMP                        = $2900
        #GL_S                            = $2000
        #GL_T                            = $2001
        #GL_R                            = $2002
        #GL_Q                            = $2003
        #GL_TEXTURE_GEN_R                = $0C62
        #GL_TEXTURE_GEN_Q                = $0C63

        ;/* GL 1.1 texturing */
        #GL_PROXY_TEXTURE_1D             = $8063
        #GL_PROXY_TEXTURE_2D             = $8064
        #GL_TEXTURE_PRIORITY             = $8066
        #GL_TEXTURE_RESIDENT             = $8067
        #GL_TEXTURE_BINDING_1D           = $8068
        #GL_TEXTURE_BINDING_2D           = $8069
        #GL_TEXTURE_INTERNAL_FORMAT      = $1003

        ;/* GL 1.2 texturing */
        #GL_PACK_SKIP_IMAGES             = $806B
        #GL_PACK_IMAGE_HEIGHT            = $806C
        #GL_UNPACK_SKIP_IMAGES           = $806D
        #GL_UNPACK_IMAGE_HEIGHT          = $806E
        #GL_TEXTURE_3D                   = $806F
        #GL_PROXY_TEXTURE_3D             = $8070
        #GL_TEXTURE_DEPTH                = $8071
        #GL_TEXTURE_WRAP_R               = $8072
        #GL_MAX_3D_TEXTURE_SIZE          = $8073
        #GL_TEXTURE_BINDING_3D           = $806A

        ;/* Internal texture formats (GL 1.1) */
        #GL_ALPHA4                       = $803B
        #GL_ALPHA8                       = $803C
        #GL_ALPHA12                      = $803D
        #GL_ALPHA16                      = $803E
        #GL_LUMINANCE4                   = $803F
        #GL_LUMINANCE8                   = $8040
        #GL_LUMINANCE12                  = $8041
        #GL_LUMINANCE16                  = $8042
        #GL_LUMINANCE4_ALPHA4            = $8043
        #GL_LUMINANCE6_ALPHA2            = $8044
        #GL_LUMINANCE8_ALPHA8            = $8045
        #GL_LUMINANCE12_ALPHA4           = $8046
        #GL_LUMINANCE12_ALPHA12          = $8047
        #GL_LUMINANCE16_ALPHA16          = $8048
        #GL_INTENSITY                    = $8049
        #GL_INTENSITY4                   = $804A
        #GL_INTENSITY8                   = $804B
        #GL_INTENSITY12                  = $804C
        #GL_INTENSITY16                  = $804D
        #GL_R3_G3_B2                     = $2A10
        #GL_RGB4                         = $804F
        #GL_RGB5                         = $8050
        #GL_RGB8                         = $8051
        #GL_RGB10                        = $8052
        #GL_RGB12                        = $8053
        #GL_RGB16                        = $8054
        #GL_RGBA2                        = $8055
        #GL_RGBA4                        = $8056
        #GL_RGB5_A1                      = $8057
        #GL_RGBA8                        = $8058
        #GL_RGB10_A2                     = $8059
        #GL_RGBA12                       = $805A
        #GL_RGBA16                       = $805B

       ; /* Utility */
        #GL_VENDOR                       = $1F00
        #GL_RENDERER                     = $1F01
        #GL_VERSION                      = $1F02
        #GL_EXTENSIONS                   = $1F03

        ;/* Errors */
        #GL_INVALID_VALUE                = $0501
        #GL_INVALID_ENUM                 = $0500
        #GL_INVALID_OPERATION            = $0502
        #GL_STACK_OVERFLOW               = $0503
        #GL_STACK_UNDERFLOW              = $0504
        #GL_OUT_OF_MEMORY                = $0505

        ;/*
        ; * Extensions
        ; */

        ;/* GL_EXT_blend_minmax AND GL_EXT_blend_color */
        #GL_CONSTANT_COLOR_EXT                   = $8001
        #GL_ONE_MINUS_CONSTANT_COLOR_EXT         = $8002
        #GL_CONSTANT_ALPHA_EXT                   = $8003
        #GL_ONE_MINUS_CONSTANT_ALPHA_EXT         = $8004
        #GL_BLEND_EQUATION_EXT                   = $8009
        #GL_MIN_EXT                              = $8007
        #GL_MAX_EXT                              = $8008
        #GL_FUNC_ADD_EXT                         = $8006
        #GL_FUNC_SUBTRACT_EXT                    = $800A
        #GL_FUNC_REVERSE_SUBTRACT_EXT            = $800B
        #GL_BLEND_COLOR_EXT                      = $8005

        ;/* GL_EXT_polygon_offset */
        #GL_POLYGON_OFFSET_EXT                   = $8037
        #GL_POLYGON_OFFSET_FACTOR_EXT            = $8038
        #GL_POLYGON_OFFSET_BIAS_EXT              = $8039

        ;/* GL_EXT_vertex_array */
        #GL_VERTEX_ARRAY_EXT                     = $8074
        #GL_NORMAL_ARRAY_EXT                     = $8075
        #GL_COLOR_ARRAY_EXT                      = $8076
        #GL_INDEX_ARRAY_EXT                      = $8077
        #GL_TEXTURE_COORD_ARRAY_EXT              = $8078
        #GL_EDGE_FLAG_ARRAY_EXT                  = $8079
        #GL_VERTEX_ARRAY_SIZE_EXT                = $807A
        #GL_VERTEX_ARRAY_TYPE_EXT                = $807B
        #GL_VERTEX_ARRAY_STRIDE_EXT              = $807C
        #GL_VERTEX_ARRAY_COUNT_EXT               = $807D
        #GL_NORMAL_ARRAY_TYPE_EXT                = $807E
        #GL_NORMAL_ARRAY_STRIDE_EXT              = $807F
        #GL_NORMAL_ARRAY_COUNT_EXT               = $8080
        #GL_COLOR_ARRAY_SIZE_EXT                 = $8081
        #GL_COLOR_ARRAY_TYPE_EXT                 = $8082
        #GL_COLOR_ARRAY_STRIDE_EXT               = $8083
        #GL_COLOR_ARRAY_COUNT_EXT                = $8084
        #GL_INDEX_ARRAY_TYPE_EXT                 = $8085
        #GL_INDEX_ARRAY_STRIDE_EXT               = $8086
        #GL_INDEX_ARRAY_COUNT_EXT                = $8087
        #GL_TEXTURE_COORD_ARRAY_SIZE_EXT         = $8088
        #GL_TEXTURE_COORD_ARRAY_TYPE_EXT         = $8089
        #GL_TEXTURE_COORD_ARRAY_STRIDE_EXT       = $808A
        #GL_TEXTURE_COORD_ARRAY_COUNT_EXT        = $808B
        #GL_EDGE_FLAG_ARRAY_STRIDE_EXT           = $808C
        #GL_EDGE_FLAG_ARRAY_COUNT_EXT            = $808D
        #GL_VERTEX_ARRAY_POINTER_EXT             = $808E
        #GL_NORMAL_ARRAY_POINTER_EXT             = $808F
        #GL_COLOR_ARRAY_POINTER_EXT              = $8090
        #GL_INDEX_ARRAY_POINTER_EXT              = $8091
        #GL_TEXTURE_COORD_ARRAY_POINTER_EXT      = $8092
        #GL_EDGE_FLAG_ARRAY_POINTER_EXT          = $8093

        ;/* GL_EXT_texture_object */
        #GL_TEXTURE_PRIORITY_EXT                 = $8066
        #GL_TEXTURE_RESIDENT_EXT                 = $8067
        #GL_TEXTURE_1D_BINDING_EXT               = $8068
        #GL_TEXTURE_2D_BINDING_EXT               = $8069

        ;/* GL_EXT_texture3D */
        #GL_PACK_SKIP_IMAGES_EXT                 = $806B
        #GL_PACK_IMAGE_HEIGHT_EXT                = $806C
        #GL_UNPACK_SKIP_IMAGES_EXT               = $806D
        #GL_UNPACK_IMAGE_HEIGHT_EXT              = $806E
        #GL_TEXTURE_3D_EXT                       = $806F
        #GL_PROXY_TEXTURE_3D_EXT                 = $8070
        #GL_TEXTURE_DEPTH_EXT                    = $8071
        #GL_TEXTURE_WRAP_R_EXT                   = $8072
        #GL_MAX_3D_TEXTURE_SIZE_EXT              = $8073
        #GL_TEXTURE_3D_BINDING_EXT               = $806A

        ;/* GL_EXT_paletted_texture */
        #GL_TABLE_TOO_LARGE_EXT                  = $8031
        #GL_COLOR_TABLE_FORMAT_EXT               = $80D8
        #GL_COLOR_TABLE_WIDTH_EXT                = $80D9
        #GL_COLOR_TABLE_RED_SIZE_EXT             = $80DA
        #GL_COLOR_TABLE_GREEN_SIZE_EXT           = $80DB
        #GL_COLOR_TABLE_BLUE_SIZE_EXT            = $80DC
        #GL_COLOR_TABLE_ALPHA_SIZE_EXT           = $80DD
        #GL_COLOR_TABLE_LUMINANCE_SIZE_EXT       = $80DE
        #GL_COLOR_TABLE_INTENSITY_SIZE_EXT       = $80DF
        #GL_TEXTURE_INDEX_SIZE_EXT               = $80ED
        #GL_COLOR_INDEX1_EXT                     = $80E2
        #GL_COLOR_INDEX2_EXT                     = $80E3
        #GL_COLOR_INDEX4_EXT                     = $80E4
        #GL_COLOR_INDEX8_EXT                     = $80E5
        #GL_COLOR_INDEX12_EXT                    = $80E6
        #GL_COLOR_INDEX16_EXT                    = $80E7

        ;/* GL_EXT_shared_texture_palette */
        #GL_SHARED_TEXTURE_PALETTE_EXT           = $81FB

        ;/* GL_EXT_point_parameters */
        #GL_POINT_SIZE_MIN_EXT                   = $8126
        #GL_POINT_SIZE_MAX_EXT                   = $8127
        #GL_POINT_FADE_THRESHOLD_SIZE_EXT        = $8128
        #GL_DISTANCE_ATTENUATION_EXT             = $8129

        ;/* GL_EXT_rescale_normal */
        #GL_RESCALE_NORMAL_EXT                   = $803A

        ;/* GL_EXT_abgr */
        #GL_ABGR_EXT                             = $8000

        ;/* GL_SGIS_multitexture */
        #GL_SELECTED_TEXTURE_SGIS                = $835C
        #GL_SELECTED_TEXTURE_COORD_SET_SGIS      = $835D
        #GL_MAX_TEXTURES_SGIS                    = $835E
        #GL_TEXTURE0_SGIS                        = $835F
        #GL_TEXTURE1_SGIS                        = $8360
        #GL_TEXTURE2_SGIS                        = $8361
        #GL_TEXTURE3_SGIS                        = $8362
        #GL_TEXTURE_COORD_SET_SOURCE_SGIS        = $8363

        ;/* GL_EXT_multitexture */
        #GL_SELECTED_TEXTURE_EXT                 = $83C0
        #GL_SELECTED_TEXTURE_COORD_SET_EXT       = $83C1
        #GL_SELECTED_TEXTURE_TRANSFORM_EXT       = $83C2
        #GL_MAX_TEXTURES_EXT                     = $83C3
        #GL_MAX_TEXTURE_COORD_SETS_EXT           = $83C4
        #GL_TEXTURE_ENV_COORD_SET_EXT            = $83C5
        #GL_TEXTURE0_EXT                         = $83C6
        #GL_TEXTURE1_EXT                         = $83C7
        #GL_TEXTURE2_EXT                         = $83C8
        #GL_TEXTURE3_EXT                         = $83C9

        ;/* GL_SGIS_texture_edge_clamp */
        #GL_CLAMP_TO_EDGE_SGIS                   = $812F

        ;/* OpenGL 1.2 */
        #GL_RESCALE_NORMAL                       = $803A
        #GL_CLAMP_TO_EDGE                        = $812F
        #GL_MAX_ELEMENTS_VERTICES                = $F0E8
        #GL_MAX_ELEMENTS_INDICES                 = $F0E9
        #GL_BGR                                  = $80E0
        #GL_BGRA                                 = $80E1
        #GL_UNSIGNED_BYTE_3_3_2                  = $8032
        #GL_UNSIGNED_BYTE_2_3_3_REV              = $8362
        #GL_UNSIGNED_SHORT_5_6_5                 = $8363
        #GL_UNSIGNED_SHORT_5_6_5_REV             = $8364
        #GL_UNSIGNED_SHORT_4_4_4_4               = $8033
        #GL_UNSIGNED_SHORT_4_4_4_4_REV           = $8365
        #GL_UNSIGNED_SHORT_5_5_5_1               = $8034
        #GL_UNSIGNED_SHORT_1_5_5_5_REV           = $8366
        #GL_UNSIGNED_INT_8_8_8_8                 = $8035
        #GL_UNSIGNED_INT_8_8_8_8_REV             = $8367
        #GL_UNSIGNED_INT_10_10_10_2              = $8036
        #GL_UNSIGNED_INT_2_10_10_10_REV          = $8368
        #GL_LIGHT_MODEL_COLOR_CONTROL            = $81F8
        #GL_SINGLE_COLOR                         = $81F9
        #GL_SEPARATE_SPECULAR_COLOR              = $81FA
        #GL_TEXTURE_MIN_LOD                      = $813A
        #GL_TEXTURE_MAX_LOD                      = $813B
        #GL_TEXTURE_BASE_LEVEL                   = $813C
        #GL_TEXTURE_MAX_LEVEL                    = $813D

Statement gl_quit{}
SHARED *ogl_mesa.l
  USEPATH gl_globaldata
  USEPATH2 ogl_objectstruct(objectnum)
  If \quadric Then gluDeleteQuadric_ \quadric
  glDeleteLists_ 1,#maxobjects
  AmigaMesaDestroyContext_ *ogl_mesa
End Statement
!autoexit{gl_quit}

Statement gl_init{width.l,height.l,dep.l,win.l} ;win =0 is fullscreen or a address to win
SHARED *ogl_mesa

  Screen 0,0,0,width,height,dep,0,"",0,1
  If win = 0
    Window 0,0,0,width,height,$100f,"test",0,1 ;gimmezerozero $400 for win borders
    *ogl_mesa=AmigaMesaCreateContext_(Tags(#AMA_WINDOW,Peek.l(Addr Window(Used Window)),@@
                                           #AMA_FULLSCREEN,1,@@
                                           #AMA_DOUBLEBUF,1,@@
                                           #AMA_ALPHAFLAG,1,@@
                                           #AMA_DIRECTRENDER,0))
  Else
    *ogl_mesa=AmigaMesaCreateContext_(Tags(#AMA_WINDOW,win,@@
                                           #AMA_FULLSCREEN,0,@@
                                           #AMA_DOUBLEBUF,1,@@
                                           #AMA_ALPHAFLAG,1,@@
                                           #AMA_DIRECTRENDER,0))
  End If

  If *ogl_mesa = 0
    i.l = Request ("cannot create Mesa Contest","Cannot create mesa context","End Program"):End
  End If

  AmigaMesaMakeCurrent_ *ogl_mesa,Peek.l(*ogl_mesa+8)
  glHint_ #GL_PERSPECTIVE_CORRECTION_HINT,#GL_NICEST
  glHint_ #GL_POLYGON_SMOOTH_HINT ,#GL_NICEST
  glMatrixMode_ #GL_PROJECTION;         // Choose Projection Matrix
  glLoadIdentity_;                      // Reset Projection Matrix
  gluPerspective_ 45.0,@@;              // Viewing Angle
                  width/height,@@; // Aspect Ratio
                  0.1,@@ ;         // Can See From This Near
                  1281*4;           // Can See To This Far
  glMatrixMode_ #GL_MODELVIEW

  glLoadIdentity_;
  glShadeModel_ #GL_SMOOTH;            // Smooth-Shaded Polygons
  glClearColor_ 0, 0, 0, 0;   // Set Clear Color
  glClearDepth_ 1.0;                  // Clear Depth Buffer
  glDepthFunc_ #GL_LEQUAL ;            // Type of Depth Testing
  glEnable_ #GL_DEPTH_TEST ;           // Enable Depth Testing

  glEnable_ #GL_BLEND;
  ;glLightModeli_ #GL_LIGHT_MODEL_TWO_SIDE,1
  ;glFrontFace_ #GL_CCW
  \quadric=gluNewQuadric_
  gluQuadricTexture_ \quadric,1
  glClear_ #GL_COLOR_BUFFER_BIT |#GL_DEPTH_BUFFER_BIT;
  LightAmbient.fv\r= 0.5, 0.5, 0.5, 1.0 ;    // Ambient Light Values ( NEW )
  LightDiffuse.fv\r= .6, .6, .6, 1.0 ;   // Diffuse Light Values ( NEW )
  LightPosition.fv\r =0.0, 0.0, 2.0, 1.0 ;    // Light Position ( NEW )
  glLightfv_ #GL_LIGHT0, #GL_AMBIENT, LightAmbient;   // Setup The Ambient Light
  glLightfv_ #GL_LIGHT0, #GL_DIFFUSE, LightDiffuse;   // Setup The Diffuse Light
  glLightfv_ #GL_LIGHT0, #GL_POSITION,LightPosition;  // Position The Light
  glEnable_ #GL_LIGHT0
  glEnable_ #GL_LIGHTING
  glEnable_ #GL_COLOR_MATERIAL
  ;glEnable_ #GL_CULL_FACE  used if you dont have 3D Hardware,but inside polygon not visible
  gl_globaldata\scalx=1,1,1:gl_globaldata\_red=1,1,1
  \slices=10:\stacks=10
End Statement

Statement gl_light{num.l,@posx.f,@posy.f,@posz.f,@_red.f,@_green.f,@_blue.f};num 0-7 posz 0-3000
  glLoadIdentity_
  If posx <> -1
    If gl_globaldata\xsize
      posx=posx+gl_globaldata\xsize:posy=gl_globaldata\ysize-posy
    End If
    glLightf_  #GL_LIGHT0+num, #GL_SPOT_CUTOFF,40;spotlight_cutoff
    glLightf_  #GL_LIGHT0+num, #GL_SPOT_EXPONENT,80;spotlight_exponent
    LightPosition.fv\r =posx,posy, posz, 1.0
    ;glLightfv_ #GL_LIGHT0+num,#GL_SPOT_DIRECTION,spotlightDirection
  Else
    glLightf_  #GL_LIGHT0+num, #GL_SPOT_CUTOFF,180;spotlight_cutoff
    glLightf_  #GL_LIGHT0+num, #GL_SPOT_EXPONENT,0;spotlight_exponent
    LightPosition.fv\r =0,0,2, 1.0
  End If
  If _red=-1 Then _red=255
  If _green=-1 Then _green=_red
  If _blue=-1 Then _blue=_green


  ;spotlightDirection.fv\r =posx, posy,0, 1.0
  LightAmbient.fv\r= _red*\bytetof,_green*\bytetof,_blue*\bytetof, 1.0 ;    // Ambient Light Values ( NEW )
  LightDiffuse.fv\r= _red*\bytetof,_green*\bytetof,_blue*\bytetof,1 ;   // Diffuse Light Values ( NEW )
  specularLight.fv\r= 1, 1,1, 1.0

  glLightfv_ #GL_LIGHT0+num,#GL_SPECULAR,specularLight
  glLightfv_ #GL_LIGHT0+num, #GL_AMBIENT, LightAmbient;   // Setup The Ambient Light
  glLightfv_ #GL_LIGHT0+num, #GL_DIFFUSE, LightDiffuse;   // Setup The Diffuse Light
  glLightfv_ #GL_LIGHT0+num, #GL_POSITION,LightPosition;  // Position The Light
  glEnable_ #GL_LIGHT0+num
End Statement


Statement FAST gl_color {r.f,@g.f,@b.f};set color from 0-255 r par mean r to g and b
  If g=-1 Then g=r
  If b=-1 Then b=g
  \_red=r*\bytetof,g*\bytetof,b*\bytetof
End Statement

Statement FAST gl_textcolor {r.f,@g.f,@b.f,@transparency.f};set color from 0-255 r par mean r to g and b
  If g=-1 Then g=r
  If b=-1 Then b=g
  \textred=r*\bytetof,g*\bytetof,b*\bytetof
End Statement

Statement gl_scale {x.f,@y.f,@z.f};scale only x par mean x y and z same
  If y=-1 Then y=x
  If z=-1 Then z=y
  \scalx=x,y,z
End Statement


Statement gl_2dview {x.l,y.l};set size of view or 0 for default ogl view (zero in mid and y- move to buttom)
  gl_globaldata\xsize=(-x/2):gl_globaldata\zsize=-x:gl_globaldata\ysize=y/2
  ;gl_globaldata\reversey=reversey
End Statement

Statement gl_texcoord {objectnum.l,x.f,y.f,width.f,height.f}
  \\texx=x/(\\width*2)
  \\texy=y/(\\height*2)
  \\texw=width/(\\width*2)+\\texx
  \\texh=height/(\\height*2)+\\texy
End Statement

Statement gl_texmode {@mode.l};1 nearest 2 linear 3 sperical (or ogl constants #GL_xxxx)
  If mode=1 Then mode=#GL_NEAREST:
  If mode=2 Then mode=#GL_LINEAR
  If mode=3
    glTexGeni_ #GL_S,#GL_TEXTURE_GEN_MODE,#GL_SPHERE_MAP; // Set The Texture Generation Mode ??? S ??? Sphere Mapping (??)
    glTexGeni_ #GL_T,#GL_TEXTURE_GEN_MODE,#GL_SPHERE_MAP
    glEnable_ #GL_TEXTURE_GEN_S;                                 // ??? Texture Coord Generation ??? S (??)
    glEnable_ #GL_TEXTURE_GEN_T;                                 // ??? Texture Coord Generation ??? T (??)
    mode = #GL_LINEAR
  Else
    glDisable_ #GL_TEXTURE_GEN_S;                                 // ??? Texture Coord Generation ??? S (??)
    glDisable_ #GL_TEXTURE_GEN_T;
  End If

  glTexParameteri_ #GL_TEXTURE_2D,@@         ;     // Set 2D Texture Parameter
                   #GL_TEXTURE_MIN_FILTER,@@;      // Select Minification Filter Type
                   mode;            ;      // Set To GL_NEAREST (Blocky & Fastest)
  glTexParameteri_ #GL_TEXTURE_2D,@@         ;     // Set 2D Texture Parameter
                   #GL_TEXTURE_MAG_FILTER,@@ ;     // Select Magnification Filter Type
                   mode;                    // Set To GL_LINEAR (Smoothest & Slowest)
End Statement

Statement gl_reset {};set color from 0-255 r par mean r to g and b
  gl_globaldata\scalx=1,1,1:gl_globaldata\_red=1,1,1
  gl_texmode {2}
End Statement

Statement gl_sphere {objectnum.l,width.f,@texturenum.l,@slices.l,@stacks.l};texture can set if that is not objectnum
  \\mode=2
  If slices=-1 Then slices=\slices
  If stacks=-1 Then stacks=\stacks
  \\texnum=texturenum+1
  ogl_objectstruct(objectnum)\width=ogl_objectstruct(texturenum)\width
  glDeleteLists_ objectnum+1,1
  glNewList_ objectnum+1,#GL_COMPILE
  gluSphere_ \quadric,width,slices,stacks
  glEndList_
End Statement

Statement gl_quad {objectnum.l,width.f,height.f,depth_.f,texfront.f,@texback.l,@textop.l,@texbuttom.l,@texleft.l,@texright.l};texture can set if that is not objectnum
  \\mode=3
  If texback=-1 Then texback=texfront
  If textop=-1 Then textop=texback
  If texbuttom=-1 Then texbuttom=texback
  If texleft=-1 Then texleft=texbuttom
  If texright=-1 Then texright=texleft
  FreeMem \\objdat,0
  \\objdat=AllocMem (SizeOf.quad,0)
  *ptr.quad=\\objdat
  *ptr\width=width,height,depth_
  *ptr\texfront=texfront,texback,textop,texbuttom,texleft,texright
End Statement
 

Statement gl_cylinder {objectnum.l,height.f,baseradius.f,@topradius.f,@texturenum.l,@slices.l,@stacks.l};texture can set if that is not objectnum
  \\mode=2
  If slices=-1 Then slices=\slices
  If stacks=-1 Then stacks=\stacks
  If topradius=-1 Then topradius=baseradius
  \\texnum=texturenum+1
  ogl_objectstruct(objectnum)\width=ogl_objectstruct(texturenum)\width
  glDeleteLists_ objectnum+1,1
  glNewList_ objectnum+1,#GL_COMPILE
  gluCylinder_  \quadric,baseradius,topradius,height,slices,stacks
  glEndList_
End Statement


Statement gl_usefont {objectnum.l,tilewidth.l,tileheight.l,@scal.f}
  ;% {objectnum.l,tilewidth.l,tileheight.l,@scal.f}
  ;% Statement allow to use a image for Text or Game Tile Blitting
  ;% tilewidth = the width of each tile
  ;% tilehight = the height of each tile
  ;% Width must fit exact tilewidth.The tiles per row is calculate automatic
  ;% the first tile has the number 32
  ;%-------------
  ;% gl_usefont{0,32,32}           ;use pic 0 and 32*32 tiles
  ;% gl_textcolor{200,100,100,100} ;change the color and alpha if you dont like the defaults
  ;% gl_print{"hello"}
  \fonttpl=\\width*2/tilewidth
  \tilewidth=tilewidth
  \tileheight=tileheight
  \fontobjectnum=objectnum
  If scal=-1 Then scal=1
  \fontscale=scal
  \alpha=255:
End Statement


Statement gl_blit {objectnum.l,xval.f,yval.f,@zval.f,@transparency.f,@rotatex.f,@rotatey.f,@rotatez.f}
   glLoadIdentity_;                           // Reset Matrix
   If transparency=-1
     glBlendFunc_ #GL_SRC_ALPHA,#GL_ONE_MINUS_SRC_ALPHA
     glColor4f_ \_red,\_green,\_blue,1
     glEnable_(#GL_BLEND)
     glEnable_(#GL_DEPTH_TEST)
   Else
     glColor4f_ \_red,\_green,\_blue,transparency*\bytetof
     glBlendFunc_ #GL_SRC_ALPHA,1
     glEnable_(#GL_BLEND)
     glEnable_(#GL_DEPTH_TEST)
   End If

   If ogl_objectstruct(objectnum)\width <> 0
     glEnable_ #GL_TEXTURE_2D;
     glBindTexture_ #GL_TEXTURE_2D,@@        ;        // Bind/Select A 2D Texture
                    ogl_objectstruct(objectnum)\texnum; // Bind/Select Second Texture
   Else
     glDisable_ #GL_TEXTURE_2D;
   End If

   If zval=-1 Then zval = 0
   If gl_globaldata\xsize
     glTranslatef_ xval+gl_globaldata\xsize ,gl_globaldata\ysize -yval,zval+gl_globaldata\zsize+21
     If \\mode=1
       scx.f=\scalx*ogl_objectstruct(objectnum)\width
       scy.f= \scaly*ogl_objectstruct(objectnum)\height
     End If

     If \\mode=2
       glScalef_ \scalx, \scaly,\scalz
     End If

     If \\mode=3
       *quaddat.quad=\\objdat
       scx.f=\scalx* *quaddat\width
       scy.f= \scaly* *quaddat\height
       scz.f= \scalz* *quaddat\depth_
     End If
   Else
     glTranslatef_ xval,yval,zval ;
     glScalef_ \scalx, \scaly,\scalz
   End If

   If rotatex<>-1
     glRotatef_ rotatex, 1.0, 0.0, 0.0;         // Rotate Around Y-Axis
   End If
   If rotatey<>-1
     glRotatef_ rotatey, 0.0, 1.0, 0.0;         // Rotate Around Y-Axis
   End If
   If rotatez<>-1
     glRotatef_ rotatez, 0.0, 0.0, 1.0;         // Rotate Around Y-Axis
   End If

   Select \\mode
   Case 1

        ;/********************************************
        ;As stated in the accompanying tutorial
        ;  (AND To refresh your mind...;)), the
        ;  texture coordinates are set up like so:

        ;  (0,1)           (1,1)
        ;    +---------------+
        ;     |               |
        ;     |               |
        ;     | My Texture... |
        ;     |               |
        ;     |               |
        ;     |               |
        ;     +---------------+
        ;(0,0)           (1,0)


        ;These coordinates are what you Use inside
        ;  glTexCoord2f().


     glBegin_ #GL_QUADS;                               // I Want ??? Draw A Quadrilateral!...:)
     glTexCoord2f_ \\texx,\\texh;                 //
     glVertex3f_ -1*scx,-1.0*scy, 0;

     glTexCoord2f_ \\texw, \\texh ;                 // Upper Right Of Texture
     glVertex3f_ 1.0*scx,-1.0*scy, 0;

     glTexCoord2f_ \\texw, \\texy  ;               // Upper Left Of Texture
     glVertex3f_ 1.0*scx,1.0*scy,0

     glTexCoord2f_ \\texx, \\texy  ;                // Lower Left Of Texture
     glVertex3f_ -1.0*scx,1.0*scy, 0.0
     glEnd_
   Case 2
     ;gluSphere_ \quadric,100,10,10
     glCallList_ objectnum+1
   Case 3
     ;// Top Face
     glEnable_ #GL_TEXTURE_2D;
     glBindTexture_ #GL_TEXTURE_2D,*quaddat\texfront+1        ;        // Bind/Select A 2D Texture
     glBegin_ #GL_QUADS;
     ;front face

     ;  top face

     glNormal3f_  0.0, 1.0, 0.0;
     glTexCoord2f_ 0.0, 1.0: glVertex3f_ -1.0*scx,  1.0*scy, -1.0*scz;
     glTexCoord2f_ 0.0, 0.0: glVertex3f_-1.0*scx,  1.0*scy,  1.0*scz;
     glTexCoord2f_ 1.0, 0.0: glVertex3f_ 1.0*scx,  1.0*scy,  1.0*scz;
     glTexCoord2f_ 1.0, 1.0: glVertex3f_ 1.0*scx,  1.0*scy, -1.0*scz;

     ;  // Bottom Face
     glNormal3f_ 0.0,-1.0, 0.0
     glTexCoord2f_ 1.0, 1.0:glVertex3f_ -1.0*scx, -1.0*scy, -1.0*scz
     glTexCoord2f_ 0.0, 1.0:glVertex3f_ 1.0*scx, -1.0*scy, -1.0*scz
     glTexCoord2f_ 0.0, 0.0:glVertex3f_  1.0*scx, -1.0*scy,  1.0*scz
     glTexCoord2f_ 1.0, 0.0:glVertex3f_ -1.0*scx, -1.0*scy,  1.0*scz

     ;  // Right face
     glNormal3f_ 1.0, 0.0, 0.0
     glTexCoord2f_ 1.0, 0.0: glVertex3f_ 1.0*scx, -1.0*scy, -1.0*scz
     glTexCoord2f_ 1.0, 1.0: glVertex3f_ 1.0*scx,  1.0*scy, -1.0*scz
     glTexCoord2f_ 0.0, 1.0: glVertex3f_ 1.0*scx,  1.0*scy,  1.0*scz
     glTexCoord2f_ 0.0, 0.0: glVertex3f_ 1.0*scx, -1.0*scy,  1.0*scz

     ;  // Left Face
     glNormal3f_ -1.0, 0.0, 0.0
     glTexCoord2f_ 0.0, 0.0: glVertex3f_ -1.0*scx, -1.0*scy, -1.0*scz
     glTexCoord2f_ 1.0, 0.0: glVertex3f_ -1.0*scx, -1.0*scy,  1.0*scz
     glTexCoord2f_ 1.0, 1.0: glVertex3f_ -1.0*scx,  1.0*scy,  1.0*scz
     glTexCoord2f_ 0.0, 1.0: glVertex3f_ -1.0*scx,  1.0*scy, -1.0*scz

     glNormal3f_  0.0, 0.0, 1.0
     glTexCoord2f_ 0.0, 0.0: glVertex3f_ -1.0*scx, -1.0*scy,  1.0*scz
     glTexCoord2f_ 1.0, 0.0: glVertex3f_  1.0*scx, -1.0*scy,  1.0*scz
     glTexCoord2f_ 1.0, 1.0: glVertex3f_  1.0*scx,  1.0*scy,  1.0*scz
     glTexCoord2f_ 0.0, 1.0: glVertex3f_ -1.0*scx,  1.0*scy,  1.0*scz
     ;  // Back Face
     glNormal3f_  0.0, 0.0,-1.0
     glTexCoord2f_ 1.0, 0.0: glVertex3f_ -1.0*scx, -1.0*scy, -1.0*scz
     glTexCoord2f_ 1.0, 1.0: glVertex3f_ -1.0*scx,  1.0*scy, -1.0*scz
     glTexCoord2f_ 0.0, 1.0: glVertex3f_  1.0*scx,  1.0*scy, -1.0*scz
     glTexCoord2f_ 0.0, 0.0 :glVertex3f_ 1.0*scx, -1.0*scy, -1.0*scz
     glEnd_
   End Select
   gl_reset{}
   \\texw=1:\\texh=1:\\texx=0:\\texy=0
End Statement

;Statement gl_blit {objectnum.l,xval.f,yval.f,@zval.f,@transparency.f,@rotatex.f,@rotatey.f,@rotatez.f}
;gl_blitk {objectnum.l,xval.f,yval.f,@zval.f,@transparency.f,@rotatex.f,@rotatey.f,@rotatez.f}
;
;
;End Statement


Statement gl_print {a$,@xpos.f,@ypos.f,@scal.f}
  If xpos <> -1 Then \textposx=xpos
  If ypos <> -1 Then \textposy=ypos
  If \fonttpl=0 Then Statement Return
  If scal=-1 Then scal=\fontscale
  For i.l = 1 To StrLen (a$)
    c.l = Asc(Mid$(a$,i,1))
    c-32
    row.l = c / \fonttpl
    col.l = c - (row*\fonttpl)
    gl_texcoord {\fontobjectnum,col*\tilewidth,row*\tileheight,\tilewidth-4,\tileheight-4}
    xscale.f=1/(ogl_objectstruct(\fontobjectnum)\width*2/\tilewidth)*scal
    yscale.f=1/(ogl_objectstruct(\fontobjectnum)\height*2/\tileheight)*scal
    gl_scale {xscale,yscale}
    \_red=\textred,\textgreen,\textblue
    gl_blit {\fontobjectnum,\textposx+(\tilewidth*0.5*scal),\textposy+(\tileheight*0.5/(1/scal)),0,\alpha}
    \textposx+(\tilewidth*scal)
  Next
  ogl_objectstruct(\fontobjectnum)\texx=0,0,1,1
End Statement



Statement gl_nprint {a$,@xpos.f,@ypos.f,@scal.f}
  If scal=-1 Then scal=\fontscale
  gl_print {a$,xpos,ypos,scal}
  \textposy+(\tileheight*scal)+1
  \textposx=0
End Statement
 
Statement gl_show{}
SHARED *ogl_mesa
  AmigaMesaSwapBuffers_ *ogl_mesa;
  gl_reset{}
  glClear_ #GL_COLOR_BUFFER_BIT |#GL_DEPTH_BUFFER_BIT;
End Statement

Function.l gl_load {objectnum.l,a$,@trgb.l};option par of mask
SHARED imagedat(),ogl_objectstruct()
  ;USEPATH ogl_objectstruct(imagenum)
  ret.l = image_Load {#max_images-1,a$}
  If ret
    glGenTextures_ 1,&ogl_objectstruct(objectnum)\texnum;       // Generate Texture ID
    glBindTexture_ #GL_TEXTURE_2D,@@       ;        // Bind/Select A 2D Texture
                   \\texnum; // Bind/Select First Texture
    width.l = image_GetWidth{#max_images-1}
    height.l = image_GetHeight{#max_images-1}
    \\width=width/2
    \\height=height/2
    \\texx=0
    \\texy=0
    \\texw=1
    \\texh=1
    \\mode=1
    l.l = width * height - 1
;    If ExecVersion <50
;      res.l = Peek.l(imagedat(#max_images-1)\raw_ptr+$2e)
;    Else
;      res.l = Peek.l(imagedat(#max_images-1)\raw_ptr+$30)
;    End If
;    res2.l = res
;    res3.l = res
    RunErrsOff
    res3.l= image_GetOpenGLTexturePtr{#max_images-1}
                                                                                                                                                                                                                                                      




;    For i.l = 0 To l
;      tmp.l = Peek.l(res)
;      If tmp = trgb Then tmp=0:Else tmp=255
;      If trgb=-1 Then tmp=255
;      Poke.b res,Peek.b (res2+1)
;      Poke.b res+1,Peek.b (res2+2)
;      Poke.b res+2,Peek.b (res2+3)
;      Poke.b res+3,tmp
;      res + 4 : res2 + 4
;    Next
    LastRunErrsMode
    glTexParameteri_ #GL_TEXTURE_2D,@@         ;     // Set 2D Texture Parameter
                     #GL_TEXTURE_MIN_FILTER,@@;      // Select Minification Filter Type
                     #GL_LINEAR;            ;      // Set To GL_NEAREST (Blocky & Fastest)
    glTexParameteri_ #GL_TEXTURE_2D,@@         ;     // Set 2D Texture Parameter
                     #GL_TEXTURE_MAG_FILTER,@@ ;     // Select Magnification Filter Type
                     #GL_LINEAR;                    // Set ??? GL_LINEAR (Smoothest & Slowest)

    ;glEnable_ #GL_TEXTURE_2D;
    glTexImage2D_ #GL_TEXTURE_2D, 0, 4,width,height, 0, #GL_RGBA, #GL_UNSIGNED_BYTE, res3
;     gluBuild2DMipmaps_ #GL_TEXTURE_2D,@@;            // Texture Is A 2D Texture
;                              3,@@;                        // 3 Means "RGB" Texture...=)
;                              width,@@ ;           // BitMap's Width
;                              height,@@ ;           // BitMap's Height
;                              #GL_RGBA,@@          ;         // BitMap Is RGB Format
;                              #GL_UNSIGNED_BYTE,@@;         // Type Of Data Each Pixel Is Stored
;                              res3 ;         // BitMap Data
    image_Free {#max_images-1}
  End If
  Function Return ret
End Function

CNIF #__include=0
  ;Amiblitz 2 test for opengl
  SYNTAX 2  ;the relax declare mode
  OPTIMIZE 7

  WBStartup


  .begin
  width.l=320:height.l=200
  gl_init{width,height,16,0}  ;the screen open
  gl_2dview{640,480}          ;need to set coord leftedge=0 rightedge=640 and hold size of pics
                              ;depent on this resolution
                              ;topedge=0 and buttom edge=480
                              ;on default ogl use leftedge=-1 rightedge+1 top +1 buttom -1
  gl_load {0,"/data/pattern"}
;  Stop
  gl_load {1,"/data/ball64x64",0}
  gl_load {2,"/data/opengl/reflect.jpg",0}
  gl_load {3,"/data/opengl/times32.png",0}

  gl_sphere {4,40,0,15,15}            ;create the sphere at beginning for more speed.But possible on all place
  gl_cylinder{5,110,30,50,0,15,15}    ;a cylinder with texture 0
  gl_cylinder{6,110,30,50,2,15,15}    ;another cylinder for the reflection with texture2
  gl_quad{7,50,50,50,0}
  gl_quad{8,50,50,50,2}

  .startvals
  zval.f=0:xval.f=320:yval.f=240:trans.f=255:yvallight.f=yval:rot.f=6:tsize.f=1:rot.f=84
  Repeat
    ev.l = Event
    Select ev
    Case #IDCMP_RAWKEY
      Select EventCode
      Case $4e : xval+10
      Case $4f : xval-10
      Case $4c : yval-10
      Case $4d : yval+10
      Case $13 : rot.f+6
      Case $45 : ev=#IDCMP_CLOSEWINDOW
      End Select

      Select EventVanillaKey
      Case @"q" : zval-10
      Case @"a" : zval+10
      Case @"t" : trans.f+10
      Case @"g" : trans.f-10
      Case @"m" : tpos.l+2
      Case @"Q" : yvallight.f-10
      Case @"A" : yvallight+10
      Case @"s" : tsize.f*1.01
      Case @"S" : tsize.f*0.99
      ;Case @"r" : rot.f+6
      End Select
    End Select
    FlushEvents
    ;If light Then glEnable_ #GL_LIGHTING: Else glDisable_ #GL_LIGHTING


    ;this example Show all what is possible with that 3dlib
    gl_blit{0,xval,yval} ;simple blit a image
    gl_light{ 0,320,yvallight,0,255,255,160} ;switch on a yellow spotlight
    gl_color{255,150,150}         ;tint texture red
        ;blit this image
    gl_texcoord{0,tpos,0,128*tsize,128*tsize} ;for scroll the texture with m key
    gl_blit{0,xval+128,yval}      ;and blit


    gl_light{0}                   ;now use the default light.
    gl_blit{1,200,yval,zval,-1,0,0,rot} ;another image but rotatable -1 mean make that not transparent

    ;now blit a reflective object
    gl_blit{7,xval-128,yval-128,zval,-1,rot+15,rot+15,0}
    gl_texmode{3}       ;now switch on the spherical mode for the reflect effect
    gl_blit{8,xval-128,yval-128,zval,255,rot+15,rot+15,0} ;blit the reflection map

    gl_light{ 0,220,yvallight,0,255,255,160} ;switch on a yellow spotlight for the font

    gl_usefont {3,32,32,0.3} ;use picture 3 with 32*32 tile and scale the font by 0.5
    gl_textcolor {220,220,220,200} ;we dont want the color of the bitmap
    gl_print{"test",48,200}        ;print 2 lines
    gl_nprint{" 2. Part"}          ;print 2 lines
    gl_textcolor {0,200,255}       ;change color again
    gl_print{"This is a line scale to 0.4",65,230,0.4}
    gl_light{0}                    ;default light

    gl_color{160}           ;make 2. ball a little darker only 1 color mean r g and b is set to 160
    gl_scale{2.4,1.0,1.0}   ;size the ball in x
    gl_blit{1,300,yval,zval,trans,0,0,rot} ;make the ball transparent choose with g and t
    gl_blit{4,300,100,0,-1,rot}

    gl_color{255,200,0}
    gl_scale{0.3,1,1}
    gl_blit{4,320,250,zval,-1,-1,rot,-1}     ;blit another sphere but diffrent color and size


    gl_color{140,70,140}                     ;blit a reflective cone
    gl_scale{0.5,1,1}
    gl_blit{5,180,370,zval,-1,-1,rot,-1}
    gl_scale{0.5,1,1}
    gl_texmode{3}
    gl_blit{6,180,370,zval,255,-1,rot,-1}

    gl_texmode{3}
    gl_blit{6,320,270,zval,150,-1,rot,-1}    ;blit the transparency cone

    gl_nprint{"Key r=Rotate "+Str$(rot),360,0}
    gl_nprint{"m=Move Texture",360}
    gl_nprint{"s=Size Texture",360}
    gl_nprint{"Crsr = move",360}
    gl_nprint{"q    = z +",360}
    gl_nprint{"a    = z -",360}
    gl_nprint{"Q    = Light y +",360}
    gl_nprint{"A    = Light y -",360}


    Delay_ 1
    gl_show {}  ;show the render and clear all realtime effects (it call gl_reset)
  Until ev=#IDCMP_CLOSEWINDOW
  End
CEND
