; XTRA
; Embedded .xtra Header
; 
; General Info
; -------------------------------------------------------
; ExePath         = "h0:w-pr/Blitz2/Decompiled"
; ExeFile         = "debuglib.obj"
; CreateIcon      = 0
; Residents       = "blitzlibs:all.res"
; 
; Compiler
; -------------------------------------------------------
; StringBuffer    = 10240
; MakeSmallest    = 1
; FuncOptimize    = 1
; Version         = 0.0.0
; NumberOfBuilds  = 0
; 
; Debugger
; -------------------------------------------------------
; CliArgs         = ""
; StackSize       = 8191
; RuntimeDebug    = 0
; DebugInfo       = 0
; CreateDbgFile   = 0
; OverflowCheck   = 1
; AssemblerCheck  = 0
; InterruptCheck  = 1
; AutoRun         = 1
; 
; Editor
; -------------------------------------------------------
; CursorLine      = 26
; CursorColumn    = 1
; LabelSearch     = "proc"
; LabelRemark     = 0
; LabelAll        = 0
; LabelPosition   = 0
; 
; Blitz Objects
; -------------------------------------------------------
; Max IconInfo    = 1
; Max NChunky     = 50
; Max MUIObject   = 50
; Max PTModule    = 5
; Max AsyncReq    = 4
; Max Req-Lib     = 5
; Max GTMenuList  = 5
; Max Console     = 5
; Max TCPSock     = 5
; Max XBSound     = 10
; Max Chunky      = 20
; Max File        = 5
; Max GadgetList  = 5
; Max Queue       = 10
; Max Screen      = 5
; Max Shape       = 100
; Max CopList     = 10
; Max Sprite      = 20
; Max Stencil     = 5
; Max Module      = 5
; Max Window      = 5
; Max Anim        = 10
; Max Sound       = 10
; Max Bank        = 5
; Max Buffer      = 10
; Max BitMap      = 10
; Max Slice       = 10
; Max Page        = 4
; Max Tape        = 5
; Max IntuiFont   = 5
; Max MedModule   = 8
; Max Palette     = 4
; Max MenuList    = 5
; Max BlitzFont   = 4
; Max GTList      = 5
; /XTRA
WBStartup

#MUIO_Label_SingleFrame =(1 LSL 8)
#MUIO_Label_DoubleFrame =(1 LSL 9)
#MUIO_Label_LeftAligned =(1 LSL 10)

DEFTYPE.l

__ppc$=Chr$(27)+"c"
__ppr$=Chr$(27)+"r"

Dim mytags.TagItem(20) ; Dimensionierung f|r TagListe etc.
Dim method.l(20)
Dim methodloop.l(20)
Dim stringarray$(3)
stringarray$(0)="Both" ; Erstellen eines Radio/Cycle Eintrages
stringarray$(1)="Dirs"
stringarray$(2)="Files"
Dim dkind(3)
dkind(0)=&stringarray$(0)
dkind(1)=&stringarray$(1)
dkind(2)=&stringarray$(2)

b$="Suxx"

*but=MUI_KeyButton(b$,Asc("s")) ; Ein Button-Gadget erstellen

c$="Hurz"
*but2=MUI_KeyString(c$,Asc("n"),30) ; String-Gadget
*MUIList=MUI_ListA(#MUIA_Frame,#MUIV_Frame_ReadList) ; Eine MUI-Liste
*but3=MUI_ListViewA(#MUIA_Listview_List,*MUIList) ; Listview-Gadget erstellen
                                                  ; und mit MUI-Liste verkn|pfen

*but4=MUI_KeyRadio(dkind(),Asc("x")) ; Radio-Gadget
*but5=MUI_KeyCycle(dkind(),Asc("f")) ; Cycle-Gadgets
*but6=MUI_PaletteA(0) ; Palette-Gadget
*but7=MUI_KeySlider(-5,100,1,Asc("i")) ; Slider-Gadget
*but8=MUI_ScrollBar(0) ; ScrollBar
*but9=MUI_KeyCheckMark(1) ; CehckBox-Gadget
*but10=MUI_PopButton(11) ; Shape-Gadget
*but11=MUI_KeyLabel("Life suxx:",#MUIO_Label_SingleFrame|Asc("l")) ; Label
*but12=MUI_VSpace(10) ; Abstand setzen

; Erstellen einer Horizontalen Gruppe (wegen dem Tag #MUIA_Group_Hor!z!)
*group=MUI_VGroupA(#MUIA_Group_Horiz,1,#Child,*but11,#Child,*but,#Child,*but12,#Child,*but8,#Child,*but2)
; Erstellen einer Vertikalen Gruppe
*vgroup=MUI_VGroupA(#Child,*group,#Child,*but3,#Child,*but4,#Child,*but5,#Child,*but6,#Child,*but7,#Child,*but9,#Child,*but10)
;*sgroup=MUI_ScrollGroupA(#MUIA_Scrollgroup_Contents,*vgroup)

; Window vffnen und mit Gruppe verbinden
w_title$="Suxx"
*muiwindow=MUI_EasyWindow(w_title$,"MAIN",*vgroup)

;***********************************************************************

; Applikation speziefische Daten erstellen
a_title$="MUITEST"
a_version$="$VER: MUITEST 0.1 (08.08.94)"
a_copy$="1994, Nobody"
a_author$="Andre Bergmann"
a_desc$="The ultimate MUI-Test ..."
a_base$="MUITEST"

; TagListe f|r Applikation
mytags(0)\ti_Tag=#MUIA_Application_Title,&a_title$
mytags(1)\ti_Tag=#MUIA_Application_Version,&a_version$
mytags(2)\ti_Tag=#MUIA_Application_Copyright,&a_copy$
mytags(3)\ti_Tag=#MUIA_Application_Author,&a_author$
mytags(4)\ti_Tag=#MUIA_Application_Description,&a_desc$
mytags(5)\ti_Tag=#MUIA_Application_Base,&a_base$
mytags(6)\ti_Tag=#SubWindow,*muiwindow
mytags(7)\ti_Tag=#TAG_DONE

; Applikation aufrufen
*muiapp=MUI_App(&mytags(0))

#ID_CANCEL=1

; Kein Fehler bisher?
If *muiapp

;***********************************************************************

;***********************
; Notify: CloseGadget  *
;***********************

method(0)=#MUIM_Notify
method(1)=#MUIA_Window_CloseRequest
method(2)=1
method(3)=*muiapp
method(4)=2
method(5)=#MUIM_Application_ReturnID
method(6)=#ID_CANCEL
DoMethodA *muiwindow,&method(0)

;***********************
; LoadEnv              *
;***********************

method(0)=#MUIM_Application_Load
method(1)=#MUIV_Application_Load_ENV
method(2)=#TAG_DONE
DoMethodA *muiapp,&method(0)

;********************
; Window ffnen     *
;********************

SetAttrsA_ *muiwindow,Tags(#MUIA_Window_Open,1)

methodloop(0)=#MUIM_Application_Input
methodloop(1)=&signals.l

running=True
While running
  returnid=DoMethodA(*muiapp,&methodloop(0)) ; Nachricht an MUI auslesen
  Select returnid
  Case #ID_CANCEL
    running=False
  End Select
  If running & signals Then r=Wait_(signals|timmask) ; Auf Nachricht warten

Wend

; Window schlie_en
SetAttrsA_ *muiwindow,Tags(#MUIA_Window_Open,False)

; Applikation entfernen
MUI_DisposeObject *muiapp

EndIf

End
