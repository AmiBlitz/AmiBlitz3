00000008 <AmiBlitz3.ab2@0> 
00000014 <AmiBlitz3.ab2@44> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab2@67> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab2@68> !basic
000000AC <AmiBlitz3.ab2@73> cli_verbose = -1
000000B2 <AmiBlitz3.ab2@74> CLIMode     = False
000000C8 <AmiBlitz3.ab2@75> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab2@76> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab2@77> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab2@81> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.bb2@1> XINCLUDE "dos.include.bb2"
0000010E <error.include.bb2@1> XINCLUDE "dos.include.bb2"
00000146 <error.include.bb2@62> XINCLUDE "dos.include.bb2"
0000016E <error.include.bb2@63> XINCLUDE "dos.include.bb2"
00000196 <error.include.bb2@64> XINCLUDE "dos.include.bb2"
000001BE <error.include.bb2@65> XINCLUDE "dos.include.bb2"
000001C4 <error.include.bb2@66> XINCLUDE "dos.include.bb2"
000001F8 <error.include.bb2@67> XINCLUDE "dos.include.bb2"
0000022C <error.include.bb2@68> XINCLUDE "dos.include.bb2"
00000260 <error.include.bb2@69> XINCLUDE "dos.include.bb2"
0000027C <error.include.bb2@73> XINCLUDE "dos.include.bb2"
00000296 <error.include.bb2@99> XINCLUDE "dos.include.bb2"
000002A2 <error.include.bb2@101> XINCLUDE "dos.include.bb2"
000002A6 <error.include.bb2@102> XINCLUDE "dos.include.bb2"
000002B4 <error.include.bb2@104> XINCLUDE "dos.include.bb2"
000002E6 <error.include.bb2@124> XINCLUDE "dos.include.bb2"
0000036A <error.include.bb2@126> XINCLUDE "dos.include.bb2"
00000384 <error.include.bb2@128> XINCLUDE "dos.include.bb2"
000003BC <error.include.bb2@129> XINCLUDE "dos.include.bb2"
0000041C <error.include.bb2@130> XINCLUDE "dos.include.bb2"
0000042A <error.include.bb2@132> XINCLUDE "dos.include.bb2"
00000438 <error.include.bb2@133> XINCLUDE "dos.include.bb2"
00000446 <error.include.bb2@134> XINCLUDE "dos.include.bb2"
00000454 <error.include.bb2@135> XINCLUDE "dos.include.bb2"
0000047C <error.include.bb2@136> XINCLUDE "dos.include.bb2"
0000048A <error.include.bb2@137> XINCLUDE "dos.include.bb2"
00000492 <error.include.bb2@138> XINCLUDE "dos.include.bb2"
000004C4 <error.include.bb2@140> XINCLUDE "dos.include.bb2"
000004DE <error.include.bb2@145> XINCLUDE "dos.include.bb2"
00000516 <error.include.bb2@146> XINCLUDE "dos.include.bb2"
0000051C <error.include.bb2@147> XINCLUDE "dos.include.bb2"
00000560 <error.include.bb2@148> XINCLUDE "dos.include.bb2"
000005A8 <error.include.bb2@149> XINCLUDE "dos.include.bb2"
000005B2 <error.include.bb2@153> XINCLUDE "dos.include.bb2"
000005CA <error.include.bb2@155> XINCLUDE "dos.include.bb2"
00000604 <error.include.bb2@194> XINCLUDE "dos.include.bb2"
0000060C <error.include.bb2@196> XINCLUDE "dos.include.bb2"
0000062E <error.include.bb2@198> XINCLUDE "dos.include.bb2"
0000068E <error.include.bb2@199> XINCLUDE "dos.include.bb2"
0000069C <error.include.bb2@201> XINCLUDE "dos.include.bb2"
000006AA <error.include.bb2@202> XINCLUDE "dos.include.bb2"
000006B8 <error.include.bb2@203> XINCLUDE "dos.include.bb2"
000006C6 <error.include.bb2@204> XINCLUDE "dos.include.bb2"
0000072C <error.include.bb2@205> XINCLUDE "dos.include.bb2"
0000073A <error.include.bb2@206> XINCLUDE "dos.include.bb2"
00000770 <error.include.bb2@209> XINCLUDE "dos.include.bb2"
0000077A <error.include.bb2@213> XINCLUDE "dos.include.bb2"
00000796 <error.include.bb2@214> XINCLUDE "dos.include.bb2"
00000796 <multilist.include.bb2@1> XINCLUDE "dos.include.bb2"
00000796 <strptr.include.bb2@1> XINCLUDE "dos.include.bb2"
00000796 <useful.include.bb2@1> XINCLUDE "dos.include.bb2"
000007C4 <useful.include.bb2@220> XINCLUDE "dos.include.bb2"
000007CE <useful.include.bb2@221> XINCLUDE "dos.include.bb2"
000007E2 <useful.include.bb2@222> XINCLUDE "dos.include.bb2"
000007EA <useful.include.bb2@223> XINCLUDE "dos.include.bb2"
00000812 <useful.include.bb2@224> XINCLUDE "dos.include.bb2"
00000838 <useful.include.bb2@225> XINCLUDE "dos.include.bb2"
00000854 <useful.include.bb2@228> XINCLUDE "dos.include.bb2"
00000862 <useful.include.bb2@229> XINCLUDE "dos.include.bb2"
00000884 <useful.include.bb2@230> XINCLUDE "dos.include.bb2"
0000088C <useful.include.bb2@233> XINCLUDE "dos.include.bb2"
00000894 <useful.include.bb2@234> XINCLUDE "dos.include.bb2"
0000089A <useful.include.bb2@235> XINCLUDE "dos.include.bb2"
000008B6 <useful.include.bb2@236> XINCLUDE "dos.include.bb2"
000008D8 <useful.include.bb2@237> XINCLUDE "dos.include.bb2"
000008EA <useful.include.bb2@238> XINCLUDE "dos.include.bb2"
000008F0 <useful.include.bb2@239> XINCLUDE "dos.include.bb2"
00000936 <useful.include.bb2@240> XINCLUDE "dos.include.bb2"
00000938 <useful.include.bb2@241> XINCLUDE "dos.include.bb2"
00000946 <useful.include.bb2@243> XINCLUDE "dos.include.bb2"
00000962 <useful.include.bb2@245> XINCLUDE "dos.include.bb2"
000009C0 <useful.include.bb2@246> XINCLUDE "dos.include.bb2"
000009C6 <useful.include.bb2@247> XINCLUDE "dos.include.bb2"
000009D4 <useful.include.bb2@248> XINCLUDE "dos.include.bb2"
000009E8 <useful.include.bb2@249> XINCLUDE "dos.include.bb2"
000009FA <useful.include.bb2@250> XINCLUDE "dos.include.bb2"
00000A08 <useful.include.bb2@251> XINCLUDE "dos.include.bb2"
00000A0E <useful.include.bb2@252> XINCLUDE "dos.include.bb2"
00000A18 <useful.include.bb2@253> XINCLUDE "dos.include.bb2"
00000A2C <useful.include.bb2@256> XINCLUDE "dos.include.bb2"
00000A40 <useful.include.bb2@257> XINCLUDE "dos.include.bb2"
00000A52 <useful.include.bb2@258> XINCLUDE "dos.include.bb2"
00000A60 <useful.include.bb2@259> XINCLUDE "dos.include.bb2"
00000A7C <useful.include.bb2@260> XINCLUDE "dos.include.bb2"
00000A82 <useful.include.bb2@261> XINCLUDE "dos.include.bb2"
00000A94 <useful.include.bb2@265> XINCLUDE "dos.include.bb2"
00000A9E <useful.include.bb2@266> XINCLUDE "dos.include.bb2"
00000AA6 <useful.include.bb2@267> XINCLUDE "dos.include.bb2"
00000AC2 <useful.include.bb2@268> XINCLUDE "dos.include.bb2"
00000AC8 <useful.include.bb2@269> XINCLUDE "dos.include.bb2"
00000AF2 <useful.include.bb2@270> XINCLUDE "dos.include.bb2"
00000AF8 <useful.include.bb2@272> XINCLUDE "dos.include.bb2"
00000B06 <useful.include.bb2@273> XINCLUDE "dos.include.bb2"
00000B1E <useful.include.bb2@274> XINCLUDE "dos.include.bb2"
00000B36 <useful.include.bb2@275> XINCLUDE "dos.include.bb2"
00000B4E <useful.include.bb2@276> XINCLUDE "dos.include.bb2"
00000B50 <useful.include.bb2@278> XINCLUDE "dos.include.bb2"
00000B5E <useful.include.bb2@279> XINCLUDE "dos.include.bb2"
00000B80 <useful.include.bb2@280> XINCLUDE "dos.include.bb2"
00000C12 <useful.include.bb2@281> XINCLUDE "dos.include.bb2"
00000C20 <useful.include.bb2@283> XINCLUDE "dos.include.bb2"
00000C26 <useful.include.bb2@284> XINCLUDE "dos.include.bb2"
00000C50 <useful.include.bb2@285> XINCLUDE "dos.include.bb2"
00000C6E <useful.include.bb2@286> XINCLUDE "dos.include.bb2"
00000C6E <strptr.include.bb2@31> XINCLUDE "dos.include.bb2"
00000C98 <strptr.include.bb2@33> XINCLUDE "dos.include.bb2"
00000CB2 <strptr.include.bb2@84> XINCLUDE "dos.include.bb2"
00000CBC <strptr.include.bb2@85> XINCLUDE "dos.include.bb2"
00000D0C <strptr.include.bb2@86> XINCLUDE "dos.include.bb2"
00000D10 <strptr.include.bb2@88> XINCLUDE "dos.include.bb2"
00000D3E <strptr.include.bb2@137> XINCLUDE "dos.include.bb2"
00000D48 <strptr.include.bb2@138> XINCLUDE "dos.include.bb2"
00000D98 <strptr.include.bb2@139> XINCLUDE "dos.include.bb2"
00000DAC <strptr.include.bb2@140> XINCLUDE "dos.include.bb2"
00000DBE <strptr.include.bb2@141> XINCLUDE "dos.include.bb2"
00000DE6 <strptr.include.bb2@142> XINCLUDE "dos.include.bb2"
00000DF0 <strptr.include.bb2@143> XINCLUDE "dos.include.bb2"
00000DFE <strptr.include.bb2@144> XINCLUDE "dos.include.bb2"
00000E08 <strptr.include.bb2@145> XINCLUDE "dos.include.bb2"
00000E30 <strptr.include.bb2@146> XINCLUDE "dos.include.bb2"
00000E4A <strptr.include.bb2@147> XINCLUDE "dos.include.bb2"
00000E62 <strptr.include.bb2@151> XINCLUDE "dos.include.bb2"
00000E7C <strptr.include.bb2@213> XINCLUDE "dos.include.bb2"
00000E86 <strptr.include.bb2@214> XINCLUDE "dos.include.bb2"
00000E94 <strptr.include.bb2@215> XINCLUDE "dos.include.bb2"
00000EC6 <strptr.include.bb2@216> XINCLUDE "dos.include.bb2"
00000EE4 <strptr.include.bb2@218> XINCLUDE "dos.include.bb2"
00000EEE <strptr.include.bb2@219> XINCLUDE "dos.include.bb2"
00000F04 <strptr.include.bb2@221> XINCLUDE "dos.include.bb2"
00000F0E <strptr.include.bb2@222> XINCLUDE "dos.include.bb2"
00000F1E <strptr.include.bb2@223> XINCLUDE "dos.include.bb2"
00000F26 <strptr.include.bb2@224> XINCLUDE "dos.include.bb2"
00000F28 <strptr.include.bb2@226> XINCLUDE "dos.include.bb2"
00000F56 <strptr.include.bb2@227> XINCLUDE "dos.include.bb2"
00000F56 <multilist.include.bb2@44> XINCLUDE "dos.include.bb2"
00000F6C <multilist.include.bb2@61> XINCLUDE "dos.include.bb2"
00000F86 <multilist.include.bb2@406> XINCLUDE "dos.include.bb2"
00000F90 <multilist.include.bb2@407> XINCLUDE "dos.include.bb2"
00000FB2 <multilist.include.bb2@408> XINCLUDE "dos.include.bb2"
00000FD6 <multilist.include.bb2@409> XINCLUDE "dos.include.bb2"
00000FE8 <multilist.include.bb2@410> XINCLUDE "dos.include.bb2"
00001000 <multilist.include.bb2@411> XINCLUDE "dos.include.bb2"
00001014 <multilist.include.bb2@412> XINCLUDE "dos.include.bb2"
00001026 <multilist.include.bb2@415> XINCLUDE "dos.include.bb2"
00001036 <multilist.include.bb2@416> XINCLUDE "dos.include.bb2"
0000103C <multilist.include.bb2@417> XINCLUDE "dos.include.bb2"
0000104C <multilist.include.bb2@418> XINCLUDE "dos.include.bb2"
0000105C <multilist.include.bb2@419> XINCLUDE "dos.include.bb2"
00001076 <multilist.include.bb2@420> XINCLUDE "dos.include.bb2"
0000107A <multilist.include.bb2@422> XINCLUDE "dos.include.bb2"
00001094 <multilist.include.bb2@585> XINCLUDE "dos.include.bb2"
000010C4 <multilist.include.bb2@586> XINCLUDE "dos.include.bb2"
000010CE <multilist.include.bb2@588> XINCLUDE "dos.include.bb2"
000010D8 <multilist.include.bb2@589> XINCLUDE "dos.include.bb2"
000010FA <multilist.include.bb2@590> XINCLUDE "dos.include.bb2"
0000111E <multilist.include.bb2@591> XINCLUDE "dos.include.bb2"
00001130 <multilist.include.bb2@592> XINCLUDE "dos.include.bb2"
00001148 <multilist.include.bb2@593> XINCLUDE "dos.include.bb2"
0000115C <multilist.include.bb2@594> XINCLUDE "dos.include.bb2"
0000116E <multilist.include.bb2@597> XINCLUDE "dos.include.bb2"
0000117E <multilist.include.bb2@598> XINCLUDE "dos.include.bb2"
00001184 <multilist.include.bb2@599> XINCLUDE "dos.include.bb2"
00001194 <multilist.include.bb2@600> XINCLUDE "dos.include.bb2"
000011A4 <multilist.include.bb2@601> XINCLUDE "dos.include.bb2"
000011BE <multilist.include.bb2@602> XINCLUDE "dos.include.bb2"
000011C4 <multilist.include.bb2@603> XINCLUDE "dos.include.bb2"
000011CA <multilist.include.bb2@604> XINCLUDE "dos.include.bb2"
000011CE <multilist.include.bb2@605> XINCLUDE "dos.include.bb2"
000011E8 <multilist.include.bb2@713> XINCLUDE "dos.include.bb2"
000011F0 <multilist.include.bb2@714> XINCLUDE "dos.include.bb2"
000011FA <multilist.include.bb2@715> XINCLUDE "dos.include.bb2"
00001210 <multilist.include.bb2@716> XINCLUDE "dos.include.bb2"
00001224 <multilist.include.bb2@717> XINCLUDE "dos.include.bb2"
00001248 <multilist.include.bb2@718> XINCLUDE "dos.include.bb2"
00001256 <multilist.include.bb2@721> XINCLUDE "dos.include.bb2"
00001260 <multilist.include.bb2@722> XINCLUDE "dos.include.bb2"
00001266 <multilist.include.bb2@723> XINCLUDE "dos.include.bb2"
00001270 <multilist.include.bb2@724> XINCLUDE "dos.include.bb2"
00001276 <multilist.include.bb2@725> XINCLUDE "dos.include.bb2"
00001294 <multilist.include.bb2@742> XINCLUDE "dos.include.bb2"
0000129C <multilist.include.bb2@743> XINCLUDE "dos.include.bb2"
000012A6 <multilist.include.bb2@744> XINCLUDE "dos.include.bb2"
000012C4 <multilist.include.bb2@745> XINCLUDE "dos.include.bb2"
000012DA <multilist.include.bb2@746> XINCLUDE "dos.include.bb2"
000012EE <multilist.include.bb2@747> XINCLUDE "dos.include.bb2"
00001322 <multilist.include.bb2@748> XINCLUDE "dos.include.bb2"
00001330 <multilist.include.bb2@751> XINCLUDE "dos.include.bb2"
0000133A <multilist.include.bb2@752> XINCLUDE "dos.include.bb2"
00001340 <multilist.include.bb2@753> XINCLUDE "dos.include.bb2"
0000134A <multilist.include.bb2@754> XINCLUDE "dos.include.bb2"
0000134E <multilist.include.bb2@756> XINCLUDE "dos.include.bb2"
00001354 <multilist.include.bb2@757> XINCLUDE "dos.include.bb2"
0000136E <multilist.include.bb2@795> XINCLUDE "dos.include.bb2"
00001378 <multilist.include.bb2@796> XINCLUDE "dos.include.bb2"
00001382 <multilist.include.bb2@797> XINCLUDE "dos.include.bb2"
00001398 <multilist.include.bb2@798> XINCLUDE "dos.include.bb2"
000013A8 <multilist.include.bb2@799> XINCLUDE "dos.include.bb2"
000013B2 <multilist.include.bb2@801> XINCLUDE "dos.include.bb2"
000013B8 <multilist.include.bb2@802> XINCLUDE "dos.include.bb2"
000013BC <multilist.include.bb2@803> XINCLUDE "dos.include.bb2"
000013DE <multilist.include.bb2@821> XINCLUDE "dos.include.bb2"
000013E6 <multilist.include.bb2@822> XINCLUDE "dos.include.bb2"
00001400 <multilist.include.bb2@823> XINCLUDE "dos.include.bb2"
0000140A <multilist.include.bb2@824> XINCLUDE "dos.include.bb2"
00001420 <multilist.include.bb2@825> XINCLUDE "dos.include.bb2"
00001434 <multilist.include.bb2@826> XINCLUDE "dos.include.bb2"
0000148A <multilist.include.bb2@827> XINCLUDE "dos.include.bb2"
000014C4 <multilist.include.bb2@828> XINCLUDE "dos.include.bb2"
000014D6 <multilist.include.bb2@829> XINCLUDE "dos.include.bb2"
000014F8 <multilist.include.bb2@830> XINCLUDE "dos.include.bb2"
000014FE <multilist.include.bb2@831> XINCLUDE "dos.include.bb2"
00001554 <multilist.include.bb2@832> XINCLUDE "dos.include.bb2"
0000158E <multilist.include.bb2@833> XINCLUDE "dos.include.bb2"
00001594 <multilist.include.bb2@835> XINCLUDE "dos.include.bb2"
000015CE <multilist.include.bb2@836> XINCLUDE "dos.include.bb2"
00001608 <multilist.include.bb2@837> XINCLUDE "dos.include.bb2"
0000161A <multilist.include.bb2@839> XINCLUDE "dos.include.bb2"
00001624 <multilist.include.bb2@840> XINCLUDE "dos.include.bb2"
0000162A <multilist.include.bb2@841> XINCLUDE "dos.include.bb2"
00001634 <multilist.include.bb2@842> XINCLUDE "dos.include.bb2"
00001648 <multilist.include.bb2@843> XINCLUDE "dos.include.bb2"
0000168E <multilist.include.bb2@870> XINCLUDE "dos.include.bb2"
00001696 <multilist.include.bb2@871> XINCLUDE "dos.include.bb2"
000016B4 <multilist.include.bb2@872> XINCLUDE "dos.include.bb2"
000016E0 <multilist.include.bb2@873> XINCLUDE "dos.include.bb2"
000016FE <multilist.include.bb2@874> XINCLUDE "dos.include.bb2"
00001718 <multilist.include.bb2@875> XINCLUDE "dos.include.bb2"
00001732 <multilist.include.bb2@876> XINCLUDE "dos.include.bb2"
000017B4 <multilist.include.bb2@877> XINCLUDE "dos.include.bb2"
000017C8 <multilist.include.bb2@879> XINCLUDE "dos.include.bb2"
000017E0 <multilist.include.bb2@880> XINCLUDE "dos.include.bb2"
000017E6 <multilist.include.bb2@881> XINCLUDE "dos.include.bb2"
000017FE <multilist.include.bb2@882> XINCLUDE "dos.include.bb2"
00001814 <multilist.include.bb2@884> XINCLUDE "dos.include.bb2"
0000182E <multilist.include.bb2@886> XINCLUDE "dos.include.bb2"
00001842 <multilist.include.bb2@887> XINCLUDE "dos.include.bb2"
00001850 <multilist.include.bb2@888> XINCLUDE "dos.include.bb2"
000018A6 <multilist.include.bb2@889> XINCLUDE "dos.include.bb2"
000018DC <multilist.include.bb2@890> XINCLUDE "dos.include.bb2"
0000190C <multilist.include.bb2@891> XINCLUDE "dos.include.bb2"
00001994 <multilist.include.bb2@893> XINCLUDE "dos.include.bb2"
0000199A <multilist.include.bb2@894> XINCLUDE "dos.include.bb2"
000019A8 <multilist.include.bb2@895> XINCLUDE "dos.include.bb2"
000019FE <multilist.include.bb2@896> XINCLUDE "dos.include.bb2"
00001A34 <multilist.include.bb2@897> XINCLUDE "dos.include.bb2"
00001A64 <multilist.include.bb2@898> XINCLUDE "dos.include.bb2"
00001A6A <multilist.include.bb2@901> XINCLUDE "dos.include.bb2"
00001A84 <multilist.include.bb2@902> XINCLUDE "dos.include.bb2"
00001A92 <multilist.include.bb2@903> XINCLUDE "dos.include.bb2"
00001ACC <multilist.include.bb2@904> XINCLUDE "dos.include.bb2"
00001B02 <multilist.include.bb2@905> XINCLUDE "dos.include.bb2"
00001B32 <multilist.include.bb2@906> XINCLUDE "dos.include.bb2"
00001B40 <multilist.include.bb2@909> XINCLUDE "dos.include.bb2"
00001B4A <multilist.include.bb2@910> XINCLUDE "dos.include.bb2"
00001B50 <multilist.include.bb2@911> XINCLUDE "dos.include.bb2"
00001B5A <multilist.include.bb2@912> XINCLUDE "dos.include.bb2"
00001B6E <multilist.include.bb2@913> XINCLUDE "dos.include.bb2"
00001B6E <dos.include.bb2@57> XINCLUDE "dos.include.bb2"
00001B84 <dos.include.bb2@60> XINCLUDE "dos.include.bb2"
00001B8C <dos.include.bb2@62> XINCLUDE "dos.include.bb2"
00001B94 <dos.include.bb2@63> XINCLUDE "dos.include.bb2"
00001BBC <dos.include.bb2@64> XINCLUDE "dos.include.bb2"
00001BC4 <dos.include.bb2@65> XINCLUDE "dos.include.bb2"
00001BEC <dos.include.bb2@66> XINCLUDE "dos.include.bb2"
00001C14 <dos.include.bb2@67> XINCLUDE "dos.include.bb2"
00001C3C <dos.include.bb2@68> XINCLUDE "dos.include.bb2"
00001C44 <dos.include.bb2@69> XINCLUDE "dos.include.bb2"
00001C4C <dos.include.bb2@70> XINCLUDE "dos.include.bb2"
00001C54 <dos.include.bb2@71> XINCLUDE "dos.include.bb2"
00001C5C <dos.include.bb2@72> XINCLUDE "dos.include.bb2"
00001C64 <dos.include.bb2@73> XINCLUDE "dos.include.bb2"
00001C6C <dos.include.bb2@74> XINCLUDE "dos.include.bb2"
00001C74 <dos.include.bb2@75> XINCLUDE "dos.include.bb2"
00001C7C <dos.include.bb2@76> XINCLUDE "dos.include.bb2"
00001C84 <dos.include.bb2@77> XINCLUDE "dos.include.bb2"
00001CA4 <dos.include.bb2@78> XINCLUDE "dos.include.bb2"
00001CAC <dos.include.bb2@79> XINCLUDE "dos.include.bb2"
00001CB4 <dos.include.bb2@80> XINCLUDE "dos.include.bb2"
00001CDC <dos.include.bb2@82> XINCLUDE "dos.include.bb2"
00001CF2 <dos.include.bb2@113> XINCLUDE "dos.include.bb2"
00001CFE <dos.include.bb2@114> XINCLUDE "dos.include.bb2"
00001D02 <dos.include.bb2@115> XINCLUDE "dos.include.bb2"
00001D18 <dos.include.bb2@128> XINCLUDE "dos.include.bb2"
00001D32 <dos.include.bb2@129> XINCLUDE "dos.include.bb2"
00001D48 <dos.include.bb2@130> XINCLUDE "dos.include.bb2"
00001D72 <dos.include.bb2@131> XINCLUDE "dos.include.bb2"
00001D7C <dos.include.bb2@132> XINCLUDE "dos.include.bb2"
00001D82 <dos.include.bb2@133> XINCLUDE "dos.include.bb2"
00001D98 <dos.include.bb2@146> XINCLUDE "dos.include.bb2"
00001DB2 <dos.include.bb2@147> XINCLUDE "dos.include.bb2"
00001DC8 <dos.include.bb2@148> XINCLUDE "dos.include.bb2"
00001DF2 <dos.include.bb2@149> XINCLUDE "dos.include.bb2"
00001DFC <dos.include.bb2@150> XINCLUDE "dos.include.bb2"
00001E02 <dos.include.bb2@151> XINCLUDE "dos.include.bb2"
00001E2C <dos.include.bb2@167> XINCLUDE "dos.include.bb2"
00001E38 <dos.include.bb2@168> XINCLUDE "dos.include.bb2"
00001E58 <dos.include.bb2@169> XINCLUDE "dos.include.bb2"
00001E62 <dos.include.bb2@170> XINCLUDE "dos.include.bb2"
00001E72 <dos.include.bb2@171> XINCLUDE "dos.include.bb2"
00001E82 <dos.include.bb2@172> XINCLUDE "dos.include.bb2"
00001E8C <dos.include.bb2@174> XINCLUDE "dos.include.bb2"
00001EA6 <dos.include.bb2@175> XINCLUDE "dos.include.bb2"
00001EBC <dos.include.bb2@413> XINCLUDE "dos.include.bb2"
00001ECE <dos.include.bb2@415> XINCLUDE "dos.include.bb2"
00001F48 <dos.include.bb2@416> XINCLUDE "dos.include.bb2"
00001F72 <dos.include.bb2@417> XINCLUDE "dos.include.bb2"
00001F8A <dos.include.bb2@418> XINCLUDE "dos.include.bb2"
00001FA0 <dos.include.bb2@444> XINCLUDE "dos.include.bb2"
00001FB2 <dos.include.bb2@445> XINCLUDE "dos.include.bb2"
00001FB6 <dos.include.bb2@446> XINCLUDE "dos.include.bb2"
00001FCC <dos.include.bb2@462> XINCLUDE "dos.include.bb2"
00001FCE <dos.include.bb2@463> XINCLUDE "dos.include.bb2"
00002008 <dos.include.bb2@524> XINCLUDE "dos.include.bb2"
0000203C <dos.include.bb2@526> XINCLUDE "dos.include.bb2"
00002062 <dos.include.bb2@527> XINCLUDE "dos.include.bb2"
00002082 <dos.include.bb2@528> XINCLUDE "dos.include.bb2"
000020A2 <dos.include.bb2@529> XINCLUDE "dos.include.bb2"
000020CC <dos.include.bb2@644> XINCLUDE "dos.include.bb2"
000020E2 <dos.include.bb2@645> XINCLUDE "dos.include.bb2"
000020EC <dos.include.bb2@646> XINCLUDE "dos.include.bb2"
00002114 <dos.include.bb2@647> XINCLUDE "dos.include.bb2"
0000211A <dos.include.bb2@648> XINCLUDE "dos.include.bb2"
00002142 <dos.include.bb2@649> XINCLUDE "dos.include.bb2"
0000216C <dos.include.bb2@651> XINCLUDE "dos.include.bb2"
0000218A <dos.include.bb2@652> XINCLUDE "dos.include.bb2"
000021B4 <dos.include.bb2@675> XINCLUDE "dos.include.bb2"
00002224 <dos.include.bb2@676> XINCLUDE "dos.include.bb2"
0000224E <dos.include.bb2@677> XINCLUDE "dos.include.bb2"
0000226C <dos.include.bb2@678> XINCLUDE "dos.include.bb2"
00002296 <dos.include.bb2@713> XINCLUDE "dos.include.bb2"
000022B6 <dos.include.bb2@714> XINCLUDE "dos.include.bb2"
000022E2 <dos.include.bb2@715> XINCLUDE "dos.include.bb2"
000022EC <dos.include.bb2@716> XINCLUDE "dos.include.bb2"
00002306 <dos.include.bb2@717> XINCLUDE "dos.include.bb2"
00002330 <dos.include.bb2@864> XINCLUDE "dos.include.bb2"
000023DE <dos.include.bb2@865> XINCLUDE "dos.include.bb2"
000023F4 <dos.include.bb2@866> XINCLUDE "dos.include.bb2"
000023FE <dos.include.bb2@867> XINCLUDE "dos.include.bb2"
00002426 <dos.include.bb2@868> XINCLUDE "dos.include.bb2"
00002430 <dos.include.bb2@869> XINCLUDE "dos.include.bb2"
00002436 <dos.include.bb2@870> XINCLUDE "dos.include.bb2"
0000243C <dos.include.bb2@871> XINCLUDE "dos.include.bb2"
00002442 <dos.include.bb2@872> XINCLUDE "dos.include.bb2"
00002454 <dos.include.bb2@874> XINCLUDE "dos.include.bb2"
0000245E <dos.include.bb2@876> XINCLUDE "dos.include.bb2"
00002478 <dos.include.bb2@877> XINCLUDE "dos.include.bb2"
000024B6 <dos.include.bb2@898> XINCLUDE "dos.include.bb2"
000024BE <dos.include.bb2@899> XINCLUDE "dos.include.bb2"
0000256C <dos.include.bb2@900> XINCLUDE "dos.include.bb2"
00002580 <dos.include.bb2@901> XINCLUDE "dos.include.bb2"
000025C2 <dos.include.bb2@902> XINCLUDE "dos.include.bb2"
000025E2 <dos.include.bb2@904> XINCLUDE "dos.include.bb2"
000025EC <dos.include.bb2@905> XINCLUDE "dos.include.bb2"
00002608 <dos.include.bb2@906> XINCLUDE "dos.include.bb2"
00002642 <dos.include.bb2@958> XINCLUDE "dos.include.bb2"
0000264A <dos.include.bb2@959> XINCLUDE "dos.include.bb2"
000026F8 <dos.include.bb2@960> XINCLUDE "dos.include.bb2"
0000272E <dos.include.bb2@961> XINCLUDE "dos.include.bb2"
0000274E <dos.include.bb2@962> XINCLUDE "dos.include.bb2"
0000276C <dos.include.bb2@963> XINCLUDE "dos.include.bb2"
00002790 <dos.include.bb2@964> XINCLUDE "dos.include.bb2"
0000279A <dos.include.bb2@966> XINCLUDE "dos.include.bb2"
000027B6 <dos.include.bb2@967> XINCLUDE "dos.include.bb2"
000027F0 <dos.include.bb2@984> XINCLUDE "dos.include.bb2"
0000289E <dos.include.bb2@985> XINCLUDE "dos.include.bb2"
000028D6 <dos.include.bb2@986> XINCLUDE "dos.include.bb2"
000028F6 <dos.include.bb2@987> XINCLUDE "dos.include.bb2"
000028FC <dos.include.bb2@988> XINCLUDE "dos.include.bb2"
0000291C <dos.include.bb2@989> XINCLUDE "dos.include.bb2"
00002926 <dos.include.bb2@990> XINCLUDE "dos.include.bb2"
00002940 <dos.include.bb2@991> XINCLUDE "dos.include.bb2"
00002958 <dos.include.bb2@992> XINCLUDE "dos.include.bb2"
00002962 <dos.include.bb2@995> XINCLUDE "dos.include.bb2"
0000297E <dos.include.bb2@996> XINCLUDE "dos.include.bb2"
000029A8 <dos.include.bb2@1131> XINCLUDE "dos.include.bb2"
000029B6 <dos.include.bb2@1133> XINCLUDE "dos.include.bb2"
00002A80 <dos.include.bb2@1134> XINCLUDE "dos.include.bb2"
00002AAA <dos.include.bb2@1135> XINCLUDE "dos.include.bb2"
00002AD2 <dos.include.bb2@1137> XINCLUDE "dos.include.bb2"
00002AFC <dos.include.bb2@1138> XINCLUDE "dos.include.bb2"
00002B26 <dos.include.bb2@1140> XINCLUDE "dos.include.bb2"
00002B44 <dos.include.bb2@1141> XINCLUDE "dos.include.bb2"
00002B6E <dos.include.bb2@1159> XINCLUDE "dos.include.bb2"
00002BE0 <dos.include.bb2@1161> XINCLUDE "dos.include.bb2"
00002C08 <dos.include.bb2@1162> XINCLUDE "dos.include.bb2"
00002C16 <dos.include.bb2@1163> XINCLUDE "dos.include.bb2"
00002C4A <dos.include.bb2@1164> XINCLUDE "dos.include.bb2"
00002C58 <dos.include.bb2@1167> XINCLUDE "dos.include.bb2"
00002C7A <dos.include.bb2@1173> XINCLUDE "dos.include.bb2"
00002C88 <dos.include.bb2@1177> XINCLUDE "dos.include.bb2"
00002CAC <dos.include.bb2@1178> XINCLUDE "dos.include.bb2"
00002CD6 <dos.include.bb2@1179> XINCLUDE "dos.include.bb2"
00002D00 <dos.include.bb2@1182> XINCLUDE "dos.include.bb2"
00002D1E <dos.include.bb2@1183> XINCLUDE "dos.include.bb2"
00002D48 <dos.include.bb2@1244> XINCLUDE "dos.include.bb2"
00002DA0 <dos.include.bb2@1245> XINCLUDE "dos.include.bb2"
00002DCA <dos.include.bb2@1246> XINCLUDE "dos.include.bb2"
00002DE8 <dos.include.bb2@1247> XINCLUDE "dos.include.bb2"
00002DFE <dos.include.bb2@1321> XINCLUDE "dos.include.bb2"
00002E04 <dos.include.bb2@1323> XINCLUDE "dos.include.bb2"
00002E0E <dos.include.bb2@1324> XINCLUDE "dos.include.bb2"
00002E18 <dos.include.bb2@1325> XINCLUDE "dos.include.bb2"
00002E36 <dos.include.bb2@1328> XINCLUDE "dos.include.bb2"
00002E3C <dos.include.bb2@1329> XINCLUDE "dos.include.bb2"
00002E42 <dos.include.bb2@1330> XINCLUDE "dos.include.bb2"
00002E52 <dos.include.bb2@1332> XINCLUDE "dos.include.bb2"
00002E58 <dos.include.bb2@1333> XINCLUDE "dos.include.bb2"
00002E60 <dos.include.bb2@1334> XINCLUDE "dos.include.bb2"
00002E88 <dos.include.bb2@1335> XINCLUDE "dos.include.bb2"
00002E92 <dos.include.bb2@1336> XINCLUDE "dos.include.bb2"
00002E9C <dos.include.bb2@1338> XINCLUDE "dos.include.bb2"
00002EB0 <dos.include.bb2@1339> XINCLUDE "dos.include.bb2"
00002EC6 <dos.include.bb2@1361> XINCLUDE "dos.include.bb2"
00002ECC <dos.include.bb2@1367> XINCLUDE "dos.include.bb2"
00002EF0 <dos.include.bb2@1368> XINCLUDE "dos.include.bb2"
00002F14 <dos.include.bb2@1369> XINCLUDE "dos.include.bb2"
00002F38 <dos.include.bb2@1370> XINCLUDE "dos.include.bb2"
00002F3E <dos.include.bb2@1371> XINCLUDE "dos.include.bb2"
00002F6A <dos.include.bb2@1372> XINCLUDE "dos.include.bb2"
00002F6C <dos.include.bb2@1373> XINCLUDE "dos.include.bb2"
00002F9A <dos.include.bb2@1374> XINCLUDE "dos.include.bb2"
00002FC4 <dos.include.bb2@1390> XINCLUDE "dos.include.bb2"
0000304E <dos.include.bb2@1393> XINCLUDE "dos.include.bb2"
00003116 <dos.include.bb2@1394> XINCLUDE "dos.include.bb2"
00003120 <dos.include.bb2@1396> XINCLUDE "dos.include.bb2"
0000316A <dos.include.bb2@1397> XINCLUDE "dos.include.bb2"
000031B6 <dos.include.bb2@1399> XINCLUDE "dos.include.bb2"
000031EE <dos.include.bb2@1400> XINCLUDE "dos.include.bb2"
00003200 <dos.include.bb2@1401> XINCLUDE "dos.include.bb2"
00003216 <dos.include.bb2@1402> XINCLUDE "dos.include.bb2"
0000321C <dos.include.bb2@1403> XINCLUDE "dos.include.bb2"
00003232 <dos.include.bb2@1404> XINCLUDE "dos.include.bb2"
00003266 <dos.include.bb2@1406> XINCLUDE "dos.include.bb2"
0000326C <dos.include.bb2@1407> XINCLUDE "dos.include.bb2"
00003276 <dos.include.bb2@1409> XINCLUDE "dos.include.bb2"
00003290 <dos.include.bb2@1410> XINCLUDE "dos.include.bb2"
000032DA <dos.include.bb2@1440> XINCLUDE "dos.include.bb2"
00003310 <dos.include.bb2@1442> XINCLUDE "dos.include.bb2"
00003334 <dos.include.bb2@1443> XINCLUDE "dos.include.bb2"
0000333E <dos.include.bb2@1444> XINCLUDE "dos.include.bb2"
00003366 <dos.include.bb2@1445> XINCLUDE "dos.include.bb2"
000033AE <dos.include.bb2@1448> XINCLUDE "dos.include.bb2"
00003484 <dos.include.bb2@1450> XINCLUDE "dos.include.bb2"
000034AE <dos.include.bb2@1451> XINCLUDE "dos.include.bb2"
000034CE <dos.include.bb2@1452> XINCLUDE "dos.include.bb2"
00003508 <dos.include.bb2@1471> XINCLUDE "dos.include.bb2"
0000350E <dos.include.bb2@1473> XINCLUDE "dos.include.bb2"
00003514 <dos.include.bb2@1474> XINCLUDE "dos.include.bb2"
0000351C <dos.include.bb2@1475> XINCLUDE "dos.include.bb2"
00003552 <dos.include.bb2@1476> XINCLUDE "dos.include.bb2"
00003560 <dos.include.bb2@1477> XINCLUDE "dos.include.bb2"
0000356A <dos.include.bb2@1478> XINCLUDE "dos.include.bb2"
00003596 <dos.include.bb2@1479> XINCLUDE "dos.include.bb2"
000035A4 <dos.include.bb2@1480> XINCLUDE "dos.include.bb2"
000035AE <dos.include.bb2@1481> XINCLUDE "dos.include.bb2"
000035DC <dos.include.bb2@1483> XINCLUDE "dos.include.bb2"
0000365A <dos.include.bb2@1486> XINCLUDE "dos.include.bb2"
000036AC <dos.include.bb2@1489> XINCLUDE "dos.include.bb2"
000036BE <dos.include.bb2@1490> XINCLUDE "dos.include.bb2"
0000372C <dos.include.bb2@1491> XINCLUDE "dos.include.bb2"
00003732 <dos.include.bb2@1492> XINCLUDE "dos.include.bb2"
0000377E <dos.include.bb2@1493> XINCLUDE "dos.include.bb2"
0000384C <dos.include.bb2@1497> XINCLUDE "dos.include.bb2"
0000392C <dos.include.bb2@1498> XINCLUDE "dos.include.bb2"
00003998 <dos.include.bb2@1500> XINCLUDE "dos.include.bb2"
0000399E <dos.include.bb2@1501> XINCLUDE "dos.include.bb2"
000039BA <dos.include.bb2@1502> XINCLUDE "dos.include.bb2"
000039C8 <dos.include.bb2@1505> XINCLUDE "dos.include.bb2"
000039CE <dos.include.bb2@1506> XINCLUDE "dos.include.bb2"
000039E0 <dos.include.bb2@1509> XINCLUDE "dos.include.bb2"
000039F6 <dos.include.bb2@1510> XINCLUDE "dos.include.bb2"
00003A00 <dos.include.bb2@1511> XINCLUDE "dos.include.bb2"
00003A1C <dos.include.bb2@1512> XINCLUDE "dos.include.bb2"
00003A46 <dos.include.bb2@2088> XINCLUDE "dos.include.bb2"
00003A5A <dos.include.bb2@2089> XINCLUDE "dos.include.bb2"
00003A98 <dos.include.bb2@2090> XINCLUDE "dos.include.bb2"
00003B7E <dos.include.bb2@2091> XINCLUDE "dos.include.bb2"
00003B84 <dos.include.bb2@2092> XINCLUDE "dos.include.bb2"
00003BD4 <dos.include.bb2@2093> XINCLUDE "dos.include.bb2"
00003BFE <dos.include.bb2@2094> XINCLUDE "dos.include.bb2"
00003C1C <dos.include.bb2@2095> XINCLUDE "dos.include.bb2"
00003C46 <dos.include.bb2@2119> XINCLUDE "dos.include.bb2"
00003C5A <dos.include.bb2@2120> XINCLUDE "dos.include.bb2"
00003C98 <dos.include.bb2@2121> XINCLUDE "dos.include.bb2"
00003D7E <dos.include.bb2@2122> XINCLUDE "dos.include.bb2"
00003D84 <dos.include.bb2@2123> XINCLUDE "dos.include.bb2"
00003DF6 <dos.include.bb2@2124> XINCLUDE "dos.include.bb2"
00003E20 <dos.include.bb2@2125> XINCLUDE "dos.include.bb2"
00003E3E <dos.include.bb2@2126> XINCLUDE "dos.include.bb2"
00003E78 <dos.include.bb2@2152> XINCLUDE "dos.include.bb2"
00003EB0 <dos.include.bb2@2153> XINCLUDE "dos.include.bb2"
00003F08 <dos.include.bb2@2154> XINCLUDE "dos.include.bb2"
00003F6C <dos.include.bb2@2155> XINCLUDE "dos.include.bb2"
00003F96 <dos.include.bb2@2157> XINCLUDE "dos.include.bb2"
00003FB6 <dos.include.bb2@2158> XINCLUDE "dos.include.bb2"
00003FE0 <dos.include.bb2@2175> XINCLUDE "dos.include.bb2"
00003FE6 <dos.include.bb2@2176> XINCLUDE "dos.include.bb2"
00003FFC <dos.include.bb2@2177> XINCLUDE "dos.include.bb2"
00004006 <dos.include.bb2@2178> XINCLUDE "dos.include.bb2"
0000400C <dos.include.bb2@2179> XINCLUDE "dos.include.bb2"
0000401C <dos.include.bb2@2180> XINCLUDE "dos.include.bb2"
00004026 <dos.include.bb2@2182> XINCLUDE "dos.include.bb2"
00004040 <dos.include.bb2@2183> XINCLUDE "dos.include.bb2"
0000406E <dos.include.bb2@2203> XINCLUDE "dos.include.bb2"
00004088 <dos.include.bb2@2204> XINCLUDE "dos.include.bb2"
000040A6 <dos.include.bb2@2205> XINCLUDE "dos.include.bb2"
000040B0 <dos.include.bb2@2206> XINCLUDE "dos.include.bb2"
000040C0 <dos.include.bb2@2207> XINCLUDE "dos.include.bb2"
000040C8 <dos.include.bb2@2208> XINCLUDE "dos.include.bb2"
000040D0 <dos.include.bb2@2210> XINCLUDE "dos.include.bb2"
000040EA <dos.include.bb2@2211> XINCLUDE "dos.include.bb2"
00004118 <dos.include.bb2@2417> XINCLUDE "dos.include.bb2"
0000413A <dos.include.bb2@2418> XINCLUDE "dos.include.bb2"
00004142 <dos.include.bb2@2419> XINCLUDE "dos.include.bb2"
00004150 <dos.include.bb2@2420> XINCLUDE "dos.include.bb2"
0000416A <dos.include.bb2@2422> XINCLUDE "dos.include.bb2"
00004198 <dos.include.bb2@2441> XINCLUDE "dos.include.bb2"
000041AC <dos.include.bb2@2442> XINCLUDE "dos.include.bb2"
000041E0 <dos.include.bb2@2443> XINCLUDE "dos.include.bb2"
000041FA <dos.include.bb2@2445> XINCLUDE "dos.include.bb2"
00004202 <dos.include.bb2@2446> XINCLUDE "dos.include.bb2"
00004210 <dos.include.bb2@2447> XINCLUDE "dos.include.bb2"
0000422A <dos.include.bb2@2449> XINCLUDE "dos.include.bb2"
00004254 <dos.include.bb2@2585> XINCLUDE "dos.include.bb2"
00004260 <dos.include.bb2@2587> XINCLUDE "dos.include.bb2"
00004280 <dos.include.bb2@2588> XINCLUDE "dos.include.bb2"
000042A6 <dos.include.bb2@2589> XINCLUDE "dos.include.bb2"
000042D2 <dos.include.bb2@2590> XINCLUDE "dos.include.bb2"
000042EA <dos.include.bb2@2591> XINCLUDE "dos.include.bb2"
000042F8 <dos.include.bb2@2593> XINCLUDE "dos.include.bb2"
000042FE <dos.include.bb2@2594> XINCLUDE "dos.include.bb2"
0000430A <dos.include.bb2@2595> XINCLUDE "dos.include.bb2"
00004310 <dos.include.bb2@2597> XINCLUDE "dos.include.bb2"
0000431C <dos.include.bb2@2598> XINCLUDE "dos.include.bb2"
0000432C <dos.include.bb2@2600> XINCLUDE "dos.include.bb2"
00004332 <dos.include.bb2@2601> XINCLUDE "dos.include.bb2"
0000433E <dos.include.bb2@2602> XINCLUDE "dos.include.bb2"
00004348 <dos.include.bb2@2604> XINCLUDE "dos.include.bb2"
00004362 <dos.include.bb2@2605> XINCLUDE "dos.include.bb2"
00004362 <AmiBlitz3.ab2@82> XINCLUDE "dos.include.bb2"
00004370 <AmiBlitz3.ab2@84> If dos_FromCLI{}
00004376 <AmiBlitz3.ab2@85>   CLIMode.l=True
00004382 <AmiBlitz3.ab2@86>   error_SetFlags{#error_stdout}
00004382 <common.ab3@1> XINCLUDE "/Shared/common.ab3"
00004388 <common.ab3@214> XINCLUDE "/Shared/common.ab3"
0000438A <common.ab3@215> XINCLUDE "/Shared/common.ab3"
0000451A <common.ab3@216> XINCLUDE "/Shared/common.ab3"
0000451E <common.ab3@217> XINCLUDE "/Shared/common.ab3"
00004522 <common.ab3@219> XINCLUDE "/Shared/common.ab3"
00004526 <common.ab3@220> XINCLUDE "/Shared/common.ab3"
0000452A <common.ab3@222> XINCLUDE "/Shared/common.ab3"
0000452E <common.ab3@223> XINCLUDE "/Shared/common.ab3"
00004532 <common.ab3@224> XINCLUDE "/Shared/common.ab3"
00004536 <common.ab3@225> XINCLUDE "/Shared/common.ab3"
0000453A <common.ab3@226> XINCLUDE "/Shared/common.ab3"
0000453E <common.ab3@227> XINCLUDE "/Shared/common.ab3"
00004542 <common.ab3@228> XINCLUDE "/Shared/common.ab3"
00004546 <common.ab3@229> XINCLUDE "/Shared/common.ab3"
0000454A <common.ab3@230> XINCLUDE "/Shared/common.ab3"
0000454E <common.ab3@232> XINCLUDE "/Shared/common.ab3"
00004552 <common.ab3@234> XINCLUDE "/Shared/common.ab3"
00004556 <common.ab3@235> XINCLUDE "/Shared/common.ab3"
0000455A <common.ab3@236> XINCLUDE "/Shared/common.ab3"
0000455E <common.ab3@237> XINCLUDE "/Shared/common.ab3"
00004562 <common.ab3@238> XINCLUDE "/Shared/common.ab3"
00004566 <common.ab3@239> XINCLUDE "/Shared/common.ab3"
0000456A <common.ab3@240> XINCLUDE "/Shared/common.ab3"
0000456E <common.ab3@241> XINCLUDE "/Shared/common.ab3"
00004572 <common.ab3@242> XINCLUDE "/Shared/common.ab3"
00004576 <common.ab3@243> XINCLUDE "/Shared/common.ab3"
0000457E <common.ab3@246> XINCLUDE "/Shared/common.ab3"
00004582 <common.ab3@247> XINCLUDE "/Shared/common.ab3"
00004584 <common.ab3@248> XINCLUDE "/Shared/common.ab3"
00004588 <common.ab3@249> XINCLUDE "/Shared/common.ab3"
0000458A <common.ab3@250> XINCLUDE "/Shared/common.ab3"
0000458E <common.ab3@251> XINCLUDE "/Shared/common.ab3"
00004592 <common.ab3@252> XINCLUDE "/Shared/common.ab3"
00004596 <common.ab3@253> XINCLUDE "/Shared/common.ab3"
0000459A <common.ab3@254> XINCLUDE "/Shared/common.ab3"
0000459E <common.ab3@255> XINCLUDE "/Shared/common.ab3"
000045A6 <common.ab3@256> XINCLUDE "/Shared/common.ab3"
000045AE <common.ab3@257> XINCLUDE "/Shared/common.ab3"
000045B2 <common.ab3@258> XINCLUDE "/Shared/common.ab3"
000045B6 <common.ab3@259> XINCLUDE "/Shared/common.ab3"
000045BA <common.ab3@260> XINCLUDE "/Shared/common.ab3"
000045BC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000467C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
000046CA <common.ab3@267> XINCLUDE "/Shared/common.ab3"
000046CE <common.ab3@268> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000046D2 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046D6 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046DA <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046DB <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000046DE <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000046E2 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046E6 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046EC <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000046EE <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F2 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
000046F8 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@300> XINCLUDE "/Shared/common.ab3"
000046FE <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004702 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004706 <common.ab3@308> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@309> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000470E <common.ab3@312> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@313> XINCLUDE "/Shared/common.ab3"
00004712 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004714 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000471A <common.ab3@325> XINCLUDE "/Shared/common.ab3"
0000471C <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000471E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004722 <common.ab3@331> XINCLUDE "/Shared/common.ab3"
00004726 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@333> XINCLUDE "/Shared/common.ab3"
0000472A <common.ab3@334> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@335> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00004730 <common.ab3@338> XINCLUDE "/Shared/common.ab3"
00004732 <common.ab3@340> XINCLUDE "/Shared/common.ab3"
00004734 <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004738 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
0000473A <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004768 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00004772 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004776 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004778 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000477A <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000477E <common.ab3@351> XINCLUDE "/Shared/common.ab3"
00004782 <common.ab3@352> XINCLUDE "/Shared/common.ab3"
0000478B <common.ab3@353> XINCLUDE "/Shared/common.ab3"
0000478E <common.ab3@354> XINCLUDE "/Shared/common.ab3"
000047BB <common.ab3@355> XINCLUDE "/Shared/common.ab3"
000047FB <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004807 <common.ab3@357> XINCLUDE "/Shared/common.ab3"
00004857 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
00004863 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
000048B3 <common.ab3@360> XINCLUDE "/Shared/common.ab3"
000049AF <common.ab3@361> XINCLUDE "/Shared/common.ab3"
000049B1 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004A71 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004AB1 <common.ab3@364> XINCLUDE "/Shared/common.ab3"
00004AB3 <common.ab3@365> XINCLUDE "/Shared/common.ab3"
00004AB4 <common.ab3@366> XINCLUDE "/Shared/common.ab3"
00004AB8 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
00004ABC <common.ab3@371> XINCLUDE "/Shared/common.ab3"
00004AC0 <common.ab3@372> XINCLUDE "/Shared/common.ab3"
00004AC4 <common.ab3@373> XINCLUDE "/Shared/common.ab3"
00004AC8 <common.ab3@375> XINCLUDE "/Shared/common.ab3"
00004ACC <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004AD0 <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004AD4 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004AD8 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004ADC <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004AE0 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
00004AE4 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
00004AE8 <common.ab3@384> XINCLUDE "/Shared/common.ab3"
00004AEC <common.ab3@386> XINCLUDE "/Shared/common.ab3"
00004AF0 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
00004AF4 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
00004AF8 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
00004AFC <common.ab3@393> XINCLUDE "/Shared/common.ab3"
00004B06 <common.ab3@394> XINCLUDE "/Shared/common.ab3"
00004B0A <common.ab3@395> XINCLUDE "/Shared/common.ab3"
00004B0E <common.ab3@398> XINCLUDE "/Shared/common.ab3"
00004B10 <common.ab3@399> XINCLUDE "/Shared/common.ab3"
00004B12 <common.ab3@400> XINCLUDE "/Shared/common.ab3"
00004B30 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
00004B34 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
00004B36 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004B3A <common.ab3@405> XINCLUDE "/Shared/common.ab3"
00004B6E <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004B72 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004B80 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004B92 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B94 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004BA8 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004BBE <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004BD4 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004BEA <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C00 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C02 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004C04 <common.ab3@418> XINCLUDE "/Shared/common.ab3"
00004C08 <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004C0C <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C10 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004C14 <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C18 <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004C1C <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C20 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C24 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C28 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C2C <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C44 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C4C <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00004C50 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C58 <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C5C <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004C64 <common.ab3@447> XINCLUDE "/Shared/common.ab3"
00004C68 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C70 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004C74 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004C76 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004C7A <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004C86 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004C88 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004C8C <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004C8E <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004C92 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004C94 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004C98 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004C9A <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004CAE <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004CC2 <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004CD6 <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004CD8 <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004CDC <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004CE8 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004CEC <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004CF0 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004CF4 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004CF5 <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004CF6 <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004CF7 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004CFA <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004CFE <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004D02 <common.ab3@485> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@486> XINCLUDE "/Shared/common.ab3"
00004D0A <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004D0E <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004D12 <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004D13 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004D14 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004D16 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004D1E <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004D22 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004D26 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004D2A <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004D2E <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004D32 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004D36 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004D3A <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004D3E <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004D42 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004D4A <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004D4E <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004D50 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004D51 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004D55 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004D59 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004D5D <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004D61 <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004D62 <common.ab3@518> XINCLUDE "/Shared/common.ab3"
00004D62 <AmiBlitz3.ab2@89> XINCLUDE "/Shared/common.ab3"
00004D62 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004D62 <hashmap.include.bb2@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004D80 <hashmap.include.bb2@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00004D88 <hashmap.include.bb2@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DB6 <hashmap.include.bb2@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DE6 <hashmap.include.bb2@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00004DF6 <hashmap.include.bb2@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E00 <hashmap.include.bb2@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E06 <hashmap.include.bb2@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E28 <hashmap.include.bb2@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E46 <hashmap.include.bb2@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E58 <hashmap.include.bb2@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E80 <hashmap.include.bb2@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004E86 <hashmap.include.bb2@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EA0 <hashmap.include.bb2@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00004EB8 <hashmap.include.bb2@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00004ECA <hashmap.include.bb2@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00004ED8 <hashmap.include.bb2@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F0C <hashmap.include.bb2@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F1A <hashmap.include.bb2@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F24 <hashmap.include.bb2@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F36 <hashmap.include.bb2@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F74 <hashmap.include.bb2@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F84 <hashmap.include.bb2@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F8A <hashmap.include.bb2@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.bb2@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FAA <hashmap.include.bb2@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FB8 <hashmap.include.bb2@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FC8 <hashmap.include.bb2@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEC <hashmap.include.bb2@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FF8 <hashmap.include.bb2@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005006 <hashmap.include.bb2@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005014 <hashmap.include.bb2@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005022 <hashmap.include.bb2@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00005030 <hashmap.include.bb2@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00005066 <hashmap.include.bb2@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00005074 <hashmap.include.bb2@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00005084 <hashmap.include.bb2@77> XINCLUDE "/Shared/preprocessor.include.ab3"
0000508C <hashmap.include.bb2@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00005090 <hashmap.include.bb2@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AA <hashmap.include.bb2@82> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C4 <hashmap.include.bb2@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000050DE <hashmap.include.bb2@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FE <hashmap.include.bb2@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005108 <hashmap.include.bb2@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00005114 <hashmap.include.bb2@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00005128 <hashmap.include.bb2@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000515A <hashmap.include.bb2@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005172 <hashmap.include.bb2@91> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517E <hashmap.include.bb2@92> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518C <hashmap.include.bb2@93> XINCLUDE "/Shared/preprocessor.include.ab3"
0000519A <hashmap.include.bb2@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.bb2@95> XINCLUDE "/Shared/preprocessor.include.ab3"
000051B6 <hashmap.include.bb2@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E0 <hashmap.include.bb2@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000051EA <hashmap.include.bb2@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F0 <hashmap.include.bb2@100> XINCLUDE "/Shared/preprocessor.include.ab3"
0000521E <hashmap.include.bb2@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00005236 <hashmap.include.bb2@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005254 <hashmap.include.bb2@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005268 <hashmap.include.bb2@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005280 <hashmap.include.bb2@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A8 <hashmap.include.bb2@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000052C0 <hashmap.include.bb2@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000052CE <hashmap.include.bb2@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DC <hashmap.include.bb2@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EA <hashmap.include.bb2@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FE <hashmap.include.bb2@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00005352 <hashmap.include.bb2@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537C <hashmap.include.bb2@115> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C0 <hashmap.include.bb2@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000053E0 <hashmap.include.bb2@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053F2 <hashmap.include.bb2@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005416 <hashmap.include.bb2@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005424 <hashmap.include.bb2@121> XINCLUDE "/Shared/preprocessor.include.ab3"
0000547C <hashmap.include.bb2@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C2 <hashmap.include.bb2@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C8 <hashmap.include.bb2@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D0 <hashmap.include.bb2@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000054F8 <hashmap.include.bb2@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000550A <hashmap.include.bb2@128> XINCLUDE "/Shared/preprocessor.include.ab3"
0000551C <hashmap.include.bb2@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00005556 <hashmap.include.bb2@130> XINCLUDE "/Shared/preprocessor.include.ab3"
00005566 <hashmap.include.bb2@131> XINCLUDE "/Shared/preprocessor.include.ab3"
0000556C <hashmap.include.bb2@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000557C <hashmap.include.bb2@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005582 <hashmap.include.bb2@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00005588 <hashmap.include.bb2@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A0 <hashmap.include.bb2@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055DE <hashmap.include.bb2@142> XINCLUDE "/Shared/preprocessor.include.ab3"
000055FC <hashmap.include.bb2@143> XINCLUDE "/Shared/preprocessor.include.ab3"
0000562E <hashmap.include.bb2@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00005642 <hashmap.include.bb2@145> XINCLUDE "/Shared/preprocessor.include.ab3"
00005656 <hashmap.include.bb2@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000566E <hashmap.include.bb2@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005696 <hashmap.include.bb2@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A0 <hashmap.include.bb2@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000056AE <hashmap.include.bb2@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000056C6 <hashmap.include.bb2@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000056CC <hashmap.include.bb2@159> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D4 <hashmap.include.bb2@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F4 <hashmap.include.bb2@163> XINCLUDE "/Shared/preprocessor.include.ab3"
0000571A <hashmap.include.bb2@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005724 <hashmap.include.bb2@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00005732 <hashmap.include.bb2@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573C <hashmap.include.bb2@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00005768 <hashmap.include.bb2@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000577C <hashmap.include.bb2@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00005782 <hashmap.include.bb2@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00005790 <hashmap.include.bb2@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000057C6 <hashmap.include.bb2@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00005814 <hashmap.include.bb2@176> XINCLUDE "/Shared/preprocessor.include.ab3"
0000583C <hashmap.include.bb2@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00005856 <hashmap.include.bb2@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005868 <hashmap.include.bb2@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005872 <hashmap.include.bb2@182> XINCLUDE "/Shared/preprocessor.include.ab3"
0000588E <hashmap.include.bb2@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058B4 <hashmap.include.bb2@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D2 <hashmap.include.bb2@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F6 <hashmap.include.bb2@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005910 <hashmap.include.bb2@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005938 <hashmap.include.bb2@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00005956 <hashmap.include.bb2@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005972 <hashmap.include.bb2@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005980 <hashmap.include.bb2@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005994 <hashmap.include.bb2@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000059B6 <hashmap.include.bb2@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000059D8 <hashmap.include.bb2@196> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E6 <hashmap.include.bb2@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A00 <hashmap.include.bb2@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A30 <hashmap.include.bb2@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A36 <hashmap.include.bb2@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A64 <hashmap.include.bb2@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA6 <hashmap.include.bb2@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AB6 <hashmap.include.bb2@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AC0 <hashmap.include.bb2@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD0 <hashmap.include.bb2@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AD6 <hashmap.include.bb2@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AE2 <hashmap.include.bb2@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AE8 <hashmap.include.bb2@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B16 <hashmap.include.bb2@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B46 <hashmap.include.bb2@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B7C <hashmap.include.bb2@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B90 <hashmap.include.bb2@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA8 <hashmap.include.bb2@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD0 <hashmap.include.bb2@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C00 <hashmap.include.bb2@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C1C <hashmap.include.bb2@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C2A <hashmap.include.bb2@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3E <hashmap.include.bb2@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C92 <hashmap.include.bb2@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CBC <hashmap.include.bb2@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D00 <hashmap.include.bb2@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D26 <hashmap.include.bb2@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D2C <hashmap.include.bb2@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D4A <hashmap.include.bb2@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D68 <hashmap.include.bb2@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D86 <hashmap.include.bb2@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D8C <hashmap.include.bb2@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB2 <hashmap.include.bb2@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DE0 <hashmap.include.bb2@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E08 <hashmap.include.bb2@271> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2C <hashmap.include.bb2@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E82 <hashmap.include.bb2@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ED4 <hashmap.include.bb2@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F2A <hashmap.include.bb2@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F3A <hashmap.include.bb2@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F8C <hashmap.include.bb2@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FB4 <hashmap.include.bb2@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FDA <hashmap.include.bb2@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FF4 <hashmap.include.bb2@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FFC <hashmap.include.bb2@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00006024 <hashmap.include.bb2@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00006052 <hashmap.include.bb2@289> XINCLUDE "/Shared/preprocessor.include.ab3"
0000607A <hashmap.include.bb2@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00006082 <hashmap.include.bb2@291> XINCLUDE "/Shared/preprocessor.include.ab3"
000060A6 <hashmap.include.bb2@292> XINCLUDE "/Shared/preprocessor.include.ab3"
000060DA <hashmap.include.bb2@294> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F6 <hashmap.include.bb2@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00006100 <hashmap.include.bb2@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00006114 <hashmap.include.bb2@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00006134 <hashmap.include.bb2@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00006150 <hashmap.include.bb2@299> XINCLUDE "/Shared/preprocessor.include.ab3"
0000615E <hashmap.include.bb2@300> XINCLUDE "/Shared/preprocessor.include.ab3"
0000616C <hashmap.include.bb2@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006172 <hashmap.include.bb2@302> XINCLUDE "/Shared/preprocessor.include.ab3"
0000618A <hashmap.include.bb2@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000619A <hashmap.include.bb2@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000061C8 <hashmap.include.bb2@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00006224 <hashmap.include.bb2@307> XINCLUDE "/Shared/preprocessor.include.ab3"
0000629C <hashmap.include.bb2@308> XINCLUDE "/Shared/preprocessor.include.ab3"
000062F8 <hashmap.include.bb2@309> XINCLUDE "/Shared/preprocessor.include.ab3"
000062FE <hashmap.include.bb2@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006308 <hashmap.include.bb2@312> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630E <hashmap.include.bb2@313> XINCLUDE "/Shared/preprocessor.include.ab3"
0000633C <hashmap.include.bb2@316> XINCLUDE "/Shared/preprocessor.include.ab3"
00006342 <hashmap.include.bb2@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00006362 <hashmap.include.bb2@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636C <hashmap.include.bb2@319> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637E <hashmap.include.bb2@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638E <hashmap.include.bb2@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006398 <hashmap.include.bb2@323> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B2 <hashmap.include.bb2@324> XINCLUDE "/Shared/preprocessor.include.ab3"
000063CC <hashmap.include.bb2@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D4 <hashmap.include.bb2@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000063DA <hashmap.include.bb2@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000063E4 <hashmap.include.bb2@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000063EC <hashmap.include.bb2@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006414 <hashmap.include.bb2@332> XINCLUDE "/Shared/preprocessor.include.ab3"
0000641A <hashmap.include.bb2@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000642E <hashmap.include.bb2@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000646A <hashmap.include.bb2@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00006490 <hashmap.include.bb2@337> XINCLUDE "/Shared/preprocessor.include.ab3"
0000649E <hashmap.include.bb2@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000064DA <hashmap.include.bb2@340> XINCLUDE "/Shared/preprocessor.include.ab3"
000064EE <hashmap.include.bb2@341> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652A <hashmap.include.bb2@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006540 <hashmap.include.bb2@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006554 <hashmap.include.bb2@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000655E <hashmap.include.bb2@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006582 <hashmap.include.bb2@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BA <hashmap.include.bb2@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000065C0 <hashmap.include.bb2@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000065CC <hashmap.include.bb2@351> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E0 <hashmap.include.bb2@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EA <hashmap.include.bb2@355> XINCLUDE "/Shared/preprocessor.include.ab3"
00006612 <hashmap.include.bb2@356> XINCLUDE "/Shared/preprocessor.include.ab3"
0000663A <hashmap.include.bb2@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000664C <hashmap.include.bb2@358> XINCLUDE "/Shared/preprocessor.include.ab3"
00006678 <hashmap.include.bb2@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000066AC <hashmap.include.bb2@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000066D8 <hashmap.include.bb2@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006724 <hashmap.include.bb2@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006734 <hashmap.include.bb2@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000673A <hashmap.include.bb2@366> XINCLUDE "/Shared/preprocessor.include.ab3"
00006746 <hashmap.include.bb2@367> XINCLUDE "/Shared/preprocessor.include.ab3"
00006774 <hashmap.include.bb2@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00006776 <hashmap.include.bb2@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000677C <hashmap.include.bb2@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00006786 <hashmap.include.bb2@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000067B0 <hashmap.include.bb2@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000067BA <hashmap.include.bb2@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C0 <hashmap.include.bb2@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EA <hashmap.include.bb2@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000067F2 <hashmap.include.bb2@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006812 <hashmap.include.bb2@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000681C <hashmap.include.bb2@384> XINCLUDE "/Shared/preprocessor.include.ab3"
0000682A <hashmap.include.bb2@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000683A <hashmap.include.bb2@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006844 <hashmap.include.bb2@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000685E <hashmap.include.bb2@389> XINCLUDE "/Shared/preprocessor.include.ab3"
0000685E <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006878 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006890 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B6 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
000068EC <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F0 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
0000690A <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006922 <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
0000692C <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006944 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006948 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006962 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697A <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006992 <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B6 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BC <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
000069E6 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A04 <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A14 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1E <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A2C <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A52 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A86 <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AA2 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AAC <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AC8 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD6 <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AEA <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B0C <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B2E <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B4C <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B80 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B90 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B94 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAA <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BCA <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD4 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BFE <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C14 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C24 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C40 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C5C <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C78 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C94 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB0 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CCC <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CE8 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D04 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D20 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D3C <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D58 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D74 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D90 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DAC <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC8 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DE4 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E00 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E1C <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E38 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E54 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E70 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E8C <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA8 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC4 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EE0 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EFC <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F18 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F34 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F50 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F6C <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F88 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA4 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FC0 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FDC <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF8 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007014 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007030 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
0000704C <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00007068 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007084 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000070A0 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000070BC <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D8 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F4 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007110 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000712C <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
00007148 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007164 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007180 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
0000719C <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B8 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D4 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000071F0 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
0000720C <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007228 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007244 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007260 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
0000727C <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007298 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B4 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000072D0 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000072EC <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007308 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007324 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007340 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000735C <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
00007378 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
00007394 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000073B0 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000073CC <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E8 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007404 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007420 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
0000743C <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00007458 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007474 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
00007490 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000074AC <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C8 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E4 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007500 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
0000751C <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
00007538 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007554 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007570 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
0000758C <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A8 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C4 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000075E0 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
000075FC <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007618 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007634 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007650 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
0000766C <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
00007688 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A4 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000076C0 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000076DC <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F8 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007714 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007730 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
0000774C <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
00007768 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007784 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000077A0 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000077BC <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D8 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F4 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007810 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
0000782C <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00007848 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007864 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007880 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
0000789C <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B8 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D4 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
000078F0 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
0000790C <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007928 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007944 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007960 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
0000797C <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007998 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B4 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
000079D0 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
000079EC <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A08 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A24 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A30 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3E <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A48 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A4E <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A7C <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A9A <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ACC <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AD6 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AFC <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B06 <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B10 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B1A <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B34 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B62 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B7C <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B8A <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC4 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BCC <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE6 <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C0C <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2C <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C4E <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C54 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C62 <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C68 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C70 <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C76 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C7E <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C92 <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB8 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE0 <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEA <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CFE <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D12 <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D22 <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3C <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D64 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D76 <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D98 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D9E <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DA6 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DE6 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E04 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E12 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E1A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E20 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E34 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E66 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E74 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E8E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E98 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EB4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EDC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFA <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F08 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F18 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F40 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F62 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F76 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F94 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FF0 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008042 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008070 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000080CC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000080F2 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008112 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00008138 <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00008158 <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00008178 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000817E <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
0000818C <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
0000819A <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A0 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A8 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C6 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
000081DA <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
000081EA <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008200 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00008218 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
00008234 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000823E <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
0000825A <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
0000826C <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
0000829A <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D6 <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E6 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EC <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F2 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
0000830A <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000831A <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000083DA <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008420 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
0000842E <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00008434 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008444 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
0000846E <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00008474 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A0 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000084B0 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000084C0 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000084DE <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EC <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008522 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00008546 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
0000855A <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
0000856A <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
00008588 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00008596 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000085BA <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
000085DE <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
000085EC <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000085FA <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000861A <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00008628 <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
0000862E <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00008634 <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008642 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008650 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008670 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867E <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008684 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00008694 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869E <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B2 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D8 <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F8 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
0000871E <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
00008724 <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
00008732 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008738 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
0000874C <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
0000875C <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
00008772 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878A <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000087A6 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000087B0 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000087CC <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
000087FA <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008836 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008846 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008854 <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
0000885A <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
0000886A <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008894 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
0000889A <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C6 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D6 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
000088E6 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008904 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008912 <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008948 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
0000896C <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008980 <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008990 <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
000089AE <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BC <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E0 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A04 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A0A <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A1A <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A20 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A56 <preprocessor.include.ab3@498> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A74 <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9A <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ABA <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AD8 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B06 <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B68 <preprocessor.include.ab3@504> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B82 <preprocessor.include.ab3@505> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B9C <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BA6 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE4 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE8 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BF2 <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C20 <preprocessor.include.ab3@515> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C40 <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C58 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CB6 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CE2 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CF4 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D04 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D1C <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D22 <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D5C <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D66 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D76 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D88 <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D88 <AmiBlitz3.ab2@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D88 <wizard_Table.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
00008D94 <wizard_Table.include.bb2@73> XINCLUDE "PE/wizard_Table.include.bb2"
00008DB6 <wizard_Table.include.bb2@78> XINCLUDE "PE/wizard_Table.include.bb2"
00008E12 <wizard_Table.include.bb2@79> XINCLUDE "PE/wizard_Table.include.bb2"
00008E18 <wizard_Table.include.bb2@80> XINCLUDE "PE/wizard_Table.include.bb2"
00008E18 <wizard_Tools.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
00008E18 <screen.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
00008E18 <asl.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
00008E3C <asl.include.bb2@93> XINCLUDE "PE/wizard_Table.include.bb2"
00008E64 <asl.include.bb2@94> XINCLUDE "PE/wizard_Table.include.bb2"
00008E88 <asl.include.bb2@95> XINCLUDE "PE/wizard_Table.include.bb2"
00008EB6 <asl.include.bb2@294> XINCLUDE "PE/wizard_Table.include.bb2"
000090D4 <asl.include.bb2@296> XINCLUDE "PE/wizard_Table.include.bb2"
00009102 <asl.include.bb2@298> XINCLUDE "PE/wizard_Table.include.bb2"
0000912E <asl.include.bb2@300> XINCLUDE "PE/wizard_Table.include.bb2"
0000916A <asl.include.bb2@301> XINCLUDE "PE/wizard_Table.include.bb2"
00009196 <asl.include.bb2@302> XINCLUDE "PE/wizard_Table.include.bb2"
000091C2 <asl.include.bb2@303> XINCLUDE "PE/wizard_Table.include.bb2"
000091EE <asl.include.bb2@304> XINCLUDE "PE/wizard_Table.include.bb2"
0000921A <asl.include.bb2@305> XINCLUDE "PE/wizard_Table.include.bb2"
00009246 <asl.include.bb2@306> XINCLUDE "PE/wizard_Table.include.bb2"
00009272 <asl.include.bb2@307> XINCLUDE "PE/wizard_Table.include.bb2"
0000929E <asl.include.bb2@308> XINCLUDE "PE/wizard_Table.include.bb2"
000092CA <asl.include.bb2@309> XINCLUDE "PE/wizard_Table.include.bb2"
0000935A <asl.include.bb2@311> XINCLUDE "PE/wizard_Table.include.bb2"
000093EA <asl.include.bb2@312> XINCLUDE "PE/wizard_Table.include.bb2"
00009488 <asl.include.bb2@313> XINCLUDE "PE/wizard_Table.include.bb2"
000094D2 <asl.include.bb2@314> XINCLUDE "PE/wizard_Table.include.bb2"
00009512 <asl.include.bb2@315> XINCLUDE "PE/wizard_Table.include.bb2"
00009518 <asl.include.bb2@316> XINCLUDE "PE/wizard_Table.include.bb2"
00009562 <asl.include.bb2@319> XINCLUDE "PE/wizard_Table.include.bb2"
000095A2 <asl.include.bb2@320> XINCLUDE "PE/wizard_Table.include.bb2"
000095CC <asl.include.bb2@321> XINCLUDE "PE/wizard_Table.include.bb2"
000095D2 <asl.include.bb2@322> XINCLUDE "PE/wizard_Table.include.bb2"
000095FC <asl.include.bb2@323> XINCLUDE "PE/wizard_Table.include.bb2"
00009626 <asl.include.bb2@325> XINCLUDE "PE/wizard_Table.include.bb2"
00009650 <asl.include.bb2@327> XINCLUDE "PE/wizard_Table.include.bb2"
0000965A <asl.include.bb2@328> XINCLUDE "PE/wizard_Table.include.bb2"
00009678 <asl.include.bb2@329> XINCLUDE "PE/wizard_Table.include.bb2"
0000969A <asl.include.bb2@330> XINCLUDE "PE/wizard_Table.include.bb2"
000096C8 <asl.include.bb2@331> XINCLUDE "PE/wizard_Table.include.bb2"
000096F6 <asl.include.bb2@332> XINCLUDE "PE/wizard_Table.include.bb2"
00009724 <asl.include.bb2@333> XINCLUDE "PE/wizard_Table.include.bb2"
0000976A <asl.include.bb2@336> XINCLUDE "PE/wizard_Table.include.bb2"
000097B0 <asl.include.bb2@337> XINCLUDE "PE/wizard_Table.include.bb2"
000097F6 <asl.include.bb2@338> XINCLUDE "PE/wizard_Table.include.bb2"
0000982E <asl.include.bb2@340> XINCLUDE "PE/wizard_Table.include.bb2"
0000992C <asl.include.bb2@341> XINCLUDE "PE/wizard_Table.include.bb2"
0000994A <asl.include.bb2@343> XINCLUDE "PE/wizard_Table.include.bb2"
00009954 <asl.include.bb2@345> XINCLUDE "PE/wizard_Table.include.bb2"
0000997A <asl.include.bb2@346> XINCLUDE "PE/wizard_Table.include.bb2"
0000998C <asl.include.bb2@348> XINCLUDE "PE/wizard_Table.include.bb2"
000099BA <asl.include.bb2@349> XINCLUDE "PE/wizard_Table.include.bb2"
000099E2 <asl.include.bb2@350> XINCLUDE "PE/wizard_Table.include.bb2"
000099F4 <asl.include.bb2@351> XINCLUDE "PE/wizard_Table.include.bb2"
00009A4A <asl.include.bb2@352> XINCLUDE "PE/wizard_Table.include.bb2"
00009A80 <asl.include.bb2@353> XINCLUDE "PE/wizard_Table.include.bb2"
00009A90 <asl.include.bb2@355> XINCLUDE "PE/wizard_Table.include.bb2"
00009A96 <asl.include.bb2@356> XINCLUDE "PE/wizard_Table.include.bb2"
00009AA8 <asl.include.bb2@357> XINCLUDE "PE/wizard_Table.include.bb2"
00009AB2 <asl.include.bb2@358> XINCLUDE "PE/wizard_Table.include.bb2"
00009AEC <asl.include.bb2@359> XINCLUDE "PE/wizard_Table.include.bb2"
00009AF2 <asl.include.bb2@360> XINCLUDE "PE/wizard_Table.include.bb2"
00009B4A <asl.include.bb2@361> XINCLUDE "PE/wizard_Table.include.bb2"
00009B68 <asl.include.bb2@363> XINCLUDE "PE/wizard_Table.include.bb2"
00009B6E <asl.include.bb2@366> XINCLUDE "PE/wizard_Table.include.bb2"
00009B7E <asl.include.bb2@369> XINCLUDE "PE/wizard_Table.include.bb2"
00009B8E <asl.include.bb2@370> XINCLUDE "PE/wizard_Table.include.bb2"
00009B9E <asl.include.bb2@371> XINCLUDE "PE/wizard_Table.include.bb2"
00009BAE <asl.include.bb2@372> XINCLUDE "PE/wizard_Table.include.bb2"
00009BBE <asl.include.bb2@374> XINCLUDE "PE/wizard_Table.include.bb2"
00009BC8 <asl.include.bb2@376> XINCLUDE "PE/wizard_Table.include.bb2"
00009BDC <asl.include.bb2@377> XINCLUDE "PE/wizard_Table.include.bb2"
00009BF2 <asl.include.bb2@393> XINCLUDE "PE/wizard_Table.include.bb2"
00009C1A <asl.include.bb2@395> XINCLUDE "PE/wizard_Table.include.bb2"
00009C24 <asl.include.bb2@396> XINCLUDE "PE/wizard_Table.include.bb2"
00009C36 <asl.include.bb2@397> XINCLUDE "PE/wizard_Table.include.bb2"
00009C70 <asl.include.bb2@398> XINCLUDE "PE/wizard_Table.include.bb2"
00009C7A <asl.include.bb2@399> XINCLUDE "PE/wizard_Table.include.bb2"
00009CA4 <asl.include.bb2@401> XINCLUDE "PE/wizard_Table.include.bb2"
00009CBC <asl.include.bb2@402> XINCLUDE "PE/wizard_Table.include.bb2"
00009D0E <asl.include.bb2@438> XINCLUDE "PE/wizard_Table.include.bb2"
00009D3C <asl.include.bb2@440> XINCLUDE "PE/wizard_Table.include.bb2"
00009DCE <asl.include.bb2@441> XINCLUDE "PE/wizard_Table.include.bb2"
00009E14 <asl.include.bb2@442> XINCLUDE "PE/wizard_Table.include.bb2"
00009EA6 <asl.include.bb2@443> XINCLUDE "PE/wizard_Table.include.bb2"
00009EC0 <asl.include.bb2@444> XINCLUDE "PE/wizard_Table.include.bb2"
00009EC0 <screen.include.bb2@38> XINCLUDE "PE/wizard_Table.include.bb2"
00009EE4 <screen.include.bb2@89> XINCLUDE "PE/wizard_Table.include.bb2"
00009EF4 <screen.include.bb2@92> XINCLUDE "PE/wizard_Table.include.bb2"
00009F02 <screen.include.bb2@93> XINCLUDE "PE/wizard_Table.include.bb2"
00009F0C <screen.include.bb2@94> XINCLUDE "PE/wizard_Table.include.bb2"
00009F1A <screen.include.bb2@95> XINCLUDE "PE/wizard_Table.include.bb2"
00009F34 <screen.include.bb2@282> XINCLUDE "PE/wizard_Table.include.bb2"
00009F46 <screen.include.bb2@283> XINCLUDE "PE/wizard_Table.include.bb2"
00009F58 <screen.include.bb2@284> XINCLUDE "PE/wizard_Table.include.bb2"
00009F66 <screen.include.bb2@285> XINCLUDE "PE/wizard_Table.include.bb2"
00009F82 <screen.include.bb2@286> XINCLUDE "PE/wizard_Table.include.bb2"
00009F9A <screen.include.bb2@287> XINCLUDE "PE/wizard_Table.include.bb2"
00009FC2 <screen.include.bb2@288> XINCLUDE "PE/wizard_Table.include.bb2"
00009FC6 <screen.include.bb2@291> XINCLUDE "PE/wizard_Table.include.bb2"
00009FDC <screen.include.bb2@593> XINCLUDE "PE/wizard_Table.include.bb2"
00009FEE <screen.include.bb2@594> XINCLUDE "PE/wizard_Table.include.bb2"
0000A018 <screen.include.bb2@595> XINCLUDE "PE/wizard_Table.include.bb2"
0000A04A <screen.include.bb2@596> XINCLUDE "PE/wizard_Table.include.bb2"
0000A060 <screen.include.bb2@597> XINCLUDE "PE/wizard_Table.include.bb2"
0000A070 <screen.include.bb2@598> XINCLUDE "PE/wizard_Table.include.bb2"
0000A074 <screen.include.bb2@600> XINCLUDE "PE/wizard_Table.include.bb2"
0000A08A <screen.include.bb2@614> XINCLUDE "PE/wizard_Table.include.bb2"
0000A09C <screen.include.bb2@615> XINCLUDE "PE/wizard_Table.include.bb2"
0000A0A2 <screen.include.bb2@616> XINCLUDE "PE/wizard_Table.include.bb2"
0000A0AE <screen.include.bb2@618> XINCLUDE "PE/wizard_Table.include.bb2"
0000A0BC <screen.include.bb2@620> XINCLUDE "PE/wizard_Table.include.bb2"
0000A0EA <screen.include.bb2@621> XINCLUDE "PE/wizard_Table.include.bb2"
0000A0FE <screen.include.bb2@623> XINCLUDE "PE/wizard_Table.include.bb2"
0000A112 <screen.include.bb2@626> XINCLUDE "PE/wizard_Table.include.bb2"
0000A132 <screen.include.bb2@628> XINCLUDE "PE/wizard_Table.include.bb2"
0000A14C <screen.include.bb2@629> XINCLUDE "PE/wizard_Table.include.bb2"
0000A160 <screen.include.bb2@631> XINCLUDE "PE/wizard_Table.include.bb2"
0000A166 <screen.include.bb2@634> XINCLUDE "PE/wizard_Table.include.bb2"
0000A178 <screen.include.bb2@635> XINCLUDE "PE/wizard_Table.include.bb2"
0000A182 <screen.include.bb2@637> XINCLUDE "PE/wizard_Table.include.bb2"
0000A1E0 <screen.include.bb2@638> XINCLUDE "PE/wizard_Table.include.bb2"
0000A1F2 <screen.include.bb2@639> XINCLUDE "PE/wizard_Table.include.bb2"
0000A234 <screen.include.bb2@640> XINCLUDE "PE/wizard_Table.include.bb2"
0000A23A <screen.include.bb2@641> XINCLUDE "PE/wizard_Table.include.bb2"
0000A240 <screen.include.bb2@642> XINCLUDE "PE/wizard_Table.include.bb2"
0000A254 <screen.include.bb2@644> XINCLUDE "PE/wizard_Table.include.bb2"
0000A26E <screen.include.bb2@646> XINCLUDE "PE/wizard_Table.include.bb2"
0000A270 <screen.include.bb2@648> XINCLUDE "PE/wizard_Table.include.bb2"
0000A27A <screen.include.bb2@649> XINCLUDE "PE/wizard_Table.include.bb2"
0000A288 <screen.include.bb2@650> XINCLUDE "PE/wizard_Table.include.bb2"
0000A296 <screen.include.bb2@651> XINCLUDE "PE/wizard_Table.include.bb2"
0000A2A8 <screen.include.bb2@653> XINCLUDE "PE/wizard_Table.include.bb2"
0000A2BE <screen.include.bb2@654> XINCLUDE "PE/wizard_Table.include.bb2"
0000A2CC <screen.include.bb2@655> XINCLUDE "PE/wizard_Table.include.bb2"
0000A2D0 <screen.include.bb2@659> XINCLUDE "PE/wizard_Table.include.bb2"
0000A2FE <screen.include.bb2@660> XINCLUDE "PE/wizard_Table.include.bb2"
0000A314 <screen.include.bb2@964> XINCLUDE "PE/wizard_Table.include.bb2"
0000A320 <screen.include.bb2@965> XINCLUDE "PE/wizard_Table.include.bb2"
0000A324 <screen.include.bb2@966> XINCLUDE "PE/wizard_Table.include.bb2"
0000A33A <screen.include.bb2@982> XINCLUDE "PE/wizard_Table.include.bb2"
0000A34A <screen.include.bb2@983> XINCLUDE "PE/wizard_Table.include.bb2"
0000A34E <screen.include.bb2@984> XINCLUDE "PE/wizard_Table.include.bb2"
0000A34E <PE_Tools.include.bb2@1> XINCLUDE "PE/wizard_Table.include.bb2"
0000A372 <PE_Tools.include.bb2@67> XINCLUDE "PE/wizard_Table.include.bb2"
0000A37A <PE_Tools.include.bb2@76> XINCLUDE "PE/wizard_Table.include.bb2"
0000A3A8 <PE_Tools.include.bb2@77> XINCLUDE "PE/wizard_Table.include.bb2"
0000A3D6 <PE_Tools.include.bb2@78> XINCLUDE "PE/wizard_Table.include.bb2"
0000A446 <PE_Tools.include.bb2@79> XINCLUDE "PE/wizard_Table.include.bb2"
0000A454 <PE_Tools.include.bb2@80> XINCLUDE "PE/wizard_Table.include.bb2"
0000A4A4 <PE_Tools.include.bb2@81> XINCLUDE "PE/wizard_Table.include.bb2"
0000A4A4 <wizard_Tools.include.bb2@23> XINCLUDE "PE/wizard_Table.include.bb2"
0000A4CC <wizard_Tools.include.bb2@47> XINCLUDE "PE/wizard_Table.include.bb2"
0000A4FA <wizard_Tools.include.bb2@114> XINCLUDE "PE/wizard_Table.include.bb2"
0000A54C <wizard_Tools.include.bb2@115> XINCLUDE "PE/wizard_Table.include.bb2"
0000A55E <wizard_Tools.include.bb2@116> XINCLUDE "PE/wizard_Table.include.bb2"
0000A5A4 <wizard_Tools.include.bb2@117> XINCLUDE "PE/wizard_Table.include.bb2"
0000A5B2 <wizard_Tools.include.bb2@118> XINCLUDE "PE/wizard_Table.include.bb2"
0000A5C4 <wizard_Tools.include.bb2@119> XINCLUDE "PE/wizard_Table.include.bb2"
0000A5FA <wizard_Tools.include.bb2@121> XINCLUDE "PE/wizard_Table.include.bb2"
0000A608 <wizard_Tools.include.bb2@122> XINCLUDE "PE/wizard_Table.include.bb2"
0000A60E <wizard_Tools.include.bb2@125> XINCLUDE "PE/wizard_Table.include.bb2"
0000A626 <wizard_Tools.include.bb2@126> XINCLUDE "PE/wizard_Table.include.bb2"
0000A654 <wizard_Tools.include.bb2@127> XINCLUDE "PE/wizard_Table.include.bb2"
0000A666 <wizard_Tools.include.bb2@128> XINCLUDE "PE/wizard_Table.include.bb2"
0000A6B4 <wizard_Tools.include.bb2@131> XINCLUDE "PE/wizard_Table.include.bb2"
0000A702 <wizard_Tools.include.bb2@132> XINCLUDE "PE/wizard_Table.include.bb2"
0000A71C <wizard_Tools.include.bb2@133> XINCLUDE "PE/wizard_Table.include.bb2"
0000A740 <wizard_Tools.include.bb2@134> XINCLUDE "PE/wizard_Table.include.bb2"
0000A758 <wizard_Tools.include.bb2@137> XINCLUDE "PE/wizard_Table.include.bb2"
0000A77E <wizard_Tools.include.bb2@251> XINCLUDE "PE/wizard_Table.include.bb2"
0000A78E <wizard_Tools.include.bb2@252> XINCLUDE "PE/wizard_Table.include.bb2"
0000A796 <wizard_Tools.include.bb2@253> XINCLUDE "PE/wizard_Table.include.bb2"
0000A7A4 <wizard_Tools.include.bb2@254> XINCLUDE "PE/wizard_Table.include.bb2"
0000A7CE <wizard_Tools.include.bb2@255> XINCLUDE "PE/wizard_Table.include.bb2"
0000A808 <wizard_Tools.include.bb2@256> XINCLUDE "PE/wizard_Table.include.bb2"
0000A86E <wizard_Tools.include.bb2@257> XINCLUDE "PE/wizard_Table.include.bb2"
0000A87E <wizard_Tools.include.bb2@258> XINCLUDE "PE/wizard_Table.include.bb2"
0000A8A4 <wizard_Tools.include.bb2@259> XINCLUDE "PE/wizard_Table.include.bb2"
0000A8C4 <wizard_Tools.include.bb2@261> XINCLUDE "PE/wizard_Table.include.bb2"
0000A8EE <wizard_Tools.include.bb2@262> XINCLUDE "PE/wizard_Table.include.bb2"
0000A8F6 <wizard_Tools.include.bb2@263> XINCLUDE "PE/wizard_Table.include.bb2"
0000A90A <wizard_Tools.include.bb2@265> XINCLUDE "PE/wizard_Table.include.bb2"
0000A946 <wizard_Tools.include.bb2@266> XINCLUDE "PE/wizard_Table.include.bb2"
0000A982 <wizard_Tools.include.bb2@267> XINCLUDE "PE/wizard_Table.include.bb2"
0000A996 <wizard_Tools.include.bb2@268> XINCLUDE "PE/wizard_Table.include.bb2"
0000A9AA <wizard_Tools.include.bb2@269> XINCLUDE "PE/wizard_Table.include.bb2"
0000A9BC <wizard_Tools.include.bb2@270> XINCLUDE "PE/wizard_Table.include.bb2"
0000A9C2 <wizard_Tools.include.bb2@271> XINCLUDE "PE/wizard_Table.include.bb2"
0000A9C8 <wizard_Tools.include.bb2@272> XINCLUDE "PE/wizard_Table.include.bb2"
0000A9CE <wizard_Tools.include.bb2@273> XINCLUDE "PE/wizard_Table.include.bb2"
0000A9E8 <wizard_Tools.include.bb2@276> XINCLUDE "PE/wizard_Table.include.bb2"
0000AA8C <wizard_Tools.include.bb2@278> XINCLUDE "PE/wizard_Table.include.bb2"
0000AAC6 <wizard_Tools.include.bb2@279> XINCLUDE "PE/wizard_Table.include.bb2"
0000AB38 <wizard_Tools.include.bb2@280> XINCLUDE "PE/wizard_Table.include.bb2"
0000AB52 <wizard_Tools.include.bb2@281> XINCLUDE "PE/wizard_Table.include.bb2"
0000AB5C <wizard_Tools.include.bb2@283> XINCLUDE "PE/wizard_Table.include.bb2"
0000ABA4 <wizard_Tools.include.bb2@284> XINCLUDE "PE/wizard_Table.include.bb2"
0000ABAA <wizard_Tools.include.bb2@285> XINCLUDE "PE/wizard_Table.include.bb2"
0000ABB8 <wizard_Tools.include.bb2@286> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC12 <wizard_Tools.include.bb2@287> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC22 <wizard_Tools.include.bb2@288> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC28 <wizard_Tools.include.bb2@289> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC3C <wizard_Tools.include.bb2@291> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC46 <wizard_Tools.include.bb2@292> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC6C <wizard_Tools.include.bb2@293> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC72 <wizard_Tools.include.bb2@294> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC78 <wizard_Tools.include.bb2@295> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC7A <wizard_Tools.include.bb2@297> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC80 <wizard_Tools.include.bb2@298> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC86 <wizard_Tools.include.bb2@299> XINCLUDE "PE/wizard_Table.include.bb2"
0000AC90 <wizard_Tools.include.bb2@301> XINCLUDE "PE/wizard_Table.include.bb2"
0000ACC8 <wizard_Tools.include.bb2@302> XINCLUDE "PE/wizard_Table.include.bb2"
0000ACF2 <wizard_Tools.include.bb2@303> XINCLUDE "PE/wizard_Table.include.bb2"
0000ACFE <wizard_Tools.include.bb2@305> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD08 <wizard_Tools.include.bb2@306> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD1C <wizard_Tools.include.bb2@308> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD1C <wizard_Table.include.bb2@84> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD44 <wizard_Table.include.bb2@158> XINCLUDE "PE/wizard_Table.include.bb2"
0000AD6C <wizard_Table.include.bb2@159> XINCLUDE "PE/wizard_Table.include.bb2"
0000ADAE <wizard_Table.include.bb2@335> XINCLUDE "PE/wizard_Table.include.bb2"
0000ADC8 <wizard_Table.include.bb2@359> XINCLUDE "PE/wizard_Table.include.bb2"
0000ADF2 <wizard_Table.include.bb2@361> XINCLUDE "PE/wizard_Table.include.bb2"
0000AE0A <wizard_Table.include.bb2@370> XINCLUDE "PE/wizard_Table.include.bb2"
0000AE34 <wizard_Table.include.bb2@390> XINCLUDE "PE/wizard_Table.include.bb2"
0000AE4E <wizard_Table.include.bb2@398> XINCLUDE "PE/wizard_Table.include.bb2"
0000AE78 <wizard_Table.include.bb2@400> XINCLUDE "PE/wizard_Table.include.bb2"
0000AE92 <wizard_Table.include.bb2@408> XINCLUDE "PE/wizard_Table.include.bb2"
0000AEBC <wizard_Table.include.bb2@442> XINCLUDE "PE/wizard_Table.include.bb2"
0000AEE4 <wizard_Table.include.bb2@444> XINCLUDE "PE/wizard_Table.include.bb2"
0000AF30 <wizard_Table.include.bb2@445> XINCLUDE "PE/wizard_Table.include.bb2"
0000AF3A <wizard_Table.include.bb2@446> XINCLUDE "PE/wizard_Table.include.bb2"
0000AFA6 <wizard_Table.include.bb2@448> XINCLUDE "PE/wizard_Table.include.bb2"
0000B020 <wizard_Table.include.bb2@449> XINCLUDE "PE/wizard_Table.include.bb2"
0000B07E <wizard_Table.include.bb2@450> XINCLUDE "PE/wizard_Table.include.bb2"
0000B096 <wizard_Table.include.bb2@451> XINCLUDE "PE/wizard_Table.include.bb2"
0000B110 <wizard_Table.include.bb2@453> XINCLUDE "PE/wizard_Table.include.bb2"
0000B12C <wizard_Table.include.bb2@454> XINCLUDE "PE/wizard_Table.include.bb2"
0000B150 <wizard_Table.include.bb2@455> XINCLUDE "PE/wizard_Table.include.bb2"
0000B162 <wizard_Table.include.bb2@456> XINCLUDE "PE/wizard_Table.include.bb2"
0000B1BE <wizard_Table.include.bb2@457> XINCLUDE "PE/wizard_Table.include.bb2"
0000B1C4 <wizard_Table.include.bb2@459> XINCLUDE "PE/wizard_Table.include.bb2"
0000B1DC <wizard_Table.include.bb2@460> XINCLUDE "PE/wizard_Table.include.bb2"
0000B1F4 <wizard_Table.include.bb2@464> XINCLUDE "PE/wizard_Table.include.bb2"
0000B21E <wizard_Table.include.bb2@467> XINCLUDE "PE/wizard_Table.include.bb2"
0000B246 <wizard_Table.include.bb2@469> XINCLUDE "PE/wizard_Table.include.bb2"
0000B2A8 <wizard_Table.include.bb2@470> XINCLUDE "PE/wizard_Table.include.bb2"
0000B30A <wizard_Table.include.bb2@471> XINCLUDE "PE/wizard_Table.include.bb2"
0000B384 <wizard_Table.include.bb2@473> XINCLUDE "PE/wizard_Table.include.bb2"
0000B38E <wizard_Table.include.bb2@474> XINCLUDE "PE/wizard_Table.include.bb2"
0000B3EC <wizard_Table.include.bb2@475> XINCLUDE "PE/wizard_Table.include.bb2"
0000B404 <wizard_Table.include.bb2@476> XINCLUDE "PE/wizard_Table.include.bb2"
0000B47E <wizard_Table.include.bb2@478> XINCLUDE "PE/wizard_Table.include.bb2"
0000B488 <wizard_Table.include.bb2@479> XINCLUDE "PE/wizard_Table.include.bb2"
0000B49A <wizard_Table.include.bb2@480> XINCLUDE "PE/wizard_Table.include.bb2"
0000B4F6 <wizard_Table.include.bb2@481> XINCLUDE "PE/wizard_Table.include.bb2"
0000B4FC <wizard_Table.include.bb2@482> XINCLUDE "PE/wizard_Table.include.bb2"
0000B514 <wizard_Table.include.bb2@483> XINCLUDE "PE/wizard_Table.include.bb2"
0000B51A <wizard_Table.include.bb2@487> XINCLUDE "PE/wizard_Table.include.bb2"
0000B566 <wizard_Table.include.bb2@488> XINCLUDE "PE/wizard_Table.include.bb2"
0000B570 <wizard_Table.include.bb2@489> XINCLUDE "PE/wizard_Table.include.bb2"
0000B588 <wizard_Table.include.bb2@490> XINCLUDE "PE/wizard_Table.include.bb2"
0000B5B2 <wizard_Table.include.bb2@494> XINCLUDE "PE/wizard_Table.include.bb2"
0000B5FA <wizard_Table.include.bb2@497> XINCLUDE "PE/wizard_Table.include.bb2"
0000B636 <wizard_Table.include.bb2@498> XINCLUDE "PE/wizard_Table.include.bb2"
0000B656 <wizard_Table.include.bb2@499> XINCLUDE "PE/wizard_Table.include.bb2"
0000B68A <wizard_Table.include.bb2@500> XINCLUDE "PE/wizard_Table.include.bb2"
0000B69C <wizard_Table.include.bb2@501> XINCLUDE "PE/wizard_Table.include.bb2"
0000B6AC <wizard_Table.include.bb2@502> XINCLUDE "PE/wizard_Table.include.bb2"
0000B6DE <wizard_Table.include.bb2@503> XINCLUDE "PE/wizard_Table.include.bb2"
0000B702 <wizard_Table.include.bb2@504> XINCLUDE "PE/wizard_Table.include.bb2"
0000B712 <wizard_Table.include.bb2@505> XINCLUDE "PE/wizard_Table.include.bb2"
0000B74C <wizard_Table.include.bb2@506> XINCLUDE "PE/wizard_Table.include.bb2"
0000B756 <wizard_Table.include.bb2@512> XINCLUDE "PE/wizard_Table.include.bb2"
0000B768 <wizard_Table.include.bb2@513> XINCLUDE "PE/wizard_Table.include.bb2"
0000B788 <wizard_Table.include.bb2@514> XINCLUDE "PE/wizard_Table.include.bb2"
0000B7DE <wizard_Table.include.bb2@515> XINCLUDE "PE/wizard_Table.include.bb2"
0000B824 <wizard_Table.include.bb2@516> XINCLUDE "PE/wizard_Table.include.bb2"
0000B836 <wizard_Table.include.bb2@517> XINCLUDE "PE/wizard_Table.include.bb2"
0000B840 <wizard_Table.include.bb2@518> XINCLUDE "PE/wizard_Table.include.bb2"
0000B846 <wizard_Table.include.bb2@521> XINCLUDE "PE/wizard_Table.include.bb2"
0000B850 <wizard_Table.include.bb2@522> XINCLUDE "PE/wizard_Table.include.bb2"
0000B86E <wizard_Table.include.bb2@523> XINCLUDE "PE/wizard_Table.include.bb2"
0000B886 <wizard_Table.include.bb2@524> XINCLUDE "PE/wizard_Table.include.bb2"
0000B88C <wizard_Table.include.bb2@526> XINCLUDE "PE/wizard_Table.include.bb2"
0000B918 <wizard_Table.include.bb2@527> XINCLUDE "PE/wizard_Table.include.bb2"
0000B96A <wizard_Table.include.bb2@530> XINCLUDE "PE/wizard_Table.include.bb2"
0000B998 <wizard_Table.include.bb2@532> XINCLUDE "PE/wizard_Table.include.bb2"
0000B9B6 <wizard_Table.include.bb2@534> XINCLUDE "PE/wizard_Table.include.bb2"
0000B9CE <wizard_Table.include.bb2@535> XINCLUDE "PE/wizard_Table.include.bb2"
0000BA90 <wizard_Table.include.bb2@549> XINCLUDE "PE/wizard_Table.include.bb2"
0000BABE <wizard_Table.include.bb2@552> XINCLUDE "PE/wizard_Table.include.bb2"
0000BAD0 <wizard_Table.include.bb2@554> XINCLUDE "PE/wizard_Table.include.bb2"
0000BAEE <wizard_Table.include.bb2@555> XINCLUDE "PE/wizard_Table.include.bb2"
0000BB12 <wizard_Table.include.bb2@556> XINCLUDE "PE/wizard_Table.include.bb2"
0000BB14 <wizard_Table.include.bb2@557> XINCLUDE "PE/wizard_Table.include.bb2"
0000BB28 <wizard_Table.include.bb2@559> XINCLUDE "PE/wizard_Table.include.bb2"
0000BB74 <wizard_Table.include.bb2@560> XINCLUDE "PE/wizard_Table.include.bb2"
0000BBC0 <wizard_Table.include.bb2@561> XINCLUDE "PE/wizard_Table.include.bb2"
0000BC0C <wizard_Table.include.bb2@562> XINCLUDE "PE/wizard_Table.include.bb2"
0000BC58 <wizard_Table.include.bb2@563> XINCLUDE "PE/wizard_Table.include.bb2"
0000BCA4 <wizard_Table.include.bb2@564> XINCLUDE "PE/wizard_Table.include.bb2"
0000BCF0 <wizard_Table.include.bb2@565> XINCLUDE "PE/wizard_Table.include.bb2"
0000BD3C <wizard_Table.include.bb2@566> XINCLUDE "PE/wizard_Table.include.bb2"
0000BD88 <wizard_Table.include.bb2@567> XINCLUDE "PE/wizard_Table.include.bb2"
0000BDD4 <wizard_Table.include.bb2@568> XINCLUDE "PE/wizard_Table.include.bb2"
0000BDFE <wizard_Table.include.bb2@570> XINCLUDE "PE/wizard_Table.include.bb2"
0000BE20 <wizard_Table.include.bb2@571> XINCLUDE "PE/wizard_Table.include.bb2"
0000BE42 <wizard_Table.include.bb2@572> XINCLUDE "PE/wizard_Table.include.bb2"
0000BE52 <wizard_Table.include.bb2@573> XINCLUDE "PE/wizard_Table.include.bb2"
0000BE6A <wizard_Table.include.bb2@574> XINCLUDE "PE/wizard_Table.include.bb2"
0000BE74 <wizard_Table.include.bb2@575> XINCLUDE "PE/wizard_Table.include.bb2"
0000BE8E <wizard_Table.include.bb2@578> XINCLUDE "PE/wizard_Table.include.bb2"
0000BED0 <wizard_Table.include.bb2@620> XINCLUDE "PE/wizard_Table.include.bb2"
0000BF26 <wizard_Table.include.bb2@629> XINCLUDE "PE/wizard_Table.include.bb2"
0000BF7C <wizard_Table.include.bb2@630> XINCLUDE "PE/wizard_Table.include.bb2"
0000BFAA <wizard_Table.include.bb2@631> XINCLUDE "PE/wizard_Table.include.bb2"
0000BFE6 <wizard_Table.include.bb2@633> XINCLUDE "PE/wizard_Table.include.bb2"
0000C022 <wizard_Table.include.bb2@634> XINCLUDE "PE/wizard_Table.include.bb2"
0000C05A <wizard_Table.include.bb2@635> XINCLUDE "PE/wizard_Table.include.bb2"
0000C064 <wizard_Table.include.bb2@636> XINCLUDE "PE/wizard_Table.include.bb2"
0000C06E <wizard_Table.include.bb2@637> XINCLUDE "PE/wizard_Table.include.bb2"
0000C078 <wizard_Table.include.bb2@638> XINCLUDE "PE/wizard_Table.include.bb2"
0000C082 <wizard_Table.include.bb2@639> XINCLUDE "PE/wizard_Table.include.bb2"
0000C090 <wizard_Table.include.bb2@641> XINCLUDE "PE/wizard_Table.include.bb2"
0000C09C <wizard_Table.include.bb2@643> XINCLUDE "PE/wizard_Table.include.bb2"
0000C0A8 <wizard_Table.include.bb2@644> XINCLUDE "PE/wizard_Table.include.bb2"
0000C0B6 <wizard_Table.include.bb2@646> XINCLUDE "PE/wizard_Table.include.bb2"
0000C0C4 <wizard_Table.include.bb2@647> XINCLUDE "PE/wizard_Table.include.bb2"
0000C0D2 <wizard_Table.include.bb2@648> XINCLUDE "PE/wizard_Table.include.bb2"
0000C0E0 <wizard_Table.include.bb2@649> XINCLUDE "PE/wizard_Table.include.bb2"
0000C0EE <wizard_Table.include.bb2@650> XINCLUDE "PE/wizard_Table.include.bb2"
0000C106 <wizard_Table.include.bb2@652> XINCLUDE "PE/wizard_Table.include.bb2"
0000C112 <wizard_Table.include.bb2@653> XINCLUDE "PE/wizard_Table.include.bb2"
0000C11C <wizard_Table.include.bb2@655> XINCLUDE "PE/wizard_Table.include.bb2"
0000C14A <wizard_Table.include.bb2@656> XINCLUDE "PE/wizard_Table.include.bb2"
0000C168 <wizard_Table.include.bb2@657> XINCLUDE "PE/wizard_Table.include.bb2"
0000C182 <wizard_Table.include.bb2@658> XINCLUDE "PE/wizard_Table.include.bb2"
0000C1BC <wizard_Table.include.bb2@659> XINCLUDE "PE/wizard_Table.include.bb2"
0000C1DA <wizard_Table.include.bb2@660> XINCLUDE "PE/wizard_Table.include.bb2"
0000C1E8 <wizard_Table.include.bb2@661> XINCLUDE "PE/wizard_Table.include.bb2"
0000C202 <wizard_Table.include.bb2@662> XINCLUDE "PE/wizard_Table.include.bb2"
0000C22C <wizard_Table.include.bb2@664> XINCLUDE "PE/wizard_Table.include.bb2"
0000C25A <wizard_Table.include.bb2@667> XINCLUDE "PE/wizard_Table.include.bb2"
0000C2B0 <wizard_Table.include.bb2@668> XINCLUDE "PE/wizard_Table.include.bb2"
0000C306 <wizard_Table.include.bb2@669> XINCLUDE "PE/wizard_Table.include.bb2"
0000C334 <wizard_Table.include.bb2@670> XINCLUDE "PE/wizard_Table.include.bb2"
0000C380 <wizard_Table.include.bb2@671> XINCLUDE "PE/wizard_Table.include.bb2"
0000C38A <wizard_Table.include.bb2@672> XINCLUDE "PE/wizard_Table.include.bb2"
0000C3A2 <wizard_Table.include.bb2@673> XINCLUDE "PE/wizard_Table.include.bb2"
0000C3E0 <wizard_Table.include.bb2@682> XINCLUDE "PE/wizard_Table.include.bb2"
0000C40E <wizard_Table.include.bb2@684> XINCLUDE "PE/wizard_Table.include.bb2"
0000C41A <wizard_Table.include.bb2@685> XINCLUDE "PE/wizard_Table.include.bb2"
0000C426 <wizard_Table.include.bb2@686> XINCLUDE "PE/wizard_Table.include.bb2"
0000C446 <wizard_Table.include.bb2@687> XINCLUDE "PE/wizard_Table.include.bb2"
0000C466 <wizard_Table.include.bb2@688> XINCLUDE "PE/wizard_Table.include.bb2"
0000C486 <wizard_Table.include.bb2@689> XINCLUDE "PE/wizard_Table.include.bb2"
0000C490 <wizard_Table.include.bb2@690> XINCLUDE "PE/wizard_Table.include.bb2"
0000C4A8 <wizard_Table.include.bb2@691> XINCLUDE "PE/wizard_Table.include.bb2"
0000C56A <wizard_Table.include.bb2@725> XINCLUDE "PE/wizard_Table.include.bb2"
0000C598 <wizard_Table.include.bb2@728> XINCLUDE "PE/wizard_Table.include.bb2"
0000C5DE <wizard_Table.include.bb2@729> XINCLUDE "PE/wizard_Table.include.bb2"
0000C624 <wizard_Table.include.bb2@730> XINCLUDE "PE/wizard_Table.include.bb2"
0000C66A <wizard_Table.include.bb2@731> XINCLUDE "PE/wizard_Table.include.bb2"
0000C6B0 <wizard_Table.include.bb2@732> XINCLUDE "PE/wizard_Table.include.bb2"
0000C6F6 <wizard_Table.include.bb2@733> XINCLUDE "PE/wizard_Table.include.bb2"
0000C73C <wizard_Table.include.bb2@734> XINCLUDE "PE/wizard_Table.include.bb2"
0000C782 <wizard_Table.include.bb2@735> XINCLUDE "PE/wizard_Table.include.bb2"
0000C7C8 <wizard_Table.include.bb2@736> XINCLUDE "PE/wizard_Table.include.bb2"
0000C7E2 <wizard_Table.include.bb2@737> XINCLUDE "PE/wizard_Table.include.bb2"
0000C810 <wizard_Table.include.bb2@746> XINCLUDE "PE/wizard_Table.include.bb2"
0000C83E <wizard_Table.include.bb2@748> XINCLUDE "PE/wizard_Table.include.bb2"
0000C84C <wizard_Table.include.bb2@749> XINCLUDE "PE/wizard_Table.include.bb2"
0000C864 <wizard_Table.include.bb2@750> XINCLUDE "PE/wizard_Table.include.bb2"
0000C8C2 <wizard_Table.include.bb2@752> XINCLUDE "PE/wizard_Table.include.bb2"
0000C8F0 <wizard_Table.include.bb2@755> XINCLUDE "PE/wizard_Table.include.bb2"
0000C920 <wizard_Table.include.bb2@757> XINCLUDE "PE/wizard_Table.include.bb2"
0000C950 <wizard_Table.include.bb2@758> XINCLUDE "PE/wizard_Table.include.bb2"
0000C980 <wizard_Table.include.bb2@759> XINCLUDE "PE/wizard_Table.include.bb2"
0000C9B0 <wizard_Table.include.bb2@760> XINCLUDE "PE/wizard_Table.include.bb2"
0000C9E0 <wizard_Table.include.bb2@761> XINCLUDE "PE/wizard_Table.include.bb2"
0000CA10 <wizard_Table.include.bb2@762> XINCLUDE "PE/wizard_Table.include.bb2"
0000CA40 <wizard_Table.include.bb2@763> XINCLUDE "PE/wizard_Table.include.bb2"
0000CA70 <wizard_Table.include.bb2@764> XINCLUDE "PE/wizard_Table.include.bb2"
0000CAA0 <wizard_Table.include.bb2@765> XINCLUDE "PE/wizard_Table.include.bb2"
0000CAB8 <wizard_Table.include.bb2@767> XINCLUDE "PE/wizard_Table.include.bb2"
0000CB16 <wizard_Table.include.bb2@769> XINCLUDE "PE/wizard_Table.include.bb2"
0000CB44 <wizard_Table.include.bb2@771> XINCLUDE "PE/wizard_Table.include.bb2"
0000CB62 <wizard_Table.include.bb2@773> XINCLUDE "PE/wizard_Table.include.bb2"
0000CB80 <wizard_Table.include.bb2@774> XINCLUDE "PE/wizard_Table.include.bb2"
0000CB9E <wizard_Table.include.bb2@775> XINCLUDE "PE/wizard_Table.include.bb2"
0000CBBC <wizard_Table.include.bb2@776> XINCLUDE "PE/wizard_Table.include.bb2"
0000CBDA <wizard_Table.include.bb2@777> XINCLUDE "PE/wizard_Table.include.bb2"
0000CBF8 <wizard_Table.include.bb2@778> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC16 <wizard_Table.include.bb2@779> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC34 <wizard_Table.include.bb2@780> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC52 <wizard_Table.include.bb2@781> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC6A <wizard_Table.include.bb2@783> XINCLUDE "PE/wizard_Table.include.bb2"
0000CC9C <wizard_Table.include.bb2@793> XINCLUDE "PE/wizard_Table.include.bb2"
0000CCC6 <wizard_Table.include.bb2@796> XINCLUDE "PE/wizard_Table.include.bb2"
0000CCF4 <wizard_Table.include.bb2@797> XINCLUDE "PE/wizard_Table.include.bb2"
0000CCFE <wizard_Table.include.bb2@798> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD10 <wizard_Table.include.bb2@799> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD30 <wizard_Table.include.bb2@800> XINCLUDE "PE/wizard_Table.include.bb2"
0000CD76 <wizard_Table.include.bb2@801> XINCLUDE "PE/wizard_Table.include.bb2"
0000CDA0 <wizard_Table.include.bb2@802> XINCLUDE "PE/wizard_Table.include.bb2"
0000CDA6 <wizard_Table.include.bb2@804> XINCLUDE "PE/wizard_Table.include.bb2"
0000CDC4 <wizard_Table.include.bb2@806> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE06 <wizard_Table.include.bb2@809> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE34 <wizard_Table.include.bb2@812> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE3E <wizard_Table.include.bb2@813> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE50 <wizard_Table.include.bb2@814> XINCLUDE "PE/wizard_Table.include.bb2"
0000CE70 <wizard_Table.include.bb2@815> XINCLUDE "PE/wizard_Table.include.bb2"
0000CEC6 <wizard_Table.include.bb2@816> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF0C <wizard_Table.include.bb2@817> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF1E <wizard_Table.include.bb2@818> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF28 <wizard_Table.include.bb2@819> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF30 <wizard_Table.include.bb2@820> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF36 <wizard_Table.include.bb2@823> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF52 <wizard_Table.include.bb2@824> XINCLUDE "PE/wizard_Table.include.bb2"
0000CF7C <wizard_Table.include.bb2@828> XINCLUDE "PE/wizard_Table.include.bb2"
0000CFAA <wizard_Table.include.bb2@831> XINCLUDE "PE/wizard_Table.include.bb2"
0000CFCA <wizard_Table.include.bb2@832> XINCLUDE "PE/wizard_Table.include.bb2"
0000CFFE <wizard_Table.include.bb2@833> XINCLUDE "PE/wizard_Table.include.bb2"
0000D00C <wizard_Table.include.bb2@834> XINCLUDE "PE/wizard_Table.include.bb2"
0000D01E <wizard_Table.include.bb2@835> XINCLUDE "PE/wizard_Table.include.bb2"
0000D02E <wizard_Table.include.bb2@836> XINCLUDE "PE/wizard_Table.include.bb2"
0000D03C <wizard_Table.include.bb2@837> XINCLUDE "PE/wizard_Table.include.bb2"
0000D04A <wizard_Table.include.bb2@838> XINCLUDE "PE/wizard_Table.include.bb2"
0000D084 <wizard_Table.include.bb2@839> XINCLUDE "PE/wizard_Table.include.bb2"
0000D0EC <wizard_Table.include.bb2@845> XINCLUDE "PE/wizard_Table.include.bb2"
0000D0F6 <wizard_Table.include.bb2@846> XINCLUDE "PE/wizard_Table.include.bb2"
0000D114 <wizard_Table.include.bb2@847> XINCLUDE "PE/wizard_Table.include.bb2"
0000D12C <wizard_Table.include.bb2@848> XINCLUDE "PE/wizard_Table.include.bb2"
0000D144 <wizard_Table.include.bb2@851> XINCLUDE "PE/wizard_Table.include.bb2"
0000D172 <wizard_Table.include.bb2@854> XINCLUDE "PE/wizard_Table.include.bb2"
0000D1A0 <wizard_Table.include.bb2@856> XINCLUDE "PE/wizard_Table.include.bb2"
0000D1AC <wizard_Table.include.bb2@866> XINCLUDE "PE/wizard_Table.include.bb2"
0000D1C4 <wizard_Table.include.bb2@867> XINCLUDE "PE/wizard_Table.include.bb2"
0000D1F2 <wizard_Table.include.bb2@869> XINCLUDE "PE/wizard_Table.include.bb2"
0000D220 <wizard_Table.include.bb2@871> XINCLUDE "PE/wizard_Table.include.bb2"
0000D22C <wizard_Table.include.bb2@873> XINCLUDE "PE/wizard_Table.include.bb2"
0000D244 <wizard_Table.include.bb2@874> XINCLUDE "PE/wizard_Table.include.bb2"
0000D276 <wizard_Table.include.bb2@926> XINCLUDE "PE/wizard_Table.include.bb2"
0000D2A4 <wizard_Table.include.bb2@929> XINCLUDE "PE/wizard_Table.include.bb2"
0000D2D8 <wizard_Table.include.bb2@930> XINCLUDE "PE/wizard_Table.include.bb2"
0000D2EA <wizard_Table.include.bb2@931> XINCLUDE "PE/wizard_Table.include.bb2"
0000D2F4 <wizard_Table.include.bb2@932> XINCLUDE "PE/wizard_Table.include.bb2"
0000D302 <wizard_Table.include.bb2@933> XINCLUDE "PE/wizard_Table.include.bb2"
0000D310 <wizard_Table.include.bb2@934> XINCLUDE "PE/wizard_Table.include.bb2"
0000D31E <wizard_Table.include.bb2@935> XINCLUDE "PE/wizard_Table.include.bb2"
0000D374 <wizard_Table.include.bb2@936> XINCLUDE "PE/wizard_Table.include.bb2"
0000D382 <wizard_Table.include.bb2@937> XINCLUDE "PE/wizard_Table.include.bb2"
0000D3B2 <wizard_Table.include.bb2@938> XINCLUDE "PE/wizard_Table.include.bb2"
0000D3B8 <wizard_Table.include.bb2@939> XINCLUDE "PE/wizard_Table.include.bb2"
0000D3BE <wizard_Table.include.bb2@940> XINCLUDE "PE/wizard_Table.include.bb2"
0000D434 <wizard_Table.include.bb2@941> XINCLUDE "PE/wizard_Table.include.bb2"
0000D43E <wizard_Table.include.bb2@943> XINCLUDE "PE/wizard_Table.include.bb2"
0000D444 <wizard_Table.include.bb2@944> XINCLUDE "PE/wizard_Table.include.bb2"
0000D44E <wizard_Table.include.bb2@945> XINCLUDE "PE/wizard_Table.include.bb2"
0000D454 <wizard_Table.include.bb2@947> XINCLUDE "PE/wizard_Table.include.bb2"
0000D45E <wizard_Table.include.bb2@948> XINCLUDE "PE/wizard_Table.include.bb2"
0000D478 <wizard_Table.include.bb2@950> XINCLUDE "PE/wizard_Table.include.bb2"
0000D4AA <wizard_Table.include.bb2@952> XINCLUDE "PE/wizard_Table.include.bb2"
0000D4D8 <wizard_Table.include.bb2@955> XINCLUDE "PE/wizard_Table.include.bb2"
0000D50C <wizard_Table.include.bb2@956> XINCLUDE "PE/wizard_Table.include.bb2"
0000D51E <wizard_Table.include.bb2@957> XINCLUDE "PE/wizard_Table.include.bb2"
0000D528 <wizard_Table.include.bb2@958> XINCLUDE "PE/wizard_Table.include.bb2"
0000D536 <wizard_Table.include.bb2@959> XINCLUDE "PE/wizard_Table.include.bb2"
0000D544 <wizard_Table.include.bb2@960> XINCLUDE "PE/wizard_Table.include.bb2"
0000D552 <wizard_Table.include.bb2@961> XINCLUDE "PE/wizard_Table.include.bb2"
0000D558 <wizard_Table.include.bb2@962> XINCLUDE "PE/wizard_Table.include.bb2"
0000D5B2 <wizard_Table.include.bb2@963> XINCLUDE "PE/wizard_Table.include.bb2"
0000D5E6 <wizard_Table.include.bb2@964> XINCLUDE "PE/wizard_Table.include.bb2"
0000D60A <wizard_Table.include.bb2@965> XINCLUDE "PE/wizard_Table.include.bb2"
0000D626 <wizard_Table.include.bb2@966> XINCLUDE "PE/wizard_Table.include.bb2"
0000D634 <wizard_Table.include.bb2@967> XINCLUDE "PE/wizard_Table.include.bb2"
0000D63A <wizard_Table.include.bb2@968> XINCLUDE "PE/wizard_Table.include.bb2"
0000D644 <wizard_Table.include.bb2@969> XINCLUDE "PE/wizard_Table.include.bb2"
0000D64A <wizard_Table.include.bb2@971> XINCLUDE "PE/wizard_Table.include.bb2"
0000D654 <wizard_Table.include.bb2@972> XINCLUDE "PE/wizard_Table.include.bb2"
0000D66E <wizard_Table.include.bb2@974> XINCLUDE "PE/wizard_Table.include.bb2"
0000D698 <wizard_Table.include.bb2@993> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6C6 <wizard_Table.include.bb2@996> XINCLUDE "PE/wizard_Table.include.bb2"
0000D6D8 <wizard_Table.include.bb2@998> XINCLUDE "PE/wizard_Table.include.bb2"
0000D722 <wizard_Table.include.bb2@1000> XINCLUDE "PE/wizard_Table.include.bb2"
0000D762 <wizard_Table.include.bb2@1001> XINCLUDE "PE/wizard_Table.include.bb2"
0000D776 <wizard_Table.include.bb2@1003> XINCLUDE "PE/wizard_Table.include.bb2"
0000D794 <wizard_Table.include.bb2@1005> XINCLUDE "PE/wizard_Table.include.bb2"
0000D7E2 <wizard_Table.include.bb2@1006> XINCLUDE "PE/wizard_Table.include.bb2"
0000D7E8 <wizard_Table.include.bb2@1007> XINCLUDE "PE/wizard_Table.include.bb2"
0000D802 <wizard_Table.include.bb2@1008> XINCLUDE "PE/wizard_Table.include.bb2"
0000D820 <wizard_Table.include.bb2@1011> XINCLUDE "PE/wizard_Table.include.bb2"
0000D854 <wizard_Table.include.bb2@1012> XINCLUDE "PE/wizard_Table.include.bb2"
0000D866 <wizard_Table.include.bb2@1013> XINCLUDE "PE/wizard_Table.include.bb2"
0000D87E <wizard_Table.include.bb2@1014> XINCLUDE "PE/wizard_Table.include.bb2"
0000D898 <wizard_Table.include.bb2@1015> XINCLUDE "PE/wizard_Table.include.bb2"
0000D8B2 <wizard_Table.include.bb2@1016> XINCLUDE "PE/wizard_Table.include.bb2"
0000D8CC <wizard_Table.include.bb2@1017> XINCLUDE "PE/wizard_Table.include.bb2"
0000D8E0 <wizard_Table.include.bb2@1018> XINCLUDE "PE/wizard_Table.include.bb2"
0000D906 <wizard_Table.include.bb2@1019> XINCLUDE "PE/wizard_Table.include.bb2"
0000D916 <wizard_Table.include.bb2@1020> XINCLUDE "PE/wizard_Table.include.bb2"
0000D928 <wizard_Table.include.bb2@1021> XINCLUDE "PE/wizard_Table.include.bb2"
0000D93C <wizard_Table.include.bb2@1022> XINCLUDE "PE/wizard_Table.include.bb2"
0000D96A <wizard_Table.include.bb2@1023> XINCLUDE "PE/wizard_Table.include.bb2"
0000D998 <wizard_Table.include.bb2@1026> XINCLUDE "PE/wizard_Table.include.bb2"
0000D9B0 <wizard_Table.include.bb2@1028> XINCLUDE "PE/wizard_Table.include.bb2"
0000D9D6 <wizard_Table.include.bb2@1029> XINCLUDE "PE/wizard_Table.include.bb2"
0000D9DC <wizard_Table.include.bb2@1030> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA0A <wizard_Table.include.bb2@1031> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA10 <wizard_Table.include.bb2@1032> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA18 <wizard_Table.include.bb2@1037> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA4C <wizard_Table.include.bb2@1038> XINCLUDE "PE/wizard_Table.include.bb2"
0000DA94 <wizard_Table.include.bb2@1039> XINCLUDE "PE/wizard_Table.include.bb2"
0000DAA2 <wizard_Table.include.bb2@1040> XINCLUDE "PE/wizard_Table.include.bb2"
0000DAD6 <wizard_Table.include.bb2@1042> XINCLUDE "PE/wizard_Table.include.bb2"
0000DAFC <wizard_Table.include.bb2@1043> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB0E <wizard_Table.include.bb2@1044> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB16 <wizard_Table.include.bb2@1045> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB46 <wizard_Table.include.bb2@1047> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB5A <wizard_Table.include.bb2@1048> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB68 <wizard_Table.include.bb2@1050> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB84 <wizard_Table.include.bb2@1051> XINCLUDE "PE/wizard_Table.include.bb2"
0000DB92 <wizard_Table.include.bb2@1054> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBA6 <wizard_Table.include.bb2@1056> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBB8 <wizard_Table.include.bb2@1057> XINCLUDE "PE/wizard_Table.include.bb2"
0000DBEC <wizard_Table.include.bb2@1058> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC12 <wizard_Table.include.bb2@1059> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC40 <wizard_Table.include.bb2@1060> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC7E <wizard_Table.include.bb2@1061> XINCLUDE "PE/wizard_Table.include.bb2"
0000DC8C <wizard_Table.include.bb2@1063> XINCLUDE "PE/wizard_Table.include.bb2"
0000DCDE <wizard_Table.include.bb2@1066> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD24 <wizard_Table.include.bb2@1067> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD7C <wizard_Table.include.bb2@1068> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD86 <wizard_Table.include.bb2@1069> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD90 <wizard_Table.include.bb2@1070> XINCLUDE "PE/wizard_Table.include.bb2"
0000DD96 <wizard_Table.include.bb2@1071> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDCA <wizard_Table.include.bb2@1073> XINCLUDE "PE/wizard_Table.include.bb2"
0000DDEC <wizard_Table.include.bb2@1074> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE32 <wizard_Table.include.bb2@1075> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE4E <wizard_Table.include.bb2@1076> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE5E <wizard_Table.include.bb2@1079> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE72 <wizard_Table.include.bb2@1080> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE98 <wizard_Table.include.bb2@1081> XINCLUDE "PE/wizard_Table.include.bb2"
0000DE9E <wizard_Table.include.bb2@1082> XINCLUDE "PE/wizard_Table.include.bb2"
0000DEBE <wizard_Table.include.bb2@1083> XINCLUDE "PE/wizard_Table.include.bb2"
0000DEC4 <wizard_Table.include.bb2@1084> XINCLUDE "PE/wizard_Table.include.bb2"
0000DECA <wizard_Table.include.bb2@1085> XINCLUDE "PE/wizard_Table.include.bb2"
0000DEE2 <wizard_Table.include.bb2@1086> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF08 <wizard_Table.include.bb2@1088> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF16 <wizard_Table.include.bb2@1089> XINCLUDE "PE/wizard_Table.include.bb2"
0000DF48 <wizard_Table.include.bb2@1090> XINCLUDE "PE/wizard_Table.include.bb2"
0000DFB4 <wizard_Table.include.bb2@1091> XINCLUDE "PE/wizard_Table.include.bb2"
0000E012 <wizard_Table.include.bb2@1092> XINCLUDE "PE/wizard_Table.include.bb2"
0000E122 <wizard_Table.include.bb2@1096> XINCLUDE "PE/wizard_Table.include.bb2"
0000E154 <wizard_Table.include.bb2@1097> XINCLUDE "PE/wizard_Table.include.bb2"
0000E16E <wizard_Table.include.bb2@1098> XINCLUDE "PE/wizard_Table.include.bb2"
0000E17C <wizard_Table.include.bb2@1099> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1E8 <wizard_Table.include.bb2@1100> XINCLUDE "PE/wizard_Table.include.bb2"
0000E1F8 <wizard_Table.include.bb2@1101> XINCLUDE "PE/wizard_Table.include.bb2"
0000E20C <wizard_Table.include.bb2@1102> XINCLUDE "PE/wizard_Table.include.bb2"
0000E25C <wizard_Table.include.bb2@1103> XINCLUDE "PE/wizard_Table.include.bb2"
0000E2C8 <wizard_Table.include.bb2@1104> XINCLUDE "PE/wizard_Table.include.bb2"
0000E2DC <wizard_Table.include.bb2@1105> XINCLUDE "PE/wizard_Table.include.bb2"
0000E332 <wizard_Table.include.bb2@1106> XINCLUDE "PE/wizard_Table.include.bb2"
0000E39E <wizard_Table.include.bb2@1107> XINCLUDE "PE/wizard_Table.include.bb2"
0000E3AE <wizard_Table.include.bb2@1108> XINCLUDE "PE/wizard_Table.include.bb2"
0000E3B0 <wizard_Table.include.bb2@1109> XINCLUDE "PE/wizard_Table.include.bb2"
0000E3C8 <wizard_Table.include.bb2@1111> XINCLUDE "PE/wizard_Table.include.bb2"
0000E41E <wizard_Table.include.bb2@1112> XINCLUDE "PE/wizard_Table.include.bb2"
0000E480 <wizard_Table.include.bb2@1113> XINCLUDE "PE/wizard_Table.include.bb2"
0000E48E <wizard_Table.include.bb2@1116> XINCLUDE "PE/wizard_Table.include.bb2"
0000E4C0 <wizard_Table.include.bb2@1117> XINCLUDE "PE/wizard_Table.include.bb2"
0000E4CA <wizard_Table.include.bb2@1118> XINCLUDE "PE/wizard_Table.include.bb2"
0000E50C <wizard_Table.include.bb2@1119> XINCLUDE "PE/wizard_Table.include.bb2"
0000E528 <wizard_Table.include.bb2@1120> XINCLUDE "PE/wizard_Table.include.bb2"
0000E55C <wizard_Table.include.bb2@1121> XINCLUDE "PE/wizard_Table.include.bb2"
0000E57E <wizard_Table.include.bb2@1122> XINCLUDE "PE/wizard_Table.include.bb2"
0000E59A <wizard_Table.include.bb2@1123> XINCLUDE "PE/wizard_Table.include.bb2"
0000E5E0 <wizard_Table.include.bb2@1124> XINCLUDE "PE/wizard_Table.include.bb2"
0000E642 <wizard_Table.include.bb2@1125> XINCLUDE "PE/wizard_Table.include.bb2"
0000E68A <wizard_Table.include.bb2@1126> XINCLUDE "PE/wizard_Table.include.bb2"
0000E69A <wizard_Table.include.bb2@1127> XINCLUDE "PE/wizard_Table.include.bb2"
0000E6A8 <wizard_Table.include.bb2@1129> XINCLUDE "PE/wizard_Table.include.bb2"
0000E6B2 <wizard_Table.include.bb2@1131> XINCLUDE "PE/wizard_Table.include.bb2"
0000E6CA <wizard_Table.include.bb2@1133> XINCLUDE "PE/wizard_Table.include.bb2"
0000E6F8 <wizard_Table.include.bb2@1139> XINCLUDE "PE/wizard_Table.include.bb2"
0000E72C <wizard_Table.include.bb2@1142> XINCLUDE "PE/wizard_Table.include.bb2"
0000E73E <wizard_Table.include.bb2@1143> XINCLUDE "PE/wizard_Table.include.bb2"
0000E75C <wizard_Table.include.bb2@1144> XINCLUDE "PE/wizard_Table.include.bb2"
0000E766 <wizard_Table.include.bb2@1145> XINCLUDE "PE/wizard_Table.include.bb2"
0000E774 <wizard_Table.include.bb2@1146> XINCLUDE "PE/wizard_Table.include.bb2"
0000E782 <wizard_Table.include.bb2@1147> XINCLUDE "PE/wizard_Table.include.bb2"
0000E790 <wizard_Table.include.bb2@1148> XINCLUDE "PE/wizard_Table.include.bb2"
0000E79E <wizard_Table.include.bb2@1149> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7AC <wizard_Table.include.bb2@1151> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7C4 <wizard_Table.include.bb2@1152> XINCLUDE "PE/wizard_Table.include.bb2"
0000E7DC <wizard_Table.include.bb2@1154> XINCLUDE "PE/wizard_Table.include.bb2"
0000E830 <wizard_Table.include.bb2@1155> XINCLUDE "PE/wizard_Table.include.bb2"
0000E86E <wizard_Table.include.bb2@1156> XINCLUDE "PE/wizard_Table.include.bb2"
0000E8CC <wizard_Table.include.bb2@1158> XINCLUDE "PE/wizard_Table.include.bb2"
0000E8EC <wizard_Table.include.bb2@1160> XINCLUDE "PE/wizard_Table.include.bb2"
0000E908 <wizard_Table.include.bb2@1161> XINCLUDE "PE/wizard_Table.include.bb2"
0000E93C <wizard_Table.include.bb2@1162> XINCLUDE "PE/wizard_Table.include.bb2"
0000E95E <wizard_Table.include.bb2@1163> XINCLUDE "PE/wizard_Table.include.bb2"
0000E97A <wizard_Table.include.bb2@1164> XINCLUDE "PE/wizard_Table.include.bb2"
0000E9C0 <wizard_Table.include.bb2@1165> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA26 <wizard_Table.include.bb2@1166> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA6E <wizard_Table.include.bb2@1168> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA7E <wizard_Table.include.bb2@1169> XINCLUDE "PE/wizard_Table.include.bb2"
0000EA8C <wizard_Table.include.bb2@1171> XINCLUDE "PE/wizard_Table.include.bb2"
0000EAB2 <wizard_Table.include.bb2@1174> XINCLUDE "PE/wizard_Table.include.bb2"
0000EABC <wizard_Table.include.bb2@1175> XINCLUDE "PE/wizard_Table.include.bb2"
0000EACE <wizard_Table.include.bb2@1176> XINCLUDE "PE/wizard_Table.include.bb2"
0000EAFA <wizard_Table.include.bb2@1177> XINCLUDE "PE/wizard_Table.include.bb2"
0000F6AA <wizard_Table.include.bb2@1178> XINCLUDE "PE/wizard_Table.include.bb2"
0000F6B0 <wizard_Table.include.bb2@1179> XINCLUDE "PE/wizard_Table.include.bb2"
0000F6B6 <wizard_Table.include.bb2@1181> XINCLUDE "PE/wizard_Table.include.bb2"
0000F6CE <wizard_Table.include.bb2@1185> XINCLUDE "PE/wizard_Table.include.bb2"
0000F6F8 <wizard_Table.include.bb2@1190> XINCLUDE "PE/wizard_Table.include.bb2"
0000F744 <wizard_Table.include.bb2@1193> XINCLUDE "PE/wizard_Table.include.bb2"
0000F778 <wizard_Table.include.bb2@1195> XINCLUDE "PE/wizard_Table.include.bb2"
0000F78A <wizard_Table.include.bb2@1196> XINCLUDE "PE/wizard_Table.include.bb2"
0000F7B0 <wizard_Table.include.bb2@1197> XINCLUDE "PE/wizard_Table.include.bb2"
0000F820 <wizard_Table.include.bb2@1199> XINCLUDE "PE/wizard_Table.include.bb2"
0000F834 <wizard_Table.include.bb2@1200> XINCLUDE "PE/wizard_Table.include.bb2"
0000F8C2 <wizard_Table.include.bb2@1201> XINCLUDE "PE/wizard_Table.include.bb2"
0000F8C8 <wizard_Table.include.bb2@1202> XINCLUDE "PE/wizard_Table.include.bb2"
0000F95C <wizard_Table.include.bb2@1203> XINCLUDE "PE/wizard_Table.include.bb2"
0000F9D2 <wizard_Table.include.bb2@1206> XINCLUDE "PE/wizard_Table.include.bb2"
0000F9DA <wizard_Table.include.bb2@1208> XINCLUDE "PE/wizard_Table.include.bb2"
0000F9FA <wizard_Table.include.bb2@1209> XINCLUDE "PE/wizard_Table.include.bb2"
0000FA2E <wizard_Table.include.bb2@1210> XINCLUDE "PE/wizard_Table.include.bb2"
0000FA74 <wizard_Table.include.bb2@1211> XINCLUDE "PE/wizard_Table.include.bb2"
0000FB1C <wizard_Table.include.bb2@1212> XINCLUDE "PE/wizard_Table.include.bb2"
0000FB64 <wizard_Table.include.bb2@1213> XINCLUDE "PE/wizard_Table.include.bb2"
0000FB72 <wizard_Table.include.bb2@1214> XINCLUDE "PE/wizard_Table.include.bb2"
0000FB92 <wizard_Table.include.bb2@1216> XINCLUDE "PE/wizard_Table.include.bb2"
0000FBAE <wizard_Table.include.bb2@1217> XINCLUDE "PE/wizard_Table.include.bb2"
0000FBE2 <wizard_Table.include.bb2@1218> XINCLUDE "PE/wizard_Table.include.bb2"
0000FC04 <wizard_Table.include.bb2@1219> XINCLUDE "PE/wizard_Table.include.bb2"
0000FC20 <wizard_Table.include.bb2@1220> XINCLUDE "PE/wizard_Table.include.bb2"
0000FC66 <wizard_Table.include.bb2@1221> XINCLUDE "PE/wizard_Table.include.bb2"
0000FCC8 <wizard_Table.include.bb2@1222> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD10 <wizard_Table.include.bb2@1224> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD20 <wizard_Table.include.bb2@1225> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD2E <wizard_Table.include.bb2@1227> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD38 <wizard_Table.include.bb2@1231> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD46 <wizard_Table.include.bb2@1233> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD84 <wizard_Table.include.bb2@1234> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD8A <wizard_Table.include.bb2@1237> XINCLUDE "PE/wizard_Table.include.bb2"
0000FD90 <wizard_Table.include.bb2@1239> XINCLUDE "PE/wizard_Table.include.bb2"
000108D4 <wizard_Table.include.bb2@1240> XINCLUDE "PE/wizard_Table.include.bb2"
00010900 <wizard_Table.include.bb2@1241> XINCLUDE "PE/wizard_Table.include.bb2"
0001090A <wizard_Table.include.bb2@1242> XINCLUDE "PE/wizard_Table.include.bb2"
00010950 <wizard_Table.include.bb2@1243> XINCLUDE "PE/wizard_Table.include.bb2"
0001095A <wizard_Table.include.bb2@1244> XINCLUDE "PE/wizard_Table.include.bb2"
00010968 <wizard_Table.include.bb2@1246> XINCLUDE "PE/wizard_Table.include.bb2"
00010976 <wizard_Table.include.bb2@1247> XINCLUDE "PE/wizard_Table.include.bb2"
000109A6 <wizard_Table.include.bb2@1248> XINCLUDE "PE/wizard_Table.include.bb2"
000109BE <wizard_Table.include.bb2@1251> XINCLUDE "PE/wizard_Table.include.bb2"
000109F0 <wizard_Table.include.bb2@1259> XINCLUDE "PE/wizard_Table.include.bb2"
00010A30 <wizard_Table.include.bb2@1262> XINCLUDE "PE/wizard_Table.include.bb2"
00010A64 <wizard_Table.include.bb2@1263> XINCLUDE "PE/wizard_Table.include.bb2"
00010A76 <wizard_Table.include.bb2@1264> XINCLUDE "PE/wizard_Table.include.bb2"
00010A94 <wizard_Table.include.bb2@1265> XINCLUDE "PE/wizard_Table.include.bb2"
00010ABE <wizard_Table.include.bb2@1266> XINCLUDE "PE/wizard_Table.include.bb2"
00010AC8 <wizard_Table.include.bb2@1267> XINCLUDE "PE/wizard_Table.include.bb2"
00010AD6 <wizard_Table.include.bb2@1268> XINCLUDE "PE/wizard_Table.include.bb2"
00010AE4 <wizard_Table.include.bb2@1269> XINCLUDE "PE/wizard_Table.include.bb2"
00010AF2 <wizard_Table.include.bb2@1270> XINCLUDE "PE/wizard_Table.include.bb2"
00010B00 <wizard_Table.include.bb2@1271> XINCLUDE "PE/wizard_Table.include.bb2"
00010B0E <wizard_Table.include.bb2@1272> XINCLUDE "PE/wizard_Table.include.bb2"
00010B20 <wizard_Table.include.bb2@1274> XINCLUDE "PE/wizard_Table.include.bb2"
00010B4E <wizard_Table.include.bb2@1275> XINCLUDE "PE/wizard_Table.include.bb2"
00010B6C <wizard_Table.include.bb2@1276> XINCLUDE "PE/wizard_Table.include.bb2"
00010B7C <wizard_Table.include.bb2@1277> XINCLUDE "PE/wizard_Table.include.bb2"
00010BDC <wizard_Table.include.bb2@1278> XINCLUDE "PE/wizard_Table.include.bb2"
00010BF2 <wizard_Table.include.bb2@1279> XINCLUDE "PE/wizard_Table.include.bb2"
00010C2E <wizard_Table.include.bb2@1280> XINCLUDE "PE/wizard_Table.include.bb2"
00010C3A <wizard_Table.include.bb2@1281> XINCLUDE "PE/wizard_Table.include.bb2"
00010CF2 <wizard_Table.include.bb2@1282> XINCLUDE "PE/wizard_Table.include.bb2"
00010D04 <wizard_Table.include.bb2@1283> XINCLUDE "PE/wizard_Table.include.bb2"
00010D0E <wizard_Table.include.bb2@1284> XINCLUDE "PE/wizard_Table.include.bb2"
00010D42 <wizard_Table.include.bb2@1285> XINCLUDE "PE/wizard_Table.include.bb2"
00010D5C <wizard_Table.include.bb2@1287> XINCLUDE "PE/wizard_Table.include.bb2"
00010DC0 <wizard_Table.include.bb2@1288> XINCLUDE "PE/wizard_Table.include.bb2"
00010DE2 <wizard_Table.include.bb2@1290> XINCLUDE "PE/wizard_Table.include.bb2"
00010DEC <wizard_Table.include.bb2@1291> XINCLUDE "PE/wizard_Table.include.bb2"
00010DF8 <wizard_Table.include.bb2@1292> XINCLUDE "PE/wizard_Table.include.bb2"
00010E04 <wizard_Table.include.bb2@1293> XINCLUDE "PE/wizard_Table.include.bb2"
00010E1C <wizard_Table.include.bb2@1298> XINCLUDE "PE/wizard_Table.include.bb2"
00010E4A <wizard_Table.include.bb2@1301> XINCLUDE "PE/wizard_Table.include.bb2"
00010E78 <wizard_Table.include.bb2@1303> XINCLUDE "PE/wizard_Table.include.bb2"
00010E98 <wizard_Table.include.bb2@1305> XINCLUDE "PE/wizard_Table.include.bb2"
00010EB0 <wizard_Table.include.bb2@1312> XINCLUDE "PE/wizard_Table.include.bb2"
00010ECE <wizard_Table.include.bb2@1316> XINCLUDE "PE/wizard_Table.include.bb2"
00010EEE <wizard_Table.include.bb2@1319> XINCLUDE "PE/wizard_Table.include.bb2"
00010F0C <wizard_Table.include.bb2@1320> XINCLUDE "PE/wizard_Table.include.bb2"
00010F22 <wizard_Table.include.bb2@1321> XINCLUDE "PE/wizard_Table.include.bb2"
00010F28 <wizard_Table.include.bb2@1324> XINCLUDE "PE/wizard_Table.include.bb2"
00010F5C <wizard_Table.include.bb2@1325> XINCLUDE "PE/wizard_Table.include.bb2"
00010F86 <wizard_Table.include.bb2@1326> XINCLUDE "PE/wizard_Table.include.bb2"
00010FAE <wizard_Table.include.bb2@1327> XINCLUDE "PE/wizard_Table.include.bb2"
00010FD0 <wizard_Table.include.bb2@1328> XINCLUDE "PE/wizard_Table.include.bb2"
0001102C <wizard_Table.include.bb2@1329> XINCLUDE "PE/wizard_Table.include.bb2"
000110AA <wizard_Table.include.bb2@1330> XINCLUDE "PE/wizard_Table.include.bb2"
000110D8 <wizard_Table.include.bb2@1331> XINCLUDE "PE/wizard_Table.include.bb2"
00011100 <wizard_Table.include.bb2@1332> XINCLUDE "PE/wizard_Table.include.bb2"
00011106 <wizard_Table.include.bb2@1334> XINCLUDE "PE/wizard_Table.include.bb2"
0001110C <wizard_Table.include.bb2@1335> XINCLUDE "PE/wizard_Table.include.bb2"
00011112 <wizard_Table.include.bb2@1336> XINCLUDE "PE/wizard_Table.include.bb2"
0001114A <wizard_Table.include.bb2@1337> XINCLUDE "PE/wizard_Table.include.bb2"
00011172 <wizard_Table.include.bb2@1346> XINCLUDE "PE/wizard_Table.include.bb2"
0001117E <wizard_Table.include.bb2@1347> XINCLUDE "PE/wizard_Table.include.bb2"
00011184 <wizard_Table.include.bb2@1348> XINCLUDE "PE/wizard_Table.include.bb2"
00011192 <wizard_Table.include.bb2@1349> XINCLUDE "PE/wizard_Table.include.bb2"
000111C4 <wizard_Table.include.bb2@1350> XINCLUDE "PE/wizard_Table.include.bb2"
000111F6 <wizard_Table.include.bb2@1351> XINCLUDE "PE/wizard_Table.include.bb2"
00011200 <wizard_Table.include.bb2@1355> XINCLUDE "PE/wizard_Table.include.bb2"
00011214 <wizard_Table.include.bb2@1356> XINCLUDE "PE/wizard_Table.include.bb2"
00011222 <wizard_Table.include.bb2@1357> XINCLUDE "PE/wizard_Table.include.bb2"
00011234 <wizard_Table.include.bb2@1358> XINCLUDE "PE/wizard_Table.include.bb2"
00011250 <wizard_Table.include.bb2@1359> XINCLUDE "PE/wizard_Table.include.bb2"
00011278 <wizard_Table.include.bb2@1360> XINCLUDE "PE/wizard_Table.include.bb2"
00011286 <wizard_Table.include.bb2@1363> XINCLUDE "PE/wizard_Table.include.bb2"
00011294 <wizard_Table.include.bb2@1364> XINCLUDE "PE/wizard_Table.include.bb2"
000112A2 <wizard_Table.include.bb2@1365> XINCLUDE "PE/wizard_Table.include.bb2"
000112A8 <wizard_Table.include.bb2@1366> XINCLUDE "PE/wizard_Table.include.bb2"
000112B4 <wizard_Table.include.bb2@1367> XINCLUDE "PE/wizard_Table.include.bb2"
000112C2 <wizard_Table.include.bb2@1368> XINCLUDE "PE/wizard_Table.include.bb2"
000112D8 <wizard_Table.include.bb2@1369> XINCLUDE "PE/wizard_Table.include.bb2"
000112E4 <wizard_Table.include.bb2@1370> XINCLUDE "PE/wizard_Table.include.bb2"
000112EA <wizard_Table.include.bb2@1371> XINCLUDE "PE/wizard_Table.include.bb2"
000112FE <wizard_Table.include.bb2@1372> XINCLUDE "PE/wizard_Table.include.bb2"
00011314 <wizard_Table.include.bb2@1373> XINCLUDE "PE/wizard_Table.include.bb2"
00011320 <wizard_Table.include.bb2@1374> XINCLUDE "PE/wizard_Table.include.bb2"
00011326 <wizard_Table.include.bb2@1377> XINCLUDE "PE/wizard_Table.include.bb2"
00011332 <wizard_Table.include.bb2@1378> XINCLUDE "PE/wizard_Table.include.bb2"
00011338 <wizard_Table.include.bb2@1379> XINCLUDE "PE/wizard_Table.include.bb2"
0001134A <wizard_Table.include.bb2@1386> XINCLUDE "PE/wizard_Table.include.bb2"
00011358 <wizard_Table.include.bb2@1387> XINCLUDE "PE/wizard_Table.include.bb2"
000114C4 <wizard_Table.include.bb2@1388> XINCLUDE "PE/wizard_Table.include.bb2"
000114CA <wizard_Table.include.bb2@1389> XINCLUDE "PE/wizard_Table.include.bb2"
000114EE <wizard_Table.include.bb2@1390> XINCLUDE "PE/wizard_Table.include.bb2"
000114FC <wizard_Table.include.bb2@1391> XINCLUDE "PE/wizard_Table.include.bb2"
000114FE <wizard_Table.include.bb2@1393> XINCLUDE "PE/wizard_Table.include.bb2"
00011540 <wizard_Table.include.bb2@1394> XINCLUDE "PE/wizard_Table.include.bb2"
00011574 <wizard_Table.include.bb2@1395> XINCLUDE "PE/wizard_Table.include.bb2"
000115A8 <wizard_Table.include.bb2@1396> XINCLUDE "PE/wizard_Table.include.bb2"
000115D6 <wizard_Table.include.bb2@1397> XINCLUDE "PE/wizard_Table.include.bb2"
000115E2 <wizard_Table.include.bb2@1398> XINCLUDE "PE/wizard_Table.include.bb2"
000115F6 <wizard_Table.include.bb2@1401> XINCLUDE "PE/wizard_Table.include.bb2"
00011604 <wizard_Table.include.bb2@1402> XINCLUDE "PE/wizard_Table.include.bb2"
00011612 <wizard_Table.include.bb2@1403> XINCLUDE "PE/wizard_Table.include.bb2"
00011620 <wizard_Table.include.bb2@1404> XINCLUDE "PE/wizard_Table.include.bb2"
00011646 <wizard_Table.include.bb2@1406> XINCLUDE "PE/wizard_Table.include.bb2"
00011650 <wizard_Table.include.bb2@1407> XINCLUDE "PE/wizard_Table.include.bb2"
00011690 <wizard_Table.include.bb2@1408> XINCLUDE "PE/wizard_Table.include.bb2"
00011696 <wizard_Table.include.bb2@1409> XINCLUDE "PE/wizard_Table.include.bb2"
000116A8 <wizard_Table.include.bb2@1410> XINCLUDE "PE/wizard_Table.include.bb2"
000116F4 <wizard_Table.include.bb2@1411> XINCLUDE "PE/wizard_Table.include.bb2"
0001175C <wizard_Table.include.bb2@1412> XINCLUDE "PE/wizard_Table.include.bb2"
00011770 <wizard_Table.include.bb2@1413> XINCLUDE "PE/wizard_Table.include.bb2"
00011792 <wizard_Table.include.bb2@1414> XINCLUDE "PE/wizard_Table.include.bb2"
000117B0 <wizard_Table.include.bb2@1415> XINCLUDE "PE/wizard_Table.include.bb2"
000117B6 <wizard_Table.include.bb2@1417> XINCLUDE "PE/wizard_Table.include.bb2"
000117BC <wizard_Table.include.bb2@1419> XINCLUDE "PE/wizard_Table.include.bb2"
000117FE <wizard_Table.include.bb2@1421> XINCLUDE "PE/wizard_Table.include.bb2"
00011832 <wizard_Table.include.bb2@1422> XINCLUDE "PE/wizard_Table.include.bb2"
00011866 <wizard_Table.include.bb2@1423> XINCLUDE "PE/wizard_Table.include.bb2"
00011894 <wizard_Table.include.bb2@1424> XINCLUDE "PE/wizard_Table.include.bb2"
000118A0 <wizard_Table.include.bb2@1425> XINCLUDE "PE/wizard_Table.include.bb2"
000118B4 <wizard_Table.include.bb2@1430> XINCLUDE "PE/wizard_Table.include.bb2"
000118FA <wizard_Table.include.bb2@1431> XINCLUDE "PE/wizard_Table.include.bb2"
00011948 <wizard_Table.include.bb2@1432> XINCLUDE "PE/wizard_Table.include.bb2"
00011976 <wizard_Table.include.bb2@1433> XINCLUDE "PE/wizard_Table.include.bb2"
0001198C <wizard_Table.include.bb2@1435> XINCLUDE "PE/wizard_Table.include.bb2"
000119B6 <wizard_Table.include.bb2@1436> XINCLUDE "PE/wizard_Table.include.bb2"
000119BC <wizard_Table.include.bb2@1437> XINCLUDE "PE/wizard_Table.include.bb2"
000119DC <wizard_Table.include.bb2@1440> XINCLUDE "PE/wizard_Table.include.bb2"
00011A16 <wizard_Table.include.bb2@1441> XINCLUDE "PE/wizard_Table.include.bb2"
00011A50 <wizard_Table.include.bb2@1442> XINCLUDE "PE/wizard_Table.include.bb2"
00011A7E <wizard_Table.include.bb2@1443> XINCLUDE "PE/wizard_Table.include.bb2"
00011A8A <wizard_Table.include.bb2@1445> XINCLUDE "PE/wizard_Table.include.bb2"
00011A90 <wizard_Table.include.bb2@1447> XINCLUDE "PE/wizard_Table.include.bb2"
00011AB0 <wizard_Table.include.bb2@1449> XINCLUDE "PE/wizard_Table.include.bb2"
00011ADE <wizard_Table.include.bb2@1450> XINCLUDE "PE/wizard_Table.include.bb2"
00011AFA <wizard_Table.include.bb2@1451> XINCLUDE "PE/wizard_Table.include.bb2"
00011B0A <wizard_Table.include.bb2@1452> XINCLUDE "PE/wizard_Table.include.bb2"
00011B1C <wizard_Table.include.bb2@1453> XINCLUDE "PE/wizard_Table.include.bb2"
00011B4A <wizard_Table.include.bb2@1454> XINCLUDE "PE/wizard_Table.include.bb2"
00011B78 <wizard_Table.include.bb2@1455> XINCLUDE "PE/wizard_Table.include.bb2"
00011B84 <wizard_Table.include.bb2@1457> XINCLUDE "PE/wizard_Table.include.bb2"
00011B98 <wizard_Table.include.bb2@1462> XINCLUDE "PE/wizard_Table.include.bb2"
00011BC0 <wizard_Table.include.bb2@1463> XINCLUDE "PE/wizard_Table.include.bb2"
00011BEE <wizard_Table.include.bb2@1464> XINCLUDE "PE/wizard_Table.include.bb2"
00011BFC <wizard_Table.include.bb2@1465> XINCLUDE "PE/wizard_Table.include.bb2"
00011C0E <wizard_Table.include.bb2@1466> XINCLUDE "PE/wizard_Table.include.bb2"
00011C20 <wizard_Table.include.bb2@1467> XINCLUDE "PE/wizard_Table.include.bb2"
00011C2E <wizard_Table.include.bb2@1468> XINCLUDE "PE/wizard_Table.include.bb2"
00011C3C <wizard_Table.include.bb2@1469> XINCLUDE "PE/wizard_Table.include.bb2"
00011C42 <wizard_Table.include.bb2@1471> XINCLUDE "PE/wizard_Table.include.bb2"
00011C4E <wizard_Table.include.bb2@1472> XINCLUDE "PE/wizard_Table.include.bb2"
00011C54 <wizard_Table.include.bb2@1473> XINCLUDE "PE/wizard_Table.include.bb2"
00011C62 <wizard_Table.include.bb2@1476> XINCLUDE "PE/wizard_Table.include.bb2"
00011CA2 <wizard_Table.include.bb2@1477> XINCLUDE "PE/wizard_Table.include.bb2"
00011CE2 <wizard_Table.include.bb2@1479> XINCLUDE "PE/wizard_Table.include.bb2"
00011CFA <wizard_Table.include.bb2@1480> XINCLUDE "PE/wizard_Table.include.bb2"
00011D10 <wizard_Table.include.bb2@1481> XINCLUDE "PE/wizard_Table.include.bb2"
00011D26 <wizard_Table.include.bb2@1482> XINCLUDE "PE/wizard_Table.include.bb2"
00011D2C <wizard_Table.include.bb2@1483> XINCLUDE "PE/wizard_Table.include.bb2"
00011D32 <wizard_Table.include.bb2@1484> XINCLUDE "PE/wizard_Table.include.bb2"
00011D3E <wizard_Table.include.bb2@1485> XINCLUDE "PE/wizard_Table.include.bb2"
00011D44 <wizard_Table.include.bb2@1486> XINCLUDE "PE/wizard_Table.include.bb2"
00011D4A <wizard_Table.include.bb2@1487> XINCLUDE "PE/wizard_Table.include.bb2"
00011D62 <wizard_Table.include.bb2@1488> XINCLUDE "PE/wizard_Table.include.bb2"
00011D68 <wizard_Table.include.bb2@1490> XINCLUDE "PE/wizard_Table.include.bb2"
00011D7E <wizard_Table.include.bb2@1491> XINCLUDE "PE/wizard_Table.include.bb2"
00011D84 <wizard_Table.include.bb2@1492> XINCLUDE "PE/wizard_Table.include.bb2"
00011D8A <wizard_Table.include.bb2@1493> XINCLUDE "PE/wizard_Table.include.bb2"
00011D96 <wizard_Table.include.bb2@1494> XINCLUDE "PE/wizard_Table.include.bb2"
00011D9C <wizard_Table.include.bb2@1495> XINCLUDE "PE/wizard_Table.include.bb2"
00011DAA <wizard_Table.include.bb2@1496> XINCLUDE "PE/wizard_Table.include.bb2"
00011DB0 <wizard_Table.include.bb2@1497> XINCLUDE "PE/wizard_Table.include.bb2"
00011DB6 <wizard_Table.include.bb2@1501> XINCLUDE "PE/wizard_Table.include.bb2"
00011DBC <wizard_Table.include.bb2@1502> XINCLUDE "PE/wizard_Table.include.bb2"
00011DD0 <wizard_Table.include.bb2@1504> XINCLUDE "PE/wizard_Table.include.bb2"
00011DFE <wizard_Table.include.bb2@1506> XINCLUDE "PE/wizard_Table.include.bb2"
00011E0A <wizard_Table.include.bb2@1507> XINCLUDE "PE/wizard_Table.include.bb2"
00011E16 <wizard_Table.include.bb2@1508> XINCLUDE "PE/wizard_Table.include.bb2"
00011E1C <wizard_Table.include.bb2@1511> XINCLUDE "PE/wizard_Table.include.bb2"
00011E4A <wizard_Table.include.bb2@1512> XINCLUDE "PE/wizard_Table.include.bb2"
00011E56 <wizard_Table.include.bb2@1513> XINCLUDE "PE/wizard_Table.include.bb2"
00011E62 <wizard_Table.include.bb2@1514> XINCLUDE "PE/wizard_Table.include.bb2"
00011E64 <wizard_Table.include.bb2@1515> XINCLUDE "PE/wizard_Table.include.bb2"
00011E70 <wizard_Table.include.bb2@1516> XINCLUDE "PE/wizard_Table.include.bb2"
00011E84 <wizard_Table.include.bb2@1519> XINCLUDE "PE/wizard_Table.include.bb2"
00011EA4 <wizard_Table.include.bb2@1521> XINCLUDE "PE/wizard_Table.include.bb2"
00011EDE <wizard_Table.include.bb2@1522> XINCLUDE "PE/wizard_Table.include.bb2"
00011F1A <wizard_Table.include.bb2@1523> XINCLUDE "PE/wizard_Table.include.bb2"
00011F56 <wizard_Table.include.bb2@1524> XINCLUDE "PE/wizard_Table.include.bb2"
00011F76 <wizard_Table.include.bb2@1526> XINCLUDE "PE/wizard_Table.include.bb2"
00011F80 <wizard_Table.include.bb2@1528> XINCLUDE "PE/wizard_Table.include.bb2"
00011F9E <wizard_Table.include.bb2@1529> XINCLUDE "PE/wizard_Table.include.bb2"
00011FB6 <wizard_Table.include.bb2@1530> XINCLUDE "PE/wizard_Table.include.bb2"
00011FE8 <wizard_Table.include.bb2@1532> XINCLUDE "PE/wizard_Table.include.bb2"
0001201C <wizard_Table.include.bb2@1533> XINCLUDE "PE/wizard_Table.include.bb2"
0001204E <wizard_Table.include.bb2@1534> XINCLUDE "PE/wizard_Table.include.bb2"
0001207C <wizard_Table.include.bb2@1535> XINCLUDE "PE/wizard_Table.include.bb2"
0001209E <wizard_Table.include.bb2@1538> XINCLUDE "PE/wizard_Table.include.bb2"
000120D6 <wizard_Table.include.bb2@1539> XINCLUDE "PE/wizard_Table.include.bb2"
000120DC <wizard_Table.include.bb2@1541> XINCLUDE "PE/wizard_Table.include.bb2"
000120E2 <wizard_Table.include.bb2@1543> XINCLUDE "PE/wizard_Table.include.bb2"
000120E8 <wizard_Table.include.bb2@1545> XINCLUDE "PE/wizard_Table.include.bb2"
000120F6 <wizard_Table.include.bb2@1546> XINCLUDE "PE/wizard_Table.include.bb2"
00012112 <wizard_Table.include.bb2@1547> XINCLUDE "PE/wizard_Table.include.bb2"
00012128 <wizard_Table.include.bb2@1548> XINCLUDE "PE/wizard_Table.include.bb2"
00012156 <wizard_Table.include.bb2@1549> XINCLUDE "PE/wizard_Table.include.bb2"
00012192 <wizard_Table.include.bb2@1550> XINCLUDE "PE/wizard_Table.include.bb2"
000121A2 <wizard_Table.include.bb2@1551> XINCLUDE "PE/wizard_Table.include.bb2"
000121B0 <wizard_Table.include.bb2@1552> XINCLUDE "PE/wizard_Table.include.bb2"
000121B8 <wizard_Table.include.bb2@1553> XINCLUDE "PE/wizard_Table.include.bb2"
000121BE <wizard_Table.include.bb2@1554> XINCLUDE "PE/wizard_Table.include.bb2"
000121CE <wizard_Table.include.bb2@1555> XINCLUDE "PE/wizard_Table.include.bb2"
000121DA <wizard_Table.include.bb2@1556> XINCLUDE "PE/wizard_Table.include.bb2"
000121E0 <wizard_Table.include.bb2@1558> XINCLUDE "PE/wizard_Table.include.bb2"
000121E8 <wizard_Table.include.bb2@1559> XINCLUDE "PE/wizard_Table.include.bb2"
000121EE <wizard_Table.include.bb2@1562> XINCLUDE "PE/wizard_Table.include.bb2"
00012236 <wizard_Table.include.bb2@1563> XINCLUDE "PE/wizard_Table.include.bb2"
00012238 <wizard_Table.include.bb2@1564> XINCLUDE "PE/wizard_Table.include.bb2"
00012246 <wizard_Table.include.bb2@1567> XINCLUDE "PE/wizard_Table.include.bb2"
00012258 <wizard_Table.include.bb2@1568> XINCLUDE "PE/wizard_Table.include.bb2"
00012264 <wizard_Table.include.bb2@1569> XINCLUDE "PE/wizard_Table.include.bb2"
0001226A <wizard_Table.include.bb2@1571> XINCLUDE "PE/wizard_Table.include.bb2"
00012282 <wizard_Table.include.bb2@1572> XINCLUDE "PE/wizard_Table.include.bb2"
0001228E <wizard_Table.include.bb2@1573> XINCLUDE "PE/wizard_Table.include.bb2"
00012294 <wizard_Table.include.bb2@1576> XINCLUDE "PE/wizard_Table.include.bb2"
000122C2 <wizard_Table.include.bb2@1577> XINCLUDE "PE/wizard_Table.include.bb2"
000122CE <wizard_Table.include.bb2@1578> XINCLUDE "PE/wizard_Table.include.bb2"
00012300 <wizard_Table.include.bb2@1579> XINCLUDE "PE/wizard_Table.include.bb2"
0001232E <wizard_Table.include.bb2@1580> XINCLUDE "PE/wizard_Table.include.bb2"
0001235C <wizard_Table.include.bb2@1581> XINCLUDE "PE/wizard_Table.include.bb2"
0001235E <wizard_Table.include.bb2@1584> XINCLUDE "PE/wizard_Table.include.bb2"
00012366 <wizard_Table.include.bb2@1586> XINCLUDE "PE/wizard_Table.include.bb2"
00012378 <wizard_Table.include.bb2@1587> XINCLUDE "PE/wizard_Table.include.bb2"
00012378 <AmiBlitz3.ab2@91> XINCLUDE "PE/wizard_Table.include.bb2"
00012384 <AmiBlitz3.ab2@92> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
00012384 <logging.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
00012390 <logging.include.bb2@4> XINCLUDE "PE/logging.include.bb2"
00012390 <file.include.bb2@1> XINCLUDE "PE/logging.include.bb2"
000123A6 <file.include.bb2@66> XINCLUDE "PE/logging.include.bb2"
000123BC <file.include.bb2@67> XINCLUDE "PE/logging.include.bb2"
000123D2 <file.include.bb2@68> XINCLUDE "PE/logging.include.bb2"
000123E8 <file.include.bb2@70> XINCLUDE "PE/logging.include.bb2"
000123F4 <file.include.bb2@72> XINCLUDE "PE/logging.include.bb2"
00012400 <file.include.bb2@73> XINCLUDE "PE/logging.include.bb2"
0001240C <file.include.bb2@74> XINCLUDE "PE/logging.include.bb2"
00012418 <file.include.bb2@75> XINCLUDE "PE/logging.include.bb2"
00012440 <file.include.bb2@77> XINCLUDE "PE/logging.include.bb2"
00012468 <file.include.bb2@78> XINCLUDE "PE/logging.include.bb2"
00012490 <file.include.bb2@79> XINCLUDE "PE/logging.include.bb2"
000124B4 <file.include.bb2@109> XINCLUDE "PE/logging.include.bb2"
000124D8 <file.include.bb2@110> XINCLUDE "PE/logging.include.bb2"
000124F2 <file.include.bb2@156> XINCLUDE "PE/logging.include.bb2"
00012502 <file.include.bb2@157> XINCLUDE "PE/logging.include.bb2"
00012504 <file.include.bb2@158> XINCLUDE "PE/logging.include.bb2"
00012506 <file.include.bb2@159> XINCLUDE "PE/logging.include.bb2"
00012508 <file.include.bb2@160> XINCLUDE "PE/logging.include.bb2"
0001250A <file.include.bb2@161> XINCLUDE "PE/logging.include.bb2"
0001250C <file.include.bb2@162> XINCLUDE "PE/logging.include.bb2"
00012510 <file.include.bb2@163> XINCLUDE "PE/logging.include.bb2"
00012514 <file.include.bb2@164> XINCLUDE "PE/logging.include.bb2"
00012518 <file.include.bb2@165> XINCLUDE "PE/logging.include.bb2"
0001251A <file.include.bb2@166> XINCLUDE "PE/logging.include.bb2"
0001251C <file.include.bb2@167> XINCLUDE "PE/logging.include.bb2"
0001251E <file.include.bb2@168> XINCLUDE "PE/logging.include.bb2"
00012520 <file.include.bb2@169> XINCLUDE "PE/logging.include.bb2"
00012522 <file.include.bb2@170> XINCLUDE "PE/logging.include.bb2"
00012524 <file.include.bb2@171> XINCLUDE "PE/logging.include.bb2"
00012526 <file.include.bb2@172> XINCLUDE "PE/logging.include.bb2"
00012530 <file.include.bb2@173> XINCLUDE "PE/logging.include.bb2"
00012536 <file.include.bb2@174> XINCLUDE "PE/logging.include.bb2"
00012550 <file.include.bb2@215> XINCLUDE "PE/logging.include.bb2"
0001256E <file.include.bb2@217> XINCLUDE "PE/logging.include.bb2"
00012574 <file.include.bb2@218> XINCLUDE "PE/logging.include.bb2"
0001258E <file.include.bb2@237> XINCLUDE "PE/logging.include.bb2"
000125A8 <file.include.bb2@239> XINCLUDE "PE/logging.include.bb2"
000125D2 <file.include.bb2@240> XINCLUDE "PE/logging.include.bb2"
000125F2 <file.include.bb2@241> XINCLUDE "PE/logging.include.bb2"
000125FC <file.include.bb2@242> XINCLUDE "PE/logging.include.bb2"
00012628 <file.include.bb2@243> XINCLUDE "PE/logging.include.bb2"
0001264A <file.include.bb2@244> XINCLUDE "PE/logging.include.bb2"
00012664 <file.include.bb2@245> XINCLUDE "PE/logging.include.bb2"
00012668 <file.include.bb2@248> XINCLUDE "PE/logging.include.bb2"
00012696 <file.include.bb2@249> XINCLUDE "PE/logging.include.bb2"
000126B4 <file.include.bb2@251> XINCLUDE "PE/logging.include.bb2"
000126BA <file.include.bb2@252> XINCLUDE "PE/logging.include.bb2"
000126D8 <file.include.bb2@271> XINCLUDE "PE/logging.include.bb2"
000126DE <file.include.bb2@273> XINCLUDE "PE/logging.include.bb2"
00012706 <file.include.bb2@274> XINCLUDE "PE/logging.include.bb2"
00012724 <file.include.bb2@275> XINCLUDE "PE/logging.include.bb2"
0001275E <file.include.bb2@276> XINCLUDE "PE/logging.include.bb2"
0001277A <file.include.bb2@277> XINCLUDE "PE/logging.include.bb2"
0001277E <file.include.bb2@278> XINCLUDE "PE/logging.include.bb2"
00012784 <file.include.bb2@279> XINCLUDE "PE/logging.include.bb2"
00012788 <file.include.bb2@281> XINCLUDE "PE/logging.include.bb2"
0001278E <file.include.bb2@282> XINCLUDE "PE/logging.include.bb2"
000127A8 <file.include.bb2@283> XINCLUDE "PE/logging.include.bb2"
000127F2 <file.include.bb2@285> XINCLUDE "PE/logging.include.bb2"
000127F8 <file.include.bb2@286> XINCLUDE "PE/logging.include.bb2"
00012826 <file.include.bb2@287> XINCLUDE "PE/logging.include.bb2"
00012830 <file.include.bb2@288> XINCLUDE "PE/logging.include.bb2"
0001284C <file.include.bb2@289> XINCLUDE "PE/logging.include.bb2"
00012850 <file.include.bb2@291> XINCLUDE "PE/logging.include.bb2"
0001287E <file.include.bb2@292> XINCLUDE "PE/logging.include.bb2"
00012888 <file.include.bb2@296> XINCLUDE "PE/logging.include.bb2"
0001288E <file.include.bb2@297> XINCLUDE "PE/logging.include.bb2"
000128AC <file.include.bb2@316> XINCLUDE "PE/logging.include.bb2"
000128DA <file.include.bb2@318> XINCLUDE "PE/logging.include.bb2"
000128E0 <file.include.bb2@319> XINCLUDE "PE/logging.include.bb2"
000128F6 <file.include.bb2@335> XINCLUDE "PE/logging.include.bb2"
00012900 <file.include.bb2@337> XINCLUDE "PE/logging.include.bb2"
0001296E <file.include.bb2@338> XINCLUDE "PE/logging.include.bb2"
0001297E <file.include.bb2@339> XINCLUDE "PE/logging.include.bb2"
00012982 <file.include.bb2@340> XINCLUDE "PE/logging.include.bb2"
000129BC <file.include.bb2@341> XINCLUDE "PE/logging.include.bb2"
000129C6 <file.include.bb2@342> XINCLUDE "PE/logging.include.bb2"
000129CC <file.include.bb2@343> XINCLUDE "PE/logging.include.bb2"
000129E6 <file.include.bb2@397> XINCLUDE "PE/logging.include.bb2"
000129FC <file.include.bb2@399> XINCLUDE "PE/logging.include.bb2"
00012A58 <file.include.bb2@400> XINCLUDE "PE/logging.include.bb2"
00012A92 <file.include.bb2@401> XINCLUDE "PE/logging.include.bb2"
00012ACC <file.include.bb2@402> XINCLUDE "PE/logging.include.bb2"
00012AEA <file.include.bb2@403> XINCLUDE "PE/logging.include.bb2"
00012B08 <file.include.bb2@404> XINCLUDE "PE/logging.include.bb2"
00012B1E <file.include.bb2@405> XINCLUDE "PE/logging.include.bb2"
00012B3A <file.include.bb2@406> XINCLUDE "PE/logging.include.bb2"
00012B54 <file.include.bb2@407> XINCLUDE "PE/logging.include.bb2"
00012BD0 <file.include.bb2@408> XINCLUDE "PE/logging.include.bb2"
00012BE2 <file.include.bb2@410> XINCLUDE "PE/logging.include.bb2"
00012BF8 <file.include.bb2@422> XINCLUDE "PE/logging.include.bb2"
00012C2C <file.include.bb2@424> XINCLUDE "PE/logging.include.bb2"
00012C36 <file.include.bb2@425> XINCLUDE "PE/logging.include.bb2"
00012C46 <file.include.bb2@426> XINCLUDE "PE/logging.include.bb2"
00012C4A <file.include.bb2@427> XINCLUDE "PE/logging.include.bb2"
00012C78 <file.include.bb2@428> XINCLUDE "PE/logging.include.bb2"
00012C92 <file.include.bb2@447> XINCLUDE "PE/logging.include.bb2"
00012CA8 <file.include.bb2@449> XINCLUDE "PE/logging.include.bb2"
00012CC6 <file.include.bb2@450> XINCLUDE "PE/logging.include.bb2"
00012CDC <file.include.bb2@451> XINCLUDE "PE/logging.include.bb2"
00012D14 <file.include.bb2@452> XINCLUDE "PE/logging.include.bb2"
00012D3E <file.include.bb2@453> XINCLUDE "PE/logging.include.bb2"
00012D68 <file.include.bb2@456> XINCLUDE "PE/logging.include.bb2"
00012D80 <file.include.bb2@457> XINCLUDE "PE/logging.include.bb2"
00012D96 <file.include.bb2@525> XINCLUDE "PE/logging.include.bb2"
00012DE2 <file.include.bb2@527> XINCLUDE "PE/logging.include.bb2"
00012E02 <file.include.bb2@528> XINCLUDE "PE/logging.include.bb2"
00012E0A <file.include.bb2@529> XINCLUDE "PE/logging.include.bb2"
00012E48 <file.include.bb2@568> XINCLUDE "PE/logging.include.bb2"
00012E54 <file.include.bb2@570> XINCLUDE "PE/logging.include.bb2"
00012E5E <file.include.bb2@571> XINCLUDE "PE/logging.include.bb2"
00012E74 <file.include.bb2@572> XINCLUDE "PE/logging.include.bb2"
00012E7A <file.include.bb2@573> XINCLUDE "PE/logging.include.bb2"
00012E86 <file.include.bb2@574> XINCLUDE "PE/logging.include.bb2"
00012EAE <file.include.bb2@575> XINCLUDE "PE/logging.include.bb2"
00012EBE <file.include.bb2@576> XINCLUDE "PE/logging.include.bb2"
00012EE6 <file.include.bb2@577> XINCLUDE "PE/logging.include.bb2"
00012EF6 <file.include.bb2@578> XINCLUDE "PE/logging.include.bb2"
00012F1E <file.include.bb2@579> XINCLUDE "PE/logging.include.bb2"
00012F2E <file.include.bb2@580> XINCLUDE "PE/logging.include.bb2"
00012F56 <file.include.bb2@581> XINCLUDE "PE/logging.include.bb2"
00012F58 <file.include.bb2@582> XINCLUDE "PE/logging.include.bb2"
00012F7E <file.include.bb2@584> XINCLUDE "PE/logging.include.bb2"
00012FBA <file.include.bb2@586> XINCLUDE "PE/logging.include.bb2"
00013044 <file.include.bb2@587> XINCLUDE "PE/logging.include.bb2"
0001307E <file.include.bb2@588> XINCLUDE "PE/logging.include.bb2"
000130AE <file.include.bb2@589> XINCLUDE "PE/logging.include.bb2"
000130EA <file.include.bb2@593> XINCLUDE "PE/logging.include.bb2"
00013142 <file.include.bb2@594> XINCLUDE "PE/logging.include.bb2"
0001319A <file.include.bb2@595> XINCLUDE "PE/logging.include.bb2"
0001321A <file.include.bb2@597> XINCLUDE "PE/logging.include.bb2"
0001324E <file.include.bb2@598> XINCLUDE "PE/logging.include.bb2"
00013282 <file.include.bb2@599> XINCLUDE "PE/logging.include.bb2"
00013288 <file.include.bb2@600> XINCLUDE "PE/logging.include.bb2"
00013294 <file.include.bb2@601> XINCLUDE "PE/logging.include.bb2"
000132C8 <file.include.bb2@602> XINCLUDE "PE/logging.include.bb2"
000132F8 <file.include.bb2@603> XINCLUDE "PE/logging.include.bb2"
000133B4 <file.include.bb2@604> XINCLUDE "PE/logging.include.bb2"
00013434 <file.include.bb2@605> XINCLUDE "PE/logging.include.bb2"
00013468 <file.include.bb2@606> XINCLUDE "PE/logging.include.bb2"
00013486 <file.include.bb2@608> XINCLUDE "PE/logging.include.bb2"
0001348E <file.include.bb2@609> XINCLUDE "PE/logging.include.bb2"
00013492 <file.include.bb2@610> XINCLUDE "PE/logging.include.bb2"
00013556 <file.include.bb2@611> XINCLUDE "PE/logging.include.bb2"
00013566 <file.include.bb2@614> XINCLUDE "PE/logging.include.bb2"
00013622 <file.include.bb2@615> XINCLUDE "PE/logging.include.bb2"
000136A2 <file.include.bb2@616> XINCLUDE "PE/logging.include.bb2"
00013782 <file.include.bb2@617> XINCLUDE "PE/logging.include.bb2"
0001378C <file.include.bb2@618> XINCLUDE "PE/logging.include.bb2"
000137C0 <file.include.bb2@619> XINCLUDE "PE/logging.include.bb2"
000137DE <file.include.bb2@620> XINCLUDE "PE/logging.include.bb2"
000137E6 <file.include.bb2@621> XINCLUDE "PE/logging.include.bb2"
000137EA <file.include.bb2@622> XINCLUDE "PE/logging.include.bb2"
000138AE <file.include.bb2@623> XINCLUDE "PE/logging.include.bb2"
000138BE <file.include.bb2@627> XINCLUDE "PE/logging.include.bb2"
000138F2 <file.include.bb2@628> XINCLUDE "PE/logging.include.bb2"
00013922 <file.include.bb2@629> XINCLUDE "PE/logging.include.bb2"
000139DE <file.include.bb2@630> XINCLUDE "PE/logging.include.bb2"
00013A5E <file.include.bb2@631> XINCLUDE "PE/logging.include.bb2"
00013A92 <file.include.bb2@632> XINCLUDE "PE/logging.include.bb2"
00013AB0 <file.include.bb2@635> XINCLUDE "PE/logging.include.bb2"
00013AB8 <file.include.bb2@636> XINCLUDE "PE/logging.include.bb2"
00013ABC <file.include.bb2@637> XINCLUDE "PE/logging.include.bb2"
00013B80 <file.include.bb2@638> XINCLUDE "PE/logging.include.bb2"
00013B90 <file.include.bb2@641> XINCLUDE "PE/logging.include.bb2"
00013C4C <file.include.bb2@642> XINCLUDE "PE/logging.include.bb2"
00013CCC <file.include.bb2@643> XINCLUDE "PE/logging.include.bb2"
00013D00 <file.include.bb2@644> XINCLUDE "PE/logging.include.bb2"
00013D1E <file.include.bb2@645> XINCLUDE "PE/logging.include.bb2"
00013D26 <file.include.bb2@646> XINCLUDE "PE/logging.include.bb2"
00013D2A <file.include.bb2@647> XINCLUDE "PE/logging.include.bb2"
00013DEE <file.include.bb2@648> XINCLUDE "PE/logging.include.bb2"
00013DF2 <file.include.bb2@651> XINCLUDE "PE/logging.include.bb2"
00013E20 <file.include.bb2@652> XINCLUDE "PE/logging.include.bb2"
00013E22 <file.include.bb2@653> XINCLUDE "PE/logging.include.bb2"
00013E26 <file.include.bb2@655> XINCLUDE "PE/logging.include.bb2"
00013EB2 <file.include.bb2@656> XINCLUDE "PE/logging.include.bb2"
00013EC8 <file.include.bb2@659> XINCLUDE "PE/logging.include.bb2"
00013EDE <file.include.bb2@660> XINCLUDE "PE/logging.include.bb2"
00013F48 <file.include.bb2@661> XINCLUDE "PE/logging.include.bb2"
00013FB2 <file.include.bb2@662> XINCLUDE "PE/logging.include.bb2"
00013FD2 <file.include.bb2@663> XINCLUDE "PE/logging.include.bb2"
00013FEE <file.include.bb2@664> XINCLUDE "PE/logging.include.bb2"
0001400C <file.include.bb2@665> XINCLUDE "PE/logging.include.bb2"
00014026 <file.include.bb2@666> XINCLUDE "PE/logging.include.bb2"
00014030 <file.include.bb2@668> XINCLUDE "PE/logging.include.bb2"
0001404C <file.include.bb2@669> XINCLUDE "PE/logging.include.bb2"
0001406E <file.include.bb2@805> XINCLUDE "PE/logging.include.bb2"
00014074 <file.include.bb2@807> XINCLUDE "PE/logging.include.bb2"
0001409C <file.include.bb2@808> XINCLUDE "PE/logging.include.bb2"
000140B6 <file.include.bb2@809> XINCLUDE "PE/logging.include.bb2"
000140CC <file.include.bb2@810> XINCLUDE "PE/logging.include.bb2"
00014128 <file.include.bb2@811> XINCLUDE "PE/logging.include.bb2"
00014160 <file.include.bb2@812> XINCLUDE "PE/logging.include.bb2"
00014164 <file.include.bb2@813> XINCLUDE "PE/logging.include.bb2"
000141B0 <file.include.bb2@814> XINCLUDE "PE/logging.include.bb2"
000141CA <file.include.bb2@815> XINCLUDE "PE/logging.include.bb2"
000141DE <file.include.bb2@818> XINCLUDE "PE/logging.include.bb2"
000141E4 <file.include.bb2@819> XINCLUDE "PE/logging.include.bb2"
000141E8 <file.include.bb2@820> XINCLUDE "PE/logging.include.bb2"
000141FE <file.include.bb2@821> XINCLUDE "PE/logging.include.bb2"
000142DE <file.include.bb2@822> XINCLUDE "PE/logging.include.bb2"
000142E2 <file.include.bb2@823> XINCLUDE "PE/logging.include.bb2"
00014328 <file.include.bb2@824> XINCLUDE "PE/logging.include.bb2"
00014334 <file.include.bb2@825> XINCLUDE "PE/logging.include.bb2"
000143A2 <file.include.bb2@826> XINCLUDE "PE/logging.include.bb2"
000143DC <file.include.bb2@827> XINCLUDE "PE/logging.include.bb2"
00014428 <file.include.bb2@830> XINCLUDE "PE/logging.include.bb2"
00014494 <file.include.bb2@831> XINCLUDE "PE/logging.include.bb2"
00014498 <file.include.bb2@832> XINCLUDE "PE/logging.include.bb2"
000144C6 <file.include.bb2@833> XINCLUDE "PE/logging.include.bb2"
000144CA <file.include.bb2@835> XINCLUDE "PE/logging.include.bb2"
00014520 <file.include.bb2@836> XINCLUDE "PE/logging.include.bb2"
0001452A <file.include.bb2@838> XINCLUDE "PE/logging.include.bb2"
0001453E <file.include.bb2@839> XINCLUDE "PE/logging.include.bb2"
00014558 <file.include.bb2@841> XINCLUDE "PE/logging.include.bb2"
0001455E <file.include.bb2@843> XINCLUDE "PE/logging.include.bb2"
00014586 <file.include.bb2@844> XINCLUDE "PE/logging.include.bb2"
000145A0 <file.include.bb2@845> XINCLUDE "PE/logging.include.bb2"
000145FC <file.include.bb2@846> XINCLUDE "PE/logging.include.bb2"
00014600 <file.include.bb2@849> XINCLUDE "PE/logging.include.bb2"
00014622 <file.include.bb2@867> XINCLUDE "PE/logging.include.bb2"
00014628 <file.include.bb2@869> XINCLUDE "PE/logging.include.bb2"
00014642 <file.include.bb2@870> XINCLUDE "PE/logging.include.bb2"
00014660 <file.include.bb2@871> XINCLUDE "PE/logging.include.bb2"
000146A2 <file.include.bb2@872> XINCLUDE "PE/logging.include.bb2"
000146F0 <file.include.bb2@873> XINCLUDE "PE/logging.include.bb2"
00014726 <file.include.bb2@874> XINCLUDE "PE/logging.include.bb2"
0001472C <file.include.bb2@875> XINCLUDE "PE/logging.include.bb2"
00014730 <file.include.bb2@876> XINCLUDE "PE/logging.include.bb2"
00014760 <file.include.bb2@877> XINCLUDE "PE/logging.include.bb2"
00014766 <file.include.bb2@878> XINCLUDE "PE/logging.include.bb2"
0001476A <file.include.bb2@880> XINCLUDE "PE/logging.include.bb2"
00014780 <file.include.bb2@881> XINCLUDE "PE/logging.include.bb2"
000147DC <file.include.bb2@882> XINCLUDE "PE/logging.include.bb2"
00014814 <file.include.bb2@883> XINCLUDE "PE/logging.include.bb2"
00014818 <file.include.bb2@884> XINCLUDE "PE/logging.include.bb2"
00014864 <file.include.bb2@885> XINCLUDE "PE/logging.include.bb2"
0001487E <file.include.bb2@886> XINCLUDE "PE/logging.include.bb2"
00014892 <file.include.bb2@888> XINCLUDE "PE/logging.include.bb2"
00014898 <file.include.bb2@889> XINCLUDE "PE/logging.include.bb2"
0001489C <file.include.bb2@890> XINCLUDE "PE/logging.include.bb2"
000148B2 <file.include.bb2@891> XINCLUDE "PE/logging.include.bb2"
000148B8 <file.include.bb2@892> XINCLUDE "PE/logging.include.bb2"
000148BC <file.include.bb2@893> XINCLUDE "PE/logging.include.bb2"
0001490E <file.include.bb2@894> XINCLUDE "PE/logging.include.bb2"
0001495A <file.include.bb2@897> XINCLUDE "PE/logging.include.bb2"
00014964 <file.include.bb2@900> XINCLUDE "PE/logging.include.bb2"
0001496A <file.include.bb2@901> XINCLUDE "PE/logging.include.bb2"
00014984 <file.include.bb2@955> XINCLUDE "PE/logging.include.bb2"
0001498A <file.include.bb2@957> XINCLUDE "PE/logging.include.bb2"
000149D6 <file.include.bb2@958> XINCLUDE "PE/logging.include.bb2"
00014A18 <file.include.bb2@959> XINCLUDE "PE/logging.include.bb2"
00014A22 <file.include.bb2@960> XINCLUDE "PE/logging.include.bb2"
00014A28 <file.include.bb2@961> XINCLUDE "PE/logging.include.bb2"
00014A4E <file.include.bb2@1108> XINCLUDE "PE/logging.include.bb2"
00014A54 <file.include.bb2@1110> XINCLUDE "PE/logging.include.bb2"
00014A7C <file.include.bb2@1111> XINCLUDE "PE/logging.include.bb2"
00014AE0 <file.include.bb2@1112> XINCLUDE "PE/logging.include.bb2"
00014AFA <file.include.bb2@1113> XINCLUDE "PE/logging.include.bb2"
00014B04 <file.include.bb2@1114> XINCLUDE "PE/logging.include.bb2"
00014B1E <file.include.bb2@1115> XINCLUDE "PE/logging.include.bb2"
00014B28 <file.include.bb2@1116> XINCLUDE "PE/logging.include.bb2"
00014B40 <file.include.bb2@1117> XINCLUDE "PE/logging.include.bb2"
00014B70 <file.include.bb2@1118> XINCLUDE "PE/logging.include.bb2"
00014B8C <file.include.bb2@1119> XINCLUDE "PE/logging.include.bb2"
00014B9C <file.include.bb2@1120> XINCLUDE "PE/logging.include.bb2"
00014BA0 <file.include.bb2@1123> XINCLUDE "PE/logging.include.bb2"
00014BCE <file.include.bb2@1124> XINCLUDE "PE/logging.include.bb2"
00014BD8 <file.include.bb2@1126> XINCLUDE "PE/logging.include.bb2"
00014BDE <file.include.bb2@1127> XINCLUDE "PE/logging.include.bb2"
00014BFC <file.include.bb2@1148> XINCLUDE "PE/logging.include.bb2"
00014C02 <file.include.bb2@1150> XINCLUDE "PE/logging.include.bb2"
00014C18 <file.include.bb2@1151> XINCLUDE "PE/logging.include.bb2"
00014C28 <file.include.bb2@1152> XINCLUDE "PE/logging.include.bb2"
00014C4C <file.include.bb2@1153> XINCLUDE "PE/logging.include.bb2"
00014C82 <file.include.bb2@1154> XINCLUDE "PE/logging.include.bb2"
00014C98 <file.include.bb2@1155> XINCLUDE "PE/logging.include.bb2"
00014CE6 <file.include.bb2@1156> XINCLUDE "PE/logging.include.bb2"
00014DC4 <file.include.bb2@1157> XINCLUDE "PE/logging.include.bb2"
00014DE2 <file.include.bb2@1158> XINCLUDE "PE/logging.include.bb2"
00014E0C <file.include.bb2@1160> XINCLUDE "PE/logging.include.bb2"
00014E28 <file.include.bb2@1161> XINCLUDE "PE/logging.include.bb2"
00014E56 <file.include.bb2@1162> XINCLUDE "PE/logging.include.bb2"
00014E60 <file.include.bb2@1163> XINCLUDE "PE/logging.include.bb2"
00014E8C <file.include.bb2@1164> XINCLUDE "PE/logging.include.bb2"
00014EA6 <file.include.bb2@1165> XINCLUDE "PE/logging.include.bb2"
00014EC2 <file.include.bb2@1166> XINCLUDE "PE/logging.include.bb2"
00014EC6 <file.include.bb2@1167> XINCLUDE "PE/logging.include.bb2"
00014EF4 <file.include.bb2@1168> XINCLUDE "PE/logging.include.bb2"
00014EF8 <file.include.bb2@1170> XINCLUDE "PE/logging.include.bb2"
00014EFE <file.include.bb2@1171> XINCLUDE "PE/logging.include.bb2"
00014F02 <file.include.bb2@1173> XINCLUDE "PE/logging.include.bb2"
00014F96 <file.include.bb2@1174> XINCLUDE "PE/logging.include.bb2"
00014F9A <file.include.bb2@1176> XINCLUDE "PE/logging.include.bb2"
00015030 <file.include.bb2@1177> XINCLUDE "PE/logging.include.bb2"
00015034 <file.include.bb2@1179> XINCLUDE "PE/logging.include.bb2"
00015062 <file.include.bb2@1180> XINCLUDE "PE/logging.include.bb2"
0001506C <file.include.bb2@1182> XINCLUDE "PE/logging.include.bb2"
00015072 <file.include.bb2@1183> XINCLUDE "PE/logging.include.bb2"
0001508C <file.include.bb2@1245> XINCLUDE "PE/logging.include.bb2"
000150AA <file.include.bb2@1247> XINCLUDE "PE/logging.include.bb2"
000150B0 <file.include.bb2@1248> XINCLUDE "PE/logging.include.bb2"
000150CA <file.include.bb2@1398> XINCLUDE "PE/logging.include.bb2"
000150E8 <file.include.bb2@1400> XINCLUDE "PE/logging.include.bb2"
000151A6 <file.include.bb2@1401> XINCLUDE "PE/logging.include.bb2"
000151AE <file.include.bb2@1402> XINCLUDE "PE/logging.include.bb2"
000151B2 <file.include.bb2@1403> XINCLUDE "PE/logging.include.bb2"
000151E2 <file.include.bb2@1404> XINCLUDE "PE/logging.include.bb2"
000151EE <file.include.bb2@1406> XINCLUDE "PE/logging.include.bb2"
000151F4 <file.include.bb2@1407> XINCLUDE "PE/logging.include.bb2"
0001520E <file.include.bb2@1593> XINCLUDE "PE/logging.include.bb2"
00015218 <file.include.bb2@1594> XINCLUDE "PE/logging.include.bb2"
00015222 <file.include.bb2@1595> XINCLUDE "PE/logging.include.bb2"
00015238 <file.include.bb2@1596> XINCLUDE "PE/logging.include.bb2"
0001524E <file.include.bb2@1597> XINCLUDE "PE/logging.include.bb2"
0001525E <file.include.bb2@1598> XINCLUDE "PE/logging.include.bb2"
0001526A <file.include.bb2@1599> XINCLUDE "PE/logging.include.bb2"
0001526E <file.include.bb2@1600> XINCLUDE "PE/logging.include.bb2"
00015278 <file.include.bb2@1601> XINCLUDE "PE/logging.include.bb2"
000152BA <file.include.bb2@1602> XINCLUDE "PE/logging.include.bb2"
000152D0 <file.include.bb2@1603> XINCLUDE "PE/logging.include.bb2"
000152F4 <file.include.bb2@1604> XINCLUDE "PE/logging.include.bb2"
0001530A <file.include.bb2@1605> XINCLUDE "PE/logging.include.bb2"
00015316 <file.include.bb2@1606> XINCLUDE "PE/logging.include.bb2"
0001531A <file.include.bb2@1607> XINCLUDE "PE/logging.include.bb2"
0001532A <file.include.bb2@1608> XINCLUDE "PE/logging.include.bb2"
0001534C <file.include.bb2@1613> XINCLUDE "PE/logging.include.bb2"
00015362 <file.include.bb2@1616> XINCLUDE "PE/logging.include.bb2"
000153AE <file.include.bb2@1617> XINCLUDE "PE/logging.include.bb2"
000153B2 <file.include.bb2@1619> XINCLUDE "PE/logging.include.bb2"
000153DC <file.include.bb2@1621> XINCLUDE "PE/logging.include.bb2"
000153F4 <file.include.bb2@1622> XINCLUDE "PE/logging.include.bb2"
00015422 <file.include.bb2@1682> XINCLUDE "PE/logging.include.bb2"
00015436 <file.include.bb2@1683> XINCLUDE "PE/logging.include.bb2"
0001544E <file.include.bb2@1684> XINCLUDE "PE/logging.include.bb2"
00015470 <file.include.bb2@1685> XINCLUDE "PE/logging.include.bb2"
00015488 <file.include.bb2@1686> XINCLUDE "PE/logging.include.bb2"
00015492 <file.include.bb2@1687> XINCLUDE "PE/logging.include.bb2"
000154AC <file.include.bb2@1688> XINCLUDE "PE/logging.include.bb2"
000154CE <file.include.bb2@1763> XINCLUDE "PE/logging.include.bb2"
000154E6 <file.include.bb2@1765> XINCLUDE "PE/logging.include.bb2"
00015508 <file.include.bb2@1766> XINCLUDE "PE/logging.include.bb2"
0001550E <file.include.bb2@1767> XINCLUDE "PE/logging.include.bb2"
00015540 <file.include.bb2@1787> XINCLUDE "PE/logging.include.bb2"
00015554 <file.include.bb2@1789> XINCLUDE "PE/logging.include.bb2"
0001556C <file.include.bb2@1790> XINCLUDE "PE/logging.include.bb2"
00015584 <file.include.bb2@1791> XINCLUDE "PE/logging.include.bb2"
000155A4 <file.include.bb2@1792> XINCLUDE "PE/logging.include.bb2"
000155D6 <file.include.bb2@1793> XINCLUDE "PE/logging.include.bb2"
00015608 <file.include.bb2@1794> XINCLUDE "PE/logging.include.bb2"
0001561E <file.include.bb2@1795> XINCLUDE "PE/logging.include.bb2"
00015628 <file.include.bb2@1796> XINCLUDE "PE/logging.include.bb2"
00015652 <file.include.bb2@1797> XINCLUDE "PE/logging.include.bb2"
0001565C <file.include.bb2@1799> XINCLUDE "PE/logging.include.bb2"
00015676 <file.include.bb2@1800> XINCLUDE "PE/logging.include.bb2"
00015690 <file.include.bb2@1817> XINCLUDE "PE/logging.include.bb2"
000156AE <file.include.bb2@1819> XINCLUDE "PE/logging.include.bb2"
000156D2 <file.include.bb2@1820> XINCLUDE "PE/logging.include.bb2"
0001571C <file.include.bb2@1821> XINCLUDE "PE/logging.include.bb2"
00015736 <file.include.bb2@1822> XINCLUDE "PE/logging.include.bb2"
00015748 <file.include.bb2@1823> XINCLUDE "PE/logging.include.bb2"
00015780 <file.include.bb2@1824> XINCLUDE "PE/logging.include.bb2"
00015796 <file.include.bb2@1825> XINCLUDE "PE/logging.include.bb2"
000157A0 <file.include.bb2@1826> XINCLUDE "PE/logging.include.bb2"
000157C8 <file.include.bb2@1827> XINCLUDE "PE/logging.include.bb2"
000157CC <file.include.bb2@1829> XINCLUDE "PE/logging.include.bb2"
000157F4 <file.include.bb2@1830> XINCLUDE "PE/logging.include.bb2"
00015804 <file.include.bb2@1832> XINCLUDE "PE/logging.include.bb2"
00015818 <file.include.bb2@1833> XINCLUDE "PE/logging.include.bb2"
0001582E <file.include.bb2@1846> XINCLUDE "PE/logging.include.bb2"
0001583E <file.include.bb2@1848> XINCLUDE "PE/logging.include.bb2"
00015842 <file.include.bb2@1849> XINCLUDE "PE/logging.include.bb2"
00015858 <file.include.bb2@1870> XINCLUDE "PE/logging.include.bb2"
00015882 <file.include.bb2@1872> XINCLUDE "PE/logging.include.bb2"
0001588A <file.include.bb2@1873> XINCLUDE "PE/logging.include.bb2"
0001588A <logging.include.bb2@8> XINCLUDE "PE/logging.include.bb2"
00015928 <logging.include.bb2@30> XINCLUDE "PE/logging.include.bb2"
00015930 <logging.include.bb2@31> XINCLUDE "PE/logging.include.bb2"
00015938 <logging.include.bb2@32> XINCLUDE "PE/logging.include.bb2"
00015940 <logging.include.bb2@33> XINCLUDE "PE/logging.include.bb2"
0001597A <logging.include.bb2@124> XINCLUDE "PE/logging.include.bb2"
000159AC <logging.include.bb2@126> XINCLUDE "PE/logging.include.bb2"
000159C0 <logging.include.bb2@127> XINCLUDE "PE/logging.include.bb2"
000159F2 <logging.include.bb2@128> XINCLUDE "PE/logging.include.bb2"
00015D74 <logging.include.bb2@129> XINCLUDE "PE/logging.include.bb2"
00015D82 <logging.include.bb2@130> XINCLUDE "PE/logging.include.bb2"
00015D86 <logging.include.bb2@131> XINCLUDE "PE/logging.include.bb2"
00016028 <logging.include.bb2@132> XINCLUDE "PE/logging.include.bb2"
00016042 <logging.include.bb2@134> XINCLUDE "PE/logging.include.bb2"
0001607C <logging.include.bb2@137> XINCLUDE "PE/logging.include.bb2"
000160CE <logging.include.bb2@138> XINCLUDE "PE/logging.include.bb2"
000160E2 <logging.include.bb2@139> XINCLUDE "PE/logging.include.bb2"
00016138 <logging.include.bb2@140> XINCLUDE "PE/logging.include.bb2"
0001613C <logging.include.bb2@141> XINCLUDE "PE/logging.include.bb2"
000161B8 <logging.include.bb2@142> XINCLUDE "PE/logging.include.bb2"
0001622C <logging.include.bb2@143> XINCLUDE "PE/logging.include.bb2"
00016246 <logging.include.bb2@145> XINCLUDE "PE/logging.include.bb2"
00016246 <AmiBlitz3.ab2@95> XINCLUDE "PE/logging.include.bb2"
00016252 <AmiBlitz3.ab2@96> optimize 5                               ; added because the include change the optimize and or syntax level  tomsmart1
00016252 <translation.include.bb2@1> XINCLUDE "translation.include.bb2"
00016252 <phrasebook.include.bb2@1> XINCLUDE "translation.include.bb2"
00016252 <prefixtree.include.bb2@1> XINCLUDE "translation.include.bb2"
00016252 <dynamicarray.include.bb2@1> XINCLUDE "translation.include.bb2"
0001627A <dynamicarray.include.bb2@42> XINCLUDE "translation.include.bb2"
00016294 <dynamicarray.include.bb2@55> XINCLUDE "translation.include.bb2"
0001629E <dynamicarray.include.bb2@56> XINCLUDE "translation.include.bb2"
000162B0 <dynamicarray.include.bb2@57> XINCLUDE "translation.include.bb2"
000162D4 <dynamicarray.include.bb2@58> XINCLUDE "translation.include.bb2"
000162E2 <dynamicarray.include.bb2@60> XINCLUDE "translation.include.bb2"
000162EE <dynamicarray.include.bb2@61> XINCLUDE "translation.include.bb2"
000162F2 <dynamicarray.include.bb2@63> XINCLUDE "translation.include.bb2"
00016310 <dynamicarray.include.bb2@99> XINCLUDE "translation.include.bb2"
0001632A <dynamicarray.include.bb2@101> XINCLUDE "translation.include.bb2"
0001634A <dynamicarray.include.bb2@102> XINCLUDE "translation.include.bb2"
00016354 <dynamicarray.include.bb2@103> XINCLUDE "translation.include.bb2"
00016362 <dynamicarray.include.bb2@104> XINCLUDE "translation.include.bb2"
0001636E <dynamicarray.include.bb2@105> XINCLUDE "translation.include.bb2"
0001637C <dynamicarray.include.bb2@106> XINCLUDE "translation.include.bb2"
00016388 <dynamicarray.include.bb2@107> XINCLUDE "translation.include.bb2"
00016394 <dynamicarray.include.bb2@108> XINCLUDE "translation.include.bb2"
000163A6 <dynamicarray.include.bb2@109> XINCLUDE "translation.include.bb2"
000163B6 <dynamicarray.include.bb2@110> XINCLUDE "translation.include.bb2"
000163C0 <dynamicarray.include.bb2@113> XINCLUDE "translation.include.bb2"
000163C6 <dynamicarray.include.bb2@114> XINCLUDE "translation.include.bb2"
000163E0 <dynamicarray.include.bb2@425> XINCLUDE "translation.include.bb2"
000163EA <dynamicarray.include.bb2@427> XINCLUDE "translation.include.bb2"
000163F4 <dynamicarray.include.bb2@428> XINCLUDE "translation.include.bb2"
00016404 <dynamicarray.include.bb2@429> XINCLUDE "translation.include.bb2"
0001640E <dynamicarray.include.bb2@430> XINCLUDE "translation.include.bb2"
00016420 <dynamicarray.include.bb2@431> XINCLUDE "translation.include.bb2"
00016436 <dynamicarray.include.bb2@432> XINCLUDE "translation.include.bb2"
00016440 <dynamicarray.include.bb2@433> XINCLUDE "translation.include.bb2"
00016446 <dynamicarray.include.bb2@435> XINCLUDE "translation.include.bb2"
0001644A <dynamicarray.include.bb2@437> XINCLUDE "translation.include.bb2"
00016460 <dynamicarray.include.bb2@531> XINCLUDE "translation.include.bb2"
00016466 <dynamicarray.include.bb2@533> XINCLUDE "translation.include.bb2"
00016470 <dynamicarray.include.bb2@535> XINCLUDE "translation.include.bb2"
000164A6 <dynamicarray.include.bb2@536> XINCLUDE "translation.include.bb2"
000164B0 <dynamicarray.include.bb2@537> XINCLUDE "translation.include.bb2"
000164B4 <dynamicarray.include.bb2@538> XINCLUDE "translation.include.bb2"
000164E2 <dynamicarray.include.bb2@539> XINCLUDE "translation.include.bb2"
000164E2 <prefixtree.include.bb2@35> XINCLUDE "translation.include.bb2"
000164FC <prefixtree.include.bb2@100> XINCLUDE "translation.include.bb2"
00016506 <prefixtree.include.bb2@101> XINCLUDE "translation.include.bb2"
0001652E <prefixtree.include.bb2@102> XINCLUDE "translation.include.bb2"
00016550 <prefixtree.include.bb2@103> XINCLUDE "translation.include.bb2"
0001656C <prefixtree.include.bb2@104> XINCLUDE "translation.include.bb2"
0001657C <prefixtree.include.bb2@105> XINCLUDE "translation.include.bb2"
00016580 <prefixtree.include.bb2@107> XINCLUDE "translation.include.bb2"
0001659A <prefixtree.include.bb2@123> XINCLUDE "translation.include.bb2"
000165BA <prefixtree.include.bb2@124> XINCLUDE "translation.include.bb2"
000165C4 <prefixtree.include.bb2@125> XINCLUDE "translation.include.bb2"
000165DE <prefixtree.include.bb2@126> XINCLUDE "translation.include.bb2"
000165EC <prefixtree.include.bb2@127> XINCLUDE "translation.include.bb2"
000165FA <prefixtree.include.bb2@128> XINCLUDE "translation.include.bb2"
00016608 <prefixtree.include.bb2@129> XINCLUDE "translation.include.bb2"
00016616 <prefixtree.include.bb2@130> XINCLUDE "translation.include.bb2"
00016622 <prefixtree.include.bb2@131> XINCLUDE "translation.include.bb2"
00016630 <prefixtree.include.bb2@132> XINCLUDE "translation.include.bb2"
0001663E <prefixtree.include.bb2@133> XINCLUDE "translation.include.bb2"
0001664C <prefixtree.include.bb2@134> XINCLUDE "translation.include.bb2"
0001665A <prefixtree.include.bb2@135> XINCLUDE "translation.include.bb2"
00016674 <prefixtree.include.bb2@136> XINCLUDE "translation.include.bb2"
00016682 <prefixtree.include.bb2@137> XINCLUDE "translation.include.bb2"
00016692 <prefixtree.include.bb2@138> XINCLUDE "translation.include.bb2"
000166A2 <prefixtree.include.bb2@139> XINCLUDE "translation.include.bb2"
000166B2 <prefixtree.include.bb2@140> XINCLUDE "translation.include.bb2"
000166C0 <prefixtree.include.bb2@141> XINCLUDE "translation.include.bb2"
000166CA <prefixtree.include.bb2@143> XINCLUDE "translation.include.bb2"
000166D0 <prefixtree.include.bb2@144> XINCLUDE "translation.include.bb2"
000166EE <prefixtree.include.bb2@162> XINCLUDE "translation.include.bb2"
000166F4 <prefixtree.include.bb2@163> XINCLUDE "translation.include.bb2"
000166FE <prefixtree.include.bb2@164> XINCLUDE "translation.include.bb2"
0001671E <prefixtree.include.bb2@165> XINCLUDE "translation.include.bb2"
0001674C <prefixtree.include.bb2@166> XINCLUDE "translation.include.bb2"
0001676A <prefixtree.include.bb2@167> XINCLUDE "translation.include.bb2"
00016774 <prefixtree.include.bb2@168> XINCLUDE "translation.include.bb2"
00016786 <prefixtree.include.bb2@169> XINCLUDE "translation.include.bb2"
000167B2 <prefixtree.include.bb2@170> XINCLUDE "translation.include.bb2"
000167C8 <prefixtree.include.bb2@171> XINCLUDE "translation.include.bb2"
000167D4 <prefixtree.include.bb2@173> XINCLUDE "translation.include.bb2"
000167E0 <prefixtree.include.bb2@174> XINCLUDE "translation.include.bb2"
000167E6 <prefixtree.include.bb2@175> XINCLUDE "translation.include.bb2"
000167EC <prefixtree.include.bb2@176> XINCLUDE "translation.include.bb2"
000167F2 <prefixtree.include.bb2@177> XINCLUDE "translation.include.bb2"
000167F8 <prefixtree.include.bb2@179> XINCLUDE "translation.include.bb2"
000167FE <prefixtree.include.bb2@180> XINCLUDE "translation.include.bb2"
00016808 <prefixtree.include.bb2@183> XINCLUDE "translation.include.bb2"
0001680E <prefixtree.include.bb2@184> XINCLUDE "translation.include.bb2"
00016840 <prefixtree.include.bb2@204> XINCLUDE "translation.include.bb2"
0001685A <prefixtree.include.bb2@205> XINCLUDE "translation.include.bb2"
00016872 <prefixtree.include.bb2@206> XINCLUDE "translation.include.bb2"
00016886 <prefixtree.include.bb2@207> XINCLUDE "translation.include.bb2"
000168D6 <prefixtree.include.bb2@208> XINCLUDE "translation.include.bb2"
000168F6 <prefixtree.include.bb2@210> XINCLUDE "translation.include.bb2"
0001690A <prefixtree.include.bb2@211> XINCLUDE "translation.include.bb2"
00016918 <prefixtree.include.bb2@212> XINCLUDE "translation.include.bb2"
00016924 <prefixtree.include.bb2@213> XINCLUDE "translation.include.bb2"
0001692C <prefixtree.include.bb2@214> XINCLUDE "translation.include.bb2"
00016934 <prefixtree.include.bb2@215> XINCLUDE "translation.include.bb2"
0001693C <prefixtree.include.bb2@216> XINCLUDE "translation.include.bb2"
00016944 <prefixtree.include.bb2@217> XINCLUDE "translation.include.bb2"
0001694A <prefixtree.include.bb2@218> XINCLUDE "translation.include.bb2"
00016958 <prefixtree.include.bb2@219> XINCLUDE "translation.include.bb2"
0001697A <prefixtree.include.bb2@221> XINCLUDE "translation.include.bb2"
000169A6 <prefixtree.include.bb2@222> XINCLUDE "translation.include.bb2"
000169B8 <prefixtree.include.bb2@224> XINCLUDE "translation.include.bb2"
000169BE <prefixtree.include.bb2@225> XINCLUDE "translation.include.bb2"
000169E6 <prefixtree.include.bb2@227> XINCLUDE "translation.include.bb2"
00016A0A <prefixtree.include.bb2@228> XINCLUDE "translation.include.bb2"
00016A32 <prefixtree.include.bb2@229> XINCLUDE "translation.include.bb2"
00016A66 <prefixtree.include.bb2@230> XINCLUDE "translation.include.bb2"
00016A76 <prefixtree.include.bb2@231> XINCLUDE "translation.include.bb2"
00016A80 <prefixtree.include.bb2@232> XINCLUDE "translation.include.bb2"
00016A8E <prefixtree.include.bb2@233> XINCLUDE "translation.include.bb2"
00016AA2 <prefixtree.include.bb2@234> XINCLUDE "translation.include.bb2"
00016AA8 <prefixtree.include.bb2@235> XINCLUDE "translation.include.bb2"
00016AC8 <prefixtree.include.bb2@236> XINCLUDE "translation.include.bb2"
00016ACE <prefixtree.include.bb2@237> XINCLUDE "translation.include.bb2"
00016AD6 <prefixtree.include.bb2@239> XINCLUDE "translation.include.bb2"
00016B10 <prefixtree.include.bb2@241> XINCLUDE "translation.include.bb2"
00016B36 <prefixtree.include.bb2@242> XINCLUDE "translation.include.bb2"
00016B4E <prefixtree.include.bb2@243> XINCLUDE "translation.include.bb2"
00016B82 <prefixtree.include.bb2@244> XINCLUDE "translation.include.bb2"
00016B8A <prefixtree.include.bb2@245> XINCLUDE "translation.include.bb2"
00016B98 <prefixtree.include.bb2@247> XINCLUDE "translation.include.bb2"
00016B9E <prefixtree.include.bb2@249> XINCLUDE "translation.include.bb2"
00016BB6 <prefixtree.include.bb2@250> XINCLUDE "translation.include.bb2"
00016BBC <prefixtree.include.bb2@251> XINCLUDE "translation.include.bb2"
00016BC2 <prefixtree.include.bb2@252> XINCLUDE "translation.include.bb2"
00016BDC <prefixtree.include.bb2@253> XINCLUDE "translation.include.bb2"
00016BE2 <prefixtree.include.bb2@256> XINCLUDE "translation.include.bb2"
00016BE8 <prefixtree.include.bb2@258> XINCLUDE "translation.include.bb2"
00016BEE <prefixtree.include.bb2@260> XINCLUDE "translation.include.bb2"
00016BFC <prefixtree.include.bb2@261> XINCLUDE "translation.include.bb2"
00016C0A <prefixtree.include.bb2@262> XINCLUDE "translation.include.bb2"
00016C44 <prefixtree.include.bb2@264> XINCLUDE "translation.include.bb2"
00016C6A <prefixtree.include.bb2@265> XINCLUDE "translation.include.bb2"
00016C82 <prefixtree.include.bb2@266> XINCLUDE "translation.include.bb2"
00016C8E <prefixtree.include.bb2@269> XINCLUDE "translation.include.bb2"
00016C9A <prefixtree.include.bb2@270> XINCLUDE "translation.include.bb2"
00016CA6 <prefixtree.include.bb2@271> XINCLUDE "translation.include.bb2"
00016CB2 <prefixtree.include.bb2@272> XINCLUDE "translation.include.bb2"
00016CBE <prefixtree.include.bb2@273> XINCLUDE "translation.include.bb2"
00016CC8 <prefixtree.include.bb2@274> XINCLUDE "translation.include.bb2"
00016CD0 <prefixtree.include.bb2@276> XINCLUDE "translation.include.bb2"
00016CEA <prefixtree.include.bb2@277> XINCLUDE "translation.include.bb2"
00016D28 <prefixtree.include.bb2@324> XINCLUDE "translation.include.bb2"
00016D2E <prefixtree.include.bb2@325> XINCLUDE "translation.include.bb2"
00016D6E <prefixtree.include.bb2@326> XINCLUDE "translation.include.bb2"
00016DC4 <prefixtree.include.bb2@327> XINCLUDE "translation.include.bb2"
00016E36 <prefixtree.include.bb2@328> XINCLUDE "translation.include.bb2"
00016E42 <prefixtree.include.bb2@330> XINCLUDE "translation.include.bb2"
00016E50 <prefixtree.include.bb2@331> XINCLUDE "translation.include.bb2"
00016E96 <prefixtree.include.bb2@332> XINCLUDE "translation.include.bb2"
00016EE0 <prefixtree.include.bb2@333> XINCLUDE "translation.include.bb2"
00016F18 <prefixtree.include.bb2@334> XINCLUDE "translation.include.bb2"
00016F6C <prefixtree.include.bb2@335> XINCLUDE "translation.include.bb2"
00016F72 <prefixtree.include.bb2@336> XINCLUDE "translation.include.bb2"
00016F78 <prefixtree.include.bb2@337> XINCLUDE "translation.include.bb2"
00016F86 <prefixtree.include.bb2@339> XINCLUDE "translation.include.bb2"
00016F8E <prefixtree.include.bb2@340> XINCLUDE "translation.include.bb2"
00016FC8 <prefixtree.include.bb2@342> XINCLUDE "translation.include.bb2"
00016FEE <prefixtree.include.bb2@343> XINCLUDE "translation.include.bb2"
00017006 <prefixtree.include.bb2@344> XINCLUDE "translation.include.bb2"
0001703C <prefixtree.include.bb2@345> XINCLUDE "translation.include.bb2"
00017052 <prefixtree.include.bb2@346> XINCLUDE "translation.include.bb2"
00017060 <prefixtree.include.bb2@348> XINCLUDE "translation.include.bb2"
00017078 <prefixtree.include.bb2@349> XINCLUDE "translation.include.bb2"
000170B0 <prefixtree.include.bb2@350> XINCLUDE "translation.include.bb2"
000170D6 <prefixtree.include.bb2@351> XINCLUDE "translation.include.bb2"
0001711E <prefixtree.include.bb2@352> XINCLUDE "translation.include.bb2"
00017124 <prefixtree.include.bb2@353> XINCLUDE "translation.include.bb2"
0001713E <prefixtree.include.bb2@355> XINCLUDE "translation.include.bb2"
0001714A <prefixtree.include.bb2@356> XINCLUDE "translation.include.bb2"
00017150 <prefixtree.include.bb2@357> XINCLUDE "translation.include.bb2"
0001717C <prefixtree.include.bb2@358> XINCLUDE "translation.include.bb2"
00017190 <prefixtree.include.bb2@363> XINCLUDE "translation.include.bb2"
0001719E <prefixtree.include.bb2@365> XINCLUDE "translation.include.bb2"
000171A6 <prefixtree.include.bb2@366> XINCLUDE "translation.include.bb2"
000171E0 <prefixtree.include.bb2@368> XINCLUDE "translation.include.bb2"
00017206 <prefixtree.include.bb2@369> XINCLUDE "translation.include.bb2"
0001721E <prefixtree.include.bb2@370> XINCLUDE "translation.include.bb2"
00017258 <prefixtree.include.bb2@371> XINCLUDE "translation.include.bb2"
00017282 <prefixtree.include.bb2@372> XINCLUDE "translation.include.bb2"
0001729A <prefixtree.include.bb2@373> XINCLUDE "translation.include.bb2"
000172CA <prefixtree.include.bb2@374> XINCLUDE "translation.include.bb2"
000172F6 <prefixtree.include.bb2@375> XINCLUDE "translation.include.bb2"
00017312 <prefixtree.include.bb2@376> XINCLUDE "translation.include.bb2"
00017320 <prefixtree.include.bb2@378> XINCLUDE "translation.include.bb2"
0001732E <prefixtree.include.bb2@379> XINCLUDE "translation.include.bb2"
0001736C <prefixtree.include.bb2@380> XINCLUDE "translation.include.bb2"
000173A8 <prefixtree.include.bb2@381> XINCLUDE "translation.include.bb2"
00017414 <prefixtree.include.bb2@382> XINCLUDE "translation.include.bb2"
00017442 <prefixtree.include.bb2@383> XINCLUDE "translation.include.bb2"
00017470 <prefixtree.include.bb2@384> XINCLUDE "translation.include.bb2"
000174B8 <prefixtree.include.bb2@385> XINCLUDE "translation.include.bb2"
000174D2 <prefixtree.include.bb2@388> XINCLUDE "translation.include.bb2"
0001751A <prefixtree.include.bb2@389> XINCLUDE "translation.include.bb2"
00017538 <prefixtree.include.bb2@390> XINCLUDE "translation.include.bb2"
00017556 <prefixtree.include.bb2@391> XINCLUDE "translation.include.bb2"
00017570 <prefixtree.include.bb2@394> XINCLUDE "translation.include.bb2"
0001757C <prefixtree.include.bb2@395> XINCLUDE "translation.include.bb2"
00017582 <prefixtree.include.bb2@396> XINCLUDE "translation.include.bb2"
000175AE <prefixtree.include.bb2@397> XINCLUDE "translation.include.bb2"
000175C6 <prefixtree.include.bb2@399> XINCLUDE "translation.include.bb2"
000175CC <prefixtree.include.bb2@400> XINCLUDE "translation.include.bb2"
000175E0 <prefixtree.include.bb2@403> XINCLUDE "translation.include.bb2"
000175EE <prefixtree.include.bb2@405> XINCLUDE "translation.include.bb2"
000175FC <prefixtree.include.bb2@406> XINCLUDE "translation.include.bb2"
0001760A <prefixtree.include.bb2@407> XINCLUDE "translation.include.bb2"
00017612 <prefixtree.include.bb2@408> XINCLUDE "translation.include.bb2"
00017636 <prefixtree.include.bb2@409> XINCLUDE "translation.include.bb2"
0001765E <prefixtree.include.bb2@410> XINCLUDE "translation.include.bb2"
00017686 <prefixtree.include.bb2@411> XINCLUDE "translation.include.bb2"
000176F2 <prefixtree.include.bb2@412> XINCLUDE "translation.include.bb2"
00017702 <prefixtree.include.bb2@413> XINCLUDE "translation.include.bb2"
0001772E <prefixtree.include.bb2@414> XINCLUDE "translation.include.bb2"
00017784 <prefixtree.include.bb2@416> XINCLUDE "translation.include.bb2"
00017792 <prefixtree.include.bb2@417> XINCLUDE "translation.include.bb2"
000177A0 <prefixtree.include.bb2@418> XINCLUDE "translation.include.bb2"
000177A6 <prefixtree.include.bb2@419> XINCLUDE "translation.include.bb2"
000177EE <prefixtree.include.bb2@421> XINCLUDE "translation.include.bb2"
00017832 <prefixtree.include.bb2@422> XINCLUDE "translation.include.bb2"
00017882 <prefixtree.include.bb2@425> XINCLUDE "translation.include.bb2"
000178D8 <prefixtree.include.bb2@426> XINCLUDE "translation.include.bb2"
00017944 <prefixtree.include.bb2@427> XINCLUDE "translation.include.bb2"
0001794C <prefixtree.include.bb2@431> XINCLUDE "translation.include.bb2"
00017986 <prefixtree.include.bb2@433> XINCLUDE "translation.include.bb2"
000179AC <prefixtree.include.bb2@434> XINCLUDE "translation.include.bb2"
000179C4 <prefixtree.include.bb2@435> XINCLUDE "translation.include.bb2"
000179FE <prefixtree.include.bb2@436> XINCLUDE "translation.include.bb2"
00017A28 <prefixtree.include.bb2@437> XINCLUDE "translation.include.bb2"
00017A40 <prefixtree.include.bb2@438> XINCLUDE "translation.include.bb2"
00017A64 <prefixtree.include.bb2@440> XINCLUDE "translation.include.bb2"
00017AB8 <prefixtree.include.bb2@441> XINCLUDE "translation.include.bb2"
00017AC0 <prefixtree.include.bb2@442> XINCLUDE "translation.include.bb2"
00017AC6 <prefixtree.include.bb2@443> XINCLUDE "translation.include.bb2"
00017B28 <prefixtree.include.bb2@444> XINCLUDE "translation.include.bb2"
00017B54 <prefixtree.include.bb2@445> XINCLUDE "translation.include.bb2"
00017B70 <prefixtree.include.bb2@448> XINCLUDE "translation.include.bb2"
00017B7E <prefixtree.include.bb2@450> XINCLUDE "translation.include.bb2"
00017B8C <prefixtree.include.bb2@451> XINCLUDE "translation.include.bb2"
00017B9A <prefixtree.include.bb2@453> XINCLUDE "translation.include.bb2"
00017BA8 <prefixtree.include.bb2@454> XINCLUDE "translation.include.bb2"
00017BEC <prefixtree.include.bb2@455> XINCLUDE "translation.include.bb2"
00017C58 <prefixtree.include.bb2@456> XINCLUDE "translation.include.bb2"
00017C86 <prefixtree.include.bb2@457> XINCLUDE "translation.include.bb2"
00017C9A <prefixtree.include.bb2@458> XINCLUDE "translation.include.bb2"
00017CCC <prefixtree.include.bb2@459> XINCLUDE "translation.include.bb2"
00017D16 <prefixtree.include.bb2@460> XINCLUDE "translation.include.bb2"
00017D26 <prefixtree.include.bb2@461> XINCLUDE "translation.include.bb2"
00017D5A <prefixtree.include.bb2@462> XINCLUDE "translation.include.bb2"
00017D7C <prefixtree.include.bb2@463> XINCLUDE "translation.include.bb2"
00017D8C <prefixtree.include.bb2@464> XINCLUDE "translation.include.bb2"
00017D94 <prefixtree.include.bb2@467> XINCLUDE "translation.include.bb2"
00017DD8 <prefixtree.include.bb2@468> XINCLUDE "translation.include.bb2"
00017E44 <prefixtree.include.bb2@469> XINCLUDE "translation.include.bb2"
00017E72 <prefixtree.include.bb2@470> XINCLUDE "translation.include.bb2"
00017E96 <prefixtree.include.bb2@472> XINCLUDE "translation.include.bb2"
00017EDA <prefixtree.include.bb2@473> XINCLUDE "translation.include.bb2"
00017F46 <prefixtree.include.bb2@474> XINCLUDE "translation.include.bb2"
00017F74 <prefixtree.include.bb2@475> XINCLUDE "translation.include.bb2"
00017FA2 <prefixtree.include.bb2@476> XINCLUDE "translation.include.bb2"
00017FAA <prefixtree.include.bb2@477> XINCLUDE "translation.include.bb2"
00017FD8 <prefixtree.include.bb2@478> XINCLUDE "translation.include.bb2"
0001804A <prefixtree.include.bb2@479> XINCLUDE "translation.include.bb2"
00018050 <prefixtree.include.bb2@480> XINCLUDE "translation.include.bb2"
0001807E <prefixtree.include.bb2@481> XINCLUDE "translation.include.bb2"
000180F0 <prefixtree.include.bb2@482> XINCLUDE "translation.include.bb2"
0001810E <prefixtree.include.bb2@485> XINCLUDE "translation.include.bb2"
00018132 <prefixtree.include.bb2@486> XINCLUDE "translation.include.bb2"
0001814A <prefixtree.include.bb2@487> XINCLUDE "translation.include.bb2"
00018150 <prefixtree.include.bb2@488> XINCLUDE "translation.include.bb2"
00018156 <prefixtree.include.bb2@491> XINCLUDE "translation.include.bb2"
00018158 <prefixtree.include.bb2@493> XINCLUDE "translation.include.bb2"
00018162 <prefixtree.include.bb2@496> XINCLUDE "translation.include.bb2"
0001818E <prefixtree.include.bb2@497> XINCLUDE "translation.include.bb2"
000181B0 <prefixtree.include.bb2@515> XINCLUDE "translation.include.bb2"
000181B8 <prefixtree.include.bb2@516> XINCLUDE "translation.include.bb2"
000181BE <prefixtree.include.bb2@517> XINCLUDE "translation.include.bb2"
000181CC <prefixtree.include.bb2@518> XINCLUDE "translation.include.bb2"
00018206 <prefixtree.include.bb2@520> XINCLUDE "translation.include.bb2"
0001822C <prefixtree.include.bb2@521> XINCLUDE "translation.include.bb2"
00018244 <prefixtree.include.bb2@522> XINCLUDE "translation.include.bb2"
0001827E <prefixtree.include.bb2@523> XINCLUDE "translation.include.bb2"
000182A8 <prefixtree.include.bb2@524> XINCLUDE "translation.include.bb2"
000182C0 <prefixtree.include.bb2@526> XINCLUDE "translation.include.bb2"
000182D8 <prefixtree.include.bb2@527> XINCLUDE "translation.include.bb2"
00018310 <prefixtree.include.bb2@528> XINCLUDE "translation.include.bb2"
00018318 <prefixtree.include.bb2@530> XINCLUDE "translation.include.bb2"
00018352 <prefixtree.include.bb2@532> XINCLUDE "translation.include.bb2"
00018364 <prefixtree.include.bb2@534> XINCLUDE "translation.include.bb2"
0001838A <prefixtree.include.bb2@535> XINCLUDE "translation.include.bb2"
000183A0 <prefixtree.include.bb2@536> XINCLUDE "translation.include.bb2"
000183C6 <prefixtree.include.bb2@537> XINCLUDE "translation.include.bb2"
000183DA <prefixtree.include.bb2@538> XINCLUDE "translation.include.bb2"
000183F2 <prefixtree.include.bb2@540> XINCLUDE "translation.include.bb2"
00018404 <prefixtree.include.bb2@541> XINCLUDE "translation.include.bb2"
0001840E <prefixtree.include.bb2@542> XINCLUDE "translation.include.bb2"
00018422 <prefixtree.include.bb2@543> XINCLUDE "translation.include.bb2"
0001843C <prefixtree.include.bb2@560> XINCLUDE "translation.include.bb2"
0001845A <prefixtree.include.bb2@561> XINCLUDE "translation.include.bb2"
0001846C <prefixtree.include.bb2@562> XINCLUDE "translation.include.bb2"
0001848A <prefixtree.include.bb2@563> XINCLUDE "translation.include.bb2"
000184AC <prefixtree.include.bb2@564> XINCLUDE "translation.include.bb2"
000184C8 <prefixtree.include.bb2@565> XINCLUDE "translation.include.bb2"
000184E8 <prefixtree.include.bb2@566> XINCLUDE "translation.include.bb2"
000184F2 <prefixtree.include.bb2@567> XINCLUDE "translation.include.bb2"
000184F8 <prefixtree.include.bb2@568> XINCLUDE "translation.include.bb2"
00018502 <prefixtree.include.bb2@569> XINCLUDE "translation.include.bb2"
0001850E <prefixtree.include.bb2@571> XINCLUDE "translation.include.bb2"
00018514 <prefixtree.include.bb2@572> XINCLUDE "translation.include.bb2"
00018542 <prefixtree.include.bb2@591> XINCLUDE "translation.include.bb2"
0001856A <prefixtree.include.bb2@592> XINCLUDE "translation.include.bb2"
000185AA <prefixtree.include.bb2@593> XINCLUDE "translation.include.bb2"
000185C2 <prefixtree.include.bb2@594> XINCLUDE "translation.include.bb2"
00018608 <prefixtree.include.bb2@595> XINCLUDE "translation.include.bb2"
00018632 <prefixtree.include.bb2@598> XINCLUDE "translation.include.bb2"
00018660 <prefixtree.include.bb2@599> XINCLUDE "translation.include.bb2"
0001867A <prefixtree.include.bb2@815> XINCLUDE "translation.include.bb2"
00018682 <prefixtree.include.bb2@816> XINCLUDE "translation.include.bb2"
0001869A <prefixtree.include.bb2@817> XINCLUDE "translation.include.bb2"
000186A4 <prefixtree.include.bb2@818> XINCLUDE "translation.include.bb2"
000186B6 <prefixtree.include.bb2@819> XINCLUDE "translation.include.bb2"
000186EE <prefixtree.include.bb2@820> XINCLUDE "translation.include.bb2"
000186FC <prefixtree.include.bb2@821> XINCLUDE "translation.include.bb2"
00018708 <prefixtree.include.bb2@822> XINCLUDE "translation.include.bb2"
00018724 <prefixtree.include.bb2@823> XINCLUDE "translation.include.bb2"
00018746 <prefixtree.include.bb2@824> XINCLUDE "translation.include.bb2"
00018768 <prefixtree.include.bb2@825> XINCLUDE "translation.include.bb2"
0001878A <prefixtree.include.bb2@826> XINCLUDE "translation.include.bb2"
000187AC <prefixtree.include.bb2@827> XINCLUDE "translation.include.bb2"
000187C8 <prefixtree.include.bb2@828> XINCLUDE "translation.include.bb2"
000187E6 <prefixtree.include.bb2@829> XINCLUDE "translation.include.bb2"
000187FA <prefixtree.include.bb2@830> XINCLUDE "translation.include.bb2"
00018800 <prefixtree.include.bb2@832> XINCLUDE "translation.include.bb2"
00018802 <prefixtree.include.bb2@834> XINCLUDE "translation.include.bb2"
00018808 <prefixtree.include.bb2@835> XINCLUDE "translation.include.bb2"
00018812 <prefixtree.include.bb2@837> XINCLUDE "translation.include.bb2"
00018818 <prefixtree.include.bb2@838> XINCLUDE "translation.include.bb2"
00018836 <prefixtree.include.bb2@856> XINCLUDE "translation.include.bb2"
0001883C <prefixtree.include.bb2@857> XINCLUDE "translation.include.bb2"
00018860 <prefixtree.include.bb2@858> XINCLUDE "translation.include.bb2"
0001887E <prefixtree.include.bb2@859> XINCLUDE "translation.include.bb2"
000188AC <prefixtree.include.bb2@860> XINCLUDE "translation.include.bb2"
000188DA <prefixtree.include.bb2@861> XINCLUDE "translation.include.bb2"
00018908 <prefixtree.include.bb2@862> XINCLUDE "translation.include.bb2"
00018936 <prefixtree.include.bb2@863> XINCLUDE "translation.include.bb2"
0001896A <prefixtree.include.bb2@864> XINCLUDE "translation.include.bb2"
0001897A <prefixtree.include.bb2@865> XINCLUDE "translation.include.bb2"
00018984 <prefixtree.include.bb2@867> XINCLUDE "translation.include.bb2"
0001898A <prefixtree.include.bb2@868> XINCLUDE "translation.include.bb2"
0001898A <phrasebook.include.bb2@34> XINCLUDE "translation.include.bb2"
000189D4 <phrasebook.include.bb2@58> XINCLUDE "translation.include.bb2"
000189F4 <phrasebook.include.bb2@59> XINCLUDE "translation.include.bb2"
000189FE <phrasebook.include.bb2@60> XINCLUDE "translation.include.bb2"
00018A12 <phrasebook.include.bb2@61> XINCLUDE "translation.include.bb2"
00018A58 <phrasebook.include.bb2@62> XINCLUDE "translation.include.bb2"
00018A9E <phrasebook.include.bb2@63> XINCLUDE "translation.include.bb2"
00018AE4 <phrasebook.include.bb2@64> XINCLUDE "translation.include.bb2"
00018AEE <phrasebook.include.bb2@66> XINCLUDE "translation.include.bb2"
00018B0A <phrasebook.include.bb2@67> XINCLUDE "translation.include.bb2"
00018B34 <phrasebook.include.bb2@70> XINCLUDE "translation.include.bb2"
00018BB2 <phrasebook.include.bb2@71> XINCLUDE "translation.include.bb2"
00018C30 <phrasebook.include.bb2@72> XINCLUDE "translation.include.bb2"
00018CAE <phrasebook.include.bb2@73> XINCLUDE "translation.include.bb2"
00018D2C <phrasebook.include.bb2@74> XINCLUDE "translation.include.bb2"
00018DAA <phrasebook.include.bb2@75> XINCLUDE "translation.include.bb2"
00018E28 <phrasebook.include.bb2@76> XINCLUDE "translation.include.bb2"
00018EA6 <phrasebook.include.bb2@77> XINCLUDE "translation.include.bb2"
00018F24 <phrasebook.include.bb2@78> XINCLUDE "translation.include.bb2"
00018FA2 <phrasebook.include.bb2@79> XINCLUDE "translation.include.bb2"
00019020 <phrasebook.include.bb2@80> XINCLUDE "translation.include.bb2"
000190A4 <phrasebook.include.bb2@81> XINCLUDE "translation.include.bb2"
000190D4 <phrasebook.include.bb2@82> XINCLUDE "translation.include.bb2"
00019130 <phrasebook.include.bb2@84> XINCLUDE "translation.include.bb2"
0001915C <phrasebook.include.bb2@85> XINCLUDE "translation.include.bb2"
00019226 <phrasebook.include.bb2@86> XINCLUDE "translation.include.bb2"
00019234 <phrasebook.include.bb2@88> XINCLUDE "translation.include.bb2"
00019272 <phrasebook.include.bb2@89> XINCLUDE "translation.include.bb2"
000192F6 <phrasebook.include.bb2@90> XINCLUDE "translation.include.bb2"
00019320 <phrasebook.include.bb2@91> XINCLUDE "translation.include.bb2"
0001933E <phrasebook.include.bb2@92> XINCLUDE "translation.include.bb2"
00019358 <phrasebook.include.bb2@106> XINCLUDE "translation.include.bb2"
00019362 <phrasebook.include.bb2@107> XINCLUDE "translation.include.bb2"
0001936E <phrasebook.include.bb2@108> XINCLUDE "translation.include.bb2"
0001937E <phrasebook.include.bb2@109> XINCLUDE "translation.include.bb2"
0001938E <phrasebook.include.bb2@110> XINCLUDE "translation.include.bb2"
0001939E <phrasebook.include.bb2@111> XINCLUDE "translation.include.bb2"
000193AE <phrasebook.include.bb2@112> XINCLUDE "translation.include.bb2"
000193B2 <phrasebook.include.bb2@114> XINCLUDE "translation.include.bb2"
000193F0 <phrasebook.include.bb2@131> XINCLUDE "translation.include.bb2"
00019448 <phrasebook.include.bb2@132> XINCLUDE "translation.include.bb2"
000194A4 <phrasebook.include.bb2@133> XINCLUDE "translation.include.bb2"
0001952E <phrasebook.include.bb2@134> XINCLUDE "translation.include.bb2"
000195AC <phrasebook.include.bb2@135> XINCLUDE "translation.include.bb2"
000195C6 <phrasebook.include.bb2@137> XINCLUDE "translation.include.bb2"
000195F4 <phrasebook.include.bb2@155> XINCLUDE "translation.include.bb2"
00019630 <phrasebook.include.bb2@156> XINCLUDE "translation.include.bb2"
000196FE <phrasebook.include.bb2@158> XINCLUDE "translation.include.bb2"
000197CC <phrasebook.include.bb2@159> XINCLUDE "translation.include.bb2"
00019818 <phrasebook.include.bb2@161> XINCLUDE "translation.include.bb2"
00019896 <phrasebook.include.bb2@162> XINCLUDE "translation.include.bb2"
00019914 <phrasebook.include.bb2@163> XINCLUDE "translation.include.bb2"
00019972 <phrasebook.include.bb2@165> XINCLUDE "translation.include.bb2"
00019A0E <phrasebook.include.bb2@166> XINCLUDE "translation.include.bb2"
00019A46 <phrasebook.include.bb2@168> XINCLUDE "translation.include.bb2"
00019AA4 <phrasebook.include.bb2@169> XINCLUDE "translation.include.bb2"
00019B2C <phrasebook.include.bb2@170> XINCLUDE "translation.include.bb2"
00019B34 <phrasebook.include.bb2@172> XINCLUDE "translation.include.bb2"
00019B9E <phrasebook.include.bb2@174> XINCLUDE "translation.include.bb2"
00019C10 <phrasebook.include.bb2@175> XINCLUDE "translation.include.bb2"
00019C4E <phrasebook.include.bb2@176> XINCLUDE "translation.include.bb2"
00019CD6 <phrasebook.include.bb2@177> XINCLUDE "translation.include.bb2"
00019D02 <phrasebook.include.bb2@187> XINCLUDE "translation.include.bb2"
00019D5E <phrasebook.include.bb2@188> XINCLUDE "translation.include.bb2"
00019E2C <phrasebook.include.bb2@189> XINCLUDE "translation.include.bb2"
00019E90 <phrasebook.include.bb2@190> XINCLUDE "translation.include.bb2"
00019E96 <phrasebook.include.bb2@191> XINCLUDE "translation.include.bb2"
00019ECA <phrasebook.include.bb2@192> XINCLUDE "translation.include.bb2"
00019F98 <phrasebook.include.bb2@196> XINCLUDE "translation.include.bb2"
0001A066 <phrasebook.include.bb2@197> XINCLUDE "translation.include.bb2"
0001A090 <phrasebook.include.bb2@199> XINCLUDE "translation.include.bb2"
0001A0AE <phrasebook.include.bb2@200> XINCLUDE "translation.include.bb2"
0001A0DC <phrasebook.include.bb2@204> XINCLUDE "translation.include.bb2"
0001A118 <phrasebook.include.bb2@205> XINCLUDE "translation.include.bb2"
0001A188 <phrasebook.include.bb2@206> XINCLUDE "translation.include.bb2"
0001A190 <phrasebook.include.bb2@207> XINCLUDE "translation.include.bb2"
0001A1E2 <phrasebook.include.bb2@208> XINCLUDE "translation.include.bb2"
0001A20A <phrasebook.include.bb2@209> XINCLUDE "translation.include.bb2"
0001A222 <phrasebook.include.bb2@210> XINCLUDE "translation.include.bb2"
0001A2D6 <phrasebook.include.bb2@211> XINCLUDE "translation.include.bb2"
0001A2E4 <phrasebook.include.bb2@212> XINCLUDE "translation.include.bb2"
0001A33A <phrasebook.include.bb2@213> XINCLUDE "translation.include.bb2"
0001A398 <phrasebook.include.bb2@214> XINCLUDE "translation.include.bb2"
0001A39E <phrasebook.include.bb2@215> XINCLUDE "translation.include.bb2"
0001A422 <phrasebook.include.bb2@216> XINCLUDE "translation.include.bb2"
0001A4A6 <phrasebook.include.bb2@217> XINCLUDE "translation.include.bb2"
0001A52A <phrasebook.include.bb2@218> XINCLUDE "translation.include.bb2"
0001A5A8 <phrasebook.include.bb2@219> XINCLUDE "translation.include.bb2"
0001A626 <phrasebook.include.bb2@220> XINCLUDE "translation.include.bb2"
0001A6A4 <phrasebook.include.bb2@221> XINCLUDE "translation.include.bb2"
0001A722 <phrasebook.include.bb2@222> XINCLUDE "translation.include.bb2"
0001A7A0 <phrasebook.include.bb2@223> XINCLUDE "translation.include.bb2"
0001A81E <phrasebook.include.bb2@224> XINCLUDE "translation.include.bb2"
0001A89C <phrasebook.include.bb2@225> XINCLUDE "translation.include.bb2"
0001A8C6 <phrasebook.include.bb2@226> XINCLUDE "translation.include.bb2"
0001A8E4 <phrasebook.include.bb2@227> XINCLUDE "translation.include.bb2"
0001A912 <phrasebook.include.bb2@245> XINCLUDE "translation.include.bb2"
0001A956 <phrasebook.include.bb2@246> XINCLUDE "translation.include.bb2"
0001A95C <phrasebook.include.bb2@247> XINCLUDE "translation.include.bb2"
0001A976 <phrasebook.include.bb2@248> XINCLUDE "translation.include.bb2"
0001A992 <phrasebook.include.bb2@249> XINCLUDE "translation.include.bb2"
0001A9C6 <phrasebook.include.bb2@250> XINCLUDE "translation.include.bb2"
0001A9EA <phrasebook.include.bb2@251> XINCLUDE "translation.include.bb2"
0001AA12 <phrasebook.include.bb2@252> XINCLUDE "translation.include.bb2"
0001AA7E <phrasebook.include.bb2@253> XINCLUDE "translation.include.bb2"
0001AADC <phrasebook.include.bb2@256> XINCLUDE "translation.include.bb2"
0001AB3A <phrasebook.include.bb2@257> XINCLUDE "translation.include.bb2"
0001AB86 <phrasebook.include.bb2@258> XINCLUDE "translation.include.bb2"
0001ABE0 <phrasebook.include.bb2@259> XINCLUDE "translation.include.bb2"
0001ABE6 <phrasebook.include.bb2@260> XINCLUDE "translation.include.bb2"
0001ABEC <phrasebook.include.bb2@262> XINCLUDE "translation.include.bb2"
0001ABF6 <phrasebook.include.bb2@263> XINCLUDE "translation.include.bb2"
0001AC00 <phrasebook.include.bb2@264> XINCLUDE "translation.include.bb2"
0001AC1A <phrasebook.include.bb2@265> XINCLUDE "translation.include.bb2"
0001AC48 <phrasebook.include.bb2@282> XINCLUDE "translation.include.bb2"
0001AC4E <phrasebook.include.bb2@283> XINCLUDE "translation.include.bb2"
0001AC92 <phrasebook.include.bb2@284> XINCLUDE "translation.include.bb2"
0001ACAC <phrasebook.include.bb2@285> XINCLUDE "translation.include.bb2"
0001ACBC <phrasebook.include.bb2@286> XINCLUDE "translation.include.bb2"
0001ACC6 <phrasebook.include.bb2@287> XINCLUDE "translation.include.bb2"
0001ACD2 <phrasebook.include.bb2@288> XINCLUDE "translation.include.bb2"
0001ACDC <phrasebook.include.bb2@289> XINCLUDE "translation.include.bb2"
0001AD00 <phrasebook.include.bb2@292> XINCLUDE "translation.include.bb2"
0001AD48 <phrasebook.include.bb2@293> XINCLUDE "translation.include.bb2"
0001AD90 <phrasebook.include.bb2@294> XINCLUDE "translation.include.bb2"
0001ADD8 <phrasebook.include.bb2@295> XINCLUDE "translation.include.bb2"
0001ADEE <phrasebook.include.bb2@296> XINCLUDE "translation.include.bb2"
0001AE02 <phrasebook.include.bb2@297> XINCLUDE "translation.include.bb2"
0001AE0C <phrasebook.include.bb2@299> XINCLUDE "translation.include.bb2"
0001AE16 <phrasebook.include.bb2@300> XINCLUDE "translation.include.bb2"
0001AE30 <phrasebook.include.bb2@301> XINCLUDE "translation.include.bb2"
0001AE5A <phrasebook.include.bb2@317> XINCLUDE "translation.include.bb2"
0001AE9E <phrasebook.include.bb2@318> XINCLUDE "translation.include.bb2"
0001AEB8 <phrasebook.include.bb2@319> XINCLUDE "translation.include.bb2"
0001AF16 <phrasebook.include.bb2@320> XINCLUDE "translation.include.bb2"
0001AF30 <phrasebook.include.bb2@321> XINCLUDE "translation.include.bb2"
0001AF48 <phrasebook.include.bb2@323> XINCLUDE "translation.include.bb2"
0001AF52 <phrasebook.include.bb2@324> XINCLUDE "translation.include.bb2"
0001AF6E <phrasebook.include.bb2@325> XINCLUDE "translation.include.bb2"
0001AF7C <phrasebook.include.bb2@326> XINCLUDE "translation.include.bb2"
0001AF88 <phrasebook.include.bb2@327> XINCLUDE "translation.include.bb2"
0001AFD4 <phrasebook.include.bb2@328> XINCLUDE "translation.include.bb2"
0001B026 <phrasebook.include.bb2@329> XINCLUDE "translation.include.bb2"
0001B078 <phrasebook.include.bb2@330> XINCLUDE "translation.include.bb2"
0001B08C <phrasebook.include.bb2@331> XINCLUDE "translation.include.bb2"
0001B09C <phrasebook.include.bb2@332> XINCLUDE "translation.include.bb2"
0001B0A2 <phrasebook.include.bb2@333> XINCLUDE "translation.include.bb2"
0001B0A4 <phrasebook.include.bb2@335> XINCLUDE "translation.include.bb2"
0001B0AA <phrasebook.include.bb2@336> XINCLUDE "translation.include.bb2"
0001B0B4 <phrasebook.include.bb2@338> XINCLUDE "translation.include.bb2"
0001B0BE <phrasebook.include.bb2@339> XINCLUDE "translation.include.bb2"
0001B0D8 <phrasebook.include.bb2@340> XINCLUDE "translation.include.bb2"
0001B102 <phrasebook.include.bb2@379> XINCLUDE "translation.include.bb2"
0001B118 <phrasebook.include.bb2@380> XINCLUDE "translation.include.bb2"
0001B122 <phrasebook.include.bb2@381> XINCLUDE "translation.include.bb2"
0001B19A <phrasebook.include.bb2@382> XINCLUDE "translation.include.bb2"
0001B1D6 <phrasebook.include.bb2@383> XINCLUDE "translation.include.bb2"
0001B1E6 <phrasebook.include.bb2@384> XINCLUDE "translation.include.bb2"
0001B206 <phrasebook.include.bb2@385> XINCLUDE "translation.include.bb2"
0001B226 <phrasebook.include.bb2@386> XINCLUDE "translation.include.bb2"
0001B246 <phrasebook.include.bb2@387> XINCLUDE "translation.include.bb2"
0001B27C <phrasebook.include.bb2@388> XINCLUDE "translation.include.bb2"
0001B2A4 <phrasebook.include.bb2@389> XINCLUDE "translation.include.bb2"
0001B2DC <phrasebook.include.bb2@390> XINCLUDE "translation.include.bb2"
0001B340 <phrasebook.include.bb2@391> XINCLUDE "translation.include.bb2"
0001B360 <phrasebook.include.bb2@392> XINCLUDE "translation.include.bb2"
0001B3DC <phrasebook.include.bb2@393> XINCLUDE "translation.include.bb2"
0001B414 <phrasebook.include.bb2@396> XINCLUDE "translation.include.bb2"
0001B48A <phrasebook.include.bb2@397> XINCLUDE "translation.include.bb2"
0001B4AA <phrasebook.include.bb2@398> XINCLUDE "translation.include.bb2"
0001B526 <phrasebook.include.bb2@399> XINCLUDE "translation.include.bb2"
0001B55E <phrasebook.include.bb2@402> XINCLUDE "translation.include.bb2"
0001B5D4 <phrasebook.include.bb2@403> XINCLUDE "translation.include.bb2"
0001B5F4 <phrasebook.include.bb2@404> XINCLUDE "translation.include.bb2"
0001B670 <phrasebook.include.bb2@405> XINCLUDE "translation.include.bb2"
0001B69C <phrasebook.include.bb2@408> XINCLUDE "translation.include.bb2"
0001B6A4 <phrasebook.include.bb2@409> XINCLUDE "translation.include.bb2"
0001B6EA <phrasebook.include.bb2@410> XINCLUDE "translation.include.bb2"
0001B70A <phrasebook.include.bb2@411> XINCLUDE "translation.include.bb2"
0001B714 <phrasebook.include.bb2@412> XINCLUDE "translation.include.bb2"
0001B72C <phrasebook.include.bb2@413> XINCLUDE "translation.include.bb2"
0001B73C <phrasebook.include.bb2@414> XINCLUDE "translation.include.bb2"
0001B774 <phrasebook.include.bb2@415> XINCLUDE "translation.include.bb2"
0001B7A6 <phrasebook.include.bb2@416> XINCLUDE "translation.include.bb2"
0001B7B8 <phrasebook.include.bb2@419> XINCLUDE "translation.include.bb2"
0001B83A <phrasebook.include.bb2@420> XINCLUDE "translation.include.bb2"
0001B844 <phrasebook.include.bb2@421> XINCLUDE "translation.include.bb2"
0001B876 <phrasebook.include.bb2@422> XINCLUDE "translation.include.bb2"
0001B8A8 <phrasebook.include.bb2@423> XINCLUDE "translation.include.bb2"
0001B8D4 <phrasebook.include.bb2@428> XINCLUDE "translation.include.bb2"
0001B900 <phrasebook.include.bb2@429> XINCLUDE "translation.include.bb2"
0001B922 <phrasebook.include.bb2@430> XINCLUDE "translation.include.bb2"
0001B92C <phrasebook.include.bb2@432> XINCLUDE "translation.include.bb2"
0001B946 <phrasebook.include.bb2@433> XINCLUDE "translation.include.bb2"
0001B946 <translation.include.bb2@31> XINCLUDE "translation.include.bb2"
0001B95C <translation.include.bb2@43> XINCLUDE "translation.include.bb2"
0001B978 <translation.include.bb2@44> XINCLUDE "translation.include.bb2"
0001B97A <translation.include.bb2@45> XINCLUDE "translation.include.bb2"
0001B9A8 <translation.include.bb2@46> XINCLUDE "translation.include.bb2"
0001B9A8 <AmiBlitz3.ab2@99> XINCLUDE "translation.include.bb2"
0001B9A8 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
0001B9C2 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
0001B9CC <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
0001B9EE <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
0001BA06 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
0001BA20 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
0001BA52 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
0001BA5C <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
0001BA62 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
0001BA74 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
0001BADC <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
0001BAE2 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
0001BB10 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
0001BB1A <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
0001BB20 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
0001BB36 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
0001BB40 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
0001BB58 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
0001BB5A <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
0001BB88 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
0001BBA2 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
0001BBB8 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
0001BBEC <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
0001BBF0 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
0001BC0A <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
0001BC20 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
0001BC54 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
0001BC58 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
0001BC72 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
0001BC88 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
0001BCBC <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
0001BCC0 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
0001BCDA <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
0001BCF0 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
0001BD24 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
0001BD28 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
0001BD42 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
0001BD58 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
0001BD8C <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
0001BD90 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
0001BD90 <AmiBlitz3.ab2@100> XINCLUDE "/Shared/ted.include.ab3"
0001BD90 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
0001BDA6 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
0001BDBC <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
0001BDCA <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
0001BDD8 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
0001BDE2 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
0001BDF4 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
0001BE06 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
0001BE0C <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
0001BE3A <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
0001BE3E <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
0001BE54 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
0001BE6A <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
0001BE76 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
0001BE82 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
0001BE8A <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
0001BE92 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
0001BE96 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
0001BEC0 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
0001BEEC <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
0001BEFE <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
0001BF16 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
0001BF2C <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
0001BF32 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
0001BF68 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
0001BFA0 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
0001BFD8 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
0001C010 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
0001C048 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
0001C080 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001C0B8 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
0001C0F0 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
0001C128 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
0001C160 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001C198 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
0001C1D0 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
0001C208 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001C212 <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
0001C21C <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
0001C226 <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
0001C23A <CLIModeSupport.ab3@80> XINCLUDE "CLIModeSupport.ab3"
0001C276 <CLIModeSupport.ab3@81> XINCLUDE "CLIModeSupport.ab3"
0001C2B2 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
0001C2EE <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
0001C32A <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
0001C366 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
0001C36C <CLIModeSupport.ab3@86> XINCLUDE "CLIModeSupport.ab3"
0001C39A <CLIModeSupport.ab3@87> XINCLUDE "CLIModeSupport.ab3"
0001C3C4 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
0001C3CE <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
0001C3D2 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001C406 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001C40C <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
0001C43A <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
0001C440 <CLIModeSupport.ab3@96> XINCLUDE "CLIModeSupport.ab3"
0001C456 <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
0001C460 <CLIModeSupport.ab3@101> XINCLUDE "CLIModeSupport.ab3"
0001C466 <CLIModeSupport.ab3@102> XINCLUDE "CLIModeSupport.ab3"
0001C47C <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
0001C482 <CLIModeSupport.ab3@107> XINCLUDE "CLIModeSupport.ab3"
0001C4C0 <CLIModeSupport.ab3@109> XINCLUDE "CLIModeSupport.ab3"
0001C4C4 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
0001C4CE <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
0001C4D0 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
0001C504 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
0001C514 <CLIModeSupport.ab3@114> XINCLUDE "CLIModeSupport.ab3"
0001C51A <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
0001C524 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
0001C52A <CLIModeSupport.ab3@120> XINCLUDE "CLIModeSupport.ab3"
0001C540 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
0001C57E <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
0001C582 <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
0001C58A <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
0001C5C8 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
0001C5CA <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
0001C5CE <CLIModeSupport.ab3@130> XINCLUDE "CLIModeSupport.ab3"
0001C60C <CLIModeSupport.ab3@132> XINCLUDE "CLIModeSupport.ab3"
0001C610 <CLIModeSupport.ab3@133> XINCLUDE "CLIModeSupport.ab3"
0001C64E <CLIModeSupport.ab3@135> XINCLUDE "CLIModeSupport.ab3"
0001C652 <CLIModeSupport.ab3@136> XINCLUDE "CLIModeSupport.ab3"
0001C67C <CLIModeSupport.ab3@138> XINCLUDE "CLIModeSupport.ab3"
0001C686 <CLIModeSupport.ab3@139> XINCLUDE "CLIModeSupport.ab3"
0001C69A <CLIModeSupport.ab3@140> XINCLUDE "CLIModeSupport.ab3"
0001C6C0 <CLIModeSupport.ab3@141> XINCLUDE "CLIModeSupport.ab3"
0001C6C6 <CLIModeSupport.ab3@142> XINCLUDE "CLIModeSupport.ab3"
0001C6D4 <CLIModeSupport.ab3@143> XINCLUDE "CLIModeSupport.ab3"
0001C6DA <CLIModeSupport.ab3@144> XINCLUDE "CLIModeSupport.ab3"
0001C712 <CLIModeSupport.ab3@146> XINCLUDE "CLIModeSupport.ab3"
0001C716 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
0001C740 <CLIModeSupport.ab3@152> XINCLUDE "CLIModeSupport.ab3"
0001C746 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
0001C766 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
0001C770 <CLIModeSupport.ab3@155> XINCLUDE "CLIModeSupport.ab3"
0001C774 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
0001C776 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
0001C794 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
0001C796 <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
0001C79C <CLIModeSupport.ab3@160> XINCLUDE "CLIModeSupport.ab3"
0001C7A2 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
0001C7CC <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
0001C7CE <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
0001C7FC <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
0001C800 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
0001C82E <CLIModeSupport.ab3@167> XINCLUDE "CLIModeSupport.ab3"
0001C832 <CLIModeSupport.ab3@168> XINCLUDE "CLIModeSupport.ab3"
0001C858 <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
0001C868 <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
0001C86E <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
0001C874 <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
0001C8A2 <CLIModeSupport.ab3@174> XINCLUDE "CLIModeSupport.ab3"
0001C8AC <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
0001C8C6 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
0001C8E4 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
0001C8EC <CLIModeSupport.ab3@190> XINCLUDE "CLIModeSupport.ab3"
0001C8F2 <CLIModeSupport.ab3@191> XINCLUDE "CLIModeSupport.ab3"
0001C8F8 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001C91A <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
0001C932 <CLIModeSupport.ab3@195> XINCLUDE "CLIModeSupport.ab3"
0001C958 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0001C982 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
0001C990 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
0001C996 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001C9AA <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0001C9C2 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
0001C9D0 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0001C9E4 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
0001CA20 <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
0001CA2E <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001CA5E <CLIModeSupport.ab3@207> XINCLUDE "CLIModeSupport.ab3"
0001CA6C <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
0001CA72 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001CA80 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0001CA86 <CLIModeSupport.ab3@211> XINCLUDE "CLIModeSupport.ab3"
0001CA8C <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
0001CA9A <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
0001CA9C <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
0001CAA2 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
0001CAB8 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0001CAC2 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
0001CAC8 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
0001CAF2 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
0001CB30 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
0001CB34 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
0001CB72 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
0001CB76 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
0001CBB4 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
0001CBB8 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
0001CBC0 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
0001CBC8 <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
0001CC0C <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
0001CC1E <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
0001CC2C <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
0001CC60 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
0001CC84 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
0001CC8E <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
0001CCA8 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
0001CCBC <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
0001CD14 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
0001CDBA <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
0001CDC2 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
0001CDFA <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
0001CE00 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
0001CE10 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
0001CE38 <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
0001CE60 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
0001CE68 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
0001CE6E <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
0001CE76 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
0001CE9E <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
0001CEA6 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
0001CEAE <CLIModeSupport.ab3@260> XINCLUDE "CLIModeSupport.ab3"
0001CEB4 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
0001CEBA <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
0001CEC0 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
0001CEC6 <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
0001CECC <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
0001CED2 <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
0001CED8 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
0001CEDE <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
0001CEE6 <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
0001CEEE <CLIModeSupport.ab3@270> XINCLUDE "CLIModeSupport.ab3"
0001CF16 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
0001CF1C <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
0001CF22 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
0001CF2A <CLIModeSupport.ab3@274> XINCLUDE "CLIModeSupport.ab3"
0001CF4A <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
0001CF5A <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
0001CF6A <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
0001CF7A <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
0001CF8A <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
0001CF9A <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
0001CFAA <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
0001CFBA <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
0001CFCA <CLIModeSupport.ab3@288> XINCLUDE "CLIModeSupport.ab3"
0001CFDA <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
0001CFEA <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
0001CFFA <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
0001D00A <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
0001D01A <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
0001D02A <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
0001D03A <CLIModeSupport.ab3@295> XINCLUDE "CLIModeSupport.ab3"
0001D04A <CLIModeSupport.ab3@296> XINCLUDE "CLIModeSupport.ab3"
0001D05C <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
0001D06E <CLIModeSupport.ab3@299> XINCLUDE "CLIModeSupport.ab3"
0001D080 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
0001D092 <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
0001D0A4 <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
0001D0B6 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
0001D0C8 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
0001D0DA <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
0001D10E <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
0001D126 <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
0001D172 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
0001D184 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
0001D1DA <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
0001D24C <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
0001D252 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
0001D286 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
0001D2AE <CLIModeSupport.ab3@317> XINCLUDE "CLIModeSupport.ab3"
0001D2D6 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
0001D310 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
0001D328 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
0001D3C6 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
0001D3E0 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
0001D42E <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
0001D43E <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
0001D446 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
0001D45A <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
0001D4A0 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
0001D4A6 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001D4F0 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0001D55A <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
0001D5C0 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
0001D5F4 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
0001D620 <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
0001D66E <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
0001D692 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
0001D698 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
0001D6A6 <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
0001D704 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001D762 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
0001D78C <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
0001D796 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001D79E <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
0001D7DC <CLIModeSupport.ab3@349> XINCLUDE "CLIModeSupport.ab3"
0001D828 <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
0001D83A <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
0001D890 <CLIModeSupport.ab3@352> XINCLUDE "CLIModeSupport.ab3"
0001D908 <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
0001D90E <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
0001D942 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
0001D96A <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
0001D9A0 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
0001D9AE <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
0001D9BC <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
0001DA24 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
0001DA2A <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
0001DA74 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
0001DABE <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
0001DAEE <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
0001DB18 <CLIModeSupport.ab3@367> XINCLUDE "CLIModeSupport.ab3"
0001DB6A <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
0001DBC0 <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
0001DC10 <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
0001DC76 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
0001DCE2 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
0001DD0E <CLIModeSupport.ab3@373> XINCLUDE "CLIModeSupport.ab3"
0001DD3E <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
0001DDBA <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
0001DDEA <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
0001DE1A <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
0001DE4A <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
0001DE7A <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
0001DEAA <CLIModeSupport.ab3@380> XINCLUDE "CLIModeSupport.ab3"
0001DEDA <CLIModeSupport.ab3@381> XINCLUDE "CLIModeSupport.ab3"
0001DF0A <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
0001DF3A <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
0001DF6A <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
0001DF9A <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
0001E016 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
0001E048 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
0001E07A <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
0001E0AA <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
0001E0B0 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
0001E124 <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0001E190 <CLIModeSupport.ab3@392> XINCLUDE "CLIModeSupport.ab3"
0001E1A2 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
0001E1D0 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
0001E1F8 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
0001E20C <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
0001E236 <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
0001E27A <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
0001E28A <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
0001E29A <CLIModeSupport.ab3@400> XINCLUDE "CLIModeSupport.ab3"
0001E2A0 <CLIModeSupport.ab3@401> XINCLUDE "CLIModeSupport.ab3"
0001E2B0 <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
0001E2BE <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
0001E2C8 <CLIModeSupport.ab3@410> XINCLUDE "CLIModeSupport.ab3"
0001E300 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001E338 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
0001E370 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
0001E380 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
0001E3E8 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
0001E420 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001E430 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
0001E440 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
0001E4A8 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
0001E510 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0001E578 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
0001E5E0 <CLIModeSupport.ab3@424> XINCLUDE "CLIModeSupport.ab3"
0001E648 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
0001E6B0 <CLIModeSupport.ab3@426> XINCLUDE "CLIModeSupport.ab3"
0001E718 <CLIModeSupport.ab3@427> XINCLUDE "CLIModeSupport.ab3"
0001E780 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
0001E790 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
0001E7C8 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001E802 <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
0001E83C <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
0001E874 <CLIModeSupport.ab3@434> XINCLUDE "CLIModeSupport.ab3"
0001E89A <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
0001E8A2 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
0001E8AA <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
0001E8B2 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
0001E8BA <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001E8CE <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
0001E8FC <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
0001E916 <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
0001E924 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
0001E990 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
0001E9B6 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
0001E9D2 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
0001E9DC <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
0001E9E6 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
0001E9F2 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
0001EA00 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
0001EA0C <CLIModeSupport.ab3@457> XINCLUDE "CLIModeSupport.ab3"
0001EA48 <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
0001EA62 <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
0001EA70 <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
0001EA90 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
0001EA9E <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
0001EAAC <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
0001EAB2 <CLIModeSupport.ab3@465> XINCLUDE "CLIModeSupport.ab3"
0001EAC2 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
0001EAC6 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
0001EAFA <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
0001EB2E <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
0001EB32 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
0001EB66 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
0001EB6A <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
0001EB9E <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
0001EBA4 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
0001EBDA <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
0001EC10 <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
0001EC46 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
0001EC7E <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
0001ECB6 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
0001ED5C <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
0001ED9C <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
0001EDD4 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
0001EDF2 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
0001EDF6 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
0001EDFC <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
0001EE02 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
0001EE06 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
0001EE30 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
0001EE44 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
0001EE82 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
0001EEB6 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
0001EEEC <CLIModeSupport.ab3@503> XINCLUDE "CLIModeSupport.ab3"
0001EF44 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
0001EF72 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
0001EF76 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
0001EFAC <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
0001EFDA <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
0001F008 <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
0001F00C <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
0001F042 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
0001F070 <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
0001F074 <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
0001F0D8 <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
0001F0DE <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
0001F10C <CLIModeSupport.ab3@521> XINCLUDE "CLIModeSupport.ab3"
0001F116 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
0001F120 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
0001F13A <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
0001F164 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
0001F16A <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
0001F18A <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
0001F194 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
0001F198 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
0001F19A <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
0001F1B8 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
0001F1BA <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
0001F1C0 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
0001F1C6 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
0001F1F0 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
0001F1F2 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
0001F220 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
0001F224 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001F252 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001F256 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
0001F27C <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
0001F28C <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
0001F292 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
0001F298 <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
0001F2C6 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
0001F2D0 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
0001F2EA <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
0001F300 <CLIModeSupport.ab3@557> XINCLUDE "CLIModeSupport.ab3"
0001F32A <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
0001F358 <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
0001F36C <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
0001F3A8 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
0001F3E4 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
0001F420 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
0001F45C <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
0001F498 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0001F49E <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
0001F4CC <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
0001F4CE <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
0001F4EC <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
0001F4F2 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
0001F51C <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
0001F51E <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
0001F530 <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
0001F562 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
0001F56C <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
0001F5D6 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
0001F640 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
0001F6AA <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
0001F714 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
0001F77E <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
0001F7E8 <CLIModeSupport.ab3@587> XINCLUDE "CLIModeSupport.ab3"
0001F7EE <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
0001F858 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0001F8C2 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
0001F8CC <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
0001F936 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
0001F93E <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
0001F96C <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
0001F970 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
0001F998 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
0001F99E <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
0001F9A4 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
0001F9AA <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
0001F9B0 <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
0001F9B6 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001F9C0 <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
0001F9CA <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
0001F9F8 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
0001FA24 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
0001FA2C <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
0001FA60 <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0001FA72 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001FAD8 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001FB3E <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001FB44 <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
0001FB4C <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
0001FB4E <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
0001FB6C <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
0001FBAA <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
0001FBE8 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
0001FBEE <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
0001FBF4 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
0001FBFA <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
0001FC04 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
0001FC0A <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
0001FC10 <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
0001FC16 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
0001FC20 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
0001FC24 <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
0001FC4E <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
0001FC50 <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
0001FC56 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
0001FC5A <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
0001FC60 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
0001FC64 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
0001FCBE <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
0001FCD0 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
0001FCFC <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
0001FDA2 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
0001FDC0 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
0001FDC6 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
0001FDF0 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
0001FDFA <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
0001FE2C <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
0001FE46 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
0001FE5A <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
0001FE64 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
0001FE7E <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
0001FEA8 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
0001FECC <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
0001FF0A <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
0001FF0E <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
0001FF4C <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
0001FF50 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
0001FF8E <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
0001FFCC <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
0001FFCE <CLIModeSupport.ab3@689> XINCLUDE "CLIModeSupport.ab3"
00020002 <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00020008 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
0002004C <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
0002005E <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00020066 <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
0002006C <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00020076 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00020084 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
0002008A <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
000200B2 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
000200CC <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
000200D6 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
000200DC <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
000200FA <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00020104 <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
0002010A <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00020110 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
0002011A <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00020128 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
0002012E <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
0002013E <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
0002016A <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00020180 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
0002018A <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00020190 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
000201E8 <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
0002025A <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00020272 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00020278 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
000202B0 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
000202DE <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00020308 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00020312 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
0002033A <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
00020364 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00020406 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00020414 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00020464 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00020474 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
0002053C <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00020570 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
000205A4 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
000205D8 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
0002060C <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00020640 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00020674 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000206A8 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000206DC <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
000206DE <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
0002071C <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
00020720 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
0002075E <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
0002079C <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
0002079E <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
000207A4 <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
000207A8 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
000207AA <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
000207E8 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00020826 <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
00020828 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
0002082A <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
0002082C <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00020832 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00020836 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00020846 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
0002085E <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00020876 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
0002088E <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
000208B8 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
000208E2 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00020910 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00020914 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
0002093C <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
0002093E <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
0002097C <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00020980 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
000209BE <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
000209C2 <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
00020A00 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00020A04 <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
00020A2A <CLIModeSupport.ab3@788> XINCLUDE "CLIModeSupport.ab3"
00020A50 <CLIModeSupport.ab3@789> XINCLUDE "CLIModeSupport.ab3"
00020A76 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00020A9C <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00020AC2 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00020B18 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00020B6E <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00020BBC <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00020C12 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00020C38 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00020C5E <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00020C84 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00020CDA <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00020D28 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00020DE2 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00020E38 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00020E5E <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00020E84 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00020EAA <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00020F00 <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00020F56 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00020FA4 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00020FF2 <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00021040 <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
0002108E <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
000210DC <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
0002112A <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00021178 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
0002119E <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
000211C4 <CLIModeSupport.ab3@817> XINCLUDE "CLIModeSupport.ab3"
000211EA <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00021238 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00021286 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
000212DC <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
0002132A <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00021378 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
000213C6 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
000213EC <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00021412 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
00021438 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00021470 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00021498 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
000214AC <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00021520 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00021566 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00021614 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00021680 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00021690 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000216B6 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
000216C0 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
000216EA <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
000216F0 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00021700 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
000217A6 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
000217E6 <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
000217EC <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
00021842 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
0002184C <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00021856 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00021870 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
00021892 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
000218B4 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0002190E <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00021930 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
0002198A <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
000219CC <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
000219D2 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
000219E0 <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
000219E6 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
000219FA <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
00021A04 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00021A7E <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00021A88 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00021A8E <CLIModeSupport.ab3@925> XINCLUDE "CLIModeSupport.ab3"
00021AA2 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00021AAC <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00021B2C <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00021B36 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00021B3C <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00021B50 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00021B5A <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00021BA2 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00021BAC <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00021BB2 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00021BC6 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00021BD0 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00021C18 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00021C22 <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00021C28 <CLIModeSupport.ab3@947> XINCLUDE "CLIModeSupport.ab3"
00021C3C <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
00021C62 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
00021C76 <CLIModeSupport.ab3@954> XINCLUDE "CLIModeSupport.ab3"
00021C9C <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
00021CB0 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00021CD6 <CLIModeSupport.ab3@959> XINCLUDE "CLIModeSupport.ab3"
00021CEA <CLIModeSupport.ab3@962> XINCLUDE "CLIModeSupport.ab3"
00021CF4 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
00021D22 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
00021D72 <CLIModeSupport.ab3@965> XINCLUDE "CLIModeSupport.ab3"
00021D92 <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00021DAA <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
00021E8E <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00021E98 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00021E9E <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00021EA0 <CLIModeSupport.ab3@972> XINCLUDE "CLIModeSupport.ab3"
00021EB4 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
00021EE6 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00021EEC <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00021F30 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00021F42 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00021F54 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00021F5E <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00021F64 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00021F6E <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
00021F88 <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00021F88 <AmiBlitz3.ab2@101> XINCLUDE "CLIModeSupport.ab3"
00021FFC <AmiBlitz3.ab2@106> dynassign.s = dos_GetToolString{"ASSIGN","Blitz3:"}
00022034 <AmiBlitz3.ab2@107> If dynassign <> ""
0002204A <AmiBlitz3.ab2@108>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
00022054 <AmiBlitz3.ab2@109>     If *AssignSema
00022064 <AmiBlitz3.ab2@110>       ObtainSemaphoreShared_ *AssignSema
0002206A <AmiBlitz3.ab2@111>     Else                                                        ; no, create one...
0002208A <AmiBlitz3.ab2@112>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
00022094 <AmiBlitz3.ab2@113>       If *AssignSema
000220A4 <AmiBlitz3.ab2@114>         InitSemaphore_ *AssignSema
000220D8 <AmiBlitz3.ab2@116>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
000220EA <AmiBlitz3.ab2@117>         If *AssignSema\ss_Link\ln_Name
00022126 <AmiBlitz3.ab2@118>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
00022132 <AmiBlitz3.ab2@120>         *AssignSema\ss_Link\ln_Pri  = 1
0002213E <AmiBlitz3.ab2@121>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0002214E <AmiBlitz3.ab2@123>         AddSemaphore_ *AssignSema
0002215E <AmiBlitz3.ab2@124>         ObtainSemaphoreShared_ *AssignSema
000221AA <AmiBlitz3.ab2@130>   mydir.s = dos_GetProgDir{"Sys:"}
0002220A <AmiBlitz3.ab2@131>   If dos_SetAssign{dynassign,mydir,False}
0002229E <AmiBlitz3.ab2@132>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
000222D6 <AmiBlitz3.ab2@135>   Poke$ ?str_blitz3assign,dynassign
00022358 <AmiBlitz3.ab2@136>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
000223DA <AmiBlitz3.ab2@139>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0002245C <AmiBlitz3.ab2@140>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
000224DE <AmiBlitz3.ab2@141>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
00022560 <AmiBlitz3.ab2@142>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
000225D4 <AmiBlitz3.ab2@143>   my_systemdir$    = dos_AddPart{dynassign, "System"}
00022648 <AmiBlitz3.ab2@144>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
000226BC <AmiBlitz3.ab2@145>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
000226EA <AmiBlitz3.ab2@146>   dos_CreateDir{my_blitzlibsdir$}
0002270E <AmiBlitz3.ab2@147>   dos_CreateDir{Peek$(?str_path_userlibs)}
0002273C <AmiBlitz3.ab2@148>   dos_CreateDir{my_residentsdir$}
0002276A <AmiBlitz3.ab2@149>   dos_CreateDir{my_systemdir$}
00022834 <AmiBlitz3.ab2@155> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0002286C <AmiBlitz3.ab2@156> Poke.s ?str_pedfile,pedfile$
000228AA <AmiBlitz3.ab2@158> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
000228BA <AmiBlitz3.ab2@159>   Poke.b ?start_without_libs,1
000228C0 <AmiBlitz3.ab2@160> Else
000228D0 <AmiBlitz3.ab2@161>   Poke.b ?start_without_libs,0
000228F6 <AmiBlitz3.ab2@164> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0002291E <AmiBlitz3.ab2@167> errorout.s = ""                                            ; for the error text
00022924 <AmiBlitz3.ab2@168> ende.b     =  False                                        ; abort indicater
0002295C <AmiBlitz3.ab2@170> If dos_CheckLib{"wizard.library",42} = False               ; needed for Compiler, PED and REDDebugger
000229A2 <AmiBlitz3.ab2@171>   errorout + "Missing wizard.library:\\nThis library is required in version 42 by this IDE.\\n\\n"
000229A8 <AmiBlitz3.ab2@172>   ende = True
000229E0 <AmiBlitz3.ab2@175> If dos_CheckLib{"reqtools.library",38} = False             ; needed for PED and REDDebugger
00022A26 <AmiBlitz3.ab2@176>   errorout + "Missing reqtools.library:\\nThis library is required in version 38 by the IDE.\\n\\n"
00022A2C <AmiBlitz3.ab2@177>   ende = True
00022A64 <AmiBlitz3.ab2@180> If dos_CheckLib{"ted.library",1} = False                   ; needed for PED and REDDebugger
00022AAA <AmiBlitz3.ab2@181>   errorout + "Missing ted.library:\\nThis library is required in version 1 by the IDE.\\n\\n"
00022AB0 <AmiBlitz3.ab2@182>   ende = True
00022AE8 <AmiBlitz3.ab2@185> If dos_CheckLib{"disassembler.library",40} = False         ; only needed for REDDebugger
00022B2E <AmiBlitz3.ab2@186> 
00022B66 <AmiBlitz3.ab2@189> If errorout <> ""                                          ; check if something to show
00022BAC <AmiBlitz3.ab2@190>    errorout = "Please reinstall AmiBlitz3 or install the librarys in LIBS:\\n\\n"+errorout
00022BBA <AmiBlitz3.ab2@191>    If ende
00022C00 <AmiBlitz3.ab2@192>      errorout + "...that the IDE can Start!"               ; for abort
00022C06 <AmiBlitz3.ab2@193>    Else
00022C4C <AmiBlitz3.ab2@194>      errorout + "...for a full working IDE!"               ; for limited start
00022CAE <AmiBlitz3.ab2@196>    error{!TRANS{errorout}}
00022CBA <AmiBlitz3.ab2@199> dbg_fid.l = -1 ; no debug file id yet!
00022CCE <AmiBlitz3.ab2@203> If ende Then Goto abnormal_exit                            ; remove Assigns
00022CD8 <AmiBlitz3.ab2@206> If CLIMode
00022CDE <AmiBlitz3.ab2@209>   err.l      = False                                       ; indicate that an error has occured
00022CE4 <AmiBlitz3.ab2@210>   showhelp.l = False                                       ; show the CLI tool's help
00022D30 <AmiBlitz3.ab2@213>   cli_progpath.s     = dos_GetProgDir{"Blitz3:"}
00022D58 <AmiBlitz3.ab2@214>   cli_sourcefile.s   = ""
00022D80 <AmiBlitz3.ab2@215>   cli_exefile.s      = ""
00022DA8 <AmiBlitz3.ab2@216>   cli_savefile.s     = ""
00022DD0 <AmiBlitz3.ab2@217>   cli_dumpfile.s     = ""
00022DF8 <AmiBlitz3.ab2@218>   cli_includepath.s  = ""
00022E20 <AmiBlitz3.ab2@219>   cli_blitzlibpath.s = ""
00022E26 <AmiBlitz3.ab2@220>   cli_debuginfo.l    = False
00022E2C <AmiBlitz3.ab2@221>   cli_run.l          = False
00022E34 <AmiBlitz3.ab2@222>   cli_dumpflags.l    = $FFFFFFFF
00022E5C <AmiBlitz3.ab2@223>   cli_info.s         = ""
00022E62 <AmiBlitz3.ab2@224>   cli_release.l      = False
00022E6C <AmiBlitz3.ab2@225>   cli_numargs.l      = dos_GetNumArgs{}
00022E72 <AmiBlitz3.ab2@226>   cli_gui.l          = False
00022E7A <AmiBlitz3.ab2@227>   cli_dumpform.l     = 1 ; 0 = bin, 1 = ASCII
00022E82 <AmiBlitz3.ab2@228>   cli_verbose.l      = 1
00022E9A <AmiBlitz3.ab2@229>   If cli_numargs=0 Then showhelp=True
00022ECA <AmiBlitz3.ab2@233>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
00022F16 <AmiBlitz3.ab2@234>     larg.s = LCase$(arg)                                   ; lower case the option string
00022FDE <AmiBlitz3.ab2@235>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
00023014 <AmiBlitz3.ab2@236>     Select larg
00023060 <AmiBlitz3.ab2@237>       Case "s" : larg="source"
000230B2 <AmiBlitz3.ab2@238>       Case "e" : larg="exe"
00023104 <AmiBlitz3.ab2@239>       Case "d" : larg="debug"
00023156 <AmiBlitz3.ab2@240>       Case "r" : larg="release"
000231A8 <AmiBlitz3.ab2@241>       Case "h" : larg="help"
000231FA <AmiBlitz3.ab2@242>       Case "v" : larg="verbose"
00023208 <AmiBlitz3.ab2@243>     End Select
0002323E <AmiBlitz3.ab2@245>     Select larg
00023292 <AmiBlitz3.ab2@246>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
000232EC <AmiBlitz3.ab2@247>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
00023346 <AmiBlitz3.ab2@248>       Case "save"     : cli_savefile    = dos_GetNextArg{}
00023376 <AmiBlitz3.ab2@249>       Case "debug"    : cli_debuginfo   = True
000233A6 <AmiBlitz3.ab2@250>       Case "run"      : cli_run         = True
000233D6 <AmiBlitz3.ab2@251>       Case "release"  : cli_release     = True
00023406 <AmiBlitz3.ab2@252>       Case "ped"      : cli_gui         = True
00023460 <AmiBlitz3.ab2@253>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
000234D2 <AmiBlitz3.ab2@254>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
00023502 <AmiBlitz3.ab2@255>                         cli_dumpfile    = dos_GetNextArg{}
0002350A <AmiBlitz3.ab2@256>                         cli_dumpflags   = $0
0002356A <AmiBlitz3.ab2@257>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
000235CA <AmiBlitz3.ab2@258>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0002362A <AmiBlitz3.ab2@259>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0002368A <AmiBlitz3.ab2@260>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
000236EA <AmiBlitz3.ab2@261>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0002374A <AmiBlitz3.ab2@262>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
000237AA <AmiBlitz3.ab2@263>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0002380A <AmiBlitz3.ab2@264>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0002386A <AmiBlitz3.ab2@265>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0002387C <AmiBlitz3.ab2@266>                         If cli_dumpflags = $0
00023882 <AmiBlitz3.ab2@267>                          err=True
00023916 <AmiBlitz3.ab2@268>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
00023970 <AmiBlitz3.ab2@270>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
000239A0 <AmiBlitz3.ab2@271>       Case "h"        : showhelp        = True             ; show the help and quit
000239A6 <AmiBlitz3.ab2@272>       Default
000239DE <AmiBlitz3.ab2@273>         If arg><""
00023A72 <AmiBlitz3.ab2@274>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
00023A78 <AmiBlitz3.ab2@275>           err = True
00023A86 <AmiBlitz3.ab2@277>     End Select
00023AD2 <AmiBlitz3.ab2@278>   Until arg = "" OR err=True          ; until we processed all arguments
00023AF4 <AmiBlitz3.ab2@281>   If err><False OR showhelp = True
00023AFE <AmiBlitz3.ab2@282>     If showhelp
00023B60 <AmiBlitz3.ab2@283>     NPrint "AmiBlitz ",Peek.s(?myversion)
00023B98 <AmiBlitz3.ab2@284>     NPrint "\\nSyntax: AmiBlitz3 [options]"
00023BD0 <AmiBlitz3.ab2@285>     NPrint "\\nOptions:"
00023C08 <AmiBlitz3.ab2@286>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
00023C40 <AmiBlitz3.ab2@287>     NPrint "  -(e)xe <file>       : output executable filename"
00023C78 <AmiBlitz3.ab2@288>     NPrint "  -(d)ebug            : compile with debug info"
00023CB0 <AmiBlitz3.ab2@289>     NPrint "  -(r)elease          : create release executable (size optimized)"
00023CE8 <AmiBlitz3.ab2@290>     NPrint "  -run                : run compiled program"
00023D20 <AmiBlitz3.ab2@291>     NPrint "  -dump <info> <file> : dump compiler internals to file"
00023D58 <AmiBlitz3.ab2@292>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
00023D90 <AmiBlitz3.ab2@293>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
00023DC8 <AmiBlitz3.ab2@294>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
00023E00 <AmiBlitz3.ab2@295>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
00023E38 <AmiBlitz3.ab2@296>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
00023E70 <AmiBlitz3.ab2@297>     NPrint "  -(h)elp             : show this help"
00023EA8 <AmiBlitz3.ab2@298>     NPrint "\\nExample:"
00023EE0 <AmiBlitz3.ab2@299>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
00023F18 <AmiBlitz3.ab2@300>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
00023F1E <AmiBlitz3.ab2@303>     Goto abnormal_exit
00023F3A <AmiBlitz3.ab2@306>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
00023F9E <AmiBlitz3.ab2@307>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
00023FAE <AmiBlitz3.ab2@310> Poke.l ?CLIMode,CLIMode
00023FD2 <AmiBlitz3.ab2@335>   Dim incdim.s (#maxincludes)
00023FF6 <AmiBlitz3.ab2@336>   Dim incline.l(#maxincludes)
00024020 <AmiBlitz3.ab2@612> Statement activategadget{ag$}                              ;ag$ = gadget
00024074 <AmiBlitz3.ab2@613>   ActivateGadget_ WZGadAddr (ag$),WZWindowAddr,0
0002408C <AmiBlitz3.ab2@614> End Statement
000240A6 <AmiBlitz3.ab2@616> Function.s Get_Libinfo{addr_libnum.l}
000240B2 <AmiBlitz3.ab2@618>   lib_ab2.b = False : lib_os.b = False
000240B8 <AmiBlitz3.ab2@619>   addr_counter.l = addr_libnum
000240C0 <AmiBlitz3.ab2@620>   skip.l = 0
000240D2 <AmiBlitz3.ab2@621>   If addr_counter=0
00024100 <AmiBlitz3.ab2@622>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0002411E <AmiBlitz3.ab2@623>     Function Return ""
0002412C <AmiBlitz3.ab2@628>     mem.l = Peek.l(addr_counter)
0002413A <AmiBlitz3.ab2@633>     addr_counter + 2
0002415A <AmiBlitz3.ab2@634>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
00024174 <AmiBlitz3.ab2@635>     If (mem LSR 16) = $ffe2
0002417A <AmiBlitz3.ab2@637>       lib_os = True
00024182 <AmiBlitz3.ab2@638>       skip = 10
000241C8 <AmiBlitz3.ab2@639>       If Peek$(addr_counter+skip) = "" Then skip + 4
0002420C <AmiBlitz3.ab2@641>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
00024222 <AmiBlitz3.ab2@643>   If (addr_counter>addr_libnum + $400)
00024240 <AmiBlitz3.ab2@645>     Function Return ""
00024246 <AmiBlitz3.ab2@646>   Else
0002426A <AmiBlitz3.ab2@647>     Function Return Peek$(addr_counter + skip)
00024274 <AmiBlitz3.ab2@649> End Function
00024292 <AmiBlitz3.ab2@689>   !asm
00024298 <AmiBlitz3.ab2@690>   MOVEA.l _execbase,A6
0002429C <AmiBlitz3.ab2@691>   MOVEM.l d0/a0,-(a7)
0002429E <AmiBlitz3.ab2@693>   MOVEQ #127,d0
000242A4 <AmiBlitz3.ab2@694>   LEA chartab,a0
000242AA <AmiBlitz3.ab2@697>     MOVE.b #1,128(a0)
000242AC <AmiBlitz3.ab2@698>     CLR.b (a0)+
000242B0 <AmiBlitz3.ab2@699>   DBF d0,'l12
000242B6 <AmiBlitz3.ab2@701>   LEA chartab,a0
000242BA <AmiBlitz3.ab2@702>   MOVE.b #1,(a0)
000242C0 <AmiBlitz3.ab2@703>   MOVE.b #1,","(a0)
000242C6 <AmiBlitz3.ab2@704>   MOVE.b #1,";"(a0)
000242CC <AmiBlitz3.ab2@705>   MOVE.b #1,":"(a0)
000242D2 <AmiBlitz3.ab2@706>   MOVE.b #1,"("(a0)
000242D8 <AmiBlitz3.ab2@707>   MOVE.b #1,")"(a0)
000242DE <AmiBlitz3.ab2@708>   MOVE.b #1,"="(a0)
000242E4 <AmiBlitz3.ab2@709>   MOVE.b #1,"+"(a0)
000242EA <AmiBlitz3.ab2@710>   MOVE.b #1,"-"(a0)
000242F0 <AmiBlitz3.ab2@711>   MOVE.b #1,"*"(a0)
000242F6 <AmiBlitz3.ab2@712>   MOVE.b #1,"/"(a0)
000242FC <AmiBlitz3.ab2@713>   MOVE.b #1,"$"(a0)
00024302 <AmiBlitz3.ab2@714>   MOVE.b #1,"%"(a0)
00024308 <AmiBlitz3.ab2@715>   MOVE.b #1,"."(a0)
0002430E <AmiBlitz3.ab2@716>   MOVE.b #1,"["(a0)
00024314 <AmiBlitz3.ab2@717>   MOVE.b #1,"]"(a0)
0002431A <AmiBlitz3.ab2@718>   MOVE.b #1,"{"(a0)
00024320 <AmiBlitz3.ab2@719>   MOVE.b #1,"}"(a0)
00024326 <AmiBlitz3.ab2@720>   MOVE.b #1,"\"(a0)
0002432C <AmiBlitz3.ab2@721>   MOVE.b #1,">"(a0)
00024332 <AmiBlitz3.ab2@722>   MOVE.b #1,"<"(a0)
00024338 <AmiBlitz3.ab2@723>   MOVE.b #1,"&"(a0)
0002433E <AmiBlitz3.ab2@724>   MOVE.b #1,"|"(a0)
00024344 <AmiBlitz3.ab2@725>   MOVE.b #1,"^"(a0)
0002434A <AmiBlitz3.ab2@726>   MOVE.b #1,$7e(a0)
00024350 <AmiBlitz3.ab2@727>   MOVE.w #$0101,1(a0)
00024356 <AmiBlitz3.ab2@729>   LEA instrtab,a0
0002435C <AmiBlitz3.ab2@730>   MOVE.l #labelhash-instrtab,d0
0002435E <AmiBlitz3.ab2@731>   ASR.l #2,d0
00024360 <AmiBlitz3.ab2@732>   SUBQ.l #1,d0
00024362 <AmiBlitz3.ab2@735>    CLR.l (a0)+
00024364 <AmiBlitz3.ab2@736>    SUBQ.l #1,d0
00024368 <AmiBlitz3.ab2@737>   BNE 'l10
0002436E <AmiBlitz3.ab2@739>   LEA allowtab,a0
00024374 <AmiBlitz3.ab2@740>   MOVE.l #255,d0
00024376 <AmiBlitz3.ab2@743>     CLR.b (a0)+
0002437A <AmiBlitz3.ab2@744>   DBF d0,'la1
00024380 <AmiBlitz3.ab2@746>   LEA allowtab,a0
00024386 <AmiBlitz3.ab2@747>   MOVE.b #1,$7d(a0)
0002438C <AmiBlitz3.ab2@748>   MOVE.b #1,$7c(a0)
00024392 <AmiBlitz3.ab2@749>   MOVE.b #1,$44(a0)
00024398 <AmiBlitz3.ab2@750>   MOVE.b #1,$45(a0)
0002439E <AmiBlitz3.ab2@751>   MOVE.b #1,$b9(a0)
000243A4 <AmiBlitz3.ab2@752>   MOVE.b #1,$89(a0)
000243AA <AmiBlitz3.ab2@753>   MOVE.b #1,$ce(a0)
000243B0 <AmiBlitz3.ab2@754>   MOVE.b #1,$cf(a0)
000243B6 <AmiBlitz3.ab2@755>   MOVE.b #1,$d0(a0)
000243BC <AmiBlitz3.ab2@756>   MOVE.b #1,$cd(a0)
000243BE <AmiBlitz3.ab2@757>   MOVEQ #0,d0
000243C4 <AmiBlitz3.ab2@759>   MOVEA.l _execbase,a6
000243CA <AmiBlitz3.ab2@764>   MOVE.l #$10000,d0
000243D0 <AmiBlitz3.ab2@765>   MOVE.l #80000,d1
000243D2 <AmiBlitz3.ab2@766>   MOVE.l d1,d2
000243D6 <AmiBlitz3.ab2@767>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
000243DC <AmiBlitz3.ab2@768>   MOVE.l d0,mempool
000243E0 <AmiBlitz3.ab2@769>   MOVEM.l (a7)+,d0/a0
000243E6 <AmiBlitz3.ab2@770>   TST.l mempool
000243EA <AmiBlitz3.ab2@771>   BEQ shutdown_compiler
000243EE <AmiBlitz3.ab2@773>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
000243F4 <AmiBlitz3.ab2@774>   MOVE.l A4,ptr_ThisTask
000243F8 <AmiBlitz3.ab2@776>   BSR.w open_doslibrary
000243FC <AmiBlitz3.ab2@777>   BEQ.w shutdown_compiler
00024402 <AmiBlitz3.ab2@779>   MOVE.l D2,stacksize
00024404 <AmiBlitz3.ab2@783>   MOVEQ.l #$00,D0
0002440A <AmiBlitz3.ab2@784>   LEA tokens,A0
0002440C <AmiBlitz3.ab2@787>     ADDQ.w #1,D0
0002440E <AmiBlitz3.ab2@788>     MOVE.l (A0),D1
00024412 <AmiBlitz3.ab2@789>     BEQ.w JL_0_2D1C
00024414 <AmiBlitz3.ab2@790>     MOVEA.l D1,A0
00024418 <AmiBlitz3.ab2@791> BRA.w JL_0_2D0E
0002441E <AmiBlitz3.ab2@794>   MOVE.l A0,end_of_tokenlist
00024422 <AmiBlitz3.ab2@796>   BSR.w makeasmtable
0002442A <AmiBlitz3.ab2@797>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0002442E <AmiBlitz3.ab2@799>   BSR.w open_mathlibrary
00024432 <AmiBlitz3.ab2@800>   BEQ.w freemem_and_quit4
00024438 <AmiBlitz3.ab2@802>   MOVE.l constmaxpc,D0
0002443A <AmiBlitz3.ab2@803>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
00024440 <AmiBlitz3.ab2@804>   MOVEA.l _execbase,A6
00024444 <AmiBlitz3.ab2@805>   JSR _AllocMem(A6)                                        ;mem for branch routine
0002444A <AmiBlitz3.ab2@806>   MOVE.l D0,constpcat
0002444E <AmiBlitz3.ab2@807>   BEQ.w freemem_and_quit3
00024454 <AmiBlitz3.ab2@808>   ADD.l constmaxpc,D0
0002445A <AmiBlitz3.ab2@809>   MOVE.l D0,constlibat
00024460 <AmiBlitz3.ab2@811>   MOVE.l macrobuffer_size,D0
00024466 <AmiBlitz3.ab2@812>   CMP.l #40000,d0
0002446A <AmiBlitz3.ab2@813>   BGE 'ok
00024470 <AmiBlitz3.ab2@814>     MOVE.l #40000,d0
00024476 <AmiBlitz3.ab2@815>     MOVE.l d0,macrobuffer_size
00024478 <AmiBlitz3.ab2@818>   ADDQ.l #4,d0
0002447A <AmiBlitz3.ab2@819>   MOVEQ.l #$01,D1
00024480 <AmiBlitz3.ab2@820>   MOVEA.l _execbase,A6
00024484 <AmiBlitz3.ab2@821>   JSR _AllocMem(A6)                                        ;macro mem
00024486 <AmiBlitz3.ab2@822>   MOVE.l d0,a0
0002448C <AmiBlitz3.ab2@823>   MOVE.l macrobuffer_size,(a0)+
0002448E <AmiBlitz3.ab2@824>   MOVE.l a0,d0
00024494 <AmiBlitz3.ab2@825>   MOVE.l D0,ptr_macrobuffer_begin
00024498 <AmiBlitz3.ab2@826>   BEQ.w freemem_and_quit2
0002449E <AmiBlitz3.ab2@827>   ADD.l macrobuffer_size,D0
000244A4 <AmiBlitz3.ab2@828>   MOVE.l D0,ptr_macrobuffer_end
000244AA <AmiBlitz3.ab2@830>   TST.l CLIMode
000244AE <AmiBlitz3.ab2@831>   BEQ load_ped
000244D8 <AmiBlitz3.ab2@834>   !basic
000244E2 <AmiBlitz3.ab2@835>   succ.l = InitEmulatedPED{}
000244E6 <AmiBlitz3.ab2@836>   GetD0 succ
00024504 <AmiBlitz3.ab2@837>   !asm
00024506 <AmiBlitz3.ab2@838>   TST.l d0
0002450A <AmiBlitz3.ab2@839>   BEQ freemem_and_quit
00024510 <AmiBlitz3.ab2@840> JMP skip_ped
00024516 <AmiBlitz3.ab2@845>   MOVE.l #str_pedfile,D1                                   ; Load PED
0002451C <AmiBlitz3.ab2@846>   MOVEA.l _dosbase,A6
00024520 <AmiBlitz3.ab2@847>   JSR _LoadSeg(A6)
00024526 <AmiBlitz3.ab2@848>   MOVE.l D0,ptr_seg_ped
0002452A <AmiBlitz3.ab2@849>   BEQ.w freemem_and_quit
0002452C <AmiBlitz3.ab2@853>   MOVEA.l D0,A2
0002452E <AmiBlitz3.ab2@854>   ADDA.l A2,A2
00024530 <AmiBlitz3.ab2@855>   ADDA.l A2,A2
00024536 <AmiBlitz3.ab2@857>   LEA teddata,a1                                           ;lea edstruct,A1
0002453C <AmiBlitz3.ab2@858>   MOVE.l #"TEDY",d1
00024540 <AmiBlitz3.ab2@859>   JSR 4(A2)                                                ; Run PED
00024546 <AmiBlitz3.ab2@861>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0002454C <AmiBlitz3.ab2@862>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0002458A <AmiBlitz3.ab2@864>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0002458E <AmiBlitz3.ab2@865>   BEQ.w unload_ped
000245CC <AmiBlitz3.ab2@869>   !ComData_GetL{comData_Magic,D0}
000245D2 <AmiBlitz3.ab2@870>   CMP.l #$7E3A3A7E,D0                                      ;"~::~",D0
000245D6 <AmiBlitz3.ab2@871>   BNE unload_ped
0002460E <AmiBlitz3.ab2@874>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
00024646 <AmiBlitz3.ab2@875>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0002467E <AmiBlitz3.ab2@876>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
000246B6 <AmiBlitz3.ab2@877>   !ComData_SetL{comPtr_VarBase           ,#varbase }
000246EE <AmiBlitz3.ab2@878>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
00024726 <AmiBlitz3.ab2@879>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0002475E <AmiBlitz3.ab2@880>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
00024796 <AmiBlitz3.ab2@881>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
000247CE <AmiBlitz3.ab2@882>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
00024806 <AmiBlitz3.ab2@883>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0002483E <AmiBlitz3.ab2@884>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
00024876 <AmiBlitz3.ab2@885>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0002487C <AmiBlitz3.ab2@887>   CLR.w returncode_org
000248A6 <AmiBlitz3.ab2@889>   !basic
000248B0 <AmiBlitz3.ab2@890>   If CLIMode
00024922 <AmiBlitz3.ab2@891>     If cli_verbose>=2 Then NPrint !TRANS{"Loading BlitzLibs."}
00024940 <AmiBlitz3.ab2@893>   !asm
00024946 <AmiBlitz3.ab2@897>   TST.b start_without_libs
0002494A <AmiBlitz3.ab2@898>   BNE skip_loading_libs
0002494E <AmiBlitz3.ab2@899>     BSR.w call_setpointerbusy
00024958 <AmiBlitz3.ab2@900>     MOVE.l #$FFFFffff,linenumat
0002495C <AmiBlitz3.ab2@901>     BSR.w get_libraries
00024962 <AmiBlitz3.ab2@902>     JSR init_libraries
00024966 <AmiBlitz3.ab2@903>     BSR.w init_buffers
0002496A <AmiBlitz3.ab2@904>     BSR.w call_setpointernormal
0002496C <AmiBlitz3.ab2@909>   MOVEQ.l #-$01,D0
00024972 <AmiBlitz3.ab2@910>   MOVEA.l _execbase,A6
00024976 <AmiBlitz3.ab2@911>   JSR _AllocSignal(A6)
0002497C <AmiBlitz3.ab2@912>   MOVE.l D0,signalNum
0002497E <AmiBlitz3.ab2@913>   MOVEQ.l #$00,D1
00024980 <AmiBlitz3.ab2@914>   BSET D0,D1
00024986 <AmiBlitz3.ab2@915>   MOVE.l D1,signals
0002498C <AmiBlitz3.ab2@919>   MOVE.l #str_defaultdbug,D1
00024990 <AmiBlitz3.ab2@920>   MOVEA.l _dosbase(PC),A6
00024994 <AmiBlitz3.ab2@921>   JSR _LoadSeg(A6)
0002499A <AmiBlitz3.ab2@922>   MOVE.l D0,ptr_seg_debugger
0002499C <AmiBlitz3.ab2@923>   TST.l d0
000249A0 <AmiBlitz3.ab2@924>   BNE ok_12
000249CA <AmiBlitz3.ab2@925>     !basic
00024A20 <AmiBlitz3.ab2@926>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
00024A3E <AmiBlitz3.ab2@927>     !asm
00024A44 <AmiBlitz3.ab2@930>   TST.l CLIMode
00024A48 <AmiBlitz3.ab2@931>   BEQ run_ped
00024A72 <AmiBlitz3.ab2@937>   !basic
00024A78 <AmiBlitz3.ab2@938>   err.l = False
00024AA4 <AmiBlitz3.ab2@946>   If cli_sourcefile
00024AC4 <AmiBlitz3.ab2@947>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
00024ACE <AmiBlitz3.ab2@948>     If lock
00024AF2 <AmiBlitz3.ab2@949>       NameFromLock_ lock,&cli_tempstr,1024
00024B1C <AmiBlitz3.ab2@950>       cli_sourcefile.s = Peek.s(&cli_tempstr)
00024B2C <AmiBlitz3.ab2@951>       UnLock_ lock
00024B58 <AmiBlitz3.ab2@954>     If cli_exefile
00024BAA <AmiBlitz3.ab2@955>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
00024C02 <AmiBlitz3.ab2@956>       path.s = dos_PathPart{cli_exefile}
00024C22 <AmiBlitz3.ab2@957>       lock.l = Lock_(&path,#ACCESS_READ)
00024C2C <AmiBlitz3.ab2@958>       If lock
00024C50 <AmiBlitz3.ab2@959>         NameFromLock_ lock,&cli_tempstr,1024
00024C7A <AmiBlitz3.ab2@960>         path.s = Peek.s(&cli_tempstr)
00024D28 <AmiBlitz3.ab2@961>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
00024D38 <AmiBlitz3.ab2@962>         UnLock_ lock
00024D82 <AmiBlitz3.ab2@973>   If cli_verbose>=2 Then NPrint "Initializing token hashmap."
00024DAA <AmiBlitz3.ab2@974>   TokenHashMapFile.s = "Blitz3:System/TokenList.hashmap"
00024DB4 <AmiBlitz3.ab2@975>   *PreProcessor.preprocessor = preproc_Create{}
00024DC4 <AmiBlitz3.ab2@976>   Poke.l ?comPtr_PreProcessor,*PreProcessor
00024DF6 <AmiBlitz3.ab2@977>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
00024E0A <AmiBlitz3.ab2@978>   If *PreProcessor\tokens=#NULL
00024E84 <AmiBlitz3.ab2@979>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
00024E8E <AmiBlitz3.ab2@980>     preproc_QueryTokens{*PreProcessor}
00024EC0 <AmiBlitz3.ab2@981>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
00024F0C <AmiBlitz3.ab2@989>   If cli_sourcefile><"" AND err=False
00024FB2 <AmiBlitz3.ab2@990>     If cli_verbose>=2 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22."
00024FE4 <AmiBlitz3.ab2@991>     succ=LoadSource{cli_sourcefile}
00024FEE <AmiBlitz3.ab2@992>     If succ
00025026 <AmiBlitz3.ab2@993> 
000250A0 <AmiBlitz3.ab2@994>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
000250DA <AmiBlitz3.ab2@995>         comerr.l = CompileSource{cli_exefile,cli_debuginfo,cli_release}
000250E4 <AmiBlitz3.ab2@997>         If comerr
000250EA <AmiBlitz3.ab2@999>         Else
000250F0 <AmiBlitz3.ab2@1003>     Else
00025140 <AmiBlitz3.ab2@1004>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0002518C <AmiBlitz3.ab2@1008>   If cli_savefile><"" AND err=False
000251F4 <AmiBlitz3.ab2@1009>     If cli_verbose>=2 Then NPrint "Saving Sourcefiles as "+cli_savefile
00025222 <AmiBlitz3.ab2@1010>     SaveSource{cli_savefile}
0002526E <AmiBlitz3.ab2@1013>   If cli_dumpfile><"" AND err=False
000252B8 <AmiBlitz3.ab2@1014>     If cli_verbose>=2 Then NPrint "Saving dumpfile."
000252EE <AmiBlitz3.ab2@1015>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
000252F8 <AmiBlitz3.ab2@1018>   If cli_run
0002530C <AmiBlitz3.ab2@1019>     If comerr=False
00025338 <AmiBlitz3.ab2@1020>       If cli_exefile
000253B2 <AmiBlitz3.ab2@1021>         If cli_verbose>=1 Then NPrint "Compiling "+cli_sourcefile+"..."
000253E0 <AmiBlitz3.ab2@1022>         comerr.l = CompileSource{"",cli_debuginfo,cli_release} ; re-compile for launch!
0002542A <AmiBlitz3.ab2@1024>       If cli_verbose>=1 Then NPrint "Running program..."
00025430 <AmiBlitz3.ab2@1025>       RunSource{}
00025432 <AmiBlitz3.ab2@1027>         CLR.l d0
00025470 <AmiBlitz3.ab2@1028>         !ComData_GetB{comByte_RunningFlag,D0}
00025474 <AmiBlitz3.ab2@1029>         running.l = PutD0
00025490 <AmiBlitz3.ab2@1030>         If running Then Delay_ 50
000254A4 <AmiBlitz3.ab2@1032>       Until running=False
000254B8 <AmiBlitz3.ab2@1033>       If Peek.l(?_runerror)
00025508 <AmiBlitz3.ab2@1034>         If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0002551A <AmiBlitz3.ab2@1045>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
00025564 <AmiBlitz3.ab2@1046>   If cli_verbose>=2 Then NPrint "Exit AmiBlitz3."
0002556A <AmiBlitz3.ab2@1047>   DeinitEmulatedPED{}
00025588 <AmiBlitz3.ab2@1049>   !asm
0002558E <AmiBlitz3.ab2@1050> JMP terminate_ab3
000255B8 <AmiBlitz3.ab2@1055>   !basic
000255F6 <AmiBlitz3.ab2@1056>     *MyCatalog.l=OpenCatalogA_(0,"Compiler.catalog",0)
00025600 <AmiBlitz3.ab2@1058>     If *MyCatalog
00025640 <AmiBlitz3.ab2@1059>        WZTags #SFH_Catalog,*MyCatalog,#TAG_DONE,0,#TAG_END,0
00025656 <AmiBlitz3.ab2@1062>     WZLoadGUI ?wzgui
00025674 <AmiBlitz3.ab2@1063>   !asm
0002567A <AmiBlitz3.ab2@1066>   MOVEA.l ped_startup_addr,A1
00025680 <AmiBlitz3.ab2@1067>   LEA str_tempfilename,A0
00025682 <AmiBlitz3.ab2@1068>   JSR (A1)
000256AC <AmiBlitz3.ab2@1074>   !basic
000256C6 <AmiBlitz3.ab2@1075>     If *MyCatalog Then CloseCatalog_ *MyCatalog
000256E4 <AmiBlitz3.ab2@1076>   !asm
000256EA <AmiBlitz3.ab2@1079>   MOVE.l signalNum,D0
000256F0 <AmiBlitz3.ab2@1080>   MOVEA.l _execbase,A6
000256F4 <AmiBlitz3.ab2@1081>   JSR _FreeSignal(A6)
000256FA <AmiBlitz3.ab2@1083>   MOVE.l ptr_seg_debugger,D1
000256FE <AmiBlitz3.ab2@1084>   BEQ.b skip_unload_debugger
00025702 <AmiBlitz3.ab2@1085>     MOVEA.l _dosbase(PC),A6
00025706 <AmiBlitz3.ab2@1086>     JSR _UnLoadSeg(A6)
0002570A <AmiBlitz3.ab2@1089>   BSR.w Aclearallvars
0002570E <AmiBlitz3.ab2@1090>   BSR.w free_residents
00025712 <AmiBlitz3.ab2@1091>   BSR.w free_blitzlibs
00025718 <AmiBlitz3.ab2@1094>   MOVE.l ptr_seg_ped,D1
0002571C <AmiBlitz3.ab2@1095>   BEQ freemem_and_quit
00025720 <AmiBlitz3.ab2@1096>   MOVEA.l _dosbase(PC),A6
00025724 <AmiBlitz3.ab2@1097>   JSR _UnLoadSeg(A6)
00025728 <AmiBlitz3.ab2@1100>   BSR.w freeallox
0002572E <AmiBlitz3.ab2@1101>   MOVEA.l ptr_macrobuffer_begin,A1
00025730 <AmiBlitz3.ab2@1102>   MOVE.l -(a1),D0
00025732 <AmiBlitz3.ab2@1103>   ADDQ.l #4,d0
00025738 <AmiBlitz3.ab2@1104>   MOVEA.l _execbase,A6
0002573C <AmiBlitz3.ab2@1105>   JSR _FreeMem(A6)
00025742 <AmiBlitz3.ab2@1108>   MOVEA.l _dosbase,A1
00025748 <AmiBlitz3.ab2@1109>   MOVEA.l _execbase,A6
0002574C <AmiBlitz3.ab2@1110>   JSR _CloseLibrary(A6)
00025752 <AmiBlitz3.ab2@1112>   MOVEA.l constpcat,A1
00025758 <AmiBlitz3.ab2@1113>   MOVE.l constmaxpc,D0
0002575E <AmiBlitz3.ab2@1114>   MOVEA.l _execbase,A6
00025762 <AmiBlitz3.ab2@1115>   JSR _FreeMem(A6)
00025768 <AmiBlitz3.ab2@1118>   MOVEA.l _mathffpbase,A1
0002576E <AmiBlitz3.ab2@1119>   MOVEA.l _execbase,A6
00025772 <AmiBlitz3.ab2@1120>   JSR _CloseLibrary(A6)
00025778 <AmiBlitz3.ab2@1130>     MOVEA.l _execbase,A6
0002577E <AmiBlitz3.ab2@1131>     MOVE.l mempool,a0
00025782 <AmiBlitz3.ab2@1132>     JSR _DeletePool(a6)
00025788 <AmiBlitz3.ab2@1133>     CLR.l pushat
0002578E <AmiBlitz3.ab2@1140>   JSR free_unusedfunctions
00025790 <AmiBlitz3.ab2@1141>   MOVEQ #0,d0
0002579E <AmiBlitz3.ab2@1144>   !exitasm
000257D6 <AmiBlitz3.ab2@1145>   If dynassign<>""
000257E0 <AmiBlitz3.ab2@1146>     If *AssignSema
000257F0 <AmiBlitz3.ab2@1147>       ReleaseSemaphore_ *AssignSema
00025808 <AmiBlitz3.ab2@1148>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0002589C <AmiBlitz3.ab2@1149>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
000258D6 <AmiBlitz3.ab2@1150>         dos_RemAssign{dynassign}
000258E6 <AmiBlitz3.ab2@1151>         RemSemaphore_ *AssignSema
000258F6 <AmiBlitz3.ab2@1152>         ReleaseSemaphore_ *AssignSema
0002592C <AmiBlitz3.ab2@1153>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0002593C <AmiBlitz3.ab2@1154>         FreeVec_ *AssignSema
00025944 <AmiBlitz3.ab2@1155>         *AssignSema = #NULL
00025972 <AmiBlitz3.ab2@1159>   SetCurrentDir{cli_path}
00025994 <AmiBlitz3.ab2@1160>   !coutclose
0002599A <AmiBlitz3.ab2@1161> End
000259A6 <AmiBlitz3.ab2@1166> str_doslibrary:     Dc.b "dos.library",0 : Even
000259AA <AmiBlitz3.ab2@1167> _dosbase:           Ds.l 1
000259B0 <AmiBlitz3.ab2@1171>   MOVEA.l _execbase,A6
000259B6 <AmiBlitz3.ab2@1172>   LEA str_doslibrary,A1
000259BA <AmiBlitz3.ab2@1173>   JSR _OldOpenLibrary(A6)
000259C0 <AmiBlitz3.ab2@1174>   MOVE.l D0,_dosbase
000259C2 <AmiBlitz3.ab2@1175> RTS
000259C8 <AmiBlitz3.ab2@1179>   MOVEA.l #str_mathffpname,A1
000259CE <AmiBlitz3.ab2@1180>   MOVEA.l _execbase,A6
000259D2 <AmiBlitz3.ab2@1181>   JSR _OldOpenLibrary(A6)
000259D8 <AmiBlitz3.ab2@1182>   MOVE.l D0,_mathffpbase
000259DA <AmiBlitz3.ab2@1183> RTS
00025A0C <AmiBlitz3.ab2@1189>   !ComData_JMP{comFunc_SetNormalPointer}
00025A3E <AmiBlitz3.ab2@1197>   !ComData_JMP{comFunc_SetBusyPointer}
00025A68 <AmiBlitz3.ab2@1202>   !basic
00025A6C <AmiBlitz3.ab2@1203>   ab3save_filenameP.l = PutD0
00025A76 <AmiBlitz3.ab2@1204>   If ab3save_filenameP
00025A9E <AmiBlitz3.ab2@1205>     ab3save_filename.s = Peek.s(ab3save_filenameP)
00025ACC <AmiBlitz3.ab2@1207>     SaveSource{ab3save_filename}
00025AD2 <AmiBlitz3.ab2@1208>   Else
00025B00 <AmiBlitz3.ab2@1209>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
00025B1E <AmiBlitz3.ab2@1211>   !asm
00025B20 <AmiBlitz3.ab2@1212>   RTS
00025B4A <AmiBlitz3.ab2@1215>   !basic
00025B4E <AmiBlitz3.ab2@1216>   ab3save_filenameP.l = PutD0
00025B58 <AmiBlitz3.ab2@1217>   If ab3save_filenameP
00025B80 <AmiBlitz3.ab2@1218>     ab3save_filename.s = Peek.s(ab3save_filenameP)
00025BAE <AmiBlitz3.ab2@1219>     LoadSource{ab3save_filename}
00025BB4 <AmiBlitz3.ab2@1220>   Else
00025BE2 <AmiBlitz3.ab2@1221>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
00025C00 <AmiBlitz3.ab2@1223>   !asm
00025C02 <AmiBlitz3.ab2@1224>   RTS
00025C2C <AmiBlitz3.ab2@1227>   !basic
00025C32 <AmiBlitz3.ab2@1228>   ClearSource{}
00025C50 <AmiBlitz3.ab2@1229>   !asm
00025C52 <AmiBlitz3.ab2@1230>   RTS
00025C7C <AmiBlitz3.ab2@1233>   !basic
00025C82 <AmiBlitz3.ab2@1234>   OpenConsoleFake{}
00025CA0 <AmiBlitz3.ab2@1235>   !asm
00025CA2 <AmiBlitz3.ab2@1236>   RTS
00025CCC <AmiBlitz3.ab2@1240>   !basic
00025CD2 <AmiBlitz3.ab2@1241>   CloseConsoleFake{}
00025CF0 <AmiBlitz3.ab2@1242>   !asm
00025CF2 <AmiBlitz3.ab2@1243>   RTS
00025CF8 <AmiBlitz3.ab2@1247>   MOVE.w d6,menuitemdebug
00025D22 <AmiBlitz3.ab2@1248>   !basic
00025D34 <AmiBlitz3.ab2@1249>   menuitemx.l = Peek.w(?menuitemdebug)
00025D5A <AmiBlitz3.ab2@1250>   If menuitemx>16 OR  menuitemx<0
00025DC2 <AmiBlitz3.ab2@1251>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
00025DCA <AmiBlitz3.ab2@1252>     menuitemx=0
00025DDA <AmiBlitz3.ab2@1254>   Poke.w ?menuitemdebug,menuitemx
00025DF8 <AmiBlitz3.ab2@1255>   !asm
00025DFE <AmiBlitz3.ab2@1256>   MOVE.w menuitemdebug,d6
00025E04 <AmiBlitz3.ab2@1259>   MOVE.l A5,firstitem_
00025E0A <AmiBlitz3.ab2@1260>   MOVE.w D7,numlines_org
00025E10 <AmiBlitz3.ab2@1261>   MOVE.l d7,numlines
00025E12 <AmiBlitz3.ab2@1262>   LSL.w #2,D6
00025E18 <AmiBlitz3.ab2@1263>   LEA menu_items,A0
00025E1C <AmiBlitz3.ab2@1264>   MOVEA.l $0(A0,D6.W),A0
00025E26 <AmiBlitz3.ab2@1265>   MOVE.l #$FFFFffff,linenumat
00025E30 <AmiBlitz3.ab2@1266>   MOVE.l #$FFFFffff,compilelinecounter
00025E32 <AmiBlitz3.ab2@1270>   JSR (A0)
00025E38 <AmiBlitz3.ab2@1271>   MOVE.l compilelinecounter,D0
00025E3A <AmiBlitz3.ab2@1272> RTS
00025E3E <AmiBlitz3.ab2@1274> menuitemdebug: Dc.l 0
00025E42 <AmiBlitz3.ab2@1276> mempool                Dc.l 0
00025E58 <AmiBlitz3.ab2@1277> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
00025E5E <AmiBlitz3.ab2@1278> dloaderr:             JSR handle_compileerror
00025E7A <AmiBlitz3.ab2@1279>                        Dc.b "Can't LoadSeg debug module!",0 : Even
00025EB8 <AmiBlitz3.ab2@1287>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00025EBE <AmiBlitz3.ab2@1288>   LEA str_loaddebugmessage,A2
00025EC4 <AmiBlitz3.ab2@1289>   LEA str_blitz3assign,A0
00025ECA <AmiBlitz3.ab2@1290>   LEA str_temp_debugmodulename,A1
00025ECC <AmiBlitz3.ab2@1293>   JSR (A3)
00025ED0 <AmiBlitz3.ab2@1295>   BEQ.w menu_loaddebugmodule_noload
00025ED6 <AmiBlitz3.ab2@1296>   MOVE.l D0,ptr_temp_debugmodule
00025EDA <AmiBlitz3.ab2@1297>   BSR.w call_setpointerbusy
00025EE0 <AmiBlitz3.ab2@1298>   MOVE.l A7,errstack
00025EEA <AmiBlitz3.ab2@1299>   MOVE.l #menu_loaddebugmodule_noload,errcont
00025EF0 <AmiBlitz3.ab2@1300>   MOVE.l ptr_temp_debugmodule,D1
00025EF4 <AmiBlitz3.ab2@1302>   MOVEA.l _dosbase(PC),A6
00025EF8 <AmiBlitz3.ab2@1303>   JSR _LoadSeg(A6)
00025EFA <AmiBlitz3.ab2@1304>   MOVE.l D0,D7
00025EFE <AmiBlitz3.ab2@1305>   BEQ.w dloaderr
00025F04 <AmiBlitz3.ab2@1306>   MOVE.l ptr_seg_debugger,D1
00025F08 <AmiBlitz3.ab2@1307>   BEQ.b menu_loaddebugmodule_ndseg
00025F0C <AmiBlitz3.ab2@1308>   MOVEA.l _dosbase(PC),A6
00025F10 <AmiBlitz3.ab2@1309>   JSR _UnLoadSeg(A6)
00025F14 <AmiBlitz3.ab2@1310>   BSR.w call_setpointernormal
00025F1A <AmiBlitz3.ab2@1313>   MOVE.l D7,ptr_seg_debugger
00025F1C <AmiBlitz3.ab2@1316> RTS
00025F3A <AmiBlitz3.ab2@1319> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
00025FFA <AmiBlitz3.ab2@1320> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
000260BA <AmiBlitz3.ab2@1321> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
000260BE <AmiBlitz3.ab2@1322> ptr_newexefilename:    Dc.l 0                                                               ;execname org
000260E8 <AmiBlitz3.ab2@1326>   !basic
00026112 <AmiBlitz3.ab2@1327>   exepath.s = Peek.s(?exepath)
0002613C <AmiBlitz3.ab2@1328>   exefile.s = Peek.s(?exefilename)
000261BC <AmiBlitz3.ab2@1329>   exefile.s = dos_AddPart{exepath,exefile}
000261F4 <AmiBlitz3.ab2@1330>   Poke.s ?tempspace,exefile
00026212 <AmiBlitz3.ab2@1331>   !asm
00026218 <AmiBlitz3.ab2@1352>   LEA tempspace,a0
0002621A <AmiBlitz3.ab2@1353>   MOVE.l a0,d0
0002621E <AmiBlitz3.ab2@1354> BRA newcreate2
00026248 <AmiBlitz3.ab2@1360>   !basic
00026272 <AmiBlitz3.ab2@1361>   request_exename.s = Peek.s(?str_request_exename )
000262CE <AmiBlitz3.ab2@1362>   request_exename   = !TRANS{request_exename}
000262D4 <AmiBlitz3.ab2@1363>   GetD0 &request_exename
000262F2 <AmiBlitz3.ab2@1364>   !asm
000262F4 <AmiBlitz3.ab2@1365>   MOVE.l D0,A2
00026332 <AmiBlitz3.ab2@1368>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00026338 <AmiBlitz3.ab2@1370>   LEA exepath,A0
0002633E <AmiBlitz3.ab2@1371>   LEA exefilename,A1
00026340 <AmiBlitz3.ab2@1374>   JSR (A3)                                                 ;open ped filerequest
00026344 <AmiBlitz3.ab2@1375>   BEQ.w cancel_createexe
0002634E <AmiBlitz3.ab2@1378>   ADD.l #1,number_of_builds
00026354 <AmiBlitz3.ab2@1381>   MOVE.l D0,ptr_newexefilename
0002635C <AmiBlitz3.ab2@1382>   MOVE.w #-1,debugversion
00026362 <AmiBlitz3.ab2@1383>   MOVE.w set_make_smallestcode,-(A7)
0002636A <AmiBlitz3.ab2@1387>     MOVE.w #1,makeexec
00026370 <AmiBlitz3.ab2@1388>     JSR ab3_OpenDebugFile
00026374 <AmiBlitz3.ab2@1389>     BSR.w startcompile
0002637A <AmiBlitz3.ab2@1390>     JSR ab3_CloseDebugFile
00026384 <AmiBlitz3.ab2@1391>     CMP.l #"NORE",reqmode
00026388 <AmiBlitz3.ab2@1392>   BEQ 'l1
0002638E <AmiBlitz3.ab2@1394>   TST.w anyerrs
00026392 <AmiBlitz3.ab2@1395>   BNE.b menu_createexecutable__skip
00026396 <AmiBlitz3.ab2@1396>   BSR.w savefile
0002639C <AmiBlitz3.ab2@1399>   MOVE.w (A7)+,set_make_smallestcode
0002639E <AmiBlitz3.ab2@1402> RTS
000263A6 <AmiBlitz3.ab2@1406>   MOVE.w #-1,flag_noPED
000263A8 <AmiBlitz3.ab2@1407> RTS
000263B0 <AmiBlitz3.ab2@1411>   MOVE.w #-1,flag_noCLI
000263B2 <AmiBlitz3.ab2@1412> RTS
000263DC <AmiBlitz3.ab2@1415>   !basic
00026404 <AmiBlitz3.ab2@1416>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
00026414 <AmiBlitz3.ab2@1417>     Poke.w ?word_WriteDebugFileNow,0
00026432 <AmiBlitz3.ab2@1418>   !asm
00026434 <AmiBlitz3.ab2@1419> RTS
0002645E <AmiBlitz3.ab2@1422>   !basic
0002646E <AmiBlitz3.ab2@1423>   Poke.w ?word_WriteDebugFileNow,0
00026480 <AmiBlitz3.ab2@1424>   If dbg_fid>=0
00026496 <AmiBlitz3.ab2@1425>     file_Close{dbg_fid} : dbg_fid = -1
000264A8 <AmiBlitz3.ab2@1427>   If dbg_fid.l<0
000264AA <AmiBlitz3.ab2@1428>     CLR.l d0
000264E8 <AmiBlitz3.ab2@1429>     !ComData_GetW{comWord_CreateDebugFile,D0}
000264EC <AmiBlitz3.ab2@1430>     dbg_Create.l = PutD0
000264F6 <AmiBlitz3.ab2@1431>     If (dbg_Create) ; only when set!
00026506 <AmiBlitz3.ab2@1432>       exefileP.l = Peek.l (?ptr_newexefilename)
0002652E <AmiBlitz3.ab2@1433>       exefile.s = ""
00026560 <AmiBlitz3.ab2@1434>       If exefileP Then exefile.s = Peek.s(exefileP)
00026598 <AmiBlitz3.ab2@1435>       If exefile><""
000265EE <AmiBlitz3.ab2@1436>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
00026600 <AmiBlitz3.ab2@1437>         If dbg_fid>=0
00026612 <AmiBlitz3.ab2@1438>           Poke.w ?word_WriteDebugFileNow,-1
0002661E <AmiBlitz3.ab2@1441>       oldhunkoffset.l = -1
00026646 <AmiBlitz3.ab2@1442>       oldfile.s       = ""
00026664 <AmiBlitz3.ab2@1445>   !asm
00026666 <AmiBlitz3.ab2@1446> RTS
0002666C <AmiBlitz3.ab2@1449> TST.w word_WriteDebugFileNow
00026670 <AmiBlitz3.ab2@1450> BEQ 'skipdebugfile
0002669A <AmiBlitz3.ab2@1451> !basic
000266AC <AmiBlitz3.ab2@1452>   If dbg_fid>=0
000266BE <AmiBlitz3.ab2@1453>     pass.l          = Peek.w(?pass)
000266D0 <AmiBlitz3.ab2@1454>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
000266F4 <AmiBlitz3.ab2@1455> 
000266FA <AmiBlitz3.ab2@1456>       oldhunkoffset.l = hunkoffset.l
0002672E <AmiBlitz3.ab2@1457>       oldfile.s       = codefile.s
0002674A <AmiBlitz3.ab2@1458>       If Peek.w (?ininclude)>0
0002675A <AmiBlitz3.ab2@1459>         codeline.l = Peek.l(?includeline);-1
000267CA <AmiBlitz3.ab2@1460>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
000267D0 <AmiBlitz3.ab2@1461>       Else
000267FE <AmiBlitz3.ab2@1462>         !ComData_LEA{comStr_SourceName,A0}
00026800 <AmiBlitz3.ab2@1463>         MOVE.l A0,D0
00026804 <AmiBlitz3.ab2@1464>         sourceP.l = PutD0
0002682C <AmiBlitz3.ab2@1465>         codefile.s = Peek.s(sourceP)
0002683C <AmiBlitz3.ab2@1466>         codeline.l = Peek.l(?linenumat)
00026864 <AmiBlitz3.ab2@1468>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
000268B8 <AmiBlitz3.ab2@1469>       If oldhunkoffset><hunkoffset OR oldfile><codefile
000268C8 <AmiBlitz3.ab2@1476>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
000268D2 <AmiBlitz3.ab2@1477>         If *sourceLine
000268E8 <AmiBlitz3.ab2@1478>           MaxLen detokenline.s = 4096
0002692A <AmiBlitz3.ab2@1479>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0002693A <AmiBlitz3.ab2@1480>          *tn.preprocessor = Peek.l(?include_preprocessor)
00026966 <AmiBlitz3.ab2@1481>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
00026994 <AmiBlitz3.ab2@1482>           If written>0 Then Poke.b &detokenline+written-1,0
000269BE <AmiBlitz3.ab2@1483>           sourceLineText.s = Peek.s(&detokenline)
000269C4 <AmiBlitz3.ab2@1484>         Else
000269EC <AmiBlitz3.ab2@1485>           sourceLineText = "NULL"
00026AB4 <AmiBlitz3.ab2@1488>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
00026AD2 <AmiBlitz3.ab2@1494> !asm
00026AD4 <AmiBlitz3.ab2@1496> RTS
00026AD6 <AmiBlitz3.ab2@1498> word_WriteDebugFileNow: Dc.w 0
00026AD8 <AmiBlitz3.ab2@1500> flag_noPED:  Ds.w 1                                        ;closeed org source
00026ADA <AmiBlitz3.ab2@1501> flag_noCLI:  Ds.w 1                                        ;nocli org source
00026ADE <AmiBlitz3.ab2@1505>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00026AE4 <AmiBlitz3.ab2@1506>   MOVEA.l _execbase,A6
00026AE8 <AmiBlitz3.ab2@1507>   JSR _CacheClearU(A6)
00026AEC <AmiBlitz3.ab2@1508>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00026AEE <AmiBlitz3.ab2@1509> RTS
00026AF8 <AmiBlitz3.ab2@1553>   ADD.l #1,number_of_builds
00026AFE <AmiBlitz3.ab2@1555>   CLR.w debugversion
00026B04 <AmiBlitz3.ab2@1556>   CLR.w flag_noPED
00026B0A <AmiBlitz3.ab2@1557>   CLR.w flag_noCLI
00026B12 <AmiBlitz3.ab2@1560>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00026B16 <AmiBlitz3.ab2@1561>     BSR.w startcompile
00026B20 <AmiBlitz3.ab2@1562>     CMP.l #"NORE",reqmode
00026B24 <AmiBlitz3.ab2@1563>   BEQ 'l1
00026B2A <AmiBlitz3.ab2@1566>   TST.w anyerrs
00026B2E <AmiBlitz3.ab2@1567>    BNE.w JL_0_3482
00026B32 <AmiBlitz3.ab2@1569>   MOVE.w flag_noPED(PC),D1
00026B36 <AmiBlitz3.ab2@1570>    BEQ.w skip_closingGUI
00026B68 <AmiBlitz3.ab2@1575>   !ComData_JSR{comFunc_CloseGUI}
00026B6C <AmiBlitz3.ab2@1576> BRA.b runprogram
00026B70 <AmiBlitz3.ab2@1580>   BSR.w compilerequester
00026B76 <AmiBlitz3.ab2@1583>   MOVEA.l _dosbase,A6
00026B7C <AmiBlitz3.ab2@1584>   LEA exepath,a0
00026B7E <AmiBlitz3.ab2@1585>   MOVE.l a0,d1
00026B80 <AmiBlitz3.ab2@1586>   MOVEQ #-2,d2
00026B84 <AmiBlitz3.ab2@1587>   JSR _Lock(a6)                                            ;lock
00026B8A <AmiBlitz3.ab2@1588>   MOVE.l d0,exelock
00026B90 <AmiBlitz3.ab2@1589>   MOVE.l #0,d1
00026B94 <AmiBlitz3.ab2@1590>   JSR _CurrentDir(A6)
00026B9A <AmiBlitz3.ab2@1591>   MOVE.l D0,lock_currentdir
00026B9C <AmiBlitz3.ab2@1592>   MOVE.l D0,D1
00026BA0 <AmiBlitz3.ab2@1593>   JSR _CurrentDir(A6)
00026BA6 <AmiBlitz3.ab2@1594>   CLR.l ptr_exetask
00026BAC <AmiBlitz3.ab2@1603>   MOVE.l #str_process_name,D1
00026BAE <AmiBlitz3.ab2@1604>   MOVEQ.l #$00,D2
00026BB4 <AmiBlitz3.ab2@1605>   MOVE.l #proc_seglist,D3
00026BB6 <AmiBlitz3.ab2@1606>   LSR.l #2,D3
00026BBC <AmiBlitz3.ab2@1607>   MOVE.l stacksize,D4
00026BC2 <AmiBlitz3.ab2@1608>   MOVEA.l _dosbase,A6
00026BC6 <AmiBlitz3.ab2@1609>   JSR _CreateProc(A6)                                      ;runtask
00026BC8 <AmiBlitz3.ab2@1610>   TST.l D0
00026BCC <AmiBlitz3.ab2@1611>    BEQ ErrorRunningProg
00026C02 <AmiBlitz3.ab2@1613>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00026C08 <AmiBlitz3.ab2@1615>   TST.w flag_noPED
00026C0C <AmiBlitz3.ab2@1616>    BNE.b JL_0_344E
00026C10 <AmiBlitz3.ab2@1617>   BSR.w close_compilewin
00026C16 <AmiBlitz3.ab2@1620>   CLR.l firstlocal
00026C1C <AmiBlitz3.ab2@1621>   CLR.l firstglob
00026C20 <AmiBlitz3.ab2@1622>   MOVE.w flag_noPED(PC),D1
00026C24 <AmiBlitz3.ab2@1623>   BEQ.w skip_openGUI
00026C56 <AmiBlitz3.ab2@1627>   !ComData_JSR{comFunc_CreateGUI}
00026C58 <AmiBlitz3.ab2@1636> RTS
00026C62 <AmiBlitz3.ab2@1639> MOVE.l #1,_runerror
00026C66 <AmiBlitz3.ab2@1640> BRA JL_0_344E
00026C6A <AmiBlitz3.ab2@1642> _runerror: Dc.l 0
00026C6E <AmiBlitz3.ab2@1643> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00026C72 <AmiBlitz3.ab2@1644> ptr_exetask:        Ds.l 1                                          ;panictask org source
00026C76 <AmiBlitz3.ab2@1645> signalNum:          Ds.l 1                                          ;panicbit org source
00026C7A <AmiBlitz3.ab2@1646> signals:            Ds.l 1                                          ;panicmask org source
00026C90 <AmiBlitz3.ab2@1648> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
00026C95 <AmiBlitz3.ab2@1649>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00026C98 <AmiBlitz3.ab2@1650> Even4
00026C9C <AmiBlitz3.ab2@1652> ptr_ThisTask:       Ds.l 1                                          ;length
00026CA0 <AmiBlitz3.ab2@1653> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00026CA6 <AmiBlitz3.ab2@1657>   MOVEA.l $4,A0
00026CAE <AmiBlitz3.ab2@1658>   MOVE.l  $114(A0),ptr_exetask
00026CB4 <AmiBlitz3.ab2@1660>   MOVEA.l _dosbase,A6
00026CBA <AmiBlitz3.ab2@1661>   MOVE.l exelock,D1
00026CBE <AmiBlitz3.ab2@1662>   JSR _CurrentDir(A6)
00026CF4 <AmiBlitz3.ab2@1667>   !ComData_SetB{comByte_RunningFlag,#1}
00026CF8 <AmiBlitz3.ab2@1673>   MOVE.w flag_noCLI(PC),D1
00026CFC <AmiBlitz3.ab2@1674>    BNE.b skip_openconsole
00026D2E <AmiBlitz3.ab2@1678>   !ComData_JSR{comFunc_OpenConsole}
00026D32 <AmiBlitz3.ab2@1681>   BSR.w calcvbr
00026D38 <AmiBlitz3.ab2@1682>   MOVEA.l vbr,A0
00026D3E <AmiBlitz3.ab2@1687>   CLR.w dirmode
00026D44 <AmiBlitz3.ab2@1688>   CLR.l firstglob
00026D4A <AmiBlitz3.ab2@1689>   CLR.l firstlocal
00026D50 <AmiBlitz3.ab2@1691>   MOVE.l stacksize,D2
00026D56 <AmiBlitz3.ab2@1692>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00026D5C <AmiBlitz3.ab2@1693>   LEA str_cliarguments,A0                                   ;cli arguement
00026D62 <AmiBlitz3.ab2@1694>   MOVEA.l destbufferstart,A1
00026D66 <AmiBlitz3.ab2@1695>   BSR.w Aclearcache
00026D68 <AmiBlitz3.ab2@1698>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00026D6E <AmiBlitz3.ab2@1700>   MOVEA.l vbr,A0
00026D74 <AmiBlitz3.ab2@1702>   CLR.l firstglob
00026D7A <AmiBlitz3.ab2@1703>   CLR.l firstlocal
00026D80 <AmiBlitz3.ab2@1704>   MOVEA.l _dosbase,A6
00026D86 <AmiBlitz3.ab2@1705>   MOVE.l exelock,d1
00026D8A <AmiBlitz3.ab2@1706>   BEQ 'nolock
00026D8E <AmiBlitz3.ab2@1707>   JSR _UnLock(a6)
00026DC4 <AmiBlitz3.ab2@1712>   !ComData_SetB{comByte_RunningFlag,#0}
00026DC8 <AmiBlitz3.ab2@1715>   MOVE.w flag_noCLI(PC),D1
00026DCC <AmiBlitz3.ab2@1716>    BNE.b skip_closeconsole
00026DFE <AmiBlitz3.ab2@1720>   !ComData_JSR{comFunc_CloseConsole}
00026E06 <AmiBlitz3.ab2@1723>   MOVE.w #$0001,stopit
00026E0A <AmiBlitz3.ab2@1724>   MOVE.l signals(PC),D0
00026E10 <AmiBlitz3.ab2@1725>   MOVEA.l ptr_ThisTask,A1
00026E16 <AmiBlitz3.ab2@1726>   MOVEA.l _execbase,A6
00026E1A <AmiBlitz3.ab2@1727>   JSR _Signal(A6)
00026E1C <AmiBlitz3.ab2@1728> RTS
00026E22 <AmiBlitz3.ab2@1732>   MOVEA.l _execbase,A6
00026E26 <AmiBlitz3.ab2@1733>   MOVE.w $128(A6),D0
00026E28 <AmiBlitz3.ab2@1734>   MOVEQ.l #$00,D1
00026E2C <AmiBlitz3.ab2@1735>   ANDI.w #$F,D0
00026E30 <AmiBlitz3.ab2@1738>     BEQ.b calcvbr__skip
00026E32 <AmiBlitz3.ab2@1739>     ADDQ.w #1,D1
00026E34 <AmiBlitz3.ab2@1740>     LSR.w #1,D0
00026E38 <AmiBlitz3.ab2@1741> BRA.b calcvbr_loop
00026E3A <AmiBlitz3.ab2@1744>   MOVEQ.l #$00,D2
00026E3E <AmiBlitz3.ab2@1745>   CMP.w #$2,D1
00026E42 <AmiBlitz3.ab2@1746>    BCS.b calcvbr__skip2
00026E48 <AmiBlitz3.ab2@1747>   MOVEA.l _execbase,A6
00026E4C <AmiBlitz3.ab2@1748>   JSR _SuperState(A6)
00026E50 <AmiBlitz3.ab2@1749>   Dc.l $4E7A2801                                           ;movec vbr,D2
00026E54 <AmiBlitz3.ab2@1750>   JSR _UserState(A6)
00026E5A <AmiBlitz3.ab2@1753>   MOVE.l D2,vbr
00026E5C <AmiBlitz3.ab2@1754> RTS
00026E62 <AmiBlitz3.ab2@1758>   LEA instrtab,a0
00026E68 <AmiBlitz3.ab2@1759>   MOVE.l #labelhash-instrtab,d0
00026E6A <AmiBlitz3.ab2@1760>   ASR.l #2,d0
00026E6C <AmiBlitz3.ab2@1761>   SUBQ.l #1,d0
00026E6E <AmiBlitz3.ab2@1764>   CLR.l (a0)+
00026E70 <AmiBlitz3.ab2@1765>   SUBQ.l #1,d0
00026E74 <AmiBlitz3.ab2@1766>   BNE 'l10
00026E78 <AmiBlitz3.ab2@1767>   BSR.w call_setpointerbusy
00026E7C <AmiBlitz3.ab2@1768>   BSR.w free_userlibs
00026E80 <AmiBlitz3.ab2@1769>   BSR.w scan_for_userlibs
00026E84 <AmiBlitz3.ab2@1770>   BSR.w JL_0_7082
00026E88 <AmiBlitz3.ab2@1771> BRA.w call_setpointernormal
00026EB2 <AmiBlitz3.ab2@1777>   !basic
00026EEC <AmiBlitz3.ab2@1778>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00026EFC <AmiBlitz3.ab2@1780>   deflibNameP.l = Peek.l(?deflib)
00026F06 <AmiBlitz3.ab2@1781>   If deflibNameP
00026F38 <AmiBlitz3.ab2@1782>     If Peek.s(deflibNameP)<>""
00026F82 <AmiBlitz3.ab2@1783>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00026F88 <AmiBlitz3.ab2@1784>     Else
00026FC2 <AmiBlitz3.ab2@1785>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00026FC8 <AmiBlitz3.ab2@1787>   Else
00027002 <AmiBlitz3.ab2@1788>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00027030 <AmiBlitz3.ab2@1789>     error{"INTERNAL: Invalid deflib name pointer!"}
0002704E <AmiBlitz3.ab2@1791>   !asm
00027054 <AmiBlitz3.ab2@1796>   MOVE.l #str_path_userlibs,D1
00027056 <AmiBlitz3.ab2@1797>   MOVEQ.l #-$02,D2
0002705C <AmiBlitz3.ab2@1798>   MOVEA.l _dosbase,A6
00027060 <AmiBlitz3.ab2@1799>   JSR _Lock(A6)
00027062 <AmiBlitz3.ab2@1800>   MOVE.l D0,D7
00027066 <AmiBlitz3.ab2@1801>    BEQ.w exit_get_libraries
00027068 <AmiBlitz3.ab2@1802>   MOVE.l D7,D1
0002706E <AmiBlitz3.ab2@1803>   MOVE.l #ptr_parameterstore,D2
00027072 <AmiBlitz3.ab2@1804>   JSR _Examine(A6)
00027074 <AmiBlitz3.ab2@1805>   TST.l D0
00027078 <AmiBlitz3.ab2@1806>   BEQ.w unlock_and_exit_get_libraries
0002707E <AmiBlitz3.ab2@1807>   MOVE.l fib_DirEntryType,D0
00027082 <AmiBlitz3.ab2@1808>   BMI.w unlock_and_exit_get_libraries
00027084 <AmiBlitz3.ab2@1813>     MOVE.l D7,D1
0002708A <AmiBlitz3.ab2@1814>     MOVE.l #ptr_parameterstore,D2
00027090 <AmiBlitz3.ab2@1815>     MOVEA.l _dosbase,A6
00027094 <AmiBlitz3.ab2@1816>     JSR _ExNext(A6)
00027096 <AmiBlitz3.ab2@1817>     TST.l D0
0002709A <AmiBlitz3.ab2@1818>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
000270A0 <AmiBlitz3.ab2@1820>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
000270A4 <AmiBlitz3.ab2@1821>     BPL.w scan_libsdrawer                                  ; skip directories
000270AA <AmiBlitz3.ab2@1823>     LEA fib_FileName,A0                                    ; pruefen ob infofile
000270AE <AmiBlitz3.ab2@1824>     BSR.w check_for_infoextention
000270B2 <AmiBlitz3.ab2@1825>     BEQ.w scan_libsdrawer
000270B8 <AmiBlitz3.ab2@1827>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
000270BA <AmiBlitz3.ab2@1828>     MOVEQ.l #$26,D0
000270BC <AmiBlitz3.ab2@1829>     MOVEQ.l #$01,D1
000270C2 <AmiBlitz3.ab2@1830>     MOVE.l mempool,a0
000270C6 <AmiBlitz3.ab2@1831>     JSR _AllocPooled(a6)
000270CC <AmiBlitz3.ab2@1833>     MOVEA.l _dosbase,A6
000270CE <AmiBlitz3.ab2@1834>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
000270D4 <AmiBlitz3.ab2@1837>     LEA ptr_userlibs_list,A0                               ; pruefe liste
000270D6 <AmiBlitz3.ab2@1840>     MOVE.l (A0),D5
000270DA <AmiBlitz3.ab2@1841>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
000270DC <AmiBlitz3.ab2@1842>     MOVEA.l D5,A2
000270DE <AmiBlitz3.ab2@1843>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
000270E4 <AmiBlitz3.ab2@1846>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
000270E6 <AmiBlitz3.ab2@1849>       MOVEQ.l #$00,D0
000270E8 <AmiBlitz3.ab2@1850>       MOVE.b (A1)+,D0
000270EC <AmiBlitz3.ab2@1851>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
000270EE <AmiBlitz3.ab2@1852>       MOVEQ.l #$00,D1
000270F0 <AmiBlitz3.ab2@1853>       MOVE.b (A2)+,D1
000270F4 <AmiBlitz3.ab2@1854>        BEQ.w JL_0_371C
00027116 <AmiBlitz3.ab2@1855>       !compare1                                            ;bsr.w tstalpha
0002711A <AmiBlitz3.ab2@1856>       BNE.w JL_0_3702
0002711E <AmiBlitz3.ab2@1857>       ANDI.w #$DF,D0
00027120 <AmiBlitz3.ab2@1860>       EXG.l D0,D1
00027142 <AmiBlitz3.ab2@1861>       !compare1                                            ;bsr.w tstalpha
00027146 <AmiBlitz3.ab2@1862>       BNE.w JL_0_3710
0002714A <AmiBlitz3.ab2@1863>       ANDI.w #$DF,D0
0002714C <AmiBlitz3.ab2@1866>       EXG.l D0,D1
0002714E <AmiBlitz3.ab2@1867>       CMP.b D1,D0
00027152 <AmiBlitz3.ab2@1868>     BEQ.w JL_0_36E6
00027156 <AmiBlitz3.ab2@1869>     BCS.w JL_0_3722
00027158 <AmiBlitz3.ab2@1872>     MOVEA.l D5,A0
0002715C <AmiBlitz3.ab2@1873> BRA.w JL_0_36D6
0002715E <AmiBlitz3.ab2@1876>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00027160 <AmiBlitz3.ab2@1877>     MOVE.l (A0),(A1)
00027162 <AmiBlitz3.ab2@1878>     MOVE.l A1,(A0)
00027164 <AmiBlitz3.ab2@1879>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00027168 <AmiBlitz3.ab2@1880>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
0002716E <AmiBlitz3.ab2@1881>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
00027170 <AmiBlitz3.ab2@1884>       MOVE.b (A0)+,(A1)+
00027174 <AmiBlitz3.ab2@1885>     BNE.w JL_0_3734
00027178 <AmiBlitz3.ab2@1886> BRA.w scan_libsdrawer
0002717A <AmiBlitz3.ab2@1889>   MOVE.l D7,D1
00027180 <AmiBlitz3.ab2@1890>   MOVEA.l _dosbase,A6
00027184 <AmiBlitz3.ab2@1891>   JSR _UnLock(A6)
00027186 <AmiBlitz3.ab2@1892>   MOVEQ.l #-$01,D0
00027188 <AmiBlitz3.ab2@1895> RTS
0002718A <AmiBlitz3.ab2@1898>   MOVE.l D7,D1
00027190 <AmiBlitz3.ab2@1899>   MOVEA.l _dosbase,A6
00027194 <AmiBlitz3.ab2@1900>   JSR _UnLock(A6)
00027196 <AmiBlitz3.ab2@1901>   MOVEQ.l #$00,D0
00027198 <AmiBlitz3.ab2@1902> RTS
0002719E <AmiBlitz3.ab2@1906>   MOVEA.l _execbase,A6
000271A4 <AmiBlitz3.ab2@1907>   MOVEA.l ptr_userlibs_list,A2
000271AA <AmiBlitz3.ab2@1908>   CLR.l ptr_userlibs_list
000271AE <AmiBlitz3.ab2@1911>     CMPA.w #$0,A2
000271B2 <AmiBlitz3.ab2@1912>     BEQ.w exit_free_userlib
000271B4 <AmiBlitz3.ab2@1913>       MOVEA.l A2,A1
000271B6 <AmiBlitz3.ab2@1914>       MOVEQ.l #$26,D0
000271B8 <AmiBlitz3.ab2@1915>       MOVEA.l (A2),A2
000271BE <AmiBlitz3.ab2@1916>       MOVE.l mempool,a0
000271C4 <AmiBlitz3.ab2@1917>       MOVEA.l _execbase,A6
000271C8 <AmiBlitz3.ab2@1918>       JSR _FreePooled(A6)
000271CC <AmiBlitz3.ab2@1919> BRA.w loop_free_userlib
000271CE <AmiBlitz3.ab2@1922> RTS
000271D0 <AmiBlitz3.ab2@1925> pass:  Dc.w 0                                             ; smallpass org source
000271D2 <AmiBlitz3.ab2@1926> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
000271D8 <AmiBlitz3.ab2@1930>   MOVE.l A7,errstack                                      ;startcompile
000271DE <AmiBlitz3.ab2@1939>   CLR.l reqmode
000271E8 <AmiBlitz3.ab2@1941>   MOVE.l #Aclearallvars,errcont
000271F2 <AmiBlitz3.ab2@1942>   MOVE.l #concomstack,concomsp
000271F6 <AmiBlitz3.ab2@1949>   MOVE.w #1450,D0
000271F8 <AmiBlitz3.ab2@1950>   LSR.w #3,D0
000271FA <AmiBlitz3.ab2@1951>   SUBQ.w #7,D0                                             ; 173
00027200 <AmiBlitz3.ab2@1952>   MOVE.w D0,progressbar_width
00027202 <AmiBlitz3.ab2@1953>   SWAP D0
00027204 <AmiBlitz3.ab2@1954>   CLR.w D0
0002720A <AmiBlitz3.ab2@1955>   MOVE.l numlines,d1
0002720E <AmiBlitz3.ab2@1956>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00027210 <AmiBlitz3.ab2@1958>   TST.w D0
00027214 <AmiBlitz3.ab2@1959>   BNE.w JL_0_37C0
00027216 <AmiBlitz3.ab2@1960>   MOVEQ.l #-$01,D0
0002721C <AmiBlitz3.ab2@1963>   MOVE.w D0,progress_per_line
00027224 <AmiBlitz3.ab2@1971>   BTST #$7,use_debugger
00027228 <AmiBlitz3.ab2@1973>   BNE 'debugon
0002722E <AmiBlitz3.ab2@1974>   CLR.w debugmode
00027232 <AmiBlitz3.ab2@1975> BRA.b 'debugoff
00027238 <AmiBlitz3.ab2@1978>   SNE debugmode
00027270 <AmiBlitz3.ab2@1986>   !ComData_SetB{comByte_DebugMode,debugmode}
00027276 <AmiBlitz3.ab2@1989>   CLR.w dirmode                                            ;direct mode flag
0002727C <AmiBlitz3.ab2@1990>   CLR.w ezerr                                              ;quiet error
00027282 <AmiBlitz3.ab2@1991>   CLR.l currentfunction
00027288 <AmiBlitz3.ab2@1992>   CLR.w connest
0002728E <AmiBlitz3.ab2@1993>   CLR.w varmode
00027294 <AmiBlitz3.ab2@1994>   CLR.w proceduremode
0002729A <AmiBlitz3.ab2@1995>   CLR.w ininclude
000272A0 <AmiBlitz3.ab2@1996>   CLR.w intstring
000272A6 <AmiBlitz3.ab2@1997>   CLR.w pass
000272AE <AmiBlitz3.ab2@1998>   MOVE.w #0,compiler_job
000272B4 <AmiBlitz3.ab2@1999>   CLR.l funcscanon
000272BA <AmiBlitz3.ab2@2007>   CLR.l funcscanon
000272BE <AmiBlitz3.ab2@2008>   BSR.w compileall
000272C4 <AmiBlitz3.ab2@2010>   MOVE.w dontwrite,d0
000272C8 <AmiBlitz3.ab2@2011>   CMP.w #1,d0
000272CC <AmiBlitz3.ab2@2012>   BNE 'l3
000272D2 <AmiBlitz3.ab2@2013>   CLR.w dontwrite
000272D6 <AmiBlitz3.ab2@2014>   BSR compileall                                           ;if a function is not found
000272DC <AmiBlitz3.ab2@2018>   TST.b funcoptimize
000272E2 <AmiBlitz3.ab2@2020>   LEA firstproc,a0
000272E8 <AmiBlitz3.ab2@2021>   CLR.l savefuncspace
000272EA <AmiBlitz3.ab2@2022>   MOVE.l (a0),d0
000272EC <AmiBlitz3.ab2@2026>     MOVE.l d0,a0
000272F0 <AmiBlitz3.ab2@2027>     BEQ 'out
000272F4 <AmiBlitz3.ab2@2028>     TST.b isfunc(a0)
000272F8 <AmiBlitz3.ab2@2029>     BNE 'nex
000272FC <AmiBlitz3.ab2@2030>     MOVEM.l d2/a6/a0,-(a7)
000272FE <AmiBlitz3.ab2@2032>     MOVEQ #0,d0
00027302 <AmiBlitz3.ab2@2033>     MOVE.b $21+#funcentry_extend-1(a0),d0
00027306 <AmiBlitz3.ab2@2034>     SUB.w #$21+#funcentry_extend,d0
0002730A <AmiBlitz3.ab2@2035>     ADD.w #16,d0
00027310 <AmiBlitz3.ab2@2036>     MOVE.l #$10000,d1
00027312 <AmiBlitz3.ab2@2037>     MOVE.l d0,d2
00027318 <AmiBlitz3.ab2@2038>     MOVEA.l _execbase,A6
0002731C <AmiBlitz3.ab2@2039>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
0002731E <AmiBlitz3.ab2@2040>     MOVE.l d0,a1
00027322 <AmiBlitz3.ab2@2041>     MOVE.l d2,4(a1)
00027328 <AmiBlitz3.ab2@2042>     MOVE.l unusedfunc,(a1)
0002732E <AmiBlitz3.ab2@2043>     MOVE.l d0,unusedfunc
00027332 <AmiBlitz3.ab2@2044>     MOVEM.l (a7)+,a6/a0/d2
00027336 <AmiBlitz3.ab2@2045>     MOVE.l isfunc+1(a0),d0
00027338 <AmiBlitz3.ab2@2046>     ADDQ.l #6,d0
0002733E <AmiBlitz3.ab2@2047>     ADD.l d0,savefuncspace
00027342 <AmiBlitz3.ab2@2050>     MOVE.l d0,8(a1)
00027346 <AmiBlitz3.ab2@2051>     LEA 12(a1),a1
00027348 <AmiBlitz3.ab2@2052>     MOVE.l a0,-(a7)
0002734C <AmiBlitz3.ab2@2053>     LEA $21+#funcentry_extend(a0),a0
0002734E <AmiBlitz3.ab2@2056>       MOVE.b (a0)+,(a1)+
00027352 <AmiBlitz3.ab2@2057>     BNE 'l1
00027354 <AmiBlitz3.ab2@2058>     MOVE.l (a7)+,a0
00027356 <AmiBlitz3.ab2@2061>     MOVE.l (a0),d0
0002735A <AmiBlitz3.ab2@2062> BRA 'lr1
00027362 <AmiBlitz3.ab2@2065>   BTST #$7,make_smallestcode
00027366 <AmiBlitz3.ab2@2066>   BEQ.b JL_0_3844                                           ;optimize for executable
0002736C <AmiBlitz3.ab2@2067>   CLR.l morememadd
00027370 <AmiBlitz3.ab2@2069>   BSR.w alloxadj
00027374 <AmiBlitz3.ab2@2070>   BEQ.w JL_0_388A
0002737A <AmiBlitz3.ab2@2071>   ADDQ.w #1,pass
0002737E <AmiBlitz3.ab2@2072>   BSR.w compileall
00027384 <AmiBlitz3.ab2@2075>   MOVE.w dontwrite,D1
00027388 <AmiBlitz3.ab2@2076>   BEQ.w JL_0_38A2
0002738C <AmiBlitz3.ab2@2095> BRA.w JL_0_3896
00027394 <AmiBlitz3.ab2@2106>   MOVE.w #$FFFF,anyerrs
00027398 <AmiBlitz3.ab2@2107> BRA.w JL_0_38A2
0002739C <AmiBlitz3.ab2@2110>   BSR.w alloxinc                                          ;increase all by 50%
000273A0 <AmiBlitz3.ab2@2111>   BEQ.w Aclearallvars
000273A4 <AmiBlitz3.ab2@2112> BRA.w JL_0_3824
000273A8 <AmiBlitz3.ab2@2124> BRA.w JL_0_38A6                                            ;???????
000273AE <AmiBlitz3.ab2@2128>   JSR freereps
000273B4 <AmiBlitz3.ab2@2129>   JSR freesels
000273BA <AmiBlitz3.ab2@2130>   JSR AJL_0_6DF2
000273C0 <AmiBlitz3.ab2@2131>   JSR freepends
000273C6 <AmiBlitz3.ab2@2132>   JSR freeifs
000273CC <AmiBlitz3.ab2@2133>   JSR AJL_0_C188
000273D2 <AmiBlitz3.ab2@2134>   JSR AJL_0_C15C
000273D8 <AmiBlitz3.ab2@2135>   JSR AJL_0_D9BC
000273DE <AmiBlitz3.ab2@2138> JMP cleartemplabel
000273E2 <AmiBlitz3.ab2@2141> mempool2:  Dc.l 0
000273E8 <AmiBlitz3.ab2@2145>   JSR Aclearcache
000273F0 <AmiBlitz3.ab2@2147>   BTST #$7,use_debugger
000273F4 <AmiBlitz3.ab2@2149>   BNE 'debugon
000273FA <AmiBlitz3.ab2@2150>   CLR.w debugmode
000273FE <AmiBlitz3.ab2@2151> BRA.b 'debugoff
00027404 <AmiBlitz3.ab2@2154>   SNE debugmode
0002743C <AmiBlitz3.ab2@2159>   !ComData_SetB{comByte_DebugMode,debugmode}
00027442 <AmiBlitz3.ab2@2161>   LEA regtable,a0
00027444 <AmiBlitz3.ab2@2162>   MOVEQ #10,d0
00027446 <AmiBlitz3.ab2@2165>     CLR.l (a0)+
0002744A <AmiBlitz3.ab2@2166>   DBF d0,'l1
00027450 <AmiBlitz3.ab2@2168>   LEA includetemp2,a0
00027452 <AmiBlitz3.ab2@2169>   CLR.b (a0)
0002745C <AmiBlitz3.ab2@2170>   MOVE.l #7,maxregs
00027462 <AmiBlitz3.ab2@2171>   CLR.w debugnest
00027468 <AmiBlitz3.ab2@2172>   CLR.b funcparloop
0002746E <AmiBlitz3.ab2@2173>   CLR.b nostringopt
00027474 <AmiBlitz3.ab2@2174>   CLR.b firsttime
0002747A <AmiBlitz3.ab2@2175>   CLR.l lastdestpointer
00027480 <AmiBlitz3.ab2@2176>   CLR.l lastwritedat
00027486 <AmiBlitz3.ab2@2177>   CLR.l prevwritedat
0002748C <AmiBlitz3.ab2@2178>   CLR.l includeline
00027492 <AmiBlitz3.ab2@2179>   CLR.b incnif
00027498 <AmiBlitz3.ab2@2180>   CLR.b formode
0002749E <AmiBlitz3.ab2@2181>   CLR.b funccall
000274A4 <AmiBlitz3.ab2@2182>   CLR.w objectcount
000274AA <AmiBlitz3.ab2@2183>   CLR.b resdisable
000274B0 <AmiBlitz3.ab2@2184>   CLR.b developobject
000274B6 <AmiBlitz3.ab2@2185>   CLR.b optistring
000274BC <AmiBlitz3.ab2@2186>   CLR.b optistring2
000274C2 <AmiBlitz3.ab2@2187>   CLR.b optiarray
000274C8 <AmiBlitz3.ab2@2188>   CLR.b quickadd
000274CE <AmiBlitz3.ab2@2189>   CLR.w newmode
000274D4 <AmiBlitz3.ab2@2190>   CLR.w mode
000274DA <AmiBlitz3.ab2@2191>   CLR.w string1
000274E0 <AmiBlitz3.ab2@2192>   CLR.b fastfunc
000274E6 <AmiBlitz3.ab2@2193>   CLR.w load_var_size
000274EC <AmiBlitz3.ab2@2194>   CLR.w load_var_reg
000274F2 <AmiBlitz3.ab2@2195>   CLR.l load_var_addr
000274F8 <AmiBlitz3.ab2@2196>   CLR.w imm_size
000274FE <AmiBlitz3.ab2@2197>   CLR.w imm_reg
00027504 <AmiBlitz3.ab2@2198>   CLR.l imm_addr
0002750A <AmiBlitz3.ab2@2199>   CLR.b _dcb
00027510 <AmiBlitz3.ab2@2200>   CLR.l nohunkoffset
00027516 <AmiBlitz3.ab2@2201>   CLR.b peekaddrsize
0002751C <AmiBlitz3.ab2@2202>   CLR.b typecheck
00027522 <AmiBlitz3.ab2@2203>   CLR.b declare2
00027528 <AmiBlitz3.ab2@2204>   CLR.b declare
0002752E <AmiBlitz3.ab2@2205>   CLR.l myoline                                          ;check
00027534 <AmiBlitz3.ab2@2206>   CLR.l myline                                          ;check
0002753A <AmiBlitz3.ab2@2207>   CLR.b newvariable
00027540 <AmiBlitz3.ab2@2208>   CLR.b saved0
00027546 <AmiBlitz3.ab2@2209>   CLR.l bsssize
0002754C <AmiBlitz3.ab2@2210>   CLR.l chipsize
00027552 <AmiBlitz3.ab2@2211>   CLR.b infunctioncode
0002755C <AmiBlitz3.ab2@2212>   MOVE.l #-1,bssstart
00027566 <AmiBlitz3.ab2@2213>   MOVE.l #-1,bssend
00027570 <AmiBlitz3.ab2@2214>   MOVE.l #-1,chipstart
0002757A <AmiBlitz3.ab2@2215>   MOVE.l #-1,chipend
00027582 <AmiBlitz3.ab2@2216>   MOVE.w #0,bssmode
00027588 <AmiBlitz3.ab2@2217>   CLR.w a2offset
0002758E <AmiBlitz3.ab2@2218>   CLR.w fast
00027594 <AmiBlitz3.ab2@2219>   CLR.w fpu
0002759A <AmiBlitz3.ab2@2220>   CLR.b iee
000275A0 <AmiBlitz3.ab2@2221>   CLR.w newsyntax
000275A4 <AmiBlitz3.ab2@2222>   BSR.w JL_0_38A6
000275AA <AmiBlitz3.ab2@2223>   JSR AJL_0_7962
000275B0 <AmiBlitz3.ab2@2224>   JSR frallvars
000275B6 <AmiBlitz3.ab2@2225>   JSR fralltypes
000275BC <AmiBlitz3.ab2@2226>   JSR freemacs
000275C2 <AmiBlitz3.ab2@2227>   JSR clearfunctionlist
000275C8 <AmiBlitz3.ab2@2228>   TST.w pass
000275CE <AmiBlitz3.ab2@2230>   JSR clearlabels
000275D4 <AmiBlitz3.ab2@2231>   JSR clearhash
000275DA <AmiBlitz3.ab2@2234>   LEA devo,a0
000275DE <AmiBlitz3.ab2@2235>   MOVEM.l a0-a6/d0-d7,-(a7)
000275E4 <AmiBlitz3.ab2@2236>   LEA ptr_parameterstore,a1
000275E6 <AmiBlitz3.ab2@2239>     MOVE.b (a0)+,(a1)+
000275EA <AmiBlitz3.ab2@2240>   BNE 'l1b
000275EC <AmiBlitz3.ab2@2241>   MOVEQ #13,d2
000275F2 <AmiBlitz3.ab2@2242>   JSR findlabel2
000275F6 <AmiBlitz3.ab2@2243>   BNE 'd
000275FA <AmiBlitz3.ab2@2244>   CLR.l 8(a2)
000275FE <AmiBlitz3.ab2@2247>   MOVEM.l (a7)+,a0-a6/d0-d7
00027628 <AmiBlitz3.ab2@2248>   !basic
0002769C <AmiBlitz3.ab2@2249>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
000276BA <AmiBlitz3.ab2@2250>   !asm
000276C0 <AmiBlitz3.ab2@2251>   CLR.b returncode
000276C6 <AmiBlitz3.ab2@2252> JMP freeprocvs
000276CC <AmiBlitz3.ab2@2256>   MOVE.l #bssstore-labelhash,d0
000276CE <AmiBlitz3.ab2@2257>   ASR.l #2,d0
000276D4 <AmiBlitz3.ab2@2258>   LEA labelhash,a0
000276D6 <AmiBlitz3.ab2@2261>     CLR.l (a0)+
000276D8 <AmiBlitz3.ab2@2262>     SUBQ.l #1,d0
000276DC <AmiBlitz3.ab2@2263>   BNE.s 'l10
000276E2 <AmiBlitz3.ab2@2265>   LEA labelbase,a1
000276E4 <AmiBlitz3.ab2@2266>   MOVE.l (a1),d0
000276E8 <AmiBlitz3.ab2@2267>   BEQ 'l11
000276EA <AmiBlitz3.ab2@2270>     MOVE.l d0,a1
000276EE <AmiBlitz3.ab2@2271>     TST.l 4(a1)
000276F2 <AmiBlitz3.ab2@2272>     BEQ 'l29
000276F6 <AmiBlitz3.ab2@2273>     LEA $13(a1),a0
000276F8 <AmiBlitz3.ab2@2274>     MOVEQ #0,d0
000276FA <AmiBlitz3.ab2@2275>     MOVEQ #0,d1
000276FC <AmiBlitz3.ab2@2278>       MOVE.b (a0)+,d1
00027700 <AmiBlitz3.ab2@2279>       BEQ 'l12
00027706 <AmiBlitz3.ab2@2280>       !hashalgo
0002770A <AmiBlitz3.ab2@2281> BRA 'l13
00027710 <AmiBlitz3.ab2@2284>     LEA labelhash,a0
00027716 <AmiBlitz3.ab2@2285>     AND.l #hashsize,d0
00027718 <AmiBlitz3.ab2@2286>      ASL.l #2,d0
0002771C <AmiBlitz3.ab2@2287>     MOVE.l 0(a0,d0),d1                                     ;*4
00027720 <AmiBlitz3.ab2@2288>     MOVE.l d1,$c(a1)
00027724 <AmiBlitz3.ab2@2289>     MOVE.l a1,0(a0,d0)
00027726 <AmiBlitz3.ab2@2292>     MOVE.l (a1),d0
0002772A <AmiBlitz3.ab2@2293>   BNE 'l21
0002772C <AmiBlitz3.ab2@2296> RTS
00027732 <AmiBlitz3.ab2@2300>   MOVEA.l lastrestype,A0
00027734 <AmiBlitz3.ab2@2301>   MOVEA.l (A0),A2
00027736 <AmiBlitz3.ab2@2302>   CLR.l (A0)
0002773C <AmiBlitz3.ab2@2303> JMP freetypes
00027742 <AmiBlitz3.ab2@2307>   MOVEA.l varbase,A3
00027748 <AmiBlitz3.ab2@2308>   CLR.l varbase
0002774C <AmiBlitz3.ab2@2311>   CMPA.w #$0,A3
00027750 <AmiBlitz3.ab2@2312>   BEQ.w 'l20
00027752 <AmiBlitz3.ab2@2313>   MOVEA.l A3,A1
00027754 <AmiBlitz3.ab2@2314>   MOVEA.l (A3),A3
00027756 <AmiBlitz3.ab2@2315>   MOVEQ.l #$00,D0
0002775A <AmiBlitz3.ab2@2316>   MOVE.b $E+4(A1),D0
00027760 <AmiBlitz3.ab2@2317>   MOVEA.l _execbase,A6
00027766 <AmiBlitz3.ab2@2318>   MOVE.l mempool2,a0
0002776A <AmiBlitz3.ab2@2319>   JSR _FreePooled(A6)
0002776E <AmiBlitz3.ab2@2320> BRA.w 'l10
00027770 <AmiBlitz3.ab2@2323> RTS
00027776 <AmiBlitz3.ab2@2328>   LEA firstiff,A2
00027778 <AmiBlitz3.ab2@2329>   MOVEQ.l #$0E,D2
0002777E <AmiBlitz3.ab2@2330> JMP freeslist
00027780 <AmiBlitz3.ab2@2336> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00027782 <AmiBlitz3.ab2@2337> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00027788 <AmiBlitz3.ab2@2341>   CLR.w inmacro
0002778E <AmiBlitz3.ab2@2342>   ADDQ.l #1,globallinecount
00027794 <AmiBlitz3.ab2@2343>   CLR.b nostringopt
00027798 <AmiBlitz3.ab2@2344>   BSR.w JL_0_3CA4
0002779E <AmiBlitz3.ab2@2345>   CLR.w instringon
000277A4 <AmiBlitz3.ab2@2348>   TST.w ininclude
000277A8 <AmiBlitz3.ab2@2349>   BEQ.w JL_0_39B0
000277AE <AmiBlitz3.ab2@2350>   ADDQ.l #1,includeline
000277B4 <AmiBlitz3.ab2@2351>     JSR ab3_WriteDebugFile
000277BA <AmiBlitz3.ab2@2352>   JSR AJL_0_C09E
000277BE <AmiBlitz3.ab2@2353>   BEQ.w JL_0_39B0
000277C4 <AmiBlitz3.ab2@2354>   MOVE.w ininclude,D0
000277C8 <AmiBlitz3.ab2@2355>   CMP.w #$4,D0
000277CC <AmiBlitz3.ab2@2356>   BCC.w JL_0_39AC
000277CE <AmiBlitz3.ab2@2357>   ADD.w D0,D0
000277D4 <AmiBlitz3.ab2@2358>   LEA progress_per_line,A0
000277D8 <AmiBlitz3.ab2@2359>   MOVE.w $0(A0,D0.W),D2
000277DC <AmiBlitz3.ab2@2360>   CMP.w progressbar_width(PC),D2
000277E0 <AmiBlitz3.ab2@2361>   BCC.w JL_0_39AC
000277E4 <AmiBlitz3.ab2@2362>   ADDQ.w #1,$0(A0,D0.W)
000277E6 <AmiBlitz3.ab2@2363>   LSR.w #1,D0
000277E8 <AmiBlitz3.ab2@2364>   MOVE.l d0,d1
000277EA <AmiBlitz3.ab2@2365>   EXT.l d1
000277EC <AmiBlitz3.ab2@2366>   MOVE.l d2,d0
000277EE <AmiBlitz3.ab2@2367>   EXT.l d0                                                 ;d0=x,d1=y
000277F4 <AmiBlitz3.ab2@2369>   JSR update_progressbar
000277F6 <AmiBlitz3.ab2@2372>   MOVEQ.l #-$01,D0
000277F8 <AmiBlitz3.ab2@2373> RTS
000277FE <AmiBlitz3.ab2@2377>   MOVE.l titleat,D0
00027800 <AmiBlitz3.ab2@2378>   MOVEQ.l #$00,D1
00027806 <AmiBlitz3.ab2@2379>   MOVE.w progress_per_line,D1
00027808 <AmiBlitz3.ab2@2380>   ADD.l D1,D0
0002780A <AmiBlitz3.ab2@2381>   MOVE.l D0,D1
0002780C <AmiBlitz3.ab2@2382>   SWAP D0
00027812 <AmiBlitz3.ab2@2383>   CMP.w titleat,D0
00027816 <AmiBlitz3.ab2@2384>    BEQ.w JL_0_39E4
00027818 <AmiBlitz3.ab2@2387>   EXT.l d0
0002781A <AmiBlitz3.ab2@2388>   MOVE.l d1,-(a7)
00027822 <AmiBlitz3.ab2@2391>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00027828 <AmiBlitz3.ab2@2392>   JSR update_progressbar
00027830 <AmiBlitz3.ab2@2393>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
00027832 <AmiBlitz3.ab2@2397>   MOVE.l (a7)+,d1
00027838 <AmiBlitz3.ab2@2400>   MOVE.l D1,titleat
0002783E <AmiBlitz3.ab2@2401>   ADDQ.l #1,linenumat
00027844 <AmiBlitz3.ab2@2402>   CLR.w linedone
0002784A <AmiBlitz3.ab2@2403>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
00027850 <AmiBlitz3.ab2@2405>   SUBQ.l #1,numlines2
00027854 <AmiBlitz3.ab2@2406>    BEQ.w JL_0_3A12
0002785A <AmiBlitz3.ab2@2407>   MOVEA.l sourceline,A0
0002785C <AmiBlitz3.ab2@2408>   MOVEA.l (A0),A0
00027862 <AmiBlitz3.ab2@2409>   MOVE.l A0,sourceline
00027866 <AmiBlitz3.ab2@2410>   LEA $9(A0),A5
00027868 <AmiBlitz3.ab2@2413> RTS
0002786A <AmiBlitz3.ab2@2417>   MOVE.w D0,-(A7)
0002786C <AmiBlitz3.ab2@2418>   MOVEQ.l #$03,D0
0002786E <AmiBlitz3.ab2@2421>     MOVE.w D1,D2
00027872 <AmiBlitz3.ab2@2422>     ANDI.w #$F,D2
00027876 <AmiBlitz3.ab2@2423>     ADDI.w #$30,D2
0002787A <AmiBlitz3.ab2@2424>     CMP.w #$3A,D2
0002787E <AmiBlitz3.ab2@2425>      BCS.w JL_0_3A2C
00027880 <AmiBlitz3.ab2@2426>     ADDQ.w #7,D2
00027884 <AmiBlitz3.ab2@2429>     MOVE.b D2,$0(A0,D0.W)
00027886 <AmiBlitz3.ab2@2430>     LSR.w #4,D1
0002788A <AmiBlitz3.ab2@2431>   DBF D0,JL_0_3A18
0002788C <AmiBlitz3.ab2@2433>   MOVE.w (A7)+,D0
0002788E <AmiBlitz3.ab2@2434> RTS
00027894 <AmiBlitz3.ab2@2444>   MOVE.w skipcode,D1
00027898 <AmiBlitz3.ab2@2445>   BNE.w JL_0_3A46
0002789A <AmiBlitz3.ab2@2446> RTS
0002789C <AmiBlitz3.ab2@2449>   MOVE.l A5,-(A7)
0002789E <AmiBlitz3.ab2@2450>   MOVEQ.l #$3A,D1                                          ;':'
000278A0 <AmiBlitz3.ab2@2451>   MOVEQ.l #$21,D2                                          ;'!'
000278A2 <AmiBlitz3.ab2@2452>   MOVEQ.l #$3B,D3                                          ;';'
000278A4 <AmiBlitz3.ab2@2453>   MOVEQ.l #$22,D4                                          ;'"'
000278A6 <AmiBlitz3.ab2@2456>   MOVE.b (A5)+,D0
000278AA <AmiBlitz3.ab2@2457>    BEQ.w JL_0_3CA0
000278AE <AmiBlitz3.ab2@2458>    BPL.w JL_0_3A60
000278B0 <AmiBlitz3.ab2@2459>   MOVE.b (A5)+,D0
000278B4 <AmiBlitz3.ab2@2460> BRA.w JL_0_3A50
000278B6 <AmiBlitz3.ab2@2463>   CMP.b D4,D0
000278BA <AmiBlitz3.ab2@2464>    BNE.w JL_0_3A82
000278BC <AmiBlitz3.ab2@2467>   MOVE.b (A5)+,D0
000278C0 <AmiBlitz3.ab2@2468>    BEQ.w notqerr
000278C4 <AmiBlitz3.ab2@2474>   CMP.b #$22,D0
000278C8 <AmiBlitz3.ab2@2475>    BNE.w JL_0_3A66
000278CC <AmiBlitz3.ab2@2476> BRA.w JL_0_3A50
000278CE <AmiBlitz3.ab2@2479>   CMP.b D1,D0
000278D2 <AmiBlitz3.ab2@2480>    BEQ.w JL_0_3CA0
000278D4 <AmiBlitz3.ab2@2481>   CMP.b D3,D0
000278D8 <AmiBlitz3.ab2@2482>    BEQ.w JL_0_3CA0
000278DA <AmiBlitz3.ab2@2485>   CMP.b D2,D0
000278DE <AmiBlitz3.ab2@2486>    BNE.w JL_0_3A50
000278E6 <AmiBlitz3.ab2@2487>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
000278E8 <AmiBlitz3.ab2@2488>   MOVEA.l A5,A3
000278EE <AmiBlitz3.ab2@2489>    JSR getparameter2
000278F2 <AmiBlitz3.ab2@2490>    BNE.w JL_0_3AAC
000278F8 <AmiBlitz3.ab2@2491> JMP syntaxerr
00027902 <AmiBlitz3.ab2@2496>    MOVE.w oldqflag,instringon
00027908 <AmiBlitz3.ab2@2497>   MOVEA.l lastsourcepos,A5
0002790E <AmiBlitz3.ab2@2498>    JSR findmac                                             ;find macro
00027912 <AmiBlitz3.ab2@2499>    BEQ.w JL_0_3ABE
00027918 <AmiBlitz3.ab2@2500> JMP nomacerr
0002791E <AmiBlitz3.ab2@2503>   TST.b debugmode
00027922 <AmiBlitz3.ab2@2504>   BEQ 'sk1
00027926 <AmiBlitz3.ab2@2505>   MOVE.w #$4e71,d1
0002792C <AmiBlitz3.ab2@2506>   JSR writeword
0002792E <AmiBlitz3.ab2@2507>   MOVE.l a5,-(a7)
00027930 <AmiBlitz3.ab2@2508>   MOVE.l a3,a5
00027932 <AmiBlitz3.ab2@2509>   SUBQ.l #1,a5
0002793A <AmiBlitz3.ab2@2510>   MOVE.w #$0,inmacro
0002793E <AmiBlitz3.ab2@2511>   BSR debugstuffa
00027946 <AmiBlitz3.ab2@2512>   MOVE.w #$FFFF,inmacro
00027948 <AmiBlitz3.ab2@2513>   MOVE.l (a7)+,a5
0002794C <AmiBlitz3.ab2@2514>   MOVE.w #$4e71,d1
00027952 <AmiBlitz3.ab2@2515>   JSR writeword
00027954 <AmiBlitz3.ab2@2518>   MOVEA.l A5,A4
00027958 <AmiBlitz3.ab2@2521>    CMP.b #" ",(a4)+
0002795C <AmiBlitz3.ab2@2522>     BEQ 'l5a
0002795E <AmiBlitz3.ab2@2523>      SUBQ.l#1,a4
00027962 <AmiBlitz3.ab2@2524>      CMP.b #",",(a4)
00027966 <AmiBlitz3.ab2@2525>     BEQ JL_0_3AEA
00027968 <AmiBlitz3.ab2@2528>   MOVEQ.l #$00,D4
0002796E <AmiBlitz3.ab2@2529>   TST.b newsyntax
00027972 <AmiBlitz3.ab2@2530>   BEQ 'l10b
00027976 <AmiBlitz3.ab2@2531>   MOVEM.l a0/d0,-(a7)
0002797A <AmiBlitz3.ab2@2532>   MOVE.l 4(a2),a0
0002797E <AmiBlitz3.ab2@2533>   MOVE.w 8(a2),d0
00027982 <AmiBlitz3.ab2@2536>   CMP.b #"`",(a0)+
00027986 <AmiBlitz3.ab2@2537>   BEQ 'x1
00027988 <AmiBlitz3.ab2@2538>   SUBQ.w #1,d0
0002798C <AmiBlitz3.ab2@2539>   BNE 'x2
00027990 <AmiBlitz3.ab2@2540> BRA 'x3
00027994 <AmiBlitz3.ab2@2543>   MOVEM.l (a7)+,a0/d0
00027998 <AmiBlitz3.ab2@2544> BRA 'l10
0002799C <AmiBlitz3.ab2@2547>   MOVEM.l (a7)+,a0/d0
000279A0 <AmiBlitz3.ab2@2548> BRA JL_0_3AEA
000279A4 <AmiBlitz3.ab2@2551>   CMPI.b #"{",(A4)
000279A8 <AmiBlitz3.ab2@2552>    BNE.w JL_0_3AEA
000279AA <AmiBlitz3.ab2@2556>   ADDQ.l #1,a4
000279AE <AmiBlitz3.ab2@2559>     CMP.b #" ",(a4)
000279B2 <AmiBlitz3.ab2@2560>     BEQ 'l5
000279B6 <AmiBlitz3.ab2@2561>     MOVEM.l a0/d0,-(a7)
000279BC <AmiBlitz3.ab2@2562>     CLR.b exmac
000279C2 <AmiBlitz3.ab2@2563>     LEA chartab,a0
000279C4 <AmiBlitz3.ab2@2564>     MOVEQ #0,d0
000279C6 <AmiBlitz3.ab2@2565>     MOVE.b (a4),d0
000279CA <AmiBlitz3.ab2@2566>     BMI 'm1
000279CE <AmiBlitz3.ab2@2567>     TST.b 0(a0,d0)
000279D2 <AmiBlitz3.ab2@2568>     BEQ 'm1
000279D8 <AmiBlitz3.ab2@2569>     TST.b newsyntax
000279DC <AmiBlitz3.ab2@2570>     BEQ 'ns1
000279E0 <AmiBlitz3.ab2@2571>     CMP.b #"#",d0
000279E4 <AmiBlitz3.ab2@2572>     BEQ 'm1
000279E8 <AmiBlitz3.ab2@2573>     CMP.b #"$",d0
000279EC <AmiBlitz3.ab2@2574>     BEQ 'm1
000279F0 <AmiBlitz3.ab2@2575>     CMP.b #"-",d0
000279F4 <AmiBlitz3.ab2@2576>     BEQ 'm1
000279F8 <AmiBlitz3.ab2@2579>   CMP.b #",",d0
000279FC <AmiBlitz3.ab2@2580>     BEQ 'm1
00027A00 <AmiBlitz3.ab2@2581>     CMP.b #"{",d0
00027A04 <AmiBlitz3.ab2@2582>     BNE 'm1b
00027A06 <AmiBlitz3.ab2@2583>     ADDQ.l #1,a4
00027A0A <AmiBlitz3.ab2@2584> BRA 'm1
00027A10 <AmiBlitz3.ab2@2587>   TST.b newsyntax
00027A14 <AmiBlitz3.ab2@2588>     BEQ 'm1
00027A1C <AmiBlitz3.ab2@2589>     MOVE.b #1,exmac
00027A20 <AmiBlitz3.ab2@2592>   MOVEM.l (a7)+,a0/d0
00027A26 <AmiBlitz3.ab2@2593>     TST.b exmac
00027A2A <AmiBlitz3.ab2@2594>     BNE JL_0_3AEA
00027A2C <AmiBlitz3.ab2@2601>   TST.b (a4)
00027A30 <AmiBlitz3.ab2@2602>   BEQ JL_0_3AEA
00027A36 <AmiBlitz3.ab2@2605>   MOVEA.l ptr_macrobuffer_begin,A0
00027A38 <AmiBlitz3.ab2@2608>   ADDQ.w #1,D4
00027A3A <AmiBlitz3.ab2@2609>   MOVE.l A4,(A0)
00027A3E <AmiBlitz3.ab2@2610>   CLR.w 4(a0)
00027A42 <AmiBlitz3.ab2@2611>    BSR.w JL_0_3CC6
00027A44 <AmiBlitz3.ab2@2613>   ADDQ.l #4,a0
00027A46 <AmiBlitz3.ab2@2617>   SUBQ.w #1,(a0)+
00027A4A <AmiBlitz3.ab2@2618>   CMP.b #$7D,D0
00027A4E <AmiBlitz3.ab2@2619>   BEQ 'l10
00027A50 <AmiBlitz3.ab2@2620>   TST.b d0
00027A54 <AmiBlitz3.ab2@2621>   BEQ 'l10
00027A58 <AmiBlitz3.ab2@2622> BRA JL_0_3AD0
00027A5E <AmiBlitz3.ab2@2626>   CLR.l sourceline3
00027A60 <AmiBlitz3.ab2@2627>   MOVEA.l A4,A5
00027A66 <AmiBlitz3.ab2@2630>   MOVE.w D4,numarg
00027A6C <AmiBlitz3.ab2@2637>   MOVE.l #$01,D1
00027A72 <AmiBlitz3.ab2@2638>   MOVEA.l _execbase,A6
00027A78 <AmiBlitz3.ab2@2639>   MOVE.l mempool,a0
00027A7E <AmiBlitz3.ab2@2640>   MOVE.l macrobuffer_size,D0
00027A84 <AmiBlitz3.ab2@2641>   CMP.l #40000,d0
00027A88 <AmiBlitz3.ab2@2642>   BGE 'l1m
00027A8E <AmiBlitz3.ab2@2643>   MOVE.l #40000,d0
00027A94 <AmiBlitz3.ab2@2644>   MOVE.l d0,macrobuffer_size
00027A98 <AmiBlitz3.ab2@2647>   JSR _AllocPooled(a6)
00027AA2 <AmiBlitz3.ab2@2649>   MOVE.l myline,myoline
00027AA4 <AmiBlitz3.ab2@2652>   ADDQ.l #1,d0
00027AAA <AmiBlitz3.ab2@2653>   MOVE.l D0,myline
00027AAC <AmiBlitz3.ab2@2654>   MOVEA.l D0,A1
00027AB2 <AmiBlitz3.ab2@2655>   MOVE.b #":",-1(a1)
00027AB4 <AmiBlitz3.ab2@2656>   MOVEA.l A1,A6
00027ABA <AmiBlitz3.ab2@2657>   ADDA.l macrobuffer_size,A6
00027ABC <AmiBlitz3.ab2@2658>   MOVEA.l (A7)+,A0
00027ABE <AmiBlitz3.ab2@2661>   CMPA.l A6,A1
00027AC2 <AmiBlitz3.ab2@2662>    BCC.w mbovererr
00027AC4 <AmiBlitz3.ab2@2663>   MOVE.b (A0)+,(a1)+
00027AC6 <AmiBlitz3.ab2@2664>   CMPA.l A3,A0
00027ACA <AmiBlitz3.ab2@2665>    BCS.w JL_0_3B1E
00027ACC <AmiBlitz3.ab2@2666>   SUBQ.w #1,A1
00027AD0 <AmiBlitz3.ab2@2667>   MOVE.w $8(A2),D1
00027AD4 <AmiBlitz3.ab2@2668>    BEQ.w JL_0_3C70
00027ADC <AmiBlitz3.ab2@2669>   MOVE.w $A(A2),macnum
00027AE0 <AmiBlitz3.ab2@2670>   ADDQ.w #1,$A(A2)
00027AE4 <AmiBlitz3.ab2@2671>   MOVEA.l $4(A2),A2
00027AE6 <AmiBlitz3.ab2@2672>   SUBQ.w #1,D1
00027AEC <AmiBlitz3.ab2@2673>   CLR.b firstmline
00027AEE <AmiBlitz3.ab2@2676>     MOVEQ.l #$00,D0
00027AF0 <AmiBlitz3.ab2@2677>     MOVE.b (A2)+,D0
00027AF6 <AmiBlitz3.ab2@2678>     TST.b firstmline
00027AFA <AmiBlitz3.ab2@2679>     BNE 'c1
00027AFE <AmiBlitz3.ab2@2680>     CMP.b #$22,d0
00027B02 <AmiBlitz3.ab2@2681>     BNE 's1
00027B0A <AmiBlitz3.ab2@2682>     MOVE.b #1,firstmline
00027B0E <AmiBlitz3.ab2@2685>     CMP.b #":",d0
00027B12 <AmiBlitz3.ab2@2686>     BNE 'm1
00027B1A <AmiBlitz3.ab2@2687>     MOVE.b #1,firstmline
00027B1E <AmiBlitz3.ab2@2690>     CMP.b #";",d0
00027B22 <AmiBlitz3.ab2@2691>     BNE 'c1
00027B24 <AmiBlitz3.ab2@2694>     SUBQ.w #1,d1                                           ;filter out comment
00027B26 <AmiBlitz3.ab2@2695>     MOVE.b (a2)+,d0
00027B2C <AmiBlitz3.ab2@2696>     CMP.w #":@",-1(a2)
00027B30 <AmiBlitz3.ab2@2697>     BEQ 'c2
00027B32 <AmiBlitz3.ab2@2698>     TST.w d1
00027B36 <AmiBlitz3.ab2@2699>     BNE 'l1
00027B3A <AmiBlitz3.ab2@2700>   BRA JL_0_3C6C
00027B40 <AmiBlitz3.ab2@2703>     CMP.b #":",1(a2)
00027B44 <AmiBlitz3.ab2@2704>       BNE 'l1
00027B46 <AmiBlitz3.ab2@2705>       ADDQ #2,a2
00027B48 <AmiBlitz3.ab2@2706>       SUBQ #3,d1
00027B4A <AmiBlitz3.ab2@2707>       MOVE.b (a2)+,d0
00027B52 <AmiBlitz3.ab2@2708>       MOVE.b #1,firstmline
00027B56 <AmiBlitz3.ab2@2711>     CMP.b #"`",D0
00027B5A <AmiBlitz3.ab2@2712>      BNE.w JL_0_3C56
00027B5C <AmiBlitz3.ab2@2713>     SUBQ.w #1,D1
00027B5E <AmiBlitz3.ab2@2714>     MOVE.b (A2)+,D0
00027B62 <AmiBlitz3.ab2@2715>     CMP.w #$7B,D0
00027B66 <AmiBlitz3.ab2@2716>      BEQ.w JL_0_3BB6
00027B6A <AmiBlitz3.ab2@2717>     CMP.w #$40,D0
00027B6E <AmiBlitz3.ab2@2718>      BNE.w JL_0_3B82
00027B70 <AmiBlitz3.ab2@2719>     MOVEQ.l #$00,D2
00027B76 <AmiBlitz3.ab2@2720>     MOVE.w macnum,D2
00027B78 <AmiBlitz3.ab2@2721>     MOVEA.l A1,A0
00027B7A <AmiBlitz3.ab2@2722>     MOVE.w D1,-(A7)
00027B80 <AmiBlitz3.ab2@2723>      JSR makelong
00027B82 <AmiBlitz3.ab2@2724>     MOVEA.l A0,A1
00027B84 <AmiBlitz3.ab2@2725>     MOVE.w (A7)+,D1
00027B88 <AmiBlitz3.ab2@2726>   BRA.w JL_0_3C6C
00027B8C <AmiBlitz3.ab2@2729>     ORI.w #$20,D0
00027B90 <AmiBlitz3.ab2@2730>     CMP.w #$7A,D0
00027B94 <AmiBlitz3.ab2@2731>      BCS.w JL_0_3B94
00027B9A <AmiBlitz3.ab2@2732>   JMP ilconsterr
00027B9E <AmiBlitz3.ab2@2735>     SUBI.w #$30,D0
00027BA2 <AmiBlitz3.ab2@2736>     CMP.w #$A,D0
00027BA6 <AmiBlitz3.ab2@2737>      BCS.w JL_0_3BF2
00027BAA <AmiBlitz3.ab2@2738>     SUBI.w #$27,D0
00027BAE <AmiBlitz3.ab2@2739>     CMP.w #$A,D0
00027BB2 <AmiBlitz3.ab2@2740>      BCC.w JL_0_3BB2
00027BB8 <AmiBlitz3.ab2@2741>   JMP ilconsterr
00027BBC <AmiBlitz3.ab2@2744>   BRA.w JL_0_3BF2
00027BBE <AmiBlitz3.ab2@2747>     MOVE.l A5,-(A7)
00027BC2 <AmiBlitz3.ab2@2748>     MOVEM.l D1/A1-A2/A6,-(A7)
00027BC4 <AmiBlitz3.ab2@2749>     MOVEA.l A2,A5
00027BCA <AmiBlitz3.ab2@2750>      JSR AJL_0_BF6E
00027BCE <AmiBlitz3.ab2@2751>     CMP.w #$7D,D0
00027BD2 <AmiBlitz3.ab2@2752>      BEQ.w JL_0_3BD2
00027BD8 <AmiBlitz3.ab2@2753>   JMP syntaxerr
00027BDC <AmiBlitz3.ab2@2756>     MOVEM.l (A7)+,D1/A1-A2/A6
00027BDE <AmiBlitz3.ab2@2757>     MOVE.l A5,D2
00027BE0 <AmiBlitz3.ab2@2758>     SUB.l A2,D2
00027BE2 <AmiBlitz3.ab2@2759>     SUB.w D2,D1
00027BE4 <AmiBlitz3.ab2@2760>     MOVEA.l A5,A2
00027BEA <AmiBlitz3.ab2@2761>     CLR.w instringon
00027BEC <AmiBlitz3.ab2@2762>     MOVEA.l (A7)+,A5
00027BEE <AmiBlitz3.ab2@2763>     MOVE.l D3,D0
00027BF2 <AmiBlitz3.ab2@2764>     BPL.w JL_0_3BF2
00027BF8 <AmiBlitz3.ab2@2765>   JMP ilconsterr
00027BFA <AmiBlitz3.ab2@2768>     SUBQ.w #1,D0
00027BFE <AmiBlitz3.ab2@2769>      BPL.w JL_0_3C20
00027C04 <AmiBlitz3.ab2@2773>     MOVE.w numarg,D0
00027C08 <AmiBlitz3.ab2@2774>     DIVU #$A,D0
00027C0C <AmiBlitz3.ab2@2775>     ADDI.w #$30,D0
00027C0E <AmiBlitz3.ab2@2776>     CMPA.l A6,A1
00027C12 <AmiBlitz3.ab2@2777>      BCC.w mbovererr
00027C14 <AmiBlitz3.ab2@2778>     MOVE.b D0,(A1)+
00027C16 <AmiBlitz3.ab2@2779>     SWAP D0
00027C1A <AmiBlitz3.ab2@2780>     ADDI.w #$30,D0
00027C1C <AmiBlitz3.ab2@2781>     CMPA.l A6,A1
00027C20 <AmiBlitz3.ab2@2782>      BCC.w mbovererr
00027C22 <AmiBlitz3.ab2@2783>     MOVE.b D0,(A1)+
00027C26 <AmiBlitz3.ab2@2784>   BRA.w JL_0_3C6C
00027C2C <AmiBlitz3.ab2@2790>     CMP.w numarg,D0
00027C30 <AmiBlitz3.ab2@2791>      BCC.w JL_0_3C6C
00027C32 <AmiBlitz3.ab2@2792>     LSL.w #1,D0
00027C34 <AmiBlitz3.ab2@2793>     MOVE.w D0,D4
00027C36 <AmiBlitz3.ab2@2794>     LSL.w #1,D0
00027C38 <AmiBlitz3.ab2@2795>     ADD.w D4,D0
00027C3E <AmiBlitz3.ab2@2796>     MOVEA.l ptr_macrobuffer_begin,A0
00027C40 <AmiBlitz3.ab2@2797>     ADDA.w D0,A0
00027C44 <AmiBlitz3.ab2@2798>     MOVE.w $4(A0),D4
00027C48 <AmiBlitz3.ab2@2799>      BEQ.w JL_0_3C6C
00027C4A <AmiBlitz3.ab2@2800>     MOVEA.l (A0),A0
00027C4C <AmiBlitz3.ab2@2801>     SUBQ.w #1,D4
00027C4E <AmiBlitz3.ab2@2804>       CMPA.l A6,A1
00027C52 <AmiBlitz3.ab2@2805>        BCC.w mbovererr
00027C56 <AmiBlitz3.ab2@2806>       CMP.w #"@@",(a0)
00027C5A <AmiBlitz3.ab2@2807>        BNE 'l10
00027C60 <AmiBlitz3.ab2@2808>       TST.w ininclude
00027C64 <AmiBlitz3.ab2@2809>        BNE errorjoin
00027C6A <AmiBlitz3.ab2@2812>       MOVE.l sourceline,a0
00027C6C <AmiBlitz3.ab2@2813>       MOVE.l (a0),a0
00027C72 <AmiBlitz3.ab2@2814>       CMP.l #0,a0
00027C76 <AmiBlitz3.ab2@2815>       BNE 'l11
00027C78 <AmiBlitz3.ab2@2816>       MOVEQ #0,d0
00027C7E <AmiBlitz3.ab2@2817>       JSR error
00027C84 <AmiBlitz3.ab2@2820>       MOVE.l a0,sourceline
00027C8A <AmiBlitz3.ab2@2821>       ADDQ.l #1,linenumat
00027C8E <AmiBlitz3.ab2@2822>       LEA 9(a0),a0
00027C90 <AmiBlitz3.ab2@2823>       MOVE.l a0,-(a7)
00027C94 <AmiBlitz3.ab2@2826>       CMP.b #" ",(a0)+
00027C98 <AmiBlitz3.ab2@2827>        BEQ 'l110
00027C9E <AmiBlitz3.ab2@2828>       CMP.b #";",-1(a0)
00027CA0 <AmiBlitz3.ab2@2829>       MOVE.l (a7)+,a0
00027CA4 <AmiBlitz3.ab2@2830>        BEQ 'l111
00027CA6 <AmiBlitz3.ab2@2831>       SUBQ.l #1,d4
00027CA8 <AmiBlitz3.ab2@2834>       MOVE.b (A0)+,(A1)+
00027CAC <AmiBlitz3.ab2@2835>     DBF D4,JL_0_3C46
00027CB0 <AmiBlitz3.ab2@2837>   BRA.w JL_0_3C6C
00027CB2 <AmiBlitz3.ab2@2840>     CMPA.l A6,A1
00027CB6 <AmiBlitz3.ab2@2841>      BCC.w mbovererr
00027CB8 <AmiBlitz3.ab2@2842>     MOVE.b D0,(A1)+
00027CBC <AmiBlitz3.ab2@2843>      BPL.w JL_0_3C6C
00027CBE <AmiBlitz3.ab2@2844>     CMPA.l A6,A1
00027CC2 <AmiBlitz3.ab2@2845>      BCC.w mbovererr
00027CC4 <AmiBlitz3.ab2@2846>     MOVE.b (A2)+,(A1)+
00027CC6 <AmiBlitz3.ab2@2847>     SUBQ.w #1,D1
00027CCA <AmiBlitz3.ab2@2850>   DBF D1,JL_0_3B48
00027CCC <AmiBlitz3.ab2@2860>   CMPA.l A6,A1
00027CD0 <AmiBlitz3.ab2@2861>    BCC.w mbovererr
00027CD2 <AmiBlitz3.ab2@2862>   MOVE.b (A5)+,(A1)+
00027CD6 <AmiBlitz3.ab2@2863>    BNE.w JL_0_3C70
00027CDC <AmiBlitz3.ab2@2864>   MOVEA.l myline,A5
00027CE2 <AmiBlitz3.ab2@2865>   MOVE.l myoline,D0
00027CE6 <AmiBlitz3.ab2@2866>    BEQ.w JL_0_3C9C
00027CE8 <AmiBlitz3.ab2@2867>   SUBQ.l #1,d0
00027CEA <AmiBlitz3.ab2@2868>   MOVEA.l D0,A1
00027CF0 <AmiBlitz3.ab2@2869>   MOVE.l macrobuffer_size,D0
00027CF6 <AmiBlitz3.ab2@2870>   MOVEA.l _execbase,A6
00027CFC <AmiBlitz3.ab2@2871>   MOVE.l mempool,a0
00027D00 <AmiBlitz3.ab2@2872>   JSR _FreePooled(A6)
00027D04 <AmiBlitz3.ab2@2875> BRA.w JL_0_3A46
00027D06 <AmiBlitz3.ab2@2878>   MOVEA.l (A7)+,A5
00027D08 <AmiBlitz3.ab2@2879> RTS
00027D0E <AmiBlitz3.ab2@2883>   MOVE.l myline,D0
00027D12 <AmiBlitz3.ab2@2884>   BEQ.w JL_0_3CC4
00027D14 <AmiBlitz3.ab2@2885>   SUBQ.l #1,d0
00027D1A <AmiBlitz3.ab2@2886>   CLR.l myline
00027D1C <AmiBlitz3.ab2@2887>   MOVEA.l D0,A1
00027D22 <AmiBlitz3.ab2@2888>   MOVE.l macrobuffer_size,D0
00027D28 <AmiBlitz3.ab2@2889>   MOVEA.l _execbase,A6
00027D2E <AmiBlitz3.ab2@2890>   MOVE.l mempool,a0
00027D32 <AmiBlitz3.ab2@2891> JMP _FreePooled(A6)
00027D34 <AmiBlitz3.ab2@2894> RTS
00027D36 <AmiBlitz3.ab2@2898>   MOVEQ.l #$00,D2
00027D3A <AmiBlitz3.ab2@2901>   ADDQ.w #1,4(a0)
00027D3C <AmiBlitz3.ab2@2902>    MOVE.b (A4)+,D0
00027D40 <AmiBlitz3.ab2@2904>    BEQ exit1
00027D44 <AmiBlitz3.ab2@2905>    BPL.w JL_0_3CD8
00027D48 <AmiBlitz3.ab2@2906>   ADDQ.w #1,4(a0)
00027D4A <AmiBlitz3.ab2@2907>   ADDQ.w #1,A4
00027D4E <AmiBlitz3.ab2@2908> BRA.w JL_0_3CC8
00027D54 <AmiBlitz3.ab2@2911>    TST.w instringon
00027D58 <AmiBlitz3.ab2@2912>    BNE 'lnom
00027D5C <AmiBlitz3.ab2@2913>    CMP.b #";",d0
00027D60 <AmiBlitz3.ab2@2914>    BEQ exit2
00027D64 <AmiBlitz3.ab2@2915>    CMP.b #":",d0
00027D68 <AmiBlitz3.ab2@2916>    BEQ exit2
00027D6C <AmiBlitz3.ab2@2919>   CMP.b #$22,D0
00027D70 <AmiBlitz3.ab2@2920>    BNE.w JL_0_3CEA
00027D76 <AmiBlitz3.ab2@2921>   NOT.w instringon
00027D7A <AmiBlitz3.ab2@2922> BRA.w JL_0_3CC8
00027D80 <AmiBlitz3.ab2@2926>   TST.w instringon
00027D84 <AmiBlitz3.ab2@2927>    BNE.w JL_0_3CC8
00027D88 <AmiBlitz3.ab2@2928>    CMP.b #"@",d0
00027D8C <AmiBlitz3.ab2@2929>    BNE 'l10
00027D90 <AmiBlitz3.ab2@2930>    CMP.b #"@",(a4)
00027D94 <AmiBlitz3.ab2@2931>    BNE 'l10
00027D9A <AmiBlitz3.ab2@2932>    TST.w ininclude
00027D9E <AmiBlitz3.ab2@2933>    BNE errorjoin
00027DA4 <AmiBlitz3.ab2@2934>    MOVE.l sourceline3,a4
00027DAA <AmiBlitz3.ab2@2935>    CMP.l #0,a4
00027DAE <AmiBlitz3.ab2@2936>    BNE 'l11
00027DB4 <AmiBlitz3.ab2@2937>    MOVE.l sourceline,a4
00027DB6 <AmiBlitz3.ab2@2940>   MOVE.l (a4),a4
00027DBC <AmiBlitz3.ab2@2941>       CMP.l #0,a4
00027DC0 <AmiBlitz3.ab2@2942>       BNE 'l12
00027DC2 <AmiBlitz3.ab2@2943>       MOVEQ #0,d0
00027DC8 <AmiBlitz3.ab2@2944>       JSR error
00027DCE <AmiBlitz3.ab2@2947>    MOVE.l a4,sourceline3
00027DD2 <AmiBlitz3.ab2@2948>    LEA 9(a4),a4
00027DD4 <AmiBlitz3.ab2@2949>    MOVEQ #",",d0
00027DD8 <AmiBlitz3.ab2@2952>   CMP.b #$2C,D0
00027DDC <AmiBlitz3.ab2@2953>    BNE.w JL_0_3D06
00027DDE <AmiBlitz3.ab2@2954>   TST.w D2
00027DE2 <AmiBlitz3.ab2@2955>    BEQ.w JL_0_3D30
00027DE6 <AmiBlitz3.ab2@2956> BRA.w JL_0_3CC8
00027DEA <AmiBlitz3.ab2@2960>    CMP.b #$7B,D0                                           ;"{"
00027DEE <AmiBlitz3.ab2@2961>    BEQ.w 'l10
00027DF2 <AmiBlitz3.ab2@2962>   CMP.b #$28,D0                                            ;"("
00027DF6 <AmiBlitz3.ab2@2965>    BNE.w JL_0_3D14
00027DF8 <AmiBlitz3.ab2@2966>   ADDQ.w #1,D2
00027DFC <AmiBlitz3.ab2@2967> BRA.w JL_0_3CC8
00027E00 <AmiBlitz3.ab2@2970>   CMP.b #$7D,D0                                           ;"}"
00027E04 <AmiBlitz3.ab2@2971>    BNE.w JL_0_3D22
00027E06 <AmiBlitz3.ab2@2972>  TST.w D2
00027E0A <AmiBlitz3.ab2@2973>    BEQ.w JL_0_3D30
00027E0E <AmiBlitz3.ab2@2977>    CMP.b #$7D,D0                                           ;"}"
00027E12 <AmiBlitz3.ab2@2978>    BEQ.w 'l10
00027E16 <AmiBlitz3.ab2@2979>   CMP.b #$29,D0                                            ;")"
00027E1A <AmiBlitz3.ab2@2982>    BNE.w JL_0_3CC8
00027E1C <AmiBlitz3.ab2@2983>   SUBQ.w #1,D2
00027E20 <AmiBlitz3.ab2@2984> BRA.w JL_0_3CC8
00027E22 <AmiBlitz3.ab2@2987> RTS
00027E24 <AmiBlitz3.ab2@2991>       SUBQ.l #1,a4
00027E2A <AmiBlitz3.ab2@2992>       CLR.l sourceline3
00027E2C <AmiBlitz3.ab2@2993> RTS
00027E2E <AmiBlitz3.ab2@2997>       MOVEQ #0,d0
00027E30 <AmiBlitz3.ab2@2998>       SUBQ.l #1,a4
00027E36 <AmiBlitz3.ab2@2999>       CLR.l sourceline3
00027E38 <AmiBlitz3.ab2@3000> RTS
00027E3C <AmiBlitz3.ab2@3004>   CMP.b #$7B,D0                                            ;"{"
00027E40 <AmiBlitz3.ab2@3005>   BEQ.w JL_0_3D3E
00027E44 <AmiBlitz3.ab2@3006>   CMP.b #$28,D0                                            ;"("
00027E46 <AmiBlitz3.ab2@3009> RTS
00027E4A <AmiBlitz3.ab2@3013>   CMP.b #$7D,D0                                            ;"}"
00027E4E <AmiBlitz3.ab2@3014>   BEQ.w JL_0_3D4C
00027E52 <AmiBlitz3.ab2@3015>   CMP.b #$29,D0                                            ;")"
00027E54 <AmiBlitz3.ab2@3018> RTS
00027E56 <AmiBlitz3.ab2@3022> stopit:     Ds.w 1
00027E58 <AmiBlitz3.ab2@3023> clrreq:     Ds.w 1
00027E5C <AmiBlitz3.ab2@3044>   MOVE.w clrreq(PC),D0
00027E60 <AmiBlitz3.ab2@3045>    BEQ.w close_compilewin__skip
00027E8A <AmiBlitz3.ab2@3047>   !basic
00027EC6 <AmiBlitz3.ab2@3048>   If Peek.l(Addr Window(4))<>0 Then WZCloseWindow 4        ;turn off the requester
00027EE4 <AmiBlitz3.ab2@3049>   !asm
00027EEA <AmiBlitz3.ab2@3050>   LEA clrreq,a0
00027EEC <AmiBlitz3.ab2@3051>   NOT.w (a0)                                               ;reass
00027EF2 <AmiBlitz3.ab2@3052>   MOVEA.l ptr_ThisTask,A0
00027EF6 <AmiBlitz3.ab2@3053>   CLR.l $1E(A0)
00027EFA <AmiBlitz3.ab2@3054>   CLR.l $2A(A0)
00027EFC <AmiBlitz3.ab2@3057> RTS
00027EFE <AmiBlitz3.ab2@3060> intsused:  Ds.w 1
00027F06 <AmiBlitz3.ab2@3064>   MOVE.w #-1,blitzoff
00027F0C <AmiBlitz3.ab2@3065>   CLR.w intsused
00027F12 <AmiBlitz3.ab2@3066>   CLR.w anyerrs
00027F18 <AmiBlitz3.ab2@3067>   CLR.w blitzmode
00027F1E <AmiBlitz3.ab2@3068>   CLR.w dontwrite                                              ;nomemleft
00027F24 <AmiBlitz3.ab2@3069>   CLR.w constmode
00027F2A <AmiBlitz3.ab2@3070>   CLR.w cmake
00027F30 <AmiBlitz3.ab2@3071>   CLR.w cfetchmode
00027F36 <AmiBlitz3.ab2@3072>   CLR.l intdata1
00027F3C <AmiBlitz3.ab2@3073>   CLR.w fuckpos
00027F42 <AmiBlitz3.ab2@3074>   CLR.w procnum
00027F48 <AmiBlitz3.ab2@3075>   CLR.w procnum2
00027F4E <AmiBlitz3.ab2@3076>   CLR.w dfetch
00027F54 <AmiBlitz3.ab2@3077>   CLR.l titleat
00027F5A <AmiBlitz3.ab2@3078>   CLR.b usedpath
00027F60 <AmiBlitz3.ab2@3079>   CLR.b path2
00027F66 <AmiBlitz3.ab2@3080>   CLR.w inerr
00027F6C <AmiBlitz3.ab2@3081>   CLR.w intlevel
00027F72 <AmiBlitz3.ab2@3082>   CLR.l cont_pc
00027F78 <AmiBlitz3.ab2@3083>   CLR.l cont_pc2
00027F7E <AmiBlitz3.ab2@3084>   CLR.l lastcontlink
00027F88 <AmiBlitz3.ab2@3085>   MOVE.l destbufferstart,destpointer
00027F92 <AmiBlitz3.ab2@3086>   MOVE.l destbufferstart,bigpc
00027F9C <AmiBlitz3.ab2@3087>   MOVE.l destbufferend,libend
00027FA6 <AmiBlitz3.ab2@3088>   MOVE.l data1start,data1
00027FB0 <AmiBlitz3.ab2@3089>   MOVE.l data2at,data2
00027FB8 <AmiBlitz3.ab2@3090>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00027FC0 <AmiBlitz3.ab2@3091>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00027FC6 <AmiBlitz3.ab2@3092>   CLR.w oldvcodelen
00027FCC <AmiBlitz3.ab2@3093>   CLR.b lastgloballabel                                    ;lastbiglab org source
00027FCE <AmiBlitz3.ab2@3094> RTS
00027FD0 <AmiBlitz3.ab2@3097> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00027FD6 <AmiBlitz3.ab2@3101>   LEA  clrreq,a1
00027FDA <AmiBlitz3.ab2@3102>   MOVE.w #2000,(a1)
00028004 <AmiBlitz3.ab2@3103>   !basic
00028018 <AmiBlitz3.ab2@3104>   If CLIMode=False
00028034 <AmiBlitz3.ab2@3105>     FindScreen 0
00028092 <AmiBlitz3.ab2@3106>     WZWindow 4,?wzgui,64,-2,-2,-2,-2,4
0002809A <AmiBlitz3.ab2@3110>   calcpro_old.l = 0
000280A6 <AmiBlitz3.ab2@3111>   typ_old.l     = -1
000280B2 <AmiBlitz3.ab2@3112>   pass_old.l    = -1
000280D0 <AmiBlitz3.ab2@3113>   !asm
000280D6 <AmiBlitz3.ab2@3114>   CLR.w stopit
000280D8 <AmiBlitz3.ab2@3115> RTS
000280DE <AmiBlitz3.ab2@3119>   CLR.w storedebugmode
000280E4 <AmiBlitz3.ab2@3120>   CLR.b iserror
000280E8 <AmiBlitz3.ab2@3121>   BSR.w compilerequester
000280F2 <AmiBlitz3.ab2@3123>   MOVE.l #0,globallinecount
000280F8 <AmiBlitz3.ab2@3124>   JSR check_of_same_source
000280FC <AmiBlitz3.ab2@3125>   BSR.w call_setpointerbusy
00028100 <AmiBlitz3.ab2@3126>   BSR.w setcvars
00028108 <AmiBlitz3.ab2@3127>   MOVE.w #$8000,globalvarpointer
00028112 <AmiBlitz3.ab2@3128>   MOVE.l #newtype_quick,defaulttype
00028118 <AmiBlitz3.ab2@3129>   MOVE.l A7,passstack
00028122 <AmiBlitz3.ab2@3130>   MOVE.l #firstitem_,sourceline
0002812C <AmiBlitz3.ab2@3131>   MOVE.w numlines_org,linesleft
00028136 <AmiBlitz3.ab2@3132>   MOVE.l numlines,numlines2
0002813C <AmiBlitz3.ab2@3133>   ADDQ.w #1,linesleft
00028142 <AmiBlitz3.ab2@3134>   ADDQ.l #1,numlines2
0002814C <AmiBlitz3.ab2@3135>   MOVE.l #-1,linenumat
00028150 <AmiBlitz3.ab2@3136>   BSR.w resetlibs
00028154 <AmiBlitz3.ab2@3137>   BSR.w Aclearallvars
0002815A <AmiBlitz3.ab2@3138>   LEA progress_per_line+2,A0
0002815C <AmiBlitz3.ab2@3139>   MOVEQ.l #$03,D0
0002815E <AmiBlitz3.ab2@3142>     CLR.w (A0)+
00028162 <AmiBlitz3.ab2@3143>   DBF D0,JL_0_40EC
00028168 <AmiBlitz3.ab2@3146>   LEA _include,a0
0002816C <AmiBlitz3.ab2@3147>   MOVEM.l a0-a6/d0-d7,-(a7)
00028172 <AmiBlitz3.ab2@3148>   LEA ptr_parameterstore,a1
00028174 <AmiBlitz3.ab2@3151>     MOVE.b (a0)+,(a1)+
00028178 <AmiBlitz3.ab2@3152>   BNE 'l1b
0002817A <AmiBlitz3.ab2@3154>   MOVEQ #9,d2
00028180 <AmiBlitz3.ab2@3155>   JSR findlabel2
00028184 <AmiBlitz3.ab2@3156>   BNE 'd
0002818C <AmiBlitz3.ab2@3157>   MOVE.l #0,8(a2)
00028190 <AmiBlitz3.ab2@3158>   MOVEM.l (a7)+,a0-a6/d0-d7
00028194 <AmiBlitz3.ab2@3159> BRA 'd2
0002819A <AmiBlitz3.ab2@3162>   JSR addlabelhash
000281A2 <AmiBlitz3.ab2@3163>   MOVE.l #$1,$4(A2)
000281AA <AmiBlitz3.ab2@3164>   MOVE.l #0,8(a2)
000281AE <AmiBlitz3.ab2@3165>   MOVEM.l (a7)+,a0-a6/d0-d7
000281B4 <AmiBlitz3.ab2@3168>   LEA _debug,a0
000281B8 <AmiBlitz3.ab2@3169>   MOVEM.l a0-a6/d0-d7,-(a7)
000281BE <AmiBlitz3.ab2@3170>   LEA ptr_parameterstore,a1
000281C0 <AmiBlitz3.ab2@3173>     MOVE.b (a0)+,(a1)+
000281C4 <AmiBlitz3.ab2@3174>   BNE 'l9b
000281C6 <AmiBlitz3.ab2@3176>   MOVEQ #7,d2
000281CC <AmiBlitz3.ab2@3177>   JSR findlabel2
000281D0 <AmiBlitz3.ab2@3178>   BNE 'd9
000281D4 <AmiBlitz3.ab2@3179>   MOVE.b debugmode(PC),D0
000281D6 <AmiBlitz3.ab2@3180>   EXT.w d0
000281D8 <AmiBlitz3.ab2@3181>   EXT.l d0
000281DC <AmiBlitz3.ab2@3182>   MOVE.l d0,8(a2)
000281E0 <AmiBlitz3.ab2@3183>   MOVEM.l (a7)+,a0-a6/d0-d7
000281E4 <AmiBlitz3.ab2@3184> BRA 'd9b
000281EA <AmiBlitz3.ab2@3187>   JSR addlabelhash
000281F2 <AmiBlitz3.ab2@3188>   MOVE.l #$1,$4(A2)
000281F6 <AmiBlitz3.ab2@3189>   MOVE.b debugmode(PC),D0
000281F8 <AmiBlitz3.ab2@3190>   EXT.w d0
000281FA <AmiBlitz3.ab2@3191>   EXT.l d0
000281FE <AmiBlitz3.ab2@3192>   MOVE.l d0,8(a2)
00028202 <AmiBlitz3.ab2@3193>   MOVEM.l (a7)+,a0-a6/d0-d7
00028208 <AmiBlitz3.ab2@3196>   MOVE.l #firstitem_,a0
0002820A <AmiBlitz3.ab2@3197>   MOVE.l (a0),a0
0002820E <AmiBlitz3.ab2@3198>   LEA 9(a0),a0
00028216 <AmiBlitz3.ab2@3199>   MOVE.w #0,exdebug
0002821C <AmiBlitz3.ab2@3200>   TST.b debugmode
00028220 <AmiBlitz3.ab2@3201>    BEQ 'l10
00028222 <AmiBlitz3.ab2@3204>   MOVE.b (a0)+,d0
00028226 <AmiBlitz3.ab2@3205>    BEQ 'l10
0002822A <AmiBlitz3.ab2@3206>   CMP.b #$20,d0
0002822E <AmiBlitz3.ab2@3207>    BEQ 'l2
00028230 <AmiBlitz3.ab2@3208>   SUBQ.l #1,a0
00028236 <AmiBlitz3.ab2@3209>   CMP.l #"DEBU",(a0)
0002823A <AmiBlitz3.ab2@3210>    BNE 'l10
00028240 <AmiBlitz3.ab2@3211>   CMP.b #"G",4(a0)
00028244 <AmiBlitz3.ab2@3212>    BNE 'l10
0002824C <AmiBlitz3.ab2@3213>   MOVE.w #$0,debugversion
00028254 <AmiBlitz3.ab2@3214>   MOVE.b #1,exdebug
0002825A <AmiBlitz3.ab2@3217>   LEA nops4,A0
00028260 <AmiBlitz3.ab2@3218>   LEA dataget,A1
00028266 <AmiBlitz3.ab2@3219>   JSR pokecode2                                            ;write intro nops
0002826C <AmiBlitz3.ab2@3220>   MOVE.l #$01010101,d1
00028272 <AmiBlitz3.ab2@3221>   JSR writedatalong                                        ;for the 4 tempregs
00028278 <AmiBlitz3.ab2@3222>   JSR writedatalong
0002827E <AmiBlitz3.ab2@3223>   JSR writedatalong
00028284 <AmiBlitz3.ab2@3224>   JSR writedatalong
0002828A <AmiBlitz3.ab2@3225>   TST.b saved0
0002828E <AmiBlitz3.ab2@3226>    BEQ 'l1
00028294 <AmiBlitz3.ab2@3227>   MOVE.l #$4e714e71,d1
0002829A <AmiBlitz3.ab2@3228>   JSR writelong                                            ;add 2 nops
000282A0 <AmiBlitz3.ab2@3229>   MOVE.l #$4e714e71,d1
000282A6 <AmiBlitz3.ab2@3230>   JSR writelong                                            ;add 2 nops
000282AC <AmiBlitz3.ab2@3231>   MOVE.l #$4e714e71,d1
000282B2 <AmiBlitz3.ab2@3232>   JSR writelong                                            ;add 2 nops
000282B8 <AmiBlitz3.ab2@3233>    MOVE.l #$4e714e71,d1
000282BE <AmiBlitz3.ab2@3234>   JSR writelong                                            ;add 2 nops
000282C2 <AmiBlitz3.ab2@3237>   MOVE.b debugmode(PC),D1
000282C6 <AmiBlitz3.ab2@3238>    BEQ.b JL_0_4132
000282D0 <AmiBlitz3.ab2@3239>   MOVE.b debugmode,storedebugmode
000282D4 <AmiBlitz3.ab2@3240>   MOVE.w #$FFDC,D1
000282D8 <AmiBlitz3.ab2@3241>    BSR.w uselib
000282DE <AmiBlitz3.ab2@3242>   TST.w debugversion                                       ;make a version for debugger
000282E2 <AmiBlitz3.ab2@3243>    BNE.b JL_0_412A
000282E6 <AmiBlitz3.ab2@3247>   MOVE.w #$FA3C,D1
000282EA <AmiBlitz3.ab2@3248>    BSR.w uselib
000282EE <AmiBlitz3.ab2@3249>   MOVE.w #$0001,D1
000282F2 <AmiBlitz3.ab2@3250>    BSR.w uselib
000282F6 <AmiBlitz3.ab2@3251> BRA.b JL_0_4132
000282FA <AmiBlitz3.ab2@3254>   MOVE.w #$FA32,D1
000282FE <AmiBlitz3.ab2@3255>   BSR.w uselib
00028302 <AmiBlitz3.ab2@3258>   BSR.w nextline
00028308 <AmiBlitz3.ab2@3259>   CLR.l linenum
0002830E <AmiBlitz3.ab2@3260>   CLR.l stacktrack
00028314 <AmiBlitz3.ab2@3263>   ADDQ.l #1,linenum
0002831E <AmiBlitz3.ab2@3264>   MOVE.l destpointer,destpointer2
00028324 <AmiBlitz3.ab2@3265>   MOVE.l a5,sourceline2
00028328 <AmiBlitz3.ab2@3266>   BSR.w compile_line                                        ;compile pass
0002832C <AmiBlitz3.ab2@3269>   BSR.w nextline
00028330 <AmiBlitz3.ab2@3270>    BNE.w JL_0_4136
00028334 <AmiBlitz3.ab2@3271>   BSR.w JUMP_do_runerrson
00028338 <AmiBlitz3.ab2@3272>   BSR.w pointchk
0002833E <AmiBlitz3.ab2@3273>   TST.b objectcount
00028342 <AmiBlitz3.ab2@3274>    BNE macenderr
00028348 <AmiBlitz3.ab2@3275>   CLR.l linenumat
0002834C <AmiBlitz3.ab2@3276>   BSR.w errchx2
00028356 <AmiBlitz3.ab2@3277>   CMP.l #-1,bssend
0002835A <AmiBlitz3.ab2@3278>    BNE 'l30
00028364 <AmiBlitz3.ab2@3279>   MOVE.l destpointer,bssend                                ;compile end
0002836A <AmiBlitz3.ab2@3282>   MOVE.l destpointer,d0
00028374 <AmiBlitz3.ab2@3283>   CMP.l #-1,bssstart
00028378 <AmiBlitz3.ab2@3284>   BNE 'lnf6
00028382 <AmiBlitz3.ab2@3285>   CMP.l #-1,chipstart
00028386 <AmiBlitz3.ab2@3286>   BNE 'lnf6
0002838A <AmiBlitz3.ab2@3287> BRA 'leven4
00028390 <AmiBlitz3.ab2@3290>   MOVE.l destpointer,d1
00028392 <AmiBlitz3.ab2@3291>   ADDQ.l #3,d1
00028398 <AmiBlitz3.ab2@3292>   AND.l #$fffffffc,d1                                      ;bug ?
0002839E <AmiBlitz3.ab2@3293>   MOVE.l d1,destpointer
000283A8 <AmiBlitz3.ab2@3296>   MOVE.l destpointer,codeend
000283B2 <AmiBlitz3.ab2@3297>   CMP.l #-1,chipend
000283B6 <AmiBlitz3.ab2@3298>   BNE 'l31
000283C0 <AmiBlitz3.ab2@3299>   MOVE.l destpointer,chipend
000283C6 <AmiBlitz3.ab2@3302>   MOVE.l destpointer,d1
000283C8 <AmiBlitz3.ab2@3303>   ADDQ.l #1,d1
000283CE <AmiBlitz3.ab2@3304>   AND.l #$fffffffe,d1                                     ;new evenexit
000283D4 <AmiBlitz3.ab2@3305>   MOVE.l d1,destpointer
000283D8 <AmiBlitz3.ab2@3306>   MOVE.b debugmode(PC),D1
000283DC <AmiBlitz3.ab2@3307>    BEQ.b JL_0_4180
000283E0 <AmiBlitz3.ab2@3308>    BSR.w debugstuff
000283E4 <AmiBlitz3.ab2@3309>   MOVE.w #$C300,D1
000283EA <AmiBlitz3.ab2@3310>    JSR Atokejsr
000283EE <AmiBlitz3.ab2@3311>    BSR.w debugstuff
000283F2 <AmiBlitz3.ab2@3312>   MOVE.l eopcode(PC),D1
000283F8 <AmiBlitz3.ab2@3313>    JSR writelong
000283FC <AmiBlitz3.ab2@3314>   MOVE.l lastcontlink(PC),D1
00028400 <AmiBlitz3.ab2@3315>    BEQ.b JL_0_4180
00028402 <AmiBlitz3.ab2@3316>   MOVEA.l D1,A0
00028406 <AmiBlitz3.ab2@3317>   CLR.w $6(A0)
00028410 <AmiBlitz3.ab2@3323>   MOVE.l destpointer,endop                                ;where end goes...
00028416 <AmiBlitz3.ab2@3325>   TST.w blitzmode
0002841A <AmiBlitz3.ab2@3326>   BEQ.w JL_0_4198
0002841E <AmiBlitz3.ab2@3327>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00028424 <AmiBlitz3.ab2@3330>   TST.w intsused
00028428 <AmiBlitz3.ab2@3331>   BEQ.b JL_0_41AA
0002842C <AmiBlitz3.ab2@3332>   MOVE.w #$C105,D1                                        ;interupts off!
00028432 <AmiBlitz3.ab2@3333>   JSR tokejsr2
00028436 <AmiBlitz3.ab2@3336>   BSR.w calcstatic
0002843C <AmiBlitz3.ab2@3337>   MOVE.w D4,numstatic
00028442 <AmiBlitz3.ab2@3338>   MOVE.l D3,staticdata
00028446 <AmiBlitz3.ab2@3339>    BSR.w calcmaxs
0002844C <AmiBlitz3.ab2@3341>   TST.l tokeslist
00028450 <AmiBlitz3.ab2@3342>    BEQ.b JL_0_41F8
00028456 <AmiBlitz3.ab2@3343>   MOVE.w gotocode,D1                                       ;jmp!
0002845C <AmiBlitz3.ab2@3344>    JSR writeword
00028466 <AmiBlitz3.ab2@3345>   MOVE.l destpointer,endjmpat
0002846A <AmiBlitz3.ab2@3346>    BSR.w addoff
00028470 <AmiBlitz3.ab2@3347>    JSR writelong                                           
00028474 <AmiBlitz3.ab2@3349>    BSR.w JL_0_6C76                                         ;has to be done before finits!
0002847A <AmiBlitz3.ab2@3353>   TST.w dontwrite
0002847E <AmiBlitz3.ab2@3354>    BNE.b JL_0_41F8
00028482 <AmiBlitz3.ab2@3355>   MOVEA.l endjmpat(PC),A4
00028488 <AmiBlitz3.ab2@3356>   MOVE.l destpointer,(A4)
0002848E <AmiBlitz3.ab2@3359>   TST.b returncode
00028492 <AmiBlitz3.ab2@3360>   BEQ 'l2
00028496 <AmiBlitz3.ab2@3361>   MOVE.w #$2e80,d1
0002849C <AmiBlitz3.ab2@3362>   JSR writeword
000284A2 <AmiBlitz3.ab2@3365>   JSR JL_0_B98A
000284A8 <AmiBlitz3.ab2@3366>   TST.b returncode
000284AC <AmiBlitz3.ab2@3367>   BEQ 'l3
000284B0 <AmiBlitz3.ab2@3368>   MOVE.w #$4e75,d1
000284B6 <AmiBlitz3.ab2@3369>   JSR writeword
000284BA <AmiBlitz3.ab2@3370> BRA 'l1
000284C0 <AmiBlitz3.ab2@3373>   MOVE.l #$70004E75,D1
000284C6 <AmiBlitz3.ab2@3374>   JSR writelong                                            ;write moveq #0,d0:rts
000284CC <AmiBlitz3.ab2@3377>   JSR JL_0_B73E
000284D0 <AmiBlitz3.ab2@3378>   BSR.w asmfixer
000284D4 <AmiBlitz3.ab2@3379>   BSR.w close_compilewin
000284D8 <AmiBlitz3.ab2@3380> BRA.w call_setpointernormal
000284DE <AmiBlitz3.ab2@3384> JMP do_runerrson
000284E0 <AmiBlitz3.ab2@3388> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
000284E2 <AmiBlitz3.ab2@3389>             Dc.b $4E,$40                                   ;TRAP  #00
000284E6 <AmiBlitz3.ab2@3391> endjmpat:   Ds.l 1
000284EC <AmiBlitz3.ab2@3395>   MOVEA.l newtype_string,A2
000284F2 <AmiBlitz3.ab2@3396>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
000284F6 <AmiBlitz3.ab2@3399>     CMPA.w #$0,A2
000284FA <AmiBlitz3.ab2@3400>      BEQ.w pointchk_done
000284FE <AmiBlitz3.ab2@3401>     CMP.l $4(A2),D0
00028502 <AmiBlitz3.ab2@3402>      BNE.w pointchk_next
0002850A <AmiBlitz3.ab2@3403>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
0002850E <AmiBlitz3.ab2@3404> BRA.w notypeerr
00028510 <AmiBlitz3.ab2@3407>     MOVEA.l (A2),A2
00028514 <AmiBlitz3.ab2@3408> BRA.w pointchk_loop
00028516 <AmiBlitz3.ab2@3411> RTS
0002851C <AmiBlitz3.ab2@3415>   LEA labelbase,A2
0002851E <AmiBlitz3.ab2@3419>   MOVE.l (A2),D0                                           ;testlabels
00028522 <AmiBlitz3.ab2@3420>    BEQ.w errchx2_done
00028524 <AmiBlitz3.ab2@3421>   MOVEA.l D0,A2
00028528 <AmiBlitz3.ab2@3422>   MOVE.l $4(A2),D0
0002852C <AmiBlitz3.ab2@3423>   BTST #$0,D0
00028530 <AmiBlitz3.ab2@3424>    BNE.w errchx2_loop
00028534 <AmiBlitz3.ab2@3425>   MOVE.l $8(A2),D0
00028538 <AmiBlitz3.ab2@3426>    BNE.w errchx2_loop
00028540 <AmiBlitz3.ab2@3427>   MOVE.w $10(A2),linenumat+2
00028542 <AmiBlitz3.ab2@3428>   MOVEQ #0,d0
00028546 <AmiBlitz3.ab2@3429>   MOVE.b $12(a2),d0
0002854E <AmiBlitz3.ab2@3430>   MOVE.w 0(a2,d0),linenumat
00028554 <AmiBlitz3.ab2@3431> JMP nolaberr                                               ;label not found
0002855A <AmiBlitz3.ab2@3434>   MOVE.l concomsp,D0
00028560 <AmiBlitz3.ab2@3435>   CMP.l #concomstack,D0
00028564 <AmiBlitz3.ab2@3436>    BNE.w chxerr4
0002856A <AmiBlitz3.ab2@3437>   MOVE.w connest,D1
0002856E <AmiBlitz3.ab2@3438>    BNE.w chxerr4
00028570 <AmiBlitz3.ab2@3441>   MOVE.l D1,-(A7)
00028576 <AmiBlitz3.ab2@3442>   MOVE.l firstsel,D1
0002857A <AmiBlitz3.ab2@3443>    BNE.w errchx_err1
00028580 <AmiBlitz3.ab2@3444>   MOVE.l firstrep,D1
00028584 <AmiBlitz3.ab2@3445>    BNE.w errchx_err2
0002858A <AmiBlitz3.ab2@3446>   MOVE.w intstring,D1
0002858E <AmiBlitz3.ab2@3447>    BNE.w errchx_err3
00028592 <AmiBlitz3.ab2@3448>   MOVE.l 4(a7),d1
00028598 <AmiBlitz3.ab2@3449>   MOVE.w proceduremode,D1
0002859C <AmiBlitz3.ab2@3450>    BNE.w errchx_err6
000285A2 <AmiBlitz3.ab2@3451>   MOVE.l firstiff,d1
000285A6 <AmiBlitz3.ab2@3452>    BNE errchx_err5
000285AC <AmiBlitz3.ab2@3453>   MOVE.l firstfor,D1
000285B0 <AmiBlitz3.ab2@3454>    BNE.w errchx_err7
000285B2 <AmiBlitz3.ab2@3455>   MOVE.l (A7)+,D1
000285B4 <AmiBlitz3.ab2@3456> RTS
000285BE <AmiBlitz3.ab2@3460>   MOVE.l sellineat,linenumat
000285C4 <AmiBlitz3.ab2@3461> JMP selerrz
000285CE <AmiBlitz3.ab2@3464>   MOVE.l replineat,linenumat
000285D4 <AmiBlitz3.ab2@3465> JMP unterr3
000285DE <AmiBlitz3.ab2@3468>   MOVE.l intlineat,linenumat
000285E4 <AmiBlitz3.ab2@3469> JMP interr2
000285EE <AmiBlitz3.ab2@3472>   MOVE.l iflineat,linenumat
000285F4 <AmiBlitz3.ab2@3473> JMP noenderr
000285FE <AmiBlitz3.ab2@3476>   MOVE.l prolineat,linenumat
00028604 <AmiBlitz3.ab2@3477> JMP nopenderr
0002860E <AmiBlitz3.ab2@3480>   MOVE.l forlineat,linenumat
00028614 <AmiBlitz3.ab2@3481> JMP nonexterr
0002861E <AmiBlitz3.ab2@3484>   MOVE.l ciflineat,linenumat
00028624 <AmiBlitz3.ab2@3485> JMP nocenderr
0002862E <AmiBlitz3.ab2@3489>   MOVE.l data1,maxsat
00028630 <AmiBlitz3.ab2@3490>   MOVEQ.l #$00,D4
00028636 <AmiBlitz3.ab2@3491>   MOVEA.l libpointer,A2
0002863A <AmiBlitz3.ab2@3494>     CMPA.w #$0,A2
0002863E <AmiBlitz3.ab2@3495>      BEQ.w calcmaxs_done
00028642 <AmiBlitz3.ab2@3496>     TST.w $C(A2)
00028646 <AmiBlitz3.ab2@3497>      BPL.w calcmaxs_next
0002864A <AmiBlitz3.ab2@3498>     MOVE.l $12(A2),D0
0002864E <AmiBlitz3.ab2@3499>     TST.w -$2(A2,D0.L)
00028652 <AmiBlitz3.ab2@3500>      BEQ.w calcmaxs_next
00028654 <AmiBlitz3.ab2@3501>     ADDQ.w #1,D4
00028658 <AmiBlitz3.ab2@3502>     MOVE.w -$6(A2,D0.L),D1
0002865C <AmiBlitz3.ab2@3503>     BSR.w pokedata1
0002865E <AmiBlitz3.ab2@3504>     MOVEQ.l #$01,D1
00028662 <AmiBlitz3.ab2@3505>     MOVE.w -$2(A2,D0.L),D2
00028664 <AmiBlitz3.ab2@3506>     LSL.w D2,D1
00028668 <AmiBlitz3.ab2@3507>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
0002866C <AmiBlitz3.ab2@3508>     BSR.w writedatalong
0002866E <AmiBlitz3.ab2@3511>     MOVEA.l (A2),A2
00028672 <AmiBlitz3.ab2@3512> BRA.w calcmaxs_loop
00028678 <AmiBlitz3.ab2@3515>   MOVE.w D4,maxsused
0002867C <AmiBlitz3.ab2@3516>    BEQ.w calcmaxs_done2
00028680 <AmiBlitz3.ab2@3517>   MOVE.w #$FFFA,D1                                         ;;use memlib
00028684 <AmiBlitz3.ab2@3518> BRA.w uselib
00028686 <AmiBlitz3.ab2@3521> RTS
0002868C <AmiBlitz3.ab2@3525>    MOVE.l a7,stackaddr
00028690 <AmiBlitz3.ab2@3526>    BSR.w compile_term
00028694 <AmiBlitz3.ab2@3527>    BSR.w reget
00028698 <AmiBlitz3.ab2@3528>    BNE.w illeolerr
0002869E <AmiBlitz3.ab2@3529>    TST.w dontwrite
000286A2 <AmiBlitz3.ab2@3530>    BNE 'l1
000286A8 <AmiBlitz3.ab2@3531>    TST.l stacktrack
000286AC <AmiBlitz3.ab2@3532>    BNE errormsg_stack
000286B0 <AmiBlitz3.ab2@3535>    CMP.w #-$7FDE,D0
000286B4 <AmiBlitz3.ab2@3536>    BNE.w compile_line_notelse
000286BA <AmiBlitz3.ab2@3537>    JSR do_else2
000286BE <AmiBlitz3.ab2@3538> BRA.w compile_line
000286C0 <AmiBlitz3.ab2@3541>   TST.w D0
000286C4 <AmiBlitz3.ab2@3542>   BNE.w compile_line
000286CA <AmiBlitz3.ab2@3547>   MOVE.l firstiff,D0
000286CE <AmiBlitz3.ab2@3548>    BEQ.w compile_line_done
000286D0 <AmiBlitz3.ab2@3549>   MOVEA.l D0,A0
000286D4 <AmiBlitz3.ab2@3550>   MOVE.w $C(A0),D1
000286D8 <AmiBlitz3.ab2@3551>    BPL.w compile_line_done
000286DC <AmiBlitz3.ab2@3555>   BCLR #$F,D1
000286E2 <AmiBlitz3.ab2@3556>    JSR AJL_0_D7B8
000286E8 <AmiBlitz3.ab2@3557>    JSR AJL_0_D81C
000286EC <AmiBlitz3.ab2@3558> BRA.w compile_line_unthen
000286EE <AmiBlitz3.ab2@3561> RTS
000286F4 <AmiBlitz3.ab2@3565>   LEA lastgloballabel,A0
000286F6 <AmiBlitz3.ab2@3566>   TST.b (A0)
000286FA <AmiBlitz3.ab2@3567>    BEQ.w nolocerr
00028700 <AmiBlitz3.ab2@3568>   LEA ptr_parameterstore,A1
00028702 <AmiBlitz3.ab2@3569>   MOVEQ.l #$00,D2
00028704 <AmiBlitz3.ab2@3572>   ADDQ.w #1,D2
00028706 <AmiBlitz3.ab2@3573>   MOVE.b (A0)+,(A1)+
0002870A <AmiBlitz3.ab2@3574>    BNE.w createlab_loop
00028710 <AmiBlitz3.ab2@3575>   MOVE.b #$27,-$1(A1)
00028712 <AmiBlitz3.ab2@3576>   MOVE.w D2,-(A7)
00028716 <AmiBlitz3.ab2@3577>    BSR.w makename4
00028718 <AmiBlitz3.ab2@3578>   CMP.w (A7)+,D2
0002871C <AmiBlitz3.ab2@3579>    BEQ.w syntaxerr
0002871E <AmiBlitz3.ab2@3580>    TST.w d0
00028722 <AmiBlitz3.ab2@3581>    BPL createlab_done
0002872A <AmiBlitz3.ab2@3582>    MOVE.w #$3a,lastchar
0002872C <AmiBlitz3.ab2@3583>    SUBQ.l #2,a5
0002872E <AmiBlitz3.ab2@3586> RTS
00028738 <AmiBlitz3.ab2@3590>   MOVE.l #forthstack,forthsp
00028742 <AmiBlitz3.ab2@3591>   MOVE.l #precstack,precsp
00028744 <AmiBlitz3.ab2@3592> RTS
00028746 <AmiBlitz3.ab2@3599>   MOVEQ.l #$00,D4
00028770 <AmiBlitz3.ab2@3602>   !basic
0002878C <AmiBlitz3.ab2@3603>   If Peek.l(Addr Window(4))
000287A2 <AmiBlitz3.ab2@3604>     Use Window 4
000287B2 <AmiBlitz3.ab2@3605>     ev.l = Event : c_abort.b = False
000287BC <AmiBlitz3.ab2@3606>     While ev
000287CE <AmiBlitz3.ab2@3607>       If ev = #IDCMP_IDCMPUPDATE
00028804 <AmiBlitz3.ab2@3608>         If WZGadName = "COMPILE_ABORT" Then c_abort = True
0002881E <AmiBlitz3.ab2@3610>       If (c_abort = True)
00028820 <AmiBlitz3.ab2@3612>         MOVEQ.l #-$01,d4
00028826 <AmiBlitz3.ab2@3613>         MOVE.w D4,stopit
00028844 <AmiBlitz3.ab2@3614>         !asm
00028848 <AmiBlitz3.ab2@3615>     BRA chkrealstop__skip
00028852 <AmiBlitz3.ab2@3617>       ev = Event
00028858 <AmiBlitz3.ab2@3618>     Wend
00028876 <AmiBlitz3.ab2@3620>   !asm
00028878 <AmiBlitz3.ab2@3621>   MOVEQ.l #$00,D6
0002887A <AmiBlitz3.ab2@3622>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
0002887C <AmiBlitz3.ab2@3626> RTS
00028880 <AmiBlitz3.ab2@3630>   MOVE.w stopit(PC),D0
00028884 <AmiBlitz3.ab2@3631>   BEQ chkstop__chk
0002888A <AmiBlitz3.ab2@3632>   SUBQ.w #1,stopit
0002888C <AmiBlitz3.ab2@3636> RTS
00028894 <AmiBlitz3.ab2@3639>   MOVE.w #2000,stopit
00028898 <AmiBlitz3.ab2@3640>   BSR.w chkrealstop
0002889C <AmiBlitz3.ab2@3641>   BEQ.b chkstop__rts
000288A0 <AmiBlitz3.ab2@3643>   BSR.w close_compilewin
000288A4 <AmiBlitz3.ab2@3644>   BSR.w call_setpointernormal
000288AA <AmiBlitz3.ab2@3646>   MOVEA.l errstack,A7
000288B0 <AmiBlitz3.ab2@3647>   MOVEA.l errcont,A0
000288B8 <AmiBlitz3.ab2@3648>   MOVE.w #-1,anyerrs
000288BA <AmiBlitz3.ab2@3649> JMP (A0)
000288BE <AmiBlitz3.ab2@3652> d_pc:           Ds.l 1
000288C2 <AmiBlitz3.ab2@3653> d_bigpc:        Ds.l 1
000288C4 <AmiBlitz3.ab2@3654> d_nomemleft:    Ds.w 1
000288C8 <AmiBlitz3.ab2@3655> cont_pc:        Ds.l 1
000288CC <AmiBlitz3.ab2@3656> cont_pc2:       Ds.l 1
000288D0 <AmiBlitz3.ab2@3657> lastcontlink:   Ds.l 1
000288D4 <AmiBlitz3.ab2@3661>   ORI.w #$4E40,D1
000288D8 <AmiBlitz3.ab2@3662> BRA.w JUMP_writeword
000288DE <AmiBlitz3.ab2@3666>   TST.b debugmode
000288E2 <AmiBlitz3.ab2@3667>   BEQ.w debugstuff__rts
000288E8 <AmiBlitz3.ab2@3674>   TST.w dirmode                                            ;or while in direct mode...
000288EC <AmiBlitz3.ab2@3675>    BNE debugstuff__rts
000288F6 <AmiBlitz3.ab2@3676>   MOVE.l destpointer,d_pc
00028900 <AmiBlitz3.ab2@3677>   MOVE.l bigpc,d_bigpc
0002890A <AmiBlitz3.ab2@3678>   MOVE.w dontwrite,d_nomemleft
0002890E <AmiBlitz3.ab2@3679>   MOVEM.l D0-D1,-(A7)
00028910 <AmiBlitz3.ab2@3680>   MOVEQ.l #$01,D1
00028914 <AmiBlitz3.ab2@3681>    BSR.w writetrap                                         ;write the adress to sourceline
0002891A <AmiBlitz3.ab2@3685>    MOVE.l destpointer,D0
00028920 <AmiBlitz3.ab2@3686>   MOVE.l cont_pc,D1
00028926 <AmiBlitz3.ab2@3687>   MOVE.l D0,cont_pc
0002892C <AmiBlitz3.ab2@3688>   MOVE.l D1,cont_pc2
00028930 <AmiBlitz3.ab2@3689>    BEQ.b debugstuff__skip
00028936 <AmiBlitz3.ab2@3690>   TST.w dontwrite
0002893A <AmiBlitz3.ab2@3691>    BNE.b debugstuff__skip
0002893C <AmiBlitz3.ab2@3692>   MOVEA.l D1,A4
0002893E <AmiBlitz3.ab2@3693>   SUB.l A4,D0
00028942 <AmiBlitz3.ab2@3694>   MOVE.w D0,$6(A4)
00028948 <AmiBlitz3.ab2@3695>   MOVE.l A4,lastcontlink
0002894E <AmiBlitz3.ab2@3698>   TST.w ininclude
00028954 <AmiBlitz3.ab2@3700>   TST.w makeexec
00028958 <AmiBlitz3.ab2@3701>   BEQ 'l1
0002895E <AmiBlitz3.ab2@3702>   TST.w exdebug
00028962 <AmiBlitz3.ab2@3703>   BEQ 'noinc
00028966 <AmiBlitz3.ab2@3706>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
0002896C <AmiBlitz3.ab2@3707>   MOVE.l data1,d1
00028972 <AmiBlitz3.ab2@3708>   TST.b firsttime
00028976 <AmiBlitz3.ab2@3709>   BNE 'nofirst
0002897E <AmiBlitz3.ab2@3710>   MOVE.b #1,firsttime
00028984 <AmiBlitz3.ab2@3711>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
0002898A <AmiBlitz3.ab2@3712>   JSR writedatalong
00028990 <AmiBlitz3.ab2@3713>   MOVE.l #"AmiB",d1
00028996 <AmiBlitz3.ab2@3714>   JSR writedatalong
0002899C <AmiBlitz3.ab2@3715>   MOVE.l destbufferstart,d1
000289A2 <AmiBlitz3.ab2@3716>   JSR writedatalong
000289A8 <AmiBlitz3.ab2@3717>   TST.w dontwrite
000289AC <AmiBlitz3.ab2@3718>   BNE 'nohunk
000289B2 <AmiBlitz3.ab2@3719>   MOVE.l data1,d1
000289B4 <AmiBlitz3.ab2@3720>   SUBQ.l #4,d1
000289BA <AmiBlitz3.ab2@3721>   SUB.l destbufferstart,d1
000289BC <AmiBlitz3.ab2@3722>   MOVE.l d1,d2
000289C2 <AmiBlitz3.ab2@3723>   JSR addhunkoffset
000289C8 <AmiBlitz3.ab2@3726>   MOVE.l destpointer,d2
000289CE <AmiBlitz3.ab2@3727>   MOVE.l data1,d1
000289D4 <AmiBlitz3.ab2@3730>   MOVE.l destpointer,d2
000289D6 <AmiBlitz3.ab2@3731>   MOVE.l d1,d3
000289DC <AmiBlitz3.ab2@3732>   SUB.l destbufferstart,d1
000289E2 <AmiBlitz3.ab2@3733>   OR.l #$80000000,d1
000289E8 <AmiBlitz3.ab2@3734>   JSR writelong
000289EE <AmiBlitz3.ab2@3735>   TST.w inmacro
000289F2 <AmiBlitz3.ab2@3736>   BEQ 'sc1
000289F8 <AmiBlitz3.ab2@3737>   MOVE.l myline,a0
000289FC <AmiBlitz3.ab2@3739> BRA 'inc2
00028A02 <AmiBlitz3.ab2@3741>  'sc1  TST.w ininclude
00028A06 <AmiBlitz3.ab2@3742>   BEQ 'inc
00028A0C <AmiBlitz3.ab2@3743>   MOVE.l includesourceline,a0
00028A10 <AmiBlitz3.ab2@3744> BRA 'inc2
00028A16 <AmiBlitz3.ab2@3747>   MOVE.l sourceline,a0
00028A1A <AmiBlitz3.ab2@3748>   LEA 9(a0),a0
00028A1C <AmiBlitz3.ab2@3751>   MOVE.l d1,d2
00028A1E <AmiBlitz3.ab2@3752>   MOVE.l A5,D1
00028A20 <AmiBlitz3.ab2@3753>   SUB.l a0,D1
00028A26 <AmiBlitz3.ab2@3754>   ADD.l #9,d1
00028A2A <AmiBlitz3.ab2@3755>   BSR.w JUMP_writeword
00028A30 <AmiBlitz3.ab2@3756>   CMP.l #9,d1
00028A34 <AmiBlitz3.ab2@3757>   BEQ 'pos1
00028A3A <AmiBlitz3.ab2@3758>   TST.w dontwrite
00028A3E <AmiBlitz3.ab2@3759>   BNE 'nopad
00028A44 <AmiBlitz3.ab2@3760>   MOVE.l lastsourceline,d1
00028A48 <AmiBlitz3.ab2@3761>   MOVE.l d1,-6(a4)
00028A4C <AmiBlitz3.ab2@3762> BRA 'nopad
00028A52 <AmiBlitz3.ab2@3765>   MOVE.l d2,lastsourceline
00028A5C <AmiBlitz3.ab2@3766>    MOVE.l destpointer,lastdestpointer
00028A5E <AmiBlitz3.ab2@3767>    MOVEQ #0,d1
00028A64 <AmiBlitz3.ab2@3768>   MOVE.l data1,d2
00028A6A <AmiBlitz3.ab2@3769>   SUB.l destbufferstart,d2
00028A70 <AmiBlitz3.ab2@3770>   JSR writedatalong
00028A76 <AmiBlitz3.ab2@3771>   TST.w dontwrite
00028A7A <AmiBlitz3.ab2@3772>   BNE 'no2
00028A80 <AmiBlitz3.ab2@3773>   JSR addhunkoffset
00028A86 <AmiBlitz3.ab2@3776>   MOVE.l data1,d2
00028A8C <AmiBlitz3.ab2@3777>   SUB.l destbufferstart,d2
00028A92 <AmiBlitz3.ab2@3778>   JSR writedatalong
00028A98 <AmiBlitz3.ab2@3779>   TST.w dontwrite
00028A9C <AmiBlitz3.ab2@3780>   BNE 'no
00028AA2 <AmiBlitz3.ab2@3781>   JSR addhunkoffset
00028AA8 <AmiBlitz3.ab2@3782>   MOVE.l lastwritedat,a1
00028AAE <AmiBlitz3.ab2@3783>   CMP.l #0,a1
00028AB2 <AmiBlitz3.ab2@3784>   BEQ 'no
00028AB4 <AmiBlitz3.ab2@3785>   MOVE.l d3,(a1)
00028ABC <AmiBlitz3.ab2@3786>   MOVE.l prevwritedat,4(a1)
00028AC6 <AmiBlitz3.ab2@3787>   MOVE.l lastwritedat,prevwritedat
00028ACC <AmiBlitz3.ab2@3790>   MOVE.l d3,lastwritedat
00028ACE <AmiBlitz3.ab2@3791>   MOVEQ #4,d1
00028AD2 <AmiBlitz3.ab2@3792>   BSR pokedata1b
00028AD4 <AmiBlitz3.ab2@3795>   MOVE.b (a0)+,d1
00028AD8 <AmiBlitz3.ab2@3796>   BEQ 'done
00028ADC <AmiBlitz3.ab2@3797>   BSR pokedata1b
00028AE0 <AmiBlitz3.ab2@3798> BRA 'loop
00028AE2 <AmiBlitz3.ab2@3801>   MOVEQ #0,d1
00028AE6 <AmiBlitz3.ab2@3802>   BSR pokedata1b
00028AEC <AmiBlitz3.ab2@3803>   MOVE.l data1,d1
00028AF0 <AmiBlitz3.ab2@3804>   BTST #0,d1
00028AF4 <AmiBlitz3.ab2@3805>   BEQ 'nopad
00028AF6 <AmiBlitz3.ab2@3806>   MOVEQ #0,d1
00028AFA <AmiBlitz3.ab2@3807>   BSR pokedata1b
00028AFE <AmiBlitz3.ab2@3810>   MOVEM.l (a7)+,a0-a1/d2/d3
00028B02 <AmiBlitz3.ab2@3811> BRA 'noinc2
00028B08 <AmiBlitz3.ab2@3814>   MOVE.l sourceline,D1
00028B0E <AmiBlitz3.ab2@3816>   JSR writelong
00028B10 <AmiBlitz3.ab2@3817>   MOVE.l A5,D1
00028B16 <AmiBlitz3.ab2@3818>   SUB.l sourceline,D1
00028B1C <AmiBlitz3.ab2@3820>   JSR writeword
00028B1E <AmiBlitz3.ab2@3823>   MOVEQ.l #$00,D1
00028B24 <AmiBlitz3.ab2@3824>   JSR writeword                                            ; was: BSR.w writeword
00028B28 <AmiBlitz3.ab2@3825>   MOVEM.l (A7)+,D0-D1
00028B2A <AmiBlitz3.ab2@3828> RTS
00028B30 <AmiBlitz3.ab2@3832>   TST.b debugmode                                          ;extern debug
00028B34 <AmiBlitz3.ab2@3833>    BEQ.b undodebug__rts
00028B3A <AmiBlitz3.ab2@3834>   TST.b dirmode
00028B3E <AmiBlitz3.ab2@3835>   BNE undodebug__rts
00028B48 <AmiBlitz3.ab2@3840>   MOVE.w d_nomemleft,dontwrite
00028B52 <AmiBlitz3.ab2@3841>   MOVE.l d_bigpc,bigpc
00028B5C <AmiBlitz3.ab2@3842>   MOVE.l d_pc,destpointer
00028B66 <AmiBlitz3.ab2@3843>   MOVE.l cont_pc2,cont_pc
00028B68 <AmiBlitz3.ab2@3846> RTS
00028B72 <AmiBlitz3.ab2@3850>   MOVE.l #forthstack,forthsp
00028B7C <AmiBlitz3.ab2@3851>   MOVE.l #precstack,precsp
00028B82 <AmiBlitz3.ab2@3852>   CLR.w regnum
00028B88 <AmiBlitz3.ab2@3853>   CLR.w nonew
00028B8E <AmiBlitz3.ab2@3854>   CLR.w sbasegot
00028B98 <AmiBlitz3.ab2@3855>   MOVE.w varcodelen,oldvcodelen
00028B9E <AmiBlitz3.ab2@3856>   CLR.w varcodelen
00028BA6 <AmiBlitz3.ab2@3857>   MOVE.w #-1,lasta6
00028BA8 <AmiBlitz3.ab2@3858> RTS
00028BAE <AmiBlitz3.ab2@3862>   TST.w linemode
00028BB2 <AmiBlitz3.ab2@3863>   BMI.b smode__skip
00028BB6 <AmiBlitz3.ab2@3864>   BSR.w undodebug
00028BBC <AmiBlitz3.ab2@3865>   MOVE.w linemode,D1
00028BBE <AmiBlitz3.ab2@3866>   ADDQ.w #4,A7
00028BC0 <AmiBlitz3.ab2@3867>   LSL.w #2,D1
00028BC6 <AmiBlitz3.ab2@3868>   LEA modetable,A0
00028BCA <AmiBlitz3.ab2@3869>   MOVEA.l $0(A0,D1.W),A0
00028BCE <AmiBlitz3.ab2@3870>   BSR.w reget
00028BD0 <AmiBlitz3.ab2@3873> JMP (A0)                                                   ;jumptokenroutine
00028BD2 <AmiBlitz3.ab2@3876> RTS
00028BDA <AmiBlitz3.ab2@3881>   MOVE.w #0,leaa0a0+2
00028BE0 <AmiBlitz3.ab2@3882>   CLR.b nowdeclare
00028BE6 <AmiBlitz3.ab2@3883>   CLR.b notypecheck
00028BEC <AmiBlitz3.ab2@3884>   CLR.l lasttoken
00028BF2 <AmiBlitz3.ab2@3885>   CLR.b doimmediate
00028BF8 <AmiBlitz3.ab2@3886>   CLR.w vartype
00028BFE <AmiBlitz3.ab2@3887>   CLR.w regnumfunc
00028C04 <AmiBlitz3.ab2@3888>   CLR.b optistring
00028C0A <AmiBlitz3.ab2@3889>   CLR.b iniffcommand
00028C10 <AmiBlitz3.ab2@3890>   CLR.w instringon  ; new
00028C16 <AmiBlitz3.ab2@3891>   TST.b debugmode
00028C1A <AmiBlitz3.ab2@3892>    BEQ 'fpu
00028C24 <AmiBlitz3.ab2@3898>   MOVE.b fpu,iee
00028C28 <AmiBlitz3.ab2@3899>   MOVE.w stopit(PC),D0
00028C2C <AmiBlitz3.ab2@3900>   BNE chkstop_chkb
00028C30 <AmiBlitz3.ab2@3901>   BSR.w chkstop                                          ; message here
00028C36 <AmiBlitz3.ab2@3904>   SUBQ.w #1,stopit
00028C3A <AmiBlitz3.ab2@3907>   BSR.w findmacro                                          ;macro
00028C3E <AmiBlitz3.ab2@3959>   CMP.b #$2b,(a5)
00028C42 <AmiBlitz3.ab2@3960>   BNE 'lb2
00028C46 <AmiBlitz3.ab2@3961>   BSR.w get1bytemain                                       ;gettokenmain
00028C4E <AmiBlitz3.ab2@3962>   MOVE.b #1,notypecheck
00028C54 <AmiBlitz3.ab2@3965>   TST.b debugmode
00028C58 <AmiBlitz3.ab2@3966>    BEQ.s 'l10
00028C5E <AmiBlitz3.ab2@3967>   TST.b exdebug
00028C62 <AmiBlitz3.ab2@3968>   BEQ 'l10a
00028C64 <AmiBlitz3.ab2@3969>   MOVE.w (a5),d0
00028C68 <AmiBlitz3.ab2@3970>   CMP.w #$8025,d0
00028C6C <AmiBlitz3.ab2@3971>    BEQ 'l10
00028C70 <AmiBlitz3.ab2@3974>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00028C74 <AmiBlitz3.ab2@3979>   BSR.w get1bytemain                                       ;gettokenmain
00028C78 <AmiBlitz3.ab2@3980>   BEQ.w undodebug                                          ;JL_0_462C
00028C82 <AmiBlitz3.ab2@3986>   MOVE.l #forthstack,forthsp
00028C8C <AmiBlitz3.ab2@3987>   MOVE.l #precstack,precsp
00028C92 <AmiBlitz3.ab2@3988>   CLR.w regnum
00028C98 <AmiBlitz3.ab2@3989>   CLR.w nonew
00028C9E <AmiBlitz3.ab2@3990>   CLR.w sbasegot
00028CA8 <AmiBlitz3.ab2@3991>   MOVE.w varcodelen,oldvcodelen
00028CAE <AmiBlitz3.ab2@3993>   CLR.w varcodelen
00028CB6 <AmiBlitz3.ab2@3994>   MOVE.w #$FFFF,lasta6
00028CBA <AmiBlitz3.ab2@3996>   BSR.w smode
00028CBC <AmiBlitz3.ab2@3997>   TST.w D0
00028CC0 <AmiBlitz3.ab2@3998>   BMI.w get_tokencode
00028CC4 <AmiBlitz3.ab2@3999>   CMP.w #$2E,D0
00028CC8 <AmiBlitz3.ab2@4000>    BEQ.w JL_0_4644                                         ;shortlist
00028CCC <AmiBlitz3.ab2@4001>   CMP.w #"#",D0
00028CD0 <AmiBlitz3.ab2@4002>    BEQ.w JL_0_4718                                         ;constant found
00028CD4 <AmiBlitz3.ab2@4003>   CMP.w #$27,D0
00028CD8 <AmiBlitz3.ab2@4004>    BEQ.w JL_0_4638                                         ;local label
00028CDE <AmiBlitz3.ab2@4005>   MOVE.l A5,letstart
00028CE4 <AmiBlitz3.ab2@4006>   JSR getparameter
00028CE8 <AmiBlitz3.ab2@4007>   BSR.w reget
00028CEC <AmiBlitz3.ab2@4008>    BEQ.w JL_0_4658                                         ;label found
00028CF0 <AmiBlitz3.ab2@4009>   CMP.w #$7B,D0
00028CF4 <AmiBlitz3.ab2@4010>    BEQ.w JL_0_475C
00028CF6 <AmiBlitz3.ab2@4011>   TST.w d0
00028CFA <AmiBlitz3.ab2@4012>    BPL 'll1
00028D00 <AmiBlitz3.ab2@4013>   TST.b newsyntax
00028D04 <AmiBlitz3.ab2@4014>    BEQ 'll1
00028D0A <AmiBlitz3.ab2@4015>   LEA allowtab,a0
00028D0C <AmiBlitz3.ab2@4016>   MOVEQ #0,d1
00028D0E <AmiBlitz3.ab2@4017>   MOVE.b d0,d1
00028D12 <AmiBlitz3.ab2@4018>   TST.b 0(a0,d1.w)
00028D16 <AmiBlitz3.ab2@4019>    BNE 'll1
00028D18 <AmiBlitz3.ab2@4020>   SUBQ.l #2,a5
00028D20 <AmiBlitz3.ab2@4021>   MOVE.w #":",lastchar                                     ;no doublepoint
00028D24 <AmiBlitz3.ab2@4022> BRA JL_0_4658
00028D2C <AmiBlitz3.ab2@4025>   CMP.l #"equ ",-1(a5)
00028D30 <AmiBlitz3.ab2@4026>    BEQ 'll4
00028D38 <AmiBlitz3.ab2@4027>   CMP.l #"EQU ",-1(a5)
00028D3C <AmiBlitz3.ab2@4028>    BNE 'll2
00028D3E <AmiBlitz3.ab2@4031>   ADDQ.l #2,a5
00028D42 <AmiBlitz3.ab2@4032>   BSR.w findlabel2
00028D46 <AmiBlitz3.ab2@4033>   BEQ.w 'lf1
00028D4A <AmiBlitz3.ab2@4034>   BSR.w addlabelhash
00028D52 <AmiBlitz3.ab2@4035>   MOVE.l #$1,$4(A2)
00028D5A <AmiBlitz3.ab2@4038>   CMPI.l #$1,$4(A2)
00028D5E <AmiBlitz3.ab2@4039>    BNE.w illconerr
00028D62 <AmiBlitz3.ab2@4040>   BSR get1bytemain
00028D64 <AmiBlitz3.ab2@4041>   MOVE.l A2,-(A7)
00028D66 <AmiBlitz3.ab2@4052>   SUBQ.l #1,a5
00028D68 <AmiBlitz3.ab2@4055>   SUBQ.l #1,a5
00028D6E <AmiBlitz3.ab2@4056>   JSR AJL_0_BF6E
00028D70 <AmiBlitz3.ab2@4057>   MOVEA.l (A7)+,A2
00028D74 <AmiBlitz3.ab2@4058>   MOVE.l D3,$8(A2)
00028D76 <AmiBlitz3.ab2@4059>   RTS
00028D7A <AmiBlitz3.ab2@4060>   BSR get1bytemain
00028D82 <AmiBlitz3.ab2@4063>   CMP.l #"SET ",-1(a5)
00028D86 <AmiBlitz3.ab2@4064>   BNE 'll3
00028D8A <AmiBlitz3.ab2@4065> BRA 'll4
00028D90 <AmiBlitz3.ab2@4068> JMP AJL_0_DEA6
00028D94 <AmiBlitz3.ab2@4071>   CMP.w #-$7FDE,D0
00028D98 <AmiBlitz3.ab2@4072>   BEQ.w get_tokencode
00028D9C <AmiBlitz3.ab2@4073> BRA.w undodebug
00028DA0 <AmiBlitz3.ab2@4076>   BSR.w undodebug
00028DA4 <AmiBlitz3.ab2@4077>   BSR.w createlab
00028DA8 <AmiBlitz3.ab2@4078> BRA.w JL_0_466E
00028DAC <AmiBlitz3.ab2@4081>   BSR.w get1bytemain
00028DB0 <AmiBlitz3.ab2@4082>    BEQ.w JL_0_462C
00028DB4 <AmiBlitz3.ab2@4083>   CMP.w #"'",D0
00028DB8 <AmiBlitz3.ab2@4084>    BEQ.w JL_0_4638
00028DBC <AmiBlitz3.ab2@4085>    BSR.w makename2
00028DBE <AmiBlitz3.ab2@4086>    TST.w d0
00028DC2 <AmiBlitz3.ab2@4087>    BPL 'll1
00028DC4 <AmiBlitz3.ab2@4088>    SUBQ.l #2,a5
00028DCC <AmiBlitz3.ab2@4089>    MOVE.w #":",lastchar
00028DD0 <AmiBlitz3.ab2@4090> BRA JL_0_4658                                              ;????
00028DD4 <AmiBlitz3.ab2@4094>   BSR.w undodebug
00028DDA <AmiBlitz3.ab2@4095>   LEA ptr_parameterstore,A0
00028DE0 <AmiBlitz3.ab2@4096>   LEA lastgloballabel,A1
00028DE2 <AmiBlitz3.ab2@4099>   MOVE.b (A0)+,(A1)+
00028DE6 <AmiBlitz3.ab2@4100>    BNE.w JL_0_4668
00028DEA <AmiBlitz3.ab2@4103>   BSR.w findlabel2
00028DEE <AmiBlitz3.ab2@4104>    BEQ.w JL_0_4698
00028DF2 <AmiBlitz3.ab2@4105>    BSR.w addlabelhash
00028DF6 <AmiBlitz3.ab2@4108>   CLR.l $4(A2)
00028DFE <AmiBlitz3.ab2@4109>   MOVE.l destpointer,$8(A2)
00028E06 <AmiBlitz3.ab2@4112>   MOVE.w procnum,$10(A2)
00028E08 <AmiBlitz3.ab2@4113> RTS
00028E0C <AmiBlitz3.ab2@4117>   MOVE.l $4(A2),D0
00028E10 <AmiBlitz3.ab2@4118>   BTST #$0,D0
00028E14 <AmiBlitz3.ab2@4119>    BNE.w illlaberr
00028E1A <AmiBlitz3.ab2@4120>   TST.w pass
00028E1E <AmiBlitz3.ab2@4122>   MOVE.l $8(A2),D0
00028E22 <AmiBlitz3.ab2@4123>    BNE.w duplaberr
00028E2A <AmiBlitz3.ab2@4124>   MOVE.w procnum,$10(A2)
00028E2E <AmiBlitz3.ab2@4125>   MOVEA.l $4(A2),A3
00028E34 <AmiBlitz3.ab2@4126>   MOVEA.l _execbase,A6
00028E38 <AmiBlitz3.ab2@4129>   CMPA.w #$0,A3
00028E3C <AmiBlitz3.ab2@4130>    BEQ.w JL_0_467A
00028E40 <AmiBlitz3.ab2@4131>     MOVE.l $4(A2),D1
00028E44 <AmiBlitz3.ab2@4132>     BTST #$0,D1
00028E48 <AmiBlitz3.ab2@4133>     BNE.w illlaberr
00028E4C <AmiBlitz3.ab2@4134>   MOVE.w $8(A3),D1
00028E50 <AmiBlitz3.ab2@4135>   CMP.w $10(A2),D1
00028E54 <AmiBlitz3.ab2@4136>    BEQ.w JL_0_46DC
00028E5A <AmiBlitz3.ab2@4137>    TST.b newsyntax
00028E5E <AmiBlitz3.ab2@4138>    BEQ 'l1
00028E62 <AmiBlitz3.ab2@4139> BRA.w JL_0_46DC                                            ;label context out of range fix
00028E6A <AmiBlitz3.ab2@4144>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00028E6E <AmiBlitz3.ab2@4145> BRA.w referr
00028E74 <AmiBlitz3.ab2@4148>   MOVE.w dontwrite,D1
00028E78 <AmiBlitz3.ab2@4149>    BNE.w JL_0_4706
00028E7C <AmiBlitz3.ab2@4150>   MOVEA.l $4(A3),A1
00028E82 <AmiBlitz3.ab2@4151>   BTST #$0,$7(A3)
00028E86 <AmiBlitz3.ab2@4152>    BEQ.w JL_0_4700
00028E88 <AmiBlitz3.ab2@4153>   SUBQ.w #1,A1
00028E8E <AmiBlitz3.ab2@4154>   MOVE.l data2,(A1)
00028E92 <AmiBlitz3.ab2@4155> BRA.w JL_0_4706
00028E98 <AmiBlitz3.ab2@4158>   MOVE.l destpointer,(A1)
00028E9A <AmiBlitz3.ab2@4161>   MOVEA.l A3,A1
00028E9C <AmiBlitz3.ab2@4162>   MOVEA.l (A3),A3
00028EA0 <AmiBlitz3.ab2@4163>   MOVE.l A3,$4(A2)
00028EA2 <AmiBlitz3.ab2@4164>   MOVEQ.l #$0C+2,D0
00028EA8 <AmiBlitz3.ab2@4165>   MOVE.l mempool,a0
00028EAE <AmiBlitz3.ab2@4166>   MOVEA.l _execbase,A6
00028EB2 <AmiBlitz3.ab2@4167>   JSR _FreePooled(A6)
00028EB6 <AmiBlitz3.ab2@4168> BRA.w JL_0_46BC
00028EC0 <AmiBlitz3.ab2@4173>    MOVE.l #forthstack,forthsp
00028ECA <AmiBlitz3.ab2@4174>   MOVE.l #precstack,precsp
00028ECE <AmiBlitz3.ab2@4175>    BSR.w getparameter2
00028ED2 <AmiBlitz3.ab2@4178>   BSR.w findlabel2
00028ED6 <AmiBlitz3.ab2@4179>    BEQ.w JL_0_4738
00028EDA <AmiBlitz3.ab2@4180>    BSR.w addlabelhash
00028EE2 <AmiBlitz3.ab2@4181>   MOVE.l #$1,$4(A2)
00028EE6 <AmiBlitz3.ab2@4182> BRA.w JL_0_4744
00028EEE <AmiBlitz3.ab2@4185>   CMPI.l #$1,$4(A2)
00028EF2 <AmiBlitz3.ab2@4186>    BNE.w illconerr
00028EF6 <AmiBlitz3.ab2@4195>   CMP.w #$3D,D0
00028EFA <AmiBlitz3.ab2@4196>   BEQ.w JL_0_474E
00028EFC <AmiBlitz3.ab2@4197> RTS
00028EFE <AmiBlitz3.ab2@4201>   MOVE.l A2,-(A7)
00028F04 <AmiBlitz3.ab2@4202>   JSR AJL_0_BF6E
00028F06 <AmiBlitz3.ab2@4203>   MOVEA.l (A7)+,A2
00028F0A <AmiBlitz3.ab2@4204>   MOVE.l D3,$8(A2)                                         ;store constant
00028F12 <AmiBlitz3.ab2@4205>   CMP.w #$0a,lastchar
00028F16 <AmiBlitz3.ab2@4206>   BNE 'l1
00028F1E <AmiBlitz3.ab2@4207>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00028F20 <AmiBlitz3.ab2@4210> RTS
00028F24 <AmiBlitz3.ab2@4213>   BSR.w findproc                                           ;write statement call
00028F28 <AmiBlitz3.ab2@4214>   BEQ _state
00028F2E <AmiBlitz3.ab2@4215>   TST.l unusedfunc
00028F32 <AmiBlitz3.ab2@4216>   BEQ noprocerr
00028F38 <AmiBlitz3.ab2@4218>   JSR gotoendsource
00028F3C <AmiBlitz3.ab2@4221>   TST.b $5(A2)
00028F42 <AmiBlitz3.ab2@4223>   MOVE.l a2,currentfunccall
00028F4A <AmiBlitz3.ab2@4224>   MOVE.b #1,funccall
00028F50 <AmiBlitz3.ab2@4225>   MOVE.b #1,isfunc(a2)
00028F54 <AmiBlitz3.ab2@4226>   MOVE.l $E(A2),-(A7)
00028F56 <AmiBlitz3.ab2@4227>   MOVEQ.l #$00,D0
00028F5A <AmiBlitz3.ab2@4228>   MOVE.b $4(A2),D0
00028F60 <AmiBlitz3.ab2@4229>   MOVE.l d0,parnumtemp
00028F64 <AmiBlitz3.ab2@4230>   BEQ.w JL_0_4786
00028F68 <AmiBlitz3.ab2@4231>   TST.b $20(a2)                                            ;increase if morepar
00028F6C <AmiBlitz3.ab2@4232>   BNE 'no0par
00028F6E <AmiBlitz3.ab2@4233>   MOVE.l a5,a4
00028F72 <AmiBlitz3.ab2@4236>   CMP.b #$20,(a4)+
00028F76 <AmiBlitz3.ab2@4237>   BEQ 'l1
00028F7C <AmiBlitz3.ab2@4238>   CMP.b #"}",-1(a4)
00028F80 <AmiBlitz3.ab2@4239>   BNE  'no0par                                             ;statementcall pars
00028F82 <AmiBlitz3.ab2@4240>   MOVEQ #0,d0
00028F86 <AmiBlitz3.ab2@4243>   LEA $16(A2),A1
00028F88 <AmiBlitz3.ab2@4246>   MOVE.l d1,-(a7)
00028F8A <AmiBlitz3.ab2@4247>   MOVE.b (a1),d2
00028F8C <AmiBlitz3.ab2@4248>   MOVE.l d0,d1
00028F90 <AmiBlitz3.ab2@4249>   CMP.w #4,d2
00028F94 <AmiBlitz3.ab2@4250>   BNE 'l1b
00028F9A <AmiBlitz3.ab2@4251>   ADD.l #$203c,d1
00028FA0 <AmiBlitz3.ab2@4253>   JSR writeword
00028FA6 <AmiBlitz3.ab2@4254>   MOVE.l #$ffff0000,d1
00028FAC <AmiBlitz3.ab2@4256>   JSR writelong
00028FB0 <AmiBlitz3.ab2@4257> BRA 'l2b
00028FB6 <AmiBlitz3.ab2@4260>   TST.b fpu
00028FBA <AmiBlitz3.ab2@4261>   BNE 'l1c
00028FBE <AmiBlitz3.ab2@4262>   CMP.w #5,d2
00028FC2 <AmiBlitz3.ab2@4263>   BNE 'l1c
00028FC8 <AmiBlitz3.ab2@4264>   ADD.l #$203c,d1
00028FCE <AmiBlitz3.ab2@4266>   JSR writeword
00028FD4 <AmiBlitz3.ab2@4267>   MOVE.l #$800000c1,d1
00028FDA <AmiBlitz3.ab2@4269>   JSR writelong
00028FDE <AmiBlitz3.ab2@4270> BRA 'l2b
00028FE4 <AmiBlitz3.ab2@4273>   ADD.l #$70ff,d1
00028FEA <AmiBlitz3.ab2@4275>   JSR writeword
00028FF0 <AmiBlitz3.ab2@4276>   MOVE.l #$f23c5000,d1
00028FF2 <AmiBlitz3.ab2@4277>   MOVE.l d0,d2
00028FF4 <AmiBlitz3.ab2@4278>   ASR.l #2,d2
00028FF6 <AmiBlitz3.ab2@4279>   ADD.l d2,d1
00028FFC <AmiBlitz3.ab2@4281>   JSR writelong
00029000 <AmiBlitz3.ab2@4282>   MOVE.w #$ffff,d1
00029006 <AmiBlitz3.ab2@4284>   JSR writeword
00029008 <AmiBlitz3.ab2@4287>   MOVE.l (a7)+,d1
0002900A <AmiBlitz3.ab2@4288>   ADDQ.l #1,a1
00029010 <AmiBlitz3.ab2@4289>   ADD.l #$0200,d0
00029016 <AmiBlitz3.ab2@4290>   CMP.l #$0e00,d0
0002901A <AmiBlitz3.ab2@4291>    BEQ syntaxerr
0002901C <AmiBlitz3.ab2@4292>   TST.b (a1)
00029020 <AmiBlitz3.ab2@4293>    BNE 'again
00029024 <AmiBlitz3.ab2@4294> BRA JL_0_4786
0002902E <AmiBlitz3.ab2@4297>   MOVE.w a2offset,a2offset2
00029032 <AmiBlitz3.ab2@4298>   LEA $16(A2),A2
00029038 <AmiBlitz3.ab2@4299>   MOVE.b funcparloop,-(a7)
00029040 <AmiBlitz3.ab2@4300>   MOVE.b #1,funcparloop
00029044 <AmiBlitz3.ab2@4301>   BSR.w fetchpees2
0002904A <AmiBlitz3.ab2@4302>   MOVE.b (a7)+,funcparloop
0002904E <AmiBlitz3.ab2@4303> BRA.w JL_0_478A
00029052 <AmiBlitz3.ab2@4306>   BSR.w get1bytemain
00029056 <AmiBlitz3.ab2@4309>   CMP.w #$7D,D0
0002905A <AmiBlitz3.ab2@4310>    BNE.w morepar_                                          ;syntax error morepar
00029060 <AmiBlitz3.ab2@4311>    JSR chkstak
00029062 <AmiBlitz3.ab2@4312>   MOVE.l (A7)+,D1
00029068 <AmiBlitz3.ab2@4328>    JSR JL_0_AFCA
0002906E <AmiBlitz3.ab2@4350>   CLR.b funccall
00029072 <AmiBlitz3.ab2@4351> BRA.w get1bytemain
00029076 <AmiBlitz3.ab2@4355>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
0002907A <AmiBlitz3.ab2@4356>   BNE 'l2
0002907E <AmiBlitz3.ab2@4357>    MOVE.w #$dd05,d0
00029082 <AmiBlitz3.ab2@4360>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00029086 <AmiBlitz3.ab2@4361>   BNE 'l3
0002908A <AmiBlitz3.ab2@4362>    MOVE.w #$dd06,d0
0002908E <AmiBlitz3.ab2@4365>   CMP.w #-$7FC4,D0
00029092 <AmiBlitz3.ab2@4366>   BCS.w JL_0_47C4
00029096 <AmiBlitz3.ab2@4367>     CMP.w #-$7F4D,D0
0002909A <AmiBlitz3.ab2@4368>     BCC.w JL_0_47C4
000290A2 <AmiBlitz3.ab2@4369>       BTST #$7,assemblercheck                              ;inline Assembler checking
000290A6 <AmiBlitz3.ab2@4370>       BNE.b JL_0_47C0
000290AC <AmiBlitz3.ab2@4371>         TST.b debugmode
000290B0 <AmiBlitz3.ab2@4372>         BEQ.b 'l10
000290BA <AmiBlitz3.ab2@4377>           MOVE.w d_nomemleft,dontwrite
000290C4 <AmiBlitz3.ab2@4378>           MOVE.l d_bigpc,bigpc
000290CE <AmiBlitz3.ab2@4379>           MOVE.l d_pc,destpointer
000290D8 <AmiBlitz3.ab2@4380>           MOVE.l cont_pc2,cont_pc
000290DC <AmiBlitz3.ab2@4386> BRA.w JL_0_612C
000290E0 <AmiBlitz3.ab2@4389>   BCLR #$F,D0
000290E2 <AmiBlitz3.ab2@4390>   MOVE.w D0,D1
000290E6 <AmiBlitz3.ab2@4391>   ANDI.w #$7F00,D1
000290EA <AmiBlitz3.ab2@4392>   BNE.w JL_0_4856
000290EE <AmiBlitz3.ab2@4393>     CMP.w #$B3,D0                                          ;intern Instructions
000290F2 <AmiBlitz3.ab2@4394>     BCS.w JL_0_47F2
000290F6 <AmiBlitz3.ab2@4395>       SUBI.w #$77,D0
000290FA <AmiBlitz3.ab2@4396>       CMP.w #$4B,D0
000290FE <AmiBlitz3.ab2@4397>       BEQ.w JL_0_4830
00029102 <AmiBlitz3.ab2@4398>         CMP.w #$46,D0
00029106 <AmiBlitz3.ab2@4399>         BEQ.w JL_0_4830
0002910A <AmiBlitz3.ab2@4400> BRA.w JL_0_4834                                            ; change tokennum
0002910E <AmiBlitz3.ab2@4403>     CMP.w #$38,D0
00029112 <AmiBlitz3.ab2@4404>      BEQ.w JL_0_4830
00029116 <AmiBlitz3.ab2@4405>     CMP.w #$39,D0
0002911A <AmiBlitz3.ab2@4406>      BEQ.w JL_0_4830
0002911E <AmiBlitz3.ab2@4407>     CMP.w #$D,D0
00029122 <AmiBlitz3.ab2@4408>      BEQ.w JL_0_4830
00029126 <AmiBlitz3.ab2@4409>     CMP.w #$12,D0
0002912A <AmiBlitz3.ab2@4410>      BEQ.w JL_0_4830
0002912E <AmiBlitz3.ab2@4411>     CMP.w #$13,D0
00029132 <AmiBlitz3.ab2@4412>      BEQ.w JL_0_4830
00029136 <AmiBlitz3.ab2@4413>     CMP.w #$1A,D0
0002913A <AmiBlitz3.ab2@4414>      BEQ.w JL_0_4830
0002913E <AmiBlitz3.ab2@4415>     CMP.w #$2A,D0
00029142 <AmiBlitz3.ab2@4416>      BHI.w JL_0_4834
00029146 <AmiBlitz3.ab2@4417>     CMP.w #$23,D0
0002914A <AmiBlitz3.ab2@4418>      BCS.b JL_0_4834
0002914E <AmiBlitz3.ab2@4421>   BSR.w undodebug
00029150 <AmiBlitz3.ab2@4424>   SUBQ.w #1,D0
00029152 <AmiBlitz3.ab2@4425>   LSL.w #2,D0
00029158 <AmiBlitz3.ab2@4432>   LEA instructionbase,A0
0002915C <AmiBlitz3.ab2@4433>   MOVEA.l $0(A0,D0.W),A0
0002915E <AmiBlitz3.ab2@4434>   MOVE.l A0,-(A7)
00029162 <AmiBlitz3.ab2@4435> BRA.w get1bytemain
00029164 <AmiBlitz3.ab2@4441>   MOVE.w D0,D1
00029168 <AmiBlitz3.ab2@4442>    BSR.w searchinstr
0002916E <AmiBlitz3.ab2@4443>    TST.b newmode
00029172 <AmiBlitz3.ab2@4444>    BNE compile_term
00029178 <AmiBlitz3.ab2@4445>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
0002917C <AmiBlitz3.ab2@4446>    BNE.w stamigalib
00029182 <AmiBlitz3.ab2@4447>   BTST #$0,$1(A3)
00029186 <AmiBlitz3.ab2@4448>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
0002918A <AmiBlitz3.ab2@4449>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
0002918E <AmiBlitz3.ab2@4450>    BSR.w JL_0_66F6
00029194 <AmiBlitz3.ab2@4456>   MOVE.w numreps,-(A7)
0002919A <AmiBlitz3.ab2@4457>   MOVE.w userp,-(A7)
000291A0 <AmiBlitz3.ab2@4458>   MOVE.w a2offset,-(A7)
000291A2 <AmiBlitz3.ab2@4459>   MOVE.l A2,-(A7)                                          ;recurs.
000291AC <AmiBlitz3.ab2@4460>   MOVE.w convsize,userp
000291B0 <AmiBlitz3.ab2@4461>   LEA $6(A3),A1
000291B2 <AmiBlitz3.ab2@4465>    MOVE.w (A1),D2
000291B6 <AmiBlitz3.ab2@4466>    BMI.w SERR                                              ;statement syntax error
000291BA <AmiBlitz3.ab2@4467>   ANDI.w #$FF,D2
000291BC <AmiBlitz3.ab2@4468>   CMP.w D2,D1
000291C0 <AmiBlitz3.ab2@4469>    BEQ.w JL_0_48E0
000291C4 <AmiBlitz3.ab2@4470>    BCS.w JL_0_48CC
000291C6 <AmiBlitz3.ab2@4471>   MOVE.b (A1),D3
000291CA <AmiBlitz3.ab2@4472>   ANDI.w #$7,D3
000291CE <AmiBlitz3.ab2@4473>    BEQ.w JL_0_48CC
000291D0 <AmiBlitz3.ab2@4474>   MOVE.w D2,D4
000291D2 <AmiBlitz3.ab2@4475>   SUB.w D3,D4
000291D4 <AmiBlitz3.ab2@4476>   MOVEQ.l #$00,D5
000291D6 <AmiBlitz3.ab2@4477>   MOVE.w D1,D5
000291D8 <AmiBlitz3.ab2@4478>   SUB.w D4,D5
000291DA <AmiBlitz3.ab2@4479>   DIVU D3,D5
000291DC <AmiBlitz3.ab2@4480>   SWAP D5
000291DE <AmiBlitz3.ab2@4481>   TST.w D5
000291E2 <AmiBlitz3.ab2@4482>    BEQ.w JL_0_48E0
000291E4 <AmiBlitz3.ab2@4485>   ADDQ.w #2,A1
000291E6 <AmiBlitz3.ab2@4486>   ADDA.w D2,A1
000291EA <AmiBlitz3.ab2@4487>    BSR.w aligna1
000291EE <AmiBlitz3.ab2@4488>    BSR.w skiplibreg
000291F2 <AmiBlitz3.ab2@4489>   LEA $C(A1),A1
000291F6 <AmiBlitz3.ab2@4490> BRA.w JL_0_489A
000291F8 <AmiBlitz3.ab2@4493>   MOVE.w (a3),d2
000291FC <AmiBlitz3.ab2@4494>   BTST #1,d2
00029200 <AmiBlitz3.ab2@4495>   BEQ statement_
00029204 <AmiBlitz3.ab2@4496>   CMP.w #1,d1
00029208 <AmiBlitz3.ab2@4497>   BEQ statement_
0002920C <AmiBlitz3.ab2@4500>   CMP.b #$20,(a5)+
00029210 <AmiBlitz3.ab2@4501>   BEQ 'l2
00029216 <AmiBlitz3.ab2@4502>   CMP.b #"(",-2(a5)
0002921A <AmiBlitz3.ab2@4503>   BNE 'l1
0002921E <AmiBlitz3.ab2@4504> BRA parameter_
00029222 <AmiBlitz3.ab2@4507> BRA inbrackets_
00029224 <AmiBlitz3.ab2@4510>   MOVE.b (A1),D2
00029226 <AmiBlitz3.ab2@4511>   LSL.w #8,D2
00029228 <AmiBlitz3.ab2@4512>   OR.w D2,D1
0002922A <AmiBlitz3.ab2@4513>   MOVE.l A1,-(A7)
00029230 <AmiBlitz3.ab2@4514>   CLR.w a2offset
00029232 <AmiBlitz3.ab2@4515>   TST.w D1
00029236 <AmiBlitz3.ab2@4516>    BEQ.w JL_0_4900
0002923A <AmiBlitz3.ab2@4517>   LEA $2(A1),A2
0002923E <AmiBlitz3.ab2@4518>    BSR.w fetchlibps
00029242 <AmiBlitz3.ab2@4519> BRA.w JL_0_4904
00029246 <AmiBlitz3.ab2@4522>   BSR.w get1bytemain
00029248 <AmiBlitz3.ab2@4525>   MOVEA.l (A7)+,A1
0002924A <AmiBlitz3.ab2@4526>   MOVEA.l (A7)+,A2
00029250 <AmiBlitz3.ab2@4527>   MOVE.w a2offset,D1
00029254 <AmiBlitz3.ab2@4528>    BEQ.w JL_0_493A
0002925A <AmiBlitz3.ab2@4529>   MOVE.w D1,preplibst+2
00029260 <AmiBlitz3.ab2@4530>   MOVE.l preplibst,D1
00029266 <AmiBlitz3.ab2@4531>    JSR writelong                                           ;write array offset stack correct
00029270 <AmiBlitz3.ab2@4532>   MOVE.w numreps,movenumrep+2
00029274 <AmiBlitz3.ab2@4533>    BEQ.w JL_0_493A
0002927A <AmiBlitz3.ab2@4534>   MOVE.l movenumrep,D1
00029280 <AmiBlitz3.ab2@4535>    JSR writelong
00029286 <AmiBlitz3.ab2@4539>   JSR userjsr
0002928C <AmiBlitz3.ab2@4542>   MOVE.w a2offset,D1
00029290 <AmiBlitz3.ab2@4543>    BEQ.w JL_0_4974
00029294 <AmiBlitz3.ab2@4544>   CMP.w #$8,D1
00029298 <AmiBlitz3.ab2@4545>    BHI.w JL_0_4964
0002929C <AmiBlitz3.ab2@4546>   ANDI.w #$7,D1
0002929E <AmiBlitz3.ab2@4547>   LSL.w #8,D1
000292A0 <AmiBlitz3.ab2@4548>   LSL.w #1,D1
000292A4 <AmiBlitz3.ab2@4549>   ORI.w #$504F,D1
000292AA <AmiBlitz3.ab2@4551>   JSR writeword
000292AE <AmiBlitz3.ab2@4552> BRA.w JL_0_4974
000292B4 <AmiBlitz3.ab2@4555>   MOVE.w D1,fixlibst+2
000292BA <AmiBlitz3.ab2@4556>   MOVE.l fixlibst,D1
000292C0 <AmiBlitz3.ab2@4557>   JSR writelong
000292C6 <AmiBlitz3.ab2@4560>   MOVE.w (A7)+,a2offset
000292CC <AmiBlitz3.ab2@4561>   MOVE.w (A7)+,userp
000292D2 <AmiBlitz3.ab2@4562>   MOVE.w (A7)+,numreps
000292D6 <AmiBlitz3.ab2@4563> BRA.w reget
000292DA <AmiBlitz3.ab2@4567>   MOVEM.l A2-A3,-(A7)
000292E0 <AmiBlitz3.ab2@4568>   CLR.b doublepeek
000292E6 <AmiBlitz3.ab2@4569>   MOVE.l A5,lastsourcepos
000292EA <AmiBlitz3.ab2@4570>    BSR.w getchar
000292EE <AmiBlitz3.ab2@4571>   CMP.w #$2E,D0
000292F2 <AmiBlitz3.ab2@4572>    BEQ.w JL_0_49B4
000292F8 <AmiBlitz3.ab2@4573>   MOVEA.l defaulttype,A2
000292FC <AmiBlitz3.ab2@4574>   CMP.w #$24,D0
00029300 <AmiBlitz3.ab2@4575>    BNE.w JL_0_49CA
00029302 <AmiBlitz3.ab2@4576>   MOVEQ.l #$07,D1
00029306 <AmiBlitz3.ab2@4577> BRA.w JL_0_49DE
0002930A <AmiBlitz3.ab2@4580>   BSR.w getparameter2
0002930E <AmiBlitz3.ab2@4581>   BEQ.w syntaxerr
00029314 <AmiBlitz3.ab2@4582>   LEA newtypebase,A2
00029318 <AmiBlitz3.ab2@4583>   BSR.w findtype
0002931C <AmiBlitz3.ab2@4584>   BNE.w notypeerr
00029326 <AmiBlitz3.ab2@4588>   MOVE.w oldqflag,instringon
0002932C <AmiBlitz3.ab2@4589>   MOVEA.l lastsourcepos,A5
00029334 <AmiBlitz3.ab2@4590>   CMPI.l #$100,$4(A2)
00029338 <AmiBlitz3.ab2@4591>    BCC.w illtypeerr
0002933C <AmiBlitz3.ab2@4592>   MOVE.w $6(A2),D1
00029342 <AmiBlitz3.ab2@4593>   CMP.w #8,8(a2)
00029346 <AmiBlitz3.ab2@4594>   BNE 'l1
0002934E <AmiBlitz3.ab2@4595>   MOVE.b #1,doublepeek
00029354 <AmiBlitz3.ab2@4599>   MOVE.w D1,convsize
00029358 <AmiBlitz3.ab2@4600>   MOVEM.l (A7)+,A2-A3
0002935A <AmiBlitz3.ab2@4601> RTS
00029360 <AmiBlitz3.ab2@4606>   BTST #$3,$1(A3)
00029364 <AmiBlitz3.ab2@4607>   BEQ.w JL_0_4A06
00029368 <AmiBlitz3.ab2@4608>   BSR.w AJL_0_498A                                         ;read peek/poke size
0002936C <AmiBlitz3.ab2@4610>   ORI.w #$7000,D1
00029372 <AmiBlitz3.ab2@4611>   JSR writeword
00029378 <AmiBlitz3.ab2@4612>   ADDQ.w #1,regnum
0002937A <AmiBlitz3.ab2@4615> RTS
0002937C <AmiBlitz3.ab2@4621>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
0002937E <AmiBlitz3.ab2@4622>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00029380 <AmiBlitz3.ab2@4623>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00029382 <AmiBlitz3.ab2@4627> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00029384 <AmiBlitz3.ab2@4628>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00029386 <AmiBlitz3.ab2@4629>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00029388 <AmiBlitz3.ab2@4633> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
0002938A <AmiBlitz3.ab2@4634>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
0002938C <AmiBlitz3.ab2@4635>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
0002938E <AmiBlitz3.ab2@4639> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00029390 <AmiBlitz3.ab2@4642> srctype:    Ds.w 1
00029394 <AmiBlitz3.ab2@4647>   BSR.w excget
00029398 <AmiBlitz3.ab2@4648>   CMP.w #$2C,D0
0002939C <AmiBlitz3.ab2@4649>    BNE.w syntaxerr
000293A2 <AmiBlitz3.ab2@4650>   MOVE.b D2,srctype
000293A8 <AmiBlitz3.ab2@4651>   MOVE.w pusha2,D1
000293AE <AmiBlitz3.ab2@4652>   JSR writeword
000293B2 <AmiBlitz3.ab2@4653>   BSR.w get1bytemain
000293B6 <AmiBlitz3.ab2@4654>   BSR.w excget
000293BC <AmiBlitz3.ab2@4655>   CMP.b srctype,D2
000293C0 <AmiBlitz3.ab2@4656>    BNE.w excerr2
000293C6 <AmiBlitz3.ab2@4657>   MOVE.w pulla1,D1
000293CC <AmiBlitz3.ab2@4658>    JSR writeword
000293D0 <AmiBlitz3.ab2@4659>   CMP.b #$2,D2
000293D4 <AmiBlitz3.ab2@4660>    BCS.w JL_0_4B2A
000293D8 <AmiBlitz3.ab2@4661>    BEQ.w JL_0_4B1E
000293DC <AmiBlitz3.ab2@4662>   LEA swapl(PC),A0
000293E0 <AmiBlitz3.ab2@4663>   LEA swaplf(PC),A1
000293E6 <AmiBlitz3.ab2@4664> JMP pokecode
000293EA <AmiBlitz3.ab2@4667>   LEA swapw(PC),A0
000293EE <AmiBlitz3.ab2@4668>   LEA swapwf(PC),A1
000293F4 <AmiBlitz3.ab2@4669> JMP pokecode
000293F8 <AmiBlitz3.ab2@4672>   LEA swapb(PC),A0
000293FC <AmiBlitz3.ab2@4673>   LEA swapbf(PC),A1
00029402 <AmiBlitz3.ab2@4674> JMP pokecode
00029408 <AmiBlitz3.ab2@4678>   JSR getparameter
0002940C <AmiBlitz3.ab2@4679>   BSR.w JL_0_8E3C
00029410 <AmiBlitz3.ab2@4680>   BSR.w calcvar
00029414 <AmiBlitz3.ab2@4681>   BTST #$E,D2
00029418 <AmiBlitz3.ab2@4682>    BEQ.w JL_0_4B4E
0002941C <AmiBlitz3.ab2@4683>   MOVE.b #$4,D2
0002941E <AmiBlitz3.ab2@4686>   TST.b D2
00029422 <AmiBlitz3.ab2@4687>    BEQ.w excerr
00029426 <AmiBlitz3.ab2@4688>   BTST #$F,D2
0002942A <AmiBlitz3.ab2@4689>    BNE.w JL_0_4B6A
00029430 <AmiBlitz3.ab2@4690>   MOVE.w leaamp,D1
00029436 <AmiBlitz3.ab2@4691>    JSR pokewda5s
00029438 <AmiBlitz3.ab2@4692>   MOVE.w D3,D1
0002943E <AmiBlitz3.ab2@4693> JMP writeword
00029440 <AmiBlitz3.ab2@4696> RTS
00029446 <AmiBlitz3.ab2@4702>   MOVE.l mempool,a0
0002944C <AmiBlitz3.ab2@4703>   MOVEA.l _execbase,A6
00029450 <AmiBlitz3.ab2@4704> JMP _AllocPooled(a6)
00029454 <AmiBlitz3.ab2@4711>   MOVE.w #$BF00,D1
0002945A <AmiBlitz3.ab2@4712> JMP Atokejsr
0002945E <AmiBlitz3.ab2@4716>   CMP.w #-$7FFA,D0
00029462 <AmiBlitz3.ab2@4717>    BEQ.w popreturn
00029466 <AmiBlitz3.ab2@4718>   CMP.w #-$7FEA,D0
0002946A <AmiBlitz3.ab2@4719>    BEQ.w popnext2
0002946E <AmiBlitz3.ab2@4720>   CMP.w #-$7FF2,D0
00029472 <AmiBlitz3.ab2@4721>    BEQ.w popselect2
00029476 <AmiBlitz3.ab2@4722>   CMP.w #-$7FF5,D0
0002947A <AmiBlitz3.ab2@4723>    BEQ.w get1bytemain
0002947E <AmiBlitz3.ab2@4724>   CMP.w #-$7FF4,D0
00029482 <AmiBlitz3.ab2@4725>    BEQ.w get1bytemain
00029486 <AmiBlitz3.ab2@4726>   CMP.w #-$7FEC,D0
0002948A <AmiBlitz3.ab2@4727>    BEQ.w get1bytemain
0002948E <AmiBlitz3.ab2@4728>   CMP.w #-$7F45,D0
00029492 <AmiBlitz3.ab2@4729>    BEQ.w get1bytemain
00029496 <AmiBlitz3.ab2@4730> BRA.w syntaxerr
0002949C <AmiBlitz3.ab2@4733>   TST.b debugmode
000294A0 <AmiBlitz3.ab2@4734>    BEQ.w popreturn__norerr
000294A4 <AmiBlitz3.ab2@4735>   LEA popreturn__rfix(PC),A0
000294A8 <AmiBlitz3.ab2@4736>   LEA popreturn__rfixf(PC),A1
000294AE <AmiBlitz3.ab2@4737>    JSR pokecode
000294B2 <AmiBlitz3.ab2@4738>   MOVE.w #$C305,D1
000294B8 <AmiBlitz3.ab2@4739>    JSR Atokejsr
000294BC <AmiBlitz3.ab2@4740>   MOVE.w popreturn__rfix2(PC),D1
000294C2 <AmiBlitz3.ab2@4742>    JSR writeword
000294C6 <AmiBlitz3.ab2@4743> BRA.w get1bytemain
000294CC <AmiBlitz3.ab2@4747>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
000294D0 <AmiBlitz3.ab2@4748>   BEQ.w popreturn__rfix2
000294D6 <AmiBlitz3.ab2@4751>   JSR $20000                                               ;reass
000294D8 <AmiBlitz3.ab2@4754>   ADDQ.w #6,A7
000294DC <AmiBlitz3.ab2@4758>   MOVE.w popreturn__sfix(PC),D1
000294E2 <AmiBlitz3.ab2@4759>   JSR writeword
000294E6 <AmiBlitz3.ab2@4760> BRA.w get1bytemain
000294E8 <AmiBlitz3.ab2@4765>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
000294EE <AmiBlitz3.ab2@4770>   MOVE.l firstfor,D0
000294F2 <AmiBlitz3.ab2@4771>    BEQ.w noforerr
000294F4 <AmiBlitz3.ab2@4772>   MOVEA.l D0,A2
000294F8 <AmiBlitz3.ab2@4773>    BSR.w get1bytemain
000294FC <AmiBlitz3.ab2@4774>   BSR.w popnext
00029502 <AmiBlitz3.ab2@4777>   TST.b debugmode
00029506 <AmiBlitz3.ab2@4778>    BEQ.w popnext3__ner
0002950C <AmiBlitz3.ab2@4779>   MOVE.l nextfixw2,D1
00029512 <AmiBlitz3.ab2@4780>   CMPI.w #$3,$C(A2)
00029516 <AmiBlitz3.ab2@4781>    BCS.w writelong
0002951C <AmiBlitz3.ab2@4782>   MOVE.l nextfixl2,D1
00029520 <AmiBlitz3.ab2@4783> BRA.w writelong
00029526 <AmiBlitz3.ab2@4786>   CMPI.w #$3,$C(A2)
0002952A <AmiBlitz3.ab2@4787>    BCS.w popnext3__skip2
00029530 <AmiBlitz3.ab2@4788>   MOVE.l nextfixl,D1
00029534 <AmiBlitz3.ab2@4789> BRA.w writelong
0002953A <AmiBlitz3.ab2@4792>   MOVE.w nextfixw,D1
00029540 <AmiBlitz3.ab2@4793> JMP writeword
00029544 <AmiBlitz3.ab2@4797>   MOVE.w $C(A2),D0
0002954A <AmiBlitz3.ab2@4798>   TST.b debugmode
0002954E <AmiBlitz3.ab2@4799>    BEQ.w popnext__norunerr
00029552 <AmiBlitz3.ab2@4800>   MOVE.w #$C306,D1
00029556 <AmiBlitz3.ab2@4801>   CMP.w #$3,D0
0002955A <AmiBlitz3.ab2@4802>    BCS.w popnext__oktc
0002955C <AmiBlitz3.ab2@4803>   ADDQ.w #1,D1
0002955E <AmiBlitz3.ab2@4806>   MOVE.l A2,-(A7)
00029564 <AmiBlitz3.ab2@4807>   JSR Atokejsr
00029566 <AmiBlitz3.ab2@4808>   MOVEA.l (A7)+,A2
00029568 <AmiBlitz3.ab2@4811> RTS
0002956E <AmiBlitz3.ab2@4815>   MOVE.l firstsel,D0
00029572 <AmiBlitz3.ab2@4816>    BEQ.w eselerr
00029574 <AmiBlitz3.ab2@4817>   MOVEA.l D0,A2
00029578 <AmiBlitz3.ab2@4818>    BSR.w get1bytemain
0002957C <AmiBlitz3.ab2@4821>   MOVE.w $C(A2),D2
00029582 <AmiBlitz3.ab2@4822>   TST.b debugmode
00029586 <AmiBlitz3.ab2@4823>    BEQ.w popselect__norerr
0002958A <AmiBlitz3.ab2@4824>   MOVE.w #$C313,D1
0002958E <AmiBlitz3.ab2@4825>   CMP.w #$3,D2
00029592 <AmiBlitz3.ab2@4826>    BCS.w popselect__chkit
00029594 <AmiBlitz3.ab2@4827>   ADDQ.w #1,D1
0002959A <AmiBlitz3.ab2@4830>   JSR Atokejsr                                             ;make sure next thing on stack
0002959C <AmiBlitz3.ab2@4834>   MOVEQ.l #$02,D1
000295A0 <AmiBlitz3.ab2@4835>   CMP.w #$3,D2
000295A4 <AmiBlitz3.ab2@4836>    BCS.w popselect__doit
000295A6 <AmiBlitz3.ab2@4837>   MOVEQ.l #$04,D1
000295AA <AmiBlitz3.ab2@4838>   CMP.w #$7,D2
000295AE <AmiBlitz3.ab2@4839>    BCS.w popselect__doit
000295B4 <AmiBlitz3.ab2@4840>   LEA endselstr,A0
000295BA <AmiBlitz3.ab2@4841>   LEA endselstrf,A1
000295C0 <AmiBlitz3.ab2@4842>   TST.b debugmode
000295C4 <AmiBlitz3.ab2@4843>    BEQ.w popselect__norerr3
000295CA <AmiBlitz3.ab2@4844>   LEA endselstrf2,A1
000295D0 <AmiBlitz3.ab2@4847>   JSR pokecode
000295D4 <AmiBlitz3.ab2@4848>   MOVE.w #$C003,D1                                         ;global freemem
000295DA <AmiBlitz3.ab2@4849> JMP Atokejsr
000295E0 <AmiBlitz3.ab2@4852>   TST.b debugmode
000295E4 <AmiBlitz3.ab2@4853>    BEQ.w popselect__norerr2
000295E6 <AmiBlitz3.ab2@4854>   ADDQ.w #2,D1                                             ;for the "sE"
000295E8 <AmiBlitz3.ab2@4857>   LSL.w #8,D1
000295EA <AmiBlitz3.ab2@4858>   LSL.w #1,D1
000295F0 <AmiBlitz3.ab2@4859>   OR.w endsel,D1
000295F4 <AmiBlitz3.ab2@4860> BRA.w writeword
000295F8 <AmiBlitz3.ab2@4863> firstrep:    Ds.l 1
000295FC <AmiBlitz3.ab2@4864> replineat:   Ds.l 1
00029602 <AmiBlitz3.ab2@4873>   CLR.l fp0addr
0002960C <AmiBlitz3.ab2@4874>   MOVE.l linenumat,replineat
0002960E <AmiBlitz3.ab2@4875>   MOVEQ.l #$08,D0
00029614 <AmiBlitz3.ab2@4876>   MOVEA.l _execbase,A6
0002961A <AmiBlitz3.ab2@4877>   MOVE.l mempool,a0
0002961E <AmiBlitz3.ab2@4878>   JSR _AllocPooled(a6)
00029620 <AmiBlitz3.ab2@4880>   MOVEA.l D0,A0
00029624 <AmiBlitz3.ab2@4881>   MOVE.l firstrep(PC),(A0)
0002962A <AmiBlitz3.ab2@4882>   MOVE.l A0,firstrep
00029632 <AmiBlitz3.ab2@4883>   MOVE.l destpointer,$4(A0)
00029634 <AmiBlitz3.ab2@4884> RTS
0002963A <AmiBlitz3.ab2@4887> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
0002963E <AmiBlitz3.ab2@4890>   LEA str_temp(PC),A1
00029640 <AmiBlitz3.ab2@4891>   CLR.w (A1)
00029644 <AmiBlitz3.ab2@4892>   CLR.l $2(A1)
00029646 <AmiBlitz3.ab2@4895>   MOVEQ.l #$04,D0
0002964A <AmiBlitz3.ab2@4898>     MOVE.b $1(A1),(A1)+
0002964E <AmiBlitz3.ab2@4899>   DBF D0,check_for_infoextention__loop
00029652 <AmiBlitz3.ab2@4904>   LEA str_temp(PC),A1
00029654 <AmiBlitz3.ab2@4905>   MOVE.b (A0),D0
00029658 <AmiBlitz3.ab2@4906>   ORI.b #$20,D0
0002965C <AmiBlitz3.ab2@4907>   MOVE.b D0,$5(A1)
0002965E <AmiBlitz3.ab2@4908>   TST.b (A0)+
00029662 <AmiBlitz3.ab2@4909>    BNE.w check_for_infoextention__loop2
00029666 <AmiBlitz3.ab2@4910>   CMPI.w #$2E69,(A1)+                                      ;".i"
0002966A <AmiBlitz3.ab2@4911>    BNE.w check_for_infoextention__no
00029670 <AmiBlitz3.ab2@4912>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00029672 <AmiBlitz3.ab2@4915> RTS
00029676 <AmiBlitz3.ab2@4919>   BPL.w gettokeps__evaltoke
00029678 <AmiBlitz3.ab2@4920>   MOVE.w D0,D1
0002967C <AmiBlitz3.ab2@4921>   ANDI.w #$7F80,D1
00029680 <AmiBlitz3.ab2@4922>    BEQ.w tokeerr
00029684 <AmiBlitz3.ab2@4923>   BCLR #$F,D0
00029686 <AmiBlitz3.ab2@4924>   MOVE.w D0,D4                                             ;got toke number
0002968A <AmiBlitz3.ab2@4925>   BSR.w get1bytemain
0002968E <AmiBlitz3.ab2@4926> BRA.w gettokeps__gotnum
00029694 <AmiBlitz3.ab2@4929>   JSR JL_0_BF6A
0002969A <AmiBlitz3.ab2@4930>   CMP.l #MaxWord,D3
0002969E <AmiBlitz3.ab2@4931>    BHI.w tokeerr
000296A0 <AmiBlitz3.ab2@4932>   TST.w D6
000296A4 <AmiBlitz3.ab2@4933>    BNE.w tokeerr
000296A6 <AmiBlitz3.ab2@4934>   MOVE.w D3,D4
000296A8 <AmiBlitz3.ab2@4937>   MOVEQ.l #$00,D5
000296AC <AmiBlitz3.ab2@4938>   CMP.w #$2C,D0
000296B0 <AmiBlitz3.ab2@4939>    BNE.w gettokeps__gotfrom
000296B2 <AmiBlitz3.ab2@4940>   MOVE.w D4,-(A7)
000296B8 <AmiBlitz3.ab2@4941>    JSR AJL_0_BF6E
000296BE <AmiBlitz3.ab2@4942>   CMP.l #MaxWord,D3
000296C2 <AmiBlitz3.ab2@4943>    BHI.w tokeerr
000296C4 <AmiBlitz3.ab2@4944>   TST.w D6
000296C8 <AmiBlitz3.ab2@4945>    BNE.w tokeerr
000296CA <AmiBlitz3.ab2@4946>   MOVE.w D3,D5
000296CC <AmiBlitz3.ab2@4947>   MOVE.w (A7)+,D4
000296CE <AmiBlitz3.ab2@4950> RTS                                                        ;d4=toke, d5=form
000296D0 <AmiBlitz3.ab2@4954>   TST.w D0
000296D4 <AmiBlitz3.ab2@4955>    BSR.w gettokeps
000296D8 <AmiBlitz3.ab2@4956>   MOVE.w #$4EB9,D1
000296DC <AmiBlitz3.ab2@4957>   BSR.w writeword
000296E0 <AmiBlitz3.ab2@4958>   BSR.w addoff
000296E2 <AmiBlitz3.ab2@4959>   MOVE.w D5,D1
000296E6 <AmiBlitz3.ab2@4960>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
000296E8 <AmiBlitz3.ab2@4961>   SWAP D1
000296EA <AmiBlitz3.ab2@4962>   MOVE.w D4,D1
000296EE <AmiBlitz3.ab2@4963> BRA.w writelong
000296F0 <AmiBlitz3.ab2@4967>   TST.w D0
000296F4 <AmiBlitz3.ab2@4968>    BSR.w gettokeps
000296F8 <AmiBlitz3.ab2@4969>   MOVE.w #$4EB9,D1
000296FC <AmiBlitz3.ab2@4970>   BSR.w writeword
00029700 <AmiBlitz3.ab2@4971>   BSR.w addoff
00029702 <AmiBlitz3.ab2@4972>   MOVE.w D5,D1
00029706 <AmiBlitz3.ab2@4973>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00029708 <AmiBlitz3.ab2@4974>   SWAP D1
0002970A <AmiBlitz3.ab2@4975>   MOVE.w D4,D1
0002970E <AmiBlitz3.ab2@4976> BRA.w writelong
00029714 <AmiBlitz3.ab2@4980>   JSR JL_0_BF6A
0002971A <AmiBlitz3.ab2@4981>   CMP.l #$10000,D3
0002971E <AmiBlitz3.ab2@4982>    BCC.w tokeerr
00029720 <AmiBlitz3.ab2@4983>   MOVE.w D3,D1
00029726 <AmiBlitz3.ab2@4984> JMP Atokejsr
0002972A <AmiBlitz3.ab2@4988>   BSR.w gettokeps
0002972E <AmiBlitz3.ab2@4989>   MOVE.w #$4EB9,D1
00029732 <AmiBlitz3.ab2@4990>   BSR.w writeword
00029738 <AmiBlitz3.ab2@4991>   MOVE.l destpointer,D3
00029740 <AmiBlitz3.ab2@4992>   BTST #$7,blitzmode
00029744 <AmiBlitz3.ab2@4993>    BEQ.w do_TokeJsr__inamiga
00029748 <AmiBlitz3.ab2@4994>   BSET #$E,D5
0002974C <AmiBlitz3.ab2@4997>   BSR.w JL_0_6E86
00029750 <AmiBlitz3.ab2@4998>   BSR.w addoff
00029754 <AmiBlitz3.ab2@4999> BRA.w writelong
00029758 <AmiBlitz3.ab2@5003>   BEQ.w do_VWait__zero
0002975A <AmiBlitz3.ab2@5004>   MOVEQ.l #$02,D2                                          ;get a word
00029760 <AmiBlitz3.ab2@5006>   JSR bakeval
00029764 <AmiBlitz3.ab2@5007>   MOVE.w fvwait(PC),D1
00029768 <AmiBlitz3.ab2@5008> BRA.w do_VWait__vcont
0002976C <AmiBlitz3.ab2@5011>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00029770 <AmiBlitz3.ab2@5014>   BSR.w writeword
00029774 <AmiBlitz3.ab2@5015>   MOVE.w #$C104,D1
0002977A <AmiBlitz3.ab2@5016> JMP Atokejsr
0002977C <AmiBlitz3.ab2@5020>   SUBQ.w #1,D0
00029782 <AmiBlitz3.ab2@5023>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
00029786 <AmiBlitz3.ab2@5026>   Dc.l $426d0001                                           ;clr.w $0(A5)
0002978A <AmiBlitz3.ab2@5030>   MOVE.b debugmode(PC),D1
0002978E <AmiBlitz3.ab2@5031>   BEQ.b debugmode_codelabel__skip
00029792 <AmiBlitz3.ab2@5032>   MOVE.w #$D500,D1
00029798 <AmiBlitz3.ab2@5033> JMP Atokejsr
0002979A <AmiBlitz3.ab2@5036> RTS
000297A2 <AmiBlitz3.ab2@5040>   BSET #$0,blitzmode
000297AA <AmiBlitz3.ab2@5041>   BSET #$7,blitzmode
000297AE <AmiBlitz3.ab2@5042>   MOVE.w #$C200,D1
000297B4 <AmiBlitz3.ab2@5043>   JSR Atokejsr
000297BA <AmiBlitz3.ab2@5044>   TST.b debugmode
000297BE <AmiBlitz3.ab2@5045>    BEQ.w do_BLITZ__done
000297C2 <AmiBlitz3.ab2@5046>   MOVE.w cgoblitz(PC),D1
000297C6 <AmiBlitz3.ab2@5047>   BSR.w writeword
000297C8 <AmiBlitz3.ab2@5048>   MOVEQ.l #-$01,D1
000297CC <AmiBlitz3.ab2@5049>   BSR.w writeword
000297D2 <AmiBlitz3.ab2@5050>   JSR getbbase
000297D6 <AmiBlitz3.ab2@5051>   BSR.w writeword
000297DA <AmiBlitz3.ab2@5054> BRA.w debugmode_codelabel
000297DE <AmiBlitz3.ab2@5058>   MOVE.w #$C201,D1
000297E2 <AmiBlitz3.ab2@5059> BRA.w do_AMIGA__toamode
000297E6 <AmiBlitz3.ab2@5063>   MOVE.W  #$C202,D1
000297EE <AmiBlitz3.ab2@5066>   BSET #$0,blitzmode
000297F6 <AmiBlitz3.ab2@5067>   BCLR #$7,blitzmode
000297FC <AmiBlitz3.ab2@5068>   JSR Atokejsr
00029802 <AmiBlitz3.ab2@5069>   TST.b debugmode
00029806 <AmiBlitz3.ab2@5070>    BEQ.w do_AMIGA__done
0002980A <AmiBlitz3.ab2@5071>   MOVE.w cgoamiga(PC),D1
0002980E <AmiBlitz3.ab2@5072>   BSR.w writeword
00029814 <AmiBlitz3.ab2@5073>   JSR getbbase
00029818 <AmiBlitz3.ab2@5074>   BSR.w writeword
0002981C <AmiBlitz3.ab2@5077> BRA.w debugmode_codelabel
00029820 <AmiBlitz3.ab2@5081>   MOVEM.l D2-D7/A2-A4,-(A7)
00029824 <AmiBlitz3.ab2@5084>   MOVEM.l (A7)+,D2-D7/A2-A4
0002982A <AmiBlitz3.ab2@5088>   JSR JL_0_BF6A
00029830 <AmiBlitz3.ab2@5089>   CMP.l #$E,D3
00029834 <AmiBlitz3.ab2@5090>    BCC.w interr4
00029838 <AmiBlitz3.ab2@5091>   MOVE.w #$7000,D1
0002983A <AmiBlitz3.ab2@5092>   OR.w D3,D1
0002983E <AmiBlitz3.ab2@5093>   BSR.w writeword
00029842 <AmiBlitz3.ab2@5094>   MOVE.w #$C101,D1
00029848 <AmiBlitz3.ab2@5095> JMP Atokejsr                                               ;clear the interupt
0002984A <AmiBlitz3.ab2@5098> inerr:       Ds.w 1                                        ;flag - in error trap mode
0002984E <AmiBlitz3.ab2@5099> errjmp:      Ds.l 1                                        ;where err jump is
00029852 <AmiBlitz3.ab2@5100> errcode:     Ds.l 1
00029856 <AmiBlitz3.ab2@5104>   MOVE.W  #$D202,D1
0002985C <AmiBlitz3.ab2@5105> JMP Atokejsr                                               ;BRA.W Atokejsr
00029860 <AmiBlitz3.ab2@5109>   MOVE.w inerr(PC),D1
00029864 <AmiBlitz3.ab2@5110>    BEQ.w errerr3
0002986A <AmiBlitz3.ab2@5111>   CLR.w inerr
00029870 <AmiBlitz3.ab2@5112>   MOVE.w dontwrite,D1
00029874 <AmiBlitz3.ab2@5113>    BNE.w doendseterr__skip
00029878 <AmiBlitz3.ab2@5114>   MOVEA.l errjmp(PC),A0
0002987E <AmiBlitz3.ab2@5115>   MOVE.l destpointer,(A0)
00029882 <AmiBlitz3.ab2@5118> BRA.w get1bytemain
00029886 <AmiBlitz3.ab2@5122>   MOVE.w #$D205,D1
0002988C <AmiBlitz3.ab2@5123> JMP Atokejsr
00029892 <AmiBlitz3.ab2@5127>   MOVE.w proceduremode,D1
00029896 <AmiBlitz3.ab2@5128>    BNE.w errerr1
0002989A <AmiBlitz3.ab2@5129>   MOVE.w inerr(PC),D1
0002989E <AmiBlitz3.ab2@5130>    BNE.w errerr2
000298A4 <AmiBlitz3.ab2@5131>   LEA inerr,a0
000298A6 <AmiBlitz3.ab2@5132>   NOT.w (a0)                                               ;reass
000298AA <AmiBlitz3.ab2@5133>   MOVE.w #$203C,D1                                         ;move.l #x,d0
000298AE <AmiBlitz3.ab2@5134>   BSR.w writeword
000298B8 <AmiBlitz3.ab2@5135>   MOVE.l destpointer,errcode
000298BC <AmiBlitz3.ab2@5136>   BSR.w addoff
000298C0 <AmiBlitz3.ab2@5137>   BSR.w writelong
000298C4 <AmiBlitz3.ab2@5138>   MOVE.w #$D201,D1
000298CA <AmiBlitz3.ab2@5139>   JSR Atokejsr
000298CE <AmiBlitz3.ab2@5140>   MOVE.w #$4EF9,D1                                         ;JMP
000298D2 <AmiBlitz3.ab2@5141>   BSR.w writeword
000298DC <AmiBlitz3.ab2@5142>   MOVE.l destpointer,errjmp
000298E0 <AmiBlitz3.ab2@5143>   BSR.w addoff
000298E4 <AmiBlitz3.ab2@5144>   BSR.w writelong
000298EA <AmiBlitz3.ab2@5145>   MOVE.w dontwrite,D1
000298EE <AmiBlitz3.ab2@5146>    BNE.w do_SetErr__skip
000298F2 <AmiBlitz3.ab2@5147>   MOVEA.l errcode(PC),A0
000298F8 <AmiBlitz3.ab2@5148>   MOVE.l destpointer,(A0)
000298FA <AmiBlitz3.ab2@5151> RTS
000298FE <AmiBlitz3.ab2@5154> intlineat:  Ds.l 1
00029900 <AmiBlitz3.ab2@5158>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00029904 <AmiBlitz3.ab2@5159>   BSR.w errchx
0002990A <AmiBlitz3.ab2@5160>   MOVE.w D1,intstring
00029914 <AmiBlitz3.ab2@5161>   MOVE.l linenumat,intlineat
0002991A <AmiBlitz3.ab2@5162>   JSR JL_0_BF6A                                           ;get constant - int level
00029920 <AmiBlitz3.ab2@5163>   CMP.l #$E,D3
00029924 <AmiBlitz3.ab2@5164>    BCC.w interr4
0002992A <AmiBlitz3.ab2@5165>   ST intsused
00029930 <AmiBlitz3.ab2@5166>   MOVE.w D3,intlevel
00029934 <AmiBlitz3.ab2@5167>   MOVE.w #$7000,D1
00029936 <AmiBlitz3.ab2@5168>   OR.w D3,D1                                              
0002993A <AmiBlitz3.ab2@5169>   BSR.w writeword                                         ;moveq #x,d0
0002993E <AmiBlitz3.ab2@5170>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00029942 <AmiBlitz3.ab2@5171>   BSR.w writeword
00029946 <AmiBlitz3.ab2@5172>   BSR.w addoff
0002994C <AmiBlitz3.ab2@5173>   MOVE.l destpointer,-(A7)
00029950 <AmiBlitz3.ab2@5174>   BSR.w writelong
00029954 <AmiBlitz3.ab2@5175>   MOVE.w #$C100,D1
0002995A <AmiBlitz3.ab2@5176>   JSR Atokejsr
0002995E <AmiBlitz3.ab2@5177>   MOVE.w #$4EF9,D1                                        ;jmp
00029962 <AmiBlitz3.ab2@5178>   BSR.w writeword
00029966 <AmiBlitz3.ab2@5179>   BSR.w addoff
00029970 <AmiBlitz3.ab2@5180>   MOVE.l destpointer,intjmpat
00029974 <AmiBlitz3.ab2@5181>   BSR.w writelong
00029976 <AmiBlitz3.ab2@5182>   MOVEA.l (A7)+,A0
0002997C <AmiBlitz3.ab2@5183>   MOVE.w dontwrite,D1
00029980 <AmiBlitz3.ab2@5184>   BNE.w do_SetInt__dontpoke
00029986 <AmiBlitz3.ab2@5185>   MOVE.l destpointer,(A0)
0002998A <AmiBlitz3.ab2@5188>   MOVE.l intstart0(PC),D1
0002998E <AmiBlitz3.ab2@5189>   BSR.w writelong
00029994 <AmiBlitz3.ab2@5190>   TST.b debugmode
00029998 <AmiBlitz3.ab2@5191>    BEQ.w do_SetInt__norerr
0002999A <AmiBlitz3.ab2@5195>   MOVEQ.l #$02,D1
0002999E <AmiBlitz3.ab2@5196>   BSR.w writetrap
000299A2 <AmiBlitz3.ab2@5197>   BSR.w addoff
000299AC <AmiBlitz3.ab2@5198>   MOVE.l destpointer,intcleanat
000299B0 <AmiBlitz3.ab2@5199>   BSR.w writelong
000299B6 <AmiBlitz3.ab2@5200>   MOVE.w intlevel,D1
000299BA <AmiBlitz3.ab2@5201>   BSR.w writeword
000299BE <AmiBlitz3.ab2@5202>   MOVE.w #$C30B,D1                                         ;disable stack checks
000299C4 <AmiBlitz3.ab2@5203>   JSR Atokejsr
000299C8 <AmiBlitz3.ab2@5206>   MOVE.w #$FED3,D1
000299CC <AmiBlitz3.ab2@5207>   BSR.w uselib
000299D0 <AmiBlitz3.ab2@5208>   MOVE.w #$C102,D1
000299D6 <AmiBlitz3.ab2@5209>   JSR Atokejsr
000299DE <AmiBlitz3.ab2@5210>   MOVE.w #-1,lasta6
000299E8 <AmiBlitz3.ab2@5211>   MOVE.l linenumat,intline
000299EA <AmiBlitz3.ab2@5212> RTS
000299EC <AmiBlitz3.ab2@5216>             Ds.w 1                                         ;??looks like obsolved data??
000299F0 <AmiBlitz3.ab2@5218> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
000299F4 <AmiBlitz3.ab2@5220> intjmpat:   Ds.l 1
000299F8 <AmiBlitz3.ab2@5221> intline:    Ds.l 1
000299FA <AmiBlitz3.ab2@5222> intstring:  Ds.w 1                                         ;flag 0 = no setint
000299FC <AmiBlitz3.ab2@5225> intlevel:   Ds.w 1
00029A00 <AmiBlitz3.ab2@5226> intcleanat: Ds.l 1
00029A04 <AmiBlitz3.ab2@5227> ret15add:   Ds.l 1
00029A06 <AmiBlitz3.ab2@5228> ret15cc:    Ds.w 1
00029A0E <AmiBlitz3.ab2@5232>   ADDI.l #$12,$2(A7)
00029A16 <AmiBlitz3.ab2@5233>   MOVE.l $2(A7),ret15add
00029A1C <AmiBlitz3.ab2@5234>   MOVE.w (A7),ret15cc
00029A24 <AmiBlitz3.ab2@5235>   MOVE.l #directdo,$2(A7)
00029A26 <AmiBlitz3.ab2@5236> RTE
00029A2A <AmiBlitz3.ab2@5245>   MOVE.l ret15add(PC),-(A7)
00029A2E <AmiBlitz3.ab2@5246>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00029A32 <AmiBlitz3.ab2@5247>   MOVEM.l D0-D7/A0-A6,-(A7)
00029A3C <AmiBlitz3.ab2@5248>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00029A46 <AmiBlitz3.ab2@5249>   MOVE.l destbufferstart,trap15temp2
00029A50 <AmiBlitz3.ab2@5250>   MOVE.l libend,templibend
00029A5A <AmiBlitz3.ab2@5251>   MOVE.l data1start,tempdata1start
00029A60 <AmiBlitz3.ab2@5252>   CLR.l hunkoffsetcounter
00029A66 <AmiBlitz3.ab2@5254>   MOVE.l directbuffer,a0
00029A6C <AmiBlitz3.ab2@5258>   MOVE.l a0,destbufferstart
00029A72 <AmiBlitz3.ab2@5259>   ADD.l #3900,a0
00029A78 <AmiBlitz3.ab2@5260>   MOVE.l a0,destbufferend
00029A7E <AmiBlitz3.ab2@5261>   TST.b exdebug
00029A82 <AmiBlitz3.ab2@5262>   BEQ 'l1
00029A88 <AmiBlitz3.ab2@5263>   MOVE.l a0,libend
00029A8E <AmiBlitz3.ab2@5264>   ADD.l #4000,a0
00029A94 <AmiBlitz3.ab2@5265>   MOVE.l a0,data1start
00029A9E <AmiBlitz3.ab2@5268>   MOVE.l #dircont,errcont
00029AA4 <AmiBlitz3.ab2@5269>   MOVE.l A7,errstack
00029AAC <AmiBlitz3.ab2@5270>   MOVE.w #$FFFF,dirmode
00029AB0 <AmiBlitz3.ab2@5272>     MOVEA.l ret15add(PC),A1
00029AB6 <AmiBlitz3.ab2@5273>     MOVE.w -(A1),blitzmode
00029AB8 <AmiBlitz3.ab2@5274>     CLR.l -(A1)
00029ABE <AmiBlitz3.ab2@5275>     MOVE.l -(A1),firstglob
00029AC4 <AmiBlitz3.ab2@5276>     MOVE.l -(A1),firstlocal
00029ACA <AmiBlitz3.ab2@5278>   CLR.w proceduremode
00029AD0 <AmiBlitz3.ab2@5279>   MOVE.l firstglob,D0
00029AD6 <AmiBlitz3.ab2@5280>   OR.l firstlocal,D0
00029ADA <AmiBlitz3.ab2@5281>   BEQ.b directdo__skip
00029AE0 <AmiBlitz3.ab2@5282>   NOT.w proceduremode
00029AE2 <AmiBlitz3.ab2@5285>   MOVEA.l -(A1),A0                                         ;address of string
00029AE4 <AmiBlitz3.ab2@5289>   MOVE.l A0,-(A7)
00029B22 <AmiBlitz3.ab2@5292>   !ComData_GetL{comFunc_DebugTrap,A1}
00029B24 <AmiBlitz3.ab2@5295>   JSR (A1)                                                 ;tokenise line.....
00029B26 <AmiBlitz3.ab2@5296>   MOVEA.l (A7)+,A5
00029B30 <AmiBlitz3.ab2@5297>   MOVE.l directbuffer,destpointer
00029B36 <AmiBlitz3.ab2@5298>   TST.b exdebug
00029B3A <AmiBlitz3.ab2@5299>   BEQ 'noexdebug
00029B3C <AmiBlitz3.ab2@5300>   MOVE.l a5,a0
00029B42 <AmiBlitz3.ab2@5301>   MOVE.l #200,d0
00029B48 <AmiBlitz3.ab2@5304>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00029B4C <AmiBlitz3.ab2@5305>   DBF d0,'l1
00029B52 <AmiBlitz3.ab2@5310>   MOVE.l destpointer,a0
00029B56 <AmiBlitz3.ab2@5311>   MOVE.w #$207c,(a0)+
00029B58 <AmiBlitz3.ab2@5312>   MOVE.l a5,d0
00029B5E <AmiBlitz3.ab2@5313>   ADD.l #$206,d0                                           ;constant from debuglib
00029B60 <AmiBlitz3.ab2@5314>   MOVE.l d0,(a0)+
00029B66 <AmiBlitz3.ab2@5315>   MOVE.l a0,destpointer
00029B68 <AmiBlitz3.ab2@5316>   MOVE.l a5,a0
00029B6C <AmiBlitz3.ab2@5317>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00029B72 <AmiBlitz3.ab2@5318>   MOVE.l #"$520",(a0)+
00029B76 <AmiBlitz3.ab2@5319>   MOVE.w #"4:",(a0)+
00029B7C <AmiBlitz3.ab2@5322>   CLR.w dontwrite
00029B84 <AmiBlitz3.ab2@5323>   MOVE.w #$FFFF,lasta6
00029B88 <AmiBlitz3.ab2@5324>   BSR.w compile_line                                        ;.....compile it
00029B8E <AmiBlitz3.ab2@5325>   TST.b exdebug
00029B92 <AmiBlitz3.ab2@5326>   BEQ 'noexdebug2
00029B98 <AmiBlitz3.ab2@5327>   JSR JL_0_6C76
00029B9E <AmiBlitz3.ab2@5330>   CLR.w proceduremode
00029BA2 <AmiBlitz3.ab2@5331>   BSR.w errchx
00029BA6 <AmiBlitz3.ab2@5332>   MOVE.w #$4EF9,D1
00029BAA <AmiBlitz3.ab2@5333>   BSR.w writeword                                          ;JMP
00029BAE <AmiBlitz3.ab2@5334>   MOVE.l ret15add(PC),D1
00029BB2 <AmiBlitz3.ab2@5335>   BSR.w writelong                                          ;jmp to done
00029BB8 <AmiBlitz3.ab2@5336>   MOVE.w dontwrite,D0
00029BBC <AmiBlitz3.ab2@5337>    BNE.w nodirmem
00029BC4 <AmiBlitz3.ab2@5338>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00029BCA <AmiBlitz3.ab2@5341>   CLR.w dirmode
00029BD0 <AmiBlitz3.ab2@5342>   MOVE.w ret15cc(PC),$3C(A7)
00029BDA <AmiBlitz3.ab2@5343>   MOVE.l trap15temp,destbufferend
00029BE4 <AmiBlitz3.ab2@5344>   MOVE.l trap15temp2,destbufferstart
00029BEE <AmiBlitz3.ab2@5345>   MOVE.l tempdata1start,data1start
00029BF8 <AmiBlitz3.ab2@5346>   MOVE.l templibend,libend
00029BFC <AmiBlitz3.ab2@5347>   MOVEM.l (A7)+,D0-D7/A0-A6
00029C00 <AmiBlitz3.ab2@5348>   BSR.w Aclearcache                                        ;selden used
00029C02 <AmiBlitz3.ab2@5349> RTR
00029C06 <AmiBlitz3.ab2@5352>   MOVEA.l ret15add(PC),A0
00029C08 <AmiBlitz3.ab2@5353>   SUBQ.w #2,A0
00029C0A <AmiBlitz3.ab2@5354>   MOVE.l D0,-(A0)
00029C0E <AmiBlitz3.ab2@5355> BRA.w direxit
00029C12 <AmiBlitz3.ab2@5359>   MOVE.w $6(A3),D1
00029C16 <AmiBlitz3.ab2@5360>   BSR.w uselib                                             ;get lib for base address
00029C1A <AmiBlitz3.ab2@5361>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00029C1C <AmiBlitz3.ab2@5362>   ADDQ.w #8,A3
00029C1E <AmiBlitz3.ab2@5363>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00029C20 <AmiBlitz3.ab2@5364>   MOVE.l A3,-(A7)
00029C22 <AmiBlitz3.ab2@5368>   MOVEQ.l #$00,D3
00029C24 <AmiBlitz3.ab2@5371>   MOVE.b (A3)+,D1
00029C28 <AmiBlitz3.ab2@5372>    BMI.w stamigalib__done
00029C2A <AmiBlitz3.ab2@5373>   MOVEQ.l #$03,D2
00029C2C <AmiBlitz3.ab2@5374>   ADDQ.w #1,D3
00029C30 <AmiBlitz3.ab2@5375>   MOVEM.l D3/A3,-(A7)
00029C36 <AmiBlitz3.ab2@5376>    JSR peval
00029C3A <AmiBlitz3.ab2@5377>   MOVEM.l (A7)+,D3/A3
00029C3E <AmiBlitz3.ab2@5378>   CMP.w #$2C,D0
00029C42 <AmiBlitz3.ab2@5379>    BEQ.w stamigalib__loop
00029C44 <AmiBlitz3.ab2@5380>   TST.b (A3)
00029C48 <AmiBlitz3.ab2@5381>    BPL.w syntaxerr
00029C4A <AmiBlitz3.ab2@5384>   MOVEA.l (A7)+,A3
00029C4C <AmiBlitz3.ab2@5385>   SUBQ.w #1,D3
00029C50 <AmiBlitz3.ab2@5386>    BPL.w stamigalib__toend
00029C54 <AmiBlitz3.ab2@5387>    BSR.w get1bytemain                                      ;no pars - get :
00029C58 <AmiBlitz3.ab2@5388> BRA.w stamigalib__nopars
00029C5A <AmiBlitz3.ab2@5391>   TST.b (A3)+                                              ;go to end of params
00029C5E <AmiBlitz3.ab2@5392>    BPL.w stamigalib__toend
00029C60 <AmiBlitz3.ab2@5393>   SUBQ.w #1,A3
00029C62 <AmiBlitz3.ab2@5396>    MOVEQ.l #$00,D1
00029C64 <AmiBlitz3.ab2@5397>    MOVE.b -(A3),D1
00029C68 <AmiBlitz3.ab2@5398>    BTST #$4,D1
00029C6C <AmiBlitz3.ab2@5399>     BNE.w stamigalib__addreg
00029C6E <AmiBlitz3.ab2@5400>    LSL.w #8,D1
00029C70 <AmiBlitz3.ab2@5401>    LSL.w #1,D1
00029C74 <AmiBlitz3.ab2@5402>    ORI.w #$201F,D1
00029C78 <AmiBlitz3.ab2@5403>  BRA.w stamigalib__gotit
00029C7C <AmiBlitz3.ab2@5406>    ANDI.w #$7,D1
00029C7E <AmiBlitz3.ab2@5407>    LSL.w #8,D1
00029C80 <AmiBlitz3.ab2@5408>    LSL.w #1,D1
00029C84 <AmiBlitz3.ab2@5409>    ORI.w #$205F,D1
00029C88 <AmiBlitz3.ab2@5412>     BSR.w writeword
00029C8C <AmiBlitz3.ab2@5413>   DBF D3,stamigalib__loop2
00029C92 <AmiBlitz3.ab2@5416>   MOVE.w (A7)+,libjsr+2
00029C98 <AmiBlitz3.ab2@5417>   MOVE.w (A7)+,libbase+2
00029C9E <AmiBlitz3.ab2@5418>   MOVE.l libbase,D1
00029CA2 <AmiBlitz3.ab2@5419>    BSR.w writelong
00029CA8 <AmiBlitz3.ab2@5420>   MOVE.l libjsr,D1
00029CAC <AmiBlitz3.ab2@5421> BRA.w writelong
00029CB2 <AmiBlitz3.ab2@5425>   MOVE.l data1,D4
00029CB8 <AmiBlitz3.ab2@5426>   SUB.l data1start,D4
00029CBE <AmiBlitz3.ab2@5427>   ADD.l #10000,d4
00029CC4 <AmiBlitz3.ab2@5428>   MOVE.l libend,D3
00029CCA <AmiBlitz3.ab2@5429>   SUB.l destbufferend,D3
00029CD0 <AmiBlitz3.ab2@5430>   ADD.l #40000,d3
00029CD6 <AmiBlitz3.ab2@5431>   MOVE.l bigpc,D2
00029CDC <AmiBlitz3.ab2@5432>   SUB.l destbufferstart,D2
00029CE2 <AmiBlitz3.ab2@5433>   ADD.l #20000,d2
00029CE8 <AmiBlitz3.ab2@5434>   MOVE.l databuffer,D5
00029CEE <AmiBlitz3.ab2@5435>   ADD.l #10000,D5
00029CF2 <AmiBlitz3.ab2@5436> BRA newallox
00029CF8 <AmiBlitz3.ab2@5440>   MOVE.l objectbuffer,D2
00029CFA <AmiBlitz3.ab2@5441>   LSR.l #1,D2
00029D00 <AmiBlitz3.ab2@5442>   ADD.l objectbuffer,D2
00029D06 <AmiBlitz3.ab2@5443>   MOVE.l libsbuffer,D3
00029D08 <AmiBlitz3.ab2@5444>   LSR.l #1,D3
00029D0E <AmiBlitz3.ab2@5445>   ADD.l libsbuffer,D3
00029D14 <AmiBlitz3.ab2@5446>   MOVE.l systembuffer,D4
00029D16 <AmiBlitz3.ab2@5447>   LSR.l #1,D4
00029D1C <AmiBlitz3.ab2@5448>   ADD.l systembuffer,D4
00029D22 <AmiBlitz3.ab2@5449>   MOVE.l databuffer,D5
00029D24 <AmiBlitz3.ab2@5450>   LSR.l #1,D5
00029D2A <AmiBlitz3.ab2@5451>   ADD.l databuffer,D5
00029D2E <AmiBlitz3.ab2@5452> BRA.w newallox
00029D34 <AmiBlitz3.ab2@5456>   MOVE.l bigpc,D2
00029D3A <AmiBlitz3.ab2@5457>   SUB.l destbufferstart,D2                                     ;size of object buffer
00029D40 <AmiBlitz3.ab2@5458>   SUB.l savefuncspace,d2
00029D46 <AmiBlitz3.ab2@5460>   TST.w debugversion
00029D4A <AmiBlitz3.ab2@5461>    BNE.b alloxadj__skip
00029D50 <AmiBlitz3.ab2@5462>   ADDI.l #$800,D2
00029D56 <AmiBlitz3.ab2@5465>   MOVE.l libend,D3
00029D5C <AmiBlitz3.ab2@5466>   SUB.l destbufferend,D3
00029D62 <AmiBlitz3.ab2@5468>   MOVE.l data1,D4
00029D68 <AmiBlitz3.ab2@5469>   SUB.l data1start,D4
00029D6E <AmiBlitz3.ab2@5471>   MOVE.l data2,D5
00029D74 <AmiBlitz3.ab2@5472>   SUB.l data2at,D5
00029D7A <AmiBlitz3.ab2@5474>   CLR.l morememadd
00029D7E <AmiBlitz3.ab2@5477>   BSR.w makeallox
00029D82 <AmiBlitz3.ab2@5478>   BNE.w newallox__done
00029D86 <AmiBlitz3.ab2@5479> BRA.w init_buffers
00029D88 <AmiBlitz3.ab2@5482> RTS
00029D8E <AmiBlitz3.ab2@5486>   MOVEA.l _execbase,A6
00029D94 <AmiBlitz3.ab2@5487>   MOVE.l objlen,D0
00029D98 <AmiBlitz3.ab2@5488>   BEQ.w freeallox__skip
00029D9E <AmiBlitz3.ab2@5489>   CLR.l objlen
00029DA4 <AmiBlitz3.ab2@5490>   MOVEA.l destbufferstart,A1
00029DAA <AmiBlitz3.ab2@5491>   MOVE.l mempool,a0
00029DAE <AmiBlitz3.ab2@5492> JMP _FreeVec(A6)
00029DB0 <AmiBlitz3.ab2@5495> RTS
00029DB6 <AmiBlitz3.ab2@5499>   MOVE.l objectbuffer,D2
00029DBC <AmiBlitz3.ab2@5500>   MOVE.l libsbuffer,D3
00029DC2 <AmiBlitz3.ab2@5501>   MOVE.l systembuffer,D4
00029DC8 <AmiBlitz3.ab2@5502>   MOVE.l databuffer,D5
00029DD0 <AmiBlitz3.ab2@5505>   MOVE.w #$FFFF,anyerrs
00029DD4 <AmiBlitz3.ab2@5506>   BSR.w freeallox
00029DD6 <AmiBlitz3.ab2@5510>   ADDQ.l #1,D2
00029DDA <AmiBlitz3.ab2@5511>   BCLR #$0,D2
00029DDC <AmiBlitz3.ab2@5512>   ADDQ.l #1,D3
00029DE0 <AmiBlitz3.ab2@5513>   BCLR #$0,D3
00029DE2 <AmiBlitz3.ab2@5514>   ADDQ.l #1,D4
00029DE6 <AmiBlitz3.ab2@5515>   BCLR #$0,D4
00029DE8 <AmiBlitz3.ab2@5516>   TST.l d5
00029DEC <AmiBlitz3.ab2@5517>   BNE 'l1
00029DEE <AmiBlitz3.ab2@5520>   ADDQ.l #1,D5
00029DF2 <AmiBlitz3.ab2@5521>   BCLR #$0,D5
00029DF4 <AmiBlitz3.ab2@5522>   MOVE.l D2,D0
00029DF6 <AmiBlitz3.ab2@5523>   ADD.l D3,D0
00029DF8 <AmiBlitz3.ab2@5524>   ADD.l D4,D0
00029DFA <AmiBlitz3.ab2@5525>   ADD.l D5,D0
00029E00 <AmiBlitz3.ab2@5526>   ADD.l #moremem,d0
00029E02 <AmiBlitz3.ab2@5527>   MOVE.l D0,D6
00029E08 <AmiBlitz3.ab2@5528>   MOVE.l #MemfPublic_MemfClear,D1
00029E0E <AmiBlitz3.ab2@5529>   MOVE.l mempool,a0
00029E14 <AmiBlitz3.ab2@5530>   MOVEA.l _execbase,A6
00029E18 <AmiBlitz3.ab2@5531>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00029E1A <AmiBlitz3.ab2@5533>   TST.l D0
00029E1E <AmiBlitz3.ab2@5534>   BEQ.w exit_initbuffers
00029E24 <AmiBlitz3.ab2@5535>   MOVE.l D6,objlen
00029E2A <AmiBlitz3.ab2@5536>   MOVE.l D2,objectbuffer
00029E30 <AmiBlitz3.ab2@5537>   MOVE.l D3,libsbuffer
00029E36 <AmiBlitz3.ab2@5538>   MOVE.l D4,systembuffer
00029E3C <AmiBlitz3.ab2@5539>   MOVE.l D5,databuffer
00029E42 <AmiBlitz3.ab2@5540>   MOVE.l D0,destbufferstart
00029E76 <AmiBlitz3.ab2@5543>   !ComData_SetL{comPtr_DestBufferStart,D0}
00029E78 <AmiBlitz3.ab2@5544>   ADD.l D2,D0
00029E7E <AmiBlitz3.ab2@5545>   MOVE.l D0,destbufferend
00029E80 <AmiBlitz3.ab2@5546>   ADD.l D3,D0
00029E86 <AmiBlitz3.ab2@5547>   MOVE.l D0,data1start
00029E88 <AmiBlitz3.ab2@5548>   ADD.l D4,D0
00029E8E <AmiBlitz3.ab2@5549>   MOVE.l D0,data2at
00029E90 <AmiBlitz3.ab2@5550>   ADD.l D5,D0
00029E96 <AmiBlitz3.ab2@5551>   MOVE.l D0,allat
00029E98 <AmiBlitz3.ab2@5554> RTS
00029E9C <AmiBlitz3.ab2@5558>   Dc.b $00,$00,$00,$01                                     ;         1
00029EA0 <AmiBlitz3.ab2@5559>   Dc.b $00,$00,$00,$0A                                     ;        10
00029EA4 <AmiBlitz3.ab2@5560>   Dc.b $00,$00,$00,$64                                     ;       100
00029EA8 <AmiBlitz3.ab2@5561>   Dc.b $00,$00,$03,$E8                                     ;      1000
00029EAC <AmiBlitz3.ab2@5562>   Dc.b $00,$00,$27,$10                                     ;     10000
00029EB0 <AmiBlitz3.ab2@5563>   Dc.b $00,$01,$86,$A0                                     ;    100000
00029EB4 <AmiBlitz3.ab2@5564>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00029EB8 <AmiBlitz3.ab2@5565>   Dc.b $00,$98,$96,$80                                     ;  10000000
00029EBC <AmiBlitz3.ab2@5566>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00029EC0 <AmiBlitz3.ab2@5567>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00029EC2 <AmiBlitz3.ab2@5571>   MOVEQ.l #$00,D1                                          ;no zero printed
00029EC4 <AmiBlitz3.ab2@5572>   MOVEQ.l #$24,D3                                          ; "$"
00029EC6 <AmiBlitz3.ab2@5575>   MOVEQ.l #$30,D4                                          ; "0"
00029ECA <AmiBlitz3.ab2@5578>     CMP.l divisors(PC,D3.W),D2
00029ECE <AmiBlitz3.ab2@5579>     BCS.w makelong__skip
00029ED2 <AmiBlitz3.ab2@5580>     SUB.l divisors(PC,D3.W),D2
00029ED4 <AmiBlitz3.ab2@5581>     ADDQ.w #1,D4
00029ED8 <AmiBlitz3.ab2@5582> BRA.w makelong__loop2
00029EDC <AmiBlitz3.ab2@5585>   CMP.b #"0",D4
00029EE0 <AmiBlitz3.ab2@5586>   BNE.w makelong__doit
00029EE2 <AmiBlitz3.ab2@5587>   TST.w D1
00029EE6 <AmiBlitz3.ab2@5588>   BEQ.w makelong__skip2
00029EE8 <AmiBlitz3.ab2@5591>   MOVE.b D4,(A0)+
00029EEA <AmiBlitz3.ab2@5592>   MOVEQ.l #$01,D1
00029EEC <AmiBlitz3.ab2@5595>   SUBQ.w #4,D3
00029EF0 <AmiBlitz3.ab2@5596>   BPL.w makelong__loop
00029EF2 <AmiBlitz3.ab2@5597>   TST.w D1
00029EF6 <AmiBlitz3.ab2@5598>   BNE.w makelong__skip3
00029EFA <AmiBlitz3.ab2@5599>   MOVE.b #"0",(A0)+
00029EFC <AmiBlitz3.ab2@5602>   CLR.b (A0)
00029EFE <AmiBlitz3.ab2@5603> RTS
00029F1E <AmiBlitz3.ab2@5606> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00029FDE <AmiBlitz3.ab2@5607> str_residentpath:       Ds.l 48                                                ;respath org source
0002A09E <AmiBlitz3.ab2@5608> str_residentname:       Ds.l 48                                                ;resname org source
0002A0A4 <AmiBlitz3.ab2@5612>   MOVE.l macrobase,D0
0002A0A8 <AmiBlitz3.ab2@5613>    BNE.w create_residentfile
0002A0AE <AmiBlitz3.ab2@5614>   MOVE.l newtype_string,D0
0002A0B2 <AmiBlitz3.ab2@5615>    BNE.w create_residentfile
0002A0B8 <AmiBlitz3.ab2@5616>   MOVEA.l labelbase,A2
0002A0BC <AmiBlitz3.ab2@5619>     CMPA.w #$0,A2
0002A0C0 <AmiBlitz3.ab2@5620>      BEQ.w menu_createresidentfile__err
0002A0C8 <AmiBlitz3.ab2@5621>     CMPI.l #$1,$4(A2)
0002A0CC <AmiBlitz3.ab2@5622>      BEQ.w create_residentfile
0002A0CE <AmiBlitz3.ab2@5623>     MOVEA.l (A2),A2
0002A0D2 <AmiBlitz3.ab2@5624> BRA.w menu_createresidentfile__loop
0002A0FC <AmiBlitz3.ab2@5627>   !basic
0002A152 <AmiBlitz3.ab2@5628> 
0002A170 <AmiBlitz3.ab2@5629>   !asm
0002A172 <AmiBlitz3.ab2@5630> RTS
0002A1B0 <AmiBlitz3.ab2@5636>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0002A1B6 <AmiBlitz3.ab2@5637>   LEA str_residentrequester,A2
0002A1BC <AmiBlitz3.ab2@5638>   LEA str_residentpath,A0
0002A1C2 <AmiBlitz3.ab2@5639>   LEA str_residentname,A1
0002A1EC <AmiBlitz3.ab2@5640>   !basic
0002A224 <AmiBlitz3.ab2@5641>     Poke$ ?str_residentpath,my_residentsdir$
0002A250 <AmiBlitz3.ab2@5642>     Poke$ ?str_residentname,".res"
0002A26E <AmiBlitz3.ab2@5643>   !asm
0002A270 <AmiBlitz3.ab2@5646>   JSR (A3)
0002A274 <AmiBlitz3.ab2@5648>   BEQ.w menu_createresidentfile__err
0002A276 <AmiBlitz3.ab2@5651>   MOVE.l D0,D1
0002A27C <AmiBlitz3.ab2@5652>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002A280 <AmiBlitz3.ab2@5653>   MOVEA.l _dosbase(PC),A6
0002A284 <AmiBlitz3.ab2@5654>   JSR _Open(A6)
0002A286 <AmiBlitz3.ab2@5655>   MOVE.l D0,D7                                             ;handle
0002A28A <AmiBlitz3.ab2@5656>   BEQ.w menu_createresidentfile__err
0002A28E <AmiBlitz3.ab2@5657>   MOVEM.l d2-d7/a0-a6,-(a7)
0002A294 <AmiBlitz3.ab2@5658>   LEA devo,a0
0002A29A <AmiBlitz3.ab2@5659>   LEA ptr_parameterstore,a1
0002A29C <AmiBlitz3.ab2@5662>     MOVE.b (a0)+,(a1)+
0002A2A0 <AmiBlitz3.ab2@5663>   BNE 'l1
0002A2A2 <AmiBlitz3.ab2@5664>   MOVEQ #13,d2
0002A2A8 <AmiBlitz3.ab2@5665>   JSR findlabel2
0002A2AC <AmiBlitz3.ab2@5666>   BNE 'd
0002A2B0 <AmiBlitz3.ab2@5667>   TST.l 8(a2)
0002A2B4 <AmiBlitz3.ab2@5668>   BEQ 'd2
0002A2DE <AmiBlitz3.ab2@5669>   !basic
0002A334 <AmiBlitz3.ab2@5670>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
0002A352 <AmiBlitz3.ab2@5671>   !asm
0002A356 <AmiBlitz3.ab2@5672>   MOVEM.l (a7)+,d2-d7/a0-a6
0002A35A <AmiBlitz3.ab2@5673>   MOVEA.l _dosbase(PC),A6
0002A35C <AmiBlitz3.ab2@5674>   MOVE.l d7,d1
0002A360 <AmiBlitz3.ab2@5675>   JSR _Close(a6)
0002A364 <AmiBlitz3.ab2@5676> BRA menu_createresidentfile__err
0002A368 <AmiBlitz3.ab2@5680>   MOVEM.l (a7)+,d2-d7/a0-a6
0002A36C <AmiBlitz3.ab2@5681>   BSR.w call_setpointerbusy
0002A370 <AmiBlitz3.ab2@5683>   BSR.w AJL_0_7962
0002A372 <AmiBlitz3.ab2@5684>   MOVE.l D7,D1
0002A378 <AmiBlitz3.ab2@5685>   MOVE.l #tsthead,D2                                       ;header
0002A37A <AmiBlitz3.ab2@5686>   MOVEQ.l #$20,D3
0002A37E <AmiBlitz3.ab2@5687>   MOVEA.l _dosbase(PC),A6
0002A382 <AmiBlitz3.ab2@5688>   JSR _Write(A6)
0002A384 <AmiBlitz3.ab2@5689>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0002A388 <AmiBlitz3.ab2@5690>   BSR.w restypes
0002A38C <AmiBlitz3.ab2@5691>   BSR.w resmacs
0002A390 <AmiBlitz3.ab2@5692>   BSR.w resconsts
0002A392 <AmiBlitz3.ab2@5693>   MOVE.l D6,D3
0002A394 <AmiBlitz3.ab2@5694>   ADDQ.l #3,D3
0002A39A <AmiBlitz3.ab2@5695>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
0002A39C <AmiBlitz3.ab2@5696>   MOVE.l D3,-(A7)
0002A39E <AmiBlitz3.ab2@5697>   SUB.l D6,D3
0002A3A2 <AmiBlitz3.ab2@5698>   BEQ.w menu_createresidentfile__noalign
0002A3A8 <AmiBlitz3.ab2@5699>   MOVE.l #writelist,D2
0002A3AA <AmiBlitz3.ab2@5700>   MOVE.l D7,D1
0002A3B0 <AmiBlitz3.ab2@5701>   MOVEA.l _dosbase,A6
0002A3B4 <AmiBlitz3.ab2@5702>   JSR _Write(A6)
0002A3BE <AmiBlitz3.ab2@5705>    MOVE.l hunkoffsetcounter,tstsize3
0002A3C2 <AmiBlitz3.ab2@5706>    BEQ.w menu_createresidentfile__skip2a
0002A3C4 <AmiBlitz3.ab2@5707>   MOVE.l D7,D1
0002A3CA <AmiBlitz3.ab2@5708>   MOVE.l #tstend,D2
0002A3CC <AmiBlitz3.ab2@5709>   MOVEQ.l #$0C,D3
0002A3D2 <AmiBlitz3.ab2@5710>   MOVEA.l _dosbase,A6
0002A3D6 <AmiBlitz3.ab2@5711>    JSR _Write(A6)
0002A3DC <AmiBlitz3.ab2@5715>   MOVEA.l hunkoffsetbase,A2
0002A3E0 <AmiBlitz3.ab2@5718>   CMPA.w #$0,A2
0002A3E4 <AmiBlitz3.ab2@5719>    BEQ.w menu_createresidentfile__skip2
0002A3E8 <AmiBlitz3.ab2@5720>   LEA $4(A2),A1
0002A3EA <AmiBlitz3.ab2@5721>   MOVE.l D7,D1
0002A3EC <AmiBlitz3.ab2@5722>   MOVE.l A1,D2
0002A3EE <AmiBlitz3.ab2@5723>   MOVEQ.l #$04,D3
0002A3F4 <AmiBlitz3.ab2@5724>   MOVEA.l _dosbase,A6
0002A3F8 <AmiBlitz3.ab2@5725>    JSR _Write(A6)
0002A3FA <AmiBlitz3.ab2@5726>   MOVEA.l (A2),A2
0002A3FE <AmiBlitz3.ab2@5727> BRA.w menu_createresidentfile__oloop
0002A400 <AmiBlitz3.ab2@5730>   MOVE.l D7,D1
0002A406 <AmiBlitz3.ab2@5731>   MOVE.l #zero,D2
0002A408 <AmiBlitz3.ab2@5732>   MOVEQ.l #$04,D3
0002A40E <AmiBlitz3.ab2@5733>   MOVEA.l _dosbase,A6
0002A412 <AmiBlitz3.ab2@5734>   JSR _Write(A6)
0002A414 <AmiBlitz3.ab2@5737>   MOVE.l D7,D1
0002A41A <AmiBlitz3.ab2@5738>   MOVE.l #tstdone,D2
0002A41C <AmiBlitz3.ab2@5739>   MOVEQ.l #$04,D3
0002A422 <AmiBlitz3.ab2@5740>   MOVEA.l _dosbase,A6
0002A426 <AmiBlitz3.ab2@5741>    JSR _Write(A6)
0002A428 <AmiBlitz3.ab2@5742>   MOVE.l (A7)+,D0
0002A42A <AmiBlitz3.ab2@5743>   LSR.l #2,D0
0002A430 <AmiBlitz3.ab2@5744>   MOVE.l D0,temp1
0002A432 <AmiBlitz3.ab2@5745>   MOVE.l D7,D1
0002A434 <AmiBlitz3.ab2@5746>   MOVEQ.l #$14,D2
0002A436 <AmiBlitz3.ab2@5747>   MOVEQ.l #-$01,D3
0002A43A <AmiBlitz3.ab2@5748>   JSR _Seek(A6)
0002A43C <AmiBlitz3.ab2@5749>   MOVE.l D7,D1
0002A442 <AmiBlitz3.ab2@5750>   MOVE.l #temp1,D2
0002A444 <AmiBlitz3.ab2@5751>   MOVEQ.l #$04,D3
0002A448 <AmiBlitz3.ab2@5752>    JSR _Write(A6)
0002A44A <AmiBlitz3.ab2@5753>   MOVE.l D7,D1
0002A44C <AmiBlitz3.ab2@5754>   MOVEQ.l #$1C,D2
0002A44E <AmiBlitz3.ab2@5755>   MOVEQ.l #-$01,D3
0002A452 <AmiBlitz3.ab2@5756>    JSR _Seek(A6)
0002A454 <AmiBlitz3.ab2@5757>   MOVE.l D7,D1
0002A45A <AmiBlitz3.ab2@5758>   MOVE.l #temp1,D2
0002A45C <AmiBlitz3.ab2@5759>   MOVEQ.l #$04,D3
0002A460 <AmiBlitz3.ab2@5760>    JSR _Write(A6)
0002A462 <AmiBlitz3.ab2@5761>   MOVE.l D7,D1
0002A466 <AmiBlitz3.ab2@5762>    JSR _Close(A6)
0002A46A <AmiBlitz3.ab2@5763> BRA.w call_setpointernormal
0002A46C <AmiBlitz3.ab2@5767>   ADDQ.w #5,D1
0002A46E <AmiBlitz3.ab2@5768>   ADDQ.b #8,D0
0002A472 <AmiBlitz3.ab2@5771>     CMPA.w #$0,A2
0002A476 <AmiBlitz3.ab2@5772>     BEQ.w writelist__done
0002A47A <AmiBlitz3.ab2@5773>      BSR.w writeitem
0002A47C <AmiBlitz3.ab2@5774>     MOVEA.l (A2),A2
0002A480 <AmiBlitz3.ab2@5775> BRA.w writelist__loop
0002A482 <AmiBlitz3.ab2@5778> RTS
0002A484 <AmiBlitz3.ab2@5781>   MOVEQ.l #$00,D3
0002A488 <AmiBlitz3.ab2@5782>   MOVE.b $0(A2,D5.W),D3
0002A48A <AmiBlitz3.ab2@5783>   ADDQ.w #1,D3
0002A48E <AmiBlitz3.ab2@5784>   BCLR #$0,D3                                              ;word align
0002A490 <AmiBlitz3.ab2@5785>   MOVE.l (A2),-(A7)
0002A494 <AmiBlitz3.ab2@5786>    BEQ.w writeitem__skip
0002A498 <AmiBlitz3.ab2@5787>    BSR.w resoff
0002A49A <AmiBlitz3.ab2@5788>   ADD.l D3,D6
0002A49C <AmiBlitz3.ab2@5789>   MOVE.l D6,(A2)
0002A49E <AmiBlitz3.ab2@5790>   SUB.l D3,D6
0002A4A0 <AmiBlitz3.ab2@5793>    ADD.l D3,D6
0002A4A2 <AmiBlitz3.ab2@5794>   MOVE.l A2,D2
0002A4A4 <AmiBlitz3.ab2@5795>   MOVE.l D7,D1
0002A4AA <AmiBlitz3.ab2@5796>   MOVEA.l _dosbase,A6
0002A4AE <AmiBlitz3.ab2@5797>    JSR _Write(A6)
0002A4B0 <AmiBlitz3.ab2@5798>   MOVE.l (A7)+,(A2)
0002A4B2 <AmiBlitz3.ab2@5799> RTS
0002A4B4 <AmiBlitz3.ab2@5802>   MOVE.l D6,D2
0002A4B8 <AmiBlitz3.ab2@5803> BRA.w addhunkoffset
0002A4BC <AmiBlitz3.ab2@5807>     CMPA.w #$0,A2
0002A4C0 <AmiBlitz3.ab2@5808>      BEQ.w writeoffs__done
0002A4C6 <AmiBlitz3.ab2@5809>     MOVEA.l newtypebase,A1
0002A4C8 <AmiBlitz3.ab2@5810>     MOVEQ.l #$00,D1
0002A4CC <AmiBlitz3.ab2@5813>       CMPA.w #$0,A1
0002A4D0 <AmiBlitz3.ab2@5814>       BEQ.w writeoffs__found
0002A4D4 <AmiBlitz3.ab2@5815>       CMPA.l $A(A2),A1
0002A4D8 <AmiBlitz3.ab2@5816>        BEQ.w writeoffs__found
0002A4DA <AmiBlitz3.ab2@5817>       ADDQ.w #1,D1
0002A4DC <AmiBlitz3.ab2@5818>       MOVEA.l (A1),A1
0002A4E0 <AmiBlitz3.ab2@5819> BRA.w writeoffs__loop2
0002A4E4 <AmiBlitz3.ab2@5822>     MOVE.w $A(A2),-(A7)
0002A4E8 <AmiBlitz3.ab2@5823>     MOVE.w D1,$A(A2)
0002A4EC <AmiBlitz3.ab2@5824>      BSR.w writeitem
0002A4F0 <AmiBlitz3.ab2@5825>     MOVE.w (A7)+,$A(A2)
0002A4F2 <AmiBlitz3.ab2@5826>     MOVEA.l (A2),A2
0002A4F6 <AmiBlitz3.ab2@5827> BRA.w writeoffs
0002A4F8 <AmiBlitz3.ab2@5830> RTS
0002A4FA <AmiBlitz3.ab2@5834>   MOVEQ.l #$00,D0
0002A4FE <AmiBlitz3.ab2@5837>   CMPA.w #$0,A2
0002A502 <AmiBlitz3.ab2@5838>    BEQ.w countem__done
0002A504 <AmiBlitz3.ab2@5839>   ADDQ.w #1,D0
0002A506 <AmiBlitz3.ab2@5840>   MOVEA.l (A2),A2
0002A50A <AmiBlitz3.ab2@5841> BRA.w countem__loop
0002A510 <AmiBlitz3.ab2@5844>   MOVE.w D0,temp1
0002A512 <AmiBlitz3.ab2@5845>   MOVE.l D7,D1
0002A518 <AmiBlitz3.ab2@5846>   MOVE.l #temp1,D2
0002A51A <AmiBlitz3.ab2@5847>   MOVEQ.l #$02,D3
0002A51C <AmiBlitz3.ab2@5848>   ADDQ.l #2,D6
0002A522 <AmiBlitz3.ab2@5849>   MOVEA.l _dosbase,A6
0002A526 <AmiBlitz3.ab2@5850> JMP _Write(A6)
0002A52C <AmiBlitz3.ab2@5854>    TST.b resdisable
0002A530 <AmiBlitz3.ab2@5855>    BEQ resmacs__l1
0002A536 <AmiBlitz3.ab2@5856>    MOVE.l currentmacroaddr,a3
0002A53C <AmiBlitz3.ab2@5857>    CMP.l #0,a3
0002A540 <AmiBlitz3.ab2@5858>    BEQ resmacs__l1
0002A542 <AmiBlitz3.ab2@5859>    MOVE.l (a3),a3
0002A546 <AmiBlitz3.ab2@5860> BRA resmacs__l2
0002A54C <AmiBlitz3.ab2@5863>   MOVEA.l macrobase,A3                                     ;??begin org code??
0002A54E <AmiBlitz3.ab2@5866>   MOVEA.l A3,A2
0002A552 <AmiBlitz3.ab2@5867>   BSR.w countem
0002A556 <AmiBlitz3.ab2@5870>    CMPA.w #$0,A3
0002A55A <AmiBlitz3.ab2@5871>    BEQ.w resmacs__done
0002A55C <AmiBlitz3.ab2@5872>   MOVE.l D6,D5
0002A55E <AmiBlitz3.ab2@5873>   MOVE.l (A3),-(A7)
0002A562 <AmiBlitz3.ab2@5874>   MOVE.l $4(A3),-(A7)
0002A564 <AmiBlitz3.ab2@5875>   MOVEQ.l #$00,D3
0002A568 <AmiBlitz3.ab2@5876>   MOVE.b $C(A3),D3
0002A56A <AmiBlitz3.ab2@5877>   ADDQ.w #1,D3
0002A56E <AmiBlitz3.ab2@5878>   BCLR #$0,D3
0002A570 <AmiBlitz3.ab2@5879>   ADD.l D3,D6                                              ;add len of struct
0002A574 <AmiBlitz3.ab2@5880>   TST.w $8(A3)
0002A578 <AmiBlitz3.ab2@5881>    BEQ.w resmacs__notext
0002A57C <AmiBlitz3.ab2@5882>   MOVE.l D6,$4(A3)
0002A57E <AmiBlitz3.ab2@5883>   MOVE.l D5,D2
0002A580 <AmiBlitz3.ab2@5884>   ADDQ.l #4,D2
0002A584 <AmiBlitz3.ab2@5885>    BSR.w addhunkoffset
0002A586 <AmiBlitz3.ab2@5888>   MOVEQ.l #$00,D4
0002A58A <AmiBlitz3.ab2@5889>   MOVE.w $8(A3),D4
0002A58C <AmiBlitz3.ab2@5890>   ADDQ.w #1,D4
0002A590 <AmiBlitz3.ab2@5891>   BCLR #$0,D4
0002A592 <AmiBlitz3.ab2@5892>   ADD.l D4,D6
0002A594 <AmiBlitz3.ab2@5893>   TST.l (A3)
0002A598 <AmiBlitz3.ab2@5894>    BEQ.w resmacs__nomore
0002A59A <AmiBlitz3.ab2@5895>   MOVE.l D6,(A3)
0002A59C <AmiBlitz3.ab2@5896>   MOVE.l D5,D2
0002A5A0 <AmiBlitz3.ab2@5897>    BSR.w addhunkoffset
0002A5A2 <AmiBlitz3.ab2@5900>   MOVE.l A3,D2
0002A5A4 <AmiBlitz3.ab2@5901>   MOVE.l D7,D1
0002A5AA <AmiBlitz3.ab2@5903>    MOVEA.l _dosbase,A6
0002A5AE <AmiBlitz3.ab2@5904>    JSR _Write(a6)
0002A5B0 <AmiBlitz3.ab2@5905>   TST.l D4
0002A5B4 <AmiBlitz3.ab2@5906>    BEQ.w resmacs__skip
0002A5B6 <AmiBlitz3.ab2@5907>   MOVE.l (A7),D2
0002A5B8 <AmiBlitz3.ab2@5908>   MOVE.l D4,D3
0002A5BA <AmiBlitz3.ab2@5909>   MOVE.l D7,D1
0002A5C0 <AmiBlitz3.ab2@5911>     MOVEA.l _dosbase,A6
0002A5C4 <AmiBlitz3.ab2@5912>    JSR _Write(A6)
0002A5C8 <AmiBlitz3.ab2@5915>   MOVE.l (A7)+,$4(A3)
0002A5CA <AmiBlitz3.ab2@5916>   MOVE.l (A7)+,(A3)
0002A5CC <AmiBlitz3.ab2@5917>   MOVEA.l (A3),A3
0002A5D0 <AmiBlitz3.ab2@5918> BRA.w resmacs__loop
0002A5D2 <AmiBlitz3.ab2@5921> RTS
0002A5D8 <AmiBlitz3.ab2@5925>   TST.b resdisable
0002A5DC <AmiBlitz3.ab2@5926>   BEQ restypes__l1
0002A5E2 <AmiBlitz3.ab2@5927>   MOVE.l lastrestype,a3
0002A5E8 <AmiBlitz3.ab2@5928>   CMP.l #0,a3
0002A5EC <AmiBlitz3.ab2@5929>   BEQ restypes__l1
0002A5EE <AmiBlitz3.ab2@5930>   MOVE.l (a3),a3
0002A5F2 <AmiBlitz3.ab2@5931> BRA restypes__l2
0002A5F8 <AmiBlitz3.ab2@5934>   MOVEA.l newtype_string,A3
0002A5FA <AmiBlitz3.ab2@5937>   MOVEA.l A3,A2
0002A5FE <AmiBlitz3.ab2@5938>    BSR.w countem
0002A602 <AmiBlitz3.ab2@5941>    CMPA.w #$0,A3
0002A606 <AmiBlitz3.ab2@5942>    BEQ.w restypes__done
0002A608 <AmiBlitz3.ab2@5943>   MOVE.l D6,-(A7)
0002A60C <AmiBlitz3.ab2@5944>   MOVEA.l $4(A3),A2
0002A60E <AmiBlitz3.ab2@5945>   MOVEQ.l #$0E,D5
0002A612 <AmiBlitz3.ab2@5946>    BSR.w writeoffs
0002A614 <AmiBlitz3.ab2@5947>   MOVE.l (A7)+,D0
0002A618 <AmiBlitz3.ab2@5948>   MOVE.l $4(A3),-(A7)
0002A61C <AmiBlitz3.ab2@5949>   MOVE.l D0,$4(A3)
0002A61E <AmiBlitz3.ab2@5950>   MOVE.l D6,D2
0002A620 <AmiBlitz3.ab2@5951>   ADDQ.l #4,D2
0002A624 <AmiBlitz3.ab2@5952>    BSR.w addhunkoffset
0002A626 <AmiBlitz3.ab2@5953>   MOVEQ.l #$00,D3
0002A62A <AmiBlitz3.ab2@5954>   MOVE.b $A(A3),D3
0002A62C <AmiBlitz3.ab2@5955>   ADDQ.w #1,D3
0002A630 <AmiBlitz3.ab2@5956>   BCLR #$0,D3
0002A632 <AmiBlitz3.ab2@5957>   ADD.l D3,D6
0002A634 <AmiBlitz3.ab2@5958>   MOVE.l A3,D2
0002A636 <AmiBlitz3.ab2@5959>   MOVE.l D7,D1
0002A63C <AmiBlitz3.ab2@5961>     MOVEA.l _dosbase,A6
0002A640 <AmiBlitz3.ab2@5962>     JSR _Write(A6)
0002A644 <AmiBlitz3.ab2@5963>   MOVE.l (A7)+,$4(A3)
0002A646 <AmiBlitz3.ab2@5964>   MOVEA.l (A3),A3
0002A64A <AmiBlitz3.ab2@5965> BRA.w restypes__loop
0002A64C <AmiBlitz3.ab2@5968> RTS
0002A652 <AmiBlitz3.ab2@5972>    TST.b resdisable
0002A656 <AmiBlitz3.ab2@5973>    BEQ resconsts__l1
0002A65C <AmiBlitz3.ab2@5974>    MOVE.l currentlabeladdr,a2
0002A662 <AmiBlitz3.ab2@5975>    CMP.l #0,a2
0002A666 <AmiBlitz3.ab2@5976>    BEQ resconsts__l1
0002A668 <AmiBlitz3.ab2@5977>    MOVE.l (a2),a2
0002A66C <AmiBlitz3.ab2@5978> BRA resconsts__l2
0002A672 <AmiBlitz3.ab2@5981>    MOVEA.l labelbase,A2
0002A674 <AmiBlitz3.ab2@5984>    MOVEQ.l #$00,D0
0002A678 <AmiBlitz3.ab2@5987>    CMPA.w #$0,A2
0002A67C <AmiBlitz3.ab2@5988>    BEQ.w resconsts__done
0002A684 <AmiBlitz3.ab2@5989>   CMPI.l #$1,$4(A2)
0002A688 <AmiBlitz3.ab2@5990>    BNE.w resconsts__next
0002A68A <AmiBlitz3.ab2@5991>   ADDQ.w #1,D0
0002A68C <AmiBlitz3.ab2@5994>   MOVEA.l (A2),A2
0002A690 <AmiBlitz3.ab2@5995> BRA.w resconsts__loop
0002A696 <AmiBlitz3.ab2@5998>   MOVE.w D0,temp1
0002A698 <AmiBlitz3.ab2@5999>   MOVE.l D7,D1
0002A69E <AmiBlitz3.ab2@6000>   MOVE.l #temp1,D2
0002A6A0 <AmiBlitz3.ab2@6001>   MOVEQ.l #$02,D3
0002A6A2 <AmiBlitz3.ab2@6002>   ADDQ.l #2,D6
0002A6A8 <AmiBlitz3.ab2@6004>     MOVEA.l _dosbase,A6
0002A6AC <AmiBlitz3.ab2@6005>     JSR _Write(A6)
0002A6B2 <AmiBlitz3.ab2@6006>    TST.b resdisable
0002A6B6 <AmiBlitz3.ab2@6007>    BEQ resconsts__done_l1
0002A6BC <AmiBlitz3.ab2@6008>    MOVE.l currentlabeladdr,a2
0002A6C2 <AmiBlitz3.ab2@6009>    CMP.l #0,a2
0002A6C6 <AmiBlitz3.ab2@6010>    BEQ resconsts__done_l1
0002A6C8 <AmiBlitz3.ab2@6011>    MOVE.l (a2),a2
0002A6CC <AmiBlitz3.ab2@6012> BRA resconsts__loop2
0002A6D2 <AmiBlitz3.ab2@6015>    MOVEA.l labelbase,A2                                    ;write resident labels
0002A6D6 <AmiBlitz3.ab2@6018>    CMPA.w #$0,A2
0002A6DA <AmiBlitz3.ab2@6019>    BEQ.w resconsts__done2
0002A6E2 <AmiBlitz3.ab2@6020>   CMPI.l #$1,$4(A2)
0002A6E6 <AmiBlitz3.ab2@6021>    BNE.w resconsts__next2
0002A6E8 <AmiBlitz3.ab2@6022>    MOVEQ.l #$00,D3
0002A6EC <AmiBlitz3.ab2@6023>   MOVE.b $12(A2),D3                                        ;length
0002A6EE <AmiBlitz3.ab2@6024>   ADDQ.w #1,D3
0002A6F2 <AmiBlitz3.ab2@6025>   BCLR #$0,D3
0002A6F4 <AmiBlitz3.ab2@6026>   MOVE.l D6,D2
0002A6F6 <AmiBlitz3.ab2@6027>   ADD.l D3,D6
0002A6F8 <AmiBlitz3.ab2@6030>   MOVE.l (A2),-(A7)
0002A6FA <AmiBlitz3.ab2@6031>   TST.l (A2)
0002A6FE <AmiBlitz3.ab2@6032>    BEQ.w resconsts__nonext
0002A700 <AmiBlitz3.ab2@6033>   MOVE.l D6,(A2)
0002A704 <AmiBlitz3.ab2@6034>    BSR.w addhunkoffset
0002A706 <AmiBlitz3.ab2@6037>   MOVE.l A2,D2
0002A708 <AmiBlitz3.ab2@6038>   MOVE.l D7,D1
0002A70E <AmiBlitz3.ab2@6040>     MOVEA.l _dosbase,A6
0002A712 <AmiBlitz3.ab2@6041>     JSR _Write(A6)
0002A714 <AmiBlitz3.ab2@6042>   MOVE.l (A7)+,(A2)
0002A716 <AmiBlitz3.ab2@6045>   MOVEA.l (A2),A2
0002A71A <AmiBlitz3.ab2@6046> BRA.w resconsts__loop2
0002A71C <AmiBlitz3.ab2@6049> RTS
0002A746 <AmiBlitz3.ab2@6053>    !basic
0002A74C <AmiBlitz3.ab2@6054>     MOVE.l ptr_resfile,d0
0002A75C <AmiBlitz3.ab2@6055>     resfileP.l = Peek.l(?ptr_resfile)
0002A766 <AmiBlitz3.ab2@6056>     If resfileP
0002A78E <AmiBlitz3.ab2@6057>       resfile$ = Peek.s(resfileP)
0002A7DA <AmiBlitz3.ab2@6058>       tests.b = Instr(resfile$,"/")
0002A826 <AmiBlitz3.ab2@6059>       testc.b = Instr(resfile$,":")
0002A848 <AmiBlitz3.ab2@6060>       If tests=0 AND testc=0
0002A8C8 <AmiBlitz3.ab2@6061>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
0002A8DA <AmiBlitz3.ab2@6062>         Poke.l ?ptr_resfile,&resfile$
0002A8E0 <AmiBlitz3.ab2@6064>     Else
0002A90E <AmiBlitz3.ab2@6065>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
0002A92C <AmiBlitz3.ab2@6067>    !asm
0002A92E <AmiBlitz3.ab2@6068> RTS
0002A934 <AmiBlitz3.ab2@6072>   MOVE.l A7,errstack
0002A93E <AmiBlitz3.ab2@6074>   MOVE.l #next_resentry,errcont
0002A946 <AmiBlitz3.ab2@6075>   MOVE.w #$FFFF,ezerr
0002A94A <AmiBlitz3.ab2@6076>   BSR.w Aclearallvars
0002A94E <AmiBlitz3.ab2@6077>   BSR.w free_residents
0002A954 <AmiBlitz3.ab2@6079>   LEA residents_table,A5
0002A956 <AmiBlitz3.ab2@6080>   MOVEQ.l #$07,D6
0002A958 <AmiBlitz3.ab2@6083>     TST.b (A5)
0002A95C <AmiBlitz3.ab2@6084>     BEQ.w next_resentry
0002A962 <AmiBlitz3.ab2@6085>     MOVE.l A5,ptr_resfile
0002A966 <AmiBlitz3.ab2@6086>     BSR check_residentpath
0002A96C <AmiBlitz3.ab2@6087>     MOVE.l ptr_resfile,d1
0002A972 <AmiBlitz3.ab2@6088>     MOVEA.l _dosbase,A6
0002A976 <AmiBlitz3.ab2@6089>     JSR _LoadSeg(A6)
0002A97A <AmiBlitz3.ab2@6090>     MOVE.l D0,$40(A5)
0002A97E <AmiBlitz3.ab2@6091>     BNE.w reloadresident__yeah
0002A982 <AmiBlitz3.ab2@6092>     BSR.w reserr
0002A984 <AmiBlitz3.ab2@6095>     MOVEA.l D0,A3
0002A986 <AmiBlitz3.ab2@6096>     ADDA.l A3,A3
0002A988 <AmiBlitz3.ab2@6097>     ADDA.l A3,A3
0002A98A <AmiBlitz3.ab2@6098>     ADDQ.w #4,A3                                           ;start of res
0002A98E <AmiBlitz3.ab2@6099>     BSR.w JL_0_5A9E
0002A992 <AmiBlitz3.ab2@6100>     BSR.w JL_0_5A62                                        ;add macros to list
0002A996 <AmiBlitz3.ab2@6101>     BSR.w JL_0_5A32                                        ;read labels
0002A99A <AmiBlitz3.ab2@6104>     LEA $44(A5),A5
0002A99E <AmiBlitz3.ab2@6105>   DBF D6,reloadresident__loop
0002A9A8 <AmiBlitz3.ab2@6110>   MOVE.l #free_residents,errcont
0002A9AE <AmiBlitz3.ab2@6112>   MOVEA.l newtype_string,A3
0002A9B0 <AmiBlitz3.ab2@6113>   MOVEQ.l #$0B,D7
0002A9B4 <AmiBlitz3.ab2@6114>   BSR.w checkclash
0002A9BA <AmiBlitz3.ab2@6116>   MOVEA.l macrobase,A3
0002A9BC <AmiBlitz3.ab2@6117>   MOVEQ.l #$d,D7
0002A9C0 <AmiBlitz3.ab2@6118>   BSR.w checkclash
0002A9C6 <AmiBlitz3.ab2@6120>   MOVEA.l firstconst,A3
0002A9C8 <AmiBlitz3.ab2@6121>   MOVEQ.l #$19,D7
0002A9CC <AmiBlitz3.ab2@6122>   BSR.w checkclash
0002A9CE <AmiBlitz3.ab2@6125> RTS
0002A9D0 <AmiBlitz3.ab2@6129>   MOVEA.l A3,A4
0002A9D4 <AmiBlitz3.ab2@6132>     CMPA.w #$0,A4
0002A9D8 <AmiBlitz3.ab2@6133>     BEQ.w checkclash__done
0002A9DE <AmiBlitz3.ab2@6135>     LEA ptr_parameterstore,A0
0002A9E2 <AmiBlitz3.ab2@6136>     LEA $0(A4,D7.W),A1
0002A9E4 <AmiBlitz3.ab2@6137>     MOVEQ.l #-$01,D2
0002A9E6 <AmiBlitz3.ab2@6140>       ADDQ.w #1,D2
0002A9E8 <AmiBlitz3.ab2@6141>       MOVE.b (A1)+,(A0)+
0002A9EC <AmiBlitz3.ab2@6142>     BNE.w checkclash__loop2
0002A9EE <AmiBlitz3.ab2@6143>     MOVEA.l A3,A2
0002A9F2 <AmiBlitz3.ab2@6146>     BSR.w findlab
0002A9F6 <AmiBlitz3.ab2@6147>     BNE.w checkclash__next                                  ;not found
0002A9F8 <AmiBlitz3.ab2@6148>     CMPA.l A2,A4
0002A9FC <AmiBlitz3.ab2@6149>     BEQ.w checkclash__l1
0002A9FE <AmiBlitz3.ab2@6150>     MOVE.l a1,a5
0002AA02 <AmiBlitz3.ab2@6151> BRA clasherr
0002AA06 <AmiBlitz3.ab2@6154> BRA.w checkclash__more
0002AA08 <AmiBlitz3.ab2@6157>     MOVEA.l (A4),A4
0002AA0C <AmiBlitz3.ab2@6158> BRA.w checkclash__loop
0002AA0E <AmiBlitz3.ab2@6161> RTS
0002AA14 <AmiBlitz3.ab2@6165>   MOVEA.l _dosbase,A6
0002AA1A <AmiBlitz3.ab2@6167>   LEA newtype_string,A0
0002AA20 <AmiBlitz3.ab2@6168>   MOVE.l A0,lastrestype
0002AA22 <AmiBlitz3.ab2@6169>   CLR.l (A0)
0002AA28 <AmiBlitz3.ab2@6171>   LEA macrobase,A0
0002AA2E <AmiBlitz3.ab2@6172>   MOVE.l A0,currentmacroaddr
0002AA30 <AmiBlitz3.ab2@6173>   CLR.l (A0)
0002AA36 <AmiBlitz3.ab2@6175>   LEA labelbase,A0
0002AA3C <AmiBlitz3.ab2@6176>   MOVE.l A0,currentlabeladdr
0002AA3E <AmiBlitz3.ab2@6177>   CLR.l (A0)
0002AA44 <AmiBlitz3.ab2@6178>   CLR.w rescnt
0002AA7C <AmiBlitz3.ab2@6182>   !ComData_SetB{comByte_DebugMode,debugmode}
0002AA82 <AmiBlitz3.ab2@6185>   LEA residents_table,A2
0002AA84 <AmiBlitz3.ab2@6186>   MOVEQ.l #$07,D2
0002AA88 <AmiBlitz3.ab2@6189>      MOVE.l $40(A2),D1
0002AA8C <AmiBlitz3.ab2@6190>      BEQ.w free_residents__next
0002AA90 <AmiBlitz3.ab2@6191>       CLR.l $40(A2)
0002AA96 <AmiBlitz3.ab2@6192>       MOVEA.l _dosbase,A6
0002AA9A <AmiBlitz3.ab2@6193>       JSR _UnLoadSeg(A6)
0002AA9E <AmiBlitz3.ab2@6196>      LEA $44(A2),A2
0002AAA2 <AmiBlitz3.ab2@6197>    DBF D2,free_residents__loop
0002AAA4 <AmiBlitz3.ab2@6199> RTS
0002AAA6 <AmiBlitz3.ab2@6203>   MOVE.w (A3)+,D1
0002AAAA <AmiBlitz3.ab2@6204>   BEQ.w JL_0_5A60
0002AAB0 <AmiBlitz3.ab2@6205>   MOVEA.l currentlabeladdr,A2
0002AAB2 <AmiBlitz3.ab2@6206>   MOVE.l A3,(A2)
0002AAB4 <AmiBlitz3.ab2@6207>   SUBQ.w #1,D1
0002AAB6 <AmiBlitz3.ab2@6210>     MOVEA.l A3,A2
0002AAB8 <AmiBlitz3.ab2@6211>     MOVEA.l (A3),A3
0002AABC <AmiBlitz3.ab2@6212>   DBF D1,JL_0_5A42
0002AABE <AmiBlitz3.ab2@6214>   CLR.l (a2)                                               ;bugfix for object
0002AAC4 <AmiBlitz3.ab2@6215>   MOVE.l A2,currentlabeladdr
0002AAC6 <AmiBlitz3.ab2@6216>   MOVEA.l A2,A3
0002AAC8 <AmiBlitz3.ab2@6217>   MOVEQ.l #$00,D0
0002AACC <AmiBlitz3.ab2@6218>   MOVE.b $12(A3),D0
0002AACE <AmiBlitz3.ab2@6219>   ADDQ.w #1,D0
0002AAD2 <AmiBlitz3.ab2@6220>   BCLR #$0,D0
0002AAD4 <AmiBlitz3.ab2@6221>   ADDA.w D0,A3
0002AAD6 <AmiBlitz3.ab2@6224> RTS
0002AAD8 <AmiBlitz3.ab2@6228>   MOVE.w (A3)+,D1
0002AADC <AmiBlitz3.ab2@6229>   BEQ.w JL_0_5A9C
0002AAE2 <AmiBlitz3.ab2@6231>   MOVEA.l currentmacroaddr,A2
0002AAE4 <AmiBlitz3.ab2@6232>   MOVE.l A3,(A2)
0002AAE6 <AmiBlitz3.ab2@6233>   SUBQ.w #1,D1
0002AAE8 <AmiBlitz3.ab2@6236>     MOVEA.l A3,A2
0002AAEA <AmiBlitz3.ab2@6237>     MOVEA.l (A3),A3
0002AAEE <AmiBlitz3.ab2@6238>   DBF D1,JL_0_5A72
0002AAF4 <AmiBlitz3.ab2@6240>   MOVE.l A2,currentmacroaddr
0002AAF6 <AmiBlitz3.ab2@6241>   MOVEA.l A2,A3
0002AAF8 <AmiBlitz3.ab2@6242>   MOVEQ.l #$00,D0
0002AAFC <AmiBlitz3.ab2@6243>   MOVE.b $C(A3),D0
0002AAFE <AmiBlitz3.ab2@6244>   ADDQ.w #1,D0
0002AB02 <AmiBlitz3.ab2@6245>   BCLR #$0,D0
0002AB06 <AmiBlitz3.ab2@6246>   MOVE.w $8(A3),D1
0002AB08 <AmiBlitz3.ab2@6247>   ADDQ.w #1,D1
0002AB0C <AmiBlitz3.ab2@6248>   BCLR #$0,D1
0002AB0E <AmiBlitz3.ab2@6249>   ADDA.w D0,A3
0002AB10 <AmiBlitz3.ab2@6250>   ADDA.w D1,A3
0002AB12 <AmiBlitz3.ab2@6253> RTS
0002AB14 <AmiBlitz3.ab2@6257>   MOVE.w (A3)+,D1
0002AB18 <AmiBlitz3.ab2@6258>   BEQ.w JL_0_5B38
0002AB1A <AmiBlitz3.ab2@6259>   MOVE.w D1,-(A7)
0002AB1C <AmiBlitz3.ab2@6260>   SUBQ.w #1,D1
0002AB22 <AmiBlitz3.ab2@6261>   MOVEA.l lastrestype,A2
0002AB24 <AmiBlitz3.ab2@6262>   MOVE.l A2,-(A7)
0002AB26 <AmiBlitz3.ab2@6265>       MOVE.l (A3),D0
0002AB2A <AmiBlitz3.ab2@6266>       BEQ.w JL_0_5ABC
0002AB2C <AmiBlitz3.ab2@6267>       MOVEA.l D0,A3
0002AB30 <AmiBlitz3.ab2@6268> BRA.w JL_0_5AB0
0002AB34 <AmiBlitz3.ab2@6271>       MOVE.b $E(A3),D0
0002AB36 <AmiBlitz3.ab2@6272>       ADDQ.w #1,D0
0002AB3A <AmiBlitz3.ab2@6273>       BCLR #$0,D0
0002AB3C <AmiBlitz3.ab2@6274>       ADDA.w D0,A3
0002AB3E <AmiBlitz3.ab2@6275>       MOVE.l A3,(A2)
0002AB40 <AmiBlitz3.ab2@6276>       MOVEA.l A3,A2
0002AB42 <AmiBlitz3.ab2@6277>       MOVEQ.l #$00,D0
0002AB46 <AmiBlitz3.ab2@6278>       MOVE.b $A(A3),D0
0002AB48 <AmiBlitz3.ab2@6279>       ADDQ.w #1,D0
0002AB4C <AmiBlitz3.ab2@6280>       BCLR #$0,D0
0002AB4E <AmiBlitz3.ab2@6281>       ADDA.w D0,A3
0002AB52 <AmiBlitz3.ab2@6282>   DBF D1,JL_0_5AB0
0002AB54 <AmiBlitz3.ab2@6284>   MOVEA.l (A7)+,A0
0002AB56 <AmiBlitz3.ab2@6285>   MOVEA.l (A0),A0
0002AB5A <AmiBlitz3.ab2@6288>     CMPA.w #$0,A0
0002AB5E <AmiBlitz3.ab2@6289>     BEQ.w JL_0_5B2A
0002AB62 <AmiBlitz3.ab2@6290>     MOVEA.l $4(A0),A1
0002AB66 <AmiBlitz3.ab2@6293>     CMPA.w #$0,A1
0002AB6A <AmiBlitz3.ab2@6294>     BEQ.w JL_0_5B24
0002AB6E <AmiBlitz3.ab2@6295>     MOVE.w $A(A1),D0
0002AB74 <AmiBlitz3.ab2@6296>     MOVEA.l newtypebase,A4
0002AB78 <AmiBlitz3.ab2@6297>     CMP.w #$7,D0
0002AB7C <AmiBlitz3.ab2@6298>     BCS.w JL_0_5B0E
0002AB82 <AmiBlitz3.ab2@6299>     SUB.w rescnt,D0
0002AB84 <AmiBlitz3.ab2@6302>     SUBQ.w #1,D0
0002AB88 <AmiBlitz3.ab2@6303>     BMI.w JL_0_5B1A
0002AB8A <AmiBlitz3.ab2@6306>        MOVEA.l (A4),A4
0002AB8E <AmiBlitz3.ab2@6307>   DBF D0,JL_0_5B14
0002AB92 <AmiBlitz3.ab2@6310>     MOVE.l A4,$A(A1)
0002AB94 <AmiBlitz3.ab2@6311>     MOVEA.l (A1),A1
0002AB98 <AmiBlitz3.ab2@6312> BRA.w JL_0_5AEE
0002AB9A <AmiBlitz3.ab2@6315>     MOVEA.l (A0),A0
0002AB9E <AmiBlitz3.ab2@6316> BRA.w JL_0_5AE2
0002ABA0 <AmiBlitz3.ab2@6319>   MOVE.w (A7)+,D0
0002ABA6 <AmiBlitz3.ab2@6320>   ADD.w D0,rescnt
0002ABAC <AmiBlitz3.ab2@6321>   MOVE.l A2,lastrestype
0002ABAE <AmiBlitz3.ab2@6324> RTS
0002ABB4 <AmiBlitz3.ab2@6328>   LEA tokens,A0
0002ABB8 <AmiBlitz3.ab2@6329>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
0002ABBA <AmiBlitz3.ab2@6332>     MOVEA.l (A0),A0
0002ABBE <AmiBlitz3.ab2@6333>   DBF D0,JL_0_5BD0
0002ABC4 <AmiBlitz3.ab2@6335>   MOVEA.l #asmpnts,A1                                      ;create tokentab
0002ABC8 <AmiBlitz3.ab2@6336>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
0002ABCC <AmiBlitz3.ab2@6339>       LEA $6(A0),A2
0002ABCE <AmiBlitz3.ab2@6342>         TST.b (A2)+
0002ABD2 <AmiBlitz3.ab2@6343>       BNE.w JL_0_5BE4
0002ABD4 <AmiBlitz3.ab2@6346>         TST.b (A2)+
0002ABD8 <AmiBlitz3.ab2@6347>       BNE.w JL_0_5BEA
0002ABDA <AmiBlitz3.ab2@6349>       ADDQ.w #1,A2
0002ABDC <AmiBlitz3.ab2@6350>       EXG.l D1,A2
0002ABE0 <AmiBlitz3.ab2@6351>       BCLR #$0,D1
0002ABE2 <AmiBlitz3.ab2@6352>       EXG.l D1,A2
0002ABE4 <AmiBlitz3.ab2@6353>       MOVE.l A2,(A1)+
0002ABE6 <AmiBlitz3.ab2@6354>       MOVEA.l (A0),A0
0002ABEA <AmiBlitz3.ab2@6355>   DBF D0,JL_0_5BE0
0002ABEC <AmiBlitz3.ab2@6356> RTS
0002ABF0 <AmiBlitz3.ab2@6360>   BSR.w asmconst
0002ABF2 <AmiBlitz3.ab2@6361>   MOVEQ.l #$0B,D5
0002ABF4 <AmiBlitz3.ab2@6362> RTS
0002ABF6 <AmiBlitz3.ab2@6365> unmove:  Ds.w 1
0002ABFA <AmiBlitz3.ab2@6369>   MOVE.w #$48E7,D1
0002ABFE <AmiBlitz3.ab2@6370>   BSR.w writeword                                          ;movem.l -(a7)
0002AC02 <AmiBlitz3.ab2@6371>   MOVE.w #$000F,D2
0002AC04 <AmiBlitz3.ab2@6372>   SUB.w D4,D2
0002AC06 <AmiBlitz3.ab2@6373>   MOVEQ.l #-$01,D1
0002AC08 <AmiBlitz3.ab2@6374>   BCLR D2,D1
0002AC0C <AmiBlitz3.ab2@6375>   BSR.w writeword
0002AC0E <AmiBlitz3.ab2@6376>   MOVEQ.l #-$01,D1
0002AC10 <AmiBlitz3.ab2@6377>   BCLR D4,D1
0002AC16 <AmiBlitz3.ab2@6378>   MOVE.w D1,unmove
0002AC18 <AmiBlitz3.ab2@6379> RTS
0002AC1C <AmiBlitz3.ab2@6383>   MOVE.w #$4CDF,D1
0002AC20 <AmiBlitz3.ab2@6384>   BSR.w writeword
0002AC24 <AmiBlitz3.ab2@6385>   MOVE.w unmove(PC),D1
0002AC28 <AmiBlitz3.ab2@6386> BRA.w writeword
0002AC2C <AmiBlitz3.ab2@6399>   BSR.w JL_0_5D22
0002AC30 <AmiBlitz3.ab2@6400>   CMP.w #$2C,D0                                            ;#','
0002AC34 <AmiBlitz3.ab2@6401>    BNE.w syntaxerr
0002AC3A <AmiBlitz3.ab2@6402>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
0002AC3E <AmiBlitz3.ab2@6403>    BSR.w writelong
0002AC40 <AmiBlitz3.ab2@6404>   MOVE.w D4,D1
0002AC44 <AmiBlitz3.ab2@6405>   ORI.w #$2F00,D1
0002AC48 <AmiBlitz3.ab2@6406>    BSR.w writeword
0002AC4C <AmiBlitz3.ab2@6407>    BSR.w get1bytemain
0002AC50 <AmiBlitz3.ab2@6408>    BSR.w getparameter
0002AC54 <AmiBlitz3.ab2@6409>    BSR.w JL_0_8E3C
0002AC58 <AmiBlitz3.ab2@6410>    BSR.w calcvar
0002AC5C <AmiBlitz3.ab2@6411>    BTST #$E,D2
0002AC60 <AmiBlitz3.ab2@6412>    BEQ.w JL_0_5C80
0002AC64 <AmiBlitz3.ab2@6415>    MOVE.b #$3,D2
0002AC68 <AmiBlitz3.ab2@6416> BRA.w JL_0_5C8E
0002AC6A <AmiBlitz3.ab2@6419>   TST.b D2
0002AC6E <AmiBlitz3.ab2@6420>    BEQ.w JL_0_5C78
0002AC72 <AmiBlitz3.ab2@6421>   CMP.b #$7,D2
0002AC76 <AmiBlitz3.ab2@6422>    BEQ.w JL_0_5C78
0002AC7A <AmiBlitz3.ab2@6425>   BTST #$F,D2
0002AC7E <AmiBlitz3.ab2@6426>    BNE.w JL_0_5CA4
0002AC82 <AmiBlitz3.ab2@6427>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
0002AC86 <AmiBlitz3.ab2@6428>    BSR.w writeword
0002AC88 <AmiBlitz3.ab2@6429>   MOVE.w D3,D1
0002AC8C <AmiBlitz3.ab2@6430>    BSR.w writeword
0002AC90 <AmiBlitz3.ab2@6433>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002AC94 <AmiBlitz3.ab2@6434>    BSR.w writeword
0002AC98 <AmiBlitz3.ab2@6435>   MOVE.w #$1480,D1
0002AC9C <AmiBlitz3.ab2@6436>   CMP.b #$1,D2
0002ACA0 <AmiBlitz3.ab2@6437>    BEQ.w JL_0_5CC8
0002ACA4 <AmiBlitz3.ab2@6438>   EORI.w #$3000,D1
0002ACA8 <AmiBlitz3.ab2@6439>   CMP.b #$2,D2
0002ACAC <AmiBlitz3.ab2@6440>    BNE.w JL_0_5CC8
0002ACB0 <AmiBlitz3.ab2@6441>   ORI.w #$1000,D1
0002ACB4 <AmiBlitz3.ab2@6444>   BSR.w writeword
0002ACBA <AmiBlitz3.ab2@6445>   MOVE.l #$4CDF7FFF,D1
0002ACBE <AmiBlitz3.ab2@6446> BRA.w writelong
0002ACC2 <AmiBlitz3.ab2@6450>   BSR.w JL_0_5D22
0002ACC6 <AmiBlitz3.ab2@6451>   CMP.w #$2C,D0
0002ACCA <AmiBlitz3.ab2@6452>    BNE.w syntaxerr
0002ACCE <AmiBlitz3.ab2@6453>    BSR.w regmovems
0002ACD0 <AmiBlitz3.ab2@6454>   MOVE.w D4,-(A7)
0002ACD2 <AmiBlitz3.ab2@6455>   MOVEQ.l #$03,D2
0002ACD6 <AmiBlitz3.ab2@6456>    BSR.w eval
0002ACD8 <AmiBlitz3.ab2@6457>   MOVE.w (A7)+,D1
0002ACDC <AmiBlitz3.ab2@6458>    BEQ.w JL_0_5D1A
0002ACE0 <AmiBlitz3.ab2@6459>   CMP.w #$8,D1
0002ACE4 <AmiBlitz3.ab2@6460>    BCC.w JL_0_5D0C
0002ACE6 <AmiBlitz3.ab2@6461>   LSL.w #8,D1
0002ACE8 <AmiBlitz3.ab2@6462>   LSL.w #1,D1
0002ACEC <AmiBlitz3.ab2@6463>   ORI.w #$2000,D1
0002ACF0 <AmiBlitz3.ab2@6464>    BSR.w writeword
0002ACF4 <AmiBlitz3.ab2@6465> BRA.w JL_0_5D1A
0002ACF6 <AmiBlitz3.ab2@6468>   SUBQ.w #8,D1
0002ACF8 <AmiBlitz3.ab2@6469>   LSL.w #8,D1
0002ACFA <AmiBlitz3.ab2@6470>   LSL.w #1,D1
0002ACFE <AmiBlitz3.ab2@6471>   ORI.w #$2040,D1
0002AD02 <AmiBlitz3.ab2@6472>   BSR.w writeword
0002AD06 <AmiBlitz3.ab2@6475> BRA.w dounmove
0002AD0A <AmiBlitz3.ab2@6479>   BSR.w get1bytemain
0002AD0E <AmiBlitz3.ab2@6482>   ORI.w #$20,D0
0002AD12 <AmiBlitz3.ab2@6483>   CMP.w #$64,D0
0002AD16 <AmiBlitz3.ab2@6484>    BEQ.w JL_0_5D4E
0002AD1A <AmiBlitz3.ab2@6485>   CMP.w #$61,D0
0002AD1E <AmiBlitz3.ab2@6486>    BNE.w syntaxerr
0002AD22 <AmiBlitz3.ab2@6487>    BSR.w JL_0_5D4E
0002AD24 <AmiBlitz3.ab2@6488>   ADDQ.w #8,D4
0002AD26 <AmiBlitz3.ab2@6489> RTS
0002AD52 <AmiBlitz3.ab2@6493>   !fget                                                   ;bsr.w get1bytemain
0002AD56 <AmiBlitz3.ab2@6495>   ORI.w #$20,D0
0002AD5A <AmiBlitz3.ab2@6498>   CMP.w #$61,D0
0002AD5E <AmiBlitz3.ab2@6499>   BNE.w syntaxerr
0002AD8A <AmiBlitz3.ab2@6502>   !fget                                                    ;bsr.w get1bytemain
0002AD8E <AmiBlitz3.ab2@6503>   SUBI.w #$30,D0
0002AD92 <AmiBlitz3.ab2@6504>    BMI.w syntaxerr
0002AD96 <AmiBlitz3.ab2@6505>   CMP.w #$7,D0
0002AD9A <AmiBlitz3.ab2@6506>    BHI.w syntaxerr
0002AD9C <AmiBlitz3.ab2@6507>   MOVE.w D0,D4
0002ADC8 <AmiBlitz3.ab2@6508>   !fget
0002ADCA <AmiBlitz3.ab2@6509> RTS                                                        ;bra.w get1bytemain
0002ADCC <AmiBlitz3.ab2@6513>   ADDQ.w #8,D4
0002ADCE <AmiBlitz3.ab2@6516>   MOVEQ.l #$00,D5
0002ADD2 <AmiBlitz3.ab2@6517>   SUBI.w #$30,D4
0002ADD6 <AmiBlitz3.ab2@6520>   CMP.w #$2D,D0
0002ADDA <AmiBlitz3.ab2@6521>    BEQ.w JL_0_5D9E
0002ADDE <AmiBlitz3.ab2@6522>   CMP.w #$2F,D0
0002ADE2 <AmiBlitz3.ab2@6523>    BEQ.w JL_0_5D8C
0002ADE6 <AmiBlitz3.ab2@6524> BRA.w syntaxerr
0002ADE8 <AmiBlitz3.ab2@6527>   BSET D4,D5
0002ADEA <AmiBlitz3.ab2@6530>   MOVE.w D5,D4
0002ADEC <AmiBlitz3.ab2@6531>   MOVEQ.l #$0F,D5
0002ADEE <AmiBlitz3.ab2@6532> RTS
0002ADF0 <AmiBlitz3.ab2@6535>   BSET D4,D5
0002ADF4 <AmiBlitz3.ab2@6536>   BSR.w JL_0_5D1E
0002AE06 <AmiBlitz3.ab2@6537>   !compare3                                                ;bsr.w JL_0_5FC0
0002AE0A <AmiBlitz3.ab2@6538>   BNE.w JL_0_5D70
0002AE0E <AmiBlitz3.ab2@6539> BRA.w JL_0_5D84
0002AE10 <AmiBlitz3.ab2@6542>   MOVE.w D4,D1
0002AE14 <AmiBlitz3.ab2@6543>    BSR.w JL_0_5D1E
0002AE16 <AmiBlitz3.ab2@6544>   CMP.w D4,D1
0002AE1A <AmiBlitz3.ab2@6545>    BLS.w JL_0_5DAC
0002AE1C <AmiBlitz3.ab2@6546>   EXG.l D4,D1
0002AE1E <AmiBlitz3.ab2@6549>   BSET D1,D5
0002AE20 <AmiBlitz3.ab2@6550>   ADDQ.w #1,D1
0002AE22 <AmiBlitz3.ab2@6551>   CMP.w D4,D1
0002AE26 <AmiBlitz3.ab2@6552>    BLS.w JL_0_5DAC
0002AE38 <AmiBlitz3.ab2@6553>   !compare3                                                ;bsr.w JL_0_5FC0
0002AE3C <AmiBlitz3.ab2@6554>   BNE.w JL_0_5D70
0002AE40 <AmiBlitz3.ab2@6555> BRA.w JL_0_5D86
0002AE42 <AmiBlitz3.ab2@6558>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
0002AE6E <AmiBlitz3.ab2@6559>    !fget
0002AE72 <AmiBlitz3.ab2@6560>   CMP.w #$23,D0
0002AE76 <AmiBlitz3.ab2@6561>    BEQ.w getimm
0002AE7A <AmiBlitz3.ab2@6562>   CMP.w #$28,D0
0002AE7E <AmiBlitz3.ab2@6563>    BEQ.w JL_0_5DFE
0002AE82 <AmiBlitz3.ab2@6564>   CMP.w #$2D,D0
0002AE86 <AmiBlitz3.ab2@6565>    BNE.w JL_0_5E20
0002AEB2 <AmiBlitz3.ab2@6566>    !fget                                                   ;bsr.w get1bytemain       -(
0002AEB6 <AmiBlitz3.ab2@6567>   CMP.w #$28,D0
0002AEBA <AmiBlitz3.ab2@6568>    BNE.w JL_0_5F4E
0002AEBE <AmiBlitz3.ab2@6569>    BSR.w JL_0_5D3E
0002AEC2 <AmiBlitz3.ab2@6570>   CMP.w #$29,D0
0002AEC6 <AmiBlitz3.ab2@6571>    BNE.w syntaxerr
0002AEC8 <AmiBlitz3.ab2@6572>   MOVEQ.l #$04,D5
0002AEF4 <AmiBlitz3.ab2@6573>   !fget                                                    ;bsr.w get1bytemain
0002AEF6 <AmiBlitz3.ab2@6574> RTS
0002AEFA <AmiBlitz3.ab2@6578>   BSR.w JL_0_5D3E
0002AEFE <AmiBlitz3.ab2@6579>   CMP.w #$29,D0
0002AF02 <AmiBlitz3.ab2@6580>    BNE.w syntaxerr
0002AF2E <AmiBlitz3.ab2@6581>   !fget                                                    ;bsr.w get1bytemain
0002AF32 <AmiBlitz3.ab2@6582>   CMP.w #$2B,D0
0002AF36 <AmiBlitz3.ab2@6583>    BEQ.w JL_0_5E1A
0002AF38 <AmiBlitz3.ab2@6584>   MOVEQ.l #$02,D5
0002AF3A <AmiBlitz3.ab2@6585> RTS
0002AF3C <AmiBlitz3.ab2@6589>   MOVEQ.l #$03,D5
0002AF68 <AmiBlitz3.ab2@6590>   !fget                                                    ;bra.w get1bytemain
0002AF6A <AmiBlitz3.ab2@6591> RTS
0002AF6E <AmiBlitz3.ab2@6595>   ORI.w #$20,D0
0002AF70 <AmiBlitz3.ab2@6596>   MOVE.w D0,D1                                            
0002AF9C <AmiBlitz3.ab2@6597>    !fget                                                   ;bsr.w get1bytemain
0002AFA0 <AmiBlitz3.ab2@6598>   CMP.w #$64,D1
0002AFA4 <AmiBlitz3.ab2@6599>    BNE.w JL_0_5E6C
0002AFA8 <AmiBlitz3.ab2@6600>   CMP.w #$30,D0
0002AFAC <AmiBlitz3.ab2@6601>    BCS.w JL_0_5EAE
0002AFB0 <AmiBlitz3.ab2@6602>   CMP.w #$37,D0
0002AFB4 <AmiBlitz3.ab2@6603>    BHI.w JL_0_5EAE
0002AFB6 <AmiBlitz3.ab2@6604>   MOVE.w D0,D4
0002AFE2 <AmiBlitz3.ab2@6605>    !fget                                                   ;bsr.w get1bytemain
0002AFF4 <AmiBlitz3.ab2@6606>    !compare3                                               ;bsr.w JL_0_5FC0
0002AFF8 <AmiBlitz3.ab2@6607>    BEQ.w JL_0_5E64
0002AFFC <AmiBlitz3.ab2@6608>   CMP.w #$2D,D0
0002B000 <AmiBlitz3.ab2@6609>    BEQ.w JL_0_5D6A
0002B004 <AmiBlitz3.ab2@6610>   CMP.w #$2F,D0
0002B008 <AmiBlitz3.ab2@6611>    BEQ.w JL_0_5D6A
0002B00C <AmiBlitz3.ab2@6612> BRA.w JL_0_5EB8
0002B00E <AmiBlitz3.ab2@6615>   MOVEQ.l #$00,D5
0002B012 <AmiBlitz3.ab2@6616>   SUBI.w #$30,D4
0002B014 <AmiBlitz3.ab2@6617> RTS
0002B018 <AmiBlitz3.ab2@6620>    CMP.w #$61,D1
0002B01C <AmiBlitz3.ab2@6621>    BNE.w JL_0_5EAE
0002B020 <AmiBlitz3.ab2@6622>   CMP.w #$30,D0
0002B024 <AmiBlitz3.ab2@6623>    BCS.w JL_0_5EAE
0002B028 <AmiBlitz3.ab2@6624>   CMP.w #$37,D0
0002B02C <AmiBlitz3.ab2@6625>    BHI.w JL_0_5EAE
0002B02E <AmiBlitz3.ab2@6626>   MOVE.w D0,D4
0002B05A <AmiBlitz3.ab2@6627>    !fget                                                   ;bsr.w get1bytemain
0002B06C <AmiBlitz3.ab2@6628>    !compare3                                               ;bsr.w JL_0_5FC0
0002B070 <AmiBlitz3.ab2@6629>    BEQ.w JL_0_5EA6
0002B074 <AmiBlitz3.ab2@6630>   CMP.w #$2D,D0
0002B078 <AmiBlitz3.ab2@6631>    BEQ.w JL_0_5D68                                         ;movem
0002B07C <AmiBlitz3.ab2@6632>   CMP.w #$2F,D0
0002B080 <AmiBlitz3.ab2@6633>    BEQ.w JL_0_5D68
0002B084 <AmiBlitz3.ab2@6634> BRA.w JL_0_5EB8
0002B086 <AmiBlitz3.ab2@6637>   MOVEQ.l #1,d5
0002B08A <AmiBlitz3.ab2@6638>   SUBI.w #$30,D4
0002B08E <AmiBlitz3.ab2@6640> BRA 'l10
0002B090 <AmiBlitz3.ab2@6641>   ADDQ.w #8,d4
0002B092 <AmiBlitz3.ab2@6642>   MOVEQ #0,d5
0002B094 <AmiBlitz3.ab2@6643>   BSET d4,d5
0002B096 <AmiBlitz3.ab2@6644>   MOVE.w d5,d4
0002B098 <AmiBlitz3.ab2@6645>   MOVEQ.l #$0f,D5                                          ;01
0002B09A <AmiBlitz3.ab2@6648> RTS
0002B09E <AmiBlitz3.ab2@6652>   ORI.w #$20,D0
0002B0A0 <AmiBlitz3.ab2@6653>   MOVE.w D0,D4
0002B0CC <AmiBlitz3.ab2@6654>    !fget                                                   ;bsr.w get1bytemain
0002B0DE <AmiBlitz3.ab2@6657>   !compare3                                                ;bsr.w JL_0_5FC0
0002B0E2 <AmiBlitz3.ab2@6658>    BNE.w JL_0_5EF2
0002B0E6 <AmiBlitz3.ab2@6659>   CMP.w #$73,D1
0002B0EA <AmiBlitz3.ab2@6660>    BNE.w JL_0_5EF2
0002B0EE <AmiBlitz3.ab2@6661>   CMP.w #$70,D4
0002B0F2 <AmiBlitz3.ab2@6662>    BNE.w JL_0_5EDE
0002B104 <AmiBlitz3.ab2@6663>    !compare3                                               ;bsr.w JL_0_5FC0
0002B108 <AmiBlitz3.ab2@6664>    BNE.w JL_0_5F4E
0002B10A <AmiBlitz3.ab2@6665>   MOVEQ.l #$07,D4
0002B10C <AmiBlitz3.ab2@6666>   MOVEQ.l #$01,D5
0002B10E <AmiBlitz3.ab2@6667> RTS
0002B112 <AmiBlitz3.ab2@6671>   CMP.w #$72,D4
0002B116 <AmiBlitz3.ab2@6672>    BNE.w JL_0_5F4E
0002B128 <AmiBlitz3.ab2@6673>    !compare3                                               ;bsr.w JL_0_5FC0
0002B12C <AmiBlitz3.ab2@6674>    BNE.w JL_0_5F4E
0002B12E <AmiBlitz3.ab2@6675>   MOVEQ.l #$0D,D5
0002B130 <AmiBlitz3.ab2@6676> RTS
0002B134 <AmiBlitz3.ab2@6680>   ORI.w #$20,D0
0002B138 <AmiBlitz3.ab2@6681>   CMP.w #$63,D1
0002B13C <AmiBlitz3.ab2@6682>    BNE.w JL_0_5F22
0002B140 <AmiBlitz3.ab2@6683>   CMP.w #$63,D4
0002B144 <AmiBlitz3.ab2@6684>    BNE.w JL_0_5F4E
0002B148 <AmiBlitz3.ab2@6685>   CMP.w #$72,D0
0002B14C <AmiBlitz3.ab2@6686>    BNE.w JL_0_5F4E
0002B150 <AmiBlitz3.ab2@6687>    BSR.w get1bytemain                                      ;??wy not !fget
0002B154 <AmiBlitz3.ab2@6688>    BEQ.w JL_0_5F1E
0002B158 <AmiBlitz3.ab2@6689>   CMP.w #$2C,D0
0002B15C <AmiBlitz3.ab2@6690>    BNE.w JL_0_5F4E
0002B15E <AmiBlitz3.ab2@6693>   MOVEQ.l #$0C,D5
0002B160 <AmiBlitz3.ab2@6694> RTS
0002B164 <AmiBlitz3.ab2@6698>   CMP.w #$75,D1
0002B168 <AmiBlitz3.ab2@6699>    BNE.w JL_0_5F4E
0002B16C <AmiBlitz3.ab2@6700>   CMP.w #$73,D4
0002B170 <AmiBlitz3.ab2@6701>    BNE.w JL_0_5F4E
0002B174 <AmiBlitz3.ab2@6702>   CMP.w #$70,D0
0002B178 <AmiBlitz3.ab2@6703>    BNE.w JL_0_5F4E
0002B17C <AmiBlitz3.ab2@6704>    BSR.w get1bytemain                                      ;??wy not !fget
0002B180 <AmiBlitz3.ab2@6705>    BEQ.w JL_0_5F4A
0002B184 <AmiBlitz3.ab2@6706>   CMP.w #$2C,D0
0002B188 <AmiBlitz3.ab2@6707>    BNE.w JL_0_5F4E
0002B18A <AmiBlitz3.ab2@6710>   MOVEQ.l #$0E,D5
0002B18C <AmiBlitz3.ab2@6711> RTS
0002B18E <AmiBlitz3.ab2@6715>   MOVEA.l A4,A5
0002B192 <AmiBlitz3.ab2@6716>    BSR.w asmconst
0002B1A4 <AmiBlitz3.ab2@6717>    !compare3                                               ;bsr.w JL_0_5FC0
0002B1A8 <AmiBlitz3.ab2@6718>    BEQ.w JL_0_5FB8
0002B1AC <AmiBlitz3.ab2@6719>   CMP.w #$2E,D0
0002B1B0 <AmiBlitz3.ab2@6720>    BEQ.w JL_0_5FA0
0002B1B4 <AmiBlitz3.ab2@6721>   CMP.w #$28,D0
0002B1B8 <AmiBlitz3.ab2@6722>    BNE.w syntaxerr
0002B1BC <AmiBlitz3.ab2@6723>    BSR.w get1bytemain                                      ;??wy not !fget
0002B1C0 <AmiBlitz3.ab2@6724>   ORI.w #$20,D0
0002B1C4 <AmiBlitz3.ab2@6725>   CMP.w #$70,D0
0002B1C8 <AmiBlitz3.ab2@6726>    BNE.w JL_0_5F98
0002B1CC <AmiBlitz3.ab2@6727>    BSR.w get1bytemain                                      ;??wy not !fget
0002B1D0 <AmiBlitz3.ab2@6728>   ORI.w #$20,D0
0002B1D4 <AmiBlitz3.ab2@6729>   CMP.w #$63,D0
0002B1D8 <AmiBlitz3.ab2@6730>    BNE.w syntaxerr
0002B1DC <AmiBlitz3.ab2@6731>    BSR.w get1bytemain                                      ;??wy not !fget
0002B1E0 <AmiBlitz3.ab2@6732>    BSR.w JL_0_5FD4
0002B1E2 <AmiBlitz3.ab2@6733>   ADDQ.w #4,D5
0002B1E4 <AmiBlitz3.ab2@6734> RTS
0002B1E8 <AmiBlitz3.ab2@6738>   BSR.w JL_0_5D46
0002B1EC <AmiBlitz3.ab2@6739> BRA.w JL_0_5FD4
0002B1F0 <AmiBlitz3.ab2@6743>    BSR.w get1bytemain                                     ;??wy not !fget
0002B1F4 <AmiBlitz3.ab2@6744>   ORI.w #$20,D0
0002B1F8 <AmiBlitz3.ab2@6745>   CMP.w #$77,D0
0002B1FC <AmiBlitz3.ab2@6746>    BEQ.w JL_0_5FBC
0002B200 <AmiBlitz3.ab2@6747>   CMP.w #$6C,D0
0002B204 <AmiBlitz3.ab2@6748>    BNE.w syntaxerr
0002B206 <AmiBlitz3.ab2@6751>   MOVEQ.l #$08,D5
0002B208 <AmiBlitz3.ab2@6752> RTS
0002B20A <AmiBlitz3.ab2@6756>   MOVEQ.l #$07,D5
0002B20C <AmiBlitz3.ab2@6757> RTS
0002B20E <AmiBlitz3.ab2@6761>   TST.w D0
0002B212 <AmiBlitz3.ab2@6762>    BEQ.w JL_0_5FD2
0002B216 <AmiBlitz3.ab2@6763>   CMP.w #$3A,D0
0002B21A <AmiBlitz3.ab2@6764>    BEQ.w JL_0_5FD2
0002B21E <AmiBlitz3.ab2@6765>   CMP.w #$2C,D0
0002B220 <AmiBlitz3.ab2@6768> RTS
0002B224 <AmiBlitz3.ab2@6772>   CMP.w #$2C,D0
0002B228 <AmiBlitz3.ab2@6773>    BNE.w JL_0_6054
0002B22C <AmiBlitz3.ab2@6774>    BSR.w get1bytemain                                      ;??wy not !fget
0002B230 <AmiBlitz3.ab2@6775>   ORI.w #$20,D0
0002B232 <AmiBlitz3.ab2@6776>   MOVEQ.l #$00,D1
0002B236 <AmiBlitz3.ab2@6777>   CMP.w #$64,D0
0002B23A <AmiBlitz3.ab2@6778>    BEQ.w JL_0_5FFA
0002B23E <AmiBlitz3.ab2@6779>   CMP.w #$61,D0
0002B242 <AmiBlitz3.ab2@6780>    BNE.w syntaxerr
0002B246 <AmiBlitz3.ab2@6781>   BSET #$F,D1
0002B24A <AmiBlitz3.ab2@6784>    BSR.w get1bytemain                                      ;??wy not !fget
0002B24E <AmiBlitz3.ab2@6785>   SUBI.w #$30,D0
0002B252 <AmiBlitz3.ab2@6786>    BMI.w syntaxerr
0002B256 <AmiBlitz3.ab2@6787>   CMP.w #$7,D0
0002B25A <AmiBlitz3.ab2@6788>    BHI.w syntaxerr
0002B25C <AmiBlitz3.ab2@6789>   LSL.w #8,D0
0002B25E <AmiBlitz3.ab2@6790>   LSL.w #4,D0
0002B260 <AmiBlitz3.ab2@6791>   OR.w D0,D1
0002B264 <AmiBlitz3.ab2@6792>    BSR.w get1bytemain                                      ;??wy not !fget
0002B268 <AmiBlitz3.ab2@6793>   CMP.w #$2E,D0
0002B26C <AmiBlitz3.ab2@6794>    BNE.w JL_0_6040
0002B270 <AmiBlitz3.ab2@6795>    BSR.w get1bytemain                                      ;??wy not !fget
0002B274 <AmiBlitz3.ab2@6796>   ORI.w #$20,D0
0002B278 <AmiBlitz3.ab2@6797>   CMP.w #$77,D0
0002B27C <AmiBlitz3.ab2@6798>    BEQ.w JL_0_603C
0002B280 <AmiBlitz3.ab2@6799>   CMP.w #$6C,D0
0002B284 <AmiBlitz3.ab2@6800>    BNE.w syntaxerr
0002B288 <AmiBlitz3.ab2@6801>   BSET #$B,D1
0002B28C <AmiBlitz3.ab2@6804>    BSR.w get1bytemain                                      ;??wy not !fget
0002B290 <AmiBlitz3.ab2@6807>    CMP.b #"*",d0                                           ;020 * Mode
0002B294 <AmiBlitz3.ab2@6808>             BNE 'l1
0002B298 <AmiBlitz3.ab2@6809>             BSR.w get1bytemain                             ;??wy not !fget
0002B29C <AmiBlitz3.ab2@6810>             CMP.b #"2",d0
0002B2A0 <AmiBlitz3.ab2@6811>             BNE 'l2
0002B2A4 <AmiBlitz3.ab2@6812>             OR.w #$200,d1
0002B2A8 <AmiBlitz3.ab2@6813> BRA 'l1b
0002B2AC <AmiBlitz3.ab2@6816>             CMP.b #"4",d0
0002B2B0 <AmiBlitz3.ab2@6817>             BNE 'l3
0002B2B4 <AmiBlitz3.ab2@6818>             OR.w #$400,d1
0002B2B8 <AmiBlitz3.ab2@6819> BRA 'l1b
0002B2BC <AmiBlitz3.ab2@6822>             CMP.b #"8",d0
0002B2C0 <AmiBlitz3.ab2@6823>             BNE syntaxerr
0002B2C4 <AmiBlitz3.ab2@6824>             OR.w #$600,d1
0002B2C8 <AmiBlitz3.ab2@6827>         BSR.w get1bytemain                                 ;??wy not !fget
0002B2CC <AmiBlitz3.ab2@6830>   CMP.w #$29,D0
0002B2D0 <AmiBlitz3.ab2@6831>    BNE.w syntaxerr
0002B2D6 <AmiBlitz3.ab2@6832>   MOVE.w D1,extraword
0002B2D8 <AmiBlitz3.ab2@6833>   MOVEQ.l #$06,D5
0002B2DC <AmiBlitz3.ab2@6834> BRA.w get1bytemain                                         ;??wy not !fget
0002B2E0 <AmiBlitz3.ab2@6838>   CMP.w #$29,D0                                            ;")"
0002B2E4 <AmiBlitz3.ab2@6839>    BNE.w syntaxerr
0002B2E6 <AmiBlitz3.ab2@6840>   MOVEQ.l #$05,D5
0002B2EA <AmiBlitz3.ab2@6841> BRA.w get1bytemain                                         ;??wy not !fget
0002B2F0 <AmiBlitz3.ab2@6848>   MOVEA.l asmbuff,A0
0002B2F6 <AmiBlitz3.ab2@6849>   MOVE.w ininclude,D1
0002B2FC <AmiBlitz3.ab2@6850>   OR.w inmacro,D1
0002B2FE <AmiBlitz3.ab2@6851>   MOVE.w D1,(A0)+                                          ;flag!
0002B302 <AmiBlitz3.ab2@6852>    BNE.w copyconst
0002B304 <AmiBlitz3.ab2@6853>   MOVE.l A5,-(A7)
0002B308 <AmiBlitz3.ab2@6854>    BSR.w copyconst
0002B30E <AmiBlitz3.ab2@6855>   MOVEA.l asmbuff,A0
0002B312 <AmiBlitz3.ab2@6856>   CMP.w #$4,D1
0002B316 <AmiBlitz3.ab2@6857>    BLS.w asmconst__leave
0002B31C <AmiBlitz3.ab2@6858>   TST.w lc
0002B320 <AmiBlitz3.ab2@6859>    BNE.w asmconst__leave
0002B322 <AmiBlitz3.ab2@6860>   ADDQ.w #2,A0
0002B324 <AmiBlitz3.ab2@6861>   MOVE.l (A7)+,(A0)+
0002B326 <AmiBlitz3.ab2@6862>   CLR.b (A0)
0002B32E <AmiBlitz3.ab2@6863>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
0002B330 <AmiBlitz3.ab2@6864> RTS
0002B332 <AmiBlitz3.ab2@6868>   NOT.w (A0)
0002B334 <AmiBlitz3.ab2@6869>   ADDQ.w #4,A7
0002B336 <AmiBlitz3.ab2@6870> RTS
0002B338 <AmiBlitz3.ab2@6873> lc:  Ds.w 1
0002B33E <AmiBlitz3.ab2@6877>   CLR.w lc
0002B340 <AmiBlitz3.ab2@6878>   MOVEQ.l #$00,D1
0002B342 <AmiBlitz3.ab2@6881>    ADDQ.w #1,D1                                            ;label name
0002B36E <AmiBlitz3.ab2@6882>    !fget                                                   ;bsr.w get1bytemain
0002B372 <AmiBlitz3.ab2@6883>    BEQ.w copyconst__done
0002B376 <AmiBlitz3.ab2@6884>    CMP.w #$22,d0
0002B37A <AmiBlitz3.ab2@6885>    BNE.s copyconst__loop_l10
0002B380 <AmiBlitz3.ab2@6886>    NOT.w instringon
0002B384 <AmiBlitz3.ab2@6889>    CMP.w #":",d0
0002B388 <AmiBlitz3.ab2@6890>    BNE.s copyconst__loop_l11
0002B38E <AmiBlitz3.ab2@6891>    TST.w instringon
0002B392 <AmiBlitz3.ab2@6892>    BEQ copyconst__done
0002B394 <AmiBlitz3.ab2@6895>   TST.w D0
0002B398 <AmiBlitz3.ab2@6896>   BPL.w copyconst__notmi
0002B39A <AmiBlitz3.ab2@6897>   MOVE.w D0,-(A7)
0002B39C <AmiBlitz3.ab2@6898>   LSR.w #8,D0
0002B39E <AmiBlitz3.ab2@6899>   MOVE.b D0,(A0)+
0002B3A0 <AmiBlitz3.ab2@6900>   MOVE.w (A7)+,D0
0002B3A2 <AmiBlitz3.ab2@6901>   MOVE.b D0,(A0)+
0002B3A4 <AmiBlitz3.ab2@6902>   ADDQ.w #1,D1
0002B3A8 <AmiBlitz3.ab2@6903> BRA.s copyconst__loop
0002B3AE <AmiBlitz3.ab2@6906>    TST.w instringon
0002B3B2 <AmiBlitz3.ab2@6907>    BNE.w copyconst__putbyte
0002B3B8 <AmiBlitz3.ab2@6908>    TST.b _dcb
0002B3BC <AmiBlitz3.ab2@6909>    BNE copyconst__notmi_l10
0002B3C0 <AmiBlitz3.ab2@6910>    CMP.w #$28,D0
0002B3C4 <AmiBlitz3.ab2@6911>    BEQ.w copyconst__done
0002B3C8 <AmiBlitz3.ab2@6914>    CMP.w #$2C,D0
0002B3CC <AmiBlitz3.ab2@6915>    BEQ.w copyconst__done
0002B3D0 <AmiBlitz3.ab2@6916>    CMP.b #"'",D0
0002B3D4 <AmiBlitz3.ab2@6917>    BNE.w copyconst__putbyte
0002B3DA <AmiBlitz3.ab2@6918>    MOVE.w D0,lc                                     ;locallabels
0002B3DC <AmiBlitz3.ab2@6919>    MOVE.l A1,-(A7)
0002B3E2 <AmiBlitz3.ab2@6920>    LEA lastgloballabel,A1
0002B3E4 <AmiBlitz3.ab2@6921>    TST.b (A1)
0002B3E8 <AmiBlitz3.ab2@6922>    BEQ.w nolocerr
0002B3EA <AmiBlitz3.ab2@6925>   ADDQ.w #1,D1
0002B3EC <AmiBlitz3.ab2@6926>   MOVE.b (A1)+,(A0)+
0002B3F0 <AmiBlitz3.ab2@6927>    BNE.w copyconst__cloop
0002B3F2 <AmiBlitz3.ab2@6928>   SUBQ.w #1,D1
0002B3F4 <AmiBlitz3.ab2@6929>   SUBQ.w #1,A0
0002B3F6 <AmiBlitz3.ab2@6930>   MOVEA.l (A7)+,A1
0002B3F8 <AmiBlitz3.ab2@6933>   MOVE.b D0,(A0)+
0002B3FC <AmiBlitz3.ab2@6934> BRA.w copyconst__loop
0002B3FE <AmiBlitz3.ab2@6937>   CLR.b (A0)
0002B404 <AmiBlitz3.ab2@6938>   MOVE.w D1,asmlen2
0002B406 <AmiBlitz3.ab2@6939> RTS
0002B40C <AmiBlitz3.ab2@6944>   CMP.l #$80ad,d0
0002B410 <AmiBlitz3.ab2@6945>   BNE.s 'l12
0002B416 <AmiBlitz3.ab2@6946> JMP bssseg
0002B41C <AmiBlitz3.ab2@6949>   CMP.l #$807f,d0
0002B420 <AmiBlitz3.ab2@6950>     BNE.s 'l13
0002B426 <AmiBlitz3.ab2@6951> JMP chipseg
0002B42C <AmiBlitz3.ab2@6954>   ADDQ.l #1,destpointer                                    ;even
0002B434 <AmiBlitz3.ab2@6955>   BCLR #$0,destpointer+3
0002B438 <AmiBlitz3.ab2@6956>   SUBI.w #$803C,D0
0002B43A <AmiBlitz3.ab2@6957>   LSL.w #2,D0
0002B440 <AmiBlitz3.ab2@6958>   MOVEA.l #asmpnts,A0
0002B444 <AmiBlitz3.ab2@6959>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
0002B44A <AmiBlitz3.ab2@6960>   MOVE.w D0,temp1
0002B44C <AmiBlitz3.ab2@6961>   MOVE.l A0,-(A7)
0002B44E <AmiBlitz3.ab2@6962>   MOVEQ.l #$01,D1
0002B47A <AmiBlitz3.ab2@6963>    !fget                                                   ;bsr.w get1bytemain
0002B47E <AmiBlitz3.ab2@6964>   CMP.w #$2E,D0
0002B482 <AmiBlitz3.ab2@6965>    BNE.w JL_0_6184
0002B4AE <AmiBlitz3.ab2@6966>   !fget                                                    ;bsr.w get1bytemain
0002B4B2 <AmiBlitz3.ab2@6967>   ORI.w #$20,D0
0002B4B6 <AmiBlitz3.ab2@6968>   CMP.w #$77,D0                                            ;long
0002B4BA <AmiBlitz3.ab2@6969>    BEQ.w JL_0_618A
0002B4BE <AmiBlitz3.ab2@6970>   CMP.w #$62,D0                                            ;byte
0002B4C2 <AmiBlitz3.ab2@6971>    BEQ.w JL_0_617A
0002B4C6 <AmiBlitz3.ab2@6972>   CMP.w #$6C,D0                                            ;word
0002B4CA <AmiBlitz3.ab2@6973>    BEQ.w JL_0_6196
0002B4CE <AmiBlitz3.ab2@6974>   CMP.w #"s",d0
0002B4D2 <AmiBlitz3.ab2@6975>   BNE syntaxerr
0002B4D6 <AmiBlitz3.ab2@6976> BRA.w JL_0_617A
0002B4D8 <AmiBlitz3.ab2@6979>   MOVEQ.l #$00,D1
0002B4DC <AmiBlitz3.ab2@6980>   MOVE.w $8(A0),D0
0002B4E0 <AmiBlitz3.ab2@6981> BRA.w JL_0_619E
0002B4E2 <AmiBlitz3.ab2@6984>   MOVEQ.l #$04,D1
0002B4E6 <AmiBlitz3.ab2@6985> BRA.w JL_0_61AE
0002B4E8 <AmiBlitz3.ab2@6988>   MOVEQ.l #$04,D1
0002B4EC <AmiBlitz3.ab2@6989>   MOVE.w $8(A0),D0
0002B4EE <AmiBlitz3.ab2@6990>   LSR.w #4,D0
0002B4F2 <AmiBlitz3.ab2@6991> BRA.w JL_0_619E
0002B4F4 <AmiBlitz3.ab2@6994>   MOVEQ.l #$08,D1
0002B4F8 <AmiBlitz3.ab2@6995>   MOVE.w $8(A0),D0
0002B4FA <AmiBlitz3.ab2@6996>   LSR.w #8,D0
0002B4FE <AmiBlitz3.ab2@6999>    ANDI.w #$F,D0
0002B502 <AmiBlitz3.ab2@7000>   CMP.w #$F,D0
0002B506 <AmiBlitz3.ab2@7001>    BNE.w 'cl60
0002B50E <AmiBlitz3.ab2@7004>    CMP.l #"MULS",-6(a0)
0002B512 <AmiBlitz3.ab2@7005>    BNE 'c20
0002B518 <AmiBlitz3.ab2@7006>    MOVE.l #$4c000800,d1
0002B51E <AmiBlitz3.ab2@7007> JMP do32
0002B526 <AmiBlitz3.ab2@7010>    CMP.l #"MULU",-6(a0)
0002B52A <AmiBlitz3.ab2@7011>    BNE 'c30
0002B530 <AmiBlitz3.ab2@7012>    MOVE.l #$4c000000,d1
0002B536 <AmiBlitz3.ab2@7013> JMP do32
0002B53E <AmiBlitz3.ab2@7016>    CMP.l #"DIVS",-6(a0)
0002B542 <AmiBlitz3.ab2@7017>    BNE 'c40
0002B548 <AmiBlitz3.ab2@7018>    MOVE.l #$4c400800,d1
0002B54E <AmiBlitz3.ab2@7019> JMP do32
0002B556 <AmiBlitz3.ab2@7022>    CMP.l #"DIVU",-6(a0)
0002B55A <AmiBlitz3.ab2@7023>    BNE 'c50
0002B560 <AmiBlitz3.ab2@7024>    MOVE.l #$4c400000,d1
0002B566 <AmiBlitz3.ab2@7025> JMP do32
0002B56A <AmiBlitz3.ab2@7028> BRA illsizeerr
0002B596 <AmiBlitz3.ab2@7031>   !fget                                                    ;bsr.w get1bytemain
0002B59C <AmiBlitz3.ab2@7034>   MOVE.w D1,asmsize
0002B59E <AmiBlitz3.ab2@7035>   MOVEQ.l #-$01,D3
0002B5A2 <AmiBlitz3.ab2@7036>    BSR.w reget
0002B5A6 <AmiBlitz3.ab2@7037>    BEQ.w JL_0_6200
0002B5B0 <AmiBlitz3.ab2@7038>   MOVE.l #ptr_parameterstore,asmbuff
0002B5BA <AmiBlitz3.ab2@7040>    MOVE.w oldqflag,instringon
0002B5C0 <AmiBlitz3.ab2@7041>   MOVEA.l lastsourcepos,A5
0002B5C4 <AmiBlitz3.ab2@7042>    BSR.w JL_0_5DC2
0002B5C6 <AmiBlitz3.ab2@7043>   MOVE.l D4,D2                                             ;to src
0002B5C8 <AmiBlitz3.ab2@7044>   MOVE.l D5,D3
0002B5D2 <AmiBlitz3.ab2@7045>   MOVE.w asmlen2,asmlen
0002B5D4 <AmiBlitz3.ab2@7046>   MOVEQ.l #-$01,D5
0002B5DE <AmiBlitz3.ab2@7047>   MOVE.w extraword,extraword2
0002B5E2 <AmiBlitz3.ab2@7048>   CMP.w #$2C,D0                                            ;','
0002B5E6 <AmiBlitz3.ab2@7049>    BNE.w JL_0_6200
0002B5F0 <AmiBlitz3.ab2@7050>   MOVE.l #namebuff2,asmbuff
0002B5F4 <AmiBlitz3.ab2@7051>    BSR.w JL_0_5DC2                                         ;dest
0002B5F6 <AmiBlitz3.ab2@7054>   MOVEA.l (A7)+,A0
0002B5FC <AmiBlitz3.ab2@7055>   MOVEA.l destpointer,A1
0002B5FE <AmiBlitz3.ab2@7056>   MOVEA.l A1,A4
0002B600 <AmiBlitz3.ab2@7057>   ADDQ.w #2,A1
0002B602 <AmiBlitz3.ab2@7058>   MOVE.w (A0),D1
0002B604 <AmiBlitz3.ab2@7059>   TST.w D3
0002B608 <AmiBlitz3.ab2@7060>    BMI.w JL_0_639E
0002B60C <AmiBlitz3.ab2@7061>   MOVE.w $E(A0),D0
0002B610 <AmiBlitz3.ab2@7062>    BPL.w JL_0_6264
0002B614 <AmiBlitz3.ab2@7063>   BTST #$0,D0
0002B618 <AmiBlitz3.ab2@7064>    BEQ.w JL_0_6240
0002B61C <AmiBlitz3.ab2@7065>   CMP.w #$1,D5
0002B620 <AmiBlitz3.ab2@7066>    BNE.w JL_0_6240
0002B624 <AmiBlitz3.ab2@7067>   CMP.w #$E,D3
0002B628 <AmiBlitz3.ab2@7068>    BEQ.w JL_0_6264
0002B62E <AmiBlitz3.ab2@7069>   MOVE.w temp1,D0
0002B630 <AmiBlitz3.ab2@7070>   ADDQ.w #4,D0
0002B634 <AmiBlitz3.ab2@7071> BRA.w JL_0_6256
0002B638 <AmiBlitz3.ab2@7074>   BTST #$1,D0
0002B63C <AmiBlitz3.ab2@7075>    BEQ.w JL_0_6264
0002B640 <AmiBlitz3.ab2@7076>   CMP.w #$B,D3
0002B644 <AmiBlitz3.ab2@7077>    BNE.w JL_0_6264
0002B64A <AmiBlitz3.ab2@7078>   MOVE.w temp1,D0
0002B64C <AmiBlitz3.ab2@7081>   ADDQ.w #4,D0
0002B652 <AmiBlitz3.ab2@7082>   MOVEA.l #asmpnts,A0
0002B656 <AmiBlitz3.ab2@7083>   MOVEA.l $0(A0,D0.W),A0
0002B658 <AmiBlitz3.ab2@7084>   MOVE.w (A0),D1
0002B662 <AmiBlitz3.ab2@7087>   MOVE.l #ptr_parameterstore,buff1
0002B66C <AmiBlitz3.ab2@7088>   MOVE.l #namebuff2,buff2
0002B670 <AmiBlitz3.ab2@7089>   MOVE.l $A(A0),D0
0002B674 <AmiBlitz3.ab2@7090>    BEQ.w JL_0_62DC
0002B676 <AmiBlitz3.ab2@7091>   MOVEA.l D0,A3
0002B67C <AmiBlitz3.ab2@7092>   MOVE.w asmsize,D6
0002B67E <AmiBlitz3.ab2@7095>    JSR (A3)
0002B682 <AmiBlitz3.ab2@7096>    BPL.w JL_0_629A
0002B686 <AmiBlitz3.ab2@7097>   CMP.w #-$2,D0
0002B68A <AmiBlitz3.ab2@7098>    BEQ.w illsizeerr
0002B68E <AmiBlitz3.ab2@7099> BRA.w illeaerr
0002B692 <AmiBlitz3.ab2@7102>   BEQ.w JL_0_62DC
0002B694 <AmiBlitz3.ab2@7103>   EXG.l D2,D4
0002B696 <AmiBlitz3.ab2@7104>   EXG.l D3,D5
0002B69C <AmiBlitz3.ab2@7105>   MOVE.l extraword,D6
0002B69E <AmiBlitz3.ab2@7106>   SWAP D6
0002B6A4 <AmiBlitz3.ab2@7107>   MOVE.l D6,extraword
0002B6AE <AmiBlitz3.ab2@7108>   MOVE.l #namebuff2,buff1
0002B6B8 <AmiBlitz3.ab2@7109>   MOVE.l #ptr_parameterstore,buff2
0002B6BE <AmiBlitz3.ab2@7110>   MOVE.w asmlen,D6
0002B6C4 <AmiBlitz3.ab2@7111>   MOVE.w asmlen2,D7
0002B6CA <AmiBlitz3.ab2@7112>   MOVE.w D6,asmlen2
0002B6D0 <AmiBlitz3.ab2@7113>   MOVE.w D7,asmlen
0002B6DA <AmiBlitz3.ab2@7116>   MOVE.l buff1,asmbuff
0002B6DE <AmiBlitz3.ab2@7117>   MOVE.w $E(A0),D0
0002B6E2 <AmiBlitz3.ab2@7118>    BEQ.w JL_0_6348
0002B6E6 <AmiBlitz3.ab2@7119>    BMI.w JL_0_6348
0002B6EA <AmiBlitz3.ab2@7120>    CMP.w #$7000,d1
0002B6EE <AmiBlitz3.ab2@7121>    BNE 'skip
0002B6F2 <AmiBlitz3.ab2@7122>    CMP.w #$b,d3
0002B6F6 <AmiBlitz3.ab2@7123>    BNE illeaerr
0002B6FA <AmiBlitz3.ab2@7126>    CMP.w #$1,D0
0002B6FE <AmiBlitz3.ab2@7127>    BNE.w JL_0_630E
0002B702 <AmiBlitz3.ab2@7128>    CMP.w #$B,D3
0002B706 <AmiBlitz3.ab2@7129>    BNE.w JL_0_6348
0002B70A <AmiBlitz3.ab2@7132>    BSR.w insasm
0002B70C <AmiBlitz3.ab2@7133>   MOVE.w D4,D2
0002B70E <AmiBlitz3.ab2@7134>   MOVE.w D5,D3
0002B712 <AmiBlitz3.ab2@7135> BRA.w JL_0_6364
0002B716 <AmiBlitz3.ab2@7138>    CMP.w #$2,D0
0002B71A <AmiBlitz3.ab2@7139>    BNE.w JL_0_6324
0002B71E <AmiBlitz3.ab2@7140>   CMP.w #$8,D3
0002B722 <AmiBlitz3.ab2@7141>    BNE.w illeaerr
0002B724 <AmiBlitz3.ab2@7142>   MOVEQ.l #$09,D3
0002B728 <AmiBlitz3.ab2@7143> BRA.w JL_0_6348
0002B72C <AmiBlitz3.ab2@7146>    CMP.w #$3,D0
0002B730 <AmiBlitz3.ab2@7147>    BEQ.w JL_0_6302
0002B734 <AmiBlitz3.ab2@7148>   CMP.w #$4,D0
0002B738 <AmiBlitz3.ab2@7149>    BEQ.w JL_0_6302
0002B73C <AmiBlitz3.ab2@7150>   CMP.w #$5,D0
0002B740 <AmiBlitz3.ab2@7151>    BNE.w JL_0_6348
0002B744 <AmiBlitz3.ab2@7152>   CMP.w #$8,D5
0002B748 <AmiBlitz3.ab2@7153>    BNE.w illeaerr
0002B74A <AmiBlitz3.ab2@7154>   OR.w D2,D1
0002B74C <AmiBlitz3.ab2@7155>   MOVEQ.l #$09,D5
0002B750 <AmiBlitz3.ab2@7158>   MOVE.w $2(A0),D6
0002B754 <AmiBlitz3.ab2@7159>   MOVE.b $6(A0),D7
0002B758 <AmiBlitz3.ab2@7160>   MOVEM.l D4-D5,-(A7)
0002B75E <AmiBlitz3.ab2@7161>   MOVE.w extraword2,D4
0002B762 <AmiBlitz3.ab2@7162>    BSR.w doea
0002B766 <AmiBlitz3.ab2@7163>   MOVEM.l (A7)+,D2-D3
0002B768 <AmiBlitz3.ab2@7164>   TST.w D3
0002B76C <AmiBlitz3.ab2@7167>     BMI.w JL_0_6392
0002B772 <AmiBlitz3.ab2@7168>   MOVE.w extraword,D4
0002B776 <AmiBlitz3.ab2@7169>   MOVE.w $4(A0),D6
0002B77A <AmiBlitz3.ab2@7170>   MOVE.b $7(A0),D7
0002B784 <AmiBlitz3.ab2@7171>   MOVE.l buff2,asmbuff
0002B78E <AmiBlitz3.ab2@7172>   MOVE.w asmlen2,asmlen
0002B792 <AmiBlitz3.ab2@7173>    BSR.w doea
0002B796 <AmiBlitz3.ab2@7174> BRA.w JL_0_63AA
0002B79A <AmiBlitz3.ab2@7177>   MOVE.w $4(A0),D0
0002B79E <AmiBlitz3.ab2@7178>    BNE.w illeaerr
0002B7A2 <AmiBlitz3.ab2@7179> BRA.w JL_0_63AA
0002B7A6 <AmiBlitz3.ab2@7183>   MOVE.w $2(A0),D0
0002B7AA <AmiBlitz3.ab2@7184>   OR.w $4(A0),D0
0002B7AE <AmiBlitz3.ab2@7185>    BNE.w illeaerr
0002B7B2 <AmiBlitz3.ab2@7188>   MOVE.w $8(A0),D0
0002B7B6 <AmiBlitz3.ab2@7189>   ANDI.w #$F000,D0
0002B7BA <AmiBlitz3.ab2@7190>   CMP.w #-$1000,D0
0002B7BE <AmiBlitz3.ab2@7191>    BEQ.w JL_0_63D2
0002B7C0 <AmiBlitz3.ab2@7192>   LSR.w #8,D0
0002B7C2 <AmiBlitz3.ab2@7193>   LSR.w #4,D0
0002B7C6 <AmiBlitz3.ab2@7194>   MOVE.w $8(A0),D2
0002B7CC <AmiBlitz3.ab2@7195>   MOVE.w asmsize,D3
0002B7CE <AmiBlitz3.ab2@7196>   LSR.w D3,D2
0002B7D2 <AmiBlitz3.ab2@7197>   ANDI.w #$F,D2
0002B7D4 <AmiBlitz3.ab2@7198>   LSL.w D0,D2
0002B7D6 <AmiBlitz3.ab2@7199>   OR.w D2,D1
0002B7DC <AmiBlitz3.ab2@7202>   CMPA.l destbufferend,A4
0002B7E0 <AmiBlitz3.ab2@7203>    BCS.w JL_0_63E8
0002B7E8 <AmiBlitz3.ab2@7205>   MOVE.w #$FFFF,dontwrite
0002B7EC <AmiBlitz3.ab2@7206> BRA.w JL_0_63EA
0002B7EE <AmiBlitz3.ab2@7209>   MOVE.w D1,(A4)
0002B7F4 <AmiBlitz3.ab2@7212>   MOVE.l A1,destpointer
0002B7F6 <AmiBlitz3.ab2@7213> RTS
0002B7FC <AmiBlitz3.ab2@7217>   MOVE.l destpointer,-(A7)
0002B802 <AmiBlitz3.ab2@7218>   MOVE.l A1,destpointer
0002B806 <AmiBlitz3.ab2@7219>    BSR.w addoff
0002B80C <AmiBlitz3.ab2@7220>   MOVEA.l destpointer,A1
0002B812 <AmiBlitz3.ab2@7221>   MOVE.l (A7)+,destpointer
0002B814 <AmiBlitz3.ab2@7222> RTS
0002B818 <AmiBlitz3.ab2@7226>   MOVEM.l d2-d6,-(a7)
0002B81E <AmiBlitz3.ab2@7227>   JSR stripspaces
0002B822 <AmiBlitz3.ab2@7228>   CMP.b #"d",(a5)+
0002B826 <AmiBlitz3.ab2@7229>   BNE noreg
0002B828 <AmiBlitz3.ab2@7230>   MOVE.b (a5)+,d0
0002B82C <AmiBlitz3.ab2@7231>   CMP.b #$30,d0
0002B830 <AmiBlitz3.ab2@7232>   BLT noreg
0002B834 <AmiBlitz3.ab2@7233>   CMP.b #$37,d0
0002B838 <AmiBlitz3.ab2@7234>   BGT noreg
0002B83C <AmiBlitz3.ab2@7235>   SUB.b #$30,d0
0002B83E <AmiBlitz3.ab2@7236>   MOVEQ #0,d3
0002B840 <AmiBlitz3.ab2@7237>   MOVE.b d0,d3                                             ;reg1
0002B842 <AmiBlitz3.ab2@7238>   ASL.l #8,d3
0002B844 <AmiBlitz3.ab2@7239>   ASL.l #8,d3
0002B84A <AmiBlitz3.ab2@7240>   JSR stripspaces
0002B84E <AmiBlitz3.ab2@7241>   CMP.b #",",(a5)+
0002B852 <AmiBlitz3.ab2@7242>   BNE noreg
0002B858 <AmiBlitz3.ab2@7243>   JSR stripspaces
0002B85C <AmiBlitz3.ab2@7244>   CMP.b #"d",(a5)+
0002B860 <AmiBlitz3.ab2@7245>   BNE noreg
0002B862 <AmiBlitz3.ab2@7246>   MOVE.b (a5)+,d0
0002B866 <AmiBlitz3.ab2@7247>   CMP.b #$30,d0
0002B86A <AmiBlitz3.ab2@7248>   BLT noreg
0002B86E <AmiBlitz3.ab2@7249>   CMP.b #$37,d0
0002B872 <AmiBlitz3.ab2@7250>   BGT noreg
0002B876 <AmiBlitz3.ab2@7251>   SUB.b #$30,d0
0002B878 <AmiBlitz3.ab2@7252>   MOVEQ #0,d4
0002B87A <AmiBlitz3.ab2@7253>   MOVE.b d0,d4                                             ;reg2
0002B87C <AmiBlitz3.ab2@7254>   ASL.l #8,d4
0002B87E <AmiBlitz3.ab2@7255>   ASL.l #4,d4
0002B880 <AmiBlitz3.ab2@7256>   OR.b d0,d1
0002B882 <AmiBlitz3.ab2@7257>   OR.l d3,d1
0002B884 <AmiBlitz3.ab2@7258>   OR.l d4,d1
0002B88A <AmiBlitz3.ab2@7259>   JSR writelong
0002B88E <AmiBlitz3.ab2@7260>   MOVEM.l (a7)+,d2-d6
0002B892 <AmiBlitz3.ab2@7261>   MOVEM.l d1/a1-a3,-(a7)
0002B896 <AmiBlitz3.ab2@7262> BRA exit
0002B89A <AmiBlitz3.ab2@7266>   MOVEM.l (a7)+,d2-d6
0002B8A0 <AmiBlitz3.ab2@7267>   LEA errtext,a0
0002B8A2 <AmiBlitz3.ab2@7268>   MOVE.l a0,-(a7)
0002B8A8 <AmiBlitz3.ab2@7269> JMP handle_compileerror
0002B8AE <AmiBlitz3.ab2@7278>   MOVE.w dontwrite,D1
0002B8B2 <AmiBlitz3.ab2@7279>    BNE.w asmfixer__done
0002B8BA <AmiBlitz3.ab2@7280>   BTST #$7,make_smallestcode
0002B8BE <AmiBlitz3.ab2@7281>    BEQ.w asmfixer__go
0002B8C2 <AmiBlitz3.ab2@7282>   MOVE.w pass(PC),D1
0002B8C6 <AmiBlitz3.ab2@7283>    BEQ.w asmfixer__done
0002B8CC <AmiBlitz3.ab2@7286>   MOVEA.l templabel,A2                                     ;insert labels in Code
0002B8D4 <AmiBlitz3.ab2@7287>   MOVE.b #1,curtemplabel
0002B8DC <AmiBlitz3.ab2@7288>   MOVE.w #$FFFF,constmode
0002B8E2 <AmiBlitz3.ab2@7289>   CLR.w regnum
0002B8EC <AmiBlitz3.ab2@7290>           MOVE.l #forthstack,forthsp
0002B8F6 <AmiBlitz3.ab2@7291>           MOVE.l #precstack,precsp
0002B8FA <AmiBlitz3.ab2@7292>    BSR.w prepstack
0002B8FC <AmiBlitz3.ab2@7295>   MOVE.l A2,-(A7)
0002B900 <AmiBlitz3.ab2@7296>    BSR.w chkstop
0002B902 <AmiBlitz3.ab2@7297>   MOVEA.l (A7)+,A2
0002B906 <AmiBlitz3.ab2@7298>   CMPA.w #$0,A2
0002B90A <AmiBlitz3.ab2@7299>    BEQ.w asmfixer__done2
0002B910 <AmiBlitz3.ab2@7300>    CLR.b iee
0002B916 <AmiBlitz3.ab2@7301>   MOVE.l A2,asmbuff
0002B91A <AmiBlitz3.ab2@7302>   LEA $10(A2),A5
0002B91E <AmiBlitz3.ab2@7303>   TST.b $F(A2)
0002B922 <AmiBlitz3.ab2@7304>    BNE.w asmfixer__skipo
0002B924 <AmiBlitz3.ab2@7305>   MOVEA.l (A5),A5                                          ;pointer to real text
0002B92A <AmiBlitz3.ab2@7308>    CLR.w asmtype
0002B92E <AmiBlitz3.ab2@7309>    CMP.b #".",(a5)
0002B932 <AmiBlitz3.ab2@7310>    BNE.s asmfixer__skipo_l10
0002B934 <AmiBlitz3.ab2@7311>    MOVE.l a2,-(a7)
0002B936 <AmiBlitz3.ab2@7312>    ADDQ.l #1,a5
0002B93C <AmiBlitz3.ab2@7313>    LEA newtypebase,a2
0002B940 <AmiBlitz3.ab2@7314>    BSR getparameter2
0002B944 <AmiBlitz3.ab2@7315>    BEQ.w syntaxerr
0002B948 <AmiBlitz3.ab2@7316>    BSR findtype
0002B94C <AmiBlitz3.ab2@7317>    BNE.w notypeerr
0002B950 <AmiBlitz3.ab2@7318>    LEA $4(a2),a2
0002B954 <AmiBlitz3.ab2@7319>    BSR getparameter2
0002B958 <AmiBlitz3.ab2@7320>    BEQ.w syntaxerr
0002B95C <AmiBlitz3.ab2@7321>    BSR.w findvariable2
0002B960 <AmiBlitz3.ab2@7322>    BNE.w notypeerr
0002B964 <AmiBlitz3.ab2@7323>    MOVE.w $4(a2),d3
0002B966 <AmiBlitz3.ab2@7324>    EXT.l d3
0002B96A <AmiBlitz3.ab2@7325> BRA asmfixer__skipo_l30b
0002B96E <AmiBlitz3.ab2@7328>   CMP.b #"\",(a5)
0002B972 <AmiBlitz3.ab2@7329>     BNE asmfixer__skipo_l20
0002B974 <AmiBlitz3.ab2@7330>     ADDQ.l #1,a5
0002B976 <AmiBlitz3.ab2@7331>    MOVE.l a2,-(a7)
0002B978 <AmiBlitz3.ab2@7332>    MOVE.l a5,a4
0002B97E <AmiBlitz3.ab2@7333>    LEA usedpath,a5
0002B982 <AmiBlitz3.ab2@7334>    CMP.b #"*",(a5)
0002B986 <AmiBlitz3.ab2@7335>    BNE asmfixer__skipo_lm1
0002B988 <AmiBlitz3.ab2@7336>    ADDQ.l #1,a5
0002B98C <AmiBlitz3.ab2@7339>    BSR.w getparameter2
0002B990 <AmiBlitz3.ab2@7340>    BEQ.w syntaxerr
0002B996 <AmiBlitz3.ab2@7341>    LEA varbase,A2
0002B99E <AmiBlitz3.ab2@7342>    MOVE.b #1,newvariable
0002B9A2 <AmiBlitz3.ab2@7343>    BSR.w findvariable
0002B9A8 <AmiBlitz3.ab2@7344>    CLR.b newvariable
0002B9AE <AmiBlitz3.ab2@7345>    CMP.l #-1,d0
0002B9B2 <AmiBlitz3.ab2@7346>    BEQ.w notypeerr
0002B9B4 <AmiBlitz3.ab2@7347>    MOVE.l a4,a5
0002B9B8 <AmiBlitz3.ab2@7348>    MOVE.l $a(a2),a2
0002B9BC <AmiBlitz3.ab2@7349>    LEA $4(a2),a2
0002B9C0 <AmiBlitz3.ab2@7350>    BSR getparameter2
0002B9C4 <AmiBlitz3.ab2@7351>    BEQ.w syntaxerr
0002B9C8 <AmiBlitz3.ab2@7352>    BSR.w findvariable2
0002B9CC <AmiBlitz3.ab2@7353>    BNE.w notypeerr
0002B9D0 <AmiBlitz3.ab2@7354>   MOVE.w $4(A2),D3
0002B9D2 <AmiBlitz3.ab2@7355>   EXT.l D3
0002B9D8 <AmiBlitz3.ab2@7358>    CMP.b #"[",-1(a5)
0002B9DC <AmiBlitz3.ab2@7359>    BNE asmfixer__skipo_l30c
0002B9DE <AmiBlitz3.ab2@7360>    MOVEQ #0,d0
0002B9E0 <AmiBlitz3.ab2@7361>    MOVE.b (a5)+,d0
0002B9E2 <AmiBlitz3.ab2@7362>    MOVE.l d3,-(a7)
0002B9E4 <AmiBlitz3.ab2@7363>    MOVEQ #0,d3
0002B9EA <AmiBlitz3.ab2@7364>    JSR atoi
0002B9EC <AmiBlitz3.ab2@7365>    MOVE.l (a7)+,d1
0002B9F0 <AmiBlitz3.ab2@7366>    MOVE.l $a(a2),a2
0002B9F4 <AmiBlitz3.ab2@7367>    MOVE.w 8(a2),d0
0002B9F6 <AmiBlitz3.ab2@7368>    MULS d0,d3
0002B9F8 <AmiBlitz3.ab2@7369>    ADD.l d1,d3
0002B9FA <AmiBlitz3.ab2@7372>   MOVE.l (a7)+,a2
0002B9FE <AmiBlitz3.ab2@7373> BRA asmfixer__oko
0002BA04 <AmiBlitz3.ab2@7376>   CMP.w #$c,$8(a2)
0002BA08 <AmiBlitz3.ab2@7377>      BEQ asmfixer__skipo_lf1
0002BA0E <AmiBlitz3.ab2@7378>      CMP.w #$d,$8(a2)
0002BA12 <AmiBlitz3.ab2@7379>      BEQ asmfixer__skipo_lf1
0002BA18 <AmiBlitz3.ab2@7382>   JSR AJL_0_BF6E
0002BA1E <AmiBlitz3.ab2@7385>   MOVEA.l asmbuff,A2
0002BA22 <AmiBlitz3.ab2@7386>    BEQ.w asmfixer__oko
0002BA26 <AmiBlitz3.ab2@7387>   CMP.w #$28,D0
0002BA2A <AmiBlitz3.ab2@7388>    BEQ.w asmfixer__oko
0002BA2E <AmiBlitz3.ab2@7389>   CMP.w #$2C,D0
0002BA32 <AmiBlitz3.ab2@7390>    BEQ.w asmfixer__oko
0002BA36 <AmiBlitz3.ab2@7391> BRA.w syntaxerr
0002BA3E <AmiBlitz3.ab2@7394>   MOVE.b #1,iee
0002BA42 <AmiBlitz3.ab2@7395> BRA asmfixer__skipo_lf2
0002BA46 <AmiBlitz3.ab2@7398>   MOVEA.l $4(A2),A1
0002BA4A <AmiBlitz3.ab2@7400>   MOVE.w $8(A2),D1                                         ;labelmode
0002BA4E <AmiBlitz3.ab2@7401>   CMP.w #$5,D1
0002BA52 <AmiBlitz3.ab2@7402>    BNE.w asmfixer__notdan
0002BA56 <AmiBlitz3.ab2@7405>    BSR.w chkword                                         ;word
0002BA58 <AmiBlitz3.ab2@7408>   MOVE.w D3,(A1)
0002BA5C <AmiBlitz3.ab2@7409> BRA.w asmfixer__next
0002BA60 <AmiBlitz3.ab2@7412>   CMP.w #$6,D1
0002BA64 <AmiBlitz3.ab2@7413>    BNE.w asmfixer__notdanxi
0002BA68 <AmiBlitz3.ab2@7416>    BSR.w chkbyte                                         ;byte
0002BA6C <AmiBlitz3.ab2@7419>   MOVE.b D3,$1(A1)
0002BA70 <AmiBlitz3.ab2@7420> BRA.w asmfixer__next
0002BA74 <AmiBlitz3.ab2@7423>    CMP.w #$11,D1                                           ;byte
0002BA78 <AmiBlitz3.ab2@7424>    BEQ.w asmfixer__isbyte2
0002BA7C <AmiBlitz3.ab2@7425>    CMP.w #$c,d1
0002BA80 <AmiBlitz3.ab2@7426>    BEQ asmfixer__single1
0002BA84 <AmiBlitz3.ab2@7427>    CMP.w #$d,d1
0002BA88 <AmiBlitz3.ab2@7428>    BEQ asmfixer__double1
0002BA8C <AmiBlitz3.ab2@7429>   CMP.w #$7,D1
0002BA90 <AmiBlitz3.ab2@7430>    BEQ.w asmfixer__word                                    ;word
0002BA94 <AmiBlitz3.ab2@7431>   CMP.w #$8,D1
0002BA98 <AmiBlitz3.ab2@7432>    BNE.w asmfixer__notabsl
0002BA9E <AmiBlitz3.ab2@7435>   MOVE.w asmtype,D1                                        ;long
0002BAA2 <AmiBlitz3.ab2@7436>    BEQ.w asmfixer__notpcrel
0002BAA6 <AmiBlitz3.ab2@7437>      BSR.w asmoff
0002BAA8 <AmiBlitz3.ab2@7440>   MOVE.l D3,(A1)
0002BAAC <AmiBlitz3.ab2@7441> BRA.w asmfixer__next
0002BAB2 <AmiBlitz3.ab2@7445>   fmove.s fp0,0(a1)
0002BAB6 <AmiBlitz3.ab2@7446> BRA.w asmfixer__next
0002BABC <AmiBlitz3.ab2@7450>   fmove.d fp0,0(a1)
0002BAC0 <AmiBlitz3.ab2@7451> BRA.w asmfixer__next
0002BAC4 <AmiBlitz3.ab2@7455>   CMP.w #$9,D1
0002BAC8 <AmiBlitz3.ab2@7456>    BNE.w asmfixer__notdpc
0002BACA <AmiBlitz3.ab2@7457>   SUB.l A1,D3                                              ;branchword
0002BACE <AmiBlitz3.ab2@7458>    BSR.w chkword
0002BAD0 <AmiBlitz3.ab2@7459>   MOVE.w D3,(A1)
0002BAD4 <AmiBlitz3.ab2@7460> BRA.w asmfixer__next
0002BAD8 <AmiBlitz3.ab2@7464>   CMP.w #$A,D1
0002BADC <AmiBlitz3.ab2@7465>    BNE.w asmfixer__imm
0002BADE <AmiBlitz3.ab2@7466>   SUB.l A1,D3                                              ;branchbyte
0002BAE2 <AmiBlitz3.ab2@7467> BRA.w asmfixer__isbyte
0002BAE6 <AmiBlitz3.ab2@7471>   CMP.w #$11,d1
0002BAEA <AmiBlitz3.ab2@7472>   BLE asmfixer__imm_org
0002BAEC <AmiBlitz3.ab2@7473>   MOVE.l a3,-(a7)
0002BAF2 <AmiBlitz3.ab2@7474>   LEA pluginbase,a3
0002BAF6 <AmiBlitz3.ab2@7475>   MOVE.l 8(a2),a0
0002BAF8 <AmiBlitz3.ab2@7476>   JSR (a0)                                                 ;hook
0002BAFA <AmiBlitz3.ab2@7477>   MOVE.l (a7)+,a3
0002BAFE <AmiBlitz3.ab2@7478> BRA asmfixer__next
0002BB02 <AmiBlitz3.ab2@7481>   MOVE.w $A(A2),D0
0002BB06 <AmiBlitz3.ab2@7482>    BEQ.w asmfixer__noflag
0002BB0A <AmiBlitz3.ab2@7483>   CMP.w #$1,D0
0002BB0E <AmiBlitz3.ab2@7484>    BEQ.w asmfixer__tocount
0002BB12 <AmiBlitz3.ab2@7485>   CMP.w #$3,D0
0002BB16 <AmiBlitz3.ab2@7486>    BEQ.w asmfixer__tomoveq
0002BB1A <AmiBlitz3.ab2@7487>   CMP.w #$4,D0
0002BB1E <AmiBlitz3.ab2@7488>    BEQ.w asmfixer__totrap
0002BB22 <AmiBlitz3.ab2@7491>   CMP.w #$B,D1                                             ;long
0002BB26 <AmiBlitz3.ab2@7492>    BEQ.w asmfixer__isabsl
0002BB2A <AmiBlitz3.ab2@7493> BRA asmfixer__word2                                              ;word
0002BB30 <AmiBlitz3.ab2@7496>   CMP.l #$F,D3
0002BB34 <AmiBlitz3.ab2@7497>    BHI.w illtraperr
0002BB36 <AmiBlitz3.ab2@7498>   OR.b D3,-(A1)
0002BB3A <AmiBlitz3.ab2@7499> BRA.w asmfixer__next
0002BB40 <AmiBlitz3.ab2@7502>   CMP.l #$8,D3
0002BB44 <AmiBlitz3.ab2@7503>    BHI.w illimmerr
0002BB46 <AmiBlitz3.ab2@7504>   TST.l D3
0002BB4A <AmiBlitz3.ab2@7505>    BEQ.w illimmerr
0002BB4E <AmiBlitz3.ab2@7506>   ANDI.w #$7,D3
0002BB50 <AmiBlitz3.ab2@7507>   LSL.w #8,D3
0002BB52 <AmiBlitz3.ab2@7508>   LSL.w #1,D3
0002BB54 <AmiBlitz3.ab2@7509>   OR.w D3,-(A1)
0002BB58 <AmiBlitz3.ab2@7510> BRA.w asmfixer__next
0002BB5C <AmiBlitz3.ab2@7513>    BSR.w chkbyte
0002BB5E <AmiBlitz3.ab2@7514>   MOVE.b D3,-(A1)
0002BB60 <AmiBlitz3.ab2@7517>   MOVEA.l (A2),A2
0002BB64 <AmiBlitz3.ab2@7518> BRA.w asmfixer__loop
0002BB6A <AmiBlitz3.ab2@7521>   CLR.w constmode
0002BB70 <AmiBlitz3.ab2@7524>   CLR.b curtemplabel
0002BB72 <AmiBlitz3.ab2@7525> RTS
0002BB74 <AmiBlitz3.ab2@7534>   BTST D3,D6
0002BB78 <AmiBlitz3.ab2@7535>    BEQ.w illeaerr
0002BB7C <AmiBlitz3.ab2@7536>    BSR.w makemode
0002BB80 <AmiBlitz3.ab2@7537>   CMP.w #$7,D3
0002BB84 <AmiBlitz3.ab2@7538>    BCS.w doea__skip
0002BB86 <AmiBlitz3.ab2@7539>   MOVE.w D3,D2
0002BB88 <AmiBlitz3.ab2@7540>   SUBQ.w #7,D2
0002BB8C <AmiBlitz3.ab2@7541>   CMP.w #$5,D2
0002BB90 <AmiBlitz3.ab2@7542>    BCS.w doea__skip0
0002BB92 <AmiBlitz3.ab2@7543>   MOVEQ.l #$04,D2
0002BB94 <AmiBlitz3.ab2@7546>   MOVEQ.l #$07,D3
0002BB96 <AmiBlitz3.ab2@7549>   MOVE.b D7,D0
0002BB9A <AmiBlitz3.ab2@7550>   ANDI.w #$F,D0
0002BB9E <AmiBlitz3.ab2@7551>   CMP.w #$F,D0
0002BBA2 <AmiBlitz3.ab2@7552>    BEQ.w doea__skip2
0002BBA4 <AmiBlitz3.ab2@7553>   LSL.w D0,D3
0002BBA6 <AmiBlitz3.ab2@7554>   OR.w D3,D1
0002BBA8 <AmiBlitz3.ab2@7557>   LSR.w #4,D7
0002BBAC <AmiBlitz3.ab2@7558>   ANDI.w #$F,D7
0002BBB0 <AmiBlitz3.ab2@7559>   CMP.w #$F,D7
0002BBB4 <AmiBlitz3.ab2@7560>    BEQ.w doea__skip3
0002BBB6 <AmiBlitz3.ab2@7561>   LSL.w D7,D2
0002BBB8 <AmiBlitz3.ab2@7562>   OR.w D2,D1
0002BBBA <AmiBlitz3.ab2@7565> RTS
0002BBC0 <AmiBlitz3.ab2@7569>   CMP.l #$7F,D3
0002BBC4 <AmiBlitz3.ab2@7570>    BGT.w illdiserr
0002BBCA <AmiBlitz3.ab2@7571>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
0002BBCE <AmiBlitz3.ab2@7572>    BLT.w illdiserr
0002BBD0 <AmiBlitz3.ab2@7573> RTS
0002BBD6 <AmiBlitz3.ab2@7577>   CMP.l #$7fff,D3
0002BBDA <AmiBlitz3.ab2@7578>    BGT.w illdiserr
0002BBE0 <AmiBlitz3.ab2@7579>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
0002BBE4 <AmiBlitz3.ab2@7580>    BLT.w illdiserr
0002BBE6 <AmiBlitz3.ab2@7581> RTS
0002BBE8 <AmiBlitz3.ab2@7586>   MOVE.b (a5)+,d0
0002BBEA <AmiBlitz3.ab2@7587>   CMP.b d1,d0
0002BBEE <AmiBlitz3.ab2@7588>   BEQ 'll10
0002BBF0 <AmiBlitz3.ab2@7589>   TST.b d0
0002BBF4 <AmiBlitz3.ab2@7590>   BNE 'll20
0002BBF6 <AmiBlitz3.ab2@7593>   SUBQ #1,a5
0002BBF8 <AmiBlitz3.ab2@7594> RTS
0002BBFA <AmiBlitz3.ab2@7599>   MOVE.b (a5)+,d0
0002BBFE <AmiBlitz3.ab2@7600>   CMP.b #",",d0
0002BC02 <AmiBlitz3.ab2@7601>   BEQ 'll10
0002BC06 <AmiBlitz3.ab2@7602>   CMP.b #";",d0
0002BC0A <AmiBlitz3.ab2@7603>   BEQ 'll10
0002BC0E <AmiBlitz3.ab2@7604>  CMP.b #":",d0
0002BC12 <AmiBlitz3.ab2@7605>   BEQ 'll10
0002BC14 <AmiBlitz3.ab2@7608>   TST.b d0
0002BC18 <AmiBlitz3.ab2@7609>   BNE 'll20
0002BC1A <AmiBlitz3.ab2@7612>   SUBQ #1,a5
0002BC1C <AmiBlitz3.ab2@7613> RTS
0002BC1E <AmiBlitz3.ab2@7617>   ADD.l a2,d1
0002BC24 <AmiBlitz3.ab2@7618>   LEA tempspace,a1
0002BC26 <AmiBlitz3.ab2@7619>   MOVE.l d1,a0
0002BC28 <AmiBlitz3.ab2@7622>   MOVE.b (a0)+,(a1)+
0002BC2C <AmiBlitz3.ab2@7623>   BNE.s 'l10
0002BC2E <AmiBlitz3.ab2@7624>   SUBQ.l #1,a0
0002BC30 <AmiBlitz3.ab2@7625>   SUBQ.l #1,a1
0002BC32 <AmiBlitz3.ab2@7628>   MOVE.b (a5)+,(a1)+
0002BC36 <AmiBlitz3.ab2@7629>   BNE.s 'l20
0002BC38 <AmiBlitz3.ab2@7630>   CLR.b (a1)
0002BC3E <AmiBlitz3.ab2@7631>   LEA tempspace,a5
0002BC40 <AmiBlitz3.ab2@7632> RTS
0002BC44 <AmiBlitz3.ab2@7636>   MOVEM.l D1-D2/A0,-(A7)
0002BC46 <AmiBlitz3.ab2@7637>   MOVE.l d0,d2
0002BC48 <AmiBlitz3.ab2@7638>   MOVEQ #0,d1
0002BC4A <AmiBlitz3.ab2@7639>   MOVE.l a5,a4
0002BC4C <AmiBlitz3.ab2@7642>   ADDQ.l #1,d1
0002BC4E <AmiBlitz3.ab2@7643>   MOVE.b (a5)+,d0
0002BC52 <AmiBlitz3.ab2@7644>   CMP.b #",",d0
0002BC56 <AmiBlitz3.ab2@7645>   BEQ 'll10
0002BC5A <AmiBlitz3.ab2@7646>   CMP.b #";",d0
0002BC5E <AmiBlitz3.ab2@7647>   BEQ 'll10
0002BC62 <AmiBlitz3.ab2@7648>   CMP.b #":",d0
0002BC66 <AmiBlitz3.ab2@7649>   BEQ 'll10
0002BC6A <AmiBlitz3.ab2@7650>   CMP.b #"(",d0
0002BC6E <AmiBlitz3.ab2@7651>   BEQ 'll10
0002BC70 <AmiBlitz3.ab2@7652>   TST.b d0
0002BC74 <AmiBlitz3.ab2@7653>   BNE 'll20
0002BC76 <AmiBlitz3.ab2@7656>   SUBQ #1,a5
0002BC7A <AmiBlitz3.ab2@7657>   CMP.b #"'",(a4)
0002BC7E <AmiBlitz3.ab2@7658>   BEQ 'llocal
0002BC84 <AmiBlitz3.ab2@7659>   TST.w inmacro
0002BC88 <AmiBlitz3.ab2@7660>   BNE 'lmacro
0002BC8A <AmiBlitz3.ab2@7661>   MOVEQ.l #$14+4,D0
0002BC8C <AmiBlitz3.ab2@7662>   ADD.l d1,d0
0002BC8E <AmiBlitz3.ab2@7663>   MOVE.l d1,-(a7)
0002BC90 <AmiBlitz3.ab2@7664>   MOVEQ.l #$01,D1
0002BC96 <AmiBlitz3.ab2@7665>   MOVEA.l _execbase,A6
0002BC9C <AmiBlitz3.ab2@7666>   MOVE.l mempool2,a0
0002BCA0 <AmiBlitz3.ab2@7667>   JSR _AllocPooled(a6)
0002BCA2 <AmiBlitz3.ab2@7669>   MOVE.l (a7)+,d1
0002BCA4 <AmiBlitz3.ab2@7670>   TST.l d0
0002BCA8 <AmiBlitz3.ab2@7671>   BEQ nomemory
0002BCAA <AmiBlitz3.ab2@7672>   MOVEA.l D0,A0
0002BCB2 <AmiBlitz3.ab2@7674>   MOVE.w linenumat+2,$A(A0)
0002BCB8 <AmiBlitz3.ab2@7676>   MOVE.l templabel,(A0)
0002BCBE <AmiBlitz3.ab2@7677>   MOVE.l A0,templabel
0002BCC6 <AmiBlitz3.ab2@7678>   MOVE.l destpointer,$4(A0)
0002BCCA <AmiBlitz3.ab2@7679>   MOVE.l d2,$8(A0)
0002BCCE <AmiBlitz3.ab2@7680>   LEA $E(A0),A0
0002BCD2 <AmiBlitz3.ab2@7681>   MOVE.b #$14,(A0)+
0002BCD4 <AmiBlitz3.ab2@7682>   CLR.b (a0)+
0002BCD6 <AmiBlitz3.ab2@7684>   MOVE.l a0,d2
0002BCD8 <AmiBlitz3.ab2@7685>   ADDQ.l #4,d2
0002BCDA <AmiBlitz3.ab2@7686>   MOVE.l d2,(a0)+
0002BCDC <AmiBlitz3.ab2@7689>   MOVE.b (a4)+,(a0)+
0002BCDE <AmiBlitz3.ab2@7690>   SUBQ.l #1,d1
0002BCE2 <AmiBlitz3.ab2@7691>   BNE 'lc1
0002BCE4 <AmiBlitz3.ab2@7692>   CLR.b (a0)+
0002BCEA <AmiBlitz3.ab2@7693>   MOVE.w linenumat,(a0)
0002BCEE <AmiBlitz3.ab2@7694>   MOVEM.l (A7)+,D1-D2/A0
0002BCF0 <AmiBlitz3.ab2@7695> RTS
0002BCF2 <AmiBlitz3.ab2@7698>   MOVEQ.l #$10+2,D0
0002BCF4 <AmiBlitz3.ab2@7699>   ADD.l d1,d0
0002BCF8 <AmiBlitz3.ab2@7700>   MOVEM.l a4/d3,-(a7)
0002BCFA <AmiBlitz3.ab2@7701>   MOVE.l d1,d3
0002BCFC <AmiBlitz3.ab2@7702>   MOVEQ.l #$01,D1
0002BD02 <AmiBlitz3.ab2@7703>   MOVEA.l _execbase,A6
0002BD08 <AmiBlitz3.ab2@7704>   MOVE.l mempool2,a0
0002BD0C <AmiBlitz3.ab2@7705>   JSR _AllocPooled(a6)
0002BD0E <AmiBlitz3.ab2@7707>   TST.l d0
0002BD12 <AmiBlitz3.ab2@7708>   BEQ nomemory
0002BD14 <AmiBlitz3.ab2@7709>   MOVEA.l D0,A0
0002BD1C <AmiBlitz3.ab2@7712>   MOVE.w linenumat+2,$C(A0)
0002BD22 <AmiBlitz3.ab2@7713>   MOVE.l templabel,(A0)
0002BD28 <AmiBlitz3.ab2@7714>   MOVE.l A0,templabel
0002BD30 <AmiBlitz3.ab2@7715>   MOVE.l destpointer,$4(A0)
0002BD34 <AmiBlitz3.ab2@7716>   MOVE.l d2,$8(A0)
0002BD38 <AmiBlitz3.ab2@7717>   LEA $E(A0),A0
0002BD3A <AmiBlitz3.ab2@7718>   MOVE.b d3,(A0)+
0002BD40 <AmiBlitz3.ab2@7719>   ADD.b #$10,-1(a0)
0002BD44 <AmiBlitz3.ab2@7720>   MOVE.b #$1,(a0)+
0002BD46 <AmiBlitz3.ab2@7721>   SUBQ.w #1,d3
0002BD48 <AmiBlitz3.ab2@7724>   MOVE.b (a4)+,(a0)+
0002BD4A <AmiBlitz3.ab2@7725>   SUBQ.l #1,d3
0002BD4E <AmiBlitz3.ab2@7726>   BNE.s 'lm2
0002BD50 <AmiBlitz3.ab2@7727>   CLR.b (a0)+
0002BD56 <AmiBlitz3.ab2@7728>   MOVE.w linenumat,(a0)
0002BD5A <AmiBlitz3.ab2@7729>   MOVEM.l (a7)+,d3/a4
0002BD5E <AmiBlitz3.ab2@7730>   MOVEM.l (A7)+,D1-D2/A0
0002BD60 <AmiBlitz3.ab2@7731> RTS
0002BD66 <AmiBlitz3.ab2@7734>   LEA lastgloballabel,a1
0002BD68 <AmiBlitz3.ab2@7737>   ADDQ.l #1,d1
0002BD6A <AmiBlitz3.ab2@7738>   TST.b (a1)+
0002BD6E <AmiBlitz3.ab2@7739>   BNE.s 'll11
0002BD70 <AmiBlitz3.ab2@7740>   MOVEQ.l #$10+2,D0
0002BD72 <AmiBlitz3.ab2@7741>   ADD.l d1,d0
0002BD76 <AmiBlitz3.ab2@7742>   MOVEM.l a4/d3,-(a7)
0002BD78 <AmiBlitz3.ab2@7743>   MOVE.l d1,d3
0002BD7A <AmiBlitz3.ab2@7744>   MOVEQ.l #$01,D1
0002BD80 <AmiBlitz3.ab2@7745>   MOVEA.l _execbase,A6
0002BD86 <AmiBlitz3.ab2@7746>   MOVE.l mempool2,a0
0002BD8A <AmiBlitz3.ab2@7747>   JSR _AllocPooled(a6)
0002BD8C <AmiBlitz3.ab2@7749>   TST.l d0
0002BD90 <AmiBlitz3.ab2@7750>   BEQ nomemory
0002BD92 <AmiBlitz3.ab2@7751>   MOVEA.l D0,A0
0002BD9A <AmiBlitz3.ab2@7754>   MOVE.w linenumat+2,$C(A0)
0002BDA0 <AmiBlitz3.ab2@7755>   MOVE.l templabel,(A0)
0002BDA6 <AmiBlitz3.ab2@7756>   MOVE.l A0,templabel
0002BDAE <AmiBlitz3.ab2@7757>   MOVE.l destpointer,$4(A0)
0002BDB2 <AmiBlitz3.ab2@7758>   MOVE.l d2,$8(A0)
0002BDB6 <AmiBlitz3.ab2@7759>   LEA $E(A0),A0
0002BDB8 <AmiBlitz3.ab2@7760>   MOVE.b d3,(A0)+
0002BDBE <AmiBlitz3.ab2@7761>   ADD.b #$10,-1(a0)
0002BDC2 <AmiBlitz3.ab2@7762>   MOVE.b #$1,(a0)+
0002BDC4 <AmiBlitz3.ab2@7763>   SUBQ.w #1,d3
0002BDCA <AmiBlitz3.ab2@7764>   LEA lastgloballabel,a1
0002BDCC <AmiBlitz3.ab2@7767>   SUBQ.l #1,d3
0002BDCE <AmiBlitz3.ab2@7768>   MOVE.b (a1)+,(a0)+
0002BDD2 <AmiBlitz3.ab2@7769>   BNE.s 'lm3
0002BDD4 <AmiBlitz3.ab2@7770>   SUBQ.l #1,a0
0002BDD6 <AmiBlitz3.ab2@7773>   MOVE.b (a4)+,(a0)+
0002BDD8 <AmiBlitz3.ab2@7774>   SUBQ.l #1,d3
0002BDDC <AmiBlitz3.ab2@7775>   BNE.s 'lm1
0002BDDE <AmiBlitz3.ab2@7776>   CLR.b (a0)+
0002BDE4 <AmiBlitz3.ab2@7777>   MOVE.w linenumat,(a0)
0002BDE8 <AmiBlitz3.ab2@7778>   MOVEM.l (a7)+,d3/a4
0002BDEC <AmiBlitz3.ab2@7779>   MOVEM.l (A7)+,D1-D2/A0
0002BDEE <AmiBlitz3.ab2@7780> RTS
0002BE18 <AmiBlitz3.ab2@7784>   !basic
0002BE6E <AmiBlitz3.ab2@7785>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
0002BE80 <AmiBlitz3.ab2@7786>   loop Delay_ 1
0002BE86 <AmiBlitz3.ab2@7787> Goto loop
0002BE8A <AmiBlitz3.ab2@7791>   MOVEM.l D0-D2/A0,-(A7)
0002BE8E <AmiBlitz3.ab2@7792>   MOVE.w $E(A0),-(A7)
0002BE92 <AmiBlitz3.ab2@7793>    BPL.w insasm__ok
0002BE94 <AmiBlitz3.ab2@7794>   CLR.w (A7)
0002BE96 <AmiBlitz3.ab2@7797>   MOVE.l A1,-(A7)
0002BE98 <AmiBlitz3.ab2@7798>   MOVEQ.l #$10+2,D0
0002BE9E <AmiBlitz3.ab2@7799>   ADD.w asmlen,D0
0002BEA0 <AmiBlitz3.ab2@7800>   MOVE.w D0,D2
0002BEA2 <AmiBlitz3.ab2@7801>   MOVEQ.l #$01,D1
0002BEA8 <AmiBlitz3.ab2@7802>   MOVEA.l _execbase,A6
0002BEAE <AmiBlitz3.ab2@7803>   MOVE.l mempool2,a0
0002BEB2 <AmiBlitz3.ab2@7804>   JSR _AllocPooled(a6)
0002BEB4 <AmiBlitz3.ab2@7806>   MOVEA.l D0,A0
0002BEBC <AmiBlitz3.ab2@7809>   MOVE.w linenumat+2,$C(A0)
0002BEC2 <AmiBlitz3.ab2@7810>   MOVE.l templabel,(A0)
0002BEC8 <AmiBlitz3.ab2@7811>   MOVE.l A0,templabel
0002BECC <AmiBlitz3.ab2@7812>   MOVE.l (A7),$4(A0)
0002BED0 <AmiBlitz3.ab2@7813>   MOVE.w d3,$8(A0)
0002BED6 <AmiBlitz3.ab2@7814>   MOVE.w $4(A7),$A(A0)
0002BEDA <AmiBlitz3.ab2@7815>   LEA $E(A0),A0
0002BEDC <AmiBlitz3.ab2@7816>   MOVE.b D2,(A0)+                                           ;length
0002BEE2 <AmiBlitz3.ab2@7817>   MOVEA.l asmbuff,A1
0002BEE4 <AmiBlitz3.ab2@7818>   ADDQ.w #1,A1
0002BEE6 <AmiBlitz3.ab2@7819>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
0002BEEA <AmiBlitz3.ab2@7820>    BNE.w insasm__loop
0002BEEC <AmiBlitz3.ab2@7821>   MOVE.l (A1)+,(A0)+
0002BEF2 <AmiBlitz3.ab2@7822>   MOVE.w linenumat,(a0)
0002BEF6 <AmiBlitz3.ab2@7823> BRA.w insasm__loopdone
0002BEF8 <AmiBlitz3.ab2@7826>    MOVE.b (A1)+,(A0)+
0002BEFC <AmiBlitz3.ab2@7827>    BNE.w insasm__loop
0002BF02 <AmiBlitz3.ab2@7828>    MOVE.w linenumat,(a0)
0002BF04 <AmiBlitz3.ab2@7831>   MOVEA.l (A7)+,A1
0002BF06 <AmiBlitz3.ab2@7832>   ADDQ.w #2,A7
0002BF0A <AmiBlitz3.ab2@7833>   MOVEM.l (A7)+,D0-D2/A0
0002BF0C <AmiBlitz3.ab2@7834> RTS
0002BF10 <AmiBlitz3.ab2@7838>   CMP.w #$5,D3
0002BF14 <AmiBlitz3.ab2@7839>    BCS.w makemode__done
0002BF18 <AmiBlitz3.ab2@7840>   CMP.w #$B,D3
0002BF1C <AmiBlitz3.ab2@7841>    BHI.w makemode__done2
0002BF20 <AmiBlitz3.ab2@7842>    BEQ.w makemode__imm
0002BF24 <AmiBlitz3.ab2@7843>    BSR.w insasm
0002BF28 <AmiBlitz3.ab2@7844>   CMP.w #$5,D3
0002BF2C <AmiBlitz3.ab2@7845>    BEQ.w makemode__word
0002BF30 <AmiBlitz3.ab2@7846>   CMP.w #$6,D3
0002BF34 <AmiBlitz3.ab2@7847>    BEQ.w makemode__dxi
0002BF38 <AmiBlitz3.ab2@7848>   CMP.w #$7,D3
0002BF3C <AmiBlitz3.ab2@7849>    BEQ.w makemode__word
0002BF40 <AmiBlitz3.ab2@7850>   CMP.w #$8,D3
0002BF44 <AmiBlitz3.ab2@7851>    BEQ.w makemode__long
0002BF48 <AmiBlitz3.ab2@7852>   CMP.w #$9,D3
0002BF4C <AmiBlitz3.ab2@7853>    BEQ.w makemode__word
0002BF52 <AmiBlitz3.ab2@7857>   CMPA.l destbufferend,A1
0002BF56 <AmiBlitz3.ab2@7858>    BCS.w makemode__ok7
0002BF58 <AmiBlitz3.ab2@7859>   ADDQ.w #2,A1
0002BF5A <AmiBlitz3.ab2@7860> RTS
0002BF5C <AmiBlitz3.ab2@7863>   MOVE.w D4,(A1)+
0002BF5E <AmiBlitz3.ab2@7864> RTS
0002BF66 <AmiBlitz3.ab2@7867>   CMPI.w #$8,asmsize
0002BF6A <AmiBlitz3.ab2@7868>    BCC.w makemode__immlong
0002BF6C <AmiBlitz3.ab2@7869>   MOVEQ.l #$10,D3
0002BF70 <AmiBlitz3.ab2@7870>    BSR.w insasm
0002BF72 <AmiBlitz3.ab2@7871>   MOVEQ.l #$0B,D3
0002BF76 <AmiBlitz3.ab2@7872> BRA.w makemode__word
0002BF7A <AmiBlitz3.ab2@7875>   BSR.w insasm
0002BF7C <AmiBlitz3.ab2@7878>   ADDQ.w #2,A1
0002BF7E <AmiBlitz3.ab2@7881>   ADDQ.w #2,A1
0002BF80 <AmiBlitz3.ab2@7882> RTS
0002BF84 <AmiBlitz3.ab2@7885>   CMP.w #$F,D3
0002BF88 <AmiBlitz3.ab2@7886>    BNE.w makemode__done
0002BF8E <AmiBlitz3.ab2@7887>   CMPA.l destbufferend,A1
0002BF92 <AmiBlitz3.ab2@7888>    BCS.w makemode__ok3
0002BF94 <AmiBlitz3.ab2@7889>   ADDQ.w #2,A1
0002BF96 <AmiBlitz3.ab2@7890>   ADDQ.w #4,A7
0002BF98 <AmiBlitz3.ab2@7891> RTS
0002BF9A <AmiBlitz3.ab2@7894>   MOVE.w D2,(A1)+
0002BF9C <AmiBlitz3.ab2@7895>   ADDQ.w #4,A7
0002BF9E <AmiBlitz3.ab2@7898> RTS
0002BFA2 <AmiBlitz3.ab2@7902>   BSR.w storeloc
0002BFAC <AmiBlitz3.ab2@7903>   MOVE.l linenumat,oldline
0002BFAE <AmiBlitz3.ab2@7904>   MOVEQ.l #$00,D1
0002BFB2 <AmiBlitz3.ab2@7905>    BSR.w get1bytemain
0002BFB6 <AmiBlitz3.ab2@7906>    BEQ.w JL_0_676E
0002BFB8 <AmiBlitz3.ab2@7907>   MOVEQ.l #$00,D3
0002BFBC <AmiBlitz3.ab2@7908> BRA.w JL_0_6726
0002BFC0 <AmiBlitz3.ab2@7911>    BSR.w get1bytemain
0002BFC4 <AmiBlitz3.ab2@7912>    BNE.w JL_0_671C
0002BFC6 <AmiBlitz3.ab2@7915>   TST.w D3
0002BFCA <AmiBlitz3.ab2@7916>    BNE.w brackets_                                         ;syntax error brackets
0002BFCE <AmiBlitz3.ab2@7917> BRA.w JL_0_676C
0002BFD4 <AmiBlitz3.ab2@7920>    MOVE.w instringon,D4
0002BFD8 <AmiBlitz3.ab2@7922>      BEQ JL_0_6726
0002BFDA <AmiBlitz3.ab2@7925>     MOVEQ #0,d0
0002BFDC <AmiBlitz3.ab2@7926>      MOVE.b (a5)+,d0                                       ;fix "ue"
0002BFE2 <AmiBlitz3.ab2@7927>      MOVE.w d0,lastchar
0002BFE6 <AmiBlitz3.ab2@7928>      BEQ ready
0002BFEA <AmiBlitz3.ab2@7929>      CMP.b #$22,d0
0002BFEE <AmiBlitz3.ab2@7930>      BNE 'l1
0002BFF4 <AmiBlitz3.ab2@7931>      NOT.w instringon
0002BFF8 <AmiBlitz3.ab2@7932> BRA JL_0_670A
0002BFFC <AmiBlitz3.ab2@7935>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
0002C000 <AmiBlitz3.ab2@7936>            BNE 'l10
0002C004 <AmiBlitz3.ab2@7937>            CMP.b #"@",(a5)
0002C008 <AmiBlitz3.ab2@7938>            BNE 'l10
0002C00E <AmiBlitz3.ab2@7941>            TST.w ininclude
0002C012 <AmiBlitz3.ab2@7942>            BNE 'inc
0002C018 <AmiBlitz3.ab2@7943>            MOVE.l sourceline3,a5
0002C01E <AmiBlitz3.ab2@7944>            CMP.l #0,a5
0002C022 <AmiBlitz3.ab2@7945>            BNE 'l11t
0002C028 <AmiBlitz3.ab2@7946>            MOVEA.l sourceline,A5
0002C02A <AmiBlitz3.ab2@7949>            MOVEA.l (A5),A5
0002C030 <AmiBlitz3.ab2@7950>            CMP.l #0,a5
0002C034 <AmiBlitz3.ab2@7951>            BEQ JL_0_676C
0002C03A <AmiBlitz3.ab2@7952>            MOVE.l a5,sourceline3
0002C03E <AmiBlitz3.ab2@7953>            LEA $9(A5),A5
0002C042 <AmiBlitz3.ab2@7954> BRA 'l11
0002C044 <AmiBlitz3.ab2@7957>            ADDQ.l #1,a5
0002C046 <AmiBlitz3.ab2@7958>            TST.b (a5)
0002C04A <AmiBlitz3.ab2@7959>            BNE 'inc
0002C04C <AmiBlitz3.ab2@7963>            ADDQ.l #1,a5
0002C04E <AmiBlitz3.ab2@7964>            TST.b (a5)
0002C052 <AmiBlitz3.ab2@7965>            BEQ illeolerr
0002C054 <AmiBlitz3.ab2@7966>            MOVE.l a5,-(a7)
0002C058 <AmiBlitz3.ab2@7969>       CMP.b #" ",(a5)+
0002C05C <AmiBlitz3.ab2@7970>       BEQ 'l110
0002C062 <AmiBlitz3.ab2@7971>        CMP.b #";",-1(a5)
0002C064 <AmiBlitz3.ab2@7972>        MOVE.l (a7)+,a5
0002C068 <AmiBlitz3.ab2@7973>        BEQ 'l111
0002C06C <AmiBlitz3.ab2@7974> BRA JL_0_670A
0002C070 <AmiBlitz3.ab2@7977>    CMP.w #$29,D0
0002C074 <AmiBlitz3.ab2@7978>    BNE.w JL_0_673A
0002C076 <AmiBlitz3.ab2@7979>   TST.w D3
0002C07A <AmiBlitz3.ab2@7980>    BEQ.w JL_0_676C
0002C07C <AmiBlitz3.ab2@7983>   SUBQ.w #1,D3
0002C080 <AmiBlitz3.ab2@7984> BRA.w JL_0_670A
0002C084 <AmiBlitz3.ab2@7987>    CMP.w #$7D,D0
0002C088 <AmiBlitz3.ab2@7988>    BEQ.w JL_0_6734
0002C08C <AmiBlitz3.ab2@7989>   CMP.w #$28,D0
0002C090 <AmiBlitz3.ab2@7990>    BNE.w JL_0_6750
0002C092 <AmiBlitz3.ab2@7993>    ADDQ.w #1,D3
0002C096 <AmiBlitz3.ab2@7994> BRA.w JL_0_670A
0002C09A <AmiBlitz3.ab2@7997>   CMP.w #$7B,D0
0002C09E <AmiBlitz3.ab2@7998>    BEQ.w JL_0_674A
0002C0A2 <AmiBlitz3.ab2@7999>   CMP.w #$2C,D0
0002C0A6 <AmiBlitz3.ab2@8000>    BNE.w JL_0_670A
0002C0A8 <AmiBlitz3.ab2@8001>   TST.w D3
0002C0AC <AmiBlitz3.ab2@8002>    BNE.w JL_0_670A
0002C0AE <AmiBlitz3.ab2@8003>   ADDQ.w #1,D1
0002C0B2 <AmiBlitz3.ab2@8004> BRA.w JL_0_670A
0002C0B4 <AmiBlitz3.ab2@8007>   ADDQ.w #1,D1
0002C0BA <AmiBlitz3.ab2@8010>   CLR.l sourceline3
0002C0C4 <AmiBlitz3.ab2@8011>   MOVE.l oldline,linenumat
0002C0C8 <AmiBlitz3.ab2@8012> BRA.w resloc
0002C0CE <AmiBlitz3.ab2@8016>    CLR.w numreps
0002C0D0 <AmiBlitz3.ab2@8017>   MOVE.w D1,D0
0002C0D4 <AmiBlitz3.ab2@8018>   ANDI.w #$FF00,D0
0002C0D8 <AmiBlitz3.ab2@8019>    BEQ.w fetchlibps__noreps
0002C0DA <AmiBlitz3.ab2@8020>   LSR.w #8,D0
0002C0DC <AmiBlitz3.ab2@8021>   LSR.w #4,D0
0002C0E0 <AmiBlitz3.ab2@8022>    BEQ.w fetchlibps__skip
0002C0E2 <AmiBlitz3.ab2@8023>   SUB.b D0,D1
0002C0EC <AmiBlitz3.ab2@8024>    MOVE.w regnum,regnumfunc
0002C0F2 <AmiBlitz3.ab2@8025>    MOVE.b funcparloop,-(a7)
0002C0FA <AmiBlitz3.ab2@8026>    MOVE.b #0,funcparloop
0002C0FE <AmiBlitz3.ab2@8027>    BSR.w fetchpees2
0002C104 <AmiBlitz3.ab2@8028>    MOVE.b (a7)+,funcparloop
0002C108 <AmiBlitz3.ab2@8029>   CMP.w #$2C,D0
0002C10C <AmiBlitz3.ab2@8030>    BNE.w syntaxerr
0002C10E <AmiBlitz3.ab2@8033>   MOVE.w D1,D2
0002C110 <AmiBlitz3.ab2@8034>   LSR.w #8,D2
0002C114 <AmiBlitz3.ab2@8035>   ANDI.w #$7,D2
0002C116 <AmiBlitz3.ab2@8038>    CMP.b D2,D1
0002C11A <AmiBlitz3.ab2@8039>    BCS.w fetchlibps__repsdone
0002C11C <AmiBlitz3.ab2@8040>   SUB.b D2,D1
0002C120 <AmiBlitz3.ab2@8041>   MOVEM.l D2/A2,-(A7)
0002C122 <AmiBlitz3.ab2@8042>   MOVE.w D2,D0
0002C128 <AmiBlitz3.ab2@8043>   MOVE.b funcparloop,-(a7)
0002C130 <AmiBlitz3.ab2@8044>   MOVE.b #0,funcparloop
0002C134 <AmiBlitz3.ab2@8045>   BSR.w fetchpees4
0002C13A <AmiBlitz3.ab2@8046>   MOVE.b (a7)+,funcparloop
0002C13E <AmiBlitz3.ab2@8047>   MOVEM.l (A7)+,D2/A2
0002C144 <AmiBlitz3.ab2@8048>   ADDQ.w #1,numreps
0002C148 <AmiBlitz3.ab2@8049> BRA.w fetchlibps__rloop
0002C14E <AmiBlitz3.ab2@8052>    MOVE.w numreps,D3
0002C152 <AmiBlitz3.ab2@8053>    BEQ.w syntaxerr
0002C154 <AmiBlitz3.ab2@8054>   ADDA.w D2,A2
0002C158 <AmiBlitz3.ab2@8055>   ANDI.w #$FF,D1
0002C15C <AmiBlitz3.ab2@8056>    BEQ.w fetchlibps__done
0002C160 <AmiBlitz3.ab2@8057>   CMP.w #$2C,D0
0002C164 <AmiBlitz3.ab2@8058>    BNE.w syntaxerr
0002C166 <AmiBlitz3.ab2@8061>    MOVE.w D1,D0
0002C16A <AmiBlitz3.ab2@8062>    BNE.w fetchpees2b
0002C16C <AmiBlitz3.ab2@8065> RTS
0002C172 <AmiBlitz3.ab2@8068>   MOVE.b funcparloop,-(a7)
0002C17A <AmiBlitz3.ab2@8069>   MOVE.b #0,funcparloop
0002C17E <AmiBlitz3.ab2@8070>   BSR.w fetchpees2
0002C184 <AmiBlitz3.ab2@8071>   MOVE.b (a7)+,funcparloop
0002C186 <AmiBlitz3.ab2@8072> RTS
0002C18A <AmiBlitz3.ab2@8076> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
0002C18C <AmiBlitz3.ab2@8079> partostack:  Ds.w 1                                        ;pmode org source
0002C18E <AmiBlitz3.ab2@8083>   MOVEQ.l #$01,D2
0002C192 <AmiBlitz3.ab2@8084> BRA.w fetchpees3
0002C194 <AmiBlitz3.ab2@8087>   MOVEQ.l #$00,D2
0002C198 <AmiBlitz3.ab2@8090>   ANDI.w #$F,D0
0002C19E <AmiBlitz3.ab2@8098>   CLR.w parnum
0002C1A0 <AmiBlitz3.ab2@8099>   MOVE.w D1,-(A7)
0002C1A4 <AmiBlitz3.ab2@8100>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
0002C1AA <AmiBlitz3.ab2@8101>   MOVE.w D2,partostack
0002C1AC <AmiBlitz3.ab2@8102>   MOVE.w D0,-(A7)
0002C1B0 <AmiBlitz3.ab2@8103>   CMP.w #"@@",(a5)                                         ;was l15
0002C1B4 <AmiBlitz3.ab2@8104>   BNE fetchpees__loop
0002C1BA <AmiBlitz3.ab2@8105>   TST.w ininclude                                          ;merge macrolines
0002C1BE <AmiBlitz3.ab2@8106>   BNE errorjoin
0002C1C4 <AmiBlitz3.ab2@8107>        MOVEA.l sourceline,A5
0002C1C6 <AmiBlitz3.ab2@8110>            MOVEA.l (A5),A5
0002C1CC <AmiBlitz3.ab2@8111>            MOVE.l a5,sourceline
0002C1D0 <AmiBlitz3.ab2@8112>            LEA $9(A5),A5
0002C1D6 <AmiBlitz3.ab2@8113>            ADDQ.l #1,linenumat
0002C1D8 <AmiBlitz3.ab2@8117>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
0002C1DC <AmiBlitz3.ab2@8118>    BNE.w fetchpees__skip0
0002C1E2 <AmiBlitz3.ab2@8119>   MOVE.w userp,D2                                          ;user selected type
0002C1E4 <AmiBlitz3.ab2@8122>    MOVE.l A2,-(A7)
0002C1EA <AmiBlitz3.ab2@8123>    ADDQ.w #1,parnum
0002C1F0 <AmiBlitz3.ab2@8124>    TST.b funccall
0002C1F4 <AmiBlitz3.ab2@8125>    BEQ fetchpees__skip0_l1
0002C1FC <AmiBlitz3.ab2@8126>    CMP.w #6,parnum
0002C200 <AmiBlitz3.ab2@8127>    BLE fetchpees__skip0_l1
0002C204 <AmiBlitz3.ab2@8128>    CMP.w #7,d2
0002C20A <AmiBlitz3.ab2@8134>    TST.b fpu
0002C20E <AmiBlitz3.ab2@8135>    BEQ fetchpees__skip0_old
0002C214 <AmiBlitz3.ab2@8136>    TST.w regnumfunc
0002C218 <AmiBlitz3.ab2@8137>    BEQ fetchpees__skip0_old
0002C21E <AmiBlitz3.ab2@8138>    CMP.w #$48e7,-4(a4)
0002C222 <AmiBlitz3.ab2@8139>    BNE fetchpees__skip0_old
0002C224 <AmiBlitz3.ab2@8140>    MOVEQ #0,d1
0002C22A <AmiBlitz3.ab2@8141>    MOVE.w regnum,d1
0002C230 <AmiBlitz3.ab2@8142>    CMP regnumfunc,d1                                       ;fpu reg function save
0002C234 <AmiBlitz3.ab2@8143>    BGE fetchpees__skip0_old
0002C236 <AmiBlitz3.ab2@8144>    ASL.w #7,d1
0002C238 <AmiBlitz3.ab2@8145>    MOVE.l d0,-(a7)
0002C23E <AmiBlitz3.ab2@8146>    MOVE.w regnumfunc,d0
0002C244 <AmiBlitz3.ab2@8147>    CLR.w regmask
0002C24A <AmiBlitz3.ab2@8150>    BSET d0,regmask
0002C24C <AmiBlitz3.ab2@8151>    SUBQ #1,d0
0002C250 <AmiBlitz3.ab2@8152>    BNE fetchpees__skip0_loop
0002C252 <AmiBlitz3.ab2@8153>     MOVEQ #0,d0
0002C258 <AmiBlitz3.ab2@8156>       BTST d0,regmask
0002C25C <AmiBlitz3.ab2@8157>       BEQ fetchpees__skip0_noa7
0002C25E <AmiBlitz3.ab2@8158>       MOVEQ #0,d1
0002C260 <AmiBlitz3.ab2@8159>       MOVE.w d0,d1
0002C262 <AmiBlitz3.ab2@8160>       SUBQ.w #1,d1
0002C264 <AmiBlitz3.ab2@8161>       ASL #7,d1
0002C26A <AmiBlitz3.ab2@8162>       OR.l #$f2277400,d1                                   ;fmove.d
0002C26E <AmiBlitz3.ab2@8164>       BSR writelong
0002C274 <AmiBlitz3.ab2@8166>       ADDQ.l #2,stacktrack
0002C27A <AmiBlitz3.ab2@8167>       MOVE.l stacktrack,d1
0002C280 <AmiBlitz3.ab2@8168>       CMP.l #180,d1
0002C284 <AmiBlitz3.ab2@8169>       BGT conmemerr                                        ;formel too complex
0002C286 <AmiBlitz3.ab2@8170>       MOVE.l a0,-(a7)
0002C28C <AmiBlitz3.ab2@8171>       LEA fpustackbase,a0
0002C294 <AmiBlitz3.ab2@8172>       MOVE.w regmask,0(a0,d1)
0002C296 <AmiBlitz3.ab2@8173>       MOVE.l (a7)+,a0
0002C298 <AmiBlitz3.ab2@8176>       ADDQ.w #1,d0
0002C29E <AmiBlitz3.ab2@8177>       CMP.w regnumfunc,d0
0002C2A2 <AmiBlitz3.ab2@8178>       BLE fetchpees__skip0_loop2
0002C2A4 <AmiBlitz3.ab2@8181>       MOVE.l (a7)+,d0
0002C2AA <AmiBlitz3.ab2@8184>      MOVE.l currentfunccall,-(a7)
0002C2B0 <AmiBlitz3.ab2@8185>      MOVE.w parnum,-(a7)
0002C2B4 <AmiBlitz3.ab2@8186>      BSR.w JL_0_6836
0002C2BA <AmiBlitz3.ab2@8187>      MOVE.w (a7)+,parnum
0002C2C0 <AmiBlitz3.ab2@8189>    MOVE.l (a7)+,currentfunccall
0002C2C6 <AmiBlitz3.ab2@8190>    TST.b fpu
0002C2CA <AmiBlitz3.ab2@8191>    BEQ fetchpees__skip0_noprint
0002C2CC <AmiBlitz3.ab2@8192>   MOVE.l (a7),a2
0002C2CE <AmiBlitz3.ab2@8193>   ADDQ.l #1,a2
0002C2D2 <AmiBlitz3.ab2@8194>    CMP.b #5,d2
0002C2D6 <AmiBlitz3.ab2@8195>   BNE fetchpees__skip0_noprint
0002C2DC <AmiBlitz3.ab2@8196>   CMP.b #$5d,24(a2)
0002C2E0 <AmiBlitz3.ab2@8197>   BNE fetchpees__skip0_noprint
0002C2E6 <AmiBlitz3.ab2@8198>   CMP.b #$81,25(a2)
0002C2EA <AmiBlitz3.ab2@8199>   BLT fetchpees__skip0_noprint
0002C2F0 <AmiBlitz3.ab2@8200>   CMP.b #$86,25(a2)
0002C2F4 <AmiBlitz3.ab2@8201>   BEQ fetchpees__skip0_ok
0002C2FA <AmiBlitz3.ab2@8202>   CMP.b #$87,25(a2)
0002C2FE <AmiBlitz3.ab2@8203>   BEQ fetchpees__skip0_ok
0002C304 <AmiBlitz3.ab2@8204>   CMP.b #$88,25(a2)
0002C308 <AmiBlitz3.ab2@8205>   BEQ fetchpees__skip0_ok
0002C30E <AmiBlitz3.ab2@8206>   CMP.b #$83,25(a2)
0002C312 <AmiBlitz3.ab2@8207>   BGT fetchpees__skip0_noprint
0002C318 <AmiBlitz3.ab2@8210>   MOVE.l destpointer,a4
0002C31E <AmiBlitz3.ab2@8211>   CMP.w #$2f00,-2(a4)
0002C322 <AmiBlitz3.ab2@8212>   BNE fetchpees__skip0_noprint
0002C328 <AmiBlitz3.ab2@8213>   SUBQ.l #2,destpointer
0002C32E <AmiBlitz3.ab2@8215>   MOVE.l #$f2277400,d1
0002C332 <AmiBlitz3.ab2@8216>   BSR writelong                                            ;fmove.d fp0,-(a7)
0002C338 <AmiBlitz3.ab2@8217>   ADDQ #4,a2offset
0002C33E <AmiBlitz3.ab2@8235>   CLR.b optistring
0002C340 <AmiBlitz3.ab2@8236>   MOVEA.l (A7)+,A2
0002C344 <AmiBlitz3.ab2@8237>    CMP.w #"@",d0
0002C348 <AmiBlitz3.ab2@8238>   BNE fetchpees__skip0_l10
0002C34C <AmiBlitz3.ab2@8239>    CMP.b #"@",(a5)
0002C350 <AmiBlitz3.ab2@8240>   BNE fetchpees__skip0_l10
0002C356 <AmiBlitz3.ab2@8241>   TST.w ininclude
0002C35A <AmiBlitz3.ab2@8242>   BNE errorjoin
0002C360 <AmiBlitz3.ab2@8243>   MOVEA.l sourceline,A5
0002C362 <AmiBlitz3.ab2@8244>            MOVEA.l (A5),A5
0002C368 <AmiBlitz3.ab2@8245>            MOVE.l a5,sourceline
0002C36E <AmiBlitz3.ab2@8246>            ADDQ.l #1,linenumat
0002C372 <AmiBlitz3.ab2@8247>            LEA $9(A5),A5
0002C374 <AmiBlitz3.ab2@8248>            MOVEQ #0,d0
0002C378 <AmiBlitz3.ab2@8249>            BSR get1bytemain
0002C37C <AmiBlitz3.ab2@8252>    CMP.b #32,(a5)+ ;for space after a ,
0002C380 <AmiBlitz3.ab2@8253>    BEQ fetchpees__skip0_l10:
0002C382 <AmiBlitz3.ab2@8254>    SUBQ.l #1,a5
0002C386 <AmiBlitz3.ab2@8256>    CMP.w #"@@",(a5)                                        ;if merge
0002C38A <AmiBlitz3.ab2@8257>    BNE fetchpees__skip0_l15
0002C38E <AmiBlitz3.ab2@8258>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
0002C394 <AmiBlitz3.ab2@8259>    JSR mergeline
0002C398 <AmiBlitz3.ab2@8260>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
0002C39A <AmiBlitz3.ab2@8280>       SUBQ.w #1,(A7)
0002C39E <AmiBlitz3.ab2@8281>    BEQ.w fetchpees__done
0002C3A2 <AmiBlitz3.ab2@8283>     CMP.w #$2C,D0
0002C3A6 <AmiBlitz3.ab2@8285>    BNE overloadfunc
0002C3AA <AmiBlitz3.ab2@8286> BRA.w fetchpees__loop
0002C3AC <AmiBlitz3.ab2@8289>   ADDQ.w #2,A7
0002C3B2 <AmiBlitz3.ab2@8290>   MOVE.w (A7)+,partostack
0002C3B4 <AmiBlitz3.ab2@8291>   MOVE.w (A7)+,D1
0002C3BA <AmiBlitz3.ab2@8292>   CLR.b funccall
0002C3BC <AmiBlitz3.ab2@8293> RTS
0002C3C2 <AmiBlitz3.ab2@8297>   CLR.b funccall
0002C3C8 <AmiBlitz3.ab2@8298>   MOVE.w regnum,d1
0002C3CE <AmiBlitz3.ab2@8299>   MOVE.l currentfunccall,a4
0002C3D2 <AmiBlitz3.ab2@8300>   CMP.b $20(a4),d1                                         ;increase if more pars
0002C3D6 <AmiBlitz3.ab2@8301>   BLT notparerr
0002C3D8 <AmiBlitz3.ab2@8304>   MOVE.b (a2)+,d2
0002C3E0 <AmiBlitz3.ab2@8305>   ADD.w #1,parnum
0002C3E6 <AmiBlitz3.ab2@8306>   TST.b fpu
0002C3EA <AmiBlitz3.ab2@8307>   BEQ 'nofpu
0002C3EE <AmiBlitz3.ab2@8308>   CMP.b #5,d2
0002C3F2 <AmiBlitz3.ab2@8309>   BNE 'nofpu
0002C3F4 <AmiBlitz3.ab2@8310>   MOVEQ #0,d1
0002C3FA <AmiBlitz3.ab2@8311>   MOVE.w regnum,d1
0002C402 <AmiBlitz3.ab2@8312>   CMP.w #6,regnum
0002C406 <AmiBlitz3.ab2@8313>   BLT 'nostack2
0002C40A <AmiBlitz3.ab2@8318>   MOVE.w #$2c3c,d1
0002C40E <AmiBlitz3.ab2@8319>   BSR writeword
0002C414 <AmiBlitz3.ab2@8320>   MOVE.l #$bf800000,d1
0002C418 <AmiBlitz3.ab2@8321>   BSR writelong
0002C41C <AmiBlitz3.ab2@8322>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C422 <AmiBlitz3.ab2@8323>   ADD.w parnum,d1
0002C428 <AmiBlitz3.ab2@8324>   JSR Atokejsr
0002C42E <AmiBlitz3.ab2@8325>   TST.w dontwrite
0002C432 <AmiBlitz3.ab2@8326>   BNE 'l1
0002C438 <AmiBlitz3.ab2@8327>   MOVE.l data1start,d1
0002C43E <AmiBlitz3.ab2@8328>   MOVE.l destpointer,a4
0002C442 <AmiBlitz3.ab2@8329>   ADD.l d1,-4(a4)
0002C448 <AmiBlitz3.ab2@8330>   MOVE.l destpointer,d1
0002C44A <AmiBlitz3.ab2@8331>   SUBQ.l #4,d1
0002C450 <AmiBlitz3.ab2@8332>   SUB.l destbufferstart,d1
0002C452 <AmiBlitz3.ab2@8333>   MOVE.l d2,-(a7)
0002C454 <AmiBlitz3.ab2@8334>   MOVE.l d1,d2
0002C45A <AmiBlitz3.ab2@8335>   JSR addhunkoffset
0002C45C <AmiBlitz3.ab2@8336>   MOVE.l (a7)+,d2
0002C460 <AmiBlitz3.ab2@8337> BRA 'l1
0002C462 <AmiBlitz3.ab2@8340>   ASL.l #7,d1
0002C468 <AmiBlitz3.ab2@8341>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
0002C46C <AmiBlitz3.ab2@8342>   BSR writelong
0002C46E <AmiBlitz3.ab2@8343>   MOVEQ #-1,d1                                             ;-1
0002C472 <AmiBlitz3.ab2@8344>   BSR writeword
0002C476 <AmiBlitz3.ab2@8345> BRA 'l1
0002C47C <AmiBlitz3.ab2@8348>   MOVE.w regnum,d1
0002C484 <AmiBlitz3.ab2@8349>   CMP.w #6,regnum
0002C488 <AmiBlitz3.ab2@8350>   BLT 'nostack
0002C48C <AmiBlitz3.ab2@8355>   CMP.b #2,d2
0002C490 <AmiBlitz3.ab2@8356>   BGT 'nw
0002C494 <AmiBlitz3.ab2@8357> BRA 'nos
0002C498 <AmiBlitz3.ab2@8366>   CMP.w #7,d2
0002C49C <AmiBlitz3.ab2@8367>   BNE 'nos
0002C4A2 <AmiBlitz3.ab2@8368>   ADDQ #4,a2offset
0002C4A8 <AmiBlitz3.ab2@8370>     MOVE.l #$48780000,d1
0002C4AC <AmiBlitz3.ab2@8371>     BSR writelong
0002C4B2 <AmiBlitz3.ab2@8372>     ADDQ.w #4,a2offset
0002C4B6 <AmiBlitz3.ab2@8373>     MOVE.w #$2f3c,d1
0002C4BA <AmiBlitz3.ab2@8374>     BSR writeword
0002C4C0 <AmiBlitz3.ab2@8375>     MOVE.l #-1,d1
0002C4C4 <AmiBlitz3.ab2@8376>     BSR writelong
0002C4C8 <AmiBlitz3.ab2@8377>   BRA 'l1
0002C4CC <AmiBlitz3.ab2@8381>   CMP.b #4,d2
0002C4D0 <AmiBlitz3.ab2@8382>       BNE 'noq
0002C4D4 <AmiBlitz3.ab2@8383>       MOVE.w #$2c3c,d1
0002C4D8 <AmiBlitz3.ab2@8384>       BSR writeword
0002C4DE <AmiBlitz3.ab2@8385>       MOVE.l #$ffff0000,d1
0002C4E2 <AmiBlitz3.ab2@8386>       BSR writelong
0002C4E6 <AmiBlitz3.ab2@8387> BRA 'noq2
0002C4EA <AmiBlitz3.ab2@8390>      CMP.b #5,d2
0002C4EE <AmiBlitz3.ab2@8391>      BNE 'nof
0002C4F2 <AmiBlitz3.ab2@8392>       MOVE.w #$2c3c,d1
0002C4F6 <AmiBlitz3.ab2@8393>       BSR writeword
0002C4FC <AmiBlitz3.ab2@8394>       MOVE.l #$800000c1,d1
0002C500 <AmiBlitz3.ab2@8395>       BSR writelong
0002C504 <AmiBlitz3.ab2@8396> BRA 'noq2
0002C508 <AmiBlitz3.ab2@8399>   MOVE.w #$7cff,d1
0002C50C <AmiBlitz3.ab2@8400>   BSR writeword
0002C510 <AmiBlitz3.ab2@8403>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C516 <AmiBlitz3.ab2@8404>   ADD.w parnum,d1
0002C51C <AmiBlitz3.ab2@8405>   JSR Atokejsr
0002C522 <AmiBlitz3.ab2@8406>    TST.w dontwrite
0002C526 <AmiBlitz3.ab2@8407>    BNE 'l1
0002C52C <AmiBlitz3.ab2@8408>    MOVE.l data1start,d1
0002C532 <AmiBlitz3.ab2@8409>    MOVE.l destpointer,a4
0002C536 <AmiBlitz3.ab2@8410>    ADD.l d1,-4(a4)
0002C53C <AmiBlitz3.ab2@8411>    MOVE.l destpointer,d1
0002C53E <AmiBlitz3.ab2@8412>    SUBQ.l #4,d1
0002C544 <AmiBlitz3.ab2@8413>    SUB.l destbufferstart,d1
0002C546 <AmiBlitz3.ab2@8414>    MOVE.l d2,-(a7)
0002C548 <AmiBlitz3.ab2@8415>    MOVE.l d1,d2
0002C54E <AmiBlitz3.ab2@8416>    JSR addhunkoffset
0002C550 <AmiBlitz3.ab2@8417>    MOVE.l (a7)+,d2
0002C554 <AmiBlitz3.ab2@8418> BRA 'l1
0002C556 <AmiBlitz3.ab2@8421>   ASL.l #8,d1
0002C558 <AmiBlitz3.ab2@8422>   ASL.l #1,d1
0002C55E <AmiBlitz3.ab2@8423>   OR.l #$203c,d1                                           ;-1
0002C562 <AmiBlitz3.ab2@8424>   BSR writeword
0002C568 <AmiBlitz3.ab2@8425>   MOVE.l #-1,d1
0002C56C <AmiBlitz3.ab2@8426>   CMP.b #4,d2
0002C570 <AmiBlitz3.ab2@8427>   BNE 'nq1
0002C576 <AmiBlitz3.ab2@8428>   MOVE.l #$ffff0000,d1
0002C57A <AmiBlitz3.ab2@8431>   CMP.b #5,d2
0002C57E <AmiBlitz3.ab2@8432>   BNE 'nof2
0002C584 <AmiBlitz3.ab2@8433>   TST.b fpu
0002C588 <AmiBlitz3.ab2@8434>   BNE 'nof2
0002C58E <AmiBlitz3.ab2@8435>   MOVE.l #$800000c1,d1
0002C592 <AmiBlitz3.ab2@8438>    BSR writelong
0002C596 <AmiBlitz3.ab2@8439>    CMP.b #7,d2
0002C59A <AmiBlitz3.ab2@8440>    BNE 'l1
0002C5A0 <AmiBlitz3.ab2@8442>      MOVE.l #$48780000,d1
0002C5A4 <AmiBlitz3.ab2@8443>      BSR writelong
0002C5AA <AmiBlitz3.ab2@8445>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
0002C5B0 <AmiBlitz3.ab2@8446>    MOVE.l #$594f,d1                                        ; subq #4,a7
0002C5B4 <AmiBlitz3.ab2@8447>    BSR writeword
0002C5B6 <AmiBlitz3.ab2@8450>    SUBQ.w #1,(A7)
0002C5BA <AmiBlitz3.ab2@8451>    BEQ.w fetchpees__done
0002C5C0 <AmiBlitz3.ab2@8452>    ADDQ.w #1,regnum
0002C5C4 <AmiBlitz3.ab2@8453> BRA 'ol2
0002C5C6 <AmiBlitz3.ab2@8456>    MOVE.w D2,D1
0002C5CA <AmiBlitz3.ab2@8457>    ANDI.w #$40,D1
0002C5D0 <AmiBlitz3.ab2@8458>    MOVE.b D1,partostack
0002C5D2 <AmiBlitz3.ab2@8459>    TST.b D2
0002C5D6 <AmiBlitz3.ab2@8460>     BMI.w handlevara
0002C5DA <AmiBlitz3.ab2@8461>    BTST #$5,D2
0002C5DE <AmiBlitz3.ab2@8462>     BNE.w handlearr
0002C5E4 <AmiBlitz3.ab2@8463>     MOVE.w regnumstore,-(a7)
0002C5EA <AmiBlitz3.ab2@8464>     MOVE.w tempregnum,-(a7)
0002C5F0 <AmiBlitz3.ab2@8465>     MOVE.w parnum,-(a7)
0002C5F4 <AmiBlitz3.ab2@8466>     BSR.w getap                                        ;recursive entry
0002C5FA <AmiBlitz3.ab2@8467>     MOVE.w (a7)+,parnum
0002C600 <AmiBlitz3.ab2@8468>     MOVE.w (a7)+,tempregnum
0002C606 <AmiBlitz3.ab2@8469>     MOVE.w (a7)+,regnumstore
0002C60A <AmiBlitz3.ab2@8472>     MOVE.w partostack(PC),D1
0002C60E <AmiBlitz3.ab2@8473>     BEQ.w JL_0_6886
0002C614 <AmiBlitz3.ab2@8476>    ADDQ.w #4,a2offset
0002C61A <AmiBlitz3.ab2@8479>    MOVE.w pushdn,D1
0002C620 <AmiBlitz3.ab2@8480>    OR.w regnum,D1
0002C624 <AmiBlitz3.ab2@8481>    CMP.w #$3,D2
0002C628 <AmiBlitz3.ab2@8482>     BCC.w JL_0_6880
0002C62E <AmiBlitz3.ab2@8483>    SUBQ.w #2,a2offset
0002C632 <AmiBlitz3.ab2@8484>    ORI.w #$1000,D1
0002C636 <AmiBlitz3.ab2@8485>    BSR.w writeword
0002C638 <AmiBlitz3.ab2@8486> RTS
0002C63C <AmiBlitz3.ab2@8489>   CMP.b #7,d2
0002C640 <AmiBlitz3.ab2@8490>    BNE 'l10
0002C648 <AmiBlitz3.ab2@8491>    CMP.b #2,optistring
0002C64E <AmiBlitz3.ab2@8495>   TST.b iee
0002C652 <AmiBlitz3.ab2@8496>   BEQ 'old
0002C656 <AmiBlitz3.ab2@8497>   CMP.b #5,d2
0002C65A <AmiBlitz3.ab2@8498>   BNE 'old
0002C65E <AmiBlitz3.ab2@8501>   BSR.w writeword                                          ;write val to stack
0002C660 <AmiBlitz3.ab2@8502> RTS
0002C666 <AmiBlitz3.ab2@8505>   SUBQ.w #4,a2offset
0002C668 <AmiBlitz3.ab2@8506> RTS
0002C66E <AmiBlitz3.ab2@8509>   ADDQ.w #1,regnum
0002C670 <AmiBlitz3.ab2@8510> RTS
0002C672 <AmiBlitz3.ab2@8514>   MOVEQ.l #$03,D2
0002C676 <AmiBlitz3.ab2@8515> BRA.w JL_0_6854
0002C67A <AmiBlitz3.ab2@8519>   ANDI.w #$7,D2
0002C67C <AmiBlitz3.ab2@8520>   MOVE.w D2,-(A7)
0002C680 <AmiBlitz3.ab2@8521>    BSR.w JL_0_A916
0002C684 <AmiBlitz3.ab2@8522>   CMP.b #$7,D2                                             ;ignore pnt to $
0002C688 <AmiBlitz3.ab2@8523>    BEQ.w JL_0_68C0
0002C68C <AmiBlitz3.ab2@8524>   BTST #$E,D2
0002C690 <AmiBlitz3.ab2@8525>    BEQ.w JL_0_68B6
0002C694 <AmiBlitz3.ab2@8526>   MOVE.b #$3,D2                                            ;pointer to long
0002C698 <AmiBlitz3.ab2@8527> BRA.w JL_0_68C0
0002C69A <AmiBlitz3.ab2@8530>    TST.b D2
0002C69E <AmiBlitz3.ab2@8531>    BNE.w JL_0_68C0
0002C6A2 <AmiBlitz3.ab2@8532>   MOVE.b #$3,D2
0002C6A4 <AmiBlitz3.ab2@8535>   MOVE.w (A7)+,D3
0002C6A6 <AmiBlitz3.ab2@8536>   TST.b D3
0002C6AA <AmiBlitz3.ab2@8537>    BEQ.w JL_0_68D2
0002C6AC <AmiBlitz3.ab2@8538>   CMP.b D2,D3
0002C6B0 <AmiBlitz3.ab2@8539>    BEQ.w putalp
0002C6B4 <AmiBlitz3.ab2@8540> BRA.w mismatcherr
0002C6BA <AmiBlitz3.ab2@8543>   ADDQ.w #2,a2offset
0002C6BE <AmiBlitz3.ab2@8544>   MOVE.w ptype(PC),D1
0002C6C2 <AmiBlitz3.ab2@8545>    BSR.w writeword
0002C6C4 <AmiBlitz3.ab2@8546>   MOVEQ.l #$00,D1
0002C6C6 <AmiBlitz3.ab2@8547>   MOVE.b D2,D1
0002C6CA <AmiBlitz3.ab2@8548>    BSR.w writeword
0002C6CE <AmiBlitz3.ab2@8549> BRA.w putalp
0002C6D0 <AmiBlitz3.ab2@8552>    MOVE.w D2,-(A7)
0002C6D4 <AmiBlitz3.ab2@8553>    BSR.w JL_0_694E
0002C6DA <AmiBlitz3.ab2@8554>   BTST #$4,$1(A7)
0002C6DE <AmiBlitz3.ab2@8555>    BEQ.w JL_0_6900
0002C6E2 <AmiBlitz3.ab2@8556>    BSR.w JL_0_699A
0002C6E8 <AmiBlitz3.ab2@8559>    BTST #$3,$1(A7)
0002C6EC <AmiBlitz3.ab2@8560>    BEQ.w JL_0_690E
0002C6F0 <AmiBlitz3.ab2@8561>    BSR.w sendtype
0002C6F2 <AmiBlitz3.ab2@8564>    MOVE.w (A7)+,D2
0002C6F6 <AmiBlitz3.ab2@8565> BRA.w get1bytemain
0002C6FC <AmiBlitz3.ab2@8568>   MOVE.w regnum,D1
0002C6FE <AmiBlitz3.ab2@8569>   LSL.w #8,D1
0002C700 <AmiBlitz3.ab2@8570>   LSL.w #1,D1
0002C704 <AmiBlitz3.ab2@8571>   ORI.w #$7000,D1
0002C70A <AmiBlitz3.ab2@8572>   BTST #$0,$7(A3)
0002C70E <AmiBlitz3.ab2@8573>    BNE.w JL_0_6946                                         ;A Pointer
0002C716 <AmiBlitz3.ab2@8574>   CMPI.l #$100,$4(A2)
0002C71A <AmiBlitz3.ab2@8575>    BCC.w arrerr1                                           ;illegal type to send
0002C71E <AmiBlitz3.ab2@8576>   MOVE.b $7(A2),D1
0002C722 <AmiBlitz3.ab2@8579>   BSR.w writeword                                          ;moveq #type,d regat
0002C724 <AmiBlitz3.ab2@8580>   MOVEQ.l #$02,D2                                          ;just a word.
0002C728 <AmiBlitz3.ab2@8581> BRA.w JL_0_685C
0002C72C <AmiBlitz3.ab2@8584>   MOVE.b #$3,D1
0002C730 <AmiBlitz3.ab2@8585> BRA.w JL_0_693C
0002C734 <AmiBlitz3.ab2@8589>    BSR.w get1bytemain                                      ;write array paramter code
0002C738 <AmiBlitz3.ab2@8590>    BSR.w getparameter
0002C740 <AmiBlitz3.ab2@8591>   BTST #$1,flagmask+1
0002C744 <AmiBlitz3.ab2@8592>    BEQ.w syntaxerr
0002C748 <AmiBlitz3.ab2@8593>    BSR.w JL_0_8E3C
0002C74C <AmiBlitz3.ab2@8594>    BSR.w get1bytemain
0002C750 <AmiBlitz3.ab2@8595>   CMP.w #$29,D0                                            ;we just want a() or whatever
0002C754 <AmiBlitz3.ab2@8596>    BNE.w syntaxerr
0002C75A <AmiBlitz3.ab2@8597>   MOVE.w notshared,D1
0002C75E <AmiBlitz3.ab2@8598>    BNE.w noarrayerr
0002C764 <AmiBlitz3.ab2@8599>   MOVE.w regnum,D1
0002C766 <AmiBlitz3.ab2@8600>   LSL.w #8,D1
0002C768 <AmiBlitz3.ab2@8601>   LSL.w #1,D1
0002C76C <AmiBlitz3.ab2@8602>   OR.w fbase(PC),D1
0002C772 <AmiBlitz3.ab2@8603>    TST.b varmode
0002C776 <AmiBlitz3.ab2@8604>    BEQ 'l1
0002C77A <AmiBlitz3.ab2@8605>    BCLR #0,d1
0002C77E <AmiBlitz3.ab2@8608>    BSR.w writeword
0002C782 <AmiBlitz3.ab2@8609>   MOVE.w $4(A3),D1
0002C786 <AmiBlitz3.ab2@8610>    BSR.w writeword
0002C78A <AmiBlitz3.ab2@8611> BRA.w putalp
0002C790 <AmiBlitz3.ab2@8615>   MOVE.w regnum,D1
0002C792 <AmiBlitz3.ab2@8616>   LSL.w #8,D1
0002C794 <AmiBlitz3.ab2@8617>   LSL.w #1,D1
0002C798 <AmiBlitz3.ab2@8618>   OR.w fbase(PC),D1
0002C79E <AmiBlitz3.ab2@8619>    TST.b varmode
0002C7A2 <AmiBlitz3.ab2@8620>    BEQ 'l1
0002C7A6 <AmiBlitz3.ab2@8621>    BCLR #0,d1
0002C7AA <AmiBlitz3.ab2@8624>    BSR.w writeword
0002C7AE <AmiBlitz3.ab2@8625>   MOVE.w $8(A3),D1
0002C7B0 <AmiBlitz3.ab2@8626>   LSL.w #2,D1
0002C7B6 <AmiBlitz3.ab2@8627>   MOVE.w varmode,D2
0002C7BA <AmiBlitz3.ab2@8628>    BEQ.w JL_0_69BE
0002C7BC <AmiBlitz3.ab2@8629>   NEG.w D1
0002C7C0 <AmiBlitz3.ab2@8632>    ADD.w $4(A3),D1
0002C7C4 <AmiBlitz3.ab2@8633>    BSR.w writeword
0002C7CA <AmiBlitz3.ab2@8634>   MOVE.w regnum,D1
0002C7CC <AmiBlitz3.ab2@8635>   LSL.w #8,D1
0002C7CE <AmiBlitz3.ab2@8636>   LSL.w #1,D1
0002C7D2 <AmiBlitz3.ab2@8637>   MOVE.w partostack(PC),D2
0002C7D6 <AmiBlitz3.ab2@8638>    BNE.w JL_0_69F4
0002C7DE <AmiBlitz3.ab2@8639>   CMPI.w #$7,regnum
0002C7E2 <AmiBlitz3.ab2@8640>    BCC.w JL_0_69F4
0002C7E6 <AmiBlitz3.ab2@8641>   OR.w pushlast(PC),D1
0002C7EC <AmiBlitz3.ab2@8642>   MOVE.w regnum,D2
0002C7EE <AmiBlitz3.ab2@8643>   SUBQ.w #1,D2
0002C7F0 <AmiBlitz3.ab2@8644>   OR.w D2,D1
0002C7F4 <AmiBlitz3.ab2@8645> BRA.w JL_0_69F8
0002C7F8 <AmiBlitz3.ab2@8648>   OR.w pushadd(PC),D1
0002C7FC <AmiBlitz3.ab2@8651>   BSR.w writeword
0002C804 <AmiBlitz3.ab2@8652>   MOVE.b #$1,partostack
0002C808 <AmiBlitz3.ab2@8653> BRA.w putalp
0002C80C <AmiBlitz3.ab2@8657> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
0002C80E <AmiBlitz3.ab2@8658> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
0002C810 <AmiBlitz3.ab2@8659> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
0002C814 <AmiBlitz3.ab2@8664>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
0002C818 <AmiBlitz3.ab2@8665>    BEQ.w evalu2
0002C81C <AmiBlitz3.ab2@8666> BRA.w eval
0002C822 <AmiBlitz3.ab2@8670>   MOVEA.l libpointer,A1
0002C826 <AmiBlitz3.ab2@8673>    CMPA.w #$0,A1
0002C82A <AmiBlitz3.ab2@8674>    BEQ.w resetlibs__done
0002C830 <AmiBlitz3.ab2@8675>   MOVE.w #-1,$A(A1)
0002C836 <AmiBlitz3.ab2@8676>   BCLR #$7,$C(A1)
0002C838 <AmiBlitz3.ab2@8677>   MOVEA.l (A1),A1
0002C83C <AmiBlitz3.ab2@8678> BRA.w resetlibs__loop
0002C83E <AmiBlitz3.ab2@8681> RTS
0002C842 <AmiBlitz3.ab2@8685>   MOVE.w #$FFFE,D1
0002C846 <AmiBlitz3.ab2@8688>    BSR.w JL_0_6F38
0002C84C <AmiBlitz3.ab2@8691>   TST.w cfetchmode
0002C850 <AmiBlitz3.ab2@8692>    BEQ.w uselib3__noconst
0002C856 <AmiBlitz3.ab2@8693>   BTST #$6,$C(A1)
0002C85A <AmiBlitz3.ab2@8694>    BNE.w uselib3__constok
0002C85E <AmiBlitz3.ab2@8695> BRA.w badconerr                                            ;Can't use this Library!
0002C860 <AmiBlitz3.ab2@8698> RTS
0002C866 <AmiBlitz3.ab2@8701>    BSET #$7,$C(A1)
0002C86A <AmiBlitz3.ab2@8702>    BNE.w JL_0_6C74                                         ;already done....
0002C870 <AmiBlitz3.ab2@8703>    CMPI.w #-1,$A(A1)
0002C874 <AmiBlitz3.ab2@8704>    BNE.w JL_0_6C74                                         ;something already here
0002C87A <AmiBlitz3.ab2@8708>    TST.w dirmode
0002C87E <AmiBlitz3.ab2@8709>    BEQ.b JL_0_6A86
0002C884 <AmiBlitz3.ab2@8710>    TST.b exdebug
0002C888 <AmiBlitz3.ab2@8711>    BEQ 'l1
0002C88C <AmiBlitz3.ab2@8712> BRA.b JL_0_6A86
0002C892 <AmiBlitz3.ab2@8715>   BCLR #$7,$C(A1)
0002C896 <AmiBlitz3.ab2@8716> BRA.w dirliberr
0002C89C <AmiBlitz3.ab2@8719>   MOVE.b debugmode,-(a7)
0002C8A0 <AmiBlitz3.ab2@8720>   MOVEM.l D1/A0/A2,-(A7)
0002C8A8 <AmiBlitz3.ab2@8726>   BTST #$7,use_debugger
0002C8AC <AmiBlitz3.ab2@8727>   BNE 'debugon
0002C8AE <AmiBlitz3.ab2@8728>   CLR.w D1
0002C8B2 <AmiBlitz3.ab2@8729> BRA.b 'debugoff
0002C8B4 <AmiBlitz3.ab2@8732>   SNE D1
0002C8BA <AmiBlitz3.ab2@8735>   MOVE.b d1,debugmode
0002C8BC <AmiBlitz3.ab2@8739>   MOVEA.l A1,A0
0002C8C0 <AmiBlitz3.ab2@8740>   ADDA.l $12(A1),A0
0002C8C4 <AmiBlitz3.ab2@8741>   TST.w -$2(A0)
0002C8C8 <AmiBlitz3.ab2@8742>    BEQ.w JL_0_6AD2
0002C8CC <AmiBlitz3.ab2@8743>   MOVEM.l A0-A1,-(A7)
0002C8D0 <AmiBlitz3.ab2@8744>   MOVE.w #$FB4F,D1
0002C8D4 <AmiBlitz3.ab2@8745>    BSR.w uselib
0002C8D8 <AmiBlitz3.ab2@8746>   MOVEM.l (A7)+,A0-A1
0002C8DE <AmiBlitz3.ab2@8747>   ADDQ.w #1,globalvarpointer
0002C8E6 <AmiBlitz3.ab2@8748>   BCLR #$0,globalvarpointer+1
0002C8EE <AmiBlitz3.ab2@8749>   MOVE.w globalvarpointer,-$6(A0)
0002C8F4 <AmiBlitz3.ab2@8750>   ADDQ.w #4,globalvarpointer
0002C8F8 <AmiBlitz3.ab2@8751>   TST.l -$E(A0)
0002C8FC <AmiBlitz3.ab2@8752>    BEQ.w JL_0_6AD2
0002C902 <AmiBlitz3.ab2@8753>   ADDQ.w #4,globalvarpointer
0002C90A <AmiBlitz3.ab2@8756>   MOVE.l libend,$28(A1)
0002C90C <AmiBlitz3.ab2@8757>   MOVEA.l A1,A0
0002C910 <AmiBlitz3.ab2@8758>   ADDA.l $12(A1),A0
0002C912 <AmiBlitz3.ab2@8759>   MOVE.l A1,D1
0002C916 <AmiBlitz3.ab2@8760>   ADD.l $6(A1),D1
0002C91A <AmiBlitz3.ab2@8761>   TST.l $2C(A1)
0002C91E <AmiBlitz3.ab2@8762>    BEQ.w JL_0_6AFE
0002C924 <AmiBlitz3.ab2@8764>   TST.b debugmode
0002C928 <AmiBlitz3.ab2@8765>    BNE.w JL_0_6AFE
0002C92A <AmiBlitz3.ab2@8766>   MOVE.l A1,D1
0002C92E <AmiBlitz3.ab2@8767>   ADD.l $2C(A1),D1
0002C934 <AmiBlitz3.ab2@8770>   MOVEA.l libend,A2
0002C93A <AmiBlitz3.ab2@8773>   CMPA.l data1start,A2
0002C93E <AmiBlitz3.ab2@8774>    BCS.w JL_0_6B24
0002C946 <AmiBlitz3.ab2@8775>   MOVE.w #$FFFF,dontwrite
0002C948 <AmiBlitz3.ab2@8778>   ADDQ.w #2,A0
0002C94A <AmiBlitz3.ab2@8779>   ADDQ.w #2,A2
0002C94C <AmiBlitz3.ab2@8780>   CMPA.l D1,A0
0002C950 <AmiBlitz3.ab2@8781>    BCS.w JL_0_6B16
0002C954 <AmiBlitz3.ab2@8782> BRA.w JL_0_6B2C
0002C956 <AmiBlitz3.ab2@8785>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
0002C958 <AmiBlitz3.ab2@8786>   CMPA.l D1,A0
0002C95C <AmiBlitz3.ab2@8787>    BCS.w JL_0_6B04
0002C962 <AmiBlitz3.ab2@8790>   MOVE.l A2,libend
0002C966 <AmiBlitz3.ab2@8791>   MOVE.l $20(A1),D1
0002C96A <AmiBlitz3.ab2@8792>    BEQ.w JL_0_6BB8
0002C96E <AmiBlitz3.ab2@8793>   MOVEM.l D0/D2-D3,-(A7)
0002C972 <AmiBlitz3.ab2@8794>   MOVEA.l $24(A1),A0
0002C974 <AmiBlitz3.ab2@8795>   MOVEQ.l #$00,D3
0002C976 <AmiBlitz3.ab2@8798>   MOVE.l (A0)+,D2
0002C97A <AmiBlitz3.ab2@8799>   TST.l $2C(A1)
0002C97E <AmiBlitz3.ab2@8800>    BEQ.w JL_0_6B60
0002C984 <AmiBlitz3.ab2@8801>   TST.b debugmode
0002C988 <AmiBlitz3.ab2@8802>    BNE.w JL_0_6B60
0002C98C <AmiBlitz3.ab2@8803>   CMP.l $2C(A1),D2
0002C990 <AmiBlitz3.ab2@8804>    BCC.w JL_0_6BA0
0002C994 <AmiBlitz3.ab2@8807>   TST.w $0(A1,D2.L)
0002C998 <AmiBlitz3.ab2@8808>    BPL.w JL_0_6B72
0002C99A <AmiBlitz3.ab2@8809>   TST.l D3
0002C99E <AmiBlitz3.ab2@8810>    BNE.w JL_0_6B72
0002C9A0 <AmiBlitz3.ab2@8811>   MOVE.l A0,D0
0002C9A2 <AmiBlitz3.ab2@8812>   MOVE.l D1,D3
0002C9A6 <AmiBlitz3.ab2@8815>   SUB.l $12(A1),D2
0002C9AA <AmiBlitz3.ab2@8816>    BMI.w JL_0_6BA0
0002C9AE <AmiBlitz3.ab2@8817>   ADD.l $28(A1),D2
0002C9B0 <AmiBlitz3.ab2@8818>   MOVE.l D2,-(A7)
0002C9B6 <AmiBlitz3.ab2@8819>   SUB.l destbufferstart,D2
0002C9BA <AmiBlitz3.ab2@8820>    BSR.w addhunkoffset
0002C9BC <AmiBlitz3.ab2@8821>   MOVEA.l (A7)+,A2
0002C9C2 <AmiBlitz3.ab2@8822>   TST.w dontwrite
0002C9C6 <AmiBlitz3.ab2@8823>    BNE.w JL_0_6BA0
0002C9CA <AmiBlitz3.ab2@8824>   MOVE.l $28(A1),D2
0002C9CE <AmiBlitz3.ab2@8825>   SUB.l $12(A1),D2
0002C9D0 <AmiBlitz3.ab2@8826>   ADD.l D2,(A2)
0002C9D2 <AmiBlitz3.ab2@8829>    SUBQ.l #1,D1
0002C9D6 <AmiBlitz3.ab2@8830>    BNE.w JL_0_6B44
0002C9D8 <AmiBlitz3.ab2@8831>   MOVE.l D3,D2
0002C9DC <AmiBlitz3.ab2@8832>    BEQ.w JL_0_6BB4
0002C9DE <AmiBlitz3.ab2@8833>   MOVEA.l D0,A2
0002C9E0 <AmiBlitz3.ab2@8834>   SUBQ.w #4,A2
0002C9E4 <AmiBlitz3.ab2@8835>    BSR.w JL_0_6E34
0002C9E8 <AmiBlitz3.ab2@8838>    MOVEM.l (A7)+,D0/D2-D3
0002C9EC <AmiBlitz3.ab2@8841>    MOVEM.l (A7)+,D1/A0/A2
0002C9F0 <AmiBlitz3.ab2@8842>   MOVEM.l D1-D2,-(A7)
0002C9F4 <AmiBlitz3.ab2@8843>   TST.w $1A(A1)
0002C9F8 <AmiBlitz3.ab2@8844>    BNE.w JL_0_6BD0
0002C9FC <AmiBlitz3.ab2@8845>   CLR.w $A(A1)
0002CA00 <AmiBlitz3.ab2@8846> BRA.w JL_0_6C5E
0002CA06 <AmiBlitz3.ab2@8849>   ADDQ.w #1,globalvarpointer
0002CA0E <AmiBlitz3.ab2@8850>   BCLR #$0,globalvarpointer+1
0002CA16 <AmiBlitz3.ab2@8851>   MOVE.w globalvarpointer,$A(A1)
0002CA1A <AmiBlitz3.ab2@8852>   CMP.w #-$12D,D1
0002CA1E <AmiBlitz3.ab2@8853>    BNE.w JL_0_6C16
0002CA26 <AmiBlitz3.ab2@8854>   MOVE.w $A(A1),movestdn+2
0002CA2E <AmiBlitz3.ab2@8855>   MOVE.w $A(A1),pusha3+2
0002CA36 <AmiBlitz3.ab2@8856>   MOVE.w $A(A1),pusha32+2
0002CA3E <AmiBlitz3.ab2@8857>   MOVE.w $A(A1),pulla3+2
0002CA46 <AmiBlitz3.ab2@8858>   MOVE.w $A(A1),geta3+2
0002CA4A <AmiBlitz3.ab2@8861>    CMP.w #-$3E9,D1
0002CA4E <AmiBlitz3.ab2@8862>    BNE.w JL_0_6C3E
0002CA56 <AmiBlitz3.ab2@8863>   MOVE.w $A(A1),dataget+2
0002CA5E <AmiBlitz3.ab2@8864>   MOVE.w $A(A1),dataput+2
0002CA66 <AmiBlitz3.ab2@8865>   MOVE.w $A(A1),rescode+6
0002CA6E <AmiBlitz3.ab2@8866>   MOVE.w $A(A1),rescode2+2
0002CA74 <AmiBlitz3.ab2@8869>   ADDQ.w #2,globalvarpointer
0002CA78 <AmiBlitz3.ab2@8870>   TST.w $1A(A1)
0002CA7C <AmiBlitz3.ab2@8871>    BMI.w JL_0_6C52
0002CA82 <AmiBlitz3.ab2@8872>   ADDQ.w #2,globalvarpointer
0002CA86 <AmiBlitz3.ab2@8875>   MOVEM.l D1/A1,-(A7)
0002CA8A <AmiBlitz3.ab2@8876>   BSR.w uselib2
0002CA8E <AmiBlitz3.ab2@8877>   MOVEM.l (A7)+,D1/A1
0002CA90 <AmiBlitz3.ab2@8880>   MOVE.w D1,D2
0002CA94 <AmiBlitz3.ab2@8881>   MOVE.l $16(A1),D1
0002CA98 <AmiBlitz3.ab2@8882>    BSR.w uselib2_org
0002CA9C <AmiBlitz3.ab2@8883>   MOVE.l $1C(A1),D1
0002CAA0 <AmiBlitz3.ab2@8884>    BSR.w uselib2_org
0002CAA4 <AmiBlitz3.ab2@8885>   MOVEM.l (A7)+,D1-D2
0002CAAA <AmiBlitz3.ab2@8887>   MOVE.b (a7)+,debugmode
0002CAAC <AmiBlitz3.ab2@8890> RTS
0002CAAE <AmiBlitz3.ab2@8894>   MOVEQ.l #$00,D2
0002CAB4 <AmiBlitz3.ab2@8897>   MOVEA.l tokeslist,A2
0002CAB6 <AmiBlitz3.ab2@8898>   CMPA.l D2,A2
0002CABA <AmiBlitz3.ab2@8899>    BEQ.w JL_0_6CE0
0002CABC <AmiBlitz3.ab2@8900>   MOVE.l A2,-(A7)
0002CABE <AmiBlitz3.ab2@8903>   MOVEQ.l #$00,D3
0002CAC2 <AmiBlitz3.ab2@8906>   MOVEA.l $8(A2),A3
0002CAC4 <AmiBlitz3.ab2@8907>   CMPA.l D3,A3
0002CAC8 <AmiBlitz3.ab2@8908>    BEQ.w JL_0_6CD2
0002CACA <AmiBlitz3.ab2@8909>   MOVE.l A3,-(A7)
0002CACE <AmiBlitz3.ab2@8910>   MOVEM.l D2-D3/A2-A3,-(A7)
0002CAD2 <AmiBlitz3.ab2@8911>   MOVE.w $4(A2),D1
0002CAD6 <AmiBlitz3.ab2@8912>   MOVE.w $6(A2),D2
0002CADA <AmiBlitz3.ab2@8913>    BSR.w JL_0_6CE2
0002CADE <AmiBlitz3.ab2@8914>   MOVEM.l (A7)+,D2-D3/A2-A3
0002CAE4 <AmiBlitz3.ab2@8915>   MOVE.w dontwrite,D0
0002CAE8 <AmiBlitz3.ab2@8916>    BEQ.w JL_0_6CBE
0002CAEA <AmiBlitz3.ab2@8919>   MOVEA.l (A3),A3
0002CAEC <AmiBlitz3.ab2@8920>   CMPA.l D3,A3
0002CAF0 <AmiBlitz3.ab2@8921>    BNE.w JL_0_6CB2
0002CAF4 <AmiBlitz3.ab2@8922> BRA.w JL_0_6CCC
0002CAF8 <AmiBlitz3.ab2@8925>   MOVEA.l $4(A3),A0
0002CAFA <AmiBlitz3.ab2@8926>   MOVE.l D7,(A0)
0002CAFC <AmiBlitz3.ab2@8927>   MOVEA.l (A3),A3
0002CAFE <AmiBlitz3.ab2@8928>   CMPA.l D3,A3
0002CB02 <AmiBlitz3.ab2@8929>    BNE.w JL_0_6CBE
0002CB04 <AmiBlitz3.ab2@8932>   MOVE.l (A7)+,D3
0002CB08 <AmiBlitz3.ab2@8933> BRA.w JL_0_6C88
0002CB0A <AmiBlitz3.ab2@8936>    MOVEA.l (A2),A2
0002CB0C <AmiBlitz3.ab2@8937>   CMPA.l D2,A2
0002CB10 <AmiBlitz3.ab2@8938>    BNE.w JL_0_6C86
0002CB12 <AmiBlitz3.ab2@8939>   MOVE.l (A7)+,D2
0002CB16 <AmiBlitz3.ab2@8940> BRA.w JL_0_6C78
0002CB18 <AmiBlitz3.ab2@8943> RTS
0002CB1A <AmiBlitz3.ab2@8947>   MOVE.w D2,-(A7)
0002CB1E <AmiBlitz3.ab2@8948>    BSR.w searchinstr
0002CB20 <AmiBlitz3.ab2@8949>   MOVE.w (A7)+,D2
0002CB28 <AmiBlitz3.ab2@8950>   BCLR #$7,blitzmode
0002CB2C <AmiBlitz3.ab2@8951>   BCLR #$E,D2
0002CB30 <AmiBlitz3.ab2@8952>    BEQ.w JL_0_6D02
0002CB38 <AmiBlitz3.ab2@8953>   BSET #$7,blitzmode
0002CB3A <AmiBlitz3.ab2@8956>   TST.w (A3)
0002CB3E <AmiBlitz3.ab2@8957>    BEQ.w JL_0_6DAC
0002CB44 <AmiBlitz3.ab2@8958>   BTST #$2,$1(A3)
0002CB48 <AmiBlitz3.ab2@8959>    BNE.w tokeerr
0002CB4E <AmiBlitz3.ab2@8960>   BTST #$3,$1(A3)
0002CB52 <AmiBlitz3.ab2@8961>    BNE.w tokeerr
0002CB56 <AmiBlitz3.ab2@8962>   LEA $6(A3),A3
0002CB58 <AmiBlitz3.ab2@8965>   MOVE.w (A3)+,D0
0002CB5C <AmiBlitz3.ab2@8966>    BMI.w tokeerr
0002CB60 <AmiBlitz3.ab2@8967>   ANDI.w #$FF,D0
0002CB62 <AmiBlitz3.ab2@8968>   ADDA.w D0,A3
0002CB64 <AmiBlitz3.ab2@8969>   ADDQ.w #1,A3
0002CB66 <AmiBlitz3.ab2@8970>   EXG.l D0,A3
0002CB6A <AmiBlitz3.ab2@8971>   BCLR #$0,D0
0002CB6C <AmiBlitz3.ab2@8972>   EXG.l D0,A3
0002CB6E <AmiBlitz3.ab2@8973>   SUBQ.w #1,D2
0002CB72 <AmiBlitz3.ab2@8974>    BPL.w JL_0_6D98
0002CB74 <AmiBlitz3.ab2@8975>   TST.w (A3)
0002CB78 <AmiBlitz3.ab2@8976>    BNE.w JL_0_6D76
0002CB7C <AmiBlitz3.ab2@8977>   MOVE.l $2(A3),D0
0002CB80 <AmiBlitz3.ab2@8978>   OR.l $A(A3),D0
0002CB84 <AmiBlitz3.ab2@8979>    BNE.w JL_0_6D76
0002CB8A <AmiBlitz3.ab2@8980>   BTST #$0,$9(A3)
0002CB8E <AmiBlitz3.ab2@8981>    BNE.w JL_0_6D76
0002CB92 <AmiBlitz3.ab2@8982>   MOVE.l $6(A3),D7
0002CB96 <AmiBlitz3.ab2@8983>   MOVE.w $0(A2,D7.L),D0
0002CB9A <AmiBlitz3.ab2@8984>   ANDI.w #$F000,D0
0002CB9E <AmiBlitz3.ab2@8985>   CMP.w #-$6000,D0
0002CBA2 <AmiBlitz3.ab2@8986>    BEQ.w JL_0_6D76
0002CBA6 <AmiBlitz3.ab2@8989>   SUB.l $12(A2),D7
0002CBAA <AmiBlitz3.ab2@8990>   ADD.l $28(A2),D7
0002CBAC <AmiBlitz3.ab2@8991> RTS
0002CBB2 <AmiBlitz3.ab2@8995>   LEA cutejsr,A0
0002CBB8 <AmiBlitz3.ab2@8998>   MOVE.l destpointer,-(A7)
0002CBC0 <AmiBlitz3.ab2@8999>   MOVE.w #$FFFF,lasta6
0002CBC2 <AmiBlitz3.ab2@9002>    JSR (A0)
0002CBC6 <AmiBlitz3.ab2@9003>   MOVE.w #$4E75,D1
0002CBCA <AmiBlitz3.ab2@9004>    BSR.w writeword
0002CBCC <AmiBlitz3.ab2@9005>   MOVE.l (A7)+,D7
0002CBCE <AmiBlitz3.ab2@9006> RTS
0002CBD0 <AmiBlitz3.ab2@9010>   TST.w (A3)+
0002CBD4 <AmiBlitz3.ab2@9011>    BEQ.w JL_0_6DA4
0002CBD6 <AmiBlitz3.ab2@9012>   ADDQ.w #2,A3
0002CBDA <AmiBlitz3.ab2@9013> BRA.w JL_0_6D98
0002CBDE <AmiBlitz3.ab2@9016>   LEA $C(A3),A3
0002CBE2 <AmiBlitz3.ab2@9017> BRA.w JL_0_6D20
0002CBE4 <AmiBlitz3.ab2@9021>   TST.w D2
0002CBE8 <AmiBlitz3.ab2@9022>    BNE.w tokeerr
0002CBEC <AmiBlitz3.ab2@9023>   TST.w $6(A3)
0002CBF0 <AmiBlitz3.ab2@9024>    BNE.w JL_0_6DE4
0002CBF4 <AmiBlitz3.ab2@9025>   MOVE.l $8(A3),D0
0002CBF8 <AmiBlitz3.ab2@9026>   OR.l $10(A3),D0
0002CBFC <AmiBlitz3.ab2@9027>    BNE.w JL_0_6DE4
0002CC02 <AmiBlitz3.ab2@9028>   BTST #$0,$F(A3)
0002CC06 <AmiBlitz3.ab2@9029>    BNE.w JL_0_6DE4
0002CC0A <AmiBlitz3.ab2@9030>   MOVE.l $C(A3),D7
0002CC0E <AmiBlitz3.ab2@9031>   MOVE.w $0(A2,D7.L),D0
0002CC12 <AmiBlitz3.ab2@9032>   ANDI.w #$F000,D0
0002CC16 <AmiBlitz3.ab2@9033>   CMP.w #-$6000,D0
0002CC1A <AmiBlitz3.ab2@9034>    BNE.w JL_0_6D6C
0002CC1C <AmiBlitz3.ab2@9037>   MOVE.l A3,D1
0002CC1E <AmiBlitz3.ab2@9038>   SUB.l A2,D1
0002CC24 <AmiBlitz3.ab2@9039>   LEA Amakelibsub,A0
0002CC28 <AmiBlitz3.ab2@9040> BRA.w JL_0_6D7C
0002CC2E <AmiBlitz3.ab2@9044>   MOVEA.l _execbase,A6
0002CC34 <AmiBlitz3.ab2@9045>   MOVEA.l tokeslist,A2
0002CC3A <AmiBlitz3.ab2@9046>   CLR.l tokeslist
0002CC3E <AmiBlitz3.ab2@9049>     CMPA.w #$0,A2
0002CC42 <AmiBlitz3.ab2@9050>      BEQ.w JL_0_6E32
0002CC46 <AmiBlitz3.ab2@9051>     MOVEA.l $8(A2),A3
0002CC4A <AmiBlitz3.ab2@9054>       CMPA.w #$0,A3
0002CC4E <AmiBlitz3.ab2@9055>        BEQ.w JL_0_6E24
0002CC50 <AmiBlitz3.ab2@9056>       MOVEA.l A3,A1
0002CC52 <AmiBlitz3.ab2@9057>       MOVEA.l (A3),A3
0002CC54 <AmiBlitz3.ab2@9058>       MOVEQ.l #$08,D0
0002CC5A <AmiBlitz3.ab2@9059>       MOVE.l mempool,a0
0002CC60 <AmiBlitz3.ab2@9060>       MOVEA.l _execbase,A6
0002CC64 <AmiBlitz3.ab2@9061>       JSR _FreePooled(A6)
0002CC68 <AmiBlitz3.ab2@9062> BRA.w JL_0_6E0E
0002CC6A <AmiBlitz3.ab2@9065>     MOVEA.l A2,A1
0002CC6C <AmiBlitz3.ab2@9066>     MOVEA.l (A2),A2
0002CC6E <AmiBlitz3.ab2@9067>     MOVEQ.l #$0C,D0
0002CC74 <AmiBlitz3.ab2@9068>     MOVE.l mempool,a0
0002CC7A <AmiBlitz3.ab2@9069>     MOVEA.l _execbase,A6
0002CC7E <AmiBlitz3.ab2@9070>     JSR _FreePooled(A6)
0002CC82 <AmiBlitz3.ab2@9071> BRA.w JL_0_6E02
0002CC84 <AmiBlitz3.ab2@9074> RTS
0002CC88 <AmiBlitz3.ab2@9078>   MOVEM.l D3-D5/A1-A6,-(A7)
0002CC8A <AmiBlitz3.ab2@9079>   MOVEA.l A1,A4
0002CC8C <AmiBlitz3.ab2@9082>   MOVE.l (A2)+,D3
0002CC90 <AmiBlitz3.ab2@9083>   MOVE.w $0(A4,D3.L),D5
0002CC94 <AmiBlitz3.ab2@9084>    BPL.w JL_0_6E7A
0002CC98 <AmiBlitz3.ab2@9085>   TST.l $2C(A4)
0002CC9C <AmiBlitz3.ab2@9086>    BEQ.w JL_0_6E5E
0002CCA2 <AmiBlitz3.ab2@9087>   TST.b debugmode
0002CCA6 <AmiBlitz3.ab2@9088>    BNE.w JL_0_6E5E
0002CCAA <AmiBlitz3.ab2@9089>   CMP.l $2C(A4),D3
0002CCAE <AmiBlitz3.ab2@9090>    BCC.w JL_0_6E7A
0002CCB2 <AmiBlitz3.ab2@9093>   BCLR #$F,D5
0002CCB6 <AmiBlitz3.ab2@9094>   MOVE.w $2(A4,D3.L),D4
0002CCBA <AmiBlitz3.ab2@9095>   SUB.l $12(A4),D3
0002CCBE <AmiBlitz3.ab2@9096>   ADD.l $28(A4),D3
0002CCC2 <AmiBlitz3.ab2@9097>   MOVEM.l D2/A2/A4,-(A7)
0002CCC6 <AmiBlitz3.ab2@9098>    BSR.w JL_0_6E86
0002CCCA <AmiBlitz3.ab2@9099>   MOVEM.l (A7)+,D2/A2/A4
0002CCCC <AmiBlitz3.ab2@9102>   SUBQ.l #1,D2
0002CCD0 <AmiBlitz3.ab2@9103>    BNE.w JL_0_6E3A
0002CCD4 <AmiBlitz3.ab2@9104>   MOVEM.l (A7)+,D3-D5/A1-A6
0002CCD6 <AmiBlitz3.ab2@9105> RTS
0002CCDC <AmiBlitz3.ab2@9109>   LEA tokeslist,A3
0002CCE2 <AmiBlitz3.ab2@9110>   MOVEA.l _execbase,A6
0002CCE4 <AmiBlitz3.ab2@9113>   MOVE.l (A3),D0
0002CCE8 <AmiBlitz3.ab2@9114>    BEQ.w JL_0_6EAC
0002CCEA <AmiBlitz3.ab2@9115>   MOVEA.l D0,A3
0002CCEE <AmiBlitz3.ab2@9116>   CMP.w $4(A3),D4
0002CCF2 <AmiBlitz3.ab2@9117>    BNE.w JL_0_6E90
0002CCF6 <AmiBlitz3.ab2@9118>   CMP.w $6(A3),D5
0002CCFA <AmiBlitz3.ab2@9119>    BNE.w JL_0_6E90
0002CCFE <AmiBlitz3.ab2@9120> BRA.w JL_0_6ED0
0002CD00 <AmiBlitz3.ab2@9123>   MOVEQ.l #$0C,D0
0002CD02 <AmiBlitz3.ab2@9124>   MOVEQ.l #$01,D1
0002CD08 <AmiBlitz3.ab2@9125>   MOVE.l mempool,a0
0002CD0C <AmiBlitz3.ab2@9126>   JSR _AllocPooled(a6)
0002CD0E <AmiBlitz3.ab2@9128>   MOVEA.l D0,A3
0002CD14 <AmiBlitz3.ab2@9129>   MOVE.l tokeslist,(A3)
0002CD1A <AmiBlitz3.ab2@9130>   MOVE.l A3,tokeslist
0002CD1E <AmiBlitz3.ab2@9131>   MOVE.w D4,$4(A3)
0002CD22 <AmiBlitz3.ab2@9132>   MOVE.w D5,$6(A3)
0002CD26 <AmiBlitz3.ab2@9133>   CLR.l $8(A3)
0002CD28 <AmiBlitz3.ab2@9136>   MOVEQ.l #$08,D0
0002CD2A <AmiBlitz3.ab2@9137>   MOVEQ.l #$01,D1
0002CD30 <AmiBlitz3.ab2@9138>   MOVE.l mempool,a0
0002CD34 <AmiBlitz3.ab2@9139>   JSR _AllocPooled(a6)
0002CD36 <AmiBlitz3.ab2@9141>   MOVEA.l D0,A0
0002CD3A <AmiBlitz3.ab2@9142>   MOVE.l D3,$4(A0)
0002CD3E <AmiBlitz3.ab2@9143>   MOVE.l $8(A3),(A0)
0002CD42 <AmiBlitz3.ab2@9144>   MOVE.l A0,$8(A3)
0002CD44 <AmiBlitz3.ab2@9145>   MOVE.w D4,D1
0002CD48 <AmiBlitz3.ab2@9146> BRA.w searchinstr
0002CD4C <AmiBlitz3.ab2@9149> tokeslist: Ds.l 1
0002CD50 <AmiBlitz3.ab2@9162>   BEQ.w uselib2_org__skip
0002CD52 <AmiBlitz3.ab2@9163>   MOVE.l A1,-(A7)
0002CD54 <AmiBlitz3.ab2@9164>   ADDA.l D1,A1
0002CD56 <AmiBlitz3.ab2@9165>   ADDQ.w #6,A1
0002CD58 <AmiBlitz3.ab2@9168>     MOVE.w (A1)+,D1
0002CD5C <AmiBlitz3.ab2@9169>     BEQ.w uselib2_org__done
0002CD5E <AmiBlitz3.ab2@9170>     CMP.w D2,D1
0002CD62 <AmiBlitz3.ab2@9171>     BEQ.w uselib2_org__skip2
0002CD64 <AmiBlitz3.ab2@9172>     MOVE.l A1,-(A7)
0002CD68 <AmiBlitz3.ab2@9173>     BSR.w uselib
0002CD6A <AmiBlitz3.ab2@9174>     MOVEA.l (A7)+,A1
0002CD6C <AmiBlitz3.ab2@9177>     ADDQ.w #2,A1
0002CD70 <AmiBlitz3.ab2@9178> BRA.w uselib2_org__loop
0002CD72 <AmiBlitz3.ab2@9181>   MOVEA.l (A7)+,A1
0002CD74 <AmiBlitz3.ab2@9184> RTS
0002CD7A <AmiBlitz3.ab2@9188>   MOVEA.l libpointer,A1
0002CD7E <AmiBlitz3.ab2@9191>   CMPA.w #$0,A1
0002CD82 <AmiBlitz3.ab2@9192>    BEQ.b JL_0_6F36
0002CD86 <AmiBlitz3.ab2@9193>   CMP.w $4(A1),D1
0002CD8A <AmiBlitz3.ab2@9194>    BEQ.w JL_0_6F34
0002CD8C <AmiBlitz3.ab2@9195>   MOVEA.l (A1),A1
0002CD90 <AmiBlitz3.ab2@9196> BRA.w JL_0_6F20
0002CD92 <AmiBlitz3.ab2@9199>   MOVEQ.l #-$01,D1
0002CD94 <AmiBlitz3.ab2@9202> RTS
0002CD98 <AmiBlitz3.ab2@9206>   MOVEM.l d0/a2,-(a7)
0002CD9A <AmiBlitz3.ab2@9207>   MOVEQ #0,d0
0002CDA0 <AmiBlitz3.ab2@9208>   LEA instrtab+4,a2
0002CDA2 <AmiBlitz3.ab2@9209>   MOVE.w d1,d0
0002CDA4 <AmiBlitz3.ab2@9210>   ASL.l #3,d0
0002CDA8 <AmiBlitz3.ab2@9211>   MOVE.l 0(a2,d0.l),a1                                     ;*8
0002CDAE <AmiBlitz3.ab2@9212>   CMP.l #0,a1
0002CDB2 <AmiBlitz3.ab2@9213>   BNE JL_0_6F54b
0002CDB8 <AmiBlitz3.ab2@9215>   MOVEA.l libpointer,A1
0002CDBC <AmiBlitz3.ab2@9218>     CMPA.w #$0,A1
0002CDC0 <AmiBlitz3.ab2@9219>     BEQ.w noliberr
0002CDC4 <AmiBlitz3.ab2@9220>     CMP.w $4(A1),D1
0002CDC8 <AmiBlitz3.ab2@9221>     BEQ.w JL_0_6F54
0002CDCA <AmiBlitz3.ab2@9222>    MOVEA.l (A1),A1
0002CDCE <AmiBlitz3.ab2@9223> BRA.w JL_0_6F3E
0002CDD2 <AmiBlitz3.ab2@9226>   MOVE.l a1,0(a2,d0.l)
0002CDD6 <AmiBlitz3.ab2@9229>   MOVEM.l (a7)+,d0/a2
0002CDD8 <AmiBlitz3.ab2@9230> RTS
0002CDDC <AmiBlitz3.ab2@9233>   MOVEM.l d0-d1/a1,-(a7)
0002CDDE <AmiBlitz3.ab2@9234>   MOVEQ #0,d0
0002CDE4 <AmiBlitz3.ab2@9235>   LEA instrtab,a1
0002CDE6 <AmiBlitz3.ab2@9236>   MOVE.w d1,d0
0002CDE8 <AmiBlitz3.ab2@9237>   ASL.l #3,d0
0002CDEC <AmiBlitz3.ab2@9238>   MOVE.l 0(a1,d0.l),a3
0002CDF0 <AmiBlitz3.ab2@9239>   MOVE.l 4(a1,d0.l),a2
0002CDF6 <AmiBlitz3.ab2@9240>   CMP.l #0,a3
0002CDFA <AmiBlitz3.ab2@9241>   BNE JL_0_6F92b
0002CE00 <AmiBlitz3.ab2@9243>   MOVEA.l libpointer,A2
0002CE04 <AmiBlitz3.ab2@9246>   CMPA.w #$0,A2
0002CE08 <AmiBlitz3.ab2@9247>   BEQ.w notokerr
0002CE0C <AmiBlitz3.ab2@9248>   CMP.w $E(A2),D1
0002CE10 <AmiBlitz3.ab2@9249>   BCS.w JL_0_6FB8
0002CE14 <AmiBlitz3.ab2@9250>   CMP.w $10(A2),D1
0002CE18 <AmiBlitz3.ab2@9251>   BCC.w JL_0_6FB8
0002CE1C <AmiBlitz3.ab2@9252>   LEA $30(A2),A3
0002CE20 <AmiBlitz3.ab2@9253>   TST.w $4(A2)
0002CE24 <AmiBlitz3.ab2@9254>   BPL.w JL_0_6FA6
0002CE28 <AmiBlitz3.ab2@9257>     CMP.w $E(A2),D1
0002CE2C <AmiBlitz3.ab2@9258>     BEQ.w JL_0_6F92
0002CE2E <AmiBlitz3.ab2@9259>     SUBQ.w #1,D1
0002CE32 <AmiBlitz3.ab2@9260>     MOVEA.l $2(A3),A3
0002CE36 <AmiBlitz3.ab2@9261> BRA.w JL_0_6F80
0002CE3A <AmiBlitz3.ab2@9264>   MOVE.l a3,0(a1,d0.l)
0002CE3E <AmiBlitz3.ab2@9265>   MOVE.l a2,4(a1,d0.l)
0002CE42 <AmiBlitz3.ab2@9268>   MOVEM.l (a7)+,d0-d1/a1
0002CE46 <AmiBlitz3.ab2@9269>   MOVEM.l D1/A1-a3,-(A7)
0002CE4A <AmiBlitz3.ab2@9270>   CMP.w #1,(a3)
0002CE4E <AmiBlitz3.ab2@9271>   BNE.s ex10
0002CE56 <AmiBlitz3.ab2@9272>   CMP.l #$12345678,$e(a3)
0002CE5A <AmiBlitz3.ab2@9273>   BNE.s ex10
0002CE60 <AmiBlitz3.ab2@9274>   CMP.w #$ffff,$16(a3)
0002CE64 <AmiBlitz3.ab2@9275>   BNE.s ex10
0002CE68 <AmiBlitz3.ab2@9276>   MOVE.l $12(a3),d1
0002CE6C <AmiBlitz3.ab2@9277>   BEQ.s ex10
0002CE72 <AmiBlitz3.ab2@9278>   LEA pluginbase,a3
0002CE76 <AmiBlitz3.ab2@9280> JMP 0(a2,d1.l)                                             ;plugin
0002CE7A <AmiBlitz3.ab2@9283>   MOVEM.l (A7)+,D1/A1-a3
0002CE80 <AmiBlitz3.ab2@9284>   JSR stripspaces
0002CE82 <AmiBlitz3.ab2@9285>   MOVEQ #0,d0
0002CE84 <AmiBlitz3.ab2@9286>   MOVE.b (a5)+,d0
0002CE8A <AmiBlitz3.ab2@9287>   MOVE.w d0,lastchar
0002CE8C <AmiBlitz3.ab2@9288>   ADDQ.l #4,a7
0002CE8E <AmiBlitz3.ab2@9289> RTS
0002CE90 <AmiBlitz3.ab2@9293>   MOVEA.l A2,A1
0002CE96 <AmiBlitz3.ab2@9294>   CLR.b newmode
0002CE9A <AmiBlitz3.ab2@9295>   MOVE.w $4(A1),D1
0002CE9E <AmiBlitz3.ab2@9298>   BSR.w uselib3
0002CEA2 <AmiBlitz3.ab2@9299>   MOVEM.l (A7)+,D1/A1-a3
0002CEA4 <AmiBlitz3.ab2@9300> RTS
0002CEAA <AmiBlitz3.ab2@9303>   MOVE.w globalvarpointer,-(a7)
0002CEB2 <AmiBlitz3.ab2@9304>   MOVE.w #$8004,globalvarpointer
0002CEB6 <AmiBlitz3.ab2@9305>   BSR.w uselib3
0002CEBC <AmiBlitz3.ab2@9306>   MOVE.w (a7)+,globalvarpointer
0002CEC0 <AmiBlitz3.ab2@9307>   MOVEM.l (A7)+,D1/A1-a3
0002CEC2 <AmiBlitz3.ab2@9308> RTS
0002CEC6 <AmiBlitz3.ab2@9311>     CMP.w $E(A2),D1
0002CECA <AmiBlitz3.ab2@9312>     BEQ.w JL_0_6F92
0002CECC <AmiBlitz3.ab2@9313>     SUBQ.w #1,D1
0002CED0 <AmiBlitz3.ab2@9314>     MOVEA.l $2(A3),A3
0002CED4 <AmiBlitz3.ab2@9315> BRA.w JL_0_6FA6
0002CED6 <AmiBlitz3.ab2@9318>   MOVEA.l (A2),A2
0002CEDA <AmiBlitz3.ab2@9319> BRA.w JL_0_6F5C
0002CEE0 <AmiBlitz3.ab2@9322> JMP writeword
0002CEE4 <AmiBlitz3.ab2@9325> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
0002CEE8 <AmiBlitz3.ab2@9326> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
0002CEEC <AmiBlitz3.ab2@9327> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
0002CEEE <AmiBlitz3.ab2@9333>   TST.l D0
0002CEF2 <AmiBlitz3.ab2@9334>   BEQ.w exit_loadlibsfile
0002CEF4 <AmiBlitz3.ab2@9335>     MOVE.l D0,D6                                           ;d6=len
0002CEFA <AmiBlitz3.ab2@9336>     MOVEA.l _dosbase,A6
0002CF00 <AmiBlitz3.ab2@9337>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002CF04 <AmiBlitz3.ab2@9338>     JSR _Open(A6)
0002CF06 <AmiBlitz3.ab2@9339>     MOVE.l D0,D7
0002CF0A <AmiBlitz3.ab2@9340>     BEQ.w exit_loadlibsfile
0002CF0C <AmiBlitz3.ab2@9341>       MOVE.l D6,D0
0002CF0E <AmiBlitz3.ab2@9342>       MOVEQ.l #$01,D1
0002CF14 <AmiBlitz3.ab2@9343>       MOVEA.l _execbase,A6
0002CF1A <AmiBlitz3.ab2@9344>       MOVE.l mempool,a0
0002CF1E <AmiBlitz3.ab2@9345>       JSR _AllocPooled(a6)
0002CF20 <AmiBlitz3.ab2@9346>       MOVE.l D0,D5                                         ;start address
0002CF22 <AmiBlitz3.ab2@9348>       MOVE.l D7,D1                                         ; handle
0002CF24 <AmiBlitz3.ab2@9349>       MOVE.l D5,D2                                         ; buffer addr
0002CF26 <AmiBlitz3.ab2@9350>       MOVE.l D6,D3                                         ; size
0002CF2C <AmiBlitz3.ab2@9351>       MOVEA.l _dosbase,A6
0002CF30 <AmiBlitz3.ab2@9352>       JSR _Read(A6)
0002CF32 <AmiBlitz3.ab2@9353>       MOVE.l D7,D1
0002CF36 <AmiBlitz3.ab2@9354>       JSR _Close(A6)
0002CF38 <AmiBlitz3.ab2@9356>       MOVEA.l D5,A0                                        ; buffer addr
0002CF3A <AmiBlitz3.ab2@9362>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
0002CF3E <AmiBlitz3.ab2@9363>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
0002CF42 <AmiBlitz3.ab2@9364>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
0002CF44 <AmiBlitz3.ab2@9365>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
0002CF46 <AmiBlitz3.ab2@9366>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
0002CF48 <AmiBlitz3.ab2@9367>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
0002CF4C <AmiBlitz3.ab2@9368>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
0002CF4E <AmiBlitz3.ab2@9369>           ADD.l D0,D0                                      ;   verdoppele D0
0002CF50 <AmiBlitz3.ab2@9370>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
0002CF54 <AmiBlitz3.ab2@9371>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
0002CF58 <AmiBlitz3.ab2@9372>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
0002CF5C <AmiBlitz3.ab2@9373>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
0002CF5E <AmiBlitz3.ab2@9374>           CMPA.l A0,A2
0002CF62 <AmiBlitz3.ab2@9375>           BCC.b JL_0_7010                                  ; wenn A0=>A2
0002CF68 <AmiBlitz3.ab2@9376>             MOVE.l -$8(A2),$20(A1)                         ;
0002CF6C <AmiBlitz3.ab2@9377>             MOVE.l A2,$24(A1)                              ;
0002CF70 <AmiBlitz3.ab2@9378> BRA.w JL_0_7010
0002CF72 <AmiBlitz3.ab2@9381>       MOVE.l D5,D0
0002CF74 <AmiBlitz3.ab2@9384> RTS
0002CF9E <AmiBlitz3.ab2@9388>   !basic
0002D012 <AmiBlitz3.ab2@9389>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
0002D046 <AmiBlitz3.ab2@9390>    dos_Delete{tempmapping$}
0002D08A <AmiBlitz3.ab2@9391>    fid.l = file_Open{tempmapping$,#file_forcewrite}
0002D0A8 <AmiBlitz3.ab2@9392>   !asm
0002D0AE <AmiBlitz3.ab2@9394>   LEA libpointer,A3
0002D0B4 <AmiBlitz3.ab2@9398>   MOVE.l size_deflibs,D0
0002D0BA <AmiBlitz3.ab2@9399>   MOVE.l deflib,d1
0002D0BE <AmiBlitz3.ab2@9400>   BEQ 'l1
0002D0C2 <AmiBlitz3.ab2@9401> BRA 'l2
0002D0C8 <AmiBlitz3.ab2@9404>   MOVE.l #str_path_deflibs,D1
0002D0CC <AmiBlitz3.ab2@9407>   BSR.w load_libsfile
0002D0D2 <AmiBlitz3.ab2@9408>   MOVE.l D0,ptr_deflibs
0002D0D8 <AmiBlitz3.ab2@9411>   MOVE.l size_acidlibs,D0
0002D0DE <AmiBlitz3.ab2@9412>   MOVE.l #str_path_acidlibs,D1
0002D0E2 <AmiBlitz3.ab2@9413>   BSR.w load_libsfile
0002D0E8 <AmiBlitz3.ab2@9414>   MOVE.l D0,ptr_acidlibs
0002D0EA <AmiBlitz3.ab2@9418>   CLR.l (A3)
0002D0F0 <AmiBlitz3.ab2@9419>   MOVE.l A3,ptr_userlibs
0002D0F6 <AmiBlitz3.ab2@9424>   LEA str_libfilename,A0
0002D0FC <AmiBlitz3.ab2@9425>   LEA str_path_userlibs,A1
0002D0FE <AmiBlitz3.ab2@9428>     MOVE.b (A1)+,(A0)+
0002D102 <AmiBlitz3.ab2@9429>   BNE.b JL_0_708E
0002D104 <AmiBlitz3.ab2@9431>   SUBQ.w #1,A0
0002D108 <AmiBlitz3.ab2@9432>   MOVE.b #$2F,(A0)+
0002D10A <AmiBlitz3.ab2@9435>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
0002D110 <AmiBlitz3.ab2@9437>   LEA ptr_userlibs_list,A2
0002D116 <AmiBlitz3.ab2@9438>   MOVEA.l ptr_userlibs,A3
0002D11C <AmiBlitz3.ab2@9439>   MOVEA.l _dosbase,A6
0002D11E <AmiBlitz3.ab2@9444>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
0002D122 <AmiBlitz3.ab2@9445>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
0002D124 <AmiBlitz3.ab2@9447>       CLR.l (A3)
0002D126 <AmiBlitz3.ab2@9448>       ADDQ.w #4,A7
0002D150 <AmiBlitz3.ab2@9449>       !basic
0002D164 <AmiBlitz3.ab2@9450>       If fid<>-1
0002D16E <AmiBlitz3.ab2@9451>         file_Close{fid}
0002D17A <AmiBlitz3.ab2@9452>         fid = -1
0002D198 <AmiBlitz3.ab2@9454>       !asm
0002D19C <AmiBlitz3.ab2@9455> BRA.w process_libraries
0002D19E <AmiBlitz3.ab2@9458>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
0002D1A2 <AmiBlitz3.ab2@9459>       TST.w $4(A2)                                         ; naechste addresse pruefen
0002D1A6 <AmiBlitz3.ab2@9460>     BEQ.b JL_0_70BA
0002D1AA <AmiBlitz3.ab2@9462>     LEA $6(A2),A1
0002D1AC <AmiBlitz3.ab2@9463>     MOVEA.l (A7),A0
0002D1AE <AmiBlitz3.ab2@9466>       MOVE.b (A1)+,(A0)+
0002D1B2 <AmiBlitz3.ab2@9467>     BNE.w JL_0_70D4
0002D1B4 <AmiBlitz3.ab2@9471>     MOVE.l A0,-(A7)
0002D1BA <AmiBlitz3.ab2@9472>     MOVE.l #str_libfilename,D1
0002D1BC <AmiBlitz3.ab2@9473>     MOVEQ.l #-$02,D2
0002D1C2 <AmiBlitz3.ab2@9474>     MOVEA.l _dosbase,A6
0002D1C6 <AmiBlitz3.ab2@9475>      JSR _Lock(A6)
0002D1C8 <AmiBlitz3.ab2@9476>     MOVE.l D0,D1
0002D1CC <AmiBlitz3.ab2@9477>      BEQ.w JL_0_7156
0002D1CE <AmiBlitz3.ab2@9478>     MOVEA.l (A7),A0
0002D1D4 <AmiBlitz3.ab2@9479>     MOVE.b #$2F,-$1(A0)
0002D1D6 <AmiBlitz3.ab2@9482>     MOVE.l D1,-(A7)
0002D1DC <AmiBlitz3.ab2@9483>     MOVE.l #ptr_parameterstore,D2
0002D1E2 <AmiBlitz3.ab2@9484>     MOVEA.l _dosbase,A6
0002D1E6 <AmiBlitz3.ab2@9485>     JSR _Examine(A6)
0002D1E8 <AmiBlitz3.ab2@9486>     TST.l D0
0002D1EC <AmiBlitz3.ab2@9487>      BEQ.w JL_0_7150
0002D1F2 <AmiBlitz3.ab2@9490>     LEA fib_FileName,A0
0002D1F6 <AmiBlitz3.ab2@9491>     BSR.w check_for_infoextention
0002D1FA <AmiBlitz3.ab2@9492>     BEQ.w JL_0_7150
0002D224 <AmiBlitz3.ab2@9495>     !basic
0002D2A8 <AmiBlitz3.ab2@9496>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002D2C6 <AmiBlitz3.ab2@9497>     !asm
0002D2CC <AmiBlitz3.ab2@9498>     MOVE.l #str_libfilename,D1
0002D2D0 <AmiBlitz3.ab2@9499>     BSR.w open_userlibfile
0002D2D2 <AmiBlitz3.ab2@9502>     MOVE.l (A7)+,D1
0002D2D8 <AmiBlitz3.ab2@9503>     MOVEA.l _dosbase,A6
0002D2DC <AmiBlitz3.ab2@9504>     JSR _UnLock(A6)
0002D2DE <AmiBlitz3.ab2@9507>     ADDQ.w #4,A7
0002D2E2 <AmiBlitz3.ab2@9508> BRA.w JL_0_70BA
0002D2E8 <AmiBlitz3.ab2@9511>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002D2EE <AmiBlitz3.ab2@9512>   MOVEA.l _dosbase,A6
0002D2F2 <AmiBlitz3.ab2@9513>    JSR _Open(A6)
0002D2F4 <AmiBlitz3.ab2@9514>   MOVE.l D0,D7
0002D2F8 <AmiBlitz3.ab2@9515>    BEQ.w exit_userlibfile
0002D2FA <AmiBlitz3.ab2@9518>   MOVE.l D7,D1                                             ; filehandle
0002D300 <AmiBlitz3.ab2@9519>   MOVE.l #optstuff,D2                                     ; buffer
0002D306 <AmiBlitz3.ab2@9520>   MOVEA.l _dosbase,A6
0002D308 <AmiBlitz3.ab2@9521>   MOVEQ.l #$20,D3                                          ; size
0002D30C <AmiBlitz3.ab2@9522>   JSR _Read(A6)
0002D312 <AmiBlitz3.ab2@9525>   MOVE.l optstuff+28,D6
0002D314 <AmiBlitz3.ab2@9526>   LSL.l #2,D6
0002D316 <AmiBlitz3.ab2@9527>   MOVE.l D6,D0
0002D318 <AmiBlitz3.ab2@9528>   MOVEQ.l #$01,D1
0002D31E <AmiBlitz3.ab2@9529>   MOVEA.l _execbase,A6
0002D324 <AmiBlitz3.ab2@9530>   MOVE.l mempool,a0
0002D328 <AmiBlitz3.ab2@9531>   JSR _AllocPooled(a6)
0002D32A <AmiBlitz3.ab2@9532>   MOVEA.l D0,A5
0002D330 <AmiBlitz3.ab2@9535>   MOVEA.l _dosbase,A6
0002D332 <AmiBlitz3.ab2@9536>   MOVE.l D7,D1                                             ; filehandle
0002D334 <AmiBlitz3.ab2@9537>   MOVE.l A5,D2                                             ; buffer
0002D336 <AmiBlitz3.ab2@9538>   MOVE.l D6,D3                                             ; size
0002D33A <AmiBlitz3.ab2@9539>    JSR _Read(A6)
0002D33C <AmiBlitz3.ab2@9540>   MOVE.l A5,(A3)
0002D33E <AmiBlitz3.ab2@9542>   MOVE.l A5,d0
0002D340 <AmiBlitz3.ab2@9544>   MOVEA.l A5,A3
0002D344 <AmiBlitz3.ab2@9545>   MOVE.l D6,$6(A5)
0002D348 <AmiBlitz3.ab2@9546>   CLR.l $20(A5)
0002D372 <AmiBlitz3.ab2@9548>   !basic
0002D37C <AmiBlitz3.ab2@9550>   addr_libnum.l = PutD0 + 4
0002D390 <AmiBlitz3.ab2@9551>   If fid<>-1
0002D430 <AmiBlitz3.ab2@9552>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
0002D462 <AmiBlitz3.ab2@9553>     file_WriteLine{fid,currentlib$}
0002D480 <AmiBlitz3.ab2@9555>   !asm
0002D482 <AmiBlitz3.ab2@9558>   MOVE.l D7,D1                                             ; filehandle
0002D488 <AmiBlitz3.ab2@9559>   MOVE.l #optstuff,D2                                     ; buffer
0002D48A <AmiBlitz3.ab2@9560>   MOVEQ.l #$0C,D3                                          ; size
0002D490 <AmiBlitz3.ab2@9561>   MOVEA.l _dosbase,A6
0002D494 <AmiBlitz3.ab2@9562>    JSR _Read(A6)
0002D49A <AmiBlitz3.ab2@9564>   CMP.l #$C,D0
0002D49E <AmiBlitz3.ab2@9565>    BCS.w close_and_exit_userlibfile
0002D4A4 <AmiBlitz3.ab2@9568>   MOVE.l optstuff+4,D0
0002D4A8 <AmiBlitz3.ab2@9569>   MOVE.l D0,$20(A5)
0002D4AA <AmiBlitz3.ab2@9570>   LSL.l #2,D0
0002D4AC <AmiBlitz3.ab2@9571>   MOVE.l D0,D5
0002D4AE <AmiBlitz3.ab2@9572>   MOVEQ.l #$01,D1
0002D4B4 <AmiBlitz3.ab2@9573>   MOVEA.l _execbase,A6
0002D4BA <AmiBlitz3.ab2@9574>   MOVE.l mempool,a0
0002D4BE <AmiBlitz3.ab2@9575>   JSR _AllocPooled(a6)
0002D4C4 <AmiBlitz3.ab2@9577>   MOVEA.l _dosbase,A6
0002D4C8 <AmiBlitz3.ab2@9578>   MOVE.l D0,$24(A5)
0002D4CA <AmiBlitz3.ab2@9579>   MOVE.l D7,D1
0002D4CC <AmiBlitz3.ab2@9580>   MOVE.l D0,D2
0002D4CE <AmiBlitz3.ab2@9581>   MOVE.l D5,D3
0002D4D2 <AmiBlitz3.ab2@9582>   JSR _Read(A6)
0002D4D4 <AmiBlitz3.ab2@9585>   MOVE.l D7,D1
0002D4DA <AmiBlitz3.ab2@9586>   MOVEA.l _dosbase,A6
0002D4DE <AmiBlitz3.ab2@9587> JMP _Close(A6)
0002D4E0 <AmiBlitz3.ab2@9590> RTS
0002D4E6 <AmiBlitz3.ab2@9596>   CLR.w number_of_objects
0002D4EC <AmiBlitz3.ab2@9597>   MOVEA.l end_of_tokenlist,A3
0002D4F2 <AmiBlitz3.ab2@9598>   MOVEA.l libpointer,A2
0002D4F6 <AmiBlitz3.ab2@9601>     CMPA.w #$0,A2
0002D4FA <AmiBlitz3.ab2@9602>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
0002D4FE <AmiBlitz3.ab2@9604>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
0002D502 <AmiBlitz3.ab2@9605>     BMI.w JL_0_7226
0002D504 <AmiBlitz3.ab2@9606>       LSL.w #7,D7
0002D506 <AmiBlitz3.ab2@9607>       ADDQ.w #1,D7
0002D50A <AmiBlitz3.ab2@9608>       MOVE.w D7,$E(A2)
0002D50E <AmiBlitz3.ab2@9611>     LEA $30(A2),A1
0002D514 <AmiBlitz3.ab2@9612>     LEA temp1,A4
0002D516 <AmiBlitz3.ab2@9615>       MOVE.w (A1),D0
0002D51A <AmiBlitz3.ab2@9616>       BMI.w JL_0_72AE
0002D51C <AmiBlitz3.ab2@9617>       MOVE.l A1,(A4)
0002D51E <AmiBlitz3.ab2@9618>       MOVEA.l A1,A4
0002D520 <AmiBlitz3.ab2@9619>       ADDQ.w #2,A4
0002D522 <AmiBlitz3.ab2@9620>       ADDQ.w #6,A1
0002D526 <AmiBlitz3.ab2@9621>       CMP.w #$8,D0
0002D52A <AmiBlitz3.ab2@9622>       BEQ.w JL_0_7290
0002D52E <AmiBlitz3.ab2@9623>         ANDI.w #$F,D0
0002D532 <AmiBlitz3.ab2@9624>         BNE.w JL_0_725C
0002D536 <AmiBlitz3.ab2@9625>           BSR.w skiplibreg
0002D53A <AmiBlitz3.ab2@9626>           LEA $C(A1),A1
0002D53C <AmiBlitz3.ab2@9627>           ADDQ.w #1,D7
0002D540 <AmiBlitz3.ab2@9628> BRA.w JL_0_7230
0002D544 <AmiBlitz3.ab2@9631>     BTST #$2,D0
0002D548 <AmiBlitz3.ab2@9632>     BEQ.w JL_0_7274
0002D54A <AmiBlitz3.ab2@9633>       ADDQ.w #4,A1
0002D54C <AmiBlitz3.ab2@9636>         TST.b (A1)+
0002D550 <AmiBlitz3.ab2@9637>       BPL.w JL_0_7266
0002D554 <AmiBlitz3.ab2@9638>       BSR.w aligna1
0002D558 <AmiBlitz3.ab2@9639> BRA.w JL_0_7290
0002D55A <AmiBlitz3.ab2@9642>       MOVE.w (A1)+,D0
0002D55E <AmiBlitz3.ab2@9643>       BMI.w JL_0_7290
0002D562 <AmiBlitz3.ab2@9644>       ANDI.w #$FF,D0
0002D564 <AmiBlitz3.ab2@9645>       ADDA.w D0,A1
0002D568 <AmiBlitz3.ab2@9646>       BSR.w aligna1
0002D56C <AmiBlitz3.ab2@9647>       BSR.w skiplibreg
0002D570 <AmiBlitz3.ab2@9648>       LEA $C(A1),A1
0002D574 <AmiBlitz3.ab2@9649> BRA.w JL_0_7274
0002D576 <AmiBlitz3.ab2@9652>     MOVE.l A1,(A3)
0002D578 <AmiBlitz3.ab2@9653>     MOVEA.l A1,A3
0002D57A <AmiBlitz3.ab2@9654>     ADDQ.w #4,A1
0002D57C <AmiBlitz3.ab2@9655>     MOVE.w D7,(A1)+
0002D57E <AmiBlitz3.ab2@9658>       TST.b (A1)+
0002D582 <AmiBlitz3.ab2@9659>     BNE.w JL_0_7298
0002D584 <AmiBlitz3.ab2@9662>       TST.b (A1)+
0002D588 <AmiBlitz3.ab2@9663>     BNE.w JL_0_729E
0002D58C <AmiBlitz3.ab2@9665>     BSR.w aligna1
0002D58E <AmiBlitz3.ab2@9666>     ADDQ.w #1,D7
0002D592 <AmiBlitz3.ab2@9667> BRA.w JL_0_7230
0002D596 <AmiBlitz3.ab2@9670>     TST.w $4(A2)
0002D59A <AmiBlitz3.ab2@9671>      BMI.w JL_0_72BA
0002D59E <AmiBlitz3.ab2@9672>     MOVE.w D7,$10(A2)
0002D5A0 <AmiBlitz3.ab2@9675>     ADDQ.w #2,A1
0002D5A2 <AmiBlitz3.ab2@9676>     TST.l (A1)+
0002D5A6 <AmiBlitz3.ab2@9677>      BEQ.w JL_0_72CC
0002D5AC <AmiBlitz3.ab2@9678>     ADDQ.w #1,number_of_objects
0002D5B0 <AmiBlitz3.ab2@9679>     LEA $16(A1),A1
0002D5B2 <AmiBlitz3.ab2@9682>     SUBA.l A2,A1
0002D5B6 <AmiBlitz3.ab2@9683>     MOVE.l A1,$12(A2)
0002D5B8 <AmiBlitz3.ab2@9684>     MOVEA.l (A2),A2
0002D5BC <AmiBlitz3.ab2@9685> BRA.w JL_0_720E
0002D5BE <AmiBlitz3.ab2@9688>   CLR.l (A3)
0002D5C4 <AmiBlitz3.ab2@9689>   MOVE.l A7,errstack
0002D5CE <AmiBlitz3.ab2@9690>   MOVE.l #AL_0_730E,errcont
0002D5D6 <AmiBlitz3.ab2@9691>   MOVE.w #$FFFF,ezerr
0002D5DA <AmiBlitz3.ab2@9692>   MOVE.w #$FFFA,D1
0002D5DE <AmiBlitz3.ab2@9693>    BSR.w JL_0_6F38
0002D5E4 <AmiBlitz3.ab2@9694>   MOVE.l A1,tempvm
0002D5E8 <AmiBlitz3.ab2@9695>   MOVE.w #$FDA7,D1
0002D5EC <AmiBlitz3.ab2@9696>    BSR.w JL_0_6F38
0002D5F2 <AmiBlitz3.ab2@9697>   MOVE.l A1,ffplib
0002D5F4 <AmiBlitz3.ab2@9700> RTS
0002D5F8 <AmiBlitz3.ab2@9703> ffplib:  Ds.l 1
0002D5FA <AmiBlitz3.ab2@9707>     TST.w (A1)+
0002D5FE <AmiBlitz3.ab2@9708>     BEQ.w JL_0_7320
0002D600 <AmiBlitz3.ab2@9709>     ADDQ.w #2,A1
0002D604 <AmiBlitz3.ab2@9710> BRA.w skiplibreg
0002D606 <AmiBlitz3.ab2@9713> RTS
0002D608 <AmiBlitz3.ab2@9717>   EXG.l A1,A0
0002D60C <AmiBlitz3.ab2@9718>   BSR.w aligna1
0002D60E <AmiBlitz3.ab2@9719>   EXG.l A1,A0
0002D610 <AmiBlitz3.ab2@9720> RTS
0002D612 <AmiBlitz3.ab2@9723>   EXG.l D0,A1
0002D614 <AmiBlitz3.ab2@9724>   ADDQ.l #1,D0
0002D618 <AmiBlitz3.ab2@9725>   BCLR #$0,D0
0002D61A <AmiBlitz3.ab2@9726>   EXG.l D0,A1
0002D61C <AmiBlitz3.ab2@9727> RTS
0002D622 <AmiBlitz3.ab2@9731>   MOVEA.l _execbase,A6
0002D628 <AmiBlitz3.ab2@9732>   MOVEA.l ptr_userlibs,A2
0002D62A <AmiBlitz3.ab2@9733>   MOVE.l (A2),D0
0002D62C <AmiBlitz3.ab2@9734>   CLR.l (A2)
0002D62E <AmiBlitz3.ab2@9735>   MOVEA.l D0,A2
0002D632 <AmiBlitz3.ab2@9738>     CMPA.w #$0,A2
0002D636 <AmiBlitz3.ab2@9739>     BEQ.w free_userlib
0002D63A <AmiBlitz3.ab2@9741>     MOVE.l $20(A2),D0
0002D63E <AmiBlitz3.ab2@9742>     BEQ.b JL_0_7360
0002D640 <AmiBlitz3.ab2@9743>       LSL.l #2,D0
0002D646 <AmiBlitz3.ab2@9744>       MOVE.l mempool,a0
0002D64A <AmiBlitz3.ab2@9745>       MOVEA.l $24(A2),A1
0002D64E <AmiBlitz3.ab2@9746>       JSR _FreePooled(A6)
0002D650 <AmiBlitz3.ab2@9749>     MOVEA.l A2,A1
0002D654 <AmiBlitz3.ab2@9750>     MOVE.l $6(A1),D0
0002D65A <AmiBlitz3.ab2@9751>     MOVE.l mempool,a0
0002D65C <AmiBlitz3.ab2@9752>     MOVEA.l (A2),A2
0002D662 <AmiBlitz3.ab2@9753>     MOVEA.l _execbase,A6
0002D666 <AmiBlitz3.ab2@9754>     JSR _FreePooled(A6)
0002D66A <AmiBlitz3.ab2@9755> BRA.w JL_0_7348
0002D66E <AmiBlitz3.ab2@9759>   BSR.w free_userlibs
0002D674 <AmiBlitz3.ab2@9760>   MOVEA.l _execbase,A6
0002D67A <AmiBlitz3.ab2@9761>   CLR.l libpointer
0002D680 <AmiBlitz3.ab2@9762>   MOVEA.l end_of_tokenlist,A0
0002D682 <AmiBlitz3.ab2@9763>   CLR.l (A0)
0002D688 <AmiBlitz3.ab2@9765>   MOVE.l size_acidlibs,D0
0002D68C <AmiBlitz3.ab2@9766>   BEQ.b JL_0_73A2
0002D692 <AmiBlitz3.ab2@9767>     MOVE.l ptr_acidlibs,D1
0002D696 <AmiBlitz3.ab2@9768>     BEQ.b JL_0_73A2
0002D69C <AmiBlitz3.ab2@9769>       CLR.l ptr_acidlibs
0002D69E <AmiBlitz3.ab2@9770>       MOVEA.l D1,A1
0002D6A4 <AmiBlitz3.ab2@9771>       MOVE.l mempool,a0
0002D6AA <AmiBlitz3.ab2@9772>       MOVEA.l _execbase,A6
0002D6AE <AmiBlitz3.ab2@9773>       JSR _FreePooled(A6)                                 ; free acidlibs
0002D6B4 <AmiBlitz3.ab2@9776>   MOVE.l size_deflibs,D0
0002D6B8 <AmiBlitz3.ab2@9777>   BEQ.b JL_0_73BE
0002D6BE <AmiBlitz3.ab2@9778>     MOVE.l ptr_deflibs,D1
0002D6C2 <AmiBlitz3.ab2@9779>     BEQ.b JL_0_73BE
0002D6C8 <AmiBlitz3.ab2@9780>       CLR.l ptr_deflibs                                    ; d0: memorySize
0002D6CA <AmiBlitz3.ab2@9781>       MOVEA.l D1,A1                                        ; a1: memory
0002D6D0 <AmiBlitz3.ab2@9782>       MOVE.l mempool,a0                                    ; a0: poolHeader
0002D6D6 <AmiBlitz3.ab2@9783>       MOVEA.l _execbase,A6
0002D6DA <AmiBlitz3.ab2@9784>       JSR _FreePooled(A6)                                  ; free deflibs
0002D6DC <AmiBlitz3.ab2@9787> RTS
0002D6E2 <AmiBlitz3.ab2@9791>   MOVEA.l currentmacroaddr,A0
0002D6E4 <AmiBlitz3.ab2@9792>   MOVEA.l (A0),A2
0002D6E6 <AmiBlitz3.ab2@9793>   CLR.l (A0)
0002D6EC <AmiBlitz3.ab2@9794>   MOVEA.l _execbase,A6
0002D6F0 <AmiBlitz3.ab2@9797>     CMPA.w #$0,A2
0002D6F4 <AmiBlitz3.ab2@9798>     BEQ.w JL_0_73FA
0002D6F6 <AmiBlitz3.ab2@9799>     MOVEQ.l #$00,D0
0002D6FA <AmiBlitz3.ab2@9800>     MOVE.w $8(A2),D0
0002D6FE <AmiBlitz3.ab2@9801>     BEQ.w JL_0_73E8
0002D702 <AmiBlitz3.ab2@9802>     MOVEA.l $4(A2),A1
0002D708 <AmiBlitz3.ab2@9803>     MOVE.l mempool,a0
0002D70C <AmiBlitz3.ab2@9804>     JSR _FreePooled(A6)
0002D70E <AmiBlitz3.ab2@9807>     MOVEA.l A2,A1
0002D710 <AmiBlitz3.ab2@9808>     MOVEA.l (A2),A2
0002D712 <AmiBlitz3.ab2@9809>     MOVEQ.l #$00,D0
0002D716 <AmiBlitz3.ab2@9810>     MOVE.b $C(A1),D0
0002D71C <AmiBlitz3.ab2@9811>     MOVE.l mempool2,a0
0002D720 <AmiBlitz3.ab2@9812>     JSR _FreePooled(A6)
0002D724 <AmiBlitz3.ab2@9813> BRA.w JL_0_73CE
0002D726 <AmiBlitz3.ab2@9816> RTS
0002D72C <AmiBlitz3.ab2@9820>   MOVEA.l templabel,A2
0002D732 <AmiBlitz3.ab2@9821>   CLR.l templabel
0002D734 <AmiBlitz3.ab2@9822> RTS
0002D73A <AmiBlitz3.ab2@9825>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
0002D73E <AmiBlitz3.ab2@9828>     CMPA.w #$0,A2
0002D742 <AmiBlitz3.ab2@9829>     BEQ.w JL_0_7426
0002D744 <AmiBlitz3.ab2@9830>     MOVEQ.l #$00,D0
0002D748 <AmiBlitz3.ab2@9831>     MOVE.b $E(A2),D0                                       ;labeltemp
0002D74A <AmiBlitz3.ab2@9832>     MOVEA.l A2,A1
0002D74C <AmiBlitz3.ab2@9833>     MOVEA.l (A2),A2
0002D752 <AmiBlitz3.ab2@9834>     MOVE.l mempool2,a0
0002D756 <AmiBlitz3.ab2@9836> BRA.w JL_0_740C
0002D758 <AmiBlitz3.ab2@9839> RTS
0002D75E <AmiBlitz3.ab2@9843>   MOVEA.l data1,A4
0002D764 <AmiBlitz3.ab2@9844>   CMPA.l data2at,A4
0002D768 <AmiBlitz3.ab2@9845>   BCC.w JL_0_7442
0002D76A <AmiBlitz3.ab2@9846>     MOVE.b D1,(A4)+
0002D770 <AmiBlitz3.ab2@9847>     MOVE.l A4,data1
0002D772 <AmiBlitz3.ab2@9848> RTS
0002D77A <AmiBlitz3.ab2@9851>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
0002D780 <AmiBlitz3.ab2@9852>   ADDQ.l #1,data1
0002D782 <AmiBlitz3.ab2@9853> RTS
0002D784 <AmiBlitz3.ab2@9857>   SWAP D1
0002D788 <AmiBlitz3.ab2@9858>   BSR.w pokedata1
0002D78A <AmiBlitz3.ab2@9859>   SWAP D1
0002D790 <AmiBlitz3.ab2@9862>   MOVEA.l data1,A4
0002D796 <AmiBlitz3.ab2@9863>   CMPA.l data2at,A4
0002D79A <AmiBlitz3.ab2@9864>    BCC.w JL_0_7474
0002D79C <AmiBlitz3.ab2@9865>   MOVE.w D1,(A4)+
0002D7A2 <AmiBlitz3.ab2@9866>   MOVE.l A4,data1
0002D7A4 <AmiBlitz3.ab2@9867> RTS
0002D7AC <AmiBlitz3.ab2@9870>   MOVE.w #$FFFF,dontwrite
0002D7B2 <AmiBlitz3.ab2@9871>   ADDQ.l #2,data1
0002D7B4 <AmiBlitz3.ab2@9872> RTS
0002D7BA <AmiBlitz3.ab2@9876>   MOVE.l data1,D3                                      ;write local string/type allocs
0002D7BC <AmiBlitz3.ab2@9877>   MOVEQ.l #$00,D4
0002D7C0 <AmiBlitz3.ab2@9880>   CMPA.w #$0,A2
0002D7C4 <AmiBlitz3.ab2@9881>    BEQ.w JL_0_74CAc
0002D7C8 <AmiBlitz3.ab2@9882>   TST.w $6(A2)
0002D7CC <AmiBlitz3.ab2@9883>    BNE.w JL_0_74C4c
0002D7D0 <AmiBlitz3.ab2@9884>   MOVEA.l $A(A2),A3
0002D7D8 <AmiBlitz3.ab2@9885>   CMPI.l #$100,$4(A3)
0002D7DC <AmiBlitz3.ab2@9886>    BCS.w JL_0_74C4c
0002D7E0 <AmiBlitz3.ab2@9887>   MOVE.w $4(A2),D1
0002D7E4 <AmiBlitz3.ab2@9888>    BSR.w pokedata1
0002D7E8 <AmiBlitz3.ab2@9889>   MOVE.w $8(A3),D1
0002D7EC <AmiBlitz3.ab2@9890>    BSR.w pokedata1
0002D7EE <AmiBlitz3.ab2@9891>   ADDQ.w #1,D4
0002D7F0 <AmiBlitz3.ab2@9894>    MOVEA.l (A2),A2
0002D7F4 <AmiBlitz3.ab2@9895> BRA.w JL_0_7492c
0002D7F6 <AmiBlitz3.ab2@9898>    TST.w D4
0002D7FA <AmiBlitz3.ab2@9899>    BEQ.w JL_0_74E0
0002D7FE <AmiBlitz3.ab2@9900>   MOVE.w #$FF37,D1
0002D802 <AmiBlitz3.ab2@9901>    BSR.w uselib
0002D806 <AmiBlitz3.ab2@9902>   MOVE.w #$FFFA,D1
0002D80A <AmiBlitz3.ab2@9903> BRA.w uselib
0002D810 <AmiBlitz3.ab2@9911>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
0002D816 <AmiBlitz3.ab2@9914>   MOVE.l data1,D3
0002D818 <AmiBlitz3.ab2@9915>   MOVEQ.l #$00,D4
0002D81E <AmiBlitz3.ab2@9916>   TST.b iserror
0002D822 <AmiBlitz3.ab2@9917>   BEQ JL_0_7492
0002D824 <AmiBlitz3.ab2@9918>   RTS
0002D828 <AmiBlitz3.ab2@9920>    CMPA.w #$0,A2
0002D82C <AmiBlitz3.ab2@9921>    BEQ.w JL_0_74CA
0002D830 <AmiBlitz3.ab2@9922>   TST.w $6(A2)
0002D834 <AmiBlitz3.ab2@9923>    BNE.w JL_0_74C4
0002D838 <AmiBlitz3.ab2@9924>   MOVEA.l $A(A2),A3
0002D840 <AmiBlitz3.ab2@9925>   CMPI.l #$100,$4(A3)
0002D844 <AmiBlitz3.ab2@9926>    BCS.w JL_0_74C4
0002D848 <AmiBlitz3.ab2@9927>   MOVE.w $4(A2),D1
0002D84C <AmiBlitz3.ab2@9928>    BSR.w pokedata1
0002D850 <AmiBlitz3.ab2@9929>   MOVE.w $8(A3),D1
0002D854 <AmiBlitz3.ab2@9930>    BSR.w pokedata1
0002D856 <AmiBlitz3.ab2@9931>   ADDQ.w #1,D4
0002D858 <AmiBlitz3.ab2@9934>   MOVEA.l (A2),A2
0002D85C <AmiBlitz3.ab2@9935> BRA.w JL_0_7492
0002D862 <AmiBlitz3.ab2@9939>   MOVEA.l sharebase,A2
0002D866 <AmiBlitz3.ab2@9942>   CMPA.w #$0,A2
0002D86A <AmiBlitz3.ab2@9943>    BEQ.w JL_0_74CAb
0002D86E <AmiBlitz3.ab2@9945>   TST.w $6(A2)
0002D872 <AmiBlitz3.ab2@9946>    BNE.w JL_0_74C4b
0002D876 <AmiBlitz3.ab2@9947>   MOVEA.l $A(A2),A3
0002D87E <AmiBlitz3.ab2@9948>   CMPI.l #$100,$4(A3)
0002D882 <AmiBlitz3.ab2@9949>    BCS.w JL_0_74C4b
0002D886 <AmiBlitz3.ab2@9950>   MOVE.w $4(A2),D1
0002D88A <AmiBlitz3.ab2@9951>    BSR.w pokedata1
0002D88E <AmiBlitz3.ab2@9952>   MOVE.w $8(A3),D1
0002D892 <AmiBlitz3.ab2@9953>    BSR.w pokedata1
0002D894 <AmiBlitz3.ab2@9954>   ADDQ.w #1,D4
0002D896 <AmiBlitz3.ab2@9957>   MOVEA.l (A2),A2
0002D89A <AmiBlitz3.ab2@9958> BRA.w JL_0_7492b
0002D89C <AmiBlitz3.ab2@9961>    TST.w D4
0002D8A0 <AmiBlitz3.ab2@9962>    BEQ.w JL_0_74E0
0002D8A4 <AmiBlitz3.ab2@9963>   MOVE.w #$FF37,D1
0002D8A8 <AmiBlitz3.ab2@9964>    BSR.w uselib                                            ;use statics lib
0002D8AC <AmiBlitz3.ab2@9965>   MOVE.w #$FFFA,D1                                         ;use memlib
0002D8B0 <AmiBlitz3.ab2@9966> BRA.w uselib
0002D8B2 <AmiBlitz3.ab2@9969> RTS
0002D8B8 <AmiBlitz3.ab2@9973>   MOVE.w numtoa2,D1
0002D8BC <AmiBlitz3.ab2@9974>    BSR.w writeword
0002D8C0 <AmiBlitz3.ab2@9975>    BSR.w addoff
0002D8C2 <AmiBlitz3.ab2@9976>   MOVE.l D3,D1
0002D8C6 <AmiBlitz3.ab2@9977>    BSR.w writelong
0002D8C8 <AmiBlitz3.ab2@9978>   SUBQ.w #1,D4
0002D8CE <AmiBlitz3.ab2@9979>   MOVE.w D4,endarray+2
0002D8D4 <AmiBlitz3.ab2@9980>   MOVE.l endarray,D1
0002D8D8 <AmiBlitz3.ab2@9981> BRA.w writelong
0002D8DA <AmiBlitz3.ab2@9985>   MOVE.l D3,-(A7)
0002D8E0 <AmiBlitz3.ab2@9988>   MOVEA.l _dosbase,A6
0002D8E4 <AmiBlitz3.ab2@9989>   JSR _Write(a6)
0002D8E6 <AmiBlitz3.ab2@9991>   CMP.l (A7)+,D0
0002D8EA <AmiBlitz3.ab2@9992>    BNE.w JL_0_7516
0002D8EC <AmiBlitz3.ab2@9993> RTS
0002D8EE <AmiBlitz3.ab2@9996>   MOVE.l D7,D1
0002D8F4 <AmiBlitz3.ab2@9998>   MOVEA.l _dosbase,A6
0002D8F8 <AmiBlitz3.ab2@9999>   JSR _Close(a6)
0002D8FE <AmiBlitz3.ab2@10002> JMP error_create_exe
0002D904 <AmiBlitz3.ab2@10011>   MOVE.l A7,errstack
0002D908 <AmiBlitz3.ab2@10012>   MOVEM.l d2-d7/a2-a6,-(a7)
0002D912 <AmiBlitz3.ab2@10013>   MOVE.l #AL_0_7790,errcont
0002D916 <AmiBlitz3.ab2@10014>    BSR.w call_setpointerbusy
0002D91E <AmiBlitz3.ab2@10015>   MOVE.w #$FFFF,anyerrs
0002D928 <AmiBlitz3.ab2@10016>   CMP.l #-1,chipstart
0002D92C <AmiBlitz3.ab2@10017>   BEQ 'l01
0002D932 <AmiBlitz3.ab2@10018>   MOVE.l chipend,d1
0002D934 <AmiBlitz3.ab2@10019>   ADDQ.l #3,d1
0002D93A <AmiBlitz3.ab2@10020>   AND.l #$fffffffc,d1                                      ;bug
0002D940 <AmiBlitz3.ab2@10021>   MOVE.l d1,chipend
0002D942 <AmiBlitz3.ab2@10022>   MOVE.l d1,a1
0002D948 <AmiBlitz3.ab2@10023>   MOVE.l chipstart,a0
0002D94A <AmiBlitz3.ab2@10024>   MOVE.l a1,d1
0002D94C <AmiBlitz3.ab2@10025>   SUB.l a0,d1
0002D952 <AmiBlitz3.ab2@10026>   MOVE.l d1,chipsize
0002D95C <AmiBlitz3.ab2@10029>   CMP.l #-1,bssstart
0002D960 <AmiBlitz3.ab2@10030>   BEQ 'l11
0002D966 <AmiBlitz3.ab2@10031>   MOVE.l realbssend,a1
0002D96C <AmiBlitz3.ab2@10032>   MOVE.l bssstart,a0
0002D96E <AmiBlitz3.ab2@10033>   MOVE.l a1,d1
0002D970 <AmiBlitz3.ab2@10034>   SUB.l a0,d1
0002D976 <AmiBlitz3.ab2@10035>   MOVE.l d1,bsssize
0002D97A <AmiBlitz3.ab2@10036>   BEQ 'l11
0002D97C <AmiBlitz3.ab2@10039>   TST.b (a0)+
0002D980 <AmiBlitz3.ab2@10040>   BEQ 'l31
0002D986 <AmiBlitz3.ab2@10041>   TST.b debugmode
0002D98A <AmiBlitz3.ab2@10042>   BEQ 'l1
0002D990 <AmiBlitz3.ab2@10043>   TST.b exdebug
0002D994 <AmiBlitz3.ab2@10044>   BNE 'l31
0002D99A <AmiBlitz3.ab2@10047>   MOVE.l #nodata,-(a7)
0002D9A0 <AmiBlitz3.ab2@10048> JMP handle_compileerror
0002D9A2 <AmiBlitz3.ab2@10051>   CMP.l a0,a1
0002D9A6 <AmiBlitz3.ab2@10052>   BGT 'l32
0002D9AC <AmiBlitz3.ab2@10053>   MOVE.l bssend,d1
0002D9AE <AmiBlitz3.ab2@10054>   ADDQ.l #3,d1
0002D9B4 <AmiBlitz3.ab2@10055>   AND.l #$fffffffc,d1                                      ;bug
0002D9BA <AmiBlitz3.ab2@10056>   MOVE.l d1,bssend
0002D9BC <AmiBlitz3.ab2@10057>   MOVE.l d1,a1
0002D9C2 <AmiBlitz3.ab2@10058>   MOVE.l bssstart,a0
0002D9C4 <AmiBlitz3.ab2@10059>   MOVE.l a1,d1
0002D9C6 <AmiBlitz3.ab2@10060>   SUB.l a0,d1
0002D9CC <AmiBlitz3.ab2@10061>   MOVE.l d1,bsssize
0002D9D0 <AmiBlitz3.ab2@10064>   MOVEM.l d5-d7/d3,-(a7)
0002D9D6 <AmiBlitz3.ab2@10065>   MOVE.w dontwrite,D1
0002D9DA <AmiBlitz3.ab2@10066>   BNE.w JL_0_757C
0002D9E0 <AmiBlitz3.ab2@10067>   MOVE.l chipsize,d5
0002D9E6 <AmiBlitz3.ab2@10068>   MOVE.l bsssize,d3
0002D9EC <AmiBlitz3.ab2@10069>   MOVE.l chipstart,d7
0002D9F2 <AmiBlitz3.ab2@10070>   MOVE.l bssstart,d6
0002D9F8 <AmiBlitz3.ab2@10071>   MOVEA.l hunkoffsetbase,A2
0002D9FE <AmiBlitz3.ab2@10072>   MOVEA.l destbufferstart,A1
0002DA00 <AmiBlitz3.ab2@10073>   MOVE.l A1,D2
0002DA06 <AmiBlitz3.ab2@10074>   ADD.l noinits,D2
0002DA0C <AmiBlitz3.ab2@10075>   CLR.l hunkoffsetnum
0002DA10 <AmiBlitz3.ab2@10078>   CMPA.w #$0,A2
0002DA14 <AmiBlitz3.ab2@10079>    BEQ.w JL_0_757C
0002DA18 <AmiBlitz3.ab2@10080>   MOVE.l $4(A2),D0
0002DA1C <AmiBlitz3.ab2@10081>    LEA $0(a1,d0.l),a0
0002DA1E <AmiBlitz3.ab2@10082>    MOVE.l (a0),d1
0002DA20 <AmiBlitz3.ab2@10083>   TST.l d1
0002DA24 <AmiBlitz3.ab2@10084>    BMI.w 'lm1
0002DA2C <AmiBlitz3.ab2@10085>   MOVE.b #0,newhunk
0002DA36 <AmiBlitz3.ab2@10086>   CMP.l #-1,chipstart
0002DA3A <AmiBlitz3.ab2@10087>   BEQ 'l10
0002DA40 <AmiBlitz3.ab2@10088>   CMP.l chipstart,d1
0002DA44 <AmiBlitz3.ab2@10089>   BLT 'l10
0002DA4C <AmiBlitz3.ab2@10090>   MOVE.b #1,newhunk
0002DA52 <AmiBlitz3.ab2@10091>   CMP.l chipend,d1
0002DA56 <AmiBlitz3.ab2@10092>   BGE 'l110
0002DA58 <AmiBlitz3.ab2@10093>   SUB.l d7,(a0)
0002DA60 <AmiBlitz3.ab2@10094>   ADD.l #$80000000,4(a2)
0002DA64 <AmiBlitz3.ab2@10095> BRA JL_0_7576
0002DA68 <AmiBlitz3.ab2@10098>   SUB.l d5,0(a0)
0002DA72 <AmiBlitz3.ab2@10101>   CMP.l #-1,bssstart
0002DA76 <AmiBlitz3.ab2@10102>     BEQ 'l11
0002DA7C <AmiBlitz3.ab2@10103>   CMP.l bssstart,d1
0002DA80 <AmiBlitz3.ab2@10104>   BLT 'l11
0002DA86 <AmiBlitz3.ab2@10105>   CMP.l bssend,d1
0002DA8A <AmiBlitz3.ab2@10106>   BGE 'l111
0002DA90 <AmiBlitz3.ab2@10107>   TST.b newhunk
0002DA94 <AmiBlitz3.ab2@10108>   BEQ 'ln1
0002DA96 <AmiBlitz3.ab2@10109>   ADD.l d5,(a0)
0002DA98 <AmiBlitz3.ab2@10112>   SUB.l d6,(a0)
0002DAA0 <AmiBlitz3.ab2@10113>   ADD.l #$40000000,4(a2)
0002DAA4 <AmiBlitz3.ab2@10114> BRA JL_0_7576
0002DAA8 <AmiBlitz3.ab2@10117>   SUB.l d3,0(a0)
0002DAAA <AmiBlitz3.ab2@10120>   SUB.l D2,(A0)
0002DAB0 <AmiBlitz3.ab2@10123>   ADDQ.l #1,hunkoffsetnum
0002DAB2 <AmiBlitz3.ab2@10126>    MOVEA.l (A2),A2
0002DAB6 <AmiBlitz3.ab2@10127> BRA.w JL_0_755E
0002DABA <AmiBlitz3.ab2@10131>   MOVEM.l (a7)+,d5-d7/d3
0002DAC0 <AmiBlitz3.ab2@10132>   MOVE.l ptr_newexefilename,D1
0002DAC6 <AmiBlitz3.ab2@10133>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002DACC <AmiBlitz3.ab2@10134>   MOVEA.l _dosbase,A6
0002DAD0 <AmiBlitz3.ab2@10135>    JSR _Open(A6)
0002DAD2 <AmiBlitz3.ab2@10136>   MOVE.l D0,D7
0002DAD6 <AmiBlitz3.ab2@10137>    BEQ.w execerr
0002DADC <AmiBlitz3.ab2@10138>   MOVE.l objlen,D0
0002DAE2 <AmiBlitz3.ab2@10139>   SUB.l #moremem,d0
0002DAE8 <AmiBlitz3.ab2@10140>   SUB.l noinits,D0
0002DAF2 <AmiBlitz3.ab2@10141>   CMP.l #-1,bssstart
0002DAF6 <AmiBlitz3.ab2@10142>   BEQ 'l60
0002DAFC <AmiBlitz3.ab2@10143>   SUB.l bsssize,d0
0002DB02 <AmiBlitz3.ab2@10144>   SUB.l chipsize,d0
0002DB06 <AmiBlitz3.ab2@10145> BRA.s 'l61
0002DB10 <AmiBlitz3.ab2@10148>   CMP.l #-1,chipstart
0002DB14 <AmiBlitz3.ab2@10149>   BEQ 'l61
0002DB1A <AmiBlitz3.ab2@10150>   SUB.l bsssize,d0
0002DB20 <AmiBlitz3.ab2@10151>   SUB.l chipsize,d0
0002DB22 <AmiBlitz3.ab2@10154>   ADDQ.l #3,D0
0002DB24 <AmiBlitz3.ab2@10155>   LSR.l #2,D0
0002DB2A <AmiBlitz3.ab2@10156>   MOVE.l D0,tstsize1
0002DB30 <AmiBlitz3.ab2@10157>   MOVE.l D0,tstsize2
0002DB32 <AmiBlitz3.ab2@10158>   MOVE.l D7,D1
0002DB38 <AmiBlitz3.ab2@10159>   MOVE.l #tsthead,D2                                      ;hunkbegin
0002DB3A <AmiBlitz3.ab2@10160>   MOVEQ.l #$20,D3
0002DB44 <AmiBlitz3.ab2@10161>   CMP.l #-1,bssstart
0002DB48 <AmiBlitz3.ab2@10162>   BEQ 'lb1
0002DB52 <AmiBlitz3.ab2@10163>   CMP.l #-1,chipstart
0002DB56 <AmiBlitz3.ab2@10164>   BEQ 'lb1
0002DB60 <AmiBlitz3.ab2@10165>   MOVE.l #1,bssnum
0002DB6A <AmiBlitz3.ab2@10166>   MOVE.l #2,chipnum
0002DB6C <AmiBlitz3.ab2@10167>   MOVEQ.l #$28,D3
0002DB72 <AmiBlitz3.ab2@10168>   MOVE.l bsssize,d2
0002DB74 <AmiBlitz3.ab2@10169>   ADDQ.l #3,d2
0002DB76 <AmiBlitz3.ab2@10170>   ASR.l #2,d2
0002DB7C <AmiBlitz3.ab2@10171>   MOVE.l d2,hunkend+8
0002DB82 <AmiBlitz3.ab2@10172>   MOVE.l d2,bsssize3
0002DB88 <AmiBlitz3.ab2@10173>   MOVE.l chipsize,d2
0002DB8A <AmiBlitz3.ab2@10174>   ADDQ.l #3,d2
0002DB8C <AmiBlitz3.ab2@10175>   ASR.l #2,d2
0002DB92 <AmiBlitz3.ab2@10176>   MOVE.l d2,chipsize2
0002DB9C <AmiBlitz3.ab2@10177>   ADD.l #$40000000,chipsize2
0002DBA2 <AmiBlitz3.ab2@10178>   MOVE.l d2,hunkend2+8
0002DBA8 <AmiBlitz3.ab2@10179>   MOVE.l D0,tstsize1c
0002DBAE <AmiBlitz3.ab2@10180>   MOVE.l D0,tstsize2c
0002DBB4 <AmiBlitz3.ab2@10181>   MOVE.l #hunkbegin2,d2
0002DBB8 <AmiBlitz3.ab2@10182> BRA 'l100
0002DBC2 <AmiBlitz3.ab2@10185>   CMP.l #-1,bssstart
0002DBC6 <AmiBlitz3.ab2@10186>   BEQ 'l10
0002DBD0 <AmiBlitz3.ab2@10187>   MOVE.l #1,bssnum
0002DBD2 <AmiBlitz3.ab2@10188>   MOVEQ.l #$24,D3
0002DBD8 <AmiBlitz3.ab2@10189>   MOVE.l bsssize,d2
0002DBDA <AmiBlitz3.ab2@10190>   ADDQ.l #3,d2
0002DBDC <AmiBlitz3.ab2@10191>   ASR.l #2,d2
0002DBE2 <AmiBlitz3.ab2@10192>   MOVE.l d2,hunkend+8
0002DBE8 <AmiBlitz3.ab2@10193>   MOVE.l d2,bsssize2
0002DBEE <AmiBlitz3.ab2@10194>   MOVE.l D0,tstsize1b
0002DBF4 <AmiBlitz3.ab2@10195>   MOVE.l D0,tstsize2b
0002DBFA <AmiBlitz3.ab2@10196>   MOVE.l #hunkbegin,d2
0002DC04 <AmiBlitz3.ab2@10199>   CMP.l #-1,chipstart
0002DC08 <AmiBlitz3.ab2@10200>   BEQ 'l100
0002DC12 <AmiBlitz3.ab2@10201>   MOVE.l #1,chipnum
0002DC14 <AmiBlitz3.ab2@10202>   MOVEQ.l #$24,D3
0002DC1A <AmiBlitz3.ab2@10203>   MOVE.l chipsize,d2
0002DC1C <AmiBlitz3.ab2@10204>   ADDQ.l #3,d2
0002DC1E <AmiBlitz3.ab2@10205>   ASR.l #2,d2
0002DC24 <AmiBlitz3.ab2@10206>   MOVE.l d2,hunkend2+8
0002DC2A <AmiBlitz3.ab2@10207>   MOVE.l d2,bsssize2
0002DC34 <AmiBlitz3.ab2@10208>   ADD.l #$40000000,bsssize2
0002DC3A <AmiBlitz3.ab2@10209>   MOVE.l D0,tstsize1b
0002DC40 <AmiBlitz3.ab2@10210>   MOVE.l D0,tstsize2b
0002DC46 <AmiBlitz3.ab2@10211>   MOVE.l #hunkbegin,d2
0002DC4A <AmiBlitz3.ab2@10214>    BSR.w mywrite
0002DC50 <AmiBlitz3.ab2@10215>   MOVE.l destbufferstart,D2
0002DC56 <AmiBlitz3.ab2@10216>   ADD.l noinits,D2
0002DC5C <AmiBlitz3.ab2@10217>   MOVE.l objlen,D3
0002DC62 <AmiBlitz3.ab2@10218>   SUB.l #moremem,d3
0002DC68 <AmiBlitz3.ab2@10219>   SUB.l noinits,D3
0002DC72 <AmiBlitz3.ab2@10220>   CMP.l #-1,bssstart
0002DC76 <AmiBlitz3.ab2@10221>   BNE 'l40
0002DC80 <AmiBlitz3.ab2@10222>   CMP.l #-1,chipstart
0002DC84 <AmiBlitz3.ab2@10223>   BNE 'l40
0002DC88 <AmiBlitz3.ab2@10224> BRA 'l41
0002DC8E <AmiBlitz3.ab2@10227>   MOVE.l codeend,d1
0002DC90 <AmiBlitz3.ab2@10228>     SUB.l d2,d1
0002DC92 <AmiBlitz3.ab2@10229>     MOVE.l d1,d3
0002DC98 <AmiBlitz3.ab2@10230>   SUB.l bsssize,d3
0002DC9E <AmiBlitz3.ab2@10231>   SUB.l chipsize,d3
0002DCA0 <AmiBlitz3.ab2@10232>   MOVE.l D7,D1
0002DCA4 <AmiBlitz3.ab2@10233>   BSR.w mywrite
0002DCAA <AmiBlitz3.ab2@10234>   MOVE.l objlen,D3
0002DCB0 <AmiBlitz3.ab2@10235>   SUB.l #moremem,d3
0002DCB6 <AmiBlitz3.ab2@10236>   SUB.l noinits,D3
0002DCB8 <AmiBlitz3.ab2@10237>   MOVE.l d3,d1
0002DCBE <AmiBlitz3.ab2@10238>   MOVE.l destbufferstart,D2
0002DCC4 <AmiBlitz3.ab2@10239>   ADD.l noinits,D2
0002DCC6 <AmiBlitz3.ab2@10240>   ADD.l d2,d1
0002DCCC <AmiBlitz3.ab2@10241>   SUB.l codeend,d1
0002DCCE <AmiBlitz3.ab2@10242>   MOVE.l d1,d3
0002DCD4 <AmiBlitz3.ab2@10243>   MOVE.l codeend,d2
0002DCD6 <AmiBlitz3.ab2@10246>   MOVE.l d2,d1
0002DCD8 <AmiBlitz3.ab2@10247>   ADD.l d3,d1
0002DCDA <AmiBlitz3.ab2@10248>   ADDQ.l #3,D1
0002DCE0 <AmiBlitz3.ab2@10249>   ANDI.l #$FFFFFFFC,D1
0002DCE2 <AmiBlitz3.ab2@10250>   SUB.l d2,d1
0002DCE4 <AmiBlitz3.ab2@10251>   MOVE.l d1,d3
0002DCE6 <AmiBlitz3.ab2@10252>   MOVE.l D7,D1
0002DCEA <AmiBlitz3.ab2@10253>    BSR.w mywrite
0002DCF4 <AmiBlitz3.ab2@10254>   MOVE.l hunkoffsetcounter,tstsize3
0002DCF8 <AmiBlitz3.ab2@10255>    BEQ.w JL_0_7646
0002DCFA <AmiBlitz3.ab2@10256>   MOVE.l D7,D1
0002DD00 <AmiBlitz3.ab2@10257>   MOVE.l #tstend,D2
0002DD02 <AmiBlitz3.ab2@10258>   MOVEQ.l #$04,D3
0002DD06 <AmiBlitz3.ab2@10259>    BSR.w mywrite
0002DD0C <AmiBlitz3.ab2@10260>    MOVEA.l _execbase,A6
0002DD12 <AmiBlitz3.ab2@10261>    MOVE.l hunkoffsetcounter,d0
0002DD14 <AmiBlitz3.ab2@10262>    ASL.l #2,d0
0002DD1A <AmiBlitz3.ab2@10263>    ADD.l #12,d0
0002DD1C <AmiBlitz3.ab2@10264>    MOVEQ #0,d1
0002DD20 <AmiBlitz3.ab2@10265>    JSR _AllocMem(a6)
0002DD22 <AmiBlitz3.ab2@10266>    TST.l d0
0002DD26 <AmiBlitz3.ab2@10267>    BEQ nomem
0002DD2C <AmiBlitz3.ab2@10268>    MOVE.l noinits,D4
0002DD2E <AmiBlitz3.ab2@10269>    MOVE.l d5,-(a7)
0002DD30 <AmiBlitz3.ab2@10270>    MOVE.l d0,d5
0002DD32 <AmiBlitz3.ab2@10271>    MOVE.l d0,a1
0002DD38 <AmiBlitz3.ab2@10272>    MOVEA.l hunkoffsetbase,A2
0002DD40 <AmiBlitz3.ab2@10273>    MOVE.b #0,newhunk
0002DD44 <AmiBlitz3.ab2@10276>   CMPA.w #$0,A2
0002DD48 <AmiBlitz3.ab2@10277>    BEQ.w savehunk
0002DD4E <AmiBlitz3.ab2@10278>   MOVE.l destbufferstart,D2
0002DD54 <AmiBlitz3.ab2@10279>   ADD.l noinits,D2
0002DD58 <AmiBlitz3.ab2@10280>   MOVE.l  $4(A2),d1
0002DD5C <AmiBlitz3.ab2@10281>   BTST #31,d1
0002DD60 <AmiBlitz3.ab2@10282>   BEQ 'lh1
0002DD68 <AmiBlitz3.ab2@10283>   MOVE.b #1,newhunk
0002DD6C <AmiBlitz3.ab2@10284> BRA 'lh3
0002DD70 <AmiBlitz3.ab2@10287>   BTST #30,d1
0002DD74 <AmiBlitz3.ab2@10288>   BEQ 'lh2
0002DD7C <AmiBlitz3.ab2@10289>   MOVE.b #1,newhunk
0002DD80 <AmiBlitz3.ab2@10290> BRA 'lh3
0002DD82 <AmiBlitz3.ab2@10293>   ADD.l d1,d2
0002DD88 <AmiBlitz3.ab2@10294>   CMP.l chipend,d2
0002DD8C <AmiBlitz3.ab2@10295>   BLT 'l100
0002DD92 <AmiBlitz3.ab2@10296>   SUB.l chipsize,d1
0002DD98 <AmiBlitz3.ab2@10299>   CMP.l bssend,d2
0002DD9C <AmiBlitz3.ab2@10300>   BLT 'l101
0002DDA2 <AmiBlitz3.ab2@10301>   SUB.l bsssize,d1
0002DDA4 <AmiBlitz3.ab2@10304>   MOVE.l d1,(a1)
0002DDA6 <AmiBlitz3.ab2@10305>   SUB.l D4,(A1)+
0002DDA8 <AmiBlitz3.ab2@10308>   MOVEA.l (A2),A2
0002DDAC <AmiBlitz3.ab2@10309> BRA.w menu_createresidentfile__oloopb
0002DDAE <AmiBlitz3.ab2@10313>   MOVE.l D7,D1
0002DDB4 <AmiBlitz3.ab2@10314>   MOVEA.l _dosbase,A6
0002DDBE <AmiBlitz3.ab2@10315>   MOVE.l hunkoffsetnum,tstsize3
0002DDC2 <AmiBlitz3.ab2@10316>   BEQ 'ln1
0002DDC8 <AmiBlitz3.ab2@10317>   MOVE.l #tstend+4,d2
0002DDCA <AmiBlitz3.ab2@10318>     MOVEQ #8,d3
0002DDCE <AmiBlitz3.ab2@10319>    JSR _Write(A6)
0002DDD0 <AmiBlitz3.ab2@10320>   MOVE.l d7,d1
0002DDD6 <AmiBlitz3.ab2@10321>   MOVE.l hunkoffsetnum,d3
0002DDD8 <AmiBlitz3.ab2@10322>   ASL.l #2,d3
0002DDDA <AmiBlitz3.ab2@10323>   MOVE.l d5,D2
0002DDDE <AmiBlitz3.ab2@10324>   JSR _Write(a6)
0002DDE4 <AmiBlitz3.ab2@10327>   TST.b newhunk
0002DDE8 <AmiBlitz3.ab2@10328>   BEQ 'l10
0002DDEE <AmiBlitz3.ab2@10329>   MOVEA.l hunkoffsetbase,A2
0002DDF0 <AmiBlitz3.ab2@10330>   MOVE.l d5,a0
0002DDF2 <AmiBlitz3.ab2@10331>   ADDQ #8,a0
0002DDFA <AmiBlitz3.ab2@10332>   MOVE.l bssnum,-4(a0)
0002DDFC <AmiBlitz3.ab2@10333>   MOVEQ #0,d6
0002DE00 <AmiBlitz3.ab2@10336>   CMPA.w #$0,A2
0002DE04 <AmiBlitz3.ab2@10337>    BEQ.w 'lh3
0002DE0A <AmiBlitz3.ab2@10338>   MOVE.l destbufferstart,D2
0002DE10 <AmiBlitz3.ab2@10339>   ADD.l noinits,D2
0002DE14 <AmiBlitz3.ab2@10340>   MOVE.l  $4(A2),d1
0002DE18 <AmiBlitz3.ab2@10341>   BTST #30,d1
0002DE1C <AmiBlitz3.ab2@10342>   BEQ 'lh1
0002DE20 <AmiBlitz3.ab2@10343>   BCLR #30,d1
0002DE22 <AmiBlitz3.ab2@10344>   MOVE.l d1,(a0)
0002DE24 <AmiBlitz3.ab2@10345>   SUB.l D4,(A0)+
0002DE26 <AmiBlitz3.ab2@10346>   ADDQ.l #1,d6
0002DE28 <AmiBlitz3.ab2@10349>   MOVE.l (a2),a2
0002DE2C <AmiBlitz3.ab2@10350> BRA 'lh2
0002DE2E <AmiBlitz3.ab2@10353>   TST.l d6
0002DE32 <AmiBlitz3.ab2@10354>     BEQ 'lh10
0002DE34 <AmiBlitz3.ab2@10355>     MOVE.l d5,a0
0002DE36 <AmiBlitz3.ab2@10356>     MOVE.l d6,(a0)
0002DE38 <AmiBlitz3.ab2@10357>     MOVE.l d7,d1
0002DE3A <AmiBlitz3.ab2@10358>     MOVE.l d5,d2
0002DE3C <AmiBlitz3.ab2@10359>     MOVE.l d6,d3
0002DE3E <AmiBlitz3.ab2@10360>     ASL.l #2,d3
0002DE40 <AmiBlitz3.ab2@10361>     ADDQ.l #8,d3
0002DE44 <AmiBlitz3.ab2@10362>     BSR.w mywrite
0002DE4A <AmiBlitz3.ab2@10365>   MOVEA.l hunkoffsetbase,A2
0002DE4C <AmiBlitz3.ab2@10366>   MOVE.l d5,a0
0002DE4E <AmiBlitz3.ab2@10367>   ADDQ #8,a0
0002DE56 <AmiBlitz3.ab2@10368>   MOVE.l chipnum,-4(a0)
0002DE58 <AmiBlitz3.ab2@10369>   MOVEQ #0,d6
0002DE5C <AmiBlitz3.ab2@10372>   CMPA.w #$0,A2
0002DE60 <AmiBlitz3.ab2@10373>    BEQ.w 'lh30
0002DE66 <AmiBlitz3.ab2@10374>   MOVE.l destbufferstart,D2
0002DE6C <AmiBlitz3.ab2@10375>   ADD.l noinits,D2
0002DE70 <AmiBlitz3.ab2@10376>   MOVE.l  $4(A2),d1
0002DE74 <AmiBlitz3.ab2@10377>   BTST #31,d1
0002DE78 <AmiBlitz3.ab2@10378>   BEQ 'lh11
0002DE7C <AmiBlitz3.ab2@10379>   BCLR #31,d1
0002DE7E <AmiBlitz3.ab2@10380>   MOVE.l d1,(a0)
0002DE80 <AmiBlitz3.ab2@10381>   SUB.l D4,(A0)+
0002DE82 <AmiBlitz3.ab2@10382>   ADDQ.l #1,d6
0002DE84 <AmiBlitz3.ab2@10385>   MOVE.l (a2),a2
0002DE88 <AmiBlitz3.ab2@10386> BRA 'lh20
0002DE8A <AmiBlitz3.ab2@10389>   TST.l d6
0002DE8E <AmiBlitz3.ab2@10390>     BEQ 'l10
0002DE90 <AmiBlitz3.ab2@10391>     MOVE.l d5,a0
0002DE92 <AmiBlitz3.ab2@10392>     MOVE.l d6,(a0)
0002DE94 <AmiBlitz3.ab2@10393>     MOVE.l d7,d1
0002DE96 <AmiBlitz3.ab2@10394>     MOVE.l d5,d2
0002DE98 <AmiBlitz3.ab2@10395>     MOVE.l d6,d3
0002DE9A <AmiBlitz3.ab2@10396>     ASL.l #2,d3
0002DE9C <AmiBlitz3.ab2@10397>     ADDQ.l #8,d3
0002DEA0 <AmiBlitz3.ab2@10398>     BSR.w mywrite
0002DEA6 <AmiBlitz3.ab2@10402>    MOVEA.l _execbase,A6
0002DEAC <AmiBlitz3.ab2@10403>    MOVE.l hunkoffsetcounter,d0
0002DEAE <AmiBlitz3.ab2@10404>    ASL.l #2,d0
0002DEB4 <AmiBlitz3.ab2@10405>    ADD.l #12,d0
0002DEB6 <AmiBlitz3.ab2@10406>    MOVE.l d5,a1
0002DEBA <AmiBlitz3.ab2@10407>    JSR _FreeMem(a6)
0002DEC0 <AmiBlitz3.ab2@10408>    MOVEA.l _dosbase,A6
0002DEC2 <AmiBlitz3.ab2@10409>    MOVE.l (a7)+,d5
0002DEC6 <AmiBlitz3.ab2@10410> BRA JL_0_7632
0002DECC <AmiBlitz3.ab2@10414>   MOVEA.l hunkoffsetbase,A2
0002DED2 <AmiBlitz3.ab2@10415>   MOVE.l noinits,D4
0002DED6 <AmiBlitz3.ab2@10418>   CMPA.w #$0,A2                                            ;write hunkoffsets
0002DEDA <AmiBlitz3.ab2@10419>   BEQ.w JL_0_7632
0002DEDE <AmiBlitz3.ab2@10420>   LEA $4(A2),A1
0002DEE0 <AmiBlitz3.ab2@10421>   SUB.l D4,(A1)
0002DEE2 <AmiBlitz3.ab2@10422>   MOVE.l D7,D1
0002DEE4 <AmiBlitz3.ab2@10423>   MOVE.l A1,D2
0002DEE6 <AmiBlitz3.ab2@10424>   MOVEQ.l #$04,D3
0002DEEA <AmiBlitz3.ab2@10425>   BSR.w mywrite
0002DEEE <AmiBlitz3.ab2@10426>   ADD.l D4,$4(A2)
0002DEF0 <AmiBlitz3.ab2@10427>   MOVEA.l (A2),A2
0002DEF4 <AmiBlitz3.ab2@10428> BRA.w JL_0_7610
0002DEFA <AmiBlitz3.ab2@10431>   CLR.l tstsize3
0002DEFC <AmiBlitz3.ab2@10432>   MOVE.l D7,D1
0002DF02 <AmiBlitz3.ab2@10433>   MOVE.l #tstsize3,D2
0002DF04 <AmiBlitz3.ab2@10434>   MOVEQ.l #$04,D3
0002DF08 <AmiBlitz3.ab2@10435>    BSR.w mywrite
0002DF10 <AmiBlitz3.ab2@10438>   BTST #$7,link_debuginfo
0002DF14 <AmiBlitz3.ab2@10439>    BEQ.w JL_0_7706
0002DF1A <AmiBlitz3.ab2@10440>   MOVE.l #sysdebug,D2                                      ;debughunks
0002DF1C <AmiBlitz3.ab2@10441>   MOVEQ.l #$04,D3
0002DF1E <AmiBlitz3.ab2@10442>   MOVE.l D7,D1
0002DF22 <AmiBlitz3.ab2@10443>    BSR.w mywrite
0002DF28 <AmiBlitz3.ab2@10444>   MOVEA.l labelbase,A2
0002DF2C <AmiBlitz3.ab2@10447>   CMPA.w #$0,A2
0002DF30 <AmiBlitz3.ab2@10448>    BEQ.w JL_0_76F8
0002DF36 <AmiBlitz3.ab2@10449>   BTST #$0,$7(A2)
0002DF3A <AmiBlitz3.ab2@10450>    BEQ.w JL_0_7682
0002DF42 <AmiBlitz3.ab2@10451>   CMPI.l #$1,$4(A2)
0002DF46 <AmiBlitz3.ab2@10453>   BRA.w JL_0_76F2                                            ;only addr labels
0002DF48 <AmiBlitz3.ab2@10455>   MOVEQ.l #$00,D4
0002DF4C <AmiBlitz3.ab2@10456>   MOVE.b $12(A2),D4
0002DF50 <AmiBlitz3.ab2@10457>   SUBI.w #$13,D4
0002DF52 <AmiBlitz3.ab2@10458>   ADDQ.w #2,D4
0002DF56 <AmiBlitz3.ab2@10459>   ANDI.w #$FFFC,D4
0002DF58 <AmiBlitz3.ab2@10460>   MOVE.l D4,D5
0002DF5A <AmiBlitz3.ab2@10461>   LSR.w #2,D5
0002DF60 <AmiBlitz3.ab2@10462>   MOVE.l D5,temp1
0002DF62 <AmiBlitz3.ab2@10463>   LSL.w #2,D5
0002DF68 <AmiBlitz3.ab2@10464>   MOVE.l #temp1,a1
0002DF6E <AmiBlitz3.ab2@10466>   LEA debugstore,a0
0002DF70 <AmiBlitz3.ab2@10467>   MOVE.l (a1),(a0)+
0002DF72 <AmiBlitz3.ab2@10468>   MOVEQ.l #$04,D3
0002DF76 <AmiBlitz3.ab2@10471>   LEA $13(A2),A1
0002DF78 <AmiBlitz3.ab2@10472>   MOVE.l d4,d1
0002DF7A <AmiBlitz3.ab2@10473>   SUBQ.l #1,d1
0002DF7C <AmiBlitz3.ab2@10476>     MOVE.b (a1)+,d0
0002DF80 <AmiBlitz3.ab2@10477>     BEQ 'l21
0002DF84 <AmiBlitz3.ab2@10478>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
0002DF88 <AmiBlitz3.ab2@10479>     BNE 'ok
0002DF8C <AmiBlitz3.ab2@10480>     MOVE.b #"_",d0
0002DF8E <AmiBlitz3.ab2@10481> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
0002DF92 <AmiBlitz3.ab2@10482>   DBF d1,'l10
0002DF96 <AmiBlitz3.ab2@10484> BRA 'l22
0002DF98 <AmiBlitz3.ab2@10487>       CLR.b (a0)+
0002DF9C <AmiBlitz3.ab2@10488>   DBF d1,'l21
0002DF9E <AmiBlitz3.ab2@10491>   ADD.l d4,d3
0002DFA0 <AmiBlitz3.ab2@10496>   SUB.l D4,D5
0002DFA4 <AmiBlitz3.ab2@10497>    BEQ.w JL_0_76CE
0002DFAA <AmiBlitz3.ab2@10498>   MOVE.l #zero,a1
0002DFAC <AmiBlitz3.ab2@10500>   MOVE.l (a1),(a0)+
0002DFAE <AmiBlitz3.ab2@10502>   ADD.l d5,d3
0002DFB2 <AmiBlitz3.ab2@10507>   MOVE.l $8(A2),D2
0002DFB8 <AmiBlitz3.ab2@10508>   SUB.l destbufferstart,D2
0002DFBE <AmiBlitz3.ab2@10509>   SUB.l noinits,D2
0002DFC4 <AmiBlitz3.ab2@10510>   MOVE.l D2,temp1
0002DFCA <AmiBlitz3.ab2@10511>   MOVE.l #temp1,a1
0002DFCC <AmiBlitz3.ab2@10513>   MOVE.l (a1),(a0)+
0002DFD2 <AmiBlitz3.ab2@10514>   ADD.l #4,d3
0002DFD8 <AmiBlitz3.ab2@10515>   LEA debugstore,a0
0002DFDA <AmiBlitz3.ab2@10516>   MOVE.l a0,d2
0002DFDC <AmiBlitz3.ab2@10518>   MOVE.l D7,D1
0002DFE0 <AmiBlitz3.ab2@10519>   BSR.w mywrite
0002DFE2 <AmiBlitz3.ab2@10522>   MOVEA.l (A2),A2
0002DFE6 <AmiBlitz3.ab2@10523> BRA.w JL_0_7664
0002DFEC <AmiBlitz3.ab2@10527>   MOVE.l #zero,D2
0002DFEE <AmiBlitz3.ab2@10528>   MOVEQ.l #$04,D3
0002DFF0 <AmiBlitz3.ab2@10529>   MOVE.l D7,D1
0002DFF4 <AmiBlitz3.ab2@10530>   BSR.w mywrite
0002DFF6 <AmiBlitz3.ab2@10533>   MOVE.l D7,D1
0002DFFC <AmiBlitz3.ab2@10534>   MOVE.l #tstdone,D2                                      ;hunkend
0002DFFE <AmiBlitz3.ab2@10535>   MOVEQ.l #$04,D3
0002E008 <AmiBlitz3.ab2@10536>   CMPI.l #-1,bssstart
0002E00C <AmiBlitz3.ab2@10537>   BEQ 'l10
0002E00E <AmiBlitz3.ab2@10538>   MOVEQ #16,d3
0002E014 <AmiBlitz3.ab2@10539>   MOVE.l #hunkend,d2
0002E01E <AmiBlitz3.ab2@10540>   CMPI.l #-1,chipstart
0002E022 <AmiBlitz3.ab2@10541>   BEQ 'l10
0002E024 <AmiBlitz3.ab2@10542>   MOVE.l d7,d1
0002E026 <AmiBlitz3.ab2@10543>   MOVEQ #12,d3
0002E02A <AmiBlitz3.ab2@10544>   BSR.w mywrite
0002E034 <AmiBlitz3.ab2@10547>   CMPI.l #-1,chipstart
0002E038 <AmiBlitz3.ab2@10548>   BEQ 'l11
0002E03A <AmiBlitz3.ab2@10549>   MOVEQ #12,d3
0002E040 <AmiBlitz3.ab2@10550>   MOVE.l #hunkend2,d2
0002E042 <AmiBlitz3.ab2@10551>   MOVE.l d7,d1
0002E046 <AmiBlitz3.ab2@10552>   BSR.w mywrite
0002E048 <AmiBlitz3.ab2@10553>   MOVE.l d7,d1
0002E04E <AmiBlitz3.ab2@10554>   MOVE.l chipstart,d2
0002E054 <AmiBlitz3.ab2@10555>   MOVE.l chipsize,d3
0002E058 <AmiBlitz3.ab2@10556>   BSR.w mywrite
0002E05A <AmiBlitz3.ab2@10557>   MOVEQ #4,d3
0002E060 <AmiBlitz3.ab2@10558>   MOVE.l #hunkend,d2
0002E062 <AmiBlitz3.ab2@10559>   MOVE.l d7,d1
0002E066 <AmiBlitz3.ab2@10562>   BSR.w mywrite
0002E068 <AmiBlitz3.ab2@10563>   MOVE.l D7,D1
0002E06E <AmiBlitz3.ab2@10564>   MOVEA.l _dosbase,A6
0002E072 <AmiBlitz3.ab2@10565>   JSR _Close(A6)
0002E07A <AmiBlitz3.ab2@10570>   BTST #$7,create_iconfile
0002E07E <AmiBlitz3.ab2@10571>    BEQ.w skip_createicon
0002E084 <AmiBlitz3.ab2@10573>   MOVEA.l ptr_newexefilename,A0
0002E086 <AmiBlitz3.ab2@10576>     TST.b (A0)+
0002E08A <AmiBlitz3.ab2@10577>   BNE.w JL_0_772C
0002E08C <AmiBlitz3.ab2@10578>   SUBQ.w #1,A0
0002E08E <AmiBlitz3.ab2@10579>   MOVE.l A0,-(A7)
0002E094 <AmiBlitz3.ab2@10580>   LEA str_infoextention2,A1
0002E096 <AmiBlitz3.ab2@10583>     MOVE.b (A1)+,(A0)+
0002E09A <AmiBlitz3.ab2@10584>   BNE.w JL_0_773A
0002E0A0 <AmiBlitz3.ab2@10586>   MOVE.l ptr_newexefilename,D1
0002E0A2 <AmiBlitz3.ab2@10587>   MOVEQ.l #-$02,D2
0002E0A8 <AmiBlitz3.ab2@10588>   MOVEA.l _dosbase,A6
0002E0AC <AmiBlitz3.ab2@10589>   JSR _Lock(A6)
0002E0AE <AmiBlitz3.ab2@10590>   MOVE.l D0,D1
0002E0B2 <AmiBlitz3.ab2@10591>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
0002E0B6 <AmiBlitz3.ab2@10592>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
0002E0BA <AmiBlitz3.ab2@10593> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
0002E0C0 <AmiBlitz3.ab2@10596>   MOVE.l ptr_newexefilename,D1
0002E0C6 <AmiBlitz3.ab2@10597>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
0002E0CC <AmiBlitz3.ab2@10598>   MOVEA.l _dosbase,A6
0002E0D0 <AmiBlitz3.ab2@10599>    JSR _Open(A6)
0002E0D2 <AmiBlitz3.ab2@10600>   MOVE.l D0,D7
0002E0D6 <AmiBlitz3.ab2@10601>    BEQ.w JL_0_7788
0002E0DC <AmiBlitz3.ab2@10602>   MOVE.l #icongfx_data,D2                                  ; icon graphics
0002E0E2 <AmiBlitz3.ab2@10603>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
0002E0E4 <AmiBlitz3.ab2@10604>   MOVE.l D7,D1
0002E0EA <AmiBlitz3.ab2@10605>   MOVEA.l _dosbase,A6
0002E0EE <AmiBlitz3.ab2@10606>   JSR _Write(A6)
0002E0F0 <AmiBlitz3.ab2@10607>   MOVE.l D7,D1
0002E0F4 <AmiBlitz3.ab2@10608>   JSR _Close(A6)
0002E0F6 <AmiBlitz3.ab2@10611>   MOVEA.l (A7)+,A0
0002E0F8 <AmiBlitz3.ab2@10612>   CLR.b (A0)
0002E0FE <AmiBlitz3.ab2@10617>   TST.b exdebug
0002E102 <AmiBlitz3.ab2@10618>    BEQ JL_0_757Cb
0002E108 <AmiBlitz3.ab2@10619>   MOVE.w dontwrite,D1
0002E10C <AmiBlitz3.ab2@10620>   BNE.w JL_0_757Cb
0002E112 <AmiBlitz3.ab2@10621>   MOVE.l chipsize,d5
0002E118 <AmiBlitz3.ab2@10622>   MOVE.l bsssize,d3
0002E11E <AmiBlitz3.ab2@10623>   MOVE.l chipstart,d7
0002E124 <AmiBlitz3.ab2@10624>   MOVE.l bssstart,d6
0002E12A <AmiBlitz3.ab2@10625>   MOVEA.l hunkoffsetbase,A2
0002E130 <AmiBlitz3.ab2@10626>   MOVEA.l destbufferstart,A1
0002E132 <AmiBlitz3.ab2@10627>   MOVE.l A1,D2
0002E138 <AmiBlitz3.ab2@10628>   ADD.l noinits,D2
0002E13E <AmiBlitz3.ab2@10629>   CLR.l hunkoffsetnum
0002E142 <AmiBlitz3.ab2@10632>   CMPA.w #$0,A2
0002E146 <AmiBlitz3.ab2@10633>    BEQ.w JL_0_757Cb
0002E14A <AmiBlitz3.ab2@10634>   MOVE.l $4(A2),D0
0002E14E <AmiBlitz3.ab2@10635>    LEA $0(a1,d0.l),a0
0002E150 <AmiBlitz3.ab2@10636>    MOVE.l (a0),d1
0002E152 <AmiBlitz3.ab2@10637>   TST.l d1
0002E156 <AmiBlitz3.ab2@10638>    BMI.w 'lm1
0002E15E <AmiBlitz3.ab2@10639>   MOVE.b #0,newhunk
0002E168 <AmiBlitz3.ab2@10640>   CMP.l #-1,chipstart
0002E16C <AmiBlitz3.ab2@10641>   BEQ 'l10
0002E172 <AmiBlitz3.ab2@10642>   CMP.l chipstart,d1
0002E176 <AmiBlitz3.ab2@10643>   BLT 'l10
0002E17E <AmiBlitz3.ab2@10644>   MOVE.b #1,newhunk
0002E184 <AmiBlitz3.ab2@10645>   CMP.l chipend,d1
0002E188 <AmiBlitz3.ab2@10646>   BGE 'l110
0002E18A <AmiBlitz3.ab2@10647>   ADD.l d7,(a0)
0002E192 <AmiBlitz3.ab2@10648>   ADD.l #$80000000,4(a2)
0002E196 <AmiBlitz3.ab2@10649> BRA JL_0_7576b
0002E19A <AmiBlitz3.ab2@10652>   ADD.l d5,0(a0)
0002E1A4 <AmiBlitz3.ab2@10655>   CMP.l #-1,bssstart
0002E1A8 <AmiBlitz3.ab2@10656>     BEQ 'l11
0002E1AE <AmiBlitz3.ab2@10657>   CMP.l bssstart,d1
0002E1B2 <AmiBlitz3.ab2@10658>   BLT 'l11
0002E1B8 <AmiBlitz3.ab2@10659>   CMP.l bssend,d1
0002E1BC <AmiBlitz3.ab2@10660>   BGE 'l111
0002E1C2 <AmiBlitz3.ab2@10661>   TST.b newhunk
0002E1C6 <AmiBlitz3.ab2@10662>   BEQ 'ln1
0002E1C8 <AmiBlitz3.ab2@10663>   ADD.l d5,(a0)
0002E1CA <AmiBlitz3.ab2@10666>   ADD.l d6,(a0)
0002E1D2 <AmiBlitz3.ab2@10667>   ADD.l #$40000000,4(a2)
0002E1D6 <AmiBlitz3.ab2@10668> BRA JL_0_7576b
0002E1DA <AmiBlitz3.ab2@10671>   ADD.l d3,0(a0)
0002E1DC <AmiBlitz3.ab2@10674>   ADD.l D2,(A0)                                            ;only normal code offsets restore
0002E1E2 <AmiBlitz3.ab2@10677>   ADDQ.l #1,hunkoffsetnum
0002E1E4 <AmiBlitz3.ab2@10680>   MOVEA.l (A2),A2
0002E1E8 <AmiBlitz3.ab2@10681> BRA.w JL_0_755Eb
0002E1EE <AmiBlitz3.ab2@10684>   JSR call_setpointernormal
0002E1F2 <AmiBlitz3.ab2@10685>   MOVEM.l (a7)+,d2-d7/a2-a6
0002E1F4 <AmiBlitz3.ab2@10687> RTS
0002E1F6 <AmiBlitz3.ab2@10691>   MOVE.l D2,-(A7)
0002E1FC <AmiBlitz3.ab2@10692>   MOVE.l destpointer,D2
0002E202 <AmiBlitz3.ab2@10693>   SUB.l destbufferstart,D2
0002E206 <AmiBlitz3.ab2@10694>   BSR.w addhunkoffset
0002E208 <AmiBlitz3.ab2@10695>   MOVE.l (A7)+,D2
0002E20A <AmiBlitz3.ab2@10696> RTS
0002E20E <AmiBlitz3.ab2@10700>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002E214 <AmiBlitz3.ab2@10701>   TST.b nohunkoffset
0002E218 <AmiBlitz3.ab2@10702>   BNE 'l10
0002E21A <AmiBlitz3.ab2@10703>   MOVEQ.l #$8,D0
0002E21C <AmiBlitz3.ab2@10704>   MOVEQ.l #$01,D1
0002E222 <AmiBlitz3.ab2@10705>   MOVEA.l _execbase,A6
0002E228 <AmiBlitz3.ab2@10706>   MOVE.l mempool2,a0
0002E22C <AmiBlitz3.ab2@10707>   JSR _AllocPooled(a6)
0002E232 <AmiBlitz3.ab2@10709>   ADDQ.l #1,hunkoffsetcounter
0002E234 <AmiBlitz3.ab2@10710>   MOVEA.l D0,A0
0002E23A <AmiBlitz3.ab2@10711>   MOVE.l hunkoffsetbase,(A0)
0002E240 <AmiBlitz3.ab2@10712>   MOVE.l A0,hunkoffsetbase
0002E244 <AmiBlitz3.ab2@10713>   MOVE.l D2,$4(A0)
0002E248 <AmiBlitz3.ab2@10716>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002E24A <AmiBlitz3.ab2@10717> RTS
0002E250 <AmiBlitz3.ab2@10721>   CLR.l hunkoffsetbase
0002E256 <AmiBlitz3.ab2@10722>   MOVEA.l _execbase,A6
0002E25C <AmiBlitz3.ab2@10723>   MOVEA.l hunkoffsetbase,A2
0002E260 <AmiBlitz3.ab2@10726>     CMPA.w #$0,A2
0002E264 <AmiBlitz3.ab2@10727>      BEQ.w JL_0_7988
0002E266 <AmiBlitz3.ab2@10728>     MOVEA.l A2,A1
0002E268 <AmiBlitz3.ab2@10729>     MOVEQ.l #$08,D0
0002E26A <AmiBlitz3.ab2@10730>     MOVEA.l (A2),A2
0002E270 <AmiBlitz3.ab2@10731>     MOVE.l mempool2,a0
0002E274 <AmiBlitz3.ab2@10732>     JSR _FreePooled(A6)
0002E278 <AmiBlitz3.ab2@10733> BRA.w JL_0_7972
0002E27E <AmiBlitz3.ab2@10736>   CLR.l hunkoffsetcounter
0002E280 <AmiBlitz3.ab2@10737> RTS
0002E298 <AmiBlitz3.ab2@10740> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
0002E29C <AmiBlitz3.ab2@10741> cmakea5:    Ds.l 1
0002E29E <AmiBlitz3.ab2@10742> cmake:      Ds.w 1
0002E31E <AmiBlitz3.ab2@10743> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
0002E324 <AmiBlitz3.ab2@10747>   MOVE.l A5,lastsourcepos
0002E32E <AmiBlitz3.ab2@10748>   MOVE.w instringon,oldqflag
0002E330 <AmiBlitz3.ab2@10752>   MOVEQ.l #$00,D0
0002E332 <AmiBlitz3.ab2@10753>   MOVE.b (A5)+,D0
0002E336 <AmiBlitz3.ab2@10754>    BEQ getcharb__donea
0002E33A <AmiBlitz3.ab2@10755>   BPL getcharb__stuffa
0002E33C <AmiBlitz3.ab2@10756>   LSL.l #8,D0
0002E33E <AmiBlitz3.ab2@10757>   MOVE.b (A5)+,D0
0002E340 <AmiBlitz3.ab2@10758>   MOVE.l a1,-(a7)
0002E346 <AmiBlitz3.ab2@10759>   LEA replacedat,a1
0002E34A <AmiBlitz3.ab2@10760>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
0002E34E <AmiBlitz3.ab2@10761>   BEQ getchar__l10
0002E352 <AmiBlitz3.ab2@10762>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
0002E358 <AmiBlitz3.ab2@10765>   MOVE.l d0,lasttoken
0002E35A <AmiBlitz3.ab2@10766>   MOVE.l (a7)+,a1
0002E35E <AmiBlitz3.ab2@10767> BRA getchar__weiter
0002E362 <AmiBlitz3.ab2@10770>   CMP.w #$22,D0
0002E366 <AmiBlitz3.ab2@10771>    BEQ.b swapquotea
0002E36A <AmiBlitz3.ab2@10772>   CMP.w #$3B,D0
0002E36E <AmiBlitz3.ab2@10773>    BNE.b getcharb__donea
0002E374 <AmiBlitz3.ab2@10774>   TST.w instringon
0002E378 <AmiBlitz3.ab2@10775>    BNE.b getcharb__donea
0002E37A <AmiBlitz3.ab2@10778>   MOVE.b (A5)+,D0
0002E37E <AmiBlitz3.ab2@10779>              BEQ getchar__l1
0002E382 <AmiBlitz3.ab2@10780>              CMP.b #":",d0
0002E386 <AmiBlitz3.ab2@10781>              BNE getcharb__loopa                                ;:@
0002E38A <AmiBlitz3.ab2@10782>              CMP.b #"@",(a5)
0002E38E <AmiBlitz3.ab2@10783>              BNE getcharb__loopa
0002E390 <AmiBlitz3.ab2@10784>              ADDQ #1,a5
0002E396 <AmiBlitz3.ab2@10787>   MOVE.w D0,lastchar
0002E39A <AmiBlitz3.ab2@10790> BRA.s getchar__weiter
0002E3A0 <AmiBlitz3.ab2@10793>   NOT.w instringon
0002E3A6 <AmiBlitz3.ab2@10796>    MOVE.w D0,lastchar
0002E3AA <AmiBlitz3.ab2@10797>    BEQ.w getchar__done
0002E3AE <AmiBlitz3.ab2@10798>    BPL.w getchar__done2
0002E3B2 <AmiBlitz3.ab2@10799>   CMP.w #-$7FE4,D0                                         ;cnif
0002E3B6 <AmiBlitz3.ab2@10800>    BEQ.w getchar__cnif
0002E3BA <AmiBlitz3.ab2@10801>   CMP.w #-$7FE3,D0                                         ;csif
0002E3BE <AmiBlitz3.ab2@10802>    BEQ.w getchar__csif
0002E3C2 <AmiBlitz3.ab2@10803>   CMP.w #-$7FE2,D0                                         ;celse
0002E3C6 <AmiBlitz3.ab2@10804>    BEQ.w getchar__celse
0002E3CA <AmiBlitz3.ab2@10805>   CMP.w #-$7FE1,D0                                         ;cend
0002E3CE <AmiBlitz3.ab2@10806>    BEQ.w getchar__cend
0002E3D4 <AmiBlitz3.ab2@10809>   TST.w skipcode
0002E3D8 <AmiBlitz3.ab2@10810>    BEQ.w getchar
0002E3DC <AmiBlitz3.ab2@10811>   CMP.w #$7E,D0
0002E3E0 <AmiBlitz3.ab2@10812>    BEQ.w getchar__cmake                                         ;tilde
0002E3E4 <AmiBlitz3.ab2@10813>   CMP.w #$2,D0
0002E3E8 <AmiBlitz3.ab2@10814>    BNE.w getchar__notunpath
0002E3EE <AmiBlitz3.ab2@10815>   MOVEA.l usedfrom,A5
0002E3F4 <AmiBlitz3.ab2@10816>   CLR.l usedfrom
0002E3F8 <AmiBlitz3.ab2@10817> BRA.w getchar
0002E3FC <AmiBlitz3.ab2@10820>   CMP.w #$1,D0
0002E400 <AmiBlitz3.ab2@10821>    BNE.w getchar__done
0002E404 <AmiBlitz3.ab2@10825>   MOVEA.l cmakea5(PC),A5
0002E408 <AmiBlitz3.ab2@10826> BRA.w getchar
0002E40E <AmiBlitz3.ab2@10829>   TST.w cmake
0002E412 <AmiBlitz3.ab2@10830>    BNE.w getchar__done
0002E416 <AmiBlitz3.ab2@10832>   MOVEM.l D0-D7/A0-A6,-(A7)
0002E41C <AmiBlitz3.ab2@10833>   LEA cmake,a0                                         ;reass
0002E41E <AmiBlitz3.ab2@10834>   NOT.w (a0)
0002E422 <AmiBlitz3.ab2@10835>   LEA cmakebak(PC),A0
0002E428 <AmiBlitz3.ab2@10836>   LEA ptr_parameterstore,A1
0002E42A <AmiBlitz3.ab2@10837>   MOVEQ.l #$1F,D0
0002E42C <AmiBlitz3.ab2@10840>     MOVE.l (A1)+,(A0)+
0002E430 <AmiBlitz3.ab2@10841>   DBF D0,getchar__cmloop
0002E436 <AmiBlitz3.ab2@10844>    JSR AJL_0_BF6E
0002E43A <AmiBlitz3.ab2@10845>   CMP.w #$7E,D0
0002E43E <AmiBlitz3.ab2@10846>    BNE.w syntaxerr
0002E444 <AmiBlitz3.ab2@10847>   MOVE.l A5,cmakea5                                      ;tilde
0002E448 <AmiBlitz3.ab2@10848>   LEA cmakebuff(PC),A0
0002E44A <AmiBlitz3.ab2@10849>   MOVE.l D3,D2
0002E44E <AmiBlitz3.ab2@10850>   BSR.w makelong
0002E450 <AmiBlitz3.ab2@10851>   ADDQ.b #1,(A0)
0002E456 <AmiBlitz3.ab2@10852>   LEA cmake,a0
0002E458 <AmiBlitz3.ab2@10853>   NOT.w (a0)                                               ;reass
0002E45C <AmiBlitz3.ab2@10854>   LEA cmakebak(PC),A0
0002E462 <AmiBlitz3.ab2@10855>   LEA ptr_parameterstore,A1
0002E464 <AmiBlitz3.ab2@10856>   MOVEQ.l #$1F,D0
0002E466 <AmiBlitz3.ab2@10859>     MOVE.l (A0)+,(A1)+
0002E46A <AmiBlitz3.ab2@10860>   DBF D0,getchar__cmloop2
0002E46E <AmiBlitz3.ab2@10862>   MOVEM.l (A7)+,D0-D7/A0-A6
0002E472 <AmiBlitz3.ab2@10863>   LEA cmakebuff(PC),A5
0002E476 <AmiBlitz3.ab2@10864> BRA.w getchar
0002E478 <AmiBlitz3.ab2@10867> RTS
0002E482 <AmiBlitz3.ab2@10871>   MOVE.l linenumat,ciflineat                               ;csif
0002E488 <AmiBlitz3.ab2@10872>   TST.w skipcode
0002E48C <AmiBlitz3.ab2@10873>    BEQ.w getchar__incnest
0002E490 <AmiBlitz3.ab2@10874>    BSR.w get1bytemain
0002E492 <AmiBlitz3.ab2@10875>    MOVE.l a1,-(a7)
0002E498 <AmiBlitz3.ab2@10876>    JSR JL_0_C492
0002E49A <AmiBlitz3.ab2@10877>    MOVE.l (a7)+,a1
0002E49E <AmiBlitz3.ab2@10878> BRA.w getchar
0002E4A8 <AmiBlitz3.ab2@10881>   MOVE.l linenumat,ciflineat                               ;cnif
0002E4AE <AmiBlitz3.ab2@10882>   TST.w skipcode
0002E4B2 <AmiBlitz3.ab2@10883>    BEQ.w getchar__incnest
0002E4B6 <AmiBlitz3.ab2@10884>    BSR.w get1bytemain
0002E4BA <AmiBlitz3.ab2@10885>    CMP.b #"@",d0
0002E4BE <AmiBlitz3.ab2@10886>    BNE getchar__cnif_ok2
0002E4C2 <AmiBlitz3.ab2@10887>    BSR.w get1bytemain
0002E4CA <AmiBlitz3.ab2@10888>    MOVE.b #1,incnif
0002E4D0 <AmiBlitz3.ab2@10889>    JSR findconstant2
0002E4D4 <AmiBlitz3.ab2@10890>    BEQ getchar__cnif_ok2
0002E4DA <AmiBlitz3.ab2@10893>    MOVE.w fast,-(a7)
0002E4E0 <AmiBlitz3.ab2@10894>    CLR.b fast
0002E4E2 <AmiBlitz3.ab2@10895>    MOVE.l a1,-(a7)
0002E4E8 <AmiBlitz3.ab2@10896>    JSR JL_0_C47E
0002E4EE <AmiBlitz3.ab2@10897>    CLR.b incnif
0002E4F0 <AmiBlitz3.ab2@10898>    MOVE.l (a7)+,a1
0002E4F6 <AmiBlitz3.ab2@10899>    MOVE.w (a7)+,fast
0002E4FA <AmiBlitz3.ab2@10900> BRA.w getchar
0002E500 <AmiBlitz3.ab2@10903>   ADDQ.w #1,connest
0002E504 <AmiBlitz3.ab2@10904> BRA.w getchar
0002E50A <AmiBlitz3.ab2@10907>   MOVE.w connest,D0                                      ;celse
0002E50E <AmiBlitz3.ab2@10908>    BNE.w getchar
0002E514 <AmiBlitz3.ab2@10909>   NOT.w skipcode
0002E518 <AmiBlitz3.ab2@10910> BRA.w getchar
0002E51E <AmiBlitz3.ab2@10913>   SUBQ.w #1,connest                                      ;cend
0002E522 <AmiBlitz3.ab2@10914>    BPL.w getchar
0002E528 <AmiBlitz3.ab2@10915>   ADDQ.w #1,connest
0002E52E <AmiBlitz3.ab2@10916>   MOVEA.l concomsp,A0
0002E534 <AmiBlitz3.ab2@10917>   CMPA.l #concomstack,A0
0002E538 <AmiBlitz3.ab2@10918>    BEQ.w nociferr
0002E53A <AmiBlitz3.ab2@10919>   SUBQ.w #2,A0
0002E540 <AmiBlitz3.ab2@10920>   MOVE.l A0,concomsp
0002E546 <AmiBlitz3.ab2@10921>   MOVE.w (A0),skipcode
0002E54A <AmiBlitz3.ab2@10922> BRA.w getchar
0002E54E <AmiBlitz3.ab2@10925> ciflineat:   Ds.l 1
0002E550 <AmiBlitz3.ab2@10933>   MOVEQ.l #$00,D0
0002E552 <AmiBlitz3.ab2@10934>   MOVE.b (A5)+,D0
0002E556 <AmiBlitz3.ab2@10935>    BEQ.b getcharb__done
0002E55A <AmiBlitz3.ab2@10936>    BPL.b getcharb__stuff
0002E55C <AmiBlitz3.ab2@10937>   LSL.w #8,D0
0002E55E <AmiBlitz3.ab2@10938>   MOVE.b (A5)+,D0
0002E560 <AmiBlitz3.ab2@10939> RTS
0002E564 <AmiBlitz3.ab2@10942>   CMP.w #$22,D0
0002E568 <AmiBlitz3.ab2@10943>    BEQ.b swapquote
0002E56C <AmiBlitz3.ab2@10944>   CMP.w #$3B,D0
0002E570 <AmiBlitz3.ab2@10945>    BNE.b getcharb__done
0002E576 <AmiBlitz3.ab2@10946>   TST.w instringon
0002E57A <AmiBlitz3.ab2@10947>    BNE.b getcharb__done
0002E57C <AmiBlitz3.ab2@10950>   MOVE.b (A5)+,D0
0002E580 <AmiBlitz3.ab2@10951>             BEQ getcharb__loop_l1
0002E584 <AmiBlitz3.ab2@10952>             CMP.b #":",d0
0002E588 <AmiBlitz3.ab2@10953>             BNE getcharb__loop
0002E58C <AmiBlitz3.ab2@10954>             CMP.b #"@",(a5)
0002E590 <AmiBlitz3.ab2@10955>             BNE getcharb__loop
0002E596 <AmiBlitz3.ab2@10958>   MOVE.w D0,lastchar
0002E598 <AmiBlitz3.ab2@10961> RTS
0002E59E <AmiBlitz3.ab2@10964>   NOT.w instringon
0002E5A0 <AmiBlitz3.ab2@10965> RTS
0002E5A4 <AmiBlitz3.ab2@10969>   BSR.w getchar
0002E5AA <AmiBlitz3.ab2@10970>   TST.w instringon
0002E5AE <AmiBlitz3.ab2@10971>    BNE.w get1byte__skip
0002E5B2 <AmiBlitz3.ab2@10972>   CMP.w #$20,D0
0002E5B6 <AmiBlitz3.ab2@10973>    BEQ.w get1byte_
0002E5B8 <AmiBlitz3.ab2@10976> RTS
0002E5D2 <AmiBlitz3.ab2@10979> gs:        Ds.w 13                                         ;ds.b 26  org source
0002E5D6 <AmiBlitz3.ab2@10980>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
0002E5D8 <AmiBlitz3.ab2@10981>            Dc.b $C4,$DC
0002E5DC <AmiBlitz3.ab2@10987>   BSR.w getchar
0002E5E2 <AmiBlitz3.ab2@10988>   TST.w instringon
0002E5E6 <AmiBlitz3.ab2@10989>    BNE.w gchar2
0002E5EA <AmiBlitz3.ab2@10990>   CMP.w #$20,D0
0002E5EE <AmiBlitz3.ab2@10991>    BEQ.w get1bytemain
0002E5F0 <AmiBlitz3.ab2@10993>   TST.w D0
0002E5F4 <AmiBlitz3.ab2@10996>   BEQ.b get1bytemain__zero
0002E5FA <AmiBlitz3.ab2@10997>   TST.w instringon
0002E5FE <AmiBlitz3.ab2@10998>    BEQ.b get1bytemain__noqoute
0002E602 <AmiBlitz3.ab2@10999>   CMP.b #$20,D0
0002E606 <AmiBlitz3.ab2@11000>    BCC.b get1bytemain__skip
0002E60A <AmiBlitz3.ab2@11001>   MOVE.b gs(PC,D0.W),D0
0002E60C <AmiBlitz3.ab2@11002> RTS
0002E610 <AmiBlitz3.ab2@11005>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
0002E614 <AmiBlitz3.ab2@11006>    BEQ.b get1bytemain__zero
0002E618 <AmiBlitz3.ab2@11007>   CMP.w #$3A,D0
0002E61C <AmiBlitz3.ab2@11008>    BEQ.b get1bytemain__zero
0002E61E <AmiBlitz3.ab2@11011>   TST.w D0
0002E620 <AmiBlitz3.ab2@11014> RTS
0002E626 <AmiBlitz3.ab2@11018>   MOVE.w lastchar,D0
0002E62A <AmiBlitz3.ab2@11019> BRA.w gchar2
0002E634 <AmiBlitz3.ab2@11023>   MOVE.w oldqflag,instringon
0002E63A <AmiBlitz3.ab2@11024>   MOVEA.l lastsourcepos,A5
0002E63C <AmiBlitz3.ab2@11025> RTS
0002E642 <AmiBlitz3.ab2@11029>   MOVE.w D0,locchar
0002E648 <AmiBlitz3.ab2@11030>   MOVE.l A5,locloc
0002E64A <AmiBlitz3.ab2@11031> RTS
0002E650 <AmiBlitz3.ab2@11035>   MOVEA.l locloc,A5
0002E656 <AmiBlitz3.ab2@11036>   MOVE.w locchar,D0
0002E65C <AmiBlitz3.ab2@11037>   MOVE.w D0,lastchar
0002E65E <AmiBlitz3.ab2@11038> RTS
0002E65E <internal_errormsg.ab2@1> XINCLUDE "internal_errormsg.ab2"
0002E6A6 <internal_errormsg.ab2@9> XINCLUDE "internal_errormsg.ab2"
0002E6F8 <internal_errormsg.ab2@10> XINCLUDE "internal_errormsg.ab2"
0002E736 <internal_errormsg.ab2@11> XINCLUDE "internal_errormsg.ab2"
0002E774 <internal_errormsg.ab2@12> XINCLUDE "internal_errormsg.ab2"
0002E79E <internal_errormsg.ab2@13> XINCLUDE "internal_errormsg.ab2"
0002E7CE <internal_errormsg.ab2@14> XINCLUDE "internal_errormsg.ab2"
0002E818 <internal_errormsg.ab2@15> XINCLUDE "internal_errormsg.ab2"
0002E89E <internal_errormsg.ab2@16> XINCLUDE "internal_errormsg.ab2"
0002E900 <internal_errormsg.ab2@17> XINCLUDE "internal_errormsg.ab2"
0002E948 <internal_errormsg.ab2@18> XINCLUDE "internal_errormsg.ab2"
0002E99A <internal_errormsg.ab2@19> XINCLUDE "internal_errormsg.ab2"
0002E9E4 <internal_errormsg.ab2@20> XINCLUDE "internal_errormsg.ab2"
0002EA32 <internal_errormsg.ab2@21> XINCLUDE "internal_errormsg.ab2"
0002EA68 <internal_errormsg.ab2@22> XINCLUDE "internal_errormsg.ab2"
0002EA96 <internal_errormsg.ab2@23> XINCLUDE "internal_errormsg.ab2"
0002EAB0 <internal_errormsg.ab2@24> XINCLUDE "internal_errormsg.ab2"
0002EACE <internal_errormsg.ab2@25> XINCLUDE "internal_errormsg.ab2"
0002EB4C <internal_errormsg.ab2@26> XINCLUDE "internal_errormsg.ab2"
0002EB76 <internal_errormsg.ab2@27> XINCLUDE "internal_errormsg.ab2"
0002EB9C <internal_errormsg.ab2@28> XINCLUDE "internal_errormsg.ab2"
0002EBBC <internal_errormsg.ab2@29> XINCLUDE "internal_errormsg.ab2"
0002EBDA <internal_errormsg.ab2@30> XINCLUDE "internal_errormsg.ab2"
0002EBFA <internal_errormsg.ab2@31> XINCLUDE "internal_errormsg.ab2"
0002EC22 <internal_errormsg.ab2@32> XINCLUDE "internal_errormsg.ab2"
0002EC4C <internal_errormsg.ab2@33> XINCLUDE "internal_errormsg.ab2"
0002EC4E <internal_errormsg.ab2@36> XINCLUDE "internal_errormsg.ab2"
0002EC6A <internal_errormsg.ab2@39> XINCLUDE "internal_errormsg.ab2"
0002EC90 <internal_errormsg.ab2@40> XINCLUDE "internal_errormsg.ab2"
0002ECA8 <internal_errormsg.ab2@41> XINCLUDE "internal_errormsg.ab2"
0002ED06 <internal_errormsg.ab2@42> XINCLUDE "internal_errormsg.ab2"
0002ED28 <internal_errormsg.ab2@43> XINCLUDE "internal_errormsg.ab2"
0002ED4E <internal_errormsg.ab2@44> XINCLUDE "internal_errormsg.ab2"
0002ED76 <internal_errormsg.ab2@45> XINCLUDE "internal_errormsg.ab2"
0002ED96 <internal_errormsg.ab2@46> XINCLUDE "internal_errormsg.ab2"
0002EDBA <internal_errormsg.ab2@47> XINCLUDE "internal_errormsg.ab2"
0002EE00 <internal_errormsg.ab2@48> XINCLUDE "internal_errormsg.ab2"
0002EE24 <internal_errormsg.ab2@49> XINCLUDE "internal_errormsg.ab2"
0002EE48 <internal_errormsg.ab2@50> XINCLUDE "internal_errormsg.ab2"
0002EE68 <internal_errormsg.ab2@51> XINCLUDE "internal_errormsg.ab2"
0002EE8C <internal_errormsg.ab2@52> XINCLUDE "internal_errormsg.ab2"
0002EEAE <internal_errormsg.ab2@53> XINCLUDE "internal_errormsg.ab2"
0002EEDA <internal_errormsg.ab2@54> XINCLUDE "internal_errormsg.ab2"
0002EF00 <internal_errormsg.ab2@55> XINCLUDE "internal_errormsg.ab2"
0002EF0A <internal_errormsg.ab2@58> XINCLUDE "internal_errormsg.ab2"
0002EF30 <internal_errormsg.ab2@59> XINCLUDE "internal_errormsg.ab2"
0002EF82 <internal_errormsg.ab2@61> XINCLUDE "internal_errormsg.ab2"
0002EFEC <internal_errormsg.ab2@62> XINCLUDE "internal_errormsg.ab2"
0002F04A <internal_errormsg.ab2@63> XINCLUDE "internal_errormsg.ab2"
0002F0B8 <internal_errormsg.ab2@64> XINCLUDE "internal_errormsg.ab2"
0002F0F4 <internal_errormsg.ab2@65> XINCLUDE "internal_errormsg.ab2"
0002F112 <internal_errormsg.ab2@66> XINCLUDE "internal_errormsg.ab2"
0002F138 <internal_errormsg.ab2@67> XINCLUDE "internal_errormsg.ab2"
0002F168 <internal_errormsg.ab2@68> XINCLUDE "internal_errormsg.ab2"
0002F18C <internal_errormsg.ab2@69> XINCLUDE "internal_errormsg.ab2"
0002F1BA <internal_errormsg.ab2@70> XINCLUDE "internal_errormsg.ab2"
0002F1DE <internal_errormsg.ab2@71> XINCLUDE "internal_errormsg.ab2"
0002F1F4 <internal_errormsg.ab2@72> XINCLUDE "internal_errormsg.ab2"
0002F20A <internal_errormsg.ab2@73> XINCLUDE "internal_errormsg.ab2"
0002F210 <internal_errormsg.ab2@76> XINCLUDE "internal_errormsg.ab2"
0002F218 <internal_errormsg.ab2@78> XINCLUDE "internal_errormsg.ab2"
0002F21A <internal_errormsg.ab2@79> XINCLUDE "internal_errormsg.ab2"
0002F21E <internal_errormsg.ab2@80> XINCLUDE "internal_errormsg.ab2"
0002F226 <internal_errormsg.ab2@81> XINCLUDE "internal_errormsg.ab2"
0002F228 <internal_errormsg.ab2@82> XINCLUDE "internal_errormsg.ab2"
0002F262 <internal_errormsg.ab2@84> XINCLUDE "internal_errormsg.ab2"
0002F28E <internal_errormsg.ab2@85> XINCLUDE "internal_errormsg.ab2"
0002F2BE <internal_errormsg.ab2@86> XINCLUDE "internal_errormsg.ab2"
0002F2F6 <internal_errormsg.ab2@87> XINCLUDE "internal_errormsg.ab2"
0002F350 <internal_errormsg.ab2@88> XINCLUDE "internal_errormsg.ab2"
0002F352 <internal_errormsg.ab2@92> XINCLUDE "internal_errormsg.ab2"
0002F356 <internal_errormsg.ab2@93> XINCLUDE "internal_errormsg.ab2"
0002F35A <internal_errormsg.ab2@94> XINCLUDE "internal_errormsg.ab2"
0002F35E <internal_errormsg.ab2@95> XINCLUDE "internal_errormsg.ab2"
0002F362 <internal_errormsg.ab2@96> XINCLUDE "internal_errormsg.ab2"
0002F366 <internal_errormsg.ab2@97> XINCLUDE "internal_errormsg.ab2"
0002F36A <internal_errormsg.ab2@98> XINCLUDE "internal_errormsg.ab2"
0002F36E <internal_errormsg.ab2@99> XINCLUDE "internal_errormsg.ab2"
0002F372 <internal_errormsg.ab2@100> XINCLUDE "internal_errormsg.ab2"
0002F376 <internal_errormsg.ab2@101> XINCLUDE "internal_errormsg.ab2"
0002F37A <internal_errormsg.ab2@102> XINCLUDE "internal_errormsg.ab2"
0002F3B8 <internal_errormsg.ab2@103> XINCLUDE "internal_errormsg.ab2"
0002F3EA <internal_errormsg.ab2@105> XINCLUDE "internal_errormsg.ab2"
0002F408 <internal_errormsg.ab2@106> XINCLUDE "internal_errormsg.ab2"
0002F432 <internal_errormsg.ab2@107> XINCLUDE "internal_errormsg.ab2"
0002F44E <internal_errormsg.ab2@108> XINCLUDE "internal_errormsg.ab2"
0002F468 <internal_errormsg.ab2@109> XINCLUDE "internal_errormsg.ab2"
0002F486 <internal_errormsg.ab2@110> XINCLUDE "internal_errormsg.ab2"
0002F4AA <internal_errormsg.ab2@111> XINCLUDE "internal_errormsg.ab2"
0002F4AC <internal_errormsg.ab2@114> XINCLUDE "internal_errormsg.ab2"
0002F4FE <internal_errormsg.ab2@115> XINCLUDE "internal_errormsg.ab2"
0002F526 <internal_errormsg.ab2@117> XINCLUDE "internal_errormsg.ab2"
0002F54E <internal_errormsg.ab2@118> XINCLUDE "internal_errormsg.ab2"
0002F56A <internal_errormsg.ab2@122> XINCLUDE "internal_errormsg.ab2"
0002F58A <internal_errormsg.ab2@123> XINCLUDE "internal_errormsg.ab2"
0002F5A2 <internal_errormsg.ab2@124> XINCLUDE "internal_errormsg.ab2"
0002F5E6 <internal_errormsg.ab2@125> XINCLUDE "internal_errormsg.ab2"
0002F62E <internal_errormsg.ab2@126> XINCLUDE "internal_errormsg.ab2"
0002F658 <internal_errormsg.ab2@127> XINCLUDE "internal_errormsg.ab2"
0002F682 <internal_errormsg.ab2@128> XINCLUDE "internal_errormsg.ab2"
0002F69C <internal_errormsg.ab2@132> XINCLUDE "internal_errormsg.ab2"
0002F6C6 <internal_errormsg.ab2@133> XINCLUDE "internal_errormsg.ab2"
0002F71A <internal_errormsg.ab2@134> XINCLUDE "internal_errormsg.ab2"
0002F766 <internal_errormsg.ab2@135> XINCLUDE "internal_errormsg.ab2"
0002F79E <internal_errormsg.ab2@136> XINCLUDE "internal_errormsg.ab2"
0002F7A4 <internal_errormsg.ab2@139> XINCLUDE "internal_errormsg.ab2"
0002F7B2 <internal_errormsg.ab2@141> XINCLUDE "internal_errormsg.ab2"
0002F7E2 <internal_errormsg.ab2@144> XINCLUDE "internal_errormsg.ab2"
0002F816 <internal_errormsg.ab2@145> XINCLUDE "internal_errormsg.ab2"
0002F87C <internal_errormsg.ab2@146> XINCLUDE "internal_errormsg.ab2"
0002F89A <internal_errormsg.ab2@147> XINCLUDE "internal_errormsg.ab2"
0002F914 <internal_errormsg.ab2@148> XINCLUDE "internal_errormsg.ab2"
0002F93C <internal_errormsg.ab2@149> XINCLUDE "internal_errormsg.ab2"
0002F952 <internal_errormsg.ab2@150> XINCLUDE "internal_errormsg.ab2"
0002F966 <internal_errormsg.ab2@151> XINCLUDE "internal_errormsg.ab2"
0002F968 <internal_errormsg.ab2@154> XINCLUDE "internal_errormsg.ab2"
0002F969 <internal_errormsg.ab2@155> XINCLUDE "internal_errormsg.ab2"
0002F96A <internal_errormsg.ab2@156> XINCLUDE "internal_errormsg.ab2"
0002F98A <internal_errormsg.ab2@158> XINCLUDE "internal_errormsg.ab2"
0002F990 <internal_errormsg.ab2@161> XINCLUDE "internal_errormsg.ab2"
0002F9A2 <internal_errormsg.ab2@163> XINCLUDE "internal_errormsg.ab2"
0002F9D6 <internal_errormsg.ab2@166> XINCLUDE "internal_errormsg.ab2"
0002F9EE <internal_errormsg.ab2@167> XINCLUDE "internal_errormsg.ab2"
0002FA0A <internal_errormsg.ab2@168> XINCLUDE "internal_errormsg.ab2"
0002FA22 <internal_errormsg.ab2@169> XINCLUDE "internal_errormsg.ab2"
0002FA42 <internal_errormsg.ab2@170> XINCLUDE "internal_errormsg.ab2"
0002FA62 <internal_errormsg.ab2@171> XINCLUDE "internal_errormsg.ab2"
0002FA88 <internal_errormsg.ab2@172> XINCLUDE "internal_errormsg.ab2"
0002FA9E <internal_errormsg.ab2@173> XINCLUDE "internal_errormsg.ab2"
0002FABA <internal_errormsg.ab2@174> XINCLUDE "internal_errormsg.ab2"
0002FAE4 <internal_errormsg.ab2@175> XINCLUDE "internal_errormsg.ab2"
0002FAFC <internal_errormsg.ab2@176> XINCLUDE "internal_errormsg.ab2"
0002FB18 <internal_errormsg.ab2@177> XINCLUDE "internal_errormsg.ab2"
0002FB38 <internal_errormsg.ab2@178> XINCLUDE "internal_errormsg.ab2"
0002FB50 <internal_errormsg.ab2@179> XINCLUDE "internal_errormsg.ab2"
0002FB54 <internal_errormsg.ab2@182> XINCLUDE "internal_errormsg.ab2"
0002FB5A <internal_errormsg.ab2@183> XINCLUDE "internal_errormsg.ab2"
0002FB60 <internal_errormsg.ab2@184> XINCLUDE "internal_errormsg.ab2"
0002FB75 <internal_errormsg.ab2@185> XINCLUDE "internal_errormsg.ab2"
0002FB7B <internal_errormsg.ab2@187> XINCLUDE "internal_errormsg.ab2"
0002FB7C <internal_errormsg.ab2@188> XINCLUDE "internal_errormsg.ab2"
0002FB80 <internal_errormsg.ab2@191> XINCLUDE "internal_errormsg.ab2"
0002FB86 <internal_errormsg.ab2@192> XINCLUDE "internal_errormsg.ab2"
0002FB8C <internal_errormsg.ab2@193> XINCLUDE "internal_errormsg.ab2"
0002FB9F <internal_errormsg.ab2@194> XINCLUDE "internal_errormsg.ab2"
0002FBA5 <internal_errormsg.ab2@196> XINCLUDE "internal_errormsg.ab2"
0002FBA6 <internal_errormsg.ab2@197> XINCLUDE "internal_errormsg.ab2"
0002FBC4 <internal_errormsg.ab2@199> XINCLUDE "internal_errormsg.ab2"
0002FBDC <internal_errormsg.ab2@200> XINCLUDE "internal_errormsg.ab2"
0002FBF8 <internal_errormsg.ab2@201> XINCLUDE "internal_errormsg.ab2"
0002FC22 <internal_errormsg.ab2@202> XINCLUDE "internal_errormsg.ab2"
0002FC3C <internal_errormsg.ab2@203> XINCLUDE "internal_errormsg.ab2"
0002FC5C <internal_errormsg.ab2@204> XINCLUDE "internal_errormsg.ab2"
0002FC7A <internal_errormsg.ab2@205> XINCLUDE "internal_errormsg.ab2"
0002FCA8 <internal_errormsg.ab2@206> XINCLUDE "internal_errormsg.ab2"
0002FCB2 <internal_errormsg.ab2@209> XINCLUDE "internal_errormsg.ab2"
0002FCE4 <internal_errormsg.ab2@210> XINCLUDE "internal_errormsg.ab2"
0002FD02 <internal_errormsg.ab2@212> XINCLUDE "internal_errormsg.ab2"
0002FD20 <internal_errormsg.ab2@213> XINCLUDE "internal_errormsg.ab2"
0002FD40 <internal_errormsg.ab2@214> XINCLUDE "internal_errormsg.ab2"
0002FD66 <internal_errormsg.ab2@215> XINCLUDE "internal_errormsg.ab2"
0002FD8C <internal_errormsg.ab2@216> XINCLUDE "internal_errormsg.ab2"
0002FDB4 <internal_errormsg.ab2@217> XINCLUDE "internal_errormsg.ab2"
0002FDD2 <internal_errormsg.ab2@218> XINCLUDE "internal_errormsg.ab2"
0002FDF2 <internal_errormsg.ab2@219> XINCLUDE "internal_errormsg.ab2"
0002FE0C <internal_errormsg.ab2@220> XINCLUDE "internal_errormsg.ab2"
0002FE2E <internal_errormsg.ab2@221> XINCLUDE "internal_errormsg.ab2"
0002FE4C <internal_errormsg.ab2@222> XINCLUDE "internal_errormsg.ab2"
0002FE6E <internal_errormsg.ab2@223> XINCLUDE "internal_errormsg.ab2"
0002FE92 <internal_errormsg.ab2@224> XINCLUDE "internal_errormsg.ab2"
0002FE98 <internal_errormsg.ab2@227> XINCLUDE "internal_errormsg.ab2"
0002FEB4 <internal_errormsg.ab2@228> XINCLUDE "internal_errormsg.ab2"
0002FED0 <internal_errormsg.ab2@230> XINCLUDE "internal_errormsg.ab2"
0002FEEE <internal_errormsg.ab2@231> XINCLUDE "internal_errormsg.ab2"
0002FF0C <internal_errormsg.ab2@232> XINCLUDE "internal_errormsg.ab2"
0002FF5A <internal_errormsg.ab2@233> XINCLUDE "internal_errormsg.ab2"
0002FF78 <internal_errormsg.ab2@234> XINCLUDE "internal_errormsg.ab2"
0002FF96 <internal_errormsg.ab2@235> XINCLUDE "internal_errormsg.ab2"
0002FFB0 <internal_errormsg.ab2@236> XINCLUDE "internal_errormsg.ab2"
0002FFFC <internal_errormsg.ab2@237> XINCLUDE "internal_errormsg.ab2"
00030022 <internal_errormsg.ab2@238> XINCLUDE "internal_errormsg.ab2"
00030042 <internal_errormsg.ab2@239> XINCLUDE "internal_errormsg.ab2"
00030064 <internal_errormsg.ab2@240> XINCLUDE "internal_errormsg.ab2"
00030080 <internal_errormsg.ab2@241> XINCLUDE "internal_errormsg.ab2"
000300A6 <internal_errormsg.ab2@242> XINCLUDE "internal_errormsg.ab2"
000300C2 <internal_errormsg.ab2@243> XINCLUDE "internal_errormsg.ab2"
000300E0 <internal_errormsg.ab2@244> XINCLUDE "internal_errormsg.ab2"
00030108 <internal_errormsg.ab2@245> XINCLUDE "internal_errormsg.ab2"
00030124 <internal_errormsg.ab2@246> XINCLUDE "internal_errormsg.ab2"
00030134 <internal_errormsg.ab2@247> XINCLUDE "internal_errormsg.ab2"
00030156 <internal_errormsg.ab2@248> XINCLUDE "internal_errormsg.ab2"
0003015A <internal_errormsg.ab2@251> XINCLUDE "internal_errormsg.ab2"
0003015C <internal_errormsg.ab2@254> XINCLUDE "internal_errormsg.ab2"
00030176 <internal_errormsg.ab2@255> XINCLUDE "internal_errormsg.ab2"
0003019A <internal_errormsg.ab2@257> XINCLUDE "internal_errormsg.ab2"
000301BA <internal_errormsg.ab2@258> XINCLUDE "internal_errormsg.ab2"
000301EC <internal_errormsg.ab2@259> XINCLUDE "internal_errormsg.ab2"
0003024A <internal_errormsg.ab2@260> XINCLUDE "internal_errormsg.ab2"
00030282 <internal_errormsg.ab2@261> XINCLUDE "internal_errormsg.ab2"
000302C0 <internal_errormsg.ab2@262> XINCLUDE "internal_errormsg.ab2"
000302F6 <internal_errormsg.ab2@263> XINCLUDE "internal_errormsg.ab2"
00030328 <internal_errormsg.ab2@264> XINCLUDE "internal_errormsg.ab2"
00030328 <AmiBlitz3.ab2@11042> XINCLUDE "internal_errormsg.ab2"
0003032A <AmiBlitz3.ab2@11046> ezerr:   Ds.w 1                                            ;for simple errors
00030330 <AmiBlitz3.ab2@11052>    MOVE.l myline,d0
00030334 <AmiBlitz3.ab2@11053>   BNE handle_compileerror__l2
0003033A <AmiBlitz3.ab2@11055>     MOVE.l a5,lastsourcepos
0003033C <AmiBlitz3.ab2@11057>     SUBA.l a5,a5
00030342 <AmiBlitz3.ab2@11059>   TST.l usedfrom
00030346 <AmiBlitz3.ab2@11060>   BEQ handle_compileerror__org
0003034C <AmiBlitz3.ab2@11061>     MOVEA.l usedfrom,a5
00030352 <AmiBlitz3.ab2@11064>   TST.w dirmode
00030356 <AmiBlitz3.ab2@11065>   BNE.b handle_compileerror__quiet
0003035C <AmiBlitz3.ab2@11066>     JSR call_setpointernormal
00030360 <AmiBlitz3.ab2@11067>     MOVE.w ezerr(PC),D0
00030364 <AmiBlitz3.ab2@11068>     BNE.w handle_compileerror__skip
0003036A <AmiBlitz3.ab2@11069>       MOVE.w cfetchmode,D0
0003036E <AmiBlitz3.ab2@11070>       BEQ.w handle_compileerror__skip2
00030378 <AmiBlitz3.ab2@11071>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0003037E <AmiBlitz3.ab2@11074>   MOVE.w constmode,D0
00030382 <AmiBlitz3.ab2@11075>   BEQ.b handle_compileerror__skip3
00030386 <AmiBlitz3.ab2@11076>     BSR.w asmerr2
0003038C <AmiBlitz3.ab2@11079>   MOVE.l firstlocal,D1
00030392 <AmiBlitz3.ab2@11080>   OR.l firstglob,D1
00030396 <AmiBlitz3.ab2@11081>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
0003039C <AmiBlitz3.ab2@11082>     JSR JL_0_DB5C
000303A4 <AmiBlitz3.ab2@11085>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
000303AE <AmiBlitz3.ab2@11086>   CMP.l #"NORE",reqmode                                    ;for used functions
000303B2 <AmiBlitz3.ab2@11087>   BEQ handle_compileerror__notproc_l1
000303BC <AmiBlitz3.ab2@11088>     MOVE.l linenumat,compilelinecounter
000303C2 <AmiBlitz3.ab2@11091>   JSR close_compilewin
000303C4 <AmiBlitz3.ab2@11094>   MOVEA.l (A7)+,A0
000303CE <AmiBlitz3.ab2@11095>   CMP.l #"NORE",reqmode                                    ;for used functions
000303D2 <AmiBlitz3.ab2@11096>   BEQ handle_compileerror__skip_Lxx2
000303D8 <AmiBlitz3.ab2@11097>   TST.l CLIMode
000303DC <AmiBlitz3.ab2@11098>   BNE 'climode_output
000303E2 <AmiBlitz3.ab2@11100>     JSR save_errorfile
000303E6 <AmiBlitz3.ab2@11101>     BRA 'end_output
000303EC <AmiBlitz3.ab2@11103>     JSR stdout_error
000303F2 <AmiBlitz3.ab2@11105>     MOVE.l lastsourcepos,a5
000303F4 <AmiBlitz3.ab2@11106> 'loop TST.b (a5)
000303F8 <AmiBlitz3.ab2@11107>       BEQ 'ok2
000303FA <AmiBlitz3.ab2@11108>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
000303FE <AmiBlitz3.ab2@11109>     BEQ 'ok
00030402 <AmiBlitz3.ab2@11110>     CMP.b #":",d0
00030406 <AmiBlitz3.ab2@11111>     BEQ 'ok
0003040A <AmiBlitz3.ab2@11112>     BRA 'loop
0003040C <AmiBlitz3.ab2@11113> 'ok SUBQ.l #1,a5
00030414 <AmiBlitz3.ab2@11114> 'ok2 MOVE.w #0,lastchar
0003041C <AmiBlitz3.ab2@11115>     MOVE.b #1,iserror
00030422 <AmiBlitz3.ab2@11116>     MOVE.l stackaddr,a7
00030424 <AmiBlitz3.ab2@11117>     RTS
00030426 <AmiBlitz3.ab2@11123>   MOVE.l A0,-(a7)
00030464 <AmiBlitz3.ab2@11124>   !ComData_GetL{comFunc_ErrorRequest,A1}
00030466 <AmiBlitz3.ab2@11125>   MOVE.l (a7)+,A0
0003046A <AmiBlitz3.ab2@11127>   MOVEM.l d6/D7/A6,-(A7)
00030470 <AmiBlitz3.ab2@11128>   MOVE.l includeline,d7
00030476 <AmiBlitz3.ab2@11129>   MOVE.l #"INLN",a6
00030480 <AmiBlitz3.ab2@11130>   MOVE.l errstack,tempa7
00030482 <AmiBlitz3.ab2@11131>   JSR (A1)
000304AC <AmiBlitz3.ab2@11132>   !basic
000304E8 <AmiBlitz3.ab2@11133>    If Peek.l(Addr Window(3))<>0 Then WZCloseWindow 3
00030506 <AmiBlitz3.ab2@11134>   !asm
0003050A <AmiBlitz3.ab2@11135>   MOVEM.l (A7)+,D7/d6/A6
00030510 <AmiBlitz3.ab2@11138>   MOVE.l tempa7,a7
00030516 <AmiBlitz3.ab2@11139>   MOVEA.l errcont,A0
00030518 <AmiBlitz3.ab2@11141> RTS
0003051E <AmiBlitz3.ab2@11144>   MOVEA.l errstack,A7
00030524 <AmiBlitz3.ab2@11145>   MOVEA.l errcont,A0
00030526 <AmiBlitz3.ab2@11147> RTS
00030528 <AmiBlitz3.ab2@11150>   MOVE.l (A7),D0
0003052E <AmiBlitz3.ab2@11151>   MOVEA.l errstack,A7
00030534 <AmiBlitz3.ab2@11152>   MOVEA.l errcont,A0
00030536 <AmiBlitz3.ab2@11153> JMP (A0)
0003053A <AmiBlitz3.ab2@11159>   CMP.w #$7A,D0                                            ;'z'
0003053E <AmiBlitz3.ab2@11160>    BHI.w tstalpha__no
00030542 <AmiBlitz3.ab2@11161>   CMP.w #$41,D0                                            ;'A'
00030546 <AmiBlitz3.ab2@11162>    BCS.w tstalpha__no
0003054A <AmiBlitz3.ab2@11163>   CMP.w #$61,D0                                            ;'a'
0003054E <AmiBlitz3.ab2@11164>    BCC.w tstalpha__yes
00030552 <AmiBlitz3.ab2@11165>   CMP.w #$5A,D0                                            ;'Z'
00030556 <AmiBlitz3.ab2@11166>    BHI.w tstalpha__no
00030558 <AmiBlitz3.ab2@11169>   CMP.w D0,D0
0003055A <AmiBlitz3.ab2@11172> RTS
0003055E <AmiBlitz3.ab2@11180>   CMP.w #$30,D0                                            ;'0'
00030562 <AmiBlitz3.ab2@11181>    BCS.w tstnum__skip
00030566 <AmiBlitz3.ab2@11182>   CMP.w #$39,D0                                            ;'9'
0003056A <AmiBlitz3.ab2@11183>    BHI.w tstnum__skip                                     
0003056C <AmiBlitz3.ab2@11184>   CMP.w D0,D0
0003056E <AmiBlitz3.ab2@11187> RTS
00030590 <AmiBlitz3.ab2@11193>   !compare1                                                ;bsr.w tstalpha
00030594 <AmiBlitz3.ab2@11194>    BEQ.w tstlab__skip
000305A6 <AmiBlitz3.ab2@11195>   !compare2                                                ;bsr.w tstnum2
000305AA <AmiBlitz3.ab2@11196>    BEQ.w tstlab__skip
000305AE <AmiBlitz3.ab2@11197>   CMP.w #$5F,D0                                            ;'_'
000305B2 <AmiBlitz3.ab2@11198>    BEQ.w tstlab__skip
000305B6 <AmiBlitz3.ab2@11199>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
000305B8 <AmiBlitz3.ab2@11202> RTS
000305C2 <AmiBlitz3.ab2@11207>   MOVE.w oldqflag,instringon
000305C8 <AmiBlitz3.ab2@11208>   MOVEA.l lastsourcepos,A5
000305CE <AmiBlitz3.ab2@11211>   LEA ptr_parameterstore,A1
000305D0 <AmiBlitz3.ab2@11214>   MOVEQ.l #$00,D2
000305D6 <AmiBlitz3.ab2@11217>   LEA chartab,a0
000305D8 <AmiBlitz3.ab2@11218>   MOVEQ #0,d0
000305DE <AmiBlitz3.ab2@11219>   MOVE.l A5,lastsourcepos
000305E8 <AmiBlitz3.ab2@11220>   MOVE.w instringon,oldqflag
000305EA <AmiBlitz3.ab2@11223>     MOVE.b (a5)+,d0
000305EE <AmiBlitz3.ab2@11224>   CMP.b #$20,d0                                            ;space deftype
000305F2 <AmiBlitz3.ab2@11225>   BEQ makename4__retry
000305F8 <AmiBlitz3.ab2@11227>   MOVE.w d0,lastchar
000305FC <AmiBlitz3.ab2@11228>   TST.b 0(a0,d0.w)
00030600 <AmiBlitz3.ab2@11229>   BNE makename__done
00030602 <AmiBlitz3.ab2@11238>   MOVE.b D0,(A1)+
00030604 <AmiBlitz3.ab2@11239>   ADDQ.l #1,D2
0003060A <AmiBlitz3.ab2@11240>   MOVE.l A5,lastsourcepos
0003060C <AmiBlitz3.ab2@11243>   MOVE.b (a5)+,d0
00030612 <AmiBlitz3.ab2@11244>   MOVE.b d0,lastchar+1
00030616 <AmiBlitz3.ab2@11245>   CMP.b #$20,d0
0003061A <AmiBlitz3.ab2@11246>   BEQ makename__loop_l20
0003061E <AmiBlitz3.ab2@11248>   TST.b 0(a0,d0)
00030622 <AmiBlitz3.ab2@11249>   BEQ makename__loop
00030626 <AmiBlitz3.ab2@11250>   CMP.b #2,d0
0003062A <AmiBlitz3.ab2@11251>   BNE makename__loop_lf1
00030630 <AmiBlitz3.ab2@11252>   MOVEA.l usedfrom,A5
00030636 <AmiBlitz3.ab2@11253>   CLR.l usedfrom
0003063A <AmiBlitz3.ab2@11254> BRA makename__loop_ln1
0003063E <AmiBlitz3.ab2@11257>   CMP.b #1,d0
00030642 <AmiBlitz3.ab2@11258>   BNE makename__loop_l20
00030646 <AmiBlitz3.ab2@11259>   MOVEA.l cmakea5(PC),A5
0003064A <AmiBlitz3.ab2@11260> BRA makename__loop_ln1
0003064E <AmiBlitz3.ab2@11263>   CMP.b #$7e,d0
00030652 <AmiBlitz3.ab2@11264>             BNE makename__loop_lt
00030658 <AmiBlitz3.ab2@11265>             TST.w cmake
0003065C <AmiBlitz3.ab2@11266>             BNE.w makename__loop_a1
0003065E <AmiBlitz3.ab2@11267>             SUBQ.l #1,a5
00030662 <AmiBlitz3.ab2@11268>             BSR.w get1bytemain
00030666 <AmiBlitz3.ab2@11269> BRA makename__loop
0003066A <AmiBlitz3.ab2@11273> BRA makename__loop_gpex
0003066E <AmiBlitz3.ab2@11277>   BSR.w getchar
00030690 <AmiBlitz3.ab2@11278>    !compare1                                               ;bsr.w tstalpha
00030694 <AmiBlitz3.ab2@11279>    BEQ.w makename__loop_getp1
000306A6 <AmiBlitz3.ab2@11280>    !compare2                                               ;bsr.w tstnum
000306AA <AmiBlitz3.ab2@11281>    BEQ.w makename__loop_getp1
000306AE <AmiBlitz3.ab2@11282>   CMP.w #$5F,D0                                            ;'_'
000306B2 <AmiBlitz3.ab2@11283>    BEQ.w makename__loop_getp1
000306B6 <AmiBlitz3.ab2@11284>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
000306BA <AmiBlitz3.ab2@11288>       BNE makename__loop_gpex
000306BE <AmiBlitz3.ab2@11289>       CMP.b #$20,d0
000306C2 <AmiBlitz3.ab2@11290>       BNE.w makename__loop
000306C4 <AmiBlitz3.ab2@11293>      TST.b d0
000306C8 <AmiBlitz3.ab2@11294>      BPL makename__loop_l10
000306CA <AmiBlitz3.ab2@11295>      SUBQ.l #1,a5
000306CE <AmiBlitz3.ab2@11296>      BSR get1byte_
000306D2 <AmiBlitz3.ab2@11299>    CMP.w #$20,D0
000306D6 <AmiBlitz3.ab2@11300>    BNE.w makename__done
000306D8 <AmiBlitz3.ab2@11301>    MOVEQ #0,d0
000306DE <AmiBlitz3.ab2@11302>   MOVE.l a5,lastsourcepos
000306E0 <AmiBlitz3.ab2@11305>   MOVE.b (a5)+,d0                                          ;neuneu
000306E4 <AmiBlitz3.ab2@11306>   BPL makename__loop_l101:
000306E6 <AmiBlitz3.ab2@11307>   ASL.w #8,d0
000306E8 <AmiBlitz3.ab2@11308>   MOVE.b (a5)+,d0
000306EE <AmiBlitz3.ab2@11311>   TST.w instringon
000306F2 <AmiBlitz3.ab2@11312>   BNE makename__loop_l102
000306F6 <AmiBlitz3.ab2@11313>   CMP.b #$20,d0
000306FA <AmiBlitz3.ab2@11314>   BEQ makename__loop_l103
000306FE <AmiBlitz3.ab2@11315>   CMP.b #";",d0
00030702 <AmiBlitz3.ab2@11316>   BNE makename__loop_l102
00030704 <AmiBlitz3.ab2@11319>   MOVE.b (A5)+,D0
00030708 <AmiBlitz3.ab2@11320>              BEQ makename__loop_l1
0003070C <AmiBlitz3.ab2@11321>              CMP.b #":",d0
00030710 <AmiBlitz3.ab2@11322>              BNE makename__loop_lr                         ;:@
00030714 <AmiBlitz3.ab2@11323>              CMP.b #"@",(a5)
00030718 <AmiBlitz3.ab2@11324>              BNE makename__loop_lr
0003071A <AmiBlitz3.ab2@11325>              ADDQ #1,a5
00030720 <AmiBlitz3.ab2@11329>   MOVE.w d0,lastchar
00030724 <AmiBlitz3.ab2@11333>   CMP.b #";",d0
00030728 <AmiBlitz3.ab2@11334>   BEQ makename__done_l11
0003072A <AmiBlitz3.ab2@11335>   CLR.b (A1)
0003072C <AmiBlitz3.ab2@11337>   TST.w D2
0003072E <AmiBlitz3.ab2@11338> RTS
00030730 <AmiBlitz3.ab2@11341>   CLR.b (a1)
00030732 <AmiBlitz3.ab2@11342>   MOVEQ #0,d0
00030738 <AmiBlitz3.ab2@11343>   MOVE.w d0,lastchar
0003073A <AmiBlitz3.ab2@11345>   TST.w D2
0003073C <AmiBlitz3.ab2@11346> RTS
0003073E <AmiBlitz3.ab2@11352>   MOVE.l (A2),D0
00030742 <AmiBlitz3.ab2@11355>   BEQ.w findlast__here
00030744 <AmiBlitz3.ab2@11356>   MOVEA.l D0,A2
00030748 <AmiBlitz3.ab2@11357> BRA.w findlast__loop
0003074C <AmiBlitz3.ab2@11360> BRA.w reget
0003074E <AmiBlitz3.ab2@11366>   MOVE.l (A2),-(A7)
00030752 <AmiBlitz3.ab2@11367>   BSR.w addlabel
00030754 <AmiBlitz3.ab2@11368>   MOVE.l (A7)+,(A2)
00030756 <AmiBlitz3.ab2@11369> RTS
0003075C <AmiBlitz3.ab2@11374>   CLR.l fp0addr
00030762 <AmiBlitz3.ab2@11375>   TST.w dirmode
00030766 <AmiBlitz3.ab2@11376>    BNE.w illdirerr
00030768 <AmiBlitz3.ab2@11377>   MOVEQ.l #$00,D0
0003076A <AmiBlitz3.ab2@11378>   MOVE.w D7,D0
0003076C <AmiBlitz3.ab2@11379>   ADD.w D2,D0
0003076E <AmiBlitz3.ab2@11380>   ADDQ.w #1,D0
00030770 <AmiBlitz3.ab2@11381>   MOVE.w D0,D2
00030772 <AmiBlitz3.ab2@11382>   ADDQ.l #2,d0
00030774 <AmiBlitz3.ab2@11383>   MOVEQ.l #$01,D1
0003077A <AmiBlitz3.ab2@11384>   MOVEA.l _execbase,A6
00030780 <AmiBlitz3.ab2@11385>   MOVE.l mempool2,a0
00030784 <AmiBlitz3.ab2@11386>   JSR _AllocPooled(a6)
0003078A <AmiBlitz3.ab2@11388>   MOVE.l lastlabel,a2
0003078C <AmiBlitz3.ab2@11389>   MOVE.l D0,(A2)
0003078E <AmiBlitz3.ab2@11390>   MOVE.l d0,a0
00030790 <AmiBlitz3.ab2@11391>   CLR.l (a0)
00030796 <AmiBlitz3.ab2@11392>   MOVE.l a0,lastlabel
00030798 <AmiBlitz3.ab2@11393>   MOVE.l d0,A2
0003079C <AmiBlitz3.ab2@11394>   LEA -$1(A0,D7.W),A0
0003079E <AmiBlitz3.ab2@11395>   MOVE.b D2,(A0)+
000307A4 <AmiBlitz3.ab2@11396>   LEA ptr_parameterstore,A1
000307A6 <AmiBlitz3.ab2@11397>   MOVEQ #0,d0
000307A8 <AmiBlitz3.ab2@11398>   MOVEQ #0,d1
000307AA <AmiBlitz3.ab2@11401>   MOVE.b (A1)+,d1
000307AE <AmiBlitz3.ab2@11402>    BEQ 'l1
000307B4 <AmiBlitz3.ab2@11403>    !hashalgo
000307B6 <AmiBlitz3.ab2@11404>    MOVE.b d1,(A0)+
000307BA <AmiBlitz3.ab2@11405> BRA addlabel_loop2a
000307BC <AmiBlitz3.ab2@11408>    CLR.b (a0)+
000307C2 <AmiBlitz3.ab2@11409>    LEA labelhash,a0
000307C8 <AmiBlitz3.ab2@11410>    AND.l #hashsize,d0
000307CA <AmiBlitz3.ab2@11411>    ASL.l #2,d0
000307CE <AmiBlitz3.ab2@11412>    MOVE.l 0(a0,d0),d1
000307D2 <AmiBlitz3.ab2@11413>    MOVE.l d1,$c(a2)
000307D6 <AmiBlitz3.ab2@11414>    MOVE.l a2,0(a0,d0)
000307D8 <AmiBlitz3.ab2@11415>    MOVEQ #0,d0
000307DC <AmiBlitz3.ab2@11416> BRA.w reget
000307E2 <AmiBlitz3.ab2@11420>    TST.b newvariable
000307E6 <AmiBlitz3.ab2@11421>    BNE addlabel
000307EC <AmiBlitz3.ab2@11424>   TST.w dirmode
000307F0 <AmiBlitz3.ab2@11425>    BNE.w illdirerr
000307F2 <AmiBlitz3.ab2@11426>   MOVEQ.l #$00,D0
000307F4 <AmiBlitz3.ab2@11427>   MOVE.w D7,D0
000307F6 <AmiBlitz3.ab2@11428>   ADD.w D2,D0
000307F8 <AmiBlitz3.ab2@11429>   ADDQ.w #1,D0
000307FA <AmiBlitz3.ab2@11430>   MOVE.w D0,D2
000307FC <AmiBlitz3.ab2@11431>   MOVEQ.l #$01,D1
00030802 <AmiBlitz3.ab2@11432>   MOVEA.l _execbase,A6
00030808 <AmiBlitz3.ab2@11433>   MOVE.l mempool2,a0
0003080C <AmiBlitz3.ab2@11434>   JSR _AllocPooled(a6)
0003080E <AmiBlitz3.ab2@11435>   MOVEA.l D0,A0
00030814 <AmiBlitz3.ab2@11437>   LEA varbase,a2
00030816 <AmiBlitz3.ab2@11438>   MOVE.l (a2),(a0)
00030818 <AmiBlitz3.ab2@11439>   MOVE.l A0,(A2)
0003081A <AmiBlitz3.ab2@11440>   MOVEA.l A0,A2
0003081E <AmiBlitz3.ab2@11441>   LEA -$1(A0,D7.W),A0
00030820 <AmiBlitz3.ab2@11442>   MOVE.b D2,(A0)+
00030826 <AmiBlitz3.ab2@11443>   LEA ptr_parameterstore,A1
00030828 <AmiBlitz3.ab2@11444>   MOVEQ #0,d0
0003082A <AmiBlitz3.ab2@11445>   MOVEQ #0,d1
0003082C <AmiBlitz3.ab2@11448>   MOVE.b (A1)+,d1
00030830 <AmiBlitz3.ab2@11449>    BEQ 'l12
00030836 <AmiBlitz3.ab2@11450>    !hashalgo
00030838 <AmiBlitz3.ab2@11451>    MOVE.b d1,(A0)+
0003083C <AmiBlitz3.ab2@11452> BRA 'l11
0003083E <AmiBlitz3.ab2@11455>   CLR.b (a0)+
00030844 <AmiBlitz3.ab2@11456>   LEA variablehash,a0
0003084A <AmiBlitz3.ab2@11457>    AND.l #hashsize,d0
0003084C <AmiBlitz3.ab2@11458>    ASL.l #2,d0
00030850 <AmiBlitz3.ab2@11459>    MOVE.l 0(a0,d0),d1
00030854 <AmiBlitz3.ab2@11460>    MOVE.l d1,$e(a2)
00030858 <AmiBlitz3.ab2@11461>    MOVE.l a2,0(a0,d0)
0003085A <AmiBlitz3.ab2@11462>    MOVEQ #0,d0
0003085E <AmiBlitz3.ab2@11463> BRA.w reget
00030864 <AmiBlitz3.ab2@11467>   TST.w dirmode
00030868 <AmiBlitz3.ab2@11468>    BNE.w illdirerr
0003086A <AmiBlitz3.ab2@11475>   MOVEQ.l #$00,D0
0003086C <AmiBlitz3.ab2@11476>   MOVE.w D7,D0
0003086E <AmiBlitz3.ab2@11477>   ADD.w D2,D0
00030870 <AmiBlitz3.ab2@11478>   ADDQ.w #1,D0
00030872 <AmiBlitz3.ab2@11479>   MOVE.w D0,D2
00030874 <AmiBlitz3.ab2@11480>   MOVEQ.l #$01,D1
0003087A <AmiBlitz3.ab2@11481>   MOVEA.l _execbase,A6
00030880 <AmiBlitz3.ab2@11482>   MOVE.l mempool2,a0
00030884 <AmiBlitz3.ab2@11483>   JSR _AllocPooled(a6)
00030886 <AmiBlitz3.ab2@11485>   MOVEA.l D0,A0
00030888 <AmiBlitz3.ab2@11486>   MOVE.l A0,(A2)
0003088A <AmiBlitz3.ab2@11487>   CLR.l (a0)
0003088E <AmiBlitz3.ab2@11488>   CLR.l 8(a0)                                              ;clear next
00030890 <AmiBlitz3.ab2@11489>   MOVEA.l A0,A2
00030894 <AmiBlitz3.ab2@11490>   LEA -$1(A0,D7.W),A0
00030896 <AmiBlitz3.ab2@11491>   MOVE.b D2,(A0)+                                          ;put in struct length
0003089C <AmiBlitz3.ab2@11492>   LEA ptr_parameterstore,A1
0003089E <AmiBlitz3.ab2@11493>   MOVEQ #0,d0
000308A0 <AmiBlitz3.ab2@11494>   MOVEQ #0,d1
000308A2 <AmiBlitz3.ab2@11497>   MOVE.b (A1)+,d1
000308A4 <AmiBlitz3.ab2@11500>   MOVE.b d1,(A0)+
000308A8 <AmiBlitz3.ab2@11501>   BNE.w addlabel_loop2
000308AC <AmiBlitz3.ab2@11502> BRA.w reget
000308AE <AmiBlitz3.ab2@11506>   MOVEQ.l #$13,D7
000308B4 <AmiBlitz3.ab2@11507>   LEA constantbase,A2
000308B8 <AmiBlitz3.ab2@11508> BRA.w findlab
000308BA <AmiBlitz3.ab2@11512>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
000308C0 <AmiBlitz3.ab2@11513>   LEA xinclude_base,A2
000308C4 <AmiBlitz3.ab2@11514> BRA.w findlab
000308C6 <AmiBlitz3.ab2@11518>   MOVEQ.l #$09,D7
000308CC <AmiBlitz3.ab2@11519>   LEA firstconst,A2
000308D0 <AmiBlitz3.ab2@11520> BRA.w findlab
000308D2 <AmiBlitz3.ab2@11524>   MOVEQ.l #$0d,D7                                          ;find macro
000308D8 <AmiBlitz3.ab2@11525>   LEA macrobase,A2
000308DC <AmiBlitz3.ab2@11526> BRA.w findlab
000308E2 <AmiBlitz3.ab2@11530>   LEA labelhash,A2
000308E4 <AmiBlitz3.ab2@11531>   MOVEQ.l #$13,D7
000308E6 <AmiBlitz3.ab2@11532>   EXT.l d2
000308EC <AmiBlitz3.ab2@11533>   LEA ptr_parameterstore,A0
000308EE <AmiBlitz3.ab2@11534>   MOVEQ #0,d0
000308F0 <AmiBlitz3.ab2@11535>   MOVEQ #0,d1
000308F2 <AmiBlitz3.ab2@11538>     MOVE.b (a0)+,d1
000308F6 <AmiBlitz3.ab2@11539>     BEQ 'l15
000308FC <AmiBlitz3.ab2@11540>     !hashalgo
00030900 <AmiBlitz3.ab2@11541> BRA 'l20
00030906 <AmiBlitz3.ab2@11544>   AND.l #hashsize,d0
00030908 <AmiBlitz3.ab2@11545>   ASL.l #2,d0
0003090C <AmiBlitz3.ab2@11546>   MOVE.l 0(a2,d0),d0
00030910 <AmiBlitz3.ab2@11547> BRA 'l11
00030914 <AmiBlitz3.ab2@11550>   MOVE.l $c(A2),D0                                         ;find label
00030918 <AmiBlitz3.ab2@11553>   BEQ findlab__no
0003091A <AmiBlitz3.ab2@11554>   MOVEA.l D0,A2
0003091C <AmiBlitz3.ab2@11555>   MOVEQ.l #$00,D0
00030920 <AmiBlitz3.ab2@11556>   MOVE.b -$1(A2,D7.l),D0
00030926 <AmiBlitz3.ab2@11557>   LEA ptr_parameterstore,A0
00030928 <AmiBlitz3.ab2@11558>   SUB.l D7,D0
0003092A <AmiBlitz3.ab2@11559>   SUBQ.l #1,D0
0003092C <AmiBlitz3.ab2@11560>   CMP.l D0,D2
00030930 <AmiBlitz3.ab2@11561>    BNE.b 'l10
00030934 <AmiBlitz3.ab2@11562>   LEA $0(A2,D7.W),A1
00030936 <AmiBlitz3.ab2@11563>   SUBQ.l #1,D0
00030938 <AmiBlitz3.ab2@11566>     MOVE.b (a1)+,d1
0003093A <AmiBlitz3.ab2@11567>     CMP.b (a0)+,d1
0003093E <AmiBlitz3.ab2@11569>     BNE.b 'l10
00030942 <AmiBlitz3.ab2@11570>   DBF D0,'l201
00030946 <AmiBlitz3.ab2@11572>   BSR.w reget
00030948 <AmiBlitz3.ab2@11573>   CMP.w D0,D0
0003094A <AmiBlitz3.ab2@11574> RTS
0003094C <AmiBlitz3.ab2@11578>   MOVEQ.l #$0B,D7
00030950 <AmiBlitz3.ab2@11579> BRA.w findlab
00030956 <AmiBlitz3.ab2@11583>   LEA firstproc,A2
0003095C <AmiBlitz3.ab2@11584>   MOVE.l #$21+#funcentry_extend,D7
00030960 <AmiBlitz3.ab2@11585> BRA findlab
00030966 <AmiBlitz3.ab2@11589>   LEA firstfor,A2
00030968 <AmiBlitz3.ab2@11590>   MOVEQ.l #$11,D7
0003096C <AmiBlitz3.ab2@11591> BRA.w findlab
0003096E <AmiBlitz3.ab2@11595>   MOVEQ.l #$0F,D7
00030972 <AmiBlitz3.ab2@11596> BRA.w findlab
00030974 <AmiBlitz3.ab2@11600>   MOVEQ.l #$0F+4,D7
0003097A <AmiBlitz3.ab2@11601>   TST.b newvariable
0003097E <AmiBlitz3.ab2@11602>    BNE.w findlab
00030984 <AmiBlitz3.ab2@11603>   LEA variablehash,A2
0003098A <AmiBlitz3.ab2@11604>   LEA ptr_parameterstore,A0
0003098C <AmiBlitz3.ab2@11605>   MOVEQ #0,d0
0003098E <AmiBlitz3.ab2@11606>   MOVEQ #0,d1
00030990 <AmiBlitz3.ab2@11609>     MOVE.b (a0)+,d1
00030994 <AmiBlitz3.ab2@11610>     BEQ 'l15
0003099A <AmiBlitz3.ab2@11611>     !hashalgo
0003099E <AmiBlitz3.ab2@11612> BRA 'l20
000309A4 <AmiBlitz3.ab2@11615>   AND.l #hashsize,d0
000309A6 <AmiBlitz3.ab2@11616>   ASL.l #2,d0
000309AA <AmiBlitz3.ab2@11617>   MOVE.l 0(a2,d0),d0
000309AE <AmiBlitz3.ab2@11618> BRA 'l11
000309B2 <AmiBlitz3.ab2@11621>   MOVE.l $e(A2),D0                                         ;find label
000309B6 <AmiBlitz3.ab2@11624>   BEQ findlab__no
000309B8 <AmiBlitz3.ab2@11625>   MOVEA.l D0,A2
000309BA <AmiBlitz3.ab2@11626>   MOVEQ.l #$00,D0
000309BE <AmiBlitz3.ab2@11627>   MOVE.b -$1(A2,D7.W),D0
000309C4 <AmiBlitz3.ab2@11628>   LEA ptr_parameterstore,A0
000309C6 <AmiBlitz3.ab2@11629>   SUB.w D7,D0
000309C8 <AmiBlitz3.ab2@11630>   SUBQ.l #1,D0
000309CA <AmiBlitz3.ab2@11631>   CMP.w D0,D2
000309CE <AmiBlitz3.ab2@11632>    BNE.b 'l10
000309D2 <AmiBlitz3.ab2@11633>   LEA $0(A2,D7.W),A1
000309D4 <AmiBlitz3.ab2@11634>   SUBQ.l #1,D0
000309D6 <AmiBlitz3.ab2@11637>     MOVE.b (a1)+,d1
000309D8 <AmiBlitz3.ab2@11638>     CMP.b (a0)+,d1
000309DC <AmiBlitz3.ab2@11640>     BNE.b 'l10
000309E0 <AmiBlitz3.ab2@11641>   DBF D0,'l201
000309E4 <AmiBlitz3.ab2@11643>   BSR.w reget
000309E6 <AmiBlitz3.ab2@11644>   CMP.w D0,D0
000309E8 <AmiBlitz3.ab2@11645> RTS
000309EA <AmiBlitz3.ab2@11658>     MOVE.l (A2),D0                                         ;find label
000309EE <AmiBlitz3.ab2@11659>      BEQ.b findlab__no
000309F0 <AmiBlitz3.ab2@11660>     MOVEA.l D0,A2
000309F2 <AmiBlitz3.ab2@11661>     MOVEQ.l #$00,D0
000309F6 <AmiBlitz3.ab2@11662>     MOVE.b -$1(A2,D7.W),D0
000309F8 <AmiBlitz3.ab2@11663>     SUB.l D7,D0
000309FA <AmiBlitz3.ab2@11664>     SUBQ.l #1,D0
000309FC <AmiBlitz3.ab2@11665>   CMP.w D0,D2
00030A00 <AmiBlitz3.ab2@11666>   BNE.b findlab__loop
00030A04 <AmiBlitz3.ab2@11668>   LEA $0(A2,D7.W),A1
00030A0A <AmiBlitz3.ab2@11669>   LEA ptr_parameterstore,A0
00030A0C <AmiBlitz3.ab2@11670>   SUBQ.l #1,D0
00030A0E <AmiBlitz3.ab2@11673>     MOVE.b (a1)+,d1
00030A10 <AmiBlitz3.ab2@11674>     CMP.b (a0)+,d1
00030A14 <AmiBlitz3.ab2@11676>     BNE.b findlab__loop
00030A18 <AmiBlitz3.ab2@11677>   DBF D0,findlab__loop2
00030A1C <AmiBlitz3.ab2@11679>   BSR.w reget
00030A1E <AmiBlitz3.ab2@11680>   CMP.w D0,D0
00030A20 <AmiBlitz3.ab2@11681> RTS
00030A24 <AmiBlitz3.ab2@11684>   BSR.w reget
00030A26 <AmiBlitz3.ab2@11685>   MOVEQ.l #-$01,D1
00030A28 <AmiBlitz3.ab2@11686> RTS
00030A2E <AmiBlitz3.ab2@11690>   MOVEA.l alllocals,A4
00030A34 <AmiBlitz3.ab2@11691>   CLR.l alllocals
00030A38 <AmiBlitz3.ab2@11695>     CMPA.w #$0,A4
00030A3C <AmiBlitz3.ab2@11696>      BEQ.b freeprocvs__done
00030A40 <AmiBlitz3.ab2@11697>     MOVEA.l $4(A4),A3
00030A44 <AmiBlitz3.ab2@11699>     MOVEA.l $8(A4),A3
00030A46 <AmiBlitz3.ab2@11701>     MOVEA.l A4,A1
00030A48 <AmiBlitz3.ab2@11702>     MOVEA.l (A4),A4
00030A4A <AmiBlitz3.ab2@11703>     MOVEQ.l #$0C,D0
00030A50 <AmiBlitz3.ab2@11704>     MOVEA.l _execbase,A6
00030A56 <AmiBlitz3.ab2@11705>     MOVE.l mempool,a0
00030A5A <AmiBlitz3.ab2@11706>     JSR _FreePooled(A6)
00030A5E <AmiBlitz3.ab2@11707> BRA.b freeprocvs__loop
00030A64 <AmiBlitz3.ab2@11710>   CLR.l firstglob                                          ;fix 2*aclearallvar called
00030A6A <AmiBlitz3.ab2@11711>   CLR.l firstlocal
00030A70 <AmiBlitz3.ab2@11712>   CLR.l sharebase
00030A76 <AmiBlitz3.ab2@11713>   TST.l mempool2
00030A7A <AmiBlitz3.ab2@11714>   BEQ freeprocvs__done_l10
00030A80 <AmiBlitz3.ab2@11716>   MOVEA.l _execbase,A6
00030A86 <AmiBlitz3.ab2@11717>   MOVE.l mempool2,a0
00030A8C <AmiBlitz3.ab2@11718>   CLR.l mempool2
00030A90 <AmiBlitz3.ab2@11719>   JSR _DeletePool(a6)
00030A96 <AmiBlitz3.ab2@11722>   MOVE.l _execbase,a6
00030A9C <AmiBlitz3.ab2@11723>   MOVE.l #$10000,d0
00030AA2 <AmiBlitz3.ab2@11724>   MOVE.l #80000,d1
00030AA4 <AmiBlitz3.ab2@11725>   MOVE.l d1,d2
00030AA8 <AmiBlitz3.ab2@11726>   JSR _CreatePool(a6)
00030AAE <AmiBlitz3.ab2@11727>   MOVE.l d0,mempool2
00030AB0 <AmiBlitz3.ab2@11728> RTS
00030AB4 <AmiBlitz3.ab2@11732>   CMPA.w #$0,A3
00030AB8 <AmiBlitz3.ab2@11733>    BEQ.w freevars__done
00030ABA <AmiBlitz3.ab2@11734>   MOVEA.l A3,A1
00030ABC <AmiBlitz3.ab2@11735>   MOVEA.l (A3),A3
00030ABE <AmiBlitz3.ab2@11736>   MOVEQ.l #$00,D0
00030AC2 <AmiBlitz3.ab2@11737>   MOVE.b $E(A1),D0
00030AC8 <AmiBlitz3.ab2@11738>   MOVEA.l _execbase,A6
00030ACE <AmiBlitz3.ab2@11739>   MOVE.l mempool2,a0
00030AD2 <AmiBlitz3.ab2@11740>   JSR _FreePooled(A6)
00030AD6 <AmiBlitz3.ab2@11741> BRA.w freevars
00030ADA <AmiBlitz3.ab2@11744>     CMPA.w #$0,A3
00030ADE <AmiBlitz3.ab2@11745>      BEQ.w freevars__done
00030AE0 <AmiBlitz3.ab2@11746>     MOVEA.l A3,A1
00030AE2 <AmiBlitz3.ab2@11747>     MOVEA.l (A3),A3
00030AE4 <AmiBlitz3.ab2@11748>     MOVEQ.l #$00,D0
00030AE8 <AmiBlitz3.ab2@11749>     MOVE.b $E+4(A1),D0
00030AEE <AmiBlitz3.ab2@11750>     MOVEA.l _execbase,A6
00030AF4 <AmiBlitz3.ab2@11751>     MOVE.l mempool2,a0
00030AF8 <AmiBlitz3.ab2@11752>     JSR _FreePooled(A6)
00030AFC <AmiBlitz3.ab2@11753> BRA.w freevarsb
00030AFE <AmiBlitz3.ab2@11756> RTS
00030B04 <AmiBlitz3.ab2@11760>   MOVEA.l currentlabeladdr,A0
00030B0A <AmiBlitz3.ab2@11761>   MOVE.l a0,lastlabel
00030B0C <AmiBlitz3.ab2@11762>   MOVEA.l (A0),A2
00030B0E <AmiBlitz3.ab2@11763>   CLR.l (A0)
00030B14 <AmiBlitz3.ab2@11764>   MOVEA.l _execbase,A6
00030B18 <AmiBlitz3.ab2@11767>   CMPA.w #$0,A2
00030B1C <AmiBlitz3.ab2@11768>    BEQ.w clearlabels__done
00030B20 <AmiBlitz3.ab2@11769>   MOVE.l $4(A2),D0
00030B24 <AmiBlitz3.ab2@11770>   BTST #$0,D0
00030B28 <AmiBlitz3.ab2@11771>    BNE.w clearlabels__skip
00030B2A <AmiBlitz3.ab2@11772>   MOVEA.l D0,A3
00030B2E <AmiBlitz3.ab2@11775>     CMPA.w #$0,A3
00030B32 <AmiBlitz3.ab2@11776>      BEQ.w clearlabels__skip
00030B34 <AmiBlitz3.ab2@11777>     MOVEA.l A3,A1
00030B36 <AmiBlitz3.ab2@11778>     MOVEA.l (A3),A3
00030B38 <AmiBlitz3.ab2@11779>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
00030B3E <AmiBlitz3.ab2@11780>     MOVE.l mempool,a0
00030B42 <AmiBlitz3.ab2@11781>     JSR _FreePooled(A6)
00030B46 <AmiBlitz3.ab2@11782> BRA.w clearlabels__loop2
00030B48 <AmiBlitz3.ab2@11785>   MOVEQ.l #$00,D0
00030B4C <AmiBlitz3.ab2@11786>   MOVE.b $12(A2),D0
00030B4E <AmiBlitz3.ab2@11787>   MOVEA.l A2,A1
00030B50 <AmiBlitz3.ab2@11788>   MOVEA.l (A2),A2
00030B56 <AmiBlitz3.ab2@11789>   MOVE.l mempool2,a0
00030B5A <AmiBlitz3.ab2@11791> BRA.w clearlabels__loop
00030B5C <AmiBlitz3.ab2@11794> RTS
00030B62 <AmiBlitz3.ab2@11798>   MOVEA.l firstpend,A3
00030B68 <AmiBlitz3.ab2@11799>   CLR.l firstpend
00030B6E <AmiBlitz3.ab2@11800>   MOVEA.l _execbase,A6
00030B72 <AmiBlitz3.ab2@11803>     CMPA.w #$0,A3
00030B76 <AmiBlitz3.ab2@11804>      BEQ.w freepends__done
00030B78 <AmiBlitz3.ab2@11805>     MOVEA.l A3,A1
00030B7A <AmiBlitz3.ab2@11806>     MOVEQ.l #$08,D0
00030B7C <AmiBlitz3.ab2@11807>     MOVEA.l (A3),A3
00030B82 <AmiBlitz3.ab2@11808>     MOVE.l mempool,a0
00030B86 <AmiBlitz3.ab2@11809>     JSR _FreePooled(A6)
00030B8A <AmiBlitz3.ab2@11810> BRA.w fpnd2
00030B8C <AmiBlitz3.ab2@11813> RTS
00030B92 <AmiBlitz3.ab2@11817>   MOVEA.l firstproc,A2
00030B98 <AmiBlitz3.ab2@11818>   CLR.l firstproc
00030B9E <AmiBlitz3.ab2@11819>   MOVEA.l _execbase,A6
00030BA2 <AmiBlitz3.ab2@11822>     CMPA.w #$0,A2
00030BA6 <AmiBlitz3.ab2@11823>      BEQ.w clearfunctionlist__done
00030BA8 <AmiBlitz3.ab2@11824>     MOVEA.l A2,A1
00030BAA <AmiBlitz3.ab2@11825>     MOVEA.l (A2),A2
00030BAC <AmiBlitz3.ab2@11826>     MOVEQ.l #$00,D0
00030BB0 <AmiBlitz3.ab2@11827>     MOVE.b $20+#funcentry_extend(A1),D0
00030BB6 <AmiBlitz3.ab2@11828>     MOVE.l mempool2,a0
00030BBA <AmiBlitz3.ab2@11829>     JSR _FreePooled(A6)
00030BBE <AmiBlitz3.ab2@11830> BRA.w clearfunctionlist__loop
00030BC0 <AmiBlitz3.ab2@11833> RTS
00030BC4 <AmiBlitz3.ab2@11837>   CMPA.w #$0,A2
00030BC8 <AmiBlitz3.ab2@11838>    BEQ.w freetypes__done
00030BCC <AmiBlitz3.ab2@11839>   MOVEA.l $4(A2),A3
00030BD0 <AmiBlitz3.ab2@11840>   CMPA.w #$FF,A3
00030BD4 <AmiBlitz3.ab2@11841>    BEQ.w freetypes__noway
00030BD8 <AmiBlitz3.ab2@11845>    BSR.w freevars
00030BDA <AmiBlitz3.ab2@11848>     MOVEA.l A2,A1
00030BDC <AmiBlitz3.ab2@11849>     MOVEA.l (A2),A2
00030BDE <AmiBlitz3.ab2@11850>     MOVEQ.l #$00,D0
00030BE2 <AmiBlitz3.ab2@11851>     MOVE.b $A(A1),D0
00030BE8 <AmiBlitz3.ab2@11852>     MOVEA.l _execbase,A6
00030BEE <AmiBlitz3.ab2@11853>     MOVE.l mempool2,a0
00030BF2 <AmiBlitz3.ab2@11854>     JSR _FreePooled(A6)
00030BF6 <AmiBlitz3.ab2@11855> BRA.w freetypes
00030BF8 <AmiBlitz3.ab2@11858> RTS
00030BFE <AmiBlitz3.ab2@11862>   JSR uselib2
00030C04 <AmiBlitz3.ab2@11864>   CLR.w notshared
00030C0A <AmiBlitz3.ab2@11865>   CLR.w varmode
00030C10 <AmiBlitz3.ab2@11866>   MOVE.w proceduremode,D1
00030C14 <AmiBlitz3.ab2@11867>    BNE.w JL_0_8F4E
00030C1A <AmiBlitz3.ab2@11868>   LEA varbase,A2
00030C20 <AmiBlitz3.ab2@11869>   LEA ptr_parameterstore,a0
00030C24 <AmiBlitz3.ab2@11870>   CMP.b #$22,(a0)
00030C28 <AmiBlitz3.ab2@11871>   BNE JL_0_8E5E
00030C2A <AmiBlitz3.ab2@11872>   MOVEQ #0,d0
00030C30 <AmiBlitz3.ab2@11873> JMP error
00030C34 <AmiBlitz3.ab2@11876>   BSR.w findvariable
00030C38 <AmiBlitz3.ab2@11879>   BNE.w JL_0_8E7E
00030C3E <AmiBlitz3.ab2@11882>   MOVE.b flagmask+1,D1
00030C42 <AmiBlitz3.ab2@11883>   MOVE.b $7(A2),D3
00030C44 <AmiBlitz3.ab2@11884>   EOR.b D3,D1
00030C48 <AmiBlitz3.ab2@11885>   BNE 'l2
00030C50 <AmiBlitz3.ab2@11886>   CMP.b #2,nowdeclare
00030C54 <AmiBlitz3.ab2@11887>   BEQ errormsg_declaredtwice
00030C58 <AmiBlitz3.ab2@11888> BRA.w JL_0_8FA8
00030C5C <AmiBlitz3.ab2@11891>   BSR.w findlab
00030C60 <AmiBlitz3.ab2@11892>   BNE 'l1
00030C68 <AmiBlitz3.ab2@11893>   CMP.b #2,nowdeclare
00030C6C <AmiBlitz3.ab2@11894>   BEQ errormsg_declaredtwice
00030C6E <AmiBlitz3.ab2@11895>   CMP.w d0,d0
00030C72 <AmiBlitz3.ab2@11898> BRA.w JL_0_8E62
00030C74 <AmiBlitz3.ab2@11901>    MOVE.l a2,-(a7)
00030C7A <AmiBlitz3.ab2@11902>    LEA sharebase,a2
00030C7C <AmiBlitz3.ab2@11903>    MOVEQ #$f+4,d7
00030C80 <AmiBlitz3.ab2@11904>    BSR.w findlab
00030C84 <AmiBlitz3.ab2@11905>    BEQ 'l2x
00030C86 <AmiBlitz3.ab2@11906>    MOVE.l (a7)+,a2
00030C8A <AmiBlitz3.ab2@11907> BRA 'cont
00030C8C <AmiBlitz3.ab2@11910>   ADDQ.l #4,a7
00030C92 <AmiBlitz3.ab2@11911>   CLR.w varmode
00030C98 <AmiBlitz3.ab2@11912>   MOVE.b flagmask+1,D1
00030C9C <AmiBlitz3.ab2@11913>   MOVE.b $7(A2),D3
00030C9E <AmiBlitz3.ab2@11914>   EOR.b D3,D1
00030CA2 <AmiBlitz3.ab2@11915>   BNE vardeclareerr
00030CA6 <AmiBlitz3.ab2@11916> BRA JL_0_8FA8
00030CAC <AmiBlitz3.ab2@11919>    MOVE.w nonew,D1
00030CB0 <AmiBlitz3.ab2@11920>    BNE.w nonewerr
00030CB6 <AmiBlitz3.ab2@11921>    TST.b nowdeclare
00030CBA <AmiBlitz3.ab2@11922>    BNE 'l2
00030CC0 <AmiBlitz3.ab2@11923>    TST.b declare2
00030CC4 <AmiBlitz3.ab2@11924>    BEQ 'l1
00030CC8 <AmiBlitz3.ab2@11925>    CMP.b #$2e,d0
00030CCC <AmiBlitz3.ab2@11926>    BEQ 'l2
00030CD0 <AmiBlitz3.ab2@11927>    CMP.b #"$",d0
00030CD4 <AmiBlitz3.ab2@11928>    BEQ 'l2
00030CD8 <AmiBlitz3.ab2@11929> BRA vardeclareerr
00030CDE <AmiBlitz3.ab2@11932>   TST.b declare
00030CE2 <AmiBlitz3.ab2@11933>    BNE vardeclareerr
00030CE6 <AmiBlitz3.ab2@11936>   BSR.w addvariable
00030CEC <AmiBlitz3.ab2@11937>   NOT.w notshared
00030CEE <AmiBlitz3.ab2@11938>   MOVEA.l A2,A3
00030CF4 <AmiBlitz3.ab2@11939>   MOVEA.l defaulttype,A2
00030CF8 <AmiBlitz3.ab2@11940>   CMP.w #$2E,D0
00030CFC <AmiBlitz3.ab2@11941>    BEQ.w JL_0_8EB8
00030D00 <AmiBlitz3.ab2@11942>   CMP.w #$24,D0
00030D04 <AmiBlitz3.ab2@11943>    BNE.w JL_0_8ECA
00030D0A <AmiBlitz3.ab2@11944>   LEA newtype_string,A2
00030D0E <AmiBlitz3.ab2@11945>    BSR.w get1bytemain
00030D12 <AmiBlitz3.ab2@11946> BRA.w JL_0_8ECA
00030D16 <AmiBlitz3.ab2@11949>    BSR.w getparameter2
00030D1C <AmiBlitz3.ab2@11950>   LEA newtypebase,A2
00030D20 <AmiBlitz3.ab2@11951>    BSR.w findtype
00030D24 <AmiBlitz3.ab2@11952>    BNE.w JUMP_notypeerr
00030D2A <AmiBlitz3.ab2@11955>   CMPA.l #newtype_byte,A2
00030D2E <AmiBlitz3.ab2@11956>    BEQ.w JL_0_8EECb
00030D34 <AmiBlitz3.ab2@11957>   MOVE.w varmode,D1
00030D38 <AmiBlitz3.ab2@11958>    BNE.w JL_0_8EE4b
00030D3E <AmiBlitz3.ab2@11959>   ADDQ.w #1,globalvarpointer
00030D46 <AmiBlitz3.ab2@11962>   BCLR #$0,globalvarpointer+1
00030D4A <AmiBlitz3.ab2@11965>   MOVE.l A2,$A(A3)
00030D52 <AmiBlitz3.ab2@11966>   MOVE.w flagmask,$6(A3)                                  ;??????????
00030D54 <AmiBlitz3.ab2@11968>   MOVEQ.l #$04,D1
00030D5C <AmiBlitz3.ab2@11969>   BTST #$0,flagmask+1
00030D60 <AmiBlitz3.ab2@11970>    BNE.w JL_0_8F22b
00030D68 <AmiBlitz3.ab2@11971>   BTST #$1,flagmask+1
00030D6C <AmiBlitz3.ab2@11972>    BNE.w JL_0_8F22b
00030D74 <AmiBlitz3.ab2@11973>   CMPI.l #$100,$4(A2)
00030D78 <AmiBlitz3.ab2@11974>    BCC.w JL_0_8F22b
00030D7C <AmiBlitz3.ab2@11975>   MOVE.w $8(A2),D1
00030D82 <AmiBlitz3.ab2@11978>   TST.w varmode
00030D86 <AmiBlitz3.ab2@11979> BRA.w JL_0_8F3E
00030D8A <AmiBlitz3.ab2@11988>   BSR.w getparameter2
00030D90 <AmiBlitz3.ab2@11989>   LEA newtypebase,A2
00030D94 <AmiBlitz3.ab2@11990>    BSR.w findtype
00030D98 <AmiBlitz3.ab2@11991>    BNE.w notypeerr
00030D9E <AmiBlitz3.ab2@11994>   CMPA.l #newtype_byte,A2
00030DA2 <AmiBlitz3.ab2@11995>    BEQ.w JL_0_8EEC
00030DA8 <AmiBlitz3.ab2@11996>   MOVE.w varmode,D1
00030DAC <AmiBlitz3.ab2@11997>    BNE.w JL_0_8EE4
00030DB2 <AmiBlitz3.ab2@11998>   ADDQ.w #1,globalvarpointer
00030DBA <AmiBlitz3.ab2@12001>   BCLR #$0,globalvarpointer+1
00030DBE <AmiBlitz3.ab2@12004>   MOVE.l A2,$A(A3)
00030DC6 <AmiBlitz3.ab2@12005>   MOVE.w flagmask,$6(A3)                                  ;??????????
00030DC8 <AmiBlitz3.ab2@12006>   MOVEQ.l #$04,D1
00030DD0 <AmiBlitz3.ab2@12007>   BTST #$0,flagmask+1
00030DD4 <AmiBlitz3.ab2@12008>    BNE.w JL_0_8F22
00030DDC <AmiBlitz3.ab2@12009>   BTST #$1,flagmask+1
00030DE0 <AmiBlitz3.ab2@12010>    BNE.w JL_0_8F22
00030DE8 <AmiBlitz3.ab2@12011>   CMPI.l #$100,$4(A2)
00030DEC <AmiBlitz3.ab2@12012>    BCC.w JL_0_8F22
00030DF0 <AmiBlitz3.ab2@12013>   MOVE.w $8(A2),D1
00030DF6 <AmiBlitz3.ab2@12016>   TST.w varmode
00030DFA <AmiBlitz3.ab2@12017>    BEQ.w JL_0_8F3E
00030DFC <AmiBlitz3.ab2@12018>   NEG.w D1
00030E02 <AmiBlitz3.ab2@12019>   ADD.w D1,globalvarpointer
00030E0A <AmiBlitz3.ab2@12020>   MOVE.w globalvarpointer,$4(A3)
00030E0C <AmiBlitz3.ab2@12021> RTS
00030E14 <AmiBlitz3.ab2@12024>   MOVE.w globalvarpointer,$4(A3)
00030E1A <AmiBlitz3.ab2@12025>   ADD.w D1,globalvarpointer
00030E1C <AmiBlitz3.ab2@12026> RTS
00030E22 <AmiBlitz3.ab2@12030>   LEA firstglob,A2
00030E26 <AmiBlitz3.ab2@12031>    BSR.w findvariable2
00030E2A <AmiBlitz3.ab2@12034>   BNE.w JL_0_8F74
00030E30 <AmiBlitz3.ab2@12035>   MOVE.b flagmask+1,D1
00030E34 <AmiBlitz3.ab2@12036>   MOVE.b $7(A2),D3
00030E36 <AmiBlitz3.ab2@12037>   EOR.b D3,D1
00030E3A <AmiBlitz3.ab2@12038>    BEQ.w JL_0_8FA8
00030E3E <AmiBlitz3.ab2@12039>    BSR.w findlab
00030E42 <AmiBlitz3.ab2@12040> BRA.w JL_0_8F58
00030E4A <AmiBlitz3.ab2@12043>   MOVE.w #$FFFF,varmode
00030E50 <AmiBlitz3.ab2@12044>   MOVE.w globalvarpointer,-(A7)
00030E5A <AmiBlitz3.ab2@12045>   MOVE.w locvaroff,globalvarpointer
00030E60 <AmiBlitz3.ab2@12046>   LEA firstlocal,A2
00030E68 <AmiBlitz3.ab2@12047>   MOVE.b #1,newvariable
00030E6C <AmiBlitz3.ab2@12048>    BSR.w JL_0_8E5E
00030E72 <AmiBlitz3.ab2@12049>   CLR.b newvariable
00030E7C <AmiBlitz3.ab2@12050>   MOVE.w globalvarpointer,locvaroff
00030E82 <AmiBlitz3.ab2@12051>   MOVE.w (A7)+,globalvarpointer
00030E84 <AmiBlitz3.ab2@12052> RTS
00030E86 <AmiBlitz3.ab2@12055>   MOVEA.l A2,A3
00030E8A <AmiBlitz3.ab2@12056>   CMP.w #$2E,D0
00030E8E <AmiBlitz3.ab2@12057>    BEQ.w JL_0_8FCE
00030E92 <AmiBlitz3.ab2@12058>   CMP.w #$24,D0
00030E96 <AmiBlitz3.ab2@12059>    BNE.w JL_0_8FE8
00030E9E <AmiBlitz3.ab2@12060>   CMPI.l #newtype_string,$A(A3)
00030EA2 <AmiBlitz3.ab2@12061>    BNE.w rongtypeerr
00030EA6 <AmiBlitz3.ab2@12062>    BSR.w get1bytemain
00030EAA <AmiBlitz3.ab2@12063> BRA.w JL_0_8FE8
00030EAE <AmiBlitz3.ab2@12066>    BSR.w getparameter2
00030EB4 <AmiBlitz3.ab2@12067>   LEA newtypebase,A2
00030EB8 <AmiBlitz3.ab2@12068>    BSR.w findtype
00030EBC <AmiBlitz3.ab2@12069>    BNE.w notypeerr
00030EC0 <AmiBlitz3.ab2@12070>   CMPA.l $A(A3),A2
00030EC4 <AmiBlitz3.ab2@12071>    BNE.w rongtypeerr
00030ECC <AmiBlitz3.ab2@12073>   BTST #$0,flagmask+1
00030ED0 <AmiBlitz3.ab2@12074>    BEQ.w JL_0_8FFE
00030ED6 <AmiBlitz3.ab2@12075>   BTST #$0,$7(A3)
00030EDA <AmiBlitz3.ab2@12076>    BEQ.w pointerr
00030EDE <AmiBlitz3.ab2@12079>   MOVEA.l $A(A3),A2
00030EE0 <AmiBlitz3.ab2@12080> RTS
00030EE2 <AmiBlitz3.ab2@12084>    TST.l D3                                                ;newtype >32kb  .w to .l
00030EE6 <AmiBlitz3.ab2@12085>    BEQ.w JL_0_9042
00030EF0 <AmiBlitz3.ab2@12086>    MOVE.l destpointer,loada
00030EF4 <AmiBlitz3.ab2@12089> BRA JL_0_9032
00030EF8 <AmiBlitz3.ab2@12091>   CMP.w #$9,D3                                             ;_addq_arrays
00030EFC <AmiBlitz3.ab2@12092>    BCC.w JL_0_9032
00030F02 <AmiBlitz3.ab2@12093>   MOVE.w d3,arrayoffset
00030F06 <AmiBlitz3.ab2@12094>   ANDI.w #$7,D3
00030F08 <AmiBlitz3.ab2@12095>   LSL.w #8,D3
00030F0A <AmiBlitz3.ab2@12096>   LSL.w #1,D3
00030F12 <AmiBlitz3.ab2@12097>   ANDI.w #$F1FF,addqa0
00030F18 <AmiBlitz3.ab2@12098>   OR.w D3,addqa0
00030F1E <AmiBlitz3.ab2@12099>   MOVE.w addqa0,D1
00030F22 <AmiBlitz3.ab2@12100> BRA.w writeword
00030F28 <AmiBlitz3.ab2@12103>   CMP.l #$7fff,d3                                          ;>32kb newtypes
00030F2C <AmiBlitz3.ab2@12104>   BGT longoffset
00030F32 <AmiBlitz3.ab2@12105>   MOVE.w D3,leaa0a0+2
00030F38 <AmiBlitz3.ab2@12106>   MOVE.w d3,arrayoffset
00030F3E <AmiBlitz3.ab2@12107>   MOVE.l leaa0a0,D1
00030F42 <AmiBlitz3.ab2@12108>   BSR.w writelong
00030F44 <AmiBlitz3.ab2@12111> RTS
00030F48 <AmiBlitz3.ab2@12114>    MOVE.w #$d5fc,d1
00030F4C <AmiBlitz3.ab2@12115>    BSR writeword
00030F4E <AmiBlitz3.ab2@12116>    MOVE.l d3,d1
00030F52 <AmiBlitz3.ab2@12117>    BSR.w writelong
00030F54 <AmiBlitz3.ab2@12118> RTS
00030F58 <AmiBlitz3.ab2@12122>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
00030F5C <AmiBlitz3.ab2@12125>    BCS.w arrchk3                                           
00030F62 <AmiBlitz3.ab2@12126>    JSR $20000                                              ;jsr 0
00030F68 <AmiBlitz3.ab2@12132>   TST.b fast
00030F6C <AmiBlitz3.ab2@12133>   BEQ 'l1
00030F6E <AmiBlitz3.ab2@12134>    MOVEQ #0,d1                                             ;faster arrays
00030F74 <AmiBlitz3.ab2@12135>    MOVE.w regnum,d2
00030F76 <AmiBlitz3.ab2@12136>    MOVE.w d2,d1
00030F78 <AmiBlitz3.ab2@12137>    LSL.w #8,d1
00030F7A <AmiBlitz3.ab2@12138>    LSL.w #4,d1
00030F7C <AmiBlitz3.ab2@12139>    ADD.w d2,d1
00030F82 <AmiBlitz3.ab2@12140>    OR.l #$4c2d0000,d1
00030F88 <AmiBlitz3.ab2@12141>    TST.w varmode
00030F8C <AmiBlitz3.ab2@12142>    BEQ 'l1a
00030F90 <AmiBlitz3.ab2@12143>    BCLR #16,d1
00030F94 <AmiBlitz3.ab2@12146>    BSR writelong
00030F98 <AmiBlitz3.ab2@12147>    MOVE.w $4(A7),D1
00030F9C <AmiBlitz3.ab2@12148>    BSR.w writeword
00030FA2 <AmiBlitz3.ab2@12149>    MOVE.w regnum,D1
00030FA4 <AmiBlitz3.ab2@12150>   SUBQ.w #1,D1
00030FA6 <AmiBlitz3.ab2@12151>   LSL.w #8,D1
00030FA8 <AmiBlitz3.ab2@12152>   LSL.w #1,D1
00030FAC <AmiBlitz3.ab2@12153>   ORI.w #$D080,D1
00030FB2 <AmiBlitz3.ab2@12154>   OR.w regnum,D1
00030FB6 <AmiBlitz3.ab2@12155>    BSR.w writeword
00030FB8 <AmiBlitz3.ab2@12156> RTS
00030FBE <AmiBlitz3.ab2@12159>   MOVE.w regnum,D2
00030FC2 <AmiBlitz3.ab2@12160>   MOVE.w arrmul1(PC),D1
00030FC4 <AmiBlitz3.ab2@12161>   OR.w D2,D1
00030FC6 <AmiBlitz3.ab2@12162>   SUBQ.w #1,D1
00030FCA <AmiBlitz3.ab2@12163>    BSR.w writeword
00030FCE <AmiBlitz3.ab2@12164>   MOVE.w arrmul2(PC),D1
00030FD0 <AmiBlitz3.ab2@12165>   OR.w D2,D1
00030FD2 <AmiBlitz3.ab2@12166>   MOVE.w D2,D3
00030FD4 <AmiBlitz3.ab2@12167>   SUBQ.w #1,D3
00030FD6 <AmiBlitz3.ab2@12168>   LSL.w #8,D3
00030FD8 <AmiBlitz3.ab2@12169>   LSL.w #1,D3
00030FDA <AmiBlitz3.ab2@12170>   OR.w D3,D1
00030FDE <AmiBlitz3.ab2@12171>    BSR.w writeword
00030FE2 <AmiBlitz3.ab2@12172>   MOVE.w arrmul3(PC),D1
00030FE4 <AmiBlitz3.ab2@12173>   MOVE.w D2,D3
00030FE6 <AmiBlitz3.ab2@12174>   LSL.w #8,D3
00030FE8 <AmiBlitz3.ab2@12175>   LSL.w #1,D3
00030FEA <AmiBlitz3.ab2@12176>   OR.w D3,D1
00030FEE <AmiBlitz3.ab2@12177>    BSR.w pokewda5s
00030FF2 <AmiBlitz3.ab2@12178>   MOVE.w $4(A7),D1
00030FF4 <AmiBlitz3.ab2@12179>   ADDQ.w #2,D1
00030FF8 <AmiBlitz3.ab2@12180>    BSR.w writeword
00030FFC <AmiBlitz3.ab2@12181>   MOVE.w arrmul4(PC),D1
00030FFE <AmiBlitz3.ab2@12182>   MOVE.w D2,D3
00031000 <AmiBlitz3.ab2@12183>   SUBQ.w #1,D3
00031002 <AmiBlitz3.ab2@12184>   LSL.w #8,D3
00031004 <AmiBlitz3.ab2@12185>   LSL.w #1,D3
00031006 <AmiBlitz3.ab2@12186>   OR.w D3,D1
0003100A <AmiBlitz3.ab2@12187>    BSR.w pokewda5s
0003100E <AmiBlitz3.ab2@12188>   MOVE.w $4(A7),D1
00031012 <AmiBlitz3.ab2@12189>    BSR.w writeword
00031016 <AmiBlitz3.ab2@12190>   MOVE.w arrmul5(PC),D1
00031018 <AmiBlitz3.ab2@12191>   OR.w D2,D1
0003101A <AmiBlitz3.ab2@12192>   SUBQ.w #1,D1
0003101E <AmiBlitz3.ab2@12193>    BSR.w writeword
00031022 <AmiBlitz3.ab2@12194>   MOVE.w arrmul6(PC),D1
00031024 <AmiBlitz3.ab2@12195>   OR.w D2,D1
00031026 <AmiBlitz3.ab2@12196>   SUBQ.w #1,D1
0003102A <AmiBlitz3.ab2@12197>    BSR.w writeword
0003102E <AmiBlitz3.ab2@12198>   MOVE.w arrmul7(PC),D1
00031030 <AmiBlitz3.ab2@12199>   OR.w D2,D1
00031032 <AmiBlitz3.ab2@12200>   SUBQ.w #1,D1
00031034 <AmiBlitz3.ab2@12201>   MOVE.w D2,D3
00031036 <AmiBlitz3.ab2@12202>   LSL.w #8,D3
00031038 <AmiBlitz3.ab2@12203>   LSL.w #1,D3
0003103A <AmiBlitz3.ab2@12204>   OR.w D3,D1
0003103E <AmiBlitz3.ab2@12205>    BSR.w writeword
00031042 <AmiBlitz3.ab2@12206>   MOVE.w arrmul8(PC),D1
00031044 <AmiBlitz3.ab2@12207>   MOVE.w D2,D3
00031046 <AmiBlitz3.ab2@12208>   SUBQ.w #1,D3
00031048 <AmiBlitz3.ab2@12209>   LSL.w #8,D3
0003104A <AmiBlitz3.ab2@12210>   LSL.w #1,D3
0003104C <AmiBlitz3.ab2@12211>   OR.w D3,D1
00031050 <AmiBlitz3.ab2@12212>    BSR.w writeword
00031056 <AmiBlitz3.ab2@12213>   MOVE.w regnum,D1
00031058 <AmiBlitz3.ab2@12214>   SUBQ.w #1,D1
0003105A <AmiBlitz3.ab2@12215>   LSL.w #8,D1
0003105C <AmiBlitz3.ab2@12216>   LSL.w #1,D1
00031060 <AmiBlitz3.ab2@12217>   ORI.w #$D080,D1
00031066 <AmiBlitz3.ab2@12218>   OR.w regnum,D1
0003106A <AmiBlitz3.ab2@12219> BRA.w writeword
0003106C <AmiBlitz3.ab2@12227> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0003106E <AmiBlitz3.ab2@12228> arrmul2:   MOVE  d0,d0
00031072 <AmiBlitz3.ab2@12229> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
00031076 <AmiBlitz3.ab2@12230> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
00031078 <AmiBlitz3.ab2@12232> arrmul5:   SWAP d0
0003107A <AmiBlitz3.ab2@12233> arrmul6:   CLR d0
0003107C <AmiBlitz3.ab2@12234> arrmul7:   ADD.l d0,d0
0003107E <AmiBlitz3.ab2@12235> arrmul8:   MOVE.l (a7)+,d0
00031082 <AmiBlitz3.ab2@12240> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
00031086 <AmiBlitz3.ab2@12241> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
00031088 <AmiBlitz3.ab2@12242> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0003108E <AmiBlitz3.ab2@12260>   CLR.l lastoffset_org
00031094 <AmiBlitz3.ab2@12261>   BTST #$1,$7(A3)
00031098 <AmiBlitz3.ab2@12262>    BEQ.w calcvar__notarr
0003109E <AmiBlitz3.ab2@12263>   MOVE.w notshared,D1
000310A2 <AmiBlitz3.ab2@12264>    BNE.w noarrerr
000310A6 <AmiBlitz3.ab2@12265>    BSR.w get1bytemain
000310AA <AmiBlitz3.ab2@12266>   CMP.w #$29,D0
000310AE <AmiBlitz3.ab2@12267>    BNE.w calcvar__notalist
000310B4 <AmiBlitz3.ab2@12268>   BTST #$0,$6(A3)
000310B8 <AmiBlitz3.ab2@12269>    BEQ.w nolisterr
000310C0 <AmiBlitz3.ab2@12270>   MOVE.w $4(A3),listcode1+2
000310C4 <AmiBlitz3.ab2@12271>   MOVE.l listcode1(PC),D1
000310C8 <AmiBlitz3.ab2@12272>    BSR.w pokela5s
000310CC <AmiBlitz3.ab2@12273>   MOVE.l listcode2(PC),D1
000310D0 <AmiBlitz3.ab2@12274>    BSR.w writelong
000310D6 <AmiBlitz3.ab2@12275>   TST.b debugmode
000310DA <AmiBlitz3.ab2@12276>    BEQ.w calcvar__nolrerr
000310DC <AmiBlitz3.ab2@12280>   MOVE.l A2,-(A7)
000310E0 <AmiBlitz3.ab2@12281>   MOVE.w #$C315,D1
000310E4 <AmiBlitz3.ab2@12282>    BSR.w Atokejsr
000310E6 <AmiBlitz3.ab2@12283>   MOVEA.l (A7)+,A2
000310EA <AmiBlitz3.ab2@12286>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
000310EE <AmiBlitz3.ab2@12288>    BSR.w writeword
000310F2 <AmiBlitz3.ab2@12289> BRA.w calcvar__normalar
000310F4 <AmiBlitz3.ab2@12292> calcvar__listoff:   Ds.w 1
000310FA <AmiBlitz3.ab2@12296>   CLR.w calcvar__listoff
00031100 <AmiBlitz3.ab2@12297>   BTST #$0,$6(A3)
00031104 <AmiBlitz3.ab2@12298>    BEQ.w calcvar__knop
0003110C <AmiBlitz3.ab2@12299>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
00031110 <AmiBlitz3.ab2@12302>   MOVEM.l A2-A3,-(A7)
00031116 <AmiBlitz3.ab2@12303>   MOVE.w varmode,-(A7)
0003111A <AmiBlitz3.ab2@12304>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0003111E <AmiBlitz3.ab2@12305>   MOVE.w $4(A3),-(A7)                                       ;varoff
00031120 <AmiBlitz3.ab2@12306>   MOVE.l A2,-(A7)
00031126 <AmiBlitz3.ab2@12307>   MOVE.w flagmask,-(A7)
00031130 <AmiBlitz3.ab2@12309>   MOVE.w oldqflag,instringon
00031136 <AmiBlitz3.ab2@12310>   MOVEA.l lastsourcepos,A5
0003113A <AmiBlitz3.ab2@12311>    BSR.w arreval
00031140 <AmiBlitz3.ab2@12312>   MOVE.w (A7)+,flagmask
00031148 <AmiBlitz3.ab2@12313>   MOVE.w $8(A7),varmode
0003114E <AmiBlitz3.ab2@12314>   TST.b debugmode
00031152 <AmiBlitz3.ab2@12315>    BEQ.w calcvar__noszchk
00031154 <AmiBlitz3.ab2@12319>   MOVEA.l (A7)+,A2
00031156 <AmiBlitz3.ab2@12320>   MOVEQ.l #$04,D1
0003115E <AmiBlitz3.ab2@12321>   BTST #$0,flagmask+1                                      ;pointer?
00031162 <AmiBlitz3.ab2@12322>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
00031166 <AmiBlitz3.ab2@12323>   MOVE.w $8(A2),D1
0003116A <AmiBlitz3.ab2@12326>   ADD.w calcvar__listoff(PC),D1
0003116E <AmiBlitz3.ab2@12327>   BSR.w JL_0_B6DE
00031174 <AmiBlitz3.ab2@12328>   ADDQ.w #1,regnum
00031176 <AmiBlitz3.ab2@12331>   ADDQ.w #4,(A7)
0003117A <AmiBlitz3.ab2@12332>   TST.w $4(A7)
0003117E <AmiBlitz3.ab2@12333>    BEQ.w calcvar__isglob
00031180 <AmiBlitz3.ab2@12334>   SUBQ.w #8,(A7)                                           ;range check local array
00031186 <AmiBlitz3.ab2@12337>   TST.b debugmode
0003118A <AmiBlitz3.ab2@12338>    BEQ.w calcvar__noer1
00031190 <AmiBlitz3.ab2@12339>   MOVE.w regnum,D1
00031192 <AmiBlitz3.ab2@12340>   SUBQ.w #1,D1
00031194 <AmiBlitz3.ab2@12341>   LSL.w #8,D1
00031196 <AmiBlitz3.ab2@12342>   LSL.w #1,D1
0003119A <AmiBlitz3.ab2@12343>   OR.w zarrchk(PC),D1
0003119E <AmiBlitz3.ab2@12344>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
000311A0 <AmiBlitz3.ab2@12345>   MOVE.w (A7),D1
000311A4 <AmiBlitz3.ab2@12346>    BSR.w writeword
000311A8 <AmiBlitz3.ab2@12347>   MOVE.l arrchk2(PC),D1
000311AC <AmiBlitz3.ab2@12348>    BSR.w writelong
000311B0 <AmiBlitz3.ab2@12349>   MOVE.w #$C309,D1
000311B4 <AmiBlitz3.ab2@12350>    BSR.w Atokejsr
000311B8 <AmiBlitz3.ab2@12353>   SUBQ.w #1,$2(A7)
000311BC <AmiBlitz3.ab2@12354>    BEQ.w calcvar__ardone
000311C0 <AmiBlitz3.ab2@12355>   CMP.w #$2C,D0
000311C4 <AmiBlitz3.ab2@12356>    BNE.w syntaxerr
000311CA <AmiBlitz3.ab2@12357>    TST.b fast
000311CE <AmiBlitz3.ab2@12358>    BNE 'l1
000311D2 <AmiBlitz3.ab2@12359>    BSR.w arrevalchk
000311D6 <AmiBlitz3.ab2@12360> BRA 'l2
000311DA <AmiBlitz3.ab2@12363>   BSR arreval
000311E2 <AmiBlitz3.ab2@12366>   MOVE.w $4(A7),varmode
000311E6 <AmiBlitz3.ab2@12367>   BSR.w JL_0_9052
000311EA <AmiBlitz3.ab2@12368> BRA.w calcvar__arloop
000311EE <AmiBlitz3.ab2@12372>   CMP.w #$29,D0
000311F2 <AmiBlitz3.ab2@12373>    BNE.w syntaxerr
000311F8 <AmiBlitz3.ab2@12374>   SUBQ.w #1,regnum
000311FA <AmiBlitz3.ab2@12375>   ADDQ.w #6,A7
000311FE <AmiBlitz3.ab2@12376>   MOVEM.l (A7)+,A2-A3
00031206 <AmiBlitz3.ab2@12377>   MOVE.w $4(A3),movea5a0+2
0003120C <AmiBlitz3.ab2@12378>   MOVE.l movea5a0,D1
00031210 <AmiBlitz3.ab2@12379>    BSR.w pokela5s
00031216 <AmiBlitz3.ab2@12380>   MOVE.w regnum,D1
0003121A <AmiBlitz3.ab2@12381>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0003121E <AmiBlitz3.ab2@12382>    BSR.w writeword
00031224 <AmiBlitz3.ab2@12383>   BTST #$0,$6(A3)
00031228 <AmiBlitz3.ab2@12384>    BEQ.w calcvar__normalar
0003122C <AmiBlitz3.ab2@12388>   MOVE.w listarfix(PC),D1
00031230 <AmiBlitz3.ab2@12389>    BSR.w writeword
00031234 <AmiBlitz3.ab2@12392>   BSR.w get1bytemain
0003123A <AmiBlitz3.ab2@12396>   BTST #$0,$7(A3)
0003123E <AmiBlitz3.ab2@12397>    BEQ.w calcvar__noppnt
00031242 <AmiBlitz3.ab2@12398>   CMP.w #$5C,D0
00031246 <AmiBlitz3.ab2@12399>    BNE.w calcvar__pmskip
0003124A <AmiBlitz3.ab2@12400>   MOVE.w calcvar__pfix(PC),D1
0003124E <AmiBlitz3.ab2@12401>    BSR.w writeword
00031252 <AmiBlitz3.ab2@12404>   MOVE.w #$8000,D2
00031256 <AmiBlitz3.ab2@12405> BRA.w calcvar__loopml
0003125A <AmiBlitz3.ab2@12408>   MOVE.w #$C000,D2
0003125E <AmiBlitz3.ab2@12409> BRA.w calcvar__loopml
00031260 <AmiBlitz3.ab2@12413> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
00031264 <AmiBlitz3.ab2@12418>   CMP.w #$28,D0
00031268 <AmiBlitz3.ab2@12419>    BEQ.w noarrerr
00031270 <AmiBlitz3.ab2@12420>   CMPI.l #$100,$4(A2)
00031274 <AmiBlitz3.ab2@12421>    BCS.w calcvar__simpvar
0003127A <AmiBlitz3.ab2@12422>   BTST #$0,$7(A3)
0003127E <AmiBlitz3.ab2@12423>    BEQ.w calcvar__notap
00031282 <AmiBlitz3.ab2@12427>   CMP.w #$5C,D0
00031286 <AmiBlitz3.ab2@12428>    BEQ.w calcvar__notap
00031288 <AmiBlitz3.ab2@12429>   MOVEQ.l #$00,D2
0003128C <AmiBlitz3.ab2@12430> BRA.w calcvar__simpvar2
00031290 <AmiBlitz3.ab2@12433>   MOVE.w #$8000,D2
00031298 <AmiBlitz3.ab2@12434>   MOVE.w $4(A3),movea5a0+2
0003129E <AmiBlitz3.ab2@12435>   MOVE.l movea5a0,D1
000312A2 <AmiBlitz3.ab2@12436>    BSR.w pokela5s                                         ;move.l x(a5),a2
000312A8 <AmiBlitz3.ab2@12438>    TST.b debugmode
000312AC <AmiBlitz3.ab2@12439>    BEQ.w 'skip
000312B0 <AmiBlitz3.ab2@12440>    MOVE.w #$c320,D1
000312B6 <AmiBlitz3.ab2@12441>    JSR Atokejsr
000312B8 <AmiBlitz3.ab2@12445>   MOVEQ.l #$00,D3
000312BC <AmiBlitz3.ab2@12448>   CMP.w #$5C,D0
000312C0 <AmiBlitz3.ab2@12449>    BNE.w calcvar__done
000312C8 <AmiBlitz3.ab2@12450>   CMPI.l #$100,$4(A2)
000312CC <AmiBlitz3.ab2@12451>    BCS.w rongtypeerr
000312CE <AmiBlitz3.ab2@12452>   MOVE.w D2,-(A7)
000312D2 <AmiBlitz3.ab2@12453>    BSR.w getparameter2
000312D6 <AmiBlitz3.ab2@12454>    BEQ.w syntaxerr
000312D8 <AmiBlitz3.ab2@12455>   ADDQ.w #4,A2
000312DC <AmiBlitz3.ab2@12456>    BSR.w findvariable2
000312E0 <AmiBlitz3.ab2@12457>    BNE.w noofferr
000312E2 <AmiBlitz3.ab2@12458>   MOVE.w (A7)+,D2
000312E4 <AmiBlitz3.ab2@12459>   MOVEA.l A2,A3                                             ;pointer to offset
000312E8 <AmiBlitz3.ab2@12460>   MOVEA.l $A(A3),A2                                         ;pointer to type
000312EA <AmiBlitz3.ab2@12461>   MOVEQ #0,d1
000312EE <AmiBlitz3.ab2@12462>   MOVE.w 4(a3),d1
000312F0 <AmiBlitz3.ab2@12463>   ADD.l d1,d3
000312F6 <AmiBlitz3.ab2@12465>   MOVE.l A3,lastoffset_org
000312FA <AmiBlitz3.ab2@12466>   CMP.w #$5B,D0
000312FE <AmiBlitz3.ab2@12467>    BNE.w calcvar__realdone
00031304 <AmiBlitz3.ab2@12468>   BTST #$1,$7(A3)
00031308 <AmiBlitz3.ab2@12469>    BEQ.w rongtypeerr
0003130C <AmiBlitz3.ab2@12470>    BSR.w JL_0_9004
00031310 <AmiBlitz3.ab2@12471>   MOVEM.l A2-A3,-(A7)
00031316 <AmiBlitz3.ab2@12472>   MOVE.w varmode,-(A7)
0003131C <AmiBlitz3.ab2@12473>   MOVE.l lastoffset_org,-(A7)
00031322 <AmiBlitz3.ab2@12474>   MOVE.w pusha2,D1
00031326 <AmiBlitz3.ab2@12475>    BSR.w writeword
00031328 <AmiBlitz3.ab2@12476>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
00031332 <AmiBlitz3.ab2@12477>   MOVE.l destpointer,deststore
00031336 <AmiBlitz3.ab2@12478>    BSR.w eval
0003133A <AmiBlitz3.ab2@12479>   CMP.w #$5D,D0
0003133E <AmiBlitz3.ab2@12480>    BNE.w syntaxerr
00031344 <AmiBlitz3.ab2@12481>   TST.b fast                                               ;a2,-(a7) array
00031348 <AmiBlitz3.ab2@12482>   BEQ calcvar__loop0_l10
0003134E <AmiBlitz3.ab2@12486>   MOVE.l destpointer,d1
00031354 <AmiBlitz3.ab2@12487>   SUB.l deststore,d1
0003135A <AmiBlitz3.ab2@12488>   CMP.l #4,d1
0003135E <AmiBlitz3.ab2@12489>   BNE calcvar__loop0_l10
00031364 <AmiBlitz3.ab2@12490>   MOVE.l destpointer,a4
0003136A <AmiBlitz3.ab2@12491>   MOVE.l -4(a4),-6(a4)
00031370 <AmiBlitz3.ab2@12492>   SUBQ.l #2,destpointer
00031376 <AmiBlitz3.ab2@12493>   CLR.l imm_addr
0003137C <AmiBlitz3.ab2@12494>   CLR.l load_var_addr
00031380 <AmiBlitz3.ab2@12495> BRA calcvar__loop0_l20
00031386 <AmiBlitz3.ab2@12498>   MOVE.w pulla2,D1
0003138A <AmiBlitz3.ab2@12499>    BSR.w writeword
00031390 <AmiBlitz3.ab2@12502>   MOVE.l (A7)+,lastoffset_org
00031396 <AmiBlitz3.ab2@12503>   MOVE.w (A7)+,varmode
0003139A <AmiBlitz3.ab2@12504>   MOVEM.l (A7)+,A2-A3
000313A0 <AmiBlitz3.ab2@12510>   TST.w debugmode
000313A4 <AmiBlitz3.ab2@12511>    BEQ.b calcvar__nobchk
000313A8 <AmiBlitz3.ab2@12512>   MOVE.w $8(A3),D1
000313AC <AmiBlitz3.ab2@12513>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
000313B2 <AmiBlitz3.ab2@12517>   MOVE.w D1,brchkcode+2
000313B8 <AmiBlitz3.ab2@12518>   MOVE.w regnum,D1
000313BA <AmiBlitz3.ab2@12519>   LSL.w #8,D1
000313BC <AmiBlitz3.ab2@12520>   LSL.w #1,D1
000313C0 <AmiBlitz3.ab2@12521>   OR.w brchkcode0(PC),D1
000313C6 <AmiBlitz3.ab2@12522>   MOVE.w D1,brchkcode
000313CA <AmiBlitz3.ab2@12523>   MOVE.l brchkcode(PC),D1
000313CE <AmiBlitz3.ab2@12524>    BSR.w writelong
000313D2 <AmiBlitz3.ab2@12525>   MOVE.l brchkcode+4(PC),D1
000313D6 <AmiBlitz3.ab2@12526>    BSR.w writelong
000313DA <AmiBlitz3.ab2@12527>   MOVE.w brchkcode+8(PC),D1
000313DE <AmiBlitz3.ab2@12528>    BSR.w writeword
000313E0 <AmiBlitz3.ab2@12531>   MOVEQ.l #$04,D1
000313E6 <AmiBlitz3.ab2@12532>   BTST #$0,$7(A3)
000313EA <AmiBlitz3.ab2@12533>    BNE.w calcvar__dothemul
000313EE <AmiBlitz3.ab2@12534>   MOVE.w $8(A2),D1
000313F2 <AmiBlitz3.ab2@12537>   BSR.w JL_0_B6DE
000313F8 <AmiBlitz3.ab2@12538>   MOVE.w addrega2,D1
000313FE <AmiBlitz3.ab2@12539>   OR.w regnum,D1
00031402 <AmiBlitz3.ab2@12540>    OR.w #$100,d1                                           ;>32kb types
00031406 <AmiBlitz3.ab2@12541>    BSR.w writeword
0003140A <AmiBlitz3.ab2@12542>    BSR.w get1bytemain
0003140C <AmiBlitz3.ab2@12543>   MOVEQ.l #$00,D3
00031410 <AmiBlitz3.ab2@12544>   MOVE.w #$8000,D2
00031416 <AmiBlitz3.ab2@12547>   BTST #$0,$7(A3)
0003141A <AmiBlitz3.ab2@12548>    BNE.w calcvar__pointer
0003141E <AmiBlitz3.ab2@12549> BRA.w calcvar__loop0
00031422 <AmiBlitz3.ab2@12553>  CMP.w #$5C,D0
00031426 <AmiBlitz3.ab2@12554>    BNE.w calcvar__done3
00031428 <AmiBlitz3.ab2@12555>   TST.w D3
0003142C <AmiBlitz3.ab2@12556>    BNE.w calcvar__pskip
00031432 <AmiBlitz3.ab2@12557>   MOVE.w movea0,D1
00031436 <AmiBlitz3.ab2@12558>    BSR.w writeword
0003143A <AmiBlitz3.ab2@12559> BRA.w calcvar__pmore
00031440 <AmiBlitz3.ab2@12562>   MOVE.w D3,movea0a0+2
00031446 <AmiBlitz3.ab2@12563>   MOVE.l movea0a0,D1
0003144A <AmiBlitz3.ab2@12564>    BSR.w writelong
00031450 <AmiBlitz3.ab2@12567>   BTST #$2,$7(A3)
00031454 <AmiBlitz3.ab2@12568>    BEQ.w calcvar__loopml
0003145A <AmiBlitz3.ab2@12569>   MOVE.l adda0a0,D1
0003145E <AmiBlitz3.ab2@12570>    BSR.w writelong
00031462 <AmiBlitz3.ab2@12571> BRA.w calcvar__loopml
00031466 <AmiBlitz3.ab2@12574>   BSET #$E,D2
0003146C <AmiBlitz3.ab2@12575>   BTST #$2,$7(A3)
00031470 <AmiBlitz3.ab2@12576>    BNE.w calcvar__done
00031474 <AmiBlitz3.ab2@12577>   BSET #$D,D2
0003147C <AmiBlitz3.ab2@12580>   CMPI.l #$100,$4(A2)
00031480 <AmiBlitz3.ab2@12581>    BCC.w calcvar__done2
00031484 <AmiBlitz3.ab2@12582>   MOVE.b $7(A2),D2
00031488 <AmiBlitz3.ab2@12585> BRA.w JL_0_9004
0003148C <AmiBlitz3.ab2@12588>   MOVE.w $6(A2),D2
00031490 <AmiBlitz3.ab2@12591>   MOVE.w $4(A3),D3
00031496 <AmiBlitz3.ab2@12592>   BTST #$0,$7(A3)
0003149A <AmiBlitz3.ab2@12593>    BEQ.w calcvar__nopoint
0003149E <AmiBlitz3.ab2@12594>   BSET #$E,D2
000314A0 <AmiBlitz3.ab2@12597> RTS
000314A4 <AmiBlitz3.ab2@12601> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
000314A8 <AmiBlitz3.ab2@12602> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
000314AA <AmiBlitz3.ab2@12603>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
000314AC <AmiBlitz3.ab2@12604>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
000314AE <AmiBlitz3.ab2@12605>              Dc.b $4E,$40                                  ;TRAP    #00
000314B4 <AmiBlitz3.ab2@12613>   TST.w varmode
000314B8 <AmiBlitz3.ab2@12614>    BEQ.w writeword
000314BC <AmiBlitz3.ab2@12615>   BCLR #$0,D1
000314C0 <AmiBlitz3.ab2@12616> BRA.w writeword
000314C6 <AmiBlitz3.ab2@12619>   TST.w varmode
000314CA <AmiBlitz3.ab2@12620>    BEQ.w writeword
000314CE <AmiBlitz3.ab2@12621>   BCLR #$9,D1
000314D2 <AmiBlitz3.ab2@12622> BRA.w writeword
000314D8 <AmiBlitz3.ab2@12625>   TST.w proceduremode
000314DC <AmiBlitz3.ab2@12626>    BEQ.w writelong
000314E0 <AmiBlitz3.ab2@12627>   BCLR #$19,D1
000314E4 <AmiBlitz3.ab2@12628> BRA.w writelong
000314EA <AmiBlitz3.ab2@12631>   TST.w varmode
000314EE <AmiBlitz3.ab2@12632>   BEQ.w writelong
000314F2 <AmiBlitz3.ab2@12633>   BCLR #$10,D1
000314F8 <AmiBlitz3.ab2@12636>   ADDQ.l #1,destpointer
00031500 <AmiBlitz3.ab2@12637>   BCLR #$0,destpointer+3
00031506 <AmiBlitz3.ab2@12638>   MOVEA.l destpointer,A4
0003150C <AmiBlitz3.ab2@12639>   CMPA.l destbufferend,A4
00031510 <AmiBlitz3.ab2@12640>    BCC.w writeword__overa
00031512 <AmiBlitz3.ab2@12641>   MOVE.l D1,(A4)+
00031518 <AmiBlitz3.ab2@12644>   MOVE.l A4,destpointer
0003151C <AmiBlitz3.ab2@12645>   CMPA.l bigpc(PC),A4
00031520 <AmiBlitz3.ab2@12646>    BHI.w writeword__nbp
00031522 <AmiBlitz3.ab2@12647> RTS
0003152A <AmiBlitz3.ab2@12650>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
00031530 <AmiBlitz3.ab2@12651>   CLR.b fast
00031536 <AmiBlitz3.ab2@12652>   CLR.b fpu
0003153C <AmiBlitz3.ab2@12653>   CLR.b iee
0003153E <AmiBlitz3.ab2@12654>   ADDQ.w #4,A4
00031542 <AmiBlitz3.ab2@12655> BRA.w writeword__msa
00031548 <AmiBlitz3.ab2@12661>   ADDQ.l #1,destpointer
00031550 <AmiBlitz3.ab2@12662>   BCLR #$0,destpointer+3
00031556 <AmiBlitz3.ab2@12663>   MOVEA.l destpointer,A4
0003155C <AmiBlitz3.ab2@12664>   CMPA.l destbufferend,A4
00031560 <AmiBlitz3.ab2@12665>    BCC.w writeword__over
00031562 <AmiBlitz3.ab2@12666>   MOVE.w D1,(A4)+
00031568 <AmiBlitz3.ab2@12669>   MOVE.l A4,destpointer
0003156C <AmiBlitz3.ab2@12670>   CMPA.l bigpc(PC),A4
00031570 <AmiBlitz3.ab2@12671>    BHI.w writeword__nbp
00031572 <AmiBlitz3.ab2@12672> RTS
00031578 <AmiBlitz3.ab2@12675>   ADDQ.l #1,destpointer
00031580 <AmiBlitz3.ab2@12676>   BCLR #$0,destpointer+3
00031586 <AmiBlitz3.ab2@12677>   MOVEA.l destpointer,A4
0003158C <AmiBlitz3.ab2@12678>   CMPA.l destbufferend,A4
00031590 <AmiBlitz3.ab2@12679>    BCC.w writeword__over
00031592 <AmiBlitz3.ab2@12680>   MOVE.w D1,(A4)+
00031598 <AmiBlitz3.ab2@12681>   MOVE.l A4,destpointer
0003159C <AmiBlitz3.ab2@12682>   CMPA.l bigpc(PC),A4
000315A0 <AmiBlitz3.ab2@12683>    BHI.w writeword__nbp
000315A2 <AmiBlitz3.ab2@12684> RTS
000315A8 <AmiBlitz3.ab2@12687>   TST.w cfetchmode
000315AC <AmiBlitz3.ab2@12688>   BNE.w writeword__nbp2
000315B2 <AmiBlitz3.ab2@12689>   MOVE.l A4,bigpc
000315B4 <AmiBlitz3.ab2@12692> RTS
000315BC <AmiBlitz3.ab2@12695>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
000315BE <AmiBlitz3.ab2@12696>   ADDQ.w #2,A4
000315C4 <AmiBlitz3.ab2@12697>   CLR.b fast
000315CA <AmiBlitz3.ab2@12698>   CLR.b fpu
000315D0 <AmiBlitz3.ab2@12699>   CLR.b iee
000315D4 <AmiBlitz3.ab2@12700> BRA.w writeword__ms
000315DA <AmiBlitz3.ab2@12704>   MOVEA.l destpointer,A4
000315E0 <AmiBlitz3.ab2@12705>   CMPA.l destbufferend,A4
000315E4 <AmiBlitz3.ab2@12706>    BCC.w writebyte__over
000315E6 <AmiBlitz3.ab2@12707>   MOVE.b D1,(A4)+
000315EC <AmiBlitz3.ab2@12710>   MOVE.l A4,destpointer
000315F0 <AmiBlitz3.ab2@12711>   CMPA.l bigpc(PC),A4
000315F4 <AmiBlitz3.ab2@12712>    BHI.w writebyte__nbp
000315F6 <AmiBlitz3.ab2@12713> RTS
000315FC <AmiBlitz3.ab2@12716>   TST.w cfetchmode
00031600 <AmiBlitz3.ab2@12717>    BNE.w writebyte__nbp2
00031606 <AmiBlitz3.ab2@12718>   MOVE.l A4,bigpc
00031608 <AmiBlitz3.ab2@12721> RTS
00031610 <AmiBlitz3.ab2@12724>   MOVE.w #-1,dontwrite
00031612 <AmiBlitz3.ab2@12725>   ADDQ.w #1,A4
00031618 <AmiBlitz3.ab2@12726>   CLR.b fast
0003161E <AmiBlitz3.ab2@12727>   CLR.b fpu
00031624 <AmiBlitz3.ab2@12728>   CLR.b iee
00031628 <AmiBlitz3.ab2@12729> BRA.w writebyte__ms
0003162C <AmiBlitz3.ab2@12732> bigpc:   Ds.l 1
0003162E <AmiBlitz3.ab2@12736>   MOVE.w (A0)+,D1
00031632 <AmiBlitz3.ab2@12737>   BSR.w writeword
00031634 <AmiBlitz3.ab2@12740>     CMPA.l A1,A0
00031638 <AmiBlitz3.ab2@12741>     BCC.w pokecode__done
0003163A <AmiBlitz3.ab2@12742>       MOVE.w (A0)+,D1
0003163E <AmiBlitz3.ab2@12743>       BSR.w writeword
00031642 <AmiBlitz3.ab2@12744> BRA.w pokecode__loop
00031644 <AmiBlitz3.ab2@12747> RTS
00031646 <AmiBlitz3.ab2@12750>   MOVE.w (A0)+,D1
0003164A <AmiBlitz3.ab2@12751>   BSR.w writeword
0003164C <AmiBlitz3.ab2@12752>   CMPA.l A1,A0
00031650 <AmiBlitz3.ab2@12753>   BCS.w pokecode2
00031652 <AmiBlitz3.ab2@12754> RTS
00031658 <AmiBlitz3.ab2@12760>   TST.b iniffcommand
0003165C <AmiBlitz3.ab2@12761>   BEQ 'l1
00031660 <AmiBlitz3.ab2@12762>     MOVE.w #$4880,D1
00031666 <AmiBlitz3.ab2@12763>     OR.w regnum,D1
0003166A <AmiBlitz3.ab2@12764>     BSR writeword
0003166C <AmiBlitz3.ab2@12767> RTS
00031670 <AmiBlitz3.ab2@12770>   BSR.w convert_byte_to_word
00031676 <AmiBlitz3.ab2@12773>   TST.b iee
0003167A <AmiBlitz3.ab2@12774>   BEQ 'old
0003167E <AmiBlitz3.ab2@12775>   CMP.b #5,d2
00031682 <AmiBlitz3.ab2@12776>   BEQ wtof
00031686 <AmiBlitz3.ab2@12779>   MOVE.w #$48C0,D1
0003168C <AmiBlitz3.ab2@12780>   OR.w regnum,D1
00031690 <AmiBlitz3.ab2@12781> BRA.w writeword
00031692 <AmiBlitz3.ab2@12784>   MOVEQ #0,d0
00031698 <AmiBlitz3.ab2@12785>   MOVE.w regnum,d0
0003169A <AmiBlitz3.ab2@12786>   ASL.l #7,d0
000316A0 <AmiBlitz3.ab2@12787>   MOVE.l #$f2005000,d1
000316A2 <AmiBlitz3.ab2@12788>   OR.l d0,d1
000316A4 <AmiBlitz3.ab2@12789>   ASL.l #1,d0
000316A6 <AmiBlitz3.ab2@12790>   ASL.l #8,d0
000316A8 <AmiBlitz3.ab2@12791>   OR.l d0,d1
000316AC <AmiBlitz3.ab2@12792> BRA writelong
000316B0 <AmiBlitz3.ab2@12796>   BSR.w convert_byte_to_word
000316B4 <AmiBlitz3.ab2@12799>   MOVE.w #$4840,D1
000316BA <AmiBlitz3.ab2@12800>   OR.w regnum,D1
000316BE <AmiBlitz3.ab2@12801>    BSR.w writeword
000316C2 <AmiBlitz3.ab2@12802>   MOVE.w #$4240,D1
000316C8 <AmiBlitz3.ab2@12803>   OR.w regnum,D1
000316CC <AmiBlitz3.ab2@12804> BRA.w writeword
000316D0 <AmiBlitz3.ab2@12808>   CMP.w #$ffdc,d1
000316D4 <AmiBlitz3.ab2@12809>   BNE 'negfpu
000316D6 <AmiBlitz3.ab2@12810>   MOVEQ #0,d0
000316DC <AmiBlitz3.ab2@12811>   MOVE.w regnum,d0
000316DE <AmiBlitz3.ab2@12812>   ASL.l #7,d0
000316E4 <AmiBlitz3.ab2@12813>   MOVE.l #$f2004000,d1
000316E6 <AmiBlitz3.ab2@12814>   OR.l d0,d1
000316E8 <AmiBlitz3.ab2@12815>   ASL.l #1,d0
000316EA <AmiBlitz3.ab2@12816>   ASL.l #8,d0
000316EC <AmiBlitz3.ab2@12817>   OR.l d0,d1
000316F0 <AmiBlitz3.ab2@12818> BRA writelong
000316F2 <AmiBlitz3.ab2@12822>   MOVEQ #0,d1
000316F8 <AmiBlitz3.ab2@12823>   MOVE.w regnum,d1                                         ;fpu neg
000316FA <AmiBlitz3.ab2@12824>   ASL.l #7,d1
00031700 <AmiBlitz3.ab2@12825>   OR.l #$f200001a,d1
00031702 <AmiBlitz3.ab2@12826>   MOVE.l d0,-(a7)
00031704 <AmiBlitz3.ab2@12827>   MOVEQ #0,d0
0003170A <AmiBlitz3.ab2@12828>   MOVE.w regnum,d0
0003170C <AmiBlitz3.ab2@12829>   ASL.l #8,d0
0003170E <AmiBlitz3.ab2@12830>   ASL.l #2,d0
00031710 <AmiBlitz3.ab2@12831>   OR.l d0,d1
00031712 <AmiBlitz3.ab2@12832>   MOVE.l (a7)+,d0
00031716 <AmiBlitz3.ab2@12833> BRA writelong
0003171C <AmiBlitz3.ab2@12836>    TST.b iee
00031720 <AmiBlitz3.ab2@12837>    BNE wtof
00031724 <AmiBlitz3.ab2@12838>    BSR.w convert_byte_to_long
00031728 <AmiBlitz3.ab2@12841>    MOVE.w #$FFDC,D1
0003172E <AmiBlitz3.ab2@12844>    TST.b iee
00031732 <AmiBlitz3.ab2@12845>    BNE ltof
00031738 <AmiBlitz3.ab2@12846>    MOVE.w D1,libjsr+2
0003173C <AmiBlitz3.ab2@12847>    BSR.w JL_0_AD40
0003173E <AmiBlitz3.ab2@12848>   MOVE.l D4,D1
00031742 <AmiBlitz3.ab2@12849>    BSR.w JL_0_AD38
00031746 <AmiBlitz3.ab2@12850>   MOVE.w #$C900,D1
0003174A <AmiBlitz3.ab2@12851>    BSR.w Atokejsr
0003174E <AmiBlitz3.ab2@12852>    BSR.w JL_0_A352
00031754 <AmiBlitz3.ab2@12853>   MOVE.l libjsr,D1
00031758 <AmiBlitz3.ab2@12854>    BSR.w writelong
0003175C <AmiBlitz3.ab2@12855>    BSR.w JL_0_A36E
0003175E <AmiBlitz3.ab2@12856>   MOVE.l D5,D1
00031762 <AmiBlitz3.ab2@12857> BRA.w JL_0_AD38
00031764 <AmiBlitz3.ab2@12860> RTS
00031768 <AmiBlitz3.ab2@12863>   MOVE.w #$C317,D1
0003176E <AmiBlitz3.ab2@12864>   TST.b typecheck
00031772 <AmiBlitz3.ab2@12865>   BEQ 'l1
00031778 <AmiBlitz3.ab2@12866>    TST.b notypecheck
0003177C <AmiBlitz3.ab2@12867>    BNE 'l1
00031782 <AmiBlitz3.ab2@12868>    TST.l lasttoken
00031786 <AmiBlitz3.ab2@12869>    BEQ typeerror
0003178C <AmiBlitz3.ab2@12873>   TST.b debugmode
00031790 <AmiBlitz3.ab2@12874>    BEQ.w JL_0_9696
00031798 <AmiBlitz3.ab2@12875>   BTST #$7,overflowcheck
0003179C <AmiBlitz3.ab2@12876>    BEQ.w JL_0_9696
000317A2 <AmiBlitz3.ab2@12877>   TST.w cfetchmode
000317A6 <AmiBlitz3.ab2@12878>    BNE.w JL_0_9696
000317AC <AmiBlitz3.ab2@12879>   TST.w regnum
000317B0 <AmiBlitz3.ab2@12880>    BEQ.w JL_0_968A
000317B2 <AmiBlitz3.ab2@12881>   MOVE.w D1,-(A7)
000317B6 <AmiBlitz3.ab2@12882>   MOVE.w JL_0_9698(PC),D1
000317BA <AmiBlitz3.ab2@12883>    BSR.w writeword
000317C0 <AmiBlitz3.ab2@12884>   MOVE.w regnum,D1
000317C4 <AmiBlitz3.ab2@12885>   OR.w L_0_969C(PC),D1
000317C8 <AmiBlitz3.ab2@12886>    BSR.w writeword
000317CA <AmiBlitz3.ab2@12887>   MOVE.w (A7)+,D1
000317CE <AmiBlitz3.ab2@12888>    BSR.w JL_0_968A
000317D2 <AmiBlitz3.ab2@12889>   MOVE.w L_0_969A(PC),D1
000317D6 <AmiBlitz3.ab2@12890> BRA.w writeword
000317DA <AmiBlitz3.ab2@12894>   MOVEM.l D0-D7/A0-A6,-(A7)
000317DE <AmiBlitz3.ab2@12895>    BSR.w Atokejsr
000317E2 <AmiBlitz3.ab2@12896>   MOVEM.l (A7)+,D0-D7/A0-A6
000317E4 <AmiBlitz3.ab2@12899> RTS
000317E6 <AmiBlitz3.ab2@12902>   MOVE.l D0,-(A7)
000317E8 <AmiBlitz3.ab2@12905>   MOVE.l (A7)+,D0
000317EA <AmiBlitz3.ab2@12908>   MOVE.l D0,D0
000317EE <AmiBlitz3.ab2@12911>   BSR.w convert_word_to_long
000317F4 <AmiBlitz3.ab2@12912>   TST.b iee
000317F8 <AmiBlitz3.ab2@12913>   BEQ 'old
000317FC <AmiBlitz3.ab2@12914>   CMP.b #5,d2
00031800 <AmiBlitz3.ab2@12915>   BNE 'old
00031802 <AmiBlitz3.ab2@12916> RTS
00031806 <AmiBlitz3.ab2@12919> BRA.w JL_0_9600
0003180A <AmiBlitz3.ab2@12923>   MOVE.w #$C316,D1
00031810 <AmiBlitz3.ab2@12924>   TST.b typecheck
00031814 <AmiBlitz3.ab2@12925>   BEQ 'l1
0003181A <AmiBlitz3.ab2@12926>   TST.b peekaddrsize
0003181E <AmiBlitz3.ab2@12927>   BNE 'l1
00031824 <AmiBlitz3.ab2@12928>   TST.b notypecheck
00031828 <AmiBlitz3.ab2@12929>   BNE 'l1
0003182E <AmiBlitz3.ab2@12930>   TST.l lasttoken
00031832 <AmiBlitz3.ab2@12931>   BEQ typeerror
00031836 <AmiBlitz3.ab2@12934> BRA.w JL_0_963A
0003183A <AmiBlitz3.ab2@12938>   MOVE.w #$C318,D1
00031840 <AmiBlitz3.ab2@12939>   TST.b typecheck
00031844 <AmiBlitz3.ab2@12940>   BEQ 'l1
0003184A <AmiBlitz3.ab2@12941>   TST.b peekaddrsize
0003184E <AmiBlitz3.ab2@12942>   BNE 'l1
00031854 <AmiBlitz3.ab2@12943>   TST.b notypecheck
00031858 <AmiBlitz3.ab2@12944>   BNE 'l1
0003185E <AmiBlitz3.ab2@12945>   TST.l lasttoken
00031862 <AmiBlitz3.ab2@12946>   BEQ typeerror
00031866 <AmiBlitz3.ab2@12949> BRA.w JL_0_963A
0003186A <AmiBlitz3.ab2@12953>   MOVE.w #$C318,D1
00031870 <AmiBlitz3.ab2@12954>   TST.b typecheck
00031874 <AmiBlitz3.ab2@12955>   BEQ 'l1
0003187A <AmiBlitz3.ab2@12956>   TST.b notypecheck
0003187E <AmiBlitz3.ab2@12957>   BNE 'l1
00031884 <AmiBlitz3.ab2@12958>   TST.l lasttoken
00031888 <AmiBlitz3.ab2@12959>   BEQ typeerror
0003188C <AmiBlitz3.ab2@12962>   BSR.w JL_0_963A
00031890 <AmiBlitz3.ab2@12963> BRA.w convert_word_to_quick
00031894 <AmiBlitz3.ab2@12967> BRA.w JL_0_9600
00031896 <AmiBlitz3.ab2@12971> RTS
0003189A <AmiBlitz3.ab2@12975>   MOVE.w #$C319,D1
000318A0 <AmiBlitz3.ab2@12976>   TST.b typecheck
000318A4 <AmiBlitz3.ab2@12977>   BEQ 'l1
000318AA <AmiBlitz3.ab2@12978>   TST.b notypecheck
000318AE <AmiBlitz3.ab2@12979>   BNE 'l1
000318B4 <AmiBlitz3.ab2@12980>   TST.l lasttoken
000318B8 <AmiBlitz3.ab2@12981>   BEQ typeerror
000318BC <AmiBlitz3.ab2@12984>   BSR.w JL_0_963A
000318C0 <AmiBlitz3.ab2@12987>   MOVE.w #$4240,D1
000318C6 <AmiBlitz3.ab2@12988>   OR.w regnum,D1
000318CA <AmiBlitz3.ab2@12989>   BSR.w writeword
000318CE <AmiBlitz3.ab2@12990>   MOVE.w #$4840,D1
000318D4 <AmiBlitz3.ab2@12991>   OR.w regnum,D1
000318D8 <AmiBlitz3.ab2@12992> BRA.w writeword
000318DC <AmiBlitz3.ab2@12996> BRA.w JL_0_96D0
000318E0 <AmiBlitz3.ab2@13000>   BSR.w JL_0_96D0
000318E4 <AmiBlitz3.ab2@13001> BRA.w convert_word_to_long
000318E6 <AmiBlitz3.ab2@13006>   MOVEQ #0,d0
000318EC <AmiBlitz3.ab2@13007>   MOVE.w regnum,d0
000318EE <AmiBlitz3.ab2@13008>   ASL.l #7,d0
000318F4 <AmiBlitz3.ab2@13009>   MOVE.l #$f2004000,d1
000318F6 <AmiBlitz3.ab2@13010>   OR.l d0,d1
000318F8 <AmiBlitz3.ab2@13011>   ASL.l #1,d0
000318FA <AmiBlitz3.ab2@13012>   ASL.l #8,d0
000318FC <AmiBlitz3.ab2@13013>   OR.l d0,d1
00031900 <AmiBlitz3.ab2@13014>   BSR writelong
00031906 <AmiBlitz3.ab2@13015>   MOVE.w regnum,d0
00031908 <AmiBlitz3.ab2@13016>   ASL.l #7,d0
0003190E <AmiBlitz3.ab2@13017>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
00031910 <AmiBlitz3.ab2@13018>   OR.w d0,d1
00031914 <AmiBlitz3.ab2@13019>   BSR writelong
0003191A <AmiBlitz3.ab2@13020>   MOVE.l #$37800000,d1
0003191E <AmiBlitz3.ab2@13021>   BSR writelong
00031920 <AmiBlitz3.ab2@13022> RTS
00031926 <AmiBlitz3.ab2@13026>   TST.b iee
0003192A <AmiBlitz3.ab2@13027>   BNE qtof
0003192E <AmiBlitz3.ab2@13028>   MOVE.w #$D300,D1
00031930 <AmiBlitz3.ab2@13031>   MOVE.w D1,-(A7)
00031934 <AmiBlitz3.ab2@13032>    BSR.w JL_0_AD40
00031936 <AmiBlitz3.ab2@13033>   MOVE.l D4,D1
0003193A <AmiBlitz3.ab2@13034>    BSR.w JL_0_AD38
0003193E <AmiBlitz3.ab2@13035>    BSR.w JL_0_A352
00031940 <AmiBlitz3.ab2@13036>   MOVE.w (A7)+,D1
00031944 <AmiBlitz3.ab2@13037>    BSR.w Atokejsr
00031948 <AmiBlitz3.ab2@13038>    BSR.w JL_0_A36E
0003194A <AmiBlitz3.ab2@13039>   MOVE.l D5,D1
0003194E <AmiBlitz3.ab2@13040> BRA.w JL_0_AD38
00031950 <AmiBlitz3.ab2@13044> RTS
00031956 <AmiBlitz3.ab2@13047>   TST.b typecheck
0003195A <AmiBlitz3.ab2@13048>   BEQ 'l1
00031960 <AmiBlitz3.ab2@13049>   TST.b notypecheck
00031964 <AmiBlitz3.ab2@13050>   BNE 'l1
0003196A <AmiBlitz3.ab2@13051>   TST.l lasttoken
0003196E <AmiBlitz3.ab2@13052>   BEQ typeerror
00031974 <AmiBlitz3.ab2@13055>   TST.b iee
00031978 <AmiBlitz3.ab2@13056>   BNE ftol
0003197C <AmiBlitz3.ab2@13057>   MOVE.w #$C31A,D1
00031980 <AmiBlitz3.ab2@13058>   BSR.w JL_0_963A
00031984 <AmiBlitz3.ab2@13059>   BSR.w JL_0_974A
00031988 <AmiBlitz3.ab2@13060> BRA.w convert_long_to_byte
0003198A <AmiBlitz3.ab2@13064> RTS
00031990 <AmiBlitz3.ab2@13067>   TST.b typecheck
00031994 <AmiBlitz3.ab2@13068>   BEQ 'l1
0003199A <AmiBlitz3.ab2@13069>   TST.b notypecheck
0003199E <AmiBlitz3.ab2@13070>   BNE 'l1
000319A4 <AmiBlitz3.ab2@13071>   TST.l lasttoken
000319A8 <AmiBlitz3.ab2@13072>   BEQ typeerror
000319AE <AmiBlitz3.ab2@13075>   TST.b iee
000319B2 <AmiBlitz3.ab2@13076>   BNE ftol
000319B6 <AmiBlitz3.ab2@13077>   MOVE.w #$C31B,D1
000319BA <AmiBlitz3.ab2@13078>   BSR.w JL_0_963A
000319BE <AmiBlitz3.ab2@13079>   BSR.w JL_0_974A
000319C2 <AmiBlitz3.ab2@13080> BRA.w convert_long_to_word
000319C4 <AmiBlitz3.ab2@13084> RTS
000319CA <AmiBlitz3.ab2@13087>   TST.b iee
000319CE <AmiBlitz3.ab2@13088>   BNE ftol
000319D2 <AmiBlitz3.ab2@13089>   MOVE.w #$C31C,D1
000319D6 <AmiBlitz3.ab2@13090>   BSR.w JL_0_963A
000319DA <AmiBlitz3.ab2@13093>   MOVE.w #$FFE2,D1
000319DE <AmiBlitz3.ab2@13094> BRA.w JL_0_9604
000319E0 <AmiBlitz3.ab2@13097>   MOVE.l d0,-(a7)
000319E2 <AmiBlitz3.ab2@13098>   MOVEQ #0,d0
000319E8 <AmiBlitz3.ab2@13099>   MOVE.w regnum,d0
000319EA <AmiBlitz3.ab2@13100>   ASL.l #7,d0
000319F0 <AmiBlitz3.ab2@13101>   MOVE.l #$f2006000,d1
000319F2 <AmiBlitz3.ab2@13102>   OR.l d0,d1
000319F4 <AmiBlitz3.ab2@13103>   ASL.l #1,d0
000319F6 <AmiBlitz3.ab2@13104>   ASL.l #8,d0
000319F8 <AmiBlitz3.ab2@13105>   OR.l d0,d1
000319FA <AmiBlitz3.ab2@13106>   MOVE.l (a7)+,d0
000319FE <AmiBlitz3.ab2@13107> BRA writelong
00031A00 <AmiBlitz3.ab2@13111>   MOVE.l d0,-(a7)
00031A02 <AmiBlitz3.ab2@13112>   MOVEQ #0,d0
00031A08 <AmiBlitz3.ab2@13113>   MOVE.l #$f23c4023,d1
00031A0E <AmiBlitz3.ab2@13114>   MOVE.w regnum,d0
00031A10 <AmiBlitz3.ab2@13115>   ASL.l #7,d0
00031A12 <AmiBlitz3.ab2@13116>   OR.l d0,d1
00031A16 <AmiBlitz3.ab2@13117>   BSR writelong
00031A1C <AmiBlitz3.ab2@13118>   MOVE.l #$00010000,d1
00031A20 <AmiBlitz3.ab2@13119>   BSR writelong
00031A26 <AmiBlitz3.ab2@13120>   MOVE.w regnum,d0
00031A28 <AmiBlitz3.ab2@13121>   ASL.l #7,d0
00031A2E <AmiBlitz3.ab2@13122>   MOVE.l #$f2006000,d1
00031A30 <AmiBlitz3.ab2@13123>   OR.l d0,d1
00031A32 <AmiBlitz3.ab2@13124>   ASL.l #1,d0
00031A34 <AmiBlitz3.ab2@13125>   ASL.l #8,d0
00031A36 <AmiBlitz3.ab2@13126>   OR.l d0,d1
00031A3A <AmiBlitz3.ab2@13127>   BSR writelong
00031A3C <AmiBlitz3.ab2@13128>   MOVE.l (a7)+,d0
00031A3E <AmiBlitz3.ab2@13129> RTS
00031A40 <AmiBlitz3.ab2@13133> RTS
00031A46 <AmiBlitz3.ab2@13137>   TST.b iee
00031A4A <AmiBlitz3.ab2@13138>   BNE ftoq
00031A4E <AmiBlitz3.ab2@13139>   MOVE.w #$C31B,D1
00031A52 <AmiBlitz3.ab2@13140>   BSR.w JL_0_963A
00031A56 <AmiBlitz3.ab2@13141>   MOVE.w #$D301,D1
00031A5A <AmiBlitz3.ab2@13142> BRA.w JL_0_96FC
00031A60 <AmiBlitz3.ab2@13147>    TST.l lasttoken
00031A64 <AmiBlitz3.ab2@13148>    BNE 'l1
00031A68 <AmiBlitz3.ab2@13149> BRA error_convert_types
00031A70 <AmiBlitz3.ab2@13152>   CMP.b #2,optistring
00031A74 <AmiBlitz3.ab2@13153>   BEQ JLrts
00031A7A <AmiBlitz3.ab2@13154>   MOVE.w stol,D1
00031A7E <AmiBlitz3.ab2@13155>   BSR.w writeword
00031A86 <AmiBlitz3.ab2@13156>   CMPI.w #$2,sbgot
00031A8A <AmiBlitz3.ab2@13157>   BCS.w sbtolong
00031A8E <AmiBlitz3.ab2@13158>   MOVE.w ceos(PC),D1
00031A92 <AmiBlitz3.ab2@13159>   BSR.w writeword
00031A98 <AmiBlitz3.ab2@13162>   MOVE.w regnum,D1
00031A9A <AmiBlitz3.ab2@13163>   LSL.w #8,D1
00031A9C <AmiBlitz3.ab2@13164>   LSL.w #1,D1
00031AA4 <AmiBlitz3.ab2@13165>   CMPI.w #$2,sbgot
00031AA8 <AmiBlitz3.ab2@13166>   BCS.w JL_0_98E8
00031AAE <AmiBlitz3.ab2@13167>   MOVE.w a2offset,D3
00031AB4 <AmiBlitz3.ab2@13168>   SUB.w thisstuse,D3
00031AB8 <AmiBlitz3.ab2@13169>   CMP.w #$6,D3
00031ABC <AmiBlitz3.ab2@13170>   BNE.w JL_0_98D4b
00031AC2 <AmiBlitz3.ab2@13171>   OR.w movestst2,D1
00031AC6 <AmiBlitz3.ab2@13172>   BSR.w writeword
00031ACC <AmiBlitz3.ab2@13173>   LEA movestst2+2,A0
00031AD2 <AmiBlitz3.ab2@13174>   LEA movestst2f,A1
00031AD6 <AmiBlitz3.ab2@13175> BRA.w pokecode2
00031ADC <AmiBlitz3.ab2@13179>   OR.w movea7dn,D1
00031AE0 <AmiBlitz3.ab2@13180>   BSR.w writeword
00031AE6 <AmiBlitz3.ab2@13181>   MOVE.l #0,D1
00031AEA <AmiBlitz3.ab2@13182> BRA.w writeword
00031AF0 <AmiBlitz3.ab2@13186>   ADDQ.w #1,fuckpos
00031AF4 <AmiBlitz3.ab2@13187>   BSR.w writeconvertcode
00031AFA <AmiBlitz3.ab2@13188>   SUBQ.w #1,fuckpos
00031AFC <AmiBlitz3.ab2@13190> RTS
00031AFE <AmiBlitz3.ab2@13194>   MOVE.w D3,D1
00031B00 <AmiBlitz3.ab2@13195>   SUBQ.w #1,D1
00031B04 <AmiBlitz3.ab2@13196>   MULU #$7,D1
00031B06 <AmiBlitz3.ab2@13197>   ADD.w D2,D1
00031B08 <AmiBlitz3.ab2@13198>   SUBQ.w #1,D1
00031B0A <AmiBlitz3.ab2@13199>   LSL.w #2,D1
00031B10 <AmiBlitz3.ab2@13200>   LEA convtable,A0
00031B14 <AmiBlitz3.ab2@13201>   MOVE.l $0(A0,D1.W),D1
00031B18 <AmiBlitz3.ab2@13202>   BEQ.w JL_0_97A2
00031B1A <AmiBlitz3.ab2@13203>     MOVEA.l D1,A0
00031B1E <AmiBlitz3.ab2@13204>     CMP.b #$ff,d3
00031B22 <AmiBlitz3.ab2@13205>     BEQ JL_0_97A2
00031B24 <AmiBlitz3.ab2@13206> JMP (A0)
00031B26 <AmiBlitz3.ab2@13209> RTS
00031B2A <AmiBlitz3.ab2@13212> usedfrom:  Ds.l 1
00031B2E <AmiBlitz3.ab2@13219>   CMP.w #"\",D0
00031B32 <AmiBlitz3.ab2@13220>   BNE.w JL_0_97C2
00031B36 <AmiBlitz3.ab2@13221>     CMP.b #"\",(a5)
00031B3A <AmiBlitz3.ab2@13222>     BNE 'first
00031B40 <AmiBlitz3.ab2@13223>       MOVE.l A5,usedfrom
00031B46 <AmiBlitz3.ab2@13224>       LEA path2,A5
00031B4A <AmiBlitz3.ab2@13225> BRA 'g1
00031B4C <AmiBlitz3.ab2@13228>     SUBQ.w #1,A5
00031B52 <AmiBlitz3.ab2@13229>   MOVE.l A5,usedfrom
00031B58 <AmiBlitz3.ab2@13230>   LEA usedpath,A5                                          ;read path
00031B5C <AmiBlitz3.ab2@13233>   BSR.w get1bytemain
00031B62 <AmiBlitz3.ab2@13236>   CLR.w flagmask
00031B66 <AmiBlitz3.ab2@13237>   CMP.w #$2A,D0
00031B6A <AmiBlitz3.ab2@13238>    BNE.w JL_0_983A
00031B72 <AmiBlitz3.ab2@13239>   MOVE.w #$0001,flagmask
00031B76 <AmiBlitz3.ab2@13241>    BSR.w getparameter2
00031B7A <AmiBlitz3.ab2@13244>    BEQ.w syntaxerr
00031B7E <AmiBlitz3.ab2@13245>   CMP.w #$28,D0
00031B82 <AmiBlitz3.ab2@13246>    BEQ.w JL_0_9830
00031B86 <AmiBlitz3.ab2@13247>   CMP.w #$2E,D0
00031B8A <AmiBlitz3.ab2@13248>    BEQ.w JL_0_980C
00031B8E <AmiBlitz3.ab2@13249>   CMP.w #$24,D0
00031B92 <AmiBlitz3.ab2@13250>    BNE.w JL_0_9838
00031B9A <AmiBlitz3.ab2@13251>   ORI.w #$8,flagmask
00031B9E <AmiBlitz3.ab2@13252>    BSR.w storeloc
00031BA2 <AmiBlitz3.ab2@13253>    BSR.w get1bytemain
00031BA6 <AmiBlitz3.ab2@13254> BRA.w JL_0_9822
00031BAA <AmiBlitz3.ab2@13258>   BSR.w storeloc
00031BAC <AmiBlitz3.ab2@13259>   MOVE.w D2,-(A7)
00031BB2 <AmiBlitz3.ab2@13260>   LEA namebuff2,A1
00031BB6 <AmiBlitz3.ab2@13261>    BSR.w makename3
00031BBA <AmiBlitz3.ab2@13262>    BEQ.w syntaxerr
00031BBC <AmiBlitz3.ab2@13263>   MOVE.w (A7)+,D2
00031BBE <AmiBlitz3.ab2@13266>    MOVE.w D0,D1
00031BC2 <AmiBlitz3.ab2@13267>    BSR.w resloc
00031BC6 <AmiBlitz3.ab2@13268>    CMP.w #$28,D1
00031BCA <AmiBlitz3.ab2@13269>    BNE.w JL_0_9838
00031BD2 <AmiBlitz3.ab2@13272>   ORI.w #$2,flagmask
00031BD4 <AmiBlitz3.ab2@13275> RTS
00031BD8 <AmiBlitz3.ab2@13279>   CMP.w #$40,D0
00031BDC <AmiBlitz3.ab2@13280>    BNE.w JL_0_984E
00031BE4 <AmiBlitz3.ab2@13281>   MOVE.w #$0005,flagmask
00031BE8 <AmiBlitz3.ab2@13282> BRA.w JL_0_97D8
00031BEC <AmiBlitz3.ab2@13286>   BSR.w makename2
00031BF0 <AmiBlitz3.ab2@13287> BRA.w JL_0_97DC
00031BF4 <AmiBlitz3.ab2@13291>   MOVE.w #$FED3,D1
00031BF8 <AmiBlitz3.ab2@13292>    BSR.w uselib
00031BFE <AmiBlitz3.ab2@13293>   LEA pusha3,A0
00031C04 <AmiBlitz3.ab2@13294>   LEA pusha3f,A1
00031C08 <AmiBlitz3.ab2@13295> BRA.w pokecode
00031C0C <AmiBlitz3.ab2@13299>   MOVE.w #$FED3,D1
00031C10 <AmiBlitz3.ab2@13300>    BSR.w uselib
00031C16 <AmiBlitz3.ab2@13301>   LEA pulla3,A0
00031C1C <AmiBlitz3.ab2@13302>   LEA pulla3f,A1
00031C20 <AmiBlitz3.ab2@13303> BRA.w pokecode
00031C22 <AmiBlitz3.ab2@13307> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
00031C2A <AmiBlitz3.ab2@13312>     CMP.b #2,optistring
00031C2E <AmiBlitz3.ab2@13313>    BEQ 'l10
00031C32 <AmiBlitz3.ab2@13314>    MOVE.w ceos(PC),D1
00031C36 <AmiBlitz3.ab2@13315>    BSR.w writeword                                         ;clr.b (a3)
00031C3C <AmiBlitz3.ab2@13318>   MOVE.w regnum,D1
00031C3E <AmiBlitz3.ab2@13319>   LSL.w #8,D1
00031C40 <AmiBlitz3.ab2@13320>   LSL.w #1,D1
00031C48 <AmiBlitz3.ab2@13321>   CMPI.w #$2,sbgot
00031C4C <AmiBlitz3.ab2@13322>    BCS.w JL_0_98E8
00031C52 <AmiBlitz3.ab2@13323>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
00031C58 <AmiBlitz3.ab2@13324>   SUB.w thisstuse,D3
00031C5C <AmiBlitz3.ab2@13325>   CMP.w #$6,D3
00031C60 <AmiBlitz3.ab2@13326>    BNE.w JL_0_98D4
00031C66 <AmiBlitz3.ab2@13327>   OR.w movestst2,D1
00031C6A <AmiBlitz3.ab2@13328>    BSR.w writeword
00031C70 <AmiBlitz3.ab2@13329>   LEA movestst2+2,A0
00031C76 <AmiBlitz3.ab2@13330>   LEA movestst2f,A1
00031C7A <AmiBlitz3.ab2@13331> BRA.w pokecode2
00031C80 <AmiBlitz3.ab2@13335>    OR.w movea7dn,D1
00031C84 <AmiBlitz3.ab2@13336>    BSR.w writeword
00031C8A <AmiBlitz3.ab2@13337>   MOVE.l movea7dn+2,D1
00031C8E <AmiBlitz3.ab2@13349>   BSR writelong
00031C96 <AmiBlitz3.ab2@13352>    CMP.w #6,regnum
00031C9A <AmiBlitz3.ab2@13353>    BEQ 'l1
00031CA0 <AmiBlitz3.ab2@13354>    TST.w stackpar
00031CA4 <AmiBlitz3.ab2@13355>    BNE 'l1
00031CAA <AmiBlitz3.ab2@13356>    TST.b funcparloop
00031CAE <AmiBlitz3.ab2@13357>    BEQ 'l1
00031CB4 <AmiBlitz3.ab2@13358>    MOVE.l #$48780000,d1
00031CB8 <AmiBlitz3.ab2@13359>    BSR writelong
00031CBA <AmiBlitz3.ab2@13363> RTS
00031CBC <AmiBlitz3.ab2@13368>      MOVE.l d1,-(a7)
00031CC4 <AmiBlitz3.ab2@13369>      CMP.w #6,regnum
00031CC8 <AmiBlitz3.ab2@13370>      BEQ 'l1
00031CCE <AmiBlitz3.ab2@13371>      TST.w stackpar
00031CD2 <AmiBlitz3.ab2@13372>      BNE 'l1
00031CD8 <AmiBlitz3.ab2@13373>      TST.b funcparloop
00031CDC <AmiBlitz3.ab2@13374>      BEQ 'l1
00031CE2 <AmiBlitz3.ab2@13375>      MOVE.l #$48780000,d1
00031CE6 <AmiBlitz3.ab2@13376>      BSR writelong
00031CE8 <AmiBlitz3.ab2@13379>      MOVE.l (a7)+,d1
00031CEE <AmiBlitz3.ab2@13381>    OR.w movestdn,D1
00031CF2 <AmiBlitz3.ab2@13382>    BSR.w writeword
00031CF6 <AmiBlitz3.ab2@13383>   MOVE.w #$FED3,D1
00031CFA <AmiBlitz3.ab2@13384>    BSR.w uselib
00031CFE <AmiBlitz3.ab2@13385>   MOVE.w $A(A1),D1
00031D02 <AmiBlitz3.ab2@13386> BRA.w writeword
00031D04 <AmiBlitz3.ab2@13389> unknown:    Ds.w 1
00031D0A <AmiBlitz3.ab2@13392> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
00031D0E <AmiBlitz3.ab2@13393> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
00031D14 <AmiBlitz3.ab2@13394>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
00031D1A <AmiBlitz3.ab2@13400>   TST.b debugmode
00031D1E <AmiBlitz3.ab2@13401>   BEQ.w sharreval
00031D22 <AmiBlitz3.ab2@13402>  BSR.w arreval
00031D26 <AmiBlitz3.ab2@13405>   MOVE.w somecode(PC),D1
00031D2C <AmiBlitz3.ab2@13406>   OR.w regnum,D1
00031D30 <AmiBlitz3.ab2@13407>    BSR.w writeword
00031D32 <AmiBlitz3.ab2@13408>   MOVEQ.l #$01,D1
00031D34 <AmiBlitz3.ab2@13409>   SWAP D1
00031D38 <AmiBlitz3.ab2@13410>    BSR.w writelong
00031D3C <AmiBlitz3.ab2@13411>   MOVE.l somecode2(PC),D1
00031D40 <AmiBlitz3.ab2@13412>    BSR.w writelong
00031D44 <AmiBlitz3.ab2@13413>   MOVE.w #$C309,D1
00031D48 <AmiBlitz3.ab2@13414> BRA.w Atokejsr
00031D4A <AmiBlitz3.ab2@13418>   MOVEQ.l #$02,D2
00031D4C <AmiBlitz3.ab2@13419>   MOVEQ.l #$00,D1
00031D4E <AmiBlitz3.ab2@13420>   MOVEQ.l #$00,D3
00031D52 <AmiBlitz3.ab2@13421> BRA.w maineval2
00031D54 <AmiBlitz3.ab2@13425>   MOVEQ.l #$03,D2
00031D56 <AmiBlitz3.ab2@13426>   MOVEQ.l #$00,D1
00031D58 <AmiBlitz3.ab2@13427>   MOVEQ.l #$00,D3
00031D5C <AmiBlitz3.ab2@13428> BRA.w maineval2
00031D66 <AmiBlitz3.ab2@13433>   MOVE.w oldqflag,instringon
00031D6C <AmiBlitz3.ab2@13434>   MOVEA.l lastsourcepos,A5
00031D6E <AmiBlitz3.ab2@13435>   MOVEQ.l #-$01,D1
00031D70 <AmiBlitz3.ab2@13436>   MOVEQ.l #-$01,D3
00031D74 <AmiBlitz3.ab2@13437> BRA.w peval
00031D7E <AmiBlitz3.ab2@13442>   MOVE.w oldqflag,instringon
00031D84 <AmiBlitz3.ab2@13443>   MOVEA.l lastsourcepos,A5
00031D86 <AmiBlitz3.ab2@13446>   MOVEQ.l #-$01,D1
00031D88 <AmiBlitz3.ab2@13447>   MOVEQ.l #$00,D3
00031D8C <AmiBlitz3.ab2@13448> BRA.w maineval
00031D96 <AmiBlitz3.ab2@13453>   MOVE.w oldqflag,instringon
00031D9C <AmiBlitz3.ab2@13454>   MOVEA.l lastsourcepos,A5
00031D9E <AmiBlitz3.ab2@13455>   MOVEQ.l #$00,D1
00031DA0 <AmiBlitz3.ab2@13456>   MOVEQ.l #-$01,D3
00031DA4 <AmiBlitz3.ab2@13457> BRA.w maineval
00031DA6 <AmiBlitz3.ab2@13461>   MOVEQ.l #$01,D1
00031DA8 <AmiBlitz3.ab2@13462>   MOVEQ.l #-$01,D3
00031DAC <AmiBlitz3.ab2@13463> BRA.w maineval
00031DB6 <AmiBlitz3.ab2@13468>   MOVE.w oldqflag,instringon
00031DBC <AmiBlitz3.ab2@13469>   MOVEA.l lastsourcepos,A5
00031DBE <AmiBlitz3.ab2@13472>   MOVEQ.l #$00,D1                                        ;no push
00031DC0 <AmiBlitz3.ab2@13473>   MOVEQ.l #$00,D3
00031DC8 <AmiBlitz3.ab2@13492>    CMPI.w #$6,regnum
00031DCC <AmiBlitz3.ab2@13493>    BCS.w maineval2
00031DCE <AmiBlitz3.ab2@13494>    MOVEQ #0,d1
00031DD4 <AmiBlitz3.ab2@13495>    MOVE.l destpointer,a4
00031DDA <AmiBlitz3.ab2@13497>    CMPA.l destbufferend,A4
00031DDE <AmiBlitz3.ab2@13498>    BCC.w maineval__l2
00031DE4 <AmiBlitz3.ab2@13500>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
00031DE8 <AmiBlitz3.ab2@13502>    BNE maineval__l2
00031DEC <AmiBlitz3.ab2@13506> BRA maineval__l1
00031DEE <AmiBlitz3.ab2@13509>   MOVEQ.l #-$01,D1
00031DF6 <AmiBlitz3.ab2@13512>   MOVE.w #$0006,regnum                                     ;write a func par To stack
00031DFC <AmiBlitz3.ab2@13515>   MOVE.w thisstuse,-(A7)
00031E06 <AmiBlitz3.ab2@13516>   MOVE.w a2offset,thisstuse
00031E0C <AmiBlitz3.ab2@13517>   MOVE.w stackpar,-(A7)
00031E12 <AmiBlitz3.ab2@13518>   MOVE.w D1,stackpar
00031E18 <AmiBlitz3.ab2@13519>   MOVE.w sbgot,-(A7)
00031E1E <AmiBlitz3.ab2@13520>   CLR.w sbgot
00031E22 <AmiBlitz3.ab2@13521>   MOVE.w unknown(PC),-(A7)
00031E28 <AmiBlitz3.ab2@13522>   MOVE.w D3,unknown
00031E2A <AmiBlitz3.ab2@13523>   MOVE.w D2,-(a7)
00031E30 <AmiBlitz3.ab2@13524>   MOVE.w d2,mode
00031E34 <AmiBlitz3.ab2@13525>    BSR.w eval3
00031E36 <AmiBlitz3.ab2@13526>   MOVE.w (a7)+,d3
00031E3A <AmiBlitz3.ab2@13527>    BEQ.w maineval__noconv
00031E3E <AmiBlitz3.ab2@13528>   MOVE.w unknown(PC),D1
00031E42 <AmiBlitz3.ab2@13529>    BNE.w maineval__noconv
00031E44 <AmiBlitz3.ab2@13530>   EXG.l D2,D3
00031E46 <AmiBlitz3.ab2@13531>    MOVE.l a2,-(a7)
00031E4C <AmiBlitz3.ab2@13532>    TST.b curtemplabel
00031E50 <AmiBlitz3.ab2@13533>    BEQ maineval2__l10
00031E56 <AmiBlitz3.ab2@13534>    MOVE.l asmbuff,a2
00031E5C <AmiBlitz3.ab2@13535>    CMP.w #$c,$8(a2)
00031E60 <AmiBlitz3.ab2@13536>    BEQ maineval2__l20
00031E66 <AmiBlitz3.ab2@13537>    CMP.w #$d,$8(a2)
00031E6A <AmiBlitz3.ab2@13538>    BEQ maineval2__l20
00031E6C <AmiBlitz3.ab2@13541>   CMP.w d2,d3
00031E70 <AmiBlitz3.ab2@13542>   BEQ maineval2__l20
00031E74 <AmiBlitz3.ab2@13543>   BSR.w writeconvertcode
00031E7A <AmiBlitz3.ab2@13544>   CLR.b doimmediate
00031E7C <AmiBlitz3.ab2@13547>   MOVE.l (a7)+,a2
00031E82 <AmiBlitz3.ab2@13550>   MOVE.w (A7)+,unknown
00031E88 <AmiBlitz3.ab2@13551>   MOVE.w stackpar,D1
00031E8C <AmiBlitz3.ab2@13552>    BEQ.w maineval__skipme
00031E90 <AmiBlitz3.ab2@13553>    BMI.w maineval__skipme
00031E96 <AmiBlitz3.ab2@13557>   MOVE.w regnum,D1
00031E98 <AmiBlitz3.ab2@13558>   LSL.w #8,D1
00031E9A <AmiBlitz3.ab2@13559>   LSL.w #1,D1
00031E9E <AmiBlitz3.ab2@13560>   CMP.w #$7,D2
00031EA2 <AmiBlitz3.ab2@13561>    BNE.w maineval__hi1
00031EAA <AmiBlitz3.ab2@13562>    CMP.b #2,optistring
00031EAE <AmiBlitz3.ab2@13563>    BEQ maineval__hi1a
00031EB0 <AmiBlitz3.ab2@13564>   MOVE.w D1,-(A7)
00031EB6 <AmiBlitz3.ab2@13565>   OR.w getstlen,D1
00031EBA <AmiBlitz3.ab2@13566>    BSR.w writeword
00031EBC <AmiBlitz3.ab2@13567>   MOVE.w (A7)+,D1
00031EC2 <AmiBlitz3.ab2@13570>   ADDQ.w #2,a2offset                                        ;lib mode to stack
00031EC6 <AmiBlitz3.ab2@13574>   MOVE.w #$3f3c,d1
00031ECA <AmiBlitz3.ab2@13575>    BSR.w writeword
00031ECC <AmiBlitz3.ab2@13579>   MOVE.w d2,d1
00031ED2 <AmiBlitz3.ab2@13580>   MOVE.w d1,libmode
00031ED6 <AmiBlitz3.ab2@13581>    BSR.w writeword
00031EDA <AmiBlitz3.ab2@13582>   CMP.w #$7,D2
00031EDE <AmiBlitz3.ab2@13583>    BNE.w maineval__skipme
00031EE4 <AmiBlitz3.ab2@13584>   MOVE.w putstlen,D1
00031EEA <AmiBlitz3.ab2@13585>   OR.w regnum,D1
00031EEE <AmiBlitz3.ab2@13586>    BSR.w writeword
00031EF2 <AmiBlitz3.ab2@13589>    CMP.w #$7,D2
00031EF6 <AmiBlitz3.ab2@13590>    BNE.w maineval__notst
00031EFE <AmiBlitz3.ab2@13601>    CMP.b #2,optistring
00031F02 <AmiBlitz3.ab2@13602>    BEQ maineval__skipme_l10
00031F08 <AmiBlitz3.ab2@13603>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
00031F0C <AmiBlitz3.ab2@13604>    BSR.w sbtolong
00031F10 <AmiBlitz3.ab2@13605> BRA.w maineval__notst2
00031F18 <AmiBlitz3.ab2@13609>     CMP.w #6,regnum
00031F1C <AmiBlitz3.ab2@13610>     BEQ maineval__skipme_l10_l1
00031F22 <AmiBlitz3.ab2@13611>     TST.b funcparloop
00031F26 <AmiBlitz3.ab2@13612>     BEQ maineval__skipme_l10_l1
00031F2C <AmiBlitz3.ab2@13613>     MOVE.l #$48780000,d1
00031F30 <AmiBlitz3.ab2@13614>     BSR writelong
00031F34 <AmiBlitz3.ab2@13617> BRA.w maineval__notst2
00031F3A <AmiBlitz3.ab2@13620>   ADDQ.w #2,a2offset
00031F3E <AmiBlitz3.ab2@13621> BRA maineval__skipme
00031F46 <AmiBlitz3.ab2@13624>   CMPI.w #$2,sbgot
00031F4A <AmiBlitz3.ab2@13625>    BCS.w maineval__notst2                                         ;correct stack
00031F4E <AmiBlitz3.ab2@13626>   MOVE.w ststfix(PC),D1
00031F52 <AmiBlitz3.ab2@13627>    BSR.w writeword
00031F58 <AmiBlitz3.ab2@13630>   MOVE.w (A7)+,sbgot
00031F5E <AmiBlitz3.ab2@13631>   MOVE.w stackpar,D1
00031F62 <AmiBlitz3.ab2@13632>    BPL.w maineval__skip
00031F66 <AmiBlitz3.ab2@13633>    CMP.b #7,d2
00031F6A <AmiBlitz3.ab2@13634>    BEQ maineval__notst2_l1
00031F70 <AmiBlitz3.ab2@13635>   TST.b funcparloop
00031F74 <AmiBlitz3.ab2@13636>   BEQ maineval__notst2_l1
00031F78 <AmiBlitz3.ab2@13637>   CMP.b #5,d2
00031F7C <AmiBlitz3.ab2@13638>   BNE maineval__notst2_skip
00031F82 <AmiBlitz3.ab2@13639>   TST.b fpu
00031F86 <AmiBlitz3.ab2@13640>   BEQ maineval__notst2_skip
00031F8C <AmiBlitz3.ab2@13641>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
00031F92 <AmiBlitz3.ab2@13642>   JSR writelong
00031F96 <AmiBlitz3.ab2@13645>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00031F9C <AmiBlitz3.ab2@13646>   ADD.w parnum,d1
00031FA2 <AmiBlitz3.ab2@13647>   JSR Atokejsr
00031FA8 <AmiBlitz3.ab2@13648>    TST.w dontwrite
00031FAC <AmiBlitz3.ab2@13649>    BNE maineval__notst2_l1
00031FB2 <AmiBlitz3.ab2@13650>    MOVE.l data1start,d1
00031FB8 <AmiBlitz3.ab2@13651>    MOVE.l destpointer,a4
00031FBC <AmiBlitz3.ab2@13652>    ADD.l d1,-4(a4)
00031FC2 <AmiBlitz3.ab2@13653>    MOVE.l destpointer,d1
00031FC4 <AmiBlitz3.ab2@13654>    SUBQ.l #4,d1
00031FCA <AmiBlitz3.ab2@13655>    SUB.l destbufferstart,d1
00031FCC <AmiBlitz3.ab2@13656>    MOVE.l d2,-(a7)
00031FCE <AmiBlitz3.ab2@13657>    MOVE.l d1,d2
00031FD4 <AmiBlitz3.ab2@13658>    JSR addhunkoffset
00031FD6 <AmiBlitz3.ab2@13659>    MOVE.l (a7)+,d2
00031FDA <AmiBlitz3.ab2@13660> BRA maineval__skip
00031FE0 <AmiBlitz3.ab2@13663>   ADDQ.w #2,a2offset
00031FE6 <AmiBlitz3.ab2@13664>   MOVE.w pushd0wd,D1
00031FEA <AmiBlitz3.ab2@13665>   CMP.w #$3,D2                                             ;write parameter to stack
00031FEE <AmiBlitz3.ab2@13666>    BCS.w maineval__ok
00031FF4 <AmiBlitz3.ab2@13667>   ADDQ.w #2,a2offset
00031FFA <AmiBlitz3.ab2@13668>   TST.b fpu
00031FFE <AmiBlitz3.ab2@13669>   BEQ maineval__notst2_nofpu
00032002 <AmiBlitz3.ab2@13670>   CMP.w #5,d2
00032006 <AmiBlitz3.ab2@13671>   BNE maineval__notst2_nofpu
00032008 <AmiBlitz3.ab2@13672>   MOVEQ #0,d1
0003200E <AmiBlitz3.ab2@13673>   MOVE.w regnum,d1
00032010 <AmiBlitz3.ab2@13674>   ASL.l #7,d1
00032016 <AmiBlitz3.ab2@13675>   OR.l #$f2276400,d1
0003201A <AmiBlitz3.ab2@13676>   BSR writelong
0003201E <AmiBlitz3.ab2@13677> BRA maineval__skip
00032024 <AmiBlitz3.ab2@13680>   MOVE.w pushd0l,D1
0003202A <AmiBlitz3.ab2@13683>    OR.w regnum,D1
0003202E <AmiBlitz3.ab2@13684>    BSR.w writeword                                         ;nat
00032034 <AmiBlitz3.ab2@13687>   MOVE.w (A7)+,stackpar
0003203A <AmiBlitz3.ab2@13688>   MOVE.w (A7)+,thisstuse
0003203C <AmiBlitz3.ab2@13689> RTS
0003203E <AmiBlitz3.ab2@13692> thisstuse: Ds.w 1
00032040 <AmiBlitz3.ab2@13695> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
00032042 <AmiBlitz3.ab2@13696> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
00032046 <AmiBlitz3.ab2@13701>   BSR.w eval4
00032050 <AmiBlitz3.ab2@13702>   SUBI.l #$12,forthsp
00032052 <AmiBlitz3.ab2@13703> RTS
00032054 <AmiBlitz3.ab2@13707>   MOVEQ.l #$01,D1
00032058 <AmiBlitz3.ab2@13709>       MOVEA.l precsp(PC),A1
0003205A <AmiBlitz3.ab2@13710>       MOVE.l A0,(A1)+
0003205C <AmiBlitz3.ab2@13711>       MOVE.w D1,(A1)+
00032062 <AmiBlitz3.ab2@13712>       MOVE.l A1,precsp
00032066 <AmiBlitz3.ab2@13713>    BSR.w calcloop
00032068 <AmiBlitz3.ab2@13714>   TST.w D1
0003206C <AmiBlitz3.ab2@13715>    BNE.w syntaxerr
00032072 <AmiBlitz3.ab2@13716>   SUBQ.l #6,precsp                                      ;pop the prec set up
00032074 <AmiBlitz3.ab2@13717> RTS
00032078 <AmiBlitz3.ab2@13721>   BSR.w JL_0_9C24
0003207C <AmiBlitz3.ab2@13724>   MOVEA.l precsp(PC),A1
0003207E <AmiBlitz3.ab2@13725>   CMP.w -(A1),D1
00032082 <AmiBlitz3.ab2@13726>    BHI.w JL_0_9B0A
00032084 <AmiBlitz3.ab2@13727> RTS
00032088 <AmiBlitz3.ab2@13732>   MOVEA.l precsp(PC),A1
0003208A <AmiBlitz3.ab2@13733>   MOVE.l A0,(A1)+
0003208C <AmiBlitz3.ab2@13734>   MOVE.w D1,(A1)+
00032092 <AmiBlitz3.ab2@13735>   MOVE.l A1,precsp
00032094 <AmiBlitz3.ab2@13736>   MOVE.w D2,-(A7)
0003209A <AmiBlitz3.ab2@13737>   ADDQ.w #1,regnum
0003209E <AmiBlitz3.ab2@13738>    BSR.w calcloop
000320A4 <AmiBlitz3.ab2@13739>   SUBQ.w #1,regnum
000320A6 <AmiBlitz3.ab2@13740>   MOVE.w (A7)+,D3
000320AA <AmiBlitz3.ab2@13741>   MOVEM.l D1/A0,-(A7)
000320AE <AmiBlitz3.ab2@13742>    BEQ.w JL_0_9B2E
000320B2 <AmiBlitz3.ab2@13743>    BSR.w JL_0_9770
000320B6 <AmiBlitz3.ab2@13746>   BSR.w popprec
000320BA <AmiBlitz3.ab2@13747>   BSR.w writecode
000320BE <AmiBlitz3.ab2@13748>   MOVEA.l forthsp(PC),A0
000320C2 <AmiBlitz3.ab2@13749>   MOVE.w -$2(A0),D1
000320C6 <AmiBlitz3.ab2@13750>   OR.w -$14(A0),D1
000320CA <AmiBlitz3.ab2@13751>   MOVE.w D1,-$14(A0)
000320CE <AmiBlitz3.ab2@13752>    BNE.w JL_0_9C0E
000320D4 <AmiBlitz3.ab2@13753>   MOVE.w dontwrite,D1
000320D8 <AmiBlitz3.ab2@13754>    BNE.w JL_0_9C0E
000320DC <AmiBlitz3.ab2@13755>    MOVEA.l -$24(A0),A0
00032218 <AmiBlitz3.ab2@13757>  !newcalc
0003221C <AmiBlitz3.ab2@13758>    BEQ 'l10
00032220 <AmiBlitz3.ab2@13759>    MOVEA.l forthsp(PC),A0
00032228 <AmiBlitz3.ab2@13760>    MOVE.w -$18(A0),lasta6
00032230 <AmiBlitz3.ab2@13761>    MOVE.l -$1C(A0),lasta6
00032234 <AmiBlitz3.ab2@13762>    MOVEA.l -$24(A0),A0
0003223A <AmiBlitz3.ab2@13763>    MOVE.l A0,destpointer
00032240 <AmiBlitz3.ab2@13764>    MOVEA.l _mathffpbase,A6
00032246 <AmiBlitz3.ab2@13765>    MOVEA.l ffplib,A1
0003224A <AmiBlitz3.ab2@13766> BRA cont1
0003224E <AmiBlitz3.ab2@13769>   MOVE.w #$2000,D1
00032254 <AmiBlitz3.ab2@13770>   OR.w regnum,D1
00032258 <AmiBlitz3.ab2@13771>    BSR.w writeword
0003225A <AmiBlitz3.ab2@13772>     MOVEQ #0,d1
00032260 <AmiBlitz3.ab2@13773>     MOVE.w regnum,D1
00032262 <AmiBlitz3.ab2@13774>     ASL.l #8,d1
00032264 <AmiBlitz3.ab2@13775>     ASL.l #2,d1
0003226A <AmiBlitz3.ab2@13776>     OR.l #$f2000000,d1
0003226E <AmiBlitz3.ab2@13777>     BSR writelong
00032272 <AmiBlitz3.ab2@13778>   MOVE.w #$4E75,D1
00032276 <AmiBlitz3.ab2@13779>    BSR.w writeword
0003227E <AmiBlitz3.ab2@13780>   MOVE.w -$18(A0),lasta6
00032286 <AmiBlitz3.ab2@13781>   MOVE.l -$1C(A0),lasta6
0003228A <AmiBlitz3.ab2@13782>   MOVEA.l -$24(A0),A0
00032290 <AmiBlitz3.ab2@13783>   MOVE.l A0,destpointer
00032294 <AmiBlitz3.ab2@13784>   MOVEM.l D2/A5,-(A7)
0003229A <AmiBlitz3.ab2@13785>   MOVEA.l _mathffpbase,A6
000322A0 <AmiBlitz3.ab2@13786>   MOVEA.l ffplib,A1
000322A4 <AmiBlitz3.ab2@13787>   MOVE.w $A(A1),D0
000322AA <AmiBlitz3.ab2@13788>   LEA _mathffpbase,A5
000322AC <AmiBlitz3.ab2@13789>   SUBA.w D0,A5
000322B2 <AmiBlitz3.ab2@13790>   JSR Aclearcache                                          ;neg +
000322B8 <AmiBlitz3.ab2@13791>   CLR.l load_var_addr
000322BE <AmiBlitz3.ab2@13792>   CLR.l imm_addr
000322C4 <AmiBlitz3.ab2@13793>   TST.w dontwrite
000322C8 <AmiBlitz3.ab2@13794>   BNE '1
000322CA <AmiBlitz3.ab2@13795>   JSR (A0)                                                 ;calc constant inline expression
000322CE <AmiBlitz3.ab2@13798>   MOVEM.l (A7)+,D2/A5
000322D4 <AmiBlitz3.ab2@13801>   MOVE.w regnum,D1
000322D6 <AmiBlitz3.ab2@13802>   LSL.w #8,D1
000322D8 <AmiBlitz3.ab2@13803>   LSL.w #1,D1
000322DC <AmiBlitz3.ab2@13804>   ORI.w #$203C,D1
000322E0 <AmiBlitz3.ab2@13805>   CMP.w #$3,D2
000322E4 <AmiBlitz3.ab2@13806>    BCC.w JL_0_9BCE
000322E8 <AmiBlitz3.ab2@13807>   ORI.w #$1000,D1
000322EC <AmiBlitz3.ab2@13808>    BSR.w writeword
000322EE <AmiBlitz3.ab2@13809>   MOVE.w D0,D1
000322F2 <AmiBlitz3.ab2@13810>    BSR.w writeword
000322F6 <AmiBlitz3.ab2@13811> BRA.w JL_0_9BD8
000322FC <AmiBlitz3.ab2@13815>   TST.b iee                                                ;fpu constant
00032300 <AmiBlitz3.ab2@13816>   BEQ 'l10
00032304 <AmiBlitz3.ab2@13817>   CMP.b #5,d2
00032308 <AmiBlitz3.ab2@13818>   BNE 'l10
0003230A <AmiBlitz3.ab2@13819>   MOVEQ #0,d1
00032310 <AmiBlitz3.ab2@13820>   MOVE.w regnum,D1
00032312 <AmiBlitz3.ab2@13821>   ASL.l #7,d1
00032318 <AmiBlitz3.ab2@13822>   OR.l #$f23c5400,d1
0003231C <AmiBlitz3.ab2@13823>   BSR writelong
0003231E <AmiBlitz3.ab2@13824>   SUBQ.l #8,a7
00032324 <AmiBlitz3.ab2@13825>   fmove.d fp0,0(a7)
00032326 <AmiBlitz3.ab2@13826>   MOVE.l (a7)+,d1
0003232A <AmiBlitz3.ab2@13827>   BSR writelong
0003232C <AmiBlitz3.ab2@13828>   MOVE.l (a7)+,d1
00032330 <AmiBlitz3.ab2@13829>   BSR writelong
00032334 <AmiBlitz3.ab2@13830> BRA JL_0_9BD8
00032338 <AmiBlitz3.ab2@13833>   BSR.w writeword
0003233A <AmiBlitz3.ab2@13834>   MOVE.l D0,D1
0003233E <AmiBlitz3.ab2@13835>   BSR.w writelong
00032342 <AmiBlitz3.ab2@13838>   MOVEA.l forthsp(PC),A0
00032346 <AmiBlitz3.ab2@13839>   MOVEA.l -$20(A0),A3
0003234C <AmiBlitz3.ab2@13840>   MOVEA.l hunkoffsetbase,A2
00032352 <AmiBlitz3.ab2@13841>   MOVE.l A3,hunkoffsetbase
00032358 <AmiBlitz3.ab2@13842>   MOVEA.l _execbase,A6
0003235A <AmiBlitz3.ab2@13845>   CMPA.l A3,A2
0003235E <AmiBlitz3.ab2@13846>   BEQ.w JL_0_9C0A
00032364 <AmiBlitz3.ab2@13847>   SUBQ.l #1,hunkoffsetcounter
00032366 <AmiBlitz3.ab2@13848>   MOVEA.l A2,A1
00032368 <AmiBlitz3.ab2@13849>   MOVEA.l (A2),A2
0003236A <AmiBlitz3.ab2@13850>   MOVEQ.l #$8,D0
00032370 <AmiBlitz3.ab2@13851>   MOVE.l mempool2,a0
00032374 <AmiBlitz3.ab2@13852>    JSR _FreePooled(A6)
00032378 <AmiBlitz3.ab2@13853> BRA.w JL_0_9BF0
0003237C <AmiBlitz3.ab2@13857>   MOVEA.l forthsp(PC),A0
00032380 <AmiBlitz3.ab2@13860>   LEA -$12(A0),A0
00032386 <AmiBlitz3.ab2@13861>   MOVE.l A0,forthsp
0003238A <AmiBlitz3.ab2@13862>   MOVEM.l (A7)+,D1/A0
0003238E <AmiBlitz3.ab2@13863>   BSR.w reget
00032392 <AmiBlitz3.ab2@13864> BRA.w JL_0_9AFE
00032396 <AmiBlitz3.ab2@13868>   BSR.w JL_0_A386
00032398 <AmiBlitz3.ab2@13869>   TST.w d0
0003239C <AmiBlitz3.ab2@13870>   BEQ JL_0_9C42
000323A0 <AmiBlitz3.ab2@13871>   CMP.b #",",d0
000323A4 <AmiBlitz3.ab2@13872>   BEQ JL_0_9C42
000323A8 <AmiBlitz3.ab2@13873>   CMP.b #"@",d0                                            ;expandline @@
000323AC <AmiBlitz3.ab2@13874>   BEQ JL_0_9C42
000323B2 <AmiBlitz3.ab2@13875>   LEA operators,A0
000323B4 <AmiBlitz3.ab2@13878>    TST.w (A0)
000323B8 <AmiBlitz3.ab2@13879>    BEQ.w JL_0_9C42
000323BA <AmiBlitz3.ab2@13880>   CMP.w (A0),D0
000323BE <AmiBlitz3.ab2@13881>    BEQ.w JL_0_9C46a
000323C2 <AmiBlitz3.ab2@13882>   LEA $20(A0),A0
000323C6 <AmiBlitz3.ab2@13883> BRA.w JL_0_9C2E
000323C8 <AmiBlitz3.ab2@13887>   MOVEQ.l #$00,D1
000323CA <AmiBlitz3.ab2@13888> RTS
000323CE <AmiBlitz3.ab2@13892>   CMP.w #$3C,D0
000323D2 <AmiBlitz3.ab2@13893>    BNE.w JL_0_9C70
000323D6 <AmiBlitz3.ab2@13894>    BSR.w get1bytemain
000323DA <AmiBlitz3.ab2@13895>   CMP.w #$3D,D0
000323DE <AmiBlitz3.ab2@13896>    BNE.w JL_0_9C64
000323E4 <AmiBlitz3.ab2@13897>   LEA ople,A0
000323E8 <AmiBlitz3.ab2@13898> BRA.w JL_0_9CCA
000323EC <AmiBlitz3.ab2@13902>   CMP.w #$3E,D0
000323F0 <AmiBlitz3.ab2@13903>    BNE.w JL_0_9C96
000323F4 <AmiBlitz3.ab2@13904> BRA.w JL_0_9CC4
000323F8 <AmiBlitz3.ab2@13908>   CMP.w #$3E,D0
000323FC <AmiBlitz3.ab2@13909>    BNE.w JL_0_9C9E
00032400 <AmiBlitz3.ab2@13910>    BSR.w get1bytemain
00032404 <AmiBlitz3.ab2@13911>   CMP.w #$3D,D0
00032408 <AmiBlitz3.ab2@13912>    BNE.w JL_0_9C8E
0003240E <AmiBlitz3.ab2@13913>   LEA opge,A0
00032412 <AmiBlitz3.ab2@13914> BRA.w JL_0_9CCA
00032416 <AmiBlitz3.ab2@13918>   CMP.w #$3C,D0
0003241A <AmiBlitz3.ab2@13919>    BEQ.w JL_0_9CC4
00032424 <AmiBlitz3.ab2@13923>     MOVE.w oldqflag,instringon
0003242A <AmiBlitz3.ab2@13924>     MOVEA.l lastsourcepos,A5
0003242E <AmiBlitz3.ab2@13925> BRA.w JL_0_9CCA
00032432 <AmiBlitz3.ab2@13929>   CMP.w #$3D,D0
00032436 <AmiBlitz3.ab2@13930>    BNE.w JL_0_9CCA
0003243A <AmiBlitz3.ab2@13931>    BSR.w get1bytemain
0003243E <AmiBlitz3.ab2@13932>   CMP.w #$3E,D0
00032442 <AmiBlitz3.ab2@13933>    BNE.w JL_0_9CBC
00032448 <AmiBlitz3.ab2@13934>   LEA opge,A0
0003244C <AmiBlitz3.ab2@13935> BRA.w JL_0_9CCA
00032450 <AmiBlitz3.ab2@13939>   CMP.w #$3C,D0
00032454 <AmiBlitz3.ab2@13940>   BNE.w JL_0_9C96
0003245A <AmiBlitz3.ab2@13943>   LEA opne,A0
0003245E <AmiBlitz3.ab2@13946>   MOVE.w $1E(A0),D1
00032460 <AmiBlitz3.ab2@13947> RTS
00032462 <AmiBlitz3.ab2@13954>   MOVE.w d2,d1
00032464 <AmiBlitz3.ab2@13955>   SUBQ.w #1,D1
00032468 <AmiBlitz3.ab2@13956>    BMI.w illoperr
0003246A <AmiBlitz3.ab2@13957>   LSL.w #2,D1
0003246E <AmiBlitz3.ab2@13958>   MOVE.l $2(A0,D1.W),D1
00032472 <AmiBlitz3.ab2@13959>    BEQ.w illoperr
00032474 <AmiBlitz3.ab2@13960>   MOVEA.l D1,A0
00032476 <AmiBlitz3.ab2@13963> JMP (A0)
0003247A <AmiBlitz3.ab2@13979>   MOVEA.l precsp(PC),A1
00032480 <AmiBlitz3.ab2@13980>   CMPA.l #precstackf,A1
00032484 <AmiBlitz3.ab2@13981>    BCC.w pserr
00032486 <AmiBlitz3.ab2@13982>   MOVE.w -(A1),D1
00032488 <AmiBlitz3.ab2@13983>   MOVEA.l -(A1),A0
0003248E <AmiBlitz3.ab2@13984>   MOVE.l A1,precsp
00032490 <AmiBlitz3.ab2@13985> RTS
00032494 <AmiBlitz3.ab2@13988> precsp:      Dc.l precstack
00032590 <AmiBlitz3.ab2@13989> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
00032614 <AmiBlitz3.ab2@13990>              Ds.l 33
00032616 <AmiBlitz3.ab2@13996> mseq:  SEQ D0
00032618 <AmiBlitz3.ab2@13997> msne:    SNE D0
0003261A <AmiBlitz3.ab2@13998> mslt:    SLT D0
0003261C <AmiBlitz3.ab2@13999> msle:    SLE D0
0003261E <AmiBlitz3.ab2@14000> msgt:    SGT D0
00032620 <AmiBlitz3.ab2@14001> msge:    SGE D0
00032622 <AmiBlitz3.ab2@14003> cmp0:    CMP.b D0,D0
00032624 <AmiBlitz3.ab2@14004> cmp1:    CMP.w D0,D0
00032626 <AmiBlitz3.ab2@14005> cmp2:    CMP.l D0,D0
0003262A <AmiBlitz3.ab2@14009>   MOVE.w cmp0(PC),D1
0003262E <AmiBlitz3.ab2@14010> BRA.w doeqcmp2                                            ;writecompare
00032632 <AmiBlitz3.ab2@14014>   MOVE.w cmp0(PC),D1
00032636 <AmiBlitz3.ab2@14015> BRA.w donecmp2
0003263A <AmiBlitz3.ab2@14019>   MOVE.w cmp0(PC),D1
0003263E <AmiBlitz3.ab2@14020> BRA.w doltcmp2
00032642 <AmiBlitz3.ab2@14024>   MOVE.w cmp0(PC),D1
00032646 <AmiBlitz3.ab2@14025> BRA.w dolecmp2
0003264A <AmiBlitz3.ab2@14029>   MOVE.w cmp0(PC),D1
0003264E <AmiBlitz3.ab2@14030> BRA.w dogtcmp2
00032652 <AmiBlitz3.ab2@14035>   MOVE.w cmp0(PC),D1
00032656 <AmiBlitz3.ab2@14036> BRA.w dogecmp2
0003265A <AmiBlitz3.ab2@14040>   MOVE.w cmp1(PC),D1
0003265E <AmiBlitz3.ab2@14041> BRA.w doeqcmp2
00032662 <AmiBlitz3.ab2@14045>   MOVE.w cmp1(PC),D1
00032666 <AmiBlitz3.ab2@14046> BRA.w donecmp2
0003266A <AmiBlitz3.ab2@14050>   MOVE.w cmp1(PC),D1
0003266E <AmiBlitz3.ab2@14051> BRA.w doltcmp2
00032672 <AmiBlitz3.ab2@14055>   MOVE.w cmp1(PC),D1
00032676 <AmiBlitz3.ab2@14056> BRA.w dolecmp2
0003267A <AmiBlitz3.ab2@14060>   MOVE.w cmp1(PC),D1
0003267E <AmiBlitz3.ab2@14061> BRA.w dogtcmp2
00032682 <AmiBlitz3.ab2@14066>   MOVE.w cmp1(PC),D1
00032686 <AmiBlitz3.ab2@14067> BRA.w dogecmp2
0003268A <AmiBlitz3.ab2@14071>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0003268E <AmiBlitz3.ab2@14072> BRA doeqcmp2
00032692 <AmiBlitz3.ab2@14075>   MOVE.w cmp2(PC),D1
00032696 <AmiBlitz3.ab2@14076> BRA donecmp2
0003269A <AmiBlitz3.ab2@14080>   MOVE.w cmp2(PC),D1
0003269E <AmiBlitz3.ab2@14081> BRA.w doltcmp2
000326A2 <AmiBlitz3.ab2@14085>   MOVE.w cmp2(PC),D1
000326A6 <AmiBlitz3.ab2@14086> BRA.w dolecmp2
000326AA <AmiBlitz3.ab2@14090>   MOVE.w cmp2(PC),D1
000326AE <AmiBlitz3.ab2@14091> BRA.w dogtcmp2
000326B2 <AmiBlitz3.ab2@14095>   MOVE.w cmp2(PC),D1
000326B6 <AmiBlitz3.ab2@14096> BRA.w dogecmp2
000326B8 <AmiBlitz3.ab2@14099> cfregat:  Ds.w 1
000326BE <AmiBlitz3.ab2@14103>   MOVE.w D1,libjsr+2
000326C2 <AmiBlitz3.ab2@14104>    BSR.w JL_0_AD40
000326C4 <AmiBlitz3.ab2@14105>   MOVE.l D4,D1
000326C8 <AmiBlitz3.ab2@14106>    BSR.w JL_0_AD38
000326CC <AmiBlitz3.ab2@14107>   MOVE.w #$C900,D1
000326D0 <AmiBlitz3.ab2@14108>    BSR.w Atokejsr
000326D4 <AmiBlitz3.ab2@14109>    BSR.w JL_0_A352
000326DA <AmiBlitz3.ab2@14110>   MOVE.l libjsr,D1
000326DE <AmiBlitz3.ab2@14111>    BSR.w writelong
000326E8 <AmiBlitz3.ab2@14112>   MOVE.w regnum,cfregat
000326EE <AmiBlitz3.ab2@14113>   CLR.w regnum
000326F0 <AmiBlitz3.ab2@14114> RTS
000326FA <AmiBlitz3.ab2@14118>   MOVE.w cfregat,regnum
000326FE <AmiBlitz3.ab2@14119>    BSR.w JL_0_A36E
00032700 <AmiBlitz3.ab2@14120>   MOVE.l D5,D1
00032704 <AmiBlitz3.ab2@14121> BRA.w JL_0_AD38
00032706 <AmiBlitz3.ab2@14125>    MOVEQ.l #-$2A,D1
0003270C <AmiBlitz3.ab2@14126>    TST.b fpu
00032710 <AmiBlitz3.ab2@14127>    BEQ do_equal_float__nofpu
00032712 <AmiBlitz3.ab2@14128>    MOVEQ #0,d1
00032718 <AmiBlitz3.ab2@14129>    MOVE.w regnum,d1
0003271A <AmiBlitz3.ab2@14130>    MOVE.l d1,d2
0003271C <AmiBlitz3.ab2@14131>    ASL.l #7,d1
0003271E <AmiBlitz3.ab2@14132>    ADDQ  #1,d2
00032720 <AmiBlitz3.ab2@14133>    ASL.l #8,d2
00032722 <AmiBlitz3.ab2@14134>    ASL.l #2,d2
00032724 <AmiBlitz3.ab2@14135>    OR.l d2,d1
0003272A <AmiBlitz3.ab2@14136>    OR.l #$f2000038,d1
00032730 <AmiBlitz3.ab2@14137>    JSR writelong
00032734 <AmiBlitz3.ab2@14138>    MOVE.w #$f240,d1
0003273A <AmiBlitz3.ab2@14139>    OR.w regnum,d1
0003273E <AmiBlitz3.ab2@14140>    BSR writeword
00032740 <AmiBlitz3.ab2@14141>    MOVEQ.l #1,d2
00032744 <AmiBlitz3.ab2@14142>    MOVE.w #1,d1                                            ;fpu comp fseq
00032748 <AmiBlitz3.ab2@14143>    BSR writeword
0003274A <AmiBlitz3.ab2@14144> RTS
0003274E <AmiBlitz3.ab2@14147>    BSR.w docflib
00032752 <AmiBlitz3.ab2@14148>    BSR.w doeqcmp
00032756 <AmiBlitz3.ab2@14149> BRA.w docflib2
00032758 <AmiBlitz3.ab2@14153>   MOVEQ.l #-$2A,D1
0003275E <AmiBlitz3.ab2@14154>   TST.b fpu
00032762 <AmiBlitz3.ab2@14155>    BEQ do_not_equal_float__nofpu
00032764 <AmiBlitz3.ab2@14156>    MOVEQ #0,d1
0003276A <AmiBlitz3.ab2@14157>    MOVE.w regnum,d1
0003276C <AmiBlitz3.ab2@14158>    MOVE.l d1,d2
0003276E <AmiBlitz3.ab2@14159>    ASL.l #7,d1
00032770 <AmiBlitz3.ab2@14160>    ADDQ  #1,d2
00032772 <AmiBlitz3.ab2@14161>    ASL.l #8,d2
00032774 <AmiBlitz3.ab2@14162>    ASL.l #2,d2
00032776 <AmiBlitz3.ab2@14163>    OR.l d2,d1
0003277C <AmiBlitz3.ab2@14164>    OR.l #$f2000038,d1
00032782 <AmiBlitz3.ab2@14165>    JSR writelong
00032786 <AmiBlitz3.ab2@14166>    MOVE.w #$f240,d1
0003278C <AmiBlitz3.ab2@14167>    OR.w regnum,d1
00032790 <AmiBlitz3.ab2@14168>    BSR writeword
00032796 <AmiBlitz3.ab2@14169>    MOVE.l #1,d2
0003279A <AmiBlitz3.ab2@14170>    MOVE.w #$e,d1                                           ;fpu comp fsne
0003279E <AmiBlitz3.ab2@14171>    BSR writeword
000327A0 <AmiBlitz3.ab2@14172> RTS
000327A4 <AmiBlitz3.ab2@14175>    BSR.w docflib
000327A8 <AmiBlitz3.ab2@14176>    BSR.w donecmp
000327AC <AmiBlitz3.ab2@14177> BRA.w docflib2
000327AE <AmiBlitz3.ab2@14181>   MOVEQ.l #-$2A,D1
000327B4 <AmiBlitz3.ab2@14182>     TST.b fpu
000327B8 <AmiBlitz3.ab2@14183>    BEQ do_littler_float__nofpu
000327BA <AmiBlitz3.ab2@14184>    MOVEQ #0,d1
000327C0 <AmiBlitz3.ab2@14185>    MOVE.w regnum,d1
000327C2 <AmiBlitz3.ab2@14186>    MOVE.l d1,d2
000327C4 <AmiBlitz3.ab2@14187>    ASL.l #7,d1
000327C6 <AmiBlitz3.ab2@14188>    ADDQ  #1,d2
000327C8 <AmiBlitz3.ab2@14189>    ASL.l #8,d2
000327CA <AmiBlitz3.ab2@14190>    ASL.l #2,d2
000327CC <AmiBlitz3.ab2@14191>    OR.l d2,d1
000327D2 <AmiBlitz3.ab2@14192>    OR.l #$f2000038,d1
000327D8 <AmiBlitz3.ab2@14193>    JSR writelong
000327DC <AmiBlitz3.ab2@14194>    MOVE.w #$f240,d1
000327E2 <AmiBlitz3.ab2@14195>    OR.w regnum,d1
000327E6 <AmiBlitz3.ab2@14196>    BSR writeword
000327EC <AmiBlitz3.ab2@14197>    MOVE.l #$1,d2
000327F0 <AmiBlitz3.ab2@14198>    MOVE.w #$14,d1                                          ;fpu comp fslt
000327F4 <AmiBlitz3.ab2@14199>    BSR writeword
000327F6 <AmiBlitz3.ab2@14200> RTS
000327FA <AmiBlitz3.ab2@14203>    BSR.w docflib
000327FE <AmiBlitz3.ab2@14204>    BSR.w doltcmp
00032802 <AmiBlitz3.ab2@14205> BRA.w docflib2
00032804 <AmiBlitz3.ab2@14209>   MOVEQ.l #-$2A,D1
0003280A <AmiBlitz3.ab2@14210>   TST.b fpu
0003280E <AmiBlitz3.ab2@14211>    BEQ do_littler_equal_float__nofpu
00032810 <AmiBlitz3.ab2@14212>    MOVEQ #0,d1
00032816 <AmiBlitz3.ab2@14213>    MOVE.w regnum,d1
00032818 <AmiBlitz3.ab2@14214>    MOVE.l d1,d2
0003281A <AmiBlitz3.ab2@14215>    ASL.l #7,d1
0003281C <AmiBlitz3.ab2@14216>    ADDQ  #1,d2
0003281E <AmiBlitz3.ab2@14217>    ASL.l #8,d2
00032820 <AmiBlitz3.ab2@14218>    ASL.l #2,d2
00032822 <AmiBlitz3.ab2@14219>    OR.l d2,d1
00032828 <AmiBlitz3.ab2@14220>    OR.l #$f2000038,d1
0003282E <AmiBlitz3.ab2@14221>    JSR writelong
00032832 <AmiBlitz3.ab2@14222>    MOVE.w #$f240,d1
00032838 <AmiBlitz3.ab2@14223>    OR.w regnum,d1
0003283C <AmiBlitz3.ab2@14224>    BSR writeword
00032842 <AmiBlitz3.ab2@14225>    MOVE.l #1,d2
00032846 <AmiBlitz3.ab2@14226>    MOVE.w #$15,d1                                          ;fpu comp fsle
0003284A <AmiBlitz3.ab2@14227>    BSR writeword
0003284C <AmiBlitz3.ab2@14228> RTS
00032850 <AmiBlitz3.ab2@14231>    BSR.w docflib
00032854 <AmiBlitz3.ab2@14232>    BSR.w dolecmp
00032858 <AmiBlitz3.ab2@14233> BRA.w docflib2
0003285A <AmiBlitz3.ab2@14237>   MOVEQ.l #-$2A,D1
00032860 <AmiBlitz3.ab2@14238>    TST.b fpu
00032864 <AmiBlitz3.ab2@14239>    BEQ do_greater_float__nofpu
00032866 <AmiBlitz3.ab2@14240>     MOVEQ #0,d1
0003286C <AmiBlitz3.ab2@14241>    MOVE.w regnum,d1
0003286E <AmiBlitz3.ab2@14242>    MOVE.l d1,d2
00032870 <AmiBlitz3.ab2@14243>    ASL.l #7,d1
00032872 <AmiBlitz3.ab2@14244>    ADDQ  #1,d2
00032874 <AmiBlitz3.ab2@14245>    ASL.l #8,d2
00032876 <AmiBlitz3.ab2@14246>    ASL.l #2,d2
00032878 <AmiBlitz3.ab2@14247>    OR.l d2,d1
0003287E <AmiBlitz3.ab2@14248>    OR.l #$f2000038,d1
00032884 <AmiBlitz3.ab2@14249>    JSR writelong
00032888 <AmiBlitz3.ab2@14250>    MOVE.w #$f240,d1
0003288E <AmiBlitz3.ab2@14251>    OR.w regnum,d1
00032892 <AmiBlitz3.ab2@14252>    BSR writeword
00032898 <AmiBlitz3.ab2@14253>    MOVE.l #1,d2
0003289C <AmiBlitz3.ab2@14254>    MOVE.w #$12,d1                                          ;fpu comp fsgt
000328A0 <AmiBlitz3.ab2@14255>    BSR writeword
000328A2 <AmiBlitz3.ab2@14256> RTS
000328A6 <AmiBlitz3.ab2@14259>    BSR.w docflib
000328AA <AmiBlitz3.ab2@14260>    BSR.w dogtcmp
000328AE <AmiBlitz3.ab2@14261> BRA.w docflib2
000328B0 <AmiBlitz3.ab2@14265>   MOVEQ.l #-$2A,D1
000328B6 <AmiBlitz3.ab2@14266>  TST.b fpu
000328BA <AmiBlitz3.ab2@14267>    BEQ do_greater_equal_float__nofpu
000328BC <AmiBlitz3.ab2@14268>    MOVEQ #0,d1
000328C2 <AmiBlitz3.ab2@14269>    MOVE.w regnum,d1
000328C4 <AmiBlitz3.ab2@14270>    MOVE.l d1,d2
000328C6 <AmiBlitz3.ab2@14271>    ASL.l #7,d1
000328C8 <AmiBlitz3.ab2@14272>    ADDQ  #1,d2
000328CA <AmiBlitz3.ab2@14273>    ASL.l #8,d2
000328CC <AmiBlitz3.ab2@14274>    ASL.l #2,d2
000328CE <AmiBlitz3.ab2@14275>    OR.l d2,d1
000328D4 <AmiBlitz3.ab2@14276>    OR.l #$f2000038,d1
000328DA <AmiBlitz3.ab2@14277>    JSR writelong
000328DE <AmiBlitz3.ab2@14278>    MOVE.w #$f240,d1
000328E4 <AmiBlitz3.ab2@14279>    OR.w regnum,d1
000328E8 <AmiBlitz3.ab2@14280>    BSR writeword
000328EE <AmiBlitz3.ab2@14281>    MOVE.l #1,d2
000328F2 <AmiBlitz3.ab2@14282>    MOVE.w #$13,d1                                          ;fpu comp fsge
000328F6 <AmiBlitz3.ab2@14283>    BSR writeword
000328F8 <AmiBlitz3.ab2@14284> RTS
000328FC <AmiBlitz3.ab2@14287>    BSR.w docflib
00032900 <AmiBlitz3.ab2@14288>    BSR.w dogecmp
00032904 <AmiBlitz3.ab2@14289> BRA.w docflib2
0003290A <AmiBlitz3.ab2@14294>   MOVE.l #$CE00,D1
00032910 <AmiBlitz3.ab2@14295>    MOVE.l d1,lastinstruction
00032914 <AmiBlitz3.ab2@14296>    BSR.w Atokejsr
00032918 <AmiBlitz3.ab2@14297> BRA.w doeqcmp
0003291E <AmiBlitz3.ab2@14301>   MOVE.l #$CE00,D1
00032924 <AmiBlitz3.ab2@14302>    MOVE.l d1,lastinstruction
00032928 <AmiBlitz3.ab2@14303>    BSR.w Atokejsr
0003292C <AmiBlitz3.ab2@14304> BRA.w donecmp
00032932 <AmiBlitz3.ab2@14308>   MOVE.l #$CE00,D1
00032938 <AmiBlitz3.ab2@14309>    MOVE.l d1,lastinstruction
0003293C <AmiBlitz3.ab2@14310>    BSR.w Atokejsr
00032940 <AmiBlitz3.ab2@14311> BRA.w doltcmp
00032946 <AmiBlitz3.ab2@14315>   MOVE.l #$CE00,D1
0003294C <AmiBlitz3.ab2@14316>    MOVE.l d1,lastinstruction
00032950 <AmiBlitz3.ab2@14317>    BSR.w Atokejsr
00032954 <AmiBlitz3.ab2@14318> BRA.w dolecmp
0003295A <AmiBlitz3.ab2@14322>   MOVE.l #$CE00,D1
00032960 <AmiBlitz3.ab2@14323>    MOVE.l d1,lastinstruction
00032964 <AmiBlitz3.ab2@14324>    BSR.w Atokejsr
00032968 <AmiBlitz3.ab2@14325> BRA.w dogtcmp
0003296E <AmiBlitz3.ab2@14329>   MOVE.l #$CE00,D1
00032974 <AmiBlitz3.ab2@14330>    MOVE.l d1,lastinstruction
00032978 <AmiBlitz3.ab2@14331>    BSR.w Atokejsr
0003297C <AmiBlitz3.ab2@14332> BRA.w dogecmp
00032982 <AmiBlitz3.ab2@14337>   TST.b fast                                               ;compare
00032986 <AmiBlitz3.ab2@14338>   BEQ cmpit__org
0003298C <AmiBlitz3.ab2@14342>   MOVE.l destpointer,a0
00032992 <AmiBlitz3.ab2@14343>   SUB.l imm_addr,a0
00032998 <AmiBlitz3.ab2@14344>   CMP.l #6,a0
0003299C <AmiBlitz3.ab2@14345>   BNE cmpit__l11
000329A2 <AmiBlitz3.ab2@14346>   MOVE.l imm_addr,a0
000329AA <AmiBlitz3.ab2@14347>   CMP.w #$223c,imm_addr
000329AE <AmiBlitz3.ab2@14348>   BNE cmpit__org
000329B4 <AmiBlitz3.ab2@14349>   ADD.w #$8e80,-6(a4)
000329BA <AmiBlitz3.ab2@14352>   CLR.l imm_addr
000329BC <AmiBlitz3.ab2@14353> RTS
000329C2 <AmiBlitz3.ab2@14356>   CMP.l #4,a0
000329C6 <AmiBlitz3.ab2@14357>   BNE cmpit__l10
000329CA <AmiBlitz3.ab2@14358>   CMP.b #2,d3
000329CE <AmiBlitz3.ab2@14359>   BNE cmpit__l11b
000329D4 <AmiBlitz3.ab2@14360>   ADD.w #$7e40,-4(a4)
000329D6 <AmiBlitz3.ab2@14361> RTS
000329DC <AmiBlitz3.ab2@14364>  ADD.w #$7e00,-4(a4)
000329DE <AmiBlitz3.ab2@14365> RTS
000329E4 <AmiBlitz3.ab2@14368>    MOVE.l destpointer,a0
000329EA <AmiBlitz3.ab2@14369>    SUB.l load_var_addr,a0
000329EE <AmiBlitz3.ab2@14370>    CMP.w #4,a0
000329F2 <AmiBlitz3.ab2@14371>    BNE cmpit__org
000329F6 <AmiBlitz3.ab2@14372>    CMP.b #3,d3
000329FA <AmiBlitz3.ab2@14373>    BCS cmpit__lv1
00032A00 <AmiBlitz3.ab2@14374>    CLR.l load_var_addr
00032A06 <AmiBlitz3.ab2@14375>    ADD.w #$9080-$200,-4(a4)
00032A08 <AmiBlitz3.ab2@14376> RTS
00032A0C <AmiBlitz3.ab2@14379>   CMP.b #2,d3
00032A10 <AmiBlitz3.ab2@14380>    BNE cmpit__org
00032A16 <AmiBlitz3.ab2@14381>    CLR.l load_var_addr
00032A1C <AmiBlitz3.ab2@14382>    ADD.w #$8040-$200,-4(a4)
00032A1E <AmiBlitz3.ab2@14383> RTS
00032A24 <AmiBlitz3.ab2@14386>   MOVE.w regnum,D3
00032A26 <AmiBlitz3.ab2@14387>   OR.w D3,D1
00032A28 <AmiBlitz3.ab2@14388>   LSL.w #8,D3
00032A2A <AmiBlitz3.ab2@14389>   LSL.w #1,D3
00032A2C <AmiBlitz3.ab2@14390>   OR.w D3,D1
00032A2E <AmiBlitz3.ab2@14391>   ADDQ.w #1,D1
00032A32 <AmiBlitz3.ab2@14392> BRA.w writeword
00032A36 <AmiBlitz3.ab2@14396>    BSR.w cmpit
00032A3A <AmiBlitz3.ab2@14399>    MOVE.w mseq(PC),D1
00032A3E <AmiBlitz3.ab2@14400> BRA.w cpoke
00032A42 <AmiBlitz3.ab2@14404>   BSR.w cmpit
00032A46 <AmiBlitz3.ab2@14407>   MOVE.w msne(PC),D1
00032A4A <AmiBlitz3.ab2@14408> BRA.w cpoke
00032A4E <AmiBlitz3.ab2@14412>   BSR.w cmpit
00032A52 <AmiBlitz3.ab2@14415>    MOVE.w mslt(PC),D1
00032A56 <AmiBlitz3.ab2@14416> BRA.w cpoke
00032A5A <AmiBlitz3.ab2@14420>    BSR.w cmpit
00032A5E <AmiBlitz3.ab2@14423>    MOVE.w msle(PC),D1
00032A62 <AmiBlitz3.ab2@14424> BRA.w cpoke
00032A66 <AmiBlitz3.ab2@14428>    BSR.w cmpit
00032A6A <AmiBlitz3.ab2@14431>    MOVE.w msgt(PC),D1
00032A6E <AmiBlitz3.ab2@14432> BRA.w cpoke
00032A72 <AmiBlitz3.ab2@14436>   BSR.w cmpit
00032A76 <AmiBlitz3.ab2@14439>    MOVE.w msge(PC),D1
00032A7C <AmiBlitz3.ab2@14442>    OR.w regnum,D1
00032A80 <AmiBlitz3.ab2@14443>    CMP.w #5,d2
00032A84 <AmiBlitz3.ab2@14444>    BNE cpoke__nod0
00032A88 <AmiBlitz3.ab2@14445>    CMP.w #5,d3
00032A8C <AmiBlitz3.ab2@14446>    BNE cpoke__nod0
00032A8E <AmiBlitz3.ab2@14447>    MOVE.l d1,-(a7)
00032A94 <AmiBlitz3.ab2@14448>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
00032A98 <AmiBlitz3.ab2@14449>    BSR writelong
00032A9A <AmiBlitz3.ab2@14450>    MOVE.l (a7)+,d1
00032A9E <AmiBlitz3.ab2@14453>    BSR.w writeword                                         ;writeseq
00032AA0 <AmiBlitz3.ab2@14454>    MOVEQ.l #1,d2
00032AA6 <AmiBlitz3.ab2@14455>    MOVE.l lasttoken,d1
00032AAC <AmiBlitz3.ab2@14456>     TST.b fast
00032AB0 <AmiBlitz3.ab2@14457>     BEQ.s cpoke__l11
00032AB6 <AmiBlitz3.ab2@14458>    CMP.l #$800b,d1
00032ABA <AmiBlitz3.ab2@14459>    BEQ cpoke__l10
00032ABE <AmiBlitz3.ab2@14462>   MOVE.w #$4880,D1                                         ;ext.w D regat
00032AC4 <AmiBlitz3.ab2@14463>   OR.w regnum,D1
00032AC8 <AmiBlitz3.ab2@14464>    BSR.w writeword                                         ;writeext.w
00032ACA <AmiBlitz3.ab2@14465>   MOVEQ.l #$02,D2                                          ;type now WORD!
00032ACC <AmiBlitz3.ab2@14468> RTS
00032AD0 <AmiBlitz3.ab2@14473>   MOVE.w #$D040,D1
00032AD2 <AmiBlitz3.ab2@14474>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
00032AD6 <AmiBlitz3.ab2@14475> BRA.w doplus2
00032ADA <AmiBlitz3.ab2@14479>   MOVE.w #$D040,D1
00032ADC <AmiBlitz3.ab2@14480>   MOVEQ.l #$03,D2                                          ;now a long
00032AE0 <AmiBlitz3.ab2@14481>    BSR.w doplus2
00032AE4 <AmiBlitz3.ab2@14482> BRA.w convert_word_to_long
00032AE8 <AmiBlitz3.ab2@14486>   MOVE.w #$D080,D1                                         ;writeaddlong
00032AEA <AmiBlitz3.ab2@14489>   MOVE.w d1,a1
00032AF0 <AmiBlitz3.ab2@14490>   TST.b fast
00032AF4 <AmiBlitz3.ab2@14491>   BEQ doplus2__l10
00032AF6 <AmiBlitz3.ab2@14495>   ASR.w #8,d1
00032AFA <AmiBlitz3.ab2@14496>   CMP.b #$90,d1
00032AFE <AmiBlitz3.ab2@14497>   BEQ doplus2__sub1
00032B02 <AmiBlitz3.ab2@14498>   CMP.b #$d0,d1
00032B06 <AmiBlitz3.ab2@14499>   BNE doplus2__l10
00032B0A <AmiBlitz3.ab2@14500>   CMP.b #3,d3
00032B0E <AmiBlitz3.ab2@14501>   BCS doplus2__lq10
00032B14 <AmiBlitz3.ab2@14502>   TST.b quickadd
00032B1A <AmiBlitz3.ab2@14506>    MOVE.l destpointer,a0
00032B20 <AmiBlitz3.ab2@14507>    CLR.b quickadd
00032B26 <AmiBlitz3.ab2@14508>    CLR.l load_var_addr
00032B2C <AmiBlitz3.ab2@14509>    SUB.l imm_addr,a0
00032B30 <AmiBlitz3.ab2@14510>    CMP.w #6,a0
00032B34 <AmiBlitz3.ab2@14511>    BEQ doplus2__li10
00032B38 <AmiBlitz3.ab2@14512>    CMP.w #4,a0
00032B3C <AmiBlitz3.ab2@14513>    BNE.s doplus2__li1
00032B42 <AmiBlitz3.ab2@14514>    CLR.l imm_addr
00032B48 <AmiBlitz3.ab2@14515>    ADD.w #$a040-$200,-4(a4)
00032B4A <AmiBlitz3.ab2@14516> RTS
00032B4C <AmiBlitz3.ab2@14519>    MOVE.l a4,a0
00032B52 <AmiBlitz3.ab2@14520>    SUB.l load_var_addr,a0
00032B58 <AmiBlitz3.ab2@14521>    CMP.l #$a,a0
00032B5C <AmiBlitz3.ab2@14522>    BNE doplus2__l10e
00032B62 <AmiBlitz3.ab2@14523>    CLR.l load_var_addr
00032B66 <AmiBlitz3.ab2@14524>    MOVE.w -$8(a4),d1
00032B6C <AmiBlitz3.ab2@14525>    MOVE.l -$4(a4),-$8(a4)
00032B70 <AmiBlitz3.ab2@14526>    MOVE.w d1,-$4(a4)
00032B76 <AmiBlitz3.ab2@14527>    SUB.w #$1980,-$a(a4)
00032B7C <AmiBlitz3.ab2@14528>    SUBQ.l #2,destpointer
00032B7E <AmiBlitz3.ab2@14529> RTS
00032B84 <AmiBlitz3.ab2@14532>   CLR.b quickadd
00032B88 <AmiBlitz3.ab2@14533> BRA doplus2__l10
00032B8E <AmiBlitz3.ab2@14536>    CLR.l imm_addr
00032B92 <AmiBlitz3.ab2@14537>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
00032B96 <AmiBlitz3.ab2@14538>    BNE doplus2__doit
00032B9C <AmiBlitz3.ab2@14539>    SUBQ.l #6,destpointer
00032B9E <AmiBlitz3.ab2@14540> RTS
00032BA4 <AmiBlitz3.ab2@14543>    ADD.w #$b080-$200,-6(a4)
00032BA6 <AmiBlitz3.ab2@14544> RTS
00032BAC <AmiBlitz3.ab2@14547>    MOVE.l destpointer,a0
00032BB2 <AmiBlitz3.ab2@14548>    SUB.l load_var_addr,a0
00032BB6 <AmiBlitz3.ab2@14549>    CMP.w #4,a0
00032BBA <AmiBlitz3.ab2@14550>    BNE doplus2__l10
00032BBE <AmiBlitz3.ab2@14551>    CMP.b #3,d3
00032BC2 <AmiBlitz3.ab2@14552>    BNE doplus2__lv1
00032BC8 <AmiBlitz3.ab2@14553>    CLR.l load_var_addr
00032BCE <AmiBlitz3.ab2@14554>    ADD.w #$b080-$200,-4(a4)
00032BD0 <AmiBlitz3.ab2@14555> RTS
00032BD4 <AmiBlitz3.ab2@14558>   CMP.b #2,d3
00032BD8 <AmiBlitz3.ab2@14559>   BNE doplus2__l10
00032BDE <AmiBlitz3.ab2@14560>   CLR.l load_var_addr
00032BE4 <AmiBlitz3.ab2@14561>   ADD.w #$a040-$200,-4(a4)
00032BE6 <AmiBlitz3.ab2@14562> RTS
00032BEC <AmiBlitz3.ab2@14565>   MOVE.w regnum,D3
00032BEE <AmiBlitz3.ab2@14566>   MOVE.w a1,d1
00032BF0 <AmiBlitz3.ab2@14567>   OR.w D3,D1
00032BF2 <AmiBlitz3.ab2@14568>   ADDQ.w #1,D1
00032BF4 <AmiBlitz3.ab2@14569>   LSL.w #8,D3
00032BF6 <AmiBlitz3.ab2@14570>   LSL.w #1,D3
00032BF8 <AmiBlitz3.ab2@14571>   OR.w D3,D1
00032BFC <AmiBlitz3.ab2@14572> BRA.w writeword
00032C00 <AmiBlitz3.ab2@14575>    CMP.b #3,d3
00032C04 <AmiBlitz3.ab2@14576>    BCS doplus2__sub1_lq10
00032C0A <AmiBlitz3.ab2@14577>    TST.b quickadd
00032C10 <AmiBlitz3.ab2@14581>    MOVE.l destpointer,a0
00032C16 <AmiBlitz3.ab2@14582>    CLR.b quickadd
00032C1C <AmiBlitz3.ab2@14583>    CLR.l load_var_addr
00032C22 <AmiBlitz3.ab2@14584>    SUB.l imm_addr,a0
00032C26 <AmiBlitz3.ab2@14585>    CMP.w #6,a0
00032C2A <AmiBlitz3.ab2@14586>    BEQ doplus2__sub1_li10
00032C2E <AmiBlitz3.ab2@14587>    CMP.w #4,a0
00032C32 <AmiBlitz3.ab2@14588>    BNE.s doplus2__sub1_li1
00032C38 <AmiBlitz3.ab2@14589>    CLR.l imm_addr
00032C3E <AmiBlitz3.ab2@14590>    ADD.w #$6040-$200,-4(a4)
00032C40 <AmiBlitz3.ab2@14591> RTS
00032C42 <AmiBlitz3.ab2@14594>    MOVE.l a4,a0
00032C48 <AmiBlitz3.ab2@14595>     SUB.l load_var_addr,a0
00032C4E <AmiBlitz3.ab2@14596>     CMP.l #$a,a0
00032C52 <AmiBlitz3.ab2@14597>     BNE doplus2__sub1_l10e
00032C58 <AmiBlitz3.ab2@14598>    CLR.l load_var_addr
00032C5C <AmiBlitz3.ab2@14599>    MOVE.w -$8(a4),d1
00032C62 <AmiBlitz3.ab2@14600>    MOVE.l -$4(a4),-$8(a4)
00032C66 <AmiBlitz3.ab2@14601>    MOVE.w d1,-$4(a4)
00032C6C <AmiBlitz3.ab2@14602>    SUB.w #$1b80,-$a(a4)
00032C72 <AmiBlitz3.ab2@14603>    SUBQ.l #2,destpointer
00032C74 <AmiBlitz3.ab2@14604> RTS
00032C7A <AmiBlitz3.ab2@14607>   CLR.b quickadd
00032C7E <AmiBlitz3.ab2@14608> BRA doplus2__sub1_l10
00032C84 <AmiBlitz3.ab2@14611>    CLR.l imm_addr
00032C8A <AmiBlitz3.ab2@14612>    ADD.w #$7080-$200,-6(a4)
00032C8C <AmiBlitz3.ab2@14613> RTS
00032C92 <AmiBlitz3.ab2@14616>    MOVE.l destpointer,a0
00032C98 <AmiBlitz3.ab2@14617>    SUB.l load_var_addr,a0
00032C9C <AmiBlitz3.ab2@14618>    CMP.w #4,a0
00032CA0 <AmiBlitz3.ab2@14619>    BNE doplus2__sub1_l10
00032CA4 <AmiBlitz3.ab2@14620>    CMP.b #3,d3
00032CA8 <AmiBlitz3.ab2@14621>    BNE doplus2__sub1_lv1
00032CAE <AmiBlitz3.ab2@14622>    CLR.l load_var_addr
00032CB4 <AmiBlitz3.ab2@14623>    ADD.w #$7080-$200,-4(a4)
00032CB6 <AmiBlitz3.ab2@14624> RTS
00032CBA <AmiBlitz3.ab2@14627>    CMP.b #2,d3
00032CBE <AmiBlitz3.ab2@14628>    BNE doplus2__sub1_l10
00032CC4 <AmiBlitz3.ab2@14629>    CLR.l load_var_addr
00032CCA <AmiBlitz3.ab2@14630>    ADD.w #$6040-$200,-4(a4)
00032CCC <AmiBlitz3.ab2@14631> RTS
00032CD2 <AmiBlitz3.ab2@14634>   MOVE.w regnum,D3
00032CD4 <AmiBlitz3.ab2@14635>   MOVE.w a1,d1
00032CD6 <AmiBlitz3.ab2@14636>   OR.w D3,D1
00032CD8 <AmiBlitz3.ab2@14637>   ADDQ.w #1,D1
00032CDA <AmiBlitz3.ab2@14638>   LSL.w #8,D3
00032CDC <AmiBlitz3.ab2@14639>   LSL.w #1,D3
00032CDE <AmiBlitz3.ab2@14640>   OR.w D3,D1
00032CE2 <AmiBlitz3.ab2@14641> BRA.w writeword
00032CE4 <AmiBlitz3.ab2@14645>   MOVEQ #0,d0
00032CEA <AmiBlitz3.ab2@14646>   MOVE.w regnum,d0
00032CEC <AmiBlitz3.ab2@14647>   ADDQ #1,d0
00032CEE <AmiBlitz3.ab2@14648>   ASL.w #8,d0
00032CF0 <AmiBlitz3.ab2@14649>   ASL.w #2,d0
00032CF6 <AmiBlitz3.ab2@14650>   MOVE.l #$f2000022,d1                                     ;fpu add
00032CF8 <AmiBlitz3.ab2@14651>   OR.l d0,d1
00032CFE <AmiBlitz3.ab2@14652>   MOVE.w regnum,d0
00032D00 <AmiBlitz3.ab2@14653>   ASL.w #7,d0
00032D02 <AmiBlitz3.ab2@14654>   OR.l d0,d1
00032D06 <AmiBlitz3.ab2@14655> BRA.w writelong
00032D0C <AmiBlitz3.ab2@14661>   TST.b iee
00032D10 <AmiBlitz3.ab2@14662>   BNE do_plus_float__fadd1
00032D14 <AmiBlitz3.ab2@14663>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
00032D1A <AmiBlitz3.ab2@14666>    MOVE.w D1,libjsr+2
00032D1E <AmiBlitz3.ab2@14667>    BSR.w JL_0_AD40
00032D20 <AmiBlitz3.ab2@14668>   MOVE.l D4,D1
00032D24 <AmiBlitz3.ab2@14669>    BSR.w JL_0_AD38
00032D28 <AmiBlitz3.ab2@14670>   MOVE.w #$C900,D1
00032D2C <AmiBlitz3.ab2@14671>    BSR.w Atokejsr
00032D30 <AmiBlitz3.ab2@14672>    BSR.w JL_0_A352
00032D36 <AmiBlitz3.ab2@14673>   MOVE.l libjsr,D1
00032D3A <AmiBlitz3.ab2@14674>    BSR.w writelong
00032D3E <AmiBlitz3.ab2@14675>    BSR.w JL_0_A36E
00032D40 <AmiBlitz3.ab2@14676>   MOVE.l D5,D1
00032D44 <AmiBlitz3.ab2@14677> BRA.w JL_0_AD38
00032D4A <AmiBlitz3.ab2@14681>   MOVE.w regnum,D1
00032D4C <AmiBlitz3.ab2@14682>   LSL.w #8,D1
00032D4E <AmiBlitz3.ab2@14683>   LSL.w #1,D1
00032D50 <AmiBlitz3.ab2@14684>   MOVE.w D1,-(A7)
00032D54 <AmiBlitz3.ab2@14685>   CMP.w #3072,d1
00032D58 <AmiBlitz3.ab2@14686>   BEQ 'l1
00032D5E <AmiBlitz3.ab2@14687>   OR.w addcode,D1                                          ;move.l (a7)+,d0
00032D62 <AmiBlitz3.ab2@14688> BRA 'l2
00032D66 <AmiBlitz3.ab2@14691>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
00032D6A <AmiBlitz3.ab2@14694>    BSR.w writeword
00032D6C <AmiBlitz3.ab2@14695>   MOVE.w (A7)+,D1
00032D72 <AmiBlitz3.ab2@14696>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
00032D76 <AmiBlitz3.ab2@14697> BRA.w writeword
00032D7A <AmiBlitz3.ab2@14703>   MOVE.w #$9040,D1
00032D7E <AmiBlitz3.ab2@14704> BRA.w doplus2
00032D82 <AmiBlitz3.ab2@14708>   MOVE.w #$9040,D1
00032D86 <AmiBlitz3.ab2@14709> BRA.w doplus2
00032D8A <AmiBlitz3.ab2@14713>   MOVE.w #$9080,D1
00032D8E <AmiBlitz3.ab2@14714> BRA.w doplus2
00032D94 <AmiBlitz3.ab2@14718>    TST.b iee
00032D98 <AmiBlitz3.ab2@14719>     BNE do_minus_float__fs1
00032D9C <AmiBlitz3.ab2@14720>   MOVE.w #$FFB8,D1                                         ;floatsub
00032DA0 <AmiBlitz3.ab2@14721> BRA.w doflib
00032DA2 <AmiBlitz3.ab2@14724>   MOVEQ #0,d0
00032DA8 <AmiBlitz3.ab2@14725>   MOVE.w regnum,d0
00032DAA <AmiBlitz3.ab2@14726>   ADDQ #1,d0
00032DAC <AmiBlitz3.ab2@14727>   ASL.w #8,d0
00032DAE <AmiBlitz3.ab2@14728>   ASL.w #2,d0
00032DB4 <AmiBlitz3.ab2@14729>   MOVE.l #$f2000028,d1
00032DB6 <AmiBlitz3.ab2@14730>   OR.l d0,d1
00032DBC <AmiBlitz3.ab2@14731>   MOVE.w regnum,d0
00032DBE <AmiBlitz3.ab2@14732>   ASL.w #7,d0
00032DC0 <AmiBlitz3.ab2@14733>   OR.l d0,d1
00032DC4 <AmiBlitz3.ab2@14734> BRA.w writelong
00032DC8 <AmiBlitz3.ab2@14740>   MOVE.w #$C1C0,D1
00032DCA <AmiBlitz3.ab2@14741>   MOVEQ.l #$02,D2                                          ;now a word
00032DCE <AmiBlitz3.ab2@14742> BRA.w doplus2
00032DD2 <AmiBlitz3.ab2@14746>   MOVE.w #$C1C0,D1
00032DD4 <AmiBlitz3.ab2@14747>   MOVEQ.l #$03,D2                                          ;now a long.
00032DD8 <AmiBlitz3.ab2@14748> BRA.w doplus2
00032DDC <AmiBlitz3.ab2@14752>   MOVE.w #$CA00,D1                                         ;quickmul
00032DE0 <AmiBlitz3.ab2@14753> BRA.w domylib
00032DE6 <AmiBlitz3.ab2@14757>   TST.b fast
00032DEA <AmiBlitz3.ab2@14758>   BNE.s 'l10
00032DEE <AmiBlitz3.ab2@14759>   MOVE.w #$CA01,D1                                         ;writelongmul
00032DF2 <AmiBlitz3.ab2@14760> BRA.w domylib
00032DF8 <AmiBlitz3.ab2@14769>    MOVE.l destpointer,a0
00032DFE <AmiBlitz3.ab2@14770>    SUB.l imm_addr,a0
00032E02 <AmiBlitz3.ab2@14771>    CMP.w #6,a0
00032E06 <AmiBlitz3.ab2@14772>    BNE 'li1
00032E08 <AmiBlitz3.ab2@14773>    MOVEQ.l #2,d1
00032E0A <AmiBlitz3.ab2@14774>    MOVEQ #1,d3
00032E0E <AmiBlitz3.ab2@14777>   CMP.l -4(a4),d1
00032E12 <AmiBlitz3.ab2@14778>    BEQ 'oklsl
00032E14 <AmiBlitz3.ab2@14779>     LSL.l #1,d1
00032E1A <AmiBlitz3.ab2@14780>     ADD.l #1,d3
00032E20 <AmiBlitz3.ab2@14781>     CMP.l #9,d3
00032E24 <AmiBlitz3.ab2@14782>     BNE 'ag
00032E28 <AmiBlitz3.ab2@14783>    MOVE.w -2(a4),d1
00032E2C <AmiBlitz3.ab2@14784>    BSR writeword
00032E32 <AmiBlitz3.ab2@14785>    MOVE.w -6(a4),-4(a4)
00032E3A <AmiBlitz3.ab2@14786>    MOVE.l #$4c3c0800,-8(a4)
00032E40 <AmiBlitz3.ab2@14787>    MOVE.w regnum,D3
00032E44 <AmiBlitz3.ab2@14788>    MULS #$1000,D3
00032E48 <AmiBlitz3.ab2@14789>    OR.w D3,-6(a4)
00032E4E <AmiBlitz3.ab2@14790>    CLR.l load_var_addr
00032E54 <AmiBlitz3.ab2@14791>    CLR.l imm_addr
00032E58 <AmiBlitz3.ab2@14792> BRA 'li3
00032E5C <AmiBlitz3.ab2@14795>    CMP.w #8,d3
00032E60 <AmiBlitz3.ab2@14796>    BEQ 'ok
00032E62 <AmiBlitz3.ab2@14797>    ASL.l #1,d3
00032E64 <AmiBlitz3.ab2@14798>    ASL.l #8,d3
00032E68 <AmiBlitz3.ab2@14799>    MOVE.w #$e188,d1
00032E6A <AmiBlitz3.ab2@14800>    OR.w d3,d1
00032E6E <AmiBlitz3.ab2@14801>    MOVE.w d1,-6(a4)
00032E72 <AmiBlitz3.ab2@14802> BRA 'okls
00032E78 <AmiBlitz3.ab2@14805>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
00032E7E <AmiBlitz3.ab2@14808>   MOVE.w regnum,d3
00032E82 <AmiBlitz3.ab2@14809>    OR.b d3,-5(a4)
00032E88 <AmiBlitz3.ab2@14810>    SUBQ.l #4,destpointer
00032E8E <AmiBlitz3.ab2@14811>    CLR.l load_var_addr
00032E94 <AmiBlitz3.ab2@14812>    CLR.l imm_addr
00032E98 <AmiBlitz3.ab2@14813> BRA 'li3
00032E9E <AmiBlitz3.ab2@14816>    MOVE.l destpointer,a0
00032EA4 <AmiBlitz3.ab2@14817>    SUB.l load_var_addr,a0
00032EA8 <AmiBlitz3.ab2@14818>    CMP.w #4,a0
00032EAC <AmiBlitz3.ab2@14819>    BNE 'li2
00032EB0 <AmiBlitz3.ab2@14820>    MOVE.w -2(a4),d1
00032EB4 <AmiBlitz3.ab2@14821>    BSR writeword
00032EBA <AmiBlitz3.ab2@14822>    MOVE.b #$4c,-6(a4)
00032EC0 <AmiBlitz3.ab2@14823>    MOVE.w #$0800,-4(a4)
00032EC6 <AmiBlitz3.ab2@14824>    MOVE.w regnum,D3
00032ECA <AmiBlitz3.ab2@14825>    MULS #$1000,d3
00032ECE <AmiBlitz3.ab2@14826>    OR.w D3,-4(a4)
00032ED2 <AmiBlitz3.ab2@14827> BRA 'li3
00032ED8 <AmiBlitz3.ab2@14830>    MOVE.l #$4c010800,d1
00032EDE <AmiBlitz3.ab2@14831>    MOVE.w regnum,D3
00032EE0 <AmiBlitz3.ab2@14832>    EXT.l d3
00032EE4 <AmiBlitz3.ab2@14833>    MULS #$1000,d3
00032EE6 <AmiBlitz3.ab2@14834>    OR.w D3,d1
00032EEA <AmiBlitz3.ab2@14835>    MULS #$10,d3
00032EEC <AmiBlitz3.ab2@14836>    ADD.l d3,d1
00032EF0 <AmiBlitz3.ab2@14837>    BSR writelong
00032EF2 <AmiBlitz3.ab2@14842> RTS
00032EF4 <AmiBlitz3.ab2@14846>   MOVE.w D1,-(A7)
00032EF8 <AmiBlitz3.ab2@14847>    BSR.w JL_0_AD40
00032EFA <AmiBlitz3.ab2@14848>   MOVE.l D4,D1
00032EFE <AmiBlitz3.ab2@14849>    BSR.w JL_0_AD38
00032F02 <AmiBlitz3.ab2@14850>    BSR.w JL_0_A352
00032F04 <AmiBlitz3.ab2@14851>   MOVEQ #0,d1
00032F06 <AmiBlitz3.ab2@14852>   MOVE.w (A7)+,D1
00032F0C <AmiBlitz3.ab2@14853>   MOVE.l d1,lastinstruction
00032F10 <AmiBlitz3.ab2@14854>    BSR.w Atokejsr
00032F14 <AmiBlitz3.ab2@14855>    BSR.w JL_0_A36E
00032F16 <AmiBlitz3.ab2@14856>   MOVE.l D5,D1
00032F1A <AmiBlitz3.ab2@14857> BRA.w JL_0_AD38
00032F20 <AmiBlitz3.ab2@14861>    TST.b iee
00032F24 <AmiBlitz3.ab2@14862>     BNE fm1
00032F28 <AmiBlitz3.ab2@14863>  MOVE.w #$FFB2,D1                                          ;floatmul
00032F2C <AmiBlitz3.ab2@14864> BRA.w doflib
00032F2E <AmiBlitz3.ab2@14867>   MOVEQ #0,d0
00032F34 <AmiBlitz3.ab2@14868>  MOVE.w regnum,d0
00032F36 <AmiBlitz3.ab2@14869>  ADDQ #1,d0
00032F38 <AmiBlitz3.ab2@14870>  ASL.w #8,d0
00032F3A <AmiBlitz3.ab2@14871>  ASL.w #2,d0
00032F40 <AmiBlitz3.ab2@14872>  MOVE.l #$f2000023,d1
00032F42 <AmiBlitz3.ab2@14873>  OR.l d0,d1
00032F48 <AmiBlitz3.ab2@14874>  MOVE.w regnum,d0
00032F4A <AmiBlitz3.ab2@14875>  ASL.w #7,d0
00032F4C <AmiBlitz3.ab2@14876>  OR.l d0,d1
00032F50 <AmiBlitz3.ab2@14877> BRA.w writelong
00032F52 <AmiBlitz3.ab2@14881>   MOVE.w D2,-(A7)                                          ;dopow
00032F54 <AmiBlitz3.ab2@14882>   MOVE.w D2,D3
00032F56 <AmiBlitz3.ab2@14883>   MOVEQ.l #$05,D2
00032F5A <AmiBlitz3.ab2@14884>    BSR.w JL_0_9770
00032F60 <AmiBlitz3.ab2@14885>   ADDQ.w #1,regnum
00032F62 <AmiBlitz3.ab2@14886>   MOVE.w (A7)+,D3
00032F64 <AmiBlitz3.ab2@14887>   MOVEQ.l #$05,D2
00032F68 <AmiBlitz3.ab2@14888>    BSR.w writeconvertcode
00032F6E <AmiBlitz3.ab2@14889>   SUBQ.w #1,regnum
00032F72 <AmiBlitz3.ab2@14890>    BSR.w nocando
00032F78 <AmiBlitz3.ab2@14891>    TST.b fpu
00032F7C <AmiBlitz3.ab2@14892>    BEQ 'old
00032F7E <AmiBlitz3.ab2@14893>    MOVEQ #0,d1
00032F84 <AmiBlitz3.ab2@14894>    MOVE.w regnum,d1
00032F86 <AmiBlitz3.ab2@14895>   MOVE.l d1,d0
00032F88 <AmiBlitz3.ab2@14896>   ASL.w #7,d1
00032F8A <AmiBlitz3.ab2@14897>   ASL.w #8,d0
00032F8C <AmiBlitz3.ab2@14898>   ASL.w #2,d0
00032F8E <AmiBlitz3.ab2@14899>   OR.w d0,d1
00032F90 <AmiBlitz3.ab2@14900>   MOVE.l d1,-(a7)
00032F96 <AmiBlitz3.ab2@14902>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
00032F9A <AmiBlitz3.ab2@14903>    BSR writelong
00032FA0 <AmiBlitz3.ab2@14904>    MOVE.w regnum,d0
00032FA2 <AmiBlitz3.ab2@14905>  ADDQ #1,d0
00032FA4 <AmiBlitz3.ab2@14906>  ASL.w #8,d0
00032FA6 <AmiBlitz3.ab2@14907>  ASL.w #2,d0
00032FAC <AmiBlitz3.ab2@14908>  MOVE.l #$f2000023,d1
00032FAE <AmiBlitz3.ab2@14909>  OR.l d0,d1
00032FB4 <AmiBlitz3.ab2@14910>  MOVE.w regnum,d0
00032FB6 <AmiBlitz3.ab2@14911>  ASL.w #7,d0
00032FB8 <AmiBlitz3.ab2@14912>  OR.l d0,d1
00032FBE <AmiBlitz3.ab2@14913>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
00032FC2 <AmiBlitz3.ab2@14914>    BSR writelong
00032FC4 <AmiBlitz3.ab2@14915>    MOVE.l (a7)+,d1
00032FCA <AmiBlitz3.ab2@14917>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
00032FCE <AmiBlitz3.ab2@14918>    BSR writelong
00032FD0 <AmiBlitz3.ab2@14919> RTS
00032FD4 <AmiBlitz3.ab2@14922>   MOVE.w #$6001,D1
00032FD8 <AmiBlitz3.ab2@14923> BRA.w domylib
00032FDC <AmiBlitz3.ab2@14929>   MOVEA.l forthsp(PC),A0
00032FE0 <AmiBlitz3.ab2@14930>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
00032FE2 <AmiBlitz3.ab2@14931> RTS
00032FE6 <AmiBlitz3.ab2@14937>   MOVE.w #$D400,D1
00032FEA <AmiBlitz3.ab2@14938> BRA.w domylib
00032FEE <AmiBlitz3.ab2@14942>   MOVE.w #$D401,D1
00032FF2 <AmiBlitz3.ab2@14943> BRA.w domylib
00032FF6 <AmiBlitz3.ab2@14947>    BSR.w nocando                                           ;modlib uses an alibjsr here!
00032FFA <AmiBlitz3.ab2@14948>   MOVE.w #$D402,D1
00032FFE <AmiBlitz3.ab2@14949> BRA.w domylib
00033002 <AmiBlitz3.ab2@14953>   MOVE.w #$D403,D1
00033004 <AmiBlitz3.ab2@14954>   MOVEQ.l #$02,D2                                          ;now a word.
00033008 <AmiBlitz3.ab2@14955> BRA.w domylib
0003300C <AmiBlitz3.ab2@14959>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
00033012 <AmiBlitz3.ab2@14960>   TST.b fpu
00033016 <AmiBlitz3.ab2@14961>   BEQ 'old
00033018 <AmiBlitz3.ab2@14962>   MOVEQ #0,d1
0003301E <AmiBlitz3.ab2@14963>   MOVE.w regnum,d1                                         ;fpu mod
00033020 <AmiBlitz3.ab2@14964>   MOVE.l d1,d0
00033022 <AmiBlitz3.ab2@14965>   ADDQ.l #1,d1
00033024 <AmiBlitz3.ab2@14966>   ASL.l #7,d0
00033026 <AmiBlitz3.ab2@14967>   ASL.l #8,d1
00033028 <AmiBlitz3.ab2@14968>   ASL.l #2,d1
0003302A <AmiBlitz3.ab2@14969>   OR.l d0,d1
0003302C <AmiBlitz3.ab2@14970>   MOVE.l d0,-(a7)
00033032 <AmiBlitz3.ab2@14971>   OR.l #$f2000021,d1
00033036 <AmiBlitz3.ab2@14972>   BSR writelong
00033038 <AmiBlitz3.ab2@14973>   MOVE.l (a7)+,d0
0003303A <AmiBlitz3.ab2@14974>  RTS
0003303E <AmiBlitz3.ab2@14977>   MOVE.w #$D404,D1
00033040 <AmiBlitz3.ab2@14978>   MOVEQ.l #$03,D2                                          ;now a long
00033044 <AmiBlitz3.ab2@14979> BRA.w domylib
00033048 <AmiBlitz3.ab2@14987>   MOVE.w #$48C0,D1
0003304E <AmiBlitz3.ab2@14988>   OR.w regnum,D1
00033052 <AmiBlitz3.ab2@14989>    BSR.w writeword
00033054 <AmiBlitz3.ab2@14990>   ADDQ.w #1,D1
00033058 <AmiBlitz3.ab2@14991>    BSR.w writeword
0003305C <AmiBlitz3.ab2@14994>    MOVE.w #$48C0,D1
00033062 <AmiBlitz3.ab2@14995>   OR.w regnum,D1
00033066 <AmiBlitz3.ab2@14996>    BSR.w writeword
0003306A <AmiBlitz3.ab2@14997>   MOVE.w #$81C0,D1
0003306E <AmiBlitz3.ab2@14998> BRA.w doplus2
00033074 <AmiBlitz3.ab2@15002>   TST.b fast
00033078 <AmiBlitz3.ab2@15003>   BNE.s 'l10
0003307C <AmiBlitz3.ab2@15004>   MOVE.w #$CB01,D1
00033080 <AmiBlitz3.ab2@15005> BRA.w domylib
00033084 <AmiBlitz3.ab2@15011>   BSR.w JL_0_AD40
00033086 <AmiBlitz3.ab2@15012>   MOVE.l D4,D1
0003308A <AmiBlitz3.ab2@15013>    BSR.w JL_0_AD38
0003308E <AmiBlitz3.ab2@15014>    BSR.w JL_0_A352
00033094 <AmiBlitz3.ab2@15028>    MOVE.l #$4c410800,d1
00033098 <AmiBlitz3.ab2@15029>    BSR writelong
0003309C <AmiBlitz3.ab2@15032>   MOVE.w #$4e71,d1
000330A0 <AmiBlitz3.ab2@15034>    BSR.w JL_0_A36E
000330A2 <AmiBlitz3.ab2@15035>   MOVE.l D5,D1
000330A6 <AmiBlitz3.ab2@15036> BRA.w JL_0_AD38
000330AA <AmiBlitz3.ab2@15039>     CMP.w #8,d3
000330AE <AmiBlitz3.ab2@15040>     BEQ 'ok
000330B0 <AmiBlitz3.ab2@15041>     ASL.l #1,d3
000330B2 <AmiBlitz3.ab2@15042>     ASL.l #8,d3
000330B6 <AmiBlitz3.ab2@15043>     MOVE.w #$e080,d1
000330B8 <AmiBlitz3.ab2@15044>     OR.w d3,d1
000330BC <AmiBlitz3.ab2@15045> BRA 'oklsr2
000330C0 <AmiBlitz3.ab2@15048>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
000330C6 <AmiBlitz3.ab2@15051>      SUBQ.l #6,destpointer
000330CA <AmiBlitz3.ab2@15052>      BSR writeword
000330CC <AmiBlitz3.ab2@15053>      MOVE.l (a7)+,d3
000330CE <AmiBlitz3.ab2@15054>      MOVEQ #0,d1
000330D4 <AmiBlitz3.ab2@15055>      CLR.l load_var_addr
000330DA <AmiBlitz3.ab2@15056>      CLR.l imm_addr
000330DE <AmiBlitz3.ab2@15057> BRA JL_0_AD38
000330E2 <AmiBlitz3.ab2@15061>   MOVE.w #$CB00,D1                                         ;quickdiv
000330E6 <AmiBlitz3.ab2@15062> BRA.w domylib
000330EC <AmiBlitz3.ab2@15066>    TST.b iee
000330F0 <AmiBlitz3.ab2@15067>    BNE fdiv1
000330F4 <AmiBlitz3.ab2@15068>    MOVE.w #$FFAC,D1                                        ;floatdiv
000330F8 <AmiBlitz3.ab2@15069> BRA.w doflib
000330FA <AmiBlitz3.ab2@15073>   MOVEQ #0,d0
00033100 <AmiBlitz3.ab2@15074>   MOVE.w regnum,d0
00033102 <AmiBlitz3.ab2@15075>   ADDQ #1,d0
00033104 <AmiBlitz3.ab2@15076>   ASL.w #8,d0
00033106 <AmiBlitz3.ab2@15077>   ASL.w #2,d0
0003310C <AmiBlitz3.ab2@15078>   MOVE.l #$f2000020,d1                                     ;fpu div
0003310E <AmiBlitz3.ab2@15079>   OR.l d0,d1
00033114 <AmiBlitz3.ab2@15080>   MOVE.w regnum,d0
00033116 <AmiBlitz3.ab2@15081>   ASL.w #7,d0
00033118 <AmiBlitz3.ab2@15082>   OR.l d0,d1
0003311C <AmiBlitz3.ab2@15083> BRA.w writelong
00033120 <AmiBlitz3.ab2@15087>   MOVE.w #$C000,D1
00033124 <AmiBlitz3.ab2@15088> BRA.w doplus2
00033128 <AmiBlitz3.ab2@15092>   MOVE.w #$C040,D1
0003312C <AmiBlitz3.ab2@15093> BRA.w doplus2
00033130 <AmiBlitz3.ab2@15097>   MOVE.w #$C080,D1
00033134 <AmiBlitz3.ab2@15098> BRA.w doplus2
00033138 <AmiBlitz3.ab2@15102>   MOVE.w #$8000,D1
0003313C <AmiBlitz3.ab2@15103> BRA.w doplus2
00033140 <AmiBlitz3.ab2@15107>   MOVE.w #$8040,D1
00033144 <AmiBlitz3.ab2@15108> BRA.w doplus2
00033148 <AmiBlitz3.ab2@15112>   MOVE.w #$8080,D1
0003314C <AmiBlitz3.ab2@15113> BRA.w doplus2
00033150 <AmiBlitz3.ab2@15117>   MOVE.w #$B100,D1
00033156 <AmiBlitz3.ab2@15120>    MOVE.w regnum,D3
00033158 <AmiBlitz3.ab2@15121>   OR.w D3,D1
0003315A <AmiBlitz3.ab2@15122>   ADDQ.w #1,D3
0003315C <AmiBlitz3.ab2@15123>   LSL.w #8,D3
0003315E <AmiBlitz3.ab2@15124>   LSL.w #1,D3
00033160 <AmiBlitz3.ab2@15125>   OR.w D3,D1
00033164 <AmiBlitz3.ab2@15126> BRA.w writeword
00033168 <AmiBlitz3.ab2@15130>   MOVE.w #$B140,D1
0003316C <AmiBlitz3.ab2@15131> BRA.w JL_0_A25C
00033170 <AmiBlitz3.ab2@15135>   MOVE.w #$B180,D1
00033174 <AmiBlitz3.ab2@15136> BRA.w JL_0_A25C
00033178 <AmiBlitz3.ab2@15140>   MOVE.w #$E1A8,D1
0003317C <AmiBlitz3.ab2@15141> BRA.w JL_0_A298
00033180 <AmiBlitz3.ab2@15145>   MOVE.w #$E0A8,D1
00033184 <AmiBlitz3.ab2@15146> BRA.w JL_0_A298
00033188 <AmiBlitz3.ab2@15150>   MOVE.w #$E0A0,D1
0003318C <AmiBlitz3.ab2@15151> BRA.w JL_0_A298
0003318E <AmiBlitz3.ab2@15155>   MOVE.w D1,-(A7)
00033194 <AmiBlitz3.ab2@15156>   ADDQ.w #1,regnum
00033196 <AmiBlitz3.ab2@15157>   MOVE.w D2,-(A7)
00033198 <AmiBlitz3.ab2@15158>   MOVE.w D2,D3
0003319A <AmiBlitz3.ab2@15159>   MOVEQ.l #$02,D2
0003319E <AmiBlitz3.ab2@15162>    BSR.w writeconvertcode
000331A0 <AmiBlitz3.ab2@15163>   MOVE.w (A7)+,D2
000331A6 <AmiBlitz3.ab2@15164>   SUBQ.w #1,regnum
000331AA <AmiBlitz3.ab2@15165>   CMP.w #$4,D2
000331AE <AmiBlitz3.ab2@15166>    BEQ.w JL_0_A2C2
000331B0 <AmiBlitz3.ab2@15167>   MOVE.w D2,D3
000331B2 <AmiBlitz3.ab2@15168>   MOVEQ.l #$03,D2
000331B6 <AmiBlitz3.ab2@15169>    BSR.w JL_0_9770
000331B8 <AmiBlitz3.ab2@15172>    MOVE.w (A7)+,D1
000331BE <AmiBlitz3.ab2@15173>   MOVE.w regnum,D3
000331C0 <AmiBlitz3.ab2@15174>   OR.w D3,D1
000331C2 <AmiBlitz3.ab2@15175>   ADDQ.w #1,D3
000331C4 <AmiBlitz3.ab2@15176>   LSL.w #8,D3
000331C6 <AmiBlitz3.ab2@15177>   LSL.w #1,D3
000331C8 <AmiBlitz3.ab2@15178>   OR.w D3,D1
000331CC <AmiBlitz3.ab2@15179> BRA.w writeword
000331D0 <AmiBlitz3.ab2@15183>   MOVE.w #$0100,D1
000331D4 <AmiBlitz3.ab2@15184>    BSR.w JL_0_A31C
000331DA <AmiBlitz3.ab2@15185>   MOVE.w regnum,D1
000331DE <AmiBlitz3.ab2@15186>   ORI.w #$56C0,D1
000331E2 <AmiBlitz3.ab2@15187>    BSR.w writeword
000331E8 <AmiBlitz3.ab2@15188>   MOVE.w regnum,D1
000331EC <AmiBlitz3.ab2@15189>   ORI.w #$4880,D1
000331F0 <AmiBlitz3.ab2@15190>    BSR.w writeword
000331F2 <AmiBlitz3.ab2@15191>   MOVEQ.l #$02,D2
000331F4 <AmiBlitz3.ab2@15192> RTS
000331F8 <AmiBlitz3.ab2@15196>   MOVE.w #$01C0,D1
000331FC <AmiBlitz3.ab2@15199>    BSR.w JL_0_A31C
000331FE <AmiBlitz3.ab2@15200>   MOVEQ.l #$03,D2
00033200 <AmiBlitz3.ab2@15201> RTS
00033204 <AmiBlitz3.ab2@15205>   MOVE.w #$0180,D1
00033208 <AmiBlitz3.ab2@15206> BRA.w JL_0_A304
0003320C <AmiBlitz3.ab2@15210>   MOVE.w #$0140,D1
00033210 <AmiBlitz3.ab2@15211> BRA.w JL_0_A304
00033212 <AmiBlitz3.ab2@15215>   MOVE.w D1,-(A7)
00033214 <AmiBlitz3.ab2@15216>   MOVE.w D2,-(A7)
00033216 <AmiBlitz3.ab2@15217>   MOVE.w D2,D3
00033218 <AmiBlitz3.ab2@15218>   MOVEQ.l #$03,D2
0003321C <AmiBlitz3.ab2@15219>    BSR.w JL_0_9770
0003321E <AmiBlitz3.ab2@15220>   MOVE.w (A7)+,D3
00033220 <AmiBlitz3.ab2@15221>   MOVEQ.l #$01,D2
00033226 <AmiBlitz3.ab2@15222>   ADDQ.w #1,regnum
0003322A <AmiBlitz3.ab2@15223>    BSR.w writeconvertcode
00033230 <AmiBlitz3.ab2@15224>   SUBQ.w #1,regnum
00033236 <AmiBlitz3.ab2@15225>   MOVE.w regnum,D1
00033238 <AmiBlitz3.ab2@15226>   MOVE.w D1,D2
0003323A <AmiBlitz3.ab2@15227>   ADDQ.w #1,D2
0003323C <AmiBlitz3.ab2@15228>   LSL.w #8,D2
0003323E <AmiBlitz3.ab2@15229>   LSL.w #1,D2
00033240 <AmiBlitz3.ab2@15230>   OR.w (A7)+,D1
00033242 <AmiBlitz3.ab2@15231>   OR.w D2,D1
00033246 <AmiBlitz3.ab2@15232> BRA.w writeword
0003324C <AmiBlitz3.ab2@15236>   MOVE.w regnum,D1
00033250 <AmiBlitz3.ab2@15237>    BEQ.w JL_0_A36C
00033254 <AmiBlitz3.ab2@15238>   ORI.w #$2000,D1
00033258 <AmiBlitz3.ab2@15239>    BSR.w writeword
0003325C <AmiBlitz3.ab2@15240>   ADDI.w #$201,D1
00033260 <AmiBlitz3.ab2@15241>    BSR.w writeword
00033262 <AmiBlitz3.ab2@15244> RTS
00033268 <AmiBlitz3.ab2@15248>   MOVE.w regnum,D1
0003326C <AmiBlitz3.ab2@15249>    BEQ.w JL_0_A384
0003326E <AmiBlitz3.ab2@15250>   LSL.w #8,D1
00033270 <AmiBlitz3.ab2@15251>   LSL.w #1,D1
00033274 <AmiBlitz3.ab2@15252>   ORI.w #$2000,D1
00033278 <AmiBlitz3.ab2@15253>    BSR.w writeword
0003327A <AmiBlitz3.ab2@15256> RTS
00033282 <AmiBlitz3.ab2@15260>    CMPI.w #$7,regnum
00033286 <AmiBlitz3.ab2@15261>    BCS.w JL_0_A6B4
0003328C <AmiBlitz3.ab2@15262>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
00033290 <AmiBlitz3.ab2@15263>   BSR writelong
00033294 <AmiBlitz3.ab2@15264>   MOVE.w #$2F06,D1                                         ;d6 to stack
00033298 <AmiBlitz3.ab2@15266>   CMP.w #$3,D2
0003329C <AmiBlitz3.ab2@15267>    BCS.w JL_0_A3A2
000332A0 <AmiBlitz3.ab2@15268>   MOVE.w #$2F06,D1
000332A4 <AmiBlitz3.ab2@15271>   BSR.w writeword
000332A6 <AmiBlitz3.ab2@15272>   MOVE.w D1,-(A7)
000332AC <AmiBlitz3.ab2@15273>   SUBQ.w #1,regnum
000332B0 <AmiBlitz3.ab2@15274>    BSR.w JL_0_A6B4
000332B6 <AmiBlitz3.ab2@15275>   ADDQ.w #1,regnum
000332BC <AmiBlitz3.ab2@15276>   MOVE.l #$f2001b80,d1
000332C0 <AmiBlitz3.ab2@15277>   BSR writelong
000332C4 <AmiBlitz3.ab2@15278>   MOVE.w #$3E06,D1
000332C8 <AmiBlitz3.ab2@15279>   CMP.w #$3,D2
000332CC <AmiBlitz3.ab2@15280>    BCS.w JL_0_A3C8
000332D0 <AmiBlitz3.ab2@15281>   MOVE.w #$2E06,D1
000332D4 <AmiBlitz3.ab2@15284>   BSR.w writeword
000332D6 <AmiBlitz3.ab2@15285>   MOVE.w (A7)+,D1
000332DA <AmiBlitz3.ab2@15286>   ANDI.w #$F000,D1
000332DE <AmiBlitz3.ab2@15287>   ORI.w #$C1F,D1
000332E4 <AmiBlitz3.ab2@15288>   JSR writeword
000332EA <AmiBlitz3.ab2@15289>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
000332EE <AmiBlitz3.ab2@15290> BRA writelong
000332F2 <AmiBlitz3.ab2@15294>   BSR.w JL_0_A6B4
000332F6 <AmiBlitz3.ab2@15295>   MOVE.w #$4440,D1
000332FA <AmiBlitz3.ab2@15296>   CMP.w #$3,D2
000332FE <AmiBlitz3.ab2@15297>    BCS.w JL_0_A406
00033302 <AmiBlitz3.ab2@15298>   MOVE.w #$4480,D1
00033306 <AmiBlitz3.ab2@15299>   CMP.w #$5,D2
0003330A <AmiBlitz3.ab2@15300>    BCS.w JL_0_A406
0003330E <AmiBlitz3.ab2@15301>   CMP.w #$6,D2
00033312 <AmiBlitz3.ab2@15302>    BCC.w illoperr
00033316 <AmiBlitz3.ab2@15303>   MOVE.w #$FFC4,D1
0003331A <AmiBlitz3.ab2@15304> BRA.w JL_0_9604
00033320 <AmiBlitz3.ab2@15307>   OR.w regnum,D1                                           ;negate
00033326 <AmiBlitz3.ab2@15308>   CLR.l imm_addr
0003332A <AmiBlitz3.ab2@15309> BRA.w writeword
0003332E <AmiBlitz3.ab2@15313>    BSR.w eval4
00033332 <AmiBlitz3.ab2@15314>   CMP.w #$29,D0
00033336 <AmiBlitz3.ab2@15315>    BEQ.w JL_0_A424
0003333A <AmiBlitz3.ab2@15316>   CMP.w #$7D,D0
0003333E <AmiBlitz3.ab2@15317>    BNE.w brackets_                                         ;syntax error brackets
00033342 <AmiBlitz3.ab2@15320> BRA.w get1bytemain
00033346 <AmiBlitz3.ab2@15324>    BSR.w eval4
0003334A <AmiBlitz3.ab2@15325>   CMP.w #$5,D2
0003334E <AmiBlitz3.ab2@15326>    BCC.w illoperr
00033354 <AmiBlitz3.ab2@15327>   MOVE.w regnum,D1
00033358 <AmiBlitz3.ab2@15328>   ORI.w #$4640,D1
0003335C <AmiBlitz3.ab2@15329>   CMP.w #$3,D2
00033360 <AmiBlitz3.ab2@15330>    BCS.w writeword
00033364 <AmiBlitz3.ab2@15331>   EORI.w #$C0,D1
00033368 <AmiBlitz3.ab2@15332> BRA.w writeword
0003336A <AmiBlitz3.ab2@15336>   MOVEQ.l #$05,D2                                          ;fpu pi
00033370 <AmiBlitz3.ab2@15337>    TST.b fpu
00033374 <AmiBlitz3.ab2@15338>   BEQ 'old
0003337A <AmiBlitz3.ab2@15339> JMP fpupi
00033380 <AmiBlitz3.ab2@15342>   MOVE.w regnum,D1
00033382 <AmiBlitz3.ab2@15343>   LSL.w #8,D1
00033384 <AmiBlitz3.ab2@15344>   LSL.w #1,D1
00033388 <AmiBlitz3.ab2@15345>   ORI.w #$203C,D1
0003338C <AmiBlitz3.ab2@15346>    BSR.w writeword
00033392 <AmiBlitz3.ab2@15347>   MOVE.l #$C90FDA42,D1
00033396 <AmiBlitz3.ab2@15348>    BSR.w writelong
0003339A <AmiBlitz3.ab2@15349> BRA.w get1bytemain
00033496 <AmiBlitz3.ab2@15357> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
00033592 <AmiBlitz3.ab2@15358>              Ds.l 63
000335DA <AmiBlitz3.ab2@15359>              Ds.l 18
000335DE <AmiBlitz3.ab2@15360> forthsp:     Dc.l forthstack
0003360A <AmiBlitz3.ab2@15365>    !fget
0003360E <AmiBlitz3.ab2@15366>    CMP.b #$7e,d0
00033612 <AmiBlitz3.ab2@15367>    BNE 'noc
00033614 <AmiBlitz3.ab2@15368>    SUBQ.l #1,a5
00033618 <AmiBlitz3.ab2@15369>    BSR get1bytemain
0003361C <AmiBlitz3.ab2@15372>    CMP.b #"#",d0
00033620 <AmiBlitz3.ab2@15373>    BNE 'ld1
00033624 <AmiBlitz3.ab2@15374>    CMP.b #$22,(a5)
00033628 <AmiBlitz3.ab2@15375>    BNE 'ld1
0003362E <AmiBlitz3.ab2@15376>    JSR addimmi
00033632 <AmiBlitz3.ab2@15379>    CMP.b #$22,d0
00033636 <AmiBlitz3.ab2@15380>    BNE 'l11
0003363C <AmiBlitz3.ab2@15390>    NOT.w instringon
0003363E <AmiBlitz3.ab2@15393>    TST.b d0
00033642 <AmiBlitz3.ab2@15394>    BPL 'l10
00033644 <AmiBlitz3.ab2@15395>    LSL.w #8,d0
00033646 <AmiBlitz3.ab2@15396>    MOVE.b (a5)+,d0
0003364C <AmiBlitz3.ab2@15397>    MOVE.l d0,lasttoken
00033652 <AmiBlitz3.ab2@15398>    MOVE.w d0,lastchar
00033656 <AmiBlitz3.ab2@15401>   CMP.w #$28,D0
0003365A <AmiBlitz3.ab2@15402>    BEQ.w JL_0_A410
0003365E <AmiBlitz3.ab2@15403>   CMP.w #$7B,D0
00033662 <AmiBlitz3.ab2@15404>    BEQ.w JL_0_A410
00033666 <AmiBlitz3.ab2@15405>   CMP.w #$2D,D0
0003366A <AmiBlitz3.ab2@15406>    BEQ.w JL_0_A3DA
0003366E <AmiBlitz3.ab2@15407>   CMP.w #-$7F77,D0
00033672 <AmiBlitz3.ab2@15408>    BEQ.w JL_0_A428
00033676 <AmiBlitz3.ab2@15409>   MOVEA.l forthsp(PC),A1
0003367C <AmiBlitz3.ab2@15410>   CMPA.l #forthsp,A1
00033680 <AmiBlitz3.ab2@15411>    BCC.w conmemerr
00033686 <AmiBlitz3.ab2@15412>   MOVE.l destpointer,(A1)+
0003368C <AmiBlitz3.ab2@15413>   MOVE.l hunkoffsetbase,(A1)+
00033692 <AmiBlitz3.ab2@15414>   MOVE.l lasta6,(A1)+
00033698 <AmiBlitz3.ab2@15415>   MOVE.w lasta6,(A1)+
0003369A <AmiBlitz3.ab2@15416>   CLR.w (A1)+
0003369C <AmiBlitz3.ab2@15417>   CLR.w (A1)+
000336A2 <AmiBlitz3.ab2@15418>   MOVE.l A1,forthsp
000336B4 <AmiBlitz3.ab2@15420>    !compare2
000336B8 <AmiBlitz3.ab2@15421>    BEQ.w JL_0_B224
000336BC <AmiBlitz3.ab2@15422>   CMP.w #".",D0
000336C0 <AmiBlitz3.ab2@15423>    BEQ.w JL_0_B21E
000336C4 <AmiBlitz3.ab2@15424>   CMP.w #"#",D0
000336C8 <AmiBlitz3.ab2@15425>    BEQ.w get_constant
000336CC <AmiBlitz3.ab2@15426>   CMP.w #"$",D0
000336D0 <AmiBlitz3.ab2@15427>    BEQ.w get_hexconstant
000336D4 <AmiBlitz3.ab2@15428>   CMP.w #"%",D0
000336D8 <AmiBlitz3.ab2@15429>    BEQ.w JL_0_A8C0
000336DC <AmiBlitz3.ab2@15430>   CMP.w #-$7FD1,D0
000336E0 <AmiBlitz3.ab2@15431>    BEQ.w _SizeOf
000336E4 <AmiBlitz3.ab2@15432>   CMP.w #-$7F46,D0
000336E8 <AmiBlitz3.ab2@15433>    BEQ.w JL_0_A44E
000336EC <AmiBlitz3.ab2@15434>   CMP.w #-$7F3B,D0
000336F0 <AmiBlitz3.ab2@15435>    BEQ.w JL_0_A83C
000336F4 <AmiBlitz3.ab2@15436>   CMP.w #-$7F3A,D0
000336F8 <AmiBlitz3.ab2@15437>    BEQ.w JL_0_A846
000336FE <AmiBlitz3.ab2@15438>   MOVE.w constmode,D1
00033702 <AmiBlitz3.ab2@15439>    BEQ.w JL_0_A776
00033724 <AmiBlitz3.ab2@15440>    !compare1                                               ;bsr.w tstalpha
00033728 <AmiBlitz3.ab2@15441>    BEQ.w JL_0_AF22
0003372C <AmiBlitz3.ab2@15442>   CMP.w #$5F,D0
00033730 <AmiBlitz3.ab2@15443>    BEQ.w JL_0_AF22
00033734 <AmiBlitz3.ab2@15444>   CMP.w #$22,D0
00033738 <AmiBlitz3.ab2@15445>    BEQ.w JL_0_AF00
0003373C <AmiBlitz3.ab2@15446> BRA.w syntaxerr
00033742 <AmiBlitz3.ab2@15450>   MOVE.w cfetchmode,D1
00033746 <AmiBlitz3.ab2@15451>   BEQ.w JL_0_A784
0003374A <AmiBlitz3.ab2@15452> BRA.w badconerr
00033750 <AmiBlitz3.ab2@15455> JMP syntaxerropt4
00033752 <AmiBlitz3.ab2@15459>   NOT.w -(A1)
00033774 <AmiBlitz3.ab2@15460>   !compare1                                                ;bsr.w tstalpha
00033778 <AmiBlitz3.ab2@15461>    BEQ.w JL_0_AF4C
0003377C <AmiBlitz3.ab2@15462>   CMP.w #$2A,D0
00033780 <AmiBlitz3.ab2@15463>    BEQ.w JL_0_AF4C
00033784 <AmiBlitz3.ab2@15464>   CMP.w #$5C,D0
00033788 <AmiBlitz3.ab2@15465>    BEQ.w JL_0_AF4C
0003378C <AmiBlitz3.ab2@15466>   CMP.w #$22,D0
00033790 <AmiBlitz3.ab2@15467>    BEQ.w JL_0_ADC0
00033794 <AmiBlitz3.ab2@15468>   BTST #$F,D0
00033798 <AmiBlitz3.ab2@15469>    BNE.w JL_0_AAF2
0003379C <AmiBlitz3.ab2@15470>   CMP.w #$26,D0
000337A0 <AmiBlitz3.ab2@15471>    BEQ.w JL_0_A90E
000337A4 <AmiBlitz3.ab2@15472>   CMP.w #$3F,D0
000337A8 <AmiBlitz3.ab2@15473>    BEQ.w JL_0_AED4
000337AC <AmiBlitz3.ab2@15476>   CMP.b #"@",d0
000337B0 <AmiBlitz3.ab2@15477>    BNE syntaxerr
000337B6 <AmiBlitz3.ab2@15478>   TST.b newsyntax
000337BA <AmiBlitz3.ab2@15479>    BEQ JUMP_syntaxerropt4
000337C0 <AmiBlitz3.ab2@15480>   MOVE.w regnum,D1
000337C2 <AmiBlitz3.ab2@15481>   LSL.w #8,D1
000337C4 <AmiBlitz3.ab2@15482>   LSL.w #1,D1
000337C8 <AmiBlitz3.ab2@15483>   ORI.w #$203C,D1
000337CC <AmiBlitz3.ab2@15484>   BSR.w writeword
000337D0 <AmiBlitz3.ab2@15485>   CMP.b #$22,(a5)
000337D4 <AmiBlitz3.ab2@15486>    BNE syntaxerr
000337D6 <AmiBlitz3.ab2@15487>   ADDQ #1,a5
000337D8 <AmiBlitz3.ab2@15488>   MOVEQ #0,d0
000337DC <AmiBlitz3.ab2@15489>   CMP.b #1,d2
000337E0 <AmiBlitz3.ab2@15490>    BEQ 'l3b
000337E4 <AmiBlitz3.ab2@15491>   CMP.b #2,d2
000337E8 <AmiBlitz3.ab2@15492>    BEQ 'l2b
000337EC <AmiBlitz3.ab2@15493>   CMP.b #4,d2
000337F0 <AmiBlitz3.ab2@15494>    BEQ error_convert_types
000337F2 <AmiBlitz3.ab2@15495>   MOVE.b (a5)+,d0
000337F6 <AmiBlitz3.ab2@15496>   BEQ syntaxerr
000337FA <AmiBlitz3.ab2@15497>   CMP.b #$22,d0
000337FE <AmiBlitz3.ab2@15498>   BNE 'l1
00033802 <AmiBlitz3.ab2@15499>     MOVE.b #0,d0
00033806 <AmiBlitz3.ab2@15500> BRA 'do
00033808 <AmiBlitz3.ab2@15503>   ASL.l #8,d0
0003380A <AmiBlitz3.ab2@15504>   MOVE.b (a5)+,d0
0003380E <AmiBlitz3.ab2@15505>   BEQ syntaxerr
00033812 <AmiBlitz3.ab2@15506>   CMP.b #$22,d0
00033816 <AmiBlitz3.ab2@15507>   BNE 'l2
0003381A <AmiBlitz3.ab2@15508>     MOVE.b #0,d0
0003381C <AmiBlitz3.ab2@15509>     ASR.l #8,d0
00033820 <AmiBlitz3.ab2@15510> BRA 'do
00033822 <AmiBlitz3.ab2@15513>   ASL.l #8,d0
00033824 <AmiBlitz3.ab2@15516>   MOVE.b (a5)+,d0
00033828 <AmiBlitz3.ab2@15517>    BEQ syntaxerr
0003382C <AmiBlitz3.ab2@15518>    CMP.b #$22,d0
00033830 <AmiBlitz3.ab2@15519>    BNE 'l3
00033834 <AmiBlitz3.ab2@15520>    MOVE.b #0,d0
00033836 <AmiBlitz3.ab2@15521>    ASR.l #8,d0
0003383A <AmiBlitz3.ab2@15522> BRA 'do
0003383C <AmiBlitz3.ab2@15525>   ASL.l #8,d0
0003383E <AmiBlitz3.ab2@15528>   MOVE.b (a5)+,d0
00033842 <AmiBlitz3.ab2@15529>    BEQ syntaxerr
00033846 <AmiBlitz3.ab2@15530>    CMP.b #$22,d0
0003384A <AmiBlitz3.ab2@15531>    BNE 'l4
0003384E <AmiBlitz3.ab2@15532>    MOVE.b #0,d0
00033850 <AmiBlitz3.ab2@15533>    ASR.l #8,d0
00033854 <AmiBlitz3.ab2@15534> BRA 'do
00033858 <AmiBlitz3.ab2@15537>    CMP.b #$22,(a5)+
0003385C <AmiBlitz3.ab2@15538>    BNE JUMP_error4char
0003385E <AmiBlitz3.ab2@15541>   MOVE.l d0,d1
00033862 <AmiBlitz3.ab2@15542>     BSR writelong
00033866 <AmiBlitz3.ab2@15543>     BSR get1bytemain
00033868 <AmiBlitz3.ab2@15544> RTS
0003386C <AmiBlitz3.ab2@15548>   BSR.w get1bytemain
00033870 <AmiBlitz3.ab2@15549>   CMP.w #$2E,D0
00033874 <AmiBlitz3.ab2@15550>    BEQ.b JL_0_A7F4
0003387E <AmiBlitz3.ab2@15552>   MOVE.w oldqflag,instringon
00033884 <AmiBlitz3.ab2@15553>   MOVEA.l lastsourcepos,A5
00033886 <AmiBlitz3.ab2@15554>   MOVE.w D2,-(A7)
0003388A <AmiBlitz3.ab2@15555>    BSR.w getparameter2
0003388E <AmiBlitz3.ab2@15556>    BEQ.w syntaxerr
00033894 <AmiBlitz3.ab2@15557>   LEA varbase,A2
00033898 <AmiBlitz3.ab2@15558>    BSR.w findvariable
0003389C <AmiBlitz3.ab2@15559>    BNE.w notypeerr
000338A0 <AmiBlitz3.ab2@15560>   MOVE.w $4(A2),D3
000338A2 <AmiBlitz3.ab2@15561>   EXT.l D3
000338A4 <AmiBlitz3.ab2@15562>   MOVE.w (A7)+,D2
000338A8 <AmiBlitz3.ab2@15563> BRA.w JL_0_B46E
000338AA <AmiBlitz3.ab2@15567>   MOVE.w D2,-(A7)
000338AE <AmiBlitz3.ab2@15568>    BSR.w getparameter2
000338B2 <AmiBlitz3.ab2@15569>    BEQ.w syntaxerr
000338B8 <AmiBlitz3.ab2@15570>   LEA newtypebase,A2
000338BC <AmiBlitz3.ab2@15571>    BSR.w findtype
000338C0 <AmiBlitz3.ab2@15572>    BNE.w notypeerr
000338C2 <AmiBlitz3.ab2@15573>   MOVEQ.l #$00,D3
000338C6 <AmiBlitz3.ab2@15574>   CMP.w #$5C,D0
000338CA <AmiBlitz3.ab2@15575>    BNE.w JL_0_A832
000338CE <AmiBlitz3.ab2@15576>    BSR.w getparameter2
000338D2 <AmiBlitz3.ab2@15577>    BEQ.w syntaxerr
000338D6 <AmiBlitz3.ab2@15578>   LEA $4(A2),A2
000338DA <AmiBlitz3.ab2@15579>    BSR.w findvariable2
000338DE <AmiBlitz3.ab2@15580>    BNE.w noofferr
000338E2 <AmiBlitz3.ab2@15581>   MOVE.w $4(A2),D3
000338E6 <AmiBlitz3.ab2@15582> BRA.w JL_0_A836
000338EA <AmiBlitz3.ab2@15586>   MOVE.w $8(A2),D3
000338EC <AmiBlitz3.ab2@15589>   MOVE.w (A7)+,D2
000338F0 <AmiBlitz3.ab2@15590> BRA.w JL_0_B46E
000338F2 <AmiBlitz3.ab2@15594>   MOVEQ.l #-$01,D3
000338F6 <AmiBlitz3.ab2@15595>    BSR.w get1bytemain
000338FA <AmiBlitz3.ab2@15596> BRA.w JL_0_B46E
000338FC <AmiBlitz3.ab2@15600>   MOVEQ.l #$00,D3
00033900 <AmiBlitz3.ab2@15601>    BSR.w get1bytemain
00033904 <AmiBlitz3.ab2@15602> BRA.w JL_0_B46E
00033908 <AmiBlitz3.ab2@15606>   CMP.w #$30,D0
0003390C <AmiBlitz3.ab2@15607>    BCS.w JL_0_A876
00033910 <AmiBlitz3.ab2@15608>   CMP.w #$39,D0
00033914 <AmiBlitz3.ab2@15609>    BLS.w JL_0_A874
00033918 <AmiBlitz3.ab2@15610>   ANDI.w #$FFDF,D0
0003391C <AmiBlitz3.ab2@15611>   CMP.w #$46,D0
00033920 <AmiBlitz3.ab2@15612>    BHI.w JL_0_A876
00033924 <AmiBlitz3.ab2@15613>   CMP.w #$41,D0
00033928 <AmiBlitz3.ab2@15614>    BCS.w JL_0_A876
0003392A <AmiBlitz3.ab2@15617>    CMP.w D0,D0
0003392C <AmiBlitz3.ab2@15620> RTS
00033930 <AmiBlitz3.ab2@15624>   CMP.w #$31,D0
00033934 <AmiBlitz3.ab2@15625>    BEQ.w JL_0_A884
00033938 <AmiBlitz3.ab2@15626>   CMP.w #$30,D0
0003393A <AmiBlitz3.ab2@15629> RTS
0003393C <AmiBlitz3.ab2@15633>    MOVEQ #0,d0
0003393E <AmiBlitz3.ab2@15634>    MOVE.b (a5)+,d0
00033940 <AmiBlitz3.ab2@15635>    MOVE.b (a5)+,d0
00033944 <AmiBlitz3.ab2@15636>    BSR ishex
00033948 <AmiBlitz3.ab2@15637>    BNE syntaxerr
0003394C <AmiBlitz3.ab2@15638>    SUBI.w #$30,D0
00033950 <AmiBlitz3.ab2@15639>    CMP.w #$9,D0
00033954 <AmiBlitz3.ab2@15640>    BLS.w 'l1
00033956 <AmiBlitz3.ab2@15641>    SUBQ.w #7,D0
00033958 <AmiBlitz3.ab2@15644>    MOVE.l d0,d1
0003395A <AmiBlitz3.ab2@15645>    MOVE.b (a5)+,d0
0003395E <AmiBlitz3.ab2@15646>      BSR ishex
00033962 <AmiBlitz3.ab2@15647>     BNE syntaxerr
00033964 <AmiBlitz3.ab2@15648>     LSL.l #4,d1
00033968 <AmiBlitz3.ab2@15649>     SUBI.w #$30,D0
0003396C <AmiBlitz3.ab2@15650>    CMP.w #$9,D0
00033970 <AmiBlitz3.ab2@15651>    BLS.w 'l2
00033972 <AmiBlitz3.ab2@15652>    SUBQ.w #7,D0
00033974 <AmiBlitz3.ab2@15655>   ADD.l d1,d0
00033976 <AmiBlitz3.ab2@15656> RTS
0003397A <AmiBlitz3.ab2@15660>    BSR.w get1bytemain
0003397E <AmiBlitz3.ab2@15661>    BSR.w ishex
00033982 <AmiBlitz3.ab2@15662>    BNE.w syntaxerr
00033984 <AmiBlitz3.ab2@15663>   MOVEQ.l #$00,D3
00033988 <AmiBlitz3.ab2@15664>   CMP.w #5,d2
0003398C <AmiBlitz3.ab2@15665>   BNE JL_0_A894
00033992 <AmiBlitz3.ab2@15666>   CMP.l #newtype_double,a2
00033996 <AmiBlitz3.ab2@15667>   BEQ 'doit
0003399C <AmiBlitz3.ab2@15668>   CMP.l #newtype_float,a2
000339A0 <AmiBlitz3.ab2@15669>   BNE JL_0_A894
000339A8 <AmiBlitz3.ab2@15672>    fmove.s #0,fp0
000339AE <AmiBlitz3.ab2@15674>   TST.b fpu
000339B2 <AmiBlitz3.ab2@15675>   BEQ JL_0_A894
000339B8 <AmiBlitz3.ab2@15676>   fmove.w #16,fp1
000339BC <AmiBlitz3.ab2@15677>   fmul.x fp1,fp0
000339C0 <AmiBlitz3.ab2@15678>   SUBI.w #$30,D0
000339C4 <AmiBlitz3.ab2@15679>   CMP.w #$9,D0
000339C8 <AmiBlitz3.ab2@15680>    BLS.w JL_0_A8AEa
000339CA <AmiBlitz3.ab2@15681>   SUBQ.w #7,D0
000339CE <AmiBlitz3.ab2@15684>    fmove.w d0,fp1
000339D2 <AmiBlitz3.ab2@15685>    fadd.x fp1,fp0
000339D6 <AmiBlitz3.ab2@15686>    BSR.w get1bytemain
000339DA <AmiBlitz3.ab2@15687>    BSR.w ishex
000339DE <AmiBlitz3.ab2@15688>    BEQ.w JL_0_A894a
000339E2 <AmiBlitz3.ab2@15689> BRA.w nofpregload
000339E8 <AmiBlitz3.ab2@15693>   CMP.l #$10000000,D3
000339EC <AmiBlitz3.ab2@15694>    BCC.w overerr
000339EE <AmiBlitz3.ab2@15695>   LSL.l #4,D3
000339F2 <AmiBlitz3.ab2@15696>   SUBI.w #$30,D0
000339F6 <AmiBlitz3.ab2@15697>   CMP.w #$9,D0
000339FA <AmiBlitz3.ab2@15698>    BLS.w JL_0_A8AE
000339FC <AmiBlitz3.ab2@15699>   SUBQ.w #7,D0
000339FE <AmiBlitz3.ab2@15702>   OR.w D0,D3
00033A02 <AmiBlitz3.ab2@15703>    BSR.w get1bytemain
00033A06 <AmiBlitz3.ab2@15704>    BSR.w ishex
00033A0A <AmiBlitz3.ab2@15705>    BEQ.w JL_0_A894
00033A0E <AmiBlitz3.ab2@15706> BRA.w JL_0_B46E
00033A12 <AmiBlitz3.ab2@15710>    BSR.w get1bytemain
00033A16 <AmiBlitz3.ab2@15711>    BSR.w JL_0_A878
00033A1A <AmiBlitz3.ab2@15712>    BNE.w syntaxerr
00033A1C <AmiBlitz3.ab2@15713>    MOVEQ.l #$00,D3
00033A1E <AmiBlitz3.ab2@15716>    LSL.l #1,D3
00033A22 <AmiBlitz3.ab2@15717>    BCS.w overerr
00033A26 <AmiBlitz3.ab2@15718>   SUBI.w #$30,D0
00033A28 <AmiBlitz3.ab2@15719>   OR.w D0,D3
00033A2C <AmiBlitz3.ab2@15720>    BSR.w get1bytemain
00033A30 <AmiBlitz3.ab2@15721>    BSR.w JL_0_A878
00033A34 <AmiBlitz3.ab2@15722>    BEQ.w JL_0_A8CE
00033A38 <AmiBlitz3.ab2@15723> BRA.w JL_0_B46E
00033A3A <AmiBlitz3.ab2@15727>    MOVE.w d2,-(A7)
00033A42 <AmiBlitz3.ab2@15728>    MOVE.b #0,automode
00033A46 <AmiBlitz3.ab2@15729>    CMP.b #"@",(a5)
00033A4A <AmiBlitz3.ab2@15730>    BNE 'l1
00033A4C <AmiBlitz3.ab2@15731>    ADDQ.l #1,a5
00033A54 <AmiBlitz3.ab2@15732>    MOVE.b #1,automode
00033A58 <AmiBlitz3.ab2@15733>    BSR getparameter2
00033A5C <AmiBlitz3.ab2@15734>    BSR findlabel2
00033A60 <AmiBlitz3.ab2@15735>    BNE 'addit
00033A64 <AmiBlitz3.ab2@15736> BRA errormsg_autocount
00033A68 <AmiBlitz3.ab2@15739>   BSR.w addlabelhash
00033A70 <AmiBlitz3.ab2@15740>   MOVE.l #$1,$4(A2)
00033A74 <AmiBlitz3.ab2@15741>   MOVEM.l a2/a5,-(a7)
00033A7A <AmiBlitz3.ab2@15742>   MOVE.w lastchar,-(a7)
00033A80 <AmiBlitz3.ab2@15743>   LEA autostorename,a5
00033A84 <AmiBlitz3.ab2@15744>   BSR getparameter2
00033A88 <AmiBlitz3.ab2@15745>   BSR findlabel2
00033A8C <AmiBlitz3.ab2@15746>   BEQ 'found
00033A90 <AmiBlitz3.ab2@15747>   BSR.w addlabelhash
00033A98 <AmiBlitz3.ab2@15748>   MOVE.l #$1,$4(A2)
00033AA0 <AmiBlitz3.ab2@15749>   MOVE.l #0,8(a2)
00033AA2 <AmiBlitz3.ab2@15752>    MOVE.w (a7)+,d0
00033AA8 <AmiBlitz3.ab2@15753>    MOVE.w d0,lastchar
00033AAC <AmiBlitz3.ab2@15754>   MOVE.l 8(a2),d3
00033AB4 <AmiBlitz3.ab2@15755>   ADD.l #1,8(a2)
00033AB8 <AmiBlitz3.ab2@15756>   MOVEM.l (a7)+,a2/a5
00033ABC <AmiBlitz3.ab2@15757>   MOVE.l d3,8(a2)
00033AC0 <AmiBlitz3.ab2@15758>   MOVE.l $8(A2),D3
00033AC4 <AmiBlitz3.ab2@15759> BRA.l 'l3
00033AC8 <AmiBlitz3.ab2@15762>   BSR.w getparameter2
00033ACE <AmiBlitz3.ab2@15763>     TST.b incnif
00033AD2 <AmiBlitz3.ab2@15764>     BEQ 'lc1
00033AD6 <AmiBlitz3.ab2@15765>     BSR.w findlabel2
00033ADA <AmiBlitz3.ab2@15766>     BNE 'l5
00033ADC <AmiBlitz3.ab2@15767>     MOVEQ #1,d3
00033ADE <AmiBlitz3.ab2@15768>     MOVE.w (A7)+,D2
00033AE2 <AmiBlitz3.ab2@15769> BRA JL_0_B46E
00033AE4 <AmiBlitz3.ab2@15772>   MOVEQ #0,d3
00033AE6 <AmiBlitz3.ab2@15773>     MOVE.w (A7)+,D2
00033AEA <AmiBlitz3.ab2@15774> BRA JL_0_B46E
00033AEE <AmiBlitz3.ab2@15777>    BSR.w findlabel2
00033AF2 <AmiBlitz3.ab2@15778>    BNE.w cnferr
00033AFA <AmiBlitz3.ab2@15781>    CMPI.l #$1,$4(A2)
00033AFE <AmiBlitz3.ab2@15782>    BNE.w cnferr
00033B02 <AmiBlitz3.ab2@15784>    MOVE.l $8(A2),D3
00033B04 <AmiBlitz3.ab2@15785>    MOVE.w (A7)+,D2
00033B08 <AmiBlitz3.ab2@15786> BRA.w JL_0_B46E
00033B0E <AmiBlitz3.ab2@15790>   CLR.w vartype
00033B12 <AmiBlitz3.ab2@15791>   BSR.w JL_0_A916
00033B14 <AmiBlitz3.ab2@15792>   MOVEQ.l #$03,D2
00033B16 <AmiBlitz3.ab2@15793> RTS
00033B1A <AmiBlitz3.ab2@15797>    BSR.w get1bytemain
00033B2C <AmiBlitz3.ab2@15798>    !compare2
00033B30 <AmiBlitz3.ab2@15799>    BEQ andop2
00033B34 <AmiBlitz3.ab2@15800>    BSR.w getparameter
00033B38 <AmiBlitz3.ab2@15801>    BSR.w JL_0_8E3C
00033B3C <AmiBlitz3.ab2@15802>    BSR.w calcvar
00033B40 <AmiBlitz3.ab2@15803>   CMP.b #$7,D2
00033B44 <AmiBlitz3.ab2@15804>    BNE.w JL_0_A960
00033B48 <AmiBlitz3.ab2@15805>   BTST #$F,D2
00033B4C <AmiBlitz3.ab2@15806>    BNE.w JL_0_A94A
00033B52 <AmiBlitz3.ab2@15807>   MOVE.w D3,stamp2+2
00033B58 <AmiBlitz3.ab2@15808>   MOVE.l stamp2,D1
00033B5C <AmiBlitz3.ab2@15809>    BSR.w pokela5s
00033B60 <AmiBlitz3.ab2@15810> BRA.w JL_0_A978
00033B66 <AmiBlitz3.ab2@15814>   MOVE.w regnum,D1
00033B68 <AmiBlitz3.ab2@15815>   LSL.w #8,D1
00033B6A <AmiBlitz3.ab2@15816>   LSL.w #1,D1
00033B70 <AmiBlitz3.ab2@15817>   OR.w stamp,D1
00033B74 <AmiBlitz3.ab2@15818>    BSR.w writeword
00033B76 <AmiBlitz3.ab2@15819> RTS
00033B7A <AmiBlitz3.ab2@15823>   BTST #$F,D2
00033B7E <AmiBlitz3.ab2@15824>    BNE.w JL_0_A978
00033B84 <AmiBlitz3.ab2@15825>   MOVE.w D3,leaamp+2
00033B8A <AmiBlitz3.ab2@15826>   MOVE.l leaamp,D1
00033B8E <AmiBlitz3.ab2@15827>    BSR.w pokela5s
00033B94 <AmiBlitz3.ab2@15830>   MOVE.w regnum,D1
00033B96 <AmiBlitz3.ab2@15831>   LSL.w #8,D1
00033B98 <AmiBlitz3.ab2@15832>   LSL.w #1,D1
00033B9E <AmiBlitz3.ab2@15833>   OR.w leaamp2,D1
00033BA2 <AmiBlitz3.ab2@15834> BRA.w writeword
00033BA6 <AmiBlitz3.ab2@15838>   MOVE.w #$D200,D1
00033BAA <AmiBlitz3.ab2@15839>    BSR.w Atokejsr
00033BAC <AmiBlitz3.ab2@15840>   MOVEQ.l #$03,D2
00033BAE <AmiBlitz3.ab2@15841> RTS
00033BB2 <AmiBlitz3.ab2@15845> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
00033BB4 <AmiBlitz3.ab2@15846>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
00033BB6 <AmiBlitz3.ab2@15847>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
00033BBA <AmiBlitz3.ab2@15853>    BSR.w get1bytemain
00033BBC <AmiBlitz3.ab2@15854>   MOVE.w D0,D1
00033BC0 <AmiBlitz3.ab2@15855>    BPL.w syntaxerr
00033BC2 <AmiBlitz3.ab2@15856>   MOVE.w D2,-(A7)
00033BC6 <AmiBlitz3.ab2@15857>   BCLR #$F,D1
00033BCA <AmiBlitz3.ab2@15858>    BSR.w searchinstr
00033BCE <AmiBlitz3.ab2@15859>   MOVE.l $12(A2),D0
00033BD2 <AmiBlitz3.ab2@15860>   TST.w -$2(A2,D0.L)
00033BD6 <AmiBlitz3.ab2@15861>    BEQ.w freeerr
00033BD8 <AmiBlitz3.ab2@15862>   MOVE.w (A7)+,D2
00033BDA <AmiBlitz3.ab2@15863> RTS
00033BDE <AmiBlitz3.ab2@15867>   MOVE.l $0(A5),D0
00033BE2 <AmiBlitz3.ab2@15868>    BNE.b ucodeskip
00033BE4 <AmiBlitz3.ab2@15869>   MOVEQ.l #-$01,D0
00033BE8 <AmiBlitz3.ab2@15870> BRA.b usedcodef
00033BEC <AmiBlitz3.ab2@15873>   SUB.l $0(A5),D0
00033BEE <AmiBlitz3.ab2@15876>   LSR.w #8,D0
00033BF2 <AmiBlitz3.ab2@15881>    MOVE.l $0(A5),D0
00033BF6 <AmiBlitz3.ab2@15882>    BNE.b ucodeskip2
00033BF8 <AmiBlitz3.ab2@15883>   MOVEQ.l #-$01,D0
00033BFC <AmiBlitz3.ab2@15884> BRA.b usedcode2f
00033C00 <AmiBlitz3.ab2@15887>   SUB.l $0(A5),D0                                          ;usedcode2
00033C02 <AmiBlitz3.ab2@15888>   LSR.w #8,D0
00033C04 <AmiBlitz3.ab2@15891>   LSR.w #8,D0
00033C06 <AmiBlitz3.ab2@15896>   MOVE.l D0,-(A7)
00033C08 <AmiBlitz3.ab2@15899>   MOVE.l (A7)+,D0
00033C0A <AmiBlitz3.ab2@15902>   MOVE.l D0,D0
00033C0E <AmiBlitz3.ab2@15908>   BSR.w JL_0_A9A0
00033C12 <AmiBlitz3.ab2@15910>   MOVE.w -$2(A2,D0.L),D3
00033C16 <AmiBlitz3.ab2@15911>   CMP.w #$9,D3
00033C1A <AmiBlitz3.ab2@15912>    BCC.w doused__skip
00033C1E <AmiBlitz3.ab2@15916>   LEA usedcode(PC),A0
00033C22 <AmiBlitz3.ab2@15917>   LEA usedcodef(PC),A1
00033C28 <AmiBlitz3.ab2@15919>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
00033C2C <AmiBlitz3.ab2@15920>   ANDI.w #$7,D3
00033C2E <AmiBlitz3.ab2@15921>   LSL.w #8,D3
00033C30 <AmiBlitz3.ab2@15922>   LSL.w #1,D3
00033C34 <AmiBlitz3.ab2@15923>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
00033C38 <AmiBlitz3.ab2@15924> BRA.w doused__skip2
00033C3C <AmiBlitz3.ab2@15929>   LEA usedcode2(PC),A0
00033C40 <AmiBlitz3.ab2@15930>   LEA usedcode2f(PC),A1
00033C46 <AmiBlitz3.ab2@15932>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
00033C48 <AmiBlitz3.ab2@15933>   SUBQ.w #8,D3
00033C4A <AmiBlitz3.ab2@15934>   LSL.w #8,D3
00033C4C <AmiBlitz3.ab2@15935>   LSL.w #1,D3
00033C50 <AmiBlitz3.ab2@15936>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
00033C54 <AmiBlitz3.ab2@15939>   MOVE.w -$6(A2,D0.L),D3
00033C58 <AmiBlitz3.ab2@15940>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
00033C5A <AmiBlitz3.ab2@15941>   ADDQ.w #4,D3
00033C5E <AmiBlitz3.ab2@15942>   MOVE.w D3,$2(A0)
00033C64 <AmiBlitz3.ab2@15943>   MOVE.w regnum,D1
00033C68 <AmiBlitz3.ab2@15944>    BEQ.w doused__skip3
00033C6C <AmiBlitz3.ab2@15945>   MOVE.w usedprep(PC),D1
00033C70 <AmiBlitz3.ab2@15946>    BSR.w writeword
00033C74 <AmiBlitz3.ab2@15949>   BSR.w pokecode
00033C7A <AmiBlitz3.ab2@15950>   MOVE.w regnum,D1
00033C7E <AmiBlitz3.ab2@15951>    BEQ.w doused__skip4
00033C80 <AmiBlitz3.ab2@15952>   LSL.w #8,D1
00033C82 <AmiBlitz3.ab2@15953>   LSL.w #1,D1
00033C86 <AmiBlitz3.ab2@15954>   OR.w usedfix(PC),D1
00033C8A <AmiBlitz3.ab2@15955>    BSR.w writeword
00033C8E <AmiBlitz3.ab2@15956>   MOVE.w useddone(PC),D1
00033C92 <AmiBlitz3.ab2@15957>    BSR.w writeword
00033C94 <AmiBlitz3.ab2@15960>    MOVEQ.l #$02,D2
00033C98 <AmiBlitz3.ab2@15961> BRA.w get1bytemain
00033C9C <AmiBlitz3.ab2@15969>    BSR.w JL_0_A9A0
00033C9E <AmiBlitz3.ab2@15971>   MOVEQ.l #$00,D3
00033CA2 <AmiBlitz3.ab2@15972>   MOVE.w -$4(A2,D0.L),D3
00033CA6 <AmiBlitz3.ab2@15973>    BSR.w get1bytemain
00033CAA <AmiBlitz3.ab2@15974> BRA.w JL_0_B46E
00033CAE <AmiBlitz3.ab2@15981>    BSR.w get1bytemain
00033CB0 <AmiBlitz3.ab2@15982>   MOVE.w D0,-(A7)
00033CB4 <AmiBlitz3.ab2@15983>    BSR.w get1bytemain
00033CB8 <AmiBlitz3.ab2@15984>   CMP.w #$28,D0
00033CBC <AmiBlitz3.ab2@15985>    BNE.w syntaxerr
00033CBE <AmiBlitz3.ab2@15986>   MOVE.w (A7)+,D0
00033CC2 <AmiBlitz3.ab2@15987>    BSR.w JL_0_C340
00033CC6 <AmiBlitz3.ab2@15988>    BSR.w reget
00033CCA <AmiBlitz3.ab2@15989>   CMP.w #$29,D0
00033CCE <AmiBlitz3.ab2@15990>    BNE.w syntaxerr
00033CD2 <AmiBlitz3.ab2@15994>   LEA addrcode(PC),A0
00033CD6 <AmiBlitz3.ab2@15995>   LEA addrcodef(PC),A1
00033CDC <AmiBlitz3.ab2@15996>   MOVE.w -$6(A2),$2(A0)
00033CE0 <AmiBlitz3.ab2@15997>   MOVE.w $4(A0),D1
00033CE4 <AmiBlitz3.ab2@15998>   ANDI.w #$FFF8,D1
00033CEA <AmiBlitz3.ab2@15999>   OR.w regnum,D1
00033CEE <AmiBlitz3.ab2@16000>   MOVE.w D1,$4(A0)
00033CF2 <AmiBlitz3.ab2@16001>   MOVE.w $6(A0),D1
00033CF6 <AmiBlitz3.ab2@16002>   ANDI.w #$F1FF,D1
00033CFC <AmiBlitz3.ab2@16003>   MOVE.w regnum,D0
00033CFE <AmiBlitz3.ab2@16004>   LSL.w #8,D0
00033D00 <AmiBlitz3.ab2@16005>   LSL.w #1,D0
00033D02 <AmiBlitz3.ab2@16006>   OR.w D0,D1
00033D06 <AmiBlitz3.ab2@16007>   MOVE.w D1,$6(A0)
00033D0A <AmiBlitz3.ab2@16008>    BSR.w pokecode
00033D0C <AmiBlitz3.ab2@16009>   MOVEQ.l #$03,D2
00033D10 <AmiBlitz3.ab2@16010> BRA.w get1bytemain
00033D14 <AmiBlitz3.ab2@16014>   CMP.w #-$7F4D,D0
00033D18 <AmiBlitz3.ab2@16015>    BHI.w JL_0_AAFE
00033D1C <AmiBlitz3.ab2@16016> BRA.w syntaxerr
00033D20 <AmiBlitz3.ab2@16020>    CMP.w #$b581,d0
00033D24 <AmiBlitz3.ab2@16021>    BNE nonull
00033D28 <AmiBlitz3.ab2@16022>    CMP.b #7,d2
00033D2C <AmiBlitz3.ab2@16023>    BEQ nonull
00033D30 <AmiBlitz3.ab2@16024>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
00033D36 <AmiBlitz3.ab2@16025>    MOVE.w regnum,d0
00033D38 <AmiBlitz3.ab2@16026>    ASL.l #7,d0
00033D3A <AmiBlitz3.ab2@16027>    ASL.l #2,d0
00033D3C <AmiBlitz3.ab2@16028>    OR.l d0,d1
00033D40 <AmiBlitz3.ab2@16029>    BSR writeword
00033D46 <AmiBlitz3.ab2@16030>    JSR get1bytemain
00033D48 <AmiBlitz3.ab2@16031>    RTS
00033D4C <AmiBlitz3.ab2@16033> nonull  CMP.w #-$7F4A,D0
00033D50 <AmiBlitz3.ab2@16034>    BEQ.w JL_0_A98C
00033D54 <AmiBlitz3.ab2@16035>   CMP.w #-$7F48,D0
00033D58 <AmiBlitz3.ab2@16036>    BEQ.w doaddr
00033D5C <AmiBlitz3.ab2@16037>   CMP.w #-$7F3C,D0
00033D60 <AmiBlitz3.ab2@16038>    BEQ.w domaximum
00033D64 <AmiBlitz3.ab2@16039>   CMP.w #-$7F2F,D0
00033D68 <AmiBlitz3.ab2@16040>    BEQ.w doused
00033D6A <AmiBlitz3.ab2@16041>   MOVE.w D2,-(A7)
00033D6C <AmiBlitz3.ab2@16042>   MOVE.w D0,D1
00033D70 <AmiBlitz3.ab2@16043>   BCLR #$F,D1
00033D74 <AmiBlitz3.ab2@16045>    BSR.w searchinstr
00033D76 <AmiBlitz3.ab2@16046>   MOVE.w (A3),D1
00033D7A <AmiBlitz3.ab2@16047>   BTST #$1,D1
00033D7E <AmiBlitz3.ab2@16048>    BEQ.w noreturn_                                         ;syntax error noreturn
00033D82 <AmiBlitz3.ab2@16049>   BTST #$2,D1
00033D86 <AmiBlitz3.ab2@16050>    BNE.w JL_0_AC1A
00033D88 <AmiBlitz3.ab2@16051>   LSR.w #8,D1
00033D8E <AmiBlitz3.ab2@16052>   BTST #$3,$1(A3)
00033D92 <AmiBlitz3.ab2@16053>    BEQ.w JL_0_AB4C
00033D98 <AmiBlitz3.ab2@16054>    JSR AJL_0_498A
00033D9A <AmiBlitz3.ab2@16057>    MOVE.w D1,-(A7)                                         ;is library instruction
00033D9E <AmiBlitz3.ab2@16058>   CMP.w #$7,D1
00033DA2 <AmiBlitz3.ab2@16059>    BNE.w JL_0_AB5E
00033DA4 <AmiBlitz3.ab2@16060>   MOVE.l A2,-(A7)
00033DA8 <AmiBlitz3.ab2@16061>    BSR.w makesbase
00033DAA <AmiBlitz3.ab2@16062>   MOVEA.l (A7)+,A2
00033DAE <AmiBlitz3.ab2@16065>     BSR.w JL_0_AFA2
00033DB0 <AmiBlitz3.ab2@16066>   MOVE.w D3,-(A7)
00033DB4 <AmiBlitz3.ab2@16067>    BSR.w get1bytemain
00033DB6 <AmiBlitz3.ab2@16068>   MOVEQ.l #$00,D1
00033DBA <AmiBlitz3.ab2@16069>   CMP.w #$28,D0
00033DBE <AmiBlitz3.ab2@16070>    BNE.w JL_0_AB80
00033DC2 <AmiBlitz3.ab2@16071>    BSR.w JL_0_66F6
00033DC4 <AmiBlitz3.ab2@16072>   TST.w D1
00033DC8 <AmiBlitz3.ab2@16073>    BEQ.w syntaxerr
00033DCC <AmiBlitz3.ab2@16074> BRA.w JL_0_AB84
00033DD6 <AmiBlitz3.ab2@16079>   MOVE.w oldqflag,instringon
00033DDC <AmiBlitz3.ab2@16080>   MOVEA.l lastsourcepos,A5
00033DE2 <AmiBlitz3.ab2@16083>    MOVE.w regnum,-(A7)
00033DEC <AmiBlitz3.ab2@16084>    MOVE.w regnum,regnumstore
00033DF2 <AmiBlitz3.ab2@16085>    TST.b fpu
00033DF6 <AmiBlitz3.ab2@16086>             BEQ 'nofloat
00033DFC <AmiBlitz3.ab2@16087>             CMP.w #$ffff,28(a3)
00033E00 <AmiBlitz3.ab2@16088>             BNE 'nofloat
00033E06 <AmiBlitz3.ab2@16089>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
00033E0A <AmiBlitz3.ab2@16090>             BEQ 'nofloat
00033E10 <AmiBlitz3.ab2@16091>             CMP.w #$3c02,34(a3)                            ;int skip
00033E14 <AmiBlitz3.ab2@16092>             BEQ 'quick
00033E18 <AmiBlitz3.ab2@16093>             CMP.b #5,(a3)
00033E1C <AmiBlitz3.ab2@16094>             BNE 'nofloat
00033E22 <AmiBlitz3.ab2@16097>             CLR.l load_var_addr
00033E26 <AmiBlitz3.ab2@16098> BRA 'isfpu
00033E2C <AmiBlitz3.ab2@16101>    CLR.w regnum
00033E2E <AmiBlitz3.ab2@16104>    MOVE.w D1,-(A7)
00033E34 <AmiBlitz3.ab2@16105>   BTST #$3,$1(A3)
00033E38 <AmiBlitz3.ab2@16106>    BEQ.w JL_0_ABB0
00033E3C <AmiBlitz3.ab2@16125>   MOVE.w $6(A7),D1
00033E42 <AmiBlitz3.ab2@16126>   MOVE.w d1,peeksize
00033E46 <AmiBlitz3.ab2@16136>   ORI.w #$7000,D1
00033E4A <AmiBlitz3.ab2@16137>   BSR.w writeword                                          ;write peekmode
00033E50 <AmiBlitz3.ab2@16140>   ADDQ.w #1,regnum
00033E52 <AmiBlitz3.ab2@16141>   MOVE.w (A7),D1
00033E5A <AmiBlitz3.ab2@16144>   MOVE.w 2(a7),tempregnum
00033E60 <AmiBlitz3.ab2@16145>   JSR JL_0_4878
00033E62 <AmiBlitz3.ab2@16146>   TST.w (A7)+
00033E66 <AmiBlitz3.ab2@16147>    BEQ.w JL_0_ABC6
00033E6A <AmiBlitz3.ab2@16148>   CMP.w #$29,D0
00033E6E <AmiBlitz3.ab2@16149>    BNE.w syntaxerr
00033E72 <AmiBlitz3.ab2@16150>    BSR.w get1bytemain
00033E74 <AmiBlitz3.ab2@16153>    MOVE.w (A7)+,D1
00033E7A <AmiBlitz3.ab2@16154>   MOVE.w D1,regnum
00033E7E <AmiBlitz3.ab2@16155>    BEQ.w JL_0_ABDE
00033E84 <AmiBlitz3.ab2@16156>    CMP.w #$3c01,24(a2)                                     ;val skipped
00033E88 <AmiBlitz3.ab2@16157>    BNE 'noval
00033E8E <AmiBlitz3.ab2@16158>    TST.b fpu
00033E92 <AmiBlitz3.ab2@16159>    BEQ 'noval
00033E98 <AmiBlitz3.ab2@16160>    CLR.l load_var_addr
00033E9A <AmiBlitz3.ab2@16161>    MOVEQ #0,d1
00033EA0 <AmiBlitz3.ab2@16162>    MOVE.w regnum,d1
00033EA2 <AmiBlitz3.ab2@16163>    LSL.l #7,d1
00033EA8 <AmiBlitz3.ab2@16164>    OR.l #$f2000000,d1
00033EAC <AmiBlitz3.ab2@16165>    BSR writelong
00033EB0 <AmiBlitz3.ab2@16166> BRA JL_0_ABDE
00033EB6 <AmiBlitz3.ab2@16170>    CMP.w #$3c02,24(a2)                                     ;int skipped
00033EBA <AmiBlitz3.ab2@16171>    BEQ 'quick
00033EBE <AmiBlitz3.ab2@16172>    CMP.b #5,d2
00033EC2 <AmiBlitz3.ab2@16173>    BNE 'nofpu
00033EC8 <AmiBlitz3.ab2@16174>    TST.b fpu
00033ECC <AmiBlitz3.ab2@16175>    BEQ 'nofpu
00033ED2 <AmiBlitz3.ab2@16180>    CLR.l load_var_addr
00033ED6 <AmiBlitz3.ab2@16181> BRA JL_0_ABDE
00033ED8 <AmiBlitz3.ab2@16184>   LSL.w #8,D1
00033EDA <AmiBlitz3.ab2@16185>   LSL.w #1,D1
00033EDE <AmiBlitz3.ab2@16186>   ORI.w #$2000,D1
00033EE2 <AmiBlitz3.ab2@16187>   BSR.w writeword                                          ;write move.l d0,dx
00033EE8 <AmiBlitz3.ab2@16188>   TST.b fpu
00033EEC <AmiBlitz3.ab2@16189>   BEQ JL_0_ABDE
00033EEE <AmiBlitz3.ab2@16190>   MOVEQ #0,d1
00033EF4 <AmiBlitz3.ab2@16191>   MOVE.w regnum,d1
00033EF6 <AmiBlitz3.ab2@16192>   LSL.l #7,d1
00033EFC <AmiBlitz3.ab2@16193>   OR.l #$f2000000,d1
00033EFE <AmiBlitz3.ab2@16197>        MOVE.w (A7)+,D3
00033F02 <AmiBlitz3.ab2@16198>        BEQ.w JL_0_ABFC
00033F08 <AmiBlitz3.ab2@16199>        TST.b fpu
00033F0C <AmiBlitz3.ab2@16200>        BEQ 'nofpu
00033F0E <AmiBlitz3.ab2@16201>       MOVE.l d0,-(a7)
00033F10 <AmiBlitz3.ab2@16202>        MOVE.l a0,-(a7)
00033F16 <AmiBlitz3.ab2@16203>        MOVE.l stacktrack,d1
00033F1C <AmiBlitz3.ab2@16204>        LEA fpustackbase,a0
00033F24 <AmiBlitz3.ab2@16205>        MOVE.w 0(a0,d1),regmask
00033F26 <AmiBlitz3.ab2@16206>        MOVE.l (a7)+,a0
00033F2A <AmiBlitz3.ab2@16207>       MOVE.w #8,d0
00033F2E <AmiBlitz3.ab2@16210>       BEQ 'ready
00033F34 <AmiBlitz3.ab2@16211>       BTST d0,regmask
00033F38 <AmiBlitz3.ab2@16212>       BEQ 'noa7
00033F3A <AmiBlitz3.ab2@16213>       MOVEQ #0,d1
00033F3C <AmiBlitz3.ab2@16214>       MOVE.w d0,d1
00033F3E <AmiBlitz3.ab2@16215>       SUBQ.w #1,d1
00033F40 <AmiBlitz3.ab2@16216>       ASL #7,d1
00033F46 <AmiBlitz3.ab2@16218>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
00033F4A <AmiBlitz3.ab2@16219>       BSR writelong
00033F50 <AmiBlitz3.ab2@16220>       SUBQ.l #2,stacktrack
00033F52 <AmiBlitz3.ab2@16223>       SUBQ.w #1,d0
00033F56 <AmiBlitz3.ab2@16224>       BNE 'loop
00033F58 <AmiBlitz3.ab2@16227>       MOVE.l (a7)+,d0
00033F5E <AmiBlitz3.ab2@16228>       SUBQ.l #2,stacktrack                                 ;int track
00033F62 <AmiBlitz3.ab2@16231>    MOVE.w #$4CDF,D1
00033F66 <AmiBlitz3.ab2@16232>    BSR.w writeword                                         ;write movem.l (a7)+,
00033F68 <AmiBlitz3.ab2@16233>   MOVEQ.l #$00,D1
00033F6A <AmiBlitz3.ab2@16234>   MOVEQ.l #$0F,D4
00033F6C <AmiBlitz3.ab2@16237>     LSL.w #1,D3
00033F6E <AmiBlitz3.ab2@16238>     ROXR.w #1,D1
00033F72 <AmiBlitz3.ab2@16239>   DBF D4,JL_0_ABF0
00033F76 <AmiBlitz3.ab2@16241>    BSR.w writeword
00033F7C <AmiBlitz3.ab2@16242>    TST.b fast
00033F80 <AmiBlitz3.ab2@16243>    BEQ JL_0_ABFC
00033F86 <AmiBlitz3.ab2@16244>    TST.w regnum
00033F8A <AmiBlitz3.ab2@16245>    BEQ JL_0_ABFC
00033F90 <AmiBlitz3.ab2@16246>    CMP.w #$3c0e,$1c(a3)                                    ;true
00033F94 <AmiBlitz3.ab2@16247>    BNE 'l1
00033F9A <AmiBlitz3.ab2@16248>    MOVE.w regnum,d1
00033F9C <AmiBlitz3.ab2@16249>    ASL.l #8,d1
00033F9E <AmiBlitz3.ab2@16250>    ASL.l #1,d1
00033FA2 <AmiBlitz3.ab2@16251>    OR.w #$70ff,d1
00033FAC <AmiBlitz3.ab2@16252>    SUB.l #12,destpointer
00033FB0 <AmiBlitz3.ab2@16253>    BSR writeword
00033FB6 <AmiBlitz3.ab2@16256>   CMP.w #$3c0f,$1c(a3)                                     ;false
00033FBA <AmiBlitz3.ab2@16257>    BNE 'l2
00033FC0 <AmiBlitz3.ab2@16258>     MOVE.w regnum,d1
00033FC2 <AmiBlitz3.ab2@16259>     ASL.l #8,d1
00033FC4 <AmiBlitz3.ab2@16260>     ASL.l #1,d1
00033FC8 <AmiBlitz3.ab2@16261>     OR.w #$7000,d1
00033FD2 <AmiBlitz3.ab2@16262>     SUB.l #12,destpointer
00033FD6 <AmiBlitz3.ab2@16263>     BSR writeword
00033FD8 <AmiBlitz3.ab2@16267>    MOVE.w (A7)+,D2
00033FDC <AmiBlitz3.ab2@16268>   CMP.w #$7,D2                                             ;destination var type
00033FE0 <AmiBlitz3.ab2@16269>    BNE.w JL_0_AC16
00033FE6 <AmiBlitz3.ab2@16270>   MOVE.w putstlen,D1
00033FEC <AmiBlitz3.ab2@16271>   OR.w regnum,D1
00033FF0 <AmiBlitz3.ab2@16272>    BSR.w writeword
00033FF4 <AmiBlitz3.ab2@16275> BRA.w JL_0_AF66
00033FF8 <AmiBlitz3.ab2@16279>   MOVE.w $6(A3),D1
00033FFC <AmiBlitz3.ab2@16280>    BSR.w uselib
00034000 <AmiBlitz3.ab2@16281>    BSR.w JL_0_AD40
00034002 <AmiBlitz3.ab2@16282>   MOVE.l D4,D1
00034004 <AmiBlitz3.ab2@16283>   MOVE.l D5,-(A7)
00034008 <AmiBlitz3.ab2@16284>    BSR.w JL_0_AD38
0003400C <AmiBlitz3.ab2@16285>   MOVE.w $A(A1),-(A7)
0003400E <AmiBlitz3.ab2@16286>   ADDQ.w #8,A3
00034010 <AmiBlitz3.ab2@16287>   MOVE.w (A3)+,-(A7)
00034012 <AmiBlitz3.ab2@16288>   MOVE.l A3,-(A7)
00034016 <AmiBlitz3.ab2@16289>    BSR.w get1bytemain
00034018 <AmiBlitz3.ab2@16290>   MOVE.w D0,-(A7)
0003401A <AmiBlitz3.ab2@16291>   MOVEQ.l #$00,D3
0003401C <AmiBlitz3.ab2@16294>   MOVE.b (A3)+,D1
00034020 <AmiBlitz3.ab2@16295>    BMI.w JL_0_AC6A
00034022 <AmiBlitz3.ab2@16296>   MOVEQ.l #$03,D2
00034024 <AmiBlitz3.ab2@16297>   ADDQ.w #1,D3
00034028 <AmiBlitz3.ab2@16298>   MOVEM.l D3/A3,-(A7)
0003402C <AmiBlitz3.ab2@16299>    BSR.w peval
00034032 <AmiBlitz3.ab2@16300>   SUBQ.w #4,a2offset
00034036 <AmiBlitz3.ab2@16301>   MOVEM.l (A7)+,D3/A3
0003403A <AmiBlitz3.ab2@16302>   CMP.w #$2C,D0
0003403E <AmiBlitz3.ab2@16303>    BEQ.w JL_0_AC40
00034040 <AmiBlitz3.ab2@16304>   TST.b (A3)
00034044 <AmiBlitz3.ab2@16305>    BPL.w syntaxerr
00034046 <AmiBlitz3.ab2@16308>   MOVE.w (A7)+,D1
0003404A <AmiBlitz3.ab2@16309>    BSR.w JL_0_AD04
0003404C <AmiBlitz3.ab2@16310>   MOVEA.l (A7)+,A3
0003404E <AmiBlitz3.ab2@16311>   SUBQ.w #1,D3
00034052 <AmiBlitz3.ab2@16312>    BMI.w JL_0_ACBE
00034054 <AmiBlitz3.ab2@16315>   TST.b (A3)+
00034058 <AmiBlitz3.ab2@16316>    BPL.w JL_0_AC78
0003405A <AmiBlitz3.ab2@16317>   SUBQ.w #1,A3
0003405C <AmiBlitz3.ab2@16320>     MOVEQ.l #$00,D1
0003405E <AmiBlitz3.ab2@16321>     MOVE.b -(A3),D1
00034062 <AmiBlitz3.ab2@16322>     BTST #$4,D1
00034066 <AmiBlitz3.ab2@16323>      BNE.w JL_0_ACAA
0003406C <AmiBlitz3.ab2@16324>     CMP.w regnum,D1
00034070 <AmiBlitz3.ab2@16325>      BCC.w JL_0_AC9E
00034072 <AmiBlitz3.ab2@16326>     BSET D1,D5
00034074 <AmiBlitz3.ab2@16327>     MOVEQ.l #$0F,D0
00034076 <AmiBlitz3.ab2@16328>     SUB.w D1,D0
00034078 <AmiBlitz3.ab2@16329>     BSET D0,D4
0003407A <AmiBlitz3.ab2@16332>     LSL.w #8,D1
0003407C <AmiBlitz3.ab2@16333>     LSL.w #1,D1
00034080 <AmiBlitz3.ab2@16334>     ORI.w #$201F,D1
00034084 <AmiBlitz3.ab2@16335>   BRA.w JL_0_ACB6
00034088 <AmiBlitz3.ab2@16338>     ANDI.w #$7,D1
0003408A <AmiBlitz3.ab2@16339>     LSL.w #8,D1
0003408C <AmiBlitz3.ab2@16340>     LSL.w #1,D1
00034090 <AmiBlitz3.ab2@16341>     ORI.w #$205F,D1
00034094 <AmiBlitz3.ab2@16344>      BSR.w writeword
00034098 <AmiBlitz3.ab2@16345>   DBF D3,JL_0_AC80
0003409E <AmiBlitz3.ab2@16348>   MOVE.w (A7)+,libjsr+2
000340A4 <AmiBlitz3.ab2@16349>   MOVE.w (A7)+,libbase+2
000340AA <AmiBlitz3.ab2@16350>   MOVE.l libbase,D1
000340AE <AmiBlitz3.ab2@16351>    BSR.w writelong
000340B4 <AmiBlitz3.ab2@16352>   MOVE.l libjsr,D1
000340B8 <AmiBlitz3.ab2@16353>    BSR.w writelong
000340BE <AmiBlitz3.ab2@16354>   MOVE.w regnum,D1
000340C2 <AmiBlitz3.ab2@16355>    BEQ.w JL_0_ACF4
000340C4 <AmiBlitz3.ab2@16356>   LSL.w #8,D1
000340C6 <AmiBlitz3.ab2@16357>   LSL.w #1,D1
000340CA <AmiBlitz3.ab2@16358>   ORI.w #$2000,D1
000340CE <AmiBlitz3.ab2@16359>    BSR.w writeword
000340D0 <AmiBlitz3.ab2@16362>   MOVE.l (A7)+,D1
000340D4 <AmiBlitz3.ab2@16363>    BSR.w JL_0_AD38
000340D6 <AmiBlitz3.ab2@16364>   MOVEQ.l #$03,D2
000340DA <AmiBlitz3.ab2@16365>    BSR.w reget
000340DE <AmiBlitz3.ab2@16366> BRA.w JL_0_AF66
000340E0 <AmiBlitz3.ab2@16369>   TST.w D3
000340E4 <AmiBlitz3.ab2@16370>    BEQ.w JL_0_AD1E
000340E8 <AmiBlitz3.ab2@16371>   CMP.w #$28,D1
000340EC <AmiBlitz3.ab2@16372>    BNE.w syntaxerr
000340F0 <AmiBlitz3.ab2@16373>   CMP.w #$29,D0
000340F4 <AmiBlitz3.ab2@16374>    BNE.w syntaxerr
000340F8 <AmiBlitz3.ab2@16375> BRA.w get1bytemain
000340FC <AmiBlitz3.ab2@16378>   CMP.w #$28,D1
00034100 <AmiBlitz3.ab2@16379>    BNE.w JL_0_AD36
00034104 <AmiBlitz3.ab2@16380>    BSR.w get1bytemain
00034108 <AmiBlitz3.ab2@16381>   CMP.w #$29,D0
0003410C <AmiBlitz3.ab2@16382>    BNE.w syntaxerr
00034110 <AmiBlitz3.ab2@16383> BRA.w get1bytemain
00034112 <AmiBlitz3.ab2@16386> RTS
00034114 <AmiBlitz3.ab2@16389>   TST.w D1
00034118 <AmiBlitz3.ab2@16390>    BNE.w writelong
0003411A <AmiBlitz3.ab2@16391> RTS
0003411E <AmiBlitz3.ab2@16395>   MOVE.w #$48E7,D4
00034120 <AmiBlitz3.ab2@16396>   SWAP D4
00034122 <AmiBlitz3.ab2@16397>   CLR.w D4
00034126 <AmiBlitz3.ab2@16398>   MOVE.w #$4CDF,D5
00034128 <AmiBlitz3.ab2@16399>   SWAP D5
0003412A <AmiBlitz3.ab2@16400>   CLR.w D5
00034130 <AmiBlitz3.ab2@16401>   MOVE.w regnum,D1
00034134 <AmiBlitz3.ab2@16402>    BEQ.w JL_0_AD74
00034138 <AmiBlitz3.ab2@16403>   BSET #$F,D4
0003413C <AmiBlitz3.ab2@16404>   BSET #$0,D5
00034140 <AmiBlitz3.ab2@16405>   CMP.w #$2,D1
00034144 <AmiBlitz3.ab2@16406>    BCS.w JL_0_AD72
00034148 <AmiBlitz3.ab2@16409>   BSET #$E,D4
0003414C <AmiBlitz3.ab2@16410>   BSET #$1,D5
0003414E <AmiBlitz3.ab2@16413> RTS
00034154 <AmiBlitz3.ab2@16416>   TST.w fuckpos
00034158 <AmiBlitz3.ab2@16417>   BNE.w JL_0_AD6A
0003415A <AmiBlitz3.ab2@16418> RTS
0003415C <AmiBlitz3.ab2@16421> fuckpos:  Ds.w 1
00034162 <AmiBlitz3.ab2@16425>   MOVE.w sbasegot,D1
00034166 <AmiBlitz3.ab2@16426>    BEQ.w makesbase__skip
0003416A <AmiBlitz3.ab2@16430>   MOVE.w sbgot(PC),D1
0003416E <AmiBlitz3.ab2@16431>    BNE.w makesbase__skip2
00034176 <AmiBlitz3.ab2@16435>   MOVE.w #$0002,sbgot
0003417C <AmiBlitz3.ab2@16436>   MOVE.w movea3a7,D1
00034180 <AmiBlitz3.ab2@16437> BRA.w writeword
00034182 <AmiBlitz3.ab2@16440> RTS
0003418A <AmiBlitz3.ab2@16445>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
00034190 <AmiBlitz3.ab2@16448>   MOVE.l #$C601,D1
00034198 <AmiBlitz3.ab2@16449>   MOVE.w #-1,sbasegot
0003419E <AmiBlitz3.ab2@16450>   MOVE.l d1,lastinstruction
000341A2 <AmiBlitz3.ab2@16451>   BSR.w Atokejsr
000341A4 <AmiBlitz3.ab2@16452> RTS
000341AE <AmiBlitz3.ab2@16457>   MOVE.l data1,litdata1
000341B4 <AmiBlitz3.ab2@16458>   TST.b fast
000341B8 <AmiBlitz3.ab2@16459>   BEQ 'l50                                                 ;optistring  seem impossible to get work
000341BC <AmiBlitz3.ab2@16463> BRA 'l50                                                   ;to deactivate
000341C2 <AmiBlitz3.ab2@16469>   TST.b optistring
000341C6 <AmiBlitz3.ab2@16470>   BNE.s 'l21
000341CC <AmiBlitz3.ab2@16471>   CLR.b string1
000341D4 <AmiBlitz3.ab2@16472>   MOVE.b #1,optistring
000341DA <AmiBlitz3.ab2@16473>   TST.b nostringopt
000341DE <AmiBlitz3.ab2@16474>   BNE 'l21
000341E0 <AmiBlitz3.ab2@16475>   MOVE.l a5,a4
000341E2 <AmiBlitz3.ab2@16476>   SUBQ.l #1,a4
000341E4 <AmiBlitz3.ab2@16479>     TST.b (a4)
000341E8 <AmiBlitz3.ab2@16480>     BMI 'l19a
000341EC <AmiBlitz3.ab2@16481>     BEQ.s 'l20
000341F0 <AmiBlitz3.ab2@16482>     CMP.b #$22,(a4)
000341F4 <AmiBlitz3.ab2@16483>     BEQ.s 'l19
000341FA <AmiBlitz3.ab2@16486>     TST.w string1
000341FE <AmiBlitz3.ab2@16487>     BNE 'l11
00034202 <AmiBlitz3.ab2@16488>     CMP.b #":",(a4)
00034206 <AmiBlitz3.ab2@16489>     BEQ.s 'l20
0003420A <AmiBlitz3.ab2@16490>     CMP.b #";",(a4)
0003420E <AmiBlitz3.ab2@16491>     BEQ.s 'l20
00034212 <AmiBlitz3.ab2@16492>     CMP.b #"+",(a4)
00034216 <AmiBlitz3.ab2@16493>     BEQ.s 'l21
0003421A <AmiBlitz3.ab2@16494>     CMP.b #",",(a4)
0003421E <AmiBlitz3.ab2@16495>     BEQ.s 'l20                                             ;was l21
00034222 <AmiBlitz3.ab2@16496>     CMP.b #")",(a4)
00034226 <AmiBlitz3.ab2@16497>     BEQ.s 'l20                                             ;was l21
00034228 <AmiBlitz3.ab2@16500>     ADDQ.l #1,a4
0003422C <AmiBlitz3.ab2@16501> BRA.s 'l10
00034234 <AmiBlitz3.ab2@16504>   BCHG #0,string1
00034238 <AmiBlitz3.ab2@16505> BRA 'l18
0003423A <AmiBlitz3.ab2@16508>   ADDQ.l #1,a4
0003423C <AmiBlitz3.ab2@16509>   TST.b (a4)
00034240 <AmiBlitz3.ab2@16510>   BEQ 'l21
00034244 <AmiBlitz3.ab2@16511> BRA 'l11
00034246 <AmiBlitz3.ab2@16514>   MOVE.l a5,a4
00034248 <AmiBlitz3.ab2@16515>   SUBQ.l #1,a4
0003424C <AmiBlitz3.ab2@16518>   CMP.b #$20,-(a4)
00034250 <AmiBlitz3.ab2@16519>   BEQ 'll1
00034254 <AmiBlitz3.ab2@16520>   CMP.b #"+",(a4)
00034258 <AmiBlitz3.ab2@16521>   BEQ 'l21
00034260 <AmiBlitz3.ab2@16536>   MOVE.b #2,optistring
00034268 <AmiBlitz3.ab2@16539>   CMP.b #2,optistring
0003426C <AmiBlitz3.ab2@16540>   BEQ.s 'l100
00034270 <AmiBlitz3.ab2@16543>   BSR.w makesbase
00034274 <AmiBlitz3.ab2@16544>   BSR.w pokedata1                                          ;writestringsizespace
00034278 <AmiBlitz3.ab2@16545>   BSR.w pokedata1
0003427A <AmiBlitz3.ab2@16548>   MOVEQ.l #$00,D2
00034280 <AmiBlitz3.ab2@16551>     MOVE.l a5,lastsourcepos
00034282 <AmiBlitz3.ab2@16552>     MOVEQ #0,d0
00034284 <AmiBlitz3.ab2@16553>     MOVE.b (a5)+,d0
00034286 <AmiBlitz3.ab2@16554>     TST.w D0
0003428A <AmiBlitz3.ab2@16555>      BEQ.w notqerr
0003428E <AmiBlitz3.ab2@16556>     CMP.w #$22,D0                                          ; --- " ---
00034292 <AmiBlitz3.ab2@16557>      BEQ.w JL_0_ADF6
00034296 <AmiBlitz3.ab2@16558>     CMP.b #"\",d0
0003429A <AmiBlitz3.ab2@16559>      BNE 'l1
0003429E <AmiBlitz3.ab2@16560>     CMP.b #"\",(a5)
000342A2 <AmiBlitz3.ab2@16561>      BNE 'l1
000342A8 <AmiBlitz3.ab2@16562>     TST.b newsyntax
000342AC <AmiBlitz3.ab2@16563>      BEQ 'l1
000342B2 <AmiBlitz3.ab2@16564>     CMP.w #"\\",1(a5)                                      ; new compiler constants
000342B6 <AmiBlitz3.ab2@16565>     BNE 'l2
000342B8 <AmiBlitz3.ab2@16566>     ADDQ #2,a5
000342BA <AmiBlitz3.ab2@16569>     ADDQ.w #1,D2
000342BC <AmiBlitz3.ab2@16570>     MOVE.w D0,D1
000342C0 <AmiBlitz3.ab2@16571>     BSR.w pokedata1b                                        ;writestring
000342C4 <AmiBlitz3.ab2@16572> BRA.w writestring
000342CA <AmiBlitz3.ab2@16575>     JSR check_newconstants
000342CE <AmiBlitz3.ab2@16576> BRA writestring
000342D4 <AmiBlitz3.ab2@16579>   NOT instringon
000342DA <AmiBlitz3.ab2@16580>   MOVE.w dontwrite,D1
000342DE <AmiBlitz3.ab2@16581>   BNE.w JL_0_AE0A
000342E6 <AmiBlitz3.ab2@16582>   CMP.b #2,optistring
000342EA <AmiBlitz3.ab2@16583>   BEQ 'l10
000342F0 <AmiBlitz3.ab2@16584>     MOVEA.l litdata1,A0
000342F2 <AmiBlitz3.ab2@16585>     CLR.w (A0)+                                            ;writesize
000342F4 <AmiBlitz3.ab2@16586>     MOVE.w D2,(A0)
000342F8 <AmiBlitz3.ab2@16590>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
000342FE <AmiBlitz3.ab2@16591>   ADDQ.l #1,data1
00034306 <AmiBlitz3.ab2@16592>   BCLR #$0,data1+3
00034308 <AmiBlitz3.ab2@16593>   MOVEQ.l #$07,D2
0003430C <AmiBlitz3.ab2@16594> BRA.w get1bytemain
00034310 <AmiBlitz3.ab2@16598>   BSR.w makename2
00034314 <AmiBlitz3.ab2@16599>   BSR.w findlabel2
00034318 <AmiBlitz3.ab2@16600>   BEQ.w JL_0_AE4A
0003431C <AmiBlitz3.ab2@16601>   BSR.w addlabelhash
00034320 <AmiBlitz3.ab2@16602>   CLR.l $4(A2)
00034324 <AmiBlitz3.ab2@16603>   CLR.l $8(A2)
0003432C <AmiBlitz3.ab2@16605>   MOVE.w linenumat+2,$10(A2)
00034332 <AmiBlitz3.ab2@16606>   MOVE.w linenumat,d0
00034334 <AmiBlitz3.ab2@16607>   MOVEQ #0,d1
00034338 <AmiBlitz3.ab2@16608>   MOVE.b -1(a2,d7),d1
0003433C <AmiBlitz3.ab2@16609>   MOVE.w d0,0(a2,d1)
00034340 <AmiBlitz3.ab2@16610> BRA.w JL_0_AE52
00034344 <AmiBlitz3.ab2@16613>   TST.l $8(A2)
00034348 <AmiBlitz3.ab2@16614>   BNE.w JL_0_AE88
0003434E <AmiBlitz3.ab2@16617>   MOVEA.l _execbase,A6
00034350 <AmiBlitz3.ab2@16618>   MOVEQ.l #$0C+2,D0
00034352 <AmiBlitz3.ab2@16619>   MOVEQ.l #$01,D1
00034358 <AmiBlitz3.ab2@16620>   MOVE.l mempool,a0
0003435C <AmiBlitz3.ab2@16621>   JSR _AllocPooled(a6)
0003435E <AmiBlitz3.ab2@16623>   MOVEA.l D0,A0
00034362 <AmiBlitz3.ab2@16624>   MOVE.l $4(A2),(A0)
00034366 <AmiBlitz3.ab2@16625>   MOVE.l A0,$4(A2)
0003436E <AmiBlitz3.ab2@16626>   MOVE.l destpointer,$4(A0)
00034372 <AmiBlitz3.ab2@16627>   ADDQ.l #2,$4(A0)
0003437A <AmiBlitz3.ab2@16628>   MOVE.w procnum,$8(A0)
00034382 <AmiBlitz3.ab2@16629>   MOVE.w linenumat+2,$A(A0)
0003438A <AmiBlitz3.ab2@16630>   MOVE.w linenumat,$c(a0)
0003438C <AmiBlitz3.ab2@16631> RTS
00034390 <AmiBlitz3.ab2@16634>   MOVE.l $4(A2),D1
00034394 <AmiBlitz3.ab2@16635>   BTST #$0,D1
00034398 <AmiBlitz3.ab2@16636>    BNE.w illlaberr
0003439E <AmiBlitz3.ab2@16637>   MOVE.w procnum,D1
000343A2 <AmiBlitz3.ab2@16638>   CMP.w $10(A2),D1
000343A6 <AmiBlitz3.ab2@16639>    BNE.w referr
000343A8 <AmiBlitz3.ab2@16640> RTS
000343AA <AmiBlitz3.ab2@16644>   MOVE.w D0,-(A7)
000343B2 <AmiBlitz3.ab2@16645>   CMP.b #2,optistring
000343B6 <AmiBlitz3.ab2@16646>   BEQ 'l10
000343BC <AmiBlitz3.ab2@16649>   MOVE.w numtoa0,D1
000343C0 <AmiBlitz3.ab2@16650>    BSR.w writeword
000343C4 <AmiBlitz3.ab2@16651>    BSR.w addoff
000343CA <AmiBlitz3.ab2@16652>   MOVE.l litdata1,D1
000343CE <AmiBlitz3.ab2@16653>    BSR.w writelong
000343D4 <AmiBlitz3.ab2@16654>   MOVE.w pushlen,D1
000343D8 <AmiBlitz3.ab2@16655>    BSR.w writeword
000343DC <AmiBlitz3.ab2@16656>   MOVE.w #$C600,D1
000343E0 <AmiBlitz3.ab2@16657>    BSR.w Atokejsr
000343E2 <AmiBlitz3.ab2@16658>   MOVE.w (A7)+,D0
000343E4 <AmiBlitz3.ab2@16659> RTS
000343E6 <AmiBlitz3.ab2@16662>   MOVEQ #0,d1
000343EA <AmiBlitz3.ab2@16663>   BSR.w pokedata1b
000343F0 <AmiBlitz3.ab2@16664>   MOVE.l destpointer,a4
000343F4 <AmiBlitz3.ab2@16665>   MOVE.w #$203c,d1
000343FA <AmiBlitz3.ab2@16666>   TST.w mode
000343FE <AmiBlitz3.ab2@16667>   BNE 'lm10
00034404 <AmiBlitz3.ab2@16668>    ADDQ.w #4,a2offset
00034408 <AmiBlitz3.ab2@16669>   MOVE.w #$2f3c,d1
0003440E <AmiBlitz3.ab2@16672>   TST.w mode
00034412 <AmiBlitz3.ab2@16673>   BEQ 'lm3
00034418 <AmiBlitz3.ab2@16674>   MOVE.w regnum,D0
0003441A <AmiBlitz3.ab2@16675>   LSL.w #8,D0
0003441C <AmiBlitz3.ab2@16676>   LSL.w #1,D0
0003441E <AmiBlitz3.ab2@16677>   OR.w d0,d1
00034422 <AmiBlitz3.ab2@16678>   BSR writeword
00034426 <AmiBlitz3.ab2@16679>   BSR.w addoff
0003442C <AmiBlitz3.ab2@16680>   MOVE.l litdata1,D1
00034430 <AmiBlitz3.ab2@16681>   BSR.w writelong
00034438 <AmiBlitz3.ab2@16682>   CMP.w #3,mode
0003443C <AmiBlitz3.ab2@16683>   BEQ 'l30
00034442 <AmiBlitz3.ab2@16684>    ADDQ.w #4,a2offset
00034446 <AmiBlitz3.ab2@16685>   MOVE.w #$4878,D1
0003444A <AmiBlitz3.ab2@16686>   BSR.w writeword
0003444C <AmiBlitz3.ab2@16687>   MOVE.l d2,d1
00034450 <AmiBlitz3.ab2@16688>   BSR writeword
00034452 <AmiBlitz3.ab2@16691>   MOVE.w (A7)+,D0
00034454 <AmiBlitz3.ab2@16692> RTS
0003445A <AmiBlitz3.ab2@16695>   MOVE.l #$3f3c0007,d1
0003445E <AmiBlitz3.ab2@16696>   BSR writelong
00034464 <AmiBlitz3.ab2@16697>   MOVE.w regnum,D1
00034466 <AmiBlitz3.ab2@16698>   LSL.w #8,D1
00034468 <AmiBlitz3.ab2@16699>   LSL.w #1,D1
0003446C <AmiBlitz3.ab2@16700>   ORI.w #$2f3c,d1
00034470 <AmiBlitz3.ab2@16701>   BSR writeword
00034476 <AmiBlitz3.ab2@16702>    ADDQ.w #4,a2offset
00034478 <AmiBlitz3.ab2@16703>   MOVE.l d2,d1
0003447C <AmiBlitz3.ab2@16704>   BSR writelong
00034480 <AmiBlitz3.ab2@16705>   MOVE.w #$2f3c,d1
00034484 <AmiBlitz3.ab2@16706>   BSR writeword
00034488 <AmiBlitz3.ab2@16707>   BSR.w addoff
0003448E <AmiBlitz3.ab2@16708>   MOVE.l litdata1,D1
00034492 <AmiBlitz3.ab2@16709>   BSR.w writelong
00034494 <AmiBlitz3.ab2@16710>   MOVE.w (A7)+,D0
00034496 <AmiBlitz3.ab2@16711> RTS
0003449A <AmiBlitz3.ab2@16715>   BSR.w get1bytemain
0003449E <AmiBlitz3.ab2@16716>    BSR.w JL_0_AE22
000344A4 <AmiBlitz3.ab2@16717>   MOVE.w regnum,D1
000344A6 <AmiBlitz3.ab2@16718>   LSL.w #8,D1
000344A8 <AmiBlitz3.ab2@16719>   LSL.w #1,D1
000344AC <AmiBlitz3.ab2@16720>   ORI.w #$203C,D1
000344B0 <AmiBlitz3.ab2@16721>    BSR.w writeword
000344B4 <AmiBlitz3.ab2@16722>    BSR.w addoff
000344B8 <AmiBlitz3.ab2@16723>   MOVE.l $8(A2),D1
000344BC <AmiBlitz3.ab2@16724>    BSR.w writelong
000344BE <AmiBlitz3.ab2@16725>   MOVEQ.l #$03,D2
000344C2 <AmiBlitz3.ab2@16726> BRA.w reget
000344C4 <AmiBlitz3.ab2@16729>   MOVEQ.l #$00,D3
000344C8 <AmiBlitz3.ab2@16732>   BSR.w get1bytemain
000344CC <AmiBlitz3.ab2@16733>    BEQ.w syntaxerr
000344D0 <AmiBlitz3.ab2@16734>   CMP.w #$22,D0
000344D4 <AmiBlitz3.ab2@16735>    BEQ.w JL_0_AF1A
000344D6 <AmiBlitz3.ab2@16736>   LSL.l #8,D3
000344D8 <AmiBlitz3.ab2@16737>   MOVE.b D0,D3
000344DC <AmiBlitz3.ab2@16738> BRA.w JL_0_AF02
000344E0 <AmiBlitz3.ab2@16741>   BSR.w get1bytemain
000344E4 <AmiBlitz3.ab2@16742> BRA.w JL_0_B46E
000344E6 <AmiBlitz3.ab2@16745>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
000344EA <AmiBlitz3.ab2@16746>    BSR.w makename2
000344EE <AmiBlitz3.ab2@16747>    BSR.w findlabel2
000344F2 <AmiBlitz3.ab2@16748>    BEQ.w 'l10
000344F8 <AmiBlitz3.ab2@16749>    LEA ptr_parameterstore,a0
000344FE <AmiBlitz3.ab2@16750>    CMP.b #"@",-1(a0,d2.w)
00034502 <AmiBlitz3.ab2@16751>    BNE cnferr
00034506 <AmiBlitz3.ab2@16752>    CLR.b -1(a0,d2.w)
00034508 <AmiBlitz3.ab2@16753>    SUBQ.l #1,d2
0003450E <AmiBlitz3.ab2@16754>    LEA varbase,a2
00034512 <AmiBlitz3.ab2@16755>    BSR findvariable
00034516 <AmiBlitz3.ab2@16756>    BNE cnferr
0003451A <AmiBlitz3.ab2@16757>    CMP.b #"\",d0
0003451E <AmiBlitz3.ab2@16758>    BNE 'l6
00034524 <AmiBlitz3.ab2@16759>    ADDQ #1,lastsourcepos
00034528 <AmiBlitz3.ab2@16760>    MOVE.l $a(a2),a2
0003452A <AmiBlitz3.ab2@16761>    ADDQ.l #4,a2
0003452E <AmiBlitz3.ab2@16762>    BSR.w makename2
00034532 <AmiBlitz3.ab2@16763>    BSR findvariable2
00034536 <AmiBlitz3.ab2@16764>    BNE cnferr
0003453A <AmiBlitz3.ab2@16765> BRA.s 'l6                                                  ;???
0003453E <AmiBlitz3.ab2@16768>    MOVE.w $4(a2),d3
00034540 <AmiBlitz3.ab2@16769>    EXT.l d3
00034544 <AmiBlitz3.ab2@16770> BRA JL_0_AF46
00034548 <AmiBlitz3.ab2@16773>   MOVE.l $8(A2),D3
00034550 <AmiBlitz3.ab2@16774>   CMPI.l #$1,$4(A2)
00034554 <AmiBlitz3.ab2@16775>    BEQ.w JL_0_AF46
0003455A <AmiBlitz3.ab2@16776>   NOT.w asmtype
0003455C <AmiBlitz3.ab2@16779>   MOVE.w (A7)+,D2
00034560 <AmiBlitz3.ab2@16780> BRA.w JL_0_B46E
00034562 <AmiBlitz3.ab2@16784>   MOVE.w D2,-(A7)
00034566 <AmiBlitz3.ab2@16785>    BSR.w getparameter
0003456A <AmiBlitz3.ab2@16786>   CMP.w #$7B,D0
0003456E <AmiBlitz3.ab2@16787>    BEQ.w JL_0_AFDE
00034572 <AmiBlitz3.ab2@16788>    BSR.w JL_0_8E3C
00034576 <AmiBlitz3.ab2@16790>    BSR.w calcvar                                         ;getvaroffset+type
0003457A <AmiBlitz3.ab2@16791>    BSR.w JL_0_B150
00034580 <AmiBlitz3.ab2@16803>    TST.b typecheck
00034584 <AmiBlitz3.ab2@16804>    BEQ JL_0_AF66
0003458E <AmiBlitz3.ab2@16807>    CMP.l #$da01,lasttoken                                  ;poke
00034592 <AmiBlitz3.ab2@16808>    BEQ 'l1
0003459C <AmiBlitz3.ab2@16809>    CMP.l #$da02,lasttoken                                  ;peek
000345A0 <AmiBlitz3.ab2@16810>    BNE 'l2
000345A8 <AmiBlitz3.ab2@16813>    CMP.w #1,parnum
000345AC <AmiBlitz3.ab2@16814>    BNE JL_0_AF66
000345B2 <AmiBlitz3.ab2@16815>    MOVE.b d2,peekaddrsize
000345B6 <AmiBlitz3.ab2@16816> BRA JL_0_AF66
000345BC <AmiBlitz3.ab2@16819>   CLR.b peekaddrsize
000345C0 <AmiBlitz3.ab2@16822>   CMP.w #$1,D2
000345C4 <AmiBlitz3.ab2@16823>    BNE.w JL_0_AF7C
000345CA <AmiBlitz3.ab2@16824>   MOVE.w regnum,D1
000345CE <AmiBlitz3.ab2@16825>   ORI.w #$4880,D1
000345D2 <AmiBlitz3.ab2@16826>    BSR.w writeword
000345D4 <AmiBlitz3.ab2@16829>   MOVE.w (A7)+,D3
000345D8 <AmiBlitz3.ab2@16830>    BEQ.w JL_0_AF9E
000345DE <AmiBlitz3.ab2@16831>    MOVE.l lastinstruction,a0
000345E2 <AmiBlitz3.ab2@16832>   CMP.w #$3,D3
000345E6 <AmiBlitz3.ab2@16833>    BNE.w JL_0_AF92
000345EA <AmiBlitz3.ab2@16834>   CMP.w #$4,D2
000345EE <AmiBlitz3.ab2@16835>    BEQ.w JL_0_AF98
000345F0 <AmiBlitz3.ab2@16838>   CMP.w D2,D3
000345F4 <AmiBlitz3.ab2@16839>    BLS.w JL_0_AF9E
000345F6 <AmiBlitz3.ab2@16842>   EXG.l D2,D3
000345FA <AmiBlitz3.ab2@16844>   BSR.w writeconvertcode
000345FE <AmiBlitz3.ab2@16847> BRA.w reget
00034600 <AmiBlitz3.ab2@16850>   MOVEQ.l #$00,D3
00034606 <AmiBlitz3.ab2@16851>   MOVE.w regnum,D1
0003460A <AmiBlitz3.ab2@16852>    BEQ.w JL_0_AFC8
0003460C <AmiBlitz3.ab2@16853>   SUBQ.w #1,D1
0003460E <AmiBlitz3.ab2@16856>      LSR.l #1,D3
00034612 <AmiBlitz3.ab2@16857>      BSET #$F,D3
00034616 <AmiBlitz3.ab2@16858>   DBF D1,JL_0_AFB0b
0003461C <AmiBlitz3.ab2@16860>    TST.b fpu
00034620 <AmiBlitz3.ab2@16861>    BEQ 'l1
00034626 <AmiBlitz3.ab2@16862>    ADDQ.l #2,stacktrack                                    ;intern command
00034628 <AmiBlitz3.ab2@16863>     MOVE.l a0,-(a7)
0003462E <AmiBlitz3.ab2@16864>     MOVE.l stacktrack,d1
00034634 <AmiBlitz3.ab2@16865>     LEA fpustackbase,a0
00034638 <AmiBlitz3.ab2@16866>     CLR.w 0(a0,d1)
0003463E <AmiBlitz3.ab2@16867>     CLR.w regmask
00034640 <AmiBlitz3.ab2@16868>     MOVE.l (a7)+,a0
00034644 <AmiBlitz3.ab2@16871>   MOVE.w #$48E7,D1
00034648 <AmiBlitz3.ab2@16872>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0003464A <AmiBlitz3.ab2@16873>   MOVE.w D3,D1
0003464E <AmiBlitz3.ab2@16874> BRA.w writeword
00034650 <AmiBlitz3.ab2@16879>   MOVEQ.l #$00,D3
00034656 <AmiBlitz3.ab2@16880>   MOVE.w regnum,D1
0003465A <AmiBlitz3.ab2@16881>    BEQ.w JL_0_AFC8
0003465C <AmiBlitz3.ab2@16882>   SUBQ.w #1,D1
0003465E <AmiBlitz3.ab2@16885>     LSR.l #1,D3
00034662 <AmiBlitz3.ab2@16886>     BSET #$F,D3
00034666 <AmiBlitz3.ab2@16887>   DBF D1,JL_0_AFB0
0003466C <AmiBlitz3.ab2@16889>    TST.b fpu
00034670 <AmiBlitz3.ab2@16890>    BEQ 'l1
00034676 <AmiBlitz3.ab2@16891>    ADDQ.l #2,stacktrack                                    ;intern command
00034678 <AmiBlitz3.ab2@16892>     MOVE.l a0,-(a7)
0003467E <AmiBlitz3.ab2@16893>     MOVE.l stacktrack,d1
00034684 <AmiBlitz3.ab2@16894>     LEA fpustackbase,a0
00034688 <AmiBlitz3.ab2@16895>     CLR.w 0(a0,d1)
0003468C <AmiBlitz3.ab2@16896>    CMP.b #5,(a3)                                           ;result float ?
00034690 <AmiBlitz3.ab2@16897>     BNE 'nofpu
0003469A <AmiBlitz3.ab2@16899>     MOVE.w regnum,regnumfunc
000346A0 <AmiBlitz3.ab2@16902>   CLR.w regmask
000346A2 <AmiBlitz3.ab2@16903>     MOVE.l (a7)+,a0
000346A6 <AmiBlitz3.ab2@16906>   MOVE.w #$48E7,D1
000346AA <AmiBlitz3.ab2@16907>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
000346AC <AmiBlitz3.ab2@16908>   MOVE.w D3,D1
000346B0 <AmiBlitz3.ab2@16909> BRA.w writeword
000346B2 <AmiBlitz3.ab2@16912> RTS
000346B4 <AmiBlitz3.ab2@16916>   MOVE.l D1,-(A7)
000346B8 <AmiBlitz3.ab2@16917>   MOVE.w #$4EB9,D1
000346BC <AmiBlitz3.ab2@16918>    BSR.w writeword
000346C0 <AmiBlitz3.ab2@16919>    BSR.w addoff
000346C2 <AmiBlitz3.ab2@16920>   MOVE.l (A7)+,D1
000346C6 <AmiBlitz3.ab2@16921> BRA.w writelong
000346CA <AmiBlitz3.ab2@16925>    BSR.w findproc                                          ;write function call
000346CE <AmiBlitz3.ab2@16926>    BEQ 'l1
000346D4 <AmiBlitz3.ab2@16927>    TST.l unusedfunc
000346D8 <AmiBlitz3.ab2@16928>    BEQ noprocerr
000346DE <AmiBlitz3.ab2@16930>    JSR gotoendsource
000346E0 <AmiBlitz3.ab2@16933>   MOVEQ.l #$00,D1
000346E4 <AmiBlitz3.ab2@16934>   MOVE.b $5(A2),D1
000346EA <AmiBlitz3.ab2@16935>   MOVE.b d1,retmode
000346EE <AmiBlitz3.ab2@16936>    BMI.w illprocerr
000346F4 <AmiBlitz3.ab2@16937>    MOVE.b #1,isfunc(a2)
000346F6 <AmiBlitz3.ab2@16938>   MOVE.w D1,-(A7)
000346F8 <AmiBlitz3.ab2@16939>   MOVEQ.l #$00,D1
000346FC <AmiBlitz3.ab2@16940>   MOVE.b $4(A2),D1
000346FE <AmiBlitz3.ab2@16941>   LSR.w #4,D1
00034702 <AmiBlitz3.ab2@16942>    BEQ.w JL_0_B006
00034704 <AmiBlitz3.ab2@16943>   LSL.w #2,D1
0003470A <AmiBlitz3.ab2@16944>   SUB.w D1,a2offset
0003470E <AmiBlitz3.ab2@16947>   CMPI.w #$7,(A7)
00034712 <AmiBlitz3.ab2@16948>    BNE.b JL_0_B014
00034714 <AmiBlitz3.ab2@16949>   MOVE.l A2,-(A7)
00034718 <AmiBlitz3.ab2@16950>    BSR.w makesbase
0003471A <AmiBlitz3.ab2@16951>   MOVEA.l (A7)+,A2
00034720 <AmiBlitz3.ab2@16954>   MOVE.w sbasegot,-(A7)
00034724 <AmiBlitz3.ab2@16955>    BEQ.b JL_0_B020
00034728 <AmiBlitz3.ab2@16956>    BSR.w dopusha3
0003472C <AmiBlitz3.ab2@16959>   BSR.w JL_0_AFA2func
0003472E <AmiBlitz3.ab2@16960>   MOVE.w D3,-(A7)
00034732 <AmiBlitz3.ab2@16961>   MOVE.l $E(A2),D1
00034736 <AmiBlitz3.ab2@16962>   TST.b $20(a2)                                            ;increase if morepar
0003473A <AmiBlitz3.ab2@16963>   BNE 'no0par
0003473C <AmiBlitz3.ab2@16964>   MOVE.l a5,a4
00034740 <AmiBlitz3.ab2@16967>   CMP.b #$20,(a4)+
00034744 <AmiBlitz3.ab2@16968>   BEQ 'l1
0003474A <AmiBlitz3.ab2@16969>   CMP.b #"}",-1(a4)
0003474E <AmiBlitz3.ab2@16970>   BNE  'no0par
00034750 <AmiBlitz3.ab2@16971>   MOVEQ #0,d0
00034754 <AmiBlitz3.ab2@16974>   LEA $16(A2),A1
00034756 <AmiBlitz3.ab2@16977>   MOVE.l d1,-(a7)
00034758 <AmiBlitz3.ab2@16978>   MOVE.b (a1),d2
0003475A <AmiBlitz3.ab2@16979>   MOVE.l d0,d1
0003475E <AmiBlitz3.ab2@16980>   CMP.w #4,d2
00034762 <AmiBlitz3.ab2@16981>   BNE 'l1b
00034768 <AmiBlitz3.ab2@16982>   ADD.l #$203c,d1
0003476C <AmiBlitz3.ab2@16983>   BSR writeword
00034772 <AmiBlitz3.ab2@16984>   MOVE.l #$ffff0000,d1
00034776 <AmiBlitz3.ab2@16985>   BSR writelong
0003477A <AmiBlitz3.ab2@16986> BRA 'l2b
00034780 <AmiBlitz3.ab2@16989>    TST.b fpu
00034784 <AmiBlitz3.ab2@16990>    BNE 'l1c
00034788 <AmiBlitz3.ab2@16991>    CMP.w #5,d2
0003478C <AmiBlitz3.ab2@16992>    BNE 'l1c
00034792 <AmiBlitz3.ab2@16993>    ADD.l #$203c,d1
00034796 <AmiBlitz3.ab2@16994>    BSR writeword
0003479C <AmiBlitz3.ab2@16995>    MOVE.l #$800000c1,d1
000347A0 <AmiBlitz3.ab2@16996>    BSR writelong
000347A4 <AmiBlitz3.ab2@16997> BRA 'l2b
000347AA <AmiBlitz3.ab2@17000>   ADD.l #$70ff,d1
000347AE <AmiBlitz3.ab2@17001>   BSR writeword
000347B2 <AmiBlitz3.ab2@17002>   CMP.w #7,d2
000347B6 <AmiBlitz3.ab2@17003>   BNE 'l1d
000347BC <AmiBlitz3.ab2@17004>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
000347C0 <AmiBlitz3.ab2@17005>   BSR writelong
000347C2 <AmiBlitz3.ab2@17006>   MOVEQ #0,d1
000347C6 <AmiBlitz3.ab2@17007>   BSR writeword
000347CC <AmiBlitz3.ab2@17008>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
000347D0 <AmiBlitz3.ab2@17009>   BSR writelong
000347D2 <AmiBlitz3.ab2@17010>   MOVEQ #0,d1
000347D6 <AmiBlitz3.ab2@17011>   BSR writeword
000347DC <AmiBlitz3.ab2@17013> 'l1d  MOVE.l #$f23c5000,d1
000347DE <AmiBlitz3.ab2@17014>   MOVE.l d0,d2
000347E0 <AmiBlitz3.ab2@17015>   ASR.l #2,d2
000347E2 <AmiBlitz3.ab2@17016>   ADD.l d2,d1
000347E6 <AmiBlitz3.ab2@17017>   BSR writelong
000347EA <AmiBlitz3.ab2@17018>   MOVE.w #$ffff,d1
000347EE <AmiBlitz3.ab2@17019>   BSR writeword
000347F0 <AmiBlitz3.ab2@17023>   MOVE.l (a7)+,d1
000347F2 <AmiBlitz3.ab2@17024>      ADDQ.l #1,a1
000347F8 <AmiBlitz3.ab2@17025>      ADD.l #$0200,d0
000347FE <AmiBlitz3.ab2@17026>      CMP.l #$0e00,d0
00034802 <AmiBlitz3.ab2@17027>      BEQ syntaxerr
00034804 <AmiBlitz3.ab2@17028>      TST.b (a1)
00034808 <AmiBlitz3.ab2@17029>      BNE 'again
0003480C <AmiBlitz3.ab2@17030> BRA 'p1
00034810 <AmiBlitz3.ab2@17033>   TST.b $4(A2)
00034814 <AmiBlitz3.ab2@17034>    BNE.w JL_0_B03E
00034818 <AmiBlitz3.ab2@17037>   BSR.w JL_0_AFCA
0003481C <AmiBlitz3.ab2@17038>    BSR.w get1bytemain
00034820 <AmiBlitz3.ab2@17039> BRA.w JL_0_B06C
00034826 <AmiBlitz3.ab2@17043>   MOVE.w regnum,-(A7)
00034830 <AmiBlitz3.ab2@17044>   MOVE.w regnum,regnumfunc
00034832 <AmiBlitz3.ab2@17047>   MOVE.l D1,-(A7)                                          ;write function call with pars
0003483A <AmiBlitz3.ab2@17048>   MOVE.b #1,funccall
0003483C <AmiBlitz3.ab2@17049>   MOVEQ.l #$00,D0
00034840 <AmiBlitz3.ab2@17050>   MOVE.b $4(A2),D0
00034846 <AmiBlitz3.ab2@17051>   MOVE.l d0,parnumtemp
00034850 <AmiBlitz3.ab2@17052>   MOVE.w a2offset,a2offset2
00034858 <AmiBlitz3.ab2@17053>   MOVE.b 5(a2),retmode
0003485E <AmiBlitz3.ab2@17054>   MOVE.l a2,currentfunccall
00034862 <AmiBlitz3.ab2@17055>   LEA $16(A2),A2
00034868 <AmiBlitz3.ab2@17056>   CLR.w regnum
0003486E <AmiBlitz3.ab2@17057>   CLR.w regmask
00034874 <AmiBlitz3.ab2@17058>   MOVE.b funcparloop,-(a7)
0003487C <AmiBlitz3.ab2@17059>   MOVE.b #1,funcparloop
00034882 <AmiBlitz3.ab2@17061>   JSR fetchpees2
00034888 <AmiBlitz3.ab2@17062>   MOVE.b (a7)+,funcparloop
0003488E <AmiBlitz3.ab2@17063>   JSR chkstak
00034890 <AmiBlitz3.ab2@17064>   MOVE.l (A7)+,D1
00034894 <AmiBlitz3.ab2@17080>    BTST #0,d1
00034898 <AmiBlitz3.ab2@17081>    BNE intern1
0003489C <AmiBlitz3.ab2@17082>    BSR.w JL_0_AFCA
000348A2 <AmiBlitz3.ab2@17104>   MOVE.w (A7)+,regnum
000348A6 <AmiBlitz3.ab2@17107>   CMP.w #$7D,D0
000348AA <AmiBlitz3.ab2@17108>    BNE.w syntaxerr
000348AC <AmiBlitz3.ab2@17109>    MOVEQ #0,d1
000348B2 <AmiBlitz3.ab2@17110>   MOVE.w regnum,D1
000348B6 <AmiBlitz3.ab2@17111>    BEQ.w JL_0_B08A
000348BC <AmiBlitz3.ab2@17112>    TST.b fpu
000348C0 <AmiBlitz3.ab2@17113>    BEQ 'old
000348C8 <AmiBlitz3.ab2@17114>    CMP.b #5,retmode
000348CC <AmiBlitz3.ab2@17115>    BNE 'old
000348CE <AmiBlitz3.ab2@17116>    ASL.l #7,d1
000348D4 <AmiBlitz3.ab2@17117>    OR.l #$f2000000,d1
000348D8 <AmiBlitz3.ab2@17118>    BSR writelong
000348DC <AmiBlitz3.ab2@17119> BRA JL_0_B08A
000348DE <AmiBlitz3.ab2@17121>  'old  LSL.w #8,D1
000348E0 <AmiBlitz3.ab2@17122>   LSL.w #1,D1
000348E4 <AmiBlitz3.ab2@17123>   ORI.w #$2000,D1
000348E8 <AmiBlitz3.ab2@17124>    BSR.w writeword
000348EA <AmiBlitz3.ab2@17127>    MOVE.w (A7)+,D3
000348EE <AmiBlitz3.ab2@17128>    BEQ.w JL_0_B0A8
000348F4 <AmiBlitz3.ab2@17129>    TST.b fpu
000348F8 <AmiBlitz3.ab2@17130>    BEQ 'old
000348FA <AmiBlitz3.ab2@17131>    MOVE.l d0,-(a7)
000348FE <AmiBlitz3.ab2@17132>    MOVE.w #8,d0
00034900 <AmiBlitz3.ab2@17133>    MOVE.l a0,-(a7)
00034906 <AmiBlitz3.ab2@17134>    MOVE.l stacktrack,d1
0003490C <AmiBlitz3.ab2@17135>    LEA fpustackbase,a0
00034914 <AmiBlitz3.ab2@17136>    MOVE.w 0(a0,d1),regmask
00034916 <AmiBlitz3.ab2@17137>    MOVE.l (a7)+,a0
0003491A <AmiBlitz3.ab2@17140>   BEQ 'ready
00034920 <AmiBlitz3.ab2@17141>    BTST d0,regmask
00034924 <AmiBlitz3.ab2@17142>    BEQ 'noa7
00034926 <AmiBlitz3.ab2@17143>    MOVEQ #0,d1
00034928 <AmiBlitz3.ab2@17144>    MOVE.w d0,d1
0003492A <AmiBlitz3.ab2@17145>    SUBQ.w #1,d1
0003492C <AmiBlitz3.ab2@17146>    ASL #7,d1
00034932 <AmiBlitz3.ab2@17148>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
00034936 <AmiBlitz3.ab2@17149>    BSR writelong
0003493C <AmiBlitz3.ab2@17150>    SUBQ.l #2,stacktrack
0003493E <AmiBlitz3.ab2@17153>    SUBQ.w #1,d0
00034942 <AmiBlitz3.ab2@17154>    BNE 'loop
00034948 <AmiBlitz3.ab2@17157>   SUBQ.l #2,stacktrack                                     ;integer sub
0003494A <AmiBlitz3.ab2@17158>   MOVE.l (a7)+,d0
0003494E <AmiBlitz3.ab2@17161>   MOVE.w #$4CDF,D1
00034952 <AmiBlitz3.ab2@17162>    BSR.w writeword
00034954 <AmiBlitz3.ab2@17163>   MOVEQ.l #$00,D1
00034956 <AmiBlitz3.ab2@17164>   MOVEQ.l #$0F,D4
00034958 <AmiBlitz3.ab2@17167>     LSL.w #1,D3
0003495A <AmiBlitz3.ab2@17168>     ROXR.w #1,D1
0003495E <AmiBlitz3.ab2@17169>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
00034962 <AmiBlitz3.ab2@17171>     BSR.w writeword
00034968 <AmiBlitz3.ab2@17172>    CLR.w regnumfunc
0003496A <AmiBlitz3.ab2@17175>   MOVE.w (A7)+,D1
0003496E <AmiBlitz3.ab2@17176>    BEQ.b JL_0_B0D2
00034972 <AmiBlitz3.ab2@17177>   CMPI.w #$7,(A7)
00034976 <AmiBlitz3.ab2@17178>    BEQ.b JL_0_B0C4
0003497C <AmiBlitz3.ab2@17179>   LEA geta3,A0
00034982 <AmiBlitz3.ab2@17180>   LEA numtoa0,A1
00034986 <AmiBlitz3.ab2@17181>    BSR.w pokecode
0003498A <AmiBlitz3.ab2@17182> BRA.b JL_0_B0CE
00034990 <AmiBlitz3.ab2@17185>   MOVE.w deca3,D1
00034994 <AmiBlitz3.ab2@17186>    BSR.w writeword
00034998 <AmiBlitz3.ab2@17189>   BSR.w dopulla3                                           ;fix up string base
0003499A <AmiBlitz3.ab2@17192>   MOVE.w (A7)+,D2                                          ;what it returns!
0003499E <AmiBlitz3.ab2@17193>   CMP.w #$7,D2
000349A2 <AmiBlitz3.ab2@17194>    BNE.w JL_0_B0EC
000349A8 <AmiBlitz3.ab2@17195>   MOVE.w putstlen,D1
000349AE <AmiBlitz3.ab2@17196>   OR.w regnum,D1
000349B2 <AmiBlitz3.ab2@17197>    BSR.w writeword
000349B6 <AmiBlitz3.ab2@17200>   BSR.w get1bytemain
000349BA <AmiBlitz3.ab2@17201> BRA.w JL_0_AF66
000349BC <AmiBlitz3.ab2@17205> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
000349C4 <AmiBlitz3.ab2@17210>   CMP.b #2,optistring
000349C8 <AmiBlitz3.ab2@17211>   BEQ fs2
000349CC <AmiBlitz3.ab2@17212>   BSR.w makesbase                                          ;writestringvariable
000349D0 <AmiBlitz3.ab2@17213>   BTST #$F,D2
000349D4 <AmiBlitz3.ab2@17214>    BNE.w JL_0_B112
000349DA <AmiBlitz3.ab2@17215>   MOVE.w D3,leaa5d3a2+2
000349E0 <AmiBlitz3.ab2@17216>   MOVE.l leaa5d3a2,D1
000349E4 <AmiBlitz3.ab2@17217>    BSR.w pokela5s
000349EA <AmiBlitz3.ab2@17220>   MOVE.w regnum,D1
000349EC <AmiBlitz3.ab2@17221>   LSL.w #8,D1
000349EE <AmiBlitz3.ab2@17222>   LSL.w #1,D1
000349F2 <AmiBlitz3.ab2@17223>   ORI.w #$7000,D1
000349F8 <AmiBlitz3.ab2@17224>   LEA stvarget2,A0
000349FA <AmiBlitz3.ab2@17225>   MOVE.w D1,(A0)
00034A00 <AmiBlitz3.ab2@17226>   MOVE.w regnum,D1
00034A06 <AmiBlitz3.ab2@17227>   ANDI.w #$FFF8,$2(A0)
00034A0A <AmiBlitz3.ab2@17228>   OR.w D1,$2(A0)
00034A10 <AmiBlitz3.ab2@17229>   LEA stvarget2f,A1
00034A14 <AmiBlitz3.ab2@17230>    BSR.w pokecode
00034A18 <AmiBlitz3.ab2@17231>   MOVE.w #$C600,D1
00034A1C <AmiBlitz3.ab2@17232>    BSR.w Atokejsr
00034A1E <AmiBlitz3.ab2@17233>   MOVEQ.l #$07,D2
00034A22 <AmiBlitz3.ab2@17234> BRA.w reget
00034A28 <AmiBlitz3.ab2@17237>      TST.w stackpar
00034A2C <AmiBlitz3.ab2@17238>      BMI 'l10
00034A32 <AmiBlitz3.ab2@17239>      MOVE.l #$3f3c0007,d1
00034A38 <AmiBlitz3.ab2@17240>      ADDQ.w #2,a2offset
00034A3C <AmiBlitz3.ab2@17241>      BSR writelong
00034A40 <AmiBlitz3.ab2@17244>   MOVE.w #$4878,d1
00034A46 <AmiBlitz3.ab2@17245>      CLR.w stackpar
00034A4A <AmiBlitz3.ab2@17246>      BSR writeword
00034A4E <AmiBlitz3.ab2@17247>      MOVE.w #$0,d1
00034A52 <AmiBlitz3.ab2@17248>      BSR writeword
00034A56 <AmiBlitz3.ab2@17249>      MOVE.w #$246d,d1
00034A5A <AmiBlitz3.ab2@17250>      BSR writeword
00034A5C <AmiBlitz3.ab2@17251>      MOVE.w d3,d1
00034A60 <AmiBlitz3.ab2@17252>      BSR writeword
00034A66 <AmiBlitz3.ab2@17253>      MOVE.l #$4a926704,d1
00034A6A <AmiBlitz3.ab2@17254>      BSR writelong
00034A70 <AmiBlitz3.ab2@17255>      MOVE.l #$2eaafffc,d1
00034A74 <AmiBlitz3.ab2@17256>      BSR writelong
00034A78 <AmiBlitz3.ab2@17257>      MOVE.w #$2f0a,d1
00034A7E <AmiBlitz3.ab2@17258>      ADDQ.w #8,a2offset
00034A82 <AmiBlitz3.ab2@17259>      BSR writeword
00034A86 <AmiBlitz3.ab2@17260> BRA.w reget
00034A8A <AmiBlitz3.ab2@17263>   CMP.b #$7,D2                                             ;load basic var
00034A8E <AmiBlitz3.ab2@17264>    BEQ.w JL_0_B0F6
00034A94 <AmiBlitz3.ab2@17266>    TST.b iee
00034A98 <AmiBlitz3.ab2@17267>    BEQ 'noiee
00034A9C <AmiBlitz3.ab2@17268>    CMP.b #5,d2
00034AA0 <AmiBlitz3.ab2@17269>    BNE 'noiee
00034AA2 <AmiBlitz3.ab2@17270>    MOVE.l d0,-(a7)                                         ;fpu load var
00034AA6 <AmiBlitz3.ab2@17271>    BTST #15,d2
00034AAA <AmiBlitz3.ab2@17272>    BEQ 'var
00034AB0 <AmiBlitz3.ab2@17273>    CMP.l #$7fff,d3
00034AB4 <AmiBlitz3.ab2@17274>    BGT 'longoffset
00034ABA <AmiBlitz3.ab2@17275>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
00034ABC <AmiBlitz3.ab2@17276>    TST.w d3                                                ;offset =0
00034AC0 <AmiBlitz3.ab2@17277>    BNE 'offset
00034AC6 <AmiBlitz3.ab2@17280>   MOVE.l #$f2124400,d1
00034AC8 <AmiBlitz3.ab2@17281>    MOVEQ #0,d3
00034ACC <AmiBlitz3.ab2@17282> BRA 'glob
00034AD2 <AmiBlitz3.ab2@17285>   SUBQ.l #4,destpointer
00034AD6 <AmiBlitz3.ab2@17286> BRA 'glob
00034ADC <AmiBlitz3.ab2@17289>   TST.b fast
00034AE0 <AmiBlitz3.ab2@17290>    BEQ 'nofastload
00034AE6 <AmiBlitz3.ab2@17291>    TST.w regnum
00034AEA <AmiBlitz3.ab2@17292>    BNE 'nofastload
00034AF0 <AmiBlitz3.ab2@17293>    CMP.l fp0addr,a4
00034AF4 <AmiBlitz3.ab2@17294>    BNE 'nofastload
00034AFA <AmiBlitz3.ab2@17295>    MOVE.l fp0iff,d1
00034B00 <AmiBlitz3.ab2@17296>    CMP.l firstiff,d1
00034B04 <AmiBlitz3.ab2@17297>    BNE 'nofastload
00034B0A <AmiBlitz3.ab2@17298>    MOVE.w varmode,d1
00034B10 <AmiBlitz3.ab2@17299>    CMP.w fp0mode,d1
00034B14 <AmiBlitz3.ab2@17300>    BNE 'nofastload
00034B1A <AmiBlitz3.ab2@17301>    CMP.w fp0var,d3
00034B1E <AmiBlitz3.ab2@17302>    BNE 'nofastload
00034B22 <AmiBlitz3.ab2@17303>    BCLR #16,d2
00034B24 <AmiBlitz3.ab2@17304>    MOVE.l (a7)+,d0
00034B26 <AmiBlitz3.ab2@17305> RTS
00034B28 <AmiBlitz3.ab2@17308>    MOVEQ #0,d0
00034B2E <AmiBlitz3.ab2@17309>    MOVE.w regnum,d0
00034B34 <AmiBlitz3.ab2@17310>    CMP.l maxregs,d0
00034B38 <AmiBlitz3.ab2@17311>    BLE 'ok
00034B3E <AmiBlitz3.ab2@17312>    LEA cmplxerr,a0
00034B40 <AmiBlitz3.ab2@17313>   MOVE.l a0,-(a7)
00034B46 <AmiBlitz3.ab2@17314> JMP handle_compileerror
00034B4C <AmiBlitz3.ab2@17317>    LEA regtable,a4
00034B4E <AmiBlitz3.ab2@17318>    TST.l (a4)
00034B52 <AmiBlitz3.ab2@17319>    BEQ 'noreg
00034B56 <AmiBlitz3.ab2@17320>    CMP.w 0+4(a4),d3
00034B5A <AmiBlitz3.ab2@17321>    BNE 'doreg1
00034B60 <AmiBlitz3.ab2@17322>    MOVE.l #$f2001c00,d1
00034B66 <AmiBlitz3.ab2@17323>    MOVE.w regnum,d0
00034B68 <AmiBlitz3.ab2@17324>    ASL.w #7,d0
00034B6A <AmiBlitz3.ab2@17325>    OR.w d0,d1
00034B6E <AmiBlitz3.ab2@17326>    BSR writelong
00034B70 <AmiBlitz3.ab2@17327>    MOVE.l (a7)+,d0
00034B72 <AmiBlitz3.ab2@17328> RTS
00034B76 <AmiBlitz3.ab2@17331>   CMP.w 8+4(a4),d3
00034B7A <AmiBlitz3.ab2@17332>    BNE 'doreg2
00034B80 <AmiBlitz3.ab2@17333>    MOVE.l #$f2001800,d1
00034B86 <AmiBlitz3.ab2@17334>    MOVE.w regnum,d0
00034B88 <AmiBlitz3.ab2@17335>    ASL.w #7,d0
00034B8A <AmiBlitz3.ab2@17336>    OR.w d0,d1
00034B8E <AmiBlitz3.ab2@17337>    BSR writelong
00034B90 <AmiBlitz3.ab2@17338>    MOVE.l (a7)+,d0
00034B92 <AmiBlitz3.ab2@17339> RTS
00034B96 <AmiBlitz3.ab2@17342>   CMP.w 16+4(a4),d3
00034B9A <AmiBlitz3.ab2@17343>    BNE 'doreg3
00034BA0 <AmiBlitz3.ab2@17344>    MOVE.l #$f2001400,d1
00034BA6 <AmiBlitz3.ab2@17345>    MOVE.w regnum,d0
00034BA8 <AmiBlitz3.ab2@17346>    ASL.w #7,d0
00034BAA <AmiBlitz3.ab2@17347>    OR.w d0,d1
00034BAE <AmiBlitz3.ab2@17348>    BSR  writelong
00034BB0 <AmiBlitz3.ab2@17349>    MOVE.l (a7)+,d0
00034BB2 <AmiBlitz3.ab2@17350> RTS
00034BB6 <AmiBlitz3.ab2@17353>   CMP.w 24+4(a4),d3
00034BBA <AmiBlitz3.ab2@17354>    BNE 'doreg4
00034BC0 <AmiBlitz3.ab2@17355>    MOVE.l #$f2001000,d1
00034BC6 <AmiBlitz3.ab2@17356>    MOVE.w regnum,d0
00034BC8 <AmiBlitz3.ab2@17357>    ASL.w #7,d0
00034BCA <AmiBlitz3.ab2@17358>    OR.w d0,d1
00034BCE <AmiBlitz3.ab2@17359>    BSR writelong
00034BD0 <AmiBlitz3.ab2@17360>    MOVE.l (a7)+,d0
00034BD2 <AmiBlitz3.ab2@17361> RTS
00034BD6 <AmiBlitz3.ab2@17364>    CMP.w 32+4(a4),d3
00034BDA <AmiBlitz3.ab2@17365>    BNE 'noreg
00034BE0 <AmiBlitz3.ab2@17366>    MOVE.l #$f2000c00,d1
00034BE6 <AmiBlitz3.ab2@17367>    MOVE.w regnum,d0
00034BE8 <AmiBlitz3.ab2@17368>    ASL.w #7,d0
00034BEA <AmiBlitz3.ab2@17369>    OR.w d0,d1
00034BEE <AmiBlitz3.ab2@17370>    BSR writelong
00034BF0 <AmiBlitz3.ab2@17371>    MOVE.l (a7)+,d0
00034BF2 <AmiBlitz3.ab2@17372> RTS
00034BF8 <AmiBlitz3.ab2@17375>    MOVE.l #$f22d4400,d1                                    ;var
00034BFE <AmiBlitz3.ab2@17376>    TST.w varmode
00034C02 <AmiBlitz3.ab2@17377>   BEQ 'glob
00034C06 <AmiBlitz3.ab2@17378>   BCLR #16,d1                                              ;local
00034C08 <AmiBlitz3.ab2@17381>    MOVEQ #0,d0
00034C0E <AmiBlitz3.ab2@17382>    MOVE.w regnum,d0
00034C12 <AmiBlitz3.ab2@17383>    CMP.w #7,d0
00034C16 <AmiBlitz3.ab2@17384>    BLE 'ok2
00034C1C <AmiBlitz3.ab2@17385>    LEA cmplxerr,a0
00034C1E <AmiBlitz3.ab2@17386>   MOVE.l a0,-(a7)
00034C24 <AmiBlitz3.ab2@17387> JMP handle_compileerror
00034C26 <AmiBlitz3.ab2@17390>      ASL.w #7,d0
00034C28 <AmiBlitz3.ab2@17391>    OR.l d0,d1
00034C30 <AmiBlitz3.ab2@17392>    CMP.l #doublecheck,8(a2)
00034C34 <AmiBlitz3.ab2@17393>    BNE 'dbl
00034C3A <AmiBlitz3.ab2@17394>    OR.l #$00001000,d1
00034C3E <AmiBlitz3.ab2@17397>   BSR writelong
00034C40 <AmiBlitz3.ab2@17398>    MOVE.l (a7)+,d0
00034C44 <AmiBlitz3.ab2@17399>    AND.w #$ff,d2
00034C46 <AmiBlitz3.ab2@17400>    MOVE.w d3,d1
00034C4A <AmiBlitz3.ab2@17401>    BEQ 'nooffs
00034C4E <AmiBlitz3.ab2@17402> BRA writeword
00034C50 <AmiBlitz3.ab2@17407> RTS
00034C56 <AmiBlitz3.ab2@17410>   MOVE.w regnum,D1
00034C5C <AmiBlitz3.ab2@17411>   MOVE.w d1,load_var_reg
00034C5E <AmiBlitz3.ab2@17412>   LSL.w #8,D1
00034C68 <AmiBlitz3.ab2@17413>   MOVE.l destpointer,load_var_addr
00034C6E <AmiBlitz3.ab2@17414>   MOVE.w d2,load_var_size
00034C70 <AmiBlitz3.ab2@17415>   LSL.w #1,D1
00034C74 <AmiBlitz3.ab2@17416>   BTST #$E,D2
00034C78 <AmiBlitz3.ab2@17417>    BNE.w JL_0_B17A
00034C7A <AmiBlitz3.ab2@17418>   TST.b D2
00034C7E <AmiBlitz3.ab2@17419>    BNE.w JL_0_B17E
00034C80 <AmiBlitz3.ab2@17420>   MOVEQ.l #$03,D2
00034C84 <AmiBlitz3.ab2@17421>   ORI.w #$200A,D1
00034C88 <AmiBlitz3.ab2@17422> BRA.w writeword
00034C8C <AmiBlitz3.ab2@17425>   MOVE.b #$3,D2
00034C90 <AmiBlitz3.ab2@17428>   BTST #$F,D2
00034C94 <AmiBlitz3.ab2@17429>    BEQ.w JL_0_B19A                                         ;loadarray
00034C9A <AmiBlitz3.ab2@17430>    TST.b fast                                              ;lea->move xx(a2)
00034C9E <AmiBlitz3.ab2@17431>    BEQ 'la10
00034CA4 <AmiBlitz3.ab2@17436>    CLR.l load_var_addr
00034CA8 <AmiBlitz3.ab2@17437> BRA 'la10
00034CB0 <AmiBlitz3.ab2@17439>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
00034CB4 <AmiBlitz3.ab2@17440>    BNE 'la10
00034CBA <AmiBlitz3.ab2@17441>    TST.b optiarray
00034CBE <AmiBlitz3.ab2@17442>    BNE 'la10
00034CC4 <AmiBlitz3.ab2@17443>    MOVE.l destpointer,a4
00034CCA <AmiBlitz3.ab2@17444>    SUB.l loada,a4
00034CCE <AmiBlitz3.ab2@17445>    CMP.w #4,a4
00034CD2 <AmiBlitz3.ab2@17446>    BEQ 'la100
00034CD6 <AmiBlitz3.ab2@17447>    CMP.w #2,a4
00034CDA <AmiBlitz3.ab2@17448>    BNE 'la10
00034CE0 <AmiBlitz3.ab2@17449>    MOVE.l destpointer,a4
00034CE4 <AmiBlitz3.ab2@17450>    CMP.b #3,d2
00034CE8 <AmiBlitz3.ab2@17451>    BCS 'la110
00034CEE <AmiBlitz3.ab2@17452>    MOVE.w #$202a,-2(a4)
00034CF2 <AmiBlitz3.ab2@17453>    OR.w d1,-2(a4)
00034CF8 <AmiBlitz3.ab2@17454>    MOVE.w arrayoffset,d1
00034CFC <AmiBlitz3.ab2@17455>    BSR writeword
00034D00 <AmiBlitz3.ab2@17456> BRA JL_0_B194
00034D04 <AmiBlitz3.ab2@17459>    CMP.b #2,d2
00034D08 <AmiBlitz3.ab2@17460>    BNE 'la120
00034D0E <AmiBlitz3.ab2@17461>     MOVE.w #$302a,-2(a4)
00034D12 <AmiBlitz3.ab2@17462>    OR.w d1,-2(a4)
00034D18 <AmiBlitz3.ab2@17464>    MOVE.w arrayoffset,d1
00034D1C <AmiBlitz3.ab2@17465>    BSR writeword
00034D20 <AmiBlitz3.ab2@17466> BRA JL_0_B194
00034D24 <AmiBlitz3.ab2@17469>   CMP.b #1,d2
00034D28 <AmiBlitz3.ab2@17470>    BNE.s 'la10
00034D2E <AmiBlitz3.ab2@17471>     MOVE.w #$102a,-2(a4)
00034D32 <AmiBlitz3.ab2@17472>    OR.w d1,-2(a4)
00034D38 <AmiBlitz3.ab2@17473>    MOVE.w arrayoffset,d1
00034D3C <AmiBlitz3.ab2@17474>    BSR writeword
00034D40 <AmiBlitz3.ab2@17475> BRA JL_0_B194
00034D46 <AmiBlitz3.ab2@17478>   MOVE.l destpointer,a4
00034D4C <AmiBlitz3.ab2@17479>    CMP.w #$45ea,-2(a4)
00034D50 <AmiBlitz3.ab2@17480>    BNE 'la10
00034D54 <AmiBlitz3.ab2@17481>    CMP.b #3,d2
00034D58 <AmiBlitz3.ab2@17482>    BCS 'la11
00034D5E <AmiBlitz3.ab2@17483>    MOVE.w #$202a,-4(a4)
00034D62 <AmiBlitz3.ab2@17484>    OR.w d1,-4(a4)
00034D66 <AmiBlitz3.ab2@17485> BRA JL_0_B194
00034D6A <AmiBlitz3.ab2@17488>    CMP.b #2,d2
00034D6E <AmiBlitz3.ab2@17489>    BNE 'la12
00034D74 <AmiBlitz3.ab2@17490>     MOVE.w #$302a,-4(a4)
00034D78 <AmiBlitz3.ab2@17491>    OR.w d1,-4(a4)
00034D7C <AmiBlitz3.ab2@17492> BRA JL_0_B194
00034D80 <AmiBlitz3.ab2@17495>   CMP.b #1,d2
00034D84 <AmiBlitz3.ab2@17496>    BNE.s 'la10
00034D8A <AmiBlitz3.ab2@17497>     MOVE.w #$102a,-4(a4)
00034D8E <AmiBlitz3.ab2@17498>    OR.w d1,-4(a4)
00034D92 <AmiBlitz3.ab2@17499> BRA JL_0_B194
00034D98 <AmiBlitz3.ab2@17502>    OR.w movea2dn,D1
00034D9C <AmiBlitz3.ab2@17503>    BSR.w JL_0_B1B2
00034DA0 <AmiBlitz3.ab2@17504>    BSR.w writeword
00034DA4 <AmiBlitz3.ab2@17507>   ANDI.w #$FF,D2
00034DA6 <AmiBlitz3.ab2@17508> RTS
00034DAC <AmiBlitz3.ab2@17512>    MOVE.l destpointer,a4
00034DB4 <AmiBlitz3.ab2@17513>    MOVE.l #$f22a4400,-4(a4)
00034DBA <AmiBlitz3.ab2@17514>    MOVE.w arrayoffset,d1
00034DBE <AmiBlitz3.ab2@17515> BRA writeword
00034DC4 <AmiBlitz3.ab2@17519>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
00034DC8 <AmiBlitz3.ab2@17520>    BSR.w JL_0_B1B2
00034DCC <AmiBlitz3.ab2@17521>    BSR.w pokewda5s
00034DCE <AmiBlitz3.ab2@17522>   MOVE.w D3,D1
00034DD2 <AmiBlitz3.ab2@17523>    BSR.w writeword
00034DD6 <AmiBlitz3.ab2@17524> BRA.w JL_0_B194
00034DDA <AmiBlitz3.ab2@17527>   BTST #$E,D2
00034DDE <AmiBlitz3.ab2@17528>    BNE.w JL_0_B1CA
00034DE2 <AmiBlitz3.ab2@17529>   CMP.b #$1,D2
00034DE6 <AmiBlitz3.ab2@17530>    BEQ.w JL_0_B1CC
00034DEA <AmiBlitz3.ab2@17531>   CMP.b #$2,D2
00034DEE <AmiBlitz3.ab2@17532>    BEQ.w JL_0_B1D2
00034DF0 <AmiBlitz3.ab2@17535> RTS
00034DF4 <AmiBlitz3.ab2@17538>   EORI.w #$3000,D1
00034DF6 <AmiBlitz3.ab2@17539> RTS
00034DFA <AmiBlitz3.ab2@17542>   ORI.w #$1000,D1
00034DFC <AmiBlitz3.ab2@17543> RTS
00034E04 <AmiBlitz3.ab2@17547>   MOVE.w #$FFFF,dfetch
00034E08 <AmiBlitz3.ab2@17548>   BSR.w get1bytemain
00034E0C <AmiBlitz3.ab2@17549>   CMP.w #$2D,D0
00034E10 <AmiBlitz3.ab2@17550>    BNE.w JL_0_B206
00034E14 <AmiBlitz3.ab2@17551>   BSR.w get1bytemain
00034E18 <AmiBlitz3.ab2@17552>   BSR.w JL_0_B206
00034E1C <AmiBlitz3.ab2@17553>   CMP.w #$5,D2
00034E20 <AmiBlitz3.ab2@17554>    BCC.w JL_0_B200
00034E22 <AmiBlitz3.ab2@17555>   NEG.l D0
00034E24 <AmiBlitz3.ab2@17556> RTS
00034E2A <AmiBlitz3.ab2@17559>   TST.b fpu
00034E2E <AmiBlitz3.ab2@17560>   BEQ 'noneg
00034E32 <AmiBlitz3.ab2@17561>   fneg.x fp0
00034E34 <AmiBlitz3.ab2@17562> RTS
00034E38 <AmiBlitz3.ab2@17565>   BCHG #$7,D0
00034E3A <AmiBlitz3.ab2@17566> RTS
00034E3E <AmiBlitz3.ab2@17569>   CMP.w #$24,D0
00034E42 <AmiBlitz3.ab2@17570>    BEQ.w get_hexconstant
00034E46 <AmiBlitz3.ab2@17571>   CMP.w #$25,D0
00034E4A <AmiBlitz3.ab2@17572>    BEQ.w JL_0_A8C0
00034E4E <AmiBlitz3.ab2@17573>   CMP.w #$2E,D0
00034E52 <AmiBlitz3.ab2@17574>    BNE.w JL_0_B224
00034E54 <AmiBlitz3.ab2@17577>   MOVEQ.l #$00,D3
00034E58 <AmiBlitz3.ab2@17578> BRA.w JL_0_B272
00034E5A <AmiBlitz3.ab2@17581>   MOVEQ.l #$00,D3                                          ;number
00034E5E <AmiBlitz3.ab2@17582>    BSR.w atoi
00034E62 <AmiBlitz3.ab2@17583>   CMP.w #$2E,D0
00034E66 <AmiBlitz3.ab2@17584>    BEQ.w JL_0_B268
00034E6A <AmiBlitz3.ab2@17585>   ORI.w #$20,D0
00034E6E <AmiBlitz3.ab2@17586>   CMP.w #$65,D0
00034E72 <AmiBlitz3.ab2@17587>    BNE.w JL_0_B46E
00034E78 <AmiBlitz3.ab2@17588>   CMP.l #$800000,D3
00034E7C <AmiBlitz3.ab2@17589>    BCC.w overerr
00034E7E <AmiBlitz3.ab2@17590>   MOVEQ.l #-$01,D6
00034E82 <AmiBlitz3.ab2@17591>   fmove.l d3,fp0
00034E84 <AmiBlitz3.ab2@17592>   MOVE.l D3,D0
00034E8A <AmiBlitz3.ab2@17593>   MOVEA.l _mathffpbase,A6
00034E8E <AmiBlitz3.ab2@17594>    JSR -$24(A6)
00034E90 <AmiBlitz3.ab2@17595>   MOVE.l D0,D3
00034E94 <AmiBlitz3.ab2@17596>    BSR.w JL_0_B2E6
00034E98 <AmiBlitz3.ab2@17597>    BSR.w reget
00034E9C <AmiBlitz3.ab2@17598>    BSR.w JL_0_B480
00034EA0 <AmiBlitz3.ab2@17599> BRA.w JL_0_B3DC
00034EA4 <AmiBlitz3.ab2@17602>   CMP.b #4,d2
00034EA8 <AmiBlitz3.ab2@17603>   BEQ 'l4
00034EAC <AmiBlitz3.ab2@17604>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
00034EB2 <AmiBlitz3.ab2@17607>    TST.b fpu
00034EB6 <AmiBlitz3.ab2@17608>    BNE 'l1
00034EBC <AmiBlitz3.ab2@17609>    CMP.l #$800000,D3
00034EC0 <AmiBlitz3.ab2@17610>    BCC.w overerr
00034EC4 <AmiBlitz3.ab2@17611> BRA JL_0_B272
00034ECA <AmiBlitz3.ab2@17614>   CMP.l #$7fffffff,d3
00034ECE <AmiBlitz3.ab2@17615>     BCC.w overerr
00034ED0 <AmiBlitz3.ab2@17618>   MOVEQ.l #-$01,D6
00034ED2 <AmiBlitz3.ab2@17619>   MOVE.l D3,D0
00034ED6 <AmiBlitz3.ab2@17620>   fmove.l d3,fp0
00034EDC <AmiBlitz3.ab2@17621>   MOVEA.l _mathffpbase,A6
00034EE0 <AmiBlitz3.ab2@17622>    JSR -$24(A6)                                            ;integer to ffp
00034EE2 <AmiBlitz3.ab2@17623>   MOVE.l D0,-(A7)
00034EE6 <AmiBlitz3.ab2@17624>    BSR.w get1bytemain
00034EEA <AmiBlitz3.ab2@17625>    BSR.w tstnum
00034EEE <AmiBlitz3.ab2@17626>    BNE.w syntaxerr
00034EF0 <AmiBlitz3.ab2@17627>   MOVEQ.l #$00,D3
00034EF4 <AmiBlitz3.ab2@17628>    BSR.w atoi
00034EF6 <AmiBlitz3.ab2@17629>   TST.l D3
00034EFA <AmiBlitz3.ab2@17630>    BEQ.w JL_0_B2E0
00034F00 <AmiBlitz3.ab2@17631>   TST.b fpu
00034F04 <AmiBlitz3.ab2@17632>   BNE 'l1
00034F0A <AmiBlitz3.ab2@17633>   CMP.l #$800000,D3
00034F0E <AmiBlitz3.ab2@17634>    BCC.w overerr
00034F12 <AmiBlitz3.ab2@17635> BRA 'l2
00034F18 <AmiBlitz3.ab2@17638>   CMP.l #$7fffffff,d3
00034F1C <AmiBlitz3.ab2@17639>   BCC overerr
00034F20 <AmiBlitz3.ab2@17642>   fmove.l d5,fp1
00034F22 <AmiBlitz3.ab2@17643>   MOVE.l D5,D0
00034F26 <AmiBlitz3.ab2@17644>    JSR -$24(A6)
00034F28 <AmiBlitz3.ab2@17645>   MOVE.l D0,D5
00034F2C <AmiBlitz3.ab2@17646>   fmove.l d3,fp2
00034F2E <AmiBlitz3.ab2@17647>   MOVE.l D3,D0
00034F32 <AmiBlitz3.ab2@17648>    JSR -$24(A6)
00034F36 <AmiBlitz3.ab2@17649>   fdiv.x fp1,fp2
00034F38 <AmiBlitz3.ab2@17650>   MOVE.l D5,D1
00034F3C <AmiBlitz3.ab2@17651>    JSR -$54(A6)
00034F40 <AmiBlitz3.ab2@17652>   fadd.x fp2,fp0
00034F42 <AmiBlitz3.ab2@17653>   MOVE.l (A7)+,D1
00034F46 <AmiBlitz3.ab2@17654>    JSR -$42(A6)
00034F48 <AmiBlitz3.ab2@17655>   MOVE.l D0,D3
00034F4C <AmiBlitz3.ab2@17656>    BSR.w reget
00034F50 <AmiBlitz3.ab2@17657>   ORI.w #$20,D0
00034F54 <AmiBlitz3.ab2@17658>   CMP.w #$65,D0
00034F58 <AmiBlitz3.ab2@17659>    BNE.w JL_0_B2D4
00034F5C <AmiBlitz3.ab2@17660>    BSR.w JL_0_B2E6
00034F60 <AmiBlitz3.ab2@17663>    BSR.w reget
00034F64 <AmiBlitz3.ab2@17664>    BSR.w JL_0_B480
00034F68 <AmiBlitz3.ab2@17665> BRA.w JL_0_B3DC
00034F6A <AmiBlitz3.ab2@17668>   MOVE.l (A7)+,D3
00034F6E <AmiBlitz3.ab2@17669> BRA.w JL_0_B2D4
00034F72 <AmiBlitz3.ab2@17672>   BSR.w get1bytemain
00034F76 <AmiBlitz3.ab2@17673>   CMP.w #$2B,D0
00034F7A <AmiBlitz3.ab2@17674>    BEQ.w JL_0_B30E
00034F7E <AmiBlitz3.ab2@17675>   CMP.w #$2D,D0
00034F82 <AmiBlitz3.ab2@17676>    BNE.w JL_0_B312
00034F86 <AmiBlitz3.ab2@17677>    BSR.w get1bytemain
00034F8A <AmiBlitz3.ab2@17678>    BSR.w getsign
00034F8C <AmiBlitz3.ab2@17679>   MOVE.l D3,D0
00034F90 <AmiBlitz3.ab2@17680>   fdiv.x fp1,fp0
00034F92 <AmiBlitz3.ab2@17681>   MOVE.l D4,D1
00034F96 <AmiBlitz3.ab2@17682>    JSR -$54(A6)
00034F98 <AmiBlitz3.ab2@17683>   MOVE.l D0,D3
00034F9A <AmiBlitz3.ab2@17684> RTS
00034F9E <AmiBlitz3.ab2@17687>   BSR.w get1bytemain
00034FA2 <AmiBlitz3.ab2@17690>   BSR.w getsign
00034FA6 <AmiBlitz3.ab2@17691>   fmul.x fp1,fp0
00034FA8 <AmiBlitz3.ab2@17692>   MOVE.l D3,D0
00034FAA <AmiBlitz3.ab2@17693>   MOVE.l D4,D1
00034FAE <AmiBlitz3.ab2@17694>    JSR -$4E(A6)
00034FB0 <AmiBlitz3.ab2@17695>   MOVE.l D0,D3
00034FB2 <AmiBlitz3.ab2@17696> RTS
00034FB6 <AmiBlitz3.ab2@17699>   BSR.w tstnum
00034FBA <AmiBlitz3.ab2@17700>    BNE.w syntaxerr
00034FBC <AmiBlitz3.ab2@17701>   MOVE.w D0,D4
00034FC0 <AmiBlitz3.ab2@17702>   SUBI.w #$30,D4
00034FC4 <AmiBlitz3.ab2@17703>    BSR.w get1bytemain
00034FC8 <AmiBlitz3.ab2@17704>    BSR.w tstnum
00034FCC <AmiBlitz3.ab2@17705>    BNE.w getsign__skip
00034FD0 <AmiBlitz3.ab2@17706>   MULU #$A,D4
00034FD4 <AmiBlitz3.ab2@17707>   SUBI.w #$30,D0
00034FD6 <AmiBlitz3.ab2@17708>   ADD.w D0,D4
00034FDA <AmiBlitz3.ab2@17709>    BSR.w get1bytemain
00034FDE <AmiBlitz3.ab2@17712>   CMP.w #$12,D4
00034FE2 <AmiBlitz3.ab2@17713>    BHI.w overerr
00034FE4 <AmiBlitz3.ab2@17714>   LSL.w #3,D4
00034FEA <AmiBlitz3.ab2@17715>   LEA fputab,a0
00034FEC <AmiBlitz3.ab2@17716>   ADD.l d4,a0
00034FF2 <AmiBlitz3.ab2@17717>   fmove.d 0(a0),fp1
00034FF4 <AmiBlitz3.ab2@17718>   LSR.w #1,d4
00034FF8 <AmiBlitz3.ab2@17719>   MOVE.l facts(PC,D4.W),D4
00034FFA <AmiBlitz3.ab2@17720> RTS
00035042 <AmiBlitz3.ab2@17724>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
00035046 <AmiBlitz3.ab2@17729>   Dc.l $80000041
0003504A <AmiBlitz3.ab2@17730>   Dc.l $A0000044
0003504E <AmiBlitz3.ab2@17731>   Dc.l $C8000047
00035052 <AmiBlitz3.ab2@17732>   Dc.l $FA00004A
00035056 <AmiBlitz3.ab2@17733>   Dc.l $9C40004E
0003505A <AmiBlitz3.ab2@17734>   Dc.l $C3500051
0003505E <AmiBlitz3.ab2@17735>   Dc.l $F4240054
00035062 <AmiBlitz3.ab2@17736>   Dc.l $98968058
00035066 <AmiBlitz3.ab2@17737>   Dc.l $BEBC205B
0003506A <AmiBlitz3.ab2@17738>   Dc.l $EE6B285E
0003506E <AmiBlitz3.ab2@17739>   Dc.l $9502F962
00035072 <AmiBlitz3.ab2@17740>   Dc.l $BA43B765
00035076 <AmiBlitz3.ab2@17741>   Dc.l $E8D4A568
0003507A <AmiBlitz3.ab2@17742>   Dc.l $9184E76C
0003507E <AmiBlitz3.ab2@17743>   Dc.l $B5E6A96F
00035082 <AmiBlitz3.ab2@17744>   Dc.l $E35F2972
00035086 <AmiBlitz3.ab2@17745>   Dc.l $8E1BCA76
0003508A <AmiBlitz3.ab2@17746>   Dc.l $B1A2BD79
0003508E <AmiBlitz3.ab2@17747>   Dc.l $DE0B6C7C
00035090 <AmiBlitz3.ab2@17751>   MOVEQ.l #$01,D5
00035092 <AmiBlitz3.ab2@17754>   LSL.l #1,D5
00035094 <AmiBlitz3.ab2@17755>   MOVE.l D5,D1
00035096 <AmiBlitz3.ab2@17756>   LSL.l #2,D5
00035098 <AmiBlitz3.ab2@17757>   ADD.l D1,D5                                              ;divisor for frac convert!
0003509A <AmiBlitz3.ab2@17758>   LSL.l #1,D3
0003509E <AmiBlitz3.ab2@17759>    BCS.w overerr
000350A0 <AmiBlitz3.ab2@17760>   MOVE.l D3,D1
000350A2 <AmiBlitz3.ab2@17761>   LSL.l #1,D3
000350A6 <AmiBlitz3.ab2@17762>    BCS.w overerr
000350A8 <AmiBlitz3.ab2@17763>   LSL.l #1,D3
000350AC <AmiBlitz3.ab2@17764>    BCS.w overerr
000350AE <AmiBlitz3.ab2@17765>   ADD.l D1,D3
000350B2 <AmiBlitz3.ab2@17766>   SUBI.w #$30,D0
000350B4 <AmiBlitz3.ab2@17767>   ADD.l D0,D3
000350E0 <AmiBlitz3.ab2@17768>    !fget                                                   ;bsr.w get1bytemain
000350E4 <AmiBlitz3.ab2@17769>    CMP.b #1,d0
000350E8 <AmiBlitz3.ab2@17770>    BNE 'cm1
000350EA <AmiBlitz3.ab2@17771>    SUBQ.l #1,a5
000350EE <AmiBlitz3.ab2@17772>    BSR get1bytemain                                        ;??wy not !fget
000350F2 <AmiBlitz3.ab2@17775>   CMP.b #$7e,d0
000350F6 <AmiBlitz3.ab2@17776>    BNE 'cm2
000350F8 <AmiBlitz3.ab2@17777>    SUBQ.l #1,a5
000350FC <AmiBlitz3.ab2@17778>    BSR get1bytemain
000350FE <AmiBlitz3.ab2@17781>   TST.b d0
00035102 <AmiBlitz3.ab2@17782>    BPL 'l10
00035104 <AmiBlitz3.ab2@17783>    LSL.w #8,d0
00035106 <AmiBlitz3.ab2@17784>    MOVE.b (a5)+,d0
0003510C <AmiBlitz3.ab2@17785>    MOVE.w d0,lastchar
0003511E <AmiBlitz3.ab2@17788>   !compare2                                                ;bsr.w tstnum ;cmake bug
00035122 <AmiBlitz3.ab2@17789>    BEQ.w atoi__loop
00035124 <AmiBlitz3.ab2@17790> RTS
00035126 <AmiBlitz3.ab2@17793> dfetch:  Ds.w 1                                            ;fetching data?
0003512A <AmiBlitz3.ab2@17797>   MOVE.w dfetch(PC),D1
0003512E <AmiBlitz3.ab2@17798>    BEQ.w JL_0_B3EC
00035134 <AmiBlitz3.ab2@17799>   CLR.w dfetch
00035136 <AmiBlitz3.ab2@17800> RTS
0003513C <AmiBlitz3.ab2@17803>   MOVE.w d2,imm_size
00035146 <AmiBlitz3.ab2@17804>   MOVE.w regnum,imm_reg
00035150 <AmiBlitz3.ab2@17805>   MOVE.l destpointer,imm_addr
00035154 <AmiBlitz3.ab2@17806>    CMP.w #$1,D2
00035158 <AmiBlitz3.ab2@17807>    BEQ.w JL_0_B418
0003515C <AmiBlitz3.ab2@17808>   CMP.w #$2,D2
00035160 <AmiBlitz3.ab2@17809>    BEQ.w JL_0_B418
00035164 <AmiBlitz3.ab2@17810>   CMP.w #$3,D2
00035168 <AmiBlitz3.ab2@17811>    BEQ.w JL_0_B434
0003516C <AmiBlitz3.ab2@17812>   CMP.w #$4,D2
00035170 <AmiBlitz3.ab2@17813>    BEQ.w JL_0_B434
00035174 <AmiBlitz3.ab2@17814>   CMP.w #$5,D2
00035178 <AmiBlitz3.ab2@17815>    BEQ.w JL_0_B434
0003517C <AmiBlitz3.ab2@17816> BRA.w mismatcherr
00035182 <AmiBlitz3.ab2@17819>   MOVE.w regnum,D1
00035184 <AmiBlitz3.ab2@17820>   LSL.w #8,D1
00035186 <AmiBlitz3.ab2@17821>   LSL.w #1,D1
0003518A <AmiBlitz3.ab2@17822>   ORI.w #$303C,D1
0003518E <AmiBlitz3.ab2@17823>    BSR.w writeword
00035190 <AmiBlitz3.ab2@17824>   MOVE.w D0,D1
00035194 <AmiBlitz3.ab2@17825>    BSR.w writeword
00035198 <AmiBlitz3.ab2@17826> BRA.w reget
0003519A <AmiBlitz3.ab2@17829>   MOVEQ #0,d1
000351A0 <AmiBlitz3.ab2@17830>   MOVE.w regnum,D1
000351A6 <AmiBlitz3.ab2@17831>   TST.b fpu
000351AA <AmiBlitz3.ab2@17832>   BEQ 'f1
000351AE <AmiBlitz3.ab2@17833>   CMP.w #5,d2
000351B2 <AmiBlitz3.ab2@17834>   BEQ 'l10
000351B6 <AmiBlitz3.ab2@17835> BRA 'f2
000351BC <AmiBlitz3.ab2@17838>   TST.b iee
000351C0 <AmiBlitz3.ab2@17839>   BNE 'l10
000351C2 <AmiBlitz3.ab2@17842>   LSL.w #8,D1
000351C4 <AmiBlitz3.ab2@17843>   LSL.w #1,D1
000351C8 <AmiBlitz3.ab2@17844>   ORI.w #$203C,D1
000351CC <AmiBlitz3.ab2@17845>    BSR.w writeword
000351CE <AmiBlitz3.ab2@17846>   MOVE.l D0,D1
000351D2 <AmiBlitz3.ab2@17847>    BSR.w writelong
000351D6 <AmiBlitz3.ab2@17848> BRA.w reget
000351D8 <AmiBlitz3.ab2@17851>   MOVEQ #5,d2
000351DA <AmiBlitz3.ab2@17852>   ASL.l #7,d1
000351DC <AmiBlitz3.ab2@17853>   SUBQ.l #8,a7
000351E2 <AmiBlitz3.ab2@17858>       OR.l #$f23c4400,d1                                   ;fmove.s
000351E8 <AmiBlitz3.ab2@17859>        fmove.s fp0,0(a7)
000351EC <AmiBlitz3.ab2@17861>   BSR writelong
000351EE <AmiBlitz3.ab2@17862>   MOVE.l (a7)+,d1
000351F2 <AmiBlitz3.ab2@17863>   BSR writelong
000351F4 <AmiBlitz3.ab2@17864>   MOVE.l (a7)+,d1
000351F8 <AmiBlitz3.ab2@17868> BRA.w reget
000351FA <AmiBlitz3.ab2@17874>  MOVE.l D3,D0
000351FC <AmiBlitz3.ab2@17875>   TST.w D6
00035200 <AmiBlitz3.ab2@17876>    BEQ.w JL_0_B46C
00035206 <AmiBlitz3.ab2@17877>   MOVEA.l _mathffpbase,A6
0003520A <AmiBlitz3.ab2@17878>    JSR -$1E(A6)
0003520E <AmiBlitz3.ab2@17879>    BVC.w JL_0_B46C
00035210 <AmiBlitz3.ab2@17880>   ADDQ.w #4,A7
00035214 <AmiBlitz3.ab2@17881> BRA.w JL_0_B5A0
00035216 <AmiBlitz3.ab2@17884> RTS
00035218 <AmiBlitz3.ab2@17888>   MOVEQ.l #$00,D6
0003521C <AmiBlitz3.ab2@17889>    fmove.l d3,fp0
00035220 <AmiBlitz3.ab2@17892>   BSR.w JL_0_B480
00035224 <AmiBlitz3.ab2@17893> BRA.w JL_0_B3DC
00035226 <AmiBlitz3.ab2@17896>   MOVE.w D2,-(A7)
0003522A <AmiBlitz3.ab2@17897>    BSR.w JL_0_BF6A
0003522C <AmiBlitz3.ab2@17898>   MOVE.w (A7)+,D2
0003522E <AmiBlitz3.ab2@17901>   TST.w D2
00035232 <AmiBlitz3.ab2@17902>    BNE.w JL_0_B498
00035234 <AmiBlitz3.ab2@17903>   TST.w D6
00035238 <AmiBlitz3.ab2@17904>    BEQ.w JL_0_B492
0003523A <AmiBlitz3.ab2@17905>   MOVEQ.l #$04,D2
0003523E <AmiBlitz3.ab2@17906> BRA.w JL_0_B510
00035240 <AmiBlitz3.ab2@17909>   MOVEQ.l #$02,D2
00035244 <AmiBlitz3.ab2@17910> BRA.w JL_0_B4C4
00035248 <AmiBlitz3.ab2@17913>   CMP.w #$1,D2
0003524C <AmiBlitz3.ab2@17914>    BEQ.w JL_0_B4C4
00035250 <AmiBlitz3.ab2@17915>   CMP.w #$2,D2
00035254 <AmiBlitz3.ab2@17916>    BEQ.w JL_0_B4F8
00035258 <AmiBlitz3.ab2@17917>   CMP.w #$3,D2
0003525C <AmiBlitz3.ab2@17918>    BEQ.w JL_0_B57A
00035260 <AmiBlitz3.ab2@17919>   CMP.w #$4,D2
00035264 <AmiBlitz3.ab2@17920>    BEQ.w JL_0_B506
00035268 <AmiBlitz3.ab2@17921>   CMP.w #$5,D2
0003526C <AmiBlitz3.ab2@17922>    BEQ.w JL_0_B586
00035270 <AmiBlitz3.ab2@17923> BRA.w mismatcherr
00035274 <AmiBlitz3.ab2@17926>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0003527A <AmiBlitz3.ab2@17927>   CMP.l #$7f,D0
0003527E <AmiBlitz3.ab2@17928>    BGT.w JL_0_B4DC
00035284 <AmiBlitz3.ab2@17929>   CMP.l #$FFFFFF80,D0
00035288 <AmiBlitz3.ab2@17930>    BGE.w JL_0_B59E
0003528A <AmiBlitz3.ab2@17933>   MOVEQ.l #$02,D2                                          ;was 2 before
00035290 <AmiBlitz3.ab2@17934>   CMP.l #$7fff,D0
00035294 <AmiBlitz3.ab2@17935>    BGT.w JL_0_B4F2
0003529A <AmiBlitz3.ab2@17936>   CMP.l #$FFFF8000,D0
0003529E <AmiBlitz3.ab2@17937>    BGE.w JL_0_B59E
000352A0 <AmiBlitz3.ab2@17940>   MOVEQ.l #$03,D2
000352A4 <AmiBlitz3.ab2@17941> BRA.w JL_0_B59E
000352A6 <AmiBlitz3.ab2@17967>   TST.w D6
000352AA <AmiBlitz3.ab2@17968>    BNE.w JL_0_B510
000352AE <AmiBlitz3.ab2@17969>    BSR.w JL_0_B450
000352B2 <AmiBlitz3.ab2@17970> BRA.w JL_0_B4DC
000352B6 <AmiBlitz3.ab2@17973>   BSR.w JL_0_B450
000352B8 <AmiBlitz3.ab2@17974>   TST.w D6
000352BC <AmiBlitz3.ab2@17975>   BEQ.w JL_0_B560
000352C2 <AmiBlitz3.ab2@17978>   CMP.l #MaxWordSgnd,D0
000352C6 <AmiBlitz3.ab2@17979>    BGT.w JL_0_B5A0
000352CC <AmiBlitz3.ab2@17980>   CMP.l #$FFFF8000,D0
000352D0 <AmiBlitz3.ab2@17981>    BLT.w JL_0_B5A0
000352D2 <AmiBlitz3.ab2@17982>   MOVE.w D0,-(A7)
000352D6 <AmiBlitz3.ab2@17983>    JSR -$24(A6)
000352D8 <AmiBlitz3.ab2@17984>   MOVE.l D0,D1
000352DA <AmiBlitz3.ab2@17985>   MOVE.l D3,D0
000352DE <AmiBlitz3.ab2@17986>    JSR -$48(A6)
000352E4 <AmiBlitz3.ab2@17987>   MOVE.l #$80000051,D1
000352E8 <AmiBlitz3.ab2@17988>    JSR -$4E(A6)
000352EC <AmiBlitz3.ab2@17989>    JSR -$1E(A6)
000352F0 <AmiBlitz3.ab2@17990>    BEQ.w JL_0_B55A
000352F6 <AmiBlitz3.ab2@17991>   CMP.l #$10000,D0
000352FA <AmiBlitz3.ab2@17992>    BCC.w JL_0_B55A
000352FC <AmiBlitz3.ab2@17993>   MOVE.w D0,D1
000352FE <AmiBlitz3.ab2@17994>   MOVE.w (A7)+,D0
00035300 <AmiBlitz3.ab2@17995>   SWAP D0
00035302 <AmiBlitz3.ab2@17996>   MOVE.w D1,D0
00035306 <AmiBlitz3.ab2@17997> BRA.w JL_0_B59E
00035308 <AmiBlitz3.ab2@18000>   ADDQ.w #2,A7
0003530C <AmiBlitz3.ab2@18001> BRA.w JL_0_B5A0
00035312 <AmiBlitz3.ab2@18004>   CMP.l #MaxWordSgnd,D0
00035316 <AmiBlitz3.ab2@18005>    BGT.w JL_0_B4F2
0003531C <AmiBlitz3.ab2@18006>   CMP.l #$FFFF8000,D0
00035320 <AmiBlitz3.ab2@18007>    BLT.w JL_0_B4F2
00035322 <AmiBlitz3.ab2@18008>   SWAP D0
00035326 <AmiBlitz3.ab2@18009> BRA.w JL_0_B59E
00035328 <AmiBlitz3.ab2@18012>   TST.w D6
0003532C <AmiBlitz3.ab2@18013>   BNE.w JL_0_B5A0
0003532E <AmiBlitz3.ab2@18014>   MOVE.l D3,D0
00035332 <AmiBlitz3.ab2@18015> BRA.w JL_0_B59E
00035334 <AmiBlitz3.ab2@18018>   TST.w D6
00035338 <AmiBlitz3.ab2@18019>   BNE.w JL_0_B5A0
0003533A <AmiBlitz3.ab2@18020>   MOVE.l D3,D0
00035340 <AmiBlitz3.ab2@18021>   MOVEA.l _mathffpbase,A6
00035344 <AmiBlitz3.ab2@18022>   JSR -$24(A6)
00035346 <AmiBlitz3.ab2@18023>   MOVE.l D0,D3
0003534A <AmiBlitz3.ab2@18024> BRA.w JL_0_B5A0
0003534C <AmiBlitz3.ab2@18027> RTS
0003534E <AmiBlitz3.ab2@18030>   MOVEQ.l #$05,D2
00035350 <AmiBlitz3.ab2@18031>   MOVE.l D3,D0
00035352 <AmiBlitz3.ab2@18032> RTS
00035356 <AmiBlitz3.ab2@18036>             Ds.l 1                                         ;??Looks like unused data??
0003535A <AmiBlitz3.ab2@18037> pushpc:     Ds.l 1
0003535E <AmiBlitz3.ab2@18038> pushoff:    Ds.l 1
00035362 <AmiBlitz3.ab2@18039> pushdooff:  Ds.l 1
00035364 <AmiBlitz3.ab2@18040> pushclen:   Ds.w 1
00035368 <AmiBlitz3.ab2@18041> pushat:     Ds.l 1
00035372 <AmiBlitz3.ab2@18045>   MOVE.l destpointer,pushpc
0003537C <AmiBlitz3.ab2@18046>   MOVE.l hunkoffsetbase,pushoff
0003537E <AmiBlitz3.ab2@18047> RTS
00035382 <AmiBlitz3.ab2@18051>   MOVEM.l D0-D1/A0-A1,-(A7)
00035388 <AmiBlitz3.ab2@18052>   MOVE.l destpointer,D0
0003538C <AmiBlitz3.ab2@18053>   MOVE.l pushpc(PC),D1
00035392 <AmiBlitz3.ab2@18054>   MOVE.l D1,destpointer
00035394 <AmiBlitz3.ab2@18055>   SUB.l D1,D0
0003539A <AmiBlitz3.ab2@18056>   MOVE.w D0,pushclen
0003539E <AmiBlitz3.ab2@18057>    BEQ.w JL_0_B636
000353A4 <AmiBlitz3.ab2@18058>   MOVE.w dontwrite,D1
000353A8 <AmiBlitz3.ab2@18059>    BNE.w JL_0_B636
000353B0 <AmiBlitz3.ab2@18060>    CMP.w #1000,pushclen
000353B4 <AmiBlitz3.ab2@18061>    BGE conmemerr
000353BA <AmiBlitz3.ab2@18062>    MOVE.l pushat,d0
000353BE <AmiBlitz3.ab2@18063>    BNE 'nomem
000353C4 <AmiBlitz3.ab2@18064>    MOVE.l #1024,d0
000353C6 <AmiBlitz3.ab2@18065>   MOVEQ.l #$01,D1
000353CC <AmiBlitz3.ab2@18066>   MOVEA.l _execbase,A6
000353D2 <AmiBlitz3.ab2@18067>   MOVE.l mempool,a0
000353D6 <AmiBlitz3.ab2@18068>   JSR _AllocPooled(a6)
000353DC <AmiBlitz3.ab2@18070>   MOVE.l D0,pushat
000353DE <AmiBlitz3.ab2@18073>   MOVEA.l D0,A0
000353E4 <AmiBlitz3.ab2@18074>   MOVEA.l pushpc,A1
000353EA <AmiBlitz3.ab2@18075>   MOVE.l A1,destpointer
000353F0 <AmiBlitz3.ab2@18076>   MOVE.w pushclen,D0
000353F2 <AmiBlitz3.ab2@18077>   LSR.w #1,D0
000353F4 <AmiBlitz3.ab2@18078>   SUBQ.w #1,D0
000353F6 <AmiBlitz3.ab2@18081>     MOVE.w (A1)+,(A0)+
000353FA <AmiBlitz3.ab2@18082>   DBF D0,JL_0_B626
00035404 <AmiBlitz3.ab2@18084>    MOVE.l hunkoffsetbase,pushdooff
00035408 <AmiBlitz3.ab2@18087>   MOVEM.l (A7)+,D0-D1/A0-A1
0003540A <AmiBlitz3.ab2@18088> RTS
0003540E <AmiBlitz3.ab2@18092>   MOVEM.l D0-D1/A0-A1,-(A7)
00035410 <AmiBlitz3.ab2@18093>   MOVEQ.l #$00,D0
00035416 <AmiBlitz3.ab2@18094>   MOVE.w pushclen,D0
0003541A <AmiBlitz3.ab2@18095>    BEQ.w JL_0_B6D8
00035420 <AmiBlitz3.ab2@18096>   MOVE.l destpointer,D1
00035426 <AmiBlitz3.ab2@18097>   ADD.l D0,destpointer
0003542C <AmiBlitz3.ab2@18098>   TST.w dontwrite
00035430 <AmiBlitz3.ab2@18099>    BNE.w JL_0_B6D8
00035432 <AmiBlitz3.ab2@18100>   LSR.w #1,D0
00035434 <AmiBlitz3.ab2@18101>   SUBQ.w #1,D0
00035436 <AmiBlitz3.ab2@18102>   MOVEA.l D1,A1
0003543C <AmiBlitz3.ab2@18103>   MOVEA.l pushat,A0
00035442 <AmiBlitz3.ab2@18106>     CMPA.l destbufferend,A1
00035446 <AmiBlitz3.ab2@18107>     BCS.w JL_0_B684
0003544E <AmiBlitz3.ab2@18109>     MOVE.w #$FFFF,dontwrite
00035452 <AmiBlitz3.ab2@18110>   BRA.w JL_0_B6D8
00035454 <AmiBlitz3.ab2@18113>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
00035458 <AmiBlitz3.ab2@18114>   DBF D0,JL_0_B66E
0003545E <AmiBlitz3.ab2@18116>   SUB.l pushpc,D1
00035462 <AmiBlitz3.ab2@18117>   BEQ.w JL_0_B6C2
00035468 <AmiBlitz3.ab2@18118>   MOVEA.l pushdooff,A0
0003546E <AmiBlitz3.ab2@18121>   CMPA.l pushoff,A0
00035472 <AmiBlitz3.ab2@18122>   BEQ.w JL_0_B6C2
00035476 <AmiBlitz3.ab2@18123>   MOVEA.l $4(A0),A1
0003547C <AmiBlitz3.ab2@18124>   ADDA.l destbufferstart,A1
00035482 <AmiBlitz3.ab2@18125>   CMPA.l destbufferend,A1
00035486 <AmiBlitz3.ab2@18126>   BCC.w JL_0_B6BC
0003548A <AmiBlitz3.ab2@18127>   ADD.l D1,$4(A0)
0003548C <AmiBlitz3.ab2@18130>   MOVEA.l (A0),A0
00035490 <AmiBlitz3.ab2@18131> BRA.w JL_0_B69A
00035496 <AmiBlitz3.ab2@18134>   MOVEA.l pushat,A1
00035498 <AmiBlitz3.ab2@18135>   MOVEQ.l #$00,D0
0003549E <AmiBlitz3.ab2@18136>   MOVE.w pushclen,D0
000354A4 <AmiBlitz3.ab2@18137>   MOVEA.l _execbase,A6
000354AA <AmiBlitz3.ab2@18138>   MOVE.l mempool,a0
000354AE <AmiBlitz3.ab2@18142>   MOVEM.l (A7)+,D0-D1/A0-A1
000354B0 <AmiBlitz3.ab2@18143> RTS
000354B2 <AmiBlitz3.ab2@18146>   MOVE.l D1,-(A7)                                          ;array mul
000354B4 <AmiBlitz3.ab2@18147>   MOVEQ.l #$00,D2
000354B6 <AmiBlitz3.ab2@18148>   MOVEQ.l #$0F,D3
000354B8 <AmiBlitz3.ab2@18151>     LSL.w #1,D1
000354BC <AmiBlitz3.ab2@18152>     BCC.w JL_0_B6EE
000354BE <AmiBlitz3.ab2@18153>     ADDQ.w #1,D2
000354C0 <AmiBlitz3.ab2@18154>     MOVE.w D3,D4
000354C4 <AmiBlitz3.ab2@18157>   DBF D3,JL_0_B6E4
000354C6 <AmiBlitz3.ab2@18159>   SUBQ.w #1,D2
000354CA <AmiBlitz3.ab2@18160>    BNE.w JL_0_B726
000354CC <AmiBlitz3.ab2@18161>   ADDQ.w #4,A7
000354CE <AmiBlitz3.ab2@18162>   MOVE.w D4,D1
000354D2 <AmiBlitz3.ab2@18163>    BEQ.w JL_0_B724
000354D6 <AmiBlitz3.ab2@18164>   CMP.w #$8,D1
000354DA <AmiBlitz3.ab2@18165>    BCS.w JL_0_B712
000354DE <AmiBlitz3.ab2@18166>   SUBI.w #$8,D1
000354E2 <AmiBlitz3.ab2@18167>    BSR.w JL_0_B712
000354E4 <AmiBlitz3.ab2@18168>   MOVEQ.l #$00,D1
000354E6 <AmiBlitz3.ab2@18171>   LSL.w #8,D1
000354E8 <AmiBlitz3.ab2@18172>   LSL.w #1,D1
000354EC <AmiBlitz3.ab2@18173>   ORI.w #$E188,D1
000354F2 <AmiBlitz3.ab2@18174>   OR.w regnum,D1
000354F6 <AmiBlitz3.ab2@18175> BRA.w writeword
000354F8 <AmiBlitz3.ab2@18178> RTS
000354FA <AmiBlitz3.ab2@18181>   MOVEQ #0,d1
00035500 <AmiBlitz3.ab2@18182>   MOVE.w regnum,D1
00035502 <AmiBlitz3.ab2@18183>   LSL.l #8,D1
00035504 <AmiBlitz3.ab2@18185>   LSL.l #4,d1
0003550A <AmiBlitz3.ab2@18187>   OR.l #$4c3c0000,d1
00035510 <AmiBlitz3.ab2@18188>   OR.w regnum,d1
00035514 <AmiBlitz3.ab2@18189>   BSR.w writelong
00035516 <AmiBlitz3.ab2@18190>   MOVE.l (A7)+,D1
0003551A <AmiBlitz3.ab2@18192> BRA writelong
00035520 <AmiBlitz3.ab2@18195>   MOVE.l destpointer,-(A7)
00035522 <AmiBlitz3.ab2@18196>   MOVEQ.l #-$01,D7
00035526 <AmiBlitz3.ab2@18199>     BSR.w findhilib
0003552A <AmiBlitz3.ab2@18200>      BEQ.w JL_0_B8A4
0003552E <AmiBlitz3.ab2@18201>     TST.w $C(A2)
00035532 <AmiBlitz3.ab2@18202>      BPL.w JL_0_B746
00035536 <AmiBlitz3.ab2@18204>     MOVE.l $16(A2),D1
0003553A <AmiBlitz3.ab2@18205>     BEQ.w JL_0_B746
0003553E <AmiBlitz3.ab2@18207>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
00035542 <AmiBlitz3.ab2@18208>     CMP.w #-$2,D1
00035546 <AmiBlitz3.ab2@18209>      BNE.w JL_0_B772
0003554A <AmiBlitz3.ab2@18210>     BSR.w makevsize
0003554E <AmiBlitz3.ab2@18211> BRA.w JL_0_B7FE
00035552 <AmiBlitz3.ab2@18214>     CMP.w #-$5C4,D1
00035556 <AmiBlitz3.ab2@18215>      BNE.w JL_0_B790
0003555A <AmiBlitz3.ab2@18216>     MOVE.w #$7000,D1
00035562 <AmiBlitz3.ab2@18217>     BTST #$7,autorun
00035564 <AmiBlitz3.ab2@18218>     SNE D1
00035568 <AmiBlitz3.ab2@18219>     BSR.w writeword
0003556C <AmiBlitz3.ab2@18220> BRA.w JL_0_B7FE
00035570 <AmiBlitz3.ab2@18223>     CMP.w #-$12D,D1
00035574 <AmiBlitz3.ab2@18224>      BNE.w JL_0_B7A0
00035578 <AmiBlitz3.ab2@18225>     BSR.w makessize
0003557C <AmiBlitz3.ab2@18226> BRA.w JL_0_B7FE
00035580 <AmiBlitz3.ab2@18229>     CMP.w #-$1F5,D1
00035584 <AmiBlitz3.ab2@18230>      BNE.w JL_0_B7C2
00035588 <AmiBlitz3.ab2@18231>     MOVE.w #$203C,D1
0003558C <AmiBlitz3.ab2@18232>     BSR.w writeword
00035590 <AmiBlitz3.ab2@18233>     BSR.w addoff
00035596 <AmiBlitz3.ab2@18234>     MOVE.l endop,D1
0003559A <AmiBlitz3.ab2@18235>     BSR.w writelong
0003559E <AmiBlitz3.ab2@18236> BRA.w JL_0_B7FE
000355A2 <AmiBlitz3.ab2@18239>     CMP.w #-$3E9,D1
000355A6 <AmiBlitz3.ab2@18240>      BNE.w JL_0_B7E4
000355AA <AmiBlitz3.ab2@18241>     MOVE.w #$203C,D1
000355AE <AmiBlitz3.ab2@18242>     BSR.w writeword
000355B2 <AmiBlitz3.ab2@18243>     BSR.w addoff
000355B8 <AmiBlitz3.ab2@18244>     MOVE.l data2at,D1
000355BC <AmiBlitz3.ab2@18245>     BSR.w writelong
000355C0 <AmiBlitz3.ab2@18246> BRA.w JL_0_B7FE
000355C4 <AmiBlitz3.ab2@18249>     CMP.w #$1,D1
000355C8 <AmiBlitz3.ab2@18250>      BNE.w JL_0_B7FE
000355CC <AmiBlitz3.ab2@18251>     MOVE.w #$203C,D1
000355D0 <AmiBlitz3.ab2@18252>     BSR.w writeword
000355D6 <AmiBlitz3.ab2@18253>     MOVE.l ptr_seg_debugger,D1
000355DA <AmiBlitz3.ab2@18254>     BSR.w writelong
000355DE <AmiBlitz3.ab2@18257>     MOVE.l $16(A2),D1
000355E6 <AmiBlitz3.ab2@18258>     MOVE.w #$FFFF,lasta6
000355EA <AmiBlitz3.ab2@18259>     BSR.w Amakelibsub
000355F0 <AmiBlitz3.ab2@18260>     CMPI.w #$FFFE,$4(A2)
000355F4 <AmiBlitz3.ab2@18261>      BNE.w JL_0_B83A
000355FA <AmiBlitz3.ab2@18262>     MOVE.l intdata1,D1
000355FE <AmiBlitz3.ab2@18263>      BEQ.w JL_0_B83A
00035604 <AmiBlitz3.ab2@18264>     MOVE.w putidata1,D1
00035608 <AmiBlitz3.ab2@18265>     BSR.w writeword
0003560C <AmiBlitz3.ab2@18266>     BSR.w addoff
00035612 <AmiBlitz3.ab2@18267>     MOVE.l intdata1,D1
00035616 <AmiBlitz3.ab2@18268>     BSR.w writelong
0003561A <AmiBlitz3.ab2@18271>     MOVE.w #$2B40,D1
0003561E <AmiBlitz3.ab2@18272>     TST.w $1A(A2)
00035622 <AmiBlitz3.ab2@18273>      BEQ.w JL_0_B746
00035626 <AmiBlitz3.ab2@18274>      BPL.w JL_0_B84E
0003562A <AmiBlitz3.ab2@18275>     MOVE.w #$3B40,D1
0003562E <AmiBlitz3.ab2@18278>     BSR.w writeword
00035632 <AmiBlitz3.ab2@18279>     MOVE.w $A(A2),D1
00035636 <AmiBlitz3.ab2@18280>      BSR.w writeword
0003563C <AmiBlitz3.ab2@18281>     CMPI.w #$FFFA,$4(A2)
00035640 <AmiBlitz3.ab2@18282>      BNE.w JL_0_B746
00035642 <AmiBlitz3.ab2@18283>     MOVE.w D7,-(A7)
00035648 <AmiBlitz3.ab2@18284>     MOVE.w numstatic,D4
0003564C <AmiBlitz3.ab2@18285>      BEQ.w JL_0_B882
00035652 <AmiBlitz3.ab2@18286>     MOVE.l staticdata,D3
00035656 <AmiBlitz3.ab2@18287>      BSR.w datastart
0003565A <AmiBlitz3.ab2@18288>     MOVE.w #$C500,D1
0003565E <AmiBlitz3.ab2@18289>      BSR.w tokejsr2
00035664 <AmiBlitz3.ab2@18292>     MOVE.w maxsused,D4
00035668 <AmiBlitz3.ab2@18293>      BEQ.w JL_0_B89E
0003566E <AmiBlitz3.ab2@18294>     MOVE.l maxsat,D3
00035672 <AmiBlitz3.ab2@18295>      BSR.w datastart
00035676 <AmiBlitz3.ab2@18296>     MOVE.w #$CF00,D1
0003567A <AmiBlitz3.ab2@18297>      BSR.w tokejsr2
0003567C <AmiBlitz3.ab2@18300>     MOVE.w (A7)+,D7
00035680 <AmiBlitz3.ab2@18301> BRA.w JL_0_B746
00035686 <AmiBlitz3.ab2@18304>   MOVE.l destpointer,D1
00035688 <AmiBlitz3.ab2@18305>   CMP.l (A7),D1
0003568C <AmiBlitz3.ab2@18306>    BNE.w JL_0_B8BC
00035694 <AmiBlitz3.ab2@18307>   MOVE.w #$0008,noinits+2
00035698 <AmiBlitz3.ab2@18308> BRA.w JL_0_B8E6
0003569E <AmiBlitz3.ab2@18311>   CLR.w noinits+2
000356A4 <AmiBlitz3.ab2@18312>   MOVE.w dontwrite,D1
000356A8 <AmiBlitz3.ab2@18313>    BNE.w JL_0_B8DE
000356AE <AmiBlitz3.ab2@18314>   TST.l newinitaddr
000356B2 <AmiBlitz3.ab2@18315>    BEQ 'l10
000356B8 <AmiBlitz3.ab2@18316>   MOVE.l newinitaddr,D2
000356BE <AmiBlitz3.ab2@18317>   SUB.l destbufferstart,D2
000356C0 <AmiBlitz3.ab2@18318>   ADDQ.l #2,d2
000356C6 <AmiBlitz3.ab2@18319>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
000356CA <AmiBlitz3.ab2@18321>   MOVE.w #$4EB9,(A0)+
000356CC <AmiBlitz3.ab2@18322>   MOVE.l (A7),(A0)+
000356D0 <AmiBlitz3.ab2@18324> BRA 'l20
000356D6 <AmiBlitz3.ab2@18327>   MOVEA.l destbufferstart,A0                               ;write initcode
000356DC <AmiBlitz3.ab2@18328>   TST.b saved0
000356E0 <AmiBlitz3.ab2@18329>   BEQ 'l1
000356E4 <AmiBlitz3.ab2@18330>   MOVE.w #$23c0,(a0)+
000356E6 <AmiBlitz3.ab2@18331>   MOVE.l a0,a1
000356E8 <AmiBlitz3.ab2@18332>   ADDQ.l #6,a1
000356EA <AmiBlitz3.ab2@18333>   MOVE.l a1,(a0)+
000356EC <AmiBlitz3.ab2@18334>   MOVEQ.l #$02,D2
000356F0 <AmiBlitz3.ab2@18335>   BSR.w addhunkoffset
000356F4 <AmiBlitz3.ab2@18336>   MOVE.w #$6004,(a0)+
000356FA <AmiBlitz3.ab2@18337>   MOVE.l #$4e714e71,(a0)+
000356FE <AmiBlitz3.ab2@18340>   MOVE.w #$4EB9,(A0)+
00035700 <AmiBlitz3.ab2@18341>   MOVE.l (A7),(A0)+
00035702 <AmiBlitz3.ab2@18342>   MOVEQ #2,d2
00035708 <AmiBlitz3.ab2@18343>   TST.b saved0
0003570C <AmiBlitz3.ab2@18344>   BEQ 'l20
0003570E <AmiBlitz3.ab2@18345>   MOVEQ.l #14,D2
00035712 <AmiBlitz3.ab2@18348>   BSR.w addhunkoffset
00035716 <AmiBlitz3.ab2@18349>   MOVE.w #$2039,(a0)+
00035718 <AmiBlitz3.ab2@18350>   MOVE.l a1,(a0)+
0003571A <AmiBlitz3.ab2@18351>   MOVEQ.l #20,d2
0003571E <AmiBlitz3.ab2@18354>   BSR.w addhunkoffset
00035722 <AmiBlitz3.ab2@18357>   MOVE.w #$4E75,D1
00035726 <AmiBlitz3.ab2@18358>   BSR.w writeword
00035728 <AmiBlitz3.ab2@18361>   ADDQ.w #4,A7
0003572A <AmiBlitz3.ab2@18362> RTS
0003572E <AmiBlitz3.ab2@18367>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
00035734 <AmiBlitz3.ab2@18369>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0003573A <AmiBlitz3.ab2@18371>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
00035740 <AmiBlitz3.ab2@18376>   MOVE.l stringbuffer,D1
00035744 <AmiBlitz3.ab2@18377> BRA.w makesize
00035746 <AmiBlitz3.ab2@18380>   MOVEQ.l #$00,D1
0003574C <AmiBlitz3.ab2@18381>   MOVE.w globalvarpointer,D1
00035750 <AmiBlitz3.ab2@18382>   SUBI.w #$8000,D1
00035754 <AmiBlitz3.ab2@18383>   BNE.w makesize
00035756 <AmiBlitz3.ab2@18384>     MOVEQ.l #$08,D1
00035758 <AmiBlitz3.ab2@18387>   MOVE.l D1,-(A7)
0003575C <AmiBlitz3.ab2@18388>   MOVE.w #$203C,D1
00035760 <AmiBlitz3.ab2@18389>   BSR.w writeword
00035762 <AmiBlitz3.ab2@18390>   MOVE.l (A7)+,D1
00035766 <AmiBlitz3.ab2@18391> BRA.w writelong
00035768 <AmiBlitz3.ab2@18399>   MOVEQ.l #$00,D1
0003576E <AmiBlitz3.ab2@18400>   MOVEA.l libpointer,A1
00035772 <AmiBlitz3.ab2@18403>     CMPA.w #$0,A1
00035776 <AmiBlitz3.ab2@18404>     BEQ.w findhilib__done
0003577A <AmiBlitz3.ab2@18405>       CMP.w $4(A1),D7
0003577E <AmiBlitz3.ab2@18406>       BLS.w findhilib__next
00035782 <AmiBlitz3.ab2@18407>         CMP.w $4(A1),D1
00035786 <AmiBlitz3.ab2@18408>         BCC.w findhilib__next
0003578A <AmiBlitz3.ab2@18409>           MOVE.w $4(A1),D1
0003578C <AmiBlitz3.ab2@18410>           MOVEA.l A1,A2
0003578E <AmiBlitz3.ab2@18413>     MOVEA.l (A1),A1
00035792 <AmiBlitz3.ab2@18414> BRA.w findhilib__loop
00035794 <AmiBlitz3.ab2@18417>   MOVE.w D1,D7
00035796 <AmiBlitz3.ab2@18418> RTS
00035798 <AmiBlitz3.ab2@18426>   MOVEQ.l #-$01,D1
0003579E <AmiBlitz3.ab2@18427>   MOVEA.l libpointer,A1
000357A2 <AmiBlitz3.ab2@18430>     CMPA.w #$0,A1
000357A6 <AmiBlitz3.ab2@18431>      BEQ.w findlolib__done
000357AA <AmiBlitz3.ab2@18432>     CMP.w $4(A1),D7
000357AE <AmiBlitz3.ab2@18433>      BCC.w findlolib__next
000357B2 <AmiBlitz3.ab2@18434>     CMP.w $4(A1),D1
000357B6 <AmiBlitz3.ab2@18435>      BLS.w findlolib__next
000357BA <AmiBlitz3.ab2@18436>     MOVE.w $4(A1),D1
000357BC <AmiBlitz3.ab2@18437>     MOVEA.l A1,A2
000357BE <AmiBlitz3.ab2@18440>     MOVEA.l (A1),A1
000357C2 <AmiBlitz3.ab2@18441> BRA.w findlolib__loop
000357C4 <AmiBlitz3.ab2@18444>   MOVE.w D1,D7
000357C8 <AmiBlitz3.ab2@18445>   CMP.w #-$1,D1
000357CA <AmiBlitz3.ab2@18446> RTS
000357D0 <AmiBlitz3.ab2@18450>   ADDQ.w #1,globalvarpointer
000357D8 <AmiBlitz3.ab2@18451>   BCLR #$0,globalvarpointer+1
000357DA <AmiBlitz3.ab2@18452>   MOVEQ.l #$00,D7
000357DE <AmiBlitz3.ab2@18455>     BSR.w findlolib
000357E2 <AmiBlitz3.ab2@18456>     BEQ.w JL_0_BA74
000357E6 <AmiBlitz3.ab2@18457>     TST.w $C(A2)
000357EA <AmiBlitz3.ab2@18458>     BPL.w JL_0_B99A
000357EC <AmiBlitz3.ab2@18459>     MOVEA.l A2,A1
000357F0 <AmiBlitz3.ab2@18460>     ADDA.l $12(A1),A1
000357F4 <AmiBlitz3.ab2@18461>     TST.w -$2(A1)
000357F8 <AmiBlitz3.ab2@18462>     BEQ.w JL_0_BA34
000357FC <AmiBlitz3.ab2@18463>     MOVE.l -$A(A1),D1
00035800 <AmiBlitz3.ab2@18464>     LEA $6(A2,D1.L),A3
00035802 <AmiBlitz3.ab2@18467>       TST.w (A3)+
00035806 <AmiBlitz3.ab2@18468>       BEQ.w JL_0_B9CC
00035808 <AmiBlitz3.ab2@18469>         ADDQ.w #2,A3
0003580C <AmiBlitz3.ab2@18470> BRA.w JL_0_B9C0
00035810 <AmiBlitz3.ab2@18473>     TST.l $4(A3)
00035814 <AmiBlitz3.ab2@18474>     BEQ.w JL_0_BA34
00035818 <AmiBlitz3.ab2@18475>       MOVE.w freemax(PC),D1
0003581C <AmiBlitz3.ab2@18476>       BSR.w writeword
00035820 <AmiBlitz3.ab2@18477>       MOVE.w -$4(A1),D1
00035824 <AmiBlitz3.ab2@18478>       BSR.w writeword
0003582A <AmiBlitz3.ab2@18479>       MOVE.l free,D1
0003582E <AmiBlitz3.ab2@18480>       MOVE.w -$6(A1),D1
00035832 <AmiBlitz3.ab2@18481>       BSR.w writelong
00035838 <AmiBlitz3.ab2@18482>       MOVE.l destpointer,-(A7)
0003583A <AmiBlitz3.ab2@18483>       MOVEQ.l #$01,D1
0003583E <AmiBlitz3.ab2@18484>       MOVE.w -$2(A1),D2
00035840 <AmiBlitz3.ab2@18485>       LSL.w D2,D1
00035842 <AmiBlitz3.ab2@18486>       MOVE.w D1,-(A7)
00035846 <AmiBlitz3.ab2@18487>       MOVE.l -$A(A1),D1
0003584A <AmiBlitz3.ab2@18488>       BSR.w Amakelibsub
0003584E <AmiBlitz3.ab2@18489>       MOVE.w freemax3(PC),D1
00035852 <AmiBlitz3.ab2@18490>       BSR.w writeword
00035854 <AmiBlitz3.ab2@18491>       MOVE.w (A7)+,D1
00035858 <AmiBlitz3.ab2@18492>       BSR.w writeword
0003585C <AmiBlitz3.ab2@18493>       MOVE.l freemax2(PC),D1
00035860 <AmiBlitz3.ab2@18494>       BSR.w writelong
00035862 <AmiBlitz3.ab2@18495>       MOVE.l (A7)+,D1
00035868 <AmiBlitz3.ab2@18496>       SUB.l destpointer,D1
0003586C <AmiBlitz3.ab2@18497>       BSR.w writeword
00035870 <AmiBlitz3.ab2@18498>       MOVE.w freemax4(PC),D1
00035874 <AmiBlitz3.ab2@18499>       BSR.w writeword
00035878 <AmiBlitz3.ab2@18502>     MOVE.l $1C(A2),D1
0003587C <AmiBlitz3.ab2@18503>     BEQ.w JL_0_B99A
00035880 <AmiBlitz3.ab2@18505>     MOVE.w $4(A2),D1
00035884 <AmiBlitz3.ab2@18506>     CMP.w #-$2,D1
00035888 <AmiBlitz3.ab2@18507>     BNE.w JL_0_BA50
0003588C <AmiBlitz3.ab2@18508>       BSR.w makevsize
00035890 <AmiBlitz3.ab2@18509> BRA.w JL_0_BA60
00035894 <AmiBlitz3.ab2@18512>     CMP.w #-$12D,D1
00035898 <AmiBlitz3.ab2@18513>     BNE.w JL_0_BA60
0003589C <AmiBlitz3.ab2@18514>       BSR.w makessize
000358A0 <AmiBlitz3.ab2@18515> BRA.w JL_0_BA60
000358A4 <AmiBlitz3.ab2@18518>     MOVE.l $1C(A2),D1
000358AC <AmiBlitz3.ab2@18519>     MOVE.w #$FFFF,lasta6
000358B0 <AmiBlitz3.ab2@18520>     BSR.w Amakelibsub
000358B4 <AmiBlitz3.ab2@18521> BRA.w JL_0_B99A
000358B6 <AmiBlitz3.ab2@18524> RTS
000358BA <AmiBlitz3.ab2@18528> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
000358BC <AmiBlitz3.ab2@18530> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
000358C0 <AmiBlitz3.ab2@18531>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
000358C2 <AmiBlitz3.ab2@18532> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
000358C6 <AmiBlitz3.ab2@18533> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
000358CC <AmiBlitz3.ab2@18538>   TST.b debugmode
000358D0 <AmiBlitz3.ab2@18539>    BEQ.b chkstak__skip
000358D6 <AmiBlitz3.ab2@18540>   TST.w debugversion
000358DA <AmiBlitz3.ab2@18541>    BNE.b chkstak__skip
000358DE <AmiBlitz3.ab2@18542>   MOVE.w #$C308,D1
000358E2 <AmiBlitz3.ab2@18543> BRA.w Atokejsr
000358E4 <AmiBlitz3.ab2@18546> RTS
000358EC <AmiBlitz3.ab2@18550>   MOVE.w #$FFFF,lasta6
000358F0 <AmiBlitz3.ab2@18555>   MOVEM.l D0-d7/A0-a6,-(A7)
000358F8 <AmiBlitz3.ab2@18556>   MOVE.b #1,nostringopt
000358FE <AmiBlitz3.ab2@18557>   JSR searchinstr
00035900 <AmiBlitz3.ab2@18558>   MOVE.l A3,D1
00035902 <AmiBlitz3.ab2@18559>   SUB.l A2,D1
00035906 <AmiBlitz3.ab2@18560>   BSR.w Amakelibsub
0003590A <AmiBlitz3.ab2@18561>   MOVEM.l (A7)+,d0-d7/a0-a6
0003590C <AmiBlitz3.ab2@18562> RTS
00035912 <AmiBlitz3.ab2@18569>   MOVE.l libisat,-(A7)                                   ;library write
00035918 <AmiBlitz3.ab2@18570>   MOVE.l A2,libisat
0003591A <AmiBlitz3.ab2@18572>   MOVEA.l A1,A2
0003591C <AmiBlitz3.ab2@18573>   MOVE.w (A2)+,D1
00035922 <AmiBlitz3.ab2@18574>   MOVE.l a2,lastinstruction
00035926 <AmiBlitz3.ab2@18575>   ANDI.w #$FF,D1
00035928 <AmiBlitz3.ab2@18576>   ADDA.w D1,A2
0003592A <AmiBlitz3.ab2@18577>   EXG.l D0,A2
0003592C <AmiBlitz3.ab2@18578>   ADDQ.l #1,D0
00035930 <AmiBlitz3.ab2@18579>   BCLR #$0,D0
00035932 <AmiBlitz3.ab2@18580>   EXG.l D0,A2
00035936 <AmiBlitz3.ab2@18581> BRA.w JL_0_BB08
0003593C <AmiBlitz3.ab2@18585>   MOVE.l libisat,-(A7)
00035942 <AmiBlitz3.ab2@18586>   MOVE.l A2,libisat
00035944 <AmiBlitz3.ab2@18587>   MOVEA.l A3,A2
00035948 <AmiBlitz3.ab2@18588> BRA.w JL_0_BB08
0003594A <AmiBlitz3.ab2@18592>   MOVE.l a1,-(a7)
0003594C <AmiBlitz3.ab2@18595>   MOVE.l d0,a0
00035950 <AmiBlitz3.ab2@18596>   MOVE.l $a(a0),d0
00035952 <AmiBlitz3.ab2@18597>   MOVE.l d0,a1
0003595A <AmiBlitz3.ab2@18598>   CMP.l #8,4(a1)
0003595E <AmiBlitz3.ab2@18599>   BLE 'norec
00035960 <AmiBlitz3.ab2@18600>   MOVE.l a0,-(a7)
00035966 <AmiBlitz3.ab2@18601>   MOVE.l typebase,-(a7)
00035968 <AmiBlitz3.ab2@18602>   MOVEQ #0,d0
0003596C <AmiBlitz3.ab2@18603>   MOVE.w 4(a0),d0
00035972 <AmiBlitz3.ab2@18604>   ADD.l d0,typebase
00035976 <AmiBlitz3.ab2@18605>   MOVE.l $4(a1),d0
0003597A <AmiBlitz3.ab2@18606>   BSR scantype
00035980 <AmiBlitz3.ab2@18607>   MOVE.l (a7)+,typebase
00035982 <AmiBlitz3.ab2@18608>   MOVE.l (a7)+,a0
00035988 <AmiBlitz3.ab2@18611>   CMP.l #newtype_string,d0
0003598C <AmiBlitz3.ab2@18612>   BNE 'nostring
00035992 <AmiBlitz3.ab2@18613>   ADDQ #2,a2offset
00035998 <AmiBlitz3.ab2@18614>   MOVE.l #$3f3c0000,d1
0003599A <AmiBlitz3.ab2@18615>   MOVEQ #0,d0
0003599E <AmiBlitz3.ab2@18616>   MOVE.w 4(a0),d0
000359A4 <AmiBlitz3.ab2@18617>   ADD.l typebase,d0
000359A6 <AmiBlitz3.ab2@18618>   MOVE.w d0,d1
000359AA <AmiBlitz3.ab2@18619>   BSR writelong
000359B0 <AmiBlitz3.ab2@18620>   TST.b debugmode
000359B4 <AmiBlitz3.ab2@18621>   BEQ 'l1a
000359B6 <AmiBlitz3.ab2@18622>   MOVE.l d1,-(a7)
000359BC <AmiBlitz3.ab2@18623>   MOVE.l #$c308,d1
000359C2 <AmiBlitz3.ab2@18624>   JSR Atokejsr
000359C4 <AmiBlitz3.ab2@18625>   MOVE.l (a7)+,d1
000359C8 <AmiBlitz3.ab2@18628>   TST.w 8(a0)
000359CC <AmiBlitz3.ab2@18629>   BEQ 'nostring
000359D0 <AmiBlitz3.ab2@18630>   MOVEM.l d2/d3,-(a7)
000359D2 <AmiBlitz3.ab2@18631>   MOVE.l d1,d2
000359D4 <AmiBlitz3.ab2@18632>   MOVEQ #0,d3
000359D8 <AmiBlitz3.ab2@18633>   MOVE.w 8(a0),d3
000359DA <AmiBlitz3.ab2@18634>   SUBQ.l #1,d3
000359DE <AmiBlitz3.ab2@18635>   BEQ 'nostring2
000359E0 <AmiBlitz3.ab2@18638>   ADDQ.l #4,d2
000359E2 <AmiBlitz3.ab2@18639>   MOVE.l d2,d1
000359E6 <AmiBlitz3.ab2@18640>   BSR writelong
000359EC <AmiBlitz3.ab2@18641>   TST.b debugmode
000359F0 <AmiBlitz3.ab2@18642>   BEQ 'l1
000359F6 <AmiBlitz3.ab2@18643>   MOVE.l #$c308,d1
000359FC <AmiBlitz3.ab2@18644>   JSR Atokejsr
00035A02 <AmiBlitz3.ab2@18647>   ADDQ #2,a2offset
00035A04 <AmiBlitz3.ab2@18648>   SUBQ.l #1,d3
00035A08 <AmiBlitz3.ab2@18649>   BNE 'loop
00035A0C <AmiBlitz3.ab2@18652>   MOVEM.l (a7)+,d2/d3
00035A0E <AmiBlitz3.ab2@18655>   MOVE.l (a0),d0
00035A12 <AmiBlitz3.ab2@18656>   BNE 'more
00035A14 <AmiBlitz3.ab2@18657>   MOVE.l (a7)+,a1
00035A16 <AmiBlitz3.ab2@18658> RTS
00035A1A <AmiBlitz3.ab2@18661> libisat:   Ds.l 1
00035A20 <AmiBlitz3.ab2@18667>   MOVE.l libisat,-(A7)                                   
00035A26 <AmiBlitz3.ab2@18668>   MOVE.l A2,libisat
00035A2A <AmiBlitz3.ab2@18669>   LEA $6(A2,D1.L),A2
00035A32 <AmiBlitz3.ab2@18673>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
00035A36 <AmiBlitz3.ab2@18674>   BEQ 'dowritevar
00035A3E <AmiBlitz3.ab2@18675>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
00035A42 <AmiBlitz3.ab2@18676>   BEQ 'dowritevar
00035A4A <AmiBlitz3.ab2@18677>   CMP.l #$3e175265,$1c(a2)
00035A4E <AmiBlitz3.ab2@18678>   BEQ 'dowritevar
00035A56 <AmiBlitz3.ab2@18679>   CMP.l #$3e165772,$1c(a2)
00035A5A <AmiBlitz3.ab2@18680>   BNE 'nowritef
00035A5E <AmiBlitz3.ab2@18683>   MOVEM.l a0-a2/d2,-(a7)
00035A60 <AmiBlitz3.ab2@18684>   MOVEQ #0,d1
00035A6A <AmiBlitz3.ab2@18685>   MOVE.l #0,typebase
00035A6E <AmiBlitz3.ab2@18686>   MOVE.l $a(a3),a0
00035A72 <AmiBlitz3.ab2@18687>   MOVE.l $4(a0),d0
00035A78 <AmiBlitz3.ab2@18688>   CMP.l #8,d0
00035A7C <AmiBlitz3.ab2@18689>   BLE 'notype
00035A80 <AmiBlitz3.ab2@18690>   BSR scantype
00035A86 <AmiBlitz3.ab2@18693>   MOVE.l #$3f3c0000,d1
00035A8C <AmiBlitz3.ab2@18694>   MOVE.w a2offset,d1
00035A90 <AmiBlitz3.ab2@18695>   BSR writelong
00035A96 <AmiBlitz3.ab2@18696>   MOVE.l #$3f3c0000,d1
00035A9A <AmiBlitz3.ab2@18697>   MOVE.l $a(a3),a0
00035A9E <AmiBlitz3.ab2@18698>   MOVE.w 8(a0),d1
00035AA2 <AmiBlitz3.ab2@18699>   BSR writelong
00035AA8 <AmiBlitz3.ab2@18700>   MOVE.l #$3f3cab12,d1
00035AAC <AmiBlitz3.ab2@18701>   BSR writelong
00035AB2 <AmiBlitz3.ab2@18702>   ADDQ.w #6,a2offset
00035AB6 <AmiBlitz3.ab2@18703>   MOVEM.l (a7)+,a0-a2/d2
00035ABC <AmiBlitz3.ab2@18706>   TST.b fpu
00035AC0 <AmiBlitz3.ab2@18707>   BEQ 'nofpu2
00035AC8 <AmiBlitz3.ab2@18708>   CMP.l #$496e7400,$1a(a2)
00035ACC <AmiBlitz3.ab2@18709>   BNE 'noint
00035ACE <AmiBlitz3.ab2@18710>   MOVEQ #0,d1
00035AD4 <AmiBlitz3.ab2@18711>   SUBQ.l #8,destpointer                                    ;fpu int
00035ADA <AmiBlitz3.ab2@18712>   CLR.w a2offset
00035ADE <AmiBlitz3.ab2@18713>   CMP.b #2,d2
00035AE2 <AmiBlitz3.ab2@18714>   BGT 'noword
00035AE6 <AmiBlitz3.ab2@18715>   MOVE.w #$48c0,d1
00035AEC <AmiBlitz3.ab2@18716>   OR.w regnumstore,d1
00035AF0 <AmiBlitz3.ab2@18717>   BSR writeword
00035AF4 <AmiBlitz3.ab2@18718> BRA 'exit2
00035AF8 <AmiBlitz3.ab2@18721>    CMP.b #3,d2
00035AFC <AmiBlitz3.ab2@18722>         BNE 'nolong
00035B00 <AmiBlitz3.ab2@18723> BRA 'exit2
00035B04 <AmiBlitz3.ab2@18726>    CMP.b #4,d2
00035B08 <AmiBlitz3.ab2@18727>         BNE 'noquick
00035B0C <AmiBlitz3.ab2@18728>         MOVE.w #$e080,d1
00035B12 <AmiBlitz3.ab2@18729>         OR.w regnumstore,d1
00035B16 <AmiBlitz3.ab2@18730>         BSR writeword
00035B1A <AmiBlitz3.ab2@18731>         MOVE.w #$e080,d1
00035B20 <AmiBlitz3.ab2@18732>         OR.w regnumstore,d1
00035B24 <AmiBlitz3.ab2@18733>         BSR writeword
00035B28 <AmiBlitz3.ab2@18734> BRA 'exit2
00035B2A <AmiBlitz3.ab2@18737>         MOVEQ #0,d0
00035B2C <AmiBlitz3.ab2@18738>         MOVEQ #0,d1
00035B32 <AmiBlitz3.ab2@18739>         MOVE.w regnumstore,d0
00035B34 <AmiBlitz3.ab2@18740>         ASL.l #7,d0
00035B3A <AmiBlitz3.ab2@18741>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
00035B3C <AmiBlitz3.ab2@18742>         OR.l d0,d1
00035B42 <AmiBlitz3.ab2@18744>         MOVE.l #$3f000000,d1
00035B44 <AmiBlitz3.ab2@18746>         MOVEQ #0,d0
00035B46 <AmiBlitz3.ab2@18747>         MOVEQ #0,d1
00035B4C <AmiBlitz3.ab2@18748>         MOVE.w regnumstore,d0
00035B4E <AmiBlitz3.ab2@18749>         ASL.l #7,d0
00035B50 <AmiBlitz3.ab2@18750>         MOVE.l d0,d1
00035B56 <AmiBlitz3.ab2@18751>         OR.l #$f2000003,d1                                 ;fintrz fpx
00035B58 <AmiBlitz3.ab2@18752>         ASL.l #3,d0
00035B5A <AmiBlitz3.ab2@18753>         OR.l d0,d1
00035B5E <AmiBlitz3.ab2@18754>         BSR writelong
00035B60 <AmiBlitz3.ab2@18755>         MOVEQ #0,d0
00035B66 <AmiBlitz3.ab2@18756>         MOVE.w regnumstore,d0
00035B68 <AmiBlitz3.ab2@18757>         ASL.l #7,d0
00035B6E <AmiBlitz3.ab2@18758>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
00035B70 <AmiBlitz3.ab2@18759>         OR.l d0,d1
00035B72 <AmiBlitz3.ab2@18760>         ASL.l #1,d0
00035B74 <AmiBlitz3.ab2@18761>         ASL.l #8,d0
00035B76 <AmiBlitz3.ab2@18762>         OR.l d0,d1
00035B7A <AmiBlitz3.ab2@18763> BRA 'exit
00035B80 <AmiBlitz3.ab2@18766>   CMP.w #$3c01,24(a2)
00035B84 <AmiBlitz3.ab2@18767>   BNE 'noval
00035B86 <AmiBlitz3.ab2@18768>   MOVE.l a2,-(a7)
00035B8A <AmiBlitz3.ab2@18769>   BSR.w JL_0_BB14
00035B8C <AmiBlitz3.ab2@18770>   MOVE.l (a7)+,a2
00035B90 <AmiBlitz3.ab2@18771> BRA 'exit2
00035B98 <AmiBlitz3.ab2@18788>   CMP.l #$41627300,$1a(a2)
00035B9C <AmiBlitz3.ab2@18789>   BNE 'noabs
00035B9E <AmiBlitz3.ab2@18790>   MOVEQ #0,d1
00035BA4 <AmiBlitz3.ab2@18791>   MOVE.w regnumstore,d1
00035BA6 <AmiBlitz3.ab2@18792>   MOVE.w d1,d0
00035BA8 <AmiBlitz3.ab2@18793>   ASL.w #7,d1
00035BAA <AmiBlitz3.ab2@18794>   ASL.w #8,d0
00035BAC <AmiBlitz3.ab2@18795>   ASL.w #2,d0
00035BAE <AmiBlitz3.ab2@18796>   OR.w d0,d1
00035BB4 <AmiBlitz3.ab2@18797>   SUBQ.l #8,destpointer                                    ;fpu abs
00035BB8 <AmiBlitz3.ab2@18798>   MOVEM.l d3/d1,-(a7)
00035BBC <AmiBlitz3.ab2@18799>   MOVE.w #5,d3
00035BBE <AmiBlitz3.ab2@18800>   EXG d2,d3
00035BC4 <AmiBlitz3.ab2@18801>   MOVE.w regnum,-(a7)
00035BCE <AmiBlitz3.ab2@18802>   MOVE.w regnumstore,regnum
00035BD2 <AmiBlitz3.ab2@18803>   BSR writeconvertcode
00035BD8 <AmiBlitz3.ab2@18804>   MOVE.w (a7)+,regnum
00035BDA <AmiBlitz3.ab2@18805>   EXG d2,d3
00035BDE <AmiBlitz3.ab2@18806>   MOVEM.l (a7)+,d3/d1
00035BE4 <AmiBlitz3.ab2@18807>   OR.l #$f2000018,d1
00035BEA <AmiBlitz3.ab2@18808>   CLR.w a2offset
00035BEE <AmiBlitz3.ab2@18809> BRA 'exit
00035BF2 <AmiBlitz3.ab2@18812>   CMP.b #5,d2
00035BF6 <AmiBlitz3.ab2@18813>   BNE 'nofpu2
00035BFA <AmiBlitz3.ab2@18814>   MOVE.b 24(a2),d0
00035BFE <AmiBlitz3.ab2@18815>   CMP.b #$60,d0                                            ;nolib $edxx
00035C02 <AmiBlitz3.ab2@18816>   BNE 'nofpu
00035C04 <AmiBlitz3.ab2@18817>   MOVEQ #0,d1
00035C0A <AmiBlitz3.ab2@18818>   MOVE.w regnumstore,d1
00035C0C <AmiBlitz3.ab2@18819>   MOVE.w d1,d0
00035C0E <AmiBlitz3.ab2@18820>   ASL.w #7,d1
00035C10 <AmiBlitz3.ab2@18821>   ASL.w #8,d0
00035C12 <AmiBlitz3.ab2@18822>   ASL.w #2,d0
00035C14 <AmiBlitz3.ab2@18823>   OR.w d0,d1
00035C18 <AmiBlitz3.ab2@18824>   MOVE.b 25(a2),d0
00035C1C <AmiBlitz3.ab2@18825>   CMP.b #5,d0
00035C20 <AmiBlitz3.ab2@18826>   BNE 'nocos
00035C26 <AmiBlitz3.ab2@18827>   OR.l #$f200001d,d1                                       ;fpu cos
00035C2A <AmiBlitz3.ab2@18828> BRA 'exit
00035C2E <AmiBlitz3.ab2@18831>   CMP.b #$c,d0
00035C32 <AmiBlitz3.ab2@18832>   BNE 'nosqr
00035C38 <AmiBlitz3.ab2@18833>   OR.l #$f2000004,d1                                       ;fpu sqr
00035C3C <AmiBlitz3.ab2@18834> BRA 'exit
00035C40 <AmiBlitz3.ab2@18837>   CMP.b #$d,d0
00035C44 <AmiBlitz3.ab2@18838>   BNE 'notan
00035C4A <AmiBlitz3.ab2@18839>   OR.l #$f200000f,d1                                       ;fpu tan
00035C4E <AmiBlitz3.ab2@18840> BRA 'exit
00035C52 <AmiBlitz3.ab2@18843>   CMP.b #$a,d0
00035C56 <AmiBlitz3.ab2@18844>   BNE 'nosin
00035C5C <AmiBlitz3.ab2@18845>   OR.l #$f200000e,d1                                       ;fpu sin
00035C60 <AmiBlitz3.ab2@18846> BRA 'exit
00035C64 <AmiBlitz3.ab2@18849>   CMP.b #$3,d0
00035C68 <AmiBlitz3.ab2@18850>   BNE 'noasin
00035C6E <AmiBlitz3.ab2@18851>   OR.l #$f200000c,d1                                       ;fpu asin
00035C72 <AmiBlitz3.ab2@18852> BRA 'exit
00035C76 <AmiBlitz3.ab2@18855>   CMP.b #$2,d0
00035C7A <AmiBlitz3.ab2@18856>   BNE 'noacos
00035C80 <AmiBlitz3.ab2@18857>   OR.l #$f200001c,d1                                       ;fpu acos
00035C84 <AmiBlitz3.ab2@18858> BRA 'exit
00035C88 <AmiBlitz3.ab2@18861>   CMP.b #$4,d0
00035C8C <AmiBlitz3.ab2@18862>   BNE 'noatan
00035C92 <AmiBlitz3.ab2@18863>   OR.l #$f200000a,d1                                       ;fpu atan
00035C96 <AmiBlitz3.ab2@18864> BRA 'exit
00035C9A <AmiBlitz3.ab2@18867>   CMP.b #$e,d0
00035C9E <AmiBlitz3.ab2@18868>   BNE 'nohtan
00035CA4 <AmiBlitz3.ab2@18869>   OR.l #$f2000009,d1                                       ;fpu htan
00035CA8 <AmiBlitz3.ab2@18870> BRA 'exit
00035CAC <AmiBlitz3.ab2@18873>   CMP.b #$6,d0
00035CB0 <AmiBlitz3.ab2@18874>   BNE 'nohcos
00035CB6 <AmiBlitz3.ab2@18875>   OR.l #$f2000019,d1                                       ;fpu hcos
00035CBA <AmiBlitz3.ab2@18876> BRA 'exit
00035CBE <AmiBlitz3.ab2@18879>   CMP.b #$b,d0
00035CC2 <AmiBlitz3.ab2@18880>   BNE 'nohsin
00035CC8 <AmiBlitz3.ab2@18881>   OR.l #$f2000002,d1                                       ;fpu hsin
00035CCC <AmiBlitz3.ab2@18882> BRA 'exit
00035CD0 <AmiBlitz3.ab2@18885>   CMP.b #$9,d0
00035CD4 <AmiBlitz3.ab2@18886>   BNE 'nolog
00035CDA <AmiBlitz3.ab2@18887>   OR.l #$f2000014,d1                                       ;fpu log
00035CDE <AmiBlitz3.ab2@18888> BRA 'exit
00035CE2 <AmiBlitz3.ab2@18891>   CMP.b #$8,d0
00035CE6 <AmiBlitz3.ab2@18892>   BNE 'nolog10
00035CEC <AmiBlitz3.ab2@18893>   OR.l #$f2000015,d1                                       ;fpu log10
00035CF0 <AmiBlitz3.ab2@18894> BRA 'exit
00035CF4 <AmiBlitz3.ab2@18897>   CMP.b #$7,d0
00035CF8 <AmiBlitz3.ab2@18898>   BNE 'noexp
00035CFE <AmiBlitz3.ab2@18899>   OR.l #$f2000010,d1                                       ;fpu exp
00035D02 <AmiBlitz3.ab2@18900> BRA 'exit
00035D08 <AmiBlitz3.ab2@18903>   LEA fpuerr,a0
00035D0A <AmiBlitz3.ab2@18904>   MOVE.l a0,-(a7)
00035D10 <AmiBlitz3.ab2@18905> JMP handle_compileerror
00035D14 <AmiBlitz3.ab2@18909>   CMP.b #$3c,d0
00035D18 <AmiBlitz3.ab2@18910>   BNE 'nofpu2
00035D1A <AmiBlitz3.ab2@18911>   MOVEQ #0,d1
00035D20 <AmiBlitz3.ab2@18912>       MOVE.w regnumstore,d1
00035D22 <AmiBlitz3.ab2@18913>       MOVE.w d1,d0
00035D24 <AmiBlitz3.ab2@18914>       ASL.w #7,d1
00035D26 <AmiBlitz3.ab2@18915>       ASL.w #8,d0
00035D28 <AmiBlitz3.ab2@18916>       ASL.w #2,d0
00035D2A <AmiBlitz3.ab2@18917>       OR.w d0,d1
00035D30 <AmiBlitz3.ab2@18918>       CMP.b #$03,25(a2)
00035D34 <AmiBlitz3.ab2@18919>       BNE 'nosgn
00035D3A <AmiBlitz3.ab2@18922>       SUBQ.l #8,destpointer                                ;fpu sgn
00035D40 <AmiBlitz3.ab2@18923>         OR.l #$f200003a,d1
00035D44 <AmiBlitz3.ab2@18924>         BSR writelong
00035D4A <AmiBlitz3.ab2@18925>         CLR.w a2offset
00035D50 <AmiBlitz3.ab2@18926>          MOVE.l #$F28E0006,d1
00035D54 <AmiBlitz3.ab2@18927>          BSR writelong
00035D5A <AmiBlitz3.ab2@18928>   MOVE.l #$7000600a,d1
00035D5E <AmiBlitz3.ab2@18929>   BSR writelong
00035D64 <AmiBlitz3.ab2@18930>   MOVE.l #$70014840,d1
00035D68 <AmiBlitz3.ab2@18931>   BSR writelong
00035D6E <AmiBlitz3.ab2@18932>   MOVE.l #$F292,d1
00035D72 <AmiBlitz3.ab2@18933>   BSR writeword
00035D78 <AmiBlitz3.ab2@18934>   MOVE.l #$000470FF,d1
00035D7C <AmiBlitz3.ab2@18935> BRA 'exit
00035D84 <AmiBlitz3.ab2@18938>   CMP.l #"Frac",$1a(a2)
00035D88 <AmiBlitz3.ab2@18939>   BNE 'nofrac
00035D8E <AmiBlitz3.ab2@18940> JMP notwork
00035D92 <AmiBlitz3.ab2@18981> BRA 'exit
00035D96 <AmiBlitz3.ab2@18985>   BSR.w JL_0_BB14                                          ;write lib code
00035D9C <AmiBlitz3.ab2@18986>   MOVE.l (A7)+,libisat
00035D9E <AmiBlitz3.ab2@18987> RTS
00035DA2 <AmiBlitz3.ab2@18990>   BSR writelong
00035DA8 <AmiBlitz3.ab2@18993>   MOVE.l (A7)+,libisat
00035DAA <AmiBlitz3.ab2@18994> RTS
00035DAE <AmiBlitz3.ab2@18998>   BSR.w fetchregs
00035DB4 <AmiBlitz3.ab2@18999>   TST.b debugmode
00035DB8 <AmiBlitz3.ab2@19000>    BEQ.w JL_0_BB76
00035DBA <AmiBlitz3.ab2@19001>   MOVE.l (A2),D1
00035DBE <AmiBlitz3.ab2@19002>   OR.l $8(A2),D1
00035DC2 <AmiBlitz3.ab2@19003>   BCLR #$0,D1
00035DC4 <AmiBlitz3.ab2@19004>   TST.l D1
00035DC8 <AmiBlitz3.ab2@19005>    BEQ.w JL_0_BB76
00035DCA <AmiBlitz3.ab2@19006>   MOVE.l (A2)+,D1
00035DCE <AmiBlitz3.ab2@19007>   BTST #$0,D1
00035DD2 <AmiBlitz3.ab2@19008>    BEQ.w JL_0_BB60
00035DD8 <AmiBlitz3.ab2@19009>   TST.w blitzmode
00035DDC <AmiBlitz3.ab2@19010>    BPL.w blitzerr
00035DE2 <AmiBlitz3.ab2@19011>   TST.b debugmode
00035DE6 <AmiBlitz3.ab2@19012>    BEQ.w JL_0_BB5C
00035DE8 <AmiBlitz3.ab2@19013>   MOVE.l D1,-(A7)
00035DEC <AmiBlitz3.ab2@19014>   MOVE.w #$C311,D1
00035DF0 <AmiBlitz3.ab2@19015>    BSR.w makebtst
00035DF2 <AmiBlitz3.ab2@19016>   MOVE.l (A7)+,D1
00035DF6 <AmiBlitz3.ab2@19019>   BCLR #$0,D1
00035DF8 <AmiBlitz3.ab2@19022>   TST.l D1
00035DFC <AmiBlitz3.ab2@19023>    BSR.w JL_0_BBC6
00035DFE <AmiBlitz3.ab2@19024>   MOVE.l (A2)+,D1
00035E02 <AmiBlitz3.ab2@19025>    BSR.w JL_0_BB98
00035E04 <AmiBlitz3.ab2@19026>   MOVE.l (A2)+,D1
00035E08 <AmiBlitz3.ab2@19027>    BSR.w JL_0_BBC6
00035E0C <AmiBlitz3.ab2@19028> BRA.w JL_0_BB90
00035E12 <AmiBlitz3.ab2@19031>   BTST #$0,$3(A2)
00035E16 <AmiBlitz3.ab2@19032>    BEQ.w JL_0_BB88
00035E1A <AmiBlitz3.ab2@19033>   MOVE.w blitzmode(PC),D1
00035E1E <AmiBlitz3.ab2@19034>    BPL.w blitzerr
00035E22 <AmiBlitz3.ab2@19037>   MOVE.l $4(A2),D1
00035E26 <AmiBlitz3.ab2@19038>    BSR.w JL_0_BB98
00035E2C <AmiBlitz3.ab2@19041>   MOVEA.l libisat,A2
00035E2E <AmiBlitz3.ab2@19042> RTS
00035E32 <AmiBlitz3.ab2@19045>   BTST #$0,D1
00035E36 <AmiBlitz3.ab2@19046>    BEQ.w JL_0_BBC4
00035E3C <AmiBlitz3.ab2@19047>   TST.w blitzmode
00035E40 <AmiBlitz3.ab2@19048>    BMI.w amigaerr
00035E46 <AmiBlitz3.ab2@19049>   TST.b debugmode
00035E4A <AmiBlitz3.ab2@19050>    BEQ.w JL_0_BBC0
00035E4C <AmiBlitz3.ab2@19051>   MOVE.l D1,-(A7)
00035E50 <AmiBlitz3.ab2@19052>   MOVE.w #$C312,D1
00035E54 <AmiBlitz3.ab2@19053>    BSR.w makebtst
00035E56 <AmiBlitz3.ab2@19054>   MOVE.l (A7)+,D1
00035E5A <AmiBlitz3.ab2@19057>   BCLR #$0,D1
00035E5C <AmiBlitz3.ab2@19060>   TST.l D1
00035E60 <AmiBlitz3.ab2@19063>    BEQ.w JL_0_BBD2
00035E62 <AmiBlitz3.ab2@19064>   MOVE.l A1,-(A7)
00035E66 <AmiBlitz3.ab2@19065>    BSR.w JL_0_BBD4
00035E68 <AmiBlitz3.ab2@19066>   MOVEA.l (A7)+,A1
00035E6A <AmiBlitz3.ab2@19069> RTS
00035E70 <AmiBlitz3.ab2@19072>   MOVEA.l libisat,A0
00035E76 <AmiBlitz3.ab2@19073>   TST.w cfetchmode
00035E7A <AmiBlitz3.ab2@19074>    BEQ.w JL_0_BBF6
00035E7C <AmiBlitz3.ab2@19075>   ADD.l A0,D1
00035E7E <AmiBlitz3.ab2@19076>   MOVE.l D1,-(A7)
00035E82 <AmiBlitz3.ab2@19077>   MOVE.w #$4EB9,D1
00035E86 <AmiBlitz3.ab2@19078>    BSR.w writeword
00035E88 <AmiBlitz3.ab2@19079>   MOVE.l (A7)+,D1
00035E8C <AmiBlitz3.ab2@19080> BRA.w writelong
00035E90 <AmiBlitz3.ab2@19083>   LEA $0(A0,D1.L),A1
00035E96 <AmiBlitz3.ab2@19084>   CLR.w inline
00035E9A <AmiBlitz3.ab2@19087>   CMPI.b #$A0,(A1)+
00035E9E <AmiBlitz3.ab2@19088>    BNE.w JL_0_BC68
00035EA0 <AmiBlitz3.ab2@19089>   TST.b (A1)+
00035EA4 <AmiBlitz3.ab2@19090>    BEQ.w JL_0_BC18
00035EAA <AmiBlitz3.ab2@19091>   CMPI.b #$1,-$1(A1)
00035EAE <AmiBlitz3.ab2@19092>    BEQ.w JL_0_BC24
00035EB4 <AmiBlitz3.ab2@19095>   MOVE.w (A1)+,inline
00035EB6 <AmiBlitz3.ab2@19096>   ADDQ.l #4,D1
00035EBA <AmiBlitz3.ab2@19097> BRA.w JL_0_BC00
00035EC0 <AmiBlitz3.ab2@19100>   TST.w blitzmode
00035EC4 <AmiBlitz3.ab2@19101>    BPL.w JL_0_BC4A
00035ECA <AmiBlitz3.ab2@19102>   TST.b debugmode
00035ECE <AmiBlitz3.ab2@19103>    BEQ.w JL_0_BC40
00035ED2 <AmiBlitz3.ab2@19104>   MOVE.w #$C311,D1
00035ED6 <AmiBlitz3.ab2@19105>    BSR.w makebtst
00035ED8 <AmiBlitz3.ab2@19108>   MOVE.l (A1)+,D1
00035EDC <AmiBlitz3.ab2@19109>   LEA $0(A0,D1.L),A1
00035EE0 <AmiBlitz3.ab2@19110> BRA.w JL_0_BC00
00035EE6 <AmiBlitz3.ab2@19113>   TST.b debugmode
00035EEA <AmiBlitz3.ab2@19114>    BEQ.w JL_0_BC60
00035EEC <AmiBlitz3.ab2@19115>   MOVE.l D1,-(A7)
00035EF0 <AmiBlitz3.ab2@19116>   MOVE.w #$C312,D1
00035EF4 <AmiBlitz3.ab2@19117>    BSR.w makebtst
00035EF6 <AmiBlitz3.ab2@19118>   MOVE.l (A7)+,D1
00035EF8 <AmiBlitz3.ab2@19121>   ADDQ.w #4,A1
00035EFA <AmiBlitz3.ab2@19122>   ADDQ.l #6,D1
00035EFE <AmiBlitz3.ab2@19123> BRA.w JL_0_BC00
00035F04 <AmiBlitz3.ab2@19126>   TST.w inline
00035F08 <AmiBlitz3.ab2@19127>    BEQ.w JL_0_BC7E
00035F0A <AmiBlitz3.ab2@19128>   SUBQ.w #1,A1
00035F0C <AmiBlitz3.ab2@19129>   MOVEA.l A1,A0
00035F10 <AmiBlitz3.ab2@19130>   ADDA.w inline(PC),A1
00035F14 <AmiBlitz3.ab2@19131> BRA.w pokecode2
00035F18 <AmiBlitz3.ab2@19134>   MOVEM.l a0/D1,-(A7)
00035F1E <AmiBlitz3.ab2@19135>   TST.w debugversion
00035F22 <AmiBlitz3.ab2@19136>   BEQ 'l11
00035F2A <AmiBlitz3.ab2@19137>   BTST #$7,link_debuginfo
00035F2E <AmiBlitz3.ab2@19138>   BEQ.w 'l11
00035F34 <AmiBlitz3.ab2@19139>   MOVE.l lastinstruction,d1
00035F38 <AmiBlitz3.ab2@19140>   BEQ 'l11
00035F3E <AmiBlitz3.ab2@19141>   CLR.l lastinstruction
00035F44 <AmiBlitz3.ab2@19142>   CMP.l #$e000,d1
00035F48 <AmiBlitz3.ab2@19143>   BGE 'ln99
00035F4E <AmiBlitz3.ab2@19144>   LEA notf,a0
00035F54 <AmiBlitz3.ab2@19145>   CMP.l #$c601,d1
00035F58 <AmiBlitz3.ab2@19146>   BNE 'ln1
00035F5E <AmiBlitz3.ab2@19147>   LEA strcpy,a0
00035F62 <AmiBlitz3.ab2@19148> BRA 'ln3
00035F68 <AmiBlitz3.ab2@19151>   CMP.l #$c700,d1
00035F6C <AmiBlitz3.ab2@19152>   BNE 'ln2
00035F72 <AmiBlitz3.ab2@19153>   LEA strvar,a0
00035F76 <AmiBlitz3.ab2@19154> BRA 'ln3
00035F7C <AmiBlitz3.ab2@19157>   CMP.l #$ce00,d1
00035F80 <AmiBlitz3.ab2@19158>   BNE 'ln4
00035F86 <AmiBlitz3.ab2@19159>   LEA strcmp,a0
00035F8A <AmiBlitz3.ab2@19160> BRA 'ln3
00035F90 <AmiBlitz3.ab2@19163>   CMP.l #$ca00,d1
00035F94 <AmiBlitz3.ab2@19164>   BNE 'ln5
00035F9A <AmiBlitz3.ab2@19165>   LEA qmul,a0
00035F9E <AmiBlitz3.ab2@19166> BRA 'ln3
00035FA4 <AmiBlitz3.ab2@19169>   CMP.l #$d000,d1
00035FA8 <AmiBlitz3.ab2@19170>      BNE 'ln6
00035FAE <AmiBlitz3.ab2@19171>      LEA _MaxLen,a0
00035FB2 <AmiBlitz3.ab2@19172> BRA 'ln3
00035FB8 <AmiBlitz3.ab2@19175>   CMP.l #$cb00,d1
00035FBC <AmiBlitz3.ab2@19176>   BNE 'ln3
00035FC2 <AmiBlitz3.ab2@19177>   LEA qdiv,a0
00035FC6 <AmiBlitz3.ab2@19178> BRA 'ln3
00035FC8 <AmiBlitz3.ab2@19181>   MOVE.l d1,a0
00035FCC <AmiBlitz3.ab2@19182>   LEA $8(a0),a0
00035FD0 <AmiBlitz3.ab2@19185>   CMP.w #$ffff,(a0)+
00035FD4 <AmiBlitz3.ab2@19186>   BNE 'l1
00035FD8 <AmiBlitz3.ab2@19187>   LEA 6(a0),a0
00035FDC <AmiBlitz3.ab2@19190>   MOVEM.l a1/a2/d7/d2,-(a7)
00035FDE <AmiBlitz3.ab2@19191>   MOVEQ #0,d2
00035FE4 <AmiBlitz3.ab2@19192>   LEA ptr_parameterstore,a1
00035FE6 <AmiBlitz3.ab2@19195>   ADDQ.l #1,d2
00035FE8 <AmiBlitz3.ab2@19196>   MOVE.b (a0)+,d0
00035FEC <AmiBlitz3.ab2@19197> 
00035FF0 <AmiBlitz3.ab2@19198>   BNE 'nodollar
00035FF4 <AmiBlitz3.ab2@19199>   MOVE.b #"S",d0
00035FF8 <AmiBlitz3.ab2@19201>   CMP.b #"?",d0
00035FFC <AmiBlitz3.ab2@19202>   BEQ 'nolabelwrite
00035FFE <AmiBlitz3.ab2@19203>   MOVE.b d0,(a1)+
00036002 <AmiBlitz3.ab2@19204>   BNE 'l2
00036008 <AmiBlitz3.ab2@19205>   MOVE.w #"__",-1(a1)
0003600A <AmiBlitz3.ab2@19206>   ADDQ.l #2,d2
0003600E <AmiBlitz3.ab2@19207>   CLR.b 1(a1)
00036014 <AmiBlitz3.ab2@19208>   JSR findlabel2
00036018 <AmiBlitz3.ab2@19209>   BEQ 'l3
0003601E <AmiBlitz3.ab2@19210>   JSR addlabelhash
00036022 <AmiBlitz3.ab2@19213>   CLR.l 4(a2)
00036026 <AmiBlitz3.ab2@19214>   MOVE.l $14(a7),a0
0003602A <AmiBlitz3.ab2@19215>   MOVE.l $10(a7),d1
0003602E <AmiBlitz3.ab2@19216>   SUB.l $12(a0),d1
00036032 <AmiBlitz3.ab2@19217>   ADD.l $28(a0),d1
00036036 <AmiBlitz3.ab2@19218>   MOVE.l d1,8(a2)
0003603A <AmiBlitz3.ab2@19219> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
00036040 <AmiBlitz3.ab2@19222>   TST.b typecheck
00036044 <AmiBlitz3.ab2@19223>   BEQ 'p1
0003604A <AmiBlitz3.ab2@19231>   TST.b peekaddrsize
0003604E <AmiBlitz3.ab2@19232>   BEQ 'p1
00036056 <AmiBlitz3.ab2@19233>   CMP.b #3,peekaddrsize
0003605A <AmiBlitz3.ab2@19234>   BNE errormsg_onlylong
00036060 <AmiBlitz3.ab2@19235>   CLR.b peekaddrsize
00036066 <AmiBlitz3.ab2@19243>    TST.b fpu
0003606A <AmiBlitz3.ab2@19244>   BNE 'optf
00036070 <AmiBlitz3.ab2@19245>   TST.b fast
00036074 <AmiBlitz3.ab2@19246>   BEQ JL11a2
0003607C <AmiBlitz3.ab2@19253>   CMP.l #"Poke",20(a2)                                     ;poke
00036080 <AmiBlitz3.ab2@19254>   BNE peekopt
00036084 <AmiBlitz3.ab2@19255>   TST.b 24(a2)
00036088 <AmiBlitz3.ab2@19256>   BNE peekopt
0003608C <AmiBlitz3.ab2@19257>   CMP.b #3,d2
00036090 <AmiBlitz3.ab2@19258>   BNE 'lw1
00036096 <AmiBlitz3.ab2@19261>   MOVE.l #$21821990,d1
0003609A <AmiBlitz3.ab2@19262> BRA.s 'lpx
0003609E <AmiBlitz3.ab2@19265>   CMP.b #2,d2
000360A2 <AmiBlitz3.ab2@19266>   BNE 'lb1
000360A8 <AmiBlitz3.ab2@19267>   MOVE.l #$31821990,d1
000360AC <AmiBlitz3.ab2@19268> BRA.s 'lpx
000360B0 <AmiBlitz3.ab2@19271>   CMP.b #1,d2
000360B4 <AmiBlitz3.ab2@19272>   BNE 'lp3
000360BA <AmiBlitz3.ab2@19273>   MOVE.l #$11821990,d1
000360BE <AmiBlitz3.ab2@19274> BRA.s 'lpx
000360C2 <AmiBlitz3.ab2@19277>   CMP.b #5,d2
000360C6 <AmiBlitz3.ab2@19278>     BNE JL11a2
000360CC <AmiBlitz3.ab2@19279>     TST.b fpu
000360D0 <AmiBlitz3.ab2@19280>     BEQ 'll1
000360D6 <AmiBlitz3.ab2@19281>      MOVE.l destpointer,a4
000360DE <AmiBlitz3.ab2@19282>     CMP.l #$f22d4500,-6(a4)
000360E2 <AmiBlitz3.ab2@19283>     BNE 'noglob
000360E8 <AmiBlitz3.ab2@19284>     TST.b doublepeek
000360EC <AmiBlitz3.ab2@19285>     BNE 'noglob
000360F2 <AmiBlitz3.ab2@19286>     MOVE.w -2(a4),-4(a4)
000360F8 <AmiBlitz3.ab2@19287>     MOVE.w #$21ad,-6(a4)
000360FE <AmiBlitz3.ab2@19288>     MOVE.w #$1990,-2(a4)
00036106 <AmiBlitz3.ab2@19289>     MOVE.w #9,peeksize
00036108 <AmiBlitz3.ab2@19290>     ADDQ #8,a7
0003610A <AmiBlitz3.ab2@19291> RTS
00036112 <AmiBlitz3.ab2@19294>     CMP.l #$f22c4500,-6(a4)
00036116 <AmiBlitz3.ab2@19295>     BNE 'nolocal
0003611C <AmiBlitz3.ab2@19296>     MOVE.w -2(a4),-4(a4)
00036122 <AmiBlitz3.ab2@19297>     TST.b doublepeek                                       ;dont move longfix on double floats
00036126 <AmiBlitz3.ab2@19298>     BNE 'nolocal
0003612C <AmiBlitz3.ab2@19299>     MOVE.w #$21ac,-6(a4)
00036132 <AmiBlitz3.ab2@19300>     MOVE.w #$1990,-2(a4)
0003613A <AmiBlitz3.ab2@19301>     MOVE.w #9,peeksize
0003613C <AmiBlitz3.ab2@19302>     ADDQ #8,a7
0003613E <AmiBlitz3.ab2@19303> RTS
00036142 <AmiBlitz3.ab2@19306>     MOVE.w #$f230,d1
00036146 <AmiBlitz3.ab2@19307>     BSR writeword
0003614C <AmiBlitz3.ab2@19308>   MOVE.l #$65001990,d1
00036152 <AmiBlitz3.ab2@19309>   TST.b doublepeek
00036156 <AmiBlitz3.ab2@19310>   BEQ 'lpx
0003615C <AmiBlitz3.ab2@19311>   OR.l   #$10000000,d1
0003615E <AmiBlitz3.ab2@19315>   ADDQ #8,a7
00036166 <AmiBlitz3.ab2@19316>   MOVE.w #9,peeksize
0003616A <AmiBlitz3.ab2@19317> BRA writelong
00036172 <AmiBlitz3.ab2@19320>   CMP.l #"Peek",20(a2)
00036176 <AmiBlitz3.ab2@19321>   BNE 'l10
0003617A <AmiBlitz3.ab2@19322>   TST.b 24(a2)
0003617E <AmiBlitz3.ab2@19323>   BNE 'l10
00036186 <AmiBlitz3.ab2@19324>   CMP.w #7,peeksize
0003618A <AmiBlitz3.ab2@19325>   BEQ 'l10
00036192 <AmiBlitz3.ab2@19326>    CMP.w #3,peeksize
00036196 <AmiBlitz3.ab2@19327>    BNE.s 'lw1
0003619C <AmiBlitz3.ab2@19330>   MOVE.l #$20301990,d1
000361A0 <AmiBlitz3.ab2@19331> BRA exitjsr
000361A8 <AmiBlitz3.ab2@19334>   CMP.w #2,peeksize
000361AC <AmiBlitz3.ab2@19335>    BNE.s 'lb1
000361B2 <AmiBlitz3.ab2@19336>    MOVE.l #$30301990,d1
000361B6 <AmiBlitz3.ab2@19337> BRA exitjsr
000361BE <AmiBlitz3.ab2@19340>   CMP.w #1,peeksize
000361C2 <AmiBlitz3.ab2@19341>    BNE.s 'lf1
000361C8 <AmiBlitz3.ab2@19342>    MOVE.l #$10301990,d1
000361CC <AmiBlitz3.ab2@19343> BRA exitjsr
000361D4 <AmiBlitz3.ab2@19346>   CMP.w #5,peeksize
000361D8 <AmiBlitz3.ab2@19347>    BNE 'l10
000361DE <AmiBlitz3.ab2@19348>    TST.b fpu
000361E2 <AmiBlitz3.ab2@19349>    BEQ 'll1
000361E6 <AmiBlitz3.ab2@19350>    MOVE.w #$f230,d1
000361EA <AmiBlitz3.ab2@19351>    BSR writeword
000361EC <AmiBlitz3.ab2@19352>    MOVEQ #0,d1
000361F2 <AmiBlitz3.ab2@19353>    MOVE.w tempregnum,d1
000361F4 <AmiBlitz3.ab2@19354>    ASL.l #7,d1
000361F6 <AmiBlitz3.ab2@19355>    ASL.l #8,d1
000361F8 <AmiBlitz3.ab2@19356>    ASL.l #8,d1
000361FE <AmiBlitz3.ab2@19357>    ADD.l #$44001990,d1
00036204 <AmiBlitz3.ab2@19358>     TST.b doublepeek
00036208 <AmiBlitz3.ab2@19359>     BEQ 'lpx2
0003620E <AmiBlitz3.ab2@19360>     OR.l   #$10000000,d1
00036212 <AmiBlitz3.ab2@19362> BRA exitjsr
00036216 <AmiBlitz3.ab2@19366>   MOVE.w #$4EB9,D1
0003621A <AmiBlitz3.ab2@19367>    BSR.w writeword                                         ;writesysjsr
0003621E <AmiBlitz3.ab2@19368>   MOVEM.l (A7)+,a0/D1
00036224 <AmiBlitz3.ab2@19369>    JSR addoff
00036228 <AmiBlitz3.ab2@19370>   SUB.l $12(A0),D1
0003622C <AmiBlitz3.ab2@19371>   ADD.l $28(A0),D1
00036230 <AmiBlitz3.ab2@19372> BRA.w writelong
00036232 <AmiBlitz3.ab2@19377>   MOVE.w D1,-(A7)
00036236 <AmiBlitz3.ab2@19378>   MOVE.w tstmode(PC),D1
0003623A <AmiBlitz3.ab2@19379>    BSR.w writeword
0003623E <AmiBlitz3.ab2@19380>    BSR.w getbbase
00036242 <AmiBlitz3.ab2@19381>    BSR.w writeword
00036244 <AmiBlitz3.ab2@19382>   MOVE.w (A7)+,D1
00036248 <AmiBlitz3.ab2@19383>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0003624C <AmiBlitz3.ab2@19384>    BSR.w Atokejsr
00036250 <AmiBlitz3.ab2@19385>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00036252 <AmiBlitz3.ab2@19386> RTS
00036256 <AmiBlitz3.ab2@19394>   MOVE.w blitzoff(PC),D1
0003625A <AmiBlitz3.ab2@19395>   CMP.w #-$1,D1
0003625E <AmiBlitz3.ab2@19396>    BNE.w getbbase__done
00036264 <AmiBlitz3.ab2@19397>   ADDQ.w #1,globalvarpointer
0003626C <AmiBlitz3.ab2@19398>   BCLR #$0,globalvarpointer+1
00036272 <AmiBlitz3.ab2@19399>   MOVE.w globalvarpointer,D1
00036278 <AmiBlitz3.ab2@19400>   MOVE.w D1,blitzoff
0003627E <AmiBlitz3.ab2@19401>   ADDQ.w #2,globalvarpointer
00036280 <AmiBlitz3.ab2@19404> RTS
00036284 <AmiBlitz3.ab2@19408> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
00036286 <AmiBlitz3.ab2@19411> inline:     Ds.w 1
00036288 <AmiBlitz3.ab2@19412> blitzoff:   Dc.w $FFFF                                   ;-1 org source
0003628A <AmiBlitz3.ab2@19413> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
0003628C <AmiBlitz3.ab2@19417>   MOVE.w (A2)+,D1
00036290 <AmiBlitz3.ab2@19418>    BEQ.w fetchregs__done
00036292 <AmiBlitz3.ab2@19419>   MOVE.w (A2)+,D2
00036296 <AmiBlitz3.ab2@19420>    BSR.w toreg
0003629A <AmiBlitz3.ab2@19421> BRA.w fetchregs
0003629C <AmiBlitz3.ab2@19424> RTS
000362A0 <AmiBlitz3.ab2@19429>   CMP.w #-$100,D2
000362A4 <AmiBlitz3.ab2@19430>    BCC.w toreg__yeah
000362A8 <AmiBlitz3.ab2@19432>   BCLR #$F,D2
000362AC <AmiBlitz3.ab2@19433>    BEQ.w toreg__nobm
000362B2 <AmiBlitz3.ab2@19435>   TST.w blitzmode
000362B6 <AmiBlitz3.ab2@19436>    BMI.w toreg__yeah
000362B8 <AmiBlitz3.ab2@19437> RTS
000362BC <AmiBlitz3.ab2@19440>   BCLR #$E,D2
000362C0 <AmiBlitz3.ab2@19441>    BEQ.w toreg__yeah
000362C6 <AmiBlitz3.ab2@19443>   TST.w blitzmode
000362CA <AmiBlitz3.ab2@19444>    BPL.w toreg__yeah
000362CC <AmiBlitz3.ab2@19445> RTS
000362D2 <AmiBlitz3.ab2@19448>   JSR uselib
000362D4 <AmiBlitz3.ab2@19449>   TST.b D2
000362D8 <AmiBlitz3.ab2@19450>    BEQ.w toreg__norm
000362DC <AmiBlitz3.ab2@19451>   CMP.b #$4,D2
000362E0 <AmiBlitz3.ab2@19452>    BNE.w toreg__suv
000362E4 <AmiBlitz3.ab2@19453>   MOVE.w #$0004,-(A7)
000362EA <AmiBlitz3.ab2@19454>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
000362EE <AmiBlitz3.ab2@19455> BRA.w toreg__sendmd
000362F2 <AmiBlitz3.ab2@19458>   CMP.b #$3,D2
000362F6 <AmiBlitz3.ab2@19459>    BNE.w toreg__notnmax
000362F8 <AmiBlitz3.ab2@19460>   CLR.w -(A7)
000362FE <AmiBlitz3.ab2@19461>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00036300 <AmiBlitz3.ab2@19467>   LSR.w #8,D2
00036304 <AmiBlitz3.ab2@19468>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00036308 <AmiBlitz3.ab2@19469>   BTST #$7,D2
0003630C <AmiBlitz3.ab2@19470>    BEQ.w toreg__skipad
00036310 <AmiBlitz3.ab2@19471>   MOVE.w #$307C,D1                                         ;move.w #x,an
00036314 <AmiBlitz3.ab2@19472>   CMP.w #$16,D2
00036318 <AmiBlitz3.ab2@19473>    BNE.w toreg__skipad
00036320 <AmiBlitz3.ab2@19474>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00036324 <AmiBlitz3.ab2@19477>   ANDI.w #$7,D2
00036326 <AmiBlitz3.ab2@19478>   LSL.w #8,D2
00036328 <AmiBlitz3.ab2@19479>   LSL.w #1,D2
0003632A <AmiBlitz3.ab2@19480>   OR.w D2,D1
0003632E <AmiBlitz3.ab2@19481>    BSR.w writeword
00036332 <AmiBlitz3.ab2@19482>   MOVE.l $12(A1),D1
00036334 <AmiBlitz3.ab2@19483>   ADD.l (A7)+,D1
00036338 <AmiBlitz3.ab2@19484>   MOVE.w $0(A1,D1.L),D1
0003633A <AmiBlitz3.ab2@19485>   ADD.w (A7)+,D1
0003633E <AmiBlitz3.ab2@19486> BRA.w writeword
00036340 <AmiBlitz3.ab2@19489>   MOVE.w D2,-(A7)
00036342 <AmiBlitz3.ab2@19490>   LSR.w #8,D2
00036346 <AmiBlitz3.ab2@19491>   CMP.w #$16,D2
0003634A <AmiBlitz3.ab2@19492>    BNE.w toreg__isnta6
00036352 <AmiBlitz3.ab2@19493>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00036356 <AmiBlitz3.ab2@19496>   MOVE.l $12(A1),D1                                        ;objectspace
0003635A <AmiBlitz3.ab2@19497>   MOVE.w -$6(A1,D1.L),-(A7)
0003635E <AmiBlitz3.ab2@19498>    BSR.w makeregop
00036362 <AmiBlitz3.ab2@19499>    BSR.w writeword
00036364 <AmiBlitz3.ab2@19500>   MOVE.w (A7)+,D1
00036366 <AmiBlitz3.ab2@19501>   MOVE.w (A7)+,D2
00036368 <AmiBlitz3.ab2@19502>   TST.b D2
0003636C <AmiBlitz3.ab2@19503>    BPL.w toreg__skippy1
00036370 <AmiBlitz3.ab2@19508>    BSR.w writeword                                         ;move.l x(a5),dn
00036372 <AmiBlitz3.ab2@19509>   MOVE.w D2,-(A7)                                          ;store reg used
00036376 <AmiBlitz3.ab2@19511>   ADDA.l $12(A1),A1
00036378 <AmiBlitz3.ab2@19512>   MOVE.b D2,D1
0003637C <AmiBlitz3.ab2@19513>   ANDI.w #$7,D1
00036382 <AmiBlitz3.ab2@19515>   TST.b debugmode
00036386 <AmiBlitz3.ab2@19516>    BEQ.w toreg__norerr
00036388 <AmiBlitz3.ab2@19518>   MOVE.w D1,-(A7)
0003638A <AmiBlitz3.ab2@19519>   LSL.w #8,D1
0003638C <AmiBlitz3.ab2@19520>   LSL.w #1,D1
00036390 <AmiBlitz3.ab2@19521>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00036394 <AmiBlitz3.ab2@19522>    BSR.w writeword
00036398 <AmiBlitz3.ab2@19523>   MOVE.w -$4(A1),D1
0003639C <AmiBlitz3.ab2@19524>    BSR.w writeword
000363A0 <AmiBlitz3.ab2@19525>   MOVE.l maxchk(PC),D1                                  ;bcs
000363A4 <AmiBlitz3.ab2@19526>    BSR.w writelong
000363A6 <AmiBlitz3.ab2@19527>   MOVE.l A2,-(A7)
000363AA <AmiBlitz3.ab2@19528>   MOVE.w #$C30A,D1
000363AE <AmiBlitz3.ab2@19529>    BSR.w Atokejsr
000363B0 <AmiBlitz3.ab2@19530>   MOVEA.l (A7)+,A2
000363B2 <AmiBlitz3.ab2@19531>   MOVE.w (A7)+,D1
000363B6 <AmiBlitz3.ab2@19534>   MOVE.w -$2(A1),D2                                        ;shift amount
000363BA <AmiBlitz3.ab2@19537>   CMP.w #$9,D2
000363BE <AmiBlitz3.ab2@19538>    BCS.w toreg__simp
000363C2 <AmiBlitz3.ab2@19539>   MOVEM.w D1-D2,-(A7)
000363C4 <AmiBlitz3.ab2@19541>   MOVEQ.l #$00,D2                                          ;!!!!!
000363C6 <AmiBlitz3.ab2@19543>   LSL.w #8,D2
000363C8 <AmiBlitz3.ab2@19544>   LSL.w #1,D2
000363CA <AmiBlitz3.ab2@19545>   OR.w D2,D1
000363CE <AmiBlitz3.ab2@19546>   OR.w lsldn(PC),D1
000363D2 <AmiBlitz3.ab2@19547>    BSR.w writeword
000363D6 <AmiBlitz3.ab2@19548>   MOVEM.w (A7)+,D1-D2
000363D8 <AmiBlitz3.ab2@19549>   SUBQ.w #8,D2
000363DC <AmiBlitz3.ab2@19550> BRA.w toreg__shloop
000363DE <AmiBlitz3.ab2@19553>   MOVE.w D1,-(A7)
000363E2 <AmiBlitz3.ab2@19554>   OR.w #$48c0,d1
000363E6 <AmiBlitz3.ab2@19555>   BSR writeword
000363E8 <AmiBlitz3.ab2@19556>   MOVE.w (a7),d1
000363EA <AmiBlitz3.ab2@19557>   TST.w D2
000363EE <AmiBlitz3.ab2@19558>   BEQ.w toreg__simp2
000363F2 <AmiBlitz3.ab2@19560>   ANDI.w #$7,D2                                            ;?????
000363F4 <AmiBlitz3.ab2@19562>   LSL.w #8,D2
000363F6 <AmiBlitz3.ab2@19563>   LSL.w #1,D2
000363F8 <AmiBlitz3.ab2@19564>   OR.w D2,D1
000363FC <AmiBlitz3.ab2@19565>   OR.w lsldn(PC),D1
00036400 <AmiBlitz3.ab2@19566>    BSR.w writeword
00036402 <AmiBlitz3.ab2@19572>   MOVE.w (A7)+,D1
00036406 <AmiBlitz3.ab2@19573>   ANDI.w #$7,D1
0003640A <AmiBlitz3.ab2@19574>   OR.w maxdo(PC),D1
0003640C <AmiBlitz3.ab2@19575>   MOVE.w (A7)+,D2
0003640E <AmiBlitz3.ab2@19576>   LSL.w #1,D2
00036412 <AmiBlitz3.ab2@19577>   ANDI.w #$E00,D2
00036414 <AmiBlitz3.ab2@19578>   OR.w D2,D1
00036418 <AmiBlitz3.ab2@19579> BRA.w writeword
0003641C <AmiBlitz3.ab2@19582>   CMP.b #$1,D2
00036420 <AmiBlitz3.ab2@19583>    BEQ.w toreg__skippy
00036422 <AmiBlitz3.ab2@19587>   ADDQ.w #4,D1
00036428 <AmiBlitz3.ab2@19589>   TST.b debugmode
0003642C <AmiBlitz3.ab2@19590>    BEQ.w toreg__skippy
00036430 <AmiBlitz3.ab2@19592>    BSR.w writeword
00036432 <AmiBlitz3.ab2@19593>   SWAP D1
00036436 <AmiBlitz3.ab2@19594>   MOVE.w toreg__theretest(PC),D1
00036438 <AmiBlitz3.ab2@19595>   SWAP D1
0003643C <AmiBlitz3.ab2@19596>    BSR.w writelong
00036440 <AmiBlitz3.ab2@19597>   MOVE.l toreg__theretest+4(PC),D1
00036444 <AmiBlitz3.ab2@19598>    BSR.w writelong
00036448 <AmiBlitz3.ab2@19599>   MOVE.l toreg__theretest+8(PC),D1
0003644C <AmiBlitz3.ab2@19600> BRA.w writelong
00036450 <AmiBlitz3.ab2@19603> BRA.w writeword
00036454 <AmiBlitz3.ab2@19608>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00036458 <AmiBlitz3.ab2@19609>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0003645A <AmiBlitz3.ab2@19610>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0003645C <AmiBlitz3.ab2@19611>             Dc.b $4E,$40                                   ;TRAP   #00
0003645E <AmiBlitz3.ab2@19616>   LSR.w #8,D2
00036462 <AmiBlitz3.ab2@19617>   CMP.b #$16,D2
00036466 <AmiBlitz3.ab2@19618>    BNE.w toreg__nota6
0003646A <AmiBlitz3.ab2@19619>   MOVE.w $A(A1),D1
00036470 <AmiBlitz3.ab2@19620>   CMP.w lasta6,D1
00036474 <AmiBlitz3.ab2@19621>    BEQ.w toreg__sk
0003647A <AmiBlitz3.ab2@19622>   MOVE.w D1,lasta6
0003647E <AmiBlitz3.ab2@19625>    BSR.w makeregop
00036482 <AmiBlitz3.ab2@19626>   TST.w $1A(A1)
00036486 <AmiBlitz3.ab2@19627>    BPL.w toreg__long
0003648A <AmiBlitz3.ab2@19628>   CMP.w stackop(PC),D1
0003648E <AmiBlitz3.ab2@19629>    BNE.w toreg__notst
00036494 <AmiBlitz3.ab2@19630>   SUBQ.w #2,a2offset
00036498 <AmiBlitz3.ab2@19633>    ORI.w #$1000,D1
0003649C <AmiBlitz3.ab2@19636>    BSR.w writeword
000364A0 <AmiBlitz3.ab2@19637>   MOVE.w $A(A1),D1
000364A4 <AmiBlitz3.ab2@19638>    BSR.w writeword
000364A6 <AmiBlitz3.ab2@19641> RTS
000364A8 <AmiBlitz3.ab2@19645> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
000364AC <AmiBlitz3.ab2@19646> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
000364B2 <AmiBlitz3.ab2@19647>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
000364B4 <AmiBlitz3.ab2@19650> 
000364B6 <AmiBlitz3.ab2@19653>             Dc.b $00,$00
000364BA <AmiBlitz3.ab2@19654> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
000364BE <AmiBlitz3.ab2@19661>   CMP.b #$FF,D2
000364C2 <AmiBlitz3.ab2@19662>    BNE.w makeregop__notst
000364C6 <AmiBlitz3.ab2@19663>   MOVE.w stackop(PC),D1
000364CC <AmiBlitz3.ab2@19664>   ADDQ.w #4,a2offset
000364CE <AmiBlitz3.ab2@19665> RTS
000364D0 <AmiBlitz3.ab2@19668>   MOVE.l A3,-(A7)
000364D6 <AmiBlitz3.ab2@19669>   LEA regtransd,A3
000364DA <AmiBlitz3.ab2@19670>   BTST #$4,D2
000364DE <AmiBlitz3.ab2@19671>    BEQ.w makeregop__skip
000364E4 <AmiBlitz3.ab2@19672>   LEA regtransa,A3
000364E8 <AmiBlitz3.ab2@19675>   ANDI.w #$7,D2
000364EA <AmiBlitz3.ab2@19676>   MOVE.w D2,D1
000364EC <AmiBlitz3.ab2@19677>   LSL.w #8,D1
000364EE <AmiBlitz3.ab2@19678>   LSL.w #1,D1
000364F0 <AmiBlitz3.ab2@19679>   OR.w (A3),D1
000364F2 <AmiBlitz3.ab2@19680>   MOVEA.l (A7)+,A3
000364F4 <AmiBlitz3.ab2@19681> RTS
000364F8 <AmiBlitz3.ab2@19687>   CMP.w #$3C,D0
000364FC <AmiBlitz3.ab2@19688>    BCS.w ifchar__no
00036500 <AmiBlitz3.ab2@19689>   CMP.w #$3E,D0
00036504 <AmiBlitz3.ab2@19690>    BHI.w ifchar__no
00036508 <AmiBlitz3.ab2@19691>   SUBI.w #$3C,D0
0003650A <AmiBlitz3.ab2@19692>   CMP.w D0,D0
0003650C <AmiBlitz3.ab2@19695> RTS
00036516 <AmiBlitz3.ab2@19700>   MOVE.w oldqflag,instringon
0003651C <AmiBlitz3.ab2@19701>   MOVEA.l lastsourcepos,A5
00036522 <AmiBlitz3.ab2@19704>   MOVE.w regnum,-(A7)
00036528 <AmiBlitz3.ab2@19705>   CLR.w regnum
0003652E <AmiBlitz3.ab2@19706>   MOVE.l destpointer,-(A7)
00036534 <AmiBlitz3.ab2@19707>   MOVE.l destbufferend,-(A7)
0003653A <AmiBlitz3.ab2@19708>   MOVE.w dontwrite,-(A7)
00036540 <AmiBlitz3.ab2@19709>   MOVE.w lasta6,-(A7)
00036546 <AmiBlitz3.ab2@19710>   MOVE.w cfetchmode,-(A7)
0003654A <AmiBlitz3.ab2@19711>    BNE.w JL_0_BFB6
00036554 <AmiBlitz3.ab2@19712>   MOVE.l destbufferend,oldlibat
0003655A <AmiBlitz3.ab2@19713>   MOVEA.l constpcat,A0
00036560 <AmiBlitz3.ab2@19714>   MOVE.l A0,destpointer
00036564 <AmiBlitz3.ab2@19715> BRA.w JL_0_BFBC
0003656A <AmiBlitz3.ab2@19718>   MOVEA.l destpointer,A0
0003656C <AmiBlitz3.ab2@19721>   MOVE.l A0,-(A7)
00036576 <AmiBlitz3.ab2@19722>   MOVE.l constlibat,destbufferend
0003657C <AmiBlitz3.ab2@19723>   CLR.w dontwrite
00036584 <AmiBlitz3.ab2@19725>   MOVE.w #$FFFF,lasta6
0003658C <AmiBlitz3.ab2@19726>   MOVE.w #$FFFF,cfetchmode
00036590 <AmiBlitz3.ab2@19728>     BSR.w arreval
00036592 <AmiBlitz3.ab2@19729>    MOVE.l (a7),a0
000366CE <AmiBlitz3.ab2@19731>  !newcalc
000366D2 <AmiBlitz3.ab2@19732>    BEQ 'l10
000366D4 <AmiBlitz3.ab2@19733>    MOVE.l d0,d3
000366D6 <AmiBlitz3.ab2@19734>    MOVEA.l (A7)+,A0
000366DA <AmiBlitz3.ab2@19735> BRA bc1
000366DE <AmiBlitz3.ab2@19738>    MOVE.w #$2600,D1
000366E4 <AmiBlitz3.ab2@19739>   OR.w regnum,D1
000366E8 <AmiBlitz3.ab2@19740>    BSR.w writeword
000366EC <AmiBlitz3.ab2@19741>   MOVE.w #$4E75,D1
000366F0 <AmiBlitz3.ab2@19742>    BSR.w writeword
000366F6 <AmiBlitz3.ab2@19743>   MOVE.w dontwrite,D1
000366FA <AmiBlitz3.ab2@19744>    BNE.w conmemerr
000366FC <AmiBlitz3.ab2@19745>   MOVEA.l (A7)+,A0
000366FE <AmiBlitz3.ab2@19746>   NOP
00036704 <AmiBlitz3.ab2@19747>    JSR Aclearcache                                         ;simple expression
00036706 <AmiBlitz3.ab2@19750>    JSR (A0)                                                ;writeresult
0003670C <AmiBlitz3.ab2@19753>   MOVE.w (A7)+,cfetchmode
00036712 <AmiBlitz3.ab2@19754>   MOVE.w (A7)+,lasta6
00036718 <AmiBlitz3.ab2@19755>   MOVE.w (A7)+,dontwrite
0003671E <AmiBlitz3.ab2@19756>   MOVE.l (A7)+,destbufferend
00036724 <AmiBlitz3.ab2@19757>   MOVE.l (A7)+,destpointer
0003672A <AmiBlitz3.ab2@19758>   MOVE.w (A7)+,regnum
00036730 <AmiBlitz3.ab2@19759> JMP reget
00036734 <AmiBlitz3.ab2@19762> oldlibat:   Ds.l 1
0003673A <AmiBlitz3.ab2@19766>   LEA incdir,A0
0003673E <AmiBlitz3.ab2@19769>   CMP.w #$22,D0
00036742 <AmiBlitz3.ab2@19770>    BEQ.w JL_0_C052
00036744 <AmiBlitz3.ab2@19771>   MOVE.b D0,(A0)+
00036746 <AmiBlitz3.ab2@19772>   TST.w D0
0003674A <AmiBlitz3.ab2@19773>    BEQ.w JL_0_C05A
0003674E <AmiBlitz3.ab2@19774>    BMI.w syntaxerr
00036754 <AmiBlitz3.ab2@19777>   JSR get1bytemain                                         ;_long
00036758 <AmiBlitz3.ab2@19778> BRA.w JL_0_C03E
0003675A <AmiBlitz3.ab2@19781> RTS
00036760 <AmiBlitz3.ab2@19785>   LEA ptr_parameterstore,A1                                ;getparameter
00036766 <AmiBlitz3.ab2@19786>   LEA incdir,A0
00036768 <AmiBlitz3.ab2@19787>   MOVEQ.l #-$01,D2
0003676A <AmiBlitz3.ab2@19790>     ADDQ.w #1,D2
0003676C <AmiBlitz3.ab2@19791>     MOVE.b (A0)+,(A1)+
00036770 <AmiBlitz3.ab2@19792>   BNE.w JL_0_C06A
00036772 <AmiBlitz3.ab2@19793>   SUBQ.w #1,A1
0003677C <AmiBlitz3.ab2@19795>   MOVE.w oldqflag,instringon
00036782 <AmiBlitz3.ab2@19796>   MOVEA.l lastsourcepos,A5
00036788 <AmiBlitz3.ab2@19800>   JSR get1bytemain
0003678A <AmiBlitz3.ab2@19801>   TST.w D0
0003678E <AmiBlitz3.ab2@19802>    BMI.w syntaxerr
00036792 <AmiBlitz3.ab2@19803>   CMP.b #$22,D0
00036796 <AmiBlitz3.ab2@19804>    BEQ.w JL_0_C078
00036798 <AmiBlitz3.ab2@19805>   MOVE.b D0,(A1)+
0003679C <AmiBlitz3.ab2@19806>    BEQ.w JL_0_C096
0003679E <AmiBlitz3.ab2@19807>   ADDQ.w #1,D2
000367A2 <AmiBlitz3.ab2@19808> BRA.w JL_0_C078
000367A4 <AmiBlitz3.ab2@19811>   TST.w D2
000367A8 <AmiBlitz3.ab2@19812>    BEQ.w syntaxerr
000367AA <AmiBlitz3.ab2@19813> RTS
000367B0 <AmiBlitz3.ab2@19817>   MOVEA.l constantbase,A2
000367B4 <AmiBlitz3.ab2@19818>   MOVEA.l $E(A2),A5
000367BA <AmiBlitz3.ab2@19819>   MOVE.l a5,includesourceline
000367C0 <AmiBlitz3.ab2@19820>   LEA inctab,a0
000367C6 <AmiBlitz3.ab2@19821>   MOVE.w ininclude,d0
000367CA <AmiBlitz3.ab2@19822>   MOVE.l $0(a0,d0*4),d0
000367CE <AmiBlitz3.ab2@19823>   MOVEA.l $4(A2),A0
000367D2 <AmiBlitz3.ab2@19825>   LEA $0(A0,D0.l),A0
000367D4 <AmiBlitz3.ab2@19826>   MOVEA.l A5,A1
000367D6 <AmiBlitz3.ab2@19829>     CMPA.l A0,A1
000367DA <AmiBlitz3.ab2@19830>      BCC.w JL_0_C0C6
000367DC <AmiBlitz3.ab2@19831>   TST.b (A1)+
000367E0 <AmiBlitz3.ab2@19832>   BNE.w JL_0_C0B6
000367E4 <AmiBlitz3.ab2@19833> BRA.w JL_0_C112
000367E8 <AmiBlitz3.ab2@19836>   MOVEA.l $4(A2),A1
000367EA <AmiBlitz3.ab2@19839>   CMPA.l A0,A5
000367EE <AmiBlitz3.ab2@19840>   BCC.w JL_0_C0D6
000367F0 <AmiBlitz3.ab2@19841>   MOVE.b (A5)+,(A1)+
000367F4 <AmiBlitz3.ab2@19842> BRA.w JL_0_C0CA
000367F6 <AmiBlitz3.ab2@19845>   MOVE.l A1,D0
000367FA <AmiBlitz3.ab2@19846>   SUB.l $4(A2),D0
00036800 <AmiBlitz3.ab2@19847>   LEA inctab,a0
00036802 <AmiBlitz3.ab2@19848>   MOVEQ #0,d1
00036808 <AmiBlitz3.ab2@19849>   MOVE.w ininclude,d1
0003680C <AmiBlitz3.ab2@19850>   MOVE.l d0,0(a0,d1*4)
00036812 <AmiBlitz3.ab2@19852>   MOVEA.l _dosbase,A6
00036816 <AmiBlitz3.ab2@19853>   MOVE.l $8(A2),D1
00036818 <AmiBlitz3.ab2@19854>   MOVE.l A1,D2
0003681E <AmiBlitz3.ab2@19855>   MOVE.l D2,include_base
00036824 <AmiBlitz3.ab2@19857>   MOVE.l #$10000000,d3                                     ;load whole file
00036826 <AmiBlitz3.ab2@19858>   SUB.l D0,D3
0003682A <AmiBlitz3.ab2@19859>    JSR _Read(A6)
0003682C <AmiBlitz3.ab2@19860>   TST.l D0
00036830 <AmiBlitz3.ab2@19861>    BMI.w error_reading_file
00036834 <AmiBlitz3.ab2@19862>    BEQ.w JL_0_C120
0003683A <AmiBlitz3.ab2@19863>    MOVE.l D0,include_length
0003687C <AmiBlitz3.ab2@19864>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000368A6 <AmiBlitz3.ab2@19865>    !basic
000368B6 <AmiBlitz3.ab2@19866>    ilen.l  = Peek.l(?include_length)
000368C6 <AmiBlitz3.ab2@19867>    ibase.l = Peek.l(?include_base)
000368D6 <AmiBlitz3.ab2@19868>    ido.l   = Peek.l(?include_process)
000368E6 <AmiBlitz3.ab2@19869>    *tn.preprocessor = Peek.l(?include_preprocessor)
000368F0 <AmiBlitz3.ab2@19870>    If ido
00036902 <AmiBlitz3.ab2@19871>      ioffset.l = SkipXtraHeader{ibase,ilen}
00036928 <AmiBlitz3.ab2@19872>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
0003693A <AmiBlitz3.ab2@19873>      If nilen>0
0003694A <AmiBlitz3.ab2@19877>        Poke.l ?include_length,nilen
00036968 <AmiBlitz3.ab2@19880>    !asm
00036972 <AmiBlitz3.ab2@19881>    MOVE.l #0,include_process
00036978 <AmiBlitz3.ab2@19882>    MOVE.l include_length,D0
0003697E <AmiBlitz3.ab2@19883>    LEA inctab,a0
00036980 <AmiBlitz3.ab2@19884>    MOVEQ #0,d1
00036986 <AmiBlitz3.ab2@19885>    MOVE.w ininclude,d1
0003698A <AmiBlitz3.ab2@19886>    ADD.l d0,0(a0,d1*4)
0003698E <AmiBlitz3.ab2@19888>   MOVEA.l $4(A2),A5
00036992 <AmiBlitz3.ab2@19890>    MOVE.l 0(a0,d1*4),d0
00036996 <AmiBlitz3.ab2@19891>   CLR.b $0(A5,D0.l)
00036998 <AmiBlitz3.ab2@19894>   MOVEA.l A5,A0
0003699A <AmiBlitz3.ab2@19897>     TST.b (A0)+
0003699E <AmiBlitz3.ab2@19898>   BNE.w JL_0_C114
000369A2 <AmiBlitz3.ab2@19899>   MOVE.l A0,$E(A2)
000369A4 <AmiBlitz3.ab2@19900> RTS
000369A8 <AmiBlitz3.ab2@19903> include_length:        Dc.l 0                              ; for tokenizer!
000369AC <AmiBlitz3.ab2@19904> include_base:          Dc.l 0
000369B0 <AmiBlitz3.ab2@19905> include_process:       Dc.l 0
000369B4 <AmiBlitz3.ab2@19906> include_preprocessor:  Dc.l 0
000369B8 <AmiBlitz3.ab2@19910>   MOVE.l $8(A2),D1
000369BE <AmiBlitz3.ab2@19912>   MOVEA.l _dosbase,A6
000369C2 <AmiBlitz3.ab2@19913>   JSR _Close(a6)
000369C8 <AmiBlitz3.ab2@19914>   MOVEA.l _execbase,A6
000369CC <AmiBlitz3.ab2@19915>   MOVEA.l $4(A2),A1
000369D2 <AmiBlitz3.ab2@19916>   MOVE.l #$400*8,D0                                        ;exit include
000369D6 <AmiBlitz3.ab2@19918>   JSR _FreeVec(a6)
000369DC <AmiBlitz3.ab2@19921>   MOVE.l (A2),constantbase
000369DE <AmiBlitz3.ab2@19922>   MOVEA.l A2,A1
000369E0 <AmiBlitz3.ab2@19923>   MOVEQ.l #$00,D0
000369E4 <AmiBlitz3.ab2@19924>   MOVE.b $12(A2),D0
000369EA <AmiBlitz3.ab2@19925>   MOVEA.l _execbase,A6
000369F0 <AmiBlitz3.ab2@19926>   MOVE.l mempool2,a0
000369F4 <AmiBlitz3.ab2@19927>   JSR _FreePooled(A6)
000369FA <AmiBlitz3.ab2@19928>   JSR zero_includename
00036A00 <AmiBlitz3.ab2@19929>   SUBQ.w #1,ininclude
00036A04 <AmiBlitz3.ab2@19930>   BNE.w AJL_0_C09E
00036A0A <AmiBlitz3.ab2@19933>   LEA _include,a0
00036A0E <AmiBlitz3.ab2@19934>   MOVEM.l a0-a6/d0-d7,-(a7)
00036A14 <AmiBlitz3.ab2@19935>   LEA ptr_parameterstore,a1
00036A16 <AmiBlitz3.ab2@19938>     MOVE.b (a0)+,(a1)+
00036A1A <AmiBlitz3.ab2@19939>   BNE 'l1b
00036A1C <AmiBlitz3.ab2@19940>   MOVEQ #9,d2
00036A22 <AmiBlitz3.ab2@19941>   JSR findlabel2
00036A26 <AmiBlitz3.ab2@19942>   BNE 'd
00036A2A <AmiBlitz3.ab2@19943>   CLR.l 8(a2)
00036A2E <AmiBlitz3.ab2@19946>   MOVEM.l (a7)+,a0-a6/d0-d7
00036A30 <AmiBlitz3.ab2@19947> RTS
00036A36 <AmiBlitz3.ab2@19951>   MOVE.l unusedfunc,d0
00036A3A <AmiBlitz3.ab2@19952>   BEQ 'noclear
00036A3E <AmiBlitz3.ab2@19953>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00036A40 <AmiBlitz3.ab2@19956>     MOVE.l d0,a1
00036A44 <AmiBlitz3.ab2@19957>     MOVE.l 4(a1),d0
00036A46 <AmiBlitz3.ab2@19958>     MOVE.l (a1),d2
00036A4C <AmiBlitz3.ab2@19959>     MOVE.l _execbase,a6
00036A50 <AmiBlitz3.ab2@19960>     JSR _FreeMem(a6)
00036A52 <AmiBlitz3.ab2@19961>     MOVE.l d2,d0
00036A56 <AmiBlitz3.ab2@19962>   BNE 'f1
00036A5C <AmiBlitz3.ab2@19963>   CLR.l unusedfunc
00036A60 <AmiBlitz3.ab2@19964>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00036A62 <AmiBlitz3.ab2@19967> RTS
00036A68 <AmiBlitz3.ab2@19971>   MOVEA.l xinclude_base,A2
00036A6E <AmiBlitz3.ab2@19972>   CLR.l xinclude_base
00036A72 <AmiBlitz3.ab2@19975>     CMPA.w #$0,A2
00036A76 <AmiBlitz3.ab2@19976>      BEQ.w JL_0_C186
00036A78 <AmiBlitz3.ab2@19977>     MOVEQ.l #$00,D0
00036A7C <AmiBlitz3.ab2@19978>     MOVE.b 4+8(A2),D0
00036A7E <AmiBlitz3.ab2@19979>     MOVEA.l A2,A1
00036A80 <AmiBlitz3.ab2@19980>     MOVEA.l (A2),A2
00036A86 <AmiBlitz3.ab2@19981>     MOVEA.l _execbase,A6
00036A8C <AmiBlitz3.ab2@19982>     MOVE.l mempool2,a0
00036A90 <AmiBlitz3.ab2@19983>     JSR _FreePooled(A6)
00036A94 <AmiBlitz3.ab2@19984> BRA.w JL_0_C168
00036A96 <AmiBlitz3.ab2@19987> RTS
00036A9C <AmiBlitz3.ab2@19991>   MOVEA.l constantbase,A2
00036AA2 <AmiBlitz3.ab2@19992>   CLR.l constantbase
00036AA6 <AmiBlitz3.ab2@19995>     CMPA.w #$0,A2
00036AAA <AmiBlitz3.ab2@19996>      BEQ.w JL_0_C1DC
00036AAE <AmiBlitz3.ab2@19997>     MOVE.l $8(A2),D1
00036AB2 <AmiBlitz3.ab2@19998>      BEQ.w JL_0_C1AE
00036AB8 <AmiBlitz3.ab2@19999>     MOVEA.l _dosbase,A6
00036ABC <AmiBlitz3.ab2@20000>      JSR _Close(A6)
00036AC0 <AmiBlitz3.ab2@20003>     MOVE.l $4(A2),D0
00036AC4 <AmiBlitz3.ab2@20004>      BEQ.w JL_0_C1C6
00036AC6 <AmiBlitz3.ab2@20005>     MOVEA.l D0,A1
00036ACC <AmiBlitz3.ab2@20006>     MOVE.l #$400*8,D0
00036AD2 <AmiBlitz3.ab2@20007>     MOVEA.l _execbase,A6
00036AD8 <AmiBlitz3.ab2@20008>     MOVE.l mempool,a0
00036ADC <AmiBlitz3.ab2@20009>     JSR _FreeVec(a6)
00036ADE <AmiBlitz3.ab2@20012>     MOVEQ.l #$00,D0
00036AE2 <AmiBlitz3.ab2@20013>     MOVE.b $12(A2),D0
00036AE4 <AmiBlitz3.ab2@20014>     MOVEA.l A2,A1
00036AE6 <AmiBlitz3.ab2@20015>     MOVEA.l (A2),A2
00036AEC <AmiBlitz3.ab2@20016>     MOVEA.l _execbase,A6
00036AF2 <AmiBlitz3.ab2@20017>     MOVE.l mempool2,a0
00036AF6 <AmiBlitz3.ab2@20018>     JSR _FreePooled(A6)
00036AFA <AmiBlitz3.ab2@20019> BRA.w JL_0_C194
00036AFC <AmiBlitz3.ab2@20022> RTS
00036AFE <AmiBlitz3.ab2@20026>   SWAP D0
00036B02 <AmiBlitz3.ab2@20027>    BSR.w JL_0_C1E6
00036B04 <AmiBlitz3.ab2@20028>   SWAP D0
00036B0A <AmiBlitz3.ab2@20031>   MOVEA.l data2,A4
00036B10 <AmiBlitz3.ab2@20032>   CMPA.l allat,A4
00036B14 <AmiBlitz3.ab2@20033>    BCC.w JL_0_C200
00036B16 <AmiBlitz3.ab2@20034>   MOVE.w D0,(A4)+
00036B1C <AmiBlitz3.ab2@20035>   MOVE.l A4,data2
00036B1E <AmiBlitz3.ab2@20036> RTS
00036B26 <AmiBlitz3.ab2@20039>   MOVE.w #$FFFF,dontwrite
00036B2C <AmiBlitz3.ab2@20040>   ADDQ.l #2,data2
00036B2E <AmiBlitz3.ab2@20041> RTS
00036B34 <AmiBlitz3.ab2@20045>   MOVEA.l data2,A4
00036B3A <AmiBlitz3.ab2@20046>   CMPA.l allat,A4
00036B3E <AmiBlitz3.ab2@20047>    BCC.w JL_0_C22A
00036B40 <AmiBlitz3.ab2@20048>   MOVE.b D0,(A4)+
00036B46 <AmiBlitz3.ab2@20049>   MOVE.l A4,data2
00036B48 <AmiBlitz3.ab2@20050> RTS
00036B50 <AmiBlitz3.ab2@20053>   MOVE.w #$FFFF,dontwrite
00036B56 <AmiBlitz3.ab2@20054>   ADDQ.l #1,data2
00036B58 <AmiBlitz3.ab2@20055> RTS
00036B5C <AmiBlitz3.ab2@20059>   CMP.w #$22,D0
00036B60 <AmiBlitz3.ab2@20060>    BNE.w syntaxerr
00036B66 <AmiBlitz3.ab2@20064>   JSR get1bytemain
00036B6A <AmiBlitz3.ab2@20065>   CMP.b #$22,D0
00036B6E <AmiBlitz3.ab2@20066>    BEQ.w JL_0_C25A
00036B70 <AmiBlitz3.ab2@20067>   TST.w D0
00036B74 <AmiBlitz3.ab2@20068>    BEQ.w syntaxerr
00036B76 <AmiBlitz3.ab2@20069>   MOVE.b D0,(A0)+
00036B7A <AmiBlitz3.ab2@20070> BRA.w JL_0_C242
00036B7C <AmiBlitz3.ab2@20073>   CLR.b (A0)
00036B7E <AmiBlitz3.ab2@20074> RTS
00036B80 <AmiBlitz3.ab2@20077>   TST.l D3
00036B82 <AmiBlitz3.ab2@20078> RTS
00036B88 <AmiBlitz3.ab2@20081>   LEA ptr_parameterstore,A0
00036B8E <AmiBlitz3.ab2@20082>   LEA namebuff2,A1
00036B90 <AmiBlitz3.ab2@20085>     MOVE.b (A0)+,D0
00036B94 <AmiBlitz3.ab2@20086>     BEQ.w JL_0_C27C
00036B96 <AmiBlitz3.ab2@20087>   CMP.b (A1)+,D0
00036B9A <AmiBlitz3.ab2@20088>   BEQ.w JL_0_C26E
00036B9C <AmiBlitz3.ab2@20089> RTS
00036B9E <AmiBlitz3.ab2@20092>   TST.b (A1)
00036BA2 <AmiBlitz3.ab2@20093>   BNE.w JL_0_C284
00036BA4 <AmiBlitz3.ab2@20094> RTS
00036BA8 <AmiBlitz3.ab2@20097>   CMP.w #$1,D0
00036BAA <AmiBlitz3.ab2@20098> RTS
00036BAE <AmiBlitz3.ab2@20102>   CMP.w #$2E,D0                                            ;dodeftype
00036BB2 <AmiBlitz3.ab2@20103>    BNE.w syntaxerr
00036BB6 <AmiBlitz3.ab2@20104>   BSR.w getparameter2
00036BBC <AmiBlitz3.ab2@20105>   LEA newtypebase,A2
00036BC0 <AmiBlitz3.ab2@20106>   BSR.w findtype
00036BC4 <AmiBlitz3.ab2@20107>    BNE.w notypeerr
00036BCA <AmiBlitz3.ab2@20108>   TST.b declare
00036BCE <AmiBlitz3.ab2@20109>    BNE 'l1
00036BD4 <AmiBlitz3.ab2@20110>   TST.b declare2
00036BD8 <AmiBlitz3.ab2@20111>    BEQ 'l2
00036BE0 <AmiBlitz3.ab2@20114>   MOVE.b #2,nowdeclare
00036BE6 <AmiBlitz3.ab2@20118>   JSR reget
00036BEA <AmiBlitz3.ab2@20119>    BNE.w JL_0_C2B4
00036BF0 <AmiBlitz3.ab2@20120>   MOVE.l A2,defaulttype
00036BF2 <AmiBlitz3.ab2@20121> RTS
00036BF8 <AmiBlitz3.ab2@20124>   MOVE.l defaulttype,-(A7)
00036BFE <AmiBlitz3.ab2@20125>   MOVE.l A2,defaulttype
00036C02 <AmiBlitz3.ab2@20128>   BSR.w getparameter
00036C06 <AmiBlitz3.ab2@20129>    BSR.w JL_0_8E3C
00036C0A <AmiBlitz3.ab2@20130>   CMP.w #$2C,D0
00036C0E <AmiBlitz3.ab2@20131>    BNE.w JL_0_C2D8
00036C14 <AmiBlitz3.ab2@20132>    JSR get1bytemain                                        ; was BSR.w
00036C18 <AmiBlitz3.ab2@20133> BRA.w JL_0_C2C0
00036C1E <AmiBlitz3.ab2@20136>   MOVE.l (A7)+,defaulttype
00036C20 <AmiBlitz3.ab2@20137> RTS
00036C24 <AmiBlitz3.ab2@20141>   LEA $4(A5),A2                                            ;fehler function
00036C26 <AmiBlitz3.ab2@20144>   MOVE.l A2,D0
00036C2A <AmiBlitz3.ab2@20147>   BSR.w getparameter
00036C2E <AmiBlitz3.ab2@20148>   BSR.w JL_0_8E3C
00036C32 <AmiBlitz3.ab2@20149>   BSR.w calcvar
00036C36 <AmiBlitz3.ab2@20150>   CMP.b #$7,D2
00036C3A <AmiBlitz3.ab2@20151>    BNE.w mismatcherr
00036C3E <AmiBlitz3.ab2@20152>   MOVE.w varmode(PC),-(A7)
00036C42 <AmiBlitz3.ab2@20153>   CMP.w #$3D,D0
00036C46 <AmiBlitz3.ab2@20154>    BNE.w syntaxerr
00036C4A <AmiBlitz3.ab2@20155>   BTST #$F,D2
00036C4E <AmiBlitz3.ab2@20156>    BNE.w JL_0_C31C
00036C52 <AmiBlitz3.ab2@20157>   MOVE.w JL_0_C2E0(PC),D1
00036C56 <AmiBlitz3.ab2@20158>   BSR.w pokewda5s
00036C58 <AmiBlitz3.ab2@20159>   MOVE.w D3,D1
00036C5C <AmiBlitz3.ab2@20160>   BSR.w writeword
00036C60 <AmiBlitz3.ab2@20163>   MOVE.w L_0_C2E4(PC),D1
00036C64 <AmiBlitz3.ab2@20164>   BSR.w writeword
00036C6A <AmiBlitz3.ab2@20165>   ADDQ.w #1,regnum
00036C6C <AmiBlitz3.ab2@20166>   MOVEQ.l #$03,D2
00036C70 <AmiBlitz3.ab2@20167>   BSR.w eval
00036C76 <AmiBlitz3.ab2@20168>   MOVE.l #$D000,D1
00036C7C <AmiBlitz3.ab2@20169>   MOVE.l d1,lastinstruction
00036C7E <AmiBlitz3.ab2@20170>   TST.w (A7)+
00036C82 <AmiBlitz3.ab2@20171>    BEQ.w Atokejsr
00036C84 <AmiBlitz3.ab2@20172>   ADDQ.w #1,D1
00036C88 <AmiBlitz3.ab2@20173> BRA.w Atokejsr
00036C8A <AmiBlitz3.ab2@20177>   MOVE.w D0,D1
00036C8E <AmiBlitz3.ab2@20178>    BPL.w syntaxerr
00036C92 <AmiBlitz3.ab2@20179>   BCLR #$F,D1
00036C98 <AmiBlitz3.ab2@20180>    JSR searchinstr
00036C9C <AmiBlitz3.ab2@20181>   MOVE.l $12(A2),D0
00036CA0 <AmiBlitz3.ab2@20182>   TST.w -$2(A2,D0.L)
00036CA4 <AmiBlitz3.ab2@20183>    BEQ.w freeerr
00036CA6 <AmiBlitz3.ab2@20184>   MOVEQ.l #$02,D2
00036CA8 <AmiBlitz3.ab2@20185>   MOVE.l A2,-(A7)
00036CAC <AmiBlitz3.ab2@20186>    BSR.w eval
00036CAE <AmiBlitz3.ab2@20187>   MOVEA.l (A7)+,A2
00036CB4 <AmiBlitz3.ab2@20188>   MOVE.l A2,mymaxlib
00036CB8 <AmiBlitz3.ab2@20189>   ADDA.l $12(A2),A2
00036CBE <AmiBlitz3.ab2@20190>   TST.b debugmode
00036CC2 <AmiBlitz3.ab2@20191>    BEQ.w JL_0_C3A8
00036CC8 <AmiBlitz3.ab2@20192>   MOVE.w regnum,D1
00036CCA <AmiBlitz3.ab2@20193>   LSL.w #8,D1
00036CCC <AmiBlitz3.ab2@20194>   LSL.w #1,D1
00036CD0 <AmiBlitz3.ab2@20195>   ORI.w #$B07C,D1
00036CD4 <AmiBlitz3.ab2@20196>    BSR.w writeword
00036CD8 <AmiBlitz3.ab2@20197>   MOVE.w -$4(A2),D1
00036CDC <AmiBlitz3.ab2@20198>    BSR.w writeword
00036CE2 <AmiBlitz3.ab2@20199>   MOVE.l maxchk,D1
00036CE6 <AmiBlitz3.ab2@20200>    BSR.w writelong
00036CE8 <AmiBlitz3.ab2@20201>   MOVE.l A2,-(A7)
00036CEC <AmiBlitz3.ab2@20202>   MOVE.w #$C30A,D1
00036CF0 <AmiBlitz3.ab2@20203>    BSR.w Atokejsr
00036CF2 <AmiBlitz3.ab2@20204>   MOVEA.l (A7)+,A2
00036CF6 <AmiBlitz3.ab2@20207>   MOVE.w -$2(A2),D2
00036CFC <AmiBlitz3.ab2@20210>   MOVE.w regnum,D1
00036D02 <AmiBlitz3.ab2@20211>   OR.w lslimm,D1
00036D06 <AmiBlitz3.ab2@20212>   CMP.w #$8,D2
00036D0A <AmiBlitz3.ab2@20213>    BCS.w JL_0_C3CE
00036D0E <AmiBlitz3.ab2@20214>    BSR.w writeword
00036D10 <AmiBlitz3.ab2@20215>   SUBQ.w #8,D2
00036D14 <AmiBlitz3.ab2@20216>    BNE.w JL_0_C3AC
00036D18 <AmiBlitz3.ab2@20217> BRA.w JL_0_C3DA
00036D1A <AmiBlitz3.ab2@20220>   MOVE.w D2,D0
00036D1C <AmiBlitz3.ab2@20221>   LSL.w #8,D0
00036D1E <AmiBlitz3.ab2@20222>   LSL.w #1,D0
00036D20 <AmiBlitz3.ab2@20223>   OR.w D0,D1
00036D24 <AmiBlitz3.ab2@20224>   BSR.w writeword
00036D26 <AmiBlitz3.ab2@20227> RTS
00036D2A <AmiBlitz3.ab2@20232>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00036D2C <AmiBlitz3.ab2@20233>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00036D30 <AmiBlitz3.ab2@20237> mymaxlib:  Ds.l 1
00036D34 <AmiBlitz3.ab2@20241>   BSR.w JL_0_C340
00036D38 <AmiBlitz3.ab2@20242>   LEA free(PC),A0
00036D3C <AmiBlitz3.ab2@20243>   LEA freef(PC),A1
00036D42 <AmiBlitz3.ab2@20244>   MOVE.w -$6(A2),$2(A0)
00036D46 <AmiBlitz3.ab2@20245>   BSR.w pokecode
00036D4A <AmiBlitz3.ab2@20246>   MOVE.l -$A(A2),D1
00036D4E <AmiBlitz3.ab2@20249>   BEQ.w nosuperr
00036D52 <AmiBlitz3.ab2@20250>   MOVEA.l mymaxlib(PC),A2
00036D56 <AmiBlitz3.ab2@20251> BRA.w Amakelibsub
00036D5A <AmiBlitz3.ab2@20256>   BSR.w JL_0_C340
00036D60 <AmiBlitz3.ab2@20257>   LEA use,A0
00036D66 <AmiBlitz3.ab2@20258>   LEA usef,A1
00036D6C <AmiBlitz3.ab2@20259>   MOVE.w -$6(A2),$2(A0)
00036D72 <AmiBlitz3.ab2@20260>   MOVE.w -$6(A2),-$2(A1)
00036D76 <AmiBlitz3.ab2@20261>   ADDQ.w #4,-$2(A1)
00036D7A <AmiBlitz3.ab2@20262>   BSR.w pokecode
00036D7E <AmiBlitz3.ab2@20263>   MOVE.l -$E(A2),D1
00036D82 <AmiBlitz3.ab2@20264> BRA.w maxjsr
00036D88 <AmiBlitz3.ab2@20268>   JSR get1bytemain
00036D8E <AmiBlitz3.ab2@20272>   MOVE.l firstiff,D0
00036D92 <AmiBlitz3.ab2@20273>    BEQ.w noiferr
00036D94 <AmiBlitz3.ab2@20274>   MOVEA.l D0,A0
00036D9A <AmiBlitz3.ab2@20275>   CMPI.b #$1,$D(A0)
00036D9E <AmiBlitz3.ab2@20276>    BEQ.w illelseerr
00036DA2 <AmiBlitz3.ab2@20277>   MOVE.w #$6000,D1
00036DA8 <AmiBlitz3.ab2@20279>     TST.b fast
00036DAC <AmiBlitz3.ab2@20280>     BEQ 'l1
00036DB2 <AmiBlitz3.ab2@20281>     OR.l #$ff,d1
00036DB6 <AmiBlitz3.ab2@20282>     BSR writeword
00036DB8 <AmiBlitz3.ab2@20286>   SWAP D1
00036DBC <AmiBlitz3.ab2@20287>   BSR.w writelong
00036DBE <AmiBlitz3.ab2@20288>   MOVEQ.l #$00,D1
00036DC2 <AmiBlitz3.ab2@20289>   BSR.w AJL_0_D7B8
00036DCA <AmiBlitz3.ab2@20290>   MOVE.l destpointer,$8(A0)
00036DCE <AmiBlitz3.ab2@20291> BRA.w do_then
00036DD4 <AmiBlitz3.ab2@20295>   LEA ptr_parameterstore,A0
00036DD6 <AmiBlitz3.ab2@20296>   MOVE.l A0,-(A7)
00036DDA <AmiBlitz3.ab2@20297>   BSR.w JL_0_C23A
00036DDE <AmiBlitz3.ab2@20298> BRA.w handle_compileerror
00036DE2 <AmiBlitz3.ab2@20302>   BSR.w JL_0_BF6A
00036DE4 <AmiBlitz3.ab2@20303>   MOVEQ.l #$05,D1
00036DEE <AmiBlitz3.ab2@20305>   MOVE.w oldqflag,instringon
00036DF4 <AmiBlitz3.ab2@20306>   MOVEA.l lastsourcepos,A5
00036DFA <AmiBlitz3.ab2@20307>   LEA AJL_0_C25E,A0
00036DFE <AmiBlitz3.ab2@20308> BRA.w JL_0_C4B4
00036E04 <AmiBlitz3.ab2@20312>   LEA ptr_parameterstore,A0
00036E08 <AmiBlitz3.ab2@20313>   BSR.w JL_0_C23A
00036E0E <AmiBlitz3.ab2@20314>   JSR get1bytemain
00036E12 <AmiBlitz3.ab2@20315>   BSR.w JL_0_CCA8
00036E18 <AmiBlitz3.ab2@20316>   LEA namebuff2,A0
00036E1C <AmiBlitz3.ab2@20317>   BSR.w JL_0_C23A
00036E22 <AmiBlitz3.ab2@20318>   LEA AJL_0_C262,A0
00036E24 <AmiBlitz3.ab2@20321>   LSL.w #2,D1
00036E2A <AmiBlitz3.ab2@20322>   LEA CIF_branches,A1
00036E2E <AmiBlitz3.ab2@20323>   MOVE.l $0(A1,D1.W),-(A7)
00036E30 <AmiBlitz3.ab2@20324>   MOVEQ.l #-$01,D1
00036E32 <AmiBlitz3.ab2@20327>   JSR (A0)
00036E34 <AmiBlitz3.ab2@20328>   MOVEA.l (A7)+,A1
00036E36 <AmiBlitz3.ab2@20331> JMP (A1)
00036E3A <AmiBlitz3.ab2@20335>   BEQ.w JL_0_C4F6
00036E3E <AmiBlitz3.ab2@20336> BRA.w JL_0_C4F4
00036E42 <AmiBlitz3.ab2@20340>   BNE.w JL_0_C4F6
00036E46 <AmiBlitz3.ab2@20341> BRA.w JL_0_C4F4
00036E4A <AmiBlitz3.ab2@20345>   BLT.w JL_0_C4F6
00036E4E <AmiBlitz3.ab2@20346> BRA.w JL_0_C4F4
00036E52 <AmiBlitz3.ab2@20350>   BLE.w JL_0_C4F6
00036E56 <AmiBlitz3.ab2@20351> BRA.w JL_0_C4F4
00036E5A <AmiBlitz3.ab2@20355>   BGT.w JL_0_C4F6
00036E5E <AmiBlitz3.ab2@20356> BRA.w JL_0_C4F4
00036E62 <AmiBlitz3.ab2@20360>   BGE.w JL_0_C4F6
00036E64 <AmiBlitz3.ab2@20363>   MOVEQ.l #$00,D1
00036E6A <AmiBlitz3.ab2@20366>   MOVEA.l concomsp,A0
00036E70 <AmiBlitz3.ab2@20367>   MOVE.w skipcode,(A0)+
00036E76 <AmiBlitz3.ab2@20368>   MOVE.l A0,concomsp
00036E7C <AmiBlitz3.ab2@20369>   MOVE.w D1,skipcode
00036E82 <AmiBlitz3.ab2@20370>   JSR get1bytemain
00036E86 <AmiBlitz3.ab2@20371>    BNE.w syntaxerr
00036E8C <AmiBlitz3.ab2@20372> JMP bakup
00036E94 <AmiBlitz3.ab2@20376> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00036E98 <AmiBlitz3.ab2@20377> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00036E9C <AmiBlitz3.ab2@20384>   MOVE.w #$FC17,D1
00036EA2 <AmiBlitz3.ab2@20385>   JSR uselib
00036EA8 <AmiBlitz3.ab2@20387>   JSR reget
00036EAC <AmiBlitz3.ab2@20388>    BEQ.w do_Restore__resbeg
00036EB0 <AmiBlitz3.ab2@20389>   BSR.w JL_0_AE22                                          ;get label name!
00036EB4 <AmiBlitz3.ab2@20390>   MOVE.w rescode(PC),D1
00036EB8 <AmiBlitz3.ab2@20391>   BSR.w writeword
00036EBE <AmiBlitz3.ab2@20392>   JSR addoff                                               ;add offset
00036EC2 <AmiBlitz3.ab2@20393>   MOVE.l $C(A2),D1
00036EC6 <AmiBlitz3.ab2@20394>   BSR.w writelong
00036ECA <AmiBlitz3.ab2@20395>   MOVE.w rescode+6(PC),D1
00036ECE <AmiBlitz3.ab2@20396>   BSR.w writeword
00036ED2 <AmiBlitz3.ab2@20397>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00036ED6 <AmiBlitz3.ab2@20398>   BEQ.w do_Restore__no
00036ED8 <AmiBlitz3.ab2@20400>   MOVEA.l D1,A1
00036EDC <AmiBlitz3.ab2@20401>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00036EDE <AmiBlitz3.ab2@20402> RTS
00036EE0 <AmiBlitz3.ab2@20407> RTS
00036EE4 <AmiBlitz3.ab2@20410>   MOVE.w #$CD00,D1
00036EEA <AmiBlitz3.ab2@20411>   JSR Atokejsr
00036EEE <AmiBlitz3.ab2@20412>   MOVE.l rescode2(PC),D1
00036EF4 <AmiBlitz3.ab2@20413> JMP writelong
00036EF8 <AmiBlitz3.ab2@20417>   MOVE.w #$FC17,D1
00036EFE <AmiBlitz3.ab2@20418>   JSR uselib
00036F04 <AmiBlitz3.ab2@20421>   MOVE.l dataget,D1
00036F08 <AmiBlitz3.ab2@20422>   BSR.w writelong
00036F0C <AmiBlitz3.ab2@20423>   BSR.w getparameter
00036F10 <AmiBlitz3.ab2@20424>   BSR.w JL_0_8E3C
00036F14 <AmiBlitz3.ab2@20425>   BSR.w calcvar
00036F18 <AmiBlitz3.ab2@20426>   BTST #$E,D2
00036F1C <AmiBlitz3.ab2@20427>    BEQ.w JL_0_C5A6
00036F20 <AmiBlitz3.ab2@20428>   MOVE.b #$6,D2
00036F22 <AmiBlitz3.ab2@20431>   TST.b D2
00036F26 <AmiBlitz3.ab2@20432>    BEQ.w noleterr
00036F2C <AmiBlitz3.ab2@20433>   TST.b debugmode
00036F30 <AmiBlitz3.ab2@20434>    BEQ.w JL_0_C5D0
00036F34 <AmiBlitz3.ab2@20435>   MOVE.w #$7000,D1
00036F36 <AmiBlitz3.ab2@20436>   MOVE.b D2,D1
00036F3A <AmiBlitz3.ab2@20437>   ANDI.b #$F,D1
00036F3E <AmiBlitz3.ab2@20438>   BSR.w writeword
00036F42 <AmiBlitz3.ab2@20439>   MOVE.w #$C310,D1
00036F44 <AmiBlitz3.ab2@20440>   MOVE.w D2,-(A7)
00036F48 <AmiBlitz3.ab2@20441>   BSR.w Atokejsr
00036F4A <AmiBlitz3.ab2@20442>   MOVE.w (A7)+,D2
00036F4E <AmiBlitz3.ab2@20445>   CMP.b #$7,D2
00036F52 <AmiBlitz3.ab2@20446>    BEQ.w JL_0_C684
00036F56 <AmiBlitz3.ab2@20447>   CMP.b #$1,D2
00036F5A <AmiBlitz3.ab2@20448>    BNE.w JL_0_C62A
00036F60 <AmiBlitz3.ab2@20449>   LEA dataletb2,A0
00036F66 <AmiBlitz3.ab2@20450>   LEA dataletb2f,A1
00036F6A <AmiBlitz3.ab2@20451>   BTST #$F,D2
00036F6E <AmiBlitz3.ab2@20452>    BEQ.w JL_0_C5FC
00036F72 <AmiBlitz3.ab2@20453>   BSR.w pokecode
00036F76 <AmiBlitz3.ab2@20454> BRA.w JL_0_C668
00036F7C <AmiBlitz3.ab2@20457>   LEA dataletb,A0
00036F82 <AmiBlitz3.ab2@20458>   LEA dataletbf,A1
00036F88 <AmiBlitz3.ab2@20459>   TST.w varmode
00036F8C <AmiBlitz3.ab2@20460>    BEQ.w JL_0_C61E
00036F92 <AmiBlitz3.ab2@20461>   LEA dataletbl,A0
00036F98 <AmiBlitz3.ab2@20462>   LEA dataletblf,A1
00036F9C <AmiBlitz3.ab2@20465>   MOVE.w D3,$4(A0)
00036FA0 <AmiBlitz3.ab2@20466>   BSR.w pokecode
00036FA4 <AmiBlitz3.ab2@20467> BRA.w JL_0_C668
00036FAA <AmiBlitz3.ab2@20470>   LEA dataletw,A0
00036FAE <AmiBlitz3.ab2@20471>   CMP.b #$3,D2
00036FB2 <AmiBlitz3.ab2@20472>    BCS.w JL_0_C63E
00036FB8 <AmiBlitz3.ab2@20473>   LEA dataletl,A0
00036FBC <AmiBlitz3.ab2@20476>   BTST #$F,D2
00036FC0 <AmiBlitz3.ab2@20477>    BEQ.w JL_0_C652
00036FC4 <AmiBlitz3.ab2@20478>   MOVE.w $4(A0),D1
00036FC8 <AmiBlitz3.ab2@20479>    BSR.w writeword
00036FCC <AmiBlitz3.ab2@20480> BRA.w JL_0_C668
00036FD2 <AmiBlitz3.ab2@20483>   TST.w varmode
00036FD6 <AmiBlitz3.ab2@20484>    BEQ.w JL_0_C65E
00036FD8 <AmiBlitz3.ab2@20485>   ADDQ.w #6,A0
00036FDC <AmiBlitz3.ab2@20488>   MOVE.w D3,$2(A0)
00036FDE <AmiBlitz3.ab2@20489>   MOVE.l (A0),D1
00036FE2 <AmiBlitz3.ab2@20490>   BSR.w writelong
00036FE8 <AmiBlitz3.ab2@20493>   MOVE.l dataput,D1
00036FEC <AmiBlitz3.ab2@20494>    BSR.w writelong
00036FF0 <AmiBlitz3.ab2@20495>   CMP.w #$2C,D0
00036FF4 <AmiBlitz3.ab2@20496>    BEQ.w JL_0_C67C
00036FF6 <AmiBlitz3.ab2@20497> RTS
00036FFC <AmiBlitz3.ab2@20500>   JSR get1bytemain
00037000 <AmiBlitz3.ab2@20501> BRA.w JL_0_C584
00037006 <AmiBlitz3.ab2@20505>   MOVE.w stlenget,D1
0003700A <AmiBlitz3.ab2@20506>    BSR.w writeword
0003700E <AmiBlitz3.ab2@20507>   BTST #$F,D2
00037012 <AmiBlitz3.ab2@20508>    BNE.w JL_0_C6C0
00037018 <AmiBlitz3.ab2@20509>   TST.w varmode
0003701C <AmiBlitz3.ab2@20510>    BEQ.w JL_0_C6B0
00037022 <AmiBlitz3.ab2@20511>   MOVE.w D3,leaampl+2
00037028 <AmiBlitz3.ab2@20512>   MOVE.l leaampl,D1
0003702C <AmiBlitz3.ab2@20513> BRA.w JL_0_C6BC
00037032 <AmiBlitz3.ab2@20516>   MOVE.w D3,leaamp+2
00037038 <AmiBlitz3.ab2@20517>   MOVE.l leaamp,D1
0003703C <AmiBlitz3.ab2@20520>   BSR.w writelong
00037040 <AmiBlitz3.ab2@20523>   MOVE.w #$C701,D1
00037046 <AmiBlitz3.ab2@20524>   MOVE.w varmode,D2
0003704A <AmiBlitz3.ab2@20525>    BEQ.w JL_0_C6D0
0003704C <AmiBlitz3.ab2@20526>   SUBQ.w #1,D1
00037050 <AmiBlitz3.ab2@20529>   BSR.w Atokejsr
00037058 <AmiBlitz3.ab2@20530>   MOVE.w #$FFFF,lasta6
0003705E <AmiBlitz3.ab2@20531>   LEA stalign,A0
00037064 <AmiBlitz3.ab2@20532>   LEA stalignf,A1
00037068 <AmiBlitz3.ab2@20533>   BSR.w pokecode
0003706C <AmiBlitz3.ab2@20534> BRA.w JL_0_C668
00037070 <AmiBlitz3.ab2@20538>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
00037074 <AmiBlitz3.ab2@20539>    BNE.w JL_0_C720
0003707A <AmiBlitz3.ab2@20540>   JSR get1bytemain
0003707E <AmiBlitz3.ab2@20541>   CMP.w #$77,D0
00037082 <AmiBlitz3.ab2@20542>    BEQ.w JL_0_C71C
00037086 <AmiBlitz3.ab2@20543>   CMP.w #$62,D0
0003708A <AmiBlitz3.ab2@20544>    BEQ.w JL_0_C718
0003708E <AmiBlitz3.ab2@20545>   CMP.w #"s",d0
00037092 <AmiBlitz3.ab2@20546>   BEQ single3
00037096 <AmiBlitz3.ab2@20547>   CMP.w #"d",d0
0003709A <AmiBlitz3.ab2@20548>   BEQ double3
0003709E <AmiBlitz3.ab2@20549>   CMP.w #$6C,D0
000370A2 <AmiBlitz3.ab2@20550>    BNE.w syntaxerr
000370A4 <AmiBlitz3.ab2@20551>   MOVEQ.l #$02,D1
000370A6 <AmiBlitz3.ab2@20552> RTS
000370AE <AmiBlitz3.ab2@20556>   MOVE.b #1,iee
000370B0 <AmiBlitz3.ab2@20557>   MOVEQ.l #$3,d1
000370B2 <AmiBlitz3.ab2@20558> RTS
000370BA <AmiBlitz3.ab2@20562>   MOVE.b #1,iee
000370BC <AmiBlitz3.ab2@20563>   MOVEQ.l #$4,d1
000370BE <AmiBlitz3.ab2@20564> RTS
000370C0 <AmiBlitz3.ab2@20568>   MOVEQ.l #$00,D1
000370C2 <AmiBlitz3.ab2@20569> RTS
000370C4 <AmiBlitz3.ab2@20573>   MOVEQ.l #$01,D1
000370C6 <AmiBlitz3.ab2@20574> RTS
000370C8 <AmiBlitz3.ab2@20578>   MOVEQ.l #$01,D1
000370CE <AmiBlitz3.ab2@20579> JMP bakup
000370D2 <AmiBlitz3.ab2@20583>   BSR.w JL_0_C6F0
000370D4 <AmiBlitz3.ab2@20585>   MOVE.w D1,-(A7)
000370D8 <AmiBlitz3.ab2@20586>    BSR.w AJL_0_BF6E
000370DC <AmiBlitz3.ab2@20587>   CMP.w #$2C,D0
000370E0 <AmiBlitz3.ab2@20588>    BNE.w syntaxerr
000370E2 <AmiBlitz3.ab2@20589>   MOVE.l D3,-(A7)
000370E6 <AmiBlitz3.ab2@20590>    BSR.w AJL_0_BF6E
000370E8 <AmiBlitz3.ab2@20591>   MOVE.l D3,D1
000370EA <AmiBlitz3.ab2@20592>   MOVE.l (A7)+,D3
000370EC <AmiBlitz3.ab2@20593>   MOVE.w (A7)+,D2
000370F0 <AmiBlitz3.ab2@20594>    BEQ.w JL_0_C774
000370F4 <AmiBlitz3.ab2@20598>   CMP.w #$1,D2
000370F8 <AmiBlitz3.ab2@20599>    BEQ.w JL_0_C768
000370FA <AmiBlitz3.ab2@20602>   SWAP D1
000370FE <AmiBlitz3.ab2@20603>    BSR.w writeword
00037100 <AmiBlitz3.ab2@20604>   SWAP D1
00037104 <AmiBlitz3.ab2@20605>    BSR.w writeword
00037106 <AmiBlitz3.ab2@20606>   SUBQ.l #1,D3
0003710A <AmiBlitz3.ab2@20607>    BNE.w JL_0_C754
0003710C <AmiBlitz3.ab2@20608> RTS
00037110 <AmiBlitz3.ab2@20611>    BSR.w writeword
00037112 <AmiBlitz3.ab2@20612>   SUBQ.l #1,D3
00037116 <AmiBlitz3.ab2@20613>    BNE.w JL_0_C768
00037118 <AmiBlitz3.ab2@20614> RTS
0003711C <AmiBlitz3.ab2@20617>    BSR.w writebyte
0003711E <AmiBlitz3.ab2@20618>   SUBQ.l #1,D3
00037122 <AmiBlitz3.ab2@20619>    BNE.w JL_0_C774
00037124 <AmiBlitz3.ab2@20620> RTS
00037128 <AmiBlitz3.ab2@20624>   BSR.w JL_0_C6F0                                          ;definestorage
0003712A <AmiBlitz3.ab2@20625>   MOVE.w D1,-(A7)
0003712E <AmiBlitz3.ab2@20626>   BSR.w AJL_0_BF6E
00037130 <AmiBlitz3.ab2@20627>   MOVE.w (A7)+,D1
00037132 <AmiBlitz3.ab2@20628>   LSL.l D1,D3
00037134 <AmiBlitz3.ab2@20629>   MOVE.l d3,d0
00037138 <AmiBlitz3.ab2@20630>   BEQ 'll5
0003713A <AmiBlitz3.ab2@20631>   MOVEQ #0,d1
00037140 <AmiBlitz3.ab2@20634>     JSR writebyte
00037142 <AmiBlitz3.ab2@20635>     SUBQ.l #1,d3
00037146 <AmiBlitz3.ab2@20636>   BNE.s 'll10
00037148 <AmiBlitz3.ab2@20639> RTS
0003714A <AmiBlitz3.ab2@20643>   MOVE.w D0,-(A7)
00037150 <AmiBlitz3.ab2@20644>   LEA dummyasm,A0
00037156 <AmiBlitz3.ab2@20645>   MOVEA.l destpointer,A1
00037160 <AmiBlitz3.ab2@20646>   MOVE.w asmlen2,asmlen
00037166 <AmiBlitz3.ab2@20647>   JSR insasm
00037168 <AmiBlitz3.ab2@20648>   MOVE.w (A7)+,D0
0003716A <AmiBlitz3.ab2@20649> RTS
0003716E <AmiBlitz3.ab2@20653>   BSR.w JL_0_C6F0
00037178 <AmiBlitz3.ab2@20655>   MOVE.l #ptr_parameterstore,asmbuff
0003717A <AmiBlitz3.ab2@20656>   TST.w D1
0003717E <AmiBlitz3.ab2@20657>    BEQ.w JL_0_C7EE
00037182 <AmiBlitz3.ab2@20658>   CMP.w #$1,D1
00037186 <AmiBlitz3.ab2@20659>    BEQ.w JL_0_C844
0003718A <AmiBlitz3.ab2@20660>   CMP.w #$2,d1
0003718E <AmiBlitz3.ab2@20661>    BEQ long
00037192 <AmiBlitz3.ab2@20662>   CMP.w #$3,d1
00037196 <AmiBlitz3.ab2@20663>    BEQ single
00037198 <AmiBlitz3.ab2@20664>    MOVEQ.l #$0d,D3
0003719E <AmiBlitz3.ab2@20670>    JSR asmconst
000371A2 <AmiBlitz3.ab2@20671>    BSR.w JL_0_C796
000371A6 <AmiBlitz3.ab2@20672>    BSR.w writelong
000371AA <AmiBlitz3.ab2@20673>    BSR   writelong
000371AE <AmiBlitz3.ab2@20674>   CMP.w #$2C,D0
000371B2 <AmiBlitz3.ab2@20675>    BEQ.w JL_0_C7D8b
000371B4 <AmiBlitz3.ab2@20676> RTS
000371B6 <AmiBlitz3.ab2@20680>   MOVEQ.l #$0B,D3
000371BE <AmiBlitz3.ab2@20684>   MOVE.b #1,_dcb
000371C4 <AmiBlitz3.ab2@20687>   JSR asmconst
000371CA <AmiBlitz3.ab2@20688>   CLR.b _dcb
000371CE <AmiBlitz3.ab2@20689>   BSR.w JL_0_C796
000371D2 <AmiBlitz3.ab2@20690>   BSR writebyte
000371D6 <AmiBlitz3.ab2@20691>   BSR writebyte
000371DA <AmiBlitz3.ab2@20692>   BSR writebyte                                            ;long
000371DE <AmiBlitz3.ab2@20693>   BSR writebyte
000371E2 <AmiBlitz3.ab2@20694>   CMP.w #$2C,D0
000371E6 <AmiBlitz3.ab2@20695>    BEQ.w JL_0_C7D8
000371E8 <AmiBlitz3.ab2@20696> RTS
000371EA <AmiBlitz3.ab2@20700>   MOVEQ.l #$0c,D3
000371F2 <AmiBlitz3.ab2@20704>   MOVE.b #1,_dcb
000371F8 <AmiBlitz3.ab2@20707>   JSR asmconst
000371FE <AmiBlitz3.ab2@20708>   CLR.b _dcb
00037202 <AmiBlitz3.ab2@20709>   BSR.w JL_0_C796
00037206 <AmiBlitz3.ab2@20710>   BSR.w writebyte
0003720A <AmiBlitz3.ab2@20711>   BSR.w writebyte
0003720E <AmiBlitz3.ab2@20712>   BSR.w writebyte
00037212 <AmiBlitz3.ab2@20713>   BSR.w writebyte
00037216 <AmiBlitz3.ab2@20714>   CMP.w #$2C,D0
0003721A <AmiBlitz3.ab2@20715>    BEQ.w JL_0_C7D8a
0003721C <AmiBlitz3.ab2@20716> RTS
0003721E <AmiBlitz3.ab2@20721>   MOVEQ.l #$11,D3
00037224 <AmiBlitz3.ab2@20724>   JSR get1bytemain
00037228 <AmiBlitz3.ab2@20725>   CMP.w #$22,D0
0003722C <AmiBlitz3.ab2@20726>    BNE.w JL_0_C81E
0003722E <AmiBlitz3.ab2@20729>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00037232 <AmiBlitz3.ab2@20730>    BEQ.w syntaxerr
00037236 <AmiBlitz3.ab2@20731>   CMP.w #$22,D0
0003723A <AmiBlitz3.ab2@20732>    BEQ.w JL_0_C816
0003723E <AmiBlitz3.ab2@20733>   CMP.b #"\",d0
00037242 <AmiBlitz3.ab2@20734>    BNE 'n1
00037246 <AmiBlitz3.ab2@20735>   CMP.b #"\",(a5)
0003724A <AmiBlitz3.ab2@20736>    BEQ 'do1
0003724C <AmiBlitz3.ab2@20739>   MOVE.w D0,D1
00037250 <AmiBlitz3.ab2@20740>   BSR.w writebyte
00037254 <AmiBlitz3.ab2@20741> BRA.w JL_0_C7FC
0003725C <AmiBlitz3.ab2@20744>   CMP.l #"__DA",1(a5)
00037260 <AmiBlitz3.ab2@20745>    BNE 'nodate1
00037268 <AmiBlitz3.ab2@20746>   CMP.l #"TE__",5(a5)
0003726C <AmiBlitz3.ab2@20747>    BEQ 'c1
00037274 <AmiBlitz3.ab2@20748>   CMP.l #"TE_G",5(a5)
00037278 <AmiBlitz3.ab2@20749>    BNE 'nodate1
00037280 <AmiBlitz3.ab2@20750>   CMP.l #"ER__",9(a5)
00037284 <AmiBlitz3.ab2@20751>    BNE 'nodate1
0003728A <AmiBlitz3.ab2@20752>   JSR compiledatedc_ger
0003728E <AmiBlitz3.ab2@20753> BRA 'n1
00037294 <AmiBlitz3.ab2@20756>   JSR compiledatedc
00037298 <AmiBlitz3.ab2@20757> BRA 'n1
000372A0 <AmiBlitz3.ab2@20760>   CMP.l #"__VE",1(a5)
000372A4 <AmiBlitz3.ab2@20761>    BNE 'n1
000372AA <AmiBlitz3.ab2@20762>   CMP.w #"R_",5(a5)
000372AE <AmiBlitz3.ab2@20763>    BNE 'n1
000372B4 <AmiBlitz3.ab2@20764>   JSR version_string_dc
000372B8 <AmiBlitz3.ab2@20765> BRA.w JL_0_C7FC
000372BE <AmiBlitz3.ab2@20769>   CLR.w instringon
000372C4 <AmiBlitz3.ab2@20770>   JSR get1bytemain
000372C8 <AmiBlitz3.ab2@20771> BRA.w JL_0_C83A
000372D2 <AmiBlitz3.ab2@20776>    MOVE.w oldqflag,instringon
000372D8 <AmiBlitz3.ab2@20777>   MOVEA.l lastsourcepos,A5
000372DE <AmiBlitz3.ab2@20778>    JSR asmconst
000372E4 <AmiBlitz3.ab2@20779>   SUBQ.l #1,destpointer
000372E8 <AmiBlitz3.ab2@20780>    BSR.w JL_0_C796
000372EE <AmiBlitz3.ab2@20781>   ADDQ.l #1,destpointer
000372F2 <AmiBlitz3.ab2@20782>    BSR.w writebyte
000372F6 <AmiBlitz3.ab2@20785>   CMP.w #$2C,D0
000372FA <AmiBlitz3.ab2@20786>    BEQ.w JL_0_C7F0
000372FC <AmiBlitz3.ab2@20787> RTS
000372FE <AmiBlitz3.ab2@20791>   MOVEQ.l #$10,D3
00037306 <AmiBlitz3.ab2@20797>   MOVE.b #1,_dcb
0003730C <AmiBlitz3.ab2@20798>   JSR asmconst
00037312 <AmiBlitz3.ab2@20799>   CLR.b _dcb
00037316 <AmiBlitz3.ab2@20800>   BSR.w JL_0_C796
0003731A <AmiBlitz3.ab2@20801>   BSR.w writebyte
0003731E <AmiBlitz3.ab2@20802>   BSR.w writebyte
00037322 <AmiBlitz3.ab2@20803>   CMP.w #$2C,D0
00037326 <AmiBlitz3.ab2@20804>    BEQ.w JL_0_C84A
00037328 <AmiBlitz3.ab2@20805> RTS
0003732E <AmiBlitz3.ab2@20809>   ADDQ.l #3,destpointer
00037336 <AmiBlitz3.ab2@20810>   ANDI.w #$FFFC,destpointer+2
00037338 <AmiBlitz3.ab2@20811> RTS
0003733E <AmiBlitz3.ab2@20815>   ADDQ.l #7,destpointer
00037346 <AmiBlitz3.ab2@20816>   ANDI.w #$FFF8,destpointer+2
00037348 <AmiBlitz3.ab2@20817> RTS
0003734E <AmiBlitz3.ab2@20821>   ADDQ.l #1,destpointer                                    ;even
00037356 <AmiBlitz3.ab2@20822>   BCLR #$0,destpointer+3
00037358 <AmiBlitz3.ab2@20823> RTS
0003735A <AmiBlitz3.ab2@20826> datasize: Ds.w 1
00037360 <AmiBlitz3.ab2@20836>   TST.b debugmode
00037364 <AmiBlitz3.ab2@20837>   BEQ.w pdt__skip
00037368 <AmiBlitz3.ab2@20838>   MOVE.w #$4420,D0                                         ;'D '
0003736C <AmiBlitz3.ab2@20839>   MOVE.b datasize+1(PC),D0
00037370 <AmiBlitz3.ab2@20840> BRA.w JL_0_C1E6
00037372 <AmiBlitz3.ab2@20843> RTS
00037376 <AmiBlitz3.ab2@20847>   MOVE.w #$FC17,D1
0003737C <AmiBlitz3.ab2@20848>    JSR uselib
00037386 <AmiBlitz3.ab2@20850>    MOVE.w oldqflag,instringon
0003738C <AmiBlitz3.ab2@20851>   MOVEA.l lastsourcepos,A5
00037392 <AmiBlitz3.ab2@20852>    JSR AJL_0_498A
00037398 <AmiBlitz3.ab2@20853>   MOVE.w D1,datasize
0003739C <AmiBlitz3.ab2@20854>   CMP.w #$7,D1
000373A0 <AmiBlitz3.ab2@20855>    BEQ.w JL_0_C944
000373A2 <AmiBlitz3.ab2@20856>   MOVE.w D1,-(A7)
000373A6 <AmiBlitz3.ab2@20859>   BSR.w pdt
000373A8 <AmiBlitz3.ab2@20860>   MOVE.w (A7),D2
000373AC <AmiBlitz3.ab2@20861>    BSR.w JL_0_B1D8
000373AE <AmiBlitz3.ab2@20862>   CMP.w (A7),D2                                            ;datamode
000373B2 <AmiBlitz3.ab2@20863>    BEQ.w JL_0_C920
000373B4 <AmiBlitz3.ab2@20864>   MOVE.w D2,D1
000373B6 <AmiBlitz3.ab2@20865>   MOVE.w (A7),D2
000373BA <AmiBlitz3.ab2@20866>   CMP.w #$2,D2
000373BE <AmiBlitz3.ab2@20867>    BNE.w JL_0_C8FE
000373C2 <AmiBlitz3.ab2@20868>   CMP.w #$3,D1
000373C6 <AmiBlitz3.ab2@20869>    BNE.w baddaterr
000373CC <AmiBlitz3.ab2@20870>   CMP.l #$10000,D3
000373D0 <AmiBlitz3.ab2@20871>    BCC.w baddaterr
000373D4 <AmiBlitz3.ab2@20872> BRA.w JL_0_C920
000373D8 <AmiBlitz3.ab2@20875>   CMP.w #$1,D2
000373DC <AmiBlitz3.ab2@20876>    BNE.w JL_0_C91C
000373E0 <AmiBlitz3.ab2@20877>   CMP.w #$2,D1
000373E4 <AmiBlitz3.ab2@20878>    BNE.w baddaterr
000373EA <AmiBlitz3.ab2@20879>   CMP.l #$100,D3
000373EE <AmiBlitz3.ab2@20880>    BCC.w baddaterr
000373F2 <AmiBlitz3.ab2@20881> BRA.w JL_0_C920
000373F6 <AmiBlitz3.ab2@20884> BRA.w baddaterr
000373FA <AmiBlitz3.ab2@20887>   CMP.w #$3,D2
000373FE <AmiBlitz3.ab2@20888>   BCC.w JL_0_C930
00037402 <AmiBlitz3.ab2@20889>   BSR.w JL_0_C1E6
00037406 <AmiBlitz3.ab2@20890> BRA.w JL_0_C934
0003740C <AmiBlitz3.ab2@20893>   TST.b iee
00037410 <AmiBlitz3.ab2@20894>   BEQ 'old
00037414 <AmiBlitz3.ab2@20895>   CMP.b #5,d2
00037418 <AmiBlitz3.ab2@20896>   BNE 'old
0003741C <AmiBlitz3.ab2@20897>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00037420 <AmiBlitz3.ab2@20901>   BSR.w JL_0_C1DE                                          ;write data >3
00037426 <AmiBlitz3.ab2@20904>   JSR reget
0003742A <AmiBlitz3.ab2@20905>   CMP.w #$2C,D0
0003742E <AmiBlitz3.ab2@20906>    BEQ.w JL_0_C8CC
00037430 <AmiBlitz3.ab2@20907>   ADDQ.w #2,A7
00037432 <AmiBlitz3.ab2@20908> RTS
00037436 <AmiBlitz3.ab2@20911>    BSR.w pdt
0003743C <AmiBlitz3.ab2@20912>   MOVE.l data2,-(A7)
00037440 <AmiBlitz3.ab2@20913>    BSR.w JL_0_C1DE
00037442 <AmiBlitz3.ab2@20914>   MOVEQ.l #$00,D1
00037448 <AmiBlitz3.ab2@20915>    JSR get1bytemain
0003744C <AmiBlitz3.ab2@20916>    BEQ.w JL_0_C9A6
00037450 <AmiBlitz3.ab2@20917>   CMP.w #$22,D0
00037454 <AmiBlitz3.ab2@20918>    BEQ.w JL_0_C988
00037458 <AmiBlitz3.ab2@20919>   CMP.w #$2C,D0
0003745C <AmiBlitz3.ab2@20920>    BEQ.w JL_0_C9A6
00037460 <AmiBlitz3.ab2@20923>    BSR.w JL_0_C210
00037462 <AmiBlitz3.ab2@20924>   ADDQ.w #1,D1
00037468 <AmiBlitz3.ab2@20925>    JSR getchar
0003746A <AmiBlitz3.ab2@20926>   TST.w D0
0003746E <AmiBlitz3.ab2@20927>    BEQ.w JL_0_C9A6
00037472 <AmiBlitz3.ab2@20928>   CMP.w #$2C,D0
00037476 <AmiBlitz3.ab2@20929>    BEQ.w JL_0_C9A6
0003747A <AmiBlitz3.ab2@20930> BRA.w JL_0_C96C
0003747C <AmiBlitz3.ab2@20934>    MOVEQ #0,d0
0003747E <AmiBlitz3.ab2@20935>    MOVE.b (a5)+,d0
00037482 <AmiBlitz3.ab2@20936>    BEQ.w notqerr2
00037486 <AmiBlitz3.ab2@20937>   CMP.w #$22,D0
0003748A <AmiBlitz3.ab2@20938>    BEQ.w JL_0_C9A2
0003748E <AmiBlitz3.ab2@20939>    BSR.w JL_0_C210
00037490 <AmiBlitz3.ab2@20940>   ADDQ.w #1,D1
00037494 <AmiBlitz3.ab2@20941> BRA.w JL_0_C988
0003749A <AmiBlitz3.ab2@20942> notqerr2 JMP notqerr
000374A0 <AmiBlitz3.ab2@20944>   CLR.w instringon
000374A6 <AmiBlitz3.ab2@20945>   JSR get1bytemain
000374A8 <AmiBlitz3.ab2@20948>   MOVEA.l (A7)+,A0
000374AE <AmiBlitz3.ab2@20949>   MOVE.w dontwrite,D2
000374B2 <AmiBlitz3.ab2@20950>    BNE.w JL_0_C9B4
000374B4 <AmiBlitz3.ab2@20951>   MOVE.l D1,(A0)
000374BA <AmiBlitz3.ab2@20954>   ADDQ.l #1,data2
000374C2 <AmiBlitz3.ab2@20955>   BCLR #$0,data2+3
000374C6 <AmiBlitz3.ab2@20956>   CMP.w #$2C,D0
000374CA <AmiBlitz3.ab2@20957>    BEQ.w JL_0_C944
000374CC <AmiBlitz3.ab2@20958> RTS
000374D2 <AmiBlitz3.ab2@20962> JMP vardeclareerr
000374D8 <AmiBlitz3.ab2@20965>   MOVE.w proceduremode,D1                                  ;doshared
000374DC <AmiBlitz3.ab2@20967>   BNE.w 'l1
000374DE <AmiBlitz3.ab2@20968>   MOVE.w D1,-(A7)
000374E4 <AmiBlitz3.ab2@20969>   CLR.w proceduremode
000374EA <AmiBlitz3.ab2@20972>   LEA varbase,a2
000374EE <AmiBlitz3.ab2@20973>   BSR.w getparameter
000374F0 <AmiBlitz3.ab2@20974>   MOVE.w d2,-(a7)
000374F6 <AmiBlitz3.ab2@20975>    JSR findvariable
000374FA <AmiBlitz3.ab2@20976>    BEQ 'checkdim
00037500 <AmiBlitz3.ab2@20977>    LEA sharebase,a2
00037502 <AmiBlitz3.ab2@20978>    MOVEQ #$f+4,d7
00037506 <AmiBlitz3.ab2@20979>    BSR.w findlab                                         ;find var
0003750A <AmiBlitz3.ab2@20980>    BEQ.b dupsherr
0003750E <AmiBlitz3.ab2@20981>    BSR addlabel
00037512 <AmiBlitz3.ab2@20982>    CMP.b #".",d0
00037516 <AmiBlitz3.ab2@20983>    BNE JUMP_vardeclareerr
00037518 <AmiBlitz3.ab2@20984>    MOVE.l a2,a3
0003751E <AmiBlitz3.ab2@20985>    JSR JL_0_8EB8b
00037520 <AmiBlitz3.ab2@21016>   MOVE.w (a7)+,d2
00037524 <AmiBlitz3.ab2@21017>    CMP.b #",",d0
00037528 <AmiBlitz3.ab2@21018>    BNE 'ret
0003752E <AmiBlitz3.ab2@21019>    JSR get1bytemain
00037532 <AmiBlitz3.ab2@21020> BRA 'again2
00037538 <AmiBlitz3.ab2@21023>   MOVE.w (A7)+,proceduremode
0003753A <AmiBlitz3.ab2@21024> RTS
00037540 <AmiBlitz3.ab2@21031>    CMP.w #2,6(a2)
00037544 <AmiBlitz3.ab2@21032>    BEQ 'do
0003754A <AmiBlitz3.ab2@21033>    CMP.w #$102,6(a2)
0003754E <AmiBlitz3.ab2@21034>    BEQ 'do
00037554 <AmiBlitz3.ab2@21035> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0003755A <AmiBlitz3.ab2@21038>   LEA varbase,a0
0003755C <AmiBlitz3.ab2@21041>   MOVE.l (A0),D0                                           ;find label
00037560 <AmiBlitz3.ab2@21042>    BEQ.b 'z1
00037562 <AmiBlitz3.ab2@21043>    CMP.l d0,a2
00037566 <AmiBlitz3.ab2@21044>    BEQ 'z1
00037568 <AmiBlitz3.ab2@21045>    MOVE.l d0,a0
0003756C <AmiBlitz3.ab2@21046> BRA 'm1
0003756E <AmiBlitz3.ab2@21049>   MOVE.l (a2),d1
00037570 <AmiBlitz3.ab2@21050>     MOVE.l d1,(a0)
00037572 <AmiBlitz3.ab2@21051>     CLR.l (a2)
00037578 <AmiBlitz3.ab2@21052>     LEA sharebase,a0
0003757A <AmiBlitz3.ab2@21053>     MOVE.l (a0),(a2)
0003757C <AmiBlitz3.ab2@21054>     MOVE.l a2,(a0)
00037582 <AmiBlitz3.ab2@21055>     JSR get1bytemain
00037588 <AmiBlitz3.ab2@21056>     JSR get1bytemain
0003758C <AmiBlitz3.ab2@21057> BRA 'domore
00037594 <AmiBlitz3.ab2@21060>   MOVE.b #1,nowdeclare
00037596 <AmiBlitz3.ab2@21061>   MOVE.w D1,-(A7)
0003759C <AmiBlitz3.ab2@21062>   CLR.w proceduremode
000375A0 <AmiBlitz3.ab2@21065>    BSR.w getparameter
000375A2 <AmiBlitz3.ab2@21066>   MOVE.w D2,-(A7)
000375A8 <AmiBlitz3.ab2@21067>   LEA firstglob,A2
000375AC <AmiBlitz3.ab2@21068>    BSR.w findvariable2
000375B0 <AmiBlitz3.ab2@21069>    BNE.b JL_0_CA06
000375B6 <AmiBlitz3.ab2@21072>   MOVE.b flagmask+1,D1
000375BA <AmiBlitz3.ab2@21073>   MOVE.b $7(A2),D3
000375BC <AmiBlitz3.ab2@21074>   EOR.b D3,D1
000375C0 <AmiBlitz3.ab2@21075>    BEQ.w dupsherr
000375C4 <AmiBlitz3.ab2@21076>    BSR.w findlab
000375C8 <AmiBlitz3.ab2@21077>    BEQ.b JL_0_C9F0
000375CC <AmiBlitz3.ab2@21080>    BSR.w addlabel
000375CE <AmiBlitz3.ab2@21081>   MOVE.w (A7)+,D2
000375D0 <AmiBlitz3.ab2@21082>   MOVE.l A2,-(A7)
000375D4 <AmiBlitz3.ab2@21083>    BSR.w JL_0_8E3C
000375D6 <AmiBlitz3.ab2@21084>   MOVEA.l (A7)+,A2
000375D8 <AmiBlitz3.ab2@21085>   MOVEQ.l #$04,D1
000375DA <AmiBlitz3.ab2@21086>   ADDQ.w #4,A2
000375DC <AmiBlitz3.ab2@21087>   ADDQ.w #4,A3
000375DE <AmiBlitz3.ab2@21090>     MOVE.w (A3)+,(A2)+
000375E2 <AmiBlitz3.ab2@21091>   DBF D1,JL_0_CA1A
000375EA <AmiBlitz3.ab2@21093>   BTST #$1,flagmask+1
000375EE <AmiBlitz3.ab2@21094>    BEQ.w JL_0_CA3C
000375F4 <AmiBlitz3.ab2@21095>    JSR get1bytemain
000375F8 <AmiBlitz3.ab2@21096>   CMP.w #$29,D0
000375FC <AmiBlitz3.ab2@21097>    BNE.w syntaxerr
00037602 <AmiBlitz3.ab2@21098>    JSR get1bytemain
00037606 <AmiBlitz3.ab2@21101>    CMP.w #$2C,D0
0003760A <AmiBlitz3.ab2@21102>    BNE.w JL_0_CA4C
00037610 <AmiBlitz3.ab2@21103>    JSR get1bytemain
00037614 <AmiBlitz3.ab2@21104> BRA.w JL_0_C9DE
0003761A <AmiBlitz3.ab2@21107>   MOVE.w (A7)+,proceduremode
0003761C <AmiBlitz3.ab2@21108> RTS
00037620 <AmiBlitz3.ab2@21112>    BSR.w JL_0_C05C
00037626 <AmiBlitz3.ab2@21113>    JSR check_incdir                                        ; ergebnis in d2
0003762C <AmiBlitz3.ab2@21115>    LEA ptr_parameterstore,a1
0003762E <AmiBlitz3.ab2@21116>    MOVE.l d2,-(a7)
00037634 <AmiBlitz3.ab2@21117>    LEA includetemp,a0                                      ; filename in includetemp packen
00037636 <AmiBlitz3.ab2@21120>      MOVE.b (a1)+,(a0)+
0003763A <AmiBlitz3.ab2@21121>    BNE 'l4
00037640 <AmiBlitz3.ab2@21123>    LEA ptr_parameterstore,a1
00037642 <AmiBlitz3.ab2@21124>    MOVE.l a1,a0
00037644 <AmiBlitz3.ab2@21127>     TST.b (a0)+
00037648 <AmiBlitz3.ab2@21128>    BNE 'l1
0003764A <AmiBlitz3.ab2@21131>      MOVE.b -(a0),d0
0003764E <AmiBlitz3.ab2@21132>      CMP.b #":",d0
00037652 <AmiBlitz3.ab2@21133>       BEQ 'out
00037656 <AmiBlitz3.ab2@21134>      CMP.b #"/",d0
0003765A <AmiBlitz3.ab2@21135>       BEQ 'out
0003765C <AmiBlitz3.ab2@21136>      CMP.l a1,a0
00037660 <AmiBlitz3.ab2@21137>       BEQ 'out2
00037664 <AmiBlitz3.ab2@21138> BRA 'l2
00037666 <AmiBlitz3.ab2@21141>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00037668 <AmiBlitz3.ab2@21144>    MOVEQ.l #-$01,D2
0003766A <AmiBlitz3.ab2@21147>      ADDQ.w #1,D2
0003766C <AmiBlitz3.ab2@21148>      MOVE.b (a0)+,(a1)+
00037670 <AmiBlitz3.ab2@21149>    BNE 'l3
00037672 <AmiBlitz3.ab2@21150>    CLR.b (a1)+
00037678 <AmiBlitz3.ab2@21152>    LEA ptr_parameterstore,a1
0003767C <AmiBlitz3.ab2@21153>    BSR.w findxinc                                         ;find include
00037680 <AmiBlitz3.ab2@21154>     BEQ.w 'outb
00037682 <AmiBlitz3.ab2@21156>    MOVE.w D2,-(A7)
00037686 <AmiBlitz3.ab2@21157>    BSR.w addlabel
00037688 <AmiBlitz3.ab2@21158>    MOVE.w (A7)+,D2
0003768E <AmiBlitz3.ab2@21160>    LEA ptr_parameterstore,a1
00037694 <AmiBlitz3.ab2@21161>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00037696 <AmiBlitz3.ab2@21164>     MOVE.b (a0)+,(a1)+
0003769A <AmiBlitz3.ab2@21165>    BNE 'l4b
0003769C <AmiBlitz3.ab2@21167>    MOVE.l (a7)+,d2
000376A2 <AmiBlitz3.ab2@21168>    LEA ptr_parameterstore,a1
000376A6 <AmiBlitz3.ab2@21169> BRA.w JL_0_CB18
000376AC <AmiBlitz3.ab2@21172>    LEA ptr_parameterstore,a1
000376B2 <AmiBlitz3.ab2@21173>    LEA includetemp,a0
000376B4 <AmiBlitz3.ab2@21176>     MOVE.b (a0)+,(a1)+
000376B8 <AmiBlitz3.ab2@21177>    BNE 'l4b2
000376BA <AmiBlitz3.ab2@21179>    MOVE.l (a7)+,d2
000376C0 <AmiBlitz3.ab2@21180>    LEA ptr_parameterstore,a1
000376C2 <AmiBlitz3.ab2@21183> RTS
000376C6 <AmiBlitz3.ab2@21187>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
000376CC <AmiBlitz3.ab2@21189>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
000376D2 <AmiBlitz3.ab2@21191>   MOVEA.l _dosbase,A6
000376D4 <AmiBlitz3.ab2@21192>   MOVE.l D0,D7                                                 ; store Lockpointer
000376D8 <AmiBlitz3.ab2@21193>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
000376DA <AmiBlitz3.ab2@21194>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
000376E0 <AmiBlitz3.ab2@21195>   MOVE.l ptr_macrobuffer_begin,D2
000376E4 <AmiBlitz3.ab2@21196>    JSR _Examine(A6)
000376EA <AmiBlitz3.ab2@21197>   MOVEA.l ptr_macrobuffer_begin,A0
000376EE <AmiBlitz3.ab2@21198>   MOVE.l $4(A0),D0
000376F2 <AmiBlitz3.ab2@21199>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
000376F6 <AmiBlitz3.ab2@21200>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
000376F8 <AmiBlitz3.ab2@21201>   MOVE.l D7,D1                                                 ; begin unlock the file
000376FC <AmiBlitz3.ab2@21202>    JSR _UnLock(A6)
00037702 <AmiBlitz3.ab2@21204>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00037708 <AmiBlitz3.ab2@21205>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
0003770C <AmiBlitz3.ab2@21206>    JSR _Open(A6)
0003770E <AmiBlitz3.ab2@21207>   MOVE.l D0,D7
00037712 <AmiBlitz3.ab2@21208>    BEQ.w error_cant_open_include
00037718 <AmiBlitz3.ab2@21209>   MOVE.l destpointer,D0
0003771A <AmiBlitz3.ab2@21210>   ADD.l D3,D0
00037720 <AmiBlitz3.ab2@21211>   CMP.l destbufferend,D0
00037724 <AmiBlitz3.ab2@21212>    BHI.w JL_0_CAF6
0003772A <AmiBlitz3.ab2@21213>   MOVE.l destpointer,D2
0003772C <AmiBlitz3.ab2@21214>   MOVE.l D7,D1
00037730 <AmiBlitz3.ab2@21215>    JSR _Read(A6)
00037736 <AmiBlitz3.ab2@21216>   CMP.l #$FFFFFFFF,D0
0003773A <AmiBlitz3.ab2@21217>    BEQ.w error_reading_file
00037740 <AmiBlitz3.ab2@21218>   ADD.l D0,destpointer
00037744 <AmiBlitz3.ab2@21219> BRA.w JL_0_CB04
0003774C <AmiBlitz3.ab2@21222>   MOVE.w #$FFFF,dontwrite
00037752 <AmiBlitz3.ab2@21223>   MOVE.l D0,destpointer
00037754 <AmiBlitz3.ab2@21226>   MOVE.l D7,D1
00037758 <AmiBlitz3.ab2@21227> JMP _Close(A6)
0003775E <AmiBlitz3.ab2@21231> JMP illdirerr
00037764 <AmiBlitz3.ab2@21234>   TST.w dirmode                                            ;include  open
00037768 <AmiBlitz3.ab2@21235>    BNE.w JUMP_illdirerr
0003776C <AmiBlitz3.ab2@21236>   BSR.w JL_0_C05C
00037772 <AmiBlitz3.ab2@21237>   JSR check_incdir
00037776 <AmiBlitz3.ab2@21240>   BSR.w findconstant
0003777A <AmiBlitz3.ab2@21241>    BEQ.w alincerr
00037780 <AmiBlitz3.ab2@21243>   LEA constantbase,A2
00037784 <AmiBlitz3.ab2@21244>   BSR.w addhere2
00037788 <AmiBlitz3.ab2@21245>   CLR.w $C(A2)
0003778C <AmiBlitz3.ab2@21246>   CLR.l $4(A2)
00037792 <AmiBlitz3.ab2@21248>   MOVE.l #ptr_parameterstore,D1
00037794 <AmiBlitz3.ab2@21249>   MOVE.l d1,a0
0003779A <AmiBlitz3.ab2@21250>   LEA includetemp2,a1
0003779C <AmiBlitz3.ab2@21253>     MOVE.b (a0)+,(a1)+
000377A0 <AmiBlitz3.ab2@21254>   BNE 'l1
000377A6 <AmiBlitz3.ab2@21255>   JSR save_includename
000377B0 <AmiBlitz3.ab2@21256>   MOVE.l #0,include_process
000377B8 <AmiBlitz3.ab2@21258>   CMP.l #$62623200,-4(a0)                                  ;.bb2
000377BC <AmiBlitz3.ab2@21259>   BEQ 'ok
000377C4 <AmiBlitz3.ab2@21260>   CMP.l #$61623300,-4(a0)                                  ;.ab3
000377C8 <AmiBlitz3.ab2@21261>   BEQ 'ok_tokenize
000377D0 <AmiBlitz3.ab2@21262>   CMP.l #$61623200,-4(a0)                                  ;.ab2
000377D4 <AmiBlitz3.ab2@21263>   BEQ 'ok_tokenize
000377DC <AmiBlitz3.ab2@21264>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
000377E0 <AmiBlitz3.ab2@21265>   BEQ 'ok
000377E6 <AmiBlitz3.ab2@21266> JMP errortoken                                             ;can only include
000377F0 <AmiBlitz3.ab2@21269>    MOVE.l #-1,include_process                              ; must tokenize the include
000377F6 <AmiBlitz3.ab2@21272>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000377FC <AmiBlitz3.ab2@21273>   MOVEA.l _dosbase,A6
00037800 <AmiBlitz3.ab2@21274>   JSR _Open(A6)
00037804 <AmiBlitz3.ab2@21275>   MOVE.l D0,$8(A2)
00037808 <AmiBlitz3.ab2@21276>   BEQ.w error_cant_open_include
0003780E <AmiBlitz3.ab2@21277>   CLR.l includeline
00037812 <AmiBlitz3.ab2@21278>   MOVE.l 8(a2),d1
00037814 <AmiBlitz3.ab2@21279>   MOVE.l d3,-(a7)
00037816 <AmiBlitz3.ab2@21280>   MOVEQ #0,d2
00037818 <AmiBlitz3.ab2@21281>   MOVEQ #1,d3
0003781C <AmiBlitz3.ab2@21282>   JSR _Seek(a6)                                            ; -66
00037820 <AmiBlitz3.ab2@21283>   MOVE.l 8(a2),d1
00037822 <AmiBlitz3.ab2@21284>   MOVEQ #0,d2
00037824 <AmiBlitz3.ab2@21285>   MOVEQ #-1,d3
00037828 <AmiBlitz3.ab2@21286>   JSR _Seek(a6)                                            ; -66
0003782A <AmiBlitz3.ab2@21287>   MOVE.l (a7)+,d3
0003782C <AmiBlitz3.ab2@21288>   ADDQ.l #4,d0
00037832 <AmiBlitz3.ab2@21290>   MOVE.l #$10000,D1
00037838 <AmiBlitz3.ab2@21291>   MOVEA.l _execbase,A6
0003783C <AmiBlitz3.ab2@21294>   JSR _AllocVec(a6)
00037840 <AmiBlitz3.ab2@21296>   MOVE.l D0,$4(A2)
00037844 <AmiBlitz3.ab2@21297>   MOVE.l D0,$E(A2)
00037846 <AmiBlitz3.ab2@21298>   MOVEA.l D0,A5
0003784C <AmiBlitz3.ab2@21305>   ADDQ.w #1,ininclude                                      ;enter include
00037852 <AmiBlitz3.ab2@21308>   LEA _include,a0
00037856 <AmiBlitz3.ab2@21309>   MOVEM.l a0-a6/d0-d7,-(a7)
0003785C <AmiBlitz3.ab2@21310>   LEA ptr_parameterstore,a1
0003785E <AmiBlitz3.ab2@21313>     MOVE.b (a0)+,(a1)+
00037862 <AmiBlitz3.ab2@21314>   BNE 'l1b
00037864 <AmiBlitz3.ab2@21316>   MOVEQ #9,d2
0003786A <AmiBlitz3.ab2@21317>   JSR findlabel2
0003786E <AmiBlitz3.ab2@21318>   BNE 'd
00037876 <AmiBlitz3.ab2@21319>   MOVE.l #1,8(a2)
0003787A <AmiBlitz3.ab2@21320>   MOVEM.l (a7)+,a0-a6/d0-d7
0003787E <AmiBlitz3.ab2@21321> BRA 'd2
00037884 <AmiBlitz3.ab2@21324>   JSR addlabelhash
0003788C <AmiBlitz3.ab2@21325>   MOVE.l #$1,$4(A2)
00037894 <AmiBlitz3.ab2@21326>   MOVE.l #1,8(a2)
00037898 <AmiBlitz3.ab2@21327>   MOVEM.l (a7)+,a0-a6/d0-d7
0003789E <AmiBlitz3.ab2@21330>   LEA inctab,a0
000378A0 <AmiBlitz3.ab2@21331>   MOVEQ #0,d1
000378A6 <AmiBlitz3.ab2@21332>   MOVE.w ininclude,d1
000378AA <AmiBlitz3.ab2@21333>   CLR.l $0(a0,d1*4)
000378B0 <AmiBlitz3.ab2@21334>   MOVEA.l passstack,A7
000378B6 <AmiBlitz3.ab2@21335> JMP AJL_0_413A
000378B8 <AmiBlitz3.ab2@21338> coolnest:   Ds.w 1
000378BC <AmiBlitz3.ab2@21339> macline:    Ds.l 1
000378C6 <AmiBlitz3.ab2@21343>   MOVE.l linenumat,macline
000378CA <AmiBlitz3.ab2@21344>    BSR.w makename2
000378CE <AmiBlitz3.ab2@21345>    BEQ.w JUMP_syntaxerr
000378D4 <AmiBlitz3.ab2@21347>    CLR.b thenmode
000378DE <AmiBlitz3.ab2@21349>    MOVE.w oldqflag,instringon
000378E4 <AmiBlitz3.ab2@21350>   MOVEA.l lastsourcepos,A5
000378E8 <AmiBlitz3.ab2@21351>    BSR.w findmac
000378EC <AmiBlitz3.ab2@21352>    BEQ.w dupmacerr
000378F0 <AmiBlitz3.ab2@21353>    BSR.w addlabel
000378F4 <AmiBlitz3.ab2@21354>   CLR.w $A(A2)
000378FA <AmiBlitz3.ab2@21355>   MOVEA.l ptr_macrobuffer_begin,A0
000378FC <AmiBlitz3.ab2@21356>   MOVEQ.l #$00,D2
00037902 <AmiBlitz3.ab2@21357>   CLR.w coolnest
00037904 <AmiBlitz3.ab2@21360>   MOVE.b (a5),d0
00037908 <AmiBlitz3.ab2@21361>      BEQ 'l3
0003790C <AmiBlitz3.ab2@21362>      CMP.b #" ",d0
00037910 <AmiBlitz3.ab2@21363>       BNE 'l2                                              ;space macro
00037912 <AmiBlitz3.ab2@21364>       ADDQ.l #1,a5
00037916 <AmiBlitz3.ab2@21365> BRA 'l1
0003791A <AmiBlitz3.ab2@21368>    CMP.b #";",d0
0003791E <AmiBlitz3.ab2@21369>       BNE 'l3
00037920 <AmiBlitz3.ab2@21372>    MOVE.b (a5),d0
00037924 <AmiBlitz3.ab2@21373>       BEQ 'l5
00037928 <AmiBlitz3.ab2@21374>       BSR.w JL_0_CC98                                      ;add comment
0003792A <AmiBlitz3.ab2@21375>       ADDQ.l #1,a5
0003792E <AmiBlitz3.ab2@21376> BRA 'l4
00037932 <AmiBlitz3.ab2@21379>    MOVE.b #":",d0
00037936 <AmiBlitz3.ab2@21380>       BSR.w JL_0_CC98
0003793A <AmiBlitz3.ab2@21381>       MOVE.b #"@",d0
0003793E <AmiBlitz3.ab2@21382>       BSR.w JL_0_CC98
00037946 <AmiBlitz3.ab2@21385>    MOVE.b #0,temp
0003794E <AmiBlitz3.ab2@21386>       MOVE.b #0,thenmode
00037954 <AmiBlitz3.ab2@21389>   JSR getcharb
00037956 <AmiBlitz3.ab2@21390>   TST.w D0
0003795A <AmiBlitz3.ab2@21391>    BNE.w JL_0_CBDE
0003795E <AmiBlitz3.ab2@21392>   MOVEM.l D2/A0/A2,-(A7)
00037964 <AmiBlitz3.ab2@21393>   CMP.w #"@@",-3(a5)
00037968 <AmiBlitz3.ab2@21394>   BNE 'l2a
0003796E <AmiBlitz3.ab2@21395>   JSR nextline
00037972 <AmiBlitz3.ab2@21396>   BEQ.w macenderr
00037976 <AmiBlitz3.ab2@21397>   MOVEM.l (A7)+,D2/A0/A2
0003797A <AmiBlitz3.ab2@21398> BRA.w JL_0_CBB6
00037980 <AmiBlitz3.ab2@21401>    JSR nextline
00037984 <AmiBlitz3.ab2@21402>    BEQ.w macenderr
00037988 <AmiBlitz3.ab2@21403>   MOVEM.l (A7)+,D2/A0/A2
0003798A <AmiBlitz3.ab2@21404>   TST.w D2
0003798E <AmiBlitz3.ab2@21405>    BEQ.w JL_0_CBB6
00037990 <AmiBlitz3.ab2@21408>   MOVE.b (a5),d0
00037994 <AmiBlitz3.ab2@21409>       CMP.b #" ",d0
00037998 <AmiBlitz3.ab2@21410>       BNE 'l1
0003799A <AmiBlitz3.ab2@21411>       ADDQ.w #1,a5
0003799E <AmiBlitz3.ab2@21412> BRA 'l2
000379A4 <AmiBlitz3.ab2@21415>   TST.b thenmode
000379A8 <AmiBlitz3.ab2@21416>      BEQ 'l3
000379AA <AmiBlitz3.ab2@21417>      MOVEQ #":",d0
000379AE <AmiBlitz3.ab2@21418>      BSR.w JL_0_CC98
000379B2 <AmiBlitz3.ab2@21419>      MOVE.w #-$7FFE,D0                                     ;write end if
000379B6 <AmiBlitz3.ab2@21420>      BSR macputw
000379BA <AmiBlitz3.ab2@21421>      MOVE.w #$800b,d0
000379BE <AmiBlitz3.ab2@21422>      BSR.w macputw
000379C4 <AmiBlitz3.ab2@21423>      CLR.b thenmode
000379C6 <AmiBlitz3.ab2@21426>    MOVEQ.l #$3A,D0
000379CE <AmiBlitz3.ab2@21427>      MOVE.b #1,temp
000379D2 <AmiBlitz3.ab2@21429> BRA.w JL_0_CC2A
000379D6 <AmiBlitz3.ab2@21433>   BPL.w JL_0_CC2A
000379DA <AmiBlitz3.ab2@21434>   CMP.w #-$7FF3,D0                                         ;macro ?
000379DE <AmiBlitz3.ab2@21435>    BNE.w JL_0_CBF4
000379E4 <AmiBlitz3.ab2@21436>   ADDQ.w #1,coolnest
000379E8 <AmiBlitz3.ab2@21437> BRA.w JL_0_CC22
000379EC <AmiBlitz3.ab2@21440>   CMP.w #$80d7,d0                                          ;object ?
000379F0 <AmiBlitz3.ab2@21441>     BNE 'l1x
000379F6 <AmiBlitz3.ab2@21442>     TST.b objectcount
000379FA <AmiBlitz3.ab2@21443>     BNE macnesterr
000379FE <AmiBlitz3.ab2@21446>   CMP.w #$8021,d0
00037A02 <AmiBlitz3.ab2@21447>     BNE 'nothen
00037A0A <AmiBlitz3.ab2@21448>     MOVE.b #1,thenmode
00037A10 <AmiBlitz3.ab2@21451>   TST.b thenmode
00037A14 <AmiBlitz3.ab2@21452>         BEQ 'l1
00037A18 <AmiBlitz3.ab2@21453>    CMP.w #$8002,d0                                         ;end if
00037A1C <AmiBlitz3.ab2@21454>    BNE 'l1
00037A20 <AmiBlitz3.ab2@21455>    MOVEM.l d0/a5,-(a7)
00037A26 <AmiBlitz3.ab2@21456>    JSR get1bytemain
00037A28 <AmiBlitz3.ab2@21457>    MOVE.w d0,d1
00037A2C <AmiBlitz3.ab2@21458>    MOVEM.l (a7)+,a5/d0
00037A30 <AmiBlitz3.ab2@21459>    CMP.w #$800b,d1
00037A34 <AmiBlitz3.ab2@21460>    BNE 'l1
00037A3A <AmiBlitz3.ab2@21461>    CLR.b thenmode
00037A3E <AmiBlitz3.ab2@21464>    CMP.w #-$7FFE,D0                                        ;end ?
00037A42 <AmiBlitz3.ab2@21465>    BNE.w JL_0_CC22
00037A44 <AmiBlitz3.ab2@21466>    MOVE.l a5,-(a7)
00037A4A <AmiBlitz3.ab2@21467>    JSR get1bytemain
00037A4C <AmiBlitz3.ab2@21468>    MOVE.l (a7)+,a5
00037A4E <AmiBlitz3.ab2@21469>    TST.w d0
00037A52 <AmiBlitz3.ab2@21470>    BEQ 'doend
00037A56 <AmiBlitz3.ab2@21471>    CMP.w #":",d0
00037A5A <AmiBlitz3.ab2@21472>    BEQ 'doend
00037A5E <AmiBlitz3.ab2@21473>    CMP.w #";",d0
00037A62 <AmiBlitz3.ab2@21474>    BEQ 'doend
00037A64 <AmiBlitz3.ab2@21475>    MOVE.l a5,-(a7)
00037A6A <AmiBlitz3.ab2@21476>    JSR get1bytemain
00037A6E <AmiBlitz3.ab2@21477>    MOVE.l -1(a5),d0
00037A70 <AmiBlitz3.ab2@21478>    MOVE.l (a7)+,a5
00037A76 <AmiBlitz3.ab2@21479>    CMP.l #"noa7",d0
00037A7A <AmiBlitz3.ab2@21480>    BEQ 'doend
00037A7E <AmiBlitz3.ab2@21481> BRA 'morechar
00037A82 <AmiBlitz3.ab2@21484>   MOVE.w #$8002,D0
00037A86 <AmiBlitz3.ab2@21485>    BSR.w macputw
00037A8A <AmiBlitz3.ab2@21486> BRA JL_0_CBB6
00037A90 <AmiBlitz3.ab2@21489>   JSR get1bytemain
00037A94 <AmiBlitz3.ab2@21490>    CMP.w #-$7FF3,D0                                        ;end macro
00037A98 <AmiBlitz3.ab2@21491>    BEQ.w 'lo1
00037A9C <AmiBlitz3.ab2@21492>   CMP.w #$80d7,d0                                          ;end object
00037AA0 <AmiBlitz3.ab2@21493>   BNE JL_0_CC12
00037AA6 <AmiBlitz3.ab2@21494>   SUBQ.b #1,objectcount
00037AAC <AmiBlitz3.ab2@21495>   TST.b developobject
00037AB0 <AmiBlitz3.ab2@21496>   BEQ 'lo1
00037AB4 <AmiBlitz3.ab2@21497>   BSR skiprest
00037AB6 <AmiBlitz3.ab2@21498> RTS
00037ABC <AmiBlitz3.ab2@21501>   SUBQ.w #1,coolnest
00037AC0 <AmiBlitz3.ab2@21502>    BMI.w JL_0_CC32
00037AC2 <AmiBlitz3.ab2@21505>   MOVE.w D0,-(A7)
00037AC6 <AmiBlitz3.ab2@21506>   MOVE.w #$8002,D0
00037ACA <AmiBlitz3.ab2@21507>    BSR.w macputw
00037ACC <AmiBlitz3.ab2@21508>   MOVE.w (A7)+,D0
00037AD0 <AmiBlitz3.ab2@21509> BRA.w JL_0_CC22
00037AD4 <AmiBlitz3.ab2@21512>   BSR.w macputw
00037AD8 <AmiBlitz3.ab2@21513> BRA.w JL_0_CBB6
00037ADE <AmiBlitz3.ab2@21516>     CMP.w #"@@",-1(a5)                                     ;merge lines
00037AE2 <AmiBlitz3.ab2@21517>     BNE 'no
00037AE6 <AmiBlitz3.ab2@21518>      MOVEM.l D2/A0/A2,-(A7)
00037AEC <AmiBlitz3.ab2@21519>    JSR nextline
00037AF0 <AmiBlitz3.ab2@21520>    BEQ.w macenderr
00037AF4 <AmiBlitz3.ab2@21521>   MOVEM.l (A7)+,D2/A0/A2
00037AF6 <AmiBlitz3.ab2@21522>     TST.w D2
00037AFA <AmiBlitz3.ab2@21523>    BEQ.w JL_0_CBB6
00037AFE <AmiBlitz3.ab2@21524> BRA JL_0_CBB6
00037B02 <AmiBlitz3.ab2@21527>   BSR.w JL_0_CC98
00037B06 <AmiBlitz3.ab2@21528> BRA.w JL_0_CBB6
00037B08 <AmiBlitz3.ab2@21531>   ADDQ.w #4,A7
00037B0A <AmiBlitz3.ab2@21532>   MOVE.l A0,D0
00037B10 <AmiBlitz3.ab2@21533>   SUB.l ptr_macrobuffer_begin,D0
00037B14 <AmiBlitz3.ab2@21536>    BEQ.w JL_0_CC5E
00037B18 <AmiBlitz3.ab2@21537>   CMPI.b #":",-(A0)
00037B1C <AmiBlitz3.ab2@21538>    BNE.w JL_0_CC5E
00037B20 <AmiBlitz3.ab2@21539>   CMP.w #$1,D0
00037B24 <AmiBlitz3.ab2@21540>    BEQ.w JL_0_CC58
00037B28 <AmiBlitz3.ab2@21541>   TST.b -$1(A0)
00037B2C <AmiBlitz3.ab2@21542>    BMI.w JL_0_CC5E
00037B2E <AmiBlitz3.ab2@21545>   SUBQ.w #1,D0
00037B32 <AmiBlitz3.ab2@21546> BRA.w JL_0_CC3C
00037B36 <AmiBlitz3.ab2@21549>   MOVE.w D0,$8(A2)
00037B3A <AmiBlitz3.ab2@21550>    BEQ.w JL_0_CC8E
00037B3C <AmiBlitz3.ab2@21551>   MOVEQ.l #$01,D1
00037B42 <AmiBlitz3.ab2@21552>   MOVEA.l _execbase,A6
00037B48 <AmiBlitz3.ab2@21553>   MOVE.l mempool,a0
00037B4C <AmiBlitz3.ab2@21554>   JSR _AllocPooled(a6)
00037B4E <AmiBlitz3.ab2@21556>   MOVEA.l D0,A0
00037B52 <AmiBlitz3.ab2@21557>   MOVE.l A0,$4(A2)
00037B56 <AmiBlitz3.ab2@21558>   MOVE.w $8(A2),D1
00037B5A <AmiBlitz3.ab2@21559>    BEQ.w JL_0_CC8E
00037B5C <AmiBlitz3.ab2@21560>   SUBQ.w #1,D1
00037B62 <AmiBlitz3.ab2@21561>   MOVEA.l ptr_macrobuffer_begin,A1
00037B64 <AmiBlitz3.ab2@21564>     MOVE.b (A1)+,(A0)+
00037B68 <AmiBlitz3.ab2@21565>   DBF D1,JL_0_CC88
00037B6E <AmiBlitz3.ab2@21568> JMP get1bytemain
00037B70 <AmiBlitz3.ab2@21572>   MOVE.w D0,D1
00037B72 <AmiBlitz3.ab2@21573>   LSR.w #8,D1
00037B74 <AmiBlitz3.ab2@21574>   MOVE.b D1,(A0)+
00037B76 <AmiBlitz3.ab2@21577>   MOVEQ.l #-$01,D2
00037B78 <AmiBlitz3.ab2@21578>   MOVE.b D0,(A0)+
00037B7E <AmiBlitz3.ab2@21579>   CMPA.l ptr_macrobuffer_end,A0
00037B82 <AmiBlitz3.ab2@21580>    BCC.w macbigerr
00037B84 <AmiBlitz3.ab2@21581> RTS
00037B86 <AmiBlitz3.ab2@21585>   MOVE.l d0,-(a7)
00037B88 <AmiBlitz3.ab2@21586>   MOVEQ #0,d0
00037B8E <AmiBlitz3.ab2@21587>   CLR.b skiptoggle
00037B90 <AmiBlitz3.ab2@21590>     MOVE.b (a5),d0
00037B94 <AmiBlitz3.ab2@21591>     BEQ 'l3
00037B98 <AmiBlitz3.ab2@21592>     CMP.b #";",d0
00037B9C <AmiBlitz3.ab2@21593>     BNE 'l2
00037BA4 <AmiBlitz3.ab2@21594>     MOVE.b #1,skiptoggle
00037BAA <AmiBlitz3.ab2@21597>     TST.b skiptoggle
00037BAE <AmiBlitz3.ab2@21598>     BNE 'l4
00037BB2 <AmiBlitz3.ab2@21599>     CMP.b #":",d0
00037BB6 <AmiBlitz3.ab2@21600>     BEQ 'l3
00037BB8 <AmiBlitz3.ab2@21603>     ADDQ #1,a5
00037BBC <AmiBlitz3.ab2@21604> BRA 'loop
00037BC2 <AmiBlitz3.ab2@21607>   MOVE.w d0,lastchar
00037BC4 <AmiBlitz3.ab2@21608>   MOVE.l (a7)+,d0
00037BC6 <AmiBlitz3.ab2@21609> RTS
00037BCA <AmiBlitz3.ab2@21613>   BSR.w ifchar
00037BCE <AmiBlitz3.ab2@21614>    BNE.w JUMP_syntaxerr
00037BD0 <AmiBlitz3.ab2@21615>   MOVE.w D0,D1
00037BD6 <AmiBlitz3.ab2@21616>   JSR get1bytemain
00037BDA <AmiBlitz3.ab2@21617>   BSR.w ifchar
00037BDE <AmiBlitz3.ab2@21618>    BNE.w JL_0_CCDA
00037BE0 <AmiBlitz3.ab2@21619>   ADDQ.w #1,D0
00037BE2 <AmiBlitz3.ab2@21620>   MOVE.w D0,D2
00037BE4 <AmiBlitz3.ab2@21621>   ADD.w D0,D0
00037BE6 <AmiBlitz3.ab2@21622>   ADD.w D2,D0
00037BE8 <AmiBlitz3.ab2@21623>   ADD.w D0,D1
00037BEA <AmiBlitz3.ab2@21624>   MOVE.w D1,D0
00037BEE <AmiBlitz3.ab2@21625>   ANDI.w #$3,D0
00037BF2 <AmiBlitz3.ab2@21626>   CMP.w #$3,D0
00037BF6 <AmiBlitz3.ab2@21627>    BEQ.w JUMP_syntaxerr
00037BFC <AmiBlitz3.ab2@21629>   JSR get1bytemain
00037BFE <AmiBlitz3.ab2@21632> RTS
00037C00 <AmiBlitz3.ab2@21638> thetst1:  TST.b D0
00037C02 <AmiBlitz3.ab2@21639> thetst2:  TST.w D0
00037C04 <AmiBlitz3.ab2@21640> thetst3:  TST.l D0
00037C06 <AmiBlitz3.ab2@21641> thetst4:  TST.l (A7)+                                      ;Any Length?
00037C0A <AmiBlitz3.ab2@21642> thetst5:  JSR _Reschedule(A6)
00037C0E <AmiBlitz3.ab2@21644> posbr:    BEQ.w posbr
00037C12 <AmiBlitz3.ab2@21645> negbr:    BNE.w negbr
00037C14 <AmiBlitz3.ab2@21649>   MOVEQ.l #-$01,D2
00037C18 <AmiBlitz3.ab2@21650> BRA.w JL_0_D04C
00037C1E <AmiBlitz3.ab2@21654>   CLR.l fp0addr
00037C20 <AmiBlitz3.ab2@21655>   MOVEQ.l #$01,D1                                          ;while flag
00037C22 <AmiBlitz3.ab2@21656>   MOVEQ.l #$00,D2                                          ;negate flag
00037C26 <AmiBlitz3.ab2@21657> BRA.w JL_0_D04E
00037C2C <AmiBlitz3.ab2@21661>   LEA firstrep,A2
00037C2E <AmiBlitz3.ab2@21662>   MOVEQ.l #$08,D2
00037C32 <AmiBlitz3.ab2@21663> BRA.w freeslist
00037C36 <AmiBlitz3.ab2@21667>   LEA firstsel(PC),A2
00037C38 <AmiBlitz3.ab2@21668>   MOVEQ.l #$0E,D2
00037C3A <AmiBlitz3.ab2@21673>   MOVEQ.l #$00,D3
00037C3C <AmiBlitz3.ab2@21681>   MOVE.l (A2),D0
00037C3E <AmiBlitz3.ab2@21682>   CLR.l (A2)
00037C40 <AmiBlitz3.ab2@21683>   MOVEA.l D0,A2
00037C46 <AmiBlitz3.ab2@21684>   MOVEA.l _execbase,A6
00037C4A <AmiBlitz3.ab2@21687>     CMPA.w #$0,A2
00037C4E <AmiBlitz3.ab2@21688>      BEQ.w freelist__done
00037C50 <AmiBlitz3.ab2@21689>     TST.w D3
00037C54 <AmiBlitz3.ab2@21690>      BEQ.w freelist__skip
00037C58 <AmiBlitz3.ab2@21691>     MOVEM.l D2-D3/A2,-(A7)
00037C5A <AmiBlitz3.ab2@21692>     ADDA.w D3,A2
00037C5C <AmiBlitz3.ab2@21693>     MOVE.l D4,D2
00037C60 <AmiBlitz3.ab2@21694>     BSR.w freeslist
00037C64 <AmiBlitz3.ab2@21695>     MOVEM.l (A7)+,D2-D3/A2
00037C66 <AmiBlitz3.ab2@21698>     MOVEA.l A2,A1
00037C68 <AmiBlitz3.ab2@21699>     MOVE.l D2,D0
00037C6A <AmiBlitz3.ab2@21700>     MOVEA.l (A2),A2
00037C70 <AmiBlitz3.ab2@21701>     MOVE.l mempool,a0
00037C74 <AmiBlitz3.ab2@21702>     JSR _FreePooled(A6)
00037C78 <AmiBlitz3.ab2@21703> BRA.w freelist__loop
00037C7A <AmiBlitz3.ab2@21706> RTS
00037C80 <AmiBlitz3.ab2@21709> JMP eselerr
00037C84 <AmiBlitz3.ab2@21712> firstsel:  Ds.l 1
00037C88 <AmiBlitz3.ab2@21715> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00037C8A <AmiBlitz3.ab2@21718> selpushw:   MOVE.w D0,-(A7)
00037C8C <AmiBlitz3.ab2@21720> selpushl:   MOVE.l D0,-(A7)
00037C90 <AmiBlitz3.ab2@21722> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00037C94 <AmiBlitz3.ab2@21725> selcomb:    ANDI.w #$FF,D0
00037C96 <AmiBlitz3.ab2@21726> selcomw:    CMP.w (A7),D0
00037C98 <AmiBlitz3.ab2@21728> selcoml:    CMP.l (A7),D0
00037C9C <AmiBlitz3.ab2@21730> selbne:     BNE.w selbne
00037C9E <AmiBlitz3.ab2@21732> endsel:     ADDQ.w #8,A7
00037CA2 <AmiBlitz3.ab2@21738>   MOVE.l firstsel(PC),D0                                  
00037CA6 <AmiBlitz3.ab2@21739>    BEQ.w JUMP_eselerr
00037CA8 <AmiBlitz3.ab2@21740>   MOVEA.l D0,A2
00037CAC <AmiBlitz3.ab2@21741>    BSR.w JL_0_CDFC
00037CB2 <AmiBlitz3.ab2@21744>   MOVEA.l _execbase,A6
00037CB6 <AmiBlitz3.ab2@21747>   MOVE.l $4(A2),D0
00037CBA <AmiBlitz3.ab2@21748>    BEQ.w doendsel__done
00037CBC <AmiBlitz3.ab2@21749>   MOVEA.l D0,A3
00037CC0 <AmiBlitz3.ab2@21750>   MOVEA.l $4(A3),A0
00037CC6 <AmiBlitz3.ab2@21751>   MOVE.l destpointer,D1
00037CC8 <AmiBlitz3.ab2@21752>   SUB.l A0,D1
00037CCE <AmiBlitz3.ab2@21754>     TST.b fast
00037CD2 <AmiBlitz3.ab2@21755>     BEQ doendsel__loop_l1
00037CD8 <AmiBlitz3.ab2@21756>     MOVE.w dontwrite,D0
00037CDC <AmiBlitz3.ab2@21757>     BNE.w doendsel__skip
00037CDE <AmiBlitz3.ab2@21758>     ADDQ.l #2,d1
00037CE2 <AmiBlitz3.ab2@21759>     MOVE.l d1,-2(a0)
00037CE6 <AmiBlitz3.ab2@21760>   BRA doendsel__skip
00037CEC <AmiBlitz3.ab2@21764>   TST.w dontwrite
00037CF0 <AmiBlitz3.ab2@21765>      BNE.w doendsel__skip
00037CF6 <AmiBlitz3.ab2@21766>   CMP.l #MaxWordSgnd,D1
00037CFA <AmiBlitz3.ab2@21767>    BHI.w JUMP_cbraerr
00037CFC <AmiBlitz3.ab2@21768>   MOVE.w D1,(A0)
00037D00 <AmiBlitz3.ab2@21771>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00037D02 <AmiBlitz3.ab2@21772>   MOVEA.l A3,A1
00037D04 <AmiBlitz3.ab2@21773>   MOVEQ.l #$08,D0
00037D0A <AmiBlitz3.ab2@21774>   MOVE.l mempool,a0
00037D0E <AmiBlitz3.ab2@21775>    JSR _FreePooled(A6)
00037D12 <AmiBlitz3.ab2@21776> BRA.w doendsel__loop
00037D18 <AmiBlitz3.ab2@21779>   JSR popselect                                            ;fix stack on select
00037D1C <AmiBlitz3.ab2@21780>   MOVEA.l firstsel(PC),A1
00037D22 <AmiBlitz3.ab2@21781>   MOVE.l (A1),firstsel
00037D24 <AmiBlitz3.ab2@21782>   MOVEQ.l #$0E,D0
00037D2A <AmiBlitz3.ab2@21783>   MOVEA.l _execbase,A6
00037D30 <AmiBlitz3.ab2@21784>   MOVE.l mempool,a0
00037D34 <AmiBlitz3.ab2@21785>   JSR _FreePooled(A6)
00037D3A <AmiBlitz3.ab2@21786> JMP get1bytemain
00037D3C <AmiBlitz3.ab2@21790>   MOVEA.l (A7)+,A1
00037D3E <AmiBlitz3.ab2@21791>   SUBQ.w #8,A1
00037D40 <AmiBlitz3.ab2@21792>   MOVEQ.l #$09,D0
00037D42 <AmiBlitz3.ab2@21793>   ADD.l (A1),D0
00037D44 <AmiBlitz3.ab2@21796>   ADDQ.w #2,A7                                             ;for runtime errs!
00037D48 <AmiBlitz3.ab2@21801>   MOVE.l firstsel(PC),D0
00037D4C <AmiBlitz3.ab2@21802>    BEQ.w JUMP_defaerr
00037D4E <AmiBlitz3.ab2@21803>   MOVEA.l D0,A2
00037D52 <AmiBlitz3.ab2@21804>   BSR.w JL_0_CE26
00037D56 <AmiBlitz3.ab2@21805>   BSR.w JL_0_CDFC
00037D5A <AmiBlitz3.ab2@21806>   CLR.l $8(A2)
00037D5E <AmiBlitz3.ab2@21807>   MOVE.w $C(A2),D2
00037D62 <AmiBlitz3.ab2@21808> BRA.w JL_0_CE5E
00037D68 <AmiBlitz3.ab2@21811> JMP defaerr
00037D6C <AmiBlitz3.ab2@21814>   MOVE.l $8(A2),D0
00037D70 <AmiBlitz3.ab2@21815>    BEQ.w JL_0_CE24
00037D72 <AmiBlitz3.ab2@21816>   MOVEA.l D0,A0
00037D78 <AmiBlitz3.ab2@21817>   MOVE.l destpointer,D1
00037D7A <AmiBlitz3.ab2@21818>   SUB.l A0,D1
00037D80 <AmiBlitz3.ab2@21820>     TST.b fast
00037D84 <AmiBlitz3.ab2@21821>     BEQ 'l1
00037D8A <AmiBlitz3.ab2@21822>     TST.w dontwrite
00037D8E <AmiBlitz3.ab2@21823>     BNE.w JL_0_CE24
00037D90 <AmiBlitz3.ab2@21824>     ADDQ.l #2,d1
00037D94 <AmiBlitz3.ab2@21825>     MOVE.l D1,-2(A0)
00037D98 <AmiBlitz3.ab2@21826>   BRA JL_0_CE24
00037D9E <AmiBlitz3.ab2@21830>   TST.w dontwrite
00037DA2 <AmiBlitz3.ab2@21831>      BNE.w JL_0_CE24
00037DA8 <AmiBlitz3.ab2@21832>    CMP.l #MaxWordSgnd,D1
00037DAC <AmiBlitz3.ab2@21833>    BHI.w JUMP_cbraerr
00037DAE <AmiBlitz3.ab2@21834>   MOVE.w D1,(A0)
00037DB0 <AmiBlitz3.ab2@21837> RTS
00037DB6 <AmiBlitz3.ab2@21840> JMP cbraerr
00037DBA <AmiBlitz3.ab2@21844>   MOVE.l $8(A2),D0
00037DBE <AmiBlitz3.ab2@21845>    BEQ.w JL_0_CE5C
00037DC0 <AmiBlitz3.ab2@21846>   MOVEA.l D0,A3
00037DC4 <AmiBlitz3.ab2@21847>   MOVE.w #$6000,D1
00037DCA <AmiBlitz3.ab2@21849>    TST.b fast
00037DCE <AmiBlitz3.ab2@21850>    BEQ 'l1
00037DD4 <AmiBlitz3.ab2@21851>    OR.l #$ff,d1
00037DD8 <AmiBlitz3.ab2@21852>    BSR writeword
00037DDC <AmiBlitz3.ab2@21856>   BSR.w writeword
00037DDE <AmiBlitz3.ab2@21857>   MOVEQ.l #$08,D0
00037DE0 <AmiBlitz3.ab2@21858>   MOVEQ.l #$01,D1
00037DE6 <AmiBlitz3.ab2@21859>   MOVEA.l _execbase,A6
00037DEC <AmiBlitz3.ab2@21860>   MOVE.l mempool,a0
00037DF0 <AmiBlitz3.ab2@21861>   JSR _AllocPooled(a6)
00037DF2 <AmiBlitz3.ab2@21863>   MOVEA.l D0,A0
00037DF6 <AmiBlitz3.ab2@21864>   MOVE.l $4(A2),(A0)
00037DFA <AmiBlitz3.ab2@21865>   MOVE.l A0,$4(A2)
00037E02 <AmiBlitz3.ab2@21866>   MOVE.l destpointer,$4(A0)
00037E06 <AmiBlitz3.ab2@21867> BRA.w writeword
00037E08 <AmiBlitz3.ab2@21870> RTS
00037E0E <AmiBlitz3.ab2@21874>   TST.b debugmode
00037E12 <AmiBlitz3.ab2@21875>    BEQ.w JL_0_CE7A
00037E16 <AmiBlitz3.ab2@21876>   MOVE.w #$C313,D1
00037E1A <AmiBlitz3.ab2@21877>   CMP.w #$3,D2
00037E1E <AmiBlitz3.ab2@21878>    BCS.w JL_0_CE76
00037E20 <AmiBlitz3.ab2@21879>   ADDQ.w #1,D1
00037E24 <AmiBlitz3.ab2@21882> BRA.w Atokejsr
00037E26 <AmiBlitz3.ab2@21885> RTS
00037E2C <AmiBlitz3.ab2@21889> JMP caseerr
00037E30 <AmiBlitz3.ab2@21892>   MOVE.l firstsel(PC),D0
00037E34 <AmiBlitz3.ab2@21893>    BEQ.w JUMP_caseerr
00037E36 <AmiBlitz3.ab2@21894>   MOVEA.l D0,A2
00037E3A <AmiBlitz3.ab2@21895>    BSR.w JL_0_CE26
00037E3E <AmiBlitz3.ab2@21896>    BSR.w JL_0_CDFC
00037E42 <AmiBlitz3.ab2@21897>   MOVE.w $C(A2),D2
00037E44 <AmiBlitz3.ab2@21898>   MOVE.w D2,-(A7)
00037E48 <AmiBlitz3.ab2@21899>    BSR.w JL_0_CE5E
00037E4A <AmiBlitz3.ab2@21900>   MOVE.w (A7),D2
00037E4E <AmiBlitz3.ab2@21901>    BSR.w bakeval
00037E50 <AmiBlitz3.ab2@21902>   MOVE.w (A7)+,D2
00037E54 <AmiBlitz3.ab2@21903>   LEA selcomb(PC),A0
00037E58 <AmiBlitz3.ab2@21904>   LEA selcombf(PC),A1
00037E5C <AmiBlitz3.ab2@21905>   CMP.w #$1,D2
00037E60 <AmiBlitz3.ab2@21906>    BEQ.w JL_0_CED8
00037E64 <AmiBlitz3.ab2@21907>   LEA selcomw(PC),A0
00037E68 <AmiBlitz3.ab2@21908>   CMP.w #$2,D2
00037E6C <AmiBlitz3.ab2@21909>    BEQ.w JL_0_CED8
00037E70 <AmiBlitz3.ab2@21910>   LEA selcoml(PC),A0
00037E74 <AmiBlitz3.ab2@21911>   LEA selcomlf(PC),A1
00037E78 <AmiBlitz3.ab2@21912>   CMP.w #$7,D2
00037E7C <AmiBlitz3.ab2@21913>    BCS.w JL_0_CED8
00037E80 <AmiBlitz3.ab2@21915>   MOVE.w #$CE01,D1
00037E84 <AmiBlitz3.ab2@21916>    BSR.w Atokejsr
00037E88 <AmiBlitz3.ab2@21917> BRA.w JL_0_CEDC
00037E8C <AmiBlitz3.ab2@21920>   BSR.w pokecode
00037E90 <AmiBlitz3.ab2@21923>   MOVE.w selbne(PC),D1
00037E96 <AmiBlitz3.ab2@21925>     TST.b fast
00037E9A <AmiBlitz3.ab2@21926>     BEQ 'l1
00037EA0 <AmiBlitz3.ab2@21927>     ORI.l #$ff,d1
00037EA4 <AmiBlitz3.ab2@21928>     BSR writeword
00037EA8 <AmiBlitz3.ab2@21931>   BSR.w writeword
00037EAC <AmiBlitz3.ab2@21932>   MOVEA.l firstsel(PC),A0
00037EB4 <AmiBlitz3.ab2@21933>   MOVE.l destpointer,$8(A0)
00037EB8 <AmiBlitz3.ab2@21934> BRA.w writeword
00037EBC <AmiBlitz3.ab2@21938> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00037EBE <AmiBlitz3.ab2@21939> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00037EC2 <AmiBlitz3.ab2@21942> sellineat:  Ds.l 1
00037EC8 <AmiBlitz3.ab2@21948>   TST.b debugmode
00037ECC <AmiBlitz3.ab2@21949>    BEQ.w JL_0_CF0E
00037ED0 <AmiBlitz3.ab2@21950>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00037ED4 <AmiBlitz3.ab2@21951>    BSR.w writelong
00037EDE <AmiBlitz3.ab2@21954>   MOVE.l linenumat,sellineat
00037EE8 <AmiBlitz3.ab2@21956>    MOVE.l destpointer,pushpc
00037EF2 <AmiBlitz3.ab2@21957>   MOVE.l hunkoffsetbase,pushoff
00037EF4 <AmiBlitz3.ab2@21958>   MOVEQ.l #$00,D2
00037EF8 <AmiBlitz3.ab2@21959>    BSR.w bakevalu                                          ;Evaluate
00037EFC <AmiBlitz3.ab2@21960>    BSR.w JL_0_B5D2
00037F00 <AmiBlitz3.ab2@21961>   CMP.w #$7,D2
00037F04 <AmiBlitz3.ab2@21962>    BNE.w JL_0_CF36
00037F08 <AmiBlitz3.ab2@21963>   MOVE.w clrst(PC),D1
00037F0C <AmiBlitz3.ab2@21964>    BSR.w writeword
00037F10 <AmiBlitz3.ab2@21967>    BSR.w JL_0_B63C
00037F14 <AmiBlitz3.ab2@21968>   LEA selpushb(PC),A0
00037F18 <AmiBlitz3.ab2@21969>   LEA selpushbf(PC),A1
00037F1C <AmiBlitz3.ab2@21970>   CMP.w #$1,D2
00037F20 <AmiBlitz3.ab2@21971>    BEQ.w JL_0_CF88
00037F24 <AmiBlitz3.ab2@21972>   LEA selpushw(PC),A0
00037F28 <AmiBlitz3.ab2@21973>   CMP.w #$2,D2
00037F2C <AmiBlitz3.ab2@21974>    BEQ.w JL_0_CF88
00037F30 <AmiBlitz3.ab2@21975>   LEA selpushl(PC),A0
00037F34 <AmiBlitz3.ab2@21976>   LEA selpushlf(PC),A1
00037F38 <AmiBlitz3.ab2@21977>   CMP.w #$7,D2
00037F3C <AmiBlitz3.ab2@21978>    BCS.w JL_0_CF88
00037F42 <AmiBlitz3.ab2@21980>   MOVE.w moved0a3,D1                                       ;d0 to a3!
00037F46 <AmiBlitz3.ab2@21981>    BSR.w writeword
00037F4A <AmiBlitz3.ab2@21982>   LEA selpushs(PC),A0
00037F4E <AmiBlitz3.ab2@21983>   LEA selpushsf(PC),A1
00037F52 <AmiBlitz3.ab2@21984>    BSR.w pokecode
00037F56 <AmiBlitz3.ab2@21985>   MOVE.w #$C701,D1
00037F5A <AmiBlitz3.ab2@21986>    BSR.w Atokejsr
00037F5E <AmiBlitz3.ab2@21987> BRA.w JL_0_CF8C
00037F62 <AmiBlitz3.ab2@21990>   BSR.w pokecode
00037F64 <AmiBlitz3.ab2@21993>   MOVEQ.l #$0E,D0
00037F66 <AmiBlitz3.ab2@21994>   MOVEQ.l #$01,D1
00037F6C <AmiBlitz3.ab2@21995>   MOVEA.l _execbase,A6
00037F72 <AmiBlitz3.ab2@21997>   MOVE.l mempool,a0
00037F76 <AmiBlitz3.ab2@21998>   JSR _AllocPooled(a6)
00037F78 <AmiBlitz3.ab2@21999>   MOVEA.l D0,A0
00037F7C <AmiBlitz3.ab2@22000>   MOVE.l firstsel(PC),(A0)
00037F82 <AmiBlitz3.ab2@22001>   MOVE.l A0,firstsel
00037F86 <AmiBlitz3.ab2@22002>   CLR.l $4(A0)
00037F8A <AmiBlitz3.ab2@22003>   CLR.l $8(A0)
00037F8E <AmiBlitz3.ab2@22004>   MOVE.w D2,$C(A0)
00037F90 <AmiBlitz3.ab2@22005> RTS
00037F96 <AmiBlitz3.ab2@22009>   MOVE.l firstrep,D0
00037F9A <AmiBlitz3.ab2@22010>    BEQ.w JUMP_unterr1
00037F9E <AmiBlitz3.ab2@22011>   MOVE.w #$6000,D1
00037FA2 <AmiBlitz3.ab2@22012>   BSR.w writeword
00037FA4 <AmiBlitz3.ab2@22013>   MOVEA.l D0,A0
00037FA8 <AmiBlitz3.ab2@22014>   MOVE.l $4(A0),D1
00037FAE <AmiBlitz3.ab2@22015>   SUB.l destpointer,D1
00037FB0 <AmiBlitz3.ab2@22016>   TST.w D1
00037FB4 <AmiBlitz3.ab2@22017>    BPL.w JUMP_unterr2
00037FB8 <AmiBlitz3.ab2@22018>   BSR.w writeword
00037FBE <AmiBlitz3.ab2@22019>   MOVEA.l _execbase,A6
00037FC2 <AmiBlitz3.ab2@22020> BRA.w JL_0_D036
00037FC8 <AmiBlitz3.ab2@22023> JMP unterr2
00037FCE <AmiBlitz3.ab2@22026> JMP unterr1
00037FD4 <AmiBlitz3.ab2@22030>   MOVE.l firstrep,D0
00037FD8 <AmiBlitz3.ab2@22031>    BEQ.w JUMP_unterr1
00037FDC <AmiBlitz3.ab2@22032>   BSR.w do_if
00037FE2 <AmiBlitz3.ab2@22033>   JSR reget
00037FE6 <AmiBlitz3.ab2@22034>    BNE.w JUMP_syntaxerr
00037FEC <AmiBlitz3.ab2@22035>   MOVE.w dontwrite,D1
00037FF0 <AmiBlitz3.ab2@22036>    BNE.w JL_0_D020
00037FF6 <AmiBlitz3.ab2@22037>   MOVEA.l firstrep,A0
00037FFC <AmiBlitz3.ab2@22038>   MOVEA.l destpointer,A1
00038002 <AmiBlitz3.ab2@22040>     TST.b fast
00038006 <AmiBlitz3.ab2@22041>     BEQ 'l1
00038008 <AmiBlitz3.ab2@22042>     SUBQ.w #4,a1
0003800C <AmiBlitz3.ab2@22043>     MOVE.l $4(A0),D2
0003800E <AmiBlitz3.ab2@22044>     SUB.l A1,D2
00038010 <AmiBlitz3.ab2@22045>     MOVE.l d2,(a1)
00038014 <AmiBlitz3.ab2@22046>   BRA JL_0_D020
00038016 <AmiBlitz3.ab2@22050>   SUBQ.w #2,A1
0003801A <AmiBlitz3.ab2@22051>   MOVE.l $4(A0),D2
0003801C <AmiBlitz3.ab2@22052>   SUB.l A1,D2
0003801E <AmiBlitz3.ab2@22053>   TST.w D2
00038022 <AmiBlitz3.ab2@22054>    BPL.w JUMP_unterr2
00038024 <AmiBlitz3.ab2@22055>   MOVE.w D2,(A1)
0003802A <AmiBlitz3.ab2@22058>   MOVEA.l firstiff,A1
00038030 <AmiBlitz3.ab2@22059>   MOVE.l (A1),firstiff
00038032 <AmiBlitz3.ab2@22060>   MOVEQ.l #$0E,D0
00038038 <AmiBlitz3.ab2@22061>   MOVEA.l _execbase,A6
0003803E <AmiBlitz3.ab2@22062>   MOVE.l mempool,a0
00038042 <AmiBlitz3.ab2@22063>   JSR _FreePooled(A6)
00038048 <AmiBlitz3.ab2@22066>   MOVEA.l firstrep,A1
0003804E <AmiBlitz3.ab2@22067>   MOVE.l (A1),firstrep
00038050 <AmiBlitz3.ab2@22068>   MOVEQ.l #$08,D0
00038056 <AmiBlitz3.ab2@22069>   MOVE.l mempool,a0
0003805A <AmiBlitz3.ab2@22070> JMP _FreePooled(A6)
0003805E <AmiBlitz3.ab2@22073> iflineat:   Ds.l 1
00038060 <AmiBlitz3.ab2@22077>   MOVEQ.l #$00,D2
00038066 <AmiBlitz3.ab2@22078>   TST.b fast
0003806A <AmiBlitz3.ab2@22079>   BEQ 'l1
00038072 <AmiBlitz3.ab2@22080>   MOVE.b #1,nostringopt
0003807A <AmiBlitz3.ab2@22081>   MOVE.b #1,iniffcommand
0003807C <AmiBlitz3.ab2@22085>   MOVEQ.l #$00,D1
0003807E <AmiBlitz3.ab2@22088>   MOVE.w D1,-(A7)
00038084 <AmiBlitz3.ab2@22089>   MOVE.l destpointer,-(A7)
00038086 <AmiBlitz3.ab2@22090>   MOVE.w D2,-(A7)
00038090 <AmiBlitz3.ab2@22091>   MOVE.l linenumat,iflineat
00038092 <AmiBlitz3.ab2@22092>   MOVEQ.l #$00,D2
0003809C <AmiBlitz3.ab2@22093>   MOVE.b optistring,optistring2
000380A4 <AmiBlitz3.ab2@22094>   MOVE.b #1,optistring
000380A8 <AmiBlitz3.ab2@22095>   BSR.w bakevalu
000380B2 <AmiBlitz3.ab2@22096>   MOVE.b optistring2,optistring
000380B6 <AmiBlitz3.ab2@22097>   CMP.w #$5,D2
000380BA <AmiBlitz3.ab2@22098>    BEQ.w JL_0_D09C
000380BE <AmiBlitz3.ab2@22099>   MOVE.w thetst1(PC),D1
000380C2 <AmiBlitz3.ab2@22100>   CMP.w #$1,D2
000380C6 <AmiBlitz3.ab2@22101>    BEQ.w writebranchcode
000380CA <AmiBlitz3.ab2@22102>   MOVE.w thetst2(PC),D1
000380CE <AmiBlitz3.ab2@22103>   CMP.w #$2,D2
000380D2 <AmiBlitz3.ab2@22104>    BEQ.w writebranchcode
000380D6 <AmiBlitz3.ab2@22105>   MOVE.w thetst4(PC),D1
000380DA <AmiBlitz3.ab2@22106>   CMP.w #$7,D2
000380DE <AmiBlitz3.ab2@22107>    BEQ.w writebranchcode
000380E2 <AmiBlitz3.ab2@22108>   MOVE.w thetst3(PC),D1
000380E6 <AmiBlitz3.ab2@22109> BRA.w writebranchcode
000380EC <AmiBlitz3.ab2@22112>   TST.b fpu
000380F0 <AmiBlitz3.ab2@22113>   BEQ 'dofpu
000380F6 <AmiBlitz3.ab2@22114>   MOVE.l #$f200003a,d1
000380FA <AmiBlitz3.ab2@22115>   BSR writelong
000380FE <AmiBlitz3.ab2@22116>   MOVE.w #$f2c1,d1
00038102 <AmiBlitz3.ab2@22117>   BSR writeword
00038106 <AmiBlitz3.ab2@22118>   BSR writelong
00038108 <AmiBlitz3.ab2@22119>   ADDQ.l #2,a7
0003810C <AmiBlitz3.ab2@22120> BRA.w br2
00038110 <AmiBlitz3.ab2@22123>    MOVE.w #$C900,D1
00038114 <AmiBlitz3.ab2@22124>    BSR.w Atokejsr
00038118 <AmiBlitz3.ab2@22125>   MOVE.l thetst5(PC),D1
0003811C <AmiBlitz3.ab2@22126>    BSR.w writelong
00038120 <AmiBlitz3.ab2@22127> BRA.w JL_0_D0B4
00038126 <AmiBlitz3.ab2@22131>          CLR.b iniffcommand
0003812C <AmiBlitz3.ab2@22132>          TST.b fast                                        ;branchcode
00038130 <AmiBlitz3.ab2@22133>          BEQ b6
00038136 <AmiBlitz3.ab2@22134>          TST.b fpu
0003813A <AmiBlitz3.ab2@22135>          BEQ 'nofpu
00038140 <AmiBlitz3.ab2@22139>           MOVE.l destpointer,a0
00038146 <AmiBlitz3.ab2@22140>          SUB.l load_var_addr,a0
0003814C <AmiBlitz3.ab2@22141>          CMP.l #4,a0
00038150 <AmiBlitz3.ab2@22142>          BEQ 'nofpu
00038158 <AmiBlitz3.ab2@22143>          CMP.l #$f2400014,-4(a4)                           ;<
0003815C <AmiBlitz3.ab2@22144>          BNE 'nolt
00038162 <AmiBlitz3.ab2@22145>          SUBQ.l #2,destpointer
00038168 <AmiBlitz3.ab2@22146>          MOVE.w #$f293,-4(a4)                              ;
0003816C <AmiBlitz3.ab2@22147> BRA 'brf
00038174 <AmiBlitz3.ab2@22150>   CMP.l #$f2400015,-4(a4)                                  ;<=
00038178 <AmiBlitz3.ab2@22151>          BNE 'nole
0003817E <AmiBlitz3.ab2@22152>          SUBQ.l #2,destpointer
00038184 <AmiBlitz3.ab2@22153>          MOVE.w #$f292,-4(a4)
00038188 <AmiBlitz3.ab2@22154> BRA 'brf
00038190 <AmiBlitz3.ab2@22157>   CMP.l #$f2400013,-4(a4)                                  ;=>
00038194 <AmiBlitz3.ab2@22158>          BNE 'noge
0003819A <AmiBlitz3.ab2@22159>          SUBQ.l #2,destpointer
000381A0 <AmiBlitz3.ab2@22160>          MOVE.w #$f294,-4(a4)
000381A4 <AmiBlitz3.ab2@22161> BRA 'brf
000381AC <AmiBlitz3.ab2@22164>   CMP.l #$f2400012,-4(a4)                                  ;>
000381B0 <AmiBlitz3.ab2@22165>          BNE 'nogt
000381B6 <AmiBlitz3.ab2@22166>          SUBQ.l #2,destpointer
000381BC <AmiBlitz3.ab2@22167>          MOVE.w #$f295,-4(a4)
000381C0 <AmiBlitz3.ab2@22168> BRA 'brf
000381C8 <AmiBlitz3.ab2@22171>   CMP.l #$f2400001,-4(a4)                                  ;=
000381CC <AmiBlitz3.ab2@22172>          BNE 'noeq
000381D2 <AmiBlitz3.ab2@22173>          SUBQ.l #2,destpointer
000381D8 <AmiBlitz3.ab2@22174>          MOVE.w #$f28e,-4(a4)
000381DC <AmiBlitz3.ab2@22175> BRA 'brf
000381E4 <AmiBlitz3.ab2@22178>   CMP.l #$f240000e,-4(a4)                                  ;<>
000381E8 <AmiBlitz3.ab2@22179>          BNE 'none
000381EE <AmiBlitz3.ab2@22180>          SUBQ.l #2,destpointer
000381F4 <AmiBlitz3.ab2@22181>          MOVE.w #$f281,-4(a4)
000381F6 <AmiBlitz3.ab2@22184>   ADDQ.l #2,a7
000381FC <AmiBlitz3.ab2@22186>     TST.b fast
00038200 <AmiBlitz3.ab2@22187>     BEQ 'l1
00038206 <AmiBlitz3.ab2@22188>     OR.b #$40,-3(a4)
0003820A <AmiBlitz3.ab2@22189>     BSR writeword
0003820E <AmiBlitz3.ab2@22193>  BSR writeword
00038212 <AmiBlitz3.ab2@22194> BRA.s br2
00038218 <AmiBlitz3.ab2@22198>   MOVE.l destpointer,a0
0003821E <AmiBlitz3.ab2@22199>          SUB.l load_var_addr,a0
00038224 <AmiBlitz3.ab2@22200>          CMP.l #4,a0
00038228 <AmiBlitz3.ab2@22201>          BEQ JL_0_D0B4
0003822E <AmiBlitz3.ab2@22202>          CMP.w #$4eb9,-6(a4)
00038232 <AmiBlitz3.ab2@22203>          BEQ b6
00038238 <AmiBlitz3.ab2@22204>          CMP.w #$5ec0,-2(a4)                               ;>
0003823C <AmiBlitz3.ab2@22205>      BNE.s 'lb1
00038242 <AmiBlitz3.ab2@22206>          MOVE.w #$6f00,-2(a4)                              ;ble
00038246 <AmiBlitz3.ab2@22207> BRA.s br
0003824C <AmiBlitz3.ab2@22210>  CMP.w #$5dc0,-2(a4)                                       ;<
00038250 <AmiBlitz3.ab2@22211>   BNE.s 'lb2
00038256 <AmiBlitz3.ab2@22212>          MOVE.w #$6c00,-2(a4)                              ;bge
0003825A <AmiBlitz3.ab2@22213> BRA.s br
00038260 <AmiBlitz3.ab2@22216>   CMP.w #$57c0,-2(a4)                                      ;=
00038264 <AmiBlitz3.ab2@22217>   BNE.s 'lb3
0003826A <AmiBlitz3.ab2@22218>          MOVE.w #$6600,-2(a4)                              ;bne
0003826E <AmiBlitz3.ab2@22219> BRA.s br
00038274 <AmiBlitz3.ab2@22222>   CMP.w #$56c0,-2(a4)                                      ;<>
00038278 <AmiBlitz3.ab2@22223>   BNE.s 'lb4
0003827E <AmiBlitz3.ab2@22224>          MOVE.w #$6700,-2(a4)                              ;beq
00038282 <AmiBlitz3.ab2@22225> BRA.s br
00038288 <AmiBlitz3.ab2@22228>   CMP.w #$5cc0,-2(a4)                                      ;>=
0003828C <AmiBlitz3.ab2@22229>   BNE.s 'lb5
00038292 <AmiBlitz3.ab2@22230>          MOVE.w #$6d00,-2(a4)                              ;blt
00038296 <AmiBlitz3.ab2@22231> BRA.s br
0003829C <AmiBlitz3.ab2@22234>   CMP.w #$5fc0,-2(a4)                                      ;<=
000382A0 <AmiBlitz3.ab2@22235>         BNE.s b6
000382A6 <AmiBlitz3.ab2@22236>          MOVE.w #$6e00,-2(a4)                              ;bgt
000382A8 <AmiBlitz3.ab2@22239>   TST.w (a7)+
000382AE <AmiBlitz3.ab2@22241>         TST.b fast
000382B2 <AmiBlitz3.ab2@22242>         BEQ 'l1
000382B8 <AmiBlitz3.ab2@22243>         OR.b #$ff,-1(a4)                                   ;long branches
000382BC <AmiBlitz3.ab2@22244>         BSR writeword
000382C0 <AmiBlitz3.ab2@22248>         BSR writeword
000382C4 <AmiBlitz3.ab2@22249> BRA.s br2
000382C8 <AmiBlitz3.ab2@22252>   BSR.w writeword
000382CC <AmiBlitz3.ab2@22255>   MOVE.l posbr(PC),D1
000382CE <AmiBlitz3.ab2@22256>   TST.w (A7)+
000382D2 <AmiBlitz3.ab2@22257>    BEQ.w JL_0_D0C2
000382D6 <AmiBlitz3.ab2@22258>   MOVE.l negbr(PC),D1
000382DC <AmiBlitz3.ab2@22261>   TST.b fast
000382E0 <AmiBlitz3.ab2@22262>            BEQ 'l1
000382E6 <AmiBlitz3.ab2@22263>            OR.l #$00ff0000,d1
000382EA <AmiBlitz3.ab2@22264>            BSR writelong
000382EE <AmiBlitz3.ab2@22265>            BSR writeword
000382F2 <AmiBlitz3.ab2@22266> BRA br2
000382F6 <AmiBlitz3.ab2@22269>   BSR.w writelong
000382F8 <AmiBlitz3.ab2@22272>  MOVEQ.l #$0E,D0
000382FA <AmiBlitz3.ab2@22273>   MOVEQ.l #$01,D1
00038300 <AmiBlitz3.ab2@22274>   MOVEA.l _execbase,A6
00038306 <AmiBlitz3.ab2@22276>   MOVE.l mempool,a0
0003830A <AmiBlitz3.ab2@22277>   JSR _AllocPooled(a6)
0003830C <AmiBlitz3.ab2@22278>   MOVEA.l D0,A0
00038312 <AmiBlitz3.ab2@22279>   MOVE.l firstiff,(A0)
00038318 <AmiBlitz3.ab2@22280>   MOVE.l A0,firstiff
0003831C <AmiBlitz3.ab2@22281>   MOVE.l (A7)+,$4(A0)
00038324 <AmiBlitz3.ab2@22282>   MOVE.l destpointer,$8(A0)
00038328 <AmiBlitz3.ab2@22283>   MOVE.w (A7)+,$C(A0)
0003832E <AmiBlitz3.ab2@22284>    JSR reget
00038332 <AmiBlitz3.ab2@22285>    BEQ.w JL_0_D10C
00038338 <AmiBlitz3.ab2@22286>   BSET #$7,$C(A0)
00038342 <AmiBlitz3.ab2@22290>   MOVE.w oldqflag,instringon
00038348 <AmiBlitz3.ab2@22291>   MOVEA.l lastsourcepos,A5
00038350 <AmiBlitz3.ab2@22292>   MOVE.w #$003A,lastchar
00038352 <AmiBlitz3.ab2@22295> RTS
00038356 <AmiBlitz3.ab2@22299>   CMP.w #$1,D0
0003835A <AmiBlitz3.ab2@22300>    BLT.w JL_0_D128
0003835E <AmiBlitz3.ab2@22301>   CMP.w #$0,D0
00038362 <AmiBlitz3.ab2@22302>    BGT.w JL_0_D128
00038364 <AmiBlitz3.ab2@22303>   ADD.w D0,D0
00038366 <AmiBlitz3.ab2@22304>   ADD.w D0,D0
0003836A <AmiBlitz3.ab2@22305>   MOVEA.l JL_0_D128(PC,D0.W),A0
0003836C <AmiBlitz3.ab2@22308> JMP (A0)
00038370 <AmiBlitz3.ab2@22311> BRA.w JL_0_D128
00038374 <AmiBlitz3.ab2@22315>   CMP.w #$1,D0
00038378 <AmiBlitz3.ab2@22316>    BLT.w JL_0_D146
0003837C <AmiBlitz3.ab2@22317>   CMP.w #$0,D0
00038380 <AmiBlitz3.ab2@22318>    BGT.w JL_0_D146
00038382 <AmiBlitz3.ab2@22319>   ADD.w D0,D0
00038384 <AmiBlitz3.ab2@22320>   ADD.w D0,D0
00038388 <AmiBlitz3.ab2@22321>   MOVEA.l JL_0_D146(PC,D0.W),A0
0003838A <AmiBlitz3.ab2@22324>   JSR (A0)
0003838E <AmiBlitz3.ab2@22327> BRA.w JL_0_D146
00038392 <AmiBlitz3.ab2@22331>   CMP.w #$1,D0
00038396 <AmiBlitz3.ab2@22332>    BLT.w JL_0_D168
0003839A <AmiBlitz3.ab2@22333>   CMP.w #$0,D0
0003839E <AmiBlitz3.ab2@22334>    BGT.w JL_0_D168
000383A0 <AmiBlitz3.ab2@22335>   ADD.w D0,D0
000383A2 <AmiBlitz3.ab2@22336>   ADD.w D0,D0
000383A6 <AmiBlitz3.ab2@22337>   MOVEA.l JL_0_D168(PC,D0.W),A0
000383AA <AmiBlitz3.ab2@22340>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
000383AC <AmiBlitz3.ab2@22343>    JSR (A0)
000383B0 <AmiBlitz3.ab2@22346> BRA.w JL_0_D168
000383B2 <AmiBlitz3.ab2@22349> labcnt:   Ds.w 1
000383B4 <AmiBlitz3.ab2@22356>   MOVEQ.l #$02,D2
000383B8 <AmiBlitz3.ab2@22357>    BSR.w bakeval
000383BC <AmiBlitz3.ab2@22358>   LEA JL_0_D10E(PC),A0
000383C0 <AmiBlitz3.ab2@22359>   LEA JL_0_D12C(PC),A1
000383C4 <AmiBlitz3.ab2@22360>   MOVE.w #$001A,D1
000383C8 <AmiBlitz3.ab2@22361>   CMP.w #-$7FFB,D0
000383CC <AmiBlitz3.ab2@22362>    BEQ.w JL_0_D1B6
000383D0 <AmiBlitz3.ab2@22363>   CMP.w #-$7FFA,D0
000383D4 <AmiBlitz3.ab2@22364>    BNE.w JUMP_syntaxerr
000383D8 <AmiBlitz3.ab2@22365>   LEA JL_0_D12C(PC),A0
000383DC <AmiBlitz3.ab2@22366>   LEA JL_0_D14A(PC),A1
000383E0 <AmiBlitz3.ab2@22367>   MOVE.w #$001A,D1
000383E6 <AmiBlitz3.ab2@22368>   TST.b debugmode
000383EA <AmiBlitz3.ab2@22369>    BEQ.b JL_0_D1B6
000383F0 <AmiBlitz3.ab2@22370>    JSR chkstak
000383F4 <AmiBlitz3.ab2@22371>   LEA JL_0_D14A(PC),A0
000383F8 <AmiBlitz3.ab2@22372>   LEA labcnt(PC),A1
000383FC <AmiBlitz3.ab2@22373>   MOVE.w #$001E,D1
000383FE <AmiBlitz3.ab2@22376>   MOVE.w D1,-(A7)
00038404 <AmiBlitz3.ab2@22377>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00038408 <AmiBlitz3.ab2@22378>    BSR.w pokecode
0003840E <AmiBlitz3.ab2@22379>   CLR.w labcnt
00038414 <AmiBlitz3.ab2@22384>    JSR get1bytemain
0003841A <AmiBlitz3.ab2@22385>   SUBQ.l #2,destpointer                                    ;for makealab!
0003841E <AmiBlitz3.ab2@22386>    BSR.w JL_0_AE22
00038424 <AmiBlitz3.ab2@22387>   ADDQ.l #2,destpointer
0003842A <AmiBlitz3.ab2@22388>    JSR addoff
0003842E <AmiBlitz3.ab2@22389>   MOVE.l $8(A2),D1
00038432 <AmiBlitz3.ab2@22390>    BSR.w writelong
00038438 <AmiBlitz3.ab2@22391>   ADDQ.w #1,labcnt
0003843E <AmiBlitz3.ab2@22392>    JSR reget
00038442 <AmiBlitz3.ab2@22393>   CMP.w #$2C,D0
00038446 <AmiBlitz3.ab2@22394>    BEQ.w JL_0_D1C8
00038448 <AmiBlitz3.ab2@22395>   MOVEA.l (A7)+,A0
0003844A <AmiBlitz3.ab2@22396>   MOVE.w (A7)+,D2
00038450 <AmiBlitz3.ab2@22397>   MOVE.w dontwrite,D1
00038454 <AmiBlitz3.ab2@22398>    BNE.w JL_0_D21A
00038458 <AmiBlitz3.ab2@22399>   MOVE.w labcnt(PC),D1
0003845C <AmiBlitz3.ab2@22400>   MOVE.w D1,$A(A0)
0003845E <AmiBlitz3.ab2@22401>   ADD.w D1,D1
00038460 <AmiBlitz3.ab2@22402>   ADD.w D1,D1
00038462 <AmiBlitz3.ab2@22403>   ADDQ.w #2,D1
00038466 <AmiBlitz3.ab2@22404>   MOVE.w D1,$2(A0,D2.W)
00038468 <AmiBlitz3.ab2@22407> RTS
0003846E <AmiBlitz3.ab2@22411>   TST.b debugmode
00038472 <AmiBlitz3.ab2@22412>    BEQ.w JL_0_D236
00038478 <AmiBlitz3.ab2@22413>    JSR chkstak
0003847E <AmiBlitz3.ab2@22414>   MOVE.l AL_0_D162,D1
00038482 <AmiBlitz3.ab2@22415>    BSR.w writelong
00038488 <AmiBlitz3.ab2@22417>   MOVE.w gosubcode,D1
0003848C <AmiBlitz3.ab2@22418> BRA.w JL_0_D246
00038492 <AmiBlitz3.ab2@22422>   MOVE.w gotocode,D1
00038494 <AmiBlitz3.ab2@22425>   MOVE.w D1,-(A7)
00038498 <AmiBlitz3.ab2@22426>    BSR.w JL_0_AE22
0003849A <AmiBlitz3.ab2@22427>   MOVE.w (A7)+,D1
0003849E <AmiBlitz3.ab2@22428>    BSR.w writeword
000384A4 <AmiBlitz3.ab2@22429>    JSR addoff
000384A8 <AmiBlitz3.ab2@22430>   MOVE.l $8(A2),D1
000384AC <AmiBlitz3.ab2@22431> BRA.w writelong
000384B2 <AmiBlitz3.ab2@22435>   MOVE.w proceduremode,D1
000384B6 <AmiBlitz3.ab2@22436>    BEQ.w JUMP_badpenderr
000384BA <AmiBlitz3.ab2@22437>   MOVE.w #$4EF9,D1
000384BE <AmiBlitz3.ab2@22438>    BSR.w writeword
000384C4 <AmiBlitz3.ab2@22439>    JSR addoff
000384CA <AmiBlitz3.ab2@22440>   MOVEA.l _execbase,A6
000384CC <AmiBlitz3.ab2@22441>   MOVEQ.l #$08,D0
000384CE <AmiBlitz3.ab2@22442>   MOVEQ.l #$01,D1
000384D4 <AmiBlitz3.ab2@22444>   MOVE.l mempool,a0
000384D8 <AmiBlitz3.ab2@22445>   JSR _AllocPooled(a6)
000384DA <AmiBlitz3.ab2@22446>   MOVEA.l D0,A0
000384E0 <AmiBlitz3.ab2@22447>   MOVE.l firstpend,(A0)
000384E6 <AmiBlitz3.ab2@22448>   MOVE.l A0,firstpend
000384EE <AmiBlitz3.ab2@22449>   MOVE.l destpointer,$4(A0)
000384F2 <AmiBlitz3.ab2@22450> BRA.w writelong
000384F6 <AmiBlitz3.ab2@22454>   BSR.w do_AsmExit
000384FC <AmiBlitz3.ab2@22455> JMP get1bytemain
00038504 <AmiBlitz3.ab2@22459>   MOVE.b #1,nostringopt
0003850A <AmiBlitz3.ab2@22460>   MOVEA.l currentfunction,A0
00038510 <AmiBlitz3.ab2@22461>   CMP.l #0,a0
00038514 <AmiBlitz3.ab2@22462>   BNE 'l1
0003851A <AmiBlitz3.ab2@22463>   JMP errorasmexit
0003851C <AmiBlitz3.ab2@22464> 'l1 MOVEQ.l #$00,D2
00038520 <AmiBlitz3.ab2@22465>   MOVE.b $5(A0),D2
00038524 <AmiBlitz3.ab2@22466>   BSR.w eval
00038528 <AmiBlitz3.ab2@22467> BRA.w do_AsmExit
0003852E <AmiBlitz3.ab2@22481>   TST.b debugmode
00038532 <AmiBlitz3.ab2@22482>    BEQ.w JL_0_D2CA
00038536 <AmiBlitz3.ab2@22483>   MOVE.w #$C305,D1
0003853A <AmiBlitz3.ab2@22484> BRA.w Atokejsr
0003853E <AmiBlitz3.ab2@22487>   MOVE.w #$4E75,D1
00038542 <AmiBlitz3.ab2@22488> BRA.w writeword
00038546 <AmiBlitz3.ab2@22491> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
0003854A <AmiBlitz3.ab2@22492> proclocals:  Ds.l 1                                        ;for debugga!
0003854C <AmiBlitz3.ab2@22493> procnum:     Ds.w 1
0003854E <AmiBlitz3.ab2@22494> procnum2:    Ds.w 1
00038552 <AmiBlitz3.ab2@22495> prolineat:   Ds.l 1
00038558 <AmiBlitz3.ab2@22499>    TST.w proceduremode
0003855C <AmiBlitz3.ab2@22500>    BGT JUMP_sreterr
00038560 <AmiBlitz3.ab2@22501>    CMP.w #-$7FF9,D0
00038564 <AmiBlitz3.ab2@22502>    BEQ.w JL_0_D29C
00038566 <AmiBlitz3.ab2@22503>    MOVEQ.l #-$01,D1
0003856A <AmiBlitz3.ab2@22504> BRA.w JL_0_D304
00038570 <AmiBlitz3.ab2@22507> JMP sreterr
00038576 <AmiBlitz3.ab2@22511>   CLR.b skipfunc
0003857C <AmiBlitz3.ab2@22512>   TST.l unusedfunc
00038580 <AmiBlitz3.ab2@22513>   BEQ 'ex
00038584 <AmiBlitz3.ab2@22514>   MOVEM.l d0-d7/a0-a6,-(a7)
0003858A <AmiBlitz3.ab2@22515>   MOVE.l unusedfunc,d1
00038590 <AmiBlitz3.ab2@22516>   LEA ptr_parameterstore,a5
00038592 <AmiBlitz3.ab2@22519>   MOVE.l d1,a0
00038596 <AmiBlitz3.ab2@22520>   LEA 12(a0),a2
00038598 <AmiBlitz3.ab2@22521>   MOVE.l a5,a1
0003859A <AmiBlitz3.ab2@22523>   CMPM.b (a1)+,(a2)+
0003859E <AmiBlitz3.ab2@22524>   BNE 'neq
000385A0 <AmiBlitz3.ab2@22525>   TST.b (a2)
000385A4 <AmiBlitz3.ab2@22526>   BNE 'ch
000385A6 <AmiBlitz3.ab2@22527>   TST.b (a1)
000385AA <AmiBlitz3.ab2@22528>   BNE 'neq
000385B2 <AmiBlitz3.ab2@22529>   MOVE.b #1,skipfunc
000385B6 <AmiBlitz3.ab2@22530> BRA 'out
000385B8 <AmiBlitz3.ab2@22533>   MOVE.l (a0),d1
000385BC <AmiBlitz3.ab2@22534>   BNE 'ag
000385C0 <AmiBlitz3.ab2@22537>   MOVEM.l (a7)+,d0-d7/a0-a6
000385C2 <AmiBlitz3.ab2@22540> RTS
000385C8 <AmiBlitz3.ab2@22544> JMP dupprocerr
000385CE <AmiBlitz3.ab2@22547> JMP illprocperr
000385D6 <AmiBlitz3.ab2@22554>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
000385DA <AmiBlitz3.ab2@22555>    BEQ JUMP_sreterr
000385DE <AmiBlitz3.ab2@22556>   CMP.w #-$7FF9,D0
000385E2 <AmiBlitz3.ab2@22557>    BEQ.w JL_0_D2A4
000385EC <AmiBlitz3.ab2@22560>   MOVE.w oldqflag,instringon
000385F2 <AmiBlitz3.ab2@22561>   MOVEA.l lastsourcepos,A5
000385F8 <AmiBlitz3.ab2@22562>   JSR AJL_0_498A
000385FE <AmiBlitz3.ab2@22563>   JSR get1bytemain
00038604 <AmiBlitz3.ab2@22566>    TST.b declare
00038608 <AmiBlitz3.ab2@22567>   BEQ 'l1
00038610 <AmiBlitz3.ab2@22568>   MOVE.b #1,nowdeclare
00038616 <AmiBlitz3.ab2@22571>   JSR errchx                                           ;writejumpoverfunction
0003861C <AmiBlitz3.ab2@22574>   CLR.b fastfunc
00038626 <AmiBlitz3.ab2@22575>   MOVE.l firstiff,firstiffstore
0003862E <AmiBlitz3.ab2@22576>   CMP.l #"FAST",-1(a5)
00038632 <AmiBlitz3.ab2@22577>   BNE 'nofast
00038638 <AmiBlitz3.ab2@22578>   CMP.b #" ",3(a5)
0003863C <AmiBlitz3.ab2@22579>   BNE 'nofast
0003863E <AmiBlitz3.ab2@22580>   ADDQ.l #3,a5
00038642 <AmiBlitz3.ab2@22583>     CMP.b #" ",(a5)
00038646 <AmiBlitz3.ab2@22584>      BNE 'x1
00038648 <AmiBlitz3.ab2@22585>     ADDQ #1,a5
0003864C <AmiBlitz3.ab2@22586> BRA 'x2
00038652 <AmiBlitz3.ab2@22589>   MOVE.l a5,lastsourcepos
0003865A <AmiBlitz3.ab2@22590>   MOVE.b #1,fastfunc
00038662 <AmiBlitz3.ab2@22593>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00038666 <AmiBlitz3.ab2@22594> BRA 'noopt
0003866C <AmiBlitz3.ab2@22596>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00038670 <AmiBlitz3.ab2@22597>   BNE 'noopt
00038672 <AmiBlitz3.ab2@22598>   ADDQ.l #4,a5
00038676 <AmiBlitz3.ab2@22601>     CMP.b #" ",(a5)
0003867A <AmiBlitz3.ab2@22602>      BNE 'x1b
0003867C <AmiBlitz3.ab2@22603>     ADDQ #1,a5
00038680 <AmiBlitz3.ab2@22604> BRA 'x2b
00038686 <AmiBlitz3.ab2@22607>   MOVE.l a5,lastsourcepos
0003868C <AmiBlitz3.ab2@22609>   JSR makename2
00038690 <AmiBlitz3.ab2@22610> BRA 'l1
00038696 <AmiBlitz3.ab2@22614>   JSR makename2
0003869C <AmiBlitz3.ab2@22615>   JSR checkused
000386A2 <AmiBlitz3.ab2@22616>   TST.b skipfunc
000386A6 <AmiBlitz3.ab2@22617>    BEQ 'l1
000386AC <AmiBlitz3.ab2@22618>   JSR skipme
000386B2 <AmiBlitz3.ab2@22619>   CLR.b fastfunc
000386B4 <AmiBlitz3.ab2@22620> RTS
000386BE <AmiBlitz3.ab2@22623>   MOVE.l linenumat,prolineat
000386C4 <AmiBlitz3.ab2@22624>   ADDQ.w #1,procnum2
000386CC <AmiBlitz3.ab2@22625>   MOVE.w procnum2(PC),procnum
000386D2 <AmiBlitz3.ab2@22626>   MOVE.w D1,proceduremode
000386D8 <AmiBlitz3.ab2@22627>   CLR.w locvaroff
000386DC <AmiBlitz3.ab2@22628>   CMP.w #$7B,D0
000386E0 <AmiBlitz3.ab2@22629>    BNE.w JUMP_syntaxerr
000386E8 <AmiBlitz3.ab2@22630>    MOVE.b #1,infunctioncode
000386EE <AmiBlitz3.ab2@22631>   MOVEA.l tempvm,A0
000386F6 <AmiBlitz3.ab2@22632>   MOVE.w $C(A0),memlibstat
000386FC <AmiBlitz3.ab2@22633>   BCLR #$7,$C(A0)                                          ;Bit out of range
00038700 <AmiBlitz3.ab2@22634>   MOVE.w #$4EF9,D1
00038704 <AmiBlitz3.ab2@22635>    BSR.w writeword
0003870A <AmiBlitz3.ab2@22636>    JSR addoff
0003870E <AmiBlitz3.ab2@22637>    BSR.w writelong
00038712 <AmiBlitz3.ab2@22638>    BSR.w findproc                                          ;findproc function
00038716 <AmiBlitz3.ab2@22639>    BEQ.w JUMP_dupprocerr
0003871A <AmiBlitz3.ab2@22640>    BSR.w addlabel
00038720 <AmiBlitz3.ab2@22641>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00038726 <AmiBlitz3.ab2@22642>    MOVE.b #0,isfunc(a2)
0003872E <AmiBlitz3.ab2@22643>   MOVE.l destpointer,$E(A2)
00038734 <AmiBlitz3.ab2@22644>   MOVE.l A2,currentfunction
0003873A <AmiBlitz3.ab2@22645>   LEA nops8,A0
00038740 <AmiBlitz3.ab2@22646>   LEA dataget,A1
00038744 <AmiBlitz3.ab2@22647>    BSR.w pokecode2
0003874A <AmiBlitz3.ab2@22648>   TST.b debugmode
0003874E <AmiBlitz3.ab2@22649>    BEQ.b JL_0_D3AA
00038750 <AmiBlitz3.ab2@22650>   MOVEQ.l #$04,D1
00038756 <AmiBlitz3.ab2@22651>    JSR writetrap
00038760 <AmiBlitz3.ab2@22652>   MOVE.l destpointer,proclocals
00038764 <AmiBlitz3.ab2@22653>    BSR.w writelong
00038768 <AmiBlitz3.ab2@22654>    BSR.w writelong
0003876C <AmiBlitz3.ab2@22657>    LEA $16(A2),A4
00038774 <AmiBlitz3.ab2@22658>   MOVE.b proceduremode+1,$5(A2)
00038776 <AmiBlitz3.ab2@22659>   MOVEQ.l #$00,D6
00038778 <AmiBlitz3.ab2@22660>   MOVEQ.l #$00,D5
0003877E <AmiBlitz3.ab2@22661>    JSR get1bytemain
00038782 <AmiBlitz3.ab2@22662>   CMP.w #$7D,D0
00038786 <AmiBlitz3.ab2@22663>    BEQ.w JL_0_D466
0003878A <AmiBlitz3.ab2@22666>    CMP.b #"@",d0
0003878E <AmiBlitz3.ab2@22667>    BNE 'l2
00038790 <AmiBlitz3.ab2@22668>    MOVE.l a0,-(a7)
00038796 <AmiBlitz3.ab2@22669>    MOVE.l currentfunction,a0
0003879C <AmiBlitz3.ab2@22670>    CMP.b #31,$20(a0)                                       ;increase if morepars
000387A0 <AmiBlitz3.ab2@22671>    BNE 'l1
000387A4 <AmiBlitz3.ab2@22672>    MOVE.b d6,$20(a0)                                       ;increase if morepar
000387AA <AmiBlitz3.ab2@22675>    JSR get1bytemain
000387AC <AmiBlitz3.ab2@22676>    MOVE.l (a7)+,a0
000387B0 <AmiBlitz3.ab2@22679>    BSR.w getparameter
000387B4 <AmiBlitz3.ab2@22680>    BSR.w JL_0_8E3C
000387BC <AmiBlitz3.ab2@22681>   CMPI.l #$7,$4(A2)
000387C0 <AmiBlitz3.ab2@22682>    BNE.w JL_0_D3F6
000387C6 <AmiBlitz3.ab2@22683>   LEA stbuff,A0
000387C8 <AmiBlitz3.ab2@22684>   MOVE.w D5,D1
000387CA <AmiBlitz3.ab2@22685>   LSL.w #2,D1
000387CE <AmiBlitz3.ab2@22686>   MOVE.w D6,$0(A0,D1.W)
000387D4 <AmiBlitz3.ab2@22687>   MOVE.w $4(A3),$2(A0,D1.W)
000387D6 <AmiBlitz3.ab2@22688>   ADDQ.w #1,D5
000387D8 <AmiBlitz3.ab2@22689>   MOVEQ.l #$07,D2
000387DC <AmiBlitz3.ab2@22690> BRA.w JL_0_D442
000387E2 <AmiBlitz3.ab2@22693> JMP toovarerr
000387E6 <AmiBlitz3.ab2@22696>   MOVE.w #$2940,D1
000387E8 <AmiBlitz3.ab2@22697>   MOVEQ.l #$03,D2
000387F0 <AmiBlitz3.ab2@22698>   BTST #$0,flagmask+1
000387F4 <AmiBlitz3.ab2@22699>    BNE.w JL_0_D430
000387FC <AmiBlitz3.ab2@22700>   CMPI.l #$100,$4(A2)
00038800 <AmiBlitz3.ab2@22701>    BCC.w JUMP_illprocperr
00038804 <AmiBlitz3.ab2@22702>   MOVE.w $6(A2),D2
00038808 <AmiBlitz3.ab2@22703>   CMP.w #$2,D2
0003880C <AmiBlitz3.ab2@22704>    BHI.w JL_0_D430
00038810 <AmiBlitz3.ab2@22705>    BEQ.w JL_0_D42C
00038814 <AmiBlitz3.ab2@22706>   EORI.w #$3000,D1
00038818 <AmiBlitz3.ab2@22707> BRA.w JL_0_D430
0003881E <AmiBlitz3.ab2@22710> JMP more6pard
00038822 <AmiBlitz3.ab2@22713>   ORI.w #$1000,D1
00038824 <AmiBlitz3.ab2@22716>   OR.w D6,D1
0003882A <AmiBlitz3.ab2@22717>   TST.b fpu
0003882E <AmiBlitz3.ab2@22718>   BEQ 'nofpu
00038832 <AmiBlitz3.ab2@22719>   CMP.b #5,d2
00038836 <AmiBlitz3.ab2@22720>   BNE 'nofpu
0003883A <AmiBlitz3.ab2@22721>   CMP.w #6,d6
0003883E <AmiBlitz3.ab2@22722>   BLT 'l10a
00038844 <AmiBlitz3.ab2@22723>   CMP.l #newtype_double,a2
00038848 <AmiBlitz3.ab2@22724>   BEQ JUMP_more6pard
0003884C <AmiBlitz3.ab2@22725> BRA 'nofpu
00038852 <AmiBlitz3.ab2@22728>   MOVE.l #$f22c6400,d1
00038856 <AmiBlitz3.ab2@22729>   MOVEM.l d0/a4,-(a7)
00038858 <AmiBlitz3.ab2@22730>   MOVE.l d6,d0
0003885A <AmiBlitz3.ab2@22731>   ASL.l #7,d0
0003885C <AmiBlitz3.ab2@22732>   OR.w d0,d1
00038862 <AmiBlitz3.ab2@22733>   CMP.l #newtype_double,a2
00038866 <AmiBlitz3.ab2@22734>   BNE 'l1
0003886C <AmiBlitz3.ab2@22735>   OR.l #$1000,d1
00038870 <AmiBlitz3.ab2@22738>   BSR writelong
00038874 <AmiBlitz3.ab2@22739>   MOVE.w 4(a3),d1
00038878 <AmiBlitz3.ab2@22740>   BSR writeword
0003887C <AmiBlitz3.ab2@22741>   MOVEM.l (a7)+,a4/d0
00038880 <AmiBlitz3.ab2@22742> BRA JL_0_D442
00038882 <AmiBlitz3.ab2@22745>   MOVE.l A4,-(A7)
00038886 <AmiBlitz3.ab2@22746>    CMP.w #6,d6
0003888A <AmiBlitz3.ab2@22747>    BLT 'l10
0003888E <AmiBlitz3.ab2@22748>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00038890 <AmiBlitz3.ab2@22749>    ADD.w d6,d1
00038896 <AmiBlitz3.ab2@22750>    JSR Atokejsr
0003889C <AmiBlitz3.ab2@22751>    TST.w dontwrite
000388A0 <AmiBlitz3.ab2@22752>    BNE 'l10
000388A6 <AmiBlitz3.ab2@22753>    MOVE.l data1start,d1
000388AC <AmiBlitz3.ab2@22754>    MOVE.l destpointer,a4
000388B0 <AmiBlitz3.ab2@22755>    ADD.l d1,-6(a4)
000388B6 <AmiBlitz3.ab2@22756>    MOVE.l destpointer,d1
000388B8 <AmiBlitz3.ab2@22757>    SUBQ.l #6,d1
000388BE <AmiBlitz3.ab2@22758>    SUB.l destbufferstart,d1
000388C0 <AmiBlitz3.ab2@22760>    MOVE.l d2,-(a7)
000388C2 <AmiBlitz3.ab2@22761>    MOVE.l d1,d2
000388C8 <AmiBlitz3.ab2@22762>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000388CA <AmiBlitz3.ab2@22763>    MOVE.l (a7)+,d2
000388D0 <AmiBlitz3.ab2@22764>    MOVE.l destpointer,a4
000388D4 <AmiBlitz3.ab2@22765>    CMP.w #2,d2
000388D8 <AmiBlitz3.ab2@22766>    BNE 'nw1
000388DE <AmiBlitz3.ab2@22768>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
000388E6 <AmiBlitz3.ab2@22769>    ADD.l #2,-6(a4)
000388EA <AmiBlitz3.ab2@22772>    CMP.w #1,d2
000388EE <AmiBlitz3.ab2@22773>    BNE 'nb
000388F4 <AmiBlitz3.ab2@22774>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000388FC <AmiBlitz3.ab2@22775>    ADD.l #3,-6(a4)
00038902 <AmiBlitz3.ab2@22778>    MOVE.w $4(a3),-2(a4)
00038906 <AmiBlitz3.ab2@22779> BRA 'ne1
0003890A <AmiBlitz3.ab2@22782>   BSR.w writeword                                          ;write storeparameter
0003890E <AmiBlitz3.ab2@22785>   MOVE.w $4(A3),D1
00038912 <AmiBlitz3.ab2@22786>    BSR.w writeword
00038914 <AmiBlitz3.ab2@22789>   MOVEA.l (A7)+,A4
00038916 <AmiBlitz3.ab2@22792>   ADDQ.w #1,D6
0003891A <AmiBlitz3.ab2@22793>   CMP.w #11,D6                                             ;max function parameters
0003891E <AmiBlitz3.ab2@22794>    BCC.w JUMP_toovarerr
00038920 <AmiBlitz3.ab2@22795>   MOVE.b D2,(A4)+
00038924 <AmiBlitz3.ab2@22796>   CMP.w #$2C,D0
00038928 <AmiBlitz3.ab2@22797>    BNE.w JL_0_D45E
0003892E <AmiBlitz3.ab2@22798>    JSR get1bytemain
00038932 <AmiBlitz3.ab2@22810> BRA.w JL_0_D3C6
00038936 <AmiBlitz3.ab2@22813>   CMP.w #$7D,D0
0003893A <AmiBlitz3.ab2@22814>    BNE.w JUMP_syntaxerr
00038940 <AmiBlitz3.ab2@22817>   MOVEA.l currentfunction,A2
00038942 <AmiBlitz3.ab2@22818>   LSL.w #4,D5
00038944 <AmiBlitz3.ab2@22819>   OR.w D5,D6
00038948 <AmiBlitz3.ab2@22820>   MOVE.b D6,$4(A2)
0003894A <AmiBlitz3.ab2@22821>   LSR.w #4,D6
0003894E <AmiBlitz3.ab2@22822>    BEQ.w JL_0_D4C4
00038954 <AmiBlitz3.ab2@22823>   LEA stbuff,A0
00038956 <AmiBlitz3.ab2@22824>   SUBQ.w #1,D6
00038958 <AmiBlitz3.ab2@22827>     MOVE.w D6,D1                                           ;function stringpars
0003895A <AmiBlitz3.ab2@22828>     LSL.w #2,D1                                            ;stringsize was 2
0003895C <AmiBlitz3.ab2@22830>       LSL.w #1,d1
0003895E <AmiBlitz3.ab2@22831>       ADDQ.w #4,d1
00038960 <AmiBlitz3.ab2@22833>     ADDQ.w #8,D1
00038966 <AmiBlitz3.ab2@22834>     MOVE.w D1,funcst+2
0003896C <AmiBlitz3.ab2@22835>     MOVE.l funcst,D1
00038970 <AmiBlitz3.ab2@22836>     BSR.w writelong
00038972 <AmiBlitz3.ab2@22837>     MOVE.w (A0)+,D1
00038976 <AmiBlitz3.ab2@22838>     CMP.b #5,d1
0003897A <AmiBlitz3.ab2@22839>     BLE 's1
0003897E <AmiBlitz3.ab2@22840>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00038982 <AmiBlitz3.ab2@22841>     BSR writeinstruction
00038984 <AmiBlitz3.ab2@22842>     MOVE.w D6,D1                                           ;function stringpars
00038986 <AmiBlitz3.ab2@22843>     LSL.w #2,D1                                            ;stringsize was 2
00038988 <AmiBlitz3.ab2@22845>       LSL.w #1,d1
0003898A <AmiBlitz3.ab2@22847>     ADDQ.w #8,D1
0003898E <AmiBlitz3.ab2@22848>     BSR writeword
00038992 <AmiBlitz3.ab2@22849>   BRA 's2
00038998 <AmiBlitz3.ab2@22852>     OR.w movedna3,D1
0003899C <AmiBlitz3.ab2@22853>      BSR.w writeword
000389A2 <AmiBlitz3.ab2@22856>     MOVE.w (A0)+,least+2
000389A8 <AmiBlitz3.ab2@22857>     MOVE.l least,D1
000389AC <AmiBlitz3.ab2@22858>      BSR.w writelong
000389AE <AmiBlitz3.ab2@22859>     MOVE.l A0,-(A7)
000389B2 <AmiBlitz3.ab2@22860>     MOVE.w #$C700,D1
000389B6 <AmiBlitz3.ab2@22861>      BSR.w Atokejsr
000389B8 <AmiBlitz3.ab2@22862>     MOVEA.l (A7)+,A0
000389BC <AmiBlitz3.ab2@22863>   DBF D6,JL_0_D482
000389C2 <AmiBlitz3.ab2@22866> JMP get1bytemain
000389C8 <AmiBlitz3.ab2@22870>   MOVE.w dontwrite,D1
000389CC <AmiBlitz3.ab2@22871>    BNE.w JL_0_D4F6
000389D2 <AmiBlitz3.ab2@22872>   MOVE.l destpointer,-(A7)
000389D8 <AmiBlitz3.ab2@22873>   MOVE.l A0,destpointer
000389DE <AmiBlitz3.ab2@22874>   MOVE.l linksize,D1
000389E2 <AmiBlitz3.ab2@22875>    BSR.w writelong                                         ;writefunctions jumppos
000389E8 <AmiBlitz3.ab2@22876>    TST.b fastfunc
000389EC <AmiBlitz3.ab2@22877>    BNE 'skip
000389F0 <AmiBlitz3.ab2@22878>   MOVE.w #$CC00,D1
000389F4 <AmiBlitz3.ab2@22879>    BSR.w tokejsr2                                          ;write clearvars
000389FA <AmiBlitz3.ab2@22882>   MOVE.l (A7)+,destpointer
000389FC <AmiBlitz3.ab2@22885> RTS
00038A02 <AmiBlitz3.ab2@22889>   MOVEA.l currentfunction,A2
00038A06 <AmiBlitz3.ab2@22890>   MOVEA.l $E(A2),A0
00038A0A <AmiBlitz3.ab2@22891>   MOVE.w $6(A2),D1
00038A0E <AmiBlitz3.ab2@22892>    BEQ.w JL_0_D538
00038A14 <AmiBlitz3.ab2@22893>   MOVE.w D1,linksize+2
00038A18 <AmiBlitz3.ab2@22894>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00038A1C <AmiBlitz3.ab2@22895>    BNE.w JL_0_D522
00038A1E <AmiBlitz3.ab2@22896>   ADDQ.w #6,A0
00038A22 <AmiBlitz3.ab2@22897>   MOVE.l A0,$E(A2)
00038A26 <AmiBlitz3.ab2@22898> BRA.w JL_0_D4C8
00038A28 <AmiBlitz3.ab2@22901>   MOVE.l A0,-(A7)
00038A2C <AmiBlitz3.ab2@22902>    BSR.w JL_0_D4C8
00038A2E <AmiBlitz3.ab2@22903>   MOVEA.l (A7)+,A0
00038A32 <AmiBlitz3.ab2@22904>   LEA $A(A0),A0
00038A38 <AmiBlitz3.ab2@22905>   MOVEA.l currentfunction,A2
00038A3C <AmiBlitz3.ab2@22906> BRA.w JL_0_D54A
00038A40 <AmiBlitz3.ab2@22909>   MOVE.w $8(A2),D1
00038A44 <AmiBlitz3.ab2@22910>    BNE.w JL_0_D54A
00038A48 <AmiBlitz3.ab2@22911>   LEA $10(A0),A0
00038A4C <AmiBlitz3.ab2@22912>   MOVE.l A0,$E(A2)
00038A4E <AmiBlitz3.ab2@22913> RTS
00038A54 <AmiBlitz3.ab2@22917> JMP errormsg_nofast
00038A5A <AmiBlitz3.ab2@22920>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00038A5E <AmiBlitz3.ab2@22921>    BNE.w JL_0_D580
00038A64 <AmiBlitz3.ab2@22922>    TST.b fastfunc
00038A68 <AmiBlitz3.ab2@22923>    BNE JUMP_errormsg_nofast
00038A6E <AmiBlitz3.ab2@22924>   MOVE.l destpointer,-(A7)
00038A74 <AmiBlitz3.ab2@22925>   MOVE.l A0,destpointer
00038A78 <AmiBlitz3.ab2@22926>   MOVE.w #$4EB9,D1
00038A7C <AmiBlitz3.ab2@22927>    BSR.w writeword
00038A82 <AmiBlitz3.ab2@22928>    JSR addoff
00038A86 <AmiBlitz3.ab2@22929>    BSR.w writelong
00038A88 <AmiBlitz3.ab2@22930>   MOVEA.l (A7)+,A0
00038A8E <AmiBlitz3.ab2@22931>   MOVEA.l destpointer,A1
00038A90 <AmiBlitz3.ab2@22932>   MOVE.l A0,-(A1)
00038A96 <AmiBlitz3.ab2@22933>   MOVE.l A0,destpointer
00038A9A <AmiBlitz3.ab2@22936>   MOVE.w $8(A2),D4
00038A9E <AmiBlitz3.ab2@22937>    BPL.w JL_0_D59E
00038AA2 <AmiBlitz3.ab2@22938>   MOVE.w #$C004,D1
00038AA6 <AmiBlitz3.ab2@22939>    BSR.w tokejsr2
00038AAC <AmiBlitz3.ab2@22940>   MOVEA.l currentfunction,A2
00038AB0 <AmiBlitz3.ab2@22941>   MOVE.w $8(A2),D4
00038AB4 <AmiBlitz3.ab2@22942>   ANDI.w #$7FFF,D4
00038AB8 <AmiBlitz3.ab2@22945>    BEQ.w JL_0_D5E0
00038ABC <AmiBlitz3.ab2@22946>   MOVE.b $4(A2),D1
00038AC0 <AmiBlitz3.ab2@22947>   ANDI.w #$F,D1
00038AC2 <AmiBlitz3.ab2@22948>   MOVE.w D1,-(A7)
00038AC6 <AmiBlitz3.ab2@22949>   CMP.w #$5,D1
00038ACA <AmiBlitz3.ab2@22950>    BCS.w JL_0_D5BC
00038ACE <AmiBlitz3.ab2@22951>   MOVE.w #$2F04,D1
00038AD2 <AmiBlitz3.ab2@22952>    BSR.w writeword
00038AD8 <AmiBlitz3.ab2@22955>   MOVE.l locdatast,D3
00038ADE <AmiBlitz3.ab2@22956>    JSR datastart
00038AE2 <AmiBlitz3.ab2@22957>   MOVE.w #$C501,D1
00038AE6 <AmiBlitz3.ab2@22958>    BSR.w tokejsr2
00038AE8 <AmiBlitz3.ab2@22959>   MOVE.w (A7)+,D1
00038AEC <AmiBlitz3.ab2@22960>   CMP.w #$5,D1
00038AF0 <AmiBlitz3.ab2@22961>    BCS.w JL_0_D5E0
00038AF4 <AmiBlitz3.ab2@22962>   MOVE.w #$281F,D1
00038AF8 <AmiBlitz3.ab2@22963>    BSR.w writeword
00038AFC <AmiBlitz3.ab2@22965>   MOVE.w #$4E75,D1
00038B00 <AmiBlitz3.ab2@22966> BRA.w writeword
00038B06 <AmiBlitz3.ab2@22970>   LEA mwait,A0
00038B0C <AmiBlitz3.ab2@22971>   LEA mwaitf,A1
00038B10 <AmiBlitz3.ab2@22972> BRA.w pokecode
00038B16 <AmiBlitz3.ab2@22976> JMP laberr
00038B1A <AmiBlitz3.ab2@22979>   CMP.w #$2E,D0
00038B1E <AmiBlitz3.ab2@22980>   BNE.w JUMP_syntaxerr
00038B24 <AmiBlitz3.ab2@22981>   JSR getparameter2
00038B28 <AmiBlitz3.ab2@22982>   BEQ.w JUMP_laberr
00038B2E <AmiBlitz3.ab2@22983>   LEA newtypebase,A2
00038B34 <AmiBlitz3.ab2@22984>   JSR findtype
00038B38 <AmiBlitz3.ab2@22985>   BNE.w JL_0_D626
00038B40 <AmiBlitz3.ab2@22986>   CMPI.l #MaxByte,$4(A2)
00038B44 <AmiBlitz3.ab2@22987>   BNE.w JUMP_typeerr
00038B48 <AmiBlitz3.ab2@22988> BRA.w JL_0_D62A
00038B4E <AmiBlitz3.ab2@22991> JMP typeerr
00038B54 <AmiBlitz3.ab2@22994>   JSR addlabel
00038B58 <AmiBlitz3.ab2@22997>   CLR.l $4(A2)
00038B5E <AmiBlitz3.ab2@22998>   MOVE.l A2,thistype
00038B64 <AmiBlitz3.ab2@22999>   CLR.l prevtype
00038B6A <AmiBlitz3.ab2@23000>   CLR.w typelen
00038B70 <AmiBlitz3.ab2@23001>   CLR.w linemode
00038B76 <AmiBlitz3.ab2@23002>   JSR reget
00038B7A <AmiBlitz3.ab2@23003>   BNE.w typemode
00038B7C <AmiBlitz3.ab2@23004> RTS
00038B80 <AmiBlitz3.ab2@23007>   CMP.w #-$7FFE,D0
00038B84 <AmiBlitz3.ab2@23008>   BEQ.w JL_0_D82E
00038B8E <AmiBlitz3.ab2@23010>   MOVE.w oldqflag,instringon
00038B94 <AmiBlitz3.ab2@23011>   MOVEA.l lastsourcepos,A5
00038B96 <AmiBlitz3.ab2@23012>   MOVEQ.l #$00,D6
00038B9A <AmiBlitz3.ab2@23013>   CMP.w #$2A,D0
00038B9E <AmiBlitz3.ab2@23014>   BNE.w JL_0_D670
00038BA0 <AmiBlitz3.ab2@23015>   MOVEQ.l #$01,D6
00038BA6 <AmiBlitz3.ab2@23016>   JSR get1bytemain
00038BAA <AmiBlitz3.ab2@23017> BRA.w JL_0_D67E
00038BAE <AmiBlitz3.ab2@23020>   CMP.w #$40,D0
00038BB2 <AmiBlitz3.ab2@23021>   BNE.w JL_0_D67E
00038BB4 <AmiBlitz3.ab2@23022>   MOVEQ.l #$05,D6
00038BBA <AmiBlitz3.ab2@23023>   JSR get1bytemain
00038BC0 <AmiBlitz3.ab2@23026>   MOVE.w D6,flagmask
00038BC6 <AmiBlitz3.ab2@23027>   JSR getparameter2
00038BCA <AmiBlitz3.ab2@23028>   BEQ.w JUMP_syntaxerr
00038BD0 <AmiBlitz3.ab2@23029>   MOVEA.l thistype,A2
00038BD2 <AmiBlitz3.ab2@23030>   ADDQ.w #4,A2
00038BD8 <AmiBlitz3.ab2@23031>   JSR findvariable2
00038BDC <AmiBlitz3.ab2@23032>   BEQ.w JUMP_dupofferr
00038BE2 <AmiBlitz3.ab2@23033>   JSR addlabel
00038BE4 <AmiBlitz3.ab2@23034>   MOVE.l A2,-(A7)
00038BE8 <AmiBlitz3.ab2@23035>   CMP.w #$2E,D0
00038BEC <AmiBlitz3.ab2@23036>    BEQ.w JL_0_D6CE
00038BF0 <AmiBlitz3.ab2@23037>   CMP.w #$24,D0
00038BF4 <AmiBlitz3.ab2@23038>    BNE.w JL_0_D6C0
00038BFA <AmiBlitz3.ab2@23039>   MOVE.l #newtype_string,D2
00038C00 <AmiBlitz3.ab2@23040>    JSR get1bytemain
00038C04 <AmiBlitz3.ab2@23041> BRA.w JL_0_D710
00038C0A <AmiBlitz3.ab2@23044> JMP dupofferr
00038C10 <AmiBlitz3.ab2@23047>   MOVE.l prevtype,D2
00038C14 <AmiBlitz3.ab2@23048>   BEQ.w JUMP_notypeerr
00038C18 <AmiBlitz3.ab2@23049> BRA.w JL_0_D706
00038C1E <AmiBlitz3.ab2@23052> JMP notypeerr
00038C24 <AmiBlitz3.ab2@23055>   JSR getparameter2
00038C28 <AmiBlitz3.ab2@23056>    BEQ.w JUMP_syntaxerr
00038C2E <AmiBlitz3.ab2@23057>   LEA newtypebase,A2
00038C34 <AmiBlitz3.ab2@23058>    JSR findtype
00038C38 <AmiBlitz3.ab2@23059>    BEQ.w JL_0_D704
00038C40 <AmiBlitz3.ab2@23060>   BTST #$0,flagmask+1
00038C44 <AmiBlitz3.ab2@23061>    BEQ.w JUMP_notypeerr
00038C4A <AmiBlitz3.ab2@23062>   JSR addlabel
00038C52 <AmiBlitz3.ab2@23065>   MOVE.w linenumat+2,$8(A2)
00038C5A <AmiBlitz3.ab2@23066>   MOVE.l #MaxByte,$4(A2)
00038C5C <AmiBlitz3.ab2@23069>   MOVE.l A2,D2
00038C62 <AmiBlitz3.ab2@23072>   CMP.l #newtype_byte,D2
00038C66 <AmiBlitz3.ab2@23073>    BEQ.w JL_0_D71E
00038C6C <AmiBlitz3.ab2@23076>   ADDQ.w #1,typelen
00038C74 <AmiBlitz3.ab2@23077>   BCLR #$0,typelen+1
00038C76 <AmiBlitz3.ab2@23080>   MOVEQ.l #$00,D3
00038C78 <AmiBlitz3.ab2@23081>   MOVEA.l D2,A2
00038C7E <AmiBlitz3.ab2@23082>   MOVE.l A2,prevtype
00038C82 <AmiBlitz3.ab2@23083>   MOVE.w $8(A2),D3
00038C84 <AmiBlitz3.ab2@23084>   MOVEA.l (A7)+,A2
00038C88 <AmiBlitz3.ab2@23085>   MOVE.l D2,$A(A2)
00038C8A <AmiBlitz3.ab2@23086>   MOVEQ.l #$00,D4
00038C90 <AmiBlitz3.ab2@23087>   MOVE.w typelen,D4
00038C94 <AmiBlitz3.ab2@23088>   MOVE.w D4,$4(A2)
00038C9C <AmiBlitz3.ab2@23089>   BTST #$0,flagmask+1
00038CA0 <AmiBlitz3.ab2@23090>    BEQ.w JL_0_D74C
00038CA2 <AmiBlitz3.ab2@23091>   MOVEQ.l #$04,D3
00038CA6 <AmiBlitz3.ab2@23094>   CMP.w #$5B,D0
00038CAA <AmiBlitz3.ab2@23095>    BNE.w JL_0_D782
00038CAE <AmiBlitz3.ab2@23096>   MOVEM.l D3-D4/A2,-(A7)
00038CB2 <AmiBlitz3.ab2@23097>    BSR.w AJL_0_BF6E
00038CB6 <AmiBlitz3.ab2@23098>   CMP.w #$5D,D0
00038CBA <AmiBlitz3.ab2@23099>    BNE.w JUMP_syntaxerr
00038CBC <AmiBlitz3.ab2@23100>   TST.w D6
00038CC0 <AmiBlitz3.ab2@23101>    BNE.w JUMP_fpconerr
00038CC2 <AmiBlitz3.ab2@23102>   MOVE.l D3,D1
00038CC6 <AmiBlitz3.ab2@23103>   MOVEM.l (A7)+,D3-D4/A2
00038CCC <AmiBlitz3.ab2@23104>    JSR get1bytemain
00038CD0 <AmiBlitz3.ab2@23105>   MOVE.w D1,$8(A2)
00038CD4 <AmiBlitz3.ab2@23106>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00038CDC <AmiBlitz3.ab2@23107>   ORI.w #$2,flagmask
00038CDE <AmiBlitz3.ab2@23110>   ADD.l D3,D4
00038CE4 <AmiBlitz3.ab2@23113>     CMP.l #65532,d4
00038CE8 <AmiBlitz3.ab2@23118>   BCC JUMP_toolongerr
00038CF0 <AmiBlitz3.ab2@23119>   MOVE.w flagmask,$6(A2)
00038CF6 <AmiBlitz3.ab2@23120>   MOVE.w D4,typelen
00038CF8 <AmiBlitz3.ab2@23121> RTS
00038CFE <AmiBlitz3.ab2@23124> JMP badenderr
00038D04 <AmiBlitz3.ab2@23127> JMP noiferr
00038D0A <AmiBlitz3.ab2@23130> JMP toolongerr
00038D10 <AmiBlitz3.ab2@23133> JMP fpconerr
00038D16 <AmiBlitz3.ab2@23136>   MOVE.l firstiff,D0
00038D1A <AmiBlitz3.ab2@23137>    BEQ.w JUMP_noiferr
00038D1C <AmiBlitz3.ab2@23138>   MOVEA.l D0,A0
00038D20 <AmiBlitz3.ab2@23139>   MOVE.w $C(A0),D0
00038D24 <AmiBlitz3.ab2@23140>   ANDI.w #$FF,D0
00038D26 <AmiBlitz3.ab2@23141>   CMP.w D0,D1
00038D2A <AmiBlitz3.ab2@23142>    BNE.w JUMP_badenderr
00038D2E <AmiBlitz3.ab2@23145>   CMP.w #$1,D1
00038D32 <AmiBlitz3.ab2@23146>   BNE.w JL_0_D7D8
00038D36 <AmiBlitz3.ab2@23147>   MOVE.w #$6000,D1
00038D3C <AmiBlitz3.ab2@23150>     TST.b fast
00038D40 <AmiBlitz3.ab2@23151>     BEQ 'l1
00038D46 <AmiBlitz3.ab2@23152>     OR.l #$ff,d1
00038D4A <AmiBlitz3.ab2@23156>   BSR.w writeword
00038D50 <AmiBlitz3.ab2@23157>   MOVEA.l destpointer,A1
00038D54 <AmiBlitz3.ab2@23158>   MOVE.l $4(A0),D1
00038D56 <AmiBlitz3.ab2@23159>   SUB.l A1,D1
00038D5C <AmiBlitz3.ab2@23162>     TST.b fast
00038D60 <AmiBlitz3.ab2@23163>     BEQ 'l2
00038D64 <AmiBlitz3.ab2@23164>     BSR writelong
00038D68 <AmiBlitz3.ab2@23165>   BRA JL_0_D7D8
00038D6C <AmiBlitz3.ab2@23169>   BSR.w writeword
00038D70 <AmiBlitz3.ab2@23172>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00038D76 <AmiBlitz3.ab2@23173>   MOVE.l destpointer,D1
00038D78 <AmiBlitz3.ab2@23174>   SUB.l A1,D1
00038D7E <AmiBlitz3.ab2@23177>     TST.b fast
00038D82 <AmiBlitz3.ab2@23178>     BEQ 'l1
00038D84 <AmiBlitz3.ab2@23179>     ADDQ.l #4,D1
00038D8A <AmiBlitz3.ab2@23180>     MOVE.w dontwrite,D0
00038D8E <AmiBlitz3.ab2@23181>     BNE.w JL_0_D7FE
00038D92 <AmiBlitz3.ab2@23182>     MOVE.l d1,-$4(a1)
00038D96 <AmiBlitz3.ab2@23183>   BRA JL_0_D7FE
00038D98 <AmiBlitz3.ab2@23187>   ADDQ.l #2,d1
00038D9E <AmiBlitz3.ab2@23188>   TST.w dontwrite
00038DA2 <AmiBlitz3.ab2@23189>   BNE JL_0_D7FE
00038DA8 <AmiBlitz3.ab2@23190>   CMP.l #MinWordSgnd,D1
00038DAC <AmiBlitz3.ab2@23191>   BCC.w JUMP_bigiferr
00038DB0 <AmiBlitz3.ab2@23192>   MOVE.w D1,-$2(A1)
00038DB2 <AmiBlitz3.ab2@23195> RTS
00038DB8 <AmiBlitz3.ab2@23198> JMP bigiferr
00038DC2 <AmiBlitz3.ab2@23203>   MOVE.w oldqflag,instringon
00038DC8 <AmiBlitz3.ab2@23204>   MOVEA.l lastsourcepos,A5
00038DCA <AmiBlitz3.ab2@23207>   MOVEQ.l #$01,D1
00038DCE <AmiBlitz3.ab2@23208> BRA.w JL_0_D810
00038DD8 <AmiBlitz3.ab2@23212>   MOVE.w oldqflag,instringon
00038DDE <AmiBlitz3.ab2@23213>   MOVEA.l lastsourcepos,A5
00038DE0 <AmiBlitz3.ab2@23216>   MOVEQ.l #$00,D1
00038DE4 <AmiBlitz3.ab2@23219>   BSR.w JL_0_D79E
00038DE8 <AmiBlitz3.ab2@23220>   BSR.w AJL_0_D81C
00038DEE <AmiBlitz3.ab2@23221> JMP get1bytemain
00038DF4 <AmiBlitz3.ab2@23224>   MOVE.l (A0),firstiff
00038DF6 <AmiBlitz3.ab2@23225>   MOVEA.l A0,A1
00038DF8 <AmiBlitz3.ab2@23226>   MOVEQ.l #$0E,D0
00038DFE <AmiBlitz3.ab2@23227>   MOVEA.l _execbase,A6
00038E04 <AmiBlitz3.ab2@23228>   MOVE.l mempool,a0
00038E08 <AmiBlitz3.ab2@23229> JMP _FreePooled(A6)
00038E0E <AmiBlitz3.ab2@23233>   JSR get1bytemain
00038E12 <AmiBlitz3.ab2@23236>   BEQ.w JL_0_D980
00038E1A <AmiBlitz3.ab2@23237>   CMP.l #"noa7",-1(a5)
00038E1E <AmiBlitz3.ab2@23238>   BNE 'l1
00038E24 <AmiBlitz3.ab2@23239>   JSR get1bytemain
00038E2A <AmiBlitz3.ab2@23240>   JSR get1bytemain
00038E30 <AmiBlitz3.ab2@23241>   JSR get1bytemain
00038E38 <AmiBlitz3.ab2@23242>   MOVE.w #$3a,lastchar
00038E3C <AmiBlitz3.ab2@23243> BRA JL_0_D980
00038E42 <AmiBlitz3.ab2@23246>   CMP.w #"d0",-1(a5)
00038E46 <AmiBlitz3.ab2@23247>   BNE 'l2
00038E4E <AmiBlitz3.ab2@23248>   MOVE.b #1,returncode
00038E54 <AmiBlitz3.ab2@23249>   CLR.w lastchar
00038E58 <AmiBlitz3.ab2@23250> BRA JL_0_D980
00038E5C <AmiBlitz3.ab2@23253>   CMP.w #$80d7,d0
00038E60 <AmiBlitz3.ab2@23254>   BNE JL_0_D836
00038E66 <AmiBlitz3.ab2@23255>   JSR skiprest
00038E68 <AmiBlitz3.ab2@23256> RTS
00038E6C <AmiBlitz3.ab2@23259>   BSR.w JL_0_D844
00038E72 <AmiBlitz3.ab2@23260>   JSR reget
00038E76 <AmiBlitz3.ab2@23261>   BNE.w JL_0_D836
00038E78 <AmiBlitz3.ab2@23262> RTS
00038E7C <AmiBlitz3.ab2@23265>   CMP.w #-$7FFF,D0
00038E80 <AmiBlitz3.ab2@23266>    BNE.w JL_0_D87E
00038E86 <AmiBlitz3.ab2@23267>   MOVE.w linemode,D1
00038E8A <AmiBlitz3.ab2@23268>    BNE.w JUMP_modeerr
00038E90 <AmiBlitz3.ab2@23269>   ADDQ.w #1,typelen
00038E98 <AmiBlitz3.ab2@23270>   BCLR #$0,typelen+1
00038E9E <AmiBlitz3.ab2@23271>   MOVEA.l thistype,A0
00038EA6 <AmiBlitz3.ab2@23272>   MOVE.w typelen,$8(A0)
00038EAE <AmiBlitz3.ab2@23273>   MOVE.w #$FFFF,linemode
00038EB4 <AmiBlitz3.ab2@23274> JMP get1bytemain
00038EBA <AmiBlitz3.ab2@23277> JMP modeerr
00038EBE <AmiBlitz3.ab2@23280>   CMP.w #-$7FF5,D0
00038EC2 <AmiBlitz3.ab2@23281>    BEQ.w JL_0_D80E
00038EC6 <AmiBlitz3.ab2@23282>   CMP.w #-$7FF4,D0
00038ECA <AmiBlitz3.ab2@23283>    BEQ.w JL_0_D804
00038ECE <AmiBlitz3.ab2@23284>   CMP.w #-$7FF8,D0
00038ED2 <AmiBlitz3.ab2@23285>    BNE.w JL_0_D89A
00038ED6 <AmiBlitz3.ab2@23288> BRA.w JL_0_D9E8
00038EDC <AmiBlitz3.ab2@23291> JMP interr3
00038EE0 <AmiBlitz3.ab2@23294>   CMP.w #-$7FF7,D0
00038EE4 <AmiBlitz3.ab2@23295>    BNE.w JL_0_D8C8
00038EEA <AmiBlitz3.ab2@23296>    TST.b fpu
00038EEE <AmiBlitz3.ab2@23297>    BEQ 'nof
00038EF4 <AmiBlitz3.ab2@23298>    MOVEA.l currentfunction,A0
00038EFA <AmiBlitz3.ab2@23299>    CMP.l #0,a0
00038EFE <AmiBlitz3.ab2@23300>    BEQ 'nof
00038F04 <AmiBlitz3.ab2@23301>    CMP.b #5,$5(a0)
00038F08 <AmiBlitz3.ab2@23302>     BNE 'nof
00038F0E <AmiBlitz3.ab2@23303>    MOVE.l #$f23c5000,d1
00038F12 <AmiBlitz3.ab2@23304>    BSR writelong
00038F16 <AmiBlitz3.ab2@23305>    MOVE.w #0,d1
00038F1A <AmiBlitz3.ab2@23306>    BSR writeword
00038F1E <AmiBlitz3.ab2@23309>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00038F22 <AmiBlitz3.ab2@23310>    BSR.w writeword
00038F28 <AmiBlitz3.ab2@23311>   MOVEA.l currentfunction,A0
00038F2E <AmiBlitz3.ab2@23312>   CMP.l #0,a0
00038F32 <AmiBlitz3.ab2@23313>   BEQ JL_0_D896
00038F38 <AmiBlitz3.ab2@23314>   MOVE.l destpointer,d1
00038F3C <AmiBlitz3.ab2@23315>   SUB.l $e(a0),d1
00038F40 <AmiBlitz3.ab2@23316>   MOVE.l d1,isfunc+1(a0)
00038F46 <AmiBlitz3.ab2@23317>   CMPI.b #$7,$5(A0)
00038F4A <AmiBlitz3.ab2@23318>    BNE.w JL_0_D896
00038F50 <AmiBlitz3.ab2@23319>   MOVE.w putstlen,D1
00038F54 <AmiBlitz3.ab2@23320>    BSR.w writeword
00038F58 <AmiBlitz3.ab2@23321> BRA.w JL_0_D896
00038F5E <AmiBlitz3.ab2@23324> JMP interr
00038F62 <AmiBlitz3.ab2@23327>  CMP.w #-$7FD0,D0
00038F66 <AmiBlitz3.ab2@23328>    BNE.w JL_0_D966
00038F6C <AmiBlitz3.ab2@23329>   MOVE.w proceduremode,D1
00038F70 <AmiBlitz3.ab2@23330>    BNE.w JUMP_interr3
00038F76 <AmiBlitz3.ab2@23331>   TST.b debugmode
00038F7A <AmiBlitz3.ab2@23332>    BEQ.w JL_0_D90A
00038F7C <AmiBlitz3.ab2@23333>   MOVEQ.l #$03,D1
00038F82 <AmiBlitz3.ab2@23334>    JSR writetrap
00038F88 <AmiBlitz3.ab2@23335>   MOVE.w dontwrite,D1
00038F8C <AmiBlitz3.ab2@23336>    BNE.w JL_0_D90A
00038F92 <AmiBlitz3.ab2@23337>   MOVEA.l intcleanat,A0
00038F98 <AmiBlitz3.ab2@23338>   MOVE.l destpointer,(A0)
00038F9C <AmiBlitz3.ab2@23339>   MOVE.w #$C30C,D1
00038FA0 <AmiBlitz3.ab2@23340>    BSR.w Atokejsr
00038FA6 <AmiBlitz3.ab2@23343>   MOVE.w intstring,D1
00038FAA <AmiBlitz3.ab2@23344>    BEQ.w JUMP_interr
00038FAE <AmiBlitz3.ab2@23345>    BPL.w JL_0_D934
00038FB4 <AmiBlitz3.ab2@23346>   MOVE.w intlevel,D1
00038FB8 <AmiBlitz3.ab2@23347>   ORI.w #$7200,D1
00038FBC <AmiBlitz3.ab2@23348>    BSR.w writeword
00038FC0 <AmiBlitz3.ab2@23349>   MOVE.w #$C103,D1
00038FC4 <AmiBlitz3.ab2@23350>    BSR.w Atokejsr
00038FCA <AmiBlitz3.ab2@23351>   CLR.w intlevel
00038FD0 <AmiBlitz3.ab2@23354>  CLR.w intstring
00038FD6 <AmiBlitz3.ab2@23355>   MOVE.l intfin,D1
00038FDA <AmiBlitz3.ab2@23356>    BSR.w writelong
00038FE0 <AmiBlitz3.ab2@23357>   MOVE.l #$70004E75,D1
00038FE4 <AmiBlitz3.ab2@23358>    BSR.w writelong
00038FEA <AmiBlitz3.ab2@23359>   MOVE.w dontwrite,D1
00038FEE <AmiBlitz3.ab2@23360>    BNE.w JL_0_D962
00038FF4 <AmiBlitz3.ab2@23361>   MOVEA.l intjmpat,A0
00038FF8 <AmiBlitz3.ab2@23362>   MOVE.l destpointer(PC),(A0)
00038FFE <AmiBlitz3.ab2@23365> JMP get1bytemain
00039002 <AmiBlitz3.ab2@23369>   CMP.w #-$7FF2,D0
00039006 <AmiBlitz3.ab2@23370>    BEQ.w doendsel
0003900A <AmiBlitz3.ab2@23371>   CMP.w #-$7F4C,D0
0003900E <AmiBlitz3.ab2@23372>    BNE.w JL_0_D97C
00039014 <AmiBlitz3.ab2@23373> JMP doendseterr
0003901A <AmiBlitz3.ab2@23377> JMP syntaxerr
00039020 <AmiBlitz3.ab2@23381>   TST.w dirmode
00039024 <AmiBlitz3.ab2@23382>   BNE.w JUMP_baddirerr
00039028 <AmiBlitz3.ab2@23383>   MOVE.w #$C800,D1
0003902E <AmiBlitz3.ab2@23384>   JSR Atokejsr                                            ;end
00039036 <AmiBlitz3.ab2@23385>   CMP.l #"noa7",-4(a5)
0003903A <AmiBlitz3.ab2@23386>   BNE 'l10
00039040 <AmiBlitz3.ab2@23387>   TST.w dontwrite
00039044 <AmiBlitz3.ab2@23388>   BNE 'l10
0003904A <AmiBlitz3.ab2@23389>   MOVE.l destpointer,d1
0003904C <AmiBlitz3.ab2@23390>   SUBQ.l #4,d1
0003904E <AmiBlitz3.ab2@23391>   MOVE.l a0,-(a7)
00039050 <AmiBlitz3.ab2@23392>   MOVE.l d1,a0
00039052 <AmiBlitz3.ab2@23393>   MOVE.l (a0),a0
00039058 <AmiBlitz3.ab2@23394>   MOVE.l #$60000002,(a0)+
0003905C <AmiBlitz3.ab2@23395>   MOVE.w #$588f,(a0)
0003905E <AmiBlitz3.ab2@23396>   MOVE.l (a7)+,a0
00039060 <AmiBlitz3.ab2@23399> RTS
00039066 <AmiBlitz3.ab2@23403>   TST.w dirmode                                            ;stop
0003906A <AmiBlitz3.ab2@23404>   BNE.w JUMP_baddirerr
0003906C <AmiBlitz3.ab2@23405>   MOVE.w d0,d1
00039070 <AmiBlitz3.ab2@23406>   BEQ 'l10
00039074 <AmiBlitz3.ab2@23407>   CMP.b #$3a,d0
00039078 <AmiBlitz3.ab2@23408>   BEQ 'l10
0003907E <AmiBlitz3.ab2@23409>   JSR get1bytemain
00039084 <AmiBlitz3.ab2@23412>   TST.b debugmode
00039088 <AmiBlitz3.ab2@23413>   BEQ.w newstop
0003908C <AmiBlitz3.ab2@23414>   MOVE.w #$D501,D1
00039090 <AmiBlitz3.ab2@23415> BRA.w Atokejsr
00039092 <AmiBlitz3.ab2@23419>     RTS
00039094 <AmiBlitz3.ab2@23421>   MOVE.w d1,d0
00039098 <AmiBlitz3.ab2@23422>   BEQ 'l10
0003909C <AmiBlitz3.ab2@23423>   CMP.b #$3a,d0
000390A0 <AmiBlitz3.ab2@23424>   BEQ 'l10
000390A4 <AmiBlitz3.ab2@23425>   SUB.b #$30,d0
000390A8 <AmiBlitz3.ab2@23426>   MOVE.w #$4e40,d1
000390AC <AmiBlitz3.ab2@23427> BRA 'l11
000390B0 <AmiBlitz3.ab2@23430>   MOVE.w #$4e4a,d1
000390B4 <AmiBlitz3.ab2@23431> BRA writeword
000390B6 <AmiBlitz3.ab2@23434>   ADD.b d0,d1
000390BA <AmiBlitz3.ab2@23435> BRA writeword
000390C0 <AmiBlitz3.ab2@23439> JMP badconterr
000390C4 <AmiBlitz3.ab2@23442>   MOVE.w #$4E71,D1
000390C8 <AmiBlitz3.ab2@23443> BRA.w writeword
000390CE <AmiBlitz3.ab2@23446>   MOVEA.l firstfor,A2
000390D4 <AmiBlitz3.ab2@23447>   CLR.l firstfor
000390DA <AmiBlitz3.ab2@23448>   MOVEA.l _execbase,A6
000390DE <AmiBlitz3.ab2@23451>   CMPA.w #$0,A2
000390E2 <AmiBlitz3.ab2@23452>   BEQ.w JL_0_D9E6
000390E4 <AmiBlitz3.ab2@23453>   MOVEA.l A2,A1
000390E6 <AmiBlitz3.ab2@23454>   MOVEA.l (A1),A2
000390E8 <AmiBlitz3.ab2@23455>   MOVEQ.l #$00,D0
000390EE <AmiBlitz3.ab2@23456>   MOVE.l mempool2,a0
000390F2 <AmiBlitz3.ab2@23457>   MOVE.b $10(A1),D0
000390F6 <AmiBlitz3.ab2@23458>   JSR _FreePooled(A6)                                      ;freememfor_error
000390FA <AmiBlitz3.ab2@23459> BRA.w JL_0_D9CC
000390FC <AmiBlitz3.ab2@23462> RTS
00039102 <AmiBlitz3.ab2@23466> JMP badpenderr
00039108 <AmiBlitz3.ab2@23472>   MOVE.w proceduremode,D1
0003910C <AmiBlitz3.ab2@23473>    BEQ.w JUMP_badpenderr
00039112 <AmiBlitz3.ab2@23475>   MOVE.w dontwrite,D1
00039116 <AmiBlitz3.ab2@23476>    BNE.w JL_0_DA1A
0003911C <AmiBlitz3.ab2@23477>   MOVEA.l firstpend,A2
00039120 <AmiBlitz3.ab2@23480>   CMPA.w #$0,A2
00039124 <AmiBlitz3.ab2@23481>    BEQ.w JL_0_DA1A
00039128 <AmiBlitz3.ab2@23482>   MOVEA.l $4(A2),A0
0003912E <AmiBlitz3.ab2@23483>   MOVE.l destpointer,(A0)
00039130 <AmiBlitz3.ab2@23484>   MOVEA.l (A2),A2
00039134 <AmiBlitz3.ab2@23485> BRA.w JL_0_DA02
0003913A <AmiBlitz3.ab2@23488>   TST.b debugmode
0003913E <AmiBlitz3.ab2@23489>    BEQ.b JL_0_DA2A
00039140 <AmiBlitz3.ab2@23490>   MOVEQ.l #$05,D1
00039146 <AmiBlitz3.ab2@23491>   JSR writetrap
0003914C <AmiBlitz3.ab2@23494>   MOVEA.l firstlocal,A2                                    ;firstlocal
00039152 <AmiBlitz3.ab2@23495>   JSR calcstatic2b                                           ;calcstatic
00039158 <AmiBlitz3.ab2@23496>   MOVEA.l currentfunction,A0
0003915E <AmiBlitz3.ab2@23497>   MOVE.l destpointer,d1
00039162 <AmiBlitz3.ab2@23498>   SUB.l $e(a0),d1
00039166 <AmiBlitz3.ab2@23499>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
0003916A <AmiBlitz3.ab2@23500>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00039170 <AmiBlitz3.ab2@23501>   MOVE.l D3,locdatast
00039176 <AmiBlitz3.ab2@23502>   MOVEA.l tempvm,A1
0003917C <AmiBlitz3.ab2@23503>  CLR.b infunctioncode
00039182 <AmiBlitz3.ab2@23504>   MOVE.l firstiffstore,d1
00039188 <AmiBlitz3.ab2@23505>   CMP.l firstiff,d1
0003918C <AmiBlitz3.ab2@23506>   BNE JUMP_noenderr
00039190 <AmiBlitz3.ab2@23507>   TST.w $C(A1)                                             ;dim
00039194 <AmiBlitz3.ab2@23508>    BPL.w JL_0_DA64
0003919A <AmiBlitz3.ab2@23509>  BSET #$7,$8(A0)
0003919E <AmiBlitz3.ab2@23510>   MOVE.w #$C005,D1
000391A2 <AmiBlitz3.ab2@23511>    BSR.w tokejsr2                                          ;writefreememstatement
000391A6 <AmiBlitz3.ab2@23512> BRA.w JL_0_DA6C
000391AC <AmiBlitz3.ab2@23515> JMP noenderr
000391B4 <AmiBlitz3.ab2@23518>   MOVE.w memlibstat,$C(A1)
000391BA <AmiBlitz3.ab2@23521>   MOVEA.l currentfunction,A0
000391BE <AmiBlitz3.ab2@23522>   MOVE.l $E(A0),-(A7)
000391C6 <AmiBlitz3.ab2@23523>   MOVE.w locvaroff,$6(A0)
000391CC <AmiBlitz3.ab2@23524>   BCLR #$1,$7(A0)
000391D2 <AmiBlitz3.ab2@23525>   BCLR #$0,$7(A0)
000391D8 <AmiBlitz3.ab2@23526>   CMPI.b #$7,$5(A0)
000391DC <AmiBlitz3.ab2@23527>    BNE.w JL_0_DA9E
000391E2 <AmiBlitz3.ab2@23528>   MOVE.w getstlen,D1
000391E6 <AmiBlitz3.ab2@23529>    BSR.w writeword
000391EA <AmiBlitz3.ab2@23532>   TST.w $6(A0)
000391EE <AmiBlitz3.ab2@23533>    BEQ.w JL_0_DAB8
000391F2 <AmiBlitz3.ab2@23534>   MOVE.w #$FC7B,D1
000391F8 <AmiBlitz3.ab2@23535>    JSR uselib
000391FE <AmiBlitz3.ab2@23536>   MOVE.w unlinka4,D1
00039202 <AmiBlitz3.ab2@23537>    BSR.w writeword
00039208 <AmiBlitz3.ab2@23540>   MOVEA.l currentfunction,A0
0003920A <AmiBlitz3.ab2@23541>   MOVEQ.l #$00,D1
0003920E <AmiBlitz3.ab2@23542>   MOVE.b $4(A0),D1
00039210 <AmiBlitz3.ab2@23543>   LSR.w #4,D1
00039214 <AmiBlitz3.ab2@23544>    BEQ.w JL_0_DB24
00039216 <AmiBlitz3.ab2@23546>      LSL.w #1,d1
0003921A <AmiBlitz3.ab2@23548>   CMP.w #$1,D1
0003921E <AmiBlitz3.ab2@23549>    BNE.w JL_0_DAE0
00039224 <AmiBlitz3.ab2@23550>   MOVE.w fix1,D1
00039228 <AmiBlitz3.ab2@23551>    BSR.w writeword
0003922C <AmiBlitz3.ab2@23552> BRA.w JL_0_DB24
0003922E <AmiBlitz3.ab2@23555>   LSL.w #2,D1
00039230 <AmiBlitz3.ab2@23556>   MOVE.w D1,-(A7)
00039236 <AmiBlitz3.ab2@23557>   MOVE.w D1,moverts+2
0003923C <AmiBlitz3.ab2@23558>   MOVE.l moverts,D1
00039240 <AmiBlitz3.ab2@23559>    BSR.w writelong
00039242 <AmiBlitz3.ab2@23560>   MOVE.w (A7)+,D1
00039246 <AmiBlitz3.ab2@23561>   CMP.w #$8,D1
0003924A <AmiBlitz3.ab2@23562>    BHI.w JL_0_DB14
0003924E <AmiBlitz3.ab2@23563>   ANDI.w #$7,D1
00039250 <AmiBlitz3.ab2@23564>   LSL.w #8,D1
00039252 <AmiBlitz3.ab2@23565>   LSL.w #1,D1
00039258 <AmiBlitz3.ab2@23566>   OR.w fixq,D1
0003925C <AmiBlitz3.ab2@23567>    BSR.w writeword
00039260 <AmiBlitz3.ab2@23568> BRA.w JL_0_DB24
00039266 <AmiBlitz3.ab2@23572>    MOVE.w D1,fixstack+2
0003926C <AmiBlitz3.ab2@23573>   MOVE.l fixstack,D1
00039270 <AmiBlitz3.ab2@23574>    BSR.w writelong
00039274 <AmiBlitz3.ab2@23577>    BSR.w JL_0_D2CA
00039278 <AmiBlitz3.ab2@23578>    BSR.w JL_0_D4F8
0003927A <AmiBlitz3.ab2@23579>   MOVEA.l (A7)+,A0
00039280 <AmiBlitz3.ab2@23580>   MOVE.w dontwrite,D1
00039284 <AmiBlitz3.ab2@23581>    BNE.w JL_0_DB3E
0003928A <AmiBlitz3.ab2@23582>   MOVE.l destpointer,-(A0)
00039290 <AmiBlitz3.ab2@23585>   CLR.w proceduremode
00039296 <AmiBlitz3.ab2@23586>   CLR.l currentfunction
0003929C <AmiBlitz3.ab2@23587>   CLR.w procnum
000392A0 <AmiBlitz3.ab2@23588>    BSR.w JL_0_DB5C
000392A6 <AmiBlitz3.ab2@23589>    JSR freepends
000392AC <AmiBlitz3.ab2@23590> JMP get1bytemain
000392AE <AmiBlitz3.ab2@23593>   MOVEQ.l #$0C,D0
000392B0 <AmiBlitz3.ab2@23594>   MOVEQ.l #$01,D1
000392B6 <AmiBlitz3.ab2@23595>   MOVEA.l _execbase,A6
000392BC <AmiBlitz3.ab2@23597>   MOVE.l mempool,a0
000392C0 <AmiBlitz3.ab2@23598>   JSR _AllocPooled(a6)
000392C2 <AmiBlitz3.ab2@23599>   MOVEA.l D0,A0
000392C8 <AmiBlitz3.ab2@23600>   MOVE.l alllocals,(A0)
000392CE <AmiBlitz3.ab2@23601>   MOVE.l A0,alllocals
000392D4 <AmiBlitz3.ab2@23602>   MOVE.l firstlocal,D0
000392DA <AmiBlitz3.ab2@23603>   CLR.l firstlocal
000392DE <AmiBlitz3.ab2@23604>   MOVE.l D0,$4(A0)
000392E4 <AmiBlitz3.ab2@23605>   MOVE.l firstglob,D1
000392EA <AmiBlitz3.ab2@23606>   CLR.l firstglob
000392EE <AmiBlitz3.ab2@23607>   MOVE.l D1,$8(A0)
000392F4 <AmiBlitz3.ab2@23608>   TST.b debugmode
000392F8 <AmiBlitz3.ab2@23609>    BEQ.b JL_0_DBB0
000392FE <AmiBlitz3.ab2@23610>   TST.w dontwrite
00039302 <AmiBlitz3.ab2@23611>    BNE.b JL_0_DBB0
00039306 <AmiBlitz3.ab2@23612>   MOVEA.l proclocals(PC),A0
00039308 <AmiBlitz3.ab2@23613>   MOVE.l D0,(A0)+
0003930A <AmiBlitz3.ab2@23614>   MOVE.l D1,(A0)
0003930C <AmiBlitz3.ab2@23617> RTS
00039312 <AmiBlitz3.ab2@23620> JMP baddirerr
00039318 <AmiBlitz3.ab2@23624>   TST.w dirmode
0003931C <AmiBlitz3.ab2@23625>    BNE.w JUMP_baddirerr
00039322 <AmiBlitz3.ab2@23626>   MOVE.l firstfor,D1
00039326 <AmiBlitz3.ab2@23627>    BEQ.w JUMP_noforerr
0003932C <AmiBlitz3.ab2@23628>   JSR reget
00039330 <AmiBlitz3.ab2@23629>    BEQ.w JL_0_DC18
00039334 <AmiBlitz3.ab2@23632>   BSR.w getparameter
00039338 <AmiBlitz3.ab2@23633>   MOVEA.l firstfor(PC),A2
0003933A <AmiBlitz3.ab2@23634>   MOVEQ.l #$00,D1
0003933E <AmiBlitz3.ab2@23635>   MOVE.b $10(A2),D1
00039342 <AmiBlitz3.ab2@23636>   SUBI.w #$12,D1
00039344 <AmiBlitz3.ab2@23637>   CMP.w D1,D2
00039348 <AmiBlitz3.ab2@23638>    BNE.w JUMP_noforerr
0003934C <AmiBlitz3.ab2@23639>   LEA ptr_parameterstore(PC),A0
00039350 <AmiBlitz3.ab2@23640>   LEA $11(A2),A1
00039352 <AmiBlitz3.ab2@23641>   SUBQ.w #1,D2
00039354 <AmiBlitz3.ab2@23644>     CMPM.b (A0)+,(A1)+
00039358 <AmiBlitz3.ab2@23645>     BNE.w JUMP_noforerr
0003935C <AmiBlitz3.ab2@23646>   DBF D2,JL_0_DBF0
00039360 <AmiBlitz3.ab2@23648>    BSR.w JL_0_DC1A
00039366 <AmiBlitz3.ab2@23649>    JSR reget
0003936A <AmiBlitz3.ab2@23650>    BEQ.w JL_0_DC16
0003936E <AmiBlitz3.ab2@23651>   CMP.w #$2C,D0
00039372 <AmiBlitz3.ab2@23652>    BNE.w JUMP_syntaxerr
00039378 <AmiBlitz3.ab2@23653>    JSR get1bytemain
0003937C <AmiBlitz3.ab2@23654> BRA.w JL_0_DBCE
00039382 <AmiBlitz3.ab2@23657> JMP noforerr
00039384 <AmiBlitz3.ab2@23660> RTS
00039388 <AmiBlitz3.ab2@23664>   MOVE.l 8(a7),a2
0003938C <AmiBlitz3.ab2@23665>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00039390 <AmiBlitz3.ab2@23666>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00039394 <AmiBlitz3.ab2@23667>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00039396 <AmiBlitz3.ab2@23671>   MOVEA.l D1,A2
0003939C <AmiBlitz3.ab2@23674>   JSR popnext                                           ;error checking for next.
000393A0 <AmiBlitz3.ab2@23675>   MOVE.w $C(A2),D0
000393A6 <AmiBlitz3.ab2@23676>   LEA nextb,A0
000393AC <AmiBlitz3.ab2@23677>   LEA nextbf,A1
000393B0 <AmiBlitz3.ab2@23678>   CMP.w #$1,D0
000393B4 <AmiBlitz3.ab2@23679>    BEQ.w JL_0_DC74
000393BA <AmiBlitz3.ab2@23680>   LEA nextw,A0
000393C0 <AmiBlitz3.ab2@23681>   LEA nextwf,A1
000393C4 <AmiBlitz3.ab2@23682>   CMP.w #$2,D0
000393C8 <AmiBlitz3.ab2@23683>    BEQ.w JL_0_DC74
000393CE <AmiBlitz3.ab2@23684>   LEA nextl,A0
000393D4 <AmiBlitz3.ab2@23685>   LEA nextlf,A1
000393D8 <AmiBlitz3.ab2@23686>   CMP.w #$5,D0
000393DC <AmiBlitz3.ab2@23687>    BNE.w JL_0_DC74
000393E2 <AmiBlitz3.ab2@23688>    TST.b fpu
000393E6 <AmiBlitz3.ab2@23689>    BEQ 'old
000393EC <AmiBlitz3.ab2@23690>    LEA fpu2dats,a0                                         ;fpu next code
000393F2 <AmiBlitz3.ab2@23691>    LEA fpu2date,a1
000393F6 <AmiBlitz3.ab2@23692> BRA JL_0_DC74
000393FA <AmiBlitz3.ab2@23695>   MOVE.w #$C900,D1
000393FE <AmiBlitz3.ab2@23696>    BSR.w Atokejsr
00039404 <AmiBlitz3.ab2@23697>   LEA nextf,A0
0003940A <AmiBlitz3.ab2@23698>   LEA nextff,A1
0003940E <AmiBlitz3.ab2@23701>   BSR.w pokecode
00039414 <AmiBlitz3.ab2@23702>     TST.b fast                                             ;fast for next deactivate
00039418 <AmiBlitz3.ab2@23703> BRA 'l1
0003941E <AmiBlitz3.ab2@23705>     TST.b onestep
00039422 <AmiBlitz3.ab2@23706>     BEQ 'l1
00039428 <AmiBlitz3.ab2@23707>     CLR.b onestep
0003942E <AmiBlitz3.ab2@23708>     SUBQ.l #4,destpointer
00039432 <AmiBlitz3.ab2@23709>     MOVE.w #$5292,d1
00039436 <AmiBlitz3.ab2@23710>     BSR writeword
0003943A <AmiBlitz3.ab2@23713>   MOVE.l JL_0_DCF4(PC),D1
0003943E <AmiBlitz3.ab2@23714>    BSR.w writelong
00039444 <AmiBlitz3.ab2@23715>   MOVEA.l firstfor,A2
0003944A <AmiBlitz3.ab2@23716>   MOVE.l (A2),firstfor
0003944E <AmiBlitz3.ab2@23717>   MOVEA.l $8(A2),A0
00039454 <AmiBlitz3.ab2@23718>   MOVEA.l destpointer,A1
00039456 <AmiBlitz3.ab2@23719>   MOVE.l A1,D1
00039458 <AmiBlitz3.ab2@23720>   SUB.l A0,D1
0003945A <AmiBlitz3.ab2@23721>   ADDQ.l #2,D1
00039460 <AmiBlitz3.ab2@23722>   CMP.l #MinWordSgnd,D1
00039464 <AmiBlitz3.ab2@23723>    BCC.w JUMP_bigforerr
0003946A <AmiBlitz3.ab2@23724>   TST.w dontwrite
0003946E <AmiBlitz3.ab2@23725>    BNE.w JL_0_DCB4
00039472 <AmiBlitz3.ab2@23726>   MOVE.w D1,-$2(A0)
00039474 <AmiBlitz3.ab2@23729>   MOVE.l A1,D1
00039478 <AmiBlitz3.ab2@23730>   SUB.l $4(A2),D1
0003947A <AmiBlitz3.ab2@23731>   SUBQ.l #6,D1
00039480 <AmiBlitz3.ab2@23732>   CMP.l #MinWordSgnd,D1
00039484 <AmiBlitz3.ab2@23733>    BCC.w JUMP_bigforerr
0003948A <AmiBlitz3.ab2@23734>   TST.w dontwrite
0003948E <AmiBlitz3.ab2@23735>    BNE.w JL_0_DCD6
00039490 <AmiBlitz3.ab2@23736>   NEG.w D1
00039494 <AmiBlitz3.ab2@23737>   MOVE.w D1,-$2(A1)
0003949A <AmiBlitz3.ab2@23740>   JSR popnext3
000394A0 <AmiBlitz3.ab2@23741>   MOVEA.l _execbase,A6
000394A2 <AmiBlitz3.ab2@23742>   MOVEA.l A2,A1
000394A4 <AmiBlitz3.ab2@23743>   MOVEQ.l #$00,D0
000394A8 <AmiBlitz3.ab2@23744>   MOVE.b $10(A1),D0
000394AE <AmiBlitz3.ab2@23745>   MOVE.l mempool2,a0
000394B2 <AmiBlitz3.ab2@23746>   JSR _FreePooled(A6)
000394B8 <AmiBlitz3.ab2@23747> JMP reget
000394BE <AmiBlitz3.ab2@23750> JMP notallowd
000394C4 <AmiBlitz3.ab2@23753> JMP bigforerr
000394C8 <AmiBlitz3.ab2@23760>   MOVE.w #$664F,-(A7)
000394CC <AmiBlitz3.ab2@23763> BRA.w JL_0_DCF4
000394D2 <AmiBlitz3.ab2@23766> JMP error_dublicate_for
000394D6 <AmiBlitz3.ab2@23769> forlineat:   Ds.l 1
000394D8 <AmiBlitz3.ab2@23770> fortemp:     Ds.w 1
000394DE <AmiBlitz3.ab2@23777>   CLR.l fp0addr
000394E4 <AmiBlitz3.ab2@23778>   TST.w dirmode
000394E8 <AmiBlitz3.ab2@23779>    BNE.w JUMP_baddirerr
000394F2 <AmiBlitz3.ab2@23780>   MOVE.l linenumat,forlineat
000394F8 <AmiBlitz3.ab2@23784>   MOVE.l A5,letstart
000394FC <AmiBlitz3.ab2@23785>   BSR.w getparameter
00039502 <AmiBlitz3.ab2@23786>   MOVE.w D2,fortemp
00039508 <AmiBlitz3.ab2@23787>   JSR findfor
0003950C <AmiBlitz3.ab2@23788>    BEQ.w JUMP_error_dublicate_for
00039512 <AmiBlitz3.ab2@23789>   LEA firstfor,A2
00039518 <AmiBlitz3.ab2@23790>   JSR addhere2
0003951A <AmiBlitz3.ab2@23791>   MOVE.l A2,-(A7)
00039520 <AmiBlitz3.ab2@23792>   TST.b debugmode
00039524 <AmiBlitz3.ab2@23793>    BEQ.b JL_0_DD4C
0003952A <AmiBlitz3.ab2@23794>   JSR chkstak
00039530 <AmiBlitz3.ab2@23795>   MOVE.l AJL_0_DCF0,D1
00039536 <AmiBlitz3.ab2@23796>   JSR  writelong
0003953A <AmiBlitz3.ab2@23799>   MOVE.w fortemp(PC),D2
00039542 <AmiBlitz3.ab2@23800>   MOVE.b #1,formode
00039546 <AmiBlitz3.ab2@23801>   BSR.w AJL_0_DEA6                                         ;for get 1. value
0003954C <AmiBlitz3.ab2@23802>   CLR.b formode
00039550 <AmiBlitz3.ab2@23803>   CMP.w #-$7FE8,D0
00039554 <AmiBlitz3.ab2@23804>    BNE.w JUMP_syntaxerr
0003955A <AmiBlitz3.ab2@23805>   MOVE.w commode,D1
0003955E <AmiBlitz3.ab2@23806>    BNE.w JUMP_syntaxerr
00039562 <AmiBlitz3.ab2@23807>   CMP.b #$6,D2
00039566 <AmiBlitz3.ab2@23808>    BCC.w JUMP_badforerr
0003956A <AmiBlitz3.ab2@23809>   BTST #$F,D2
0003956E <AmiBlitz3.ab2@23810>    BNE.w JL_0_DD86
00039574 <AmiBlitz3.ab2@23811>   MOVE.w leaamp,D1
0003957A <AmiBlitz3.ab2@23812>   JSR pokewda5s
0003957C <AmiBlitz3.ab2@23813>   MOVE.w D3,D1
00039582 <AmiBlitz3.ab2@23814>   JSR  writeword
00039588 <AmiBlitz3.ab2@23817>   MOVE.w pushindex,D1
0003958E <AmiBlitz3.ab2@23818>   JSR  writeword
00039592 <AmiBlitz3.ab2@23819>   ANDI.w #$FF,D2
00039594 <AmiBlitz3.ab2@23821>   MOVEA.l (A7),A1
00039598 <AmiBlitz3.ab2@23822>   MOVE.w D2,$C(A1)
0003959A <AmiBlitz3.ab2@23823>   MOVE.w D2,-(A7)
0003959E <AmiBlitz3.ab2@23824>    BSR.w eval
000395A4 <AmiBlitz3.ab2@23825>    CLR.b onestep
000395A8 <AmiBlitz3.ab2@23826>    CMP.w #$8019,d0
000395AC <AmiBlitz3.ab2@23827>    BEQ 'l1
000395B4 <AmiBlitz3.ab2@23828>    MOVE.b #1,onestep
000395B6 <AmiBlitz3.ab2@23831>   MOVE.w (A7),D2
000395BC <AmiBlitz3.ab2@23832>   MOVE.w pushd0l,D1
000395C0 <AmiBlitz3.ab2@23833>   CMP.w #$3,D2
000395C4 <AmiBlitz3.ab2@23834>    BCC.w JL_0_DDB6
000395CA <AmiBlitz3.ab2@23835>   MOVE.w pushd0wd,D1
000395CC <AmiBlitz3.ab2@23838>    MOVE.w D1,-(A7)
000395D2 <AmiBlitz3.ab2@23839>    TST.b fpu
000395D6 <AmiBlitz3.ab2@23840>    BEQ 'old
000395DA <AmiBlitz3.ab2@23841>    CMP.b #5,d2
000395DE <AmiBlitz3.ab2@23842>    BNE 'old
000395E4 <AmiBlitz3.ab2@23843>    MOVE.l #$f2276400,d1
000395EA <AmiBlitz3.ab2@23845>    JSR writelong
000395EE <AmiBlitz3.ab2@23846> BRA 'weit
000395F4 <AmiBlitz3.ab2@23849>    JSR  writeword                                          ;fpu for end value
000395F8 <AmiBlitz3.ab2@23852>   CMP.w #-$7FE7,D0
000395FC <AmiBlitz3.ab2@23853>    BNE.w JL_0_DDCC
00039600 <AmiBlitz3.ab2@23854>    BSR.w eval
00039606 <AmiBlitz3.ab2@23855>    TST.b fpu
0003960A <AmiBlitz3.ab2@23856>    BEQ JL_0_DE0C
0003960E <AmiBlitz3.ab2@23857>    CMP.b #5,d2
00039612 <AmiBlitz3.ab2@23858>    BNE JL_0_DE0C
00039618 <AmiBlitz3.ab2@23859>    MOVE.l #$f2276400,d1                                    ;write step <> 1
0003961E <AmiBlitz3.ab2@23861>   JSR writelong
00039620 <AmiBlitz3.ab2@23864>    MOVE.w (a7)+,d1
00039624 <AmiBlitz3.ab2@23865> BRA fpur
00039628 <AmiBlitz3.ab2@23868>   CMP.w #$4,D2
0003962C <AmiBlitz3.ab2@23869>    BCC.w JL_0_DDE0
00039630 <AmiBlitz3.ab2@23870>   MOVE.w #$7001,D1
00039636 <AmiBlitz3.ab2@23871>   JSR writeword
0003963A <AmiBlitz3.ab2@23872> BRA.w JL_0_DE0C
00039640 <AmiBlitz3.ab2@23875> JMP badforerr
00039644 <AmiBlitz3.ab2@23878>   BNE.w JL_0_DDFA
00039648 <AmiBlitz3.ab2@23879>   MOVE.w #$7001,D1
0003964E <AmiBlitz3.ab2@23880>   JSR writeword
00039654 <AmiBlitz3.ab2@23881>   MOVE.w swapd0,D1
0003965A <AmiBlitz3.ab2@23882>   JSR writeword
0003965E <AmiBlitz3.ab2@23883> BRA.w JL_0_DE0C
00039664 <AmiBlitz3.ab2@23886>   TST.b fpu
00039668 <AmiBlitz3.ab2@23887>    BEQ 'old
0003966C <AmiBlitz3.ab2@23888>   CMP.b #5,d2
00039670 <AmiBlitz3.ab2@23889>    BNE 'old
00039676 <AmiBlitz3.ab2@23890>   MOVE.l #$f23c5000,d1
0003967C <AmiBlitz3.ab2@23891>   JSR writelong
00039680 <AmiBlitz3.ab2@23892>   MOVE.w #$1,d1
00039686 <AmiBlitz3.ab2@23893>   JSR writeword
0003968C <AmiBlitz3.ab2@23894>   MOVE.l #$f2276400,d1
00039692 <AmiBlitz3.ab2@23895>   JSR writelong
00039694 <AmiBlitz3.ab2@23896>   MOVE.w (a7)+,d1
00039698 <AmiBlitz3.ab2@23897> BRA fpur
0003969C <AmiBlitz3.ab2@23900>   MOVE.w #$203C,D1                                         ;write step 1
000396A2 <AmiBlitz3.ab2@23901>   JSR writeword
000396A8 <AmiBlitz3.ab2@23902>   MOVE.l #SA_BackFill,D1                                   ;#$80000041,d1 org source  ;ffp '1'
000396AE <AmiBlitz3.ab2@23903>   JSR writelong
000396B0 <AmiBlitz3.ab2@23906>   MOVE.w (A7)+,D1
000396B6 <AmiBlitz3.ab2@23907>   JSR writeword                                            ;push step on stack
000396B8 <AmiBlitz3.ab2@23910>   MOVE.w (A7)+,D2
000396BA <AmiBlitz3.ab2@23911>   MOVEA.l (A7),A1
000396C2 <AmiBlitz3.ab2@23912>   MOVE.l destpointer,$4(A1)
000396C8 <AmiBlitz3.ab2@23913>   LEA forcompb,A0
000396CE <AmiBlitz3.ab2@23914>   LEA forcompbf,A1
000396D2 <AmiBlitz3.ab2@23915>   CMP.w #$1,D2
000396D6 <AmiBlitz3.ab2@23916>    BEQ.w JL_0_DE7E
000396DC <AmiBlitz3.ab2@23917>   LEA forcompw,A0
000396E2 <AmiBlitz3.ab2@23918>   LEA forcompwf,A1
000396E6 <AmiBlitz3.ab2@23919>   CMP.w #$2,D2
000396EA <AmiBlitz3.ab2@23920>    BEQ.w JL_0_DE7E
000396F0 <AmiBlitz3.ab2@23921>   LEA forcompl,A0
000396F6 <AmiBlitz3.ab2@23922>   LEA forcomplf,A1
000396FA <AmiBlitz3.ab2@23923>   CMP.w #$5,D2
000396FE <AmiBlitz3.ab2@23924>    BNE.w JL_0_DE7E
00039704 <AmiBlitz3.ab2@23925>   TST.b fpu
00039708 <AmiBlitz3.ab2@23926>    BEQ 'old
0003970E <AmiBlitz3.ab2@23927>   LEA fpu_start,a0
00039714 <AmiBlitz3.ab2@23928>   LEA fpu_end,a1
0003971A <AmiBlitz3.ab2@23929>   JSR pokecode
0003971E <AmiBlitz3.ab2@23930> BRA fpu3
00039724 <AmiBlitz3.ab2@23933>   LEA forcompf,A0                                         ;
0003972A <AmiBlitz3.ab2@23934>   LEA forcompff,A1
00039730 <AmiBlitz3.ab2@23935>   JSR pokecode
00039734 <AmiBlitz3.ab2@23936>   MOVE.w #$C900,D1
00039738 <AmiBlitz3.ab2@23937>   BSR.w Atokejsr
0003973E <AmiBlitz3.ab2@23938>   LEA forcompf2,A0
00039744 <AmiBlitz3.ab2@23939>   LEA forcompf2f,A1
0003974A <AmiBlitz3.ab2@23942>   JSR pokecode
00039750 <AmiBlitz3.ab2@23943>   TST.b fast                                               ;fast for next
00039754 <AmiBlitz3.ab2@23944>    BEQ 's1
00039758 <AmiBlitz3.ab2@23945>   CMP.w #3,d2
0003975C <AmiBlitz3.ab2@23946>    BNE 's1
00039762 <AmiBlitz3.ab2@23947>   TST.b onestep
00039766 <AmiBlitz3.ab2@23948>    BEQ 's1
00039770 <AmiBlitz3.ab2@23949>   SUB.l #10,destpointer
00039774 <AmiBlitz3.ab2@23950>   MOVE.w #$b081,d1
0003977A <AmiBlitz3.ab2@23951>   JSR writeword
0003977E <AmiBlitz3.ab2@23955>   MOVE.l thebgt(PC),D1
00039784 <AmiBlitz3.ab2@23956>   JSR writelong
00039786 <AmiBlitz3.ab2@23959>   MOVEA.l (A7)+,A1
0003978E <AmiBlitz3.ab2@23960>   MOVE.l destpointer,$8(A1)
00039794 <AmiBlitz3.ab2@23961> JMP reget
00039798 <AmiBlitz3.ab2@23964>   MOVEA.l 8(a7),a2
0003979C <AmiBlitz3.ab2@23965>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
000397A2 <AmiBlitz3.ab2@23966>   fmove.s 4(a7),fp1
000397A6 <AmiBlitz3.ab2@23967>   BTST.b #7,(a7)
000397AA <AmiBlitz3.ab2@23968>   BNE 'negi
000397AE <AmiBlitz3.ab2@23969>   fcmp.x fp1,fp0
000397B2 <AmiBlitz3.ab2@23970> BRA 'negi2
000397B6 <AmiBlitz3.ab2@23973>   fcmp.x fp0,fp1
000397BA <AmiBlitz3.ab2@23976>   Dc.l $f2920000                                           ;fbgt.w
000397BE <AmiBlitz3.ab2@23980>   BGT.w thebgt
000397C4 <AmiBlitz3.ab2@23983>   MOVE.l A5,letstart
000397C8 <AmiBlitz3.ab2@23984>   BSR.w getparameter
000397D2 <AmiBlitz3.ab2@23990>   MOVE.l destpointer,pushpc
000397DC <AmiBlitz3.ab2@23991>   MOVE.l hunkoffsetbase,pushoff
000397E4 <AmiBlitz3.ab2@23992>   MOVE.w #$0001,regnum
000397EA <AmiBlitz3.ab2@23993>   JSR JL_0_8E3C
000397F0 <AmiBlitz3.ab2@23994>   JSR calcvar
000397F6 <AmiBlitz3.ab2@23995>   TST.b formode
000397FA <AmiBlitz3.ab2@23996>   BEQ 'lf1
00039800 <AmiBlitz3.ab2@23997>   CMP.l #newtype_double,A2
00039804 <AmiBlitz3.ab2@23998>   BEQ JUMP_notallowd
0003980A <AmiBlitz3.ab2@23999>   MOVE.l a2,currtype
00039810 <AmiBlitz3.ab2@24002>   CLR.w startoffsetmore
00039814 <AmiBlitz3.ab2@24003>   CMP.w #$3d,d0
00039818 <AmiBlitz3.ab2@24004>   BNE 'l1a
0003981C <AmiBlitz3.ab2@24005>   BTST #15,d2
00039820 <AmiBlitz3.ab2@24006>   BEQ 'l1a
00039824 <AmiBlitz3.ab2@24007>   CMP.b #1,d2
00039828 <AmiBlitz3.ab2@24008>   BNE 'l1a
00039832 <AmiBlitz3.ab2@24009>   MOVE.w leaa0a0+2,startoffsetmore
00039838 <AmiBlitz3.ab2@24012>   CLR.w regnum
0003983C <AmiBlitz3.ab2@24013>   BSR.w JL_0_B5D2
00039842 <AmiBlitz3.ab2@24014>   CLR.w commode
00039848 <AmiBlitz3.ab2@24015>   CLR.w stackcorrect
0003984E <AmiBlitz3.ab2@24016>   CLR.w pcodd
00039854 <AmiBlitz3.ab2@24017>   MOVE.w startoffsetmore,d1
00039858 <AmiBlitz3.ab2@24018>   BTST #0,d1
0003985C <AmiBlitz3.ab2@24019>   BEQ 'l2a
00039864 <AmiBlitz3.ab2@24020>   MOVE.w #1,pcodd
00039868 <AmiBlitz3.ab2@24023>   CMP.w #$3D,D0                                            ;=
0003986C <AmiBlitz3.ab2@24024>   BEQ.w JL_0_DEE0
0003986E <AmiBlitz3.ab2@24027>   MOVE.b (a5)+,d1
00039872 <AmiBlitz3.ab2@24028>   BEQ 'l10
00039876 <AmiBlitz3.ab2@24029>   CMP.b #":",d1
0003987A <AmiBlitz3.ab2@24030>   BEQ 'l10
0003987E <AmiBlitz3.ab2@24031>   CMP.b #";",d1
00039882 <AmiBlitz3.ab2@24032>   BEQ 'l10
00039886 <AmiBlitz3.ab2@24033>   CMP.b #"0",d1
0003988A <AmiBlitz3.ab2@24034>   BLT 'l11
0003988E <AmiBlitz3.ab2@24035>   CMP.b #"9",d1
00039892 <AmiBlitz3.ab2@24036>   BGT 'l11
00039896 <AmiBlitz3.ab2@24037> BRA.s 'l1
0003989E <AmiBlitz3.ab2@24040>   MOVE.b #1,quickadd
000398A4 <AmiBlitz3.ab2@24043>   MOVEA.l letstart,A5
000398A6 <AmiBlitz3.ab2@24044>   SUBQ.w #1,A5
000398AA <AmiBlitz3.ab2@24047>   CMP.b #$7,D2
000398AE <AmiBlitz3.ab2@24048>    BNE.w JL_0_DF8A
000398B2 <AmiBlitz3.ab2@24054>   MOVEM.w D2-D3,-(A7)
000398B8 <AmiBlitz3.ab2@24055>   MOVE.l lastoffset_org,-(A7)
000398BE <AmiBlitz3.ab2@24056>   MOVE.w varmode,-(A7)
000398C8 <AmiBlitz3.ab2@24058>    MOVE.l #forthstack,forthsp
000398D2 <AmiBlitz3.ab2@24059>    MOVE.l #precstack,precsp
000398D8 <AmiBlitz3.ab2@24060>    CLR.w regnum
000398DE <AmiBlitz3.ab2@24061>    CLR.w nonew
000398E4 <AmiBlitz3.ab2@24062>    CLR.w sbasegot
000398EE <AmiBlitz3.ab2@24063>    MOVE.w varcodelen,oldvcodelen
000398F4 <AmiBlitz3.ab2@24064>    CLR.w varcodelen
000398FC <AmiBlitz3.ab2@24065>    MOVE.w #$FFFF,lasta6
000398FE <AmiBlitz3.ab2@24068>   MOVEQ.l #$07,D2
00039902 <AmiBlitz3.ab2@24069>    BSR.w eval
00039908 <AmiBlitz3.ab2@24070>   MOVE.w (A7)+,varmode
0003990E <AmiBlitz3.ab2@24071>   MOVE.l (A7)+,lastoffset_org
00039914 <AmiBlitz3.ab2@24072>   MOVE.w moved0a3,D1
0003991A <AmiBlitz3.ab2@24073>    JSR writeword
00039920 <AmiBlitz3.ab2@24074>   MOVE.w commode,D1
00039924 <AmiBlitz3.ab2@24075>    BEQ.w JL_0_DF38
0003992A <AmiBlitz3.ab2@24076>   LEA pulla2st,A0
00039930 <AmiBlitz3.ab2@24077>   LEA pulla2stf,A1
00039936 <AmiBlitz3.ab2@24078>    JSR pokecode
0003993A <AmiBlitz3.ab2@24079> BRA.w JL_0_DF3C
0003993E <AmiBlitz3.ab2@24082>   BSR.w JL_0_B63C
00039942 <AmiBlitz3.ab2@24085>   MOVEM.w (A7)+,D2-D3
00039946 <AmiBlitz3.ab2@24086>   BTST #$F,D2
0003994A <AmiBlitz3.ab2@24087>   BNE.w JL_0_DF58
00039950 <AmiBlitz3.ab2@24088>     MOVE.w D3,leaa5d3a2+2
00039956 <AmiBlitz3.ab2@24089>     MOVE.l leaa5d3a2,D1
0003995C <AmiBlitz3.ab2@24090>     JSR pokela5s
00039960 <AmiBlitz3.ab2@24093>   MOVE.w #$FE6F,D1
00039966 <AmiBlitz3.ab2@24094>   JSR uselib
0003996C <AmiBlitz3.ab2@24095>   MOVE.l #$C700,D1
00039972 <AmiBlitz3.ab2@24096>   MOVE.l d1,lastinstruction
00039978 <AmiBlitz3.ab2@24097>   MOVE.w varmode,D2
0003997C <AmiBlitz3.ab2@24098>   BNE.w JL_0_DF70
0003997E <AmiBlitz3.ab2@24099>     ADDQ.w #1,D1
00039982 <AmiBlitz3.ab2@24102>   BSR.w Atokejsr
00039986 <AmiBlitz3.ab2@24103>   CMP.w #$2C,D0
0003998A <AmiBlitz3.ab2@24104>   BNE.w JL_0_E0C6
00039990 <AmiBlitz3.ab2@24106>   MOVE.w addq4a2,D1
00039996 <AmiBlitz3.ab2@24107>   JSR writeword
0003999A <AmiBlitz3.ab2@24108> BRA.w JL_0_E018
000399A0 <AmiBlitz3.ab2@24111> JMP error4char
000399A6 <AmiBlitz3.ab2@24114> JMP error_convert_types
000399AA <AmiBlitz3.ab2@24118>    BTST #$E,D2
000399AE <AmiBlitz3.ab2@24119>    BNE.w JL_0_DF9C
000399B0 <AmiBlitz3.ab2@24120>   TST.b D2
000399B4 <AmiBlitz3.ab2@24121>    BEQ.w JUMP_noleterr
000399BA <AmiBlitz3.ab2@24122>    TST.b newsyntax
000399BE <AmiBlitz3.ab2@24123>    BEQ JL_0_DFA0
000399C2 <AmiBlitz3.ab2@24126>    CMP.w #$4022,(a5)
000399C6 <AmiBlitz3.ab2@24127>    BNE JL_0_DFA0
000399CC <AmiBlitz3.ab2@24128>    CMP.l #3,d2
000399D0 <AmiBlitz3.ab2@24129>    BNE  JUMP_error_convert_types
000399D2 <AmiBlitz3.ab2@24130>    ADDQ #2,a5
000399D4 <AmiBlitz3.ab2@24131>    MOVEQ #0,d0
000399D6 <AmiBlitz3.ab2@24132>    MOVE.b (a5)+,d0
000399DA <AmiBlitz3.ab2@24133>    BEQ JL_0_DFA0
000399DE <AmiBlitz3.ab2@24134>    CMP.b #$22,d0
000399E2 <AmiBlitz3.ab2@24135>    BNE 'l1
000399E6 <AmiBlitz3.ab2@24136>    MOVE.b #0,d0
000399EA <AmiBlitz3.ab2@24137> BRA 'do
000399EC <AmiBlitz3.ab2@24140>   ASL.l #8,d0
000399EE <AmiBlitz3.ab2@24141>    MOVE.b (a5)+,d0
000399F2 <AmiBlitz3.ab2@24142>    BEQ JL_0_DFA0
000399F6 <AmiBlitz3.ab2@24143>    CMP.b #$22,d0
000399FA <AmiBlitz3.ab2@24144>    BNE 'l2
000399FE <AmiBlitz3.ab2@24145>    MOVE.b #0,d0
00039A00 <AmiBlitz3.ab2@24146>    ASR.l #8,d0
00039A04 <AmiBlitz3.ab2@24147> BRA 'do
00039A06 <AmiBlitz3.ab2@24150>   ASL.l #8,d0
00039A08 <AmiBlitz3.ab2@24151>     MOVE.b (a5)+,d0
00039A0C <AmiBlitz3.ab2@24152>    BEQ JL_0_DFA0
00039A10 <AmiBlitz3.ab2@24153>    CMP.b #$22,d0
00039A14 <AmiBlitz3.ab2@24154>    BNE 'l3
00039A18 <AmiBlitz3.ab2@24155>    MOVE.b #0,d0
00039A1A <AmiBlitz3.ab2@24156>    ASR.l #8,d0
00039A1E <AmiBlitz3.ab2@24157> BRA 'do
00039A20 <AmiBlitz3.ab2@24160>   ASL.l #8,d0
00039A22 <AmiBlitz3.ab2@24161>     MOVE.b (a5)+,d0
00039A26 <AmiBlitz3.ab2@24162>    BEQ JL_0_DFA0
00039A2A <AmiBlitz3.ab2@24163>    CMP.b #$22,d0
00039A2E <AmiBlitz3.ab2@24164>    BNE 'l4
00039A32 <AmiBlitz3.ab2@24165>    MOVE.b #0,d0
00039A34 <AmiBlitz3.ab2@24166>    ASR.l #8,d0
00039A38 <AmiBlitz3.ab2@24167> BRA 'do
00039A3C <AmiBlitz3.ab2@24170>    CMP.b #$22,(a5)+
00039A40 <AmiBlitz3.ab2@24171>    BNE JUMP_error4char
00039A44 <AmiBlitz3.ab2@24174>   MOVE.w #$2b7c,d1
00039A4A <AmiBlitz3.ab2@24175>    TST.w varmode
00039A4E <AmiBlitz3.ab2@24176>    BEQ 'g3
00039A52 <AmiBlitz3.ab2@24177>    BCLR #9,d1
00039A58 <AmiBlitz3.ab2@24180>     JSR writeword
00039A5A <AmiBlitz3.ab2@24181>     MOVE.l d0,d1
00039A60 <AmiBlitz3.ab2@24182>     JSR writelong
00039A62 <AmiBlitz3.ab2@24183>     MOVE.w d3,d1
00039A68 <AmiBlitz3.ab2@24184>     JSR writeword
00039A6E <AmiBlitz3.ab2@24185>     JSR get1bytemain
00039A70 <AmiBlitz3.ab2@24186> RTS
00039A76 <AmiBlitz3.ab2@24192> JMP noleterr
00039A7C <AmiBlitz3.ab2@24196>   MOVE.w d2,vartype
00039A80 <AmiBlitz3.ab2@24197>   MOVE.b #$3,D2
00039A84 <AmiBlitz3.ab2@24200>   CMP.b #5,d2
00039A88 <AmiBlitz3.ab2@24201>   BNE 'l1
00039A8E <AmiBlitz3.ab2@24202>   MOVE.l a2,currtype
00039A92 <AmiBlitz3.ab2@24206>   MOVEM.w D2-D3,-(A7)
00039A98 <AmiBlitz3.ab2@24207>   MOVE.w varmode,-(A7)
00039A9C <AmiBlitz3.ab2@24208>   ANDI.w #$FF,D2
00039AA2 <AmiBlitz3.ab2@24209>   MOVE.l lastoffset_org,-(A7)
00039AA6 <AmiBlitz3.ab2@24210>    BSR.w eval
00039AAC <AmiBlitz3.ab2@24211>   MOVE.l (A7)+,lastoffset_org
00039AB2 <AmiBlitz3.ab2@24212>   MOVE.w commode,D1
00039AB6 <AmiBlitz3.ab2@24213>    BNE.w JL_0_DFCC
00039ABA <AmiBlitz3.ab2@24214>    BSR.w JL_0_B63C
00039AC0 <AmiBlitz3.ab2@24217>   MOVE.w (A7)+,varmode
00039AC4 <AmiBlitz3.ab2@24218>   MOVEM.w (A7)+,D2-D3
00039AC8 <AmiBlitz3.ab2@24220>   MOVE.w #$2B40,D1
00039ACE <AmiBlitz3.ab2@24221>   MOVE.w varmode,D4
00039AD2 <AmiBlitz3.ab2@24222>    BEQ.w JL_0_DFE8
00039AD6 <AmiBlitz3.ab2@24223>   BCLR #$9,D1
00039ADA <AmiBlitz3.ab2@24226>   BTST #$F,D2
00039ADE <AmiBlitz3.ab2@24227>    BEQ.w JL_0_E090
00039AE4 <AmiBlitz3.ab2@24228>    TST.b stackcorrect
00039AE8 <AmiBlitz3.ab2@24229>    BNE 'st1
00039AEE <AmiBlitz3.ab2@24230>   MOVE.w commode,D1
00039AF2 <AmiBlitz3.ab2@24231>    BEQ.w JL_0_E004
00039AF8 <AmiBlitz3.ab2@24234>   MOVE.w pulla2,D1
00039AFE <AmiBlitz3.ab2@24235>    JSR writeword
00039B02 <AmiBlitz3.ab2@24238>   MOVE.w #$2480,D1
00039B06 <AmiBlitz3.ab2@24239>    MOVEM.l a0/d0,-(a7)
00039B0C <AmiBlitz3.ab2@24240>    MOVEA.l lastoffset_org,A0
00039B0E <AmiBlitz3.ab2@24241>    MOVE.l A0,D0
00039B12 <AmiBlitz3.ab2@24242>    BEQ.w 'skip
00039B14 <AmiBlitz3.ab2@24243>    MOVEA.l D0,A0
00039B1C <AmiBlitz3.ab2@24244>    MOVE.l $A(A0),currtype
00039B20 <AmiBlitz3.ab2@24247>   MOVEM.l (a7)+,a0/d0
00039B24 <AmiBlitz3.ab2@24248>   CMP.w #$2C,D0
00039B28 <AmiBlitz3.ab2@24249>    BNE.w JL_0_E090
00039B2C <AmiBlitz3.ab2@24250>     MOVE.w #$24C0,D1
00039B30 <AmiBlitz3.ab2@24251>    BSR.w JL_0_E090                                         ;write store
00039B36 <AmiBlitz3.ab2@24254>    MOVE.l lastoffset_org,D0
00039B3E <AmiBlitz3.ab2@24258>   MOVE.w #$FFFF,commode
00039B44 <AmiBlitz3.ab2@24259>   CLR.w varcodelen
00039B4C <AmiBlitz3.ab2@24260>   MOVE.b #1,optiarray
00039B52 <AmiBlitz3.ab2@24261>   MOVE.w pusha2,D1
00039B58 <AmiBlitz3.ab2@24262>    JSR writeword
00039B5E <AmiBlitz3.ab2@24263>   TST.l lastoffset_org
00039B62 <AmiBlitz3.ab2@24264>   BEQ dimmore
00039B68 <AmiBlitz3.ab2@24265>   MOVEA.l lastoffset_org,A0
00039B6A <AmiBlitz3.ab2@24266>   MOVE.l (A0),D0
00039B6E <AmiBlitz3.ab2@24267>    BEQ.w JUMP_comerr
00039B70 <AmiBlitz3.ab2@24268>   MOVEA.l D0,A0
00039B76 <AmiBlitz3.ab2@24269>   MOVE.l A0,lastoffset_org
00039B7C <AmiBlitz3.ab2@24270>   BTST #$1,$7(A0)
00039B80 <AmiBlitz3.ab2@24271>    BNE.w JUMP_nocomerr
00039B84 <AmiBlitz3.ab2@24272>   MOVEA.l $A(A0),A1
00039B88 <AmiBlitz3.ab2@24273>   MOVE.l $4(A1),D2
00039B8E <AmiBlitz3.ab2@24276>   BTST #$0,$7(A0)
00039B92 <AmiBlitz3.ab2@24277>    BNE.w JL_0_E078
00039B98 <AmiBlitz3.ab2@24278>   CMP.l #$100,D2
00039B9C <AmiBlitz3.ab2@24279>    BCC.l JUMP_nocomerr
00039BA0 <AmiBlitz3.ab2@24280> BRA.w JL_0_E088
00039BA6 <AmiBlitz3.ab2@24283>         CLR.b optiarray
00039BAA <AmiBlitz3.ab2@24284>         CMP.w #"@@",(a5)
00039BAE <AmiBlitz3.ab2@24285>         BEQ 'n1
00039BB2 <AmiBlitz3.ab2@24286> BRA 'd1
00039BB8 <AmiBlitz3.ab2@24289>   JSR nextline
00039BBA <AmiBlitz3.ab2@24290>         MOVE.l a5,-(a7)
00039BBC <AmiBlitz3.ab2@24293>   MOVE.b (a5)+,d0
00039BC0 <AmiBlitz3.ab2@24294>         CMP.b #$20,d0
00039BC4 <AmiBlitz3.ab2@24295>         BEQ 'l2
00039BC6 <AmiBlitz3.ab2@24296>         MOVE.l (a7)+,a5
00039BCA <AmiBlitz3.ab2@24297>         CMP.b #";",d0
00039BCE <AmiBlitz3.ab2@24298>         BEQ 'n1
00039BD4 <AmiBlitz3.ab2@24301>         TST.w debugmode
00039BD8 <AmiBlitz3.ab2@24302>         BEQ JL_0_DEE0
00039BDA <AmiBlitz3.ab2@24303>         MOVE.l a0,-(a7)
00039BE0 <AmiBlitz3.ab2@24304>         MOVE.l pushat,a0
00039BE6 <AmiBlitz3.ab2@24305>         CMP.l #0,a0
00039BEA <AmiBlitz3.ab2@24306>         BNE 'o1
00039BEE <AmiBlitz3.ab2@24307> BRA 'skip
00039BF6 <AmiBlitz3.ab2@24310>         ADD.l #1,2(a0)
00039BFC <AmiBlitz3.ab2@24313>   CLR.w commode
00039C04 <AmiBlitz3.ab2@24314>         MOVE.b #1,stackcorrect
00039C06 <AmiBlitz3.ab2@24315>         MOVE.l (a7)+,a0
00039C0C <AmiBlitz3.ab2@24316> JMP JL_0_DEE0
00039C12 <AmiBlitz3.ab2@24319> JMP nocomerr
00039C18 <AmiBlitz3.ab2@24322>   CMP.l #$100,D2
00039C1C <AmiBlitz3.ab2@24323>    BCS.w JL_0_E084
00039C1E <AmiBlitz3.ab2@24324>   MOVEQ.l #$00,D2
00039C22 <AmiBlitz3.ab2@24327>   BSET #$E,D2
00039C26 <AmiBlitz3.ab2@24330>   BSET #$F,D2
00039C2A <AmiBlitz3.ab2@24331> BRA.w JL_0_DEE0
00039C30 <AmiBlitz3.ab2@24334>    MOVE.l destpointer,a4
00039C38 <AmiBlitz3.ab2@24335>    MOVE.l #$f22a6400,-4(a4)
00039C3E <AmiBlitz3.ab2@24336>    MOVE.w arrayoffset,d1
00039C44 <AmiBlitz3.ab2@24337> JMP writeword
00039C4A <AmiBlitz3.ab2@24340> JMP comerr
00039C50 <AmiBlitz3.ab2@24343>    TST.b fpu
00039C54 <AmiBlitz3.ab2@24344>    BEQ 'nofloat
00039C58 <AmiBlitz3.ab2@24345>    CMP.b #5,d2
00039C5C <AmiBlitz3.ab2@24346>    BNE 'nofloat
00039C62 <AmiBlitz3.ab2@24347>    CLR.w fp0var
00039C68 <AmiBlitz3.ab2@24348>    LEA regtable,a4
00039C6A <AmiBlitz3.ab2@24349>    TST.l (a4)
00039C6E <AmiBlitz3.ab2@24350>    BEQ 'noreg
00039C72 <AmiBlitz3.ab2@24351>    BTST #15,d2                                             ;regvars
00039C76 <AmiBlitz3.ab2@24352>    BNE 'noreg
00039C7A <AmiBlitz3.ab2@24353>    CMP.w 0+4(a4),d3
00039C7E <AmiBlitz3.ab2@24354>    BNE 'doreg1
00039C84 <AmiBlitz3.ab2@24355>    MOVE.l #$f2000380,d1
00039C8A <AmiBlitz3.ab2@24356>    MOVE.w regnum,d0
00039C8E <AmiBlitz3.ab2@24357>    BNE 'noopt
00039C94 <AmiBlitz3.ab2@24363>    MOVE.l destpointer,a4
00039C9C <AmiBlitz3.ab2@24364>    CMP.l #$f2001c80,-8(a4)
00039CA0 <AmiBlitz3.ab2@24365>    BNE 'noopt
00039CA8 <AmiBlitz3.ab2@24366>    CMP.l #$f2000422,-4(a4)
00039CAC <AmiBlitz3.ab2@24367>    BNE 'noopt
00039CB2 <AmiBlitz3.ab2@24368>    MOVE.l #$f20003a2,d1
00039CBC <AmiBlitz3.ab2@24369>    SUB.l #8,destpointer
00039CBE <AmiBlitz3.ab2@24372>    ASL.w #7,d0
00039CC0 <AmiBlitz3.ab2@24373>    OR.w d0,d1
00039CC6 <AmiBlitz3.ab2@24374>    JSR writelong
00039CC8 <AmiBlitz3.ab2@24375> RTS
00039CCC <AmiBlitz3.ab2@24378>   CMP.w 8+4(a4),d3
00039CD0 <AmiBlitz3.ab2@24379>    BNE 'doreg2
00039CD6 <AmiBlitz3.ab2@24380>    MOVE.l #$f2000300,d1
00039CDC <AmiBlitz3.ab2@24381>    MOVE.w regnum,d0
00039CDE <AmiBlitz3.ab2@24382>    ASL.w #7,d0
00039CE0 <AmiBlitz3.ab2@24383>    OR.w d0,d1
00039CE6 <AmiBlitz3.ab2@24384>    JSR writelong
00039CE8 <AmiBlitz3.ab2@24385> RTS
00039CEC <AmiBlitz3.ab2@24388>   CMP.w 16+4(a4),d3
00039CF0 <AmiBlitz3.ab2@24389>    BNE 'doreg3
00039CF6 <AmiBlitz3.ab2@24390>    MOVE.l #$f2000280,d1
00039CFC <AmiBlitz3.ab2@24391>    MOVE.w regnum,d0
00039CFE <AmiBlitz3.ab2@24392>    ASL.w #7,d0
00039D00 <AmiBlitz3.ab2@24393>    OR.w d0,d1
00039D06 <AmiBlitz3.ab2@24394>    JSR  writelong
00039D08 <AmiBlitz3.ab2@24395>  RTS
00039D0C <AmiBlitz3.ab2@24398>   CMP.w 24+4(a4),d3
00039D10 <AmiBlitz3.ab2@24399>    BNE 'doreg4
00039D16 <AmiBlitz3.ab2@24400>    MOVE.l #$f2000200,d1
00039D1C <AmiBlitz3.ab2@24401>    MOVE.w regnum,d0
00039D1E <AmiBlitz3.ab2@24402>    ASL.w #7,d0
00039D20 <AmiBlitz3.ab2@24403>    OR.w d0,d1
00039D26 <AmiBlitz3.ab2@24404>    JSR writelong
00039D28 <AmiBlitz3.ab2@24405> RTS
00039D2C <AmiBlitz3.ab2@24408>   CMP.w 32+4(a4),d3
00039D30 <AmiBlitz3.ab2@24409>    BNE 'noreg
00039D36 <AmiBlitz3.ab2@24410>    MOVE.l #$f2000180,d1
00039D3C <AmiBlitz3.ab2@24411>    MOVE.w regnum,d0
00039D3E <AmiBlitz3.ab2@24412>    ASL.w #7,d0
00039D40 <AmiBlitz3.ab2@24413>    OR.w d0,d1
00039D46 <AmiBlitz3.ab2@24414>    JSR writelong
00039D48 <AmiBlitz3.ab2@24415> RTS
00039D4E <AmiBlitz3.ab2@24418>    TST.w regnum
00039D52 <AmiBlitz3.ab2@24419>    BNE 'nofp0
00039D58 <AmiBlitz3.ab2@24420>    MOVE.l destpointer ,a4
00039D60 <AmiBlitz3.ab2@24421>    CMP.l #$f2304400,-6(a4)
00039D64 <AmiBlitz3.ab2@24422>    BNE 'do
00039D6A <AmiBlitz3.ab2@24423>    CMP.w #$1990,-2(a4)
00039D6E <AmiBlitz3.ab2@24424>    BNE 'do
00039D72 <AmiBlitz3.ab2@24425>    BTST #15,d2                                             ;types ?
00039D76 <AmiBlitz3.ab2@24426>    BNE 'do
00039D7C <AmiBlitz3.ab2@24427>   MOVE.l #$2b701990,d1                                     ;var
00039D82 <AmiBlitz3.ab2@24428>   TST.w varmode
00039D86 <AmiBlitz3.ab2@24429>   BEQ 'glob1
00039D8A <AmiBlitz3.ab2@24430>   BCLR #25,d1
00039D8E <AmiBlitz3.ab2@24433>   MOVE.l d1,-6(a4)
00039D92 <AmiBlitz3.ab2@24434>   MOVE.w d3,-2(a4)
00039D98 <AmiBlitz3.ab2@24435>   CLR.w fp0var
00039DA0 <AmiBlitz3.ab2@24436>   MOVE.w #$ffff,fp0mode
00039DA2 <AmiBlitz3.ab2@24437> RTS
00039DAA <AmiBlitz3.ab2@24440>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00039DAE <AmiBlitz3.ab2@24441>    BNE 'do3
00039DB8 <AmiBlitz3.ab2@24442>    CMP.l #newtype_double,currtype
00039DBC <AmiBlitz3.ab2@24443>    BEQ 'do4
00039DC0 <AmiBlitz3.ab2@24446>   MOVE.w #$2b6d,d1
00039DC6 <AmiBlitz3.ab2@24447>    TST.w varmode
00039DCA <AmiBlitz3.ab2@24448>    BEQ 'g2
00039DCE <AmiBlitz3.ab2@24449>     BCLR #9,d1
00039DD2 <AmiBlitz3.ab2@24452>     CMP.w #$2b6d,d1
00039DD6 <AmiBlitz3.ab2@24453>     BNE 'd1
00039DDA <AmiBlitz3.ab2@24454>     CMP.w -2(a4),d3
00039DDE <AmiBlitz3.ab2@24455>     BNE 'd1
00039DE4 <AmiBlitz3.ab2@24456>     SUBQ.l #6,destpointer
00039DE8 <AmiBlitz3.ab2@24457> BRA 'd12
00039DEC <AmiBlitz3.ab2@24460>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00039DF2 <AmiBlitz3.ab2@24461>     MOVE.w -2(a4),-4(a4)
00039DF6 <AmiBlitz3.ab2@24462>     MOVE.w d3,-2(a4)
00039DFC <AmiBlitz3.ab2@24465>   CLR.w fp0var
00039E04 <AmiBlitz3.ab2@24466>     MOVE.w #$ffff,fp0mode
00039E06 <AmiBlitz3.ab2@24467> RTS
00039E0E <AmiBlitz3.ab2@24470>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00039E12 <AmiBlitz3.ab2@24471>    BNE 'do4
00039E16 <AmiBlitz3.ab2@24472>    MOVE.w #$2b6c,d1
00039E1C <AmiBlitz3.ab2@24473>       TST.w varmode
00039E20 <AmiBlitz3.ab2@24474>    BEQ 'g3
00039E24 <AmiBlitz3.ab2@24475>    BCLR #9,d1
00039E28 <AmiBlitz3.ab2@24478>   MOVE.w d1,-6(a4)
00039E2E <AmiBlitz3.ab2@24479>     MOVE.w -2(a4),-4(a4)
00039E32 <AmiBlitz3.ab2@24480>     MOVE.w d3,-2(a4)
00039E38 <AmiBlitz3.ab2@24481>     CLR.w fp0var
00039E40 <AmiBlitz3.ab2@24482>     MOVE.w #$ffff,fp0mode
00039E42 <AmiBlitz3.ab2@24483> RTS
00039E48 <AmiBlitz3.ab2@24486>   MOVE.w d3,fp0var
00039E52 <AmiBlitz3.ab2@24487>    MOVE.w varmode,fp0mode
00039E54 <AmiBlitz3.ab2@24488>    ADDQ.l #6,a4
00039E5A <AmiBlitz3.ab2@24489>    MOVE.l a4,fp0addr
00039E64 <AmiBlitz3.ab2@24490>    MOVE.l firstiff,fp0iff
00039E68 <AmiBlitz3.ab2@24493>   MOVEM.l d0/d4,-(a7)
00039E6A <AmiBlitz3.ab2@24494>    MOVEQ #0,d0
00039E70 <AmiBlitz3.ab2@24495>     MOVE.w regnum,d0
00039E72 <AmiBlitz3.ab2@24496>    ASL.w #7,d0                                             ;fpu store var
00039E76 <AmiBlitz3.ab2@24497>   BTST #15,d2
00039E7A <AmiBlitz3.ab2@24498>    BEQ 'var
00039E7C <AmiBlitz3.ab2@24499>    MOVE.w d1,d4
00039E80 <AmiBlitz3.ab2@24500>    CMP.w #$24c0,d4
00039E84 <AmiBlitz3.ab2@24501>    BNE 'nopl
00039E8A <AmiBlitz3.ab2@24502>    MOVE.l #$f21a6400,d1
00039E8C <AmiBlitz3.ab2@24503>    MOVEQ #0,d3
00039E90 <AmiBlitz3.ab2@24504> BRA 'glob
00039E96 <AmiBlitz3.ab2@24508>   MOVE.l #$f2126400,d1
00039E98 <AmiBlitz3.ab2@24509>    TST.w d3                                                ;offset =0
00039E9C <AmiBlitz3.ab2@24510>    BNE 'offset
00039EA2 <AmiBlitz3.ab2@24511>    MOVE.l #$f2126400,d1
00039EA4 <AmiBlitz3.ab2@24519>    MOVEQ #0,d3
00039EA8 <AmiBlitz3.ab2@24520> BRA 'glob
00039EAE <AmiBlitz3.ab2@24523>   MOVE.l #$f22d6400,d1                                     ;var
00039EB4 <AmiBlitz3.ab2@24524>   TST.w varmode
00039EB8 <AmiBlitz3.ab2@24525>   BEQ 'glob
00039EBC <AmiBlitz3.ab2@24526>   BCLR #16,d1
00039EBE <AmiBlitz3.ab2@24527>  'glob OR.l d0,d1
00039EC8 <AmiBlitz3.ab2@24530>   CMP.l #newtype_double,currtype
00039ECC <AmiBlitz3.ab2@24531>   BNE 'dbl1
00039ED2 <AmiBlitz3.ab2@24532>   OR.l #$00001000,d1
00039ED8 <AmiBlitz3.ab2@24535>   JSR writelong
00039EDE <AmiBlitz3.ab2@24536>   CLR.l currtype
00039EE2 <AmiBlitz3.ab2@24537>   MOVEM.l (a7)+,d0/d4
00039EE4 <AmiBlitz3.ab2@24538>   MOVE.l d3,d1
00039EE8 <AmiBlitz3.ab2@24539>   BEQ 'nooffs
00039EEE <AmiBlitz3.ab2@24540> JMP writeword
00039EF0 <AmiBlitz3.ab2@24543> RTS
00039EF6 <AmiBlitz3.ab2@24557>     TST.b fast                                             ;write lea->xx(a2)
00039EFA <AmiBlitz3.ab2@24558>    BEQ 'la10
00039F00 <AmiBlitz3.ab2@24562>    TST.b quickadd
00039F06 <AmiBlitz3.ab2@24564>      CLR.b quickadd
00039F0A <AmiBlitz3.ab2@24565>    CMP.w #$2480,d1
00039F0E <AmiBlitz3.ab2@24566>    BNE 'la10
00039F14 <AmiBlitz3.ab2@24567>    TST.b optiarray
00039F18 <AmiBlitz3.ab2@24568>    BNE 'la10
00039F1E <AmiBlitz3.ab2@24569>    MOVE.l destpointer,a4
00039F24 <AmiBlitz3.ab2@24570>    CMP.w #$45ea,-4(a4)
00039F28 <AmiBlitz3.ab2@24571>    BNE 'la10
00039F30 <AmiBlitz3.ab2@24572>    CMP.w #8,pushclen
00039F34 <AmiBlitz3.ab2@24573>    BEQ 'la100
00039F3C <AmiBlitz3.ab2@24574>    CMP.w #6,pushclen
00039F40 <AmiBlitz3.ab2@24575>    BNE 'la10
00039F44 <AmiBlitz3.ab2@24576>    CMP.b #3,d2
00039F48 <AmiBlitz3.ab2@24577>    BCS 'la110
00039F4E <AmiBlitz3.ab2@24579>    MOVE.w #$2540,-2(a4)
00039F54 <AmiBlitz3.ab2@24580>    MOVE.w arrayoffset,d1
00039F5A <AmiBlitz3.ab2@24581> JMP writeword
00039F60 <AmiBlitz3.ab2@24584>    CLR.b quickadd
00039F62 <AmiBlitz3.ab2@24585> RTS
00039F66 <AmiBlitz3.ab2@24588>    CMP.b #2,d2
00039F6A <AmiBlitz3.ab2@24589>    BNE 'la120
00039F70 <AmiBlitz3.ab2@24590>     MOVE.w #$3540,-2(a4)
00039F76 <AmiBlitz3.ab2@24591>    MOVE.w arrayoffset,d1
00039F7C <AmiBlitz3.ab2@24592> JMP writeword
00039F80 <AmiBlitz3.ab2@24595>   CMP.b #1,d2
00039F84 <AmiBlitz3.ab2@24596>    BNE.s 'la10
00039F8A <AmiBlitz3.ab2@24597>     MOVE.w #$1540,-2(a4)
00039F90 <AmiBlitz3.ab2@24598>    MOVE.w arrayoffset,d1
00039F96 <AmiBlitz3.ab2@24599> JMP writeword
00039F9A <AmiBlitz3.ab2@24602>    CMP.b #3,d2
00039F9E <AmiBlitz3.ab2@24603>    BCS 'la11
00039FA4 <AmiBlitz3.ab2@24604>    MOVE.w #$2540,-4(a4)
00039FA6 <AmiBlitz3.ab2@24605> RTS
00039FAA <AmiBlitz3.ab2@24608>    CMP.b #2,d2
00039FAE <AmiBlitz3.ab2@24609>    BNE 'la12
00039FB4 <AmiBlitz3.ab2@24610>     MOVE.w #$3540,-4(a4)
00039FB6 <AmiBlitz3.ab2@24611> RTS
00039FBA <AmiBlitz3.ab2@24613>  'la12 CMP.b #1,d2
00039FBE <AmiBlitz3.ab2@24614>    BNE.s 'la10
00039FC4 <AmiBlitz3.ab2@24615>     MOVE.w #$1540,-4(a4)
00039FC6 <AmiBlitz3.ab2@24616> RTS
00039FCC <AmiBlitz3.ab2@24619>   CLR.b optiarray
00039FD0 <AmiBlitz3.ab2@24620>    CMP.b #$1,D2
00039FD4 <AmiBlitz3.ab2@24621>    BEQ.w JL_0_E0AC
00039FD8 <AmiBlitz3.ab2@24622>    BSR.w varalign
00039FDC <AmiBlitz3.ab2@24623>    CMP.b #$3,D2
00039FE0 <AmiBlitz3.ab2@24624>    BCC.w writevarlong
00039FE6 <AmiBlitz3.ab2@24625>    TST.b fast                                              ;optiimmi
00039FEA <AmiBlitz3.ab2@24626>    BEQ 'l10b
00039FF0 <AmiBlitz3.ab2@24631>    MOVE.l destpointer,a0
00039FF6 <AmiBlitz3.ab2@24632>    SUB.l imm_addr,a0
00039FFC <AmiBlitz3.ab2@24633>    CMP.l #4,a0
0003A000 <AmiBlitz3.ab2@24634>    BNE 'l10
0003A006 <AmiBlitz3.ab2@24635>    CLR.l imm_addr
0003A00C <AmiBlitz3.ab2@24636>    MOVE.l destpointer,a4
0003A010 <AmiBlitz3.ab2@24637>    OR.w #$107c,d1
0003A014 <AmiBlitz3.ab2@24638>    MOVE.w d1,-4(a4)
0003A016 <AmiBlitz3.ab2@24639>     MOVE.w D3,D1
0003A01C <AmiBlitz3.ab2@24640> JMP writeword
0003A022 <AmiBlitz3.ab2@24643>   MOVE.l destpointer,a0
0003A028 <AmiBlitz3.ab2@24644>   SUB.l load_var_addr,a0
0003A02E <AmiBlitz3.ab2@24645>   CMP.l #4,a0
0003A032 <AmiBlitz3.ab2@24646>   BNE 'l10b
0003A038 <AmiBlitz3.ab2@24647>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
0003A03C <AmiBlitz3.ab2@24648>   BNE 'l10b
0003A042 <AmiBlitz3.ab2@24650>   CLR.l load_var_addr
0003A048 <AmiBlitz3.ab2@24651>   MOVE.l destpointer,a4
0003A04C <AmiBlitz3.ab2@24652>   OR.w #$102d,d1
0003A050 <AmiBlitz3.ab2@24653>   MOVE.w d1,-4(a4)
0003A052 <AmiBlitz3.ab2@24654>   MOVE.w d3,d1
0003A058 <AmiBlitz3.ab2@24655> JMP writeword
0003A05C <AmiBlitz3.ab2@24658>   ORI.w #$1000,D1                                          ;word
0003A060 <AmiBlitz3.ab2@24659> BRA.w writestorevar
0003A066 <AmiBlitz3.ab2@24663>    TST.b fast                                              ;optiimmi
0003A06A <AmiBlitz3.ab2@24664>    BEQ 'l10b
0003A070 <AmiBlitz3.ab2@24669>    MOVE.l destpointer,a0
0003A076 <AmiBlitz3.ab2@24670>    SUB.l imm_addr,a0
0003A07C <AmiBlitz3.ab2@24671>    CMP.l #4,a0
0003A080 <AmiBlitz3.ab2@24672>    BNE 'l10
0003A086 <AmiBlitz3.ab2@24673>    CLR.l imm_addr
0003A08C <AmiBlitz3.ab2@24674>    MOVE.l destpointer,a4
0003A090 <AmiBlitz3.ab2@24675>    OR.w #$7c,d1
0003A094 <AmiBlitz3.ab2@24676>    EORI #$3000,d1
0003A098 <AmiBlitz3.ab2@24677>    MOVE.w d1,-4(a4)
0003A09A <AmiBlitz3.ab2@24678>       MOVE.w D3,D1
0003A0A0 <AmiBlitz3.ab2@24679> JMP writeword
0003A0A6 <AmiBlitz3.ab2@24682>   MOVE.l destpointer,a0
0003A0AC <AmiBlitz3.ab2@24683>   SUB.l load_var_addr,a0
0003A0B2 <AmiBlitz3.ab2@24684>   CMP.l #4,a0
0003A0B6 <AmiBlitz3.ab2@24685>   BNE 'l10b
0003A0BC <AmiBlitz3.ab2@24686>   CLR.l load_var_addr
0003A0C2 <AmiBlitz3.ab2@24687>   MOVE.l destpointer,a4
0003A0C8 <AmiBlitz3.ab2@24688>    CMP.w #$1b6d,-4(a4)
0003A0CC <AmiBlitz3.ab2@24689>    BNE 'l10b
0003A0D0 <AmiBlitz3.ab2@24690>    OR.w #$2d,d1
0003A0D4 <AmiBlitz3.ab2@24691>    EORI #$3000,d1
0003A0D8 <AmiBlitz3.ab2@24692>    MOVE.w d1,-4(a4)
0003A0DA <AmiBlitz3.ab2@24693>   MOVE.w d3,d1
0003A0E0 <AmiBlitz3.ab2@24694> JMP writeword
0003A0E6 <AmiBlitz3.ab2@24697>   ADDQ.w #1,pcodd                                          ;byte
0003A0EA <AmiBlitz3.ab2@24698>   EORI.w #$3000,D1
0003A0F0 <AmiBlitz3.ab2@24701>   JSR writeword
0003A0F4 <AmiBlitz3.ab2@24702>   BTST #$7,D1
0003A0F8 <AmiBlitz3.ab2@24703>    BNE JL_0_E0C6
0003A0FA <AmiBlitz3.ab2@24704>   MOVE.w D3,D1
0003A100 <AmiBlitz3.ab2@24705> JMP writeword
0003A106 <AmiBlitz3.ab2@24708>    TST.b fast                                              ;optiimmi
0003A10A <AmiBlitz3.ab2@24709>    BEQ 'l10b
0003A110 <AmiBlitz3.ab2@24713>    MOVE.l destpointer,a0
0003A116 <AmiBlitz3.ab2@24714>    SUB.l imm_addr,a0
0003A11C <AmiBlitz3.ab2@24715>    CMP.l #6,a0
0003A120 <AmiBlitz3.ab2@24716>    BNE 'l10
0003A126 <AmiBlitz3.ab2@24717>    CLR.l imm_addr
0003A12C <AmiBlitz3.ab2@24718>    MOVE.l destpointer,a4
0003A130 <AmiBlitz3.ab2@24719>    OR.w #$7c,d1
0003A134 <AmiBlitz3.ab2@24720>    MOVE.w d1,-6(a4)
0003A136 <AmiBlitz3.ab2@24721>     MOVE.w D3,D1
0003A13C <AmiBlitz3.ab2@24722> JMP writeword
0003A142 <AmiBlitz3.ab2@24725>   MOVE.l destpointer,a0
0003A148 <AmiBlitz3.ab2@24726>   SUB.l load_var_addr,a0
0003A14E <AmiBlitz3.ab2@24727>   CMP.l #4,a0
0003A152 <AmiBlitz3.ab2@24728>   BNE 'l10b
0003A158 <AmiBlitz3.ab2@24729>   CLR.l load_var_addr
0003A15E <AmiBlitz3.ab2@24730>   MOVE.l destpointer,a4
0003A164 <AmiBlitz3.ab2@24731>   CMP.w #$245f,-2(a4)
0003A168 <AmiBlitz3.ab2@24732>   BEQ 'l10b
0003A16C <AmiBlitz3.ab2@24733>   OR.w #$28,d1
0003A170 <AmiBlitz3.ab2@24734>   OR.w d1,-4(a4)
0003A176 <AmiBlitz3.ab2@24735>   CMP.w #$2b6d,-4(a4)
0003A17A <AmiBlitz3.ab2@24736>   BNE 'd1
0003A17E <AmiBlitz3.ab2@24737>   CMP.w -2(a4),d3
0003A182 <AmiBlitz3.ab2@24738>   BNE 'd1
0003A188 <AmiBlitz3.ab2@24739>   SUBQ.l #4,destpointer
0003A18A <AmiBlitz3.ab2@24740> RTS
0003A18C <AmiBlitz3.ab2@24743>   MOVE.w d3,d1
0003A192 <AmiBlitz3.ab2@24744> JMP writeword
0003A198 <AmiBlitz3.ab2@24747>   JSR writeword
0003A19C <AmiBlitz3.ab2@24748>   BTST #$7,D1
0003A1A0 <AmiBlitz3.ab2@24749>    BNE.b JL_0_E0C6
0003A1A2 <AmiBlitz3.ab2@24750>   MOVE.w D3,D1
0003A1A8 <AmiBlitz3.ab2@24751> JMP writeword
0003A1AA <AmiBlitz3.ab2@24754> RTS
0003A1AC <AmiBlitz3.ab2@24758>   MOVE.w D1,-(A7)
0003A1B0 <AmiBlitz3.ab2@24759>   MOVE.w pcodd(PC),D1
0003A1B2 <AmiBlitz3.ab2@24760>   LSR.w #1,D1
0003A1B6 <AmiBlitz3.ab2@24761>    BCC.b JL_0_E0E2
0003A1BC <AmiBlitz3.ab2@24762>   CLR.w pcodd
0003A1C2 <AmiBlitz3.ab2@24763>   MOVE.w add1a2,D1
0003A1C8 <AmiBlitz3.ab2@24764>    JSR writeword
0003A1CA <AmiBlitz3.ab2@24767>   MOVE.w (A7)+,D1
0003A1CC <AmiBlitz3.ab2@24768> RTS
0003A1CE <AmiBlitz3.ab2@24772> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
0003A1D0 <AmiBlitz3.ab2@24775> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
0003A1D2 <AmiBlitz3.ab2@24776> listadd:   Ds.w 1                                          ;set to 8 if it's a list
0003A1D4 <AmiBlitz3.ab2@24777> listsize:  Ds.w 1
0003A1DA <AmiBlitz3.ab2@24781>   ADDQ.w #1,regnum
0003A1E2 <AmiBlitz3.ab2@24782>   MOVE.b #1,nowdeclare
0003A1E8 <AmiBlitz3.ab2@24783>   CLR.b dimkeep
0003A1F0 <AmiBlitz3.ab2@24784>    CMP.l #"KEEP",-1(a5)
0003A1F4 <AmiBlitz3.ab2@24785>   BNE 'nokeep
0003A1FA <AmiBlitz3.ab2@24786>   CMP.b #" ",3(a5)
0003A1FE <AmiBlitz3.ab2@24787>   BNE 'nokeep
0003A200 <AmiBlitz3.ab2@24788>   ADDQ.l #3,a5
0003A204 <AmiBlitz3.ab2@24791>     CMP.b #" ",(a5)
0003A208 <AmiBlitz3.ab2@24792>     BNE '1
0003A20A <AmiBlitz3.ab2@24793>    ADDQ #1,a5
0003A20E <AmiBlitz3.ab2@24794> BRA '2
0003A214 <AmiBlitz3.ab2@24797>   MOVE.l a5,lastsourcepos
0003A21C <AmiBlitz3.ab2@24798>   MOVE.b #1,dimkeep
0003A220 <AmiBlitz3.ab2@24806>   MOVE.w #$FF9A,D1
0003A226 <AmiBlitz3.ab2@24807>   JSR uselib
0003A22C <AmiBlitz3.ab2@24810>   CLR.w listadd
0003A230 <AmiBlitz3.ab2@24811>   CMP.w #-$7F4D,D0
0003A234 <AmiBlitz3.ab2@24812>    BNE.w JL_0_E11E
0003A23C <AmiBlitz3.ab2@24813>   MOVE.w #$0008,listadd
0003A240 <AmiBlitz3.ab2@24814>   MOVE.w #$FFFA,D1
0003A246 <AmiBlitz3.ab2@24815>    JSR uselib
0003A24C <AmiBlitz3.ab2@24816>    JSR get1bytemain
0003A252 <AmiBlitz3.ab2@24819>   CLR.w nonew
0003A258 <AmiBlitz3.ab2@24820>    JSR getparameter
0003A260 <AmiBlitz3.ab2@24821>   BTST #$1,flagmask+1
0003A264 <AmiBlitz3.ab2@24822>    BEQ.w JUMP_syntaxerr
0003A26A <AmiBlitz3.ab2@24823>    JSR JL_0_8E3C
0003A270 <AmiBlitz3.ab2@24824>   MOVE.w notshared,D1
0003A274 <AmiBlitz3.ab2@24825>    BNE.w JL_0_E198
0003A27C <AmiBlitz3.ab2@24826>   MOVE.w $8(A3),temp1
0003A282 <AmiBlitz3.ab2@24827>   MOVE.w proceduremode,D2
0003A286 <AmiBlitz3.ab2@24828>    BNE.w JL_0_E176
0003A28C <AmiBlitz3.ab2@24829>   MOVE.w globalvarpointer,-(A7)
0003A294 <AmiBlitz3.ab2@24830>   MOVE.w $4(A3),globalvarpointer
0003A29A <AmiBlitz3.ab2@24831>   ADDQ.w #4,globalvarpointer
0003A29E <AmiBlitz3.ab2@24832>    BSR.w write_dim_code
0003A2A4 <AmiBlitz3.ab2@24833>   MOVE.w (A7)+,globalvarpointer
0003A2A8 <AmiBlitz3.ab2@24834> BRA.w JL_0_E1BA
0003A2AE <AmiBlitz3.ab2@24845>   MOVE.w globalvarpointer,-(A7)
0003A2B4 <AmiBlitz3.ab2@24846>             MOVE.w proceduremode,-(a7)
0003A2BA <AmiBlitz3.ab2@24847>             CLR.w proceduremode
0003A2C2 <AmiBlitz3.ab2@24848>   MOVE.w $4(A3),globalvarpointer
0003A2C8 <AmiBlitz3.ab2@24849>   ADDQ.w #4,globalvarpointer
0003A2CC <AmiBlitz3.ab2@24850>    BSR.w write_dim_code
0003A2D2 <AmiBlitz3.ab2@24851>    MOVE.w (a7)+,proceduremode
0003A2D8 <AmiBlitz3.ab2@24852>   MOVE.w (A7)+,globalvarpointer
0003A2DC <AmiBlitz3.ab2@24853> BRA.w JL_0_E1BA
0003A2E4 <AmiBlitz3.ab2@24856>   MOVE.w #$FFFF,temp1
0003A2E8 <AmiBlitz3.ab2@24857>   MOVE.w listadd(PC),D1
0003A2EC <AmiBlitz3.ab2@24858>    BEQ.w JL_0_E1B6
0003A2F4 <AmiBlitz3.ab2@24859>   MOVE.w #$4000,temp1
0003A2FA <AmiBlitz3.ab2@24860>   BSET #$0,$6(A3)
0003A300 <AmiBlitz3.ab2@24863>         TST.w proceduremode
0003A304 <AmiBlitz3.ab2@24864>        BNE 'l1
0003A30A <AmiBlitz3.ab2@24865>        MOVE.w locvaroff,-(a7)
0003A30E <AmiBlitz3.ab2@24868>   BSR.w write_dim_code
0003A314 <AmiBlitz3.ab2@24869>         TST.w proceduremode
0003A318 <AmiBlitz3.ab2@24870>         BNE JL_0_E1BA
0003A31E <AmiBlitz3.ab2@24871>        MOVE.w (A7)+,locvaroff
0003A324 <AmiBlitz3.ab2@24874>   JSR get1bytemain
0003A328 <AmiBlitz3.ab2@24875>   CMP.w #$2C,D0
0003A32C <AmiBlitz3.ab2@24876>    BNE.w JL_0_E1CE
0003A332 <AmiBlitz3.ab2@24877>    JSR get1bytemain
0003A336 <AmiBlitz3.ab2@24878> BRA.w JL_0_E0FC
0003A338 <AmiBlitz3.ab2@24881> RTS
0003A340 <AmiBlitz3.ab2@24884>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
0003A346 <AmiBlitz3.ab2@24885>   MOVE.w beginarr,D1
0003A34C <AmiBlitz3.ab2@24886>    JSR writeword
0003A34E <AmiBlitz3.ab2@24887>   MOVEQ.l #$00,D1
0003A354 <AmiBlitz3.ab2@24888>    JSR writeword
0003A356 <AmiBlitz3.ab2@24889>   MOVEQ.l #$04,D1
0003A35E <AmiBlitz3.ab2@24890>   BTST #$0,flagmask+1
0003A362 <AmiBlitz3.ab2@24891>    BNE.w write_dim_code__pointer
0003A366 <AmiBlitz3.ab2@24892>   MOVE.w $8(A2),D1
0003A36A <AmiBlitz3.ab2@24895>   ADD.w listadd(PC),D1                                     ;size of one element.
0003A370 <AmiBlitz3.ab2@24896>   MOVE.w D1,listsize
0003A376 <AmiBlitz3.ab2@24897>    JSR writeword
0003A37C <AmiBlitz3.ab2@24898>   CLR.w temp2                                              ;# dim's got
0003A37E <AmiBlitz3.ab2@24899>   MOVE.l A3,-(A7)
0003A384 <AmiBlitz3.ab2@24902>   ADDQ.w #1,temp2
0003A386 <AmiBlitz3.ab2@24903>   MOVEQ.l #$03,D2                                          ;get word
0003A38C <AmiBlitz3.ab2@24904>   MOVE.w notshared,-(a7)
0003A392 <AmiBlitz3.ab2@24905>    JSR eval
0003A398 <AmiBlitz3.ab2@24906>   MOVE.w (a7)+,notshared
0003A39E <AmiBlitz3.ab2@24907>   TST.b debugmode
0003A3A2 <AmiBlitz3.ab2@24908>    BEQ.w write_dim_code__norerr0
0003A3A6 <AmiBlitz3.ab2@24909>   MOVE.w #$C30F,D1
0003A3AA <AmiBlitz3.ab2@24915>       MOVE.w #$5281,d1
0003A3B0 <AmiBlitz3.ab2@24916>       JSR writeword
0003A3B6 <AmiBlitz3.ab2@24917>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
0003A3BC <AmiBlitz3.ab2@24918>       JSR writelong
0003A3C2 <AmiBlitz3.ab2@24919>   MOVE.w proceduremode,D2
0003A3C6 <AmiBlitz3.ab2@24920>    BEQ.w write_dim_code__global
0003A3CC <AmiBlitz3.ab2@24921>   SUBQ.w #4,locvaroff
0003A3D6 <AmiBlitz3.ab2@24922>   MOVE.w locvaroff,putarr+2
0003A3DA <AmiBlitz3.ab2@24923> BRA.w write_dim_code__doit
0003A3E0 <AmiBlitz3.ab2@24926> JMP syntaxerr
0003A3EA <AmiBlitz3.ab2@24929>   MOVE.w globalvarpointer,putarr+2
0003A3F0 <AmiBlitz3.ab2@24930>   ADDQ.w #4,globalvarpointer
0003A3F6 <AmiBlitz3.ab2@24933>   TST.b dimkeep
0003A3FA <AmiBlitz3.ab2@24934>            BEQ write_dim_code__doit_l1
0003A3FC <AmiBlitz3.ab2@24935>       MOVEQ #0,d1
0003A402 <AmiBlitz3.ab2@24936>       MOVE.w putarr+2,d1
0003A408 <AmiBlitz3.ab2@24937>       OR.l  #$222d0000,d1
0003A40E <AmiBlitz3.ab2@24938>       MOVE.w proceduremode,D2
0003A412 <AmiBlitz3.ab2@24939>       BEQ write_dim_code__doit_l2
0003A418 <AmiBlitz3.ab2@24940>       TST.w notshared
0003A41C <AmiBlitz3.ab2@24941>       BEQ write_dim_code__doit_l2
0003A422 <AmiBlitz3.ab2@24942>       SUB.l #$00010000,d1
0003A428 <AmiBlitz3.ab2@24945>   JSR writelong
0003A42E <AmiBlitz3.ab2@24948>   MOVE.l putarr,D1
0003A434 <AmiBlitz3.ab2@24949>       TST.w notshared
0003A438 <AmiBlitz3.ab2@24950>       BNE write_dim_code__doit_l1a
0003A43E <AmiBlitz3.ab2@24951>       JSR writelong
0003A442 <AmiBlitz3.ab2@24952> BRA write_dim_code__doit_l4
0003A448 <AmiBlitz3.ab2@24955>   JSR pokela5d
0003A44C <AmiBlitz3.ab2@24958>   CMP.w #$2C,D0
0003A450 <AmiBlitz3.ab2@24959>    BEQ.w write_dim_code__loop
0003A454 <AmiBlitz3.ab2@24960>   CMP.w #$29,D0
0003A458 <AmiBlitz3.ab2@24961>    BNE.w JUMP_syntaxerr
0003A45A <AmiBlitz3.ab2@24962>   MOVEA.l (A7)+,A3
0003A460 <AmiBlitz3.ab2@24963>   MOVE.w temp1,D1
0003A464 <AmiBlitz3.ab2@24964>    BMI.w write_dim_code__nocare
0003A468 <AmiBlitz3.ab2@24968>   BTST #$E,D1
0003A46C <AmiBlitz3.ab2@24969>    BEQ.w write_dim_code__notl
0003A474 <AmiBlitz3.ab2@24970>   CMPI.w #$1,temp2
0003A478 <AmiBlitz3.ab2@24971>    BNE.w JUMP_redimerr
0003A47C <AmiBlitz3.ab2@24972> BRA.w write_dim_code__nocare
0003A482 <AmiBlitz3.ab2@24975> JMP redimerr
0003A488 <AmiBlitz3.ab2@24978>   CMP.w temp2,D1
0003A48C <AmiBlitz3.ab2@24979>    BNE.w JUMP_redimerr                                      ;range too long
0003A492 <AmiBlitz3.ab2@24982>   LEA globalvarpointer,A0
0003A498 <AmiBlitz3.ab2@24983>   MOVE.w proceduremode,D1
0003A49C <AmiBlitz3.ab2@24984>   BEQ.w write_dim_code__gskip
0003A4A2 <AmiBlitz3.ab2@24985>   LEA locvaroff,A0
0003A4A8 <AmiBlitz3.ab2@24988>   MOVE.W  extraword,(A0)
0003A4AC <AmiBlitz3.ab2@24989>   BRA.W   write_dim_code__care
0003A4B4 <AmiBlitz3.ab2@24992>   MOVE.w temp2,$8(A3)                                      ;set # dim's
0003A4BA <AmiBlitz3.ab2@24995>   LEA doarr,A0
0003A4C0 <AmiBlitz3.ab2@24996>   MOVE.w $4(A3),$2(A0)
0003A4C8 <AmiBlitz3.ab2@24997>   MOVE.w putarr+2,$6(A0)
0003A4CA <AmiBlitz3.ab2@24998>   MOVE.l (A0)+,D1
0003A4D0 <AmiBlitz3.ab2@24999>    JSR writelong
0003A4D2 <AmiBlitz3.ab2@25000>   MOVE.l (A0),D1
0003A4D8 <AmiBlitz3.ab2@25001>    JSR writelong
0003A4DE <AmiBlitz3.ab2@25002>    TST.b dimkeep
0003A4E2 <AmiBlitz3.ab2@25003>   BNE write_dim_code__care_l3
0003A4E6 <AmiBlitz3.ab2@25006>   MOVE.w #$C400,D1
0003A4EA <AmiBlitz3.ab2@25007> BRA write_dim_code__care_l2
0003A4EE <AmiBlitz3.ab2@25010>   MOVE.w #$C405,d1
0003A4F4 <AmiBlitz3.ab2@25013>   MOVE.w proceduremode,D2
0003A4F8 <AmiBlitz3.ab2@25014>    BEQ.w write_dim_code__isg
0003A4FE <AmiBlitz3.ab2@25015>    TST.w notshared
0003A502 <AmiBlitz3.ab2@25016>    BEQ write_dim_code__isg
0003A504 <AmiBlitz3.ab2@25017>   ADDQ.w #1,D1
0003A508 <AmiBlitz3.ab2@25020>   MOVE.w listadd(PC),D2
0003A50C <AmiBlitz3.ab2@25021>    BEQ.w write_dim_code__isrg
0003A50E <AmiBlitz3.ab2@25022>   MOVE.w D1,-(A7)
0003A512 <AmiBlitz3.ab2@25023>   MOVE.w setles(PC),D1
0003A518 <AmiBlitz3.ab2@25024>    JSR writeword
0003A51C <AmiBlitz3.ab2@25025>   MOVE.w listsize(PC),D1
0003A522 <AmiBlitz3.ab2@25026>    JSR writeword
0003A524 <AmiBlitz3.ab2@25027>   MOVE.w (A7)+,D1
0003A526 <AmiBlitz3.ab2@25028>   ADDQ.w #3,D1
0003A52A <AmiBlitz3.ab2@25031> BRA.w Atokejsr
0003A530 <AmiBlitz3.ab2@25038>     MOVE.l #$f23c4400,d1
0003A536 <AmiBlitz3.ab2@25040>   MOVE.w regnum,d0
0003A538 <AmiBlitz3.ab2@25041>   ASL.w #7,d0
0003A53A <AmiBlitz3.ab2@25042>   OR.w d0,d1
0003A540 <AmiBlitz3.ab2@25043>   JSR writelong
0003A546 <AmiBlitz3.ab2@25049>     MOVE.l #$40490fd9,d1
0003A54C <AmiBlitz3.ab2@25051>   JSR writelong
0003A552 <AmiBlitz3.ab2@25052> JMP get1bytemain
0003A556 <AmiBlitz3.ab2@25056> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
0003A55A <AmiBlitz3.ab2@25063> vbr:                Ds.l 1
0003A55C <AmiBlitz3.ab2@25064> cfetchmode:         Ds.w 1                               ;1=fetching a constant
0003A562 <AmiBlitz3.ab2@25066> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
0003A566 <AmiBlitz3.ab2@25070> constpcat:          Ds.l 1
0003A56A <AmiBlitz3.ab2@25071> constlibat:         Ds.l 1
0003A56E <AmiBlitz3.ab2@25072> constmaxpc:         Dc.l $400
0003A572 <AmiBlitz3.ab2@25074> stacksize:          Dc.l 32768                           ;stackfuck org source
0003A576 <AmiBlitz3.ab2@25075> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
0003A57A <AmiBlitz3.ab2@25076> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
0003A57E <AmiBlitz3.ab2@25077> lastrestype:        Dc.l newtype_string
0003A580 <AmiBlitz3.ab2@25078> rescnt:             Ds.w 1                               ;# resident
0003A582 <AmiBlitz3.ab2@25079> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
0003A586 <AmiBlitz3.ab2@25080> resat:              Dc.l residents_table                 ;??looks like not used anymore??
0003A588 <AmiBlitz3.ab2@25081> linedone:           Ds.w 1
0003A59E <AmiBlitz3.ab2@25082> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
0003A5A2 <AmiBlitz3.ab2@25091>   Dc.l 0                                        ; bytetobyte
0003A5A6 <AmiBlitz3.ab2@25092>   Dc.l convert_byte_to_word                     ; bytetoword
0003A5AA <AmiBlitz3.ab2@25093>   Dc.l convert_byte_to_long                     ; bytetolong
0003A5AE <AmiBlitz3.ab2@25094>   Dc.l convert_byte_to_quick                    ; bytetoquick
0003A5B2 <AmiBlitz3.ab2@25095>   Dc.l convert_byte_to_float                    ; bytetofloat
0003A5B6 <AmiBlitz3.ab2@25096>   Dc.l convert_byte_to_long                     ; bytetolong
0003A5BA <AmiBlitz3.ab2@25097>   Dc.l error_convert_types                      ; noconerr
0003A5BE <AmiBlitz3.ab2@25100>   Dc.l convert_word_to_byte                     ; wordtobyte
0003A5C2 <AmiBlitz3.ab2@25101>   Dc.l 0                                        ; wordtoword
0003A5C6 <AmiBlitz3.ab2@25102>   Dc.l convert_word_to_long                     ; wordtolong
0003A5CA <AmiBlitz3.ab2@25103>   Dc.l convert_word_to_quick                    ; wordtoquick
0003A5CE <AmiBlitz3.ab2@25104>   Dc.l convert_word_to_float                    ; wordtofloat
0003A5D2 <AmiBlitz3.ab2@25105>   Dc.l convert_word_to_long                     ; wordtolong
0003A5D6 <AmiBlitz3.ab2@25106>   Dc.l error_convert_types                      ; noconerr
0003A5DA <AmiBlitz3.ab2@25109>   Dc.l convert_long_to_byte                     ; longtobyte
0003A5DE <AmiBlitz3.ab2@25110>   Dc.l convert_long_to_word                     ; longtoword
0003A5E2 <AmiBlitz3.ab2@25111>   Dc.l 0                                        ; longtolong
0003A5E6 <AmiBlitz3.ab2@25112>   Dc.l convert_long_to_quick                    ; longtoquick
0003A5EA <AmiBlitz3.ab2@25113>   Dc.l convert_long_to_float                    ; longtofloat
0003A5EE <AmiBlitz3.ab2@25114>   Dc.l 0                                        ; longtolong
0003A5F2 <AmiBlitz3.ab2@25115>   Dc.l error_convert_types                      ; noconerr
0003A5F6 <AmiBlitz3.ab2@25118>   Dc.l convert_quick_to_byte                    ; quicktobyte
0003A5FA <AmiBlitz3.ab2@25119>   Dc.l convert_quick_to_word                    ; quicktoword
0003A5FE <AmiBlitz3.ab2@25120>   Dc.l convert_quick_to_long                    ; quicktolong
0003A602 <AmiBlitz3.ab2@25121>   Dc.l 0                                        ; quicktoquick
0003A606 <AmiBlitz3.ab2@25122>   Dc.l convert_quick_to_float                   ; quicktofloat
0003A60A <AmiBlitz3.ab2@25123>   Dc.l convert_quick_to_long                    ; quicktolong
0003A60E <AmiBlitz3.ab2@25124>   Dc.l error_convert_types                      ; noconerr
0003A612 <AmiBlitz3.ab2@25127>   Dc.l convert_float_to_byte                    ; floattobyte
0003A616 <AmiBlitz3.ab2@25128>   Dc.l convert_float_to_word                    ; floattoword
0003A61A <AmiBlitz3.ab2@25129>   Dc.l convert_float_to_long                    ; floattolong
0003A61E <AmiBlitz3.ab2@25130>   Dc.l convert_float_to_quick                   ; floattoquick
0003A622 <AmiBlitz3.ab2@25131>   Dc.l 0                                        ; floattofloat
0003A626 <AmiBlitz3.ab2@25132>   Dc.l convert_float_to_long                    ; floattolong
0003A62A <AmiBlitz3.ab2@25133>   Dc.l error_convert_types                      ; noconerr
0003A62E <AmiBlitz3.ab2@25136>   Dc.l convert_long_to_byte                     ; longtobyte
0003A632 <AmiBlitz3.ab2@25137>   Dc.l convert_long_to_word                     ; longtoword
0003A636 <AmiBlitz3.ab2@25138>   Dc.l 0                                        ; longtolong
0003A63A <AmiBlitz3.ab2@25139>   Dc.l convert_long_to_quick                    ; longtoquick
0003A63E <AmiBlitz3.ab2@25140>   Dc.l convert_long_to_float                    ; longtofloat
0003A642 <AmiBlitz3.ab2@25141>   Dc.l 0                                        ; longtolong
0003A646 <AmiBlitz3.ab2@25142>   Dc.l error_convert_types                      ; noconerr
0003A64A <AmiBlitz3.ab2@25145>   Dc.l error_convert_types                      ; noconerr
0003A64E <AmiBlitz3.ab2@25146>   Dc.l error_convert_types                      ; noconerr
0003A652 <AmiBlitz3.ab2@25147>   Dc.l string_to_long                           ; stringtolong
0003A656 <AmiBlitz3.ab2@25148>   Dc.l error_convert_types                      ; noconerr
0003A65A <AmiBlitz3.ab2@25149>   Dc.l error_convert_types                      ; noconerr
0003A65E <AmiBlitz3.ab2@25150>   Dc.l string_to_long                           ; stringtolong
0003A662 <AmiBlitz3.ab2@25151>   Ds.l 1
0003A664 <AmiBlitz3.ab2@25157>   Dc.b $00,$2B                                  ;+ ; add
0003A668 <AmiBlitz3.ab2@25158>   Dc.l do_plus_byte                             ;doplusb
0003A66C <AmiBlitz3.ab2@25159>   Dc.l do_plus_word                             ;doplusw
0003A670 <AmiBlitz3.ab2@25160>   Dc.l do_plus_long                             ;doplusl
0003A674 <AmiBlitz3.ab2@25161>   Dc.l do_plus_long                             ;doplusl
0003A678 <AmiBlitz3.ab2@25162>   Dc.l do_plus_float                            ;doplusf
0003A67C <AmiBlitz3.ab2@25163>   Ds.l 1
0003A680 <AmiBlitz3.ab2@25164>   Dc.l add_strings                              ;addstrings
0003A682 <AmiBlitz3.ab2@25165>   Dc.b $0B,$B8
0003A684 <AmiBlitz3.ab2@25167>   Dc.b $00,$2D                                  ;- ; sub
0003A688 <AmiBlitz3.ab2@25168>   Dc.l do_minus_byte                            ;dominusb
0003A68C <AmiBlitz3.ab2@25169>   Dc.l do_minus_word                            ;dominusw
0003A690 <AmiBlitz3.ab2@25170>   Dc.l do_minus_long                            ;dominusl
0003A694 <AmiBlitz3.ab2@25171>   Dc.l do_minus_long                            ;dominusl
0003A698 <AmiBlitz3.ab2@25172>   Dc.l do_minus_float                           ;dominusf
0003A6A0 <AmiBlitz3.ab2@25173>   Ds.l 2
0003A6A2 <AmiBlitz3.ab2@25174>   Dc.b $0B,$B8
0003A6A4 <AmiBlitz3.ab2@25176>   Dc.b $00,$2A                                  ;* ; mul
0003A6A8 <AmiBlitz3.ab2@25177>   Dc.l do_times_byte                            ;dotimesb
0003A6AC <AmiBlitz3.ab2@25178>   Dc.l do_times_word                            ;dotimesw
0003A6B0 <AmiBlitz3.ab2@25179>   Dc.l do_times_long                            ;dotimesl
0003A6B4 <AmiBlitz3.ab2@25180>   Dc.l do_times_quick                           ;dotimesq
0003A6B8 <AmiBlitz3.ab2@25181>   Dc.l do_times_float                           ;dotimesf
0003A6C0 <AmiBlitz3.ab2@25182>   Ds.l 2
0003A6C2 <AmiBlitz3.ab2@25183>   Dc.b $0F,$A0
0003A6C4 <AmiBlitz3.ab2@25185>   Dc.b $00,$2F                                  ;/ ; div
0003A6C8 <AmiBlitz3.ab2@25186>   Dc.l do_Div_byte                              ;dodivb
0003A6CC <AmiBlitz3.ab2@25187>   Dc.l do_Div_word                              ;dodivb
0003A6D0 <AmiBlitz3.ab2@25188>   Dc.l do_Div_long                              ;dodivl
0003A6D4 <AmiBlitz3.ab2@25189>   Dc.l do_Div_quick                             ;dodivq
0003A6D8 <AmiBlitz3.ab2@25190>   Dc.l do_Div_float                             ;dodivf
0003A6E0 <AmiBlitz3.ab2@25191>   Ds.l 2
0003A6E2 <AmiBlitz3.ab2@25192>   Dc.b $0F,$A0
0003A6E4 <AmiBlitz3.ab2@25194>   Dc.b $00,$26                                  ;& ; & int
0003A6E8 <AmiBlitz3.ab2@25195>   Dc.l do_AND_byte                              ;doandb
0003A6EC <AmiBlitz3.ab2@25196>   Dc.l do_AND_word                              ;doandw
0003A6F0 <AmiBlitz3.ab2@25197>   Dc.l do_AND_long                              ;doandl
0003A6F4 <AmiBlitz3.ab2@25198>   Dc.l do_AND_long                              ;doandl
0003A700 <AmiBlitz3.ab2@25199>   Ds.l 3
0003A702 <AmiBlitz3.ab2@25200>   Dc.b $13,$88
0003A704 <AmiBlitz3.ab2@25202>   Dc.b $00,$7C                                  ;| ;or int ;
0003A708 <AmiBlitz3.ab2@25203>   Dc.l do_OR_byte                               ;doorb
0003A70C <AmiBlitz3.ab2@25204>   Dc.l do_OR_word                               ;doorw
0003A710 <AmiBlitz3.ab2@25205>   Dc.l do_OR_long                               ;doorl
0003A714 <AmiBlitz3.ab2@25206>   Dc.l do_OR_long                               ;doorl
0003A720 <AmiBlitz3.ab2@25207>   Ds.l 3
0003A722 <AmiBlitz3.ab2@25208>   Dc.b $13,$88
0003A724 <AmiBlitz3.ab2@25210>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
0003A728 <AmiBlitz3.ab2@25211>   Dc.l do_AND_byte                              ;doandb
0003A72C <AmiBlitz3.ab2@25212>   Dc.l do_AND_word                              ;doandw
0003A730 <AmiBlitz3.ab2@25213>   Dc.l do_AND_long                              ;doandl
0003A734 <AmiBlitz3.ab2@25214>   Dc.l do_AND_long                              ;doandl
0003A740 <AmiBlitz3.ab2@25215>   Ds.l 3
0003A742 <AmiBlitz3.ab2@25216>   Dc.b $03,$E8
0003A744 <AmiBlitz3.ab2@25218>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
0003A748 <AmiBlitz3.ab2@25219>   Dc.l do_OR_byte                               ;doorb
0003A74C <AmiBlitz3.ab2@25220>   Dc.l do_OR_word                               ;doorw
0003A750 <AmiBlitz3.ab2@25221>   Dc.l do_OR_long                               ;doorl
0003A754 <AmiBlitz3.ab2@25222>   Dc.l do_OR_long                               ;doorl
0003A760 <AmiBlitz3.ab2@25223>   Ds.l 3
0003A762 <AmiBlitz3.ab2@25224>   Dc.b $03,$E8
0003A764 <AmiBlitz3.ab2@25226>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
0003A768 <AmiBlitz3.ab2@25227>   Dc.l do_EOR_byte                              ;doeorb
0003A76C <AmiBlitz3.ab2@25228>   Dc.l do_EOR_word                              ;doeorw
0003A770 <AmiBlitz3.ab2@25229>   Dc.l do_EOR_long                              ;doeorl
0003A774 <AmiBlitz3.ab2@25230>   Dc.l do_EOR_long                              ;doeorl
0003A780 <AmiBlitz3.ab2@25231>   Ds.l 3
0003A782 <AmiBlitz3.ab2@25232>   Dc.b $03,$E8
0003A784 <AmiBlitz3.ab2@25234>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
0003A788 <AmiBlitz3.ab2@25235>   Dc.l do_LSL                                   ;dolslb
0003A78C <AmiBlitz3.ab2@25236>   Dc.l do_LSL                                   ;dolslw
0003A790 <AmiBlitz3.ab2@25237>   Dc.l do_LSL                                   ;dolsll
0003A794 <AmiBlitz3.ab2@25238>   Dc.l do_LSL                                   ;dolsll
0003A7A0 <AmiBlitz3.ab2@25239>   Ds.l 3
0003A7A2 <AmiBlitz3.ab2@25240>   Dc.b $17,$70
0003A7A4 <AmiBlitz3.ab2@25242>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
0003A7A8 <AmiBlitz3.ab2@25243>   Dc.l do_LSL                                   ;dolslb
0003A7AC <AmiBlitz3.ab2@25244>   Dc.l do_LSL                                   ;dolslw
0003A7B0 <AmiBlitz3.ab2@25245>   Dc.l do_LSL                                   ;dolsll
0003A7B4 <AmiBlitz3.ab2@25246>   Dc.l do_LSL                                   ;dolsll
0003A7C0 <AmiBlitz3.ab2@25247>   Ds.l 3
0003A7C2 <AmiBlitz3.ab2@25248>   Dc.b $17,$70
0003A7C4 <AmiBlitz3.ab2@25250>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
0003A7C8 <AmiBlitz3.ab2@25251>   Dc.l do_LSR                                   ;dolsrb
0003A7CC <AmiBlitz3.ab2@25252>   Dc.l do_LSR                                   ;dolsrw
0003A7D0 <AmiBlitz3.ab2@25253>   Dc.l do_LSR                                   ;dolsrl
0003A7D4 <AmiBlitz3.ab2@25254>   Dc.l do_LSR                                   ;dolsrl
0003A7E0 <AmiBlitz3.ab2@25255>   Ds.l 3
0003A7E2 <AmiBlitz3.ab2@25256>   Dc.b $17,$70
0003A7E4 <AmiBlitz3.ab2@25258>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
0003A7E8 <AmiBlitz3.ab2@25259>   Dc.l do_ASR                                   ;doasrb
0003A7EC <AmiBlitz3.ab2@25260>   Dc.l do_ASR                                   ;doasrw
0003A7F0 <AmiBlitz3.ab2@25261>   Dc.l do_ASR                                   ;doasrl
0003A7F4 <AmiBlitz3.ab2@25262>   Dc.l do_ASR                                   ;doasrl
0003A800 <AmiBlitz3.ab2@25263>   Ds.l 3
0003A802 <AmiBlitz3.ab2@25264>   Dc.b $17,$70
0003A804 <AmiBlitz3.ab2@25266>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
0003A808 <AmiBlitz3.ab2@25267>   Dc.l do_mod_byte                              ;domodb
0003A80C <AmiBlitz3.ab2@25268>   Dc.l do_mod_word                              ;domodw
0003A810 <AmiBlitz3.ab2@25269>   Dc.l do_mod_long                              ;domodl
0003A814 <AmiBlitz3.ab2@25270>   Dc.l do_mod_quick                             ;domodq
0003A818 <AmiBlitz3.ab2@25271>   Dc.l do_mod_float                             ;domodf
0003A820 <AmiBlitz3.ab2@25272>   Ds.l 2
0003A822 <AmiBlitz3.ab2@25273>   Dc.b $13,$88
0003A824 <AmiBlitz3.ab2@25276>   Dc.b $00,$5E                                  ;^
0003A828 <AmiBlitz3.ab2@25277>   Dc.l do_pow                                   ;dopow
0003A82C <AmiBlitz3.ab2@25278>   Dc.l do_pow                                   ;dopow
0003A830 <AmiBlitz3.ab2@25279>   Dc.l do_pow                                   ;dopow
0003A834 <AmiBlitz3.ab2@25280>   Dc.l do_pow                                   ;dopow
0003A838 <AmiBlitz3.ab2@25281>   Dc.l do_pow                                   ;dopow
0003A840 <AmiBlitz3.ab2@25282>   Ds.l 2
0003A842 <AmiBlitz3.ab2@25283>   Dc.b $1B,$58                                  ;7000
0003A844 <AmiBlitz3.ab2@25286>   Dc.b $00,$3D                                  ;=
0003A848 <AmiBlitz3.ab2@25287>   Dc.l do_equal_byte                            ;doeqb
0003A84C <AmiBlitz3.ab2@25288>   Dc.l do_equal_word                            ;doeqw
0003A850 <AmiBlitz3.ab2@25289>   Dc.l do_equal_long                            ;doeql
0003A854 <AmiBlitz3.ab2@25290>   Dc.l do_equal_long                            ;doeql
0003A858 <AmiBlitz3.ab2@25291>   Dc.l do_equal_float                           ;doeqf
0003A85C <AmiBlitz3.ab2@25292>   Dc.l do_equal_long                            ;doeql
0003A860 <AmiBlitz3.ab2@25293>   Dc.l do_equal_string                          ;doeqs
0003A862 <AmiBlitz3.ab2@25294>   Dc.b $07,$D0                                  ;2000
0003A864 <AmiBlitz3.ab2@25297>   Dc.b $3C,$3E                                  ;<>
0003A868 <AmiBlitz3.ab2@25298>   Dc.l do_not_equal_byte                        ;doneb
0003A86C <AmiBlitz3.ab2@25299>   Dc.l do_not_equal_word                        ;donew
0003A870 <AmiBlitz3.ab2@25300>   Dc.l do_not_equal_long                        ;donel
0003A874 <AmiBlitz3.ab2@25301>   Dc.l do_not_equal_long                        ;donel
0003A878 <AmiBlitz3.ab2@25302>   Dc.l do_not_equal_float                       ;donef
0003A87C <AmiBlitz3.ab2@25303>   Dc.l do_not_equal_long                        ;donel
0003A880 <AmiBlitz3.ab2@25304>   Dc.l do_not_equal_string                      ;dones
0003A882 <AmiBlitz3.ab2@25305>   Dc.b $07,$D0                                  ;2000
0003A884 <AmiBlitz3.ab2@25308>   Dc.b $00,$3C                                  ;<
0003A888 <AmiBlitz3.ab2@25309>   Dc.l do_littler_byte                          ;doltb
0003A88C <AmiBlitz3.ab2@25310>   Dc.l do_littler_word                          ;doltw
0003A890 <AmiBlitz3.ab2@25311>   Dc.l do_littler_long                          ;doltl
0003A894 <AmiBlitz3.ab2@25312>   Dc.l do_littler_long                          ;doltl
0003A898 <AmiBlitz3.ab2@25313>   Dc.l do_littler_float                         ;doltf
0003A89C <AmiBlitz3.ab2@25314>   Dc.l do_littler_long                          ;doltl
0003A8A0 <AmiBlitz3.ab2@25315>   Dc.l do_littler_string                        ;dolts
0003A8A2 <AmiBlitz3.ab2@25316>   Dc.b $07,$D0                                  ;2000
0003A8A4 <AmiBlitz3.ab2@25319>   Dc.b $3C,$3D                                  ;<=
0003A8A8 <AmiBlitz3.ab2@25320>   Dc.l do_littler_equal_byte                    ;doleb
0003A8AC <AmiBlitz3.ab2@25321>   Dc.l do_littler_equal_word                    ;doleb
0003A8B0 <AmiBlitz3.ab2@25322>   Dc.l do_littler_equal_long                    ;dolel
0003A8B4 <AmiBlitz3.ab2@25323>   Dc.l do_littler_equal_long                    ;dolel
0003A8B8 <AmiBlitz3.ab2@25324>   Dc.l do_littler_equal_float                   ;dolef
0003A8BC <AmiBlitz3.ab2@25325>   Dc.l do_littler_equal_long                    ;dolel
0003A8C0 <AmiBlitz3.ab2@25326>   Dc.l do_littler_equal_string                  ;doles
0003A8C2 <AmiBlitz3.ab2@25327>   Dc.b $07,$D0                                  ;2000
0003A8C4 <AmiBlitz3.ab2@25330>   Dc.b $00,$3E                                  ;>
0003A8C8 <AmiBlitz3.ab2@25331>   Dc.l do_greater_byte                          ;dogtb
0003A8CC <AmiBlitz3.ab2@25332>   Dc.l do_greater_word                          ;dogtw
0003A8D0 <AmiBlitz3.ab2@25333>   Dc.l do_greater_long                          ;dogtl
0003A8D4 <AmiBlitz3.ab2@25334>   Dc.l do_greater_long                          ;dogtl
0003A8D8 <AmiBlitz3.ab2@25335>   Dc.l do_greater_float                         ;dogtf
0003A8DC <AmiBlitz3.ab2@25336>   Dc.l do_greater_long                          ;dogtl
0003A8E0 <AmiBlitz3.ab2@25337>   Dc.l do_greater_string                        ;dogts
0003A8E2 <AmiBlitz3.ab2@25338>   Dc.b $07,$D0                                  ;2000
0003A8E4 <AmiBlitz3.ab2@25341>   Dc.b $3E,$3D                                  ;>=
0003A8E8 <AmiBlitz3.ab2@25342>   Dc.l do_greater_equal_byte                    ;dogeb
0003A8EC <AmiBlitz3.ab2@25343>   Dc.l do_greater_equal_word                    ;dogew
0003A8F0 <AmiBlitz3.ab2@25344>   Dc.l do_greater_equal_long                    ;dogel
0003A8F4 <AmiBlitz3.ab2@25345>   Dc.l do_greater_equal_long                    ;dogel
0003A8F8 <AmiBlitz3.ab2@25346>   Dc.l do_greater_equal_float                   ;dogef
0003A8FC <AmiBlitz3.ab2@25347>   Dc.l do_greater_equal_long                    ;dogel
0003A900 <AmiBlitz3.ab2@25348>   Dc.l do_greater_equal_string                  ;doges
0003A902 <AmiBlitz3.ab2@25349>   Dc.b $07,$D0                                  ;2000
0003A904 <AmiBlitz3.ab2@25351>   Dc.b $80,$CD                                  ;$8000+26+tnum
0003A908 <AmiBlitz3.ab2@25352>   Dc.l _BitTst
0003A90C <AmiBlitz3.ab2@25353>   Dc.l _BitTst
0003A910 <AmiBlitz3.ab2@25354>   Dc.l _BitTst
0003A914 <AmiBlitz3.ab2@25355>   Dc.l _BitTst
0003A920 <AmiBlitz3.ab2@25356>   Ds.l 3
0003A922 <AmiBlitz3.ab2@25357>   Dc.b $1F,$40                                  ;8000
0003A924 <AmiBlitz3.ab2@25359>   Dc.b $80,$CE                                  ;$8000+27+tnum
0003A928 <AmiBlitz3.ab2@25360>   Dc.l _BitSet
0003A92C <AmiBlitz3.ab2@25361>   Dc.l _BitSet
0003A930 <AmiBlitz3.ab2@25362>   Dc.l _BitSet
0003A934 <AmiBlitz3.ab2@25363>   Dc.l _BitSet
0003A940 <AmiBlitz3.ab2@25364>   Ds.l 3
0003A942 <AmiBlitz3.ab2@25365>   Dc.b $1F,$40                                  ;8000
0003A944 <AmiBlitz3.ab2@25367>   Dc.b $80,$CF                                  ;$8000+28+tnum
0003A948 <AmiBlitz3.ab2@25368>   Dc.l _BitClr
0003A94C <AmiBlitz3.ab2@25369>   Dc.l _BitClr
0003A950 <AmiBlitz3.ab2@25370>   Dc.l _BitClr
0003A954 <AmiBlitz3.ab2@25371>   Dc.l _BitClr
0003A960 <AmiBlitz3.ab2@25372>   Ds.l 3
0003A962 <AmiBlitz3.ab2@25373>   Dc.b $1F,$40                                  ;8000
0003A964 <AmiBlitz3.ab2@25375>   Dc.b $80,$D0                                  ;$8000+29+tnum
0003A968 <AmiBlitz3.ab2@25376>   Dc.l _BitChg
0003A96C <AmiBlitz3.ab2@25377>   Dc.l _BitChg
0003A970 <AmiBlitz3.ab2@25378>   Dc.l _BitChg
0003A974 <AmiBlitz3.ab2@25379>   Dc.l _BitChg
0003A980 <AmiBlitz3.ab2@25380>   Ds.l 3
0003A982 <AmiBlitz3.ab2@25381>   Dc.b $1F,$40                                  ;8000
0003A984 <AmiBlitz3.ab2@25383>   Dc.b $00,$00
0003A988 <AmiBlitz3.ab2@25388> modetable:   Dc.l typemode
0003A98C <AmiBlitz3.ab2@25391> newtypebase: Dc.l newtype_byte
0003A994 <AmiBlitz3.ab2@25394>   Dc.l newtype_word,$01                                    
0003A996 <AmiBlitz3.ab2@25395>   Dc.w $0001
0003A99A <AmiBlitz3.ab2@25396>   Dc.b 13,"b",0,0
0003A9A2 <AmiBlitz3.ab2@25399>   Dc.l newtype_long,$02
0003A9A4 <AmiBlitz3.ab2@25400>   Dc.w $0002
0003A9A8 <AmiBlitz3.ab2@25401>   Dc.b 13,"w",0,0
0003A9B0 <AmiBlitz3.ab2@25404>   Dc.l newtype_quick,$03                                   
0003A9B2 <AmiBlitz3.ab2@25405>   Dc.w $0004
0003A9B6 <AmiBlitz3.ab2@25406>   Dc.b 13,"l",0,0
0003A9BE <AmiBlitz3.ab2@25409>   Dc.l newtype_float,$04                                   
0003A9C0 <AmiBlitz3.ab2@25410>   Dc.w $0004
0003A9C4 <AmiBlitz3.ab2@25411>   Dc.b 13,"q",0,0
0003A9CC <AmiBlitz3.ab2@25415>   Dc.l newtype_double,$05                                  ;make problems on old residents
0003A9CE <AmiBlitz3.ab2@25416>   Dc.w $0004
0003A9D2 <AmiBlitz3.ab2@25417>   Dc.b 13,"f",0,0
0003A9DA <AmiBlitz3.ab2@25420>   Dc.l newtype_double,$06
0003A9DC <AmiBlitz3.ab2@25421>   Dc.w $0004
0003A9E0 <AmiBlitz3.ab2@25422>   Dc.b 13,"a",0,0
0003A9E8 <AmiBlitz3.ab2@25425>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
0003A9EA <AmiBlitz3.ab2@25426>   Dc.w $0008
0003A9EE <AmiBlitz3.ab2@25427>   Dc.b 13,"d",0,0
0003A9F6 <AmiBlitz3.ab2@25431>   Dc.l $0000000,$07                                        ;stringtype
0003A9F8 <AmiBlitz3.ab2@25432>   Dc.w $0004
0003A9FC <AmiBlitz3.ab2@25433>   Dc.b 13,"s",0,0
0003AA04 <AmiBlitz3.ab2@25436>   Dc.l $00,$00
0003AA06 <AmiBlitz3.ab2@25437>   Dc.w $0000
0003AA0A <AmiBlitz3.ab2@25438>   Dc.b $01,$00,$00,$00
0003AA6A <AmiBlitz3.ab2@25441> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
0003AA6C <AmiBlitz3.ab2@25445> dirmode:              Ds.w 1                               ;shows if directmode is on
0003AA70 <AmiBlitz3.ab2@25447>                       Ds.l 1                               ;int org source ;intuition!
0003AA72 <AmiBlitz3.ab2@25448> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
0003AA76 <AmiBlitz3.ab2@25449> maxsat:               Ds.l 1                               ;data1 info pos
0003AA78 <AmiBlitz3.ab2@25450> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
0003AA7A <AmiBlitz3.ab2@25452> maxsused:             Ds.w 1                               ;maximums used in prog
0003AA7C <AmiBlitz3.ab2@25456> dark:                 Ds.w 1                               ;dark compile?
0003AA7E <AmiBlitz3.ab2@25457> qlab:                 Ds.w 1                               ;quick lab allocate
0003AA82 <AmiBlitz3.ab2@25458> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
0003AA84 <AmiBlitz3.ab2@25463> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
0003AA86 <AmiBlitz3.ab2@25464> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
0003AA8A <AmiBlitz3.ab2@25465> noinits:              Ds.l 1                               ;flag for if we have any init routines!
0003AA8E <AmiBlitz3.ab2@25467> letstart:             Ds.l 1
0003AA90 <AmiBlitz3.ab2@25468> dontwrite:            Ds.w 1                               ;nomemleft org source
0003AB10 <AmiBlitz3.ab2@25469> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
0003AB14 <AmiBlitz3.ab2@25471> locdatast:            Ds.l 1
0003AB18 <AmiBlitz3.ab2@25472> firstpend:            Ds.l 1
0003AB1C <AmiBlitz3.ab2@25476> data2at:              Ds.l 1
0003AB20 <AmiBlitz3.ab2@25477> data2:                Ds.l 1
0003AB24 <AmiBlitz3.ab2@25478> data1start:           Ds.l 1                               ;data1at org source
0003AB28 <AmiBlitz3.ab2@25479> data1:                Ds.l 1                               ;pc for initialized data!
0003AB2C <AmiBlitz3.ab2@25480> destbufferstart:      Ds.l 1                               ;pcat org source
0003AB30 <AmiBlitz3.ab2@25484> destbufferend:        Ds.l 1                               ;libat org source
0003AB34 <AmiBlitz3.ab2@25485> libend:               Ds.l 1                               ;lib org source
0003AB38 <AmiBlitz3.ab2@25486> allat:                Ds.l 1                               ;highest allocmemd location for code
0003AB42 <AmiBlitz3.ab2@25487> dummyasm:             Dc.w 0,0,0,0,0
0003AB46 <AmiBlitz3.ab2@25488>                       Dc.l 0
0003AB48 <AmiBlitz3.ab2@25489>                       Dc.w 0
0003AB4C <AmiBlitz3.ab2@25493> buff1:                Ds.l 1                               ;buffer for text get
0003AB50 <AmiBlitz3.ab2@25494> buff2:                Ds.l 1                               ;ditto for dest
0003AB52 <AmiBlitz3.ab2@25495> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
0003AB54 <AmiBlitz3.ab2@25496> asmtype:              Ds.w 1                               ;0=contains no prog reference
0003AB56 <AmiBlitz3.ab2@25497> extraword:            Ds.w 1                               ;the extension word for assembler
0003AB58 <AmiBlitz3.ab2@25498> extraword2:           Ds.w 1                               ;ditto
0003AB5A <AmiBlitz3.ab2@25499> asmsize:              Ds.w 1
0003AB5E <AmiBlitz3.ab2@25500> asmbuff:              Ds.l 1
0003AB60 <AmiBlitz3.ab2@25501> asmlen:               Ds.w 1                               ;first (src) text len
0003AB62 <AmiBlitz3.ab2@25502> asmlen2:              Ds.w 1                               ;second (dest)
0003AB66 <AmiBlitz3.ab2@25503> templabel:            Ds.l 1                               ;linked list of expressions to resolve
0003AB68 <AmiBlitz3.ab2@25506> macnum:               Ds.w 1
0003AB6C <AmiBlitz3.ab2@25508>                       Dc.l 0                               ;address of next 0 in include fil
0003AB70 <AmiBlitz3.ab2@25509> titleat:              Ds.l 1                               ;5 longs for compile streaks
0003AB7A <AmiBlitz3.ab2@25510> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
0003AB7C <AmiBlitz3.ab2@25511> connest:              Ds.w 1                               ;conditional nest level
0003AB80 <AmiBlitz3.ab2@25512> firstconst:           Ds.l 1                               ;first constant (#a)
0003AB82 <AmiBlitz3.ab2@25513> numarg:               Ds.w 1                               ;number of macro arguements
0003AB86 <AmiBlitz3.ab2@25514> myoline:              Ds.l 1                               ;macro done yet?
0003AB8A <AmiBlitz3.ab2@25515> myline:               Ds.l 1                               ;pointer to some memory to create
0003AB8E <AmiBlitz3.ab2@25518>                       Ds.l 1
0003ABCE <AmiBlitz3.ab2@25519> concomstack:          Ds.l 16                              ;32 deep conditional compilation
0003ABD2 <AmiBlitz3.ab2@25520> concomsp:             Dc.l concomstack                     ;stack pointer
0003ABD4 <AmiBlitz3.ab2@25521> oldqflag:             Ds.w 1
0003ABD8 <AmiBlitz3.ab2@25524>                       Ds.l 1
0003ABDA <AmiBlitz3.ab2@25526>                       Ds.w 1
0003ABDE <AmiBlitz3.ab2@25527> firstfor:             Ds.l 1                               ;first for
0003ABE0 <AmiBlitz3.ab2@25528> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
0003ABE2 <AmiBlitz3.ab2@25529> sbgot:                Ds.w 1                               ;flag for string got 2
0003ABE4 <AmiBlitz3.ab2@25530> convsize:             Ds.w 1                               ;usertype org source
0003ABE6 <AmiBlitz3.ab2@25531> userp:                Ds.w 1
0003ABEA <AmiBlitz3.ab2@25536> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
0003ABEC <AmiBlitz3.ab2@25537> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
0003ABEE <AmiBlitz3.ab2@25538> numreps:              Ds.w 1                               ;number of repeats in a repeatable
0003ABF2 <AmiBlitz3.ab2@25540> locloc:               Ds.l 1
0003ABF4 <AmiBlitz3.ab2@25541> locchar:              Ds.w 1
0003AC74 <AmiBlitz3.ab2@25542> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
0003AC76 <AmiBlitz3.ab2@25543> commode:              Ds.w 1                               ;in comma mode...
0003AC7A <AmiBlitz3.ab2@25544> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
0003AC7E <AmiBlitz3.ab2@25545> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
0003AC82 <AmiBlitz3.ab2@25546> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
0003AC84 <AmiBlitz3.ab2@25548>                       Ds.w 1                               ;opt reset offset
0003AD84 <AmiBlitz3.ab2@25550>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
0003AE84 <AmiBlitz3.ab2@25552>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
0003AE86 <AmiBlitz3.ab2@25553> varcodelen:           Ds.w 1                               ;and length
0003AE88 <AmiBlitz3.ab2@25555>                       Ds.w 1
0003AE8E <AmiBlitz3.ab2@25556> oldvcodelen:          Ds.w 3                               ;old varcodelen
0003AE90 <AmiBlitz3.ab2@25559> Even4
0003AE94 <AmiBlitz3.ab2@25560> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
0003AE96 <AmiBlitz3.ab2@25561> memlibstat:           Ds.w 1                               ;status of memory library during
0003AE98 <AmiBlitz3.ab2@25564>                       Dc.w 0
0003AE9A <AmiBlitz3.ab2@25566>                       Dc.w 0
0003AE9C <AmiBlitz3.ab2@25568> varmode:              Ds.w 1                               ;0 a5 pointer to global
0003AEA0 <AmiBlitz3.ab2@25570> currentfunction:      Ds.l 1                               ;thisproc org source
0003AEA4 <AmiBlitz3.ab2@25571> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
0003AEA6 <AmiBlitz3.ab2@25572> 
0003AEA8 <AmiBlitz3.ab2@25574> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
0003AEAC <AmiBlitz3.ab2@25575> passstack:            Ds.l 1
0003AEB0 <AmiBlitz3.ab2@25576> zero:                 Ds.l 1                               ;ZERO!
0003AEB2 <AmiBlitz3.ab2@25577> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
0003AEB6 <AmiBlitz3.ab2@25579> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
0003AEBA <AmiBlitz3.ab2@25580> constantbase:         Ds.l 1                               ;firstinc org source ;first include
0003AEBC <AmiBlitz3.ab2@25581> lasta6:               Dc.w $FFFF                           ;-1 org source
0003AEBE <AmiBlitz3.ab2@25582> instringon:           Ds.w 1                               ;quoteflag org source
0003AEC2 <AmiBlitz3.ab2@25583> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
0003AEC6 <AmiBlitz3.ab2@25584> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
0003AECA <AmiBlitz3.ab2@25585> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
0003AECE <AmiBlitz3.ab2@25586> endop:                Ds.l 1                               ;end of program pc - before finishups!
0003AED2 <AmiBlitz3.ab2@25587> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
0003AED6 <AmiBlitz3.ab2@25588> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
0003AED8 <AmiBlitz3.ab2@25589> numstatic:            Ds.w 1                               ;number of static structs
0003AEDC <AmiBlitz3.ab2@25590> staticdata:           Ds.l 1                               ;data1 val for statics
0003AEE0 <AmiBlitz3.ab2@25591> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
0003AEE2 <AmiBlitz3.ab2@25592> sbasegot:             Ds.w 1                               ;string base got?
0003AEE6 <AmiBlitz3.ab2@25593> litdata1:             Ds.l 1
0003AEEA <AmiBlitz3.ab2@25597> objlen:               Ds.l 1
0003AEEE <AmiBlitz3.ab2@25598> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
0003AEF2 <AmiBlitz3.ab2@25599> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
0003AEF4 <AmiBlitz3.ab2@25601> flagmask:             Ds.w 1                               ;mask for flag of variable when
0003AEF6 <AmiBlitz3.ab2@25603> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
0003AEF8 <AmiBlitz3.ab2@25604> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
0003AEFC <AmiBlitz3.ab2@25605> temp1:                Ds.l 1
0003AF00 <AmiBlitz3.ab2@25606> temp2:                Ds.l 1
0003AF04 <AmiBlitz3.ab2@25608> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
0003AF08 <AmiBlitz3.ab2@25609> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
0003AF7C <AmiBlitz3.ab2@25610> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
0003AF80 <AmiBlitz3.ab2@25611> fib_Size:             Ds.l 1                               ;namebuff+124 org source
0003B000 <AmiBlitz3.ab2@25613> namebuff2:            Ds.b 128
0003B008 <AmiBlitz3.ab2@25614>                       Ds.b 8                               ;for fileinfoblock
0003B048 <AmiBlitz3.ab2@25617> optstuff:             Ds.b 64                              ;temp opt make buffer
0003B086 <AmiBlitz3.ab2@25625>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
0003B08C <AmiBlitz3.ab2@25626>   MOVE.l #1000,D0
0003B08E <AmiBlitz3.ab2@25627>   JSR (A1)
0003B090 <AmiBlitz3.ab2@25628> RTS
0003B092 <AmiBlitz3.ab2@25634>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
0003B096 <AmiBlitz3.ab2@25635>   Dc.l xtra_versionnumber                                  ; vers org source
0003B09A <AmiBlitz3.ab2@25636>   Dc.l create_iconfile                                     ; create icon for executable
0003B09E <AmiBlitz3.ab2@25637>   Ds.l 1
0003B0A0 <AmiBlitz3.ab2@25639>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
0003B0A4 <AmiBlitz3.ab2@25642>   Dc.l set_use_debugger
0003B0A8 <AmiBlitz3.ab2@25643>   Dc.l AL_0_11010                                          ;+obsolet: debugger
0003B0AC <AmiBlitz3.ab2@25644>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
0003B0B0 <AmiBlitz3.ab2@25645>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
0003B0B4 <AmiBlitz3.ab2@25646>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
0003B0B8 <AmiBlitz3.ab2@25647>   Dc.l set_make_smallestcode
0003B0BC <AmiBlitz3.ab2@25648>   Dc.l set_link_debuginfo
0003B0C0 <AmiBlitz3.ab2@25649>   Dc.l set_autorun
0003B0C4 <AmiBlitz3.ab2@25650>   Dc.l set_interruptcheck
0003B0C8 <AmiBlitz3.ab2@25651>   Dc.l set_assemblercheck
0003B0CC <AmiBlitz3.ab2@25653>   Dc.l set_overflowcheck
0003B0D0 <AmiBlitz3.ab2@25654>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
0003B0D4 <AmiBlitz3.ab2@25655>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
0003B0D8 <AmiBlitz3.ab2@25656>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
0003B0DC <AmiBlitz3.ab2@25659>   Ds.l 1
0003B0DE <AmiBlitz3.ab2@25661>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
0003B0E2 <AmiBlitz3.ab2@25668>   Dc.l objectbuffer
0003B0E6 <AmiBlitz3.ab2@25669>   Dc.l libsbuffer
0003B0EA <AmiBlitz3.ab2@25670>   Dc.l systembuffer
0003B0EE <AmiBlitz3.ab2@25671>   Dc.l databuffer
0003B0F2 <AmiBlitz3.ab2@25672>   Dc.l macrobuffer_size
0003B0F6 <AmiBlitz3.ab2@25673>   Dc.l stringbuffer
0003B0FA <AmiBlitz3.ab2@25676>   Ds.l 1
0003B0FC <AmiBlitz3.ab2@25680>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
0003B104 <AmiBlitz3.ab2@25681>   Dc.l residents_table,0
0003B106 <AmiBlitz3.ab2@25685>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
0003B10E <AmiBlitz3.ab2@25686>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
0003B110 <AmiBlitz3.ab2@25687>   Ds.w 1
0003B20C <AmiBlitz3.ab2@25691>   Ds.l 63
0003B308 <AmiBlitz3.ab2@25692>   Ds.l 63
0003B404 <AmiBlitz3.ab2@25693>   Ds.l 63
0003B4E6 <AmiBlitz3.ab2@25694>   Ds.w 113
0003B4E8 <AmiBlitz3.ab2@25697> comsettings_message:  Ds.w 1                               ;allchg org source
0003B4EA <AmiBlitz3.ab2@25698> xtra_versionnumber:   Ds.w 1                               ;vers org source
0003B4F0 <AmiBlitz3.ab2@25702>   CLR.b exefilename
0003B4F2 <AmiBlitz3.ab2@25703>   TST.l d0
0003B4F6 <AmiBlitz3.ab2@25704>   BNE read_xtrafile__l10
0003B4F8 <AmiBlitz3.ab2@25705> RTS
0003B4FE <AmiBlitz3.ab2@25708>   JSR free_residents                                       ;jsr freeres2 org source
0003B504 <AmiBlitz3.ab2@25709>   LEA ptr_xtradata,A2
0003B506 <AmiBlitz3.ab2@25710>   MOVEQ.l #$00,D4
0003B508 <AmiBlitz3.ab2@25713>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
0003B50C <AmiBlitz3.ab2@25714>     BEQ.b read_xtrafile__done
0003B50E <AmiBlitz3.ab2@25717>     MOVE.l (A2)+,D2
0003B512 <AmiBlitz3.ab2@25718>   BEQ.b read_xtrafile__loop
0003B514 <AmiBlitz3.ab2@25720>   MOVE.l D4,D3
0003B516 <AmiBlitz3.ab2@25721>   MOVE.l D7,D1
0003B51A <AmiBlitz3.ab2@25722>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003B51C <AmiBlitz3.ab2@25723>   TST.l D0
0003B520 <AmiBlitz3.ab2@25724>   BNE.b read_xtrafile__loop2
0003B524 <AmiBlitz3.ab2@25725> BRA.w read_xtrafile__done2
0003B52A <AmiBlitz3.ab2@25728>   TST.b xtra_versionnumber
0003B52E <AmiBlitz3.ab2@25729>    BNE.b read_xtrafile__nover0
0003B536 <AmiBlitz3.ab2@25730>   MOVE.w #$0080,set_autorun                                ;auto run on
0003B540 <AmiBlitz3.ab2@25731>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
0003B546 <AmiBlitz3.ab2@25732>   CLR.w set_assemblercheck                                 ;assembler checking off
0003B550 <AmiBlitz3.ab2@25733>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
0003B554 <AmiBlitz3.ab2@25734> BRA.b read_xtrafile__ver0
0003B556 <AmiBlitz3.ab2@25737>   MOVE.l D7,D1                                             ;load cli arg!
0003B55C <AmiBlitz3.ab2@25738>   MOVE.l #str_cliarguments,D2
0003B562 <AmiBlitz3.ab2@25739>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
0003B566 <AmiBlitz3.ab2@25740>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003B56C <AmiBlitz3.ab2@25741>   MOVE.l #str_cliarguments,A0
0003B572 <AmiBlitz3.ab2@25742>   ADDA.l #115,A0
0003B578 <AmiBlitz3.ab2@25743>   MOVE.l #0,(a0) ; terminate it!
0003B57A <AmiBlitz3.ab2@25745>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
0003B580 <AmiBlitz3.ab2@25746>   MOVE.l #stacksize,D2
0003B586 <AmiBlitz3.ab2@25747>   MOVE.l #4,D3
0003B58A <AmiBlitz3.ab2@25748>   JSR _Read(A6)
0003B594 <AmiBlitz3.ab2@25749>   CMP.l ##MIN_STACKSIZE,stacksize
0003B598 <AmiBlitz3.ab2@25750>   BGE 'stackok
0003B5A2 <AmiBlitz3.ab2@25751>   MOVE.l ##MIN_STACKSIZE,stacksize
0003B5A4 <AmiBlitz3.ab2@25754>   MOVE.l D7,D1
0003B5AA <AmiBlitz3.ab2@25755>   MOVE.l #versioninformation,D2
0003B5B0 <AmiBlitz3.ab2@25756>   MOVE.l #4,D3
0003B5B4 <AmiBlitz3.ab2@25757>   JSR _Read(A6)
0003B5B6 <AmiBlitz3.ab2@25759>   MOVE.l D7,D1
0003B5BC <AmiBlitz3.ab2@25760>   MOVE.l #number_of_builds,D2
0003B5C2 <AmiBlitz3.ab2@25761>   MOVE.l #4,D3
0003B5C6 <AmiBlitz3.ab2@25762>   JSR _Read(A6)
0003B5CC <AmiBlitz3.ab2@25768>   MOVE.l A7,errstack
0003B5D6 <AmiBlitz3.ab2@25769>   MOVE.l #read_xtrafile__done2,errcont
0003B5DE <AmiBlitz3.ab2@25770>   MOVE.w #$FFFF,ezerr
0003B5E4 <AmiBlitz3.ab2@25773>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
0003B5E6 <AmiBlitz3.ab2@25774>     MOVEQ.l #$04,D3
0003B5E8 <AmiBlitz3.ab2@25775>     MOVE.l D7,D1
0003B5EC <AmiBlitz3.ab2@25776>     JSR _Read(A6)
0003B5EE <AmiBlitz3.ab2@25777>     TST.l D0
0003B5F2 <AmiBlitz3.ab2@25778>     BEQ.b read_xtrafile__done2
0003B5F8 <AmiBlitz3.ab2@25779>     MOVE.w temp1,D1
0003B5FA <AmiBlitz3.ab2@25780>     TST.w d1                                               ;new
0003B5FE <AmiBlitz3.ab2@25781>     BEQ read_xtrafile__done2                                         ;new
0003B604 <AmiBlitz3.ab2@25782>      JSR AJL_0_6F1A
0003B60A <AmiBlitz3.ab2@25784>     CMP.l #0,a1
0003B60E <AmiBlitz3.ab2@25785>     BEQ read_xtrafile__dloop
0003B612 <AmiBlitz3.ab2@25786>     MOVE.l $12(A1),D0
0003B61A <AmiBlitz3.ab2@25787>     MOVE.w temp1+2,-$4(A1,D0.L)
0003B61E <AmiBlitz3.ab2@25788> BRA.b read_xtrafile__dloop
0003B622 <AmiBlitz3.ab2@25794>   LEA residents_table(PC),A0
0003B624 <AmiBlitz3.ab2@25795>   MOVEQ.l #$07,D0
0003B628 <AmiBlitz3.ab2@25798>     CLR.l $40(A0)
0003B62C <AmiBlitz3.ab2@25799>     LEA $44(A0),A0
0003B630 <AmiBlitz3.ab2@25800>   DBF D0,read_xtrafile__loop3
0003B634 <AmiBlitz3.ab2@25802>   MOVEM.l D7/A6,-(A7)
0003B63A <AmiBlitz3.ab2@25803>   JSR init_buffers
0003B640 <AmiBlitz3.ab2@25804>   JSR reloadresident
0003B644 <AmiBlitz3.ab2@25805>   MOVEM.l (A7)+,D7/A6
0003B646 <AmiBlitz3.ab2@25806> RTS
0003B64E <AmiBlitz3.ab2@25810>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
0003B654 <AmiBlitz3.ab2@25819>   LEA ptr_xtradata,A2
0003B656 <AmiBlitz3.ab2@25820>   MOVEQ.l #$00,D4
0003B658 <AmiBlitz3.ab2@25824>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
0003B65C <AmiBlitz3.ab2@25825>   BEQ.b write_xtrafile__done
0003B65E <AmiBlitz3.ab2@25828>    MOVE.l (A2)+,D2
0003B662 <AmiBlitz3.ab2@25829>    BEQ.b write_xtrafile__loop
0003B664 <AmiBlitz3.ab2@25831>    MOVE.l D4,D3
0003B666 <AmiBlitz3.ab2@25832>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
0003B66A <AmiBlitz3.ab2@25833>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
0003B66E <AmiBlitz3.ab2@25834> BRA.b write_xtrafile__loop2
0003B670 <AmiBlitz3.ab2@25837>   MOVE.l D7,D1
0003B676 <AmiBlitz3.ab2@25838>   MOVE.l #str_cliarguments,D2
0003B67C <AmiBlitz3.ab2@25839>   MOVE.l #116,D3
0003B680 <AmiBlitz3.ab2@25840>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
0003B682 <AmiBlitz3.ab2@25842>   MOVE.l D7,D1
0003B688 <AmiBlitz3.ab2@25843>   MOVE.l #stacksize,D2
0003B68E <AmiBlitz3.ab2@25844>   MOVE.l #4,D3
0003B692 <AmiBlitz3.ab2@25845>   JSR _Write(A6)
0003B694 <AmiBlitz3.ab2@25847>   MOVE.l D7,D1
0003B69A <AmiBlitz3.ab2@25848>   MOVE.l #versioninformation,D2
0003B6A0 <AmiBlitz3.ab2@25849>   MOVE.l #4,D3
0003B6A4 <AmiBlitz3.ab2@25850>   JSR _Write(A6)
0003B6A6 <AmiBlitz3.ab2@25852>   MOVE.l D7,D1
0003B6AC <AmiBlitz3.ab2@25853>   MOVE.l #number_of_builds,D2
0003B6B2 <AmiBlitz3.ab2@25854>   MOVE.l #4,D3
0003B6B6 <AmiBlitz3.ab2@25855>   JSR _Write(A6)
0003B6BC <AmiBlitz3.ab2@25861>   LEA libpointer,A2
0003B6BE <AmiBlitz3.ab2@25864>     MOVE.l (A2),D0
0003B6C2 <AmiBlitz3.ab2@25865>     BEQ.w write_xtrafile__done2
0003B6C4 <AmiBlitz3.ab2@25866>     MOVEA.l D0,A2
0003B6C8 <AmiBlitz3.ab2@25867>     MOVE.l $12(A2),D4
0003B6CC <AmiBlitz3.ab2@25868>     TST.w -$2(A2,D4.L)
0003B6D0 <AmiBlitz3.ab2@25869>     BEQ.w write_xtrafile__loop3
0003B6D4 <AmiBlitz3.ab2@25871>     LEA $4(A2),A0
0003B6D6 <AmiBlitz3.ab2@25872>     MOVE.l A0,D2
0003B6D8 <AmiBlitz3.ab2@25873>     MOVEQ.l #$02,D3
0003B6DA <AmiBlitz3.ab2@25874>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
0003B6DE <AmiBlitz3.ab2@25875>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003B6E2 <AmiBlitz3.ab2@25877>     LEA -$4(A2,D4.L),A0
0003B6E4 <AmiBlitz3.ab2@25878>     MOVE.l A0,D2
0003B6E6 <AmiBlitz3.ab2@25879>     MOVEQ.l #$02,D3
0003B6E8 <AmiBlitz3.ab2@25880>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
0003B6EC <AmiBlitz3.ab2@25881>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
0003B6F0 <AmiBlitz3.ab2@25882> BRA.w write_xtrafile__loop3
0003B6F6 <AmiBlitz3.ab2@25887>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
0003B6F8 <AmiBlitz3.ab2@25888>   MOVE.l A2,D2           ; move the address to d2
0003B6FE <AmiBlitz3.ab2@25889>   MOVE.l #4,D3           ; we only need 4 bytes to save
0003B700 <AmiBlitz3.ab2@25890>   MOVE.l D7,D1           ; we set the file handle
0003B704 <AmiBlitz3.ab2@25891>   JSR _Write(A6)         ; and we write it.
0003B706 <AmiBlitz3.ab2@25893> RTS
0003B70C <AmiBlitz3.ab2@25897>   LEA optssave,A0
0003B712 <AmiBlitz3.ab2@25898>   LEA ptr_xtradata,A1
0003B714 <AmiBlitz3.ab2@25901>   MOVE.w (A1)+,D0                                          ;length of data move
0003B718 <AmiBlitz3.ab2@25902>   BEQ.b menu_compileroptions__done
0003B71A <AmiBlitz3.ab2@25903>   SUBQ.w #1,D0
0003B71C <AmiBlitz3.ab2@25906>     MOVE.l (A1)+,D1
0003B720 <AmiBlitz3.ab2@25907>     BEQ.b menu_compileroptions__loop
0003B722 <AmiBlitz3.ab2@25908>     MOVEA.l D1,A2
0003B724 <AmiBlitz3.ab2@25909>     MOVE.w D0,D1
0003B726 <AmiBlitz3.ab2@25912>       MOVE.b (A2)+,(A0)+
0003B72A <AmiBlitz3.ab2@25913>   DBF D1,menu_compileroptions__loop3
0003B72E <AmiBlitz3.ab2@25915> BRA.w menu_compileroptions__loop2
0003B734 <AmiBlitz3.ab2@25919>   LEA bufferlist,A1
0003B736 <AmiBlitz3.ab2@25922>     MOVE.l (A1)+,D2
0003B73A <AmiBlitz3.ab2@25923>     BEQ.b menu4c
0003B73C <AmiBlitz3.ab2@25925>     MOVEA.l D2,A0
0003B73E <AmiBlitz3.ab2@25926>     MOVE.l (A0),D2
0003B740 <AmiBlitz3.ab2@25927>     ADDQ.w #8,A0
0003B746 <AmiBlitz3.ab2@25928>     JSR makelong
0003B74A <AmiBlitz3.ab2@25929> BRA.b menu_compileroptions__loop4
0003B750 <AmiBlitz3.ab2@25932>   CLR.w state_of_residents                                 ;resident change
0003B756 <AmiBlitz3.ab2@25933>   CLR.w comsettings_message                                ;alloc change
0003B75C <AmiBlitz3.ab2@25934>   CLR.w maxobject_pos
0003B762 <AmiBlitz3.ab2@25937>     Gosub newoptionsfunc
0003B766 <AmiBlitz3.ab2@25949>     CMP.w #-$1,D7
0003B76A <AmiBlitz3.ab2@25950>      BNE.w settings_events
0003B76E <AmiBlitz3.ab2@25951>     CMP.w #$5,D6                                           ; vorher $6
0003B772 <AmiBlitz3.ab2@25952>      BHI.w menu4c__notmax2                                      ; 6, 9, F, 10, 11, 14
0003B778 <AmiBlitz3.ab2@25953>     MOVE.w D6,comsettings_message
0003B77C <AmiBlitz3.ab2@25954> BRA.w settings_events
0003B780 <AmiBlitz3.ab2@25957>   CMP.w #$A,D6
0003B784 <AmiBlitz3.ab2@25958>   BNE.w JL_0_10084                                         ; JL_0_1003C
0003B78C <AmiBlitz3.ab2@25960>   BTST #$7,use_debugger                                    ;runtime ERROR
0003B790 <AmiBlitz3.ab2@25961>   BNE 'debugon
0003B796 <AmiBlitz3.ab2@25962>   CLR.w debugmode
0003B79A <AmiBlitz3.ab2@25963> BRA.b 'debugoff
0003B7A0 <AmiBlitz3.ab2@25966>   SNE debugmode
0003B7A2 <AmiBlitz3.ab2@25969>   MOVE.l a0,-(a7)
0003B7DA <AmiBlitz3.ab2@25972>   !ComData_SetB{comByte_DebugMode,debugmode}
0003B7DC <AmiBlitz3.ab2@25973>   MOVE.l (a7)+,a0
0003B7E0 <AmiBlitz3.ab2@25975> BRA.w settings_events
0003B7E4 <AmiBlitz3.ab2@25979>   CMP.w #$11,D6
0003B7E8 <AmiBlitz3.ab2@25980>    BCS.w settings_events
0003B7EC <AmiBlitz3.ab2@25981>   CMP.w #$14,D6
0003B7F0 <AmiBlitz3.ab2@25982>    BHI.w settings_events
0003B7F4 <AmiBlitz3.ab2@25983>   BEQ.w menu4canc
0003B7F6 <AmiBlitz3.ab2@25986>   MOVE.w D6,-(A7)
0003B7FC <AmiBlitz3.ab2@25987>   MOVE.w comsettings_message,D0
0003B800 <AmiBlitz3.ab2@25988>    BEQ.w menu4c__skip
0003B806 <AmiBlitz3.ab2@25989>   JSR init_buffers
0003B80C <AmiBlitz3.ab2@25992>   MOVE.w state_of_residents,D0
0003B810 <AmiBlitz3.ab2@25993>    BEQ.w menu4c__zdone
0003B816 <AmiBlitz3.ab2@25994>   JSR reloadresident
0003B818 <AmiBlitz3.ab2@25997>   MOVE.w (A7)+,D6
0003B81C <AmiBlitz3.ab2@25999>   CMP.w #$12,D6
0003B820 <AmiBlitz3.ab2@26000>    BEQ.w JUMP_menu_compile_run
0003B824 <AmiBlitz3.ab2@26001>   CMP.w #$13,D6
0003B828 <AmiBlitz3.ab2@26002>    BEQ.w JUMP_menu_createexecutable
0003B82A <AmiBlitz3.ab2@26003> RTS
0003B830 <AmiBlitz3.ab2@26006> JMP menu_compile_run
0003B836 <AmiBlitz3.ab2@26009> JMP menu_createexecutable
0003B83C <AmiBlitz3.ab2@26013>   LEA optssave,A0
0003B842 <AmiBlitz3.ab2@26014>   LEA ptr_xtradata,A1
0003B844 <AmiBlitz3.ab2@26017>   MOVE.w (A1)+,D0
0003B848 <AmiBlitz3.ab2@26018>   BEQ.b menu4canc__done
0003B84A <AmiBlitz3.ab2@26019>   SUBQ.w #1,D0
0003B84C <AmiBlitz3.ab2@26022>     MOVE.l (A1)+,D1
0003B850 <AmiBlitz3.ab2@26023>     BEQ.b menu4canc__loop
0003B852 <AmiBlitz3.ab2@26024>     MOVEA.l D1,A2
0003B854 <AmiBlitz3.ab2@26025>     MOVE.w D0,D1
0003B856 <AmiBlitz3.ab2@26028>       MOVE.b (A0)+,(A2)+
0003B85A <AmiBlitz3.ab2@26029>   DBF D1,menu4canc__loop3
0003B85E <AmiBlitz3.ab2@26031> BRA.b menu4canc__loop2
0003B860 <AmiBlitz3.ab2@26034> RTS
0003B862 <AmiBlitz3.ab2@26038>   MOVE.l d0,a1
0003B868 <AmiBlitz3.ab2@26039>   MOVEA.l libpointer,A2
0003B86C <AmiBlitz3.ab2@26042>     MOVE.l $12(A2),D0
0003B870 <AmiBlitz3.ab2@26043>     TST.w -$2(A2,D0.L)
0003B874 <AmiBlitz3.ab2@26044>      BEQ.w JL_0_102AAa
0003B876 <AmiBlitz3.ab2@26045>     SUBQ.w #1,D1
0003B87A <AmiBlitz3.ab2@26046>      BPL.w JL_0_102AAa
0003B87E <AmiBlitz3.ab2@26047>     MOVEA.l -$1A(A2,D0.L),A3
0003B880 <AmiBlitz3.ab2@26048>     ADDA.l A2,A3
0003B882 <AmiBlitz3.ab2@26051>       MOVE.b (A3)+,(A1)+
0003B886 <AmiBlitz3.ab2@26052>     BNE.w JL_0_10294a
0003B888 <AmiBlitz3.ab2@26054>     CLR.b -(A1)
0003B88C <AmiBlitz3.ab2@26055>     MOVE.w -$4(A2,D0.L),D0
0003B892 <AmiBlitz3.ab2@26056>     AND.l #$ffff,d0
0003B894 <AmiBlitz3.ab2@26057> RTS
0003B896 <AmiBlitz3.ab2@26060>     MOVEA.l (A2),A2
0003B89A <AmiBlitz3.ab2@26061> BRA.w JL_0_1027Ca
0003B8AA <AmiBlitz3.ab2@26066> str_maxobjects_name:   Dc.b "              ",0 : Even
0003B8BA <AmiBlitz3.ab2@26067> str_maxobjects_name2:  Dc.b "              ",0 : Even
0003B8BC <AmiBlitz3.ab2@26068> objectbuffer:          Ds.w 1
0003B8BF <AmiBlitz3.ab2@26069>                        Dc.b "@",0,0
0003B8C2 <AmiBlitz3.ab2@26070>                        Ds.b 3
0003B8C9 <AmiBlitz3.ab2@26071> str_objectbuffer:      Dc.b "16384",0,0
0003B8CE <AmiBlitz3.ab2@26072>                        Ds.b 5
0003B8D0 <AmiBlitz3.ab2@26073> libsbuffer:            Ds.w 1
0003B8D4 <AmiBlitz3.ab2@26074>                        Dc.b $80,$00,$00,$00
0003B8D6 <AmiBlitz3.ab2@26075>                        Ds.w 1
0003B8DD <AmiBlitz3.ab2@26076> str_libsbuffer:        Dc.b "16384",0,0
0003B8E2 <AmiBlitz3.ab2@26077>                        Ds.b 5
0003B8E4 <AmiBlitz3.ab2@26078> systembuffer:          Ds.w 1                              ; systen buffer
0003B8E8 <AmiBlitz3.ab2@26079>                        Dc.b $10,$00,$00,$00
0003B8EA <AmiBlitz3.ab2@26080>                        Ds.w 1
0003B8F0 <AmiBlitz3.ab2@26081> str_systembuffer:      Dc.b "4096",0,0
0003B8F6 <AmiBlitz3.ab2@26082>                        Ds.w 3
0003B8F8 <AmiBlitz3.ab2@26083> databuffer:            Ds.w 1                              ; data buffer
0003B8FC <AmiBlitz3.ab2@26084>                        Dc.b $10,$00,$00,$00
0003B8FE <AmiBlitz3.ab2@26085>                        Ds.w 1
0003B904 <AmiBlitz3.ab2@26086> str_databuffer:        Dc.b "4096",0,0
0003B90A <AmiBlitz3.ab2@26087>                        Ds.w 3
0003B90C <AmiBlitz3.ab2@26088> macrobuffer_size:      Ds.w 1                              ; macro buffer
0003B90F <AmiBlitz3.ab2@26089>                        Dc.b " ",0,0
0003B912 <AmiBlitz3.ab2@26090>                        Ds.b 3
0003B918 <AmiBlitz3.ab2@26091> str_macrobuffer:       Dc.b "8192",0,0
0003B91E <AmiBlitz3.ab2@26092>                        Ds.w 3
0003B920 <AmiBlitz3.ab2@26093> stringbuffer:          Ds.w 1                              ; string buffer
0003B923 <AmiBlitz3.ab2@26094>                        Dc.b "(",0,0
0003B926 <AmiBlitz3.ab2@26095>                        Ds.b 3
0003B92D <AmiBlitz3.ab2@26096> str_stringbuffer:      Dc.b "10240",0,0                    ; stringbuff
0003B932 <AmiBlitz3.ab2@26097>                        Ds.b 5
0003B936 <AmiBlitz3.ab2@26098> maxobjects_value:      Dc.b $00,$64,$00,$00
0003B938 <AmiBlitz3.ab2@26099>                        Ds.w 1
0003B93D <AmiBlitz3.ab2@26100> str_maxobjects_value:  Dc.b "100",0,0
0003B944 <AmiBlitz3.ab2@26101>                        Ds.b 7
0003B948 <AmiBlitz3.ab2@26102> maxobjects_value2:     Dc.b $00,$14,$00,$00
0003B94C <AmiBlitz3.ab2@26104> str_maxobjects_value2: Dc.b "20",0,0
0003B954 <AmiBlitz3.ab2@26105>                        Ds.l 2
0003B955 <AmiBlitz3.ab2@26107> set_create_iconfile:   Dc.b $00
0003B958 <AmiBlitz3.ab2@26108> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0003B95A <AmiBlitz3.ab2@26109>                        Dc.b $00,$01
0003B95B <AmiBlitz3.ab2@26111> set_use_debugger:      Dc.b $00                            ; Flags.w
0003B95E <AmiBlitz3.ab2@26112> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
0003B960 <AmiBlitz3.ab2@26113>                        Dc.b $00,$01                        ; GadgetType.w
0003B964 <AmiBlitz3.ab2@26114> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
0003B968 <AmiBlitz3.ab2@26115> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
0003B96C <AmiBlitz3.ab2@26116> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
0003B96E <AmiBlitz3.ab2@26117> AL_0_11094:            Ds.w 1
0003B96F <AmiBlitz3.ab2@26119> set_make_smallestcode: Ds.b 1
0003B972 <AmiBlitz3.ab2@26120> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
0003B974 <AmiBlitz3.ab2@26121>                        Dc.b $00,$01
0003B975 <AmiBlitz3.ab2@26122> set_link_debuginfo:    Ds.b 1
0003B978 <AmiBlitz3.ab2@26123> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
0003B97A <AmiBlitz3.ab2@26124>                        Dc.b $00,$01
0003B9BE <AmiBlitz3.ab2@26129>   Ds.l 17          ;resident files STEP $44 piece 8
0003BABA <AmiBlitz3.ab2@26131>   Ds.l 63
0003BB56 <AmiBlitz3.ab2@26132>   Ds.l 39
0003BB9A <AmiBlitz3.ab2@26134>   Ds.l 17
0003BC1A <AmiBlitz3.ab2@26137> str_calcexpression:    Ds.l 32
0003BC1E <AmiBlitz3.ab2@26138> AL_0_11A20:            Ds.l 1
0003BC28 <AmiBlitz3.ab2@26143>   MOVE.l destbufferend,AL_0_11A20
0003BC2E <AmiBlitz3.ab2@26144>   MOVE.l A7,errstack
0003BC38 <AmiBlitz3.ab2@26145>   MOVE.l #AJL_0_11C00,errcont
0003BC3E <AmiBlitz3.ab2@26146>   CLR.b str_calcexpression
0003BC68 <AmiBlitz3.ab2@26147>   !basic
0003BC90 <AmiBlitz3.ab2@26148>   If Peek.l(Addr Window(3))=0
0003BCAC <AmiBlitz3.ab2@26149>     FindScreen 0
0003BD0A <AmiBlitz3.ab2@26150>     WZWindow 3,?wzgui,128,-2,-2,-2,-2,3
0003BD1A <AmiBlitz3.ab2@26151>     Poke.w ?button_bin_flags, $00
0003BD2A <AmiBlitz3.ab2@26152>     Poke.w ?button_dec_flags, $80
0003BD4C <AmiBlitz3.ab2@26154>     activategadget{"CALC_EXPRESSION"}
0003BD52 <AmiBlitz3.ab2@26155>     calc_exit.l = False
0003BD5C <AmiBlitz3.ab2@26157>       ev.l = WaitEvent
0003BD62 <AmiBlitz3.ab2@26158>       Select ev
0003BD70 <AmiBlitz3.ab2@26160>         Case #IDCMP_IDCMPUPDATE
0003BD98 <AmiBlitz3.ab2@26161>           Select WZGadName
0003BDBC <AmiBlitz3.ab2@26163>             Case "CALC_EXPRESSION"
0003BE0A <AmiBlitz3.ab2@26164>               calc_expression$ = WZGetString("CALC_EXPRESSION")
0003BE42 <AmiBlitz3.ab2@26165>               Poke$ ?str_calcexpression,calc_expression$
0003BE6C <AmiBlitz3.ab2@26167>             Case "BIN"
0003BE7C <AmiBlitz3.ab2@26168>               Poke.w ?button_bin_flags, $80
0003BE8C <AmiBlitz3.ab2@26169>               Poke.w ?button_dec_flags, $00
0003BEB6 <AmiBlitz3.ab2@26171>             Case "HEX"
0003BEC6 <AmiBlitz3.ab2@26172>               Poke.w ?button_bin_flags, $00
0003BED6 <AmiBlitz3.ab2@26173>               Poke.w ?button_dec_flags, $00
0003BF00 <AmiBlitz3.ab2@26175>             Case "DEC"
0003BF10 <AmiBlitz3.ab2@26176>               Poke.w ?button_bin_flags, $00
0003BF20 <AmiBlitz3.ab2@26177>               Poke.w ?button_dec_flags, $80
0003BF4A <AmiBlitz3.ab2@26179>             Case "CALC_CLOSE"
0003BF50 <AmiBlitz3.ab2@26180>               calc_exit = True
0003BF5E <AmiBlitz3.ab2@26182>           End Select
0003BF96 <AmiBlitz3.ab2@26183>           If calc_expression$<>""
0003BFB4 <AmiBlitz3.ab2@26184>             !asm
0003BFB8 <AmiBlitz3.ab2@26185>             BSR examine_expression
0003BFE2 <AmiBlitz3.ab2@26186>             !basic
0003C00C <AmiBlitz3.ab2@26187>             calc_expression$ = Peek$(?str_calcexpression)
0003C046 <AmiBlitz3.ab2@26188>             WZPrint "CALC_EXPRESSION",&calc_expression$
0003C05A <AmiBlitz3.ab2@26191>         Case #IDCMP_CLOSEWINDOW
0003C060 <AmiBlitz3.ab2@26192>           calc_exit = True
0003C062 <AmiBlitz3.ab2@26194>       End Select
0003C084 <AmiBlitz3.ab2@26195>       activategadget{"CALC_EXPRESSION"}
0003C08E <AmiBlitz3.ab2@26196>     Until calc_exit
0003C0A2 <AmiBlitz3.ab2@26197>     WZCloseWindow 3
0003C0C0 <AmiBlitz3.ab2@26198>     !asm
0003C0C2 <AmiBlitz3.ab2@26199>   RTS
0003C0E0 <AmiBlitz3.ab2@26201>   !asm
0003C0E6 <AmiBlitz3.ab2@26205>   LEA str_calcexpression,A0
0003C0EC <AmiBlitz3.ab2@26213>   JSR setcvars
0003C0F2 <AmiBlitz3.ab2@26214>   JSR setsvars
0003C0F8 <AmiBlitz3.ab2@26215>   CLR.w connest
0003C0FE <AmiBlitz3.ab2@26216>   LEA str_calcexpression,A5
0003C104 <AmiBlitz3.ab2@26217>   JSR AJL_0_BF6E
0003C10A <AmiBlitz3.ab2@26218>   LEA str_calcexpression,A0
0003C10C <AmiBlitz3.ab2@26219>   TST.l D3
0003C110 <AmiBlitz3.ab2@26220>    BPL.w JL_0_11AE8
0003C114 <AmiBlitz3.ab2@26221>   MOVE.b #$2D,(A0)+
0003C116 <AmiBlitz3.ab2@26222>   NEG.l D3
0003C11E <AmiBlitz3.ab2@26225>   CMPI.w #$80,button_dec_flags
0003C122 <AmiBlitz3.ab2@26226>    BEQ.w JL_0_11B74
0003C124 <AmiBlitz3.ab2@26227>   MOVEQ.l #$00,D1
0003C12C <AmiBlitz3.ab2@26228>   CMPI.w #$80,button_bin_flags
0003C130 <AmiBlitz3.ab2@26229>    BNE.w JL_0_11B36
0003C132 <AmiBlitz3.ab2@26230>   MOVEQ.l #$1F,D0
0003C136 <AmiBlitz3.ab2@26231>   MOVE.b #$25,(A0)+
0003C138 <AmiBlitz3.ab2@26234>       LSL.l #1,D3
0003C13C <AmiBlitz3.ab2@26235>        BCC.w JL_0_11B18
0003C140 <AmiBlitz3.ab2@26236>       MOVE.b #"1",(A0)+
0003C142 <AmiBlitz3.ab2@26237>       MOVEQ.l #-$01,D1
0003C146 <AmiBlitz3.ab2@26238>   BRA.w JL_0_11B22
0003C148 <AmiBlitz3.ab2@26241>       TST.w D1
0003C14C <AmiBlitz3.ab2@26242>       BEQ.w JL_0_11B22
0003C150 <AmiBlitz3.ab2@26243>       MOVE.b #"0",(A0)+
0003C154 <AmiBlitz3.ab2@26246>  DBF D0,JL_0_11B08
0003C156 <AmiBlitz3.ab2@26249>   TST.w D1
0003C15A <AmiBlitz3.ab2@26250>   BNE.w JL_0_11B30
0003C15E <AmiBlitz3.ab2@26251>   MOVE.b #"0",(A0)+
0003C160 <AmiBlitz3.ab2@26254>   CLR.b (A0)
0003C164 <AmiBlitz3.ab2@26255> BRA.w JL_0_11B7C
0003C166 <AmiBlitz3.ab2@26258>   MOVEQ.l #$07,D0
0003C16A <AmiBlitz3.ab2@26259>   MOVE.b #$24,(A0)+
0003C16C <AmiBlitz3.ab2@26262>     MOVE.l D3,D2
0003C16E <AmiBlitz3.ab2@26263>     SWAP D2
0003C170 <AmiBlitz3.ab2@26264>     LSR.w #8,D2
0003C172 <AmiBlitz3.ab2@26265>     LSR.w #4,D2
0003C176 <AmiBlitz3.ab2@26266>     ADDI.w #$30,D2
0003C17A <AmiBlitz3.ab2@26267>     CMP.w #$3A,D2
0003C17E <AmiBlitz3.ab2@26268>      BCS.w JL_0_11B52
0003C180 <AmiBlitz3.ab2@26269>     ADDQ.w #7,D2
0003C184 <AmiBlitz3.ab2@26272>     CMP.w #$30,D2
0003C188 <AmiBlitz3.ab2@26273>     BEQ.w JL_0_11B62
0003C18A <AmiBlitz3.ab2@26274>     MOVE.b D2,(A0)+
0003C18C <AmiBlitz3.ab2@26275>     MOVEQ.l #-$01,D1
0003C190 <AmiBlitz3.ab2@26276>   BRA.w JL_0_11B6A
0003C192 <AmiBlitz3.ab2@26279>     TST.w D1
0003C196 <AmiBlitz3.ab2@26280>      BEQ.w JL_0_11B6A
0003C198 <AmiBlitz3.ab2@26281>     MOVE.b D2,(A0)+
0003C19A <AmiBlitz3.ab2@26284>     LSL.l #4,D3
0003C19E <AmiBlitz3.ab2@26285>  DBF D0,JL_0_11B3C
0003C1A2 <AmiBlitz3.ab2@26287> BRA.w JL_0_11B26
0003C1A4 <AmiBlitz3.ab2@26290>   MOVE.l D3,D2
0003C1AA <AmiBlitz3.ab2@26291>   JSR makelong
0003C1AC <AmiBlitz3.ab2@26294> RTS
0003C1B6 <AmiBlitz3.ab2@26298>   MOVE.l AL_0_11A20,destbufferend
0003C1BC <AmiBlitz3.ab2@26299>   CLR.b str_calcexpression
0003C1C0 <AmiBlitz3.ab2@26300> BRA.w JL_0_11B7C
0003C2BF <AmiBlitz3.ab2@26304> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
0003C2C0 <AmiBlitz3.ab2@26306> Even
0003C2FE <AmiBlitz3.ab2@26311>   !ComData_GetL{comFunc_OpenCompilerWindow,A1}
0003C304 <AmiBlitz3.ab2@26312>   MOVE.l #1001,D0
0003C30A <AmiBlitz3.ab2@26313>   MOVE.l #str_cliarguments,D1
0003C30C <AmiBlitz3.ab2@26314>   JSR (A1)
0003C30E <AmiBlitz3.ab2@26315> RTS
0003C310 <AmiBlitz3.ab2@26320>     MOVE.b (a5)+,d0
0003C314 <AmiBlitz3.ab2@26321>     BEQ 'l2
0003C318 <AmiBlitz3.ab2@26322>     CMP.b #$80,d0
0003C31C <AmiBlitz3.ab2@26323>     BNE 'l1
0003C31E <AmiBlitz3.ab2@26324>     MOVE.b (a5)+,d0
0003C322 <AmiBlitz3.ab2@26325>     BEQ 'l2
0003C326 <AmiBlitz3.ab2@26326>     CMP.b #$02,d0
0003C32A <AmiBlitz3.ab2@26327>   BNE 'l1
0003C32E <AmiBlitz3.ab2@26330>     CMP.b #$20,(a5)+
0003C332 <AmiBlitz3.ab2@26331>   BEQ 'l3
0003C334 <AmiBlitz3.ab2@26332>   SUBQ.l #1,a5
0003C336 <AmiBlitz3.ab2@26333>   TST.b (a5)
0003C33A <AmiBlitz3.ab2@26334>   BEQ 'l2
0003C33E <AmiBlitz3.ab2@26335>   CMP.w #$8008,(a5)
0003C342 <AmiBlitz3.ab2@26336>   BEQ 'l4
0003C346 <AmiBlitz3.ab2@26337>   CMP.w #$8009,(a5)
0003C34A <AmiBlitz3.ab2@26338>   BEQ 'l4
0003C34E <AmiBlitz3.ab2@26339> BRA 'l1
0003C350 <AmiBlitz3.ab2@26342>   ADDQ.l #2,a5
0003C356 <AmiBlitz3.ab2@26343>   JSR skiprest
0003C358 <AmiBlitz3.ab2@26344> RTS
0003C35E <AmiBlitz3.ab2@26347>   JSR nextline
0003C362 <AmiBlitz3.ab2@26348>   BNE 'l1
0003C364 <AmiBlitz3.ab2@26349> RTS
0003C38E <AmiBlitz3.ab2@26353>   !basic
0003C398 <AmiBlitz3.ab2@26354>   DateFormat 1
0003C3A6 <AmiBlitz3.ab2@26355>   i.l=SystemDate
0003C3CC <AmiBlitz3.ab2@26356>   a$=Date$ (i)
0003C44A <AmiBlitz3.ab2@26357>   a$=Replace$(a$,"/",".")
0003C450 <AmiBlitz3.ab2@26358>   GetD0 &a$
0003C452 <AmiBlitz3.ab2@26359>   MOVEQ #8,d2
0003C454 <AmiBlitz3.ab2@26360>   MOVE.l d0,a0
0003C456 <AmiBlitz3.ab2@26363>     MOVE.b (a0)+,d1
0003C45C <AmiBlitz3.ab2@26364>     JSR pokedata1b
0003C460 <AmiBlitz3.ab2@26365>  DBF d2,'l1
0003C462 <AmiBlitz3.ab2@26367>   MOVEQ #0,d0
0003C464 <AmiBlitz3.ab2@26368>   MOVE.b (a0)+,d0
0003C482 <AmiBlitz3.ab2@26369>   !asm
0003C488 <AmiBlitz3.ab2@26370>   ADD.l #9,d2
0003C48E <AmiBlitz3.ab2@26371>   ADD.l #9,a5
0003C490 <AmiBlitz3.ab2@26372> RTS
0003C4BA <AmiBlitz3.ab2@26376>   !basic
0003C4C4 <AmiBlitz3.ab2@26377>   DateFormat 0
0003C4D2 <AmiBlitz3.ab2@26378>   i.l=SystemDate
0003C4F8 <AmiBlitz3.ab2@26379>   a$=Date$ (i)
0003C576 <AmiBlitz3.ab2@26380>   a$=Replace$(a$,"/",".")
0003C57C <AmiBlitz3.ab2@26381>   GetD0 &a$
0003C57E <AmiBlitz3.ab2@26382>   MOVEQ #8,d2
0003C580 <AmiBlitz3.ab2@26383>   MOVE.l d0,a0
0003C582 <AmiBlitz3.ab2@26386>     MOVE.b (a0)+,d1
0003C588 <AmiBlitz3.ab2@26387>     JSR pokedata1b
0003C58C <AmiBlitz3.ab2@26388>  DBF d2,'l1
0003C58E <AmiBlitz3.ab2@26390>   MOVEQ #0,d0
0003C590 <AmiBlitz3.ab2@26391>   MOVE.b (a0)+,d0
0003C5AE <AmiBlitz3.ab2@26392>   !asm
0003C5B4 <AmiBlitz3.ab2@26393>   ADD.l #9,d2
0003C5BA <AmiBlitz3.ab2@26394>   ADD.l #13,a5
0003C5BC <AmiBlitz3.ab2@26395> RTS
0003C5E6 <AmiBlitz3.ab2@26399>   !basic
0003C5F0 <AmiBlitz3.ab2@26400>   DateFormat 1
0003C5FE <AmiBlitz3.ab2@26401>   i.l = SystemDate
0003C624 <AmiBlitz3.ab2@26402>   a$ = Date$ (i)
0003C6A2 <AmiBlitz3.ab2@26403>   a$ = Replace$(a$,"/",".")
0003C6A8 <AmiBlitz3.ab2@26404>   GetD0 &a$
0003C6AA <AmiBlitz3.ab2@26405>   MOVEQ #8,d2
0003C6AC <AmiBlitz3.ab2@26406>   MOVE.l d0,a0
0003C6AE <AmiBlitz3.ab2@26409>     MOVE.b (a0)+,d1
0003C6B4 <AmiBlitz3.ab2@26410>     JSR writebyte
0003C6B8 <AmiBlitz3.ab2@26411>  DBF d2,'l1
0003C6BA <AmiBlitz3.ab2@26413>   MOVEQ #0,d0
0003C6BC <AmiBlitz3.ab2@26414>   MOVE.b (a0)+,d0
0003C6DA <AmiBlitz3.ab2@26415>   !asm
0003C6E0 <AmiBlitz3.ab2@26416>   ADD.l #9,a5
0003C6E2 <AmiBlitz3.ab2@26417> RTS
0003C70C <AmiBlitz3.ab2@26421>   !basic
0003C716 <AmiBlitz3.ab2@26422>   DateFormat 0
0003C724 <AmiBlitz3.ab2@26423>   i.l=SystemDate
0003C74A <AmiBlitz3.ab2@26424>   a$=Date$ (i)
0003C7C8 <AmiBlitz3.ab2@26425>   a$=Replace$(a$,"/",".")
0003C7CE <AmiBlitz3.ab2@26426>   GetD0 &a$
0003C7D0 <AmiBlitz3.ab2@26427>   MOVEQ #8,d2
0003C7D2 <AmiBlitz3.ab2@26428>   MOVE.l d0,a0
0003C7D4 <AmiBlitz3.ab2@26431>     MOVE.b (a0)+,d1
0003C7DA <AmiBlitz3.ab2@26432>     JSR writebyte
0003C7DE <AmiBlitz3.ab2@26433>  DBF d2,'l1
0003C7E0 <AmiBlitz3.ab2@26435>   MOVEQ #0,d0
0003C7E2 <AmiBlitz3.ab2@26436>   MOVE.b (a0)+,d0
0003C800 <AmiBlitz3.ab2@26437>   !asm
0003C806 <AmiBlitz3.ab2@26438>   ADD.l #13,a5
0003C808 <AmiBlitz3.ab2@26439> RTS
0003C80A <AmiBlitz3.ab2@26443>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003C80C <AmiBlitz3.ab2@26444>   MOVE.l a5,d0
0003C836 <AmiBlitz3.ab2@26445>   !basic
0003C83A <AmiBlitz3.ab2@26446>   _myD0.l = PutD0
0003C844 <AmiBlitz3.ab2@26447>   If _myD0
0003C88A <AmiBlitz3.ab2@26448>     verstring$ = Left$(Peek.s(_myD0),9+3)
0003C8DC <AmiBlitz3.ab2@26449>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003C8E2 <AmiBlitz3.ab2@26450>   Else
0003C910 <AmiBlitz3.ab2@26451>     error{"INTERNAL: Invalid pointer in version_string!"}
0003C920 <AmiBlitz3.ab2@26456>   actual_version.l = Peek.l(?versioninformation)
0003C930 <AmiBlitz3.ab2@26457>   actual_build.l   = Peek.l(?number_of_builds)
0003C954 <AmiBlitz3.ab2@26459>   Format "00"
0003C98A <AmiBlitz3.ab2@26460>   Select verstring$
0003C9AE <AmiBlitz3.ab2@26462>     Case "VER_MAJOR"
0003C9EA <AmiBlitz3.ab2@26463>      put_versionstr$ = Str$(actual_version LSR 24)
0003CA14 <AmiBlitz3.ab2@26465>     Case "VER_MINOR"
0003CA58 <AmiBlitz3.ab2@26466>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003CA82 <AmiBlitz3.ab2@26468>     Case "VER_PATCH"
0003CAC6 <AmiBlitz3.ab2@26469>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003CAF0 <AmiBlitz3.ab2@26471>     Case "VER_BUILD"
0003CB14 <AmiBlitz3.ab2@26472>      Format ""
0003CB48 <AmiBlitz3.ab2@26473>      put_versionstr$ = Str$(actual_build)
0003CB4E <AmiBlitz3.ab2@26475>     Default
0003CB76 <AmiBlitz3.ab2@26476>      put_versionstr$ = "{unknown compilerconstant}"
0003CB84 <AmiBlitz3.ab2@26479>   End Select
0003CBA8 <AmiBlitz3.ab2@26480>   Format ""
0003CBB8 <AmiBlitz3.ab2@26482>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
0003CBBA <AmiBlitz3.ab2@26483>   MOVE.l d0,d2
0003CBBC <AmiBlitz3.ab2@26484>   MOVE.l d2,-(a7)
0003CBC0 <AmiBlitz3.ab2@26485>   SUB #1,d2
0003CBC6 <AmiBlitz3.ab2@26487>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0003CBC8 <AmiBlitz3.ab2@26488>   MOVE.l d0,a0
0003CBCA <AmiBlitz3.ab2@26491>     MOVE.b (a0)+,d1
0003CBD0 <AmiBlitz3.ab2@26492>     JSR pokedata1b
0003CBD4 <AmiBlitz3.ab2@26493>  DBF d2,'l1
0003CBD6 <AmiBlitz3.ab2@26495>   MOVEQ #0,d0
0003CBF4 <AmiBlitz3.ab2@26496>   !asm
0003CBF6 <AmiBlitz3.ab2@26497>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003CBF8 <AmiBlitz3.ab2@26498>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003CBFA <AmiBlitz3.ab2@26499>   ADD.l d0,d2
0003CC00 <AmiBlitz3.ab2@26500>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003CC02 <AmiBlitz3.ab2@26501>   MOVEQ #0,d0
0003CC04 <AmiBlitz3.ab2@26502> RTS
0003CC06 <AmiBlitz3.ab2@26506>   MOVE.l a5,d0
0003CC30 <AmiBlitz3.ab2@26507>   !basic
0003CC34 <AmiBlitz3.ab2@26508>   _myD0.l = PutD0
0003CC3E <AmiBlitz3.ab2@26509>   If _myD0
0003CC84 <AmiBlitz3.ab2@26510>     verstring$ = Left$(Peek.s(_myD0),9+3)
0003CCD6 <AmiBlitz3.ab2@26511>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003CCDC <AmiBlitz3.ab2@26512>   Else
0003CD0A <AmiBlitz3.ab2@26513>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
0003CD1A <AmiBlitz3.ab2@26518>   actual_version.l = Peek.l(?versioninformation)
0003CD2A <AmiBlitz3.ab2@26519>   actual_build.l   = Peek.l(?number_of_builds)
0003CD4E <AmiBlitz3.ab2@26521>   Format ""
0003CD84 <AmiBlitz3.ab2@26522>   Select verstring$
0003CDA8 <AmiBlitz3.ab2@26524>     Case "VER_MAJOR"
0003CDE4 <AmiBlitz3.ab2@26525>      put_versionstr$ = Str$(actual_version LSR 24)
0003CE0E <AmiBlitz3.ab2@26527>     Case "VER_MINOR"
0003CE52 <AmiBlitz3.ab2@26528>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003CE7C <AmiBlitz3.ab2@26530>     Case "VER_PATCH"
0003CEC0 <AmiBlitz3.ab2@26531>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
0003CEEA <AmiBlitz3.ab2@26533>     Case "VER_BUILD"
0003CF0E <AmiBlitz3.ab2@26534>      Format ""
0003CF42 <AmiBlitz3.ab2@26535>      put_versionstr$ = Str$(actual_build)
0003CF48 <AmiBlitz3.ab2@26537>     Default
0003CF70 <AmiBlitz3.ab2@26538>      put_versionstr$ = "{unknown compilerconstant}"
0003CF7E <AmiBlitz3.ab2@26540>   End Select
0003CFA2 <AmiBlitz3.ab2@26541>   Format ""
0003CFB8 <AmiBlitz3.ab2@26543>   GetD0 FLen(put_versionstr$)-1
0003CFBA <AmiBlitz3.ab2@26544>   MOVE.l d0,d2
0003CFC0 <AmiBlitz3.ab2@26546>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
0003CFC2 <AmiBlitz3.ab2@26547>   MOVE.l d0,a0
0003CFC4 <AmiBlitz3.ab2@26550>     MOVE.b (a0)+,d1
0003CFCA <AmiBlitz3.ab2@26551>     JSR writebyte
0003CFCE <AmiBlitz3.ab2@26552>  DBF d2,'l1
0003CFD0 <AmiBlitz3.ab2@26554>   MOVEQ #0,d0
0003CFD2 <AmiBlitz3.ab2@26555>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
0003CFF0 <AmiBlitz3.ab2@26556>   !asm
0003CFF6 <AmiBlitz3.ab2@26557>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
0003CFF8 <AmiBlitz3.ab2@26558> RTS
0003CFFA <AmiBlitz3.ab2@26563>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003CFFC <AmiBlitz3.ab2@26564>   MOVE.l a5,d0
0003D026 <AmiBlitz3.ab2@26565>   !basic
0003D02A <AmiBlitz3.ab2@26566>   _myD0.l = PutD0
0003D034 <AmiBlitz3.ab2@26567>   If _myD0
0003D07A <AmiBlitz3.ab2@26568>     constring$ = Left$(Peek.s(_myD0),13 + 3)
0003D0CC <AmiBlitz3.ab2@26569>     constring$ = UnRight$(constring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003D0D2 <AmiBlitz3.ab2@26570>   Else
0003D100 <AmiBlitz3.ab2@26571>     error{"INTERNAL: Invalid pointer in insert_functionname!"}
0003D14E <AmiBlitz3.ab2@26573>   Select LCase$(constring$)
0003D172 <AmiBlitz3.ab2@26575>    Case "this_function"
0003D192 <AmiBlitz3.ab2@26576>     If Peek.l(?currentfunction)<>0
0003D1A2 <AmiBlitz3.ab2@26577>       currentfuncP.l = Peek.l(?currentfunction)
0003D1AC <AmiBlitz3.ab2@26578>       If currentfuncP
0003D1E0 <AmiBlitz3.ab2@26579>         condata$ = Peek.s(currentfuncP + 48 + 1)
0003D1E6 <AmiBlitz3.ab2@26580>       Else
0003D20E <AmiBlitz3.ab2@26581>         condata$ = "???"
0003D23C <AmiBlitz3.ab2@26582>         error{"INTERNAL: Invalid pointer in currentfunction!"}
0003D242 <AmiBlitz3.ab2@26584>     Else
0003D26A <AmiBlitz3.ab2@26585>       condata$ = "GLOBAL"
0003D270 <AmiBlitz3.ab2@26588>    Default
0003D2A4 <AmiBlitz3.ab2@26589>     condata$ = constring$
0003D2B2 <AmiBlitz3.ab2@26591>   End Select
0003D2E0 <AmiBlitz3.ab2@26592>   GetD0 Len(condata$)                                      ; laenge zielstring -> Stack
0003D2E2 <AmiBlitz3.ab2@26593>   MOVE.l d0,d2
0003D2E4 <AmiBlitz3.ab2@26594>   MOVE.l d2,-(a7)
0003D2EA <AmiBlitz3.ab2@26596>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003D2EC <AmiBlitz3.ab2@26597>   MOVE.l d0,a0
0003D2EE <AmiBlitz3.ab2@26600>     MOVE.b (a0)+,d1
0003D2F4 <AmiBlitz3.ab2@26601>     JSR pokedata1b
0003D2F8 <AmiBlitz3.ab2@26602>  DBF d2,'l1
0003D316 <AmiBlitz3.ab2@26604>   !asm
0003D318 <AmiBlitz3.ab2@26605>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003D31A <AmiBlitz3.ab2@26606>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003D31C <AmiBlitz3.ab2@26607>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003D322 <AmiBlitz3.ab2@26608>   ADD.l #16,a5                                             ; string_ptr um konstante weitersetzen
0003D324 <AmiBlitz3.ab2@26609> RTS
0003D326 <AmiBlitz3.ab2@26614>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003D328 <AmiBlitz3.ab2@26615>   MOVE.l a5,d0
0003D352 <AmiBlitz3.ab2@26616>   !basic
0003D356 <AmiBlitz3.ab2@26617>   _myD0.l = PutD0
0003D360 <AmiBlitz3.ab2@26618>   If _myD0
0003D3A6 <AmiBlitz3.ab2@26619>     constring$ = Left$(Peek.s(_myD0),8 + 3)
0003D3F8 <AmiBlitz3.ab2@26620>     constring$ = UnRight$(constring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003D3FE <AmiBlitz3.ab2@26621>   Else
0003D42C <AmiBlitz3.ab2@26622>     error{"INTERNAL: Invalid pointer in insert_codeline!"}
0003D454 <AmiBlitz3.ab2@26623>     constring$ = "???"
0003D4A2 <AmiBlitz3.ab2@26625>   Select LCase$(constring$)
0003D4C6 <AmiBlitz3.ab2@26627>    Case "codeline"
0003D502 <AmiBlitz3.ab2@26628>     condata$ = Str$(Peek.l(?globallinecount))
0003D508 <AmiBlitz3.ab2@26630>    Default
0003D53C <AmiBlitz3.ab2@26631>     condata$ = constring$
0003D54A <AmiBlitz3.ab2@26633>   End Select
0003D578 <AmiBlitz3.ab2@26635>   GetD0 Len(condata$)                                      ; laenge zielstring -> Stack
0003D57A <AmiBlitz3.ab2@26636>   MOVE.l d0,d2
0003D57C <AmiBlitz3.ab2@26637>   MOVE.l d2,-(a7)
0003D580 <AmiBlitz3.ab2@26638>   SUB #1,d2
0003D586 <AmiBlitz3.ab2@26640>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003D588 <AmiBlitz3.ab2@26641>   MOVE.l d0,a0
0003D58A <AmiBlitz3.ab2@26644>     MOVE.b (a0)+,d1
0003D590 <AmiBlitz3.ab2@26645>     JSR pokedata1b
0003D594 <AmiBlitz3.ab2@26646>  DBF d2,'l1
0003D596 <AmiBlitz3.ab2@26648>   MOVEQ #0,d0
0003D5B4 <AmiBlitz3.ab2@26649>   !asm
0003D5B6 <AmiBlitz3.ab2@26650>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003D5B8 <AmiBlitz3.ab2@26651>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003D5BA <AmiBlitz3.ab2@26652>   ADD.l d0,d2
0003D5C0 <AmiBlitz3.ab2@26653>   ADD.l #11,a5                                             ; string_ptr um konstante weitersetzen
0003D5C2 <AmiBlitz3.ab2@26654>   MOVEQ #0,d0
0003D5C4 <AmiBlitz3.ab2@26655> RTS
0003D5EE <AmiBlitz3.ab2@26658> Function.l ab3_GetIncludeLock{filename.s}
0003D60E <AmiBlitz3.ab2@26659>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
0003D666 <AmiBlitz3.ab2@26660>   ex.s       = dos_GetExt{filename}
0003D67A <AmiBlitz3.ab2@26662>   If incLock = False
0003D6EE <AmiBlitz3.ab2@26663>     filename = dos_SetExt{filename,"ab3"}
0003D70E <AmiBlitz3.ab2@26664>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
0003D722 <AmiBlitz3.ab2@26667>   If incLock = False
0003D796 <AmiBlitz3.ab2@26668>     filename = dos_SetExt{filename,"ab2"}
0003D7B6 <AmiBlitz3.ab2@26669>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
0003D7CA <AmiBlitz3.ab2@26672>   If incLock = False
0003D83E <AmiBlitz3.ab2@26673>     filename = dos_SetExt{filename,"bb2"}
0003D85E <AmiBlitz3.ab2@26674>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
0003D872 <AmiBlitz3.ab2@26677>   If incLock = False
0003D904 <AmiBlitz3.ab2@26678>     filename = dos_SetExt{filename,ex+".ab3"}
0003D924 <AmiBlitz3.ab2@26679>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
0003D938 <AmiBlitz3.ab2@26682>   If incLock = False
0003D9AC <AmiBlitz3.ab2@26683>     filename = dos_SetExt{filename,"ab2"}
0003D9CC <AmiBlitz3.ab2@26684>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
0003D9E0 <AmiBlitz3.ab2@26687>   If incLock = False
0003DA54 <AmiBlitz3.ab2@26688>     filename = dos_SetExt{filename,"bb2"}
0003DA74 <AmiBlitz3.ab2@26689>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
0003DA7E <AmiBlitz3.ab2@26692>  Function Return incLock
0003DA98 <AmiBlitz3.ab2@26693> End Function
0003DAC2 <AmiBlitz3.ab2@26697>   !basic
0003DAEC <AmiBlitz3.ab2@26698>   incString.s = Peek$(?ptr_parameterstore)
0003DB1A <AmiBlitz3.ab2@26700>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003DB1E <AmiBlitz3.ab2@26701>   incDirP.l   = PutD0                                       ;    "
0003DB46 <AmiBlitz3.ab2@26702>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003DBC6 <AmiBlitz3.ab2@26703>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003DBF8 <AmiBlitz3.ab2@26704>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
0003DC0C <AmiBlitz3.ab2@26706>   If incLock = False ; not found => check default Include Directory
0003DC1C <AmiBlitz3.ab2@26707>     incDirP.l = Peek.l(?incd)
0003DC26 <AmiBlitz3.ab2@26708>     If incDirP
0003DC4E <AmiBlitz3.ab2@26709>       incDir_.s = Peek.s(incDirP)
0003DC54 <AmiBlitz3.ab2@26710>     Else
0003DCBE <AmiBlitz3.ab2@26711>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003DD3E <AmiBlitz3.ab2@26713>     incFile.s = dos_AddPart{incDir_,incString}
0003DD70 <AmiBlitz3.ab2@26714>     incLock.l = ab3_GetIncludeLock{incFile}
0003DD84 <AmiBlitz3.ab2@26717>   If incLock = False ; not found => check relative to current source
0003DD9C <AmiBlitz3.ab2@26718>     incDepth.l = Peek.w(?ininclude)-1
0003DDC2 <AmiBlitz3.ab2@26719>     If incDepth >= 0 AND incDepth < #maxincludes
0003DE22 <AmiBlitz3.ab2@26720>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
0003DEA2 <AmiBlitz3.ab2@26721>       incFile.s = dos_AddPart{incDir_,incString}
0003DED4 <AmiBlitz3.ab2@26722>       incLock.l = ab3_GetIncludeLock{incFile}
0003DEE8 <AmiBlitz3.ab2@26726>   If incLock = False ; still not found => check default Include Directory and name only
0003DEF8 <AmiBlitz3.ab2@26727>     incDirP.l = Peek.l(?incd)
0003DF02 <AmiBlitz3.ab2@26728>     If incDirP
0003DF2A <AmiBlitz3.ab2@26729>       incDir_.s = Peek.s(incDirP)
0003DF30 <AmiBlitz3.ab2@26730>     Else
0003DF9A <AmiBlitz3.ab2@26731>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003E048 <AmiBlitz3.ab2@26733>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
0003E07A <AmiBlitz3.ab2@26734>     incLock.l = ab3_GetIncludeLock{incFile}
0003E084 <AmiBlitz3.ab2@26737>   If incLock
0003E09A <AmiBlitz3.ab2@26738>     MaxLen incFile = 1024
0003E0BE <AmiBlitz3.ab2@26739>     NameFromLock_ incLock,&incFile,1024
0003E0E8 <AmiBlitz3.ab2@26740>     incFile = Peek.s(&incFile)
0003E120 <AmiBlitz3.ab2@26741>     Poke$ ?ptr_parameterstore,incFile
0003E134 <AmiBlitz3.ab2@26742>     i = FLen(incFile)
0003E140 <AmiBlitz3.ab2@26743>     GetReg d0,i
0003E146 <AmiBlitz3.ab2@26744>     MOVE.l d0,tempstore
0003E156 <AmiBlitz3.ab2@26745>     UnLock_ incLock
0003E174 <AmiBlitz3.ab2@26748>   !asm
0003E17A <AmiBlitz3.ab2@26749>   TST.l tempstore
0003E17E <AmiBlitz3.ab2@26750>    BEQ 'l1
0003E184 <AmiBlitz3.ab2@26751>   MOVE.l tempstore,d2
0003E186 <AmiBlitz3.ab2@26754> RTS
0003E1B0 <AmiBlitz3.ab2@26758>   !basic
0003E1DA <AmiBlitz3.ab2@26759>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
0003E208 <AmiBlitz3.ab2@26760>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003E20C <AmiBlitz3.ab2@26761>   incDirP.l   = PutD0                                       ;    "
0003E234 <AmiBlitz3.ab2@26762>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003E2B4 <AmiBlitz3.ab2@26763>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003E2D4 <AmiBlitz3.ab2@26764>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
0003E2E8 <AmiBlitz3.ab2@26766>   If incLock = False                                        ; not found => try orignal string only to find
0003E308 <AmiBlitz3.ab2@26767>     incLock.l = Lock_(&incString,#ACCESS_READ)
0003E312 <AmiBlitz3.ab2@26770>   If incLock                                                ; found => store full path
0003E328 <AmiBlitz3.ab2@26771>     MaxLen incFile = 1024
0003E34C <AmiBlitz3.ab2@26772>     NameFromLock_ incLock,&incFile,1024
0003E376 <AmiBlitz3.ab2@26773>     incFile = Peek.s(&incFile)
0003E3AE <AmiBlitz3.ab2@26774>     Poke$ ?ptr_parameterstore,incFile
0003E3BA <AmiBlitz3.ab2@26777> 
0003E3D8 <AmiBlitz3.ab2@26778>   !asm
0003E3DA <AmiBlitz3.ab2@26779> RTS
0003E3E0 <AmiBlitz3.ab2@26790>   JSR Aclearallvars
0003E3E6 <AmiBlitz3.ab2@26791>   JSR free_unusedfunctions
0003E3F0 <AmiBlitz3.ab2@26806>   MOVE.l #"NORE",reqmode
0003E3F6 <AmiBlitz3.ab2@26807> JSR handle_compileerror
0003E3F8 <AmiBlitz3.ab2@26810>   MOVE.l d0,-(a7)
0003E3FA <AmiBlitz3.ab2@26811>   MOVE.l a5,d0
0003E404 <AmiBlitz3.ab2@26812>   !basica7
0003E408 <AmiBlitz3.ab2@26813>   i.l = PutD0
0003E412 <AmiBlitz3.ab2@26814>   If i
0003E43A <AmiBlitz3.ab2@26815>     a$ = Peek$(i)
0003E46C <AmiBlitz3.ab2@26816>     b$ = Peeks$(i-7,7)
0003E552 <AmiBlitz3.ab2@26817>     i = Request(!TRANS{"Do workaround ?"},b$ + a$,!TRANS{"Yes|No"})
0003E558 <AmiBlitz3.ab2@26818>     MOVE.l d0,result
0003E55C <AmiBlitz3.ab2@26820>   !asma7
0003E55E <AmiBlitz3.ab2@26821>   MOVE.l (a7)+,d0
0003E560 <AmiBlitz3.ab2@26822> RTS
0003E58A <AmiBlitz3.ab2@26826>   !basic
0003E5B8 <AmiBlitz3.ab2@26827>   !ComData_LEA{comStr_CurrentDir,D0}
0003E5BC <AmiBlitz3.ab2@26828>   currentDirP.l = PutD0
0003E5EA <AmiBlitz3.ab2@26830>   !ComData_LEA{comStr_SourceName,D0}
0003E5EE <AmiBlitz3.ab2@26831>   fileNameP.l = PutD0
0003E616 <AmiBlitz3.ab2@26833>   check_dirname$  = Peek$(currentDirP)
0003E63E <AmiBlitz3.ab2@26834>   check_filename$ = Peek$(fileNameP)
0003E6C8 <AmiBlitz3.ab2@26835>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
0003E6CE <AmiBlitz3.ab2@26836>     JSR free_unusedfunctions
0003E718 <AmiBlitz3.ab2@26838>   olddirname$ = Peek$(check_dirname$)
0003E762 <AmiBlitz3.ab2@26839>   oldfilename$ = Peek$(check_filename$)
0003E78C <AmiBlitz3.ab2@26840>   For i = 0 To #maxincludes-1
0003E7A0 <AmiBlitz3.ab2@26841>     incline(i) = 0
0003E7B0 <AmiBlitz3.ab2@26842>   Next
0003E7CE <AmiBlitz3.ab2@26843>   !asm
0003E7D0 <AmiBlitz3.ab2@26844> RTS
0003E7D2 <AmiBlitz3.ab2@26848>   MOVEQ #0,d1
0003E7D4 <AmiBlitz3.ab2@26851>   MOVE.b (a5)+,d0
0003E7D8 <AmiBlitz3.ab2@26852>   BEQ 'er1
0003E7DC <AmiBlitz3.ab2@26853>   CMP.b #$20,d0
0003E7E0 <AmiBlitz3.ab2@26854>   BEQ 'l1
0003E7E2 <AmiBlitz3.ab2@26855>   ADDQ #1,d1
0003E7E6 <AmiBlitz3.ab2@26856>   CMP.b #$22,d0
0003E7EA <AmiBlitz3.ab2@26857>   BNE 'l1
0003E7EC <AmiBlitz3.ab2@26858> RTS
0003E7F2 <AmiBlitz3.ab2@26861> JMP syntaxerr
0003E816 <AmiBlitz3.ab2@26872> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
0003E834 <AmiBlitz3.ab2@26873> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0003E83A <AmiBlitz3.ab2@26878>   TST.b exdebug
0003E83E <AmiBlitz3.ab2@26879>   BNE 'l10
0003E844 <AmiBlitz3.ab2@26880>   MOVE.l #$4e71,d1
0003E84A <AmiBlitz3.ab2@26881>   JSR writeword
0003E850 <AmiBlitz3.ab2@26882>   MOVE.l destpointer,d0
0003E852 <AmiBlitz3.ab2@26883>   MOVE.l d0,d1
0003E854 <AmiBlitz3.ab2@26884>   ADDQ.l #3,d1
0003E85A <AmiBlitz3.ab2@26885>   AND.l #$fffffffc,d1
0003E860 <AmiBlitz3.ab2@26886>   MOVE.l d1,destpointer
0003E866 <AmiBlitz3.ab2@26887>   SUB.l destpointer,d0
0003E86A <AmiBlitz3.ab2@26888>   BEQ 'lnf1
0003E874 <AmiBlitz3.ab2@26889>   CMP.l #-1,bssstart
0003E878 <AmiBlitz3.ab2@26890>   BNE 'lnf1
0003E882 <AmiBlitz3.ab2@26891>   CMP.l #-1,chipstart
0003E886 <AmiBlitz3.ab2@26892>   BNE 'lnf1
0003E88C <AmiBlitz3.ab2@26893>   MOVE.l destpointer,a4
0003E892 <AmiBlitz3.ab2@26894>   TST.w dontwrite
0003E896 <AmiBlitz3.ab2@26895>   BNE 'lnf1
0003E89C <AmiBlitz3.ab2@26896>   MOVE.w #$4e71,-2(a4)
0003E8A6 <AmiBlitz3.ab2@26899>   CMP.l #-1,bssstart
0003E8AA <AmiBlitz3.ab2@26900>   BEQ 'l11
0003E8B0 <AmiBlitz3.ab2@26901>   MOVE.l #erro1t,-(a7)
0003E8B6 <AmiBlitz3.ab2@26902> JMP handle_compileerror
0003E8C0 <AmiBlitz3.ab2@26905>   MOVE.l destpointer,bssstart
0003E8C8 <AmiBlitz3.ab2@26906>   MOVE.b #1,bssmode
0003E8CE <AmiBlitz3.ab2@26909>   TST.b chipmode
0003E8D2 <AmiBlitz3.ab2@26910>   BEQ 'l10
0003E8DC <AmiBlitz3.ab2@26911>   MOVE.l destpointer,chipend
0003E8E2 <AmiBlitz3.ab2@26912>   CLR.b chipmode
0003E8E8 <AmiBlitz3.ab2@26915>   JSR get1bytemain
0003E8EA <AmiBlitz3.ab2@26916> RTS
0003E8F0 <AmiBlitz3.ab2@26920>    TST.b exdebug
0003E8F4 <AmiBlitz3.ab2@26921>   BNE 'x1
0003E8FA <AmiBlitz3.ab2@26922>   MOVE.l destpointer,d0
0003E900 <AmiBlitz3.ab2@26923>   MOVE.l d0,realbssend
0003E906 <AmiBlitz3.ab2@26924>   MOVE.l #$4e71,d1
0003E90C <AmiBlitz3.ab2@26925>   JSR writeword
0003E912 <AmiBlitz3.ab2@26926>   MOVE.l destpointer,d0
0003E914 <AmiBlitz3.ab2@26927>   MOVE.l d0,d1
0003E916 <AmiBlitz3.ab2@26928>   ADDQ.l #3,d1
0003E91C <AmiBlitz3.ab2@26929>   AND.l #$fffffffc,d1
0003E922 <AmiBlitz3.ab2@26930>   MOVE.l d1,destpointer
0003E928 <AmiBlitz3.ab2@26931>   SUB.l destpointer,d0
0003E92C <AmiBlitz3.ab2@26932>   BEQ 'lnf1
0003E932 <AmiBlitz3.ab2@26933>   MOVE.l destpointer,a4
0003E93C <AmiBlitz3.ab2@26934>   CMP.l #-1,bssstart
0003E940 <AmiBlitz3.ab2@26935>   BNE 'lnf1
0003E94A <AmiBlitz3.ab2@26936>   CMP.l #-1,chipstart
0003E94E <AmiBlitz3.ab2@26937>   BNE 'lnf1
0003E954 <AmiBlitz3.ab2@26938>   TST.w dontwrite
0003E958 <AmiBlitz3.ab2@26939>   BNE 'lnf1
0003E95E <AmiBlitz3.ab2@26940>   MOVE.w #$4e71,-2(a4)
0003E964 <AmiBlitz3.ab2@26943>   TST.b bssmode
0003E968 <AmiBlitz3.ab2@26944>   BEQ 'l10
0003E972 <AmiBlitz3.ab2@26945>   MOVE.l destpointer,bssend
0003E978 <AmiBlitz3.ab2@26946>   CLR.b bssmode
0003E982 <AmiBlitz3.ab2@26951>   CMP.l #-1,chipstart
0003E986 <AmiBlitz3.ab2@26952>   BEQ 'l11
0003E98C <AmiBlitz3.ab2@26953>   MOVE.l #erro1t,-(a7)
0003E992 <AmiBlitz3.ab2@26954> JMP handle_compileerror
0003E99C <AmiBlitz3.ab2@26957>   MOVE.l destpointer,chipstart
0003E9A4 <AmiBlitz3.ab2@26958>   MOVE.b #1,chipmode
0003E9AA <AmiBlitz3.ab2@26961>   JSR get1bytemain
0003E9AC <AmiBlitz3.ab2@26962> RTS
0003E9D6 <AmiBlitz3.ab2@26966>   !basic
0003E9E8 <AmiBlitz3.ab2@26976>   i.l = Peek.w(?ininclude)
0003EA0E <AmiBlitz3.ab2@26977>   If i>=0 AND i<#maxincludes
0003EA40 <AmiBlitz3.ab2@26978>     incdim (i) = Peek.s(?includetemp2)
0003EA5A <AmiBlitz3.ab2@26979>     incline(i) = Peek.l(?includeline)
0003EA64 <AmiBlitz3.ab2@26981>     If CLIMode
0003EB12 <AmiBlitz3.ab2@26982>       If cli_verbose>=2 Then NPrint "  -> Compiling ",incdim(i),"..."
0003EB30 <AmiBlitz3.ab2@26986>   !asm
0003EB32 <AmiBlitz3.ab2@26987> RTS
0003EB5C <AmiBlitz3.ab2@26991>   !basic
0003EB6E <AmiBlitz3.ab2@26992>   i.l = Peek.w(?ininclude)
0003EB94 <AmiBlitz3.ab2@26993>   If i>=0 AND i<#maxincludes
0003EBC4 <AmiBlitz3.ab2@26994>     incdim (i) = ""
0003EBD8 <AmiBlitz3.ab2@26995>     incline(i) = 0
0003EC10 <AmiBlitz3.ab2@26996>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
0003EC2E <AmiBlitz3.ab2@26998>   !asm
0003EC30 <AmiBlitz3.ab2@26999> RTS
0003EC36 <AmiBlitz3.ab2@27003>   LEA replacedat,a0
0003EC3A <AmiBlitz3.ab2@27004>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
0003EC3C <AmiBlitz3.ab2@27005> RTS
0003EC42 <AmiBlitz3.ab2@27009>   TST.b fpu
0003EC46 <AmiBlitz3.ab2@27010>   BEQ 'l1
0003EC50 <AmiBlitz3.ab2@27013>   MOVE.l destpointer,newinitaddr
0003EC56 <AmiBlitz3.ab2@27014>   JSR writeword
0003EC5C <AmiBlitz3.ab2@27015>   JSR writelong
0003EC5E <AmiBlitz3.ab2@27016> RTS
0003EC60 <AmiBlitz3.ab2@27021>   TST.b (a5)
0003EC64 <AmiBlitz3.ab2@27022>    BEQ.s 'll20
0003EC68 <AmiBlitz3.ab2@27023>   CMP.b #$20,(a5)
0003EC6C <AmiBlitz3.ab2@27024>    BNE.s 'll10
0003EC6E <AmiBlitz3.ab2@27025>   ADDQ.l #1,a5
0003EC72 <AmiBlitz3.ab2@27026> BRA.s 'll21
0003EC76 <AmiBlitz3.ab2@27029>   CMP.b #";",(a5)
0003EC7A <AmiBlitz3.ab2@27030>   BNE.s 'll20
0003EC7C <AmiBlitz3.ab2@27033>   TST.b (a5)+
0003EC80 <AmiBlitz3.ab2@27034>   BEQ.s 'll23
0003EC84 <AmiBlitz3.ab2@27035> BRA.s 'll25
0003EC86 <AmiBlitz3.ab2@27038>   SUBQ.l #1,a5
0003EC88 <AmiBlitz3.ab2@27041> RTS
0003EC8C <AmiBlitz3.ab2@27045>   MOVEM.l a2/d2,-(a7)
0003EC8E <AmiBlitz3.ab2@27046>   MOVEQ #0,d2
0003EC94 <AmiBlitz3.ab2@27047>   LEA ptr_parameterstore,a0
0003EC9A <AmiBlitz3.ab2@27048>   LEA chartab,a2
0003EC9C <AmiBlitz3.ab2@27051>   MOVE.b (a5),d0
0003ECA0 <AmiBlitz3.ab2@27052>   TST.b 0(a2,d0)
0003ECA4 <AmiBlitz3.ab2@27053>   BNE 'l10
0003ECA6 <AmiBlitz3.ab2@27054>   ADDQ.l #1,a5
0003ECA8 <AmiBlitz3.ab2@27055>   MOVE.b d0,(a0)+
0003ECAA <AmiBlitz3.ab2@27056>   ADDQ.l #1,d2
0003ECAE <AmiBlitz3.ab2@27057> BRA fc2
0003ECB0 <AmiBlitz3.ab2@27060>   CLR.b (a0)+
0003ECB6 <AmiBlitz3.ab2@27061>   JSR findlabel2
0003ECB8 <AmiBlitz3.ab2@27062>   MOVE.l a2,a0
0003ECBC <AmiBlitz3.ab2@27063>   MOVEM.l (a7)+,a2/d2
0003ECBE <AmiBlitz3.ab2@27064> RTS
0003ECC0 <AmiBlitz3.ab2@27068>   TST.l d0
0003ECC4 <AmiBlitz3.ab2@27069>   BNE 'l10
0003ECCA <AmiBlitz3.ab2@27070>     MOVE.l #syntax_,-(a7)
0003ECD0 <AmiBlitz3.ab2@27071> JMP handle_compileerror
0003ECD6 <AmiBlitz3.ab2@27074>   CMP.l #1,d0
0003ECDA <AmiBlitz3.ab2@27075>   BNE 'l20
0003ECE0 <AmiBlitz3.ab2@27076>     MOVE.l #overflow,-(a7)
0003ECE6 <AmiBlitz3.ab2@27077> JMP handle_compileerror
0003ECE8 <AmiBlitz3.ab2@27080>   ADD.l a2,d0
0003ECEA <AmiBlitz3.ab2@27081>   MOVE.l d0,-(a7)
0003ECF0 <AmiBlitz3.ab2@27082> JMP handle_compileerror
0003ECF6 <AmiBlitz3.ab2@27086>   JMP _return
0003ECFC <AmiBlitz3.ab2@27087>   JMP _return
0003ED02 <AmiBlitz3.ab2@27088>   JMP _return
0003ED08 <AmiBlitz3.ab2@27089>   JMP _return
0003ED0E <AmiBlitz3.ab2@27090>   JMP _return
0003ED14 <AmiBlitz3.ab2@27091>   JMP _return
0003ED1A <AmiBlitz3.ab2@27092>   JMP _return
0003ED20 <AmiBlitz3.ab2@27093>   JMP _return
0003ED26 <AmiBlitz3.ab2@27094>   JMP _return
0003ED2C <AmiBlitz3.ab2@27095>   JMP _return
0003ED32 <AmiBlitz3.ab2@27096>   JMP Atokejsr
0003ED38 <AmiBlitz3.ab2@27097>   JMP writeinit
0003ED3E <AmiBlitz3.ab2@27098>   JMP macroexecute
0003ED44 <AmiBlitz3.ab2@27099>   JMP findnext
0003ED4A <AmiBlitz3.ab2@27100>   JMP replacelib
0003ED50 <AmiBlitz3.ab2@27101>   JMP findconstant2
0003ED56 <AmiBlitz3.ab2@27102>   JMP findchar                                             ;char in d1
0003ED5C <AmiBlitz3.ab2@27103>   JMP stripspaces
0003ED62 <AmiBlitz3.ab2@27104>   JMP calc                                                 ;d0 varmode
0003ED68 <AmiBlitz3.ab2@27105>   JMP error
0003ED6E <AmiBlitz3.ab2@27106>   JMP writelong                                            ;d1 value
0003ED74 <AmiBlitz3.ab2@27107>   JMP writeword                                            ;d1 value
0003ED7A <AmiBlitz3.ab2@27108>   JMP writebyte                                            ;d1 value
0003ED80 <AmiBlitz3.ab2@27109> JMP exit
0003ED84 <AmiBlitz3.ab2@27113>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
0003ED86 <AmiBlitz3.ab2@27116>   fast            Dc.w 0
0003ED88 <AmiBlitz3.ab2@27117>   fpu             Dc.w 0
0003ED8A <AmiBlitz3.ab2@27118>   newsyntax       Dc.w 0
0003ED8B <AmiBlitz3.ab2@27120>   optistring      Dc.b 0
0003ED8C <AmiBlitz3.ab2@27121>   optistring2     Dc.b 0
0003ED8D <AmiBlitz3.ab2@27122>   optiarray       Dc.b 0
0003ED8E <AmiBlitz3.ab2@27123>   quickadd        Dc.b 0
0003ED90 <AmiBlitz3.ab2@27124>   newmode         Dc.w 0
0003ED92 <AmiBlitz3.ab2@27125>   mode            Dc.w 0
0003ED94 <AmiBlitz3.ab2@27126>   string1         Dc.w 0
0003ED96 <AmiBlitz3.ab2@27127>   load_var_size   Dc.w 0
0003ED98 <AmiBlitz3.ab2@27128>   load_var_reg    Dc.w 0
0003ED9C <AmiBlitz3.ab2@27129>   load_var_addr   Dc.l 0
0003ED9E <AmiBlitz3.ab2@27130>   imm_size        Dc.w 0
0003EDA0 <AmiBlitz3.ab2@27131>   imm_reg         Dc.w 0
0003EDA4 <AmiBlitz3.ab2@27132>   imm_addr        Dc.l 0
0003EDA5 <AmiBlitz3.ab2@27133>   iee             Dc.b 0
0003EDA6 <AmiBlitz3.ab2@27134>   _dcb            Dc.b 0
0003EDAA <AmiBlitz3.ab2@27135>   nohunkoffset    Dc.l 0
0003EDAE <AmiBlitz3.ab2@27138> teddata:        Dc.l tokens
0003EDB2 <AmiBlitz3.ab2@27139>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
0003EDB6 <AmiBlitz3.ab2@27140>                 Dc.l read_xtrafile
0003EDBA <AmiBlitz3.ab2@27141>                 Dc.l write_xtrafile
0003EDBE <AmiBlitz3.ab2@27142>                 Dc.l call_menuentry                        ; compile AND RUN ?
0003EDC2 <AmiBlitz3.ab2@27143>                 Dc.l 0
0003EDC6 <AmiBlitz3.ab2@27144>                 Dc.b ":",34,".;"
0003EDCA <AmiBlitz3.ab2@27145>                 Dc.l "NEW1"
0003EDCE <AmiBlitz3.ab2@27146>                 Dc.l newtypebase
0003EDD2 <AmiBlitz3.ab2@27147> realconstbase:  Dc.l labelbase
0003EDD6 <AmiBlitz3.ab2@27148> deflib          Dc.l 0
0003EDDA <AmiBlitz3.ab2@27149> incd            Dc.l 0
0003EDDE <AmiBlitz3.ab2@27150>                 Dc.l 0
0003EDE2 <AmiBlitz3.ab2@27151>                 Dc.l 0
0003EDE6 <AmiBlitz3.ab2@27152>                 Dc.l 0
0003EDE8 <AmiBlitz3.ab2@27153> _return         RTS
0003EDE9 <AmiBlitz3.ab2@27154>                 Dc.b 0
0003F1E9 <AmiBlitz3.ab2@27155> chartab2        Ds.l 256
0003F1ED <AmiBlitz3.ab2@27156> codeend         Dc.l 0
0003F1F1 <AmiBlitz3.ab2@27157> hunkoffsetnum   Dc.l 0
0003F1F5 <AmiBlitz3.ab2@27158> chipsize        Dc.l 0
0003F1F9 <AmiBlitz3.ab2@27159> bsssize         Dc.l 0
0003F1FD <AmiBlitz3.ab2@27160> bssstart        Dc.l -1
0003F201 <AmiBlitz3.ab2@27161> bssend          Dc.l -1
0003F205 <AmiBlitz3.ab2@27162> chipstart       Dc.l -1
0003F209 <AmiBlitz3.ab2@27163> chipend         Dc.l -1
0003F20A <AmiBlitz3.ab2@27164> bssmode         Dc.b 0
0003F20B <AmiBlitz3.ab2@27165> chipmode        Dc.b 0
0003F20C <AmiBlitz3.ab2@27166> newhunk         Dc.b 0
0003F210 <AmiBlitz3.ab2@27167> bssnum          Dc.l 0
0003F214 <AmiBlitz3.ab2@27168> chipnum         Dc.l 0
0003F218 <AmiBlitz3.ab2@27169> lastinstruction Dc.l 0
0003F22C <AmiBlitz3.ab2@27170> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
0003F230 <AmiBlitz3.ab2@27171> tstsize1b:      Ds.l 1
0003F234 <AmiBlitz3.ab2@27172> bsssize2        Dc.l 1
0003F238 <AmiBlitz3.ab2@27173>                 Dc.l $03E9
0003F23C <AmiBlitz3.ab2@27174> tstsize2b:      Dc.l $100
0003F250 <AmiBlitz3.ab2@27175> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
0003F254 <AmiBlitz3.ab2@27176> tstsize1c:      Ds.l 1
0003F258 <AmiBlitz3.ab2@27177> bsssize3        Dc.l 1
0003F25C <AmiBlitz3.ab2@27178> chipsize2       Dc.l 1
0003F260 <AmiBlitz3.ab2@27179>                 Dc.l $3e9
0003F264 <AmiBlitz3.ab2@27180> tstsize2c       Dc.l 0
0003F274 <AmiBlitz3.ab2@27181> hunkend         Dc.l $3f2,$3eb,0,$3f2
0003F284 <AmiBlitz3.ab2@27182> hunkend2        Dc.l $3f2,$3ea,0,$3f2
0003F28B <AmiBlitz3.ab2@27183> strcpy          Dc.b "strcpy",0
0003F292 <AmiBlitz3.ab2@27184> strcmp          Dc.b "strcmp",0
0003F299 <AmiBlitz3.ab2@27185> strvar          Dc.b "strvar",0
0003F29E <AmiBlitz3.ab2@27186> qmul            Dc.b "qmul",0
0003F2A3 <AmiBlitz3.ab2@27187> qdiv            Dc.b "qdiv",0
0003F2AA <AmiBlitz3.ab2@27188> _MaxLen         Dc.b "maxlen",0
0003F2AF <AmiBlitz3.ab2@27189> notf            Dc.b "????",0
0003F2D2 <AmiBlitz3.ab2@27191> errtext         Dc.b "only reg addressing Mode supported",0
0003F2FC <AmiBlitz3.ab2@27192> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0003F33E <AmiBlitz3.ab2@27193> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
0003F340 <AmiBlitz3.ab2@27194> peeksize        Dc.w 0
0003F344 <AmiBlitz3.ab2@27196> mainstart       Dc.l 0
0003F345 <AmiBlitz3.ab2@27198> infunctioncode  Dc.b 0
0003F347 <AmiBlitz3.ab2@27199> regnumstore     Dc.w 0
0003F374 <AmiBlitz3.ab2@27200>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003F37C <AmiBlitz3.ab2@27201> testcode        Dc.b "print i",0
0003F3E0 <AmiBlitz3.ab2@27202>                 Ds.b 100
0003F3EE <AmiBlitz3.ab2@27203> devo            Dc.b "developobject",0 : Even
0003F400 <AmiBlitz3.ab2@27204> autostorename   Dc.b "__autoconstantnum",0
0003F40A <AmiBlitz3.ab2@27205> _include        Dc.b "__include",0
0003F412 <AmiBlitz3.ab2@27206> _debug          Dc.b "__debug",0
0003F416 <AmiBlitz3.ab2@27207> unusedfunc      Dc.l 0
0003F418 <AmiBlitz3.ab2@27211>   MOVE.l a0,-(a7)
0003F41A <AmiBlitz3.ab2@27212>   MOVE.l a0,d0
0003F41C <AmiBlitz3.ab2@27213>   MOVE.l a5,a0                                             ;macro title
0003F446 <AmiBlitz3.ab2@27214>   !basic
0003F44A <AmiBlitz3.ab2@27215>   i = PutD0
0003F44C <AmiBlitz3.ab2@27216>   MOVEQ #20,d0
0003F44E <AmiBlitz3.ab2@27219>     MOVE.b -(a0),d1
0003F452 <AmiBlitz3.ab2@27220>     BEQ 'l1
0003F456 <AmiBlitz3.ab2@27221>     CMP.b #":",d1
0003F45A <AmiBlitz3.ab2@27222>     BEQ 'l1
0003F45C <AmiBlitz3.ab2@27223>     SUBQ.l #1,d0
0003F460 <AmiBlitz3.ab2@27224>     BNE 'l2
0003F462 <AmiBlitz3.ab2@27227>   ADDQ #1,a0
0003F464 <AmiBlitz3.ab2@27228>   MOVE.l a0,d0
0003F468 <AmiBlitz3.ab2@27229>   i2.l = PutD0
0003F484 <AmiBlitz3.ab2@27230>   If Peek.w (?ininclude)>0
0003F4DE <AmiBlitz3.ab2@27231>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
0003F4EE <AmiBlitz3.ab2@27232>     errorline.l = Peek.l(?includeline);-1
0003F516 <AmiBlitz3.ab2@27233>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003F540 <AmiBlitz3.ab2@27234>     errorfile.s = Peek.s(?includetemp2)
0003F546 <AmiBlitz3.ab2@27235>   Else
0003F57E <AmiBlitz3.ab2@27236>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
0003F594 <AmiBlitz3.ab2@27237>     errorline.l = Peek.l(?compilelinecounter) + 1
0003F5C8 <AmiBlitz3.ab2@27238>     errorfile.s = cli_sourcefile
0003F5D2 <AmiBlitz3.ab2@27241>   If i
0003F676 <AmiBlitz3.ab2@27242>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
0003F67C <AmiBlitz3.ab2@27243>   Else
0003F6A4 <AmiBlitz3.ab2@27244>     errortext.s = "???"
0003F816 <AmiBlitz3.ab2@27247>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," <",errorfile,"@",errorline,">\\1b[0m ",errortext
0003F834 <AmiBlitz3.ab2@27251>   !asm
0003F836 <AmiBlitz3.ab2@27252>   MOVE.l (a7)+,a0
0003F838 <AmiBlitz3.ab2@27253> RTS
0003F83A <AmiBlitz3.ab2@27257>   MOVE.l a0,-(a7)
0003F83C <AmiBlitz3.ab2@27258>   MOVE.l a0,d0
0003F83E <AmiBlitz3.ab2@27259>   MOVE.l a5,a0                                             ;macro title
0003F868 <AmiBlitz3.ab2@27260>   !basic
0003F86C <AmiBlitz3.ab2@27261>   i = PutD0
0003F86E <AmiBlitz3.ab2@27262>   MOVEQ #20,d0
0003F870 <AmiBlitz3.ab2@27265>     MOVE.b -(a0),d1
0003F874 <AmiBlitz3.ab2@27266>     BEQ 'l1
0003F878 <AmiBlitz3.ab2@27267>     CMP.b #":",d1
0003F87C <AmiBlitz3.ab2@27268>     BEQ 'l1
0003F87E <AmiBlitz3.ab2@27269>     SUBQ.l #1,d0
0003F882 <AmiBlitz3.ab2@27270>     BNE 'l2
0003F884 <AmiBlitz3.ab2@27273>   ADDQ #1,a0
0003F886 <AmiBlitz3.ab2@27274>   MOVE.l a0,d0
0003F88A <AmiBlitz3.ab2@27275>   i2.l = PutD0
0003F90E <AmiBlitz3.ab2@27276>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
0003F922 <AmiBlitz3.ab2@27277>   If fid <> -1
0003F93E <AmiBlitz3.ab2@27278>     If Peek.w (?ininclude)>0
0003F998 <AmiBlitz3.ab2@27279>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
0003F99E <AmiBlitz3.ab2@27280>     Else
0003F9CA <AmiBlitz3.ab2@27281>       Poke$(?includetemp2),""
0003F9F4 <AmiBlitz3.ab2@27283>     a$ = Peek$(?includetemp2)
0003FA66 <AmiBlitz3.ab2@27284>     x$ = Replace$(Peek$(i),"\\0a","\n")
0003FA98 <AmiBlitz3.ab2@27285>     file_WriteLine{fid,x$}
0003FAE2 <AmiBlitz3.ab2@27286>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
0003FB0E <AmiBlitz3.ab2@27287>     If a$
0003FB40 <AmiBlitz3.ab2@27288>       file_WriteLine{fid,a$}
0003FB8A <AmiBlitz3.ab2@27289>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
0003FBB2 <AmiBlitz3.ab2@27290>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
0003FBB8 <AmiBlitz3.ab2@27291>     Else
0003FBDE <AmiBlitz3.ab2@27292>       file_WriteLine{fid,"none"}
0003FC0E <AmiBlitz3.ab2@27294>     file_WriteLine{fid,Peek$(i2)}
0003FC64 <AmiBlitz3.ab2@27295>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0003FCAE <AmiBlitz3.ab2@27296>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0003FCB8 <AmiBlitz3.ab2@27297>     file_Close{fid}
0003FCD6 <AmiBlitz3.ab2@27299>   !asm
0003FCD8 <AmiBlitz3.ab2@27300>   MOVE.l (a7)+,a0
0003FCDA <AmiBlitz3.ab2@27301> RTS
0003FD04 <AmiBlitz3.ab2@27305>   !basic
0003FD08 <AmiBlitz3.ab2@27306>   progress.l     = PutD0
0003FD1A <AmiBlitz3.ab2@27307>   total.l        = Peek.w(?progressbar_width)
0003FD38 <AmiBlitz3.ab2@27308>   calcpro.l      = (progress * 100) / total +1
0003FD4A <AmiBlitz3.ab2@27309>   pass.l         = Peek.w(?pass)
0003FD5C <AmiBlitz3.ab2@27310>   typ.l          = Peek.w(?compiler_job)
0003FD7A <AmiBlitz3.ab2@27312>   If pass><pass_old.l OR typ><typ_old.l
0003FD80 <AmiBlitz3.ab2@27313>     pass_old = pass
0003FD86 <AmiBlitz3.ab2@27314>     typ_old  = typ
0003FDAE <AmiBlitz3.ab2@27315>     comstatus$ = "Initializing Compiler..."
0003FDC0 <AmiBlitz3.ab2@27316>     If typ=0
0003FEA0 <AmiBlitz3.ab2@27317>       comstatus$ = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003FEB2 <AmiBlitz3.ab2@27319>     If typ=1
0003FF92 <AmiBlitz3.ab2@27320>       comstatus$ = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003FFBA <AmiBlitz3.ab2@27323>     If Peek.l(Addr Window(4))<>0
0003FFD0 <AmiBlitz3.ab2@27324>       Use Window 4
0004000A <AmiBlitz3.ab2@27325>       WZPrint "COMPILE_INFO",&comstatus$
00040010 <AmiBlitz3.ab2@27326>     Else
00040066 <AmiBlitz3.ab2@27327>       If cli_verbose>=2 Then NPrint comstatus$
00040074 <AmiBlitz3.ab2@27331>   If (calcpro >< calcpro_old)
0004009C <AmiBlitz3.ab2@27332>     If Peek.l(Addr Window(4))<>0
000400CE <AmiBlitz3.ab2@27333>       If (((calcpro & $7)=0) OR (calcpro=100))
00040114 <AmiBlitz3.ab2@27334>         testpr$ = Str$(calcpro)+"%%"
00040164 <AmiBlitz3.ab2@27335>         WZPrint "COMPILE_GAUGE",calcpro,100,&testpr$
0004016A <AmiBlitz3.ab2@27337>     Else
000401BE <AmiBlitz3.ab2@27341>       If cli_verbose>=3 Then NPrint calcpro,"% compiled..."
000401C4 <AmiBlitz3.ab2@27343>     calcpro_old = calcpro
000401E2 <AmiBlitz3.ab2@27345>   !asm
000401E4 <AmiBlitz3.ab2@27346> RTS
0004020E <AmiBlitz3.ab2@27350>   !basic
00040224 <AmiBlitz3.ab2@27351>   MaxLen a$ = 5000
0004022E <AmiBlitz3.ab2@27352>   var.l = ?residents_table
00040240 <AmiBlitz3.ab2@27353>   If winon.l = 0
0004025C <AmiBlitz3.ab2@27354>     FindScreen 0
00040320 <AmiBlitz3.ab2@27355>     WZWindow 1,?wzgui,256,-2,ScreenHeight/6,-2,ScreenHeight/1.5,1
00040348 <AmiBlitz3.ab2@27356>     WZ_SetFont{"WIN_CPREFS"}
0004038E <AmiBlitz3.ab2@27357>     WZ_InitTable{"WIN_CPREFS","OBJECTS",2,0}
000403C8 <AmiBlitz3.ab2@27358>     WZ_SetTableColors{"OBJECTS",1,0,2,3,3}
0004046E <AmiBlitz3.ab2@27361>     WZ_SetTableTitle{"OBJECTS","Objects","Max"}
000404CA <AmiBlitz3.ab2@27364>     WZ_SetPriority{"OBJECTS",3,1}
00040522 <AmiBlitz3.ab2@27367>     WZ_SetEditable{"OBJECTS",False,True}
00040548 <AmiBlitz3.ab2@27370>     WZ_SetSortable{"OBJECTS",Off}
00040580 <AmiBlitz3.ab2@27373>     For i = 0 To Peek.w(?number_of_objects)-1
000405A8 <AmiBlitz3.ab2@27374>       a$ = ""
000405BC <AmiBlitz3.ab2@27375>       GetD0 &a$,i:JSR getobjectentry : a.l = PutD0
00040684 <AmiBlitz3.ab2@27376>       WZ_AddRow{"OBJECTS",Peek$(&a$),Str$(a)}
00040694 <AmiBlitz3.ab2@27377>     Next
000406B6 <AmiBlitz3.ab2@27378>     WZ_DrawTable{"OBJECTS"}
000406D8 <AmiBlitz3.ab2@27380>     WZ_UpdateTable{"OBJECTS"}
000406E0 <AmiBlitz3.ab2@27381>     winon = 1
000406EA <AmiBlitz3.ab2@27382>     var.l = ?residents_table
00040712 <AmiBlitz3.ab2@27383>     a$ = Peek$(var)
0004073C <AmiBlitz3.ab2@27384>     For i = 0 To 6
00040782 <AmiBlitz3.ab2@27385>       a$ = a$ + "\\0a"
00040790 <AmiBlitz3.ab2@27386>       var + $44
000407E0 <AmiBlitz3.ab2@27387>       a$ = a$ + Peek$(var)
000407F0 <AmiBlitz3.ab2@27388>     Next
0004082A <AmiBlitz3.ab2@27389>     WZPrint "RESIDENTS",&a$
0004083A <AmiBlitz3.ab2@27391>     i = Peek.l(?stringbuffer)
00040872 <AmiBlitz3.ab2@27392>     WZPrint "STRINGBUFFER",i
00040882 <AmiBlitz3.ab2@27394>     i = Peek.l(?stacksize)                            ;get stacksize  tomsmart1
000408BA <AmiBlitz3.ab2@27395>     WZPrint "STACKSIZE",i                             ;print it  tomsmart1
000408C2 <AmiBlitz3.ab2@27397>     var.l = 0
000408CA <AmiBlitz3.ab2@27398>     BTST #7,create_iconfile
000408CE <AmiBlitz3.ab2@27399>     BEQ 'noi
000408D6 <AmiBlitz3.ab2@27400>     var = 1
0004090E <AmiBlitz3.ab2@27403>     WZPrint "ICON",var
00040916 <AmiBlitz3.ab2@27404>     var = 0
0004091E <AmiBlitz3.ab2@27405>     BTST #7,make_smallestcode
00040922 <AmiBlitz3.ab2@27406>     BEQ 'nos
0004092A <AmiBlitz3.ab2@27407>     var = 1
00040962 <AmiBlitz3.ab2@27410>     WZPrint "SMALLEST",var
0004096A <AmiBlitz3.ab2@27411>     var = 0
00040972 <AmiBlitz3.ab2@27412>     BTST #7,link_debuginfo
00040976 <AmiBlitz3.ab2@27413>     BEQ 'nodi
0004097E <AmiBlitz3.ab2@27414>     var = 1
000409B6 <AmiBlitz3.ab2@27417>     WZPrint "DEBUGINFO",var
000409BE <AmiBlitz3.ab2@27419>     var = 0
000409FC <AmiBlitz3.ab2@27421>     !ComData_GetW{comWord_CreateDebugFile,D0}            ; get status of Create.dbg file  tomsmart1
00040A00 <AmiBlitz3.ab2@27422>     var = PutD0                                          ; save status to var  tomsmart1
00040A38 <AmiBlitz3.ab2@27423>     WZPrint "DBGFILE",var                                ; show status in the GUI tomsmart1
00040A40 <AmiBlitz3.ab2@27425>     var = 0                                              ; no runtime Debugging
00040A64 <AmiBlitz3.ab2@27426>     WZDisable "AUTORUN"                                  ; disable all Debugger settings  tomsmart1
00040A88 <AmiBlitz3.ab2@27427>     WZDisable "CHECK_INTERRUPT"                          ;                "
00040AAC <AmiBlitz3.ab2@27428>     WZDisable "CHECK_ASSEMBLER"                          ;                "
00040AD0 <AmiBlitz3.ab2@27429>     WZDisable "CHECK_OVERFLOW"                           ;                "
00040AD8 <AmiBlitz3.ab2@27430>     BTST #7,use_debugger                                 ; check status
00040ADC <AmiBlitz3.ab2@27431>     BEQ 'nod
00040AE4 <AmiBlitz3.ab2@27432>     var = 1                                              ; yes runtime Debugging
00040B08 <AmiBlitz3.ab2@27433>     WZEnable "AUTORUN"                                   ; enable all Debugger settings  tomsmart1
00040B2C <AmiBlitz3.ab2@27434>     WZEnable "CHECK_INTERRUPT"                           ;               "
00040B50 <AmiBlitz3.ab2@27435>     WZEnable "CHECK_ASSEMBLER"                           ;               "
00040B74 <AmiBlitz3.ab2@27436>     WZEnable "CHECK_OVERFLOW"                            ;               "
00040BAC <AmiBlitz3.ab2@27439>     WZPrint "DEBUG",var
00040BB4 <AmiBlitz3.ab2@27440>     var = 0
00040BBC <AmiBlitz3.ab2@27441>     BTST #7,autorun
00040BC0 <AmiBlitz3.ab2@27442>     BEQ 'nod4
00040BC8 <AmiBlitz3.ab2@27443>     var = 1
00040C00 <AmiBlitz3.ab2@27446>     WZPrint "AUTORUN",var
00040C08 <AmiBlitz3.ab2@27447>     var.l = 0
00040C10 <AmiBlitz3.ab2@27448>     BTST #7,interruptcheck
00040C14 <AmiBlitz3.ab2@27449>     BEQ 'nod1
00040C1C <AmiBlitz3.ab2@27450>     var = 1
00040C54 <AmiBlitz3.ab2@27453>     WZPrint "CHECK_INTERRUPT",var
00040C5C <AmiBlitz3.ab2@27454>     var.l = 0
00040C64 <AmiBlitz3.ab2@27455>     BTST #7,assemblercheck
00040C68 <AmiBlitz3.ab2@27456>     BEQ 'nod2
00040C70 <AmiBlitz3.ab2@27457>     var = 1
00040CA8 <AmiBlitz3.ab2@27460>     WZPrint "CHECK_ASSEMBLER",var
00040CB0 <AmiBlitz3.ab2@27461>     var.l = 0
00040CB8 <AmiBlitz3.ab2@27462>     BTST #7,overflowcheck
00040CBC <AmiBlitz3.ab2@27463>     BEQ 'nod3
00040CC4 <AmiBlitz3.ab2@27464>     var = 1
00040CFC <AmiBlitz3.ab2@27467>     WZPrint "CHECK_OVERFLOW",var
00040D04 <AmiBlitz3.ab2@27470>   exit.l = 0
00040D0C <AmiBlitz3.ab2@27471>   mess.l = 0
00040D16 <AmiBlitz3.ab2@27472>   ev.l = WaitEvent
00040D26 <AmiBlitz3.ab2@27473>   WZ_CheckTableEvent{ev}
00040D2C <AmiBlitz3.ab2@27474>   Select ev
00040D3A <AmiBlitz3.ab2@27476>    Case #IDCMP_IDCMPUPDATE
00040D7A <AmiBlitz3.ab2@27477>     Select LCase$(WZGadName)
00040D9E <AmiBlitz3.ab2@27479>      Case "autorun"
00040DAC <AmiBlitz3.ab2@27480>        If WZInput
00040DB4 <AmiBlitz3.ab2@27481>          BSET #7,autorun
00040DBA <AmiBlitz3.ab2@27482>        Else
00040DC2 <AmiBlitz3.ab2@27483>          BCLR #7,autorun
00040DEC <AmiBlitz3.ab2@27486>      Case "check_interrupt"
00040DFA <AmiBlitz3.ab2@27487>        If WZInput
00040E02 <AmiBlitz3.ab2@27488>          BSET #7,interruptcheck
00040E08 <AmiBlitz3.ab2@27489>        Else
00040E10 <AmiBlitz3.ab2@27490>          BCLR #7,interruptcheck
00040E3A <AmiBlitz3.ab2@27493>      Case "check_assembler"
00040E48 <AmiBlitz3.ab2@27494>        If WZInput
00040E50 <AmiBlitz3.ab2@27495>          BSET #7,assemblercheck
00040E56 <AmiBlitz3.ab2@27496>        Else
00040E5E <AmiBlitz3.ab2@27497>          BCLR #7,assemblercheck
00040E88 <AmiBlitz3.ab2@27500>      Case "check_overflow"
00040E96 <AmiBlitz3.ab2@27501>        If WZInput
00040E9E <AmiBlitz3.ab2@27502>          BSET #7,overflowcheck
00040EA4 <AmiBlitz3.ab2@27503>        Else
00040EAC <AmiBlitz3.ab2@27504>          BCLR #7,overflowcheck
00040ED6 <AmiBlitz3.ab2@27507>      Case "residents"
00040F00 <AmiBlitz3.ab2@27509>      Case "stacksize"                                   ; stacksize changed  tomsmart1
00040F0A <AmiBlitz3.ab2@27510>        tempsize.l=WZInput                               ; save the valu to a temporay variable  tomsmart1
00040F1C <AmiBlitz3.ab2@27511>        If tempsize >= #MIN_STACKSIZE                    ; check size  tomsmart1
00040F2C <AmiBlitz3.ab2@27512>          Poke.l ?stacksize,tempsize                     ; save it.  tomsmart1
00040F32 <AmiBlitz3.ab2@27513>        Else                                             ; its not big enough  tomsmart1
00040F3A <AmiBlitz3.ab2@27514>          tempsize = #MIN_STACKSIZE                      ; set it to the min size  tomsmart1
00040F4A <AmiBlitz3.ab2@27515>          Poke.l ?stacksize,tempsize                     ; save it  tomsmart1
00040F82 <AmiBlitz3.ab2@27516>          WZPrint "STACKSIZE",tempsize                   ; print it  tomsmart1
00040FAC <AmiBlitz3.ab2@27519>      Case "stringbuffer"
00040FC8 <AmiBlitz3.ab2@27521>        Poke.l ?stringbuffer,WZInput
00040FD0 <AmiBlitz3.ab2@27522>        mess = $6
00040FFA <AmiBlitz3.ab2@27524>      Case "debug"
00041008 <AmiBlitz3.ab2@27525>        If WZInput
00041010 <AmiBlitz3.ab2@27526>          BSET #7,use_debugger                           ; yes runtime Debugging
00041034 <AmiBlitz3.ab2@27527>          WZEnable "AUTORUN"                             ; enable all Debugger settings  tomsmart1
00041058 <AmiBlitz3.ab2@27528>          WZEnable "CHECK_INTERRUPT"                     ;               "
0004107C <AmiBlitz3.ab2@27529>          WZEnable "CHECK_ASSEMBLER"                     ;               "
000410A0 <AmiBlitz3.ab2@27530>          WZEnable "CHECK_OVERFLOW"                      ;               "
000410A6 <AmiBlitz3.ab2@27531>        Else
000410AE <AmiBlitz3.ab2@27532>          BCLR #7,use_debugger                           ; no runtime Debugging
000410D2 <AmiBlitz3.ab2@27533>          WZDisable "AUTORUN"                            ; disable all Debugger settings  tomsmart1
000410F6 <AmiBlitz3.ab2@27534>          WZDisable "CHECK_INTERRUPT"                    ;                "
0004111A <AmiBlitz3.ab2@27535>          WZDisable "CHECK_ASSEMBLER"                    ;                "
0004113E <AmiBlitz3.ab2@27536>          WZDisable "CHECK_OVERFLOW"                     ;                "
00041146 <AmiBlitz3.ab2@27538>        mess = $a
00041170 <AmiBlitz3.ab2@27540>      Case "icon"
0004117E <AmiBlitz3.ab2@27541>        If WZInput
00041186 <AmiBlitz3.ab2@27542>          BSET #7,create_iconfile
0004118C <AmiBlitz3.ab2@27543>        Else
00041194 <AmiBlitz3.ab2@27544>          BCLR #7,create_iconfile
0004119C <AmiBlitz3.ab2@27546>        mess = $9
000411C6 <AmiBlitz3.ab2@27548>      Case "smallest"
000411D4 <AmiBlitz3.ab2@27549>        If WZInput
000411DC <AmiBlitz3.ab2@27550>          BSET #7,make_smallestcode
000411E2 <AmiBlitz3.ab2@27551>        Else
000411EA <AmiBlitz3.ab2@27552>          BCLR #7,make_smallestcode
000411F2 <AmiBlitz3.ab2@27554>        mess = $f
0004121C <AmiBlitz3.ab2@27556>      Case "debuginfo"                                      ; check "Create Debug info" (Symbols)
0004122A <AmiBlitz3.ab2@27557>        If WZInput
00041232 <AmiBlitz3.ab2@27558>          BSET #7,link_debuginfo
00041238 <AmiBlitz3.ab2@27559>        Else
00041240 <AmiBlitz3.ab2@27560>          BCLR #7,link_debuginfo
00041248 <AmiBlitz3.ab2@27562>        mess = $10
00041272 <AmiBlitz3.ab2@27564>      Case "dbgfile"                                        ; check "Create .dbg File"   tomsmart1
00041280 <AmiBlitz3.ab2@27565>        If WZInput
000412B6 <AmiBlitz3.ab2@27566>          !ComData_SetW{comWord_CreateDebugFile,#1}         ; yes we create it  tomsmart1
000412BC <AmiBlitz3.ab2@27567>        Else
000412F2 <AmiBlitz3.ab2@27568>          !ComData_SetW{comWord_CreateDebugFile,#0}         ; no we don't  tomsmart1
0004131C <AmiBlitz3.ab2@27571>      Case "cr"                                             ; compile and run in compiler prefs
0004132C <AmiBlitz3.ab2@27572>       mess = $12 : exit = 1
00041356 <AmiBlitz3.ab2@27574>      Case "ce"                                             ; compile und create exe in compile prefs
00041366 <AmiBlitz3.ab2@27575>       mess = $13 : exit = 1
00041390 <AmiBlitz3.ab2@27581>      Case "cancel"
000413A0 <AmiBlitz3.ab2@27582>       mess.l = $14 : exit = 1
000413CA <AmiBlitz3.ab2@27584>      Case "ok"
000413DA <AmiBlitz3.ab2@27585>       mess = $11 : exit = 1
000413E8 <AmiBlitz3.ab2@27587>     End Select
000413EA <AmiBlitz3.ab2@27589>   End Select
00041412 <AmiBlitz3.ab2@27591>   If ev = $200 Then mess = $11:exit = 1
00041424 <AmiBlitz3.ab2@27592>   If mess = $11
00041456 <AmiBlitz3.ab2@27593>     For i = 1 To Peek.w(?number_of_objects)
000414AC <AmiBlitz3.ab2@27594>       a$ = WZ_GetCell{"OBJECTS",i,2}
00041502 <AmiBlitz3.ab2@27595>       i2 = Val(a$):If i2 = 0 Then i2 = 1
00041512 <AmiBlitz3.ab2@27596>       Poke.w ?maxobjects_value,i2
00041528 <AmiBlitz3.ab2@27597>       Poke.w ?maxobject_pos,i-1
0004152E <AmiBlitz3.ab2@27598>       Gosub storemaxobjects
0004153E <AmiBlitz3.ab2@27599>     Next
00041544 <AmiBlitz3.ab2@27600>     Gosub stringtores
00041556 <AmiBlitz3.ab2@27603>   If exit = 1
0004155E <AmiBlitz3.ab2@27604>     MOVE.w #$FFFF,state_of_residents                       ;load resident
00041580 <AmiBlitz3.ab2@27605>     WZ_KillTable{"OBJECTS"}
00041594 <AmiBlitz3.ab2@27606>     WZCloseWindow 1
0004159C <AmiBlitz3.ab2@27607>     winon = 0
000415A0 <AmiBlitz3.ab2@27610>   GetD0 mess
000415BE <AmiBlitz3.ab2@27611>   !asm
000415C0 <AmiBlitz3.ab2@27612>   MOVEQ #-1,d7
000415C2 <AmiBlitz3.ab2@27613>   MOVE.l d0,d6
000415C4 <AmiBlitz3.ab2@27614> Return
000415EC <AmiBlitz3.ab2@27618>   i.l = WZInput("RESIDENTS")
00041614 <AmiBlitz3.ab2@27619>   a$ = Peek$(i)
00041640 <AmiBlitz3.ab2@27620>   InitArgParse a$
0004164A <AmiBlitz3.ab2@27621>   var.l = ?residents_table
00041674 <AmiBlitz3.ab2@27622>   For i = 0 To 7
0004169A <AmiBlitz3.ab2@27623>     p$ = NextArgChar$ ($a)
000416D0 <AmiBlitz3.ab2@27624>     Poke$ var,p$
000416DE <AmiBlitz3.ab2@27625>     var + $44
000416EE <AmiBlitz3.ab2@27626>   Next
000416F0 <AmiBlitz3.ab2@27627> Return
000416F6 <AmiBlitz3.ab2@27631>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
000416FC <AmiBlitz3.ab2@27632>   LEA maxobjects_value,A3                                  ;current value
00041702 <AmiBlitz3.ab2@27633>   MOVEA.l libpointer,A2
00041706 <AmiBlitz3.ab2@27636>   CMPA.w #$0,A2
0004170A <AmiBlitz3.ab2@27637>   BEQ.w menu4c__igotb
0004170C <AmiBlitz3.ab2@27638>   MOVEA.l A2,A1
00041710 <AmiBlitz3.ab2@27639>   ADDA.l $12(A1),A1
00041714 <AmiBlitz3.ab2@27640>   TST.w -$2(A1)
00041718 <AmiBlitz3.ab2@27641>   BEQ.w JL_0_FFF6b
0004171A <AmiBlitz3.ab2@27642>   SUBQ.w #1,D5
0004171E <AmiBlitz3.ab2@27643>   BMI.w JL_0_FFFCb
00041720 <AmiBlitz3.ab2@27646>   MOVEA.l (A2),A2
00041724 <AmiBlitz3.ab2@27647> BRA.w JL_0_FFDAb
00041728 <AmiBlitz3.ab2@27650>   MOVE.w (A3),-$4(A1)
0004172A <AmiBlitz3.ab2@27653> RTS
00041730 <AmiBlitz3.ab2@27657>   MOVE.w debugnest,d0
00041736 <AmiBlitz3.ab2@27658>   LEA storedebugmode, a0
0004173E <AmiBlitz3.ab2@27659>   MOVE.b 0(a0,d0.w),debugmode
00041744 <AmiBlitz3.ab2@27660>   TST.w debugnest
00041748 <AmiBlitz3.ab2@27661>   BEQ JUMP_unpairrunerrs
0004174E <AmiBlitz3.ab2@27662>   SUBQ.w #1,debugnest
00041750 <AmiBlitz3.ab2@27663> RTS
00041756 <AmiBlitz3.ab2@27666> JMP runerrsoverflow
0004175C <AmiBlitz3.ab2@27669> JMP unpairrunerrs
00041764 <AmiBlitz3.ab2@27673>   BCHG #$7,use_debugger
0004176C <AmiBlitz3.ab2@27675>   BTST #$7,use_debugger
00041770 <AmiBlitz3.ab2@27676>   BNE 'debugon
00041776 <AmiBlitz3.ab2@27677>   CLR.w debugmode
0004177A <AmiBlitz3.ab2@27678> BRA.b 'debugoff
00041780 <AmiBlitz3.ab2@27681>   SNE debugmode
00041782 <AmiBlitz3.ab2@27684>   MOVE.l a0,-(a7)
000417BA <AmiBlitz3.ab2@27687>   !ComData_SetB{comByte_DebugMode,debugmode}
000417BC <AmiBlitz3.ab2@27692>   MOVE.l (a7)+,a0
000417BE <AmiBlitz3.ab2@27693> RTS
000417C6 <AmiBlitz3.ab2@27698>   BTST #$7,use_debugger
000417CA <AmiBlitz3.ab2@27699>   BNE 'debugon
000417D0 <AmiBlitz3.ab2@27700>   CLR.w debugmode
000417D4 <AmiBlitz3.ab2@27701> BRA.b 'debugoff
000417DA <AmiBlitz3.ab2@27704>   SNE debugmode
000417DC <AmiBlitz3.ab2@27707> RTS
000417E2 <AmiBlitz3.ab2@27711>   ADDQ.w #1,debugnest
000417E8 <AmiBlitz3.ab2@27712>   MOVE.w debugnest,d0
000417EC <AmiBlitz3.ab2@27713>   CMP.w #18,d0
000417F0 <AmiBlitz3.ab2@27714>    BGE JUMP_runerrsoverflow
000417F6 <AmiBlitz3.ab2@27715>   LEA storedebugmode, a0
000417FE <AmiBlitz3.ab2@27716>   MOVE.b debugmode,0( a0,d0.w)
00041804 <AmiBlitz3.ab2@27719>   SF debugmode
00041806 <AmiBlitz3.ab2@27720> RTS
00041886 <AmiBlitz3.ab2@27723> usedpath:  Ds.l 32
0004188A <AmiBlitz3.ab2@27727>   BEQ.w JUMP_syntaxerr
00041890 <AmiBlitz3.ab2@27728>   LEA lastpath,A0
00041894 <AmiBlitz3.ab2@27729>   MOVEM.l a0-a1/d0,-(a7)
0004189A <AmiBlitz3.ab2@27730>   LEA lastpath2,a1
0004189C <AmiBlitz3.ab2@27733>     MOVE.b (a0)+,(a1)+
000418A0 <AmiBlitz3.ab2@27734>   BNE 'l2
000418A4 <AmiBlitz3.ab2@27735>   MOVEM.l (a7)+,a0-a1/d0
000418A8 <AmiBlitz3.ab2@27736>   LEA usedpath(PC),A0
000418AC <AmiBlitz3.ab2@27737>   MOVEM.l a0-a1/d0,-(a7)
000418B2 <AmiBlitz3.ab2@27738>   LEA lastpath,a1
000418B4 <AmiBlitz3.ab2@27741>     MOVE.b (a0)+,(a1)+
000418B8 <AmiBlitz3.ab2@27742>   BNE 'l1
000418BC <AmiBlitz3.ab2@27743>   MOVEM.l (a7)+,a0-a1/d0
000418BE <AmiBlitz3.ab2@27746>   TST.w D0
000418C2 <AmiBlitz3.ab2@27747>    BMI.w JUMP_syntaxerr
000418C4 <AmiBlitz3.ab2@27748>   MOVE.b D0,(A0)+
000418C8 <AmiBlitz3.ab2@27749>   BSR.w JUMP_get1bytemain
000418CC <AmiBlitz3.ab2@27750>    BNE.w JL_0_4AA8
000418D0 <AmiBlitz3.ab2@27751>   MOVE.b #$2,(A0)
000418D2 <AmiBlitz3.ab2@27752> RTS
000418D6 <AmiBlitz3.ab2@27756>   BEQ.w JUMP_syntaxerr
000418DC <AmiBlitz3.ab2@27757>   LEA path2,A0
000418DE <AmiBlitz3.ab2@27767>   TST.w D0
000418E2 <AmiBlitz3.ab2@27768>    BMI.w JUMP_syntaxerr
000418E4 <AmiBlitz3.ab2@27769>   MOVE.b D0,(A0)+
000418E8 <AmiBlitz3.ab2@27770>   BSR.w JUMP_get1bytemain
000418EC <AmiBlitz3.ab2@27771>    BNE.w JL_0_4AA8b
000418F0 <AmiBlitz3.ab2@27772>   MOVE.b #$2,(A0)
000418F2 <AmiBlitz3.ab2@27773> RTS
000418F8 <AmiBlitz3.ab2@27782> JMP errormsg_reg
00041902 <AmiBlitz3.ab2@27786>   MOVE.l #$f22d6780,fpucodeglobal
0004190C <AmiBlitz3.ab2@27787>   MOVE.l #$f22c6780,fpucodelocal
00041912 <AmiBlitz3.ab2@27788>   LEA regtable,a0
0004191C <AmiBlitz3.ab2@27789>   MOVE.l #7,maxregs
0004191E <AmiBlitz3.ab2@27792>   MOVE.l (a0),d0
00041922 <AmiBlitz3.ab2@27793>   BEQ 'e1
00041924 <AmiBlitz3.ab2@27794>   CLR.l (a0)
00041928 <AmiBlitz3.ab2@27795>   MOVE.w 4(a0),d0
00041932 <AmiBlitz3.ab2@27796>   MOVE.l fpucodeglobal,fpucode
00041936 <AmiBlitz3.ab2@27797>   TST.w 6(a0)
0004193A <AmiBlitz3.ab2@27798>   BEQ 'glob
00041944 <AmiBlitz3.ab2@27799>   MOVE.l fpucodelocal,fpucode
0004194A <AmiBlitz3.ab2@27802>   MOVE.l fpucode,d1
00041950 <AmiBlitz3.ab2@27803>   JSR writelong
0004195A <AmiBlitz3.ab2@27804>   SUB.l #$80,fpucodelocal
00041964 <AmiBlitz3.ab2@27805>   SUB.l #$80,fpucodeglobal
00041966 <AmiBlitz3.ab2@27806>   MOVE.w d0,d1
0004196C <AmiBlitz3.ab2@27807>   JSR writeword
0004196E <AmiBlitz3.ab2@27808>   ADDQ #8,a0
00041972 <AmiBlitz3.ab2@27809> BRA 'again
00041974 <AmiBlitz3.ab2@27812> RTS
0004197A <AmiBlitz3.ab2@27819> JMP notypeerr
00041980 <AmiBlitz3.ab2@27822> JMP illtypeerr
0004198A <AmiBlitz3.ab2@27825>   MOVE.l #$f22d4780,fpucodeglobal
00041994 <AmiBlitz3.ab2@27826>   MOVE.l #$f22c4780,fpucodelocal
0004199A <AmiBlitz3.ab2@27827>   LEA regtable,a0
0004199C <AmiBlitz3.ab2@27828>   TST.l (a0)
000419A0 <AmiBlitz3.ab2@27829>    BNE JUMP_errormsg_reg
000419A2 <AmiBlitz3.ab2@27830>   MOVE.l d7,-(a7)
000419A4 <AmiBlitz3.ab2@27831>   SUBQ.l #1,a5
000419AA <AmiBlitz3.ab2@27834>   JSR getparameter2
000419AE <AmiBlitz3.ab2@27835>   BEQ.w 'nopar
000419B4 <AmiBlitz3.ab2@27836>   MOVE.w d0,lastchar
000419BA <AmiBlitz3.ab2@27837>   JSR findvariable
000419BE <AmiBlitz3.ab2@27838>   BNE 'islocal
000419C8 <AmiBlitz3.ab2@27839>   MOVE.l fpucodeglobal,fpucode
000419D2 <AmiBlitz3.ab2@27840>   MOVE.l #3,maxregs
000419D4 <AmiBlitz3.ab2@27841>   MOVEQ #0,d7
000419DC <AmiBlitz3.ab2@27844>   CMP.l #newtype_float,$a(a2)                              ;is float type
000419E0 <AmiBlitz3.ab2@27845>    BEQ 'doit
000419E8 <AmiBlitz3.ab2@27846>   CMP.l #newtype_double,$a(a2)
000419EC <AmiBlitz3.ab2@27847>    BNE JUMP_illtypeerr
000419F2 <AmiBlitz3.ab2@27850>   LEA regtable,a0
000419F4 <AmiBlitz3.ab2@27851>   MOVEQ #0,d0
000419F6 <AmiBlitz3.ab2@27854>   TST.l (a0)
000419FA <AmiBlitz3.ab2@27855>    BEQ 'store
000419FC <AmiBlitz3.ab2@27856>   ADDQ.l #4,d0
000419FE <AmiBlitz3.ab2@27857>   ADDQ.l #8,a0
00041A04 <AmiBlitz3.ab2@27858>   CMP.l #16,d0
00041A08 <AmiBlitz3.ab2@27859>    BCS 'loop
00041A12 <AmiBlitz3.ab2@27860>   MOVE.l #2,maxregs
00041A18 <AmiBlitz3.ab2@27861>   CMP.l #20,d0
00041A1C <AmiBlitz3.ab2@27862>    BCS 'loop
00041A26 <AmiBlitz3.ab2@27863>   MOVE.l #1,maxregs
00041A2C <AmiBlitz3.ab2@27864>   CMP.l #24,d0
00041A30 <AmiBlitz3.ab2@27865>    BCS 'loop
00041A36 <AmiBlitz3.ab2@27866> JMP toovarerr
00041A3C <AmiBlitz3.ab2@27869>   TST.b fpu
00041A40 <AmiBlitz3.ab2@27870>    BEQ 'nofpu
00041A42 <AmiBlitz3.ab2@27871>   MOVE.l a2,(a0)
00041A48 <AmiBlitz3.ab2@27872>   MOVE.w 4(a2),4(a0)
00041A4C <AmiBlitz3.ab2@27873>   MOVE.w d7,6(a0)
00041A52 <AmiBlitz3.ab2@27874>   MOVE.l fpucode,d1
00041A5C <AmiBlitz3.ab2@27875>   SUB.l #$80,fpucodeglobal
00041A66 <AmiBlitz3.ab2@27876>   SUB.l #$80,fpucodelocal
00041A6C <AmiBlitz3.ab2@27877>   JSR writelong
00041A70 <AmiBlitz3.ab2@27878>   MOVE.w 4(a2),d1
00041A76 <AmiBlitz3.ab2@27879>   JSR writeword
00041A7C <AmiBlitz3.ab2@27882>   MOVE.w lastchar,d0
00041A80 <AmiBlitz3.ab2@27883>   CMP.w #":",d0
00041A84 <AmiBlitz3.ab2@27884>    BEQ 'nopar
00041A86 <AmiBlitz3.ab2@27885>   TST.w d0
00041A8A <AmiBlitz3.ab2@27886>    BEQ 'nopar
00041A8E <AmiBlitz3.ab2@27887>   CMP.w #",",d0
00041A92 <AmiBlitz3.ab2@27888>   BNE JUMP_syntaxerr
00041A96 <AmiBlitz3.ab2@27889> BRA 'l2
00041A98 <AmiBlitz3.ab2@27892>    MOVE.l (a7)+,d7
00041A9A <AmiBlitz3.ab2@27893> RTS
00041A9C <AmiBlitz3.ab2@27896>   MOVEQ #1,d7
00041AA4 <AmiBlitz3.ab2@27897>   MOVE.b #1,newvariable
00041AAA <AmiBlitz3.ab2@27898>   LEA firstlocal,a2
00041AB0 <AmiBlitz3.ab2@27899>   JSR findvariable
00041AB6 <AmiBlitz3.ab2@27900>   CLR.b newvariable
00041ABC <AmiBlitz3.ab2@27901>   CMP.l #-1,d0
00041AC0 <AmiBlitz3.ab2@27902>   BEQ.w JUMP_notypeerr2
00041ACA <AmiBlitz3.ab2@27903>   MOVE.l fpucodelocal,fpucode
00041ACE <AmiBlitz3.ab2@27904> BRA 'go
00041AD2 <AmiBlitz3.ab2@27907>   CMP.b #".",d0
00041AD6 <AmiBlitz3.ab2@27908>    BNE 'l1
00041ADA <AmiBlitz3.ab2@27909>   BSR JUMP_get1bytemain
00041ADE <AmiBlitz3.ab2@27910>   BSR JUMP_get1bytemain
00041AE2 <AmiBlitz3.ab2@27913>   ORI .b #$20,d0
00041AE6 <AmiBlitz3.ab2@27914>   CMP.b #"d",d0
00041AEA <AmiBlitz3.ab2@27915>    BNE JUMP_illeaerr
00041AEE <AmiBlitz3.ab2@27916>   BSR JUMP_get1bytemain
00041AF2 <AmiBlitz3.ab2@27917>   SUB.b #$30,d0
00041AF6 <AmiBlitz3.ab2@27918>   CMP.b #$7,d0
00041AFA <AmiBlitz3.ab2@27919>    BGT JUMP_syntaxerr
00041AFE <AmiBlitz3.ab2@27920>   MOVE.w #$49c0,d1
00041B00 <AmiBlitz3.ab2@27921>   ADD.b d0,d1
00041B06 <AmiBlitz3.ab2@27922>   JSR writeword
00041B0A <AmiBlitz3.ab2@27923>   BSR JUMP_get1bytemain
00041B0C <AmiBlitz3.ab2@27924> RTS
00041B12 <AmiBlitz3.ab2@27928>   LEA lastpath,a0
00041B16 <AmiBlitz3.ab2@27929>   LEA usedpath(PC),A1
00041B18 <AmiBlitz3.ab2@27932>     MOVE.b (a0)+,(a1)+
00041B1C <AmiBlitz3.ab2@27933>   BNE 'l1
00041B22 <AmiBlitz3.ab2@27935>   LEA lastpath2,a0
00041B28 <AmiBlitz3.ab2@27936>   LEA lastpath,A1
00041B2A <AmiBlitz3.ab2@27939>     MOVE.b (a0)+,(a1)+
00041B2E <AmiBlitz3.ab2@27940>   BNE 'l2
00041B30 <AmiBlitz3.ab2@27941> RTS
00041B36 <AmiBlitz3.ab2@27945>   TST.b objectcount
00041B3A <AmiBlitz3.ab2@27946>   BEQ 'l2a
00041B40 <AmiBlitz3.ab2@27947> JMP macnesterr
00041B46 <AmiBlitz3.ab2@27950>   LEA devo,a0
00041B4C <AmiBlitz3.ab2@27951>   ADDQ.b #1,objectcount
00041B50 <AmiBlitz3.ab2@27952>   MOVEM.l a1/d2,-(a7)
00041B56 <AmiBlitz3.ab2@27953>   LEA ptr_parameterstore,a1
00041B58 <AmiBlitz3.ab2@27956>     MOVE.b (a0)+,(a1)+
00041B5C <AmiBlitz3.ab2@27957>   BNE 'l1
00041B5E <AmiBlitz3.ab2@27959>   MOVEQ #13,d2
00041B64 <AmiBlitz3.ab2@27960>   JSR findlabel2
00041B68 <AmiBlitz3.ab2@27961>   BNE 'd
00041B6C <AmiBlitz3.ab2@27962>   TST.l 8(a2)
00041B70 <AmiBlitz3.ab2@27963>   BEQ 'd
00041B76 <AmiBlitz3.ab2@27964>   SUBQ.b #1,objectcount
00041B7A <AmiBlitz3.ab2@27965>   MOVEM.l (a7)+,a1/d2
00041B80 <AmiBlitz3.ab2@27966>   JSR skiprest
00041B88 <AmiBlitz3.ab2@27967>   MOVE.b #1,developobject
00041B8A <AmiBlitz3.ab2@27968> RTS
00041B8E <AmiBlitz3.ab2@27971>   MOVEM.l (a7)+,a1/d2
00041B96 <AmiBlitz3.ab2@27972>   MOVE.b #1,resdisable
00041B9C <AmiBlitz3.ab2@27975>   CLR.b developobject
00041BA2 <AmiBlitz3.ab2@27976> JMP do_Macro
00041BA8 <AmiBlitz3.ab2@27980> JMP illeaerr
00041BAE <AmiBlitz3.ab2@27984>   CLR.b typecheck
00041BB4 <AmiBlitz3.ab2@27985>   CLR.b declare
00041BBA <AmiBlitz3.ab2@27986>   CLR.b declare2
00041BBE <AmiBlitz3.ab2@27987>   SUB.b #$30,d0
00041BC2 <AmiBlitz3.ab2@27988>   BTST #0,d0
00041BC6 <AmiBlitz3.ab2@27989>   BEQ 'l1
00041BCE <AmiBlitz3.ab2@27990>   MOVE.b #1,declare
00041BD2 <AmiBlitz3.ab2@27993>   BTST #1,d0
00041BD6 <AmiBlitz3.ab2@27994>   BEQ 'l2
00041BDE <AmiBlitz3.ab2@27995>   MOVE.b #1,declare2
00041BE2 <AmiBlitz3.ab2@27998>   BTST #2,d0
00041BE6 <AmiBlitz3.ab2@27999>   BEQ 'l3
00041BEE <AmiBlitz3.ab2@28000>   MOVE.b #1,typecheck
00041BF2 <AmiBlitz3.ab2@28003>   BSR.w JUMP_get1bytemain
00041BF4 <AmiBlitz3.ab2@28004> RTS
00041BFA <AmiBlitz3.ab2@28007> JMP get1bytemain
00041BFC <AmiBlitz3.ab2@28012>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00041BFE <AmiBlitz3.ab2@28013>   ADDQ #1,a5
00041C00 <AmiBlitz3.ab2@28014>   MOVE.l a5,-(a7)
00041C2A <AmiBlitz3.ab2@28015>   !basic
00041C30 <AmiBlitz3.ab2@28016>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
00041C3A <AmiBlitz3.ab2@28017>   If _myD0
00041C7A <AmiBlitz3.ab2@28018>     newconst$ = UCase$(Peek.s(_myD0))
00041C80 <AmiBlitz3.ab2@28019>   Else
00041CAE <AmiBlitz3.ab2@28020>     error{"INTERNAL: invalid pointer in check_newconstants!"}
00041CD6 <AmiBlitz3.ab2@28021>     nwconst$="xxx"
00041CFE <AmiBlitz3.ab2@28023>   condata$ =""
00041D0E <AmiBlitz3.ab2@28024>   Poke.b ?skip_bytes,0
00041D6A <AmiBlitz3.ab2@28025>   If Left$(newconst$,2) = "__"
00041DC4 <AmiBlitz3.ab2@28026>     Select Mid$(newconst$,3,4)
00041DE8 <AmiBlitz3.ab2@28028>      Case "DATE"
00041E42 <AmiBlitz3.ab2@28029>       Select Mid$(newconst$,3,6)
00041E80 <AmiBlitz3.ab2@28030>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
00041EC4 <AmiBlitz3.ab2@28031>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
00041ED2 <AmiBlitz3.ab2@28032>       End Select
00041EE0 <AmiBlitz3.ab2@28033>       i.l=SystemDate
00041F06 <AmiBlitz3.ab2@28034>       condata$ = Date$ (i)
00041F84 <AmiBlitz3.ab2@28035>       condata$ = Replace$(condata$,"/",".")
00041FAE <AmiBlitz3.ab2@28037>      Case "VER_"
00041FBE <AmiBlitz3.ab2@28040>       actual_version.l = Peek.l(?versioninformation)
00041FCE <AmiBlitz3.ab2@28041>       actual_build.l   = Peek.l(?number_of_builds)
00041FF2 <AmiBlitz3.ab2@28043>       Format ""
0004204C <AmiBlitz3.ab2@28044>       Select Mid$(newconst$,3,9)
00042070 <AmiBlitz3.ab2@28046>        Case "VER_MAJOR"
000420AC <AmiBlitz3.ab2@28047>         condata$ = Str$(actual_version LSR 24)
000420D6 <AmiBlitz3.ab2@28049>        Case "VER_MINOR"
0004211A <AmiBlitz3.ab2@28050>         condata$ = Str$((actual_version LSL 8) LSR 24)
00042144 <AmiBlitz3.ab2@28052>        Case "VER_PATCH"
00042188 <AmiBlitz3.ab2@28053>         condata$ = Str$((actual_version LSL 16) LSR 24 )
000421B2 <AmiBlitz3.ab2@28055>        Case "VER_BUILD"
000421D6 <AmiBlitz3.ab2@28056>         Format ""
0004220A <AmiBlitz3.ab2@28057>         condata$ = Str$(actual_build)
00042210 <AmiBlitz3.ab2@28059>        Default
00042238 <AmiBlitz3.ab2@28060>         condata$ = "{unknown compiler constant}"
00042246 <AmiBlitz3.ab2@28062>       End Select
0004226A <AmiBlitz3.ab2@28063>       Format ""
0004227A <AmiBlitz3.ab2@28064>       Poke.b ?skip_bytes,11
000422A4 <AmiBlitz3.ab2@28066>      Case "THIS"
000422FE <AmiBlitz3.ab2@28067>       Select Mid$(newconst$,3,9)
00042322 <AmiBlitz3.ab2@28069>        Case "THIS_FUNC"
00042332 <AmiBlitz3.ab2@28070>         Poke.b ?skip_bytes,15
00042352 <AmiBlitz3.ab2@28071>         If Peek.l(?currentfunction)<>0
0004239E <AmiBlitz3.ab2@28072>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
000423A4 <AmiBlitz3.ab2@28073>         Else
000423CC <AmiBlitz3.ab2@28074>           condata$ = "GLOBAL"
000423F6 <AmiBlitz3.ab2@28077>        Case "THIS_INCL"
00042406 <AmiBlitz3.ab2@28078>         Poke.b ?skip_bytes,14
00042426 <AmiBlitz3.ab2@28079>         If Peek.l(?includetemp2)<>0
00042474 <AmiBlitz3.ab2@28080>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0004249E <AmiBlitz3.ab2@28083>        Case "THIS_POIN"
000424AE <AmiBlitz3.ab2@28084>         Poke.b ?skip_bytes,14
000424CE <AmiBlitz3.ab2@28085>         If Peek.l(?currentfunction)<>0
000424FC <AmiBlitz3.ab2@28086>           condata$ = Hex$(Peek.l(?currentfunction))
0004250A <AmiBlitz3.ab2@28089>       End Select
00042534 <AmiBlitz3.ab2@28091>      Case "CODE"
00042544 <AmiBlitz3.ab2@28092>       Poke.b ?skip_bytes,10
000425A6 <AmiBlitz3.ab2@28093>       If Mid$(newconst$,3,8) = "CODELINE"
000425E2 <AmiBlitz3.ab2@28094>         condata$ = Str$(Peek.l(?globallinecount))
000425F0 <AmiBlitz3.ab2@28097>     End Select
000425F6 <AmiBlitz3.ab2@28099>   Else
0004264A <AmiBlitz3.ab2@28100>     Select Left$(newconst$,1)
0004266E <AmiBlitz3.ab2@28102>      Case "R"
0004267E <AmiBlitz3.ab2@28103>       Poke.b ?skip_bytes,3
000426F6 <AmiBlitz3.ab2@28104>       For i = 1 To Vallong(Mid$(newconst$,2,2))
00042776 <AmiBlitz3.ab2@28105>         condata$ = condata$ + Mid$(newconst$,4,1)
00042786 <AmiBlitz3.ab2@28106>       Next
000427B0 <AmiBlitz3.ab2@28108>      Case "N"
000427C0 <AmiBlitz3.ab2@28109>       Poke.b ?skip_bytes,1
000427E4 <AmiBlitz3.ab2@28110>       condata$ = Chr$(10)
000427EA <AmiBlitz3.ab2@28112>      Default
000427FC <AmiBlitz3.ab2@28113>       char1.b = Peek.b(&newconst$)
00042814 <AmiBlitz3.ab2@28114>       char2.b = Peek.b(&newconst$+1)
00042820 <AmiBlitz3.ab2@28115>       nibble1.l = -1
0004282C <AmiBlitz3.ab2@28116>       nibble2.l = -1
00042870 <AmiBlitz3.ab2@28118>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
000428B4 <AmiBlitz3.ab2@28119>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
000428FE <AmiBlitz3.ab2@28121>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
00042948 <AmiBlitz3.ab2@28122>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
00042992 <AmiBlitz3.ab2@28124>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
000429DC <AmiBlitz3.ab2@28125>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
00042A02 <AmiBlitz3.ab2@28127>       If nibble1>=0 AND nibble2>=0
00042A18 <AmiBlitz3.ab2@28128>         newchar.l = (nibble1 LSL 4) + (nibble2)
00042A3C <AmiBlitz3.ab2@28129>         condata$ = Chr$(newchar)
00042A4C <AmiBlitz3.ab2@28130>         Poke.b ?skip_bytes,2
00042A5A <AmiBlitz3.ab2@28133>     End Select
00042ABC <AmiBlitz3.ab2@28135>   If condata$ = "" AND Peek.b(?skip_bytes)=0
00042BE2 <AmiBlitz3.ab2@28136>     !cout{"detected unknown const: " + newconst$}
00042C16 <AmiBlitz3.ab2@28137>     condata$ = newconst$
00042C2C <AmiBlitz3.ab2@28140>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
00042C2E <AmiBlitz3.ab2@28141>   MOVE.l d0,d2
00042C30 <AmiBlitz3.ab2@28142>   MOVE.l d2,-(a7)
00042C36 <AmiBlitz3.ab2@28144>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
00042C38 <AmiBlitz3.ab2@28145>   MOVE.l d0,a0
00042C3A <AmiBlitz3.ab2@28148>     MOVE.b (a0)+,d1
00042C40 <AmiBlitz3.ab2@28149>     JSR pokedata1b
00042C44 <AmiBlitz3.ab2@28150>  DBF d2,'l1
00042C62 <AmiBlitz3.ab2@28152>   !asm
00042C64 <AmiBlitz3.ab2@28153>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00042C66 <AmiBlitz3.ab2@28154>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00042C68 <AmiBlitz3.ab2@28155>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
00042C6E <AmiBlitz3.ab2@28156>   ADD.l #1,d2
00042C74 <AmiBlitz3.ab2@28158>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
00042C7A <AmiBlitz3.ab2@28159>   MOVE.b skip_bytes,D0
00042C7C <AmiBlitz3.ab2@28160>   ADD.l D0,a5
00042C7E <AmiBlitz3.ab2@28161> RTS
00042C7E <internal_commands.ab2@1> INCLUDE "internal_commands.ab2"
00042C82 <internal_commands.ab2@13> INCLUDE "internal_commands.ab2"
00042C84 <internal_commands.ab2@15> INCLUDE "internal_commands.ab2"
00042C8C <internal_commands.ab2@16> INCLUDE "internal_commands.ab2"
00042C98 <internal_commands.ab2@17> INCLUDE "internal_commands.ab2"
00042C9C <internal_commands.ab2@21> INCLUDE "internal_commands.ab2"
00042C9E <internal_commands.ab2@22> INCLUDE "internal_commands.ab2"
00042CA2 <internal_commands.ab2@23> INCLUDE "internal_commands.ab2"
00042CEB <internal_commands.ab2@24> INCLUDE "internal_commands.ab2"
00042CEC <internal_commands.ab2@25> INCLUDE "internal_commands.ab2"
00042CF0 <internal_commands.ab2@28> INCLUDE "internal_commands.ab2"
00042CF2 <internal_commands.ab2@29> INCLUDE "internal_commands.ab2"
00042CF6 <internal_commands.ab2@30> INCLUDE "internal_commands.ab2"
00042D12 <internal_commands.ab2@31> INCLUDE "internal_commands.ab2"
00042D16 <internal_commands.ab2@35> INCLUDE "internal_commands.ab2"
00042D18 <internal_commands.ab2@36> INCLUDE "internal_commands.ab2"
00042D1C <internal_commands.ab2@37> INCLUDE "internal_commands.ab2"
00042D79 <internal_commands.ab2@38> INCLUDE "internal_commands.ab2"
00042D7A <internal_commands.ab2@39> INCLUDE "internal_commands.ab2"
00042D7E <internal_commands.ab2@42> INCLUDE "internal_commands.ab2"
00042D80 <internal_commands.ab2@43> INCLUDE "internal_commands.ab2"
00042D85 <internal_commands.ab2@44> INCLUDE "internal_commands.ab2"
00042D95 <internal_commands.ab2@45> INCLUDE "internal_commands.ab2"
00042D96 <internal_commands.ab2@46> INCLUDE "internal_commands.ab2"
00042D9A <internal_commands.ab2@49> INCLUDE "internal_commands.ab2"
00042D9C <internal_commands.ab2@50> INCLUDE "internal_commands.ab2"
00042DA2 <internal_commands.ab2@51> INCLUDE "internal_commands.ab2"
00042DB2 <internal_commands.ab2@52> INCLUDE "internal_commands.ab2"
00042DB6 <internal_commands.ab2@56> INCLUDE "internal_commands.ab2"
00042DB8 <internal_commands.ab2@57> INCLUDE "internal_commands.ab2"
00042DBF <internal_commands.ab2@58> INCLUDE "internal_commands.ab2"
00042DC0 <internal_commands.ab2@59> INCLUDE "internal_commands.ab2"
00042DC4 <internal_commands.ab2@63> INCLUDE "internal_commands.ab2"
00042DC6 <internal_commands.ab2@64> INCLUDE "internal_commands.ab2"
00042DD0 <internal_commands.ab2@65> INCLUDE "internal_commands.ab2"
00042E03 <internal_commands.ab2@66> INCLUDE "internal_commands.ab2"
00042E04 <internal_commands.ab2@67> INCLUDE "internal_commands.ab2"
00042E08 <internal_commands.ab2@70> INCLUDE "internal_commands.ab2"
00042E0A <internal_commands.ab2@71> INCLUDE "internal_commands.ab2"
00042E13 <internal_commands.ab2@72> INCLUDE "internal_commands.ab2"
00042E4E <internal_commands.ab2@73> INCLUDE "internal_commands.ab2"
00042E52 <internal_commands.ab2@77> INCLUDE "internal_commands.ab2"
00042E54 <internal_commands.ab2@78> INCLUDE "internal_commands.ab2"
00042E5E <internal_commands.ab2@79> INCLUDE "internal_commands.ab2"
00042E5F <internal_commands.ab2@80> INCLUDE "internal_commands.ab2"
00042E60 <internal_commands.ab2@81> INCLUDE "internal_commands.ab2"
00042E64 <internal_commands.ab2@84> INCLUDE "internal_commands.ab2"
00042E66 <internal_commands.ab2@85> INCLUDE "internal_commands.ab2"
00042E69 <internal_commands.ab2@86> INCLUDE "internal_commands.ab2"
00042E80 <internal_commands.ab2@87> INCLUDE "internal_commands.ab2"
00042E84 <internal_commands.ab2@91> INCLUDE "internal_commands.ab2"
00042E86 <internal_commands.ab2@92> INCLUDE "internal_commands.ab2"
00042E8C <internal_commands.ab2@93> INCLUDE "internal_commands.ab2"
00042E99 <internal_commands.ab2@94> INCLUDE "internal_commands.ab2"
00042E9A <internal_commands.ab2@95> INCLUDE "internal_commands.ab2"
00042E9E <internal_commands.ab2@98> INCLUDE "internal_commands.ab2"
00042EA0 <internal_commands.ab2@99> INCLUDE "internal_commands.ab2"
00042EA6 <internal_commands.ab2@100> INCLUDE "internal_commands.ab2"
00042EB2 <internal_commands.ab2@101> INCLUDE "internal_commands.ab2"
00042EB6 <internal_commands.ab2@105> INCLUDE "internal_commands.ab2"
00042EB8 <internal_commands.ab2@106> INCLUDE "internal_commands.ab2"
00042EBF <internal_commands.ab2@107> INCLUDE "internal_commands.ab2"
00042ECC <internal_commands.ab2@108> INCLUDE "internal_commands.ab2"
00042ED0 <internal_commands.ab2@112> INCLUDE "internal_commands.ab2"
00042ED2 <internal_commands.ab2@113> INCLUDE "internal_commands.ab2"
00042ED7 <internal_commands.ab2@114> INCLUDE "internal_commands.ab2"
00042EE4 <internal_commands.ab2@115> INCLUDE "internal_commands.ab2"
00042EE8 <internal_commands.ab2@119> INCLUDE "internal_commands.ab2"
00042EEA <internal_commands.ab2@120> INCLUDE "internal_commands.ab2"
00042EF2 <internal_commands.ab2@121> INCLUDE "internal_commands.ab2"
00042EF3 <internal_commands.ab2@122> INCLUDE "internal_commands.ab2"
00042EF4 <internal_commands.ab2@123> INCLUDE "internal_commands.ab2"
00042EF8 <internal_commands.ab2@126> INCLUDE "internal_commands.ab2"
00042EFA <internal_commands.ab2@127> INCLUDE "internal_commands.ab2"
00042F02 <internal_commands.ab2@128> INCLUDE "internal_commands.ab2"
00042F03 <internal_commands.ab2@129> INCLUDE "internal_commands.ab2"
00042F04 <internal_commands.ab2@130> INCLUDE "internal_commands.ab2"
00042F08 <internal_commands.ab2@133> INCLUDE "internal_commands.ab2"
00042F0A <internal_commands.ab2@134> INCLUDE "internal_commands.ab2"
00042F13 <internal_commands.ab2@135> INCLUDE "internal_commands.ab2"
00042F1E <internal_commands.ab2@136> INCLUDE "internal_commands.ab2"
00042F22 <internal_commands.ab2@140> INCLUDE "internal_commands.ab2"
00042F24 <internal_commands.ab2@141> INCLUDE "internal_commands.ab2"
00042F2C <internal_commands.ab2@142> INCLUDE "internal_commands.ab2"
00042F37 <internal_commands.ab2@143> INCLUDE "internal_commands.ab2"
00042F38 <internal_commands.ab2@144> INCLUDE "internal_commands.ab2"
00042F3C <internal_commands.ab2@147> INCLUDE "internal_commands.ab2"
00042F3E <internal_commands.ab2@148> INCLUDE "internal_commands.ab2"
00042F45 <internal_commands.ab2@149> INCLUDE "internal_commands.ab2"
00042FA7 <internal_commands.ab2@150> INCLUDE "internal_commands.ab2"
00042FA8 <internal_commands.ab2@151> INCLUDE "internal_commands.ab2"
00042FAC <internal_commands.ab2@154> INCLUDE "internal_commands.ab2"
00042FAE <internal_commands.ab2@155> INCLUDE "internal_commands.ab2"
00042FB5 <internal_commands.ab2@156> INCLUDE "internal_commands.ab2"
00042FC4 <internal_commands.ab2@157> INCLUDE "internal_commands.ab2"
00042FC8 <internal_commands.ab2@161> INCLUDE "internal_commands.ab2"
00042FCA <internal_commands.ab2@162> INCLUDE "internal_commands.ab2"
00042FCE <internal_commands.ab2@163> INCLUDE "internal_commands.ab2"
00043004 <internal_commands.ab2@164> INCLUDE "internal_commands.ab2"
00043008 <internal_commands.ab2@168> INCLUDE "internal_commands.ab2"
0004300A <internal_commands.ab2@169> INCLUDE "internal_commands.ab2"
0004300F <internal_commands.ab2@170> INCLUDE "internal_commands.ab2"
0004301E <internal_commands.ab2@171> INCLUDE "internal_commands.ab2"
00043022 <internal_commands.ab2@175> INCLUDE "internal_commands.ab2"
00043024 <internal_commands.ab2@176> INCLUDE "internal_commands.ab2"
00043027 <internal_commands.ab2@177> INCLUDE "internal_commands.ab2"
00043048 <internal_commands.ab2@178> INCLUDE "internal_commands.ab2"
0004304C <internal_commands.ab2@182> INCLUDE "internal_commands.ab2"
0004304E <internal_commands.ab2@183> INCLUDE "internal_commands.ab2"
00043053 <internal_commands.ab2@184> INCLUDE "internal_commands.ab2"
0004305F <internal_commands.ab2@185> INCLUDE "internal_commands.ab2"
00043060 <internal_commands.ab2@186> INCLUDE "internal_commands.ab2"
00043064 <internal_commands.ab2@189> INCLUDE "internal_commands.ab2"
00043066 <internal_commands.ab2@190> INCLUDE "internal_commands.ab2"
0004306B <internal_commands.ab2@191> INCLUDE "internal_commands.ab2"
00043082 <internal_commands.ab2@192> INCLUDE "internal_commands.ab2"
00043086 <internal_commands.ab2@196> INCLUDE "internal_commands.ab2"
00043088 <internal_commands.ab2@197> INCLUDE "internal_commands.ab2"
0004308D <internal_commands.ab2@198> INCLUDE "internal_commands.ab2"
0004309C <internal_commands.ab2@199> INCLUDE "internal_commands.ab2"
000430A0 <internal_commands.ab2@203> INCLUDE "internal_commands.ab2"
000430A2 <internal_commands.ab2@204> INCLUDE "internal_commands.ab2"
000430A7 <internal_commands.ab2@205> INCLUDE "internal_commands.ab2"
000430C6 <internal_commands.ab2@206> INCLUDE "internal_commands.ab2"
000430CA <internal_commands.ab2@210> INCLUDE "internal_commands.ab2"
000430CC <internal_commands.ab2@211> INCLUDE "internal_commands.ab2"
000430D1 <internal_commands.ab2@212> INCLUDE "internal_commands.ab2"
000430F0 <internal_commands.ab2@213> INCLUDE "internal_commands.ab2"
000430F4 <internal_commands.ab2@217> INCLUDE "internal_commands.ab2"
000430F6 <internal_commands.ab2@218> INCLUDE "internal_commands.ab2"
000430FC <internal_commands.ab2@219> INCLUDE "internal_commands.ab2"
000430FD <internal_commands.ab2@220> INCLUDE "internal_commands.ab2"
000430FE <internal_commands.ab2@221> INCLUDE "internal_commands.ab2"
00043102 <internal_commands.ab2@224> INCLUDE "internal_commands.ab2"
00043104 <internal_commands.ab2@225> INCLUDE "internal_commands.ab2"
00043109 <internal_commands.ab2@226> INCLUDE "internal_commands.ab2"
0004310A <internal_commands.ab2@227> INCLUDE "internal_commands.ab2"
0004310E <internal_commands.ab2@231> INCLUDE "internal_commands.ab2"
00043110 <internal_commands.ab2@232> INCLUDE "internal_commands.ab2"
00043115 <internal_commands.ab2@233> INCLUDE "internal_commands.ab2"
00043122 <internal_commands.ab2@234> INCLUDE "internal_commands.ab2"
00043126 <internal_commands.ab2@238> INCLUDE "internal_commands.ab2"
00043128 <internal_commands.ab2@239> INCLUDE "internal_commands.ab2"
0004312D <internal_commands.ab2@240> INCLUDE "internal_commands.ab2"
0004313C <internal_commands.ab2@241> INCLUDE "internal_commands.ab2"
00043140 <internal_commands.ab2@245> INCLUDE "internal_commands.ab2"
00043142 <internal_commands.ab2@246> INCLUDE "internal_commands.ab2"
00043147 <internal_commands.ab2@247> INCLUDE "internal_commands.ab2"
00043156 <internal_commands.ab2@248> INCLUDE "internal_commands.ab2"
0004315A <internal_commands.ab2@252> INCLUDE "internal_commands.ab2"
0004315C <internal_commands.ab2@253> INCLUDE "internal_commands.ab2"
00043162 <internal_commands.ab2@254> INCLUDE "internal_commands.ab2"
0004317F <internal_commands.ab2@255> INCLUDE "internal_commands.ab2"
00043180 <internal_commands.ab2@256> INCLUDE "internal_commands.ab2"
00043184 <internal_commands.ab2@259> INCLUDE "internal_commands.ab2"
00043186 <internal_commands.ab2@260> INCLUDE "internal_commands.ab2"
0004318C <internal_commands.ab2@261> INCLUDE "internal_commands.ab2"
000431A9 <internal_commands.ab2@262> INCLUDE "internal_commands.ab2"
000431AA <internal_commands.ab2@263> INCLUDE "internal_commands.ab2"
000431AE <internal_commands.ab2@266> INCLUDE "internal_commands.ab2"
000431B0 <internal_commands.ab2@267> INCLUDE "internal_commands.ab2"
000431B3 <internal_commands.ab2@268> INCLUDE "internal_commands.ab2"
000431CA <internal_commands.ab2@269> INCLUDE "internal_commands.ab2"
000431CE <internal_commands.ab2@273> INCLUDE "internal_commands.ab2"
000431D0 <internal_commands.ab2@274> INCLUDE "internal_commands.ab2"
000431D3 <internal_commands.ab2@275> INCLUDE "internal_commands.ab2"
000431E2 <internal_commands.ab2@276> INCLUDE "internal_commands.ab2"
000431E6 <internal_commands.ab2@280> INCLUDE "internal_commands.ab2"
000431E8 <internal_commands.ab2@281> INCLUDE "internal_commands.ab2"
000431ED <internal_commands.ab2@282> INCLUDE "internal_commands.ab2"
000431EE <internal_commands.ab2@283> INCLUDE "internal_commands.ab2"
000431F2 <internal_commands.ab2@287> INCLUDE "internal_commands.ab2"
000431F4 <internal_commands.ab2@288> INCLUDE "internal_commands.ab2"
000431F8 <internal_commands.ab2@289> INCLUDE "internal_commands.ab2"
0004320D <internal_commands.ab2@290> INCLUDE "internal_commands.ab2"
0004320E <internal_commands.ab2@291> INCLUDE "internal_commands.ab2"
00043212 <internal_commands.ab2@294> INCLUDE "internal_commands.ab2"
00043214 <internal_commands.ab2@295> INCLUDE "internal_commands.ab2"
0004321B <internal_commands.ab2@296> INCLUDE "internal_commands.ab2"
00043234 <internal_commands.ab2@297> INCLUDE "internal_commands.ab2"
00043238 <internal_commands.ab2@301> INCLUDE "internal_commands.ab2"
0004323A <internal_commands.ab2@302> INCLUDE "internal_commands.ab2"
00043241 <internal_commands.ab2@303> INCLUDE "internal_commands.ab2"
0004324C <internal_commands.ab2@304> INCLUDE "internal_commands.ab2"
00043250 <internal_commands.ab2@308> INCLUDE "internal_commands.ab2"
00043252 <internal_commands.ab2@309> INCLUDE "internal_commands.ab2"
00043257 <internal_commands.ab2@310> INCLUDE "internal_commands.ab2"
0004326E <internal_commands.ab2@311> INCLUDE "internal_commands.ab2"
00043272 <internal_commands.ab2@315> INCLUDE "internal_commands.ab2"
00043274 <internal_commands.ab2@316> INCLUDE "internal_commands.ab2"
00043278 <internal_commands.ab2@317> INCLUDE "internal_commands.ab2"
0004328F <internal_commands.ab2@318> INCLUDE "internal_commands.ab2"
00043290 <internal_commands.ab2@319> INCLUDE "internal_commands.ab2"
00043294 <internal_commands.ab2@322> INCLUDE "internal_commands.ab2"
00043296 <internal_commands.ab2@323> INCLUDE "internal_commands.ab2"
0004329B <internal_commands.ab2@324> INCLUDE "internal_commands.ab2"
0004329C <internal_commands.ab2@325> INCLUDE "internal_commands.ab2"
000432A0 <internal_commands.ab2@329> INCLUDE "internal_commands.ab2"
000432A2 <internal_commands.ab2@330> INCLUDE "internal_commands.ab2"
000432A7 <internal_commands.ab2@331> INCLUDE "internal_commands.ab2"
000432AB <internal_commands.ab2@332> INCLUDE "internal_commands.ab2"
000432AC <internal_commands.ab2@333> INCLUDE "internal_commands.ab2"
000432B0 <internal_commands.ab2@336> INCLUDE "internal_commands.ab2"
000432B2 <internal_commands.ab2@337> INCLUDE "internal_commands.ab2"
000432B9 <internal_commands.ab2@338> INCLUDE "internal_commands.ab2"
000432D1 <internal_commands.ab2@339> INCLUDE "internal_commands.ab2"
000432D2 <internal_commands.ab2@340> INCLUDE "internal_commands.ab2"
000432D6 <internal_commands.ab2@343> INCLUDE "internal_commands.ab2"
000432D8 <internal_commands.ab2@344> INCLUDE "internal_commands.ab2"
000432DF <internal_commands.ab2@345> INCLUDE "internal_commands.ab2"
000432E4 <internal_commands.ab2@346> INCLUDE "internal_commands.ab2"
000432E8 <internal_commands.ab2@350> INCLUDE "internal_commands.ab2"
000432EA <internal_commands.ab2@351> INCLUDE "internal_commands.ab2"
000432F1 <internal_commands.ab2@352> INCLUDE "internal_commands.ab2"
000432F6 <internal_commands.ab2@353> INCLUDE "internal_commands.ab2"
000432FA <internal_commands.ab2@357> INCLUDE "internal_commands.ab2"
000432FC <internal_commands.ab2@358> INCLUDE "internal_commands.ab2"
00043303 <internal_commands.ab2@359> INCLUDE "internal_commands.ab2"
0004331E <internal_commands.ab2@360> INCLUDE "internal_commands.ab2"
00043322 <internal_commands.ab2@364> INCLUDE "internal_commands.ab2"
00043324 <internal_commands.ab2@365> INCLUDE "internal_commands.ab2"
0004332C <internal_commands.ab2@366> INCLUDE "internal_commands.ab2"
00043345 <internal_commands.ab2@367> INCLUDE "internal_commands.ab2"
00043346 <internal_commands.ab2@368> INCLUDE "internal_commands.ab2"
0004334A <internal_commands.ab2@371> INCLUDE "internal_commands.ab2"
0004334C <internal_commands.ab2@372> INCLUDE "internal_commands.ab2"
00043352 <internal_commands.ab2@373> INCLUDE "internal_commands.ab2"
00043353 <internal_commands.ab2@374> INCLUDE "internal_commands.ab2"
00043354 <internal_commands.ab2@375> INCLUDE "internal_commands.ab2"
00043358 <internal_commands.ab2@378> INCLUDE "internal_commands.ab2"
0004335A <internal_commands.ab2@379> INCLUDE "internal_commands.ab2"
00043360 <internal_commands.ab2@380> INCLUDE "internal_commands.ab2"
00043361 <internal_commands.ab2@381> INCLUDE "internal_commands.ab2"
00043362 <internal_commands.ab2@382> INCLUDE "internal_commands.ab2"
00043366 <internal_commands.ab2@385> INCLUDE "internal_commands.ab2"
00043368 <internal_commands.ab2@386> INCLUDE "internal_commands.ab2"
0004336F <internal_commands.ab2@387> INCLUDE "internal_commands.ab2"
00043370 <internal_commands.ab2@388> INCLUDE "internal_commands.ab2"
00043374 <internal_commands.ab2@392> INCLUDE "internal_commands.ab2"
00043376 <internal_commands.ab2@393> INCLUDE "internal_commands.ab2"
0004337C <internal_commands.ab2@394> INCLUDE "internal_commands.ab2"
00043385 <internal_commands.ab2@395> INCLUDE "internal_commands.ab2"
00043386 <internal_commands.ab2@396> INCLUDE "internal_commands.ab2"
0004338A <internal_commands.ab2@399> INCLUDE "internal_commands.ab2"
0004338C <internal_commands.ab2@400> INCLUDE "internal_commands.ab2"
00043394 <internal_commands.ab2@401> INCLUDE "internal_commands.ab2"
000433A1 <internal_commands.ab2@402> INCLUDE "internal_commands.ab2"
000433A2 <internal_commands.ab2@403> INCLUDE "internal_commands.ab2"
000433A6 <internal_commands.ab2@406> INCLUDE "internal_commands.ab2"
000433A8 <internal_commands.ab2@407> INCLUDE "internal_commands.ab2"
000433B0 <internal_commands.ab2@408> INCLUDE "internal_commands.ab2"
000433BD <internal_commands.ab2@409> INCLUDE "internal_commands.ab2"
000433BE <internal_commands.ab2@410> INCLUDE "internal_commands.ab2"
000433C2 <internal_commands.ab2@413> INCLUDE "internal_commands.ab2"
000433C4 <internal_commands.ab2@414> INCLUDE "internal_commands.ab2"
000433CC <internal_commands.ab2@415> INCLUDE "internal_commands.ab2"
000433D9 <internal_commands.ab2@416> INCLUDE "internal_commands.ab2"
000433DA <internal_commands.ab2@417> INCLUDE "internal_commands.ab2"
000433DE <internal_commands.ab2@420> INCLUDE "internal_commands.ab2"
000433E0 <internal_commands.ab2@421> INCLUDE "internal_commands.ab2"
000433E5 <internal_commands.ab2@422> INCLUDE "internal_commands.ab2"
000433E6 <internal_commands.ab2@423> INCLUDE "internal_commands.ab2"
000433EA <internal_commands.ab2@437> INCLUDE "internal_commands.ab2"
000433EC <internal_commands.ab2@438> INCLUDE "internal_commands.ab2"
000433F1 <internal_commands.ab2@439> INCLUDE "internal_commands.ab2"
000433F2 <internal_commands.ab2@440> INCLUDE "internal_commands.ab2"
000433F4 <internal_commands.ab2@443> INCLUDE "internal_commands.ab2"
000433F8 <internal_commands.ab2@444> INCLUDE "internal_commands.ab2"
000433FA <internal_commands.ab2@445> INCLUDE "internal_commands.ab2"
000433FC <internal_commands.ab2@446> INCLUDE "internal_commands.ab2"
00043400 <internal_commands.ab2@447> INCLUDE "internal_commands.ab2"
00043402 <internal_commands.ab2@448> INCLUDE "internal_commands.ab2"
00043406 <internal_commands.ab2@452> INCLUDE "internal_commands.ab2"
00043408 <internal_commands.ab2@453> INCLUDE "internal_commands.ab2"
0004340C <internal_commands.ab2@454> INCLUDE "internal_commands.ab2"
0004340D <internal_commands.ab2@455> INCLUDE "internal_commands.ab2"
0004340E <internal_commands.ab2@456> INCLUDE "internal_commands.ab2"
00043410 <internal_commands.ab2@458> INCLUDE "internal_commands.ab2"
00043414 <internal_commands.ab2@459> INCLUDE "internal_commands.ab2"
00043416 <internal_commands.ab2@460> INCLUDE "internal_commands.ab2"
00043418 <internal_commands.ab2@461> INCLUDE "internal_commands.ab2"
0004341C <internal_commands.ab2@462> INCLUDE "internal_commands.ab2"
0004341E <internal_commands.ab2@463> INCLUDE "internal_commands.ab2"
00043422 <internal_commands.ab2@467> INCLUDE "internal_commands.ab2"
00043424 <internal_commands.ab2@468> INCLUDE "internal_commands.ab2"
00043429 <internal_commands.ab2@469> INCLUDE "internal_commands.ab2"
0004342A <internal_commands.ab2@470> INCLUDE "internal_commands.ab2"
0004342C <internal_commands.ab2@473> INCLUDE "internal_commands.ab2"
00043430 <internal_commands.ab2@474> INCLUDE "internal_commands.ab2"
00043432 <internal_commands.ab2@475> INCLUDE "internal_commands.ab2"
00043434 <internal_commands.ab2@476> INCLUDE "internal_commands.ab2"
00043438 <internal_commands.ab2@477> INCLUDE "internal_commands.ab2"
0004343A <internal_commands.ab2@478> INCLUDE "internal_commands.ab2"
0004343E <internal_commands.ab2@482> INCLUDE "internal_commands.ab2"
00043440 <internal_commands.ab2@483> INCLUDE "internal_commands.ab2"
00043445 <internal_commands.ab2@484> INCLUDE "internal_commands.ab2"
00043446 <internal_commands.ab2@485> INCLUDE "internal_commands.ab2"
00043448 <internal_commands.ab2@488> INCLUDE "internal_commands.ab2"
0004344C <internal_commands.ab2@489> INCLUDE "internal_commands.ab2"
0004344E <internal_commands.ab2@490> INCLUDE "internal_commands.ab2"
00043450 <internal_commands.ab2@491> INCLUDE "internal_commands.ab2"
00043454 <internal_commands.ab2@492> INCLUDE "internal_commands.ab2"
00043456 <internal_commands.ab2@493> INCLUDE "internal_commands.ab2"
0004345A <internal_commands.ab2@497> INCLUDE "internal_commands.ab2"
0004345C <internal_commands.ab2@498> INCLUDE "internal_commands.ab2"
00043461 <internal_commands.ab2@499> INCLUDE "internal_commands.ab2"
00043462 <internal_commands.ab2@500> INCLUDE "internal_commands.ab2"
00043464 <internal_commands.ab2@503> INCLUDE "internal_commands.ab2"
00043468 <internal_commands.ab2@504> INCLUDE "internal_commands.ab2"
0004346A <internal_commands.ab2@505> INCLUDE "internal_commands.ab2"
0004346C <internal_commands.ab2@506> INCLUDE "internal_commands.ab2"
00043470 <internal_commands.ab2@507> INCLUDE "internal_commands.ab2"
00043472 <internal_commands.ab2@508> INCLUDE "internal_commands.ab2"
00043476 <internal_commands.ab2@512> INCLUDE "internal_commands.ab2"
00043478 <internal_commands.ab2@513> INCLUDE "internal_commands.ab2"
0004347D <internal_commands.ab2@514> INCLUDE "internal_commands.ab2"
0004347E <internal_commands.ab2@515> INCLUDE "internal_commands.ab2"
00043480 <internal_commands.ab2@518> INCLUDE "internal_commands.ab2"
00043484 <internal_commands.ab2@519> INCLUDE "internal_commands.ab2"
00043486 <internal_commands.ab2@520> INCLUDE "internal_commands.ab2"
00043488 <internal_commands.ab2@521> INCLUDE "internal_commands.ab2"
0004348C <internal_commands.ab2@522> INCLUDE "internal_commands.ab2"
0004348E <internal_commands.ab2@523> INCLUDE "internal_commands.ab2"
00043492 <internal_commands.ab2@527> INCLUDE "internal_commands.ab2"
00043494 <internal_commands.ab2@528> INCLUDE "internal_commands.ab2"
00043498 <internal_commands.ab2@529> INCLUDE "internal_commands.ab2"
00043499 <internal_commands.ab2@530> INCLUDE "internal_commands.ab2"
0004349A <internal_commands.ab2@531> INCLUDE "internal_commands.ab2"
0004349C <internal_commands.ab2@533> INCLUDE "internal_commands.ab2"
000434A0 <internal_commands.ab2@534> INCLUDE "internal_commands.ab2"
000434A2 <internal_commands.ab2@535> INCLUDE "internal_commands.ab2"
000434A4 <internal_commands.ab2@536> INCLUDE "internal_commands.ab2"
000434A8 <internal_commands.ab2@537> INCLUDE "internal_commands.ab2"
000434AA <internal_commands.ab2@538> INCLUDE "internal_commands.ab2"
000434AE <internal_commands.ab2@542> INCLUDE "internal_commands.ab2"
000434B0 <internal_commands.ab2@543> INCLUDE "internal_commands.ab2"
000434B5 <internal_commands.ab2@544> INCLUDE "internal_commands.ab2"
000434B6 <internal_commands.ab2@545> INCLUDE "internal_commands.ab2"
000434B8 <internal_commands.ab2@548> INCLUDE "internal_commands.ab2"
000434BC <internal_commands.ab2@549> INCLUDE "internal_commands.ab2"
000434BE <internal_commands.ab2@550> INCLUDE "internal_commands.ab2"
000434C0 <internal_commands.ab2@551> INCLUDE "internal_commands.ab2"
000434C4 <internal_commands.ab2@552> INCLUDE "internal_commands.ab2"
000434C6 <internal_commands.ab2@553> INCLUDE "internal_commands.ab2"
000434CA <internal_commands.ab2@557> INCLUDE "internal_commands.ab2"
000434CC <internal_commands.ab2@558> INCLUDE "internal_commands.ab2"
000434D0 <internal_commands.ab2@559> INCLUDE "internal_commands.ab2"
000434D1 <internal_commands.ab2@560> INCLUDE "internal_commands.ab2"
000434D2 <internal_commands.ab2@561> INCLUDE "internal_commands.ab2"
000434D4 <internal_commands.ab2@563> INCLUDE "internal_commands.ab2"
000434D8 <internal_commands.ab2@564> INCLUDE "internal_commands.ab2"
000434DA <internal_commands.ab2@565> INCLUDE "internal_commands.ab2"
000434DC <internal_commands.ab2@566> INCLUDE "internal_commands.ab2"
000434E0 <internal_commands.ab2@567> INCLUDE "internal_commands.ab2"
000434E2 <internal_commands.ab2@568> INCLUDE "internal_commands.ab2"
000434E6 <internal_commands.ab2@572> INCLUDE "internal_commands.ab2"
000434E8 <internal_commands.ab2@573> INCLUDE "internal_commands.ab2"
000434EC <internal_commands.ab2@574> INCLUDE "internal_commands.ab2"
000434ED <internal_commands.ab2@575> INCLUDE "internal_commands.ab2"
000434EE <internal_commands.ab2@576> INCLUDE "internal_commands.ab2"
000434F0 <internal_commands.ab2@578> INCLUDE "internal_commands.ab2"
000434F4 <internal_commands.ab2@579> INCLUDE "internal_commands.ab2"
000434F6 <internal_commands.ab2@580> INCLUDE "internal_commands.ab2"
000434F8 <internal_commands.ab2@581> INCLUDE "internal_commands.ab2"
000434FC <internal_commands.ab2@582> INCLUDE "internal_commands.ab2"
000434FE <internal_commands.ab2@583> INCLUDE "internal_commands.ab2"
00043502 <internal_commands.ab2@587> INCLUDE "internal_commands.ab2"
00043504 <internal_commands.ab2@588> INCLUDE "internal_commands.ab2"
00043508 <internal_commands.ab2@589> INCLUDE "internal_commands.ab2"
00043509 <internal_commands.ab2@590> INCLUDE "internal_commands.ab2"
0004350A <internal_commands.ab2@591> INCLUDE "internal_commands.ab2"
0004350C <internal_commands.ab2@593> INCLUDE "internal_commands.ab2"
00043510 <internal_commands.ab2@594> INCLUDE "internal_commands.ab2"
00043512 <internal_commands.ab2@595> INCLUDE "internal_commands.ab2"
00043514 <internal_commands.ab2@596> INCLUDE "internal_commands.ab2"
00043518 <internal_commands.ab2@597> INCLUDE "internal_commands.ab2"
0004351A <internal_commands.ab2@598> INCLUDE "internal_commands.ab2"
0004351E <internal_commands.ab2@602> INCLUDE "internal_commands.ab2"
00043520 <internal_commands.ab2@603> INCLUDE "internal_commands.ab2"
00043524 <internal_commands.ab2@604> INCLUDE "internal_commands.ab2"
00043525 <internal_commands.ab2@605> INCLUDE "internal_commands.ab2"
00043526 <internal_commands.ab2@606> INCLUDE "internal_commands.ab2"
00043528 <internal_commands.ab2@608> INCLUDE "internal_commands.ab2"
0004352C <internal_commands.ab2@609> INCLUDE "internal_commands.ab2"
0004352E <internal_commands.ab2@610> INCLUDE "internal_commands.ab2"
00043530 <internal_commands.ab2@611> INCLUDE "internal_commands.ab2"
00043534 <internal_commands.ab2@612> INCLUDE "internal_commands.ab2"
00043536 <internal_commands.ab2@613> INCLUDE "internal_commands.ab2"
0004353A <internal_commands.ab2@617> INCLUDE "internal_commands.ab2"
0004353C <internal_commands.ab2@618> INCLUDE "internal_commands.ab2"
00043540 <internal_commands.ab2@619> INCLUDE "internal_commands.ab2"
00043541 <internal_commands.ab2@620> INCLUDE "internal_commands.ab2"
00043542 <internal_commands.ab2@621> INCLUDE "internal_commands.ab2"
00043544 <internal_commands.ab2@623> INCLUDE "internal_commands.ab2"
00043548 <internal_commands.ab2@624> INCLUDE "internal_commands.ab2"
0004354A <internal_commands.ab2@625> INCLUDE "internal_commands.ab2"
0004354C <internal_commands.ab2@626> INCLUDE "internal_commands.ab2"
00043550 <internal_commands.ab2@627> INCLUDE "internal_commands.ab2"
00043552 <internal_commands.ab2@628> INCLUDE "internal_commands.ab2"
00043556 <internal_commands.ab2@632> INCLUDE "internal_commands.ab2"
00043558 <internal_commands.ab2@633> INCLUDE "internal_commands.ab2"
0004355C <internal_commands.ab2@634> INCLUDE "internal_commands.ab2"
0004355D <internal_commands.ab2@635> INCLUDE "internal_commands.ab2"
0004355E <internal_commands.ab2@636> INCLUDE "internal_commands.ab2"
00043560 <internal_commands.ab2@638> INCLUDE "internal_commands.ab2"
00043564 <internal_commands.ab2@639> INCLUDE "internal_commands.ab2"
00043566 <internal_commands.ab2@640> INCLUDE "internal_commands.ab2"
00043568 <internal_commands.ab2@641> INCLUDE "internal_commands.ab2"
0004356C <internal_commands.ab2@642> INCLUDE "internal_commands.ab2"
0004356E <internal_commands.ab2@643> INCLUDE "internal_commands.ab2"
00043572 <internal_commands.ab2@647> INCLUDE "internal_commands.ab2"
00043574 <internal_commands.ab2@648> INCLUDE "internal_commands.ab2"
00043578 <internal_commands.ab2@649> INCLUDE "internal_commands.ab2"
00043579 <internal_commands.ab2@650> INCLUDE "internal_commands.ab2"
0004357A <internal_commands.ab2@651> INCLUDE "internal_commands.ab2"
0004357C <internal_commands.ab2@653> INCLUDE "internal_commands.ab2"
00043580 <internal_commands.ab2@654> INCLUDE "internal_commands.ab2"
00043582 <internal_commands.ab2@655> INCLUDE "internal_commands.ab2"
00043584 <internal_commands.ab2@656> INCLUDE "internal_commands.ab2"
00043588 <internal_commands.ab2@657> INCLUDE "internal_commands.ab2"
0004358A <internal_commands.ab2@658> INCLUDE "internal_commands.ab2"
0004358E <internal_commands.ab2@662> INCLUDE "internal_commands.ab2"
00043590 <internal_commands.ab2@663> INCLUDE "internal_commands.ab2"
00043594 <internal_commands.ab2@664> INCLUDE "internal_commands.ab2"
00043595 <internal_commands.ab2@665> INCLUDE "internal_commands.ab2"
00043596 <internal_commands.ab2@666> INCLUDE "internal_commands.ab2"
00043598 <internal_commands.ab2@668> INCLUDE "internal_commands.ab2"
0004359C <internal_commands.ab2@669> INCLUDE "internal_commands.ab2"
0004359E <internal_commands.ab2@670> INCLUDE "internal_commands.ab2"
000435A0 <internal_commands.ab2@671> INCLUDE "internal_commands.ab2"
000435A4 <internal_commands.ab2@672> INCLUDE "internal_commands.ab2"
000435A6 <internal_commands.ab2@673> INCLUDE "internal_commands.ab2"
000435AA <internal_commands.ab2@677> INCLUDE "internal_commands.ab2"
000435AC <internal_commands.ab2@678> INCLUDE "internal_commands.ab2"
000435B0 <internal_commands.ab2@679> INCLUDE "internal_commands.ab2"
000435B1 <internal_commands.ab2@680> INCLUDE "internal_commands.ab2"
000435B2 <internal_commands.ab2@681> INCLUDE "internal_commands.ab2"
000435B4 <internal_commands.ab2@683> INCLUDE "internal_commands.ab2"
000435B8 <internal_commands.ab2@684> INCLUDE "internal_commands.ab2"
000435BA <internal_commands.ab2@685> INCLUDE "internal_commands.ab2"
000435BC <internal_commands.ab2@686> INCLUDE "internal_commands.ab2"
000435C0 <internal_commands.ab2@687> INCLUDE "internal_commands.ab2"
000435C2 <internal_commands.ab2@688> INCLUDE "internal_commands.ab2"
000435C6 <internal_commands.ab2@692> INCLUDE "internal_commands.ab2"
000435C8 <internal_commands.ab2@693> INCLUDE "internal_commands.ab2"
000435CC <internal_commands.ab2@694> INCLUDE "internal_commands.ab2"
000435CD <internal_commands.ab2@695> INCLUDE "internal_commands.ab2"
000435CE <internal_commands.ab2@696> INCLUDE "internal_commands.ab2"
000435D0 <internal_commands.ab2@698> INCLUDE "internal_commands.ab2"
000435D4 <internal_commands.ab2@699> INCLUDE "internal_commands.ab2"
000435D6 <internal_commands.ab2@700> INCLUDE "internal_commands.ab2"
000435D8 <internal_commands.ab2@701> INCLUDE "internal_commands.ab2"
000435DC <internal_commands.ab2@702> INCLUDE "internal_commands.ab2"
000435DE <internal_commands.ab2@703> INCLUDE "internal_commands.ab2"
000435E2 <internal_commands.ab2@707> INCLUDE "internal_commands.ab2"
000435E4 <internal_commands.ab2@708> INCLUDE "internal_commands.ab2"
000435E8 <internal_commands.ab2@709> INCLUDE "internal_commands.ab2"
000435E9 <internal_commands.ab2@710> INCLUDE "internal_commands.ab2"
000435EA <internal_commands.ab2@711> INCLUDE "internal_commands.ab2"
000435EC <internal_commands.ab2@713> INCLUDE "internal_commands.ab2"
000435F0 <internal_commands.ab2@714> INCLUDE "internal_commands.ab2"
000435F2 <internal_commands.ab2@715> INCLUDE "internal_commands.ab2"
000435F4 <internal_commands.ab2@716> INCLUDE "internal_commands.ab2"
000435F8 <internal_commands.ab2@717> INCLUDE "internal_commands.ab2"
000435FA <internal_commands.ab2@718> INCLUDE "internal_commands.ab2"
000435FE <internal_commands.ab2@722> INCLUDE "internal_commands.ab2"
00043600 <internal_commands.ab2@723> INCLUDE "internal_commands.ab2"
00043604 <internal_commands.ab2@724> INCLUDE "internal_commands.ab2"
00043605 <internal_commands.ab2@725> INCLUDE "internal_commands.ab2"
00043606 <internal_commands.ab2@726> INCLUDE "internal_commands.ab2"
00043608 <internal_commands.ab2@728> INCLUDE "internal_commands.ab2"
0004360C <internal_commands.ab2@729> INCLUDE "internal_commands.ab2"
0004360E <internal_commands.ab2@730> INCLUDE "internal_commands.ab2"
00043610 <internal_commands.ab2@731> INCLUDE "internal_commands.ab2"
00043614 <internal_commands.ab2@732> INCLUDE "internal_commands.ab2"
00043616 <internal_commands.ab2@733> INCLUDE "internal_commands.ab2"
0004361A <internal_commands.ab2@737> INCLUDE "internal_commands.ab2"
0004361C <internal_commands.ab2@738> INCLUDE "internal_commands.ab2"
00043620 <internal_commands.ab2@739> INCLUDE "internal_commands.ab2"
00043621 <internal_commands.ab2@740> INCLUDE "internal_commands.ab2"
00043622 <internal_commands.ab2@741> INCLUDE "internal_commands.ab2"
00043624 <internal_commands.ab2@743> INCLUDE "internal_commands.ab2"
00043628 <internal_commands.ab2@744> INCLUDE "internal_commands.ab2"
0004362A <internal_commands.ab2@745> INCLUDE "internal_commands.ab2"
0004362C <internal_commands.ab2@746> INCLUDE "internal_commands.ab2"
00043630 <internal_commands.ab2@747> INCLUDE "internal_commands.ab2"
00043632 <internal_commands.ab2@748> INCLUDE "internal_commands.ab2"
00043636 <internal_commands.ab2@752> INCLUDE "internal_commands.ab2"
00043638 <internal_commands.ab2@753> INCLUDE "internal_commands.ab2"
0004363C <internal_commands.ab2@754> INCLUDE "internal_commands.ab2"
0004363D <internal_commands.ab2@755> INCLUDE "internal_commands.ab2"
0004363E <internal_commands.ab2@756> INCLUDE "internal_commands.ab2"
00043640 <internal_commands.ab2@758> INCLUDE "internal_commands.ab2"
00043644 <internal_commands.ab2@759> INCLUDE "internal_commands.ab2"
00043646 <internal_commands.ab2@760> INCLUDE "internal_commands.ab2"
00043648 <internal_commands.ab2@761> INCLUDE "internal_commands.ab2"
0004364C <internal_commands.ab2@762> INCLUDE "internal_commands.ab2"
0004364E <internal_commands.ab2@763> INCLUDE "internal_commands.ab2"
00043652 <internal_commands.ab2@767> INCLUDE "internal_commands.ab2"
00043654 <internal_commands.ab2@768> INCLUDE "internal_commands.ab2"
00043658 <internal_commands.ab2@769> INCLUDE "internal_commands.ab2"
00043659 <internal_commands.ab2@770> INCLUDE "internal_commands.ab2"
0004365A <internal_commands.ab2@771> INCLUDE "internal_commands.ab2"
0004365C <internal_commands.ab2@773> INCLUDE "internal_commands.ab2"
00043660 <internal_commands.ab2@774> INCLUDE "internal_commands.ab2"
00043662 <internal_commands.ab2@775> INCLUDE "internal_commands.ab2"
00043664 <internal_commands.ab2@776> INCLUDE "internal_commands.ab2"
00043668 <internal_commands.ab2@777> INCLUDE "internal_commands.ab2"
0004366A <internal_commands.ab2@778> INCLUDE "internal_commands.ab2"
0004366E <internal_commands.ab2@782> INCLUDE "internal_commands.ab2"
00043670 <internal_commands.ab2@783> INCLUDE "internal_commands.ab2"
00043674 <internal_commands.ab2@784> INCLUDE "internal_commands.ab2"
00043675 <internal_commands.ab2@785> INCLUDE "internal_commands.ab2"
00043676 <internal_commands.ab2@786> INCLUDE "internal_commands.ab2"
00043678 <internal_commands.ab2@788> INCLUDE "internal_commands.ab2"
0004367C <internal_commands.ab2@789> INCLUDE "internal_commands.ab2"
0004367E <internal_commands.ab2@790> INCLUDE "internal_commands.ab2"
00043680 <internal_commands.ab2@791> INCLUDE "internal_commands.ab2"
00043684 <internal_commands.ab2@792> INCLUDE "internal_commands.ab2"
00043686 <internal_commands.ab2@793> INCLUDE "internal_commands.ab2"
0004368A <internal_commands.ab2@797> INCLUDE "internal_commands.ab2"
0004368C <internal_commands.ab2@798> INCLUDE "internal_commands.ab2"
00043691 <internal_commands.ab2@799> INCLUDE "internal_commands.ab2"
00043692 <internal_commands.ab2@800> INCLUDE "internal_commands.ab2"
00043694 <internal_commands.ab2@803> INCLUDE "internal_commands.ab2"
00043698 <internal_commands.ab2@804> INCLUDE "internal_commands.ab2"
0004369A <internal_commands.ab2@805> INCLUDE "internal_commands.ab2"
0004369C <internal_commands.ab2@806> INCLUDE "internal_commands.ab2"
000436A0 <internal_commands.ab2@807> INCLUDE "internal_commands.ab2"
000436A2 <internal_commands.ab2@808> INCLUDE "internal_commands.ab2"
000436A6 <internal_commands.ab2@812> INCLUDE "internal_commands.ab2"
000436A8 <internal_commands.ab2@813> INCLUDE "internal_commands.ab2"
000436AD <internal_commands.ab2@814> INCLUDE "internal_commands.ab2"
000436AE <internal_commands.ab2@815> INCLUDE "internal_commands.ab2"
000436B0 <internal_commands.ab2@818> INCLUDE "internal_commands.ab2"
000436B4 <internal_commands.ab2@819> INCLUDE "internal_commands.ab2"
000436B6 <internal_commands.ab2@820> INCLUDE "internal_commands.ab2"
000436B8 <internal_commands.ab2@821> INCLUDE "internal_commands.ab2"
000436BC <internal_commands.ab2@822> INCLUDE "internal_commands.ab2"
000436BE <internal_commands.ab2@823> INCLUDE "internal_commands.ab2"
000436C2 <internal_commands.ab2@827> INCLUDE "internal_commands.ab2"
000436C4 <internal_commands.ab2@828> INCLUDE "internal_commands.ab2"
000436C9 <internal_commands.ab2@829> INCLUDE "internal_commands.ab2"
000436CA <internal_commands.ab2@830> INCLUDE "internal_commands.ab2"
000436CC <internal_commands.ab2@833> INCLUDE "internal_commands.ab2"
000436D0 <internal_commands.ab2@834> INCLUDE "internal_commands.ab2"
000436D2 <internal_commands.ab2@835> INCLUDE "internal_commands.ab2"
000436D4 <internal_commands.ab2@836> INCLUDE "internal_commands.ab2"
000436D8 <internal_commands.ab2@837> INCLUDE "internal_commands.ab2"
000436DA <internal_commands.ab2@838> INCLUDE "internal_commands.ab2"
000436DE <internal_commands.ab2@842> INCLUDE "internal_commands.ab2"
000436E0 <internal_commands.ab2@843> INCLUDE "internal_commands.ab2"
000436E5 <internal_commands.ab2@844> INCLUDE "internal_commands.ab2"
000436E6 <internal_commands.ab2@845> INCLUDE "internal_commands.ab2"
000436E8 <internal_commands.ab2@848> INCLUDE "internal_commands.ab2"
000436EC <internal_commands.ab2@849> INCLUDE "internal_commands.ab2"
000436EE <internal_commands.ab2@850> INCLUDE "internal_commands.ab2"
000436F0 <internal_commands.ab2@851> INCLUDE "internal_commands.ab2"
000436F4 <internal_commands.ab2@852> INCLUDE "internal_commands.ab2"
000436F6 <internal_commands.ab2@853> INCLUDE "internal_commands.ab2"
000436FA <internal_commands.ab2@857> INCLUDE "internal_commands.ab2"
000436FC <internal_commands.ab2@858> INCLUDE "internal_commands.ab2"
00043700 <internal_commands.ab2@859> INCLUDE "internal_commands.ab2"
00043701 <internal_commands.ab2@860> INCLUDE "internal_commands.ab2"
00043702 <internal_commands.ab2@861> INCLUDE "internal_commands.ab2"
00043704 <internal_commands.ab2@863> INCLUDE "internal_commands.ab2"
00043708 <internal_commands.ab2@864> INCLUDE "internal_commands.ab2"
0004370A <internal_commands.ab2@865> INCLUDE "internal_commands.ab2"
0004370C <internal_commands.ab2@866> INCLUDE "internal_commands.ab2"
00043710 <internal_commands.ab2@867> INCLUDE "internal_commands.ab2"
00043712 <internal_commands.ab2@868> INCLUDE "internal_commands.ab2"
00043716 <internal_commands.ab2@872> INCLUDE "internal_commands.ab2"
00043718 <internal_commands.ab2@873> INCLUDE "internal_commands.ab2"
0004371C <internal_commands.ab2@874> INCLUDE "internal_commands.ab2"
0004371D <internal_commands.ab2@875> INCLUDE "internal_commands.ab2"
0004371E <internal_commands.ab2@876> INCLUDE "internal_commands.ab2"
00043720 <internal_commands.ab2@878> INCLUDE "internal_commands.ab2"
00043724 <internal_commands.ab2@879> INCLUDE "internal_commands.ab2"
00043726 <internal_commands.ab2@880> INCLUDE "internal_commands.ab2"
00043728 <internal_commands.ab2@881> INCLUDE "internal_commands.ab2"
0004372C <internal_commands.ab2@882> INCLUDE "internal_commands.ab2"
0004372E <internal_commands.ab2@883> INCLUDE "internal_commands.ab2"
00043732 <internal_commands.ab2@887> INCLUDE "internal_commands.ab2"
00043734 <internal_commands.ab2@888> INCLUDE "internal_commands.ab2"
00043738 <internal_commands.ab2@889> INCLUDE "internal_commands.ab2"
00043739 <internal_commands.ab2@890> INCLUDE "internal_commands.ab2"
0004373A <internal_commands.ab2@891> INCLUDE "internal_commands.ab2"
0004373C <internal_commands.ab2@893> INCLUDE "internal_commands.ab2"
00043740 <internal_commands.ab2@894> INCLUDE "internal_commands.ab2"
00043742 <internal_commands.ab2@895> INCLUDE "internal_commands.ab2"
00043744 <internal_commands.ab2@896> INCLUDE "internal_commands.ab2"
00043748 <internal_commands.ab2@897> INCLUDE "internal_commands.ab2"
0004374A <internal_commands.ab2@898> INCLUDE "internal_commands.ab2"
0004374E <internal_commands.ab2@902> INCLUDE "internal_commands.ab2"
00043750 <internal_commands.ab2@903> INCLUDE "internal_commands.ab2"
00043754 <internal_commands.ab2@904> INCLUDE "internal_commands.ab2"
00043755 <internal_commands.ab2@905> INCLUDE "internal_commands.ab2"
00043756 <internal_commands.ab2@906> INCLUDE "internal_commands.ab2"
00043758 <internal_commands.ab2@908> INCLUDE "internal_commands.ab2"
0004375C <internal_commands.ab2@909> INCLUDE "internal_commands.ab2"
0004375E <internal_commands.ab2@910> INCLUDE "internal_commands.ab2"
00043760 <internal_commands.ab2@911> INCLUDE "internal_commands.ab2"
00043764 <internal_commands.ab2@912> INCLUDE "internal_commands.ab2"
00043766 <internal_commands.ab2@913> INCLUDE "internal_commands.ab2"
0004376A <internal_commands.ab2@917> INCLUDE "internal_commands.ab2"
0004376C <internal_commands.ab2@918> INCLUDE "internal_commands.ab2"
00043770 <internal_commands.ab2@919> INCLUDE "internal_commands.ab2"
00043771 <internal_commands.ab2@920> INCLUDE "internal_commands.ab2"
00043772 <internal_commands.ab2@921> INCLUDE "internal_commands.ab2"
00043774 <internal_commands.ab2@923> INCLUDE "internal_commands.ab2"
00043778 <internal_commands.ab2@924> INCLUDE "internal_commands.ab2"
0004377A <internal_commands.ab2@925> INCLUDE "internal_commands.ab2"
0004377C <internal_commands.ab2@926> INCLUDE "internal_commands.ab2"
00043780 <internal_commands.ab2@927> INCLUDE "internal_commands.ab2"
00043782 <internal_commands.ab2@928> INCLUDE "internal_commands.ab2"
00043786 <internal_commands.ab2@932> INCLUDE "internal_commands.ab2"
00043788 <internal_commands.ab2@933> INCLUDE "internal_commands.ab2"
0004378D <internal_commands.ab2@934> INCLUDE "internal_commands.ab2"
0004378E <internal_commands.ab2@935> INCLUDE "internal_commands.ab2"
00043790 <internal_commands.ab2@938> INCLUDE "internal_commands.ab2"
00043794 <internal_commands.ab2@939> INCLUDE "internal_commands.ab2"
00043796 <internal_commands.ab2@940> INCLUDE "internal_commands.ab2"
00043798 <internal_commands.ab2@941> INCLUDE "internal_commands.ab2"
0004379C <internal_commands.ab2@942> INCLUDE "internal_commands.ab2"
0004379E <internal_commands.ab2@943> INCLUDE "internal_commands.ab2"
000437A2 <internal_commands.ab2@947> INCLUDE "internal_commands.ab2"
000437A4 <internal_commands.ab2@948> INCLUDE "internal_commands.ab2"
000437A9 <internal_commands.ab2@949> INCLUDE "internal_commands.ab2"
000437AA <internal_commands.ab2@950> INCLUDE "internal_commands.ab2"
000437AC <internal_commands.ab2@953> INCLUDE "internal_commands.ab2"
000437B0 <internal_commands.ab2@954> INCLUDE "internal_commands.ab2"
000437B2 <internal_commands.ab2@955> INCLUDE "internal_commands.ab2"
000437B4 <internal_commands.ab2@956> INCLUDE "internal_commands.ab2"
000437B8 <internal_commands.ab2@957> INCLUDE "internal_commands.ab2"
000437BA <internal_commands.ab2@958> INCLUDE "internal_commands.ab2"
000437BE <internal_commands.ab2@962> INCLUDE "internal_commands.ab2"
000437C0 <internal_commands.ab2@963> INCLUDE "internal_commands.ab2"
000437C5 <internal_commands.ab2@964> INCLUDE "internal_commands.ab2"
000437C6 <internal_commands.ab2@965> INCLUDE "internal_commands.ab2"
000437C8 <internal_commands.ab2@968> INCLUDE "internal_commands.ab2"
000437CC <internal_commands.ab2@969> INCLUDE "internal_commands.ab2"
000437CE <internal_commands.ab2@970> INCLUDE "internal_commands.ab2"
000437D0 <internal_commands.ab2@971> INCLUDE "internal_commands.ab2"
000437D4 <internal_commands.ab2@972> INCLUDE "internal_commands.ab2"
000437D6 <internal_commands.ab2@973> INCLUDE "internal_commands.ab2"
000437DA <internal_commands.ab2@977> INCLUDE "internal_commands.ab2"
000437DC <internal_commands.ab2@978> INCLUDE "internal_commands.ab2"
000437E1 <internal_commands.ab2@979> INCLUDE "internal_commands.ab2"
000437E2 <internal_commands.ab2@980> INCLUDE "internal_commands.ab2"
000437E4 <internal_commands.ab2@983> INCLUDE "internal_commands.ab2"
000437E8 <internal_commands.ab2@984> INCLUDE "internal_commands.ab2"
000437EA <internal_commands.ab2@985> INCLUDE "internal_commands.ab2"
000437EC <internal_commands.ab2@986> INCLUDE "internal_commands.ab2"
000437F0 <internal_commands.ab2@987> INCLUDE "internal_commands.ab2"
000437F2 <internal_commands.ab2@988> INCLUDE "internal_commands.ab2"
000437F6 <internal_commands.ab2@992> INCLUDE "internal_commands.ab2"
000437F8 <internal_commands.ab2@993> INCLUDE "internal_commands.ab2"
000437FD <internal_commands.ab2@994> INCLUDE "internal_commands.ab2"
000437FE <internal_commands.ab2@995> INCLUDE "internal_commands.ab2"
00043800 <internal_commands.ab2@998> INCLUDE "internal_commands.ab2"
00043804 <internal_commands.ab2@999> INCLUDE "internal_commands.ab2"
00043806 <internal_commands.ab2@1000> INCLUDE "internal_commands.ab2"
00043808 <internal_commands.ab2@1001> INCLUDE "internal_commands.ab2"
0004380C <internal_commands.ab2@1002> INCLUDE "internal_commands.ab2"
0004380E <internal_commands.ab2@1003> INCLUDE "internal_commands.ab2"
00043812 <internal_commands.ab2@1007> INCLUDE "internal_commands.ab2"
00043814 <internal_commands.ab2@1008> INCLUDE "internal_commands.ab2"
00043819 <internal_commands.ab2@1009> INCLUDE "internal_commands.ab2"
0004381A <internal_commands.ab2@1010> INCLUDE "internal_commands.ab2"
0004381C <internal_commands.ab2@1013> INCLUDE "internal_commands.ab2"
00043820 <internal_commands.ab2@1014> INCLUDE "internal_commands.ab2"
00043822 <internal_commands.ab2@1015> INCLUDE "internal_commands.ab2"
00043824 <internal_commands.ab2@1016> INCLUDE "internal_commands.ab2"
00043828 <internal_commands.ab2@1017> INCLUDE "internal_commands.ab2"
0004382A <internal_commands.ab2@1018> INCLUDE "internal_commands.ab2"
0004382E <internal_commands.ab2@1022> INCLUDE "internal_commands.ab2"
00043830 <internal_commands.ab2@1023> INCLUDE "internal_commands.ab2"
00043835 <internal_commands.ab2@1024> INCLUDE "internal_commands.ab2"
00043836 <internal_commands.ab2@1025> INCLUDE "internal_commands.ab2"
00043838 <internal_commands.ab2@1028> INCLUDE "internal_commands.ab2"
0004383C <internal_commands.ab2@1029> INCLUDE "internal_commands.ab2"
0004383E <internal_commands.ab2@1030> INCLUDE "internal_commands.ab2"
00043840 <internal_commands.ab2@1031> INCLUDE "internal_commands.ab2"
00043844 <internal_commands.ab2@1032> INCLUDE "internal_commands.ab2"
00043846 <internal_commands.ab2@1033> INCLUDE "internal_commands.ab2"
0004384A <internal_commands.ab2@1037> INCLUDE "internal_commands.ab2"
0004384C <internal_commands.ab2@1038> INCLUDE "internal_commands.ab2"
00043851 <internal_commands.ab2@1039> INCLUDE "internal_commands.ab2"
00043852 <internal_commands.ab2@1040> INCLUDE "internal_commands.ab2"
00043854 <internal_commands.ab2@1043> INCLUDE "internal_commands.ab2"
00043858 <internal_commands.ab2@1044> INCLUDE "internal_commands.ab2"
0004385A <internal_commands.ab2@1045> INCLUDE "internal_commands.ab2"
0004385C <internal_commands.ab2@1046> INCLUDE "internal_commands.ab2"
00043860 <internal_commands.ab2@1047> INCLUDE "internal_commands.ab2"
00043862 <internal_commands.ab2@1048> INCLUDE "internal_commands.ab2"
00043866 <internal_commands.ab2@1052> INCLUDE "internal_commands.ab2"
00043868 <internal_commands.ab2@1053> INCLUDE "internal_commands.ab2"
0004386D <internal_commands.ab2@1054> INCLUDE "internal_commands.ab2"
0004386E <internal_commands.ab2@1055> INCLUDE "internal_commands.ab2"
00043870 <internal_commands.ab2@1058> INCLUDE "internal_commands.ab2"
00043874 <internal_commands.ab2@1059> INCLUDE "internal_commands.ab2"
00043876 <internal_commands.ab2@1060> INCLUDE "internal_commands.ab2"
00043878 <internal_commands.ab2@1061> INCLUDE "internal_commands.ab2"
0004387C <internal_commands.ab2@1062> INCLUDE "internal_commands.ab2"
0004387E <internal_commands.ab2@1063> INCLUDE "internal_commands.ab2"
00043882 <internal_commands.ab2@1067> INCLUDE "internal_commands.ab2"
00043884 <internal_commands.ab2@1068> INCLUDE "internal_commands.ab2"
00043889 <internal_commands.ab2@1069> INCLUDE "internal_commands.ab2"
0004388A <internal_commands.ab2@1070> INCLUDE "internal_commands.ab2"
0004388C <internal_commands.ab2@1073> INCLUDE "internal_commands.ab2"
00043890 <internal_commands.ab2@1074> INCLUDE "internal_commands.ab2"
00043892 <internal_commands.ab2@1075> INCLUDE "internal_commands.ab2"
00043894 <internal_commands.ab2@1076> INCLUDE "internal_commands.ab2"
00043898 <internal_commands.ab2@1077> INCLUDE "internal_commands.ab2"
0004389A <internal_commands.ab2@1078> INCLUDE "internal_commands.ab2"
0004389E <internal_commands.ab2@1082> INCLUDE "internal_commands.ab2"
000438A0 <internal_commands.ab2@1083> INCLUDE "internal_commands.ab2"
000438A5 <internal_commands.ab2@1084> INCLUDE "internal_commands.ab2"
000438A6 <internal_commands.ab2@1085> INCLUDE "internal_commands.ab2"
000438A8 <internal_commands.ab2@1088> INCLUDE "internal_commands.ab2"
000438AC <internal_commands.ab2@1089> INCLUDE "internal_commands.ab2"
000438AE <internal_commands.ab2@1090> INCLUDE "internal_commands.ab2"
000438B0 <internal_commands.ab2@1091> INCLUDE "internal_commands.ab2"
000438B4 <internal_commands.ab2@1092> INCLUDE "internal_commands.ab2"
000438B6 <internal_commands.ab2@1093> INCLUDE "internal_commands.ab2"
000438BA <internal_commands.ab2@1097> INCLUDE "internal_commands.ab2"
000438BC <internal_commands.ab2@1098> INCLUDE "internal_commands.ab2"
000438C1 <internal_commands.ab2@1099> INCLUDE "internal_commands.ab2"
000438C2 <internal_commands.ab2@1100> INCLUDE "internal_commands.ab2"
000438C4 <internal_commands.ab2@1103> INCLUDE "internal_commands.ab2"
000438C8 <internal_commands.ab2@1104> INCLUDE "internal_commands.ab2"
000438CA <internal_commands.ab2@1105> INCLUDE "internal_commands.ab2"
000438CC <internal_commands.ab2@1106> INCLUDE "internal_commands.ab2"
000438D0 <internal_commands.ab2@1107> INCLUDE "internal_commands.ab2"
000438D2 <internal_commands.ab2@1108> INCLUDE "internal_commands.ab2"
000438D6 <internal_commands.ab2@1112> INCLUDE "internal_commands.ab2"
000438D8 <internal_commands.ab2@1113> INCLUDE "internal_commands.ab2"
000438DD <internal_commands.ab2@1114> INCLUDE "internal_commands.ab2"
000438DE <internal_commands.ab2@1115> INCLUDE "internal_commands.ab2"
000438E0 <internal_commands.ab2@1118> INCLUDE "internal_commands.ab2"
000438E4 <internal_commands.ab2@1119> INCLUDE "internal_commands.ab2"
000438E6 <internal_commands.ab2@1120> INCLUDE "internal_commands.ab2"
000438E8 <internal_commands.ab2@1121> INCLUDE "internal_commands.ab2"
000438EC <internal_commands.ab2@1122> INCLUDE "internal_commands.ab2"
000438EE <internal_commands.ab2@1123> INCLUDE "internal_commands.ab2"
000438F2 <internal_commands.ab2@1127> INCLUDE "internal_commands.ab2"
000438F4 <internal_commands.ab2@1128> INCLUDE "internal_commands.ab2"
000438F9 <internal_commands.ab2@1129> INCLUDE "internal_commands.ab2"
000438FA <internal_commands.ab2@1130> INCLUDE "internal_commands.ab2"
000438FC <internal_commands.ab2@1133> INCLUDE "internal_commands.ab2"
00043900 <internal_commands.ab2@1134> INCLUDE "internal_commands.ab2"
00043902 <internal_commands.ab2@1135> INCLUDE "internal_commands.ab2"
00043904 <internal_commands.ab2@1136> INCLUDE "internal_commands.ab2"
00043908 <internal_commands.ab2@1137> INCLUDE "internal_commands.ab2"
0004390A <internal_commands.ab2@1138> INCLUDE "internal_commands.ab2"
0004390E <internal_commands.ab2@1142> INCLUDE "internal_commands.ab2"
00043910 <internal_commands.ab2@1143> INCLUDE "internal_commands.ab2"
00043915 <internal_commands.ab2@1144> INCLUDE "internal_commands.ab2"
00043916 <internal_commands.ab2@1145> INCLUDE "internal_commands.ab2"
00043918 <internal_commands.ab2@1148> INCLUDE "internal_commands.ab2"
0004391C <internal_commands.ab2@1149> INCLUDE "internal_commands.ab2"
0004391E <internal_commands.ab2@1150> INCLUDE "internal_commands.ab2"
00043920 <internal_commands.ab2@1151> INCLUDE "internal_commands.ab2"
00043924 <internal_commands.ab2@1152> INCLUDE "internal_commands.ab2"
00043926 <internal_commands.ab2@1153> INCLUDE "internal_commands.ab2"
0004392A <internal_commands.ab2@1157> INCLUDE "internal_commands.ab2"
0004392C <internal_commands.ab2@1158> INCLUDE "internal_commands.ab2"
00043931 <internal_commands.ab2@1159> INCLUDE "internal_commands.ab2"
00043932 <internal_commands.ab2@1160> INCLUDE "internal_commands.ab2"
00043934 <internal_commands.ab2@1163> INCLUDE "internal_commands.ab2"
00043938 <internal_commands.ab2@1164> INCLUDE "internal_commands.ab2"
0004393A <internal_commands.ab2@1165> INCLUDE "internal_commands.ab2"
0004393C <internal_commands.ab2@1166> INCLUDE "internal_commands.ab2"
00043940 <internal_commands.ab2@1167> INCLUDE "internal_commands.ab2"
00043942 <internal_commands.ab2@1168> INCLUDE "internal_commands.ab2"
00043946 <internal_commands.ab2@1172> INCLUDE "internal_commands.ab2"
00043948 <internal_commands.ab2@1173> INCLUDE "internal_commands.ab2"
0004394D <internal_commands.ab2@1174> INCLUDE "internal_commands.ab2"
0004394E <internal_commands.ab2@1175> INCLUDE "internal_commands.ab2"
00043950 <internal_commands.ab2@1178> INCLUDE "internal_commands.ab2"
00043954 <internal_commands.ab2@1179> INCLUDE "internal_commands.ab2"
00043956 <internal_commands.ab2@1180> INCLUDE "internal_commands.ab2"
00043958 <internal_commands.ab2@1181> INCLUDE "internal_commands.ab2"
0004395C <internal_commands.ab2@1182> INCLUDE "internal_commands.ab2"
0004395E <internal_commands.ab2@1183> INCLUDE "internal_commands.ab2"
00043962 <internal_commands.ab2@1186> INCLUDE "internal_commands.ab2"
00043964 <internal_commands.ab2@1187> INCLUDE "internal_commands.ab2"
00043968 <internal_commands.ab2@1188> INCLUDE "internal_commands.ab2"
00043969 <internal_commands.ab2@1189> INCLUDE "internal_commands.ab2"
0004396A <internal_commands.ab2@1190> INCLUDE "internal_commands.ab2"
0004396C <internal_commands.ab2@1192> INCLUDE "internal_commands.ab2"
00043970 <internal_commands.ab2@1193> INCLUDE "internal_commands.ab2"
00043972 <internal_commands.ab2@1194> INCLUDE "internal_commands.ab2"
00043974 <internal_commands.ab2@1195> INCLUDE "internal_commands.ab2"
00043978 <internal_commands.ab2@1196> INCLUDE "internal_commands.ab2"
0004397A <internal_commands.ab2@1197> INCLUDE "internal_commands.ab2"
0004397E <internal_commands.ab2@1201> INCLUDE "internal_commands.ab2"
00043980 <internal_commands.ab2@1202> INCLUDE "internal_commands.ab2"
00043985 <internal_commands.ab2@1203> INCLUDE "internal_commands.ab2"
00043986 <internal_commands.ab2@1204> INCLUDE "internal_commands.ab2"
00043988 <internal_commands.ab2@1207> INCLUDE "internal_commands.ab2"
0004398C <internal_commands.ab2@1208> INCLUDE "internal_commands.ab2"
0004398E <internal_commands.ab2@1209> INCLUDE "internal_commands.ab2"
00043990 <internal_commands.ab2@1210> INCLUDE "internal_commands.ab2"
00043994 <internal_commands.ab2@1211> INCLUDE "internal_commands.ab2"
00043996 <internal_commands.ab2@1212> INCLUDE "internal_commands.ab2"
0004399A <internal_commands.ab2@1216> INCLUDE "internal_commands.ab2"
0004399C <internal_commands.ab2@1217> INCLUDE "internal_commands.ab2"
000439A0 <internal_commands.ab2@1218> INCLUDE "internal_commands.ab2"
000439A1 <internal_commands.ab2@1219> INCLUDE "internal_commands.ab2"
000439A2 <internal_commands.ab2@1220> INCLUDE "internal_commands.ab2"
000439A4 <internal_commands.ab2@1222> INCLUDE "internal_commands.ab2"
000439A8 <internal_commands.ab2@1223> INCLUDE "internal_commands.ab2"
000439AA <internal_commands.ab2@1224> INCLUDE "internal_commands.ab2"
000439AC <internal_commands.ab2@1225> INCLUDE "internal_commands.ab2"
000439B0 <internal_commands.ab2@1226> INCLUDE "internal_commands.ab2"
000439B2 <internal_commands.ab2@1227> INCLUDE "internal_commands.ab2"
000439B6 <internal_commands.ab2@1231> INCLUDE "internal_commands.ab2"
000439B8 <internal_commands.ab2@1232> INCLUDE "internal_commands.ab2"
000439BD <internal_commands.ab2@1233> INCLUDE "internal_commands.ab2"
000439BE <internal_commands.ab2@1234> INCLUDE "internal_commands.ab2"
000439C0 <internal_commands.ab2@1237> INCLUDE "internal_commands.ab2"
000439C4 <internal_commands.ab2@1238> INCLUDE "internal_commands.ab2"
000439C6 <internal_commands.ab2@1239> INCLUDE "internal_commands.ab2"
000439C8 <internal_commands.ab2@1240> INCLUDE "internal_commands.ab2"
000439CC <internal_commands.ab2@1241> INCLUDE "internal_commands.ab2"
000439CE <internal_commands.ab2@1242> INCLUDE "internal_commands.ab2"
000439D2 <internal_commands.ab2@1246> INCLUDE "internal_commands.ab2"
000439D4 <internal_commands.ab2@1247> INCLUDE "internal_commands.ab2"
000439D9 <internal_commands.ab2@1248> INCLUDE "internal_commands.ab2"
000439DA <internal_commands.ab2@1249> INCLUDE "internal_commands.ab2"
000439DC <internal_commands.ab2@1252> INCLUDE "internal_commands.ab2"
000439E0 <internal_commands.ab2@1253> INCLUDE "internal_commands.ab2"
000439E2 <internal_commands.ab2@1254> INCLUDE "internal_commands.ab2"
000439E4 <internal_commands.ab2@1255> INCLUDE "internal_commands.ab2"
000439E8 <internal_commands.ab2@1256> INCLUDE "internal_commands.ab2"
000439EA <internal_commands.ab2@1257> INCLUDE "internal_commands.ab2"
000439EE <internal_commands.ab2@1261> INCLUDE "internal_commands.ab2"
000439F0 <internal_commands.ab2@1262> INCLUDE "internal_commands.ab2"
000439F4 <internal_commands.ab2@1263> INCLUDE "internal_commands.ab2"
000439F5 <internal_commands.ab2@1264> INCLUDE "internal_commands.ab2"
000439F6 <internal_commands.ab2@1265> INCLUDE "internal_commands.ab2"
000439F8 <internal_commands.ab2@1267> INCLUDE "internal_commands.ab2"
000439FC <internal_commands.ab2@1268> INCLUDE "internal_commands.ab2"
000439FE <internal_commands.ab2@1269> INCLUDE "internal_commands.ab2"
00043A00 <internal_commands.ab2@1270> INCLUDE "internal_commands.ab2"
00043A04 <internal_commands.ab2@1271> INCLUDE "internal_commands.ab2"
00043A06 <internal_commands.ab2@1272> INCLUDE "internal_commands.ab2"
00043A0A <internal_commands.ab2@1276> INCLUDE "internal_commands.ab2"
00043A0C <internal_commands.ab2@1277> INCLUDE "internal_commands.ab2"
00043A11 <internal_commands.ab2@1278> INCLUDE "internal_commands.ab2"
00043A12 <internal_commands.ab2@1279> INCLUDE "internal_commands.ab2"
00043A14 <internal_commands.ab2@1282> INCLUDE "internal_commands.ab2"
00043A18 <internal_commands.ab2@1283> INCLUDE "internal_commands.ab2"
00043A1A <internal_commands.ab2@1284> INCLUDE "internal_commands.ab2"
00043A1C <internal_commands.ab2@1285> INCLUDE "internal_commands.ab2"
00043A20 <internal_commands.ab2@1286> INCLUDE "internal_commands.ab2"
00043A22 <internal_commands.ab2@1287> INCLUDE "internal_commands.ab2"
00043A26 <internal_commands.ab2@1291> INCLUDE "internal_commands.ab2"
00043A28 <internal_commands.ab2@1292> INCLUDE "internal_commands.ab2"
00043A2C <internal_commands.ab2@1293> INCLUDE "internal_commands.ab2"
00043A2D <internal_commands.ab2@1294> INCLUDE "internal_commands.ab2"
00043A2E <internal_commands.ab2@1295> INCLUDE "internal_commands.ab2"
00043A30 <internal_commands.ab2@1297> INCLUDE "internal_commands.ab2"
00043A34 <internal_commands.ab2@1298> INCLUDE "internal_commands.ab2"
00043A36 <internal_commands.ab2@1299> INCLUDE "internal_commands.ab2"
00043A38 <internal_commands.ab2@1300> INCLUDE "internal_commands.ab2"
00043A3C <internal_commands.ab2@1301> INCLUDE "internal_commands.ab2"
00043A3E <internal_commands.ab2@1302> INCLUDE "internal_commands.ab2"
00043A42 <internal_commands.ab2@1306> INCLUDE "internal_commands.ab2"
00043A44 <internal_commands.ab2@1307> INCLUDE "internal_commands.ab2"
00043A48 <internal_commands.ab2@1308> INCLUDE "internal_commands.ab2"
00043A49 <internal_commands.ab2@1309> INCLUDE "internal_commands.ab2"
00043A4A <internal_commands.ab2@1310> INCLUDE "internal_commands.ab2"
00043A4C <internal_commands.ab2@1312> INCLUDE "internal_commands.ab2"
00043A50 <internal_commands.ab2@1313> INCLUDE "internal_commands.ab2"
00043A52 <internal_commands.ab2@1314> INCLUDE "internal_commands.ab2"
00043A54 <internal_commands.ab2@1315> INCLUDE "internal_commands.ab2"
00043A58 <internal_commands.ab2@1316> INCLUDE "internal_commands.ab2"
00043A5A <internal_commands.ab2@1317> INCLUDE "internal_commands.ab2"
00043A5E <internal_commands.ab2@1321> INCLUDE "internal_commands.ab2"
00043A60 <internal_commands.ab2@1322> INCLUDE "internal_commands.ab2"
00043A68 <internal_commands.ab2@1323> INCLUDE "internal_commands.ab2"
00043A69 <internal_commands.ab2@1324> INCLUDE "internal_commands.ab2"
00043A6A <internal_commands.ab2@1325> INCLUDE "internal_commands.ab2"
00043A6C <internal_commands.ab2@1327> INCLUDE "internal_commands.ab2"
00043A70 <internal_commands.ab2@1328> INCLUDE "internal_commands.ab2"
00043A72 <internal_commands.ab2@1329> INCLUDE "internal_commands.ab2"
00043A74 <internal_commands.ab2@1330> INCLUDE "internal_commands.ab2"
00043A78 <internal_commands.ab2@1331> INCLUDE "internal_commands.ab2"
00043A7A <internal_commands.ab2@1332> INCLUDE "internal_commands.ab2"
00043A7E <internal_commands.ab2@1336> INCLUDE "internal_commands.ab2"
00043A80 <internal_commands.ab2@1337> INCLUDE "internal_commands.ab2"
00043A84 <internal_commands.ab2@1338> INCLUDE "internal_commands.ab2"
00043A85 <internal_commands.ab2@1339> INCLUDE "internal_commands.ab2"
00043A86 <internal_commands.ab2@1340> INCLUDE "internal_commands.ab2"
00043A88 <internal_commands.ab2@1342> INCLUDE "internal_commands.ab2"
00043A8C <internal_commands.ab2@1343> INCLUDE "internal_commands.ab2"
00043A8E <internal_commands.ab2@1344> INCLUDE "internal_commands.ab2"
00043A90 <internal_commands.ab2@1345> INCLUDE "internal_commands.ab2"
00043A94 <internal_commands.ab2@1346> INCLUDE "internal_commands.ab2"
00043A96 <internal_commands.ab2@1347> INCLUDE "internal_commands.ab2"
00043A9A <internal_commands.ab2@1351> INCLUDE "internal_commands.ab2"
00043A9C <internal_commands.ab2@1352> INCLUDE "internal_commands.ab2"
00043AA0 <internal_commands.ab2@1353> INCLUDE "internal_commands.ab2"
00043AA1 <internal_commands.ab2@1354> INCLUDE "internal_commands.ab2"
00043AA2 <internal_commands.ab2@1355> INCLUDE "internal_commands.ab2"
00043AA4 <internal_commands.ab2@1357> INCLUDE "internal_commands.ab2"
00043AA8 <internal_commands.ab2@1358> INCLUDE "internal_commands.ab2"
00043AAA <internal_commands.ab2@1359> INCLUDE "internal_commands.ab2"
00043AAC <internal_commands.ab2@1360> INCLUDE "internal_commands.ab2"
00043AB0 <internal_commands.ab2@1361> INCLUDE "internal_commands.ab2"
00043AB2 <internal_commands.ab2@1362> INCLUDE "internal_commands.ab2"
00043AB6 <internal_commands.ab2@1366> INCLUDE "internal_commands.ab2"
00043AB8 <internal_commands.ab2@1367> INCLUDE "internal_commands.ab2"
00043ABC <internal_commands.ab2@1368> INCLUDE "internal_commands.ab2"
00043ABD <internal_commands.ab2@1369> INCLUDE "internal_commands.ab2"
00043ABE <internal_commands.ab2@1370> INCLUDE "internal_commands.ab2"
00043AC0 <internal_commands.ab2@1372> INCLUDE "internal_commands.ab2"
00043AC4 <internal_commands.ab2@1373> INCLUDE "internal_commands.ab2"
00043AC6 <internal_commands.ab2@1374> INCLUDE "internal_commands.ab2"
00043AC8 <internal_commands.ab2@1375> INCLUDE "internal_commands.ab2"
00043ACC <internal_commands.ab2@1376> INCLUDE "internal_commands.ab2"
00043ACE <internal_commands.ab2@1377> INCLUDE "internal_commands.ab2"
00043AD2 <internal_commands.ab2@1381> INCLUDE "internal_commands.ab2"
00043AD4 <internal_commands.ab2@1382> INCLUDE "internal_commands.ab2"
00043AD9 <internal_commands.ab2@1383> INCLUDE "internal_commands.ab2"
00043ADA <internal_commands.ab2@1384> INCLUDE "internal_commands.ab2"
00043ADC <internal_commands.ab2@1387> INCLUDE "internal_commands.ab2"
00043AE0 <internal_commands.ab2@1388> INCLUDE "internal_commands.ab2"
00043AE2 <internal_commands.ab2@1389> INCLUDE "internal_commands.ab2"
00043AE4 <internal_commands.ab2@1390> INCLUDE "internal_commands.ab2"
00043AE8 <internal_commands.ab2@1391> INCLUDE "internal_commands.ab2"
00043AEA <internal_commands.ab2@1392> INCLUDE "internal_commands.ab2"
00043AEE <internal_commands.ab2@1396> INCLUDE "internal_commands.ab2"
00043AF0 <internal_commands.ab2@1397> INCLUDE "internal_commands.ab2"
00043AF4 <internal_commands.ab2@1398> INCLUDE "internal_commands.ab2"
00043AF5 <internal_commands.ab2@1399> INCLUDE "internal_commands.ab2"
00043AF6 <internal_commands.ab2@1400> INCLUDE "internal_commands.ab2"
00043AF8 <internal_commands.ab2@1402> INCLUDE "internal_commands.ab2"
00043AFC <internal_commands.ab2@1403> INCLUDE "internal_commands.ab2"
00043AFE <internal_commands.ab2@1404> INCLUDE "internal_commands.ab2"
00043B00 <internal_commands.ab2@1405> INCLUDE "internal_commands.ab2"
00043B04 <internal_commands.ab2@1406> INCLUDE "internal_commands.ab2"
00043B06 <internal_commands.ab2@1407> INCLUDE "internal_commands.ab2"
00043B0A <internal_commands.ab2@1411> INCLUDE "internal_commands.ab2"
00043B0C <internal_commands.ab2@1412> INCLUDE "internal_commands.ab2"
00043B10 <internal_commands.ab2@1413> INCLUDE "internal_commands.ab2"
00043B11 <internal_commands.ab2@1414> INCLUDE "internal_commands.ab2"
00043B12 <internal_commands.ab2@1415> INCLUDE "internal_commands.ab2"
00043B14 <internal_commands.ab2@1417> INCLUDE "internal_commands.ab2"
00043B18 <internal_commands.ab2@1418> INCLUDE "internal_commands.ab2"
00043B1A <internal_commands.ab2@1419> INCLUDE "internal_commands.ab2"
00043B1C <internal_commands.ab2@1420> INCLUDE "internal_commands.ab2"
00043B20 <internal_commands.ab2@1421> INCLUDE "internal_commands.ab2"
00043B22 <internal_commands.ab2@1422> INCLUDE "internal_commands.ab2"
00043B26 <internal_commands.ab2@1426> INCLUDE "internal_commands.ab2"
00043B28 <internal_commands.ab2@1427> INCLUDE "internal_commands.ab2"
00043B2D <internal_commands.ab2@1428> INCLUDE "internal_commands.ab2"
00043B2E <internal_commands.ab2@1429> INCLUDE "internal_commands.ab2"
00043B30 <internal_commands.ab2@1432> INCLUDE "internal_commands.ab2"
00043B34 <internal_commands.ab2@1433> INCLUDE "internal_commands.ab2"
00043B36 <internal_commands.ab2@1434> INCLUDE "internal_commands.ab2"
00043B38 <internal_commands.ab2@1435> INCLUDE "internal_commands.ab2"
00043B3C <internal_commands.ab2@1436> INCLUDE "internal_commands.ab2"
00043B3E <internal_commands.ab2@1437> INCLUDE "internal_commands.ab2"
00043B42 <internal_commands.ab2@1441> INCLUDE "internal_commands.ab2"
00043B44 <internal_commands.ab2@1442> INCLUDE "internal_commands.ab2"
00043B49 <internal_commands.ab2@1443> INCLUDE "internal_commands.ab2"
00043B4A <internal_commands.ab2@1444> INCLUDE "internal_commands.ab2"
00043B4C <internal_commands.ab2@1447> INCLUDE "internal_commands.ab2"
00043B50 <internal_commands.ab2@1448> INCLUDE "internal_commands.ab2"
00043B52 <internal_commands.ab2@1449> INCLUDE "internal_commands.ab2"
00043B54 <internal_commands.ab2@1450> INCLUDE "internal_commands.ab2"
00043B58 <internal_commands.ab2@1451> INCLUDE "internal_commands.ab2"
00043B5A <internal_commands.ab2@1452> INCLUDE "internal_commands.ab2"
00043B5E <internal_commands.ab2@1457> INCLUDE "internal_commands.ab2"
00043B60 <internal_commands.ab2@1458> INCLUDE "internal_commands.ab2"
00043B66 <internal_commands.ab2@1459> INCLUDE "internal_commands.ab2"
00043B67 <internal_commands.ab2@1460> INCLUDE "internal_commands.ab2"
00043B68 <internal_commands.ab2@1461> INCLUDE "internal_commands.ab2"
00043B6A <internal_commands.ab2@1463> INCLUDE "internal_commands.ab2"
00043B6E <internal_commands.ab2@1464> INCLUDE "internal_commands.ab2"
00043B70 <internal_commands.ab2@1465> INCLUDE "internal_commands.ab2"
00043B72 <internal_commands.ab2@1466> INCLUDE "internal_commands.ab2"
00043B76 <internal_commands.ab2@1467> INCLUDE "internal_commands.ab2"
00043B78 <internal_commands.ab2@1468> INCLUDE "internal_commands.ab2"
00043B7C <internal_commands.ab2@1472> INCLUDE "internal_commands.ab2"
00043B7E <internal_commands.ab2@1473> INCLUDE "internal_commands.ab2"
00043B84 <internal_commands.ab2@1474> INCLUDE "internal_commands.ab2"
00043B85 <internal_commands.ab2@1475> INCLUDE "internal_commands.ab2"
00043B86 <internal_commands.ab2@1476> INCLUDE "internal_commands.ab2"
00043B88 <internal_commands.ab2@1478> INCLUDE "internal_commands.ab2"
00043B8C <internal_commands.ab2@1479> INCLUDE "internal_commands.ab2"
00043B8E <internal_commands.ab2@1480> INCLUDE "internal_commands.ab2"
00043B90 <internal_commands.ab2@1481> INCLUDE "internal_commands.ab2"
00043B94 <internal_commands.ab2@1482> INCLUDE "internal_commands.ab2"
00043B96 <internal_commands.ab2@1483> INCLUDE "internal_commands.ab2"
00043B9A <internal_commands.ab2@1487> INCLUDE "internal_commands.ab2"
00043B9C <internal_commands.ab2@1488> INCLUDE "internal_commands.ab2"
00043BA2 <internal_commands.ab2@1489> INCLUDE "internal_commands.ab2"
00043BA3 <internal_commands.ab2@1490> INCLUDE "internal_commands.ab2"
00043BA4 <internal_commands.ab2@1491> INCLUDE "internal_commands.ab2"
00043BA6 <internal_commands.ab2@1493> INCLUDE "internal_commands.ab2"
00043BAA <internal_commands.ab2@1494> INCLUDE "internal_commands.ab2"
00043BAC <internal_commands.ab2@1495> INCLUDE "internal_commands.ab2"
00043BAE <internal_commands.ab2@1496> INCLUDE "internal_commands.ab2"
00043BB2 <internal_commands.ab2@1497> INCLUDE "internal_commands.ab2"
00043BB4 <internal_commands.ab2@1498> INCLUDE "internal_commands.ab2"
00043BB8 <internal_commands.ab2@1502> INCLUDE "internal_commands.ab2"
00043BBA <internal_commands.ab2@1503> INCLUDE "internal_commands.ab2"
00043BBF <internal_commands.ab2@1504> INCLUDE "internal_commands.ab2"
00043BC0 <internal_commands.ab2@1505> INCLUDE "internal_commands.ab2"
00043BC2 <internal_commands.ab2@1508> INCLUDE "internal_commands.ab2"
00043BC6 <internal_commands.ab2@1509> INCLUDE "internal_commands.ab2"
00043BC8 <internal_commands.ab2@1510> INCLUDE "internal_commands.ab2"
00043BCA <internal_commands.ab2@1511> INCLUDE "internal_commands.ab2"
00043BCE <internal_commands.ab2@1512> INCLUDE "internal_commands.ab2"
00043BD0 <internal_commands.ab2@1513> INCLUDE "internal_commands.ab2"
00043BD4 <internal_commands.ab2@1517> INCLUDE "internal_commands.ab2"
00043BD6 <internal_commands.ab2@1518> INCLUDE "internal_commands.ab2"
00043BDB <internal_commands.ab2@1519> INCLUDE "internal_commands.ab2"
00043BDC <internal_commands.ab2@1520> INCLUDE "internal_commands.ab2"
00043BDE <internal_commands.ab2@1523> INCLUDE "internal_commands.ab2"
00043BE2 <internal_commands.ab2@1524> INCLUDE "internal_commands.ab2"
00043BE4 <internal_commands.ab2@1525> INCLUDE "internal_commands.ab2"
00043BE6 <internal_commands.ab2@1526> INCLUDE "internal_commands.ab2"
00043BEA <internal_commands.ab2@1527> INCLUDE "internal_commands.ab2"
00043BEC <internal_commands.ab2@1528> INCLUDE "internal_commands.ab2"
00043BF0 <internal_commands.ab2@1532> INCLUDE "internal_commands.ab2"
00043BF2 <internal_commands.ab2@1533> INCLUDE "internal_commands.ab2"
00043BF7 <internal_commands.ab2@1534> INCLUDE "internal_commands.ab2"
00043BF8 <internal_commands.ab2@1535> INCLUDE "internal_commands.ab2"
00043BFA <internal_commands.ab2@1538> INCLUDE "internal_commands.ab2"
00043BFE <internal_commands.ab2@1539> INCLUDE "internal_commands.ab2"
00043C00 <internal_commands.ab2@1540> INCLUDE "internal_commands.ab2"
00043C02 <internal_commands.ab2@1541> INCLUDE "internal_commands.ab2"
00043C06 <internal_commands.ab2@1542> INCLUDE "internal_commands.ab2"
00043C08 <internal_commands.ab2@1543> INCLUDE "internal_commands.ab2"
00043C0C <internal_commands.ab2@1547> INCLUDE "internal_commands.ab2"
00043C0E <internal_commands.ab2@1548> INCLUDE "internal_commands.ab2"
00043C12 <internal_commands.ab2@1549> INCLUDE "internal_commands.ab2"
00043C13 <internal_commands.ab2@1550> INCLUDE "internal_commands.ab2"
00043C14 <internal_commands.ab2@1551> INCLUDE "internal_commands.ab2"
00043C16 <internal_commands.ab2@1553> INCLUDE "internal_commands.ab2"
00043C1A <internal_commands.ab2@1554> INCLUDE "internal_commands.ab2"
00043C1C <internal_commands.ab2@1555> INCLUDE "internal_commands.ab2"
00043C1E <internal_commands.ab2@1556> INCLUDE "internal_commands.ab2"
00043C22 <internal_commands.ab2@1557> INCLUDE "internal_commands.ab2"
00043C24 <internal_commands.ab2@1558> INCLUDE "internal_commands.ab2"
00043C28 <internal_commands.ab2@1562> INCLUDE "internal_commands.ab2"
00043C2A <internal_commands.ab2@1563> INCLUDE "internal_commands.ab2"
00043C2F <internal_commands.ab2@1564> INCLUDE "internal_commands.ab2"
00043C30 <internal_commands.ab2@1565> INCLUDE "internal_commands.ab2"
00043C32 <internal_commands.ab2@1568> INCLUDE "internal_commands.ab2"
00043C36 <internal_commands.ab2@1569> INCLUDE "internal_commands.ab2"
00043C38 <internal_commands.ab2@1570> INCLUDE "internal_commands.ab2"
00043C3A <internal_commands.ab2@1571> INCLUDE "internal_commands.ab2"
00043C3E <internal_commands.ab2@1572> INCLUDE "internal_commands.ab2"
00043C40 <internal_commands.ab2@1573> INCLUDE "internal_commands.ab2"
00043C44 <internal_commands.ab2@1577> INCLUDE "internal_commands.ab2"
00043C46 <internal_commands.ab2@1578> INCLUDE "internal_commands.ab2"
00043C4A <internal_commands.ab2@1579> INCLUDE "internal_commands.ab2"
00043C4B <internal_commands.ab2@1580> INCLUDE "internal_commands.ab2"
00043C4C <internal_commands.ab2@1581> INCLUDE "internal_commands.ab2"
00043C4E <internal_commands.ab2@1583> INCLUDE "internal_commands.ab2"
00043C52 <internal_commands.ab2@1584> INCLUDE "internal_commands.ab2"
00043C54 <internal_commands.ab2@1585> INCLUDE "internal_commands.ab2"
00043C56 <internal_commands.ab2@1586> INCLUDE "internal_commands.ab2"
00043C5A <internal_commands.ab2@1587> INCLUDE "internal_commands.ab2"
00043C5C <internal_commands.ab2@1588> INCLUDE "internal_commands.ab2"
00043C60 <internal_commands.ab2@1592> INCLUDE "internal_commands.ab2"
00043C62 <internal_commands.ab2@1593> INCLUDE "internal_commands.ab2"
00043C66 <internal_commands.ab2@1594> INCLUDE "internal_commands.ab2"
00043C67 <internal_commands.ab2@1595> INCLUDE "internal_commands.ab2"
00043C68 <internal_commands.ab2@1596> INCLUDE "internal_commands.ab2"
00043C6A <internal_commands.ab2@1598> INCLUDE "internal_commands.ab2"
00043C6E <internal_commands.ab2@1599> INCLUDE "internal_commands.ab2"
00043C70 <internal_commands.ab2@1600> INCLUDE "internal_commands.ab2"
00043C72 <internal_commands.ab2@1601> INCLUDE "internal_commands.ab2"
00043C76 <internal_commands.ab2@1602> INCLUDE "internal_commands.ab2"
00043C78 <internal_commands.ab2@1603> INCLUDE "internal_commands.ab2"
00043C7C <internal_commands.ab2@1607> INCLUDE "internal_commands.ab2"
00043C7E <internal_commands.ab2@1608> INCLUDE "internal_commands.ab2"
00043C81 <internal_commands.ab2@1609> INCLUDE "internal_commands.ab2"
00043C82 <internal_commands.ab2@1610> INCLUDE "internal_commands.ab2"
00043C84 <internal_commands.ab2@1613> INCLUDE "internal_commands.ab2"
00043C88 <internal_commands.ab2@1614> INCLUDE "internal_commands.ab2"
00043C8A <internal_commands.ab2@1615> INCLUDE "internal_commands.ab2"
00043C8C <internal_commands.ab2@1616> INCLUDE "internal_commands.ab2"
00043C90 <internal_commands.ab2@1617> INCLUDE "internal_commands.ab2"
00043C92 <internal_commands.ab2@1618> INCLUDE "internal_commands.ab2"
00043C96 <internal_commands.ab2@1622> INCLUDE "internal_commands.ab2"
00043C98 <internal_commands.ab2@1623> INCLUDE "internal_commands.ab2"
00043C9C <internal_commands.ab2@1624> INCLUDE "internal_commands.ab2"
00043C9D <internal_commands.ab2@1625> INCLUDE "internal_commands.ab2"
00043C9E <internal_commands.ab2@1626> INCLUDE "internal_commands.ab2"
00043CA0 <internal_commands.ab2@1628> INCLUDE "internal_commands.ab2"
00043CA4 <internal_commands.ab2@1629> INCLUDE "internal_commands.ab2"
00043CA6 <internal_commands.ab2@1630> INCLUDE "internal_commands.ab2"
00043CA8 <internal_commands.ab2@1631> INCLUDE "internal_commands.ab2"
00043CAC <internal_commands.ab2@1632> INCLUDE "internal_commands.ab2"
00043CAE <internal_commands.ab2@1633> INCLUDE "internal_commands.ab2"
00043CB2 <internal_commands.ab2@1637> INCLUDE "internal_commands.ab2"
00043CB4 <internal_commands.ab2@1638> INCLUDE "internal_commands.ab2"
00043CB8 <internal_commands.ab2@1639> INCLUDE "internal_commands.ab2"
00043CB9 <internal_commands.ab2@1640> INCLUDE "internal_commands.ab2"
00043CBA <internal_commands.ab2@1641> INCLUDE "internal_commands.ab2"
00043CBC <internal_commands.ab2@1643> INCLUDE "internal_commands.ab2"
00043CC0 <internal_commands.ab2@1644> INCLUDE "internal_commands.ab2"
00043CC2 <internal_commands.ab2@1645> INCLUDE "internal_commands.ab2"
00043CC4 <internal_commands.ab2@1646> INCLUDE "internal_commands.ab2"
00043CC8 <internal_commands.ab2@1647> INCLUDE "internal_commands.ab2"
00043CCA <internal_commands.ab2@1648> INCLUDE "internal_commands.ab2"
00043CCE <internal_commands.ab2@1652> INCLUDE "internal_commands.ab2"
00043CD0 <internal_commands.ab2@1653> INCLUDE "internal_commands.ab2"
00043CD6 <internal_commands.ab2@1654> INCLUDE "internal_commands.ab2"
00043CD7 <internal_commands.ab2@1655> INCLUDE "internal_commands.ab2"
00043CD8 <internal_commands.ab2@1656> INCLUDE "internal_commands.ab2"
00043CDA <internal_commands.ab2@1658> INCLUDE "internal_commands.ab2"
00043CDE <internal_commands.ab2@1659> INCLUDE "internal_commands.ab2"
00043CE0 <internal_commands.ab2@1660> INCLUDE "internal_commands.ab2"
00043CE2 <internal_commands.ab2@1661> INCLUDE "internal_commands.ab2"
00043CE6 <internal_commands.ab2@1662> INCLUDE "internal_commands.ab2"
00043CE8 <internal_commands.ab2@1663> INCLUDE "internal_commands.ab2"
00043CEC <internal_commands.ab2@1667> INCLUDE "internal_commands.ab2"
00043CEE <internal_commands.ab2@1668> INCLUDE "internal_commands.ab2"
00043CF2 <internal_commands.ab2@1669> INCLUDE "internal_commands.ab2"
00043CF3 <internal_commands.ab2@1670> INCLUDE "internal_commands.ab2"
00043CF4 <internal_commands.ab2@1671> INCLUDE "internal_commands.ab2"
00043CF6 <internal_commands.ab2@1673> INCLUDE "internal_commands.ab2"
00043CFA <internal_commands.ab2@1674> INCLUDE "internal_commands.ab2"
00043CFC <internal_commands.ab2@1675> INCLUDE "internal_commands.ab2"
00043CFE <internal_commands.ab2@1676> INCLUDE "internal_commands.ab2"
00043D02 <internal_commands.ab2@1677> INCLUDE "internal_commands.ab2"
00043D04 <internal_commands.ab2@1678> INCLUDE "internal_commands.ab2"
00043D08 <internal_commands.ab2@1682> INCLUDE "internal_commands.ab2"
00043D0A <internal_commands.ab2@1683> INCLUDE "internal_commands.ab2"
00043D0E <internal_commands.ab2@1684> INCLUDE "internal_commands.ab2"
00043D0F <internal_commands.ab2@1685> INCLUDE "internal_commands.ab2"
00043D10 <internal_commands.ab2@1686> INCLUDE "internal_commands.ab2"
00043D12 <internal_commands.ab2@1688> INCLUDE "internal_commands.ab2"
00043D16 <internal_commands.ab2@1689> INCLUDE "internal_commands.ab2"
00043D18 <internal_commands.ab2@1690> INCLUDE "internal_commands.ab2"
00043D1A <internal_commands.ab2@1691> INCLUDE "internal_commands.ab2"
00043D1E <internal_commands.ab2@1692> INCLUDE "internal_commands.ab2"
00043D20 <internal_commands.ab2@1693> INCLUDE "internal_commands.ab2"
00043D24 <internal_commands.ab2@1697> INCLUDE "internal_commands.ab2"
00043D26 <internal_commands.ab2@1698> INCLUDE "internal_commands.ab2"
00043D2B <internal_commands.ab2@1699> INCLUDE "internal_commands.ab2"
00043D2C <internal_commands.ab2@1700> INCLUDE "internal_commands.ab2"
00043D2E <internal_commands.ab2@1703> INCLUDE "internal_commands.ab2"
00043D32 <internal_commands.ab2@1704> INCLUDE "internal_commands.ab2"
00043D34 <internal_commands.ab2@1705> INCLUDE "internal_commands.ab2"
00043D36 <internal_commands.ab2@1706> INCLUDE "internal_commands.ab2"
00043D3A <internal_commands.ab2@1707> INCLUDE "internal_commands.ab2"
00043D3C <internal_commands.ab2@1708> INCLUDE "internal_commands.ab2"
00043D40 <internal_commands.ab2@1712> INCLUDE "internal_commands.ab2"
00043D42 <internal_commands.ab2@1713> INCLUDE "internal_commands.ab2"
00043D47 <internal_commands.ab2@1714> INCLUDE "internal_commands.ab2"
00043D48 <internal_commands.ab2@1715> INCLUDE "internal_commands.ab2"
00043D4A <internal_commands.ab2@1718> INCLUDE "internal_commands.ab2"
00043D4E <internal_commands.ab2@1719> INCLUDE "internal_commands.ab2"
00043D50 <internal_commands.ab2@1720> INCLUDE "internal_commands.ab2"
00043D52 <internal_commands.ab2@1721> INCLUDE "internal_commands.ab2"
00043D56 <internal_commands.ab2@1722> INCLUDE "internal_commands.ab2"
00043D58 <internal_commands.ab2@1723> INCLUDE "internal_commands.ab2"
00043D5C <internal_commands.ab2@1727> INCLUDE "internal_commands.ab2"
00043D5E <internal_commands.ab2@1728> INCLUDE "internal_commands.ab2"
00043D62 <internal_commands.ab2@1729> INCLUDE "internal_commands.ab2"
00043D63 <internal_commands.ab2@1730> INCLUDE "internal_commands.ab2"
00043D64 <internal_commands.ab2@1731> INCLUDE "internal_commands.ab2"
00043D66 <internal_commands.ab2@1733> INCLUDE "internal_commands.ab2"
00043D6A <internal_commands.ab2@1734> INCLUDE "internal_commands.ab2"
00043D6C <internal_commands.ab2@1735> INCLUDE "internal_commands.ab2"
00043D6E <internal_commands.ab2@1736> INCLUDE "internal_commands.ab2"
00043D72 <internal_commands.ab2@1737> INCLUDE "internal_commands.ab2"
00043D74 <internal_commands.ab2@1738> INCLUDE "internal_commands.ab2"
00043D78 <internal_commands.ab2@1742> INCLUDE "internal_commands.ab2"
00043D7A <internal_commands.ab2@1743> INCLUDE "internal_commands.ab2"
00043D7E <internal_commands.ab2@1744> INCLUDE "internal_commands.ab2"
00043D7F <internal_commands.ab2@1745> INCLUDE "internal_commands.ab2"
00043D80 <internal_commands.ab2@1746> INCLUDE "internal_commands.ab2"
00043D82 <internal_commands.ab2@1748> INCLUDE "internal_commands.ab2"
00043D86 <internal_commands.ab2@1749> INCLUDE "internal_commands.ab2"
00043D88 <internal_commands.ab2@1750> INCLUDE "internal_commands.ab2"
00043D8A <internal_commands.ab2@1751> INCLUDE "internal_commands.ab2"
00043D8E <internal_commands.ab2@1752> INCLUDE "internal_commands.ab2"
00043D90 <internal_commands.ab2@1753> INCLUDE "internal_commands.ab2"
00043D94 <internal_commands.ab2@1757> INCLUDE "internal_commands.ab2"
00043D96 <internal_commands.ab2@1758> INCLUDE "internal_commands.ab2"
00043D9A <internal_commands.ab2@1759> INCLUDE "internal_commands.ab2"
00043D9B <internal_commands.ab2@1760> INCLUDE "internal_commands.ab2"
00043D9C <internal_commands.ab2@1761> INCLUDE "internal_commands.ab2"
00043D9E <internal_commands.ab2@1763> INCLUDE "internal_commands.ab2"
00043DA2 <internal_commands.ab2@1764> INCLUDE "internal_commands.ab2"
00043DA4 <internal_commands.ab2@1765> INCLUDE "internal_commands.ab2"
00043DA6 <internal_commands.ab2@1766> INCLUDE "internal_commands.ab2"
00043DAA <internal_commands.ab2@1767> INCLUDE "internal_commands.ab2"
00043DAC <internal_commands.ab2@1768> INCLUDE "internal_commands.ab2"
00043DB0 <internal_commands.ab2@1772> INCLUDE "internal_commands.ab2"
00043DB2 <internal_commands.ab2@1773> INCLUDE "internal_commands.ab2"
00043DB7 <internal_commands.ab2@1774> INCLUDE "internal_commands.ab2"
00043DB8 <internal_commands.ab2@1775> INCLUDE "internal_commands.ab2"
00043DBA <internal_commands.ab2@1778> INCLUDE "internal_commands.ab2"
00043DBE <internal_commands.ab2@1779> INCLUDE "internal_commands.ab2"
00043DC0 <internal_commands.ab2@1780> INCLUDE "internal_commands.ab2"
00043DC2 <internal_commands.ab2@1781> INCLUDE "internal_commands.ab2"
00043DC6 <internal_commands.ab2@1782> INCLUDE "internal_commands.ab2"
00043DC8 <internal_commands.ab2@1783> INCLUDE "internal_commands.ab2"
00043DCC <internal_commands.ab2@1787> INCLUDE "internal_commands.ab2"
00043DCE <internal_commands.ab2@1788> INCLUDE "internal_commands.ab2"
00043DD2 <internal_commands.ab2@1789> INCLUDE "internal_commands.ab2"
00043DD3 <internal_commands.ab2@1790> INCLUDE "internal_commands.ab2"
00043DD4 <internal_commands.ab2@1791> INCLUDE "internal_commands.ab2"
00043DD6 <internal_commands.ab2@1793> INCLUDE "internal_commands.ab2"
00043DDA <internal_commands.ab2@1794> INCLUDE "internal_commands.ab2"
00043DDC <internal_commands.ab2@1795> INCLUDE "internal_commands.ab2"
00043DDE <internal_commands.ab2@1796> INCLUDE "internal_commands.ab2"
00043DE2 <internal_commands.ab2@1797> INCLUDE "internal_commands.ab2"
00043DE4 <internal_commands.ab2@1798> INCLUDE "internal_commands.ab2"
00043DE8 <internal_commands.ab2@1802> INCLUDE "internal_commands.ab2"
00043DEA <internal_commands.ab2@1803> INCLUDE "internal_commands.ab2"
00043DEE <internal_commands.ab2@1804> INCLUDE "internal_commands.ab2"
00043DEF <internal_commands.ab2@1805> INCLUDE "internal_commands.ab2"
00043DF0 <internal_commands.ab2@1806> INCLUDE "internal_commands.ab2"
00043DF2 <internal_commands.ab2@1808> INCLUDE "internal_commands.ab2"
00043DF6 <internal_commands.ab2@1809> INCLUDE "internal_commands.ab2"
00043DF8 <internal_commands.ab2@1810> INCLUDE "internal_commands.ab2"
00043DFA <internal_commands.ab2@1811> INCLUDE "internal_commands.ab2"
00043DFE <internal_commands.ab2@1812> INCLUDE "internal_commands.ab2"
00043E00 <internal_commands.ab2@1813> INCLUDE "internal_commands.ab2"
00043E04 <internal_commands.ab2@1817> INCLUDE "internal_commands.ab2"
00043E06 <internal_commands.ab2@1818> INCLUDE "internal_commands.ab2"
00043E0A <internal_commands.ab2@1819> INCLUDE "internal_commands.ab2"
00043E0B <internal_commands.ab2@1820> INCLUDE "internal_commands.ab2"
00043E0C <internal_commands.ab2@1821> INCLUDE "internal_commands.ab2"
00043E0E <internal_commands.ab2@1823> INCLUDE "internal_commands.ab2"
00043E12 <internal_commands.ab2@1824> INCLUDE "internal_commands.ab2"
00043E14 <internal_commands.ab2@1825> INCLUDE "internal_commands.ab2"
00043E16 <internal_commands.ab2@1826> INCLUDE "internal_commands.ab2"
00043E1A <internal_commands.ab2@1827> INCLUDE "internal_commands.ab2"
00043E1C <internal_commands.ab2@1828> INCLUDE "internal_commands.ab2"
00043E20 <internal_commands.ab2@1832> INCLUDE "internal_commands.ab2"
00043E22 <internal_commands.ab2@1833> INCLUDE "internal_commands.ab2"
00043E26 <internal_commands.ab2@1834> INCLUDE "internal_commands.ab2"
00043E27 <internal_commands.ab2@1835> INCLUDE "internal_commands.ab2"
00043E28 <internal_commands.ab2@1836> INCLUDE "internal_commands.ab2"
00043E2A <internal_commands.ab2@1838> INCLUDE "internal_commands.ab2"
00043E2E <internal_commands.ab2@1839> INCLUDE "internal_commands.ab2"
00043E30 <internal_commands.ab2@1840> INCLUDE "internal_commands.ab2"
00043E32 <internal_commands.ab2@1841> INCLUDE "internal_commands.ab2"
00043E36 <internal_commands.ab2@1842> INCLUDE "internal_commands.ab2"
00043E38 <internal_commands.ab2@1843> INCLUDE "internal_commands.ab2"
00043E3C <internal_commands.ab2@1847> INCLUDE "internal_commands.ab2"
00043E3E <internal_commands.ab2@1848> INCLUDE "internal_commands.ab2"
00043E42 <internal_commands.ab2@1849> INCLUDE "internal_commands.ab2"
00043E43 <internal_commands.ab2@1850> INCLUDE "internal_commands.ab2"
00043E44 <internal_commands.ab2@1851> INCLUDE "internal_commands.ab2"
00043E46 <internal_commands.ab2@1853> INCLUDE "internal_commands.ab2"
00043E4A <internal_commands.ab2@1854> INCLUDE "internal_commands.ab2"
00043E4C <internal_commands.ab2@1855> INCLUDE "internal_commands.ab2"
00043E4E <internal_commands.ab2@1856> INCLUDE "internal_commands.ab2"
00043E52 <internal_commands.ab2@1857> INCLUDE "internal_commands.ab2"
00043E54 <internal_commands.ab2@1858> INCLUDE "internal_commands.ab2"
00043E58 <internal_commands.ab2@1862> INCLUDE "internal_commands.ab2"
00043E5A <internal_commands.ab2@1863> INCLUDE "internal_commands.ab2"
00043E5E <internal_commands.ab2@1864> INCLUDE "internal_commands.ab2"
00043E5F <internal_commands.ab2@1865> INCLUDE "internal_commands.ab2"
00043E60 <internal_commands.ab2@1866> INCLUDE "internal_commands.ab2"
00043E62 <internal_commands.ab2@1868> INCLUDE "internal_commands.ab2"
00043E66 <internal_commands.ab2@1869> INCLUDE "internal_commands.ab2"
00043E68 <internal_commands.ab2@1870> INCLUDE "internal_commands.ab2"
00043E6A <internal_commands.ab2@1871> INCLUDE "internal_commands.ab2"
00043E6E <internal_commands.ab2@1872> INCLUDE "internal_commands.ab2"
00043E70 <internal_commands.ab2@1873> INCLUDE "internal_commands.ab2"
00043E74 <internal_commands.ab2@1877> INCLUDE "internal_commands.ab2"
00043E76 <internal_commands.ab2@1878> INCLUDE "internal_commands.ab2"
00043E7A <internal_commands.ab2@1879> INCLUDE "internal_commands.ab2"
00043E7B <internal_commands.ab2@1880> INCLUDE "internal_commands.ab2"
00043E7C <internal_commands.ab2@1881> INCLUDE "internal_commands.ab2"
00043E7E <internal_commands.ab2@1883> INCLUDE "internal_commands.ab2"
00043E82 <internal_commands.ab2@1884> INCLUDE "internal_commands.ab2"
00043E84 <internal_commands.ab2@1885> INCLUDE "internal_commands.ab2"
00043E86 <internal_commands.ab2@1886> INCLUDE "internal_commands.ab2"
00043E8A <internal_commands.ab2@1887> INCLUDE "internal_commands.ab2"
00043E8C <internal_commands.ab2@1888> INCLUDE "internal_commands.ab2"
00043E90 <internal_commands.ab2@1892> INCLUDE "internal_commands.ab2"
00043E92 <internal_commands.ab2@1893> INCLUDE "internal_commands.ab2"
00043E96 <internal_commands.ab2@1894> INCLUDE "internal_commands.ab2"
00043E97 <internal_commands.ab2@1895> INCLUDE "internal_commands.ab2"
00043E98 <internal_commands.ab2@1896> INCLUDE "internal_commands.ab2"
00043E9A <internal_commands.ab2@1898> INCLUDE "internal_commands.ab2"
00043E9E <internal_commands.ab2@1899> INCLUDE "internal_commands.ab2"
00043EA0 <internal_commands.ab2@1900> INCLUDE "internal_commands.ab2"
00043EA2 <internal_commands.ab2@1901> INCLUDE "internal_commands.ab2"
00043EA6 <internal_commands.ab2@1902> INCLUDE "internal_commands.ab2"
00043EA8 <internal_commands.ab2@1903> INCLUDE "internal_commands.ab2"
00043EAC <internal_commands.ab2@1907> INCLUDE "internal_commands.ab2"
00043EAE <internal_commands.ab2@1908> INCLUDE "internal_commands.ab2"
00043EB2 <internal_commands.ab2@1909> INCLUDE "internal_commands.ab2"
00043EB3 <internal_commands.ab2@1910> INCLUDE "internal_commands.ab2"
00043EB4 <internal_commands.ab2@1911> INCLUDE "internal_commands.ab2"
00043EB6 <internal_commands.ab2@1913> INCLUDE "internal_commands.ab2"
00043EBA <internal_commands.ab2@1914> INCLUDE "internal_commands.ab2"
00043EBC <internal_commands.ab2@1915> INCLUDE "internal_commands.ab2"
00043EBE <internal_commands.ab2@1916> INCLUDE "internal_commands.ab2"
00043EC2 <internal_commands.ab2@1917> INCLUDE "internal_commands.ab2"
00043EC4 <internal_commands.ab2@1918> INCLUDE "internal_commands.ab2"
00043EC8 <internal_commands.ab2@1922> INCLUDE "internal_commands.ab2"
00043ECA <internal_commands.ab2@1923> INCLUDE "internal_commands.ab2"
00043ECE <internal_commands.ab2@1924> INCLUDE "internal_commands.ab2"
00043ECF <internal_commands.ab2@1925> INCLUDE "internal_commands.ab2"
00043ED0 <internal_commands.ab2@1926> INCLUDE "internal_commands.ab2"
00043ED2 <internal_commands.ab2@1928> INCLUDE "internal_commands.ab2"
00043ED6 <internal_commands.ab2@1929> INCLUDE "internal_commands.ab2"
00043ED8 <internal_commands.ab2@1930> INCLUDE "internal_commands.ab2"
00043EDA <internal_commands.ab2@1931> INCLUDE "internal_commands.ab2"
00043EDE <internal_commands.ab2@1932> INCLUDE "internal_commands.ab2"
00043EE0 <internal_commands.ab2@1933> INCLUDE "internal_commands.ab2"
00043EE4 <internal_commands.ab2@1937> INCLUDE "internal_commands.ab2"
00043EE6 <internal_commands.ab2@1938> INCLUDE "internal_commands.ab2"
00043EEA <internal_commands.ab2@1939> INCLUDE "internal_commands.ab2"
00043EEB <internal_commands.ab2@1940> INCLUDE "internal_commands.ab2"
00043EEC <internal_commands.ab2@1941> INCLUDE "internal_commands.ab2"
00043EEE <internal_commands.ab2@1943> INCLUDE "internal_commands.ab2"
00043EF2 <internal_commands.ab2@1944> INCLUDE "internal_commands.ab2"
00043EF4 <internal_commands.ab2@1945> INCLUDE "internal_commands.ab2"
00043EF6 <internal_commands.ab2@1946> INCLUDE "internal_commands.ab2"
00043EFA <internal_commands.ab2@1947> INCLUDE "internal_commands.ab2"
00043EFC <internal_commands.ab2@1948> INCLUDE "internal_commands.ab2"
00043F00 <internal_commands.ab2@1952> INCLUDE "internal_commands.ab2"
00043F02 <internal_commands.ab2@1953> INCLUDE "internal_commands.ab2"
00043F06 <internal_commands.ab2@1954> INCLUDE "internal_commands.ab2"
00043F07 <internal_commands.ab2@1955> INCLUDE "internal_commands.ab2"
00043F08 <internal_commands.ab2@1956> INCLUDE "internal_commands.ab2"
00043F0A <internal_commands.ab2@1958> INCLUDE "internal_commands.ab2"
00043F0E <internal_commands.ab2@1959> INCLUDE "internal_commands.ab2"
00043F10 <internal_commands.ab2@1960> INCLUDE "internal_commands.ab2"
00043F12 <internal_commands.ab2@1961> INCLUDE "internal_commands.ab2"
00043F16 <internal_commands.ab2@1962> INCLUDE "internal_commands.ab2"
00043F18 <internal_commands.ab2@1963> INCLUDE "internal_commands.ab2"
00043F1C <internal_commands.ab2@1967> INCLUDE "internal_commands.ab2"
00043F1E <internal_commands.ab2@1968> INCLUDE "internal_commands.ab2"
00043F22 <internal_commands.ab2@1969> INCLUDE "internal_commands.ab2"
00043F23 <internal_commands.ab2@1970> INCLUDE "internal_commands.ab2"
00043F24 <internal_commands.ab2@1971> INCLUDE "internal_commands.ab2"
00043F26 <internal_commands.ab2@1973> INCLUDE "internal_commands.ab2"
00043F2A <internal_commands.ab2@1974> INCLUDE "internal_commands.ab2"
00043F2C <internal_commands.ab2@1975> INCLUDE "internal_commands.ab2"
00043F2E <internal_commands.ab2@1976> INCLUDE "internal_commands.ab2"
00043F32 <internal_commands.ab2@1977> INCLUDE "internal_commands.ab2"
00043F34 <internal_commands.ab2@1978> INCLUDE "internal_commands.ab2"
00043F38 <internal_commands.ab2@1982> INCLUDE "internal_commands.ab2"
00043F3A <internal_commands.ab2@1983> INCLUDE "internal_commands.ab2"
00043F3E <internal_commands.ab2@1984> INCLUDE "internal_commands.ab2"
00043F3F <internal_commands.ab2@1985> INCLUDE "internal_commands.ab2"
00043F40 <internal_commands.ab2@1986> INCLUDE "internal_commands.ab2"
00043F42 <internal_commands.ab2@1988> INCLUDE "internal_commands.ab2"
00043F46 <internal_commands.ab2@1989> INCLUDE "internal_commands.ab2"
00043F48 <internal_commands.ab2@1990> INCLUDE "internal_commands.ab2"
00043F4A <internal_commands.ab2@1991> INCLUDE "internal_commands.ab2"
00043F4E <internal_commands.ab2@1992> INCLUDE "internal_commands.ab2"
00043F50 <internal_commands.ab2@1993> INCLUDE "internal_commands.ab2"
00043F54 <internal_commands.ab2@1997> INCLUDE "internal_commands.ab2"
00043F56 <internal_commands.ab2@1998> INCLUDE "internal_commands.ab2"
00043F59 <internal_commands.ab2@1999> INCLUDE "internal_commands.ab2"
00043F5A <internal_commands.ab2@2000> INCLUDE "internal_commands.ab2"
00043F5C <internal_commands.ab2@2003> INCLUDE "internal_commands.ab2"
00043F60 <internal_commands.ab2@2004> INCLUDE "internal_commands.ab2"
00043F62 <internal_commands.ab2@2005> INCLUDE "internal_commands.ab2"
00043F64 <internal_commands.ab2@2006> INCLUDE "internal_commands.ab2"
00043F68 <internal_commands.ab2@2007> INCLUDE "internal_commands.ab2"
00043F6A <internal_commands.ab2@2008> INCLUDE "internal_commands.ab2"
00043F6E <internal_commands.ab2@2012> INCLUDE "internal_commands.ab2"
00043F70 <internal_commands.ab2@2013> INCLUDE "internal_commands.ab2"
00043F73 <internal_commands.ab2@2014> INCLUDE "internal_commands.ab2"
00043F74 <internal_commands.ab2@2015> INCLUDE "internal_commands.ab2"
00043F76 <internal_commands.ab2@2018> INCLUDE "internal_commands.ab2"
00043F7A <internal_commands.ab2@2019> INCLUDE "internal_commands.ab2"
00043F7C <internal_commands.ab2@2020> INCLUDE "internal_commands.ab2"
00043F7E <internal_commands.ab2@2021> INCLUDE "internal_commands.ab2"
00043F82 <internal_commands.ab2@2022> INCLUDE "internal_commands.ab2"
00043F84 <internal_commands.ab2@2023> INCLUDE "internal_commands.ab2"
00043F88 <internal_commands.ab2@2027> INCLUDE "internal_commands.ab2"
00043F8A <internal_commands.ab2@2028> INCLUDE "internal_commands.ab2"
00043F8F <internal_commands.ab2@2029> INCLUDE "internal_commands.ab2"
00043F90 <internal_commands.ab2@2030> INCLUDE "internal_commands.ab2"
00043F92 <internal_commands.ab2@2033> INCLUDE "internal_commands.ab2"
00043F96 <internal_commands.ab2@2034> INCLUDE "internal_commands.ab2"
00043F98 <internal_commands.ab2@2035> INCLUDE "internal_commands.ab2"
00043F9A <internal_commands.ab2@2036> INCLUDE "internal_commands.ab2"
00043F9E <internal_commands.ab2@2037> INCLUDE "internal_commands.ab2"
00043FA0 <internal_commands.ab2@2038> INCLUDE "internal_commands.ab2"
00043FA4 <internal_commands.ab2@2042> INCLUDE "internal_commands.ab2"
00043FA6 <internal_commands.ab2@2043> INCLUDE "internal_commands.ab2"
00043FAA <internal_commands.ab2@2044> INCLUDE "internal_commands.ab2"
00043FAB <internal_commands.ab2@2045> INCLUDE "internal_commands.ab2"
00043FAC <internal_commands.ab2@2046> INCLUDE "internal_commands.ab2"
00043FAE <internal_commands.ab2@2048> INCLUDE "internal_commands.ab2"
00043FB2 <internal_commands.ab2@2049> INCLUDE "internal_commands.ab2"
00043FB4 <internal_commands.ab2@2050> INCLUDE "internal_commands.ab2"
00043FB6 <internal_commands.ab2@2051> INCLUDE "internal_commands.ab2"
00043FBA <internal_commands.ab2@2052> INCLUDE "internal_commands.ab2"
00043FBC <internal_commands.ab2@2053> INCLUDE "internal_commands.ab2"
00043FC0 <internal_commands.ab2@2057> INCLUDE "internal_commands.ab2"
00043FC2 <internal_commands.ab2@2058> INCLUDE "internal_commands.ab2"
00043FC7 <internal_commands.ab2@2059> INCLUDE "internal_commands.ab2"
00043FC8 <internal_commands.ab2@2060> INCLUDE "internal_commands.ab2"
00043FCA <internal_commands.ab2@2063> INCLUDE "internal_commands.ab2"
00043FCE <internal_commands.ab2@2064> INCLUDE "internal_commands.ab2"
00043FD0 <internal_commands.ab2@2065> INCLUDE "internal_commands.ab2"
00043FD2 <internal_commands.ab2@2066> INCLUDE "internal_commands.ab2"
00043FD6 <internal_commands.ab2@2067> INCLUDE "internal_commands.ab2"
00043FD8 <internal_commands.ab2@2068> INCLUDE "internal_commands.ab2"
00043FDC <internal_commands.ab2@2072> INCLUDE "internal_commands.ab2"
00043FDE <internal_commands.ab2@2073> INCLUDE "internal_commands.ab2"
00043FE3 <internal_commands.ab2@2074> INCLUDE "internal_commands.ab2"
00043FE4 <internal_commands.ab2@2075> INCLUDE "internal_commands.ab2"
00043FE6 <internal_commands.ab2@2078> INCLUDE "internal_commands.ab2"
00043FEA <internal_commands.ab2@2079> INCLUDE "internal_commands.ab2"
00043FEC <internal_commands.ab2@2080> INCLUDE "internal_commands.ab2"
00043FEE <internal_commands.ab2@2081> INCLUDE "internal_commands.ab2"
00043FF2 <internal_commands.ab2@2082> INCLUDE "internal_commands.ab2"
00043FF4 <internal_commands.ab2@2083> INCLUDE "internal_commands.ab2"
00043FF8 <internal_commands.ab2@2087> INCLUDE "internal_commands.ab2"
00043FFA <internal_commands.ab2@2088> INCLUDE "internal_commands.ab2"
00043FFF <internal_commands.ab2@2089> INCLUDE "internal_commands.ab2"
00044000 <internal_commands.ab2@2090> INCLUDE "internal_commands.ab2"
00044002 <internal_commands.ab2@2093> INCLUDE "internal_commands.ab2"
00044006 <internal_commands.ab2@2094> INCLUDE "internal_commands.ab2"
00044008 <internal_commands.ab2@2095> INCLUDE "internal_commands.ab2"
0004400A <internal_commands.ab2@2096> INCLUDE "internal_commands.ab2"
0004400E <internal_commands.ab2@2097> INCLUDE "internal_commands.ab2"
00044010 <internal_commands.ab2@2098> INCLUDE "internal_commands.ab2"
00044014 <internal_commands.ab2@2102> INCLUDE "internal_commands.ab2"
00044016 <internal_commands.ab2@2103> INCLUDE "internal_commands.ab2"
0004401B <internal_commands.ab2@2104> INCLUDE "internal_commands.ab2"
0004401C <internal_commands.ab2@2105> INCLUDE "internal_commands.ab2"
0004401E <internal_commands.ab2@2108> INCLUDE "internal_commands.ab2"
00044022 <internal_commands.ab2@2109> INCLUDE "internal_commands.ab2"
00044024 <internal_commands.ab2@2110> INCLUDE "internal_commands.ab2"
00044026 <internal_commands.ab2@2111> INCLUDE "internal_commands.ab2"
0004402A <internal_commands.ab2@2112> INCLUDE "internal_commands.ab2"
0004402C <internal_commands.ab2@2113> INCLUDE "internal_commands.ab2"
00044030 <internal_commands.ab2@2117> INCLUDE "internal_commands.ab2"
00044032 <internal_commands.ab2@2118> INCLUDE "internal_commands.ab2"
00044037 <internal_commands.ab2@2119> INCLUDE "internal_commands.ab2"
00044038 <internal_commands.ab2@2120> INCLUDE "internal_commands.ab2"
0004403A <internal_commands.ab2@2123> INCLUDE "internal_commands.ab2"
0004403E <internal_commands.ab2@2124> INCLUDE "internal_commands.ab2"
00044040 <internal_commands.ab2@2125> INCLUDE "internal_commands.ab2"
00044042 <internal_commands.ab2@2126> INCLUDE "internal_commands.ab2"
00044046 <internal_commands.ab2@2127> INCLUDE "internal_commands.ab2"
00044048 <internal_commands.ab2@2128> INCLUDE "internal_commands.ab2"
0004404C <internal_commands.ab2@2132> INCLUDE "internal_commands.ab2"
0004404E <internal_commands.ab2@2133> INCLUDE "internal_commands.ab2"
00044052 <internal_commands.ab2@2134> INCLUDE "internal_commands.ab2"
00044053 <internal_commands.ab2@2135> INCLUDE "internal_commands.ab2"
00044054 <internal_commands.ab2@2136> INCLUDE "internal_commands.ab2"
00044056 <internal_commands.ab2@2138> INCLUDE "internal_commands.ab2"
0004405A <internal_commands.ab2@2139> INCLUDE "internal_commands.ab2"
0004405C <internal_commands.ab2@2140> INCLUDE "internal_commands.ab2"
0004405E <internal_commands.ab2@2141> INCLUDE "internal_commands.ab2"
00044062 <internal_commands.ab2@2142> INCLUDE "internal_commands.ab2"
00044064 <internal_commands.ab2@2143> INCLUDE "internal_commands.ab2"
00044068 <internal_commands.ab2@2147> INCLUDE "internal_commands.ab2"
0004406A <internal_commands.ab2@2148> INCLUDE "internal_commands.ab2"
0004406F <internal_commands.ab2@2149> INCLUDE "internal_commands.ab2"
00044070 <internal_commands.ab2@2150> INCLUDE "internal_commands.ab2"
00044072 <internal_commands.ab2@2153> INCLUDE "internal_commands.ab2"
00044076 <internal_commands.ab2@2154> INCLUDE "internal_commands.ab2"
00044078 <internal_commands.ab2@2155> INCLUDE "internal_commands.ab2"
0004407A <internal_commands.ab2@2156> INCLUDE "internal_commands.ab2"
0004407E <internal_commands.ab2@2157> INCLUDE "internal_commands.ab2"
00044080 <internal_commands.ab2@2158> INCLUDE "internal_commands.ab2"
00044084 <internal_commands.ab2@2162> INCLUDE "internal_commands.ab2"
00044086 <internal_commands.ab2@2163> INCLUDE "internal_commands.ab2"
0004408C <internal_commands.ab2@2164> INCLUDE "internal_commands.ab2"
0004408D <internal_commands.ab2@2165> INCLUDE "internal_commands.ab2"
0004408E <internal_commands.ab2@2166> INCLUDE "internal_commands.ab2"
00044090 <internal_commands.ab2@2168> INCLUDE "internal_commands.ab2"
00044094 <internal_commands.ab2@2169> INCLUDE "internal_commands.ab2"
00044096 <internal_commands.ab2@2170> INCLUDE "internal_commands.ab2"
00044098 <internal_commands.ab2@2171> INCLUDE "internal_commands.ab2"
0004409C <internal_commands.ab2@2172> INCLUDE "internal_commands.ab2"
0004409E <internal_commands.ab2@2173> INCLUDE "internal_commands.ab2"
000440A2 <internal_commands.ab2@2177> INCLUDE "internal_commands.ab2"
000440A4 <internal_commands.ab2@2178> INCLUDE "internal_commands.ab2"
000440A8 <internal_commands.ab2@2179> INCLUDE "internal_commands.ab2"
000440A9 <internal_commands.ab2@2180> INCLUDE "internal_commands.ab2"
000440AA <internal_commands.ab2@2181> INCLUDE "internal_commands.ab2"
000440AC <internal_commands.ab2@2183> INCLUDE "internal_commands.ab2"
000440B0 <internal_commands.ab2@2184> INCLUDE "internal_commands.ab2"
000440B2 <internal_commands.ab2@2185> INCLUDE "internal_commands.ab2"
000440B4 <internal_commands.ab2@2186> INCLUDE "internal_commands.ab2"
000440B8 <internal_commands.ab2@2187> INCLUDE "internal_commands.ab2"
000440BA <internal_commands.ab2@2188> INCLUDE "internal_commands.ab2"
000440BE <internal_commands.ab2@2192> INCLUDE "internal_commands.ab2"
000440C0 <internal_commands.ab2@2193> INCLUDE "internal_commands.ab2"
000440C5 <internal_commands.ab2@2194> INCLUDE "internal_commands.ab2"
000440C6 <internal_commands.ab2@2195> INCLUDE "internal_commands.ab2"
000440C8 <internal_commands.ab2@2198> INCLUDE "internal_commands.ab2"
000440CC <internal_commands.ab2@2199> INCLUDE "internal_commands.ab2"
000440CE <internal_commands.ab2@2200> INCLUDE "internal_commands.ab2"
000440D0 <internal_commands.ab2@2201> INCLUDE "internal_commands.ab2"
000440D4 <internal_commands.ab2@2202> INCLUDE "internal_commands.ab2"
000440D6 <internal_commands.ab2@2203> INCLUDE "internal_commands.ab2"
000440DA <internal_commands.ab2@2208> INCLUDE "internal_commands.ab2"
000440DC <internal_commands.ab2@2209> INCLUDE "internal_commands.ab2"
000440E3 <internal_commands.ab2@2210> INCLUDE "internal_commands.ab2"
000440E4 <internal_commands.ab2@2211> INCLUDE "internal_commands.ab2"
000440E6 <internal_commands.ab2@2230> INCLUDE "internal_commands.ab2"
000440E8 <internal_commands.ab2@2231> INCLUDE "internal_commands.ab2"
000440EA <internal_commands.ab2@2235> INCLUDE "internal_commands.ab2"
000440EC <internal_commands.ab2@2236> INCLUDE "internal_commands.ab2"
000440EE <internal_commands.ab2@2240> INCLUDE "internal_commands.ab2"
000440F0 <internal_commands.ab2@2241> INCLUDE "internal_commands.ab2"
000440F2 <internal_commands.ab2@2245> INCLUDE "internal_commands.ab2"
000440F4 <internal_commands.ab2@2246> INCLUDE "internal_commands.ab2"
000440F6 <internal_commands.ab2@2251> INCLUDE "internal_commands.ab2"
000440FA <internal_commands.ab2@2252> INCLUDE "internal_commands.ab2"
000440FC <internal_commands.ab2@2253> INCLUDE "internal_commands.ab2"
000440FE <internal_commands.ab2@2254> INCLUDE "internal_commands.ab2"
00044100 <internal_commands.ab2@2255> INCLUDE "internal_commands.ab2"
00044102 <internal_commands.ab2@2256> INCLUDE "internal_commands.ab2"
00044106 <internal_commands.ab2@2257> INCLUDE "internal_commands.ab2"
0004410C <internal_commands.ab2@2260> INCLUDE "internal_commands.ab2"
00044110 <internal_commands.ab2@2261> INCLUDE "internal_commands.ab2"
00044112 <internal_commands.ab2@2262> INCLUDE "internal_commands.ab2"
00044114 <internal_commands.ab2@2263> INCLUDE "internal_commands.ab2"
00044116 <internal_commands.ab2@2264> INCLUDE "internal_commands.ab2"
00044118 <internal_commands.ab2@2265> INCLUDE "internal_commands.ab2"
0004411A <internal_commands.ab2@2266> INCLUDE "internal_commands.ab2"
0004411C <internal_commands.ab2@2273> INCLUDE "internal_commands.ab2"
00044120 <internal_commands.ab2@2274> INCLUDE "internal_commands.ab2"
00044124 <internal_commands.ab2@2275> INCLUDE "internal_commands.ab2"
00044128 <internal_commands.ab2@2276> INCLUDE "internal_commands.ab2"
0004412C <internal_commands.ab2@2277> INCLUDE "internal_commands.ab2"
00044130 <internal_commands.ab2@2278> INCLUDE "internal_commands.ab2"
00044132 <internal_commands.ab2@2281> INCLUDE "internal_commands.ab2"
00044134 <internal_commands.ab2@2282> INCLUDE "internal_commands.ab2"
00044138 <internal_commands.ab2@2283> INCLUDE "internal_commands.ab2"
0004413C <internal_commands.ab2@2284> INCLUDE "internal_commands.ab2"
00044140 <internal_commands.ab2@2285> INCLUDE "internal_commands.ab2"
00044144 <internal_commands.ab2@2286> INCLUDE "internal_commands.ab2"
00044146 <internal_commands.ab2@2289> INCLUDE "internal_commands.ab2"
00044148 <internal_commands.ab2@2290> INCLUDE "internal_commands.ab2"
0004414C <internal_commands.ab2@2291> INCLUDE "internal_commands.ab2"
00044150 <internal_commands.ab2@2292> INCLUDE "internal_commands.ab2"
00044154 <internal_commands.ab2@2293> INCLUDE "internal_commands.ab2"
00044158 <internal_commands.ab2@2294> INCLUDE "internal_commands.ab2"
0004415A <internal_commands.ab2@2295> INCLUDE "internal_commands.ab2"
0004415C <internal_commands.ab2@2298> INCLUDE "internal_commands.ab2"
0004415E <internal_commands.ab2@2299> INCLUDE "internal_commands.ab2"
00044162 <internal_commands.ab2@2300> INCLUDE "internal_commands.ab2"
00044164 <internal_commands.ab2@2302> INCLUDE "internal_commands.ab2"
00044168 <internal_commands.ab2@2303> INCLUDE "internal_commands.ab2"
0004416A <internal_commands.ab2@2307> INCLUDE "internal_commands.ab2"
0004416E <internal_commands.ab2@2308> INCLUDE "internal_commands.ab2"
00044170 <internal_commands.ab2@2309> INCLUDE "internal_commands.ab2"
00044174 <internal_commands.ab2@2310> INCLUDE "internal_commands.ab2"
00044178 <internal_commands.ab2@2311> INCLUDE "internal_commands.ab2"
0004417C <internal_commands.ab2@2312> INCLUDE "internal_commands.ab2"
00044180 <internal_commands.ab2@2316> INCLUDE "internal_commands.ab2"
00044184 <internal_commands.ab2@2317> INCLUDE "internal_commands.ab2"
00044188 <internal_commands.ab2@2319> INCLUDE "internal_commands.ab2"
0004418C <internal_commands.ab2@2320> INCLUDE "internal_commands.ab2"
00044190 <internal_commands.ab2@2321> INCLUDE "internal_commands.ab2"
00044194 <internal_commands.ab2@2322> INCLUDE "internal_commands.ab2"
00044198 <internal_commands.ab2@2323> INCLUDE "internal_commands.ab2"
0004419C <internal_commands.ab2@2324> INCLUDE "internal_commands.ab2"
000441A0 <internal_commands.ab2@2325> INCLUDE "internal_commands.ab2"
000441A4 <internal_commands.ab2@2326> INCLUDE "internal_commands.ab2"
000441A8 <internal_commands.ab2@2328> INCLUDE "internal_commands.ab2"
000441AC <internal_commands.ab2@2331> INCLUDE "internal_commands.ab2"
000441B0 <internal_commands.ab2@2332> INCLUDE "internal_commands.ab2"
000441B4 <internal_commands.ab2@2334> INCLUDE "internal_commands.ab2"
000441B8 <internal_commands.ab2@2335> INCLUDE "internal_commands.ab2"
000441BC <internal_commands.ab2@2336> INCLUDE "internal_commands.ab2"
000441C0 <internal_commands.ab2@2337> INCLUDE "internal_commands.ab2"
000441C4 <internal_commands.ab2@2338> INCLUDE "internal_commands.ab2"
000441C8 <internal_commands.ab2@2339> INCLUDE "internal_commands.ab2"
000441CC <internal_commands.ab2@2340> INCLUDE "internal_commands.ab2"
000441D0 <internal_commands.ab2@2341> INCLUDE "internal_commands.ab2"
000441D4 <internal_commands.ab2@2343> INCLUDE "internal_commands.ab2"
000441D8 <internal_commands.ab2@2346> INCLUDE "internal_commands.ab2"
000441DA <internal_commands.ab2@2347> INCLUDE "internal_commands.ab2"
000441DE <internal_commands.ab2@2348> INCLUDE "internal_commands.ab2"
000441E2 <internal_commands.ab2@2349> INCLUDE "internal_commands.ab2"
000441E6 <internal_commands.ab2@2350> INCLUDE "internal_commands.ab2"
000441EA <internal_commands.ab2@2351> INCLUDE "internal_commands.ab2"
000441EE <internal_commands.ab2@2352> INCLUDE "internal_commands.ab2"
000441F2 <internal_commands.ab2@2353> INCLUDE "internal_commands.ab2"
000441F6 <internal_commands.ab2@2356> INCLUDE "internal_commands.ab2"
000441FA <internal_commands.ab2@2357> INCLUDE "internal_commands.ab2"
000441FE <internal_commands.ab2@2358> INCLUDE "internal_commands.ab2"
00044200 <internal_commands.ab2@2359> INCLUDE "internal_commands.ab2"
00044202 <internal_commands.ab2@2362> INCLUDE "internal_commands.ab2"
00044204 <internal_commands.ab2@2363> INCLUDE "internal_commands.ab2"
00044206 <internal_commands.ab2@2364> INCLUDE "internal_commands.ab2"
00044208 <internal_commands.ab2@2365> INCLUDE "internal_commands.ab2"
0004420C <internal_commands.ab2@2366> INCLUDE "internal_commands.ab2"
00044210 <internal_commands.ab2@2369> INCLUDE "internal_commands.ab2"
00044214 <internal_commands.ab2@2370> INCLUDE "internal_commands.ab2"
00044218 <internal_commands.ab2@2371> INCLUDE "internal_commands.ab2"
0004421A <internal_commands.ab2@2372> INCLUDE "internal_commands.ab2"
0004421E <internal_commands.ab2@2373> INCLUDE "internal_commands.ab2"
00044222 <internal_commands.ab2@2376> INCLUDE "internal_commands.ab2"
00044226 <internal_commands.ab2@2379> INCLUDE "internal_commands.ab2"
0004422A <internal_commands.ab2@2380> INCLUDE "internal_commands.ab2"
0004422C <internal_commands.ab2@2381> INCLUDE "internal_commands.ab2"
0004422E <internal_commands.ab2@2382> INCLUDE "internal_commands.ab2"
00044232 <internal_commands.ab2@2383> INCLUDE "internal_commands.ab2"
00044236 <internal_commands.ab2@2386> INCLUDE "internal_commands.ab2"
0004423A <internal_commands.ab2@2387> INCLUDE "internal_commands.ab2"
0004423E <internal_commands.ab2@2390> INCLUDE "internal_commands.ab2"
00044242 <internal_commands.ab2@2393> INCLUDE "internal_commands.ab2"
00044246 <internal_commands.ab2@2394> INCLUDE "internal_commands.ab2"
00044248 <internal_commands.ab2@2395> INCLUDE "internal_commands.ab2"
0004424A <internal_commands.ab2@2396> INCLUDE "internal_commands.ab2"
0004424E <internal_commands.ab2@2397> INCLUDE "internal_commands.ab2"
00044252 <internal_commands.ab2@2400> INCLUDE "internal_commands.ab2"
00044256 <internal_commands.ab2@2401> INCLUDE "internal_commands.ab2"
00044258 <internal_commands.ab2@2405> INCLUDE "internal_commands.ab2"
0004425C <internal_commands.ab2@2406> INCLUDE "internal_commands.ab2"
00044260 <internal_commands.ab2@2407> INCLUDE "internal_commands.ab2"
00044262 <internal_commands.ab2@2408> INCLUDE "internal_commands.ab2"
00044266 <internal_commands.ab2@2409> INCLUDE "internal_commands.ab2"
0004426A <internal_commands.ab2@2410> INCLUDE "internal_commands.ab2"
0004426C <internal_commands.ab2@2413> INCLUDE "internal_commands.ab2"
00044270 <internal_commands.ab2@2414> INCLUDE "internal_commands.ab2"
00044274 <internal_commands.ab2@2415> INCLUDE "internal_commands.ab2"
00044278 <internal_commands.ab2@2416> INCLUDE "internal_commands.ab2"
0004427C <internal_commands.ab2@2419> INCLUDE "internal_commands.ab2"
00044280 <internal_commands.ab2@2420> INCLUDE "internal_commands.ab2"
00044282 <internal_commands.ab2@2424> INCLUDE "internal_commands.ab2"
00044286 <internal_commands.ab2@2425> INCLUDE "internal_commands.ab2"
00044288 <internal_commands.ab2@2426> INCLUDE "internal_commands.ab2"
0004428A <internal_commands.ab2@2427> INCLUDE "internal_commands.ab2"
0004428C <internal_commands.ab2@2428> INCLUDE "internal_commands.ab2"
00044290 <internal_commands.ab2@2429> INCLUDE "internal_commands.ab2"
00044294 <internal_commands.ab2@2432> INCLUDE "internal_commands.ab2"
00044298 <internal_commands.ab2@2433> INCLUDE "internal_commands.ab2"
0004429C <internal_commands.ab2@2434> INCLUDE "internal_commands.ab2"
000442A0 <internal_commands.ab2@2435> INCLUDE "internal_commands.ab2"
000442A4 <internal_commands.ab2@2439> INCLUDE "internal_commands.ab2"
000442A8 <internal_commands.ab2@2440> INCLUDE "internal_commands.ab2"
000442AC <internal_commands.ab2@2444> INCLUDE "internal_commands.ab2"
000442B0 <internal_commands.ab2@2445> INCLUDE "internal_commands.ab2"
000442B4 <internal_commands.ab2@2449> INCLUDE "internal_commands.ab2"
000442B8 <internal_commands.ab2@2450> INCLUDE "internal_commands.ab2"
000442BC <internal_commands.ab2@2454> INCLUDE "internal_commands.ab2"
000442BE <internal_commands.ab2@2456> INCLUDE "internal_commands.ab2"
000442C2 <internal_commands.ab2@2457> INCLUDE "internal_commands.ab2"
000442C6 <internal_commands.ab2@2458> INCLUDE "internal_commands.ab2"
000442C8 <internal_commands.ab2@2459> INCLUDE "internal_commands.ab2"
000442CA <internal_commands.ab2@2460> INCLUDE "internal_commands.ab2"
000442CC <internal_commands.ab2@2461> INCLUDE "internal_commands.ab2"
000442D0 <internal_commands.ab2@2462> INCLUDE "internal_commands.ab2"
000442D4 <internal_commands.ab2@2463> INCLUDE "internal_commands.ab2"
000442D6 <internal_commands.ab2@2464> INCLUDE "internal_commands.ab2"
000442DA <internal_commands.ab2@2465> INCLUDE "internal_commands.ab2"
000442DC <internal_commands.ab2@2466> INCLUDE "internal_commands.ab2"
000442DE <internal_commands.ab2@2467> INCLUDE "internal_commands.ab2"
000442E0 <internal_commands.ab2@2468> INCLUDE "internal_commands.ab2"
000442E4 <internal_commands.ab2@2469> INCLUDE "internal_commands.ab2"
000442E8 <internal_commands.ab2@2470> INCLUDE "internal_commands.ab2"
000442EA <internal_commands.ab2@2473> INCLUDE "internal_commands.ab2"
000442EC <internal_commands.ab2@2474> INCLUDE "internal_commands.ab2"
000442F0 <internal_commands.ab2@2475> INCLUDE "internal_commands.ab2"
000442F4 <internal_commands.ab2@2476> INCLUDE "internal_commands.ab2"
000442F8 <internal_commands.ab2@2477> INCLUDE "internal_commands.ab2"
000442FC <internal_commands.ab2@2478> INCLUDE "internal_commands.ab2"
000442FE <internal_commands.ab2@2479> INCLUDE "internal_commands.ab2"
00044302 <internal_commands.ab2@2480> INCLUDE "internal_commands.ab2"
00044306 <internal_commands.ab2@2481> INCLUDE "internal_commands.ab2"
0004430A <internal_commands.ab2@2482> INCLUDE "internal_commands.ab2"
0004430C <internal_commands.ab2@2483> INCLUDE "internal_commands.ab2"
0004430E <internal_commands.ab2@2484> INCLUDE "internal_commands.ab2"
00044310 <internal_commands.ab2@2485> INCLUDE "internal_commands.ab2"
00044312 <internal_commands.ab2@2488> INCLUDE "internal_commands.ab2"
00044314 <internal_commands.ab2@2489> INCLUDE "internal_commands.ab2"
00044316 <internal_commands.ab2@2490> INCLUDE "internal_commands.ab2"
0004431A <internal_commands.ab2@2491> INCLUDE "internal_commands.ab2"
0004431E <internal_commands.ab2@2492> INCLUDE "internal_commands.ab2"
00044320 <internal_commands.ab2@2496> INCLUDE "internal_commands.ab2"
00044324 <internal_commands.ab2@2497> INCLUDE "internal_commands.ab2"
00044326 <internal_commands.ab2@2498> INCLUDE "internal_commands.ab2"
0004432A <internal_commands.ab2@2499> INCLUDE "internal_commands.ab2"
0004432E <internal_commands.ab2@2500> INCLUDE "internal_commands.ab2"
00044330 <internal_commands.ab2@2501> INCLUDE "internal_commands.ab2"
00044332 <internal_commands.ab2@2504> INCLUDE "internal_commands.ab2"
00044334 <internal_commands.ab2@2508> INCLUDE "internal_commands.ab2"
00044338 <internal_commands.ab2@2509> INCLUDE "internal_commands.ab2"
0004433A <internal_commands.ab2@2510> INCLUDE "internal_commands.ab2"
0004433E <internal_commands.ab2@2511> INCLUDE "internal_commands.ab2"
00044342 <internal_commands.ab2@2512> INCLUDE "internal_commands.ab2"
00044346 <internal_commands.ab2@2513> INCLUDE "internal_commands.ab2"
00044348 <internal_commands.ab2@2516> INCLUDE "internal_commands.ab2"
0004434C <internal_commands.ab2@2520> INCLUDE "internal_commands.ab2"
00044350 <internal_commands.ab2@2521> INCLUDE "internal_commands.ab2"
00044352 <internal_commands.ab2@2522> INCLUDE "internal_commands.ab2"
00044356 <internal_commands.ab2@2523> INCLUDE "internal_commands.ab2"
0004435A <internal_commands.ab2@2524> INCLUDE "internal_commands.ab2"
0004435E <internal_commands.ab2@2527> INCLUDE "internal_commands.ab2"
00044362 <internal_commands.ab2@2528> INCLUDE "internal_commands.ab2"
00044366 <internal_commands.ab2@2529> INCLUDE "internal_commands.ab2"
0004436A <internal_commands.ab2@2530> INCLUDE "internal_commands.ab2"
0004436E <internal_commands.ab2@2531> INCLUDE "internal_commands.ab2"
00044372 <internal_commands.ab2@2538> INCLUDE "internal_commands.ab2"
00044374 <internal_commands.ab2@2539> INCLUDE "internal_commands.ab2"
00044379 <internal_commands.ab2@2540> INCLUDE "internal_commands.ab2"
0004437A <internal_commands.ab2@2541> INCLUDE "internal_commands.ab2"
0004437E <internal_commands.ab2@2545> INCLUDE "internal_commands.ab2"
00044380 <internal_commands.ab2@2546> INCLUDE "internal_commands.ab2"
00044387 <internal_commands.ab2@2547> INCLUDE "internal_commands.ab2"
00044388 <internal_commands.ab2@2548> INCLUDE "internal_commands.ab2"
0004438C <internal_commands.ab2@2552> INCLUDE "internal_commands.ab2"
0004438E <internal_commands.ab2@2553> INCLUDE "internal_commands.ab2"
00044395 <internal_commands.ab2@2554> INCLUDE "internal_commands.ab2"
00044396 <internal_commands.ab2@2555> INCLUDE "internal_commands.ab2"
0004439A <internal_commands.ab2@2559> INCLUDE "internal_commands.ab2"
0004439C <internal_commands.ab2@2560> INCLUDE "internal_commands.ab2"
000443A4 <internal_commands.ab2@2561> INCLUDE "internal_commands.ab2"
000443A5 <internal_commands.ab2@2562> INCLUDE "internal_commands.ab2"
000443A6 <internal_commands.ab2@2563> INCLUDE "internal_commands.ab2"
000443AA <internal_commands.ab2@2566> INCLUDE "internal_commands.ab2"
000443AC <internal_commands.ab2@2567> INCLUDE "internal_commands.ab2"
000443B1 <internal_commands.ab2@2568> INCLUDE "internal_commands.ab2"
000443C5 <internal_commands.ab2@2569> INCLUDE "internal_commands.ab2"
000443C6 <internal_commands.ab2@2570> INCLUDE "internal_commands.ab2"
000443CA <internal_commands.ab2@2573> INCLUDE "internal_commands.ab2"
000443CC <internal_commands.ab2@2574> INCLUDE "internal_commands.ab2"
000443D0 <internal_commands.ab2@2575> INCLUDE "internal_commands.ab2"
000443D1 <internal_commands.ab2@2576> INCLUDE "internal_commands.ab2"
000443D2 <internal_commands.ab2@2577> INCLUDE "internal_commands.ab2"
000443D6 <internal_commands.ab2@2580> INCLUDE "internal_commands.ab2"
000443D8 <internal_commands.ab2@2581> INCLUDE "internal_commands.ab2"
000443DB <internal_commands.ab2@2582> INCLUDE "internal_commands.ab2"
000443DC <internal_commands.ab2@2583> INCLUDE "internal_commands.ab2"
000443E0 <internal_commands.ab2@2587> INCLUDE "internal_commands.ab2"
000443E2 <internal_commands.ab2@2588> INCLUDE "internal_commands.ab2"
000443E9 <internal_commands.ab2@2589> INCLUDE "internal_commands.ab2"
000443EA <internal_commands.ab2@2590> INCLUDE "internal_commands.ab2"
000443EE <internal_commands.ab2@2594> INCLUDE "internal_commands.ab2"
000443F0 <internal_commands.ab2@2595> INCLUDE "internal_commands.ab2"
000443F6 <internal_commands.ab2@2596> INCLUDE "internal_commands.ab2"
00044403 <internal_commands.ab2@2597> INCLUDE "internal_commands.ab2"
00044404 <internal_commands.ab2@2598> INCLUDE "internal_commands.ab2"
00044408 <internal_commands.ab2@2601> INCLUDE "internal_commands.ab2"
0004440A <internal_commands.ab2@2602> INCLUDE "internal_commands.ab2"
00044411 <internal_commands.ab2@2603> INCLUDE "internal_commands.ab2"
00044429 <internal_commands.ab2@2604> INCLUDE "internal_commands.ab2"
0004442A <internal_commands.ab2@2605> INCLUDE "internal_commands.ab2"
0004442E <internal_commands.ab2@2608> INCLUDE "internal_commands.ab2"
00044430 <internal_commands.ab2@2609> INCLUDE "internal_commands.ab2"
00044434 <internal_commands.ab2@2610> INCLUDE "internal_commands.ab2"
00044457 <internal_commands.ab2@2611> INCLUDE "internal_commands.ab2"
00044458 <internal_commands.ab2@2612> INCLUDE "internal_commands.ab2"
0004445C <internal_commands.ab2@2615> INCLUDE "internal_commands.ab2"
0004445E <internal_commands.ab2@2616> INCLUDE "internal_commands.ab2"
00044465 <internal_commands.ab2@2617> INCLUDE "internal_commands.ab2"
00044470 <internal_commands.ab2@2618> INCLUDE "internal_commands.ab2"
00044474 <internal_commands.ab2@2622> INCLUDE "internal_commands.ab2"
00044476 <internal_commands.ab2@2623> INCLUDE "internal_commands.ab2"
0004447C <internal_commands.ab2@2624> INCLUDE "internal_commands.ab2"
0004447D <internal_commands.ab2@2625> INCLUDE "internal_commands.ab2"
0004447E <internal_commands.ab2@2626> INCLUDE "internal_commands.ab2"
00044482 <internal_commands.ab2@2629> INCLUDE "internal_commands.ab2"
00044484 <internal_commands.ab2@2630> INCLUDE "internal_commands.ab2"
00044489 <internal_commands.ab2@2631> INCLUDE "internal_commands.ab2"
0004448A <internal_commands.ab2@2632> INCLUDE "internal_commands.ab2"
0004448E <internal_commands.ab2@2636> INCLUDE "internal_commands.ab2"
00044490 <internal_commands.ab2@2637> INCLUDE "internal_commands.ab2"
00044497 <internal_commands.ab2@2638> INCLUDE "internal_commands.ab2"
000444A9 <internal_commands.ab2@2639> INCLUDE "internal_commands.ab2"
000444AA <internal_commands.ab2@2640> INCLUDE "internal_commands.ab2"
000444AE <internal_commands.ab2@2643> INCLUDE "internal_commands.ab2"
000444B0 <internal_commands.ab2@2644> INCLUDE "internal_commands.ab2"
000444BA <internal_commands.ab2@2645> INCLUDE "internal_commands.ab2"
000444BB <internal_commands.ab2@2646> INCLUDE "internal_commands.ab2"
000444BC <internal_commands.ab2@2647> INCLUDE "internal_commands.ab2"
000444C0 <internal_commands.ab2@2650> INCLUDE "internal_commands.ab2"
000444C2 <internal_commands.ab2@2651> INCLUDE "internal_commands.ab2"
000444CA <internal_commands.ab2@2652> INCLUDE "internal_commands.ab2"
000444D7 <internal_commands.ab2@2653> INCLUDE "internal_commands.ab2"
000444D8 <internal_commands.ab2@2654> INCLUDE "internal_commands.ab2"
000444DC <internal_commands.ab2@2657> INCLUDE "internal_commands.ab2"
000444DE <internal_commands.ab2@2658> INCLUDE "internal_commands.ab2"
000444E1 <internal_commands.ab2@2659> INCLUDE "internal_commands.ab2"
0004451C <internal_commands.ab2@2660> INCLUDE "internal_commands.ab2"
00044520 <internal_commands.ab2@2664> INCLUDE "internal_commands.ab2"
00044522 <internal_commands.ab2@2665> INCLUDE "internal_commands.ab2"
00044526 <internal_commands.ab2@2666> INCLUDE "internal_commands.ab2"
00044527 <internal_commands.ab2@2667> INCLUDE "internal_commands.ab2"
00044528 <internal_commands.ab2@2668> INCLUDE "internal_commands.ab2"
0004452C <internal_commands.ab2@2671> INCLUDE "internal_commands.ab2"
0004452E <internal_commands.ab2@2672> INCLUDE "internal_commands.ab2"
00044536 <internal_commands.ab2@2673> INCLUDE "internal_commands.ab2"
00044537 <internal_commands.ab2@2674> INCLUDE "internal_commands.ab2"
00044538 <internal_commands.ab2@2675> INCLUDE "internal_commands.ab2"
0004453C <internal_commands.ab2@2678> INCLUDE "internal_commands.ab2"
0004453E <internal_commands.ab2@2679> INCLUDE "internal_commands.ab2"
00044546 <internal_commands.ab2@2680> INCLUDE "internal_commands.ab2"
00044556 <internal_commands.ab2@2681> INCLUDE "internal_commands.ab2"
0004455A <internal_commands.ab2@2685> INCLUDE "internal_commands.ab2"
0004455C <internal_commands.ab2@2686> INCLUDE "internal_commands.ab2"
00044565 <internal_commands.ab2@2687> INCLUDE "internal_commands.ab2"
0004456D <internal_commands.ab2@2688> INCLUDE "internal_commands.ab2"
0004456E <internal_commands.ab2@2689> INCLUDE "internal_commands.ab2"
00044572 <internal_commands.ab2@2692> INCLUDE "internal_commands.ab2"
00044574 <internal_commands.ab2@2693> INCLUDE "internal_commands.ab2"
0004457C <internal_commands.ab2@2694> INCLUDE "internal_commands.ab2"
00044585 <internal_commands.ab2@2695> INCLUDE "internal_commands.ab2"
00044586 <internal_commands.ab2@2696> INCLUDE "internal_commands.ab2"
0004458A <internal_commands.ab2@2699> INCLUDE "internal_commands.ab2"
0004458C <internal_commands.ab2@2700> INCLUDE "internal_commands.ab2"
00044594 <internal_commands.ab2@2701> INCLUDE "internal_commands.ab2"
00044595 <internal_commands.ab2@2702> INCLUDE "internal_commands.ab2"
00044596 <internal_commands.ab2@2703> INCLUDE "internal_commands.ab2"
0004459A <internal_commands.ab2@2706> INCLUDE "internal_commands.ab2"
0004459C <internal_commands.ab2@2707> INCLUDE "internal_commands.ab2"
000445A2 <internal_commands.ab2@2708> INCLUDE "internal_commands.ab2"
000445A3 <internal_commands.ab2@2709> INCLUDE "internal_commands.ab2"
000445A4 <internal_commands.ab2@2710> INCLUDE "internal_commands.ab2"
000445A8 <internal_commands.ab2@2713> INCLUDE "internal_commands.ab2"
000445AA <internal_commands.ab2@2714> INCLUDE "internal_commands.ab2"
000445B1 <internal_commands.ab2@2715> INCLUDE "internal_commands.ab2"
000445B2 <internal_commands.ab2@2716> INCLUDE "internal_commands.ab2"
000445B6 <internal_commands.ab2@2720> INCLUDE "internal_commands.ab2"
000445B8 <internal_commands.ab2@2721> INCLUDE "internal_commands.ab2"
000445BF <internal_commands.ab2@2722> INCLUDE "internal_commands.ab2"
000445C0 <internal_commands.ab2@2723> INCLUDE "internal_commands.ab2"
000445C4 <internal_commands.ab2@2727> INCLUDE "internal_commands.ab2"
000445C6 <internal_commands.ab2@2728> INCLUDE "internal_commands.ab2"
000445CD <internal_commands.ab2@2729> INCLUDE "internal_commands.ab2"
000445CE <internal_commands.ab2@2730> INCLUDE "internal_commands.ab2"
000445D2 <internal_commands.ab2@2734> INCLUDE "internal_commands.ab2"
000445D4 <internal_commands.ab2@2735> INCLUDE "internal_commands.ab2"
000445DB <internal_commands.ab2@2736> INCLUDE "internal_commands.ab2"
000445DC <internal_commands.ab2@2737> INCLUDE "internal_commands.ab2"
000445E0 <internal_commands.ab2@2741> INCLUDE "internal_commands.ab2"
000445E2 <internal_commands.ab2@2742> INCLUDE "internal_commands.ab2"
000445E7 <internal_commands.ab2@2743> INCLUDE "internal_commands.ab2"
000445FD <internal_commands.ab2@2744> INCLUDE "internal_commands.ab2"
000445FE <internal_commands.ab2@2745> INCLUDE "internal_commands.ab2"
00044602 <internal_commands.ab2@2748> INCLUDE "internal_commands.ab2"
00044604 <internal_commands.ab2@2749> INCLUDE "internal_commands.ab2"
0004460E <internal_commands.ab2@2750> INCLUDE "internal_commands.ab2"
0004460F <internal_commands.ab2@2751> INCLUDE "internal_commands.ab2"
00044610 <internal_commands.ab2@2752> INCLUDE "internal_commands.ab2"
00044614 <internal_commands.ab2@2755> INCLUDE "internal_commands.ab2"
00044616 <internal_commands.ab2@2756> INCLUDE "internal_commands.ab2"
00044621 <internal_commands.ab2@2757> INCLUDE "internal_commands.ab2"
00044622 <internal_commands.ab2@2758> INCLUDE "internal_commands.ab2"
00044626 <internal_commands.ab2@2762> INCLUDE "internal_commands.ab2"
00044628 <internal_commands.ab2@2763> INCLUDE "internal_commands.ab2"
00044634 <internal_commands.ab2@2764> INCLUDE "internal_commands.ab2"
00044661 <internal_commands.ab2@2765> INCLUDE "internal_commands.ab2"
00044662 <internal_commands.ab2@2766> INCLUDE "internal_commands.ab2"
00044666 <internal_commands.ab2@2769> INCLUDE "internal_commands.ab2"
00044668 <internal_commands.ab2@2770> INCLUDE "internal_commands.ab2"
00044670 <internal_commands.ab2@2771> INCLUDE "internal_commands.ab2"
000446A7 <internal_commands.ab2@2772> INCLUDE "internal_commands.ab2"
000446A8 <internal_commands.ab2@2773> INCLUDE "internal_commands.ab2"
000446AC <internal_commands.ab2@2776> INCLUDE "internal_commands.ab2"
000446AE <internal_commands.ab2@2777> INCLUDE "internal_commands.ab2"
000446B6 <internal_commands.ab2@2778> INCLUDE "internal_commands.ab2"
000446D5 <internal_commands.ab2@2779> INCLUDE "internal_commands.ab2"
000446D6 <internal_commands.ab2@2780> INCLUDE "internal_commands.ab2"
000446DA <internal_commands.ab2@2783> INCLUDE "internal_commands.ab2"
000446DC <internal_commands.ab2@2784> INCLUDE "internal_commands.ab2"
000446E3 <internal_commands.ab2@2785> INCLUDE "internal_commands.ab2"
00044719 <internal_commands.ab2@2786> INCLUDE "internal_commands.ab2"
0004471A <internal_commands.ab2@2787> INCLUDE "internal_commands.ab2"
0004471E <internal_commands.ab2@2790> INCLUDE "internal_commands.ab2"
00044720 <internal_commands.ab2@2791> INCLUDE "internal_commands.ab2"
00044729 <internal_commands.ab2@2792> INCLUDE "internal_commands.ab2"
0004475E <internal_commands.ab2@2793> INCLUDE "internal_commands.ab2"
00044762 <internal_commands.ab2@2797> INCLUDE "internal_commands.ab2"
00044764 <internal_commands.ab2@2798> INCLUDE "internal_commands.ab2"
00044774 <internal_commands.ab2@2799> INCLUDE "internal_commands.ab2"
000447AB <internal_commands.ab2@2800> INCLUDE "internal_commands.ab2"
000447AC <internal_commands.ab2@2801> INCLUDE "internal_commands.ab2"
000447AC <AmiBlitz3.ab2@28239> INCLUDE "internal_commands.ab2"
000447B0 <AmiBlitz3.ab2@28244>            Dc.l cif_lt                                     ;ciflt
000447B4 <AmiBlitz3.ab2@28245>            Dc.l cif_eq                                     ;cifeq
000447B8 <AmiBlitz3.ab2@28246>            Dc.l cif_gt                                     ;cifgt
000447BC <AmiBlitz3.ab2@28247>            Ds.l 1                                          ;0
000447C0 <AmiBlitz3.ab2@28248>            Dc.l cif_le                                     ;cifle
000447C4 <AmiBlitz3.ab2@28249>            Dc.l cif_ne                                     ;cifne
000447C8 <AmiBlitz3.ab2@28250>            Dc.l cif_le                                     ;cifge
000447CC <AmiBlitz3.ab2@28251>            Ds.l 1                                          ;0
000447D0 <AmiBlitz3.ab2@28252>            Dc.l cif_ge                                     ;cifge
000447D4 <AmiBlitz3.ab2@28253>            Dc.l cif_ne                                     ;cifne
000447D8 <AmiBlitz3.ab2@28254>            Dc.l cif_ge                                     ;cifge
000447DC <AmiBlitz3.ab2@28255>            Ds.l 1                                          ;0
000447E0 <AmiBlitz3.ab2@28258>            Dc.l do_newtype                                 ;donewtype
000447E4 <AmiBlitz3.ab2@28259>            Dc.l do_end                                     ;doend
000447E8 <AmiBlitz3.ab2@28260>            Dc.l do_let                                     ;dolet
000447EC <AmiBlitz3.ab2@28261>            Dc.l do_dim                                     ;dodim
000447F0 <AmiBlitz3.ab2@28262>            Dc.l do_goto                                    ;dogoto
000447F4 <AmiBlitz3.ab2@28263>            Dc.l do_gosub                                   ;dogosub
000447F8 <AmiBlitz3.ab2@28264>            Dc.l do_return                                  ;doreturn
000447FC <AmiBlitz3.ab2@28265>            Dc.l do_statement                               ;dostatement
00044800 <AmiBlitz3.ab2@28266>            Dc.l do_function                                ;dofunc
00044804 <AmiBlitz3.ab2@28267>            Dc.l do_mousewait                               ;domwait
00044808 <AmiBlitz3.ab2@28268>            Dc.l do_if                                      ;doif
0004480C <AmiBlitz3.ab2@28269>            Dc.l do_while                                   ;dowhile
00044810 <AmiBlitz3.ab2@28270>            Dc.l do_Macro                                   ;domacro
00044814 <AmiBlitz3.ab2@28271>            Dc.l do_select                                  ;doselect
00044818 <AmiBlitz3.ab2@28272>            Dc.l do_case                                    ;docase
0004481C <AmiBlitz3.ab2@28273>            Dc.l do_default                                 ;dodefault
00044820 <AmiBlitz3.ab2@28274>            Dc.l do_AsmExit                                 ;doasmexit
00044824 <AmiBlitz3.ab2@28275>            Dc.l do_xinclude                                ;doxinclude
00044828 <AmiBlitz3.ab2@28276>            Dc.l do_INCLUDE                                 ;doinclude
0004482C <AmiBlitz3.ab2@28277>            Dc.l do_syntax                                  ;syntaxerr
00044830 <AmiBlitz3.ab2@28278>            Dc.l do_shared                                  ;doshared
00044834 <AmiBlitz3.ab2@28279>            Dc.l do_for                                     ;dofor
00044838 <AmiBlitz3.ab2@28280>            Dc.l do_next                                    ;donext
0004483C <AmiBlitz3.ab2@28281>            Dc.l syntaxerr                                  ; To
00044840 <AmiBlitz3.ab2@28282>            Dc.l syntaxerr                                  ; Step
00044844 <AmiBlitz3.ab2@28283>            Dc.l do_data                                    ;dodata
00044848 <AmiBlitz3.ab2@28284>            Dc.l do_read                                    ;doread
0004484C <AmiBlitz3.ab2@28288>            Dc.l syntaxerr                                  ; CNIF
00044850 <AmiBlitz3.ab2@28289>            Dc.l syntaxerr                                  ; CSIF
00044854 <AmiBlitz3.ab2@28290>            Dc.l syntaxerr                                  ; CELSE
00044858 <AmiBlitz3.ab2@28291>            Dc.l syntaxerr                                  ; CEND
0004485C <AmiBlitz3.ab2@28292>            Dc.l do_cerr                                    ;docerr
00044860 <AmiBlitz3.ab2@28293>            Dc.l do_then                                    ;dothen
00044864 <AmiBlitz3.ab2@28294>            Dc.l do_else                                    ;doelse
00044868 <AmiBlitz3.ab2@28295>            Dc.l do_even4                                   ;doeven4
0004486C <AmiBlitz3.ab2@28296>            Dc.l do_even8                                   ;doeven8
00044870 <AmiBlitz3.ab2@28298>            Dc.l do_dc                                      ;dodc
00044874 <AmiBlitz3.ab2@28299>            Dc.l do_ds                                      ;dods
00044878 <AmiBlitz3.ab2@28300>            Dc.l do_even                                    ;doeven
0004487C <AmiBlitz3.ab2@28301>            Dc.l do_dcb                                     ;dodcb
00044880 <AmiBlitz3.ab2@28302>            Dc.l do_setreg                                  ;dosetreg
00044884 <AmiBlitz3.ab2@28303>            Dc.l do_IncBin                                  ;doincbin
00044888 <AmiBlitz3.ab2@28304>            Dc.l do_free                                    ;dofree
0004488C <AmiBlitz3.ab2@28305>            Dc.l do_use                                     ;douse
00044890 <AmiBlitz3.ab2@28306>            Dc.l do_Stop                                    ;dostop
00044894 <AmiBlitz3.ab2@28307>            Dc.l do_Cont                                    ;docont
00044898 <AmiBlitz3.ab2@28308>            Dc.l syntaxerr                                  ;syntaxeer
0004489C <AmiBlitz3.ab2@28309>            Dc.l do_SetInt                                  ;dosetint
000448A0 <AmiBlitz3.ab2@28310>            Dc.l do_ClrInt                                  ;doclrint
000448A4 <AmiBlitz3.ab2@28311>            Dc.l do_MaxLen                                  ;domaxlen
000448A8 <AmiBlitz3.ab2@28312>            Dc.l do_DEFTYPE                                 ;dodeftype
000448AC <AmiBlitz3.ab2@28313>            Dc.l do_BLITZ                                   ;doblitz
000448B0 <AmiBlitz3.ab2@28314>            Dc.l do_AMIGA                                   ;doamiga
000448B4 <AmiBlitz3.ab2@28315>            Dc.l do_QAMIGA                                  ;doqamiga
000448B8 <AmiBlitz3.ab2@28316>            Dc.l do_VWait                                   ;dovwait
000448BC <AmiBlitz3.ab2@28317>            Dc.l do_LibJsr                                  ;dolibjsr
000448C0 <AmiBlitz3.ab2@28318>            Dc.l do_TokeJsr                                 ;dotokejsr
000448C4 <AmiBlitz3.ab2@28319>            Dc.l do_BLibJsr                                 ;doblibjsr
000448C8 <AmiBlitz3.ab2@28320>            Dc.l _extb                                      ;syntaxerr
000448CC <AmiBlitz3.ab2@28324>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
000448D0 <AmiBlitz3.ab2@28325>            Dc.l do_SetErr                                  ;doseterr
000448D4 <AmiBlitz3.ab2@28326>            Dc.l do_ClrErr                                  ;doclrerr
000448D8 <AmiBlitz3.ab2@28327>            Dc.l syntaxerr                                  ;syntaxerr
000448DC <AmiBlitz3.ab2@28328>            Dc.l do_ErrFail                                 ;doerrfail
000448E0 <AmiBlitz3.ab2@28329>            Dc.l syntaxerr
000448E4 <AmiBlitz3.ab2@28330>            Dc.l syntaxerr                                  ;mod
000448E8 <AmiBlitz3.ab2@28331>            Dc.l syntaxerr                                  ;Pi
000448EC <AmiBlitz3.ab2@28332>            Dc.l do_Repeat                                  ;dorepeat
000448F0 <AmiBlitz3.ab2@28333>            Dc.l do_Until                                   ;dountil
000448F4 <AmiBlitz3.ab2@28334>            Dc.l do_PutReg                                  ;doputreg
000448F8 <AmiBlitz3.ab2@28335>            Dc.l do_Pop                                     ;dopop
000448FC <AmiBlitz3.ab2@28336>            Dc.l do_INCDIR                                  ;doincdir
00044900 <AmiBlitz3.ab2@28337>            Dc.l mydo_Endif2                                ;mydoendif2
00044904 <AmiBlitz3.ab2@28338>            Dc.l do_Wend                                    ;dowend
00044908 <AmiBlitz3.ab2@28339>            Dc.l do_SysJsr                                  ;dosysjsr
0004490C <AmiBlitz3.ab2@28340>            Dc.l do_WBStartup                               ;dowbstartup
00044910 <AmiBlitz3.ab2@28341>            Dc.l syntaxerr
00044914 <AmiBlitz3.ab2@28342>            Dc.l do_Ongo                                    ;doongo
00044918 <AmiBlitz3.ab2@28343>            Dc.l syntaxerr
0004491C <AmiBlitz3.ab2@28344>            Dc.l do_Forever                                 ;doforever
00044920 <AmiBlitz3.ab2@28345>            Dc.l do_Restore                                 ;dorestore
00044924 <AmiBlitz3.ab2@28346>            Dc.l do_Exchange                                ;doexchange
00044928 <AmiBlitz3.ab2@28347>            Dc.l do_USEPATH                                 ;dousepath
0004492C <AmiBlitz3.ab2@28348>            Dc.l do_CloseEd                                 ;doclosed
00044930 <AmiBlitz3.ab2@28349>            Dc.l do_NoCli                                   ;donocli
00044934 <AmiBlitz3.ab2@28350>            Dc.l syntaxerr                                  ;syntaxerr
00044938 <AmiBlitz3.ab2@28351>            Dc.l syntaxerr                                  ;syntaxerr
0004493C <AmiBlitz3.ab2@28352>            Dc.l syntaxerr                                  ;syntaxerr
00044940 <AmiBlitz3.ab2@28353>            Dc.l syntaxerr                                  ;syntaxerr
00044944 <AmiBlitz3.ab2@28354>            Dc.l syntaxerr                                  ;syntaxerr
00044948 <AmiBlitz3.ab2@28355>            Dc.l do_runerrson                               ;dorunerrson
0004494C <AmiBlitz3.ab2@28356>            Dc.l do_runerrsoff                              ;dorunerrsoff
00044950 <AmiBlitz3.ab2@28357>            Dc.l do_uselastpath
00044954 <AmiBlitz3.ab2@28358>            Dc.l do_regload
00044958 <AmiBlitz3.ab2@28359>            Dc.l do_regsave
0004495C <AmiBlitz3.ab2@28360>            Dc.l do_Object
00044960 <AmiBlitz3.ab2@28361>            Dc.l do_usepath2
00044964 <AmiBlitz3.ab2@28362>            Dc.l do_LastRunErrsMode
00044968 <AmiBlitz3.ab2@28385> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0004496C <AmiBlitz3.ab2@28386>            Dc.l menu_run
00044970 <AmiBlitz3.ab2@28387>            Dc.l menu_createexecutable
00044974 <AmiBlitz3.ab2@28388>            Dc.l menu_compileroptions
00044978 <AmiBlitz3.ab2@28389>            Dc.l menu_createresidentfile
0004497C <AmiBlitz3.ab2@28390>            Dc.l menu_viewnewtypes
00044980 <AmiBlitz3.ab2@28391>            Dc.l menu_simcliarguments
00044984 <AmiBlitz3.ab2@28392>            Dc.l menu_calculator
00044988 <AmiBlitz3.ab2@28393>            Dc.l menu_reloadlibs
0004498C <AmiBlitz3.ab2@28394>            Dc.l menu_loaddebugmodule
00044990 <AmiBlitz3.ab2@28395>            Dc.l menu_dummyfunc
00044994 <AmiBlitz3.ab2@28396>            Dc.l menu_newcreate
00044998 <AmiBlitz3.ab2@28397>            Dc.l menu_dummyfunc
0004499C <AmiBlitz3.ab2@28398>            Dc.l toggledebug
000449A0 <AmiBlitz3.ab2@28399>            Dc.l menu_dummyfunc
000449A4 <AmiBlitz3.ab2@28400>            Dc.l menu_dummyfunc
000449CE <AmiBlitz3.ab2@28405> !basic
000449FC <AmiBlitz3.ab2@28406> error{"Inavlid amiblitz3 menu item called!"}
00044A1A <AmiBlitz3.ab2@28407> !asm
00044A1C <AmiBlitz3.ab2@28408> RTS
00044A1D <AmiBlitz3.ab2@28414> set_autorun:               Dc.b $00
00044A22 <AmiBlitz3.ab2@28415> autorun:                   Dc.b $80,$01,$01,$00,$01
00044A23 <AmiBlitz3.ab2@28417> set_interruptcheck:        Dc.b $00
00044A28 <AmiBlitz3.ab2@28418> interruptcheck             Dc.b $80,$01,$01,$00,$01
00044A29 <AmiBlitz3.ab2@28420> set_assemblercheck:        Ds.b 1
00044A2E <AmiBlitz3.ab2@28421> assemblercheck:            Dc.b $00,$01,$01,$00,$01
00044A2F <AmiBlitz3.ab2@28423> set_overflowcheck:         Ds.b 1
00044A34 <AmiBlitz3.ab2@28424> overflowcheck:             Dc.b $00,$01,$01,$00,$01
00044A3A <AmiBlitz3.ab2@28426> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
00044A40 <AmiBlitz3.ab2@28427> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
00044A46 <AmiBlitz3.ab2@28428> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
00044A48 <AmiBlitz3.ab2@28429> Even4
00044A54 <AmiBlitz3.ab2@28432> tsthead:                   Dc.l $000003F3,$00000000,$00000001
00044A5C <AmiBlitz3.ab2@28433>                            Dc.l $00000000,$00000000
00044A64 <AmiBlitz3.ab2@28434> tstsize1:                  Dc.l $00000100,$000003E9
00044A68 <AmiBlitz3.ab2@28435> tstsize2:                  Dc.l $00000100
00044A6C <AmiBlitz3.ab2@28436> tstend:                    Dc.l $000003EC
00044A74 <AmiBlitz3.ab2@28437> tstsize3:                  Ds.l 2
00044A78 <AmiBlitz3.ab2@28438> tstdone:                   Dc.l $000003F2
00044A7C <AmiBlitz3.ab2@28441> edstruct:                  Dc.l tokens                     ;data for ted
00044A80 <AmiBlitz3.ab2@28445>                            Dc.l 0
00044A84 <AmiBlitz3.ab2@28447>                            Dc.l read_xtrafile              ;load .xtra routine
00044A88 <AmiBlitz3.ab2@28448>                            Dc.l write_xtrafile             ;save .xtra routine
00044A8C <AmiBlitz3.ab2@28449>                            Dc.l call_menuentry             ;Menu Routine
00044A90 <AmiBlitz3.ab2@28450>                            Ds.l 1                          ;cleanup (?)
00044A94 <AmiBlitz3.ab2@28451>                            Dc.b ":",34,".;"
00044B90 <AmiBlitz3.ab2@28454> 
00044C70 <AmiBlitz3.ab2@28455>                            Ds.l 56
00044C72 <AmiBlitz3.ab2@28460> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
00044C76 <AmiBlitz3.ab2@28463> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00044C78 <AmiBlitz3.ab2@28464>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00044C7C <AmiBlitz3.ab2@28465>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
00044C82 <AmiBlitz3.ab2@28469> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
00044C84 <AmiBlitz3.ab2@28473>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
00044C88 <AmiBlitz3.ab2@28476> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
00044C8C <AmiBlitz3.ab2@28479> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
00044C90 <AmiBlitz3.ab2@28480>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
00044C92 <AmiBlitz3.ab2@28486>                            Dc.b $4A,$40                                             ;TST.W   D0
00044C94 <AmiBlitz3.ab2@28490>                            Dc.b $4A,$80                                             ;TST.L   D0
00044C96 <AmiBlitz3.ab2@28493> nops8:                     Dc.b $4E,$71                                             ;NOP
00044C98 <AmiBlitz3.ab2@28494>                            Dc.b $4E,$71                                             ;NOP
00044C9A <AmiBlitz3.ab2@28495>                            Dc.b $4E,$71                                             ;NOP
00044C9C <AmiBlitz3.ab2@28496>                            Dc.b $4E,$71                                             ;NOP
00044C9E <AmiBlitz3.ab2@28497> nops4:                     Dc.b $4E,$71                                             ;NOP
00044CA0 <AmiBlitz3.ab2@28499>                            Dc.b $4E,$71                                             ;NOP
00044CA2 <AmiBlitz3.ab2@28500>                            Dc.b $4E,$71                                             ;NOP
00044CA4 <AmiBlitz3.ab2@28501>                            Dc.b $4E,$71                                             ;NOP
00044CA8 <AmiBlitz3.ab2@28505> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
00044CAC <AmiBlitz3.ab2@28508> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
00044CAE <AmiBlitz3.ab2@28511> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
00044CB0 <AmiBlitz3.ab2@28514> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
00044CB2 <AmiBlitz3.ab2@28515>                            Dc.b $C1,$8B                                             ;EXG D0,A3
00044CB6 <AmiBlitz3.ab2@28516>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
00044CB8 <AmiBlitz3.ab2@28517>                            Dc.b $C1,$8B                                             ;EXG D0,A3
00044CBA <AmiBlitz3.ab2@28523> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
00044CBE <AmiBlitz3.ab2@28524>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
00044CC0 <AmiBlitz3.ab2@28529> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
00044CC4 <AmiBlitz3.ab2@28530>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
00044CC6 <AmiBlitz3.ab2@28534> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
00044CC8 <AmiBlitz3.ab2@28535>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
00044CCC <AmiBlitz3.ab2@28541> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
00044CCE <AmiBlitz3.ab2@28542>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
00044CD2 <AmiBlitz3.ab2@28543>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
00044CD6 <AmiBlitz3.ab2@28547> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
00044CD8 <AmiBlitz3.ab2@28548>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
00044CDC <AmiBlitz3.ab2@28549>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
00044CDE <AmiBlitz3.ab2@28552> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
00044CE2 <AmiBlitz3.ab2@28555> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
00044CE6 <AmiBlitz3.ab2@28558> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
00044CEA <AmiBlitz3.ab2@28561> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
00044CEE <AmiBlitz3.ab2@28565>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00044CF0 <AmiBlitz3.ab2@28566>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
00044CF2 <AmiBlitz3.ab2@28567>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
00044CF6 <AmiBlitz3.ab2@28572>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00044CF8 <AmiBlitz3.ab2@28573>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
00044CFA <AmiBlitz3.ab2@28574>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
00044CFE <AmiBlitz3.ab2@28579>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
00044D00 <AmiBlitz3.ab2@28580>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
00044D02 <AmiBlitz3.ab2@28581>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
00044D06 <AmiBlitz3.ab2@28586>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
00044D08 <AmiBlitz3.ab2@28587>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00044D0A <AmiBlitz3.ab2@28588>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
00044D0E <AmiBlitz3.ab2@28589>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
00044D10 <AmiBlitz3.ab2@28590>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
00044D14 <AmiBlitz3.ab2@28595>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00044D16 <AmiBlitz3.ab2@28596>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
00044D1A <AmiBlitz3.ab2@28597>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
00044D1C <AmiBlitz3.ab2@28598>                            Dc.b $4A,$57                                             ;TST.W   (A7)
00044D20 <AmiBlitz3.ab2@28599>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
00044D22 <AmiBlitz3.ab2@28600>                            Dc.b $C1,$41                                             ;EXG D0,D1
00044D24 <AmiBlitz3.ab2@28603>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
00044D28 <AmiBlitz3.ab2@28608>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00044D2A <AmiBlitz3.ab2@28609>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
00044D2E <AmiBlitz3.ab2@28610>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
00044D30 <AmiBlitz3.ab2@28611>                            Dc.b $4A,$57                                             ;TST.W   (A7)
00044D34 <AmiBlitz3.ab2@28612>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
00044D36 <AmiBlitz3.ab2@28613>                            Dc.b $C1,$41                                             ;EXG D0,D1
00044D38 <AmiBlitz3.ab2@28616>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
00044D3C <AmiBlitz3.ab2@28621>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
00044D3E <AmiBlitz3.ab2@28622>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00044D42 <AmiBlitz3.ab2@28623>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
00044D44 <AmiBlitz3.ab2@28624>                            Dc.b $4A,$57                                             ;TST.W   (A7)
00044D48 <AmiBlitz3.ab2@28625>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
00044D4A <AmiBlitz3.ab2@28626>                            Dc.b $C1,$41                                             ;EXG D0,D1
00044D4C <AmiBlitz3.ab2@28629>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
00044D50 <AmiBlitz3.ab2@28634>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
00044D52 <AmiBlitz3.ab2@28635>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00044D56 <AmiBlitz3.ab2@28636>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
00044D5C <AmiBlitz3.ab2@28637>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
00044D60 <AmiBlitz3.ab2@28638>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
00044D62 <AmiBlitz3.ab2@28639>                            Dc.b $C1,$41                                             ;EXG D0,D1
00044D66 <AmiBlitz3.ab2@28646>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
00044D68 <AmiBlitz3.ab2@28650> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
00044D6A <AmiBlitz3.ab2@28653> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
00044D6E <AmiBlitz3.ab2@28656> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
00044D70 <AmiBlitz3.ab2@28657> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
00044D74 <AmiBlitz3.ab2@28660> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
00044D76 <AmiBlitz3.ab2@28663> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00044D7A <AmiBlitz3.ab2@28666> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
00044D7C <AmiBlitz3.ab2@28670>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00044D7E <AmiBlitz3.ab2@28673> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
00044D80 <AmiBlitz3.ab2@28676> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
00044D84 <AmiBlitz3.ab2@28679> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
00044D88 <AmiBlitz3.ab2@28682> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
00044D8C <AmiBlitz3.ab2@28685> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
00044D8E <AmiBlitz3.ab2@28688> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
00044D90 <AmiBlitz3.ab2@28691> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
00044D94 <AmiBlitz3.ab2@28694> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
00044D9A <AmiBlitz3.ab2@28695>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
00044D9C <AmiBlitz3.ab2@28696>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
00044DA0 <AmiBlitz3.ab2@28700> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
00044DA2 <AmiBlitz3.ab2@28701>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
00044DA4 <AmiBlitz3.ab2@28705> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
00044DA8 <AmiBlitz3.ab2@28708> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
00044DAA <AmiBlitz3.ab2@28712>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
00044DAC <AmiBlitz3.ab2@28716>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
00044DAE <AmiBlitz3.ab2@28720>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
00044DB2 <AmiBlitz3.ab2@28723> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
00044DB6 <AmiBlitz3.ab2@28726> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
00044DB8 <AmiBlitz3.ab2@28729> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
00044DBA <AmiBlitz3.ab2@28732> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
00044DBC <AmiBlitz3.ab2@28735> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
00044DC0 <AmiBlitz3.ab2@28738> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
00044DC4 <AmiBlitz3.ab2@28741> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
00044DC6 <AmiBlitz3.ab2@28744> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
00044DC8 <AmiBlitz3.ab2@28748>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
00044DCC <AmiBlitz3.ab2@28751>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
00044DCE <AmiBlitz3.ab2@28757>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
00044DD2 <AmiBlitz3.ab2@28760>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
00044DD4 <AmiBlitz3.ab2@28766>                            Dc.b $CB,$4C                                             ;EXG A5,A4
00044DD8 <AmiBlitz3.ab2@28770> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
00044DDA <AmiBlitz3.ab2@28773> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
00044DDC <AmiBlitz3.ab2@28777>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
00044DDE <AmiBlitz3.ab2@28781>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
00044DE4 <AmiBlitz3.ab2@28784> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
00044DEA <AmiBlitz3.ab2@28787> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
00044DF2 <AmiBlitz3.ab2@28791> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
00044DF6 <AmiBlitz3.ab2@28792>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
00044DF8 <AmiBlitz3.ab2@28796> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
00044DFC <AmiBlitz3.ab2@28799> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
00044E00 <AmiBlitz3.ab2@28802> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
00044E04 <AmiBlitz3.ab2@28805> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
00044E08 <AmiBlitz3.ab2@28806> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
00044E0C <AmiBlitz3.ab2@28810>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
00044E10 <AmiBlitz3.ab2@28812>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
00044E12 <AmiBlitz3.ab2@28815> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
00044E16 <AmiBlitz3.ab2@28818> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
00044E18 <AmiBlitz3.ab2@28821> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
00044E1A <AmiBlitz3.ab2@28822>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
00044E1C <AmiBlitz3.ab2@28823>                            Dc.b $4A,$92                                             ;TST.L   (A2)
00044E20 <AmiBlitz3.ab2@28824> 
00044E22 <AmiBlitz3.ab2@28825>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
00044E24 <AmiBlitz3.ab2@28826>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
00044E26 <AmiBlitz3.ab2@28827>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
00044E2C <AmiBlitz3.ab2@28829>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
00044E2E <AmiBlitz3.ab2@28834> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
00044E30 <AmiBlitz3.ab2@28835>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
00044E32 <AmiBlitz3.ab2@28839> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
00044E36 <AmiBlitz3.ab2@28842> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
00044E38 <AmiBlitz3.ab2@28845> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
00044E3A <AmiBlitz3.ab2@28849>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
00044E3C <AmiBlitz3.ab2@28852> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
00044E40 <AmiBlitz3.ab2@28855> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
00044E42 <AmiBlitz3.ab2@28856>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
00044E46 <AmiBlitz3.ab2@28860> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
00044E4A <AmiBlitz3.ab2@28861> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
00044E4E <AmiBlitz3.ab2@28865> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
00044E52 <AmiBlitz3.ab2@28869> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
00044E58 <AmiBlitz3.ab2@28873> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
00044E5E <AmiBlitz3.ab2@28876> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
00044E62 <AmiBlitz3.ab2@28880> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
00044E66 <AmiBlitz3.ab2@28884>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
00044E6A <AmiBlitz3.ab2@28885>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
00044E70 <AmiBlitz3.ab2@28890>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
00044E74 <AmiBlitz3.ab2@28895>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
00044E76 <AmiBlitz3.ab2@28900>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
00044E7A <AmiBlitz3.ab2@28904>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
00044E7C <AmiBlitz3.ab2@28908> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
00044E7E <AmiBlitz3.ab2@28911> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
00044E80 <AmiBlitz3.ab2@28912>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
00044E84 <AmiBlitz3.ab2@28916>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
00044E88 <AmiBlitz3.ab2@28920> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
00044E8C <AmiBlitz3.ab2@28923> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
00044E8E <AmiBlitz3.ab2@28926> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
00044E92 <AmiBlitz3.ab2@28929> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
00044E94 <AmiBlitz3.ab2@28932> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
00044E9D <AmiBlitz3.ab2@28936>                            Dc.b "ram:test",0
00044E9E <AmiBlitz3.ab2@28937> Even
00044EA2 <AmiBlitz3.ab2@28941>                            Dc.l  0                          ;was  Ds.w 3 org source
00044EA4 <AmiBlitz3.ab2@28943>                            Dc.w  0
00044EA8 <AmiBlitz3.ab2@28946> _mathffpbase:              Ds.l 1                           ;maths org source
00044EAA <AmiBlitz3.ab2@28947> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
00044EAC <AmiBlitz3.ab2@28948> typelen:                   Ds.w 1
00044EB0 <AmiBlitz3.ab2@28949> prevtype:                  Ds.l 1
00044EB4 <AmiBlitz3.ab2@28950> lastsourcepos:             Ds.l 1                           ;prevloc org source
00044EB6 <AmiBlitz3.ab2@28951> lastchar:                  Ds.w 1
00044EBA <AmiBlitz3.ab2@28952> thistype:                  Ds.l 1
00044EBE <AmiBlitz3.ab2@28953> errstack:                  Ds.l 1
00044EC2 <AmiBlitz3.ab2@28954> errcont:                   Ds.l 1
00044EC4 <AmiBlitz3.ab2@28955> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
00044EC6 <AmiBlitz3.ab2@28956> linesleft:                 Ds.w 1
00044ECA <AmiBlitz3.ab2@28957> sourceline:                Ds.l 1                          ;thisitem org source
00044ECE <AmiBlitz3.ab2@28958> varbase:                   Ds.l 1                          ;firstvar org source
00044ED2 <AmiBlitz3.ab2@28959> alllocals:                 Ds.l 1
00044ED6 <AmiBlitz3.ab2@28960> firstlocal:                Ds.l 1
00044EDA <AmiBlitz3.ab2@28961> firstglob:                 Ds.l 1
00044EDC <AmiBlitz3.ab2@28962> globalvarpointer:          Ds.w 1                          ;varoff org source
00044EDE <AmiBlitz3.ab2@28963> locvaroff:                 Ds.w 1
00044EE2 <AmiBlitz3.ab2@28964> firstitem_:                 Ds.l 1
00044EE4 <AmiBlitz3.ab2@28965> numlines_org:              Ds.w 1                          ;numlines org source
00044EE6 <AmiBlitz3.ab2@28966> returncode_org:            Ds.w 1                          ;returncode org source
00044EEA <AmiBlitz3.ab2@28967> firstiff:                  Ds.l 1                          ;firstif org source
00044EEE <AmiBlitz3.ab2@28968> ptr_seg_ped:               Ds.l 1                          ;segadd org source
000450EE <AmiBlitz3.ab2@28969> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
000450FE <AmiBlitz3.ab2@28970> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
000452FE <AmiBlitz3.ab2@28971> str_libfilename:           Ds.b #MAX_STRINGSIZE
000454FE <AmiBlitz3.ab2@28972> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
000456FE <AmiBlitz3.ab2@28973> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
00045702 <AmiBlitz3.ab2@28975> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
00045902 <AmiBlitz3.ab2@28976> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
00045B02 <AmiBlitz3.ab2@28978> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
00045B06 <AmiBlitz3.ab2@28979> size_acidlibs:             Ds.l 1                          ;acidlibs org source
00045D06 <AmiBlitz3.ab2@28980> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
00045D0A <AmiBlitz3.ab2@28981> size_deflibs:              Ds.l 1                          ;deflibs org source
00045F0A <AmiBlitz3.ab2@28982> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0004610A <AmiBlitz3.ab2@28984> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0004610E <AmiBlitz3.ab2@28985> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0004630E <AmiBlitz3.ab2@28987> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
00046312 <AmiBlitz3.ab2@28993>   Dc.b $E3,$10,$00,$01                                     ;icondata  
00046316 <AmiBlitz3.ab2@28994>   Dc.b $00,$00,$00,$00
0004631A <AmiBlitz3.ab2@28995>   Dc.b $00,$19,$00,$11
0004631E <AmiBlitz3.ab2@28996>   Dc.b $00,$2E,$00,$18
00046322 <AmiBlitz3.ab2@28997>   Dc.b $00,$04,$00,$03
00046326 <AmiBlitz3.ab2@28998>   Dc.b $00,$01,$00,$22
0004632A <AmiBlitz3.ab2@28999>   Dc.b $73,$68,$00,$00
0004632E <AmiBlitz3.ab2@29000>   Dc.b $00,$00,$00,$00
00046332 <AmiBlitz3.ab2@29001>   Dc.b $00,$00,$00,$00
00046336 <AmiBlitz3.ab2@29002>   Dc.b $00,$00,$00,$00
0004633A <AmiBlitz3.ab2@29003>   Dc.b $00,$00,$00,$00
0004633E <AmiBlitz3.ab2@29004>   Dc.b $00,$00,$00,$00
00046342 <AmiBlitz3.ab2@29005>   Dc.b $03,$22,$00,$21
00046346 <AmiBlitz3.ab2@29006>   Dc.b $3C,$28,$00,$22
0004634A <AmiBlitz3.ab2@29007>   Dc.b $6E,$C0,$00,$00
0004634E <AmiBlitz3.ab2@29008>   Dc.b $00,$12,$00,$00
00046352 <AmiBlitz3.ab2@29009>   Dc.b $00,$0E,$00,$00
00046356 <AmiBlitz3.ab2@29010>   Dc.b $00,$00,$00,$00
0004635A <AmiBlitz3.ab2@29011>   Dc.b $00,$00,$00,$00
0004635E <AmiBlitz3.ab2@29012>   Dc.b $00,$00,$00,$00
00046362 <AmiBlitz3.ab2@29013>   Dc.b $00,$00,$00,$2E
00046366 <AmiBlitz3.ab2@29014>   Dc.b $00,$17,$00,$02
0004636A <AmiBlitz3.ab2@29015>   Dc.b $00,$01,$8E,$80
0004636E <AmiBlitz3.ab2@29016>   Dc.b $03,$00,$00,$00
00046372 <AmiBlitz3.ab2@29017>   Dc.b $00,$00,$FF,$FF
00046376 <AmiBlitz3.ab2@29018>   Dc.b $FF,$FF,$FF,$FC
0004637A <AmiBlitz3.ab2@29019>   Dc.b $80,$00,$00,$00
0004637E <AmiBlitz3.ab2@29020>   Dc.b $00,$00,$80,$00
00046382 <AmiBlitz3.ab2@29021>   Dc.b $00,$3F,$BB,$40
00046386 <AmiBlitz3.ab2@29022>   Dc.b $80,$1F,$C0,$00
0004638A <AmiBlitz3.ab2@29023>   Dc.b $00,$00,$80,$3F
0004638E <AmiBlitz3.ab2@29024>   Dc.b $C0,$0F,$BB,$40
00046392 <AmiBlitz3.ab2@29025>   Dc.b $80,$1F,$C0,$00
00046396 <AmiBlitz3.ab2@29026>   Dc.b $00,$00,$8E,$00
0004639A <AmiBlitz3.ab2@29027>   Dc.b $F8,$00,$00,$00
0004639E <AmiBlitz3.ab2@29028>   Dc.b $8F,$01,$FF,$00
000463A2 <AmiBlitz3.ab2@29029>   Dc.b $3B,$40,$81,$E3
000463A6 <AmiBlitz3.ab2@29030>   Dc.b $F7,$C0,$00,$00
000463AA <AmiBlitz3.ab2@29031>   Dc.b $80,$7F,$F8,$70
000463AE <AmiBlitz3.ab2@29032>   Dc.b $3B,$40,$80,$0F
000463B2 <AmiBlitz3.ab2@29033>   Dc.b $7C,$E0,$00,$00
000463B6 <AmiBlitz3.ab2@29034>   Dc.b $80,$00,$FD,$80
000463BA <AmiBlitz3.ab2@29035>   Dc.b $00,$00,$80,$01
000463BE <AmiBlitz3.ab2@29036>   Dc.b $F6,$00,$FB,$40
000463C2 <AmiBlitz3.ab2@29037>   Dc.b $80,$03,$EF,$00
000463C6 <AmiBlitz3.ab2@29038>   Dc.b $00,$00,$80,$07
000463CA <AmiBlitz3.ab2@29039>   Dc.b $87,$80,$3B,$40
000463CE <AmiBlitz3.ab2@29040>   Dc.b $80,$0F,$01,$C0
000463D2 <AmiBlitz3.ab2@29041>   Dc.b $00,$00,$80,$03
000463D6 <AmiBlitz3.ab2@29042>   Dc.b $F0,$70,$1D,$40
000463DA <AmiBlitz3.ab2@29043>   Dc.b $80,$00,$18,$1C
000463DE <AmiBlitz3.ab2@29044>   Dc.b $00,$00,$80,$00
000463E2 <AmiBlitz3.ab2@29045>   Dc.b $10,$06,$03,$40
000463E6 <AmiBlitz3.ab2@29046>   Dc.b $80,$00,$20,$1F
000463EA <AmiBlitz3.ab2@29047>   Dc.b $00,$00,$80,$00
000463EE <AmiBlitz3.ab2@29048>   Dc.b $00,$00,$01,$40
000463F2 <AmiBlitz3.ab2@29049>   Dc.b $80,$00,$00,$00
000463F6 <AmiBlitz3.ab2@29050>   Dc.b $00,$00,$80,$00
000463FA <AmiBlitz3.ab2@29051>   Dc.b $00,$00,$00,$00
000463FE <AmiBlitz3.ab2@29052>   Dc.b $00,$00,$00,$00
00046402 <AmiBlitz3.ab2@29053>   Dc.b $00,$00,$00,$00
00046406 <AmiBlitz3.ab2@29054>   Dc.b $00,$00,$00,$04
0004640A <AmiBlitz3.ab2@29055>   Dc.b $00,$3F,$FC,$01
0004640E <AmiBlitz3.ab2@29056>   Dc.b $BB,$44,$00,$60
00046412 <AmiBlitz3.ab2@29057>   Dc.b $FE,$00,$00,$04
00046416 <AmiBlitz3.ab2@29058>   Dc.b $00,$CF,$FF,$01
0004641A <AmiBlitz3.ab2@29059>   Dc.b $BB,$44,$1F,$EF
0004641E <AmiBlitz3.ab2@29060>   Dc.b $FF,$00,$00,$04
00046422 <AmiBlitz3.ab2@29061>   Dc.b $33,$FF,$FF,$E0
00046426 <AmiBlitz3.ab2@29062>   Dc.b $00,$04,$37,$FE
0004642A <AmiBlitz3.ab2@29063>   Dc.b $7F,$FC,$1B,$44
0004642E <AmiBlitz3.ab2@29064>   Dc.b $0F,$9C,$FF,$FF
00046432 <AmiBlitz3.ab2@29065>   Dc.b $00,$04,$03,$E3
00046436 <AmiBlitz3.ab2@29066>   Dc.b $FF,$FF,$DB,$44
0004643A <AmiBlitz3.ab2@29067>   Dc.b $00,$7F,$BF,$FF
0004643E <AmiBlitz3.ab2@29068>   Dc.b $80,$04,$00,$0F
00046442 <AmiBlitz3.ab2@29069>   Dc.b $3F,$FE,$00,$04
00046446 <AmiBlitz3.ab2@29070>   Dc.b $00,$06,$7F,$F8
0004644A <AmiBlitz3.ab2@29071>   Dc.b $1B,$44,$00,$0C
0004644E <AmiBlitz3.ab2@29072>   Dc.b $F7,$FC,$00,$04
00046452 <AmiBlitz3.ab2@29073>   Dc.b $00,$19,$F9,$FE
00046456 <AmiBlitz3.ab2@29074>   Dc.b $1B,$44,$00,$33
0004645A <AmiBlitz3.ab2@29075>   Dc.b $FE,$7F,$00,$04
0004645E <AmiBlitz3.ab2@29076>   Dc.b $00,$0F,$FF,$BF
00046462 <AmiBlitz3.ab2@29077>   Dc.b $CD,$44,$00,$03
00046466 <AmiBlitz3.ab2@29078>   Dc.b $EF,$EF,$F0,$04
0004646A <AmiBlitz3.ab2@29079>   Dc.b $00,$00,$7F,$DF
0004646E <AmiBlitz3.ab2@29080>   Dc.b $FB,$44,$00,$00
00046472 <AmiBlitz3.ab2@29081>   Dc.b $FF,$A7,$FC,$04
00046476 <AmiBlitz3.ab2@29082>   Dc.b $00,$00,$7E,$3F
0004647A <AmiBlitz3.ab2@29083>   Dc.b $FD,$44,$00,$00
0004647E <AmiBlitz3.ab2@29084>   Dc.b $00,$00,$00,$04
00046482 <AmiBlitz3.ab2@29085>   Dc.b $7F,$FF,$FF,$FF
00046486 <AmiBlitz3.ab2@29086>   Dc.b $FF,$FC,$00,$00
0004648A <AmiBlitz3.ab2@29087>   Dc.b $00,$01,$00,$00
0004648D <AmiBlitz3.ab2@29088>   Dc.b $00,$00,$04
00046493 <AmiBlitz3.ab2@29091> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
00046494 <AmiBlitz3.ab2@29092> Even
00046498 <AmiBlitz3.ab2@29094> sysdebug:            Dc.l $3F0
0004649C <AmiBlitz3.ab2@29098> exelock              Ds.l 1
000496DC <AmiBlitz3.ab2@29100> wzgui                IncBin "compiler.wizard"
000496E0 <AmiBlitz3.ab2@29102> includesourceline    Dc.l 0
000496E4 <AmiBlitz3.ab2@29103> linenum              Ds.l 1
000496E8 <AmiBlitz3.ab2@29104> globallinecount      Ds.l 1
00049706 <AmiBlitz3.ab2@29105> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0004970A <AmiBlitz3.ab2@29106> calc_option          Dc.l 1
0004970E <AmiBlitz3.ab2@29107> versioninformation   Dc.l $00
00049712 <AmiBlitz3.ab2@29108> number_of_builds     Dc.l $00
00049714 <AmiBlitz3.ab2@29111> BSS
00049716 <AmiBlitz3.ab2@29112> debugnest            Ds.w 1
0004971A <AmiBlitz3.ab2@29113> instringf            Ds.l 1
0004971E <AmiBlitz3.ab2@29114> funcscanon           Ds.l 1
00049732 <AmiBlitz3.ab2@29115> storedebugmode       Ds.b 20
00049736 <AmiBlitz3.ab2@29116> firsttimepref        Ds.l 1
00049738 <AmiBlitz3.ab2@29117> funcparloop          Ds.w 1
0004973A <AmiBlitz3.ab2@29118> nostringopt          Ds.w 1
000497BA <AmiBlitz3.ab2@29119> path2:               Ds.l 32
000497BE <AmiBlitz3.ab2@29120> typebase             Dc.l 0
000497C0 <AmiBlitz3.ab2@29121> doublepeek           Dc.w 0
000497C4 <AmiBlitz3.ab2@29122> lastoffset           Dc.l 0
000497C6 <AmiBlitz3.ab2@29123> firsttime            Dc.w 0
000497CA <AmiBlitz3.ab2@29124> lastdestpointer      Dc.l 0
000497CE <AmiBlitz3.ab2@29125> prevwritedat         Dc.l 0
000497D2 <AmiBlitz3.ab2@29126> lastsourceline       Dc.l 0
000497D6 <AmiBlitz3.ab2@29127> lastwritedat         Dc.l 0
000497D8 <AmiBlitz3.ab2@29128> makeexec             Dc.w 0
000497DA <AmiBlitz3.ab2@29129> makeexec_remember    Dc.w 0
000497DE <AmiBlitz3.ab2@29130> sharebase            Ds.l 1
000497E2 <AmiBlitz3.ab2@29131> tempa7               Ds.l 1
000497E4 <AmiBlitz3.ab2@29132> incnif               Ds.w 1
000497E8 <AmiBlitz3.ab2@29133> tempstore            Ds.l 1
000497EC <AmiBlitz3.ab2@29134> result               Ds.l 1
000497EE <AmiBlitz3.ab2@29135> automode             Ds.w 1
000497F0 <AmiBlitz3.ab2@29136> stackcorrect         Ds.w 1
000497F2 <AmiBlitz3.ab2@29137> formode              Ds.w 1
000497F6 <AmiBlitz3.ab2@29138> limitregs            Ds.l 1
000497F8 <AmiBlitz3.ab2@29139> onestep              Ds.w 1
000497FC <AmiBlitz3.ab2@29140> reqmode              Ds.l 1
0004989C <AmiBlitz3.ab2@29141> inctab               Ds.l 40
0004989E <AmiBlitz3.ab2@29142> funcoptimize         Ds.w 1
000498A2 <AmiBlitz3.ab2@29143> includeline          Ds.l 1
000498A6 <AmiBlitz3.ab2@29144> morememadd           Ds.l 1
000498A8 <AmiBlitz3.ab2@29145> objectcount          Ds.w 1
000498AC <AmiBlitz3.ab2@29146> savefuncspace        Ds.l 1
000498B0 <AmiBlitz3.ab2@29147> lasttrap1            Ds.l 1
000498B4 <AmiBlitz3.ab2@29148> currentfunccall      Ds.l 1
000498B5 <AmiBlitz3.ab2@29149> skipfunc             Ds.b 1
000498B6 <AmiBlitz3.ab2@29150> resdisable           Ds.b 1
000498B7 <AmiBlitz3.ab2@29151> skiptoggle           Ds.b 1
000498B8 <AmiBlitz3.ab2@29152> developobject        Ds.b 1
000498BA <AmiBlitz3.ab2@29153> iniffcommand         Ds.w 1
000498BC <AmiBlitz3.ab2@29154> startoffsetmore      Ds.w 1
000498BE <AmiBlitz3.ab2@29155> olddebugmode         Ds.w 1
000498C2 <AmiBlitz3.ab2@29156> fpucodeglobal        Ds.l 1
000498C6 <AmiBlitz3.ab2@29157> fpucodelocal         Ds.l 1
000498CA <AmiBlitz3.ab2@29158> maxregs              Ds.l 1
000498CE <AmiBlitz3.ab2@29159> fpucode              Ds.l 1
000498D0 <AmiBlitz3.ab2@29160> firstmline           Ds.w 1
00049910 <AmiBlitz3.ab2@29161> regtable             Ds.l 16
00049912 <AmiBlitz3.ab2@29162> exdebug              Ds.w 1
00049914 <AmiBlitz3.ab2@29163> a2offset2            Ds.w 1
00049918 <AmiBlitz3.ab2@29164> parnumtemp           Ds.l 1
00049919 <AmiBlitz3.ab2@29165> doimmediate          Ds.b 1
0004991A <AmiBlitz3.ab2@29166> notypecheck          Ds.b 1
0004991C <AmiBlitz3.ab2@29167> vartype              Ds.w 1
0004991D <AmiBlitz3.ab2@29168> peekaddrsize         Ds.b 1
0004991E <AmiBlitz3.ab2@29169> declare2             Ds.b 1
00049920 <AmiBlitz3.ab2@29170> parameternum         Ds.w 1
00049924 <AmiBlitz3.ab2@29171> lasttoken            Ds.l 1
00049926 <AmiBlitz3.ab2@29172> newvariable          Ds.w 1
00049927 <AmiBlitz3.ab2@29173> declare              Ds.b 1
00049928 <AmiBlitz3.ab2@29174> typecheck            Ds.b 1
00049929 <AmiBlitz3.ab2@29175> nowdeclare           Ds.b 1
0004992A <AmiBlitz3.ab2@29176> dimkeep              Ds.b 1
0004992E <AmiBlitz3.ab2@29178> firstiffstore        Ds.l 1
00049932 <AmiBlitz3.ab2@29179> destpointer2         Ds.l 1
00049936 <AmiBlitz3.ab2@29180> stackaddr            Ds.l 1
00049A3A <AmiBlitz3.ab2@29181> allowtab             Ds.b 260
00049B3A <AmiBlitz3.ab2@29182> templine             Ds.b 256
00049B3C <AmiBlitz3.ab2@29183> thenmode             Ds.w 1
00049B3E <AmiBlitz3.ab2@29184> temp                 Ds.w 1
00049B40 <AmiBlitz3.ab2@29185> tempregnum           Ds.w 1
00049B44 <AmiBlitz3.ab2@29187> numlines2            Ds.l 1
00049B48 <AmiBlitz3.ab2@29188> numlines             Ds.l 1
00049B4A <AmiBlitz3.ab2@29189> exmac                Ds.w 1
00049B4C <AmiBlitz3.ab2@29190> returncode           Ds.w 1
00049B50 <AmiBlitz3.ab2@29191> fp0iff               Ds.l 1
00049B54 <AmiBlitz3.ab2@29192> fp0addr              Ds.l 1
00049B56 <AmiBlitz3.ab2@29193> fp0mode              Ds.w 1
00049B58 <AmiBlitz3.ab2@29194> fp0var               Ds.w 1
00049B5A <AmiBlitz3.ab2@29195> fastfunc             Ds.w 1
00049B5C <AmiBlitz3.ab2@29196> retmode              Ds.w 1
00049B5E <AmiBlitz3.ab2@29197> parnum               Ds.w 1
00049B60 <AmiBlitz3.ab2@29198> regmask              Ds.w 1
00049B62 <AmiBlitz3.ab2@29199> regnumfunc           Ds.w 1
00049B64 <AmiBlitz3.ab2@29200> libmode              Ds.w 1
00049B68 <AmiBlitz3.ab2@29201> oldline              Ds.l 1
00049B6C <AmiBlitz3.ab2@29202> sourceline3          Ds.l 1
00049C34 <AmiBlitz3.ab2@29203> debugstore           Ds.b 200
00049C38 <AmiBlitz3.ab2@29204> deststore            Ds.l 1
00049C3C <AmiBlitz3.ab2@29206> loada                Ds.l 1
00049C40 <AmiBlitz3.ab2@29208> currtype             Ds.l 1
00049C44 <AmiBlitz3.ab2@29209> arrayoffset          Ds.l 1
00049C48 <AmiBlitz3.ab2@29210> lastlabel            Ds.l 1
00049C4C <AmiBlitz3.ab2@29211> curtemplabel         Ds.l 1
00049C50 <AmiBlitz3.ab2@29212> sourceline2          Ds.l 1
00049D50 <AmiBlitz3.ab2@29213> chartab              Ds.b 256
00049DC8 <AmiBlitz3.ab2@29214> tempspace            Ds.b 120
000C9DD8 <AmiBlitz3.ab2@29215> instrtab             Ds.l 65538*2
000D1DD8 <AmiBlitz3.ab2@29217> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000F1DDC <AmiBlitz3.ab2@29218> replacedat           Ds.w 65538
000F9DDC <AmiBlitz3.ab2@29219> variablehash         Ds.l 8192
000F9DE0 <AmiBlitz3.ab2@29220> newinitaddr          Ds.l 1
000F9DE4 <AmiBlitz3.ab2@29221> realbssend           Ds.l 1
000F9DE5 <AmiBlitz3.ab2@29222> saved0               Ds.b 1
000F9E65 <AmiBlitz3.ab2@29223> lastpath             Ds.b 128
000F9EE5 <AmiBlitz3.ab2@29224> lastpath2            Ds.b 128
000F9FAD <AmiBlitz3.ab2@29225> fpustackbase         Ds.w 100
000F9FB1 <AmiBlitz3.ab2@29228> trap15temp           Ds.l 1
000F9FB5 <AmiBlitz3.ab2@29229> trap15temp2          Ds.l 1
000F9FB9 <AmiBlitz3.ab2@29230> templibend           Ds.l 1
000F9FBD <AmiBlitz3.ab2@29231> tempdata1start       Ds.l 1
000F9FBE <AmiBlitz3.ab2@29232> pad2                 Ds.b 1
000F9FC2 <AmiBlitz3.ab2@29233> stacktrack           Ds.l 1
000F9FC6 <AmiBlitz3.ab2@29234> pad                  Ds.l 1
000FA0C6 <AmiBlitz3.ab2@29235> includetemp          Ds.b 256
000FAAC6 <AmiBlitz3.ab2@29236> includetemp2         Ds.b 256*10
000FAAC8 <AmiBlitz3.ab2@29237> funccall             Ds.w 1
000FAACC <AmiBlitz3.ab2@29240> ptr_resfile          Ds.l 1
000FAACE <AmiBlitz3.ab2@29241> button_bin_flags:    Ds.w 1
000FAAD0 <AmiBlitz3.ab2@29242> button_dec_flags:    Ds.w 1
000FAAD4 <AmiBlitz3.ab2@29243> ped_startup_addr:    Ds.l 1
000FAAD5 <AmiBlitz3.ab2@29244> start_without_libs:  Ds.b 1
000FAAD6 <AmiBlitz3.ab2@29245> skip_bytes:          Ds.b 1
000FAAD7 <AmiBlitz3.ab2@29246> iserror              Ds.b 1
000FAAD8 <AmiBlitz3.ab2@29247> Even
000FAADC <AmiBlitz3.ab2@29249> CLIMode:             Dc.l 0
000FAAE0 <AmiBlitz3.ab2@29250> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
