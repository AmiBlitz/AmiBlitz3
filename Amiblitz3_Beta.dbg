00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@289> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@290> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@294> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@304> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@306> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@316> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@317> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@324> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@325> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@326> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@333> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@339> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@344> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@349> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@350> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@351> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2220> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2251> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2284> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2289> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2307> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2314> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2557> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2562> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2581> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2585> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2589> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2725> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2727> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2733> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2737> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2740> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2744> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@49> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@262> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@263> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@265> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@268> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@278> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@280> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@291> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@297> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@301> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@308> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@310> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@311> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@312> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@314> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@320> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@323> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@327> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@331> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@333> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@336> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@338> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@340> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@342> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@345> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@347> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@350> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@351> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@357> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@360> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@364> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@370> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@376> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@378> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@385> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@387> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@389> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@391> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@398> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@403> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@404> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@407> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@417> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@420> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@424> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@426> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@435> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@437> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@439> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@441> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@446> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@453> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@458> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@469> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@471> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@473> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@484> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@516> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@546> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@555> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@567> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@569> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@576> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@578> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@583> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@588> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@591> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@594> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@609> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502C <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503E <hashmap.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00005066 <hashmap.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506C <hashmap.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00005086 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A0 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B2 <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C0 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F4 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00005102 <hashmap.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
0000510C <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511E <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005158 <hashmap.include.ab3@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005168 <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516E <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517E <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E2 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F0 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000051FE <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000520C <hashmap.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525C <hashmap.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005262 <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005266 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005280 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000529A <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B4 <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D4 <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EA <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FE <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005330 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005348 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00005354 <hashmap.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00005362 <hashmap.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005370 <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B2 <hashmap.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BC <hashmap.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C2 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053F0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000540A <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000542A <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543E <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005456 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000547E <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005498 <hashmap.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A6 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B4 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000552A <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005554 <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005598 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055EE <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055FC <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00005654 <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569A <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A0 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A6 <hashmap.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000056CE <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056E0 <hashmap.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F2 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572C <hashmap.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573C <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005742 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00005752 <hashmap.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005758 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575E <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00005776 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057D0 <hashmap.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00005802 <hashmap.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00005816 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000582A <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586A <hashmap.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00005874 <hashmap.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00005882 <hashmap.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000589A <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A0 <hashmap.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A8 <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C8 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058EE <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F8 <hashmap.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005906 <hashmap.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005910 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593C <hashmap.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005950 <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005956 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005964 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
0000599A <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A10 <hashmap.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3C <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A46 <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A62 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A8C <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B12 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B3A <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B56 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B72 <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B80 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B94 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB6 <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD8 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C06 <hashmap.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C36 <hashmap.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3C <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C70 <hashmap.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CB2 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC2 <hashmap.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCC <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDC <hashmap.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE2 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEA <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF0 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1E <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D50 <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D88 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9C <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB4 <hashmap.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DDC <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E0E <hashmap.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E38 <hashmap.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E4C <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EA0 <hashmap.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ECA <hashmap.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F0E <hashmap.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F34 <hashmap.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F3A <hashmap.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F58 <hashmap.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F76 <hashmap.include.ab3@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F94 <hashmap.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F9A <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FBC <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FEA <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006012 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00006036 <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608C <hashmap.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000060DE <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006134 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006144 <hashmap.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00006196 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061BE <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061E4 <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006200 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006208 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006230 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625E <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006286 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
0000628E <hashmap.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000062B2 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062E6 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00006302 <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630C <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006320 <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006340 <hashmap.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000635C <hashmap.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636A <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006378 <hashmap.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637E <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00006396 <hashmap.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A6 <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D4 <hashmap.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006430 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
000064A6 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006502 <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006508 <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@351> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00006546 <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000654C <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
0000656C <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006576 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006588 <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006598 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
000065A2 <hashmap.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BC <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D6 <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065DC <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E2 <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F4 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006622 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00006636 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00006672 <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006698 <hashmap.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000066A6 <hashmap.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E2 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F6 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006732 <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675C <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006766 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
0000678A <hashmap.include.ab3@394> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C2 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C8 <hashmap.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D0 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E4 <hashmap.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EE <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006816 <hashmap.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
0000683E <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006850 <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687C <hashmap.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B0 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068DC <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693E <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006946 <hashmap.include.ab3@413> XINCLUDE "/Shared/preprocessor.include.ab3"
00006974 <hashmap.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697C <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006986 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B0 <hashmap.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BA <hashmap.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000069C0 <hashmap.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000069EA <hashmap.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F0 <hashmap.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1A <hashmap.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A28 <hashmap.include.ab3@436> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A38 <hashmap.include.ab3@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A42 <hashmap.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <hashmap.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A76 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A90 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE4 <preprocessor.include.ab3@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE8 <preprocessor.include.ab3@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B02 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1C <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B26 <preprocessor.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B40 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5A <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B74 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8E <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB2 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB8 <preprocessor.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BE2 <preprocessor.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BFC <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0C <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C16 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C24 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C46 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C7A <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C96 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CA0 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBC <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CCA <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDE <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D00 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D22 <preprocessor.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D40 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6E <preprocessor.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D74 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D84 <preprocessor.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D9E <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC8 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF2 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E08 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E18 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E34 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E50 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6C <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E88 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA4 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC0 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDC <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF8 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F14 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F30 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4C <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F68 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F84 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA0 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBC <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD8 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF4 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00007010 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702C <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007048 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007064 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00007080 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709C <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B8 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D4 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F0 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710C <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007128 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00007144 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007160 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717C <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007198 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B4 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D0 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EC <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007208 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00007224 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007240 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725C <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007278 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007294 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B0 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CC <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E8 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007304 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007320 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733C <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007358 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007374 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007390 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AC <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C8 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E4 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007400 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741C <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007438 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007454 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007470 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748C <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A8 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C4 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E0 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FC <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007518 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
00007534 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007550 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756C <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007588 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A4 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C0 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DC <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F8 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00007614 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007630 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764C <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007668 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007684 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A0 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BC <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D8 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F4 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007710 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772C <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007748 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007764 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007780 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779C <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B8 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D4 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F0 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780C <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007828 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00007844 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007860 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787C <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007898 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B4 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D0 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EC <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007908 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00007924 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007940 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795C <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007978 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007994 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B0 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CC <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E8 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A04 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A20 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3C <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A58 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A74 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A90 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AAC <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC8 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE4 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B00 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B1C <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B38 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B54 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B70 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B8C <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA8 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC4 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE0 <preprocessor.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BFC <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C18 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C20 <preprocessor.include.ab3@213> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2A <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C34 <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C3A <preprocessor.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C68 <preprocessor.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C84 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB6 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CC0 <preprocessor.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE2 <preprocessor.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEC <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF6 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D00 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D1A <preprocessor.include.ab3@263> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D48 <preprocessor.include.ab3@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D64 <preprocessor.include.ab3@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D72 <preprocessor.include.ab3@269> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DB4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCE <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DF4 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E16 <preprocessor.include.ab3@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3A <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E40 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4E <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E54 <preprocessor.include.ab3@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5C <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E62 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7E <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA4 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECC <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED6 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEA <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFE <preprocessor.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0E <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F28 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F56 <preprocessor.include.ab3@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6A <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F92 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA6 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FCE <preprocessor.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD8 <preprocessor.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE6 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00008004 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
0000801A <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00008020 <preprocessor.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00008034 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000804C <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00008066 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00008074 <preprocessor.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000807A <preprocessor.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808E <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00008098 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A0 <preprocessor.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B4 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DC <preprocessor.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FA <preprocessor.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008118 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008140 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008162 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008176 <preprocessor.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00008194 <preprocessor.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C8 <preprocessor.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F0 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008212 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00008242 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008270 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A2 <preprocessor.include.ab3@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B0 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B6 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C6 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F2 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00008314 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833C <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837E <preprocessor.include.ab3@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00008384 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00008392 <preprocessor.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A6 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000083AE <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CC <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E0 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00008406 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000841E <preprocessor.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843A <preprocessor.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00008444 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008460 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008472 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A0 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084DC <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EC <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F2 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F8 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008510 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008520 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E0 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00008616 <preprocessor.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00008626 <preprocessor.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
00008634 <preprocessor.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863A <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864A <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008674 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867A <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000086A6 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B6 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008728 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
0000874C <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008760 <preprocessor.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00008770 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878E <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879C <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C0 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E4 <preprocessor.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F2 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008834 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883A <preprocessor.include.ab3@438> XINCLUDE "/Shared/preprocessor.include.ab3"
00008848 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@441> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008884 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0000888A <preprocessor.include.ab3@444> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B4 <preprocessor.include.ab3@447> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
000088CE <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000088E2 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008908 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
0000892A <preprocessor.include.ab3@458> XINCLUDE "/Shared/preprocessor.include.ab3"
00008952 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
00008958 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008966 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
0000896C <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008980 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008990 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
000089A6 <preprocessor.include.ab3@466> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BE <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DA <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000089E4 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A00 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A2E <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A6A <preprocessor.include.ab3@473> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7A <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A88 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A8E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9E <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC8 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ACE <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AFA <preprocessor.include.ab3@481> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0A <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B1A <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B38 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B46 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B7C <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BA0 <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BB4 <preprocessor.include.ab3@492> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BC4 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE2 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BF0 <preprocessor.include.ab3@496> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C14 <preprocessor.include.ab3@497> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C38 <preprocessor.include.ab3@498> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C3E <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4E <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C54 <preprocessor.include.ab3@504> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C76 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C7E <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CB4 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD0 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CD6 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D0C <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D28 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D50 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D6E <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D8C <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DBA <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E1C <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E36 <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E50 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E5A <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E98 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9C <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EA6 <preprocessor.include.ab3@532> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ED4 <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EF4 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F0C <preprocessor.include.ab3@535> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F6A <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F96 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA8 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FB8 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FD0 <preprocessor.include.ab3@540> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FD6 <preprocessor.include.ab3@542> XINCLUDE "/Shared/preprocessor.include.ab3"
00009010 <preprocessor.include.ab3@543> XINCLUDE "/Shared/preprocessor.include.ab3"
0000901A <preprocessor.include.ab3@545> XINCLUDE "/Shared/preprocessor.include.ab3"
00009020 <preprocessor.include.ab3@546> XINCLUDE "/Shared/preprocessor.include.ab3"
0000902A <preprocessor.include.ab3@547> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <preprocessor.include.ab3@548> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000903C <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000903C <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009060 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
00009068 <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
00009096 <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090C4 <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
00009134 <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009142 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009192 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009192 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009192 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009192 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091B6 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091DE <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009202 <asl.include.ab3@96> XINCLUDE "PE/logging.include.ab3"
00009230 <asl.include.ab3@295> XINCLUDE "PE/logging.include.ab3"
0000944E <asl.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000947C <asl.include.ab3@299> XINCLUDE "PE/logging.include.ab3"
000094A8 <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000094E4 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009510 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000953C <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
00009568 <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
00009594 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095C0 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000095EC <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
00009618 <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
00009644 <asl.include.ab3@310> XINCLUDE "PE/logging.include.ab3"
000096CE <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
00009758 <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
000097F6 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009840 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
00009880 <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
00009886 <asl.include.ab3@317> XINCLUDE "PE/logging.include.ab3"
000098D0 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009910 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
0000993A <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009940 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000996A <asl.include.ab3@324> XINCLUDE "PE/logging.include.ab3"
00009994 <asl.include.ab3@326> XINCLUDE "PE/logging.include.ab3"
000099BE <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099C8 <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099E6 <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A08 <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A36 <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A64 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009A92 <asl.include.ab3@334> XINCLUDE "PE/logging.include.ab3"
00009AD8 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B1E <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B64 <asl.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
00009B9C <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009C9A <asl.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
00009CB8 <asl.include.ab3@344> XINCLUDE "PE/logging.include.ab3"
00009CC2 <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CE8 <asl.include.ab3@347> XINCLUDE "PE/logging.include.ab3"
00009CFA <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D28 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D50 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009D62 <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DB8 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DEE <asl.include.ab3@354> XINCLUDE "PE/logging.include.ab3"
00009DFE <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009E04 <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E16 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E20 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E5A <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009E60 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009EB8 <asl.include.ab3@362> XINCLUDE "PE/logging.include.ab3"
00009ED6 <asl.include.ab3@364> XINCLUDE "PE/logging.include.ab3"
00009EDC <asl.include.ab3@367> XINCLUDE "PE/logging.include.ab3"
00009EEC <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009EFC <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F0C <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F1C <asl.include.ab3@373> XINCLUDE "PE/logging.include.ab3"
00009F2C <asl.include.ab3@375> XINCLUDE "PE/logging.include.ab3"
00009F36 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F4A <asl.include.ab3@378> XINCLUDE "PE/logging.include.ab3"
00009F60 <asl.include.ab3@394> XINCLUDE "PE/logging.include.ab3"
00009F88 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F92 <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009FA4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FDE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009FE8 <asl.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A012 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A02A <asl.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A07C <asl.include.ab3@439> XINCLUDE "PE/logging.include.ab3"
0000A0AA <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A13C <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A182 <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A214 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A22E <asl.include.ab3@445> XINCLUDE "PE/logging.include.ab3"
0000A22E <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A244 <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A25A <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A270 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A286 <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A292 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A29E <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2AA <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2B6 <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2DE <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A306 <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A32E <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A352 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A376 <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A390 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A3A2 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A3A6 <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A3A8 <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3AA <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3BC <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3BE <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3C0 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3C2 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3CE <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3D4 <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3EE <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A40C <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A412 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A42C <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A448 <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A46E <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A48E <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A498 <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4C4 <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4E6 <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A500 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A506 <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A540 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A55E <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A564 <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A582 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A588 <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5AA <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5CA <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A602 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A61E <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A624 <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A62A <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A630 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A636 <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A652 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A69E <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A6A4 <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6DE <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6EA <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A706 <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A70C <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A746 <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A750 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A756 <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A774 <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A7A2 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A7A8 <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7BE <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7C6 <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A822 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A830 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A836 <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A872 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A878 <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A892 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A8A4 <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A902 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A93C <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A976 <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A994 <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9B2 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9C8 <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9E4 <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9FE <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA7C <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA8E <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AAA4 <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AAD8 <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AAE8 <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAEC <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB1A <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB34 <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB46 <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB66 <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB7C <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABB4 <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABDE <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000AC08 <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC20 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC36 <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC7E <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC9E <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000ACA6 <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACE4 <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACF0 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACFA <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD0C <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD12 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD20 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD48 <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD5C <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD84 <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD98 <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADC0 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADD4 <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADFC <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADFE <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE22 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE5A <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEE4 <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF0C <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF3C <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF74 <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFCC <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B024 <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B0A4 <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0D8 <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B10C <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B112 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B120 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B154 <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B17C <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B234 <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2B4 <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2E8 <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B308 <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B30E <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B314 <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3E4 <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3F8 <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4B0 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B530 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B620 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B62A <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B65E <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B67E <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B684 <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B68A <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B75A <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B76E <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B7A2 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7CA <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B882 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B902 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B936 <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B956 <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B95C <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B962 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA32 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA46 <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAFE <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB7E <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBB2 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBD2 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBD8 <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBDE <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCAE <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCB4 <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCEE <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCF0 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCF6 <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD8E <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BDA0 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDB6 <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE20 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE8A <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BEA4 <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEC0 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BEDE <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BF02 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF1E <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF40 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF46 <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF6C <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF88 <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF9A <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFF8 <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C030 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C036 <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C07E <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C098 <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C0A6 <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0AC <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0B2 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0C4 <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1B0 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1B6 <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1FC <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C208 <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C26E <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2B4 <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2FC <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C364 <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C36A <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C3A4 <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3AA <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C416 <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C42A <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C444 <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C44A <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C470 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C48C <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4EA <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4EE <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C510 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C516 <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C532 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C552 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C590 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5DE <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C614 <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C61A <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C620 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C650 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C656 <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C65C <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C66E <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6CC <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C704 <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C70A <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C752 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C76C <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C77A <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C780 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C786 <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C798 <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C79E <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C7A4 <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C802 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C854 <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C85A <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C874 <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C87A <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8C2 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C900 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C90A <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C910 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C936 <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C93C <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C962 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9C2 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9DC <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9E6 <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000CA00 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA0A <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA22 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA52 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA6E <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA7C <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA82 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CABC <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CAC6 <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CACC <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAEA <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAF0 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CB02 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB10 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB2E <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB64 <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB76 <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBC0 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCAA <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCC8 <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCEE <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD0A <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD36 <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD40 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD6E <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD88 <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CDA4 <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDAA <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDE4 <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDEA <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDF0 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDF6 <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE96 <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE9C <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF3E <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF44 <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF88 <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF8E <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CFA8 <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFC6 <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFCC <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFE6 <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000D006 <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0BA <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0C0 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0C6 <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0F0 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0FC <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D102 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D11C <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D124 <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D12C <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D142 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D15A <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D16C <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D178 <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D17E <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D186 <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1BE <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1D0 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1F4 <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D206 <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D212 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D218 <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D228 <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D246 <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D258 <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D2A4 <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2AA <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2D4 <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2EC <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D31A <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D32E <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D344 <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D364 <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D37A <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D384 <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D39E <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3C0 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3D8 <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3FA <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D400 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D432 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D446 <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D45E <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D476 <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D496 <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4C6 <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4F6 <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D508 <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D510 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D53A <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D544 <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D55E <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D578 <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D596 <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5B6 <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D600 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D61A <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D62C <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D662 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D674 <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D67C <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D6A4 <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6AA <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6D2 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6F6 <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D70C <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D71C <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D720 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D736 <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D760 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D768 <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D768 <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D806 <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D80C <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D812 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D818 <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D852 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D884 <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D892 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8C2 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC32 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC40 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC46 <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DED8 <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEF2 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF2C <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF7E <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF8C <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFE2 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFE8 <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E062 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0D6 <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0F0 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0F0 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E118 <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E132 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E13C <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E14E <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E172 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E180 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E18C <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E190 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1AE <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1C8 <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1E8 <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1F2 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E200 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E20C <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E21A <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E226 <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E232 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E244 <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E25E <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E264 <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E27E <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E288 <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E292 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E2A2 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2AC <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2BE <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2DE <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2E4 <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2E8 <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2FE <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E304 <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E30E <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E344 <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E34E <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E352 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E380 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E380 <prefixtree.include.ab3@156> XINCLUDE "translation.include.ab3"
0000E39A <prefixtree.include.ab3@221> XINCLUDE "translation.include.ab3"
0000E3A4 <prefixtree.include.ab3@223> XINCLUDE "translation.include.ab3"
0000E3CC <prefixtree.include.ab3@224> XINCLUDE "translation.include.ab3"
0000E3EE <prefixtree.include.ab3@225> XINCLUDE "translation.include.ab3"
0000E406 <prefixtree.include.ab3@226> XINCLUDE "translation.include.ab3"
0000E41C <prefixtree.include.ab3@227> XINCLUDE "translation.include.ab3"
0000E420 <prefixtree.include.ab3@230> XINCLUDE "translation.include.ab3"
0000E43A <prefixtree.include.ab3@283> XINCLUDE "translation.include.ab3"
0000E45A <prefixtree.include.ab3@284> XINCLUDE "translation.include.ab3"
0000E464 <prefixtree.include.ab3@285> XINCLUDE "translation.include.ab3"
0000E47E <prefixtree.include.ab3@286> XINCLUDE "translation.include.ab3"
0000E48C <prefixtree.include.ab3@287> XINCLUDE "translation.include.ab3"
0000E49A <prefixtree.include.ab3@288> XINCLUDE "translation.include.ab3"
0000E4A8 <prefixtree.include.ab3@289> XINCLUDE "translation.include.ab3"
0000E4B6 <prefixtree.include.ab3@290> XINCLUDE "translation.include.ab3"
0000E4C2 <prefixtree.include.ab3@291> XINCLUDE "translation.include.ab3"
0000E4CC <prefixtree.include.ab3@292> XINCLUDE "translation.include.ab3"
0000E4DA <prefixtree.include.ab3@293> XINCLUDE "translation.include.ab3"
0000E4E8 <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E4F6 <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E510 <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E51E <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E52E <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E53E <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E54E <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E55C <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E56C <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E58A <prefixtree.include.ab3@322> XINCLUDE "translation.include.ab3"
0000E590 <prefixtree.include.ab3@323> XINCLUDE "translation.include.ab3"
0000E59A <prefixtree.include.ab3@324> XINCLUDE "translation.include.ab3"
0000E5BA <prefixtree.include.ab3@325> XINCLUDE "translation.include.ab3"
0000E5E8 <prefixtree.include.ab3@326> XINCLUDE "translation.include.ab3"
0000E606 <prefixtree.include.ab3@327> XINCLUDE "translation.include.ab3"
0000E610 <prefixtree.include.ab3@328> XINCLUDE "translation.include.ab3"
0000E622 <prefixtree.include.ab3@329> XINCLUDE "translation.include.ab3"
0000E64E <prefixtree.include.ab3@330> XINCLUDE "translation.include.ab3"
0000E664 <prefixtree.include.ab3@331> XINCLUDE "translation.include.ab3"
0000E670 <prefixtree.include.ab3@333> XINCLUDE "translation.include.ab3"
0000E67C <prefixtree.include.ab3@334> XINCLUDE "translation.include.ab3"
0000E682 <prefixtree.include.ab3@335> XINCLUDE "translation.include.ab3"
0000E688 <prefixtree.include.ab3@336> XINCLUDE "translation.include.ab3"
0000E68E <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E6C6 <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E6CC <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E6D2 <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6DC <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6E2 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E714 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E730 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E74A <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E75E <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E7AE <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E7D0 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E7F2 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E7FE <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E806 <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E80E <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E81E <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E824 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E832 <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E854 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E880 <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E892 <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E898 <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E8C0 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E8E4 <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E90C <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E940 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E950 <prefixtree.include.ab3@392> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E968 <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E97C <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E982 <prefixtree.include.ab3@396> XINCLUDE "translation.include.ab3"
0000E9A2 <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E9A8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E9B0 <prefixtree.include.ab3@400> XINCLUDE "translation.include.ab3"
0000E9EA <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EA10 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EA28 <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA5C <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA64 <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA72 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA78 <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA90 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA96 <prefixtree.include.ab3@412> XINCLUDE "translation.include.ab3"
0000EA9C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EAB6 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EABC <prefixtree.include.ab3@417> XINCLUDE "translation.include.ab3"
0000EAC2 <prefixtree.include.ab3@419> XINCLUDE "translation.include.ab3"
0000EAC8 <prefixtree.include.ab3@421> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@422> XINCLUDE "translation.include.ab3"
0000EAE4 <prefixtree.include.ab3@423> XINCLUDE "translation.include.ab3"
0000EB1E <prefixtree.include.ab3@425> XINCLUDE "translation.include.ab3"
0000EB44 <prefixtree.include.ab3@426> XINCLUDE "translation.include.ab3"
0000EB5C <prefixtree.include.ab3@427> XINCLUDE "translation.include.ab3"
0000EB68 <prefixtree.include.ab3@430> XINCLUDE "translation.include.ab3"
0000EB74 <prefixtree.include.ab3@431> XINCLUDE "translation.include.ab3"
0000EB80 <prefixtree.include.ab3@432> XINCLUDE "translation.include.ab3"
0000EB8C <prefixtree.include.ab3@433> XINCLUDE "translation.include.ab3"
0000EB98 <prefixtree.include.ab3@434> XINCLUDE "translation.include.ab3"
0000EBA2 <prefixtree.include.ab3@435> XINCLUDE "translation.include.ab3"
0000EBAA <prefixtree.include.ab3@437> XINCLUDE "translation.include.ab3"
0000EBC4 <prefixtree.include.ab3@438> XINCLUDE "translation.include.ab3"
0000EC02 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EC08 <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EC6E <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000ECAE <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000ED04 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000ED76 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000ED82 <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000ED90 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EDD6 <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EE20 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EE58 <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EEAC <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EEB2 <prefixtree.include.ab3@499> XINCLUDE "translation.include.ab3"
0000EEB8 <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EEC6 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EECE <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000EF08 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EF2E <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000EF46 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000EF7C <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000EF92 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000EFA0 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000EFB8 <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000EFF0 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F016 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F05E <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F064 <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F07E <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F08A <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F090 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F0BC <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F0DE <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F0E6 <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F120 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F146 <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F15E <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F198 <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F1C2 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F1DA <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F20A <prefixtree.include.ab3@537> XINCLUDE "translation.include.ab3"
0000F236 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F252 <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F26E <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F2AC <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F2E8 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F354 <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F382 <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F3B0 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F3F8 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F412 <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F45A <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F478 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F496 <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F4B0 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F4BC <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F4C2 <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F4EE <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F506 <prefixtree.include.ab3@562> XINCLUDE "translation.include.ab3"
0000F50C <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@566> XINCLUDE "translation.include.ab3"
0000F52E <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F53C <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F54A <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F552 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F57E <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F5A6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F5CE <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F63A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F64A <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F676 <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000F6CC <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F6DA <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F6E8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000F6EE <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000F742 <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000F862 <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000F8B2 <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000F908 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000F974 <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000F97C <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000F9B6 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000F9DC <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000F9F4 <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FA2E <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FA58 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FA70 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FA94 <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FAF0 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FAF6 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FB58 <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FB84 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FBBC <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FBCA <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FBD8 <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FC1C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FC88 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FCB6 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FCCA <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0000FCFC <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0000FD46 <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
0000FD56 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
0000FD8A <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0000FDAC <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0000FDBC <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
0000FDC4 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0000FE08 <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0000FE74 <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
0000FEA2 <prefixtree.include.ab3@632> XINCLUDE "translation.include.ab3"
0000FEC6 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0000FF0A <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
0000FF76 <prefixtree.include.ab3@636> XINCLUDE "translation.include.ab3"
0000FFA4 <prefixtree.include.ab3@637> XINCLUDE "translation.include.ab3"
0000FFD2 <prefixtree.include.ab3@638> XINCLUDE "translation.include.ab3"
0000FFDA <prefixtree.include.ab3@639> XINCLUDE "translation.include.ab3"
00010008 <prefixtree.include.ab3@640> XINCLUDE "translation.include.ab3"
0001007A <prefixtree.include.ab3@641> XINCLUDE "translation.include.ab3"
00010080 <prefixtree.include.ab3@642> XINCLUDE "translation.include.ab3"
000100AE <prefixtree.include.ab3@643> XINCLUDE "translation.include.ab3"
00010120 <prefixtree.include.ab3@644> XINCLUDE "translation.include.ab3"
0001013E <prefixtree.include.ab3@647> XINCLUDE "translation.include.ab3"
00010162 <prefixtree.include.ab3@648> XINCLUDE "translation.include.ab3"
0001017A <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
00010180 <prefixtree.include.ab3@650> XINCLUDE "translation.include.ab3"
00010186 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
00010188 <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
00010192 <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
000101BE <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000101E8 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
000101EE <prefixtree.include.ab3@680> XINCLUDE "translation.include.ab3"
000101FC <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010236 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
0001025C <prefixtree.include.ab3@684> XINCLUDE "translation.include.ab3"
00010274 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
000102AE <prefixtree.include.ab3@686> XINCLUDE "translation.include.ab3"
000102D8 <prefixtree.include.ab3@687> XINCLUDE "translation.include.ab3"
000102F0 <prefixtree.include.ab3@689> XINCLUDE "translation.include.ab3"
00010308 <prefixtree.include.ab3@690> XINCLUDE "translation.include.ab3"
00010340 <prefixtree.include.ab3@691> XINCLUDE "translation.include.ab3"
00010348 <prefixtree.include.ab3@693> XINCLUDE "translation.include.ab3"
00010382 <prefixtree.include.ab3@695> XINCLUDE "translation.include.ab3"
00010394 <prefixtree.include.ab3@697> XINCLUDE "translation.include.ab3"
000103BA <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
000103D0 <prefixtree.include.ab3@699> XINCLUDE "translation.include.ab3"
000103F6 <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
0001040A <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
00010422 <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
00010434 <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
0001043E <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010452 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001046C <prefixtree.include.ab3@726> XINCLUDE "translation.include.ab3"
00010488 <prefixtree.include.ab3@728> XINCLUDE "translation.include.ab3"
0001049A <prefixtree.include.ab3@729> XINCLUDE "translation.include.ab3"
000104B6 <prefixtree.include.ab3@730> XINCLUDE "translation.include.ab3"
000104F2 <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
0001050E <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
0001052E <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
00010538 <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
0001053E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
00010548 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010550 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010556 <prefixtree.include.ab3@740> XINCLUDE "translation.include.ab3"
00010584 <prefixtree.include.ab3@759> XINCLUDE "translation.include.ab3"
000105AC <prefixtree.include.ab3@760> XINCLUDE "translation.include.ab3"
000105EC <prefixtree.include.ab3@761> XINCLUDE "translation.include.ab3"
00010604 <prefixtree.include.ab3@762> XINCLUDE "translation.include.ab3"
0001064A <prefixtree.include.ab3@763> XINCLUDE "translation.include.ab3"
00010674 <prefixtree.include.ab3@766> XINCLUDE "translation.include.ab3"
000106A2 <prefixtree.include.ab3@767> XINCLUDE "translation.include.ab3"
000106BC <prefixtree.include.ab3@966> XINCLUDE "translation.include.ab3"
000106C2 <prefixtree.include.ab3@967> XINCLUDE "translation.include.ab3"
000106DA <prefixtree.include.ab3@968> XINCLUDE "translation.include.ab3"
000106E4 <prefixtree.include.ab3@969> XINCLUDE "translation.include.ab3"
000106F6 <prefixtree.include.ab3@970> XINCLUDE "translation.include.ab3"
0001072E <prefixtree.include.ab3@971> XINCLUDE "translation.include.ab3"
0001073C <prefixtree.include.ab3@972> XINCLUDE "translation.include.ab3"
00010748 <prefixtree.include.ab3@973> XINCLUDE "translation.include.ab3"
00010764 <prefixtree.include.ab3@974> XINCLUDE "translation.include.ab3"
00010786 <prefixtree.include.ab3@975> XINCLUDE "translation.include.ab3"
000107A8 <prefixtree.include.ab3@976> XINCLUDE "translation.include.ab3"
000107CA <prefixtree.include.ab3@977> XINCLUDE "translation.include.ab3"
000107EC <prefixtree.include.ab3@978> XINCLUDE "translation.include.ab3"
00010808 <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
00010826 <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
0001083A <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
00010840 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010842 <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
00010848 <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
00010852 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010858 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010876 <prefixtree.include.ab3@1007> XINCLUDE "translation.include.ab3"
0001087C <prefixtree.include.ab3@1008> XINCLUDE "translation.include.ab3"
000108A0 <prefixtree.include.ab3@1009> XINCLUDE "translation.include.ab3"
000108BE <prefixtree.include.ab3@1010> XINCLUDE "translation.include.ab3"
000108EC <prefixtree.include.ab3@1011> XINCLUDE "translation.include.ab3"
0001091A <prefixtree.include.ab3@1012> XINCLUDE "translation.include.ab3"
00010948 <prefixtree.include.ab3@1013> XINCLUDE "translation.include.ab3"
00010976 <prefixtree.include.ab3@1014> XINCLUDE "translation.include.ab3"
000109AA <prefixtree.include.ab3@1015> XINCLUDE "translation.include.ab3"
000109BA <prefixtree.include.ab3@1016> XINCLUDE "translation.include.ab3"
000109C4 <prefixtree.include.ab3@1018> XINCLUDE "translation.include.ab3"
000109CA <prefixtree.include.ab3@1019> XINCLUDE "translation.include.ab3"
000109CA <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A14 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A34 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A3E <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A52 <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A98 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010ADE <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B24 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B2E <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B4A <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B74 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BF2 <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C70 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CEE <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D6C <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DEA <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E68 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EE6 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F64 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FE2 <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00011060 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110E4 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00011114 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011170 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
0001119C <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011266 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011274 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112B2 <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011336 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011360 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001137E <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011398 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
000113A2 <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113AE <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113BE <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113CE <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113DE <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113EE <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113F2 <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011430 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011488 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114E4 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001156E <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115EC <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
00011606 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011634 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011670 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001173E <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
0001180C <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011858 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118D6 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011954 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119B2 <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A48 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A80 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011ADE <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B66 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B6E <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD8 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C44 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C82 <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D0A <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D36 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D92 <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E5A <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EBE <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EC4 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF8 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FC6 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00012094 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120BE <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120DC <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
0001210A <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012146 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121B6 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121BE <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
00012210 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012238 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012250 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
00012304 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
00012312 <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012368 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123C6 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123CC <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012450 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124D4 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012558 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125D6 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012654 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126D2 <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012750 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127CE <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
0001284C <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128CA <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128F4 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
00012912 <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012940 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012984 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
0001298A <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
000129A4 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129C0 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129F4 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A18 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A40 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AAC <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B0A <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B68 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BB4 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C0E <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C14 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C1A <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C24 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C2E <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C48 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C76 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C7C <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CC0 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CDA <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CEA <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CF4 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012D00 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D0A <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D2E <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D76 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DBE <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012E06 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E1C <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E30 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E3A <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E44 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E5E <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E88 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012ECC <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EE6 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F44 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F5E <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F76 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F80 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F9C <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FAA <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FB6 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00013002 <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00013054 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
000130A6 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130BA <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130CA <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130D0 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130D2 <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D8 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130E2 <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130EC <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00013106 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013130 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013146 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013150 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C8 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
00013204 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
00013214 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013234 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013254 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013274 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132AA <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132D2 <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
0001330A <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001336E <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001338E <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
0001340A <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
00013442 <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B8 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D8 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013554 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
0001358C <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
00013602 <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
00013622 <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001369E <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136CA <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136D2 <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013718 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013738 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
00013742 <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
0001375A <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
0001376A <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
000137A2 <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137D4 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137E6 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013868 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
00013872 <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
000138A4 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138D6 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
00013902 <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001392E <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013950 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
0001395A <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013974 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013974 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
0001398A <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
000139A6 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A8 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139D6 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139D6 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139D6 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139F0 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139FA <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A1C <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A34 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A4E <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A80 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A8A <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A90 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013AA2 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B16 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B1C <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B56 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B60 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B66 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B7C <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B86 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B9E <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013BA0 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BCE <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE8 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BFE <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C32 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C36 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C50 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C66 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C9A <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C9E <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB8 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CCE <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013D02 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013D06 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D20 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D36 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D6A <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D6E <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D88 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D9E <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DD6 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DEC <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013E02 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E10 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E1E <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E28 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E3A <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E4C <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E52 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E8C <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E90 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013EA6 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EBC <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC8 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ED4 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013EDC <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EE4 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE8 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F12 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F3E <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F50 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F68 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F7E <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F84 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FBA <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FF2 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
0001402A <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00014062 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
0001409A <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140D2 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
0001410A <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00014142 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
0001417A <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141B2 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141EA <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
00014222 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
0001425A <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
0001428E <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00014298 <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
000142A2 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142D6 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142E0 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142E4 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014318 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014336 <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
00014340 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
0001434C <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014352 <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
0001435E <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014364 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014370 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
00014376 <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
0001437C <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143B6 <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
000143BC <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143D2 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143DC <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143E2 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143E8 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143E9 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143EB <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143EE <CLIModeSupport.ab3@118> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@119> XINCLUDE "CLIModeSupport.ab3"
000143F2 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143F4 <CLIModeSupport.ab3@123> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@128> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@129> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@156> XINCLUDE "CLIModeSupport.ab3"
00014406 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
0001440A <CLIModeSupport.ab3@159> XINCLUDE "CLIModeSupport.ab3"
0001440C <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014410 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
00014416 <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
0001441A <CLIModeSupport.ab3@173> XINCLUDE "CLIModeSupport.ab3"
0001441C <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
00014422 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@179> XINCLUDE "CLIModeSupport.ab3"
00014426 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014428 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
0001442A <CLIModeSupport.ab3@184> XINCLUDE "CLIModeSupport.ab3"
0001442C <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@187> XINCLUDE "CLIModeSupport.ab3"
00014438 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001443A <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
0001443E <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014448 <CLIModeSupport.ab3@200> XINCLUDE "CLIModeSupport.ab3"
0001444E <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014452 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014456 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
0001445C <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
00014460 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
00014466 <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
0001446C <CLIModeSupport.ab3@216> XINCLUDE "CLIModeSupport.ab3"
00014470 <CLIModeSupport.ab3@217> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@222> XINCLUDE "CLIModeSupport.ab3"
00014484 <CLIModeSupport.ab3@223> XINCLUDE "CLIModeSupport.ab3"
00014488 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@230> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@231> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@238> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144AC <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
000144B0 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
000144B6 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000144BA <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000144C0 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
000144C2 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
000144C6 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
000144CA <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
000144CE <CLIModeSupport.ab3@253> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@254> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
000144DA <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
000144DE <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
000144E2 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
000144E8 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
000144EA <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@264> XINCLUDE "CLIModeSupport.ab3"
000144F2 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
000144F6 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
000144FA <CLIModeSupport.ab3@269> XINCLUDE "CLIModeSupport.ab3"
000144FE <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014502 <CLIModeSupport.ab3@273> XINCLUDE "CLIModeSupport.ab3"
00014506 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
0001450A <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@278> XINCLUDE "CLIModeSupport.ab3"
00014516 <CLIModeSupport.ab3@279> XINCLUDE "CLIModeSupport.ab3"
0001451A <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014522 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
0001452A <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014538 <CLIModeSupport.ab3@289> XINCLUDE "CLIModeSupport.ab3"
0001453A <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
0001453E <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014542 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014548 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
00014552 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@300> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
00014560 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
0001456A <CLIModeSupport.ab3@306> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@310> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
00014574 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@316> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
0001457E <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
00014580 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00014594 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
00014596 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
0001459A <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
0001459C <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000145A2 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000145AC <CLIModeSupport.ab3@342> XINCLUDE "CLIModeSupport.ab3"
000145AE <CLIModeSupport.ab3@343> XINCLUDE "CLIModeSupport.ab3"
000145B2 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
000145B6 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
000145BC <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
000145C2 <CLIModeSupport.ab3@350> XINCLUDE "CLIModeSupport.ab3"
000145C6 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
000145CA <CLIModeSupport.ab3@353> XINCLUDE "CLIModeSupport.ab3"
000145D0 <CLIModeSupport.ab3@356> XINCLUDE "CLIModeSupport.ab3"
000145D4 <CLIModeSupport.ab3@357> XINCLUDE "CLIModeSupport.ab3"
000145DA <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
000145DE <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
000145E2 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
000145E8 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@366> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@369> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@370> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@372> XINCLUDE "CLIModeSupport.ab3"
0001460A <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@378> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@379> XINCLUDE "CLIModeSupport.ab3"
00014614 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@384> XINCLUDE "CLIModeSupport.ab3"
0001461C <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
00014620 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
00014622 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
0001462C <CLIModeSupport.ab3@391> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
00014630 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@397> XINCLUDE "CLIModeSupport.ab3"
00014636 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
0001463A <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@413> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@416> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00014662 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00014664 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@429> XINCLUDE "CLIModeSupport.ab3"
0001466A <CLIModeSupport.ab3@430> XINCLUDE "CLIModeSupport.ab3"
0001466C <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
0001466E <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
00014684 <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
0001468A <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
000146C8 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
000146CC <CLIModeSupport.ab3@441> XINCLUDE "CLIModeSupport.ab3"
000146D6 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
000146D8 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
0001470C <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
0001471C <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
0001471E <CLIModeSupport.ab3@448> XINCLUDE "CLIModeSupport.ab3"
00014756 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
0001478E <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
000147C6 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
000147D0 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
000147D6 <CLIModeSupport.ab3@454> XINCLUDE "CLIModeSupport.ab3"
000147EC <CLIModeSupport.ab3@458> XINCLUDE "CLIModeSupport.ab3"
0001482A <CLIModeSupport.ab3@459> XINCLUDE "CLIModeSupport.ab3"
0001482E <CLIModeSupport.ab3@460> XINCLUDE "CLIModeSupport.ab3"
00014836 <CLIModeSupport.ab3@461> XINCLUDE "CLIModeSupport.ab3"
00014874 <CLIModeSupport.ab3@462> XINCLUDE "CLIModeSupport.ab3"
00014876 <CLIModeSupport.ab3@463> XINCLUDE "CLIModeSupport.ab3"
0001487A <CLIModeSupport.ab3@464> XINCLUDE "CLIModeSupport.ab3"
000148B8 <CLIModeSupport.ab3@466> XINCLUDE "CLIModeSupport.ab3"
000148BC <CLIModeSupport.ab3@467> XINCLUDE "CLIModeSupport.ab3"
000148FA <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
000148FE <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014928 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00014932 <CLIModeSupport.ab3@473> XINCLUDE "CLIModeSupport.ab3"
00014946 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
0001496C <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00014972 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014980 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00014986 <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
000149BE <CLIModeSupport.ab3@480> XINCLUDE "CLIModeSupport.ab3"
000149C2 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
000149EC <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014A12 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014A1C <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014A20 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014A22 <CLIModeSupport.ab3@491> XINCLUDE "CLIModeSupport.ab3"
00014A40 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014A42 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014A48 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014A4E <CLIModeSupport.ab3@495> XINCLUDE "CLIModeSupport.ab3"
00014A78 <CLIModeSupport.ab3@497> XINCLUDE "CLIModeSupport.ab3"
00014A7A <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014AA8 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014AAC <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@501> XINCLUDE "CLIModeSupport.ab3"
00014ADE <CLIModeSupport.ab3@502> XINCLUDE "CLIModeSupport.ab3"
00014B04 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014B14 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014B1A <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014B20 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014B5A <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014B64 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014B7E <CLIModeSupport.ab3@511> XINCLUDE "CLIModeSupport.ab3"
00014B9C <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014BA4 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00014BAA <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00014BB0 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
00014BD2 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00014BEA <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
00014C10 <CLIModeSupport.ab3@530> XINCLUDE "CLIModeSupport.ab3"
00014C3A <CLIModeSupport.ab3@531> XINCLUDE "CLIModeSupport.ab3"
00014C48 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00014C4E <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00014C62 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00014C7A <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00014C88 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00014C9C <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00014CD2 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00014CE0 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00014D10 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00014D1E <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00014D24 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00014D32 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00014D38 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00014D3E <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00014D4C <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00014D4E <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00014D54 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
00014D6A <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
00014D74 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
00014D7A <CLIModeSupport.ab3@555> XINCLUDE "CLIModeSupport.ab3"
00014DA4 <CLIModeSupport.ab3@559> XINCLUDE "CLIModeSupport.ab3"
00014DE2 <CLIModeSupport.ab3@562> XINCLUDE "CLIModeSupport.ab3"
00014DE6 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00014E24 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00014E28 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00014E66 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00014E6A <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00014E72 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
00014E7A <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00014EBE <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
00014ED0 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
00014EDE <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
00014F12 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
00014F36 <CLIModeSupport.ab3@577> XINCLUDE "CLIModeSupport.ab3"
00014F40 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
00014F5A <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00014F6E <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00014FC6 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00015066 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
0001506E <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
000150A6 <CLIModeSupport.ab3@584> XINCLUDE "CLIModeSupport.ab3"
000150AC <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
000150BC <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
000150E4 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
0001510C <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00015114 <CLIModeSupport.ab3@591> XINCLUDE "CLIModeSupport.ab3"
0001511A <CLIModeSupport.ab3@592> XINCLUDE "CLIModeSupport.ab3"
00015122 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
0001512A <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
00015152 <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
0001515A <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
00015162 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
00015168 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
0001516E <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00015174 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
0001517A <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
00015180 <CLIModeSupport.ab3@602> XINCLUDE "CLIModeSupport.ab3"
00015186 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
0001518C <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
00015192 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
0001519A <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
000151A2 <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000151CA <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000151D0 <CLIModeSupport.ab3@609> XINCLUDE "CLIModeSupport.ab3"
000151D6 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
000151DE <CLIModeSupport.ab3@611> XINCLUDE "CLIModeSupport.ab3"
000151FE <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
0001520E <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
0001521E <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
0001522E <CLIModeSupport.ab3@620> XINCLUDE "CLIModeSupport.ab3"
0001523E <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
0001524E <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001525E <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001526E <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001527E <CLIModeSupport.ab3@625> XINCLUDE "CLIModeSupport.ab3"
0001528E <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
0001529E <CLIModeSupport.ab3@627> XINCLUDE "CLIModeSupport.ab3"
000152AE <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
000152BE <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
000152CE <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
000152DE <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
000152EE <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
000152FE <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00015312 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00015324 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015336 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015348 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
0001535A <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015360 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00015372 <CLIModeSupport.ab3@641> XINCLUDE "CLIModeSupport.ab3"
00015384 <CLIModeSupport.ab3@642> XINCLUDE "CLIModeSupport.ab3"
00015396 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
000153A8 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
000153BA <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
000153CC <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
000153EA <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
000153F0 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
000153F6 <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015420 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00015432 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00015466 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
0001547E <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
000154CA <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000154DC <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
00015532 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
000155A4 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
000155AA <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
000155DE <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00015606 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
0001562E <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00015668 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00015680 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00015704 <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
0001571E <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
0001576C <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
0001577C <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
00015784 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
00015798 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
000157DE <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000157E4 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
0001582E <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00015898 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
000158FE <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00015932 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
0001595E <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
000159AC <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000159D0 <CLIModeSupport.ab3@687> XINCLUDE "CLIModeSupport.ab3"
000159D6 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000159E4 <CLIModeSupport.ab3@690> XINCLUDE "CLIModeSupport.ab3"
00015A42 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
00015AA0 <CLIModeSupport.ab3@693> XINCLUDE "CLIModeSupport.ab3"
00015ACA <CLIModeSupport.ab3@694> XINCLUDE "CLIModeSupport.ab3"
00015AD4 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00015ADC <CLIModeSupport.ab3@696> XINCLUDE "CLIModeSupport.ab3"
00015B1A <CLIModeSupport.ab3@697> XINCLUDE "CLIModeSupport.ab3"
00015B66 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00015B78 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00015BCE <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00015C46 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
00015C4C <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00015C80 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00015CA8 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00015CDE <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00015CEC <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
00015CFA <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00015D6E <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
00015D74 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00015DBE <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00015E08 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00015E38 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00015E68 <CLIModeSupport.ab3@715> XINCLUDE "CLIModeSupport.ab3"
00015E92 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00015EE4 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00015F3A <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00015F8A <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00015FF0 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
0001605C <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016088 <CLIModeSupport.ab3@722> XINCLUDE "CLIModeSupport.ab3"
000160B8 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00016134 <CLIModeSupport.ab3@724> XINCLUDE "CLIModeSupport.ab3"
00016164 <CLIModeSupport.ab3@725> XINCLUDE "CLIModeSupport.ab3"
00016194 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
000161C4 <CLIModeSupport.ab3@727> XINCLUDE "CLIModeSupport.ab3"
000161F4 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016224 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016254 <CLIModeSupport.ab3@730> XINCLUDE "CLIModeSupport.ab3"
00016284 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
000162B4 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
000162E4 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016314 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016390 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
000163C2 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
000163F4 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016424 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
0001642A <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
0001649E <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
0001650A <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
0001651C <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
0001654A <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016572 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00016586 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
000165B0 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
000165F4 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016604 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016614 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
0001661A <CLIModeSupport.ab3@750> XINCLUDE "CLIModeSupport.ab3"
0001662A <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016638 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
00016642 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
0001667A <CLIModeSupport.ab3@762> XINCLUDE "CLIModeSupport.ab3"
000166B2 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
000166EA <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
000166FA <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00016762 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0001679A <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000167AA <CLIModeSupport.ab3@768> XINCLUDE "CLIModeSupport.ab3"
000167BA <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
00016822 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
0001688A <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
000168F2 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0001695A <CLIModeSupport.ab3@773> XINCLUDE "CLIModeSupport.ab3"
000169C2 <CLIModeSupport.ab3@774> XINCLUDE "CLIModeSupport.ab3"
00016A2A <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
00016A92 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
00016AFA <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
00016B0A <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
00016B42 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
00016B7C <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00016BB6 <CLIModeSupport.ab3@782> XINCLUDE "CLIModeSupport.ab3"
00016BEE <CLIModeSupport.ab3@783> XINCLUDE "CLIModeSupport.ab3"
00016C0A <CLIModeSupport.ab3@784> XINCLUDE "CLIModeSupport.ab3"
00016C42 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00016C68 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00016C70 <CLIModeSupport.ab3@790> XINCLUDE "CLIModeSupport.ab3"
00016C78 <CLIModeSupport.ab3@792> XINCLUDE "CLIModeSupport.ab3"
00016C80 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00016C88 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00016C9C <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00016CCA <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
00016CE4 <CLIModeSupport.ab3@798> XINCLUDE "CLIModeSupport.ab3"
00016CF2 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
00016D5E <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00016D84 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00016DA0 <CLIModeSupport.ab3@802> XINCLUDE "CLIModeSupport.ab3"
00016DAA <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00016DB4 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00016DC0 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00016DCE <CLIModeSupport.ab3@806> XINCLUDE "CLIModeSupport.ab3"
00016DDA <CLIModeSupport.ab3@807> XINCLUDE "CLIModeSupport.ab3"
00016E16 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
00016E30 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
00016E3E <CLIModeSupport.ab3@810> XINCLUDE "CLIModeSupport.ab3"
00016E5E <CLIModeSupport.ab3@811> XINCLUDE "CLIModeSupport.ab3"
00016E6C <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
00016E7A <CLIModeSupport.ab3@813> XINCLUDE "CLIModeSupport.ab3"
00016E80 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00016E90 <CLIModeSupport.ab3@816> XINCLUDE "CLIModeSupport.ab3"
00016E94 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00016EC8 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00016EFC <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00016F00 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00016F34 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00016F38 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00016F6C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00016F72 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00016FA8 <CLIModeSupport.ab3@827> XINCLUDE "CLIModeSupport.ab3"
00016FDE <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
00017014 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
0001704C <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
00017084 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
00017124 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00017164 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
0001719A <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
000171D0 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00017208 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00017226 <CLIModeSupport.ab3@840> XINCLUDE "CLIModeSupport.ab3"
0001722A <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
00017230 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
00017236 <CLIModeSupport.ab3@843> XINCLUDE "CLIModeSupport.ab3"
0001723A <CLIModeSupport.ab3@844> XINCLUDE "CLIModeSupport.ab3"
00017264 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00017278 <CLIModeSupport.ab3@849> XINCLUDE "CLIModeSupport.ab3"
000172B6 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000172EA <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00017320 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00017378 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
000173A6 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
000173AA <CLIModeSupport.ab3@859> XINCLUDE "CLIModeSupport.ab3"
000173E0 <CLIModeSupport.ab3@860> XINCLUDE "CLIModeSupport.ab3"
0001740E <CLIModeSupport.ab3@861> XINCLUDE "CLIModeSupport.ab3"
0001743C <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00017440 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00017476 <CLIModeSupport.ab3@865> XINCLUDE "CLIModeSupport.ab3"
000174A4 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
000174A8 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
0001750C <CLIModeSupport.ab3@869> XINCLUDE "CLIModeSupport.ab3"
00017512 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
0001754C <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
00017556 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00017560 <CLIModeSupport.ab3@878> XINCLUDE "CLIModeSupport.ab3"
0001757A <CLIModeSupport.ab3@879> XINCLUDE "CLIModeSupport.ab3"
000175A4 <CLIModeSupport.ab3@882> XINCLUDE "CLIModeSupport.ab3"
000175AA <CLIModeSupport.ab3@883> XINCLUDE "CLIModeSupport.ab3"
000175CA <CLIModeSupport.ab3@884> XINCLUDE "CLIModeSupport.ab3"
000175D4 <CLIModeSupport.ab3@885> XINCLUDE "CLIModeSupport.ab3"
000175D8 <CLIModeSupport.ab3@886> XINCLUDE "CLIModeSupport.ab3"
000175DA <CLIModeSupport.ab3@887> XINCLUDE "CLIModeSupport.ab3"
000175F8 <CLIModeSupport.ab3@888> XINCLUDE "CLIModeSupport.ab3"
000175FA <CLIModeSupport.ab3@889> XINCLUDE "CLIModeSupport.ab3"
00017600 <CLIModeSupport.ab3@890> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@892> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@893> XINCLUDE "CLIModeSupport.ab3"
00017632 <CLIModeSupport.ab3@894> XINCLUDE "CLIModeSupport.ab3"
00017660 <CLIModeSupport.ab3@895> XINCLUDE "CLIModeSupport.ab3"
00017664 <CLIModeSupport.ab3@896> XINCLUDE "CLIModeSupport.ab3"
00017692 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017696 <CLIModeSupport.ab3@898> XINCLUDE "CLIModeSupport.ab3"
000176BC <CLIModeSupport.ab3@899> XINCLUDE "CLIModeSupport.ab3"
000176CC <CLIModeSupport.ab3@900> XINCLUDE "CLIModeSupport.ab3"
000176D2 <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
000176D8 <CLIModeSupport.ab3@902> XINCLUDE "CLIModeSupport.ab3"
00017712 <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
0001771C <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017736 <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017754 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
0001777E <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
000177AC <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
0001783C <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00017846 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
0001785A <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017896 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
000178D2 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
0001790E <CLIModeSupport.ab3@918> XINCLUDE "CLIModeSupport.ab3"
0001794A <CLIModeSupport.ab3@919> XINCLUDE "CLIModeSupport.ab3"
00017986 <CLIModeSupport.ab3@920> XINCLUDE "CLIModeSupport.ab3"
0001798C <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
000179C6 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
000179D8 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
000179E8 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
000179F4 <CLIModeSupport.ab3@931> XINCLUDE "CLIModeSupport.ab3"
00017A0E <CLIModeSupport.ab3@932> XINCLUDE "CLIModeSupport.ab3"
00017A10 <CLIModeSupport.ab3@934> XINCLUDE "CLIModeSupport.ab3"
00017A2E <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017A34 <CLIModeSupport.ab3@936> XINCLUDE "CLIModeSupport.ab3"
00017A5E <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017A60 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017A6A <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017A70 <CLIModeSupport.ab3@941> XINCLUDE "CLIModeSupport.ab3"
00017A82 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00017ABC <CLIModeSupport.ab3@961> XINCLUDE "CLIModeSupport.ab3"
00017AD6 <CLIModeSupport.ab3@966> XINCLUDE "CLIModeSupport.ab3"
00017AEA <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
00017B54 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00017B5A <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00017BC4 <CLIModeSupport.ab3@971> XINCLUDE "CLIModeSupport.ab3"
00017BD8 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
00017C42 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00017C78 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00017C7E <CLIModeSupport.ab3@977> XINCLUDE "CLIModeSupport.ab3"
00017CE8 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
00017CFC <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00017D32 <CLIModeSupport.ab3@980> XINCLUDE "CLIModeSupport.ab3"
00017D38 <CLIModeSupport.ab3@981> XINCLUDE "CLIModeSupport.ab3"
00017D6E <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
00017D82 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
00017DEC <CLIModeSupport.ab3@987> XINCLUDE "CLIModeSupport.ab3"
00017DF2 <CLIModeSupport.ab3@988> XINCLUDE "CLIModeSupport.ab3"
00017E5C <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00017E70 <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
00017EA6 <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
00017EAC <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00017EE2 <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00017EFC <CLIModeSupport.ab3@1000> XINCLUDE "CLIModeSupport.ab3"
00017F10 <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00017F7A <CLIModeSupport.ab3@1003> XINCLUDE "CLIModeSupport.ab3"
00017F80 <CLIModeSupport.ab3@1004> XINCLUDE "CLIModeSupport.ab3"
00017FEA <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
00017FFE <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
00018068 <CLIModeSupport.ab3@1009> XINCLUDE "CLIModeSupport.ab3"
0001806E <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
000180D8 <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
000180EC <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
00018156 <CLIModeSupport.ab3@1015> XINCLUDE "CLIModeSupport.ab3"
0001815C <CLIModeSupport.ab3@1016> XINCLUDE "CLIModeSupport.ab3"
000181C6 <CLIModeSupport.ab3@1017> XINCLUDE "CLIModeSupport.ab3"
000181DA <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
00018244 <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
0001824A <CLIModeSupport.ab3@1022> XINCLUDE "CLIModeSupport.ab3"
000182B4 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
000182C6 <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
000182D6 <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
000182E0 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
0001834A <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
00018350 <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
00018356 <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
000183C0 <CLIModeSupport.ab3@1036> XINCLUDE "CLIModeSupport.ab3"
000183C8 <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
000183D2 <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
0001843C <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
00018472 <CLIModeSupport.ab3@1042> XINCLUDE "CLIModeSupport.ab3"
000184B0 <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000184B4 <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000184EA <CLIModeSupport.ab3@1045> XINCLUDE "CLIModeSupport.ab3"
000184F0 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
000184F6 <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
00018560 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
00018596 <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001859C <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
000185CA <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
000185CE <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
000185F6 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
000185FC <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
00018602 <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018608 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
00018612 <CLIModeSupport.ab3@1064> XINCLUDE "CLIModeSupport.ab3"
0001861C <CLIModeSupport.ab3@1065> XINCLUDE "CLIModeSupport.ab3"
0001864A <CLIModeSupport.ab3@1067> XINCLUDE "CLIModeSupport.ab3"
00018676 <CLIModeSupport.ab3@1069> XINCLUDE "CLIModeSupport.ab3"
0001867E <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
000186E4 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
00018718 <CLIModeSupport.ab3@1074> XINCLUDE "CLIModeSupport.ab3"
0001871E <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
0001879E <CLIModeSupport.ab3@1076> XINCLUDE "CLIModeSupport.ab3"
000187B0 <CLIModeSupport.ab3@1078> XINCLUDE "CLIModeSupport.ab3"
00018816 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
0001887C <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
00018882 <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
0001888A <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
0001888C <CLIModeSupport.ab3@1086> XINCLUDE "CLIModeSupport.ab3"
000188AA <CLIModeSupport.ab3@1087> XINCLUDE "CLIModeSupport.ab3"
000188E8 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
00018926 <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
0001892C <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
00018932 <CLIModeSupport.ab3@1092> XINCLUDE "CLIModeSupport.ab3"
00018938 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
00018942 <CLIModeSupport.ab3@1096> XINCLUDE "CLIModeSupport.ab3"
00018948 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
0001894E <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
00018954 <CLIModeSupport.ab3@1099> XINCLUDE "CLIModeSupport.ab3"
0001895A <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
0001895E <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018968 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
0001896C <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
00018996 <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
00018998 <CLIModeSupport.ab3@1107> XINCLUDE "CLIModeSupport.ab3"
0001899E <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
000189A2 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
000189A8 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
000189AC <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
000189BC <CLIModeSupport.ab3@1115> XINCLUDE "CLIModeSupport.ab3"
00018A16 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018A28 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00018A92 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018A98 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018AE2 <CLIModeSupport.ab3@1121> XINCLUDE "CLIModeSupport.ab3"
00018AF0 <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00018B1C <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018BC2 <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00018BE0 <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
00018BE6 <CLIModeSupport.ab3@1128> XINCLUDE "CLIModeSupport.ab3"
00018C10 <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
00018C16 <CLIModeSupport.ab3@1131> XINCLUDE "CLIModeSupport.ab3"
00018C4E <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
00018C5A <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
00018C74 <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
00018C80 <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
00018C9A <CLIModeSupport.ab3@1140> XINCLUDE "CLIModeSupport.ab3"
00018CC4 <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
00018CE8 <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
00018D26 <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
00018D2A <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
00018D68 <CLIModeSupport.ab3@1149> XINCLUDE "CLIModeSupport.ab3"
00018D6C <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
00018DAA <CLIModeSupport.ab3@1153> XINCLUDE "CLIModeSupport.ab3"
00018DE8 <CLIModeSupport.ab3@1154> XINCLUDE "CLIModeSupport.ab3"
00018DEA <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
00018E1E <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
00018E24 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
00018E68 <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
00018E7A <CLIModeSupport.ab3@1160> XINCLUDE "CLIModeSupport.ab3"
00018E82 <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00018E88 <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
00018E92 <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
00018EA0 <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
00018EA6 <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00018ECE <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
00018EE8 <CLIModeSupport.ab3@1169> XINCLUDE "CLIModeSupport.ab3"
00018EF2 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
00018EF8 <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
00018F16 <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
00018F20 <CLIModeSupport.ab3@1174> XINCLUDE "CLIModeSupport.ab3"
00018F26 <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
00018F2C <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
00018F36 <CLIModeSupport.ab3@1177> XINCLUDE "CLIModeSupport.ab3"
00018F44 <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00018F4A <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
00018F5A <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
00018F86 <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
00018F9C <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
00018FA6 <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
00018FAC <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
00019004 <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
00019072 <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
0001908A <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
00019090 <CLIModeSupport.ab3@1191> XINCLUDE "CLIModeSupport.ab3"
000190C8 <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000190F6 <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
00019120 <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
0001912A <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
00019152 <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
0001917C <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
0001921E <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
0001922C <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
0001927C <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
0001928C <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
00019354 <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019388 <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
000193BC <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
000193F0 <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
00019424 <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019458 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
0001948C <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
000194C0 <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
000194F4 <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
000194F6 <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
00019534 <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019538 <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
00019576 <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
000195B4 <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
000195B6 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
000195BC <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
000195C0 <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
000195C2 <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
00019600 <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
0001963E <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
00019640 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
00019642 <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
00019644 <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
0001964A <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
0001964E <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
0001965E <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
00019676 <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
0001968E <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
000196A6 <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
000196D0 <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
000196FA <CLIModeSupport.ab3@1241> XINCLUDE "CLIModeSupport.ab3"
00019728 <CLIModeSupport.ab3@1243> XINCLUDE "CLIModeSupport.ab3"
0001972C <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
00019754 <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
00019756 <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
00019794 <CLIModeSupport.ab3@1247> XINCLUDE "CLIModeSupport.ab3"
00019798 <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
000197D6 <CLIModeSupport.ab3@1249> XINCLUDE "CLIModeSupport.ab3"
000197DA <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
00019818 <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
0001981C <CLIModeSupport.ab3@1252> XINCLUDE "CLIModeSupport.ab3"
0001985A <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
0001985E <CLIModeSupport.ab3@1255> XINCLUDE "CLIModeSupport.ab3"
00019884 <CLIModeSupport.ab3@1257> XINCLUDE "CLIModeSupport.ab3"
000198AA <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
000198D0 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
000198F6 <CLIModeSupport.ab3@1260> XINCLUDE "CLIModeSupport.ab3"
0001991C <CLIModeSupport.ab3@1261> XINCLUDE "CLIModeSupport.ab3"
00019972 <CLIModeSupport.ab3@1262> XINCLUDE "CLIModeSupport.ab3"
000199C8 <CLIModeSupport.ab3@1263> XINCLUDE "CLIModeSupport.ab3"
00019A16 <CLIModeSupport.ab3@1264> XINCLUDE "CLIModeSupport.ab3"
00019A6C <CLIModeSupport.ab3@1265> XINCLUDE "CLIModeSupport.ab3"
00019A92 <CLIModeSupport.ab3@1266> XINCLUDE "CLIModeSupport.ab3"
00019AB8 <CLIModeSupport.ab3@1267> XINCLUDE "CLIModeSupport.ab3"
00019ADE <CLIModeSupport.ab3@1268> XINCLUDE "CLIModeSupport.ab3"
00019B34 <CLIModeSupport.ab3@1269> XINCLUDE "CLIModeSupport.ab3"
00019B82 <CLIModeSupport.ab3@1270> XINCLUDE "CLIModeSupport.ab3"
00019BD0 <CLIModeSupport.ab3@1271> XINCLUDE "CLIModeSupport.ab3"
00019C8A <CLIModeSupport.ab3@1272> XINCLUDE "CLIModeSupport.ab3"
00019CE0 <CLIModeSupport.ab3@1273> XINCLUDE "CLIModeSupport.ab3"
00019D06 <CLIModeSupport.ab3@1274> XINCLUDE "CLIModeSupport.ab3"
00019D2C <CLIModeSupport.ab3@1275> XINCLUDE "CLIModeSupport.ab3"
00019D52 <CLIModeSupport.ab3@1276> XINCLUDE "CLIModeSupport.ab3"
00019DA8 <CLIModeSupport.ab3@1277> XINCLUDE "CLIModeSupport.ab3"
00019DFE <CLIModeSupport.ab3@1278> XINCLUDE "CLIModeSupport.ab3"
00019E4C <CLIModeSupport.ab3@1279> XINCLUDE "CLIModeSupport.ab3"
00019E9A <CLIModeSupport.ab3@1280> XINCLUDE "CLIModeSupport.ab3"
00019EE8 <CLIModeSupport.ab3@1281> XINCLUDE "CLIModeSupport.ab3"
00019F36 <CLIModeSupport.ab3@1282> XINCLUDE "CLIModeSupport.ab3"
00019F84 <CLIModeSupport.ab3@1283> XINCLUDE "CLIModeSupport.ab3"
00019FD2 <CLIModeSupport.ab3@1284> XINCLUDE "CLIModeSupport.ab3"
0001A020 <CLIModeSupport.ab3@1285> XINCLUDE "CLIModeSupport.ab3"
0001A046 <CLIModeSupport.ab3@1286> XINCLUDE "CLIModeSupport.ab3"
0001A06C <CLIModeSupport.ab3@1287> XINCLUDE "CLIModeSupport.ab3"
0001A092 <CLIModeSupport.ab3@1288> XINCLUDE "CLIModeSupport.ab3"
0001A0E0 <CLIModeSupport.ab3@1289> XINCLUDE "CLIModeSupport.ab3"
0001A12E <CLIModeSupport.ab3@1290> XINCLUDE "CLIModeSupport.ab3"
0001A184 <CLIModeSupport.ab3@1291> XINCLUDE "CLIModeSupport.ab3"
0001A1D2 <CLIModeSupport.ab3@1292> XINCLUDE "CLIModeSupport.ab3"
0001A220 <CLIModeSupport.ab3@1293> XINCLUDE "CLIModeSupport.ab3"
0001A26E <CLIModeSupport.ab3@1294> XINCLUDE "CLIModeSupport.ab3"
0001A294 <CLIModeSupport.ab3@1295> XINCLUDE "CLIModeSupport.ab3"
0001A2BA <CLIModeSupport.ab3@1296> XINCLUDE "CLIModeSupport.ab3"
0001A2E0 <CLIModeSupport.ab3@1297> XINCLUDE "CLIModeSupport.ab3"
0001A318 <CLIModeSupport.ab3@1298> XINCLUDE "CLIModeSupport.ab3"
0001A340 <CLIModeSupport.ab3@1299> XINCLUDE "CLIModeSupport.ab3"
0001A354 <CLIModeSupport.ab3@1300> XINCLUDE "CLIModeSupport.ab3"
0001A3C8 <CLIModeSupport.ab3@1301> XINCLUDE "CLIModeSupport.ab3"
0001A40E <CLIModeSupport.ab3@1302> XINCLUDE "CLIModeSupport.ab3"
0001A4BC <CLIModeSupport.ab3@1303> XINCLUDE "CLIModeSupport.ab3"
0001A528 <CLIModeSupport.ab3@1304> XINCLUDE "CLIModeSupport.ab3"
0001A538 <CLIModeSupport.ab3@1305> XINCLUDE "CLIModeSupport.ab3"
0001A55E <CLIModeSupport.ab3@1307> XINCLUDE "CLIModeSupport.ab3"
0001A568 <CLIModeSupport.ab3@1309> XINCLUDE "CLIModeSupport.ab3"
0001A592 <CLIModeSupport.ab3@1310> XINCLUDE "CLIModeSupport.ab3"
0001A598 <CLIModeSupport.ab3@1311> XINCLUDE "CLIModeSupport.ab3"
0001A5A8 <CLIModeSupport.ab3@1313> XINCLUDE "CLIModeSupport.ab3"
0001A648 <CLIModeSupport.ab3@1315> XINCLUDE "CLIModeSupport.ab3"
0001A688 <CLIModeSupport.ab3@1316> XINCLUDE "CLIModeSupport.ab3"
0001A68E <CLIModeSupport.ab3@1318> XINCLUDE "CLIModeSupport.ab3"
0001A6F0 <CLIModeSupport.ab3@1319> XINCLUDE "CLIModeSupport.ab3"
0001A6FA <CLIModeSupport.ab3@1321> XINCLUDE "CLIModeSupport.ab3"
0001A704 <CLIModeSupport.ab3@1323> XINCLUDE "CLIModeSupport.ab3"
0001A71E <CLIModeSupport.ab3@1324> XINCLUDE "CLIModeSupport.ab3"
0001A740 <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001A762 <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001A7BC <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001A7DE <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001A800 <CLIModeSupport.ab3@1404> XINCLUDE "CLIModeSupport.ab3"
0001A85A <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001A89C <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001A8A2 <CLIModeSupport.ab3@1408> XINCLUDE "CLIModeSupport.ab3"
0001A8B0 <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001A8B6 <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001A8CA <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001A8D4 <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001A94E <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001A958 <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001A95E <CLIModeSupport.ab3@1416> XINCLUDE "CLIModeSupport.ab3"
0001A972 <CLIModeSupport.ab3@1419> XINCLUDE "CLIModeSupport.ab3"
0001A97C <CLIModeSupport.ab3@1420> XINCLUDE "CLIModeSupport.ab3"
0001A9FC <CLIModeSupport.ab3@1421> XINCLUDE "CLIModeSupport.ab3"
0001AA06 <CLIModeSupport.ab3@1422> XINCLUDE "CLIModeSupport.ab3"
0001AA0C <CLIModeSupport.ab3@1423> XINCLUDE "CLIModeSupport.ab3"
0001AA20 <CLIModeSupport.ab3@1426> XINCLUDE "CLIModeSupport.ab3"
0001AA2A <CLIModeSupport.ab3@1427> XINCLUDE "CLIModeSupport.ab3"
0001AA72 <CLIModeSupport.ab3@1428> XINCLUDE "CLIModeSupport.ab3"
0001AA80 <CLIModeSupport.ab3@1429> XINCLUDE "CLIModeSupport.ab3"
0001AAA6 <CLIModeSupport.ab3@1430> XINCLUDE "CLIModeSupport.ab3"
0001AAB0 <CLIModeSupport.ab3@1431> XINCLUDE "CLIModeSupport.ab3"
0001AB1A <CLIModeSupport.ab3@1432> XINCLUDE "CLIModeSupport.ab3"
0001ABEC <CLIModeSupport.ab3@1433> XINCLUDE "CLIModeSupport.ab3"
0001ABF6 <CLIModeSupport.ab3@1434> XINCLUDE "CLIModeSupport.ab3"
0001ABFC <CLIModeSupport.ab3@1435> XINCLUDE "CLIModeSupport.ab3"
0001AC06 <CLIModeSupport.ab3@1437> XINCLUDE "CLIModeSupport.ab3"
0001AC0C <CLIModeSupport.ab3@1438> XINCLUDE "CLIModeSupport.ab3"
0001AC20 <CLIModeSupport.ab3@1441> XINCLUDE "CLIModeSupport.ab3"
0001AC2A <CLIModeSupport.ab3@1442> XINCLUDE "CLIModeSupport.ab3"
0001AC72 <CLIModeSupport.ab3@1443> XINCLUDE "CLIModeSupport.ab3"
0001AC7C <CLIModeSupport.ab3@1444> XINCLUDE "CLIModeSupport.ab3"
0001AC82 <CLIModeSupport.ab3@1445> XINCLUDE "CLIModeSupport.ab3"
0001AC96 <CLIModeSupport.ab3@1448> XINCLUDE "CLIModeSupport.ab3"
0001ACBC <CLIModeSupport.ab3@1449> XINCLUDE "CLIModeSupport.ab3"
0001ACD0 <CLIModeSupport.ab3@1452> XINCLUDE "CLIModeSupport.ab3"
0001ACF6 <CLIModeSupport.ab3@1453> XINCLUDE "CLIModeSupport.ab3"
0001AD0A <CLIModeSupport.ab3@1456> XINCLUDE "CLIModeSupport.ab3"
0001AD30 <CLIModeSupport.ab3@1457> XINCLUDE "CLIModeSupport.ab3"
0001AD44 <CLIModeSupport.ab3@1460> XINCLUDE "CLIModeSupport.ab3"
0001AD4E <CLIModeSupport.ab3@1461> XINCLUDE "CLIModeSupport.ab3"
0001AD7C <CLIModeSupport.ab3@1462> XINCLUDE "CLIModeSupport.ab3"
0001ADCC <CLIModeSupport.ab3@1463> XINCLUDE "CLIModeSupport.ab3"
0001ADEC <CLIModeSupport.ab3@1464> XINCLUDE "CLIModeSupport.ab3"
0001AE04 <CLIModeSupport.ab3@1465> XINCLUDE "CLIModeSupport.ab3"
0001AEE8 <CLIModeSupport.ab3@1466> XINCLUDE "CLIModeSupport.ab3"
0001AEF2 <CLIModeSupport.ab3@1467> XINCLUDE "CLIModeSupport.ab3"
0001AEF8 <CLIModeSupport.ab3@1468> XINCLUDE "CLIModeSupport.ab3"
0001AEFA <CLIModeSupport.ab3@1470> XINCLUDE "CLIModeSupport.ab3"
0001AF0E <CLIModeSupport.ab3@1471> XINCLUDE "CLIModeSupport.ab3"
0001AF40 <CLIModeSupport.ab3@1474> XINCLUDE "CLIModeSupport.ab3"
0001AF46 <CLIModeSupport.ab3@1475> XINCLUDE "CLIModeSupport.ab3"
0001AF8A <CLIModeSupport.ab3@1476> XINCLUDE "CLIModeSupport.ab3"
0001AF9C <CLIModeSupport.ab3@1477> XINCLUDE "CLIModeSupport.ab3"
0001AFAE <CLIModeSupport.ab3@1478> XINCLUDE "CLIModeSupport.ab3"
0001AFB8 <CLIModeSupport.ab3@1479> XINCLUDE "CLIModeSupport.ab3"
0001AFBE <CLIModeSupport.ab3@1480> XINCLUDE "CLIModeSupport.ab3"
0001AFC8 <CLIModeSupport.ab3@1482> XINCLUDE "CLIModeSupport.ab3"
0001AFE2 <CLIModeSupport.ab3@1483> XINCLUDE "CLIModeSupport.ab3"
0001AFE2 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001B062 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001B09A <AmiBlitz3.ab3@99> If dynassign <> ""
0001B0B0 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001B0BA <AmiBlitz3.ab3@101>     If *AssignSema
0001B0CA <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001B0D0 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B0F0 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B0FA <AmiBlitz3.ab3@105>       If *AssignSema
0001B10A <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B13E <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B150 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B18C <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B198 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B1A4 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B1B4 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B1C4 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B210 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B270 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B304 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B33C <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B3BE <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B440 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B4C2 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B544 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B5C6 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B63A <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B6AE <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B722 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B750 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B774 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B7A2 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B7D0 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B89A <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B8D2 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B910 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B920 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B926 <AmiBlitz3.ab3@152> Else
0001B936 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B974 <AmiBlitz3.ab3@156> If dos_GetToolState{"ONEPASSCOMPILING"} = -1
0001B97A <AmiBlitz3.ab3@157>   OnePassCompiling.l = True
0001B980 <AmiBlitz3.ab3@158> Else
0001B986 <AmiBlitz3.ab3@159>   OnePassCompiling   = False
0001B9AC <AmiBlitz3.ab3@162> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B9DA <AmiBlitz3.ab3@167> If ( FindResident_("MorphOS") )
0001B9EA <AmiBlitz3.ab3@168>   Poke.b ?MorphOS,1      ; set it to use CacheClear_E
0001B9F0 <AmiBlitz3.ab3@169> Else
0001BA00 <AmiBlitz3.ab3@170>   Poke.b ?MorphOS,0      ; set it to use CacheClear_U
0001BA06 <AmiBlitz3.ab3@175>  releaseexe.l               = False
0001BA0C <AmiBlitz3.ab3@176>  releasedbg_save.w          = 0
0001BA12 <AmiBlitz3.ab3@177>  releasemakesmall_save.b    = 0
0001BA18 <AmiBlitz3.ab3@178>  releasefuncoptimize_save.b = 0
0001BA1E <AmiBlitz3.ab3@179>  releasedebugger_save.b     = 0
0001BA34 <AmiBlitz3.ab3@182> 
0001BA84 <AmiBlitz3.ab3@183>  comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
0001BA8C <AmiBlitz3.ab3@184>  calcpro.l      = 0
0001BA94 <AmiBlitz3.ab3@185>  calcpro_old.l  = 0
0001BAA0 <AmiBlitz3.ab3@186>  typ_old.l      = -1
0001BAAC <AmiBlitz3.ab3@187>  pass_old.l     = -1
0001BAB2 <AmiBlitz3.ab3@188>  update_comstatus_gui.b = False ; for the first
0001BABE <AmiBlitz3.ab3@191> dbg_fid.l = -1 ; no debug file id yet!
0001BAD0 <AmiBlitz3.ab3@194> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001BADA <AmiBlitz3.ab3@196> If CLIMode
0001BAE0 <AmiBlitz3.ab3@199>   err.l      = False                                       ; indicate that an error has occured
0001BAE6 <AmiBlitz3.ab3@200>   showhelp.l = False                                       ; show the CLI tool's help
0001BB3E <AmiBlitz3.ab3@203>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001BB66 <AmiBlitz3.ab3@204>   cli_sourcefile.s    = ""
0001BB8E <AmiBlitz3.ab3@205>   cli_exefile.s       = ""
0001BBB6 <AmiBlitz3.ab3@206>   cli_savefile.s      = ""
0001BBDE <AmiBlitz3.ab3@207>   cli_dumpfile.s      = ""
0001BC06 <AmiBlitz3.ab3@208>   cli_includepath.s   = ""
0001BC2E <AmiBlitz3.ab3@209>   cli_blitzlibpath.s  = ""
0001BC34 <AmiBlitz3.ab3@210>   cli_debuginfo.l     = False
0001BC3A <AmiBlitz3.ab3@211>   cli_run.l           = False
0001BC42 <AmiBlitz3.ab3@212>   cli_dumpflags.l     = $FFFFFFFF
0001BC6A <AmiBlitz3.ab3@213>   cli_info.s          = ""
0001BC70 <AmiBlitz3.ab3@214>   cli_release.l       = False
0001BC7A <AmiBlitz3.ab3@215>   cli_numargs.l       = dos_GetNumArgs{}
0001BC80 <AmiBlitz3.ab3@216>   cli_gui.l           = False
0001BC88 <AmiBlitz3.ab3@217>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BC90 <AmiBlitz3.ab3@218>   cli_verbose.l       = 1
0001BC98 <AmiBlitz3.ab3@219>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BCA0 <AmiBlitz3.ab3@220>   cli_comstrbufsize.l = 0
0001BCA8 <AmiBlitz3.ab3@221>   cli_exestacksize.l  = 0
0001BCB0 <AmiBlitz3.ab3@222>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BCB6 <AmiBlitz3.ab3@223>   OnePassCompiling    = False
0001BCCE <AmiBlitz3.ab3@224>   If cli_numargs=0 Then showhelp=True
0001BCFE <AmiBlitz3.ab3@228>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BD4A <AmiBlitz3.ab3@229>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BE12 <AmiBlitz3.ab3@230>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BE48 <AmiBlitz3.ab3@231>     Select larg
0001BE94 <AmiBlitz3.ab3@232>       Case "s" : larg="source"
0001BEE6 <AmiBlitz3.ab3@233>       Case "e" : larg="exe"
0001BF38 <AmiBlitz3.ab3@234>       Case "d" : larg="debug"
0001BF8A <AmiBlitz3.ab3@235>       Case "r" : larg="release"
0001BFDC <AmiBlitz3.ab3@236>       Case "h" : larg="help"
0001C02E <AmiBlitz3.ab3@237>       Case "v" : larg="verbose"
0001C080 <AmiBlitz3.ab3@238>       Case "1" : larg="1pass"
0001C08E <AmiBlitz3.ab3@239>     End Select
0001C0C4 <AmiBlitz3.ab3@241>     Select larg
0001C118 <AmiBlitz3.ab3@242>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001C172 <AmiBlitz3.ab3@243>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001C1CC <AmiBlitz3.ab3@244>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001C1FC <AmiBlitz3.ab3@245>       Case "debug"    : cli_debuginfo   = True
0001C22C <AmiBlitz3.ab3@246>       Case "run"      : cli_run         = True
0001C25C <AmiBlitz3.ab3@247>       Case "release"  : cli_release     = True
0001C28C <AmiBlitz3.ab3@248>       Case "ped"      : cli_gui         = True
0001C2E6 <AmiBlitz3.ab3@249>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C358 <AmiBlitz3.ab3@250>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C388 <AmiBlitz3.ab3@251>                         cli_dumpfile    = dos_GetNextArg{}
0001C390 <AmiBlitz3.ab3@252>                         cli_dumpflags   = $0
0001C3F0 <AmiBlitz3.ab3@253>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C450 <AmiBlitz3.ab3@254>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C4B0 <AmiBlitz3.ab3@255>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C510 <AmiBlitz3.ab3@256>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C570 <AmiBlitz3.ab3@257>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C5D0 <AmiBlitz3.ab3@258>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C630 <AmiBlitz3.ab3@259>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C690 <AmiBlitz3.ab3@260>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C6F0 <AmiBlitz3.ab3@261>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C702 <AmiBlitz3.ab3@262>                         If cli_dumpflags = $0
0001C708 <AmiBlitz3.ab3@263>                          err=True
0001C79C <AmiBlitz3.ab3@264>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C80E <AmiBlitz3.ab3@267>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C816 <AmiBlitz3.ab3@268>                         cli_comflags.l  = $0
0001C876 <AmiBlitz3.ab3@269>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C8D6 <AmiBlitz3.ab3@270>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C936 <AmiBlitz3.ab3@271>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C996 <AmiBlitz3.ab3@272> 
0001C9F6 <AmiBlitz3.ab3@273>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001CA10 <AmiBlitz3.ab3@274>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001CA16 <AmiBlitz3.ab3@275>                           err=True                                                                ; no
0001CAAA <AmiBlitz3.ab3@276>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001CAB0 <AmiBlitz3.ab3@277>                         Else
0001CABE <AmiBlitz3.ab3@278>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001CB30 <AmiBlitz3.ab3@281>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001CB38 <AmiBlitz3.ab3@282>                         cli_dbgflags.l  = $0
0001CB98 <AmiBlitz3.ab3@283>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001CBF8 <AmiBlitz3.ab3@284>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CC58 <AmiBlitz3.ab3@285>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CCB8 <AmiBlitz3.ab3@286>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CCD2 <AmiBlitz3.ab3@287>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CCD8 <AmiBlitz3.ab3@288>                           err=True                                                                ; no
0001CD6C <AmiBlitz3.ab3@289>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CD72 <AmiBlitz3.ab3@290>                         Else
0001CD80 <AmiBlitz3.ab3@291>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CDDA <AmiBlitz3.ab3@293>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CE34 <AmiBlitz3.ab3@294>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CE8E <AmiBlitz3.ab3@295> 
0001CEB4 <AmiBlitz3.ab3@296>                          If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CEC4 <AmiBlitz3.ab3@297>                            Poke.l ?maxerrorcount,cli_maxerrors
0001CEF4 <AmiBlitz3.ab3@299>       Case "1pass"     : OnePassCompiling = True   ; added to use big buffers for compile so only 1 pass is needed  tomsmart1
0001CF4E <AmiBlitz3.ab3@300>       Case "verbose"   : cli_verbose      = Vallong(dos_GetNextArg{})
0001CF7E <AmiBlitz3.ab3@301>       Case "help"      : showhelp         = True             ; show the help and quit
0001CF84 <AmiBlitz3.ab3@302>       Default
0001CFBC <AmiBlitz3.ab3@303>         If arg><""
0001D050 <AmiBlitz3.ab3@304>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001D056 <AmiBlitz3.ab3@305>           err = True
0001D064 <AmiBlitz3.ab3@307>     End Select
0001D0B0 <AmiBlitz3.ab3@308>   Until arg = "" OR err=True          ; until we processed all arguments
0001D0D2 <AmiBlitz3.ab3@311>   If err><False OR showhelp = True
0001D0DC <AmiBlitz3.ab3@312>     If showhelp
0001D13E <AmiBlitz3.ab3@313>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001D176 <AmiBlitz3.ab3@314>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001D1AE <AmiBlitz3.ab3@315>     NPrint "\\nOptions:"
0001D1E6 <AmiBlitz3.ab3@316>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001D21E <AmiBlitz3.ab3@317>     NPrint "  -(e)xe <file>       : output executable filename"
0001D256 <AmiBlitz3.ab3@318>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D28E <AmiBlitz3.ab3@319>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D2C6 <AmiBlitz3.ab3@320>     NPrint "  -run                : run compiled program"
0001D2FE <AmiBlitz3.ab3@321>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D336 <AmiBlitz3.ab3@322>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D36E <AmiBlitz3.ab3@323>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D3A6 <AmiBlitz3.ab3@324>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D3DE <AmiBlitz3.ab3@325>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D416 <AmiBlitz3.ab3@326>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D44E <AmiBlitz3.ab3@327>     NPrint "  -maxerrors <n>      : set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D486 <AmiBlitz3.ab3@328>     NPrint "  -(1)pass            : use large buffers for compile"
0001D4BE <AmiBlitz3.ab3@329>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D4F6 <AmiBlitz3.ab3@330>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D52E <AmiBlitz3.ab3@331>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D566 <AmiBlitz3.ab3@332>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D59E <AmiBlitz3.ab3@333>     NPrint "  -(h)elp             : show this help"
0001D5D6 <AmiBlitz3.ab3@334>     NPrint "\\nExample:"
0001D60E <AmiBlitz3.ab3@335>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D646 <AmiBlitz3.ab3@336>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D64C <AmiBlitz3.ab3@339>     Goto abnormal_exit
0001D668 <AmiBlitz3.ab3@342>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D6CC <AmiBlitz3.ab3@343>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D6DC <AmiBlitz3.ab3@346> Poke.l ?CLIMode,CLIMode
0001D700 <AmiBlitz3.ab3@381>   Dim incdim.s (#maxincludes)
0001D724 <AmiBlitz3.ab3@382>   Dim incline.l(#maxincludes)
0001D73E <AmiBlitz3.ab3@650> Function.s Get_Libinfo{addr_libnum.l}
0001D74A <AmiBlitz3.ab3@652>   lib_ab2.b = False : lib_os.b = False
0001D750 <AmiBlitz3.ab3@653>   addr_counter.l = addr_libnum
0001D758 <AmiBlitz3.ab3@654>   skip.l = 0
0001D76A <AmiBlitz3.ab3@655>   If addr_counter=0
0001D7A4 <AmiBlitz3.ab3@656>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D7C2 <AmiBlitz3.ab3@657>     Function Return ""
0001D7D0 <AmiBlitz3.ab3@662>     mem.l = Peek.l(addr_counter)
0001D7DE <AmiBlitz3.ab3@667>     addr_counter + 2
0001D7FE <AmiBlitz3.ab3@668>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D818 <AmiBlitz3.ab3@669>     If (mem LSR 16) = $ffe2
0001D81E <AmiBlitz3.ab3@671>       lib_os = True
0001D826 <AmiBlitz3.ab3@672>       skip = 10
0001D86C <AmiBlitz3.ab3@673>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D8B0 <AmiBlitz3.ab3@675>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D8C6 <AmiBlitz3.ab3@677>   If (addr_counter>addr_libnum + $400)
0001D8E4 <AmiBlitz3.ab3@679>     Function Return ""
0001D8EA <AmiBlitz3.ab3@680>   Else
0001D90E <AmiBlitz3.ab3@681>     Function Return Peek$(addr_counter + skip)
0001D918 <AmiBlitz3.ab3@683> End Function
0001D936 <AmiBlitz3.ab3@728>   !asm
0001D93C <AmiBlitz3.ab3@729>   MOVEA.l _execbase,A6
0001D940 <AmiBlitz3.ab3@730>   MOVEM.l d0/a0,-(a7)
0001D942 <AmiBlitz3.ab3@732>   MOVEQ #127,d0
0001D948 <AmiBlitz3.ab3@733>   LEA chartab,a0
0001D94E <AmiBlitz3.ab3@736>     MOVE.b #1,128(a0)
0001D950 <AmiBlitz3.ab3@737>     CLR.b (a0)+
0001D954 <AmiBlitz3.ab3@738>   DBF d0,'l12
0001D95A <AmiBlitz3.ab3@740>   LEA chartab,a0
0001D95E <AmiBlitz3.ab3@741>   MOVE.b #1,(a0)
0001D964 <AmiBlitz3.ab3@742>   MOVE.b #1,","(a0)
0001D96A <AmiBlitz3.ab3@743>   MOVE.b #1,";"(a0)
0001D970 <AmiBlitz3.ab3@744>   MOVE.b #1,":"(a0)
0001D976 <AmiBlitz3.ab3@745>   MOVE.b #1,"("(a0)
0001D97C <AmiBlitz3.ab3@746>   MOVE.b #1,")"(a0)
0001D982 <AmiBlitz3.ab3@747>   MOVE.b #1,"="(a0)
0001D988 <AmiBlitz3.ab3@748>   MOVE.b #1,"+"(a0)
0001D98E <AmiBlitz3.ab3@749>   MOVE.b #1,"-"(a0)
0001D994 <AmiBlitz3.ab3@750>   MOVE.b #1,"*"(a0)
0001D99A <AmiBlitz3.ab3@751>   MOVE.b #1,"/"(a0)
0001D9A0 <AmiBlitz3.ab3@752>   MOVE.b #1,"$"(a0)
0001D9A6 <AmiBlitz3.ab3@753>   MOVE.b #1,"%"(a0)
0001D9AC <AmiBlitz3.ab3@754>   MOVE.b #1,"."(a0)
0001D9B2 <AmiBlitz3.ab3@755>   MOVE.b #1,"["(a0)
0001D9B8 <AmiBlitz3.ab3@756>   MOVE.b #1,"]"(a0)
0001D9BE <AmiBlitz3.ab3@757>   MOVE.b #1,"{"(a0)
0001D9C4 <AmiBlitz3.ab3@758>   MOVE.b #1,"}"(a0)
0001D9CA <AmiBlitz3.ab3@759>   MOVE.b #1,"\"(a0)
0001D9D0 <AmiBlitz3.ab3@760>   MOVE.b #1,">"(a0)
0001D9D6 <AmiBlitz3.ab3@761>   MOVE.b #1,"<"(a0)
0001D9DC <AmiBlitz3.ab3@762>   MOVE.b #1,"&"(a0)
0001D9E2 <AmiBlitz3.ab3@763>   MOVE.b #1,"|"(a0)
0001D9E8 <AmiBlitz3.ab3@764>   MOVE.b #1,"^"(a0)
0001D9EE <AmiBlitz3.ab3@765>   MOVE.b #1,$7e(a0)
0001D9F4 <AmiBlitz3.ab3@766>   MOVE.w #$0101,1(a0)
0001D9FA <AmiBlitz3.ab3@768>   LEA instrtab,a0
0001DA00 <AmiBlitz3.ab3@769>   MOVE.l #labelhash-instrtab,d0
0001DA02 <AmiBlitz3.ab3@770>   ASR.l #2,d0
0001DA04 <AmiBlitz3.ab3@771>   SUBQ.l #1,d0
0001DA06 <AmiBlitz3.ab3@774>    CLR.l (a0)+
0001DA08 <AmiBlitz3.ab3@775>    SUBQ.l #1,d0
0001DA0C <AmiBlitz3.ab3@776>   BNE 'l10
0001DA12 <AmiBlitz3.ab3@778>   LEA allowtab,a0
0001DA18 <AmiBlitz3.ab3@779>   MOVE.l #255,d0
0001DA1A <AmiBlitz3.ab3@782>     CLR.b (a0)+
0001DA1E <AmiBlitz3.ab3@783>   DBF d0,'la1
0001DA24 <AmiBlitz3.ab3@785>   LEA allowtab,a0
0001DA2A <AmiBlitz3.ab3@786>   MOVE.b #1,$7d(a0)
0001DA30 <AmiBlitz3.ab3@787>   MOVE.b #1,$7c(a0)
0001DA36 <AmiBlitz3.ab3@788>   MOVE.b #1,$44(a0)
0001DA3C <AmiBlitz3.ab3@789>   MOVE.b #1,$45(a0)
0001DA42 <AmiBlitz3.ab3@790>   MOVE.b #1,$b9(a0)
0001DA48 <AmiBlitz3.ab3@791>   MOVE.b #1,$89(a0)
0001DA4E <AmiBlitz3.ab3@792>   MOVE.b #1,$ce(a0)
0001DA54 <AmiBlitz3.ab3@793>   MOVE.b #1,$cf(a0)
0001DA5A <AmiBlitz3.ab3@794>   MOVE.b #1,$d0(a0)
0001DA60 <AmiBlitz3.ab3@795>   MOVE.b #1,$cd(a0)
0001DA62 <AmiBlitz3.ab3@796>   MOVEQ #0,d0
0001DA68 <AmiBlitz3.ab3@798>   MOVEA.l _execbase,a6
0001DA6E <AmiBlitz3.ab3@803>   MOVE.l #$10000,d0
0001DA74 <AmiBlitz3.ab3@804>   MOVE.l #80000,d1
0001DA76 <AmiBlitz3.ab3@805>   MOVE.l d1,d2
0001DA7A <AmiBlitz3.ab3@806>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001DA80 <AmiBlitz3.ab3@807>   MOVE.l d0,mempool
0001DA84 <AmiBlitz3.ab3@808>   MOVEM.l (a7)+,d0/a0
0001DA8A <AmiBlitz3.ab3@809>   TST.l mempool
0001DA8E <AmiBlitz3.ab3@810>   BEQ shutdown_compiler
0001DA92 <AmiBlitz3.ab3@812>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001DA98 <AmiBlitz3.ab3@813>   MOVE.l A4,ptr_ThisTask
0001DA9C <AmiBlitz3.ab3@815>   BSR.w open_doslibrary
0001DAA0 <AmiBlitz3.ab3@816>   BEQ.w shutdown_compiler
0001DAA6 <AmiBlitz3.ab3@818>   MOVE.l D2,stacksize
0001DAA8 <AmiBlitz3.ab3@825>   MOVEQ.l #$00,D0
0001DAAE <AmiBlitz3.ab3@826>   LEA tokens,A0
0001DAB0 <AmiBlitz3.ab3@829>     ADDQ.w #1,D0
0001DAB2 <AmiBlitz3.ab3@830>     MOVE.l (A0),D1
0001DAB6 <AmiBlitz3.ab3@831>     BEQ.w 'gotlast
0001DAB8 <AmiBlitz3.ab3@832>     MOVEA.l D1,A0
0001DABC <AmiBlitz3.ab3@833>  BRA.w 'loop
0001DAC2 <AmiBlitz3.ab3@836>   MOVE.l A0,end_of_tokenlist
0001DAC6 <AmiBlitz3.ab3@838>   BSR.w makeasmtable
0001DACE <AmiBlitz3.ab3@840>   MOVE.w #$FFFF,returncode_org    ; was -1                         ;#-1,returncode
0001DAD2 <AmiBlitz3.ab3@842>   BSR.w open_mathlibrary
0001DAD6 <AmiBlitz3.ab3@843>   BEQ.w freemem_and_quit4
0001DADC <AmiBlitz3.ab3@845>   MOVE.l constmaxpc,D0
0001DADE <AmiBlitz3.ab3@846>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001DAE4 <AmiBlitz3.ab3@847>   MOVEA.l _execbase,A6
0001DAE8 <AmiBlitz3.ab3@848>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001DAEE <AmiBlitz3.ab3@849>   MOVE.l D0,constpcat
0001DAF2 <AmiBlitz3.ab3@850>   BEQ.w freemem_and_quit3
0001DAF8 <AmiBlitz3.ab3@851>   ADD.l constmaxpc,D0
0001DAFE <AmiBlitz3.ab3@852>   MOVE.l D0,constlibat
0001DB04 <AmiBlitz3.ab3@854>   MOVE.l macrobuffer_size,D0
0001DB0A <AmiBlitz3.ab3@856>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001DB0E <AmiBlitz3.ab3@857>   BGE 'ok
0001DB14 <AmiBlitz3.ab3@858>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001DB1A <AmiBlitz3.ab3@859>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001DB1C <AmiBlitz3.ab3@862>   ADDQ.l #4,d0
0001DB1E <AmiBlitz3.ab3@864>   MOVEQ.l #$01,D1
0001DB24 <AmiBlitz3.ab3@865>   MOVEA.l _execbase,A6
0001DB28 <AmiBlitz3.ab3@866>   JSR _AllocMem(A6)                                        ;macro mem
0001DB2A <AmiBlitz3.ab3@868>   MOVE.l d0,a0
0001DB30 <AmiBlitz3.ab3@869>   MOVE.l macrobuffer_size,(a0)+
0001DB32 <AmiBlitz3.ab3@870>   MOVE.l a0,d0
0001DB38 <AmiBlitz3.ab3@872>   MOVE.l D0,ptr_macrobuffer_begin
0001DB3C <AmiBlitz3.ab3@873>   BEQ.w freemem_and_quit2
0001DB42 <AmiBlitz3.ab3@874>   ADD.l macrobuffer_size,D0
0001DB48 <AmiBlitz3.ab3@875>   MOVE.l D0,ptr_macrobuffer_end
0001DB4E <AmiBlitz3.ab3@878>   TST.l CLIMode
0001DB52 <AmiBlitz3.ab3@879>   BEQ load_ped
0001DB7C <AmiBlitz3.ab3@882>   !basic
0001DB86 <AmiBlitz3.ab3@883>   succ.l = InitEmulatedPED{}
0001DB8A <AmiBlitz3.ab3@884>   GetD0 succ
0001DBA8 <AmiBlitz3.ab3@885>   !asm
0001DBAA <AmiBlitz3.ab3@886>   TST.l d0
0001DBAE <AmiBlitz3.ab3@887>   BEQ freemem_and_quit
0001DBB4 <AmiBlitz3.ab3@888> JMP skip_ped
0001DBBA <AmiBlitz3.ab3@894>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001DBC0 <AmiBlitz3.ab3@895>   MOVEA.l _dosbase,A6
0001DBC4 <AmiBlitz3.ab3@896>   JSR _LoadSeg(A6)
0001DBCA <AmiBlitz3.ab3@897>   MOVE.l D0,ptr_seg_ped
0001DBCE <AmiBlitz3.ab3@899>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001DBD0 <AmiBlitz3.ab3@903>   MOVEA.l D0,A2
0001DBD2 <AmiBlitz3.ab3@904>   ADDA.l A2,A2
0001DBD4 <AmiBlitz3.ab3@905>   ADDA.l A2,A2
0001DBDA <AmiBlitz3.ab3@907>   LEA teddata,a1                                           ;lea edstruct,A1
0001DBE0 <AmiBlitz3.ab3@908>   MOVE.l #"TEDY",d1
0001DBE4 <AmiBlitz3.ab3@909>   JSR 4(A2)                                                ; Run PED
0001DBEA <AmiBlitz3.ab3@911>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001DBF0 <AmiBlitz3.ab3@912>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001DC2E <AmiBlitz3.ab3@914>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001DC32 <AmiBlitz3.ab3@915>   BEQ.w unload_ped
0001DC36 <AmiBlitz3.ab3@916> 
0001DC3A <AmiBlitz3.ab3@917>   BNE old_version_of_PED                                   ; no, than exit
0001DC78 <AmiBlitz3.ab3@923>   !ComData_GetL{comData_Magic,D0}
0001DC7E <AmiBlitz3.ab3@924>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001DC82 <AmiBlitz3.ab3@925>   BNE unload_ped
0001DCBA <AmiBlitz3.ab3@928>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DCF2 <AmiBlitz3.ab3@929>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DD2A <AmiBlitz3.ab3@930>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DD62 <AmiBlitz3.ab3@931>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DD9A <AmiBlitz3.ab3@932>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DDD2 <AmiBlitz3.ab3@933>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DE0A <AmiBlitz3.ab3@934>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DE42 <AmiBlitz3.ab3@935>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DE7A <AmiBlitz3.ab3@936>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DEB2 <AmiBlitz3.ab3@937>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DEEA <AmiBlitz3.ab3@938>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DF22 <AmiBlitz3.ab3@939>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DF5A <AmiBlitz3.ab3@942>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DF92 <AmiBlitz3.ab3@943>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DFCA <AmiBlitz3.ab3@946>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001E002 <AmiBlitz3.ab3@947>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001E03A <AmiBlitz3.ab3@949>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001E072 <AmiBlitz3.ab3@950>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001E0AA <AmiBlitz3.ab3@952>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001E0E2 <AmiBlitz3.ab3@953>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001E11A <AmiBlitz3.ab3@955>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001E152 <AmiBlitz3.ab3@956>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001E18A <AmiBlitz3.ab3@957>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001E1C2 <AmiBlitz3.ab3@958>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001E1FA <AmiBlitz3.ab3@959>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001E232 <AmiBlitz3.ab3@960>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001E26A <AmiBlitz3.ab3@961>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E2A2 <AmiBlitz3.ab3@962>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E2DA <AmiBlitz3.ab3@963>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E312 <AmiBlitz3.ab3@964>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E34A <AmiBlitz3.ab3@965>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E382 <AmiBlitz3.ab3@966>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E3BA <AmiBlitz3.ab3@967>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E3F2 <AmiBlitz3.ab3@968>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E42A <AmiBlitz3.ab3@971>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E430 <AmiBlitz3.ab3@973>   CLR.w returncode_org
0001E45A <AmiBlitz3.ab3@975>   !basic
0001E464 <AmiBlitz3.ab3@976>   If CLIMode
0001E4D6 <AmiBlitz3.ab3@977>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E4F4 <AmiBlitz3.ab3@979>   !asm
0001E4FA <AmiBlitz3.ab3@983>   TST.b start_without_libs
0001E4FE <AmiBlitz3.ab3@984>   BNE 'skip_loading_libs
0001E502 <AmiBlitz3.ab3@986>     BSR.w call_setpointerbusy
0001E50C <AmiBlitz3.ab3@987>     MOVE.l #$FFFFffff,linenumat   ; was -1
0001E510 <AmiBlitz3.ab3@988>     BSR.w get_libraries
0001E516 <AmiBlitz3.ab3@989>     JSR init_libraries
0001E51A <AmiBlitz3.ab3@990>     BSR.w init_buffers
0001E51E <AmiBlitz3.ab3@991>     BSR.w call_setpointernormal
0001E520 <AmiBlitz3.ab3@999>   MOVEQ.l #-$01,D0
0001E526 <AmiBlitz3.ab3@1000>   MOVEA.l _execbase,A6
0001E52A <AmiBlitz3.ab3@1001>   JSR _AllocSignal(A6)
0001E530 <AmiBlitz3.ab3@1002>   MOVE.l D0,signalNum
0001E532 <AmiBlitz3.ab3@1003>   MOVEQ.l #$00,D1
0001E534 <AmiBlitz3.ab3@1004>   BSET D0,D1
0001E53A <AmiBlitz3.ab3@1005>   MOVE.l D1,signals
0001E540 <AmiBlitz3.ab3@1012>   MOVE.l #str_defaultdbug,D1
0001E544 <AmiBlitz3.ab3@1013>   MOVEA.l _dosbase(PC),A6
0001E548 <AmiBlitz3.ab3@1014>   JSR _LoadSeg(A6)
0001E54E <AmiBlitz3.ab3@1015>   MOVE.l D0,ptr_seg_debugger
0001E550 <AmiBlitz3.ab3@1018>   TST.l d0
0001E554 <AmiBlitz3.ab3@1019>   BNE 'ok_12
0001E57E <AmiBlitz3.ab3@1020>     !basic
0001E5E0 <AmiBlitz3.ab3@1021>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E5FE <AmiBlitz3.ab3@1022>     !asm
0001E604 <AmiBlitz3.ab3@1025>   TST.l CLIMode
0001E608 <AmiBlitz3.ab3@1026>   BEQ run_ped
0001E632 <AmiBlitz3.ab3@1032>   !basic
0001E638 <AmiBlitz3.ab3@1033>   err.l = False
0001E664 <AmiBlitz3.ab3@1041>   If cli_sourcefile
0001E684 <AmiBlitz3.ab3@1042>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E68E <AmiBlitz3.ab3@1043>     If lock
0001E6B2 <AmiBlitz3.ab3@1044>       NameFromLock_ lock,&cli_tempstr,1024
0001E6DC <AmiBlitz3.ab3@1045>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E6EC <AmiBlitz3.ab3@1046>       UnLock_ lock
0001E718 <AmiBlitz3.ab3@1049>     If cli_exefile
0001E76A <AmiBlitz3.ab3@1050>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E7C2 <AmiBlitz3.ab3@1051>       path.s = dos_PathPart{cli_exefile}
0001E7E2 <AmiBlitz3.ab3@1052>       lock.l = Lock_(&path,#ACCESS_READ)
0001E7EC <AmiBlitz3.ab3@1053>       If lock
0001E810 <AmiBlitz3.ab3@1054>         NameFromLock_ lock,&cli_tempstr,1024
0001E83A <AmiBlitz3.ab3@1055>         path.s = Peek.s(&cli_tempstr)
0001E8E8 <AmiBlitz3.ab3@1056>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E8F8 <AmiBlitz3.ab3@1057>         UnLock_ lock
0001E942 <AmiBlitz3.ab3@1068>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E9B6 <AmiBlitz3.ab3@1069> 
0001E9C0 <AmiBlitz3.ab3@1070>   *PreProcessor.preprocessor = preproc_Create{}
0001E9D0 <AmiBlitz3.ab3@1071>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001EA02 <AmiBlitz3.ab3@1072>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001EA18 <AmiBlitz3.ab3@1073>   If *PreProcessor\tokens=Null
0001EA92 <AmiBlitz3.ab3@1074>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001EA9C <AmiBlitz3.ab3@1075>     preproc_QueryTokens{*PreProcessor}
0001EACE <AmiBlitz3.ab3@1076>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001EB1A <AmiBlitz3.ab3@1084>   If cli_sourcefile><"" AND err=False
0001EBC0 <AmiBlitz3.ab3@1085>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001EBF2 <AmiBlitz3.ab3@1086>     succ=LoadSource{cli_sourcefile}
0001EBFC <AmiBlitz3.ab3@1087>     If succ
0001EC34 <AmiBlitz3.ab3@1088> 
0001ECAE <AmiBlitz3.ab3@1089>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001ECF0 <AmiBlitz3.ab3@1090> 
0001ECFA <AmiBlitz3.ab3@1092>         If comerr
0001ED00 <AmiBlitz3.ab3@1094>         Else
0001ED06 <AmiBlitz3.ab3@1098>     Else
0001ED56 <AmiBlitz3.ab3@1099>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EDA2 <AmiBlitz3.ab3@1103>   If cli_savefile><"" AND err=False
0001EE1C <AmiBlitz3.ab3@1104>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EE4A <AmiBlitz3.ab3@1105>     SaveSource{cli_savefile}
0001EE96 <AmiBlitz3.ab3@1108>   If cli_dumpfile><"" AND err=False
0001EEE0 <AmiBlitz3.ab3@1109>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EF16 <AmiBlitz3.ab3@1110>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EF20 <AmiBlitz3.ab3@1113>   If cli_run
0001EF34 <AmiBlitz3.ab3@1114>     If comerr=False
0001EF60 <AmiBlitz3.ab3@1115>       If cli_exefile
0001EFDA <AmiBlitz3.ab3@1116>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001F010 <AmiBlitz3.ab3@1117> 
0001F05A <AmiBlitz3.ab3@1119>       If cli_verbose>=1 Then NPrint "Running program..."
0001F068 <AmiBlitz3.ab3@1120> 
0001F06A <AmiBlitz3.ab3@1122>         CLR.l d0
0001F0A8 <AmiBlitz3.ab3@1123>         !ComData_GetB{comByte_RunningFlag,D0}
0001F0AC <AmiBlitz3.ab3@1124>         running.l = PutD0
0001F0C8 <AmiBlitz3.ab3@1125>         If running Then Delay_ 50
0001F0DC <AmiBlitz3.ab3@1127>       Until running=False
0001F0F0 <AmiBlitz3.ab3@1128>       If Peek.l(?_runerror)
0001F140 <AmiBlitz3.ab3@1129>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001F150 <AmiBlitz3.ab3@1140>   preproc_Free{*PreProcessor} : *PreProcessor=Null
0001F19A <AmiBlitz3.ab3@1141>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001F1A0 <AmiBlitz3.ab3@1142>   DeinitEmulatedPED{}
0001F1BE <AmiBlitz3.ab3@1144>   !asm
0001F1C4 <AmiBlitz3.ab3@1145> JMP terminate_ab3
0001F1CA <AmiBlitz3.ab3@1151>   MOVEA.l ped_startup_addr,A1
0001F1D0 <AmiBlitz3.ab3@1152>   LEA str_tempfilename,A0
0001F1D2 <AmiBlitz3.ab3@1153>   JSR (A1)            ;goto editor with filename!
0001F1D8 <AmiBlitz3.ab3@1160>   MOVE.l signalNum,D0
0001F1DE <AmiBlitz3.ab3@1161>   MOVEA.l _execbase,A6
0001F1E2 <AmiBlitz3.ab3@1162>   JSR _FreeSignal(A6)
0001F1E8 <AmiBlitz3.ab3@1164>   MOVE.l ptr_seg_debugger,D1
0001F1EC <AmiBlitz3.ab3@1165>   BEQ.b 'noseg
0001F1F0 <AmiBlitz3.ab3@1166>     MOVEA.l _dosbase(PC),A6
0001F1F4 <AmiBlitz3.ab3@1167>     JSR _UnLoadSeg(A6)
0001F1F8 <AmiBlitz3.ab3@1170>   BSR.w Aclearallvars
0001F1FC <AmiBlitz3.ab3@1171>   BSR.w free_residents
0001F202 <AmiBlitz3.ab3@1172>   JSR free_blitzlibs
0001F208 <AmiBlitz3.ab3@1175>   MOVE.l ptr_seg_ped,D1
0001F20C <AmiBlitz3.ab3@1176>   BEQ freemem_and_quit
0001F210 <AmiBlitz3.ab3@1177>   MOVEA.l _dosbase(PC),A6
0001F214 <AmiBlitz3.ab3@1178>   JSR _UnLoadSeg(A6)
0001F218 <AmiBlitz3.ab3@1179>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001F242 <AmiBlitz3.ab3@1182>   !basic
0001F306 <AmiBlitz3.ab3@1183> 
0001F324 <AmiBlitz3.ab3@1184>   !asm
0001F328 <AmiBlitz3.ab3@1185>   BRA freemem_and_quit
0001F352 <AmiBlitz3.ab3@1188>   !basic
0001F416 <AmiBlitz3.ab3@1189>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F434 <AmiBlitz3.ab3@1190>   !asm
0001F438 <AmiBlitz3.ab3@1194>   BSR.w freeallox
0001F43E <AmiBlitz3.ab3@1196>   MOVEA.l ptr_macrobuffer_begin,A1
0001F440 <AmiBlitz3.ab3@1198>   MOVE.l -(a1),D0
0001F442 <AmiBlitz3.ab3@1199>   ADDQ.l #4,d0
0001F448 <AmiBlitz3.ab3@1201>   MOVEA.l _execbase,A6
0001F44C <AmiBlitz3.ab3@1202>   JSR _FreeMem(A6)
0001F452 <AmiBlitz3.ab3@1205>   MOVEA.l _dosbase,A1
0001F458 <AmiBlitz3.ab3@1206>   MOVEA.l _execbase,A6
0001F45C <AmiBlitz3.ab3@1207>   JSR _CloseLibrary(A6)
0001F462 <AmiBlitz3.ab3@1209>   MOVEA.l constpcat,A1
0001F468 <AmiBlitz3.ab3@1210>   MOVE.l constmaxpc,D0
0001F46E <AmiBlitz3.ab3@1211>   MOVEA.l _execbase,A6
0001F472 <AmiBlitz3.ab3@1212>   JSR _FreeMem(A6)
0001F478 <AmiBlitz3.ab3@1215>   MOVEA.l _mathffpbase,A1
0001F47E <AmiBlitz3.ab3@1216>   MOVEA.l _execbase,A6
0001F482 <AmiBlitz3.ab3@1217>   JSR _CloseLibrary(A6)
0001F488 <AmiBlitz3.ab3@1221>   TST.l mempool2                    ; test if mempool2 is allocated
0001F48C <AmiBlitz3.ab3@1222>   BEQ shutdown_compiler             ; no jump
0001F492 <AmiBlitz3.ab3@1223>   MOVEA.l _execbase,A6              ; yes delete it to free the memory
0001F498 <AmiBlitz3.ab3@1224>   MOVE.l mempool2,a0
0001F49C <AmiBlitz3.ab3@1225>   JSR _DeletePool(a6)
0001F4A2 <AmiBlitz3.ab3@1226>   CLR.l mempool2
0001F4A8 <AmiBlitz3.ab3@1229>   MOVEA.l _execbase,A6
0001F4AE <AmiBlitz3.ab3@1230>   MOVE.l mempool,a0
0001F4B2 <AmiBlitz3.ab3@1231>   JSR _DeletePool(a6)
0001F4B8 <AmiBlitz3.ab3@1232>   CLR.l pushat
0001F4BE <AmiBlitz3.ab3@1233>   CLR.l mempool
0001F4C4 <AmiBlitz3.ab3@1235>   JSR free_unusedfunctions
0001F4C6 <AmiBlitz3.ab3@1236>   MOVEQ #0,d0
0001F4D4 <AmiBlitz3.ab3@1239>   !exitasm
0001F50C <AmiBlitz3.ab3@1240>   If dynassign<>""
0001F516 <AmiBlitz3.ab3@1241>     If *AssignSema
0001F526 <AmiBlitz3.ab3@1242>       ReleaseSemaphore_ *AssignSema
0001F53E <AmiBlitz3.ab3@1243>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F5D2 <AmiBlitz3.ab3@1244>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F60C <AmiBlitz3.ab3@1245>         dos_RemAssign{dynassign}
0001F61C <AmiBlitz3.ab3@1246>         RemSemaphore_ *AssignSema
0001F62C <AmiBlitz3.ab3@1247>         ReleaseSemaphore_ *AssignSema
0001F65E <AmiBlitz3.ab3@1248>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = Null
0001F66E <AmiBlitz3.ab3@1249>         FreeVec_ *AssignSema
0001F674 <AmiBlitz3.ab3@1250>         *AssignSema = Null
0001F6A2 <AmiBlitz3.ab3@1254>   SetCurrentDir{cli_path}
0001F6C4 <AmiBlitz3.ab3@1255>   !coutclose
0001F6CA <AmiBlitz3.ab3@1256> End
0001F6D6 <AmiBlitz3.ab3@1260> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F6DA <AmiBlitz3.ab3@1261> _dosbase:           Ds.l 1
0001F6E0 <AmiBlitz3.ab3@1265>   MOVEA.l _execbase,A6
0001F6E6 <AmiBlitz3.ab3@1266>   LEA str_doslibrary,A1
0001F6EA <AmiBlitz3.ab3@1267>   JSR _OldOpenLibrary(A6)
0001F6F0 <AmiBlitz3.ab3@1268>   MOVE.l D0,_dosbase
0001F6F2 <AmiBlitz3.ab3@1269> RTS
0001F6F8 <AmiBlitz3.ab3@1273>   MOVEA.l #str_mathffpname,A1
0001F6FE <AmiBlitz3.ab3@1274>   MOVEA.l _execbase,A6
0001F702 <AmiBlitz3.ab3@1275>   JSR _OldOpenLibrary(A6)
0001F708 <AmiBlitz3.ab3@1276>   MOVE.l D0,_mathffpbase
0001F70A <AmiBlitz3.ab3@1277> RTS
0001F73C <AmiBlitz3.ab3@1284> !ComData_JMP{comFunc_SetNormalPointer}
0001F76E <AmiBlitz3.ab3@1291> !ComData_JMP{comFunc_SetBusyPointer}
0001F798 <AmiBlitz3.ab3@1295>   !basic
0001F79C <AmiBlitz3.ab3@1296>   ab3save_filenameP.l = PutD0
0001F7A6 <AmiBlitz3.ab3@1297>   If ab3save_filenameP
0001F7CE <AmiBlitz3.ab3@1298>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F7FC <AmiBlitz3.ab3@1300>     SaveSource{ab3save_filename}
0001F802 <AmiBlitz3.ab3@1301>   Else
0001F83C <AmiBlitz3.ab3@1302>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F85A <AmiBlitz3.ab3@1304>   !asm
0001F85C <AmiBlitz3.ab3@1305>   RTS
0001F886 <AmiBlitz3.ab3@1308>   !basic
0001F88A <AmiBlitz3.ab3@1309>   ab3save_filenameP.l = PutD0
0001F894 <AmiBlitz3.ab3@1310>   If ab3save_filenameP
0001F8BC <AmiBlitz3.ab3@1311>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F8EA <AmiBlitz3.ab3@1312>     LoadSource{ab3save_filename}
0001F8F0 <AmiBlitz3.ab3@1313>   Else
0001F92A <AmiBlitz3.ab3@1314>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F948 <AmiBlitz3.ab3@1316>   !asm
0001F94A <AmiBlitz3.ab3@1317>   RTS
0001F974 <AmiBlitz3.ab3@1320>   !basic
0001F97A <AmiBlitz3.ab3@1321>   ClearSource{}
0001F998 <AmiBlitz3.ab3@1322>   !asm
0001F99A <AmiBlitz3.ab3@1323>   RTS
0001F9C4 <AmiBlitz3.ab3@1326>   !basic
0001F9CA <AmiBlitz3.ab3@1327>   OpenConsoleFake{}
0001F9E8 <AmiBlitz3.ab3@1328>   !asm
0001F9EA <AmiBlitz3.ab3@1329>   RTS
0001FA14 <AmiBlitz3.ab3@1333>   !basic
0001FA1A <AmiBlitz3.ab3@1334>   CloseConsoleFake{}
0001FA38 <AmiBlitz3.ab3@1335>   !asm
0001FA3A <AmiBlitz3.ab3@1336>   RTS
0001FA40 <AmiBlitz3.ab3@1341>   MOVE.w d6,menuitemdebug
0001FA6A <AmiBlitz3.ab3@1342>   !basic
0001FA7C <AmiBlitz3.ab3@1343>   menuitemx.l = Peek.w(?menuitemdebug)
0001FAA2 <AmiBlitz3.ab3@1344>   If menuitemx>16 OR  menuitemx<0
0001FB16 <AmiBlitz3.ab3@1345>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001FB1E <AmiBlitz3.ab3@1346>     menuitemx=0
0001FB2E <AmiBlitz3.ab3@1348>   Poke.w ?menuitemdebug,menuitemx
0001FB4C <AmiBlitz3.ab3@1349>   !asm
0001FB52 <AmiBlitz3.ab3@1350>   MOVE.w menuitemdebug,d6
0001FB58 <AmiBlitz3.ab3@1354>   MOVE.l A5,firstitem_
0001FB5E <AmiBlitz3.ab3@1355>   MOVE.w D7,numlines_org
0001FB64 <AmiBlitz3.ab3@1357>   MOVE.l d7,numlines
0001FB66 <AmiBlitz3.ab3@1359>   LSL.w #2,D6
0001FB6C <AmiBlitz3.ab3@1360>   LEA menu_items,A0
0001FB70 <AmiBlitz3.ab3@1361>   MOVEA.l $0(A0,D6.W),A0
0001FB7A <AmiBlitz3.ab3@1362>   MOVE.l #$FFFFffff,linenumat             ; was -1
0001FB84 <AmiBlitz3.ab3@1363>   MOVE.l #$FFFFffff,compilelinecounter    ; was -1
0001FB86 <AmiBlitz3.ab3@1364>   JSR (A0)                              ; jsr to the function for the menuitem
0001FB8C <AmiBlitz3.ab3@1365>   MOVE.l compilelinecounter,D0
0001FB8E <AmiBlitz3.ab3@1366> RTS
0001FB92 <AmiBlitz3.ab3@1368> menuitemdebug: Dc.l 0
0001FB96 <AmiBlitz3.ab3@1370> mempool                Dc.l 0
0001FBAC <AmiBlitz3.ab3@1371> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even        ; was dtext org source
0001FBB2 <AmiBlitz3.ab3@1372> dloaderr:              JSR handle_compileerror
0001FBCE <AmiBlitz3.ab3@1373>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001FC0C <AmiBlitz3.ab3@1381>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FC12 <AmiBlitz3.ab3@1382>   LEA str_loaddebugmessage,A2
0001FC18 <AmiBlitz3.ab3@1383>   LEA str_blitz3assign,A0
0001FC1E <AmiBlitz3.ab3@1384>   LEA str_temp_debugmodulename,A1
0001FC20 <AmiBlitz3.ab3@1385>   JSR (A3)                                                  ;open ped filerequest
0001FC24 <AmiBlitz3.ab3@1386>   BEQ.w nodload
0001FC2A <AmiBlitz3.ab3@1391>   MOVE.l D0,ptr_temp_debugmodule
0001FC2E <AmiBlitz3.ab3@1392>   BSR.w call_setpointerbusy
0001FC34 <AmiBlitz3.ab3@1394> 
0001FC3A <AmiBlitz3.ab3@1396>   MOVE.l A7,errstack
0001FC44 <AmiBlitz3.ab3@1397>   MOVE.l #nodload,errcont
0001FC4A <AmiBlitz3.ab3@1398>   MOVE.l ptr_temp_debugmodule,D1
0001FC4E <AmiBlitz3.ab3@1400>   MOVEA.l _dosbase(PC),A6
0001FC52 <AmiBlitz3.ab3@1401>   JSR _LoadSeg(A6)
0001FC54 <AmiBlitz3.ab3@1402>   MOVE.l D0,D7
0001FC58 <AmiBlitz3.ab3@1403>   BEQ.w dloaderr
0001FC5E <AmiBlitz3.ab3@1404>   MOVE.l ptr_seg_debugger,D1
0001FC62 <AmiBlitz3.ab3@1405>   BEQ.b 'ndseg
0001FC66 <AmiBlitz3.ab3@1406>   MOVEA.l _dosbase(PC),A6
0001FC6A <AmiBlitz3.ab3@1407>   JSR _UnLoadSeg(A6)
0001FC6E <AmiBlitz3.ab3@1408>   BSR.w call_setpointernormal
0001FC74 <AmiBlitz3.ab3@1411>   MOVE.l D7,ptr_seg_debugger
0001FC76 <AmiBlitz3.ab3@1414> RTS
0001FC94 <AmiBlitz3.ab3@1417> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FD54 <AmiBlitz3.ab3@1418> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FE14 <AmiBlitz3.ab3@1419> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FE18 <AmiBlitz3.ab3@1420> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FE42 <AmiBlitz3.ab3@1424>   !basic
0001FE6C <AmiBlitz3.ab3@1425>   exepath.s = Peek.s(?exepath)
0001FE96 <AmiBlitz3.ab3@1426>   exefile.s = Peek.s(?exefilename)
0001FF16 <AmiBlitz3.ab3@1427>   exefile.s = dos_AddPart{exepath,exefile}
0001FF4E <AmiBlitz3.ab3@1428>   Poke.s ?tempspace,exefile
0001FF6C <AmiBlitz3.ab3@1429>   !asm
0001FF72 <AmiBlitz3.ab3@1450>   LEA tempspace,a0
0001FF74 <AmiBlitz3.ab3@1451>   MOVE.l a0,d0
0001FF78 <AmiBlitz3.ab3@1452> BRA newcreate2
0001FFA2 <AmiBlitz3.ab3@1460>   !basic
0001FFCC <AmiBlitz3.ab3@1461>   request_exename.s = Peek.s(?str_request_exename )
00020028 <AmiBlitz3.ab3@1462>   request_exename   = !TRANS{request_exename}
0002002E <AmiBlitz3.ab3@1463>   GetD0 &request_exename
0002004C <AmiBlitz3.ab3@1464>   !asm
0002004E <AmiBlitz3.ab3@1465>   MOVE.l D0,A2
0002008C <AmiBlitz3.ab3@1469>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00020092 <AmiBlitz3.ab3@1471>   LEA exepath,A0
00020098 <AmiBlitz3.ab3@1472>   LEA exefilename,A1
0002009A <AmiBlitz3.ab3@1473>   JSR (A3)                                                 ;open ped filerequest
0002009E <AmiBlitz3.ab3@1475>   BEQ.w cancel_createexe    ; was 'err
000200A8 <AmiBlitz3.ab3@1479>   ADD.l #1,number_of_builds
000200AE <AmiBlitz3.ab3@1483>   MOVE.l D0,ptr_newexefilename
000200B6 <AmiBlitz3.ab3@1484>   MOVE.w #-1,debugversion
000200BE <AmiBlitz3.ab3@1490>     MOVE.w #1,makeexec
000200C4 <AmiBlitz3.ab3@1491>     JSR ab3_OpenDebugFile
000200C8 <AmiBlitz3.ab3@1493>     BSR.w startcompile
000200CE <AmiBlitz3.ab3@1495>     JSR ab3_CloseDebugFile
000200D8 <AmiBlitz3.ab3@1497>     CMP.l #"NORE",reqmode
000200DC <AmiBlitz3.ab3@1498>   BEQ 'l1
000200E2 <AmiBlitz3.ab3@1500>   TST.w anyerrs
000200E6 <AmiBlitz3.ab3@1501>   BNE.b 'skip
000200EA <AmiBlitz3.ab3@1502>   BSR.w savefile
000200EC <AmiBlitz3.ab3@1508> RTS
000200F4 <AmiBlitz3.ab3@1512>   MOVE.w #-1,flag_noPED
000200F6 <AmiBlitz3.ab3@1513> RTS
000200FE <AmiBlitz3.ab3@1517>   MOVE.w #-1,flag_noCLI
00020100 <AmiBlitz3.ab3@1518> RTS
0002012A <AmiBlitz3.ab3@1522>   !basic
00020152 <AmiBlitz3.ab3@1523>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
00020162 <AmiBlitz3.ab3@1524>     Poke.w ?word_WriteDebugFileNow,0
00020180 <AmiBlitz3.ab3@1525>   !asm
00020182 <AmiBlitz3.ab3@1526> RTS
00020186 <AmiBlitz3.ab3@1530>   BSR ab3_CloseDebugFile     ; remove double code and replaced it with a call of the subroutine  tomsmart1
000201B0 <AmiBlitz3.ab3@1531>   !basic
000201C2 <AmiBlitz3.ab3@1532>   If dbg_fid.l<0
000201C4 <AmiBlitz3.ab3@1533>     CLR.l d0
00020202 <AmiBlitz3.ab3@1534>     !ComData_GetW{comWord_CreateDebugFile,D0}
00020206 <AmiBlitz3.ab3@1535>     dbg_Create.l = PutD0
00020210 <AmiBlitz3.ab3@1536>     If (dbg_Create) ; only when set!
00020220 <AmiBlitz3.ab3@1537>       exefileP.l = Peek.l (?ptr_newexefilename)
00020248 <AmiBlitz3.ab3@1538>       exefile.s = ""
0002027A <AmiBlitz3.ab3@1539>       If exefileP Then exefile.s = Peek.s(exefileP)
000202B2 <AmiBlitz3.ab3@1540>       If exefile><""
00020308 <AmiBlitz3.ab3@1541>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0002031A <AmiBlitz3.ab3@1542>         If dbg_fid>=0
0002032C <AmiBlitz3.ab3@1543>           Poke.w ?word_WriteDebugFileNow,-1
00020338 <AmiBlitz3.ab3@1546>       oldhunkoffset.l = -1
00020360 <AmiBlitz3.ab3@1547>       oldfile.s       = ""
0002037E <AmiBlitz3.ab3@1550>   !asm
00020380 <AmiBlitz3.ab3@1551> RTS
00020386 <AmiBlitz3.ab3@1555> TST.w word_WriteDebugFileNow
0002038A <AmiBlitz3.ab3@1556> BEQ 'skipdebugfile
000203B4 <AmiBlitz3.ab3@1557> !basic
000203C6 <AmiBlitz3.ab3@1558>   If dbg_fid>=0
000203D8 <AmiBlitz3.ab3@1559>     pass.l          = Peek.w(?pass)
000203EA <AmiBlitz3.ab3@1560>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
0002040E <AmiBlitz3.ab3@1561> 
00020414 <AmiBlitz3.ab3@1562>       oldhunkoffset.l = hunkoffset.l
00020448 <AmiBlitz3.ab3@1563>       oldfile.s       = codefile.s
00020464 <AmiBlitz3.ab3@1564>       If Peek.w (?ininclude)>0
00020474 <AmiBlitz3.ab3@1565>         codeline.l = Peek.l(?includeline);-1
000204E4 <AmiBlitz3.ab3@1566>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
000204EA <AmiBlitz3.ab3@1567>       Else
00020518 <AmiBlitz3.ab3@1568>         !ComData_LEA{comStr_SourceName,A0}
0002051A <AmiBlitz3.ab3@1569>         MOVE.l A0,D0
0002051E <AmiBlitz3.ab3@1570>         sourceP.l = PutD0
00020546 <AmiBlitz3.ab3@1571>         codefile.s = Peek.s(sourceP)
00020556 <AmiBlitz3.ab3@1572>         codeline.l = Peek.l(?linenumat)
0002057E <AmiBlitz3.ab3@1574>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
000205D2 <AmiBlitz3.ab3@1575>       If oldhunkoffset><hunkoffset OR oldfile><codefile
000205E2 <AmiBlitz3.ab3@1582>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
000205EC <AmiBlitz3.ab3@1583>         If *sourceLine
00020602 <AmiBlitz3.ab3@1584>           MaxLen detokenline.s = 65536
00020644 <AmiBlitz3.ab3@1585>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00020654 <AmiBlitz3.ab3@1586>          *tn.preprocessor = Peek.l(?include_preprocessor)
00020680 <AmiBlitz3.ab3@1587>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
000206AE <AmiBlitz3.ab3@1588>           If written>0 Then Poke.b &detokenline+written-1,0
000206D8 <AmiBlitz3.ab3@1589>           sourceLineText.s = Peek.s(&detokenline)
000206DE <AmiBlitz3.ab3@1590>         Else
00020706 <AmiBlitz3.ab3@1591>           sourceLineText = "NULL"
000207CE <AmiBlitz3.ab3@1594>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
000207EC <AmiBlitz3.ab3@1600> !asm
000207EE <AmiBlitz3.ab3@1602> RTS
000207F0 <AmiBlitz3.ab3@1604> word_WriteDebugFileNow: Dc.w 0
000207F2 <AmiBlitz3.ab3@1608> flag_noPED:  Ds.w 1                                        ;closeed org source
000207F4 <AmiBlitz3.ab3@1609> flag_noCLI:  Ds.w 1                                        ;nocli org source
000207F8 <AmiBlitz3.ab3@1613>   MOVEM.l A2-A3,-(A7)
000207FE <AmiBlitz3.ab3@1614>   CLR.b doublepeek
00020804 <AmiBlitz3.ab3@1615>   MOVE.l A5,lastsourcepos
0002080A <AmiBlitz3.ab3@1616>    JSR getchar
0002080E <AmiBlitz3.ab3@1617>   CMP.w #$2E,D0              ;'.'
00020812 <AmiBlitz3.ab3@1618>    BEQ.w 'ok
00020818 <AmiBlitz3.ab3@1619>   MOVEA.l defaulttype,A2
0002081C <AmiBlitz3.ab3@1620>   CMP.w #$24,D0              ;'$'
00020820 <AmiBlitz3.ab3@1621>    BNE.w 'none
00020822 <AmiBlitz3.ab3@1622>   MOVEQ.l #$07,D1
00020826 <AmiBlitz3.ab3@1623>  BRA.w 'skip
0002082C <AmiBlitz3.ab3@1626>   JSR getparameter2
00020830 <AmiBlitz3.ab3@1627>   BEQ.w JUMP_syntaxerr1
00020836 <AmiBlitz3.ab3@1628>   LEA newtypebase,A2
0002083C <AmiBlitz3.ab3@1629>   JSR findtype
00020840 <AmiBlitz3.ab3@1630>   BNE.w JUMP_notypeerr1
0002084A <AmiBlitz3.ab3@1635>   MOVE.w oldqflag,instringon
00020850 <AmiBlitz3.ab3@1636>   MOVEA.l lastsourcepos,A5
00020856 <AmiBlitz3.ab3@1638>   MOVE.l a2,functionreturntype
0002085E <AmiBlitz3.ab3@1639>   CMPI.l #$100,$4(A2)
00020862 <AmiBlitz3.ab3@1640>   BLE.w 'isvar
00020864 <AmiBlitz3.ab3@1644>   MOVEQ #3,d1
00020868 <AmiBlitz3.ab3@1645>   BRA 'skip
0002086C <AmiBlitz3.ab3@1655>   MOVE.w $6(A2),D1
00020872 <AmiBlitz3.ab3@1657>   CMP.w #8,8(a2)
00020876 <AmiBlitz3.ab3@1658>   BNE 'l1
0002087E <AmiBlitz3.ab3@1659>   MOVE.b #1,doublepeek
00020884 <AmiBlitz3.ab3@1664>   MOVE.w D1,convsize
00020888 <AmiBlitz3.ab3@1665>   MOVEM.l (A7)+,A2-A3
0002088A <AmiBlitz3.ab3@1666> RTS
00020890 <AmiBlitz3.ab3@1668> JUMP_notypeerr1  JMP notypeerr
00020896 <AmiBlitz3.ab3@1669> JUMP_illtypeerr1 JMP illtypeerr
0002089C <AmiBlitz3.ab3@1670> JUMP_syntaxerr1  JMP syntaxerr
000208A0 <AmiBlitz3.ab3@1675>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000208A6 <AmiBlitz3.ab3@1676>   MOVEA.l _execbase,A6
000208AC <AmiBlitz3.ab3@1677>   TST.b MorphOS                    ; test if we have MorphOS ( 0 no, 1 yes)
000208B0 <AmiBlitz3.ab3@1678>    BEQ 'useclearU                  ; if we have 0 = No MorpOS then jump
000208B2 <AmiBlitz3.ab3@1680>   MOVEQ.l #8,d1
000208B8 <AmiBlitz3.ab3@1681>   MOVE.l #200,d0
000208BC <AmiBlitz3.ab3@1682>   JSR _CacheClearE(A6)
000208C0 <AmiBlitz3.ab3@1683>  BRA 'exit
000208C4 <AmiBlitz3.ab3@1722>   JSR _CacheClearU(A6)
000208C8 <AmiBlitz3.ab3@1725>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000208CA <AmiBlitz3.ab3@1726> RTS
000208D4 <AmiBlitz3.ab3@1734>   ADD.l #1,number_of_builds
000208DA <AmiBlitz3.ab3@1736>   CLR.w debugversion
000208E0 <AmiBlitz3.ab3@1737>   CLR.w flag_noPED
000208E6 <AmiBlitz3.ab3@1738>   CLR.w flag_noCLI
000208EE <AmiBlitz3.ab3@1742>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
000208F2 <AmiBlitz3.ab3@1744>     BSR.w startcompile
000208FC <AmiBlitz3.ab3@1746>     CMP.l #"NORE",reqmode
00020900 <AmiBlitz3.ab3@1747>   BEQ 'l1
00020906 <AmiBlitz3.ab3@1753>   TST.w anyerrs
0002090A <AmiBlitz3.ab3@1754>    BNE.w 'dontrun
0002090E <AmiBlitz3.ab3@1756>   MOVE.w flag_noPED(PC),D1
00020912 <AmiBlitz3.ab3@1757>    BEQ.w 'noclose
00020944 <AmiBlitz3.ab3@1761>   !ComData_JSR{comFunc_CloseGUI}
00020948 <AmiBlitz3.ab3@1762>  BRA.b 'runprogram
0002094C <AmiBlitz3.ab3@1766>   BSR.w compilerequester
00020952 <AmiBlitz3.ab3@1771>   MOVEA.l _dosbase,A6
00020958 <AmiBlitz3.ab3@1773>   LEA exepath,a0
0002095A <AmiBlitz3.ab3@1774>   MOVE.l a0,d1
0002095C <AmiBlitz3.ab3@1775>   MOVEQ #-2,d2
00020960 <AmiBlitz3.ab3@1776>   JSR _Lock(a6)                                            ;lock
00020966 <AmiBlitz3.ab3@1777>   MOVE.l d0,exelock
0002096C <AmiBlitz3.ab3@1779>   MOVE.l #0,d1
00020970 <AmiBlitz3.ab3@1780>   JSR _CurrentDir(A6)
00020976 <AmiBlitz3.ab3@1781>   MOVE.l D0,lock_currentdir
00020978 <AmiBlitz3.ab3@1782>   MOVE.l D0,D1
0002097C <AmiBlitz3.ab3@1783>   JSR _CurrentDir(A6)
00020982 <AmiBlitz3.ab3@1785>   CLR.l ptr_exetask
00020988 <AmiBlitz3.ab3@1794>   MOVE.l #str_process_name,D1
0002098A <AmiBlitz3.ab3@1795>   MOVEQ.l #$00,D2
00020990 <AmiBlitz3.ab3@1796>   MOVE.l #proc_seglist,D3
00020992 <AmiBlitz3.ab3@1797>   LSR.l #2,D3
00020998 <AmiBlitz3.ab3@1798>   MOVE.l stacksize,D4
0002099E <AmiBlitz3.ab3@1799>   MOVEA.l _dosbase,A6
000209A2 <AmiBlitz3.ab3@1800>   JSR _CreateProc(A6)                                      ;runtask
000209A4 <AmiBlitz3.ab3@1801>   TST.l D0
000209A8 <AmiBlitz3.ab3@1802>    BEQ 'ErrorRunningProg
000209DE <AmiBlitz3.ab3@1807>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
000209E4 <AmiBlitz3.ab3@1811>   TST.w flag_noPED
000209E8 <AmiBlitz3.ab3@1812>    BNE.b 'fatal
000209EC <AmiBlitz3.ab3@1813>   BSR.w close_compilewin
000209F2 <AmiBlitz3.ab3@1816>   CLR.l firstlocal
000209F8 <AmiBlitz3.ab3@1817>   CLR.l firstglob
000209FC <AmiBlitz3.ab3@1819>   MOVE.w flag_noPED(PC),D1
00020A00 <AmiBlitz3.ab3@1820>   BEQ.w 'noopen         ;skip_openGUI
00020A32 <AmiBlitz3.ab3@1824>   !ComData_JSR{comFunc_CreateGUI}
00020A34 <AmiBlitz3.ab3@1834>  RTS
00020A3E <AmiBlitz3.ab3@1838>   MOVE.l #1,_runerror
00020A42 <AmiBlitz3.ab3@1839> BRA 'fatal
00020A46 <AmiBlitz3.ab3@1843> _runerror: Dc.l 0
00020A4A <AmiBlitz3.ab3@1844> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00020A4E <AmiBlitz3.ab3@1845> ptr_exetask:        Ds.l 1                                          ;panictask org source
00020A52 <AmiBlitz3.ab3@1846> signalNum:          Ds.l 1                                          ;panicbit org source
00020A56 <AmiBlitz3.ab3@1847> signals:            Ds.l 1                                          ;panicmask org source
00020A6C <AmiBlitz3.ab3@1849> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
00020A71 <AmiBlitz3.ab3@1850>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00020A74 <AmiBlitz3.ab3@1851> Even4
00020A78 <AmiBlitz3.ab3@1853> ptr_ThisTask:       Ds.l 1                                          ;length
00020A7C <AmiBlitz3.ab3@1854> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00020A82 <AmiBlitz3.ab3@1858>   MOVEA.l $4,A0
00020A8A <AmiBlitz3.ab3@1859>   MOVE.l  $114(A0),ptr_exetask
00020A90 <AmiBlitz3.ab3@1861>   MOVEA.l _dosbase,A6
00020A96 <AmiBlitz3.ab3@1862>   MOVE.l exelock,D1
00020A9A <AmiBlitz3.ab3@1863>   JSR _CurrentDir(A6)
00020AD0 <AmiBlitz3.ab3@1869>   !ComData_SetB{comByte_RunningFlag,#1}
00020AD4 <AmiBlitz3.ab3@1876>   MOVE.w flag_noCLI(PC),D1
00020AD8 <AmiBlitz3.ab3@1877>    BNE.b 'skip_openconsole
00020B0A <AmiBlitz3.ab3@1881>   !ComData_JSR{comFunc_OpenConsole}
00020B0E <AmiBlitz3.ab3@1884>   BSR.w calcvbr
00020B14 <AmiBlitz3.ab3@1885>   MOVEA.l vbr,A0
00020B1A <AmiBlitz3.ab3@1890>   CLR.w dirmode
00020B20 <AmiBlitz3.ab3@1891>   CLR.l firstglob
00020B26 <AmiBlitz3.ab3@1892>   CLR.l firstlocal
00020B2C <AmiBlitz3.ab3@1896>   MOVE.l stacksize,D2
00020B32 <AmiBlitz3.ab3@1897>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020B38 <AmiBlitz3.ab3@1898>   LEA str_cliarguments,A0                                   ;cli arguement
00020B3E <AmiBlitz3.ab3@1899>   MOVEA.l destbufferstart,A1
00020B42 <AmiBlitz3.ab3@1901>   BSR.w Aclearcache
00020B44 <AmiBlitz3.ab3@1905>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00020B4A <AmiBlitz3.ab3@1908>   MOVEA.l vbr,A0
00020B50 <AmiBlitz3.ab3@1910>   CLR.l firstglob
00020B56 <AmiBlitz3.ab3@1911>   CLR.l firstlocal
00020B5C <AmiBlitz3.ab3@1912>   MOVEA.l _dosbase,A6
00020B62 <AmiBlitz3.ab3@1913>   MOVE.l exelock,d1
00020B66 <AmiBlitz3.ab3@1914>   BEQ 'nolock
00020B6A <AmiBlitz3.ab3@1915>   JSR _UnLock(a6)
00020BA0 <AmiBlitz3.ab3@1920>   !ComData_SetB{comByte_RunningFlag,#0}
00020BA4 <AmiBlitz3.ab3@1924>   MOVE.w flag_noCLI(PC),D1
00020BA8 <AmiBlitz3.ab3@1925>    BNE.b 'skip_closeconsole
00020BDA <AmiBlitz3.ab3@1929>   !ComData_JSR{comFunc_CloseConsole}
00020BE2 <AmiBlitz3.ab3@1932>   MOVE.w #$0001,stopit      ;ended OK!
00020BE6 <AmiBlitz3.ab3@1933>   MOVE.l signals(PC),D0
00020BEC <AmiBlitz3.ab3@1934>   MOVEA.l ptr_ThisTask,A1
00020BF2 <AmiBlitz3.ab3@1935>   MOVEA.l _execbase,A6
00020BF6 <AmiBlitz3.ab3@1936>   JSR _Signal(A6)
00020BF8 <AmiBlitz3.ab3@1937> RTS
00020BFE <AmiBlitz3.ab3@1941>   MOVEA.l _execbase,A6
00020C02 <AmiBlitz3.ab3@1942>   MOVE.w $128(A6),D0
00020C04 <AmiBlitz3.ab3@1943>   MOVEQ.l #$00,D1
00020C08 <AmiBlitz3.ab3@1944>   ANDI.w #$F,D0
00020C0C <AmiBlitz3.ab3@1947>     BEQ.b 'skip
00020C0E <AmiBlitz3.ab3@1948>     ADDQ.w #1,D1
00020C10 <AmiBlitz3.ab3@1949>     LSR.w #1,D0
00020C14 <AmiBlitz3.ab3@1950>  BRA.b 'loop
00020C16 <AmiBlitz3.ab3@1953>   MOVEQ.l #$00,D2
00020C1A <AmiBlitz3.ab3@1954>   CMP.w #$2,D1
00020C1E <AmiBlitz3.ab3@1955>    BCS.b 'skip2
00020C24 <AmiBlitz3.ab3@1956>   MOVEA.l _execbase,A6
00020C28 <AmiBlitz3.ab3@1957>   JSR _SuperState(A6)
00020C2C <AmiBlitz3.ab3@1958>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020C30 <AmiBlitz3.ab3@1959>   JSR _UserState(A6)
00020C36 <AmiBlitz3.ab3@1962>   MOVE.l D2,vbr
00020C38 <AmiBlitz3.ab3@1963> RTS
00020C3E <AmiBlitz3.ab3@1968>   LEA instrtab,a0
00020C44 <AmiBlitz3.ab3@1969>   MOVE.l #labelhash-instrtab,d0
00020C46 <AmiBlitz3.ab3@1970>   ASR.l #2,d0
00020C48 <AmiBlitz3.ab3@1971>   SUBQ.l #1,d0
00020C4A <AmiBlitz3.ab3@1974>   CLR.l (a0)+
00020C4C <AmiBlitz3.ab3@1975>   SUBQ.l #1,d0
00020C50 <AmiBlitz3.ab3@1976>   BNE 'l10
00020C54 <AmiBlitz3.ab3@1978>   BSR.w call_setpointerbusy
00020C58 <AmiBlitz3.ab3@1979>   BSR.w free_userlibs
00020C5C <AmiBlitz3.ab3@1980>   BSR.w scan_for_userlibs
00020C60 <AmiBlitz3.ab3@1981>   BSR.w loadblitzlibs
00020C64 <AmiBlitz3.ab3@1982> BRA.w call_setpointernormal
00020C8E <AmiBlitz3.ab3@1994>   !basic
00020CC8 <AmiBlitz3.ab3@1995>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020CD8 <AmiBlitz3.ab3@1997>   deflibNameP.l = Peek.l(?deflib)
00020CE2 <AmiBlitz3.ab3@1998>   If deflibNameP
00020D14 <AmiBlitz3.ab3@1999>     If Peek.s(deflibNameP)<>""
00020D5E <AmiBlitz3.ab3@2000>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020D64 <AmiBlitz3.ab3@2001>     Else
00020D9E <AmiBlitz3.ab3@2002>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020DA4 <AmiBlitz3.ab3@2004>   Else
00020DDE <AmiBlitz3.ab3@2005>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020E18 <AmiBlitz3.ab3@2006>     error{"INTERNAL: Invalid deflib name pointer!"}
00020E36 <AmiBlitz3.ab3@2008>   !asm
00020E3C <AmiBlitz3.ab3@2014>   MOVE.l #str_path_userlibs,D1
00020E3E <AmiBlitz3.ab3@2015>   MOVEQ.l #-$02,D2
00020E44 <AmiBlitz3.ab3@2016>   MOVEA.l _dosbase,A6
00020E48 <AmiBlitz3.ab3@2017>   JSR _Lock(A6)
00020E4A <AmiBlitz3.ab3@2018>   MOVE.l D0,D7
00020E4E <AmiBlitz3.ab3@2019>    BEQ.w 'done     ;exit_get_libraries
00020E50 <AmiBlitz3.ab3@2021>   MOVE.l D7,D1
00020E56 <AmiBlitz3.ab3@2022>   MOVE.l #ptr_parameterstore,D2
00020E5A <AmiBlitz3.ab3@2023>   JSR _Examine(A6)
00020E5C <AmiBlitz3.ab3@2024>   TST.l D0
00020E60 <AmiBlitz3.ab3@2025>   BEQ.w 'done2   ;unlock_and_exit_get_libraries
00020E66 <AmiBlitz3.ab3@2026>   MOVE.l fib_DirEntryType,D0
00020E6A <AmiBlitz3.ab3@2027>   BMI.w 'done2   ;unlock_and_exit_get_libraries
00020E6C <AmiBlitz3.ab3@2035>     MOVE.l D7,D1
00020E72 <AmiBlitz3.ab3@2036>     MOVE.l #ptr_parameterstore,D2
00020E78 <AmiBlitz3.ab3@2037>     MOVEA.l _dosbase,A6
00020E7C <AmiBlitz3.ab3@2038>     JSR _ExNext(A6)
00020E7E <AmiBlitz3.ab3@2039>     TST.l D0
00020E82 <AmiBlitz3.ab3@2040>      BEQ.w 'ok    ;exit_scan_libsdrawer                            ; kein weiteres File
00020E88 <AmiBlitz3.ab3@2042>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020E8C <AmiBlitz3.ab3@2043>     BPL.w 'loop    ;scan_libsdrawer                                  ; skip directories
00020E92 <AmiBlitz3.ab3@2045>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020E96 <AmiBlitz3.ab3@2046>     BSR.w check_for_infoextention
00020E9A <AmiBlitz3.ab3@2047>     BEQ.w 'loop    ;scan_libsdrawer
00020EA0 <AmiBlitz3.ab3@2049>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020EA2 <AmiBlitz3.ab3@2050>     MOVEQ.l #$26,D0
00020EA4 <AmiBlitz3.ab3@2051>     MOVEQ.l #$01,D1
00020EAA <AmiBlitz3.ab3@2053>     MOVE.l mempool,a0
00020EAE <AmiBlitz3.ab3@2054>     JSR _AllocPooled(a6)
00020EB4 <AmiBlitz3.ab3@2057>     MOVEA.l _dosbase,A6
00020EB6 <AmiBlitz3.ab3@2059>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020EBC <AmiBlitz3.ab3@2061>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020EBE <AmiBlitz3.ab3@2064>     MOVE.l (A0),D5
00020EC2 <AmiBlitz3.ab3@2065>      BEQ.w 'here                                       ; kein pointer da? kann springe weiter
00020EC4 <AmiBlitz3.ab3@2066>     MOVEA.l D5,A2
00020EC6 <AmiBlitz3.ab3@2067>     ADDQ.w #6,A2                                       ; 6 bytes weiter gehen, um dateinamen zu speichern
00020ECC <AmiBlitz3.ab3@2069>     LEA fib_FileName,A1    ;filename                  ; vergleich, ob Dateiname schon in der liste ist
00020ECE <AmiBlitz3.ab3@2072>       MOVEQ.l #$00,D0
00020ED0 <AmiBlitz3.ab3@2073>       MOVE.b (A1)+,D0
00020ED4 <AmiBlitz3.ab3@2074>        BEQ.w 'here         ;I'm shorter                ; dateiname komplett, dann weiter
00020ED6 <AmiBlitz3.ab3@2075>       MOVEQ.l #$00,D1
00020ED8 <AmiBlitz3.ab3@2076>       MOVE.b (A2)+,D1
00020EDC <AmiBlitz3.ab3@2077>        BEQ.w 'next         ;I'm longer
00020EFE <AmiBlitz3.ab3@2079>       !compare1                                            ;bsr.w tstalpha
00020F02 <AmiBlitz3.ab3@2081>       BNE.w 'acskip
00020F06 <AmiBlitz3.ab3@2082>       ANDI.w #$DF,D0       ; was 255-32
00020F08 <AmiBlitz3.ab3@2085>       EXG.l D0,D1
00020F2A <AmiBlitz3.ab3@2087>       !compare1                                            ;bsr.w tstalpha
00020F2E <AmiBlitz3.ab3@2089>       BNE.w 'acskip2
00020F32 <AmiBlitz3.ab3@2090>       ANDI.w #$DF,D0        ; was 255-32
00020F34 <AmiBlitz3.ab3@2093>       EXG.l D0,D1
00020F36 <AmiBlitz3.ab3@2094>       CMP.b D1,D0
00020F3A <AmiBlitz3.ab3@2095>     BEQ.w 'comloop
00020F3E <AmiBlitz3.ab3@2096>     BCS.w 'here             ;I'm less than
00020F40 <AmiBlitz3.ab3@2099>     MOVEA.l D5,A0
00020F44 <AmiBlitz3.ab3@2100>  BRA.w 'insloop
00020F46 <AmiBlitz3.ab3@2103>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020F48 <AmiBlitz3.ab3@2104>     MOVE.l (A0),(A1)            ;next of last is next of me
00020F4A <AmiBlitz3.ab3@2105>     MOVE.l A1,(A0)              ;I am next of last
00020F4C <AmiBlitz3.ab3@2106>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020F50 <AmiBlitz3.ab3@2107>     MOVE.w #$FFFF,(A1)+         ; was - 1;set 'Used' flag  ; $FFFF schreiben
00020F56 <AmiBlitz3.ab3@2108>     MOVEA.l #fib_FileName,A0    ; was #namebuff+8,         ; dateinamen in die liste kopieren
00020F58 <AmiBlitz3.ab3@2111>       MOVE.b (A0)+,(A1)+
00020F5C <AmiBlitz3.ab3@2112>     BNE.w 'coploop
00020F60 <AmiBlitz3.ab3@2113>  BRA.w 'loop    ;scan_libsdrawer
00020F62 <AmiBlitz3.ab3@2116>   MOVE.l D7,D1
00020F68 <AmiBlitz3.ab3@2117>   MOVEA.l _dosbase,A6
00020F6C <AmiBlitz3.ab3@2118>   JSR _UnLock(A6)
00020F6E <AmiBlitz3.ab3@2119>   MOVEQ.l #-$01,D0
00020F70 <AmiBlitz3.ab3@2122>  RTS
00020F72 <AmiBlitz3.ab3@2125>   MOVE.l D7,D1
00020F78 <AmiBlitz3.ab3@2126>   MOVEA.l _dosbase,A6
00020F7C <AmiBlitz3.ab3@2127>   JSR _UnLock(A6)
00020F7E <AmiBlitz3.ab3@2128>   MOVEQ.l #$00,D0
00020F80 <AmiBlitz3.ab3@2129> RTS
00020F86 <AmiBlitz3.ab3@2134>   MOVEA.l _execbase,A6
00020F8C <AmiBlitz3.ab3@2135>   MOVEA.l ptr_userlibs_list,A2
00020F92 <AmiBlitz3.ab3@2136>   CLR.l ptr_userlibs_list
00020F96 <AmiBlitz3.ab3@2139>     CMPA.w #$0,A2
00020F9A <AmiBlitz3.ab3@2140>     BEQ.w 'done
00020F9C <AmiBlitz3.ab3@2141>       MOVEA.l A2,A1
00020F9E <AmiBlitz3.ab3@2142>       MOVEQ.l #$26,D0
00020FA0 <AmiBlitz3.ab3@2143>       MOVEA.l (A2),A2
00020FA6 <AmiBlitz3.ab3@2145>       MOVE.l mempool,a0
00020FAC <AmiBlitz3.ab3@2146>       MOVEA.l _execbase,A6
00020FB0 <AmiBlitz3.ab3@2147>       JSR _FreePooled(A6)
00020FB4 <AmiBlitz3.ab3@2150>  BRA.w 'loop
00020FB6 <AmiBlitz3.ab3@2153> RTS
00020FB8 <AmiBlitz3.ab3@2157> pass:  Dc.w 0                                             ; smallpass org source
00020FBA <AmiBlitz3.ab3@2158> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020FC0 <AmiBlitz3.ab3@2164>   MOVE.l A7,errstack                                      ;startcompile
00020FC4 <AmiBlitz3.ab3@2166>   !regs2stack
00020FCC <AmiBlitz3.ab3@2167>   BTST #$7,make_smallestcode       ; test if makesmall is set
00020FD0 <AmiBlitz3.ab3@2168>   BNE 'nobigallox                  ; yes makesmall is set, we don't change the buffers
00020FD6 <AmiBlitz3.ab3@2169>     JSR bigallox                   ; no try to make big buffers for 1 pass compile
00020FDA <AmiBlitz3.ab3@2172>   !stack2regs
00020FE0 <AmiBlitz3.ab3@2183>   CLR.l reqmode
00020FEA <AmiBlitz3.ab3@2185>   MOVE.l #Aclearallvars,errcont
00020FF4 <AmiBlitz3.ab3@2186>   MOVE.l #concomstack,concomsp
00020FF8 <AmiBlitz3.ab3@2195>   MOVE.w #1450,D0
00020FFA <AmiBlitz3.ab3@2197>   LSR.w #3,D0
00020FFC <AmiBlitz3.ab3@2198>   SUBQ.w #7,D0                                             ; 173
00021002 <AmiBlitz3.ab3@2199>   MOVE.w D0,progressbar_width
00021004 <AmiBlitz3.ab3@2200>   SWAP D0
00021006 <AmiBlitz3.ab3@2201>   CLR.w D0
0002100C <AmiBlitz3.ab3@2202>   MOVE.l numlines,d1           ; was divu numlines,d0
00021010 <AmiBlitz3.ab3@2203>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00021012 <AmiBlitz3.ab3@2205>   TST.w D0
00021016 <AmiBlitz3.ab3@2206>   BNE.w 'ok
00021018 <AmiBlitz3.ab3@2207>   MOVEQ.l #-$01,D0
0002101E <AmiBlitz3.ab3@2210>   MOVE.w D0,progress_per_line
00021026 <AmiBlitz3.ab3@2220>   BTST #$7,use_debugger
0002102A <AmiBlitz3.ab3@2223>   BNE 'debugon
00021030 <AmiBlitz3.ab3@2224>   CLR.w debugmode
00021034 <AmiBlitz3.ab3@2225>  BRA.b 'debugoff
0002103A <AmiBlitz3.ab3@2228>   SNE debugmode
00021072 <AmiBlitz3.ab3@2236>   !ComData_SetB{comByte_DebugMode,debugmode}
00021078 <AmiBlitz3.ab3@2239>   CLR.w dirmode           ;direct mode flag                                  ;direct mode flag
0002107E <AmiBlitz3.ab3@2240>   CLR.w ezerr             ;quiet error                                 ;quiet error
00021084 <AmiBlitz3.ab3@2241>   CLR.l currentfunction
0002108A <AmiBlitz3.ab3@2242>   CLR.w connest
00021090 <AmiBlitz3.ab3@2243>   CLR.w varmode
00021096 <AmiBlitz3.ab3@2244>   CLR.w proceduremode
0002109C <AmiBlitz3.ab3@2245>   CLR.w ininclude
000210A2 <AmiBlitz3.ab3@2246>   CLR.w intstring
000210A8 <AmiBlitz3.ab3@2247>   CLR.w pass
000210B0 <AmiBlitz3.ab3@2249>   MOVE.w #0,compiler_job
000210B6 <AmiBlitz3.ab3@2250>   CLR.l errorcounter
000210BC <AmiBlitz3.ab3@2262>   CLR.l funcscanon
000210C0 <AmiBlitz3.ab3@2264>   BSR.w compileall
000210C6 <AmiBlitz3.ab3@2266>   ADDQ.w #1,pass
000210CA <AmiBlitz3.ab3@2267> 
000210F4 <AmiBlitz3.ab3@2268>   !basic
000210FC <AmiBlitz3.ab3@2269>   samesize.l = 0
00021124 <AmiBlitz3.ab3@2270>   needsize0.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)
00021142 <AmiBlitz3.ab3@2271>   !asm
00021146 <AmiBlitz3.ab3@2272>   !stack2regs
0002114C <AmiBlitz3.ab3@2274>   TST.l errorcounter
00021150 <AmiBlitz3.ab3@2275>   BEQ 'skiperrorstop
00021152 <AmiBlitz3.ab3@2276>  RTS
00021158 <AmiBlitz3.ab3@2279>   MOVE.w dontwrite_nomemleft,d0
0002115C <AmiBlitz3.ab3@2280>   CMP.w #1,d0
00021160 <AmiBlitz3.ab3@2281>   BNE 'l3
00021166 <AmiBlitz3.ab3@2282>   TST.l errorcounter
0002116A <AmiBlitz3.ab3@2283>   BNE 'l3
00021170 <AmiBlitz3.ab3@2284>   CLR.w dontwrite_nomemleft
00021176 <AmiBlitz3.ab3@2285> 
0002117A <AmiBlitz3.ab3@2286>   BSR compileall                                           ;if a function is not found
00021180 <AmiBlitz3.ab3@2287>   ADDQ.w #1,pass
000211BE <AmiBlitz3.ab3@2291>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
000211C2 <AmiBlitz3.ab3@2292>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
000211C8 <AmiBlitz3.ab3@2293>   LEA firstproc,a0
000211CE <AmiBlitz3.ab3@2294>   CLR.l savefuncspace
000211D0 <AmiBlitz3.ab3@2295>   MOVE.l (a0),d0
000211D2 <AmiBlitz3.ab3@2299>     MOVE.l d0,a0
000211D6 <AmiBlitz3.ab3@2300>     BEQ 'out
000211DA <AmiBlitz3.ab3@2301>     TST.b isfunc(a0)
000211DE <AmiBlitz3.ab3@2302>     BNE 'nex
000211E2 <AmiBlitz3.ab3@2303>     MOVEM.l d2/a6/a0,-(a7)
000211E4 <AmiBlitz3.ab3@2305>     MOVEQ #0,d0
000211E8 <AmiBlitz3.ab3@2306>     MOVE.b $21+#funcentry_extend-1(a0),d0
000211EC <AmiBlitz3.ab3@2307>     SUB.w #$21+#funcentry_extend,d0
000211F0 <AmiBlitz3.ab3@2308>     ADD.w #16,d0
000211F6 <AmiBlitz3.ab3@2309>     MOVE.l #$10000,d1
000211F8 <AmiBlitz3.ab3@2310>     MOVE.l d0,d2
000211FE <AmiBlitz3.ab3@2311>     MOVEA.l _execbase,A6
00021202 <AmiBlitz3.ab3@2312>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00021204 <AmiBlitz3.ab3@2313>     MOVE.l d0,a1
00021208 <AmiBlitz3.ab3@2314>     MOVE.l d2,4(a1)
0002120E <AmiBlitz3.ab3@2315>     MOVE.l unusedfunc,(a1)
00021214 <AmiBlitz3.ab3@2316>     MOVE.l d0,unusedfunc
00021218 <AmiBlitz3.ab3@2317>     MOVEM.l (a7)+,a6/a0/d2
0002121C <AmiBlitz3.ab3@2318>     MOVE.l isfunc+1(a0),d0
0002121E <AmiBlitz3.ab3@2319>     ADDQ.l #6,d0
00021224 <AmiBlitz3.ab3@2320>     ADD.l d0,savefuncspace
00021228 <AmiBlitz3.ab3@2323>     MOVE.l d0,8(a1)
0002122C <AmiBlitz3.ab3@2324>     LEA 12(a1),a1
0002122E <AmiBlitz3.ab3@2325>     MOVE.l a0,-(a7)
00021232 <AmiBlitz3.ab3@2326>     LEA $21+#funcentry_extend(a0),a0
00021234 <AmiBlitz3.ab3@2329>       MOVE.b (a0)+,(a1)+
00021238 <AmiBlitz3.ab3@2330>     BNE 'l1
0002123A <AmiBlitz3.ab3@2331>     MOVE.l (a7)+,a0
0002123C <AmiBlitz3.ab3@2334>     MOVE.l (a0),d0
00021240 <AmiBlitz3.ab3@2335>  BRA 'lr1
00021248 <AmiBlitz3.ab3@2338>   BTST #$7,make_smallestcode
0002124C <AmiBlitz3.ab3@2339>   BEQ.b 'nosmall                                           ;optimize for executable
00021252 <AmiBlitz3.ab3@2341>   CLR.l morememadd
00021256 <AmiBlitz3.ab3@2345>   BSR.w alloxadj
0002125A <AmiBlitz3.ab3@2346>   BEQ.w 'anerr
00021260 <AmiBlitz3.ab3@2348> 
00021264 <AmiBlitz3.ab3@2349>   BSR.w compileall
0002126A <AmiBlitz3.ab3@2351>   ADDQ.w #1,pass
0002126E <AmiBlitz3.ab3@2352> 
00021298 <AmiBlitz3.ab3@2353>   !basic
000212AC <AmiBlitz3.ab3@2354>   If releaseexe = True                                       ; test if we creat a releas exe
000212D4 <AmiBlitz3.ab3@2355>     needsize1.l = Peek.l(?bigpc) -Peek.l(?destbufferstart)   ; get the size form the last compile
000212F2 <AmiBlitz3.ab3@2356> 
00021328 <AmiBlitz3.ab3@2357>       !ComData_SetW{comWord_CreateDebugFile,#1}              ; set create .dbg file to one
00021346 <AmiBlitz3.ab3@2358>       !asm
0002134C <AmiBlitz3.ab3@2359>       JSR ab3_OpenDebugFile                                  ; open the .dbg flie
00021350 <AmiBlitz3.ab3@2360>       !stack2regs
00021354 <AmiBlitz3.ab3@2361>       BSR compileall                                         ; compile for the last time to creat the dbg file
00021358 <AmiBlitz3.ab3@2362>       !regs2stack
00021382 <AmiBlitz3.ab3@2363>       !basic
00021390 <AmiBlitz3.ab3@2365>     If needsize1 < needsize0   ; test if the needed size is smaller then the compile befor
00021396 <AmiBlitz3.ab3@2366>       needsize0 = needsize1    ; yes the new size is that the old size
000213B4 <AmiBlitz3.ab3@2367>       !asm
000213B8 <AmiBlitz3.ab3@2368>       !stack2regs
000213BC <AmiBlitz3.ab3@2369>       BRA 'l3                  ; back to the funcscan and compile again
000213DA <AmiBlitz3.ab3@2372>   !asm
000213DE <AmiBlitz3.ab3@2373>   !stack2regs
000213E4 <AmiBlitz3.ab3@2377>   MOVE.w dontwrite_nomemleft,D1
000213E8 <AmiBlitz3.ab3@2378>   BEQ.w 'dosave
000213EC <AmiBlitz3.ab3@2399>  BRA.w 'inc     ; was beq
000213F4 <AmiBlitz3.ab3@2413>   MOVE.w #$FFFF,anyerrs        ; was -1
000213F8 <AmiBlitz3.ab3@2414>  BRA.w 'dosave
000213FC <AmiBlitz3.ab3@2417>   BSR.w alloxinc                                          ;increase all by 50%
00021400 <AmiBlitz3.ab3@2418>   BEQ.w Aclearallvars
00021406 <AmiBlitz3.ab3@2419> 
0002140A <AmiBlitz3.ab3@2420>  BRA.w 'retry
0002140E <AmiBlitz3.ab3@2433> BRA.w qfree        ;used to go after beq .nosave                          ;???????
00021414 <AmiBlitz3.ab3@2439>   JSR freereps
0002141A <AmiBlitz3.ab3@2440>   JSR freesels
00021420 <AmiBlitz3.ab3@2441>   JSR freetlist
00021426 <AmiBlitz3.ab3@2442>   JSR freepends
0002142C <AmiBlitz3.ab3@2443>   JSR freeifs
00021432 <AmiBlitz3.ab3@2444>   JSR freeincs
00021438 <AmiBlitz3.ab3@2445>   JSR freexincs
0002143E <AmiBlitz3.ab3@2446>   JSR freefors
00021444 <AmiBlitz3.ab3@2447> JMP cleartemplabel
00021448 <AmiBlitz3.ab3@2450> mempool2:  Dc.l 0
0002144E <AmiBlitz3.ab3@2455>   JSR Aclearcache
00021456 <AmiBlitz3.ab3@2457>   BTST #$7,use_debugger
0002145A <AmiBlitz3.ab3@2459>   BNE 'debugon
00021460 <AmiBlitz3.ab3@2460>   CLR.w debugmode
00021464 <AmiBlitz3.ab3@2461>  BRA.b 'debugoff
0002146A <AmiBlitz3.ab3@2464>   SNE debugmode
000214A2 <AmiBlitz3.ab3@2469>   !ComData_SetB{comByte_DebugMode,debugmode}
000214A8 <AmiBlitz3.ab3@2471>   LEA regtable,a0
000214AA <AmiBlitz3.ab3@2472>   MOVEQ #10,d0
000214AC <AmiBlitz3.ab3@2475>     CLR.l (a0)+
000214B0 <AmiBlitz3.ab3@2476>   DBF d0,'l1
000214B6 <AmiBlitz3.ab3@2478>   LEA includetemp2,a0
000214B8 <AmiBlitz3.ab3@2479>   CLR.b (a0)
000214C2 <AmiBlitz3.ab3@2480>   MOVE.l #7,maxregs
000214C8 <AmiBlitz3.ab3@2481>   CLR.w debugnest
000214CE <AmiBlitz3.ab3@2482>   CLR.b funcparloop
000214D4 <AmiBlitz3.ab3@2483>   CLR.b nostringopt
000214DA <AmiBlitz3.ab3@2484>   CLR.b firsttime
000214E0 <AmiBlitz3.ab3@2485>   CLR.l lastdestpointer
000214E6 <AmiBlitz3.ab3@2486>   CLR.l lastwritedat
000214EC <AmiBlitz3.ab3@2487>   CLR.l prevwritedat
000214F2 <AmiBlitz3.ab3@2488>   CLR.l includeline
000214F8 <AmiBlitz3.ab3@2489>   CLR.b incnif
000214FE <AmiBlitz3.ab3@2490>   CLR.b formode
00021504 <AmiBlitz3.ab3@2491>   CLR.b funccall
0002150A <AmiBlitz3.ab3@2492>   CLR.w objectcount
00021510 <AmiBlitz3.ab3@2493>   CLR.b resdisable
00021516 <AmiBlitz3.ab3@2494>   CLR.b developobject
0002151C <AmiBlitz3.ab3@2495>   CLR.b optistring
00021522 <AmiBlitz3.ab3@2496>   CLR.b optistring2
00021528 <AmiBlitz3.ab3@2497>   CLR.b optiarray
0002152E <AmiBlitz3.ab3@2498>   CLR.b quickadd
00021534 <AmiBlitz3.ab3@2499>   CLR.w newmode
0002153A <AmiBlitz3.ab3@2500>   CLR.w mode
00021540 <AmiBlitz3.ab3@2501>   CLR.w string1
00021546 <AmiBlitz3.ab3@2502>   CLR.b fastfunc
0002154C <AmiBlitz3.ab3@2503>   CLR.w load_var_size
00021552 <AmiBlitz3.ab3@2504>   CLR.w load_var_reg
00021558 <AmiBlitz3.ab3@2505>   CLR.l load_var_addr
0002155E <AmiBlitz3.ab3@2506>   CLR.w imm_size
00021564 <AmiBlitz3.ab3@2507>   CLR.w imm_reg
0002156A <AmiBlitz3.ab3@2508>   CLR.l imm_addr
00021570 <AmiBlitz3.ab3@2509>   CLR.b _dcb
00021576 <AmiBlitz3.ab3@2510>   CLR.l nohunkoffset
0002157C <AmiBlitz3.ab3@2511>   CLR.b peekaddrsize
00021582 <AmiBlitz3.ab3@2512>   CLR.b typecheck
00021588 <AmiBlitz3.ab3@2513>   CLR.b declare2
0002158E <AmiBlitz3.ab3@2514>   CLR.b declare
00021594 <AmiBlitz3.ab3@2515>   CLR.l myoline                                          ;check
0002159A <AmiBlitz3.ab3@2516>   CLR.l myline                                          ;check
000215A0 <AmiBlitz3.ab3@2517>   CLR.b newvariable
000215A6 <AmiBlitz3.ab3@2518>   CLR.b saved0
000215AC <AmiBlitz3.ab3@2519>   CLR.l bsssize
000215B2 <AmiBlitz3.ab3@2520>   CLR.l chipsize
000215B8 <AmiBlitz3.ab3@2521>   CLR.b infunctioncode
000215BE <AmiBlitz3.ab3@2522>   CLR.l errorcounter
000215C8 <AmiBlitz3.ab3@2523>   MOVE.l #-1,bssstart
000215D2 <AmiBlitz3.ab3@2524>   MOVE.l #-1,bssend
000215DC <AmiBlitz3.ab3@2525>   MOVE.l #-1,chipstart
000215E6 <AmiBlitz3.ab3@2526>   MOVE.l #-1,chipend
000215EE <AmiBlitz3.ab3@2527>   MOVE.w #0,bssmode
000215F4 <AmiBlitz3.ab3@2528>   CLR.w a2offset
000215FA <AmiBlitz3.ab3@2529>   CLR.w fast
00021600 <AmiBlitz3.ab3@2530>   CLR.w fpu
00021606 <AmiBlitz3.ab3@2531>   CLR.b iee
0002160C <AmiBlitz3.ab3@2532>   CLR.w newsyntax
00021610 <AmiBlitz3.ab3@2534>   BSR.w qfree
00021616 <AmiBlitz3.ab3@2535>   JSR killoffs              ;free up DOS offset table
0002161C <AmiBlitz3.ab3@2536>   JSR frallvars               ;free up Global vars
00021622 <AmiBlitz3.ab3@2537>   JSR fralltypes              ;free up all types
00021628 <AmiBlitz3.ab3@2538>   JSR freemacs                ;free up actual macro defines.
0002162E <AmiBlitz3.ab3@2539>   JSR clearfunctionlist       ;free up states/funcs
00021634 <AmiBlitz3.ab3@2541>   TST.w pass                  
0002163A <AmiBlitz3.ab3@2544>   JSR clearlabels             ;free up labels
00021640 <AmiBlitz3.ab3@2546>   JSR clearhash
00021646 <AmiBlitz3.ab3@2549>   LEA devo,a0
0002164A <AmiBlitz3.ab3@2550>   MOVEM.l a0-a6/d0-d7,-(a7)
00021650 <AmiBlitz3.ab3@2551>   LEA ptr_parameterstore,a1
00021652 <AmiBlitz3.ab3@2554>     MOVE.b (a0)+,(a1)+
00021656 <AmiBlitz3.ab3@2555>   BNE 'l1b
00021658 <AmiBlitz3.ab3@2556>   MOVEQ #13,d2
0002165E <AmiBlitz3.ab3@2557>   JSR findlabel2
00021662 <AmiBlitz3.ab3@2558>   BNE 'd
00021666 <AmiBlitz3.ab3@2559>   CLR.l 8(a2)
0002166A <AmiBlitz3.ab3@2562>   MOVEM.l (a7)+,a0-a6/d0-d7
00021694 <AmiBlitz3.ab3@2563>   !basic
00021708 <AmiBlitz3.ab3@2564>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
00021726 <AmiBlitz3.ab3@2565>   !asm
0002172C <AmiBlitz3.ab3@2566>   CLR.b returncode
00021732 <AmiBlitz3.ab3@2568> JMP freeprocvs                     ;free up outstanding proc stuff
00021738 <AmiBlitz3.ab3@2572>   MOVE.l #bssstore-labelhash,d0
0002173A <AmiBlitz3.ab3@2573>   ASR.l #2,d0
00021740 <AmiBlitz3.ab3@2574>   LEA labelhash,a0
00021742 <AmiBlitz3.ab3@2577>     CLR.l (a0)+
00021744 <AmiBlitz3.ab3@2578>     SUBQ.l #1,d0
00021748 <AmiBlitz3.ab3@2579>   BNE.s 'l10
0002174E <AmiBlitz3.ab3@2581>   LEA labelbase,a1
00021750 <AmiBlitz3.ab3@2582>   MOVE.l (a1),d0
00021754 <AmiBlitz3.ab3@2583>   BEQ 'l11
00021756 <AmiBlitz3.ab3@2586>     MOVE.l d0,a1
0002175A <AmiBlitz3.ab3@2587>     TST.l 4(a1)
0002175E <AmiBlitz3.ab3@2588>     BEQ 'l29
00021762 <AmiBlitz3.ab3@2589>     LEA $13(a1),a0
00021764 <AmiBlitz3.ab3@2590>     MOVEQ #0,d0
00021766 <AmiBlitz3.ab3@2591>     MOVEQ #0,d1
00021768 <AmiBlitz3.ab3@2594>       MOVE.b (a0)+,d1
0002176C <AmiBlitz3.ab3@2595>       BEQ 'l12
00021772 <AmiBlitz3.ab3@2596>       !hashalgo
00021776 <AmiBlitz3.ab3@2597>  BRA 'l13
0002177C <AmiBlitz3.ab3@2600>     LEA labelhash,a0
00021782 <AmiBlitz3.ab3@2601>     AND.l #hashsize,d0
00021784 <AmiBlitz3.ab3@2602>      ASL.l #2,d0
00021788 <AmiBlitz3.ab3@2603>     MOVE.l 0(a0,d0),d1                                     ;*4
0002178C <AmiBlitz3.ab3@2604>     MOVE.l d1,$c(a1)
00021790 <AmiBlitz3.ab3@2605>     MOVE.l a1,0(a0,d0)
00021792 <AmiBlitz3.ab3@2608>     MOVE.l (a1),d0
00021796 <AmiBlitz3.ab3@2609>   BNE 'l21
00021798 <AmiBlitz3.ab3@2612> RTS
0002179E <AmiBlitz3.ab3@2616>   MOVEA.l lastrestype,A0
000217A0 <AmiBlitz3.ab3@2617>   MOVEA.l (A0),A2
000217A2 <AmiBlitz3.ab3@2618>   CLR.l (A0)
000217A8 <AmiBlitz3.ab3@2619> JMP freetypes
000217AE <AmiBlitz3.ab3@2623>   MOVEA.l varbase,A3
000217B4 <AmiBlitz3.ab3@2624>   CLR.l varbase
000217B8 <AmiBlitz3.ab3@2628>   CMPA.w #$0,A3
000217BC <AmiBlitz3.ab3@2629>   BEQ.w 'l20
000217BE <AmiBlitz3.ab3@2630>   MOVEA.l A3,A1
000217C0 <AmiBlitz3.ab3@2631>   MOVEA.l (A3),A3
000217C2 <AmiBlitz3.ab3@2632>   MOVEQ.l #$00,D0
000217C6 <AmiBlitz3.ab3@2633>   MOVE.b $E+4(A1),D0
000217CC <AmiBlitz3.ab3@2634>   MOVEA.l _execbase,A6
000217D2 <AmiBlitz3.ab3@2635>   MOVE.l mempool2,a0
000217D6 <AmiBlitz3.ab3@2636>   JSR _FreePooled(A6)
000217DA <AmiBlitz3.ab3@2637>  BRA.w 'l10
000217DC <AmiBlitz3.ab3@2640> RTS
000217E2 <AmiBlitz3.ab3@2646>   LEA firstiff,A2
000217E4 <AmiBlitz3.ab3@2647>   MOVEQ.l #$0E,D2
000217EA <AmiBlitz3.ab3@2648> JMP freeslist
000217EC <AmiBlitz3.ab3@2654> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
000217EE <AmiBlitz3.ab3@2655> inmacro:             Ds.w 1                                ;macmask org source ;macro found
000217F4 <AmiBlitz3.ab3@2662>   CLR.w inmacro
000217FA <AmiBlitz3.ab3@2664>   ADDQ.l #1,globallinecount
00021800 <AmiBlitz3.ab3@2665>   CLR.b nostringopt
00021804 <AmiBlitz3.ab3@2667>   BSR.w freembuff
0002180A <AmiBlitz3.ab3@2668>   CLR.w instringon
00021810 <AmiBlitz3.ab3@2673>   TST.w ininclude
00021814 <AmiBlitz3.ab3@2674>   BEQ.w 'skip3
0002181A <AmiBlitz3.ab3@2676>   ADDQ.l #1,includeline
00021820 <AmiBlitz3.ab3@2677>     JSR ab3_WriteDebugFile
00021826 <AmiBlitz3.ab3@2679>   JSR readinc
0002182A <AmiBlitz3.ab3@2680>   BEQ.w 'skip3
00021830 <AmiBlitz3.ab3@2684>   MOVE.w ininclude,D0
00021834 <AmiBlitz3.ab3@2685>   CMP.w #$4,D0
00021838 <AmiBlitz3.ab3@2686>   BCC.w 'stskip
0002183A <AmiBlitz3.ab3@2687>   ADD.w D0,D0
00021840 <AmiBlitz3.ab3@2688>   LEA progress_per_line,A0
00021844 <AmiBlitz3.ab3@2689>   MOVE.w $0(A0,D0.W),D2     ;offset in line
00021848 <AmiBlitz3.ab3@2690>   CMP.w progressbar_width(PC),D2
0002184C <AmiBlitz3.ab3@2691>   BCC.w 'stskip
00021850 <AmiBlitz3.ab3@2692>   ADDQ.w #1,$0(A0,D0.W)
00021852 <AmiBlitz3.ab3@2694>   LSR.w #1,D0
00021854 <AmiBlitz3.ab3@2696>   MOVE.l d0,d1
00021856 <AmiBlitz3.ab3@2697>   EXT.l d1
00021858 <AmiBlitz3.ab3@2698>   MOVE.l d2,d0
0002185A <AmiBlitz3.ab3@2699>   EXT.l d0                                                 ;d0=x,d1=y
00021860 <AmiBlitz3.ab3@2701>   JSR update_progressbar
00021862 <AmiBlitz3.ab3@2705>   MOVEQ.l #-$01,D0
00021864 <AmiBlitz3.ab3@2706>  RTS
0002186A <AmiBlitz3.ab3@2711>   MOVE.l titleat,D0
0002186C <AmiBlitz3.ab3@2712>   MOVEQ.l #$00,D1
00021872 <AmiBlitz3.ab3@2713>   MOVE.w progress_per_line,D1
00021874 <AmiBlitz3.ab3@2714>   ADD.l D1,D0
00021876 <AmiBlitz3.ab3@2715>   MOVE.l D0,D1
00021878 <AmiBlitz3.ab3@2716>   SWAP D0
0002187E <AmiBlitz3.ab3@2717>   CMP.w titleat,D0
00021882 <AmiBlitz3.ab3@2718>    BEQ.w 'skip3a
00021884 <AmiBlitz3.ab3@2723>   EXT.l d0
00021886 <AmiBlitz3.ab3@2724>   MOVE.l d1,-(a7)
0002188E <AmiBlitz3.ab3@2727>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00021894 <AmiBlitz3.ab3@2728>   JSR update_progressbar
0002189C <AmiBlitz3.ab3@2729>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0002189E <AmiBlitz3.ab3@2735>   MOVE.l (a7)+,d1
000218A4 <AmiBlitz3.ab3@2739>   MOVE.l D1,titleat
000218AA <AmiBlitz3.ab3@2742>   ADDQ.l #1,linenumat
000218B0 <AmiBlitz3.ab3@2743>   CLR.w linedone
000218B6 <AmiBlitz3.ab3@2745>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
000218BC <AmiBlitz3.ab3@2751>   SUBQ.l #1,numlines2
000218C0 <AmiBlitz3.ab3@2753>    BEQ.w 'skip
000218C6 <AmiBlitz3.ab3@2754>   MOVEA.l sourceline,A0
000218C8 <AmiBlitz3.ab3@2755>   MOVEA.l (A0),A0
000218CE <AmiBlitz3.ab3@2756>   MOVE.l A0,sourceline
000218D2 <AmiBlitz3.ab3@2757>   LEA $9(A0),A5
000218D4 <AmiBlitz3.ab3@2760> RTS
000218D6 <AmiBlitz3.ab3@2764>   MOVE.w D0,-(A7)
000218D8 <AmiBlitz3.ab3@2765>   MOVEQ.l #$03,D0
000218DA <AmiBlitz3.ab3@2768>     MOVE.w D1,D2
000218DE <AmiBlitz3.ab3@2769>     ANDI.w #$F,D2
000218E2 <AmiBlitz3.ab3@2770>     ADDI.w #$30,D2
000218E6 <AmiBlitz3.ab3@2771>     CMP.w #$3A,D2
000218EA <AmiBlitz3.ab3@2772>      BCS.w 'skip
000218EC <AmiBlitz3.ab3@2773>     ADDQ.w #7,D2
000218F0 <AmiBlitz3.ab3@2776>     MOVE.b D2,$0(A0,D0.W)
000218F2 <AmiBlitz3.ab3@2777>     LSR.w #4,D1
000218F6 <AmiBlitz3.ab3@2778>   DBF D0,'loop
000218F8 <AmiBlitz3.ab3@2780>   MOVE.w (A7)+,D0
000218FA <AmiBlitz3.ab3@2781> RTS
00021900 <AmiBlitz3.ab3@2791>   MOVE.w skipcode,D1
00021904 <AmiBlitz3.ab3@2792>   BNE.w 'loop0
00021906 <AmiBlitz3.ab3@2793>  RTS
00021908 <AmiBlitz3.ab3@2796>   MOVE.l A5,-(A7)
0002190A <AmiBlitz3.ab3@2797>   MOVEQ.l #$3A,D1      ;':'
0002190C <AmiBlitz3.ab3@2798>   MOVEQ.l #$21,D2      ;'!'
0002190E <AmiBlitz3.ab3@2799>   MOVEQ.l #$3B,D3      ;';'
00021910 <AmiBlitz3.ab3@2800>   MOVEQ.l #$22,D4      ;'"'
00021912 <AmiBlitz3.ab3@2803>   MOVE.b (A5)+,D0
00021916 <AmiBlitz3.ab3@2804>    BEQ.w 'done
0002191A <AmiBlitz3.ab3@2805>    BPL.w 'test
0002191C <AmiBlitz3.ab3@2806>   MOVE.b (A5)+,D0
00021920 <AmiBlitz3.ab3@2807>  BRA.w 'loop
00021922 <AmiBlitz3.ab3@2810>   CMP.b D4,D0
00021926 <AmiBlitz3.ab3@2811>    BNE.w 'notq
00021928 <AmiBlitz3.ab3@2814>   MOVE.b (A5)+,D0
0002192C <AmiBlitz3.ab3@2815>    BEQ.w notqerr
00021930 <AmiBlitz3.ab3@2821>   CMP.b #$22,D0        ;'"'
00021934 <AmiBlitz3.ab3@2822>    BNE.w 'qloop
00021938 <AmiBlitz3.ab3@2823>  BRA.w 'loop
0002193A <AmiBlitz3.ab3@2826>   CMP.b D1,D0
0002193E <AmiBlitz3.ab3@2827>    BEQ.w 'done
00021940 <AmiBlitz3.ab3@2828>   CMP.b D3,D0
00021944 <AmiBlitz3.ab3@2829>    BEQ.w 'done       ;macro character!
00021946 <AmiBlitz3.ab3@2830>   CMP.b D2,D0
0002194A <AmiBlitz3.ab3@2831>    BNE.w 'loop
00021952 <AmiBlitz3.ab3@2835>   MOVE.w #$FFFF,inmacro    ; was -1                                ; no runtimecheck in macros
00021954 <AmiBlitz3.ab3@2836>   MOVEA.l A5,A3
0002195A <AmiBlitz3.ab3@2838>    JSR getparameter2
0002195E <AmiBlitz3.ab3@2839>    BNE.w 'fkitme
00021964 <AmiBlitz3.ab3@2840>  JMP syntaxerr
0002196E <AmiBlitz3.ab3@2845>    MOVE.w oldqflag,instringon
00021974 <AmiBlitz3.ab3@2846>   MOVEA.l lastsourcepos,A5
0002197A <AmiBlitz3.ab3@2849>    JSR findmac                                             ;find macro
0002197E <AmiBlitz3.ab3@2850>    BEQ.w 'kl1
00021984 <AmiBlitz3.ab3@2851>  JMP nomacerr
0002198A <AmiBlitz3.ab3@2855>   TST.b debugmode
0002198E <AmiBlitz3.ab3@2856>   BEQ 'sk1
00021992 <AmiBlitz3.ab3@2857>   MOVE.w #$4e71,d1
00021998 <AmiBlitz3.ab3@2858>   JSR writeword
0002199A <AmiBlitz3.ab3@2859>   MOVE.l a5,-(a7)
0002199C <AmiBlitz3.ab3@2860>   MOVE.l a3,a5
0002199E <AmiBlitz3.ab3@2861>   SUBQ.l #1,a5
000219A6 <AmiBlitz3.ab3@2862>   MOVE.w #$0,inmacro
000219AA <AmiBlitz3.ab3@2863>   BSR debugstuffa
000219B2 <AmiBlitz3.ab3@2864>   MOVE.w #$FFFF,inmacro
000219B4 <AmiBlitz3.ab3@2865>   MOVE.l (a7)+,a5
000219B8 <AmiBlitz3.ab3@2866>   MOVE.w #$4e71,d1
000219BE <AmiBlitz3.ab3@2867>   JSR writeword
000219C0 <AmiBlitz3.ab3@2871>   MOVEA.l A5,A4            ;start of parameters!
000219C4 <AmiBlitz3.ab3@2875>    CMP.b #" ",(a4)+
000219C8 <AmiBlitz3.ab3@2876>     BEQ 'l5a
000219CA <AmiBlitz3.ab3@2877>      SUBQ.l#1,a4
000219CE <AmiBlitz3.ab3@2878>      CMP.b #",",(a4)
000219D2 <AmiBlitz3.ab3@2879>     BEQ 'nops
000219D4 <AmiBlitz3.ab3@2883>   MOVEQ.l #$00,D4          ;narg=0
000219DA <AmiBlitz3.ab3@2885>   TST.b newsyntax
000219DE <AmiBlitz3.ab3@2886>   BEQ 'l10b
000219E2 <AmiBlitz3.ab3@2887>   MOVEM.l a0/d0,-(a7)
000219E6 <AmiBlitz3.ab3@2888>   MOVE.l 4(a2),a0
000219EA <AmiBlitz3.ab3@2889>   MOVE.w 8(a2),d0
000219EE <AmiBlitz3.ab3@2892>   CMP.b #"`",(a0)+
000219F2 <AmiBlitz3.ab3@2893>   BEQ 'x1
000219F4 <AmiBlitz3.ab3@2894>   SUBQ.w #1,d0
000219F8 <AmiBlitz3.ab3@2895>   BNE 'x2
000219FC <AmiBlitz3.ab3@2896>  BRA 'x3
00021A00 <AmiBlitz3.ab3@2899>   MOVEM.l (a7)+,a0/d0
00021A04 <AmiBlitz3.ab3@2900>  BRA 'l10
00021A08 <AmiBlitz3.ab3@2903>   MOVEM.l (a7)+,a0/d0
00021A0C <AmiBlitz3.ab3@2904>  BRA 'nops
00021A10 <AmiBlitz3.ab3@2908>   CMPI.b #"{",(A4)
00021A14 <AmiBlitz3.ab3@2909>    BNE.w 'nops
00021A16 <AmiBlitz3.ab3@2914>   ADDQ.l #1,a4
00021A1A <AmiBlitz3.ab3@2917>     CMP.b #" ",(a4)
00021A1E <AmiBlitz3.ab3@2918>     BEQ 'l5
00021A22 <AmiBlitz3.ab3@2919>     MOVEM.l a0/d0,-(a7)
00021A28 <AmiBlitz3.ab3@2920>     CLR.b exmac
00021A2E <AmiBlitz3.ab3@2921>     LEA chartab,a0
00021A30 <AmiBlitz3.ab3@2922>     MOVEQ #0,d0
00021A32 <AmiBlitz3.ab3@2923>     MOVE.b (a4),d0
00021A36 <AmiBlitz3.ab3@2924>     BMI 'm1
00021A3A <AmiBlitz3.ab3@2925>     TST.b 0(a0,d0)
00021A3E <AmiBlitz3.ab3@2926>     BEQ 'm1
00021A44 <AmiBlitz3.ab3@2927>     TST.b newsyntax
00021A48 <AmiBlitz3.ab3@2928>     BEQ 'ns1
00021A4C <AmiBlitz3.ab3@2929>     CMP.b #"#",d0
00021A50 <AmiBlitz3.ab3@2930>     BEQ 'm1
00021A54 <AmiBlitz3.ab3@2931>     CMP.b #"$",d0
00021A58 <AmiBlitz3.ab3@2932>     BEQ 'm1
00021A5C <AmiBlitz3.ab3@2933>     CMP.b #"-",d0
00021A60 <AmiBlitz3.ab3@2934>     BEQ 'm1
00021A64 <AmiBlitz3.ab3@2937>   CMP.b #",",d0
00021A68 <AmiBlitz3.ab3@2938>     BEQ 'm1
00021A6C <AmiBlitz3.ab3@2939>     CMP.b #"{",d0
00021A70 <AmiBlitz3.ab3@2940>     BNE 'm1b
00021A72 <AmiBlitz3.ab3@2941>     ADDQ.l #1,a4
00021A76 <AmiBlitz3.ab3@2942>  BRA 'm1
00021A7C <AmiBlitz3.ab3@2945>   TST.b newsyntax
00021A80 <AmiBlitz3.ab3@2946>     BEQ 'm1
00021A88 <AmiBlitz3.ab3@2947>     MOVE.b #1,exmac
00021A8C <AmiBlitz3.ab3@2950>   MOVEM.l (a7)+,a0/d0
00021A92 <AmiBlitz3.ab3@2951>     TST.b exmac
00021A96 <AmiBlitz3.ab3@2952>     BNE 'nops
00021A98 <AmiBlitz3.ab3@2959>   TST.b (a4)
00021A9C <AmiBlitz3.ab3@2960>   BEQ 'nops
00021AA2 <AmiBlitz3.ab3@2964>   MOVEA.l ptr_macrobuffer_begin,A0    ;start of parameter collect
00021AA4 <AmiBlitz3.ab3@2967>   ADDQ.w #1,D4                        ;another p
00021AA6 <AmiBlitz3.ab3@2968>   MOVE.l A4,(A0)
00021AAA <AmiBlitz3.ab3@2970>   CLR.w 4(a0)
00021AAE <AmiBlitz3.ab3@2972>    BSR.w findit
00021AB0 <AmiBlitz3.ab3@2975>   ADDQ.l #4,a0
00021AB2 <AmiBlitz3.ab3@2981>   SUBQ.w #1,(a0)+
00021AB6 <AmiBlitz3.ab3@2983>   CMP.b #$7D,D0     ;'}'
00021ABA <AmiBlitz3.ab3@2985>   BEQ 'l10b1
00021ABC <AmiBlitz3.ab3@2986>   TST.b d0
00021AC0 <AmiBlitz3.ab3@2987>   BEQ 'l10b1
00021AC4 <AmiBlitz3.ab3@2988>  BRA 'ppl
00021ACA <AmiBlitz3.ab3@2994>   CLR.l sourceline3
00021ACC <AmiBlitz3.ab3@2996>   MOVEA.l A4,A5
00021AD2 <AmiBlitz3.ab3@2999>   MOVE.w D4,numarg
00021AD8 <AmiBlitz3.ab3@3010>   MOVE.l #$01,D1
00021ADE <AmiBlitz3.ab3@3011>   MOVEA.l _execbase,A6
00021AE4 <AmiBlitz3.ab3@3013>   MOVE.l mempool,a0
00021AEA <AmiBlitz3.ab3@3014>   MOVE.l macrobuffer_size,D0
00021AF0 <AmiBlitz3.ab3@3015>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021AF4 <AmiBlitz3.ab3@3016>   BGE 'l1mc
00021AFA <AmiBlitz3.ab3@3017>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021B00 <AmiBlitz3.ab3@3018>   MOVE.l d0,macrobuffer_size
00021B04 <AmiBlitz3.ab3@3021>   JSR _AllocPooled(a6)
00021B0E <AmiBlitz3.ab3@3025>   MOVE.l myline,myoline
00021B10 <AmiBlitz3.ab3@3029>   ADDQ.l #1,d0
00021B16 <AmiBlitz3.ab3@3031>   MOVE.l D0,myline
00021B18 <AmiBlitz3.ab3@3032>   MOVEA.l D0,A1
00021B1E <AmiBlitz3.ab3@3034>   MOVE.b #":",-1(a1)
00021B20 <AmiBlitz3.ab3@3036>   MOVEA.l A1,A6
00021B26 <AmiBlitz3.ab3@3037>   ADDA.l macrobuffer_size,A6   ;end of macro buffer
00021B28 <AmiBlitz3.ab3@3039>   MOVEA.l (A7)+,A0             ;start of the line
00021B2A <AmiBlitz3.ab3@3042>   CMPA.l A6,A1
00021B2E <AmiBlitz3.ab3@3043>    BCC.w mbovererr
00021B30 <AmiBlitz3.ab3@3044>   MOVE.b (A0)+,(a1)+
00021B32 <AmiBlitz3.ab3@3045>   CMPA.l A3,A0
00021B36 <AmiBlitz3.ab3@3046>    BCS.w 'loop2
00021B38 <AmiBlitz3.ab3@3047>   SUBQ.w #1,A1                 ;back over '#'
00021B3C <AmiBlitz3.ab3@3049>   MOVE.w $8(A2),D1             ;mac len
00021B40 <AmiBlitz3.ab3@3050>    BEQ.w 'loop4
00021B48 <AmiBlitz3.ab3@3051>   MOVE.w $A(A2),macnum
00021B4C <AmiBlitz3.ab3@3052>   ADDQ.w #1,$A(A2)
00021B50 <AmiBlitz3.ab3@3053>   MOVEA.l $4(A2),A2
00021B52 <AmiBlitz3.ab3@3054>   SUBQ.w #1,D1
00021B58 <AmiBlitz3.ab3@3056>   CLR.b firstmline
00021B5A <AmiBlitz3.ab3@3060>     MOVEQ.l #$00,D0
00021B5C <AmiBlitz3.ab3@3061>     MOVE.b (A2)+,D0
00021B62 <AmiBlitz3.ab3@3063>     TST.b firstmline
00021B66 <AmiBlitz3.ab3@3064>     BNE 'c1
00021B6A <AmiBlitz3.ab3@3065>     CMP.b #$22,d0         ;'"'
00021B6E <AmiBlitz3.ab3@3066>     BNE 's1
00021B76 <AmiBlitz3.ab3@3067>     MOVE.b #1,firstmline
00021B7A <AmiBlitz3.ab3@3070>     CMP.b #":",d0
00021B7E <AmiBlitz3.ab3@3071>     BNE 'm1a
00021B86 <AmiBlitz3.ab3@3072>     MOVE.b #1,firstmline
00021B8A <AmiBlitz3.ab3@3075>     CMP.b #";",d0
00021B8E <AmiBlitz3.ab3@3076>     BNE 'c1
00021B90 <AmiBlitz3.ab3@3079>     SUBQ.w #1,d1                                           ;filter out comment
00021B92 <AmiBlitz3.ab3@3080>     MOVE.b (a2)+,d0
00021B98 <AmiBlitz3.ab3@3081>     CMP.w #":@",-1(a2)
00021B9C <AmiBlitz3.ab3@3082>     BEQ 'c2
00021B9E <AmiBlitz3.ab3@3083>     TST.w d1
00021BA2 <AmiBlitz3.ab3@3084>     BNE 'l1d
00021BA6 <AmiBlitz3.ab3@3085>    BRA 'oky2
00021BAC <AmiBlitz3.ab3@3088>     CMP.b #":",1(a2)
00021BB0 <AmiBlitz3.ab3@3089>       BNE 'l1d
00021BB2 <AmiBlitz3.ab3@3090>       ADDQ #2,a2
00021BB4 <AmiBlitz3.ab3@3091>       SUBQ #3,d1
00021BB6 <AmiBlitz3.ab3@3092>       MOVE.b (a2)+,d0
00021BBE <AmiBlitz3.ab3@3093>       MOVE.b #1,firstmline
00021BC2 <AmiBlitz3.ab3@3097>     CMP.b #"`",D0
00021BC6 <AmiBlitz3.ab3@3098>      BNE.w 'oky
00021BC8 <AmiBlitz3.ab3@3099>     SUBQ.w #1,D1
00021BCA <AmiBlitz3.ab3@3100>     MOVE.b (A2)+,D0
00021BCE <AmiBlitz3.ab3@3101>     CMP.w #$7B,D0       ;'{'
00021BD2 <AmiBlitz3.ab3@3102>      BEQ.w 'evalit
00021BD6 <AmiBlitz3.ab3@3103>     CMP.w #$40,D0       ;'@'
00021BDA <AmiBlitz3.ab3@3104>      BNE.w 'notnum
00021BDC <AmiBlitz3.ab3@3108>     MOVEQ.l #$00,D2
00021BE2 <AmiBlitz3.ab3@3109>     MOVE.w macnum,D2
00021BE4 <AmiBlitz3.ab3@3110>     MOVEA.l A1,A0
00021BE6 <AmiBlitz3.ab3@3111>     MOVE.w D1,-(A7)
00021BEC <AmiBlitz3.ab3@3112>      JSR makelong
00021BEE <AmiBlitz3.ab3@3113>     MOVEA.l A0,A1
00021BF0 <AmiBlitz3.ab3@3114>     MOVE.w (A7)+,D1
00021BF4 <AmiBlitz3.ab3@3116>    BRA.w 'oky2
00021BF8 <AmiBlitz3.ab3@3119>     ORI.w #$20,D0
00021BFC <AmiBlitz3.ab3@3120>     CMP.w #$7A,D0       ;'z'
00021C00 <AmiBlitz3.ab3@3121>      BCS.w 'fkit
00021C06 <AmiBlitz3.ab3@3122>    JMP ilconsterr
00021C0A <AmiBlitz3.ab3@3125>     SUBI.w #$30,D0
00021C0E <AmiBlitz3.ab3@3126>     CMP.w #$A,D0
00021C12 <AmiBlitz3.ab3@3127>      BCS.w 'itsgot
00021C16 <AmiBlitz3.ab3@3129>     SUBI.w #$27,D0
00021C1A <AmiBlitz3.ab3@3130>     CMP.w #$A,D0
00021C1E <AmiBlitz3.ab3@3131>      BCC.w 'fkit2
00021C24 <AmiBlitz3.ab3@3132>    JMP ilconsterr
00021C28 <AmiBlitz3.ab3@3135>    BRA.w 'itsgot
00021C2A <AmiBlitz3.ab3@3138>     MOVE.l A5,-(A7)
00021C2E <AmiBlitz3.ab3@3139>     MOVEM.l D1/A1-A2/A6,-(A7)
00021C30 <AmiBlitz3.ab3@3140>     MOVEA.l A2,A5
00021C36 <AmiBlitz3.ab3@3141>      JSR evalconst2
00021C3A <AmiBlitz3.ab3@3142>     CMP.w #$7D,D0      ;'}'
00021C3E <AmiBlitz3.ab3@3143>      BEQ.w 'allisok
00021C44 <AmiBlitz3.ab3@3144>    JMP syntaxerr
00021C48 <AmiBlitz3.ab3@3147>     MOVEM.l (A7)+,D1/A1-A2/A6
00021C4A <AmiBlitz3.ab3@3148>     MOVE.l A5,D2
00021C4C <AmiBlitz3.ab3@3149>     SUB.l A2,D2
00021C4E <AmiBlitz3.ab3@3150>     SUB.w D2,D1
00021C50 <AmiBlitz3.ab3@3151>     MOVEA.l A5,A2
00021C56 <AmiBlitz3.ab3@3153>     CLR.w instringon
00021C58 <AmiBlitz3.ab3@3154>     MOVEA.l (A7)+,A5
00021C5A <AmiBlitz3.ab3@3156>     MOVE.l D3,D0
00021C5E <AmiBlitz3.ab3@3157>     BPL.w 'itsgot
00021C64 <AmiBlitz3.ab3@3158>    JMP ilconsterr
00021C66 <AmiBlitz3.ab3@3161>     SUBQ.w #1,D0
00021C6A <AmiBlitz3.ab3@3162>      BPL.w 'ok
00021C70 <AmiBlitz3.ab3@3166>     MOVE.w numarg,D0
00021C74 <AmiBlitz3.ab3@3167>     DIVU #$A,D0
00021C78 <AmiBlitz3.ab3@3168>     ADDI.w #$30,D0
00021C7A <AmiBlitz3.ab3@3169>     CMPA.l A6,A1
00021C7E <AmiBlitz3.ab3@3170>      BCC.w mbovererr
00021C80 <AmiBlitz3.ab3@3171>     MOVE.b D0,(A1)+
00021C82 <AmiBlitz3.ab3@3172>     SWAP D0
00021C86 <AmiBlitz3.ab3@3173>     ADDI.w #$30,D0
00021C88 <AmiBlitz3.ab3@3174>     CMPA.l A6,A1
00021C8C <AmiBlitz3.ab3@3175>      BCC.w mbovererr
00021C8E <AmiBlitz3.ab3@3176>     MOVE.b D0,(A1)+
00021C92 <AmiBlitz3.ab3@3177>    BRA.w 'oky2
00021C98 <AmiBlitz3.ab3@3183>     CMP.w numarg,D0
00021C9C <AmiBlitz3.ab3@3184>      BCC.w 'oky2
00021C9E <AmiBlitz3.ab3@3185>     LSL.w #1,D0
00021CA0 <AmiBlitz3.ab3@3186>     MOVE.w D0,D4
00021CA2 <AmiBlitz3.ab3@3187>     LSL.w #1,D0
00021CA4 <AmiBlitz3.ab3@3188>     ADD.w D4,D0          ;*6
00021CAA <AmiBlitz3.ab3@3189>     MOVEA.l ptr_macrobuffer_begin,A0
00021CAC <AmiBlitz3.ab3@3190>     ADDA.w D0,A0
00021CB0 <AmiBlitz3.ab3@3191>     MOVE.w $4(A0),D4     ;len of replacetext
00021CB4 <AmiBlitz3.ab3@3192>      BEQ.w 'oky2
00021CB6 <AmiBlitz3.ab3@3193>     MOVEA.l (A0),A0
00021CB8 <AmiBlitz3.ab3@3194>     SUBQ.w #1,D4
00021CBA <AmiBlitz3.ab3@3197>       CMPA.l A6,A1
00021CBE <AmiBlitz3.ab3@3198>        BCC.w mbovererr
00021CC2 <AmiBlitz3.ab3@3200>       CMP.w #"@@",(a0)
00021CC6 <AmiBlitz3.ab3@3201>        BNE 'l10e
00021CCC <AmiBlitz3.ab3@3202>       TST.w ininclude
00021CD0 <AmiBlitz3.ab3@3203>        BNE errorjoin
00021CD6 <AmiBlitz3.ab3@3206>       MOVE.l sourceline,a0
00021CD8 <AmiBlitz3.ab3@3207>       MOVE.l (a0),a0
00021CDE <AmiBlitz3.ab3@3208>       CMP.l #0,a0
00021CE2 <AmiBlitz3.ab3@3209>       BNE 'l11e
00021CE4 <AmiBlitz3.ab3@3210>       MOVEQ #0,d0
00021CEA <AmiBlitz3.ab3@3211>       JSR error
00021CF0 <AmiBlitz3.ab3@3214>       MOVE.l a0,sourceline
00021CF6 <AmiBlitz3.ab3@3215>       ADDQ.l #1,linenumat
00021CFA <AmiBlitz3.ab3@3216>       LEA 9(a0),a0
00021CFC <AmiBlitz3.ab3@3217>       MOVE.l a0,-(a7)
00021D00 <AmiBlitz3.ab3@3220>       CMP.b #" ",(a0)+
00021D04 <AmiBlitz3.ab3@3221>        BEQ 'l110e
00021D0A <AmiBlitz3.ab3@3222>       CMP.b #";",-1(a0)
00021D0C <AmiBlitz3.ab3@3223>       MOVE.l (a7)+,a0
00021D10 <AmiBlitz3.ab3@3224>        BEQ 'l111e
00021D12 <AmiBlitz3.ab3@3225>       SUBQ.l #1,d4
00021D14 <AmiBlitz3.ab3@3229>       MOVE.b (A0)+,(A1)+
00021D18 <AmiBlitz3.ab3@3230>     DBF D4,'plp
00021D1C <AmiBlitz3.ab3@3232>     BRA.w 'oky2
00021D1E <AmiBlitz3.ab3@3235>     CMPA.l A6,A1
00021D22 <AmiBlitz3.ab3@3236>      BCC.w mbovererr
00021D24 <AmiBlitz3.ab3@3237>     MOVE.b D0,(A1)+
00021D28 <AmiBlitz3.ab3@3238>      BPL.w 'oky2
00021D2A <AmiBlitz3.ab3@3239>     CMPA.l A6,A1
00021D2E <AmiBlitz3.ab3@3240>      BCC.w mbovererr
00021D30 <AmiBlitz3.ab3@3241>     MOVE.b (A2)+,(A1)+
00021D32 <AmiBlitz3.ab3@3242>     SUBQ.w #1,D1
00021D36 <AmiBlitz3.ab3@3245>    DBF D1,'loop3
00021D38 <AmiBlitz3.ab3@3255>   CMPA.l A6,A1
00021D3C <AmiBlitz3.ab3@3256>    BCC.w mbovererr
00021D3E <AmiBlitz3.ab3@3257>   MOVE.b (A5)+,(A1)+
00021D42 <AmiBlitz3.ab3@3258>    BNE.w 'loop4
00021D48 <AmiBlitz3.ab3@3260>   MOVEA.l myline,A5
00021D4E <AmiBlitz3.ab3@3262>   MOVE.l myoline,D0
00021D52 <AmiBlitz3.ab3@3263>    BEQ.w 'skip3
00021D54 <AmiBlitz3.ab3@3265>   SUBQ.l #1,d0
00021D56 <AmiBlitz3.ab3@3267>   MOVEA.l D0,A1
00021D5C <AmiBlitz3.ab3@3268>   MOVE.l macrobuffer_size,D0
00021D62 <AmiBlitz3.ab3@3269>   MOVEA.l _execbase,A6
00021D68 <AmiBlitz3.ab3@3271>   MOVE.l mempool,a0
00021D6C <AmiBlitz3.ab3@3272>   JSR _FreePooled(A6)
00021D70 <AmiBlitz3.ab3@3277>  BRA.w 'loop0
00021D72 <AmiBlitz3.ab3@3280>   MOVEA.l (A7)+,A5
00021D74 <AmiBlitz3.ab3@3281> RTS
00021D7A <AmiBlitz3.ab3@3285>   MOVE.l myline,D0
00021D7E <AmiBlitz3.ab3@3286>   BEQ.w 'no
00021D80 <AmiBlitz3.ab3@3288>   SUBQ.l #1,d0
00021D86 <AmiBlitz3.ab3@3290>   CLR.l myline
00021D88 <AmiBlitz3.ab3@3291>   MOVEA.l D0,A1
00021D8E <AmiBlitz3.ab3@3292>   MOVE.l macrobuffer_size,D0
00021D94 <AmiBlitz3.ab3@3293>   MOVEA.l _execbase,A6
00021D9A <AmiBlitz3.ab3@3295>   MOVE.l mempool,a0
00021D9E <AmiBlitz3.ab3@3296>  JMP _FreePooled(A6)
00021DA0 <AmiBlitz3.ab3@3301> RTS
00021DA2 <AmiBlitz3.ab3@3307>   MOVEQ.l #$00,D2    ;no nesting
00021DA6 <AmiBlitz3.ab3@3311>   ADDQ.w #1,4(a0)
00021DA8 <AmiBlitz3.ab3@3313>    MOVE.b (A4)+,D0
00021DAC <AmiBlitz3.ab3@3316>    BEQ exit1
00021DB0 <AmiBlitz3.ab3@3318>    BPL.w 'tst
00021DB4 <AmiBlitz3.ab3@3320>   ADDQ.w #1,4(a0)
00021DB6 <AmiBlitz3.ab3@3322>   ADDQ.w #1,A4
00021DBA <AmiBlitz3.ab3@3323>  BRA.w 'loop
00021DC0 <AmiBlitz3.ab3@3327>    TST.w instringon
00021DC4 <AmiBlitz3.ab3@3328>    BNE 'lnom
00021DC8 <AmiBlitz3.ab3@3329>    CMP.b #";",d0
00021DCC <AmiBlitz3.ab3@3330>    BEQ exit2
00021DD0 <AmiBlitz3.ab3@3331>    CMP.b #":",d0
00021DD4 <AmiBlitz3.ab3@3332>    BEQ exit2
00021DD8 <AmiBlitz3.ab3@3336>   CMP.b #$22,D0           ;'"'
00021DDC <AmiBlitz3.ab3@3337>    BNE.w 'notq
00021DE2 <AmiBlitz3.ab3@3338>   NOT.w instringon
00021DE6 <AmiBlitz3.ab3@3339>  BRA.w 'loop
00021DEC <AmiBlitz3.ab3@3342>   TST.w instringon
00021DF0 <AmiBlitz3.ab3@3343>    BNE.w 'loop
00021DF4 <AmiBlitz3.ab3@3345>    CMP.b #"@",d0
00021DF8 <AmiBlitz3.ab3@3346>    BNE 'l10
00021DFC <AmiBlitz3.ab3@3347>    CMP.b #"@",(a4)
00021E00 <AmiBlitz3.ab3@3348>    BNE 'l10
00021E06 <AmiBlitz3.ab3@3349>    TST.w ininclude
00021E0A <AmiBlitz3.ab3@3350>    BNE errorjoin
00021E10 <AmiBlitz3.ab3@3351>    MOVE.l sourceline3,a4
00021E16 <AmiBlitz3.ab3@3352>    CMP.l #0,a4
00021E1A <AmiBlitz3.ab3@3353>    BNE 'l11
00021E20 <AmiBlitz3.ab3@3354>    MOVE.l sourceline,a4
00021E22 <AmiBlitz3.ab3@3357>   MOVE.l (a4),a4
00021E28 <AmiBlitz3.ab3@3358>       CMP.l #0,a4
00021E2C <AmiBlitz3.ab3@3359>       BNE 'l12
00021E2E <AmiBlitz3.ab3@3360>       MOVEQ #0,d0
00021E34 <AmiBlitz3.ab3@3361>       JSR error
00021E3A <AmiBlitz3.ab3@3364>    MOVE.l a4,sourceline3
00021E3E <AmiBlitz3.ab3@3365>    LEA 9(a4),a4
00021E40 <AmiBlitz3.ab3@3366>    MOVEQ #",",d0
00021E44 <AmiBlitz3.ab3@3370>   CMP.b #$2C,D0       ;','
00021E48 <AmiBlitz3.ab3@3371>    BNE.w 'notc
00021E4A <AmiBlitz3.ab3@3372>   TST.w D2
00021E4E <AmiBlitz3.ab3@3373>    BEQ.w 'done
00021E52 <AmiBlitz3.ab3@3374>  BRA.w 'loop
00021E56 <AmiBlitz3.ab3@3379>    CMP.b #$7B,D0      ; same as itisopen                                     ;"{"
00021E5A <AmiBlitz3.ab3@3380>    BEQ.w 'l10b
00021E5E <AmiBlitz3.ab3@3381>   CMP.b #$28,D0                                            ;"("
00021E62 <AmiBlitz3.ab3@3385>    BNE.w 'noto
00021E64 <AmiBlitz3.ab3@3386>   ADDQ.w #1,D2
00021E68 <AmiBlitz3.ab3@3387>  BRA.w 'loop
00021E6C <AmiBlitz3.ab3@3390>   CMP.b #$7D,D0       ;'}'                                    ;"}"
00021E70 <AmiBlitz3.ab3@3391>    BNE.w 'notcb
00021E72 <AmiBlitz3.ab3@3392>  TST.w D2
00021E76 <AmiBlitz3.ab3@3393>    BEQ.w 'done
00021E7A <AmiBlitz3.ab3@3398>    CMP.b #$7D,D0     ; same as isitclose                                       ;"}"
00021E7E <AmiBlitz3.ab3@3399>    BEQ.w 'l10a
00021E82 <AmiBlitz3.ab3@3400>   CMP.b #$29,D0                                            ;")"
00021E86 <AmiBlitz3.ab3@3404>    BNE.w 'loop
00021E88 <AmiBlitz3.ab3@3405>   SUBQ.w #1,D2
00021E8C <AmiBlitz3.ab3@3406> BRA.w 'loop
00021E8E <AmiBlitz3.ab3@3409> RTS
00021E90 <AmiBlitz3.ab3@3414>       SUBQ.l #1,a4
00021E96 <AmiBlitz3.ab3@3415>       CLR.l sourceline3
00021E98 <AmiBlitz3.ab3@3416> RTS
00021E9A <AmiBlitz3.ab3@3420>       MOVEQ #0,d0
00021E9C <AmiBlitz3.ab3@3421>       SUBQ.l #1,a4
00021EA2 <AmiBlitz3.ab3@3422>       CLR.l sourceline3
00021EA4 <AmiBlitz3.ab3@3423> RTS
00021EA8 <AmiBlitz3.ab3@3428>   CMP.b #$7B,D0        ;'{'                                     ;"{"
00021EAC <AmiBlitz3.ab3@3429>   BEQ.w 'yes
00021EB0 <AmiBlitz3.ab3@3430>   CMP.b #$28,D0        ;'('                                    ;"("
00021EB2 <AmiBlitz3.ab3@3433> RTS
00021EB6 <AmiBlitz3.ab3@3437>   CMP.b #$7D,D0         ;'}'                                   ;"}"
00021EBA <AmiBlitz3.ab3@3438>   BEQ.w 'yes
00021EBE <AmiBlitz3.ab3@3439>   CMP.b #$29,D0         ;')'                                   ;")"
00021EC0 <AmiBlitz3.ab3@3442> RTS
00021EC2 <AmiBlitz3.ab3@3446> stopit:     Ds.w 1
00021EC4 <AmiBlitz3.ab3@3447> clrreq:     Ds.w 1
00021EC8 <AmiBlitz3.ab3@3469>   MOVE.w clrreq(PC),D0
00021ECC <AmiBlitz3.ab3@3470>    BEQ.w 'skip
00021EFE <AmiBlitz3.ab3@3472> 
00021F04 <AmiBlitz3.ab3@3474>   LEA clrreq,a0
00021F06 <AmiBlitz3.ab3@3475>   NOT.w (a0)                                               ;reass
00021F0C <AmiBlitz3.ab3@3476>   MOVEA.l ptr_ThisTask,A0
00021F10 <AmiBlitz3.ab3@3477>   CLR.l $1E(A0)
00021F14 <AmiBlitz3.ab3@3478>   CLR.l $2A(A0)
00021F16 <AmiBlitz3.ab3@3481> RTS
00021F18 <AmiBlitz3.ab3@3484> intsused:  Ds.w 1
00021F20 <AmiBlitz3.ab3@3488>   MOVE.w #-1,blitzoff
00021F26 <AmiBlitz3.ab3@3489>   CLR.w intsused
00021F2C <AmiBlitz3.ab3@3490>   CLR.w anyerrs
00021F32 <AmiBlitz3.ab3@3491>   CLR.w blitzmode
00021F38 <AmiBlitz3.ab3@3492>   CLR.w dontwrite_nomemleft                                              ;nomemleft
00021F3E <AmiBlitz3.ab3@3493>   CLR.w constmode
00021F44 <AmiBlitz3.ab3@3494>   CLR.w cmake
00021F4A <AmiBlitz3.ab3@3495>   CLR.w cfetchmode
00021F50 <AmiBlitz3.ab3@3496>   CLR.l intdata1
00021F56 <AmiBlitz3.ab3@3497>   CLR.w fuckpos
00021F5C <AmiBlitz3.ab3@3498>   CLR.w procnum
00021F62 <AmiBlitz3.ab3@3499>   CLR.w procnum2
00021F68 <AmiBlitz3.ab3@3500>   CLR.w dfetch
00021F6E <AmiBlitz3.ab3@3501>   CLR.l titleat
00021F74 <AmiBlitz3.ab3@3502>   CLR.b usedpath
00021F7A <AmiBlitz3.ab3@3503>   CLR.b path2
00021F80 <AmiBlitz3.ab3@3504>   CLR.w inerr
00021F86 <AmiBlitz3.ab3@3505>   CLR.w intlevel
00021F8C <AmiBlitz3.ab3@3506>   CLR.l cont_pc
00021F92 <AmiBlitz3.ab3@3507>   CLR.l cont_pc2
00021F98 <AmiBlitz3.ab3@3508>   CLR.l lastcontlink
00021FA2 <AmiBlitz3.ab3@3510>   MOVE.l destbufferstart,destpointer
00021FAC <AmiBlitz3.ab3@3511>   MOVE.l destbufferstart,bigpc
00021FB6 <AmiBlitz3.ab3@3512>   MOVE.l destbufferend,libend
00021FC0 <AmiBlitz3.ab3@3513>   MOVE.l data1start,data1
00021FCA <AmiBlitz3.ab3@3514>   MOVE.l data2at,data2
00021FD2 <AmiBlitz3.ab3@3516>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021FDA <AmiBlitz3.ab3@3517>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021FE0 <AmiBlitz3.ab3@3518>   CLR.w oldvcodelen
00021FE6 <AmiBlitz3.ab3@3519>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021FE8 <AmiBlitz3.ab3@3521> RTS
00021FEA <AmiBlitz3.ab3@3524> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021FF0 <AmiBlitz3.ab3@3528>   LEA  clrreq,a1
00021FF4 <AmiBlitz3.ab3@3529>   MOVE.w #2000,(a1)
0002201E <AmiBlitz3.ab3@3530>   !basic
0002206E <AmiBlitz3.ab3@3531>   comstatusstr  = !TRANS{"Initializing Compiler..."} ;default settings
00022076 <AmiBlitz3.ab3@3532>   calcpro       = 0
0002207E <AmiBlitz3.ab3@3533>   calcpro_old   = 0
0002208A <AmiBlitz3.ab3@3534>   typ_old       = -1
00022096 <AmiBlitz3.ab3@3535>   pass_old      = -1
0002209C <AmiBlitz3.ab3@3536>   update_comstatus_gui = True ; for the first
000220D6 <AmiBlitz3.ab3@3538>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00022110 <AmiBlitz3.ab3@3539>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
0002212E <AmiBlitz3.ab3@3540>   !asm
00022160 <AmiBlitz3.ab3@3541> 
00022166 <AmiBlitz3.ab3@3543>   CLR.w stopit
00022168 <AmiBlitz3.ab3@3544> RTS
0002216E <AmiBlitz3.ab3@3551>   CLR.w storedebugmode
00022174 <AmiBlitz3.ab3@3552>   CLR.b iserror
00022178 <AmiBlitz3.ab3@3554>   BSR.w compilerequester
00022182 <AmiBlitz3.ab3@3556>   MOVE.l #0,globallinecount
00022188 <AmiBlitz3.ab3@3557>   JSR check_of_same_source
0002218C <AmiBlitz3.ab3@3560>   BSR.w call_setpointerbusy
00022190 <AmiBlitz3.ab3@3562>   BSR.w setcvars
00022198 <AmiBlitz3.ab3@3564>   MOVE.w #$8000,globalvarpointer
000221A2 <AmiBlitz3.ab3@3565>   MOVE.l #newtype_quick,defaulttype
000221A8 <AmiBlitz3.ab3@3567>   MOVE.l A7,passstack
000221B2 <AmiBlitz3.ab3@3568>   MOVE.l #firstitem_,sourceline
000221BC <AmiBlitz3.ab3@3569>   MOVE.w numlines_org,linesleft
000221C6 <AmiBlitz3.ab3@3571>   MOVE.l numlines,numlines2
000221CC <AmiBlitz3.ab3@3573>   ADDQ.w #1,linesleft
000221D2 <AmiBlitz3.ab3@3574>   ADDQ.l #1,numlines2
000221DC <AmiBlitz3.ab3@3575>   MOVE.l #-1,linenumat
000221E0 <AmiBlitz3.ab3@3577>   BSR.w resetlibs
000221E4 <AmiBlitz3.ab3@3578>   BSR.w Aclearallvars
000221EA <AmiBlitz3.ab3@3580>   LEA progress_per_line+2,A0
000221EC <AmiBlitz3.ab3@3581>   MOVEQ.l #$03,D0
000221EE <AmiBlitz3.ab3@3584>     CLR.w (A0)+
000221F2 <AmiBlitz3.ab3@3585>   DBF D0,'okloop
000221F8 <AmiBlitz3.ab3@3589>   LEA _include,a0
000221FC <AmiBlitz3.ab3@3590>   MOVEM.l a0-a6/d0-d7,-(a7)
00022202 <AmiBlitz3.ab3@3591>   LEA ptr_parameterstore,a1
00022204 <AmiBlitz3.ab3@3594>     MOVE.b (a0)+,(a1)+
00022208 <AmiBlitz3.ab3@3595>   BNE 'l1b
0002220A <AmiBlitz3.ab3@3597>   MOVEQ #9,d2
00022210 <AmiBlitz3.ab3@3598>   JSR findlabel2
00022214 <AmiBlitz3.ab3@3599>   BNE 'd
0002221C <AmiBlitz3.ab3@3600>   MOVE.l #0,8(a2)
00022220 <AmiBlitz3.ab3@3601>   MOVEM.l (a7)+,a0-a6/d0-d7
00022224 <AmiBlitz3.ab3@3602>  BRA 'd2
0002222A <AmiBlitz3.ab3@3605>   JSR addlabelhash
00022232 <AmiBlitz3.ab3@3606>   MOVE.l #$1,$4(A2)
0002223A <AmiBlitz3.ab3@3607>   MOVE.l #0,8(a2)
0002223E <AmiBlitz3.ab3@3608>   MOVEM.l (a7)+,a0-a6/d0-d7
00022244 <AmiBlitz3.ab3@3611>   LEA _debug,a0
00022248 <AmiBlitz3.ab3@3612>   MOVEM.l a0-a6/d0-d7,-(a7)
0002224E <AmiBlitz3.ab3@3613>   LEA ptr_parameterstore,a1
00022250 <AmiBlitz3.ab3@3616>     MOVE.b (a0)+,(a1)+
00022254 <AmiBlitz3.ab3@3617>   BNE 'l9b
00022256 <AmiBlitz3.ab3@3619>   MOVEQ #7,d2
0002225C <AmiBlitz3.ab3@3620>   JSR findlabel2
00022260 <AmiBlitz3.ab3@3621>   BNE 'd9
00022264 <AmiBlitz3.ab3@3622>   MOVE.b debugmode(PC),D0
00022266 <AmiBlitz3.ab3@3623>   EXT.w d0
00022268 <AmiBlitz3.ab3@3624>   EXT.l d0
0002226C <AmiBlitz3.ab3@3625>   MOVE.l d0,8(a2)
00022270 <AmiBlitz3.ab3@3626>   MOVEM.l (a7)+,a0-a6/d0-d7
00022274 <AmiBlitz3.ab3@3627>  BRA 'd9b
0002227A <AmiBlitz3.ab3@3630>   JSR addlabelhash
00022282 <AmiBlitz3.ab3@3631>   MOVE.l #$1,$4(A2)
00022286 <AmiBlitz3.ab3@3632>   MOVE.b debugmode(PC),D0
00022288 <AmiBlitz3.ab3@3633>   EXT.w d0
0002228A <AmiBlitz3.ab3@3634>   EXT.l d0
0002228E <AmiBlitz3.ab3@3635>   MOVE.l d0,8(a2)
00022292 <AmiBlitz3.ab3@3636>   MOVEM.l (a7)+,a0-a6/d0-d7
00022298 <AmiBlitz3.ab3@3639>   MOVE.l #firstitem_,a0
0002229A <AmiBlitz3.ab3@3640>   MOVE.l (a0),a0
0002229E <AmiBlitz3.ab3@3641>   LEA 9(a0),a0
000222A6 <AmiBlitz3.ab3@3642>   MOVE.w #0,exdebug
000222AC <AmiBlitz3.ab3@3643>   TST.b debugmode
000222B0 <AmiBlitz3.ab3@3644>    BEQ 'l10
000222B2 <AmiBlitz3.ab3@3647>   MOVE.b (a0)+,d0
000222B6 <AmiBlitz3.ab3@3648>    BEQ 'l10
000222BA <AmiBlitz3.ab3@3649>   CMP.b #$20,d0
000222BE <AmiBlitz3.ab3@3650>    BEQ 'l2
000222C0 <AmiBlitz3.ab3@3651>   SUBQ.l #1,a0
000222C6 <AmiBlitz3.ab3@3652>   CMP.l #"DEBU",(a0)
000222CA <AmiBlitz3.ab3@3653>    BNE 'l10
000222D0 <AmiBlitz3.ab3@3654>   CMP.b #"G",4(a0)
000222D4 <AmiBlitz3.ab3@3655>    BNE 'l10
000222DC <AmiBlitz3.ab3@3656>   MOVE.w #$0,debugversion
000222E4 <AmiBlitz3.ab3@3657>   MOVE.b #1,exdebug
000222EA <AmiBlitz3.ab3@3664>   LEA nops4,A0
000222F0 <AmiBlitz3.ab3@3665>   LEA nopsf,A1
000222F6 <AmiBlitz3.ab3@3666>   JSR pokecode2                                            ;write intro nops
000222FC <AmiBlitz3.ab3@3668>   MOVE.l #$01010101,d1
00022302 <AmiBlitz3.ab3@3669>   JSR writedatalong                                        ;for the 4 tempregs
00022308 <AmiBlitz3.ab3@3670>   JSR writedatalong
0002230E <AmiBlitz3.ab3@3671>   JSR writedatalong
00022314 <AmiBlitz3.ab3@3672>   JSR writedatalong
0002231A <AmiBlitz3.ab3@3673>   TST.b saved0
0002231E <AmiBlitz3.ab3@3674>    BEQ 'l1
00022324 <AmiBlitz3.ab3@3675>   MOVE.l #$4e714e71,d1
0002232A <AmiBlitz3.ab3@3676>   JSR writelong                                            ;add 2 nops
00022330 <AmiBlitz3.ab3@3677>   MOVE.l #$4e714e71,d1
00022336 <AmiBlitz3.ab3@3678>   JSR writelong                                            ;add 2 nops
0002233C <AmiBlitz3.ab3@3679>   MOVE.l #$4e714e71,d1
00022342 <AmiBlitz3.ab3@3680>   JSR writelong                                            ;add 2 nops
00022348 <AmiBlitz3.ab3@3681>    MOVE.l #$4e714e71,d1
0002234E <AmiBlitz3.ab3@3682>   JSR writelong                                            ;add 2 nops
00022352 <AmiBlitz3.ab3@3686>   MOVE.b debugmode(PC),D1
00022356 <AmiBlitz3.ab3@3687>    BEQ.b 'dskip
00022360 <AmiBlitz3.ab3@3688>   MOVE.b debugmode,storedebugmode
00022364 <AmiBlitz3.ab3@3690>   MOVE.w #$FFDC,D1        ;#runerrlib,
00022368 <AmiBlitz3.ab3@3691>    BSR.w uselib
0002236E <AmiBlitz3.ab3@3693>   TST.w debugversion                                       ;make a version for debugger
00022372 <AmiBlitz3.ab3@3694>    BNE.b 'exec
00022376 <AmiBlitz3.ab3@3698>   MOVE.w #$FA3C,D1        ;#debuglib,
0002237A <AmiBlitz3.ab3@3699>    BSR.w uselib
0002237E <AmiBlitz3.ab3@3700>   MOVE.w #$0001,D1        ;#dhandlerlib,
00022382 <AmiBlitz3.ab3@3701>    BSR.w uselib
00022386 <AmiBlitz3.ab3@3702>  BRA.b 'dskip
0002238A <AmiBlitz3.ab3@3707>   MOVE.w #$FA32,D1        ;#rundebuglib,
0002238E <AmiBlitz3.ab3@3708>   BSR.w uselib
00022392 <AmiBlitz3.ab3@3711>   BSR.w nextline
00022398 <AmiBlitz3.ab3@3713>   CLR.l linenum
0002239E <AmiBlitz3.ab3@3714>   CLR.l stacktrack
000223A4 <AmiBlitz3.ab3@3720>   ADDQ.l #1,linenum
000223AE <AmiBlitz3.ab3@3721>   MOVE.l destpointer,destpointer2
000223B4 <AmiBlitz3.ab3@3722>   MOVE.l a5,sourceline2
000223B8 <AmiBlitz3.ab3@3724>   BSR.w compile_line                                        ;compile pass
000223BC <AmiBlitz3.ab3@3728>   BSR.w nextline
000223C0 <AmiBlitz3.ab3@3729>    BNE.w passloop
000223C4 <AmiBlitz3.ab3@3730>   BSR.w JUMP_do_runerrson
000223C8 <AmiBlitz3.ab3@3731>   BSR.w pointchk
000223CE <AmiBlitz3.ab3@3733>   TST.b objectcount
000223D2 <AmiBlitz3.ab3@3734>    BNE macenderr
000223D8 <AmiBlitz3.ab3@3736>   CLR.l linenumat
000223DC <AmiBlitz3.ab3@3737>   BSR.w errchx2
000223E6 <AmiBlitz3.ab3@3739>   CMP.l #-1,bssend
000223EA <AmiBlitz3.ab3@3740>    BNE 'l30
000223F4 <AmiBlitz3.ab3@3741>   MOVE.l destpointer,bssend                                ;compile end
000223FA <AmiBlitz3.ab3@3744>   MOVE.l destpointer,d0
00022404 <AmiBlitz3.ab3@3745>   CMP.l #-1,bssstart
00022408 <AmiBlitz3.ab3@3746>   BNE 'lnf6
00022412 <AmiBlitz3.ab3@3747>   CMP.l #-1,chipstart
00022416 <AmiBlitz3.ab3@3748>   BNE 'lnf6
0002241A <AmiBlitz3.ab3@3749>  BRA 'leven4
00022420 <AmiBlitz3.ab3@3752>   MOVE.l destpointer,d1
00022422 <AmiBlitz3.ab3@3753>   ADDQ.l #3,d1
00022428 <AmiBlitz3.ab3@3754>   AND.l #$fffffffc,d1                                      ;bug ?
0002242E <AmiBlitz3.ab3@3755>   MOVE.l d1,destpointer
00022438 <AmiBlitz3.ab3@3758>   MOVE.l destpointer,codeend
00022442 <AmiBlitz3.ab3@3759>   CMP.l #-1,chipend
00022446 <AmiBlitz3.ab3@3760>   BNE 'l31
00022450 <AmiBlitz3.ab3@3761>   MOVE.l destpointer,chipend
00022456 <AmiBlitz3.ab3@3764>   MOVE.l destpointer,d1
00022458 <AmiBlitz3.ab3@3765>   ADDQ.l #1,d1
0002245E <AmiBlitz3.ab3@3766>   AND.l #$fffffffe,d1                                     ;new evenexit
00022464 <AmiBlitz3.ab3@3767>   MOVE.l d1,destpointer
00022468 <AmiBlitz3.ab3@3770>   MOVE.b debugmode(PC),D1
0002246C <AmiBlitz3.ab3@3771>    BEQ.b 'nodb
00022470 <AmiBlitz3.ab3@3773>    BSR.w debugstuff
00022474 <AmiBlitz3.ab3@3774>   MOVE.w #$C300,D1        ;#finalscheck,
0002247A <AmiBlitz3.ab3@3775>    JSR Atokejsr
0002247E <AmiBlitz3.ab3@3777>    BSR.w debugstuff
00022482 <AmiBlitz3.ab3@3778>   MOVE.l eopcode(PC),D1
00022488 <AmiBlitz3.ab3@3779>    JSR writelong
0002248C <AmiBlitz3.ab3@3780>   MOVE.l lastcontlink(PC),D1
00022490 <AmiBlitz3.ab3@3781>    BEQ.b 'nocl
00022492 <AmiBlitz3.ab3@3782>   MOVEA.l D1,A0
00022496 <AmiBlitz3.ab3@3783>   CLR.w $6(A0)
000224A0 <AmiBlitz3.ab3@3790>   MOVE.l destpointer,endop                                ;where end goes...
000224A6 <AmiBlitz3.ab3@3792>   TST.w blitzmode
000224AA <AmiBlitz3.ab3@3793>   BEQ.w 'nobl
000224AE <AmiBlitz3.ab3@3794>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
000224B4 <AmiBlitz3.ab3@3797>   TST.w intsused
000224B8 <AmiBlitz3.ab3@3798>   BEQ.b 'noints
000224BC <AmiBlitz3.ab3@3799>   MOVE.w #$C105,D1                                        ;interupts off!
000224C2 <AmiBlitz3.ab3@3800>   JSR tokejsr2
000224C6 <AmiBlitz3.ab3@3803>   BSR.w calcstatic
000224CC <AmiBlitz3.ab3@3804>   MOVE.w D4,numstatic
000224D2 <AmiBlitz3.ab3@3805>   MOVE.l D3,staticdata
000224D6 <AmiBlitz3.ab3@3806>    BSR.w calcmaxs
000224DC <AmiBlitz3.ab3@3808>   TST.l tokeslist
000224E0 <AmiBlitz3.ab3@3809>    BEQ.b 'skipjsrs
000224E6 <AmiBlitz3.ab3@3811>   MOVE.w gotocode,D1                                       ;jmp!
000224EC <AmiBlitz3.ab3@3812>    JSR writeword
000224F6 <AmiBlitz3.ab3@3813>   MOVE.l destpointer,endjmpat
000224FA <AmiBlitz3.ab3@3814>    BSR.w addoff
00022500 <AmiBlitz3.ab3@3815>    JSR writelong                                           
00022504 <AmiBlitz3.ab3@3817>    BSR.w fixjsrs                                         ;has to be done before finits!
0002250A <AmiBlitz3.ab3@3821>   TST.w dontwrite_nomemleft
0002250E <AmiBlitz3.ab3@3822>    BNE.b 'skipjsrs
00022512 <AmiBlitz3.ab3@3823>   MOVEA.l endjmpat(PC),A4
00022518 <AmiBlitz3.ab3@3824>   MOVE.l destpointer,(A4)
0002251E <AmiBlitz3.ab3@3828>   TST.b returncode
00022522 <AmiBlitz3.ab3@3829>   BEQ 'l2
00022526 <AmiBlitz3.ab3@3830>   MOVE.w #$2e80,d1
0002252C <AmiBlitz3.ab3@3831>   JSR writeword
00022532 <AmiBlitz3.ab3@3835>   JSR makefinits
00022538 <AmiBlitz3.ab3@3837>   TST.b returncode
0002253C <AmiBlitz3.ab3@3838>   BEQ 'l3
00022540 <AmiBlitz3.ab3@3839>   MOVE.w #$4e75,d1
00022546 <AmiBlitz3.ab3@3840>   JSR writeword
0002254A <AmiBlitz3.ab3@3841>  BRA 'l1
00022550 <AmiBlitz3.ab3@3845>   MOVE.l #$70004E75,D1
00022556 <AmiBlitz3.ab3@3846>   JSR writelong                                            ;write moveq #0,d0:rts
0002255C <AmiBlitz3.ab3@3849>   JSR makeinits
00022560 <AmiBlitz3.ab3@3850>   BSR.w asmfixer
00022564 <AmiBlitz3.ab3@3852>   BSR.w close_compilewin
00022568 <AmiBlitz3.ab3@3853> BRA.w call_setpointernormal
0002256E <AmiBlitz3.ab3@3856> JUMP_do_runerrson JMP do_runerrson
00022570 <AmiBlitz3.ab3@3860> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00022572 <AmiBlitz3.ab3@3861>             Dc.b $4E,$40                                   ;TRAP  #00
00022576 <AmiBlitz3.ab3@3863> endjmpat:   Ds.l 1
0002257C <AmiBlitz3.ab3@3867>   MOVEA.l newtype_string,A2
00022582 <AmiBlitz3.ab3@3868>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
00022586 <AmiBlitz3.ab3@3871>     CMPA.w #$0,A2
0002258A <AmiBlitz3.ab3@3872>      BEQ.w 'done
0002258E <AmiBlitz3.ab3@3873>     CMP.l $4(A2),D0
00022592 <AmiBlitz3.ab3@3874>      BNE.w 'next
0002259A <AmiBlitz3.ab3@3875>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
0002259E <AmiBlitz3.ab3@3876>  BRA.w notypeerr
000225A0 <AmiBlitz3.ab3@3879>     MOVEA.l (A2),A2
000225A4 <AmiBlitz3.ab3@3880>  BRA.w 'loop
000225A6 <AmiBlitz3.ab3@3883> RTS
000225AC <AmiBlitz3.ab3@3887>   LEA labelbase,A2
000225AE <AmiBlitz3.ab3@3891>   MOVE.l (A2),D0                                           ;testlabels
000225B2 <AmiBlitz3.ab3@3892>    BEQ.w 'done
000225B4 <AmiBlitz3.ab3@3893>   MOVEA.l D0,A2
000225B8 <AmiBlitz3.ab3@3894>   MOVE.l $4(A2),D0
000225BC <AmiBlitz3.ab3@3895>   BTST #$0,D0
000225C0 <AmiBlitz3.ab3@3896>    BNE.w 'loop
000225C4 <AmiBlitz3.ab3@3897>   MOVE.l $8(A2),D0
000225C8 <AmiBlitz3.ab3@3898>    BNE.w 'loop
000225D0 <AmiBlitz3.ab3@3899>   MOVE.w $10(A2),linenumat+2
000225D2 <AmiBlitz3.ab3@3900>   MOVEQ #0,d0
000225D6 <AmiBlitz3.ab3@3901>   MOVE.b $12(a2),d0
000225DE <AmiBlitz3.ab3@3902>   MOVE.w 0(a2,d0),linenumat
000225E4 <AmiBlitz3.ab3@3903>  JMP nolaberr                                               ;label not found
000225EA <AmiBlitz3.ab3@3906>   MOVE.l concomsp,D0
000225F0 <AmiBlitz3.ab3@3907>   CMP.l #concomstack,D0
000225F4 <AmiBlitz3.ab3@3908>    BNE.w chxerr4
000225FA <AmiBlitz3.ab3@3909>   MOVE.w connest,D1
000225FE <AmiBlitz3.ab3@3910>    BNE.w chxerr4
00022600 <AmiBlitz3.ab3@3914>   MOVE.l D1,-(A7)
00022606 <AmiBlitz3.ab3@3915>   MOVE.l firstsel,D1
0002260A <AmiBlitz3.ab3@3916>    BNE.w 'err1
00022610 <AmiBlitz3.ab3@3917>   MOVE.l firstrep,D1
00022614 <AmiBlitz3.ab3@3918>    BNE.w 'err2
0002261A <AmiBlitz3.ab3@3919>   MOVE.w intstring,D1
0002261E <AmiBlitz3.ab3@3920>    BNE.w 'err3
00022622 <AmiBlitz3.ab3@3921>   MOVE.l 4(a7),d1
00022628 <AmiBlitz3.ab3@3922>   MOVE.w proceduremode,D1
0002262C <AmiBlitz3.ab3@3923>    BNE.w 'err6
00022632 <AmiBlitz3.ab3@3924>   MOVE.l firstiff,d1
00022636 <AmiBlitz3.ab3@3925>    BNE 'err5
0002263C <AmiBlitz3.ab3@3926>   MOVE.l firstfor,D1
00022640 <AmiBlitz3.ab3@3927>    BNE.w 'err7
00022642 <AmiBlitz3.ab3@3928>   MOVE.l (A7)+,D1
00022644 <AmiBlitz3.ab3@3929>  RTS
0002264E <AmiBlitz3.ab3@3932>   MOVE.l sellineat,linenumat
00022654 <AmiBlitz3.ab3@3933>  JMP selerrz
0002265E <AmiBlitz3.ab3@3936>   MOVE.l replineat,linenumat
00022664 <AmiBlitz3.ab3@3937>  JMP unterr3
0002266E <AmiBlitz3.ab3@3940>   MOVE.l intlineat,linenumat
00022674 <AmiBlitz3.ab3@3941>  JMP interr2
0002267E <AmiBlitz3.ab3@3944>   MOVE.l iflineat,linenumat
00022684 <AmiBlitz3.ab3@3945>  JMP noenderr
0002268E <AmiBlitz3.ab3@3948>   MOVE.l prolineat,linenumat
00022694 <AmiBlitz3.ab3@3949>  JMP nopenderr
0002269E <AmiBlitz3.ab3@3952>   MOVE.l forlineat,linenumat
000226A4 <AmiBlitz3.ab3@3953> JMP nonexterr
000226AE <AmiBlitz3.ab3@3957>   MOVE.l ciflineat,linenumat
000226B4 <AmiBlitz3.ab3@3958> JMP nocenderr
000226BE <AmiBlitz3.ab3@3962>   MOVE.l data1,maxsat
000226C0 <AmiBlitz3.ab3@3963>   MOVEQ.l #$00,D4
000226C6 <AmiBlitz3.ab3@3964>   MOVEA.l libpointer,A2
000226CA <AmiBlitz3.ab3@3967>     CMPA.w #$0,A2
000226CE <AmiBlitz3.ab3@3968>      BEQ.w 'done
000226D2 <AmiBlitz3.ab3@3969>     TST.w $C(A2)
000226D6 <AmiBlitz3.ab3@3970>      BPL.w 'next
000226DA <AmiBlitz3.ab3@3971>     MOVE.l $12(A2),D0
000226DE <AmiBlitz3.ab3@3972>     TST.w -$2(A2,D0.L)
000226E2 <AmiBlitz3.ab3@3973>      BEQ.w 'next
000226E4 <AmiBlitz3.ab3@3975>     ADDQ.w #1,D4
000226E8 <AmiBlitz3.ab3@3976>     MOVE.w -$6(A2,D0.L),D1
000226EC <AmiBlitz3.ab3@3977>     BSR.w pokedata1
000226EE <AmiBlitz3.ab3@3978>     MOVEQ.l #$01,D1
000226F2 <AmiBlitz3.ab3@3979>     MOVE.w -$2(A2,D0.L),D2
000226F4 <AmiBlitz3.ab3@3980>     LSL.w D2,D1
000226F8 <AmiBlitz3.ab3@3981>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
000226FC <AmiBlitz3.ab3@3982>     BSR.w writedatalong
000226FE <AmiBlitz3.ab3@3985>     MOVEA.l (A2),A2
00022702 <AmiBlitz3.ab3@3986>  BRA.w 'loop
00022708 <AmiBlitz3.ab3@3989>   MOVE.w D4,maxsused
0002270C <AmiBlitz3.ab3@3990>    BEQ.w 'done2
00022710 <AmiBlitz3.ab3@3991>   MOVE.w #$FFFA,D1       ;was #65530    ;use memlib                                  ;;use memlib
00022714 <AmiBlitz3.ab3@3992> BRA.w uselib
00022716 <AmiBlitz3.ab3@3995> RTS
0002271C <AmiBlitz3.ab3@4001>    MOVE.l a7,stackaddr
00022720 <AmiBlitz3.ab3@4003>    BSR.w compile_term
00022724 <AmiBlitz3.ab3@4004>    BSR.w reget
00022728 <AmiBlitz3.ab3@4005>    BNE.w illeolerr
0002272E <AmiBlitz3.ab3@4007>    TST.w dontwrite_nomemleft
00022732 <AmiBlitz3.ab3@4008>    BNE 'l1
00022738 <AmiBlitz3.ab3@4009>    TST.l stacktrack
0002273C <AmiBlitz3.ab3@4010>    BNE errormsg_stack
00022740 <AmiBlitz3.ab3@4014>    CMP.w #-$7FDE,D0            ; was #$8000+34
00022744 <AmiBlitz3.ab3@4015>    BNE.w 'notelse
0002274A <AmiBlitz3.ab3@4016>    JSR do_else2
0002274E <AmiBlitz3.ab3@4017>  BRA.w compile_line
00022750 <AmiBlitz3.ab3@4020>   TST.w D0
00022754 <AmiBlitz3.ab3@4021>   BNE.w compile_line
0002275A <AmiBlitz3.ab3@4027>   MOVE.l firstiff,D0
0002275E <AmiBlitz3.ab3@4028>    BEQ.w 'done
00022760 <AmiBlitz3.ab3@4029>   MOVEA.l D0,A0
00022764 <AmiBlitz3.ab3@4030>   MOVE.w $C(A0),D1
00022768 <AmiBlitz3.ab3@4031>    BPL.w 'done
0002276C <AmiBlitz3.ab3@4035>   BCLR #$F,D1
00022772 <AmiBlitz3.ab3@4036>    JSR doendif2
00022778 <AmiBlitz3.ab3@4037>    JSR freetheifz
0002277C <AmiBlitz3.ab3@4038> BRA.w 'unthen
0002277E <AmiBlitz3.ab3@4041> RTS
00022784 <AmiBlitz3.ab3@4045>   LEA lastgloballabel,A0
00022786 <AmiBlitz3.ab3@4046>   TST.b (A0)
0002278A <AmiBlitz3.ab3@4047>   BEQ.w nolocerr
00022790 <AmiBlitz3.ab3@4048>   LEA ptr_parameterstore,A1
00022792 <AmiBlitz3.ab3@4049>   MOVEQ.l #$00,D2
00022794 <AmiBlitz3.ab3@4052>   ADDQ.w #1,D2
00022796 <AmiBlitz3.ab3@4053>   MOVE.b (A0)+,(A1)+
0002279A <AmiBlitz3.ab3@4054>    BNE.w 'loop
000227A0 <AmiBlitz3.ab3@4055>   MOVE.b #$27,-$1(A1)
000227A2 <AmiBlitz3.ab3@4056>   MOVE.w D2,-(A7)
000227A8 <AmiBlitz3.ab3@4057>    JSR makename4
000227AA <AmiBlitz3.ab3@4058>   CMP.w (A7)+,D2
000227AE <AmiBlitz3.ab3@4059>    BEQ.w syntaxerr
000227B0 <AmiBlitz3.ab3@4060>    TST.w d0
000227B4 <AmiBlitz3.ab3@4061>    BPL 'done
000227BC <AmiBlitz3.ab3@4062>    MOVE.w #$3a,lastchar
000227BE <AmiBlitz3.ab3@4063>    SUBQ.l #2,a5
000227C0 <AmiBlitz3.ab3@4066> RTS
000227CA <AmiBlitz3.ab3@4070>   MOVE.l #forthstack,forthsp
000227D4 <AmiBlitz3.ab3@4071>   MOVE.l #precstack,precsp
000227D6 <AmiBlitz3.ab3@4072> RTS
000227D8 <AmiBlitz3.ab3@4079>   MOVEQ.l #$00,D4
00022802 <AmiBlitz3.ab3@4082>   !basic
00022844 <AmiBlitz3.ab3@4083> 
00022854 <AmiBlitz3.ab3@4085>   If (c_abort = 1)           ; check if set
00022856 <AmiBlitz3.ab3@4086>     MOVEQ.l #-$01,d4
0002285C <AmiBlitz3.ab3@4087>     MOVE.w D4,stopit
0002287A <AmiBlitz3.ab3@4088>     !asm
0002287E <AmiBlitz3.ab3@4089>     BRA 'skip
0002289C <AmiBlitz3.ab3@4091>   !asm
0002289E <AmiBlitz3.ab3@4092>   MOVEQ.l #$00,D6
000228A0 <AmiBlitz3.ab3@4093>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
000228A2 <AmiBlitz3.ab3@4097> RTS
000228A6 <AmiBlitz3.ab3@4101>   MOVE.w stopit(PC),D0
000228AA <AmiBlitz3.ab3@4102>   BEQ 'chk
000228B0 <AmiBlitz3.ab3@4104>   SUBQ.w #1,stopit
000228B2 <AmiBlitz3.ab3@4109>  RTS
000228BA <AmiBlitz3.ab3@4113>   MOVE.w #2000,stopit
000228BE <AmiBlitz3.ab3@4115>   BSR.w chkrealstop
000228C2 <AmiBlitz3.ab3@4116>   BEQ.b 'rts
000228C6 <AmiBlitz3.ab3@4119>   BSR.w close_compilewin
000228CA <AmiBlitz3.ab3@4120>   BSR.w call_setpointernormal
000228D0 <AmiBlitz3.ab3@4122>   MOVEA.l errstack,A7
000228D6 <AmiBlitz3.ab3@4123>   MOVEA.l errcont,A0
000228DE <AmiBlitz3.ab3@4124>   MOVE.w #-1,anyerrs
000228E0 <AmiBlitz3.ab3@4125> JMP (A0)
000228E4 <AmiBlitz3.ab3@4128> d_pc:           Ds.l 1
000228E8 <AmiBlitz3.ab3@4129> d_bigpc:        Ds.l 1
000228EA <AmiBlitz3.ab3@4130> d_nomemleft:    Ds.w 1
000228EE <AmiBlitz3.ab3@4131> cont_pc:        Ds.l 1
000228F2 <AmiBlitz3.ab3@4132> cont_pc2:       Ds.l 1
000228F6 <AmiBlitz3.ab3@4133> lastcontlink:   Ds.l 1
000228FA <AmiBlitz3.ab3@4137>   ORI.w #$4E40,D1
000228FE <AmiBlitz3.ab3@4138> BRA.w JUMP_writeword
00022904 <AmiBlitz3.ab3@4142>   TST.b debugmode
00022908 <AmiBlitz3.ab3@4143>   BEQ.w debugstuffa_rts
0002290E <AmiBlitz3.ab3@4154>   TST.w dirmode                                            ;or while in direct mode...
00022912 <AmiBlitz3.ab3@4155>    BNE debugstuffa_rts
0002291C <AmiBlitz3.ab3@4157>   MOVE.l destpointer,d_pc
00022926 <AmiBlitz3.ab3@4158>   MOVE.l bigpc,d_bigpc
00022930 <AmiBlitz3.ab3@4159>   MOVE.w dontwrite_nomemleft,d_nomemleft
00022934 <AmiBlitz3.ab3@4161>   MOVEM.l D0-D1,-(A7)
00022936 <AmiBlitz3.ab3@4163>   MOVEQ.l #$01,D1
0002293A <AmiBlitz3.ab3@4164>    BSR.w writetrap                                         ;write the adress to sourceline
00022940 <AmiBlitz3.ab3@4168>    MOVE.l destpointer,D0
00022946 <AmiBlitz3.ab3@4169>   MOVE.l cont_pc,D1
0002294C <AmiBlitz3.ab3@4170>   MOVE.l D0,cont_pc
00022952 <AmiBlitz3.ab3@4171>   MOVE.l D1,cont_pc2
00022956 <AmiBlitz3.ab3@4172>    BEQ.b 'skip
0002295C <AmiBlitz3.ab3@4174>   TST.w dontwrite_nomemleft
00022960 <AmiBlitz3.ab3@4175>    BNE.b 'skip
00022962 <AmiBlitz3.ab3@4177>   MOVEA.l D1,A4
00022964 <AmiBlitz3.ab3@4178>   SUB.l A4,D0
00022968 <AmiBlitz3.ab3@4179>   MOVE.w D0,$6(A4)
0002296E <AmiBlitz3.ab3@4180>   MOVE.l A4,lastcontlink
00022974 <AmiBlitz3.ab3@4184>   TST.w ininclude
0002297A <AmiBlitz3.ab3@4186>   TST.w makeexec
0002297E <AmiBlitz3.ab3@4187>   BEQ 'l1
00022984 <AmiBlitz3.ab3@4188>   TST.w exdebug
00022988 <AmiBlitz3.ab3@4189>   BEQ 'noinc
0002298C <AmiBlitz3.ab3@4192>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00022992 <AmiBlitz3.ab3@4193>   MOVE.l data1,d1
00022998 <AmiBlitz3.ab3@4194>   TST.b firsttime
0002299C <AmiBlitz3.ab3@4195>   BNE 'nofirst
000229A4 <AmiBlitz3.ab3@4196>   MOVE.b #1,firsttime
000229AA <AmiBlitz3.ab3@4197>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
000229B0 <AmiBlitz3.ab3@4198>   JSR writedatalong
000229B6 <AmiBlitz3.ab3@4199>   MOVE.l #"AmiB",d1
000229BC <AmiBlitz3.ab3@4200>   JSR writedatalong
000229C2 <AmiBlitz3.ab3@4201>   MOVE.l destbufferstart,d1
000229C8 <AmiBlitz3.ab3@4202>   JSR writedatalong
000229CE <AmiBlitz3.ab3@4203>   TST.w dontwrite_nomemleft
000229D2 <AmiBlitz3.ab3@4204>   BNE 'nohunk
000229D8 <AmiBlitz3.ab3@4205>   MOVE.l data1,d1
000229DA <AmiBlitz3.ab3@4206>   SUBQ.l #4,d1
000229E0 <AmiBlitz3.ab3@4207>   SUB.l destbufferstart,d1
000229E2 <AmiBlitz3.ab3@4208>   MOVE.l d1,d2
000229E8 <AmiBlitz3.ab3@4209>   JSR addhunkoffset
000229EE <AmiBlitz3.ab3@4212>   MOVE.l destpointer,d2
000229F4 <AmiBlitz3.ab3@4213>   MOVE.l data1,d1
000229FA <AmiBlitz3.ab3@4216>   MOVE.l destpointer,d2
000229FC <AmiBlitz3.ab3@4217>   MOVE.l d1,d3
00022A02 <AmiBlitz3.ab3@4218>   SUB.l destbufferstart,d1
00022A08 <AmiBlitz3.ab3@4219>   OR.l #$80000000,d1
00022A0E <AmiBlitz3.ab3@4220>   JSR writelong
00022A14 <AmiBlitz3.ab3@4221>   TST.w inmacro
00022A18 <AmiBlitz3.ab3@4222>   BEQ 'sc1
00022A1E <AmiBlitz3.ab3@4223>   MOVE.l myline,a0
00022A22 <AmiBlitz3.ab3@4225>  BRA 'inc2
00022A28 <AmiBlitz3.ab3@4228>   TST.w ininclude
00022A2C <AmiBlitz3.ab3@4229>   BEQ 'inc
00022A32 <AmiBlitz3.ab3@4230>   MOVE.l includesourceline,a0
00022A36 <AmiBlitz3.ab3@4231>  BRA 'inc2
00022A3C <AmiBlitz3.ab3@4234>   MOVE.l sourceline,a0
00022A40 <AmiBlitz3.ab3@4235>   LEA 9(a0),a0
00022A42 <AmiBlitz3.ab3@4238>   MOVE.l d1,d2
00022A44 <AmiBlitz3.ab3@4239>   MOVE.l A5,D1
00022A46 <AmiBlitz3.ab3@4240>   SUB.l a0,D1
00022A4C <AmiBlitz3.ab3@4241>   ADD.l #9,d1
00022A50 <AmiBlitz3.ab3@4242>   BSR.w JUMP_writeword
00022A56 <AmiBlitz3.ab3@4243>   CMP.l #9,d1
00022A5A <AmiBlitz3.ab3@4244>   BEQ 'pos1
00022A60 <AmiBlitz3.ab3@4245>   TST.w dontwrite_nomemleft
00022A64 <AmiBlitz3.ab3@4246>   BNE 'nopad
00022A6A <AmiBlitz3.ab3@4247>   MOVE.l lastsourceline,d1
00022A6E <AmiBlitz3.ab3@4248>   MOVE.l d1,-6(a4)
00022A72 <AmiBlitz3.ab3@4249>  BRA 'nopad
00022A78 <AmiBlitz3.ab3@4252>   MOVE.l d2,lastsourceline
00022A82 <AmiBlitz3.ab3@4253>    MOVE.l destpointer,lastdestpointer
00022A84 <AmiBlitz3.ab3@4254>    MOVEQ #0,d1
00022A8A <AmiBlitz3.ab3@4255>   MOVE.l data1,d2
00022A90 <AmiBlitz3.ab3@4256>   SUB.l destbufferstart,d2
00022A96 <AmiBlitz3.ab3@4257>   JSR writedatalong
00022A9C <AmiBlitz3.ab3@4258>   TST.w dontwrite_nomemleft
00022AA0 <AmiBlitz3.ab3@4259>   BNE 'no2
00022AA6 <AmiBlitz3.ab3@4260>   JSR addhunkoffset
00022AAC <AmiBlitz3.ab3@4263>   MOVE.l data1,d2
00022AB2 <AmiBlitz3.ab3@4264>   SUB.l destbufferstart,d2
00022AB8 <AmiBlitz3.ab3@4265>   JSR writedatalong
00022ABE <AmiBlitz3.ab3@4266>   TST.w dontwrite_nomemleft
00022AC2 <AmiBlitz3.ab3@4267>   BNE 'no
00022AC8 <AmiBlitz3.ab3@4268>   JSR addhunkoffset
00022ACE <AmiBlitz3.ab3@4269>   MOVE.l lastwritedat,a1
00022AD4 <AmiBlitz3.ab3@4270>   CMP.l #0,a1
00022AD8 <AmiBlitz3.ab3@4271>   BEQ 'no
00022ADA <AmiBlitz3.ab3@4272>   MOVE.l d3,(a1)
00022AE2 <AmiBlitz3.ab3@4273>   MOVE.l prevwritedat,4(a1)
00022AEC <AmiBlitz3.ab3@4274>   MOVE.l lastwritedat,prevwritedat
00022AF2 <AmiBlitz3.ab3@4277>   MOVE.l d3,lastwritedat
00022AF4 <AmiBlitz3.ab3@4278>   MOVEQ #4,d1
00022AF8 <AmiBlitz3.ab3@4279>   BSR pokedata1b
00022AFA <AmiBlitz3.ab3@4282>   MOVE.b (a0)+,d1
00022AFE <AmiBlitz3.ab3@4283>   BEQ 'done
00022B02 <AmiBlitz3.ab3@4284>   BSR pokedata1b
00022B06 <AmiBlitz3.ab3@4285>  BRA 'loop
00022B08 <AmiBlitz3.ab3@4288>   MOVEQ #0,d1
00022B0C <AmiBlitz3.ab3@4289>   BSR pokedata1b
00022B12 <AmiBlitz3.ab3@4290>   MOVE.l data1,d1
00022B16 <AmiBlitz3.ab3@4291>   BTST #0,d1
00022B1A <AmiBlitz3.ab3@4292>   BEQ 'nopad
00022B1C <AmiBlitz3.ab3@4293>   MOVEQ #0,d1
00022B20 <AmiBlitz3.ab3@4294>   BSR pokedata1b
00022B24 <AmiBlitz3.ab3@4297>   MOVEM.l (a7)+,a0-a1/d2/d3
00022B28 <AmiBlitz3.ab3@4298>  BRA 'noinc2
00022B2E <AmiBlitz3.ab3@4302>   MOVE.l sourceline,D1
00022B34 <AmiBlitz3.ab3@4303>   JSR writelong
00022B36 <AmiBlitz3.ab3@4304>   MOVE.l A5,D1
00022B3C <AmiBlitz3.ab3@4305>   SUB.l sourceline,D1
00022B42 <AmiBlitz3.ab3@4306>   JSR writeword
00022B44 <AmiBlitz3.ab3@4309>   MOVEQ.l #$00,D1
00022B4A <AmiBlitz3.ab3@4310>   JSR writeword          ;next cont goes here!                                  ; was: BSR.w writeword
00022B4E <AmiBlitz3.ab3@4312>   MOVEM.l (A7)+,D0-D1
00022B50 <AmiBlitz3.ab3@4315> RTS
00022B56 <AmiBlitz3.ab3@4319>   TST.b debugmode                                          ;extern debug
00022B5A <AmiBlitz3.ab3@4320>    BEQ.b 'rts
00022B60 <AmiBlitz3.ab3@4321>   TST.b dirmode
00022B64 <AmiBlitz3.ab3@4322>   BNE 'rts
00022B6E <AmiBlitz3.ab3@4330>   MOVE.w d_nomemleft,dontwrite_nomemleft
00022B78 <AmiBlitz3.ab3@4331>   MOVE.l d_bigpc,bigpc
00022B82 <AmiBlitz3.ab3@4332>   MOVE.l d_pc,destpointer
00022B8C <AmiBlitz3.ab3@4333>   MOVE.l cont_pc2,cont_pc
00022B8E <AmiBlitz3.ab3@4336> RTS
00022B98 <AmiBlitz3.ab3@4341>   MOVE.l #forthstack,forthsp
00022BA2 <AmiBlitz3.ab3@4342>   MOVE.l #precstack,precsp
00022BA8 <AmiBlitz3.ab3@4343>   CLR.w regnum
00022BAE <AmiBlitz3.ab3@4344>   CLR.w nonew
00022BB4 <AmiBlitz3.ab3@4345>   CLR.w sbasegot
00022BBE <AmiBlitz3.ab3@4346>   MOVE.w varcodelen,oldvcodelen
00022BC4 <AmiBlitz3.ab3@4347>   CLR.w varcodelen
00022BCC <AmiBlitz3.ab3@4348>   MOVE.w #-1,lasta6
00022BCE <AmiBlitz3.ab3@4349> RTS
00022BD4 <AmiBlitz3.ab3@4353>   TST.w linemode
00022BD8 <AmiBlitz3.ab3@4354>   BMI.b 'skip
00022BDC <AmiBlitz3.ab3@4355>   BSR.w undodebug
00022BE2 <AmiBlitz3.ab3@4356>   MOVE.w linemode,D1
00022BE4 <AmiBlitz3.ab3@4357>   ADDQ.w #4,A7
00022BE6 <AmiBlitz3.ab3@4358>   LSL.w #2,D1
00022BEC <AmiBlitz3.ab3@4359>   LEA modetable,A0
00022BF0 <AmiBlitz3.ab3@4360>   MOVEA.l $0(A0,D1.W),A0
00022BF4 <AmiBlitz3.ab3@4361>   BSR.w reget
00022BF6 <AmiBlitz3.ab3@4362>  JMP (A0)                                                   ;jumptokenroutine
00022BF8 <AmiBlitz3.ab3@4365> RTS
00022C00 <AmiBlitz3.ab3@4373>   MOVE.w #0,leaa0a0+2
00022C06 <AmiBlitz3.ab3@4374>   CLR.b nowdeclare
00022C0C <AmiBlitz3.ab3@4375>   CLR.b notypecheck
00022C12 <AmiBlitz3.ab3@4376>   CLR.l lasttoken
00022C18 <AmiBlitz3.ab3@4377>   CLR.b doimmediate
00022C1E <AmiBlitz3.ab3@4378>   CLR.w vartype
00022C24 <AmiBlitz3.ab3@4379>   CLR.w regnumfunc
00022C2A <AmiBlitz3.ab3@4380>   CLR.b optistring
00022C30 <AmiBlitz3.ab3@4381>   CLR.b iniffcommand
00022C36 <AmiBlitz3.ab3@4382>   CLR.w instringon  ; new
00022C3C <AmiBlitz3.ab3@4383>   CLR.b funccall
00022C42 <AmiBlitz3.ab3@4384>   CLR.l currentfunccall
00022C48 <AmiBlitz3.ab3@4385>   CLR.l leftsidetype
00022C4E <AmiBlitz3.ab3@4386>   CLR.l rightsidetype
00022C54 <AmiBlitz3.ab3@4387>   CLR.w leftsideflagmask
00022C5A <AmiBlitz3.ab3@4388>   CLR.w rightsideflagmask
00022C60 <AmiBlitz3.ab3@4389>   CLR.b peekaddrsize
00022C66 <AmiBlitz3.ab3@4390>   CLR.b blitzparloop
00022C6C <AmiBlitz3.ab3@4391>   CLR.b funcparloop
00022C72 <AmiBlitz3.ab3@4392>   CLR.w parnum           ;7.2014
00022C78 <AmiBlitz3.ab3@4393>   TST.b debugmode
00022C7C <AmiBlitz3.ab3@4394>    BEQ 'fpu
00022C86 <AmiBlitz3.ab3@4400>   MOVE.b fpu,iee
00022C8A <AmiBlitz3.ab3@4401>   MOVE.w stopit(PC),D0
00022C8E <AmiBlitz3.ab3@4402>   BNE 'chkstop_chkb
00022C92 <AmiBlitz3.ab3@4404>   BSR.w chkstop                                          ; message here
00022C98 <AmiBlitz3.ab3@4408>   SUBQ.w #1,stopit
00022C9C <AmiBlitz3.ab3@4412>   BSR.w findmacro                                          ;macro
00022CA2 <AmiBlitz3.ab3@4474>   TST.b debugmode
00022CA6 <AmiBlitz3.ab3@4475>    BEQ.s 'l10
00022CAC <AmiBlitz3.ab3@4476>   TST.b exdebug
00022CB0 <AmiBlitz3.ab3@4477>   BEQ 'l10a
00022CB2 <AmiBlitz3.ab3@4478>   MOVE.w (a5),d0
00022CB6 <AmiBlitz3.ab3@4479>   CMP.w #$8025,d0
00022CBA <AmiBlitz3.ab3@4480>    BEQ 'l10
00022CBE <AmiBlitz3.ab3@4483>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022CC2 <AmiBlitz3.ab3@4487>   BSR.w get1bytemain                                       ;gettokenmain
00022CC6 <AmiBlitz3.ab3@4488>    BEQ.w undodebug
00022CCA <AmiBlitz3.ab3@4489>   CMP.w #$002b,d0                                            ;check for + cast sign
00022CCE <AmiBlitz3.ab3@4490>     BNE 'lb2
00022CD2 <AmiBlitz3.ab3@4491>     BSR.w get1bytemain
00022CDA <AmiBlitz3.ab3@4492>     MOVE.b #1,notypecheck
00022CE4 <AmiBlitz3.ab3@4503>   MOVE.l #forthstack,forthsp
00022CEE <AmiBlitz3.ab3@4504>   MOVE.l #precstack,precsp
00022CF4 <AmiBlitz3.ab3@4505>   CLR.w regnum
00022CFA <AmiBlitz3.ab3@4506>   CLR.w nonew
00022D00 <AmiBlitz3.ab3@4507>   CLR.w sbasegot
00022D0A <AmiBlitz3.ab3@4508>   MOVE.w varcodelen,oldvcodelen
00022D10 <AmiBlitz3.ab3@4510>   CLR.w varcodelen
00022D18 <AmiBlitz3.ab3@4511>   MOVE.w #$FFFF,lasta6
00022D1C <AmiBlitz3.ab3@4514>   BSR.w smode
00022D1E <AmiBlitz3.ab3@4517>   TST.w D0                 ; was behind cmp ... and befor handleascii in org source
00022D22 <AmiBlitz3.ab3@4518>   BMI.w get_tokencode      ; "
00022D26 <AmiBlitz3.ab3@4520>   CMP.w #$2E,D0            ;'.'
00022D2A <AmiBlitz3.ab3@4521>    BEQ.w handlemouse                                         ;shortlist
00022D2E <AmiBlitz3.ab3@4522>   CMP.w #"#",D0
00022D32 <AmiBlitz3.ab3@4523>    BEQ.w handleconst                                         ;constant found
00022D36 <AmiBlitz3.ab3@4524>   CMP.w #$27,D0            ;'''  ; was #loclabch
00022D3A <AmiBlitz3.ab3@4525>    BEQ.w handlelocal                                            ;local label
00022D40 <AmiBlitz3.ab3@4528>   MOVE.l A5,letstart
00022D46 <AmiBlitz3.ab3@4529>   JSR getparameter
00022D4A <AmiBlitz3.ab3@4530>   BSR.w reget
00022D4E <AmiBlitz3.ab3@4531>    BEQ.w handlelabel                                         ;label found
00022D52 <AmiBlitz3.ab3@4532>   CMP.w #$7B,D0         ;'{'
00022D56 <AmiBlitz3.ab3@4533>    BEQ.w handleproc
00022D58 <AmiBlitz3.ab3@4535>   TST.w d0
00022D5C <AmiBlitz3.ab3@4536>    BPL 'll1
00022D62 <AmiBlitz3.ab3@4537>   TST.b newsyntax
00022D66 <AmiBlitz3.ab3@4538>    BEQ 'll1
00022D6C <AmiBlitz3.ab3@4539>   LEA allowtab,a0
00022D6E <AmiBlitz3.ab3@4540>   MOVEQ #0,d1
00022D70 <AmiBlitz3.ab3@4541>   MOVE.b d0,d1
00022D74 <AmiBlitz3.ab3@4542>   TST.b 0(a0,d1.w)
00022D78 <AmiBlitz3.ab3@4543>    BNE 'll1
00022D7A <AmiBlitz3.ab3@4544>   SUBQ.l #2,a5
00022D82 <AmiBlitz3.ab3@4545>   MOVE.w #":",lastchar                                     ;no doublepoint
00022D86 <AmiBlitz3.ab3@4546>  BRA handlelabel
00022D8E <AmiBlitz3.ab3@4549>   CMP.l #"equ ",-1(a5)
00022D92 <AmiBlitz3.ab3@4550>    BEQ 'll4
00022D9A <AmiBlitz3.ab3@4551>   CMP.l #"EQU ",-1(a5)
00022D9E <AmiBlitz3.ab3@4552>    BNE 'll2
00022DA0 <AmiBlitz3.ab3@4555>   ADDQ.l #2,a5
00022DA4 <AmiBlitz3.ab3@4556>   BSR.w findlabel2
00022DA8 <AmiBlitz3.ab3@4557>   BEQ.w 'lf1
00022DAC <AmiBlitz3.ab3@4558>   BSR.w addlabelhash
00022DB4 <AmiBlitz3.ab3@4559>   MOVE.l #$1,$4(A2)
00022DBC <AmiBlitz3.ab3@4562>   CMPI.l #$1,$4(A2)
00022DC0 <AmiBlitz3.ab3@4563>    BNE.w illconerr
00022DC4 <AmiBlitz3.ab3@4564>   BSR get1bytemain
00022DC6 <AmiBlitz3.ab3@4565>   MOVE.l A2,-(A7)
00022DC8 <AmiBlitz3.ab3@4576>   SUBQ.l #1,a5
00022DCA <AmiBlitz3.ab3@4579>   SUBQ.l #1,a5
00022DD0 <AmiBlitz3.ab3@4580>   JSR evalconst2
00022DD2 <AmiBlitz3.ab3@4581>   MOVEA.l (A7)+,A2
00022DD6 <AmiBlitz3.ab3@4582>   MOVE.l D3,$8(A2)
00022DD8 <AmiBlitz3.ab3@4583>   RTS
00022DDC <AmiBlitz3.ab3@4584>   BSR get1bytemain
00022DE4 <AmiBlitz3.ab3@4587>   CMP.l #"SET ",-1(a5)
00022DE8 <AmiBlitz3.ab3@4588>   BNE 'll3
00022DEC <AmiBlitz3.ab3@4589>  BRA 'll4
00022DF2 <AmiBlitz3.ab3@4593> JMP dolet2
00022DF6 <AmiBlitz3.ab3@4597>   CMP.w #-$7FDE,D0    ; was #$8000+34,
00022DFA <AmiBlitz3.ab3@4598>   BEQ.w get_tokencode
00022DFE <AmiBlitz3.ab3@4599> BRA.w undodebug       ;!*!*!
00022E02 <AmiBlitz3.ab3@4603>   BSR.w undodebug    ;!***!
00022E06 <AmiBlitz3.ab3@4604>   BSR.w createlab
00022E0A <AmiBlitz3.ab3@4605> BRA.w handlelab2
00022E0E <AmiBlitz3.ab3@4609>   BSR.w get1bytemain
00022E12 <AmiBlitz3.ab3@4610>    BEQ.w handleeol     ;syntaxerr
00022E16 <AmiBlitz3.ab3@4611>   CMP.w #"'",D0        ; was #loclabch
00022E1A <AmiBlitz3.ab3@4612>    BEQ.w handlelocal
00022E1E <AmiBlitz3.ab3@4613>    BSR.w makename2
00022E20 <AmiBlitz3.ab3@4615>    TST.w d0
00022E24 <AmiBlitz3.ab3@4616>    BPL handlelabel
00022E26 <AmiBlitz3.ab3@4617>    SUBQ.l #2,a5
00022E2E <AmiBlitz3.ab3@4618>    MOVE.w #":",lastchar
00022E32 <AmiBlitz3.ab3@4619> BRA handlelabel                                              ;????
00022E36 <AmiBlitz3.ab3@4626>   BSR.w undodebug      ;!***!
00022E3C <AmiBlitz3.ab3@4628>   LEA ptr_parameterstore,A0
00022E42 <AmiBlitz3.ab3@4629>   LEA lastgloballabel,A1
00022E44 <AmiBlitz3.ab3@4632>   MOVE.b (A0)+,(A1)+
00022E48 <AmiBlitz3.ab3@4633>    BNE.w 'coplab
00022E4C <AmiBlitz3.ab3@4637>   BSR.w findlabel2
00022E50 <AmiBlitz3.ab3@4638>    BEQ.w 'found
00022E54 <AmiBlitz3.ab3@4640>    BSR.w addlabelhash
00022E58 <AmiBlitz3.ab3@4643>   CLR.l $4(A2)                ;no refs
00022E60 <AmiBlitz3.ab3@4644>   MOVE.l destpointer,$8(A2)   ;pc of label.
00022E68 <AmiBlitz3.ab3@4649>   MOVE.w procnum,$10(A2)
00022E6A <AmiBlitz3.ab3@4650>  RTS
00022E6E <AmiBlitz3.ab3@4653>   MOVE.l $4(A2),D0
00022E72 <AmiBlitz3.ab3@4654>   BTST #$0,D0
00022E76 <AmiBlitz3.ab3@4655>    BNE.w illlaberr
00022E7C <AmiBlitz3.ab3@4657>   TST.w pass
00022E80 <AmiBlitz3.ab3@4660>   MOVE.l $8(A2),D0
00022E84 <AmiBlitz3.ab3@4661>    BNE.w duplaberr
00022E8C <AmiBlitz3.ab3@4662>   MOVE.w procnum,$10(A2)
00022E90 <AmiBlitz3.ab3@4666>   MOVEA.l $4(A2),A3      ;start of refs list
00022E96 <AmiBlitz3.ab3@4667>   MOVEA.l _execbase,A6
00022E9A <AmiBlitz3.ab3@4670>   CMPA.w #$0,A3
00022E9E <AmiBlitz3.ab3@4671>    BEQ.w 'done
00022EA2 <AmiBlitz3.ab3@4673>     MOVE.l $4(A2),D1
00022EA6 <AmiBlitz3.ab3@4674>     BTST #$0,D1
00022EAA <AmiBlitz3.ab3@4675>     BNE.w illlaberr
00022EAE <AmiBlitz3.ab3@4677>   MOVE.w $8(A3),D1
00022EB2 <AmiBlitz3.ab3@4678>   CMP.w $10(A2),D1
00022EB6 <AmiBlitz3.ab3@4679>    BEQ.w 'isok
00022EBC <AmiBlitz3.ab3@4681>    TST.b newsyntax
00022EC0 <AmiBlitz3.ab3@4682>    BEQ 'l1
00022EC4 <AmiBlitz3.ab3@4683>  BRA.w 'isok                                            ;label context out of range fix
00022ECC <AmiBlitz3.ab3@4689>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022ED0 <AmiBlitz3.ab3@4690>  BRA.w referr
00022ED6 <AmiBlitz3.ab3@4693>   MOVE.w dontwrite_nomemleft,D1
00022EDA <AmiBlitz3.ab3@4694>    BNE.w 'isaskip
00022EDE <AmiBlitz3.ab3@4695>   MOVEA.l $4(A3),A1
00022EE4 <AmiBlitz3.ab3@4696>   BTST #$0,$7(A3)
00022EE8 <AmiBlitz3.ab3@4697>    BEQ.w 'pcref
00022EEA <AmiBlitz3.ab3@4701>   SUBQ.w #1,A1
00022EF0 <AmiBlitz3.ab3@4702>   MOVE.l data2,(A1)
00022EF4 <AmiBlitz3.ab3@4703>  BRA.w 'isaskip
00022EFA <AmiBlitz3.ab3@4706>   MOVE.l destpointer,(A1)
00022EFC <AmiBlitz3.ab3@4709>   MOVEA.l A3,A1
00022EFE <AmiBlitz3.ab3@4710>   MOVEA.l (A3),A3
00022F02 <AmiBlitz3.ab3@4711>   MOVE.l A3,$4(A2)     ;new first.
00022F04 <AmiBlitz3.ab3@4712>   MOVEQ.l #$0C+2,D0    ; was #12
00022F0A <AmiBlitz3.ab3@4715>   MOVE.l mempool,a0
00022F10 <AmiBlitz3.ab3@4716>   MOVEA.l _execbase,A6
00022F14 <AmiBlitz3.ab3@4717>   JSR _FreePooled(A6)
00022F18 <AmiBlitz3.ab3@4719>  BRA.w 'floop
00022F22 <AmiBlitz3.ab3@4725>    MOVE.l #forthstack,forthsp
00022F2C <AmiBlitz3.ab3@4726>   MOVE.l #precstack,precsp
00022F30 <AmiBlitz3.ab3@4728>    BSR.w getparameter2
00022F34 <AmiBlitz3.ab3@4732>   BSR.w findlabel2
00022F38 <AmiBlitz3.ab3@4733>    BEQ.w 'cfound
00022F3C <AmiBlitz3.ab3@4734>    BSR.w addlabelhash
00022F44 <AmiBlitz3.ab3@4735>   MOVE.l #$1,$4(A2)
00022F48 <AmiBlitz3.ab3@4736>  BRA.w 'cn
00022F50 <AmiBlitz3.ab3@4739>   CMPI.l #$1,$4(A2)
00022F54 <AmiBlitz3.ab3@4740>    BNE.w illconerr
00022F58 <AmiBlitz3.ab3@4751>   CMP.w #$3D,D0         ;'='
00022F5C <AmiBlitz3.ab3@4752>   BEQ.w 'asscon
00022F5E <AmiBlitz3.ab3@4753>  RTS
00022F60 <AmiBlitz3.ab3@4756>   MOVE.l A2,-(A7)
00022F66 <AmiBlitz3.ab3@4757>   JSR evalconst2
00022F68 <AmiBlitz3.ab3@4758>   MOVEA.l (A7)+,A2
00022F6C <AmiBlitz3.ab3@4759>   MOVE.l D3,$8(A2)                                         ;store constant
00022F74 <AmiBlitz3.ab3@4761>   CMP.w #$0a,lastchar
00022F78 <AmiBlitz3.ab3@4762>   BNE 'l1
00022F80 <AmiBlitz3.ab3@4763>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00022F82 <AmiBlitz3.ab3@4767> RTS
00022F86 <AmiBlitz3.ab3@4773>   BSR.w findproc                                           ;write statement call
00022F8A <AmiBlitz3.ab3@4775>   BEQ '_state
00022F90 <AmiBlitz3.ab3@4776>   TST.l unusedfunc
00022F94 <AmiBlitz3.ab3@4778>   BEQ noprocerr          ; was bne
00022F9A <AmiBlitz3.ab3@4781>   JSR gotoendsource
00022F9E <AmiBlitz3.ab3@4785>   TST.b $5(A2)
00022FA4 <AmiBlitz3.ab3@4788>   MOVE.l a2,currentfunccall
00022FAC <AmiBlitz3.ab3@4789>   MOVE.b #1,funccall
00022FB2 <AmiBlitz3.ab3@4790>   MOVE.b #1,isfunc(a2)
00022FB6 <AmiBlitz3.ab3@4792>   MOVE.l $E(A2),-(A7)         ;pc of proc.
00022FB8 <AmiBlitz3.ab3@4793>   MOVEQ.l #$00,D0
00022FBC <AmiBlitz3.ab3@4794>   MOVE.b $4(A2),D0
00022FC2 <AmiBlitz3.ab3@4795>   MOVE.l d0,parnumtemp
00022FC6 <AmiBlitz3.ab3@4796>   BEQ.w 'nopars
00022FCA <AmiBlitz3.ab3@4798>   TST.b $20(a2)                                            ;increase if morepar
00022FCE <AmiBlitz3.ab3@4799>   BNE 'no0par
00022FD0 <AmiBlitz3.ab3@4800>   MOVE.l a5,a4
00022FD4 <AmiBlitz3.ab3@4803>   CMP.b #$20,(a4)+
00022FD8 <AmiBlitz3.ab3@4804>   BEQ 'l1
00022FDE <AmiBlitz3.ab3@4805>   CMP.b #"}",-1(a4)
00022FE2 <AmiBlitz3.ab3@4806>   BNE  'no0par                                             ;statementcall pars
00022FE4 <AmiBlitz3.ab3@4807>   MOVEQ #0,d0
00022FE8 <AmiBlitz3.ab3@4811>   LEA $16(A2),A1            ;pointer to var desc list
00022FEA <AmiBlitz3.ab3@4815>   MOVE.l d1,-(a7)
00022FEC <AmiBlitz3.ab3@4816>   MOVE.b (a1),d2
00022FEE <AmiBlitz3.ab3@4817>   MOVE.l d0,d1
00022FF2 <AmiBlitz3.ab3@4818>   CMP.w #4,d2
00022FF6 <AmiBlitz3.ab3@4819>   BNE 'l1b
00022FFC <AmiBlitz3.ab3@4820>   ADD.l #$203c,d1
00023002 <AmiBlitz3.ab3@4821>   JSR writeword
00023008 <AmiBlitz3.ab3@4822>   MOVE.l #$ffff0000,d1
0002300E <AmiBlitz3.ab3@4823>   JSR writelong
00023012 <AmiBlitz3.ab3@4824>  BRA 'l2b
00023018 <AmiBlitz3.ab3@4827>   TST.b fpu
0002301C <AmiBlitz3.ab3@4828>   BNE 'l1c
00023020 <AmiBlitz3.ab3@4829>   CMP.w #5,d2
00023024 <AmiBlitz3.ab3@4830>   BNE 'l1c
0002302A <AmiBlitz3.ab3@4831>   ADD.l #$203c,d1
00023030 <AmiBlitz3.ab3@4832>   JSR writeword
00023036 <AmiBlitz3.ab3@4833>   MOVE.l #$800000c1,d1
0002303C <AmiBlitz3.ab3@4834>   JSR writelong
00023040 <AmiBlitz3.ab3@4835>  BRA 'l2b
00023046 <AmiBlitz3.ab3@4838>   ADD.l #$70ff,d1
0002304C <AmiBlitz3.ab3@4839>   JSR writeword
00023052 <AmiBlitz3.ab3@4840>   MOVE.l #$f23c5000,d1
00023054 <AmiBlitz3.ab3@4841>   MOVE.l d0,d2
00023056 <AmiBlitz3.ab3@4842>   ASR.l #2,d2
00023058 <AmiBlitz3.ab3@4843>   ADD.l d2,d1
0002305E <AmiBlitz3.ab3@4844>   JSR writelong
00023062 <AmiBlitz3.ab3@4845>   MOVE.w #$ffff,d1
00023068 <AmiBlitz3.ab3@4846>   JSR writeword
0002306A <AmiBlitz3.ab3@4849>   MOVE.l (a7)+,d1
0002306C <AmiBlitz3.ab3@4850>   ADDQ.l #1,a1
00023072 <AmiBlitz3.ab3@4851>   ADD.l #$0200,d0
00023078 <AmiBlitz3.ab3@4852>   CMP.l #$0e00,d0
0002307C <AmiBlitz3.ab3@4853>    BEQ syntaxerr
0002307E <AmiBlitz3.ab3@4854>   TST.b (a1)
00023082 <AmiBlitz3.ab3@4855>    BNE 'again
00023086 <AmiBlitz3.ab3@4856>  BRA 'nopars
00023090 <AmiBlitz3.ab3@4859>   MOVE.w a2offset,a2offset2
00023094 <AmiBlitz3.ab3@4860>   LEA $16(A2),A2
0002309A <AmiBlitz3.ab3@4861>   MOVE.b funcparloop,-(a7)
000230A2 <AmiBlitz3.ab3@4862>   MOVE.b #1,funcparloop
000230A8 <AmiBlitz3.ab3@4863>   MOVE.b blitzparloop,-(a7)
000230AE <AmiBlitz3.ab3@4864>   CLR.b blitzparloop
000230B2 <AmiBlitz3.ab3@4866>   BSR.w fetchpees2
000230B8 <AmiBlitz3.ab3@4868>   MOVE.b (a7)+,blitzparloop
000230BE <AmiBlitz3.ab3@4869>   MOVE.b (a7)+,funcparloop
000230C2 <AmiBlitz3.ab3@4871>  BRA.w 'nopars3
000230C6 <AmiBlitz3.ab3@4875>   BSR.w get1bytemain
000230CA <AmiBlitz3.ab3@4878>   CMP.w #$7D,D0        ;'}'
000230CE <AmiBlitz3.ab3@4879>    BNE.w morepar_                                          ;syntax error morepar
000230D4 <AmiBlitz3.ab3@4880>    JSR chkstak
000230D6 <AmiBlitz3.ab3@4881>   MOVE.l (A7)+,D1
000230DC <AmiBlitz3.ab3@4899>    JSR makefjsr
000230E2 <AmiBlitz3.ab3@4922>   CLR.b funccall
000230E6 <AmiBlitz3.ab3@4924> BRA.w get1bytemain
000230EC <AmiBlitz3.ab3@4931>   MOVE.l d0,lasttoken
000230F0 <AmiBlitz3.ab3@4932>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
000230F4 <AmiBlitz3.ab3@4933>   BNE 'l2
000230F8 <AmiBlitz3.ab3@4934>    MOVE.w #$dd05,d0
000230FC <AmiBlitz3.ab3@4937>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00023100 <AmiBlitz3.ab3@4938>   BNE 'l3
00023104 <AmiBlitz3.ab3@4939>    MOVE.w #$dd06,d0
00023108 <AmiBlitz3.ab3@4943>   CMP.w #-$7FC4,D0               ; was #$8000+fnum,
0002310C <AmiBlitz3.ab3@4944>   BCS.w 'nono
00023110 <AmiBlitz3.ab3@4945>     CMP.w #-$7F4D,D0             ; was #$8000+tnum,
00023114 <AmiBlitz3.ab3@4946>     BCC.w 'nono
0002311C <AmiBlitz3.ab3@4948>       BTST #$7,assemblercheck    ; was optreq2ga3+13                            ;inline Assembler checking
00023120 <AmiBlitz3.ab3@4949>       BNE.b 'asmok
00023126 <AmiBlitz3.ab3@4951>         TST.b debugmode
0002312A <AmiBlitz3.ab3@4952>         BEQ.b 'l10
00023134 <AmiBlitz3.ab3@4957>           MOVE.w d_nomemleft,dontwrite_nomemleft
0002313E <AmiBlitz3.ab3@4958>           MOVE.l d_bigpc,bigpc
00023148 <AmiBlitz3.ab3@4959>           MOVE.l d_pc,destpointer
00023152 <AmiBlitz3.ab3@4960>           MOVE.l cont_pc2,cont_pc
00023156 <AmiBlitz3.ab3@4968>  BRA.w asmit   ;assemble the bastard
0002315A <AmiBlitz3.ab3@4975>   BCLR #$F,D0
0002315C <AmiBlitz3.ab3@4976>   MOVE.w D0,D1
00023160 <AmiBlitz3.ab3@4977>   ANDI.w #$7F00,D1
00023164 <AmiBlitz3.ab3@4978>   BNE.w handlelib
00023168 <AmiBlitz3.ab3@4980>     CMP.w #$B3,D0        ; was #tnum,                                  ;intern Instructions
0002316C <AmiBlitz3.ab3@4981>     BCS.w 'isokat
00023170 <AmiBlitz3.ab3@4983>       SUBI.w #$77,D0     ; was #tnum-fnum,
00023174 <AmiBlitz3.ab3@4984>       CMP.w #$4B,D0      ; was #fnum+15
00023178 <AmiBlitz3.ab3@4985>       BEQ.w 'noerr
0002317C <AmiBlitz3.ab3@4986>         CMP.w #$46,D0    ; was #fnum+10,
00023180 <AmiBlitz3.ab3@4987>         BEQ.w 'noerr
00023184 <AmiBlitz3.ab3@4988>  BRA.w 'doerr                                            ; change tokennum
00023188 <AmiBlitz3.ab3@4991>     CMP.w #$38,D0        ;check for things which don't want
0002318C <AmiBlitz3.ab3@4992>      BEQ.w 'noerr        ;error checking...
00023190 <AmiBlitz3.ab3@4993>     CMP.w #$39,D0
00023194 <AmiBlitz3.ab3@4994>      BEQ.w 'noerr
00023198 <AmiBlitz3.ab3@4995>     CMP.w #$D,D0
0002319C <AmiBlitz3.ab3@4996>      BEQ.w 'noerr
000231A0 <AmiBlitz3.ab3@4997>     CMP.w #$12,D0
000231A4 <AmiBlitz3.ab3@4998>      BEQ.w 'noerr
000231A8 <AmiBlitz3.ab3@4999>     CMP.w #$13,D0
000231AC <AmiBlitz3.ab3@5000>      BEQ.w 'noerr
000231B0 <AmiBlitz3.ab3@5001>     CMP.w #$1A,D0
000231B4 <AmiBlitz3.ab3@5002>      BEQ.w 'noerr
000231B8 <AmiBlitz3.ab3@5003>     CMP.w #$2A,D0
000231BC <AmiBlitz3.ab3@5004>      BHI.w 'doerr
000231C0 <AmiBlitz3.ab3@5005>     CMP.w #$23,D0
000231C4 <AmiBlitz3.ab3@5006>      BCS.b 'doerr
000231C8 <AmiBlitz3.ab3@5009>   BSR.w undodebug
000231CA <AmiBlitz3.ab3@5012>   SUBQ.w #1,D0
000231CC <AmiBlitz3.ab3@5013>   LSL.w #2,D0
000231D2 <AmiBlitz3.ab3@5023>   LEA instructionbase,A0
000231D6 <AmiBlitz3.ab3@5024>   MOVEA.l $0(A0,D0.W),A0
000231D8 <AmiBlitz3.ab3@5025>   MOVE.l A0,-(A7)
000231DC <AmiBlitz3.ab3@5026> BRA.w get1bytemain
000231DE <AmiBlitz3.ab3@5032>   MOVE.w D0,D1
000231E2 <AmiBlitz3.ab3@5033>    BSR.w searchinstr    ;toke stuff in a3
000231E8 <AmiBlitz3.ab3@5035>    TST.b newmode
000231EC <AmiBlitz3.ab3@5036>    BNE compile_term
000231F2 <AmiBlitz3.ab3@5038>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
000231F6 <AmiBlitz3.ab3@5039>    BNE.w stamigalib
000231FC <AmiBlitz3.ab3@5040>   BTST #$0,$1(A3)
00023200 <AmiBlitz3.ab3@5041>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00023204 <AmiBlitz3.ab3@5043>    BSR.w sizespec                                         ;does it need a size specifier?
00023208 <AmiBlitz3.ab3@5044>    BSR.w countpees
0002320E <AmiBlitz3.ab3@5050>   MOVE.w numreps,-(A7)
00023214 <AmiBlitz3.ab3@5051>   MOVE.w userp,-(A7)
0002321A <AmiBlitz3.ab3@5052>   MOVE.w a2offset,-(A7)
0002321C <AmiBlitz3.ab3@5053>   MOVE.l A2,-(A7)                                          ;recurs.
00023226 <AmiBlitz3.ab3@5054>   MOVE.w convsize,userp
0002322A <AmiBlitz3.ab3@5055>   LEA $6(A3),A1
0002322C <AmiBlitz3.ab3@5060>    MOVE.w (A1),D2
00023230 <AmiBlitz3.ab3@5061>    BMI.w 'SERR                                              ;statement syntax error
00023234 <AmiBlitz3.ab3@5062>   ANDI.w #$FF,D2
00023236 <AmiBlitz3.ab3@5063>   CMP.w D2,D1
0002323A <AmiBlitz3.ab3@5064>    BEQ.w 'found
0002323E <AmiBlitz3.ab3@5065>    BCS.w 'next
00023240 <AmiBlitz3.ab3@5066>   MOVE.b (A1),D3
00023244 <AmiBlitz3.ab3@5067>   ANDI.w #$7,D3
00023248 <AmiBlitz3.ab3@5068>    BEQ.w 'next
0002324A <AmiBlitz3.ab3@5069>   MOVE.w D2,D4
0002324C <AmiBlitz3.ab3@5070>   SUB.w D3,D4
0002324E <AmiBlitz3.ab3@5071>   MOVEQ.l #$00,D5
00023250 <AmiBlitz3.ab3@5072>   MOVE.w D1,D5
00023252 <AmiBlitz3.ab3@5073>   SUB.w D4,D5
00023254 <AmiBlitz3.ab3@5074>   DIVU D3,D5
00023256 <AmiBlitz3.ab3@5075>   SWAP D5
00023258 <AmiBlitz3.ab3@5076>   TST.w D5
0002325C <AmiBlitz3.ab3@5077>    BEQ.w 'found
0002325E <AmiBlitz3.ab3@5080>   ADDQ.w #2,A1
00023260 <AmiBlitz3.ab3@5081>   ADDA.w D2,A1
00023264 <AmiBlitz3.ab3@5082>    BSR.w aligna1
00023268 <AmiBlitz3.ab3@5083>    BSR.w skiplibreg
0002326C <AmiBlitz3.ab3@5084>   LEA $C(A1),A1
00023270 <AmiBlitz3.ab3@5085>  BRA.w 'loop
00023272 <AmiBlitz3.ab3@5089>   MOVE.w (a3),d2
00023276 <AmiBlitz3.ab3@5090>   BTST #1,d2
0002327A <AmiBlitz3.ab3@5091>   BEQ statement_
0002327E <AmiBlitz3.ab3@5092>   CMP.w #1,d1
00023282 <AmiBlitz3.ab3@5093>   BEQ statement_
00023286 <AmiBlitz3.ab3@5096>   CMP.b #$20,(a5)+
0002328A <AmiBlitz3.ab3@5097>   BEQ 'l2
00023290 <AmiBlitz3.ab3@5098>   CMP.b #"(",-2(a5)
00023294 <AmiBlitz3.ab3@5099>   BNE 'l1
00023298 <AmiBlitz3.ab3@5100>  BRA parameter_
0002329C <AmiBlitz3.ab3@5103>  BRA inbrackets_
0002329E <AmiBlitz3.ab3@5107>   MOVE.b (A1),D2
000232A0 <AmiBlitz3.ab3@5108>   LSL.w #8,D2
000232A2 <AmiBlitz3.ab3@5109>   OR.w D2,D1
000232A4 <AmiBlitz3.ab3@5110>   MOVE.l A1,-(A7)
000232AA <AmiBlitz3.ab3@5111>   CLR.w a2offset
000232AC <AmiBlitz3.ab3@5112>   TST.w D1
000232B0 <AmiBlitz3.ab3@5113>    BEQ.w 'nopees
000232B4 <AmiBlitz3.ab3@5114>   LEA $2(A1),A2
000232BA <AmiBlitz3.ab3@5116>   MOVE.l lasttoken,-(a7)
000232C0 <AmiBlitz3.ab3@5117>   CLR.l lasttoken
000232C4 <AmiBlitz3.ab3@5119>   BSR.w fetchlibps
000232CA <AmiBlitz3.ab3@5121>   MOVE.l (a7)+,lasttoken
000232CE <AmiBlitz3.ab3@5123>  BRA.w 'skip
000232D2 <AmiBlitz3.ab3@5126>   BSR.w get1bytemain
000232D4 <AmiBlitz3.ab3@5129>   MOVEA.l (A7)+,A1
000232D6 <AmiBlitz3.ab3@5130>   MOVEA.l (A7)+,A2
000232DC <AmiBlitz3.ab3@5131>   MOVE.w a2offset,D1
000232E0 <AmiBlitz3.ab3@5132>    BEQ.w 'skip2
000232E6 <AmiBlitz3.ab3@5133>   MOVE.w D1,preplibst+2
000232EC <AmiBlitz3.ab3@5134>   MOVE.l preplibst,D1
000232F2 <AmiBlitz3.ab3@5135>    JSR writelong                                           ;write array offset stack correct
000232FC <AmiBlitz3.ab3@5136>   MOVE.w numreps,movenumrep+2
00023300 <AmiBlitz3.ab3@5137>    BEQ.w 'skip2
00023306 <AmiBlitz3.ab3@5138>   MOVE.l movenumrep,D1
0002330C <AmiBlitz3.ab3@5139>    JSR writelong
00023312 <AmiBlitz3.ab3@5143>   JSR userjsr
00023318 <AmiBlitz3.ab3@5148>   MOVE.w a2offset,D1
0002331C <AmiBlitz3.ab3@5149>    BEQ.w 'skip3
00023320 <AmiBlitz3.ab3@5150>   CMP.w #$8,D1
00023324 <AmiBlitz3.ab3@5151>    BHI.w 'skip4
00023328 <AmiBlitz3.ab3@5152>   ANDI.w #$7,D1
0002332A <AmiBlitz3.ab3@5153>   LSL.w #8,D1
0002332C <AmiBlitz3.ab3@5154>   LSL.w #1,D1
00023330 <AmiBlitz3.ab3@5155>   ORI.w #$504F,D1       ;addq #x,a7
00023336 <AmiBlitz3.ab3@5156>   JSR writeword
0002333A <AmiBlitz3.ab3@5157>  BRA.w 'skip3
00023340 <AmiBlitz3.ab3@5160>   MOVE.w D1,fixlibst+2
00023346 <AmiBlitz3.ab3@5161>   MOVE.l fixlibst,D1
0002334C <AmiBlitz3.ab3@5162>   JSR writelong
00023352 <AmiBlitz3.ab3@5165>   MOVE.w (A7)+,a2offset
00023358 <AmiBlitz3.ab3@5166>   MOVE.w (A7)+,userp
0002335E <AmiBlitz3.ab3@5167>   MOVE.w (A7)+,numreps
00023362 <AmiBlitz3.ab3@5168> BRA.w reget
00023366 <AmiBlitz3.ab3@5172>   MOVEM.l A2-A3,-(A7)
0002336C <AmiBlitz3.ab3@5174>   CLR.b doublepeek
00023372 <AmiBlitz3.ab3@5176>   MOVE.l A5,lastsourcepos
00023376 <AmiBlitz3.ab3@5177>    BSR.w getchar          ;','
0002337A <AmiBlitz3.ab3@5178>   CMP.w #$2E,D0
0002337E <AmiBlitz3.ab3@5179>    BEQ.w 'ok1
00023384 <AmiBlitz3.ab3@5180>   MOVEA.l defaulttype,A2
00023388 <AmiBlitz3.ab3@5181>   CMP.w #$24,D0           ;'$'
0002338C <AmiBlitz3.ab3@5182>    BNE.w 'none
0002338E <AmiBlitz3.ab3@5183>   MOVEQ.l #$07,D1
00023392 <AmiBlitz3.ab3@5184>  BRA.w 'skip
00023396 <AmiBlitz3.ab3@5187>   BSR.w getparameter2
0002339A <AmiBlitz3.ab3@5188>   BEQ.w syntaxerr
000233A0 <AmiBlitz3.ab3@5189>   LEA newtypebase,A2
000233A4 <AmiBlitz3.ab3@5190>   BSR.w findtype
000233A8 <AmiBlitz3.ab3@5191>   BNE.w notypeerr
000233B2 <AmiBlitz3.ab3@5196>   MOVE.w oldqflag,instringon
000233B8 <AmiBlitz3.ab3@5197>   MOVEA.l lastsourcepos,A5
000233BC <AmiBlitz3.ab3@5205>   MOVE.w $6(A2),D1
000233C2 <AmiBlitz3.ab3@5207>   CMP.w #8,8(a2)
000233C6 <AmiBlitz3.ab3@5208>   BNE 'l1
000233CE <AmiBlitz3.ab3@5209>   MOVE.b #1,doublepeek
000233D4 <AmiBlitz3.ab3@5214>   MOVE.w D1,convsize
000233D8 <AmiBlitz3.ab3@5215>   MOVEM.l (A7)+,A2-A3
000233DA <AmiBlitz3.ab3@5216> RTS
000233E0 <AmiBlitz3.ab3@5221>   BTST #$3,$1(A3)
000233E4 <AmiBlitz3.ab3@5222>   BEQ.w 'skip
000233E8 <AmiBlitz3.ab3@5223>   BSR.w sizespec2                                         ;read peek/poke size
000233EC <AmiBlitz3.ab3@5225>   ORI.w #$7000,D1
000233F2 <AmiBlitz3.ab3@5226>   JSR writeword
000233F8 <AmiBlitz3.ab3@5227>   ADDQ.w #1,regnum
000233FA <AmiBlitz3.ab3@5230> RTS
000233FC <AmiBlitz3.ab3@5237>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
000233FE <AmiBlitz3.ab3@5238>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00023400 <AmiBlitz3.ab3@5239>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00023402 <AmiBlitz3.ab3@5243> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00023404 <AmiBlitz3.ab3@5244>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00023406 <AmiBlitz3.ab3@5245>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00023408 <AmiBlitz3.ab3@5249> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
0002340A <AmiBlitz3.ab3@5250>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
0002340C <AmiBlitz3.ab3@5251>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
0002340E <AmiBlitz3.ab3@5255> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00023410 <AmiBlitz3.ab3@5258> srctype:    Ds.w 1
00023414 <AmiBlitz3.ab3@5263>   BSR.w excget
00023418 <AmiBlitz3.ab3@5264>   CMP.w #$2C,D0     ;','
0002341C <AmiBlitz3.ab3@5265>    BNE.w syntaxerr
00023422 <AmiBlitz3.ab3@5266>   MOVE.b D2,srctype
00023428 <AmiBlitz3.ab3@5267>   MOVE.w pusha2,D1
0002342E <AmiBlitz3.ab3@5268>   JSR writeword
00023432 <AmiBlitz3.ab3@5269>   BSR.w get1bytemain
00023436 <AmiBlitz3.ab3@5270>   BSR.w excget
0002343C <AmiBlitz3.ab3@5271>   CMP.b srctype,D2
00023440 <AmiBlitz3.ab3@5272>    BNE.w excerr2
00023446 <AmiBlitz3.ab3@5273>   MOVE.w pulla1,D1
0002344C <AmiBlitz3.ab3@5274>    JSR writeword
00023450 <AmiBlitz3.ab3@5276>   CMP.b #$2,D2
00023454 <AmiBlitz3.ab3@5277>    BCS.w 'byte
00023458 <AmiBlitz3.ab3@5278>    BEQ.w 'word
0002345C <AmiBlitz3.ab3@5279>   LEA swapl(PC),A0
00023460 <AmiBlitz3.ab3@5280>   LEA swaplf(PC),A1
00023466 <AmiBlitz3.ab3@5281>  JMP pokecode
0002346A <AmiBlitz3.ab3@5284>   LEA swapw(PC),A0
0002346E <AmiBlitz3.ab3@5285>   LEA swapwf(PC),A1
00023474 <AmiBlitz3.ab3@5286>  JMP pokecode
00023478 <AmiBlitz3.ab3@5289>   LEA swapb(PC),A0
0002347C <AmiBlitz3.ab3@5290>   LEA swapbf(PC),A1
00023482 <AmiBlitz3.ab3@5291> JMP pokecode
00023488 <AmiBlitz3.ab3@5295>   JSR getparameter
0002348C <AmiBlitz3.ab3@5296>   BSR.w fetchvars
00023492 <AmiBlitz3.ab3@5297>   JSR calcvar
00023496 <AmiBlitz3.ab3@5298>   BTST #$E,D2
0002349A <AmiBlitz3.ab3@5299>    BEQ.w 'skip
0002349E <AmiBlitz3.ab3@5300>   MOVE.b #$4,D2
000234A0 <AmiBlitz3.ab3@5303>   TST.b D2
000234A4 <AmiBlitz3.ab3@5304>    BEQ.w excerr
000234A8 <AmiBlitz3.ab3@5305>   BTST #$F,D2
000234AC <AmiBlitz3.ab3@5306>    BNE.w 'done
000234B2 <AmiBlitz3.ab3@5307>   MOVE.w leaamp,D1
000234B8 <AmiBlitz3.ab3@5308>    JSR pokewda5s
000234BA <AmiBlitz3.ab3@5309>   MOVE.w D3,D1
000234C0 <AmiBlitz3.ab3@5310>  JMP writeword
000234C2 <AmiBlitz3.ab3@5313> RTS
000234C8 <AmiBlitz3.ab3@5322>   MOVE.l mempool,a0
000234CE <AmiBlitz3.ab3@5323>   MOVEA.l _execbase,A6
000234D2 <AmiBlitz3.ab3@5324> JMP _AllocPooled(a6)
000234D6 <AmiBlitz3.ab3@5329>   MOVE.w #$BF00,D1       ; was #wbstart
000234DC <AmiBlitz3.ab3@5330> JMP Atokejsr
000234E0 <AmiBlitz3.ab3@5334>   CMP.w #-$7FFA,D0       ; was  #$8006
000234E4 <AmiBlitz3.ab3@5335>    BEQ.w popreturn
000234E8 <AmiBlitz3.ab3@5336>   CMP.w #-$7FEA,D0       ; was  #$8000+22,
000234EC <AmiBlitz3.ab3@5337>    BEQ.w popnext2
000234F0 <AmiBlitz3.ab3@5338>   CMP.w #-$7FF2,D0       ; was  #$8000+14,
000234F4 <AmiBlitz3.ab3@5339>    BEQ.w popselect2
000234F8 <AmiBlitz3.ab3@5341>   CMP.w #-$7FF5,D0       ; was  #$8000+11
000234FC <AmiBlitz3.ab3@5342>    BEQ.w get1bytemain
00023500 <AmiBlitz3.ab3@5343>   CMP.w #-$7FF4,D0       ; was  #$8000+12
00023504 <AmiBlitz3.ab3@5344>    BEQ.w get1bytemain
00023508 <AmiBlitz3.ab3@5345>   CMP.w #-$7FEC,D0       ; was  #$8000+20
0002350C <AmiBlitz3.ab3@5346>    BEQ.w get1bytemain
00023510 <AmiBlitz3.ab3@5347>   CMP.w #-$7F45,D0       ; was  #$8000+tnum+8
00023514 <AmiBlitz3.ab3@5348>    BEQ.w get1bytemain
00023518 <AmiBlitz3.ab3@5349> BRA.w syntaxerr
0002351E <AmiBlitz3.ab3@5353>   TST.b debugmode
00023522 <AmiBlitz3.ab3@5354>    BEQ.w 'norerr
00023526 <AmiBlitz3.ab3@5355>   LEA 'rfix(PC),A0
0002352A <AmiBlitz3.ab3@5356>   LEA 'rfixf(PC),A1
00023530 <AmiBlitz3.ab3@5357>    JSR pokecode
00023534 <AmiBlitz3.ab3@5358>   MOVE.w #$C305,D1
0002353A <AmiBlitz3.ab3@5359>    JSR Atokejsr
0002353E <AmiBlitz3.ab3@5360>   MOVE.w 'rfix2(PC),D1
00023544 <AmiBlitz3.ab3@5362>    JSR writeword
00023548 <AmiBlitz3.ab3@5363>  BRA.w get1bytemain
0002354E <AmiBlitz3.ab3@5366>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00023552 <AmiBlitz3.ab3@5367>   BEQ.w 'rfix2
00023558 <AmiBlitz3.ab3@5370>   JSR $20000                                               ;reass
0002355A <AmiBlitz3.ab3@5373>   ADDQ.w #6,A7
0002355E <AmiBlitz3.ab3@5376>   MOVE.w 'sfix(PC),D1
00023564 <AmiBlitz3.ab3@5377>   JSR writeword
00023568 <AmiBlitz3.ab3@5378> BRA.w get1bytemain
0002356A <AmiBlitz3.ab3@5383>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00023570 <AmiBlitz3.ab3@5388>   MOVE.l firstfor,D0
00023574 <AmiBlitz3.ab3@5389>    BEQ.w noforerr
00023576 <AmiBlitz3.ab3@5390>   MOVEA.l D0,A2
0002357A <AmiBlitz3.ab3@5391>    BSR.w get1bytemain
0002357E <AmiBlitz3.ab3@5392>   BSR.w popnext
00023584 <AmiBlitz3.ab3@5395>   TST.b debugmode
00023588 <AmiBlitz3.ab3@5396>    BEQ.w 'ner
0002358E <AmiBlitz3.ab3@5397>   MOVE.l nextfixw2,D1
00023594 <AmiBlitz3.ab3@5398>   CMPI.w #$3,$C(A2)
00023598 <AmiBlitz3.ab3@5399>    BCS.w 'writelong2
0002359E <AmiBlitz3.ab3@5400>   MOVE.l nextfixl2,D1
000235A4 <AmiBlitz3.ab3@5403>   JMP  writelong
000235AA <AmiBlitz3.ab3@5406>   CMPI.w #$3,$C(A2)
000235AE <AmiBlitz3.ab3@5407>    BCS.w 'skip2
000235B4 <AmiBlitz3.ab3@5408>   MOVE.l nextfixl,D1
000235BA <AmiBlitz3.ab3@5409>   JMP writelong
000235C0 <AmiBlitz3.ab3@5412>   MOVE.w nextfixw,D1
000235C6 <AmiBlitz3.ab3@5413> JMP writeword
000235CA <AmiBlitz3.ab3@5418>   MOVE.w $C(A2),D0
000235D0 <AmiBlitz3.ab3@5419>   TST.b debugmode
000235D4 <AmiBlitz3.ab3@5420>    BEQ.w 'norunerr
000235D8 <AmiBlitz3.ab3@5421>   MOVE.w #$C306,D1
000235DC <AmiBlitz3.ab3@5422>   CMP.w #$3,D0
000235E0 <AmiBlitz3.ab3@5423>    BCS.w 'oktc
000235E2 <AmiBlitz3.ab3@5424>   ADDQ.w #1,D1
000235E4 <AmiBlitz3.ab3@5427>   MOVE.l A2,-(A7)
000235EA <AmiBlitz3.ab3@5428>   JSR Atokejsr
000235EC <AmiBlitz3.ab3@5429>   MOVEA.l (A7)+,A2
000235EE <AmiBlitz3.ab3@5432> RTS
000235F4 <AmiBlitz3.ab3@5436>   MOVE.l firstsel,D0
000235F8 <AmiBlitz3.ab3@5437>    BEQ.w eselerr
000235FA <AmiBlitz3.ab3@5438>   MOVEA.l D0,A2
000235FE <AmiBlitz3.ab3@5439>    BSR.w get1bytemain
00023602 <AmiBlitz3.ab3@5442>   MOVE.w $C(A2),D2
00023608 <AmiBlitz3.ab3@5443>   TST.b debugmode
0002360C <AmiBlitz3.ab3@5444>    BEQ.w 'norerr
00023610 <AmiBlitz3.ab3@5445>   MOVE.w #$C313,D1
00023614 <AmiBlitz3.ab3@5446>   CMP.w #$3,D2
00023618 <AmiBlitz3.ab3@5447>    BCS.w 'chkit
0002361A <AmiBlitz3.ab3@5448>   ADDQ.w #1,D1
00023620 <AmiBlitz3.ab3@5451>   JSR Atokejsr                                             ;make sure next thing on stack
00023622 <AmiBlitz3.ab3@5455>   MOVEQ.l #$02,D1
00023626 <AmiBlitz3.ab3@5456>   CMP.w #$3,D2
0002362A <AmiBlitz3.ab3@5457>    BCS.w 'doit
0002362C <AmiBlitz3.ab3@5458>   MOVEQ.l #$04,D1
00023630 <AmiBlitz3.ab3@5459>   CMP.w #$7,D2
00023634 <AmiBlitz3.ab3@5460>    BCS.w 'doit
0002363A <AmiBlitz3.ab3@5461>   LEA endselstr,A0
00023640 <AmiBlitz3.ab3@5462>   LEA endselstrf,A1
00023646 <AmiBlitz3.ab3@5463>   TST.b debugmode
0002364A <AmiBlitz3.ab3@5464>    BEQ.w 'norerr3
00023650 <AmiBlitz3.ab3@5465>   LEA endselstrf2,A1
00023656 <AmiBlitz3.ab3@5468>   JSR pokecode
0002365A <AmiBlitz3.ab3@5469>   MOVE.w #$C003,D1                                         ;global freemem
00023660 <AmiBlitz3.ab3@5470>  JMP Atokejsr
00023666 <AmiBlitz3.ab3@5473>   TST.b debugmode
0002366A <AmiBlitz3.ab3@5474>    BEQ.w 'norerr2
0002366C <AmiBlitz3.ab3@5475>   ADDQ.w #2,D1                                             ;for the "sE"
0002366E <AmiBlitz3.ab3@5478>   LSL.w #8,D1
00023670 <AmiBlitz3.ab3@5479>   LSL.w #1,D1
00023676 <AmiBlitz3.ab3@5480>   OR.w endsel,D1
0002367C <AmiBlitz3.ab3@5481> JMP writeword
00023680 <AmiBlitz3.ab3@5484> firstrep:    Ds.l 1
00023684 <AmiBlitz3.ab3@5485> replineat:   Ds.l 1
0002368A <AmiBlitz3.ab3@5494>   CLR.l fp0addr
00023694 <AmiBlitz3.ab3@5495>   MOVE.l linenumat,replineat
00023696 <AmiBlitz3.ab3@5496>   MOVEQ.l #$08,D0
0002369C <AmiBlitz3.ab3@5497>   MOVEA.l _execbase,A6
000236A2 <AmiBlitz3.ab3@5498>   MOVE.l mempool,a0
000236A6 <AmiBlitz3.ab3@5499>   JSR _AllocPooled(a6)
000236A8 <AmiBlitz3.ab3@5501>   MOVEA.l D0,A0
000236AC <AmiBlitz3.ab3@5502>   MOVE.l firstrep(PC),(A0)
000236B2 <AmiBlitz3.ab3@5503>   MOVE.l A0,firstrep
000236BA <AmiBlitz3.ab3@5504>   MOVE.l destpointer,$4(A0)
000236BC <AmiBlitz3.ab3@5505> RTS
000236C2 <AmiBlitz3.ab3@5508> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
000236C6 <AmiBlitz3.ab3@5511>   LEA str_temp(PC),A1
000236C8 <AmiBlitz3.ab3@5512>   CLR.w (A1)
000236CC <AmiBlitz3.ab3@5513>   CLR.l $2(A1)
000236CE <AmiBlitz3.ab3@5516>   MOVEQ.l #$04,D0
000236D2 <AmiBlitz3.ab3@5519>     MOVE.b $1(A1),(A1)+
000236D6 <AmiBlitz3.ab3@5520>   DBF D0,'loop
000236DA <AmiBlitz3.ab3@5525>   LEA str_temp(PC),A1
000236DC <AmiBlitz3.ab3@5526>   MOVE.b (A0),D0
000236E0 <AmiBlitz3.ab3@5527>   ORI.b #$20,D0
000236E4 <AmiBlitz3.ab3@5528>   MOVE.b D0,$5(A1)
000236E6 <AmiBlitz3.ab3@5529>   TST.b (A0)+
000236EA <AmiBlitz3.ab3@5530>    BNE.w 'loop2
000236EE <AmiBlitz3.ab3@5531>   CMPI.w #$2E69,(A1)+                                      ;".i"
000236F2 <AmiBlitz3.ab3@5532>    BNE.w 'no
000236F8 <AmiBlitz3.ab3@5533>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
000236FA <AmiBlitz3.ab3@5536> RTS
000236FE <AmiBlitz3.ab3@5540>   BPL.w 'evaltoke
00023700 <AmiBlitz3.ab3@5541>   MOVE.w D0,D1
00023704 <AmiBlitz3.ab3@5542>   ANDI.w #$7F80,D1
00023708 <AmiBlitz3.ab3@5543>    BEQ.w tokeerr
0002370C <AmiBlitz3.ab3@5544>   BCLR #$F,D0
0002370E <AmiBlitz3.ab3@5545>   MOVE.w D0,D4                                             ;got toke number
00023712 <AmiBlitz3.ab3@5546>   BSR.w get1bytemain
00023716 <AmiBlitz3.ab3@5547>  BRA.w 'gotnum
0002371C <AmiBlitz3.ab3@5550>   JSR evalconst
00023722 <AmiBlitz3.ab3@5551>   CMP.l #MaxWord,D3
00023726 <AmiBlitz3.ab3@5552>    BHI.w tokeerr
00023728 <AmiBlitz3.ab3@5553>   TST.w D6
0002372C <AmiBlitz3.ab3@5554>    BNE.w tokeerr
0002372E <AmiBlitz3.ab3@5555>   MOVE.w D3,D4
00023730 <AmiBlitz3.ab3@5558>   MOVEQ.l #$00,D5
00023734 <AmiBlitz3.ab3@5559>   CMP.w #$2C,D0
00023738 <AmiBlitz3.ab3@5560>    BNE.w 'gotfrom
0002373A <AmiBlitz3.ab3@5561>   MOVE.w D4,-(A7)
00023740 <AmiBlitz3.ab3@5562>    JSR evalconst2
00023746 <AmiBlitz3.ab3@5563>   CMP.l #MaxWord,D3
0002374A <AmiBlitz3.ab3@5564>    BHI.w tokeerr
0002374C <AmiBlitz3.ab3@5565>   TST.w D6
00023750 <AmiBlitz3.ab3@5566>    BNE.w tokeerr
00023752 <AmiBlitz3.ab3@5567>   MOVE.w D3,D5
00023754 <AmiBlitz3.ab3@5568>   MOVE.w (A7)+,D4
00023756 <AmiBlitz3.ab3@5571> RTS                                                        ;d4=toke, d5=form
00023758 <AmiBlitz3.ab3@5575>   TST.w D0
0002375C <AmiBlitz3.ab3@5576>    BSR.w gettokeps
00023760 <AmiBlitz3.ab3@5577>   MOVE.w #$4EB9,D1
00023766 <AmiBlitz3.ab3@5578>   JSR writeword
0002376A <AmiBlitz3.ab3@5579>   BSR.w addoff
0002376C <AmiBlitz3.ab3@5580>   MOVE.w D5,D1
00023770 <AmiBlitz3.ab3@5581>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00023772 <AmiBlitz3.ab3@5582>   SWAP D1
00023774 <AmiBlitz3.ab3@5583>   MOVE.w D4,D1
0002377A <AmiBlitz3.ab3@5584> JMP writelong
0002377C <AmiBlitz3.ab3@5588>   TST.w D0
00023780 <AmiBlitz3.ab3@5589>    BSR.w gettokeps
00023784 <AmiBlitz3.ab3@5590>   MOVE.w #$4EB9,D1
0002378A <AmiBlitz3.ab3@5591>   JSR writeword
0002378E <AmiBlitz3.ab3@5592>   BSR.w addoff
00023790 <AmiBlitz3.ab3@5593>   MOVE.w D5,D1
00023794 <AmiBlitz3.ab3@5594>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
00023796 <AmiBlitz3.ab3@5595>   SWAP D1
00023798 <AmiBlitz3.ab3@5596>   MOVE.w D4,D1
0002379E <AmiBlitz3.ab3@5597>   JMP writelong
000237A4 <AmiBlitz3.ab3@5601>   JSR evalconst
000237AA <AmiBlitz3.ab3@5602>   CMP.l #$10000,D3
000237AE <AmiBlitz3.ab3@5603>    BCC.w tokeerr
000237B0 <AmiBlitz3.ab3@5604>   MOVE.w D3,D1
000237B6 <AmiBlitz3.ab3@5605> JMP Atokejsr
000237BA <AmiBlitz3.ab3@5609>   BSR.w gettokeps
000237BE <AmiBlitz3.ab3@5610>   MOVE.w #$4EB9,D1
000237C4 <AmiBlitz3.ab3@5611>   JSR writeword
000237CA <AmiBlitz3.ab3@5612>   MOVE.l destpointer,D3
000237D2 <AmiBlitz3.ab3@5613>   BTST #$7,blitzmode
000237D6 <AmiBlitz3.ab3@5614>    BEQ.w 'inamiga
000237DA <AmiBlitz3.ab3@5615>   BSET #$E,D5
000237DE <AmiBlitz3.ab3@5618>   BSR.w maketjsr
000237E2 <AmiBlitz3.ab3@5619>   BSR.w addoff
000237E8 <AmiBlitz3.ab3@5620> JMP writelong
000237EC <AmiBlitz3.ab3@5624>   BEQ.w 'zero
000237EE <AmiBlitz3.ab3@5625>   MOVEQ.l #$02,D2                                          ;get a word
000237F4 <AmiBlitz3.ab3@5627>   JSR bakeval
000237F8 <AmiBlitz3.ab3@5628>   MOVE.w fvwait(PC),D1
000237FC <AmiBlitz3.ab3@5629>  BRA.w 'vcont
00023800 <AmiBlitz3.ab3@5632>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00023806 <AmiBlitz3.ab3@5635>   JSR writeword
0002380A <AmiBlitz3.ab3@5636>   MOVE.w #$C104,D1
00023810 <AmiBlitz3.ab3@5637> JMP Atokejsr
00023812 <AmiBlitz3.ab3@5641>   SUBQ.w #1,D0
00023818 <AmiBlitz3.ab3@5644>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
0002381C <AmiBlitz3.ab3@5647>   Dc.l $426d0001                                           ;clr.w $0(A5)
00023820 <AmiBlitz3.ab3@5651>   MOVE.b debugmode(PC),D1
00023824 <AmiBlitz3.ab3@5652>   BEQ.b 'skip
00023828 <AmiBlitz3.ab3@5653>   MOVE.w #$D500,D1
0002382E <AmiBlitz3.ab3@5654> JMP Atokejsr
00023830 <AmiBlitz3.ab3@5657> RTS
00023838 <AmiBlitz3.ab3@5661>   BSET #$0,blitzmode
00023840 <AmiBlitz3.ab3@5662>   BSET #$7,blitzmode
00023844 <AmiBlitz3.ab3@5663>   MOVE.w #$C200,D1
0002384A <AmiBlitz3.ab3@5664>   JSR Atokejsr
00023850 <AmiBlitz3.ab3@5665>   TST.b debugmode
00023854 <AmiBlitz3.ab3@5666>    BEQ.w 'done
00023858 <AmiBlitz3.ab3@5667>   MOVE.w cgoblitz(PC),D1
0002385E <AmiBlitz3.ab3@5668>   JSR writeword
00023860 <AmiBlitz3.ab3@5669>   MOVEQ.l #-$01,D1
00023866 <AmiBlitz3.ab3@5670>   JSR writeword
0002386C <AmiBlitz3.ab3@5671>   JSR getbbase
00023872 <AmiBlitz3.ab3@5672>   JSR writeword
00023876 <AmiBlitz3.ab3@5675> BRA.w debugmode_codelabel
0002387A <AmiBlitz3.ab3@5679>   MOVE.w #$C201,D1
0002387E <AmiBlitz3.ab3@5680> BRA.w do_AMIGA_toamode
00023882 <AmiBlitz3.ab3@5683>   MOVE.W  #$C202,D1
0002388A <AmiBlitz3.ab3@5686>   BSET #$0,blitzmode
00023892 <AmiBlitz3.ab3@5687>   BCLR #$7,blitzmode
00023898 <AmiBlitz3.ab3@5688>   JSR Atokejsr
0002389E <AmiBlitz3.ab3@5689>   TST.b debugmode
000238A2 <AmiBlitz3.ab3@5690>    BEQ.w 'done
000238A6 <AmiBlitz3.ab3@5691>   MOVE.w cgoamiga(PC),D1
000238AC <AmiBlitz3.ab3@5692>   JSR writeword
000238B2 <AmiBlitz3.ab3@5693>   JSR getbbase
000238B8 <AmiBlitz3.ab3@5694>   JSR writeword
000238BC <AmiBlitz3.ab3@5697> BRA.w debugmode_codelabel
000238C0 <AmiBlitz3.ab3@5701>   MOVEM.l D2-D7/A2-A4,-(A7)
000238C4 <AmiBlitz3.ab3@5704>   MOVEM.l (A7)+,D2-D7/A2-A4
000238CA <AmiBlitz3.ab3@5708>   JSR evalconst
000238D0 <AmiBlitz3.ab3@5709>   CMP.l #$E,D3
000238D4 <AmiBlitz3.ab3@5710>    BCC.w interr4
000238D8 <AmiBlitz3.ab3@5711>   MOVE.w #$7000,D1
000238DA <AmiBlitz3.ab3@5712>   OR.w D3,D1
000238E0 <AmiBlitz3.ab3@5713>   JSR writeword
000238E4 <AmiBlitz3.ab3@5714>   MOVE.w #$C101,D1
000238EA <AmiBlitz3.ab3@5715> JMP Atokejsr                                               ;clear the interupt
000238EC <AmiBlitz3.ab3@5718> inerr:       Ds.w 1                                        ;flag - in error trap mode
000238F0 <AmiBlitz3.ab3@5719> errjmp:      Ds.l 1                                        ;where err jump is
000238F4 <AmiBlitz3.ab3@5720> errcode:     Ds.l 1
000238F8 <AmiBlitz3.ab3@5724>   MOVE.W  #$D202,D1
000238FE <AmiBlitz3.ab3@5725> JMP Atokejsr                                               ;BRA.W Atokejsr
00023902 <AmiBlitz3.ab3@5729>   MOVE.w inerr(PC),D1
00023906 <AmiBlitz3.ab3@5730>    BEQ.w errerr3
0002390C <AmiBlitz3.ab3@5731>   CLR.w inerr
00023912 <AmiBlitz3.ab3@5732>   MOVE.w dontwrite_nomemleft,D1
00023916 <AmiBlitz3.ab3@5733>    BNE.w 'skip
0002391A <AmiBlitz3.ab3@5734>   MOVEA.l errjmp(PC),A0
00023920 <AmiBlitz3.ab3@5735>   MOVE.l destpointer,(A0)
00023924 <AmiBlitz3.ab3@5738> BRA.w get1bytemain
00023928 <AmiBlitz3.ab3@5742>   MOVE.w #$D205,D1
0002392E <AmiBlitz3.ab3@5743> JMP Atokejsr
00023934 <AmiBlitz3.ab3@5747>   MOVE.w proceduremode,D1
00023938 <AmiBlitz3.ab3@5748>    BNE.w errerr1
0002393C <AmiBlitz3.ab3@5749>   MOVE.w inerr(PC),D1
00023940 <AmiBlitz3.ab3@5750>    BNE.w errerr2
00023946 <AmiBlitz3.ab3@5751>   LEA inerr,a0
00023948 <AmiBlitz3.ab3@5752>   NOT.w (a0)                                               ;reass
0002394C <AmiBlitz3.ab3@5753>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00023952 <AmiBlitz3.ab3@5754>   JSR writeword
0002395C <AmiBlitz3.ab3@5755>   MOVE.l destpointer,errcode
00023960 <AmiBlitz3.ab3@5756>   BSR.w addoff
00023966 <AmiBlitz3.ab3@5757>   JSR writelong
0002396A <AmiBlitz3.ab3@5758>   MOVE.w #$D201,D1
00023970 <AmiBlitz3.ab3@5759>   JSR Atokejsr
00023974 <AmiBlitz3.ab3@5760>   MOVE.w #$4EF9,D1                                         ;JMP
0002397A <AmiBlitz3.ab3@5761>   JSR writeword
00023984 <AmiBlitz3.ab3@5762>   MOVE.l destpointer,errjmp
00023988 <AmiBlitz3.ab3@5763>   BSR.w addoff
0002398E <AmiBlitz3.ab3@5764>   JSR writelong
00023994 <AmiBlitz3.ab3@5765>   MOVE.w dontwrite_nomemleft,D1
00023998 <AmiBlitz3.ab3@5766>    BNE.w 'skip
0002399C <AmiBlitz3.ab3@5767>   MOVEA.l errcode(PC),A0
000239A2 <AmiBlitz3.ab3@5768>   MOVE.l destpointer,(A0)
000239A4 <AmiBlitz3.ab3@5771> RTS
000239A8 <AmiBlitz3.ab3@5774> intlineat:  Ds.l 1
000239AA <AmiBlitz3.ab3@5778>   MOVEQ.l #-$01,D1                                        ;type - need new string space
000239AE <AmiBlitz3.ab3@5779>   BSR.w errchx
000239B4 <AmiBlitz3.ab3@5780>   MOVE.w D1,intstring
000239BE <AmiBlitz3.ab3@5781>   MOVE.l linenumat,intlineat
000239C4 <AmiBlitz3.ab3@5782>   JSR evalconst                                           ;get constant - int level
000239CA <AmiBlitz3.ab3@5783>   CMP.l #$E,D3
000239CE <AmiBlitz3.ab3@5784>    BCC.w interr4
000239D4 <AmiBlitz3.ab3@5785>   ST intsused
000239DA <AmiBlitz3.ab3@5786>   MOVE.w D3,intlevel
000239DE <AmiBlitz3.ab3@5787>   MOVE.w #$7000,D1
000239E0 <AmiBlitz3.ab3@5788>   OR.w D3,D1                                              
000239E6 <AmiBlitz3.ab3@5789>   JSR writeword                                         ;moveq #x,d0
000239EA <AmiBlitz3.ab3@5790>   MOVE.w #$223C,D1                                        ;move.l #x,d1
000239F0 <AmiBlitz3.ab3@5791>   JSR writeword
000239F4 <AmiBlitz3.ab3@5792>   BSR.w addoff
000239FA <AmiBlitz3.ab3@5793>   MOVE.l destpointer,-(A7)
000239FE <AmiBlitz3.ab3@5794>   BSR.w writelong
00023A02 <AmiBlitz3.ab3@5795>   MOVE.w #$C100,D1
00023A08 <AmiBlitz3.ab3@5796>   JSR Atokejsr
00023A0C <AmiBlitz3.ab3@5797>   MOVE.w #$4EF9,D1                                        ;jmp
00023A12 <AmiBlitz3.ab3@5798>   JSR writeword
00023A16 <AmiBlitz3.ab3@5799>   BSR.w addoff
00023A20 <AmiBlitz3.ab3@5800>   MOVE.l destpointer,intjmpat
00023A24 <AmiBlitz3.ab3@5801>   BSR.w writelong
00023A26 <AmiBlitz3.ab3@5802>   MOVEA.l (A7)+,A0
00023A2C <AmiBlitz3.ab3@5803>   MOVE.w dontwrite_nomemleft,D1
00023A30 <AmiBlitz3.ab3@5804>   BNE.w 'dontpoke
00023A36 <AmiBlitz3.ab3@5805>   MOVE.l destpointer,(A0)
00023A3A <AmiBlitz3.ab3@5808>   MOVE.l intstart0(PC),D1
00023A3E <AmiBlitz3.ab3@5809>   BSR.w writelong
00023A44 <AmiBlitz3.ab3@5810>   TST.b debugmode
00023A48 <AmiBlitz3.ab3@5811>    BEQ.w 'norerr
00023A4A <AmiBlitz3.ab3@5815>   MOVEQ.l #$02,D1
00023A4E <AmiBlitz3.ab3@5816>   BSR.w writetrap
00023A52 <AmiBlitz3.ab3@5817>   BSR.w addoff
00023A5C <AmiBlitz3.ab3@5818>   MOVE.l destpointer,intcleanat
00023A60 <AmiBlitz3.ab3@5819>   BSR.w writelong
00023A66 <AmiBlitz3.ab3@5820>   MOVE.w intlevel,D1
00023A6A <AmiBlitz3.ab3@5821>   BSR.w writeword
00023A6E <AmiBlitz3.ab3@5822>   MOVE.w #$C30B,D1                                         ;disable stack checks
00023A74 <AmiBlitz3.ab3@5823>   JSR Atokejsr
00023A78 <AmiBlitz3.ab3@5826>   MOVE.w #$FED3,D1
00023A7C <AmiBlitz3.ab3@5827>   BSR.w uselib
00023A80 <AmiBlitz3.ab3@5828>   MOVE.w #$C102,D1
00023A86 <AmiBlitz3.ab3@5829>   JSR Atokejsr
00023A8E <AmiBlitz3.ab3@5830>   MOVE.w #-1,lasta6
00023A98 <AmiBlitz3.ab3@5831>   MOVE.l linenumat,intline
00023A9A <AmiBlitz3.ab3@5832> RTS
00023A9C <AmiBlitz3.ab3@5836>             Ds.w 1                                         ;??looks like obsolved data??
00023AA0 <AmiBlitz3.ab3@5838> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
00023AA4 <AmiBlitz3.ab3@5840> intjmpat:   Ds.l 1
00023AA8 <AmiBlitz3.ab3@5841> intline:    Ds.l 1
00023AAA <AmiBlitz3.ab3@5842> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023AAC <AmiBlitz3.ab3@5845> intlevel:   Ds.w 1
00023AB0 <AmiBlitz3.ab3@5846> intcleanat: Ds.l 1
00023AB4 <AmiBlitz3.ab3@5847> ret15add:   Ds.l 1
00023AB6 <AmiBlitz3.ab3@5848> ret15cc:    Ds.w 1
00023ABE <AmiBlitz3.ab3@5852>   ADDI.l #$12,$2(A7)
00023AC6 <AmiBlitz3.ab3@5853>   MOVE.l $2(A7),ret15add
00023ACC <AmiBlitz3.ab3@5854>   MOVE.w (A7),ret15cc
00023AD4 <AmiBlitz3.ab3@5855>   MOVE.l #directdo,$2(A7)
00023AD6 <AmiBlitz3.ab3@5856> RTE
00023ADA <AmiBlitz3.ab3@5865>   MOVE.l ret15add(PC),-(A7)
00023ADE <AmiBlitz3.ab3@5866>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023AE2 <AmiBlitz3.ab3@5867>   MOVEM.l D0-D7/A0-A6,-(A7)
00023AEC <AmiBlitz3.ab3@5868>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023AF6 <AmiBlitz3.ab3@5869>   MOVE.l destbufferstart,trap15temp2
00023B00 <AmiBlitz3.ab3@5870>   MOVE.l libend,templibend
00023B0A <AmiBlitz3.ab3@5871>   MOVE.l data1start,tempdata1start
00023B10 <AmiBlitz3.ab3@5872>   CLR.l hunkoffsetcounter
00023B16 <AmiBlitz3.ab3@5874>   MOVE.l directbuffer,a0
00023B1C <AmiBlitz3.ab3@5878>   MOVE.l a0,destbufferstart
00023B22 <AmiBlitz3.ab3@5879>   ADD.l #3900,a0
00023B28 <AmiBlitz3.ab3@5880>   MOVE.l a0,destbufferend
00023B2E <AmiBlitz3.ab3@5881>   TST.b exdebug
00023B32 <AmiBlitz3.ab3@5882>   BEQ 'l1
00023B38 <AmiBlitz3.ab3@5883>   MOVE.l a0,libend
00023B3E <AmiBlitz3.ab3@5884>   ADD.l #4000,a0
00023B44 <AmiBlitz3.ab3@5885>   MOVE.l a0,data1start
00023B4E <AmiBlitz3.ab3@5888>   MOVE.l #'dircont,errcont
00023B54 <AmiBlitz3.ab3@5889> 
00023B5A <AmiBlitz3.ab3@5890>   MOVE.l A7,errstack
00023B62 <AmiBlitz3.ab3@5891>   MOVE.w #$FFFF,dirmode
00023B66 <AmiBlitz3.ab3@5893>     MOVEA.l ret15add(PC),A1
00023B6C <AmiBlitz3.ab3@5894>     MOVE.w -(A1),blitzmode
00023B6E <AmiBlitz3.ab3@5895>     CLR.l -(A1)
00023B74 <AmiBlitz3.ab3@5896>     MOVE.l -(A1),firstglob
00023B7A <AmiBlitz3.ab3@5897>     MOVE.l -(A1),firstlocal
00023B80 <AmiBlitz3.ab3@5899>   CLR.w proceduremode
00023B86 <AmiBlitz3.ab3@5900>   MOVE.l firstglob,D0
00023B8C <AmiBlitz3.ab3@5901>   OR.l firstlocal,D0
00023B90 <AmiBlitz3.ab3@5902>   BEQ.b 'skip
00023B96 <AmiBlitz3.ab3@5903>   NOT.w proceduremode
00023B98 <AmiBlitz3.ab3@5906>   MOVEA.l -(A1),A0                                         ;address of string
00023B9A <AmiBlitz3.ab3@5910>   MOVE.l A0,-(A7)
00023BD8 <AmiBlitz3.ab3@5913>   !ComData_GetL{comFunc_DebugTrap,A1}
00023BDA <AmiBlitz3.ab3@5914>   JSR (A1)                                                 ;tokenise line.....
00023BDC <AmiBlitz3.ab3@5916>   MOVEA.l (A7)+,A5
00023BE6 <AmiBlitz3.ab3@5917>   MOVE.l directbuffer,destpointer
00023BEC <AmiBlitz3.ab3@5918>   TST.b exdebug
00023BF0 <AmiBlitz3.ab3@5919>   BEQ 'noexdebug
00023BF2 <AmiBlitz3.ab3@5920>   MOVE.l a5,a0
00023BF8 <AmiBlitz3.ab3@5921>   MOVE.l #200,d0
00023BFE <AmiBlitz3.ab3@5924>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023C02 <AmiBlitz3.ab3@5925>   DBF d0,'l2
00023C08 <AmiBlitz3.ab3@5930>   MOVE.l destpointer,a0
00023C0C <AmiBlitz3.ab3@5931>   MOVE.w #$207c,(a0)+
00023C0E <AmiBlitz3.ab3@5932>   MOVE.l a5,d0
00023C14 <AmiBlitz3.ab3@5933>   ADD.l #$206,d0                                           ;constant from debuglib
00023C16 <AmiBlitz3.ab3@5934>   MOVE.l d0,(a0)+
00023C1C <AmiBlitz3.ab3@5935>   MOVE.l a0,destpointer
00023C1E <AmiBlitz3.ab3@5936>   MOVE.l a5,a0
00023C22 <AmiBlitz3.ab3@5937>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023C28 <AmiBlitz3.ab3@5938>   MOVE.l #"$520",(a0)+
00023C2C <AmiBlitz3.ab3@5939>   MOVE.w #"4:",(a0)+
00023C32 <AmiBlitz3.ab3@5942>   CLR.w dontwrite_nomemleft
00023C3A <AmiBlitz3.ab3@5943>   MOVE.w #$FFFF,lasta6
00023C3E <AmiBlitz3.ab3@5944>   BSR.w compile_line                                        ;.....compile it
00023C44 <AmiBlitz3.ab3@5945>   TST.b exdebug
00023C48 <AmiBlitz3.ab3@5946>   BEQ 'noexdebug2
00023C4E <AmiBlitz3.ab3@5947>   JSR fixjsrs
00023C54 <AmiBlitz3.ab3@5950>   CLR.w proceduremode
00023C58 <AmiBlitz3.ab3@5951>   BSR.w errchx
00023C5C <AmiBlitz3.ab3@5952>   MOVE.w #$4EF9,D1
00023C60 <AmiBlitz3.ab3@5953>   BSR.w writeword                                          ;JMP
00023C64 <AmiBlitz3.ab3@5954>   MOVE.l ret15add(PC),D1
00023C68 <AmiBlitz3.ab3@5955>   BSR.w writelong                                          ;jmp to done
00023C6E <AmiBlitz3.ab3@5956>   MOVE.w dontwrite_nomemleft,D0
00023C72 <AmiBlitz3.ab3@5957>    BNE.w nodirmem
00023C7A <AmiBlitz3.ab3@5958>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00023C80 <AmiBlitz3.ab3@5961>   CLR.w dirmode
00023C86 <AmiBlitz3.ab3@5962>   MOVE.w ret15cc(PC),$3C(A7)
00023C90 <AmiBlitz3.ab3@5963>   MOVE.l trap15temp,destbufferend
00023C9A <AmiBlitz3.ab3@5964>   MOVE.l trap15temp2,destbufferstart
00023CA4 <AmiBlitz3.ab3@5965>   MOVE.l tempdata1start,data1start
00023CAE <AmiBlitz3.ab3@5966>   MOVE.l templibend,libend
00023CB2 <AmiBlitz3.ab3@5967>   MOVEM.l (A7)+,D0-D7/A0-A6
00023CB6 <AmiBlitz3.ab3@5968>   BSR.w Aclearcache                                        ;selden used
00023CB8 <AmiBlitz3.ab3@5969> RTR
00023CBC <AmiBlitz3.ab3@5972>   MOVEA.l ret15add(PC),A0
00023CBE <AmiBlitz3.ab3@5973>   SUBQ.w #2,A0
00023CC0 <AmiBlitz3.ab3@5974>   MOVE.l D0,-(A0)
00023CC4 <AmiBlitz3.ab3@5975> BRA.w 'direxit
00023CC8 <AmiBlitz3.ab3@5979>   MOVE.w $6(A3),D1
00023CCC <AmiBlitz3.ab3@5980>   BSR.w uselib                                             ;get lib for base address
00023CD0 <AmiBlitz3.ab3@5981>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023CD2 <AmiBlitz3.ab3@5982>   ADDQ.w #8,A3
00023CD4 <AmiBlitz3.ab3@5983>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023CD6 <AmiBlitz3.ab3@5984>   MOVE.l A3,-(A7)
00023CD8 <AmiBlitz3.ab3@5988>   MOVEQ.l #$00,D3
00023CDE <AmiBlitz3.ab3@5990>   JSR checka4a5
00023CE0 <AmiBlitz3.ab3@5994>   MOVE.b (A3)+,D1
00023CE4 <AmiBlitz3.ab3@5995>    BMI.w 'done
00023CE6 <AmiBlitz3.ab3@5996>   MOVEQ.l #$03,D2
00023CE8 <AmiBlitz3.ab3@5997>   ADDQ.w #1,D3
00023CEC <AmiBlitz3.ab3@5998>   MOVEM.l D3/A3,-(A7)
00023CF2 <AmiBlitz3.ab3@6000>   MOVE.b funcparloop,-(a7)
00023CFA <AmiBlitz3.ab3@6001>   MOVE.b #0,funcparloop
00023D00 <AmiBlitz3.ab3@6002>   MOVE.l leftsidetype,-(a7)
00023D06 <AmiBlitz3.ab3@6003>   MOVE.l rightsidetype,-(a7)
00023D0C <AmiBlitz3.ab3@6004>   MOVE.w leftsideflagmask,-(a7)
00023D12 <AmiBlitz3.ab3@6005>   MOVE.w rightsideflagmask,-(a7)
00023D18 <AmiBlitz3.ab3@6006>   CLR.l leftsidetype
00023D1E <AmiBlitz3.ab3@6007>   CLR.l rightsidetype
00023D24 <AmiBlitz3.ab3@6008>   CLR.w leftsideflagmask
00023D2A <AmiBlitz3.ab3@6009>   CLR.w rightsideflagmask
00023D30 <AmiBlitz3.ab3@6010>   MOVE.b blitzparloop,-(a7)
00023D38 <AmiBlitz3.ab3@6011>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
00023D3E <AmiBlitz3.ab3@6013>   JSR peval
00023D44 <AmiBlitz3.ab3@6015>   MOVE.b (a7)+,blitzparloop
00023D4A <AmiBlitz3.ab3@6016>   MOVE.w (a7)+,rightsideflagmask
00023D50 <AmiBlitz3.ab3@6017>   MOVE.w (a7)+,leftsideflagmask
00023D56 <AmiBlitz3.ab3@6018>   MOVE.l (a7)+,rightsidetype
00023D5C <AmiBlitz3.ab3@6019>   MOVE.l (a7)+,leftsidetype
00023D62 <AmiBlitz3.ab3@6020>   MOVE.b (a7)+,funcparloop
00023D66 <AmiBlitz3.ab3@6021>   MOVEM.l (A7)+,D3/A3
00023D6A <AmiBlitz3.ab3@6023>   CMP.w #$2C,D0     ; ','
00023D6E <AmiBlitz3.ab3@6024>    BEQ.w 'loop
00023D70 <AmiBlitz3.ab3@6025>   TST.b (A3)
00023D74 <AmiBlitz3.ab3@6026>    BPL.w syntaxerr
00023D76 <AmiBlitz3.ab3@6029>   MOVEA.l (A7)+,A3
00023D78 <AmiBlitz3.ab3@6030>   SUBQ.w #1,D3
00023D7C <AmiBlitz3.ab3@6031>    BPL.w 'toend
00023D80 <AmiBlitz3.ab3@6032>    BSR.w get1bytemain                                      ;no pars - get :
00023D84 <AmiBlitz3.ab3@6033>  BRA.w 'nopars
00023D86 <AmiBlitz3.ab3@6036>   TST.b (A3)+                                              ;go to end of params
00023D8A <AmiBlitz3.ab3@6037>    BPL.w 'toend
00023D8C <AmiBlitz3.ab3@6038>   SUBQ.w #1,A3
00023D8E <AmiBlitz3.ab3@6041>    MOVEQ.l #$00,D1
00023D90 <AmiBlitz3.ab3@6042>    MOVE.b -(A3),D1
00023D94 <AmiBlitz3.ab3@6043>    BTST #$4,D1
00023D98 <AmiBlitz3.ab3@6044>     BNE.w 'addreg
00023D9A <AmiBlitz3.ab3@6045>    LSL.w #8,D1
00023D9C <AmiBlitz3.ab3@6046>    LSL.w #1,D1
00023DA0 <AmiBlitz3.ab3@6047>    ORI.w #$201F,D1
00023DA4 <AmiBlitz3.ab3@6048>  BRA.w 'gotit
00023DA8 <AmiBlitz3.ab3@6051>    ANDI.w #$7,D1
00023DAA <AmiBlitz3.ab3@6052>    LSL.w #8,D1
00023DAC <AmiBlitz3.ab3@6053>    LSL.w #1,D1
00023DB0 <AmiBlitz3.ab3@6054>    ORI.w #$205F,D1
00023DB4 <AmiBlitz3.ab3@6057>     BSR.w writeword
00023DB8 <AmiBlitz3.ab3@6058>   DBF D3,'loop2
00023DBE <AmiBlitz3.ab3@6061>   MOVE.w (A7)+,libjsr+2
00023DC4 <AmiBlitz3.ab3@6062>   MOVE.w (A7)+,libbase+2
00023DCA <AmiBlitz3.ab3@6063>   MOVE.l libbase,D1
00023DCE <AmiBlitz3.ab3@6064>    BSR.w writelong
00023DD4 <AmiBlitz3.ab3@6065>   MOVE.l libjsr,D1
00023DDA <AmiBlitz3.ab3@6066>   JSR writelong
00023DE0 <AmiBlitz3.ab3@6068>   JSR restorea4a5
00023DE2 <AmiBlitz3.ab3@6070> RTS
00023DE8 <AmiBlitz3.ab3@6077>   MOVE.l data1,D4
00023DEE <AmiBlitz3.ab3@6078>   SUB.l data1start,D4
00023DF4 <AmiBlitz3.ab3@6079>   ADD.l #10000,d4
00023DFA <AmiBlitz3.ab3@6080>   MOVE.l libend,D3
00023E00 <AmiBlitz3.ab3@6081>   SUB.l destbufferend,D3
00023E06 <AmiBlitz3.ab3@6082>   ADD.l #40000,d3
00023E0C <AmiBlitz3.ab3@6083>   MOVE.l bigpc,D2
00023E12 <AmiBlitz3.ab3@6084>   SUB.l destbufferstart,D2
00023E18 <AmiBlitz3.ab3@6085>   ADD.l #20000,d2
00023E1E <AmiBlitz3.ab3@6086>   MOVE.l databuffer,D5
00023E24 <AmiBlitz3.ab3@6087>   ADD.l #10000,D5
00023E28 <AmiBlitz3.ab3@6088>  BRA newallox
00023E2E <AmiBlitz3.ab3@6091>   MOVE.l objectbuffer,D2       ;??Looks like unused code??
00023E30 <AmiBlitz3.ab3@6092>   LSR.l #1,D2
00023E36 <AmiBlitz3.ab3@6093>   ADD.l objectbuffer,D2
00023E3C <AmiBlitz3.ab3@6095>   MOVE.l libsbuffer,D3
00023E3E <AmiBlitz3.ab3@6096>   LSR.l #1,D3
00023E44 <AmiBlitz3.ab3@6097>   ADD.l libsbuffer,D3
00023E4A <AmiBlitz3.ab3@6099>   MOVE.l systembuffer,D4
00023E4C <AmiBlitz3.ab3@6100>   LSR.l #1,D4
00023E52 <AmiBlitz3.ab3@6101>   ADD.l systembuffer,D4
00023E58 <AmiBlitz3.ab3@6103>   MOVE.l databuffer,D5
00023E5A <AmiBlitz3.ab3@6104>   LSR.l #1,D5
00023E60 <AmiBlitz3.ab3@6105>   ADD.l databuffer,D5
00023E64 <AmiBlitz3.ab3@6107> BRA.w newallox
00023E6A <AmiBlitz3.ab3@6111>   MOVE.l bigpc,D2
00023E70 <AmiBlitz3.ab3@6112>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023E76 <AmiBlitz3.ab3@6113>   SUB.l savefuncspace,d2
00023E7C <AmiBlitz3.ab3@6115>   TST.w debugversion
00023E80 <AmiBlitz3.ab3@6116>    BNE.b 'skip
00023E86 <AmiBlitz3.ab3@6117>   ADDI.l #$800,D2
00023E8C <AmiBlitz3.ab3@6120>   MOVE.l libend,D3
00023E92 <AmiBlitz3.ab3@6121>   SUB.l destbufferend,D3
00023E98 <AmiBlitz3.ab3@6125>   MOVE.l data1,D4
00023E9E <AmiBlitz3.ab3@6126>   SUB.l data1start,D4
00023EA4 <AmiBlitz3.ab3@6130>   MOVE.l data2,D5
00023EAA <AmiBlitz3.ab3@6131>   SUB.l data2at,D5
00023EB0 <AmiBlitz3.ab3@6134>   CLR.l morememadd
00023EB4 <AmiBlitz3.ab3@6138>   BSR.w makeallox
00023EB8 <AmiBlitz3.ab3@6139>   BNE.w 'done
00023EBC <AmiBlitz3.ab3@6140>  BRA.w init_buffers
00023EBE <AmiBlitz3.ab3@6143> RTS
00023EC4 <AmiBlitz3.ab3@6147>   MOVEA.l _execbase,A6
00023ECA <AmiBlitz3.ab3@6148>   MOVE.l objlen,D0
00023ECE <AmiBlitz3.ab3@6149>   BEQ.w 'skip
00023ED4 <AmiBlitz3.ab3@6150>   CLR.l objlen
00023EDA <AmiBlitz3.ab3@6151>   MOVEA.l destbufferstart,A1
00023EE0 <AmiBlitz3.ab3@6153>   MOVE.l mempool,a0
00023EE4 <AmiBlitz3.ab3@6154> JMP _FreeVec(A6)
00023EE6 <AmiBlitz3.ab3@6159> RTS
00023EEC <AmiBlitz3.ab3@6163>   MOVE.l objectbuffer,D2
00023EF2 <AmiBlitz3.ab3@6164>   MOVE.l libsbuffer,D3
00023EF8 <AmiBlitz3.ab3@6165>   MOVE.l systembuffer,D4
00023EFE <AmiBlitz3.ab3@6166>   MOVE.l databuffer,D5
00023F06 <AmiBlitz3.ab3@6171>   MOVE.w #$FFFF,anyerrs      ; was -1
00023F0A <AmiBlitz3.ab3@6172>   BSR.w freeallox
00023F0C <AmiBlitz3.ab3@6176>   ADDQ.l #1,D2
00023F10 <AmiBlitz3.ab3@6177>   BCLR #$0,D2
00023F12 <AmiBlitz3.ab3@6178>   ADDQ.l #1,D3
00023F16 <AmiBlitz3.ab3@6179>   BCLR #$0,D3
00023F18 <AmiBlitz3.ab3@6180>   ADDQ.l #1,D4
00023F1C <AmiBlitz3.ab3@6181>   BCLR #$0,D4
00023F1E <AmiBlitz3.ab3@6183>   TST.l d5        ; ??? make no sence ??
00023F22 <AmiBlitz3.ab3@6184>   BNE 'l1
00023F24 <AmiBlitz3.ab3@6188>   ADDQ.l #1,D5
00023F28 <AmiBlitz3.ab3@6189>   BCLR #$0,D5
00023F2A <AmiBlitz3.ab3@6191>   MOVE.l D2,D0
00023F2C <AmiBlitz3.ab3@6192>   ADD.l D3,D0
00023F2E <AmiBlitz3.ab3@6193>   ADD.l D4,D0
00023F30 <AmiBlitz3.ab3@6194>   ADD.l D5,D0
00023F36 <AmiBlitz3.ab3@6196>   ADD.l #moremem,d0
00023F38 <AmiBlitz3.ab3@6198>   MOVE.l D0,D6
00023F3E <AmiBlitz3.ab3@6199>   MOVE.l #MemfPublic_MemfClear,D1
00023F44 <AmiBlitz3.ab3@6201>   MOVE.l mempool,a0
00023F4A <AmiBlitz3.ab3@6202>   MOVEA.l _execbase,A6
00023F4E <AmiBlitz3.ab3@6203>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023F50 <AmiBlitz3.ab3@6206>   TST.l D0
00023F54 <AmiBlitz3.ab3@6207>   BEQ.w 'done
00023F5A <AmiBlitz3.ab3@6208>   MOVE.l D6,objlen
00023F60 <AmiBlitz3.ab3@6209>   MOVE.l D2,objectbuffer
00023F66 <AmiBlitz3.ab3@6210>   MOVE.l D3,libsbuffer
00023F6C <AmiBlitz3.ab3@6211>   MOVE.l D4,systembuffer
00023F72 <AmiBlitz3.ab3@6212>   MOVE.l D5,databuffer
00023F78 <AmiBlitz3.ab3@6213>   MOVE.l D0,destbufferstart
00023FAC <AmiBlitz3.ab3@6217>   !ComData_SetL{comPtr_DestBufferStart,D0}
00023FAE <AmiBlitz3.ab3@6219>   ADD.l D2,D0
00023FB4 <AmiBlitz3.ab3@6220>   MOVE.l D0,destbufferend
00023FB6 <AmiBlitz3.ab3@6221>   ADD.l D3,D0
00023FBC <AmiBlitz3.ab3@6222>   MOVE.l D0,data1start
00023FBE <AmiBlitz3.ab3@6223>   ADD.l D4,D0
00023FC4 <AmiBlitz3.ab3@6224>   MOVE.l D0,data2at
00023FC6 <AmiBlitz3.ab3@6225>   ADD.l D5,D0
00023FCC <AmiBlitz3.ab3@6226>   MOVE.l D0,allat
00023FCE <AmiBlitz3.ab3@6229> RTS
00023FD2 <AmiBlitz3.ab3@6233>   Dc.b $00,$00,$00,$01                                     ;         1
00023FD6 <AmiBlitz3.ab3@6234>   Dc.b $00,$00,$00,$0A                                     ;        10
00023FDA <AmiBlitz3.ab3@6235>   Dc.b $00,$00,$00,$64                                     ;       100
00023FDE <AmiBlitz3.ab3@6236>   Dc.b $00,$00,$03,$E8                                     ;      1000
00023FE2 <AmiBlitz3.ab3@6237>   Dc.b $00,$00,$27,$10                                     ;     10000
00023FE6 <AmiBlitz3.ab3@6238>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023FEA <AmiBlitz3.ab3@6239>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023FEE <AmiBlitz3.ab3@6240>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023FF2 <AmiBlitz3.ab3@6241>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023FF6 <AmiBlitz3.ab3@6242>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023FF8 <AmiBlitz3.ab3@6246>   MOVEQ.l #$00,D1                                          ;no zero printed
00023FFA <AmiBlitz3.ab3@6247>   MOVEQ.l #$24,D3                                          ; "$"
00023FFC <AmiBlitz3.ab3@6250>   MOVEQ.l #$30,D4                                          ; "0"
00024000 <AmiBlitz3.ab3@6253>     CMP.l divisors(PC,D3.W),D2
00024004 <AmiBlitz3.ab3@6254>     BCS.w 'skip
00024008 <AmiBlitz3.ab3@6255>     SUB.l divisors(PC,D3.W),D2
0002400A <AmiBlitz3.ab3@6256>     ADDQ.w #1,D4
0002400E <AmiBlitz3.ab3@6257>  BRA.w 'loop2
00024012 <AmiBlitz3.ab3@6260>   CMP.b #"0",D4
00024016 <AmiBlitz3.ab3@6261>   BNE.w 'doit
00024018 <AmiBlitz3.ab3@6262>   TST.w D1
0002401C <AmiBlitz3.ab3@6263>   BEQ.w 'skip2
0002401E <AmiBlitz3.ab3@6266>   MOVE.b D4,(A0)+
00024020 <AmiBlitz3.ab3@6267>   MOVEQ.l #$01,D1
00024022 <AmiBlitz3.ab3@6270>   SUBQ.w #4,D3
00024026 <AmiBlitz3.ab3@6271>   BPL.w 'loop
00024028 <AmiBlitz3.ab3@6272>   TST.w D1
0002402C <AmiBlitz3.ab3@6273>   BNE.w 'skip3
00024030 <AmiBlitz3.ab3@6274>   MOVE.b #"0",(A0)+
00024032 <AmiBlitz3.ab3@6277>   CLR.b (A0)
00024034 <AmiBlitz3.ab3@6278> RTS
00024054 <AmiBlitz3.ab3@6281> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00024114 <AmiBlitz3.ab3@6282> str_residentpath:       Ds.l 48                                                ;respath org source
000241D4 <AmiBlitz3.ab3@6283> str_residentname:       Ds.l 48                                                ;resname org source
000241DA <AmiBlitz3.ab3@6289>   MOVE.l macrobase,D0
000241DE <AmiBlitz3.ab3@6290>    BNE.w 'skip
000241E4 <AmiBlitz3.ab3@6291>   MOVE.l newtype_string,D0
000241E8 <AmiBlitz3.ab3@6292>    BNE.w 'skip
000241EE <AmiBlitz3.ab3@6293>   MOVEA.l labelbase,A2
000241F2 <AmiBlitz3.ab3@6296>     CMPA.w #$0,A2
000241F6 <AmiBlitz3.ab3@6297>      BEQ.w 'err
000241FE <AmiBlitz3.ab3@6298>     CMPI.l #$1,$4(A2)
00024202 <AmiBlitz3.ab3@6299>      BEQ.w 'skip
00024204 <AmiBlitz3.ab3@6300>     MOVEA.l (A2),A2
00024208 <AmiBlitz3.ab3@6301>  BRA.w 'loop
00024232 <AmiBlitz3.ab3@6305>   !basic
00024294 <AmiBlitz3.ab3@6306> 
000242B2 <AmiBlitz3.ab3@6307>   !asm
000242B4 <AmiBlitz3.ab3@6309>  RTS
000242F2 <AmiBlitz3.ab3@6314>   !ComData_GetL{comFunc_ASLFileRequest,A3}
000242F8 <AmiBlitz3.ab3@6315>   LEA str_residentrequester,A2
000242FE <AmiBlitz3.ab3@6316>   LEA str_residentpath,A0
00024304 <AmiBlitz3.ab3@6317>   LEA str_residentname,A1
0002432E <AmiBlitz3.ab3@6319>   !basic
00024366 <AmiBlitz3.ab3@6320>     Poke$ ?str_residentpath,my_residentsdir$
00024392 <AmiBlitz3.ab3@6321>     Poke$ ?str_residentname,".res"
000243B0 <AmiBlitz3.ab3@6322>   !asm
000243B2 <AmiBlitz3.ab3@6324>   JSR (A3)                                                 ;open ped filerequest
000243B6 <AmiBlitz3.ab3@6325>   BEQ.w 'err
000243B8 <AmiBlitz3.ab3@6329>   MOVE.l D0,D1
000243BE <AmiBlitz3.ab3@6330>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000243C2 <AmiBlitz3.ab3@6331>   MOVEA.l _dosbase(PC),A6
000243C6 <AmiBlitz3.ab3@6332>   JSR _Open(A6)
000243C8 <AmiBlitz3.ab3@6333>   MOVE.l D0,D7               ;handle                                ;handle
000243CC <AmiBlitz3.ab3@6334>   BEQ.w 'err
000243D0 <AmiBlitz3.ab3@6336>   MOVEM.l d2-d7/a0-a6,-(a7)
000243D6 <AmiBlitz3.ab3@6337>   LEA devo,a0
000243DC <AmiBlitz3.ab3@6338>   LEA ptr_parameterstore,a1
000243DE <AmiBlitz3.ab3@6341>     MOVE.b (a0)+,(a1)+
000243E2 <AmiBlitz3.ab3@6342>   BNE 'l1
000243E4 <AmiBlitz3.ab3@6343>   MOVEQ #13,d2
000243EA <AmiBlitz3.ab3@6344>   JSR findlabel2
000243EE <AmiBlitz3.ab3@6345>   BNE 'd
000243F2 <AmiBlitz3.ab3@6346>   TST.l 8(a2)
000243F6 <AmiBlitz3.ab3@6347>   BEQ 'd2
00024420 <AmiBlitz3.ab3@6348>   !basic
00024482 <AmiBlitz3.ab3@6349>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
000244A0 <AmiBlitz3.ab3@6350>   !asm
000244A4 <AmiBlitz3.ab3@6351>   MOVEM.l (a7)+,d2-d7/a0-a6
000244A8 <AmiBlitz3.ab3@6352>   MOVEA.l _dosbase(PC),A6
000244AA <AmiBlitz3.ab3@6353>   MOVE.l d7,d1
000244AE <AmiBlitz3.ab3@6354>   JSR _Close(a6)
000244B2 <AmiBlitz3.ab3@6355>  BRA 'err
000244B6 <AmiBlitz3.ab3@6359>   MOVEM.l (a7)+,d2-d7/a0-a6
000244BA <AmiBlitz3.ab3@6361>   BSR.w call_setpointerbusy
000244BE <AmiBlitz3.ab3@6363>   BSR.w killoffs
000244C0 <AmiBlitz3.ab3@6365>   MOVE.l D7,D1
000244C6 <AmiBlitz3.ab3@6366>   MOVE.l #tsthead,D2        ;header                               ;header
000244C8 <AmiBlitz3.ab3@6367>   MOVEQ.l #$20,D3
000244CC <AmiBlitz3.ab3@6368>   MOVEA.l _dosbase(PC),A6
000244D0 <AmiBlitz3.ab3@6369>   JSR _Write(A6)
000244D2 <AmiBlitz3.ab3@6371>   MOVEQ.l #$00,D6           ;offset from start of file!                               ;offset from start of file!
000244D6 <AmiBlitz3.ab3@6372>   BSR.w restypes
000244DA <AmiBlitz3.ab3@6373>   BSR.w resmacs
000244DE <AmiBlitz3.ab3@6374>   BSR.w resconsts
000244E0 <AmiBlitz3.ab3@6376>   MOVE.l D6,D3
000244E2 <AmiBlitz3.ab3@6377>   ADDQ.l #3,D3
000244E8 <AmiBlitz3.ab3@6378>   ANDI.l #$FFFFFFFC,D3      ;long word align                               ;long word align
000244EA <AmiBlitz3.ab3@6379>   MOVE.l D3,-(A7)
000244EC <AmiBlitz3.ab3@6380>   SUB.l D6,D3
000244F0 <AmiBlitz3.ab3@6381>   BEQ.w 'noalign
000244F6 <AmiBlitz3.ab3@6382>   MOVE.l #writelist,D2      ; was #hello,
000244F8 <AmiBlitz3.ab3@6383>   MOVE.l D7,D1
000244FE <AmiBlitz3.ab3@6384>   MOVEA.l _dosbase,A6
00024502 <AmiBlitz3.ab3@6385>   JSR _Write(A6)
0002450C <AmiBlitz3.ab3@6388>    MOVE.l hunkoffsetcounter,tstsize3
00024510 <AmiBlitz3.ab3@6389>    BEQ.w 'skip2a
00024512 <AmiBlitz3.ab3@6390>   MOVE.l D7,D1
00024518 <AmiBlitz3.ab3@6391>   MOVE.l #tstend,D2
0002451A <AmiBlitz3.ab3@6392>   MOVEQ.l #$0C,D3
00024520 <AmiBlitz3.ab3@6393>   MOVEA.l _dosbase,A6
00024524 <AmiBlitz3.ab3@6394>    JSR _Write(A6)
0002452A <AmiBlitz3.ab3@6398>   MOVEA.l hunkoffsetbase,A2
0002452E <AmiBlitz3.ab3@6401>   CMPA.w #$0,A2
00024532 <AmiBlitz3.ab3@6402>    BEQ.w 'skip2
00024536 <AmiBlitz3.ab3@6403>   LEA $4(A2),A1
00024538 <AmiBlitz3.ab3@6404>   MOVE.l D7,D1
0002453A <AmiBlitz3.ab3@6405>   MOVE.l A1,D2
0002453C <AmiBlitz3.ab3@6406>   MOVEQ.l #$04,D3
00024542 <AmiBlitz3.ab3@6407>   MOVEA.l _dosbase,A6
00024546 <AmiBlitz3.ab3@6408>    JSR _Write(A6)
00024548 <AmiBlitz3.ab3@6409>   MOVEA.l (A2),A2
0002454C <AmiBlitz3.ab3@6410>  BRA.w 'oloop
0002454E <AmiBlitz3.ab3@6413>   MOVE.l D7,D1
00024554 <AmiBlitz3.ab3@6414>   MOVE.l #zero,D2
00024556 <AmiBlitz3.ab3@6415>   MOVEQ.l #$04,D3
0002455C <AmiBlitz3.ab3@6416>   MOVEA.l _dosbase,A6
00024560 <AmiBlitz3.ab3@6417>   JSR _Write(A6)
00024562 <AmiBlitz3.ab3@6420>   MOVE.l D7,D1
00024568 <AmiBlitz3.ab3@6421>   MOVE.l #tstdone,D2
0002456A <AmiBlitz3.ab3@6422>   MOVEQ.l #$04,D3
00024570 <AmiBlitz3.ab3@6423>   MOVEA.l _dosbase,A6
00024574 <AmiBlitz3.ab3@6424>    JSR _Write(A6)
00024576 <AmiBlitz3.ab3@6425>   MOVE.l (A7)+,D0
00024578 <AmiBlitz3.ab3@6426>   LSR.l #2,D0
0002457E <AmiBlitz3.ab3@6427>   MOVE.l D0,temp1
00024580 <AmiBlitz3.ab3@6429>   MOVE.l D7,D1
00024582 <AmiBlitz3.ab3@6430>   MOVEQ.l #$14,D2
00024584 <AmiBlitz3.ab3@6431>   MOVEQ.l #-$01,D3
00024588 <AmiBlitz3.ab3@6432>   JSR _Seek(A6)
0002458A <AmiBlitz3.ab3@6433>   MOVE.l D7,D1
00024590 <AmiBlitz3.ab3@6434>   MOVE.l #temp1,D2
00024592 <AmiBlitz3.ab3@6435>   MOVEQ.l #$04,D3
00024596 <AmiBlitz3.ab3@6436>    JSR _Write(A6)
00024598 <AmiBlitz3.ab3@6437>   MOVE.l D7,D1
0002459A <AmiBlitz3.ab3@6438>   MOVEQ.l #$1C,D2
0002459C <AmiBlitz3.ab3@6439>   MOVEQ.l #-$01,D3
000245A0 <AmiBlitz3.ab3@6440>    JSR _Seek(A6)
000245A2 <AmiBlitz3.ab3@6441>   MOVE.l D7,D1
000245A8 <AmiBlitz3.ab3@6442>   MOVE.l #temp1,D2
000245AA <AmiBlitz3.ab3@6443>   MOVEQ.l #$04,D3
000245AE <AmiBlitz3.ab3@6444>    JSR _Write(A6)
000245B0 <AmiBlitz3.ab3@6446>   MOVE.l D7,D1
000245B4 <AmiBlitz3.ab3@6447>    JSR _Close(A6)
000245B8 <AmiBlitz3.ab3@6448> BRA.w call_setpointernormal
000245BA <AmiBlitz3.ab3@6454>   ADDQ.w #5,D1
000245BC <AmiBlitz3.ab3@6455>   ADDQ.b #8,D0
000245C0 <AmiBlitz3.ab3@6459>     CMPA.w #$0,A2
000245C4 <AmiBlitz3.ab3@6460>     BEQ.w 'done
000245C8 <AmiBlitz3.ab3@6461>      BSR.w writeitem
000245CA <AmiBlitz3.ab3@6462>     MOVEA.l (A2),A2
000245CE <AmiBlitz3.ab3@6463>  BRA.w 'loop
000245D0 <AmiBlitz3.ab3@6466> RTS
000245D2 <AmiBlitz3.ab3@6470>   MOVEQ.l #$00,D3
000245D6 <AmiBlitz3.ab3@6471>   MOVE.b $0(A2,D5.W),D3
000245D8 <AmiBlitz3.ab3@6472>   ADDQ.w #1,D3
000245DC <AmiBlitz3.ab3@6473>   BCLR #$0,D3                                              ;word align
000245DE <AmiBlitz3.ab3@6474>   MOVE.l (A2),-(A7)
000245E2 <AmiBlitz3.ab3@6475>    BEQ.w 'skip
000245E6 <AmiBlitz3.ab3@6476>    BSR.w 'resoff
000245E8 <AmiBlitz3.ab3@6477>   ADD.l D3,D6
000245EA <AmiBlitz3.ab3@6478>   MOVE.l D6,(A2)
000245EC <AmiBlitz3.ab3@6479>   SUB.l D3,D6
000245EE <AmiBlitz3.ab3@6482>    ADD.l D3,D6
000245F0 <AmiBlitz3.ab3@6483>   MOVE.l A2,D2
000245F2 <AmiBlitz3.ab3@6484>   MOVE.l D7,D1
000245F8 <AmiBlitz3.ab3@6485>   MOVEA.l _dosbase,A6
000245FC <AmiBlitz3.ab3@6486>    JSR _Write(A6)
000245FE <AmiBlitz3.ab3@6487>   MOVE.l (A7)+,(A2)
00024600 <AmiBlitz3.ab3@6488>  RTS
00024602 <AmiBlitz3.ab3@6491>   MOVE.l D6,D2
00024606 <AmiBlitz3.ab3@6492> BRA.w addhunkoffset
0002460A <AmiBlitz3.ab3@6499>     CMPA.w #$0,A2
0002460E <AmiBlitz3.ab3@6500>      BEQ.w 'done
00024614 <AmiBlitz3.ab3@6501>     MOVEA.l newtypebase,A1
00024616 <AmiBlitz3.ab3@6502>     MOVEQ.l #$00,D1
0002461A <AmiBlitz3.ab3@6505>       CMPA.w #$0,A1
0002461E <AmiBlitz3.ab3@6506>       BEQ.w 'found
00024622 <AmiBlitz3.ab3@6507>       CMPA.l $A(A2),A1
00024626 <AmiBlitz3.ab3@6508>        BEQ.w 'found
00024628 <AmiBlitz3.ab3@6509>       ADDQ.w #1,D1
0002462A <AmiBlitz3.ab3@6510>       MOVEA.l (A1),A1
0002462E <AmiBlitz3.ab3@6511>  BRA.w 'loop2
00024632 <AmiBlitz3.ab3@6514>     MOVE.w $A(A2),-(A7)
00024636 <AmiBlitz3.ab3@6515>     MOVE.w D1,$A(A2)
0002463A <AmiBlitz3.ab3@6516>      BSR.w writeitem
0002463E <AmiBlitz3.ab3@6517>     MOVE.w (A7)+,$A(A2)
00024640 <AmiBlitz3.ab3@6518>     MOVEA.l (A2),A2
00024644 <AmiBlitz3.ab3@6519>  BRA.w 'loop
00024646 <AmiBlitz3.ab3@6522> RTS
00024648 <AmiBlitz3.ab3@6526>   MOVEQ.l #$00,D0
0002464C <AmiBlitz3.ab3@6529>   CMPA.w #$0,A2
00024650 <AmiBlitz3.ab3@6530>    BEQ.w 'done
00024652 <AmiBlitz3.ab3@6531>   ADDQ.w #1,D0
00024654 <AmiBlitz3.ab3@6532>   MOVEA.l (A2),A2
00024658 <AmiBlitz3.ab3@6533>  BRA.w 'loop
0002465E <AmiBlitz3.ab3@6536>   MOVE.w D0,temp1
00024660 <AmiBlitz3.ab3@6537>   MOVE.l D7,D1
00024666 <AmiBlitz3.ab3@6538>   MOVE.l #temp1,D2
00024668 <AmiBlitz3.ab3@6539>   MOVEQ.l #$02,D3
0002466A <AmiBlitz3.ab3@6540>   ADDQ.l #2,D6
00024670 <AmiBlitz3.ab3@6541>   MOVEA.l _dosbase,A6
00024674 <AmiBlitz3.ab3@6542> JMP _Write(A6)
0002467A <AmiBlitz3.ab3@6549>    TST.b resdisable
0002467E <AmiBlitz3.ab3@6550>    BEQ 'l1
00024684 <AmiBlitz3.ab3@6551>    MOVE.l currentmacroaddr,a3
0002468A <AmiBlitz3.ab3@6552>    CMP.l #0,a3
0002468E <AmiBlitz3.ab3@6553>    BEQ 'l1
00024690 <AmiBlitz3.ab3@6554>    MOVE.l (a3),a3
00024694 <AmiBlitz3.ab3@6555>  BRA 'l2
0002469A <AmiBlitz3.ab3@6559>   MOVEA.l macrobase,A3                                     ;??begin org code??
0002469C <AmiBlitz3.ab3@6562>   MOVEA.l A3,A2
000246A0 <AmiBlitz3.ab3@6563>   BSR.w countem
000246A4 <AmiBlitz3.ab3@6566>    CMPA.w #$0,A3
000246A8 <AmiBlitz3.ab3@6567>    BEQ.w 'done
000246AA <AmiBlitz3.ab3@6568>   MOVE.l D6,D5
000246AC <AmiBlitz3.ab3@6569>   MOVE.l (A3),-(A7)
000246B0 <AmiBlitz3.ab3@6570>   MOVE.l $4(A3),-(A7)
000246B2 <AmiBlitz3.ab3@6571>   MOVEQ.l #$00,D3
000246B6 <AmiBlitz3.ab3@6572>   MOVE.b $C(A3),D3
000246B8 <AmiBlitz3.ab3@6573>   ADDQ.w #1,D3
000246BC <AmiBlitz3.ab3@6574>   BCLR #$0,D3
000246BE <AmiBlitz3.ab3@6575>   ADD.l D3,D6                                              ;add len of struct
000246C2 <AmiBlitz3.ab3@6576>   TST.w $8(A3)
000246C6 <AmiBlitz3.ab3@6577>    BEQ.w 'notext
000246CA <AmiBlitz3.ab3@6578>   MOVE.l D6,$4(A3)
000246CC <AmiBlitz3.ab3@6579>   MOVE.l D5,D2
000246CE <AmiBlitz3.ab3@6580>   ADDQ.l #4,D2
000246D2 <AmiBlitz3.ab3@6581>    BSR.w addhunkoffset
000246D4 <AmiBlitz3.ab3@6584>   MOVEQ.l #$00,D4
000246D8 <AmiBlitz3.ab3@6585>   MOVE.w $8(A3),D4
000246DA <AmiBlitz3.ab3@6586>   ADDQ.w #1,D4
000246DE <AmiBlitz3.ab3@6587>   BCLR #$0,D4
000246E0 <AmiBlitz3.ab3@6588>   ADD.l D4,D6
000246E2 <AmiBlitz3.ab3@6589>   TST.l (A3)
000246E6 <AmiBlitz3.ab3@6590>    BEQ.w 'nomore
000246E8 <AmiBlitz3.ab3@6591>   MOVE.l D6,(A3)
000246EA <AmiBlitz3.ab3@6592>   MOVE.l D5,D2
000246EE <AmiBlitz3.ab3@6593>    BSR.w addhunkoffset
000246F0 <AmiBlitz3.ab3@6596>   MOVE.l A3,D2
000246F2 <AmiBlitz3.ab3@6597>   MOVE.l D7,D1
000246F8 <AmiBlitz3.ab3@6598>    MOVEA.l _dosbase,A6
000246FC <AmiBlitz3.ab3@6599>    JSR _Write(a6)
000246FE <AmiBlitz3.ab3@6600>   TST.l D4
00024702 <AmiBlitz3.ab3@6601>    BEQ.w 'skip
00024704 <AmiBlitz3.ab3@6602>   MOVE.l (A7),D2
00024706 <AmiBlitz3.ab3@6603>   MOVE.l D4,D3
00024708 <AmiBlitz3.ab3@6604>   MOVE.l D7,D1
0002470E <AmiBlitz3.ab3@6605>     MOVEA.l _dosbase,A6
00024712 <AmiBlitz3.ab3@6606>    JSR _Write(A6)
00024716 <AmiBlitz3.ab3@6609>   MOVE.l (A7)+,$4(A3)
00024718 <AmiBlitz3.ab3@6610>   MOVE.l (A7)+,(A3)
0002471A <AmiBlitz3.ab3@6611>   MOVEA.l (A3),A3
0002471E <AmiBlitz3.ab3@6612>  BRA.w 'loop
00024720 <AmiBlitz3.ab3@6615> RTS
00024726 <AmiBlitz3.ab3@6620>   TST.b resdisable
0002472A <AmiBlitz3.ab3@6621>   BEQ 'l1
00024730 <AmiBlitz3.ab3@6622>   MOVE.l lastrestype,a3
00024736 <AmiBlitz3.ab3@6623>   CMP.l #0,a3
0002473A <AmiBlitz3.ab3@6624>   BEQ 'l1
0002473C <AmiBlitz3.ab3@6625>   MOVE.l (a3),a3
00024740 <AmiBlitz3.ab3@6626>  BRA 'l2
00024746 <AmiBlitz3.ab3@6630>   MOVEA.l newtype_string,A3
00024748 <AmiBlitz3.ab3@6633>   MOVEA.l A3,A2
0002474C <AmiBlitz3.ab3@6634>    BSR.w countem
00024750 <AmiBlitz3.ab3@6637>    CMPA.w #$0,A3
00024754 <AmiBlitz3.ab3@6638>    BEQ.w 'done
00024756 <AmiBlitz3.ab3@6639>   MOVE.l D6,-(A7)
0002475A <AmiBlitz3.ab3@6640>   MOVEA.l $4(A3),A2
0002475C <AmiBlitz3.ab3@6641>   MOVEQ.l #$0E,D5
00024760 <AmiBlitz3.ab3@6642>    BSR.w writeoffs
00024762 <AmiBlitz3.ab3@6644>   MOVE.l (A7)+,D0
00024766 <AmiBlitz3.ab3@6645>   MOVE.l $4(A3),-(A7)
0002476A <AmiBlitz3.ab3@6646>   MOVE.l D0,$4(A3)
0002476C <AmiBlitz3.ab3@6647>   MOVE.l D6,D2
0002476E <AmiBlitz3.ab3@6648>   ADDQ.l #4,D2
00024772 <AmiBlitz3.ab3@6649>    BSR.w addhunkoffset
00024774 <AmiBlitz3.ab3@6650>   MOVEQ.l #$00,D3
00024778 <AmiBlitz3.ab3@6651>   MOVE.b $A(A3),D3
0002477A <AmiBlitz3.ab3@6652>   ADDQ.w #1,D3
0002477E <AmiBlitz3.ab3@6653>   BCLR #$0,D3
00024780 <AmiBlitz3.ab3@6654>   ADD.l D3,D6
00024782 <AmiBlitz3.ab3@6655>   MOVE.l A3,D2
00024784 <AmiBlitz3.ab3@6656>   MOVE.l D7,D1
0002478A <AmiBlitz3.ab3@6657>     MOVEA.l _dosbase,A6
0002478E <AmiBlitz3.ab3@6658>     JSR _Write(A6)
00024792 <AmiBlitz3.ab3@6659>   MOVE.l (A7)+,$4(A3)
00024794 <AmiBlitz3.ab3@6660>   MOVEA.l (A3),A3
00024798 <AmiBlitz3.ab3@6661>  BRA.w 'loop
0002479A <AmiBlitz3.ab3@6664> RTS
000247A0 <AmiBlitz3.ab3@6669>    TST.b resdisable
000247A4 <AmiBlitz3.ab3@6670>    BEQ 'l1
000247AA <AmiBlitz3.ab3@6671>    MOVE.l currentlabeladdr,a2
000247B0 <AmiBlitz3.ab3@6672>    CMP.l #0,a2
000247B4 <AmiBlitz3.ab3@6673>    BEQ 'l1
000247B6 <AmiBlitz3.ab3@6674>    MOVE.l (a2),a2
000247BA <AmiBlitz3.ab3@6675>  BRA 'l2
000247C0 <AmiBlitz3.ab3@6679>    MOVEA.l labelbase,A2
000247C2 <AmiBlitz3.ab3@6682>    MOVEQ.l #$00,D0
000247C6 <AmiBlitz3.ab3@6685>    CMPA.w #$0,A2
000247CA <AmiBlitz3.ab3@6686>    BEQ.w 'done
000247D2 <AmiBlitz3.ab3@6687>   CMPI.l #$1,$4(A2)
000247D6 <AmiBlitz3.ab3@6688>    BNE.w 'next
000247D8 <AmiBlitz3.ab3@6689>   ADDQ.w #1,D0
000247DA <AmiBlitz3.ab3@6692>   MOVEA.l (A2),A2
000247DE <AmiBlitz3.ab3@6693>  BRA.w 'loop
000247E4 <AmiBlitz3.ab3@6696>   MOVE.w D0,temp1
000247E6 <AmiBlitz3.ab3@6697>   MOVE.l D7,D1
000247EC <AmiBlitz3.ab3@6698>   MOVE.l #temp1,D2
000247EE <AmiBlitz3.ab3@6699>   MOVEQ.l #$02,D3
000247F0 <AmiBlitz3.ab3@6700>   ADDQ.l #2,D6
000247F6 <AmiBlitz3.ab3@6701>     MOVEA.l _dosbase,A6
000247FA <AmiBlitz3.ab3@6702>     JSR _Write(A6)
00024800 <AmiBlitz3.ab3@6704>    TST.b resdisable
00024804 <AmiBlitz3.ab3@6705>    BEQ 'done_l1
0002480A <AmiBlitz3.ab3@6706>    MOVE.l currentlabeladdr,a2
00024810 <AmiBlitz3.ab3@6707>    CMP.l #0,a2
00024814 <AmiBlitz3.ab3@6708>    BEQ 'done_l1
00024816 <AmiBlitz3.ab3@6709>    MOVE.l (a2),a2
0002481A <AmiBlitz3.ab3@6710>  BRA 'loop2
00024820 <AmiBlitz3.ab3@6714>    MOVEA.l labelbase,A2                                    ;write resident labels
00024824 <AmiBlitz3.ab3@6717>    CMPA.w #$0,A2
00024828 <AmiBlitz3.ab3@6718>    BEQ.w 'done2
00024830 <AmiBlitz3.ab3@6719>   CMPI.l #$1,$4(A2)
00024834 <AmiBlitz3.ab3@6720>    BNE.w 'next2
00024836 <AmiBlitz3.ab3@6721>    MOVEQ.l #$00,D3
0002483A <AmiBlitz3.ab3@6722>   MOVE.b $12(A2),D3                                        ;length
0002483C <AmiBlitz3.ab3@6723>   ADDQ.w #1,D3
00024840 <AmiBlitz3.ab3@6724>   BCLR #$0,D3
00024842 <AmiBlitz3.ab3@6725>   MOVE.l D6,D2
00024844 <AmiBlitz3.ab3@6726>   ADD.l D3,D6
00024846 <AmiBlitz3.ab3@6727>   MOVE.l (A2),-(A7)
00024848 <AmiBlitz3.ab3@6728>   TST.l (A2)
0002484C <AmiBlitz3.ab3@6729>    BEQ.w 'nonext
0002484E <AmiBlitz3.ab3@6730>   MOVE.l D6,(A2)
00024852 <AmiBlitz3.ab3@6731>    BSR.w addhunkoffset
00024854 <AmiBlitz3.ab3@6734>   MOVE.l A2,D2
00024856 <AmiBlitz3.ab3@6735>   MOVE.l D7,D1
0002485C <AmiBlitz3.ab3@6736>     MOVEA.l _dosbase,A6
00024860 <AmiBlitz3.ab3@6737>     JSR _Write(A6)
00024862 <AmiBlitz3.ab3@6738>   MOVE.l (A7)+,(A2)
00024864 <AmiBlitz3.ab3@6741>   MOVEA.l (A2),A2
00024868 <AmiBlitz3.ab3@6742>  BRA.w 'loop2
0002486A <AmiBlitz3.ab3@6745> RTS
00024894 <AmiBlitz3.ab3@6750>    !basic
0002489A <AmiBlitz3.ab3@6751>     MOVE.l ptr_resfile,d0
000248AA <AmiBlitz3.ab3@6752>     resfileP.l = Peek.l(?ptr_resfile)
000248B4 <AmiBlitz3.ab3@6753>     If resfileP
000248DC <AmiBlitz3.ab3@6754>       resfile$ = Peek.s(resfileP)
00024928 <AmiBlitz3.ab3@6755>       tests.b = Instr(resfile$,"/")
00024974 <AmiBlitz3.ab3@6756>       testc.b = Instr(resfile$,":")
00024996 <AmiBlitz3.ab3@6757>       If tests=0 AND testc=0
00024A16 <AmiBlitz3.ab3@6758>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024A28 <AmiBlitz3.ab3@6759>         Poke.l ?ptr_resfile,&resfile$
00024A2E <AmiBlitz3.ab3@6761>     Else
00024A68 <AmiBlitz3.ab3@6762>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
00024A86 <AmiBlitz3.ab3@6764>    !asm
00024A88 <AmiBlitz3.ab3@6765> RTS
00024A8E <AmiBlitz3.ab3@6772> 
00024A94 <AmiBlitz3.ab3@6773>   MOVE.l A7,errstack
00024A9E <AmiBlitz3.ab3@6777>   MOVE.l #'next,errcont
00024AA6 <AmiBlitz3.ab3@6778>   MOVE.w #$FFFF,ezerr         ; was -1
00024AAA <AmiBlitz3.ab3@6780>   BSR.w Aclearallvars
00024AAE <AmiBlitz3.ab3@6781>   BSR.w free_residents
00024AB4 <AmiBlitz3.ab3@6783>   LEA residents_table,A5
00024AB6 <AmiBlitz3.ab3@6784>   MOVEQ.l #$07,D6
00024AB8 <AmiBlitz3.ab3@6787>     TST.b (A5)
00024ABC <AmiBlitz3.ab3@6788>     BEQ.w 'next
00024AC2 <AmiBlitz3.ab3@6789>     MOVE.l A5,ptr_resfile
00024AC6 <AmiBlitz3.ab3@6790>     BSR check_residentpath
00024ACC <AmiBlitz3.ab3@6791>     MOVE.l ptr_resfile,d1
00024AD2 <AmiBlitz3.ab3@6792>     MOVEA.l _dosbase,A6
00024AD6 <AmiBlitz3.ab3@6793>     JSR _LoadSeg(A6)
00024ADA <AmiBlitz3.ab3@6794>     MOVE.l D0,$40(A5)
00024ADE <AmiBlitz3.ab3@6795>     BNE.w 'yeah
00024AE2 <AmiBlitz3.ab3@6797>     BSR.w reserr
00024AE4 <AmiBlitz3.ab3@6801>     MOVEA.l D0,A3
00024AE6 <AmiBlitz3.ab3@6802>     ADDA.l A3,A3
00024AE8 <AmiBlitz3.ab3@6803>     ADDA.l A3,A3
00024AEA <AmiBlitz3.ab3@6804>     ADDQ.w #4,A3                                           ;start of res
00024AEE <AmiBlitz3.ab3@6806>     BSR.w fixtypes
00024AF2 <AmiBlitz3.ab3@6807>     BSR.w fixmacs                                        ;add macros to list
00024AF6 <AmiBlitz3.ab3@6808>     BSR.w fixconsts                                        ;read labels
00024AFA <AmiBlitz3.ab3@6811>     LEA ResidentEntryStep(A5),A5       ;$44
00024AFE <AmiBlitz3.ab3@6812>   DBF D6,'loop
00024B08 <AmiBlitz3.ab3@6817>   MOVE.l #free_residents,errcont
00024B0E <AmiBlitz3.ab3@6819>   MOVEA.l newtype_string,A3
00024B10 <AmiBlitz3.ab3@6820>   MOVEQ.l #$0B,D7
00024B14 <AmiBlitz3.ab3@6821>   BSR.w checkclash
00024B1A <AmiBlitz3.ab3@6823>   MOVEA.l macrobase,A3
00024B1C <AmiBlitz3.ab3@6824>   MOVEQ.l #$d,D7
00024B20 <AmiBlitz3.ab3@6825>   BSR.w checkclash
00024B26 <AmiBlitz3.ab3@6827>   MOVEA.l firstconst,A3
00024B28 <AmiBlitz3.ab3@6828>   MOVEQ.l #$19,D7
00024B2C <AmiBlitz3.ab3@6829>   BSR.w checkclash
00024B2E <AmiBlitz3.ab3@6832> RTS
00024B30 <AmiBlitz3.ab3@6836>   MOVEA.l A3,A4
00024B34 <AmiBlitz3.ab3@6839>     CMPA.w #$0,A4
00024B38 <AmiBlitz3.ab3@6840>     BEQ.w 'done
00024B3E <AmiBlitz3.ab3@6842>     LEA ptr_parameterstore,A0
00024B42 <AmiBlitz3.ab3@6843>     LEA $0(A4,D7.W),A1
00024B44 <AmiBlitz3.ab3@6844>     MOVEQ.l #-$01,D2
00024B46 <AmiBlitz3.ab3@6847>       ADDQ.w #1,D2
00024B48 <AmiBlitz3.ab3@6848>       MOVE.b (A1)+,(A0)+
00024B4C <AmiBlitz3.ab3@6849>     BNE.w 'loop2
00024B4E <AmiBlitz3.ab3@6850>     MOVEA.l A3,A2
00024B52 <AmiBlitz3.ab3@6853>     BSR.w findlab
00024B56 <AmiBlitz3.ab3@6854>     BNE.w 'next                                  ;not found
00024B58 <AmiBlitz3.ab3@6855>     CMPA.l A2,A4
00024B5C <AmiBlitz3.ab3@6857>     BEQ.w 'l1
00024B5E <AmiBlitz3.ab3@6858>     MOVE.l a1,a5
00024B62 <AmiBlitz3.ab3@6860>  BRA clasherr      ; was bne
00024B66 <AmiBlitz3.ab3@6863>  BRA.w 'more
00024B68 <AmiBlitz3.ab3@6866>     MOVEA.l (A4),A4
00024B6C <AmiBlitz3.ab3@6867>  BRA.w 'loop
00024B6E <AmiBlitz3.ab3@6870> RTS
00024B74 <AmiBlitz3.ab3@6874>   MOVEA.l _dosbase,A6
00024B7A <AmiBlitz3.ab3@6876>   LEA newtype_string,A0
00024B80 <AmiBlitz3.ab3@6877>   MOVE.l A0,lastrestype
00024B82 <AmiBlitz3.ab3@6878>   CLR.l (A0)
00024B88 <AmiBlitz3.ab3@6880>   LEA macrobase,A0
00024B8E <AmiBlitz3.ab3@6881>   MOVE.l A0,currentmacroaddr
00024B90 <AmiBlitz3.ab3@6882>   CLR.l (A0)
00024B96 <AmiBlitz3.ab3@6884>   LEA labelbase,A0
00024B9C <AmiBlitz3.ab3@6885>   MOVE.l A0,currentlabeladdr
00024B9E <AmiBlitz3.ab3@6886>   CLR.l (A0)
00024BA4 <AmiBlitz3.ab3@6887>   CLR.w rescnt
00024BDC <AmiBlitz3.ab3@6891>   !ComData_SetB{comByte_DebugMode,debugmode}
00024BE2 <AmiBlitz3.ab3@6894>   LEA residents_table,A2
00024BE4 <AmiBlitz3.ab3@6895>   MOVEQ.l #$07,D2
00024BE8 <AmiBlitz3.ab3@6898>      MOVE.l $40(A2),D1
00024BEC <AmiBlitz3.ab3@6899>      BEQ.w 'next
00024BF0 <AmiBlitz3.ab3@6900>       CLR.l $40(A2)
00024BF6 <AmiBlitz3.ab3@6901>       MOVEA.l _dosbase,A6
00024BFA <AmiBlitz3.ab3@6902>       JSR _UnLoadSeg(A6)
00024BFE <AmiBlitz3.ab3@6905>      LEA ResidentEntryStep(A2),A2   ; $44
00024C02 <AmiBlitz3.ab3@6906>  DBF D2,'loop
00024C04 <AmiBlitz3.ab3@6908> RTS
00024C06 <AmiBlitz3.ab3@6912>   MOVE.w (A3)+,D1
00024C0A <AmiBlitz3.ab3@6913>   BEQ.w 'done
00024C10 <AmiBlitz3.ab3@6914>   MOVEA.l currentlabeladdr,A2
00024C12 <AmiBlitz3.ab3@6915>   MOVE.l A3,(A2)
00024C14 <AmiBlitz3.ab3@6916>   SUBQ.w #1,D1
00024C16 <AmiBlitz3.ab3@6919>     MOVEA.l A3,A2
00024C18 <AmiBlitz3.ab3@6920>     MOVEA.l (A3),A3
00024C1C <AmiBlitz3.ab3@6921>   DBF D1,'loop
00024C1E <AmiBlitz3.ab3@6924>   CLR.l (a2)                                               ;bugfix for object
00024C24 <AmiBlitz3.ab3@6926>   MOVE.l A2,currentlabeladdr
00024C26 <AmiBlitz3.ab3@6927>   MOVEA.l A2,A3
00024C28 <AmiBlitz3.ab3@6928>   MOVEQ.l #$00,D0
00024C2C <AmiBlitz3.ab3@6929>   MOVE.b $12(A3),D0
00024C2E <AmiBlitz3.ab3@6930>   ADDQ.w #1,D0
00024C32 <AmiBlitz3.ab3@6931>   BCLR #$0,D0
00024C34 <AmiBlitz3.ab3@6932>   ADDA.w D0,A3
00024C36 <AmiBlitz3.ab3@6935> RTS
00024C38 <AmiBlitz3.ab3@6939>   MOVE.w (A3)+,D1
00024C3C <AmiBlitz3.ab3@6940>   BEQ.w 'done
00024C42 <AmiBlitz3.ab3@6941>   MOVEA.l currentmacroaddr,A2
00024C44 <AmiBlitz3.ab3@6942>   MOVE.l A3,(A2)
00024C46 <AmiBlitz3.ab3@6943>   SUBQ.w #1,D1
00024C48 <AmiBlitz3.ab3@6946>     MOVEA.l A3,A2
00024C4A <AmiBlitz3.ab3@6947>     MOVEA.l (A3),A3
00024C4E <AmiBlitz3.ab3@6948>   DBF D1,'loop
00024C54 <AmiBlitz3.ab3@6950>   MOVE.l A2,currentmacroaddr
00024C56 <AmiBlitz3.ab3@6951>   MOVEA.l A2,A3
00024C58 <AmiBlitz3.ab3@6952>   MOVEQ.l #$00,D0
00024C5C <AmiBlitz3.ab3@6953>   MOVE.b $C(A3),D0
00024C5E <AmiBlitz3.ab3@6954>   ADDQ.w #1,D0
00024C62 <AmiBlitz3.ab3@6955>   BCLR #$0,D0
00024C66 <AmiBlitz3.ab3@6956>   MOVE.w $8(A3),D1
00024C68 <AmiBlitz3.ab3@6957>   ADDQ.w #1,D1
00024C6C <AmiBlitz3.ab3@6958>   BCLR #$0,D1
00024C6E <AmiBlitz3.ab3@6959>   ADDA.w D0,A3
00024C70 <AmiBlitz3.ab3@6960>   ADDA.w D1,A3
00024C72 <AmiBlitz3.ab3@6963> RTS
00024C74 <AmiBlitz3.ab3@6968>   MOVE.w (A3)+,D1            ;number of types to do
00024C78 <AmiBlitz3.ab3@6969>   BEQ.w 'done
00024C7A <AmiBlitz3.ab3@6970>   MOVE.w D1,-(A7)
00024C7C <AmiBlitz3.ab3@6971>   SUBQ.w #1,D1
00024C82 <AmiBlitz3.ab3@6972>   MOVEA.l lastrestype,A2
00024C84 <AmiBlitz3.ab3@6973>   MOVE.l A2,-(A7)
00024C86 <AmiBlitz3.ab3@6976>       MOVE.l (A3),D0          ;skip through offsets
00024C8A <AmiBlitz3.ab3@6977>       BEQ.w 'loopme
00024C8C <AmiBlitz3.ab3@6978>       MOVEA.l D0,A3
00024C90 <AmiBlitz3.ab3@6979>  BRA.w 'loop
00024C94 <AmiBlitz3.ab3@6982>       MOVE.b $E(A3),D0
00024C96 <AmiBlitz3.ab3@6983>       ADDQ.w #1,D0
00024C9A <AmiBlitz3.ab3@6984>       BCLR #$0,D0
00024C9C <AmiBlitz3.ab3@6985>       ADDA.w D0,A3            ;a3=type
00024C9E <AmiBlitz3.ab3@6986>       MOVE.l A3,(A2)          ;link
00024CA0 <AmiBlitz3.ab3@6987>       MOVEA.l A3,A2
00024CA2 <AmiBlitz3.ab3@6988>       MOVEQ.l #$00,D0
00024CA6 <AmiBlitz3.ab3@6989>       MOVE.b $A(A3),D0
00024CA8 <AmiBlitz3.ab3@6990>       ADDQ.w #1,D0
00024CAC <AmiBlitz3.ab3@6991>       BCLR #$0,D0
00024CAE <AmiBlitz3.ab3@6992>       ADDA.w D0,A3            ;next offset
00024CB2 <AmiBlitz3.ab3@6993>   DBF D1,'loop
00024CB4 <AmiBlitz3.ab3@6997>   MOVEA.l (A7)+,A0
00024CB6 <AmiBlitz3.ab3@6998>   MOVEA.l (A0),A0
00024CBA <AmiBlitz3.ab3@7001>     CMPA.w #$0,A0
00024CBE <AmiBlitz3.ab3@7002>     BEQ.w 'fdone
00024CC2 <AmiBlitz3.ab3@7003>     MOVEA.l $4(A0),A1          ;first offset!
00024CC6 <AmiBlitz3.ab3@7006>     CMPA.w #$0,A1
00024CCA <AmiBlitz3.ab3@7007>     BEQ.w 'fofd
00024CCE <AmiBlitz3.ab3@7009>     MOVE.w $A(A1),D0           ;number of type
00024CD4 <AmiBlitz3.ab3@7010>     MOVEA.l newtypebase,A4
00024CD8 <AmiBlitz3.ab3@7011>     CMP.w #$7,D0
00024CDC <AmiBlitz3.ab3@7012>     BCS.w 'fsys
00024CE2 <AmiBlitz3.ab3@7013>     SUB.w rescnt,D0
00024CE4 <AmiBlitz3.ab3@7016>     SUBQ.w #1,D0
00024CE8 <AmiBlitz3.ab3@7017>     BMI.w 'fdone2
00024CEA <AmiBlitz3.ab3@7020>        MOVEA.l (A4),A4
00024CEE <AmiBlitz3.ab3@7021>   DBF D0,'floop3
00024CF2 <AmiBlitz3.ab3@7024>     MOVE.l A4,$A(A1)
00024CF4 <AmiBlitz3.ab3@7025>     MOVEA.l (A1),A1
00024CF8 <AmiBlitz3.ab3@7026>  BRA.w 'floop2
00024CFA <AmiBlitz3.ab3@7029>     MOVEA.l (A0),A0
00024CFE <AmiBlitz3.ab3@7030>  BRA.w 'floop
00024D00 <AmiBlitz3.ab3@7033>   MOVE.w (A7)+,D0
00024D06 <AmiBlitz3.ab3@7034>   ADD.w D0,rescnt
00024D0C <AmiBlitz3.ab3@7035>   MOVE.l A2,lastrestype
00024D0E <AmiBlitz3.ab3@7038> RTS
00024D14 <AmiBlitz3.ab3@7045>   LEA tokens,A0
00024D18 <AmiBlitz3.ab3@7046>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024D1A <AmiBlitz3.ab3@7049>     MOVEA.l (A0),A0
00024D1E <AmiBlitz3.ab3@7050>   DBF D0,'loop
00024D24 <AmiBlitz3.ab3@7052>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024D28 <AmiBlitz3.ab3@7053>   MOVE.w #$0076,D0        ; was #tnum-fnum-1,                                 ; $0076 : 118 dec
00024D2C <AmiBlitz3.ab3@7056>       LEA $6(A0),A2
00024D2E <AmiBlitz3.ab3@7059>         TST.b (A2)+
00024D32 <AmiBlitz3.ab3@7060>       BNE.w 'loop3
00024D34 <AmiBlitz3.ab3@7063>         TST.b (A2)+
00024D38 <AmiBlitz3.ab3@7064>       BNE.w 'loop4
00024D3A <AmiBlitz3.ab3@7066>       ADDQ.w #1,A2
00024D3C <AmiBlitz3.ab3@7067>       EXG.l D1,A2
00024D40 <AmiBlitz3.ab3@7068>       BCLR #$0,D1
00024D42 <AmiBlitz3.ab3@7069>       EXG.l D1,A2
00024D44 <AmiBlitz3.ab3@7070>       MOVE.l A2,(A1)+
00024D46 <AmiBlitz3.ab3@7071>       MOVEA.l (A0),A0
00024D4A <AmiBlitz3.ab3@7072>   DBF D0,'loop2
00024D4C <AmiBlitz3.ab3@7073> RTS
00024D50 <AmiBlitz3.ab3@7077>   BSR.w asmconst
00024D52 <AmiBlitz3.ab3@7078>   MOVEQ.l #$0B,D5
00024D54 <AmiBlitz3.ab3@7079> RTS
00024D56 <AmiBlitz3.ab3@7082> unmove:  Ds.w 1
00024D5A <AmiBlitz3.ab3@7086>   MOVE.w #$48E7,D1
00024D5E <AmiBlitz3.ab3@7087>   BSR.w writeword                                          ;movem.l -(a7)
00024D62 <AmiBlitz3.ab3@7088>   MOVE.w #$000F,D2
00024D64 <AmiBlitz3.ab3@7089>   SUB.w D4,D2
00024D66 <AmiBlitz3.ab3@7090>   MOVEQ.l #-$01,D1
00024D68 <AmiBlitz3.ab3@7091>   BCLR D2,D1
00024D6C <AmiBlitz3.ab3@7092>   BSR.w writeword
00024D6E <AmiBlitz3.ab3@7093>   MOVEQ.l #-$01,D1
00024D70 <AmiBlitz3.ab3@7094>   BCLR D4,D1
00024D76 <AmiBlitz3.ab3@7095>   MOVE.w D1,unmove
00024D78 <AmiBlitz3.ab3@7096> RTS
00024D7C <AmiBlitz3.ab3@7100>   MOVE.w #$4CDF,D1
00024D80 <AmiBlitz3.ab3@7101>   BSR.w writeword
00024D84 <AmiBlitz3.ab3@7102>   MOVE.w unmove(PC),D1
00024D88 <AmiBlitz3.ab3@7103>  BRA.w writeword
00024D8C <AmiBlitz3.ab3@7116>   BSR.w get_reg2
00024D90 <AmiBlitz3.ab3@7117>   CMP.w #$2C,D0                                            ;#','
00024D94 <AmiBlitz3.ab3@7118>    BNE.w syntaxerr
00024D9A <AmiBlitz3.ab3@7119>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024D9E <AmiBlitz3.ab3@7120>    BSR.w writelong
00024DA0 <AmiBlitz3.ab3@7121>   MOVE.w D4,D1
00024DA4 <AmiBlitz3.ab3@7122>   ORI.w #$2F00,D1
00024DA8 <AmiBlitz3.ab3@7123>    BSR.w writeword
00024DAC <AmiBlitz3.ab3@7125>    BSR.w get1bytemain
00024DB0 <AmiBlitz3.ab3@7126>    BSR.w getparameter
00024DB4 <AmiBlitz3.ab3@7127>    BSR.w fetchvars
00024DB8 <AmiBlitz3.ab3@7128>    BSR.w calcvar
00024DBC <AmiBlitz3.ab3@7129>    BTST #$E,D2
00024DC0 <AmiBlitz3.ab3@7130>    BEQ.w 'notp
00024DC4 <AmiBlitz3.ab3@7133>    MOVE.b #$3,D2
00024DC8 <AmiBlitz3.ab3@7134>  BRA.w 'pd
00024DCA <AmiBlitz3.ab3@7137>   TST.b D2
00024DCE <AmiBlitz3.ab3@7138>    BEQ.w 'issa
00024DD2 <AmiBlitz3.ab3@7139>   CMP.b #$7,D2
00024DD6 <AmiBlitz3.ab3@7140>    BEQ.w 'issa
00024DDA <AmiBlitz3.ab3@7143>   BTST #$F,D2
00024DDE <AmiBlitz3.ab3@7144>    BNE.w 'nsimp
00024DE2 <AmiBlitz3.ab3@7145>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024DE6 <AmiBlitz3.ab3@7146>    BSR.w writeword
00024DE8 <AmiBlitz3.ab3@7147>   MOVE.w D3,D1
00024DEC <AmiBlitz3.ab3@7148>    BSR.w writeword
00024DF0 <AmiBlitz3.ab3@7151>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00024DF4 <AmiBlitz3.ab3@7152>    BSR.w writeword
00024DF8 <AmiBlitz3.ab3@7153>   MOVE.w #$1480,D1
00024DFC <AmiBlitz3.ab3@7154>   CMP.b #$1,D2
00024E00 <AmiBlitz3.ab3@7155>    BEQ.w 'pg
00024E04 <AmiBlitz3.ab3@7156>   EORI.w #$3000,D1
00024E08 <AmiBlitz3.ab3@7157>   CMP.b #$2,D2
00024E0C <AmiBlitz3.ab3@7158>    BNE.w 'pg
00024E10 <AmiBlitz3.ab3@7159>   ORI.w #$1000,D1
00024E14 <AmiBlitz3.ab3@7162>   BSR.w writeword
00024E1A <AmiBlitz3.ab3@7163>   MOVE.l #$4CDF7FFF,D1
00024E1E <AmiBlitz3.ab3@7164> BRA.w writelong
00024E22 <AmiBlitz3.ab3@7168>   BSR.w get_reg2
00024E26 <AmiBlitz3.ab3@7169>   CMP.w #$2C,D0     ;','
00024E2A <AmiBlitz3.ab3@7170>    BNE.w syntaxerr
00024E2E <AmiBlitz3.ab3@7171>    BSR.w regmovems
00024E30 <AmiBlitz3.ab3@7172>   MOVE.w D4,-(A7)
00024E32 <AmiBlitz3.ab3@7173>   MOVEQ.l #$03,D2   ;get a long
00024E36 <AmiBlitz3.ab3@7174>    BSR.w eval
00024E38 <AmiBlitz3.ab3@7175>   MOVE.w (A7)+,D1
00024E3C <AmiBlitz3.ab3@7176>    BEQ.w 'done
00024E40 <AmiBlitz3.ab3@7177>   CMP.w #$8,D1
00024E44 <AmiBlitz3.ab3@7178>    BCC.w 'addreg
00024E46 <AmiBlitz3.ab3@7179>   LSL.w #8,D1
00024E48 <AmiBlitz3.ab3@7180>   LSL.w #1,D1
00024E4C <AmiBlitz3.ab3@7181>   ORI.w #$2000,D1
00024E50 <AmiBlitz3.ab3@7182>    BSR.w writeword
00024E54 <AmiBlitz3.ab3@7183>  BRA.w 'done
00024E56 <AmiBlitz3.ab3@7186>   SUBQ.w #8,D1
00024E58 <AmiBlitz3.ab3@7187>   LSL.w #8,D1
00024E5A <AmiBlitz3.ab3@7188>   LSL.w #1,D1
00024E5E <AmiBlitz3.ab3@7189>   ORI.w #$2040,D1
00024E62 <AmiBlitz3.ab3@7190>   BSR.w writeword
00024E66 <AmiBlitz3.ab3@7193> BRA.w dounmove
00024E6A <AmiBlitz3.ab3@7198>   BSR.w get1bytemain
00024E6E <AmiBlitz3.ab3@7201>   ORI.w #$20,D0
00024E72 <AmiBlitz3.ab3@7202>   CMP.w #$64,D0       ;'d'
00024E76 <AmiBlitz3.ab3@7203>    BEQ.w getan3
00024E7A <AmiBlitz3.ab3@7204>   CMP.w #$61,D0       ;'a'
00024E7E <AmiBlitz3.ab3@7205>    BNE.w syntaxerr
00024E82 <AmiBlitz3.ab3@7206>    BSR.w getan3
00024E84 <AmiBlitz3.ab3@7207>   ADDQ.w #8,D4
00024E86 <AmiBlitz3.ab3@7208> RTS
00024EB2 <AmiBlitz3.ab3@7213>   !fget                                                   ;bsr.w get1bytemain
00024EB6 <AmiBlitz3.ab3@7215>   ORI.w #$20,D0
00024EBA <AmiBlitz3.ab3@7218>   CMP.w #$61,D0     ;'a'
00024EBE <AmiBlitz3.ab3@7219>   BNE.w syntaxerr
00024EEA <AmiBlitz3.ab3@7223>   !fget                                                    ;bsr.w get1bytemain
00024EEE <AmiBlitz3.ab3@7225>   SUBI.w #$30,D0
00024EF2 <AmiBlitz3.ab3@7226>    BMI.w syntaxerr
00024EF6 <AmiBlitz3.ab3@7227>   CMP.w #$7,D0
00024EFA <AmiBlitz3.ab3@7228>    BHI.w syntaxerr
00024EFC <AmiBlitz3.ab3@7229>   MOVE.w D0,D4
00024F28 <AmiBlitz3.ab3@7231>   !fget
00024F2A <AmiBlitz3.ab3@7233> RTS                                                        ;bra.w get1bytemain
00024F2C <AmiBlitz3.ab3@7237>   ADDQ.w #8,D4
00024F2E <AmiBlitz3.ab3@7240>   MOVEQ.l #$00,D5    ;bits for reg
00024F32 <AmiBlitz3.ab3@7241>   SUBI.w #$30,D4
00024F36 <AmiBlitz3.ab3@7244>   CMP.w #$2D,D0      ;'-'
00024F3A <AmiBlitz3.ab3@7245>    BEQ.w 'range
00024F3E <AmiBlitz3.ab3@7246>   CMP.w #$2F,D0      ;'/'
00024F42 <AmiBlitz3.ab3@7247>    BEQ.w 'one
00024F46 <AmiBlitz3.ab3@7248>  BRA.w syntaxerr
00024F48 <AmiBlitz3.ab3@7251>   BSET D4,D5
00024F4A <AmiBlitz3.ab3@7254>   MOVE.w D5,D4
00024F4C <AmiBlitz3.ab3@7255>   MOVEQ.l #$0F,D5
00024F4E <AmiBlitz3.ab3@7256>  RTS
00024F50 <AmiBlitz3.ab3@7259>   BSET D4,D5
00024F54 <AmiBlitz3.ab3@7260>   BSR.w get_reg
00024F66 <AmiBlitz3.ab3@7262>   !compare3                                                ;bsr.w tstend2
00024F6A <AmiBlitz3.ab3@7264>   BNE.w 'loop
00024F6E <AmiBlitz3.ab3@7265>  BRA.w 'done2
00024F70 <AmiBlitz3.ab3@7268>   MOVE.w D4,D1    ;from
00024F74 <AmiBlitz3.ab3@7269>    BSR.w get_reg
00024F76 <AmiBlitz3.ab3@7270>   CMP.w D4,D1
00024F7A <AmiBlitz3.ab3@7271>    BLS.w 'loop2
00024F7C <AmiBlitz3.ab3@7272>   EXG.l D4,D1
00024F7E <AmiBlitz3.ab3@7275>   BSET D1,D5
00024F80 <AmiBlitz3.ab3@7276>   ADDQ.w #1,D1
00024F82 <AmiBlitz3.ab3@7277>   CMP.w D4,D1
00024F86 <AmiBlitz3.ab3@7278>    BLS.w 'loop2
00024F98 <AmiBlitz3.ab3@7280>   !compare3                                                ;bsr.w tstend2
00024F9C <AmiBlitz3.ab3@7282>   BNE.w 'loop
00024FA0 <AmiBlitz3.ab3@7283> BRA.w 'done
00024FA2 <AmiBlitz3.ab3@7289>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024FCE <AmiBlitz3.ab3@7291>    !fget
00024FD2 <AmiBlitz3.ab3@7293>   CMP.w #$23,D0       ;'#'
00024FD6 <AmiBlitz3.ab3@7294>    BEQ.w getimm
00024FDA <AmiBlitz3.ab3@7295>   CMP.w #$28,D0       ;'('
00024FDE <AmiBlitz3.ab3@7296>    BEQ.w 'ind
00024FE2 <AmiBlitz3.ab3@7297>   CMP.w #$2D,D0       ;'-'
00024FE6 <AmiBlitz3.ab3@7298>    BNE.w 'more
00025012 <AmiBlitz3.ab3@7300>    !fget                                                   ;bsr.w get1bytemain       -(
00025016 <AmiBlitz3.ab3@7302>   CMP.w #$28,D0       ;'('
0002501A <AmiBlitz3.ab3@7303>    BNE.w 'notccr
0002501E <AmiBlitz3.ab3@7304>    BSR.w getan
00025022 <AmiBlitz3.ab3@7305>   CMP.w #$29,D0       ;')'
00025026 <AmiBlitz3.ab3@7306>    BNE.w syntaxerr
00025028 <AmiBlitz3.ab3@7307>   MOVEQ.l #$04,D5
00025054 <AmiBlitz3.ab3@7309>   !fget                                                    ;bsr.w get1bytemain  
00025056 <AmiBlitz3.ab3@7310>  RTS
0002505A <AmiBlitz3.ab3@7314>   BSR.w getan
0002505E <AmiBlitz3.ab3@7315>   CMP.w #$29,D0      ;')'
00025062 <AmiBlitz3.ab3@7316>    BNE.w syntaxerr
0002508E <AmiBlitz3.ab3@7318>   !fget
00025092 <AmiBlitz3.ab3@7320>   CMP.w #$2B,D0      ;'+'
00025096 <AmiBlitz3.ab3@7321>    BEQ.w 'postinc
00025098 <AmiBlitz3.ab3@7322>   MOVEQ.l #$02,D5
0002509A <AmiBlitz3.ab3@7323>  RTS
0002509C <AmiBlitz3.ab3@7326>   MOVEQ.l #$03,D5
000250C8 <AmiBlitz3.ab3@7328>   !fget                                                    ;bra.w get1bytemain
000250CA <AmiBlitz3.ab3@7329>  RTS
000250CE <AmiBlitz3.ab3@7333>   ORI.w #$20,D0
000250D0 <AmiBlitz3.ab3@7334>   MOVE.w D0,D1      ;first
000250FC <AmiBlitz3.ab3@7336>    !fget                                                   ;bsr.w get1bytemain  ;get second
00025100 <AmiBlitz3.ab3@7338>   CMP.w #$64,D1     ;'d'
00025104 <AmiBlitz3.ab3@7339>    BNE.w 'notdn
00025108 <AmiBlitz3.ab3@7340>   CMP.w #$30,D0     ;'0'
0002510C <AmiBlitz3.ab3@7341>    BCS.w 'notan
00025110 <AmiBlitz3.ab3@7342>   CMP.w #$37,D0     ;'7'
00025114 <AmiBlitz3.ab3@7343>    BHI.w 'notan
00025116 <AmiBlitz3.ab3@7344>   MOVE.w D0,D4
00025142 <AmiBlitz3.ab3@7346>    !fget                                                   ;bsr.w get1bytemain
00025154 <AmiBlitz3.ab3@7347>    !compare3                                               ;bsr.w tstend2
00025158 <AmiBlitz3.ab3@7349>    BEQ.w 'dn
0002515C <AmiBlitz3.ab3@7350>   CMP.w #$2D,D0     ;'-'
00025160 <AmiBlitz3.ab3@7351>    BEQ.w getmovem
00025164 <AmiBlitz3.ab3@7352>   CMP.w #$2F,D0     ;'/'
00025168 <AmiBlitz3.ab3@7353>    BEQ.w getmovem
0002516C <AmiBlitz3.ab3@7354>  BRA.w 'notan2
0002516E <AmiBlitz3.ab3@7357>   MOVEQ.l #$00,D5
00025172 <AmiBlitz3.ab3@7358>   SUBI.w #$30,D4
00025174 <AmiBlitz3.ab3@7359>  RTS
00025178 <AmiBlitz3.ab3@7362>    CMP.w #$61,D1    ;'a'
0002517C <AmiBlitz3.ab3@7363>    BNE.w 'notan
00025180 <AmiBlitz3.ab3@7365>   CMP.w #$30,D0     ;'0'
00025184 <AmiBlitz3.ab3@7366>    BCS.w 'notan
00025188 <AmiBlitz3.ab3@7367>   CMP.w #$37,D0     ;'7'
0002518C <AmiBlitz3.ab3@7368>    BHI.w 'notan
0002518E <AmiBlitz3.ab3@7369>   MOVE.w D0,D4
000251BA <AmiBlitz3.ab3@7371>    !fget                                                   ;bsr.w get1bytemain
000251CC <AmiBlitz3.ab3@7372>    !compare3                                               ;bsr.w tstend2
000251D0 <AmiBlitz3.ab3@7374>    BEQ.w 'an
000251D4 <AmiBlitz3.ab3@7375>   CMP.w #$2D,D0     ;'-'
000251D8 <AmiBlitz3.ab3@7376>    BEQ.w getmovem2                                         ;movem
000251DC <AmiBlitz3.ab3@7377>   CMP.w #$2F,D0     ;'/'
000251E0 <AmiBlitz3.ab3@7378>    BEQ.w getmovem2
000251E4 <AmiBlitz3.ab3@7379>  BRA.w 'notan2
000251E6 <AmiBlitz3.ab3@7385>   MOVEQ.l #1,d5
000251EA <AmiBlitz3.ab3@7386>   SUBI.w #$30,D4
000251EE <AmiBlitz3.ab3@7388>   BRA 'l10
000251F0 <AmiBlitz3.ab3@7389>   ADDQ.w #8,d4                             ; ??? looks like dead code ???
000251F2 <AmiBlitz3.ab3@7390>   MOVEQ #0,d5                              ;   "
000251F4 <AmiBlitz3.ab3@7391>   BSET d4,d5                               ;   "
000251F6 <AmiBlitz3.ab3@7392>   MOVE.w d5,d4                             ;   "
000251F8 <AmiBlitz3.ab3@7393>   MOVEQ.l #$0f,D5                          ;   "             ;01
000251FA <AmiBlitz3.ab3@7397>  RTS
000251FE <AmiBlitz3.ab3@7400>   ORI.w #$20,D0
00025200 <AmiBlitz3.ab3@7401>   MOVE.w D0,D4
0002522C <AmiBlitz3.ab3@7402>    !fget                                                   ;bsr.w get1bytemain ;get third
0002523E <AmiBlitz3.ab3@7407>   !compare3                                                ;bsr.w tstend2
00025242 <AmiBlitz3.ab3@7409>    BNE.w 'notsx
00025246 <AmiBlitz3.ab3@7410>   CMP.w #$73,D1       ;'s'
0002524A <AmiBlitz3.ab3@7411>    BNE.w 'notsx
0002524E <AmiBlitz3.ab3@7412>   CMP.w #$70,D4       ;'p'
00025252 <AmiBlitz3.ab3@7413>    BNE.w 'notsp
00025264 <AmiBlitz3.ab3@7415>    !compare3                                               ;bsr.w tstend2
00025268 <AmiBlitz3.ab3@7417>    BNE.w 'notccr
0002526A <AmiBlitz3.ab3@7421>   MOVEQ.l #$07,D4
0002526C <AmiBlitz3.ab3@7422>   MOVEQ.l #$01,D5
0002526E <AmiBlitz3.ab3@7423>  RTS
00025272 <AmiBlitz3.ab3@7426>   CMP.w #$72,D4      ;'r'
00025276 <AmiBlitz3.ab3@7427>    BNE.w 'notccr
00025288 <AmiBlitz3.ab3@7429>    !compare3                                               ;bsr.w tstend2
0002528C <AmiBlitz3.ab3@7431>    BNE.w 'notccr
0002528E <AmiBlitz3.ab3@7432>   MOVEQ.l #$0D,D5
00025290 <AmiBlitz3.ab3@7433>  RTS
00025294 <AmiBlitz3.ab3@7436>   ORI.w #$20,D0
00025298 <AmiBlitz3.ab3@7437>   CMP.w #$63,D1      ;'c'
0002529C <AmiBlitz3.ab3@7438>    BNE.w 'notccr0
000252A0 <AmiBlitz3.ab3@7439>   CMP.w #$63,D4      ;'c'
000252A4 <AmiBlitz3.ab3@7440>    BNE.w 'notccr
000252A8 <AmiBlitz3.ab3@7441>   CMP.w #$72,D0      ;'r'
000252AC <AmiBlitz3.ab3@7442>    BNE.w 'notccr
000252B0 <AmiBlitz3.ab3@7443>    BSR.w get1bytemain                                      ;??wy not !fget
000252B4 <AmiBlitz3.ab3@7444>    BEQ.w 'ccr
000252B8 <AmiBlitz3.ab3@7445>   CMP.w #$2C,D0
000252BC <AmiBlitz3.ab3@7446>    BNE.w 'notccr
000252BE <AmiBlitz3.ab3@7452>   MOVEQ.l #$0C,D5
000252C0 <AmiBlitz3.ab3@7453>  RTS
000252C4 <AmiBlitz3.ab3@7456>   CMP.w #$75,D1      ;'u'
000252C8 <AmiBlitz3.ab3@7457>    BNE.w 'notccr
000252CC <AmiBlitz3.ab3@7458>   CMP.w #$73,D4      ;'s'
000252D0 <AmiBlitz3.ab3@7459>    BNE.w 'notccr
000252D4 <AmiBlitz3.ab3@7460>   CMP.w #$70,D0      ;'p'
000252D8 <AmiBlitz3.ab3@7461>    BNE.w 'notccr
000252DC <AmiBlitz3.ab3@7462>    BSR.w get1bytemain                                      ;??wy not !fget
000252E0 <AmiBlitz3.ab3@7463>    BEQ.w 'usp
000252E4 <AmiBlitz3.ab3@7464>   CMP.w #$2C,D0      ;','
000252E8 <AmiBlitz3.ab3@7465>    BNE.w 'notccr
000252EA <AmiBlitz3.ab3@7468>   MOVEQ.l #$0E,D5
000252EC <AmiBlitz3.ab3@7469>  RTS
000252EE <AmiBlitz3.ab3@7475>   MOVEA.l A4,A5
000252F2 <AmiBlitz3.ab3@7476>    BSR.w asmconst
00025304 <AmiBlitz3.ab3@7479>    !compare3                                               ;bsr.w tstend2
00025308 <AmiBlitz3.ab3@7481>    BEQ.w 'abs1
0002530C <AmiBlitz3.ab3@7482>   CMP.w #$2E,D0      ;'.'
00025310 <AmiBlitz3.ab3@7483>    BEQ.w 'absx
00025314 <AmiBlitz3.ab3@7484>   CMP.w #$28,D0      ;'('
00025318 <AmiBlitz3.ab3@7485>    BNE.w syntaxerr
0002531C <AmiBlitz3.ab3@7486>    BSR.w get1bytemain                                      ;??wy not !fget
00025320 <AmiBlitz3.ab3@7487>   ORI.w #$20,D0
00025324 <AmiBlitz3.ab3@7488>   CMP.w #$70,D0      ;'p'
00025328 <AmiBlitz3.ab3@7489>    BNE.w 'notpcrel
0002532C <AmiBlitz3.ab3@7490>    BSR.w get1bytemain                                      ;??wy not !fget
00025330 <AmiBlitz3.ab3@7491>   ORI.w #$20,D0
00025334 <AmiBlitz3.ab3@7492>   CMP.w #$63,D0      ;'c'
00025338 <AmiBlitz3.ab3@7493>    BNE.w syntaxerr
0002533C <AmiBlitz3.ab3@7494>    BSR.w get1bytemain                                      ;??wy not !fget
00025340 <AmiBlitz3.ab3@7495>    BSR.w getrest
00025342 <AmiBlitz3.ab3@7496>   ADDQ.w #4,D5
00025344 <AmiBlitz3.ab3@7497>  RTS
00025348 <AmiBlitz3.ab3@7500>   BSR.w getan2
0002534C <AmiBlitz3.ab3@7501>  BRA.w getrest
00025350 <AmiBlitz3.ab3@7504>    BSR.w get1bytemain                                     ;??wy not !fget
00025354 <AmiBlitz3.ab3@7505>   ORI.w #$20,D0
00025358 <AmiBlitz3.ab3@7506>   CMP.w #$77,D0      ;'w'
0002535C <AmiBlitz3.ab3@7507>    BEQ.w 'absw
00025360 <AmiBlitz3.ab3@7508>   CMP.w #$6C,D0      ;'l'
00025364 <AmiBlitz3.ab3@7509>    BNE.w syntaxerr
00025366 <AmiBlitz3.ab3@7512>   MOVEQ.l #$08,D5
00025368 <AmiBlitz3.ab3@7513>  RTS
0002536A <AmiBlitz3.ab3@7516>   MOVEQ.l #$07,D5
0002536C <AmiBlitz3.ab3@7517> RTS
0002536E <AmiBlitz3.ab3@7521>   TST.w D0
00025372 <AmiBlitz3.ab3@7522>    BEQ.w 'ok
00025376 <AmiBlitz3.ab3@7523>   CMP.w #$3A,D0       ;':'
0002537A <AmiBlitz3.ab3@7524>    BEQ.w 'ok
0002537E <AmiBlitz3.ab3@7525>   CMP.w #$2C,D0       ;','
00025380 <AmiBlitz3.ab3@7528> RTS
00025384 <AmiBlitz3.ab3@7532>   CMP.w #$2C,D0       ;','
00025388 <AmiBlitz3.ab3@7533>    BNE.w 'dis
0002538C <AmiBlitz3.ab3@7534>    BSR.w get1bytemain                                      ;??wy not !fget
00025390 <AmiBlitz3.ab3@7535>   ORI.w #$20,D0
00025392 <AmiBlitz3.ab3@7536>   MOVEQ.l #$00,D1
00025396 <AmiBlitz3.ab3@7537>   CMP.w #$64,D0       ;'d'
0002539A <AmiBlitz3.ab3@7538>    BEQ.w 'ianxi
0002539E <AmiBlitz3.ab3@7539>   CMP.w #$61,D0       ;'a'
000253A2 <AmiBlitz3.ab3@7540>    BNE.w syntaxerr
000253A6 <AmiBlitz3.ab3@7541>   BSET #$F,D1
000253AA <AmiBlitz3.ab3@7544>    BSR.w get1bytemain                                      ;??wy not !fget
000253AE <AmiBlitz3.ab3@7545>   SUBI.w #$30,D0
000253B2 <AmiBlitz3.ab3@7546>    BMI.w syntaxerr
000253B6 <AmiBlitz3.ab3@7547>   CMP.w #$7,D0
000253BA <AmiBlitz3.ab3@7548>    BHI.w syntaxerr
000253BC <AmiBlitz3.ab3@7549>   LSL.w #8,D0
000253BE <AmiBlitz3.ab3@7550>   LSL.w #4,D0
000253C0 <AmiBlitz3.ab3@7551>   OR.w D0,D1
000253C4 <AmiBlitz3.ab3@7552>    BSR.w get1bytemain                                      ;??wy not !fget
000253C8 <AmiBlitz3.ab3@7553>   CMP.w #$2E,D0       ;'.'
000253CC <AmiBlitz3.ab3@7554>    BNE.w 'ok2
000253D0 <AmiBlitz3.ab3@7555>    BSR.w get1bytemain                                      ;??wy not !fget
000253D4 <AmiBlitz3.ab3@7556>   ORI.w #$20,D0
000253D8 <AmiBlitz3.ab3@7557>   CMP.w #$77,D0       ;'w'
000253DC <AmiBlitz3.ab3@7558>    BEQ.w 'ok
000253E0 <AmiBlitz3.ab3@7559>   CMP.w #$6C,D0       ;'l'
000253E4 <AmiBlitz3.ab3@7560>    BNE.w syntaxerr
000253E8 <AmiBlitz3.ab3@7561>   BSET #$B,D1
000253EC <AmiBlitz3.ab3@7564>    BSR.w get1bytemain                                      ;??wy not !fget
000253F0 <AmiBlitz3.ab3@7568>    CMP.b #"*",d0                                            ;020 * Mode
000253F4 <AmiBlitz3.ab3@7569>             BNE 'l1
000253F8 <AmiBlitz3.ab3@7570>             BSR.w get1bytemain                             ;??wy not !fget
000253FC <AmiBlitz3.ab3@7571>             CMP.b #"2",d0
00025400 <AmiBlitz3.ab3@7572>             BNE 'l2
00025404 <AmiBlitz3.ab3@7573>             OR.w #$200,d1
00025408 <AmiBlitz3.ab3@7574>  BRA 'l1b
0002540C <AmiBlitz3.ab3@7577>             CMP.b #"4",d0
00025410 <AmiBlitz3.ab3@7578>             BNE 'l3
00025414 <AmiBlitz3.ab3@7579>             OR.w #$400,d1
00025418 <AmiBlitz3.ab3@7580>  BRA 'l1b
0002541C <AmiBlitz3.ab3@7583>             CMP.b #"8",d0
00025420 <AmiBlitz3.ab3@7584>             BNE syntaxerr
00025424 <AmiBlitz3.ab3@7585>             OR.w #$600,d1
00025428 <AmiBlitz3.ab3@7588>         BSR.w get1bytemain                                 ;??wy not !fget
0002542C <AmiBlitz3.ab3@7592>   CMP.w #$29,D0       ;')'
00025430 <AmiBlitz3.ab3@7593>    BNE.w syntaxerr
00025436 <AmiBlitz3.ab3@7594>   MOVE.w D1,extraword
00025438 <AmiBlitz3.ab3@7595>   MOVEQ.l #$06,D5
0002543C <AmiBlitz3.ab3@7596>  BRA.w get1bytemain                                         ;??wy not !fget
00025440 <AmiBlitz3.ab3@7599>   CMP.w #")",D0                                            ;")"
00025444 <AmiBlitz3.ab3@7600>    BNE.w errorbracketmiss                                  ; was syntax error
00025446 <AmiBlitz3.ab3@7601>   MOVEQ.l #$05,D5
0002544A <AmiBlitz3.ab3@7602> BRA.w get1bytemain                                         ;??wy not !fget
00025450 <AmiBlitz3.ab3@7609>   MOVEA.l asmbuff,A0
00025456 <AmiBlitz3.ab3@7610>   MOVE.w ininclude,D1
0002545C <AmiBlitz3.ab3@7611>   OR.w inmacro,D1
0002545E <AmiBlitz3.ab3@7612>   MOVE.w D1,(A0)+                                          ;flag!
00025462 <AmiBlitz3.ab3@7613>    BNE.w copyconst
00025464 <AmiBlitz3.ab3@7614>   MOVE.l A5,-(A7)
00025468 <AmiBlitz3.ab3@7615>    BSR.w copyconst
0002546E <AmiBlitz3.ab3@7616>   MOVEA.l asmbuff,A0
00025472 <AmiBlitz3.ab3@7617>   CMP.w #$4,D1
00025476 <AmiBlitz3.ab3@7618>    BLS.w 'leave
0002547C <AmiBlitz3.ab3@7619>   TST.w lc
00025480 <AmiBlitz3.ab3@7620>    BNE.w 'leave
00025482 <AmiBlitz3.ab3@7621>   ADDQ.w #2,A0
00025484 <AmiBlitz3.ab3@7622>   MOVE.l (A7)+,(A0)+
00025486 <AmiBlitz3.ab3@7623>   CLR.b (A0)
0002548E <AmiBlitz3.ab3@7624>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00025490 <AmiBlitz3.ab3@7625>  RTS
00025492 <AmiBlitz3.ab3@7628>   NOT.w (A0)
00025494 <AmiBlitz3.ab3@7629>   ADDQ.w #4,A7
00025496 <AmiBlitz3.ab3@7630> RTS
00025498 <AmiBlitz3.ab3@7633> lc:  Ds.w 1
0002549E <AmiBlitz3.ab3@7637>   CLR.w lc
000254A0 <AmiBlitz3.ab3@7638>   MOVEQ.l #$00,D1
000254A2 <AmiBlitz3.ab3@7641>    ADDQ.w #1,D1                                            ;label name
000254CE <AmiBlitz3.ab3@7643>    !fget                                                   ;bsr.w get1bytemain
000254D2 <AmiBlitz3.ab3@7645>    BEQ.w 'done
000254D6 <AmiBlitz3.ab3@7648>    CMP.w #$22,d0
000254DA <AmiBlitz3.ab3@7649>    BNE.s 'loop_l10
000254E0 <AmiBlitz3.ab3@7650>    NOT.w instringon
000254E4 <AmiBlitz3.ab3@7653>    CMP.w #":",d0
000254E8 <AmiBlitz3.ab3@7654>    BNE.s 'loop_l11
000254EE <AmiBlitz3.ab3@7655>    TST.w instringon
000254F2 <AmiBlitz3.ab3@7656>    BEQ 'done
000254F4 <AmiBlitz3.ab3@7660>   TST.w D0
000254F8 <AmiBlitz3.ab3@7661>   BPL.w 'notmi
000254FA <AmiBlitz3.ab3@7662>   MOVE.w D0,-(A7)
000254FC <AmiBlitz3.ab3@7663>   LSR.w #8,D0
000254FE <AmiBlitz3.ab3@7664>   MOVE.b D0,(A0)+
00025500 <AmiBlitz3.ab3@7665>   MOVE.w (A7)+,D0
00025502 <AmiBlitz3.ab3@7666>   MOVE.b D0,(A0)+
00025504 <AmiBlitz3.ab3@7667>   ADDQ.w #1,D1
00025508 <AmiBlitz3.ab3@7668>  BRA.s 'loop
0002550E <AmiBlitz3.ab3@7671>    TST.w instringon
00025512 <AmiBlitz3.ab3@7672>    BNE.w 'putbyte
00025518 <AmiBlitz3.ab3@7674>    TST.b _dcb
0002551C <AmiBlitz3.ab3@7675>    BNE 'notmi_l10
00025520 <AmiBlitz3.ab3@7677>    CMP.w #$28,D0     ;'('
00025524 <AmiBlitz3.ab3@7678>    BEQ.w 'done
00025528 <AmiBlitz3.ab3@7682>    CMP.w #$2C,D0     ;','
0002552C <AmiBlitz3.ab3@7683>    BEQ.w 'done
00025530 <AmiBlitz3.ab3@7684>    CMP.b #"'",D0           ; was #loclabch
00025534 <AmiBlitz3.ab3@7685>    BNE.w 'putbyte
0002553A <AmiBlitz3.ab3@7686>    MOVE.w D0,lc                                     ;locallabels
0002553C <AmiBlitz3.ab3@7687>    MOVE.l A1,-(A7)
00025542 <AmiBlitz3.ab3@7688>    LEA lastgloballabel,A1
00025544 <AmiBlitz3.ab3@7689>    TST.b (A1)
00025548 <AmiBlitz3.ab3@7690>    BEQ.w nolocerr
0002554A <AmiBlitz3.ab3@7693>   ADDQ.w #1,D1
0002554C <AmiBlitz3.ab3@7694>   MOVE.b (A1)+,(A0)+
00025550 <AmiBlitz3.ab3@7695>    BNE.w 'cloop
00025552 <AmiBlitz3.ab3@7696>   SUBQ.w #1,D1
00025554 <AmiBlitz3.ab3@7697>   SUBQ.w #1,A0
00025556 <AmiBlitz3.ab3@7698>   MOVEA.l (A7)+,A1
00025558 <AmiBlitz3.ab3@7701>   MOVE.b D0,(A0)+
0002555C <AmiBlitz3.ab3@7702>  BRA.w 'loop
0002555E <AmiBlitz3.ab3@7705>   CLR.b (A0)
00025564 <AmiBlitz3.ab3@7706>   MOVE.w D1,asmlen2
00025566 <AmiBlitz3.ab3@7707> RTS
0002556C <AmiBlitz3.ab3@7713>   CMP.l #$80ad,d0      
00025570 <AmiBlitz3.ab3@7714>   BNE.s 'l12
00025576 <AmiBlitz3.ab3@7715>  JMP bssseg
0002557C <AmiBlitz3.ab3@7718>   CMP.l #$807f,d0
00025580 <AmiBlitz3.ab3@7719>     BNE.s 'l13
00025586 <AmiBlitz3.ab3@7720>  JMP chipseg
0002558C <AmiBlitz3.ab3@7723>   ADDQ.l #1,destpointer                                    ;even
00025594 <AmiBlitz3.ab3@7724>   BCLR #$0,destpointer+3
00025598 <AmiBlitz3.ab3@7726>   SUBI.w #$803C,D0         ; was #$8000+fnum
0002559A <AmiBlitz3.ab3@7727>   LSL.w #2,D0
000255A0 <AmiBlitz3.ab3@7728>   MOVEA.l #asmpnts,A0
000255A4 <AmiBlitz3.ab3@7729>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000255AA <AmiBlitz3.ab3@7730>   MOVE.w D0,temp1
000255AC <AmiBlitz3.ab3@7731>   MOVE.l A0,-(A7)
000255AE <AmiBlitz3.ab3@7733>   MOVEQ.l #$01,D1         ;word len (byte=0, long=2)
000255DA <AmiBlitz3.ab3@7735>    !fget                                                   ;bsr.w get1bytemain
000255DE <AmiBlitz3.ab3@7737>   CMP.w #$2E,D0           ;'.'
000255E2 <AmiBlitz3.ab3@7738>    BNE.w 'dsize
0002560E <AmiBlitz3.ab3@7740>   !fget                                                    ;bsr.w get1bytemain
00025612 <AmiBlitz3.ab3@7742>   ORI.w #$20,D0
00025616 <AmiBlitz3.ab3@7743>   CMP.w #$77,D0           ;'w'                                  ;long
0002561A <AmiBlitz3.ab3@7744>    BEQ.w 'wsize
0002561E <AmiBlitz3.ab3@7745>   CMP.w #$62,D0           ;'b'                                 ;byte
00025622 <AmiBlitz3.ab3@7746>    BEQ.w 'bsize
00025626 <AmiBlitz3.ab3@7747>   CMP.w #$6C,D0           ;'l'                                 ;word
0002562A <AmiBlitz3.ab3@7749>    BEQ.w 'lsize
0002562E <AmiBlitz3.ab3@7750>   CMP.w #"s",d0
00025632 <AmiBlitz3.ab3@7752>   BNE syntaxerr
00025636 <AmiBlitz3.ab3@7753>  BRA.w 'bsize             ; was 'lsize org source
00025638 <AmiBlitz3.ab3@7756>   MOVEQ.l #$00,D1
0002563C <AmiBlitz3.ab3@7757>   MOVE.w $8(A0),D0
00025640 <AmiBlitz3.ab3@7758>  BRA.w 'tstsize
00025642 <AmiBlitz3.ab3@7761>   MOVEQ.l #$04,D1
00025646 <AmiBlitz3.ab3@7762>  BRA.w 'putsize
00025648 <AmiBlitz3.ab3@7765>   MOVEQ.l #$04,D1
0002564C <AmiBlitz3.ab3@7766>   MOVE.w $8(A0),D0
0002564E <AmiBlitz3.ab3@7767>   LSR.w #4,D0
00025652 <AmiBlitz3.ab3@7768>  BRA.w 'tstsize
00025654 <AmiBlitz3.ab3@7771>   MOVEQ.l #$08,D1
00025658 <AmiBlitz3.ab3@7772>   MOVE.w $8(A0),D0
0002565A <AmiBlitz3.ab3@7773>   LSR.w #8,D0
0002565E <AmiBlitz3.ab3@7776>    ANDI.w #$F,D0
00025662 <AmiBlitz3.ab3@7777>   CMP.w #$F,D0
00025666 <AmiBlitz3.ab3@7779>    BNE.w 'cl60
0002566E <AmiBlitz3.ab3@7782>    CMP.l #"MULS",-6(a0)
00025672 <AmiBlitz3.ab3@7783>    BNE 'c20
00025678 <AmiBlitz3.ab3@7784>    MOVE.l #$4c000800,d1
0002567E <AmiBlitz3.ab3@7785>  JMP do32
00025686 <AmiBlitz3.ab3@7788>    CMP.l #"MULU",-6(a0)
0002568A <AmiBlitz3.ab3@7789>    BNE 'c30
00025690 <AmiBlitz3.ab3@7790>    MOVE.l #$4c000000,d1
00025696 <AmiBlitz3.ab3@7791>  JMP do32
0002569E <AmiBlitz3.ab3@7794>    CMP.l #"DIVS",-6(a0)
000256A2 <AmiBlitz3.ab3@7795>    BNE 'c40
000256A8 <AmiBlitz3.ab3@7796>    MOVE.l #$4c400800,d1
000256AE <AmiBlitz3.ab3@7797>  JMP do32
000256B6 <AmiBlitz3.ab3@7800>    CMP.l #"DIVU",-6(a0)
000256BA <AmiBlitz3.ab3@7801>    BNE 'c50
000256C0 <AmiBlitz3.ab3@7802>    MOVE.l #$4c400000,d1
000256C6 <AmiBlitz3.ab3@7803>  JMP do32
000256CA <AmiBlitz3.ab3@7807>  BRA illsizeerr             ; in org source this was afte 'c160
000256F6 <AmiBlitz3.ab3@7810>   !fget                                                    ;bsr.w get1bytemain
000256FC <AmiBlitz3.ab3@7813>   MOVE.w D1,asmsize
000256FE <AmiBlitz3.ab3@7814>   MOVEQ.l #-$01,D3
00025702 <AmiBlitz3.ab3@7815>    BSR.w reget
00025706 <AmiBlitz3.ab3@7816>    BEQ.w 'done0
00025710 <AmiBlitz3.ab3@7817>   MOVE.l #ptr_parameterstore,asmbuff
0002571A <AmiBlitz3.ab3@7820>    MOVE.w oldqflag,instringon
00025720 <AmiBlitz3.ab3@7821>   MOVEA.l lastsourcepos,A5
00025724 <AmiBlitz3.ab3@7823>    BSR.w getea
00025726 <AmiBlitz3.ab3@7824>   MOVE.l D4,D2                                              ;to src
00025728 <AmiBlitz3.ab3@7825>   MOVE.l D5,D3
00025732 <AmiBlitz3.ab3@7826>   MOVE.w asmlen2,asmlen
00025734 <AmiBlitz3.ab3@7827>   MOVEQ.l #-$01,D5
0002573E <AmiBlitz3.ab3@7828>   MOVE.w extraword,extraword2
00025742 <AmiBlitz3.ab3@7829>   CMP.w #$2C,D0                                             ;','
00025746 <AmiBlitz3.ab3@7830>    BNE.w 'done0
00025750 <AmiBlitz3.ab3@7831>   MOVE.l #namebuff2,asmbuff
00025754 <AmiBlitz3.ab3@7832>    BSR.w getea                                              ;dest
00025756 <AmiBlitz3.ab3@7839>   MOVEA.l (A7)+,A0
0002575C <AmiBlitz3.ab3@7843>   MOVEA.l destpointer,A1    ; pc
0002575E <AmiBlitz3.ab3@7845>   MOVEA.l A1,A4
00025760 <AmiBlitz3.ab3@7846>   ADDQ.w #2,A1
00025762 <AmiBlitz3.ab3@7847>   MOVE.w (A0),D1            ;opcode
00025764 <AmiBlitz3.ab3@7848>   TST.w D3
00025768 <AmiBlitz3.ab3@7849>    BMI.w 'none              ;no src/dest ea!
0002576C <AmiBlitz3.ab3@7853>   MOVE.w $E(A0),D0
00025770 <AmiBlitz3.ab3@7854>    BPL.w 'noia
00025774 <AmiBlitz3.ab3@7855>   BTST #$0,D0
00025778 <AmiBlitz3.ab3@7856>    BEQ.w 'noa
0002577C <AmiBlitz3.ab3@7857>   CMP.w #$1,D5
00025780 <AmiBlitz3.ab3@7858>    BNE.w 'noa
00025784 <AmiBlitz3.ab3@7859>   CMP.w #$E,D3
00025788 <AmiBlitz3.ab3@7860>    BEQ.w 'noia
0002578E <AmiBlitz3.ab3@7861>   MOVE.w temp1,D0
00025790 <AmiBlitz3.ab3@7862>   ADDQ.w #4,D0
00025794 <AmiBlitz3.ab3@7863>  BRA.w 'moveon
00025798 <AmiBlitz3.ab3@7866>   BTST #$1,D0
0002579C <AmiBlitz3.ab3@7867>    BEQ.w 'noia
000257A0 <AmiBlitz3.ab3@7868>   CMP.w #$B,D3
000257A4 <AmiBlitz3.ab3@7869>    BNE.w 'noia
000257AA <AmiBlitz3.ab3@7870>   MOVE.w temp1,D0
000257AC <AmiBlitz3.ab3@7873>   ADDQ.w #4,D0
000257B2 <AmiBlitz3.ab3@7874>   MOVEA.l #asmpnts,A0
000257B6 <AmiBlitz3.ab3@7875>   MOVEA.l $0(A0,D0.W),A0
000257B8 <AmiBlitz3.ab3@7876>   MOVE.w (A0),D1
000257C2 <AmiBlitz3.ab3@7879>   MOVE.l #ptr_parameterstore,buff1
000257CC <AmiBlitz3.ab3@7880>   MOVE.l #namebuff2,buff2
000257D0 <AmiBlitz3.ab3@7881>   MOVE.l $A(A0),D0
000257D4 <AmiBlitz3.ab3@7882>    BEQ.w 'nojsr
000257D6 <AmiBlitz3.ab3@7883>   MOVEA.l D0,A3
000257DC <AmiBlitz3.ab3@7884>   MOVE.w asmsize,D6
000257DE <AmiBlitz3.ab3@7885>    JSR (A3)
000257E2 <AmiBlitz3.ab3@7886>    BPL.w 'noerr
000257E6 <AmiBlitz3.ab3@7887>   CMP.w #-$2,D0
000257EA <AmiBlitz3.ab3@7888>    BEQ.w illsizeerr
000257EE <AmiBlitz3.ab3@7889>  BRA.w illeaerr
000257F2 <AmiBlitz3.ab3@7892>   BEQ.w 'nojsr
000257F4 <AmiBlitz3.ab3@7894>   EXG.l D2,D4
000257F6 <AmiBlitz3.ab3@7895>   EXG.l D3,D5
000257FC <AmiBlitz3.ab3@7897>   MOVE.l extraword,D6
000257FE <AmiBlitz3.ab3@7898>   SWAP D6
00025804 <AmiBlitz3.ab3@7899>   MOVE.l D6,extraword
0002580E <AmiBlitz3.ab3@7901>   MOVE.l #namebuff2,buff1
00025818 <AmiBlitz3.ab3@7902>   MOVE.l #ptr_parameterstore,buff2
0002581E <AmiBlitz3.ab3@7904>   MOVE.w asmlen,D6
00025824 <AmiBlitz3.ab3@7905>   MOVE.w asmlen2,D7
0002582A <AmiBlitz3.ab3@7906>   MOVE.w D6,asmlen2
00025830 <AmiBlitz3.ab3@7907>   MOVE.w D7,asmlen
0002583A <AmiBlitz3.ab3@7910>   MOVE.l buff1,asmbuff
0002583E <AmiBlitz3.ab3@7911>   MOVE.w $E(A0),D0
00025842 <AmiBlitz3.ab3@7912>    BEQ.w 'nothing
00025846 <AmiBlitz3.ab3@7913>    BMI.w 'nothing
0002584A <AmiBlitz3.ab3@7915>    CMP.w #$7000,d1
0002584E <AmiBlitz3.ab3@7916>    BNE 'skip
00025852 <AmiBlitz3.ab3@7917>    CMP.w #$b,d3
00025856 <AmiBlitz3.ab3@7918>    BNE illeaerr
0002585A <AmiBlitz3.ab3@7922>    CMP.w #$1,D0
0002585E <AmiBlitz3.ab3@7923>    BNE.w 'n1to8
00025862 <AmiBlitz3.ab3@7924>    CMP.w #$B,D3
00025866 <AmiBlitz3.ab3@7925>    BNE.w 'nothing
0002586A <AmiBlitz3.ab3@7928>    BSR.w insasm
0002586C <AmiBlitz3.ab3@7929>   MOVE.w D4,D2
0002586E <AmiBlitz3.ab3@7930>   MOVE.w D5,D3
00025872 <AmiBlitz3.ab3@7931>  BRA.w 'skipsrc2
00025876 <AmiBlitz3.ab3@7934>    CMP.w #$2,D0
0002587A <AmiBlitz3.ab3@7935>    BNE.w 'notbcc
0002587E <AmiBlitz3.ab3@7936>   CMP.w #$8,D3
00025882 <AmiBlitz3.ab3@7937>    BNE.w illeaerr
00025884 <AmiBlitz3.ab3@7938>   MOVEQ.l #$09,D3
00025888 <AmiBlitz3.ab3@7939>  BRA.w 'nothing
0002588C <AmiBlitz3.ab3@7942>    CMP.w #$3,D0
00025890 <AmiBlitz3.ab3@7943>    BEQ.w 'skipsrc
00025894 <AmiBlitz3.ab3@7946>   CMP.w #$4,D0
00025898 <AmiBlitz3.ab3@7947>    BEQ.w 'skipsrc
0002589C <AmiBlitz3.ab3@7950>   CMP.w #$5,D0
000258A0 <AmiBlitz3.ab3@7951>    BNE.w 'notdbf
000258A4 <AmiBlitz3.ab3@7952>   CMP.w #$8,D5
000258A8 <AmiBlitz3.ab3@7953>    BNE.w illeaerr
000258AA <AmiBlitz3.ab3@7954>   OR.w D2,D1
000258AC <AmiBlitz3.ab3@7955>   MOVEQ.l #$09,D5
000258B0 <AmiBlitz3.ab3@7959>   MOVE.w $2(A0),D6
000258B4 <AmiBlitz3.ab3@7960>   MOVE.b $6(A0),D7
000258B8 <AmiBlitz3.ab3@7961>   MOVEM.l D4-D5,-(A7)
000258BE <AmiBlitz3.ab3@7962>   MOVE.w extraword2,D4
000258C2 <AmiBlitz3.ab3@7963>    BSR.w doea          ;do src
000258C6 <AmiBlitz3.ab3@7965>   MOVEM.l (A7)+,D2-D3
000258C8 <AmiBlitz3.ab3@7967>   TST.w D3
000258CC <AmiBlitz3.ab3@7970>     BMI.w 'one
000258D2 <AmiBlitz3.ab3@7971>   MOVE.w extraword,D4
000258D6 <AmiBlitz3.ab3@7972>   MOVE.w $4(A0),D6
000258DA <AmiBlitz3.ab3@7973>   MOVE.b $7(A0),D7
000258E4 <AmiBlitz3.ab3@7974>   MOVE.l buff2,asmbuff
000258EE <AmiBlitz3.ab3@7975>   MOVE.w asmlen2,asmlen
000258F2 <AmiBlitz3.ab3@7976>    BSR.w doea
000258F6 <AmiBlitz3.ab3@7977>  BRA.w 'putit
000258FA <AmiBlitz3.ab3@7980>   MOVE.w $4(A0),D0
000258FE <AmiBlitz3.ab3@7981>    BNE.w illeaerr
00025902 <AmiBlitz3.ab3@7982>  BRA.w 'putit
00025906 <AmiBlitz3.ab3@7985>   MOVE.w $2(A0),D0
0002590A <AmiBlitz3.ab3@7986>   OR.w $4(A0),D0
0002590E <AmiBlitz3.ab3@7987>    BNE.w illeaerr
00025912 <AmiBlitz3.ab3@7992>   MOVE.w $8(A0),D0
00025916 <AmiBlitz3.ab3@7993>   ANDI.w #$F000,D0
0002591A <AmiBlitz3.ab3@7994>   CMP.w #-$1000,D0    ;was #$f000
0002591E <AmiBlitz3.ab3@7995>    BEQ.w 'nosizep
00025920 <AmiBlitz3.ab3@7996>   LSR.w #8,D0
00025922 <AmiBlitz3.ab3@7997>   LSR.w #4,D0         ;shift for size
00025926 <AmiBlitz3.ab3@7999>   MOVE.w $8(A0),D2
0002592C <AmiBlitz3.ab3@8000>   MOVE.w asmsize,D3
0002592E <AmiBlitz3.ab3@8001>   LSR.w D3,D2
00025932 <AmiBlitz3.ab3@8002>   ANDI.w #$F,D2
00025934 <AmiBlitz3.ab3@8003>   LSL.w D0,D2
00025936 <AmiBlitz3.ab3@8004>   OR.w D2,D1          ;size into opcode
0002593C <AmiBlitz3.ab3@8007>   CMPA.l destbufferend,A4
00025940 <AmiBlitz3.ab3@8008>    BCS.w 'oky
00025948 <AmiBlitz3.ab3@8009>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1
0002594C <AmiBlitz3.ab3@8010>  BRA.w 'done
0002594E <AmiBlitz3.ab3@8013>   MOVE.w D1,(A4)
00025954 <AmiBlitz3.ab3@8016>   MOVE.l A1,destpointer
00025956 <AmiBlitz3.ab3@8017> RTS
0002595C <AmiBlitz3.ab3@8021>   MOVE.l destpointer,-(A7)
00025962 <AmiBlitz3.ab3@8022>   MOVE.l A1,destpointer
00025966 <AmiBlitz3.ab3@8023>    BSR.w addoff
0002596C <AmiBlitz3.ab3@8024>   MOVEA.l destpointer,A1
00025972 <AmiBlitz3.ab3@8025>   MOVE.l (A7)+,destpointer
00025974 <AmiBlitz3.ab3@8026> RTS
00025978 <AmiBlitz3.ab3@8030>   MOVEM.l d2-d6,-(a7)
0002597E <AmiBlitz3.ab3@8031>   JSR stripspaces
00025982 <AmiBlitz3.ab3@8032>   CMP.b #"d",(a5)+
00025986 <AmiBlitz3.ab3@8033>   BNE noreg
00025988 <AmiBlitz3.ab3@8034>   MOVE.b (a5)+,d0
0002598C <AmiBlitz3.ab3@8035>   CMP.b #$30,d0
00025990 <AmiBlitz3.ab3@8036>   BLT noreg
00025994 <AmiBlitz3.ab3@8037>   CMP.b #$37,d0
00025998 <AmiBlitz3.ab3@8038>   BGT noreg
0002599C <AmiBlitz3.ab3@8039>   SUB.b #$30,d0
0002599E <AmiBlitz3.ab3@8040>   MOVEQ #0,d3
000259A0 <AmiBlitz3.ab3@8041>   MOVE.b d0,d3                                             ;reg1
000259A2 <AmiBlitz3.ab3@8042>   ASL.l #8,d3
000259A4 <AmiBlitz3.ab3@8043>   ASL.l #8,d3
000259AA <AmiBlitz3.ab3@8044>   JSR stripspaces
000259AE <AmiBlitz3.ab3@8045>   CMP.b #",",(a5)+
000259B2 <AmiBlitz3.ab3@8046>   BNE noreg
000259B8 <AmiBlitz3.ab3@8047>   JSR stripspaces
000259BC <AmiBlitz3.ab3@8048>   CMP.b #"d",(a5)+
000259C0 <AmiBlitz3.ab3@8049>   BNE noreg
000259C2 <AmiBlitz3.ab3@8050>   MOVE.b (a5)+,d0
000259C6 <AmiBlitz3.ab3@8051>   CMP.b #$30,d0
000259CA <AmiBlitz3.ab3@8052>   BLT noreg
000259CE <AmiBlitz3.ab3@8053>   CMP.b #$37,d0
000259D2 <AmiBlitz3.ab3@8054>   BGT noreg
000259D6 <AmiBlitz3.ab3@8055>   SUB.b #$30,d0
000259D8 <AmiBlitz3.ab3@8056>   MOVEQ #0,d4
000259DA <AmiBlitz3.ab3@8057>   MOVE.b d0,d4                                             ;reg2
000259DC <AmiBlitz3.ab3@8058>   ASL.l #8,d4
000259DE <AmiBlitz3.ab3@8059>   ASL.l #4,d4
000259E0 <AmiBlitz3.ab3@8060>   OR.b d0,d1
000259E2 <AmiBlitz3.ab3@8061>   OR.l d3,d1
000259E4 <AmiBlitz3.ab3@8062>   OR.l d4,d1
000259EA <AmiBlitz3.ab3@8063>   JSR writelong
000259EE <AmiBlitz3.ab3@8064>   MOVEM.l (a7)+,d2-d6
000259F2 <AmiBlitz3.ab3@8065>   MOVEM.l d1/a1-a3,-(a7)
000259F6 <AmiBlitz3.ab3@8066> BRA exit
000259FA <AmiBlitz3.ab3@8070>   MOVEM.l (a7)+,d2-d6
00025A00 <AmiBlitz3.ab3@8071>   LEA errtext,a0
00025A02 <AmiBlitz3.ab3@8072>   MOVE.l a0,-(a7)
00025A08 <AmiBlitz3.ab3@8073> JMP handle_compileerror
00025A0E <AmiBlitz3.ab3@8078>   MOVE.w dontwrite_nomemleft,D1
00025A12 <AmiBlitz3.ab3@8079>    BNE.w 'done
00025A1A <AmiBlitz3.ab3@8080>   BTST #$7,make_smallestcode
00025A1E <AmiBlitz3.ab3@8081>    BEQ.w 'go
00025A22 <AmiBlitz3.ab3@8082>   MOVE.w pass(PC),D1
00025A26 <AmiBlitz3.ab3@8083>    BEQ.w 'done
00025A2C <AmiBlitz3.ab3@8086>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025A34 <AmiBlitz3.ab3@8087>   MOVE.b #1,curtemplabel
00025A3C <AmiBlitz3.ab3@8088>   MOVE.w #$FFFF,constmode
00025A42 <AmiBlitz3.ab3@8089>   CLR.w regnum
00025A4C <AmiBlitz3.ab3@8090>           MOVE.l #forthstack,forthsp
00025A56 <AmiBlitz3.ab3@8091>           MOVE.l #precstack,precsp
00025A5A <AmiBlitz3.ab3@8092>    BSR.w prepstack
00025A5C <AmiBlitz3.ab3@8095>   MOVE.l A2,-(A7)
00025A60 <AmiBlitz3.ab3@8096>    BSR.w chkstop
00025A62 <AmiBlitz3.ab3@8097>   MOVEA.l (A7)+,A2
00025A66 <AmiBlitz3.ab3@8098>   CMPA.w #$0,A2
00025A6A <AmiBlitz3.ab3@8099>    BEQ.w 'done2
00025A70 <AmiBlitz3.ab3@8100>    CLR.b iee
00025A76 <AmiBlitz3.ab3@8101>   MOVE.l A2,asmbuff
00025A7A <AmiBlitz3.ab3@8102>   LEA $10(A2),A5
00025A7E <AmiBlitz3.ab3@8103>   TST.b $F(A2)
00025A82 <AmiBlitz3.ab3@8104>    BNE.w 'skipo
00025A84 <AmiBlitz3.ab3@8105>   MOVEA.l (A5),A5                                          ;pointer to real text
00025A8A <AmiBlitz3.ab3@8108>    CLR.w asmtype
00025A8E <AmiBlitz3.ab3@8109>    CMP.b #".",(a5)
00025A92 <AmiBlitz3.ab3@8110>    BNE.s 'skipo_l10
00025A94 <AmiBlitz3.ab3@8111>    MOVE.l a2,-(a7)
00025A96 <AmiBlitz3.ab3@8112>    ADDQ.l #1,a5
00025A9C <AmiBlitz3.ab3@8113>    LEA newtypebase,a2
00025AA0 <AmiBlitz3.ab3@8114>    BSR getparameter2
00025AA4 <AmiBlitz3.ab3@8115>    BEQ.w syntaxerr
00025AA8 <AmiBlitz3.ab3@8116>    BSR findtype
00025AAC <AmiBlitz3.ab3@8117>    BNE.w notypeerr
00025AB0 <AmiBlitz3.ab3@8118>    LEA $4(a2),a2
00025AB4 <AmiBlitz3.ab3@8119>    BSR getparameter2
00025AB8 <AmiBlitz3.ab3@8120>    BEQ.w syntaxerr
00025ABC <AmiBlitz3.ab3@8121>    BSR.w findvariable2
00025AC0 <AmiBlitz3.ab3@8122>    BNE.w notypeerr
00025AC4 <AmiBlitz3.ab3@8123>    MOVE.w $4(a2),d3
00025AC6 <AmiBlitz3.ab3@8124>    EXT.l d3
00025ACA <AmiBlitz3.ab3@8125>  BRA 'skipo_l30b
00025ACE <AmiBlitz3.ab3@8128>   CMP.b #"\",(a5)
00025AD2 <AmiBlitz3.ab3@8129>     BNE 'skipo_l20
00025AD4 <AmiBlitz3.ab3@8130>     ADDQ.l #1,a5
00025AD6 <AmiBlitz3.ab3@8131>    MOVE.l a2,-(a7)
00025AD8 <AmiBlitz3.ab3@8132>    MOVE.l a5,a4
00025ADE <AmiBlitz3.ab3@8133>    LEA usedpath,a5
00025AE2 <AmiBlitz3.ab3@8134>    CMP.b #"*",(a5)
00025AE6 <AmiBlitz3.ab3@8135>    BNE 'skipo_lm1
00025AE8 <AmiBlitz3.ab3@8136>    ADDQ.l #1,a5
00025AEC <AmiBlitz3.ab3@8139>    BSR.w getparameter2
00025AF0 <AmiBlitz3.ab3@8140>    BEQ.w syntaxerr
00025AF6 <AmiBlitz3.ab3@8141>    LEA varbase,A2
00025AFE <AmiBlitz3.ab3@8142>    MOVE.b #1,newvariable
00025B02 <AmiBlitz3.ab3@8143>    BSR.w findvariable
00025B08 <AmiBlitz3.ab3@8144>    CLR.b newvariable
00025B0E <AmiBlitz3.ab3@8145>    CMP.l #-1,d0
00025B12 <AmiBlitz3.ab3@8146>    BEQ.w notypeerr
00025B14 <AmiBlitz3.ab3@8147>    MOVE.l a4,a5
00025B18 <AmiBlitz3.ab3@8148>    MOVE.l $a(a2),a2
00025B1C <AmiBlitz3.ab3@8149>    LEA $4(a2),a2
00025B20 <AmiBlitz3.ab3@8150>    BSR getparameter2
00025B24 <AmiBlitz3.ab3@8151>    BEQ.w syntaxerr
00025B28 <AmiBlitz3.ab3@8152>    BSR.w findvariable2
00025B2C <AmiBlitz3.ab3@8153>    BNE.w notypeerr
00025B30 <AmiBlitz3.ab3@8154>   MOVE.w $4(A2),D3
00025B32 <AmiBlitz3.ab3@8155>   EXT.l D3
00025B38 <AmiBlitz3.ab3@8158>    CMP.b #"[",-1(a5)
00025B3C <AmiBlitz3.ab3@8159>    BNE 'skipo_l30c
00025B3E <AmiBlitz3.ab3@8160>    MOVEQ #0,d0
00025B40 <AmiBlitz3.ab3@8161>    MOVE.b (a5)+,d0
00025B42 <AmiBlitz3.ab3@8162>    MOVE.l d3,-(a7)
00025B44 <AmiBlitz3.ab3@8163>    MOVEQ #0,d3
00025B4A <AmiBlitz3.ab3@8164>    JSR atoi
00025B4C <AmiBlitz3.ab3@8165>    MOVE.l (a7)+,d1
00025B50 <AmiBlitz3.ab3@8166>    MOVE.l $a(a2),a2
00025B54 <AmiBlitz3.ab3@8167>    MOVE.w 8(a2),d0
00025B56 <AmiBlitz3.ab3@8168>    MULS d0,d3
00025B58 <AmiBlitz3.ab3@8169>    ADD.l d1,d3
00025B5A <AmiBlitz3.ab3@8172>   MOVE.l (a7)+,a2
00025B5E <AmiBlitz3.ab3@8173>  BRA 'oko
00025B64 <AmiBlitz3.ab3@8176>   CMP.w #$c,$8(a2)
00025B68 <AmiBlitz3.ab3@8177>      BEQ 'skipo_lf1
00025B6E <AmiBlitz3.ab3@8178>      CMP.w #$d,$8(a2)
00025B72 <AmiBlitz3.ab3@8179>      BEQ 'skipo_lf1
00025B78 <AmiBlitz3.ab3@8182>   JSR evalconst3
00025B7E <AmiBlitz3.ab3@8185>   MOVEA.l asmbuff,A2
00025B82 <AmiBlitz3.ab3@8186>    BEQ.w 'oko
00025B86 <AmiBlitz3.ab3@8187>   CMP.w #$28,D0
00025B8A <AmiBlitz3.ab3@8188>    BEQ.w 'oko
00025B8E <AmiBlitz3.ab3@8189>   CMP.w #$2C,D0
00025B92 <AmiBlitz3.ab3@8190>    BEQ.w 'oko
00025B96 <AmiBlitz3.ab3@8191>  BRA.w syntaxerr
00025B9E <AmiBlitz3.ab3@8194>   MOVE.b #1,iee
00025BA2 <AmiBlitz3.ab3@8195>  BRA 'skipo_lf2
00025BA6 <AmiBlitz3.ab3@8198>   MOVEA.l $4(A2),A1
00025BAA <AmiBlitz3.ab3@8200>   MOVE.w $8(A2),D1                                         ;labelmode
00025BAE <AmiBlitz3.ab3@8201>   CMP.w #$5,D1
00025BB2 <AmiBlitz3.ab3@8202>    BNE.w 'notdan
00025BB6 <AmiBlitz3.ab3@8205>    BSR.w chkword                                           ;word
00025BB8 <AmiBlitz3.ab3@8208>   MOVE.w D3,(A1)
00025BBC <AmiBlitz3.ab3@8209>  BRA.w 'next
00025BC0 <AmiBlitz3.ab3@8212>   CMP.w #$6,D1
00025BC4 <AmiBlitz3.ab3@8213>    BNE.w 'notdanxi
00025BC8 <AmiBlitz3.ab3@8216>    BSR.w chkbyte                                           ;byte
00025BCC <AmiBlitz3.ab3@8219>   MOVE.b D3,$1(A1)
00025BD0 <AmiBlitz3.ab3@8220>  BRA.w 'next
00025BD4 <AmiBlitz3.ab3@8223>    CMP.w #$11,D1                                           ;byte
00025BD8 <AmiBlitz3.ab3@8224>    BEQ.w 'isbyte2
00025BDC <AmiBlitz3.ab3@8225>    CMP.w #$c,d1
00025BE0 <AmiBlitz3.ab3@8226>    BEQ 'single1
00025BE4 <AmiBlitz3.ab3@8227>    CMP.w #$d,d1
00025BE8 <AmiBlitz3.ab3@8228>    BEQ 'double1
00025BEC <AmiBlitz3.ab3@8229>   CMP.w #$7,D1
00025BF0 <AmiBlitz3.ab3@8230>    BEQ.w 'word                                             ;word
00025BF4 <AmiBlitz3.ab3@8231>   CMP.w #$8,D1
00025BF8 <AmiBlitz3.ab3@8232>    BNE.w 'notabsl
00025BFE <AmiBlitz3.ab3@8235>   MOVE.w asmtype,D1                                        ;long
00025C02 <AmiBlitz3.ab3@8236>    BEQ.w 'notpcrel
00025C06 <AmiBlitz3.ab3@8237>      BSR.w asmoff
00025C08 <AmiBlitz3.ab3@8240>   MOVE.l D3,(A1)
00025C0C <AmiBlitz3.ab3@8241>  BRA.w 'next
00025C12 <AmiBlitz3.ab3@8244>   fmove.s fp0,0(a1)
00025C16 <AmiBlitz3.ab3@8245>  BRA.w 'next
00025C1C <AmiBlitz3.ab3@8248>   fmove.d fp0,0(a1)
00025C20 <AmiBlitz3.ab3@8249>  BRA.w 'next
00025C24 <AmiBlitz3.ab3@8252>   CMP.w #$9,D1
00025C28 <AmiBlitz3.ab3@8253>    BNE.w 'notdpc
00025C2A <AmiBlitz3.ab3@8254>   SUB.l A1,D3                                              ;branchword
00025C2E <AmiBlitz3.ab3@8255>    BSR.w chkword
00025C30 <AmiBlitz3.ab3@8256>   MOVE.w D3,(A1)
00025C34 <AmiBlitz3.ab3@8257>  BRA.w 'next
00025C38 <AmiBlitz3.ab3@8260>   CMP.w #$A,D1
00025C3C <AmiBlitz3.ab3@8261>    BNE.w 'imm
00025C3E <AmiBlitz3.ab3@8262>   SUB.l A1,D3                                              ;branchbyte
00025C42 <AmiBlitz3.ab3@8263>  BRA.w 'isbyte
00025C46 <AmiBlitz3.ab3@8266>   CMP.w #$11,d1
00025C4A <AmiBlitz3.ab3@8267>   BLE 'imm_org
00025C4C <AmiBlitz3.ab3@8268>   MOVE.l a3,-(a7)
00025C52 <AmiBlitz3.ab3@8269>   LEA pluginbase,a3
00025C56 <AmiBlitz3.ab3@8270>   MOVE.l 8(a2),a0
00025C58 <AmiBlitz3.ab3@8271>   JSR (a0)                                                 ;hook
00025C5A <AmiBlitz3.ab3@8272>   MOVE.l (a7)+,a3
00025C5E <AmiBlitz3.ab3@8273>  BRA 'next
00025C62 <AmiBlitz3.ab3@8276>   MOVE.w $A(A2),D0
00025C66 <AmiBlitz3.ab3@8277>    BEQ.w 'noflag
00025C6A <AmiBlitz3.ab3@8278>   CMP.w #$1,D0
00025C6E <AmiBlitz3.ab3@8279>    BEQ.w 'tocount
00025C72 <AmiBlitz3.ab3@8280>   CMP.w #$3,D0
00025C76 <AmiBlitz3.ab3@8281>    BEQ.w 'tomoveq
00025C7A <AmiBlitz3.ab3@8282>   CMP.w #$4,D0
00025C7E <AmiBlitz3.ab3@8283>    BEQ.w 'totrap
00025C82 <AmiBlitz3.ab3@8286>   CMP.w #$B,D1                                             ;long
00025C86 <AmiBlitz3.ab3@8287>    BEQ.w 'isabsl
00025C8A <AmiBlitz3.ab3@8288>  BRA 'word2                                                ;word
00025C90 <AmiBlitz3.ab3@8291>   CMP.l #$F,D3
00025C94 <AmiBlitz3.ab3@8292>    BHI.w illtraperr
00025C96 <AmiBlitz3.ab3@8293>   OR.b D3,-(A1)
00025C9A <AmiBlitz3.ab3@8294>  BRA.w 'next
00025CA0 <AmiBlitz3.ab3@8297>   CMP.l #$8,D3
00025CA4 <AmiBlitz3.ab3@8298>    BHI.w illimmerr
00025CA6 <AmiBlitz3.ab3@8299>   TST.l D3
00025CAA <AmiBlitz3.ab3@8300>    BEQ.w illimmerr
00025CAE <AmiBlitz3.ab3@8301>   ANDI.w #$7,D3
00025CB0 <AmiBlitz3.ab3@8302>   LSL.w #8,D3
00025CB2 <AmiBlitz3.ab3@8303>   LSL.w #1,D3
00025CB4 <AmiBlitz3.ab3@8304>   OR.w D3,-(A1)
00025CB8 <AmiBlitz3.ab3@8305>  BRA.w 'next
00025CBC <AmiBlitz3.ab3@8308>    BSR.w chkbyte
00025CBE <AmiBlitz3.ab3@8309>   MOVE.b D3,-(A1)
00025CC0 <AmiBlitz3.ab3@8312>   MOVEA.l (A2),A2
00025CC4 <AmiBlitz3.ab3@8313>  BRA.w 'loop
00025CCA <AmiBlitz3.ab3@8316>   CLR.w constmode
00025CD0 <AmiBlitz3.ab3@8319>   CLR.b curtemplabel
00025CD2 <AmiBlitz3.ab3@8320> RTS
00025CD4 <AmiBlitz3.ab3@8329>   BTST D3,D6
00025CD8 <AmiBlitz3.ab3@8330>    BEQ.w illeaerr
00025CDC <AmiBlitz3.ab3@8331>    BSR.w makemode
00025CE0 <AmiBlitz3.ab3@8332>   CMP.w #$7,D3
00025CE4 <AmiBlitz3.ab3@8333>    BCS.w 'skip
00025CE6 <AmiBlitz3.ab3@8334>   MOVE.w D3,D2
00025CE8 <AmiBlitz3.ab3@8335>   SUBQ.w #7,D2
00025CEC <AmiBlitz3.ab3@8336>   CMP.w #$5,D2
00025CF0 <AmiBlitz3.ab3@8337>    BCS.w 'skip0
00025CF2 <AmiBlitz3.ab3@8338>   MOVEQ.l #$04,D2
00025CF4 <AmiBlitz3.ab3@8341>   MOVEQ.l #$07,D3
00025CF6 <AmiBlitz3.ab3@8344>   MOVE.b D7,D0
00025CFA <AmiBlitz3.ab3@8345>   ANDI.w #$F,D0
00025CFE <AmiBlitz3.ab3@8346>   CMP.w #$F,D0
00025D02 <AmiBlitz3.ab3@8347>    BEQ.w 'skip2
00025D04 <AmiBlitz3.ab3@8348>   LSL.w D0,D3
00025D06 <AmiBlitz3.ab3@8349>   OR.w D3,D1
00025D08 <AmiBlitz3.ab3@8352>   LSR.w #4,D7
00025D0C <AmiBlitz3.ab3@8353>   ANDI.w #$F,D7
00025D10 <AmiBlitz3.ab3@8354>   CMP.w #$F,D7
00025D14 <AmiBlitz3.ab3@8355>    BEQ.w 'skip3
00025D16 <AmiBlitz3.ab3@8356>   LSL.w D7,D2
00025D18 <AmiBlitz3.ab3@8357>   OR.w D2,D1
00025D1A <AmiBlitz3.ab3@8360> RTS
00025D20 <AmiBlitz3.ab3@8364>   CMP.l #$7F,D3
00025D24 <AmiBlitz3.ab3@8365>    BGT.w illdiserr
00025D2A <AmiBlitz3.ab3@8366>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
00025D2E <AmiBlitz3.ab3@8367>    BLT.w illdiserr
00025D30 <AmiBlitz3.ab3@8368> RTS
00025D36 <AmiBlitz3.ab3@8372>   CMP.l #$7fff,D3
00025D3A <AmiBlitz3.ab3@8373>    BGT.w illdiserr
00025D40 <AmiBlitz3.ab3@8374>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025D44 <AmiBlitz3.ab3@8375>    BLT.w illdiserr
00025D46 <AmiBlitz3.ab3@8376> RTS
00025D48 <AmiBlitz3.ab3@8381>   MOVE.b (a5)+,d0
00025D4A <AmiBlitz3.ab3@8382>   CMP.b d1,d0
00025D4E <AmiBlitz3.ab3@8383>   BEQ 'll10
00025D50 <AmiBlitz3.ab3@8384>   TST.b d0
00025D54 <AmiBlitz3.ab3@8385>   BNE 'll20
00025D56 <AmiBlitz3.ab3@8388>   SUBQ #1,a5
00025D58 <AmiBlitz3.ab3@8389> RTS
00025D5A <AmiBlitz3.ab3@8394>   MOVE.b (a5)+,d0
00025D5E <AmiBlitz3.ab3@8395>   CMP.b #",",d0
00025D62 <AmiBlitz3.ab3@8396>   BEQ 'll10
00025D66 <AmiBlitz3.ab3@8397>   CMP.b #";",d0
00025D6A <AmiBlitz3.ab3@8398>   BEQ 'll10
00025D6E <AmiBlitz3.ab3@8399>  CMP.b #":",d0
00025D72 <AmiBlitz3.ab3@8400>   BEQ 'll10
00025D74 <AmiBlitz3.ab3@8403>   TST.b d0
00025D78 <AmiBlitz3.ab3@8404>   BNE 'll20
00025D7A <AmiBlitz3.ab3@8407>   SUBQ #1,a5
00025D7C <AmiBlitz3.ab3@8408> RTS
00025D7E <AmiBlitz3.ab3@8412>   ADD.l a2,d1
00025D84 <AmiBlitz3.ab3@8413>   LEA tempspace,a1
00025D86 <AmiBlitz3.ab3@8414>   MOVE.l d1,a0
00025D88 <AmiBlitz3.ab3@8417>   MOVE.b (a0)+,(a1)+
00025D8C <AmiBlitz3.ab3@8418>   BNE.s 'l10
00025D8E <AmiBlitz3.ab3@8419>   SUBQ.l #1,a0
00025D90 <AmiBlitz3.ab3@8420>   SUBQ.l #1,a1
00025D92 <AmiBlitz3.ab3@8423>   MOVE.b (a5)+,(a1)+
00025D96 <AmiBlitz3.ab3@8424>   BNE.s 'l20
00025D98 <AmiBlitz3.ab3@8425>   CLR.b (a1)
00025D9E <AmiBlitz3.ab3@8426>   LEA tempspace,a5
00025DA0 <AmiBlitz3.ab3@8427> RTS
00025DA4 <AmiBlitz3.ab3@8431>   MOVEM.l D1-D2/A0,-(A7)
00025DA6 <AmiBlitz3.ab3@8432>   MOVE.l d0,d2
00025DA8 <AmiBlitz3.ab3@8433>   MOVEQ #0,d1
00025DAA <AmiBlitz3.ab3@8434>   MOVE.l a5,a4
00025DAC <AmiBlitz3.ab3@8437>   ADDQ.l #1,d1
00025DAE <AmiBlitz3.ab3@8438>   MOVE.b (a5)+,d0
00025DB2 <AmiBlitz3.ab3@8439>   CMP.b #",",d0
00025DB6 <AmiBlitz3.ab3@8440>   BEQ 'll10
00025DBA <AmiBlitz3.ab3@8441>   CMP.b #";",d0
00025DBE <AmiBlitz3.ab3@8442>   BEQ 'll10
00025DC2 <AmiBlitz3.ab3@8443>   CMP.b #":",d0
00025DC6 <AmiBlitz3.ab3@8444>   BEQ 'll10
00025DCA <AmiBlitz3.ab3@8445>   CMP.b #"(",d0
00025DCE <AmiBlitz3.ab3@8446>   BEQ 'll10
00025DD0 <AmiBlitz3.ab3@8447>   TST.b d0
00025DD4 <AmiBlitz3.ab3@8448>   BNE 'll20
00025DD6 <AmiBlitz3.ab3@8451>   SUBQ #1,a5
00025DDA <AmiBlitz3.ab3@8452>   CMP.b #"'",(a4)
00025DDE <AmiBlitz3.ab3@8453>   BEQ 'llocal
00025DE4 <AmiBlitz3.ab3@8454>   TST.w inmacro
00025DE8 <AmiBlitz3.ab3@8455>   BNE 'lmacro
00025DEA <AmiBlitz3.ab3@8456>   MOVEQ.l #$14+4,D0
00025DEC <AmiBlitz3.ab3@8457>   ADD.l d1,d0
00025DEE <AmiBlitz3.ab3@8458>   MOVE.l d1,-(a7)
00025DF0 <AmiBlitz3.ab3@8459>   MOVEQ.l #$01,D1
00025DF6 <AmiBlitz3.ab3@8460>   MOVEA.l _execbase,A6
00025DFC <AmiBlitz3.ab3@8461>   MOVE.l mempool2,a0
00025E00 <AmiBlitz3.ab3@8462>   JSR _AllocPooled(a6)
00025E02 <AmiBlitz3.ab3@8464>   MOVE.l (a7)+,d1
00025E04 <AmiBlitz3.ab3@8465>   TST.l d0
00025E08 <AmiBlitz3.ab3@8466>   BEQ nomemory
00025E0A <AmiBlitz3.ab3@8467>   MOVEA.l D0,A0
00025E12 <AmiBlitz3.ab3@8469>   MOVE.w linenumat+2,$A(A0)
00025E18 <AmiBlitz3.ab3@8471>   MOVE.l templabel,(A0)
00025E1E <AmiBlitz3.ab3@8472>   MOVE.l A0,templabel
00025E26 <AmiBlitz3.ab3@8473>   MOVE.l destpointer,$4(A0)
00025E2A <AmiBlitz3.ab3@8474>   MOVE.l d2,$8(A0)
00025E2E <AmiBlitz3.ab3@8475>   LEA $E(A0),A0
00025E32 <AmiBlitz3.ab3@8476>   MOVE.b #$14,(A0)+
00025E34 <AmiBlitz3.ab3@8477>   CLR.b (a0)+
00025E36 <AmiBlitz3.ab3@8479>   MOVE.l a0,d2
00025E38 <AmiBlitz3.ab3@8480>   ADDQ.l #4,d2
00025E3A <AmiBlitz3.ab3@8481>   MOVE.l d2,(a0)+
00025E3C <AmiBlitz3.ab3@8484>   MOVE.b (a4)+,(a0)+
00025E3E <AmiBlitz3.ab3@8485>   SUBQ.l #1,d1
00025E42 <AmiBlitz3.ab3@8486>   BNE 'lc1
00025E44 <AmiBlitz3.ab3@8487>   CLR.b (a0)+
00025E4A <AmiBlitz3.ab3@8488>   MOVE.w linenumat,(a0)
00025E4E <AmiBlitz3.ab3@8489>   MOVEM.l (A7)+,D1-D2/A0
00025E50 <AmiBlitz3.ab3@8490>  RTS
00025E52 <AmiBlitz3.ab3@8493>   MOVEQ.l #$10+2,D0
00025E54 <AmiBlitz3.ab3@8494>   ADD.l d1,d0
00025E58 <AmiBlitz3.ab3@8495>   MOVEM.l a4/d3,-(a7)
00025E5A <AmiBlitz3.ab3@8496>   MOVE.l d1,d3
00025E5C <AmiBlitz3.ab3@8497>   MOVEQ.l #$01,D1
00025E62 <AmiBlitz3.ab3@8498>   MOVEA.l _execbase,A6
00025E68 <AmiBlitz3.ab3@8499>   MOVE.l mempool2,a0
00025E6C <AmiBlitz3.ab3@8500>   JSR _AllocPooled(a6)
00025E6E <AmiBlitz3.ab3@8502>   TST.l d0
00025E72 <AmiBlitz3.ab3@8503>   BEQ nomemory
00025E74 <AmiBlitz3.ab3@8504>   MOVEA.l D0,A0
00025E7C <AmiBlitz3.ab3@8507>   MOVE.w linenumat+2,$C(A0)
00025E82 <AmiBlitz3.ab3@8508>   MOVE.l templabel,(A0)
00025E88 <AmiBlitz3.ab3@8509>   MOVE.l A0,templabel
00025E90 <AmiBlitz3.ab3@8510>   MOVE.l destpointer,$4(A0)
00025E94 <AmiBlitz3.ab3@8511>   MOVE.l d2,$8(A0)
00025E98 <AmiBlitz3.ab3@8512>   LEA $E(A0),A0
00025E9A <AmiBlitz3.ab3@8513>   MOVE.b d3,(A0)+
00025EA0 <AmiBlitz3.ab3@8514>   ADD.b #$10,-1(a0)
00025EA4 <AmiBlitz3.ab3@8515>   MOVE.b #$1,(a0)+
00025EA6 <AmiBlitz3.ab3@8516>   SUBQ.w #1,d3
00025EA8 <AmiBlitz3.ab3@8519>   MOVE.b (a4)+,(a0)+
00025EAA <AmiBlitz3.ab3@8520>   SUBQ.l #1,d3
00025EAE <AmiBlitz3.ab3@8521>   BNE.s 'lm2
00025EB0 <AmiBlitz3.ab3@8522>   CLR.b (a0)+
00025EB6 <AmiBlitz3.ab3@8523>   MOVE.w linenumat,(a0)
00025EBA <AmiBlitz3.ab3@8524>   MOVEM.l (a7)+,d3/a4
00025EBE <AmiBlitz3.ab3@8525>   MOVEM.l (A7)+,D1-D2/A0
00025EC0 <AmiBlitz3.ab3@8526>  RTS
00025EC6 <AmiBlitz3.ab3@8529>   LEA lastgloballabel,a1
00025EC8 <AmiBlitz3.ab3@8532>   ADDQ.l #1,d1
00025ECA <AmiBlitz3.ab3@8533>   TST.b (a1)+
00025ECE <AmiBlitz3.ab3@8534>   BNE.s 'll11
00025ED0 <AmiBlitz3.ab3@8535>   MOVEQ.l #$10+2,D0
00025ED2 <AmiBlitz3.ab3@8536>   ADD.l d1,d0
00025ED6 <AmiBlitz3.ab3@8537>   MOVEM.l a4/d3,-(a7)
00025ED8 <AmiBlitz3.ab3@8538>   MOVE.l d1,d3
00025EDA <AmiBlitz3.ab3@8539>   MOVEQ.l #$01,D1
00025EE0 <AmiBlitz3.ab3@8540>   MOVEA.l _execbase,A6
00025EE6 <AmiBlitz3.ab3@8541>   MOVE.l mempool2,a0
00025EEA <AmiBlitz3.ab3@8542>   JSR _AllocPooled(a6)
00025EEC <AmiBlitz3.ab3@8544>   TST.l d0
00025EF0 <AmiBlitz3.ab3@8545>   BEQ nomemory
00025EF2 <AmiBlitz3.ab3@8546>   MOVEA.l D0,A0
00025EFA <AmiBlitz3.ab3@8549>   MOVE.w linenumat+2,$C(A0)
00025F00 <AmiBlitz3.ab3@8550>   MOVE.l templabel,(A0)
00025F06 <AmiBlitz3.ab3@8551>   MOVE.l A0,templabel
00025F0E <AmiBlitz3.ab3@8552>   MOVE.l destpointer,$4(A0)
00025F12 <AmiBlitz3.ab3@8553>   MOVE.l d2,$8(A0)
00025F16 <AmiBlitz3.ab3@8554>   LEA $E(A0),A0
00025F18 <AmiBlitz3.ab3@8555>   MOVE.b d3,(A0)+
00025F1E <AmiBlitz3.ab3@8556>   ADD.b #$10,-1(a0)
00025F22 <AmiBlitz3.ab3@8557>   MOVE.b #$1,(a0)+
00025F24 <AmiBlitz3.ab3@8558>   SUBQ.w #1,d3
00025F2A <AmiBlitz3.ab3@8559>   LEA lastgloballabel,a1
00025F2C <AmiBlitz3.ab3@8562>   SUBQ.l #1,d3
00025F2E <AmiBlitz3.ab3@8563>   MOVE.b (a1)+,(a0)+
00025F32 <AmiBlitz3.ab3@8564>   BNE.s 'lm3
00025F34 <AmiBlitz3.ab3@8565>   SUBQ.l #1,a0
00025F36 <AmiBlitz3.ab3@8568>   MOVE.b (a4)+,(a0)+
00025F38 <AmiBlitz3.ab3@8569>   SUBQ.l #1,d3
00025F3C <AmiBlitz3.ab3@8570>   BNE.s 'lm1
00025F3E <AmiBlitz3.ab3@8571>   CLR.b (a0)+
00025F44 <AmiBlitz3.ab3@8572>   MOVE.w linenumat,(a0)
00025F48 <AmiBlitz3.ab3@8573>   MOVEM.l (a7)+,d3/a4
00025F4C <AmiBlitz3.ab3@8574>   MOVEM.l (A7)+,D1-D2/A0
00025F4E <AmiBlitz3.ab3@8575> RTS
00025F78 <AmiBlitz3.ab3@8579>   !basic
00025FDA <AmiBlitz3.ab3@8580>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025FEC <AmiBlitz3.ab3@8581>   loop Delay_ 1
00025FF2 <AmiBlitz3.ab3@8582> Goto loop
00025FF6 <AmiBlitz3.ab3@8586>   MOVEM.l D0-D2/A0,-(A7)
00025FFA <AmiBlitz3.ab3@8587>   MOVE.w $E(A0),-(A7)
00025FFE <AmiBlitz3.ab3@8588>    BPL.w 'ok
00026000 <AmiBlitz3.ab3@8589>   CLR.w (A7)
00026002 <AmiBlitz3.ab3@8592>   MOVE.l A1,-(A7)
00026004 <AmiBlitz3.ab3@8593>   MOVEQ.l #$10+2,D0
0002600A <AmiBlitz3.ab3@8594>   ADD.w asmlen,D0
0002600C <AmiBlitz3.ab3@8595>   MOVE.w D0,D2
0002600E <AmiBlitz3.ab3@8596>   MOVEQ.l #$01,D1
00026014 <AmiBlitz3.ab3@8597>   MOVEA.l _execbase,A6
0002601A <AmiBlitz3.ab3@8598>   MOVE.l mempool2,a0
0002601E <AmiBlitz3.ab3@8599>   JSR _AllocPooled(a6)
00026020 <AmiBlitz3.ab3@8601>   MOVEA.l D0,A0
00026028 <AmiBlitz3.ab3@8604>   MOVE.w linenumat+2,$C(A0)
0002602E <AmiBlitz3.ab3@8605>   MOVE.l templabel,(A0)
00026034 <AmiBlitz3.ab3@8606>   MOVE.l A0,templabel
00026038 <AmiBlitz3.ab3@8607>   MOVE.l (A7),$4(A0)
0002603C <AmiBlitz3.ab3@8608>   MOVE.w d3,$8(A0)
00026042 <AmiBlitz3.ab3@8609>   MOVE.w $4(A7),$A(A0)
00026046 <AmiBlitz3.ab3@8610>   LEA $E(A0),A0
00026048 <AmiBlitz3.ab3@8611>   MOVE.b D2,(A0)+                                           ;length
0002604E <AmiBlitz3.ab3@8612>   MOVEA.l asmbuff,A1
00026050 <AmiBlitz3.ab3@8613>   ADDQ.w #1,A1
00026052 <AmiBlitz3.ab3@8614>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00026056 <AmiBlitz3.ab3@8615>    BNE.w 'loop
00026058 <AmiBlitz3.ab3@8616>   MOVE.l (A1)+,(A0)+
0002605E <AmiBlitz3.ab3@8617>   MOVE.w linenumat,(a0)
00026062 <AmiBlitz3.ab3@8618>  BRA.w 'loopdone
00026064 <AmiBlitz3.ab3@8621>    MOVE.b (A1)+,(A0)+
00026068 <AmiBlitz3.ab3@8622>    BNE.w 'loop
0002606E <AmiBlitz3.ab3@8623>    MOVE.w linenumat,(a0)
00026070 <AmiBlitz3.ab3@8626>   MOVEA.l (A7)+,A1
00026072 <AmiBlitz3.ab3@8627>   ADDQ.w #2,A7
00026076 <AmiBlitz3.ab3@8628>   MOVEM.l (A7)+,D0-D2/A0
00026078 <AmiBlitz3.ab3@8629> RTS
0002607C <AmiBlitz3.ab3@8633>   CMP.w #$5,D3
00026080 <AmiBlitz3.ab3@8634>    BCS.w 'done
00026084 <AmiBlitz3.ab3@8635>   CMP.w #$B,D3
00026088 <AmiBlitz3.ab3@8636>    BHI.w 'done2
0002608C <AmiBlitz3.ab3@8637>    BEQ.w 'imm
00026090 <AmiBlitz3.ab3@8638>    BSR.w insasm
00026094 <AmiBlitz3.ab3@8639>   CMP.w #$5,D3
00026098 <AmiBlitz3.ab3@8640>    BEQ.w 'word
0002609C <AmiBlitz3.ab3@8641>   CMP.w #$6,D3
000260A0 <AmiBlitz3.ab3@8642>    BEQ.w 'dxi
000260A4 <AmiBlitz3.ab3@8643>   CMP.w #$7,D3
000260A8 <AmiBlitz3.ab3@8644>    BEQ.w 'word
000260AC <AmiBlitz3.ab3@8645>   CMP.w #$8,D3
000260B0 <AmiBlitz3.ab3@8646>    BEQ.w 'long
000260B4 <AmiBlitz3.ab3@8647>   CMP.w #$9,D3
000260B8 <AmiBlitz3.ab3@8648>    BEQ.w 'word
000260BE <AmiBlitz3.ab3@8652>   CMPA.l destbufferend,A1
000260C2 <AmiBlitz3.ab3@8653>    BCS.w 'ok7
000260C4 <AmiBlitz3.ab3@8654>   ADDQ.w #2,A1
000260C6 <AmiBlitz3.ab3@8655>  RTS
000260C8 <AmiBlitz3.ab3@8658>   MOVE.w D4,(A1)+
000260CA <AmiBlitz3.ab3@8659>  RTS
000260D2 <AmiBlitz3.ab3@8662>   CMPI.w #$8,asmsize
000260D6 <AmiBlitz3.ab3@8663>    BCC.w 'immlong
000260D8 <AmiBlitz3.ab3@8664>   MOVEQ.l #$10,D3
000260DC <AmiBlitz3.ab3@8665>    BSR.w insasm
000260DE <AmiBlitz3.ab3@8666>   MOVEQ.l #$0B,D3
000260E2 <AmiBlitz3.ab3@8667>  BRA.w 'word
000260E6 <AmiBlitz3.ab3@8670>   BSR.w insasm
000260E8 <AmiBlitz3.ab3@8673>   ADDQ.w #2,A1
000260EA <AmiBlitz3.ab3@8676>   ADDQ.w #2,A1
000260EC <AmiBlitz3.ab3@8677>  RTS
000260F0 <AmiBlitz3.ab3@8680>   CMP.w #$F,D3
000260F4 <AmiBlitz3.ab3@8681>    BNE.w 'done
000260FA <AmiBlitz3.ab3@8682>   CMPA.l destbufferend,A1
000260FE <AmiBlitz3.ab3@8683>    BCS.w 'ok3
00026100 <AmiBlitz3.ab3@8684>   ADDQ.w #2,A1
00026102 <AmiBlitz3.ab3@8685>   ADDQ.w #4,A7
00026104 <AmiBlitz3.ab3@8686>  RTS
00026106 <AmiBlitz3.ab3@8689>   MOVE.w D2,(A1)+
00026108 <AmiBlitz3.ab3@8690>   ADDQ.w #4,A7
0002610A <AmiBlitz3.ab3@8693> RTS
0002610E <AmiBlitz3.ab3@8702>   BSR.w storeloc
00026118 <AmiBlitz3.ab3@8704>   MOVE.l linenumat,oldline
0002611A <AmiBlitz3.ab3@8706>   MOVEQ.l #$00,D1
0002611E <AmiBlitz3.ab3@8707>    BSR.w get1bytemain    ;eol?
00026122 <AmiBlitz3.ab3@8708>    BEQ.w 'done
00026124 <AmiBlitz3.ab3@8709>   MOVEQ.l #$00,D3
00026128 <AmiBlitz3.ab3@8710>  BRA.w 'skiphelp
0002612C <AmiBlitz3.ab3@8713>    BSR.w get1bytemain
00026130 <AmiBlitz3.ab3@8714>    BNE.w 'skip
00026132 <AmiBlitz3.ab3@8718>   TST.w D3
00026136 <AmiBlitz3.ab3@8719>    BNE.w brackets_                                         ;syntax error brackets
0002613A <AmiBlitz3.ab3@8720>  BRA.w 'done2
00026140 <AmiBlitz3.ab3@8723>    MOVE.w instringon,D4
00026144 <AmiBlitz3.ab3@8726>     BEQ 'skiphelp
00026146 <AmiBlitz3.ab3@8729>     MOVEQ #0,d0
00026148 <AmiBlitz3.ab3@8730>      MOVE.b (a5)+,d0                                       ;fix "ue"
0002614E <AmiBlitz3.ab3@8731>      MOVE.w d0,lastchar
00026152 <AmiBlitz3.ab3@8732>      BEQ 'ready
00026156 <AmiBlitz3.ab3@8733>      CMP.b #$22,d0
0002615A <AmiBlitz3.ab3@8734>      BNE 'l1
00026160 <AmiBlitz3.ab3@8735>      NOT.w instringon
00026164 <AmiBlitz3.ab3@8736>  BRA 'loop
00026168 <AmiBlitz3.ab3@8741>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
0002616C <AmiBlitz3.ab3@8742>            BNE 'l10
00026170 <AmiBlitz3.ab3@8743>            CMP.b #"@",(a5)
00026174 <AmiBlitz3.ab3@8744>            BNE 'l10
0002617A <AmiBlitz3.ab3@8747>            TST.w ininclude
0002617E <AmiBlitz3.ab3@8748>            BNE 'inc
00026184 <AmiBlitz3.ab3@8749>            MOVE.l sourceline3,a5
0002618A <AmiBlitz3.ab3@8750>            CMP.l #0,a5
0002618E <AmiBlitz3.ab3@8751>            BNE 'l11t
00026194 <AmiBlitz3.ab3@8752>            MOVEA.l sourceline,A5
00026196 <AmiBlitz3.ab3@8755>            MOVEA.l (A5),A5
0002619C <AmiBlitz3.ab3@8756>            CMP.l #0,a5
000261A0 <AmiBlitz3.ab3@8757>            BEQ 'done2
000261A6 <AmiBlitz3.ab3@8758>            MOVE.l a5,sourceline3
000261AA <AmiBlitz3.ab3@8759>            LEA $9(A5),A5
000261AE <AmiBlitz3.ab3@8760>   BRA 'l11
000261B0 <AmiBlitz3.ab3@8763>            ADDQ.l #1,a5
000261B2 <AmiBlitz3.ab3@8764>            TST.b (a5)
000261B6 <AmiBlitz3.ab3@8765>            BNE 'inc
000261B8 <AmiBlitz3.ab3@8769>            ADDQ.l #1,a5
000261BA <AmiBlitz3.ab3@8770>            TST.b (a5)
000261BE <AmiBlitz3.ab3@8771>            BEQ illeolerr
000261C0 <AmiBlitz3.ab3@8772>            MOVE.l a5,-(a7)
000261C4 <AmiBlitz3.ab3@8775>       CMP.b #" ",(a5)+
000261C8 <AmiBlitz3.ab3@8776>       BEQ 'l110
000261CE <AmiBlitz3.ab3@8777>        CMP.b #";",-1(a5)
000261D0 <AmiBlitz3.ab3@8778>        MOVE.l (a7)+,a5
000261D4 <AmiBlitz3.ab3@8779>        BEQ 'l111
000261D8 <AmiBlitz3.ab3@8780>   BRA 'loop
000261DC <AmiBlitz3.ab3@8784>    CMP.w #$29,D0      ;')'
000261E0 <AmiBlitz3.ab3@8785>    BNE.w 'skip2
000261E2 <AmiBlitz3.ab3@8786>   TST.w D3
000261E6 <AmiBlitz3.ab3@8787>    BEQ.w 'done2
000261E8 <AmiBlitz3.ab3@8790>   SUBQ.w #1,D3
000261EC <AmiBlitz3.ab3@8791>  BRA.w 'loop
000261F0 <AmiBlitz3.ab3@8794>    CMP.w #$7D,D0      ;'}'
000261F4 <AmiBlitz3.ab3@8795>    BEQ.w 'skip3
000261F8 <AmiBlitz3.ab3@8796>   CMP.w #$28,D0       ;'('
000261FC <AmiBlitz3.ab3@8797>    BNE.w 'skip4a
000261FE <AmiBlitz3.ab3@8800>    ADDQ.w #1,D3
00026202 <AmiBlitz3.ab3@8801>  BRA.w 'loop
00026206 <AmiBlitz3.ab3@8804>   CMP.w #$7B,D0        ;'{'
0002620A <AmiBlitz3.ab3@8805>    BEQ.w 'skip4
0002620E <AmiBlitz3.ab3@8806>   CMP.w #$2C,D0        ;','
00026212 <AmiBlitz3.ab3@8807>    BNE.w 'loop
00026214 <AmiBlitz3.ab3@8808>   TST.w D3
00026218 <AmiBlitz3.ab3@8809>    BNE.w 'loop
0002621A <AmiBlitz3.ab3@8810>   ADDQ.w #1,D1
0002621E <AmiBlitz3.ab3@8811>  BRA.w 'loop
00026220 <AmiBlitz3.ab3@8814>   ADDQ.w #1,D1
00026226 <AmiBlitz3.ab3@8818>   CLR.l sourceline3
00026230 <AmiBlitz3.ab3@8819>   MOVE.l oldline,linenumat
00026234 <AmiBlitz3.ab3@8821> BRA.w resloc
0002623A <AmiBlitz3.ab3@8834>    CLR.w numreps
0002623C <AmiBlitz3.ab3@8835>   MOVE.w D1,D0
00026240 <AmiBlitz3.ab3@8836>   ANDI.w #$FF00,D0
00026244 <AmiBlitz3.ab3@8837>    BEQ.w 'noreps
00026246 <AmiBlitz3.ab3@8838>   LSR.w #8,D0
00026248 <AmiBlitz3.ab3@8839>   LSR.w #4,D0           ;d0= start of reps
0002624C <AmiBlitz3.ab3@8840>    BEQ.w 'skip
0002624E <AmiBlitz3.ab3@8841>   SUB.b D0,D1           ;new number to fetch
00026258 <AmiBlitz3.ab3@8843>    MOVE.w regnum,regnumfunc
0002625E <AmiBlitz3.ab3@8844>    MOVE.b funcparloop,-(a7)
00026266 <AmiBlitz3.ab3@8845>    MOVE.b #0,funcparloop
0002626C <AmiBlitz3.ab3@8846>    MOVE.l leftsidetype,-(a7)
00026272 <AmiBlitz3.ab3@8847>    MOVE.l rightsidetype,-(a7)
00026278 <AmiBlitz3.ab3@8848>    MOVE.w leftsideflagmask,-(a7)
0002627E <AmiBlitz3.ab3@8849>    MOVE.w rightsideflagmask,-(a7)
00026284 <AmiBlitz3.ab3@8850>    CLR.l leftsidetype
0002628A <AmiBlitz3.ab3@8851>    CLR.l rightsidetype
00026290 <AmiBlitz3.ab3@8852>    CLR.w leftsideflagmask
00026296 <AmiBlitz3.ab3@8853>    CLR.w rightsideflagmask
0002629C <AmiBlitz3.ab3@8854>    MOVE.b blitzparloop,-(a7)
000262A4 <AmiBlitz3.ab3@8855>    MOVE.b #1,blitzparloop
000262A8 <AmiBlitz3.ab3@8857>    BSR.w fetchpees2      ;fetch first parms
000262AE <AmiBlitz3.ab3@8859>    MOVE.b (a7)+,blitzparloop
000262B4 <AmiBlitz3.ab3@8860>    MOVE.w (a7)+,rightsideflagmask
000262BA <AmiBlitz3.ab3@8861>    MOVE.w (a7)+,leftsideflagmask
000262C0 <AmiBlitz3.ab3@8862>    MOVE.l (a7)+,rightsidetype
000262C6 <AmiBlitz3.ab3@8863>    MOVE.l (a7)+,leftsidetype
000262CC <AmiBlitz3.ab3@8864>    MOVE.b (a7)+,funcparloop
000262D0 <AmiBlitz3.ab3@8866>   CMP.w #$2C,D0          ;','
000262D4 <AmiBlitz3.ab3@8867>    BNE.w syntaxerr
000262D6 <AmiBlitz3.ab3@8872>   MOVE.w D1,D2
000262D8 <AmiBlitz3.ab3@8873>   LSR.w #8,D2
000262DC <AmiBlitz3.ab3@8874>   ANDI.w #$7,D2         ;# repeatable....
000262DE <AmiBlitz3.ab3@8877>    CMP.b D2,D1
000262E2 <AmiBlitz3.ab3@8878>    BCS.w 'repsdone      ;all reps done....
000262E4 <AmiBlitz3.ab3@8879>   SUB.b D2,D1
000262E8 <AmiBlitz3.ab3@8880>   MOVEM.l D2/A2,-(A7)
000262EA <AmiBlitz3.ab3@8881>   MOVE.w D2,D0
000262F0 <AmiBlitz3.ab3@8883>   MOVE.b funcparloop,-(a7)
000262F8 <AmiBlitz3.ab3@8884>   MOVE.b #0,funcparloop
000262FE <AmiBlitz3.ab3@8885>   MOVE.l leftsidetype,-(a7)
00026304 <AmiBlitz3.ab3@8886>   MOVE.l rightsidetype,-(a7)
0002630A <AmiBlitz3.ab3@8887>   MOVE.w leftsideflagmask,-(a7)
00026310 <AmiBlitz3.ab3@8888>   MOVE.w rightsideflagmask,-(a7)
00026316 <AmiBlitz3.ab3@8889>   CLR.l leftsidetype
0002631C <AmiBlitz3.ab3@8890>   CLR.l rightsidetype
00026322 <AmiBlitz3.ab3@8891>   CLR.w leftsideflagmask
00026328 <AmiBlitz3.ab3@8892>   CLR.w rightsideflagmask
0002632E <AmiBlitz3.ab3@8893>   MOVE.b blitzparloop,-(a7)
00026336 <AmiBlitz3.ab3@8894>   MOVE.b #1,blitzparloop
0002633A <AmiBlitz3.ab3@8896>   BSR.w fetchpees4
00026340 <AmiBlitz3.ab3@8898>   MOVE.b (a7)+,blitzparloop
00026346 <AmiBlitz3.ab3@8899>   MOVE.w (a7)+,rightsideflagmask
0002634C <AmiBlitz3.ab3@8900>   MOVE.w (a7)+,leftsideflagmask
00026352 <AmiBlitz3.ab3@8901>   MOVE.l (a7)+,rightsidetype
00026358 <AmiBlitz3.ab3@8902>   MOVE.l (a7)+,leftsidetype
0002635E <AmiBlitz3.ab3@8903>   MOVE.b (a7)+,funcparloop
00026362 <AmiBlitz3.ab3@8905>   MOVEM.l (A7)+,D2/A2
00026368 <AmiBlitz3.ab3@8906>   ADDQ.w #1,numreps
0002636C <AmiBlitz3.ab3@8907>  BRA.w 'rloop
00026372 <AmiBlitz3.ab3@8910>    MOVE.w numreps,D3
00026376 <AmiBlitz3.ab3@8911>    BEQ.w syntaxerr
00026378 <AmiBlitz3.ab3@8912>   ADDA.w D2,A2
0002637C <AmiBlitz3.ab3@8913>   ANDI.w #$FF,D1
00026380 <AmiBlitz3.ab3@8914>    BEQ.w 'done
00026384 <AmiBlitz3.ab3@8921>   CMP.w #$2C,D0       ;','
00026388 <AmiBlitz3.ab3@8922>    BNE.w syntaxerr
0002638A <AmiBlitz3.ab3@8925>    MOVE.w D1,D0
0002638E <AmiBlitz3.ab3@8926>    BNE.w 'fetchpees2b
00026390 <AmiBlitz3.ab3@8929>  RTS
00026396 <AmiBlitz3.ab3@8933>   MOVE.b funcparloop,-(a7)
0002639C <AmiBlitz3.ab3@8934>   MOVE.l leftsidetype,-(a7)
000263A2 <AmiBlitz3.ab3@8935>   MOVE.l rightsidetype,-(a7)
000263A8 <AmiBlitz3.ab3@8936>   MOVE.w leftsideflagmask,-(a7)
000263AE <AmiBlitz3.ab3@8937>   MOVE.w rightsideflagmask,-(a7)
000263B4 <AmiBlitz3.ab3@8938>   CLR.l leftsidetype
000263BA <AmiBlitz3.ab3@8939>   CLR.l rightsidetype
000263C0 <AmiBlitz3.ab3@8940>   CLR.w leftsideflagmask
000263C6 <AmiBlitz3.ab3@8941>   CLR.w rightsideflagmask
000263CE <AmiBlitz3.ab3@8942>   MOVE.b #0,funcparloop
000263D4 <AmiBlitz3.ab3@8943>   MOVE.b blitzparloop,-(a7)
000263DC <AmiBlitz3.ab3@8944>   MOVE.b #1,blitzparloop
000263E0 <AmiBlitz3.ab3@8945>   BSR.w fetchpees2
000263E6 <AmiBlitz3.ab3@8946>   MOVE.b (a7)+,blitzparloop
000263EC <AmiBlitz3.ab3@8947>   MOVE.w (a7)+,rightsideflagmask
000263F2 <AmiBlitz3.ab3@8948>   MOVE.w (a7)+,leftsideflagmask
000263F8 <AmiBlitz3.ab3@8949>   MOVE.l (a7)+,rightsidetype
000263FE <AmiBlitz3.ab3@8950>   MOVE.l (a7)+,leftsidetype
00026404 <AmiBlitz3.ab3@8951>   MOVE.b (a7)+,funcparloop
00026406 <AmiBlitz3.ab3@8952> RTS
0002640A <AmiBlitz3.ab3@8956> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
0002640C <AmiBlitz3.ab3@8959> partostack:  Ds.w 1                                        ;pmode org source
0002640E <AmiBlitz3.ab3@8963>   MOVEQ.l #$01,D2
00026412 <AmiBlitz3.ab3@8964> BRA.w fetchpees3
00026414 <AmiBlitz3.ab3@8967>   MOVEQ.l #$00,D2
00026418 <AmiBlitz3.ab3@8970>   ANDI.w #$F,D0
0002641E <AmiBlitz3.ab3@8978>   CLR.w parnum
00026420 <AmiBlitz3.ab3@8979>   MOVE.w D1,-(A7)
00026424 <AmiBlitz3.ab3@8980>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
0002642A <AmiBlitz3.ab3@8981>   MOVE.w D2,partostack
0002642C <AmiBlitz3.ab3@8982>   MOVE.w D0,-(A7)
00026430 <AmiBlitz3.ab3@8983>   CMP.w #"@@",(a5)                                        
00026434 <AmiBlitz3.ab3@8984>   BNE 'loop                                      ;was 'l15
0002643A <AmiBlitz3.ab3@8985>   TST.w ininclude                                          ;merge macrolines
0002643E <AmiBlitz3.ab3@8986>   BNE errorjoin
00026444 <AmiBlitz3.ab3@8987>        MOVEA.l sourceline,A5
00026446 <AmiBlitz3.ab3@8990>            MOVEA.l (A5),A5
0002644C <AmiBlitz3.ab3@8991>            MOVE.l a5,sourceline
00026450 <AmiBlitz3.ab3@8992>            LEA $9(A5),A5
00026456 <AmiBlitz3.ab3@8993>            ADDQ.l #1,linenumat
00026458 <AmiBlitz3.ab3@8996>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
0002645C <AmiBlitz3.ab3@8997>    BNE.w 'skip0
00026462 <AmiBlitz3.ab3@8998>   MOVE.w userp,D2                                          ;user selected type
00026464 <AmiBlitz3.ab3@9001>    MOVE.l A2,-(A7)
0002646A <AmiBlitz3.ab3@9002>    ADDQ.w #1,parnum
00026470 <AmiBlitz3.ab3@9003>    TST.b funccall
00026474 <AmiBlitz3.ab3@9004>    BEQ 'skip0_l1
0002647C <AmiBlitz3.ab3@9005>    CMP.w #6,parnum
00026480 <AmiBlitz3.ab3@9006>    BLE 'skip0_l1
00026484 <AmiBlitz3.ab3@9007>    CMP.w #7,d2
0002648A <AmiBlitz3.ab3@9013>    TST.b fpu
0002648E <AmiBlitz3.ab3@9014>    BEQ 'skip0_old
00026494 <AmiBlitz3.ab3@9015>    TST.w regnumfunc
00026498 <AmiBlitz3.ab3@9016>    BEQ 'skip0_old
0002649E <AmiBlitz3.ab3@9017>    CMP.w #$48e7,-4(a4)
000264A2 <AmiBlitz3.ab3@9018>    BNE 'skip0_old
000264A4 <AmiBlitz3.ab3@9019>    MOVEQ #0,d1
000264AA <AmiBlitz3.ab3@9020>    MOVE.w regnum,d1
000264B0 <AmiBlitz3.ab3@9021>    CMP regnumfunc,d1                                       ;fpu reg function save
000264B4 <AmiBlitz3.ab3@9022>    BGE 'skip0_old
000264B6 <AmiBlitz3.ab3@9023>    ASL.w #7,d1
000264B8 <AmiBlitz3.ab3@9024>    MOVE.l d0,-(a7)
000264BE <AmiBlitz3.ab3@9025>    MOVE.w regnumfunc,d0
000264C4 <AmiBlitz3.ab3@9026>    CLR.w regmask
000264CA <AmiBlitz3.ab3@9029>    BSET d0,regmask
000264CC <AmiBlitz3.ab3@9030>    SUBQ #1,d0
000264D0 <AmiBlitz3.ab3@9031>    BNE 'skip0_loop
000264D2 <AmiBlitz3.ab3@9032>     MOVEQ #0,d0
000264D8 <AmiBlitz3.ab3@9035>       BTST d0,regmask
000264DC <AmiBlitz3.ab3@9036>       BEQ 'skip0_noa7
000264DE <AmiBlitz3.ab3@9037>       MOVEQ #0,d1
000264E0 <AmiBlitz3.ab3@9038>       MOVE.w d0,d1
000264E2 <AmiBlitz3.ab3@9039>       SUBQ.w #1,d1
000264E4 <AmiBlitz3.ab3@9040>       ASL #7,d1
000264EA <AmiBlitz3.ab3@9041>       OR.l #$f2277400,d1                                   ;fmove.d
000264EE <AmiBlitz3.ab3@9043>       BSR writelong
000264F4 <AmiBlitz3.ab3@9045>       ADDQ.l #2,stacktrack
000264FA <AmiBlitz3.ab3@9046>       MOVE.l stacktrack,d1
00026500 <AmiBlitz3.ab3@9047>       CMP.l #180,d1
00026504 <AmiBlitz3.ab3@9048>       BGT conmemerr                                        ;formel too complex
00026506 <AmiBlitz3.ab3@9049>       MOVE.l a0,-(a7)
0002650C <AmiBlitz3.ab3@9050>       LEA fpustackbase,a0
00026514 <AmiBlitz3.ab3@9051>       MOVE.w regmask,0(a0,d1)
00026516 <AmiBlitz3.ab3@9052>       MOVE.l (a7)+,a0
00026518 <AmiBlitz3.ab3@9055>       ADDQ.w #1,d0
0002651E <AmiBlitz3.ab3@9056>       CMP.w regnumfunc,d0
00026522 <AmiBlitz3.ab3@9057>       BLE 'skip0_loop2
00026524 <AmiBlitz3.ab3@9060>       MOVE.l (a7)+,d0
0002652A <AmiBlitz3.ab3@9063>      MOVE.l currentfunccall,-(a7)
00026530 <AmiBlitz3.ab3@9064>      MOVE.w parnum,-(a7)
00026536 <AmiBlitz3.ab3@9065>      TST.l rightsidetype
0002653A <AmiBlitz3.ab3@9066>      BSR.w handlep
00026540 <AmiBlitz3.ab3@9067>      MOVE.w (a7)+,parnum
00026546 <AmiBlitz3.ab3@9069>    MOVE.l (a7)+,currentfunccall
0002654C <AmiBlitz3.ab3@9072>     TST.b typecheck                            ;typecheck for function call
00026550 <AmiBlitz3.ab3@9073>     BEQ 'notypecheck
00026556 <AmiBlitz3.ab3@9074>     TST.b notypecheck
0002655A <AmiBlitz3.ab3@9075>     BNE 'notypecheck
00026560 <AmiBlitz3.ab3@9076>     TST.b blitzparloop
00026564 <AmiBlitz3.ab3@9077>     BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0002656E <AmiBlitz3.ab3@9078>     CMP.l #0,currentfunccall
00026572 <AmiBlitz3.ab3@9079>     BEQ 'isblitzlibcall
00026576 <AmiBlitz3.ab3@9080>     MOVEM.l a0/a1,-(a7)
0002657C <AmiBlitz3.ab3@9081>     MOVE.l currentfunccall,a0
00026582 <AmiBlitz3.ab3@9082>     MOVE.w parnum,d1
00026588 <AmiBlitz3.ab3@9083>     TST.b isconstantvalue
0002658C <AmiBlitz3.ab3@9084>     BEQ 'noconstant
00026596 <AmiBlitz3.ab3@9085>     CMP.l #0,lastconstantvalue
0002659A <AmiBlitz3.ab3@9086>     BEQ 'isnull
0002659E <AmiBlitz3.ab3@9089>     MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000265A4 <AmiBlitz3.ab3@9090>     CMP.l #0,a0
000265A8 <AmiBlitz3.ab3@9091>     BEQ 'notype
000265B0 <AmiBlitz3.ab3@9092>     CMP.l #$100,4(a0)
000265B4 <AmiBlitz3.ab3@9093>     BLE 'notype
000265BA <AmiBlitz3.ab3@9094>     MOVE.l lasttoken,d1
000265BE <AmiBlitz3.ab3@9095>     CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
000265C2 <AmiBlitz3.ab3@9096>     BEQ 'isnull
000265C8 <AmiBlitz3.ab3@9097>     TST.l typetocast
000265CC <AmiBlitz3.ab3@9098>     BEQ 'nocast
000265D2 <AmiBlitz3.ab3@9099>     MOVE.l typetocast,a1
000265D6 <AmiBlitz3.ab3@9100>     BRA 'typecheck
000265DC <AmiBlitz3.ab3@9103>     MOVE.l rightsidetype,a1
000265E2 <AmiBlitz3.ab3@9104>     CMP.l #0,a1
000265E6 <AmiBlitz3.ab3@9105>     BEQ 'notype
000265EE <AmiBlitz3.ab3@9107>   'typecheck   CMP.l #$100,4(a1)
000265F0 <AmiBlitz3.ab3@9109>     CMP.l a0,a1
000265F4 <AmiBlitz3.ab3@9110>     BEQ 'ok
000265FC <AmiBlitz3.ab3@9112>     CMP.l #$100,4(a1)                 ; is a type here
00026600 <AmiBlitz3.ab3@9113>     BLE 'error
00026604 <AmiBlitz3.ab3@9114>     MOVE.l 4(a1),a1                   ; load the address of type.
00026608 <AmiBlitz3.ab3@9115>     CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0002660C <AmiBlitz3.ab3@9116>     BEQ 'ok
00026612 <AmiBlitz3.ab3@9119>    JMP error_convert_types            ; for syntax 4
00026618 <AmiBlitz3.ab3@9124>     CLR.l typetocast
0002661C <AmiBlitz3.ab3@9125>     MOVEM.l (a7)+,a0/a1
00026622 <AmiBlitz3.ab3@9131>    CLR.l lastfunction
00026628 <AmiBlitz3.ab3@9132>    TST.b fpu
0002662C <AmiBlitz3.ab3@9133>    BEQ 'skip0_noprint
0002662E <AmiBlitz3.ab3@9134>   MOVE.l (a7),a2
00026630 <AmiBlitz3.ab3@9135>   ADDQ.l #1,a2
00026634 <AmiBlitz3.ab3@9136>    CMP.b #5,d2
00026638 <AmiBlitz3.ab3@9137>   BNE 'skip0_noprint
0002663E <AmiBlitz3.ab3@9138>   CMP.b #$5d,24(a2)
00026642 <AmiBlitz3.ab3@9139>   BNE 'skip0_noprint
00026648 <AmiBlitz3.ab3@9140>   CMP.b #$81,25(a2)
0002664C <AmiBlitz3.ab3@9141>   BLT 'skip0_noprint
00026652 <AmiBlitz3.ab3@9142>   CMP.b #$86,25(a2)
00026656 <AmiBlitz3.ab3@9143>   BEQ 'skip0_ok
0002665C <AmiBlitz3.ab3@9144>   CMP.b #$87,25(a2)
00026660 <AmiBlitz3.ab3@9145>   BEQ 'skip0_ok
00026666 <AmiBlitz3.ab3@9146>   CMP.b #$88,25(a2)
0002666A <AmiBlitz3.ab3@9147>   BEQ 'skip0_ok
00026670 <AmiBlitz3.ab3@9148>   CMP.b #$83,25(a2)
00026674 <AmiBlitz3.ab3@9149>   BGT 'skip0_noprint
0002667A <AmiBlitz3.ab3@9152>   MOVE.l destpointer,a4
00026680 <AmiBlitz3.ab3@9153>   CMP.w #$2f00,-2(a4)
00026684 <AmiBlitz3.ab3@9154>   BNE 'skip0_noprint
0002668A <AmiBlitz3.ab3@9155>   SUBQ.l #2,destpointer
00026690 <AmiBlitz3.ab3@9157>   MOVE.l #$f2277400,d1
00026694 <AmiBlitz3.ab3@9158>   BSR writelong                                            ;fmove.d fp0,-(a7)
0002669A <AmiBlitz3.ab3@9159>   ADDQ #4,a2offset
000266A0 <AmiBlitz3.ab3@9176>   CLR.b optistring
000266A2 <AmiBlitz3.ab3@9177>   MOVEA.l (A7)+,A2
000266A6 <AmiBlitz3.ab3@9178>    CMP.w #"@",d0
000266AA <AmiBlitz3.ab3@9179>   BNE 'skip0_l10
000266AE <AmiBlitz3.ab3@9180>    CMP.b #"@",(a5)
000266B2 <AmiBlitz3.ab3@9181>   BNE 'skip0_l10
000266B8 <AmiBlitz3.ab3@9182>   TST.w ininclude
000266BC <AmiBlitz3.ab3@9183>   BNE errorjoin
000266C2 <AmiBlitz3.ab3@9184>   MOVEA.l sourceline,A5
000266C4 <AmiBlitz3.ab3@9185>            MOVEA.l (A5),A5
000266CA <AmiBlitz3.ab3@9186>            MOVE.l a5,sourceline
000266D0 <AmiBlitz3.ab3@9187>            ADDQ.l #1,linenumat
000266D4 <AmiBlitz3.ab3@9188>            LEA $9(A5),A5
000266D6 <AmiBlitz3.ab3@9189>            MOVEQ #0,d0
000266DA <AmiBlitz3.ab3@9190>            BSR get1bytemain
000266DE <AmiBlitz3.ab3@9193>    CMP.b #32,(a5)+ ;for space after a ,
000266E2 <AmiBlitz3.ab3@9194>    BEQ 'skip0_l10:
000266E4 <AmiBlitz3.ab3@9195>    SUBQ.l #1,a5
000266E8 <AmiBlitz3.ab3@9197>    CMP.w #"@@",(a5)                                        ;if merge
000266EC <AmiBlitz3.ab3@9198>    BNE 'skip0_l15
000266F0 <AmiBlitz3.ab3@9199>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
000266F6 <AmiBlitz3.ab3@9200>    JSR mergeline
000266FA <AmiBlitz3.ab3@9201>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
000266FC <AmiBlitz3.ab3@9221>       SUBQ.w #1,(A7)
00026700 <AmiBlitz3.ab3@9222>    BEQ.w 'done
00026704 <AmiBlitz3.ab3@9224>     CMP.w #$2C,D0
00026708 <AmiBlitz3.ab3@9226>    BNE 'overloadfunc
0002670C <AmiBlitz3.ab3@9227>  BRA.w 'loop
0002670E <AmiBlitz3.ab3@9230>   ADDQ.w #2,A7
00026714 <AmiBlitz3.ab3@9231>   MOVE.w (A7)+,partostack
00026716 <AmiBlitz3.ab3@9232>   MOVE.w (A7)+,D1
0002671C <AmiBlitz3.ab3@9233>   CLR.b isconstantvalue
00026726 <AmiBlitz3.ab3@9234>   MOVE.l currentfunccall,lastfunction
0002672C <AmiBlitz3.ab3@9235>   CLR.b funccall
00026732 <AmiBlitz3.ab3@9236>   CLR.l currentfunccall
00026734 <AmiBlitz3.ab3@9237>  RTS
0002673A <AmiBlitz3.ab3@9240>   CLR.b funccall
00026740 <AmiBlitz3.ab3@9241>   MOVE.w regnum,d1
00026746 <AmiBlitz3.ab3@9242>   MOVE.l currentfunccall,a4
0002674A <AmiBlitz3.ab3@9243>   CMP.b $20(a4),d1                                         ;increase if more pars
0002674E <AmiBlitz3.ab3@9244>   BLT notparerr
00026750 <AmiBlitz3.ab3@9247>   MOVE.b (a2)+,d2
00026758 <AmiBlitz3.ab3@9248>   ADD.w #1,parnum
0002675E <AmiBlitz3.ab3@9249>   TST.b fpu
00026762 <AmiBlitz3.ab3@9250>   BEQ 'nofpu
00026766 <AmiBlitz3.ab3@9251>   CMP.b #5,d2
0002676A <AmiBlitz3.ab3@9252>   BNE 'nofpu
0002676C <AmiBlitz3.ab3@9253>   MOVEQ #0,d1
00026772 <AmiBlitz3.ab3@9254>   MOVE.w regnum,d1
0002677A <AmiBlitz3.ab3@9255>   CMP.w #6,regnum
0002677E <AmiBlitz3.ab3@9256>   BLT 'nostack2
00026782 <AmiBlitz3.ab3@9263>   MOVE.w #$2c3c,d1
00026786 <AmiBlitz3.ab3@9264>   BSR writeword
0002678C <AmiBlitz3.ab3@9265>   MOVE.l #$bf800000,d1
00026790 <AmiBlitz3.ab3@9266>   BSR writelong
00026794 <AmiBlitz3.ab3@9267>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002679A <AmiBlitz3.ab3@9268>   ADD.w parnum,d1
000267A0 <AmiBlitz3.ab3@9269>   JSR Atokejsr
000267A6 <AmiBlitz3.ab3@9270>   TST.w dontwrite_nomemleft
000267AA <AmiBlitz3.ab3@9271>   BNE 'l1
000267B0 <AmiBlitz3.ab3@9272>   MOVE.l data1start,d1
000267B6 <AmiBlitz3.ab3@9273>   MOVE.l destpointer,a4
000267BA <AmiBlitz3.ab3@9274>   ADD.l d1,-4(a4)
000267C0 <AmiBlitz3.ab3@9275>   MOVE.l destpointer,d1
000267C2 <AmiBlitz3.ab3@9276>   SUBQ.l #4,d1
000267C8 <AmiBlitz3.ab3@9277>   SUB.l destbufferstart,d1
000267CA <AmiBlitz3.ab3@9278>   MOVE.l d2,-(a7)
000267CC <AmiBlitz3.ab3@9279>   MOVE.l d1,d2
000267D2 <AmiBlitz3.ab3@9280>   JSR addhunkoffset
000267D4 <AmiBlitz3.ab3@9281>   MOVE.l (a7)+,d2
000267D8 <AmiBlitz3.ab3@9282>  BRA 'l1
000267DA <AmiBlitz3.ab3@9285>   ASL.l #7,d1
000267E0 <AmiBlitz3.ab3@9286>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
000267E4 <AmiBlitz3.ab3@9287>   BSR writelong
000267E6 <AmiBlitz3.ab3@9288>   MOVEQ #-1,d1                                             ;-1
000267EA <AmiBlitz3.ab3@9289>   BSR writeword
000267EE <AmiBlitz3.ab3@9290>  BRA 'l1
000267F4 <AmiBlitz3.ab3@9293>   MOVE.w regnum,d1
000267FC <AmiBlitz3.ab3@9294>   CMP.w #6,regnum
00026800 <AmiBlitz3.ab3@9295>   BLT 'nostack
00026804 <AmiBlitz3.ab3@9300>   CMP.b #2,d2
00026808 <AmiBlitz3.ab3@9301>   BGT 'nw
0002680C <AmiBlitz3.ab3@9302>  BRA 'nos
00026810 <AmiBlitz3.ab3@9311>   CMP.w #7,d2
00026814 <AmiBlitz3.ab3@9312>   BNE 'nos
0002681A <AmiBlitz3.ab3@9313>   ADDQ #4,a2offset
00026820 <AmiBlitz3.ab3@9316>     MOVE.l #$48780000,d1
00026824 <AmiBlitz3.ab3@9317>     BSR writelong
0002682A <AmiBlitz3.ab3@9318>     ADDQ.w #4,a2offset
0002682E <AmiBlitz3.ab3@9319>     MOVE.w #$2f3c,d1
00026832 <AmiBlitz3.ab3@9320>     BSR writeword
00026838 <AmiBlitz3.ab3@9321>     MOVE.l #-1,d1
0002683C <AmiBlitz3.ab3@9322>     BSR writelong
00026840 <AmiBlitz3.ab3@9323>    BRA 'l1
00026844 <AmiBlitz3.ab3@9327>   CMP.b #4,d2
00026848 <AmiBlitz3.ab3@9328>       BNE 'noq
0002684C <AmiBlitz3.ab3@9329>       MOVE.w #$2c3c,d1
00026850 <AmiBlitz3.ab3@9330>       BSR writeword
00026856 <AmiBlitz3.ab3@9331>       MOVE.l #$ffff0000,d1
0002685A <AmiBlitz3.ab3@9332>       BSR writelong
0002685E <AmiBlitz3.ab3@9333>  BRA 'noq2
00026862 <AmiBlitz3.ab3@9336>      CMP.b #5,d2
00026866 <AmiBlitz3.ab3@9337>      BNE 'nof
0002686A <AmiBlitz3.ab3@9338>       MOVE.w #$2c3c,d1
0002686E <AmiBlitz3.ab3@9339>       BSR writeword
00026874 <AmiBlitz3.ab3@9340>       MOVE.l #$800000c1,d1
00026878 <AmiBlitz3.ab3@9341>       BSR writelong
0002687C <AmiBlitz3.ab3@9342>  BRA 'noq2
00026880 <AmiBlitz3.ab3@9345>   MOVE.w #$7cff,d1
00026884 <AmiBlitz3.ab3@9346>   BSR writeword
00026888 <AmiBlitz3.ab3@9349>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002688E <AmiBlitz3.ab3@9350>   ADD.w parnum,d1
00026894 <AmiBlitz3.ab3@9351>   JSR Atokejsr
0002689A <AmiBlitz3.ab3@9352>    TST.w dontwrite_nomemleft
0002689E <AmiBlitz3.ab3@9353>    BNE 'l1
000268A4 <AmiBlitz3.ab3@9354>    MOVE.l data1start,d1
000268AA <AmiBlitz3.ab3@9355>    MOVE.l destpointer,a4
000268AE <AmiBlitz3.ab3@9356>    ADD.l d1,-4(a4)
000268B4 <AmiBlitz3.ab3@9357>    MOVE.l destpointer,d1
000268B6 <AmiBlitz3.ab3@9358>    SUBQ.l #4,d1
000268BC <AmiBlitz3.ab3@9359>    SUB.l destbufferstart,d1
000268BE <AmiBlitz3.ab3@9360>    MOVE.l d2,-(a7)
000268C0 <AmiBlitz3.ab3@9361>    MOVE.l d1,d2
000268C6 <AmiBlitz3.ab3@9362>    JSR addhunkoffset
000268C8 <AmiBlitz3.ab3@9363>    MOVE.l (a7)+,d2
000268CC <AmiBlitz3.ab3@9364>  BRA 'l1
000268CE <AmiBlitz3.ab3@9367>   ASL.l #8,d1
000268D0 <AmiBlitz3.ab3@9368>   ASL.l #1,d1
000268D6 <AmiBlitz3.ab3@9369>   OR.l #$203c,d1                                           ;-1
000268DA <AmiBlitz3.ab3@9370>   BSR writeword
000268E0 <AmiBlitz3.ab3@9371>   MOVE.l #-1,d1
000268E4 <AmiBlitz3.ab3@9372>   CMP.b #4,d2
000268E8 <AmiBlitz3.ab3@9373>   BNE 'nq1
000268EE <AmiBlitz3.ab3@9374>   MOVE.l #$ffff0000,d1
000268F2 <AmiBlitz3.ab3@9377>   CMP.b #5,d2
000268F6 <AmiBlitz3.ab3@9378>   BNE 'nof2
000268FC <AmiBlitz3.ab3@9379>   TST.b fpu
00026900 <AmiBlitz3.ab3@9380>   BNE 'nof2
00026906 <AmiBlitz3.ab3@9381>   MOVE.l #$800000c1,d1
0002690A <AmiBlitz3.ab3@9384>    BSR writelong
0002690E <AmiBlitz3.ab3@9385>    CMP.b #7,d2
00026912 <AmiBlitz3.ab3@9386>    BNE 'l1
00026918 <AmiBlitz3.ab3@9388>      MOVE.l #$48780000,d1
0002691C <AmiBlitz3.ab3@9389>      BSR writelong
00026922 <AmiBlitz3.ab3@9391>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00026928 <AmiBlitz3.ab3@9392>    MOVE.l #$594f,d1                                        ; subq #4,a7
0002692C <AmiBlitz3.ab3@9393>    BSR writeword
0002692E <AmiBlitz3.ab3@9396>    SUBQ.w #1,(A7)
00026932 <AmiBlitz3.ab3@9397>    BEQ.w 'done
00026938 <AmiBlitz3.ab3@9398>    ADDQ.w #1,regnum
0002693C <AmiBlitz3.ab3@9399>  BRA 'ol2
0002693E <AmiBlitz3.ab3@9412>    MOVE.w D2,D1
00026942 <AmiBlitz3.ab3@9413>    ANDI.w #$40,D1          ;push bit
00026948 <AmiBlitz3.ab3@9414>    MOVE.b D1,partostack
0002694A <AmiBlitz3.ab3@9415>    TST.b D2
0002694E <AmiBlitz3.ab3@9416>     BMI.w handlevara
00026952 <AmiBlitz3.ab3@9417>    BTST #$5,D2
00026956 <AmiBlitz3.ab3@9418>     BNE.w handlearr
0002695C <AmiBlitz3.ab3@9423>     MOVE.w regnumstore,-(a7)
00026962 <AmiBlitz3.ab3@9424>     MOVE.w tempregnum,-(a7)
00026968 <AmiBlitz3.ab3@9425>     MOVE.w parnum,-(a7)
0002696C <AmiBlitz3.ab3@9427>     BSR.w getap                                        ;recursive entry
00026972 <AmiBlitz3.ab3@9429>     MOVE.w (a7)+,parnum
00026978 <AmiBlitz3.ab3@9430>     MOVE.w (a7)+,tempregnum
0002697E <AmiBlitz3.ab3@9431>     MOVE.w (a7)+,regnumstore
00026982 <AmiBlitz3.ab3@9437>     MOVE.w partostack(PC),D1
00026986 <AmiBlitz3.ab3@9438>     BEQ.w putapincreg
0002698C <AmiBlitz3.ab3@9442>    ADDQ.w #4,a2offset
00026992 <AmiBlitz3.ab3@9444>    MOVE.w pushdn,D1
00026998 <AmiBlitz3.ab3@9445>    OR.w regnum,D1      ;push long
0002699C <AmiBlitz3.ab3@9446>    CMP.w #$3,D2
000269A0 <AmiBlitz3.ab3@9447>     BCC.w 'skip
000269A6 <AmiBlitz3.ab3@9448>    SUBQ.w #2,a2offset
000269AA <AmiBlitz3.ab3@9449>    ORI.w #$1000,D1    ;push word only
000269AE <AmiBlitz3.ab3@9450>    BSR.w writeword
000269B0 <AmiBlitz3.ab3@9451>  RTS
000269B4 <AmiBlitz3.ab3@9455>   CMP.b #7,d2
000269B8 <AmiBlitz3.ab3@9456>    BNE 'l10a
000269C0 <AmiBlitz3.ab3@9457>    CMP.b #2,optistring
000269C6 <AmiBlitz3.ab3@9461>   TST.b iee
000269CA <AmiBlitz3.ab3@9462>   BEQ 'olda
000269CE <AmiBlitz3.ab3@9463>   CMP.b #5,d2
000269D2 <AmiBlitz3.ab3@9464>   BNE 'olda
000269D6 <AmiBlitz3.ab3@9468>   BSR.w writeword                                          ;write val to stack
000269D8 <AmiBlitz3.ab3@9469>  RTS
000269DE <AmiBlitz3.ab3@9473>   SUBQ.w #4,a2offset
000269E0 <AmiBlitz3.ab3@9474> RTS
000269E6 <AmiBlitz3.ab3@9479>   ADDQ.w #1,regnum
000269E8 <AmiBlitz3.ab3@9480> RTS
000269EA <AmiBlitz3.ab3@9484>   MOVEQ.l #$03,D2
000269EE <AmiBlitz3.ab3@9485> BRA.w putap
000269F2 <AmiBlitz3.ab3@9491>   ANDI.w #$7,D2
000269F4 <AmiBlitz3.ab3@9492>   MOVE.w D2,-(A7)
000269F8 <AmiBlitz3.ab3@9494>    BSR.w ampersand2  ;ignore pnt to $
000269FC <AmiBlitz3.ab3@9496>   CMP.b #$7,D2                                             ;ignore pnt to $
00026A00 <AmiBlitz3.ab3@9497>    BEQ.w 'nop2
00026A04 <AmiBlitz3.ab3@9499>   BTST #$E,D2
00026A08 <AmiBlitz3.ab3@9500>    BEQ.w 'nop
00026A0C <AmiBlitz3.ab3@9501>   MOVE.b #$3,D2      ;pointer to long                                      ;pointer to long
00026A10 <AmiBlitz3.ab3@9502>  BRA.w 'nop2
00026A12 <AmiBlitz3.ab3@9505>    TST.b D2
00026A16 <AmiBlitz3.ab3@9506>    BNE.w 'nop2
00026A1A <AmiBlitz3.ab3@9507>   MOVE.b #$3,D2
00026A1C <AmiBlitz3.ab3@9510>   MOVE.w (A7)+,D3
00026A1E <AmiBlitz3.ab3@9511>   TST.b D3
00026A22 <AmiBlitz3.ab3@9512>    BEQ.w 'unp
00026A24 <AmiBlitz3.ab3@9513>   CMP.b D2,D3
00026A28 <AmiBlitz3.ab3@9514>    BEQ.w putalp
00026A2C <AmiBlitz3.ab3@9515>  BRA.w mismatcherr
00026A32 <AmiBlitz3.ab3@9518>   ADDQ.w #2,a2offset
00026A36 <AmiBlitz3.ab3@9519>   MOVE.w ptype(PC),D1
00026A3A <AmiBlitz3.ab3@9520>    BSR.w writeword
00026A3C <AmiBlitz3.ab3@9521>   MOVEQ.l #$00,D1
00026A3E <AmiBlitz3.ab3@9522>   MOVE.b D2,D1
00026A42 <AmiBlitz3.ab3@9523>    BSR.w writeword
00026A46 <AmiBlitz3.ab3@9524> BRA.w putalp
00026A48 <AmiBlitz3.ab3@9528>    MOVE.w D2,-(A7)
00026A4C <AmiBlitz3.ab3@9529>    BSR.w baseadd
00026A52 <AmiBlitz3.ab3@9530>   BTST #$4,$1(A7)
00026A56 <AmiBlitz3.ab3@9531>    BEQ.w 'nohigh
00026A5A <AmiBlitz3.ab3@9532>    BSR.w highadd
00026A60 <AmiBlitz3.ab3@9535>    BTST #$3,$1(A7)
00026A64 <AmiBlitz3.ab3@9536>    BEQ.w 'notype
00026A68 <AmiBlitz3.ab3@9537>    BSR.w sendtype
00026A6A <AmiBlitz3.ab3@9540>    MOVE.w (A7)+,D2
00026A6E <AmiBlitz3.ab3@9541> BRA.w get1bytemain
00026A74 <AmiBlitz3.ab3@9547>   MOVE.w regnum,D1
00026A76 <AmiBlitz3.ab3@9548>   LSL.w #8,D1
00026A78 <AmiBlitz3.ab3@9549>   LSL.w #1,D1
00026A7C <AmiBlitz3.ab3@9550>   ORI.w #$7000,D1
00026A82 <AmiBlitz3.ab3@9551>   BTST #$0,$7(A3)
00026A86 <AmiBlitz3.ab3@9552>    BNE.w 'isap         ;A Pointer
00026A8E <AmiBlitz3.ab3@9553>   CMPI.l #$100,$4(A2)
00026A92 <AmiBlitz3.ab3@9554>    BCC.w arrerr1       ;illegal type to send
00026A96 <AmiBlitz3.ab3@9555>   MOVE.b $7(A2),D1
00026A9A <AmiBlitz3.ab3@9558>   BSR.w writeword      ;moveq #type,d regat
00026A9C <AmiBlitz3.ab3@9559>   MOVEQ.l #$02,D2      ;just a word.
00026AA0 <AmiBlitz3.ab3@9560> BRA.w pushap
00026AA4 <AmiBlitz3.ab3@9563>   MOVE.b #$3,D1
00026AA8 <AmiBlitz3.ab3@9564> BRA.w 'putit
00026AAC <AmiBlitz3.ab3@9570>    BSR.w get1bytemain                                      ;write array paramter code
00026AB0 <AmiBlitz3.ab3@9571>    BSR.w getparameter
00026AB8 <AmiBlitz3.ab3@9572>   BTST #$1,flagmask+1
00026ABC <AmiBlitz3.ab3@9573>    BEQ.w syntaxerr
00026AC0 <AmiBlitz3.ab3@9574>    BSR.w fetchvars
00026AC4 <AmiBlitz3.ab3@9576>    BSR.w get1bytemain
00026AC8 <AmiBlitz3.ab3@9577>   CMP.w #$29,D0          ;')'  ;we just want a() or whatever                                 ;we just want a() or whatever
00026ACC <AmiBlitz3.ab3@9578>    BNE.w syntaxerr
00026AD2 <AmiBlitz3.ab3@9579>   MOVE.w notshared,D1
00026AD6 <AmiBlitz3.ab3@9580>    BNE.w noarrayerr
00026ADC <AmiBlitz3.ab3@9581>   MOVE.w regnum,D1
00026ADE <AmiBlitz3.ab3@9582>   LSL.w #8,D1
00026AE0 <AmiBlitz3.ab3@9583>   LSL.w #1,D1
00026AE4 <AmiBlitz3.ab3@9584>   OR.w fbase(PC),D1
00026AEA <AmiBlitz3.ab3@9586>    TST.b varmode
00026AEE <AmiBlitz3.ab3@9587>    BEQ 'l1
00026AF2 <AmiBlitz3.ab3@9588>    BCLR #0,d1
00026AF6 <AmiBlitz3.ab3@9592>    BSR.w writeword
00026AFA <AmiBlitz3.ab3@9593>   MOVE.w $4(A3),D1
00026AFE <AmiBlitz3.ab3@9594>    BSR.w writeword
00026B02 <AmiBlitz3.ab3@9595> BRA.w putalp      ;OK, we've got da base reg.
00026B08 <AmiBlitz3.ab3@9601>   MOVE.w regnum,D1
00026B0A <AmiBlitz3.ab3@9602>   LSL.w #8,D1
00026B0C <AmiBlitz3.ab3@9603>   LSL.w #1,D1
00026B10 <AmiBlitz3.ab3@9604>   OR.w fbase(PC),D1
00026B16 <AmiBlitz3.ab3@9606>    TST.b varmode
00026B1A <AmiBlitz3.ab3@9607>    BEQ 'l1
00026B1E <AmiBlitz3.ab3@9608>    BCLR #0,d1
00026B22 <AmiBlitz3.ab3@9612>    BSR.w writeword
00026B26 <AmiBlitz3.ab3@9614>   MOVE.w $8(A3),D1
00026B28 <AmiBlitz3.ab3@9615>   LSL.w #2,D1
00026B2E <AmiBlitz3.ab3@9616>   MOVE.w varmode,D2
00026B32 <AmiBlitz3.ab3@9617>    BEQ.w 'isglob
00026B34 <AmiBlitz3.ab3@9618>   NEG.w D1
00026B38 <AmiBlitz3.ab3@9621>    ADD.w $4(A3),D1
00026B3C <AmiBlitz3.ab3@9622>    BSR.w writeword
00026B42 <AmiBlitz3.ab3@9623>   MOVE.w regnum,D1
00026B44 <AmiBlitz3.ab3@9624>   LSL.w #8,D1
00026B46 <AmiBlitz3.ab3@9625>   LSL.w #1,D1
00026B4A <AmiBlitz3.ab3@9627>   MOVE.w partostack(PC),D2
00026B4E <AmiBlitz3.ab3@9628>    BNE.w 'dopadd           ;we just pushed last parameter!
00026B56 <AmiBlitz3.ab3@9629>   CMPI.w #$7,regnum
00026B5A <AmiBlitz3.ab3@9630>    BCC.w 'dopadd           ;last was d6, it must have been
00026B5E <AmiBlitz3.ab3@9632>   OR.w pushlast(PC),D1
00026B64 <AmiBlitz3.ab3@9633>   MOVE.w regnum,D2
00026B66 <AmiBlitz3.ab3@9634>   SUBQ.w #1,D2
00026B68 <AmiBlitz3.ab3@9635>   OR.w D2,D1
00026B6C <AmiBlitz3.ab3@9636>  BRA.w 'pp
00026B70 <AmiBlitz3.ab3@9641>   OR.w pushadd(PC),D1
00026B74 <AmiBlitz3.ab3@9644>   BSR.w writeword
00026B7C <AmiBlitz3.ab3@9645>   MOVE.b #$1,partostack
00026B80 <AmiBlitz3.ab3@9646> BRA.w putalp
00026B84 <AmiBlitz3.ab3@9650> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
00026B86 <AmiBlitz3.ab3@9651> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
00026B88 <AmiBlitz3.ab3@9652> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026B8C <AmiBlitz3.ab3@9657>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026B90 <AmiBlitz3.ab3@9658>    BEQ.w evalu2
00026B94 <AmiBlitz3.ab3@9659> BRA.w eval
00026B9A <AmiBlitz3.ab3@9663>   MOVEA.l libpointer,A1
00026B9E <AmiBlitz3.ab3@9666>    CMPA.w #$0,A1
00026BA2 <AmiBlitz3.ab3@9667>    BEQ.w 'done
00026BA8 <AmiBlitz3.ab3@9668>   MOVE.w #-1,$A(A1)
00026BAE <AmiBlitz3.ab3@9669>   BCLR #$7,$C(A1)
00026BB0 <AmiBlitz3.ab3@9670>   MOVEA.l (A1),A1
00026BB4 <AmiBlitz3.ab3@9671>  BRA.w 'loop
00026BB6 <AmiBlitz3.ab3@9674> RTS
00026BBA <AmiBlitz3.ab3@9678>   MOVE.w #$FFFE,D1       ;#allocvars
00026BBE <AmiBlitz3.ab3@9682>    BSR.w findlib
00026BC4 <AmiBlitz3.ab3@9685>   TST.w cfetchmode
00026BC8 <AmiBlitz3.ab3@9686>    BEQ.w 'noconst
00026BCE <AmiBlitz3.ab3@9687>   BTST #$6,$C(A1)
00026BD2 <AmiBlitz3.ab3@9688>    BNE.w 'constok
00026BD6 <AmiBlitz3.ab3@9690>  BRA.w badconerr                                            ;Can't use this Library!
00026BD8 <AmiBlitz3.ab3@9693>  RTS
00026BDE <AmiBlitz3.ab3@9696>    BSET #$7,$C(A1)
00026BE2 <AmiBlitz3.ab3@9697>    BNE.w 'skip                                         ;already done....
00026BE8 <AmiBlitz3.ab3@9698>    CMPI.w #-1,$A(A1)
00026BEC <AmiBlitz3.ab3@9699>    BNE.w 'skip                                         ;something already here
00026BF2 <AmiBlitz3.ab3@9703>    TST.w dirmode
00026BF6 <AmiBlitz3.ab3@9704>    BEQ.b 'oktouse
00026BFC <AmiBlitz3.ab3@9707>    TST.b exdebug
00026C00 <AmiBlitz3.ab3@9708>    BEQ 'l1
00026C04 <AmiBlitz3.ab3@9709>  BRA.b 'oktouse
00026C0A <AmiBlitz3.ab3@9713>   BCLR #$7,$C(A1)
00026C0E <AmiBlitz3.ab3@9714>  BRA.w dirliberr
00026C14 <AmiBlitz3.ab3@9718>   MOVE.b debugmode,-(a7)
00026C18 <AmiBlitz3.ab3@9720>   MOVEM.l D1/A0/A2,-(A7)
00026C20 <AmiBlitz3.ab3@9730>   BTST #$7,use_debugger
00026C24 <AmiBlitz3.ab3@9731>   BNE 'debugon
00026C26 <AmiBlitz3.ab3@9732>   CLR.w D1
00026C2A <AmiBlitz3.ab3@9733>  BRA.b 'debugoff
00026C2C <AmiBlitz3.ab3@9736>   SNE D1
00026C32 <AmiBlitz3.ab3@9739>   MOVE.b d1,debugmode
00026C34 <AmiBlitz3.ab3@9744>   MOVEA.l A1,A0
00026C38 <AmiBlitz3.ab3@9745>   ADDA.l $12(A1),A0
00026C3C <AmiBlitz3.ab3@9746>   TST.w -$2(A0)
00026C40 <AmiBlitz3.ab3@9747>    BEQ.w 'notmax
00026C44 <AmiBlitz3.ab3@9748>   MOVEM.l A0-A1,-(A7)
00026C48 <AmiBlitz3.ab3@9749>   MOVE.w #$FB4F,D1            ; #64335,
00026C4C <AmiBlitz3.ab3@9750>    BSR.w uselib
00026C50 <AmiBlitz3.ab3@9751>   MOVEM.l (A7)+,A0-A1
00026C56 <AmiBlitz3.ab3@9752>   ADDQ.w #1,globalvarpointer
00026C5E <AmiBlitz3.ab3@9753>   BCLR #$0,globalvarpointer+1
00026C66 <AmiBlitz3.ab3@9754>   MOVE.w globalvarpointer,-$6(A0)
00026C6C <AmiBlitz3.ab3@9755>   ADDQ.w #4,globalvarpointer
00026C70 <AmiBlitz3.ab3@9756>   TST.l -$E(A0)
00026C74 <AmiBlitz3.ab3@9757>    BEQ.w 'notmax
00026C7A <AmiBlitz3.ab3@9758>   ADDQ.w #4,globalvarpointer
00026C82 <AmiBlitz3.ab3@9761>   MOVE.l libend,$28(A1)      ;pc of lib
00026C84 <AmiBlitz3.ab3@9762>   MOVEA.l A1,A0
00026C88 <AmiBlitz3.ab3@9763>   ADDA.l $12(A1),A0          ;start of lib
00026C8A <AmiBlitz3.ab3@9765>   MOVE.l A1,D1
00026C8E <AmiBlitz3.ab3@9766>   ADD.l $6(A1),D1            ;end of lib
00026C92 <AmiBlitz3.ab3@9767>   TST.l $2C(A1)
00026C96 <AmiBlitz3.ab3@9768>    BEQ.w 'nor
00026C9C <AmiBlitz3.ab3@9769>   TST.b debugmode
00026CA0 <AmiBlitz3.ab3@9770>    BNE.w 'nor                ;errs turned on
00026CA2 <AmiBlitz3.ab3@9771>   MOVE.l A1,D1
00026CA6 <AmiBlitz3.ab3@9772>   ADD.l $2C(A1),D1           ;copy only non-errchks
00026CAC <AmiBlitz3.ab3@9775>   MOVEA.l libend,A2
00026CB2 <AmiBlitz3.ab3@9778>   CMPA.l data1start,A2
00026CB6 <AmiBlitz3.ab3@9779>    BCS.w 'okp
00026CBE <AmiBlitz3.ab3@9780>   MOVE.w #$FFFF,dontwrite_nomemleft     ; -1
00026CC0 <AmiBlitz3.ab3@9783>   ADDQ.w #2,A0
00026CC2 <AmiBlitz3.ab3@9784>   ADDQ.w #2,A2
00026CC4 <AmiBlitz3.ab3@9785>   CMPA.l D1,A0
00026CC8 <AmiBlitz3.ab3@9786>    BCS.w 'bad
00026CCC <AmiBlitz3.ab3@9787>  BRA.w 'toreloc
00026CCE <AmiBlitz3.ab3@9790>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026CD0 <AmiBlitz3.ab3@9791>   CMPA.l D1,A0
00026CD4 <AmiBlitz3.ab3@9792>    BCS.w 'loop
00026CDA <AmiBlitz3.ab3@9795>   MOVE.l A2,libend
00026CDE <AmiBlitz3.ab3@9796>   MOVE.l $20(A1),D1
00026CE2 <AmiBlitz3.ab3@9797>    BEQ.w 'noreloc
00026CE6 <AmiBlitz3.ab3@9799>   MOVEM.l D0/D2-D3,-(A7)
00026CEA <AmiBlitz3.ab3@9800>   MOVEA.l $24(A1),A0         ;start of reloc table
00026CEC <AmiBlitz3.ab3@9801>   MOVEQ.l #$00,D3            ;no tokejsrs (yet!)
00026CEE <AmiBlitz3.ab3@9807>   MOVE.l (A0)+,D2
00026CF2 <AmiBlitz3.ab3@9808>   TST.l $2C(A1)
00026CF6 <AmiBlitz3.ab3@9809>    BEQ.w 'skipr
00026CFC <AmiBlitz3.ab3@9810>   TST.b debugmode
00026D00 <AmiBlitz3.ab3@9811>    BNE.w 'skipr
00026D04 <AmiBlitz3.ab3@9812>   CMP.l $2C(A1),D2
00026D08 <AmiBlitz3.ab3@9813>    BCC.w 'next
00026D0C <AmiBlitz3.ab3@9816>   TST.w $0(A1,D2.L)
00026D10 <AmiBlitz3.ab3@9817>    BPL.w 'notajsr
00026D12 <AmiBlitz3.ab3@9818>   TST.l D3
00026D16 <AmiBlitz3.ab3@9819>    BNE.w 'notajsr      ;already done...
00026D18 <AmiBlitz3.ab3@9820>   MOVE.l A0,D0
00026D1A <AmiBlitz3.ab3@9821>   MOVE.l D1,D3         ;number left to do!
00026D1E <AmiBlitz3.ab3@9824>   SUB.l $12(A1),D2
00026D22 <AmiBlitz3.ab3@9825>    BMI.w 'next
00026D26 <AmiBlitz3.ab3@9826>   ADD.l $28(A1),D2
00026D28 <AmiBlitz3.ab3@9827>   MOVE.l D2,-(A7)
00026D2E <AmiBlitz3.ab3@9828>   SUB.l destbufferstart,D2
00026D32 <AmiBlitz3.ab3@9829>    BSR.w addhunkoffset
00026D34 <AmiBlitz3.ab3@9830>   MOVEA.l (A7)+,A2
00026D3A <AmiBlitz3.ab3@9831>   TST.w dontwrite_nomemleft
00026D3E <AmiBlitz3.ab3@9832>    BNE.w 'next
00026D42 <AmiBlitz3.ab3@9833>   MOVE.l $28(A1),D2
00026D46 <AmiBlitz3.ab3@9834>   SUB.l $12(A1),D2
00026D48 <AmiBlitz3.ab3@9835>   ADD.l D2,(A2)
00026D4A <AmiBlitz3.ab3@9838>    SUBQ.l #1,D1
00026D4E <AmiBlitz3.ab3@9839>    BNE.w 'reloop
00026D50 <AmiBlitz3.ab3@9840>   MOVE.l D3,D2
00026D54 <AmiBlitz3.ab3@9841>    BEQ.w 'nohand
00026D56 <AmiBlitz3.ab3@9842>   MOVEA.l D0,A2
00026D58 <AmiBlitz3.ab3@9843>   SUBQ.w #4,A2
00026D5C <AmiBlitz3.ab3@9845>    BSR.w handlejsrs
00026D60 <AmiBlitz3.ab3@9848>    MOVEM.l (A7)+,D0/D2-D3
00026D64 <AmiBlitz3.ab3@9851>    MOVEM.l (A7)+,D1/A0/A2
00026D68 <AmiBlitz3.ab3@9853>   MOVEM.l D1-D2,-(A7)
00026D6C <AmiBlitz3.ab3@9854>   TST.w $1A(A1)
00026D70 <AmiBlitz3.ab3@9855>    BNE.w 'skip2a
00026D74 <AmiBlitz3.ab3@9856>   CLR.w $A(A1)
00026D78 <AmiBlitz3.ab3@9857>  BRA.w 'skip2
00026D7E <AmiBlitz3.ab3@9860>   ADDQ.w #1,globalvarpointer
00026D86 <AmiBlitz3.ab3@9861>   BCLR #$0,globalvarpointer+1
00026D8E <AmiBlitz3.ab3@9862>   MOVE.w globalvarpointer,$A(A1)
00026D92 <AmiBlitz3.ab3@9864>   CMP.w #-$12D,D1            ; was  #65235,
00026D96 <AmiBlitz3.ab3@9865>    BNE.w 'nots1
00026D9E <AmiBlitz3.ab3@9867>   MOVE.w $A(A1),movestdn+2
00026DA6 <AmiBlitz3.ab3@9868>   MOVE.w $A(A1),pusha3+2
00026DAE <AmiBlitz3.ab3@9869>   MOVE.w $A(A1),pusha32+2
00026DB6 <AmiBlitz3.ab3@9870>   MOVE.w $A(A1),pulla3+2
00026DBE <AmiBlitz3.ab3@9871>   MOVE.w $A(A1),geta3+2
00026DC2 <AmiBlitz3.ab3@9874>    CMP.w #-$3E9,D1           ; was #64535,
00026DC6 <AmiBlitz3.ab3@9875>    BNE.w 'notd
00026DCE <AmiBlitz3.ab3@9877>   MOVE.w $A(A1),dataget+2
00026DD6 <AmiBlitz3.ab3@9878>   MOVE.w $A(A1),dataput+2
00026DDE <AmiBlitz3.ab3@9879>   MOVE.w $A(A1),rescode+6
00026DE6 <AmiBlitz3.ab3@9880>   MOVE.w $A(A1),rescode2+2
00026DEC <AmiBlitz3.ab3@9883>   ADDQ.w #2,globalvarpointer
00026DF0 <AmiBlitz3.ab3@9884>   TST.w $1A(A1)
00026DF4 <AmiBlitz3.ab3@9885>    BMI.w 'jword
00026DFA <AmiBlitz3.ab3@9886>   ADDQ.w #2,globalvarpointer
00026DFE <AmiBlitz3.ab3@9889>   MOVEM.l D1/A1,-(A7)
00026E02 <AmiBlitz3.ab3@9890>   BSR.w usevars
00026E06 <AmiBlitz3.ab3@9891>   MOVEM.l (A7)+,D1/A1
00026E08 <AmiBlitz3.ab3@9894>   MOVE.w D1,D2
00026E0C <AmiBlitz3.ab3@9895>   MOVE.l $16(A1),D1
00026E10 <AmiBlitz3.ab3@9896>    BSR.w uselib2
00026E14 <AmiBlitz3.ab3@9897>   MOVE.l $1C(A1),D1
00026E18 <AmiBlitz3.ab3@9898>    BSR.w uselib2
00026E1C <AmiBlitz3.ab3@9899>   MOVEM.l (A7)+,D1-D2
00026E22 <AmiBlitz3.ab3@9901>   MOVE.b (a7)+,debugmode
00026E24 <AmiBlitz3.ab3@9904> RTS
00026E26 <AmiBlitz3.ab3@9911>   MOVEQ.l #$00,D2       ;do list till this...
00026E2C <AmiBlitz3.ab3@9914>   MOVEA.l tokeslist,A2
00026E2E <AmiBlitz3.ab3@9915>   CMPA.l D2,A2
00026E32 <AmiBlitz3.ab3@9916>    BEQ.w 'done
00026E34 <AmiBlitz3.ab3@9917>   MOVE.l A2,-(A7)       ;next till...
00026E36 <AmiBlitz3.ab3@9920>   MOVEQ.l #$00,D3
00026E3A <AmiBlitz3.ab3@9923>   MOVEA.l $8(A2),A3
00026E3C <AmiBlitz3.ab3@9924>   CMPA.l D3,A3
00026E40 <AmiBlitz3.ab3@9925>    BEQ.w 'done4
00026E42 <AmiBlitz3.ab3@9927>   MOVE.l A3,-(A7)
00026E46 <AmiBlitz3.ab3@9928>   MOVEM.l D2-D3/A2-A3,-(A7)
00026E4A <AmiBlitz3.ab3@9929>   MOVE.w $4(A2),D1
00026E4E <AmiBlitz3.ab3@9930>   MOVE.w $6(A2),D2
00026E52 <AmiBlitz3.ab3@9932>    BSR.w tokecode
00026E56 <AmiBlitz3.ab3@9934>   MOVEM.l (A7)+,D2-D3/A2-A3
00026E5C <AmiBlitz3.ab3@9936>   MOVE.w dontwrite_nomemleft,D0
00026E60 <AmiBlitz3.ab3@9937>    BEQ.w 'ok
00026E62 <AmiBlitz3.ab3@9940>   MOVEA.l (A3),A3
00026E64 <AmiBlitz3.ab3@9941>   CMPA.l D3,A3
00026E68 <AmiBlitz3.ab3@9942>    BNE.w 'loop5
00026E6C <AmiBlitz3.ab3@9943>  BRA.w 'skipz
00026E70 <AmiBlitz3.ab3@9946>   MOVEA.l $4(A3),A0
00026E72 <AmiBlitz3.ab3@9947>   MOVE.l D7,(A0)
00026E74 <AmiBlitz3.ab3@9948>   MOVEA.l (A3),A3
00026E76 <AmiBlitz3.ab3@9949>   CMPA.l D3,A3
00026E7A <AmiBlitz3.ab3@9950>    BNE.w 'ok
00026E7C <AmiBlitz3.ab3@9953>   MOVE.l (A7)+,D3
00026E80 <AmiBlitz3.ab3@9954>  BRA.w 'loop3
00026E82 <AmiBlitz3.ab3@9957>    MOVEA.l (A2),A2
00026E84 <AmiBlitz3.ab3@9958>   CMPA.l D2,A2
00026E88 <AmiBlitz3.ab3@9959>    BNE.w 'loop2
00026E8A <AmiBlitz3.ab3@9960>   MOVE.l (A7)+,D2
00026E8E <AmiBlitz3.ab3@9961>  BRA.w 'loop
00026E90 <AmiBlitz3.ab3@9964> RTS
00026E92 <AmiBlitz3.ab3@9972>   MOVE.w D2,-(A7)
00026E96 <AmiBlitz3.ab3@9973>    BSR.w searchinstr
00026E98 <AmiBlitz3.ab3@9974>   MOVE.w (A7)+,D2
00026EA0 <AmiBlitz3.ab3@9976>   BCLR #$7,blitzmode
00026EA4 <AmiBlitz3.ab3@9977>   BCLR #$E,D2
00026EA8 <AmiBlitz3.ab3@9978>    BEQ.w 'isamiga
00026EB0 <AmiBlitz3.ab3@9979>   BSET #$7,blitzmode
00026EB2 <AmiBlitz3.ab3@9982>   TST.w (A3)
00026EB6 <AmiBlitz3.ab3@9983>    BEQ.w 'simple
00026EBC <AmiBlitz3.ab3@9984>   BTST #$2,$1(A3)
00026EC0 <AmiBlitz3.ab3@9985>    BNE.w tokeerr
00026EC6 <AmiBlitz3.ab3@9986>   BTST #$3,$1(A3)
00026ECA <AmiBlitz3.ab3@9987>    BNE.w tokeerr
00026ECE <AmiBlitz3.ab3@9991>   LEA $6(A3),A3     ;skip node
00026ED0 <AmiBlitz3.ab3@9994>   MOVE.w (A3)+,D0
00026ED4 <AmiBlitz3.ab3@9995>    BMI.w tokeerr
00026ED8 <AmiBlitz3.ab3@9996>   ANDI.w #$FF,D0
00026EDA <AmiBlitz3.ab3@9997>   ADDA.w D0,A3
00026EDC <AmiBlitz3.ab3@9998>   ADDQ.w #1,A3
00026EDE <AmiBlitz3.ab3@9999>   EXG.l D0,A3
00026EE2 <AmiBlitz3.ab3@10000>   BCLR #$0,D0
00026EE4 <AmiBlitz3.ab3@10001>   EXG.l D0,A3
00026EE6 <AmiBlitz3.ab3@10002>   SUBQ.w #1,D2
00026EEA <AmiBlitz3.ab3@10003>    BPL.w 'loop2
00026EEC <AmiBlitz3.ab3@10005>   TST.w (A3)
00026EF0 <AmiBlitz3.ab3@10006>    BNE.w 'go4it          ;no libs to fetch....
00026EF4 <AmiBlitz3.ab3@10007>   MOVE.l $2(A3),D0
00026EF8 <AmiBlitz3.ab3@10008>   OR.l $A(A3),D0
00026EFC <AmiBlitz3.ab3@10009>    BNE.w 'go4it          ;no error chx...
00026F02 <AmiBlitz3.ab3@10010>   BTST #$0,$9(A3)
00026F06 <AmiBlitz3.ab3@10011>    BNE.w 'go4it          ;ditto...
00026F0A <AmiBlitz3.ab3@10012>   MOVE.l $6(A3),D7       ;sub offset
00026F0E <AmiBlitz3.ab3@10013>   MOVE.w $0(A2,D7.L),D0
00026F12 <AmiBlitz3.ab3@10014>   ANDI.w #$F000,D0
00026F16 <AmiBlitz3.ab3@10015>   CMP.w #-$6000,D0
00026F1A <AmiBlitz3.ab3@10016>    BEQ.w 'go4it
00026F1E <AmiBlitz3.ab3@10019>   SUB.l $12(A2),D7
00026F22 <AmiBlitz3.ab3@10020>   ADD.l $28(A2),D7
00026F24 <AmiBlitz3.ab3@10021>  RTS
00026F2A <AmiBlitz3.ab3@10024>   LEA cutejsr,A0
00026F30 <AmiBlitz3.ab3@10028>   MOVE.l destpointer,-(A7)
00026F38 <AmiBlitz3.ab3@10029>   MOVE.w #$FFFF,lasta6     ; was -1
00026F3A <AmiBlitz3.ab3@10031>    JSR (A0)
00026F3E <AmiBlitz3.ab3@10032>   MOVE.w #$4E75,D1
00026F42 <AmiBlitz3.ab3@10033>    BSR.w writeword
00026F44 <AmiBlitz3.ab3@10035>   MOVE.l (A7)+,D7
00026F46 <AmiBlitz3.ab3@10036>  RTS
00026F48 <AmiBlitz3.ab3@10039>   TST.w (A3)+
00026F4C <AmiBlitz3.ab3@10040>    BEQ.w 'skip
00026F4E <AmiBlitz3.ab3@10041>   ADDQ.w #2,A3
00026F52 <AmiBlitz3.ab3@10042>  BRA.w 'loop2
00026F56 <AmiBlitz3.ab3@10045>   LEA $C(A3),A3
00026F5A <AmiBlitz3.ab3@10046>  BRA.w 'loop
00026F5C <AmiBlitz3.ab3@10049>   TST.w D2
00026F60 <AmiBlitz3.ab3@10050>    BNE.w tokeerr
00026F64 <AmiBlitz3.ab3@10052>   TST.w $6(A3)
00026F68 <AmiBlitz3.ab3@10053>    BNE.w 'be4it
00026F6C <AmiBlitz3.ab3@10054>   MOVE.l $8(A3),D0
00026F70 <AmiBlitz3.ab3@10055>   OR.l $10(A3),D0
00026F74 <AmiBlitz3.ab3@10056>    BNE.w 'be4it
00026F7A <AmiBlitz3.ab3@10057>   BTST #$0,$F(A3)
00026F7E <AmiBlitz3.ab3@10058>    BNE.w 'be4it
00026F82 <AmiBlitz3.ab3@10059>   MOVE.l $C(A3),D7
00026F86 <AmiBlitz3.ab3@10060>   MOVE.w $0(A2,D7.L),D0
00026F8A <AmiBlitz3.ab3@10061>   ANDI.w #$F000,D0
00026F8E <AmiBlitz3.ab3@10062>   CMP.w #-$6000,D0        ; was #$a000
00026F92 <AmiBlitz3.ab3@10063>    BNE.w 'penis
00026F94 <AmiBlitz3.ab3@10066>   MOVE.l A3,D1
00026F96 <AmiBlitz3.ab3@10067>   SUB.l A2,D1
00026F9C <AmiBlitz3.ab3@10068>   LEA Amakelibsub,A0
00026FA0 <AmiBlitz3.ab3@10069> BRA.w 'putcode
00026FA6 <AmiBlitz3.ab3@10073>   MOVEA.l _execbase,A6
00026FAC <AmiBlitz3.ab3@10074>   MOVEA.l tokeslist,A2
00026FB2 <AmiBlitz3.ab3@10075>   CLR.l tokeslist
00026FB6 <AmiBlitz3.ab3@10078>     CMPA.w #$0,A2
00026FBA <AmiBlitz3.ab3@10079>      BEQ.w 'done2
00026FBE <AmiBlitz3.ab3@10080>     MOVEA.l $8(A2),A3
00026FC2 <AmiBlitz3.ab3@10083>       CMPA.w #$0,A3
00026FC6 <AmiBlitz3.ab3@10084>        BEQ.w 'done3
00026FC8 <AmiBlitz3.ab3@10085>       MOVEA.l A3,A1
00026FCA <AmiBlitz3.ab3@10086>       MOVEA.l (A3),A3
00026FCC <AmiBlitz3.ab3@10087>       MOVEQ.l #$08,D0
00026FD2 <AmiBlitz3.ab3@10089>       MOVE.l mempool,a0
00026FD8 <AmiBlitz3.ab3@10090>       MOVEA.l _execbase,A6
00026FDC <AmiBlitz3.ab3@10091>       JSR _FreePooled(A6)
00026FE0 <AmiBlitz3.ab3@10094>  BRA.w 'floop2
00026FE2 <AmiBlitz3.ab3@10097>     MOVEA.l A2,A1
00026FE4 <AmiBlitz3.ab3@10098>     MOVEA.l (A2),A2
00026FE6 <AmiBlitz3.ab3@10099>     MOVEQ.l #$0C,D0
00026FEC <AmiBlitz3.ab3@10101>     MOVE.l mempool,a0
00026FF2 <AmiBlitz3.ab3@10102>     MOVEA.l _execbase,A6
00026FF6 <AmiBlitz3.ab3@10103>     JSR _FreePooled(A6)
00026FFA <AmiBlitz3.ab3@10106>  BRA.w 'floop
00026FFC <AmiBlitz3.ab3@10109> RTS
00027000 <AmiBlitz3.ab3@10115>   MOVEM.l D3-D5/A1-A6,-(A7)
00027002 <AmiBlitz3.ab3@10116>   MOVEA.l A1,A4
00027004 <AmiBlitz3.ab3@10119>   MOVE.l (A2)+,D3
00027008 <AmiBlitz3.ab3@10120>   MOVE.w $0(A4,D3.L),D5
0002700C <AmiBlitz3.ab3@10121>    BPL.w 'next
00027010 <AmiBlitz3.ab3@10123>   TST.l $2C(A4)
00027014 <AmiBlitz3.ab3@10124>    BEQ.w 'skipr
0002701A <AmiBlitz3.ab3@10125>   TST.b debugmode
0002701E <AmiBlitz3.ab3@10126>    BNE.w 'skipr
00027022 <AmiBlitz3.ab3@10127>   CMP.l $2C(A4),D3
00027026 <AmiBlitz3.ab3@10128>    BCC.w 'next
0002702A <AmiBlitz3.ab3@10131>   BCLR #$F,D5             ;to offset number
0002702E <AmiBlitz3.ab3@10132>   MOVE.w $2(A4,D3.L),D4
00027032 <AmiBlitz3.ab3@10133>   SUB.l $12(A4),D3
00027036 <AmiBlitz3.ab3@10134>   ADD.l $28(A4),D3
0002703A <AmiBlitz3.ab3@10136>   MOVEM.l D2/A2/A4,-(A7)
0002703E <AmiBlitz3.ab3@10137>    BSR.w maketjsr
00027042 <AmiBlitz3.ab3@10138>   MOVEM.l (A7)+,D2/A2/A4
00027044 <AmiBlitz3.ab3@10141>   SUBQ.l #1,D2
00027048 <AmiBlitz3.ab3@10142>    BNE.w 'loop
0002704C <AmiBlitz3.ab3@10144>   MOVEM.l (A7)+,D3-D5/A1-A6
0002704E <AmiBlitz3.ab3@10145> RTS
00027054 <AmiBlitz3.ab3@10153>   LEA tokeslist,A3
0002705A <AmiBlitz3.ab3@10154>   MOVEA.l _execbase,A6
0002705C <AmiBlitz3.ab3@10157>   MOVE.l (A3),D0
00027060 <AmiBlitz3.ab3@10158>    BEQ.w 'notfound
00027062 <AmiBlitz3.ab3@10159>   MOVEA.l D0,A3
00027066 <AmiBlitz3.ab3@10160>   CMP.w $4(A3),D4
0002706A <AmiBlitz3.ab3@10161>    BNE.w 'loop2
0002706E <AmiBlitz3.ab3@10162>   CMP.w $6(A3),D5
00027072 <AmiBlitz3.ab3@10163>    BNE.w 'loop2
00027076 <AmiBlitz3.ab3@10164>  BRA.w 'found
00027078 <AmiBlitz3.ab3@10169>   MOVEQ.l #$0C,D0
0002707A <AmiBlitz3.ab3@10170>   MOVEQ.l #$01,D1
00027080 <AmiBlitz3.ab3@10172>   MOVE.l mempool,a0
00027084 <AmiBlitz3.ab3@10173>   JSR _AllocPooled(a6)
00027086 <AmiBlitz3.ab3@10176>   MOVEA.l D0,A3
0002708C <AmiBlitz3.ab3@10177>   MOVE.l tokeslist,(A3)
00027092 <AmiBlitz3.ab3@10178>   MOVE.l A3,tokeslist
00027096 <AmiBlitz3.ab3@10179>   MOVE.w D4,$4(A3)
0002709A <AmiBlitz3.ab3@10180>   MOVE.w D5,$6(A3)
0002709E <AmiBlitz3.ab3@10181>   CLR.l $8(A3)
000270A0 <AmiBlitz3.ab3@10184>   MOVEQ.l #$08,D0
000270A2 <AmiBlitz3.ab3@10185>   MOVEQ.l #$01,D1
000270A8 <AmiBlitz3.ab3@10187>   MOVE.l mempool,a0
000270AC <AmiBlitz3.ab3@10188>   JSR _AllocPooled(a6)
000270AE <AmiBlitz3.ab3@10191>   MOVEA.l D0,A0
000270B2 <AmiBlitz3.ab3@10192>   MOVE.l D3,$4(A0)
000270B6 <AmiBlitz3.ab3@10193>   MOVE.l $8(A3),(A0)
000270BA <AmiBlitz3.ab3@10194>   MOVE.l A0,$8(A3)
000270BC <AmiBlitz3.ab3@10196>   MOVE.w D4,D1
000270C0 <AmiBlitz3.ab3@10197> BRA.w searchinstr       ;use this library - NOW!
000270C4 <AmiBlitz3.ab3@10200> tokeslist: Ds.l 1
000270C8 <AmiBlitz3.ab3@10213>   BEQ.w 'skip
000270CA <AmiBlitz3.ab3@10214>   MOVE.l A1,-(A7)
000270CC <AmiBlitz3.ab3@10215>   ADDA.l D1,A1
000270CE <AmiBlitz3.ab3@10216>   ADDQ.w #6,A1
000270D0 <AmiBlitz3.ab3@10219>     MOVE.w (A1)+,D1
000270D4 <AmiBlitz3.ab3@10220>     BEQ.w 'done
000270D6 <AmiBlitz3.ab3@10221>     CMP.w D2,D1
000270DA <AmiBlitz3.ab3@10222>     BEQ.w 'skip2
000270DC <AmiBlitz3.ab3@10223>     MOVE.l A1,-(A7)
000270E0 <AmiBlitz3.ab3@10224>     BSR.w uselib
000270E2 <AmiBlitz3.ab3@10225>     MOVEA.l (A7)+,A1
000270E4 <AmiBlitz3.ab3@10228>     ADDQ.w #2,A1
000270E8 <AmiBlitz3.ab3@10229>  BRA.w 'loop
000270EA <AmiBlitz3.ab3@10232>   MOVEA.l (A7)+,A1
000270EC <AmiBlitz3.ab3@10235> RTS
000270F2 <AmiBlitz3.ab3@10239>   MOVEA.l libpointer,A1
000270F6 <AmiBlitz3.ab3@10242>   CMPA.w #$0,A1
000270FA <AmiBlitz3.ab3@10243>    BEQ.b 'rts
000270FE <AmiBlitz3.ab3@10244>   CMP.w $4(A1),D1
00027102 <AmiBlitz3.ab3@10245>    BEQ.w 'found
00027104 <AmiBlitz3.ab3@10246>   MOVEA.l (A1),A1
00027108 <AmiBlitz3.ab3@10247>  BRA.w 'loop
0002710A <AmiBlitz3.ab3@10250>   MOVEQ.l #-$01,D1
0002710C <AmiBlitz3.ab3@10253> RTS
00027110 <AmiBlitz3.ab3@10260>   MOVEM.l d0/a2,-(a7)
00027112 <AmiBlitz3.ab3@10261>   MOVEQ #0,d0
00027118 <AmiBlitz3.ab3@10262>   LEA instrtab+4,a2
0002711A <AmiBlitz3.ab3@10263>   MOVE.w d1,d0
0002711C <AmiBlitz3.ab3@10264>   ASL.l #3,d0
00027120 <AmiBlitz3.ab3@10265>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00027126 <AmiBlitz3.ab3@10266>   CMP.l #0,a1
0002712A <AmiBlitz3.ab3@10267>   BNE 'foundb
00027130 <AmiBlitz3.ab3@10269>   MOVEA.l libpointer,A1
00027134 <AmiBlitz3.ab3@10272>     CMPA.w #$0,A1
00027138 <AmiBlitz3.ab3@10274>     BEQ.w noliberr
0002713C <AmiBlitz3.ab3@10276>     CMP.w $4(A1),D1
00027140 <AmiBlitz3.ab3@10277>     BEQ.w 'found
00027142 <AmiBlitz3.ab3@10278>    MOVEA.l (A1),A1
00027146 <AmiBlitz3.ab3@10279>  BRA.w 'loop
0002714A <AmiBlitz3.ab3@10283>   MOVE.l a1,0(a2,d0.l)
0002714E <AmiBlitz3.ab3@10286>   MOVEM.l (a7)+,d0/a2
00027150 <AmiBlitz3.ab3@10288> RTS
00027154 <AmiBlitz3.ab3@10298>   MOVEM.l d0-d1/a1,-(a7)
00027156 <AmiBlitz3.ab3@10299>   MOVEQ #0,d0
0002715C <AmiBlitz3.ab3@10300>   LEA instrtab,a1
0002715E <AmiBlitz3.ab3@10301>   MOVE.w d1,d0
00027160 <AmiBlitz3.ab3@10302>   ASL.l #3,d0
00027164 <AmiBlitz3.ab3@10303>   MOVE.l 0(a1,d0.l),a3
00027168 <AmiBlitz3.ab3@10304>   MOVE.l 4(a1,d0.l),a2
0002716E <AmiBlitz3.ab3@10305>   CMP.l #0,a3
00027172 <AmiBlitz3.ab3@10306>   BNE 'foundb
00027178 <AmiBlitz3.ab3@10309>   MOVEA.l libpointer,A2
0002717C <AmiBlitz3.ab3@10312>   CMPA.w #$0,A2
00027180 <AmiBlitz3.ab3@10313>   BEQ.w notokerr
00027184 <AmiBlitz3.ab3@10314>   CMP.w $E(A2),D1
00027188 <AmiBlitz3.ab3@10315>   BCS.w 'next
0002718C <AmiBlitz3.ab3@10316>   CMP.w $10(A2),D1
00027190 <AmiBlitz3.ab3@10317>   BCC.w 'next
00027194 <AmiBlitz3.ab3@10321>   LEA $30(A2),A3
00027198 <AmiBlitz3.ab3@10322>   TST.w $4(A2)
0002719C <AmiBlitz3.ab3@10323>   BPL.w 'userlib
000271A0 <AmiBlitz3.ab3@10326>     CMP.w $E(A2),D1
000271A4 <AmiBlitz3.ab3@10327>     BEQ.w 'found
000271A6 <AmiBlitz3.ab3@10328>     SUBQ.w #1,D1
000271AA <AmiBlitz3.ab3@10329>     MOVEA.l $2(A3),A3
000271AE <AmiBlitz3.ab3@10330>  BRA.w 'loop2
000271B2 <AmiBlitz3.ab3@10334>   MOVE.l a3,0(a1,d0.l)
000271B6 <AmiBlitz3.ab3@10335>   MOVE.l a2,4(a1,d0.l)
000271BA <AmiBlitz3.ab3@10338>   MOVEM.l (a7)+,d0-d1/a1
000271BE <AmiBlitz3.ab3@10340>   MOVEM.l D1/A1-a3,-(A7)      ; was  movem.l d1/a1,-(a7)
000271C2 <AmiBlitz3.ab3@10342>   CMP.w #1,(a3)
000271C6 <AmiBlitz3.ab3@10343>   BNE.s 'ex10
000271CE <AmiBlitz3.ab3@10344>   CMP.l #$12345678,$e(a3)
000271D2 <AmiBlitz3.ab3@10345>   BNE.s 'ex10
000271D8 <AmiBlitz3.ab3@10346>   CMP.w #$ffff,$16(a3)
000271DC <AmiBlitz3.ab3@10347>   BNE.s 'ex10
000271E0 <AmiBlitz3.ab3@10348>   MOVE.l $12(a3),d1
000271E4 <AmiBlitz3.ab3@10349>   BEQ.s 'ex10
000271EA <AmiBlitz3.ab3@10350>   LEA pluginbase,a3
000271EE <AmiBlitz3.ab3@10352>  JMP 0(a2,d1.l)                                             ;plugin
000271F0 <AmiBlitz3.ab3@10356>   MOVEA.l A2,A1
000271F6 <AmiBlitz3.ab3@10358>   CLR.b newmode
000271FA <AmiBlitz3.ab3@10360>   MOVE.w $4(A1),D1       ;set lib#
000271FE <AmiBlitz3.ab3@10365>   BSR.w uselib3
00027202 <AmiBlitz3.ab3@10366>   MOVEM.l (A7)+,D1/A1-a3
00027204 <AmiBlitz3.ab3@10367>  RTS
0002720A <AmiBlitz3.ab3@10371>   MOVE.w globalvarpointer,-(a7)         ; "
00027212 <AmiBlitz3.ab3@10372>   MOVE.w #$8004,globalvarpointer        ; "
00027216 <AmiBlitz3.ab3@10373>   BSR.w uselib3                         ; "
0002721C <AmiBlitz3.ab3@10374>   MOVE.w (a7)+,globalvarpointer         ; "
00027220 <AmiBlitz3.ab3@10375>   MOVEM.l (A7)+,D1/A1-a3
00027222 <AmiBlitz3.ab3@10376>  RTS
00027226 <AmiBlitz3.ab3@10380>     CMP.w $E(A2),D1
0002722A <AmiBlitz3.ab3@10381>     BEQ.w 'found
0002722C <AmiBlitz3.ab3@10382>     SUBQ.w #1,D1
00027230 <AmiBlitz3.ab3@10383>     MOVEA.l $2(A3),A3
00027234 <AmiBlitz3.ab3@10384>  BRA.w 'userlib
00027236 <AmiBlitz3.ab3@10387>   MOVEA.l (A2),A2
0002723A <AmiBlitz3.ab3@10388> BRA.w 'loop
0002723E <AmiBlitz3.ab3@10392>   MOVEM.l (A7)+,D1/A1-a3
00027244 <AmiBlitz3.ab3@10393>   JSR stripspaces
00027246 <AmiBlitz3.ab3@10394>   MOVEQ #0,d0
00027248 <AmiBlitz3.ab3@10395>   MOVE.b (a5)+,d0
0002724E <AmiBlitz3.ab3@10396>   MOVE.w d0,lastchar
00027250 <AmiBlitz3.ab3@10397>   ADDQ.l #4,a7
00027252 <AmiBlitz3.ab3@10398> RTS
00027258 <AmiBlitz3.ab3@10401> JUMP_writeword JMP writeword
0002725C <AmiBlitz3.ab3@10404> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00027260 <AmiBlitz3.ab3@10405> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00027264 <AmiBlitz3.ab3@10406> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00027266 <AmiBlitz3.ab3@10416>   TST.l D0
0002726A <AmiBlitz3.ab3@10417>   BEQ.w 'rts
0002726C <AmiBlitz3.ab3@10418>     MOVE.l D0,D6                                           ;d6=len
00027272 <AmiBlitz3.ab3@10419>     MOVEA.l _dosbase,A6
00027278 <AmiBlitz3.ab3@10420>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
0002727C <AmiBlitz3.ab3@10421>     JSR _Open(A6)
0002727E <AmiBlitz3.ab3@10422>     MOVE.l D0,D7
00027282 <AmiBlitz3.ab3@10423>     BEQ.w 'rts
00027284 <AmiBlitz3.ab3@10424>       MOVE.l D6,D0
00027286 <AmiBlitz3.ab3@10425>       MOVEQ.l #$01,D1
0002728C <AmiBlitz3.ab3@10426>       MOVEA.l _execbase,A6
00027292 <AmiBlitz3.ab3@10429>       MOVE.l mempool,a0
00027296 <AmiBlitz3.ab3@10430>       JSR _AllocPooled(a6)
00027298 <AmiBlitz3.ab3@10432>       MOVE.l D0,D5                                         ;start address
0002729A <AmiBlitz3.ab3@10434>       MOVE.l D7,D1                                         ; handle
0002729C <AmiBlitz3.ab3@10435>       MOVE.l D5,D2                                         ; buffer addr
0002729E <AmiBlitz3.ab3@10436>       MOVE.l D6,D3                                         ; size
000272A4 <AmiBlitz3.ab3@10437>       MOVEA.l _dosbase,A6
000272A8 <AmiBlitz3.ab3@10438>       JSR _Read(A6)
000272AA <AmiBlitz3.ab3@10439>       MOVE.l D7,D1
000272AE <AmiBlitz3.ab3@10440>       JSR _Close(A6)
000272B0 <AmiBlitz3.ab3@10442>       MOVEA.l D5,A0                                        ; buffer addr
000272B2 <AmiBlitz3.ab3@10448>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
000272B6 <AmiBlitz3.ab3@10449>         BEQ.b 'linkdone                                    ; wenn <> 0, dann
000272BA <AmiBlitz3.ab3@10450>           LEA $20(A0),A1  ;link in.                        ;   lade inhalt von D0+40bytes nach A1
000272BC <AmiBlitz3.ab3@10451>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
000272BE <AmiBlitz3.ab3@10452>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
000272C0 <AmiBlitz3.ab3@10453>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
000272C4 <AmiBlitz3.ab3@10457>           MOVE.l -$4(A1),D0    ;number of longwords.       ;   hole die 4bytes vor nach D0
000272C6 <AmiBlitz3.ab3@10458>           ADD.l D0,D0          ;to bytes...                ;   verdoppele D0
000272C8 <AmiBlitz3.ab3@10459>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
000272CC <AmiBlitz3.ab3@10460>           MOVE.l D0,$6(A1)     ;fix 1                      ;   schreibe D0 6bytes nach A1
000272D0 <AmiBlitz3.ab3@10461>           CLR.l $20(A1)        ;no relocs                  ;   loesche D0+40bytes
000272D4 <AmiBlitz3.ab3@10462>           LEA $C(A1,D0.L),A2   ;reloc info.                ;   lade inhalt von (A1)+D0+$C nach A2
000272D6 <AmiBlitz3.ab3@10463>           CMPA.l A0,A2         ;is it over?
000272DA <AmiBlitz3.ab3@10464>           BCC.b 'linkloop                                  ; wenn A0=>A2
000272E0 <AmiBlitz3.ab3@10466>             MOVE.l -$8(A2),$20(A1)  ;number of relocs.     ;
000272E4 <AmiBlitz3.ab3@10467>             MOVE.l A2,$24(A1)       ;pointer to relocs.    ;
000272E8 <AmiBlitz3.ab3@10468>   BRA.w 'linkloop
000272EA <AmiBlitz3.ab3@10471>       MOVE.l D5,D0
000272EC <AmiBlitz3.ab3@10474> RTS
00027316 <AmiBlitz3.ab3@10479>   !basic
0002738A <AmiBlitz3.ab3@10480>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
000273BE <AmiBlitz3.ab3@10481>    dos_Delete{tempmapping$}
00027402 <AmiBlitz3.ab3@10482>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00027420 <AmiBlitz3.ab3@10483>   !asm
00027426 <AmiBlitz3.ab3@10485>   LEA libpointer,A3
0002742C <AmiBlitz3.ab3@10489>   MOVE.l size_deflibs,D0                 ; in org source was acid libs first
00027432 <AmiBlitz3.ab3@10490>   MOVE.l deflib,d1
00027436 <AmiBlitz3.ab3@10492>   BEQ 'l1
0002743A <AmiBlitz3.ab3@10493>  BRA 'l2
00027440 <AmiBlitz3.ab3@10496>   MOVE.l #str_path_deflibs,D1
00027444 <AmiBlitz3.ab3@10500>   BSR.w load_libsfile
0002744A <AmiBlitz3.ab3@10501>   MOVE.l D0,ptr_deflibs
00027450 <AmiBlitz3.ab3@10504>   MOVE.l size_acidlibs,D0               ; in org source was deflibs libs second
00027456 <AmiBlitz3.ab3@10505>   MOVE.l #str_path_acidlibs,D1
0002745A <AmiBlitz3.ab3@10506>   BSR.w load_libsfile
00027460 <AmiBlitz3.ab3@10507>   MOVE.l D0,ptr_acidlibs
00027462 <AmiBlitz3.ab3@10513>   CLR.l (A3)
00027468 <AmiBlitz3.ab3@10514>   MOVE.l A3,ptr_userlibs
0002746E <AmiBlitz3.ab3@10519>   LEA str_libfilename,A0
00027474 <AmiBlitz3.ab3@10520>   LEA str_path_userlibs,A1
00027476 <AmiBlitz3.ab3@10523>     MOVE.b (A1)+,(A0)+
0002747A <AmiBlitz3.ab3@10524>   BNE.b 'loop0
0002747C <AmiBlitz3.ab3@10527>   SUBQ.w #1,A0
00027480 <AmiBlitz3.ab3@10528>   MOVE.b #$2F,(A0)+
00027482 <AmiBlitz3.ab3@10532>   MOVE.l A0,-(A7) ;store first pos for chars        ; -- store str_path_userlibs in A7
00027488 <AmiBlitz3.ab3@10534>   LEA ptr_userlibs_list,A2   ;lib names!
0002748E <AmiBlitz3.ab3@10535>   MOVEA.l ptr_userlibs,A3
00027494 <AmiBlitz3.ab3@10536>   MOVEA.l _dosbase,A6
00027496 <AmiBlitz3.ab3@10541>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
0002749A <AmiBlitz3.ab3@10542>       BNE.b 'more                                      ; wenn nix drin, processing ueberspringen
0002749C <AmiBlitz3.ab3@10544>       CLR.l (A3)
0002749E <AmiBlitz3.ab3@10545>       ADDQ.w #4,A7
000274C8 <AmiBlitz3.ab3@10547>       !basic
000274DC <AmiBlitz3.ab3@10548>       If fid<>-1
000274E6 <AmiBlitz3.ab3@10549>         file_Close{fid}
000274F2 <AmiBlitz3.ab3@10550>         fid = -1
00027510 <AmiBlitz3.ab3@10552>       !asm
00027514 <AmiBlitz3.ab3@10554>  BRA.w process_libraries
00027516 <AmiBlitz3.ab3@10557>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
0002751A <AmiBlitz3.ab3@10558>       TST.w $4(A2)                                         ; naechste addresse pruefen
0002751E <AmiBlitz3.ab3@10559>     BEQ.b 'loop
00027522 <AmiBlitz3.ab3@10561>     LEA $6(A2),A1          ;add dir name to libsdir
00027524 <AmiBlitz3.ab3@10562>     MOVEA.l (A7),A0
00027526 <AmiBlitz3.ab3@10565>       MOVE.b (A1)+,(A0)+
0002752A <AmiBlitz3.ab3@10566>     BNE.w 'loop2
0002752C <AmiBlitz3.ab3@10570>     MOVE.l A0,-(A7)                  ;pointer for lib name
00027532 <AmiBlitz3.ab3@10572>     MOVE.l #str_libfilename,D1
00027534 <AmiBlitz3.ab3@10573>     MOVEQ.l #-$02,D2
0002753A <AmiBlitz3.ab3@10574>     MOVEA.l _dosbase,A6
0002753E <AmiBlitz3.ab3@10575>      JSR _Lock(A6)
00027540 <AmiBlitz3.ab3@10576>     MOVE.l D0,D1
00027544 <AmiBlitz3.ab3@10577>      BEQ.w 'exdone2
00027546 <AmiBlitz3.ab3@10578>     MOVEA.l (A7),A0
0002754C <AmiBlitz3.ab3@10579>     MOVE.b #$2F,-$1(A0)           ;#'/'
0002754E <AmiBlitz3.ab3@10582>     MOVE.l D1,-(A7)               ;lock
00027554 <AmiBlitz3.ab3@10583>     MOVE.l #ptr_parameterstore,D2
0002755A <AmiBlitz3.ab3@10584>     MOVEA.l _dosbase,A6
0002755E <AmiBlitz3.ab3@10585>     JSR _Examine(A6)
00027560 <AmiBlitz3.ab3@10586>     TST.l D0
00027564 <AmiBlitz3.ab3@10587>      BEQ.w 'exdone
0002756A <AmiBlitz3.ab3@10594>     LEA fib_FileName,A0
0002756E <AmiBlitz3.ab3@10595>     BSR.w check_for_infoextention
00027572 <AmiBlitz3.ab3@10596>     BEQ.w 'exdone
0002759C <AmiBlitz3.ab3@10600>     !basic
00027620 <AmiBlitz3.ab3@10601>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002763E <AmiBlitz3.ab3@10602>     !asm
00027644 <AmiBlitz3.ab3@10603>     MOVE.l #str_libfilename,D1
00027648 <AmiBlitz3.ab3@10604>     BSR.w open_userlibfile
0002764A <AmiBlitz3.ab3@10608>     MOVE.l (A7)+,D1
00027650 <AmiBlitz3.ab3@10609>     MOVEA.l _dosbase,A6
00027654 <AmiBlitz3.ab3@10610>     JSR _UnLock(A6)
00027656 <AmiBlitz3.ab3@10613>     ADDQ.w #4,A7    ;forget namepos
0002765A <AmiBlitz3.ab3@10614> BRA.w 'loop
00027660 <AmiBlitz3.ab3@10621>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00027666 <AmiBlitz3.ab3@10622>   MOVEA.l _dosbase,A6
0002766A <AmiBlitz3.ab3@10623>    JSR _Open(A6)
0002766C <AmiBlitz3.ab3@10624>   MOVE.l D0,D7
00027670 <AmiBlitz3.ab3@10625>    BEQ.w 'openerr
00027672 <AmiBlitz3.ab3@10628>   MOVE.l D7,D1                                             ; filehandle
00027678 <AmiBlitz3.ab3@10629>   MOVE.l #optstuff,D2                                     ; buffer
0002767E <AmiBlitz3.ab3@10630>   MOVEA.l _dosbase,A6
00027680 <AmiBlitz3.ab3@10631>   MOVEQ.l #$20,D3                                          ; size
00027684 <AmiBlitz3.ab3@10632>   JSR _Read(A6)
0002768A <AmiBlitz3.ab3@10635>   MOVE.l optstuff+28,D6      ;long words to read
0002768C <AmiBlitz3.ab3@10636>   LSL.l #2,D6
0002768E <AmiBlitz3.ab3@10637>   MOVE.l D6,D0
00027690 <AmiBlitz3.ab3@10638>   MOVEQ.l #$01,D1
00027696 <AmiBlitz3.ab3@10639>   MOVEA.l _execbase,A6
0002769C <AmiBlitz3.ab3@10642>   MOVE.l mempool,a0
000276A0 <AmiBlitz3.ab3@10643>   JSR _AllocPooled(a6)
000276A2 <AmiBlitz3.ab3@10645>   MOVEA.l D0,A5
000276A8 <AmiBlitz3.ab3@10648>   MOVEA.l _dosbase,A6
000276AA <AmiBlitz3.ab3@10649>   MOVE.l D7,D1                                             ; filehandle
000276AC <AmiBlitz3.ab3@10650>   MOVE.l A5,D2                                             ; buffer
000276AE <AmiBlitz3.ab3@10651>   MOVE.l D6,D3                                             ; size
000276B2 <AmiBlitz3.ab3@10652>    JSR _Read(A6)   ;read in struct
000276B4 <AmiBlitz3.ab3@10654>   MOVE.l A5,(A3)
000276B6 <AmiBlitz3.ab3@10657>   MOVE.l A5,d0
000276B8 <AmiBlitz3.ab3@10660>   MOVEA.l A5,A3
000276BC <AmiBlitz3.ab3@10661>   MOVE.l D6,$6(A5)
000276C0 <AmiBlitz3.ab3@10662>   CLR.l $20(A5)
000276EA <AmiBlitz3.ab3@10664>   !basic
000276F4 <AmiBlitz3.ab3@10666>   addr_libnum.l = PutD0 + 4
00027708 <AmiBlitz3.ab3@10667>   If fid<>-1
000277A8 <AmiBlitz3.ab3@10668>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
000277DA <AmiBlitz3.ab3@10669>     file_WriteLine{fid,currentlib$}
000277F8 <AmiBlitz3.ab3@10671>   !asm
000277FA <AmiBlitz3.ab3@10674>   MOVE.l D7,D1                                             ; filehandle
00027800 <AmiBlitz3.ab3@10675>   MOVE.l #optstuff,D2                                     ; buffer
00027802 <AmiBlitz3.ab3@10676>   MOVEQ.l #$0C,D3                                          ; size
00027808 <AmiBlitz3.ab3@10677>   MOVEA.l _dosbase,A6
0002780C <AmiBlitz3.ab3@10678>    JSR _Read(A6)
00027812 <AmiBlitz3.ab3@10681>   CMP.l #$C,D0
00027816 <AmiBlitz3.ab3@10682>    BCS.w 'closeup
0002781C <AmiBlitz3.ab3@10685>   MOVE.l optstuff+4,D0
00027820 <AmiBlitz3.ab3@10686>   MOVE.l D0,$20(A5)
00027822 <AmiBlitz3.ab3@10687>   LSL.l #2,D0
00027824 <AmiBlitz3.ab3@10688>   MOVE.l D0,D5             ;length of reloc info
00027826 <AmiBlitz3.ab3@10689>   MOVEQ.l #$01,D1
0002782C <AmiBlitz3.ab3@10690>   MOVEA.l _execbase,A6
00027832 <AmiBlitz3.ab3@10692>   MOVE.l mempool,a0
00027836 <AmiBlitz3.ab3@10693>   JSR _AllocPooled(a6)
0002783C <AmiBlitz3.ab3@10696>   MOVEA.l _dosbase,A6
00027840 <AmiBlitz3.ab3@10698>   MOVE.l D0,$24(A5)        ;pointer to reloc mem
00027842 <AmiBlitz3.ab3@10699>   MOVE.l D7,D1
00027844 <AmiBlitz3.ab3@10700>   MOVE.l D0,D2
00027846 <AmiBlitz3.ab3@10701>   MOVE.l D5,D3
0002784A <AmiBlitz3.ab3@10702>   JSR _Read(A6)
0002784C <AmiBlitz3.ab3@10705>   MOVE.l D7,D1
00027852 <AmiBlitz3.ab3@10706>   MOVEA.l _dosbase,A6
00027856 <AmiBlitz3.ab3@10707> JMP _Close(A6)
00027858 <AmiBlitz3.ab3@10710> RTS
0002785E <AmiBlitz3.ab3@10720>   CLR.w number_of_objects
00027864 <AmiBlitz3.ab3@10721>   MOVEA.l end_of_tokenlist,A3
0002786A <AmiBlitz3.ab3@10722>   MOVEA.l libpointer,A2
0002786E <AmiBlitz3.ab3@10725>     CMPA.w #$0,A2
00027872 <AmiBlitz3.ab3@10726>     BEQ.w 'done                                        ; <-- abbruch mit RTS
00027876 <AmiBlitz3.ab3@10728>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
0002787A <AmiBlitz3.ab3@10729>     BMI.w 'syslib
0002787C <AmiBlitz3.ab3@10730>       LSL.w #7,D7
0002787E <AmiBlitz3.ab3@10731>       ADDQ.w #1,D7
00027882 <AmiBlitz3.ab3@10732>       MOVE.w D7,$E(A2)
00027886 <AmiBlitz3.ab3@10735>     LEA $30(A2),A1
0002788C <AmiBlitz3.ab3@10736>     LEA temp1,A4
0002788E <AmiBlitz3.ab3@10739>       MOVE.w (A1),D0
00027892 <AmiBlitz3.ab3@10740>       BMI.w 'next
00027894 <AmiBlitz3.ab3@10741>       MOVE.l A1,(A4)
00027896 <AmiBlitz3.ab3@10742>       MOVEA.l A1,A4      ;last link for subs
00027898 <AmiBlitz3.ab3@10743>       ADDQ.w #2,A4
0002789A <AmiBlitz3.ab3@10744>       ADDQ.w #6,A1
0002789E <AmiBlitz3.ab3@10745>       CMP.w #$8,D0
000278A2 <AmiBlitz3.ab3@10746>       BEQ.w 'addtoke
000278A6 <AmiBlitz3.ab3@10747>         ANDI.w #$F,D0
000278AA <AmiBlitz3.ab3@10748>         BNE.w 'something
000278AE <AmiBlitz3.ab3@10752>           BSR.w skiplibreg
000278B2 <AmiBlitz3.ab3@10753>           LEA $C(A1),A1
000278B4 <AmiBlitz3.ab3@10754>           ADDQ.w #1,D7   ;in case it's a user lib
000278B8 <AmiBlitz3.ab3@10755>  BRA.w 'loop2
000278BC <AmiBlitz3.ab3@10758>     BTST #$2,D0
000278C0 <AmiBlitz3.ab3@10759>     BEQ.w 'notalib
000278C2 <AmiBlitz3.ab3@10760>       ADDQ.w #4,A1
000278C4 <AmiBlitz3.ab3@10763>         TST.b (A1)+
000278C8 <AmiBlitz3.ab3@10764>       BPL.w 'alibloop
000278CC <AmiBlitz3.ab3@10765>       BSR.w aligna1
000278D0 <AmiBlitz3.ab3@10766>  BRA.w 'addtoke
000278D2 <AmiBlitz3.ab3@10771>       MOVE.w (A1)+,D0
000278D6 <AmiBlitz3.ab3@10772>       BMI.w 'addtoke
000278DA <AmiBlitz3.ab3@10773>       ANDI.w #$FF,D0
000278DC <AmiBlitz3.ab3@10774>       ADDA.w D0,A1
000278E0 <AmiBlitz3.ab3@10775>       BSR.w aligna1
000278E4 <AmiBlitz3.ab3@10776>       BSR.w skiplibreg
000278E8 <AmiBlitz3.ab3@10777>       LEA $C(A1),A1
000278EC <AmiBlitz3.ab3@10778>  BRA.w 'stloop
000278EE <AmiBlitz3.ab3@10781>     MOVE.l A1,(A3)
000278F0 <AmiBlitz3.ab3@10782>     MOVEA.l A1,A3
000278F2 <AmiBlitz3.ab3@10783>     ADDQ.w #4,A1
000278F4 <AmiBlitz3.ab3@10785>     MOVE.w D7,(A1)+
000278F6 <AmiBlitz3.ab3@10788>       TST.b (A1)+
000278FA <AmiBlitz3.ab3@10789>     BNE.w 'tokeloop
000278FC <AmiBlitz3.ab3@10792>       TST.b (A1)+
00027900 <AmiBlitz3.ab3@10793>     BNE.w 'tokeloop2
00027904 <AmiBlitz3.ab3@10794>     BSR.w aligna1
00027906 <AmiBlitz3.ab3@10795>     ADDQ.w #1,D7
0002790A <AmiBlitz3.ab3@10796>  BRA.w 'loop2
0002790E <AmiBlitz3.ab3@10799>     TST.w $4(A2)
00027912 <AmiBlitz3.ab3@10800>      BMI.w 'notulib
00027916 <AmiBlitz3.ab3@10801>     MOVE.w D7,$10(A2)
00027918 <AmiBlitz3.ab3@10804>     ADDQ.w #2,A1
0002791A <AmiBlitz3.ab3@10805>     TST.l (A1)+
0002791E <AmiBlitz3.ab3@10806>      BEQ.w 'nomax
00027924 <AmiBlitz3.ab3@10807>     ADDQ.w #1,number_of_objects
00027928 <AmiBlitz3.ab3@10808>     LEA $16(A1),A1
0002792A <AmiBlitz3.ab3@10811>     SUBA.l A2,A1
0002792E <AmiBlitz3.ab3@10812>     MOVE.l A1,$12(A2)
00027930 <AmiBlitz3.ab3@10813>     MOVEA.l (A2),A2
00027934 <AmiBlitz3.ab3@10814>  BRA.w 'loop
00027936 <AmiBlitz3.ab3@10817>   CLR.l (A3)
0002793C <AmiBlitz3.ab3@10819> 
00027942 <AmiBlitz3.ab3@10821>   MOVE.l A7,errstack
0002794C <AmiBlitz3.ab3@10822>   MOVE.l #'cont,errcont
00027954 <AmiBlitz3.ab3@10823>   MOVE.w #$FFFF,ezerr       ; was -1
00027958 <AmiBlitz3.ab3@10824>   MOVE.w #$FFFA,D1          ;#65530
0002795C <AmiBlitz3.ab3@10825>    BSR.w findlib            ;get address of mem lib
00027962 <AmiBlitz3.ab3@10826>   MOVE.l A1,tempvm
00027966 <AmiBlitz3.ab3@10827>   MOVE.w #$FDA7,D1          ;#64935,
0002796A <AmiBlitz3.ab3@10828>    BSR.w findlib
00027970 <AmiBlitz3.ab3@10829>   MOVE.l A1,ffplib
00027972 <AmiBlitz3.ab3@10832> RTS
00027976 <AmiBlitz3.ab3@10835> ffplib:  Ds.l 1
00027978 <AmiBlitz3.ab3@10839>     TST.w (A1)+
0002797C <AmiBlitz3.ab3@10840>     BEQ.w 'done
0002797E <AmiBlitz3.ab3@10841>     ADDQ.w #2,A1
00027982 <AmiBlitz3.ab3@10842>  BRA.w skiplibreg
00027984 <AmiBlitz3.ab3@10845> RTS
00027986 <AmiBlitz3.ab3@10849>   EXG.l A1,A0
0002798A <AmiBlitz3.ab3@10850>   BSR.w aligna1
0002798C <AmiBlitz3.ab3@10851>   EXG.l A1,A0
0002798E <AmiBlitz3.ab3@10852> RTS
00027990 <AmiBlitz3.ab3@10856>   EXG.l D0,A1
00027992 <AmiBlitz3.ab3@10857>   ADDQ.l #1,D0
00027996 <AmiBlitz3.ab3@10858>   BCLR #$0,D0
00027998 <AmiBlitz3.ab3@10859>   EXG.l D0,A1
0002799A <AmiBlitz3.ab3@10860> RTS
000279A0 <AmiBlitz3.ab3@10864>   MOVEA.l _execbase,A6
000279A6 <AmiBlitz3.ab3@10865>   MOVEA.l ptr_userlibs,A2
000279A8 <AmiBlitz3.ab3@10866>   MOVE.l (A2),D0
000279AA <AmiBlitz3.ab3@10867>   CLR.l (A2)
000279AC <AmiBlitz3.ab3@10868>   MOVEA.l D0,A2
000279B0 <AmiBlitz3.ab3@10871>     CMPA.w #$0,A2
000279B4 <AmiBlitz3.ab3@10872>     BEQ.w free_userlib
000279B8 <AmiBlitz3.ab3@10874>     MOVE.l $20(A2),D0
000279BC <AmiBlitz3.ab3@10875>     BEQ.b 'skip
000279BE <AmiBlitz3.ab3@10876>       LSL.l #2,D0
000279C4 <AmiBlitz3.ab3@10878>       MOVE.l mempool,a0
000279C8 <AmiBlitz3.ab3@10880>       MOVEA.l $24(A2),A1
000279CC <AmiBlitz3.ab3@10882>       JSR _FreePooled(A6)
000279CE <AmiBlitz3.ab3@10887>     MOVEA.l A2,A1
000279D2 <AmiBlitz3.ab3@10888>     MOVE.l $6(A1),D0
000279D8 <AmiBlitz3.ab3@10890>     MOVE.l mempool,a0
000279DA <AmiBlitz3.ab3@10892>     MOVEA.l (A2),A2
000279E0 <AmiBlitz3.ab3@10894>     MOVEA.l _execbase,A6
000279E4 <AmiBlitz3.ab3@10895>     JSR _FreePooled(A6)
000279E8 <AmiBlitz3.ab3@10898> BRA.w 'loop
000279EC <AmiBlitz3.ab3@10902>   BSR.w free_userlibs
000279F2 <AmiBlitz3.ab3@10904>   MOVEA.l _execbase,A6
000279F8 <AmiBlitz3.ab3@10905>   CLR.l libpointer
000279FE <AmiBlitz3.ab3@10906>   MOVEA.l end_of_tokenlist,A0
00027A00 <AmiBlitz3.ab3@10907>   CLR.l (A0)
00027A06 <AmiBlitz3.ab3@10909>   MOVE.l size_acidlibs,D0
00027A0A <AmiBlitz3.ab3@10910>   BEQ.b 'defskip
00027A10 <AmiBlitz3.ab3@10911>     MOVE.l ptr_acidlibs,D1
00027A14 <AmiBlitz3.ab3@10912>     BEQ.b 'defskip
00027A1A <AmiBlitz3.ab3@10913>       CLR.l ptr_acidlibs
00027A1C <AmiBlitz3.ab3@10914>       MOVEA.l D1,A1
00027A22 <AmiBlitz3.ab3@10916>       MOVE.l mempool,a0
00027A28 <AmiBlitz3.ab3@10917>       MOVEA.l _execbase,A6
00027A2C <AmiBlitz3.ab3@10918>       JSR _FreePooled(A6)                                 ; free acidlibs
00027A32 <AmiBlitz3.ab3@10923>   MOVE.l size_deflibs,D0
00027A36 <AmiBlitz3.ab3@10924>   BEQ.b 'acidskip
00027A3C <AmiBlitz3.ab3@10925>     MOVE.l ptr_deflibs,D1
00027A40 <AmiBlitz3.ab3@10926>     BEQ.b 'acidskip
00027A46 <AmiBlitz3.ab3@10927>       CLR.l ptr_deflibs                                    ; d0: memorySize
00027A48 <AmiBlitz3.ab3@10928>       MOVEA.l D1,A1                                        ; a1: memory
00027A4E <AmiBlitz3.ab3@10930>       MOVE.l mempool,a0                                    ; a0: poolHeader
00027A54 <AmiBlitz3.ab3@10931>       MOVEA.l _execbase,A6
00027A58 <AmiBlitz3.ab3@10932>       JSR _FreePooled(A6)                                  ; free deflibs
00027A5A <AmiBlitz3.ab3@10937> RTS
00027A60 <AmiBlitz3.ab3@10941>   MOVEA.l currentmacroaddr,A0
00027A62 <AmiBlitz3.ab3@10942>   MOVEA.l (A0),A2
00027A64 <AmiBlitz3.ab3@10943>   CLR.l (A0)
00027A6A <AmiBlitz3.ab3@10944>   MOVEA.l _execbase,A6
00027A6E <AmiBlitz3.ab3@10947>     CMPA.w #$0,A2
00027A72 <AmiBlitz3.ab3@10948>     BEQ.w 'done
00027A74 <AmiBlitz3.ab3@10949>     MOVEQ.l #$00,D0
00027A78 <AmiBlitz3.ab3@10950>     MOVE.w $8(A2),D0
00027A7C <AmiBlitz3.ab3@10951>     BEQ.w 'skip
00027A80 <AmiBlitz3.ab3@10952>     MOVEA.l $4(A2),A1
00027A86 <AmiBlitz3.ab3@10954>     MOVE.l mempool,a0
00027A8A <AmiBlitz3.ab3@10955>     JSR _FreePooled(A6)
00027A8C <AmiBlitz3.ab3@10960>     MOVEA.l A2,A1
00027A8E <AmiBlitz3.ab3@10961>     MOVEA.l (A2),A2
00027A90 <AmiBlitz3.ab3@10962>     MOVEQ.l #$00,D0
00027A94 <AmiBlitz3.ab3@10963>     MOVE.b $C(A1),D0
00027A9A <AmiBlitz3.ab3@10965>     MOVE.l mempool2,a0
00027A9E <AmiBlitz3.ab3@10966>     JSR _FreePooled(A6)
00027AA2 <AmiBlitz3.ab3@10970>  BRA.w 'loop
00027AA4 <AmiBlitz3.ab3@10973> RTS
00027AAA <AmiBlitz3.ab3@10977>   MOVEA.l templabel,A2
00027AB0 <AmiBlitz3.ab3@10978>   CLR.l templabel
00027AB2 <AmiBlitz3.ab3@10980> RTS
00027AB8 <AmiBlitz3.ab3@10982>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027ABC <AmiBlitz3.ab3@10985>     CMPA.w #$0,A2
00027AC0 <AmiBlitz3.ab3@10986>     BEQ.w 'done
00027AC2 <AmiBlitz3.ab3@10987>     MOVEQ.l #$00,D0
00027AC6 <AmiBlitz3.ab3@10988>     MOVE.b $E(A2),D0                                       ;labeltemp
00027AC8 <AmiBlitz3.ab3@10989>     MOVEA.l A2,A1
00027ACA <AmiBlitz3.ab3@10990>     MOVEA.l (A2),A2
00027AD0 <AmiBlitz3.ab3@10992>     MOVE.l mempool2,a0
00027AD4 <AmiBlitz3.ab3@10997>  BRA.w 'loop
00027AD6 <AmiBlitz3.ab3@11000> RTS
00027ADC <AmiBlitz3.ab3@11004>   MOVEA.l data1,A4
00027AE2 <AmiBlitz3.ab3@11005>   CMPA.l data2at,A4
00027AE6 <AmiBlitz3.ab3@11006>   BCC.w 'over
00027AE8 <AmiBlitz3.ab3@11007>     MOVE.b D1,(A4)+
00027AEE <AmiBlitz3.ab3@11008>     MOVE.l A4,data1
00027AF0 <AmiBlitz3.ab3@11009>  RTS
00027AF8 <AmiBlitz3.ab3@11012>   MOVE.w #$FFFF,dontwrite_nomemleft     ; was -1                             ;move #-1, org source
00027AFE <AmiBlitz3.ab3@11013>   ADDQ.l #1,data1
00027B00 <AmiBlitz3.ab3@11014> RTS
00027B02 <AmiBlitz3.ab3@11018>   SWAP D1
00027B06 <AmiBlitz3.ab3@11019>   BSR.w pokedata1
00027B08 <AmiBlitz3.ab3@11020>   SWAP D1
00027B0E <AmiBlitz3.ab3@11023>   MOVEA.l data1,A4
00027B14 <AmiBlitz3.ab3@11024>   CMPA.l data2at,A4
00027B18 <AmiBlitz3.ab3@11025>    BCC.w 'over
00027B1A <AmiBlitz3.ab3@11026>   MOVE.w D1,(A4)+
00027B20 <AmiBlitz3.ab3@11027>   MOVE.l A4,data1
00027B22 <AmiBlitz3.ab3@11028>  RTS
00027B2A <AmiBlitz3.ab3@11031>   MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
00027B30 <AmiBlitz3.ab3@11032>   ADDQ.l #2,data1
00027B32 <AmiBlitz3.ab3@11033> RTS
00027B38 <AmiBlitz3.ab3@11037>   MOVE.l data1,D3                                      ;write local string/type allocs
00027B3A <AmiBlitz3.ab3@11038>   MOVEQ.l #$00,D4
00027B3E <AmiBlitz3.ab3@11041>   CMPA.w #$0,A2
00027B42 <AmiBlitz3.ab3@11042>    BEQ.w 'done
00027B46 <AmiBlitz3.ab3@11043>   TST.w $6(A2)
00027B4A <AmiBlitz3.ab3@11044>    BNE.w 'next
00027B4E <AmiBlitz3.ab3@11045>   MOVEA.l $A(A2),A3
00027B56 <AmiBlitz3.ab3@11046>   CMPI.l #$100,$4(A3)
00027B5A <AmiBlitz3.ab3@11047>    BCS.w 'next
00027B5E <AmiBlitz3.ab3@11048>   MOVE.w $4(A2),D1
00027B62 <AmiBlitz3.ab3@11049>    BSR.w pokedata1
00027B66 <AmiBlitz3.ab3@11050>   MOVE.w $8(A3),D1
00027B6A <AmiBlitz3.ab3@11051>    BSR.w pokedata1
00027B6C <AmiBlitz3.ab3@11052>   ADDQ.w #1,D4
00027B6E <AmiBlitz3.ab3@11055>    MOVEA.l (A2),A2
00027B72 <AmiBlitz3.ab3@11056>  BRA.w 'loop
00027B74 <AmiBlitz3.ab3@11059>    TST.w D4
00027B78 <AmiBlitz3.ab3@11060>    BEQ.w calcstatic2_skip
00027B7C <AmiBlitz3.ab3@11061>   MOVE.w #$FF37,D1              ;#65335
00027B80 <AmiBlitz3.ab3@11062>    BSR.w uselib                 ;use statics lib
00027B84 <AmiBlitz3.ab3@11063>   MOVE.w #$FFFA,D1              ;use memlib
00027B88 <AmiBlitz3.ab3@11064> BRA.w uselib
00027B8E <AmiBlitz3.ab3@11073>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
00027B94 <AmiBlitz3.ab3@11076>   MOVE.l data1,D3
00027B96 <AmiBlitz3.ab3@11077>   MOVEQ.l #$00,D4
00027B9C <AmiBlitz3.ab3@11079>   TST.b iserror
00027BA0 <AmiBlitz3.ab3@11080>   BEQ 'loop
00027BA2 <AmiBlitz3.ab3@11081>   RTS
00027BA6 <AmiBlitz3.ab3@11085>    CMPA.w #$0,A2
00027BAA <AmiBlitz3.ab3@11086>    BEQ.w 'done
00027BAE <AmiBlitz3.ab3@11087>   TST.w $6(A2)
00027BB2 <AmiBlitz3.ab3@11088>    BNE.w 'next
00027BB6 <AmiBlitz3.ab3@11089>   MOVEA.l $A(A2),A3
00027BBE <AmiBlitz3.ab3@11090>   CMPI.l #$100,$4(A3)
00027BC2 <AmiBlitz3.ab3@11091>    BCS.w 'next
00027BC6 <AmiBlitz3.ab3@11092>   MOVE.w $4(A2),D1
00027BCA <AmiBlitz3.ab3@11093>    BSR.w pokedata1
00027BCE <AmiBlitz3.ab3@11094>   MOVE.w $8(A3),D1
00027BD2 <AmiBlitz3.ab3@11095>    BSR.w pokedata1
00027BD4 <AmiBlitz3.ab3@11096>   ADDQ.w #1,D4
00027BD6 <AmiBlitz3.ab3@11099>   MOVEA.l (A2),A2
00027BDA <AmiBlitz3.ab3@11100>  BRA.w 'loop
00027BE0 <AmiBlitz3.ab3@11105>   MOVEA.l sharebase,A2  ; org  varbase
00027BE4 <AmiBlitz3.ab3@11108>   CMPA.w #$0,A2
00027BE8 <AmiBlitz3.ab3@11109>    BEQ.w 'doneb
00027BEC <AmiBlitz3.ab3@11111>   TST.w $6(A2)
00027BF0 <AmiBlitz3.ab3@11112>    BNE.w 'nextb
00027BF4 <AmiBlitz3.ab3@11113>   MOVEA.l $A(A2),A3
00027BFC <AmiBlitz3.ab3@11114>   CMPI.l #$100,$4(A3)
00027C00 <AmiBlitz3.ab3@11115>    BCS.w 'nextb
00027C04 <AmiBlitz3.ab3@11116>   MOVE.w $4(A2),D1
00027C08 <AmiBlitz3.ab3@11117>    BSR.w pokedata1
00027C0C <AmiBlitz3.ab3@11118>   MOVE.w $8(A3),D1
00027C10 <AmiBlitz3.ab3@11119>    BSR.w pokedata1
00027C12 <AmiBlitz3.ab3@11120>   ADDQ.w #1,D4
00027C14 <AmiBlitz3.ab3@11123>   MOVEA.l (A2),A2
00027C18 <AmiBlitz3.ab3@11124>  BRA.w 'loopb
00027C1A <AmiBlitz3.ab3@11128>    TST.w D4
00027C1E <AmiBlitz3.ab3@11129>    BEQ.w calcstatic2_skip
00027C22 <AmiBlitz3.ab3@11130>   MOVE.w #$FF37,D1      ;#65335
00027C26 <AmiBlitz3.ab3@11131>    BSR.w uselib         ;use statics lib                                   ;use statics lib
00027C2A <AmiBlitz3.ab3@11132>   MOVE.w #$FFFA,D1      ;use memlib                                   ;use memlib
00027C2E <AmiBlitz3.ab3@11133> BRA.w uselib
00027C30 <AmiBlitz3.ab3@11136> RTS
00027C36 <AmiBlitz3.ab3@11140>   MOVE.w numtoa2,D1
00027C3A <AmiBlitz3.ab3@11141>    BSR.w writeword
00027C3E <AmiBlitz3.ab3@11142>    BSR.w addoff
00027C40 <AmiBlitz3.ab3@11143>   MOVE.l D3,D1
00027C44 <AmiBlitz3.ab3@11144>    BSR.w writelong
00027C46 <AmiBlitz3.ab3@11145>   SUBQ.w #1,D4
00027C4C <AmiBlitz3.ab3@11146>   MOVE.w D4,endarray+2
00027C52 <AmiBlitz3.ab3@11147>   MOVE.l endarray,D1
00027C56 <AmiBlitz3.ab3@11148> BRA.w writelong
00027C58 <AmiBlitz3.ab3@11152>   MOVE.l D3,-(A7)
00027C5E <AmiBlitz3.ab3@11155>   MOVEA.l _dosbase,A6
00027C62 <AmiBlitz3.ab3@11157>   JSR _Write(a6)
00027C64 <AmiBlitz3.ab3@11158>   CMP.l (A7)+,D0
00027C68 <AmiBlitz3.ab3@11159>    BNE.w 'skip
00027C6A <AmiBlitz3.ab3@11160>  RTS
00027C6C <AmiBlitz3.ab3@11163>   MOVE.l D7,D1
00027C72 <AmiBlitz3.ab3@11166>   MOVEA.l _dosbase,A6
00027C76 <AmiBlitz3.ab3@11168>   JSR _Close(a6)
00027C7C <AmiBlitz3.ab3@11171> JMP error_create_exe
00027C82 <AmiBlitz3.ab3@11180> 
00027C88 <AmiBlitz3.ab3@11182>   MOVE.l A7,errstack
00027C8C <AmiBlitz3.ab3@11184>   MOVEM.l d2-d7/a2-a6,-(a7)
00027C96 <AmiBlitz3.ab3@11186>   MOVE.l #'rts,errcont
00027C9C <AmiBlitz3.ab3@11188>    JSR call_setpointerbusy
00027CA4 <AmiBlitz3.ab3@11190>   MOVE.w #$FFFF,anyerrs   ; was -1
00027CAE <AmiBlitz3.ab3@11192>   CMP.l #-1,chipstart
00027CB2 <AmiBlitz3.ab3@11193>   BEQ 'l01
00027CB8 <AmiBlitz3.ab3@11194>   MOVE.l chipend,d1
00027CBA <AmiBlitz3.ab3@11195>   ADDQ.l #3,d1
00027CC0 <AmiBlitz3.ab3@11196>   AND.l #$fffffffc,d1                                      ;bug
00027CC6 <AmiBlitz3.ab3@11197>   MOVE.l d1,chipend
00027CC8 <AmiBlitz3.ab3@11198>   MOVE.l d1,a1
00027CCE <AmiBlitz3.ab3@11199>   MOVE.l chipstart,a0
00027CD0 <AmiBlitz3.ab3@11200>   MOVE.l a1,d1
00027CD2 <AmiBlitz3.ab3@11201>   SUB.l a0,d1
00027CD8 <AmiBlitz3.ab3@11202>   MOVE.l d1,chipsize
00027CE2 <AmiBlitz3.ab3@11205>   CMP.l #-1,bssstart
00027CE6 <AmiBlitz3.ab3@11206>   BEQ 'l11
00027CEC <AmiBlitz3.ab3@11207>   MOVE.l realbssend,a1
00027CF2 <AmiBlitz3.ab3@11208>   MOVE.l bssstart,a0
00027CF4 <AmiBlitz3.ab3@11209>   MOVE.l a1,d1
00027CF6 <AmiBlitz3.ab3@11210>   SUB.l a0,d1
00027CFC <AmiBlitz3.ab3@11211>   MOVE.l d1,bsssize
00027D00 <AmiBlitz3.ab3@11212>   BEQ 'l11
00027D02 <AmiBlitz3.ab3@11215>   TST.b (a0)+
00027D06 <AmiBlitz3.ab3@11216>   BEQ 'l31
00027D0C <AmiBlitz3.ab3@11217>   TST.b debugmode
00027D10 <AmiBlitz3.ab3@11218>   BEQ 'l1
00027D16 <AmiBlitz3.ab3@11219>   TST.b exdebug
00027D1A <AmiBlitz3.ab3@11220>   BNE 'l31
00027D20 <AmiBlitz3.ab3@11223>   MOVE.l #nodata,-(a7)
00027D26 <AmiBlitz3.ab3@11224>  JMP handle_compileerror
00027D28 <AmiBlitz3.ab3@11227>   CMP.l a0,a1
00027D2C <AmiBlitz3.ab3@11228>   BGT 'l32
00027D32 <AmiBlitz3.ab3@11229>   MOVE.l bssend,d1
00027D34 <AmiBlitz3.ab3@11230>   ADDQ.l #3,d1
00027D3A <AmiBlitz3.ab3@11231>   AND.l #$fffffffc,d1                                      ;bug
00027D40 <AmiBlitz3.ab3@11232>   MOVE.l d1,bssend
00027D42 <AmiBlitz3.ab3@11233>   MOVE.l d1,a1
00027D48 <AmiBlitz3.ab3@11234>   MOVE.l bssstart,a0
00027D4A <AmiBlitz3.ab3@11235>   MOVE.l a1,d1
00027D4C <AmiBlitz3.ab3@11236>   SUB.l a0,d1
00027D52 <AmiBlitz3.ab3@11237>   MOVE.l d1,bsssize
00027D56 <AmiBlitz3.ab3@11240>   MOVEM.l d5-d7/d3,-(a7)
00027D5C <AmiBlitz3.ab3@11242>   MOVE.w dontwrite_nomemleft,D1
00027D60 <AmiBlitz3.ab3@11243>   BNE.w 'fixdone
00027D66 <AmiBlitz3.ab3@11245>   MOVE.l chipsize,d5
00027D6C <AmiBlitz3.ab3@11246>   MOVE.l bsssize,d3
00027D72 <AmiBlitz3.ab3@11247>   MOVE.l chipstart,d7
00027D78 <AmiBlitz3.ab3@11248>   MOVE.l bssstart,d6
00027D7E <AmiBlitz3.ab3@11250>   MOVEA.l hunkoffsetbase,A2
00027D84 <AmiBlitz3.ab3@11251>   MOVEA.l destbufferstart,A1
00027D86 <AmiBlitz3.ab3@11252>   MOVE.l A1,D2
00027D8C <AmiBlitz3.ab3@11253>   ADD.l noinits,D2
00027D92 <AmiBlitz3.ab3@11255>   CLR.l hunkoffsetnum
00027D96 <AmiBlitz3.ab3@11259>   CMPA.w #$0,A2
00027D9A <AmiBlitz3.ab3@11260>    BEQ.w 'fixdone
00027D9E <AmiBlitz3.ab3@11261>   MOVE.l $4(A2),D0
00027DA2 <AmiBlitz3.ab3@11263>    LEA $0(a1,d0.l),a0
00027DA4 <AmiBlitz3.ab3@11264>    MOVE.l (a0),d1
00027DA6 <AmiBlitz3.ab3@11265>   TST.l d1
00027DAA <AmiBlitz3.ab3@11266>    BMI.w 'lm1a
00027DB2 <AmiBlitz3.ab3@11267>   MOVE.b #0,newhunk
00027DBC <AmiBlitz3.ab3@11268>   CMP.l #-1,chipstart
00027DC0 <AmiBlitz3.ab3@11269>   BEQ 'l10a
00027DC6 <AmiBlitz3.ab3@11270>   CMP.l chipstart,d1
00027DCA <AmiBlitz3.ab3@11271>   BLT 'l10a
00027DD2 <AmiBlitz3.ab3@11272>   MOVE.b #1,newhunk
00027DD8 <AmiBlitz3.ab3@11273>   CMP.l chipend,d1
00027DDC <AmiBlitz3.ab3@11274>   BGE 'l110a
00027DDE <AmiBlitz3.ab3@11275>   SUB.l d7,(a0)
00027DE6 <AmiBlitz3.ab3@11276>   ADD.l #$80000000,4(a2)
00027DEA <AmiBlitz3.ab3@11277>  BRA 'noway
00027DEE <AmiBlitz3.ab3@11280>   SUB.l d5,0(a0)
00027DF8 <AmiBlitz3.ab3@11283>   CMP.l #-1,bssstart
00027DFC <AmiBlitz3.ab3@11284>     BEQ 'l11a
00027E02 <AmiBlitz3.ab3@11285>   CMP.l bssstart,d1
00027E06 <AmiBlitz3.ab3@11286>   BLT 'l11a
00027E0C <AmiBlitz3.ab3@11287>   CMP.l bssend,d1
00027E10 <AmiBlitz3.ab3@11288>   BGE 'l111a
00027E16 <AmiBlitz3.ab3@11289>   TST.b newhunk
00027E1A <AmiBlitz3.ab3@11290>   BEQ 'ln1a
00027E1C <AmiBlitz3.ab3@11291>   ADD.l d5,(a0)
00027E1E <AmiBlitz3.ab3@11294>   SUB.l d6,(a0)
00027E26 <AmiBlitz3.ab3@11295>   ADD.l #$40000000,4(a2)
00027E2A <AmiBlitz3.ab3@11296>  BRA 'noway
00027E2E <AmiBlitz3.ab3@11299>   SUB.l d3,0(a0)
00027E30 <AmiBlitz3.ab3@11302>   SUB.l D2,(A0)
00027E36 <AmiBlitz3.ab3@11305>   ADDQ.l #1,hunkoffsetnum
00027E38 <AmiBlitz3.ab3@11309>    MOVEA.l (A2),A2
00027E3C <AmiBlitz3.ab3@11310>  BRA.w 'loop0
00027E40 <AmiBlitz3.ab3@11314>   MOVEM.l (a7)+,d5-d7/d3
00027E46 <AmiBlitz3.ab3@11316>   MOVE.l ptr_newexefilename,D1
00027E4C <AmiBlitz3.ab3@11317>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027E52 <AmiBlitz3.ab3@11318>   MOVEA.l _dosbase,A6
00027E56 <AmiBlitz3.ab3@11319>    JSR _Open(A6)
00027E58 <AmiBlitz3.ab3@11320>   MOVE.l D0,D7
00027E5C <AmiBlitz3.ab3@11321>    BEQ.w execerr
00027E62 <AmiBlitz3.ab3@11323>   MOVE.l objlen,D0
00027E68 <AmiBlitz3.ab3@11325>   SUB.l #moremem,d0
00027E6E <AmiBlitz3.ab3@11327>   SUB.l noinits,D0
00027E78 <AmiBlitz3.ab3@11329>   CMP.l #-1,bssstart
00027E7C <AmiBlitz3.ab3@11330>   BEQ 'l60
00027E82 <AmiBlitz3.ab3@11331>   SUB.l bsssize,d0
00027E88 <AmiBlitz3.ab3@11332>   SUB.l chipsize,d0
00027E8C <AmiBlitz3.ab3@11333>  BRA.s 'l61
00027E96 <AmiBlitz3.ab3@11336>   CMP.l #-1,chipstart
00027E9A <AmiBlitz3.ab3@11337>   BEQ 'l61
00027EA0 <AmiBlitz3.ab3@11338>   SUB.l bsssize,d0
00027EA6 <AmiBlitz3.ab3@11339>   SUB.l chipsize,d0
00027EA8 <AmiBlitz3.ab3@11343>   ADDQ.l #3,D0
00027EAA <AmiBlitz3.ab3@11344>   LSR.l #2,D0
00027EB0 <AmiBlitz3.ab3@11345>   MOVE.l D0,tstsize1
00027EB6 <AmiBlitz3.ab3@11346>   MOVE.l D0,tstsize2
00027EB8 <AmiBlitz3.ab3@11347>   MOVE.l D7,D1
00027EBE <AmiBlitz3.ab3@11348>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027EC0 <AmiBlitz3.ab3@11349>   MOVEQ.l #$20,D3
00027ECA <AmiBlitz3.ab3@11351>   CMP.l #-1,bssstart
00027ECE <AmiBlitz3.ab3@11352>   BEQ 'lb1
00027ED8 <AmiBlitz3.ab3@11353>   CMP.l #-1,chipstart
00027EDC <AmiBlitz3.ab3@11354>   BEQ 'lb1
00027EE6 <AmiBlitz3.ab3@11355>   MOVE.l #1,bssnum
00027EF0 <AmiBlitz3.ab3@11356>   MOVE.l #2,chipnum
00027EF2 <AmiBlitz3.ab3@11357>   MOVEQ.l #$28,D3
00027EF8 <AmiBlitz3.ab3@11358>   MOVE.l bsssize,d2
00027EFA <AmiBlitz3.ab3@11359>   ADDQ.l #3,d2
00027EFC <AmiBlitz3.ab3@11360>   ASR.l #2,d2
00027F02 <AmiBlitz3.ab3@11361>   MOVE.l d2,hunkend+8
00027F08 <AmiBlitz3.ab3@11362>   MOVE.l d2,bsssize3
00027F0E <AmiBlitz3.ab3@11363>   MOVE.l chipsize,d2
00027F10 <AmiBlitz3.ab3@11364>   ADDQ.l #3,d2
00027F12 <AmiBlitz3.ab3@11365>   ASR.l #2,d2
00027F18 <AmiBlitz3.ab3@11366>   MOVE.l d2,chipsize2
00027F22 <AmiBlitz3.ab3@11367>   ADD.l #$40000000,chipsize2
00027F28 <AmiBlitz3.ab3@11368>   MOVE.l d2,hunkend2+8
00027F2E <AmiBlitz3.ab3@11369>   MOVE.l D0,tstsize1c
00027F34 <AmiBlitz3.ab3@11370>   MOVE.l D0,tstsize2c
00027F3A <AmiBlitz3.ab3@11371>   MOVE.l #hunkbegin2,d2
00027F3E <AmiBlitz3.ab3@11372>  BRA 'l100b
00027F48 <AmiBlitz3.ab3@11375>   CMP.l #-1,bssstart
00027F4C <AmiBlitz3.ab3@11376>   BEQ 'l10b
00027F56 <AmiBlitz3.ab3@11377>   MOVE.l #1,bssnum
00027F58 <AmiBlitz3.ab3@11378>   MOVEQ.l #$24,D3
00027F5E <AmiBlitz3.ab3@11379>   MOVE.l bsssize,d2
00027F60 <AmiBlitz3.ab3@11380>   ADDQ.l #3,d2
00027F62 <AmiBlitz3.ab3@11381>   ASR.l #2,d2
00027F68 <AmiBlitz3.ab3@11382>   MOVE.l d2,hunkend+8
00027F6E <AmiBlitz3.ab3@11383>   MOVE.l d2,bsssize2
00027F74 <AmiBlitz3.ab3@11384>   MOVE.l D0,tstsize1b
00027F7A <AmiBlitz3.ab3@11385>   MOVE.l D0,tstsize2b
00027F80 <AmiBlitz3.ab3@11386>   MOVE.l #hunkbegin,d2
00027F8A <AmiBlitz3.ab3@11389>   CMP.l #-1,chipstart
00027F8E <AmiBlitz3.ab3@11390>   BEQ 'l100b
00027F98 <AmiBlitz3.ab3@11391>   MOVE.l #1,chipnum
00027F9A <AmiBlitz3.ab3@11392>   MOVEQ.l #$24,D3
00027FA0 <AmiBlitz3.ab3@11393>   MOVE.l chipsize,d2
00027FA2 <AmiBlitz3.ab3@11394>   ADDQ.l #3,d2
00027FA4 <AmiBlitz3.ab3@11395>   ASR.l #2,d2
00027FAA <AmiBlitz3.ab3@11396>   MOVE.l d2,hunkend2+8
00027FB0 <AmiBlitz3.ab3@11397>   MOVE.l d2,bsssize2
00027FBA <AmiBlitz3.ab3@11398>   ADD.l #$40000000,bsssize2
00027FC0 <AmiBlitz3.ab3@11399>   MOVE.l D0,tstsize1b
00027FC6 <AmiBlitz3.ab3@11400>   MOVE.l D0,tstsize2b
00027FCC <AmiBlitz3.ab3@11401>   MOVE.l #hunkbegin,d2
00027FD0 <AmiBlitz3.ab3@11405>    BSR.w mywrite
00027FD6 <AmiBlitz3.ab3@11407>   MOVE.l destbufferstart,D2
00027FDC <AmiBlitz3.ab3@11408>   ADD.l noinits,D2
00027FE2 <AmiBlitz3.ab3@11409>   MOVE.l objlen,D3
00027FE8 <AmiBlitz3.ab3@11410>   SUB.l #moremem,d3
00027FEE <AmiBlitz3.ab3@11411>   SUB.l noinits,D3
00027FF8 <AmiBlitz3.ab3@11413>   CMP.l #-1,bssstart
00027FFC <AmiBlitz3.ab3@11414>   BNE 'l40
00028006 <AmiBlitz3.ab3@11415>   CMP.l #-1,chipstart
0002800A <AmiBlitz3.ab3@11416>   BNE 'l40
0002800E <AmiBlitz3.ab3@11417>  BRA 'l41
00028014 <AmiBlitz3.ab3@11420>   MOVE.l codeend,d1
00028016 <AmiBlitz3.ab3@11421>     SUB.l d2,d1
00028018 <AmiBlitz3.ab3@11422>     MOVE.l d1,d3
0002801E <AmiBlitz3.ab3@11423>   SUB.l bsssize,d3
00028024 <AmiBlitz3.ab3@11424>   SUB.l chipsize,d3
00028026 <AmiBlitz3.ab3@11425>   MOVE.l D7,D1
0002802A <AmiBlitz3.ab3@11426>   BSR.w mywrite
00028030 <AmiBlitz3.ab3@11427>   MOVE.l objlen,D3
00028036 <AmiBlitz3.ab3@11428>   SUB.l #moremem,d3
0002803C <AmiBlitz3.ab3@11429>   SUB.l noinits,D3
0002803E <AmiBlitz3.ab3@11430>   MOVE.l d3,d1
00028044 <AmiBlitz3.ab3@11431>   MOVE.l destbufferstart,D2
0002804A <AmiBlitz3.ab3@11432>   ADD.l noinits,D2
0002804C <AmiBlitz3.ab3@11433>   ADD.l d2,d1
00028052 <AmiBlitz3.ab3@11434>   SUB.l codeend,d1
00028054 <AmiBlitz3.ab3@11435>   MOVE.l d1,d3
0002805A <AmiBlitz3.ab3@11436>   MOVE.l codeend,d2
0002805C <AmiBlitz3.ab3@11439>   MOVE.l d2,d1
0002805E <AmiBlitz3.ab3@11440>   ADD.l d3,d1
00028060 <AmiBlitz3.ab3@11442>   ADDQ.l #3,D1
00028066 <AmiBlitz3.ab3@11443>   ANDI.l #$FFFFFFFC,D1
00028068 <AmiBlitz3.ab3@11445>   SUB.l d2,d1
0002806A <AmiBlitz3.ab3@11446>   MOVE.l d1,d3
0002806C <AmiBlitz3.ab3@11447>   MOVE.l D7,D1
00028070 <AmiBlitz3.ab3@11449>    BSR.w mywrite
0002807A <AmiBlitz3.ab3@11451>   MOVE.l hunkoffsetcounter,tstsize3
0002807E <AmiBlitz3.ab3@11452>    BEQ.w 'skip
00028080 <AmiBlitz3.ab3@11453>   MOVE.l D7,D1
00028086 <AmiBlitz3.ab3@11454>   MOVE.l #tstend,D2
00028088 <AmiBlitz3.ab3@11455>   MOVEQ.l #$04,D3           ; was #12
0002808C <AmiBlitz3.ab3@11456>    BSR.w mywrite
00028092 <AmiBlitz3.ab3@11458>    MOVEA.l _execbase,A6
00028098 <AmiBlitz3.ab3@11459>    MOVE.l hunkoffsetcounter,d0
0002809A <AmiBlitz3.ab3@11460>    ASL.l #2,d0
000280A0 <AmiBlitz3.ab3@11461>    ADD.l #12,d0
000280A2 <AmiBlitz3.ab3@11462>    MOVEQ #0,d1
000280A6 <AmiBlitz3.ab3@11463>    JSR _AllocMem(a6)
000280A8 <AmiBlitz3.ab3@11464>    TST.l d0
000280AC <AmiBlitz3.ab3@11465>    BEQ 'nomem
000280B2 <AmiBlitz3.ab3@11466>    MOVE.l noinits,D4
000280B4 <AmiBlitz3.ab3@11467>    MOVE.l d5,-(a7)
000280B6 <AmiBlitz3.ab3@11468>    MOVE.l d0,d5
000280B8 <AmiBlitz3.ab3@11469>    MOVE.l d0,a1
000280BE <AmiBlitz3.ab3@11470>    MOVEA.l hunkoffsetbase,A2
000280C6 <AmiBlitz3.ab3@11471>    MOVE.b #0,newhunk
000280CA <AmiBlitz3.ab3@11474>   CMPA.w #$0,A2
000280CE <AmiBlitz3.ab3@11475>    BEQ.w 'savehunk
000280D4 <AmiBlitz3.ab3@11476>   MOVE.l destbufferstart,D2
000280DA <AmiBlitz3.ab3@11477>   ADD.l noinits,D2
000280DE <AmiBlitz3.ab3@11478>   MOVE.l  $4(A2),d1
000280E2 <AmiBlitz3.ab3@11479>   BTST #31,d1
000280E6 <AmiBlitz3.ab3@11480>   BEQ 'lh1
000280EE <AmiBlitz3.ab3@11481>   MOVE.b #1,newhunk
000280F2 <AmiBlitz3.ab3@11482>  BRA 'lh3
000280F6 <AmiBlitz3.ab3@11485>   BTST #30,d1
000280FA <AmiBlitz3.ab3@11486>   BEQ 'lh2
00028102 <AmiBlitz3.ab3@11487>   MOVE.b #1,newhunk
00028106 <AmiBlitz3.ab3@11488>  BRA 'lh3
00028108 <AmiBlitz3.ab3@11491>   ADD.l d1,d2
0002810E <AmiBlitz3.ab3@11492>   CMP.l chipend,d2
00028112 <AmiBlitz3.ab3@11493>   BLT 'l102c
00028118 <AmiBlitz3.ab3@11494>   SUB.l chipsize,d1
0002811E <AmiBlitz3.ab3@11497>   CMP.l bssend,d2
00028122 <AmiBlitz3.ab3@11498>   BLT 'l101c
00028128 <AmiBlitz3.ab3@11499>   SUB.l bsssize,d1
0002812A <AmiBlitz3.ab3@11502>   MOVE.l d1,(a1)
0002812C <AmiBlitz3.ab3@11503>   SUB.l D4,(A1)+
0002812E <AmiBlitz3.ab3@11506>   MOVEA.l (A2),A2
00028132 <AmiBlitz3.ab3@11507>  BRA.w 'oloopb
00028134 <AmiBlitz3.ab3@11510>   MOVE.l D7,D1
0002813A <AmiBlitz3.ab3@11511>   MOVEA.l _dosbase,A6
00028144 <AmiBlitz3.ab3@11512>   MOVE.l hunkoffsetnum,tstsize3
00028148 <AmiBlitz3.ab3@11513>   BEQ 'ln1c
0002814E <AmiBlitz3.ab3@11514>   MOVE.l #tstend+4,d2
00028150 <AmiBlitz3.ab3@11515>     MOVEQ #8,d3
00028154 <AmiBlitz3.ab3@11516>    JSR _Write(A6)
00028156 <AmiBlitz3.ab3@11517>   MOVE.l d7,d1
0002815C <AmiBlitz3.ab3@11518>   MOVE.l hunkoffsetnum,d3
0002815E <AmiBlitz3.ab3@11519>   ASL.l #2,d3
00028160 <AmiBlitz3.ab3@11520>   MOVE.l d5,D2
00028164 <AmiBlitz3.ab3@11521>   JSR _Write(a6)
0002816A <AmiBlitz3.ab3@11524>   TST.b newhunk
0002816E <AmiBlitz3.ab3@11525>   BEQ 'l10c
00028174 <AmiBlitz3.ab3@11526>   MOVEA.l hunkoffsetbase,A2
00028176 <AmiBlitz3.ab3@11527>   MOVE.l d5,a0
00028178 <AmiBlitz3.ab3@11528>   ADDQ #8,a0
00028180 <AmiBlitz3.ab3@11529>   MOVE.l bssnum,-4(a0)
00028182 <AmiBlitz3.ab3@11530>   MOVEQ #0,d6
00028186 <AmiBlitz3.ab3@11533>   CMPA.w #$0,A2
0002818A <AmiBlitz3.ab3@11534>    BEQ.w 'lh3c
00028190 <AmiBlitz3.ab3@11535>   MOVE.l destbufferstart,D2
00028196 <AmiBlitz3.ab3@11536>   ADD.l noinits,D2
0002819A <AmiBlitz3.ab3@11537>   MOVE.l  $4(A2),d1
0002819E <AmiBlitz3.ab3@11538>   BTST #30,d1
000281A2 <AmiBlitz3.ab3@11539>   BEQ 'lh1c
000281A6 <AmiBlitz3.ab3@11540>   BCLR #30,d1
000281A8 <AmiBlitz3.ab3@11541>   MOVE.l d1,(a0)
000281AA <AmiBlitz3.ab3@11542>   SUB.l D4,(A0)+
000281AC <AmiBlitz3.ab3@11543>   ADDQ.l #1,d6
000281AE <AmiBlitz3.ab3@11546>   MOVE.l (a2),a2
000281B2 <AmiBlitz3.ab3@11547>  BRA 'lh2c
000281B4 <AmiBlitz3.ab3@11550>   TST.l d6
000281B8 <AmiBlitz3.ab3@11551>     BEQ 'lh10c
000281BA <AmiBlitz3.ab3@11552>     MOVE.l d5,a0
000281BC <AmiBlitz3.ab3@11553>     MOVE.l d6,(a0)
000281BE <AmiBlitz3.ab3@11554>     MOVE.l d7,d1
000281C0 <AmiBlitz3.ab3@11555>     MOVE.l d5,d2
000281C2 <AmiBlitz3.ab3@11556>     MOVE.l d6,d3
000281C4 <AmiBlitz3.ab3@11557>     ASL.l #2,d3
000281C6 <AmiBlitz3.ab3@11558>     ADDQ.l #8,d3
000281CA <AmiBlitz3.ab3@11559>     BSR.w mywrite
000281D0 <AmiBlitz3.ab3@11562>   MOVEA.l hunkoffsetbase,A2
000281D2 <AmiBlitz3.ab3@11563>   MOVE.l d5,a0
000281D4 <AmiBlitz3.ab3@11564>   ADDQ #8,a0
000281DC <AmiBlitz3.ab3@11565>   MOVE.l chipnum,-4(a0)
000281DE <AmiBlitz3.ab3@11566>   MOVEQ #0,d6
000281E2 <AmiBlitz3.ab3@11569>   CMPA.w #$0,A2
000281E6 <AmiBlitz3.ab3@11570>    BEQ.w 'lh30c
000281EC <AmiBlitz3.ab3@11571>   MOVE.l destbufferstart,D2
000281F2 <AmiBlitz3.ab3@11572>   ADD.l noinits,D2
000281F6 <AmiBlitz3.ab3@11573>   MOVE.l  $4(A2),d1
000281FA <AmiBlitz3.ab3@11574>   BTST #31,d1
000281FE <AmiBlitz3.ab3@11575>   BEQ 'lh11c
00028202 <AmiBlitz3.ab3@11576>   BCLR #31,d1
00028204 <AmiBlitz3.ab3@11577>   MOVE.l d1,(a0)
00028206 <AmiBlitz3.ab3@11578>   SUB.l D4,(A0)+
00028208 <AmiBlitz3.ab3@11579>   ADDQ.l #1,d6
0002820A <AmiBlitz3.ab3@11582>   MOVE.l (a2),a2
0002820E <AmiBlitz3.ab3@11583>  BRA 'lh20c
00028210 <AmiBlitz3.ab3@11586>   TST.l d6
00028214 <AmiBlitz3.ab3@11587>     BEQ 'l10c
00028216 <AmiBlitz3.ab3@11588>     MOVE.l d5,a0
00028218 <AmiBlitz3.ab3@11589>     MOVE.l d6,(a0)
0002821A <AmiBlitz3.ab3@11590>     MOVE.l d7,d1
0002821C <AmiBlitz3.ab3@11591>     MOVE.l d5,d2
0002821E <AmiBlitz3.ab3@11592>     MOVE.l d6,d3
00028220 <AmiBlitz3.ab3@11593>     ASL.l #2,d3
00028222 <AmiBlitz3.ab3@11594>     ADDQ.l #8,d3
00028226 <AmiBlitz3.ab3@11595>     BSR.w mywrite
0002822C <AmiBlitz3.ab3@11599>    MOVEA.l _execbase,A6
00028232 <AmiBlitz3.ab3@11600>    MOVE.l hunkoffsetcounter,d0
00028234 <AmiBlitz3.ab3@11601>    ASL.l #2,d0
0002823A <AmiBlitz3.ab3@11602>    ADD.l #12,d0
0002823C <AmiBlitz3.ab3@11603>    MOVE.l d5,a1
00028240 <AmiBlitz3.ab3@11604>    JSR _FreeMem(a6)
00028246 <AmiBlitz3.ab3@11605>    MOVEA.l _dosbase,A6
00028248 <AmiBlitz3.ab3@11606>    MOVE.l (a7)+,d5
0002824C <AmiBlitz3.ab3@11607>  BRA 'skip2
00028252 <AmiBlitz3.ab3@11611>   MOVEA.l hunkoffsetbase,A2
00028258 <AmiBlitz3.ab3@11612>   MOVE.l noinits,D4
0002825C <AmiBlitz3.ab3@11615>   CMPA.w #$0,A2                                            ;write hunkoffsets
00028260 <AmiBlitz3.ab3@11616>   BEQ.w 'skip2
00028264 <AmiBlitz3.ab3@11617>   LEA $4(A2),A1
00028266 <AmiBlitz3.ab3@11618>   SUB.l D4,(A1)
00028268 <AmiBlitz3.ab3@11619>   MOVE.l D7,D1
0002826A <AmiBlitz3.ab3@11620>   MOVE.l A1,D2
0002826C <AmiBlitz3.ab3@11621>   MOVEQ.l #$04,D3
00028270 <AmiBlitz3.ab3@11622>   BSR.w mywrite
00028274 <AmiBlitz3.ab3@11624>   ADD.l D4,$4(A2)
00028276 <AmiBlitz3.ab3@11625>   MOVEA.l (A2),A2
0002827A <AmiBlitz3.ab3@11626>  BRA.w 'loop
00028280 <AmiBlitz3.ab3@11629>   CLR.l tstsize3
00028282 <AmiBlitz3.ab3@11630>   MOVE.l D7,D1
00028288 <AmiBlitz3.ab3@11631>   MOVE.l #tstsize3,D2
0002828A <AmiBlitz3.ab3@11632>   MOVEQ.l #$04,D3
0002828E <AmiBlitz3.ab3@11633>    BSR.w mywrite
00028296 <AmiBlitz3.ab3@11636>   BTST #$7,link_debuginfo
0002829A <AmiBlitz3.ab3@11637>    BEQ.w 'nodebug
000282A0 <AmiBlitz3.ab3@11639>   MOVE.l #sysdebug,D2                                      ;debughunks
000282A2 <AmiBlitz3.ab3@11640>   MOVEQ.l #$04,D3
000282A4 <AmiBlitz3.ab3@11641>   MOVE.l D7,D1
000282A8 <AmiBlitz3.ab3@11642>    BSR.w mywrite
000282AE <AmiBlitz3.ab3@11644>   MOVEA.l labelbase,A2
000282B2 <AmiBlitz3.ab3@11647>   CMPA.w #$0,A2
000282B6 <AmiBlitz3.ab3@11648>    BEQ.w 'dedone
000282BC <AmiBlitz3.ab3@11649>   BTST #$0,$7(A2)
000282C0 <AmiBlitz3.ab3@11650>    BEQ.w 'dedeb
000282C8 <AmiBlitz3.ab3@11651>   CMPI.l #$1,$4(A2)
000282CC <AmiBlitz3.ab3@11654>   BRA.w 'denext                                            ;only addr labels
000282CE <AmiBlitz3.ab3@11658>   MOVEQ.l #$00,D4
000282D2 <AmiBlitz3.ab3@11659>   MOVE.b $12(A2),D4
000282D6 <AmiBlitz3.ab3@11660>   SUBI.w #$13,D4
000282D8 <AmiBlitz3.ab3@11661>   ADDQ.w #2,D4
000282DC <AmiBlitz3.ab3@11662>   ANDI.w #$FFFC,D4     ;long align
000282DE <AmiBlitz3.ab3@11663>   MOVE.l D4,D5
000282E0 <AmiBlitz3.ab3@11664>   LSR.w #2,D5
000282E6 <AmiBlitz3.ab3@11665>   MOVE.l D5,temp1
000282E8 <AmiBlitz3.ab3@11666>   LSL.w #2,D5          ;#bytes
000282EE <AmiBlitz3.ab3@11668>   MOVE.l #temp1,a1
000282F4 <AmiBlitz3.ab3@11672>   LEA debugstore,a0
000282F6 <AmiBlitz3.ab3@11673>   MOVE.l (a1),(a0)+
000282F8 <AmiBlitz3.ab3@11675>   MOVEQ.l #$04,D3
000282FC <AmiBlitz3.ab3@11679>   LEA $13(A2),A1
000282FE <AmiBlitz3.ab3@11681>   MOVE.l d4,d1
00028300 <AmiBlitz3.ab3@11682>   SUBQ.l #1,d1
00028302 <AmiBlitz3.ab3@11685>     MOVE.b (a1)+,d0
00028306 <AmiBlitz3.ab3@11686>     BEQ 'l21d
0002830A <AmiBlitz3.ab3@11687>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
0002830E <AmiBlitz3.ab3@11688>     BNE 'ok
00028312 <AmiBlitz3.ab3@11689>     MOVE.b #"_",d0
00028314 <AmiBlitz3.ab3@11692>    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00028318 <AmiBlitz3.ab3@11693>   DBF d1,'l10d
0002831C <AmiBlitz3.ab3@11695>   BRA 'l22d
0002831E <AmiBlitz3.ab3@11698>       CLR.b (a0)+
00028322 <AmiBlitz3.ab3@11699>   DBF d1,'l21d
00028324 <AmiBlitz3.ab3@11702>   ADD.l d4,d3
00028326 <AmiBlitz3.ab3@11709>   SUB.l D4,D5
0002832A <AmiBlitz3.ab3@11710>    BEQ.w 'deoff
00028330 <AmiBlitz3.ab3@11712>   MOVE.l #zero,a1
00028332 <AmiBlitz3.ab3@11716>   MOVE.l (a1),(a0)+
00028334 <AmiBlitz3.ab3@11720>   ADD.l d5,d3
00028338 <AmiBlitz3.ab3@11726>   MOVE.l $8(A2),D2
0002833E <AmiBlitz3.ab3@11727>   SUB.l destbufferstart,D2
00028344 <AmiBlitz3.ab3@11728>   SUB.l noinits,D2
0002834A <AmiBlitz3.ab3@11729>   MOVE.l D2,temp1
00028350 <AmiBlitz3.ab3@11731>   MOVE.l #temp1,a1
00028352 <AmiBlitz3.ab3@11735>   MOVE.l (a1),(a0)+
00028358 <AmiBlitz3.ab3@11736>   ADD.l #4,d3
0002835E <AmiBlitz3.ab3@11737>   LEA debugstore,a0
00028360 <AmiBlitz3.ab3@11738>   MOVE.l a0,d2
00028362 <AmiBlitz3.ab3@11741>   MOVE.l D7,D1
00028366 <AmiBlitz3.ab3@11742>   BSR.w mywrite
00028368 <AmiBlitz3.ab3@11745>   MOVEA.l (A2),A2
0002836C <AmiBlitz3.ab3@11746>  BRA.w 'deloop
00028372 <AmiBlitz3.ab3@11749>   MOVE.l #zero,D2
00028374 <AmiBlitz3.ab3@11750>   MOVEQ.l #$04,D3
00028376 <AmiBlitz3.ab3@11751>   MOVE.l D7,D1
0002837A <AmiBlitz3.ab3@11752>   BSR.w mywrite
0002837C <AmiBlitz3.ab3@11755>   MOVE.l D7,D1
00028382 <AmiBlitz3.ab3@11756>   MOVE.l #tstdone,D2                                      ;hunkend
00028384 <AmiBlitz3.ab3@11757>   MOVEQ.l #$04,D3
0002838E <AmiBlitz3.ab3@11759>   CMPI.l #-1,bssstart
00028392 <AmiBlitz3.ab3@11760>   BEQ 'l10e
00028394 <AmiBlitz3.ab3@11761>   MOVEQ #16,d3
0002839A <AmiBlitz3.ab3@11762>   MOVE.l #hunkend,d2
000283A4 <AmiBlitz3.ab3@11763>   CMPI.l #-1,chipstart
000283A8 <AmiBlitz3.ab3@11764>   BEQ 'l10e
000283AA <AmiBlitz3.ab3@11765>   MOVE.l d7,d1
000283AC <AmiBlitz3.ab3@11766>   MOVEQ #12,d3
000283B0 <AmiBlitz3.ab3@11767>   BSR.w mywrite
000283BA <AmiBlitz3.ab3@11770>   CMPI.l #-1,chipstart
000283BE <AmiBlitz3.ab3@11771>   BEQ 'l11e
000283C0 <AmiBlitz3.ab3@11772>   MOVEQ #12,d3
000283C6 <AmiBlitz3.ab3@11773>   MOVE.l #hunkend2,d2
000283C8 <AmiBlitz3.ab3@11774>   MOVE.l d7,d1
000283CC <AmiBlitz3.ab3@11775>   BSR.w mywrite
000283CE <AmiBlitz3.ab3@11776>   MOVE.l d7,d1
000283D4 <AmiBlitz3.ab3@11777>   MOVE.l chipstart,d2
000283DA <AmiBlitz3.ab3@11778>   MOVE.l chipsize,d3
000283DE <AmiBlitz3.ab3@11779>   BSR.w mywrite
000283E0 <AmiBlitz3.ab3@11780>   MOVEQ #4,d3
000283E6 <AmiBlitz3.ab3@11781>   MOVE.l #hunkend,d2
000283E8 <AmiBlitz3.ab3@11782>   MOVE.l d7,d1
000283EC <AmiBlitz3.ab3@11786>   BSR.w mywrite
000283EE <AmiBlitz3.ab3@11787>   MOVE.l D7,D1
000283F4 <AmiBlitz3.ab3@11788>   MOVEA.l _dosbase,A6
000283F8 <AmiBlitz3.ab3@11789>   JSR _Close(A6)
00028400 <AmiBlitz3.ab3@11794>   BTST #$7,create_iconfile
00028404 <AmiBlitz3.ab3@11795>    BEQ.w 'done
0002840A <AmiBlitz3.ab3@11799>   MOVEA.l ptr_newexefilename,A0
0002840C <AmiBlitz3.ab3@11802>     TST.b (A0)+
00028410 <AmiBlitz3.ab3@11803>   BNE.w 'iloop
00028412 <AmiBlitz3.ab3@11804>   SUBQ.w #1,A0
00028414 <AmiBlitz3.ab3@11805>   MOVE.l A0,-(A7)        ;to later null out!
0002841A <AmiBlitz3.ab3@11806>   LEA str_infoextention2,A1
0002841C <AmiBlitz3.ab3@11809>     MOVE.b (A1)+,(A0)+
00028420 <AmiBlitz3.ab3@11810>   BNE.w 'iloop2
00028426 <AmiBlitz3.ab3@11812>   MOVE.l ptr_newexefilename,D1
00028428 <AmiBlitz3.ab3@11813>   MOVEQ.l #-$02,D2
0002842E <AmiBlitz3.ab3@11814>   MOVEA.l _dosbase,A6
00028432 <AmiBlitz3.ab3@11815>   JSR _Lock(A6)
00028434 <AmiBlitz3.ab3@11816>   MOVE.l D0,D1
00028438 <AmiBlitz3.ab3@11817>   BEQ.w 'dildo      ;not exist                                    ;no icon exit so jump to create one  tomsmart1
0002843C <AmiBlitz3.ab3@11818>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00028440 <AmiBlitz3.ab3@11819>  BRA.w 'ifail                                            ;and skip writing a Icon  tomsmart1
00028446 <AmiBlitz3.ab3@11822>   MOVE.l ptr_newexefilename,D1
0002844C <AmiBlitz3.ab3@11823>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00028452 <AmiBlitz3.ab3@11824>   MOVEA.l _dosbase,A6
00028456 <AmiBlitz3.ab3@11825>    JSR _Open(A6)
00028458 <AmiBlitz3.ab3@11826>   MOVE.l D0,D7
0002845C <AmiBlitz3.ab3@11827>    BEQ.w 'ifail
00028462 <AmiBlitz3.ab3@11828>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00028468 <AmiBlitz3.ab3@11829>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
0002846A <AmiBlitz3.ab3@11830>   MOVE.l D7,D1
00028470 <AmiBlitz3.ab3@11831>   MOVEA.l _dosbase,A6
00028474 <AmiBlitz3.ab3@11832>   JSR _Write(A6)
00028476 <AmiBlitz3.ab3@11833>   MOVE.l D7,D1
0002847A <AmiBlitz3.ab3@11834>   JSR _Close(A6)
0002847C <AmiBlitz3.ab3@11837>   MOVEA.l (A7)+,A0
0002847E <AmiBlitz3.ab3@11838>   CLR.b (A0)
00028484 <AmiBlitz3.ab3@11844>   TST.b exdebug
00028488 <AmiBlitz3.ab3@11845>    BEQ 'fixdoneb
0002848E <AmiBlitz3.ab3@11846>   MOVE.w dontwrite_nomemleft,D1
00028492 <AmiBlitz3.ab3@11847>   BNE.w 'fixdoneb
00028498 <AmiBlitz3.ab3@11848>   MOVE.l chipsize,d5
0002849E <AmiBlitz3.ab3@11849>   MOVE.l bsssize,d3
000284A4 <AmiBlitz3.ab3@11850>   MOVE.l chipstart,d7
000284AA <AmiBlitz3.ab3@11851>   MOVE.l bssstart,d6
000284B0 <AmiBlitz3.ab3@11852>   MOVEA.l hunkoffsetbase,A2
000284B6 <AmiBlitz3.ab3@11853>   MOVEA.l destbufferstart,A1
000284B8 <AmiBlitz3.ab3@11854>   MOVE.l A1,D2
000284BE <AmiBlitz3.ab3@11855>   ADD.l noinits,D2
000284C4 <AmiBlitz3.ab3@11856>   CLR.l hunkoffsetnum
000284C8 <AmiBlitz3.ab3@11859>   CMPA.w #$0,A2
000284CC <AmiBlitz3.ab3@11860>    BEQ.w 'fixdoneb
000284D0 <AmiBlitz3.ab3@11861>   MOVE.l $4(A2),D0
000284D4 <AmiBlitz3.ab3@11862>    LEA $0(a1,d0.l),a0
000284D6 <AmiBlitz3.ab3@11863>    MOVE.l (a0),d1
000284D8 <AmiBlitz3.ab3@11864>   TST.l d1
000284DC <AmiBlitz3.ab3@11865>    BMI.w 'lm1f
000284E4 <AmiBlitz3.ab3@11866>   MOVE.b #0,newhunk
000284EE <AmiBlitz3.ab3@11867>   CMP.l #-1,chipstart
000284F2 <AmiBlitz3.ab3@11868>   BEQ 'l10f
000284F8 <AmiBlitz3.ab3@11869>   CMP.l chipstart,d1
000284FC <AmiBlitz3.ab3@11870>   BLT 'l10f
00028504 <AmiBlitz3.ab3@11871>   MOVE.b #1,newhunk
0002850A <AmiBlitz3.ab3@11872>   CMP.l chipend,d1
0002850E <AmiBlitz3.ab3@11873>   BGE 'l110f
00028510 <AmiBlitz3.ab3@11874>   ADD.l d7,(a0)
00028518 <AmiBlitz3.ab3@11875>   ADD.l #$80000000,4(a2)
0002851C <AmiBlitz3.ab3@11876>  BRA 'nowayb
00028520 <AmiBlitz3.ab3@11879>   ADD.l d5,0(a0)
0002852A <AmiBlitz3.ab3@11882>   CMP.l #-1,bssstart
0002852E <AmiBlitz3.ab3@11883>     BEQ 'l11f
00028534 <AmiBlitz3.ab3@11884>   CMP.l bssstart,d1
00028538 <AmiBlitz3.ab3@11885>   BLT 'l11f
0002853E <AmiBlitz3.ab3@11886>   CMP.l bssend,d1
00028542 <AmiBlitz3.ab3@11887>   BGE 'l111f
00028548 <AmiBlitz3.ab3@11888>   TST.b newhunk
0002854C <AmiBlitz3.ab3@11889>   BEQ 'ln1f
0002854E <AmiBlitz3.ab3@11890>   ADD.l d5,(a0)
00028550 <AmiBlitz3.ab3@11893>   ADD.l d6,(a0)
00028558 <AmiBlitz3.ab3@11894>   ADD.l #$40000000,4(a2)
0002855C <AmiBlitz3.ab3@11895>  BRA 'nowayb
00028560 <AmiBlitz3.ab3@11898>   ADD.l d3,0(a0)
00028562 <AmiBlitz3.ab3@11901>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00028568 <AmiBlitz3.ab3@11904>   ADDQ.l #1,hunkoffsetnum
0002856A <AmiBlitz3.ab3@11907>   MOVEA.l (A2),A2
0002856E <AmiBlitz3.ab3@11908>  BRA.w 'loop0b
00028574 <AmiBlitz3.ab3@11912>   JSR call_setpointernormal
00028578 <AmiBlitz3.ab3@11913>   MOVEM.l (a7)+,d2-d7/a2-a6
0002857A <AmiBlitz3.ab3@11916> RTS
0002857C <AmiBlitz3.ab3@11922>   MOVE.l D2,-(A7)
00028582 <AmiBlitz3.ab3@11923>   MOVE.l destpointer,D2
00028588 <AmiBlitz3.ab3@11924>   SUB.l destbufferstart,D2
0002858C <AmiBlitz3.ab3@11925>   BSR.w addhunkoffset
0002858E <AmiBlitz3.ab3@11926>   MOVE.l (A7)+,D2
00028590 <AmiBlitz3.ab3@11927> RTS
00028594 <AmiBlitz3.ab3@11933>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
0002859A <AmiBlitz3.ab3@11935>   TST.b nohunkoffset
0002859E <AmiBlitz3.ab3@11936>   BNE 'l10
000285A0 <AmiBlitz3.ab3@11938>   MOVEQ.l #$8,D0
000285A2 <AmiBlitz3.ab3@11939>   MOVEQ.l #$01,D1
000285A8 <AmiBlitz3.ab3@11940>   MOVEA.l _execbase,A6
000285AE <AmiBlitz3.ab3@11942>   MOVE.l mempool2,a0
000285B2 <AmiBlitz3.ab3@11943>   JSR _AllocPooled(a6)
000285B8 <AmiBlitz3.ab3@11947>   ADDQ.l #1,hunkoffsetcounter
000285BA <AmiBlitz3.ab3@11948>   MOVEA.l D0,A0
000285C0 <AmiBlitz3.ab3@11949>   MOVE.l hunkoffsetbase,(A0)
000285C6 <AmiBlitz3.ab3@11950>   MOVE.l A0,hunkoffsetbase
000285CA <AmiBlitz3.ab3@11951>   MOVE.l D2,$4(A0)
000285CE <AmiBlitz3.ab3@11956>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000285D0 <AmiBlitz3.ab3@11957> RTS
000285D6 <AmiBlitz3.ab3@11963>   CLR.l hunkoffsetbase
000285DC <AmiBlitz3.ab3@11964>   MOVEA.l _execbase,A6
000285E2 <AmiBlitz3.ab3@11965>   MOVEA.l hunkoffsetbase,A2
000285E6 <AmiBlitz3.ab3@11968>     CMPA.w #$0,A2
000285EA <AmiBlitz3.ab3@11969>      BEQ.w 'skip
000285EC <AmiBlitz3.ab3@11970>     MOVEA.l A2,A1
000285EE <AmiBlitz3.ab3@11971>     MOVEQ.l #$08,D0
000285F0 <AmiBlitz3.ab3@11972>     MOVEA.l (A2),A2
000285F6 <AmiBlitz3.ab3@11974>     MOVE.l mempool2,a0
000285FA <AmiBlitz3.ab3@11975>     JSR _FreePooled(A6)
000285FE <AmiBlitz3.ab3@11978>  BRA.w 'loop
00028604 <AmiBlitz3.ab3@11981>   CLR.l hunkoffsetcounter
00028606 <AmiBlitz3.ab3@11982> RTS
0002861E <AmiBlitz3.ab3@11985> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00028622 <AmiBlitz3.ab3@11986> cmakea5:    Ds.l 1
00028624 <AmiBlitz3.ab3@11987> cmake:      Ds.w 1
000286A4 <AmiBlitz3.ab3@11988> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000286AA <AmiBlitz3.ab3@11992>   MOVE.l A5,lastsourcepos
000286B4 <AmiBlitz3.ab3@11993>   MOVE.w instringon,oldqflag
000286B6 <AmiBlitz3.ab3@11996>   MOVEQ.l #$00,D0
000286B8 <AmiBlitz3.ab3@11997>   MOVE.b (A5)+,D0
000286BC <AmiBlitz3.ab3@11998>    BEQ 'donea
000286C0 <AmiBlitz3.ab3@11999>   BPL 'stuffa
000286C2 <AmiBlitz3.ab3@12000>   LSL.l #8,D0
000286C4 <AmiBlitz3.ab3@12001>   MOVE.b (A5)+,D0
000286C6 <AmiBlitz3.ab3@12002>   MOVE.l a1,-(a7)
000286CC <AmiBlitz3.ab3@12003>   LEA replacedat,a1
000286D0 <AmiBlitz3.ab3@12004>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
000286D4 <AmiBlitz3.ab3@12005>   BEQ 'l10
000286D8 <AmiBlitz3.ab3@12006>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
000286DA <AmiBlitz3.ab3@12010>   MOVE.l (a7)+,a1
000286DE <AmiBlitz3.ab3@12011>  BRA 'weiter
000286E2 <AmiBlitz3.ab3@12014>   CMP.w #$22,D0
000286E6 <AmiBlitz3.ab3@12015>    BEQ.b 'swapquotea
000286EA <AmiBlitz3.ab3@12016>   CMP.w #$3B,D0
000286EE <AmiBlitz3.ab3@12017>    BNE.b 'donea
000286F4 <AmiBlitz3.ab3@12018>   TST.w instringon
000286F8 <AmiBlitz3.ab3@12019>    BNE.b 'donea
000286FA <AmiBlitz3.ab3@12022>   MOVE.b (A5)+,D0
000286FE <AmiBlitz3.ab3@12023>              BEQ 'l1
00028702 <AmiBlitz3.ab3@12024>              CMP.b #":",d0
00028706 <AmiBlitz3.ab3@12025>              BNE 'loopa                                ;:@
0002870A <AmiBlitz3.ab3@12026>              CMP.b #"@",(a5)
0002870E <AmiBlitz3.ab3@12027>              BNE 'loopa
00028710 <AmiBlitz3.ab3@12028>              ADDQ #1,a5
00028716 <AmiBlitz3.ab3@12031>   MOVE.w D0,lastchar
0002871A <AmiBlitz3.ab3@12034>  BRA.s 'weiter
00028720 <AmiBlitz3.ab3@12037>   NOT.w instringon
00028726 <AmiBlitz3.ab3@12040>    MOVE.w D0,lastchar
0002872A <AmiBlitz3.ab3@12041>    BEQ.w 'done
0002872E <AmiBlitz3.ab3@12042>    BPL.w 'done2
00028732 <AmiBlitz3.ab3@12043>   CMP.w #-$7FE4,D0                                         ;cnif
00028736 <AmiBlitz3.ab3@12044>    BEQ.w 'cnif
0002873A <AmiBlitz3.ab3@12045>   CMP.w #-$7FE3,D0                                         ;csif
0002873E <AmiBlitz3.ab3@12046>    BEQ.w 'csif
00028742 <AmiBlitz3.ab3@12047>   CMP.w #-$7FE2,D0                                         ;celse
00028746 <AmiBlitz3.ab3@12048>    BEQ.w 'celse
0002874A <AmiBlitz3.ab3@12049>   CMP.w #-$7FE1,D0                                         ;cend
0002874E <AmiBlitz3.ab3@12050>    BEQ.w 'cend
00028754 <AmiBlitz3.ab3@12053>   TST.w skipcode
00028758 <AmiBlitz3.ab3@12054>    BEQ.w getchar
0002875C <AmiBlitz3.ab3@12055>   CMP.w #$7E,D0
00028760 <AmiBlitz3.ab3@12056>    BEQ.w 'cmake                                            ;tilde
00028764 <AmiBlitz3.ab3@12057>   CMP.w #$2,D0
00028768 <AmiBlitz3.ab3@12058>    BNE.w 'notunpath
0002876E <AmiBlitz3.ab3@12059>   MOVEA.l usedfrom,A5
00028774 <AmiBlitz3.ab3@12060>   CLR.l usedfrom
00028778 <AmiBlitz3.ab3@12061>  BRA.w getchar
0002877C <AmiBlitz3.ab3@12064>   CMP.w #$1,D0
00028780 <AmiBlitz3.ab3@12065>    BNE.w 'done
00028784 <AmiBlitz3.ab3@12069>   MOVEA.l cmakea5(PC),A5
00028788 <AmiBlitz3.ab3@12070>  BRA.w getchar
0002878E <AmiBlitz3.ab3@12073>   TST.w cmake
00028792 <AmiBlitz3.ab3@12074>    BNE.w 'done
00028796 <AmiBlitz3.ab3@12076>   MOVEM.l D0-D7/A0-A6,-(A7)
0002879C <AmiBlitz3.ab3@12077>   LEA cmake,a0                                            ;reass
0002879E <AmiBlitz3.ab3@12078>   NOT.w (a0)
000287A2 <AmiBlitz3.ab3@12079>   LEA cmakebak(PC),A0
000287A8 <AmiBlitz3.ab3@12080>   LEA ptr_parameterstore,A1
000287AA <AmiBlitz3.ab3@12081>   MOVEQ.l #$1F,D0
000287AC <AmiBlitz3.ab3@12084>     MOVE.l (A1)+,(A0)+
000287B0 <AmiBlitz3.ab3@12085>   DBF D0,'cmloop
000287B6 <AmiBlitz3.ab3@12088>    JSR evalconst3
000287BA <AmiBlitz3.ab3@12089>   CMP.w #$7E,D0
000287BE <AmiBlitz3.ab3@12090>    BNE.w syntaxerr
000287C4 <AmiBlitz3.ab3@12091>   MOVE.l A5,cmakea5                                      ;tilde
000287C8 <AmiBlitz3.ab3@12092>   LEA cmakebuff(PC),A0
000287CA <AmiBlitz3.ab3@12093>   MOVE.l D3,D2
000287CE <AmiBlitz3.ab3@12094>   BSR.w makelong
000287D0 <AmiBlitz3.ab3@12095>   ADDQ.b #1,(A0)
000287D6 <AmiBlitz3.ab3@12096>   LEA cmake,a0
000287D8 <AmiBlitz3.ab3@12097>   NOT.w (a0)                                               ;reass
000287DC <AmiBlitz3.ab3@12098>   LEA cmakebak(PC),A0
000287E2 <AmiBlitz3.ab3@12099>   LEA ptr_parameterstore,A1
000287E4 <AmiBlitz3.ab3@12100>   MOVEQ.l #$1F,D0
000287E6 <AmiBlitz3.ab3@12103>     MOVE.l (A0)+,(A1)+
000287EA <AmiBlitz3.ab3@12104>   DBF D0,'cmloop2
000287EE <AmiBlitz3.ab3@12106>   MOVEM.l (A7)+,D0-D7/A0-A6
000287F2 <AmiBlitz3.ab3@12107>   LEA cmakebuff(PC),A5
000287F6 <AmiBlitz3.ab3@12108>  BRA.w getchar
000287F8 <AmiBlitz3.ab3@12111>  RTS
00028802 <AmiBlitz3.ab3@12114>   MOVE.l linenumat,ciflineat                               ;csif
00028808 <AmiBlitz3.ab3@12115>   TST.w skipcode
0002880C <AmiBlitz3.ab3@12116>    BEQ.w 'incnest
00028810 <AmiBlitz3.ab3@12117>    BSR.w get1bytemain
00028812 <AmiBlitz3.ab3@12118>    MOVE.l a1,-(a7)
00028818 <AmiBlitz3.ab3@12119>    JSR do_csif
0002881A <AmiBlitz3.ab3@12120>    MOVE.l (a7)+,a1
0002881E <AmiBlitz3.ab3@12121>  BRA.w getchar
00028828 <AmiBlitz3.ab3@12124>   MOVE.l linenumat,ciflineat                               ;cnif
0002882E <AmiBlitz3.ab3@12125>   TST.w skipcode
00028832 <AmiBlitz3.ab3@12126>    BEQ.w 'incnest
00028836 <AmiBlitz3.ab3@12127>    BSR.w get1bytemain
0002883A <AmiBlitz3.ab3@12128>    CMP.b #"@",d0
0002883E <AmiBlitz3.ab3@12129>    BNE 'cnif_ok2
00028842 <AmiBlitz3.ab3@12130>    BSR.w get1bytemain
0002884A <AmiBlitz3.ab3@12131>    MOVE.b #1,incnif
00028850 <AmiBlitz3.ab3@12132>    JSR findconstant2
00028854 <AmiBlitz3.ab3@12133>    BEQ 'cnif_ok2
0002885A <AmiBlitz3.ab3@12136>    MOVE.w fast,-(a7)
00028860 <AmiBlitz3.ab3@12137>    CLR.b fast
00028862 <AmiBlitz3.ab3@12138>    MOVE.l a1,-(a7)
00028868 <AmiBlitz3.ab3@12139>    JSR do_cnif
0002886E <AmiBlitz3.ab3@12140>    CLR.b incnif
00028870 <AmiBlitz3.ab3@12141>    MOVE.l (a7)+,a1
00028876 <AmiBlitz3.ab3@12142>    MOVE.w (a7)+,fast
0002887A <AmiBlitz3.ab3@12143>  BRA.w getchar
00028880 <AmiBlitz3.ab3@12146>   ADDQ.w #1,connest
00028884 <AmiBlitz3.ab3@12147>  BRA.w getchar
0002888A <AmiBlitz3.ab3@12150>   MOVE.w connest,D0                                      ;celse
0002888E <AmiBlitz3.ab3@12151>    BNE.w getchar
00028894 <AmiBlitz3.ab3@12152>   NOT.w skipcode
00028898 <AmiBlitz3.ab3@12153>  BRA.w getchar
0002889E <AmiBlitz3.ab3@12156>   SUBQ.w #1,connest                                      ;cend
000288A2 <AmiBlitz3.ab3@12157>    BPL.w getchar
000288A8 <AmiBlitz3.ab3@12158>   ADDQ.w #1,connest
000288AE <AmiBlitz3.ab3@12159>   MOVEA.l concomsp,A0
000288B4 <AmiBlitz3.ab3@12160>   CMPA.l #concomstack,A0
000288B8 <AmiBlitz3.ab3@12161>    BEQ.w nociferr
000288BA <AmiBlitz3.ab3@12162>   SUBQ.w #2,A0
000288C0 <AmiBlitz3.ab3@12163>   MOVE.l A0,concomsp
000288C6 <AmiBlitz3.ab3@12164>   MOVE.w (A0),skipcode
000288CA <AmiBlitz3.ab3@12165> BRA.w getchar
000288CE <AmiBlitz3.ab3@12168> ciflineat:   Ds.l 1
000288D0 <AmiBlitz3.ab3@12176>   MOVEQ.l #$00,D0
000288D2 <AmiBlitz3.ab3@12177>   MOVE.b (A5)+,D0
000288D6 <AmiBlitz3.ab3@12178>    BEQ.b 'done
000288DA <AmiBlitz3.ab3@12179>    BPL.b 'stuff
000288DC <AmiBlitz3.ab3@12180>   LSL.w #8,D0
000288DE <AmiBlitz3.ab3@12181>   MOVE.b (A5)+,D0
000288E0 <AmiBlitz3.ab3@12182>  RTS
000288E4 <AmiBlitz3.ab3@12185>   CMP.w #$22,D0
000288E8 <AmiBlitz3.ab3@12186>    BEQ.b 'swapquote
000288EC <AmiBlitz3.ab3@12187>   CMP.w #$3B,D0
000288F0 <AmiBlitz3.ab3@12188>    BNE.b 'done
000288F6 <AmiBlitz3.ab3@12189>   TST.w instringon
000288FA <AmiBlitz3.ab3@12190>    BNE.b 'done
000288FC <AmiBlitz3.ab3@12193>   MOVE.b (A5)+,D0
00028900 <AmiBlitz3.ab3@12194>             BEQ 'loop_l1
00028904 <AmiBlitz3.ab3@12195>             CMP.b #":",d0
00028908 <AmiBlitz3.ab3@12196>             BNE 'loop
0002890C <AmiBlitz3.ab3@12197>             CMP.b #"@",(a5)
00028910 <AmiBlitz3.ab3@12198>             BNE 'loop
00028916 <AmiBlitz3.ab3@12201>   MOVE.w D0,lastchar
00028918 <AmiBlitz3.ab3@12204>  RTS
0002891E <AmiBlitz3.ab3@12207>   NOT.w instringon
00028920 <AmiBlitz3.ab3@12208> RTS
00028924 <AmiBlitz3.ab3@12212>   BSR.w getchar
0002892A <AmiBlitz3.ab3@12213>   TST.w instringon
0002892E <AmiBlitz3.ab3@12214>    BNE.w 'skip
00028932 <AmiBlitz3.ab3@12215>   CMP.w #$20,D0        ;' '
00028936 <AmiBlitz3.ab3@12216>    BEQ.w get1byte_
00028938 <AmiBlitz3.ab3@12219> RTS
00028952 <AmiBlitz3.ab3@12222> gs:        Ds.w 13                                         ;ds.b 26  org source
00028956 <AmiBlitz3.ab3@12223>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00028958 <AmiBlitz3.ab3@12224>            Dc.b $C4,$DC
0002895C <AmiBlitz3.ab3@12231>   BSR.w getchar
00028962 <AmiBlitz3.ab3@12232>   TST.w instringon
00028966 <AmiBlitz3.ab3@12233>    BNE.w gchar2
0002896A <AmiBlitz3.ab3@12234>   CMP.w #$20,D0
0002896E <AmiBlitz3.ab3@12235>    BEQ.w get1bytemain
00028970 <AmiBlitz3.ab3@12237>   TST.w D0
00028974 <AmiBlitz3.ab3@12240>   BEQ.b 'zero
0002897A <AmiBlitz3.ab3@12241>   TST.w instringon
0002897E <AmiBlitz3.ab3@12242>    BEQ.b 'noqoute
00028982 <AmiBlitz3.ab3@12243>   CMP.b #$20,D0           ;' '
00028986 <AmiBlitz3.ab3@12244>    BCC.b 'skip
0002898A <AmiBlitz3.ab3@12245>   MOVE.b gs(PC,D0.W),D0
0002898C <AmiBlitz3.ab3@12246>  RTS
00028990 <AmiBlitz3.ab3@12249>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
00028994 <AmiBlitz3.ab3@12250>    BEQ.b 'zero
00028998 <AmiBlitz3.ab3@12251>   CMP.w #$3A,D0           ;':'
0002899C <AmiBlitz3.ab3@12252>    BEQ.b 'zero
0002899E <AmiBlitz3.ab3@12255>   TST.w D0
000289A0 <AmiBlitz3.ab3@12258> RTS
000289A6 <AmiBlitz3.ab3@12262>   MOVE.w lastchar,D0
000289AA <AmiBlitz3.ab3@12263> BRA.w gchar2
000289B4 <AmiBlitz3.ab3@12267>   MOVE.w oldqflag,instringon
000289BA <AmiBlitz3.ab3@12268>   MOVEA.l lastsourcepos,A5
000289BC <AmiBlitz3.ab3@12269> RTS
000289C2 <AmiBlitz3.ab3@12273>   MOVE.w D0,locchar
000289C8 <AmiBlitz3.ab3@12274>   MOVE.l A5,locloc
000289CA <AmiBlitz3.ab3@12275> RTS
000289D0 <AmiBlitz3.ab3@12279>   MOVEA.l locloc,A5
000289D6 <AmiBlitz3.ab3@12280>   MOVE.w locchar,D0
000289DC <AmiBlitz3.ab3@12281>   MOVE.w D0,lastchar
000289DE <AmiBlitz3.ab3@12282> RTS
000289DE <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00028A26 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
00028A78 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
00028AB6 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00028AF4 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
00028B1E <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
00028B4E <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
00028B98 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
00028C1E <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028C80 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
00028CC8 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028D1A <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028D7C <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028DCA <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028E00 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
00028E2E <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00028E48 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028E66 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028EE4 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00028F0E <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028F34 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028F54 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028F72 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028F92 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028FBA <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028FE4 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00029000 <internal_errormsg.ab3@34> XINCLUDE "internal_errormsg.ab3"
00029026 <internal_errormsg.ab3@35> XINCLUDE "internal_errormsg.ab3"
0002903E <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
0002909C <internal_errormsg.ab3@37> XINCLUDE "internal_errormsg.ab3"
000290BE <internal_errormsg.ab3@38> XINCLUDE "internal_errormsg.ab3"
000290E4 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
0002910C <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
0002912C <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00029150 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00029196 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
000291BA <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
000291DE <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
000291FE <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00029222 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00029244 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00029270 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00029296 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
000292A0 <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
000292C6 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00029318 <internal_errormsg.ab3@56> XINCLUDE "internal_errormsg.ab3"
00029382 <internal_errormsg.ab3@57> XINCLUDE "internal_errormsg.ab3"
000293E0 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
0002944E <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
0002948A <internal_errormsg.ab3@60> XINCLUDE "internal_errormsg.ab3"
000294A8 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
000294CE <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
000294FE <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00029522 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00029550 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00029574 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
0002958A <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
000295A0 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
000295A6 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
000295AE <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
000295B0 <internal_errormsg.ab3@75> XINCLUDE "internal_errormsg.ab3"
000295B4 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
000295BC <internal_errormsg.ab3@77> XINCLUDE "internal_errormsg.ab3"
000295BE <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
000295F8 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00029624 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00029654 <internal_errormsg.ab3@83> XINCLUDE "internal_errormsg.ab3"
0002968C <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
000296E6 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
000296E8 <internal_errormsg.ab3@89> XINCLUDE "internal_errormsg.ab3"
000296EC <internal_errormsg.ab3@90> XINCLUDE "internal_errormsg.ab3"
000296F0 <internal_errormsg.ab3@91> XINCLUDE "internal_errormsg.ab3"
000296F4 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
000296F8 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
000296FC <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00029700 <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00029704 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00029708 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
0002970C <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
00029710 <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
0002974E <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
00029780 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
0002979E <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
000297C8 <internal_errormsg.ab3@104> XINCLUDE "internal_errormsg.ab3"
000297E4 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
000297FE <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
0002981C <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00029840 <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00029842 <internal_errormsg.ab3@112> XINCLUDE "internal_errormsg.ab3"
00029894 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
000298BC <internal_errormsg.ab3@116> XINCLUDE "internal_errormsg.ab3"
000298E4 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00029900 <internal_errormsg.ab3@121> XINCLUDE "internal_errormsg.ab3"
00029920 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00029938 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
0002997C <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
000299C4 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
000299EE <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029A18 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00029A32 <internal_errormsg.ab3@131> XINCLUDE "internal_errormsg.ab3"
00029A5C <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
00029AB0 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029AFC <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029B34 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00029B3A <internal_errormsg.ab3@138> XINCLUDE "internal_errormsg.ab3"
00029B48 <internal_errormsg.ab3@142> XINCLUDE "internal_errormsg.ab3"
00029B78 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00029BAC <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00029C12 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029C30 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00029CAA <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029CD2 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029CE8 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029CFC <internal_errormsg.ab3@152> XINCLUDE "internal_errormsg.ab3"
00029D1C <internal_errormsg.ab3@153> XINCLUDE "internal_errormsg.ab3"
00029D22 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00029D34 <internal_errormsg.ab3@160> XINCLUDE "internal_errormsg.ab3"
00029D68 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029D80 <internal_errormsg.ab3@164> XINCLUDE "internal_errormsg.ab3"
00029D9C <internal_errormsg.ab3@165> XINCLUDE "internal_errormsg.ab3"
00029DB4 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
00029DD4 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029DF4 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029E1A <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029E30 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029E4C <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
00029E76 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00029E8E <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029EAA <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029ECA <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029EE2 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029EE6 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029EEC <internal_errormsg.ab3@180> XINCLUDE "internal_errormsg.ab3"
00029EF2 <internal_errormsg.ab3@181> XINCLUDE "internal_errormsg.ab3"
00029F07 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029F0D <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00029F0E <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029F12 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029F18 <internal_errormsg.ab3@189> XINCLUDE "internal_errormsg.ab3"
00029F1E <internal_errormsg.ab3@190> XINCLUDE "internal_errormsg.ab3"
00029F31 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00029F37 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029F38 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029F56 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029F6E <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029F8A <internal_errormsg.ab3@198> XINCLUDE "internal_errormsg.ab3"
00029FB4 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029FCE <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029FEE <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
0002A00C <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
0002A03A <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
0002A044 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
0002A076 <internal_errormsg.ab3@207> XINCLUDE "internal_errormsg.ab3"
0002A094 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
0002A0B2 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
0002A0D2 <internal_errormsg.ab3@211> XINCLUDE "internal_errormsg.ab3"
0002A0F8 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
0002A11E <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
0002A146 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
0002A164 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
0002A184 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
0002A19E <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
0002A1C0 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
0002A1DE <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
0002A200 <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
0002A224 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
0002A22A <internal_errormsg.ab3@225> XINCLUDE "internal_errormsg.ab3"
0002A246 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
0002A262 <internal_errormsg.ab3@229> XINCLUDE "internal_errormsg.ab3"
0002A280 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
0002A29E <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
0002A2EC <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
0002A30A <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
0002A328 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
0002A342 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
0002A38E <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
0002A3B4 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
0002A3D4 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
0002A3F6 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
0002A412 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
0002A438 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
0002A454 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
0002A472 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002A49A <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A4B6 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A4C6 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A4E8 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A4EA <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A504 <internal_errormsg.ab3@253> XINCLUDE "internal_errormsg.ab3"
0002A528 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A548 <internal_errormsg.ab3@256> XINCLUDE "internal_errormsg.ab3"
0002A57A <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A5D8 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A610 <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A64E <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A684 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A6B6 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A6DA <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A6FE <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A748 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A770 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A7BA <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A7FA <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A7FA <AmiBlitz3.ab3@12286> XINCLUDE "internal_errormsg.ab3"
0002A7FC <AmiBlitz3.ab3@12290> ezerr:   Ds.w 1                                            ;for simple errors
0002A802 <AmiBlitz3.ab3@12297>    MOVE.l myline,d0
0002A806 <AmiBlitz3.ab3@12298>   BNE 'l2
0002A80C <AmiBlitz3.ab3@12301>     MOVE.l a5,lastsourcepos
0002A80E <AmiBlitz3.ab3@12304>     SUBA.l a5,a5
0002A814 <AmiBlitz3.ab3@12307>   TST.l usedfrom
0002A818 <AmiBlitz3.ab3@12308>   BEQ 'org
0002A81E <AmiBlitz3.ab3@12309>     MOVEA.l usedfrom,a5
0002A824 <AmiBlitz3.ab3@12313>   TST.w dirmode
0002A828 <AmiBlitz3.ab3@12314>   BNE.b 'quiet
0002A82E <AmiBlitz3.ab3@12316>     JSR call_setpointernormal
0002A832 <AmiBlitz3.ab3@12318>     MOVE.w ezerr(PC),D0
0002A836 <AmiBlitz3.ab3@12319>     BNE.w 'skip
0002A83C <AmiBlitz3.ab3@12320>       MOVE.w cfetchmode,D0
0002A840 <AmiBlitz3.ab3@12321>       BEQ.w 'skip2
0002A84A <AmiBlitz3.ab3@12322>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A850 <AmiBlitz3.ab3@12325>   MOVE.w constmode,D0
0002A854 <AmiBlitz3.ab3@12326>   BEQ.b 'skip3
0002A858 <AmiBlitz3.ab3@12327>     BSR.w asmerr2
0002A85E <AmiBlitz3.ab3@12330>   MOVE.l firstlocal,D1
0002A864 <AmiBlitz3.ab3@12331>   OR.l firstglob,D1
0002A868 <AmiBlitz3.ab3@12332>   BEQ.b 'notproc                                           ;?!?!?!
0002A86E <AmiBlitz3.ab3@12334> 
0002A872 <AmiBlitz3.ab3@12335>     BNE 'notproc                                           ; yes skip
0002A878 <AmiBlitz3.ab3@12337>       JSR droplocals                                        ; no free some data ????
0002A880 <AmiBlitz3.ab3@12340>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A88A <AmiBlitz3.ab3@12342>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A88E <AmiBlitz3.ab3@12343>   BEQ 'notproc_l1
0002A898 <AmiBlitz3.ab3@12345>     MOVE.l linenumat,compilelinecounter
0002A89E <AmiBlitz3.ab3@12348>   JSR close_compilewin
0002A8A0 <AmiBlitz3.ab3@12351>   MOVEA.l (A7)+,A0
0002A8A6 <AmiBlitz3.ab3@12353>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A8AC <AmiBlitz3.ab3@12354>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A8B0 <AmiBlitz3.ab3@12355>   BLT 'lesserror
0002A8B6 <AmiBlitz3.ab3@12356>   LEA errorlimit_text,a0
0002A8BC <AmiBlitz3.ab3@12359>   ADDQ.l #1,errorcounter
0002A8C2 <AmiBlitz3.ab3@12360>   JSR errorstringparse
0002A8CC <AmiBlitz3.ab3@12361>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A8D0 <AmiBlitz3.ab3@12362>   BEQ 'skip_Lxx2
0002A8D6 <AmiBlitz3.ab3@12363>   TST.l CLIMode
0002A8DA <AmiBlitz3.ab3@12364>   BNE 'climode_output
0002A8E0 <AmiBlitz3.ab3@12367>     JSR save_errorfile
0002A8E4 <AmiBlitz3.ab3@12368>     BRA 'end_output
0002A8EA <AmiBlitz3.ab3@12371>     JSR stdout_error
0002A8F0 <AmiBlitz3.ab3@12374>        MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A8F6 <AmiBlitz3.ab3@12375>        CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A8FA <AmiBlitz3.ab3@12376>        BGT 'end_output
0002A900 <AmiBlitz3.ab3@12377>       MOVE.l lastsourcepos,a5
0002A902 <AmiBlitz3.ab3@12380>       TST.b (a5)
0002A906 <AmiBlitz3.ab3@12381>         BEQ 'ok2
0002A908 <AmiBlitz3.ab3@12382>       MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A90C <AmiBlitz3.ab3@12383>       BEQ 'ok
0002A910 <AmiBlitz3.ab3@12384>       CMP.b #":",d0
0002A914 <AmiBlitz3.ab3@12385>       BEQ 'ok
0002A918 <AmiBlitz3.ab3@12386>       BRA 'loop
0002A91A <AmiBlitz3.ab3@12389>     SUBQ.l #1,a5
0002A922 <AmiBlitz3.ab3@12392>       MOVE.w #0,lastchar
0002A92A <AmiBlitz3.ab3@12393>       MOVE.b #1,iserror
0002A930 <AmiBlitz3.ab3@12394>       MOVE.l stackaddr,a7
0002A932 <AmiBlitz3.ab3@12395>       RTS
0002A934 <AmiBlitz3.ab3@12403>   MOVE.l A0,-(a7)
0002A972 <AmiBlitz3.ab3@12404>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A974 <AmiBlitz3.ab3@12405>   MOVE.l (a7)+,A0
0002A978 <AmiBlitz3.ab3@12407>   MOVEM.l d6/D7/A6,-(A7)
0002A97E <AmiBlitz3.ab3@12409>   MOVE.l includeline,d7
0002A984 <AmiBlitz3.ab3@12410>   MOVE.l #"INLN",a6
0002A98E <AmiBlitz3.ab3@12411>   MOVE.l errstack,tempa7
0002A990 <AmiBlitz3.ab3@12413>   JSR (A1)                                                  ;open ped errorrequest
0002A994 <AmiBlitz3.ab3@12415>   MOVEM.l (A7)+,D7/d6/A6
0002A99A <AmiBlitz3.ab3@12419>   MOVE.l tempa7,a7
0002A9A0 <AmiBlitz3.ab3@12421>   MOVEA.l errcont,A0
0002A9A2 <AmiBlitz3.ab3@12424>  RTS
0002A9A8 <AmiBlitz3.ab3@12427>   MOVEA.l errstack,A7
0002A9AE <AmiBlitz3.ab3@12428>   MOVEA.l errcont,A0
0002A9B0 <AmiBlitz3.ab3@12430>  RTS
0002A9B2 <AmiBlitz3.ab3@12434>   MOVE.l (A7),D0
0002A9B8 <AmiBlitz3.ab3@12435>   MOVEA.l errstack,A7
0002A9BE <AmiBlitz3.ab3@12436>   MOVEA.l errcont,A0
0002A9C0 <AmiBlitz3.ab3@12437> JMP (A0)
0002A9C4 <AmiBlitz3.ab3@12443>   CMP.w #$7A,D0                                            ;'z'
0002A9C8 <AmiBlitz3.ab3@12444>    BHI.w 'no
0002A9CC <AmiBlitz3.ab3@12445>   CMP.w #$41,D0                                            ;'A'
0002A9D0 <AmiBlitz3.ab3@12446>    BCS.w 'no
0002A9D4 <AmiBlitz3.ab3@12447>   CMP.w #$61,D0                                            ;'a'
0002A9D8 <AmiBlitz3.ab3@12448>    BCC.w 'yes
0002A9DC <AmiBlitz3.ab3@12449>   CMP.w #$5A,D0                                            ;'Z'
0002A9E0 <AmiBlitz3.ab3@12450>    BHI.w 'no
0002A9E2 <AmiBlitz3.ab3@12453>   CMP.w D0,D0
0002A9E4 <AmiBlitz3.ab3@12456> RTS
0002A9E8 <AmiBlitz3.ab3@12464>   CMP.w #$30,D0                                            ;'0'
0002A9EC <AmiBlitz3.ab3@12465>    BCS.w 'skip
0002A9F0 <AmiBlitz3.ab3@12466>   CMP.w #$39,D0                                            ;'9'
0002A9F4 <AmiBlitz3.ab3@12467>    BHI.w 'skip
0002A9F6 <AmiBlitz3.ab3@12468>   CMP.w D0,D0
0002A9F8 <AmiBlitz3.ab3@12471> RTS
0002AA1A <AmiBlitz3.ab3@12478>   !compare1                                                ;bsr.w tstalpha
0002AA1E <AmiBlitz3.ab3@12480>    BEQ.w 'skip
0002AA30 <AmiBlitz3.ab3@12482>   !compare2                                                ;bsr.w tstnum2
0002AA34 <AmiBlitz3.ab3@12484>    BEQ.w 'skip
0002AA38 <AmiBlitz3.ab3@12485>   CMP.w #$5F,D0                                            ;'_'
0002AA3C <AmiBlitz3.ab3@12486>    BEQ.w 'skip
0002AA40 <AmiBlitz3.ab3@12487>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AA42 <AmiBlitz3.ab3@12490> RTS
0002AA4C <AmiBlitz3.ab3@12496>   MOVE.w oldqflag,instringon
0002AA52 <AmiBlitz3.ab3@12497>   MOVEA.l lastsourcepos,A5
0002AA58 <AmiBlitz3.ab3@12506>   MOVE.l a5,beforeparameterfetch
0002AA5E <AmiBlitz3.ab3@12508>   LEA ptr_parameterstore,A1
0002AA60 <AmiBlitz3.ab3@12511>   MOVEQ.l #$00,D2
0002AA66 <AmiBlitz3.ab3@12515>   LEA chartab,a0
0002AA68 <AmiBlitz3.ab3@12516>   MOVEQ #0,d0
0002AA6E <AmiBlitz3.ab3@12517>   MOVE.l A5,lastsourcepos
0002AA78 <AmiBlitz3.ab3@12518>   MOVE.w instringon,oldqflag
0002AA7A <AmiBlitz3.ab3@12521>     MOVE.b (a5)+,d0
0002AA7E <AmiBlitz3.ab3@12522>   CMP.b #$20,d0                                            ;space deftype
0002AA82 <AmiBlitz3.ab3@12523>   BEQ 'retry
0002AA88 <AmiBlitz3.ab3@12525>   MOVE.w d0,lastchar
0002AA8C <AmiBlitz3.ab3@12526>   TST.b 0(a0,d0.w)
0002AA90 <AmiBlitz3.ab3@12527>   BNE 'done
0002AA92 <AmiBlitz3.ab3@12540>   MOVE.b D0,(A1)+
0002AA94 <AmiBlitz3.ab3@12541>   ADDQ.l #1,D2
0002AA9A <AmiBlitz3.ab3@12544>   MOVE.l A5,lastsourcepos
0002AA9C <AmiBlitz3.ab3@12547>   MOVE.b (a5)+,d0
0002AAA2 <AmiBlitz3.ab3@12548>   MOVE.b d0,lastchar+1
0002AAA6 <AmiBlitz3.ab3@12549>   CMP.b #$20,d0
0002AAAA <AmiBlitz3.ab3@12550>   BEQ 'loop_l20
0002AAAE <AmiBlitz3.ab3@12552>   TST.b 0(a0,d0)
0002AAB2 <AmiBlitz3.ab3@12553>   BEQ 'loop
0002AAB6 <AmiBlitz3.ab3@12554>   CMP.b #2,d0
0002AABA <AmiBlitz3.ab3@12555>   BNE 'loop_lf1
0002AAC0 <AmiBlitz3.ab3@12556>   MOVEA.l usedfrom,A5
0002AAC6 <AmiBlitz3.ab3@12557>   CLR.l usedfrom
0002AACA <AmiBlitz3.ab3@12558>  BRA 'loop_ln1
0002AACE <AmiBlitz3.ab3@12561>   CMP.b #1,d0
0002AAD2 <AmiBlitz3.ab3@12562>   BNE 'loop_l20
0002AAD6 <AmiBlitz3.ab3@12563>   MOVEA.l cmakea5(PC),A5
0002AADA <AmiBlitz3.ab3@12564>  BRA 'loop_ln1
0002AADE <AmiBlitz3.ab3@12567>   CMP.b #$7e,d0
0002AAE2 <AmiBlitz3.ab3@12568>             BNE 'loop_lt
0002AAE8 <AmiBlitz3.ab3@12569>             TST.w cmake
0002AAEC <AmiBlitz3.ab3@12570>             BNE.w 'loop_a1
0002AAEE <AmiBlitz3.ab3@12571>             SUBQ.l #1,a5
0002AAF2 <AmiBlitz3.ab3@12572>             BSR.w get1bytemain
0002AAF6 <AmiBlitz3.ab3@12573>  BRA 'loop
0002AAFA <AmiBlitz3.ab3@12577>  BRA 'loop_gpex
0002AAFE <AmiBlitz3.ab3@12581>   BSR.w getchar
0002AB20 <AmiBlitz3.ab3@12583>    !compare1                                               ;bsr.w tstalpha
0002AB24 <AmiBlitz3.ab3@12584>    BEQ.w 'loop_getp1
0002AB36 <AmiBlitz3.ab3@12585>    !compare2                                               ;bsr.w tstnum
0002AB3A <AmiBlitz3.ab3@12586>    BEQ.w 'loop_getp1
0002AB3E <AmiBlitz3.ab3@12587>   CMP.w #$5F,D0                                            ;'_'
0002AB42 <AmiBlitz3.ab3@12588>    BEQ.w 'loop_getp1
0002AB46 <AmiBlitz3.ab3@12589>   CMP.w #$27,D0                                            ;''';#loclabch,d0 org source
0002AB4A <AmiBlitz3.ab3@12593>       BNE 'loop_gpex
0002AB4E <AmiBlitz3.ab3@12594>       CMP.b #$20,d0
0002AB52 <AmiBlitz3.ab3@12596>       BNE.w 'loop
0002AB54 <AmiBlitz3.ab3@12599>      TST.b d0
0002AB58 <AmiBlitz3.ab3@12600>      BPL 'loop_l10
0002AB5A <AmiBlitz3.ab3@12601>      SUBQ.l #1,a5
0002AB5E <AmiBlitz3.ab3@12602>      BSR get1byte_
0002AB62 <AmiBlitz3.ab3@12610>    CMP.w #$20,D0
0002AB66 <AmiBlitz3.ab3@12611>    BNE.w 'done
0002AB68 <AmiBlitz3.ab3@12613>    MOVEQ #0,d0
0002AB6E <AmiBlitz3.ab3@12614>   MOVE.l a5,lastsourcepos
0002AB70 <AmiBlitz3.ab3@12617>   MOVE.b (a5)+,d0                                          ;neuneu
0002AB74 <AmiBlitz3.ab3@12618>   BPL 'loop_l101
0002AB76 <AmiBlitz3.ab3@12619>   ASL.w #8,d0
0002AB78 <AmiBlitz3.ab3@12620>   MOVE.b (a5)+,d0
0002AB7E <AmiBlitz3.ab3@12623>   TST.w instringon
0002AB82 <AmiBlitz3.ab3@12624>   BNE 'loop_l102
0002AB86 <AmiBlitz3.ab3@12625>   CMP.b #$20,d0
0002AB8A <AmiBlitz3.ab3@12626>   BEQ 'loop_l103
0002AB8E <AmiBlitz3.ab3@12627>   CMP.b #";",d0
0002AB92 <AmiBlitz3.ab3@12628>   BNE 'loop_l102
0002AB94 <AmiBlitz3.ab3@12631>   MOVE.b (A5)+,D0
0002AB98 <AmiBlitz3.ab3@12632>              BEQ 'loop_l1
0002AB9C <AmiBlitz3.ab3@12633>              CMP.b #":",d0
0002ABA0 <AmiBlitz3.ab3@12634>              BNE 'loop_lr                         ;:@
0002ABA4 <AmiBlitz3.ab3@12635>              CMP.b #"@",(a5)
0002ABA8 <AmiBlitz3.ab3@12636>              BNE 'loop_lr
0002ABAA <AmiBlitz3.ab3@12637>              ADDQ #1,a5
0002ABB0 <AmiBlitz3.ab3@12641>   MOVE.w d0,lastchar
0002ABB4 <AmiBlitz3.ab3@12647>   CMP.b #";",d0
0002ABB8 <AmiBlitz3.ab3@12648>   BEQ 'done_l11
0002ABBA <AmiBlitz3.ab3@12650>   CLR.b (A1)
0002ABBC <AmiBlitz3.ab3@12654>   TST.w D2
0002ABBE <AmiBlitz3.ab3@12655>  RTS
0002ABC0 <AmiBlitz3.ab3@12659>   CLR.b (a1)
0002ABC2 <AmiBlitz3.ab3@12660>   MOVEQ #0,d0
0002ABC8 <AmiBlitz3.ab3@12661>   MOVE.w d0,lastchar
0002ABCA <AmiBlitz3.ab3@12664>   TST.w D2
0002ABCC <AmiBlitz3.ab3@12665> RTS
0002ABCE <AmiBlitz3.ab3@12672>   MOVE.l (A2),D0
0002ABD2 <AmiBlitz3.ab3@12675>   BEQ.w 'here
0002ABD4 <AmiBlitz3.ab3@12676>   MOVEA.l D0,A2
0002ABD8 <AmiBlitz3.ab3@12677>  BRA.w 'loop
0002ABDC <AmiBlitz3.ab3@12680> BRA.w reget
0002ABDE <AmiBlitz3.ab3@12686>   MOVE.l (A2),-(A7)
0002ABE2 <AmiBlitz3.ab3@12687>   BSR.w addlabel
0002ABE4 <AmiBlitz3.ab3@12688>   MOVE.l (A7)+,(A2)
0002ABE6 <AmiBlitz3.ab3@12689> RTS
0002ABEC <AmiBlitz3.ab3@12694>   CLR.l fp0addr
0002ABF2 <AmiBlitz3.ab3@12695>   TST.w dirmode
0002ABF6 <AmiBlitz3.ab3@12696>    BNE.w illdirerr
0002ABF8 <AmiBlitz3.ab3@12697>   MOVEQ.l #$00,D0
0002ABFA <AmiBlitz3.ab3@12698>   MOVE.w D7,D0
0002ABFC <AmiBlitz3.ab3@12699>   ADD.w D2,D0
0002ABFE <AmiBlitz3.ab3@12700>   ADDQ.w #1,D0
0002AC00 <AmiBlitz3.ab3@12701>   MOVE.w D0,D2
0002AC02 <AmiBlitz3.ab3@12702>   ADDQ.l #2,d0
0002AC04 <AmiBlitz3.ab3@12703>   MOVEQ.l #$01,D1
0002AC0A <AmiBlitz3.ab3@12704>   MOVEA.l _execbase,A6
0002AC10 <AmiBlitz3.ab3@12705>   MOVE.l mempool2,a0
0002AC14 <AmiBlitz3.ab3@12706>   JSR _AllocPooled(a6)
0002AC1A <AmiBlitz3.ab3@12708>   MOVE.l lastlabel,a2
0002AC1C <AmiBlitz3.ab3@12709>   MOVE.l D0,(A2)
0002AC1E <AmiBlitz3.ab3@12710>   MOVE.l d0,a0
0002AC20 <AmiBlitz3.ab3@12711>   CLR.l (a0)
0002AC26 <AmiBlitz3.ab3@12712>   MOVE.l a0,lastlabel
0002AC28 <AmiBlitz3.ab3@12713>   MOVE.l d0,A2
0002AC2C <AmiBlitz3.ab3@12714>   LEA -$1(A0,D7.W),A0
0002AC2E <AmiBlitz3.ab3@12715>   MOVE.b D2,(A0)+
0002AC34 <AmiBlitz3.ab3@12716>   LEA ptr_parameterstore,A1
0002AC36 <AmiBlitz3.ab3@12717>   MOVEQ #0,d0
0002AC38 <AmiBlitz3.ab3@12718>   MOVEQ #0,d1
0002AC3A <AmiBlitz3.ab3@12721>   MOVE.b (A1)+,d1
0002AC3E <AmiBlitz3.ab3@12722>    BEQ 'l1
0002AC44 <AmiBlitz3.ab3@12723>    !hashalgo
0002AC46 <AmiBlitz3.ab3@12724>    MOVE.b d1,(A0)+
0002AC4A <AmiBlitz3.ab3@12725>  BRA 'loop2a
0002AC4C <AmiBlitz3.ab3@12728>    CLR.b (a0)+
0002AC52 <AmiBlitz3.ab3@12729>    LEA labelhash,a0
0002AC58 <AmiBlitz3.ab3@12730>    AND.l #hashsize,d0
0002AC5A <AmiBlitz3.ab3@12731>    ASL.l #2,d0
0002AC5E <AmiBlitz3.ab3@12732>    MOVE.l 0(a0,d0),d1
0002AC62 <AmiBlitz3.ab3@12733>    MOVE.l d1,$c(a2)
0002AC66 <AmiBlitz3.ab3@12734>    MOVE.l a2,0(a0,d0)
0002AC68 <AmiBlitz3.ab3@12735>    MOVEQ #0,d0
0002AC6C <AmiBlitz3.ab3@12736> BRA.w reget
0002AC72 <AmiBlitz3.ab3@12740>    TST.b newvariable
0002AC76 <AmiBlitz3.ab3@12741>    BNE addlabel
0002AC7C <AmiBlitz3.ab3@12744>   TST.w dirmode
0002AC80 <AmiBlitz3.ab3@12745>    BNE.w illdirerr
0002AC82 <AmiBlitz3.ab3@12746>   MOVEQ.l #$00,D0
0002AC84 <AmiBlitz3.ab3@12747>   MOVE.w D7,D0
0002AC86 <AmiBlitz3.ab3@12748>   ADD.w D2,D0
0002AC88 <AmiBlitz3.ab3@12749>   ADDQ.w #1,D0
0002AC8A <AmiBlitz3.ab3@12750>   MOVE.w D0,D2
0002AC8C <AmiBlitz3.ab3@12751>   MOVEQ.l #$01,D1
0002AC92 <AmiBlitz3.ab3@12752>   MOVEA.l _execbase,A6
0002AC98 <AmiBlitz3.ab3@12753>   MOVE.l mempool2,a0
0002AC9C <AmiBlitz3.ab3@12754>   JSR _AllocPooled(a6)
0002AC9E <AmiBlitz3.ab3@12755>   MOVEA.l D0,A0
0002ACA4 <AmiBlitz3.ab3@12757>   LEA varbase,a2
0002ACA6 <AmiBlitz3.ab3@12758>   MOVE.l (a2),(a0)
0002ACA8 <AmiBlitz3.ab3@12759>   MOVE.l A0,(A2)
0002ACAA <AmiBlitz3.ab3@12760>   MOVEA.l A0,A2
0002ACAE <AmiBlitz3.ab3@12761>   LEA -$1(A0,D7.W),A0
0002ACB0 <AmiBlitz3.ab3@12762>   MOVE.b D2,(A0)+
0002ACB6 <AmiBlitz3.ab3@12763>   LEA ptr_parameterstore,A1
0002ACB8 <AmiBlitz3.ab3@12764>   MOVEQ #0,d0
0002ACBA <AmiBlitz3.ab3@12765>   MOVEQ #0,d1
0002ACBC <AmiBlitz3.ab3@12768>   MOVE.b (A1)+,d1
0002ACC0 <AmiBlitz3.ab3@12769>    BEQ 'l12
0002ACC6 <AmiBlitz3.ab3@12770>    !hashalgo
0002ACC8 <AmiBlitz3.ab3@12771>    MOVE.b d1,(A0)+
0002ACCC <AmiBlitz3.ab3@12772>  BRA 'l11
0002ACCE <AmiBlitz3.ab3@12775>   CLR.b (a0)+
0002ACD4 <AmiBlitz3.ab3@12776>   LEA variablehash,a0
0002ACDA <AmiBlitz3.ab3@12777>    AND.l #hashsize,d0
0002ACDC <AmiBlitz3.ab3@12778>    ASL.l #2,d0
0002ACE0 <AmiBlitz3.ab3@12779>    MOVE.l 0(a0,d0),d1
0002ACE4 <AmiBlitz3.ab3@12780>    MOVE.l d1,$e(a2)
0002ACE8 <AmiBlitz3.ab3@12781>    MOVE.l a2,0(a0,d0)
0002ACEA <AmiBlitz3.ab3@12782>    MOVEQ #0,d0
0002ACEE <AmiBlitz3.ab3@12783> BRA.w reget
0002ACF4 <AmiBlitz3.ab3@12787>   TST.w dirmode
0002ACF8 <AmiBlitz3.ab3@12788>    BNE.w illdirerr
0002ACFA <AmiBlitz3.ab3@12795>   MOVEQ.l #$00,D0
0002ACFC <AmiBlitz3.ab3@12796>   MOVE.w D7,D0
0002ACFE <AmiBlitz3.ab3@12797>   ADD.w D2,D0
0002AD00 <AmiBlitz3.ab3@12798>   ADDQ.w #1,D0
0002AD02 <AmiBlitz3.ab3@12799>   MOVE.w D0,D2
0002AD04 <AmiBlitz3.ab3@12800>   MOVEQ.l #$01,D1
0002AD0A <AmiBlitz3.ab3@12801>   MOVEA.l _execbase,A6
0002AD10 <AmiBlitz3.ab3@12803>   MOVE.l mempool2,a0
0002AD14 <AmiBlitz3.ab3@12804>   JSR _AllocPooled(a6)
0002AD16 <AmiBlitz3.ab3@12808>   MOVEA.l D0,A0
0002AD18 <AmiBlitz3.ab3@12809>   MOVE.l A0,(A2)
0002AD1A <AmiBlitz3.ab3@12810>   CLR.l (a0)              ;clear next
0002AD1E <AmiBlitz3.ab3@12812>   CLR.l 8(a0)
0002AD20 <AmiBlitz3.ab3@12813>   MOVEA.l A0,A2
0002AD24 <AmiBlitz3.ab3@12815>   LEA -$1(A0,D7.W),A0
0002AD26 <AmiBlitz3.ab3@12816>   MOVE.b D2,(A0)+          ;put in struct length
0002AD2C <AmiBlitz3.ab3@12817>   LEA ptr_parameterstore,A1
0002AD2E <AmiBlitz3.ab3@12819>   MOVEQ #0,d0
0002AD30 <AmiBlitz3.ab3@12820>   MOVEQ #0,d1
0002AD32 <AmiBlitz3.ab3@12824> 
0002AD34 <AmiBlitz3.ab3@12825>   MOVE.b d1,(A0)+       ; "
0002AD38 <AmiBlitz3.ab3@12826>   BNE.w 'loop2
0002AD3C <AmiBlitz3.ab3@12827> BRA.w reget
0002AD3E <AmiBlitz3.ab3@12831>   MOVEQ.l #$13,D7
0002AD44 <AmiBlitz3.ab3@12832>   LEA constantbase,A2
0002AD48 <AmiBlitz3.ab3@12833> BRA.w findlab
0002AD4A <AmiBlitz3.ab3@12837>   MOVEQ.l #$05+8,D7        ; was #5                                ;#5,d7 org source
0002AD50 <AmiBlitz3.ab3@12838>   LEA xinclude_base,A2
0002AD54 <AmiBlitz3.ab3@12839> BRA.w findlab
0002AD56 <AmiBlitz3.ab3@12843>   MOVEQ.l #$09,D7
0002AD5C <AmiBlitz3.ab3@12844>   LEA firstconst,A2
0002AD60 <AmiBlitz3.ab3@12845> BRA.w findlab
0002AD62 <AmiBlitz3.ab3@12849>   MOVEQ.l #$0d,D7                                          ;find macro
0002AD68 <AmiBlitz3.ab3@12850>   LEA macrobase,A2
0002AD6C <AmiBlitz3.ab3@12851> BRA.w findlab
0002AD72 <AmiBlitz3.ab3@12855>   LEA labelhash,A2
0002AD74 <AmiBlitz3.ab3@12856>   MOVEQ.l #$13,D7
0002AD76 <AmiBlitz3.ab3@12858>   EXT.l d2
0002AD7C <AmiBlitz3.ab3@12859>   LEA ptr_parameterstore,A0
0002AD7E <AmiBlitz3.ab3@12860>   MOVEQ #0,d0
0002AD80 <AmiBlitz3.ab3@12861>   MOVEQ #0,d1
0002AD82 <AmiBlitz3.ab3@12864>     MOVE.b (a0)+,d1
0002AD86 <AmiBlitz3.ab3@12865>     BEQ 'l15
0002AD8C <AmiBlitz3.ab3@12866>     !hashalgo
0002AD90 <AmiBlitz3.ab3@12867>  BRA 'l20
0002AD96 <AmiBlitz3.ab3@12870>   AND.l #hashsize,d0
0002AD98 <AmiBlitz3.ab3@12871>   ASL.l #2,d0
0002AD9C <AmiBlitz3.ab3@12872>   MOVE.l 0(a2,d0),d0
0002ADA0 <AmiBlitz3.ab3@12873>  BRA 'l11
0002ADA4 <AmiBlitz3.ab3@12876>   MOVE.l $c(A2),D0          ;  begin copy of findlabel
0002ADA8 <AmiBlitz3.ab3@12879>   BEQ findlab_no
0002ADAA <AmiBlitz3.ab3@12880>   MOVEA.l D0,A2
0002ADAC <AmiBlitz3.ab3@12881>   MOVEQ.l #$00,D0
0002ADB0 <AmiBlitz3.ab3@12882>   MOVE.b -$1(A2,D7.l),D0
0002ADB6 <AmiBlitz3.ab3@12883>   LEA ptr_parameterstore,A0
0002ADB8 <AmiBlitz3.ab3@12884>   SUB.l D7,D0
0002ADBA <AmiBlitz3.ab3@12885>   SUBQ.l #1,D0
0002ADBC <AmiBlitz3.ab3@12886>   CMP.l D0,D2
0002ADC0 <AmiBlitz3.ab3@12887>    BNE.b 'loop
0002ADC4 <AmiBlitz3.ab3@12888>   LEA $0(A2,D7.W),A1
0002ADC6 <AmiBlitz3.ab3@12889>   SUBQ.l #1,D0
0002ADC8 <AmiBlitz3.ab3@12892>     MOVE.b (a1)+,d1
0002ADCA <AmiBlitz3.ab3@12893>     CMP.b (a0)+,d1
0002ADCE <AmiBlitz3.ab3@12895>     BNE.b 'loop
0002ADD2 <AmiBlitz3.ab3@12896>   DBF D0,'loop2
0002ADD6 <AmiBlitz3.ab3@12898>   BSR.w reget
0002ADD8 <AmiBlitz3.ab3@12899>   CMP.w D0,D0
0002ADDA <AmiBlitz3.ab3@12900> RTS                     ; end copy of findlab
0002ADDC <AmiBlitz3.ab3@12904>   MOVEQ.l #$0B,D7
0002ADE0 <AmiBlitz3.ab3@12905> BRA.w findlab
0002ADE6 <AmiBlitz3.ab3@12909>   LEA firstproc,A2
0002ADEC <AmiBlitz3.ab3@12910>   MOVE.l #$21+#funcentry_extend,D7    ; was #33,
0002ADF0 <AmiBlitz3.ab3@12911> BRA findlab
0002ADF6 <AmiBlitz3.ab3@12915>   LEA firstfor,A2
0002ADF8 <AmiBlitz3.ab3@12916>   MOVEQ.l #$11,D7
0002ADFC <AmiBlitz3.ab3@12917> BRA.w findlab
0002ADFE <AmiBlitz3.ab3@12921>   MOVEQ.l #$0F,D7
0002AE02 <AmiBlitz3.ab3@12923> BRA.w findlab
0002AE04 <AmiBlitz3.ab3@12927>   MOVEQ.l #$0F+4,D7
0002AE0A <AmiBlitz3.ab3@12928>   TST.b newvariable
0002AE0E <AmiBlitz3.ab3@12929>    BNE.w findlab
0002AE14 <AmiBlitz3.ab3@12930>   LEA variablehash,A2
0002AE1A <AmiBlitz3.ab3@12931>   LEA ptr_parameterstore,A0
0002AE1C <AmiBlitz3.ab3@12932>   MOVEQ #0,d0
0002AE1E <AmiBlitz3.ab3@12933>   MOVEQ #0,d1
0002AE20 <AmiBlitz3.ab3@12936>     MOVE.b (a0)+,d1
0002AE24 <AmiBlitz3.ab3@12937>     BEQ 'l15
0002AE2A <AmiBlitz3.ab3@12938>     !hashalgo
0002AE2E <AmiBlitz3.ab3@12939>  BRA 'l20
0002AE34 <AmiBlitz3.ab3@12942>   AND.l #hashsize,d0
0002AE36 <AmiBlitz3.ab3@12943>   ASL.l #2,d0
0002AE3A <AmiBlitz3.ab3@12944>   MOVE.l 0(a2,d0),d0
0002AE3E <AmiBlitz3.ab3@12945>  BRA 'l11
0002AE42 <AmiBlitz3.ab3@12948>   MOVE.l $e(A2),D0                                         ;find label
0002AE46 <AmiBlitz3.ab3@12951>   BEQ findlab_no
0002AE48 <AmiBlitz3.ab3@12952>   MOVEA.l D0,A2
0002AE4A <AmiBlitz3.ab3@12953>   MOVEQ.l #$00,D0
0002AE4E <AmiBlitz3.ab3@12954>   MOVE.b -$1(A2,D7.W),D0
0002AE54 <AmiBlitz3.ab3@12955>   LEA ptr_parameterstore,A0
0002AE56 <AmiBlitz3.ab3@12956>   SUB.w D7,D0
0002AE58 <AmiBlitz3.ab3@12957>   SUBQ.l #1,D0
0002AE5A <AmiBlitz3.ab3@12958>   CMP.w D0,D2
0002AE5E <AmiBlitz3.ab3@12959>    BNE.b 'l10
0002AE62 <AmiBlitz3.ab3@12960>   LEA $0(A2,D7.W),A1
0002AE64 <AmiBlitz3.ab3@12961>   SUBQ.l #1,D0
0002AE66 <AmiBlitz3.ab3@12964>     MOVE.b (a1)+,d1
0002AE68 <AmiBlitz3.ab3@12965>     CMP.b (a0)+,d1
0002AE6C <AmiBlitz3.ab3@12967>     BNE.b 'l10
0002AE70 <AmiBlitz3.ab3@12968>   DBF D0,'l201
0002AE74 <AmiBlitz3.ab3@12970>   BSR.w reget
0002AE76 <AmiBlitz3.ab3@12971>   CMP.w D0,D0
0002AE78 <AmiBlitz3.ab3@12972> RTS
0002AE7A <AmiBlitz3.ab3@12985>     MOVE.l (A2),D0                                         ;find label
0002AE7E <AmiBlitz3.ab3@12986>      BEQ.b findlab_no
0002AE80 <AmiBlitz3.ab3@12987>     MOVEA.l D0,A2
0002AE82 <AmiBlitz3.ab3@12988>     MOVEQ.l #$00,D0
0002AE86 <AmiBlitz3.ab3@12989>     MOVE.b -$1(A2,D7.W),D0
0002AE88 <AmiBlitz3.ab3@12990>     SUB.l D7,D0
0002AE8A <AmiBlitz3.ab3@12991>     SUBQ.l #1,D0
0002AE8C <AmiBlitz3.ab3@12992>   CMP.w D0,D2
0002AE90 <AmiBlitz3.ab3@12993>   BNE.b 'loop
0002AE94 <AmiBlitz3.ab3@12995>   LEA $0(A2,D7.W),A1
0002AE9A <AmiBlitz3.ab3@12996>   LEA ptr_parameterstore,A0
0002AE9C <AmiBlitz3.ab3@12997>   SUBQ.l #1,D0
0002AE9E <AmiBlitz3.ab3@13001>     MOVE.b (a1)+,d1
0002AEA0 <AmiBlitz3.ab3@13002>     CMP.b (a0)+,d1
0002AEA4 <AmiBlitz3.ab3@13005>     BNE.b 'loop
0002AEA8 <AmiBlitz3.ab3@13006>   DBF D0,'loop2
0002AEAC <AmiBlitz3.ab3@13008>   BSR.w reget
0002AEAE <AmiBlitz3.ab3@13009>   CMP.w D0,D0
0002AEB0 <AmiBlitz3.ab3@13010>  RTS
0002AEB4 <AmiBlitz3.ab3@13013>   BSR.w reget
0002AEB6 <AmiBlitz3.ab3@13014>   MOVEQ.l #-$01,D1
0002AEB8 <AmiBlitz3.ab3@13015> RTS
0002AEBE <AmiBlitz3.ab3@13019>   MOVEA.l alllocals,A4
0002AEC4 <AmiBlitz3.ab3@13020>   CLR.l alllocals
0002AEC8 <AmiBlitz3.ab3@13026>     CMPA.w #$0,A4
0002AECC <AmiBlitz3.ab3@13027>      BEQ.b 'done
0002AED0 <AmiBlitz3.ab3@13028>     MOVEA.l $4(A4),A3
0002AED4 <AmiBlitz3.ab3@13030>     MOVEA.l $8(A4),A3
0002AED6 <AmiBlitz3.ab3@13032>     MOVEA.l A4,A1
0002AED8 <AmiBlitz3.ab3@13033>     MOVEA.l (A4),A4
0002AEDA <AmiBlitz3.ab3@13034>     MOVEQ.l #$0C,D0
0002AEE0 <AmiBlitz3.ab3@13035>     MOVEA.l _execbase,A6
0002AEE6 <AmiBlitz3.ab3@13037>     MOVE.l mempool,a0
0002AEEA <AmiBlitz3.ab3@13038>     JSR _FreePooled(A6)
0002AEEE <AmiBlitz3.ab3@13041>  BRA.b 'loop
0002AEF4 <AmiBlitz3.ab3@13045>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002AEFA <AmiBlitz3.ab3@13046>   CLR.l firstlocal
0002AF00 <AmiBlitz3.ab3@13047>   CLR.l sharebase
0002AF06 <AmiBlitz3.ab3@13048>   TST.l mempool2
0002AF0A <AmiBlitz3.ab3@13049>   BEQ 'done_l10
0002AF10 <AmiBlitz3.ab3@13051>   MOVEA.l _execbase,A6
0002AF16 <AmiBlitz3.ab3@13052>   MOVE.l mempool2,a0
0002AF1C <AmiBlitz3.ab3@13053>   CLR.l mempool2
0002AF20 <AmiBlitz3.ab3@13054>   JSR _DeletePool(a6)
0002AF26 <AmiBlitz3.ab3@13057>   MOVE.l _execbase,a6
0002AF2C <AmiBlitz3.ab3@13058>   MOVE.l #$10000,d0
0002AF32 <AmiBlitz3.ab3@13059>   MOVE.l #80000,d1
0002AF34 <AmiBlitz3.ab3@13060>   MOVE.l d1,d2
0002AF38 <AmiBlitz3.ab3@13061>   JSR _CreatePool(a6)
0002AF3E <AmiBlitz3.ab3@13062>   MOVE.l d0,mempool2
0002AF40 <AmiBlitz3.ab3@13064> RTS
0002AF44 <AmiBlitz3.ab3@13069>   CMPA.w #$0,A3
0002AF48 <AmiBlitz3.ab3@13070>    BEQ.w 'done
0002AF4A <AmiBlitz3.ab3@13071>   MOVEA.l A3,A1
0002AF4C <AmiBlitz3.ab3@13072>   MOVEA.l (A3),A3
0002AF4E <AmiBlitz3.ab3@13073>   MOVEQ.l #$00,D0
0002AF52 <AmiBlitz3.ab3@13074>   MOVE.b $E(A1),D0
0002AF58 <AmiBlitz3.ab3@13075>   MOVEA.l _execbase,A6
0002AF5E <AmiBlitz3.ab3@13077>   MOVE.l mempool2,a0
0002AF62 <AmiBlitz3.ab3@13078>   JSR _FreePooled(A6)
0002AF66 <AmiBlitz3.ab3@13081>  BRA.w freevars
0002AF6A <AmiBlitz3.ab3@13085>     CMPA.w #$0,A3
0002AF6E <AmiBlitz3.ab3@13086>      BEQ.w 'done
0002AF70 <AmiBlitz3.ab3@13087>     MOVEA.l A3,A1
0002AF72 <AmiBlitz3.ab3@13088>     MOVEA.l (A3),A3
0002AF74 <AmiBlitz3.ab3@13089>     MOVEQ.l #$00,D0
0002AF78 <AmiBlitz3.ab3@13090>     MOVE.b $E+4(A1),D0
0002AF7E <AmiBlitz3.ab3@13091>     MOVEA.l _execbase,A6
0002AF84 <AmiBlitz3.ab3@13092>     MOVE.l mempool2,a0
0002AF88 <AmiBlitz3.ab3@13093>     JSR _FreePooled(A6)
0002AF8C <AmiBlitz3.ab3@13094>  BRA.w 'freevarsb
0002AF8E <AmiBlitz3.ab3@13098> RTS
0002AF94 <AmiBlitz3.ab3@13104>   MOVEA.l currentlabeladdr,A0
0002AF9A <AmiBlitz3.ab3@13105>   MOVE.l a0,lastlabel
0002AF9C <AmiBlitz3.ab3@13106>   MOVEA.l (A0),A2
0002AF9E <AmiBlitz3.ab3@13107>   CLR.l (A0)
0002AFA4 <AmiBlitz3.ab3@13108>   MOVEA.l _execbase,A6
0002AFA8 <AmiBlitz3.ab3@13111>   CMPA.w #$0,A2
0002AFAC <AmiBlitz3.ab3@13112>    BEQ.w 'done
0002AFB0 <AmiBlitz3.ab3@13113>   MOVE.l $4(A2),D0
0002AFB4 <AmiBlitz3.ab3@13114>   BTST #$0,D0
0002AFB8 <AmiBlitz3.ab3@13115>    BNE.w 'skip
0002AFBA <AmiBlitz3.ab3@13116>   MOVEA.l D0,A3
0002AFBE <AmiBlitz3.ab3@13119>     CMPA.w #$0,A3
0002AFC2 <AmiBlitz3.ab3@13120>      BEQ.w 'skip
0002AFC4 <AmiBlitz3.ab3@13121>     MOVEA.l A3,A1
0002AFC6 <AmiBlitz3.ab3@13122>     MOVEA.l (A3),A3
0002AFC8 <AmiBlitz3.ab3@13123>     MOVEQ.l #$0C+2,D0     ; was #12                                 ;cancel fix
0002AFCE <AmiBlitz3.ab3@13125>     MOVE.l mempool,a0
0002AFD2 <AmiBlitz3.ab3@13126>     JSR _FreePooled(A6)
0002AFD6 <AmiBlitz3.ab3@13129>  BRA.w 'loop2
0002AFD8 <AmiBlitz3.ab3@13132>   MOVEQ.l #$00,D0
0002AFDC <AmiBlitz3.ab3@13133>   MOVE.b $12(A2),D0
0002AFDE <AmiBlitz3.ab3@13134>   MOVEA.l A2,A1
0002AFE0 <AmiBlitz3.ab3@13135>   MOVEA.l (A2),A2
0002AFE6 <AmiBlitz3.ab3@13137>   MOVE.l mempool2,a0
0002AFEA <AmiBlitz3.ab3@13141>  BRA.w 'loop
0002AFEC <AmiBlitz3.ab3@13144> RTS
0002AFF2 <AmiBlitz3.ab3@13148>   MOVEA.l firstpend,A3
0002AFF8 <AmiBlitz3.ab3@13149>   CLR.l firstpend
0002AFFE <AmiBlitz3.ab3@13150>   MOVEA.l _execbase,A6
0002B002 <AmiBlitz3.ab3@13153>     CMPA.w #$0,A3
0002B006 <AmiBlitz3.ab3@13154>      BEQ.w 'done
0002B008 <AmiBlitz3.ab3@13155>     MOVEA.l A3,A1
0002B00A <AmiBlitz3.ab3@13156>     MOVEQ.l #$08,D0
0002B00C <AmiBlitz3.ab3@13157>     MOVEA.l (A3),A3
0002B012 <AmiBlitz3.ab3@13159>     MOVE.l mempool,a0
0002B016 <AmiBlitz3.ab3@13160>     JSR _FreePooled(A6)
0002B01A <AmiBlitz3.ab3@13163>  BRA.w 'fpnd2
0002B01C <AmiBlitz3.ab3@13166> RTS
0002B022 <AmiBlitz3.ab3@13172>   MOVEA.l firstproc,A2
0002B028 <AmiBlitz3.ab3@13173>   CLR.l firstproc
0002B02E <AmiBlitz3.ab3@13174>   MOVEA.l _execbase,A6
0002B032 <AmiBlitz3.ab3@13177>     CMPA.w #$0,A2
0002B036 <AmiBlitz3.ab3@13178>      BEQ.w 'done
0002B038 <AmiBlitz3.ab3@13179>     MOVEA.l A2,A1
0002B03A <AmiBlitz3.ab3@13180>     MOVEA.l (A2),A2
0002B03C <AmiBlitz3.ab3@13181>     MOVEQ.l #$00,D0
0002B040 <AmiBlitz3.ab3@13182>     MOVE.b $20+#funcentry_extend(A1),D0    ; was 32(a1),
0002B046 <AmiBlitz3.ab3@13184>     MOVE.l mempool2,a0
0002B04A <AmiBlitz3.ab3@13185>     JSR _FreePooled(A6)
0002B04E <AmiBlitz3.ab3@13188>  BRA.w 'loop
0002B050 <AmiBlitz3.ab3@13191> RTS
0002B054 <AmiBlitz3.ab3@13196>   CMPA.w #$0,A2
0002B058 <AmiBlitz3.ab3@13197>    BEQ.w 'done
0002B05C <AmiBlitz3.ab3@13198>   MOVEA.l $4(A2),A3
0002B060 <AmiBlitz3.ab3@13199>   CMPA.w #$FF,A3
0002B064 <AmiBlitz3.ab3@13200>    BEQ.w 'noway
0002B068 <AmiBlitz3.ab3@13204>    BSR.w freevars
0002B06A <AmiBlitz3.ab3@13207>     MOVEA.l A2,A1
0002B06C <AmiBlitz3.ab3@13208>     MOVEA.l (A2),A2
0002B06E <AmiBlitz3.ab3@13209>     MOVEQ.l #$00,D0
0002B072 <AmiBlitz3.ab3@13210>     MOVE.b $A(A1),D0
0002B078 <AmiBlitz3.ab3@13211>     MOVEA.l _execbase,A6
0002B07E <AmiBlitz3.ab3@13213>     MOVE.l mempool2,a0
0002B082 <AmiBlitz3.ab3@13214>     JSR _FreePooled(A6)
0002B086 <AmiBlitz3.ab3@13217>  BRA.w freetypes
0002B088 <AmiBlitz3.ab3@13220> RTS
0002B08E <AmiBlitz3.ab3@13229>   JSR usevars
0002B094 <AmiBlitz3.ab3@13231>   CLR.w notshared
0002B09A <AmiBlitz3.ab3@13232>   CLR.w varmode           ;local mode
0002B0A0 <AmiBlitz3.ab3@13233>   MOVE.w proceduremode,D1
0002B0A4 <AmiBlitz3.ab3@13234>    BNE.w fvarlocal
0002B0AA <AmiBlitz3.ab3@13236>   LEA varbase,A2
0002B0B0 <AmiBlitz3.ab3@13238>   LEA ptr_parameterstore,a0
0002B0B4 <AmiBlitz3.ab3@13239>   CMP.b #$22,(a0)
0002B0B8 <AmiBlitz3.ab3@13240>   BNE fvarback
0002B0BA <AmiBlitz3.ab3@13241>   MOVEQ #0,d0
0002B0C0 <AmiBlitz3.ab3@13242>  JMP error
0002B0C4 <AmiBlitz3.ab3@13247>   BSR.w findvariable
0002B0C8 <AmiBlitz3.ab3@13250>   BNE.w fvaradd
0002B0CE <AmiBlitz3.ab3@13255>   MOVE.b flagmask+1,D1
0002B0D2 <AmiBlitz3.ab3@13256>   MOVE.b $7(A2),D3
0002B0D4 <AmiBlitz3.ab3@13257>   EOR.b D3,D1
0002B0D8 <AmiBlitz3.ab3@13259>   BNE 'l2
0002B0E0 <AmiBlitz3.ab3@13260>   CMP.b #2,nowdeclare
0002B0E4 <AmiBlitz3.ab3@13261>   BEQ errormsg_declaredtwice
0002B0E8 <AmiBlitz3.ab3@13262>  BRA.w fvarfound
0002B0EC <AmiBlitz3.ab3@13266>   BSR.w findlab
0002B0F0 <AmiBlitz3.ab3@13268>   BNE 'l1
0002B0F8 <AmiBlitz3.ab3@13269>   CMP.b #2,nowdeclare
0002B0FC <AmiBlitz3.ab3@13270>   BEQ errormsg_declaredtwice
0002B0FE <AmiBlitz3.ab3@13271>   CMP.w d0,d0
0002B102 <AmiBlitz3.ab3@13275>  BRA.w 'more
0002B104 <AmiBlitz3.ab3@13279>    MOVE.l a2,-(a7)
0002B10A <AmiBlitz3.ab3@13280>    LEA sharebase,a2
0002B10C <AmiBlitz3.ab3@13281>    MOVEQ #$f+4,d7
0002B110 <AmiBlitz3.ab3@13282>    BSR.w findlab
0002B114 <AmiBlitz3.ab3@13283>    BEQ 'l2x
0002B116 <AmiBlitz3.ab3@13284>    MOVE.l (a7)+,a2
0002B11A <AmiBlitz3.ab3@13285>  BRA 'cont
0002B11C <AmiBlitz3.ab3@13288>   ADDQ.l #4,a7
0002B122 <AmiBlitz3.ab3@13289>   CLR.w varmode
0002B128 <AmiBlitz3.ab3@13290>   MOVE.b flagmask+1,D1
0002B12C <AmiBlitz3.ab3@13291>   MOVE.b $7(A2),D3
0002B12E <AmiBlitz3.ab3@13292>   EOR.b D3,D1
0002B132 <AmiBlitz3.ab3@13293>   BNE vardeclareerr
0002B136 <AmiBlitz3.ab3@13294>  BRA fvarfound
0002B13C <AmiBlitz3.ab3@13298>    MOVE.w nonew,D1
0002B140 <AmiBlitz3.ab3@13299>    BNE.w nonewerr
0002B146 <AmiBlitz3.ab3@13301>    TST.b nowdeclare
0002B14A <AmiBlitz3.ab3@13302>    BNE 'l2b
0002B150 <AmiBlitz3.ab3@13303>    TST.b declare2
0002B154 <AmiBlitz3.ab3@13304>    BEQ 'l1b
0002B158 <AmiBlitz3.ab3@13305>    CMP.b #$2e,d0
0002B15C <AmiBlitz3.ab3@13306>    BEQ 'l2b
0002B160 <AmiBlitz3.ab3@13307>    CMP.b #"$",d0
0002B164 <AmiBlitz3.ab3@13308>    BEQ 'l2b
0002B168 <AmiBlitz3.ab3@13309>  BRA vardeclareerr
0002B16E <AmiBlitz3.ab3@13312>   TST.b declare
0002B172 <AmiBlitz3.ab3@13313>    BNE vardeclareerr
0002B176 <AmiBlitz3.ab3@13317>   BSR.w addvariable      ;create var
0002B17C <AmiBlitz3.ab3@13318>   NOT.w notshared        ;set added flag
0002B17E <AmiBlitz3.ab3@13319>   MOVEA.l A2,A3
0002B184 <AmiBlitz3.ab3@13320>   MOVEA.l defaulttype,A2
0002B188 <AmiBlitz3.ab3@13321>   CMP.w #$2E,D0         ;'.'
0002B18C <AmiBlitz3.ab3@13322>    BEQ.w 'clapton
0002B190 <AmiBlitz3.ab3@13323>   CMP.w #$24,D0         ;'$'
0002B194 <AmiBlitz3.ab3@13324>    BNE.w 'usedef
0002B19A <AmiBlitz3.ab3@13325>   LEA newtype_string,A2
0002B19E <AmiBlitz3.ab3@13326>    BSR.w get1bytemain
0002B1A2 <AmiBlitz3.ab3@13327>  BRA.w 'usedef
0002B1A6 <AmiBlitz3.ab3@13330>   BSR.w getparameter2
0002B1AC <AmiBlitz3.ab3@13331>   LEA newtypebase,A2
0002B1B0 <AmiBlitz3.ab3@13332>    BSR.w findtype
0002B1B4 <AmiBlitz3.ab3@13333>    BNE.w notypeerr
0002B1BA <AmiBlitz3.ab3@13336>   CMPA.l #newtype_byte,A2
0002B1BE <AmiBlitz3.ab3@13337>    BEQ.w 'byte
0002B1C4 <AmiBlitz3.ab3@13338>   MOVE.w varmode,D1
0002B1C8 <AmiBlitz3.ab3@13339>    BNE.w 'pit
0002B1CE <AmiBlitz3.ab3@13340>   ADDQ.w #1,globalvarpointer
0002B1D6 <AmiBlitz3.ab3@13343>   BCLR #$0,globalvarpointer+1
0002B1DA <AmiBlitz3.ab3@13346>   MOVE.l A2,$A(A3)           ;set type
0002B1E2 <AmiBlitz3.ab3@13347>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B1E4 <AmiBlitz3.ab3@13348>   MOVEQ.l #$04,D1
0002B1EC <AmiBlitz3.ab3@13349>   BTST #$0,flagmask+1
0002B1F0 <AmiBlitz3.ab3@13350>    BNE.w 'skip3
0002B1F8 <AmiBlitz3.ab3@13351>   BTST #$1,flagmask+1
0002B1FC <AmiBlitz3.ab3@13352>    BNE.w 'skip3
0002B204 <AmiBlitz3.ab3@13353>   CMPI.l #$100,$4(A2)
0002B208 <AmiBlitz3.ab3@13354>    BCC.w 'skip3
0002B20C <AmiBlitz3.ab3@13355>   MOVE.w $8(A2),D1
0002B212 <AmiBlitz3.ab3@13358>   TST.w varmode
0002B216 <AmiBlitz3.ab3@13359>    BEQ.w fvaradd_pit2
0002B218 <AmiBlitz3.ab3@13360>   NEG.w D1
0002B21E <AmiBlitz3.ab3@13361>   ADD.w D1,globalvarpointer
0002B226 <AmiBlitz3.ab3@13362>   MOVE.w globalvarpointer,$4(A3)
0002B228 <AmiBlitz3.ab3@13363>  RTS
0002B230 <AmiBlitz3.ab3@13366>   MOVE.w globalvarpointer,$4(A3)
0002B236 <AmiBlitz3.ab3@13367>   ADD.w D1,globalvarpointer
0002B238 <AmiBlitz3.ab3@13368> RTS
0002B23C <AmiBlitz3.ab3@13373>    BSR.w getparameter2
0002B242 <AmiBlitz3.ab3@13374>   LEA newtypebase,A2
0002B246 <AmiBlitz3.ab3@13375>    BSR.w findtype
0002B24A <AmiBlitz3.ab3@13376>    BNE.w notypeerr
0002B250 <AmiBlitz3.ab3@13379>   CMPA.l #newtype_byte,A2
0002B254 <AmiBlitz3.ab3@13380>    BEQ.w 'byte
0002B25A <AmiBlitz3.ab3@13381>   MOVE.w varmode,D1
0002B25E <AmiBlitz3.ab3@13382>    BNE.w 'pit
0002B264 <AmiBlitz3.ab3@13383>   ADDQ.w #1,globalvarpointer
0002B26C <AmiBlitz3.ab3@13386>   BCLR #$0,globalvarpointer+1
0002B270 <AmiBlitz3.ab3@13389>   MOVE.l A2,$A(A3)              ;set type
0002B278 <AmiBlitz3.ab3@13390>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002B27A <AmiBlitz3.ab3@13392>   MOVEQ.l #$04,D1
0002B282 <AmiBlitz3.ab3@13393>   BTST #$0,flagmask+1
0002B286 <AmiBlitz3.ab3@13394>    BNE.w 'skip3
0002B28E <AmiBlitz3.ab3@13395>   BTST #$1,flagmask+1
0002B292 <AmiBlitz3.ab3@13396>    BNE.w 'skip3
0002B29A <AmiBlitz3.ab3@13397>   CMPI.l #$100,$4(A2)
0002B29E <AmiBlitz3.ab3@13398>    BCC.w 'skip3
0002B2A2 <AmiBlitz3.ab3@13399>   MOVE.w $8(A2),D1
0002B2A8 <AmiBlitz3.ab3@13402>   TST.w varmode
0002B2AC <AmiBlitz3.ab3@13403> BRA.w fvaradd_pit2
0002B2B2 <AmiBlitz3.ab3@13413>   LEA firstglob,A2
0002B2B6 <AmiBlitz3.ab3@13414>    BSR.w findvariable2
0002B2BA <AmiBlitz3.ab3@13417>   BNE.w 'hendrix
0002B2C0 <AmiBlitz3.ab3@13418>   MOVE.b flagmask+1,D1
0002B2C4 <AmiBlitz3.ab3@13419>   MOVE.b $7(A2),D3
0002B2C6 <AmiBlitz3.ab3@13420>   EOR.b D3,D1
0002B2CA <AmiBlitz3.ab3@13421>    BEQ.w fvarfound
0002B2CE <AmiBlitz3.ab3@13422>    BSR.w findlab
0002B2D2 <AmiBlitz3.ab3@13423>  BRA.w 'more
0002B2DA <AmiBlitz3.ab3@13426>   MOVE.w #$FFFF,varmode           ; was -1
0002B2E0 <AmiBlitz3.ab3@13427>   MOVE.w globalvarpointer,-(A7)
0002B2EA <AmiBlitz3.ab3@13428>   MOVE.w locvaroff,globalvarpointer
0002B2F0 <AmiBlitz3.ab3@13429>   LEA firstlocal,A2
0002B2F8 <AmiBlitz3.ab3@13431>   MOVE.b #1,newvariable
0002B2FC <AmiBlitz3.ab3@13433>    BSR.w fvarback
0002B302 <AmiBlitz3.ab3@13435>   CLR.b newvariable
0002B30C <AmiBlitz3.ab3@13437>   MOVE.w globalvarpointer,locvaroff
0002B312 <AmiBlitz3.ab3@13438>   MOVE.w (A7)+,globalvarpointer
0002B314 <AmiBlitz3.ab3@13439> RTS
0002B316 <AmiBlitz3.ab3@13443>   MOVEA.l A2,A3
0002B31A <AmiBlitz3.ab3@13447>   CMP.w #$2E,D0         ;'.'
0002B31E <AmiBlitz3.ab3@13448>    BEQ.w 'skipsh
0002B322 <AmiBlitz3.ab3@13449>   CMP.w #$24,D0         ;'$'
0002B326 <AmiBlitz3.ab3@13450>    BNE.w 'skip4
0002B32E <AmiBlitz3.ab3@13451>   CMPI.l #newtype_string,$A(A3)
0002B332 <AmiBlitz3.ab3@13452>    BNE.w rongtypeerr
0002B336 <AmiBlitz3.ab3@13453>    BSR.w get1bytemain
0002B33A <AmiBlitz3.ab3@13454>  BRA.w 'skip4
0002B33E <AmiBlitz3.ab3@13457>    BSR.w getparameter2
0002B344 <AmiBlitz3.ab3@13458>   LEA newtypebase,A2
0002B348 <AmiBlitz3.ab3@13459>    BSR.w findtype
0002B34C <AmiBlitz3.ab3@13460>    BNE.w notypeerr
0002B350 <AmiBlitz3.ab3@13461>   CMPA.l $A(A3),A2
0002B354 <AmiBlitz3.ab3@13462>    BNE.w rongtypeerr
0002B35C <AmiBlitz3.ab3@13465>   BTST #$0,flagmask+1
0002B360 <AmiBlitz3.ab3@13466>    BEQ.w 'skipz
0002B366 <AmiBlitz3.ab3@13468>   BTST #$0,$7(A3)
0002B36A <AmiBlitz3.ab3@13469>    BEQ.w pointerr
0002B36E <AmiBlitz3.ab3@13472>   MOVEA.l $A(A3),A2
0002B370 <AmiBlitz3.ab3@13473> RTS
0002B372 <AmiBlitz3.ab3@13477>    TST.l D3                                                ;newtype >32kb  .w to .l
0002B376 <AmiBlitz3.ab3@13478>    BEQ.w 'done2a
0002B380 <AmiBlitz3.ab3@13480>    MOVE.l destpointer,loada
0002B384 <AmiBlitz3.ab3@13483>  BRA 'done3a
0002B388 <AmiBlitz3.ab3@13486>   CMP.w #$9,D3                                             ;_addq_arrays
0002B38C <AmiBlitz3.ab3@13487>    BCC.w 'done3a
0002B392 <AmiBlitz3.ab3@13489>   MOVE.w d3,arrayoffset
0002B396 <AmiBlitz3.ab3@13491>   ANDI.w #$7,D3
0002B398 <AmiBlitz3.ab3@13492>   LSL.w #8,D3
0002B39A <AmiBlitz3.ab3@13493>   LSL.w #1,D3
0002B3A2 <AmiBlitz3.ab3@13494>   ANDI.w #$F1FF,addqa0
0002B3A8 <AmiBlitz3.ab3@13495>   OR.w D3,addqa0
0002B3AE <AmiBlitz3.ab3@13496>   MOVE.w addqa0,D1
0002B3B2 <AmiBlitz3.ab3@13497>  BRA.w writeword
0002B3B8 <AmiBlitz3.ab3@13501>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002B3BC <AmiBlitz3.ab3@13502>   BGT longoffset
0002B3C2 <AmiBlitz3.ab3@13504>   MOVE.w D3,leaa0a0+2
0002B3C8 <AmiBlitz3.ab3@13506>   MOVE.w d3,arrayoffset
0002B3CE <AmiBlitz3.ab3@13508>   MOVE.l leaa0a0,D1
0002B3D2 <AmiBlitz3.ab3@13509>   BSR.w writelong
0002B3D4 <AmiBlitz3.ab3@13512> RTS
0002B3D8 <AmiBlitz3.ab3@13516>    MOVE.w #$d5fc,d1
0002B3DC <AmiBlitz3.ab3@13517>    BSR writeword
0002B3DE <AmiBlitz3.ab3@13518>    MOVE.l d3,d1
0002B3E2 <AmiBlitz3.ab3@13519>    BSR.w writelong
0002B3E4 <AmiBlitz3.ab3@13520> RTS
0002B3E8 <AmiBlitz3.ab3@13524>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002B3EC <AmiBlitz3.ab3@13527>    BCS.w arrchk3                                           
0002B3F2 <AmiBlitz3.ab3@13528>    JSR $20000                                              ;jsr 0
0002B3F8 <AmiBlitz3.ab3@13539>   TST.b fast
0002B3FC <AmiBlitz3.ab3@13540>   BEQ 'l1
0002B3FE <AmiBlitz3.ab3@13541>    MOVEQ #0,d1                                             ;faster arrays
0002B404 <AmiBlitz3.ab3@13542>    MOVE.w regnum,d2
0002B406 <AmiBlitz3.ab3@13543>    MOVE.w d2,d1
0002B408 <AmiBlitz3.ab3@13544>    LSL.w #8,d1
0002B40A <AmiBlitz3.ab3@13545>    LSL.w #4,d1
0002B40C <AmiBlitz3.ab3@13546>    ADD.w d2,d1
0002B412 <AmiBlitz3.ab3@13547>    OR.l #$4c2d0000,d1
0002B418 <AmiBlitz3.ab3@13548>    TST.w varmode
0002B41C <AmiBlitz3.ab3@13549>    BEQ 'l1a
0002B420 <AmiBlitz3.ab3@13550>    BCLR #16,d1
0002B424 <AmiBlitz3.ab3@13553>    BSR writelong
0002B428 <AmiBlitz3.ab3@13554>    MOVE.w $4(A7),D1
0002B42C <AmiBlitz3.ab3@13555>    BSR.w writeword
0002B432 <AmiBlitz3.ab3@13556>    MOVE.w regnum,D1
0002B434 <AmiBlitz3.ab3@13557>   SUBQ.w #1,D1
0002B436 <AmiBlitz3.ab3@13558>   LSL.w #8,D1
0002B438 <AmiBlitz3.ab3@13559>   LSL.w #1,D1
0002B43C <AmiBlitz3.ab3@13560>   ORI.w #$D080,D1
0002B442 <AmiBlitz3.ab3@13561>   OR.w regnum,D1
0002B446 <AmiBlitz3.ab3@13562>    BSR.w writeword
0002B448 <AmiBlitz3.ab3@13563>  RTS
0002B44E <AmiBlitz3.ab3@13567>   MOVE.w regnum,D2
0002B452 <AmiBlitz3.ab3@13569>   MOVE.w arrmul1(PC),D1
0002B454 <AmiBlitz3.ab3@13570>   OR.w D2,D1
0002B456 <AmiBlitz3.ab3@13571>   SUBQ.w #1,D1
0002B45A <AmiBlitz3.ab3@13572>    BSR.w writeword
0002B45E <AmiBlitz3.ab3@13573>   MOVE.w arrmul2(PC),D1
0002B460 <AmiBlitz3.ab3@13574>   OR.w D2,D1
0002B462 <AmiBlitz3.ab3@13575>   MOVE.w D2,D3
0002B464 <AmiBlitz3.ab3@13576>   SUBQ.w #1,D3
0002B466 <AmiBlitz3.ab3@13577>   LSL.w #8,D3
0002B468 <AmiBlitz3.ab3@13578>   LSL.w #1,D3
0002B46A <AmiBlitz3.ab3@13579>   OR.w D3,D1
0002B46E <AmiBlitz3.ab3@13580>    BSR.w writeword
0002B472 <AmiBlitz3.ab3@13581>   MOVE.w arrmul3(PC),D1
0002B474 <AmiBlitz3.ab3@13582>   MOVE.w D2,D3
0002B476 <AmiBlitz3.ab3@13583>   LSL.w #8,D3
0002B478 <AmiBlitz3.ab3@13584>   LSL.w #1,D3
0002B47A <AmiBlitz3.ab3@13585>   OR.w D3,D1
0002B47E <AmiBlitz3.ab3@13586>    BSR.w pokewda5s
0002B482 <AmiBlitz3.ab3@13587>   MOVE.w $4(A7),D1         ; was 4+0
0002B484 <AmiBlitz3.ab3@13588>   ADDQ.w #2,D1
0002B488 <AmiBlitz3.ab3@13589>    BSR.w writeword
0002B48C <AmiBlitz3.ab3@13591>   MOVE.w arrmul4(PC),D1
0002B48E <AmiBlitz3.ab3@13592>   MOVE.w D2,D3
0002B490 <AmiBlitz3.ab3@13593>   SUBQ.w #1,D3
0002B492 <AmiBlitz3.ab3@13594>   LSL.w #8,D3
0002B494 <AmiBlitz3.ab3@13595>   LSL.w #1,D3
0002B496 <AmiBlitz3.ab3@13596>   OR.w D3,D1
0002B49A <AmiBlitz3.ab3@13597>    BSR.w pokewda5s
0002B49E <AmiBlitz3.ab3@13598>   MOVE.w $4(A7),D1       ; was 4+0
0002B4A2 <AmiBlitz3.ab3@13599>    BSR.w writeword
0002B4A6 <AmiBlitz3.ab3@13601>   MOVE.w arrmul5(PC),D1
0002B4A8 <AmiBlitz3.ab3@13602>   OR.w D2,D1
0002B4AA <AmiBlitz3.ab3@13603>   SUBQ.w #1,D1
0002B4AE <AmiBlitz3.ab3@13604>    BSR.w writeword
0002B4B2 <AmiBlitz3.ab3@13605>   MOVE.w arrmul6(PC),D1
0002B4B4 <AmiBlitz3.ab3@13606>   OR.w D2,D1
0002B4B6 <AmiBlitz3.ab3@13607>   SUBQ.w #1,D1
0002B4BA <AmiBlitz3.ab3@13608>    BSR.w writeword
0002B4BE <AmiBlitz3.ab3@13609>   MOVE.w arrmul7(PC),D1
0002B4C0 <AmiBlitz3.ab3@13610>   OR.w D2,D1
0002B4C2 <AmiBlitz3.ab3@13611>   SUBQ.w #1,D1
0002B4C4 <AmiBlitz3.ab3@13612>   MOVE.w D2,D3
0002B4C6 <AmiBlitz3.ab3@13613>   LSL.w #8,D3
0002B4C8 <AmiBlitz3.ab3@13614>   LSL.w #1,D3
0002B4CA <AmiBlitz3.ab3@13615>   OR.w D3,D1
0002B4CE <AmiBlitz3.ab3@13616>    BSR.w writeword
0002B4D2 <AmiBlitz3.ab3@13617>   MOVE.w arrmul8(PC),D1
0002B4D4 <AmiBlitz3.ab3@13618>   MOVE.w D2,D3
0002B4D6 <AmiBlitz3.ab3@13619>   SUBQ.w #1,D3
0002B4D8 <AmiBlitz3.ab3@13620>   LSL.w #8,D3
0002B4DA <AmiBlitz3.ab3@13621>   LSL.w #1,D3
0002B4DC <AmiBlitz3.ab3@13622>   OR.w D3,D1
0002B4E0 <AmiBlitz3.ab3@13623>    BSR.w writeword
0002B4E6 <AmiBlitz3.ab3@13625>   MOVE.w regnum,D1
0002B4E8 <AmiBlitz3.ab3@13626>   SUBQ.w #1,D1
0002B4EA <AmiBlitz3.ab3@13627>   LSL.w #8,D1
0002B4EC <AmiBlitz3.ab3@13628>   LSL.w #1,D1
0002B4F0 <AmiBlitz3.ab3@13629>   ORI.w #$D080,D1
0002B4F6 <AmiBlitz3.ab3@13630>   OR.w regnum,D1
0002B4FA <AmiBlitz3.ab3@13631> BRA.w writeword
0002B4FC <AmiBlitz3.ab3@13639> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B4FE <AmiBlitz3.ab3@13640> arrmul2:   MOVE  d0,d0
0002B502 <AmiBlitz3.ab3@13641> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B506 <AmiBlitz3.ab3@13642> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B508 <AmiBlitz3.ab3@13644> arrmul5:   SWAP d0
0002B50A <AmiBlitz3.ab3@13645> arrmul6:   CLR d0
0002B50C <AmiBlitz3.ab3@13646> arrmul7:   ADD.l d0,d0
0002B50E <AmiBlitz3.ab3@13647> arrmul8:   MOVE.l (a7)+,d0
0002B512 <AmiBlitz3.ab3@13652> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B516 <AmiBlitz3.ab3@13653> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B518 <AmiBlitz3.ab3@13654> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B51E <AmiBlitz3.ab3@13672>   CLR.l lastoffset_org
0002B524 <AmiBlitz3.ab3@13673>   BTST #$1,$7(A3)
0002B528 <AmiBlitz3.ab3@13674>    BEQ.w 'notarr
0002B52E <AmiBlitz3.ab3@13675>   MOVE.w notshared,D1
0002B532 <AmiBlitz3.ab3@13676>    BNE.w noarrerr
0002B536 <AmiBlitz3.ab3@13677>    BSR.w get1bytemain
0002B53A <AmiBlitz3.ab3@13678>   CMP.w #$29,D0
0002B53E <AmiBlitz3.ab3@13679>    BNE.w 'notalist
0002B544 <AmiBlitz3.ab3@13680>   BTST #$0,$6(A3)
0002B548 <AmiBlitz3.ab3@13681>    BEQ.w nolisterr
0002B550 <AmiBlitz3.ab3@13682>   MOVE.w $4(A3),listcode1+2
0002B554 <AmiBlitz3.ab3@13683>   MOVE.l listcode1(PC),D1
0002B558 <AmiBlitz3.ab3@13684>    BSR.w pokela5s
0002B55C <AmiBlitz3.ab3@13685>   MOVE.l listcode2(PC),D1
0002B560 <AmiBlitz3.ab3@13686>    BSR.w writelong
0002B566 <AmiBlitz3.ab3@13687>   TST.b debugmode
0002B56A <AmiBlitz3.ab3@13688>    BEQ.w 'nolrerr
0002B56C <AmiBlitz3.ab3@13692>   MOVE.l A2,-(A7)
0002B570 <AmiBlitz3.ab3@13693>   MOVE.w #$C315,D1
0002B574 <AmiBlitz3.ab3@13694>    BSR.w Atokejsr
0002B576 <AmiBlitz3.ab3@13695>   MOVEA.l (A7)+,A2
0002B57A <AmiBlitz3.ab3@13698>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B57E <AmiBlitz3.ab3@13700>    BSR.w writeword
0002B582 <AmiBlitz3.ab3@13701>  BRA.w 'normalar
0002B584 <AmiBlitz3.ab3@13704>  'listoff:   Ds.w 1
0002B58A <AmiBlitz3.ab3@13707>   CLR.w 'listoff
0002B590 <AmiBlitz3.ab3@13708>   BTST #$0,$6(A3)
0002B594 <AmiBlitz3.ab3@13709>    BEQ.w 'knop
0002B59C <AmiBlitz3.ab3@13710>   MOVE.w #$0008,'listoff                            ;adjust size of one element if list.
0002B5A0 <AmiBlitz3.ab3@13713>   MOVEM.l A2-A3,-(A7)
0002B5A6 <AmiBlitz3.ab3@13714>   MOVE.w varmode,-(A7)
0002B5AA <AmiBlitz3.ab3@13715>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B5AE <AmiBlitz3.ab3@13716>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B5B0 <AmiBlitz3.ab3@13717>   MOVE.l A2,-(A7)
0002B5B6 <AmiBlitz3.ab3@13718>   MOVE.w flagmask,-(A7)
0002B5C0 <AmiBlitz3.ab3@13720>   MOVE.w oldqflag,instringon
0002B5C6 <AmiBlitz3.ab3@13721>   MOVEA.l lastsourcepos,A5
0002B5CA <AmiBlitz3.ab3@13722>    BSR.w arreval
0002B5D0 <AmiBlitz3.ab3@13723>   MOVE.w (A7)+,flagmask
0002B5D8 <AmiBlitz3.ab3@13724>   MOVE.w $8(A7),varmode
0002B5DE <AmiBlitz3.ab3@13725>   TST.b debugmode
0002B5E2 <AmiBlitz3.ab3@13726>    BEQ.w 'noszchk
0002B5E4 <AmiBlitz3.ab3@13730>   MOVEA.l (A7)+,A2
0002B5E6 <AmiBlitz3.ab3@13731>   MOVEQ.l #$04,D1
0002B5EE <AmiBlitz3.ab3@13732>   BTST #$0,flagmask+1                                      ;pointer?
0002B5F2 <AmiBlitz3.ab3@13733>    BNE.b 'domul                                          ;yes, then use 4 byte mul...
0002B5F6 <AmiBlitz3.ab3@13734>   MOVE.w $8(A2),D1
0002B5FA <AmiBlitz3.ab3@13737>   ADD.w 'listoff(PC),D1
0002B5FE <AmiBlitz3.ab3@13738>   BSR.w muld1
0002B604 <AmiBlitz3.ab3@13739>   ADDQ.w #1,regnum
0002B606 <AmiBlitz3.ab3@13742>   ADDQ.w #4,(A7)
0002B60A <AmiBlitz3.ab3@13743>   TST.w $4(A7)
0002B60E <AmiBlitz3.ab3@13744>    BEQ.w 'isglob
0002B610 <AmiBlitz3.ab3@13745>   SUBQ.w #8,(A7)                                           ;range check local array
0002B616 <AmiBlitz3.ab3@13748>   TST.b debugmode
0002B61A <AmiBlitz3.ab3@13749>    BEQ.w 'noer1
0002B620 <AmiBlitz3.ab3@13750>   MOVE.w regnum,D1
0002B622 <AmiBlitz3.ab3@13751>   SUBQ.w #1,D1
0002B624 <AmiBlitz3.ab3@13752>   LSL.w #8,D1
0002B626 <AmiBlitz3.ab3@13753>   LSL.w #1,D1
0002B62A <AmiBlitz3.ab3@13754>   OR.w zarrchk(PC),D1
0002B62E <AmiBlitz3.ab3@13755>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B630 <AmiBlitz3.ab3@13756>   MOVE.w (A7),D1
0002B634 <AmiBlitz3.ab3@13757>    BSR.w writeword
0002B638 <AmiBlitz3.ab3@13758>   MOVE.l arrchk2(PC),D1
0002B63C <AmiBlitz3.ab3@13759>    BSR.w writelong
0002B640 <AmiBlitz3.ab3@13760>   MOVE.w #$C309,D1
0002B644 <AmiBlitz3.ab3@13761>    BSR.w Atokejsr
0002B648 <AmiBlitz3.ab3@13764>   SUBQ.w #1,$2(A7)
0002B64C <AmiBlitz3.ab3@13765>    BEQ.w 'ardone
0002B650 <AmiBlitz3.ab3@13766>   CMP.w #$2C,D0
0002B654 <AmiBlitz3.ab3@13767>    BNE.w syntaxerr
0002B65A <AmiBlitz3.ab3@13768>    TST.b fast
0002B65E <AmiBlitz3.ab3@13769>    BNE 'l1
0002B662 <AmiBlitz3.ab3@13770>    BSR.w arrevalchk
0002B666 <AmiBlitz3.ab3@13771>  BRA 'l2
0002B66A <AmiBlitz3.ab3@13774>   BSR arreval
0002B672 <AmiBlitz3.ab3@13777>   MOVE.w $4(A7),varmode
0002B676 <AmiBlitz3.ab3@13778>   BSR.w makeamul
0002B67A <AmiBlitz3.ab3@13779>  BRA.w 'arloop
0002B67E <AmiBlitz3.ab3@13782>   CMP.w #$29,D0
0002B682 <AmiBlitz3.ab3@13783>    BNE.w syntaxerr
0002B688 <AmiBlitz3.ab3@13784>   SUBQ.w #1,regnum
0002B68A <AmiBlitz3.ab3@13785>   ADDQ.w #6,A7
0002B68E <AmiBlitz3.ab3@13786>   MOVEM.l (A7)+,A2-A3
0002B696 <AmiBlitz3.ab3@13787>   MOVE.w $4(A3),movea5a0+2
0002B69C <AmiBlitz3.ab3@13788>   MOVE.l movea5a0,D1
0002B6A0 <AmiBlitz3.ab3@13789>    BSR.w pokela5s
0002B6A6 <AmiBlitz3.ab3@13790>   MOVE.w regnum,D1
0002B6AA <AmiBlitz3.ab3@13791>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B6AE <AmiBlitz3.ab3@13792>    BSR.w writeword
0002B6B4 <AmiBlitz3.ab3@13793>   BTST #$0,$6(A3)
0002B6B8 <AmiBlitz3.ab3@13794>    BEQ.w 'normalar
0002B6BC <AmiBlitz3.ab3@13798>   MOVE.w listarfix(PC),D1
0002B6C0 <AmiBlitz3.ab3@13799>    BSR.w writeword
0002B6C4 <AmiBlitz3.ab3@13802>   BSR.w get1bytemain
0002B6CA <AmiBlitz3.ab3@13806>   BTST #$0,$7(A3)
0002B6CE <AmiBlitz3.ab3@13807>    BEQ.w 'noppnt
0002B6D2 <AmiBlitz3.ab3@13808>   CMP.w #$5C,D0
0002B6D6 <AmiBlitz3.ab3@13809>    BNE.w 'pmskip
0002B6DA <AmiBlitz3.ab3@13810>   MOVE.w 'pfix(PC),D1
0002B6DE <AmiBlitz3.ab3@13811>    BSR.w writeword
0002B6E2 <AmiBlitz3.ab3@13814>   MOVE.w #$8000,D2
0002B6E6 <AmiBlitz3.ab3@13815>  BRA.w 'loopml
0002B6EA <AmiBlitz3.ab3@13818>   MOVE.w #$C000,D2
0002B6EE <AmiBlitz3.ab3@13819>  BRA.w 'loopml
0002B6F0 <AmiBlitz3.ab3@13822>  'pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B6F4 <AmiBlitz3.ab3@13827>   CMP.w #$28,D0
0002B6F8 <AmiBlitz3.ab3@13828>    BEQ.w noarrerr
0002B700 <AmiBlitz3.ab3@13829>   CMPI.l #$100,$4(A2)
0002B704 <AmiBlitz3.ab3@13830>    BCS.w 'simpvar
0002B70A <AmiBlitz3.ab3@13831>   BTST #$0,$7(A3)
0002B70E <AmiBlitz3.ab3@13832>    BEQ.w 'notap
0002B712 <AmiBlitz3.ab3@13836>   CMP.w #$5C,D0
0002B716 <AmiBlitz3.ab3@13837>    BEQ.w 'notap
0002B718 <AmiBlitz3.ab3@13838>   MOVEQ.l #$00,D2
0002B71C <AmiBlitz3.ab3@13839>  BRA.w 'simpvar2
0002B720 <AmiBlitz3.ab3@13842>   MOVE.w #$8000,D2
0002B728 <AmiBlitz3.ab3@13843>   MOVE.w $4(A3),movea5a0+2
0002B72E <AmiBlitz3.ab3@13844>   MOVE.l movea5a0,D1
0002B732 <AmiBlitz3.ab3@13845>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B738 <AmiBlitz3.ab3@13847>    TST.b debugmode
0002B73C <AmiBlitz3.ab3@13848>    BEQ.w 'skip
0002B740 <AmiBlitz3.ab3@13849>    MOVE.w #$c320,D1
0002B746 <AmiBlitz3.ab3@13850>    JSR Atokejsr
0002B748 <AmiBlitz3.ab3@13854>   MOVEQ.l #$00,D3
0002B74C <AmiBlitz3.ab3@13857>   CMP.w #$5C,D0
0002B750 <AmiBlitz3.ab3@13858>    BNE.w 'done
0002B758 <AmiBlitz3.ab3@13859>   CMPI.l #$100,$4(A2)
0002B75C <AmiBlitz3.ab3@13860>    BCS.w rongtypeerr
0002B75E <AmiBlitz3.ab3@13861>   MOVE.w D2,-(A7)
0002B762 <AmiBlitz3.ab3@13862>    BSR.w getparameter2
0002B766 <AmiBlitz3.ab3@13863>    BEQ.w syntaxerr
0002B768 <AmiBlitz3.ab3@13864>   ADDQ.w #4,A2
0002B76C <AmiBlitz3.ab3@13865>    BSR.w findvariable2
0002B770 <AmiBlitz3.ab3@13866>    BNE.w noofferr
0002B772 <AmiBlitz3.ab3@13867>   MOVE.w (A7)+,D2
0002B774 <AmiBlitz3.ab3@13868>   MOVEA.l A2,A3                                             ;pointer to offset
0002B778 <AmiBlitz3.ab3@13869>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B77A <AmiBlitz3.ab3@13870>   MOVEQ #0,d1
0002B77E <AmiBlitz3.ab3@13871>   MOVE.w 4(a3),d1
0002B780 <AmiBlitz3.ab3@13872>   ADD.l d1,d3
0002B786 <AmiBlitz3.ab3@13874>   MOVE.l A3,lastoffset_org
0002B78A <AmiBlitz3.ab3@13875>   CMP.w #$5B,D0
0002B78E <AmiBlitz3.ab3@13876>    BNE.w 'realdone
0002B794 <AmiBlitz3.ab3@13877>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B798 <AmiBlitz3.ab3@13878>    BEQ.w rongtypeerr
0002B79C <AmiBlitz3.ab3@13879>    BSR.w addd0a0
0002B7A0 <AmiBlitz3.ab3@13880>   MOVEM.l A2-A3,-(A7)
0002B7A6 <AmiBlitz3.ab3@13881>   MOVE.w varmode,-(A7)
0002B7AC <AmiBlitz3.ab3@13882>   MOVE.l lastoffset_org,-(A7)
0002B7B2 <AmiBlitz3.ab3@13883>   MOVE.w pusha2,D1
0002B7B6 <AmiBlitz3.ab3@13884>   BSR.w writeword
0002B7B8 <AmiBlitz3.ab3@13885>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B7C2 <AmiBlitz3.ab3@13886>   MOVE.l destpointer,deststore
0002B7C8 <AmiBlitz3.ab3@13887>   MOVE.l leftsidetype,-(a7)
0002B7CE <AmiBlitz3.ab3@13888>   MOVE.l rightsidetype,-(a7)
0002B7D4 <AmiBlitz3.ab3@13890>   MOVE.w leftsideflagmask,-(a7)
0002B7DA <AmiBlitz3.ab3@13891>   MOVE.w rightsideflagmask,-(a7)
0002B7E0 <AmiBlitz3.ab3@13892>   CLR.l rightsidetype
0002B7E6 <AmiBlitz3.ab3@13893>   CLR.l leftsidetype
0002B7EC <AmiBlitz3.ab3@13894>   CLR.w leftsideflagmask
0002B7F2 <AmiBlitz3.ab3@13895>   CLR.w rightsideflagmask
0002B7F6 <AmiBlitz3.ab3@13896>   BSR.w eval
0002B7FC <AmiBlitz3.ab3@13897>   MOVE.w (a7)+,rightsideflagmask
0002B802 <AmiBlitz3.ab3@13898>   MOVE.w (a7)+,leftsideflagmask
0002B808 <AmiBlitz3.ab3@13899>   MOVE.l (a7)+,rightsidetype
0002B80E <AmiBlitz3.ab3@13900>   MOVE.l (a7)+,leftsidetype
0002B812 <AmiBlitz3.ab3@13901>   CMP.w #$5D,D0
0002B816 <AmiBlitz3.ab3@13902>    BNE.w syntaxerr
0002B81C <AmiBlitz3.ab3@13903>   TST.b fast                                               ;a2,-(a7) array
0002B820 <AmiBlitz3.ab3@13904>   BEQ 'loop0_l10
0002B826 <AmiBlitz3.ab3@13910>   MOVE.l destpointer,d1
0002B82C <AmiBlitz3.ab3@13911>   SUB.l deststore,d1
0002B832 <AmiBlitz3.ab3@13912>   CMP.l #4,d1
0002B836 <AmiBlitz3.ab3@13913>   BNE 'loop0_l10
0002B83C <AmiBlitz3.ab3@13914>   MOVE.l destpointer,a4
0002B842 <AmiBlitz3.ab3@13915>   MOVE.l -4(a4),-6(a4)
0002B848 <AmiBlitz3.ab3@13916>   SUBQ.l #2,destpointer
0002B84E <AmiBlitz3.ab3@13917>   CLR.l imm_addr
0002B854 <AmiBlitz3.ab3@13918>   CLR.l load_var_addr
0002B858 <AmiBlitz3.ab3@13919>  BRA 'loop0_l20
0002B85E <AmiBlitz3.ab3@13922>   MOVE.w pulla2,D1
0002B862 <AmiBlitz3.ab3@13923>    BSR.w writeword
0002B868 <AmiBlitz3.ab3@13926>   MOVE.l (A7)+,lastoffset_org
0002B86E <AmiBlitz3.ab3@13927>   MOVE.w (A7)+,varmode
0002B872 <AmiBlitz3.ab3@13928>   MOVEM.l (A7)+,A2-A3
0002B878 <AmiBlitz3.ab3@13934>   TST.w debugmode
0002B87C <AmiBlitz3.ab3@13935>    BEQ.b 'nobchk
0002B880 <AmiBlitz3.ab3@13936>   MOVE.w $8(A3),D1
0002B884 <AmiBlitz3.ab3@13937>    BEQ.b 'nobchk                                   ;no [0] checks!
0002B88A <AmiBlitz3.ab3@13941>   MOVE.w D1,brchkcode+2
0002B890 <AmiBlitz3.ab3@13942>   MOVE.w regnum,D1
0002B892 <AmiBlitz3.ab3@13943>   LSL.w #8,D1
0002B894 <AmiBlitz3.ab3@13944>   LSL.w #1,D1
0002B898 <AmiBlitz3.ab3@13945>   OR.w brchkcode0(PC),D1
0002B89E <AmiBlitz3.ab3@13946>   MOVE.w D1,brchkcode
0002B8A2 <AmiBlitz3.ab3@13947>   MOVE.l brchkcode(PC),D1
0002B8A6 <AmiBlitz3.ab3@13948>    BSR.w writelong
0002B8AA <AmiBlitz3.ab3@13949>   MOVE.l brchkcode+4(PC),D1
0002B8AE <AmiBlitz3.ab3@13950>    BSR.w writelong
0002B8B2 <AmiBlitz3.ab3@13951>   MOVE.w brchkcode+8(PC),D1
0002B8B6 <AmiBlitz3.ab3@13952>    BSR.w writeword
0002B8B8 <AmiBlitz3.ab3@13955>   MOVEQ.l #$04,D1
0002B8BE <AmiBlitz3.ab3@13956>   BTST #$0,$7(A3)
0002B8C2 <AmiBlitz3.ab3@13957>    BNE.w 'dothemul
0002B8C6 <AmiBlitz3.ab3@13958>   MOVE.w $8(A2),D1
0002B8CA <AmiBlitz3.ab3@13961>   BSR.w muld1
0002B8D0 <AmiBlitz3.ab3@13962>   MOVE.w addrega2,D1
0002B8D6 <AmiBlitz3.ab3@13963>   OR.w regnum,D1
0002B8DA <AmiBlitz3.ab3@13964>    OR.w #$100,d1                                           ;>32kb types
0002B8DE <AmiBlitz3.ab3@13965>    BSR.w writeword
0002B8E2 <AmiBlitz3.ab3@13966>    BSR.w get1bytemain
0002B8E4 <AmiBlitz3.ab3@13967>   MOVEQ.l #$00,D3
0002B8E8 <AmiBlitz3.ab3@13968>   MOVE.w #$8000,D2
0002B8EE <AmiBlitz3.ab3@13971>   BTST #$0,$7(A3)
0002B8F2 <AmiBlitz3.ab3@13972>    BNE.w 'pointer
0002B8F6 <AmiBlitz3.ab3@13973>  BRA.w 'loop0
0002B8FA <AmiBlitz3.ab3@13976>  CMP.w #$5C,D0
0002B8FE <AmiBlitz3.ab3@13977>    BNE.w 'done3
0002B900 <AmiBlitz3.ab3@13978>   TST.w D3
0002B904 <AmiBlitz3.ab3@13979>    BNE.w 'pskip
0002B90A <AmiBlitz3.ab3@13980>   MOVE.w movea0,D1
0002B90E <AmiBlitz3.ab3@13981>    BSR.w writeword
0002B912 <AmiBlitz3.ab3@13982>  BRA.w 'pmore
0002B918 <AmiBlitz3.ab3@13985>   MOVE.w D3,movea0a0+2
0002B91E <AmiBlitz3.ab3@13986>   MOVE.l movea0a0,D1
0002B922 <AmiBlitz3.ab3@13987>    BSR.w writelong
0002B928 <AmiBlitz3.ab3@13990>   BTST #$2,$7(A3)
0002B92C <AmiBlitz3.ab3@13991>    BEQ.w 'loopml
0002B932 <AmiBlitz3.ab3@13992>   MOVE.l adda0a0,D1
0002B936 <AmiBlitz3.ab3@13993>    BSR.w writelong
0002B93A <AmiBlitz3.ab3@13994>  BRA.w 'loopml
0002B93E <AmiBlitz3.ab3@13997>   BSET #$E,D2
0002B944 <AmiBlitz3.ab3@13998>   BTST #$2,$7(A3)
0002B948 <AmiBlitz3.ab3@13999>    BNE.w 'done
0002B94C <AmiBlitz3.ab3@14000>   BSET #$D,D2
0002B954 <AmiBlitz3.ab3@14003>   CMPI.l #$100,$4(A2)
0002B958 <AmiBlitz3.ab3@14004>    BCC.w 'done2
0002B95C <AmiBlitz3.ab3@14005>   MOVE.b $7(A2),D2
0002B960 <AmiBlitz3.ab3@14008>  BRA.w addd0a0
0002B964 <AmiBlitz3.ab3@14011>   MOVE.w $6(A2),D2
0002B968 <AmiBlitz3.ab3@14014>   MOVE.w $4(A3),D3
0002B96E <AmiBlitz3.ab3@14015>   BTST #$0,$7(A3)
0002B972 <AmiBlitz3.ab3@14016>    BEQ.w 'nopoint
0002B976 <AmiBlitz3.ab3@14017>   BSET #$E,D2
0002B978 <AmiBlitz3.ab3@14020> RTS
0002B97C <AmiBlitz3.ab3@14024> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B980 <AmiBlitz3.ab3@14025> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B982 <AmiBlitz3.ab3@14026>              Dc.b $65,$04                                  ;BCS.B   brchkcode_ok
0002B984 <AmiBlitz3.ab3@14027>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B986 <AmiBlitz3.ab3@14028>              Dc.b $4E,$40                                  ;TRAP    #00
0002B98C <AmiBlitz3.ab3@14036>   TST.w varmode
0002B990 <AmiBlitz3.ab3@14037>    BEQ.w writeword
0002B994 <AmiBlitz3.ab3@14038>   BCLR #$0,D1
0002B998 <AmiBlitz3.ab3@14039> BRA.w writeword
0002B99E <AmiBlitz3.ab3@14042>   TST.w varmode
0002B9A2 <AmiBlitz3.ab3@14043>    BEQ.w writeword
0002B9A6 <AmiBlitz3.ab3@14044>   BCLR #$9,D1
0002B9AA <AmiBlitz3.ab3@14045> BRA.w writeword
0002B9B0 <AmiBlitz3.ab3@14048>   TST.w proceduremode
0002B9B4 <AmiBlitz3.ab3@14049>    BEQ.w writelong
0002B9B8 <AmiBlitz3.ab3@14050>   BCLR #$19,D1
0002B9BC <AmiBlitz3.ab3@14051> BRA.w writelong
0002B9C2 <AmiBlitz3.ab3@14054>   TST.w varmode
0002B9C6 <AmiBlitz3.ab3@14055>   BEQ.w writelong
0002B9CA <AmiBlitz3.ab3@14056>   BCLR #$10,D1
0002B9D0 <AmiBlitz3.ab3@14064>   ADDQ.l #1,destpointer                                   ; this is a copy of the writewordcode
0002B9D8 <AmiBlitz3.ab3@14065>   BCLR #$0,destpointer+3
0002B9DE <AmiBlitz3.ab3@14066>   MOVEA.l destpointer,A4
0002B9E4 <AmiBlitz3.ab3@14067>   CMPA.l destbufferend,A4
0002B9E8 <AmiBlitz3.ab3@14068>    BCC.w 'overa
0002B9EA <AmiBlitz3.ab3@14069>   MOVE.l D1,(A4)+
0002B9F0 <AmiBlitz3.ab3@14072>   MOVE.l A4,destpointer
0002B9F4 <AmiBlitz3.ab3@14073>   CMPA.l bigpc(PC),A4
0002B9F8 <AmiBlitz3.ab3@14074>    BHI.w 'nbpa
0002B9FA <AmiBlitz3.ab3@14075>  RTS
0002BA00 <AmiBlitz3.ab3@14078>   TST.w cfetchmode                                         ; to complete the subroutine
0002BA04 <AmiBlitz3.ab3@14079>   BNE.w 'nbp2a                                             ;
0002BA0A <AmiBlitz3.ab3@14080>   MOVE.l A4,bigpc                                          ;
0002BA0C <AmiBlitz3.ab3@14083>  RTS
0002BA14 <AmiBlitz3.ab3@14086>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BA1A <AmiBlitz3.ab3@14087>   CLR.b fast
0002BA20 <AmiBlitz3.ab3@14088>   CLR.b fpu
0002BA26 <AmiBlitz3.ab3@14089>   CLR.b iee                                                ; in writeword this is #2
0002BA28 <AmiBlitz3.ab3@14090>   ADDQ.w #4,A4
0002BA2C <AmiBlitz3.ab3@14091> BRA.w 'msa
0002BA32 <AmiBlitz3.ab3@14110>   ADDQ.l #1,destpointer
0002BA3A <AmiBlitz3.ab3@14111>   BCLR #$0,destpointer+3
0002BA40 <AmiBlitz3.ab3@14112>   MOVEA.l destpointer,A4
0002BA46 <AmiBlitz3.ab3@14113>   CMPA.l destbufferend,A4
0002BA4A <AmiBlitz3.ab3@14114>    BCC.w 'over
0002BA4C <AmiBlitz3.ab3@14115>   MOVE.w D1,(A4)+
0002BA52 <AmiBlitz3.ab3@14118>   MOVE.l A4,destpointer
0002BA56 <AmiBlitz3.ab3@14119>   CMPA.l bigpc(PC),A4
0002BA5A <AmiBlitz3.ab3@14120>    BHI.w 'nbp
0002BA5C <AmiBlitz3.ab3@14121>  RTS
0002BA62 <AmiBlitz3.ab3@14124>   TST.w cfetchmode
0002BA66 <AmiBlitz3.ab3@14125>   BNE.w 'nbp2
0002BA6C <AmiBlitz3.ab3@14126>   MOVE.l A4,bigpc
0002BA6E <AmiBlitz3.ab3@14129>  RTS
0002BA76 <AmiBlitz3.ab3@14132>   MOVE.w #$FFFF,dontwrite_nomemleft                                  ;#-1 org source
0002BA78 <AmiBlitz3.ab3@14133>   ADDQ.w #2,A4
0002BA7E <AmiBlitz3.ab3@14134>   CLR.b fast
0002BA84 <AmiBlitz3.ab3@14135>   CLR.b fpu
0002BA8A <AmiBlitz3.ab3@14136>   CLR.b iee
0002BA8E <AmiBlitz3.ab3@14137> BRA.w 'ms
0002BA94 <AmiBlitz3.ab3@14141>   MOVEA.l destpointer,A4
0002BA9A <AmiBlitz3.ab3@14142>   CMPA.l destbufferend,A4
0002BA9E <AmiBlitz3.ab3@14143>    BCC.w 'over
0002BAA0 <AmiBlitz3.ab3@14144>   MOVE.b D1,(A4)+
0002BAA6 <AmiBlitz3.ab3@14147>   MOVE.l A4,destpointer
0002BAAA <AmiBlitz3.ab3@14148>   CMPA.l bigpc(PC),A4
0002BAAE <AmiBlitz3.ab3@14149>    BHI.w 'nbp
0002BAB0 <AmiBlitz3.ab3@14150>  RTS
0002BAB6 <AmiBlitz3.ab3@14153>   TST.w cfetchmode
0002BABA <AmiBlitz3.ab3@14154>    BNE.w 'nbp2
0002BAC0 <AmiBlitz3.ab3@14155>   MOVE.l A4,bigpc
0002BAC2 <AmiBlitz3.ab3@14158>  RTS
0002BACA <AmiBlitz3.ab3@14161>   MOVE.w #-1,dontwrite_nomemleft
0002BACC <AmiBlitz3.ab3@14162>   ADDQ.w #1,A4
0002BAD2 <AmiBlitz3.ab3@14163>   CLR.b fast
0002BAD8 <AmiBlitz3.ab3@14164>   CLR.b fpu
0002BADE <AmiBlitz3.ab3@14165>   CLR.b iee
0002BAE2 <AmiBlitz3.ab3@14166> BRA.w 'ms
0002BAE6 <AmiBlitz3.ab3@14169> bigpc:   Ds.l 1
0002BAE8 <AmiBlitz3.ab3@14173>   MOVE.w (A0)+,D1
0002BAEC <AmiBlitz3.ab3@14174>   BSR.w writeword
0002BAEE <AmiBlitz3.ab3@14177>     CMPA.l A1,A0
0002BAF2 <AmiBlitz3.ab3@14178>     BCC.w 'done
0002BAF4 <AmiBlitz3.ab3@14179>       MOVE.w (A0)+,D1
0002BAF8 <AmiBlitz3.ab3@14180>       BSR.w writeword
0002BAFC <AmiBlitz3.ab3@14181>  BRA.w 'loop
0002BAFE <AmiBlitz3.ab3@14184> RTS
0002BB00 <AmiBlitz3.ab3@14188>   MOVE.w (A0)+,D1
0002BB04 <AmiBlitz3.ab3@14189>   BSR.w writeword
0002BB06 <AmiBlitz3.ab3@14190>   CMPA.l A1,A0
0002BB0A <AmiBlitz3.ab3@14191>   BCS.w pokecode2
0002BB0C <AmiBlitz3.ab3@14192> RTS
0002BB12 <AmiBlitz3.ab3@14199>   TST.b iniffcommand
0002BB16 <AmiBlitz3.ab3@14200>   BEQ 'l1
0002BB1A <AmiBlitz3.ab3@14201>     MOVE.w #$4880,D1
0002BB20 <AmiBlitz3.ab3@14202>     OR.w regnum,D1
0002BB24 <AmiBlitz3.ab3@14203>     BSR writeword
0002BB26 <AmiBlitz3.ab3@14207> RTS
0002BB2A <AmiBlitz3.ab3@14213>   BSR.w convert_byte_to_word
0002BB30 <AmiBlitz3.ab3@14217>   TST.b iee
0002BB34 <AmiBlitz3.ab3@14218>   BEQ 'old
0002BB38 <AmiBlitz3.ab3@14219>   CMP.b #5,d2
0002BB3C <AmiBlitz3.ab3@14220>   BEQ wtof
0002BB40 <AmiBlitz3.ab3@14224>   MOVE.w #$48C0,D1
0002BB46 <AmiBlitz3.ab3@14225>   OR.w regnum,D1
0002BB4A <AmiBlitz3.ab3@14226> BRA.w writeword
0002BB4C <AmiBlitz3.ab3@14230>   MOVEQ #0,d0
0002BB52 <AmiBlitz3.ab3@14231>   MOVE.w regnum,d0
0002BB54 <AmiBlitz3.ab3@14232>   ASL.l #7,d0
0002BB5A <AmiBlitz3.ab3@14233>   MOVE.l #$f2005000,d1
0002BB5C <AmiBlitz3.ab3@14234>   OR.l d0,d1
0002BB5E <AmiBlitz3.ab3@14235>   ASL.l #1,d0
0002BB60 <AmiBlitz3.ab3@14236>   ASL.l #8,d0
0002BB62 <AmiBlitz3.ab3@14237>   OR.l d0,d1
0002BB66 <AmiBlitz3.ab3@14238> BRA writelong
0002BB6A <AmiBlitz3.ab3@14242>   BSR.w convert_byte_to_word
0002BB6E <AmiBlitz3.ab3@14245>   MOVE.w #$4840,D1
0002BB74 <AmiBlitz3.ab3@14246>   OR.w regnum,D1
0002BB78 <AmiBlitz3.ab3@14247>    BSR.w writeword
0002BB7C <AmiBlitz3.ab3@14248>   MOVE.w #$4240,D1
0002BB82 <AmiBlitz3.ab3@14249>   OR.w regnum,D1
0002BB86 <AmiBlitz3.ab3@14250> BRA.w writeword
0002BB8A <AmiBlitz3.ab3@14254>   CMP.w #$ffdc,d1
0002BB8E <AmiBlitz3.ab3@14255>   BNE 'negfpu
0002BB90 <AmiBlitz3.ab3@14256>   MOVEQ #0,d0
0002BB96 <AmiBlitz3.ab3@14257>   MOVE.w regnum,d0
0002BB98 <AmiBlitz3.ab3@14258>   ASL.l #7,d0
0002BB9E <AmiBlitz3.ab3@14259>   MOVE.l #$f2004000,d1
0002BBA0 <AmiBlitz3.ab3@14260>   OR.l d0,d1
0002BBA2 <AmiBlitz3.ab3@14261>   ASL.l #1,d0
0002BBA4 <AmiBlitz3.ab3@14262>   ASL.l #8,d0
0002BBA6 <AmiBlitz3.ab3@14263>   OR.l d0,d1
0002BBAA <AmiBlitz3.ab3@14264>  BRA writelong
0002BBAC <AmiBlitz3.ab3@14267>   MOVEQ #0,d1
0002BBB2 <AmiBlitz3.ab3@14268>   MOVE.w regnum,d1                                         ;fpu neg
0002BBB4 <AmiBlitz3.ab3@14269>   ASL.l #7,d1
0002BBBA <AmiBlitz3.ab3@14270>   OR.l #$f200001a,d1
0002BBBC <AmiBlitz3.ab3@14271>   MOVE.l d0,-(a7)
0002BBBE <AmiBlitz3.ab3@14272>   MOVEQ #0,d0
0002BBC4 <AmiBlitz3.ab3@14273>   MOVE.w regnum,d0
0002BBC6 <AmiBlitz3.ab3@14274>   ASL.l #8,d0
0002BBC8 <AmiBlitz3.ab3@14275>   ASL.l #2,d0
0002BBCA <AmiBlitz3.ab3@14276>   OR.l d0,d1
0002BBCC <AmiBlitz3.ab3@14277>   MOVE.l (a7)+,d0
0002BBD0 <AmiBlitz3.ab3@14278> BRA writelong
0002BBD6 <AmiBlitz3.ab3@14284>    TST.b iee
0002BBDA <AmiBlitz3.ab3@14285>    BNE wtof
0002BBDE <AmiBlitz3.ab3@14287>    BSR.w convert_byte_to_long
0002BBE2 <AmiBlitz3.ab3@14290>    MOVE.w #$FFDC,D1
0002BBE8 <AmiBlitz3.ab3@14294>    TST.b iee
0002BBEC <AmiBlitz3.ab3@14295>    BNE ltof
0002BBF2 <AmiBlitz3.ab3@14297>    MOVE.w D1,libjsr+2
0002BBF6 <AmiBlitz3.ab3@14298>    BSR.w savereg
0002BBF8 <AmiBlitz3.ab3@14299>   MOVE.l D4,D1
0002BBFC <AmiBlitz3.ab3@14300>    BSR.w pokemovem
0002BC00 <AmiBlitz3.ab3@14301>   MOVE.w #$C900,D1      ; #getffpbase,
0002BC04 <AmiBlitz3.ab3@14302>    BSR.w Atokejsr
0002BC08 <AmiBlitz3.ab3@14303>    BSR.w ritetod0
0002BC0E <AmiBlitz3.ab3@14304>   MOVE.l libjsr,D1
0002BC12 <AmiBlitz3.ab3@14305>    BSR.w writelong
0002BC16 <AmiBlitz3.ab3@14306>    BSR.w ritefromd0
0002BC18 <AmiBlitz3.ab3@14307>   MOVE.l D5,D1
0002BC1C <AmiBlitz3.ab3@14308> BRA.w pokemovem
0002BC1E <AmiBlitz3.ab3@14310> RTS ; dead old code
0002BC22 <AmiBlitz3.ab3@14313>   MOVE.w #$C317,D1     ;#wtobover
0002BC28 <AmiBlitz3.ab3@14315>   TST.b typecheck
0002BC2C <AmiBlitz3.ab3@14316>   BEQ 'l1
0002BC32 <AmiBlitz3.ab3@14317>    TST.b notypecheck
0002BC36 <AmiBlitz3.ab3@14318>    BNE 'l1
0002BC3C <AmiBlitz3.ab3@14319>    TST.l lasttoken
0002BC42 <AmiBlitz3.ab3@14329>   TST.b debugmode
0002BC46 <AmiBlitz3.ab3@14330>    BEQ.w 'skip
0002BC4E <AmiBlitz3.ab3@14331>   BTST #$7,overflowcheck      ;;*** was 7! overflow checking?
0002BC52 <AmiBlitz3.ab3@14332>    BEQ.w 'skip
0002BC58 <AmiBlitz3.ab3@14334>   TST.w cfetchmode
0002BC5C <AmiBlitz3.ab3@14335>    BNE.w 'skip
0002BC62 <AmiBlitz3.ab3@14337>   TST.w regnum
0002BC66 <AmiBlitz3.ab3@14338>    BEQ.w 'isok
0002BC68 <AmiBlitz3.ab3@14339>   MOVE.w D1,-(A7)
0002BC6C <AmiBlitz3.ab3@14340>   MOVE.w 'code1(PC),D1
0002BC70 <AmiBlitz3.ab3@14341>    BSR.w writeword
0002BC76 <AmiBlitz3.ab3@14342>   MOVE.w regnum,D1
0002BC7A <AmiBlitz3.ab3@14343>   OR.w 'code3(PC),D1
0002BC7E <AmiBlitz3.ab3@14344>    BSR.w writeword
0002BC80 <AmiBlitz3.ab3@14345>   MOVE.w (A7)+,D1
0002BC84 <AmiBlitz3.ab3@14346>    BSR.w 'isok
0002BC88 <AmiBlitz3.ab3@14347>   MOVE.w 'code2(PC),D1
0002BC8C <AmiBlitz3.ab3@14348>  BRA.w writeword
0002BC90 <AmiBlitz3.ab3@14351>   MOVEM.l D0-D7/A0-A6,-(A7)
0002BC94 <AmiBlitz3.ab3@14352>    BSR.w Atokejsr
0002BC98 <AmiBlitz3.ab3@14353>   MOVEM.l (A7)+,D0-D7/A0-A6
0002BC9A <AmiBlitz3.ab3@14356>  RTS
0002BC9C <AmiBlitz3.ab3@14359>   MOVE.l D0,-(A7)
0002BC9E <AmiBlitz3.ab3@14362>   MOVE.l (A7)+,D0
0002BCA0 <AmiBlitz3.ab3@14365>   MOVE.l D0,D0
0002BCA4 <AmiBlitz3.ab3@14370>   BSR.w convert_word_to_long
0002BCAA <AmiBlitz3.ab3@14372>   TST.b iee
0002BCAE <AmiBlitz3.ab3@14373>   BEQ 'old
0002BCB2 <AmiBlitz3.ab3@14374>   CMP.b #5,d2
0002BCB6 <AmiBlitz3.ab3@14375>   BNE 'old
0002BCB8 <AmiBlitz3.ab3@14376>  RTS
0002BCBC <AmiBlitz3.ab3@14380> BRA.w bytetof2
0002BCC0 <AmiBlitz3.ab3@14383>   MOVE.w #$C316,D1      ; #ltobover
0002BCC6 <AmiBlitz3.ab3@14385>   TST.b typecheck
0002BCCA <AmiBlitz3.ab3@14386>   BEQ 'l1
0002BCD0 <AmiBlitz3.ab3@14387>   TST.b peekaddrsize
0002BCD4 <AmiBlitz3.ab3@14388>   BNE 'l1
0002BCDA <AmiBlitz3.ab3@14389>   TST.b notypecheck
0002BCDE <AmiBlitz3.ab3@14390>   BNE 'l1
0002BCE4 <AmiBlitz3.ab3@14391>   TST.l lasttoken
0002BCE8 <AmiBlitz3.ab3@14398> BRA.w overchk
0002BCEC <AmiBlitz3.ab3@14401>   MOVE.w #$C318,D1      ; #ltowover,
0002BCF2 <AmiBlitz3.ab3@14403>   TST.b typecheck
0002BCF6 <AmiBlitz3.ab3@14404>   BEQ 'l1
0002BCFC <AmiBlitz3.ab3@14405>   TST.b peekaddrsize
0002BD00 <AmiBlitz3.ab3@14406>   BNE 'l1
0002BD06 <AmiBlitz3.ab3@14407>   TST.b notypecheck
0002BD0A <AmiBlitz3.ab3@14408>   BNE 'l1
0002BD10 <AmiBlitz3.ab3@14409>   TST.l lasttoken
0002BD14 <AmiBlitz3.ab3@14416> BRA.w overchk
0002BD18 <AmiBlitz3.ab3@14419>   MOVE.w #$C318,D1      ;#ltowover,
0002BD1E <AmiBlitz3.ab3@14421>   TST.b typecheck
0002BD22 <AmiBlitz3.ab3@14422>   BEQ 'l1
0002BD28 <AmiBlitz3.ab3@14423>   TST.b notypecheck
0002BD2C <AmiBlitz3.ab3@14424>   BNE 'l1
0002BD32 <AmiBlitz3.ab3@14425>   TST.l lasttoken
0002BD36 <AmiBlitz3.ab3@14432>   BSR.w overchk
0002BD3A <AmiBlitz3.ab3@14433> BRA.w convert_word_to_quick
0002BD3E <AmiBlitz3.ab3@14436> BRA.w bytetof2
0002BD40 <AmiBlitz3.ab3@14438> RTS ; dead old code
0002BD44 <AmiBlitz3.ab3@14441>   MOVE.w #$C319,D1         ; #qtobover,
0002BD4A <AmiBlitz3.ab3@14443>   TST.b typecheck
0002BD4E <AmiBlitz3.ab3@14444>   BEQ 'l1
0002BD54 <AmiBlitz3.ab3@14445>   TST.b notypecheck
0002BD58 <AmiBlitz3.ab3@14446>   BNE 'l1
0002BD5E <AmiBlitz3.ab3@14447>   TST.l lasttoken
0002BD62 <AmiBlitz3.ab3@14454>   BSR.w overchk
0002BD66 <AmiBlitz3.ab3@14457>   MOVE.w #$4240,D1
0002BD6C <AmiBlitz3.ab3@14458>   OR.w regnum,D1
0002BD70 <AmiBlitz3.ab3@14459>   BSR.w writeword
0002BD74 <AmiBlitz3.ab3@14460>   MOVE.w #$4840,D1
0002BD7A <AmiBlitz3.ab3@14461>   OR.w regnum,D1
0002BD7E <AmiBlitz3.ab3@14462> BRA.w writeword
0002BD82 <AmiBlitz3.ab3@14465> BRA.w quicktob2
0002BD86 <AmiBlitz3.ab3@14468>   BSR.w quicktob2
0002BD8A <AmiBlitz3.ab3@14469> BRA.w convert_word_to_long
0002BD8C <AmiBlitz3.ab3@14474>   MOVEQ #0,d0
0002BD92 <AmiBlitz3.ab3@14475>   MOVE.w regnum,d0
0002BD94 <AmiBlitz3.ab3@14476>   ASL.l #7,d0
0002BD9A <AmiBlitz3.ab3@14477>   MOVE.l #$f2004000,d1
0002BD9C <AmiBlitz3.ab3@14478>   OR.l d0,d1
0002BD9E <AmiBlitz3.ab3@14479>   ASL.l #1,d0
0002BDA0 <AmiBlitz3.ab3@14480>   ASL.l #8,d0
0002BDA2 <AmiBlitz3.ab3@14481>   OR.l d0,d1
0002BDA6 <AmiBlitz3.ab3@14482>   BSR writelong
0002BDAC <AmiBlitz3.ab3@14483>   MOVE.w regnum,d0
0002BDAE <AmiBlitz3.ab3@14484>   ASL.l #7,d0
0002BDB4 <AmiBlitz3.ab3@14485>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002BDB6 <AmiBlitz3.ab3@14486>   OR.w d0,d1
0002BDBA <AmiBlitz3.ab3@14487>   BSR writelong
0002BDC0 <AmiBlitz3.ab3@14488>   MOVE.l #$37800000,d1
0002BDC4 <AmiBlitz3.ab3@14489>   BSR writelong
0002BDC6 <AmiBlitz3.ab3@14490> RTS
0002BDCC <AmiBlitz3.ab3@14497>   TST.b iee
0002BDD0 <AmiBlitz3.ab3@14498>   BNE qtof
0002BDD4 <AmiBlitz3.ab3@14500>   MOVE.w #$D300,D1       ; #qutofl,
0002BDD6 <AmiBlitz3.ab3@14503>   MOVE.w D1,-(A7)
0002BDDA <AmiBlitz3.ab3@14504>    BSR.w savereg
0002BDDC <AmiBlitz3.ab3@14505>   MOVE.l D4,D1
0002BDE0 <AmiBlitz3.ab3@14506>    BSR.w pokemovem
0002BDE4 <AmiBlitz3.ab3@14508>    BSR.w ritetod0
0002BDE6 <AmiBlitz3.ab3@14509>   MOVE.w (A7)+,D1
0002BDEA <AmiBlitz3.ab3@14510>    BSR.w Atokejsr
0002BDEE <AmiBlitz3.ab3@14512>    BSR.w ritefromd0
0002BDF0 <AmiBlitz3.ab3@14513>   MOVE.l D5,D1
0002BDF4 <AmiBlitz3.ab3@14514> BRA.w pokemovem
0002BDF6 <AmiBlitz3.ab3@14516> RTS ; dead old code
0002BDFC <AmiBlitz3.ab3@14520>   TST.b typecheck
0002BE00 <AmiBlitz3.ab3@14521>   BEQ 'l1
0002BE06 <AmiBlitz3.ab3@14522>   TST.b notypecheck
0002BE0A <AmiBlitz3.ab3@14523>   BNE 'l1
0002BE10 <AmiBlitz3.ab3@14524>   TST.l lasttoken
0002BE16 <AmiBlitz3.ab3@14530>   TST.b iee
0002BE1A <AmiBlitz3.ab3@14531>   BNE ftol
0002BE1E <AmiBlitz3.ab3@14533>   MOVE.w #$C31A,D1       ; #ftobover
0002BE22 <AmiBlitz3.ab3@14534>   BSR.w overchk
0002BE26 <AmiBlitz3.ab3@14536>   BSR.w floattolong2
0002BE2A <AmiBlitz3.ab3@14537> BRA.w convert_long_to_byte
0002BE2C <AmiBlitz3.ab3@14539> RTS ; dead old code
0002BE32 <AmiBlitz3.ab3@14543>   TST.b typecheck
0002BE36 <AmiBlitz3.ab3@14544>   BEQ 'l1
0002BE3C <AmiBlitz3.ab3@14545>   TST.b notypecheck
0002BE40 <AmiBlitz3.ab3@14546>   BNE 'l1
0002BE46 <AmiBlitz3.ab3@14547>   TST.l lasttoken
0002BE4C <AmiBlitz3.ab3@14553>   TST.b iee
0002BE50 <AmiBlitz3.ab3@14554>   BNE ftol
0002BE54 <AmiBlitz3.ab3@14556>   MOVE.w #$C31B,D1         ; #ftowover
0002BE58 <AmiBlitz3.ab3@14557>   BSR.w overchk
0002BE5C <AmiBlitz3.ab3@14559>   BSR.w floattolong2
0002BE60 <AmiBlitz3.ab3@14560> BRA.w convert_long_to_word
0002BE62 <AmiBlitz3.ab3@14562> RTS  ; dead old code
0002BE68 <AmiBlitz3.ab3@14566>   TST.b iee
0002BE6C <AmiBlitz3.ab3@14567>   BNE ftol
0002BE70 <AmiBlitz3.ab3@14569>   MOVE.w #$C31C,D1     ; #ftolover,
0002BE74 <AmiBlitz3.ab3@14570>   BSR.w overchk
0002BE78 <AmiBlitz3.ab3@14573>   MOVE.w #$FFE2,D1     ; #-30,
0002BE7C <AmiBlitz3.ab3@14574> BRA.w fdo2
0002BE7E <AmiBlitz3.ab3@14578>   MOVE.l d0,-(a7)
0002BE80 <AmiBlitz3.ab3@14579>   MOVEQ #0,d0
0002BE86 <AmiBlitz3.ab3@14580>   MOVE.w regnum,d0
0002BE88 <AmiBlitz3.ab3@14581>   ASL.l #7,d0
0002BE8E <AmiBlitz3.ab3@14582>   MOVE.l #$f2006000,d1
0002BE90 <AmiBlitz3.ab3@14583>   OR.l d0,d1
0002BE92 <AmiBlitz3.ab3@14584>   ASL.l #1,d0
0002BE94 <AmiBlitz3.ab3@14585>   ASL.l #8,d0
0002BE96 <AmiBlitz3.ab3@14586>   OR.l d0,d1
0002BE98 <AmiBlitz3.ab3@14587>   MOVE.l (a7)+,d0
0002BE9C <AmiBlitz3.ab3@14588> BRA writelong
0002BE9E <AmiBlitz3.ab3@14592>   MOVE.l d0,-(a7)
0002BEA0 <AmiBlitz3.ab3@14593>   MOVEQ #0,d0
0002BEA6 <AmiBlitz3.ab3@14594>   MOVE.l #$f23c4023,d1
0002BEAC <AmiBlitz3.ab3@14595>   MOVE.w regnum,d0
0002BEAE <AmiBlitz3.ab3@14596>   ASL.l #7,d0
0002BEB0 <AmiBlitz3.ab3@14597>   OR.l d0,d1
0002BEB4 <AmiBlitz3.ab3@14598>   BSR writelong
0002BEBA <AmiBlitz3.ab3@14599>   MOVE.l #$00010000,d1
0002BEBE <AmiBlitz3.ab3@14600>   BSR writelong
0002BEC4 <AmiBlitz3.ab3@14601>   MOVE.w regnum,d0
0002BEC6 <AmiBlitz3.ab3@14602>   ASL.l #7,d0
0002BECC <AmiBlitz3.ab3@14603>   MOVE.l #$f2006000,d1
0002BECE <AmiBlitz3.ab3@14604>   OR.l d0,d1
0002BED0 <AmiBlitz3.ab3@14605>   ASL.l #1,d0
0002BED2 <AmiBlitz3.ab3@14606>   ASL.l #8,d0
0002BED4 <AmiBlitz3.ab3@14607>   OR.l d0,d1
0002BED8 <AmiBlitz3.ab3@14608>   BSR writelong
0002BEDA <AmiBlitz3.ab3@14609>   MOVE.l (a7)+,d0
0002BEDC <AmiBlitz3.ab3@14610> RTS
0002BEDE <AmiBlitz3.ab3@14613> RTS         ; dead old code
0002BEE4 <AmiBlitz3.ab3@14620>   TST.b iee
0002BEE8 <AmiBlitz3.ab3@14621>   BNE ftoq
0002BEEC <AmiBlitz3.ab3@14623>   MOVE.w #$C31B,D1    ; #ftowover,
0002BEF0 <AmiBlitz3.ab3@14624>   BSR.w overchk
0002BEF4 <AmiBlitz3.ab3@14626>   MOVE.w #$D301,D1    ; #fltoqu,
0002BEF8 <AmiBlitz3.ab3@14627> BRA.w qtof2
0002BEFE <AmiBlitz3.ab3@14632>    TST.b blitzparloop
0002BF02 <AmiBlitz3.ab3@14633>    BNE 'l1
0002BF08 <AmiBlitz3.ab3@14634>    TST.b funcparloop
0002BF0C <AmiBlitz3.ab3@14635>    BNE 'l1
0002BF10 <AmiBlitz3.ab3@14636>    BRA error_convert_types
0002BF18 <AmiBlitz3.ab3@14639>   CMP.b #2,optistring
0002BF1C <AmiBlitz3.ab3@14640>   BEQ JLrts
0002BF22 <AmiBlitz3.ab3@14642>   MOVE.w stol,D1
0002BF26 <AmiBlitz3.ab3@14643>   BSR.w writeword
0002BF2E <AmiBlitz3.ab3@14645>   CMPI.w #$2,sbgot
0002BF32 <AmiBlitz3.ab3@14647>   BCS.w sbtolong                     ; was BRA
0002BF36 <AmiBlitz3.ab3@14649>   MOVE.w ceos(PC),D1                 ; begin copy of sbtolong
0002BF3A <AmiBlitz3.ab3@14650>   BSR.w writeword
0002BF40 <AmiBlitz3.ab3@14652>   MOVE.w regnum,D1
0002BF42 <AmiBlitz3.ab3@14653>   LSL.w #8,D1
0002BF44 <AmiBlitz3.ab3@14654>   LSL.w #1,D1
0002BF4C <AmiBlitz3.ab3@14655>   CMPI.w #$2,sbgot
0002BF50 <AmiBlitz3.ab3@14656>   BCS.w sbtolong_skip2
0002BF56 <AmiBlitz3.ab3@14657>   MOVE.w a2offset,D3
0002BF5C <AmiBlitz3.ab3@14658>   SUB.w thisstuse,D3
0002BF60 <AmiBlitz3.ab3@14659>   CMP.w #$6,D3
0002BF64 <AmiBlitz3.ab3@14660>   BNE.w 'lenonly
0002BF6A <AmiBlitz3.ab3@14661>   OR.w movestst2,D1
0002BF6E <AmiBlitz3.ab3@14662>   BSR.w writeword
0002BF74 <AmiBlitz3.ab3@14663>   LEA movestst2+2,A0
0002BF7A <AmiBlitz3.ab3@14664>   LEA movestst2f,A1
0002BF7E <AmiBlitz3.ab3@14665>  BRA.w pokecode2
0002BF84 <AmiBlitz3.ab3@14668>   OR.w movea7dn,D1
0002BF88 <AmiBlitz3.ab3@14669>   BSR.w writeword
0002BF8E <AmiBlitz3.ab3@14670>   MOVE.l #0,D1
0002BF92 <AmiBlitz3.ab3@14671> BRA.w writeword                      ; end of copy
0002BF98 <AmiBlitz3.ab3@14678>   ADDQ.w #1,fuckpos
0002BF9C <AmiBlitz3.ab3@14679>   BSR.w writeconvertcode
0002BFA2 <AmiBlitz3.ab3@14680>   SUBQ.w #1,fuckpos
0002BFA4 <AmiBlitz3.ab3@14684> RTS
0002BFA6 <AmiBlitz3.ab3@14688>   MOVE.w D3,D1
0002BFAA <AmiBlitz3.ab3@14690>   CMP.w #7,d1
0002BFAE <AmiBlitz3.ab3@14691>   BLE 'ok
0002BFB4 <AmiBlitz3.ab3@14692>   JMP errorinternalconvert
0002BFB6 <AmiBlitz3.ab3@14696>   SUBQ.w #1,D1
0002BFBA <AmiBlitz3.ab3@14697>   MULU #$7,D1
0002BFBC <AmiBlitz3.ab3@14698>   ADD.w D2,D1
0002BFBE <AmiBlitz3.ab3@14699>   SUBQ.w #1,D1
0002BFC0 <AmiBlitz3.ab3@14700>   LSL.w #2,D1
0002BFC6 <AmiBlitz3.ab3@14701>   LEA convtable,A0
0002BFCA <AmiBlitz3.ab3@14702>   MOVE.l $0(A0,D1.W),D1
0002BFCE <AmiBlitz3.ab3@14703>   BEQ.w 'skip
0002BFD0 <AmiBlitz3.ab3@14704>     MOVEA.l D1,A0
0002BFD4 <AmiBlitz3.ab3@14706>     CMP.b #$ff,d3
0002BFD8 <AmiBlitz3.ab3@14707>     BEQ 'skip
0002BFDA <AmiBlitz3.ab3@14709>  JMP (A0)
0002BFDC <AmiBlitz3.ab3@14712> RTS
0002BFE0 <AmiBlitz3.ab3@14715> usedfrom:  Ds.l 1
0002BFE4 <AmiBlitz3.ab3@14722>   CMP.w #"\",D0
0002BFE8 <AmiBlitz3.ab3@14723>   BNE.w 'skip0
0002BFEC <AmiBlitz3.ab3@14725>     CMP.b #"\",(a5)
0002BFF0 <AmiBlitz3.ab3@14726>     BNE 'first
0002BFF6 <AmiBlitz3.ab3@14727>       MOVE.l A5,usedfrom
0002BFFC <AmiBlitz3.ab3@14728>       LEA path2,A5
0002C000 <AmiBlitz3.ab3@14729>  BRA 'g1
0002C002 <AmiBlitz3.ab3@14733>     SUBQ.w #1,A5
0002C008 <AmiBlitz3.ab3@14734>   MOVE.l A5,usedfrom
0002C00E <AmiBlitz3.ab3@14735>   LEA usedpath,A5                                          ;read path
0002C012 <AmiBlitz3.ab3@14740>   BSR.w get1bytemain
0002C018 <AmiBlitz3.ab3@14743>   CLR.w flagmask
0002C01C <AmiBlitz3.ab3@14744>   CMP.w #$2A,D0             ;'*'
0002C020 <AmiBlitz3.ab3@14745>    BNE.w 'skip
0002C028 <AmiBlitz3.ab3@14746>   MOVE.w #$0001,flagmask
0002C02C <AmiBlitz3.ab3@14749>    BSR.w getparameter2
0002C030 <AmiBlitz3.ab3@14752>    BEQ.w syntaxerr
0002C034 <AmiBlitz3.ab3@14753>   CMP.w #$28,D0             ;'('
0002C038 <AmiBlitz3.ab3@14754>    BEQ.w 'setmask
0002C03C <AmiBlitz3.ab3@14755>   CMP.w #$2E,D0             ;'.'
0002C040 <AmiBlitz3.ab3@14756>    BEQ.w 'morem
0002C044 <AmiBlitz3.ab3@14757>   CMP.w #$24,D0             ;'$'
0002C048 <AmiBlitz3.ab3@14758>    BNE.w 'done
0002C050 <AmiBlitz3.ab3@14759>   ORI.w #$8,flagmask
0002C054 <AmiBlitz3.ab3@14760>    BSR.w storeloc
0002C058 <AmiBlitz3.ab3@14761>    BSR.w get1bytemain
0002C05C <AmiBlitz3.ab3@14762>  BRA.w 'morez
0002C060 <AmiBlitz3.ab3@14766>   BSR.w storeloc
0002C062 <AmiBlitz3.ab3@14767>   MOVE.w D2,-(A7)
0002C068 <AmiBlitz3.ab3@14768>   LEA namebuff2,A1
0002C06C <AmiBlitz3.ab3@14769>    BSR.w makename3
0002C070 <AmiBlitz3.ab3@14770>    BEQ.w syntaxerr
0002C072 <AmiBlitz3.ab3@14771>   MOVE.w (A7)+,D2
0002C074 <AmiBlitz3.ab3@14774>    MOVE.w D0,D1
0002C078 <AmiBlitz3.ab3@14775>    BSR.w resloc
0002C07C <AmiBlitz3.ab3@14776>    CMP.w #$28,D1             ;'('
0002C080 <AmiBlitz3.ab3@14777>    BNE.w 'done
0002C088 <AmiBlitz3.ab3@14780>   ORI.w #$2,flagmask
0002C08A <AmiBlitz3.ab3@14783>  RTS
0002C08E <AmiBlitz3.ab3@14786>   CMP.w #$40,D0              ;'@'
0002C092 <AmiBlitz3.ab3@14787>    BNE.w 'skip2
0002C09A <AmiBlitz3.ab3@14788>   MOVE.w #$0005,flagmask
0002C09E <AmiBlitz3.ab3@14789>  BRA.w 'more2
0002C0A2 <AmiBlitz3.ab3@14792>   BSR.w makename2
0002C0A6 <AmiBlitz3.ab3@14793> BRA.w 'more
0002C0AA <AmiBlitz3.ab3@14797>   MOVE.w #$FED3,D1          ; #65235
0002C0AE <AmiBlitz3.ab3@14798>    BSR.w uselib
0002C0B4 <AmiBlitz3.ab3@14799>   LEA pusha3,A0
0002C0BA <AmiBlitz3.ab3@14800>   LEA pusha3f,A1
0002C0BE <AmiBlitz3.ab3@14801> BRA.w pokecode
0002C0C2 <AmiBlitz3.ab3@14805>   MOVE.w #$FED3,D1          ; #65235
0002C0C6 <AmiBlitz3.ab3@14806>    BSR.w uselib
0002C0CC <AmiBlitz3.ab3@14807>   LEA pulla3,A0
0002C0D2 <AmiBlitz3.ab3@14808>   LEA pulla3f,A1
0002C0D6 <AmiBlitz3.ab3@14809> BRA.w pokecode
0002C0D8 <AmiBlitz3.ab3@14813> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002C0E0 <AmiBlitz3.ab3@14819>     CMP.b #2,optistring
0002C0E4 <AmiBlitz3.ab3@14820>    BEQ 'l10
0002C0E8 <AmiBlitz3.ab3@14822>    MOVE.w ceos(PC),D1
0002C0EC <AmiBlitz3.ab3@14823>    BSR.w writeword                                         ;clr.b (a3)
0002C0F2 <AmiBlitz3.ab3@14828>   MOVE.w regnum,D1
0002C0F4 <AmiBlitz3.ab3@14829>   LSL.w #8,D1
0002C0F6 <AmiBlitz3.ab3@14830>   LSL.w #1,D1
0002C0FE <AmiBlitz3.ab3@14831>   CMPI.w #$2,sbgot
0002C102 <AmiBlitz3.ab3@14832>    BCS.w sbtolong_skip2
0002C108 <AmiBlitz3.ab3@14833>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002C10E <AmiBlitz3.ab3@14834>   SUB.w thisstuse,D3
0002C112 <AmiBlitz3.ab3@14835>   CMP.w #$6,D3
0002C116 <AmiBlitz3.ab3@14836>    BNE.w 'lenonly
0002C11C <AmiBlitz3.ab3@14837>   OR.w movestst2,D1
0002C120 <AmiBlitz3.ab3@14838>    BSR.w writeword
0002C126 <AmiBlitz3.ab3@14839>   LEA movestst2+2,A0
0002C12C <AmiBlitz3.ab3@14840>   LEA movestst2f,A1
0002C130 <AmiBlitz3.ab3@14841>  BRA.w pokecode2
0002C136 <AmiBlitz3.ab3@14844>    OR.w movea7dn,D1
0002C13A <AmiBlitz3.ab3@14845>    BSR.w writeword
0002C140 <AmiBlitz3.ab3@14846>   MOVE.l movea7dn+2,D1
0002C144 <AmiBlitz3.ab3@14859>   BSR writelong
0002C14C <AmiBlitz3.ab3@14862>    CMP.w #6,regnum
0002C150 <AmiBlitz3.ab3@14863>    BEQ 'l1
0002C156 <AmiBlitz3.ab3@14864>    TST.w stackpar
0002C15A <AmiBlitz3.ab3@14865>    BNE 'l1
0002C160 <AmiBlitz3.ab3@14866>    TST.b funcparloop
0002C164 <AmiBlitz3.ab3@14867>    BEQ 'l1
0002C16A <AmiBlitz3.ab3@14868>    MOVE.l #$48780000,d1
0002C16E <AmiBlitz3.ab3@14869>    BSR writelong
0002C170 <AmiBlitz3.ab3@14873>  RTS
0002C172 <AmiBlitz3.ab3@14879>      MOVE.l d1,-(a7)
0002C17A <AmiBlitz3.ab3@14880>      CMP.w #6,regnum
0002C17E <AmiBlitz3.ab3@14881>      BEQ 'l1
0002C184 <AmiBlitz3.ab3@14882>      TST.w stackpar
0002C188 <AmiBlitz3.ab3@14883>      BNE 'l1
0002C18E <AmiBlitz3.ab3@14884>      TST.b funcparloop
0002C192 <AmiBlitz3.ab3@14885>      BEQ 'l1
0002C198 <AmiBlitz3.ab3@14886>      MOVE.l #$48780000,d1
0002C19C <AmiBlitz3.ab3@14887>      BSR writelong
0002C19E <AmiBlitz3.ab3@14890>      MOVE.l (a7)+,d1
0002C1A4 <AmiBlitz3.ab3@14893>    OR.w movestdn,D1
0002C1A8 <AmiBlitz3.ab3@14894>    BSR.w writeword
0002C1AC <AmiBlitz3.ab3@14895>   MOVE.w #$FED3,D1        ;#65235
0002C1B0 <AmiBlitz3.ab3@14896>    BSR.w uselib
0002C1B4 <AmiBlitz3.ab3@14897>   MOVE.w $A(A1),D1
0002C1B8 <AmiBlitz3.ab3@14898> BRA.w writeword
0002C1BA <AmiBlitz3.ab3@14901> unknown:    Ds.w 1
0002C1C0 <AmiBlitz3.ab3@14904> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002C1C4 <AmiBlitz3.ab3@14905> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002C1CA <AmiBlitz3.ab3@14906>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002C1D0 <AmiBlitz3.ab3@14912>   TST.b debugmode
0002C1D4 <AmiBlitz3.ab3@14913>   BEQ.w sharreval
0002C1D8 <AmiBlitz3.ab3@14914>  BSR.w arreval
0002C1DC <AmiBlitz3.ab3@14917>   MOVE.w somecode(PC),D1
0002C1E2 <AmiBlitz3.ab3@14918>   OR.w regnum,D1
0002C1E6 <AmiBlitz3.ab3@14919>    BSR.w writeword
0002C1E8 <AmiBlitz3.ab3@14920>   MOVEQ.l #$01,D1
0002C1EA <AmiBlitz3.ab3@14921>   SWAP D1
0002C1EE <AmiBlitz3.ab3@14922>    BSR.w writelong
0002C1F2 <AmiBlitz3.ab3@14923>   MOVE.l somecode2(PC),D1
0002C1F6 <AmiBlitz3.ab3@14924>    BSR.w writelong
0002C1FA <AmiBlitz3.ab3@14925>   MOVE.w #$C309,D1     ; was #arrerr,
0002C1FE <AmiBlitz3.ab3@14926> BRA.w Atokejsr
0002C200 <AmiBlitz3.ab3@14930>   MOVEQ.l #$02,D2
0002C202 <AmiBlitz3.ab3@14931>   MOVEQ.l #$00,D1
0002C204 <AmiBlitz3.ab3@14932>   MOVEQ.l #$00,D3
0002C208 <AmiBlitz3.ab3@14933> BRA.w maineval2
0002C20A <AmiBlitz3.ab3@14937>   MOVEQ.l #$03,D2           ;getlong
0002C20C <AmiBlitz3.ab3@14938>   MOVEQ.l #$00,D1           ;no push
0002C20E <AmiBlitz3.ab3@14939>   MOVEQ.l #$00,D3           ;and convert
0002C214 <AmiBlitz3.ab3@14940>   MOVE.b notypecheck,-(a7)
0002C21C <AmiBlitz3.ab3@14941>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002C222 <AmiBlitz3.ab3@14942>   JSR maineval2             ;2!* ;was bra
0002C228 <AmiBlitz3.ab3@14944>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002C22A <AmiBlitz3.ab3@14945> RTS
0002C234 <AmiBlitz3.ab3@14951>   MOVE.w oldqflag,instringon
0002C23A <AmiBlitz3.ab3@14952>   MOVEA.l lastsourcepos,A5
0002C23C <AmiBlitz3.ab3@14954>   MOVEQ.l #-$01,D1
0002C23E <AmiBlitz3.ab3@14955>   MOVEQ.l #-$01,D3
0002C242 <AmiBlitz3.ab3@14956> BRA.w peval
0002C24C <AmiBlitz3.ab3@14962>   MOVE.w oldqflag,instringon
0002C252 <AmiBlitz3.ab3@14963>   MOVEA.l lastsourcepos,A5
0002C254 <AmiBlitz3.ab3@14966>   MOVEQ.l #-$01,D1
0002C256 <AmiBlitz3.ab3@14967>   MOVEQ.l #$00,D3
0002C25C <AmiBlitz3.ab3@14969>   MOVE.l leftsidetype,-(a7)
0002C262 <AmiBlitz3.ab3@14970>   MOVE.l rightsidetype,-(a7)
0002C268 <AmiBlitz3.ab3@14971>   MOVE.w leftsideflagmask,-(a7)
0002C26E <AmiBlitz3.ab3@14972>   MOVE.w rightsideflagmask,-(a7)
0002C274 <AmiBlitz3.ab3@14973>   CLR.l leftsidetype
0002C27A <AmiBlitz3.ab3@14974>   CLR.l rightsidetype
0002C280 <AmiBlitz3.ab3@14975>   CLR.w leftsideflagmask
0002C286 <AmiBlitz3.ab3@14976>   CLR.w rightsideflagmask
0002C28C <AmiBlitz3.ab3@14978>   JSR maineval                    ; was bra
0002C292 <AmiBlitz3.ab3@14980>   MOVE.w (a7)+,rightsideflagmask
0002C298 <AmiBlitz3.ab3@14981>   MOVE.w (a7)+,leftsideflagmask
0002C29E <AmiBlitz3.ab3@14982>   MOVE.l (a7)+,rightsidetype
0002C2A4 <AmiBlitz3.ab3@14983>   MOVE.l (a7)+,leftsidetype
0002C2A6 <AmiBlitz3.ab3@14984> RTS
0002C2B0 <AmiBlitz3.ab3@14990>   MOVE.w oldqflag,instringon
0002C2B6 <AmiBlitz3.ab3@14991>   MOVEA.l lastsourcepos,A5
0002C2B8 <AmiBlitz3.ab3@14994>   MOVEQ.l #$00,D1
0002C2BA <AmiBlitz3.ab3@14995>   MOVEQ.l #-$01,D3
0002C2BE <AmiBlitz3.ab3@14996> BRA.w maineval
0002C2C0 <AmiBlitz3.ab3@15000>   MOVEQ.l #$01,D1
0002C2C2 <AmiBlitz3.ab3@15001>   MOVEQ.l #-$01,D3
0002C2C6 <AmiBlitz3.ab3@15002> BRA.w maineval
0002C2D0 <AmiBlitz3.ab3@15008>   MOVE.w oldqflag,instringon
0002C2D6 <AmiBlitz3.ab3@15009>   MOVEA.l lastsourcepos,A5
0002C2D8 <AmiBlitz3.ab3@15013>   MOVEQ.l #$00,D1      ;no push
0002C2DA <AmiBlitz3.ab3@15014>   MOVEQ.l #$00,D3
0002C2E2 <AmiBlitz3.ab3@15035>    CMPI.w #$6,regnum
0002C2E6 <AmiBlitz3.ab3@15036>    BCS.w maineval2
0002C2E8 <AmiBlitz3.ab3@15038>    MOVEQ #0,d1
0002C2EE <AmiBlitz3.ab3@15039>    MOVE.l destpointer,a4
0002C2F4 <AmiBlitz3.ab3@15041>    CMPA.l destbufferend,A4
0002C2F8 <AmiBlitz3.ab3@15042>    BCC.w 'l2
0002C2FE <AmiBlitz3.ab3@15044>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002C302 <AmiBlitz3.ab3@15046>    BNE 'l2
0002C306 <AmiBlitz3.ab3@15050> BRA 'l1
0002C308 <AmiBlitz3.ab3@15054>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002C310 <AmiBlitz3.ab3@15057>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002C316 <AmiBlitz3.ab3@15063>   MOVE.w thisstuse,-(A7)
0002C320 <AmiBlitz3.ab3@15064>   MOVE.w a2offset,thisstuse
0002C326 <AmiBlitz3.ab3@15066>   MOVE.w stackpar,-(A7)
0002C32C <AmiBlitz3.ab3@15067>   MOVE.w D1,stackpar
0002C332 <AmiBlitz3.ab3@15068>   MOVE.w sbgot,-(A7)
0002C338 <AmiBlitz3.ab3@15069>   CLR.w sbgot                ;not pushed yet
0002C33C <AmiBlitz3.ab3@15070>   MOVE.w unknown(PC),-(A7)
0002C342 <AmiBlitz3.ab3@15071>   MOVE.w D3,unknown
0002C344 <AmiBlitz3.ab3@15073>   MOVE.w D2,-(a7)
0002C34A <AmiBlitz3.ab3@15075>   MOVE.w d2,mode
0002C34E <AmiBlitz3.ab3@15077>    BSR.w eval3
0002C350 <AmiBlitz3.ab3@15078>   MOVE.w (a7)+,d3            ;type asked for
0002C354 <AmiBlitz3.ab3@15079>    BEQ.w 'noconv
0002C358 <AmiBlitz3.ab3@15080>   MOVE.w unknown(PC),D1
0002C35C <AmiBlitz3.ab3@15081>    BNE.w 'noconv
0002C35E <AmiBlitz3.ab3@15082>   EXG.l D2,D3
0002C360 <AmiBlitz3.ab3@15084>    MOVE.l a2,-(a7)
0002C366 <AmiBlitz3.ab3@15085>    TST.b curtemplabel
0002C36A <AmiBlitz3.ab3@15086>    BEQ 'l10
0002C370 <AmiBlitz3.ab3@15087>    MOVE.l asmbuff,a2
0002C376 <AmiBlitz3.ab3@15088>    CMP.w #$c,$8(a2)
0002C37A <AmiBlitz3.ab3@15089>    BEQ 'l20
0002C380 <AmiBlitz3.ab3@15090>    CMP.w #$d,$8(a2)
0002C384 <AmiBlitz3.ab3@15091>    BEQ 'l20
0002C386 <AmiBlitz3.ab3@15094>   CMP.w d2,d3
0002C38A <AmiBlitz3.ab3@15095>   BEQ 'l20
0002C38E <AmiBlitz3.ab3@15096>   BSR.w writeconvertcode
0002C394 <AmiBlitz3.ab3@15097>   CLR.b doimmediate
0002C396 <AmiBlitz3.ab3@15100>   MOVE.l (a7)+,a2
0002C39C <AmiBlitz3.ab3@15104>   MOVE.w (A7)+,unknown
0002C3A2 <AmiBlitz3.ab3@15105>   MOVE.w stackpar,D1
0002C3A6 <AmiBlitz3.ab3@15106>    BEQ.w 'skipme
0002C3AA <AmiBlitz3.ab3@15107>    BMI.w 'skipme
0002C3B0 <AmiBlitz3.ab3@15111>   MOVE.w regnum,D1
0002C3B2 <AmiBlitz3.ab3@15112>   LSL.w #8,D1
0002C3B4 <AmiBlitz3.ab3@15113>   LSL.w #1,D1
0002C3B8 <AmiBlitz3.ab3@15114>   CMP.w #$7,D2
0002C3BC <AmiBlitz3.ab3@15115>    BNE.w 'hi1
0002C3C4 <AmiBlitz3.ab3@15117>    CMP.b #2,optistring
0002C3C8 <AmiBlitz3.ab3@15118>    BEQ 'hi1a
0002C3CA <AmiBlitz3.ab3@15120>   MOVE.w D1,-(A7)
0002C3D0 <AmiBlitz3.ab3@15121>   OR.w getstlen,D1
0002C3D4 <AmiBlitz3.ab3@15122>    BSR.w writeword
0002C3D6 <AmiBlitz3.ab3@15123>   MOVE.w (A7)+,D1
0002C3DC <AmiBlitz3.ab3@15126>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002C3E0 <AmiBlitz3.ab3@15131>   MOVE.w #$3f3c,d1
0002C3E4 <AmiBlitz3.ab3@15133>    BSR.w writeword
0002C3E6 <AmiBlitz3.ab3@15138>   MOVE.w d2,d1
0002C3EC <AmiBlitz3.ab3@15139>   MOVE.w d1,libmode
0002C3F0 <AmiBlitz3.ab3@15141>    BSR.w writeword
0002C3F4 <AmiBlitz3.ab3@15143>   CMP.w #$7,D2
0002C3F8 <AmiBlitz3.ab3@15144>    BNE.w 'skipme
0002C3FE <AmiBlitz3.ab3@15145>   MOVE.w putstlen,D1
0002C404 <AmiBlitz3.ab3@15146>   OR.w regnum,D1
0002C408 <AmiBlitz3.ab3@15147>    BSR.w writeword
0002C40C <AmiBlitz3.ab3@15150>    CMP.w #$7,D2
0002C410 <AmiBlitz3.ab3@15151>    BNE.w 'notst
0002C418 <AmiBlitz3.ab3@15164>    CMP.b #2,optistring
0002C41C <AmiBlitz3.ab3@15165>    BEQ 'skipme_l10
0002C422 <AmiBlitz3.ab3@15167>    ADDQ.w #4,a2offset     ;a length on da stack.....
0002C426 <AmiBlitz3.ab3@15168>    BSR.w sbtolong
0002C42A <AmiBlitz3.ab3@15169>  BRA.w 'notst2
0002C432 <AmiBlitz3.ab3@15174>     CMP.w #6,regnum
0002C436 <AmiBlitz3.ab3@15175>     BEQ 'skipme_l10_l1
0002C43C <AmiBlitz3.ab3@15176>     TST.b funcparloop
0002C440 <AmiBlitz3.ab3@15177>     BEQ 'skipme_l10_l1
0002C446 <AmiBlitz3.ab3@15178>     MOVE.l #$48780000,d1
0002C44A <AmiBlitz3.ab3@15179>     BSR writelong
0002C44E <AmiBlitz3.ab3@15183>  BRA.w 'notst2
0002C454 <AmiBlitz3.ab3@15186>   ADDQ.w #2,a2offset
0002C458 <AmiBlitz3.ab3@15187>  BRA 'skipme
0002C460 <AmiBlitz3.ab3@15191>   CMPI.w #$2,sbgot
0002C464 <AmiBlitz3.ab3@15192>    BCS.w 'notst2                                         ;correct stack
0002C468 <AmiBlitz3.ab3@15193>   MOVE.w ststfix(PC),D1
0002C46C <AmiBlitz3.ab3@15194>    BSR.w writeword
0002C472 <AmiBlitz3.ab3@15197>   MOVE.w (A7)+,sbgot
0002C478 <AmiBlitz3.ab3@15199>   MOVE.w stackpar,D1
0002C47C <AmiBlitz3.ab3@15200>    BPL.w 'skip
0002C480 <AmiBlitz3.ab3@15202>    CMP.b #7,d2
0002C484 <AmiBlitz3.ab3@15203>    BEQ 'notst2_l1
0002C48A <AmiBlitz3.ab3@15204>   TST.b funcparloop
0002C48E <AmiBlitz3.ab3@15205>   BEQ 'notst2_l1
0002C492 <AmiBlitz3.ab3@15206>   CMP.b #5,d2
0002C496 <AmiBlitz3.ab3@15207>   BNE 'notst2_skip
0002C49C <AmiBlitz3.ab3@15208>   TST.b fpu
0002C4A0 <AmiBlitz3.ab3@15209>   BEQ 'notst2_skip
0002C4A6 <AmiBlitz3.ab3@15210>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C4AC <AmiBlitz3.ab3@15211>   JSR writelong
0002C4B0 <AmiBlitz3.ab3@15214>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C4B6 <AmiBlitz3.ab3@15215>   ADD.w parnum,d1
0002C4BC <AmiBlitz3.ab3@15216>   JSR Atokejsr
0002C4C2 <AmiBlitz3.ab3@15217>    TST.w dontwrite_nomemleft
0002C4C6 <AmiBlitz3.ab3@15218>    BNE 'notst2_l1
0002C4CC <AmiBlitz3.ab3@15219>    MOVE.l data1start,d1
0002C4D2 <AmiBlitz3.ab3@15220>    MOVE.l destpointer,a4
0002C4D6 <AmiBlitz3.ab3@15221>    ADD.l d1,-4(a4)
0002C4DC <AmiBlitz3.ab3@15222>    MOVE.l destpointer,d1
0002C4DE <AmiBlitz3.ab3@15223>    SUBQ.l #4,d1
0002C4E4 <AmiBlitz3.ab3@15224>    SUB.l destbufferstart,d1
0002C4E6 <AmiBlitz3.ab3@15225>    MOVE.l d2,-(a7)
0002C4E8 <AmiBlitz3.ab3@15226>    MOVE.l d1,d2
0002C4EE <AmiBlitz3.ab3@15227>    JSR addhunkoffset
0002C4F0 <AmiBlitz3.ab3@15228>    MOVE.l (a7)+,d2
0002C4F4 <AmiBlitz3.ab3@15229>  BRA 'skip
0002C4FA <AmiBlitz3.ab3@15233>   ADDQ.w #2,a2offset
0002C500 <AmiBlitz3.ab3@15234>   MOVE.w pushd0wd,D1
0002C504 <AmiBlitz3.ab3@15235>   CMP.w #$3,D2                                             ;write parameter to stack
0002C508 <AmiBlitz3.ab3@15236>    BCS.w 'ok
0002C50E <AmiBlitz3.ab3@15237>   ADDQ.w #2,a2offset
0002C514 <AmiBlitz3.ab3@15239>   TST.b fpu
0002C518 <AmiBlitz3.ab3@15240>   BEQ 'notst2_nofpu
0002C51C <AmiBlitz3.ab3@15241>   CMP.w #5,d2
0002C520 <AmiBlitz3.ab3@15242>   BNE 'notst2_nofpu
0002C522 <AmiBlitz3.ab3@15243>   MOVEQ #0,d1
0002C528 <AmiBlitz3.ab3@15244>   MOVE.w regnum,d1
0002C52A <AmiBlitz3.ab3@15245>   ASL.l #7,d1
0002C530 <AmiBlitz3.ab3@15246>   OR.l #$f2276400,d1
0002C534 <AmiBlitz3.ab3@15247>   BSR writelong
0002C538 <AmiBlitz3.ab3@15248>  BRA 'skip
0002C53E <AmiBlitz3.ab3@15252>   MOVE.w pushd0l,D1
0002C544 <AmiBlitz3.ab3@15255>    OR.w regnum,D1
0002C548 <AmiBlitz3.ab3@15256>    BSR.w writeword                                         ;nat
0002C54E <AmiBlitz3.ab3@15259>   MOVE.w (A7)+,stackpar
0002C554 <AmiBlitz3.ab3@15260>   MOVE.w (A7)+,thisstuse
0002C556 <AmiBlitz3.ab3@15261> RTS
0002C558 <AmiBlitz3.ab3@15264> thisstuse: Ds.w 1
0002C55A <AmiBlitz3.ab3@15267> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C55C <AmiBlitz3.ab3@15268> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C560 <AmiBlitz3.ab3@15273>   BSR.w eval4
0002C56A <AmiBlitz3.ab3@15274>   SUBI.l #$12,forthsp
0002C56C <AmiBlitz3.ab3@15275> RTS
0002C56E <AmiBlitz3.ab3@15279>   MOVEQ.l #$01,D1
0002C572 <AmiBlitz3.ab3@15282>       MOVEA.l precsp(PC),A1
0002C574 <AmiBlitz3.ab3@15283>       MOVE.l A0,(A1)+
0002C576 <AmiBlitz3.ab3@15284>       MOVE.w D1,(A1)+
0002C57C <AmiBlitz3.ab3@15285>       MOVE.l A1,precsp
0002C580 <AmiBlitz3.ab3@15287>    BSR.w calcloop
0002C582 <AmiBlitz3.ab3@15288>   TST.w D1
0002C586 <AmiBlitz3.ab3@15289>    BNE.w syntaxerr
0002C58C <AmiBlitz3.ab3@15291>   SUBQ.l #6,precsp           ;pop the prec set up
0002C58E <AmiBlitz3.ab3@15292> RTS
0002C592 <AmiBlitz3.ab3@15296>   BSR.w eval2
0002C596 <AmiBlitz3.ab3@15299>   MOVEA.l precsp(PC),A1
0002C598 <AmiBlitz3.ab3@15300>   CMP.w -(A1),D1
0002C59C <AmiBlitz3.ab3@15301>    BHI.w 'higher
0002C59E <AmiBlitz3.ab3@15302>  RTS
0002C5A2 <AmiBlitz3.ab3@15308>   MOVEA.l precsp(PC),A1
0002C5A4 <AmiBlitz3.ab3@15309>   MOVE.l A0,(A1)+
0002C5A6 <AmiBlitz3.ab3@15310>   MOVE.w D1,(A1)+
0002C5AC <AmiBlitz3.ab3@15311>   MOVE.l A1,precsp
0002C5AE <AmiBlitz3.ab3@15313>   MOVE.w D2,-(A7)
0002C5B4 <AmiBlitz3.ab3@15314>   ADDQ.w #1,regnum
0002C5B8 <AmiBlitz3.ab3@15315>    BSR.w calcloop               ;constant optimizer
0002C5BE <AmiBlitz3.ab3@15316>   SUBQ.w #1,regnum
0002C5C0 <AmiBlitz3.ab3@15317>   MOVE.w (A7)+,D3
0002C5C4 <AmiBlitz3.ab3@15318>   MOVEM.l D1/A0,-(A7)
0002C5C8 <AmiBlitz3.ab3@15319>    BEQ.w 'skip
0002C5CC <AmiBlitz3.ab3@15320>    BSR.w convtypef     ;could possibly fuck regat+1 !
0002C5D0 <AmiBlitz3.ab3@15323>   BSR.w popprec
0002C5D4 <AmiBlitz3.ab3@15324>   BSR.w writecode
0002C5D8 <AmiBlitz3.ab3@15331>   MOVEA.l forthsp(PC),A0
0002C5DC <AmiBlitz3.ab3@15332>   MOVE.w -$2(A0),D1
0002C5E0 <AmiBlitz3.ab3@15333>   OR.w -$14(A0),D1
0002C5E4 <AmiBlitz3.ab3@15334>   MOVE.w D1,-$14(A0)
0002C5E8 <AmiBlitz3.ab3@15335>    BNE.w 'no
0002C5EE <AmiBlitz3.ab3@15336>   MOVE.w dontwrite_nomemleft,D1
0002C5F2 <AmiBlitz3.ab3@15337>    BNE.w 'no
0002C5F6 <AmiBlitz3.ab3@15344>    MOVEA.l -$24(A0),A0
0002C732 <AmiBlitz3.ab3@15346>   !newcalc
0002C736 <AmiBlitz3.ab3@15347>    BEQ 'l10
0002C73A <AmiBlitz3.ab3@15348>    MOVEA.l forthsp(PC),A0
0002C742 <AmiBlitz3.ab3@15349>    MOVE.w -$18(A0),lasta6
0002C74A <AmiBlitz3.ab3@15350>    MOVE.l -$1C(A0),lasta6
0002C74E <AmiBlitz3.ab3@15351>    MOVEA.l -$24(A0),A0
0002C754 <AmiBlitz3.ab3@15352>    MOVE.l A0,destpointer
0002C75A <AmiBlitz3.ab3@15353>    MOVEA.l _mathffpbase,A6
0002C760 <AmiBlitz3.ab3@15354>    MOVEA.l ffplib,A1
0002C764 <AmiBlitz3.ab3@15355>  BRA 'cont1
0002C768 <AmiBlitz3.ab3@15359>   MOVE.w #$2000,D1
0002C76E <AmiBlitz3.ab3@15360>   OR.w regnum,D1            ; was regat(pc),
0002C772 <AmiBlitz3.ab3@15361>    BSR.w writeword
0002C774 <AmiBlitz3.ab3@15363>     MOVEQ #0,d1
0002C77A <AmiBlitz3.ab3@15364>     MOVE.w regnum,D1
0002C77C <AmiBlitz3.ab3@15365>     ASL.l #8,d1
0002C77E <AmiBlitz3.ab3@15366>     ASL.l #2,d1
0002C784 <AmiBlitz3.ab3@15367>     OR.l #$f2000000,d1
0002C788 <AmiBlitz3.ab3@15368>     BSR writelong
0002C78C <AmiBlitz3.ab3@15370>   MOVE.w #$4E75,D1
0002C790 <AmiBlitz3.ab3@15371>    BSR.w writeword
0002C798 <AmiBlitz3.ab3@15372>   MOVE.w -$18(A0),lasta6
0002C7A0 <AmiBlitz3.ab3@15373>   MOVE.l -$1C(A0),lasta6
0002C7A4 <AmiBlitz3.ab3@15374>   MOVEA.l -$24(A0),A0
0002C7AA <AmiBlitz3.ab3@15375>   MOVE.l A0,destpointer
0002C7AE <AmiBlitz3.ab3@15377>   MOVEM.l D2/A5,-(A7)
0002C7B4 <AmiBlitz3.ab3@15379>   MOVEA.l _mathffpbase,A6
0002C7BA <AmiBlitz3.ab3@15380>   MOVEA.l ffplib,A1
0002C7BE <AmiBlitz3.ab3@15381>   MOVE.w $A(A1),D0
0002C7C4 <AmiBlitz3.ab3@15382>   LEA _mathffpbase,A5
0002C7C6 <AmiBlitz3.ab3@15383>   SUBA.w D0,A5
0002C7CC <AmiBlitz3.ab3@15385>   JSR Aclearcache                                          ;neg +
0002C7D2 <AmiBlitz3.ab3@15387>   CLR.l load_var_addr
0002C7D8 <AmiBlitz3.ab3@15388>   CLR.l imm_addr
0002C7DE <AmiBlitz3.ab3@15389>   TST.w dontwrite_nomemleft
0002C7E2 <AmiBlitz3.ab3@15390>   BNE '1
0002C7E4 <AmiBlitz3.ab3@15392>   JSR (A0)                                                 ;calc constant inline expression
0002C7E8 <AmiBlitz3.ab3@15396>   MOVEM.l (A7)+,D2/A5
0002C7EE <AmiBlitz3.ab3@15403>   MOVE.b d2,isconstantvalue
0002C7F4 <AmiBlitz3.ab3@15404>   MOVE.l d0,lastconstantvalue
0002C7FA <AmiBlitz3.ab3@15406>   MOVE.w regnum,D1
0002C7FC <AmiBlitz3.ab3@15407>   LSL.w #8,D1
0002C7FE <AmiBlitz3.ab3@15408>   LSL.w #1,D1
0002C802 <AmiBlitz3.ab3@15409>   ORI.w #$203C,D1      ;move.l #x,dn
0002C806 <AmiBlitz3.ab3@15410>   CMP.w #$3,D2
0002C80A <AmiBlitz3.ab3@15411>    BCC.w 'ok
0002C80E <AmiBlitz3.ab3@15412>   ORI.w #$1000,D1
0002C812 <AmiBlitz3.ab3@15413>    BSR.w writeword
0002C814 <AmiBlitz3.ab3@15414>   MOVE.w D0,D1
0002C818 <AmiBlitz3.ab3@15415>    BSR.w writeword
0002C81C <AmiBlitz3.ab3@15416>  BRA.w 'mode
0002C822 <AmiBlitz3.ab3@15420>   TST.b iee                                                ;fpu constant
0002C826 <AmiBlitz3.ab3@15421>   BEQ 'l10b
0002C82A <AmiBlitz3.ab3@15422>   CMP.b #5,d2
0002C82E <AmiBlitz3.ab3@15423>   BNE 'l10b
0002C830 <AmiBlitz3.ab3@15424>   MOVEQ #0,d1
0002C836 <AmiBlitz3.ab3@15425>   MOVE.w regnum,D1
0002C838 <AmiBlitz3.ab3@15426>   ASL.l #7,d1
0002C83E <AmiBlitz3.ab3@15427>   OR.l #$f23c5400,d1
0002C842 <AmiBlitz3.ab3@15428>   BSR writelong
0002C844 <AmiBlitz3.ab3@15429>   SUBQ.l #8,a7
0002C84A <AmiBlitz3.ab3@15430>   fmove.d fp0,0(a7)
0002C84C <AmiBlitz3.ab3@15431>   MOVE.l (a7)+,d1
0002C850 <AmiBlitz3.ab3@15432>   BSR writelong
0002C852 <AmiBlitz3.ab3@15433>   MOVE.l (a7)+,d1
0002C856 <AmiBlitz3.ab3@15434>   BSR writelong
0002C85A <AmiBlitz3.ab3@15435>  BRA 'mode
0002C85E <AmiBlitz3.ab3@15439>   BSR.w writeword
0002C860 <AmiBlitz3.ab3@15440>   MOVE.l D0,D1
0002C864 <AmiBlitz3.ab3@15441>   BSR.w writelong
0002C868 <AmiBlitz3.ab3@15448>   MOVEA.l forthsp(PC),A0
0002C86C <AmiBlitz3.ab3@15449>   MOVEA.l -$20(A0),A3
0002C872 <AmiBlitz3.ab3@15450>   MOVEA.l hunkoffsetbase,A2
0002C878 <AmiBlitz3.ab3@15451>   MOVE.l A3,hunkoffsetbase
0002C87E <AmiBlitz3.ab3@15452>   MOVEA.l _execbase,A6
0002C880 <AmiBlitz3.ab3@15455>   CMPA.l A3,A2
0002C884 <AmiBlitz3.ab3@15456>   BEQ.w 'done
0002C88A <AmiBlitz3.ab3@15457>   SUBQ.l #1,hunkoffsetcounter
0002C88C <AmiBlitz3.ab3@15458>   MOVEA.l A2,A1
0002C88E <AmiBlitz3.ab3@15459>   MOVEA.l (A2),A2
0002C890 <AmiBlitz3.ab3@15460>   MOVEQ.l #$8,D0
0002C896 <AmiBlitz3.ab3@15462>   MOVE.l mempool2,a0
0002C89A <AmiBlitz3.ab3@15463>    JSR _FreePooled(A6)
0002C89E <AmiBlitz3.ab3@15466>  BRA.w 'loop
0002C8A2 <AmiBlitz3.ab3@15469>   MOVEA.l forthsp(PC),A0
0002C8A6 <AmiBlitz3.ab3@15472>   LEA -$12(A0),A0
0002C8AC <AmiBlitz3.ab3@15473>   MOVE.l A0,forthsp
0002C8B0 <AmiBlitz3.ab3@15475>   MOVEM.l (A7)+,D1/A0
0002C8B4 <AmiBlitz3.ab3@15476>   BSR.w reget
0002C8B8 <AmiBlitz3.ab3@15477> BRA.w 'more
0002C8BC <AmiBlitz3.ab3@15486>   BSR.w getelement
0002C8BE <AmiBlitz3.ab3@15488>   TST.w d0
0002C8C2 <AmiBlitz3.ab3@15489>   BEQ 'done
0002C8C6 <AmiBlitz3.ab3@15490>   CMP.b #",",d0
0002C8CA <AmiBlitz3.ab3@15491>   BEQ 'done
0002C8CE <AmiBlitz3.ab3@15492>   CMP.b #"@",d0                                            ;expandline @@
0002C8D2 <AmiBlitz3.ab3@15493>   BEQ 'done
0002C8D8 <AmiBlitz3.ab3@15496>   LEA operators,A0
0002C8DA <AmiBlitz3.ab3@15499>    TST.w (A0)
0002C8DE <AmiBlitz3.ab3@15500>    BEQ.w 'done
0002C8E0 <AmiBlitz3.ab3@15501>   CMP.w (A0),D0
0002C8E4 <AmiBlitz3.ab3@15502>    BEQ.w 'found
0002C8E8 <AmiBlitz3.ab3@15503>   LEA $20(A0),A0
0002C8EC <AmiBlitz3.ab3@15504>  BRA.w 'loop
0002C8EE <AmiBlitz3.ab3@15507>   MOVEQ.l #$00,D1
0002C8F0 <AmiBlitz3.ab3@15508>  RTS
0002C8F4 <AmiBlitz3.ab3@15511>   CMP.w #$3C,D0
0002C8F8 <AmiBlitz3.ab3@15512>    BNE.w 'notlt
0002C8FC <AmiBlitz3.ab3@15513>    BSR.w get1bytemain
0002C900 <AmiBlitz3.ab3@15514>   CMP.w #$3D,D0
0002C904 <AmiBlitz3.ab3@15515>    BNE.w 'notlteq
0002C90A <AmiBlitz3.ab3@15516>   LEA ople,A0
0002C90E <AmiBlitz3.ab3@15517>  BRA.w 'found2
0002C912 <AmiBlitz3.ab3@15520>   CMP.w #$3E,D0          ;'>'
0002C916 <AmiBlitz3.ab3@15521>    BNE.w 'found3
0002C91A <AmiBlitz3.ab3@15522>  BRA.w 'isne
0002C91E <AmiBlitz3.ab3@15525>   CMP.w #$3E,D0          ;'>'
0002C922 <AmiBlitz3.ab3@15526>    BNE.w 'notqt
0002C926 <AmiBlitz3.ab3@15527>    BSR.w get1bytemain
0002C92A <AmiBlitz3.ab3@15528>   CMP.w #$3D,D0          ;'='
0002C92E <AmiBlitz3.ab3@15529>    BNE.w 'notgteq
0002C934 <AmiBlitz3.ab3@15530>   LEA opge,A0
0002C938 <AmiBlitz3.ab3@15531>  BRA.w 'found2
0002C93C <AmiBlitz3.ab3@15534>   CMP.w #$3C,D0          ;'<'
0002C940 <AmiBlitz3.ab3@15535>    BEQ.w 'isne
0002C94A <AmiBlitz3.ab3@15540>     MOVE.w oldqflag,instringon
0002C950 <AmiBlitz3.ab3@15541>     MOVEA.l lastsourcepos,A5
0002C954 <AmiBlitz3.ab3@15543>  BRA.w 'found2
0002C958 <AmiBlitz3.ab3@15546>   CMP.w #$3D,D0          ;'='
0002C95C <AmiBlitz3.ab3@15547>    BNE.w 'found2
0002C960 <AmiBlitz3.ab3@15548>    BSR.w get1bytemain
0002C964 <AmiBlitz3.ab3@15549>   CMP.w #$3E,D0          ;'>'
0002C968 <AmiBlitz3.ab3@15550>    BNE.w 'noteqgt
0002C96E <AmiBlitz3.ab3@15551>   LEA opge,A0
0002C972 <AmiBlitz3.ab3@15552>  BRA.w 'found2
0002C976 <AmiBlitz3.ab3@15555>   CMP.w #$3C,D0          ;'<'
0002C97A <AmiBlitz3.ab3@15556>   BNE.w 'found3
0002C980 <AmiBlitz3.ab3@15559>   LEA opne,A0
0002C984 <AmiBlitz3.ab3@15565>   MOVE.w $1E(A0),D1
0002C986 <AmiBlitz3.ab3@15566> RTS
0002C988 <AmiBlitz3.ab3@15575>   MOVE.w d2,d1
0002C98A <AmiBlitz3.ab3@15576>   SUBQ.w #1,D1
0002C98E <AmiBlitz3.ab3@15577>    BMI.w illoperr
0002C990 <AmiBlitz3.ab3@15578>   LSL.w #2,D1
0002C994 <AmiBlitz3.ab3@15579>   MOVE.l $2(A0,D1.W),D1
0002C998 <AmiBlitz3.ab3@15580>    BEQ.w illoperr
0002C99A <AmiBlitz3.ab3@15581>   MOVEA.l D1,A0
0002C99C <AmiBlitz3.ab3@15582> JMP (A0)
0002C9A0 <AmiBlitz3.ab3@15598>   MOVEA.l precsp(PC),A1
0002C9A6 <AmiBlitz3.ab3@15599>   CMPA.l #precstackf,A1
0002C9AA <AmiBlitz3.ab3@15600>    BCC.w pserr
0002C9AC <AmiBlitz3.ab3@15601>   MOVE.w -(A1),D1
0002C9AE <AmiBlitz3.ab3@15602>   MOVEA.l -(A1),A0
0002C9B4 <AmiBlitz3.ab3@15603>   MOVE.l A1,precsp
0002C9B6 <AmiBlitz3.ab3@15604> RTS
0002C9BA <AmiBlitz3.ab3@15607> precsp:      Dc.l precstack
0002CAB6 <AmiBlitz3.ab3@15608> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002CB3A <AmiBlitz3.ab3@15609>              Ds.l 33
0002CB3C <AmiBlitz3.ab3@15615> mseq:  SEQ D0
0002CB3E <AmiBlitz3.ab3@15616> msne:    SNE D0
0002CB40 <AmiBlitz3.ab3@15617> mslt:    SLT D0
0002CB42 <AmiBlitz3.ab3@15618> msle:    SLE D0
0002CB44 <AmiBlitz3.ab3@15619> msgt:    SGT D0
0002CB46 <AmiBlitz3.ab3@15620> msge:    SGE D0
0002CB48 <AmiBlitz3.ab3@15622> cmp0:    CMP.b D0,D0
0002CB4A <AmiBlitz3.ab3@15623> cmp1:    CMP.w D0,D0
0002CB4C <AmiBlitz3.ab3@15624> cmp2:    CMP.l D0,D0
0002CB50 <AmiBlitz3.ab3@15628>   MOVE.w cmp0(PC),D1
0002CB54 <AmiBlitz3.ab3@15629> BRA.w doeqcmp2                                            ;writecompare
0002CB58 <AmiBlitz3.ab3@15633>   MOVE.w cmp0(PC),D1
0002CB5C <AmiBlitz3.ab3@15634> BRA.w donecmp2
0002CB60 <AmiBlitz3.ab3@15638>   MOVE.w cmp0(PC),D1
0002CB64 <AmiBlitz3.ab3@15639> BRA.w doltcmp2
0002CB68 <AmiBlitz3.ab3@15643>   MOVE.w cmp0(PC),D1
0002CB6C <AmiBlitz3.ab3@15644> BRA.w dolecmp2
0002CB70 <AmiBlitz3.ab3@15648>   MOVE.w cmp0(PC),D1
0002CB74 <AmiBlitz3.ab3@15649> BRA.w dogtcmp2
0002CB78 <AmiBlitz3.ab3@15654>   MOVE.w cmp0(PC),D1
0002CB7C <AmiBlitz3.ab3@15655> BRA.w dogecmp2
0002CB80 <AmiBlitz3.ab3@15659>   MOVE.w cmp1(PC),D1
0002CB84 <AmiBlitz3.ab3@15660> BRA.w doeqcmp2
0002CB88 <AmiBlitz3.ab3@15664>   MOVE.w cmp1(PC),D1
0002CB8C <AmiBlitz3.ab3@15665> BRA.w donecmp2
0002CB90 <AmiBlitz3.ab3@15669>   MOVE.w cmp1(PC),D1
0002CB94 <AmiBlitz3.ab3@15670> BRA.w doltcmp2
0002CB98 <AmiBlitz3.ab3@15674>   MOVE.w cmp1(PC),D1
0002CB9C <AmiBlitz3.ab3@15675> BRA.w dolecmp2
0002CBA0 <AmiBlitz3.ab3@15679>   MOVE.w cmp1(PC),D1
0002CBA4 <AmiBlitz3.ab3@15680> BRA.w dogtcmp2
0002CBA8 <AmiBlitz3.ab3@15685>   MOVE.w cmp1(PC),D1
0002CBAC <AmiBlitz3.ab3@15686> BRA.w dogecmp2
0002CBB0 <AmiBlitz3.ab3@15690>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002CBB4 <AmiBlitz3.ab3@15691> BRA doeqcmp2
0002CBB8 <AmiBlitz3.ab3@15694>   MOVE.w cmp2(PC),D1
0002CBBC <AmiBlitz3.ab3@15695> BRA donecmp2
0002CBC0 <AmiBlitz3.ab3@15699>   MOVE.w cmp2(PC),D1
0002CBC4 <AmiBlitz3.ab3@15700> BRA.w doltcmp2
0002CBC8 <AmiBlitz3.ab3@15704>   MOVE.w cmp2(PC),D1
0002CBCC <AmiBlitz3.ab3@15705> BRA.w dolecmp2
0002CBD0 <AmiBlitz3.ab3@15709>   MOVE.w cmp2(PC),D1
0002CBD4 <AmiBlitz3.ab3@15710> BRA.w dogtcmp2
0002CBD8 <AmiBlitz3.ab3@15714>   MOVE.w cmp2(PC),D1
0002CBDC <AmiBlitz3.ab3@15715> BRA.w dogecmp2
0002CBDE <AmiBlitz3.ab3@15718> cfregat:  Ds.w 1
0002CBE4 <AmiBlitz3.ab3@15722>   MOVE.w D1,libjsr+2
0002CBE8 <AmiBlitz3.ab3@15723>    BSR.w savereg
0002CBEA <AmiBlitz3.ab3@15724>   MOVE.l D4,D1
0002CBEE <AmiBlitz3.ab3@15725>    BSR.w pokemovem
0002CBF2 <AmiBlitz3.ab3@15726>   MOVE.w #$C900,D1
0002CBF6 <AmiBlitz3.ab3@15727>    BSR.w Atokejsr
0002CBFA <AmiBlitz3.ab3@15728>    BSR.w ritetod0
0002CC00 <AmiBlitz3.ab3@15729>   MOVE.l libjsr,D1
0002CC04 <AmiBlitz3.ab3@15730>    BSR.w writelong
0002CC0E <AmiBlitz3.ab3@15731>   MOVE.w regnum,cfregat
0002CC14 <AmiBlitz3.ab3@15732>   CLR.w regnum
0002CC16 <AmiBlitz3.ab3@15733> RTS
0002CC20 <AmiBlitz3.ab3@15737>   MOVE.w cfregat,regnum
0002CC24 <AmiBlitz3.ab3@15738>    BSR.w ritefromd0
0002CC26 <AmiBlitz3.ab3@15739>   MOVE.l D5,D1
0002CC2A <AmiBlitz3.ab3@15740> BRA.w pokemovem
0002CC2C <AmiBlitz3.ab3@15744>    MOVEQ.l #-$2A,D1
0002CC32 <AmiBlitz3.ab3@15745>    TST.b fpu
0002CC36 <AmiBlitz3.ab3@15746>    BEQ 'nofpu
0002CC38 <AmiBlitz3.ab3@15747>    MOVEQ #0,d1
0002CC3E <AmiBlitz3.ab3@15748>    MOVE.w regnum,d1
0002CC40 <AmiBlitz3.ab3@15749>    MOVE.l d1,d2
0002CC42 <AmiBlitz3.ab3@15750>    ASL.l #7,d1
0002CC44 <AmiBlitz3.ab3@15751>    ADDQ  #1,d2
0002CC46 <AmiBlitz3.ab3@15752>    ASL.l #8,d2
0002CC48 <AmiBlitz3.ab3@15753>    ASL.l #2,d2
0002CC4A <AmiBlitz3.ab3@15754>    OR.l d2,d1
0002CC50 <AmiBlitz3.ab3@15755>    OR.l #$f2000038,d1
0002CC56 <AmiBlitz3.ab3@15756>    JSR writelong
0002CC5A <AmiBlitz3.ab3@15757>    MOVE.w #$f240,d1
0002CC60 <AmiBlitz3.ab3@15758>    OR.w regnum,d1
0002CC64 <AmiBlitz3.ab3@15759>    BSR writeword
0002CC66 <AmiBlitz3.ab3@15760>    MOVEQ.l #1,d2
0002CC6A <AmiBlitz3.ab3@15761>    MOVE.w #1,d1                                            ;fpu comp fseq
0002CC6E <AmiBlitz3.ab3@15762>    BSR writeword
0002CC70 <AmiBlitz3.ab3@15763>  RTS
0002CC74 <AmiBlitz3.ab3@15766>    BSR.w docflib
0002CC78 <AmiBlitz3.ab3@15767>    BSR.w doeqcmp
0002CC7C <AmiBlitz3.ab3@15768> BRA.w docflib2
0002CC7E <AmiBlitz3.ab3@15772>   MOVEQ.l #-$2A,D1
0002CC84 <AmiBlitz3.ab3@15773>   TST.b fpu
0002CC88 <AmiBlitz3.ab3@15774>    BEQ 'nofpu
0002CC8A <AmiBlitz3.ab3@15775>    MOVEQ #0,d1
0002CC90 <AmiBlitz3.ab3@15776>    MOVE.w regnum,d1
0002CC92 <AmiBlitz3.ab3@15777>    MOVE.l d1,d2
0002CC94 <AmiBlitz3.ab3@15778>    ASL.l #7,d1
0002CC96 <AmiBlitz3.ab3@15779>    ADDQ  #1,d2
0002CC98 <AmiBlitz3.ab3@15780>    ASL.l #8,d2
0002CC9A <AmiBlitz3.ab3@15781>    ASL.l #2,d2
0002CC9C <AmiBlitz3.ab3@15782>    OR.l d2,d1
0002CCA2 <AmiBlitz3.ab3@15783>    OR.l #$f2000038,d1
0002CCA8 <AmiBlitz3.ab3@15784>    JSR writelong
0002CCAC <AmiBlitz3.ab3@15785>    MOVE.w #$f240,d1
0002CCB2 <AmiBlitz3.ab3@15786>    OR.w regnum,d1
0002CCB6 <AmiBlitz3.ab3@15787>    BSR writeword
0002CCBC <AmiBlitz3.ab3@15788>    MOVE.l #1,d2
0002CCC0 <AmiBlitz3.ab3@15789>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002CCC4 <AmiBlitz3.ab3@15790>    BSR writeword
0002CCC6 <AmiBlitz3.ab3@15791>  RTS
0002CCCA <AmiBlitz3.ab3@15794>    BSR.w docflib
0002CCCE <AmiBlitz3.ab3@15795>    BSR.w donecmp
0002CCD2 <AmiBlitz3.ab3@15796> BRA.w docflib2
0002CCD4 <AmiBlitz3.ab3@15800>   MOVEQ.l #-$2A,D1
0002CCDA <AmiBlitz3.ab3@15801>     TST.b fpu
0002CCDE <AmiBlitz3.ab3@15802>    BEQ 'nofpu
0002CCE0 <AmiBlitz3.ab3@15803>    MOVEQ #0,d1
0002CCE6 <AmiBlitz3.ab3@15804>    MOVE.w regnum,d1
0002CCE8 <AmiBlitz3.ab3@15805>    MOVE.l d1,d2
0002CCEA <AmiBlitz3.ab3@15806>    ASL.l #7,d1
0002CCEC <AmiBlitz3.ab3@15807>    ADDQ  #1,d2
0002CCEE <AmiBlitz3.ab3@15808>    ASL.l #8,d2
0002CCF0 <AmiBlitz3.ab3@15809>    ASL.l #2,d2
0002CCF2 <AmiBlitz3.ab3@15810>    OR.l d2,d1
0002CCF8 <AmiBlitz3.ab3@15811>    OR.l #$f2000038,d1
0002CCFE <AmiBlitz3.ab3@15812>    JSR writelong
0002CD02 <AmiBlitz3.ab3@15813>    MOVE.w #$f240,d1
0002CD08 <AmiBlitz3.ab3@15814>    OR.w regnum,d1
0002CD0C <AmiBlitz3.ab3@15815>    BSR writeword
0002CD12 <AmiBlitz3.ab3@15816>    MOVE.l #$1,d2
0002CD16 <AmiBlitz3.ab3@15817>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002CD1A <AmiBlitz3.ab3@15818>    BSR writeword
0002CD1C <AmiBlitz3.ab3@15819>  RTS
0002CD20 <AmiBlitz3.ab3@15822>    BSR.w docflib
0002CD24 <AmiBlitz3.ab3@15823>    BSR.w doltcmp
0002CD28 <AmiBlitz3.ab3@15824> BRA.w docflib2
0002CD2A <AmiBlitz3.ab3@15828>   MOVEQ.l #-$2A,D1
0002CD30 <AmiBlitz3.ab3@15829>   TST.b fpu
0002CD34 <AmiBlitz3.ab3@15830>    BEQ 'nofpu
0002CD36 <AmiBlitz3.ab3@15831>    MOVEQ #0,d1
0002CD3C <AmiBlitz3.ab3@15832>    MOVE.w regnum,d1
0002CD3E <AmiBlitz3.ab3@15833>    MOVE.l d1,d2
0002CD40 <AmiBlitz3.ab3@15834>    ASL.l #7,d1
0002CD42 <AmiBlitz3.ab3@15835>    ADDQ  #1,d2
0002CD44 <AmiBlitz3.ab3@15836>    ASL.l #8,d2
0002CD46 <AmiBlitz3.ab3@15837>    ASL.l #2,d2
0002CD48 <AmiBlitz3.ab3@15838>    OR.l d2,d1
0002CD4E <AmiBlitz3.ab3@15839>    OR.l #$f2000038,d1
0002CD54 <AmiBlitz3.ab3@15840>    JSR writelong
0002CD58 <AmiBlitz3.ab3@15841>    MOVE.w #$f240,d1
0002CD5E <AmiBlitz3.ab3@15842>    OR.w regnum,d1
0002CD62 <AmiBlitz3.ab3@15843>    BSR writeword
0002CD68 <AmiBlitz3.ab3@15844>    MOVE.l #1,d2
0002CD6C <AmiBlitz3.ab3@15845>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002CD70 <AmiBlitz3.ab3@15846>    BSR writeword
0002CD72 <AmiBlitz3.ab3@15847>  RTS
0002CD76 <AmiBlitz3.ab3@15850>    BSR.w docflib
0002CD7A <AmiBlitz3.ab3@15851>    BSR.w dolecmp
0002CD7E <AmiBlitz3.ab3@15852> BRA.w docflib2
0002CD80 <AmiBlitz3.ab3@15856>   MOVEQ.l #-$2A,D1
0002CD86 <AmiBlitz3.ab3@15857>    TST.b fpu
0002CD8A <AmiBlitz3.ab3@15858>    BEQ 'nofpu
0002CD8C <AmiBlitz3.ab3@15859>     MOVEQ #0,d1
0002CD92 <AmiBlitz3.ab3@15860>    MOVE.w regnum,d1
0002CD94 <AmiBlitz3.ab3@15861>    MOVE.l d1,d2
0002CD96 <AmiBlitz3.ab3@15862>    ASL.l #7,d1
0002CD98 <AmiBlitz3.ab3@15863>    ADDQ  #1,d2
0002CD9A <AmiBlitz3.ab3@15864>    ASL.l #8,d2
0002CD9C <AmiBlitz3.ab3@15865>    ASL.l #2,d2
0002CD9E <AmiBlitz3.ab3@15866>    OR.l d2,d1
0002CDA4 <AmiBlitz3.ab3@15867>    OR.l #$f2000038,d1
0002CDAA <AmiBlitz3.ab3@15868>    JSR writelong
0002CDAE <AmiBlitz3.ab3@15869>    MOVE.w #$f240,d1
0002CDB4 <AmiBlitz3.ab3@15870>    OR.w regnum,d1
0002CDB8 <AmiBlitz3.ab3@15871>    BSR writeword
0002CDBE <AmiBlitz3.ab3@15872>    MOVE.l #1,d2
0002CDC2 <AmiBlitz3.ab3@15873>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002CDC6 <AmiBlitz3.ab3@15874>    BSR writeword
0002CDC8 <AmiBlitz3.ab3@15875>  RTS
0002CDCC <AmiBlitz3.ab3@15878>    BSR.w docflib
0002CDD0 <AmiBlitz3.ab3@15879>    BSR.w dogtcmp
0002CDD4 <AmiBlitz3.ab3@15880> BRA.w docflib2
0002CDD6 <AmiBlitz3.ab3@15884>   MOVEQ.l #-$2A,D1
0002CDDC <AmiBlitz3.ab3@15885>  TST.b fpu
0002CDE0 <AmiBlitz3.ab3@15886>    BEQ 'nofpu
0002CDE2 <AmiBlitz3.ab3@15887>    MOVEQ #0,d1
0002CDE8 <AmiBlitz3.ab3@15888>    MOVE.w regnum,d1
0002CDEA <AmiBlitz3.ab3@15889>    MOVE.l d1,d2
0002CDEC <AmiBlitz3.ab3@15890>    ASL.l #7,d1
0002CDEE <AmiBlitz3.ab3@15891>    ADDQ  #1,d2
0002CDF0 <AmiBlitz3.ab3@15892>    ASL.l #8,d2
0002CDF2 <AmiBlitz3.ab3@15893>    ASL.l #2,d2
0002CDF4 <AmiBlitz3.ab3@15894>    OR.l d2,d1
0002CDFA <AmiBlitz3.ab3@15895>    OR.l #$f2000038,d1
0002CE00 <AmiBlitz3.ab3@15896>    JSR writelong
0002CE04 <AmiBlitz3.ab3@15897>    MOVE.w #$f240,d1
0002CE0A <AmiBlitz3.ab3@15898>    OR.w regnum,d1
0002CE0E <AmiBlitz3.ab3@15899>    BSR writeword
0002CE14 <AmiBlitz3.ab3@15900>    MOVE.l #1,d2
0002CE18 <AmiBlitz3.ab3@15901>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002CE1C <AmiBlitz3.ab3@15902>    BSR writeword
0002CE1E <AmiBlitz3.ab3@15903>  RTS
0002CE22 <AmiBlitz3.ab3@15906>    BSR.w docflib
0002CE26 <AmiBlitz3.ab3@15907>    BSR.w dogecmp
0002CE2A <AmiBlitz3.ab3@15908> BRA.w docflib2
0002CE30 <AmiBlitz3.ab3@15913>   MOVE.l #$CE00,D1
0002CE36 <AmiBlitz3.ab3@15914>    MOVE.l d1,lastinstruction
0002CE3A <AmiBlitz3.ab3@15915>    BSR.w Atokejsr
0002CE3E <AmiBlitz3.ab3@15916> BRA.w doeqcmp
0002CE44 <AmiBlitz3.ab3@15920>   MOVE.l #$CE00,D1
0002CE4A <AmiBlitz3.ab3@15921>    MOVE.l d1,lastinstruction
0002CE4E <AmiBlitz3.ab3@15922>    BSR.w Atokejsr
0002CE52 <AmiBlitz3.ab3@15923> BRA.w donecmp
0002CE58 <AmiBlitz3.ab3@15927>   MOVE.l #$CE00,D1
0002CE5E <AmiBlitz3.ab3@15928>    MOVE.l d1,lastinstruction
0002CE62 <AmiBlitz3.ab3@15929>    BSR.w Atokejsr
0002CE66 <AmiBlitz3.ab3@15930> BRA.w doltcmp
0002CE6C <AmiBlitz3.ab3@15934>   MOVE.l #$CE00,D1
0002CE72 <AmiBlitz3.ab3@15935>    MOVE.l d1,lastinstruction
0002CE76 <AmiBlitz3.ab3@15936>    BSR.w Atokejsr
0002CE7A <AmiBlitz3.ab3@15937> BRA.w dolecmp
0002CE80 <AmiBlitz3.ab3@15941>   MOVE.l #$CE00,D1
0002CE86 <AmiBlitz3.ab3@15942>    MOVE.l d1,lastinstruction
0002CE8A <AmiBlitz3.ab3@15943>    BSR.w Atokejsr
0002CE8E <AmiBlitz3.ab3@15944> BRA.w dogtcmp
0002CE94 <AmiBlitz3.ab3@15948>   MOVE.l #$CE00,D1
0002CE9A <AmiBlitz3.ab3@15949>    MOVE.l d1,lastinstruction
0002CE9E <AmiBlitz3.ab3@15950>    BSR.w Atokejsr
0002CEA2 <AmiBlitz3.ab3@15951> BRA.w dogecmp
0002CEA8 <AmiBlitz3.ab3@15956>   TST.b fast                                               ;compare
0002CEAC <AmiBlitz3.ab3@15957>   BEQ 'org
0002CEB2 <AmiBlitz3.ab3@15961>   MOVE.l destpointer,a0
0002CEB8 <AmiBlitz3.ab3@15962>   SUB.l imm_addr,a0
0002CEBE <AmiBlitz3.ab3@15963>   CMP.l #6,a0
0002CEC2 <AmiBlitz3.ab3@15964>   BNE 'l11
0002CEC8 <AmiBlitz3.ab3@15965>   MOVE.l imm_addr,a0
0002CED0 <AmiBlitz3.ab3@15966>   CMP.w #$223c,imm_addr
0002CED4 <AmiBlitz3.ab3@15967>   BNE 'org
0002CEDA <AmiBlitz3.ab3@15968>   ADD.w #$8e80,-6(a4)
0002CEE0 <AmiBlitz3.ab3@15971>   CLR.l imm_addr
0002CEE2 <AmiBlitz3.ab3@15972>  RTS
0002CEE8 <AmiBlitz3.ab3@15975>   CMP.l #4,a0
0002CEEC <AmiBlitz3.ab3@15976>   BNE 'l10
0002CEF0 <AmiBlitz3.ab3@15977>   CMP.b #2,d3
0002CEF4 <AmiBlitz3.ab3@15978>   BNE 'l11b
0002CEFA <AmiBlitz3.ab3@15979>   ADD.w #$7e40,-4(a4)
0002CEFC <AmiBlitz3.ab3@15980>  RTS
0002CF02 <AmiBlitz3.ab3@15983>   ADD.w #$7e00,-4(a4)
0002CF04 <AmiBlitz3.ab3@15984>  RTS
0002CF0A <AmiBlitz3.ab3@15987>    MOVE.l destpointer,a0
0002CF10 <AmiBlitz3.ab3@15988>    SUB.l load_var_addr,a0
0002CF14 <AmiBlitz3.ab3@15989>    CMP.w #4,a0
0002CF18 <AmiBlitz3.ab3@15990>    BNE 'org
0002CF1C <AmiBlitz3.ab3@15991>    CMP.b #3,d3
0002CF20 <AmiBlitz3.ab3@15992>    BCS 'lv1
0002CF26 <AmiBlitz3.ab3@15993>    CLR.l load_var_addr
0002CF2C <AmiBlitz3.ab3@15994>    ADD.w #$9080-$200,-4(a4)
0002CF2E <AmiBlitz3.ab3@15995>  RTS
0002CF32 <AmiBlitz3.ab3@15998>   CMP.b #2,d3
0002CF36 <AmiBlitz3.ab3@15999>    BNE 'org
0002CF3C <AmiBlitz3.ab3@16000>    CLR.l load_var_addr
0002CF42 <AmiBlitz3.ab3@16001>    ADD.w #$8040-$200,-4(a4)
0002CF44 <AmiBlitz3.ab3@16002>  RTS
0002CF4A <AmiBlitz3.ab3@16005>   MOVE.w regnum,D3
0002CF4C <AmiBlitz3.ab3@16006>   OR.w D3,D1
0002CF4E <AmiBlitz3.ab3@16007>   LSL.w #8,D3
0002CF50 <AmiBlitz3.ab3@16008>   LSL.w #1,D3
0002CF52 <AmiBlitz3.ab3@16009>   OR.w D3,D1
0002CF54 <AmiBlitz3.ab3@16010>   ADDQ.w #1,D1
0002CF58 <AmiBlitz3.ab3@16011> BRA.w writeword
0002CF5C <AmiBlitz3.ab3@16015>    BSR.w cmpit
0002CF60 <AmiBlitz3.ab3@16018>    MOVE.w mseq(PC),D1
0002CF64 <AmiBlitz3.ab3@16019> BRA.w cpoke
0002CF68 <AmiBlitz3.ab3@16023>   BSR.w cmpit
0002CF6C <AmiBlitz3.ab3@16026>   MOVE.w msne(PC),D1
0002CF70 <AmiBlitz3.ab3@16027> BRA.w cpoke
0002CF74 <AmiBlitz3.ab3@16031>   BSR.w cmpit
0002CF78 <AmiBlitz3.ab3@16034>    MOVE.w mslt(PC),D1
0002CF7C <AmiBlitz3.ab3@16035> BRA.w cpoke
0002CF80 <AmiBlitz3.ab3@16039>    BSR.w cmpit
0002CF84 <AmiBlitz3.ab3@16042>    MOVE.w msle(PC),D1
0002CF88 <AmiBlitz3.ab3@16043> BRA.w cpoke
0002CF8C <AmiBlitz3.ab3@16047>    BSR.w cmpit
0002CF90 <AmiBlitz3.ab3@16050>    MOVE.w msgt(PC),D1
0002CF94 <AmiBlitz3.ab3@16051> BRA.w cpoke
0002CF98 <AmiBlitz3.ab3@16055>   BSR.w cmpit
0002CF9C <AmiBlitz3.ab3@16058>    MOVE.w msge(PC),D1
0002CFA2 <AmiBlitz3.ab3@16061>    OR.w regnum,D1
0002CFA6 <AmiBlitz3.ab3@16062>    CMP.w #5,d2
0002CFAA <AmiBlitz3.ab3@16063>    BNE 'nod0
0002CFAE <AmiBlitz3.ab3@16064>    CMP.w #5,d3
0002CFB2 <AmiBlitz3.ab3@16065>    BNE 'nod0
0002CFB4 <AmiBlitz3.ab3@16066>    MOVE.l d1,-(a7)
0002CFBA <AmiBlitz3.ab3@16067>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002CFBE <AmiBlitz3.ab3@16068>    BSR writelong
0002CFC0 <AmiBlitz3.ab3@16069>    MOVE.l (a7)+,d1
0002CFC4 <AmiBlitz3.ab3@16072>    BSR.w writeword                                         ;writeseq
0002CFC6 <AmiBlitz3.ab3@16073>    MOVEQ.l #1,d2
0002CFCC <AmiBlitz3.ab3@16074>    MOVE.l lasttoken,d1
0002CFD2 <AmiBlitz3.ab3@16075>     TST.b fast
0002CFD6 <AmiBlitz3.ab3@16076>     BEQ.s 'l11
0002CFDC <AmiBlitz3.ab3@16077>    CMP.l #$800b,d1
0002CFE0 <AmiBlitz3.ab3@16078>    BEQ 'l10
0002CFE4 <AmiBlitz3.ab3@16081>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002CFEA <AmiBlitz3.ab3@16082>   OR.w regnum,D1
0002CFEE <AmiBlitz3.ab3@16083>    BSR.w writeword                                         ;writeext.w
0002CFF0 <AmiBlitz3.ab3@16084>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002CFF2 <AmiBlitz3.ab3@16087> RTS
0002CFF6 <AmiBlitz3.ab3@16092>   MOVE.w #$D040,D1
0002CFF8 <AmiBlitz3.ab3@16093>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002CFFC <AmiBlitz3.ab3@16094> BRA.w doplus2
0002D000 <AmiBlitz3.ab3@16098>   MOVE.w #$D040,D1
0002D002 <AmiBlitz3.ab3@16099>   MOVEQ.l #$03,D2                                          ;now a long
0002D006 <AmiBlitz3.ab3@16100>    BSR.w doplus2
0002D00A <AmiBlitz3.ab3@16101> BRA.w convert_word_to_long
0002D00E <AmiBlitz3.ab3@16105>   MOVE.w #$D080,D1                                         ;writeaddlong
0002D010 <AmiBlitz3.ab3@16108>   MOVE.w d1,a1
0002D016 <AmiBlitz3.ab3@16109>   TST.b fast
0002D01A <AmiBlitz3.ab3@16110>   BEQ 'l10
0002D01C <AmiBlitz3.ab3@16114>   ASR.w #8,d1
0002D020 <AmiBlitz3.ab3@16115>   CMP.b #$90,d1
0002D024 <AmiBlitz3.ab3@16116>   BEQ 'sub1
0002D028 <AmiBlitz3.ab3@16117>   CMP.b #$d0,d1
0002D02C <AmiBlitz3.ab3@16118>   BNE 'l10
0002D030 <AmiBlitz3.ab3@16119>   CMP.b #3,d3
0002D034 <AmiBlitz3.ab3@16120>   BCS 'lq10
0002D03A <AmiBlitz3.ab3@16121>   TST.b quickadd
0002D040 <AmiBlitz3.ab3@16125>    MOVE.l destpointer,a0
0002D046 <AmiBlitz3.ab3@16126>    CLR.b quickadd
0002D04C <AmiBlitz3.ab3@16127>    CLR.l load_var_addr
0002D052 <AmiBlitz3.ab3@16128>    SUB.l imm_addr,a0
0002D056 <AmiBlitz3.ab3@16129>    CMP.w #6,a0
0002D05A <AmiBlitz3.ab3@16130>    BEQ 'li10
0002D05E <AmiBlitz3.ab3@16131>    CMP.w #4,a0
0002D062 <AmiBlitz3.ab3@16132>    BNE.s 'li1
0002D068 <AmiBlitz3.ab3@16133>    CLR.l imm_addr
0002D06E <AmiBlitz3.ab3@16134>    ADD.w #$a040-$200,-4(a4)
0002D070 <AmiBlitz3.ab3@16135>  RTS
0002D072 <AmiBlitz3.ab3@16138>    MOVE.l a4,a0
0002D078 <AmiBlitz3.ab3@16139>    SUB.l load_var_addr,a0
0002D07E <AmiBlitz3.ab3@16140>    CMP.l #$a,a0
0002D082 <AmiBlitz3.ab3@16141>    BNE 'l10e
0002D088 <AmiBlitz3.ab3@16142>    CLR.l load_var_addr
0002D08C <AmiBlitz3.ab3@16143>    MOVE.w -$8(a4),d1
0002D092 <AmiBlitz3.ab3@16144>    MOVE.l -$4(a4),-$8(a4)
0002D096 <AmiBlitz3.ab3@16145>    MOVE.w d1,-$4(a4)
0002D09C <AmiBlitz3.ab3@16146>    SUB.w #$1980,-$a(a4)
0002D0A2 <AmiBlitz3.ab3@16147>    SUBQ.l #2,destpointer
0002D0A4 <AmiBlitz3.ab3@16148>  RTS
0002D0AA <AmiBlitz3.ab3@16151>   CLR.b quickadd
0002D0AE <AmiBlitz3.ab3@16152>  BRA 'l10
0002D0B4 <AmiBlitz3.ab3@16155>    CLR.l imm_addr
0002D0B8 <AmiBlitz3.ab3@16156>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002D0BC <AmiBlitz3.ab3@16157>    BNE 'doit
0002D0C2 <AmiBlitz3.ab3@16158>    SUBQ.l #6,destpointer
0002D0C4 <AmiBlitz3.ab3@16159>  RTS
0002D0CA <AmiBlitz3.ab3@16162>    ADD.w #$b080-$200,-6(a4)
0002D0CC <AmiBlitz3.ab3@16163>  RTS
0002D0D2 <AmiBlitz3.ab3@16166>    MOVE.l destpointer,a0
0002D0D8 <AmiBlitz3.ab3@16167>    SUB.l load_var_addr,a0
0002D0DC <AmiBlitz3.ab3@16168>    CMP.w #4,a0
0002D0E0 <AmiBlitz3.ab3@16169>    BNE 'l10
0002D0E4 <AmiBlitz3.ab3@16170>    CMP.b #3,d3
0002D0E8 <AmiBlitz3.ab3@16171>    BNE 'lv1
0002D0EE <AmiBlitz3.ab3@16172>    CLR.l load_var_addr
0002D0F4 <AmiBlitz3.ab3@16173>    ADD.w #$b080-$200,-4(a4)
0002D0F6 <AmiBlitz3.ab3@16174>  RTS
0002D0FA <AmiBlitz3.ab3@16177>   CMP.b #2,d3
0002D0FE <AmiBlitz3.ab3@16178>   BNE 'l10
0002D104 <AmiBlitz3.ab3@16179>   CLR.l load_var_addr
0002D10A <AmiBlitz3.ab3@16180>   ADD.w #$a040-$200,-4(a4)
0002D10C <AmiBlitz3.ab3@16181>  RTS
0002D112 <AmiBlitz3.ab3@16184>   MOVE.w regnum,D3
0002D114 <AmiBlitz3.ab3@16185>   MOVE.w a1,d1
0002D116 <AmiBlitz3.ab3@16186>   OR.w D3,D1
0002D118 <AmiBlitz3.ab3@16187>   ADDQ.w #1,D1
0002D11A <AmiBlitz3.ab3@16188>   LSL.w #8,D3
0002D11C <AmiBlitz3.ab3@16189>   LSL.w #1,D3
0002D11E <AmiBlitz3.ab3@16190>   OR.w D3,D1
0002D122 <AmiBlitz3.ab3@16191>  BRA.w writeword
0002D126 <AmiBlitz3.ab3@16194>    CMP.b #3,d3
0002D12A <AmiBlitz3.ab3@16195>    BCS 'sub1_lq10
0002D130 <AmiBlitz3.ab3@16196>    TST.b quickadd
0002D136 <AmiBlitz3.ab3@16200>    MOVE.l destpointer,a0
0002D13C <AmiBlitz3.ab3@16201>    CLR.b quickadd
0002D142 <AmiBlitz3.ab3@16202>    CLR.l load_var_addr
0002D148 <AmiBlitz3.ab3@16203>    SUB.l imm_addr,a0
0002D14C <AmiBlitz3.ab3@16204>    CMP.w #6,a0
0002D150 <AmiBlitz3.ab3@16205>    BEQ 'sub1_li10
0002D154 <AmiBlitz3.ab3@16206>    CMP.w #4,a0
0002D158 <AmiBlitz3.ab3@16207>    BNE.s 'sub1_li1
0002D15E <AmiBlitz3.ab3@16208>    CLR.l imm_addr
0002D164 <AmiBlitz3.ab3@16209>    ADD.w #$6040-$200,-4(a4)
0002D166 <AmiBlitz3.ab3@16210>  RTS
0002D168 <AmiBlitz3.ab3@16213>    MOVE.l a4,a0
0002D16E <AmiBlitz3.ab3@16214>     SUB.l load_var_addr,a0
0002D174 <AmiBlitz3.ab3@16215>     CMP.l #$a,a0
0002D178 <AmiBlitz3.ab3@16216>     BNE 'sub1_l10e
0002D17E <AmiBlitz3.ab3@16217>    CLR.l load_var_addr
0002D182 <AmiBlitz3.ab3@16218>    MOVE.w -$8(a4),d1
0002D188 <AmiBlitz3.ab3@16219>    MOVE.l -$4(a4),-$8(a4)
0002D18C <AmiBlitz3.ab3@16220>    MOVE.w d1,-$4(a4)
0002D192 <AmiBlitz3.ab3@16221>    SUB.w #$1b80,-$a(a4)
0002D198 <AmiBlitz3.ab3@16222>    SUBQ.l #2,destpointer
0002D19A <AmiBlitz3.ab3@16223>  RTS
0002D1A0 <AmiBlitz3.ab3@16226>   CLR.b quickadd
0002D1A4 <AmiBlitz3.ab3@16227>  BRA 'sub1_l10
0002D1AA <AmiBlitz3.ab3@16230>    CLR.l imm_addr
0002D1B0 <AmiBlitz3.ab3@16231>    ADD.w #$7080-$200,-6(a4)
0002D1B2 <AmiBlitz3.ab3@16232>  RTS
0002D1B8 <AmiBlitz3.ab3@16235>    MOVE.l destpointer,a0
0002D1BE <AmiBlitz3.ab3@16236>    SUB.l load_var_addr,a0
0002D1C2 <AmiBlitz3.ab3@16237>    CMP.w #4,a0
0002D1C6 <AmiBlitz3.ab3@16238>    BNE 'sub1_l10
0002D1CA <AmiBlitz3.ab3@16239>    CMP.b #3,d3
0002D1CE <AmiBlitz3.ab3@16240>    BNE 'sub1_lv1
0002D1D4 <AmiBlitz3.ab3@16241>    CLR.l load_var_addr
0002D1DA <AmiBlitz3.ab3@16242>    ADD.w #$7080-$200,-4(a4)
0002D1DC <AmiBlitz3.ab3@16243>  RTS
0002D1E0 <AmiBlitz3.ab3@16246>    CMP.b #2,d3
0002D1E4 <AmiBlitz3.ab3@16247>    BNE 'sub1_l10
0002D1EA <AmiBlitz3.ab3@16248>    CLR.l load_var_addr
0002D1F0 <AmiBlitz3.ab3@16249>    ADD.w #$6040-$200,-4(a4)
0002D1F2 <AmiBlitz3.ab3@16250>  RTS
0002D1F8 <AmiBlitz3.ab3@16253>   MOVE.w regnum,D3
0002D1FA <AmiBlitz3.ab3@16254>   MOVE.w a1,d1
0002D1FC <AmiBlitz3.ab3@16255>   OR.w D3,D1
0002D1FE <AmiBlitz3.ab3@16256>   ADDQ.w #1,D1
0002D200 <AmiBlitz3.ab3@16257>   LSL.w #8,D3
0002D202 <AmiBlitz3.ab3@16258>   LSL.w #1,D3
0002D204 <AmiBlitz3.ab3@16259>   OR.w D3,D1
0002D208 <AmiBlitz3.ab3@16260> BRA.w writeword
0002D20A <AmiBlitz3.ab3@16264>   MOVEQ #0,d0
0002D210 <AmiBlitz3.ab3@16265>   MOVE.w regnum,d0
0002D212 <AmiBlitz3.ab3@16266>   ADDQ #1,d0
0002D214 <AmiBlitz3.ab3@16267>   ASL.w #8,d0
0002D216 <AmiBlitz3.ab3@16268>   ASL.w #2,d0
0002D21C <AmiBlitz3.ab3@16269>   MOVE.l #$f2000022,d1                                     ;fpu add
0002D21E <AmiBlitz3.ab3@16270>   OR.l d0,d1
0002D224 <AmiBlitz3.ab3@16271>   MOVE.w regnum,d0
0002D226 <AmiBlitz3.ab3@16272>   ASL.w #7,d0
0002D228 <AmiBlitz3.ab3@16273>   OR.l d0,d1
0002D22C <AmiBlitz3.ab3@16274> BRA.w writelong
0002D232 <AmiBlitz3.ab3@16281>   TST.b iee
0002D236 <AmiBlitz3.ab3@16282>   BNE do_plus_float_fadd1
0002D23A <AmiBlitz3.ab3@16283>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002D240 <AmiBlitz3.ab3@16286>    MOVE.w D1,libjsr+2
0002D244 <AmiBlitz3.ab3@16287>    BSR.w savereg
0002D246 <AmiBlitz3.ab3@16288>   MOVE.l D4,D1
0002D24A <AmiBlitz3.ab3@16289>    BSR.w pokemovem
0002D24E <AmiBlitz3.ab3@16290>   MOVE.w #$C900,D1
0002D252 <AmiBlitz3.ab3@16291>    BSR.w Atokejsr
0002D256 <AmiBlitz3.ab3@16292>    BSR.w ritetod0
0002D25C <AmiBlitz3.ab3@16293>   MOVE.l libjsr,D1
0002D260 <AmiBlitz3.ab3@16294>    BSR.w writelong
0002D264 <AmiBlitz3.ab3@16295>    BSR.w ritefromd0
0002D266 <AmiBlitz3.ab3@16296>   MOVE.l D5,D1
0002D26A <AmiBlitz3.ab3@16297> BRA.w pokemovem
0002D270 <AmiBlitz3.ab3@16301>   MOVE.w regnum,D1
0002D272 <AmiBlitz3.ab3@16302>   LSL.w #8,D1
0002D274 <AmiBlitz3.ab3@16303>   LSL.w #1,D1
0002D276 <AmiBlitz3.ab3@16304>   MOVE.w D1,-(A7)
0002D27A <AmiBlitz3.ab3@16305>   CMP.w #3072,d1
0002D27E <AmiBlitz3.ab3@16306>   BEQ 'l1
0002D284 <AmiBlitz3.ab3@16307>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002D288 <AmiBlitz3.ab3@16308> BRA 'l2
0002D28C <AmiBlitz3.ab3@16311>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002D290 <AmiBlitz3.ab3@16314>    BSR.w writeword
0002D292 <AmiBlitz3.ab3@16315>   MOVE.w (A7)+,D1
0002D298 <AmiBlitz3.ab3@16316>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002D29C <AmiBlitz3.ab3@16317> BRA.w writeword
0002D2A0 <AmiBlitz3.ab3@16323>   MOVE.w #$9040,D1
0002D2A4 <AmiBlitz3.ab3@16324> BRA.w doplus2
0002D2A8 <AmiBlitz3.ab3@16328>   MOVE.w #$9040,D1
0002D2AC <AmiBlitz3.ab3@16329> BRA.w doplus2
0002D2B0 <AmiBlitz3.ab3@16333>   MOVE.w #$9080,D1
0002D2B4 <AmiBlitz3.ab3@16334> BRA.w doplus2
0002D2BA <AmiBlitz3.ab3@16338>    TST.b iee
0002D2BE <AmiBlitz3.ab3@16339>     BNE 'fs1
0002D2C2 <AmiBlitz3.ab3@16340>   MOVE.w #$FFB8,D1                                         ;floatsub
0002D2C6 <AmiBlitz3.ab3@16341> BRA.w doflib
0002D2C8 <AmiBlitz3.ab3@16344>   MOVEQ #0,d0
0002D2CE <AmiBlitz3.ab3@16345>   MOVE.w regnum,d0
0002D2D0 <AmiBlitz3.ab3@16346>   ADDQ #1,d0
0002D2D2 <AmiBlitz3.ab3@16347>   ASL.w #8,d0
0002D2D4 <AmiBlitz3.ab3@16348>   ASL.w #2,d0
0002D2DA <AmiBlitz3.ab3@16349>   MOVE.l #$f2000028,d1
0002D2DC <AmiBlitz3.ab3@16350>   OR.l d0,d1
0002D2E2 <AmiBlitz3.ab3@16351>   MOVE.w regnum,d0
0002D2E4 <AmiBlitz3.ab3@16352>   ASL.w #7,d0
0002D2E6 <AmiBlitz3.ab3@16353>   OR.l d0,d1
0002D2EA <AmiBlitz3.ab3@16354> BRA.w writelong
0002D2EE <AmiBlitz3.ab3@16360>   MOVE.w #$C1C0,D1
0002D2F0 <AmiBlitz3.ab3@16361>   MOVEQ.l #$02,D2                                          ;now a word
0002D2F4 <AmiBlitz3.ab3@16362> BRA.w doplus2
0002D2F8 <AmiBlitz3.ab3@16366>   MOVE.w #$C1C0,D1
0002D2FA <AmiBlitz3.ab3@16367>   MOVEQ.l #$03,D2                                          ;now a long.
0002D2FE <AmiBlitz3.ab3@16368> BRA.w doplus2
0002D302 <AmiBlitz3.ab3@16372>   MOVE.w #$CA00,D1                                         ;quickmul
0002D306 <AmiBlitz3.ab3@16373> BRA.w domylib
0002D30C <AmiBlitz3.ab3@16377>   TST.b fast
0002D310 <AmiBlitz3.ab3@16378>   BNE.s 'l10
0002D314 <AmiBlitz3.ab3@16379>   MOVE.w #$CA01,D1                                         ;writelongmul
0002D318 <AmiBlitz3.ab3@16380> BRA.w domylib
0002D31E <AmiBlitz3.ab3@16389>    MOVE.l destpointer,a0
0002D324 <AmiBlitz3.ab3@16390>    SUB.l imm_addr,a0
0002D328 <AmiBlitz3.ab3@16391>    CMP.w #6,a0
0002D32C <AmiBlitz3.ab3@16392>    BNE 'li1
0002D32E <AmiBlitz3.ab3@16393>    MOVEQ.l #2,d1
0002D330 <AmiBlitz3.ab3@16394>    MOVEQ #1,d3
0002D334 <AmiBlitz3.ab3@16397>   CMP.l -4(a4),d1
0002D338 <AmiBlitz3.ab3@16398>    BEQ 'oklsl
0002D33A <AmiBlitz3.ab3@16399>     LSL.l #1,d1
0002D340 <AmiBlitz3.ab3@16400>     ADD.l #1,d3
0002D346 <AmiBlitz3.ab3@16401>     CMP.l #9,d3
0002D34A <AmiBlitz3.ab3@16402>     BNE 'ag
0002D34E <AmiBlitz3.ab3@16403>    MOVE.w -2(a4),d1
0002D352 <AmiBlitz3.ab3@16404>    BSR writeword
0002D358 <AmiBlitz3.ab3@16405>    MOVE.w -6(a4),-4(a4)
0002D360 <AmiBlitz3.ab3@16406>    MOVE.l #$4c3c0800,-8(a4)
0002D366 <AmiBlitz3.ab3@16407>    MOVE.w regnum,D3
0002D36A <AmiBlitz3.ab3@16408>    MULS #$1000,D3
0002D36E <AmiBlitz3.ab3@16409>    OR.w D3,-6(a4)
0002D374 <AmiBlitz3.ab3@16410>    CLR.l load_var_addr
0002D37A <AmiBlitz3.ab3@16411>    CLR.l imm_addr
0002D37E <AmiBlitz3.ab3@16412> BRA 'li3
0002D382 <AmiBlitz3.ab3@16415>    CMP.w #8,d3
0002D386 <AmiBlitz3.ab3@16416>    BEQ 'ok
0002D388 <AmiBlitz3.ab3@16417>    ASL.l #1,d3
0002D38A <AmiBlitz3.ab3@16418>    ASL.l #8,d3
0002D38E <AmiBlitz3.ab3@16419>    MOVE.w #$e188,d1
0002D390 <AmiBlitz3.ab3@16420>    OR.w d3,d1
0002D394 <AmiBlitz3.ab3@16421>    MOVE.w d1,-6(a4)
0002D398 <AmiBlitz3.ab3@16422> BRA 'okls
0002D39E <AmiBlitz3.ab3@16425>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002D3A4 <AmiBlitz3.ab3@16428>   MOVE.w regnum,d3
0002D3A8 <AmiBlitz3.ab3@16429>    OR.b d3,-5(a4)
0002D3AE <AmiBlitz3.ab3@16430>    SUBQ.l #4,destpointer
0002D3B4 <AmiBlitz3.ab3@16431>    CLR.l load_var_addr
0002D3BA <AmiBlitz3.ab3@16432>    CLR.l imm_addr
0002D3BE <AmiBlitz3.ab3@16433> BRA 'li3
0002D3C4 <AmiBlitz3.ab3@16436>    MOVE.l destpointer,a0
0002D3CA <AmiBlitz3.ab3@16437>    SUB.l load_var_addr,a0
0002D3CE <AmiBlitz3.ab3@16438>    CMP.w #4,a0
0002D3D2 <AmiBlitz3.ab3@16439>    BNE 'li2
0002D3D6 <AmiBlitz3.ab3@16440>    MOVE.w -2(a4),d1
0002D3DA <AmiBlitz3.ab3@16441>    BSR writeword
0002D3E0 <AmiBlitz3.ab3@16442>    MOVE.b #$4c,-6(a4)
0002D3E6 <AmiBlitz3.ab3@16443>    MOVE.w #$0800,-4(a4)
0002D3EC <AmiBlitz3.ab3@16444>    MOVE.w regnum,D3
0002D3F0 <AmiBlitz3.ab3@16445>    MULS #$1000,d3
0002D3F4 <AmiBlitz3.ab3@16446>    OR.w D3,-4(a4)
0002D3F8 <AmiBlitz3.ab3@16447> BRA 'li3
0002D3FE <AmiBlitz3.ab3@16450>    MOVE.l #$4c010800,d1
0002D404 <AmiBlitz3.ab3@16451>    MOVE.w regnum,D3
0002D406 <AmiBlitz3.ab3@16452>    EXT.l d3
0002D40A <AmiBlitz3.ab3@16453>    MULS #$1000,d3
0002D40C <AmiBlitz3.ab3@16454>    OR.w D3,d1
0002D410 <AmiBlitz3.ab3@16455>    MULS #$10,d3
0002D412 <AmiBlitz3.ab3@16456>    ADD.l d3,d1
0002D416 <AmiBlitz3.ab3@16457>    BSR writelong
0002D418 <AmiBlitz3.ab3@16462> RTS
0002D41A <AmiBlitz3.ab3@16466>   MOVE.w D1,-(A7)
0002D41E <AmiBlitz3.ab3@16467>    BSR.w savereg
0002D420 <AmiBlitz3.ab3@16468>   MOVE.l D4,D1
0002D424 <AmiBlitz3.ab3@16469>    BSR.w pokemovem
0002D428 <AmiBlitz3.ab3@16470>    BSR.w ritetod0
0002D42A <AmiBlitz3.ab3@16471>   MOVEQ #0,d1
0002D42C <AmiBlitz3.ab3@16472>   MOVE.w (A7)+,D1
0002D432 <AmiBlitz3.ab3@16473>   MOVE.l d1,lastinstruction
0002D436 <AmiBlitz3.ab3@16474>    BSR.w Atokejsr
0002D43A <AmiBlitz3.ab3@16475>    BSR.w ritefromd0
0002D43C <AmiBlitz3.ab3@16476>   MOVE.l D5,D1
0002D440 <AmiBlitz3.ab3@16477> BRA.w pokemovem
0002D446 <AmiBlitz3.ab3@16481>    TST.b iee
0002D44A <AmiBlitz3.ab3@16482>     BNE fm1
0002D44E <AmiBlitz3.ab3@16483>  MOVE.w #$FFB2,D1                                          ;floatmul
0002D452 <AmiBlitz3.ab3@16484> BRA.w doflib
0002D454 <AmiBlitz3.ab3@16487>   MOVEQ #0,d0
0002D45A <AmiBlitz3.ab3@16488>  MOVE.w regnum,d0
0002D45C <AmiBlitz3.ab3@16489>  ADDQ #1,d0
0002D45E <AmiBlitz3.ab3@16490>  ASL.w #8,d0
0002D460 <AmiBlitz3.ab3@16491>  ASL.w #2,d0
0002D466 <AmiBlitz3.ab3@16492>  MOVE.l #$f2000023,d1
0002D468 <AmiBlitz3.ab3@16493>  OR.l d0,d1
0002D46E <AmiBlitz3.ab3@16494>  MOVE.w regnum,d0
0002D470 <AmiBlitz3.ab3@16495>  ASL.w #7,d0
0002D472 <AmiBlitz3.ab3@16496>  OR.l d0,d1
0002D476 <AmiBlitz3.ab3@16497> BRA.w writelong
0002D478 <AmiBlitz3.ab3@16501>   MOVE.w D2,-(A7)                                          ;dopow
0002D47A <AmiBlitz3.ab3@16502>   MOVE.w D2,D3
0002D47C <AmiBlitz3.ab3@16503>   MOVEQ.l #$05,D2
0002D480 <AmiBlitz3.ab3@16504>    BSR.w convtypef
0002D486 <AmiBlitz3.ab3@16505>   ADDQ.w #1,regnum
0002D488 <AmiBlitz3.ab3@16506>   MOVE.w (A7)+,D3
0002D48A <AmiBlitz3.ab3@16507>   MOVEQ.l #$05,D2
0002D48E <AmiBlitz3.ab3@16508>    BSR.w writeconvertcode
0002D494 <AmiBlitz3.ab3@16509>   SUBQ.w #1,regnum
0002D498 <AmiBlitz3.ab3@16510>    BSR.w nocando
0002D49E <AmiBlitz3.ab3@16511>    TST.b fpu
0002D4A2 <AmiBlitz3.ab3@16512>    BEQ 'old
0002D4A4 <AmiBlitz3.ab3@16513>    MOVEQ #0,d1
0002D4AA <AmiBlitz3.ab3@16514>    MOVE.w regnum,d1
0002D4AC <AmiBlitz3.ab3@16515>   MOVE.l d1,d0
0002D4AE <AmiBlitz3.ab3@16516>   ASL.w #7,d1
0002D4B0 <AmiBlitz3.ab3@16517>   ASL.w #8,d0
0002D4B2 <AmiBlitz3.ab3@16518>   ASL.w #2,d0
0002D4B4 <AmiBlitz3.ab3@16519>   OR.w d0,d1
0002D4B6 <AmiBlitz3.ab3@16520>   MOVE.l d1,-(a7)
0002D4BC <AmiBlitz3.ab3@16522>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D4C0 <AmiBlitz3.ab3@16523>    BSR writelong
0002D4C6 <AmiBlitz3.ab3@16524>    MOVE.w regnum,d0
0002D4C8 <AmiBlitz3.ab3@16525>  ADDQ #1,d0
0002D4CA <AmiBlitz3.ab3@16526>  ASL.w #8,d0
0002D4CC <AmiBlitz3.ab3@16527>  ASL.w #2,d0
0002D4D2 <AmiBlitz3.ab3@16528>  MOVE.l #$f2000023,d1
0002D4D4 <AmiBlitz3.ab3@16529>  OR.l d0,d1
0002D4DA <AmiBlitz3.ab3@16530>  MOVE.w regnum,d0
0002D4DC <AmiBlitz3.ab3@16531>  ASL.w #7,d0
0002D4DE <AmiBlitz3.ab3@16532>  OR.l d0,d1
0002D4E4 <AmiBlitz3.ab3@16533>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D4E8 <AmiBlitz3.ab3@16534>    BSR writelong
0002D4EA <AmiBlitz3.ab3@16535>    MOVE.l (a7)+,d1
0002D4F0 <AmiBlitz3.ab3@16537>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D4F4 <AmiBlitz3.ab3@16538>    BSR writelong
0002D4F6 <AmiBlitz3.ab3@16539> RTS
0002D4FA <AmiBlitz3.ab3@16542>   MOVE.w #$6001,D1
0002D4FE <AmiBlitz3.ab3@16543> BRA.w domylib
0002D502 <AmiBlitz3.ab3@16549>   MOVEA.l forthsp(PC),A0
0002D506 <AmiBlitz3.ab3@16550>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D508 <AmiBlitz3.ab3@16551> RTS
0002D50C <AmiBlitz3.ab3@16557>   MOVE.w #$D400,D1
0002D510 <AmiBlitz3.ab3@16558> BRA.w domylib
0002D514 <AmiBlitz3.ab3@16562>   MOVE.w #$D401,D1
0002D518 <AmiBlitz3.ab3@16563> BRA.w domylib
0002D51C <AmiBlitz3.ab3@16567>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D520 <AmiBlitz3.ab3@16568>   MOVE.w #$D402,D1
0002D524 <AmiBlitz3.ab3@16569> BRA.w domylib
0002D528 <AmiBlitz3.ab3@16573>   MOVE.w #$D403,D1
0002D52A <AmiBlitz3.ab3@16574>   MOVEQ.l #$02,D2                                          ;now a word.
0002D52E <AmiBlitz3.ab3@16575> BRA.w domylib
0002D532 <AmiBlitz3.ab3@16579>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D538 <AmiBlitz3.ab3@16580>   TST.b fpu
0002D53C <AmiBlitz3.ab3@16581>   BEQ 'old
0002D53E <AmiBlitz3.ab3@16582>   MOVEQ #0,d1
0002D544 <AmiBlitz3.ab3@16583>   MOVE.w regnum,d1                                         ;fpu mod
0002D546 <AmiBlitz3.ab3@16584>   MOVE.l d1,d0
0002D548 <AmiBlitz3.ab3@16585>   ADDQ.l #1,d1
0002D54A <AmiBlitz3.ab3@16586>   ASL.l #7,d0
0002D54C <AmiBlitz3.ab3@16587>   ASL.l #8,d1
0002D54E <AmiBlitz3.ab3@16588>   ASL.l #2,d1
0002D550 <AmiBlitz3.ab3@16589>   OR.l d0,d1
0002D552 <AmiBlitz3.ab3@16590>   MOVE.l d0,-(a7)
0002D558 <AmiBlitz3.ab3@16591>   OR.l #$f2000021,d1
0002D55C <AmiBlitz3.ab3@16592>   BSR writelong
0002D55E <AmiBlitz3.ab3@16593>   MOVE.l (a7)+,d0
0002D560 <AmiBlitz3.ab3@16594>  RTS
0002D564 <AmiBlitz3.ab3@16597>   MOVE.w #$D404,D1
0002D566 <AmiBlitz3.ab3@16598>   MOVEQ.l #$03,D2                                          ;now a long
0002D56A <AmiBlitz3.ab3@16599> BRA.w domylib
0002D56E <AmiBlitz3.ab3@16607>   MOVE.w #$48C0,D1
0002D574 <AmiBlitz3.ab3@16608>   OR.w regnum,D1
0002D578 <AmiBlitz3.ab3@16609>    BSR.w writeword
0002D57A <AmiBlitz3.ab3@16610>   ADDQ.w #1,D1
0002D57E <AmiBlitz3.ab3@16611>    BSR.w writeword
0002D582 <AmiBlitz3.ab3@16614>    MOVE.w #$48C0,D1
0002D588 <AmiBlitz3.ab3@16615>   OR.w regnum,D1
0002D58C <AmiBlitz3.ab3@16616>    BSR.w writeword
0002D590 <AmiBlitz3.ab3@16617>   MOVE.w #$81C0,D1
0002D594 <AmiBlitz3.ab3@16618> BRA.w doplus2
0002D59A <AmiBlitz3.ab3@16622>   TST.b fast
0002D59E <AmiBlitz3.ab3@16623>   BNE.s 'l10
0002D5A2 <AmiBlitz3.ab3@16624>   MOVE.w #$CB01,D1
0002D5A6 <AmiBlitz3.ab3@16625> BRA.w domylib
0002D5AA <AmiBlitz3.ab3@16631>   BSR.w savereg
0002D5AC <AmiBlitz3.ab3@16632>   MOVE.l D4,D1
0002D5B0 <AmiBlitz3.ab3@16633>    BSR.w pokemovem
0002D5B4 <AmiBlitz3.ab3@16634>    BSR.w ritetod0
0002D5BA <AmiBlitz3.ab3@16648>    MOVE.l #$4c410800,d1
0002D5BE <AmiBlitz3.ab3@16649>    BSR writelong
0002D5C2 <AmiBlitz3.ab3@16652>   MOVE.w #$4e71,d1
0002D5C6 <AmiBlitz3.ab3@16654>    BSR.w ritefromd0
0002D5C8 <AmiBlitz3.ab3@16655>   MOVE.l D5,D1
0002D5CC <AmiBlitz3.ab3@16656> BRA.w pokemovem
0002D5D0 <AmiBlitz3.ab3@16659>     CMP.w #8,d3
0002D5D4 <AmiBlitz3.ab3@16660>     BEQ 'ok
0002D5D6 <AmiBlitz3.ab3@16661>     ASL.l #1,d3
0002D5D8 <AmiBlitz3.ab3@16662>     ASL.l #8,d3
0002D5DC <AmiBlitz3.ab3@16663>     MOVE.w #$e080,d1
0002D5DE <AmiBlitz3.ab3@16664>     OR.w d3,d1
0002D5E2 <AmiBlitz3.ab3@16665> BRA 'oklsr2
0002D5E6 <AmiBlitz3.ab3@16668>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D5EC <AmiBlitz3.ab3@16671>      SUBQ.l #6,destpointer
0002D5F0 <AmiBlitz3.ab3@16672>      BSR writeword
0002D5F2 <AmiBlitz3.ab3@16673>      MOVE.l (a7)+,d3
0002D5F4 <AmiBlitz3.ab3@16674>      MOVEQ #0,d1
0002D5FA <AmiBlitz3.ab3@16675>      CLR.l load_var_addr
0002D600 <AmiBlitz3.ab3@16676>      CLR.l imm_addr
0002D604 <AmiBlitz3.ab3@16677> BRA pokemovem
0002D608 <AmiBlitz3.ab3@16681>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D60C <AmiBlitz3.ab3@16682> BRA.w domylib
0002D612 <AmiBlitz3.ab3@16686>    TST.b iee
0002D616 <AmiBlitz3.ab3@16687>    BNE fdiv1
0002D61A <AmiBlitz3.ab3@16688>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D61E <AmiBlitz3.ab3@16689> BRA.w doflib
0002D620 <AmiBlitz3.ab3@16693>   MOVEQ #0,d0
0002D626 <AmiBlitz3.ab3@16694>   MOVE.w regnum,d0
0002D628 <AmiBlitz3.ab3@16695>   ADDQ #1,d0
0002D62A <AmiBlitz3.ab3@16696>   ASL.w #8,d0
0002D62C <AmiBlitz3.ab3@16697>   ASL.w #2,d0
0002D632 <AmiBlitz3.ab3@16698>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D634 <AmiBlitz3.ab3@16699>   OR.l d0,d1
0002D63A <AmiBlitz3.ab3@16700>   MOVE.w regnum,d0
0002D63C <AmiBlitz3.ab3@16701>   ASL.w #7,d0
0002D63E <AmiBlitz3.ab3@16702>   OR.l d0,d1
0002D642 <AmiBlitz3.ab3@16703> BRA.w writelong
0002D646 <AmiBlitz3.ab3@16707>   MOVE.w #$C000,D1
0002D64A <AmiBlitz3.ab3@16708> BRA.w doplus2
0002D64E <AmiBlitz3.ab3@16712>   MOVE.w #$C040,D1
0002D652 <AmiBlitz3.ab3@16713> BRA.w doplus2
0002D656 <AmiBlitz3.ab3@16717>   MOVE.w #$C080,D1
0002D65A <AmiBlitz3.ab3@16718> BRA.w doplus2
0002D65E <AmiBlitz3.ab3@16722>   MOVE.w #$8000,D1
0002D662 <AmiBlitz3.ab3@16723> BRA.w doplus2
0002D666 <AmiBlitz3.ab3@16727>   MOVE.w #$8040,D1
0002D66A <AmiBlitz3.ab3@16728> BRA.w doplus2
0002D66E <AmiBlitz3.ab3@16732>   MOVE.w #$8080,D1
0002D672 <AmiBlitz3.ab3@16733> BRA.w doplus2
0002D676 <AmiBlitz3.ab3@16737>   MOVE.w #$B100,D1
0002D67C <AmiBlitz3.ab3@16740>    MOVE.w regnum,D3
0002D67E <AmiBlitz3.ab3@16741>   OR.w D3,D1
0002D680 <AmiBlitz3.ab3@16742>   ADDQ.w #1,D3
0002D682 <AmiBlitz3.ab3@16743>   LSL.w #8,D3
0002D684 <AmiBlitz3.ab3@16744>   LSL.w #1,D3
0002D686 <AmiBlitz3.ab3@16745>   OR.w D3,D1
0002D68A <AmiBlitz3.ab3@16746> BRA.w writeword
0002D68E <AmiBlitz3.ab3@16750>   MOVE.w #$B140,D1
0002D692 <AmiBlitz3.ab3@16751> BRA.w doeor2
0002D696 <AmiBlitz3.ab3@16755>   MOVE.w #$B180,D1
0002D69A <AmiBlitz3.ab3@16756> BRA.w doeor2
0002D69E <AmiBlitz3.ab3@16760>   MOVE.w #$E1A8,D1
0002D6A2 <AmiBlitz3.ab3@16761> BRA.w shpoke
0002D6A6 <AmiBlitz3.ab3@16765>   MOVE.w #$E0A8,D1
0002D6AA <AmiBlitz3.ab3@16766> BRA.w shpoke
0002D6AE <AmiBlitz3.ab3@16770>   MOVE.w #$E0A0,D1
0002D6B2 <AmiBlitz3.ab3@16771> BRA.w shpoke
0002D6B4 <AmiBlitz3.ab3@16775>   MOVE.w D1,-(A7)
0002D6BA <AmiBlitz3.ab3@16776>   ADDQ.w #1,regnum   ;make second a word!
0002D6BC <AmiBlitz3.ab3@16777>   MOVE.w D2,-(A7)
0002D6BE <AmiBlitz3.ab3@16778>   MOVE.w D2,D3
0002D6C0 <AmiBlitz3.ab3@16779>   MOVEQ.l #$02,D2
0002D6C4 <AmiBlitz3.ab3@16786>    BSR.w writeconvertcode
0002D6C6 <AmiBlitz3.ab3@16790>   MOVE.w (A7)+,D2     ;type
0002D6CC <AmiBlitz3.ab3@16791>   SUBQ.w #1,regnum
0002D6D0 <AmiBlitz3.ab3@16792>   CMP.w #$4,D2        ;don't fuck with quix
0002D6D4 <AmiBlitz3.ab3@16793>    BEQ.w 'skip
0002D6D6 <AmiBlitz3.ab3@16794>   MOVE.w D2,D3
0002D6D8 <AmiBlitz3.ab3@16795>   MOVEQ.l #$03,D2
0002D6DC <AmiBlitz3.ab3@16796>    BSR.w convtypef    ;make first (and current) a long
0002D6DE <AmiBlitz3.ab3@16799>    MOVE.w (A7)+,D1
0002D6E4 <AmiBlitz3.ab3@16801>   MOVE.w regnum,D3
0002D6E6 <AmiBlitz3.ab3@16802>   OR.w D3,D1
0002D6E8 <AmiBlitz3.ab3@16803>   ADDQ.w #1,D3
0002D6EA <AmiBlitz3.ab3@16804>   LSL.w #8,D3
0002D6EC <AmiBlitz3.ab3@16805>   LSL.w #1,D3
0002D6EE <AmiBlitz3.ab3@16806>   OR.w D3,D1
0002D6F2 <AmiBlitz3.ab3@16807> BRA.w writeword
0002D6F6 <AmiBlitz3.ab3@16811>   MOVE.w #$0100,D1
0002D6FA <AmiBlitz3.ab3@16812>    BSR.w dothebit
0002D700 <AmiBlitz3.ab3@16814>   MOVE.w regnum,D1
0002D704 <AmiBlitz3.ab3@16815>   ORI.w #$56C0,D1    ;sne regat
0002D708 <AmiBlitz3.ab3@16816>    BSR.w writeword
0002D70E <AmiBlitz3.ab3@16818>   MOVE.w regnum,D1
0002D712 <AmiBlitz3.ab3@16819>   ORI.w #$4880,D1    ;ext.w D regat
0002D716 <AmiBlitz3.ab3@16820>    BSR.w writeword
0002D718 <AmiBlitz3.ab3@16822>   MOVEQ.l #$02,D2    ;type now WORD!
0002D71A <AmiBlitz3.ab3@16823> RTS
0002D71E <AmiBlitz3.ab3@16827>   MOVE.w #$01C0,D1
0002D722 <AmiBlitz3.ab3@16830>    BSR.w dothebit
0002D724 <AmiBlitz3.ab3@16832>   MOVEQ.l #$03,D2    ;type now LONG!
0002D726 <AmiBlitz3.ab3@16833> RTS
0002D72A <AmiBlitz3.ab3@16837>   MOVE.w #$0180,D1
0002D72E <AmiBlitz3.ab3@16838> BRA.w dothemip
0002D732 <AmiBlitz3.ab3@16842>   MOVE.w #$0140,D1
0002D736 <AmiBlitz3.ab3@16843> BRA.w dothemip
0002D738 <AmiBlitz3.ab3@16847>   MOVE.w D1,-(A7)
0002D73A <AmiBlitz3.ab3@16851>   MOVE.w D2,-(A7)
0002D73C <AmiBlitz3.ab3@16852>   MOVE.w D2,D3
0002D73E <AmiBlitz3.ab3@16853>   MOVEQ.l #$03,D2         ;first to long!
0002D742 <AmiBlitz3.ab3@16854>    BSR.w convtypef
0002D744 <AmiBlitz3.ab3@16856>   MOVE.w (A7)+,D3
0002D746 <AmiBlitz3.ab3@16857>   MOVEQ.l #$01,D2         ;second to byte!
0002D74C <AmiBlitz3.ab3@16858>   ADDQ.w #1,regnum
0002D750 <AmiBlitz3.ab3@16859>    BSR.w writeconvertcode
0002D756 <AmiBlitz3.ab3@16860>   SUBQ.w #1,regnum
0002D75C <AmiBlitz3.ab3@16862>   MOVE.w regnum,D1
0002D75E <AmiBlitz3.ab3@16863>   MOVE.w D1,D2
0002D760 <AmiBlitz3.ab3@16864>   ADDQ.w #1,D2
0002D762 <AmiBlitz3.ab3@16865>   LSL.w #8,D2
0002D764 <AmiBlitz3.ab3@16866>   LSL.w #1,D2
0002D766 <AmiBlitz3.ab3@16867>   OR.w (A7)+,D1
0002D768 <AmiBlitz3.ab3@16868>   OR.w D2,D1
0002D76C <AmiBlitz3.ab3@16869> BRA.w writeword        ;btst regat+1,regat
0002D772 <AmiBlitz3.ab3@16875>   MOVE.w regnum,D1
0002D776 <AmiBlitz3.ab3@16876>    BEQ.w 'skip
0002D77A <AmiBlitz3.ab3@16877>   ORI.w #$2000,D1
0002D77E <AmiBlitz3.ab3@16878>    BSR.w writeword
0002D782 <AmiBlitz3.ab3@16879>   ADDI.w #$201,D1
0002D786 <AmiBlitz3.ab3@16880>    BSR.w writeword
0002D788 <AmiBlitz3.ab3@16883> RTS
0002D78E <AmiBlitz3.ab3@16889>   MOVE.w regnum,D1
0002D792 <AmiBlitz3.ab3@16890>    BEQ.w 'skip
0002D794 <AmiBlitz3.ab3@16891>   LSL.w #8,D1
0002D796 <AmiBlitz3.ab3@16892>   LSL.w #1,D1
0002D79A <AmiBlitz3.ab3@16893>   ORI.w #$2000,D1
0002D79E <AmiBlitz3.ab3@16894>    BSR.w writeword
0002D7A0 <AmiBlitz3.ab3@16897> RTS
0002D7A6 <AmiBlitz3.ab3@16902>    CLR.b isconstantvalue
0002D7AC <AmiBlitz3.ab3@16903>    CLR.l lastconstantvalue
0002D7B4 <AmiBlitz3.ab3@16905>    CMPI.w #$7,regnum
0002D7B8 <AmiBlitz3.ab3@16906>    BCS.w getelement2
0002D7BE <AmiBlitz3.ab3@16908>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D7C2 <AmiBlitz3.ab3@16909>   BSR writelong
0002D7C6 <AmiBlitz3.ab3@16910>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D7CA <AmiBlitz3.ab3@16913>   CMP.w #$3,D2
0002D7CE <AmiBlitz3.ab3@16914>    BCS.w 'skip
0002D7D2 <AmiBlitz3.ab3@16915>   MOVE.w #$2F06,D1
0002D7D6 <AmiBlitz3.ab3@16918>   BSR.w writeword
0002D7D8 <AmiBlitz3.ab3@16919>   MOVE.w D1,-(A7)
0002D7DE <AmiBlitz3.ab3@16921>   SUBQ.w #1,regnum
0002D7E2 <AmiBlitz3.ab3@16922>    BSR.w getelement2
0002D7E8 <AmiBlitz3.ab3@16923>   ADDQ.w #1,regnum
0002D7EE <AmiBlitz3.ab3@16926>   MOVE.l #$f2001b80,d1
0002D7F2 <AmiBlitz3.ab3@16927>   BSR writelong
0002D7F6 <AmiBlitz3.ab3@16929>   MOVE.w #$3E06,D1
0002D7FA <AmiBlitz3.ab3@16930>   CMP.w #$3,D2
0002D7FE <AmiBlitz3.ab3@16931>    BCS.w 'skip2
0002D802 <AmiBlitz3.ab3@16932>   MOVE.w #$2E06,D1
0002D806 <AmiBlitz3.ab3@16935>   BSR.w writeword
0002D808 <AmiBlitz3.ab3@16937>   MOVE.w (A7)+,D1
0002D80C <AmiBlitz3.ab3@16938>   ANDI.w #$F000,D1
0002D810 <AmiBlitz3.ab3@16939>   ORI.w #$C1F,D1
0002D816 <AmiBlitz3.ab3@16940>   JSR writeword
0002D81C <AmiBlitz3.ab3@16942>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D820 <AmiBlitz3.ab3@16943> BRA writelong
0002D824 <AmiBlitz3.ab3@16948>   BSR.w getelement2
0002D828 <AmiBlitz3.ab3@16949>   MOVE.w #$4440,D1
0002D82C <AmiBlitz3.ab3@16950>   CMP.w #$3,D2
0002D830 <AmiBlitz3.ab3@16951>    BCS.w 'doneg
0002D834 <AmiBlitz3.ab3@16952>   MOVE.w #$4480,D1
0002D838 <AmiBlitz3.ab3@16953>   CMP.w #$5,D2
0002D83C <AmiBlitz3.ab3@16954>    BCS.w 'doneg
0002D840 <AmiBlitz3.ab3@16955>   CMP.w #$6,D2
0002D844 <AmiBlitz3.ab3@16956>    BCC.w illoperr
0002D848 <AmiBlitz3.ab3@16957>   MOVE.w #$FFC4,D1   ; was -60
0002D84C <AmiBlitz3.ab3@16958>  BRA.w fdo2
0002D852 <AmiBlitz3.ab3@16961>   OR.w regnum,D1                                           ;negate
0002D858 <AmiBlitz3.ab3@16963>   CLR.l imm_addr
0002D85C <AmiBlitz3.ab3@16965> BRA.w writeword
0002D860 <AmiBlitz3.ab3@16969>    BSR.w eval4
0002D864 <AmiBlitz3.ab3@16970>   CMP.w #")",D0
0002D868 <AmiBlitz3.ab3@16971>    BEQ.w 'done
0002D86C <AmiBlitz3.ab3@16972>   CMP.w #"}",D0
0002D870 <AmiBlitz3.ab3@16973>    BNE.w brackets_                                         ;syntax error brackets
0002D874 <AmiBlitz3.ab3@16976> BRA.w get1bytemain
0002D878 <AmiBlitz3.ab3@16982>    BSR.w eval4
0002D87C <AmiBlitz3.ab3@16983>   CMP.w #$5,D2
0002D880 <AmiBlitz3.ab3@16984>    BCC.w illoperr
0002D886 <AmiBlitz3.ab3@16985>   MOVE.w regnum,D1
0002D88A <AmiBlitz3.ab3@16986>   ORI.w #$4640,D1     ;not.w
0002D88E <AmiBlitz3.ab3@16987>   CMP.w #$3,D2
0002D892 <AmiBlitz3.ab3@16988>    BCS.w writeword
0002D896 <AmiBlitz3.ab3@16989>   EORI.w #$C0,D1
0002D89A <AmiBlitz3.ab3@16990> BRA.w writeword
0002D89C <AmiBlitz3.ab3@16994>   MOVEQ.l #$05,D2         ;return Pi.;move.l #x,dnf
0002D8A2 <AmiBlitz3.ab3@16996>    TST.b fpu
0002D8A6 <AmiBlitz3.ab3@16997>   BEQ 'old
0002D8AC <AmiBlitz3.ab3@16998> JMP fpupi
0002D8B2 <AmiBlitz3.ab3@17002>   MOVE.w regnum,D1
0002D8B4 <AmiBlitz3.ab3@17003>   LSL.w #8,D1
0002D8B6 <AmiBlitz3.ab3@17004>   LSL.w #1,D1
0002D8BA <AmiBlitz3.ab3@17005>   ORI.w #$203C,D1
0002D8BE <AmiBlitz3.ab3@17006>    BSR.w writeword      ;move.l #x,dn
0002D8C4 <AmiBlitz3.ab3@17007>   MOVE.l #$C90FDA42,D1
0002D8C8 <AmiBlitz3.ab3@17008>    BSR.w writelong
0002D8CC <AmiBlitz3.ab3@17009> BRA.w get1bytemain
0002D9C8 <AmiBlitz3.ab3@17017> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002DAC4 <AmiBlitz3.ab3@17018>              Ds.l 63
0002DB0C <AmiBlitz3.ab3@17019>              Ds.l 18
0002DB10 <AmiBlitz3.ab3@17020> forthsp:     Dc.l forthstack
0002DB16 <AmiBlitz3.ab3@17023> JUMP_checkcast     JMP checkcast
0002DB1C <AmiBlitz3.ab3@17024> JUMP_syntaxerropt4 JMP syntaxerropt4
0002DB48 <AmiBlitz3.ab3@17032>    !fget
0002DB4C <AmiBlitz3.ab3@17033>    CMP.b #$7e,d0
0002DB50 <AmiBlitz3.ab3@17034>    BNE 'noc
0002DB52 <AmiBlitz3.ab3@17035>    SUBQ.l #1,a5
0002DB56 <AmiBlitz3.ab3@17036>    BSR get1bytemain
0002DB5A <AmiBlitz3.ab3@17039>    CMP.b #"#",d0
0002DB5E <AmiBlitz3.ab3@17040>    BNE 'ld1
0002DB62 <AmiBlitz3.ab3@17041>    CMP.b #$22,(a5)
0002DB66 <AmiBlitz3.ab3@17042>    BNE 'ld1
0002DB6C <AmiBlitz3.ab3@17043>    JSR addimmi
0002DB70 <AmiBlitz3.ab3@17046>    CMP.b #$22,d0
0002DB74 <AmiBlitz3.ab3@17047>    BNE 'l11
0002DB7A <AmiBlitz3.ab3@17057>    NOT.w instringon
0002DB7C <AmiBlitz3.ab3@17060>    TST.b d0
0002DB80 <AmiBlitz3.ab3@17061>    BPL 'l10
0002DB82 <AmiBlitz3.ab3@17062>    LSL.w #8,d0
0002DB84 <AmiBlitz3.ab3@17063>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002DB8A <AmiBlitz3.ab3@17064>    MOVE.l d0,lasttoken
0002DB90 <AmiBlitz3.ab3@17065>    MOVE.w d0,lastchar
0002DB96 <AmiBlitz3.ab3@17066>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002DB9C <AmiBlitz3.ab3@17067>    CLR.w rightsideflagmask
0002DBA0 <AmiBlitz3.ab3@17071>   CMP.w #"(",D0
0002DBA4 <AmiBlitz3.ab3@17072>    BEQ.w JUMP_checkcast                 ; was  beq bracket org source
0002DBA8 <AmiBlitz3.ab3@17077>   CMP.w #"{",D0
0002DBAC <AmiBlitz3.ab3@17078>    BEQ.w bracket
0002DBB0 <AmiBlitz3.ab3@17079>   CMP.w #$2D,D0         ;'-'
0002DBB4 <AmiBlitz3.ab3@17080>    BEQ.w negate
0002DBB8 <AmiBlitz3.ab3@17081>   CMP.w #-$7F77,D0      ; was #(opnot-opabcd)/$1c+$8000+fnum,
0002DBBC <AmiBlitz3.ab3@17082>    BEQ.w notit
0002DBC0 <AmiBlitz3.ab3@17084>   MOVEA.l forthsp(PC),A1
0002DBC6 <AmiBlitz3.ab3@17085>   CMPA.l #forthsp,A1
0002DBCA <AmiBlitz3.ab3@17086>    BCC.w conmemerr
0002DBD0 <AmiBlitz3.ab3@17088>   MOVE.l destpointer,(A1)+
0002DBD6 <AmiBlitz3.ab3@17089>   MOVE.l hunkoffsetbase,(A1)+
0002DBDC <AmiBlitz3.ab3@17090>   MOVE.l lasta6,(A1)+
0002DBE2 <AmiBlitz3.ab3@17091>   MOVE.w lasta6,(A1)+
0002DBE4 <AmiBlitz3.ab3@17092>   CLR.w (A1)+
0002DBE6 <AmiBlitz3.ab3@17094>   CLR.w (A1)+
0002DBEC <AmiBlitz3.ab3@17095>   MOVE.l A1,forthsp
0002DBFE <AmiBlitz3.ab3@17101>    !compare2
0002DC02 <AmiBlitz3.ab3@17103>    BEQ.w fetchnum
0002DC06 <AmiBlitz3.ab3@17104>   CMP.w #".",D0
0002DC0A <AmiBlitz3.ab3@17105>    BEQ.w fetchfrac
0002DC0E <AmiBlitz3.ab3@17106>   CMP.w #"#",D0
0002DC12 <AmiBlitz3.ab3@17107>    BEQ.w get_constant
0002DC16 <AmiBlitz3.ab3@17108>   CMP.w #"$",D0
0002DC1A <AmiBlitz3.ab3@17109>    BEQ.w get_hexconstant
0002DC1E <AmiBlitz3.ab3@17110>   CMP.w #"%",D0
0002DC22 <AmiBlitz3.ab3@17111>    BEQ.w fetchbin
0002DC26 <AmiBlitz3.ab3@17112>   CMP.w #-$7FD1,D0    ; was #$8000+47,
0002DC2A <AmiBlitz3.ab3@17113>    BEQ.w fetchsize
0002DC2E <AmiBlitz3.ab3@17114>   CMP.w #-$7F46,D0    ; was #$8007+tnum,
0002DC32 <AmiBlitz3.ab3@17115>    BEQ.w fetchpi
0002DC36 <AmiBlitz3.ab3@17116>   CMP.w #-$7F3B,D0    ; was #$8000+tnum+18,
0002DC3A <AmiBlitz3.ab3@17117>    BEQ.w fetchon
0002DC3E <AmiBlitz3.ab3@17118>   CMP.w #-$7F3A,D0    ; was #$8000+tnum+19,
0002DC42 <AmiBlitz3.ab3@17119>    BEQ.w fetchoff
0002DC48 <AmiBlitz3.ab3@17121>   MOVE.w constmode,D1
0002DC4C <AmiBlitz3.ab3@17122>    BEQ.w 'noasm
0002DC6E <AmiBlitz3.ab3@17124>    !compare1                                               ;bsr.w tstalpha
0002DC72 <AmiBlitz3.ab3@17126>    BEQ.w fetchasm
0002DC76 <AmiBlitz3.ab3@17127>   CMP.w #$5F,D0     ;'_'
0002DC7A <AmiBlitz3.ab3@17128>    BEQ.w fetchasm
0002DC7E <AmiBlitz3.ab3@17129>   CMP.w #$22,D0     ;'"'
0002DC82 <AmiBlitz3.ab3@17130>    BEQ.w fetchqasm
0002DC86 <AmiBlitz3.ab3@17132>  BRA.w syntaxerr
0002DC8C <AmiBlitz3.ab3@17135>   MOVE.w cfetchmode,D1
0002DC90 <AmiBlitz3.ab3@17136>   BEQ.w 'asmok
0002DC94 <AmiBlitz3.ab3@17137>  BRA.w badconerr       ;we're trying to get a const here! 
0002DC96 <AmiBlitz3.ab3@17140>   NOT.w -(A1)    ;set forth stack type to non-const
0002DCB8 <AmiBlitz3.ab3@17145>   !compare1                                                ;bsr.w tstalpha
0002DCBC <AmiBlitz3.ab3@17147>    BEQ.w variable
0002DCC0 <AmiBlitz3.ab3@17148>   CMP.w #$2A,D0     ;'*'
0002DCC4 <AmiBlitz3.ab3@17149>    BEQ.w variable
0002DCC8 <AmiBlitz3.ab3@17150>   CMP.w #$5C,D0     ;'\'
0002DCCC <AmiBlitz3.ab3@17151>    BEQ.w variable
0002DCD0 <AmiBlitz3.ab3@17152>   CMP.w #$22,D0     ;'"'
0002DCD4 <AmiBlitz3.ab3@17153>    BEQ.w litstring
0002DCD8 <AmiBlitz3.ab3@17154>   BTST #$F,D0
0002DCDC <AmiBlitz3.ab3@17155>    BNE.w f_unction
0002DCE0 <AmiBlitz3.ab3@17156>   CMP.w #"&",D0
0002DCE4 <AmiBlitz3.ab3@17157>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002DCE8 <AmiBlitz3.ab3@17158>   CMP.w #"?",D0
0002DCEC <AmiBlitz3.ab3@17159>    BEQ.w qmark
0002DCF0 <AmiBlitz3.ab3@17163>   CMP.b #"@",d0
0002DCF4 <AmiBlitz3.ab3@17164>    BNE syntaxerr
0002DCFA <AmiBlitz3.ab3@17165>   TST.b newsyntax
0002DCFE <AmiBlitz3.ab3@17166>    BEQ JUMP_syntaxerropt4
0002DD04 <AmiBlitz3.ab3@17167>   MOVE.w regnum,D1
0002DD06 <AmiBlitz3.ab3@17168>   LSL.w #8,D1
0002DD08 <AmiBlitz3.ab3@17169>   LSL.w #1,D1
0002DD0C <AmiBlitz3.ab3@17170>   ORI.w #$203C,D1
0002DD10 <AmiBlitz3.ab3@17171>   BSR.w writeword
0002DD14 <AmiBlitz3.ab3@17172>   CMP.b #$22,(a5)
0002DD18 <AmiBlitz3.ab3@17173>    BNE syntaxerr
0002DD1A <AmiBlitz3.ab3@17174>   ADDQ #1,a5
0002DD1C <AmiBlitz3.ab3@17175>   MOVEQ #0,d0
0002DD20 <AmiBlitz3.ab3@17176>   CMP.b #1,d2
0002DD24 <AmiBlitz3.ab3@17177>    BEQ 'l3b
0002DD28 <AmiBlitz3.ab3@17178>   CMP.b #2,d2
0002DD2C <AmiBlitz3.ab3@17179>    BEQ 'l2b
0002DD30 <AmiBlitz3.ab3@17180>   CMP.b #4,d2
0002DD34 <AmiBlitz3.ab3@17181>    BEQ error_convert_types
0002DD36 <AmiBlitz3.ab3@17182>   MOVE.b (a5)+,d0
0002DD3A <AmiBlitz3.ab3@17183>   BEQ syntaxerr
0002DD3E <AmiBlitz3.ab3@17184>   CMP.b #$22,d0
0002DD42 <AmiBlitz3.ab3@17185>   BNE 'l1
0002DD46 <AmiBlitz3.ab3@17186>     MOVE.b #0,d0
0002DD4A <AmiBlitz3.ab3@17187>  BRA 'do
0002DD4C <AmiBlitz3.ab3@17190>   ASL.l #8,d0
0002DD4E <AmiBlitz3.ab3@17191>   MOVE.b (a5)+,d0
0002DD52 <AmiBlitz3.ab3@17192>   BEQ syntaxerr
0002DD56 <AmiBlitz3.ab3@17193>   CMP.b #$22,d0
0002DD5A <AmiBlitz3.ab3@17194>   BNE 'l2
0002DD5E <AmiBlitz3.ab3@17195>     MOVE.b #0,d0
0002DD60 <AmiBlitz3.ab3@17196>     ASR.l #8,d0
0002DD64 <AmiBlitz3.ab3@17197>  BRA 'do
0002DD66 <AmiBlitz3.ab3@17200>   ASL.l #8,d0
0002DD68 <AmiBlitz3.ab3@17203>   MOVE.b (a5)+,d0
0002DD6C <AmiBlitz3.ab3@17204>    BEQ syntaxerr
0002DD70 <AmiBlitz3.ab3@17205>    CMP.b #$22,d0
0002DD74 <AmiBlitz3.ab3@17206>    BNE 'l3
0002DD78 <AmiBlitz3.ab3@17207>    MOVE.b #0,d0
0002DD7A <AmiBlitz3.ab3@17208>    ASR.l #8,d0
0002DD7E <AmiBlitz3.ab3@17209>  BRA 'do
0002DD80 <AmiBlitz3.ab3@17212>   ASL.l #8,d0
0002DD82 <AmiBlitz3.ab3@17215>   MOVE.b (a5)+,d0
0002DD86 <AmiBlitz3.ab3@17216>    BEQ syntaxerr
0002DD8A <AmiBlitz3.ab3@17217>    CMP.b #$22,d0
0002DD8E <AmiBlitz3.ab3@17218>    BNE 'l4
0002DD92 <AmiBlitz3.ab3@17219>    MOVE.b #0,d0
0002DD94 <AmiBlitz3.ab3@17220>    ASR.l #8,d0
0002DD98 <AmiBlitz3.ab3@17221>  BRA 'do
0002DD9C <AmiBlitz3.ab3@17224>    CMP.b #$22,(a5)+
0002DDA0 <AmiBlitz3.ab3@17225>    BNE error4char
0002DDA2 <AmiBlitz3.ab3@17228>   MOVE.l d0,d1
0002DDA6 <AmiBlitz3.ab3@17229>     BSR writelong
0002DDAA <AmiBlitz3.ab3@17230>     BSR get1bytemain
0002DDAC <AmiBlitz3.ab3@17231> RTS
0002DDB0 <AmiBlitz3.ab3@17236>   BSR.w get1bytemain
0002DDB4 <AmiBlitz3.ab3@17237>   CMP.w #$2E,D0     ; '.'
0002DDB8 <AmiBlitz3.ab3@17238>    BEQ.b sizeobj
0002DDC2 <AmiBlitz3.ab3@17244>   MOVE.w oldqflag,instringon
0002DDC8 <AmiBlitz3.ab3@17245>   MOVEA.l lastsourcepos,A5
0002DDCA <AmiBlitz3.ab3@17247>   MOVE.w D2,-(A7)
0002DDCE <AmiBlitz3.ab3@17248>    BSR.w getparameter2
0002DDD2 <AmiBlitz3.ab3@17249>    BEQ.w syntaxerr
0002DDD8 <AmiBlitz3.ab3@17250>   LEA varbase,A2
0002DDDC <AmiBlitz3.ab3@17251>    BSR.w findvariable
0002DDE0 <AmiBlitz3.ab3@17252>    BNE.w notypeerr         ;!
0002DDE4 <AmiBlitz3.ab3@17255>   MOVE.w $4(A2),D3
0002DDE6 <AmiBlitz3.ab3@17256>   EXT.l D3
0002DDE8 <AmiBlitz3.ab3@17257>   MOVE.w (A7)+,D2
0002DDEC <AmiBlitz3.ab3@17258> BRA.w fetchnum2
0002DDEE <AmiBlitz3.ab3@17262>   MOVE.w D2,-(A7)
0002DDF2 <AmiBlitz3.ab3@17263>    BSR.w getparameter2
0002DDF6 <AmiBlitz3.ab3@17264>    BEQ.w syntaxerr
0002DDFC <AmiBlitz3.ab3@17265>   LEA newtypebase,A2
0002DE00 <AmiBlitz3.ab3@17266>    BSR.w findtype
0002DE04 <AmiBlitz3.ab3@17267>    BNE.w notypeerr
0002DE06 <AmiBlitz3.ab3@17268>   MOVEQ.l #$00,D3
0002DE0A <AmiBlitz3.ab3@17269>   CMP.w #$5C,D0     ;'\'
0002DE0E <AmiBlitz3.ab3@17270>    BNE.w 'jty
0002DE12 <AmiBlitz3.ab3@17271>    BSR.w getparameter2
0002DE16 <AmiBlitz3.ab3@17272>    BEQ.w syntaxerr
0002DE1A <AmiBlitz3.ab3@17273>   LEA $4(A2),A2
0002DE1E <AmiBlitz3.ab3@17274>    BSR.w findvariable2
0002DE22 <AmiBlitz3.ab3@17275>    BNE.w noofferr
0002DE26 <AmiBlitz3.ab3@17276>   MOVE.w $4(A2),D3
0002DE2A <AmiBlitz3.ab3@17277>  BRA.w 'jty2
0002DE2E <AmiBlitz3.ab3@17280>   MOVE.w $8(A2),D3
0002DE30 <AmiBlitz3.ab3@17283>   MOVE.w (A7)+,D2
0002DE34 <AmiBlitz3.ab3@17284> BRA.w fetchnum2
0002DE36 <AmiBlitz3.ab3@17288>   MOVEQ.l #-$01,D3
0002DE3A <AmiBlitz3.ab3@17289>    BSR.w get1bytemain
0002DE3E <AmiBlitz3.ab3@17290> BRA.w fetchnum2
0002DE40 <AmiBlitz3.ab3@17294>   MOVEQ.l #$00,D3
0002DE44 <AmiBlitz3.ab3@17295>    BSR.w get1bytemain
0002DE48 <AmiBlitz3.ab3@17296> BRA.w fetchnum2
0002DE4C <AmiBlitz3.ab3@17302>   CMP.w #$30,D0     ;'0'
0002DE50 <AmiBlitz3.ab3@17303>    BCS.w 'no
0002DE54 <AmiBlitz3.ab3@17304>   CMP.w #$39,D0     ;'9'
0002DE58 <AmiBlitz3.ab3@17305>    BLS.w 'yes
0002DE5C <AmiBlitz3.ab3@17306>   ANDI.w #$FFDF,D0
0002DE60 <AmiBlitz3.ab3@17307>   CMP.w #$46,D0     ;'F'
0002DE64 <AmiBlitz3.ab3@17308>    BHI.w 'no
0002DE68 <AmiBlitz3.ab3@17309>   CMP.w #$41,D0     ;'A'
0002DE6C <AmiBlitz3.ab3@17310>    BCS.w 'no
0002DE6E <AmiBlitz3.ab3@17313>    CMP.w D0,D0
0002DE70 <AmiBlitz3.ab3@17316> RTS
0002DE74 <AmiBlitz3.ab3@17320>   CMP.w #$31,D0    ;'1'
0002DE78 <AmiBlitz3.ab3@17321>    BEQ.w 'ok
0002DE7C <AmiBlitz3.ab3@17322>   CMP.w #$30,D0    ;'0'
0002DE7E <AmiBlitz3.ab3@17325> RTS
0002DE80 <AmiBlitz3.ab3@17330>    MOVEQ #0,d0
0002DE82 <AmiBlitz3.ab3@17331>    MOVE.b (a5)+,d0
0002DE84 <AmiBlitz3.ab3@17332>    MOVE.b (a5)+,d0
0002DE88 <AmiBlitz3.ab3@17333>    BSR ishex
0002DE8C <AmiBlitz3.ab3@17334>    BNE syntaxerr
0002DE90 <AmiBlitz3.ab3@17335>    SUBI.w #$30,D0
0002DE94 <AmiBlitz3.ab3@17336>    CMP.w #$9,D0
0002DE98 <AmiBlitz3.ab3@17337>    BLS.w 'l1
0002DE9A <AmiBlitz3.ab3@17338>    SUBQ.w #7,D0
0002DE9C <AmiBlitz3.ab3@17341>    MOVE.l d0,d1
0002DE9E <AmiBlitz3.ab3@17342>    MOVE.b (a5)+,d0
0002DEA2 <AmiBlitz3.ab3@17343>      BSR ishex
0002DEA6 <AmiBlitz3.ab3@17344>     BNE syntaxerr
0002DEA8 <AmiBlitz3.ab3@17345>     LSL.l #4,d1
0002DEAC <AmiBlitz3.ab3@17346>     SUBI.w #$30,D0
0002DEB0 <AmiBlitz3.ab3@17347>    CMP.w #$9,D0
0002DEB4 <AmiBlitz3.ab3@17348>    BLS.w 'l2
0002DEB6 <AmiBlitz3.ab3@17349>    SUBQ.w #7,D0
0002DEB8 <AmiBlitz3.ab3@17352>   ADD.l d1,d0
0002DEBA <AmiBlitz3.ab3@17353> RTS
0002DEBE <AmiBlitz3.ab3@17357>    BSR.w get1bytemain
0002DEC2 <AmiBlitz3.ab3@17358>    BSR.w ishex
0002DEC6 <AmiBlitz3.ab3@17359>    BNE.w syntaxerr
0002DEC8 <AmiBlitz3.ab3@17360>   MOVEQ.l #$00,D3
0002DECC <AmiBlitz3.ab3@17362>   CMP.w #5,d2
0002DED0 <AmiBlitz3.ab3@17363>   BNE 'loop
0002DED6 <AmiBlitz3.ab3@17364>   CMP.l #newtype_double,a2
0002DEDA <AmiBlitz3.ab3@17365>   BEQ 'doit
0002DEE0 <AmiBlitz3.ab3@17366>   CMP.l #newtype_float,a2
0002DEE4 <AmiBlitz3.ab3@17367>   BNE 'loop
0002DEEC <AmiBlitz3.ab3@17370>    fmove.s #0,fp0
0002DEF2 <AmiBlitz3.ab3@17373>   TST.b fpu
0002DEF6 <AmiBlitz3.ab3@17374>   BEQ 'loop
0002DEFC <AmiBlitz3.ab3@17375>   fmove.w #16,fp1
0002DF00 <AmiBlitz3.ab3@17376>   fmul.x fp1,fp0
0002DF04 <AmiBlitz3.ab3@17377>   SUBI.w #$30,D0
0002DF08 <AmiBlitz3.ab3@17378>   CMP.w #$9,D0
0002DF0C <AmiBlitz3.ab3@17379>    BLS.w 'skipa
0002DF0E <AmiBlitz3.ab3@17380>   SUBQ.w #7,D0
0002DF12 <AmiBlitz3.ab3@17383>    fmove.w d0,fp1
0002DF16 <AmiBlitz3.ab3@17384>    fadd.x fp1,fp0
0002DF1A <AmiBlitz3.ab3@17385>    BSR.w get1bytemain
0002DF1E <AmiBlitz3.ab3@17386>    BSR.w ishex
0002DF22 <AmiBlitz3.ab3@17387>    BEQ.w 'loopa
0002DF26 <AmiBlitz3.ab3@17388>  BRA.w nofpregload
0002DF2C <AmiBlitz3.ab3@17392>   CMP.l #$10000000,D3
0002DF30 <AmiBlitz3.ab3@17393>    BCC.w overerr
0002DF32 <AmiBlitz3.ab3@17394>   LSL.l #4,D3
0002DF36 <AmiBlitz3.ab3@17395>   SUBI.w #$30,D0
0002DF3A <AmiBlitz3.ab3@17396>   CMP.w #$9,D0
0002DF3E <AmiBlitz3.ab3@17397>    BLS.w 'skip
0002DF40 <AmiBlitz3.ab3@17398>   SUBQ.w #7,D0
0002DF42 <AmiBlitz3.ab3@17401>   OR.w D0,D3
0002DF46 <AmiBlitz3.ab3@17402>    BSR.w get1bytemain
0002DF4A <AmiBlitz3.ab3@17403>    BSR.w ishex
0002DF4E <AmiBlitz3.ab3@17404>    BEQ.w 'loop
0002DF52 <AmiBlitz3.ab3@17405> BRA.w fetchnum2
0002DF56 <AmiBlitz3.ab3@17409>    BSR.w get1bytemain
0002DF5A <AmiBlitz3.ab3@17410>    BSR.w checkbin
0002DF5E <AmiBlitz3.ab3@17411>    BNE.w syntaxerr
0002DF60 <AmiBlitz3.ab3@17412>    MOVEQ.l #$00,D3
0002DF62 <AmiBlitz3.ab3@17415>    LSL.l #1,D3
0002DF66 <AmiBlitz3.ab3@17416>    BCS.w overerr
0002DF6A <AmiBlitz3.ab3@17417>   SUBI.w #$30,D0
0002DF6C <AmiBlitz3.ab3@17418>   OR.w D0,D3
0002DF70 <AmiBlitz3.ab3@17419>    BSR.w get1bytemain
0002DF74 <AmiBlitz3.ab3@17420>    BSR.w checkbin
0002DF78 <AmiBlitz3.ab3@17421>    BEQ.w 'loop
0002DF7C <AmiBlitz3.ab3@17422> BRA.w fetchnum2
0002DF7E <AmiBlitz3.ab3@17426>    MOVE.w d2,-(A7)
0002DF86 <AmiBlitz3.ab3@17428>    MOVE.b #0,automode
0002DF8A <AmiBlitz3.ab3@17429>    CMP.b #"@",(a5)
0002DF8E <AmiBlitz3.ab3@17430>    BNE 'l1
0002DF90 <AmiBlitz3.ab3@17431>    ADDQ.l #1,a5
0002DF98 <AmiBlitz3.ab3@17432>    MOVE.b #1,automode
0002DF9C <AmiBlitz3.ab3@17433>    BSR getparameter2
0002DFA0 <AmiBlitz3.ab3@17434>    BSR findlabel2
0002DFA4 <AmiBlitz3.ab3@17435>    BNE 'addit
0002DFA8 <AmiBlitz3.ab3@17436>  BRA errormsg_autocount
0002DFAC <AmiBlitz3.ab3@17439>   BSR.w addlabelhash
0002DFB4 <AmiBlitz3.ab3@17440>   MOVE.l #$1,$4(A2)
0002DFB8 <AmiBlitz3.ab3@17441>   MOVEM.l a2/a5,-(a7)
0002DFBE <AmiBlitz3.ab3@17442>   MOVE.w lastchar,-(a7)
0002DFC4 <AmiBlitz3.ab3@17443>   LEA autostorename,a5
0002DFC8 <AmiBlitz3.ab3@17444>   BSR getparameter2
0002DFCC <AmiBlitz3.ab3@17445>   BSR findlabel2
0002DFD0 <AmiBlitz3.ab3@17446>   BEQ 'found
0002DFD4 <AmiBlitz3.ab3@17447>   BSR.w addlabelhash
0002DFDC <AmiBlitz3.ab3@17448>   MOVE.l #$1,$4(A2)
0002DFE4 <AmiBlitz3.ab3@17449>   MOVE.l #0,8(a2)
0002DFE6 <AmiBlitz3.ab3@17452>    MOVE.w (a7)+,d0
0002DFEC <AmiBlitz3.ab3@17453>    MOVE.w d0,lastchar
0002DFF0 <AmiBlitz3.ab3@17454>   MOVE.l 8(a2),d3
0002DFF8 <AmiBlitz3.ab3@17455>   ADD.l #1,8(a2)
0002DFFC <AmiBlitz3.ab3@17456>   MOVEM.l (a7)+,a2/a5
0002E000 <AmiBlitz3.ab3@17457>   MOVE.l d3,8(a2)
0002E004 <AmiBlitz3.ab3@17458>   MOVE.l $8(A2),D3
0002E008 <AmiBlitz3.ab3@17459>  BRA.l 'l3
0002E00C <AmiBlitz3.ab3@17463>   BSR.w getparameter2
0002E012 <AmiBlitz3.ab3@17465>     TST.b incnif
0002E016 <AmiBlitz3.ab3@17466>     BEQ 'lc1
0002E01A <AmiBlitz3.ab3@17467>     BSR.w findlabel2
0002E01E <AmiBlitz3.ab3@17468>     BNE 'l5
0002E020 <AmiBlitz3.ab3@17469>     MOVEQ #1,d3
0002E022 <AmiBlitz3.ab3@17470>     MOVE.w (A7)+,D2
0002E026 <AmiBlitz3.ab3@17471>  BRA fetchnum2
0002E028 <AmiBlitz3.ab3@17474>   MOVEQ #0,d3
0002E02A <AmiBlitz3.ab3@17475>     MOVE.w (A7)+,D2
0002E02E <AmiBlitz3.ab3@17476>  BRA fetchnum2
0002E032 <AmiBlitz3.ab3@17480>    BSR.w findlabel2
0002E036 <AmiBlitz3.ab3@17481>    BNE.w cnferr
0002E03E <AmiBlitz3.ab3@17484>    CMPI.l #$1,$4(A2)
0002E042 <AmiBlitz3.ab3@17485>    BNE.w cnferr
0002E046 <AmiBlitz3.ab3@17488>    MOVE.l $8(A2),D3
0002E048 <AmiBlitz3.ab3@17489>    MOVE.w (A7)+,D2
0002E04C <AmiBlitz3.ab3@17490> BRA.w fetchnum2     ;to right type.
0002E052 <AmiBlitz3.ab3@17495>   CLR.w vartype
0002E05A <AmiBlitz3.ab3@17496>   MOVE.b #3,peekaddrsize
0002E05E <AmiBlitz3.ab3@17498>   BSR.w ampersand2
0002E064 <AmiBlitz3.ab3@17500>   MOVE.l a2,rightsidetype
0002E06E <AmiBlitz3.ab3@17501>   MOVE.w flagmask,rightsideflagmask
0002E070 <AmiBlitz3.ab3@17503>   MOVEQ.l #$03,D2
0002E072 <AmiBlitz3.ab3@17504> RTS
0002E076 <AmiBlitz3.ab3@17508>    BSR.w get1bytemain
0002E088 <AmiBlitz3.ab3@17510>    !compare2
0002E08C <AmiBlitz3.ab3@17511>    BEQ andop2
0002E090 <AmiBlitz3.ab3@17513>    BSR.w getparameter
0002E094 <AmiBlitz3.ab3@17514>    BSR.w fetchvars
0002E098 <AmiBlitz3.ab3@17515>    BSR.w calcvar
0002E09C <AmiBlitz3.ab3@17517>   CMP.b #$7,D2
0002E0A0 <AmiBlitz3.ab3@17518>    BNE.w 'notst
0002E0A4 <AmiBlitz3.ab3@17519>   BTST #$F,D2
0002E0A8 <AmiBlitz3.ab3@17520>    BNE.w 'algot2
0002E0AE <AmiBlitz3.ab3@17521>   MOVE.w D3,stamp2+2
0002E0B4 <AmiBlitz3.ab3@17522>   MOVE.l stamp2,D1
0002E0B8 <AmiBlitz3.ab3@17523>    BSR.w pokela5s
0002E0BC <AmiBlitz3.ab3@17524>  BRA.w 'algot
0002E0C2 <AmiBlitz3.ab3@17527>   MOVE.w regnum,D1
0002E0C4 <AmiBlitz3.ab3@17528>   LSL.w #8,D1
0002E0C6 <AmiBlitz3.ab3@17529>   LSL.w #1,D1
0002E0CC <AmiBlitz3.ab3@17530>   OR.w stamp,D1
0002E0D0 <AmiBlitz3.ab3@17531>    BSR.w writeword
0002E0D2 <AmiBlitz3.ab3@17532>  RTS
0002E0D6 <AmiBlitz3.ab3@17535>   BTST #$F,D2
0002E0DA <AmiBlitz3.ab3@17536>    BNE.w 'algot
0002E0E0 <AmiBlitz3.ab3@17537>   MOVE.w D3,leaamp+2
0002E0E6 <AmiBlitz3.ab3@17538>   MOVE.l leaamp,D1
0002E0EA <AmiBlitz3.ab3@17539>    BSR.w pokela5s
0002E0F0 <AmiBlitz3.ab3@17542>   MOVE.w regnum,D1
0002E0F2 <AmiBlitz3.ab3@17543>   LSL.w #8,D1
0002E0F4 <AmiBlitz3.ab3@17544>   LSL.w #1,D1
0002E0FA <AmiBlitz3.ab3@17545>   OR.w leaamp2,D1
0002E0FE <AmiBlitz3.ab3@17546> BRA.w writeword
0002E102 <AmiBlitz3.ab3@17551>   MOVE.w #$D200,D1     ; was #ern,
0002E106 <AmiBlitz3.ab3@17552>    BSR.w Atokejsr
0002E108 <AmiBlitz3.ab3@17553>   MOVEQ.l #$03,D2
0002E10A <AmiBlitz3.ab3@17554> RTS
0002E10E <AmiBlitz3.ab3@17558> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002E110 <AmiBlitz3.ab3@17559>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002E112 <AmiBlitz3.ab3@17560>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002E116 <AmiBlitz3.ab3@17566>    BSR.w get1bytemain
0002E118 <AmiBlitz3.ab3@17568>   MOVE.w D0,D1
0002E11C <AmiBlitz3.ab3@17569>    BPL.w syntaxerr
0002E11E <AmiBlitz3.ab3@17570>   MOVE.w D2,-(A7)
0002E122 <AmiBlitz3.ab3@17571>   BCLR #$F,D1
0002E126 <AmiBlitz3.ab3@17572>    BSR.w searchinstr
0002E12A <AmiBlitz3.ab3@17573>   MOVE.l $12(A2),D0
0002E12E <AmiBlitz3.ab3@17574>   TST.w -$2(A2,D0.L)
0002E132 <AmiBlitz3.ab3@17575>    BEQ.w freeerr
0002E134 <AmiBlitz3.ab3@17576>   MOVE.w (A7)+,D2
0002E136 <AmiBlitz3.ab3@17577> RTS
0002E13A <AmiBlitz3.ab3@17581>   MOVE.l $0(A5),D0
0002E13E <AmiBlitz3.ab3@17582>    BNE.b ucodeskip
0002E140 <AmiBlitz3.ab3@17583>   MOVEQ.l #-$01,D0
0002E144 <AmiBlitz3.ab3@17584> BRA.b usedcodef
0002E148 <AmiBlitz3.ab3@17587>   SUB.l $0(A5),D0
0002E14A <AmiBlitz3.ab3@17590>   LSR.w #8,D0
0002E14E <AmiBlitz3.ab3@17595>    MOVE.l $0(A5),D0
0002E152 <AmiBlitz3.ab3@17596>    BNE.b ucodeskip2
0002E154 <AmiBlitz3.ab3@17597>   MOVEQ.l #-$01,D0
0002E158 <AmiBlitz3.ab3@17598> BRA.b usedcode2f
0002E15C <AmiBlitz3.ab3@17601>   SUB.l $0(A5),D0                                          ;usedcode2
0002E15E <AmiBlitz3.ab3@17602>   LSR.w #8,D0
0002E160 <AmiBlitz3.ab3@17605>   LSR.w #8,D0
0002E162 <AmiBlitz3.ab3@17610>   MOVE.l D0,-(A7)
0002E164 <AmiBlitz3.ab3@17613>   MOVE.l (A7)+,D0
0002E166 <AmiBlitz3.ab3@17616>   MOVE.l D0,D0
0002E16A <AmiBlitz3.ab3@17622>   BSR.w fetchit
0002E16E <AmiBlitz3.ab3@17624>   MOVE.w -$2(A2,D0.L),D3
0002E172 <AmiBlitz3.ab3@17625>   CMP.w #$9,D3
0002E176 <AmiBlitz3.ab3@17626>    BCC.w 'skip
0002E17A <AmiBlitz3.ab3@17630>   LEA usedcode(PC),A0
0002E17E <AmiBlitz3.ab3@17631>   LEA usedcodef(PC),A1
0002E184 <AmiBlitz3.ab3@17633>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002E188 <AmiBlitz3.ab3@17634>   ANDI.w #$7,D3
0002E18A <AmiBlitz3.ab3@17635>   LSL.w #8,D3
0002E18C <AmiBlitz3.ab3@17636>   LSL.w #1,D3
0002E190 <AmiBlitz3.ab3@17637>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002E194 <AmiBlitz3.ab3@17638>  BRA.w 'skip2
0002E198 <AmiBlitz3.ab3@17643>   LEA usedcode2(PC),A0
0002E19C <AmiBlitz3.ab3@17644>   LEA usedcode2f(PC),A1
0002E1A2 <AmiBlitz3.ab3@17646>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002E1A4 <AmiBlitz3.ab3@17647>   SUBQ.w #8,D3
0002E1A6 <AmiBlitz3.ab3@17648>   LSL.w #8,D3
0002E1A8 <AmiBlitz3.ab3@17649>   LSL.w #1,D3
0002E1AC <AmiBlitz3.ab3@17650>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002E1B0 <AmiBlitz3.ab3@17653>   MOVE.w -$6(A2,D0.L),D3
0002E1B4 <AmiBlitz3.ab3@17654>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002E1B6 <AmiBlitz3.ab3@17655>   ADDQ.w #4,D3
0002E1BA <AmiBlitz3.ab3@17656>   MOVE.w D3,$2(A0)
0002E1C0 <AmiBlitz3.ab3@17657>   MOVE.w regnum,D1
0002E1C4 <AmiBlitz3.ab3@17658>    BEQ.w 'skip3
0002E1C8 <AmiBlitz3.ab3@17659>   MOVE.w usedprep(PC),D1
0002E1CC <AmiBlitz3.ab3@17660>    BSR.w writeword
0002E1D0 <AmiBlitz3.ab3@17663>   BSR.w pokecode
0002E1D6 <AmiBlitz3.ab3@17664>   MOVE.w regnum,D1
0002E1DA <AmiBlitz3.ab3@17665>    BEQ.w 'skip4
0002E1DC <AmiBlitz3.ab3@17666>   LSL.w #8,D1
0002E1DE <AmiBlitz3.ab3@17667>   LSL.w #1,D1
0002E1E2 <AmiBlitz3.ab3@17668>   OR.w usedfix(PC),D1
0002E1E6 <AmiBlitz3.ab3@17669>    BSR.w writeword
0002E1EA <AmiBlitz3.ab3@17670>   MOVE.w useddone(PC),D1
0002E1EE <AmiBlitz3.ab3@17671>    BSR.w writeword
0002E1F0 <AmiBlitz3.ab3@17674>    MOVEQ.l #$02,D2
0002E1F4 <AmiBlitz3.ab3@17675> BRA.w get1bytemain
0002E1F8 <AmiBlitz3.ab3@17683>    BSR.w fetchit
0002E1FA <AmiBlitz3.ab3@17685>   MOVEQ.l #$00,D3
0002E1FE <AmiBlitz3.ab3@17686>   MOVE.w -$4(A2,D0.L),D3
0002E202 <AmiBlitz3.ab3@17687>    BSR.w get1bytemain
0002E206 <AmiBlitz3.ab3@17688> BRA.w fetchnum2
0002E20A <AmiBlitz3.ab3@17695>    BSR.w get1bytemain    ;get the token
0002E20C <AmiBlitz3.ab3@17696>   MOVE.w D0,-(A7)
0002E210 <AmiBlitz3.ab3@17697>    BSR.w get1bytemain    ;and the bracket?
0002E214 <AmiBlitz3.ab3@17698>   CMP.w #$28,D0          ;'('
0002E218 <AmiBlitz3.ab3@17699>    BNE.w syntaxerr
0002E21A <AmiBlitz3.ab3@17700>   MOVE.w (A7)+,D0
0002E21E <AmiBlitz3.ab3@17701>    BSR.w getmaxel
0002E222 <AmiBlitz3.ab3@17702>    BSR.w reget
0002E226 <AmiBlitz3.ab3@17703>   CMP.w #$29,D0          ;')'
0002E22A <AmiBlitz3.ab3@17704>    BNE.w syntaxerr
0002E22E <AmiBlitz3.ab3@17708>   LEA addrcode(PC),A0
0002E232 <AmiBlitz3.ab3@17709>   LEA addrcodef(PC),A1
0002E238 <AmiBlitz3.ab3@17710>   MOVE.w -$6(A2),$2(A0) ;x(a5)
0002E23C <AmiBlitz3.ab3@17711>   MOVE.w $4(A0),D1
0002E240 <AmiBlitz3.ab3@17712>   ANDI.w #$FFF8,D1
0002E246 <AmiBlitz3.ab3@17713>   OR.w regnum,D1
0002E24A <AmiBlitz3.ab3@17714>   MOVE.w D1,$4(A0)      ;add Dregat,a0
0002E24E <AmiBlitz3.ab3@17715>   MOVE.w $6(A0),D1
0002E252 <AmiBlitz3.ab3@17716>   ANDI.w #$F1FF,D1
0002E258 <AmiBlitz3.ab3@17717>   MOVE.w regnum,D0
0002E25A <AmiBlitz3.ab3@17718>   LSL.w #8,D0
0002E25C <AmiBlitz3.ab3@17719>   LSL.w #1,D0
0002E25E <AmiBlitz3.ab3@17720>   OR.w D0,D1
0002E262 <AmiBlitz3.ab3@17721>   MOVE.w D1,$6(A0)      ;move.l a0,Dregat
0002E266 <AmiBlitz3.ab3@17722>    BSR.w pokecode
0002E268 <AmiBlitz3.ab3@17723>   MOVEQ.l #$03,D2       ;now a long
0002E26C <AmiBlitz3.ab3@17724> BRA.w get1bytemain
0002E270 <AmiBlitz3.ab3@17730>   CMP.w #-$7F4D,D0     ; was #$8000+tnum,
0002E274 <AmiBlitz3.ab3@17731>    BHI.w 'overasm
0002E278 <AmiBlitz3.ab3@17732>  BRA.w syntaxerr
0002E27C <AmiBlitz3.ab3@17737>   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002E280 <AmiBlitz3.ab3@17738>    BNE 'nonull
0002E286 <AmiBlitz3.ab3@17739>    MOVE.l d0,lastinstruction
0002E28A <AmiBlitz3.ab3@17740>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002E290 <AmiBlitz3.ab3@17741>    MOVE.w regnum,d0
0002E292 <AmiBlitz3.ab3@17742>    ASL.l #7,d0
0002E294 <AmiBlitz3.ab3@17743>    ASL.l #2,d0
0002E296 <AmiBlitz3.ab3@17744>    OR.l d0,d1
0002E29A <AmiBlitz3.ab3@17745>    BSR writeword
0002E2A0 <AmiBlitz3.ab3@17746>    JSR get1bytemain
0002E2A2 <AmiBlitz3.ab3@17747>   RTS
0002E2A6 <AmiBlitz3.ab3@17750>   CMP.w #$c982,d0
0002E2AA <AmiBlitz3.ab3@17751>    BNE nonew_
0002E2AC <AmiBlitz3.ab3@17754>   MOVE.l a5,-(a7)
0002E2B2 <AmiBlitz3.ab3@17755>   MOVE.w lastchar,-(a7)
0002E2B8 <AmiBlitz3.ab3@17756>   JSR get1bytemain
0002E2BC <AmiBlitz3.ab3@17757>   CMP.w #"(",d0                                             ; use oldcode
0002E2C0 <AmiBlitz3.ab3@17758>   BNE 'newcode
0002E2C6 <AmiBlitz3.ab3@17759>   JSR get1bytemain
0002E2CA <AmiBlitz3.ab3@17760>   CMP.w #")",d0
0002E2CE <AmiBlitz3.ab3@17761>   BEQ 'newcode
0002E2D4 <AmiBlitz3.ab3@17762>   MOVE.w (a7)+,lastchar
0002E2D6 <AmiBlitz3.ab3@17763>   MOVE.l (a7)+,a5
0002E2DC <AmiBlitz3.ab3@17764>   MOVE.w lastchar,d0
0002E2E0 <AmiBlitz3.ab3@17765>   BRA nonew_
0002E2E2 <AmiBlitz3.ab3@17768>   MOVE.l a0,-(a7)
0002E2E8 <AmiBlitz3.ab3@17769>   TST.b blitzparloop
0002E2EC <AmiBlitz3.ab3@17770>   BNE 'err
0002E2F2 <AmiBlitz3.ab3@17771>   TST.b funcparloop
0002E2F6 <AmiBlitz3.ab3@17772>   BNE 'err
0002E2FA <AmiBlitz3.ab3@17773>   BRA 'ok
0002E300 <AmiBlitz3.ab3@17776>   JMP errornewnotincalls
0002E306 <AmiBlitz3.ab3@17779>   MOVE.l #$203c0000,d1
0002E30A <AmiBlitz3.ab3@17780>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002E30C <AmiBlitz3.ab3@17781>   MOVEQ #0,d1
0002E310 <AmiBlitz3.ab3@17782>   MOVE.w 8(a0),d1
0002E314 <AmiBlitz3.ab3@17783>   BSR writeword
0002E318 <AmiBlitz3.ab3@17784>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002E31C <AmiBlitz3.ab3@17785>   BSR writeword
0002E320 <AmiBlitz3.ab3@17786>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002E324 <AmiBlitz3.ab3@17787>   BSR.w tokejsr2
0002E326 <AmiBlitz3.ab3@17788>   MOVE.l (a7)+,a0
0002E328 <AmiBlitz3.ab3@17789>   ADDQ.l #6,a7                      ; a5 need not restore
0002E32C <AmiBlitz3.ab3@17790>   CMP.w #")",d0
0002E330 <AmiBlitz3.ab3@17791>   BNE 'nobracket
0002E336 <AmiBlitz3.ab3@17792>   JSR get1bytemain
0002E338 <AmiBlitz3.ab3@17795> RTS
0002E33C <AmiBlitz3.ab3@17799>   CMP.w #-$7F4A,D0      ; was #$8003+tnum,
0002E340 <AmiBlitz3.ab3@17800>    BEQ.w doern
0002E344 <AmiBlitz3.ab3@17801>   CMP.w #-$7F48,D0      ; was #$8005+tnum,
0002E348 <AmiBlitz3.ab3@17802>    BEQ.w doaddr
0002E34C <AmiBlitz3.ab3@17803>   CMP.w #-$7F3C,D0      ; was #$8011+tnum,
0002E350 <AmiBlitz3.ab3@17804>    BEQ.w domaximum
0002E354 <AmiBlitz3.ab3@17805>   CMP.w #-$7F2F,D0      ; was #$801e+tnum,
0002E358 <AmiBlitz3.ab3@17806>    BEQ.w doused
0002E35A <AmiBlitz3.ab3@17808>   MOVE.w D2,-(A7)       ;remember old type!
0002E35C <AmiBlitz3.ab3@17809>   MOVE.w D0,D1
0002E360 <AmiBlitz3.ab3@17810>   BCLR #$F,D1
0002E364 <AmiBlitz3.ab3@17814>    BSR.w searchinstr
0002E366 <AmiBlitz3.ab3@17815>   MOVE.w (A3),D1
0002E36A <AmiBlitz3.ab3@17816>   BTST #$1,D1
0002E36E <AmiBlitz3.ab3@17817>    BEQ.w noreturn_                                         ;syntax error noreturn
0002E372 <AmiBlitz3.ab3@17818>   BTST #$2,D1
0002E376 <AmiBlitz3.ab3@17819>    BNE.w amigalib
0002E378 <AmiBlitz3.ab3@17825>   LSR.w #8,D1
0002E37E <AmiBlitz3.ab3@17826>   BTST #$3,$1(A3)
0002E382 <AmiBlitz3.ab3@17827>    BEQ.w 'no0
0002E388 <AmiBlitz3.ab3@17829>    JSR sizespec2
0002E38E <AmiBlitz3.ab3@17833>    CLR.l rightsidetype
0002E394 <AmiBlitz3.ab3@17834>    CLR.w rightsideflagmask
0002E396 <AmiBlitz3.ab3@17836>    MOVE.w D1,-(A7)                                         ;is library instruction
0002E39A <AmiBlitz3.ab3@17837>   CMP.w #$7,D1
0002E39E <AmiBlitz3.ab3@17838>    BNE.w 'notst0
0002E3A0 <AmiBlitz3.ab3@17839>   MOVE.l A2,-(A7)
0002E3A4 <AmiBlitz3.ab3@17840>    BSR.w makesbase
0002E3A6 <AmiBlitz3.ab3@17841>   MOVEA.l (A7)+,A2
0002E3AA <AmiBlitz3.ab3@17844>     BSR.w savem
0002E3AC <AmiBlitz3.ab3@17845>   MOVE.w D3,-(A7)        ;the movem regs
0002E3B0 <AmiBlitz3.ab3@17847>    BSR.w get1bytemain
0002E3B2 <AmiBlitz3.ab3@17848>   MOVEQ.l #$00,D1
0002E3B6 <AmiBlitz3.ab3@17849>   CMP.w #$28,D0          ;'('
0002E3BA <AmiBlitz3.ab3@17850>    BNE.w 'nopars
0002E3C0 <AmiBlitz3.ab3@17851>    JSR countpees
0002E3C2 <AmiBlitz3.ab3@17852>   TST.w D1
0002E3C6 <AmiBlitz3.ab3@17853>    BEQ.w syntaxerr
0002E3CA <AmiBlitz3.ab3@17854>  BRA.w 'skip0
0002E3D4 <AmiBlitz3.ab3@17859>   MOVE.w oldqflag,instringon
0002E3DA <AmiBlitz3.ab3@17860>   MOVEA.l lastsourcepos,A5
0002E3E0 <AmiBlitz3.ab3@17864>    MOVE.w regnum,-(A7)
0002E3EA <AmiBlitz3.ab3@17866>    MOVE.w regnum,regnumstore
0002E3F0 <AmiBlitz3.ab3@17867>    TST.b fpu
0002E3F4 <AmiBlitz3.ab3@17868>             BEQ 'nofloat
0002E3FA <AmiBlitz3.ab3@17869>             CMP.w #$ffff,28(a3)
0002E3FE <AmiBlitz3.ab3@17870>             BNE 'nofloat
0002E404 <AmiBlitz3.ab3@17871>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002E408 <AmiBlitz3.ab3@17872>             BEQ 'nofloat
0002E40E <AmiBlitz3.ab3@17873>             CMP.w #$3c02,34(a3)                            ;int skip
0002E412 <AmiBlitz3.ab3@17874>             BEQ 'quick1
0002E416 <AmiBlitz3.ab3@17875>             CMP.b #5,(a3)
0002E41A <AmiBlitz3.ab3@17876>             BNE 'nofloat
0002E420 <AmiBlitz3.ab3@17879>             CLR.l load_var_addr
0002E424 <AmiBlitz3.ab3@17880>  BRA 'isfpu
0002E42A <AmiBlitz3.ab3@17884>    CLR.w regnum
0002E42C <AmiBlitz3.ab3@17887>    MOVE.w D1,-(A7)
0002E432 <AmiBlitz3.ab3@17888>   BTST #$3,$1(A3)
0002E436 <AmiBlitz3.ab3@17889>    BEQ.w 'no2
0002E43A <AmiBlitz3.ab3@17910>   MOVE.w $6(A7),D1
0002E440 <AmiBlitz3.ab3@17912>   MOVE.w d1,peeksize
0002E444 <AmiBlitz3.ab3@17923>   ORI.w #$7000,D1
0002E448 <AmiBlitz3.ab3@17924>   BSR.w writeword                                          ;write peekmode
0002E44E <AmiBlitz3.ab3@17927>   ADDQ.w #1,regnum
0002E450 <AmiBlitz3.ab3@17928>   MOVE.w (A7),D1
0002E458 <AmiBlitz3.ab3@17932>   MOVE.w 2(a7),tempregnum
0002E45E <AmiBlitz3.ab3@17933>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E464 <AmiBlitz3.ab3@17934>   CLR.w parnum                                              ;7.2014
0002E46A <AmiBlitz3.ab3@17936>   JSR dolibtoke                                             ;write code of blitzfunc
0002E470 <AmiBlitz3.ab3@17938>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E472 <AmiBlitz3.ab3@17940>   TST.w (A7)+
0002E476 <AmiBlitz3.ab3@17941>   BEQ.w 'skip
0002E47A <AmiBlitz3.ab3@17942>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E47E <AmiBlitz3.ab3@17943>   BNE.w errorbracketmiss                                    ; was syntax error
0002E484 <AmiBlitz3.ab3@17945>   CLR.l lasttoken
0002E488 <AmiBlitz3.ab3@17947>   BSR.w get1bytemain
0002E48A <AmiBlitz3.ab3@17950>    MOVE.w (A7)+,D1
0002E490 <AmiBlitz3.ab3@17951>    MOVE.w D1,regnum
0002E494 <AmiBlitz3.ab3@17952>    BEQ.w 'skip2
0002E49A <AmiBlitz3.ab3@17954>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E49E <AmiBlitz3.ab3@17955>    BNE 'noval
0002E4A4 <AmiBlitz3.ab3@17956>    TST.b fpu
0002E4A8 <AmiBlitz3.ab3@17957>    BEQ 'noval
0002E4AE <AmiBlitz3.ab3@17958>    CLR.l load_var_addr
0002E4B0 <AmiBlitz3.ab3@17959>    MOVEQ #0,d1
0002E4B6 <AmiBlitz3.ab3@17960>    MOVE.w regnum,d1
0002E4B8 <AmiBlitz3.ab3@17961>    LSL.l #7,d1
0002E4BE <AmiBlitz3.ab3@17962>    OR.l #$f2000000,d1
0002E4C2 <AmiBlitz3.ab3@17963>    BSR writelong
0002E4C6 <AmiBlitz3.ab3@17964>  BRA 'skip2
0002E4CC <AmiBlitz3.ab3@17967>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E4D0 <AmiBlitz3.ab3@17968>    BEQ 'quick
0002E4D4 <AmiBlitz3.ab3@17969>    CMP.b #5,d2
0002E4D8 <AmiBlitz3.ab3@17970>    BNE 'nofpu2
0002E4DE <AmiBlitz3.ab3@17971>    TST.b fpu
0002E4E2 <AmiBlitz3.ab3@17972>    BEQ 'nofpu2
0002E4E8 <AmiBlitz3.ab3@17977>    CLR.l load_var_addr
0002E4EC <AmiBlitz3.ab3@17978>  BRA 'skip2
0002E4EE <AmiBlitz3.ab3@17982>   LSL.w #8,D1
0002E4F0 <AmiBlitz3.ab3@17983>   LSL.w #1,D1
0002E4F4 <AmiBlitz3.ab3@17984>   ORI.w #$2000,D1
0002E4F8 <AmiBlitz3.ab3@17985>   BSR.w writeword      ;move.l d0,regat                                    ;write move.l d0,dx
0002E4FE <AmiBlitz3.ab3@17987>   TST.b fpu
0002E502 <AmiBlitz3.ab3@17988>   BEQ 'skip2
0002E504 <AmiBlitz3.ab3@17989>   MOVEQ #0,d1
0002E50A <AmiBlitz3.ab3@17990>   MOVE.w regnum,d1
0002E50C <AmiBlitz3.ab3@17991>   LSL.l #7,d1
0002E512 <AmiBlitz3.ab3@17992>   OR.l #$f2000000,d1
0002E514 <AmiBlitz3.ab3@17997>        MOVE.w (A7)+,D3
0002E518 <AmiBlitz3.ab3@17998>        BEQ.w 'nomovem
0002E51E <AmiBlitz3.ab3@18000>        TST.b fpu
0002E522 <AmiBlitz3.ab3@18001>        BEQ 'nofpu3
0002E524 <AmiBlitz3.ab3@18002>       MOVE.l d0,-(a7)
0002E526 <AmiBlitz3.ab3@18003>        MOVE.l a0,-(a7)
0002E52C <AmiBlitz3.ab3@18004>        MOVE.l stacktrack,d1
0002E532 <AmiBlitz3.ab3@18005>        LEA fpustackbase,a0
0002E53A <AmiBlitz3.ab3@18006>        MOVE.w 0(a0,d1),regmask
0002E53C <AmiBlitz3.ab3@18007>        MOVE.l (a7)+,a0
0002E540 <AmiBlitz3.ab3@18008>       MOVE.w #8,d0
0002E544 <AmiBlitz3.ab3@18011>       BEQ 'ready
0002E54A <AmiBlitz3.ab3@18012>       BTST d0,regmask
0002E54E <AmiBlitz3.ab3@18013>       BEQ 'noa7
0002E550 <AmiBlitz3.ab3@18014>       MOVEQ #0,d1
0002E552 <AmiBlitz3.ab3@18015>       MOVE.w d0,d1
0002E554 <AmiBlitz3.ab3@18016>       SUBQ.w #1,d1
0002E556 <AmiBlitz3.ab3@18017>       ASL #7,d1
0002E55C <AmiBlitz3.ab3@18019>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E560 <AmiBlitz3.ab3@18020>       BSR writelong
0002E566 <AmiBlitz3.ab3@18021>       SUBQ.l #2,stacktrack
0002E568 <AmiBlitz3.ab3@18024>       SUBQ.w #1,d0
0002E56C <AmiBlitz3.ab3@18025>       BNE 'loop
0002E56E <AmiBlitz3.ab3@18028>       MOVE.l (a7)+,d0
0002E574 <AmiBlitz3.ab3@18029>       SUBQ.l #2,stacktrack                                 ;int track
0002E578 <AmiBlitz3.ab3@18033>    MOVE.w #$4CDF,D1
0002E57C <AmiBlitz3.ab3@18034>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E57E <AmiBlitz3.ab3@18035>   MOVEQ.l #$00,D1
0002E580 <AmiBlitz3.ab3@18036>   MOVEQ.l #$0F,D4
0002E582 <AmiBlitz3.ab3@18039>     LSL.w #1,D3
0002E584 <AmiBlitz3.ab3@18040>     ROXR.w #1,D1
0002E588 <AmiBlitz3.ab3@18041>   DBF D4,'loopsw
0002E58C <AmiBlitz3.ab3@18042>    BSR.w writeword      ;poke movem (a7)+...
0002E592 <AmiBlitz3.ab3@18044>    TST.b fast
0002E596 <AmiBlitz3.ab3@18045>    BEQ 'nomovem
0002E59C <AmiBlitz3.ab3@18046>    TST.w regnum
0002E5A0 <AmiBlitz3.ab3@18047>    BEQ 'nomovem
0002E5A6 <AmiBlitz3.ab3@18048>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E5AA <AmiBlitz3.ab3@18049>    BNE 'l1b
0002E5B0 <AmiBlitz3.ab3@18050>    MOVE.w regnum,d1
0002E5B2 <AmiBlitz3.ab3@18051>    ASL.l #8,d1
0002E5B4 <AmiBlitz3.ab3@18052>    ASL.l #1,d1
0002E5B8 <AmiBlitz3.ab3@18053>    OR.w #$70ff,d1
0002E5C2 <AmiBlitz3.ab3@18054>    SUB.l #12,destpointer
0002E5C6 <AmiBlitz3.ab3@18055>    BSR writeword
0002E5CC <AmiBlitz3.ab3@18058>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E5D0 <AmiBlitz3.ab3@18059>    BNE 'l2b
0002E5D6 <AmiBlitz3.ab3@18060>     MOVE.w regnum,d1
0002E5D8 <AmiBlitz3.ab3@18061>     ASL.l #8,d1
0002E5DA <AmiBlitz3.ab3@18062>     ASL.l #1,d1
0002E5DE <AmiBlitz3.ab3@18063>     OR.w #$7000,d1
0002E5E8 <AmiBlitz3.ab3@18064>     SUB.l #12,destpointer
0002E5EC <AmiBlitz3.ab3@18065>     BSR writeword
0002E5EE <AmiBlitz3.ab3@18070>    MOVE.w (A7)+,D2
0002E5F2 <AmiBlitz3.ab3@18071>   CMP.w #$7,D2                                             ;destination var type
0002E5F6 <AmiBlitz3.ab3@18072>    BNE.w 'notst
0002E5FC <AmiBlitz3.ab3@18073>   MOVE.w putstlen,D1
0002E602 <AmiBlitz3.ab3@18074>   OR.w regnum,D1
0002E606 <AmiBlitz3.ab3@18075>    BSR.w writeword
0002E60A <AmiBlitz3.ab3@18078> BRA.w varcont
0002E60E <AmiBlitz3.ab3@18083>   MOVE.w $6(A3),D1
0002E612 <AmiBlitz3.ab3@18084>    BSR.w uselib           ;get lib for base address
0002E616 <AmiBlitz3.ab3@18085>    BSR.w savereg
0002E618 <AmiBlitz3.ab3@18086>   MOVE.l D4,D1
0002E61A <AmiBlitz3.ab3@18087>   MOVE.l D5,-(A7)
0002E61E <AmiBlitz3.ab3@18088>    BSR.w pokemovem
0002E622 <AmiBlitz3.ab3@18089>   MOVE.w $A(A1),-(A7)     ;libbase reg
0002E624 <AmiBlitz3.ab3@18090>   ADDQ.w #8,A3
0002E626 <AmiBlitz3.ab3@18091>   MOVE.w (A3)+,-(A7)      ;get offset for lib
0002E628 <AmiBlitz3.ab3@18092>   MOVE.l A3,-(A7)
0002E62C <AmiBlitz3.ab3@18093>    BSR.w get1bytemain
0002E62E <AmiBlitz3.ab3@18094>   MOVE.w D0,-(A7)         ;remember first bracket....
0002E630 <AmiBlitz3.ab3@18098>   MOVEQ.l #$00,D3
0002E636 <AmiBlitz3.ab3@18100>   JSR checka4a5
0002E638 <AmiBlitz3.ab3@18104>   MOVE.b (A3)+,D1
0002E63C <AmiBlitz3.ab3@18105>    BMI.w 'done
0002E63E <AmiBlitz3.ab3@18106>   MOVEQ.l #$03,D2
0002E640 <AmiBlitz3.ab3@18107>   ADDQ.w #1,D3
0002E644 <AmiBlitz3.ab3@18108>   MOVEM.l D3/A3,-(A7)
0002E64A <AmiBlitz3.ab3@18110>   MOVE.b funcparloop,-(a7)
0002E650 <AmiBlitz3.ab3@18111>   CLR.b funcparloop
0002E656 <AmiBlitz3.ab3@18112>   MOVE.b blitzparloop,-(a7)
0002E65E <AmiBlitz3.ab3@18113>   MOVE.b #1,blitzparloop
0002E664 <AmiBlitz3.ab3@18114>   MOVE.l lasttoken,-(a7)
0002E66A <AmiBlitz3.ab3@18115>   MOVE.l leftsidetype,-(a7)
0002E670 <AmiBlitz3.ab3@18116>   MOVE.l rightsidetype,-(a7)
0002E674 <AmiBlitz3.ab3@18118>   BSR.w peval
0002E67A <AmiBlitz3.ab3@18120>   MOVE.l (a7)+,rightsidetype
0002E680 <AmiBlitz3.ab3@18121>   MOVE.l (a7)+,leftsidetype
0002E686 <AmiBlitz3.ab3@18122>   MOVE.l (a7)+,lasttoken
0002E68C <AmiBlitz3.ab3@18123>   MOVE.b (a7)+,blitzparloop
0002E692 <AmiBlitz3.ab3@18124>   MOVE.b (a7)+,funcparloop
0002E698 <AmiBlitz3.ab3@18126>   SUBQ.w #4,a2offset              ;readjust stack! it's coming off later!
0002E69C <AmiBlitz3.ab3@18127>   MOVEM.l (A7)+,D3/A3
0002E6A0 <AmiBlitz3.ab3@18128>   CMP.w #$2C,D0                   ;','
0002E6A4 <AmiBlitz3.ab3@18129>    BEQ.w 'loop
0002E6A6 <AmiBlitz3.ab3@18130>   TST.b (A3)
0002E6AA <AmiBlitz3.ab3@18131>    BPL.w syntaxerr
0002E6AC <AmiBlitz3.ab3@18134>   MOVE.w (A7)+,D1
0002E6B0 <AmiBlitz3.ab3@18135>    BSR.w tstbras
0002E6B2 <AmiBlitz3.ab3@18136>   MOVEA.l (A7)+,A3
0002E6B4 <AmiBlitz3.ab3@18137>   SUBQ.w #1,D3
0002E6B8 <AmiBlitz3.ab3@18138>    BMI.w 'nopars
0002E6BA <AmiBlitz3.ab3@18141>   TST.b (A3)+                     ;go to end of params
0002E6BE <AmiBlitz3.ab3@18142>    BPL.w 'toend
0002E6C0 <AmiBlitz3.ab3@18143>   SUBQ.w #1,A3
0002E6C2 <AmiBlitz3.ab3@18146>     MOVEQ.l #$00,D1
0002E6C4 <AmiBlitz3.ab3@18147>     MOVE.b -(A3),D1
0002E6C8 <AmiBlitz3.ab3@18148>     BTST #$4,D1
0002E6CC <AmiBlitz3.ab3@18149>      BNE.w 'addreg
0002E6D2 <AmiBlitz3.ab3@18150>     CMP.w regnum,D1
0002E6D6 <AmiBlitz3.ab3@18151>      BCC.w 'nomovem
0002E6D8 <AmiBlitz3.ab3@18152>     BSET D1,D5
0002E6DA <AmiBlitz3.ab3@18153>     MOVEQ.l #$0F,D0
0002E6DC <AmiBlitz3.ab3@18154>     SUB.w D1,D0
0002E6DE <AmiBlitz3.ab3@18155>     BSET D0,D4
0002E6E0 <AmiBlitz3.ab3@18158>     LSL.w #8,D1
0002E6E2 <AmiBlitz3.ab3@18159>     LSL.w #1,D1
0002E6E6 <AmiBlitz3.ab3@18160>     ORI.w #$201F,D1
0002E6EA <AmiBlitz3.ab3@18161>    BRA.w 'gotit
0002E6EE <AmiBlitz3.ab3@18164>     ANDI.w #$7,D1
0002E6F0 <AmiBlitz3.ab3@18165>     LSL.w #8,D1
0002E6F2 <AmiBlitz3.ab3@18166>     LSL.w #1,D1
0002E6F6 <AmiBlitz3.ab3@18167>     ORI.w #$205F,D1
0002E6FA <AmiBlitz3.ab3@18170>      BSR.w writeword
0002E6FE <AmiBlitz3.ab3@18171>   DBF D3,'loop2
0002E704 <AmiBlitz3.ab3@18174>   MOVE.w (A7)+,libjsr+2
0002E70A <AmiBlitz3.ab3@18175>   MOVE.w (A7)+,libbase+2
0002E710 <AmiBlitz3.ab3@18176>   MOVE.l libbase,D1
0002E714 <AmiBlitz3.ab3@18177>    BSR.w writelong
0002E71A <AmiBlitz3.ab3@18178>   MOVE.l libjsr,D1
0002E71E <AmiBlitz3.ab3@18179>    BSR.w writelong
0002E724 <AmiBlitz3.ab3@18180>   MOVE.w regnum,D1
0002E728 <AmiBlitz3.ab3@18181>    BEQ.w 'nofin
0002E72A <AmiBlitz3.ab3@18182>   LSL.w #8,D1
0002E72C <AmiBlitz3.ab3@18183>   LSL.w #1,D1
0002E730 <AmiBlitz3.ab3@18184>   ORI.w #$2000,D1
0002E734 <AmiBlitz3.ab3@18185>    BSR.w writeword
0002E736 <AmiBlitz3.ab3@18188>   MOVE.l (A7)+,D1
0002E73A <AmiBlitz3.ab3@18189>    BSR.w pokemovem
0002E740 <AmiBlitz3.ab3@18191>    JSR restorea4a5
0002E742 <AmiBlitz3.ab3@18193>   MOVEQ.l #$03,D2
0002E746 <AmiBlitz3.ab3@18194>    BSR.w reget
0002E74A <AmiBlitz3.ab3@18195> BRA.w varcont
0002E74C <AmiBlitz3.ab3@18204>   TST.w D3
0002E750 <AmiBlitz3.ab3@18205>    BEQ.w 'nopars
0002E754 <AmiBlitz3.ab3@18206>   CMP.w #$28,D1      ;'('
0002E758 <AmiBlitz3.ab3@18207>    BNE.w syntaxerr
0002E75C <AmiBlitz3.ab3@18208>   CMP.w #$29,D0      ;')'
0002E760 <AmiBlitz3.ab3@18209>    BNE.w syntaxerr
0002E764 <AmiBlitz3.ab3@18210>  BRA.w get1bytemain
0002E768 <AmiBlitz3.ab3@18213>   CMP.w #$28,D1       ;'('
0002E76C <AmiBlitz3.ab3@18214>    BNE.w 'skip
0002E770 <AmiBlitz3.ab3@18215>    BSR.w get1bytemain
0002E774 <AmiBlitz3.ab3@18216>   CMP.w #$29,D0       ;')'
0002E778 <AmiBlitz3.ab3@18217>    BNE.w syntaxerr
0002E77C <AmiBlitz3.ab3@18218>  BRA.w get1bytemain
0002E77E <AmiBlitz3.ab3@18221> RTS
0002E780 <AmiBlitz3.ab3@18225>   TST.w D1
0002E784 <AmiBlitz3.ab3@18226>    BNE.w writelong
0002E786 <AmiBlitz3.ab3@18227> RTS
0002E78A <AmiBlitz3.ab3@18232>   MOVE.w #$48E7,D4
0002E78C <AmiBlitz3.ab3@18233>   SWAP D4
0002E78E <AmiBlitz3.ab3@18234>   CLR.w D4
0002E792 <AmiBlitz3.ab3@18235>   MOVE.w #$4CDF,D5
0002E794 <AmiBlitz3.ab3@18236>   SWAP D5
0002E796 <AmiBlitz3.ab3@18237>   CLR.w D5
0002E79C <AmiBlitz3.ab3@18238>   MOVE.w regnum,D1
0002E7A0 <AmiBlitz3.ab3@18239>    BEQ.w 'skip
0002E7A4 <AmiBlitz3.ab3@18240>   BSET #$F,D4
0002E7A8 <AmiBlitz3.ab3@18241>   BSET #$0,D5
0002E7AC <AmiBlitz3.ab3@18242>   CMP.w #$2,D1
0002E7B0 <AmiBlitz3.ab3@18243>    BCS.w 'skip2
0002E7B4 <AmiBlitz3.ab3@18246>   BSET #$E,D4
0002E7B8 <AmiBlitz3.ab3@18247>   BSET #$1,D5
0002E7BA <AmiBlitz3.ab3@18250>  RTS
0002E7C0 <AmiBlitz3.ab3@18253>   TST.w fuckpos
0002E7C4 <AmiBlitz3.ab3@18254>   BNE.w 'skip3
0002E7C6 <AmiBlitz3.ab3@18255> RTS
0002E7C8 <AmiBlitz3.ab3@18258> fuckpos:  Ds.w 1
0002E7CE <AmiBlitz3.ab3@18262>   MOVE.w sbasegot,D1
0002E7D2 <AmiBlitz3.ab3@18263>    BEQ.w 'skip
0002E7D6 <AmiBlitz3.ab3@18267>   MOVE.w sbgot(PC),D1
0002E7DA <AmiBlitz3.ab3@18268>    BNE.w 'skip2
0002E7E2 <AmiBlitz3.ab3@18272>   MOVE.w #$0002,sbgot
0002E7E8 <AmiBlitz3.ab3@18273>   MOVE.w movea3a7,D1
0002E7EC <AmiBlitz3.ab3@18274>  BRA.w writeword
0002E7EE <AmiBlitz3.ab3@18277>  RTS
0002E7F6 <AmiBlitz3.ab3@18282>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E7FC <AmiBlitz3.ab3@18284>   MOVE.l #$C601,D1                  ; was #workstart,
0002E804 <AmiBlitz3.ab3@18285>   MOVE.w #-1,sbasegot               
0002E80A <AmiBlitz3.ab3@18287>   MOVE.l d1,lastinstruction
0002E80E <AmiBlitz3.ab3@18289>   BSR.w Atokejsr
0002E810 <AmiBlitz3.ab3@18290> RTS
0002E81A <AmiBlitz3.ab3@18295>   MOVE.l data1,litdata1
0002E820 <AmiBlitz3.ab3@18297>   TST.b fast
0002E824 <AmiBlitz3.ab3@18298>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E828 <AmiBlitz3.ab3@18302>  BRA 'l50                                                  ;to deactivate
0002E82E <AmiBlitz3.ab3@18308>   TST.b optistring
0002E832 <AmiBlitz3.ab3@18309>   BNE.s 'l21
0002E838 <AmiBlitz3.ab3@18310>   CLR.b string1
0002E840 <AmiBlitz3.ab3@18311>   MOVE.b #1,optistring
0002E846 <AmiBlitz3.ab3@18312>   TST.b nostringopt
0002E84A <AmiBlitz3.ab3@18313>   BNE 'l21
0002E84C <AmiBlitz3.ab3@18314>   MOVE.l a5,a4
0002E84E <AmiBlitz3.ab3@18315>   SUBQ.l #1,a4
0002E850 <AmiBlitz3.ab3@18318>     TST.b (a4)
0002E854 <AmiBlitz3.ab3@18319>     BMI 'l19a
0002E858 <AmiBlitz3.ab3@18320>     BEQ.s 'l20
0002E85C <AmiBlitz3.ab3@18321>     CMP.b #$22,(a4)
0002E860 <AmiBlitz3.ab3@18322>     BEQ.s 'l19
0002E866 <AmiBlitz3.ab3@18325>     TST.w string1
0002E86A <AmiBlitz3.ab3@18326>     BNE 'l11
0002E86E <AmiBlitz3.ab3@18327>     CMP.b #":",(a4)
0002E872 <AmiBlitz3.ab3@18328>     BEQ.s 'l20
0002E876 <AmiBlitz3.ab3@18329>     CMP.b #";",(a4)
0002E87A <AmiBlitz3.ab3@18330>     BEQ.s 'l20
0002E87E <AmiBlitz3.ab3@18331>     CMP.b #"+",(a4)
0002E882 <AmiBlitz3.ab3@18332>     BEQ.s 'l21
0002E886 <AmiBlitz3.ab3@18333>     CMP.b #",",(a4)
0002E88A <AmiBlitz3.ab3@18334>     BEQ.s 'l20                                             ;was l21
0002E88E <AmiBlitz3.ab3@18335>     CMP.b #")",(a4)
0002E892 <AmiBlitz3.ab3@18336>     BEQ.s 'l20                                             ;was l21
0002E894 <AmiBlitz3.ab3@18339>     ADDQ.l #1,a4
0002E898 <AmiBlitz3.ab3@18340>  BRA.s 'l10
0002E8A0 <AmiBlitz3.ab3@18343>   BCHG #0,string1
0002E8A4 <AmiBlitz3.ab3@18344>  BRA 'l18
0002E8A6 <AmiBlitz3.ab3@18347>   ADDQ.l #1,a4
0002E8A8 <AmiBlitz3.ab3@18348>   TST.b (a4)
0002E8AC <AmiBlitz3.ab3@18349>   BEQ 'l21
0002E8B0 <AmiBlitz3.ab3@18350>  BRA 'l11
0002E8B2 <AmiBlitz3.ab3@18353>   MOVE.l a5,a4
0002E8B4 <AmiBlitz3.ab3@18354>   SUBQ.l #1,a4
0002E8B8 <AmiBlitz3.ab3@18357>   CMP.b #$20,-(a4)
0002E8BC <AmiBlitz3.ab3@18358>   BEQ 'll1
0002E8C0 <AmiBlitz3.ab3@18359>   CMP.b #"+",(a4)
0002E8C4 <AmiBlitz3.ab3@18360>   BEQ 'l21
0002E8CC <AmiBlitz3.ab3@18375>   MOVE.b #2,optistring
0002E8D4 <AmiBlitz3.ab3@18378>   CMP.b #2,optistring
0002E8D8 <AmiBlitz3.ab3@18379>   BEQ.s 'l100
0002E8DC <AmiBlitz3.ab3@18382>   BSR.w makesbase
0002E8E0 <AmiBlitz3.ab3@18384>   BSR.w pokedata1                                          ;writestringsizespace
0002E8E4 <AmiBlitz3.ab3@18385>   BSR.w pokedata1
0002E8E6 <AmiBlitz3.ab3@18388>   MOVEQ.l #$00,D2
0002E8EC <AmiBlitz3.ab3@18392>     MOVE.l a5,lastsourcepos
0002E8EE <AmiBlitz3.ab3@18393>     MOVEQ #0,d0
0002E8F0 <AmiBlitz3.ab3@18394>     MOVE.b (a5)+,d0
0002E8F2 <AmiBlitz3.ab3@18396>     TST.w D0
0002E8F6 <AmiBlitz3.ab3@18397>      BEQ.w notqerr
0002E8FA <AmiBlitz3.ab3@18398>     CMP.w #$22,D0     ; '"'                                     ; --- " ---
0002E8FE <AmiBlitz3.ab3@18399>      BEQ.w 'done
0002E902 <AmiBlitz3.ab3@18401>     CMP.b #"\",d0
0002E906 <AmiBlitz3.ab3@18402>      BNE 'l1
0002E90A <AmiBlitz3.ab3@18403>     CMP.b #"\",(a5)
0002E90E <AmiBlitz3.ab3@18404>      BNE 'l1
0002E914 <AmiBlitz3.ab3@18405>     TST.b newsyntax
0002E918 <AmiBlitz3.ab3@18406>      BEQ 'l1
0002E91E <AmiBlitz3.ab3@18407>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E922 <AmiBlitz3.ab3@18408>     BNE 'l2
0002E924 <AmiBlitz3.ab3@18409>     ADDQ #2,a5
0002E926 <AmiBlitz3.ab3@18412>     ADDQ.w #1,D2
0002E928 <AmiBlitz3.ab3@18413>     MOVE.w D0,D1
0002E92C <AmiBlitz3.ab3@18414>     BSR.w pokedata1b                                        ;writestring
0002E930 <AmiBlitz3.ab3@18415>  BRA.w 'writestring
0002E936 <AmiBlitz3.ab3@18418>     JSR check_newconstants
0002E93A <AmiBlitz3.ab3@18419>  BRA 'writestring
0002E940 <AmiBlitz3.ab3@18424>   NOT instringon
0002E946 <AmiBlitz3.ab3@18426>   MOVE.w dontwrite_nomemleft,D1
0002E94A <AmiBlitz3.ab3@18427>   BNE.w 'skip
0002E952 <AmiBlitz3.ab3@18429>   CMP.b #2,optistring
0002E956 <AmiBlitz3.ab3@18430>   BEQ 'skip
0002E95C <AmiBlitz3.ab3@18432>     MOVEA.l litdata1,A0
0002E95E <AmiBlitz3.ab3@18433>     CLR.w (A0)+                                            ;writesize
0002E960 <AmiBlitz3.ab3@18434>     MOVE.w D2,(A0)
0002E964 <AmiBlitz3.ab3@18437>   BSR.w makelit                                          ;writestringconstantcode
0002E96A <AmiBlitz3.ab3@18438>   ADDQ.l #1,data1
0002E972 <AmiBlitz3.ab3@18439>   BCLR #$0,data1+3
0002E974 <AmiBlitz3.ab3@18440>   MOVEQ.l #$07,D2
0002E978 <AmiBlitz3.ab3@18441> BRA.w get1bytemain
0002E97C <AmiBlitz3.ab3@18446>   BSR.w makename2
0002E980 <AmiBlitz3.ab3@18448>   BSR.w findlabel2
0002E984 <AmiBlitz3.ab3@18449>   BEQ.w 'found
0002E988 <AmiBlitz3.ab3@18451>   BSR.w addlabelhash
0002E98C <AmiBlitz3.ab3@18452>   CLR.l $4(A2)           ;no refs
0002E990 <AmiBlitz3.ab3@18453>   CLR.l $8(A2)           ;not created yet (no PC)
0002E998 <AmiBlitz3.ab3@18455>   MOVE.w linenumat+2,$10(A2)  ; was linenumat,    ;context
0002E99E <AmiBlitz3.ab3@18457>   MOVE.w linenumat,d0
0002E9A0 <AmiBlitz3.ab3@18458>   MOVEQ #0,d1
0002E9A4 <AmiBlitz3.ab3@18459>   MOVE.b -1(a2,d7),d1
0002E9A8 <AmiBlitz3.ab3@18460>   MOVE.w d0,0(a2,d1)
0002E9AC <AmiBlitz3.ab3@18462>  BRA.w 'makeit
0002E9B0 <AmiBlitz3.ab3@18465>   TST.l $8(A2)
0002E9B4 <AmiBlitz3.ab3@18466>   BNE.w 'gotit    ;already made
0002E9BA <AmiBlitz3.ab3@18472>   MOVEA.l _execbase,A6
0002E9BC <AmiBlitz3.ab3@18473>   MOVEQ.l #$0C+2,D0      ; was 12
0002E9BE <AmiBlitz3.ab3@18474>   MOVEQ.l #$01,D1
0002E9C4 <AmiBlitz3.ab3@18476>   MOVE.l mempool,a0
0002E9C8 <AmiBlitz3.ab3@18477>   JSR _AllocPooled(a6)
0002E9CA <AmiBlitz3.ab3@18480>   MOVEA.l D0,A0
0002E9CE <AmiBlitz3.ab3@18481>   MOVE.l $4(A2),(A0)
0002E9D2 <AmiBlitz3.ab3@18482>   MOVE.l A0,$4(A2)
0002E9DA <AmiBlitz3.ab3@18483>   MOVE.l destpointer,$4(A0)
0002E9DE <AmiBlitz3.ab3@18484>   ADDQ.l #2,$4(A0)
0002E9E6 <AmiBlitz3.ab3@18485>   MOVE.w procnum,$8(A0)
0002E9EE <AmiBlitz3.ab3@18486>   MOVE.w linenumat+2,$A(A0)   ; was linenumat,
0002E9F6 <AmiBlitz3.ab3@18488>   MOVE.w linenumat,$c(a0)
0002E9F8 <AmiBlitz3.ab3@18490>  RTS
0002E9FC <AmiBlitz3.ab3@18493>   MOVE.l $4(A2),D1
0002EA00 <AmiBlitz3.ab3@18494>   BTST #$0,D1
0002EA04 <AmiBlitz3.ab3@18495>    BNE.w illlaberr
0002EA0A <AmiBlitz3.ab3@18496>   MOVE.w procnum,D1
0002EA0E <AmiBlitz3.ab3@18497>   CMP.w $10(A2),D1
0002EA12 <AmiBlitz3.ab3@18498>    BNE.w referr
0002EA14 <AmiBlitz3.ab3@18501> RTS
0002EA16 <AmiBlitz3.ab3@18507>   MOVE.w D0,-(A7)
0002EA1E <AmiBlitz3.ab3@18509>   CMP.b #2,optistring
0002EA22 <AmiBlitz3.ab3@18510>   BEQ 'l10
0002EA28 <AmiBlitz3.ab3@18514>   MOVE.w numtoa0,D1
0002EA2C <AmiBlitz3.ab3@18515>    BSR.w writeword
0002EA30 <AmiBlitz3.ab3@18516>    BSR.w addoff
0002EA36 <AmiBlitz3.ab3@18517>   MOVE.l litdata1,D1
0002EA3A <AmiBlitz3.ab3@18518>    BSR.w writelong
0002EA40 <AmiBlitz3.ab3@18519>   MOVE.w pushlen,D1
0002EA44 <AmiBlitz3.ab3@18520>    BSR.w writeword
0002EA48 <AmiBlitz3.ab3@18521>   MOVE.w #$C600,D1        ; was #copstring
0002EA4C <AmiBlitz3.ab3@18522>    BSR.w Atokejsr
0002EA4E <AmiBlitz3.ab3@18523>   MOVE.w (A7)+,D0
0002EA50 <AmiBlitz3.ab3@18524>  RTS
0002EA52 <AmiBlitz3.ab3@18528>   MOVEQ #0,d1
0002EA56 <AmiBlitz3.ab3@18529>   BSR.w pokedata1b
0002EA5C <AmiBlitz3.ab3@18530>   MOVE.l destpointer,a4
0002EA60 <AmiBlitz3.ab3@18531>   MOVE.w #$203c,d1
0002EA66 <AmiBlitz3.ab3@18532>   TST.w mode
0002EA6A <AmiBlitz3.ab3@18533>   BNE 'lm10
0002EA70 <AmiBlitz3.ab3@18534>    ADDQ.w #4,a2offset
0002EA74 <AmiBlitz3.ab3@18535>   MOVE.w #$2f3c,d1
0002EA7A <AmiBlitz3.ab3@18538>   TST.w mode
0002EA7E <AmiBlitz3.ab3@18539>   BEQ 'lm3
0002EA84 <AmiBlitz3.ab3@18540>   MOVE.w regnum,D0
0002EA86 <AmiBlitz3.ab3@18541>   LSL.w #8,D0
0002EA88 <AmiBlitz3.ab3@18542>   LSL.w #1,D0
0002EA8A <AmiBlitz3.ab3@18543>   OR.w d0,d1
0002EA8E <AmiBlitz3.ab3@18544>   BSR writeword
0002EA92 <AmiBlitz3.ab3@18545>   BSR.w addoff
0002EA98 <AmiBlitz3.ab3@18546>   MOVE.l litdata1,D1
0002EA9C <AmiBlitz3.ab3@18547>   BSR.w writelong
0002EAA4 <AmiBlitz3.ab3@18548>   CMP.w #3,mode
0002EAA8 <AmiBlitz3.ab3@18549>   BEQ 'l30
0002EAAE <AmiBlitz3.ab3@18550>    ADDQ.w #4,a2offset
0002EAB2 <AmiBlitz3.ab3@18551>   MOVE.w #$4878,D1
0002EAB6 <AmiBlitz3.ab3@18552>   BSR.w writeword
0002EAB8 <AmiBlitz3.ab3@18553>   MOVE.l d2,d1
0002EABC <AmiBlitz3.ab3@18554>   BSR writeword
0002EABE <AmiBlitz3.ab3@18557>   MOVE.w (A7)+,D0
0002EAC0 <AmiBlitz3.ab3@18558>  RTS
0002EAC6 <AmiBlitz3.ab3@18561>   MOVE.l #$3f3c0007,d1
0002EACA <AmiBlitz3.ab3@18562>   BSR writelong
0002EAD0 <AmiBlitz3.ab3@18563>   MOVE.w regnum,D1
0002EAD2 <AmiBlitz3.ab3@18564>   LSL.w #8,D1
0002EAD4 <AmiBlitz3.ab3@18565>   LSL.w #1,D1
0002EAD8 <AmiBlitz3.ab3@18566>   ORI.w #$2f3c,d1
0002EADC <AmiBlitz3.ab3@18567>   BSR writeword
0002EAE2 <AmiBlitz3.ab3@18568>    ADDQ.w #4,a2offset
0002EAE4 <AmiBlitz3.ab3@18569>   MOVE.l d2,d1
0002EAE8 <AmiBlitz3.ab3@18570>   BSR writelong
0002EAEC <AmiBlitz3.ab3@18571>   MOVE.w #$2f3c,d1
0002EAF0 <AmiBlitz3.ab3@18572>   BSR writeword
0002EAF4 <AmiBlitz3.ab3@18573>   BSR.w addoff
0002EAFA <AmiBlitz3.ab3@18574>   MOVE.l litdata1,D1
0002EAFE <AmiBlitz3.ab3@18575>   BSR.w writelong
0002EB00 <AmiBlitz3.ab3@18576>   MOVE.w (A7)+,D0
0002EB02 <AmiBlitz3.ab3@18577> RTS
0002EB06 <AmiBlitz3.ab3@18582>   BSR.w get1bytemain
0002EB0A <AmiBlitz3.ab3@18583>    BSR.w makealab2
0002EB10 <AmiBlitz3.ab3@18585>   MOVE.w regnum,D1
0002EB12 <AmiBlitz3.ab3@18586>   LSL.w #8,D1
0002EB14 <AmiBlitz3.ab3@18587>   LSL.w #1,D1
0002EB18 <AmiBlitz3.ab3@18588>   ORI.w #$203C,D1
0002EB1C <AmiBlitz3.ab3@18589>    BSR.w writeword        ;create move.l #loc,dn
0002EB20 <AmiBlitz3.ab3@18590>    BSR.w addoff
0002EB24 <AmiBlitz3.ab3@18591>   MOVE.l $8(A2),D1
0002EB28 <AmiBlitz3.ab3@18592>    BSR.w writelong
0002EB2A <AmiBlitz3.ab3@18593>   MOVEQ.l #$03,D2
0002EB30 <AmiBlitz3.ab3@18595>   CLR.b peekaddrsize
0002EB34 <AmiBlitz3.ab3@18597> BRA.w reget
0002EB36 <AmiBlitz3.ab3@18601>   MOVEQ.l #$00,D3
0002EB3A <AmiBlitz3.ab3@18604>   BSR.w get1bytemain
0002EB3E <AmiBlitz3.ab3@18605>    BEQ.w syntaxerr
0002EB42 <AmiBlitz3.ab3@18606>   CMP.w #$22,D0         ;'"'
0002EB46 <AmiBlitz3.ab3@18607>    BEQ.w 'done
0002EB48 <AmiBlitz3.ab3@18608>   LSL.l #8,D3
0002EB4A <AmiBlitz3.ab3@18609>   MOVE.b D0,D3
0002EB4E <AmiBlitz3.ab3@18610>  BRA.w 'loop
0002EB52 <AmiBlitz3.ab3@18613>   BSR.w get1bytemain
0002EB56 <AmiBlitz3.ab3@18614> BRA.w fetchnum2
0002EB58 <AmiBlitz3.ab3@18618>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002EB5C <AmiBlitz3.ab3@18619>    BSR.w makename2              ;get the things name
0002EB60 <AmiBlitz3.ab3@18620>    BSR.w findlabel2
0002EB64 <AmiBlitz3.ab3@18622>    BEQ.w 'l10
0002EB6A <AmiBlitz3.ab3@18623>    LEA ptr_parameterstore,a0
0002EB70 <AmiBlitz3.ab3@18624>    CMP.b #"@",-1(a0,d2.w)
0002EB74 <AmiBlitz3.ab3@18626>    BNE cnferr
0002EB78 <AmiBlitz3.ab3@18628>    CLR.b -1(a0,d2.w)
0002EB7A <AmiBlitz3.ab3@18629>    SUBQ.l #1,d2
0002EB80 <AmiBlitz3.ab3@18630>    LEA varbase,a2
0002EB84 <AmiBlitz3.ab3@18631>    BSR findvariable
0002EB88 <AmiBlitz3.ab3@18632>    BNE cnferr
0002EB8C <AmiBlitz3.ab3@18633>    CMP.b #"\",d0
0002EB90 <AmiBlitz3.ab3@18634>    BNE 'l6
0002EB96 <AmiBlitz3.ab3@18635>    ADDQ #1,lastsourcepos
0002EB9A <AmiBlitz3.ab3@18636>    MOVE.l $a(a2),a2
0002EB9C <AmiBlitz3.ab3@18637>    ADDQ.l #4,a2
0002EBA0 <AmiBlitz3.ab3@18638>    BSR.w makename2
0002EBA4 <AmiBlitz3.ab3@18639>    BSR findvariable2
0002EBA8 <AmiBlitz3.ab3@18640>    BNE cnferr
0002EBAC <AmiBlitz3.ab3@18641>  BRA.s 'l6                                                  ;???
0002EBB0 <AmiBlitz3.ab3@18644>    MOVE.w $4(a2),d3
0002EBB2 <AmiBlitz3.ab3@18645>    EXT.l d3
0002EBB6 <AmiBlitz3.ab3@18646>  BRA 'npc
0002EBBA <AmiBlitz3.ab3@18650>   MOVE.l $8(A2),D3          ;val.
0002EBC2 <AmiBlitz3.ab3@18651>   CMPI.l #$1,$4(A2)
0002EBC6 <AmiBlitz3.ab3@18652>    BEQ.w 'npc
0002EBCC <AmiBlitz3.ab3@18653>   NOT.w asmtype
0002EBCE <AmiBlitz3.ab3@18656>   MOVE.w (A7)+,D2
0002EBD2 <AmiBlitz3.ab3@18657> BRA.w fetchnum2
0002EBD4 <AmiBlitz3.ab3@18661>   MOVE.w D2,-(A7)           ;remember old type
0002EBD8 <AmiBlitz3.ab3@18662>    BSR.w getparameter
0002EBDC <AmiBlitz3.ab3@18663>   CMP.w #"{",D0                                          ;test if var = function{}
0002EBE0 <AmiBlitz3.ab3@18664>    BEQ.w isfunction
0002EBE4 <AmiBlitz3.ab3@18665>    BSR.w fetchvars
0002EBE8 <AmiBlitz3.ab3@18667>    BSR.w calcvar                                         ;getvaroffset+type
0002EBEC <AmiBlitz3.ab3@18668>    BSR.w variable2
0002EBF2 <AmiBlitz3.ab3@18670>    MOVE.l a2,rightsidetype
0002EBFC <AmiBlitz3.ab3@18671>    MOVE.w flagmask, rightsideflagmask
0002EC02 <AmiBlitz3.ab3@18683>    TST.b typecheck
0002EC06 <AmiBlitz3.ab3@18684>    BEQ varcont
0002EC10 <AmiBlitz3.ab3@18685>    CMP.l #$da01,lasttoken                                  ;poke
0002EC14 <AmiBlitz3.ab3@18686>    BEQ 'l1
0002EC1E <AmiBlitz3.ab3@18687>    CMP.l #$da02,lasttoken                                  ;peek
0002EC22 <AmiBlitz3.ab3@18688>    BNE 'l2
0002EC2A <AmiBlitz3.ab3@18691>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002EC2E <AmiBlitz3.ab3@18692>    BNE varcont
0002EC34 <AmiBlitz3.ab3@18693>    MOVE.b d2,peekaddrsize
0002EC38 <AmiBlitz3.ab3@18694>    BRA varcont
0002EC3E <AmiBlitz3.ab3@18697>   CLR.b peekaddrsize
0002EC42 <AmiBlitz3.ab3@18701>   CMP.w #$1,D2
0002EC46 <AmiBlitz3.ab3@18702>    BNE.w 'notabyte
0002EC4C <AmiBlitz3.ab3@18706>   MOVE.w regnum,D1
0002EC50 <AmiBlitz3.ab3@18707>   ORI.w #$4880,D1      ;ext.w Dn
0002EC54 <AmiBlitz3.ab3@18708>    BSR.w writeword
0002EC56 <AmiBlitz3.ab3@18711>   MOVE.w (A7)+,D3      ;old type
0002EC5A <AmiBlitz3.ab3@18712>    BEQ.w 'done         ;type not set yet...
0002EC60 <AmiBlitz3.ab3@18715>    MOVE.l lastinstructionaddr,a0
0002EC64 <AmiBlitz3.ab3@18717>   CMP.w #$3,D3
0002EC68 <AmiBlitz3.ab3@18718>    BNE.w 'nob
0002EC6C <AmiBlitz3.ab3@18719>   CMP.w #$4,D2
0002EC70 <AmiBlitz3.ab3@18720>    BEQ.w 'conv2
0002EC72 <AmiBlitz3.ab3@18723>   CMP.w D2,D3
0002EC76 <AmiBlitz3.ab3@18724>    BLS.w 'done
0002EC78 <AmiBlitz3.ab3@18727>   EXG.l D2,D3
0002EC7A <AmiBlitz3.ab3@18729>   MOVE.l a0,-(a7)
0002EC80 <AmiBlitz3.ab3@18730>   TST.b typecheck
0002EC84 <AmiBlitz3.ab3@18731>   BEQ 'ok
0002EC8A <AmiBlitz3.ab3@18732>   TST.b notypecheck
0002EC8E <AmiBlitz3.ab3@18733>   BNE 'ok
0002EC94 <AmiBlitz3.ab3@18734>   MOVE.l leftsidetype,a0
0002EC9E <AmiBlitz3.ab3@18735>   CMP.l #0,leftsidetype
0002ECA2 <AmiBlitz3.ab3@18736>   BEQ 'ok
0002ECAA <AmiBlitz3.ab3@18737>   CMP.w #1,leftsideflagmask
0002ECAE <AmiBlitz3.ab3@18738>   BEQ 'isptr
0002ECB6 <AmiBlitz3.ab3@18739>   CMP.l #$100,4(a0)
0002ECBA <AmiBlitz3.ab3@18740>   BLE 'ok
0002ECBE <AmiBlitz3.ab3@18743>   CMP.b #3,d3
0002ECC2 <AmiBlitz3.ab3@18744>   BEQ 'ok
0002ECC6 <AmiBlitz3.ab3@18745>   CMP.b #7,d3
0002ECCA <AmiBlitz3.ab3@18746>   BEQ 'ok
0002ECD0 <AmiBlitz3.ab3@18747>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002ECD2 <AmiBlitz3.ab3@18750>   MOVE.l (a7)+,a0
0002ECD6 <AmiBlitz3.ab3@18752>   BSR.w writeconvertcode         ;called from var assign      ;bump up new type to old...
0002ECDA <AmiBlitz3.ab3@18755> BRA.w reget
0002ECDC <AmiBlitz3.ab3@18759>   MOVEQ.l #$00,D3
0002ECE2 <AmiBlitz3.ab3@18760>   MOVE.w regnum,D1
0002ECE6 <AmiBlitz3.ab3@18761>    BEQ.w savem_skip
0002ECE8 <AmiBlitz3.ab3@18762>   SUBQ.w #1,D1
0002ECEA <AmiBlitz3.ab3@18765>      LSR.l #1,D3
0002ECEE <AmiBlitz3.ab3@18766>      BSET #$F,D3
0002ECF2 <AmiBlitz3.ab3@18767>   DBF D1,'loop
0002ECF8 <AmiBlitz3.ab3@18769>    TST.b fpu
0002ECFC <AmiBlitz3.ab3@18770>    BEQ 'l1
0002ED02 <AmiBlitz3.ab3@18771>    ADDQ.l #2,stacktrack                                    ;intern command
0002ED04 <AmiBlitz3.ab3@18772>     MOVE.l a0,-(a7)
0002ED0A <AmiBlitz3.ab3@18773>     MOVE.l stacktrack,d1
0002ED10 <AmiBlitz3.ab3@18774>     LEA fpustackbase,a0
0002ED14 <AmiBlitz3.ab3@18775>     CLR.w 0(a0,d1)
0002ED1A <AmiBlitz3.ab3@18776>     CLR.w regmask
0002ED1C <AmiBlitz3.ab3@18777>     MOVE.l (a7)+,a0
0002ED20 <AmiBlitz3.ab3@18781>   MOVE.w #$48E7,D1
0002ED24 <AmiBlitz3.ab3@18782>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002ED26 <AmiBlitz3.ab3@18783>   MOVE.w D3,D1
0002ED2A <AmiBlitz3.ab3@18784> BRA.w writeword
0002ED2C <AmiBlitz3.ab3@18789>   MOVEQ.l #$00,D3
0002ED32 <AmiBlitz3.ab3@18790>   MOVE.w regnum,D1
0002ED36 <AmiBlitz3.ab3@18791>    BEQ.w savem_skip
0002ED38 <AmiBlitz3.ab3@18792>   SUBQ.w #1,D1
0002ED3A <AmiBlitz3.ab3@18795>     LSR.l #1,D3
0002ED3E <AmiBlitz3.ab3@18796>     BSET #$F,D3
0002ED42 <AmiBlitz3.ab3@18797>   DBF D1,'loop
0002ED48 <AmiBlitz3.ab3@18799>    TST.b fpu
0002ED4C <AmiBlitz3.ab3@18800>    BEQ 'l1
0002ED52 <AmiBlitz3.ab3@18801>    ADDQ.l #2,stacktrack                                    ;intern command
0002ED54 <AmiBlitz3.ab3@18802>     MOVE.l a0,-(a7)
0002ED5A <AmiBlitz3.ab3@18803>     MOVE.l stacktrack,d1
0002ED60 <AmiBlitz3.ab3@18804>     LEA fpustackbase,a0
0002ED64 <AmiBlitz3.ab3@18805>     CLR.w 0(a0,d1)
0002ED68 <AmiBlitz3.ab3@18806>    CMP.b #5,(a3)                                           ;result float ?
0002ED6C <AmiBlitz3.ab3@18807>     BNE 'nofpu
0002ED76 <AmiBlitz3.ab3@18809>     MOVE.w regnum,regnumfunc
0002ED7C <AmiBlitz3.ab3@18812>   CLR.w regmask
0002ED7E <AmiBlitz3.ab3@18813>     MOVE.l (a7)+,a0
0002ED82 <AmiBlitz3.ab3@18817>   MOVE.w #$48E7,D1
0002ED86 <AmiBlitz3.ab3@18818>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002ED88 <AmiBlitz3.ab3@18819>   MOVE.w D3,D1
0002ED8C <AmiBlitz3.ab3@18820>  BRA.w writeword
0002ED8E <AmiBlitz3.ab3@18823> RTS
0002ED90 <AmiBlitz3.ab3@18827>   MOVE.l D1,-(A7)
0002ED94 <AmiBlitz3.ab3@18828>   MOVE.w #$4EB9,D1
0002ED98 <AmiBlitz3.ab3@18829>    BSR.w writeword
0002ED9C <AmiBlitz3.ab3@18830>    BSR.w addoff
0002ED9E <AmiBlitz3.ab3@18831>   MOVE.l (A7)+,D1
0002EDA2 <AmiBlitz3.ab3@18832> BRA.w writelong
0002EDA6 <AmiBlitz3.ab3@18839>    BSR.w findproc                                          ;write function call
0002EDAA <AmiBlitz3.ab3@18841>    BEQ 'l1a
0002EDB0 <AmiBlitz3.ab3@18842>    TST.l unusedfunc
0002EDB4 <AmiBlitz3.ab3@18844>    BEQ noprocerr
0002EDBA <AmiBlitz3.ab3@18847>    JSR gotoendsource
0002EDC2 <AmiBlitz3.ab3@18850>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002EDC8 <AmiBlitz3.ab3@18851>   TST.l typetocast
0002EDCC <AmiBlitz3.ab3@18852>   BEQ 'nocast
0002EDD6 <AmiBlitz3.ab3@18853>   MOVE.l typetocast,rightsidetype
0002EDDC <AmiBlitz3.ab3@18854>   CLR.l typetocast
0002EDDE <AmiBlitz3.ab3@18855>   MOVE.l a1,-(a7)
0002EDE4 <AmiBlitz3.ab3@18856>   MOVE.l rightsidetype,a1
0002EDEA <AmiBlitz3.ab3@18857>   CMP.l leftsidetype,a1
0002EDEE <AmiBlitz3.ab3@18858>   BEQ 'ok
0002EDF4 <AmiBlitz3.ab3@18859>   JMP errorconvertreturntype2
0002EDF6 <AmiBlitz3.ab3@18862>   MOVE.l (a7)+,a1
0002EDF8 <AmiBlitz3.ab3@18866>   MOVEQ.l #$00,D1
0002EDFC <AmiBlitz3.ab3@18867>   MOVE.b $5(A2),D1
0002EE02 <AmiBlitz3.ab3@18869>   MOVE.b d1,retmode
0002EE06 <AmiBlitz3.ab3@18871>    BMI.w illprocerr
0002EE0C <AmiBlitz3.ab3@18873>    MOVE.b #1,isfunc(a2)
0002EE0E <AmiBlitz3.ab3@18875>   MOVE.w D1,-(A7)
0002EE10 <AmiBlitz3.ab3@18876>   MOVEQ.l #$00,D1
0002EE14 <AmiBlitz3.ab3@18877>   MOVE.b $4(A2),D1
0002EE16 <AmiBlitz3.ab3@18878>   LSR.w #4,D1
0002EE1A <AmiBlitz3.ab3@18879>    BEQ.w 'skip
0002EE1C <AmiBlitz3.ab3@18880>   LSL.w #2,D1
0002EE22 <AmiBlitz3.ab3@18881>   SUB.w D1,a2offset
0002EE26 <AmiBlitz3.ab3@18884>   CMPI.w #$7,(A7)       ;function type!
0002EE2A <AmiBlitz3.ab3@18885>    BNE.b 'sss
0002EE2C <AmiBlitz3.ab3@18886>   MOVE.l A2,-(A7)
0002EE30 <AmiBlitz3.ab3@18887>    BSR.w makesbase
0002EE32 <AmiBlitz3.ab3@18888>   MOVEA.l (A7)+,A2
0002EE38 <AmiBlitz3.ab3@18891>   MOVE.w sbasegot,-(A7)
0002EE3C <AmiBlitz3.ab3@18892>    BEQ.b 'sssz
0002EE40 <AmiBlitz3.ab3@18893>    BSR.w dopusha3
0002EE44 <AmiBlitz3.ab3@18896>   BSR.w savemfunc
0002EE46 <AmiBlitz3.ab3@18897>   MOVE.w D3,-(A7)             ;the movem regs
0002EE4A <AmiBlitz3.ab3@18899>   MOVE.l $E(A2),D1            ;pc of function call
0002EE4E <AmiBlitz3.ab3@18901>   TST.b $20(a2)                                            ;increase if morepar
0002EE52 <AmiBlitz3.ab3@18902>   BNE 'no0par
0002EE54 <AmiBlitz3.ab3@18903>   MOVE.l a5,a4
0002EE58 <AmiBlitz3.ab3@18906>   CMP.b #$20,(a4)+
0002EE5C <AmiBlitz3.ab3@18907>   BEQ 'l1
0002EE62 <AmiBlitz3.ab3@18908>   CMP.b #"}",-1(a4)
0002EE66 <AmiBlitz3.ab3@18909>   BNE  'no0par
0002EE68 <AmiBlitz3.ab3@18910>   MOVEQ #0,d0
0002EE6C <AmiBlitz3.ab3@18913>   LEA $16(A2),A1
0002EE6E <AmiBlitz3.ab3@18916>   MOVE.l d1,-(a7)
0002EE70 <AmiBlitz3.ab3@18917>   MOVE.b (a1),d2
0002EE72 <AmiBlitz3.ab3@18918>   MOVE.l d0,d1
0002EE76 <AmiBlitz3.ab3@18919>   CMP.w #4,d2
0002EE7A <AmiBlitz3.ab3@18920>   BNE 'l1b
0002EE80 <AmiBlitz3.ab3@18921>   ADD.l #$203c,d1
0002EE84 <AmiBlitz3.ab3@18922>   BSR writeword
0002EE8A <AmiBlitz3.ab3@18923>   MOVE.l #$ffff0000,d1
0002EE8E <AmiBlitz3.ab3@18924>   BSR writelong
0002EE92 <AmiBlitz3.ab3@18925>  BRA 'l2b
0002EE98 <AmiBlitz3.ab3@18928>    TST.b fpu
0002EE9C <AmiBlitz3.ab3@18929>    BNE 'l1c
0002EEA0 <AmiBlitz3.ab3@18930>    CMP.w #5,d2
0002EEA4 <AmiBlitz3.ab3@18931>    BNE 'l1c
0002EEAA <AmiBlitz3.ab3@18932>    ADD.l #$203c,d1
0002EEAE <AmiBlitz3.ab3@18933>    BSR writeword
0002EEB4 <AmiBlitz3.ab3@18934>    MOVE.l #$800000c1,d1
0002EEB8 <AmiBlitz3.ab3@18935>    BSR writelong
0002EEBC <AmiBlitz3.ab3@18936>  BRA 'l2b
0002EEC2 <AmiBlitz3.ab3@18939>   ADD.l #$70ff,d1
0002EEC6 <AmiBlitz3.ab3@18940>   BSR writeword
0002EECA <AmiBlitz3.ab3@18941>   CMP.w #7,d2
0002EECE <AmiBlitz3.ab3@18942>   BNE 'l1d
0002EED4 <AmiBlitz3.ab3@18943>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EED8 <AmiBlitz3.ab3@18944>   BSR writelong
0002EEDA <AmiBlitz3.ab3@18945>   MOVEQ #0,d1
0002EEDE <AmiBlitz3.ab3@18946>   BSR writeword
0002EEE4 <AmiBlitz3.ab3@18947>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EEE8 <AmiBlitz3.ab3@18948>   BSR writelong
0002EEEA <AmiBlitz3.ab3@18949>   MOVEQ #0,d1
0002EEEE <AmiBlitz3.ab3@18950>   BSR writeword
0002EEF4 <AmiBlitz3.ab3@18953>   MOVE.l #$f23c5000,d1
0002EEF6 <AmiBlitz3.ab3@18954>   MOVE.l d0,d2
0002EEF8 <AmiBlitz3.ab3@18955>   ASR.l #2,d2
0002EEFA <AmiBlitz3.ab3@18956>   ADD.l d2,d1
0002EEFE <AmiBlitz3.ab3@18957>   BSR writelong
0002EF02 <AmiBlitz3.ab3@18958>   MOVE.w #$ffff,d1
0002EF06 <AmiBlitz3.ab3@18959>   BSR writeword
0002EF08 <AmiBlitz3.ab3@18963>   MOVE.l (a7)+,d1
0002EF0A <AmiBlitz3.ab3@18964>      ADDQ.l #1,a1
0002EF10 <AmiBlitz3.ab3@18965>      ADD.l #$0200,d0
0002EF16 <AmiBlitz3.ab3@18966>      CMP.l #$0e00,d0
0002EF1A <AmiBlitz3.ab3@18967>      BEQ syntaxerr
0002EF1C <AmiBlitz3.ab3@18968>      TST.b (a1)
0002EF20 <AmiBlitz3.ab3@18969>      BNE 'again
0002EF24 <AmiBlitz3.ab3@18970>  BRA 'p1
0002EF28 <AmiBlitz3.ab3@18974>   TST.b $4(A2)
0002EF2C <AmiBlitz3.ab3@18975>    BNE.w 'somepars
0002EF30 <AmiBlitz3.ab3@18980>   BSR.w makefjsr
0002EF34 <AmiBlitz3.ab3@18981>    BSR.w get1bytemain
0002EF38 <AmiBlitz3.ab3@18982>  BRA.w 'nopars
0002EF3E <AmiBlitz3.ab3@18987>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002EF44 <AmiBlitz3.ab3@18989>   MOVE.w regnum,-(A7)         ;old regat
0002EF4E <AmiBlitz3.ab3@18991>   MOVE.w regnum,regnumfunc
0002EF50 <AmiBlitz3.ab3@18995>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002EF58 <AmiBlitz3.ab3@18997>   MOVE.b #1,funccall
0002EF5A <AmiBlitz3.ab3@18999>   MOVEQ.l #$00,D0
0002EF5E <AmiBlitz3.ab3@19000>   MOVE.b $4(A2),D0
0002EF68 <AmiBlitz3.ab3@19002>   MOVE.w a2offset,a2offset2
0002EF70 <AmiBlitz3.ab3@19003>   MOVE.b 5(a2),retmode
0002EF76 <AmiBlitz3.ab3@19004>   MOVE.l a2,currentfunccall
0002EF7A <AmiBlitz3.ab3@19006>   LEA $16(A2),A2              ;pointer to var desc
0002EF80 <AmiBlitz3.ab3@19007>   CLR.w regnum
0002EF86 <AmiBlitz3.ab3@19009>   CLR.w regmask
0002EF8C <AmiBlitz3.ab3@19010>   MOVE.b isconstantvalue,-(a7)
0002EF92 <AmiBlitz3.ab3@19011>   MOVE.b funcparloop,-(a7)
0002EF9A <AmiBlitz3.ab3@19012>   MOVE.b #1,funcparloop
0002EFA0 <AmiBlitz3.ab3@19013>   MOVE.l rightsidetype,-(a7)
0002EFA6 <AmiBlitz3.ab3@19014>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002EFAC <AmiBlitz3.ab3@19015>   MOVE.b blitzparloop,-(a7)
0002EFB2 <AmiBlitz3.ab3@19016>   CLR.b blitzparloop
0002EFB8 <AmiBlitz3.ab3@19018>   JSR fetchpees2
0002EFBE <AmiBlitz3.ab3@19021>   MOVE.b (a7)+,blitzparloop
0002EFC4 <AmiBlitz3.ab3@19022>   MOVE.l (a7)+,leftsidetype
0002EFCA <AmiBlitz3.ab3@19023>   MOVE.l (a7)+,rightsidetype
0002EFD0 <AmiBlitz3.ab3@19024>   MOVE.b (a7)+,funcparloop
0002EFD6 <AmiBlitz3.ab3@19025>   MOVE.b (a7)+,isconstantvalue
0002EFDC <AmiBlitz3.ab3@19027>   JSR chkstak
0002EFDE <AmiBlitz3.ab3@19028>   MOVE.l (A7)+,D1
0002EFE2 <AmiBlitz3.ab3@19045>    BTST #0,d1
0002EFE6 <AmiBlitz3.ab3@19046>    BNE intern1
0002EFEA <AmiBlitz3.ab3@19048>    BSR.w makefjsr
0002EFF0 <AmiBlitz3.ab3@19072>   MOVE.w (A7)+,regnum
0002EFF6 <AmiBlitz3.ab3@19074>   MOVE.w (a7)+,parnum                                     ;07.2014
0002EFFA <AmiBlitz3.ab3@19078>   CMP.w #"}",D0
0002EFFE <AmiBlitz3.ab3@19079>    BNE.w errorbracketmiss2
0002F000 <AmiBlitz3.ab3@19082>    MOVEQ #0,d1                                            ; end of function call pars
0002F006 <AmiBlitz3.ab3@19084>   MOVE.w regnum,D1
0002F00A <AmiBlitz3.ab3@19085>    BEQ.w 'nopars3
0002F010 <AmiBlitz3.ab3@19087>    TST.b fpu
0002F014 <AmiBlitz3.ab3@19088>    BEQ 'old
0002F01C <AmiBlitz3.ab3@19089>    CMP.b #5,retmode
0002F020 <AmiBlitz3.ab3@19090>    BNE 'old
0002F022 <AmiBlitz3.ab3@19091>    ASL.l #7,d1
0002F028 <AmiBlitz3.ab3@19092>    OR.l #$f2000000,d1
0002F02C <AmiBlitz3.ab3@19093>    BSR writelong
0002F030 <AmiBlitz3.ab3@19094>  BRA 'nopars3
0002F032 <AmiBlitz3.ab3@19098>   LSL.w #8,D1
0002F034 <AmiBlitz3.ab3@19099>   LSL.w #1,D1
0002F038 <AmiBlitz3.ab3@19100>   ORI.w #$2000,D1
0002F03C <AmiBlitz3.ab3@19101>    BSR.w writeword         ;move.l d0,regat
0002F03E <AmiBlitz3.ab3@19104>    MOVE.w (A7)+,D3
0002F042 <AmiBlitz3.ab3@19105>    BEQ.w 'nomovem
0002F048 <AmiBlitz3.ab3@19107>    TST.b fpu
0002F04C <AmiBlitz3.ab3@19108>    BEQ 'old2
0002F04E <AmiBlitz3.ab3@19109>    MOVE.l d0,-(a7)
0002F052 <AmiBlitz3.ab3@19110>    MOVE.w #8,d0
0002F054 <AmiBlitz3.ab3@19111>    MOVE.l a0,-(a7)
0002F05A <AmiBlitz3.ab3@19112>    MOVE.l stacktrack,d1
0002F060 <AmiBlitz3.ab3@19113>    LEA fpustackbase,a0
0002F068 <AmiBlitz3.ab3@19114>    MOVE.w 0(a0,d1),regmask
0002F06A <AmiBlitz3.ab3@19115>    MOVE.l (a7)+,a0
0002F06E <AmiBlitz3.ab3@19118>   BEQ 'ready
0002F074 <AmiBlitz3.ab3@19119>    BTST d0,regmask
0002F078 <AmiBlitz3.ab3@19120>    BEQ 'noa7
0002F07A <AmiBlitz3.ab3@19121>    MOVEQ #0,d1
0002F07C <AmiBlitz3.ab3@19122>    MOVE.w d0,d1
0002F07E <AmiBlitz3.ab3@19123>    SUBQ.w #1,d1
0002F080 <AmiBlitz3.ab3@19124>    ASL #7,d1
0002F086 <AmiBlitz3.ab3@19126>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002F08A <AmiBlitz3.ab3@19127>    BSR writelong
0002F090 <AmiBlitz3.ab3@19128>    SUBQ.l #2,stacktrack
0002F092 <AmiBlitz3.ab3@19131>    SUBQ.w #1,d0
0002F096 <AmiBlitz3.ab3@19132>    BNE 'loop
0002F09C <AmiBlitz3.ab3@19135>   SUBQ.l #2,stacktrack                                     ;integer sub
0002F09E <AmiBlitz3.ab3@19136>   MOVE.l (a7)+,d0
0002F0A2 <AmiBlitz3.ab3@19140>   MOVE.w #$4CDF,D1
0002F0A6 <AmiBlitz3.ab3@19141>    BSR.w writeword
0002F0A8 <AmiBlitz3.ab3@19142>   MOVEQ.l #$00,D1
0002F0AA <AmiBlitz3.ab3@19143>   MOVEQ.l #$0F,D4
0002F0AC <AmiBlitz3.ab3@19146>     LSL.w #1,D3
0002F0AE <AmiBlitz3.ab3@19147>     ROXR.w #1,D1
0002F0B2 <AmiBlitz3.ab3@19148>   DBF D4,'loopsw                                         ;movem.l (a7)+,dx
0002F0B6 <AmiBlitz3.ab3@19150>     BSR.w writeword        ;poke movem (a7)+...
0002F0BC <AmiBlitz3.ab3@19152>    CLR.w regnumfunc
0002F0BE <AmiBlitz3.ab3@19156>   MOVE.w (A7)+,D1
0002F0C2 <AmiBlitz3.ab3@19157>    BEQ.b 'nores
0002F0C6 <AmiBlitz3.ab3@19158>   CMPI.w #$7,(A7)
0002F0CA <AmiBlitz3.ab3@19159>    BEQ.b 'issb
0002F0D0 <AmiBlitz3.ab3@19161>   LEA geta3,A0
0002F0D6 <AmiBlitz3.ab3@19162>   LEA geta3f,A1
0002F0DA <AmiBlitz3.ab3@19163>    BSR.w pokecode
0002F0DE <AmiBlitz3.ab3@19164>  BRA.b 'nosb
0002F0E4 <AmiBlitz3.ab3@19168>   MOVE.w deca3,D1
0002F0E8 <AmiBlitz3.ab3@19169>    BSR.w writeword
0002F0EC <AmiBlitz3.ab3@19172>   BSR.w dopulla3          ;fix up string base
0002F0EE <AmiBlitz3.ab3@19175>   MOVE.w (A7)+,D2         ;what it returns!
0002F0F2 <AmiBlitz3.ab3@19176>   CMP.w #$7,D2
0002F0F6 <AmiBlitz3.ab3@19177>    BNE.w 'notst
0002F0FC <AmiBlitz3.ab3@19178>   MOVE.w putstlen,D1
0002F102 <AmiBlitz3.ab3@19179>   OR.w regnum,D1
0002F106 <AmiBlitz3.ab3@19180>    BSR.w writeword
0002F10A <AmiBlitz3.ab3@19183>   BSR.w get1bytemain
0002F10E <AmiBlitz3.ab3@19184> BRA.w varcont
0002F110 <AmiBlitz3.ab3@19188> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002F118 <AmiBlitz3.ab3@19196>   CMP.b #2,optistring
0002F11C <AmiBlitz3.ab3@19197>   BEQ 'fs2
0002F120 <AmiBlitz3.ab3@19199>   BSR.w makesbase                                          ;writestringvariable
0002F124 <AmiBlitz3.ab3@19200>   BTST #$F,D2
0002F128 <AmiBlitz3.ab3@19201>    BNE.w 'already
0002F12E <AmiBlitz3.ab3@19202>   MOVE.w D3,leaa5d3a2+2
0002F134 <AmiBlitz3.ab3@19203>   MOVE.l leaa5d3a2,D1
0002F138 <AmiBlitz3.ab3@19204>    BSR.w pokela5s
0002F13E <AmiBlitz3.ab3@19207>   MOVE.w regnum,D1
0002F140 <AmiBlitz3.ab3@19208>   LSL.w #8,D1
0002F142 <AmiBlitz3.ab3@19209>   LSL.w #1,D1
0002F146 <AmiBlitz3.ab3@19210>   ORI.w #$7000,D1
0002F14C <AmiBlitz3.ab3@19211>   LEA stvarget2,A0
0002F14E <AmiBlitz3.ab3@19212>   MOVE.w D1,(A0)
0002F154 <AmiBlitz3.ab3@19213>   MOVE.w regnum,D1
0002F15A <AmiBlitz3.ab3@19214>   ANDI.w #$FFF8,$2(A0)
0002F15E <AmiBlitz3.ab3@19215>   OR.w D1,$2(A0)
0002F164 <AmiBlitz3.ab3@19216>   LEA stvarget2f,A1
0002F168 <AmiBlitz3.ab3@19217>    BSR.w pokecode
0002F16C <AmiBlitz3.ab3@19218>   MOVE.w #$C600,D1     ; was #copstring,
0002F170 <AmiBlitz3.ab3@19219>    BSR.w Atokejsr
0002F172 <AmiBlitz3.ab3@19220>   MOVEQ.l #$07,D2
0002F176 <AmiBlitz3.ab3@19221>  BRA.w reget
0002F17C <AmiBlitz3.ab3@19225>      TST.w stackpar
0002F180 <AmiBlitz3.ab3@19226>      BMI 'l10
0002F186 <AmiBlitz3.ab3@19227>      MOVE.l #$3f3c0007,d1
0002F18C <AmiBlitz3.ab3@19228>      ADDQ.w #2,a2offset
0002F190 <AmiBlitz3.ab3@19229>      BSR writelong
0002F194 <AmiBlitz3.ab3@19232>   MOVE.w #$4878,d1
0002F19A <AmiBlitz3.ab3@19233>      CLR.w stackpar
0002F19E <AmiBlitz3.ab3@19234>      BSR writeword
0002F1A2 <AmiBlitz3.ab3@19235>      MOVE.w #$0,d1
0002F1A6 <AmiBlitz3.ab3@19236>      BSR writeword
0002F1AA <AmiBlitz3.ab3@19237>      MOVE.w #$246d,d1
0002F1AE <AmiBlitz3.ab3@19238>      BSR writeword
0002F1B0 <AmiBlitz3.ab3@19239>      MOVE.w d3,d1
0002F1B4 <AmiBlitz3.ab3@19240>      BSR writeword
0002F1BA <AmiBlitz3.ab3@19241>      MOVE.l #$4a926704,d1
0002F1BE <AmiBlitz3.ab3@19242>      BSR writelong
0002F1C4 <AmiBlitz3.ab3@19243>      MOVE.l #$2eaafffc,d1
0002F1C8 <AmiBlitz3.ab3@19244>      BSR writelong
0002F1CC <AmiBlitz3.ab3@19245>      MOVE.w #$2f0a,d1
0002F1D2 <AmiBlitz3.ab3@19246>      ADDQ.w #8,a2offset
0002F1D6 <AmiBlitz3.ab3@19247>      BSR writeword
0002F1DA <AmiBlitz3.ab3@19248> BRA.w reget
0002F1DE <AmiBlitz3.ab3@19253>   CMP.b #$7,D2                                             ;load basic var
0002F1E2 <AmiBlitz3.ab3@19254>    BEQ.w stvar
0002F1E8 <AmiBlitz3.ab3@19256>    TST.b iee
0002F1EC <AmiBlitz3.ab3@19257>    BEQ 'noiee
0002F1F0 <AmiBlitz3.ab3@19258>    CMP.b #5,d2
0002F1F4 <AmiBlitz3.ab3@19259>    BNE 'noiee
0002F1F6 <AmiBlitz3.ab3@19260>    MOVE.l d0,-(a7)                                         ;fpu load var
0002F1FA <AmiBlitz3.ab3@19261>    BTST #15,d2
0002F1FE <AmiBlitz3.ab3@19262>    BEQ 'var
0002F204 <AmiBlitz3.ab3@19263>    CMP.l #$7fff,d3
0002F208 <AmiBlitz3.ab3@19264>    BGT 'longoffset
0002F20E <AmiBlitz3.ab3@19265>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002F210 <AmiBlitz3.ab3@19266>    TST.w d3                                                ;offset =0
0002F214 <AmiBlitz3.ab3@19267>    BNE 'offset
0002F21A <AmiBlitz3.ab3@19270>   MOVE.l #$f2124400,d1
0002F21C <AmiBlitz3.ab3@19271>    MOVEQ #0,d3
0002F220 <AmiBlitz3.ab3@19272>  BRA 'glob
0002F226 <AmiBlitz3.ab3@19275>   SUBQ.l #4,destpointer
0002F22A <AmiBlitz3.ab3@19276>  BRA 'glob
0002F230 <AmiBlitz3.ab3@19279>   TST.b fast
0002F234 <AmiBlitz3.ab3@19280>    BEQ 'nofastload
0002F23A <AmiBlitz3.ab3@19281>    TST.w regnum
0002F23E <AmiBlitz3.ab3@19282>    BNE 'nofastload
0002F244 <AmiBlitz3.ab3@19283>    CMP.l fp0addr,a4
0002F248 <AmiBlitz3.ab3@19284>    BNE 'nofastload
0002F24E <AmiBlitz3.ab3@19285>    MOVE.l fp0iff,d1
0002F254 <AmiBlitz3.ab3@19286>    CMP.l firstiff,d1
0002F258 <AmiBlitz3.ab3@19287>    BNE 'nofastload
0002F25E <AmiBlitz3.ab3@19288>    MOVE.w varmode,d1
0002F264 <AmiBlitz3.ab3@19289>    CMP.w fp0mode,d1
0002F268 <AmiBlitz3.ab3@19290>    BNE 'nofastload
0002F26E <AmiBlitz3.ab3@19291>    CMP.w fp0var,d3
0002F272 <AmiBlitz3.ab3@19292>    BNE 'nofastload
0002F276 <AmiBlitz3.ab3@19293>    BCLR #16,d2
0002F278 <AmiBlitz3.ab3@19294>    MOVE.l (a7)+,d0
0002F27A <AmiBlitz3.ab3@19295>  RTS
0002F27C <AmiBlitz3.ab3@19298>    MOVEQ #0,d0
0002F282 <AmiBlitz3.ab3@19299>    MOVE.w regnum,d0
0002F288 <AmiBlitz3.ab3@19300>    CMP.l maxregs,d0
0002F28C <AmiBlitz3.ab3@19301>    BLE 'ok
0002F292 <AmiBlitz3.ab3@19302>    LEA cmplxerr,a0
0002F294 <AmiBlitz3.ab3@19303>   MOVE.l a0,-(a7)
0002F29A <AmiBlitz3.ab3@19304>  JMP handle_compileerror
0002F2A0 <AmiBlitz3.ab3@19307>    LEA regtable,a4
0002F2A2 <AmiBlitz3.ab3@19308>    TST.l (a4)
0002F2A6 <AmiBlitz3.ab3@19309>    BEQ 'noreg
0002F2AA <AmiBlitz3.ab3@19310>    CMP.w 0+4(a4),d3
0002F2AE <AmiBlitz3.ab3@19311>    BNE 'doreg1
0002F2B4 <AmiBlitz3.ab3@19312>    MOVE.l #$f2001c00,d1
0002F2BA <AmiBlitz3.ab3@19313>    MOVE.w regnum,d0
0002F2BC <AmiBlitz3.ab3@19314>    ASL.w #7,d0
0002F2BE <AmiBlitz3.ab3@19315>    OR.w d0,d1
0002F2C2 <AmiBlitz3.ab3@19316>    BSR writelong
0002F2C4 <AmiBlitz3.ab3@19317>    MOVE.l (a7)+,d0
0002F2C6 <AmiBlitz3.ab3@19318>  RTS
0002F2CA <AmiBlitz3.ab3@19321>   CMP.w 8+4(a4),d3
0002F2CE <AmiBlitz3.ab3@19322>    BNE 'doreg2
0002F2D4 <AmiBlitz3.ab3@19323>    MOVE.l #$f2001800,d1
0002F2DA <AmiBlitz3.ab3@19324>    MOVE.w regnum,d0
0002F2DC <AmiBlitz3.ab3@19325>    ASL.w #7,d0
0002F2DE <AmiBlitz3.ab3@19326>    OR.w d0,d1
0002F2E2 <AmiBlitz3.ab3@19327>    BSR writelong
0002F2E4 <AmiBlitz3.ab3@19328>    MOVE.l (a7)+,d0
0002F2E6 <AmiBlitz3.ab3@19329>  RTS
0002F2EA <AmiBlitz3.ab3@19332>   CMP.w 16+4(a4),d3
0002F2EE <AmiBlitz3.ab3@19333>    BNE 'doreg3
0002F2F4 <AmiBlitz3.ab3@19334>    MOVE.l #$f2001400,d1
0002F2FA <AmiBlitz3.ab3@19335>    MOVE.w regnum,d0
0002F2FC <AmiBlitz3.ab3@19336>    ASL.w #7,d0
0002F2FE <AmiBlitz3.ab3@19337>    OR.w d0,d1
0002F302 <AmiBlitz3.ab3@19338>    BSR  writelong
0002F304 <AmiBlitz3.ab3@19339>    MOVE.l (a7)+,d0
0002F306 <AmiBlitz3.ab3@19340>  RTS
0002F30A <AmiBlitz3.ab3@19343>   CMP.w 24+4(a4),d3
0002F30E <AmiBlitz3.ab3@19344>    BNE 'doreg4
0002F314 <AmiBlitz3.ab3@19345>    MOVE.l #$f2001000,d1
0002F31A <AmiBlitz3.ab3@19346>    MOVE.w regnum,d0
0002F31C <AmiBlitz3.ab3@19347>    ASL.w #7,d0
0002F31E <AmiBlitz3.ab3@19348>    OR.w d0,d1
0002F322 <AmiBlitz3.ab3@19349>    BSR writelong
0002F324 <AmiBlitz3.ab3@19350>    MOVE.l (a7)+,d0
0002F326 <AmiBlitz3.ab3@19351>  RTS
0002F32A <AmiBlitz3.ab3@19354>    CMP.w 32+4(a4),d3
0002F32E <AmiBlitz3.ab3@19355>    BNE 'noreg
0002F334 <AmiBlitz3.ab3@19356>    MOVE.l #$f2000c00,d1
0002F33A <AmiBlitz3.ab3@19357>    MOVE.w regnum,d0
0002F33C <AmiBlitz3.ab3@19358>    ASL.w #7,d0
0002F33E <AmiBlitz3.ab3@19359>    OR.w d0,d1
0002F342 <AmiBlitz3.ab3@19360>    BSR writelong
0002F344 <AmiBlitz3.ab3@19361>    MOVE.l (a7)+,d0
0002F346 <AmiBlitz3.ab3@19362>  RTS
0002F34C <AmiBlitz3.ab3@19365>    MOVE.l #$f22d4400,d1                                    ;var
0002F352 <AmiBlitz3.ab3@19366>    TST.w varmode
0002F356 <AmiBlitz3.ab3@19367>   BEQ 'glob
0002F35A <AmiBlitz3.ab3@19368>   BCLR #16,d1                                              ;local
0002F35C <AmiBlitz3.ab3@19371>    MOVEQ #0,d0
0002F362 <AmiBlitz3.ab3@19372>    MOVE.w regnum,d0
0002F366 <AmiBlitz3.ab3@19373>    CMP.w #7,d0
0002F36A <AmiBlitz3.ab3@19374>    BLE 'ok2
0002F370 <AmiBlitz3.ab3@19375>    LEA cmplxerr,a0
0002F372 <AmiBlitz3.ab3@19376>   MOVE.l a0,-(a7)
0002F378 <AmiBlitz3.ab3@19377>  JMP handle_compileerror
0002F37A <AmiBlitz3.ab3@19380>      ASL.w #7,d0
0002F37C <AmiBlitz3.ab3@19381>    OR.l d0,d1
0002F384 <AmiBlitz3.ab3@19382>    CMP.l #doublecheck,8(a2)
0002F388 <AmiBlitz3.ab3@19383>    BNE 'dbl
0002F38E <AmiBlitz3.ab3@19384>    OR.l #$00001000,d1
0002F392 <AmiBlitz3.ab3@19387>   BSR writelong
0002F394 <AmiBlitz3.ab3@19388>    MOVE.l (a7)+,d0
0002F398 <AmiBlitz3.ab3@19389>    AND.w #$ff,d2
0002F39A <AmiBlitz3.ab3@19390>    MOVE.w d3,d1
0002F39E <AmiBlitz3.ab3@19391>    BEQ 'nooffs
0002F3A2 <AmiBlitz3.ab3@19392>  BRA writeword
0002F3A4 <AmiBlitz3.ab3@19397>  RTS
0002F3AA <AmiBlitz3.ab3@19400>   MOVE.w regnum,D1
0002F3B0 <AmiBlitz3.ab3@19402>   MOVE.w d1,load_var_reg
0002F3B2 <AmiBlitz3.ab3@19404>   LSL.w #8,D1
0002F3BC <AmiBlitz3.ab3@19406>   MOVE.l destpointer,load_var_addr
0002F3C2 <AmiBlitz3.ab3@19407>   MOVE.w d2,load_var_size
0002F3C4 <AmiBlitz3.ab3@19409>   LSL.w #1,D1
0002F3C8 <AmiBlitz3.ab3@19410>   BTST #$E,D2
0002F3CC <AmiBlitz3.ab3@19411>    BNE.w 'pointer
0002F3CE <AmiBlitz3.ab3@19412>   TST.b D2
0002F3D2 <AmiBlitz3.ab3@19413>    BNE.w 'skip2
0002F3D4 <AmiBlitz3.ab3@19414>   MOVEQ.l #$03,D2
0002F3D8 <AmiBlitz3.ab3@19415>   ORI.w #$200A,D1
0002F3DC <AmiBlitz3.ab3@19416>  BRA.w writeword
0002F3E0 <AmiBlitz3.ab3@19419>   MOVE.b #$3,D2
0002F3E4 <AmiBlitz3.ab3@19422>   BTST #$F,D2
0002F3E8 <AmiBlitz3.ab3@19423>    BEQ.w 'simpvar                                         ;loadarray
0002F3EE <AmiBlitz3.ab3@19425>    TST.b fast                                              ;lea->move xx(a2)
0002F3F2 <AmiBlitz3.ab3@19426>    BEQ 'la10
0002F3F8 <AmiBlitz3.ab3@19431>    CLR.l load_var_addr
0002F3FC <AmiBlitz3.ab3@19432>  BRA 'la10
0002F404 <AmiBlitz3.ab3@19434>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002F408 <AmiBlitz3.ab3@19435>    BNE 'la10
0002F40E <AmiBlitz3.ab3@19436>    TST.b optiarray
0002F412 <AmiBlitz3.ab3@19437>    BNE 'la10
0002F418 <AmiBlitz3.ab3@19438>    MOVE.l destpointer,a4
0002F41E <AmiBlitz3.ab3@19439>    SUB.l loada,a4
0002F422 <AmiBlitz3.ab3@19440>    CMP.w #4,a4
0002F426 <AmiBlitz3.ab3@19441>    BEQ 'la100
0002F42A <AmiBlitz3.ab3@19442>    CMP.w #2,a4
0002F42E <AmiBlitz3.ab3@19443>    BNE 'la10
0002F434 <AmiBlitz3.ab3@19444>    MOVE.l destpointer,a4
0002F438 <AmiBlitz3.ab3@19445>    CMP.b #3,d2
0002F43C <AmiBlitz3.ab3@19446>    BCS 'la110
0002F442 <AmiBlitz3.ab3@19447>    MOVE.w #$202a,-2(a4)
0002F446 <AmiBlitz3.ab3@19448>    OR.w d1,-2(a4)
0002F44C <AmiBlitz3.ab3@19449>    MOVE.w arrayoffset,d1
0002F450 <AmiBlitz3.ab3@19450>    BSR writeword
0002F454 <AmiBlitz3.ab3@19451>  BRA 'more
0002F458 <AmiBlitz3.ab3@19454>    CMP.b #2,d2
0002F45C <AmiBlitz3.ab3@19455>    BNE 'la120
0002F462 <AmiBlitz3.ab3@19456>     MOVE.w #$302a,-2(a4)
0002F466 <AmiBlitz3.ab3@19457>    OR.w d1,-2(a4)
0002F46C <AmiBlitz3.ab3@19459>    MOVE.w arrayoffset,d1
0002F470 <AmiBlitz3.ab3@19460>    BSR writeword
0002F474 <AmiBlitz3.ab3@19461>  BRA 'more
0002F478 <AmiBlitz3.ab3@19464>   CMP.b #1,d2
0002F47C <AmiBlitz3.ab3@19465>    BNE.s 'la10
0002F482 <AmiBlitz3.ab3@19466>     MOVE.w #$102a,-2(a4)
0002F486 <AmiBlitz3.ab3@19467>    OR.w d1,-2(a4)
0002F48C <AmiBlitz3.ab3@19468>    MOVE.w arrayoffset,d1
0002F490 <AmiBlitz3.ab3@19469>    BSR writeword
0002F494 <AmiBlitz3.ab3@19470>  BRA 'more
0002F49A <AmiBlitz3.ab3@19473>   MOVE.l destpointer,a4
0002F4A0 <AmiBlitz3.ab3@19474>    CMP.w #$45ea,-2(a4)
0002F4A4 <AmiBlitz3.ab3@19475>    BNE 'la10
0002F4A8 <AmiBlitz3.ab3@19476>    CMP.b #3,d2
0002F4AC <AmiBlitz3.ab3@19477>    BCS 'la11
0002F4B2 <AmiBlitz3.ab3@19478>    MOVE.w #$202a,-4(a4)
0002F4B6 <AmiBlitz3.ab3@19479>    OR.w d1,-4(a4)
0002F4BA <AmiBlitz3.ab3@19480>  BRA 'more
0002F4BE <AmiBlitz3.ab3@19483>    CMP.b #2,d2
0002F4C2 <AmiBlitz3.ab3@19484>    BNE 'la12
0002F4C8 <AmiBlitz3.ab3@19485>     MOVE.w #$302a,-4(a4)
0002F4CC <AmiBlitz3.ab3@19486>    OR.w d1,-4(a4)
0002F4D0 <AmiBlitz3.ab3@19487>  BRA 'more
0002F4D4 <AmiBlitz3.ab3@19490>   CMP.b #1,d2
0002F4D8 <AmiBlitz3.ab3@19491>    BNE.s 'la10
0002F4DE <AmiBlitz3.ab3@19492>     MOVE.w #$102a,-4(a4)
0002F4E2 <AmiBlitz3.ab3@19493>    OR.w d1,-4(a4)
0002F4E6 <AmiBlitz3.ab3@19494>  BRA 'more
0002F4EC <AmiBlitz3.ab3@19498>    OR.w movea2dn,D1
0002F4F0 <AmiBlitz3.ab3@19499>    BSR.w 'size
0002F4F4 <AmiBlitz3.ab3@19500>    BSR.w writeword
0002F4F8 <AmiBlitz3.ab3@19503>   ANDI.w #$FF,D2
0002F4FA <AmiBlitz3.ab3@19504>  RTS
0002F500 <AmiBlitz3.ab3@19508>    MOVE.l destpointer,a4              ; "
0002F508 <AmiBlitz3.ab3@19509>    MOVE.l #$f22a4400,-4(a4)           ; "
0002F50E <AmiBlitz3.ab3@19510>    MOVE.w arrayoffset,d1              ; "
0002F512 <AmiBlitz3.ab3@19511>  BRA writeword
0002F518 <AmiBlitz3.ab3@19515>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F51C <AmiBlitz3.ab3@19516>    BSR.w 'size
0002F520 <AmiBlitz3.ab3@19517>    BSR.w pokewda5s
0002F522 <AmiBlitz3.ab3@19518>   MOVE.w D3,D1
0002F526 <AmiBlitz3.ab3@19519>    BSR.w writeword
0002F52A <AmiBlitz3.ab3@19520>  BRA.w 'more
0002F52E <AmiBlitz3.ab3@19525>   BTST #$E,D2
0002F532 <AmiBlitz3.ab3@19526>    BNE.w 'long
0002F536 <AmiBlitz3.ab3@19527>   CMP.b #$1,D2
0002F53A <AmiBlitz3.ab3@19528>    BEQ.w 'byte
0002F53E <AmiBlitz3.ab3@19529>   CMP.b #$2,D2
0002F542 <AmiBlitz3.ab3@19530>    BEQ.w 'word
0002F544 <AmiBlitz3.ab3@19533>  RTS
0002F548 <AmiBlitz3.ab3@19536>   EORI.w #$3000,D1
0002F54A <AmiBlitz3.ab3@19537>  RTS
0002F54E <AmiBlitz3.ab3@19540>   ORI.w #$1000,D1
0002F550 <AmiBlitz3.ab3@19541> RTS
0002F558 <AmiBlitz3.ab3@19547>   MOVE.w #$FFFF,dfetch    ; was -1
0002F55C <AmiBlitz3.ab3@19548>   BSR.w get1bytemain
0002F560 <AmiBlitz3.ab3@19549>   CMP.w #$2D,D0           ;'-'
0002F564 <AmiBlitz3.ab3@19550>    BNE.w 'datado
0002F568 <AmiBlitz3.ab3@19551>   BSR.w get1bytemain
0002F56C <AmiBlitz3.ab3@19552>   BSR.w 'datado
0002F570 <AmiBlitz3.ab3@19554>   CMP.w #$5,D2
0002F574 <AmiBlitz3.ab3@19555>    BCC.w 'nfp
0002F576 <AmiBlitz3.ab3@19556>   NEG.l D0
0002F578 <AmiBlitz3.ab3@19557>  RTS
0002F57E <AmiBlitz3.ab3@19561>   TST.b fpu
0002F582 <AmiBlitz3.ab3@19562>   BEQ 'noneg
0002F586 <AmiBlitz3.ab3@19563>   fneg.x fp0
0002F588 <AmiBlitz3.ab3@19564>  RTS
0002F58C <AmiBlitz3.ab3@19569>   BCHG #$7,D0
0002F58E <AmiBlitz3.ab3@19570>  RTS
0002F592 <AmiBlitz3.ab3@19574>   CMP.w #$24,D0          ;'$'
0002F596 <AmiBlitz3.ab3@19575>    BEQ.w get_hexconstant
0002F59A <AmiBlitz3.ab3@19576>   CMP.w #$25,D0          ;'%'
0002F59E <AmiBlitz3.ab3@19577>    BEQ.w fetchbin
0002F5A2 <AmiBlitz3.ab3@19580>   CMP.w #$2E,D0          ;'.'
0002F5A6 <AmiBlitz3.ab3@19581>    BNE.w fetchnum
0002F5A8 <AmiBlitz3.ab3@19585>   MOVEQ.l #$00,D3
0002F5AC <AmiBlitz3.ab3@19586> BRA.w fetchpoint2
0002F5AE <AmiBlitz3.ab3@19590>   MOVEQ.l #$00,D3                                          ;number
0002F5B2 <AmiBlitz3.ab3@19592>    BSR.w atoi
0002F5B6 <AmiBlitz3.ab3@19594>   CMP.w #$2E,D0             ;'.'
0002F5BA <AmiBlitz3.ab3@19595>    BEQ.w fetchpoint
0002F5BE <AmiBlitz3.ab3@19596>   ORI.w #$20,D0
0002F5C2 <AmiBlitz3.ab3@19597>   CMP.w #$65,D0             ;'e'
0002F5C6 <AmiBlitz3.ab3@19598>    BNE.w fetchnum2
0002F5CC <AmiBlitz3.ab3@19599>   CMP.l #$800000,D3
0002F5D0 <AmiBlitz3.ab3@19600>    BCC.w overerr
0002F5D2 <AmiBlitz3.ab3@19601>   MOVEQ.l #-$01,D6
0002F5D6 <AmiBlitz3.ab3@19603>   fmove.l d3,fp0
0002F5D8 <AmiBlitz3.ab3@19605>   MOVE.l D3,D0
0002F5DE <AmiBlitz3.ab3@19606>   MOVEA.l _mathffpbase,A6
0002F5E2 <AmiBlitz3.ab3@19607>    JSR -$24(A6)             ;int to ffp
0002F5E4 <AmiBlitz3.ab3@19608>   MOVE.l D0,D3
0002F5E8 <AmiBlitz3.ab3@19609>    BSR.w dothee
0002F5EC <AmiBlitz3.ab3@19610>    BSR.w reget
0002F5F0 <AmiBlitz3.ab3@19611>    BSR.w consttype2
0002F5F4 <AmiBlitz3.ab3@19612> BRA.w fetchnum3
0002F5F8 <AmiBlitz3.ab3@19617>   CMP.b #4,d2
0002F5FC <AmiBlitz3.ab3@19618>   BEQ 'l4
0002F600 <AmiBlitz3.ab3@19619>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F606 <AmiBlitz3.ab3@19622>    TST.b fpu
0002F60A <AmiBlitz3.ab3@19623>    BNE 'l1
0002F610 <AmiBlitz3.ab3@19625>    CMP.l #$800000,D3
0002F614 <AmiBlitz3.ab3@19626>    BCC.w overerr
0002F618 <AmiBlitz3.ab3@19628>  BRA fetchpoint2
0002F61E <AmiBlitz3.ab3@19631>   CMP.l #$7fffffff,d3
0002F622 <AmiBlitz3.ab3@19632>     BCC.w overerr
0002F624 <AmiBlitz3.ab3@19637>   MOVEQ.l #-$01,D6         ;now a float.
0002F626 <AmiBlitz3.ab3@19638>   MOVE.l D3,D0
0002F62A <AmiBlitz3.ab3@19640>   fmove.l d3,fp0
0002F630 <AmiBlitz3.ab3@19642>   MOVEA.l _mathffpbase,A6
0002F634 <AmiBlitz3.ab3@19643>    JSR -$24(A6)            ;int to ffp                                       ;integer to ffp
0002F636 <AmiBlitz3.ab3@19644>   MOVE.l D0,-(A7)          ;save whole number
0002F63A <AmiBlitz3.ab3@19645>    BSR.w get1bytemain
0002F63E <AmiBlitz3.ab3@19646>    BSR.w tstnum
0002F642 <AmiBlitz3.ab3@19647>    BNE.w syntaxerr
0002F644 <AmiBlitz3.ab3@19648>   MOVEQ.l #$00,D3
0002F648 <AmiBlitz3.ab3@19649>    BSR.w atoi              ;get int frac
0002F64A <AmiBlitz3.ab3@19650>   TST.l D3
0002F64E <AmiBlitz3.ab3@19651>    BEQ.w 'pskip
0002F654 <AmiBlitz3.ab3@19653>   TST.b fpu
0002F658 <AmiBlitz3.ab3@19654>   BNE 'l1
0002F65E <AmiBlitz3.ab3@19656>   CMP.l #$800000,D3
0002F662 <AmiBlitz3.ab3@19657>    BCC.w overerr
0002F666 <AmiBlitz3.ab3@19659>  BRA 'l2
0002F66C <AmiBlitz3.ab3@19662>   CMP.l #$7fffffff,d3
0002F670 <AmiBlitz3.ab3@19663>   BCC overerr
0002F674 <AmiBlitz3.ab3@19666>   fmove.l d5,fp1
0002F676 <AmiBlitz3.ab3@19668>   MOVE.l D5,D0
0002F67A <AmiBlitz3.ab3@19669>    JSR -$24(A6)        ;divisor to ffp
0002F67C <AmiBlitz3.ab3@19670>   MOVE.l D0,D5
0002F680 <AmiBlitz3.ab3@19672>   fmove.l d3,fp2
0002F682 <AmiBlitz3.ab3@19674>   MOVE.l D3,D0
0002F686 <AmiBlitz3.ab3@19675>    JSR -$24(A6)        ;to ffp
0002F68A <AmiBlitz3.ab3@19677>   fdiv.x fp1,fp2
0002F68C <AmiBlitz3.ab3@19679>   MOVE.l D5,D1
0002F690 <AmiBlitz3.ab3@19680>    JSR -$54(A6)       ;num/divisor (eg .25=25/100)
0002F694 <AmiBlitz3.ab3@19682>   fadd.x fp2,fp0
0002F696 <AmiBlitz3.ab3@19684>   MOVE.l (A7)+,D1
0002F69A <AmiBlitz3.ab3@19685>    JSR -$42(A6)       ;add 'em
0002F69C <AmiBlitz3.ab3@19686>   MOVE.l D0,D3
0002F6A0 <AmiBlitz3.ab3@19687>    BSR.w reget
0002F6A4 <AmiBlitz3.ab3@19688>   ORI.w #$20,D0
0002F6A8 <AmiBlitz3.ab3@19689>   CMP.w #$65,D0       ;'e'
0002F6AC <AmiBlitz3.ab3@19690>    BNE.w 'pskip2
0002F6B0 <AmiBlitz3.ab3@19693>    BSR.w dothee
0002F6B4 <AmiBlitz3.ab3@19696>    BSR.w reget
0002F6B8 <AmiBlitz3.ab3@19697>    BSR.w consttype2
0002F6BC <AmiBlitz3.ab3@19698> BRA.w fetchnum3
0002F6BE <AmiBlitz3.ab3@19701>   MOVE.l (A7)+,D3
0002F6C2 <AmiBlitz3.ab3@19702> BRA.w 'pskip2
0002F6C6 <AmiBlitz3.ab3@19707>   BSR.w get1bytemain
0002F6CA <AmiBlitz3.ab3@19708>   CMP.w #$2B,D0       ;'+'
0002F6CE <AmiBlitz3.ab3@19709>    BEQ.w 'pos
0002F6D2 <AmiBlitz3.ab3@19710>   CMP.w #$2D,D0       ;'-'
0002F6D6 <AmiBlitz3.ab3@19711>    BNE.w 'pos2
0002F6DA <AmiBlitz3.ab3@19713>    BSR.w get1bytemain
0002F6DE <AmiBlitz3.ab3@19714>    BSR.w getsign
0002F6E0 <AmiBlitz3.ab3@19718>   MOVE.l D3,D0
0002F6E4 <AmiBlitz3.ab3@19720>   fdiv.x fp1,fp0
0002F6E6 <AmiBlitz3.ab3@19722>   MOVE.l D4,D1
0002F6EA <AmiBlitz3.ab3@19723>    JSR -$54(A6)
0002F6EC <AmiBlitz3.ab3@19724>   MOVE.l D0,D3
0002F6EE <AmiBlitz3.ab3@19725> RTS
0002F6F2 <AmiBlitz3.ab3@19728>   BSR.w get1bytemain
0002F6F6 <AmiBlitz3.ab3@19731>   BSR.w getsign
0002F6FA <AmiBlitz3.ab3@19735>   fmul.x fp1,fp0
0002F6FC <AmiBlitz3.ab3@19736>   MOVE.l D3,D0
0002F6FE <AmiBlitz3.ab3@19737>   MOVE.l D4,D1
0002F702 <AmiBlitz3.ab3@19738>    JSR -$4E(A6)
0002F704 <AmiBlitz3.ab3@19739>   MOVE.l D0,D3
0002F706 <AmiBlitz3.ab3@19740> RTS
0002F70A <AmiBlitz3.ab3@19744>   BSR.w tstnum
0002F70E <AmiBlitz3.ab3@19745>    BNE.w syntaxerr
0002F710 <AmiBlitz3.ab3@19746>   MOVE.w D0,D4
0002F714 <AmiBlitz3.ab3@19747>   SUBI.w #$30,D4
0002F718 <AmiBlitz3.ab3@19748>    BSR.w get1bytemain
0002F71C <AmiBlitz3.ab3@19749>    BSR.w tstnum
0002F720 <AmiBlitz3.ab3@19750>    BNE.w 'skip
0002F724 <AmiBlitz3.ab3@19751>   MULU #$A,D4
0002F728 <AmiBlitz3.ab3@19752>   SUBI.w #$30,D0
0002F72A <AmiBlitz3.ab3@19753>   ADD.w D0,D4
0002F72E <AmiBlitz3.ab3@19754>    BSR.w get1bytemain
0002F732 <AmiBlitz3.ab3@19758>   CMP.w #$12,D4
0002F736 <AmiBlitz3.ab3@19759>    BHI.w overerr
0002F738 <AmiBlitz3.ab3@19761>   LSL.w #3,D4
0002F73E <AmiBlitz3.ab3@19762>   LEA fputab,a0
0002F740 <AmiBlitz3.ab3@19763>   ADD.l d4,a0
0002F746 <AmiBlitz3.ab3@19764>   fmove.d 0(a0),fp1
0002F748 <AmiBlitz3.ab3@19766>   LSR.w #1,d4               ; was #2
0002F74C <AmiBlitz3.ab3@19767>   MOVE.l facts(PC,D4.W),D4
0002F74E <AmiBlitz3.ab3@19768> RTS
0002F796 <AmiBlitz3.ab3@19772>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F79A <AmiBlitz3.ab3@19777>   Dc.l $80000041
0002F79E <AmiBlitz3.ab3@19778>   Dc.l $A0000044
0002F7A2 <AmiBlitz3.ab3@19779>   Dc.l $C8000047
0002F7A6 <AmiBlitz3.ab3@19780>   Dc.l $FA00004A
0002F7AA <AmiBlitz3.ab3@19781>   Dc.l $9C40004E
0002F7AE <AmiBlitz3.ab3@19782>   Dc.l $C3500051
0002F7B2 <AmiBlitz3.ab3@19783>   Dc.l $F4240054
0002F7B6 <AmiBlitz3.ab3@19784>   Dc.l $98968058
0002F7BA <AmiBlitz3.ab3@19785>   Dc.l $BEBC205B
0002F7BE <AmiBlitz3.ab3@19786>   Dc.l $EE6B285E
0002F7C2 <AmiBlitz3.ab3@19787>   Dc.l $9502F962
0002F7C6 <AmiBlitz3.ab3@19788>   Dc.l $BA43B765
0002F7CA <AmiBlitz3.ab3@19789>   Dc.l $E8D4A568
0002F7CE <AmiBlitz3.ab3@19790>   Dc.l $9184E76C
0002F7D2 <AmiBlitz3.ab3@19791>   Dc.l $B5E6A96F
0002F7D6 <AmiBlitz3.ab3@19792>   Dc.l $E35F2972
0002F7DA <AmiBlitz3.ab3@19793>   Dc.l $8E1BCA76
0002F7DE <AmiBlitz3.ab3@19794>   Dc.l $B1A2BD79
0002F7E2 <AmiBlitz3.ab3@19795>   Dc.l $DE0B6C7C
0002F7E4 <AmiBlitz3.ab3@19799>   MOVEQ.l #$01,D5
0002F7E6 <AmiBlitz3.ab3@19802>   LSL.l #1,D5
0002F7E8 <AmiBlitz3.ab3@19803>   MOVE.l D5,D1
0002F7EA <AmiBlitz3.ab3@19804>   LSL.l #2,D5
0002F7EC <AmiBlitz3.ab3@19805>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F7EE <AmiBlitz3.ab3@19807>   LSL.l #1,D3
0002F7F2 <AmiBlitz3.ab3@19808>    BCS.w overerr
0002F7F4 <AmiBlitz3.ab3@19809>   MOVE.l D3,D1
0002F7F6 <AmiBlitz3.ab3@19810>   LSL.l #1,D3
0002F7FA <AmiBlitz3.ab3@19811>    BCS.w overerr
0002F7FC <AmiBlitz3.ab3@19812>   LSL.l #1,D3
0002F800 <AmiBlitz3.ab3@19813>    BCS.w overerr
0002F802 <AmiBlitz3.ab3@19814>   ADD.l D1,D3
0002F806 <AmiBlitz3.ab3@19815>   SUBI.w #$30,D0
0002F808 <AmiBlitz3.ab3@19816>   ADD.l D0,D3
0002F834 <AmiBlitz3.ab3@19818>    !fget                                                   ;bsr.w get1bytemain
0002F838 <AmiBlitz3.ab3@19819>    CMP.b #1,d0
0002F83C <AmiBlitz3.ab3@19820>    BNE 'cm1
0002F83E <AmiBlitz3.ab3@19821>    SUBQ.l #1,a5
0002F842 <AmiBlitz3.ab3@19822>    BSR get1bytemain                                        ;??wy not !fget
0002F846 <AmiBlitz3.ab3@19825>   CMP.b #$7e,d0
0002F84A <AmiBlitz3.ab3@19826>    BNE 'cm2
0002F84C <AmiBlitz3.ab3@19827>    SUBQ.l #1,a5
0002F850 <AmiBlitz3.ab3@19828>    BSR get1bytemain
0002F852 <AmiBlitz3.ab3@19831>   TST.b d0
0002F856 <AmiBlitz3.ab3@19832>    BPL 'l10
0002F858 <AmiBlitz3.ab3@19833>    LSL.w #8,d0
0002F85A <AmiBlitz3.ab3@19834>    MOVE.b (a5)+,d0
0002F860 <AmiBlitz3.ab3@19835>    MOVE.w d0,lastchar
0002F872 <AmiBlitz3.ab3@19838>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F876 <AmiBlitz3.ab3@19840>    BEQ.w 'loop
0002F878 <AmiBlitz3.ab3@19841> RTS
0002F87A <AmiBlitz3.ab3@19844> dfetch:  Ds.w 1                                            ;fetching data?
0002F87E <AmiBlitz3.ab3@19848>   MOVE.w dfetch(PC),D1
0002F882 <AmiBlitz3.ab3@19849>    BEQ.w 'doit
0002F888 <AmiBlitz3.ab3@19850>   CLR.w dfetch
0002F88A <AmiBlitz3.ab3@19851>  RTS
0002F890 <AmiBlitz3.ab3@19855>   MOVE.b d2,isconstantvalue
0002F896 <AmiBlitz3.ab3@19856>   MOVE.l d0,lastconstantvalue
0002F89C <AmiBlitz3.ab3@19857>   MOVE.w d2,imm_size
0002F8A6 <AmiBlitz3.ab3@19858>   MOVE.w regnum,imm_reg
0002F8B0 <AmiBlitz3.ab3@19859>   MOVE.l destpointer,imm_addr                           ; long
0002F8B4 <AmiBlitz3.ab3@19861>   CMP.w #$3,D2          ; order of cmp/beq in org soure is different
0002F8B8 <AmiBlitz3.ab3@19862>   BEQ.w 'long
0002F8BC <AmiBlitz3.ab3@19863>   CMP.w #$5,D2                                          ;float
0002F8C0 <AmiBlitz3.ab3@19864>   BEQ.w 'long
0002F8C4 <AmiBlitz3.ab3@19865>   CMP.w #$1,D2
0002F8C8 <AmiBlitz3.ab3@19866>   BEQ.w 'word
0002F8CC <AmiBlitz3.ab3@19867>   CMP.w #$2,D2
0002F8D0 <AmiBlitz3.ab3@19868>   BEQ.w 'word
0002F8D4 <AmiBlitz3.ab3@19869>   CMP.w #$4,D2
0002F8D8 <AmiBlitz3.ab3@19870>   BEQ.w 'long
0002F8DC <AmiBlitz3.ab3@19871>  BRA.w mismatcherr
0002F8E2 <AmiBlitz3.ab3@19874>   MOVE.w regnum,D1
0002F8E4 <AmiBlitz3.ab3@19875>   LSL.w #8,D1
0002F8E6 <AmiBlitz3.ab3@19876>   LSL.w #1,D1
0002F8EA <AmiBlitz3.ab3@19877>   ORI.w #$303C,D1
0002F8EE <AmiBlitz3.ab3@19878>    BSR.w writeword
0002F8F0 <AmiBlitz3.ab3@19879>   MOVE.w D0,D1
0002F8F4 <AmiBlitz3.ab3@19880>    BSR.w writeword
0002F8F8 <AmiBlitz3.ab3@19881>  BRA.w reget
0002F8FA <AmiBlitz3.ab3@19885>   MOVEQ #0,d1
0002F900 <AmiBlitz3.ab3@19887>   MOVE.w regnum,D1
0002F906 <AmiBlitz3.ab3@19889>   TST.b fpu
0002F90A <AmiBlitz3.ab3@19890>   BEQ 'f1
0002F90E <AmiBlitz3.ab3@19891>   CMP.w #5,d2
0002F912 <AmiBlitz3.ab3@19892>   BEQ 'l10
0002F916 <AmiBlitz3.ab3@19893>  BRA 'f2
0002F91C <AmiBlitz3.ab3@19896>   TST.b iee
0002F920 <AmiBlitz3.ab3@19897>   BNE 'l10
0002F922 <AmiBlitz3.ab3@19901>   LSL.w #8,D1
0002F924 <AmiBlitz3.ab3@19902>   LSL.w #1,D1
0002F928 <AmiBlitz3.ab3@19903>   ORI.w #$203C,D1
0002F92C <AmiBlitz3.ab3@19904>    BSR.w writeword
0002F92E <AmiBlitz3.ab3@19905>   MOVE.l D0,D1
0002F932 <AmiBlitz3.ab3@19906>    BSR.w writelong
0002F936 <AmiBlitz3.ab3@19907>  BRA.w reget
0002F938 <AmiBlitz3.ab3@19911>   MOVEQ #5,d2
0002F93A <AmiBlitz3.ab3@19912>   ASL.l #7,d1
0002F93C <AmiBlitz3.ab3@19913>   SUBQ.l #8,a7
0002F942 <AmiBlitz3.ab3@19918>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F948 <AmiBlitz3.ab3@19919>        fmove.s fp0,0(a7)
0002F94C <AmiBlitz3.ab3@19921>   BSR writelong
0002F94E <AmiBlitz3.ab3@19922>   MOVE.l (a7)+,d1
0002F952 <AmiBlitz3.ab3@19923>   BSR writelong
0002F954 <AmiBlitz3.ab3@19924>   MOVE.l (a7)+,d1
0002F958 <AmiBlitz3.ab3@19928> BRA.w reget
0002F95A <AmiBlitz3.ab3@19935>  MOVE.l D3,D0
0002F95C <AmiBlitz3.ab3@19936>   TST.w D6
0002F960 <AmiBlitz3.ab3@19937>    BEQ.w 'skip            ;already integer
0002F966 <AmiBlitz3.ab3@19938>   MOVEA.l _mathffpbase,A6
0002F96A <AmiBlitz3.ab3@19939>    JSR -$1E(A6)
0002F96E <AmiBlitz3.ab3@19940>    BVC.w 'skip
0002F970 <AmiBlitz3.ab3@19941>   ADDQ.w #4,A7
0002F974 <AmiBlitz3.ab3@19942>  BRA.w numdofloat
0002F976 <AmiBlitz3.ab3@19945> RTS
0002F978 <AmiBlitz3.ab3@19949>   MOVEQ.l #$00,D6          ;no frac
0002F97C <AmiBlitz3.ab3@19951>    fmove.l d3,fp0
0002F980 <AmiBlitz3.ab3@19955>   BSR.w consttype2
0002F984 <AmiBlitz3.ab3@19956> BRA.w fetchnum3
0002F986 <AmiBlitz3.ab3@19964>   MOVE.w D2,-(A7)                       ;
0002F98A <AmiBlitz3.ab3@19965>    BSR.w evalconst                      ;  "
0002F98C <AmiBlitz3.ab3@19966>   MOVE.w (A7)+,D2
0002F98E <AmiBlitz3.ab3@19969>   TST.w D2
0002F992 <AmiBlitz3.ab3@19970>    BNE.w 'something
0002F994 <AmiBlitz3.ab3@19974>   TST.w D6
0002F998 <AmiBlitz3.ab3@19975>    BEQ.w 'nofrac
0002F99A <AmiBlitz3.ab3@19976>   MOVEQ.l #$04,D2
0002F99E <AmiBlitz3.ab3@19977>  BRA.w 'quick2
0002F9A0 <AmiBlitz3.ab3@19980>   MOVEQ.l #$02,D2
0002F9A4 <AmiBlitz3.ab3@19981>  BRA.w 'byte
0002F9A8 <AmiBlitz3.ab3@19984>   CMP.w #$1,D2
0002F9AC <AmiBlitz3.ab3@19985>    BEQ.w 'byte
0002F9B0 <AmiBlitz3.ab3@19986>   CMP.w #$2,D2
0002F9B4 <AmiBlitz3.ab3@19987>    BEQ.w 'word
0002F9B8 <AmiBlitz3.ab3@19988>   CMP.w #$3,D2
0002F9BC <AmiBlitz3.ab3@19989>    BEQ.w 'long
0002F9C0 <AmiBlitz3.ab3@19990>   CMP.w #$4,D2
0002F9C4 <AmiBlitz3.ab3@19991>    BEQ.w 'quick
0002F9C8 <AmiBlitz3.ab3@19992>   CMP.w #$5,D2
0002F9CC <AmiBlitz3.ab3@19993>    BEQ.w 'float
0002F9D0 <AmiBlitz3.ab3@19994>  BRA.w mismatcherr
0002F9D4 <AmiBlitz3.ab3@19997>   BSR.w makeint                                          ;bugfix if a.b=$90 bug fix
0002F9DA <AmiBlitz3.ab3@19998>   CMP.l #$7f,D0             ;127
0002F9DE <AmiBlitz3.ab3@19999>    BGT.w 'over1
0002F9E4 <AmiBlitz3.ab3@20000>   CMP.l #$FFFFFF80,D0       ;-128
0002F9E8 <AmiBlitz3.ab3@20001>    BGE.w 'dobword
0002F9EA <AmiBlitz3.ab3@20004>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F9F0 <AmiBlitz3.ab3@20005>   CMP.l #$7fff,D0           ;32767
0002F9F4 <AmiBlitz3.ab3@20006>    BGT.w 'byte2
0002F9FA <AmiBlitz3.ab3@20007>   CMP.l #$FFFF8000,D0       ;32768
0002F9FE <AmiBlitz3.ab3@20008>    BGE.w 'dobword
0002FA00 <AmiBlitz3.ab3@20011>   MOVEQ.l #$03,D2
0002FA04 <AmiBlitz3.ab3@20012>  BRA.w 'dobword
0002FA06 <AmiBlitz3.ab3@20039>   TST.w D6
0002FA0A <AmiBlitz3.ab3@20040>    BNE.w 'quick2
0002FA0E <AmiBlitz3.ab3@20041>    BSR.w makeint
0002FA12 <AmiBlitz3.ab3@20042>  BRA.w 'over1
0002FA16 <AmiBlitz3.ab3@20045>   BSR.w makeint
0002FA18 <AmiBlitz3.ab3@20046>   TST.w D6
0002FA1C <AmiBlitz3.ab3@20047>   BEQ.w 'qint
0002FA22 <AmiBlitz3.ab3@20050>   CMP.l #MaxWordSgnd,D0   ;32767
0002FA26 <AmiBlitz3.ab3@20051>    BGT.w numdofloat
0002FA2C <AmiBlitz3.ab3@20052>   CMP.l #$FFFF8000,D0     ;-32768
0002FA30 <AmiBlitz3.ab3@20053>    BLT.w numdofloat
0002FA32 <AmiBlitz3.ab3@20055>   MOVE.w D0,-(A7)         ;save whole part
0002FA36 <AmiBlitz3.ab3@20056>    JSR -$24(A6)           ;back to ffp
0002FA38 <AmiBlitz3.ab3@20057>   MOVE.l D0,D1
0002FA3A <AmiBlitz3.ab3@20058>   MOVE.l D3,D0
0002FA3E <AmiBlitz3.ab3@20059>    JSR -$48(A6)           ;subtract - d0=fraction!
0002FA44 <AmiBlitz3.ab3@20060>   MOVE.l #$80000051,D1    ;65536
0002FA48 <AmiBlitz3.ab3@20061>    JSR -$4E(A6)           ;*65536
0002FA4C <AmiBlitz3.ab3@20062>    JSR -$1E(A6)           ;back to int
0002FA50 <AmiBlitz3.ab3@20064>    BEQ.w 'knob            ;numdofloat
0002FA56 <AmiBlitz3.ab3@20065>   CMP.l #$10000,D0        ;65536
0002FA5A <AmiBlitz3.ab3@20066>    BCC.w 'knob            ;numdofloat
0002FA5C <AmiBlitz3.ab3@20067>   MOVE.w D0,D1
0002FA5E <AmiBlitz3.ab3@20068>   MOVE.w (A7)+,D0
0002FA60 <AmiBlitz3.ab3@20069>   SWAP D0
0002FA62 <AmiBlitz3.ab3@20070>   MOVE.w D1,D0
0002FA66 <AmiBlitz3.ab3@20071>  BRA.w 'dolong
0002FA68 <AmiBlitz3.ab3@20074>   ADDQ.w #2,A7
0002FA6C <AmiBlitz3.ab3@20075>  BRA.w numdofloat
0002FA72 <AmiBlitz3.ab3@20078>   CMP.l #MaxWordSgnd,D0   ;#32767
0002FA76 <AmiBlitz3.ab3@20079>    BGT.w 'byte2
0002FA7C <AmiBlitz3.ab3@20080>   CMP.l #$FFFF8000,D0     ;#32768
0002FA80 <AmiBlitz3.ab3@20081>    BLT.w 'byte2
0002FA82 <AmiBlitz3.ab3@20082>   SWAP D0
0002FA86 <AmiBlitz3.ab3@20083>  BRA.w 'dolong
0002FA88 <AmiBlitz3.ab3@20086>   TST.w D6
0002FA8C <AmiBlitz3.ab3@20087>   BNE.w numdofloat
0002FA8E <AmiBlitz3.ab3@20088>   MOVE.l D3,D0
0002FA92 <AmiBlitz3.ab3@20089>  BRA.w 'dolong
0002FA94 <AmiBlitz3.ab3@20092>   TST.w D6
0002FA98 <AmiBlitz3.ab3@20093>   BNE.w numdofloat
0002FA9A <AmiBlitz3.ab3@20094>   MOVE.l D3,D0
0002FAA0 <AmiBlitz3.ab3@20095>   MOVEA.l _mathffpbase,A6
0002FAA4 <AmiBlitz3.ab3@20096>   JSR -$24(A6)           ;int to float
0002FAA6 <AmiBlitz3.ab3@20097>   MOVE.l D0,D3
0002FAAA <AmiBlitz3.ab3@20098>  BRA.w numdofloat
0002FAAC <AmiBlitz3.ab3@20102> RTS
0002FAAE <AmiBlitz3.ab3@20106>   MOVEQ.l #$05,D2
0002FAB0 <AmiBlitz3.ab3@20107>   MOVE.l D3,D0
0002FAB2 <AmiBlitz3.ab3@20108> RTS
0002FAB6 <AmiBlitz3.ab3@20112>             Ds.l 1                                         ;??Looks like unused data??
0002FABA <AmiBlitz3.ab3@20113> pushpc:     Ds.l 1
0002FABE <AmiBlitz3.ab3@20114> pushoff:    Ds.l 1
0002FAC2 <AmiBlitz3.ab3@20115> pushdooff:  Ds.l 1
0002FAC4 <AmiBlitz3.ab3@20116> pushclen:   Ds.w 1
0002FAC8 <AmiBlitz3.ab3@20117> pushat:     Ds.l 1
0002FAD2 <AmiBlitz3.ab3@20123>   MOVE.l destpointer,pushpc
0002FADC <AmiBlitz3.ab3@20124>   MOVE.l hunkoffsetbase,pushoff
0002FADE <AmiBlitz3.ab3@20125>  RTS
0002FAE2 <AmiBlitz3.ab3@20131>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FAE8 <AmiBlitz3.ab3@20133>   MOVE.l destpointer,D0
0002FAEC <AmiBlitz3.ab3@20134>   MOVE.l pushpc(PC),D1
0002FAF2 <AmiBlitz3.ab3@20135>   MOVE.l D1,destpointer    ;New PC
0002FAF4 <AmiBlitz3.ab3@20136>   SUB.l D1,D0              ;len
0002FAFA <AmiBlitz3.ab3@20137>   MOVE.w D0,pushclen
0002FAFE <AmiBlitz3.ab3@20138>    BEQ.w 'skip
0002FB04 <AmiBlitz3.ab3@20139>   MOVE.w dontwrite_nomemleft,D1
0002FB08 <AmiBlitz3.ab3@20140>    BNE.w 'skip
0002FB10 <AmiBlitz3.ab3@20143>    CMP.w #1000,pushclen
0002FB14 <AmiBlitz3.ab3@20144>    BGE conmemerr
0002FB1A <AmiBlitz3.ab3@20145>    MOVE.l pushat,d0
0002FB1E <AmiBlitz3.ab3@20146>    BNE 'nomem
0002FB24 <AmiBlitz3.ab3@20147>    MOVE.l #1024,d0
0002FB26 <AmiBlitz3.ab3@20149>   MOVEQ.l #$01,D1
0002FB2C <AmiBlitz3.ab3@20150>   MOVEA.l _execbase,A6
0002FB32 <AmiBlitz3.ab3@20152>   MOVE.l mempool,a0
0002FB36 <AmiBlitz3.ab3@20153>   JSR _AllocPooled(a6)
0002FB3C <AmiBlitz3.ab3@20156>   MOVE.l D0,pushat
0002FB3E <AmiBlitz3.ab3@20161>   MOVEA.l D0,A0          ;destination
0002FB44 <AmiBlitz3.ab3@20162>   MOVEA.l pushpc,A1      ;source
0002FB4A <AmiBlitz3.ab3@20163>   MOVE.l A1,destpointer
0002FB50 <AmiBlitz3.ab3@20164>   MOVE.w pushclen,D0
0002FB52 <AmiBlitz3.ab3@20165>   LSR.w #1,D0
0002FB54 <AmiBlitz3.ab3@20166>   SUBQ.w #1,D0           ;to word dbf
0002FB56 <AmiBlitz3.ab3@20169>     MOVE.w (A1)+,(A0)+
0002FB5A <AmiBlitz3.ab3@20170>   DBF D0,'loop
0002FB64 <AmiBlitz3.ab3@20172>    MOVE.l hunkoffsetbase,pushdooff
0002FB68 <AmiBlitz3.ab3@20175>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FB6A <AmiBlitz3.ab3@20176> RTS
0002FB6E <AmiBlitz3.ab3@20182>   MOVEM.l D0-D1/A0-A1,-(A7)
0002FB70 <AmiBlitz3.ab3@20183>   MOVEQ.l #$00,D0
0002FB76 <AmiBlitz3.ab3@20184>   MOVE.w pushclen,D0
0002FB7A <AmiBlitz3.ab3@20185>    BEQ.w 'skip
0002FB80 <AmiBlitz3.ab3@20186>   MOVE.l destpointer,D1     ;pc before put
0002FB86 <AmiBlitz3.ab3@20187>   ADD.l D0,destpointer
0002FB8C <AmiBlitz3.ab3@20188>   TST.w dontwrite_nomemleft
0002FB90 <AmiBlitz3.ab3@20189>    BNE.w 'skip
0002FB92 <AmiBlitz3.ab3@20191>   LSR.w #1,D0
0002FB94 <AmiBlitz3.ab3@20192>   SUBQ.w #1,D0
0002FB96 <AmiBlitz3.ab3@20194>   MOVEA.l D1,A1
0002FB9C <AmiBlitz3.ab3@20195>   MOVEA.l pushat,A0
0002FBA2 <AmiBlitz3.ab3@20198>     CMPA.l destbufferend,A1
0002FBA6 <AmiBlitz3.ab3@20199>     BCS.w 'ok
0002FBAE <AmiBlitz3.ab3@20201>     MOVE.w #$FFFF,dontwrite_nomemleft    ; was -1
0002FBB2 <AmiBlitz3.ab3@20202>   BRA.w 'skip
0002FBB4 <AmiBlitz3.ab3@20205>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002FBB8 <AmiBlitz3.ab3@20206>   DBF D0,'loop
0002FBBE <AmiBlitz3.ab3@20211>   SUB.l pushpc,D1
0002FBC2 <AmiBlitz3.ab3@20212>   BEQ.w 'skip2
0002FBC8 <AmiBlitz3.ab3@20213>   MOVEA.l pushdooff,A0
0002FBCE <AmiBlitz3.ab3@20216>   CMPA.l pushoff,A0
0002FBD2 <AmiBlitz3.ab3@20217>   BEQ.w 'done
0002FBD6 <AmiBlitz3.ab3@20218>   MOVEA.l $4(A0),A1          ;address in prog.
0002FBDC <AmiBlitz3.ab3@20219>   ADDA.l destbufferstart,A1
0002FBE2 <AmiBlitz3.ab3@20220>   CMPA.l destbufferend,A1
0002FBE6 <AmiBlitz3.ab3@20221>   BCC.w 'next                ;leave offs >= lib
0002FBEA <AmiBlitz3.ab3@20222>   ADD.l D1,$4(A0)
0002FBEC <AmiBlitz3.ab3@20225>   MOVEA.l (A0),A0
0002FBF0 <AmiBlitz3.ab3@20226>  BRA.w 'loop2
0002FBF6 <AmiBlitz3.ab3@20230>   MOVEA.l pushat,A1
0002FBF8 <AmiBlitz3.ab3@20231>   MOVEQ.l #$00,D0
0002FBFE <AmiBlitz3.ab3@20232>   MOVE.w pushclen,D0
0002FC04 <AmiBlitz3.ab3@20233>   MOVEA.l _execbase,A6
0002FC0A <AmiBlitz3.ab3@20234>   MOVE.l mempool,a0
0002FC0E <AmiBlitz3.ab3@20238>   MOVEM.l (A7)+,D0-D1/A0-A1
0002FC10 <AmiBlitz3.ab3@20239> RTS
0002FC12 <AmiBlitz3.ab3@20245>   MOVE.l D1,-(A7)                                          ;array mul
0002FC14 <AmiBlitz3.ab3@20246>   MOVEQ.l #$00,D2
0002FC16 <AmiBlitz3.ab3@20247>   MOVEQ.l #$0F,D3
0002FC18 <AmiBlitz3.ab3@20250>     LSL.w #1,D1
0002FC1C <AmiBlitz3.ab3@20251>     BCC.w 'shskip
0002FC1E <AmiBlitz3.ab3@20252>     ADDQ.w #1,D2
0002FC20 <AmiBlitz3.ab3@20253>     MOVE.w D3,D4
0002FC24 <AmiBlitz3.ab3@20256>   DBF D3,'shloop
0002FC26 <AmiBlitz3.ab3@20258>   SUBQ.w #1,D2
0002FC2A <AmiBlitz3.ab3@20259>    BNE.w 'domul
0002FC2C <AmiBlitz3.ab3@20260>   ADDQ.w #4,A7           ; was 2
0002FC2E <AmiBlitz3.ab3@20261>   MOVE.w D4,D1
0002FC32 <AmiBlitz3.ab3@20262>    BEQ.w 'done
0002FC36 <AmiBlitz3.ab3@20263>   CMP.w #$8,D1
0002FC3A <AmiBlitz3.ab3@20264>    BCS.w 'once
0002FC3E <AmiBlitz3.ab3@20265>   SUBI.w #$8,D1
0002FC42 <AmiBlitz3.ab3@20266>    BSR.w 'once
0002FC44 <AmiBlitz3.ab3@20267>   MOVEQ.l #$00,D1
0002FC46 <AmiBlitz3.ab3@20270>   LSL.w #8,D1
0002FC48 <AmiBlitz3.ab3@20271>   LSL.w #1,D1
0002FC4C <AmiBlitz3.ab3@20272>   ORI.w #$E188,D1
0002FC52 <AmiBlitz3.ab3@20273>   OR.w regnum,D1
0002FC56 <AmiBlitz3.ab3@20274>  BRA.w writeword
0002FC58 <AmiBlitz3.ab3@20277>  RTS
0002FC5A <AmiBlitz3.ab3@20281>   MOVEQ #0,d1
0002FC60 <AmiBlitz3.ab3@20282>   MOVE.w regnum,D1
0002FC62 <AmiBlitz3.ab3@20284>   LSL.l #8,D1
0002FC64 <AmiBlitz3.ab3@20287>   LSL.l #4,d1
0002FC6A <AmiBlitz3.ab3@20291>   OR.l #$4c3c0000,d1
0002FC70 <AmiBlitz3.ab3@20292>   OR.w regnum,d1
0002FC74 <AmiBlitz3.ab3@20293>   BSR.w writelong          ; was writeword
0002FC76 <AmiBlitz3.ab3@20295>   MOVE.l (A7)+,D1
0002FC7A <AmiBlitz3.ab3@20298> BRA writelong
0002FC80 <AmiBlitz3.ab3@20305>   MOVE.l destpointer,-(A7)
0002FC82 <AmiBlitz3.ab3@20306>   MOVEQ.l #-$01,D7
0002FC86 <AmiBlitz3.ab3@20309>     BSR.w findhilib
0002FC8A <AmiBlitz3.ab3@20310>      BEQ.w 'done
0002FC8E <AmiBlitz3.ab3@20311>     TST.w $C(A2)
0002FC92 <AmiBlitz3.ab3@20312>      BPL.w 'loop
0002FC96 <AmiBlitz3.ab3@20313>     MOVE.l $16(A2),D1
0002FC9A <AmiBlitz3.ab3@20314>     BEQ.w 'loop
0002FC9E <AmiBlitz3.ab3@20316>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002FCA2 <AmiBlitz3.ab3@20317>     CMP.w #-$2,D1          ; was #allocvars
0002FCA6 <AmiBlitz3.ab3@20318>      BNE.w 'notvar
0002FCAA <AmiBlitz3.ab3@20319>     BSR.w makevsize
0002FCAE <AmiBlitz3.ab3@20320>  BRA.w 'more
0002FCB2 <AmiBlitz3.ab3@20323>     CMP.w #-$5C4,D1       ; was #debuglib
0002FCB6 <AmiBlitz3.ab3@20324>      BNE.w 'notdebuglib
0002FCBA <AmiBlitz3.ab3@20328>     MOVE.w #$7000,D1      ;moveq #0,d0
0002FCC2 <AmiBlitz3.ab3@20329>     BTST #$7,autorun
0002FCC4 <AmiBlitz3.ab3@20330>     SNE D1
0002FCC8 <AmiBlitz3.ab3@20331>     BSR.w writeword
0002FCCC <AmiBlitz3.ab3@20332>  BRA.w 'more
0002FCD0 <AmiBlitz3.ab3@20335>     CMP.w #-$12D,D1       ; was 65235
0002FCD4 <AmiBlitz3.ab3@20336>      BNE.w 'notstring1
0002FCD8 <AmiBlitz3.ab3@20337>     BSR.w makessize
0002FCDC <AmiBlitz3.ab3@20338>  BRA.w 'more
0002FCE0 <AmiBlitz3.ab3@20341>     CMP.w #-$1F5,D1       ; was 65035
0002FCE4 <AmiBlitz3.ab3@20342>      BNE.w 'notexit
0002FCE8 <AmiBlitz3.ab3@20344>     MOVE.w #$203C,D1
0002FCEC <AmiBlitz3.ab3@20345>     BSR.w writeword
0002FCF0 <AmiBlitz3.ab3@20346>     BSR.w addoff
0002FCF6 <AmiBlitz3.ab3@20347>     MOVE.l endop,D1
0002FCFA <AmiBlitz3.ab3@20348>     BSR.w writelong
0002FCFE <AmiBlitz3.ab3@20349>  BRA.w 'more
0002FD02 <AmiBlitz3.ab3@20352>     CMP.w #-$3E9,D1       ; was 64535
0002FD06 <AmiBlitz3.ab3@20353>      BNE.w 'notdatalib
0002FD0A <AmiBlitz3.ab3@20354>     MOVE.w #$203C,D1
0002FD0E <AmiBlitz3.ab3@20355>     BSR.w writeword
0002FD12 <AmiBlitz3.ab3@20356>     BSR.w addoff
0002FD18 <AmiBlitz3.ab3@20357>     MOVE.l data2at,D1
0002FD1C <AmiBlitz3.ab3@20358>     BSR.w writelong
0002FD20 <AmiBlitz3.ab3@20359>  BRA.w 'more
0002FD24 <AmiBlitz3.ab3@20362>     CMP.w #$1,D1          ; was #dhandlerlib
0002FD28 <AmiBlitz3.ab3@20363>      BNE.w 'notdhandler
0002FD2C <AmiBlitz3.ab3@20364>     MOVE.w #$203C,D1
0002FD30 <AmiBlitz3.ab3@20365>     BSR.w writeword
0002FD36 <AmiBlitz3.ab3@20366>     MOVE.l ptr_seg_debugger,D1
0002FD3A <AmiBlitz3.ab3@20367>     BSR.w writelong
0002FD3E <AmiBlitz3.ab3@20371>     MOVE.l $16(A2),D1
0002FD46 <AmiBlitz3.ab3@20372>     MOVE.w #$FFFF,lasta6     ; was -1
0002FD4A <AmiBlitz3.ab3@20373>     BSR.w Amakelibsub
0002FD50 <AmiBlitz3.ab3@20374>     CMPI.w #$FFFE,$4(A2)     ; was #allocvars
0002FD54 <AmiBlitz3.ab3@20375>      BNE.w 'notvar2
0002FD5A <AmiBlitz3.ab3@20377>     MOVE.l intdata1,D1
0002FD5E <AmiBlitz3.ab3@20378>      BEQ.w 'notvar2
0002FD64 <AmiBlitz3.ab3@20379>     MOVE.w putidata1,D1
0002FD68 <AmiBlitz3.ab3@20380>     BSR.w writeword
0002FD6C <AmiBlitz3.ab3@20381>     BSR.w addoff
0002FD72 <AmiBlitz3.ab3@20382>     MOVE.l intdata1,D1
0002FD76 <AmiBlitz3.ab3@20383>     BSR.w writelong
0002FD7A <AmiBlitz3.ab3@20386>     MOVE.w #$2B40,D1
0002FD7E <AmiBlitz3.ab3@20387>     TST.w $1A(A2)
0002FD82 <AmiBlitz3.ab3@20388>      BEQ.w 'loop
0002FD86 <AmiBlitz3.ab3@20389>      BPL.w 'long
0002FD8A <AmiBlitz3.ab3@20390>     MOVE.w #$3B40,D1
0002FD8E <AmiBlitz3.ab3@20393>     BSR.w writeword
0002FD92 <AmiBlitz3.ab3@20394>     MOVE.w $A(A2),D1
0002FD96 <AmiBlitz3.ab3@20395>      BSR.w writeword
0002FD9C <AmiBlitz3.ab3@20396>     CMPI.w #$FFFA,$4(A2)   ; was #65530
0002FDA0 <AmiBlitz3.ab3@20397>      BNE.w 'loop
0002FDA2 <AmiBlitz3.ab3@20399>     MOVE.w D7,-(A7)
0002FDA8 <AmiBlitz3.ab3@20400>     MOVE.w numstatic,D4
0002FDAC <AmiBlitz3.ab3@20401>      BEQ.w 'nostats
0002FDB2 <AmiBlitz3.ab3@20402>     MOVE.l staticdata,D3
0002FDB8 <AmiBlitz3.ab3@20403>      JSR datastart
0002FDBC <AmiBlitz3.ab3@20404>     MOVE.w #$C500,D1       ; was #alstat
0002FDC0 <AmiBlitz3.ab3@20405>      BSR.w tokejsr2
0002FDC6 <AmiBlitz3.ab3@20408>     MOVE.w maxsused,D4
0002FDCA <AmiBlitz3.ab3@20409>      BEQ.w 'nomaxs
0002FDD0 <AmiBlitz3.ab3@20410>     MOVE.l maxsat,D3
0002FDD6 <AmiBlitz3.ab3@20411>      JSR datastart
0002FDDA <AmiBlitz3.ab3@20412>     MOVE.w #$CF00,D1      ; was #setmaxs
0002FDDE <AmiBlitz3.ab3@20413>      BSR.w tokejsr2
0002FDE0 <AmiBlitz3.ab3@20416>     MOVE.w (A7)+,D7
0002FDE4 <AmiBlitz3.ab3@20418>  BRA.w 'loop
0002FDEA <AmiBlitz3.ab3@20424>   MOVE.l destpointer,D1
0002FDEC <AmiBlitz3.ab3@20425>   CMP.l (A7),D1
0002FDF0 <AmiBlitz3.ab3@20426>    BNE.w 'yi
0002FDF8 <AmiBlitz3.ab3@20427>   MOVE.w #$0008,noinits+2
0002FDFC <AmiBlitz3.ab3@20428>  BRA.w 'yi3
0002FE02 <AmiBlitz3.ab3@20431>   CLR.w noinits+2
0002FE08 <AmiBlitz3.ab3@20432>   MOVE.w dontwrite_nomemleft,D1
0002FE0C <AmiBlitz3.ab3@20433>    BNE.w 'yi2
0002FE12 <AmiBlitz3.ab3@20435>   TST.l newinitaddr
0002FE16 <AmiBlitz3.ab3@20436>    BEQ 'l10
0002FE1C <AmiBlitz3.ab3@20437>   MOVE.l newinitaddr,D2
0002FE22 <AmiBlitz3.ab3@20438>   SUB.l destbufferstart,D2
0002FE24 <AmiBlitz3.ab3@20439>   ADDQ.l #2,d2
0002FE2A <AmiBlitz3.ab3@20441>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002FE2E <AmiBlitz3.ab3@20445>   MOVE.w #$4EB9,(A0)+
0002FE30 <AmiBlitz3.ab3@20446>   MOVE.l (A7),(A0)+
0002FE34 <AmiBlitz3.ab3@20449>  BRA 'l20
0002FE3A <AmiBlitz3.ab3@20452>   MOVEA.l destbufferstart,A0                               ;write initcode
0002FE40 <AmiBlitz3.ab3@20453>   TST.b saved0
0002FE44 <AmiBlitz3.ab3@20454>   BEQ 'l1
0002FE48 <AmiBlitz3.ab3@20455>   MOVE.w #$23c0,(a0)+
0002FE4A <AmiBlitz3.ab3@20456>   MOVE.l a0,a1
0002FE4C <AmiBlitz3.ab3@20457>   ADDQ.l #6,a1
0002FE4E <AmiBlitz3.ab3@20458>   MOVE.l a1,(a0)+
0002FE50 <AmiBlitz3.ab3@20460>   MOVEQ.l #$02,D2
0002FE54 <AmiBlitz3.ab3@20461>   BSR.w addhunkoffset
0002FE58 <AmiBlitz3.ab3@20463>   MOVE.w #$6004,(a0)+
0002FE5E <AmiBlitz3.ab3@20464>   MOVE.l #$4e714e71,(a0)+
0002FE62 <AmiBlitz3.ab3@20467>   MOVE.w #$4EB9,(A0)+
0002FE64 <AmiBlitz3.ab3@20468>   MOVE.l (A7),(A0)+
0002FE66 <AmiBlitz3.ab3@20469>   MOVEQ #2,d2
0002FE6C <AmiBlitz3.ab3@20470>   TST.b saved0
0002FE70 <AmiBlitz3.ab3@20471>   BEQ 'l20
0002FE72 <AmiBlitz3.ab3@20472>   MOVEQ.l #14,D2
0002FE76 <AmiBlitz3.ab3@20475>   BSR.w addhunkoffset
0002FE7A <AmiBlitz3.ab3@20476>   MOVE.w #$2039,(a0)+
0002FE7C <AmiBlitz3.ab3@20477>   MOVE.l a1,(a0)+
0002FE7E <AmiBlitz3.ab3@20478>   MOVEQ.l #20,d2
0002FE82 <AmiBlitz3.ab3@20481>   BSR.w addhunkoffset
0002FE86 <AmiBlitz3.ab3@20485>   MOVE.w #$4E75,D1
0002FE8A <AmiBlitz3.ab3@20486>   BSR.w writeword
0002FE8C <AmiBlitz3.ab3@20489>   ADDQ.w #4,A7
0002FE8E <AmiBlitz3.ab3@20490> RTS
0002FE92 <AmiBlitz3.ab3@20495>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002FE98 <AmiBlitz3.ab3@20497>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FE9E <AmiBlitz3.ab3@20499>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FEA4 <AmiBlitz3.ab3@20504>   MOVE.l stringbuffer,D1
0002FEA8 <AmiBlitz3.ab3@20505> BRA.w makesize
0002FEAA <AmiBlitz3.ab3@20510>   MOVEQ.l #$00,D1
0002FEB0 <AmiBlitz3.ab3@20511>   MOVE.w globalvarpointer,D1
0002FEB4 <AmiBlitz3.ab3@20512>   SUBI.w #$8000,D1
0002FEB8 <AmiBlitz3.ab3@20513>   BNE.w makesize
0002FEBA <AmiBlitz3.ab3@20514>     MOVEQ.l #$08,D1
0002FEBC <AmiBlitz3.ab3@20519>   MOVE.l D1,-(A7)
0002FEC0 <AmiBlitz3.ab3@20520>   MOVE.w #$203C,D1
0002FEC4 <AmiBlitz3.ab3@20521>   BSR.w writeword
0002FEC6 <AmiBlitz3.ab3@20522>   MOVE.l (A7)+,D1
0002FECA <AmiBlitz3.ab3@20523> BRA.w writelong
0002FECC <AmiBlitz3.ab3@20531>   MOVEQ.l #$00,D1
0002FED2 <AmiBlitz3.ab3@20532>   MOVEA.l libpointer,A1
0002FED6 <AmiBlitz3.ab3@20535>     CMPA.w #$0,A1
0002FEDA <AmiBlitz3.ab3@20536>     BEQ.w 'done
0002FEDE <AmiBlitz3.ab3@20537>       CMP.w $4(A1),D7
0002FEE2 <AmiBlitz3.ab3@20538>       BLS.w 'next
0002FEE6 <AmiBlitz3.ab3@20539>         CMP.w $4(A1),D1
0002FEEA <AmiBlitz3.ab3@20540>         BCC.w 'next
0002FEEE <AmiBlitz3.ab3@20541>           MOVE.w $4(A1),D1
0002FEF0 <AmiBlitz3.ab3@20542>           MOVEA.l A1,A2
0002FEF2 <AmiBlitz3.ab3@20545>     MOVEA.l (A1),A1
0002FEF6 <AmiBlitz3.ab3@20546>  BRA.w 'loop
0002FEF8 <AmiBlitz3.ab3@20549>   MOVE.w D1,D7
0002FEFA <AmiBlitz3.ab3@20550> RTS
0002FEFC <AmiBlitz3.ab3@20558>   MOVEQ.l #-$01,D1
0002FF02 <AmiBlitz3.ab3@20559>   MOVEA.l libpointer,A1
0002FF06 <AmiBlitz3.ab3@20562>     CMPA.w #$0,A1
0002FF0A <AmiBlitz3.ab3@20563>      BEQ.w 'done
0002FF0E <AmiBlitz3.ab3@20564>     CMP.w $4(A1),D7
0002FF12 <AmiBlitz3.ab3@20565>      BCC.w 'next
0002FF16 <AmiBlitz3.ab3@20566>     CMP.w $4(A1),D1
0002FF1A <AmiBlitz3.ab3@20567>      BLS.w 'next
0002FF1E <AmiBlitz3.ab3@20568>     MOVE.w $4(A1),D1
0002FF20 <AmiBlitz3.ab3@20569>     MOVEA.l A1,A2
0002FF22 <AmiBlitz3.ab3@20572>     MOVEA.l (A1),A1
0002FF26 <AmiBlitz3.ab3@20573> BRA.w 'loop
0002FF28 <AmiBlitz3.ab3@20576>   MOVE.w D1,D7
0002FF2C <AmiBlitz3.ab3@20577>   CMP.w #-$1,D1
0002FF2E <AmiBlitz3.ab3@20578> RTS
0002FF34 <AmiBlitz3.ab3@20586>   ADDQ.w #1,globalvarpointer
0002FF3C <AmiBlitz3.ab3@20587>   BCLR #$0,globalvarpointer+1
0002FF3E <AmiBlitz3.ab3@20588>   MOVEQ.l #$00,D7
0002FF42 <AmiBlitz3.ab3@20591>     BSR.w findlolib
0002FF46 <AmiBlitz3.ab3@20592>     BEQ.w 'azdone
0002FF4A <AmiBlitz3.ab3@20593>     TST.w $C(A2)
0002FF4E <AmiBlitz3.ab3@20594>     BPL.w 'loop
0002FF50 <AmiBlitz3.ab3@20597>     MOVEA.l A2,A1
0002FF54 <AmiBlitz3.ab3@20598>     ADDA.l $12(A1),A1
0002FF58 <AmiBlitz3.ab3@20599>     TST.w -$2(A1)
0002FF5C <AmiBlitz3.ab3@20600>     BEQ.w 'nomax
0002FF60 <AmiBlitz3.ab3@20604>     MOVE.l -$A(A1),D1
0002FF64 <AmiBlitz3.ab3@20605>     LEA $6(A2,D1.L),A3
0002FF66 <AmiBlitz3.ab3@20608>       TST.w (A3)+
0002FF6A <AmiBlitz3.ab3@20609>       BEQ.w 'plopf
0002FF6C <AmiBlitz3.ab3@20610>         ADDQ.w #2,A3
0002FF70 <AmiBlitz3.ab3@20611>  BRA.w 'plop
0002FF74 <AmiBlitz3.ab3@20614>     TST.l $4(A3)
0002FF78 <AmiBlitz3.ab3@20615>     BEQ.w 'nomax
0002FF7C <AmiBlitz3.ab3@20619>       MOVE.w freemax(PC),D1    ;move.w #x,-(a7)
0002FF80 <AmiBlitz3.ab3@20620>       BSR.w writeword
0002FF84 <AmiBlitz3.ab3@20621>       MOVE.w -$4(A1),D1
0002FF88 <AmiBlitz3.ab3@20622>       BSR.w writeword          ;x (max)
0002FF8E <AmiBlitz3.ab3@20623>       MOVE.l free,D1
0002FF92 <AmiBlitz3.ab3@20624>       MOVE.w -$6(A1),D1
0002FF96 <AmiBlitz3.ab3@20625>       BSR.w writelong          ;move.l x(a5),a3
0002FF9C <AmiBlitz3.ab3@20627>       MOVE.l destpointer,-(A7)
0002FF9E <AmiBlitz3.ab3@20628>       MOVEQ.l #$01,D1
0002FFA2 <AmiBlitz3.ab3@20629>       MOVE.w -$2(A1),D2
0002FFA4 <AmiBlitz3.ab3@20630>       LSL.w D2,D1
0002FFA6 <AmiBlitz3.ab3@20631>       MOVE.w D1,-(A7)
0002FFAA <AmiBlitz3.ab3@20632>       MOVE.l -$A(A1),D1
0002FFAE <AmiBlitz3.ab3@20633>       BSR.w Amakelibsub
0002FFB2 <AmiBlitz3.ab3@20634>       MOVE.w freemax3(PC),D1
0002FFB6 <AmiBlitz3.ab3@20635>       BSR.w writeword          ;lea x(a3),a3
0002FFB8 <AmiBlitz3.ab3@20636>       MOVE.w (A7)+,D1
0002FFBC <AmiBlitz3.ab3@20637>       BSR.w writeword
0002FFC0 <AmiBlitz3.ab3@20638>       MOVE.l freemax2(PC),D1
0002FFC4 <AmiBlitz3.ab3@20639>       BSR.w writelong
0002FFC6 <AmiBlitz3.ab3@20640>       MOVE.l (A7)+,D1
0002FFCC <AmiBlitz3.ab3@20641>       SUB.l destpointer,D1
0002FFD0 <AmiBlitz3.ab3@20642>       BSR.w writeword
0002FFD4 <AmiBlitz3.ab3@20643>       MOVE.w freemax4(PC),D1
0002FFD8 <AmiBlitz3.ab3@20644>       BSR.w writeword
0002FFDC <AmiBlitz3.ab3@20647>     MOVE.l $1C(A2),D1
0002FFE0 <AmiBlitz3.ab3@20648>     BEQ.w 'loop
0002FFE4 <AmiBlitz3.ab3@20652>     MOVE.w $4(A2),D1
0002FFE8 <AmiBlitz3.ab3@20653>     CMP.w #-$2,D1              ; was #allocvars
0002FFEC <AmiBlitz3.ab3@20654>     BNE.w 'notvfin
0002FFF0 <AmiBlitz3.ab3@20655>       BSR.w makevsize
0002FFF4 <AmiBlitz3.ab3@20656>  BRA.w 'more
0002FFF8 <AmiBlitz3.ab3@20659>     CMP.w #-$12D,D1            ; was #65235
0002FFFC <AmiBlitz3.ab3@20660>     BNE.w 'more
00030000 <AmiBlitz3.ab3@20661>       BSR.w makessize
00030004 <AmiBlitz3.ab3@20662>  BRA.w 'more
00030008 <AmiBlitz3.ab3@20666>     MOVE.l $1C(A2),D1
00030010 <AmiBlitz3.ab3@20667>     MOVE.w #$FFFF,lasta6       ; was -1
00030014 <AmiBlitz3.ab3@20668>     BSR.w Amakelibsub
00030018 <AmiBlitz3.ab3@20669>  BRA.w 'loop
0003001A <AmiBlitz3.ab3@20672> RTS
0003001E <AmiBlitz3.ab3@20676> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
00030020 <AmiBlitz3.ab3@20678> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
00030024 <AmiBlitz3.ab3@20679>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
00030026 <AmiBlitz3.ab3@20680> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0003002A <AmiBlitz3.ab3@20681> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
00030030 <AmiBlitz3.ab3@20686>   TST.b debugmode
00030034 <AmiBlitz3.ab3@20687>    BEQ.b 'skip
0003003A <AmiBlitz3.ab3@20688>   TST.w debugversion
0003003E <AmiBlitz3.ab3@20689>    BNE.b 'skip
00030042 <AmiBlitz3.ab3@20690>   MOVE.w #$C308,D1
00030046 <AmiBlitz3.ab3@20691>  BRA.w Atokejsr
00030048 <AmiBlitz3.ab3@20694> RTS
00030050 <AmiBlitz3.ab3@20698>   MOVE.w #$FFFF,lasta6
00030054 <AmiBlitz3.ab3@20703>   MOVEM.l D0-d7/A0-a6,-(A7)
0003005C <AmiBlitz3.ab3@20704>   MOVE.b #1,nostringopt
00030062 <AmiBlitz3.ab3@20705>   JSR searchinstr
00030064 <AmiBlitz3.ab3@20706>   MOVE.l A3,D1
00030066 <AmiBlitz3.ab3@20707>   SUB.l A2,D1
0003006A <AmiBlitz3.ab3@20708>   BSR.w Amakelibsub
0003006E <AmiBlitz3.ab3@20709>   MOVEM.l (A7)+,d0-d7/a0-a6
00030070 <AmiBlitz3.ab3@20710> RTS
00030076 <AmiBlitz3.ab3@20717>   MOVE.l libisat,-(A7)                                   ;library write
0003007C <AmiBlitz3.ab3@20718>   MOVE.l A2,libisat
0003007E <AmiBlitz3.ab3@20720>   MOVEA.l A1,A2
00030080 <AmiBlitz3.ab3@20721>   MOVE.w (A2)+,D1
00030086 <AmiBlitz3.ab3@20722>   MOVE.l a2,lastinstructionaddr
0003008A <AmiBlitz3.ab3@20723>   ANDI.w #$FF,D1
0003008C <AmiBlitz3.ab3@20724>   ADDA.w D1,A2
0003008E <AmiBlitz3.ab3@20725>   EXG.l D0,A2
00030090 <AmiBlitz3.ab3@20726>   ADDQ.l #1,D0
00030094 <AmiBlitz3.ab3@20727>   BCLR #$0,D0
00030096 <AmiBlitz3.ab3@20728>   EXG.l D0,A2
0003009A <AmiBlitz3.ab3@20729> BRA.w makelsub2
000300A0 <AmiBlitz3.ab3@20733>   MOVE.l libisat,-(A7)
000300A6 <AmiBlitz3.ab3@20734>   MOVE.l A2,libisat
000300A8 <AmiBlitz3.ab3@20735>   MOVEA.l A3,A2
000300AC <AmiBlitz3.ab3@20736> BRA.w makelsub2
000300AE <AmiBlitz3.ab3@20740>   MOVE.l a1,-(a7)
000300B0 <AmiBlitz3.ab3@20743>   MOVE.l d0,a0
000300B4 <AmiBlitz3.ab3@20744>   MOVE.l $a(a0),d0
000300B6 <AmiBlitz3.ab3@20745>   MOVE.l d0,a1
000300BE <AmiBlitz3.ab3@20746>   CMP.l #8,4(a1)
000300C2 <AmiBlitz3.ab3@20747>   BLE 'norec
000300C4 <AmiBlitz3.ab3@20748>   MOVE.l a0,-(a7)
000300CA <AmiBlitz3.ab3@20749>   MOVE.l typebase,-(a7)
000300CC <AmiBlitz3.ab3@20750>   MOVEQ #0,d0
000300D0 <AmiBlitz3.ab3@20751>   MOVE.w 4(a0),d0
000300D6 <AmiBlitz3.ab3@20752>   ADD.l d0,typebase
000300DA <AmiBlitz3.ab3@20753>   MOVE.l $4(a1),d0
000300DE <AmiBlitz3.ab3@20754>   BSR scantype
000300E4 <AmiBlitz3.ab3@20755>   MOVE.l (a7)+,typebase
000300E6 <AmiBlitz3.ab3@20756>   MOVE.l (a7)+,a0
000300EC <AmiBlitz3.ab3@20759>   CMP.l #newtype_string,d0
000300F0 <AmiBlitz3.ab3@20760>   BNE 'nostring
000300F6 <AmiBlitz3.ab3@20761>   ADDQ #2,a2offset
000300FC <AmiBlitz3.ab3@20762>   MOVE.l #$3f3c0000,d1
000300FE <AmiBlitz3.ab3@20763>   MOVEQ #0,d0
00030102 <AmiBlitz3.ab3@20764>   MOVE.w 4(a0),d0
00030108 <AmiBlitz3.ab3@20765>   ADD.l typebase,d0
0003010A <AmiBlitz3.ab3@20766>   MOVE.w d0,d1
0003010E <AmiBlitz3.ab3@20767>   BSR writelong
00030114 <AmiBlitz3.ab3@20768>   TST.b debugmode
00030118 <AmiBlitz3.ab3@20769>   BEQ 'l1a
0003011A <AmiBlitz3.ab3@20770>   MOVE.l d1,-(a7)
00030120 <AmiBlitz3.ab3@20771>   MOVE.l #$c308,d1
00030126 <AmiBlitz3.ab3@20772>   JSR Atokejsr
00030128 <AmiBlitz3.ab3@20773>   MOVE.l (a7)+,d1
0003012C <AmiBlitz3.ab3@20776>   TST.w 8(a0)
00030130 <AmiBlitz3.ab3@20777>   BEQ 'nostring
00030134 <AmiBlitz3.ab3@20778>   MOVEM.l d2/d3,-(a7)
00030136 <AmiBlitz3.ab3@20779>   MOVE.l d1,d2
00030138 <AmiBlitz3.ab3@20780>   MOVEQ #0,d3
0003013C <AmiBlitz3.ab3@20781>   MOVE.w 8(a0),d3
0003013E <AmiBlitz3.ab3@20782>   SUBQ.l #1,d3
00030142 <AmiBlitz3.ab3@20783>   BEQ 'nostring2
00030144 <AmiBlitz3.ab3@20786>   ADDQ.l #4,d2
00030146 <AmiBlitz3.ab3@20787>   MOVE.l d2,d1
0003014A <AmiBlitz3.ab3@20788>   BSR writelong
00030150 <AmiBlitz3.ab3@20789>   TST.b debugmode
00030154 <AmiBlitz3.ab3@20790>   BEQ 'l1
0003015A <AmiBlitz3.ab3@20791>   MOVE.l #$c308,d1
00030160 <AmiBlitz3.ab3@20792>   JSR Atokejsr
00030166 <AmiBlitz3.ab3@20795>   ADDQ #2,a2offset
00030168 <AmiBlitz3.ab3@20796>   SUBQ.l #1,d3
0003016C <AmiBlitz3.ab3@20797>   BNE 'loop
00030170 <AmiBlitz3.ab3@20800>   MOVEM.l (a7)+,d2/d3
00030172 <AmiBlitz3.ab3@20803>   MOVE.l (a0),d0
00030176 <AmiBlitz3.ab3@20804>   BNE 'more
00030178 <AmiBlitz3.ab3@20805>   MOVE.l (a7)+,a1
0003017A <AmiBlitz3.ab3@20806> RTS
0003017E <AmiBlitz3.ab3@20809> libisat:   Ds.l 1
00030184 <AmiBlitz3.ab3@20815>   MOVE.l libisat,-(A7)                                   
0003018A <AmiBlitz3.ab3@20816>   MOVE.l A2,libisat
0003018E <AmiBlitz3.ab3@20817>   LEA $6(A2,D1.L),A2
00030196 <AmiBlitz3.ab3@20822>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0003019A <AmiBlitz3.ab3@20823>   BEQ 'dowritevar
000301A2 <AmiBlitz3.ab3@20824>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
000301A6 <AmiBlitz3.ab3@20825>   BEQ 'dowritevar
000301AE <AmiBlitz3.ab3@20826>   CMP.l #$3e175265,$1c(a2)
000301B2 <AmiBlitz3.ab3@20827>   BEQ 'dowritevar
000301BA <AmiBlitz3.ab3@20828>   CMP.l #$3e165772,$1c(a2)
000301BE <AmiBlitz3.ab3@20829>   BNE 'nowritef
000301C2 <AmiBlitz3.ab3@20832>   MOVEM.l a0-a2/d2,-(a7)
000301C4 <AmiBlitz3.ab3@20833>   MOVEQ #0,d1
000301CE <AmiBlitz3.ab3@20834>   MOVE.l #0,typebase
000301D2 <AmiBlitz3.ab3@20835>   MOVE.l $a(a3),a0
000301D6 <AmiBlitz3.ab3@20836>   MOVE.l $4(a0),d0
000301DC <AmiBlitz3.ab3@20837>   CMP.l #8,d0
000301E0 <AmiBlitz3.ab3@20838>   BLE 'notype
000301E4 <AmiBlitz3.ab3@20839>   BSR scantype
000301EA <AmiBlitz3.ab3@20842>   MOVE.l #$3f3c0000,d1
000301F0 <AmiBlitz3.ab3@20843>   MOVE.w a2offset,d1
000301F4 <AmiBlitz3.ab3@20844>   BSR writelong
000301FA <AmiBlitz3.ab3@20845>   MOVE.l #$3f3c0000,d1
000301FE <AmiBlitz3.ab3@20846>   MOVE.l $a(a3),a0
00030202 <AmiBlitz3.ab3@20847>   MOVE.w 8(a0),d1
00030206 <AmiBlitz3.ab3@20848>   BSR writelong
0003020C <AmiBlitz3.ab3@20849>   MOVE.l #$3f3cab12,d1
00030210 <AmiBlitz3.ab3@20850>   BSR writelong
00030216 <AmiBlitz3.ab3@20851>   ADDQ.w #6,a2offset
0003021A <AmiBlitz3.ab3@20852>   MOVEM.l (a7)+,a0-a2/d2
00030220 <AmiBlitz3.ab3@20855>   TST.b fpu
00030224 <AmiBlitz3.ab3@20856>   BEQ 'nofpu2
0003022C <AmiBlitz3.ab3@20857>   CMP.l #$496e7400,$1a(a2)
00030230 <AmiBlitz3.ab3@20858>   BNE 'noint
00030232 <AmiBlitz3.ab3@20859>   MOVEQ #0,d1
00030238 <AmiBlitz3.ab3@20860>   SUBQ.l #8,destpointer                                    ;fpu int
0003023E <AmiBlitz3.ab3@20861>   CLR.w a2offset
00030242 <AmiBlitz3.ab3@20862>   CMP.b #2,d2
00030246 <AmiBlitz3.ab3@20863>   BGT 'noword
0003024A <AmiBlitz3.ab3@20864>   MOVE.w #$48c0,d1
00030250 <AmiBlitz3.ab3@20865>   OR.w regnumstore,d1
00030254 <AmiBlitz3.ab3@20866>   BSR writeword
00030258 <AmiBlitz3.ab3@20867>  BRA 'exit2
0003025C <AmiBlitz3.ab3@20870>    CMP.b #3,d2
00030260 <AmiBlitz3.ab3@20871>         BNE 'nolong
00030264 <AmiBlitz3.ab3@20872>  BRA 'exit2
00030268 <AmiBlitz3.ab3@20875>    CMP.b #4,d2
0003026C <AmiBlitz3.ab3@20876>         BNE 'noquick
00030270 <AmiBlitz3.ab3@20877>         MOVE.w #$e080,d1
00030276 <AmiBlitz3.ab3@20878>         OR.w regnumstore,d1
0003027A <AmiBlitz3.ab3@20879>         BSR writeword
0003027E <AmiBlitz3.ab3@20880>         MOVE.w #$e080,d1
00030284 <AmiBlitz3.ab3@20881>         OR.w regnumstore,d1
00030288 <AmiBlitz3.ab3@20882>         BSR writeword
0003028C <AmiBlitz3.ab3@20883>  BRA 'exit2
0003028E <AmiBlitz3.ab3@20886>         MOVEQ #0,d0
00030290 <AmiBlitz3.ab3@20887>         MOVEQ #0,d1
00030296 <AmiBlitz3.ab3@20888>         MOVE.w regnumstore,d0
00030298 <AmiBlitz3.ab3@20889>         ASL.l #7,d0
0003029E <AmiBlitz3.ab3@20890>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
000302A0 <AmiBlitz3.ab3@20891>         OR.l d0,d1
000302A6 <AmiBlitz3.ab3@20893>         MOVE.l #$3f000000,d1
000302A8 <AmiBlitz3.ab3@20895>         MOVEQ #0,d0
000302AA <AmiBlitz3.ab3@20896>         MOVEQ #0,d1
000302B0 <AmiBlitz3.ab3@20897>         MOVE.w regnumstore,d0
000302B2 <AmiBlitz3.ab3@20898>         ASL.l #7,d0
000302B4 <AmiBlitz3.ab3@20899>         MOVE.l d0,d1
000302BA <AmiBlitz3.ab3@20900>         OR.l #$f2000003,d1                                 ;fintrz fpx
000302BC <AmiBlitz3.ab3@20901>         ASL.l #3,d0
000302BE <AmiBlitz3.ab3@20902>         OR.l d0,d1
000302C2 <AmiBlitz3.ab3@20903>         BSR writelong
000302C4 <AmiBlitz3.ab3@20904>         MOVEQ #0,d0
000302CA <AmiBlitz3.ab3@20905>         MOVE.w regnumstore,d0
000302CC <AmiBlitz3.ab3@20906>         ASL.l #7,d0
000302D2 <AmiBlitz3.ab3@20907>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
000302D4 <AmiBlitz3.ab3@20908>         OR.l d0,d1
000302D6 <AmiBlitz3.ab3@20909>         ASL.l #1,d0
000302D8 <AmiBlitz3.ab3@20910>         ASL.l #8,d0
000302DA <AmiBlitz3.ab3@20911>         OR.l d0,d1
000302DE <AmiBlitz3.ab3@20912>  BRA 'exit
000302E4 <AmiBlitz3.ab3@20915>   CMP.w #$3c01,24(a2)
000302E8 <AmiBlitz3.ab3@20916>   BNE 'noval
000302EA <AmiBlitz3.ab3@20917>   MOVE.l a2,-(a7)
000302EE <AmiBlitz3.ab3@20918>   BSR.w makelsub3
000302F0 <AmiBlitz3.ab3@20919>   MOVE.l (a7)+,a2
000302F4 <AmiBlitz3.ab3@20920>  BRA 'exit2
000302FC <AmiBlitz3.ab3@20937>   CMP.l #$41627300,$1a(a2)
00030300 <AmiBlitz3.ab3@20938>   BNE 'noabs
00030302 <AmiBlitz3.ab3@20939>   MOVEQ #0,d1
00030308 <AmiBlitz3.ab3@20940>   MOVE.w regnumstore,d1
0003030A <AmiBlitz3.ab3@20941>   MOVE.w d1,d0
0003030C <AmiBlitz3.ab3@20942>   ASL.w #7,d1
0003030E <AmiBlitz3.ab3@20943>   ASL.w #8,d0
00030310 <AmiBlitz3.ab3@20944>   ASL.w #2,d0
00030312 <AmiBlitz3.ab3@20945>   OR.w d0,d1
00030318 <AmiBlitz3.ab3@20946>   SUBQ.l #8,destpointer                                    ;fpu abs
0003031C <AmiBlitz3.ab3@20947>   MOVEM.l d3/d1,-(a7)
00030320 <AmiBlitz3.ab3@20948>   MOVE.w #5,d3
00030322 <AmiBlitz3.ab3@20949>   EXG d2,d3
00030328 <AmiBlitz3.ab3@20950>   MOVE.w regnum,-(a7)
00030332 <AmiBlitz3.ab3@20951>   MOVE.w regnumstore,regnum
00030336 <AmiBlitz3.ab3@20952>   BSR writeconvertcode
0003033C <AmiBlitz3.ab3@20953>   MOVE.w (a7)+,regnum
0003033E <AmiBlitz3.ab3@20954>   EXG d2,d3
00030342 <AmiBlitz3.ab3@20955>   MOVEM.l (a7)+,d3/d1
00030348 <AmiBlitz3.ab3@20956>   OR.l #$f2000018,d1
0003034E <AmiBlitz3.ab3@20957>   CLR.w a2offset
00030352 <AmiBlitz3.ab3@20958>  BRA 'exit
00030356 <AmiBlitz3.ab3@20961>   CMP.b #5,d2
0003035A <AmiBlitz3.ab3@20962>   BNE 'nofpu2
0003035E <AmiBlitz3.ab3@20963>   MOVE.b 24(a2),d0
00030362 <AmiBlitz3.ab3@20964>   CMP.b #$60,d0                                            ;nolib $edxx
00030366 <AmiBlitz3.ab3@20965>   BNE 'nofpu
00030368 <AmiBlitz3.ab3@20966>   MOVEQ #0,d1
0003036E <AmiBlitz3.ab3@20967>   MOVE.w regnumstore,d1
00030370 <AmiBlitz3.ab3@20968>   MOVE.w d1,d0
00030372 <AmiBlitz3.ab3@20969>   ASL.w #7,d1
00030374 <AmiBlitz3.ab3@20970>   ASL.w #8,d0
00030376 <AmiBlitz3.ab3@20971>   ASL.w #2,d0
00030378 <AmiBlitz3.ab3@20972>   OR.w d0,d1
0003037C <AmiBlitz3.ab3@20973>   MOVE.b 25(a2),d0
00030380 <AmiBlitz3.ab3@20974>   CMP.b #5,d0
00030384 <AmiBlitz3.ab3@20975>   BNE 'nocos
0003038A <AmiBlitz3.ab3@20976>   OR.l #$f200001d,d1                                       ;fpu cos
0003038E <AmiBlitz3.ab3@20977>  BRA 'exit
00030392 <AmiBlitz3.ab3@20980>   CMP.b #$c,d0
00030396 <AmiBlitz3.ab3@20981>   BNE 'nosqr
0003039C <AmiBlitz3.ab3@20982>   OR.l #$f2000004,d1                                       ;fpu sqr
000303A0 <AmiBlitz3.ab3@20983>  BRA 'exit
000303A4 <AmiBlitz3.ab3@20986>   CMP.b #$d,d0
000303A8 <AmiBlitz3.ab3@20987>   BNE 'notan
000303AE <AmiBlitz3.ab3@20988>   OR.l #$f200000f,d1                                       ;fpu tan
000303B2 <AmiBlitz3.ab3@20989>  BRA 'exit
000303B6 <AmiBlitz3.ab3@20992>   CMP.b #$a,d0
000303BA <AmiBlitz3.ab3@20993>   BNE 'nosin
000303C0 <AmiBlitz3.ab3@20994>   OR.l #$f200000e,d1                                       ;fpu sin
000303C4 <AmiBlitz3.ab3@20995>  BRA 'exit
000303C8 <AmiBlitz3.ab3@20998>   CMP.b #$3,d0
000303CC <AmiBlitz3.ab3@20999>   BNE 'noasin
000303D2 <AmiBlitz3.ab3@21000>   OR.l #$f200000c,d1                                       ;fpu asin
000303D6 <AmiBlitz3.ab3@21001>  BRA 'exit
000303DA <AmiBlitz3.ab3@21004>   CMP.b #$2,d0
000303DE <AmiBlitz3.ab3@21005>   BNE 'noacos
000303E4 <AmiBlitz3.ab3@21006>   OR.l #$f200001c,d1                                       ;fpu acos
000303E8 <AmiBlitz3.ab3@21007>  BRA 'exit
000303EC <AmiBlitz3.ab3@21010>   CMP.b #$4,d0
000303F0 <AmiBlitz3.ab3@21011>   BNE 'noatan
000303F6 <AmiBlitz3.ab3@21012>   OR.l #$f200000a,d1                                       ;fpu atan
000303FA <AmiBlitz3.ab3@21013>  BRA 'exit
000303FE <AmiBlitz3.ab3@21016>   CMP.b #$e,d0
00030402 <AmiBlitz3.ab3@21017>   BNE 'nohtan
00030408 <AmiBlitz3.ab3@21018>   OR.l #$f2000009,d1                                       ;fpu htan
0003040C <AmiBlitz3.ab3@21019>  BRA 'exit
00030410 <AmiBlitz3.ab3@21022>   CMP.b #$6,d0
00030414 <AmiBlitz3.ab3@21023>   BNE 'nohcos
0003041A <AmiBlitz3.ab3@21024>   OR.l #$f2000019,d1                                       ;fpu hcos
0003041E <AmiBlitz3.ab3@21025>  BRA 'exit
00030422 <AmiBlitz3.ab3@21028>   CMP.b #$b,d0
00030426 <AmiBlitz3.ab3@21029>   BNE 'nohsin
0003042C <AmiBlitz3.ab3@21030>   OR.l #$f2000002,d1                                       ;fpu hsin
00030430 <AmiBlitz3.ab3@21031>  BRA 'exit
00030434 <AmiBlitz3.ab3@21034>   CMP.b #$9,d0
00030438 <AmiBlitz3.ab3@21035>   BNE 'nolog
0003043E <AmiBlitz3.ab3@21036>   OR.l #$f2000014,d1                                       ;fpu log
00030442 <AmiBlitz3.ab3@21037>  BRA 'exit
00030446 <AmiBlitz3.ab3@21040>   CMP.b #$8,d0
0003044A <AmiBlitz3.ab3@21041>   BNE 'nolog10
00030450 <AmiBlitz3.ab3@21042>   OR.l #$f2000015,d1                                       ;fpu log10
00030454 <AmiBlitz3.ab3@21043>  BRA 'exit
00030458 <AmiBlitz3.ab3@21046>   CMP.b #$7,d0
0003045C <AmiBlitz3.ab3@21047>   BNE 'noexp
00030462 <AmiBlitz3.ab3@21048>   OR.l #$f2000010,d1                                       ;fpu exp
00030466 <AmiBlitz3.ab3@21049>  BRA 'exit
0003046C <AmiBlitz3.ab3@21052>   LEA fpuerr,a0
0003046E <AmiBlitz3.ab3@21053>   MOVE.l a0,-(a7)
00030474 <AmiBlitz3.ab3@21054>  JMP handle_compileerror
00030478 <AmiBlitz3.ab3@21058>   CMP.b #$3c,d0
0003047C <AmiBlitz3.ab3@21059>   BNE 'nofpu2
0003047E <AmiBlitz3.ab3@21060>   MOVEQ #0,d1
00030484 <AmiBlitz3.ab3@21061>       MOVE.w regnumstore,d1
00030486 <AmiBlitz3.ab3@21062>       MOVE.w d1,d0
00030488 <AmiBlitz3.ab3@21063>       ASL.w #7,d1
0003048A <AmiBlitz3.ab3@21064>       ASL.w #8,d0
0003048C <AmiBlitz3.ab3@21065>       ASL.w #2,d0
0003048E <AmiBlitz3.ab3@21066>       OR.w d0,d1
00030494 <AmiBlitz3.ab3@21067>       CMP.b #$03,25(a2)
00030498 <AmiBlitz3.ab3@21068>       BNE 'nosgn
0003049E <AmiBlitz3.ab3@21071>       SUBQ.l #8,destpointer                                ;fpu sgn
000304A4 <AmiBlitz3.ab3@21072>         OR.l #$f200003a,d1
000304A8 <AmiBlitz3.ab3@21073>         BSR writelong
000304AE <AmiBlitz3.ab3@21074>         CLR.w a2offset
000304B4 <AmiBlitz3.ab3@21075>          MOVE.l #$F28E0006,d1
000304B8 <AmiBlitz3.ab3@21076>          BSR writelong
000304BE <AmiBlitz3.ab3@21077>   MOVE.l #$7000600a,d1
000304C2 <AmiBlitz3.ab3@21078>   BSR writelong
000304C8 <AmiBlitz3.ab3@21079>   MOVE.l #$70014840,d1
000304CC <AmiBlitz3.ab3@21080>   BSR writelong
000304D2 <AmiBlitz3.ab3@21081>   MOVE.l #$F292,d1
000304D6 <AmiBlitz3.ab3@21082>   BSR writeword
000304DC <AmiBlitz3.ab3@21083>   MOVE.l #$000470FF,d1
000304E0 <AmiBlitz3.ab3@21084>  BRA 'exit
000304E8 <AmiBlitz3.ab3@21087>   CMP.l #"Frac",$1a(a2)
000304EC <AmiBlitz3.ab3@21088>   BNE 'nofrac
000304F2 <AmiBlitz3.ab3@21089>  JMP notwork
000304F6 <AmiBlitz3.ab3@21130>  BRA 'exit
000304FA <AmiBlitz3.ab3@21135>   BSR.w makelsub3                                          ;write lib code
00030500 <AmiBlitz3.ab3@21136>   MOVE.l (A7)+,libisat
00030502 <AmiBlitz3.ab3@21137>  RTS
00030506 <AmiBlitz3.ab3@21141>   BSR writelong
0003050C <AmiBlitz3.ab3@21144>   MOVE.l (A7)+,libisat
0003050E <AmiBlitz3.ab3@21145> RTS
00030512 <AmiBlitz3.ab3@21149>   BSR.w fetchregs
00030518 <AmiBlitz3.ab3@21151>   TST.b debugmode
0003051C <AmiBlitz3.ab3@21152>    BEQ.w 'norerr
0003051E <AmiBlitz3.ab3@21154>   MOVE.l (A2),D1
00030522 <AmiBlitz3.ab3@21155>   OR.l $8(A2),D1
00030526 <AmiBlitz3.ab3@21156>   BCLR #$0,D1
00030528 <AmiBlitz3.ab3@21157>   TST.l D1
0003052C <AmiBlitz3.ab3@21158>    BEQ.w 'norerr
0003052E <AmiBlitz3.ab3@21160>   MOVE.l (A2)+,D1
00030532 <AmiBlitz3.ab3@21161>   BTST #$0,D1
00030536 <AmiBlitz3.ab3@21162>    BEQ.w 'skiptt
0003053C <AmiBlitz3.ab3@21163>   TST.w blitzmode
00030540 <AmiBlitz3.ab3@21164>    BPL.w blitzerr
00030546 <AmiBlitz3.ab3@21165>   TST.b debugmode
0003054A <AmiBlitz3.ab3@21166>    BEQ.w 'skiptt2
0003054C <AmiBlitz3.ab3@21167>   MOVE.l D1,-(A7)
00030550 <AmiBlitz3.ab3@21168>   MOVE.w #$C311,D1   ; was #inblitz,
00030554 <AmiBlitz3.ab3@21169>    BSR.w makebtst
00030556 <AmiBlitz3.ab3@21170>   MOVE.l (A7)+,D1
0003055A <AmiBlitz3.ab3@21173>   BCLR #$0,D1
0003055C <AmiBlitz3.ab3@21176>   TST.l D1
00030560 <AmiBlitz3.ab3@21178>    BSR.w doajsr
00030562 <AmiBlitz3.ab3@21179>   MOVE.l (A2)+,D1
00030566 <AmiBlitz3.ab3@21180>    BSR.w doajsrrout
00030568 <AmiBlitz3.ab3@21181>   MOVE.l (A2)+,D1
0003056C <AmiBlitz3.ab3@21182>    BSR.w doajsr
00030570 <AmiBlitz3.ab3@21183>  BRA.w 'more
00030576 <AmiBlitz3.ab3@21186>   BTST #$0,$3(A2)
0003057A <AmiBlitz3.ab3@21187>    BEQ.w 'penis
0003057E <AmiBlitz3.ab3@21191>   MOVE.w blitzmode(PC),D1
00030582 <AmiBlitz3.ab3@21192>    BPL.w blitzerr
00030586 <AmiBlitz3.ab3@21195>   MOVE.l $4(A2),D1
0003058A <AmiBlitz3.ab3@21196>    BSR.w doajsrrout
00030590 <AmiBlitz3.ab3@21199>   MOVEA.l libisat,A2
00030592 <AmiBlitz3.ab3@21200> RTS
00030596 <AmiBlitz3.ab3@21207>   BTST #$0,D1
0003059A <AmiBlitz3.ab3@21208>    BEQ.w 'doajsr
000305A0 <AmiBlitz3.ab3@21209>   TST.w blitzmode
000305A4 <AmiBlitz3.ab3@21210>    BMI.w amigaerr
000305AA <AmiBlitz3.ab3@21211>   TST.b debugmode
000305AE <AmiBlitz3.ab3@21212>    BEQ.w 'doajsr2      
000305B0 <AmiBlitz3.ab3@21213>   MOVE.l D1,-(A7)
000305B4 <AmiBlitz3.ab3@21214>   MOVE.w #$C312,D1     ; #inamiga,
000305B8 <AmiBlitz3.ab3@21215>    BSR.w makebtst
000305BA <AmiBlitz3.ab3@21216>   MOVE.l (A7)+,D1
000305BE <AmiBlitz3.ab3@21219>   BCLR #$0,D1
000305C0 <AmiBlitz3.ab3@21222>   TST.l D1
000305C4 <AmiBlitz3.ab3@21225>    BEQ.w 'skip
000305C6 <AmiBlitz3.ab3@21226>   MOVE.l A1,-(A7)
000305CA <AmiBlitz3.ab3@21227>    BSR.w doajsr2
000305CC <AmiBlitz3.ab3@21228>   MOVEA.l (A7)+,A1
000305CE <AmiBlitz3.ab3@21231> RTS
000305D4 <AmiBlitz3.ab3@21235>   MOVEA.l libisat,A0
000305DA <AmiBlitz3.ab3@21236>   TST.w cfetchmode
000305DE <AmiBlitz3.ab3@21237>    BEQ.w 'nfetch
000305E0 <AmiBlitz3.ab3@21238>   ADD.l A0,D1
000305E2 <AmiBlitz3.ab3@21239>   MOVE.l D1,-(A7)
000305E6 <AmiBlitz3.ab3@21240>   MOVE.w #$4EB9,D1
000305EA <AmiBlitz3.ab3@21241>    BSR.w writeword
000305EC <AmiBlitz3.ab3@21242>   MOVE.l (A7)+,D1
000305F0 <AmiBlitz3.ab3@21243>  BRA.w writelong
000305F4 <AmiBlitz3.ab3@21250>   LEA $0(A0,D1.L),A1
000305FA <AmiBlitz3.ab3@21251>   CLR.w inline
000305FE <AmiBlitz3.ab3@21254>   CMPI.b #$A0,(A1)+
00030602 <AmiBlitz3.ab3@21255>    BNE.w 'ugly
00030604 <AmiBlitz3.ab3@21256>   TST.b (A1)+
00030608 <AmiBlitz3.ab3@21257>    BEQ.w 'iszero
0003060E <AmiBlitz3.ab3@21258>   CMPI.b #$1,-$1(A1)
00030612 <AmiBlitz3.ab3@21259>    BEQ.w 'isone
00030618 <AmiBlitz3.ab3@21263>   MOVE.w (A1)+,inline
0003061A <AmiBlitz3.ab3@21264>   ADDQ.l #4,D1
0003061E <AmiBlitz3.ab3@21265>  BRA.w 'cute
00030624 <AmiBlitz3.ab3@21270>   TST.w blitzmode
00030628 <AmiBlitz3.ab3@21271>    BPL.w 'inamiga
0003062E <AmiBlitz3.ab3@21273>   TST.b debugmode
00030632 <AmiBlitz3.ab3@21274>    BEQ.w 'nobrerr
00030636 <AmiBlitz3.ab3@21275>   MOVE.w #$C311,D1       ; was #inblitz,
0003063A <AmiBlitz3.ab3@21276>    BSR.w makebtst
0003063C <AmiBlitz3.ab3@21279>   MOVE.l (A1)+,D1
00030640 <AmiBlitz3.ab3@21280>   LEA $0(A0,D1.L),A1
00030644 <AmiBlitz3.ab3@21281>  BRA.w 'cute
0003064A <AmiBlitz3.ab3@21284>   TST.b debugmode
0003064E <AmiBlitz3.ab3@21285>    BEQ.w 'noarerr        
00030650 <AmiBlitz3.ab3@21286>   MOVE.l D1,-(A7)
00030654 <AmiBlitz3.ab3@21287>   MOVE.w #$C312,D1       ; was #inamiga,
00030658 <AmiBlitz3.ab3@21288>    BSR.w makebtst
0003065A <AmiBlitz3.ab3@21289>   MOVE.l (A7)+,D1
0003065C <AmiBlitz3.ab3@21292>   ADDQ.w #4,A1
0003065E <AmiBlitz3.ab3@21293>   ADDQ.l #6,D1
00030662 <AmiBlitz3.ab3@21294>  BRA.w 'cute
00030668 <AmiBlitz3.ab3@21297>   TST.w inline
0003066C <AmiBlitz3.ab3@21298>    BEQ.w 'notin
0003066E <AmiBlitz3.ab3@21300>   SUBQ.w #1,A1
00030670 <AmiBlitz3.ab3@21301>   MOVEA.l A1,A0
00030674 <AmiBlitz3.ab3@21302>   ADDA.w inline(PC),A1
00030678 <AmiBlitz3.ab3@21303>  BRA.w pokecode2
0003067C <AmiBlitz3.ab3@21306>   MOVEM.l a0/D1,-(A7)          ; was  d1,-(a7)
00030682 <AmiBlitz3.ab3@21308>   TST.w debugversion
00030686 <AmiBlitz3.ab3@21309>   BEQ 'l11
0003068E <AmiBlitz3.ab3@21310>   BTST #$7,link_debuginfo
00030692 <AmiBlitz3.ab3@21311>   BEQ.w 'l11
00030698 <AmiBlitz3.ab3@21312>   MOVE.l lastinstruction,d1
0003069C <AmiBlitz3.ab3@21313>   BEQ 'l11
000306A2 <AmiBlitz3.ab3@21314>   CLR.l lastinstruction
000306A8 <AmiBlitz3.ab3@21315>   CMP.l #$e000,d1
000306AC <AmiBlitz3.ab3@21316>   BGE 'ln99
000306B2 <AmiBlitz3.ab3@21317>   LEA notf,a0
000306B8 <AmiBlitz3.ab3@21318>   CMP.l #$c601,d1
000306BC <AmiBlitz3.ab3@21319>   BNE 'ln1
000306C2 <AmiBlitz3.ab3@21320>   LEA strcpy,a0
000306C6 <AmiBlitz3.ab3@21321>  BRA 'ln3
000306CC <AmiBlitz3.ab3@21324>   CMP.l #$c700,d1
000306D0 <AmiBlitz3.ab3@21325>   BNE 'ln2
000306D6 <AmiBlitz3.ab3@21326>   LEA strvar,a0
000306DA <AmiBlitz3.ab3@21327>  BRA 'ln3
000306E0 <AmiBlitz3.ab3@21330>   CMP.l #$ce00,d1
000306E4 <AmiBlitz3.ab3@21331>   BNE 'ln4
000306EA <AmiBlitz3.ab3@21332>   LEA strcmp,a0
000306EE <AmiBlitz3.ab3@21333>  BRA 'ln3
000306F4 <AmiBlitz3.ab3@21336>   CMP.l #$ca00,d1
000306F8 <AmiBlitz3.ab3@21337>   BNE 'ln5
000306FE <AmiBlitz3.ab3@21338>   LEA qmul,a0
00030702 <AmiBlitz3.ab3@21339>  BRA 'ln3
00030708 <AmiBlitz3.ab3@21342>   CMP.l #$d000,d1
0003070C <AmiBlitz3.ab3@21343>      BNE 'ln6
00030712 <AmiBlitz3.ab3@21344>      LEA _MaxLen,a0
00030716 <AmiBlitz3.ab3@21345>  BRA 'ln3
0003071C <AmiBlitz3.ab3@21348>   CMP.l #$cb00,d1
00030720 <AmiBlitz3.ab3@21349>   BNE 'ln3
00030726 <AmiBlitz3.ab3@21350>   LEA qdiv,a0
0003072A <AmiBlitz3.ab3@21351>  BRA 'ln3
0003072C <AmiBlitz3.ab3@21354>   MOVE.l d1,a0
00030730 <AmiBlitz3.ab3@21355>   LEA $8(a0),a0
00030734 <AmiBlitz3.ab3@21358>   CMP.w #$ffff,(a0)+
00030738 <AmiBlitz3.ab3@21359>   BNE 'l1
0003073C <AmiBlitz3.ab3@21360>   LEA 6(a0),a0
00030740 <AmiBlitz3.ab3@21363>   MOVEM.l a1/a2/d7/d2,-(a7)
00030742 <AmiBlitz3.ab3@21364>   MOVEQ #0,d2
00030748 <AmiBlitz3.ab3@21365>   LEA ptr_parameterstore,a1
0003074A <AmiBlitz3.ab3@21368>   ADDQ.l #1,d2
0003074C <AmiBlitz3.ab3@21369>   MOVE.b (a0)+,d0
00030750 <AmiBlitz3.ab3@21370> 
00030754 <AmiBlitz3.ab3@21371>   BNE 'nodollar
00030758 <AmiBlitz3.ab3@21372>   MOVE.b #"S",d0
0003075C <AmiBlitz3.ab3@21375>   CMP.b #"?",d0
00030760 <AmiBlitz3.ab3@21376>   BEQ 'nolabelwrite
00030762 <AmiBlitz3.ab3@21377>   MOVE.b d0,(a1)+
00030766 <AmiBlitz3.ab3@21378>   BNE 'l2
0003076C <AmiBlitz3.ab3@21379>   MOVE.w #"__",-1(a1)
0003076E <AmiBlitz3.ab3@21380>   ADDQ.l #2,d2
00030772 <AmiBlitz3.ab3@21381>   CLR.b 1(a1)
00030778 <AmiBlitz3.ab3@21382>   JSR findlabel2
0003077C <AmiBlitz3.ab3@21383>   BEQ 'l3
00030782 <AmiBlitz3.ab3@21384>   JSR addlabelhash
00030786 <AmiBlitz3.ab3@21387>   CLR.l 4(a2)
0003078A <AmiBlitz3.ab3@21388>   MOVE.l $14(a7),a0
0003078E <AmiBlitz3.ab3@21389>   MOVE.l $10(a7),d1
00030792 <AmiBlitz3.ab3@21390>   SUB.l $12(a0),d1
00030796 <AmiBlitz3.ab3@21391>   ADD.l $28(a0),d1
0003079A <AmiBlitz3.ab3@21392>   MOVE.l d1,8(a2)
0003079E <AmiBlitz3.ab3@21395>   MOVEM.l (a7)+,a1/a2/d7/d2
000307A4 <AmiBlitz3.ab3@21398>   TST.b typecheck
000307A8 <AmiBlitz3.ab3@21399>   BEQ 'p1
000307AE <AmiBlitz3.ab3@21400>   MOVE.l lasttoken,d1
000307B4 <AmiBlitz3.ab3@21401>   CMP.l #$da01,d1                                          ;poke
000307B8 <AmiBlitz3.ab3@21402>   BEQ 'lp1
000307BE <AmiBlitz3.ab3@21403>   CMP.l #$da02,d1                                          ;peek
000307C2 <AmiBlitz3.ab3@21404>   BNE 'p1
000307C8 <AmiBlitz3.ab3@21407>   TST.b peekaddrsize
000307CC <AmiBlitz3.ab3@21408>   BEQ 'p1
000307D4 <AmiBlitz3.ab3@21409>   CMP.b #3,peekaddrsize
000307D8 <AmiBlitz3.ab3@21410>   BNE errormsg_onlylong
000307DE <AmiBlitz3.ab3@21411>   CLR.b peekaddrsize
000307E4 <AmiBlitz3.ab3@21419>    TST.b fpu
000307E8 <AmiBlitz3.ab3@21420>   BNE 'optf
000307EE <AmiBlitz3.ab3@21421>   TST.b fast
000307F2 <AmiBlitz3.ab3@21422>   BEQ 'l10
000307FA <AmiBlitz3.ab3@21428>   CMP.l #"Poke",20(a2)                                     ;poke
000307FE <AmiBlitz3.ab3@21429>   BNE 'peekopt
00030802 <AmiBlitz3.ab3@21430>   TST.b 24(a2)
00030806 <AmiBlitz3.ab3@21431>   BNE 'peekopt
0003080A <AmiBlitz3.ab3@21432>   CMP.b #3,d2
0003080E <AmiBlitz3.ab3@21433>   BNE 'lw1
00030814 <AmiBlitz3.ab3@21436>   MOVE.l #$21821990,d1
00030818 <AmiBlitz3.ab3@21437>  BRA.s 'exitjsr
0003081C <AmiBlitz3.ab3@21440>   CMP.b #2,d2
00030820 <AmiBlitz3.ab3@21441>   BNE 'lb1
00030826 <AmiBlitz3.ab3@21442>   MOVE.l #$31821990,d1
0003082A <AmiBlitz3.ab3@21443>  BRA.s 'exitjsr
0003082E <AmiBlitz3.ab3@21446>   CMP.b #1,d2
00030832 <AmiBlitz3.ab3@21447>   BNE 'lp3
00030838 <AmiBlitz3.ab3@21448>   MOVE.l #$11821990,d1
0003083C <AmiBlitz3.ab3@21449>  BRA.s 'exitjsr
00030840 <AmiBlitz3.ab3@21452>   CMP.b #5,d2
00030844 <AmiBlitz3.ab3@21453>     BNE 'l10
0003084A <AmiBlitz3.ab3@21454>     TST.b fpu
0003084E <AmiBlitz3.ab3@21455>     BEQ 'll1
00030854 <AmiBlitz3.ab3@21456>      MOVE.l destpointer,a4
0003085C <AmiBlitz3.ab3@21457>     CMP.l #$f22d4500,-6(a4)
00030860 <AmiBlitz3.ab3@21458>     BNE 'noglob
00030866 <AmiBlitz3.ab3@21459>     TST.b doublepeek
0003086A <AmiBlitz3.ab3@21460>     BNE 'noglob
00030870 <AmiBlitz3.ab3@21461>     MOVE.w -2(a4),-4(a4)
00030876 <AmiBlitz3.ab3@21462>     MOVE.w #$21ad,-6(a4)
0003087C <AmiBlitz3.ab3@21463>     MOVE.w #$1990,-2(a4)
00030884 <AmiBlitz3.ab3@21464>     MOVE.w #9,peeksize
00030886 <AmiBlitz3.ab3@21465>     ADDQ #8,a7
00030888 <AmiBlitz3.ab3@21466>  RTS
00030890 <AmiBlitz3.ab3@21469>     CMP.l #$f22c4500,-6(a4)
00030894 <AmiBlitz3.ab3@21470>     BNE 'nolocal
0003089A <AmiBlitz3.ab3@21471>     MOVE.w -2(a4),-4(a4)
000308A0 <AmiBlitz3.ab3@21472>     TST.b doublepeek                                       ;dont move longfix on double floats
000308A4 <AmiBlitz3.ab3@21473>     BNE 'nolocal
000308AA <AmiBlitz3.ab3@21474>     MOVE.w #$21ac,-6(a4)
000308B0 <AmiBlitz3.ab3@21475>     MOVE.w #$1990,-2(a4)
000308B8 <AmiBlitz3.ab3@21476>     MOVE.w #9,peeksize
000308BA <AmiBlitz3.ab3@21477>     ADDQ #8,a7
000308BC <AmiBlitz3.ab3@21478>  RTS
000308C0 <AmiBlitz3.ab3@21481>     MOVE.w #$f230,d1
000308C4 <AmiBlitz3.ab3@21482>     BSR writeword
000308CA <AmiBlitz3.ab3@21483>   MOVE.l #$65001990,d1
000308D0 <AmiBlitz3.ab3@21484>   TST.b doublepeek
000308D4 <AmiBlitz3.ab3@21485>   BEQ 'exitjsr
000308DA <AmiBlitz3.ab3@21486>   OR.l   #$10000000,d1
000308DC <AmiBlitz3.ab3@21489>   ADDQ #8,a7
000308E4 <AmiBlitz3.ab3@21490>   MOVE.w #9,peeksize
000308E8 <AmiBlitz3.ab3@21491>  BRA writelong
000308F0 <AmiBlitz3.ab3@21494>   CMP.l #"Peek",20(a2)
000308F4 <AmiBlitz3.ab3@21495>   BNE 'l10
000308F8 <AmiBlitz3.ab3@21496>   TST.b 24(a2)
000308FC <AmiBlitz3.ab3@21497>   BNE 'l10
00030904 <AmiBlitz3.ab3@21498>   CMP.w #7,peeksize
00030908 <AmiBlitz3.ab3@21499>   BEQ 'l10
00030910 <AmiBlitz3.ab3@21500>    CMP.w #3,peeksize
00030914 <AmiBlitz3.ab3@21501>    BNE.s 'lw1a
0003091A <AmiBlitz3.ab3@21504>   MOVE.l #$20301990,d1
0003091E <AmiBlitz3.ab3@21505>  BRA 'exitjsr
00030926 <AmiBlitz3.ab3@21508>   CMP.w #2,peeksize
0003092A <AmiBlitz3.ab3@21509>    BNE.s 'lb1a
00030930 <AmiBlitz3.ab3@21510>    MOVE.l #$30301990,d1
00030934 <AmiBlitz3.ab3@21511>  BRA 'exitjsr
0003093C <AmiBlitz3.ab3@21514>   CMP.w #1,peeksize
00030940 <AmiBlitz3.ab3@21515>    BNE.s 'lf1
00030946 <AmiBlitz3.ab3@21516>    MOVE.l #$10301990,d1
0003094A <AmiBlitz3.ab3@21517>  BRA 'exitjsr
00030952 <AmiBlitz3.ab3@21520>   CMP.w #5,peeksize
00030956 <AmiBlitz3.ab3@21521>    BNE 'l10
0003095C <AmiBlitz3.ab3@21522>    TST.b fpu
00030960 <AmiBlitz3.ab3@21523>    BEQ 'll1a
00030964 <AmiBlitz3.ab3@21524>    MOVE.w #$f230,d1
00030968 <AmiBlitz3.ab3@21525>    BSR writeword
0003096A <AmiBlitz3.ab3@21526>    MOVEQ #0,d1
00030970 <AmiBlitz3.ab3@21527>    MOVE.w tempregnum,d1
00030972 <AmiBlitz3.ab3@21528>    ASL.l #7,d1
00030974 <AmiBlitz3.ab3@21529>    ASL.l #8,d1
00030976 <AmiBlitz3.ab3@21530>    ASL.l #8,d1
0003097C <AmiBlitz3.ab3@21531>    ADD.l #$44001990,d1
00030982 <AmiBlitz3.ab3@21532>     TST.b doublepeek
00030986 <AmiBlitz3.ab3@21533>     BEQ 'exitjsr2
0003098C <AmiBlitz3.ab3@21534>     OR.l   #$10000000,d1
00030990 <AmiBlitz3.ab3@21537>  BRA 'exitjsr
00030994 <AmiBlitz3.ab3@21541>   MOVE.w #$4EB9,D1
00030998 <AmiBlitz3.ab3@21542>    BSR.w writeword                                         ;writesysjsr
0003099C <AmiBlitz3.ab3@21543>   MOVEM.l (A7)+,a0/D1        ; was  (a7)+,d1
000309A2 <AmiBlitz3.ab3@21544>    JSR addoff
000309A6 <AmiBlitz3.ab3@21545>   SUB.l $12(A0),D1
000309AA <AmiBlitz3.ab3@21546>   ADD.l $28(A0),D1
000309AE <AmiBlitz3.ab3@21547> BRA.w writelong
000309B0 <AmiBlitz3.ab3@21552>   MOVE.w D1,-(A7)
000309B4 <AmiBlitz3.ab3@21553>   MOVE.w tstmode(PC),D1
000309B8 <AmiBlitz3.ab3@21554>    BSR.w writeword
000309BC <AmiBlitz3.ab3@21555>    BSR.w getbbase
000309C0 <AmiBlitz3.ab3@21556>    BSR.w writeword
000309C2 <AmiBlitz3.ab3@21557>   MOVE.w (A7)+,D1
000309C6 <AmiBlitz3.ab3@21558>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
000309CA <AmiBlitz3.ab3@21559>    BSR.w Atokejsr
000309CE <AmiBlitz3.ab3@21560>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
000309D0 <AmiBlitz3.ab3@21561> RTS
000309D4 <AmiBlitz3.ab3@21569>   MOVE.w blitzoff(PC),D1
000309D8 <AmiBlitz3.ab3@21570>   CMP.w #-$1,D1
000309DC <AmiBlitz3.ab3@21571>    BNE.w 'done
000309E2 <AmiBlitz3.ab3@21572>   ADDQ.w #1,globalvarpointer
000309EA <AmiBlitz3.ab3@21573>   BCLR #$0,globalvarpointer+1
000309F0 <AmiBlitz3.ab3@21574>   MOVE.w globalvarpointer,D1
000309F6 <AmiBlitz3.ab3@21575>   MOVE.w D1,blitzoff
000309FC <AmiBlitz3.ab3@21576>   ADDQ.w #2,globalvarpointer
000309FE <AmiBlitz3.ab3@21579> RTS
00030A02 <AmiBlitz3.ab3@21583> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
00030A04 <AmiBlitz3.ab3@21586> inline:     Ds.w 1
00030A06 <AmiBlitz3.ab3@21587> blitzoff:   Dc.w $FFFF                                   ;-1 org source
00030A08 <AmiBlitz3.ab3@21588> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00030A0A <AmiBlitz3.ab3@21592>   MOVE.w (A2)+,D1
00030A0E <AmiBlitz3.ab3@21593>    BEQ.w 'done
00030A10 <AmiBlitz3.ab3@21594>   MOVE.w (A2)+,D2
00030A14 <AmiBlitz3.ab3@21595>    BSR.w toreg
00030A18 <AmiBlitz3.ab3@21596>  BRA.w fetchregs
00030A1A <AmiBlitz3.ab3@21599> RTS
00030A1E <AmiBlitz3.ab3@21605>   CMP.w #-$100,D2
00030A22 <AmiBlitz3.ab3@21606>    BCC.w 'yeah
00030A26 <AmiBlitz3.ab3@21608>   BCLR #$F,D2
00030A2A <AmiBlitz3.ab3@21609>    BEQ.w 'nobm
00030A30 <AmiBlitz3.ab3@21611>   TST.w blitzmode
00030A34 <AmiBlitz3.ab3@21612>    BMI.w 'yeah
00030A36 <AmiBlitz3.ab3@21613>  RTS
00030A3A <AmiBlitz3.ab3@21616>   BCLR #$E,D2
00030A3E <AmiBlitz3.ab3@21617>    BEQ.w 'yeah
00030A44 <AmiBlitz3.ab3@21619>   TST.w blitzmode
00030A48 <AmiBlitz3.ab3@21620>    BPL.w 'yeah
00030A4A <AmiBlitz3.ab3@21621>  RTS
00030A50 <AmiBlitz3.ab3@21624>   JSR uselib
00030A52 <AmiBlitz3.ab3@21625>   TST.b D2
00030A56 <AmiBlitz3.ab3@21626>    BEQ.w 'norm
00030A5A <AmiBlitz3.ab3@21627>   CMP.b #$4,D2
00030A5E <AmiBlitz3.ab3@21628>    BNE.w 'suv
00030A62 <AmiBlitz3.ab3@21629>   MOVE.w #$0004,-(A7)
00030A68 <AmiBlitz3.ab3@21630>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00030A6C <AmiBlitz3.ab3@21631>  BRA.w 'sendmd
00030A70 <AmiBlitz3.ab3@21634>   CMP.b #$3,D2
00030A74 <AmiBlitz3.ab3@21635>    BNE.w 'notnmax
00030A76 <AmiBlitz3.ab3@21636>   CLR.w -(A7)
00030A7C <AmiBlitz3.ab3@21637>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00030A7E <AmiBlitz3.ab3@21643>   LSR.w #8,D2
00030A82 <AmiBlitz3.ab3@21644>   MOVE.w #$303C,D1                                         ;move.w #x,dn
00030A86 <AmiBlitz3.ab3@21645>   BTST #$7,D2
00030A8A <AmiBlitz3.ab3@21646>    BEQ.w 'skipad
00030A8E <AmiBlitz3.ab3@21647>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030A92 <AmiBlitz3.ab3@21648>   CMP.w #$16,D2
00030A96 <AmiBlitz3.ab3@21649>    BNE.w 'skipad
00030A9E <AmiBlitz3.ab3@21650>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030AA2 <AmiBlitz3.ab3@21653>   ANDI.w #$7,D2
00030AA4 <AmiBlitz3.ab3@21654>   LSL.w #8,D2
00030AA6 <AmiBlitz3.ab3@21655>   LSL.w #1,D2
00030AA8 <AmiBlitz3.ab3@21656>   OR.w D2,D1
00030AAC <AmiBlitz3.ab3@21657>    BSR.w writeword
00030AB0 <AmiBlitz3.ab3@21658>   MOVE.l $12(A1),D1
00030AB2 <AmiBlitz3.ab3@21659>   ADD.l (A7)+,D1
00030AB6 <AmiBlitz3.ab3@21660>   MOVE.w $0(A1,D1.L),D1
00030AB8 <AmiBlitz3.ab3@21661>   ADD.w (A7)+,D1
00030ABC <AmiBlitz3.ab3@21662>  BRA.w writeword
00030ABE <AmiBlitz3.ab3@21665>   MOVE.w D2,-(A7)
00030AC0 <AmiBlitz3.ab3@21666>   LSR.w #8,D2
00030AC4 <AmiBlitz3.ab3@21667>   CMP.w #$16,D2
00030AC8 <AmiBlitz3.ab3@21668>    BNE.w 'isnta6
00030AD0 <AmiBlitz3.ab3@21669>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030AD4 <AmiBlitz3.ab3@21672>   MOVE.l $12(A1),D1                                        ;objectspace
00030AD8 <AmiBlitz3.ab3@21673>   MOVE.w -$6(A1,D1.L),-(A7)
00030ADC <AmiBlitz3.ab3@21674>    BSR.w makeregop
00030AE0 <AmiBlitz3.ab3@21675>    BSR.w writeword
00030AE2 <AmiBlitz3.ab3@21676>   MOVE.w (A7)+,D1
00030AE4 <AmiBlitz3.ab3@21677>   MOVE.w (A7)+,D2
00030AE6 <AmiBlitz3.ab3@21678>   TST.b D2
00030AEA <AmiBlitz3.ab3@21679>    BPL.w 'skippy1
00030AEE <AmiBlitz3.ab3@21684>    BSR.w writeword                                         ;move.l x(a5),dn
00030AF0 <AmiBlitz3.ab3@21685>   MOVE.w D2,-(A7)                                          ;store reg used
00030AF4 <AmiBlitz3.ab3@21687>   ADDA.l $12(A1),A1
00030AF6 <AmiBlitz3.ab3@21688>   MOVE.b D2,D1
00030AFA <AmiBlitz3.ab3@21689>   ANDI.w #$7,D1
00030B00 <AmiBlitz3.ab3@21691>   TST.b debugmode
00030B04 <AmiBlitz3.ab3@21692>    BEQ.w 'norerr
00030B06 <AmiBlitz3.ab3@21694>   MOVE.w D1,-(A7)
00030B08 <AmiBlitz3.ab3@21695>   LSL.w #8,D1
00030B0A <AmiBlitz3.ab3@21696>   LSL.w #1,D1
00030B0E <AmiBlitz3.ab3@21697>   ORI.w #$B07C,D1                                          ;cmp #x,dn
00030B12 <AmiBlitz3.ab3@21698>    BSR.w writeword
00030B16 <AmiBlitz3.ab3@21699>   MOVE.w -$4(A1),D1
00030B1A <AmiBlitz3.ab3@21700>    BSR.w writeword
00030B1E <AmiBlitz3.ab3@21701>   MOVE.l maxchk(PC),D1                                  ;bcs
00030B22 <AmiBlitz3.ab3@21702>    BSR.w writelong
00030B24 <AmiBlitz3.ab3@21703>   MOVE.l A2,-(A7)
00030B28 <AmiBlitz3.ab3@21704>   MOVE.w #$C30A,D1
00030B2C <AmiBlitz3.ab3@21705>    BSR.w Atokejsr
00030B2E <AmiBlitz3.ab3@21706>   MOVEA.l (A7)+,A2
00030B30 <AmiBlitz3.ab3@21707>   MOVE.w (A7)+,D1
00030B34 <AmiBlitz3.ab3@21710>   MOVE.w -$2(A1),D2                                        ;shift amount
00030B38 <AmiBlitz3.ab3@21713>   CMP.w #$9,D2
00030B3C <AmiBlitz3.ab3@21714>    BCS.w 'simp
00030B40 <AmiBlitz3.ab3@21715>   MOVEM.w D1-D2,-(A7)
00030B42 <AmiBlitz3.ab3@21717>   MOVEQ.l #$00,D2                                          ;!!!!!
00030B44 <AmiBlitz3.ab3@21719>   LSL.w #8,D2
00030B46 <AmiBlitz3.ab3@21720>   LSL.w #1,D2
00030B48 <AmiBlitz3.ab3@21721>   OR.w D2,D1
00030B4C <AmiBlitz3.ab3@21722>   OR.w lsldn(PC),D1
00030B50 <AmiBlitz3.ab3@21723>    BSR.w writeword
00030B54 <AmiBlitz3.ab3@21724>   MOVEM.w (A7)+,D1-D2
00030B56 <AmiBlitz3.ab3@21725>   SUBQ.w #8,D2
00030B5A <AmiBlitz3.ab3@21726>  BRA.w 'shloop
00030B5C <AmiBlitz3.ab3@21729>   MOVE.w D1,-(A7)
00030B60 <AmiBlitz3.ab3@21730>   OR.w #$48c0,d1
00030B64 <AmiBlitz3.ab3@21731>   BSR writeword
00030B66 <AmiBlitz3.ab3@21732>   MOVE.w (a7),d1
00030B68 <AmiBlitz3.ab3@21733>   TST.w D2
00030B6C <AmiBlitz3.ab3@21734>   BEQ.w 'simp2
00030B70 <AmiBlitz3.ab3@21736>   ANDI.w #$7,D2                                            ;?????
00030B72 <AmiBlitz3.ab3@21738>   LSL.w #8,D2
00030B74 <AmiBlitz3.ab3@21739>   LSL.w #1,D2
00030B76 <AmiBlitz3.ab3@21740>   OR.w D2,D1
00030B7A <AmiBlitz3.ab3@21741>   OR.w lsldn(PC),D1
00030B7E <AmiBlitz3.ab3@21742>    BSR.w writeword
00030B80 <AmiBlitz3.ab3@21748>   MOVE.w (A7)+,D1
00030B84 <AmiBlitz3.ab3@21749>   ANDI.w #$7,D1
00030B88 <AmiBlitz3.ab3@21750>   OR.w maxdo(PC),D1
00030B8A <AmiBlitz3.ab3@21751>   MOVE.w (A7)+,D2
00030B8C <AmiBlitz3.ab3@21752>   LSL.w #1,D2
00030B90 <AmiBlitz3.ab3@21753>   ANDI.w #$E00,D2
00030B92 <AmiBlitz3.ab3@21754>   OR.w D2,D1
00030B96 <AmiBlitz3.ab3@21755>  BRA.w writeword
00030B9A <AmiBlitz3.ab3@21758>   CMP.b #$1,D2
00030B9E <AmiBlitz3.ab3@21759>    BEQ.w 'skippy
00030BA0 <AmiBlitz3.ab3@21763>   ADDQ.w #4,D1
00030BA6 <AmiBlitz3.ab3@21765>   TST.b debugmode
00030BAA <AmiBlitz3.ab3@21766>    BEQ.w 'skippy
00030BAE <AmiBlitz3.ab3@21768>    BSR.w writeword
00030BB0 <AmiBlitz3.ab3@21769>   SWAP D1
00030BB4 <AmiBlitz3.ab3@21770>   MOVE.w 'theretest(PC),D1
00030BB6 <AmiBlitz3.ab3@21771>   SWAP D1
00030BBA <AmiBlitz3.ab3@21772>    BSR.w writelong
00030BBE <AmiBlitz3.ab3@21773>   MOVE.l 'theretest+4(PC),D1
00030BC2 <AmiBlitz3.ab3@21774>    BSR.w writelong
00030BC6 <AmiBlitz3.ab3@21775>   MOVE.l 'theretest+8(PC),D1
00030BCA <AmiBlitz3.ab3@21776>  BRA.w writelong
00030BCE <AmiBlitz3.ab3@21779>  BRA.w writeword
00030BD2 <AmiBlitz3.ab3@21784>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030BD6 <AmiBlitz3.ab3@21785>             Dc.b $66,$00,$00,$06                           ;BNE.W  'ttskip
00030BD8 <AmiBlitz3.ab3@21786>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030BDA <AmiBlitz3.ab3@21787>             Dc.b $4E,$40                                   ;TRAP   #00
00030BDC <AmiBlitz3.ab3@21792>   LSR.w #8,D2
00030BE0 <AmiBlitz3.ab3@21793>   CMP.b #$16,D2
00030BE4 <AmiBlitz3.ab3@21794>    BNE.w 'nota6
00030BE8 <AmiBlitz3.ab3@21795>   MOVE.w $A(A1),D1
00030BEE <AmiBlitz3.ab3@21796>   CMP.w lasta6,D1
00030BF2 <AmiBlitz3.ab3@21797>    BEQ.w 'sk
00030BF8 <AmiBlitz3.ab3@21798>   MOVE.w D1,lasta6
00030BFC <AmiBlitz3.ab3@21801>    BSR.w makeregop
00030C00 <AmiBlitz3.ab3@21802>   TST.w $1A(A1)
00030C04 <AmiBlitz3.ab3@21803>    BPL.w 'long
00030C08 <AmiBlitz3.ab3@21804>   CMP.w stackop(PC),D1
00030C0C <AmiBlitz3.ab3@21805>    BNE.w 'notst
00030C12 <AmiBlitz3.ab3@21806>   SUBQ.w #2,a2offset
00030C16 <AmiBlitz3.ab3@21809>    ORI.w #$1000,D1
00030C1A <AmiBlitz3.ab3@21812>    BSR.w writeword
00030C1E <AmiBlitz3.ab3@21813>   MOVE.w $A(A1),D1
00030C22 <AmiBlitz3.ab3@21814>    BSR.w writeword
00030C24 <AmiBlitz3.ab3@21817> RTS
00030C26 <AmiBlitz3.ab3@21821> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030C2A <AmiBlitz3.ab3@21822> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk_ok
00030C30 <AmiBlitz3.ab3@21823>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
00030C32 <AmiBlitz3.ab3@21826> 
00030C34 <AmiBlitz3.ab3@21829>             Dc.b $00,$00
00030C38 <AmiBlitz3.ab3@21830> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030C3C <AmiBlitz3.ab3@21837>   CMP.b #$FF,D2
00030C40 <AmiBlitz3.ab3@21838>    BNE.w 'notst
00030C44 <AmiBlitz3.ab3@21839>   MOVE.w stackop(PC),D1
00030C4A <AmiBlitz3.ab3@21840>   ADDQ.w #4,a2offset
00030C4C <AmiBlitz3.ab3@21841>  RTS
00030C4E <AmiBlitz3.ab3@21844>   MOVE.l A3,-(A7)
00030C54 <AmiBlitz3.ab3@21845>   LEA regtransd,A3
00030C58 <AmiBlitz3.ab3@21846>   BTST #$4,D2
00030C5C <AmiBlitz3.ab3@21847>    BEQ.w 'skip
00030C62 <AmiBlitz3.ab3@21848>   LEA regtransa,A3
00030C66 <AmiBlitz3.ab3@21851>   ANDI.w #$7,D2
00030C68 <AmiBlitz3.ab3@21852>   MOVE.w D2,D1
00030C6A <AmiBlitz3.ab3@21853>   LSL.w #8,D1
00030C6C <AmiBlitz3.ab3@21854>   LSL.w #1,D1
00030C6E <AmiBlitz3.ab3@21855>   OR.w (A3),D1
00030C70 <AmiBlitz3.ab3@21856>   MOVEA.l (A7)+,A3
00030C72 <AmiBlitz3.ab3@21857> RTS
00030C76 <AmiBlitz3.ab3@21863>   CMP.w #$3C,D0
00030C7A <AmiBlitz3.ab3@21864>    BCS.w 'no
00030C7E <AmiBlitz3.ab3@21865>   CMP.w #$3E,D0
00030C82 <AmiBlitz3.ab3@21866>    BHI.w 'no
00030C86 <AmiBlitz3.ab3@21867>   SUBI.w #$3C,D0
00030C88 <AmiBlitz3.ab3@21868>   CMP.w D0,D0
00030C8A <AmiBlitz3.ab3@21871> RTS
00030C94 <AmiBlitz3.ab3@21884>   MOVE.w oldqflag,instringon
00030C9A <AmiBlitz3.ab3@21885>   MOVEA.l lastsourcepos,A5
00030CA0 <AmiBlitz3.ab3@21894>   MOVE.w regnum,-(A7)
00030CA6 <AmiBlitz3.ab3@21895>   CLR.w regnum
00030CAC <AmiBlitz3.ab3@21896>   MOVE.l destpointer,-(A7)
00030CB2 <AmiBlitz3.ab3@21897>   MOVE.l destbufferend,-(A7)
00030CB8 <AmiBlitz3.ab3@21898>   MOVE.w dontwrite_nomemleft,-(A7)
00030CBE <AmiBlitz3.ab3@21899>   MOVE.w lasta6,-(A7)
00030CC4 <AmiBlitz3.ab3@21900>   MOVE.w cfetchmode,-(A7)
00030CC8 <AmiBlitz3.ab3@21901>    BNE.w 'something
00030CD2 <AmiBlitz3.ab3@21902>   MOVE.l destbufferend,oldlibat
00030CD8 <AmiBlitz3.ab3@21903>   MOVEA.l constpcat,A0
00030CDE <AmiBlitz3.ab3@21904>   MOVE.l A0,destpointer
00030CE2 <AmiBlitz3.ab3@21905>  BRA.w 'some2
00030CE8 <AmiBlitz3.ab3@21910>   MOVEA.l destpointer,A0     ;continue in cmode buff
00030CEA <AmiBlitz3.ab3@21913>   MOVE.l A0,-(A7)
00030CF4 <AmiBlitz3.ab3@21914>   MOVE.l constlibat,destbufferend      ;for overflow
00030CFA <AmiBlitz3.ab3@21915>   CLR.w dontwrite_nomemleft
00030D02 <AmiBlitz3.ab3@21917>   MOVE.w #$FFFF,lasta6                 ; was -1
00030D0A <AmiBlitz3.ab3@21918>   MOVE.w #$FFFF,cfetchmode             ; was -1
00030D0E <AmiBlitz3.ab3@21922>     BSR.w arreval                      ;!
00030D10 <AmiBlitz3.ab3@21924>    MOVE.l (a7),a0
00030E4C <AmiBlitz3.ab3@21926>  !newcalc
00030E50 <AmiBlitz3.ab3@21927>    BEQ 'l10
00030E52 <AmiBlitz3.ab3@21928>    MOVE.l d0,d3
00030E54 <AmiBlitz3.ab3@21929>    MOVEA.l (A7)+,A0
00030E58 <AmiBlitz3.ab3@21930>  BRA 'bc1
00030E5C <AmiBlitz3.ab3@21934>    MOVE.w #$2600,D1              ;move.l d0,d3
00030E62 <AmiBlitz3.ab3@21935>   OR.w regnum,D1
00030E66 <AmiBlitz3.ab3@21936>    BSR.w writeword
00030E6A <AmiBlitz3.ab3@21937>   MOVE.w #$4E75,D1               ;rts!
00030E6E <AmiBlitz3.ab3@21938>    BSR.w writeword
00030E74 <AmiBlitz3.ab3@21940>   MOVE.w dontwrite_nomemleft,D1
00030E78 <AmiBlitz3.ab3@21941>    BNE.w conmemerr
00030E7A <AmiBlitz3.ab3@21943>   MOVEA.l (A7)+,A0
00030E7C <AmiBlitz3.ab3@21945>   NOP
00030E82 <AmiBlitz3.ab3@21947>    JSR Aclearcache                                         ;simple expression
00030E84 <AmiBlitz3.ab3@21949>    JSR (A0)                                                ;writeresult
00030E8A <AmiBlitz3.ab3@21952>   MOVE.w (A7)+,cfetchmode
00030E90 <AmiBlitz3.ab3@21953>   MOVE.w (A7)+,lasta6
00030E96 <AmiBlitz3.ab3@21954>   MOVE.w (A7)+,dontwrite_nomemleft
00030E9C <AmiBlitz3.ab3@21955>   MOVE.l (A7)+,destbufferend
00030EA2 <AmiBlitz3.ab3@21956>   MOVE.l (A7)+,destpointer
00030EA8 <AmiBlitz3.ab3@21957>   MOVE.w (A7)+,regnum
00030EAE <AmiBlitz3.ab3@21962> JMP reget
00030EB2 <AmiBlitz3.ab3@21965> oldlibat:   Ds.l 1
00030EB8 <AmiBlitz3.ab3@21969>   LEA incdir,A0
00030EBC <AmiBlitz3.ab3@21972>   CMP.w #$22,D0     ;'"'
00030EC0 <AmiBlitz3.ab3@21973>    BEQ.w 'skip
00030EC2 <AmiBlitz3.ab3@21974>   MOVE.b D0,(A0)+
00030EC4 <AmiBlitz3.ab3@21975>   TST.w D0
00030EC8 <AmiBlitz3.ab3@21976>    BEQ.w 'done
00030ECC <AmiBlitz3.ab3@21977>    BMI.w syntaxerr
00030ED2 <AmiBlitz3.ab3@21980>   JSR get1bytemain                                         ;_long
00030ED6 <AmiBlitz3.ab3@21981>  BRA.w 'loop
00030ED8 <AmiBlitz3.ab3@21984> RTS
00030EDE <AmiBlitz3.ab3@21991>   LEA ptr_parameterstore,A1                                ;getparameter
00030EE4 <AmiBlitz3.ab3@21992>   LEA incdir,A0
00030EE6 <AmiBlitz3.ab3@21993>   MOVEQ.l #-$01,D2
00030EE8 <AmiBlitz3.ab3@21996>     ADDQ.w #1,D2
00030EEA <AmiBlitz3.ab3@21997>     MOVE.b (A0)+,(A1)+
00030EEE <AmiBlitz3.ab3@21998>   BNE.w 'loop0
00030EF0 <AmiBlitz3.ab3@21999>   SUBQ.w #1,A1
00030EFA <AmiBlitz3.ab3@22002>   MOVE.w oldqflag,instringon
00030F00 <AmiBlitz3.ab3@22003>   MOVEA.l lastsourcepos,A5
00030F06 <AmiBlitz3.ab3@22007>   JSR get1bytemain
00030F08 <AmiBlitz3.ab3@22008>   TST.w D0
00030F0C <AmiBlitz3.ab3@22009>    BMI.w syntaxerr
00030F10 <AmiBlitz3.ab3@22010>   CMP.b #$22,D0         ;'"'
00030F14 <AmiBlitz3.ab3@22011>    BEQ.w 'loop
00030F16 <AmiBlitz3.ab3@22012>   MOVE.b D0,(A1)+
00030F1A <AmiBlitz3.ab3@22013>    BEQ.w 'done
00030F1C <AmiBlitz3.ab3@22014>   ADDQ.w #1,D2
00030F20 <AmiBlitz3.ab3@22015>  BRA.w 'loop
00030F22 <AmiBlitz3.ab3@22018>   TST.w D2
00030F26 <AmiBlitz3.ab3@22019>    BEQ.w syntaxerr
00030F28 <AmiBlitz3.ab3@22020> RTS
00030F2E <AmiBlitz3.ab3@22027>   MOVEA.l constantbase,A2
00030F32 <AmiBlitz3.ab3@22029>   MOVEA.l $E(A2),A5
00030F38 <AmiBlitz3.ab3@22031>   MOVE.l a5,includesourceline
00030F3E <AmiBlitz3.ab3@22032>   LEA inctab,a0
00030F44 <AmiBlitz3.ab3@22033>   MOVE.w ininclude,d0
00030F48 <AmiBlitz3.ab3@22034>   MOVE.l $0(a0,d0*4),d0
00030F4C <AmiBlitz3.ab3@22036>   MOVEA.l $4(A2),A0
00030F50 <AmiBlitz3.ab3@22038>   LEA $0(A0,D0.l),A0   ;end of buffer!
00030F52 <AmiBlitz3.ab3@22039>   MOVEA.l A5,A1
00030F54 <AmiBlitz3.ab3@22042>     CMPA.l A0,A1
00030F58 <AmiBlitz3.ab3@22043>      BCC.w readpend
00030F5A <AmiBlitz3.ab3@22044>   TST.b (A1)+
00030F5E <AmiBlitz3.ab3@22045>   BNE.w 'loop
00030F62 <AmiBlitz3.ab3@22046> BRA.w imakeend
00030F66 <AmiBlitz3.ab3@22051>   MOVEA.l $4(A2),A1
00030F68 <AmiBlitz3.ab3@22054>   CMPA.l A0,A5
00030F6C <AmiBlitz3.ab3@22055>   BCC.w 'skip
00030F6E <AmiBlitz3.ab3@22056>   MOVE.b (A5)+,(A1)+
00030F72 <AmiBlitz3.ab3@22057>  BRA.w 'loop
00030F74 <AmiBlitz3.ab3@22060>   MOVE.l A1,D0
00030F78 <AmiBlitz3.ab3@22061>   SUB.l $4(A2),D0
00030F7E <AmiBlitz3.ab3@22063>   LEA inctab,a0
00030F80 <AmiBlitz3.ab3@22064>   MOVEQ #0,d1
00030F86 <AmiBlitz3.ab3@22065>   MOVE.w ininclude,d1
00030F8A <AmiBlitz3.ab3@22066>   MOVE.l d0,0(a0,d1*4)
00030F90 <AmiBlitz3.ab3@22069>   MOVEA.l _dosbase,A6
00030F94 <AmiBlitz3.ab3@22070>   MOVE.l $8(A2),D1
00030F96 <AmiBlitz3.ab3@22071>   MOVE.l A1,D2
00030F9C <AmiBlitz3.ab3@22073>   MOVE.l D2,include_base
00030FA2 <AmiBlitz3.ab3@22074>   MOVE.l #$10000000,d3                                     ;load whole file
00030FA4 <AmiBlitz3.ab3@22077>   SUB.l D0,D3
00030FA8 <AmiBlitz3.ab3@22079>    JSR _Read(A6)
00030FAA <AmiBlitz3.ab3@22081>   TST.l D0
00030FAE <AmiBlitz3.ab3@22082>    BMI.w error_reading_file
00030FB2 <AmiBlitz3.ab3@22084>    BEQ.w closeinc
00030FB8 <AmiBlitz3.ab3@22085>    MOVE.l D0,include_length
00030FFA <AmiBlitz3.ab3@22086>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00031024 <AmiBlitz3.ab3@22087>    !basic
00031034 <AmiBlitz3.ab3@22088>    ilen.l  = Peek.l(?include_length)
00031044 <AmiBlitz3.ab3@22089>    ibase.l = Peek.l(?include_base)
00031054 <AmiBlitz3.ab3@22090>    ido.l   = Peek.l(?include_process)
00031064 <AmiBlitz3.ab3@22091>    *tn.preprocessor = Peek.l(?include_preprocessor)
0003106E <AmiBlitz3.ab3@22092>    If ido
00031080 <AmiBlitz3.ab3@22093>      ioffset.l = SkipXtraHeader{ibase,ilen}
000310A6 <AmiBlitz3.ab3@22094>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
000310B8 <AmiBlitz3.ab3@22095>      If nilen>0
000310C8 <AmiBlitz3.ab3@22099>        Poke.l ?include_length,nilen
000310E6 <AmiBlitz3.ab3@22102>    !asm
000310F0 <AmiBlitz3.ab3@22103>    MOVE.l #0,include_process
000310F6 <AmiBlitz3.ab3@22104>    MOVE.l include_length,D0
000310FC <AmiBlitz3.ab3@22105>    LEA inctab,a0
000310FE <AmiBlitz3.ab3@22106>    MOVEQ #0,d1
00031104 <AmiBlitz3.ab3@22107>    MOVE.w ininclude,d1
00031108 <AmiBlitz3.ab3@22108>    ADD.l d0,0(a0,d1*4)
0003110C <AmiBlitz3.ab3@22112>   MOVEA.l $4(A2),A5
00031110 <AmiBlitz3.ab3@22115>    MOVE.l 0(a0,d1*4),d0
00031114 <AmiBlitz3.ab3@22117>   CLR.b $0(A5,D0.l)
00031116 <AmiBlitz3.ab3@22120>   MOVEA.l A5,A0
00031118 <AmiBlitz3.ab3@22123>     TST.b (A0)+
0003111C <AmiBlitz3.ab3@22124>   BNE.w 'loop2
00031120 <AmiBlitz3.ab3@22125>   MOVE.l A0,$E(A2)
00031122 <AmiBlitz3.ab3@22126> RTS
00031126 <AmiBlitz3.ab3@22129> include_length:        Dc.l 0                              ; for tokenizer!
0003112A <AmiBlitz3.ab3@22130> include_base:          Dc.l 0
0003112E <AmiBlitz3.ab3@22131> include_process:       Dc.l 0
00031132 <AmiBlitz3.ab3@22132> include_preprocessor:  Dc.l 0
00031136 <AmiBlitz3.ab3@22136>   MOVE.l $8(A2),D1
0003113C <AmiBlitz3.ab3@22137>   MOVEA.l _dosbase,A6
00031140 <AmiBlitz3.ab3@22138>   JSR _Close(a6)
00031146 <AmiBlitz3.ab3@22139>   MOVEA.l _execbase,A6
0003114A <AmiBlitz3.ab3@22140>   MOVEA.l $4(A2),A1
00031150 <AmiBlitz3.ab3@22141>   MOVE.l #$400*8,D0         ; #inclen                               ;exit include
00031154 <AmiBlitz3.ab3@22146>   JSR _FreeVec(a6)
0003115A <AmiBlitz3.ab3@22149>   MOVE.l (A2),constantbase
0003115C <AmiBlitz3.ab3@22150>   MOVEA.l A2,A1
0003115E <AmiBlitz3.ab3@22151>   MOVEQ.l #$00,D0
00031162 <AmiBlitz3.ab3@22152>   MOVE.b $12(A2),D0
00031168 <AmiBlitz3.ab3@22153>   MOVEA.l _execbase,A6
0003116E <AmiBlitz3.ab3@22156>   MOVE.l mempool2,a0
00031172 <AmiBlitz3.ab3@22157>   JSR _FreePooled(A6)
00031178 <AmiBlitz3.ab3@22158>   JSR zero_includename
0003117E <AmiBlitz3.ab3@22160>   SUBQ.w #1,ininclude
00031182 <AmiBlitz3.ab3@22161>   BNE.w readinc
00031188 <AmiBlitz3.ab3@22165>   LEA _include,a0
0003118C <AmiBlitz3.ab3@22166>   MOVEM.l a0-a6/d0-d7,-(a7)
00031192 <AmiBlitz3.ab3@22167>   LEA ptr_parameterstore,a1
00031194 <AmiBlitz3.ab3@22170>     MOVE.b (a0)+,(a1)+
00031198 <AmiBlitz3.ab3@22171>   BNE 'l1b
0003119A <AmiBlitz3.ab3@22172>   MOVEQ #9,d2
000311A0 <AmiBlitz3.ab3@22173>   JSR findlabel2
000311A4 <AmiBlitz3.ab3@22174>   BNE 'd
000311A8 <AmiBlitz3.ab3@22175>   CLR.l 8(a2)
000311AC <AmiBlitz3.ab3@22178>   MOVEM.l (a7)+,a0-a6/d0-d7
000311AE <AmiBlitz3.ab3@22180> RTS
000311B4 <AmiBlitz3.ab3@22185>   MOVE.l unusedfunc,d0
000311B8 <AmiBlitz3.ab3@22186>   BEQ 'noclear
000311BC <AmiBlitz3.ab3@22187>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
000311BE <AmiBlitz3.ab3@22190>     MOVE.l d0,a1
000311C2 <AmiBlitz3.ab3@22191>     MOVE.l 4(a1),d0
000311C4 <AmiBlitz3.ab3@22192>     MOVE.l (a1),d2
000311CA <AmiBlitz3.ab3@22193>     MOVE.l _execbase,a6
000311CE <AmiBlitz3.ab3@22194>     JSR _FreeMem(a6)
000311D0 <AmiBlitz3.ab3@22195>     MOVE.l d2,d0
000311D4 <AmiBlitz3.ab3@22196>   BNE 'f1
000311DA <AmiBlitz3.ab3@22197>   CLR.l unusedfunc
000311DE <AmiBlitz3.ab3@22198>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
000311E0 <AmiBlitz3.ab3@22201> RTS
000311E6 <AmiBlitz3.ab3@22206>   MOVEA.l xinclude_base,A2
000311EC <AmiBlitz3.ab3@22207>   CLR.l xinclude_base
000311F0 <AmiBlitz3.ab3@22210>     CMPA.w #$0,A2
000311F4 <AmiBlitz3.ab3@22211>      BEQ.w 'done
000311F6 <AmiBlitz3.ab3@22212>     MOVEQ.l #$00,D0
000311FA <AmiBlitz3.ab3@22213>     MOVE.b 4+8(A2),D0           ; was 4 org
000311FC <AmiBlitz3.ab3@22214>     MOVEA.l A2,A1
000311FE <AmiBlitz3.ab3@22215>     MOVEA.l (A2),A2
00031204 <AmiBlitz3.ab3@22216>     MOVEA.l _execbase,A6
0003120A <AmiBlitz3.ab3@22219>     MOVE.l mempool2,a0
0003120E <AmiBlitz3.ab3@22220>     JSR _FreePooled(A6)
00031212 <AmiBlitz3.ab3@22222>  BRA.w 'loop
00031214 <AmiBlitz3.ab3@22225> RTS
0003121A <AmiBlitz3.ab3@22229>   MOVEA.l constantbase,A2
00031220 <AmiBlitz3.ab3@22230>   CLR.l constantbase
00031224 <AmiBlitz3.ab3@22233>     CMPA.w #$0,A2
00031228 <AmiBlitz3.ab3@22234>      BEQ.w 'done
0003122C <AmiBlitz3.ab3@22235>     MOVE.l $8(A2),D1
00031230 <AmiBlitz3.ab3@22236>      BEQ.w 'noclose
00031236 <AmiBlitz3.ab3@22237>     MOVEA.l _dosbase,A6
0003123A <AmiBlitz3.ab3@22238>      JSR _Close(A6)
0003123E <AmiBlitz3.ab3@22241>     MOVE.l $4(A2),D0
00031242 <AmiBlitz3.ab3@22242>      BEQ.w 'skip
00031244 <AmiBlitz3.ab3@22243>     MOVEA.l D0,A1
0003124A <AmiBlitz3.ab3@22244>     MOVE.l #$400*8,D0          ; was #inclen
00031250 <AmiBlitz3.ab3@22245>     MOVEA.l _execbase,A6
00031256 <AmiBlitz3.ab3@22248>     MOVE.l mempool,a0
0003125A <AmiBlitz3.ab3@22249>     JSR _FreeVec(a6)
0003125C <AmiBlitz3.ab3@22253>     MOVEQ.l #$00,D0
00031260 <AmiBlitz3.ab3@22254>     MOVE.b $12(A2),D0
00031262 <AmiBlitz3.ab3@22255>     MOVEA.l A2,A1
00031264 <AmiBlitz3.ab3@22256>     MOVEA.l (A2),A2
0003126A <AmiBlitz3.ab3@22257>     MOVEA.l _execbase,A6
00031270 <AmiBlitz3.ab3@22260>     MOVE.l mempool2,a0
00031274 <AmiBlitz3.ab3@22261>     JSR _FreePooled(A6)
00031278 <AmiBlitz3.ab3@22263>  BRA.w 'loop
0003127A <AmiBlitz3.ab3@22266> RTS
0003127C <AmiBlitz3.ab3@22273>   SWAP D0
00031280 <AmiBlitz3.ab3@22274>    BSR.w pokedata2
00031282 <AmiBlitz3.ab3@22275>   SWAP D0
00031288 <AmiBlitz3.ab3@22280>   MOVEA.l data2,A4
0003128E <AmiBlitz3.ab3@22281>   CMPA.l allat,A4
00031292 <AmiBlitz3.ab3@22282>    BCC.w 'over
00031294 <AmiBlitz3.ab3@22283>   MOVE.w D0,(A4)+
0003129A <AmiBlitz3.ab3@22284>   MOVE.l A4,data2
0003129C <AmiBlitz3.ab3@22285>  RTS
000312A4 <AmiBlitz3.ab3@22288>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
000312AA <AmiBlitz3.ab3@22289>   ADDQ.l #2,data2
000312AC <AmiBlitz3.ab3@22290> RTS
000312B2 <AmiBlitz3.ab3@22294>   MOVEA.l data2,A4
000312B8 <AmiBlitz3.ab3@22295>   CMPA.l allat,A4
000312BC <AmiBlitz3.ab3@22296>    BCC.w 'over
000312BE <AmiBlitz3.ab3@22297>   MOVE.b D0,(A4)+
000312C4 <AmiBlitz3.ab3@22298>   MOVE.l A4,data2
000312C6 <AmiBlitz3.ab3@22299>  RTS
000312CE <AmiBlitz3.ab3@22302>   MOVE.w #$FFFF,dontwrite_nomemleft        ; was -1
000312D4 <AmiBlitz3.ab3@22303>   ADDQ.l #1,data2
000312D6 <AmiBlitz3.ab3@22304> RTS
000312DA <AmiBlitz3.ab3@22310>   CMP.w #$22,D0          ;'"'
000312DE <AmiBlitz3.ab3@22311>    BNE.w syntaxerr
000312E4 <AmiBlitz3.ab3@22314>   JSR get1bytemain
000312E8 <AmiBlitz3.ab3@22315>   CMP.b #$22,D0
000312EC <AmiBlitz3.ab3@22316>    BEQ.w 'done
000312EE <AmiBlitz3.ab3@22317>   TST.w D0
000312F2 <AmiBlitz3.ab3@22318>    BEQ.w syntaxerr
000312F4 <AmiBlitz3.ab3@22319>   MOVE.b D0,(A0)+
000312F8 <AmiBlitz3.ab3@22320>  BRA.w 'getsp2
000312FA <AmiBlitz3.ab3@22323>   CLR.b (A0)
000312FC <AmiBlitz3.ab3@22324> RTS
000312FE <AmiBlitz3.ab3@22328>   TST.l D3
00031300 <AmiBlitz3.ab3@22329> RTS
00031306 <AmiBlitz3.ab3@22335>   LEA ptr_parameterstore,A0
0003130C <AmiBlitz3.ab3@22336>   LEA namebuff2,A1
0003130E <AmiBlitz3.ab3@22339>     MOVE.b (A0)+,D0
00031312 <AmiBlitz3.ab3@22340>     BEQ.w 'short
00031314 <AmiBlitz3.ab3@22341>   CMP.b (A1)+,D0
00031318 <AmiBlitz3.ab3@22342>   BEQ.w 'loop
0003131A <AmiBlitz3.ab3@22343>  RTS
0003131C <AmiBlitz3.ab3@22346>   TST.b (A1)
00031320 <AmiBlitz3.ab3@22347>   BNE.w 'lt
00031322 <AmiBlitz3.ab3@22348>  RTS
00031326 <AmiBlitz3.ab3@22351>   CMP.w #$1,D0
00031328 <AmiBlitz3.ab3@22352> RTS
0003132C <AmiBlitz3.ab3@22359>   CMP.w #$2E,D0                ;"."                            ;dodeftype
00031330 <AmiBlitz3.ab3@22360>    BNE.w syntaxerr
00031334 <AmiBlitz3.ab3@22361>   BSR.w getparameter2
0003133A <AmiBlitz3.ab3@22362>   LEA newtypebase,A2
0003133E <AmiBlitz3.ab3@22363>   BSR.w findtype
00031342 <AmiBlitz3.ab3@22364>    BNE.w notypeerr
00031348 <AmiBlitz3.ab3@22366>   TST.b declare
0003134C <AmiBlitz3.ab3@22367>    BNE 'l1
00031352 <AmiBlitz3.ab3@22368>   TST.b declare2
00031356 <AmiBlitz3.ab3@22369>    BEQ 'l2
0003135E <AmiBlitz3.ab3@22372>   MOVE.b #2,nowdeclare
00031364 <AmiBlitz3.ab3@22376>   JSR reget
00031368 <AmiBlitz3.ab3@22377>    BNE.w 'more
0003136E <AmiBlitz3.ab3@22378>   MOVE.l A2,defaulttype
00031370 <AmiBlitz3.ab3@22379>  RTS
00031376 <AmiBlitz3.ab3@22385>   MOVE.l defaulttype,-(A7)
0003137C <AmiBlitz3.ab3@22386>   MOVE.l A2,defaulttype
00031380 <AmiBlitz3.ab3@22389>   BSR.w getparameter
00031384 <AmiBlitz3.ab3@22390>    BSR.w fetchvars
00031388 <AmiBlitz3.ab3@22391>   CMP.w #$2C,D0            ;","
0003138C <AmiBlitz3.ab3@22392>    BNE.w 'done
00031392 <AmiBlitz3.ab3@22393>    JSR get1bytemain                                        ; was BSR.w
00031396 <AmiBlitz3.ab3@22394>  BRA.w 'loopz
0003139C <AmiBlitz3.ab3@22397>   MOVE.l (A7)+,defaulttype
0003139E <AmiBlitz3.ab3@22398> RTS
000313A2 <AmiBlitz3.ab3@22402>   LEA $4(A5),A2                                            ;fehler function
000313A4 <AmiBlitz3.ab3@22405>   MOVE.l A2,D0
000313A8 <AmiBlitz3.ab3@22410>   BSR.w getparameter
000313AC <AmiBlitz3.ab3@22411>   BSR.w fetchvars
000313B0 <AmiBlitz3.ab3@22412>   BSR.w calcvar
000313B4 <AmiBlitz3.ab3@22414>   CMP.b #$7,D2
000313B8 <AmiBlitz3.ab3@22415>    BNE.w mismatcherr
000313BC <AmiBlitz3.ab3@22416>   MOVE.w varmode(PC),-(A7)
000313C0 <AmiBlitz3.ab3@22417>   CMP.w #$3D,D0            ;"="
000313C4 <AmiBlitz3.ab3@22418>    BNE.w syntaxerr
000313C8 <AmiBlitz3.ab3@22419>   BTST #$F,D2
000313CC <AmiBlitz3.ab3@22420>    BNE.w 'already
000313D0 <AmiBlitz3.ab3@22421>   MOVE.w maxprep1(PC),D1
000313D4 <AmiBlitz3.ab3@22422>   BSR.w pokewda5s
000313D6 <AmiBlitz3.ab3@22423>   MOVE.w D3,D1
000313DA <AmiBlitz3.ab3@22424>   BSR.w writeword
000313DE <AmiBlitz3.ab3@22427>   MOVE.w maxprep2(PC),D1
000313E2 <AmiBlitz3.ab3@22428>   BSR.w writeword
000313E8 <AmiBlitz3.ab3@22429>   ADDQ.w #1,regnum
000313EA <AmiBlitz3.ab3@22430>   MOVEQ.l #$03,D2
000313EE <AmiBlitz3.ab3@22431>   BSR.w eval
000313F4 <AmiBlitz3.ab3@22432>   MOVE.l #$D000,D1              ; was #maxlen
000313FA <AmiBlitz3.ab3@22434>   MOVE.l d1,lastinstruction
000313FC <AmiBlitz3.ab3@22436>   TST.w (A7)+
00031400 <AmiBlitz3.ab3@22437>    BEQ.w Atokejsr
00031402 <AmiBlitz3.ab3@22438>   ADDQ.w #1,D1
00031406 <AmiBlitz3.ab3@22439> BRA.w Atokejsr
00031408 <AmiBlitz3.ab3@22443>   MOVE.w D0,D1
0003140C <AmiBlitz3.ab3@22444>    BPL.w syntaxerr
00031410 <AmiBlitz3.ab3@22445>   BCLR #$F,D1
00031416 <AmiBlitz3.ab3@22446>    JSR searchinstr
0003141A <AmiBlitz3.ab3@22447>   MOVE.l $12(A2),D0
0003141E <AmiBlitz3.ab3@22448>   TST.w -$2(A2,D0.L)
00031422 <AmiBlitz3.ab3@22449>    BEQ.w freeerr
00031424 <AmiBlitz3.ab3@22450>   MOVEQ.l #$02,D2
00031426 <AmiBlitz3.ab3@22451>   MOVE.l A2,-(A7)
0003142A <AmiBlitz3.ab3@22453>    BSR.w eval
0003142C <AmiBlitz3.ab3@22455>   MOVEA.l (A7)+,A2
00031432 <AmiBlitz3.ab3@22456>   MOVE.l A2,mymaxlib
00031436 <AmiBlitz3.ab3@22458>   ADDA.l $12(A2),A2
0003143C <AmiBlitz3.ab3@22459>   TST.b debugmode
00031440 <AmiBlitz3.ab3@22460>    BEQ.w 'pen
00031446 <AmiBlitz3.ab3@22464>   MOVE.w regnum,D1
00031448 <AmiBlitz3.ab3@22465>   LSL.w #8,D1
0003144A <AmiBlitz3.ab3@22466>   LSL.w #1,D1
0003144E <AmiBlitz3.ab3@22467>   ORI.w #$B07C,D1       ;cmp #x,dn
00031452 <AmiBlitz3.ab3@22468>    BSR.w writeword
00031456 <AmiBlitz3.ab3@22469>   MOVE.w -$4(A2),D1
0003145A <AmiBlitz3.ab3@22470>    BSR.w writeword
00031460 <AmiBlitz3.ab3@22471>   MOVE.l maxchk,D1      ;bcs
00031464 <AmiBlitz3.ab3@22472>    BSR.w writelong
00031466 <AmiBlitz3.ab3@22473>   MOVE.l A2,-(A7)
0003146A <AmiBlitz3.ab3@22474>   MOVE.w #$C30A,D1      ; was #maxerr,
0003146E <AmiBlitz3.ab3@22475>    BSR.w Atokejsr
00031470 <AmiBlitz3.ab3@22476>   MOVEA.l (A7)+,A2
00031474 <AmiBlitz3.ab3@22479>   MOVE.w -$2(A2),D2     ;# shifts
0003147A <AmiBlitz3.ab3@22482>   MOVE.w regnum,D1
00031480 <AmiBlitz3.ab3@22483>   OR.w lslimm,D1
00031484 <AmiBlitz3.ab3@22484>   CMP.w #$8,D2
00031488 <AmiBlitz3.ab3@22485>    BCS.w 'under
0003148C <AmiBlitz3.ab3@22486>    BSR.w writeword
0003148E <AmiBlitz3.ab3@22487>   SUBQ.w #8,D2
00031492 <AmiBlitz3.ab3@22488>    BNE.w 'loop
00031496 <AmiBlitz3.ab3@22489>  BRA.w 'shdone
00031498 <AmiBlitz3.ab3@22492>   MOVE.w D2,D0
0003149A <AmiBlitz3.ab3@22493>   LSL.w #8,D0
0003149C <AmiBlitz3.ab3@22494>   LSL.w #1,D0
0003149E <AmiBlitz3.ab3@22495>   OR.w D0,D1
000314A2 <AmiBlitz3.ab3@22496>   BSR.w writeword
000314A4 <AmiBlitz3.ab3@22499> RTS
000314A8 <AmiBlitz3.ab3@22504>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
000314AA <AmiBlitz3.ab3@22505>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
000314AE <AmiBlitz3.ab3@22509> mymaxlib:  Ds.l 1
000314B2 <AmiBlitz3.ab3@22513>   BSR.w getmaxel
000314B6 <AmiBlitz3.ab3@22515>   LEA free(PC),A0
000314BA <AmiBlitz3.ab3@22516>   LEA freef(PC),A1
000314C0 <AmiBlitz3.ab3@22517>   MOVE.w -$6(A2),$2(A0)
000314C4 <AmiBlitz3.ab3@22518>   BSR.w pokecode
000314C8 <AmiBlitz3.ab3@22520>   MOVE.l -$A(A2),D1
000314CC <AmiBlitz3.ab3@22523>   BEQ.w nosuperr
000314D0 <AmiBlitz3.ab3@22524>   MOVEA.l mymaxlib(PC),A2
000314D4 <AmiBlitz3.ab3@22525> BRA.w Amakelibsub
000314D8 <AmiBlitz3.ab3@22529>   BSR.w getmaxel
000314DE <AmiBlitz3.ab3@22531>   LEA use,A0
000314E4 <AmiBlitz3.ab3@22532>   LEA usef,A1
000314EA <AmiBlitz3.ab3@22533>   MOVE.w -$6(A2),$2(A0)
000314F0 <AmiBlitz3.ab3@22534>   MOVE.w -$6(A2),-$2(A1)
000314F4 <AmiBlitz3.ab3@22535>   ADDQ.w #4,-$2(A1)
000314F8 <AmiBlitz3.ab3@22536>   BSR.w pokecode
000314FC <AmiBlitz3.ab3@22538>   MOVE.l -$E(A2),D1
00031500 <AmiBlitz3.ab3@22540> BRA.w maxjsr
00031506 <AmiBlitz3.ab3@22545>   JSR get1bytemain
0003150C <AmiBlitz3.ab3@22548>   MOVE.l firstiff,D0
00031510 <AmiBlitz3.ab3@22549>    BEQ.w noiferr
00031512 <AmiBlitz3.ab3@22550>   MOVEA.l D0,A0
00031518 <AmiBlitz3.ab3@22551>   CMPI.b #$1,$D(A0)
0003151C <AmiBlitz3.ab3@22552>    BEQ.w illelseerr
00031520 <AmiBlitz3.ab3@22553>   MOVE.w #$6000,D1
00031526 <AmiBlitz3.ab3@22556>     TST.b fast
0003152A <AmiBlitz3.ab3@22557>     BEQ 'l1
00031530 <AmiBlitz3.ab3@22558>     OR.l #$ff,d1
00031534 <AmiBlitz3.ab3@22559>     BSR writeword
00031536 <AmiBlitz3.ab3@22564>   SWAP D1
0003153A <AmiBlitz3.ab3@22565>   BSR.w writelong
0003153C <AmiBlitz3.ab3@22566>   MOVEQ.l #$00,D1
00031540 <AmiBlitz3.ab3@22567>   BSR.w doendif2
00031548 <AmiBlitz3.ab3@22568>   MOVE.l destpointer,$8(A0)
0003154C <AmiBlitz3.ab3@22569> BRA.w do_then
00031552 <AmiBlitz3.ab3@22573>   LEA ptr_parameterstore,A0
00031554 <AmiBlitz3.ab3@22574>   MOVE.l A0,-(A7)
00031558 <AmiBlitz3.ab3@22575>   BSR.w getsp
0003155C <AmiBlitz3.ab3@22576> BRA.w handle_compileerror
00031560 <AmiBlitz3.ab3@22580>   BSR.w evalconst
00031562 <AmiBlitz3.ab3@22581>   MOVEQ.l #$05,D1       ;beq
0003156C <AmiBlitz3.ab3@22584>   MOVE.w oldqflag,instringon
00031572 <AmiBlitz3.ab3@22585>   MOVEA.l lastsourcepos,A5
00031578 <AmiBlitz3.ab3@22587>   LEA numcom,A0
0003157C <AmiBlitz3.ab3@22588> BRA.w compare
00031582 <AmiBlitz3.ab3@22592>   LEA ptr_parameterstore,A0
00031586 <AmiBlitz3.ab3@22593>   BSR.w getsp
0003158C <AmiBlitz3.ab3@22594>   JSR get1bytemain
00031590 <AmiBlitz3.ab3@22595>   BSR.w collif
00031596 <AmiBlitz3.ab3@22596>   LEA namebuff2,A0
0003159A <AmiBlitz3.ab3@22597>   BSR.w getsp
000315A0 <AmiBlitz3.ab3@22598>   LEA strcom,A0
000315A2 <AmiBlitz3.ab3@22606>   LSL.w #2,D1
000315A8 <AmiBlitz3.ab3@22607>   LEA CIF_branches,A1
000315AC <AmiBlitz3.ab3@22608>   MOVE.l $0(A1,D1.W),-(A7)
000315AE <AmiBlitz3.ab3@22609>   MOVEQ.l #-$01,D1           ;comp flag
000315B0 <AmiBlitz3.ab3@22611>   JSR (A0)
000315B2 <AmiBlitz3.ab3@22613>   MOVEA.l (A7)+,A1
000315B4 <AmiBlitz3.ab3@22614> JMP (A1)
000315B8 <AmiBlitz3.ab3@22618>   BEQ.w cifdo
000315BC <AmiBlitz3.ab3@22619> BRA.w cifdont
000315C0 <AmiBlitz3.ab3@22622>   BNE.w cifdo
000315C4 <AmiBlitz3.ab3@22623> BRA.w cifdont
000315C8 <AmiBlitz3.ab3@22626>   BLT.w cifdo
000315CC <AmiBlitz3.ab3@22627> BRA.w cifdont
000315D0 <AmiBlitz3.ab3@22630>   BLE.w cifdo
000315D4 <AmiBlitz3.ab3@22631> BRA.w cifdont
000315D8 <AmiBlitz3.ab3@22634>   BGT.w cifdo
000315DC <AmiBlitz3.ab3@22635> BRA.w cifdont
000315E0 <AmiBlitz3.ab3@22638>   BGE.w cifdo
000315E2 <AmiBlitz3.ab3@22641>   MOVEQ.l #$00,D1
000315E8 <AmiBlitz3.ab3@22644>   MOVEA.l concomsp,A0
000315EE <AmiBlitz3.ab3@22645>   MOVE.w skipcode,(A0)+
000315F4 <AmiBlitz3.ab3@22646>   MOVE.l A0,concomsp
000315FA <AmiBlitz3.ab3@22647>   MOVE.w D1,skipcode
00031600 <AmiBlitz3.ab3@22648>   JSR get1bytemain
00031604 <AmiBlitz3.ab3@22649>    BNE.w syntaxerr
0003160A <AmiBlitz3.ab3@22650> JMP bakup
00031612 <AmiBlitz3.ab3@22654> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00031616 <AmiBlitz3.ab3@22655> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
0003161A <AmiBlitz3.ab3@22662>   MOVE.w #$FC17,D1
00031620 <AmiBlitz3.ab3@22663>   JSR uselib
00031626 <AmiBlitz3.ab3@22665>   JSR reget
0003162A <AmiBlitz3.ab3@22666>    BEQ.w 'resbeg
0003162E <AmiBlitz3.ab3@22667>   BSR.w makealab2                                          ;get label name!
00031632 <AmiBlitz3.ab3@22668>   MOVE.w rescode(PC),D1
00031636 <AmiBlitz3.ab3@22669>   BSR.w writeword
0003163C <AmiBlitz3.ab3@22670>   JSR addoff                                               ;add offset
00031640 <AmiBlitz3.ab3@22671>   MOVE.l $C(A2),D1
00031644 <AmiBlitz3.ab3@22672>   BSR.w writelong
00031648 <AmiBlitz3.ab3@22673>   MOVE.w rescode+6(PC),D1
0003164C <AmiBlitz3.ab3@22674>   BSR.w writeword
00031650 <AmiBlitz3.ab3@22675>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00031654 <AmiBlitz3.ab3@22676>   BEQ.w 'no
00031656 <AmiBlitz3.ab3@22678>   MOVEA.l D1,A1
0003165A <AmiBlitz3.ab3@22679>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
0003165C <AmiBlitz3.ab3@22680>  RTS
0003165E <AmiBlitz3.ab3@22685>  RTS
00031662 <AmiBlitz3.ab3@22688>   MOVE.w #$CD00,D1
00031668 <AmiBlitz3.ab3@22689>   JSR Atokejsr
0003166C <AmiBlitz3.ab3@22690>   MOVE.l rescode2(PC),D1
00031672 <AmiBlitz3.ab3@22691> JMP writelong
00031676 <AmiBlitz3.ab3@22695>   MOVE.w #$FC17,D1
0003167C <AmiBlitz3.ab3@22696>   JSR uselib
00031682 <AmiBlitz3.ab3@22699>   MOVE.l dataget,D1
00031686 <AmiBlitz3.ab3@22700>   BSR.w writelong
0003168A <AmiBlitz3.ab3@22701>   BSR.w getparameter
0003168E <AmiBlitz3.ab3@22702>   BSR.w fetchvars
00031692 <AmiBlitz3.ab3@22703>   BSR.w calcvar
00031696 <AmiBlitz3.ab3@22704>   BTST #$E,D2
0003169A <AmiBlitz3.ab3@22705>    BEQ.w 'notap
0003169E <AmiBlitz3.ab3@22707>   MOVE.b #$6,D2      ;pointer becomes an address!
000316A0 <AmiBlitz3.ab3@22710>   TST.b D2
000316A4 <AmiBlitz3.ab3@22711>    BEQ.w noleterr   ;read in a whole struct....later!
000316AA <AmiBlitz3.ab3@22712>   TST.b debugmode
000316AE <AmiBlitz3.ab3@22713>    BEQ.w 'norerr
000316B2 <AmiBlitz3.ab3@22715>   MOVE.w #$7000,D1
000316B4 <AmiBlitz3.ab3@22716>   MOVE.b D2,D1
000316B8 <AmiBlitz3.ab3@22717>   ANDI.b #$F,D1
000316BC <AmiBlitz3.ab3@22718>   BSR.w writeword
000316C0 <AmiBlitz3.ab3@22719>   MOVE.w #$C310,D1     ; was  #datachk
000316C2 <AmiBlitz3.ab3@22720>   MOVE.w D2,-(A7)
000316C6 <AmiBlitz3.ab3@22721>   BSR.w Atokejsr
000316C8 <AmiBlitz3.ab3@22722>   MOVE.w (A7)+,D2
000316CC <AmiBlitz3.ab3@22725>   CMP.b #$7,D2
000316D0 <AmiBlitz3.ab3@22726>    BEQ.w 'string
000316D4 <AmiBlitz3.ab3@22727>   CMP.b #$1,D2
000316D8 <AmiBlitz3.ab3@22728>    BNE.w 'notbyte
000316DE <AmiBlitz3.ab3@22730>   LEA dataletb2,A0
000316E4 <AmiBlitz3.ab3@22731>   LEA dataletb2f,A1
000316E8 <AmiBlitz3.ab3@22732>   BTST #$F,D2
000316EC <AmiBlitz3.ab3@22733>    BEQ.w 'bimm
000316F0 <AmiBlitz3.ab3@22734>   BSR.w pokecode
000316F4 <AmiBlitz3.ab3@22735>  BRA.w 'next
000316FA <AmiBlitz3.ab3@22738>   LEA dataletb,A0
00031700 <AmiBlitz3.ab3@22739>   LEA dataletbf,A1
00031706 <AmiBlitz3.ab3@22741>   TST.w varmode
0003170A <AmiBlitz3.ab3@22742>    BEQ.w 'byteglobal
00031710 <AmiBlitz3.ab3@22743>   LEA dataletbl,A0
00031716 <AmiBlitz3.ab3@22744>   LEA dataletblf,A1
0003171A <AmiBlitz3.ab3@22747>   MOVE.w D3,$4(A0)
0003171E <AmiBlitz3.ab3@22748>   BSR.w pokecode
00031722 <AmiBlitz3.ab3@22749>  BRA.w 'next
00031728 <AmiBlitz3.ab3@22752>   LEA dataletw,A0
0003172C <AmiBlitz3.ab3@22753>   CMP.b #$3,D2
00031730 <AmiBlitz3.ab3@22754>    BCS.w 'word
00031736 <AmiBlitz3.ab3@22755>   LEA dataletl,A0
0003173A <AmiBlitz3.ab3@22758>   BTST #$F,D2
0003173E <AmiBlitz3.ab3@22759>    BEQ.w 'imm
00031742 <AmiBlitz3.ab3@22760>   MOVE.w $4(A0),D1
00031746 <AmiBlitz3.ab3@22761>    BSR.w writeword
0003174A <AmiBlitz3.ab3@22762>  BRA.w 'next
00031750 <AmiBlitz3.ab3@22765>   TST.w varmode
00031754 <AmiBlitz3.ab3@22766>    BEQ.w 'wlglobal
00031756 <AmiBlitz3.ab3@22767>   ADDQ.w #6,A0
0003175A <AmiBlitz3.ab3@22770>   MOVE.w D3,$2(A0)
0003175C <AmiBlitz3.ab3@22771>   MOVE.l (A0),D1
00031760 <AmiBlitz3.ab3@22772>   BSR.w writelong
00031766 <AmiBlitz3.ab3@22775>   MOVE.l dataput,D1
0003176A <AmiBlitz3.ab3@22776>    BSR.w writelong
0003176E <AmiBlitz3.ab3@22777>   CMP.w #$2C,D0        ;','
00031772 <AmiBlitz3.ab3@22778>    BEQ.w 'more
00031774 <AmiBlitz3.ab3@22779>  RTS
0003177A <AmiBlitz3.ab3@22782>   JSR get1bytemain
0003177E <AmiBlitz3.ab3@22783>  BRA.w 'loop
00031784 <AmiBlitz3.ab3@22786>   MOVE.w stlenget,D1
00031788 <AmiBlitz3.ab3@22787>    BSR.w writeword     ;move.l (a3)+,-(a7)
0003178C <AmiBlitz3.ab3@22788>   BTST #$F,D2
00031790 <AmiBlitz3.ab3@22789>    BNE.w 'ok
00031796 <AmiBlitz3.ab3@22791>   TST.w varmode
0003179A <AmiBlitz3.ab3@22792>    BEQ.w 'sglobal
000317A0 <AmiBlitz3.ab3@22793>   MOVE.w D3,leaampl+2
000317A6 <AmiBlitz3.ab3@22794>   MOVE.l leaampl,D1
000317AA <AmiBlitz3.ab3@22795>  BRA.w 'sskip
000317B0 <AmiBlitz3.ab3@22798>   MOVE.w D3,leaamp+2
000317B6 <AmiBlitz3.ab3@22799>   MOVE.l leaamp,D1
000317BA <AmiBlitz3.ab3@22802>   BSR.w writelong
000317BE <AmiBlitz3.ab3@22805>   MOVE.w #$C701,D1     ;was  #astring
000317C4 <AmiBlitz3.ab3@22806>   MOVE.w varmode,D2
000317C8 <AmiBlitz3.ab3@22807>    BEQ.w 'global
000317CA <AmiBlitz3.ab3@22808>   SUBQ.w #1,D1
000317CE <AmiBlitz3.ab3@22811>   BSR.w Atokejsr
000317D6 <AmiBlitz3.ab3@22812>   MOVE.w #$FFFF,lasta6    ; was -1
000317DC <AmiBlitz3.ab3@22813>   LEA stalign,A0
000317E2 <AmiBlitz3.ab3@22814>   LEA stalignf,A1
000317E6 <AmiBlitz3.ab3@22815>   BSR.w pokecode
000317EA <AmiBlitz3.ab3@22816> BRA.w 'next
000317EE <AmiBlitz3.ab3@22820>   CMP.w #$2E,D0        ;'.'                                    ;definecode 'lb 'lw 'll
000317F2 <AmiBlitz3.ab3@22821>    BNE.w 'word
000317F8 <AmiBlitz3.ab3@22822>   JSR get1bytemain
000317FC <AmiBlitz3.ab3@22823>   CMP.w #$77,D0        ;'w'
00031800 <AmiBlitz3.ab3@22824>    BEQ.w 'word2
00031804 <AmiBlitz3.ab3@22825>   CMP.w #$62,D0        ;'b'
00031808 <AmiBlitz3.ab3@22826>    BEQ.w 'byte
0003180C <AmiBlitz3.ab3@22828>   CMP.w #"s",d0        ;'s'
00031810 <AmiBlitz3.ab3@22829>   BEQ 'single3         
00031814 <AmiBlitz3.ab3@22830>   CMP.w #"d",d0        ;'d'
00031818 <AmiBlitz3.ab3@22831>   BEQ 'double3
0003181C <AmiBlitz3.ab3@22833>   CMP.w #$6C,D0        ;'l'
00031820 <AmiBlitz3.ab3@22834>    BNE.w syntaxerr
00031822 <AmiBlitz3.ab3@22835>   MOVEQ.l #$02,D1
00031824 <AmiBlitz3.ab3@22836>  RTS
0003182C <AmiBlitz3.ab3@22840>   MOVE.b #1,iee
0003182E <AmiBlitz3.ab3@22841>   MOVEQ.l #$3,d1
00031830 <AmiBlitz3.ab3@22842>  RTS
00031838 <AmiBlitz3.ab3@22845>   MOVE.b #1,iee
0003183A <AmiBlitz3.ab3@22846>   MOVEQ.l #$4,d1
0003183C <AmiBlitz3.ab3@22847>  RTS
0003183E <AmiBlitz3.ab3@22851>   MOVEQ.l #$00,D1
00031840 <AmiBlitz3.ab3@22852>  RTS
00031842 <AmiBlitz3.ab3@22855>   MOVEQ.l #$01,D1
00031844 <AmiBlitz3.ab3@22856>  RTS
00031846 <AmiBlitz3.ab3@22859>   MOVEQ.l #$01,D1
0003184C <AmiBlitz3.ab3@22860> JMP bakup
00031850 <AmiBlitz3.ab3@22864>   BSR.w getsize2
00031852 <AmiBlitz3.ab3@22866>   MOVE.w D1,-(A7)
00031856 <AmiBlitz3.ab3@22867>    BSR.w evalconst2
0003185A <AmiBlitz3.ab3@22868>   CMP.w #$2C,D0        ;','
0003185E <AmiBlitz3.ab3@22869>    BNE.w syntaxerr
00031860 <AmiBlitz3.ab3@22870>   MOVE.l D3,-(A7)
00031864 <AmiBlitz3.ab3@22871>    BSR.w evalconst2
00031866 <AmiBlitz3.ab3@22872>   MOVE.l D3,D1        ;to put in memory
00031868 <AmiBlitz3.ab3@22873>   MOVE.l (A7)+,D3     ;number of times
0003186A <AmiBlitz3.ab3@22874>   MOVE.w (A7)+,D2
0003186E <AmiBlitz3.ab3@22875>    BEQ.w 'byte
00031872 <AmiBlitz3.ab3@22881>   CMP.w #$1,D2
00031876 <AmiBlitz3.ab3@22882>    BEQ.w 'word
00031878 <AmiBlitz3.ab3@22885>   SWAP D1
0003187C <AmiBlitz3.ab3@22886>    BSR.w writeword
0003187E <AmiBlitz3.ab3@22887>   SWAP D1
00031882 <AmiBlitz3.ab3@22888>    BSR.w writeword
00031884 <AmiBlitz3.ab3@22889>   SUBQ.l #1,D3
00031888 <AmiBlitz3.ab3@22890>    BNE.w 'long
0003188A <AmiBlitz3.ab3@22891>  RTS
0003188E <AmiBlitz3.ab3@22894>    BSR.w writeword
00031890 <AmiBlitz3.ab3@22895>   SUBQ.l #1,D3
00031894 <AmiBlitz3.ab3@22896>    BNE.w 'word
00031896 <AmiBlitz3.ab3@22897>  RTS
0003189A <AmiBlitz3.ab3@22900>    BSR.w writebyte
0003189C <AmiBlitz3.ab3@22901>   SUBQ.l #1,D3
000318A0 <AmiBlitz3.ab3@22902>    BNE.w 'byte
000318A2 <AmiBlitz3.ab3@22903> RTS
000318A6 <AmiBlitz3.ab3@22907>   BSR.w getsize2                                          ;definestorage
000318A8 <AmiBlitz3.ab3@22908>   MOVE.w D1,-(A7)
000318AC <AmiBlitz3.ab3@22909>   BSR.w evalconst3
000318AE <AmiBlitz3.ab3@22910>   MOVE.w (A7)+,D1
000318B0 <AmiBlitz3.ab3@22911>   LSL.l D1,D3
000318B2 <AmiBlitz3.ab3@22913>   MOVE.l d3,d0
000318B6 <AmiBlitz3.ab3@22914>   BEQ 'll5
000318B8 <AmiBlitz3.ab3@22915>   MOVEQ #0,d1
000318BE <AmiBlitz3.ab3@22918>     JSR writebyte
000318C0 <AmiBlitz3.ab3@22919>     SUBQ.l #1,d3
000318C4 <AmiBlitz3.ab3@22920>   BNE.s 'll10
000318C6 <AmiBlitz3.ab3@22925> RTS
000318C8 <AmiBlitz3.ab3@22929>   MOVE.w D0,-(A7)
000318CE <AmiBlitz3.ab3@22930>   LEA dummyasm,A0
000318D4 <AmiBlitz3.ab3@22931>   MOVEA.l destpointer,A1
000318DE <AmiBlitz3.ab3@22932>   MOVE.w asmlen2,asmlen
000318E4 <AmiBlitz3.ab3@22933>   JSR insasm
000318E6 <AmiBlitz3.ab3@22934>   MOVE.w (A7)+,D0
000318E8 <AmiBlitz3.ab3@22935> RTS
000318EC <AmiBlitz3.ab3@22939>   BSR.w getsize2
000318F6 <AmiBlitz3.ab3@22941>   MOVE.l #ptr_parameterstore,asmbuff
000318F8 <AmiBlitz3.ab3@22942>   TST.w D1
000318FC <AmiBlitz3.ab3@22943>    BEQ.w 'byte
00031900 <AmiBlitz3.ab3@22944>   CMP.w #$1,D1
00031904 <AmiBlitz3.ab3@22945>    BEQ.w 'word
00031908 <AmiBlitz3.ab3@22947>   CMP.w #$2,d1
0003190C <AmiBlitz3.ab3@22948>    BEQ 'long
00031910 <AmiBlitz3.ab3@22949>   CMP.w #$3,d1
00031914 <AmiBlitz3.ab3@22950>    BEQ 'single
00031916 <AmiBlitz3.ab3@22955>    MOVEQ.l #$0d,D3
0003191C <AmiBlitz3.ab3@22963>    JSR asmconst
00031920 <AmiBlitz3.ab3@22964>    BSR.w insasm2
00031924 <AmiBlitz3.ab3@22965>    BSR.w writelong
00031928 <AmiBlitz3.ab3@22967>    BSR   writelong
0003192C <AmiBlitz3.ab3@22969>   CMP.w #$2C,D0    ; ','
00031930 <AmiBlitz3.ab3@22970>    BEQ.w 'lloop
00031932 <AmiBlitz3.ab3@22971>  RTS
00031934 <AmiBlitz3.ab3@22975>   MOVEQ.l #$0B,D3
0003193C <AmiBlitz3.ab3@22979>   MOVE.b #1,_dcb
00031942 <AmiBlitz3.ab3@22982>   JSR asmconst
00031948 <AmiBlitz3.ab3@22983>   CLR.b _dcb
0003194C <AmiBlitz3.ab3@22984>   BSR.w insasm2
00031950 <AmiBlitz3.ab3@22985>   BSR writebyte
00031954 <AmiBlitz3.ab3@22986>   BSR writebyte
00031958 <AmiBlitz3.ab3@22987>   BSR writebyte                                            ;long
0003195C <AmiBlitz3.ab3@22988>   BSR writebyte
00031960 <AmiBlitz3.ab3@22989>   CMP.w #$2C,D0
00031964 <AmiBlitz3.ab3@22990>    BEQ.w 'lloopb
00031966 <AmiBlitz3.ab3@22991>  RTS
00031968 <AmiBlitz3.ab3@22994>   MOVEQ.l #$0c,D3
00031970 <AmiBlitz3.ab3@22998>   MOVE.b #1,_dcb
00031976 <AmiBlitz3.ab3@23001>   JSR asmconst
0003197C <AmiBlitz3.ab3@23002>   CLR.b _dcb
00031980 <AmiBlitz3.ab3@23003>   BSR.w insasm2
00031984 <AmiBlitz3.ab3@23004>   BSR.w writebyte
00031988 <AmiBlitz3.ab3@23005>   BSR.w writebyte
0003198C <AmiBlitz3.ab3@23006>   BSR.w writebyte
00031990 <AmiBlitz3.ab3@23007>   BSR.w writebyte
00031994 <AmiBlitz3.ab3@23008>   CMP.w #$2C,D0
00031998 <AmiBlitz3.ab3@23009>    BEQ.w 'lloopa
0003199A <AmiBlitz3.ab3@23010>  RTS
0003199C <AmiBlitz3.ab3@23016>   MOVEQ.l #$11,D3
000319A2 <AmiBlitz3.ab3@23019>   JSR get1bytemain
000319A6 <AmiBlitz3.ab3@23020>   CMP.w #$22,D0     ;'"'
000319AA <AmiBlitz3.ab3@23021>    BNE.w 'notq
000319AC <AmiBlitz3.ab3@23026>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
000319B0 <AmiBlitz3.ab3@23028>    BEQ.w syntaxerr
000319B4 <AmiBlitz3.ab3@23029>   CMP.w #$22,D0   ;'"'
000319B8 <AmiBlitz3.ab3@23030>    BEQ.w 'qdone
000319BC <AmiBlitz3.ab3@23032>   CMP.b #"\",d0
000319C0 <AmiBlitz3.ab3@23033>    BNE 'n1
000319C4 <AmiBlitz3.ab3@23034>   CMP.b #"\",(a5)
000319C8 <AmiBlitz3.ab3@23035>    BEQ 'do1
000319CA <AmiBlitz3.ab3@23039>   MOVE.w D0,D1
000319CE <AmiBlitz3.ab3@23040>   BSR.w writebyte
000319D2 <AmiBlitz3.ab3@23041>  BRA.w 'qloop
000319DA <AmiBlitz3.ab3@23045>   CMP.l #"__DA",1(a5)
000319DE <AmiBlitz3.ab3@23046>    BNE 'nodate1
000319E6 <AmiBlitz3.ab3@23047>   CMP.l #"TE__",5(a5)
000319EA <AmiBlitz3.ab3@23048>    BEQ 'c1
000319F2 <AmiBlitz3.ab3@23049>   CMP.l #"TE_G",5(a5)
000319F6 <AmiBlitz3.ab3@23050>    BNE 'nodate1
000319FE <AmiBlitz3.ab3@23051>   CMP.l #"ER__",9(a5)
00031A02 <AmiBlitz3.ab3@23052>    BNE 'nodate1
00031A08 <AmiBlitz3.ab3@23053>   JSR compiledatedc_ger
00031A0C <AmiBlitz3.ab3@23054>  BRA 'n1
00031A12 <AmiBlitz3.ab3@23057>   JSR compiledatedc
00031A16 <AmiBlitz3.ab3@23058>  BRA 'n1
00031A1E <AmiBlitz3.ab3@23061>   CMP.l #"__VE",1(a5)
00031A22 <AmiBlitz3.ab3@23062>    BNE 'n1
00031A28 <AmiBlitz3.ab3@23063>   CMP.w #"R_",5(a5)
00031A2C <AmiBlitz3.ab3@23064>    BNE 'n1
00031A32 <AmiBlitz3.ab3@23065>   JSR version_string_dc
00031A36 <AmiBlitz3.ab3@23066>  BRA.w 'qloop
00031A3C <AmiBlitz3.ab3@23070>   CLR.w instringon
00031A42 <AmiBlitz3.ab3@23072>   JSR get1bytemain
00031A46 <AmiBlitz3.ab3@23073>  BRA.w 'bdone
00031A50 <AmiBlitz3.ab3@23078>    MOVE.w oldqflag,instringon
00031A56 <AmiBlitz3.ab3@23079>   MOVEA.l lastsourcepos,A5
00031A5C <AmiBlitz3.ab3@23081>    JSR asmconst
00031A62 <AmiBlitz3.ab3@23082>   SUBQ.l #1,destpointer
00031A66 <AmiBlitz3.ab3@23083>    BSR.w insasm2
00031A6C <AmiBlitz3.ab3@23084>   ADDQ.l #1,destpointer
00031A70 <AmiBlitz3.ab3@23085>    BSR.w writebyte
00031A74 <AmiBlitz3.ab3@23088>   CMP.w #$2C,D0   ;','
00031A78 <AmiBlitz3.ab3@23089>    BEQ.w 'bloop
00031A7A <AmiBlitz3.ab3@23090>  RTS
00031A7C <AmiBlitz3.ab3@23093>   MOVEQ.l #$10,D3
00031A84 <AmiBlitz3.ab3@23102>   MOVE.b #1,_dcb
00031A8A <AmiBlitz3.ab3@23104>   JSR asmconst
00031A90 <AmiBlitz3.ab3@23106>   CLR.b _dcb
00031A94 <AmiBlitz3.ab3@23108>   BSR.w insasm2
00031A98 <AmiBlitz3.ab3@23111>   BSR.w writebyte
00031A9C <AmiBlitz3.ab3@23112>   BSR.w writebyte
00031AA0 <AmiBlitz3.ab3@23114>   CMP.w #$2C,D0      ;','
00031AA4 <AmiBlitz3.ab3@23115>    BEQ.w 'wloop
00031AA6 <AmiBlitz3.ab3@23116> RTS
00031AAC <AmiBlitz3.ab3@23120>   ADDQ.l #3,destpointer
00031AB4 <AmiBlitz3.ab3@23121>   ANDI.w #$FFFC,destpointer+2
00031AB6 <AmiBlitz3.ab3@23122> RTS
00031ABC <AmiBlitz3.ab3@23126>   ADDQ.l #7,destpointer
00031AC4 <AmiBlitz3.ab3@23127>   ANDI.w #$FFF8,destpointer+2
00031AC6 <AmiBlitz3.ab3@23128> RTS
00031ACC <AmiBlitz3.ab3@23132>   ADDQ.l #1,destpointer                                    ;even
00031AD4 <AmiBlitz3.ab3@23133>   BCLR #$0,destpointer+3
00031AD6 <AmiBlitz3.ab3@23134> RTS
00031AD8 <AmiBlitz3.ab3@23137> datasize: Ds.w 1
00031ADE <AmiBlitz3.ab3@23147>   TST.b debugmode
00031AE2 <AmiBlitz3.ab3@23148>   BEQ.w 'skip
00031AE6 <AmiBlitz3.ab3@23149>   MOVE.w #$4420,D0                                         ;'D '
00031AEA <AmiBlitz3.ab3@23150>   MOVE.b datasize+1(PC),D0
00031AEE <AmiBlitz3.ab3@23151>  BRA.w pokedata2
00031AF0 <AmiBlitz3.ab3@23154> RTS
00031AF4 <AmiBlitz3.ab3@23158>   MOVE.w #$FC17,D1           ;#64535
00031AFA <AmiBlitz3.ab3@23159>    JSR uselib
00031B04 <AmiBlitz3.ab3@23162>    MOVE.w oldqflag,instringon
00031B0A <AmiBlitz3.ab3@23163>   MOVEA.l lastsourcepos,A5
00031B10 <AmiBlitz3.ab3@23165>    JSR sizespec2        ;get size of it into d1
00031B16 <AmiBlitz3.ab3@23166>   MOVE.w D1,datasize
00031B1A <AmiBlitz3.ab3@23170>   CMP.w #$7,D1
00031B1E <AmiBlitz3.ab3@23171>    BEQ.w 'string
00031B20 <AmiBlitz3.ab3@23173>   MOVE.w D1,-(A7)
00031B24 <AmiBlitz3.ab3@23176>   BSR.w pdt
00031B26 <AmiBlitz3.ab3@23177>   MOVE.w (A7),D2
00031B2A <AmiBlitz3.ab3@23178>    BSR.w fetchdata
00031B2C <AmiBlitz3.ab3@23179>   CMP.w (A7),D2                                            ;datamode
00031B30 <AmiBlitz3.ab3@23180>    BEQ.w 'dataok
00031B32 <AmiBlitz3.ab3@23182>   MOVE.w D2,D1
00031B34 <AmiBlitz3.ab3@23183>   MOVE.w (A7),D2
00031B38 <AmiBlitz3.ab3@23184>   CMP.w #$2,D2
00031B3C <AmiBlitz3.ab3@23185>    BNE.w 'notw
00031B40 <AmiBlitz3.ab3@23186>   CMP.w #$3,D1
00031B44 <AmiBlitz3.ab3@23187>    BNE.w baddaterr
00031B4A <AmiBlitz3.ab3@23188>   CMP.l #$10000,D3        ; was  #65536
00031B4E <AmiBlitz3.ab3@23189>    BCC.w baddaterr
00031B52 <AmiBlitz3.ab3@23190>  BRA.w 'dataok
00031B56 <AmiBlitz3.ab3@23193>   CMP.w #$1,D2
00031B5A <AmiBlitz3.ab3@23194>    BNE.w 'notb
00031B5E <AmiBlitz3.ab3@23195>   CMP.w #$2,D1
00031B62 <AmiBlitz3.ab3@23196>    BNE.w baddaterr
00031B68 <AmiBlitz3.ab3@23197>   CMP.l #$100,D3
00031B6C <AmiBlitz3.ab3@23198>    BCC.w baddaterr
00031B70 <AmiBlitz3.ab3@23199>  BRA.w 'dataok
00031B74 <AmiBlitz3.ab3@23202>  BRA.w baddaterr
00031B78 <AmiBlitz3.ab3@23205>   CMP.w #$3,D2
00031B7C <AmiBlitz3.ab3@23206>   BCC.w 'notword
00031B80 <AmiBlitz3.ab3@23207>   BSR.w pokedata2
00031B84 <AmiBlitz3.ab3@23208>  BRA.w 'next
00031B8A <AmiBlitz3.ab3@23212>   TST.b iee
00031B8E <AmiBlitz3.ab3@23213>   BEQ 'old
00031B92 <AmiBlitz3.ab3@23214>   CMP.b #5,d2
00031B96 <AmiBlitz3.ab3@23215>   BNE 'old
00031B9A <AmiBlitz3.ab3@23216>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031B9E <AmiBlitz3.ab3@23221>   BSR.w pokedata2l                                          ;write data >3
00031BA4 <AmiBlitz3.ab3@23224>   JSR reget
00031BA8 <AmiBlitz3.ab3@23225>   CMP.w #$2C,D0     ;','
00031BAC <AmiBlitz3.ab3@23226>    BEQ.w 'more
00031BAE <AmiBlitz3.ab3@23227>   ADDQ.w #2,A7
00031BB0 <AmiBlitz3.ab3@23228>  RTS
00031BB4 <AmiBlitz3.ab3@23231>    BSR.w pdt
00031BBA <AmiBlitz3.ab3@23232>   MOVE.l data2,-(A7)
00031BBE <AmiBlitz3.ab3@23233>    BSR.w pokedata2l
00031BC0 <AmiBlitz3.ab3@23234>   MOVEQ.l #$00,D1
00031BC6 <AmiBlitz3.ab3@23236>    JSR get1bytemain
00031BCA <AmiBlitz3.ab3@23237>    BEQ.w 'done
00031BCE <AmiBlitz3.ab3@23238>   CMP.w #$22,D0       ;'"'
00031BD2 <AmiBlitz3.ab3@23239>    BEQ.w 'quoted
00031BD6 <AmiBlitz3.ab3@23240>   CMP.w #$2C,D0       ;','
00031BDA <AmiBlitz3.ab3@23241>    BEQ.w 'done
00031BDE <AmiBlitz3.ab3@23244>    BSR.w pokedata2b
00031BE0 <AmiBlitz3.ab3@23245>   ADDQ.w #1,D1
00031BE6 <AmiBlitz3.ab3@23246>    JSR getchar
00031BE8 <AmiBlitz3.ab3@23247>   TST.w D0
00031BEC <AmiBlitz3.ab3@23248>    BEQ.w 'done
00031BF0 <AmiBlitz3.ab3@23249>   CMP.w #$2C,D0
00031BF4 <AmiBlitz3.ab3@23250>    BEQ.w 'done       ;','
00031BF8 <AmiBlitz3.ab3@23251>  BRA.w 'loop2
00031BFA <AmiBlitz3.ab3@23256>    MOVEQ #0,d0
00031BFC <AmiBlitz3.ab3@23257>    MOVE.b (a5)+,d0
00031C00 <AmiBlitz3.ab3@23259>    BEQ.w notqerr2
00031C04 <AmiBlitz3.ab3@23260>   CMP.w #$22,D0       ;'"'
00031C08 <AmiBlitz3.ab3@23261>    BEQ.w 'done2
00031C0C <AmiBlitz3.ab3@23262>    BSR.w pokedata2b
00031C0E <AmiBlitz3.ab3@23263>   ADDQ.w #1,D1
00031C12 <AmiBlitz3.ab3@23264>  BRA.w 'quoted
00031C18 <AmiBlitz3.ab3@23268>   CLR.w instringon
00031C1E <AmiBlitz3.ab3@23270>   JSR get1bytemain
00031C20 <AmiBlitz3.ab3@23273>   MOVEA.l (A7)+,A0
00031C26 <AmiBlitz3.ab3@23274>   MOVE.w dontwrite_nomemleft,D2
00031C2A <AmiBlitz3.ab3@23275>    BNE.w 'nopoke
00031C2C <AmiBlitz3.ab3@23276>   MOVE.l D1,(A0)
00031C32 <AmiBlitz3.ab3@23279>   ADDQ.l #1,data2
00031C3A <AmiBlitz3.ab3@23280>   BCLR #$0,data2+3
00031C3E <AmiBlitz3.ab3@23281>   CMP.w #$2C,D0      ;','
00031C42 <AmiBlitz3.ab3@23282>    BEQ.w 'string
00031C44 <AmiBlitz3.ab3@23283> RTS
00031C4A <AmiBlitz3.ab3@23287> notqerr2           JMP notqerr
00031C50 <AmiBlitz3.ab3@23288> JUMP_vardeclareerr JMP vardeclareerr
00031C56 <AmiBlitz3.ab3@23296>   MOVE.w proceduremode,D1                                  ;doshared
00031C5A <AmiBlitz3.ab3@23299>   BNE.w 'l1
00031C5C <AmiBlitz3.ab3@23300>   MOVE.w D1,-(A7)
00031C62 <AmiBlitz3.ab3@23301>   CLR.w proceduremode
00031C68 <AmiBlitz3.ab3@23304>   LEA varbase,a2
00031C6C <AmiBlitz3.ab3@23305>   BSR.w getparameter
00031C6E <AmiBlitz3.ab3@23306>   MOVE.w d2,-(a7)
00031C74 <AmiBlitz3.ab3@23307>    JSR findvariable
00031C78 <AmiBlitz3.ab3@23308>    BEQ 'checkdim
00031C7E <AmiBlitz3.ab3@23309>    LEA sharebase,a2
00031C80 <AmiBlitz3.ab3@23310>    MOVEQ #$f+4,d7
00031C84 <AmiBlitz3.ab3@23311>    BSR.w findlab                                         ;find var
00031C88 <AmiBlitz3.ab3@23312>    BEQ.b dupsherr
00031C8C <AmiBlitz3.ab3@23313>    BSR addlabel
00031C90 <AmiBlitz3.ab3@23314>    CMP.b #".",d0
00031C94 <AmiBlitz3.ab3@23315>    BNE JUMP_vardeclareerr
00031C96 <AmiBlitz3.ab3@23316>    MOVE.l a2,a3
00031C9C <AmiBlitz3.ab3@23317>    JSR claptonb       ; jump to a copy of fvaradd 'clapton
00031C9E <AmiBlitz3.ab3@23348>   MOVE.w (a7)+,d2
00031CA2 <AmiBlitz3.ab3@23349>    CMP.b #",",d0
00031CA6 <AmiBlitz3.ab3@23350>    BNE 'ret
00031CAC <AmiBlitz3.ab3@23351>    JSR get1bytemain
00031CB0 <AmiBlitz3.ab3@23352>  BRA 'again2
00031CB6 <AmiBlitz3.ab3@23355>   MOVE.w (A7)+,proceduremode
00031CB8 <AmiBlitz3.ab3@23356>  RTS
00031CBE <AmiBlitz3.ab3@23359>    CMP.w #2,6(a2)
00031CC2 <AmiBlitz3.ab3@23360>    BEQ 'do
00031CC8 <AmiBlitz3.ab3@23361>    CMP.w #$102,6(a2)
00031CCC <AmiBlitz3.ab3@23362>    BEQ 'do
00031CD2 <AmiBlitz3.ab3@23363>  JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031CD8 <AmiBlitz3.ab3@23366>   LEA varbase,a0
00031CDA <AmiBlitz3.ab3@23369>   MOVE.l (A0),D0                                           ;find label
00031CDE <AmiBlitz3.ab3@23370>    BEQ.b 'z1
00031CE0 <AmiBlitz3.ab3@23371>    CMP.l d0,a2
00031CE4 <AmiBlitz3.ab3@23372>    BEQ 'z1
00031CE6 <AmiBlitz3.ab3@23373>    MOVE.l d0,a0
00031CEA <AmiBlitz3.ab3@23374>  BRA 'm1
00031CEC <AmiBlitz3.ab3@23377>   MOVE.l (a2),d1
00031CEE <AmiBlitz3.ab3@23378>     MOVE.l d1,(a0)
00031CF0 <AmiBlitz3.ab3@23379>     CLR.l (a2)
00031CF6 <AmiBlitz3.ab3@23380>     LEA sharebase,a0
00031CF8 <AmiBlitz3.ab3@23381>     MOVE.l (a0),(a2)
00031CFA <AmiBlitz3.ab3@23382>     MOVE.l a2,(a0)
00031D00 <AmiBlitz3.ab3@23383>     JSR get1bytemain
00031D06 <AmiBlitz3.ab3@23384>     JSR get1bytemain
00031D0A <AmiBlitz3.ab3@23385>  BRA 'domore
00031D12 <AmiBlitz3.ab3@23388>   MOVE.b #1,nowdeclare
00031D14 <AmiBlitz3.ab3@23390>   MOVE.w D1,-(A7)
00031D1A <AmiBlitz3.ab3@23391>   CLR.w proceduremode
00031D1E <AmiBlitz3.ab3@23394>    BSR.w getparameter
00031D20 <AmiBlitz3.ab3@23395>   MOVE.w D2,-(A7)
00031D26 <AmiBlitz3.ab3@23397>   LEA firstglob,A2
00031D2A <AmiBlitz3.ab3@23398>    BSR.w findvariable2
00031D2E <AmiBlitz3.ab3@23399>    BNE.b 'notfound
00031D34 <AmiBlitz3.ab3@23402>   MOVE.b flagmask+1,D1
00031D38 <AmiBlitz3.ab3@23403>   MOVE.b $7(A2),D3
00031D3A <AmiBlitz3.ab3@23404>   EOR.b D3,D1
00031D3E <AmiBlitz3.ab3@23405>    BEQ.w dupsherr
00031D42 <AmiBlitz3.ab3@23406>    BSR.w findlab
00031D46 <AmiBlitz3.ab3@23407>    BEQ.b 'try2
00031D4A <AmiBlitz3.ab3@23410>    BSR.w addlabel
00031D4C <AmiBlitz3.ab3@23411>   MOVE.w (A7)+,D2
00031D4E <AmiBlitz3.ab3@23412>   MOVE.l A2,-(A7)   ;new glob
00031D52 <AmiBlitz3.ab3@23413>    BSR.w fetchvars     
00031D54 <AmiBlitz3.ab3@23414>   MOVEA.l (A7)+,A2
00031D56 <AmiBlitz3.ab3@23415>   MOVEQ.l #$04,D1
00031D58 <AmiBlitz3.ab3@23416>   ADDQ.w #4,A2
00031D5A <AmiBlitz3.ab3@23417>   ADDQ.w #4,A3
00031D5C <AmiBlitz3.ab3@23420>     MOVE.w (A3)+,(A2)+
00031D60 <AmiBlitz3.ab3@23421>   DBF D1,'loop
00031D68 <AmiBlitz3.ab3@23423>   BTST #$1,flagmask+1
00031D6C <AmiBlitz3.ab3@23424>    BEQ.w 'done
00031D72 <AmiBlitz3.ab3@23425>    JSR get1bytemain
00031D76 <AmiBlitz3.ab3@23426>   CMP.w #$29,D0         ;')'
00031D7A <AmiBlitz3.ab3@23427>    BNE.w JUMP_syntaxerr
00031D80 <AmiBlitz3.ab3@23428>    JSR get1bytemain
00031D84 <AmiBlitz3.ab3@23431>    CMP.w #$2C,D0         ;','
00031D88 <AmiBlitz3.ab3@23432>    BNE.w 'done2
00031D8E <AmiBlitz3.ab3@23433>    JSR get1bytemain
00031D92 <AmiBlitz3.ab3@23434>  BRA.w 'loop2
00031D98 <AmiBlitz3.ab3@23437>   MOVE.w (A7)+,proceduremode
00031D9A <AmiBlitz3.ab3@23438> RTS
00031D9E <AmiBlitz3.ab3@23445>    BSR.w makeiname
00031DA4 <AmiBlitz3.ab3@23446>    JSR check_incdir                                        ; ergebnis in d2
00031DAA <AmiBlitz3.ab3@23448>    LEA ptr_parameterstore,a1
00031DAC <AmiBlitz3.ab3@23449>    MOVE.l d2,-(a7)
00031DB2 <AmiBlitz3.ab3@23450>    LEA includetemp,a0                                      ; filename in includetemp packen
00031DB4 <AmiBlitz3.ab3@23453>      MOVE.b (a1)+,(a0)+
00031DB8 <AmiBlitz3.ab3@23454>    BNE 'l4
00031DBE <AmiBlitz3.ab3@23456>    LEA ptr_parameterstore,a1
00031DC0 <AmiBlitz3.ab3@23457>    MOVE.l a1,a0
00031DC2 <AmiBlitz3.ab3@23460>     TST.b (a0)+
00031DC6 <AmiBlitz3.ab3@23461>    BNE 'l1
00031DC8 <AmiBlitz3.ab3@23464>      MOVE.b -(a0),d0
00031DCC <AmiBlitz3.ab3@23465>      CMP.b #":",d0
00031DD0 <AmiBlitz3.ab3@23466>       BEQ 'out
00031DD4 <AmiBlitz3.ab3@23467>      CMP.b #"/",d0
00031DD8 <AmiBlitz3.ab3@23468>       BEQ 'out
00031DDA <AmiBlitz3.ab3@23469>      CMP.l a1,a0
00031DDE <AmiBlitz3.ab3@23470>       BEQ 'out2
00031DE2 <AmiBlitz3.ab3@23471>  BRA 'l2
00031DE4 <AmiBlitz3.ab3@23474>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031DE6 <AmiBlitz3.ab3@23477>    MOVEQ.l #-$01,D2
00031DE8 <AmiBlitz3.ab3@23480>      ADDQ.w #1,D2
00031DEA <AmiBlitz3.ab3@23481>      MOVE.b (a0)+,(a1)+
00031DEE <AmiBlitz3.ab3@23482>    BNE 'l3
00031DF0 <AmiBlitz3.ab3@23483>    CLR.b (a1)+
00031DF6 <AmiBlitz3.ab3@23485>    LEA ptr_parameterstore,a1
00031DFA <AmiBlitz3.ab3@23486>    BSR.w findxinc                                         ;find include
00031DFE <AmiBlitz3.ab3@23487>     BEQ.w 'outb
00031E00 <AmiBlitz3.ab3@23489>    MOVE.w D2,-(A7)
00031E04 <AmiBlitz3.ab3@23490>    BSR.w addlabel
00031E06 <AmiBlitz3.ab3@23491>    MOVE.w (A7)+,D2
00031E0C <AmiBlitz3.ab3@23493>    LEA ptr_parameterstore,a1
00031E12 <AmiBlitz3.ab3@23494>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031E14 <AmiBlitz3.ab3@23497>     MOVE.b (a0)+,(a1)+
00031E18 <AmiBlitz3.ab3@23498>    BNE 'l4b
00031E1A <AmiBlitz3.ab3@23500>    MOVE.l (a7)+,d2
00031E20 <AmiBlitz3.ab3@23501>    LEA ptr_parameterstore,a1
00031E24 <AmiBlitz3.ab3@23503>  BRA.w doinc2
00031E2A <AmiBlitz3.ab3@23507>    LEA ptr_parameterstore,a1
00031E30 <AmiBlitz3.ab3@23508>    LEA includetemp,a0
00031E32 <AmiBlitz3.ab3@23511>     MOVE.b (a0)+,(a1)+
00031E36 <AmiBlitz3.ab3@23512>    BNE 'l4b2
00031E38 <AmiBlitz3.ab3@23514>    MOVE.l (a7)+,d2
00031E3E <AmiBlitz3.ab3@23515>    LEA ptr_parameterstore,a1
00031E40 <AmiBlitz3.ab3@23517> RTS
00031E44 <AmiBlitz3.ab3@23521>   BSR.w makeiname                                              ; test and get the parameter (includestring)
00031E4A <AmiBlitz3.ab3@23525>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00031E50 <AmiBlitz3.ab3@23527>   MOVEA.l _dosbase,A6
00031E52 <AmiBlitz3.ab3@23529>   MOVE.l D0,D7                                                 ; store Lockpointer
00031E56 <AmiBlitz3.ab3@23530>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00031E58 <AmiBlitz3.ab3@23531>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031E5E <AmiBlitz3.ab3@23532>   MOVE.l ptr_macrobuffer_begin,D2
00031E62 <AmiBlitz3.ab3@23533>    JSR _Examine(A6)
00031E68 <AmiBlitz3.ab3@23534>   MOVEA.l ptr_macrobuffer_begin,A0
00031E6C <AmiBlitz3.ab3@23535>   MOVE.l $4(A0),D0
00031E70 <AmiBlitz3.ab3@23536>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031E74 <AmiBlitz3.ab3@23537>   MOVE.l $7C(A0),D3      ;length                                       ; store the size of the file to include
00031E76 <AmiBlitz3.ab3@23538>   MOVE.l D7,D1                                                 ; begin unlock the file
00031E7A <AmiBlitz3.ab3@23539>    JSR _UnLock(A6)
00031E80 <AmiBlitz3.ab3@23541>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031E86 <AmiBlitz3.ab3@23542>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031E8A <AmiBlitz3.ab3@23543>    JSR _Open(A6)
00031E8C <AmiBlitz3.ab3@23544>   MOVE.l D0,D7
00031E90 <AmiBlitz3.ab3@23545>    BEQ.w error_cant_open_include
00031E96 <AmiBlitz3.ab3@23546>   MOVE.l destpointer,D0
00031E98 <AmiBlitz3.ab3@23547>   ADD.l D3,D0
00031E9E <AmiBlitz3.ab3@23548>   CMP.l destbufferend,D0
00031EA2 <AmiBlitz3.ab3@23549>    BHI.w 'over
00031EA8 <AmiBlitz3.ab3@23550>   MOVE.l destpointer,D2
00031EAA <AmiBlitz3.ab3@23551>   MOVE.l D7,D1
00031EAE <AmiBlitz3.ab3@23552>    JSR _Read(A6)
00031EB4 <AmiBlitz3.ab3@23553>   CMP.l #$FFFFFFFF,D0              ; was -1
00031EB8 <AmiBlitz3.ab3@23554>    BEQ.w error_reading_file
00031EBE <AmiBlitz3.ab3@23555>   ADD.l D0,destpointer
00031EC2 <AmiBlitz3.ab3@23556>  BRA.w 'close
00031ECA <AmiBlitz3.ab3@23559>   MOVE.w #$FFFF,dontwrite_nomemleft          ; was -1
00031ED0 <AmiBlitz3.ab3@23560>   MOVE.l D0,destpointer
00031ED2 <AmiBlitz3.ab3@23563>   MOVE.l D7,D1
00031ED6 <AmiBlitz3.ab3@23564> JMP _Close(A6)
00031EDC <AmiBlitz3.ab3@23567> JUMP_illdirerr JMP illdirerr
00031EE2 <AmiBlitz3.ab3@23573>   TST.w dirmode                                            ;include  open
00031EE6 <AmiBlitz3.ab3@23574>    BNE.w JUMP_illdirerr
00031EEA <AmiBlitz3.ab3@23576>   BSR.w makeiname
00031EF0 <AmiBlitz3.ab3@23578>   JSR check_incdir
00031EF4 <AmiBlitz3.ab3@23582>   BSR.w findconstant
00031EF8 <AmiBlitz3.ab3@23583>    BEQ.w alincerr
00031EFE <AmiBlitz3.ab3@23585>   LEA constantbase,A2
00031F02 <AmiBlitz3.ab3@23586>   BSR.w addhere2
00031F06 <AmiBlitz3.ab3@23588>   CLR.w $C(A2)
00031F0A <AmiBlitz3.ab3@23589>   CLR.l $4(A2)
00031F10 <AmiBlitz3.ab3@23591>   MOVE.l #ptr_parameterstore,D1
00031F12 <AmiBlitz3.ab3@23592>   MOVE.l d1,a0
00031F18 <AmiBlitz3.ab3@23593>   LEA includetemp2,a1
00031F1A <AmiBlitz3.ab3@23596>     MOVE.b (a0)+,(a1)+
00031F1E <AmiBlitz3.ab3@23597>   BNE 'l1
00031F24 <AmiBlitz3.ab3@23598>   JSR save_includename
00031F2E <AmiBlitz3.ab3@23599>   MOVE.l #0,include_process
00031F36 <AmiBlitz3.ab3@23601>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031F3A <AmiBlitz3.ab3@23602>   BEQ 'ok
00031F42 <AmiBlitz3.ab3@23603>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031F46 <AmiBlitz3.ab3@23604>   BEQ 'ok_tokenize
00031F4E <AmiBlitz3.ab3@23605>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031F52 <AmiBlitz3.ab3@23606>   BEQ 'ok_tokenize
00031F5A <AmiBlitz3.ab3@23607>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031F5E <AmiBlitz3.ab3@23608>   BEQ 'ok
00031F64 <AmiBlitz3.ab3@23609>  JMP errortoken                                             ;can only include
00031F6E <AmiBlitz3.ab3@23612>    MOVE.l #-1,include_process                              ; must tokenize the include
00031F74 <AmiBlitz3.ab3@23615>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00031F7A <AmiBlitz3.ab3@23616>   MOVEA.l _dosbase,A6
00031F7E <AmiBlitz3.ab3@23617>   JSR _Open(A6)
00031F82 <AmiBlitz3.ab3@23618>   MOVE.l D0,$8(A2)
00031F86 <AmiBlitz3.ab3@23619>   BEQ.w error_cant_open_include
00031F8C <AmiBlitz3.ab3@23620>   CLR.l includeline
00031F90 <AmiBlitz3.ab3@23621>   MOVE.l 8(a2),d1
00031F92 <AmiBlitz3.ab3@23622>   MOVE.l d3,-(a7)
00031F94 <AmiBlitz3.ab3@23623>   MOVEQ #0,d2
00031F96 <AmiBlitz3.ab3@23624>   MOVEQ #1,d3
00031F9A <AmiBlitz3.ab3@23625>   JSR _Seek(a6)                                            ; -66
00031F9E <AmiBlitz3.ab3@23626>   MOVE.l 8(a2),d1
00031FA0 <AmiBlitz3.ab3@23627>   MOVEQ #0,d2
00031FA2 <AmiBlitz3.ab3@23628>   MOVEQ #-1,d3
00031FA6 <AmiBlitz3.ab3@23629>   JSR _Seek(a6)                                            ; -66
00031FA8 <AmiBlitz3.ab3@23630>   MOVE.l (a7)+,d3
00031FAA <AmiBlitz3.ab3@23631>   ADDQ.l #4,d0
00031FB0 <AmiBlitz3.ab3@23635>   MOVE.l #$10000,D1
00031FB6 <AmiBlitz3.ab3@23637>   MOVEA.l _execbase,A6
00031FBA <AmiBlitz3.ab3@23641>   JSR _AllocVec(a6)
00031FBE <AmiBlitz3.ab3@23645>   MOVE.l D0,$4(A2)
00031FC2 <AmiBlitz3.ab3@23646>   MOVE.l D0,$E(A2)
00031FC4 <AmiBlitz3.ab3@23647>   MOVEA.l D0,A5
00031FCA <AmiBlitz3.ab3@23655>   ADDQ.w #1,ininclude                                      ;enter include
00031FD0 <AmiBlitz3.ab3@23659>   LEA _include,a0
00031FD4 <AmiBlitz3.ab3@23660>   MOVEM.l a0-a6/d0-d7,-(a7)
00031FDA <AmiBlitz3.ab3@23661>   LEA ptr_parameterstore,a1
00031FDC <AmiBlitz3.ab3@23664>     MOVE.b (a0)+,(a1)+
00031FE0 <AmiBlitz3.ab3@23665>   BNE 'l1b
00031FE2 <AmiBlitz3.ab3@23667>   MOVEQ #9,d2
00031FE8 <AmiBlitz3.ab3@23668>   JSR findlabel2
00031FEC <AmiBlitz3.ab3@23669>   BNE 'd
00031FF4 <AmiBlitz3.ab3@23670>   MOVE.l #1,8(a2)
00031FF8 <AmiBlitz3.ab3@23671>   MOVEM.l (a7)+,a0-a6/d0-d7
00031FFC <AmiBlitz3.ab3@23672>  BRA 'd2
00032002 <AmiBlitz3.ab3@23675>   JSR addlabelhash
0003200A <AmiBlitz3.ab3@23676>   MOVE.l #$1,$4(A2)
00032012 <AmiBlitz3.ab3@23677>   MOVE.l #1,8(a2)
00032016 <AmiBlitz3.ab3@23678>   MOVEM.l (a7)+,a0-a6/d0-d7
0003201C <AmiBlitz3.ab3@23681>   LEA inctab,a0
0003201E <AmiBlitz3.ab3@23682>   MOVEQ #0,d1
00032024 <AmiBlitz3.ab3@23683>   MOVE.w ininclude,d1
00032028 <AmiBlitz3.ab3@23684>   CLR.l $0(a0,d1*4)
0003202E <AmiBlitz3.ab3@23686>   MOVEA.l passstack,A7
00032034 <AmiBlitz3.ab3@23687> JMP passnxt
0003203A <AmiBlitz3.ab3@23690> JUMP_dupmacerr  JMP dupmacerr
00032040 <AmiBlitz3.ab3@23691> JUMP_macenderr  JMP macenderr
00032046 <AmiBlitz3.ab3@23692> JUMP_macnesterr JMP macnesterr
00032048 <AmiBlitz3.ab3@23695> coolnest:   Ds.w 1
0003204C <AmiBlitz3.ab3@23696> macline:    Ds.l 1
00032056 <AmiBlitz3.ab3@23702>   MOVE.l linenumat,macline
0003205A <AmiBlitz3.ab3@23704>    BSR.w makename2
0003205E <AmiBlitz3.ab3@23705>    BEQ.w JUMP_syntaxerr
00032064 <AmiBlitz3.ab3@23707>    CLR.b thenmode
0003206E <AmiBlitz3.ab3@23711>    MOVE.w oldqflag,instringon
00032074 <AmiBlitz3.ab3@23712>   MOVEA.l lastsourcepos,A5
00032078 <AmiBlitz3.ab3@23714>    BSR.w findmac
0003207C <AmiBlitz3.ab3@23715>    BEQ.w JUMP_dupmacerr
00032080 <AmiBlitz3.ab3@23716>    BSR.w addlabel
00032084 <AmiBlitz3.ab3@23717>   CLR.w $A(A2)
0003208A <AmiBlitz3.ab3@23718>   MOVEA.l ptr_macrobuffer_begin,A0
0003208C <AmiBlitz3.ab3@23719>   MOVEQ.l #$00,D2     ;flag for nothing got yet!
00032092 <AmiBlitz3.ab3@23720>   CLR.w coolnest
00032094 <AmiBlitz3.ab3@23724>   MOVE.b (a5),d0
00032098 <AmiBlitz3.ab3@23725>      BEQ 'l3
0003209C <AmiBlitz3.ab3@23726>      CMP.b #" ",d0
000320A0 <AmiBlitz3.ab3@23727>       BNE 'l2                                              ;space macro
000320A2 <AmiBlitz3.ab3@23728>       ADDQ.l #1,a5
000320A6 <AmiBlitz3.ab3@23729>  BRA 'l1
000320AA <AmiBlitz3.ab3@23732>    CMP.b #";",d0
000320AE <AmiBlitz3.ab3@23733>       BNE 'l3
000320B0 <AmiBlitz3.ab3@23736>    MOVE.b (a5),d0
000320B4 <AmiBlitz3.ab3@23737>       BEQ 'l5
000320B8 <AmiBlitz3.ab3@23738>       BSR.w macputb                                      ;add comment
000320BA <AmiBlitz3.ab3@23739>       ADDQ.l #1,a5
000320BE <AmiBlitz3.ab3@23740>  BRA 'l4
000320C2 <AmiBlitz3.ab3@23743>    MOVE.b #":",d0
000320C6 <AmiBlitz3.ab3@23744>       BSR.w macputb
000320CA <AmiBlitz3.ab3@23745>       MOVE.b #"@",d0
000320CE <AmiBlitz3.ab3@23746>       BSR.w macputb
000320D6 <AmiBlitz3.ab3@23749>    MOVE.b #0,temp
000320DE <AmiBlitz3.ab3@23750>       MOVE.b #0,thenmode
000320E4 <AmiBlitz3.ab3@23753>   JSR getcharb   ;get next character
000320E6 <AmiBlitz3.ab3@23755>   TST.w D0
000320EA <AmiBlitz3.ab3@23756>    BNE.w 'skip
000320EE <AmiBlitz3.ab3@23757>   MOVEM.l D2/A0/A2,-(A7)
000320F4 <AmiBlitz3.ab3@23759>   CMP.w #"@@",-3(a5)
000320F8 <AmiBlitz3.ab3@23760>   BNE 'l2a
000320FE <AmiBlitz3.ab3@23761>   JSR nextline
00032102 <AmiBlitz3.ab3@23762>   BEQ.w JUMP_macenderr
00032106 <AmiBlitz3.ab3@23763>   MOVEM.l (A7)+,D2/A0/A2
0003210A <AmiBlitz3.ab3@23764>  BRA.w 'gather
00032110 <AmiBlitz3.ab3@23768>    JSR nextline
00032114 <AmiBlitz3.ab3@23769>    BEQ.w JUMP_macenderr
00032118 <AmiBlitz3.ab3@23770>   MOVEM.l (A7)+,D2/A0/A2
0003211A <AmiBlitz3.ab3@23771>   TST.w D2
0003211E <AmiBlitz3.ab3@23772>    BEQ.w 'gather
00032120 <AmiBlitz3.ab3@23776>   MOVE.b (a5),d0
00032124 <AmiBlitz3.ab3@23777>       CMP.b #" ",d0
00032128 <AmiBlitz3.ab3@23778>       BNE 'l1a
0003212A <AmiBlitz3.ab3@23779>       ADDQ.w #1,a5
0003212E <AmiBlitz3.ab3@23780>  BRA 'l2b
00032134 <AmiBlitz3.ab3@23783>   TST.b thenmode
00032138 <AmiBlitz3.ab3@23784>      BEQ 'l3a
0003213A <AmiBlitz3.ab3@23785>      MOVEQ #":",d0
0003213E <AmiBlitz3.ab3@23786>      BSR.w macputb
00032142 <AmiBlitz3.ab3@23787>      MOVE.w #-$7FFE,D0                                     ;write end if
00032146 <AmiBlitz3.ab3@23788>      BSR macputw
0003214A <AmiBlitz3.ab3@23789>      MOVE.w #$800b,d0
0003214E <AmiBlitz3.ab3@23790>      BSR.w macputw
00032154 <AmiBlitz3.ab3@23791>      CLR.b thenmode
00032156 <AmiBlitz3.ab3@23795>    MOVEQ.l #$3A,D0
0003215E <AmiBlitz3.ab3@23797>      MOVE.b #1,temp
00032162 <AmiBlitz3.ab3@23800>  BRA.w 'notend2
00032166 <AmiBlitz3.ab3@23803>   BPL.w 'notend2
0003216A <AmiBlitz3.ab3@23804>   CMP.w #-$7FF3,D0         ; was #$800d                                ;macro ?
0003216E <AmiBlitz3.ab3@23805>    BNE.w 'notamac
00032174 <AmiBlitz3.ab3@23806>   ADDQ.w #1,coolnest
00032178 <AmiBlitz3.ab3@23807>  BRA.w 'notend
0003217C <AmiBlitz3.ab3@23811>   CMP.w #$80d7,d0                                          ;object ?
00032180 <AmiBlitz3.ab3@23812>     BNE 'l1x
00032186 <AmiBlitz3.ab3@23813>     TST.b objectcount
0003218A <AmiBlitz3.ab3@23814>     BNE JUMP_macnesterr
0003218E <AmiBlitz3.ab3@23817>   CMP.w #$8021,d0
00032192 <AmiBlitz3.ab3@23818>     BNE 'nothen
0003219A <AmiBlitz3.ab3@23819>     MOVE.b #1,thenmode
000321A0 <AmiBlitz3.ab3@23822>   TST.b thenmode
000321A4 <AmiBlitz3.ab3@23823>         BEQ 'l1c
000321A8 <AmiBlitz3.ab3@23824>    CMP.w #$8002,d0                                         ;end if
000321AC <AmiBlitz3.ab3@23825>    BNE 'l1c
000321B0 <AmiBlitz3.ab3@23826>    MOVEM.l d0/a5,-(a7)
000321B6 <AmiBlitz3.ab3@23827>    JSR get1bytemain
000321B8 <AmiBlitz3.ab3@23828>    MOVE.w d0,d1
000321BC <AmiBlitz3.ab3@23829>    MOVEM.l (a7)+,a5/d0
000321C0 <AmiBlitz3.ab3@23830>    CMP.w #$800b,d1
000321C4 <AmiBlitz3.ab3@23831>    BNE 'l1c
000321CA <AmiBlitz3.ab3@23832>    CLR.b thenmode
000321CE <AmiBlitz3.ab3@23836>    CMP.w #-$7FFE,D0   ; was #$8002                                     ;end ?
000321D2 <AmiBlitz3.ab3@23837>    BNE.w 'notend
000321D4 <AmiBlitz3.ab3@23839>    MOVE.l a5,-(a7)
000321DA <AmiBlitz3.ab3@23840>    JSR get1bytemain
000321DC <AmiBlitz3.ab3@23841>    MOVE.l (a7)+,a5
000321DE <AmiBlitz3.ab3@23842>    TST.w d0
000321E2 <AmiBlitz3.ab3@23843>    BEQ 'doend
000321E6 <AmiBlitz3.ab3@23844>    CMP.w #":",d0
000321EA <AmiBlitz3.ab3@23845>    BEQ 'doend
000321EE <AmiBlitz3.ab3@23846>    CMP.w #";",d0
000321F2 <AmiBlitz3.ab3@23847>    BEQ 'doend
000321F4 <AmiBlitz3.ab3@23848>    MOVE.l a5,-(a7)
000321FA <AmiBlitz3.ab3@23849>    JSR get1bytemain
000321FE <AmiBlitz3.ab3@23850>    MOVE.l -1(a5),d0
00032200 <AmiBlitz3.ab3@23851>    MOVE.l (a7)+,a5
00032206 <AmiBlitz3.ab3@23852>    CMP.l #"noa7",d0
0003220A <AmiBlitz3.ab3@23853>    BEQ 'doend
0003220E <AmiBlitz3.ab3@23854>  BRA 'morechar
00032212 <AmiBlitz3.ab3@23857>   MOVE.w #$8002,D0
00032216 <AmiBlitz3.ab3@23858>    BSR.w macputw
0003221A <AmiBlitz3.ab3@23859>  BRA 'gather
00032220 <AmiBlitz3.ab3@23863>   JSR get1bytemain
00032224 <AmiBlitz3.ab3@23864>    CMP.w #-$7FF3,D0        ;was #$800d,                                ;end macro
00032228 <AmiBlitz3.ab3@23866>    BEQ.w 'lo1
0003222C <AmiBlitz3.ab3@23867>   CMP.w #$80d7,d0                                          ;end object
00032230 <AmiBlitz3.ab3@23869>   BNE 'notem
00032236 <AmiBlitz3.ab3@23871>   SUBQ.b #1,objectcount
0003223C <AmiBlitz3.ab3@23872>   TST.b developobject
00032240 <AmiBlitz3.ab3@23873>   BEQ 'lo1
00032244 <AmiBlitz3.ab3@23874>   BSR skiprest
00032246 <AmiBlitz3.ab3@23875>  RTS
0003224C <AmiBlitz3.ab3@23879>   SUBQ.w #1,coolnest
00032250 <AmiBlitz3.ab3@23880>    BMI.w 'macdone
00032252 <AmiBlitz3.ab3@23883>   MOVE.w D0,-(A7)
00032256 <AmiBlitz3.ab3@23884>   MOVE.w #$8002,D0
0003225A <AmiBlitz3.ab3@23885>    BSR.w macputw
0003225C <AmiBlitz3.ab3@23886>   MOVE.w (A7)+,D0
00032260 <AmiBlitz3.ab3@23887>  BRA.w 'notend
00032264 <AmiBlitz3.ab3@23890>   BSR.w macputw
00032268 <AmiBlitz3.ab3@23891>  BRA.w 'gather
0003226E <AmiBlitz3.ab3@23895>     CMP.w #"@@",-1(a5)                                     ;merge lines
00032272 <AmiBlitz3.ab3@23896>     BNE 'no
00032276 <AmiBlitz3.ab3@23897>      MOVEM.l D2/A0/A2,-(A7)
0003227C <AmiBlitz3.ab3@23898>    JSR nextline
00032280 <AmiBlitz3.ab3@23899>    BEQ.w JUMP_macenderr
00032284 <AmiBlitz3.ab3@23900>   MOVEM.l (A7)+,D2/A0/A2
00032286 <AmiBlitz3.ab3@23901>     TST.w D2
0003228A <AmiBlitz3.ab3@23902>    BEQ.w 'gather
0003228E <AmiBlitz3.ab3@23903>  BRA 'gather
00032292 <AmiBlitz3.ab3@23907>   BSR.w macputb
00032296 <AmiBlitz3.ab3@23908>  BRA.w 'gather
00032298 <AmiBlitz3.ab3@23911>   ADDQ.w #4,A7
0003229A <AmiBlitz3.ab3@23912>   MOVE.l A0,D0
000322A0 <AmiBlitz3.ab3@23913>   SUB.l ptr_macrobuffer_begin,D0
000322A4 <AmiBlitz3.ab3@23919>    BEQ.w 'cdone
000322A8 <AmiBlitz3.ab3@23920>   CMPI.b #":",-(A0)
000322AC <AmiBlitz3.ab3@23921>    BNE.w 'cdone
000322B0 <AmiBlitz3.ab3@23922>   CMP.w #$1,D0
000322B4 <AmiBlitz3.ab3@23923>    BEQ.w 'cdo
000322B8 <AmiBlitz3.ab3@23924>   TST.b -$1(A0)
000322BC <AmiBlitz3.ab3@23925>    BMI.w 'cdone
000322BE <AmiBlitz3.ab3@23928>   SUBQ.w #1,D0
000322C2 <AmiBlitz3.ab3@23929>  BRA.w 'mclean
000322C6 <AmiBlitz3.ab3@23932>   MOVE.w D0,$8(A2)
000322CA <AmiBlitz3.ab3@23933>    BEQ.w 'skip2
000322CC <AmiBlitz3.ab3@23934>   MOVEQ.l #$01,D1
000322D2 <AmiBlitz3.ab3@23935>   MOVEA.l _execbase,A6
000322D8 <AmiBlitz3.ab3@23937>   MOVE.l mempool,a0
000322DC <AmiBlitz3.ab3@23938>   JSR _AllocPooled(a6)
000322DE <AmiBlitz3.ab3@23941>   MOVEA.l D0,A0
000322E2 <AmiBlitz3.ab3@23942>   MOVE.l A0,$4(A2)
000322E6 <AmiBlitz3.ab3@23943>   MOVE.w $8(A2),D1
000322EA <AmiBlitz3.ab3@23944>    BEQ.w 'skip2
000322EC <AmiBlitz3.ab3@23945>   SUBQ.w #1,D1
000322F2 <AmiBlitz3.ab3@23946>   MOVEA.l ptr_macrobuffer_begin,A1
000322F4 <AmiBlitz3.ab3@23949>     MOVE.b (A1)+,(A0)+
000322F8 <AmiBlitz3.ab3@23950>   DBF D1,'lll
000322FE <AmiBlitz3.ab3@23953> JMP get1bytemain
00032300 <AmiBlitz3.ab3@23957>   MOVE.w D0,D1
00032302 <AmiBlitz3.ab3@23958>   LSR.w #8,D1
00032304 <AmiBlitz3.ab3@23959>   MOVE.b D1,(A0)+
00032306 <AmiBlitz3.ab3@23962>   MOVEQ.l #-$01,D2
00032308 <AmiBlitz3.ab3@23963>   MOVE.b D0,(A0)+
0003230E <AmiBlitz3.ab3@23964>   CMPA.l ptr_macrobuffer_end,A0
00032312 <AmiBlitz3.ab3@23965>    BCC.w macbigerr2
00032314 <AmiBlitz3.ab3@23966> RTS
0003231A <AmiBlitz3.ab3@23969> macbigerr2 JMP macbigerr
0003231C <AmiBlitz3.ab3@23973>   MOVE.l d0,-(a7)
0003231E <AmiBlitz3.ab3@23974>   MOVEQ #0,d0
00032324 <AmiBlitz3.ab3@23975>   CLR.b skiptoggle
00032326 <AmiBlitz3.ab3@23978>     MOVE.b (a5),d0
0003232A <AmiBlitz3.ab3@23979>     BEQ 'l3
0003232E <AmiBlitz3.ab3@23980>     CMP.b #";",d0
00032332 <AmiBlitz3.ab3@23981>     BNE 'l2
0003233A <AmiBlitz3.ab3@23982>     MOVE.b #1,skiptoggle
00032340 <AmiBlitz3.ab3@23985>     TST.b skiptoggle
00032344 <AmiBlitz3.ab3@23986>     BNE 'l4
00032348 <AmiBlitz3.ab3@23987>     CMP.b #":",d0
0003234C <AmiBlitz3.ab3@23988>     BEQ 'l3
0003234E <AmiBlitz3.ab3@23991>     ADDQ #1,a5
00032352 <AmiBlitz3.ab3@23992>  BRA 'loop
00032358 <AmiBlitz3.ab3@23995>   MOVE.w d0,lastchar
0003235A <AmiBlitz3.ab3@23996>   MOVE.l (a7)+,d0
0003235C <AmiBlitz3.ab3@23997> RTS
00032360 <AmiBlitz3.ab3@24004>   BSR.w ifchar
00032364 <AmiBlitz3.ab3@24005>    BNE.w JUMP_syntaxerr
00032366 <AmiBlitz3.ab3@24006>   MOVE.w D0,D1
0003236C <AmiBlitz3.ab3@24007>   JSR get1bytemain
00032370 <AmiBlitz3.ab3@24008>   BSR.w ifchar
00032374 <AmiBlitz3.ab3@24009>    BNE.w 'skip
00032376 <AmiBlitz3.ab3@24010>   ADDQ.w #1,D0
00032378 <AmiBlitz3.ab3@24011>   MOVE.w D0,D2
0003237A <AmiBlitz3.ab3@24012>   ADD.w D0,D0
0003237C <AmiBlitz3.ab3@24013>   ADD.w D2,D0
0003237E <AmiBlitz3.ab3@24014>   ADD.w D0,D1
00032380 <AmiBlitz3.ab3@24015>   MOVE.w D1,D0
00032384 <AmiBlitz3.ab3@24016>   ANDI.w #$3,D0
00032388 <AmiBlitz3.ab3@24017>   CMP.w #$3,D0
0003238C <AmiBlitz3.ab3@24018>    BEQ.w JUMP_syntaxerr
00032392 <AmiBlitz3.ab3@24020>   JSR get1bytemain
00032394 <AmiBlitz3.ab3@24023> RTS
00032396 <AmiBlitz3.ab3@24026> thetst1:  TST.b D0
00032398 <AmiBlitz3.ab3@24027> thetst2:  TST.w D0
0003239A <AmiBlitz3.ab3@24028> thetst3:  TST.l D0
0003239C <AmiBlitz3.ab3@24029> thetst4:  TST.l (A7)+                                      ;Any Length?
000323A0 <AmiBlitz3.ab3@24030> thetst5:  JSR _Reschedule(A6)
000323A4 <AmiBlitz3.ab3@24032> posbr:    BEQ.w posbr
000323A8 <AmiBlitz3.ab3@24033> negbr:    BNE.w negbr
000323AA <AmiBlitz3.ab3@24037>   MOVEQ.l #-$01,D2
000323AE <AmiBlitz3.ab3@24038> BRA.w doifm
000323B4 <AmiBlitz3.ab3@24042>   CLR.l fp0addr
000323B6 <AmiBlitz3.ab3@24043>   MOVEQ.l #$01,D1                                          ;while flag
000323B8 <AmiBlitz3.ab3@24044>   MOVEQ.l #$00,D2                                          ;negate flag
000323BC <AmiBlitz3.ab3@24045> BRA.w doif2
000323C2 <AmiBlitz3.ab3@24049>   LEA firstrep,A2
000323C4 <AmiBlitz3.ab3@24050>   MOVEQ.l #$08,D2
000323C8 <AmiBlitz3.ab3@24051> BRA.w freeslist
000323CC <AmiBlitz3.ab3@24055>   LEA firstsel(PC),A2
000323CE <AmiBlitz3.ab3@24056>   MOVEQ.l #$0E,D2
000323D0 <AmiBlitz3.ab3@24061>   MOVEQ.l #$00,D3
000323D2 <AmiBlitz3.ab3@24069>   MOVE.l (A2),D0
000323D4 <AmiBlitz3.ab3@24070>   CLR.l (A2)
000323D6 <AmiBlitz3.ab3@24071>   MOVEA.l D0,A2
000323DC <AmiBlitz3.ab3@24072>   MOVEA.l _execbase,A6
000323E0 <AmiBlitz3.ab3@24075>     CMPA.w #$0,A2
000323E4 <AmiBlitz3.ab3@24076>      BEQ.w 'done
000323E6 <AmiBlitz3.ab3@24077>     TST.w D3
000323EA <AmiBlitz3.ab3@24078>      BEQ.w 'skip
000323EE <AmiBlitz3.ab3@24079>     MOVEM.l D2-D3/A2,-(A7)
000323F0 <AmiBlitz3.ab3@24080>     ADDA.w D3,A2
000323F2 <AmiBlitz3.ab3@24081>     MOVE.l D4,D2
000323F6 <AmiBlitz3.ab3@24082>     BSR.w freeslist
000323FA <AmiBlitz3.ab3@24083>     MOVEM.l (A7)+,D2-D3/A2
000323FC <AmiBlitz3.ab3@24086>     MOVEA.l A2,A1
000323FE <AmiBlitz3.ab3@24087>     MOVE.l D2,D0
00032400 <AmiBlitz3.ab3@24088>     MOVEA.l (A2),A2
00032406 <AmiBlitz3.ab3@24089>     MOVE.l mempool,a0
0003240A <AmiBlitz3.ab3@24090>     JSR _FreePooled(A6)
0003240E <AmiBlitz3.ab3@24091>  BRA.w 'loop
00032410 <AmiBlitz3.ab3@24094> RTS
00032416 <AmiBlitz3.ab3@24096> JUMP_eselerr JMP eselerr
0003241A <AmiBlitz3.ab3@24099> firstsel:  Ds.l 1
0003241E <AmiBlitz3.ab3@24102> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00032420 <AmiBlitz3.ab3@24105> selpushw:   MOVE.w D0,-(A7)
00032422 <AmiBlitz3.ab3@24107> selpushl:   MOVE.l D0,-(A7)
00032426 <AmiBlitz3.ab3@24109> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
0003242A <AmiBlitz3.ab3@24112> selcomb:    ANDI.w #$FF,D0
0003242C <AmiBlitz3.ab3@24113> selcomw:    CMP.w (A7),D0
0003242E <AmiBlitz3.ab3@24115> selcoml:    CMP.l (A7),D0
00032432 <AmiBlitz3.ab3@24117> selbne:     BNE.w selbne
00032434 <AmiBlitz3.ab3@24119> endsel:     ADDQ.w #8,A7
00032438 <AmiBlitz3.ab3@24125>   MOVE.l firstsel(PC),D0                                  
0003243C <AmiBlitz3.ab3@24126>    BEQ.w JUMP_eselerr
0003243E <AmiBlitz3.ab3@24127>   MOVEA.l D0,A2
00032442 <AmiBlitz3.ab3@24128>    BSR.w fillbne
00032448 <AmiBlitz3.ab3@24131>   MOVEA.l _execbase,A6
0003244C <AmiBlitz3.ab3@24134>   MOVE.l $4(A2),D0
00032450 <AmiBlitz3.ab3@24135>    BEQ.w 'done
00032452 <AmiBlitz3.ab3@24136>   MOVEA.l D0,A3
00032456 <AmiBlitz3.ab3@24137>   MOVEA.l $4(A3),A0
0003245C <AmiBlitz3.ab3@24138>   MOVE.l destpointer,D1
0003245E <AmiBlitz3.ab3@24139>   SUB.l A0,D1
00032464 <AmiBlitz3.ab3@24141>     TST.b fast
00032468 <AmiBlitz3.ab3@24142>     BEQ 'loop_l1
0003246E <AmiBlitz3.ab3@24143>     MOVE.w dontwrite_nomemleft,D0
00032472 <AmiBlitz3.ab3@24144>     BNE.w 'skip
00032474 <AmiBlitz3.ab3@24145>     ADDQ.l #2,d1
00032478 <AmiBlitz3.ab3@24146>     MOVE.l d1,-2(a0)
0003247C <AmiBlitz3.ab3@24147>   BRA 'skip
00032482 <AmiBlitz3.ab3@24151>   TST.w dontwrite_nomemleft
00032486 <AmiBlitz3.ab3@24152>      BNE.w 'skip
0003248C <AmiBlitz3.ab3@24153>   CMP.l #MaxWordSgnd,D1
00032490 <AmiBlitz3.ab3@24154>    BHI.w JUMP_cbraerr
00032492 <AmiBlitz3.ab3@24155>   MOVE.w D1,(A0)
00032496 <AmiBlitz3.ab3@24158>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00032498 <AmiBlitz3.ab3@24159>   MOVEA.l A3,A1
0003249A <AmiBlitz3.ab3@24160>   MOVEQ.l #$08,D0
000324A0 <AmiBlitz3.ab3@24161>   MOVE.l mempool,a0
000324A4 <AmiBlitz3.ab3@24162>    JSR _FreePooled(A6)
000324A8 <AmiBlitz3.ab3@24163>  BRA.w 'loop
000324AE <AmiBlitz3.ab3@24166>   JSR popselect                                            ;fix stack on select
000324B2 <AmiBlitz3.ab3@24167>   MOVEA.l firstsel(PC),A1
000324B8 <AmiBlitz3.ab3@24168>   MOVE.l (A1),firstsel
000324BA <AmiBlitz3.ab3@24169>   MOVEQ.l #$0E,D0
000324C0 <AmiBlitz3.ab3@24170>   MOVEA.l _execbase,A6
000324C6 <AmiBlitz3.ab3@24171>   MOVE.l mempool,a0
000324CA <AmiBlitz3.ab3@24172>   JSR _FreePooled(A6)
000324D0 <AmiBlitz3.ab3@24173> JMP get1bytemain
000324D2 <AmiBlitz3.ab3@24177>   MOVEA.l (A7)+,A1
000324D4 <AmiBlitz3.ab3@24178>   SUBQ.w #8,A1
000324D6 <AmiBlitz3.ab3@24179>   MOVEQ.l #$09,D0
000324D8 <AmiBlitz3.ab3@24180>   ADD.l (A1),D0
000324DA <AmiBlitz3.ab3@24183>   ADDQ.w #2,A7                                             ;for runtime errs!
000324DE <AmiBlitz3.ab3@24188>   MOVE.l firstsel(PC),D0
000324E2 <AmiBlitz3.ab3@24189>    BEQ.w JUMP_defaerr
000324E4 <AmiBlitz3.ab3@24190>   MOVEA.l D0,A2
000324E8 <AmiBlitz3.ab3@24191>   BSR.w fillbra
000324EC <AmiBlitz3.ab3@24192>   BSR.w fillbne
000324F0 <AmiBlitz3.ab3@24193>   CLR.l $8(A2)
000324F4 <AmiBlitz3.ab3@24194>   MOVE.w $C(A2),D2
000324F8 <AmiBlitz3.ab3@24195> BRA.w casechk
000324FE <AmiBlitz3.ab3@24197> JUMP_defaerr JMP defaerr
00032502 <AmiBlitz3.ab3@24202>   MOVE.l $8(A2),D0
00032506 <AmiBlitz3.ab3@24203>    BEQ.w 'skip   ;none to do!
00032508 <AmiBlitz3.ab3@24204>   MOVEA.l D0,A0
0003250E <AmiBlitz3.ab3@24205>   MOVE.l destpointer,D1
00032510 <AmiBlitz3.ab3@24206>   SUB.l A0,D1
00032516 <AmiBlitz3.ab3@24209>     TST.b fast
0003251A <AmiBlitz3.ab3@24210>     BEQ 'l1
00032520 <AmiBlitz3.ab3@24211>     TST.w dontwrite_nomemleft
00032524 <AmiBlitz3.ab3@24212>     BNE.w 'skip
00032526 <AmiBlitz3.ab3@24213>     ADDQ.l #2,d1
0003252A <AmiBlitz3.ab3@24214>     MOVE.l D1,-2(A0)
0003252E <AmiBlitz3.ab3@24215>   BRA 'skip
00032534 <AmiBlitz3.ab3@24219>   TST.w dontwrite_nomemleft
00032538 <AmiBlitz3.ab3@24220>      BNE.w 'skip
0003253E <AmiBlitz3.ab3@24222>    CMP.l #MaxWordSgnd,D1
00032542 <AmiBlitz3.ab3@24223>    BHI.w JUMP_cbraerr
00032544 <AmiBlitz3.ab3@24224>   MOVE.w D1,(A0)
00032546 <AmiBlitz3.ab3@24227> RTS
0003254C <AmiBlitz3.ab3@24229> JUMP_cbraerr JMP cbraerr
00032550 <AmiBlitz3.ab3@24235>   MOVE.l $8(A2),D0
00032554 <AmiBlitz3.ab3@24236>    BEQ.w 'skip
00032556 <AmiBlitz3.ab3@24240>   MOVEA.l D0,A3
0003255A <AmiBlitz3.ab3@24241>   MOVE.w #$6000,D1
00032560 <AmiBlitz3.ab3@24244>    TST.b fast
00032564 <AmiBlitz3.ab3@24245>    BEQ 'l1
0003256A <AmiBlitz3.ab3@24246>    OR.l #$ff,d1
0003256E <AmiBlitz3.ab3@24247>    BSR writeword
00032572 <AmiBlitz3.ab3@24252>   BSR.w writeword
00032574 <AmiBlitz3.ab3@24253>   MOVEQ.l #$08,D0
00032576 <AmiBlitz3.ab3@24254>   MOVEQ.l #$01,D1
0003257C <AmiBlitz3.ab3@24255>   MOVEA.l _execbase,A6
00032582 <AmiBlitz3.ab3@24257>   MOVE.l mempool,a0
00032586 <AmiBlitz3.ab3@24258>   JSR _AllocPooled(a6)
00032588 <AmiBlitz3.ab3@24261>   MOVEA.l D0,A0
0003258C <AmiBlitz3.ab3@24262>   MOVE.l $4(A2),(A0)
00032590 <AmiBlitz3.ab3@24263>   MOVE.l A0,$4(A2)
00032598 <AmiBlitz3.ab3@24264>   MOVE.l destpointer,$4(A0)
0003259C <AmiBlitz3.ab3@24265>  BRA.w writeword
0003259E <AmiBlitz3.ab3@24268> RTS
000325A4 <AmiBlitz3.ab3@24272>   TST.b debugmode
000325A8 <AmiBlitz3.ab3@24273>    BEQ.w 'norerr
000325AC <AmiBlitz3.ab3@24274>   MOVE.w #$C313,D1
000325B0 <AmiBlitz3.ab3@24275>   CMP.w #$3,D2
000325B4 <AmiBlitz3.ab3@24276>    BCS.w 'dochk
000325B6 <AmiBlitz3.ab3@24277>   ADDQ.w #1,D1
000325BA <AmiBlitz3.ab3@24280>  BRA.w Atokejsr
000325BC <AmiBlitz3.ab3@24283> RTS
000325C2 <AmiBlitz3.ab3@24286> JUMP_caseerr JMP caseerr
000325C6 <AmiBlitz3.ab3@24293>   MOVE.l firstsel(PC),D0
000325CA <AmiBlitz3.ab3@24294>    BEQ.w JUMP_caseerr
000325CC <AmiBlitz3.ab3@24295>   MOVEA.l D0,A2
000325D0 <AmiBlitz3.ab3@24296>    BSR.w fillbra
000325D4 <AmiBlitz3.ab3@24297>    BSR.w fillbne
000325D8 <AmiBlitz3.ab3@24299>   MOVE.w $C(A2),D2    ;type to get!
000325DA <AmiBlitz3.ab3@24300>   MOVE.w D2,-(A7)
000325DE <AmiBlitz3.ab3@24301>    BSR.w casechk
000325E0 <AmiBlitz3.ab3@24302>   MOVE.w (A7),D2
000325E4 <AmiBlitz3.ab3@24305>    BSR.w bakeval
000325E6 <AmiBlitz3.ab3@24306>   MOVE.w (A7)+,D2    ;types to compare
000325EA <AmiBlitz3.ab3@24307>   LEA selcomb(PC),A0
000325EE <AmiBlitz3.ab3@24308>   LEA selcombf(PC),A1
000325F2 <AmiBlitz3.ab3@24309>   CMP.w #$1,D2
000325F6 <AmiBlitz3.ab3@24310>    BEQ.w 'doit
000325FA <AmiBlitz3.ab3@24311>   LEA selcomw(PC),A0
000325FE <AmiBlitz3.ab3@24312>   CMP.w #$2,D2
00032602 <AmiBlitz3.ab3@24313>    BEQ.w 'doit
00032606 <AmiBlitz3.ab3@24314>   LEA selcoml(PC),A0
0003260A <AmiBlitz3.ab3@24315>   LEA selcomlf(PC),A1
0003260E <AmiBlitz3.ab3@24316>   CMP.w #$7,D2
00032612 <AmiBlitz3.ab3@24317>    BCS.w 'doit
00032616 <AmiBlitz3.ab3@24319>   MOVE.w #$CE01,D1     ; was #casestrcomp
0003261A <AmiBlitz3.ab3@24320>    BSR.w Atokejsr
0003261E <AmiBlitz3.ab3@24321>  BRA.w 'doneit
00032622 <AmiBlitz3.ab3@24324>   BSR.w pokecode
00032626 <AmiBlitz3.ab3@24327>   MOVE.w selbne(PC),D1
0003262C <AmiBlitz3.ab3@24330>     TST.b fast
00032630 <AmiBlitz3.ab3@24331>     BEQ 'l1
00032636 <AmiBlitz3.ab3@24332>     ORI.l #$ff,d1
0003263A <AmiBlitz3.ab3@24333>     BSR writeword
0003263E <AmiBlitz3.ab3@24338>   BSR.w writeword
00032642 <AmiBlitz3.ab3@24339>   MOVEA.l firstsel(PC),A0
0003264A <AmiBlitz3.ab3@24340>   MOVE.l destpointer,$8(A0)
0003264E <AmiBlitz3.ab3@24341> BRA.w writeword
00032652 <AmiBlitz3.ab3@24345> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
00032654 <AmiBlitz3.ab3@24346> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00032658 <AmiBlitz3.ab3@24349> sellineat:  Ds.l 1
0003265E <AmiBlitz3.ab3@24355>   TST.b debugmode
00032662 <AmiBlitz3.ab3@24356>    BEQ.w 'norerr
00032666 <AmiBlitz3.ab3@24357>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
0003266A <AmiBlitz3.ab3@24358>    BSR.w writelong
00032674 <AmiBlitz3.ab3@24361>   MOVE.l linenumat,sellineat
0003267E <AmiBlitz3.ab3@24364>    MOVE.l destpointer,pushpc
00032688 <AmiBlitz3.ab3@24365>   MOVE.l hunkoffsetbase,pushoff
0003268A <AmiBlitz3.ab3@24367>   MOVEQ.l #$00,D2
0003268E <AmiBlitz3.ab3@24368>    BSR.w bakevalu                                          ;Evaluate
00032692 <AmiBlitz3.ab3@24369>    BSR.w pushdo
00032696 <AmiBlitz3.ab3@24370>   CMP.w #$7,D2
0003269A <AmiBlitz3.ab3@24371>    BNE.w 'nos
0003269E <AmiBlitz3.ab3@24372>   MOVE.w clrst(PC),D1
000326A2 <AmiBlitz3.ab3@24373>    BSR.w writeword
000326A6 <AmiBlitz3.ab3@24376>    BSR.w pushput
000326AA <AmiBlitz3.ab3@24377>   LEA selpushb(PC),A0
000326AE <AmiBlitz3.ab3@24378>   LEA selpushbf(PC),A1
000326B2 <AmiBlitz3.ab3@24379>   CMP.w #$1,D2
000326B6 <AmiBlitz3.ab3@24380>    BEQ.w 'doit
000326BA <AmiBlitz3.ab3@24381>   LEA selpushw(PC),A0
000326BE <AmiBlitz3.ab3@24382>   CMP.w #$2,D2
000326C2 <AmiBlitz3.ab3@24383>    BEQ.w 'doit
000326C6 <AmiBlitz3.ab3@24384>   LEA selpushl(PC),A0
000326CA <AmiBlitz3.ab3@24385>   LEA selpushlf(PC),A1
000326CE <AmiBlitz3.ab3@24386>   CMP.w #$7,D2
000326D2 <AmiBlitz3.ab3@24387>    BCS.w 'doit
000326D8 <AmiBlitz3.ab3@24389>   MOVE.w moved0a3,D1                                       ;d0 to a3!
000326DC <AmiBlitz3.ab3@24390>    BSR.w writeword
000326E0 <AmiBlitz3.ab3@24391>   LEA selpushs(PC),A0
000326E4 <AmiBlitz3.ab3@24392>   LEA selpushsf(PC),A1
000326E8 <AmiBlitz3.ab3@24393>    BSR.w pokecode
000326EC <AmiBlitz3.ab3@24394>   MOVE.w #$C701,D1     ; was #astring
000326F0 <AmiBlitz3.ab3@24395>    BSR.w Atokejsr
000326F4 <AmiBlitz3.ab3@24396>  BRA.w 'doneit
000326F8 <AmiBlitz3.ab3@24399>   BSR.w pokecode
000326FA <AmiBlitz3.ab3@24402>   MOVEQ.l #$0E,D0
000326FC <AmiBlitz3.ab3@24403>   MOVEQ.l #$01,D1
00032702 <AmiBlitz3.ab3@24404>   MOVEA.l _execbase,A6
00032708 <AmiBlitz3.ab3@24407>   MOVE.l mempool,a0
0003270C <AmiBlitz3.ab3@24408>   JSR _AllocPooled(a6)
0003270E <AmiBlitz3.ab3@24410>   MOVEA.l D0,A0
00032712 <AmiBlitz3.ab3@24411>   MOVE.l firstsel(PC),(A0)
00032718 <AmiBlitz3.ab3@24412>   MOVE.l A0,firstsel
0003271C <AmiBlitz3.ab3@24413>   CLR.l $4(A0)
00032720 <AmiBlitz3.ab3@24414>   CLR.l $8(A0)        ;default mode!
00032724 <AmiBlitz3.ab3@24415>   MOVE.w D2,$C(A0)
00032726 <AmiBlitz3.ab3@24416> RTS
0003272C <AmiBlitz3.ab3@24420>   MOVE.l firstrep,D0
00032730 <AmiBlitz3.ab3@24421>    BEQ.w JUMP_unterr1
00032734 <AmiBlitz3.ab3@24422>   MOVE.w #$6000,D1      ;BRA
00032738 <AmiBlitz3.ab3@24423>   BSR.w writeword
0003273A <AmiBlitz3.ab3@24424>   MOVEA.l D0,A0
0003273E <AmiBlitz3.ab3@24425>   MOVE.l $4(A0),D1      ;dest pc
00032744 <AmiBlitz3.ab3@24426>   SUB.l destpointer,D1
00032746 <AmiBlitz3.ab3@24427>   TST.w D1
0003274A <AmiBlitz3.ab3@24428>    BPL.w JUMP_unterr2
0003274E <AmiBlitz3.ab3@24429>   BSR.w writeword
00032754 <AmiBlitz3.ab3@24430>   MOVEA.l _execbase,A6
00032758 <AmiBlitz3.ab3@24431> BRA.w unlinkrep
0003275E <AmiBlitz3.ab3@24433> JUMP_unterr2 JMP unterr2
00032764 <AmiBlitz3.ab3@24434> JUMP_unterr1 JMP unterr1
0003276A <AmiBlitz3.ab3@24438>   MOVE.l firstrep,D0
0003276E <AmiBlitz3.ab3@24439>    BEQ.w JUMP_unterr1    ;no repeat!
00032772 <AmiBlitz3.ab3@24440>   BSR.w do_if            ;do the until
00032778 <AmiBlitz3.ab3@24442>   JSR reget
0003277C <AmiBlitz3.ab3@24443>    BNE.w JUMP_syntaxerr
00032782 <AmiBlitz3.ab3@24445>   MOVE.w dontwrite_nomemleft,D1
00032786 <AmiBlitz3.ab3@24446>    BNE.w 'skip
0003278C <AmiBlitz3.ab3@24447>   MOVEA.l firstrep,A0
00032792 <AmiBlitz3.ab3@24448>   MOVEA.l destpointer,A1
00032798 <AmiBlitz3.ab3@24451>     TST.b fast
0003279C <AmiBlitz3.ab3@24452>     BEQ 'l1
0003279E <AmiBlitz3.ab3@24453>     SUBQ.w #4,a1
000327A2 <AmiBlitz3.ab3@24454>     MOVE.l $4(A0),D2
000327A4 <AmiBlitz3.ab3@24455>     SUB.l A1,D2
000327A6 <AmiBlitz3.ab3@24456>     MOVE.l d2,(a1)
000327AA <AmiBlitz3.ab3@24457>   BRA 'skip
000327AC <AmiBlitz3.ab3@24462>   SUBQ.w #2,A1
000327B0 <AmiBlitz3.ab3@24463>   MOVE.l $4(A0),D2    ;dest pc.
000327B2 <AmiBlitz3.ab3@24464>   SUB.l A1,D2
000327B4 <AmiBlitz3.ab3@24465>   TST.w D2
000327B8 <AmiBlitz3.ab3@24466>    BPL.w JUMP_unterr2
000327BA <AmiBlitz3.ab3@24467>   MOVE.w D2,(A1)      ;put in pra dest.
000327C0 <AmiBlitz3.ab3@24470>   MOVEA.l firstiff,A1
000327C6 <AmiBlitz3.ab3@24471>   MOVE.l (A1),firstiff
000327C8 <AmiBlitz3.ab3@24472>   MOVEQ.l #$0E,D0
000327CE <AmiBlitz3.ab3@24473>   MOVEA.l _execbase,A6
000327D4 <AmiBlitz3.ab3@24476>   MOVE.l mempool,a0
000327D8 <AmiBlitz3.ab3@24477>   JSR _FreePooled(A6)
000327DE <AmiBlitz3.ab3@24481>   MOVEA.l firstrep,A1
000327E4 <AmiBlitz3.ab3@24482>   MOVE.l (A1),firstrep
000327E6 <AmiBlitz3.ab3@24483>   MOVEQ.l #$08,D0
000327EC <AmiBlitz3.ab3@24486>   MOVE.l mempool,a0
000327F0 <AmiBlitz3.ab3@24487> JMP _FreePooled(A6)
000327F4 <AmiBlitz3.ab3@24490> iflineat:   Ds.l 1
000327F6 <AmiBlitz3.ab3@24494>   MOVEQ.l #$00,D2   ;negate flag
000327FC <AmiBlitz3.ab3@24496>   TST.b fast
00032800 <AmiBlitz3.ab3@24497>   BEQ 'l1
00032808 <AmiBlitz3.ab3@24498>   MOVE.b #1,nostringopt
00032810 <AmiBlitz3.ab3@24499>   MOVE.b #1,iniffcommand
00032812 <AmiBlitz3.ab3@24504>   MOVEQ.l #$00,D1  ;if flag
00032814 <AmiBlitz3.ab3@24510>   MOVE.w D1,-(A7)
0003281A <AmiBlitz3.ab3@24511>   MOVE.l destpointer,-(A7)
0003281C <AmiBlitz3.ab3@24512>   MOVE.w D2,-(A7)
00032826 <AmiBlitz3.ab3@24513>   MOVE.l linenumat,iflineat
00032828 <AmiBlitz3.ab3@24515>   MOVEQ.l #$00,D2
00032832 <AmiBlitz3.ab3@24517>   MOVE.b optistring,optistring2
0003283A <AmiBlitz3.ab3@24518>   MOVE.b #1,optistring
0003283E <AmiBlitz3.ab3@24520>   BSR.w bakevalu       ;Get True/False Expression!
00032848 <AmiBlitz3.ab3@24522>   MOVE.b optistring2,optistring
0003284C <AmiBlitz3.ab3@24524>   CMP.w #$5,D2
00032850 <AmiBlitz3.ab3@24525>    BEQ.w 'float
00032854 <AmiBlitz3.ab3@24526>   MOVE.w thetst1(PC),D1
00032858 <AmiBlitz3.ab3@24527>   CMP.w #$1,D2
0003285C <AmiBlitz3.ab3@24528>    BEQ.w 'writebranchcode
00032860 <AmiBlitz3.ab3@24529>   MOVE.w thetst2(PC),D1
00032864 <AmiBlitz3.ab3@24530>   CMP.w #$2,D2
00032868 <AmiBlitz3.ab3@24531>    BEQ.w 'writebranchcode
0003286C <AmiBlitz3.ab3@24532>   MOVE.w thetst4(PC),D1
00032870 <AmiBlitz3.ab3@24533>   CMP.w #$7,D2
00032874 <AmiBlitz3.ab3@24534>    BEQ.w 'writebranchcode
00032878 <AmiBlitz3.ab3@24535>   MOVE.w thetst3(PC),D1
0003287C <AmiBlitz3.ab3@24536>  BRA.w 'writebranchcode
00032882 <AmiBlitz3.ab3@24540>   TST.b fpu
00032886 <AmiBlitz3.ab3@24541>   BEQ 'dofpu
0003288C <AmiBlitz3.ab3@24542>   MOVE.l #$f200003a,d1
00032890 <AmiBlitz3.ab3@24543>   BSR writelong
00032894 <AmiBlitz3.ab3@24544>   MOVE.w #$f2c1,d1       
00032898 <AmiBlitz3.ab3@24545>   BSR writeword
0003289C <AmiBlitz3.ab3@24546>   BSR writelong
0003289E <AmiBlitz3.ab3@24547>   ADDQ.l #2,a7
000328A2 <AmiBlitz3.ab3@24548>  BRA.w 'br2
000328A6 <AmiBlitz3.ab3@24552>    MOVE.w #$C900,D1     ;was #getffpbase
000328AA <AmiBlitz3.ab3@24553>    BSR.w Atokejsr
000328AE <AmiBlitz3.ab3@24554>   MOVE.l thetst5(PC),D1
000328B2 <AmiBlitz3.ab3@24555>    BSR.w writelong
000328B6 <AmiBlitz3.ab3@24556>  BRA.w 'gotst2
000328BC <AmiBlitz3.ab3@24560>          CLR.b iniffcommand
000328C2 <AmiBlitz3.ab3@24561>          TST.b fast                                        ;branchcode
000328C6 <AmiBlitz3.ab3@24562>          BEQ 'b6
000328CC <AmiBlitz3.ab3@24563>          TST.b fpu
000328D0 <AmiBlitz3.ab3@24564>          BEQ 'nofpu
000328D6 <AmiBlitz3.ab3@24568>           MOVE.l destpointer,a0
000328DC <AmiBlitz3.ab3@24569>          SUB.l load_var_addr,a0
000328E2 <AmiBlitz3.ab3@24570>          CMP.l #4,a0
000328E6 <AmiBlitz3.ab3@24571>          BEQ 'nofpu
000328EE <AmiBlitz3.ab3@24572>          CMP.l #$f2400014,-4(a4)                           ;<
000328F2 <AmiBlitz3.ab3@24573>          BNE 'nolt
000328F8 <AmiBlitz3.ab3@24574>          SUBQ.l #2,destpointer
000328FE <AmiBlitz3.ab3@24575>          MOVE.w #$f293,-4(a4)                              ;
00032902 <AmiBlitz3.ab3@24576>  BRA 'brf
0003290A <AmiBlitz3.ab3@24579>   CMP.l #$f2400015,-4(a4)                                  ;<=
0003290E <AmiBlitz3.ab3@24580>          BNE 'nole
00032914 <AmiBlitz3.ab3@24581>          SUBQ.l #2,destpointer
0003291A <AmiBlitz3.ab3@24582>          MOVE.w #$f292,-4(a4)
0003291E <AmiBlitz3.ab3@24583>  BRA 'brf
00032926 <AmiBlitz3.ab3@24586>   CMP.l #$f2400013,-4(a4)                                  ;=>
0003292A <AmiBlitz3.ab3@24587>          BNE 'noge
00032930 <AmiBlitz3.ab3@24588>          SUBQ.l #2,destpointer
00032936 <AmiBlitz3.ab3@24589>          MOVE.w #$f294,-4(a4)
0003293A <AmiBlitz3.ab3@24590>  BRA 'brf
00032942 <AmiBlitz3.ab3@24593>   CMP.l #$f2400012,-4(a4)                                  ;>
00032946 <AmiBlitz3.ab3@24594>          BNE 'nogt
0003294C <AmiBlitz3.ab3@24595>          SUBQ.l #2,destpointer
00032952 <AmiBlitz3.ab3@24596>          MOVE.w #$f295,-4(a4)
00032956 <AmiBlitz3.ab3@24597>  BRA 'brf
0003295E <AmiBlitz3.ab3@24600>   CMP.l #$f2400001,-4(a4)                                  ;=
00032962 <AmiBlitz3.ab3@24601>          BNE 'noeq
00032968 <AmiBlitz3.ab3@24602>          SUBQ.l #2,destpointer
0003296E <AmiBlitz3.ab3@24603>          MOVE.w #$f28e,-4(a4)
00032972 <AmiBlitz3.ab3@24604>  BRA 'brf
0003297A <AmiBlitz3.ab3@24607>   CMP.l #$f240000e,-4(a4)                                  ;<>
0003297E <AmiBlitz3.ab3@24608>          BNE 'none
00032984 <AmiBlitz3.ab3@24609>          SUBQ.l #2,destpointer
0003298A <AmiBlitz3.ab3@24610>          MOVE.w #$f281,-4(a4)
0003298C <AmiBlitz3.ab3@24613>   ADDQ.l #2,a7
00032992 <AmiBlitz3.ab3@24615>     TST.b fast
00032996 <AmiBlitz3.ab3@24616>     BEQ 'l1
0003299C <AmiBlitz3.ab3@24617>     OR.b #$40,-3(a4)
000329A0 <AmiBlitz3.ab3@24618>     BSR writeword
000329A4 <AmiBlitz3.ab3@24622>   BSR writeword
000329A8 <AmiBlitz3.ab3@24623>  BRA.s 'br2
000329AE <AmiBlitz3.ab3@24627>   MOVE.l destpointer,a0
000329B4 <AmiBlitz3.ab3@24628>          SUB.l load_var_addr,a0
000329BA <AmiBlitz3.ab3@24629>          CMP.l #4,a0
000329BE <AmiBlitz3.ab3@24630>          BEQ 'gotst2
000329C4 <AmiBlitz3.ab3@24631>          CMP.w #$4eb9,-6(a4)
000329C8 <AmiBlitz3.ab3@24632>          BEQ 'b6
000329CE <AmiBlitz3.ab3@24633>          CMP.w #$5ec0,-2(a4)                               ;>
000329D2 <AmiBlitz3.ab3@24634>      BNE.s 'lb1
000329D8 <AmiBlitz3.ab3@24635>          MOVE.w #$6f00,-2(a4)                              ;ble
000329DC <AmiBlitz3.ab3@24636>  BRA.s 'br
000329E2 <AmiBlitz3.ab3@24639>   CMP.w #$5dc0,-2(a4)                                       ;<
000329E6 <AmiBlitz3.ab3@24640>   BNE.s 'lb2
000329EC <AmiBlitz3.ab3@24641>          MOVE.w #$6c00,-2(a4)                              ;bge
000329F0 <AmiBlitz3.ab3@24642>  BRA.s 'br
000329F6 <AmiBlitz3.ab3@24645>   CMP.w #$57c0,-2(a4)                                      ;=
000329FA <AmiBlitz3.ab3@24646>   BNE.s 'lb3
00032A00 <AmiBlitz3.ab3@24647>          MOVE.w #$6600,-2(a4)                              ;bne
00032A04 <AmiBlitz3.ab3@24648>  BRA.s 'br
00032A0A <AmiBlitz3.ab3@24651>   CMP.w #$56c0,-2(a4)                                      ;<>
00032A0E <AmiBlitz3.ab3@24652>   BNE.s 'lb4
00032A14 <AmiBlitz3.ab3@24653>          MOVE.w #$6700,-2(a4)                              ;beq
00032A18 <AmiBlitz3.ab3@24654>  BRA.s 'br
00032A1E <AmiBlitz3.ab3@24657>   CMP.w #$5cc0,-2(a4)                                      ;>=
00032A22 <AmiBlitz3.ab3@24658>   BNE.s 'lb5
00032A28 <AmiBlitz3.ab3@24659>          MOVE.w #$6d00,-2(a4)                              ;blt
00032A2C <AmiBlitz3.ab3@24660>  BRA.s 'br
00032A32 <AmiBlitz3.ab3@24663>   CMP.w #$5fc0,-2(a4)                                      ;<=
00032A36 <AmiBlitz3.ab3@24664>         BNE.s 'b6
00032A3C <AmiBlitz3.ab3@24665>          MOVE.w #$6e00,-2(a4)                              ;bgt
00032A3E <AmiBlitz3.ab3@24668>   TST.w (a7)+
00032A44 <AmiBlitz3.ab3@24670>         TST.b fast
00032A48 <AmiBlitz3.ab3@24671>         BEQ 'l1a
00032A4E <AmiBlitz3.ab3@24672>         OR.b #$ff,-1(a4)                                   ;long branches
00032A52 <AmiBlitz3.ab3@24673>         BSR writeword
00032A56 <AmiBlitz3.ab3@24677>         BSR writeword
00032A5A <AmiBlitz3.ab3@24678>  BRA.s 'br2
00032A5E <AmiBlitz3.ab3@24682>   BSR.w writeword
00032A62 <AmiBlitz3.ab3@24685>   MOVE.l posbr(PC),D1
00032A64 <AmiBlitz3.ab3@24686>   TST.w (A7)+
00032A68 <AmiBlitz3.ab3@24687>    BEQ.w 'skip
00032A6C <AmiBlitz3.ab3@24688>   MOVE.l negbr(PC),D1
00032A72 <AmiBlitz3.ab3@24692>   TST.b fast
00032A76 <AmiBlitz3.ab3@24693>            BEQ 'l1b
00032A7C <AmiBlitz3.ab3@24694>            OR.l #$00ff0000,d1
00032A80 <AmiBlitz3.ab3@24695>            BSR writelong
00032A84 <AmiBlitz3.ab3@24696>            BSR writeword
00032A88 <AmiBlitz3.ab3@24697>  BRA 'br2
00032A8C <AmiBlitz3.ab3@24700>   BSR.w writelong
00032A8E <AmiBlitz3.ab3@24704>   MOVEQ.l #$0E,D0
00032A90 <AmiBlitz3.ab3@24705>   MOVEQ.l #$01,D1
00032A96 <AmiBlitz3.ab3@24706>   MOVEA.l _execbase,A6
00032A9C <AmiBlitz3.ab3@24709>   MOVE.l mempool,a0
00032AA0 <AmiBlitz3.ab3@24710>   JSR _AllocPooled(a6)
00032AA2 <AmiBlitz3.ab3@24713>   MOVEA.l D0,A0
00032AA8 <AmiBlitz3.ab3@24714>   MOVE.l firstiff,(A0)
00032AAE <AmiBlitz3.ab3@24715>   MOVE.l A0,firstiff
00032AB2 <AmiBlitz3.ab3@24716>   MOVE.l (A7)+,$4(A0)
00032ABA <AmiBlitz3.ab3@24717>   MOVE.l destpointer,$8(A0)
00032ABE <AmiBlitz3.ab3@24718>   MOVE.w (A7)+,$C(A0)
00032AC4 <AmiBlitz3.ab3@24719>    JSR reget
00032AC8 <AmiBlitz3.ab3@24720>    BEQ.w ifdone
00032ACE <AmiBlitz3.ab3@24721>   BSET #$7,$C(A0)    ;one liner
00032AD8 <AmiBlitz3.ab3@24727>   MOVE.w oldqflag,instringon
00032ADE <AmiBlitz3.ab3@24728>   MOVEA.l lastsourcepos,A5
00032AE6 <AmiBlitz3.ab3@24730>   MOVE.w #$003A,lastchar      ; ':'
00032AE8 <AmiBlitz3.ab3@24733> RTS
00032AEC <AmiBlitz3.ab3@24737>   CMP.w #$1,D0     ;4
00032AF0 <AmiBlitz3.ab3@24738>    BLT.w gc1skip   ;4
00032AF4 <AmiBlitz3.ab3@24739>   CMP.w #$0,D0     ;2
00032AF8 <AmiBlitz3.ab3@24740>    BGT.w gc1skip
00032AFA <AmiBlitz3.ab3@24741>   ADD.w D0,D0
00032AFC <AmiBlitz3.ab3@24742>   ADD.w D0,D0
00032B00 <AmiBlitz3.ab3@24743>   MOVEA.l gc1labs-4(PC,D0.W),A0
00032B02 <AmiBlitz3.ab3@24744>  JMP (A0)
00032B06 <AmiBlitz3.ab3@24747>  BRA.w gc1skip
00032B0A <AmiBlitz3.ab3@24753>   CMP.w #$1,D0     ;4
00032B0E <AmiBlitz3.ab3@24754>    BLT.w gc2skip   ;4
00032B12 <AmiBlitz3.ab3@24755>   CMP.w #$0,D0     ;2
00032B16 <AmiBlitz3.ab3@24756>    BGT.w gc2skip
00032B18 <AmiBlitz3.ab3@24757>   ADD.w D0,D0
00032B1A <AmiBlitz3.ab3@24758>   ADD.w D0,D0
00032B1E <AmiBlitz3.ab3@24759>   MOVEA.l gc2labs-4(PC,D0.W),A0
00032B20 <AmiBlitz3.ab3@24760>   JSR (A0)
00032B24 <AmiBlitz3.ab3@24763>  BRA.w gc2skip
00032B28 <AmiBlitz3.ab3@24769>   CMP.w #$1,D0    ;4
00032B2C <AmiBlitz3.ab3@24770>    BLT.w gc3skip  ;4
00032B30 <AmiBlitz3.ab3@24771>   CMP.w #$0,D0    ;2
00032B34 <AmiBlitz3.ab3@24772>    BGT.w gc3skip
00032B36 <AmiBlitz3.ab3@24773>   ADD.w D0,D0
00032B38 <AmiBlitz3.ab3@24774>   ADD.w D0,D0
00032B3C <AmiBlitz3.ab3@24775>   MOVEA.l gc3labs-4(PC,D0.W),A0
00032B40 <AmiBlitz3.ab3@24778>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
00032B42 <AmiBlitz3.ab3@24779>    JSR (A0)
00032B46 <AmiBlitz3.ab3@24782>  BRA.w gc3skip
00032B48 <AmiBlitz3.ab3@24787> labcnt:   Ds.w 1
00032B4A <AmiBlitz3.ab3@24794>   MOVEQ.l #$02,D2
00032B4E <AmiBlitz3.ab3@24795>    BSR.w bakeval
00032B52 <AmiBlitz3.ab3@24797>   LEA ongotocode(PC),A0
00032B56 <AmiBlitz3.ab3@24798>   LEA ongotocodef(PC),A1
00032B5A <AmiBlitz3.ab3@24799>   MOVE.w #gc1skip-ongotocode,D1      ; is #$001A
00032B5E <AmiBlitz3.ab3@24800>   CMP.w #-$7FFB,D0                   ; was #$8005
00032B62 <AmiBlitz3.ab3@24801>    BEQ.w 'isok
00032B66 <AmiBlitz3.ab3@24802>   CMP.w #-$7FFA,D0                   ; was #$8006
00032B6A <AmiBlitz3.ab3@24803>    BNE.w JUMP_syntaxerr
00032B6E <AmiBlitz3.ab3@24804>   LEA ongosubcode(PC),A0
00032B72 <AmiBlitz3.ab3@24805>   LEA ongosubcodef(PC),A1
00032B76 <AmiBlitz3.ab3@24806>   MOVE.w #gc2skip-ongosubcode,D1     ; is #$001A
00032B7C <AmiBlitz3.ab3@24808>   TST.b debugmode
00032B80 <AmiBlitz3.ab3@24809>    BEQ.b 'isok
00032B86 <AmiBlitz3.ab3@24811>    JSR chkstak
00032B8A <AmiBlitz3.ab3@24812>   LEA ongcode(PC),A0
00032B8E <AmiBlitz3.ab3@24813>   LEA ongcodef(PC),A1
00032B92 <AmiBlitz3.ab3@24814>   MOVE.w #gc3skip-ongcode,D1         ; is #$001E
00032B94 <AmiBlitz3.ab3@24817>   MOVE.w D1,-(A7)
00032B9A <AmiBlitz3.ab3@24818>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032B9E <AmiBlitz3.ab3@24819>    BSR.w pokecode
00032BA4 <AmiBlitz3.ab3@24820>   CLR.w labcnt
00032BAA <AmiBlitz3.ab3@24826>    JSR get1bytemain
00032BB0 <AmiBlitz3.ab3@24827>   SUBQ.l #2,destpointer                                    ;for makealab!
00032BB4 <AmiBlitz3.ab3@24828>    BSR.w makealab2
00032BBA <AmiBlitz3.ab3@24829>   ADDQ.l #2,destpointer
00032BC0 <AmiBlitz3.ab3@24830>    JSR addoff
00032BC4 <AmiBlitz3.ab3@24831>   MOVE.l $8(A2),D1
00032BC8 <AmiBlitz3.ab3@24832>    BSR.w writelong
00032BCE <AmiBlitz3.ab3@24833>   ADDQ.w #1,labcnt
00032BD4 <AmiBlitz3.ab3@24834>    JSR reget
00032BD8 <AmiBlitz3.ab3@24835>   CMP.w #$2C,D0 ; ','
00032BDC <AmiBlitz3.ab3@24836>    BEQ.w 'loop
00032BDE <AmiBlitz3.ab3@24838>   MOVEA.l (A7)+,A0
00032BE0 <AmiBlitz3.ab3@24839>   MOVE.w (A7)+,D2
00032BE6 <AmiBlitz3.ab3@24840>   MOVE.w dontwrite_nomemleft,D1
00032BEA <AmiBlitz3.ab3@24841>    BNE.w 'done
00032BEE <AmiBlitz3.ab3@24843>   MOVE.w labcnt(PC),D1
00032BF2 <AmiBlitz3.ab3@24844>   MOVE.w D1,$A(A0)       ;for cmp#
00032BF4 <AmiBlitz3.ab3@24845>   ADD.w D1,D1
00032BF6 <AmiBlitz3.ab3@24846>   ADD.w D1,D1
00032BF8 <AmiBlitz3.ab3@24847>   ADDQ.w #2,D1
00032BFC <AmiBlitz3.ab3@24848>   MOVE.w D1,$2(A0,D2.W)  ;for bra!
00032BFE <AmiBlitz3.ab3@24851> RTS
00032C04 <AmiBlitz3.ab3@24855>   TST.b debugmode
00032C08 <AmiBlitz3.ab3@24856>    BEQ.w 'noerr
00032C0E <AmiBlitz3.ab3@24858>    JSR chkstak
00032C14 <AmiBlitz3.ab3@24859>   MOVE.l goset,D1
00032C18 <AmiBlitz3.ab3@24860>    BSR.w writelong
00032C1E <AmiBlitz3.ab3@24863>   MOVE.w gosubcode,D1
00032C22 <AmiBlitz3.ab3@24864> BRA.w dogoto2
00032C28 <AmiBlitz3.ab3@24868>   MOVE.w gotocode,D1
00032C2A <AmiBlitz3.ab3@24871>   MOVE.w D1,-(A7)
00032C2E <AmiBlitz3.ab3@24872>    BSR.w makealab2
00032C30 <AmiBlitz3.ab3@24873>   MOVE.w (A7)+,D1
00032C34 <AmiBlitz3.ab3@24874>    BSR.w writeword
00032C3A <AmiBlitz3.ab3@24875>    JSR addoff
00032C3E <AmiBlitz3.ab3@24876>   MOVE.l $8(A2),D1
00032C42 <AmiBlitz3.ab3@24877> BRA.w writelong
00032C48 <AmiBlitz3.ab3@24881>   MOVE.w proceduremode,D1
00032C4C <AmiBlitz3.ab3@24882>    BEQ.w JUMP_badpenderr
00032C50 <AmiBlitz3.ab3@24884>   MOVE.w #$4EF9,D1
00032C54 <AmiBlitz3.ab3@24885>    BSR.w writeword
00032C5A <AmiBlitz3.ab3@24886>    JSR addoff
00032C60 <AmiBlitz3.ab3@24888>   MOVEA.l _execbase,A6
00032C62 <AmiBlitz3.ab3@24889>   MOVEQ.l #$08,D0
00032C64 <AmiBlitz3.ab3@24890>   MOVEQ.l #$01,D1
00032C6A <AmiBlitz3.ab3@24893>   MOVE.l mempool,a0
00032C6E <AmiBlitz3.ab3@24894>   JSR _AllocPooled(a6)
00032C70 <AmiBlitz3.ab3@24896>   MOVEA.l D0,A0
00032C76 <AmiBlitz3.ab3@24897>   MOVE.l firstpend,(A0)
00032C7C <AmiBlitz3.ab3@24898>   MOVE.l A0,firstpend
00032C84 <AmiBlitz3.ab3@24899>   MOVE.l destpointer,$4(A0)
00032C88 <AmiBlitz3.ab3@24901> BRA.w writelong
00032C8C <AmiBlitz3.ab3@24905>   BSR.w do_AsmExit
00032C92 <AmiBlitz3.ab3@24906> JMP get1bytemain
00032C9A <AmiBlitz3.ab3@24911>   MOVE.b #1,nostringopt
00032C9E <AmiBlitz3.ab3@24912>   MOVEM.l a0/a1/d1,-(a7)
00032CA4 <AmiBlitz3.ab3@24914>   MOVEA.l currentfunction,A0
00032CAA <AmiBlitz3.ab3@24916>     CMP.l #0,a0
00032CAE <AmiBlitz3.ab3@24917>     BNE 'l1
00032CB4 <AmiBlitz3.ab3@24918>     JMP errorasmexit
00032CB6 <AmiBlitz3.ab3@24921>   MOVEQ.l #$00,D2
00032CBA <AmiBlitz3.ab3@24923>   MOVE.b $5(A0),D2      ;type returning!
00032CBE <AmiBlitz3.ab3@24924>   BSR.w eval            ;put return val in d0.
00032CC4 <AmiBlitz3.ab3@24927>   MOVEA.l currentfunction,A0
00032CC8 <AmiBlitz3.ab3@24928>   MOVE.l funcstruct_returntype(a0),a0
00032CCE <AmiBlitz3.ab3@24929>   CMP.l #0,a0
00032CD2 <AmiBlitz3.ab3@24930>   BEQ 'isstatement
00032CDA <AmiBlitz3.ab3@24931>   CMP.l #$100,4(a0)
00032CDE <AmiBlitz3.ab3@24932>   BLT.w 'isvar
00032CE0 <AmiBlitz3.ab3@24933>   MOVE.l a2,a1
00032CE6 <AmiBlitz3.ab3@24934>   TST.l typetocast
00032CEA <AmiBlitz3.ab3@24935>   BEQ 'nocast
00032CF0 <AmiBlitz3.ab3@24936>   MOVE.l typetocast,a1
00032CF2 <AmiBlitz3.ab3@24939>   CMP.l a0,a1
00032CF6 <AmiBlitz3.ab3@24940>   BEQ 'ok
00032CFC <AmiBlitz3.ab3@24941>   CLR.l typetocast
00032D02 <AmiBlitz3.ab3@24942>   MOVE.l lasttoken,d1
00032D06 <AmiBlitz3.ab3@24943>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00032D0A <AmiBlitz3.ab3@24944>   BEQ 'isnull
00032D10 <AmiBlitz3.ab3@24947>   JMP errorconvertreturntype
00032D14 <AmiBlitz3.ab3@24956>   MOVEM.l (a7)+,a0/a1/d1
00032D18 <AmiBlitz3.ab3@24959> BRA.w do_AsmExit
00032D1E <AmiBlitz3.ab3@24961> error_convert_types2 JMP error_convert_types
00032D24 <AmiBlitz3.ab3@24977>   TST.b debugmode
00032D28 <AmiBlitz3.ab3@24978>    BEQ.w normret
00032D2C <AmiBlitz3.ab3@24979>   MOVE.w #$C305,D1        ; was #chkret,
00032D30 <AmiBlitz3.ab3@24980> BRA.w Atokejsr
00032D34 <AmiBlitz3.ab3@24987>   MOVE.w #$4E75,D1
00032D38 <AmiBlitz3.ab3@24988> BRA.w writeword
00032D3C <AmiBlitz3.ab3@24991> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
00032D40 <AmiBlitz3.ab3@24992> proclocals:  Ds.l 1                                        ;for debugga!
00032D42 <AmiBlitz3.ab3@24993> procnum:     Ds.w 1
00032D44 <AmiBlitz3.ab3@24994> procnum2:    Ds.w 1
00032D48 <AmiBlitz3.ab3@24995> prolineat:   Ds.l 1
00032D4E <AmiBlitz3.ab3@25000>    TST.w proceduremode
00032D52 <AmiBlitz3.ab3@25001>    BGT JUMP_sreterr
00032D56 <AmiBlitz3.ab3@25003>    CMP.w #-$7FF9,D0     ;was #$8007
00032D5A <AmiBlitz3.ab3@25004>    BEQ.w stateret
00032D5C <AmiBlitz3.ab3@25005>    MOVEQ.l #-$01,D1  ;statement flag
00032D60 <AmiBlitz3.ab3@25006> BRA.w do_function2
00032D66 <AmiBlitz3.ab3@25008> JUMP_sreterr JMP sreterr
00032D6C <AmiBlitz3.ab3@25012>   CLR.b skipfunc
00032D72 <AmiBlitz3.ab3@25013>   TST.l unusedfunc
00032D76 <AmiBlitz3.ab3@25014>   BEQ 'ex
00032D7A <AmiBlitz3.ab3@25015>   MOVEM.l d0-d7/a0-a6,-(a7)
00032D80 <AmiBlitz3.ab3@25016>   MOVE.l unusedfunc,d1
00032D86 <AmiBlitz3.ab3@25017>   LEA ptr_parameterstore,a5
00032D88 <AmiBlitz3.ab3@25020>   MOVE.l d1,a0
00032D8C <AmiBlitz3.ab3@25021>   LEA 12(a0),a2
00032D8E <AmiBlitz3.ab3@25022>   MOVE.l a5,a1
00032D90 <AmiBlitz3.ab3@25024>   CMPM.b (a1)+,(a2)+
00032D94 <AmiBlitz3.ab3@25025>   BNE 'neq
00032D96 <AmiBlitz3.ab3@25026>   TST.b (a2)
00032D9A <AmiBlitz3.ab3@25027>   BNE 'ch
00032D9C <AmiBlitz3.ab3@25028>   TST.b (a1)
00032DA0 <AmiBlitz3.ab3@25029>   BNE 'neq
00032DA8 <AmiBlitz3.ab3@25030>   MOVE.b #1,skipfunc
00032DAC <AmiBlitz3.ab3@25031>  BRA 'out
00032DAE <AmiBlitz3.ab3@25034>   MOVE.l (a0),d1
00032DB2 <AmiBlitz3.ab3@25035>   BNE 'ag
00032DB6 <AmiBlitz3.ab3@25038>   MOVEM.l (a7)+,d0-d7/a0-a6
00032DB8 <AmiBlitz3.ab3@25041> RTS
00032DBE <AmiBlitz3.ab3@25044> JUMP_dupprocerr  JMP dupprocerr
00032DC4 <AmiBlitz3.ab3@25045> JUMP_illprocperr JMP illprocperr
00032DCA <AmiBlitz3.ab3@25046> JUMP_toovarerr   JMP toovarerr
00032DD0 <AmiBlitz3.ab3@25047> JUMP_more6pard   JMP more6pard
00032DD8 <AmiBlitz3.ab3@25051>   CMP.w #-1,proceduremode                                  
00032DDC <AmiBlitz3.ab3@25052>    BEQ JUMP_sreterr
00032DE0 <AmiBlitz3.ab3@25053>   CMP.w #-$7FF9,D0      ; was #$8007
00032DE4 <AmiBlitz3.ab3@25054>    BEQ.w do_function_return
00032DEE <AmiBlitz3.ab3@25058>   MOVE.w oldqflag,instringon
00032DF4 <AmiBlitz3.ab3@25059>   MOVEA.l lastsourcepos,A5
00032DFA <AmiBlitz3.ab3@25061>   JSR getfunctionreturntype
00032E00 <AmiBlitz3.ab3@25062>   JSR get1bytemain
00032E06 <AmiBlitz3.ab3@25068>   TST.b declare
00032E0A <AmiBlitz3.ab3@25069>   BEQ 'l3
00032E12 <AmiBlitz3.ab3@25070>   MOVE.b #1,nowdeclare
00032E18 <AmiBlitz3.ab3@25074>   JSR errchx                                           ;writejumpoverfunction
00032E1E <AmiBlitz3.ab3@25078>   CLR.b fastfunc
00032E28 <AmiBlitz3.ab3@25079>   MOVE.l firstiff,firstiffstore
00032E30 <AmiBlitz3.ab3@25080>   CMP.l #"FAST",-1(a5)
00032E34 <AmiBlitz3.ab3@25081>   BNE 'nofast
00032E3A <AmiBlitz3.ab3@25082>   CMP.b #" ",3(a5)
00032E3E <AmiBlitz3.ab3@25083>   BNE 'nofast
00032E40 <AmiBlitz3.ab3@25084>   ADDQ.l #3,a5
00032E44 <AmiBlitz3.ab3@25087>     CMP.b #" ",(a5)
00032E48 <AmiBlitz3.ab3@25088>      BNE 'x1
00032E4A <AmiBlitz3.ab3@25089>     ADDQ #1,a5
00032E4E <AmiBlitz3.ab3@25090>  BRA 'x2
00032E54 <AmiBlitz3.ab3@25093>   MOVE.l a5,lastsourcepos
00032E5C <AmiBlitz3.ab3@25094>   MOVE.b #1,fastfunc
00032E64 <AmiBlitz3.ab3@25097>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032E68 <AmiBlitz3.ab3@25098>  BRA 'noopt
00032E6E <AmiBlitz3.ab3@25100>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032E72 <AmiBlitz3.ab3@25101>   BNE 'noopt                                               ;          "
00032E74 <AmiBlitz3.ab3@25102>   ADDQ.l #4,a5                                             ;          "
00032E78 <AmiBlitz3.ab3@25105>     CMP.b #" ",(a5)                                        ;          "
00032E7C <AmiBlitz3.ab3@25106>      BNE 'x1b                                              ;          "
00032E7E <AmiBlitz3.ab3@25107>     ADDQ #1,a5                                             ;          "
00032E82 <AmiBlitz3.ab3@25108>  BRA 'x2b
00032E88 <AmiBlitz3.ab3@25111>   MOVE.l a5,lastsourcepos                                  ;          "
00032E8E <AmiBlitz3.ab3@25112>   JSR makename2                                            ;          "
00032E92 <AmiBlitz3.ab3@25113>  BRA 'l1                                                   ;          "
00032E98 <AmiBlitz3.ab3@25116>   JSR makename2
00032E9E <AmiBlitz3.ab3@25117>   JSR checkused
00032EA4 <AmiBlitz3.ab3@25118>   TST.b skipfunc
00032EA8 <AmiBlitz3.ab3@25119>    BEQ 'l1
00032EAE <AmiBlitz3.ab3@25120>   JSR skipme
00032EB4 <AmiBlitz3.ab3@25121>   CLR.b fastfunc
00032EB6 <AmiBlitz3.ab3@25122>  RTS
00032EC0 <AmiBlitz3.ab3@25126>   MOVE.l linenumat,prolineat
00032EC6 <AmiBlitz3.ab3@25128>   ADDQ.w #1,procnum2
00032ECE <AmiBlitz3.ab3@25129>   MOVE.w procnum2(PC),procnum
00032ED4 <AmiBlitz3.ab3@25130>   MOVE.w D1,proceduremode
00032EDA <AmiBlitz3.ab3@25131>   CLR.w locvaroff
00032EDE <AmiBlitz3.ab3@25133>   CMP.w #$7B,D0   ;'{'
00032EE2 <AmiBlitz3.ab3@25134>    BNE.w JUMP_syntaxerr
00032EEA <AmiBlitz3.ab3@25136>    MOVE.b #1,infunctioncode
00032EF0 <AmiBlitz3.ab3@25138>   MOVEA.l tempvm,A0
00032EF8 <AmiBlitz3.ab3@25139>   MOVE.w $C(A0),memlibstat
00032EFE <AmiBlitz3.ab3@25140>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032F02 <AmiBlitz3.ab3@25141>   MOVE.w #$4EF9,D1  ;make a jump around the proc
00032F06 <AmiBlitz3.ab3@25142>    BSR.w writeword
00032F0C <AmiBlitz3.ab3@25143>    JSR addoff
00032F10 <AmiBlitz3.ab3@25144>    BSR.w writelong
00032F16 <AmiBlitz3.ab3@25146>    JSR findproc                                          ;findproc function
00032F1A <AmiBlitz3.ab3@25147>    BEQ.w JUMP_dupprocerr
00032F20 <AmiBlitz3.ab3@25148>    JSR addlabel
00032F26 <AmiBlitz3.ab3@25150>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032F2C <AmiBlitz3.ab3@25151>    MOVE.b #0,isfunc(a2)
00032F34 <AmiBlitz3.ab3@25152>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032F3C <AmiBlitz3.ab3@25154>   MOVE.l destpointer,$E(A2)    ;new!
00032F42 <AmiBlitz3.ab3@25155>   MOVE.l A2,currentfunction
00032F48 <AmiBlitz3.ab3@25157>   LEA nops8,A0
00032F4E <AmiBlitz3.ab3@25158>   LEA nopsf,A1
00032F52 <AmiBlitz3.ab3@25159>    BSR.w pokecode2
00032F58 <AmiBlitz3.ab3@25161>   TST.b debugmode
00032F5C <AmiBlitz3.ab3@25162>    BEQ.b 'nodebug
00032F5E <AmiBlitz3.ab3@25164>   MOVEQ.l #$04,D1
00032F64 <AmiBlitz3.ab3@25165>    JSR writetrap
00032F6E <AmiBlitz3.ab3@25166>   MOVE.l destpointer,proclocals
00032F72 <AmiBlitz3.ab3@25167>    BSR.w writelong
00032F76 <AmiBlitz3.ab3@25168>    BSR.w writelong
00032F7A <AmiBlitz3.ab3@25171>    LEA $16(A2),A4
00032F82 <AmiBlitz3.ab3@25172>   MOVE.b proceduremode+1,$5(A2)
00032F84 <AmiBlitz3.ab3@25173>   MOVEQ.l #$00,D6
00032F86 <AmiBlitz3.ab3@25174>   MOVEQ.l #$00,D5
00032F8C <AmiBlitz3.ab3@25175>    JSR get1bytemain
00032F90 <AmiBlitz3.ab3@25176>   CMP.w #$7D,D0        ; '}'
00032F94 <AmiBlitz3.ab3@25177>    BEQ.w 'done
00032F98 <AmiBlitz3.ab3@25181>    CMP.b #"@",d0
00032F9C <AmiBlitz3.ab3@25182>    BNE 'l2
00032F9E <AmiBlitz3.ab3@25183>    MOVE.l a0,-(a7)
00032FA4 <AmiBlitz3.ab3@25184>    MOVE.l currentfunction,a0
00032FAA <AmiBlitz3.ab3@25185>    CMP.b #31,$20(a0)                                       ;increase if morepars
00032FAE <AmiBlitz3.ab3@25186>    BNE 'l4
00032FB2 <AmiBlitz3.ab3@25187>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032FB8 <AmiBlitz3.ab3@25190>    JSR get1bytemain
00032FBA <AmiBlitz3.ab3@25191>    MOVE.l (a7)+,a0
00032FBE <AmiBlitz3.ab3@25195>    BSR.w getparameter
00032FC2 <AmiBlitz3.ab3@25196>    BSR.w fetchvars
00032FCA <AmiBlitz3.ab3@25197>   CMPI.l #$7,$4(A2)
00032FCE <AmiBlitz3.ab3@25198>    BNE.w 'notst
00032FD4 <AmiBlitz3.ab3@25199>   LEA stbuff,A0
00032FD6 <AmiBlitz3.ab3@25200>   MOVE.w D5,D1
00032FD8 <AmiBlitz3.ab3@25201>   LSL.w #2,D1
00032FDC <AmiBlitz3.ab3@25202>   MOVE.w D6,$0(A0,D1.W)
00032FE2 <AmiBlitz3.ab3@25203>   MOVE.w $4(A3),$2(A0,D1.W)
00032FE4 <AmiBlitz3.ab3@25204>   ADDQ.w #1,D5
00032FE6 <AmiBlitz3.ab3@25205>   MOVEQ.l #$07,D2
00032FEA <AmiBlitz3.ab3@25206>  BRA.w 'pgot
00032FEE <AmiBlitz3.ab3@25209>   MOVE.w #$2940,D1
00032FF0 <AmiBlitz3.ab3@25210>   MOVEQ.l #$03,D2
00032FF8 <AmiBlitz3.ab3@25211>   BTST #$0,flagmask+1
00032FFC <AmiBlitz3.ab3@25212>    BNE.w 'sgot
00033004 <AmiBlitz3.ab3@25213>   CMPI.l #$100,$4(A2)
00033008 <AmiBlitz3.ab3@25214>    BCC.w JUMP_illprocperr
0003300C <AmiBlitz3.ab3@25215>   MOVE.w $6(A2),D2
00033010 <AmiBlitz3.ab3@25216>   CMP.w #$2,D2
00033014 <AmiBlitz3.ab3@25217>    BHI.w 'sgot
00033018 <AmiBlitz3.ab3@25218>    BEQ.w 'wgot
0003301C <AmiBlitz3.ab3@25219>   EORI.w #$3000,D1
00033020 <AmiBlitz3.ab3@25220>  BRA.w 'sgot
00033024 <AmiBlitz3.ab3@25223>   ORI.w #$1000,D1
00033026 <AmiBlitz3.ab3@25226>   OR.w D6,D1
0003302C <AmiBlitz3.ab3@25228>   TST.b fpu
00033030 <AmiBlitz3.ab3@25229>   BEQ 'nofpu
00033034 <AmiBlitz3.ab3@25230>   CMP.b #5,d2
00033038 <AmiBlitz3.ab3@25231>   BNE 'nofpu
0003303C <AmiBlitz3.ab3@25232>   CMP.w #6,d6
00033040 <AmiBlitz3.ab3@25233>   BLT 'l10a
00033046 <AmiBlitz3.ab3@25234>   CMP.l #newtype_double,a2
0003304A <AmiBlitz3.ab3@25235>   BEQ JUMP_more6pard
0003304E <AmiBlitz3.ab3@25236>  BRA 'nofpu
00033054 <AmiBlitz3.ab3@25239>   MOVE.l #$f22c6400,d1
00033058 <AmiBlitz3.ab3@25240>   MOVEM.l d0/a4,-(a7)
0003305A <AmiBlitz3.ab3@25241>   MOVE.l d6,d0
0003305C <AmiBlitz3.ab3@25242>   ASL.l #7,d0
0003305E <AmiBlitz3.ab3@25243>   OR.w d0,d1
00033064 <AmiBlitz3.ab3@25244>   CMP.l #newtype_double,a2
00033068 <AmiBlitz3.ab3@25245>   BNE 'l5
0003306E <AmiBlitz3.ab3@25246>   OR.l #$1000,d1
00033072 <AmiBlitz3.ab3@25249>   BSR writelong
00033076 <AmiBlitz3.ab3@25250>   MOVE.w 4(a3),d1
0003307A <AmiBlitz3.ab3@25251>   BSR writeword
0003307E <AmiBlitz3.ab3@25252>   MOVEM.l (a7)+,a4/d0
00033082 <AmiBlitz3.ab3@25253>  BRA 'pgot
00033084 <AmiBlitz3.ab3@25257>   MOVE.l A4,-(A7)
00033088 <AmiBlitz3.ab3@25259>    CMP.w #6,d6
0003308C <AmiBlitz3.ab3@25260>    BLT 'l10
00033090 <AmiBlitz3.ab3@25261>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00033092 <AmiBlitz3.ab3@25262>    ADD.w d6,d1
00033098 <AmiBlitz3.ab3@25263>    JSR Atokejsr
0003309E <AmiBlitz3.ab3@25264>    TST.w dontwrite_nomemleft
000330A2 <AmiBlitz3.ab3@25265>    BNE 'l10
000330A8 <AmiBlitz3.ab3@25266>    MOVE.l data1start,d1
000330AE <AmiBlitz3.ab3@25267>    MOVE.l destpointer,a4
000330B2 <AmiBlitz3.ab3@25268>    ADD.l d1,-6(a4)
000330B8 <AmiBlitz3.ab3@25269>    MOVE.l destpointer,d1
000330BA <AmiBlitz3.ab3@25270>    SUBQ.l #6,d1
000330C0 <AmiBlitz3.ab3@25271>    SUB.l destbufferstart,d1
000330C2 <AmiBlitz3.ab3@25273>    MOVE.l d2,-(a7)
000330C4 <AmiBlitz3.ab3@25274>    MOVE.l d1,d2
000330CA <AmiBlitz3.ab3@25275>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
000330CC <AmiBlitz3.ab3@25276>    MOVE.l (a7)+,d2
000330D2 <AmiBlitz3.ab3@25277>    MOVE.l destpointer,a4
000330D6 <AmiBlitz3.ab3@25278>    CMP.w #2,d2
000330DA <AmiBlitz3.ab3@25279>    BNE 'nw1
000330E0 <AmiBlitz3.ab3@25281>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
000330E8 <AmiBlitz3.ab3@25282>    ADD.l #2,-6(a4)
000330EC <AmiBlitz3.ab3@25285>    CMP.w #1,d2
000330F0 <AmiBlitz3.ab3@25286>    BNE 'nb
000330F6 <AmiBlitz3.ab3@25287>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
000330FE <AmiBlitz3.ab3@25288>    ADD.l #3,-6(a4)
00033104 <AmiBlitz3.ab3@25291>    MOVE.w $4(a3),-2(a4)
00033108 <AmiBlitz3.ab3@25292>  BRA 'ne1
0003310C <AmiBlitz3.ab3@25296>   BSR.w writeword                                          ;write storeparameter
00033110 <AmiBlitz3.ab3@25299>   MOVE.w $4(A3),D1
00033114 <AmiBlitz3.ab3@25300>    BSR.w writeword
00033116 <AmiBlitz3.ab3@25303>   MOVEA.l (A7)+,A4
0003311C <AmiBlitz3.ab3@25307>   CLR.l functionreturntype
0003311E <AmiBlitz3.ab3@25309>   ADDQ.w #1,D6
00033122 <AmiBlitz3.ab3@25310>   CMP.w #11,D6          ; was #7                            ;max function parameters
00033126 <AmiBlitz3.ab3@25311>    BCC.w JUMP_toovarerr
0003312C <AmiBlitz3.ab3@25313>   MOVE.l currentfunction,a0
00033130 <AmiBlitz3.ab3@25314>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)             ;-4 because d6 is increment before
00033132 <AmiBlitz3.ab3@25316>   MOVE.b D2,(A4)+
00033136 <AmiBlitz3.ab3@25317>   CMP.w #$2C,D0      ;','
0003313A <AmiBlitz3.ab3@25318>    BNE.w 'nomore
00033140 <AmiBlitz3.ab3@25319>    JSR get1bytemain
00033144 <AmiBlitz3.ab3@25333>  BRA.w 'more
00033148 <AmiBlitz3.ab3@25336>   CMP.w #$7D,D0
0003314C <AmiBlitz3.ab3@25337>    BNE.w JUMP_syntaxerr
00033152 <AmiBlitz3.ab3@25340>   MOVEA.l currentfunction,A2
00033154 <AmiBlitz3.ab3@25341>   LSL.w #4,D5
00033156 <AmiBlitz3.ab3@25342>   OR.w D5,D6
0003315A <AmiBlitz3.ab3@25343>   MOVE.b D6,$4(A2)
0003315C <AmiBlitz3.ab3@25344>   LSR.w #4,D6
00033160 <AmiBlitz3.ab3@25345>    BEQ.w 'nostrings
00033166 <AmiBlitz3.ab3@25346>   LEA stbuff,A0
00033168 <AmiBlitz3.ab3@25347>   SUBQ.w #1,D6
0003316A <AmiBlitz3.ab3@25353>     MOVE.w D6,D1                                           ;function stringpars
0003316C <AmiBlitz3.ab3@25354>     LSL.w #2,D1                                            ;stringsize was 2
0003316E <AmiBlitz3.ab3@25357>       LSL.w #1,d1
00033170 <AmiBlitz3.ab3@25358>       ADDQ.w #4,d1
00033172 <AmiBlitz3.ab3@25361>     ADDQ.w #8,D1
00033178 <AmiBlitz3.ab3@25362>     MOVE.w D1,funcst+2
0003317E <AmiBlitz3.ab3@25363>     MOVE.l funcst,D1
00033182 <AmiBlitz3.ab3@25364>     BSR.w writelong
00033184 <AmiBlitz3.ab3@25365>     MOVE.w (A0)+,D1
00033188 <AmiBlitz3.ab3@25367>     CMP.b #5,d1
0003318C <AmiBlitz3.ab3@25368>     BLE 's1
00033190 <AmiBlitz3.ab3@25369>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00033194 <AmiBlitz3.ab3@25370>     BSR writeword    ; was writeinstruction  tomsmart1
00033196 <AmiBlitz3.ab3@25371>     MOVE.w D6,D1                                           ;function stringpars
00033198 <AmiBlitz3.ab3@25372>     LSL.w #2,D1                                            ;stringsize was 2
0003319A <AmiBlitz3.ab3@25374>       LSL.w #1,d1
0003319C <AmiBlitz3.ab3@25376>     ADDQ.w #8,D1
000331A0 <AmiBlitz3.ab3@25377>     BSR writeword
000331A4 <AmiBlitz3.ab3@25378>   BRA 's2
000331AA <AmiBlitz3.ab3@25382>     OR.w movedna3,D1
000331AE <AmiBlitz3.ab3@25383>      BSR.w writeword
000331B4 <AmiBlitz3.ab3@25386>     MOVE.w (A0)+,least+2
000331BA <AmiBlitz3.ab3@25387>     MOVE.l least,D1
000331BE <AmiBlitz3.ab3@25388>      BSR.w writelong
000331C0 <AmiBlitz3.ab3@25389>     MOVE.l A0,-(A7)
000331C4 <AmiBlitz3.ab3@25390>     MOVE.w #$C700,D1
000331C8 <AmiBlitz3.ab3@25391>      BSR.w Atokejsr
000331CA <AmiBlitz3.ab3@25392>     MOVEA.l (A7)+,A0
000331CE <AmiBlitz3.ab3@25393>   DBF D6,'stloop
000331D4 <AmiBlitz3.ab3@25396> JMP get1bytemain
000331DA <AmiBlitz3.ab3@25400>   MOVE.w dontwrite_nomemleft,D1
000331DE <AmiBlitz3.ab3@25401>    BNE.w 'skip
000331E4 <AmiBlitz3.ab3@25402>   MOVE.l destpointer,-(A7)
000331EA <AmiBlitz3.ab3@25404>   MOVE.l A0,destpointer
000331F0 <AmiBlitz3.ab3@25405>   MOVE.l linksize,D1
000331F4 <AmiBlitz3.ab3@25406>    BSR.w writelong                                         ;writefunctions jumppos
000331FA <AmiBlitz3.ab3@25408>    TST.b fastfunc
000331FE <AmiBlitz3.ab3@25409>    BNE 'skip1
00033202 <AmiBlitz3.ab3@25411>   MOVE.w #$CC00,D1      ; was #clrloc
00033206 <AmiBlitz3.ab3@25412>    BSR.w tokejsr2                                          ;write clearvars
0003320C <AmiBlitz3.ab3@25415>   MOVE.l (A7)+,destpointer
0003320E <AmiBlitz3.ab3@25418> RTS
00033214 <AmiBlitz3.ab3@25421> JUMP_errormsg_nofast  JMP errormsg_nofast
0003321A <AmiBlitz3.ab3@25426>   MOVEA.l currentfunction,A2
0003321E <AmiBlitz3.ab3@25427>   MOVEA.l $E(A2),A0          ;pc of proc
00033222 <AmiBlitz3.ab3@25428>   MOVE.w $6(A2),D1
00033226 <AmiBlitz3.ab3@25429>    BEQ.w 'skiplink
0003322C <AmiBlitz3.ab3@25430>   MOVE.w D1,linksize+2
00033230 <AmiBlitz3.ab3@25431>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00033234 <AmiBlitz3.ab3@25432>    BNE.w 'howdy
00033236 <AmiBlitz3.ab3@25436>   ADDQ.w #6,A0
0003323A <AmiBlitz3.ab3@25437>   MOVE.l A0,$E(A2)
0003323E <AmiBlitz3.ab3@25438>  BRA.w linkput
00033240 <AmiBlitz3.ab3@25443>   MOVE.l A0,-(A7)
00033244 <AmiBlitz3.ab3@25444>    BSR.w linkput
00033246 <AmiBlitz3.ab3@25445>   MOVEA.l (A7)+,A0
0003324A <AmiBlitz3.ab3@25446>   LEA $A(A0),A0
00033250 <AmiBlitz3.ab3@25447>   MOVEA.l currentfunction,A2
00033254 <AmiBlitz3.ab3@25448>  BRA.w 'cont
00033258 <AmiBlitz3.ab3@25451>   MOVE.w $8(A2),D1
0003325C <AmiBlitz3.ab3@25452>    BNE.w 'cont
00033260 <AmiBlitz3.ab3@25453>   LEA $10(A0),A0
00033264 <AmiBlitz3.ab3@25454>   MOVE.l A0,$E(A2)
00033266 <AmiBlitz3.ab3@25455>  RTS
0003326C <AmiBlitz3.ab3@25458>    MOVE.w dontwrite_nomemleft,D1                                     ;writeallocmem for functions (after releasemem called)
00033270 <AmiBlitz3.ab3@25459>    BNE.w 'contskip
00033276 <AmiBlitz3.ab3@25462>    TST.b fastfunc
0003327A <AmiBlitz3.ab3@25463>    BNE JUMP_errormsg_nofast
00033280 <AmiBlitz3.ab3@25465>   MOVE.l destpointer,-(A7)
00033286 <AmiBlitz3.ab3@25466>   MOVE.l A0,destpointer
0003328A <AmiBlitz3.ab3@25467>   MOVE.w #$4EB9,D1      ;jsr
0003328E <AmiBlitz3.ab3@25468>    BSR.w writeword
00033294 <AmiBlitz3.ab3@25469>    JSR addoff
00033298 <AmiBlitz3.ab3@25470>    BSR.w writelong
0003329A <AmiBlitz3.ab3@25472>   MOVEA.l (A7)+,A0
000332A0 <AmiBlitz3.ab3@25473>   MOVEA.l destpointer,A1
000332A2 <AmiBlitz3.ab3@25474>   MOVE.l A0,-(A1)
000332A8 <AmiBlitz3.ab3@25475>   MOVE.l A0,destpointer
000332AC <AmiBlitz3.ab3@25478>   MOVE.w $8(A2),D4
000332B0 <AmiBlitz3.ab3@25479>    BPL.w 'linky
000332B4 <AmiBlitz3.ab3@25480>   MOVE.w #$C004,D1   ; was  #newmem
000332B8 <AmiBlitz3.ab3@25481>    BSR.w tokejsr2
000332BE <AmiBlitz3.ab3@25482>   MOVEA.l currentfunction,A2
000332C2 <AmiBlitz3.ab3@25483>   MOVE.w $8(A2),D4
000332C6 <AmiBlitz3.ab3@25484>   ANDI.w #$7FFF,D4        ;#32767,
000332CA <AmiBlitz3.ab3@25487>    BEQ.w 'skipstat
000332CE <AmiBlitz3.ab3@25491>   MOVE.b $4(A2),D1
000332D2 <AmiBlitz3.ab3@25492>   ANDI.w #$F,D1
000332D4 <AmiBlitz3.ab3@25493>   MOVE.w D1,-(A7)
000332D8 <AmiBlitz3.ab3@25494>   CMP.w #$5,D1
000332DC <AmiBlitz3.ab3@25495>    BCS.w 'npush
000332E0 <AmiBlitz3.ab3@25496>   MOVE.w #$2F04,D1
000332E4 <AmiBlitz3.ab3@25497>    BSR.w writeword
000332EA <AmiBlitz3.ab3@25500>   MOVE.l locdatast,D3
000332F0 <AmiBlitz3.ab3@25501>    JSR datastart
000332F4 <AmiBlitz3.ab3@25502>   MOVE.w #$C501,D1    ; was #localstat
000332F8 <AmiBlitz3.ab3@25503>    BSR.w tokejsr2
000332FA <AmiBlitz3.ab3@25505>   MOVE.w (A7)+,D1
000332FE <AmiBlitz3.ab3@25506>   CMP.w #$5,D1
00033302 <AmiBlitz3.ab3@25507>    BCS.w 'skipstat
00033306 <AmiBlitz3.ab3@25508>   MOVE.w #$281F,D1
0003330A <AmiBlitz3.ab3@25509>    BSR.w writeword
0003330E <AmiBlitz3.ab3@25512>   MOVE.w #$4E75,D1
00033312 <AmiBlitz3.ab3@25513> BRA.w writeword
00033318 <AmiBlitz3.ab3@25517>   LEA mwait,A0
0003331E <AmiBlitz3.ab3@25518>   LEA mwaitf,A1
00033322 <AmiBlitz3.ab3@25519> BRA.w pokecode
00033328 <AmiBlitz3.ab3@25522> JUMP_laberr    JMP laberr
0003332E <AmiBlitz3.ab3@25523> JUMP_typeerr   JMP typeerr
00033334 <AmiBlitz3.ab3@25524> JUMP_dupofferr JMP dupofferr
00033338 <AmiBlitz3.ab3@25527>   CMP.w #$2E,D0           ;'.'
0003333C <AmiBlitz3.ab3@25528>   BNE.w JUMP_syntaxerr
00033342 <AmiBlitz3.ab3@25529>   JSR getparameter2
00033346 <AmiBlitz3.ab3@25530>   BEQ.w JUMP_laberr
0003334C <AmiBlitz3.ab3@25531>   LEA newtypebase,A2
00033352 <AmiBlitz3.ab3@25532>   JSR findtype
00033356 <AmiBlitz3.ab3@25533>   BNE.w 'ok1
0003335E <AmiBlitz3.ab3@25534>   CMPI.l #MaxByte,$4(A2)    ; was #$FF
00033362 <AmiBlitz3.ab3@25535>   BNE.w JUMP_typeerr
00033366 <AmiBlitz3.ab3@25536>  BRA.w 'ok2
0003336C <AmiBlitz3.ab3@25539>   JSR addlabel
00033370 <AmiBlitz3.ab3@25542>   CLR.l $4(A2)
00033376 <AmiBlitz3.ab3@25543>   MOVE.l A2,thistype
0003337C <AmiBlitz3.ab3@25544>   CLR.l prevtype
00033382 <AmiBlitz3.ab3@25545>   CLR.w typelen
00033388 <AmiBlitz3.ab3@25546>   CLR.w linemode
0003338E <AmiBlitz3.ab3@25547>   JSR reget
00033392 <AmiBlitz3.ab3@25548>   BNE.w typemode
00033394 <AmiBlitz3.ab3@25549> RTS
00033398 <AmiBlitz3.ab3@25553>   CMP.w #-$7FFE,D0      ; was #$8002
0003339C <AmiBlitz3.ab3@25554>   BEQ.w doend2
000333A6 <AmiBlitz3.ab3@25557>   MOVE.w oldqflag,instringon
000333AC <AmiBlitz3.ab3@25558>   MOVEA.l lastsourcepos,A5
000333AE <AmiBlitz3.ab3@25560>   MOVEQ.l #$00,D6      ;not pointer
000333B2 <AmiBlitz3.ab3@25561>   CMP.w #$2A,D0        ;'*'
000333B6 <AmiBlitz3.ab3@25562>   BNE.w 'skip
000333B8 <AmiBlitz3.ab3@25563>   MOVEQ.l #$01,D6
000333BE <AmiBlitz3.ab3@25564>   JSR get1bytemain
000333C2 <AmiBlitz3.ab3@25565>  BRA.w 'skipv
000333C6 <AmiBlitz3.ab3@25568>   CMP.w #$40,D0         ;'@'
000333CA <AmiBlitz3.ab3@25569>   BNE.w 'skipv
000333CC <AmiBlitz3.ab3@25570>   MOVEQ.l #$05,D6
000333D2 <AmiBlitz3.ab3@25571>   JSR get1bytemain
000333D8 <AmiBlitz3.ab3@25574>   MOVE.w D6,flagmask
000333DE <AmiBlitz3.ab3@25575>   JSR getparameter2
000333E2 <AmiBlitz3.ab3@25576>   BEQ.w JUMP_syntaxerr
000333E8 <AmiBlitz3.ab3@25577>   MOVEA.l thistype,A2
000333EA <AmiBlitz3.ab3@25578>   ADDQ.w #4,A2
000333F0 <AmiBlitz3.ab3@25579>   JSR findvariable2
000333F4 <AmiBlitz3.ab3@25580>   BEQ.w JUMP_dupofferr     ;beq    .skip2
000333FA <AmiBlitz3.ab3@25582>   JSR addlabel
000333FC <AmiBlitz3.ab3@25585>   MOVE.l A2,-(A7)
00033400 <AmiBlitz3.ab3@25586>   CMP.w #$2E,D0           ;'.'
00033404 <AmiBlitz3.ab3@25587>    BEQ.w 'skip3
00033408 <AmiBlitz3.ab3@25588>   CMP.w #$24,D0           ;'$'
0003340C <AmiBlitz3.ab3@25589>    BNE.w 'notstring
00033412 <AmiBlitz3.ab3@25590>   MOVE.l #newtype_string,D2
00033418 <AmiBlitz3.ab3@25591>    JSR get1bytemain
0003341C <AmiBlitz3.ab3@25592>  BRA.w 'skip4a
00033422 <AmiBlitz3.ab3@25595>   MOVE.l prevtype,D2
00033426 <AmiBlitz3.ab3@25596>   BEQ.w JUMP_notypeerr2
0003342A <AmiBlitz3.ab3@25597>  BRA.w 'skip4
00033430 <AmiBlitz3.ab3@25600>   JSR getparameter2
00033434 <AmiBlitz3.ab3@25601>    BEQ.w JUMP_syntaxerr
0003343A <AmiBlitz3.ab3@25602>   LEA newtypebase,A2
00033440 <AmiBlitz3.ab3@25603>    JSR findtype
00033444 <AmiBlitz3.ab3@25604>    BEQ.w 'gotit
0003344C <AmiBlitz3.ab3@25605>   BTST #$0,flagmask+1
00033450 <AmiBlitz3.ab3@25606>    BEQ.w JUMP_notypeerr2
00033456 <AmiBlitz3.ab3@25610>   JSR addlabel
0003345E <AmiBlitz3.ab3@25615>   MOVE.w linenumat+2,$8(A2)
00033466 <AmiBlitz3.ab3@25616>   MOVE.l #MaxByte,$4(A2)       ; was $FF  ;set to pointer crap
00033468 <AmiBlitz3.ab3@25619>   MOVE.l A2,D2
0003346E <AmiBlitz3.ab3@25622>   CMP.l #newtype_byte,D2
00033472 <AmiBlitz3.ab3@25623>    BEQ.w 'byte
00033478 <AmiBlitz3.ab3@25626>   ADDQ.w #1,typelen
00033480 <AmiBlitz3.ab3@25627>   BCLR #$0,typelen+1
00033482 <AmiBlitz3.ab3@25630>   MOVEQ.l #$00,D3
00033484 <AmiBlitz3.ab3@25631>   MOVEA.l D2,A2
0003348A <AmiBlitz3.ab3@25632>   MOVE.l A2,prevtype
0003348E <AmiBlitz3.ab3@25633>   MOVE.w $8(A2),D3
00033490 <AmiBlitz3.ab3@25634>   MOVEA.l (A7)+,A2
00033494 <AmiBlitz3.ab3@25635>   MOVE.l D2,$A(A2)
00033496 <AmiBlitz3.ab3@25636>   MOVEQ.l #$00,D4
0003349C <AmiBlitz3.ab3@25637>   MOVE.w typelen,D4
000334A0 <AmiBlitz3.ab3@25638>   MOVE.w D4,$4(A2)
000334A8 <AmiBlitz3.ab3@25639>   BTST #$0,flagmask+1
000334AC <AmiBlitz3.ab3@25640>    BEQ.w 'skipz
000334AE <AmiBlitz3.ab3@25641>   MOVEQ.l #$04,D3
000334B2 <AmiBlitz3.ab3@25644>   CMP.w #$5B,D0            ;'['
000334B6 <AmiBlitz3.ab3@25645>    BNE.w 'skipzz
000334BA <AmiBlitz3.ab3@25649>   MOVEM.l D3-D4/A2,-(A7)
000334BE <AmiBlitz3.ab3@25650>    BSR.w evalconst3
000334C2 <AmiBlitz3.ab3@25651>   CMP.w #$5D,D0            ;']'
000334C6 <AmiBlitz3.ab3@25652>    BNE.w JUMP_syntaxerr
000334C8 <AmiBlitz3.ab3@25653>   TST.w D6
000334CC <AmiBlitz3.ab3@25654>    BNE.w JUMP_fpconerr
000334CE <AmiBlitz3.ab3@25655>   MOVE.l D3,D1
000334D2 <AmiBlitz3.ab3@25656>   MOVEM.l (A7)+,D3-D4/A2
000334D8 <AmiBlitz3.ab3@25657>    JSR get1bytemain
000334DC <AmiBlitz3.ab3@25658>   MOVE.w D1,$8(A2)
000334E0 <AmiBlitz3.ab3@25659>   MULU.l d1,d3                                             ;>32k fix was mulu.w
000334E8 <AmiBlitz3.ab3@25660>   ORI.w #$2,flagmask
000334EA <AmiBlitz3.ab3@25663>   ADD.l D3,D4
000334F0 <AmiBlitz3.ab3@25666>     CMP.l #65532,d4
000334F4 <AmiBlitz3.ab3@25672>   BCC JUMP_toolongerr
000334FC <AmiBlitz3.ab3@25673>   MOVE.w flagmask,$6(A2)
00033502 <AmiBlitz3.ab3@25674>   MOVE.w D4,typelen
00033504 <AmiBlitz3.ab3@25675> RTS
0003350A <AmiBlitz3.ab3@25678> JUMP_badenderr  JMP badenderr
00033510 <AmiBlitz3.ab3@25679> JUMP_noiferr    JMP noiferr
00033516 <AmiBlitz3.ab3@25680> JUMP_toolongerr JMP toolongerr
0003351C <AmiBlitz3.ab3@25681> JUMP_fpconerr   JMP fpconerr
00033522 <AmiBlitz3.ab3@25685>   MOVE.l firstiff,D0
00033526 <AmiBlitz3.ab3@25686>    BEQ.w JUMP_noiferr
00033528 <AmiBlitz3.ab3@25687>   MOVEA.l D0,A0
0003352C <AmiBlitz3.ab3@25688>   MOVE.w $C(A0),D0
00033530 <AmiBlitz3.ab3@25689>   ANDI.w #$FF,D0
00033532 <AmiBlitz3.ab3@25690>   CMP.w D0,D1
00033536 <AmiBlitz3.ab3@25691>    BNE.w JUMP_badenderr
0003353A <AmiBlitz3.ab3@25694>   CMP.w #$1,D1
0003353E <AmiBlitz3.ab3@25695>   BNE.w 'calcbra
00033542 <AmiBlitz3.ab3@25697>   MOVE.w #$6000,D1
00033548 <AmiBlitz3.ab3@25700>     TST.b fast
0003354C <AmiBlitz3.ab3@25701>     BEQ 'l1
00033552 <AmiBlitz3.ab3@25702>     OR.l #$ff,d1
00033556 <AmiBlitz3.ab3@25707>   BSR.w writeword
0003355C <AmiBlitz3.ab3@25708>   MOVEA.l destpointer,A1
00033560 <AmiBlitz3.ab3@25709>   MOVE.l $4(A0),D1
00033562 <AmiBlitz3.ab3@25710>   SUB.l A1,D1
00033568 <AmiBlitz3.ab3@25713>     TST.b fast
0003356C <AmiBlitz3.ab3@25714>     BEQ 'l2
00033570 <AmiBlitz3.ab3@25715>     BSR writelong
00033574 <AmiBlitz3.ab3@25716>   BRA 'calcbra
00033578 <AmiBlitz3.ab3@25721>   BSR.w writeword
0003357C <AmiBlitz3.ab3@25724>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00033582 <AmiBlitz3.ab3@25725>   MOVE.l destpointer,D1
00033584 <AmiBlitz3.ab3@25726>   SUB.l A1,D1
0003358A <AmiBlitz3.ab3@25729>     TST.b fast
0003358E <AmiBlitz3.ab3@25730>     BEQ 'l3
00033590 <AmiBlitz3.ab3@25731>     ADDQ.l #4,D1
00033596 <AmiBlitz3.ab3@25732>     MOVE.w dontwrite_nomemleft,D0
0003359A <AmiBlitz3.ab3@25733>     BNE.w 'skip
0003359E <AmiBlitz3.ab3@25734>     MOVE.l d1,-$4(a1)
000335A2 <AmiBlitz3.ab3@25735>   BRA 'skip
000335A4 <AmiBlitz3.ab3@25740>   ADDQ.l #2,d1
000335AA <AmiBlitz3.ab3@25742>   TST.w dontwrite_nomemleft
000335AE <AmiBlitz3.ab3@25744>   BNE 'skip
000335B4 <AmiBlitz3.ab3@25746>   CMP.l #MinWordSgnd,D1
000335B8 <AmiBlitz3.ab3@25747>   BCC.w JUMP_bigiferr
000335BC <AmiBlitz3.ab3@25749>   MOVE.w D1,-$2(A1)
000335BE <AmiBlitz3.ab3@25752> RTS
000335C4 <AmiBlitz3.ab3@25754> JUMP_bigiferr JMP bigiferr
000335CE <AmiBlitz3.ab3@25759>   MOVE.w oldqflag,instringon
000335D4 <AmiBlitz3.ab3@25760>   MOVEA.l lastsourcepos,A5
000335D6 <AmiBlitz3.ab3@25763>   MOVEQ.l #$01,D1
000335DA <AmiBlitz3.ab3@25764> BRA.w doendif
000335E4 <AmiBlitz3.ab3@25768>   MOVE.w oldqflag,instringon
000335EA <AmiBlitz3.ab3@25769>   MOVEA.l lastsourcepos,A5
000335EC <AmiBlitz3.ab3@25772>   MOVEQ.l #$00,D1
000335F0 <AmiBlitz3.ab3@25775>   BSR.w doendif3
000335F4 <AmiBlitz3.ab3@25776>   BSR.w freetheifz
000335FA <AmiBlitz3.ab3@25777> JMP get1bytemain
00033600 <AmiBlitz3.ab3@25781>   MOVE.l (A0),firstiff
00033602 <AmiBlitz3.ab3@25782>   MOVEA.l A0,A1
00033604 <AmiBlitz3.ab3@25783>   MOVEQ.l #$0E,D0
0003360A <AmiBlitz3.ab3@25784>   MOVEA.l _execbase,A6
00033610 <AmiBlitz3.ab3@25787>   MOVE.l mempool,a0
00033614 <AmiBlitz3.ab3@25788> JMP _FreePooled(A6)
0003361A <AmiBlitz3.ab3@25792> JUMP_modeerr JMP modeerr
00033620 <AmiBlitz3.ab3@25793> JUMP_interr3 JMP interr3
00033626 <AmiBlitz3.ab3@25794> JUMP_interr JMP interr
0003362C <AmiBlitz3.ab3@25798>   JSR get1bytemain
00033630 <AmiBlitz3.ab3@25801>   BEQ.w 'done
00033638 <AmiBlitz3.ab3@25803>   CMP.l #"noa7",-1(a5)
0003363C <AmiBlitz3.ab3@25804>   BNE 'l1
00033642 <AmiBlitz3.ab3@25805>   JSR get1bytemain
00033648 <AmiBlitz3.ab3@25806>   JSR get1bytemain
0003364E <AmiBlitz3.ab3@25807>   JSR get1bytemain
00033656 <AmiBlitz3.ab3@25808>   MOVE.w #$3a,lastchar
0003365A <AmiBlitz3.ab3@25809>  BRA 'done
00033660 <AmiBlitz3.ab3@25812>   CMP.w #"d0",-1(a5)
00033664 <AmiBlitz3.ab3@25813>   BNE 'l2
0003366C <AmiBlitz3.ab3@25814>   MOVE.b #1,returncode
00033672 <AmiBlitz3.ab3@25815>   CLR.w lastchar
00033676 <AmiBlitz3.ab3@25816>  BRA 'done
0003367A <AmiBlitz3.ab3@25819>   CMP.w #$80d7,d0
0003367E <AmiBlitz3.ab3@25820>   BNE 'loop
00033684 <AmiBlitz3.ab3@25821>   JSR skiprest
00033686 <AmiBlitz3.ab3@25822>  RTS
0003368A <AmiBlitz3.ab3@25826>   BSR.w 'doend3
00033690 <AmiBlitz3.ab3@25827>   JSR reget
00033694 <AmiBlitz3.ab3@25828>   BNE.w 'loop
00033696 <AmiBlitz3.ab3@25829>  RTS
0003369A <AmiBlitz3.ab3@25832>   CMP.w #-$7FFF,D0        ; was #$8001
0003369E <AmiBlitz3.ab3@25833>    BNE.w 'nottype
000336A4 <AmiBlitz3.ab3@25834>   MOVE.w linemode,D1
000336A8 <AmiBlitz3.ab3@25835>    BNE.w JUMP_modeerr
000336AE <AmiBlitz3.ab3@25836>   ADDQ.w #1,typelen
000336B6 <AmiBlitz3.ab3@25837>   BCLR #$0,typelen+1
000336BC <AmiBlitz3.ab3@25838>   MOVEA.l thistype,A0
000336C4 <AmiBlitz3.ab3@25839>   MOVE.w typelen,$8(A0)
000336CC <AmiBlitz3.ab3@25840>   MOVE.w #$FFFF,linemode        ; was -1
000336D2 <AmiBlitz3.ab3@25841>  JMP get1bytemain
000336D6 <AmiBlitz3.ab3@25844>   CMP.w #-$7FF5,D0    ; was #$800b
000336DA <AmiBlitz3.ab3@25845>    BEQ.w mydoendif
000336DE <AmiBlitz3.ab3@25848>   CMP.w #-$7FF4,D0    ; was #$800c
000336E2 <AmiBlitz3.ab3@25849>    BEQ.w dowend2
000336E6 <AmiBlitz3.ab3@25852>   CMP.w #-$7FF8,D0    ; was #$8008
000336EA <AmiBlitz3.ab3@25853>    BNE.w 'notstate
000336EE <AmiBlitz3.ab3@25858>  BRA.w endstate
000336F2 <AmiBlitz3.ab3@25861>   CMP.w #-$7FF7,D0        ; was #$8009
000336F6 <AmiBlitz3.ab3@25862>    BNE.w 'notfunc
000336FC <AmiBlitz3.ab3@25864>    TST.b fpu
00033700 <AmiBlitz3.ab3@25865>    BEQ 'nof
00033706 <AmiBlitz3.ab3@25866>    MOVEA.l currentfunction,A0
0003370C <AmiBlitz3.ab3@25867>    CMP.l #0,a0
00033710 <AmiBlitz3.ab3@25868>    BEQ 'nof
00033716 <AmiBlitz3.ab3@25869>    CMP.b #5,$5(a0)
0003371A <AmiBlitz3.ab3@25870>     BNE 'nof
00033720 <AmiBlitz3.ab3@25871>    MOVE.l #$f23c5000,d1
00033724 <AmiBlitz3.ab3@25872>    BSR writelong
00033728 <AmiBlitz3.ab3@25873>    MOVE.w #0,d1
0003372C <AmiBlitz3.ab3@25874>    BSR writeword
00033730 <AmiBlitz3.ab3@25878>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00033734 <AmiBlitz3.ab3@25879>    BSR.w writeword
0003373A <AmiBlitz3.ab3@25880>   MOVEA.l currentfunction,A0
00033740 <AmiBlitz3.ab3@25882>   CMP.l #0,a0
00033744 <AmiBlitz3.ab3@25883>   BEQ 'state
0003374A <AmiBlitz3.ab3@25884>   MOVE.l destpointer,d1
0003374E <AmiBlitz3.ab3@25885>   SUB.l $e(a0),d1
00033752 <AmiBlitz3.ab3@25886>   MOVE.l d1,isfunc+1(a0)
00033758 <AmiBlitz3.ab3@25888>   CMPI.b #$7,$5(A0)
0003375C <AmiBlitz3.ab3@25889>    BNE.w 'state
00033762 <AmiBlitz3.ab3@25890>   MOVE.w putstlen,D1
00033766 <AmiBlitz3.ab3@25891>    BSR.w writeword
0003376A <AmiBlitz3.ab3@25892>  BRA.w 'state
0003376E <AmiBlitz3.ab3@25895>   CMP.w #-$7FD0,D0         ; was #$8000+48
00033772 <AmiBlitz3.ab3@25896>    BNE.w 'notsetint
00033778 <AmiBlitz3.ab3@25898>   MOVE.w proceduremode,D1
0003377C <AmiBlitz3.ab3@25899>    BNE.w JUMP_interr3
00033782 <AmiBlitz3.ab3@25901>   TST.b debugmode
00033786 <AmiBlitz3.ab3@25902>    BEQ.w 'norerrf1
00033788 <AmiBlitz3.ab3@25904>   MOVEQ.l #$03,D1
0003378E <AmiBlitz3.ab3@25905>    JSR writetrap
00033794 <AmiBlitz3.ab3@25907>   MOVE.w dontwrite_nomemleft,D1
00033798 <AmiBlitz3.ab3@25908>    BNE.w 'norerrf1
0003379E <AmiBlitz3.ab3@25910>   MOVEA.l intcleanat,A0
000337A4 <AmiBlitz3.ab3@25911>   MOVE.l destpointer,(A0)
000337A8 <AmiBlitz3.ab3@25913>   MOVE.w #$C30C,D1       ; was #gouse
000337AC <AmiBlitz3.ab3@25914>    BSR.w Atokejsr        ;for runerrlib stack chex
000337B2 <AmiBlitz3.ab3@25917>   MOVE.w intstring,D1
000337B6 <AmiBlitz3.ab3@25918>    BEQ.w JUMP_interr
000337BA <AmiBlitz3.ab3@25919>    BPL.w 'nosp
000337C0 <AmiBlitz3.ab3@25921>   MOVE.w intlevel,D1
000337C4 <AmiBlitz3.ab3@25922>   ORI.w #$7200,D1
000337C8 <AmiBlitz3.ab3@25923>    BSR.w writeword       ;moveq #level,d1
000337CC <AmiBlitz3.ab3@25924>   MOVE.w #$C103,D1       ; was #oldint,
000337D0 <AmiBlitz3.ab3@25925>    BSR.w Atokejsr
000337D6 <AmiBlitz3.ab3@25926>   CLR.w intlevel
000337DC <AmiBlitz3.ab3@25929>   CLR.w intstring
000337E2 <AmiBlitz3.ab3@25931>   MOVE.l intfin,D1
000337E6 <AmiBlitz3.ab3@25932>    BSR.w writelong
000337EC <AmiBlitz3.ab3@25934>   MOVE.l #$70004E75,D1
000337F0 <AmiBlitz3.ab3@25935>    BSR.w writelong
000337F6 <AmiBlitz3.ab3@25937>   MOVE.w dontwrite_nomemleft,D1
000337FA <AmiBlitz3.ab3@25938>    BNE.w 'sintdone
00033800 <AmiBlitz3.ab3@25939>   MOVEA.l intjmpat,A0
00033804 <AmiBlitz3.ab3@25940>   MOVE.l destpointer(PC),(A0)
0003380A <AmiBlitz3.ab3@25943>  JMP get1bytemain
0003380E <AmiBlitz3.ab3@25946>   CMP.w #-$7FF2,D0   ; was #$800e     ;end select?
00033812 <AmiBlitz3.ab3@25947>    BEQ.w doendsel
00033816 <AmiBlitz3.ab3@25948>   CMP.w #-$7F4C,D0  ; was #$8001+tnum
0003381A <AmiBlitz3.ab3@25949>    BNE.w 'notseterr
00033820 <AmiBlitz3.ab3@25950>  JMP doendseterr
00033826 <AmiBlitz3.ab3@25954>  JMP syntaxerr
0003382C <AmiBlitz3.ab3@25957>   TST.w dirmode
00033830 <AmiBlitz3.ab3@25958>   BNE.w JUMP_baddirerr
00033834 <AmiBlitz3.ab3@25959>   MOVE.w #$C800,D1      ; #endjmp
0003383A <AmiBlitz3.ab3@25960>   JSR Atokejsr          ; was bra org source                                  ;end
00033842 <AmiBlitz3.ab3@25962>   CMP.l #"noa7",-4(a5)
00033846 <AmiBlitz3.ab3@25963>   BNE 'l10
0003384C <AmiBlitz3.ab3@25964>   TST.w dontwrite_nomemleft
00033850 <AmiBlitz3.ab3@25965>   BNE 'l10
00033856 <AmiBlitz3.ab3@25966>   MOVE.l destpointer,d1
00033858 <AmiBlitz3.ab3@25967>   SUBQ.l #4,d1
0003385A <AmiBlitz3.ab3@25968>   MOVE.l a0,-(a7)
0003385C <AmiBlitz3.ab3@25969>   MOVE.l d1,a0
0003385E <AmiBlitz3.ab3@25970>   MOVE.l (a0),a0
00033864 <AmiBlitz3.ab3@25971>   MOVE.l #$60000002,(a0)+
00033868 <AmiBlitz3.ab3@25972>   MOVE.w #$588f,(a0)
0003386A <AmiBlitz3.ab3@25973>   MOVE.l (a7)+,a0
0003386C <AmiBlitz3.ab3@25976> RTS
00033872 <AmiBlitz3.ab3@25981>   TST.w dirmode                                            ;stop
00033876 <AmiBlitz3.ab3@25982>   BNE.w JUMP_baddirerr
00033878 <AmiBlitz3.ab3@25984>   MOVE.w d0,d1
0003387C <AmiBlitz3.ab3@25985>   BEQ 'l10
00033880 <AmiBlitz3.ab3@25986>   CMP.b #$3a,d0
00033884 <AmiBlitz3.ab3@25987>   BEQ 'l10
0003388A <AmiBlitz3.ab3@25988>   JSR get1bytemain
00033890 <AmiBlitz3.ab3@25992>   TST.b debugmode
00033894 <AmiBlitz3.ab3@25993>   BEQ.w newstop
00033898 <AmiBlitz3.ab3@25994>   MOVE.w #$D501,D1
0003389C <AmiBlitz3.ab3@25995> BRA.w Atokejsr
0003389E <AmiBlitz3.ab3@26001>     RTS
000338A0 <AmiBlitz3.ab3@26003>   MOVE.w d1,d0
000338A4 <AmiBlitz3.ab3@26004>   BEQ 'l10
000338A8 <AmiBlitz3.ab3@26005>   CMP.b #$3a,d0
000338AC <AmiBlitz3.ab3@26006>   BEQ 'l10
000338B0 <AmiBlitz3.ab3@26007>   SUB.b #$30,d0
000338B4 <AmiBlitz3.ab3@26008>   MOVE.w #$4e40,d1
000338B8 <AmiBlitz3.ab3@26009>  BRA 'l11
000338BC <AmiBlitz3.ab3@26012>   MOVE.w #$4e4a,d1
000338C0 <AmiBlitz3.ab3@26013>  BRA writeword
000338C2 <AmiBlitz3.ab3@26016>   ADD.b d0,d1
000338C6 <AmiBlitz3.ab3@26017> BRA writeword
000338CC <AmiBlitz3.ab3@26021> JMP badconterr        ;cont not currently supported!
000338D0 <AmiBlitz3.ab3@26024>   MOVE.w #$4E71,D1
000338D4 <AmiBlitz3.ab3@26025> BRA.w writeword
000338DA <AmiBlitz3.ab3@26030>   MOVEA.l firstfor,A2
000338E0 <AmiBlitz3.ab3@26031>   CLR.l firstfor
000338E6 <AmiBlitz3.ab3@26032>   MOVEA.l _execbase,A6
000338EA <AmiBlitz3.ab3@26035>   CMPA.w #$0,A2
000338EE <AmiBlitz3.ab3@26036>   BEQ.w 'done
000338F0 <AmiBlitz3.ab3@26037>   MOVEA.l A2,A1
000338F2 <AmiBlitz3.ab3@26038>   MOVEA.l (A1),A2
000338F4 <AmiBlitz3.ab3@26039>   MOVEQ.l #$00,D0
000338F8 <AmiBlitz3.ab3@26040>   MOVE.b $10(A1),D0
000338FE <AmiBlitz3.ab3@26043>   MOVE.l mempool2,a0  
00033902 <AmiBlitz3.ab3@26044>   JSR _FreePooled(A6)                                      ;freememfor_error
00033906 <AmiBlitz3.ab3@26046>  BRA.w 'loop
00033908 <AmiBlitz3.ab3@26049> RTS
0003390E <AmiBlitz3.ab3@26052> JUMP_badpenderr JMP badpenderr
00033914 <AmiBlitz3.ab3@26053> JUMP_noenderr   JMP noenderr
0003391A <AmiBlitz3.ab3@26059>   MOVE.w proceduremode,D1
0003391E <AmiBlitz3.ab3@26060>    BEQ.w JUMP_badpenderr
00033924 <AmiBlitz3.ab3@26062>   MOVE.w dontwrite_nomemleft,D1
00033928 <AmiBlitz3.ab3@26063>    BNE.w 'ship
0003392E <AmiBlitz3.ab3@26064>   MOVEA.l firstpend,A2
00033932 <AmiBlitz3.ab3@26067>   CMPA.w #$0,A2
00033936 <AmiBlitz3.ab3@26068>    BEQ.w 'ship
0003393A <AmiBlitz3.ab3@26069>   MOVEA.l $4(A2),A0
00033940 <AmiBlitz3.ab3@26070>   MOVE.l destpointer,(A0)
00033942 <AmiBlitz3.ab3@26071>   MOVEA.l (A2),A2
00033946 <AmiBlitz3.ab3@26072>  BRA.w 'loop0
0003394C <AmiBlitz3.ab3@26075>   TST.b debugmode
00033950 <AmiBlitz3.ab3@26076>    BEQ.b 'ship2
00033952 <AmiBlitz3.ab3@26078>   MOVEQ.l #$05,D1
00033958 <AmiBlitz3.ab3@26079>   JSR writetrap
0003395E <AmiBlitz3.ab3@26082>   MOVEA.l firstlocal,A2                                    ;firstlocal
00033964 <AmiBlitz3.ab3@26083>   JSR calcstatic2b                                           ;calcstatic
0003396A <AmiBlitz3.ab3@26084>   MOVEA.l currentfunction,A0
00033970 <AmiBlitz3.ab3@26086>   MOVE.l destpointer,d1
00033974 <AmiBlitz3.ab3@26087>   SUB.l $e(a0),d1
00033978 <AmiBlitz3.ab3@26088>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
0003397C <AmiBlitz3.ab3@26090>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
00033982 <AmiBlitz3.ab3@26091>   MOVE.l D3,locdatast
00033988 <AmiBlitz3.ab3@26092>   MOVEA.l tempvm,A1
0003398E <AmiBlitz3.ab3@26094>   CLR.b infunctioncode
00033994 <AmiBlitz3.ab3@26095>   MOVE.l firstiffstore,d1
0003399A <AmiBlitz3.ab3@26096>   CMP.l firstiff,d1
0003399E <AmiBlitz3.ab3@26097>   BNE JUMP_noenderr
000339A2 <AmiBlitz3.ab3@26099>   TST.w $C(A1)                                             ;dim
000339A6 <AmiBlitz3.ab3@26100>    BPL.w 'nolskip
000339AC <AmiBlitz3.ab3@26101>  BSET #$7,$8(A0)
000339B0 <AmiBlitz3.ab3@26102>   MOVE.w #$C005,D1      ;#freelast,
000339B4 <AmiBlitz3.ab3@26103>    BSR.w tokejsr2                                          ;writefreememstatement
000339B8 <AmiBlitz3.ab3@26104>  BRA.w 'lskip2
000339C0 <AmiBlitz3.ab3@26107>   MOVE.w memlibstat,$C(A1)
000339C6 <AmiBlitz3.ab3@26110>   MOVEA.l currentfunction,A0
000339CA <AmiBlitz3.ab3@26111>   MOVE.l $E(A0),-(A7)
000339D2 <AmiBlitz3.ab3@26112>   MOVE.w locvaroff,$6(A0)
000339D8 <AmiBlitz3.ab3@26113>   BCLR #$1,$7(A0)
000339DE <AmiBlitz3.ab3@26114>   BCLR #$0,$7(A0)
000339E4 <AmiBlitz3.ab3@26115>   CMPI.b #$7,$5(A0)
000339E8 <AmiBlitz3.ab3@26116>    BNE.w 'penis
000339EE <AmiBlitz3.ab3@26117>   MOVE.w getstlen,D1
000339F2 <AmiBlitz3.ab3@26118>    BSR.w writeword
000339F6 <AmiBlitz3.ab3@26121>   TST.w $6(A0)
000339FA <AmiBlitz3.ab3@26122>    BEQ.w 'nolink
000339FE <AmiBlitz3.ab3@26123>   MOVE.w #$FC7B,D1   ;#64635
00033A04 <AmiBlitz3.ab3@26124>    JSR uselib
00033A0A <AmiBlitz3.ab3@26125>   MOVE.w unlinka4,D1
00033A10 <AmiBlitz3.ab3@26126>    JSR writeword
00033A16 <AmiBlitz3.ab3@26132>   MOVEA.l currentfunction,A0
00033A18 <AmiBlitz3.ab3@26133>   MOVEQ.l #$00,D1
00033A1C <AmiBlitz3.ab3@26134>   MOVE.b $4(A0),D1
00033A1E <AmiBlitz3.ab3@26135>   LSR.w #4,D1
00033A22 <AmiBlitz3.ab3@26136>    BEQ.w 'nofix
00033A24 <AmiBlitz3.ab3@26139>      LSL.w #1,d1
00033A28 <AmiBlitz3.ab3@26142>   CMP.w #$1,D1
00033A2C <AmiBlitz3.ab3@26143>    BNE.w 'not1
00033A32 <AmiBlitz3.ab3@26144>   MOVE.w fix1,D1
00033A38 <AmiBlitz3.ab3@26145>    JSR writeword
00033A3C <AmiBlitz3.ab3@26146>  BRA.w 'nofix
00033A3E <AmiBlitz3.ab3@26149>   LSL.w #2,D1
00033A40 <AmiBlitz3.ab3@26150>   MOVE.w D1,-(A7)
00033A46 <AmiBlitz3.ab3@26151>   MOVE.w D1,moverts+2
00033A4C <AmiBlitz3.ab3@26152>   MOVE.l moverts,D1
00033A52 <AmiBlitz3.ab3@26153>    JSR writelong
00033A54 <AmiBlitz3.ab3@26154>   MOVE.w (A7)+,D1
00033A58 <AmiBlitz3.ab3@26155>   CMP.w #$8,D1
00033A5C <AmiBlitz3.ab3@26156>    BHI.w 'fix
00033A60 <AmiBlitz3.ab3@26157>   ANDI.w #$7,D1
00033A62 <AmiBlitz3.ab3@26158>   LSL.w #8,D1
00033A64 <AmiBlitz3.ab3@26159>   LSL.w #1,D1
00033A6A <AmiBlitz3.ab3@26160>   OR.w fixq,D1
00033A70 <AmiBlitz3.ab3@26161>    JSR writeword
00033A74 <AmiBlitz3.ab3@26162>  BRA.w 'nofix
00033A7A <AmiBlitz3.ab3@26165>    MOVE.w D1,fixstack+2
00033A80 <AmiBlitz3.ab3@26166>   MOVE.l fixstack,D1
00033A86 <AmiBlitz3.ab3@26167>    JSR writelong
00033A8A <AmiBlitz3.ab3@26170>    BSR.w normret
00033A8E <AmiBlitz3.ab3@26174>    BSR.w procfixer
00033A90 <AmiBlitz3.ab3@26176>   MOVEA.l (A7)+,A0
00033A96 <AmiBlitz3.ab3@26177>   MOVE.w dontwrite_nomemleft,D1
00033A9A <AmiBlitz3.ab3@26178>    BNE.w 'skipjp
00033AA0 <AmiBlitz3.ab3@26179>   MOVE.l destpointer,-(A0)
00033AA6 <AmiBlitz3.ab3@26182>   CLR.w proceduremode
00033AAC <AmiBlitz3.ab3@26183>   CLR.l currentfunction
00033AB2 <AmiBlitz3.ab3@26184>   CLR.w procnum
00033AB6 <AmiBlitz3.ab3@26185>    BSR.w droplocals
00033ABC <AmiBlitz3.ab3@26186>    JSR freepends
00033AC2 <AmiBlitz3.ab3@26187> JMP get1bytemain
00033AC4 <AmiBlitz3.ab3@26191>   MOVEQ.l #$0C,D0
00033AC6 <AmiBlitz3.ab3@26192>   MOVEQ.l #$01,D1
00033ACC <AmiBlitz3.ab3@26193>   MOVEA.l _execbase,A6
00033AD2 <AmiBlitz3.ab3@26196>   MOVE.l mempool,a0
00033AD6 <AmiBlitz3.ab3@26197>   JSR _AllocPooled(a6)
00033AD8 <AmiBlitz3.ab3@26199>   MOVEA.l D0,A0
00033ADE <AmiBlitz3.ab3@26200>   MOVE.l alllocals,(A0)
00033AE4 <AmiBlitz3.ab3@26201>   MOVE.l A0,alllocals
00033AEA <AmiBlitz3.ab3@26203>   MOVE.l firstlocal,D0
00033AF0 <AmiBlitz3.ab3@26204>   CLR.l firstlocal
00033AF4 <AmiBlitz3.ab3@26205>   MOVE.l D0,$4(A0)
00033AFA <AmiBlitz3.ab3@26206>   MOVE.l firstglob,D1
00033B00 <AmiBlitz3.ab3@26207>   CLR.l firstglob
00033B04 <AmiBlitz3.ab3@26208>   MOVE.l D1,$8(A0)
00033B0A <AmiBlitz3.ab3@26210>   TST.b debugmode
00033B0E <AmiBlitz3.ab3@26211>    BEQ.b 'skip
00033B14 <AmiBlitz3.ab3@26212>   TST.w dontwrite_nomemleft
00033B18 <AmiBlitz3.ab3@26213>    BNE.b 'skip
00033B1C <AmiBlitz3.ab3@26215>   MOVEA.l proclocals(PC),A0
00033B1E <AmiBlitz3.ab3@26216>   MOVE.l D0,(A0)+
00033B20 <AmiBlitz3.ab3@26217>   MOVE.l D1,(A0)
00033B22 <AmiBlitz3.ab3@26220> RTS
00033B28 <AmiBlitz3.ab3@26223> JUMP_baddirerr JMP baddirerr
00033B2E <AmiBlitz3.ab3@26224> JUMP_noforerr  JMP noforerr
00033B34 <AmiBlitz3.ab3@26228>   TST.w dirmode
00033B38 <AmiBlitz3.ab3@26229>    BNE.w JUMP_baddirerr
00033B3E <AmiBlitz3.ab3@26230>   MOVE.l firstfor,D1
00033B42 <AmiBlitz3.ab3@26231>    BEQ.w JUMP_noforerr
00033B48 <AmiBlitz3.ab3@26232>   JSR reget
00033B4C <AmiBlitz3.ab3@26233>    BEQ.w 'unknown
00033B50 <AmiBlitz3.ab3@26239>   BSR.w getparameter
00033B54 <AmiBlitz3.ab3@26240>   MOVEA.l firstfor(PC),A2
00033B56 <AmiBlitz3.ab3@26241>   MOVEQ.l #$00,D1
00033B5A <AmiBlitz3.ab3@26242>   MOVE.b $10(A2),D1
00033B5E <AmiBlitz3.ab3@26243>   SUBI.w #$12,D1
00033B60 <AmiBlitz3.ab3@26244>   CMP.w D1,D2
00033B64 <AmiBlitz3.ab3@26245>    BNE.w JUMP_noforerr
00033B68 <AmiBlitz3.ab3@26246>   LEA ptr_parameterstore(PC),A0
00033B6C <AmiBlitz3.ab3@26247>   LEA $11(A2),A1
00033B6E <AmiBlitz3.ab3@26248>   SUBQ.w #1,D2
00033B70 <AmiBlitz3.ab3@26251>     CMPM.b (A0)+,(A1)+
00033B74 <AmiBlitz3.ab3@26252>     BNE.w JUMP_noforerr
00033B78 <AmiBlitz3.ab3@26253>   DBF D2,'chkname
00033B7C <AmiBlitz3.ab3@26255>    BSR.w 'unknown2
00033B82 <AmiBlitz3.ab3@26256>    JSR reget
00033B86 <AmiBlitz3.ab3@26257>    BEQ.w 'byebye
00033B8A <AmiBlitz3.ab3@26258>   CMP.w #$2C,D0           ; ','
00033B8E <AmiBlitz3.ab3@26259>    BNE.w JUMP_syntaxerr
00033B94 <AmiBlitz3.ab3@26260>    JSR get1bytemain
00033B98 <AmiBlitz3.ab3@26261>  BRA.w 'nextnext
00033B9A <AmiBlitz3.ab3@26264>  RTS
00033B9E <AmiBlitz3.ab3@26268>   MOVE.l 8(a7),a2
00033BA2 <AmiBlitz3.ab3@26269>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033BA6 <AmiBlitz3.ab3@26270>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033BAA <AmiBlitz3.ab3@26271>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00033BAC <AmiBlitz3.ab3@26276>   MOVEA.l D1,A2
00033BB2 <AmiBlitz3.ab3@26279>   JSR popnext                                           ;error checking for next.
00033BB6 <AmiBlitz3.ab3@26280>   MOVE.w $C(A2),D0
00033BBC <AmiBlitz3.ab3@26282>   LEA nextb,A0
00033BC2 <AmiBlitz3.ab3@26283>   LEA nextbf,A1
00033BC6 <AmiBlitz3.ab3@26284>   CMP.w #$1,D0
00033BCA <AmiBlitz3.ab3@26285>    BEQ.w 'donext
00033BD0 <AmiBlitz3.ab3@26286>   LEA nextw,A0
00033BD6 <AmiBlitz3.ab3@26287>   LEA nextwf,A1
00033BDA <AmiBlitz3.ab3@26288>   CMP.w #$2,D0
00033BDE <AmiBlitz3.ab3@26289>    BEQ.w 'donext
00033BE4 <AmiBlitz3.ab3@26290>   LEA nextl,A0
00033BEA <AmiBlitz3.ab3@26291>   LEA nextlf,A1
00033BEE <AmiBlitz3.ab3@26292>   CMP.w #$5,D0
00033BF2 <AmiBlitz3.ab3@26293>    BNE.w 'donext
00033BF8 <AmiBlitz3.ab3@26295>    TST.b fpu
00033BFC <AmiBlitz3.ab3@26296>    BEQ 'old
00033C02 <AmiBlitz3.ab3@26297>    LEA 'fpu2dats,a0                                         ;fpu next code
00033C08 <AmiBlitz3.ab3@26298>    LEA 'fpu2date,a1
00033C0C <AmiBlitz3.ab3@26299>  BRA 'donext
00033C10 <AmiBlitz3.ab3@26303>   MOVE.w #$C900,D1     ; #getffpbase
00033C14 <AmiBlitz3.ab3@26304>    BSR.w Atokejsr
00033C1A <AmiBlitz3.ab3@26305>   LEA nextf,A0
00033C20 <AmiBlitz3.ab3@26306>   LEA nextff,A1
00033C26 <AmiBlitz3.ab3@26309>   JSR pokecode
00033C2C <AmiBlitz3.ab3@26311>    TST.b fast                                             ;fast for next deactivate
00033C30 <AmiBlitz3.ab3@26312>  BRA 'l1
00033C36 <AmiBlitz3.ab3@26314>     TST.b onestep
00033C3A <AmiBlitz3.ab3@26315>     BEQ 'l1
00033C40 <AmiBlitz3.ab3@26316>     CLR.b onestep
00033C46 <AmiBlitz3.ab3@26317>     SUBQ.l #4,destpointer
00033C4A <AmiBlitz3.ab3@26318>     MOVE.w #$5292,d1
00033C50 <AmiBlitz3.ab3@26319>     JSR writeword
00033C54 <AmiBlitz3.ab3@26323>   MOVE.l thebra(PC),D1
00033C5A <AmiBlitz3.ab3@26324>    JSR writelong
00033C60 <AmiBlitz3.ab3@26326>   MOVEA.l firstfor,A2
00033C66 <AmiBlitz3.ab3@26327>   MOVE.l (A2),firstfor
00033C6A <AmiBlitz3.ab3@26331>   MOVEA.l $8(A2),A0
00033C70 <AmiBlitz3.ab3@26332>   MOVEA.l destpointer,A1
00033C72 <AmiBlitz3.ab3@26333>   MOVE.l A1,D1
00033C74 <AmiBlitz3.ab3@26334>   SUB.l A0,D1            ;d1=positive bra
00033C76 <AmiBlitz3.ab3@26335>   ADDQ.l #2,D1
00033C7C <AmiBlitz3.ab3@26336>   CMP.l #MinWordSgnd,D1  ; #32768,
00033C80 <AmiBlitz3.ab3@26337>    BCC.w JUMP_bigforerr
00033C86 <AmiBlitz3.ab3@26338>   TST.w dontwrite_nomemleft
00033C8A <AmiBlitz3.ab3@26339>    BNE.w 'nopoke1
00033C8E <AmiBlitz3.ab3@26340>   MOVE.w D1,-$2(A0)
00033C90 <AmiBlitz3.ab3@26343>   MOVE.l A1,D1
00033C94 <AmiBlitz3.ab3@26344>   SUB.l $4(A2),D1
00033C96 <AmiBlitz3.ab3@26345>   SUBQ.l #6,D1
00033C9C <AmiBlitz3.ab3@26346>   CMP.l #MinWordSgnd,D1 ;#32768,
00033CA0 <AmiBlitz3.ab3@26347>    BCC.w JUMP_bigforerr
00033CA6 <AmiBlitz3.ab3@26348>   TST.w dontwrite_nomemleft
00033CAA <AmiBlitz3.ab3@26349>    BNE.w 'skip
00033CAC <AmiBlitz3.ab3@26350>   NEG.w D1
00033CB0 <AmiBlitz3.ab3@26351>   MOVE.w D1,-$2(A1)
00033CB6 <AmiBlitz3.ab3@26354>   JSR popnext3                ;fix stack
00033CBC <AmiBlitz3.ab3@26356>   MOVEA.l _execbase,A6
00033CBE <AmiBlitz3.ab3@26357>   MOVEA.l A2,A1
00033CC0 <AmiBlitz3.ab3@26358>   MOVEQ.l #$00,D0
00033CC4 <AmiBlitz3.ab3@26359>   MOVE.b $10(A1),D0
00033CCA <AmiBlitz3.ab3@26362>   MOVE.l mempool2,a0
00033CCE <AmiBlitz3.ab3@26363>   JSR _FreePooled(A6)
00033CD4 <AmiBlitz3.ab3@26365> JMP reget
00033CDA <AmiBlitz3.ab3@26368> JUMP_notallowd JMP notallowd
00033CE0 <AmiBlitz3.ab3@26369> JUMP_bigforerr JMP bigforerr
00033CE4 <AmiBlitz3.ab3@26373>   MOVE.w #$664F,-(A7)          ;#'fO',
00033CE8 <AmiBlitz3.ab3@26376>  BRA.w thebra
00033CEE <AmiBlitz3.ab3@26379> JUMP_error_dublicate_for JMP error_dublicate_for
00033CF4 <AmiBlitz3.ab3@26380> JUMP_badforerr           JMP badforerr
00033CF8 <AmiBlitz3.ab3@26383> forlineat:   Ds.l 1
00033CFA <AmiBlitz3.ab3@26384> fortemp:     Ds.w 1
00033D00 <AmiBlitz3.ab3@26392>   CLR.l fp0addr
00033D06 <AmiBlitz3.ab3@26394>   TST.w dirmode
00033D0A <AmiBlitz3.ab3@26395>    BNE.w JUMP_baddirerr
00033D14 <AmiBlitz3.ab3@26396>   MOVE.l linenumat,forlineat
00033D1A <AmiBlitz3.ab3@26400>   MOVE.l A5,letstart
00033D1E <AmiBlitz3.ab3@26401>   BSR.w getparameter
00033D24 <AmiBlitz3.ab3@26402>   MOVE.w D2,fortemp
00033D2A <AmiBlitz3.ab3@26404>   JSR findfor
00033D2E <AmiBlitz3.ab3@26405>    BEQ.w JUMP_error_dublicate_for
00033D34 <AmiBlitz3.ab3@26406>   LEA firstfor,A2
00033D3A <AmiBlitz3.ab3@26407>   JSR addhere2
00033D3C <AmiBlitz3.ab3@26408>   MOVE.l A2,-(A7)
00033D42 <AmiBlitz3.ab3@26410>   TST.b debugmode
00033D46 <AmiBlitz3.ab3@26411>    BEQ.b 'noerr
00033D4C <AmiBlitz3.ab3@26413>   JSR chkstak
00033D52 <AmiBlitz3.ab3@26414>   MOVE.l forset,D1
00033D58 <AmiBlitz3.ab3@26415>   JSR  writelong
00033D5C <AmiBlitz3.ab3@26418>   MOVE.w fortemp(PC),D2
00033D64 <AmiBlitz3.ab3@26420>   MOVE.b #1,formode
00033D68 <AmiBlitz3.ab3@26422>   BSR.w dolet2                                         ;for get 1. value
00033D6E <AmiBlitz3.ab3@26423>   CLR.b formode
00033D72 <AmiBlitz3.ab3@26424>   CMP.w #-$7FE8,D0       ; was #$8018,
00033D76 <AmiBlitz3.ab3@26425>    BNE.w JUMP_syntaxerr
00033D7C <AmiBlitz3.ab3@26426>   MOVE.w commode,D1
00033D80 <AmiBlitz3.ab3@26427>    BNE.w JUMP_syntaxerr
00033D84 <AmiBlitz3.ab3@26428>   CMP.b #$6,D2
00033D88 <AmiBlitz3.ab3@26429>    BCC.w JUMP_badforerr
00033D8C <AmiBlitz3.ab3@26430>   BTST #$F,D2
00033D90 <AmiBlitz3.ab3@26431>    BNE.w 'skip
00033D96 <AmiBlitz3.ab3@26432>   MOVE.w leaamp,D1
00033D9C <AmiBlitz3.ab3@26433>   JSR pokewda5s
00033D9E <AmiBlitz3.ab3@26434>   MOVE.w D3,D1
00033DA4 <AmiBlitz3.ab3@26435>   JSR  writeword
00033DAA <AmiBlitz3.ab3@26438>   MOVE.w pushindex,D1
00033DB0 <AmiBlitz3.ab3@26439>   JSR  writeword         ;index lea on stack
00033DB4 <AmiBlitz3.ab3@26440>   ANDI.w #$FF,D2
00033DB6 <AmiBlitz3.ab3@26442>   MOVEA.l (A7),A1
00033DBA <AmiBlitz3.ab3@26443>   MOVE.w D2,$C(A1)
00033DBC <AmiBlitz3.ab3@26445>   MOVE.w D2,-(A7)
00033DC0 <AmiBlitz3.ab3@26446>    BSR.w eval             ;get fin
00033DC6 <AmiBlitz3.ab3@26448>    CLR.b onestep
00033DCA <AmiBlitz3.ab3@26449>    CMP.w #$8019,d0
00033DCE <AmiBlitz3.ab3@26450>    BEQ 'l1
00033DD6 <AmiBlitz3.ab3@26451>    MOVE.b #1,onestep
00033DD8 <AmiBlitz3.ab3@26455>   MOVE.w (A7),D2
00033DDE <AmiBlitz3.ab3@26457>   MOVE.w pushd0l,D1
00033DE2 <AmiBlitz3.ab3@26458>   CMP.w #$3,D2
00033DE6 <AmiBlitz3.ab3@26459>    BCC.w 'skip1
00033DEC <AmiBlitz3.ab3@26460>   MOVE.w pushd0wd,D1
00033DEE <AmiBlitz3.ab3@26463>    MOVE.w D1,-(A7)
00033DF4 <AmiBlitz3.ab3@26465>    TST.b fpu
00033DF8 <AmiBlitz3.ab3@26466>    BEQ 'old
00033DFC <AmiBlitz3.ab3@26467>    CMP.b #5,d2
00033E00 <AmiBlitz3.ab3@26468>    BNE 'old
00033E06 <AmiBlitz3.ab3@26469>    MOVE.l #$f2276400,d1
00033E0C <AmiBlitz3.ab3@26471>    JSR writelong
00033E10 <AmiBlitz3.ab3@26472>  BRA 'weit
00033E16 <AmiBlitz3.ab3@26476>    JSR  writeword        ;push fin on stack                                   ;fpu for end value
00033E1A <AmiBlitz3.ab3@26479>   CMP.w #-$7FE7,D0      ; was #$8019,
00033E1E <AmiBlitz3.ab3@26480>    BNE.w 'defstep
00033E22 <AmiBlitz3.ab3@26482>    BSR.w eval           ;get step
00033E28 <AmiBlitz3.ab3@26484>    TST.b fpu
00033E2C <AmiBlitz3.ab3@26485>    BEQ 'pushstep
00033E30 <AmiBlitz3.ab3@26486>    CMP.b #5,d2
00033E34 <AmiBlitz3.ab3@26487>    BNE 'pushstep
00033E3A <AmiBlitz3.ab3@26488>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00033E40 <AmiBlitz3.ab3@26490>   JSR writelong
00033E42 <AmiBlitz3.ab3@26495>    MOVE.w (a7)+,d1
00033E46 <AmiBlitz3.ab3@26496>  BRA 'fpur
00033E4A <AmiBlitz3.ab3@26500>   CMP.w #$4,D2
00033E4E <AmiBlitz3.ab3@26501>    BCC.w 'qup
00033E52 <AmiBlitz3.ab3@26502>   MOVE.w #$7001,D1
00033E58 <AmiBlitz3.ab3@26503>   JSR writeword
00033E5C <AmiBlitz3.ab3@26504>  BRA.w 'pushstep
00033E60 <AmiBlitz3.ab3@26507>   BNE.w 'notq
00033E64 <AmiBlitz3.ab3@26508>   MOVE.w #$7001,D1
00033E6A <AmiBlitz3.ab3@26509>   JSR writeword
00033E70 <AmiBlitz3.ab3@26510>   MOVE.w swapd0,D1
00033E76 <AmiBlitz3.ab3@26511>   JSR writeword
00033E7A <AmiBlitz3.ab3@26512>  BRA.w 'pushstep
00033E80 <AmiBlitz3.ab3@26516>   TST.b fpu
00033E84 <AmiBlitz3.ab3@26517>    BEQ 'old2
00033E88 <AmiBlitz3.ab3@26518>   CMP.b #5,d2
00033E8C <AmiBlitz3.ab3@26519>    BNE 'old2
00033E92 <AmiBlitz3.ab3@26520>   MOVE.l #$f23c5000,d1
00033E98 <AmiBlitz3.ab3@26521>   JSR writelong
00033E9C <AmiBlitz3.ab3@26522>   MOVE.w #$1,d1
00033EA2 <AmiBlitz3.ab3@26523>   JSR writeword
00033EA8 <AmiBlitz3.ab3@26524>   MOVE.l #$f2276400,d1
00033EAE <AmiBlitz3.ab3@26525>   JSR writelong
00033EB0 <AmiBlitz3.ab3@26526>   MOVE.w (a7)+,d1
00033EB4 <AmiBlitz3.ab3@26527>  BRA 'fpur
00033EB8 <AmiBlitz3.ab3@26531>   MOVE.w #$203C,D1                                         ;write step 1
00033EBE <AmiBlitz3.ab3@26532>   JSR writeword
00033EC4 <AmiBlitz3.ab3@26533>   MOVE.l #$80000041,D1     ;ffp '1'                                ;ffp '1'
00033ECA <AmiBlitz3.ab3@26534>   JSR writelong
00033ECC <AmiBlitz3.ab3@26537>   MOVE.w (A7)+,D1
00033ED2 <AmiBlitz3.ab3@26538>   JSR writeword           ;push step on stack                                 ;push step on stack
00033ED4 <AmiBlitz3.ab3@26543>   MOVE.w (A7)+,D2
00033ED6 <AmiBlitz3.ab3@26544>   MOVEA.l (A7),A1
00033EDE <AmiBlitz3.ab3@26545>   MOVE.l destpointer,$4(A1)
00033EE4 <AmiBlitz3.ab3@26546>   LEA forcompb,A0
00033EEA <AmiBlitz3.ab3@26547>   LEA forcompbf,A1
00033EEE <AmiBlitz3.ab3@26548>   CMP.w #$1,D2
00033EF2 <AmiBlitz3.ab3@26549>    BEQ.w 'docomp
00033EF8 <AmiBlitz3.ab3@26550>   LEA forcompw,A0
00033EFE <AmiBlitz3.ab3@26551>   LEA forcompwf,A1
00033F02 <AmiBlitz3.ab3@26552>   CMP.w #$2,D2
00033F06 <AmiBlitz3.ab3@26553>    BEQ.w 'docomp
00033F0C <AmiBlitz3.ab3@26554>   LEA forcompl,A0
00033F12 <AmiBlitz3.ab3@26555>   LEA forcomplf,A1
00033F16 <AmiBlitz3.ab3@26556>   CMP.w #$5,D2
00033F1A <AmiBlitz3.ab3@26557>    BNE.w 'docomp
00033F20 <AmiBlitz3.ab3@26559>   TST.b fpu
00033F24 <AmiBlitz3.ab3@26560>    BEQ 'old3
00033F2A <AmiBlitz3.ab3@26561>   LEA fpu_start,a0
00033F30 <AmiBlitz3.ab3@26562>   LEA fpu_end,a1
00033F36 <AmiBlitz3.ab3@26563>   JSR pokecode
00033F3A <AmiBlitz3.ab3@26564>  BRA 'fpu3
00033F40 <AmiBlitz3.ab3@26568>   LEA forcompf,A0                                         ;
00033F46 <AmiBlitz3.ab3@26569>   LEA forcompff,A1
00033F4C <AmiBlitz3.ab3@26570>   JSR pokecode
00033F50 <AmiBlitz3.ab3@26571>   MOVE.w #$C900,D1       ; #getffpbase,
00033F54 <AmiBlitz3.ab3@26572>   BSR.w Atokejsr
00033F5A <AmiBlitz3.ab3@26573>   LEA forcompf2,A0
00033F60 <AmiBlitz3.ab3@26574>   LEA forcompf2f,A1
00033F66 <AmiBlitz3.ab3@26577>   JSR pokecode
00033F6C <AmiBlitz3.ab3@26579>   TST.b fast                                               ;fast for next
00033F70 <AmiBlitz3.ab3@26580>    BEQ 's1
00033F74 <AmiBlitz3.ab3@26581>   CMP.w #3,d2
00033F78 <AmiBlitz3.ab3@26582>    BNE 's1
00033F7E <AmiBlitz3.ab3@26583>   TST.b onestep
00033F82 <AmiBlitz3.ab3@26584>    BEQ 's1
00033F8C <AmiBlitz3.ab3@26585>   SUB.l #10,destpointer
00033F90 <AmiBlitz3.ab3@26586>   MOVE.w #$b081,d1
00033F96 <AmiBlitz3.ab3@26587>   JSR writeword
00033F9A <AmiBlitz3.ab3@26592>   MOVE.l thebgt(PC),D1
00033FA0 <AmiBlitz3.ab3@26593>   JSR writelong
00033FA2 <AmiBlitz3.ab3@26598>   MOVEA.l (A7)+,A1
00033FAA <AmiBlitz3.ab3@26599>   MOVE.l destpointer,$8(A1)
00033FB0 <AmiBlitz3.ab3@26600> JMP reget
00033FB4 <AmiBlitz3.ab3@26605>   MOVEA.l 8(a7),a2
00033FB8 <AmiBlitz3.ab3@26606>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033FBE <AmiBlitz3.ab3@26607>   fmove.s 4(a7),fp1
00033FC2 <AmiBlitz3.ab3@26608>   BTST.b #7,(a7)
00033FC6 <AmiBlitz3.ab3@26609>   BNE 'negi
00033FCA <AmiBlitz3.ab3@26610>   fcmp.x fp1,fp0
00033FCE <AmiBlitz3.ab3@26611>  BRA 'negi2
00033FD2 <AmiBlitz3.ab3@26614>   fcmp.x fp0,fp1
00033FD6 <AmiBlitz3.ab3@26617>   Dc.l $f2920000                                           ;fbgt.w
00033FDA <AmiBlitz3.ab3@26623>   BGT.w thebgt
00033FE0 <AmiBlitz3.ab3@26626> JUMP_error4char          JMP error4char
00033FE6 <AmiBlitz3.ab3@26627> JUMP_error_convert_types JMP error_convert_types
00033FEC <AmiBlitz3.ab3@26628> JUMP_noleterr            JMP noleterr
00033FF2 <AmiBlitz3.ab3@26629> JUMP_nocomerr            JMP nocomerr
00033FF8 <AmiBlitz3.ab3@26630> JUMP_comerr              JMP comerr
00033FFE <AmiBlitz3.ab3@26634>   MOVE.l A5,letstart
00034004 <AmiBlitz3.ab3@26635>   JSR getparameter
0003400E <AmiBlitz3.ab3@26642>   MOVE.l destpointer,pushpc
00034018 <AmiBlitz3.ab3@26643>   MOVE.l hunkoffsetbase,pushoff
0003401E <AmiBlitz3.ab3@26644>   CLR.l rightsidetype
00034024 <AmiBlitz3.ab3@26645>   CLR.w rightsideflagmask
0003402C <AmiBlitz3.ab3@26647>   MOVE.w #$0001,regnum            ;don't disturb this reg!
00034032 <AmiBlitz3.ab3@26648>   JSR fetchvars                   ;var in a3, type in a2
00034038 <AmiBlitz3.ab3@26649>   JSR calcvar                     ;get offset stuff
0003403E <AmiBlitz3.ab3@26651>   TST.b formode
00034042 <AmiBlitz3.ab3@26652>   BEQ 'lf1
00034048 <AmiBlitz3.ab3@26653>   CMP.l #newtype_double,A2
0003404C <AmiBlitz3.ab3@26654>   BEQ JUMP_notallowd
00034052 <AmiBlitz3.ab3@26655>   MOVE.l a2,currtype
00034058 <AmiBlitz3.ab3@26658>   CLR.w startoffsetmore
0003405C <AmiBlitz3.ab3@26659>   CMP.w #$3d,d0
00034060 <AmiBlitz3.ab3@26660>   BNE 'l1a
00034064 <AmiBlitz3.ab3@26661>   BTST #15,d2
00034068 <AmiBlitz3.ab3@26662>   BEQ 'l1a
0003406C <AmiBlitz3.ab3@26663>   CMP.b #1,d2
00034070 <AmiBlitz3.ab3@26664>   BNE 'l1a
0003407A <AmiBlitz3.ab3@26665>   MOVE.w leaa0a0+2,startoffsetmore
00034080 <AmiBlitz3.ab3@26669>   CLR.w regnum                     ;don't disturb this reg
00034084 <AmiBlitz3.ab3@26670>   BSR.w pushdo
0003408A <AmiBlitz3.ab3@26671>   CLR.w commode
00034090 <AmiBlitz3.ab3@26673>   CLR.w stackcorrect
00034096 <AmiBlitz3.ab3@26675>   CLR.w pcodd
0003409C <AmiBlitz3.ab3@26677>   MOVE.w startoffsetmore,d1
000340A0 <AmiBlitz3.ab3@26678>   BTST #0,d1
000340A4 <AmiBlitz3.ab3@26679>   BEQ 'l2a
000340AC <AmiBlitz3.ab3@26680>   MOVE.w #1,pcodd
000340B0 <AmiBlitz3.ab3@26685>   CMP.w #$3D,D0              ;'='                              ;=
000340B4 <AmiBlitz3.ab3@26686>   BEQ.w 'nextcom
000340B6 <AmiBlitz3.ab3@26690>   MOVE.b (a5)+,d1
000340BA <AmiBlitz3.ab3@26691>   BEQ 'l10
000340BE <AmiBlitz3.ab3@26692>   CMP.b #":",d1
000340C2 <AmiBlitz3.ab3@26693>   BEQ 'l10
000340C6 <AmiBlitz3.ab3@26694>   CMP.b #";",d1
000340CA <AmiBlitz3.ab3@26695>   BEQ 'l10
000340CE <AmiBlitz3.ab3@26696>   CMP.b #"0",d1
000340D2 <AmiBlitz3.ab3@26697>   BLT 'l11
000340D6 <AmiBlitz3.ab3@26698>   CMP.b #"9",d1
000340DA <AmiBlitz3.ab3@26699>   BGT 'l11
000340DE <AmiBlitz3.ab3@26700>  BRA.s 'l1
000340E6 <AmiBlitz3.ab3@26703>   MOVE.b #1,quickadd
000340EC <AmiBlitz3.ab3@26710>   MOVEA.l letstart,A5
000340EE <AmiBlitz3.ab3@26711>   SUBQ.w #1,A5
000340F2 <AmiBlitz3.ab3@26714>   CMP.b #$7,D2
000340F6 <AmiBlitz3.ab3@26715>    BNE.w 'notstring
000340FA <AmiBlitz3.ab3@26726>   MOVEM.w D2-D3,-(A7)
00034100 <AmiBlitz3.ab3@26727>   MOVE.l lastoffset_org,-(A7)
00034106 <AmiBlitz3.ab3@26728>   MOVE.w varmode,-(A7)
00034110 <AmiBlitz3.ab3@26731>     MOVE.l #forthstack,forthsp
0003411A <AmiBlitz3.ab3@26732>    MOVE.l #precstack,precsp
00034120 <AmiBlitz3.ab3@26733>    CLR.w regnum
00034126 <AmiBlitz3.ab3@26734>    CLR.w nonew
0003412C <AmiBlitz3.ab3@26735>    CLR.w sbasegot
00034136 <AmiBlitz3.ab3@26736>    MOVE.w varcodelen,oldvcodelen
0003413C <AmiBlitz3.ab3@26737>    CLR.w varcodelen
00034144 <AmiBlitz3.ab3@26738>    MOVE.w #$FFFF,lasta6
00034146 <AmiBlitz3.ab3@26742>   MOVEQ.l #$07,D2
0003414A <AmiBlitz3.ab3@26743>    BSR.w eval
00034150 <AmiBlitz3.ab3@26744>   MOVE.w (A7)+,varmode
00034156 <AmiBlitz3.ab3@26745>   MOVE.l (A7)+,lastoffset_org
0003415C <AmiBlitz3.ab3@26746>   MOVE.w moved0a3,D1
00034162 <AmiBlitz3.ab3@26747>    JSR writeword
00034168 <AmiBlitz3.ab3@26748>   MOVE.w commode,D1
0003416C <AmiBlitz3.ab3@26749>    BEQ.w 'stconti
00034172 <AmiBlitz3.ab3@26750>   LEA pulla2st,A0
00034178 <AmiBlitz3.ab3@26751>   LEA pulla2stf,A1
0003417E <AmiBlitz3.ab3@26752>    JSR pokecode
00034182 <AmiBlitz3.ab3@26753>  BRA.w 'stconti2
00034186 <AmiBlitz3.ab3@26756>   BSR.w pushput
0003418A <AmiBlitz3.ab3@26759>   MOVEM.w (A7)+,D2-D3
0003418E <AmiBlitz3.ab3@26760>   BTST #$F,D2
00034192 <AmiBlitz3.ab3@26761>   BNE.w 'already
00034198 <AmiBlitz3.ab3@26762>     MOVE.w D3,leaa5d3a2+2
0003419E <AmiBlitz3.ab3@26763>     MOVE.l leaa5d3a2,D1
000341A4 <AmiBlitz3.ab3@26764>     JSR pokela5s
000341A8 <AmiBlitz3.ab3@26767>   MOVE.w #$FE6F,D1         ; was #65135,
000341AE <AmiBlitz3.ab3@26768>   JSR uselib
000341B4 <AmiBlitz3.ab3@26769>   MOVE.l #$C700,D1         ; was #lastring,
000341BA <AmiBlitz3.ab3@26770>   MOVE.l d1,lastinstruction
000341C0 <AmiBlitz3.ab3@26771>   MOVE.w varmode,D2
000341C4 <AmiBlitz3.ab3@26772>   BNE.w 'local
000341C6 <AmiBlitz3.ab3@26773>     ADDQ.w #1,D1           ;use global allocmem
000341CA <AmiBlitz3.ab3@26776>   BSR.w Atokejsr
000341CE <AmiBlitz3.ab3@26777>   CMP.w #$2C,D0           ;','
000341D2 <AmiBlitz3.ab3@26778>   BNE.w 'done
000341D8 <AmiBlitz3.ab3@26780>   MOVE.w addq4a2,D1
000341DE <AmiBlitz3.ab3@26781>   JSR writeword
000341E2 <AmiBlitz3.ab3@26782>  BRA.w 'nextstr
000341E6 <AmiBlitz3.ab3@26785>    BTST #$E,D2             ;pointer, ignore!
000341EA <AmiBlitz3.ab3@26786>    BNE.w 'skip
000341EC <AmiBlitz3.ab3@26787>   TST.b D2
000341F0 <AmiBlitz3.ab3@26788>    BEQ.w JUMP_noleterr     ;tried to assign a struct - later!
000341F6 <AmiBlitz3.ab3@26790>    TST.b newsyntax
000341FA <AmiBlitz3.ab3@26791>    BEQ 'skip2
000341FE <AmiBlitz3.ab3@26794>    CMP.w #$4022,(a5)
00034202 <AmiBlitz3.ab3@26795>    BNE 'skip2
00034208 <AmiBlitz3.ab3@26796>    CMP.l #3,d2
0003420C <AmiBlitz3.ab3@26797>    BNE  JUMP_error_convert_types
0003420E <AmiBlitz3.ab3@26798>    ADDQ #2,a5
00034210 <AmiBlitz3.ab3@26799>    MOVEQ #0,d0
00034212 <AmiBlitz3.ab3@26800>    MOVE.b (a5)+,d0
00034216 <AmiBlitz3.ab3@26801>    BEQ 'skip2
0003421A <AmiBlitz3.ab3@26802>    CMP.b #$22,d0
0003421E <AmiBlitz3.ab3@26803>    BNE 'l5
00034222 <AmiBlitz3.ab3@26804>    MOVE.b #0,d0
00034226 <AmiBlitz3.ab3@26805>  BRA 'do
00034228 <AmiBlitz3.ab3@26808>   ASL.l #8,d0
0003422A <AmiBlitz3.ab3@26809>    MOVE.b (a5)+,d0
0003422E <AmiBlitz3.ab3@26810>    BEQ 'skip2
00034232 <AmiBlitz3.ab3@26811>    CMP.b #$22,d0
00034236 <AmiBlitz3.ab3@26812>    BNE 'l2
0003423A <AmiBlitz3.ab3@26813>    MOVE.b #0,d0
0003423C <AmiBlitz3.ab3@26814>    ASR.l #8,d0
00034240 <AmiBlitz3.ab3@26815>  BRA 'do
00034242 <AmiBlitz3.ab3@26818>   ASL.l #8,d0
00034244 <AmiBlitz3.ab3@26819>     MOVE.b (a5)+,d0
00034248 <AmiBlitz3.ab3@26820>    BEQ 'skip2
0003424C <AmiBlitz3.ab3@26821>    CMP.b #$22,d0
00034250 <AmiBlitz3.ab3@26822>    BNE 'l3
00034254 <AmiBlitz3.ab3@26823>    MOVE.b #0,d0
00034256 <AmiBlitz3.ab3@26824>    ASR.l #8,d0
0003425A <AmiBlitz3.ab3@26825>  BRA 'do
0003425C <AmiBlitz3.ab3@26828>   ASL.l #8,d0
0003425E <AmiBlitz3.ab3@26829>     MOVE.b (a5)+,d0
00034262 <AmiBlitz3.ab3@26830>    BEQ 'skip2
00034266 <AmiBlitz3.ab3@26831>    CMP.b #$22,d0
0003426A <AmiBlitz3.ab3@26832>    BNE 'l4
0003426E <AmiBlitz3.ab3@26833>    MOVE.b #0,d0
00034270 <AmiBlitz3.ab3@26834>    ASR.l #8,d0
00034274 <AmiBlitz3.ab3@26835>  BRA 'do
00034278 <AmiBlitz3.ab3@26838>    CMP.b #$22,(a5)+
0003427C <AmiBlitz3.ab3@26839>    BNE JUMP_error4char
00034280 <AmiBlitz3.ab3@26842>   MOVE.w #$2b7c,d1
00034286 <AmiBlitz3.ab3@26843>    TST.w varmode
0003428A <AmiBlitz3.ab3@26844>    BEQ 'g3
0003428E <AmiBlitz3.ab3@26845>    BCLR #9,d1
00034294 <AmiBlitz3.ab3@26848>     JSR writeword
00034296 <AmiBlitz3.ab3@26849>     MOVE.l d0,d1
0003429C <AmiBlitz3.ab3@26850>     JSR writelong
0003429E <AmiBlitz3.ab3@26851>     MOVE.w d3,d1
000342A4 <AmiBlitz3.ab3@26852>     JSR writeword
000342AA <AmiBlitz3.ab3@26853>     JSR get1bytemain
000342AC <AmiBlitz3.ab3@26854>  RTS
000342B2 <AmiBlitz3.ab3@26861>   MOVE.w d2,vartype
000342B6 <AmiBlitz3.ab3@26863>   MOVE.b #$3,D2
000342BA <AmiBlitz3.ab3@26870>   CMP.b #5,d2
000342BE <AmiBlitz3.ab3@26871>   BNE 'l1aa
000342C4 <AmiBlitz3.ab3@26872>   MOVE.l a2,currtype
000342C8 <AmiBlitz3.ab3@26877>   MOVEM.w D2-D3,-(A7)
000342CE <AmiBlitz3.ab3@26878>   MOVE.w varmode,-(A7)
000342D4 <AmiBlitz3.ab3@26880>   MOVE.l a2,leftsidetype
000342DE <AmiBlitz3.ab3@26881>   MOVE.w flagmask,leftsideflagmask
000342E2 <AmiBlitz3.ab3@26882>   BTST #$f,d2
000342E6 <AmiBlitz3.ab3@26883>   BEQ 'nomultiassign
000342EC <AmiBlitz3.ab3@26884>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
000342F2 <AmiBlitz3.ab3@26885>   CLR.w leftsideflagmask
000342F6 <AmiBlitz3.ab3@26889>   ANDI.w #$FF,D2
000342FC <AmiBlitz3.ab3@26890>   MOVE.l lastoffset_org,-(A7)
00034302 <AmiBlitz3.ab3@26891>   JSR eval                                ; calc right side of var assign
00034306 <AmiBlitz3.ab3@26893>   MOVEM.l a0/a1,-(a7)
0003430C <AmiBlitz3.ab3@26894>   MOVE.l leftsidetype,a0
00034312 <AmiBlitz3.ab3@26895>   CMP.l #0,a0
00034316 <AmiBlitz3.ab3@26896>   BEQ 'nocheck
0003431E <AmiBlitz3.ab3@26897>   CMP.w #1,leftsideflagmask
00034322 <AmiBlitz3.ab3@26898>   BEQ 'isptr
0003432A <AmiBlitz3.ab3@26899>   CMP.l #$100,4(a0)
0003432E <AmiBlitz3.ab3@26900>   BLE 'nocheck
00034334 <AmiBlitz3.ab3@26903>   TST.l typetocast
00034338 <AmiBlitz3.ab3@26904>   BEQ 'nocast
0003433E <AmiBlitz3.ab3@26905>   MOVE.l typetocast,a1
00034342 <AmiBlitz3.ab3@26906>   BRA 'typecheck
00034348 <AmiBlitz3.ab3@26909>   TST.l rightsidetype
0003434C <AmiBlitz3.ab3@26910>   BEQ 'nocheck
00034352 <AmiBlitz3.ab3@26911>   MOVE.l rightsidetype,a1
0003435A <AmiBlitz3.ab3@26912>   CMP.w #1,rightsideflagmask
0003435E <AmiBlitz3.ab3@26913>   BEQ 'ok
00034366 <AmiBlitz3.ab3@26914>   CMP.l #$100,4(a1)
0003436A <AmiBlitz3.ab3@26915>   BGE 'typecheck
00034372 <AmiBlitz3.ab3@26916>   CMP.l #$3,4(a1)
00034376 <AmiBlitz3.ab3@26917>   BEQ 'ok                              ;long assign is allow with this codelines
0003437A <AmiBlitz3.ab3@26918>   BRA 'error
00034380 <AmiBlitz3.ab3@26921>   TST.b typecheck
00034384 <AmiBlitz3.ab3@26922>   BEQ 'nocheck
0003438A <AmiBlitz3.ab3@26923>   TST.b notypecheck
0003438E <AmiBlitz3.ab3@26924>   BNE 'ok
00034390 <AmiBlitz3.ab3@26925>   CMP.l a0,a1
00034394 <AmiBlitz3.ab3@26926>   BEQ 'ok
00034398 <AmiBlitz3.ab3@26928>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
0003439C <AmiBlitz3.ab3@26929>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000343A0 <AmiBlitz3.ab3@26930>   BEQ 'ok
000343A6 <AmiBlitz3.ab3@26933>  JMP   error_convert_types     ;for syntax 4  = typecheck
000343AC <AmiBlitz3.ab3@26937>    CLR.l typetocast
000343B0 <AmiBlitz3.ab3@26938>    MOVEM.l (a7)+, a0/a1
000343B6 <AmiBlitz3.ab3@26940>   MOVE.l (A7)+,lastoffset_org
000343BC <AmiBlitz3.ab3@26941>   MOVE.w commode,D1
000343C0 <AmiBlitz3.ab3@26942>    BNE.w 'conti
000343C4 <AmiBlitz3.ab3@26943>    BSR.w pushput
000343CA <AmiBlitz3.ab3@26946>   MOVE.w (A7)+,varmode
000343CE <AmiBlitz3.ab3@26947>   MOVEM.w (A7)+,D2-D3
000343D2 <AmiBlitz3.ab3@26952>   MOVE.w #$2B40,D1
000343D8 <AmiBlitz3.ab3@26953>   MOVE.w varmode,D4
000343DC <AmiBlitz3.ab3@26954>    BEQ.w 'skip1
000343E0 <AmiBlitz3.ab3@26955>   BCLR #$9,D1
000343E4 <AmiBlitz3.ab3@26958>   BTST #$F,D2
000343E8 <AmiBlitz3.ab3@26959>    BEQ.w 'code
000343EE <AmiBlitz3.ab3@26962>    TST.b stackcorrect
000343F2 <AmiBlitz3.ab3@26963>    BNE 'st1
000343F8 <AmiBlitz3.ab3@26965>   MOVE.w commode,D1
000343FC <AmiBlitz3.ab3@26966>    BEQ.w 'skipc1
00034402 <AmiBlitz3.ab3@26971>   MOVE.w pulla2,D1
00034408 <AmiBlitz3.ab3@26972>    JSR writeword
0003440C <AmiBlitz3.ab3@26975>   MOVE.w #$2480,D1               ;move.l d0,(a2)
00034410 <AmiBlitz3.ab3@26978>    MOVEM.l a0/d0,-(a7)
00034416 <AmiBlitz3.ab3@26979>    MOVEA.l lastoffset_org,A0
00034418 <AmiBlitz3.ab3@26980>    MOVE.l A0,D0
0003441C <AmiBlitz3.ab3@26981>    BEQ.w 'skipa
0003441E <AmiBlitz3.ab3@26982>    MOVEA.l D0,A0
00034426 <AmiBlitz3.ab3@26983>    MOVE.l $A(A0),currtype
0003442A <AmiBlitz3.ab3@26986>   MOVEM.l (a7)+,a0/d0
0003442E <AmiBlitz3.ab3@26988>   CMP.w #$2C,D0                ; ','
00034432 <AmiBlitz3.ab3@26989>    BNE.w 'code
00034436 <AmiBlitz3.ab3@26991>     MOVE.w #$24C0,D1           ;move.l d0,(a2)+
0003443A <AmiBlitz3.ab3@26992>    BSR.w 'code                                         ;write store
00034440 <AmiBlitz3.ab3@26995>    MOVE.l lastoffset_org,D0
00034448 <AmiBlitz3.ab3@27001>   MOVE.w #$FFFF,commode    ; -1
0003444E <AmiBlitz3.ab3@27002>   CLR.w varcodelen
00034456 <AmiBlitz3.ab3@27004>   MOVE.b #1,optiarray
0003445C <AmiBlitz3.ab3@27006>   MOVE.w pusha2,D1
00034462 <AmiBlitz3.ab3@27007>    JSR writeword
00034468 <AmiBlitz3.ab3@27009>   TST.l lastoffset_org
0003446C <AmiBlitz3.ab3@27010>   BEQ 'dimmore
00034472 <AmiBlitz3.ab3@27011>   MOVEA.l lastoffset_org,A0
00034474 <AmiBlitz3.ab3@27013>   MOVE.l (A0),D0
00034478 <AmiBlitz3.ab3@27014>    BEQ.w JUMP_comerr          ;comma past end of struct
0003447A <AmiBlitz3.ab3@27015>   MOVEA.l D0,A0
00034480 <AmiBlitz3.ab3@27016>   MOVE.l A0,lastoffset_org
00034486 <AmiBlitz3.ab3@27017>   BTST #$1,$7(A0)
0003448A <AmiBlitz3.ab3@27018>    BNE.w JUMP_nocomerr        ;can't use comma on multiple entries
0003448E <AmiBlitz3.ab3@27019>   MOVEA.l $A(A0),A1
00034492 <AmiBlitz3.ab3@27020>   MOVE.l $4(A1),D2
00034498 <AmiBlitz3.ab3@27024>   BTST #$0,$7(A0)
0003449C <AmiBlitz3.ab3@27025>    BNE.w 'nextpnt             ;pointer
000344A2 <AmiBlitz3.ab3@27026>   CMP.l #$100,D2
000344A6 <AmiBlitz3.ab3@27027>    BCC.l JUMP_nocomerr        ;or on structs
000344AA <AmiBlitz3.ab3@27028>  BRA.w 'docom                                     ; do do type\x= 10,20,30....
000344B0 <AmiBlitz3.ab3@27032>         CLR.b optiarray
000344B4 <AmiBlitz3.ab3@27033>         CMP.w #"@@",(a5)
000344B8 <AmiBlitz3.ab3@27034>         BEQ 'n1
000344BC <AmiBlitz3.ab3@27035>  BRA 'd1
000344C2 <AmiBlitz3.ab3@27038>   JSR nextline
000344C4 <AmiBlitz3.ab3@27039>         MOVE.l a5,-(a7)
000344C6 <AmiBlitz3.ab3@27042>   MOVE.b (a5)+,d0
000344CA <AmiBlitz3.ab3@27043>         CMP.b #$20,d0
000344CE <AmiBlitz3.ab3@27044>         BEQ 'l6
000344D0 <AmiBlitz3.ab3@27045>         MOVE.l (a7)+,a5
000344D4 <AmiBlitz3.ab3@27046>         CMP.b #";",d0
000344D8 <AmiBlitz3.ab3@27047>         BEQ 'n1
000344DE <AmiBlitz3.ab3@27050>         TST.w debugmode
000344E2 <AmiBlitz3.ab3@27051>         BEQ 'nextcom
000344E4 <AmiBlitz3.ab3@27052>         MOVE.l a0,-(a7)
000344EA <AmiBlitz3.ab3@27053>         MOVE.l pushat,a0
000344F0 <AmiBlitz3.ab3@27054>         CMP.l #0,a0
000344F4 <AmiBlitz3.ab3@27055>         BNE 'o1
000344F8 <AmiBlitz3.ab3@27056>  BRA 'skipb
00034500 <AmiBlitz3.ab3@27059>         ADD.l #1,2(a0)
00034506 <AmiBlitz3.ab3@27062>   CLR.w commode
0003450E <AmiBlitz3.ab3@27063>         MOVE.b #1,stackcorrect
00034510 <AmiBlitz3.ab3@27064>         MOVE.l (a7)+,a0
00034516 <AmiBlitz3.ab3@27065>  JMP 'nextcom
0003451C <AmiBlitz3.ab3@27069>   CMP.l #$100,D2
00034520 <AmiBlitz3.ab3@27070>    BCS.w 'nextpnt2
00034522 <AmiBlitz3.ab3@27071>   MOVEQ.l #$00,D2
00034526 <AmiBlitz3.ab3@27074>   BSET #$E,D2
0003452A <AmiBlitz3.ab3@27077>   BSET #$F,D2
0003452E <AmiBlitz3.ab3@27078>  BRA.w 'nextcom
00034534 <AmiBlitz3.ab3@27082>    MOVE.l destpointer,a4                   ;
0003453C <AmiBlitz3.ab3@27083>    MOVE.l #$f22a6400,-4(a4)                ;
00034542 <AmiBlitz3.ab3@27084>    MOVE.w arrayoffset,d1                   ;
00034548 <AmiBlitz3.ab3@27085>  JMP writeword                             ;
0003454E <AmiBlitz3.ab3@27090>    TST.b fpu
00034552 <AmiBlitz3.ab3@27091>    BEQ 'nofloat
00034556 <AmiBlitz3.ab3@27092>    CMP.b #5,d2
0003455A <AmiBlitz3.ab3@27093>    BNE 'nofloat
00034560 <AmiBlitz3.ab3@27094>    CLR.w fp0var
00034566 <AmiBlitz3.ab3@27095>    LEA regtable,a4
00034568 <AmiBlitz3.ab3@27096>    TST.l (a4)
0003456C <AmiBlitz3.ab3@27097>    BEQ 'noreg
00034570 <AmiBlitz3.ab3@27098>    BTST #15,d2                                             ;regvars
00034574 <AmiBlitz3.ab3@27099>    BNE 'noreg
00034578 <AmiBlitz3.ab3@27100>    CMP.w 0+4(a4),d3
0003457C <AmiBlitz3.ab3@27101>    BNE 'doreg1
00034582 <AmiBlitz3.ab3@27102>    MOVE.l #$f2000380,d1
00034588 <AmiBlitz3.ab3@27103>    MOVE.w regnum,d0
0003458C <AmiBlitz3.ab3@27104>    BNE 'noopt
00034592 <AmiBlitz3.ab3@27110>    MOVE.l destpointer,a4
0003459A <AmiBlitz3.ab3@27111>    CMP.l #$f2001c80,-8(a4)
0003459E <AmiBlitz3.ab3@27112>    BNE 'noopt
000345A6 <AmiBlitz3.ab3@27113>    CMP.l #$f2000422,-4(a4)
000345AA <AmiBlitz3.ab3@27114>    BNE 'noopt
000345B0 <AmiBlitz3.ab3@27115>    MOVE.l #$f20003a2,d1
000345BA <AmiBlitz3.ab3@27116>    SUB.l #8,destpointer
000345BC <AmiBlitz3.ab3@27119>    ASL.w #7,d0
000345BE <AmiBlitz3.ab3@27120>    OR.w d0,d1
000345C4 <AmiBlitz3.ab3@27121>    JSR writelong
000345C6 <AmiBlitz3.ab3@27122>  RTS
000345CA <AmiBlitz3.ab3@27125>   CMP.w 8+4(a4),d3
000345CE <AmiBlitz3.ab3@27126>    BNE 'doreg2
000345D4 <AmiBlitz3.ab3@27127>    MOVE.l #$f2000300,d1
000345DA <AmiBlitz3.ab3@27128>    MOVE.w regnum,d0
000345DC <AmiBlitz3.ab3@27129>    ASL.w #7,d0
000345DE <AmiBlitz3.ab3@27130>    OR.w d0,d1
000345E4 <AmiBlitz3.ab3@27131>    JSR writelong
000345E6 <AmiBlitz3.ab3@27132>  RTS
000345EA <AmiBlitz3.ab3@27135>   CMP.w 16+4(a4),d3
000345EE <AmiBlitz3.ab3@27136>    BNE 'doreg3
000345F4 <AmiBlitz3.ab3@27137>    MOVE.l #$f2000280,d1
000345FA <AmiBlitz3.ab3@27138>    MOVE.w regnum,d0
000345FC <AmiBlitz3.ab3@27139>    ASL.w #7,d0
000345FE <AmiBlitz3.ab3@27140>    OR.w d0,d1
00034604 <AmiBlitz3.ab3@27141>    JSR  writelong
00034606 <AmiBlitz3.ab3@27142>  RTS
0003460A <AmiBlitz3.ab3@27145>   CMP.w 24+4(a4),d3
0003460E <AmiBlitz3.ab3@27146>    BNE 'doreg4
00034614 <AmiBlitz3.ab3@27147>    MOVE.l #$f2000200,d1
0003461A <AmiBlitz3.ab3@27148>    MOVE.w regnum,d0
0003461C <AmiBlitz3.ab3@27149>    ASL.w #7,d0
0003461E <AmiBlitz3.ab3@27150>    OR.w d0,d1
00034624 <AmiBlitz3.ab3@27151>    JSR writelong
00034626 <AmiBlitz3.ab3@27152>  RTS
0003462A <AmiBlitz3.ab3@27155>   CMP.w 32+4(a4),d3
0003462E <AmiBlitz3.ab3@27156>    BNE 'noreg
00034634 <AmiBlitz3.ab3@27157>    MOVE.l #$f2000180,d1
0003463A <AmiBlitz3.ab3@27158>    MOVE.w regnum,d0
0003463C <AmiBlitz3.ab3@27159>    ASL.w #7,d0
0003463E <AmiBlitz3.ab3@27160>    OR.w d0,d1
00034644 <AmiBlitz3.ab3@27161>    JSR writelong
00034646 <AmiBlitz3.ab3@27162>  RTS
0003464C <AmiBlitz3.ab3@27165>    TST.w regnum
00034650 <AmiBlitz3.ab3@27166>    BNE 'nofp0
00034656 <AmiBlitz3.ab3@27167>    MOVE.l destpointer ,a4
0003465E <AmiBlitz3.ab3@27168>    CMP.l #$f2304400,-6(a4)
00034662 <AmiBlitz3.ab3@27169>    BNE 'do5
00034668 <AmiBlitz3.ab3@27170>    CMP.w #$1990,-2(a4)
0003466C <AmiBlitz3.ab3@27171>    BNE 'do5
00034670 <AmiBlitz3.ab3@27172>    BTST #15,d2                                             ;types ?
00034674 <AmiBlitz3.ab3@27173>    BNE 'do5
0003467A <AmiBlitz3.ab3@27174>   MOVE.l #$2b701990,d1                                     ;var
00034680 <AmiBlitz3.ab3@27175>   TST.w varmode
00034684 <AmiBlitz3.ab3@27176>   BEQ 'glob1
00034688 <AmiBlitz3.ab3@27177>   BCLR #25,d1
0003468C <AmiBlitz3.ab3@27180>   MOVE.l d1,-6(a4)
00034690 <AmiBlitz3.ab3@27181>   MOVE.w d3,-2(a4)
00034696 <AmiBlitz3.ab3@27182>   CLR.w fp0var
0003469E <AmiBlitz3.ab3@27183>   MOVE.w #$ffff,fp0mode
000346A0 <AmiBlitz3.ab3@27184>  RTS
000346A8 <AmiBlitz3.ab3@27187>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
000346AC <AmiBlitz3.ab3@27188>    BNE 'do3
000346B6 <AmiBlitz3.ab3@27189>    CMP.l #newtype_double,currtype
000346BA <AmiBlitz3.ab3@27190>    BEQ 'do4
000346BE <AmiBlitz3.ab3@27193>   MOVE.w #$2b6d,d1
000346C4 <AmiBlitz3.ab3@27194>    TST.w varmode
000346C8 <AmiBlitz3.ab3@27195>    BEQ 'g2
000346CC <AmiBlitz3.ab3@27196>     BCLR #9,d1
000346D0 <AmiBlitz3.ab3@27199>     CMP.w #$2b6d,d1
000346D4 <AmiBlitz3.ab3@27200>     BNE 'd1a
000346D8 <AmiBlitz3.ab3@27201>     CMP.w -2(a4),d3
000346DC <AmiBlitz3.ab3@27202>     BNE 'd1a
000346E2 <AmiBlitz3.ab3@27203>     SUBQ.l #6,destpointer
000346E6 <AmiBlitz3.ab3@27204>  BRA 'd12
000346EA <AmiBlitz3.ab3@27207>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000346F0 <AmiBlitz3.ab3@27208>     MOVE.w -2(a4),-4(a4)
000346F4 <AmiBlitz3.ab3@27209>     MOVE.w d3,-2(a4)
000346FA <AmiBlitz3.ab3@27212>   CLR.w fp0var
00034702 <AmiBlitz3.ab3@27213>     MOVE.w #$ffff,fp0mode
00034704 <AmiBlitz3.ab3@27214>  RTS
0003470C <AmiBlitz3.ab3@27217>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00034710 <AmiBlitz3.ab3@27218>    BNE 'do4
00034714 <AmiBlitz3.ab3@27219>    MOVE.w #$2b6c,d1
0003471A <AmiBlitz3.ab3@27220>       TST.w varmode
0003471E <AmiBlitz3.ab3@27221>    BEQ 'g3a
00034722 <AmiBlitz3.ab3@27222>    BCLR #9,d1
00034726 <AmiBlitz3.ab3@27225>   MOVE.w d1,-6(a4)
0003472C <AmiBlitz3.ab3@27226>     MOVE.w -2(a4),-4(a4)
00034730 <AmiBlitz3.ab3@27227>     MOVE.w d3,-2(a4)
00034736 <AmiBlitz3.ab3@27228>     CLR.w fp0var
0003473E <AmiBlitz3.ab3@27229>     MOVE.w #$ffff,fp0mode
00034740 <AmiBlitz3.ab3@27230>  RTS
00034746 <AmiBlitz3.ab3@27233>   MOVE.w d3,fp0var
00034750 <AmiBlitz3.ab3@27234>    MOVE.w varmode,fp0mode
00034752 <AmiBlitz3.ab3@27235>    ADDQ.l #6,a4
00034758 <AmiBlitz3.ab3@27236>    MOVE.l a4,fp0addr
00034762 <AmiBlitz3.ab3@27237>    MOVE.l firstiff,fp0iff
00034766 <AmiBlitz3.ab3@27240>   MOVEM.l d0/d4,-(a7)
00034768 <AmiBlitz3.ab3@27241>    MOVEQ #0,d0
0003476E <AmiBlitz3.ab3@27242>     MOVE.w regnum,d0
00034770 <AmiBlitz3.ab3@27243>    ASL.w #7,d0                                             ;fpu store var
00034774 <AmiBlitz3.ab3@27244>   BTST #15,d2
00034778 <AmiBlitz3.ab3@27245>    BEQ 'var
0003477A <AmiBlitz3.ab3@27246>    MOVE.w d1,d4
0003477E <AmiBlitz3.ab3@27247>    CMP.w #$24c0,d4
00034782 <AmiBlitz3.ab3@27248>    BNE 'nopl
00034788 <AmiBlitz3.ab3@27249>    MOVE.l #$f21a6400,d1
0003478A <AmiBlitz3.ab3@27250>    MOVEQ #0,d3
0003478E <AmiBlitz3.ab3@27251>  BRA 'glob
00034794 <AmiBlitz3.ab3@27255>   MOVE.l #$f2126400,d1
00034796 <AmiBlitz3.ab3@27256>    TST.w d3                                                ;offset =0
0003479A <AmiBlitz3.ab3@27257>    BNE 'offset
000347A0 <AmiBlitz3.ab3@27258>    MOVE.l #$f2126400,d1
000347A2 <AmiBlitz3.ab3@27266>    MOVEQ #0,d3
000347A6 <AmiBlitz3.ab3@27267>  BRA 'glob
000347AC <AmiBlitz3.ab3@27270>   MOVE.l #$f22d6400,d1                                     ;var
000347B2 <AmiBlitz3.ab3@27271>   TST.w varmode
000347B6 <AmiBlitz3.ab3@27272>   BEQ 'glob
000347BA <AmiBlitz3.ab3@27273>   BCLR #16,d1
000347BC <AmiBlitz3.ab3@27274>  'glob OR.l d0,d1
000347C6 <AmiBlitz3.ab3@27277>   CMP.l #newtype_double,currtype
000347CA <AmiBlitz3.ab3@27278>   BNE 'dbl1
000347D0 <AmiBlitz3.ab3@27279>   OR.l #$00001000,d1
000347D6 <AmiBlitz3.ab3@27282>   JSR writelong
000347DC <AmiBlitz3.ab3@27283>   CLR.l currtype
000347E0 <AmiBlitz3.ab3@27284>   MOVEM.l (a7)+,d0/d4
000347E2 <AmiBlitz3.ab3@27285>   MOVE.l d3,d1
000347E6 <AmiBlitz3.ab3@27286>   BEQ 'nooffs
000347EC <AmiBlitz3.ab3@27287>  JMP writeword
000347EE <AmiBlitz3.ab3@27290>  RTS
000347F4 <AmiBlitz3.ab3@27304>     TST.b fast                                             ;write lea->xx(a2)
000347F8 <AmiBlitz3.ab3@27305>    BEQ 'la10
000347FE <AmiBlitz3.ab3@27309>    TST.b quickadd
00034804 <AmiBlitz3.ab3@27311>      CLR.b quickadd
00034808 <AmiBlitz3.ab3@27312>    CMP.w #$2480,d1
0003480C <AmiBlitz3.ab3@27313>    BNE 'la10
00034812 <AmiBlitz3.ab3@27314>    TST.b optiarray
00034816 <AmiBlitz3.ab3@27315>    BNE 'la10
0003481C <AmiBlitz3.ab3@27316>    MOVE.l destpointer,a4
00034822 <AmiBlitz3.ab3@27317>    CMP.w #$45ea,-4(a4)
00034826 <AmiBlitz3.ab3@27318>    BNE 'la10
0003482E <AmiBlitz3.ab3@27319>    CMP.w #8,pushclen
00034832 <AmiBlitz3.ab3@27320>    BEQ 'la100
0003483A <AmiBlitz3.ab3@27321>    CMP.w #6,pushclen
0003483E <AmiBlitz3.ab3@27322>    BNE 'la10
00034842 <AmiBlitz3.ab3@27323>    CMP.b #3,d2
00034846 <AmiBlitz3.ab3@27324>    BCS 'la110
0003484C <AmiBlitz3.ab3@27326>    MOVE.w #$2540,-2(a4)
00034852 <AmiBlitz3.ab3@27327>    MOVE.w arrayoffset,d1
00034858 <AmiBlitz3.ab3@27328>  JMP writeword
0003485E <AmiBlitz3.ab3@27331>    CLR.b quickadd
00034860 <AmiBlitz3.ab3@27332>  RTS
00034864 <AmiBlitz3.ab3@27335>    CMP.b #2,d2
00034868 <AmiBlitz3.ab3@27336>    BNE 'la120
0003486E <AmiBlitz3.ab3@27337>     MOVE.w #$3540,-2(a4)
00034874 <AmiBlitz3.ab3@27338>    MOVE.w arrayoffset,d1
0003487A <AmiBlitz3.ab3@27339>  JMP writeword
0003487E <AmiBlitz3.ab3@27342>   CMP.b #1,d2
00034882 <AmiBlitz3.ab3@27343>    BNE.s 'la10
00034888 <AmiBlitz3.ab3@27344>     MOVE.w #$1540,-2(a4)
0003488E <AmiBlitz3.ab3@27345>    MOVE.w arrayoffset,d1
00034894 <AmiBlitz3.ab3@27346>  JMP writeword
00034898 <AmiBlitz3.ab3@27349>    CMP.b #3,d2
0003489C <AmiBlitz3.ab3@27350>    BCS 'la11
000348A2 <AmiBlitz3.ab3@27351>    MOVE.w #$2540,-4(a4)
000348A4 <AmiBlitz3.ab3@27352>  RTS
000348A8 <AmiBlitz3.ab3@27355>    CMP.b #2,d2
000348AC <AmiBlitz3.ab3@27356>    BNE 'la12
000348B2 <AmiBlitz3.ab3@27357>     MOVE.w #$3540,-4(a4)
000348B4 <AmiBlitz3.ab3@27358>  RTS
000348B8 <AmiBlitz3.ab3@27361>    CMP.b #1,d2
000348BC <AmiBlitz3.ab3@27362>    BNE.s 'la10
000348C2 <AmiBlitz3.ab3@27363>     MOVE.w #$1540,-4(a4)
000348C4 <AmiBlitz3.ab3@27364>  RTS
000348CA <AmiBlitz3.ab3@27367>   CLR.b optiarray
000348CE <AmiBlitz3.ab3@27369>    CMP.b #$1,D2
000348D2 <AmiBlitz3.ab3@27370>    BEQ.w 'byte
000348D6 <AmiBlitz3.ab3@27371>    BSR.w varalign
000348DA <AmiBlitz3.ab3@27372>    CMP.b #$3,D2
000348DE <AmiBlitz3.ab3@27373>    BCC.w 'writevarlong
000348E4 <AmiBlitz3.ab3@27375>    TST.b fast                                              ;optiimmi
000348E8 <AmiBlitz3.ab3@27376>    BEQ 'l10bc
000348EE <AmiBlitz3.ab3@27381>    MOVE.l destpointer,a0
000348F4 <AmiBlitz3.ab3@27382>    SUB.l imm_addr,a0
000348FA <AmiBlitz3.ab3@27383>    CMP.l #4,a0
000348FE <AmiBlitz3.ab3@27384>    BNE 'l10c
00034904 <AmiBlitz3.ab3@27385>    CLR.l imm_addr
0003490A <AmiBlitz3.ab3@27386>    MOVE.l destpointer,a4
0003490E <AmiBlitz3.ab3@27387>    OR.w #$107c,d1
00034912 <AmiBlitz3.ab3@27388>    MOVE.w d1,-4(a4)
00034914 <AmiBlitz3.ab3@27389>     MOVE.w D3,D1
0003491A <AmiBlitz3.ab3@27390>  JMP writeword
00034920 <AmiBlitz3.ab3@27393>   MOVE.l destpointer,a0
00034926 <AmiBlitz3.ab3@27394>   SUB.l load_var_addr,a0
0003492C <AmiBlitz3.ab3@27395>   CMP.l #4,a0
00034930 <AmiBlitz3.ab3@27396>   BNE 'l10bc
00034936 <AmiBlitz3.ab3@27397>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
0003493A <AmiBlitz3.ab3@27398>   BNE 'l10bc
00034940 <AmiBlitz3.ab3@27400>   CLR.l load_var_addr
00034946 <AmiBlitz3.ab3@27401>   MOVE.l destpointer,a4
0003494A <AmiBlitz3.ab3@27402>   OR.w #$102d,d1
0003494E <AmiBlitz3.ab3@27403>   MOVE.w d1,-4(a4)
00034950 <AmiBlitz3.ab3@27404>   MOVE.w d3,d1
00034956 <AmiBlitz3.ab3@27405>  JMP writeword
0003495A <AmiBlitz3.ab3@27409>   ORI.w #$1000,D1                                          ;word
0003495E <AmiBlitz3.ab3@27410>  BRA.w 'writestorevar
00034964 <AmiBlitz3.ab3@27415>    TST.b fast                                              ;optiimmi
00034968 <AmiBlitz3.ab3@27416>    BEQ 'l10bb
0003496E <AmiBlitz3.ab3@27421>    MOVE.l destpointer,a0
00034974 <AmiBlitz3.ab3@27422>    SUB.l imm_addr,a0
0003497A <AmiBlitz3.ab3@27423>    CMP.l #4,a0
0003497E <AmiBlitz3.ab3@27424>    BNE 'l10d
00034984 <AmiBlitz3.ab3@27425>    CLR.l imm_addr
0003498A <AmiBlitz3.ab3@27426>    MOVE.l destpointer,a4
0003498E <AmiBlitz3.ab3@27427>    OR.w #$7c,d1
00034992 <AmiBlitz3.ab3@27428>    EORI #$3000,d1
00034996 <AmiBlitz3.ab3@27429>    MOVE.w d1,-4(a4)
00034998 <AmiBlitz3.ab3@27430>       MOVE.w D3,D1
0003499E <AmiBlitz3.ab3@27431>  JMP writeword
000349A4 <AmiBlitz3.ab3@27434>   MOVE.l destpointer,a0
000349AA <AmiBlitz3.ab3@27435>   SUB.l load_var_addr,a0
000349B0 <AmiBlitz3.ab3@27436>   CMP.l #4,a0
000349B4 <AmiBlitz3.ab3@27437>   BNE 'l10bb
000349BA <AmiBlitz3.ab3@27438>   CLR.l load_var_addr
000349C0 <AmiBlitz3.ab3@27439>   MOVE.l destpointer,a4
000349C6 <AmiBlitz3.ab3@27440>    CMP.w #$1b6d,-4(a4)
000349CA <AmiBlitz3.ab3@27441>    BNE 'l10bb
000349CE <AmiBlitz3.ab3@27442>    OR.w #$2d,d1
000349D2 <AmiBlitz3.ab3@27443>    EORI #$3000,d1
000349D6 <AmiBlitz3.ab3@27444>    MOVE.w d1,-4(a4)
000349D8 <AmiBlitz3.ab3@27445>   MOVE.w d3,d1
000349DE <AmiBlitz3.ab3@27446>  JMP writeword
000349E4 <AmiBlitz3.ab3@27450>   ADDQ.w #1,pcodd                                          ;byte
000349E8 <AmiBlitz3.ab3@27451>   EORI.w #$3000,D1
000349EE <AmiBlitz3.ab3@27454>   JSR writeword
000349F2 <AmiBlitz3.ab3@27455>   BTST #$7,D1
000349F6 <AmiBlitz3.ab3@27456>    BNE 'done
000349F8 <AmiBlitz3.ab3@27457>   MOVE.w D3,D1
000349FE <AmiBlitz3.ab3@27458>  JMP writeword
00034A04 <AmiBlitz3.ab3@27461>    TST.b fast                                              ;optiimmi
00034A08 <AmiBlitz3.ab3@27462>    BEQ 'l10ba
00034A0E <AmiBlitz3.ab3@27466>    MOVE.l destpointer,a0
00034A14 <AmiBlitz3.ab3@27467>    SUB.l imm_addr,a0
00034A1A <AmiBlitz3.ab3@27468>    CMP.l #6,a0
00034A1E <AmiBlitz3.ab3@27469>    BNE 'l10e
00034A24 <AmiBlitz3.ab3@27470>    CLR.l imm_addr
00034A2A <AmiBlitz3.ab3@27471>    MOVE.l destpointer,a4
00034A2E <AmiBlitz3.ab3@27472>    OR.w #$7c,d1
00034A32 <AmiBlitz3.ab3@27473>    MOVE.w d1,-6(a4)
00034A34 <AmiBlitz3.ab3@27474>     MOVE.w D3,D1
00034A3A <AmiBlitz3.ab3@27475>  JMP writeword
00034A40 <AmiBlitz3.ab3@27478>   MOVE.l destpointer,a0
00034A46 <AmiBlitz3.ab3@27479>   SUB.l load_var_addr,a0
00034A4C <AmiBlitz3.ab3@27480>   CMP.l #4,a0
00034A50 <AmiBlitz3.ab3@27481>   BNE 'l10ba
00034A56 <AmiBlitz3.ab3@27482>   CLR.l load_var_addr
00034A5C <AmiBlitz3.ab3@27483>   MOVE.l destpointer,a4
00034A62 <AmiBlitz3.ab3@27484>   CMP.w #$245f,-2(a4)
00034A66 <AmiBlitz3.ab3@27485>   BEQ 'l10ba
00034A6A <AmiBlitz3.ab3@27486>   OR.w #$28,d1
00034A6E <AmiBlitz3.ab3@27487>   OR.w d1,-4(a4)
00034A74 <AmiBlitz3.ab3@27488>   CMP.w #$2b6d,-4(a4)
00034A78 <AmiBlitz3.ab3@27489>   BNE 'd1aa
00034A7C <AmiBlitz3.ab3@27490>   CMP.w -2(a4),d3
00034A80 <AmiBlitz3.ab3@27491>   BNE 'd1aa
00034A86 <AmiBlitz3.ab3@27492>   SUBQ.l #4,destpointer
00034A88 <AmiBlitz3.ab3@27493>  RTS
00034A8A <AmiBlitz3.ab3@27496>   MOVE.w d3,d1
00034A90 <AmiBlitz3.ab3@27497>  JMP writeword
00034A96 <AmiBlitz3.ab3@27501>   JSR writeword
00034A9A <AmiBlitz3.ab3@27502>   BTST #$7,D1
00034A9E <AmiBlitz3.ab3@27503>    BNE.b 'done
00034AA0 <AmiBlitz3.ab3@27504>   MOVE.w D3,D1
00034AA6 <AmiBlitz3.ab3@27505>  JMP writeword
00034AA8 <AmiBlitz3.ab3@27508> RTS
00034AAA <AmiBlitz3.ab3@27512>   MOVE.w D1,-(A7)
00034AAE <AmiBlitz3.ab3@27513>   MOVE.w pcodd(PC),D1
00034AB0 <AmiBlitz3.ab3@27514>   LSR.w #1,D1
00034AB4 <AmiBlitz3.ab3@27515>    BCC.b 'done
00034ABA <AmiBlitz3.ab3@27516>   CLR.w pcodd
00034AC0 <AmiBlitz3.ab3@27517>   MOVE.w add1a2,D1
00034AC6 <AmiBlitz3.ab3@27518>    JSR writeword
00034AC8 <AmiBlitz3.ab3@27521>   MOVE.w (A7)+,D1
00034ACA <AmiBlitz3.ab3@27522> RTS
00034ACC <AmiBlitz3.ab3@27526> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00034ACE <AmiBlitz3.ab3@27529> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034AD0 <AmiBlitz3.ab3@27530> listadd:   Ds.w 1                                          ;set to 8 if it's a list
00034AD2 <AmiBlitz3.ab3@27531> listsize:  Ds.w 1
00034AD8 <AmiBlitz3.ab3@27537>   ADDQ.w #1,regnum               ;get things into d1
00034AE0 <AmiBlitz3.ab3@27539>   MOVE.b #1,nowdeclare
00034AE6 <AmiBlitz3.ab3@27540>   CLR.b dimkeep
00034AEE <AmiBlitz3.ab3@27541>    CMP.l #"KEEP",-1(a5)
00034AF2 <AmiBlitz3.ab3@27542>   BNE 'nokeep
00034AF8 <AmiBlitz3.ab3@27543>   CMP.b #" ",3(a5)
00034AFC <AmiBlitz3.ab3@27544>   BNE 'nokeep
00034AFE <AmiBlitz3.ab3@27545>   ADDQ.l #3,a5
00034B02 <AmiBlitz3.ab3@27548>     CMP.b #" ",(a5)
00034B06 <AmiBlitz3.ab3@27549>     BNE '1
00034B08 <AmiBlitz3.ab3@27550>    ADDQ #1,a5
00034B0C <AmiBlitz3.ab3@27551>  BRA '2
00034B12 <AmiBlitz3.ab3@27554>   MOVE.l a5,lastsourcepos
00034B1A <AmiBlitz3.ab3@27555>   MOVE.b #1,dimkeep
00034B1E <AmiBlitz3.ab3@27564>   MOVE.w #$FF9A,D1           ; is #65434,
00034B24 <AmiBlitz3.ab3@27565>   JSR uselib                 ;arrays lib!
00034B2A <AmiBlitz3.ab3@27568>   CLR.w listadd
00034B2E <AmiBlitz3.ab3@27569>   CMP.w #-$7F4D,D0           ; was #$8000+tnum,d0
00034B32 <AmiBlitz3.ab3@27570>    BNE.w 'notlist
00034B3A <AmiBlitz3.ab3@27571>   MOVE.w #$0008,listadd      ;it's a list
00034B3E <AmiBlitz3.ab3@27572>   MOVE.w #$FFFA,D1           ; is #65530
00034B44 <AmiBlitz3.ab3@27573>    JSR uselib                ;use memlib
00034B4A <AmiBlitz3.ab3@27574>    JSR get1bytemain
00034B50 <AmiBlitz3.ab3@27577>   CLR.w nonew
00034B56 <AmiBlitz3.ab3@27578>    JSR getparameter
00034B5C <AmiBlitz3.ab3@27580>   JSR checkdoubledeclare
00034B64 <AmiBlitz3.ab3@27582>   BTST #$1,flagmask+1
00034B68 <AmiBlitz3.ab3@27583>    BEQ.w JUMP_syntaxerr
00034B6E <AmiBlitz3.ab3@27584>    JSR fetchvars
00034B74 <AmiBlitz3.ab3@27585>   MOVE.w notshared,D1      ; added,
00034B78 <AmiBlitz3.ab3@27586>    BNE.w 'added
00034B80 <AmiBlitz3.ab3@27590>   MOVE.w $8(A3),temp1
00034B86 <AmiBlitz3.ab3@27591>   MOVE.w proceduremode,D2
00034B8A <AmiBlitz3.ab3@27592>    BNE.w 'reloc
00034B90 <AmiBlitz3.ab3@27594>   MOVE.w globalvarpointer,-(A7)
00034B98 <AmiBlitz3.ab3@27595>   MOVE.w $4(A3),globalvarpointer
00034B9E <AmiBlitz3.ab3@27596>   ADDQ.w #4,globalvarpointer
00034BA2 <AmiBlitz3.ab3@27597>    BSR.w write_dim_code
00034BA8 <AmiBlitz3.ab3@27598>   MOVE.w (A7)+,globalvarpointer
00034BAC <AmiBlitz3.ab3@27599>  BRA.w 'next
00034BB2 <AmiBlitz3.ab3@27614>   MOVE.w globalvarpointer,-(A7)
00034BB8 <AmiBlitz3.ab3@27615>             MOVE.w proceduremode,-(a7)
00034BBE <AmiBlitz3.ab3@27616>             CLR.w proceduremode
00034BC6 <AmiBlitz3.ab3@27617>   MOVE.w $4(A3),globalvarpointer
00034BCC <AmiBlitz3.ab3@27618>   ADDQ.w #4,globalvarpointer
00034BD0 <AmiBlitz3.ab3@27619>    BSR.w write_dim_code
00034BD6 <AmiBlitz3.ab3@27620>    MOVE.w (a7)+,proceduremode
00034BDC <AmiBlitz3.ab3@27621>   MOVE.w (A7)+,globalvarpointer
00034BE0 <AmiBlitz3.ab3@27623>  BRA.w 'next
00034BE8 <AmiBlitz3.ab3@27628>   MOVE.w #$FFFF,temp1                ; was -1  ;no care on # dims
00034BEC <AmiBlitz3.ab3@27629>   MOVE.w listadd(PC),D1
00034BF0 <AmiBlitz3.ab3@27630>    BEQ.w 'isok
00034BF8 <AmiBlitz3.ab3@27631>   MOVE.w #$4000,temp1                ;yes, we do care - must be 1
00034BFE <AmiBlitz3.ab3@27633>   BSET #$0,$6(A3)                    ;set to list type of array
00034C04 <AmiBlitz3.ab3@27637>         TST.w proceduremode
00034C08 <AmiBlitz3.ab3@27638>        BNE 'l1
00034C0E <AmiBlitz3.ab3@27639>        MOVE.w locvaroff,-(a7)
00034C12 <AmiBlitz3.ab3@27643>   BSR.w write_dim_code
00034C18 <AmiBlitz3.ab3@27645>         TST.w proceduremode
00034C1C <AmiBlitz3.ab3@27646>         BNE 'next
00034C22 <AmiBlitz3.ab3@27647>        MOVE.w (A7)+,locvaroff
00034C28 <AmiBlitz3.ab3@27651>   JSR get1bytemain
00034C2C <AmiBlitz3.ab3@27652>   CMP.w #$2C,D0                ; ","
00034C30 <AmiBlitz3.ab3@27653>    BNE.w 'done
00034C36 <AmiBlitz3.ab3@27654>    JSR get1bytemain
00034C3A <AmiBlitz3.ab3@27655>  BRA.w dodim2
00034C3C <AmiBlitz3.ab3@27658> RTS
00034C42 <AmiBlitz3.ab3@27661> JUMP_syntaxerr JMP syntaxerr
00034C48 <AmiBlitz3.ab3@27662> JUMP_redimerr JMP redimerr
00034C50 <AmiBlitz3.ab3@27666>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00034C56 <AmiBlitz3.ab3@27667>   MOVE.w beginarr,D1
00034C5C <AmiBlitz3.ab3@27668>    JSR writeword
00034C5E <AmiBlitz3.ab3@27669>   MOVEQ.l #$00,D1
00034C64 <AmiBlitz3.ab3@27670>    JSR writeword
00034C66 <AmiBlitz3.ab3@27671>   MOVEQ.l #$04,D1
00034C6E <AmiBlitz3.ab3@27672>   BTST #$0,flagmask+1
00034C72 <AmiBlitz3.ab3@27673>    BNE.w 'pointer
00034C76 <AmiBlitz3.ab3@27674>   MOVE.w $8(A2),D1
00034C7A <AmiBlitz3.ab3@27677>   ADD.w listadd(PC),D1                                     ;size of one element.
00034C80 <AmiBlitz3.ab3@27678>   MOVE.w D1,listsize
00034C86 <AmiBlitz3.ab3@27679>    JSR writeword
00034C8C <AmiBlitz3.ab3@27680>   CLR.w temp2                                              ;# dim's got
00034C8E <AmiBlitz3.ab3@27681>   MOVE.l A3,-(A7)
00034C94 <AmiBlitz3.ab3@27684>   ADDQ.w #1,temp2
00034C96 <AmiBlitz3.ab3@27685>   MOVEQ.l #$03,D2                                          ;get word
00034C9C <AmiBlitz3.ab3@27686>   MOVE.w notshared,-(a7)
00034CA2 <AmiBlitz3.ab3@27687>    JSR eval
00034CA8 <AmiBlitz3.ab3@27688>   MOVE.w (a7)+,notshared
00034CAE <AmiBlitz3.ab3@27689>   TST.b debugmode
00034CB2 <AmiBlitz3.ab3@27690>    BEQ.w 'norerr0
00034CB6 <AmiBlitz3.ab3@27691>   MOVE.w #$C30F,D1
00034CBA <AmiBlitz3.ab3@27697>       MOVE.w #$5281,d1
00034CC0 <AmiBlitz3.ab3@27698>       JSR writeword
00034CC6 <AmiBlitz3.ab3@27699>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034CCC <AmiBlitz3.ab3@27700>       JSR writelong
00034CD2 <AmiBlitz3.ab3@27701>   MOVE.w proceduremode,D2
00034CD6 <AmiBlitz3.ab3@27702>    BEQ.w 'global
00034CDC <AmiBlitz3.ab3@27703>   SUBQ.w #4,locvaroff
00034CE6 <AmiBlitz3.ab3@27704>   MOVE.w locvaroff,putarr+2
00034CEA <AmiBlitz3.ab3@27705>  BRA.w 'doit
00034CF4 <AmiBlitz3.ab3@27708>   MOVE.w globalvarpointer,putarr+2
00034CFA <AmiBlitz3.ab3@27709>   ADDQ.w #4,globalvarpointer
00034D00 <AmiBlitz3.ab3@27712>   TST.b dimkeep
00034D04 <AmiBlitz3.ab3@27713>            BEQ 'doit_l1
00034D06 <AmiBlitz3.ab3@27714>       MOVEQ #0,d1
00034D0C <AmiBlitz3.ab3@27715>       MOVE.w putarr+2,d1
00034D12 <AmiBlitz3.ab3@27716>       OR.l  #$222d0000,d1
00034D18 <AmiBlitz3.ab3@27717>       MOVE.w proceduremode,D2
00034D1C <AmiBlitz3.ab3@27718>       BEQ 'doit_l2
00034D22 <AmiBlitz3.ab3@27719>       TST.w notshared
00034D26 <AmiBlitz3.ab3@27720>       BEQ 'doit_l2
00034D2C <AmiBlitz3.ab3@27721>       SUB.l #$00010000,d1
00034D32 <AmiBlitz3.ab3@27724>   JSR writelong
00034D38 <AmiBlitz3.ab3@27727>   MOVE.l putarr,D1
00034D3E <AmiBlitz3.ab3@27728>       TST.w notshared
00034D42 <AmiBlitz3.ab3@27729>       BNE 'doit_l1a
00034D48 <AmiBlitz3.ab3@27730>       JSR writelong
00034D4C <AmiBlitz3.ab3@27731>  BRA 'doit_l4
00034D52 <AmiBlitz3.ab3@27734>   JSR pokela5d
00034D56 <AmiBlitz3.ab3@27737>   CMP.w #$2C,D0
00034D5A <AmiBlitz3.ab3@27738>    BEQ.w 'loop
00034D5E <AmiBlitz3.ab3@27739>   CMP.w #$29,D0
00034D62 <AmiBlitz3.ab3@27740>    BNE.w JUMP_syntaxerr
00034D64 <AmiBlitz3.ab3@27741>   MOVEA.l (A7)+,A3
00034D6A <AmiBlitz3.ab3@27742>   MOVE.w temp1,D1
00034D6E <AmiBlitz3.ab3@27743>    BMI.w 'nocare
00034D72 <AmiBlitz3.ab3@27747>   BTST #$E,D1
00034D76 <AmiBlitz3.ab3@27748>    BEQ.w 'notl
00034D7E <AmiBlitz3.ab3@27749>   CMPI.w #$1,temp2
00034D82 <AmiBlitz3.ab3@27750>    BNE.w JUMP_redimerr
00034D86 <AmiBlitz3.ab3@27751>  BRA.w 'nocare
00034D8C <AmiBlitz3.ab3@27754>   CMP.w temp2,D1
00034D90 <AmiBlitz3.ab3@27755>    BNE.w JUMP_redimerr                                     ;range too long
00034D96 <AmiBlitz3.ab3@27758>   LEA globalvarpointer,A0
00034D9C <AmiBlitz3.ab3@27759>   MOVE.w proceduremode,D1
00034DA0 <AmiBlitz3.ab3@27760>   BEQ.w 'gskip
00034DA6 <AmiBlitz3.ab3@27761>   LEA locvaroff,A0
00034DAC <AmiBlitz3.ab3@27764>   MOVE.W  extraword,(A0)
00034DB0 <AmiBlitz3.ab3@27765>   BRA.W   'care
00034DB8 <AmiBlitz3.ab3@27768>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034DBE <AmiBlitz3.ab3@27771>   LEA doarr,A0
00034DC4 <AmiBlitz3.ab3@27772>   MOVE.w $4(A3),$2(A0)
00034DCC <AmiBlitz3.ab3@27773>   MOVE.w putarr+2,$6(A0)
00034DCE <AmiBlitz3.ab3@27774>   MOVE.l (A0)+,D1
00034DD4 <AmiBlitz3.ab3@27775>    JSR writelong
00034DD6 <AmiBlitz3.ab3@27776>   MOVE.l (A0),D1
00034DDC <AmiBlitz3.ab3@27777>    JSR writelong
00034DE2 <AmiBlitz3.ab3@27778>    TST.b dimkeep
00034DE6 <AmiBlitz3.ab3@27779>   BNE 'care_l3
00034DEA <AmiBlitz3.ab3@27782>   MOVE.w #$C400,D1
00034DEE <AmiBlitz3.ab3@27783>  BRA 'care_l2
00034DF2 <AmiBlitz3.ab3@27786>   MOVE.w #$C405,d1
00034DF8 <AmiBlitz3.ab3@27789>   MOVE.w proceduremode,D2
00034DFC <AmiBlitz3.ab3@27790>    BEQ.w 'isg
00034E02 <AmiBlitz3.ab3@27791>    TST.w notshared
00034E06 <AmiBlitz3.ab3@27792>    BEQ 'isg
00034E08 <AmiBlitz3.ab3@27793>   ADDQ.w #1,D1
00034E0C <AmiBlitz3.ab3@27796>   MOVE.w listadd(PC),D2
00034E10 <AmiBlitz3.ab3@27797>    BEQ.w 'isrg
00034E12 <AmiBlitz3.ab3@27798>   MOVE.w D1,-(A7)
00034E16 <AmiBlitz3.ab3@27799>   MOVE.w setles(PC),D1
00034E1C <AmiBlitz3.ab3@27800>    JSR writeword
00034E20 <AmiBlitz3.ab3@27801>   MOVE.w listsize(PC),D1
00034E26 <AmiBlitz3.ab3@27802>    JSR writeword
00034E28 <AmiBlitz3.ab3@27803>   MOVE.w (A7)+,D1
00034E2A <AmiBlitz3.ab3@27804>   ADDQ.w #3,D1
00034E2E <AmiBlitz3.ab3@27807> BRA.w Atokejsr
00034E32 <AmiBlitz3.ab3@27810> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00034E38 <AmiBlitz3.ab3@27819>     MOVE.l #$f23c4400,d1
00034E3E <AmiBlitz3.ab3@27821>   MOVE.w regnum,d0
00034E40 <AmiBlitz3.ab3@27822>   ASL.w #7,d0
00034E42 <AmiBlitz3.ab3@27823>   OR.w d0,d1
00034E48 <AmiBlitz3.ab3@27824>   JSR writelong
00034E4E <AmiBlitz3.ab3@27830>     MOVE.l #$40490fd9,d1
00034E54 <AmiBlitz3.ab3@27832>   JSR writelong
00034E5A <AmiBlitz3.ab3@27833> JMP get1bytemain
00034E5E <AmiBlitz3.ab3@27840> vbr:                Ds.l 1
00034E60 <AmiBlitz3.ab3@27841> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034E66 <AmiBlitz3.ab3@27843> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034E6A <AmiBlitz3.ab3@27847> constpcat:          Ds.l 1
00034E6E <AmiBlitz3.ab3@27848> constlibat:         Ds.l 1
00034E72 <AmiBlitz3.ab3@27849> constmaxpc:         Dc.l $400
00034E76 <AmiBlitz3.ab3@27851> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034E7A <AmiBlitz3.ab3@27852> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00034E7E <AmiBlitz3.ab3@27853> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034E82 <AmiBlitz3.ab3@27854> lastrestype:        Dc.l newtype_string
00034E84 <AmiBlitz3.ab3@27855> rescnt:             Ds.w 1                               ;# resident
00034E86 <AmiBlitz3.ab3@27856> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034E8A <AmiBlitz3.ab3@27857> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034E8C <AmiBlitz3.ab3@27858> linedone:           Ds.w 1
00034EA2 <AmiBlitz3.ab3@27859> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034EA6 <AmiBlitz3.ab3@27868>   Dc.l 0                                        ; bytetobyte
00034EAA <AmiBlitz3.ab3@27869>   Dc.l convert_byte_to_word                     ; bytetoword
00034EAE <AmiBlitz3.ab3@27870>   Dc.l convert_byte_to_long                     ; bytetolong
00034EB2 <AmiBlitz3.ab3@27871>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034EB6 <AmiBlitz3.ab3@27872>   Dc.l convert_byte_to_float                    ; bytetofloat
00034EBA <AmiBlitz3.ab3@27873>   Dc.l convert_byte_to_long                     ; bytetolong
00034EBE <AmiBlitz3.ab3@27874>   Dc.l error_convert_types                      ; noconerr
00034EC2 <AmiBlitz3.ab3@27877>   Dc.l convert_word_to_byte                     ; wordtobyte
00034EC6 <AmiBlitz3.ab3@27878>   Dc.l 0                                        ; wordtoword
00034ECA <AmiBlitz3.ab3@27879>   Dc.l convert_word_to_long                     ; wordtolong
00034ECE <AmiBlitz3.ab3@27880>   Dc.l convert_word_to_quick                    ; wordtoquick
00034ED2 <AmiBlitz3.ab3@27881>   Dc.l convert_word_to_float                    ; wordtofloat
00034ED6 <AmiBlitz3.ab3@27882>   Dc.l convert_word_to_long                     ; wordtolong
00034EDA <AmiBlitz3.ab3@27883>   Dc.l error_convert_types                      ; noconerr
00034EDE <AmiBlitz3.ab3@27886>   Dc.l convert_long_to_byte                     ; longtobyte
00034EE2 <AmiBlitz3.ab3@27887>   Dc.l convert_long_to_word                     ; longtoword
00034EE6 <AmiBlitz3.ab3@27888>   Dc.l 0                                        ; longtolong
00034EEA <AmiBlitz3.ab3@27889>   Dc.l convert_long_to_quick                    ; longtoquick
00034EEE <AmiBlitz3.ab3@27890>   Dc.l convert_long_to_float                    ; longtofloat
00034EF2 <AmiBlitz3.ab3@27891>   Dc.l 0                                        ; longtolong
00034EF6 <AmiBlitz3.ab3@27892>   Dc.l error_convert_types                      ; noconerr
00034EFA <AmiBlitz3.ab3@27895>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034EFE <AmiBlitz3.ab3@27896>   Dc.l convert_quick_to_word                    ; quicktoword
00034F02 <AmiBlitz3.ab3@27897>   Dc.l convert_quick_to_long                    ; quicktolong
00034F06 <AmiBlitz3.ab3@27898>   Dc.l 0                                        ; quicktoquick
00034F0A <AmiBlitz3.ab3@27899>   Dc.l convert_quick_to_float                   ; quicktofloat
00034F0E <AmiBlitz3.ab3@27900>   Dc.l convert_quick_to_long                    ; quicktolong
00034F12 <AmiBlitz3.ab3@27901>   Dc.l error_convert_types                      ; noconerr
00034F16 <AmiBlitz3.ab3@27904>   Dc.l convert_float_to_byte                    ; floattobyte
00034F1A <AmiBlitz3.ab3@27905>   Dc.l convert_float_to_word                    ; floattoword
00034F1E <AmiBlitz3.ab3@27906>   Dc.l convert_float_to_long                    ; floattolong
00034F22 <AmiBlitz3.ab3@27907>   Dc.l convert_float_to_quick                   ; floattoquick
00034F26 <AmiBlitz3.ab3@27908>   Dc.l 0                                        ; floattofloat
00034F2A <AmiBlitz3.ab3@27909>   Dc.l convert_float_to_long                    ; floattolong
00034F2E <AmiBlitz3.ab3@27910>   Dc.l error_convert_types                      ; noconerr
00034F32 <AmiBlitz3.ab3@27913>   Dc.l convert_long_to_byte                     ; longtobyte
00034F36 <AmiBlitz3.ab3@27914>   Dc.l convert_long_to_word                     ; longtoword
00034F3A <AmiBlitz3.ab3@27915>   Dc.l 0                                        ; longtolong
00034F3E <AmiBlitz3.ab3@27916>   Dc.l convert_long_to_quick                    ; longtoquick
00034F42 <AmiBlitz3.ab3@27917>   Dc.l convert_long_to_float                    ; longtofloat
00034F46 <AmiBlitz3.ab3@27918>   Dc.l 0                                        ; longtolong
00034F4A <AmiBlitz3.ab3@27919>   Dc.l error_convert_types                      ; noconerr
00034F4E <AmiBlitz3.ab3@27922>   Dc.l error_convert_types                      ; noconerr
00034F52 <AmiBlitz3.ab3@27923>   Dc.l error_convert_types                      ; noconerr
00034F56 <AmiBlitz3.ab3@27924>   Dc.l string_to_long                           ; stringtolong
00034F5A <AmiBlitz3.ab3@27925>   Dc.l error_convert_types                      ; noconerr
00034F5E <AmiBlitz3.ab3@27926>   Dc.l error_convert_types                      ; noconerr
00034F62 <AmiBlitz3.ab3@27927>   Dc.l string_to_long                           ; stringtolong
00034F66 <AmiBlitz3.ab3@27928>   Ds.l 1
00034F68 <AmiBlitz3.ab3@27934>   Dc.b $00,$2B                                  ;+ ; add
00034F6C <AmiBlitz3.ab3@27935>   Dc.l do_plus_byte                             ;doplusb
00034F70 <AmiBlitz3.ab3@27936>   Dc.l do_plus_word                             ;doplusw
00034F74 <AmiBlitz3.ab3@27937>   Dc.l do_plus_long                             ;doplusl
00034F78 <AmiBlitz3.ab3@27938>   Dc.l do_plus_long                             ;doplusl
00034F7C <AmiBlitz3.ab3@27939>   Dc.l do_plus_float                            ;doplusf
00034F80 <AmiBlitz3.ab3@27940>   Ds.l 1
00034F84 <AmiBlitz3.ab3@27941>   Dc.l add_strings                              ;addstrings
00034F86 <AmiBlitz3.ab3@27942>   Dc.b $0B,$B8
00034F88 <AmiBlitz3.ab3@27944>   Dc.b $00,$2D                                  ;- ; sub
00034F8C <AmiBlitz3.ab3@27945>   Dc.l do_minus_byte                            ;dominusb
00034F90 <AmiBlitz3.ab3@27946>   Dc.l do_minus_word                            ;dominusw
00034F94 <AmiBlitz3.ab3@27947>   Dc.l do_minus_long                            ;dominusl
00034F98 <AmiBlitz3.ab3@27948>   Dc.l do_minus_long                            ;dominusl
00034F9C <AmiBlitz3.ab3@27949>   Dc.l do_minus_float                           ;dominusf
00034FA4 <AmiBlitz3.ab3@27950>   Ds.l 2
00034FA6 <AmiBlitz3.ab3@27951>   Dc.b $0B,$B8
00034FA8 <AmiBlitz3.ab3@27953>   Dc.b $00,$2A                                  ;* ; mul
00034FAC <AmiBlitz3.ab3@27954>   Dc.l do_times_byte                            ;dotimesb
00034FB0 <AmiBlitz3.ab3@27955>   Dc.l do_times_word                            ;dotimesw
00034FB4 <AmiBlitz3.ab3@27956>   Dc.l do_times_long                            ;dotimesl
00034FB8 <AmiBlitz3.ab3@27957>   Dc.l do_times_quick                           ;dotimesq
00034FBC <AmiBlitz3.ab3@27958>   Dc.l do_times_float                           ;dotimesf
00034FC4 <AmiBlitz3.ab3@27959>   Ds.l 2
00034FC6 <AmiBlitz3.ab3@27960>   Dc.b $0F,$A0
00034FC8 <AmiBlitz3.ab3@27962>   Dc.b $00,$2F                                  ;/ ; div
00034FCC <AmiBlitz3.ab3@27963>   Dc.l do_Div_byte                              ;dodivb
00034FD0 <AmiBlitz3.ab3@27964>   Dc.l do_Div_word                              ;dodivb
00034FD4 <AmiBlitz3.ab3@27965>   Dc.l do_Div_long                              ;dodivl
00034FD8 <AmiBlitz3.ab3@27966>   Dc.l do_Div_quick                             ;dodivq
00034FDC <AmiBlitz3.ab3@27967>   Dc.l do_Div_float                             ;dodivf
00034FE4 <AmiBlitz3.ab3@27968>   Ds.l 2
00034FE6 <AmiBlitz3.ab3@27969>   Dc.b $0F,$A0
00034FE8 <AmiBlitz3.ab3@27971>   Dc.b $00,$26                                  ;& ; & int
00034FEC <AmiBlitz3.ab3@27972>   Dc.l do_AND_byte                              ;doandb
00034FF0 <AmiBlitz3.ab3@27973>   Dc.l do_AND_word                              ;doandw
00034FF4 <AmiBlitz3.ab3@27974>   Dc.l do_AND_long                              ;doandl
00034FF8 <AmiBlitz3.ab3@27975>   Dc.l do_AND_long                              ;doandl
00035004 <AmiBlitz3.ab3@27976>   Ds.l 3
00035006 <AmiBlitz3.ab3@27977>   Dc.b $13,$88
00035008 <AmiBlitz3.ab3@27979>   Dc.b $00,$7C                                  ;| ;or int ;
0003500C <AmiBlitz3.ab3@27980>   Dc.l do_OR_byte                               ;doorb
00035010 <AmiBlitz3.ab3@27981>   Dc.l do_OR_word                               ;doorw
00035014 <AmiBlitz3.ab3@27982>   Dc.l do_OR_long                               ;doorl
00035018 <AmiBlitz3.ab3@27983>   Dc.l do_OR_long                               ;doorl
00035024 <AmiBlitz3.ab3@27984>   Ds.l 3
00035026 <AmiBlitz3.ab3@27985>   Dc.b $13,$88
00035028 <AmiBlitz3.ab3@27987>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
0003502C <AmiBlitz3.ab3@27988>   Dc.l do_AND_byte                              ;doandb
00035030 <AmiBlitz3.ab3@27989>   Dc.l do_AND_word                              ;doandw
00035034 <AmiBlitz3.ab3@27990>   Dc.l do_AND_long                              ;doandl
00035038 <AmiBlitz3.ab3@27991>   Dc.l do_AND_long                              ;doandl
00035044 <AmiBlitz3.ab3@27992>   Ds.l 3
00035046 <AmiBlitz3.ab3@27993>   Dc.b $03,$E8
00035048 <AmiBlitz3.ab3@27995>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
0003504C <AmiBlitz3.ab3@27996>   Dc.l do_OR_byte                               ;doorb
00035050 <AmiBlitz3.ab3@27997>   Dc.l do_OR_word                               ;doorw
00035054 <AmiBlitz3.ab3@27998>   Dc.l do_OR_long                               ;doorl
00035058 <AmiBlitz3.ab3@27999>   Dc.l do_OR_long                               ;doorl
00035064 <AmiBlitz3.ab3@28000>   Ds.l 3
00035066 <AmiBlitz3.ab3@28001>   Dc.b $03,$E8
00035068 <AmiBlitz3.ab3@28003>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
0003506C <AmiBlitz3.ab3@28004>   Dc.l do_EOR_byte                              ;doeorb
00035070 <AmiBlitz3.ab3@28005>   Dc.l do_EOR_word                              ;doeorw
00035074 <AmiBlitz3.ab3@28006>   Dc.l do_EOR_long                              ;doeorl
00035078 <AmiBlitz3.ab3@28007>   Dc.l do_EOR_long                              ;doeorl
00035084 <AmiBlitz3.ab3@28008>   Ds.l 3
00035086 <AmiBlitz3.ab3@28009>   Dc.b $03,$E8
00035088 <AmiBlitz3.ab3@28011>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
0003508C <AmiBlitz3.ab3@28012>   Dc.l do_LSL                                   ;dolslb
00035090 <AmiBlitz3.ab3@28013>   Dc.l do_LSL                                   ;dolslw
00035094 <AmiBlitz3.ab3@28014>   Dc.l do_LSL                                   ;dolsll
00035098 <AmiBlitz3.ab3@28015>   Dc.l do_LSL                                   ;dolsll
000350A4 <AmiBlitz3.ab3@28016>   Ds.l 3
000350A6 <AmiBlitz3.ab3@28017>   Dc.b $17,$70
000350A8 <AmiBlitz3.ab3@28019>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
000350AC <AmiBlitz3.ab3@28020>   Dc.l do_LSL                                   ;dolslb
000350B0 <AmiBlitz3.ab3@28021>   Dc.l do_LSL                                   ;dolslw
000350B4 <AmiBlitz3.ab3@28022>   Dc.l do_LSL                                   ;dolsll
000350B8 <AmiBlitz3.ab3@28023>   Dc.l do_LSL                                   ;dolsll
000350C4 <AmiBlitz3.ab3@28024>   Ds.l 3
000350C6 <AmiBlitz3.ab3@28025>   Dc.b $17,$70
000350C8 <AmiBlitz3.ab3@28027>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
000350CC <AmiBlitz3.ab3@28028>   Dc.l do_LSR                                   ;dolsrb
000350D0 <AmiBlitz3.ab3@28029>   Dc.l do_LSR                                   ;dolsrw
000350D4 <AmiBlitz3.ab3@28030>   Dc.l do_LSR                                   ;dolsrl
000350D8 <AmiBlitz3.ab3@28031>   Dc.l do_LSR                                   ;dolsrl
000350E4 <AmiBlitz3.ab3@28032>   Ds.l 3
000350E6 <AmiBlitz3.ab3@28033>   Dc.b $17,$70
000350E8 <AmiBlitz3.ab3@28035>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
000350EC <AmiBlitz3.ab3@28036>   Dc.l do_ASR                                   ;doasrb
000350F0 <AmiBlitz3.ab3@28037>   Dc.l do_ASR                                   ;doasrw
000350F4 <AmiBlitz3.ab3@28038>   Dc.l do_ASR                                   ;doasrl
000350F8 <AmiBlitz3.ab3@28039>   Dc.l do_ASR                                   ;doasrl
00035104 <AmiBlitz3.ab3@28040>   Ds.l 3
00035106 <AmiBlitz3.ab3@28041>   Dc.b $17,$70
00035108 <AmiBlitz3.ab3@28043>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
0003510C <AmiBlitz3.ab3@28044>   Dc.l do_mod_byte                              ;domodb
00035110 <AmiBlitz3.ab3@28045>   Dc.l do_mod_word                              ;domodw
00035114 <AmiBlitz3.ab3@28046>   Dc.l do_mod_long                              ;domodl
00035118 <AmiBlitz3.ab3@28047>   Dc.l do_mod_quick                             ;domodq
0003511C <AmiBlitz3.ab3@28048>   Dc.l do_mod_float                             ;domodf
00035124 <AmiBlitz3.ab3@28049>   Ds.l 2
00035126 <AmiBlitz3.ab3@28050>   Dc.b $13,$88
00035128 <AmiBlitz3.ab3@28053>   Dc.b $00,$5E                                  ;^
0003512C <AmiBlitz3.ab3@28054>   Dc.l do_pow                                   ;dopow
00035130 <AmiBlitz3.ab3@28055>   Dc.l do_pow                                   ;dopow
00035134 <AmiBlitz3.ab3@28056>   Dc.l do_pow                                   ;dopow
00035138 <AmiBlitz3.ab3@28057>   Dc.l do_pow                                   ;dopow
0003513C <AmiBlitz3.ab3@28058>   Dc.l do_pow                                   ;dopow
00035144 <AmiBlitz3.ab3@28059>   Ds.l 2
00035146 <AmiBlitz3.ab3@28060>   Dc.b $1B,$58                                  ;7000
00035148 <AmiBlitz3.ab3@28063>   Dc.b $00,$3D                                  ;=
0003514C <AmiBlitz3.ab3@28064>   Dc.l do_equal_byte                            ;doeqb
00035150 <AmiBlitz3.ab3@28065>   Dc.l do_equal_word                            ;doeqw
00035154 <AmiBlitz3.ab3@28066>   Dc.l do_equal_long                            ;doeql
00035158 <AmiBlitz3.ab3@28067>   Dc.l do_equal_long                            ;doeql
0003515C <AmiBlitz3.ab3@28068>   Dc.l do_equal_float                           ;doeqf
00035160 <AmiBlitz3.ab3@28069>   Dc.l do_equal_long                            ;doeql
00035164 <AmiBlitz3.ab3@28070>   Dc.l do_equal_string                          ;doeqs
00035166 <AmiBlitz3.ab3@28071>   Dc.b $07,$D0                                  ;2000
00035168 <AmiBlitz3.ab3@28074>   Dc.b $3C,$3E                                  ;<>
0003516C <AmiBlitz3.ab3@28075>   Dc.l do_not_equal_byte                        ;doneb
00035170 <AmiBlitz3.ab3@28076>   Dc.l do_not_equal_word                        ;donew
00035174 <AmiBlitz3.ab3@28077>   Dc.l do_not_equal_long                        ;donel
00035178 <AmiBlitz3.ab3@28078>   Dc.l do_not_equal_long                        ;donel
0003517C <AmiBlitz3.ab3@28079>   Dc.l do_not_equal_float                       ;donef
00035180 <AmiBlitz3.ab3@28080>   Dc.l do_not_equal_long                        ;donel
00035184 <AmiBlitz3.ab3@28081>   Dc.l do_not_equal_string                      ;dones
00035186 <AmiBlitz3.ab3@28082>   Dc.b $07,$D0                                  ;2000
00035188 <AmiBlitz3.ab3@28085>   Dc.b $00,$3C                                  ;<
0003518C <AmiBlitz3.ab3@28086>   Dc.l do_littler_byte                          ;doltb
00035190 <AmiBlitz3.ab3@28087>   Dc.l do_littler_word                          ;doltw
00035194 <AmiBlitz3.ab3@28088>   Dc.l do_littler_long                          ;doltl
00035198 <AmiBlitz3.ab3@28089>   Dc.l do_littler_long                          ;doltl
0003519C <AmiBlitz3.ab3@28090>   Dc.l do_littler_float                         ;doltf
000351A0 <AmiBlitz3.ab3@28091>   Dc.l do_littler_long                          ;doltl
000351A4 <AmiBlitz3.ab3@28092>   Dc.l do_littler_string                        ;dolts
000351A6 <AmiBlitz3.ab3@28093>   Dc.b $07,$D0                                  ;2000
000351A8 <AmiBlitz3.ab3@28096>   Dc.b $3C,$3D                                  ;<=
000351AC <AmiBlitz3.ab3@28097>   Dc.l do_littler_equal_byte                    ;doleb
000351B0 <AmiBlitz3.ab3@28098>   Dc.l do_littler_equal_word                    ;doleb
000351B4 <AmiBlitz3.ab3@28099>   Dc.l do_littler_equal_long                    ;dolel
000351B8 <AmiBlitz3.ab3@28100>   Dc.l do_littler_equal_long                    ;dolel
000351BC <AmiBlitz3.ab3@28101>   Dc.l do_littler_equal_float                   ;dolef
000351C0 <AmiBlitz3.ab3@28102>   Dc.l do_littler_equal_long                    ;dolel
000351C4 <AmiBlitz3.ab3@28103>   Dc.l do_littler_equal_string                  ;doles
000351C6 <AmiBlitz3.ab3@28104>   Dc.b $07,$D0                                  ;2000
000351C8 <AmiBlitz3.ab3@28107>   Dc.b $00,$3E                                  ;>
000351CC <AmiBlitz3.ab3@28108>   Dc.l do_greater_byte                          ;dogtb
000351D0 <AmiBlitz3.ab3@28109>   Dc.l do_greater_word                          ;dogtw
000351D4 <AmiBlitz3.ab3@28110>   Dc.l do_greater_long                          ;dogtl
000351D8 <AmiBlitz3.ab3@28111>   Dc.l do_greater_long                          ;dogtl
000351DC <AmiBlitz3.ab3@28112>   Dc.l do_greater_float                         ;dogtf
000351E0 <AmiBlitz3.ab3@28113>   Dc.l do_greater_long                          ;dogtl
000351E4 <AmiBlitz3.ab3@28114>   Dc.l do_greater_string                        ;dogts
000351E6 <AmiBlitz3.ab3@28115>   Dc.b $07,$D0                                  ;2000
000351E8 <AmiBlitz3.ab3@28118>   Dc.b $3E,$3D                                  ;>=
000351EC <AmiBlitz3.ab3@28119>   Dc.l do_greater_equal_byte                    ;dogeb
000351F0 <AmiBlitz3.ab3@28120>   Dc.l do_greater_equal_word                    ;dogew
000351F4 <AmiBlitz3.ab3@28121>   Dc.l do_greater_equal_long                    ;dogel
000351F8 <AmiBlitz3.ab3@28122>   Dc.l do_greater_equal_long                    ;dogel
000351FC <AmiBlitz3.ab3@28123>   Dc.l do_greater_equal_float                   ;dogef
00035200 <AmiBlitz3.ab3@28124>   Dc.l do_greater_equal_long                    ;dogel
00035204 <AmiBlitz3.ab3@28125>   Dc.l do_greater_equal_string                  ;doges
00035206 <AmiBlitz3.ab3@28126>   Dc.b $07,$D0                                  ;2000
00035208 <AmiBlitz3.ab3@28128>   Dc.b $80,$CD                                  ;$8000+26+tnum
0003520C <AmiBlitz3.ab3@28129>   Dc.l _BitTst
00035210 <AmiBlitz3.ab3@28130>   Dc.l _BitTst
00035214 <AmiBlitz3.ab3@28131>   Dc.l _BitTst
00035218 <AmiBlitz3.ab3@28132>   Dc.l _BitTst
00035224 <AmiBlitz3.ab3@28133>   Ds.l 3
00035226 <AmiBlitz3.ab3@28134>   Dc.b $1F,$40                                  ;8000
00035228 <AmiBlitz3.ab3@28136>   Dc.b $80,$CE                                  ;$8000+27+tnum
0003522C <AmiBlitz3.ab3@28137>   Dc.l _BitSet
00035230 <AmiBlitz3.ab3@28138>   Dc.l _BitSet
00035234 <AmiBlitz3.ab3@28139>   Dc.l _BitSet
00035238 <AmiBlitz3.ab3@28140>   Dc.l _BitSet
00035244 <AmiBlitz3.ab3@28141>   Ds.l 3
00035246 <AmiBlitz3.ab3@28142>   Dc.b $1F,$40                                  ;8000
00035248 <AmiBlitz3.ab3@28144>   Dc.b $80,$CF                                  ;$8000+28+tnum
0003524C <AmiBlitz3.ab3@28145>   Dc.l _BitClr
00035250 <AmiBlitz3.ab3@28146>   Dc.l _BitClr
00035254 <AmiBlitz3.ab3@28147>   Dc.l _BitClr
00035258 <AmiBlitz3.ab3@28148>   Dc.l _BitClr
00035264 <AmiBlitz3.ab3@28149>   Ds.l 3
00035266 <AmiBlitz3.ab3@28150>   Dc.b $1F,$40                                  ;8000
00035268 <AmiBlitz3.ab3@28152>   Dc.b $80,$D0                                  ;$8000+29+tnum
0003526C <AmiBlitz3.ab3@28153>   Dc.l _BitChg
00035270 <AmiBlitz3.ab3@28154>   Dc.l _BitChg
00035274 <AmiBlitz3.ab3@28155>   Dc.l _BitChg
00035278 <AmiBlitz3.ab3@28156>   Dc.l _BitChg
00035284 <AmiBlitz3.ab3@28157>   Ds.l 3
00035286 <AmiBlitz3.ab3@28158>   Dc.b $1F,$40                                  ;8000
00035288 <AmiBlitz3.ab3@28160>   Dc.b $00,$00
0003528C <AmiBlitz3.ab3@28165> modetable:   Dc.l typemode
00035290 <AmiBlitz3.ab3@28168> newtypebase: Dc.l newtype_byte
00035298 <AmiBlitz3.ab3@28171>   Dc.l newtype_word,$01                                    
0003529A <AmiBlitz3.ab3@28172>   Dc.w $0001
0003529E <AmiBlitz3.ab3@28173>   Dc.b 13,"b",0,0
000352A6 <AmiBlitz3.ab3@28176>   Dc.l newtype_long,$02
000352A8 <AmiBlitz3.ab3@28177>   Dc.w $0002
000352AC <AmiBlitz3.ab3@28178>   Dc.b 13,"w",0,0
000352B4 <AmiBlitz3.ab3@28181>   Dc.l newtype_quick,$03                                   
000352B6 <AmiBlitz3.ab3@28182>   Dc.w $0004
000352BA <AmiBlitz3.ab3@28183>   Dc.b 13,"l",0,0
000352C2 <AmiBlitz3.ab3@28186>   Dc.l newtype_float,$04                                   
000352C4 <AmiBlitz3.ab3@28187>   Dc.w $0004
000352C8 <AmiBlitz3.ab3@28188>   Dc.b 13,"q",0,0
000352D0 <AmiBlitz3.ab3@28192>   Dc.l newtype_double,$05                                  ;make problems on old residents
000352D2 <AmiBlitz3.ab3@28193>   Dc.w $0004
000352D6 <AmiBlitz3.ab3@28194>   Dc.b 13,"f",0,0
000352DE <AmiBlitz3.ab3@28197>   Dc.l newtype_double,$06
000352E0 <AmiBlitz3.ab3@28198>   Dc.w $0004
000352E4 <AmiBlitz3.ab3@28199>   Dc.b 13,"a",0,0
000352EC <AmiBlitz3.ab3@28202>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
000352EE <AmiBlitz3.ab3@28203>   Dc.w $0008
000352F2 <AmiBlitz3.ab3@28204>   Dc.b 13,"d",0,0
000352FA <AmiBlitz3.ab3@28208>   Dc.l $0000000,$07                                        ;stringtype
000352FC <AmiBlitz3.ab3@28209>   Dc.w $0004
00035300 <AmiBlitz3.ab3@28210>   Dc.b 13,"s",0,0
00035308 <AmiBlitz3.ab3@28213>   Dc.l $00,$00
0003530A <AmiBlitz3.ab3@28214>   Dc.w $0000
0003530E <AmiBlitz3.ab3@28215>   Dc.b $01,$00,$00,$00
0003536E <AmiBlitz3.ab3@28218> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00035370 <AmiBlitz3.ab3@28222> dirmode:              Ds.w 1                               ;shows if directmode is on
00035374 <AmiBlitz3.ab3@28224>                       Ds.l 1                               ;int org source ;intuition!
00035376 <AmiBlitz3.ab3@28225> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
0003537A <AmiBlitz3.ab3@28226> maxsat:               Ds.l 1                               ;data1 info pos
0003537C <AmiBlitz3.ab3@28227> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
0003537E <AmiBlitz3.ab3@28229> maxsused:             Ds.w 1                               ;maximums used in prog
00035380 <AmiBlitz3.ab3@28233> dark:                 Ds.w 1                               ;dark compile?
00035382 <AmiBlitz3.ab3@28234> qlab:                 Ds.w 1                               ;quick lab allocate
00035386 <AmiBlitz3.ab3@28235> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00035388 <AmiBlitz3.ab3@28240> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
0003538A <AmiBlitz3.ab3@28241> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
0003538E <AmiBlitz3.ab3@28242> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00035392 <AmiBlitz3.ab3@28244> letstart:             Ds.l 1
00035394 <AmiBlitz3.ab3@28245> dontwrite_nomemleft:  Ds.w 1                               ;nomemleft org source
00035414 <AmiBlitz3.ab3@28246> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00035418 <AmiBlitz3.ab3@28248> locdatast:            Ds.l 1
0003541C <AmiBlitz3.ab3@28249> firstpend:            Ds.l 1
00035420 <AmiBlitz3.ab3@28253> data2at:              Ds.l 1
00035424 <AmiBlitz3.ab3@28254> data2:                Ds.l 1
00035428 <AmiBlitz3.ab3@28255> data1start:           Ds.l 1                               ;data1at org source
0003542C <AmiBlitz3.ab3@28256> data1:                Ds.l 1                               ;pc for initialized data!
00035430 <AmiBlitz3.ab3@28257> destbufferstart:      Ds.l 1                               ;pcat org source
00035434 <AmiBlitz3.ab3@28261> destbufferend:        Ds.l 1                               ;libat org source
00035438 <AmiBlitz3.ab3@28262> libend:               Ds.l 1                               ;lib org source
0003543C <AmiBlitz3.ab3@28263> allat:                Ds.l 1                               ;highest allocmemd location for code
00035446 <AmiBlitz3.ab3@28264> dummyasm:             Dc.w 0,0,0,0,0
0003544A <AmiBlitz3.ab3@28265>                       Dc.l 0
0003544C <AmiBlitz3.ab3@28266>                       Dc.w 0
00035450 <AmiBlitz3.ab3@28270> buff1:                Ds.l 1                               ;buffer for text get
00035454 <AmiBlitz3.ab3@28271> buff2:                Ds.l 1                               ;ditto for dest
00035456 <AmiBlitz3.ab3@28272> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00035458 <AmiBlitz3.ab3@28273> asmtype:              Ds.w 1                               ;0=contains no prog reference
0003545A <AmiBlitz3.ab3@28274> extraword:            Ds.w 1                               ;the extension word for assembler
0003545C <AmiBlitz3.ab3@28275> extraword2:           Ds.w 1                               ;ditto
0003545E <AmiBlitz3.ab3@28276> asmsize:              Ds.w 1
00035462 <AmiBlitz3.ab3@28277> asmbuff:              Ds.l 1
00035464 <AmiBlitz3.ab3@28278> asmlen:               Ds.w 1                               ;first (src) text len
00035466 <AmiBlitz3.ab3@28279> asmlen2:              Ds.w 1                               ;second (dest)
0003546A <AmiBlitz3.ab3@28280> templabel:            Ds.l 1                               ;linked list of expressions to resolve
0003546C <AmiBlitz3.ab3@28283> macnum:               Ds.w 1
00035470 <AmiBlitz3.ab3@28285>                       Dc.l 0                               ;address of next 0 in include fil
00035474 <AmiBlitz3.ab3@28286> titleat:              Ds.l 1                               ;5 longs for compile streaks
0003547E <AmiBlitz3.ab3@28287> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00035480 <AmiBlitz3.ab3@28288> connest:              Ds.w 1                               ;conditional nest level
00035484 <AmiBlitz3.ab3@28289> firstconst:           Ds.l 1                               ;first constant (#a)
00035486 <AmiBlitz3.ab3@28290> numarg:               Ds.w 1                               ;number of macro arguements
0003548A <AmiBlitz3.ab3@28291> myoline:              Ds.l 1                               ;macro done yet?
0003548E <AmiBlitz3.ab3@28292> myline:               Ds.l 1                               ;pointer to some memory to create
00035492 <AmiBlitz3.ab3@28295>                       Ds.l 1
000354D2 <AmiBlitz3.ab3@28296> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000354D6 <AmiBlitz3.ab3@28297> concomsp:             Dc.l concomstack                     ;stack pointer
000354D8 <AmiBlitz3.ab3@28298> oldqflag:             Ds.w 1
000354DC <AmiBlitz3.ab3@28301>                       Ds.l 1
000354DE <AmiBlitz3.ab3@28303>                       Ds.w 1
000354E2 <AmiBlitz3.ab3@28304> firstfor:             Ds.l 1                               ;first for
000354E4 <AmiBlitz3.ab3@28305> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
000354E6 <AmiBlitz3.ab3@28306> sbgot:                Ds.w 1                               ;flag for string got 2
000354E8 <AmiBlitz3.ab3@28307> convsize:             Ds.w 1                               ;usertype org source
000354EA <AmiBlitz3.ab3@28308> userp:                Ds.w 1
000354EE <AmiBlitz3.ab3@28313> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
000354F0 <AmiBlitz3.ab3@28314> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
000354F2 <AmiBlitz3.ab3@28315> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000354F6 <AmiBlitz3.ab3@28317> locloc:               Ds.l 1
000354F8 <AmiBlitz3.ab3@28318> locchar:              Ds.w 1
00035578 <AmiBlitz3.ab3@28319> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
0003557A <AmiBlitz3.ab3@28320> commode:              Ds.w 1                               ;in comma mode...
0003557E <AmiBlitz3.ab3@28321> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
00035582 <AmiBlitz3.ab3@28322> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00035586 <AmiBlitz3.ab3@28323> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00035588 <AmiBlitz3.ab3@28325>                       Ds.w 1                               ;opt reset offset
00035688 <AmiBlitz3.ab3@28327>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00035788 <AmiBlitz3.ab3@28329>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
0003578A <AmiBlitz3.ab3@28330> varcodelen:           Ds.w 1                               ;and length
0003578C <AmiBlitz3.ab3@28332>                       Ds.w 1
00035792 <AmiBlitz3.ab3@28333> oldvcodelen:          Ds.w 3                               ;old varcodelen
00035794 <AmiBlitz3.ab3@28336> Even4
00035798 <AmiBlitz3.ab3@28337> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
0003579A <AmiBlitz3.ab3@28338> memlibstat:           Ds.w 1                               ;status of memory library during
0003579C <AmiBlitz3.ab3@28341>                       Dc.w 0
0003579E <AmiBlitz3.ab3@28343>                       Dc.w 0
000357A0 <AmiBlitz3.ab3@28345> varmode:              Ds.w 1                               ;0 a5 pointer to global
000357A4 <AmiBlitz3.ab3@28347> currentfunction:      Ds.l 1                               ;thisproc org source
000357A8 <AmiBlitz3.ab3@28348> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
000357AA <AmiBlitz3.ab3@28349> 
000357AC <AmiBlitz3.ab3@28351> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
000357B0 <AmiBlitz3.ab3@28352> passstack:            Ds.l 1
000357B4 <AmiBlitz3.ab3@28353> zero:                 Ds.l 1                               ;ZERO!
000357B6 <AmiBlitz3.ab3@28354> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
000357BA <AmiBlitz3.ab3@28356> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
000357BE <AmiBlitz3.ab3@28357> constantbase:         Ds.l 1                               ;firstinc org source ;first include
000357C0 <AmiBlitz3.ab3@28358> lasta6:               Dc.w $FFFF                           ;-1 org source
000357C2 <AmiBlitz3.ab3@28359> instringon:           Ds.w 1                               ;quoteflag org source
000357C6 <AmiBlitz3.ab3@28360> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
000357CA <AmiBlitz3.ab3@28361> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
000357CE <AmiBlitz3.ab3@28362> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
000357D2 <AmiBlitz3.ab3@28363> endop:                Ds.l 1                               ;end of program pc - before finishups!
000357D6 <AmiBlitz3.ab3@28364> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000357DA <AmiBlitz3.ab3@28365> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
000357DC <AmiBlitz3.ab3@28366> numstatic:            Ds.w 1                               ;number of static structs
000357E0 <AmiBlitz3.ab3@28367> staticdata:           Ds.l 1                               ;data1 val for statics
000357E4 <AmiBlitz3.ab3@28368> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
000357E6 <AmiBlitz3.ab3@28369> sbasegot:             Ds.w 1                               ;string base got?
000357EA <AmiBlitz3.ab3@28370> litdata1:             Ds.l 1
000357EE <AmiBlitz3.ab3@28374> objlen:               Ds.l 1
000357F2 <AmiBlitz3.ab3@28375> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
000357F6 <AmiBlitz3.ab3@28376> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000357F8 <AmiBlitz3.ab3@28378> flagmask:             Ds.w 1                               ;mask for flag of variable when
000357FA <AmiBlitz3.ab3@28380> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
000357FC <AmiBlitz3.ab3@28381> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00035800 <AmiBlitz3.ab3@28382> temp1:                Ds.l 1
00035804 <AmiBlitz3.ab3@28383> temp2:                Ds.l 1
00035808 <AmiBlitz3.ab3@28385> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
0003580C <AmiBlitz3.ab3@28386> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00035880 <AmiBlitz3.ab3@28387> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
00035884 <AmiBlitz3.ab3@28388> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00035904 <AmiBlitz3.ab3@28390> namebuff2:            Ds.b 128
0003590C <AmiBlitz3.ab3@28391>                       Ds.b 8                               ;for fileinfoblock
0003594C <AmiBlitz3.ab3@28394> optstuff:             Ds.b 64                              ;temp opt make buffer
0003594E <AmiBlitz3.ab3@28411>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
00035952 <AmiBlitz3.ab3@28412>   Dc.l xtra_versionnumber                                  ; vers org source
00035956 <AmiBlitz3.ab3@28413>   Dc.l create_iconfile                                     ; create icon for executable
0003595A <AmiBlitz3.ab3@28414>   Ds.l 1
0003595C <AmiBlitz3.ab3@28416>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00035960 <AmiBlitz3.ab3@28419>   Dc.l set_use_debugger
00035964 <AmiBlitz3.ab3@28420>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00035968 <AmiBlitz3.ab3@28421>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
0003596C <AmiBlitz3.ab3@28422>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00035970 <AmiBlitz3.ab3@28423>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
00035974 <AmiBlitz3.ab3@28424>   Dc.l set_make_smallestcode
00035978 <AmiBlitz3.ab3@28425>   Dc.l set_link_debuginfo
0003597C <AmiBlitz3.ab3@28426>   Dc.l set_autorun
00035980 <AmiBlitz3.ab3@28427>   Dc.l set_interruptcheck
00035984 <AmiBlitz3.ab3@28428>   Dc.l set_assemblercheck
00035988 <AmiBlitz3.ab3@28430>   Dc.l set_overflowcheck
0003598C <AmiBlitz3.ab3@28431>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00035990 <AmiBlitz3.ab3@28432>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
00035994 <AmiBlitz3.ab3@28433>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035998 <AmiBlitz3.ab3@28436>   Ds.l 1
0003599A <AmiBlitz3.ab3@28438>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
0003599E <AmiBlitz3.ab3@28445>   Dc.l objectbuffer
000359A2 <AmiBlitz3.ab3@28446>   Dc.l libsbuffer
000359A6 <AmiBlitz3.ab3@28447>   Dc.l systembuffer
000359AA <AmiBlitz3.ab3@28448>   Dc.l databuffer
000359AE <AmiBlitz3.ab3@28449>   Dc.l macrobuffer_size
000359B2 <AmiBlitz3.ab3@28450>   Dc.l stringbuffer
000359B6 <AmiBlitz3.ab3@28453>   Ds.l 1
000359B8 <AmiBlitz3.ab3@28457>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
000359C0 <AmiBlitz3.ab3@28458>   Dc.l residents_table,0
000359C2 <AmiBlitz3.ab3@28462>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
000359CA <AmiBlitz3.ab3@28463>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
000359CC <AmiBlitz3.ab3@28464>   Ds.w 1
00035AC8 <AmiBlitz3.ab3@28468>   Ds.l 63
00035BC4 <AmiBlitz3.ab3@28469>   Ds.l 63
00035CC0 <AmiBlitz3.ab3@28470>   Ds.l 63
00035DA2 <AmiBlitz3.ab3@28471>   Ds.w 113
00035DA4 <AmiBlitz3.ab3@28474> comsettings_message:  Ds.w 1                               ;allchg org source
00035DA6 <AmiBlitz3.ab3@28475> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035DAC <AmiBlitz3.ab3@28479>   CLR.b exefilename
00035DAE <AmiBlitz3.ab3@28480>   TST.l d0
00035DB2 <AmiBlitz3.ab3@28481>   BNE 'l10
00035DB4 <AmiBlitz3.ab3@28482>  RTS
00035DBA <AmiBlitz3.ab3@28485>   JSR free_residents                                       ;jsr freeres2 org source
00035DC0 <AmiBlitz3.ab3@28486> 
00035DC6 <AmiBlitz3.ab3@28487>   LEA ptr_xtradata,A2
00035DC8 <AmiBlitz3.ab3@28488>   MOVEQ.l #$00,D4
00035DCA <AmiBlitz3.ab3@28491>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035DCE <AmiBlitz3.ab3@28492>     BEQ.b 'done
00035DD0 <AmiBlitz3.ab3@28495>     MOVE.l (A2)+,D2
00035DD4 <AmiBlitz3.ab3@28496>   BEQ.b 'loop
00035DD6 <AmiBlitz3.ab3@28498>   MOVE.l D4,D3
00035DD8 <AmiBlitz3.ab3@28499>   MOVE.l D7,D1
00035DDC <AmiBlitz3.ab3@28500>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035DDE <AmiBlitz3.ab3@28501>   TST.l D0
00035DE2 <AmiBlitz3.ab3@28502>   BNE.b 'loop2
00035DE6 <AmiBlitz3.ab3@28503>  BRA.w 'done2
00035DEC <AmiBlitz3.ab3@28506>   TST.b xtra_versionnumber
00035DF0 <AmiBlitz3.ab3@28507>    BNE.b 'nover0
00035DF8 <AmiBlitz3.ab3@28508>   MOVE.w #$0080,set_autorun                                ;auto run on
00035E02 <AmiBlitz3.ab3@28509>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035E08 <AmiBlitz3.ab3@28510>   CLR.w set_assemblercheck                                 ;assembler checking off
00035E12 <AmiBlitz3.ab3@28511>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035E16 <AmiBlitz3.ab3@28512>  BRA.b 'ver0
00035E18 <AmiBlitz3.ab3@28515>   MOVE.l D7,D1                                             ;load cli arg!
00035E1E <AmiBlitz3.ab3@28516>   MOVE.l #str_cliarguments,D2
00035E24 <AmiBlitz3.ab3@28517>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035E28 <AmiBlitz3.ab3@28518>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
00035E2E <AmiBlitz3.ab3@28519>   MOVE.l #str_cliarguments,A0
00035E34 <AmiBlitz3.ab3@28520>   ADDA.l #115,A0
00035E3A <AmiBlitz3.ab3@28521>   MOVE.l #0,(a0) ; terminate it!
00035E3C <AmiBlitz3.ab3@28523>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00035E42 <AmiBlitz3.ab3@28524>   MOVE.l #stacksize,D2
00035E48 <AmiBlitz3.ab3@28525>   MOVE.l #4,D3
00035E4C <AmiBlitz3.ab3@28526>   JSR _Read(A6)
00035E56 <AmiBlitz3.ab3@28527>   CMP.l ##MIN_STACKSIZE,stacksize
00035E5A <AmiBlitz3.ab3@28528>   BGE 'stackok
00035E64 <AmiBlitz3.ab3@28529>   MOVE.l ##MIN_STACKSIZE,stacksize
00035E66 <AmiBlitz3.ab3@28532>   MOVE.l D7,D1
00035E6C <AmiBlitz3.ab3@28533>   MOVE.l #versioninformation,D2
00035E72 <AmiBlitz3.ab3@28534>   MOVE.l #4,D3
00035E76 <AmiBlitz3.ab3@28535>   JSR _Read(A6)
00035E78 <AmiBlitz3.ab3@28537>   MOVE.l D7,D1
00035E7E <AmiBlitz3.ab3@28538>   MOVE.l #number_of_builds,D2
00035E84 <AmiBlitz3.ab3@28539>   MOVE.l #4,D3
00035E88 <AmiBlitz3.ab3@28540>   JSR _Read(A6)
00035E8E <AmiBlitz3.ab3@28546> 
00035E94 <AmiBlitz3.ab3@28547>   MOVE.l A7,errstack
00035E9E <AmiBlitz3.ab3@28548>   MOVE.l #'done2,errcont
00035EA6 <AmiBlitz3.ab3@28549>   MOVE.w #$FFFF,ezerr
00035EAC <AmiBlitz3.ab3@28552>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035EAE <AmiBlitz3.ab3@28553>     MOVEQ.l #$04,D3
00035EB0 <AmiBlitz3.ab3@28554>     MOVE.l D7,D1
00035EB4 <AmiBlitz3.ab3@28555>     JSR _Read(A6)
00035EB6 <AmiBlitz3.ab3@28556>     TST.l D0
00035EBA <AmiBlitz3.ab3@28557>     BEQ.b 'done2
00035EC0 <AmiBlitz3.ab3@28558>     MOVE.w temp1,D1
00035EC2 <AmiBlitz3.ab3@28559>     TST.w d1                                               ;new
00035EC6 <AmiBlitz3.ab3@28560>     BEQ 'done2                                         ;new
00035ECC <AmiBlitz3.ab3@28561>      JSR findlibnoerr
00035ED2 <AmiBlitz3.ab3@28563>     CMP.l #0,a1
00035ED6 <AmiBlitz3.ab3@28564>     BEQ 'dloop
00035EDA <AmiBlitz3.ab3@28565>     MOVE.l $12(A1),D0
00035EE2 <AmiBlitz3.ab3@28566>     MOVE.w temp1+2,-$4(A1,D0.L)
00035EE6 <AmiBlitz3.ab3@28567>  BRA.b 'dloop
00035EEA <AmiBlitz3.ab3@28573>   LEA residents_table(PC),A0
00035EEC <AmiBlitz3.ab3@28574>   MOVEQ.l #$07,D0
00035EF0 <AmiBlitz3.ab3@28577>     CLR.l $40(A0)
00035EF4 <AmiBlitz3.ab3@28578>     LEA ResidentEntryStep(A0),A0   ; $44
00035EF8 <AmiBlitz3.ab3@28579>   DBF D0,'loop3
00035EFC <AmiBlitz3.ab3@28581>   MOVEM.l D7/A6,-(A7)
00035F02 <AmiBlitz3.ab3@28582>   JSR init_buffers
00035F08 <AmiBlitz3.ab3@28583>   JSR reloadresident
00035F0C <AmiBlitz3.ab3@28584>   MOVEM.l (A7)+,D7/A6
00035F0E <AmiBlitz3.ab3@28585> RTS
00035F16 <AmiBlitz3.ab3@28589>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035F1C <AmiBlitz3.ab3@28598>   LEA ptr_xtradata,A2
00035F1E <AmiBlitz3.ab3@28599>   MOVEQ.l #$00,D4
00035F20 <AmiBlitz3.ab3@28603>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035F24 <AmiBlitz3.ab3@28604>   BEQ.b 'done
00035F26 <AmiBlitz3.ab3@28607>    MOVE.l (A2)+,D2
00035F2A <AmiBlitz3.ab3@28608>    BEQ.b 'loop
00035F2C <AmiBlitz3.ab3@28610>    MOVE.l D4,D3
00035F2E <AmiBlitz3.ab3@28611>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035F32 <AmiBlitz3.ab3@28612>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035F36 <AmiBlitz3.ab3@28613>  BRA.b 'loop2
00035F38 <AmiBlitz3.ab3@28616>   MOVE.l D7,D1
00035F3E <AmiBlitz3.ab3@28617>   MOVE.l #str_cliarguments,D2
00035F44 <AmiBlitz3.ab3@28618>   MOVE.l #116,D3
00035F48 <AmiBlitz3.ab3@28619>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035F4A <AmiBlitz3.ab3@28621>   MOVE.l D7,D1
00035F50 <AmiBlitz3.ab3@28622>   MOVE.l #stacksize,D2
00035F56 <AmiBlitz3.ab3@28623>   MOVE.l #4,D3
00035F5A <AmiBlitz3.ab3@28624>   JSR _Write(A6)
00035F5C <AmiBlitz3.ab3@28626>   MOVE.l D7,D1
00035F62 <AmiBlitz3.ab3@28627>   MOVE.l #versioninformation,D2
00035F68 <AmiBlitz3.ab3@28628>   MOVE.l #4,D3
00035F6C <AmiBlitz3.ab3@28629>   JSR _Write(A6)
00035F6E <AmiBlitz3.ab3@28631>   MOVE.l D7,D1
00035F74 <AmiBlitz3.ab3@28632>   MOVE.l #number_of_builds,D2
00035F7A <AmiBlitz3.ab3@28633>   MOVE.l #4,D3
00035F7E <AmiBlitz3.ab3@28634>   JSR _Write(A6)
00035F84 <AmiBlitz3.ab3@28640>   LEA libpointer,A2
00035F86 <AmiBlitz3.ab3@28643>     MOVE.l (A2),D0
00035F8A <AmiBlitz3.ab3@28644>     BEQ.w 'done2
00035F8C <AmiBlitz3.ab3@28645>     MOVEA.l D0,A2
00035F90 <AmiBlitz3.ab3@28646>     MOVE.l $12(A2),D4
00035F94 <AmiBlitz3.ab3@28647>     TST.w -$2(A2,D4.L)
00035F98 <AmiBlitz3.ab3@28648>     BEQ.w 'loop3
00035F9C <AmiBlitz3.ab3@28650>     LEA $4(A2),A0
00035F9E <AmiBlitz3.ab3@28651>     MOVE.l A0,D2
00035FA0 <AmiBlitz3.ab3@28652>     MOVEQ.l #$02,D3
00035FA2 <AmiBlitz3.ab3@28653>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00035FA6 <AmiBlitz3.ab3@28654>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035FAA <AmiBlitz3.ab3@28656>     LEA -$4(A2,D4.L),A0
00035FAC <AmiBlitz3.ab3@28657>     MOVE.l A0,D2
00035FAE <AmiBlitz3.ab3@28658>     MOVEQ.l #$02,D3
00035FB0 <AmiBlitz3.ab3@28659>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035FB4 <AmiBlitz3.ab3@28660>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035FB8 <AmiBlitz3.ab3@28661>  BRA.w 'loop3
00035FBE <AmiBlitz3.ab3@28666>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035FC0 <AmiBlitz3.ab3@28667>   MOVE.l A2,D2           ; move the address to d2
00035FC6 <AmiBlitz3.ab3@28668>   MOVE.l #4,D3           ; we only need 4 bytes to save
00035FC8 <AmiBlitz3.ab3@28669>   MOVE.l D7,D1           ; we set the file handle
00035FCC <AmiBlitz3.ab3@28670>   JSR _Write(A6)         ; and we write it.
00035FCE <AmiBlitz3.ab3@28672> RTS
00035FD4 <AmiBlitz3.ab3@28677>   LEA optssave,A0                      ; backup address
00035FDA <AmiBlitz3.ab3@28678>   LEA ptr_xtradata,A1                  ; source address
00035FDC <AmiBlitz3.ab3@28681>   MOVE.w (A1)+,D0                                          ;length of data move
00035FE0 <AmiBlitz3.ab3@28682>   BEQ.b 'backupdone
00035FE2 <AmiBlitz3.ab3@28683>   SUBQ.w #1,D0
00035FE4 <AmiBlitz3.ab3@28686>     MOVE.l (A1)+,D1
00035FE8 <AmiBlitz3.ab3@28687>     BEQ.b 'backuploop
00035FEA <AmiBlitz3.ab3@28688>     MOVEA.l D1,A2
00035FEC <AmiBlitz3.ab3@28689>     MOVE.w D0,D1
00035FEE <AmiBlitz3.ab3@28692>       MOVE.b (A2)+,(A0)+
00035FF2 <AmiBlitz3.ab3@28693>   DBF D1,'backuploop3
00035FF6 <AmiBlitz3.ab3@28695>  BRA.w 'backuploop2
00035FFC <AmiBlitz3.ab3@28699>   LEA bufferlist,A1
00035FFE <AmiBlitz3.ab3@28702>     MOVE.l (A1)+,D2
00036002 <AmiBlitz3.ab3@28703>     BEQ.b 'loop4done
00036004 <AmiBlitz3.ab3@28705>     MOVEA.l D2,A0
00036006 <AmiBlitz3.ab3@28706>     MOVE.l (A0),D2
00036008 <AmiBlitz3.ab3@28707>     ADDQ.w #8,A0
0003600E <AmiBlitz3.ab3@28708>     JSR makelong
00036012 <AmiBlitz3.ab3@28709>  BRA.b 'loop4
00036018 <AmiBlitz3.ab3@28712>   CLR.w state_of_residents                                 ;resident change
0003601E <AmiBlitz3.ab3@28713>   CLR.w comsettings_message                                ;alloc change
00036024 <AmiBlitz3.ab3@28714>   CLR.w maxobject_pos
00036026 <AmiBlitz3.ab3@28715> RTS   ; new tomsmart1
0003602C <AmiBlitz3.ab3@28719>   LEA optssave,A0
00036032 <AmiBlitz3.ab3@28720>   LEA ptr_xtradata,A1
00036034 <AmiBlitz3.ab3@28723>   MOVE.w (A1)+,D0
00036038 <AmiBlitz3.ab3@28724>   BEQ.b 'restoredone
0003603A <AmiBlitz3.ab3@28725>   SUBQ.w #1,D0
0003603C <AmiBlitz3.ab3@28728>     MOVE.l (A1)+,D1
00036040 <AmiBlitz3.ab3@28729>     BEQ.b 'restoreloop1
00036042 <AmiBlitz3.ab3@28730>     MOVEA.l D1,A2
00036044 <AmiBlitz3.ab3@28731>     MOVE.w D0,D1
00036046 <AmiBlitz3.ab3@28734>       MOVE.b (A0)+,(A2)+
0003604A <AmiBlitz3.ab3@28735>   DBF D1,'restoreloop3
0003604E <AmiBlitz3.ab3@28737>  BRA.b 'restoreloop2
00036050 <AmiBlitz3.ab3@28740> RTS
00036056 <AmiBlitz3.ab3@28744>   JSR free_residents                    ; first free the allready loaded residents
0003605C <AmiBlitz3.ab3@28745>   JSR Clear_Residents_table             ; second clear the complete resident table
0003605E <AmiBlitz3.ab3@28746> RTS
00036066 <AmiBlitz3.ab3@28750>   MOVE.w #$FFFF,state_of_residents
0003606C <AmiBlitz3.ab3@28751>   MOVE.w state_of_residents,D0
00036072 <AmiBlitz3.ab3@28752>   JSR reloadresident
00036074 <AmiBlitz3.ab3@28753> RTS
00036076 <AmiBlitz3.ab3@28759>   MOVE.l d0,a1
0003607C <AmiBlitz3.ab3@28761>   MOVEA.l libpointer,A2
00036080 <AmiBlitz3.ab3@28764>     MOVE.l $12(A2),D0
00036084 <AmiBlitz3.ab3@28765>     TST.w -$2(A2,D0.L)
00036088 <AmiBlitz3.ab3@28766>      BEQ.w 'next
0003608A <AmiBlitz3.ab3@28767>     SUBQ.w #1,D1
0003608E <AmiBlitz3.ab3@28768>      BPL.w 'next
00036092 <AmiBlitz3.ab3@28770>     MOVEA.l -$1A(A2,D0.L),A3    ;token offset
00036094 <AmiBlitz3.ab3@28771>     ADDA.l A2,A3
00036096 <AmiBlitz3.ab3@28774>       MOVE.b (A3)+,(A1)+
0003609A <AmiBlitz3.ab3@28775>     BNE.w 'tt1
0003609C <AmiBlitz3.ab3@28777>     CLR.b -(A1)
000360A0 <AmiBlitz3.ab3@28779>     MOVE.w -$4(A2,D0.L),D0
000360A6 <AmiBlitz3.ab3@28781>     AND.l #$ffff,d0
000360A8 <AmiBlitz3.ab3@28782>  RTS
000360AA <AmiBlitz3.ab3@28786>     MOVEA.l (A2),A2
000360AE <AmiBlitz3.ab3@28787> BRA.w 'loop
000360BE <AmiBlitz3.ab3@28792> str_maxobjects_name:   Dc.b "              ",0 : Even
000360CE <AmiBlitz3.ab3@28793> str_maxobjects_name2:  Dc.b "              ",0 : Even
000360D2 <AmiBlitz3.ab3@28794> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
000360D6 <AmiBlitz3.ab3@28795>                        Dc.l $00000000
000360E2 <AmiBlitz3.ab3@28796> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
000360E6 <AmiBlitz3.ab3@28798> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
000360EA <AmiBlitz3.ab3@28799>                        Dc.l $00000000
000360F6 <AmiBlitz3.ab3@28800> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
000360FA <AmiBlitz3.ab3@28802> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
000360FE <AmiBlitz3.ab3@28803>                        Dc.l $00000000
0003610A <AmiBlitz3.ab3@28804> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
0003610E <AmiBlitz3.ab3@28806> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00036112 <AmiBlitz3.ab3@28807>                        Dc.l $00000000
0003611E <AmiBlitz3.ab3@28808> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00036122 <AmiBlitz3.ab3@28810> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00036126 <AmiBlitz3.ab3@28811>                        Dc.l $00000000
00036132 <AmiBlitz3.ab3@28812> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00036136 <AmiBlitz3.ab3@28814> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
0003613A <AmiBlitz3.ab3@28815>                        Dc.l $00000000
00036146 <AmiBlitz3.ab3@28816> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00036148 <AmiBlitz3.ab3@28818> maxobjects_value:      Dc.w $0064
0003614C <AmiBlitz3.ab3@28819>                        Dc.l $00000000
00036158 <AmiBlitz3.ab3@28820> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
0003615A <AmiBlitz3.ab3@28822> maxobjects_value2:     Dc.w $0014
0003615C <AmiBlitz3.ab3@28823>                        Dc.w $0000
00036168 <AmiBlitz3.ab3@28825> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00036169 <AmiBlitz3.ab3@28829> set_create_iconfile:   Dc.b $00
0003616C <AmiBlitz3.ab3@28830> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
0003616E <AmiBlitz3.ab3@28831>                        Dc.b $00,$01
0003616F <AmiBlitz3.ab3@28833> set_use_debugger:      Dc.b $00                            ; Flags.w
00036172 <AmiBlitz3.ab3@28834> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00036174 <AmiBlitz3.ab3@28835>                        Dc.b $00,$01                        ; GadgetType.w
00036178 <AmiBlitz3.ab3@28836> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
0003617C <AmiBlitz3.ab3@28837> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00036180 <AmiBlitz3.ab3@28838> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00036182 <AmiBlitz3.ab3@28839> AL_0_11094:            Ds.w 1
00036183 <AmiBlitz3.ab3@28841> set_make_smallestcode: Ds.b 1
00036186 <AmiBlitz3.ab3@28842> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00036188 <AmiBlitz3.ab3@28843>                        Dc.b $00,$01
00036189 <AmiBlitz3.ab3@28844> set_link_debuginfo:    Ds.b 1
0003618C <AmiBlitz3.ab3@28845> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
0003618E <AmiBlitz3.ab3@28846>                        Dc.b $00,$01
000363AE <AmiBlitz3.ab3@28851>   Ds.l 136         ;resident files STEP $44 piece 8
0003642E <AmiBlitz3.ab3@28856> str_calcexpression:        Ds.l 32
00036432 <AmiBlitz3.ab3@28857> destbufferend_backup_calc: Ds.l 1             ; was calclibat
0003643C <AmiBlitz3.ab3@28865>   MOVE.l destbufferend,destbufferend_backup_calc
00036442 <AmiBlitz3.ab3@28867> 
00036448 <AmiBlitz3.ab3@28869>   MOVE.l A7,errstack
00036452 <AmiBlitz3.ab3@28870>   MOVE.l #Calc_Error_Exit,errcont
0003647C <AmiBlitz3.ab3@28878>   !basic         ; get the flage for the conversion form the editor
000364C0 <AmiBlitz3.ab3@28879>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00036504 <AmiBlitz3.ab3@28880>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00036522 <AmiBlitz3.ab3@28881>   !asm
00036528 <AmiBlitz3.ab3@28884>   LEA str_calcexpression,A0
0003652E <AmiBlitz3.ab3@28892>   JSR setcvars
00036534 <AmiBlitz3.ab3@28893>   JSR setsvars
0003653A <AmiBlitz3.ab3@28895>   CLR.w connest             ;no idea...
00036540 <AmiBlitz3.ab3@28896>   LEA str_calcexpression,A5
00036546 <AmiBlitz3.ab3@28897>   JSR evalconst3            ;evaluate constant
0003654C <AmiBlitz3.ab3@28899>   LEA str_calcexpression,A0
0003654E <AmiBlitz3.ab3@28900>   TST.l D3
00036552 <AmiBlitz3.ab3@28901>    BPL.w 'ispos
00036556 <AmiBlitz3.ab3@28902>   MOVE.b #$2D,(A0)+         ;'-'
00036558 <AmiBlitz3.ab3@28903>   NEG.l D3
00036560 <AmiBlitz3.ab3@28906>   CMPI.w #$80,CalculatorButtonDecFlag
00036564 <AmiBlitz3.ab3@28907>    BEQ.w 'dec
00036566 <AmiBlitz3.ab3@28908>   MOVEQ.l #$00,D1
0003656E <AmiBlitz3.ab3@28909>   CMPI.w #$80,CalculatorButtonBinFlag
00036572 <AmiBlitz3.ab3@28910>    BNE.w 'hex
00036574 <AmiBlitz3.ab3@28913>   MOVEQ.l #$1F,D0
00036578 <AmiBlitz3.ab3@28914>   MOVE.b #$25,(A0)+      ;'%'
0003657A <AmiBlitz3.ab3@28917>       LSL.l #1,D3
0003657E <AmiBlitz3.ab3@28918>        BCC.w 'bzero
00036582 <AmiBlitz3.ab3@28919>       MOVE.b #"1",(A0)+
00036584 <AmiBlitz3.ab3@28920>       MOVEQ.l #-$01,D1
00036588 <AmiBlitz3.ab3@28921>   BRA.w 'bnext
0003658A <AmiBlitz3.ab3@28924>       TST.w D1
0003658E <AmiBlitz3.ab3@28925>       BEQ.w 'bnext
00036592 <AmiBlitz3.ab3@28926>       MOVE.b #"0",(A0)+
00036596 <AmiBlitz3.ab3@28929>  DBF D0,'bloop
00036598 <AmiBlitz3.ab3@28932>   TST.w D1
0003659C <AmiBlitz3.ab3@28933>   BNE.w 'pc1
000365A0 <AmiBlitz3.ab3@28934>   MOVE.b #"0",(A0)+
000365A2 <AmiBlitz3.ab3@28937>   CLR.b (A0)
000365A6 <AmiBlitz3.ab3@28938>  BRA.w 'pc
000365A8 <AmiBlitz3.ab3@28941>   MOVEQ.l #$07,D0
000365AC <AmiBlitz3.ab3@28942>   MOVE.b #$24,(A0)+  ;'$'
000365AE <AmiBlitz3.ab3@28945>     MOVE.l D3,D2
000365B0 <AmiBlitz3.ab3@28946>     SWAP D2
000365B2 <AmiBlitz3.ab3@28947>     LSR.w #8,D2
000365B4 <AmiBlitz3.ab3@28948>     LSR.w #4,D2
000365B8 <AmiBlitz3.ab3@28949>     ADDI.w #$30,D2
000365BC <AmiBlitz3.ab3@28950>     CMP.w #$3A,D2
000365C0 <AmiBlitz3.ab3@28951>      BCS.w 'hok
000365C2 <AmiBlitz3.ab3@28952>     ADDQ.w #7,D2
000365C6 <AmiBlitz3.ab3@28955>     CMP.w #$30,D2
000365CA <AmiBlitz3.ab3@28956>     BEQ.w 'hzero
000365CC <AmiBlitz3.ab3@28957>     MOVE.b D2,(A0)+
000365CE <AmiBlitz3.ab3@28958>     MOVEQ.l #-$01,D1
000365D2 <AmiBlitz3.ab3@28959>   BRA.w 'hnext
000365D4 <AmiBlitz3.ab3@28962>     TST.w D1
000365D8 <AmiBlitz3.ab3@28963>      BEQ.w 'hnext
000365DA <AmiBlitz3.ab3@28964>     MOVE.b D2,(A0)+
000365DC <AmiBlitz3.ab3@28967>     LSL.l #4,D3
000365E0 <AmiBlitz3.ab3@28968>  DBF D0,'hloop
000365E4 <AmiBlitz3.ab3@28970>  BRA.w 'bdone
000365E6 <AmiBlitz3.ab3@28973>   MOVE.l D3,D2
000365EC <AmiBlitz3.ab3@28974>   JSR makelong          ;to long...
000365F6 <AmiBlitz3.ab3@28981>   MOVE.l destbufferend_backup_calc,destbufferend
000365F8 <AmiBlitz3.ab3@28983> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
000366F7 <AmiBlitz3.ab3@28987> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000366F8 <AmiBlitz3.ab3@28989> Even
000366FA <AmiBlitz3.ab3@29007>     MOVE.b (a5)+,d0
000366FE <AmiBlitz3.ab3@29008>     BEQ 'l2
00036702 <AmiBlitz3.ab3@29009>     CMP.b #$80,d0
00036706 <AmiBlitz3.ab3@29010>     BNE 'l1
00036708 <AmiBlitz3.ab3@29011>     MOVE.b (a5)+,d0
0003670C <AmiBlitz3.ab3@29012>     BEQ 'l2
00036710 <AmiBlitz3.ab3@29013>     CMP.b #$02,d0
00036714 <AmiBlitz3.ab3@29014>   BNE 'l1
00036718 <AmiBlitz3.ab3@29017>     CMP.b #$20,(a5)+
0003671C <AmiBlitz3.ab3@29018>   BEQ 'l3
0003671E <AmiBlitz3.ab3@29019>   SUBQ.l #1,a5
00036720 <AmiBlitz3.ab3@29020>   TST.b (a5)
00036724 <AmiBlitz3.ab3@29021>   BEQ 'l2
00036728 <AmiBlitz3.ab3@29022>   CMP.w #$8008,(a5)
0003672C <AmiBlitz3.ab3@29023>   BEQ 'l4
00036730 <AmiBlitz3.ab3@29024>   CMP.w #$8009,(a5)
00036734 <AmiBlitz3.ab3@29025>   BEQ 'l4
00036738 <AmiBlitz3.ab3@29026>  BRA 'l1
0003673A <AmiBlitz3.ab3@29029>   ADDQ.l #2,a5
00036740 <AmiBlitz3.ab3@29030>   JSR skiprest
00036742 <AmiBlitz3.ab3@29031> RTS
00036748 <AmiBlitz3.ab3@29034>   JSR nextline
0003674C <AmiBlitz3.ab3@29035>   BNE 'l1
0003674E <AmiBlitz3.ab3@29036> RTS
00036778 <AmiBlitz3.ab3@29040>   !basic
00036782 <AmiBlitz3.ab3@29041>   DateFormat 1
00036790 <AmiBlitz3.ab3@29042>   i.l=SystemDate
000367B6 <AmiBlitz3.ab3@29043>   a$=Date$ (i)
00036834 <AmiBlitz3.ab3@29044>   a$=Replace$(a$,"/",".")
0003683A <AmiBlitz3.ab3@29045>   GetD0 &a$
0003683C <AmiBlitz3.ab3@29046>   MOVEQ #8,d2
0003683E <AmiBlitz3.ab3@29047>   MOVE.l d0,a0
00036840 <AmiBlitz3.ab3@29050>     MOVE.b (a0)+,d1
00036846 <AmiBlitz3.ab3@29051>     JSR pokedata1b
0003684A <AmiBlitz3.ab3@29052>  DBF d2,'l1
0003684C <AmiBlitz3.ab3@29054>   MOVEQ #0,d0
0003684E <AmiBlitz3.ab3@29055>   MOVE.b (a0)+,d0
0003686C <AmiBlitz3.ab3@29056>   !asm
00036872 <AmiBlitz3.ab3@29057>   ADD.l #9,d2
00036878 <AmiBlitz3.ab3@29058>   ADD.l #9,a5
0003687A <AmiBlitz3.ab3@29059> RTS
000368A4 <AmiBlitz3.ab3@29063>   !basic
000368AE <AmiBlitz3.ab3@29064>   DateFormat 0
000368BC <AmiBlitz3.ab3@29065>   i.l=SystemDate
000368E2 <AmiBlitz3.ab3@29066>   a$=Date$ (i)
00036960 <AmiBlitz3.ab3@29067>   a$=Replace$(a$,"/",".")
00036966 <AmiBlitz3.ab3@29068>   GetD0 &a$
00036968 <AmiBlitz3.ab3@29069>   MOVEQ #8,d2
0003696A <AmiBlitz3.ab3@29070>   MOVE.l d0,a0
0003696C <AmiBlitz3.ab3@29073>     MOVE.b (a0)+,d1
00036972 <AmiBlitz3.ab3@29074>     JSR pokedata1b
00036976 <AmiBlitz3.ab3@29075>  DBF d2,'l1
00036978 <AmiBlitz3.ab3@29077>   MOVEQ #0,d0
0003697A <AmiBlitz3.ab3@29078>   MOVE.b (a0)+,d0
00036998 <AmiBlitz3.ab3@29079>   !asm
0003699E <AmiBlitz3.ab3@29080>   ADD.l #9,d2
000369A4 <AmiBlitz3.ab3@29081>   ADD.l #13,a5
000369A6 <AmiBlitz3.ab3@29082> RTS
000369D0 <AmiBlitz3.ab3@29086>   !basic
000369DA <AmiBlitz3.ab3@29087>   DateFormat 1
000369E8 <AmiBlitz3.ab3@29088>   i.l = SystemDate
00036A0E <AmiBlitz3.ab3@29089>   a$ = Date$ (i)
00036A8C <AmiBlitz3.ab3@29090>   a$ = Replace$(a$,"/",".")
00036A92 <AmiBlitz3.ab3@29091>   GetD0 &a$
00036A94 <AmiBlitz3.ab3@29092>   MOVEQ #8,d2
00036A96 <AmiBlitz3.ab3@29093>   MOVE.l d0,a0
00036A98 <AmiBlitz3.ab3@29096>     MOVE.b (a0)+,d1
00036A9E <AmiBlitz3.ab3@29097>     JSR writebyte
00036AA2 <AmiBlitz3.ab3@29098>  DBF d2,'l1
00036AA4 <AmiBlitz3.ab3@29100>   MOVEQ #0,d0
00036AA6 <AmiBlitz3.ab3@29101>   MOVE.b (a0)+,d0
00036AC4 <AmiBlitz3.ab3@29102>   !asm
00036ACA <AmiBlitz3.ab3@29103>   ADD.l #9,a5
00036ACC <AmiBlitz3.ab3@29104> RTS
00036AF6 <AmiBlitz3.ab3@29108>   !basic
00036B00 <AmiBlitz3.ab3@29109>   DateFormat 0
00036B0E <AmiBlitz3.ab3@29110>   i.l=SystemDate
00036B34 <AmiBlitz3.ab3@29111>   a$=Date$ (i)
00036BB2 <AmiBlitz3.ab3@29112>   a$=Replace$(a$,"/",".")
00036BB8 <AmiBlitz3.ab3@29113>   GetD0 &a$
00036BBA <AmiBlitz3.ab3@29114>   MOVEQ #8,d2
00036BBC <AmiBlitz3.ab3@29115>   MOVE.l d0,a0
00036BBE <AmiBlitz3.ab3@29118>     MOVE.b (a0)+,d1
00036BC4 <AmiBlitz3.ab3@29119>     JSR writebyte
00036BC8 <AmiBlitz3.ab3@29120>  DBF d2,'l1
00036BCA <AmiBlitz3.ab3@29122>   MOVEQ #0,d0
00036BCC <AmiBlitz3.ab3@29123>   MOVE.b (a0)+,d0
00036BEA <AmiBlitz3.ab3@29124>   !asm
00036BF0 <AmiBlitz3.ab3@29125>   ADD.l #13,a5
00036BF2 <AmiBlitz3.ab3@29126> RTS
00036BF4 <AmiBlitz3.ab3@29130>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036BF6 <AmiBlitz3.ab3@29131>   MOVE.l a5,d0
00036C20 <AmiBlitz3.ab3@29132>   !basic
00036C24 <AmiBlitz3.ab3@29133>   _myD0.l = PutD0
00036C2E <AmiBlitz3.ab3@29134>   If _myD0
00036C74 <AmiBlitz3.ab3@29135>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036CC6 <AmiBlitz3.ab3@29136>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036CCC <AmiBlitz3.ab3@29137>   Else
00036D06 <AmiBlitz3.ab3@29138>     error{"INTERNAL: Invalid pointer in version_string!"}
00036D16 <AmiBlitz3.ab3@29143>   actual_version.l = Peek.l(?versioninformation)
00036D26 <AmiBlitz3.ab3@29144>   actual_build.l   = Peek.l(?number_of_builds)
00036D4A <AmiBlitz3.ab3@29146>   Format "00"
00036D80 <AmiBlitz3.ab3@29147>   Select verstring$
00036DA4 <AmiBlitz3.ab3@29149>     Case "VER_MAJOR"
00036DE0 <AmiBlitz3.ab3@29150>      put_versionstr$ = Str$(actual_version LSR 24)
00036E0A <AmiBlitz3.ab3@29152>     Case "VER_MINOR"
00036E4E <AmiBlitz3.ab3@29153>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036E78 <AmiBlitz3.ab3@29155>     Case "VER_PATCH"
00036EBC <AmiBlitz3.ab3@29156>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036EE6 <AmiBlitz3.ab3@29158>     Case "VER_BUILD"
00036F0A <AmiBlitz3.ab3@29159>      Format ""
00036F3E <AmiBlitz3.ab3@29160>      put_versionstr$ = Str$(actual_build)
00036F44 <AmiBlitz3.ab3@29162>     Default
00036F6C <AmiBlitz3.ab3@29163>      put_versionstr$ = "{unknown compilerconstant}"
00036F7A <AmiBlitz3.ab3@29166>   End Select
00036F9E <AmiBlitz3.ab3@29167>   Format ""
00036FAE <AmiBlitz3.ab3@29169>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00036FB0 <AmiBlitz3.ab3@29170>   MOVE.l d0,d2
00036FB2 <AmiBlitz3.ab3@29171>   MOVE.l d2,-(a7)
00036FB6 <AmiBlitz3.ab3@29172>   SUB #1,d2
00036FBC <AmiBlitz3.ab3@29174>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036FBE <AmiBlitz3.ab3@29175>   MOVE.l d0,a0
00036FC0 <AmiBlitz3.ab3@29178>     MOVE.b (a0)+,d1
00036FC6 <AmiBlitz3.ab3@29179>     JSR pokedata1b
00036FCA <AmiBlitz3.ab3@29180>  DBF d2,'l1
00036FCC <AmiBlitz3.ab3@29182>   MOVEQ #0,d0
00036FEA <AmiBlitz3.ab3@29183>   !asm
00036FEC <AmiBlitz3.ab3@29184>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036FEE <AmiBlitz3.ab3@29185>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036FF0 <AmiBlitz3.ab3@29186>   ADD.l d0,d2
00036FF6 <AmiBlitz3.ab3@29187>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036FF8 <AmiBlitz3.ab3@29188>   MOVEQ #0,d0
00036FFA <AmiBlitz3.ab3@29189> RTS
00036FFC <AmiBlitz3.ab3@29193>   MOVE.l a5,d0
00037026 <AmiBlitz3.ab3@29194>   !basic
0003702A <AmiBlitz3.ab3@29195>   _myD0.l = PutD0
00037034 <AmiBlitz3.ab3@29196>   If _myD0
0003707A <AmiBlitz3.ab3@29197>     verstring$ = Left$(Peek.s(_myD0),9+3)
000370CC <AmiBlitz3.ab3@29198>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
000370D2 <AmiBlitz3.ab3@29199>   Else
0003710C <AmiBlitz3.ab3@29200>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
0003711C <AmiBlitz3.ab3@29205>   actual_version.l = Peek.l(?versioninformation)
0003712C <AmiBlitz3.ab3@29206>   actual_build.l   = Peek.l(?number_of_builds)
00037150 <AmiBlitz3.ab3@29208>   Format ""
00037186 <AmiBlitz3.ab3@29209>   Select verstring$
000371AA <AmiBlitz3.ab3@29211>     Case "VER_MAJOR"
000371E6 <AmiBlitz3.ab3@29212>      put_versionstr$ = Str$(actual_version LSR 24)
00037210 <AmiBlitz3.ab3@29214>     Case "VER_MINOR"
00037254 <AmiBlitz3.ab3@29215>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
0003727E <AmiBlitz3.ab3@29217>     Case "VER_PATCH"
000372C2 <AmiBlitz3.ab3@29218>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
000372EC <AmiBlitz3.ab3@29220>     Case "VER_BUILD"
00037310 <AmiBlitz3.ab3@29221>      Format ""
00037344 <AmiBlitz3.ab3@29222>      put_versionstr$ = Str$(actual_build)
0003734A <AmiBlitz3.ab3@29224>     Default
00037372 <AmiBlitz3.ab3@29225>      put_versionstr$ = "{unknown compilerconstant}"
00037380 <AmiBlitz3.ab3@29227>   End Select
000373A4 <AmiBlitz3.ab3@29228>   Format ""
000373BA <AmiBlitz3.ab3@29230>   GetD0 FLen(put_versionstr$)-1
000373BC <AmiBlitz3.ab3@29231>   MOVE.l d0,d2
000373C2 <AmiBlitz3.ab3@29233>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
000373C4 <AmiBlitz3.ab3@29234>   MOVE.l d0,a0
000373C6 <AmiBlitz3.ab3@29237>     MOVE.b (a0)+,d1
000373CC <AmiBlitz3.ab3@29238>     JSR writebyte
000373D0 <AmiBlitz3.ab3@29239>  DBF d2,'l1
000373D2 <AmiBlitz3.ab3@29241>   MOVEQ #0,d0
000373D4 <AmiBlitz3.ab3@29242>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
000373F2 <AmiBlitz3.ab3@29243>   !asm
000373F8 <AmiBlitz3.ab3@29244>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
000373FA <AmiBlitz3.ab3@29245> RTS
000373FC <AmiBlitz3.ab3@29347>   MOVE.l a5,-(a7)
00037428 <AmiBlitz3.ab3@29348>   !fget
0003742C <AmiBlitz3.ab3@29349>   CMP.w #".",d0
00037430 <AmiBlitz3.ab3@29350>   BNE 'skip
00037434 <AmiBlitz3.ab3@29351>   MOVEM.l a2/d2,-(a7)
0003743A <AmiBlitz3.ab3@29352>   LEA newtypebase,a2
00037440 <AmiBlitz3.ab3@29353>   JSR getparameter2
00037444 <AmiBlitz3.ab3@29354>   BEQ.w JUMP_syntaxerr
0003744A <AmiBlitz3.ab3@29355>   JSR findtype
0003744E <AmiBlitz3.ab3@29356>   BNE.w JUMP_notypeerr2
00037454 <AmiBlitz3.ab3@29357>   MOVE.l a2,typetocast
00037458 <AmiBlitz3.ab3@29358>   MOVEM.l (a7)+,a2/d2
0003745C <AmiBlitz3.ab3@29359>   CMP.w #")",d0
00037460 <AmiBlitz3.ab3@29360>   BNE JUMP_errorbracketmiss
00037462 <AmiBlitz3.ab3@29361>   ADDQ.l #4,a7
0003748E <AmiBlitz3.ab3@29362>   !fget
00037494 <AmiBlitz3.ab3@29363>   JMP nocast
00037496 <AmiBlitz3.ab3@29366>   MOVE.l (a7)+,a5
0003749C <AmiBlitz3.ab3@29367> JMP bracket
000374A2 <AmiBlitz3.ab3@29370> JUMP_errorbracketmiss JMP errorbracketmiss
000374CC <AmiBlitz3.ab3@29373> Function.l ab3_GetIncludeLock{filename.s}
000374EC <AmiBlitz3.ab3@29374>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
00037544 <AmiBlitz3.ab3@29375>   ex.s       = dos_GetExt{filename}
00037558 <AmiBlitz3.ab3@29377>   If incLock = False
000375CC <AmiBlitz3.ab3@29378>     filename = dos_SetExt{filename,"ab3"}
000375EC <AmiBlitz3.ab3@29379>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00037600 <AmiBlitz3.ab3@29382>   If incLock = False
00037674 <AmiBlitz3.ab3@29383>     filename = dos_SetExt{filename,"ab2"}
00037694 <AmiBlitz3.ab3@29384>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
000376A8 <AmiBlitz3.ab3@29387>   If incLock = False
0003771C <AmiBlitz3.ab3@29388>     filename = dos_SetExt{filename,"bb2"}
0003773C <AmiBlitz3.ab3@29389>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00037750 <AmiBlitz3.ab3@29392>   If incLock = False
000377E2 <AmiBlitz3.ab3@29393>     filename = dos_SetExt{filename,ex+".ab3"}
00037802 <AmiBlitz3.ab3@29394>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00037816 <AmiBlitz3.ab3@29397>   If incLock = False
0003788A <AmiBlitz3.ab3@29398>     filename = dos_SetExt{filename,"ab2"}
000378AA <AmiBlitz3.ab3@29399>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
000378BE <AmiBlitz3.ab3@29402>   If incLock = False
00037932 <AmiBlitz3.ab3@29403>     filename = dos_SetExt{filename,"bb2"}
00037952 <AmiBlitz3.ab3@29404>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
0003795C <AmiBlitz3.ab3@29407>  Function Return incLock
00037976 <AmiBlitz3.ab3@29408> End Function
000379A0 <AmiBlitz3.ab3@29412>   !basic
000379CA <AmiBlitz3.ab3@29413>   incString.s = Peek$(?ptr_parameterstore)
000379F8 <AmiBlitz3.ab3@29415>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000379FC <AmiBlitz3.ab3@29416>   incDirP.l   = PutD0                                       ;    "
00037A24 <AmiBlitz3.ab3@29417>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037AA4 <AmiBlitz3.ab3@29418>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037AD6 <AmiBlitz3.ab3@29419>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
00037AEA <AmiBlitz3.ab3@29421>   If incLock = False ; not found => check default Include Directory
00037AFA <AmiBlitz3.ab3@29422>     incDirP.l = Peek.l(?incd)
00037B04 <AmiBlitz3.ab3@29423>     If incDirP
00037B2C <AmiBlitz3.ab3@29424>       incDir_.s = Peek.s(incDirP)
00037B32 <AmiBlitz3.ab3@29425>     Else
00037B9C <AmiBlitz3.ab3@29426>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037C1C <AmiBlitz3.ab3@29428>     incFile.s = dos_AddPart{incDir_,incString}
00037C4E <AmiBlitz3.ab3@29429>     incLock.l = ab3_GetIncludeLock{incFile}
00037C62 <AmiBlitz3.ab3@29432>   If incLock = False ; not found => check relative to current source
00037C7A <AmiBlitz3.ab3@29433>     incDepth.l = Peek.w(?ininclude)-1
00037CA0 <AmiBlitz3.ab3@29434>     If incDepth >= 0 AND incDepth < #maxincludes
00037D00 <AmiBlitz3.ab3@29435>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037D80 <AmiBlitz3.ab3@29436>       incFile.s = dos_AddPart{incDir_,incString}
00037DB2 <AmiBlitz3.ab3@29437>       incLock.l = ab3_GetIncludeLock{incFile}
00037DC6 <AmiBlitz3.ab3@29441>   If incLock = False ; still not found => check default Include Directory and name only
00037DD6 <AmiBlitz3.ab3@29442>     incDirP.l = Peek.l(?incd)
00037DE0 <AmiBlitz3.ab3@29443>     If incDirP
00037E08 <AmiBlitz3.ab3@29444>       incDir_.s = Peek.s(incDirP)
00037E0E <AmiBlitz3.ab3@29445>     Else
00037E78 <AmiBlitz3.ab3@29446>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037F26 <AmiBlitz3.ab3@29448>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037F58 <AmiBlitz3.ab3@29449>     incLock.l = ab3_GetIncludeLock{incFile}
00037F62 <AmiBlitz3.ab3@29452>   If incLock
00037F78 <AmiBlitz3.ab3@29453>     MaxLen incFile = 1024
00037F9C <AmiBlitz3.ab3@29454>     NameFromLock_ incLock,&incFile,1024
00037FC6 <AmiBlitz3.ab3@29455>     incFile = Peek.s(&incFile)
00037FFE <AmiBlitz3.ab3@29456>     Poke$ ?ptr_parameterstore,incFile
00038012 <AmiBlitz3.ab3@29457>     i = FLen(incFile)
0003801E <AmiBlitz3.ab3@29458>     GetReg d0,i
00038024 <AmiBlitz3.ab3@29459>     MOVE.l d0,tempstore
00038034 <AmiBlitz3.ab3@29460>     UnLock_ incLock
00038052 <AmiBlitz3.ab3@29463>   !asm
00038058 <AmiBlitz3.ab3@29464>   TST.l tempstore
0003805C <AmiBlitz3.ab3@29465>    BEQ 'l1
00038062 <AmiBlitz3.ab3@29466>   MOVE.l tempstore,d2
00038064 <AmiBlitz3.ab3@29469> RTS
0003808E <AmiBlitz3.ab3@29473>   !basic
000380B8 <AmiBlitz3.ab3@29474>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
000380E6 <AmiBlitz3.ab3@29475>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000380EA <AmiBlitz3.ab3@29476>   incDirP.l   = PutD0                                       ;    "
00038112 <AmiBlitz3.ab3@29477>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00038192 <AmiBlitz3.ab3@29478>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
000381B2 <AmiBlitz3.ab3@29479>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
000381C6 <AmiBlitz3.ab3@29481>   If incLock = False                                        ; not found => try orignal string only to find
000381E6 <AmiBlitz3.ab3@29482>     incLock.l = Lock_(&incString,#ACCESS_READ)
000381F0 <AmiBlitz3.ab3@29485>   If incLock                                                ; found => store full path
00038206 <AmiBlitz3.ab3@29486>     MaxLen incFile = 1024
0003822A <AmiBlitz3.ab3@29487>     NameFromLock_ incLock,&incFile,1024
00038254 <AmiBlitz3.ab3@29488>     incFile = Peek.s(&incFile)
0003828C <AmiBlitz3.ab3@29489>     Poke$ ?ptr_parameterstore,incFile
00038298 <AmiBlitz3.ab3@29492> 
000382B6 <AmiBlitz3.ab3@29493>   !asm
000382B8 <AmiBlitz3.ab3@29494> RTS
000382BE <AmiBlitz3.ab3@29505>   JSR Aclearallvars
000382C4 <AmiBlitz3.ab3@29506>   JSR free_unusedfunctions
000382CE <AmiBlitz3.ab3@29521>   MOVE.l #"NORE",reqmode
000382D4 <AmiBlitz3.ab3@29522> JSR handle_compileerror
000382D6 <AmiBlitz3.ab3@29525>   MOVE.l d0,-(a7)
000382D8 <AmiBlitz3.ab3@29526>   MOVE.l a5,d0
000382E2 <AmiBlitz3.ab3@29527>   !basica7
000382E6 <AmiBlitz3.ab3@29528>   i.l = PutD0
000382F0 <AmiBlitz3.ab3@29529>   If i
00038318 <AmiBlitz3.ab3@29530>     a$ = Peek$(i)
0003834A <AmiBlitz3.ab3@29531>     b$ = Peeks$(i-7,7)
00038482 <AmiBlitz3.ab3@29533> 
00038488 <AmiBlitz3.ab3@29534>     MOVE.l d0,result
0003848C <AmiBlitz3.ab3@29536>   !asma7
0003848E <AmiBlitz3.ab3@29537>   MOVE.l (a7)+,d0
00038490 <AmiBlitz3.ab3@29538> RTS
000384BA <AmiBlitz3.ab3@29542>   !basic
000384E8 <AmiBlitz3.ab3@29543>   !ComData_LEA{comStr_CurrentDir,D0}
000384EC <AmiBlitz3.ab3@29544>   currentDirP.l = PutD0
0003851A <AmiBlitz3.ab3@29546>   !ComData_LEA{comStr_SourceName,D0}
0003851E <AmiBlitz3.ab3@29547>   fileNameP.l = PutD0
00038546 <AmiBlitz3.ab3@29549>   check_dirname$  = Peek$(currentDirP)
0003856E <AmiBlitz3.ab3@29550>   check_filename$ = Peek$(fileNameP)
000385F4 <AmiBlitz3.ab3@29551>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000385FA <AmiBlitz3.ab3@29552>     JSR free_unusedfunctions
00038644 <AmiBlitz3.ab3@29554>   olddirname$ = Peek$(check_dirname$)
0003868E <AmiBlitz3.ab3@29555>   oldfilename$ = Peek$(check_filename$)
000386B8 <AmiBlitz3.ab3@29556>   For i = 0 To #maxincludes-1
000386CC <AmiBlitz3.ab3@29557>     incline(i) = 0
000386DC <AmiBlitz3.ab3@29558>   Next
000386FA <AmiBlitz3.ab3@29559>   !asm
000386FC <AmiBlitz3.ab3@29560> RTS
000386FE <AmiBlitz3.ab3@29564>   MOVEQ #0,d1
00038700 <AmiBlitz3.ab3@29567>   MOVE.b (a5)+,d0
00038704 <AmiBlitz3.ab3@29568>   BEQ 'er1
00038708 <AmiBlitz3.ab3@29569>   CMP.b #$20,d0
0003870C <AmiBlitz3.ab3@29570>   BEQ 'l1
0003870E <AmiBlitz3.ab3@29571>   ADDQ #1,d1
00038712 <AmiBlitz3.ab3@29572>   CMP.b #$22,d0
00038716 <AmiBlitz3.ab3@29573>   BNE 'l1
00038718 <AmiBlitz3.ab3@29574>  RTS
0003871E <AmiBlitz3.ab3@29577> JMP syntaxerr
00038742 <AmiBlitz3.ab3@29581> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00038760 <AmiBlitz3.ab3@29582> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
00038766 <AmiBlitz3.ab3@29587>   TST.b exdebug
0003876A <AmiBlitz3.ab3@29588>   BNE 'l10
00038770 <AmiBlitz3.ab3@29589>   MOVE.l #$4e71,d1
00038776 <AmiBlitz3.ab3@29590>   JSR writeword
0003877C <AmiBlitz3.ab3@29591>   MOVE.l destpointer,d0
0003877E <AmiBlitz3.ab3@29592>   MOVE.l d0,d1
00038780 <AmiBlitz3.ab3@29593>   ADDQ.l #3,d1
00038786 <AmiBlitz3.ab3@29594>   AND.l #$fffffffc,d1
0003878C <AmiBlitz3.ab3@29595>   MOVE.l d1,destpointer
00038792 <AmiBlitz3.ab3@29596>   SUB.l destpointer,d0
00038796 <AmiBlitz3.ab3@29597>   BEQ 'lnf1
000387A0 <AmiBlitz3.ab3@29598>   CMP.l #-1,bssstart
000387A4 <AmiBlitz3.ab3@29599>   BNE 'lnf1
000387AE <AmiBlitz3.ab3@29600>   CMP.l #-1,chipstart
000387B2 <AmiBlitz3.ab3@29601>   BNE 'lnf1
000387B8 <AmiBlitz3.ab3@29602>   MOVE.l destpointer,a4
000387BE <AmiBlitz3.ab3@29603>   TST.w dontwrite_nomemleft
000387C2 <AmiBlitz3.ab3@29604>   BNE 'lnf1
000387C8 <AmiBlitz3.ab3@29605>   MOVE.w #$4e71,-2(a4)
000387D2 <AmiBlitz3.ab3@29608>   CMP.l #-1,bssstart
000387D6 <AmiBlitz3.ab3@29609>   BEQ 'l11
000387DC <AmiBlitz3.ab3@29610>   MOVE.l #erro1t,-(a7)
000387E2 <AmiBlitz3.ab3@29611>  JMP handle_compileerror
000387EC <AmiBlitz3.ab3@29614>   MOVE.l destpointer,bssstart
000387F4 <AmiBlitz3.ab3@29615>   MOVE.b #1,bssmode
000387FA <AmiBlitz3.ab3@29618>   TST.b chipmode
000387FE <AmiBlitz3.ab3@29619>   BEQ 'l10
00038808 <AmiBlitz3.ab3@29620>   MOVE.l destpointer,chipend
0003880E <AmiBlitz3.ab3@29621>   CLR.b chipmode
00038814 <AmiBlitz3.ab3@29624>   JSR get1bytemain
00038816 <AmiBlitz3.ab3@29625> RTS
0003881C <AmiBlitz3.ab3@29629>    TST.b exdebug
00038820 <AmiBlitz3.ab3@29630>   BNE 'x1
00038826 <AmiBlitz3.ab3@29631>   MOVE.l destpointer,d0
0003882C <AmiBlitz3.ab3@29632>   MOVE.l d0,realbssend
00038832 <AmiBlitz3.ab3@29633>   MOVE.l #$4e71,d1
00038838 <AmiBlitz3.ab3@29634>   JSR writeword
0003883E <AmiBlitz3.ab3@29635>   MOVE.l destpointer,d0
00038840 <AmiBlitz3.ab3@29636>   MOVE.l d0,d1
00038842 <AmiBlitz3.ab3@29637>   ADDQ.l #3,d1
00038848 <AmiBlitz3.ab3@29638>   AND.l #$fffffffc,d1
0003884E <AmiBlitz3.ab3@29639>   MOVE.l d1,destpointer
00038854 <AmiBlitz3.ab3@29640>   SUB.l destpointer,d0
00038858 <AmiBlitz3.ab3@29641>   BEQ 'lnf1
0003885E <AmiBlitz3.ab3@29642>   MOVE.l destpointer,a4
00038868 <AmiBlitz3.ab3@29643>   CMP.l #-1,bssstart
0003886C <AmiBlitz3.ab3@29644>   BNE 'lnf1
00038876 <AmiBlitz3.ab3@29645>   CMP.l #-1,chipstart
0003887A <AmiBlitz3.ab3@29646>   BNE 'lnf1
00038880 <AmiBlitz3.ab3@29647>   TST.w dontwrite_nomemleft
00038884 <AmiBlitz3.ab3@29648>   BNE 'lnf1
0003888A <AmiBlitz3.ab3@29649>   MOVE.w #$4e71,-2(a4)
00038890 <AmiBlitz3.ab3@29652>   TST.b bssmode
00038894 <AmiBlitz3.ab3@29653>   BEQ 'l10
0003889E <AmiBlitz3.ab3@29654>   MOVE.l destpointer,bssend
000388A4 <AmiBlitz3.ab3@29655>   CLR.b bssmode
000388AE <AmiBlitz3.ab3@29660>   CMP.l #-1,chipstart
000388B2 <AmiBlitz3.ab3@29661>   BEQ 'l11
000388B8 <AmiBlitz3.ab3@29662>   MOVE.l #erro1t,-(a7)
000388BE <AmiBlitz3.ab3@29663>  JMP handle_compileerror
000388C8 <AmiBlitz3.ab3@29666>   MOVE.l destpointer,chipstart
000388D0 <AmiBlitz3.ab3@29667>   MOVE.b #1,chipmode
000388D6 <AmiBlitz3.ab3@29670>   JSR get1bytemain
000388D8 <AmiBlitz3.ab3@29671> RTS
00038902 <AmiBlitz3.ab3@29675>   !basic
00038914 <AmiBlitz3.ab3@29685>   i.l = Peek.w(?ininclude)
0003893A <AmiBlitz3.ab3@29686>   If i>=0 AND i<#maxincludes
0003896C <AmiBlitz3.ab3@29687>     incdim (i) = Peek.s(?includetemp2)
00038986 <AmiBlitz3.ab3@29688>     incline(i) = Peek.l(?includeline)
00038990 <AmiBlitz3.ab3@29690>     If CLIMode
00038A3E <AmiBlitz3.ab3@29691>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00038A5C <AmiBlitz3.ab3@29695>   !asm
00038A5E <AmiBlitz3.ab3@29696> RTS
00038A88 <AmiBlitz3.ab3@29700>   !basic
00038A9A <AmiBlitz3.ab3@29701>   i.l = Peek.w(?ininclude)
00038AC0 <AmiBlitz3.ab3@29702>   If i>=0 AND i<#maxincludes
00038AF0 <AmiBlitz3.ab3@29703>     incdim (i) = ""
00038B04 <AmiBlitz3.ab3@29704>     incline(i) = 0
00038B3C <AmiBlitz3.ab3@29705>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00038B5A <AmiBlitz3.ab3@29707>   !asm
00038B5C <AmiBlitz3.ab3@29708> RTS
00038B62 <AmiBlitz3.ab3@29712>   LEA replacedat,a0
00038B66 <AmiBlitz3.ab3@29713>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038B68 <AmiBlitz3.ab3@29714> RTS
00038B6E <AmiBlitz3.ab3@29718>   TST.b fpu
00038B72 <AmiBlitz3.ab3@29719>   BEQ 'l1
00038B7C <AmiBlitz3.ab3@29722>   MOVE.l destpointer,newinitaddr
00038B82 <AmiBlitz3.ab3@29723>   JSR writeword
00038B88 <AmiBlitz3.ab3@29724>   JSR writelong
00038B8A <AmiBlitz3.ab3@29725> RTS
00038B8C <AmiBlitz3.ab3@29730>   TST.b (a5)
00038B90 <AmiBlitz3.ab3@29731>    BEQ.s 'll20
00038B94 <AmiBlitz3.ab3@29732>   CMP.b #$20,(a5)
00038B98 <AmiBlitz3.ab3@29733>    BNE.s 'll10
00038B9A <AmiBlitz3.ab3@29734>   ADDQ.l #1,a5
00038B9E <AmiBlitz3.ab3@29735>  BRA.s 'll21
00038BA2 <AmiBlitz3.ab3@29738>   CMP.b #";",(a5)
00038BA6 <AmiBlitz3.ab3@29739>   BNE.s 'll20
00038BA8 <AmiBlitz3.ab3@29742>   TST.b (a5)+
00038BAC <AmiBlitz3.ab3@29743>   BEQ.s 'll23
00038BB0 <AmiBlitz3.ab3@29744>  BRA.s 'll25
00038BB2 <AmiBlitz3.ab3@29747>   SUBQ.l #1,a5
00038BB4 <AmiBlitz3.ab3@29750> RTS
00038BB8 <AmiBlitz3.ab3@29754>   MOVEM.l a2/d2,-(a7)
00038BBA <AmiBlitz3.ab3@29755>   MOVEQ #0,d2
00038BC0 <AmiBlitz3.ab3@29756>   LEA ptr_parameterstore,a0
00038BC6 <AmiBlitz3.ab3@29757>   LEA chartab,a2
00038BC8 <AmiBlitz3.ab3@29760>   MOVE.b (a5),d0
00038BCC <AmiBlitz3.ab3@29761>   TST.b 0(a2,d0)
00038BD0 <AmiBlitz3.ab3@29762>   BNE 'l10
00038BD2 <AmiBlitz3.ab3@29763>   ADDQ.l #1,a5
00038BD4 <AmiBlitz3.ab3@29764>   MOVE.b d0,(a0)+
00038BD6 <AmiBlitz3.ab3@29765>   ADDQ.l #1,d2
00038BDA <AmiBlitz3.ab3@29766>  BRA fc2
00038BDC <AmiBlitz3.ab3@29769>   CLR.b (a0)+
00038BE2 <AmiBlitz3.ab3@29770>   JSR findlabel2
00038BE4 <AmiBlitz3.ab3@29771>   MOVE.l a2,a0
00038BE8 <AmiBlitz3.ab3@29772>   MOVEM.l (a7)+,a2/d2
00038BEA <AmiBlitz3.ab3@29773> RTS
00038BEC <AmiBlitz3.ab3@29777>   TST.l d0
00038BF0 <AmiBlitz3.ab3@29778>   BNE 'l10
00038BF6 <AmiBlitz3.ab3@29779>     MOVE.l #syntax_,-(a7)
00038BFC <AmiBlitz3.ab3@29780>  JMP handle_compileerror
00038C02 <AmiBlitz3.ab3@29783>   CMP.l #1,d0
00038C06 <AmiBlitz3.ab3@29784>   BNE 'l20
00038C0C <AmiBlitz3.ab3@29785>     MOVE.l #overflow,-(a7)
00038C12 <AmiBlitz3.ab3@29786>  JMP handle_compileerror
00038C14 <AmiBlitz3.ab3@29789>   ADD.l a2,d0
00038C16 <AmiBlitz3.ab3@29790>   MOVE.l d0,-(a7)
00038C1C <AmiBlitz3.ab3@29791> JMP handle_compileerror
00038C22 <AmiBlitz3.ab3@29795>   JMP _return
00038C28 <AmiBlitz3.ab3@29796>   JMP _return
00038C2E <AmiBlitz3.ab3@29797>   JMP _return
00038C34 <AmiBlitz3.ab3@29798>   JMP _return
00038C3A <AmiBlitz3.ab3@29799>   JMP _return
00038C40 <AmiBlitz3.ab3@29800>   JMP _return
00038C46 <AmiBlitz3.ab3@29801>   JMP _return
00038C4C <AmiBlitz3.ab3@29802>   JMP _return
00038C52 <AmiBlitz3.ab3@29803>   JMP _return
00038C58 <AmiBlitz3.ab3@29804>   JMP _return
00038C5E <AmiBlitz3.ab3@29805>   JMP Atokejsr
00038C64 <AmiBlitz3.ab3@29806>   JMP writeinit
00038C6A <AmiBlitz3.ab3@29807>   JMP macroexecute
00038C70 <AmiBlitz3.ab3@29808>   JMP findnext
00038C76 <AmiBlitz3.ab3@29809>   JMP replacelib
00038C7C <AmiBlitz3.ab3@29810>   JMP findconstant2
00038C82 <AmiBlitz3.ab3@29811>   JMP findchar                                             ;char in d1
00038C88 <AmiBlitz3.ab3@29812>   JMP stripspaces
00038C8E <AmiBlitz3.ab3@29813>   JMP calc                                                 ;d0 varmode
00038C94 <AmiBlitz3.ab3@29814>   JMP error
00038C9A <AmiBlitz3.ab3@29815>   JMP writelong                                            ;d1 value
00038CA0 <AmiBlitz3.ab3@29816>   JMP writeword                                            ;d1 value
00038CA6 <AmiBlitz3.ab3@29817>   JMP writebyte                                            ;d1 value
00038CAC <AmiBlitz3.ab3@29818> JMP exit
00038CB0 <AmiBlitz3.ab3@29822>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00038CB2 <AmiBlitz3.ab3@29825>   fast            Dc.w 0
00038CB4 <AmiBlitz3.ab3@29826>   fpu             Dc.w 0
00038CB6 <AmiBlitz3.ab3@29827>   newsyntax       Dc.w 0
00038CB7 <AmiBlitz3.ab3@29829>   optistring      Dc.b 0
00038CB8 <AmiBlitz3.ab3@29830>   optistring2     Dc.b 0
00038CB9 <AmiBlitz3.ab3@29831>   optiarray       Dc.b 0
00038CBA <AmiBlitz3.ab3@29832>   quickadd        Dc.b 0
00038CBC <AmiBlitz3.ab3@29833>   newmode         Dc.w 0
00038CBE <AmiBlitz3.ab3@29834>   mode            Dc.w 0
00038CC0 <AmiBlitz3.ab3@29835>   string1         Dc.w 0
00038CC2 <AmiBlitz3.ab3@29836>   load_var_size   Dc.w 0
00038CC4 <AmiBlitz3.ab3@29837>   load_var_reg    Dc.w 0
00038CC8 <AmiBlitz3.ab3@29838>   load_var_addr   Dc.l 0
00038CCA <AmiBlitz3.ab3@29839>   imm_size        Dc.w 0
00038CCC <AmiBlitz3.ab3@29840>   imm_reg         Dc.w 0
00038CD0 <AmiBlitz3.ab3@29841>   imm_addr        Dc.l 0
00038CD1 <AmiBlitz3.ab3@29842>   iee             Dc.b 0
00038CD2 <AmiBlitz3.ab3@29843>   _dcb            Dc.b 0
00038CD6 <AmiBlitz3.ab3@29844>   nohunkoffset    Dc.l 0
00038CDA <AmiBlitz3.ab3@29847> teddata:        Dc.l tokens
00038CDE <AmiBlitz3.ab3@29848>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038CE2 <AmiBlitz3.ab3@29849>                 Dc.l read_xtrafile
00038CE6 <AmiBlitz3.ab3@29850>                 Dc.l write_xtrafile
00038CEA <AmiBlitz3.ab3@29851>                 Dc.l call_menuentry                        ; compile AND RUN ?
00038CEE <AmiBlitz3.ab3@29852>                 Dc.l 0
00038CF2 <AmiBlitz3.ab3@29853>                 Dc.b ":",34,".;"
00038CF6 <AmiBlitz3.ab3@29854>                 Dc.l "NEW1"
00038CFA <AmiBlitz3.ab3@29855>                 Dc.l newtypebase
00038CFE <AmiBlitz3.ab3@29856> realconstbase:  Dc.l labelbase
00038D02 <AmiBlitz3.ab3@29857> deflib          Dc.l 0
00038D06 <AmiBlitz3.ab3@29858> incd            Dc.l 0
00038D0A <AmiBlitz3.ab3@29859>                 Dc.l 0
00038D0E <AmiBlitz3.ab3@29860>                 Dc.l 0
00038D12 <AmiBlitz3.ab3@29861>                 Dc.l 0
00038D14 <AmiBlitz3.ab3@29862> _return         RTS
00038D15 <AmiBlitz3.ab3@29863>                 Dc.b 0
00039115 <AmiBlitz3.ab3@29864> chartab2        Ds.l 256
00039119 <AmiBlitz3.ab3@29865> codeend         Dc.l 0
0003911D <AmiBlitz3.ab3@29866> hunkoffsetnum   Dc.l 0
00039121 <AmiBlitz3.ab3@29867> chipsize        Dc.l 0
00039125 <AmiBlitz3.ab3@29868> bsssize         Dc.l 0
00039129 <AmiBlitz3.ab3@29869> bssstart        Dc.l -1
0003912D <AmiBlitz3.ab3@29870> bssend          Dc.l -1
00039131 <AmiBlitz3.ab3@29871> chipstart       Dc.l -1
00039135 <AmiBlitz3.ab3@29872> chipend         Dc.l -1
00039136 <AmiBlitz3.ab3@29873> bssmode         Dc.b 0
00039137 <AmiBlitz3.ab3@29874> chipmode        Dc.b 0
00039138 <AmiBlitz3.ab3@29875> newhunk         Dc.b 0
0003913C <AmiBlitz3.ab3@29876> bssnum          Dc.l 0
00039140 <AmiBlitz3.ab3@29877> chipnum         Dc.l 0
00039144 <AmiBlitz3.ab3@29878> lastinstruction Dc.l 0
00039148 <AmiBlitz3.ab3@29879> lastinstructionaddr Dc.l 0
0003915C <AmiBlitz3.ab3@29880> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00039160 <AmiBlitz3.ab3@29881> tstsize1b:      Ds.l 1
00039164 <AmiBlitz3.ab3@29882> bsssize2        Dc.l 1
00039168 <AmiBlitz3.ab3@29883>                 Dc.l $03E9
0003916C <AmiBlitz3.ab3@29884> tstsize2b:      Dc.l $100
00039180 <AmiBlitz3.ab3@29885> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00039184 <AmiBlitz3.ab3@29886> tstsize1c:      Ds.l 1
00039188 <AmiBlitz3.ab3@29887> bsssize3        Dc.l 1
0003918C <AmiBlitz3.ab3@29888> chipsize2       Dc.l 1
00039190 <AmiBlitz3.ab3@29889>                 Dc.l $3e9
00039194 <AmiBlitz3.ab3@29890> tstsize2c       Dc.l 0
000391A4 <AmiBlitz3.ab3@29891> hunkend         Dc.l $3f2,$3eb,0,$3f2
000391B4 <AmiBlitz3.ab3@29892> hunkend2        Dc.l $3f2,$3ea,0,$3f2
000391BB <AmiBlitz3.ab3@29893> strcpy          Dc.b "strcpy",0
000391C2 <AmiBlitz3.ab3@29894> strcmp          Dc.b "strcmp",0
000391C9 <AmiBlitz3.ab3@29895> strvar          Dc.b "strvar",0
000391CE <AmiBlitz3.ab3@29896> qmul            Dc.b "qmul",0
000391D3 <AmiBlitz3.ab3@29897> qdiv            Dc.b "qdiv",0
000391DA <AmiBlitz3.ab3@29898> _MaxLen         Dc.b "maxlen",0
000391DF <AmiBlitz3.ab3@29899> notf            Dc.b "????",0
00039202 <AmiBlitz3.ab3@29901> errtext         Dc.b "only reg addressing Mode supported",0
0003922C <AmiBlitz3.ab3@29902> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
0003926E <AmiBlitz3.ab3@29903> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00039270 <AmiBlitz3.ab3@29904> peeksize        Dc.w 0
00039274 <AmiBlitz3.ab3@29906> mainstart       Dc.l 0
00039275 <AmiBlitz3.ab3@29908> infunctioncode  Dc.b 0
00039277 <AmiBlitz3.ab3@29909> regnumstore     Dc.w 0
000392A4 <AmiBlitz3.ab3@29910>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
000392AC <AmiBlitz3.ab3@29911> testcode        Dc.b "print i",0
00039310 <AmiBlitz3.ab3@29912>                 Ds.b 100
0003931E <AmiBlitz3.ab3@29913> devo            Dc.b "developobject",0 : Even
00039330 <AmiBlitz3.ab3@29914> autostorename   Dc.b "__autoconstantnum",0
0003933A <AmiBlitz3.ab3@29915> _include        Dc.b "__include",0
00039342 <AmiBlitz3.ab3@29916> _debug          Dc.b "__debug",0
00039346 <AmiBlitz3.ab3@29917> unusedfunc      Dc.l 0
00039348 <AmiBlitz3.ab3@29921>   MOVE.l a0,d0
00039372 <AmiBlitz3.ab3@29922>   !basic
00039376 <AmiBlitz3.ab3@29923>   *olderror.l= PutD0
000393D0 <AmiBlitz3.ab3@29924> 
00039404 <AmiBlitz3.ab3@29925>   error_type$ = error$
000394A0 <AmiBlitz3.ab3@29926> 
000394B4 <AmiBlitz3.ab3@29927>   If Peek.l (?beforeparameterfetch)
000394CA <AmiBlitz3.ab3@29928>     MaxLen detokenline.s = 65536
0003950C <AmiBlitz3.ab3@29929>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003951C <AmiBlitz3.ab3@29930>    *tn.preprocessor = Peek.l(?include_preprocessor)
00039546 <AmiBlitz3.ab3@29931>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
0003956E <AmiBlitz3.ab3@29932>     If written>0 Then Poke.b &detokenline+written,0
000395B2 <AmiBlitz3.ab3@29933>     If written>40 Then Poke.s &detokenline+36,"..."   ; added to limit the wide of the error requester  tomsmart1
000395DC <AmiBlitz3.ab3@29934>     sourceLineText.s = Peek.s(&detokenline)
000395E2 <AmiBlitz3.ab3@29935>   Else
0003960A <AmiBlitz3.ab3@29936>     sourceLineText = "NULL"
0003963E <AmiBlitz3.ab3@29938>   error_source$ = sourceLineText
00039690 <AmiBlitz3.ab3@29939>   error$ + sourceLineText
00039696 <AmiBlitz3.ab3@29940>   GetD0 &error$
000396B4 <AmiBlitz3.ab3@29941>   !asm
000396B6 <AmiBlitz3.ab3@29942>   MOVE.l d0,a0
000396B8 <AmiBlitz3.ab3@29943> RTS
000396BA <AmiBlitz3.ab3@29947>   MOVE.l a0,-(a7)
000396BC <AmiBlitz3.ab3@29948>   MOVE.l a0,d0
000396BE <AmiBlitz3.ab3@29949>   MOVE.l a5,a0                                             ;macro title
000396E8 <AmiBlitz3.ab3@29950>   !basic
000396EC <AmiBlitz3.ab3@29951>   i = PutD0
000396EE <AmiBlitz3.ab3@29952>   MOVEQ #20,d0
000396F0 <AmiBlitz3.ab3@29955>     MOVE.b -(a0),d1
000396F4 <AmiBlitz3.ab3@29956>     BEQ 'l1
000396F8 <AmiBlitz3.ab3@29957>     CMP.b #":",d1
000396FC <AmiBlitz3.ab3@29958>     BEQ 'l1
000396FE <AmiBlitz3.ab3@29959>     SUBQ.l #1,d0
00039702 <AmiBlitz3.ab3@29960>     BNE 'l2
00039704 <AmiBlitz3.ab3@29963>   ADDQ #1,a0
00039706 <AmiBlitz3.ab3@29964>   MOVE.l a0,d0
0003970A <AmiBlitz3.ab3@29965>   i2.l = PutD0
00039726 <AmiBlitz3.ab3@29966>   If Peek.w (?ininclude)>0
00039780 <AmiBlitz3.ab3@29967>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00039790 <AmiBlitz3.ab3@29968>     errorline.l = Peek.l(?includeline);-1
000397B8 <AmiBlitz3.ab3@29969>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000397E2 <AmiBlitz3.ab3@29970>     errorfile.s = Peek.s(?includetemp2)
000397E8 <AmiBlitz3.ab3@29971>   Else
00039820 <AmiBlitz3.ab3@29972>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00039836 <AmiBlitz3.ab3@29973>     errorline.l = Peek.l(?compilelinecounter) + 1
0003986A <AmiBlitz3.ab3@29974>     errorfile.s = cli_sourcefile
00039874 <AmiBlitz3.ab3@29977>   If i
00039918 <AmiBlitz3.ab3@29978>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
00039996 <AmiBlitz3.ab3@29979>     errortext.s = Replace$(errortext,"\n","\\0a")
0003999C <AmiBlitz3.ab3@29980>   Else
000399C4 <AmiBlitz3.ab3@29981>     errortext.s = "???"
00039B3C <AmiBlitz3.ab3@29984>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039C04 <AmiBlitz3.ab3@29985>   NPrint "  ",error_type$,"\\n  ",error_source$
00039C22 <AmiBlitz3.ab3@29989>   !asm
00039C24 <AmiBlitz3.ab3@29990>   MOVE.l (a7)+,a0
00039C26 <AmiBlitz3.ab3@29991> RTS
00039C28 <AmiBlitz3.ab3@29995>   MOVE.l a0,-(a7)
00039C2A <AmiBlitz3.ab3@29996>   MOVE.l a0,d0
00039C2C <AmiBlitz3.ab3@29997>   MOVE.l a5,a0                                             ;macro title
00039C56 <AmiBlitz3.ab3@29998>   !basic
00039C5A <AmiBlitz3.ab3@29999>   i = PutD0
00039C5C <AmiBlitz3.ab3@30000>   MOVEQ #20,d0
00039C5E <AmiBlitz3.ab3@30003>     MOVE.b -(a0),d1
00039C62 <AmiBlitz3.ab3@30004>     BEQ 'l1
00039C66 <AmiBlitz3.ab3@30005>     CMP.b #":",d1
00039C6A <AmiBlitz3.ab3@30006>     BEQ 'l1
00039C6C <AmiBlitz3.ab3@30007>     SUBQ.l #1,d0
00039C70 <AmiBlitz3.ab3@30008>     BNE 'l2
00039C72 <AmiBlitz3.ab3@30011>   ADDQ #1,a0
00039C74 <AmiBlitz3.ab3@30012>   MOVE.l a0,d0
00039C78 <AmiBlitz3.ab3@30013>   i2.l = PutD0
00039CFC <AmiBlitz3.ab3@30014>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
00039D10 <AmiBlitz3.ab3@30015>   If fid <> -1
00039D2C <AmiBlitz3.ab3@30016>     If Peek.w (?ininclude)>0
00039D86 <AmiBlitz3.ab3@30017>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00039D8C <AmiBlitz3.ab3@30018>     Else
00039DB8 <AmiBlitz3.ab3@30019>       Poke$(?includetemp2),""
00039DE2 <AmiBlitz3.ab3@30021>     a$ = Peek$(?includetemp2)
00039E54 <AmiBlitz3.ab3@30022>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039E86 <AmiBlitz3.ab3@30023>     file_WriteLine{fid,x$}
00039ED0 <AmiBlitz3.ab3@30024>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039EFC <AmiBlitz3.ab3@30025>     If a$
00039F2E <AmiBlitz3.ab3@30026>       file_WriteLine{fid,a$}
00039F78 <AmiBlitz3.ab3@30027>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039FA0 <AmiBlitz3.ab3@30028>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039FA6 <AmiBlitz3.ab3@30029>     Else
00039FCC <AmiBlitz3.ab3@30030>       file_WriteLine{fid,"none"}
00039FFC <AmiBlitz3.ab3@30032>     file_WriteLine{fid,Peek$(i2)}
0003A052 <AmiBlitz3.ab3@30033>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
0003A09C <AmiBlitz3.ab3@30034>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
0003A0A6 <AmiBlitz3.ab3@30035>     file_Close{fid}
0003A0C4 <AmiBlitz3.ab3@30037>   !asm
0003A0C6 <AmiBlitz3.ab3@30038>   MOVE.l (a7)+,a0
0003A0C8 <AmiBlitz3.ab3@30039> RTS
0003A0F2 <AmiBlitz3.ab3@30043>   !basic
0003A0F6 <AmiBlitz3.ab3@30044>   progress.l     = PutD0
0003A108 <AmiBlitz3.ab3@30045>   total.l        = Peek.w(?progressbar_width)
0003A126 <AmiBlitz3.ab3@30046>   calcpro        = (progress * 100) / total +1
0003A13E <AmiBlitz3.ab3@30047>   pass.l         = Peek.w(?pass) + 1           ; added +1 so the shown status info begin with 1 instead of 0  tomsmart1
0003A150 <AmiBlitz3.ab3@30048>   typ.l          = Peek.w(?compiler_job)
0003A16E <AmiBlitz3.ab3@30051>   If (pass><pass_old) OR (typ><typ_old)
0003A17C <AmiBlitz3.ab3@30053>     If pass_old><pass
0003A218 <AmiBlitz3.ab3@30054>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
0003A26E <AmiBlitz3.ab3@30055>       If cli_verbose>=1 Then NPrint passtatusstr        ; changed form 2 to get compilepass number in verbose mode 1  tomsmart1
0003A274 <AmiBlitz3.ab3@30058>     pass_old = pass
0003A27A <AmiBlitz3.ab3@30059>     typ_old  = typ
0003A280 <AmiBlitz3.ab3@30060>     update_comstatus_gui = True
0003A292 <AmiBlitz3.ab3@30061>     If typ=0
0003A372 <AmiBlitz3.ab3@30062>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
0003A37A <AmiBlitz3.ab3@30063>       calcpro = 0  ; set gauge to 0
0003A38C <AmiBlitz3.ab3@30065>     If typ=1
0003A46C <AmiBlitz3.ab3@30066>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003A474 <AmiBlitz3.ab3@30067>       calcpro = 0  ; set gauge to 0
0003A4CA <AmiBlitz3.ab3@30070>     If cli_verbose>=3 Then NPrint comstatusstr
0003A4D8 <AmiBlitz3.ab3@30073>   If (calcpro >< calcpro_old)
0003A52C <AmiBlitz3.ab3@30074>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A532 <AmiBlitz3.ab3@30075>     calcpro_old = calcpro
0003A538 <AmiBlitz3.ab3@30076>     update_comstatus_gui = True
0003A552 <AmiBlitz3.ab3@30079>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A570 <AmiBlitz3.ab3@30080>     !asm
0003A5A2 <AmiBlitz3.ab3@30081> 
0003A5CC <AmiBlitz3.ab3@30082>     !basic
0003A5D2 <AmiBlitz3.ab3@30083>     update_comstatus_gui  = False ; because we update the gui
0003A5F0 <AmiBlitz3.ab3@30085>   !asm
0003A5F2 <AmiBlitz3.ab3@30086> RTS
0003A5F8 <AmiBlitz3.ab3@30091>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A5FE <AmiBlitz3.ab3@30092>   LEA maxobjects_value,A3                                  ;current value
0003A604 <AmiBlitz3.ab3@30093>   MOVEA.l libpointer,A2
0003A608 <AmiBlitz3.ab3@30096>   CMPA.w #$0,A2
0003A60C <AmiBlitz3.ab3@30097>   BEQ.w 'igot
0003A60E <AmiBlitz3.ab3@30098>   MOVEA.l A2,A1
0003A612 <AmiBlitz3.ab3@30099>   ADDA.l $12(A1),A1
0003A616 <AmiBlitz3.ab3@30100>   TST.w -$2(A1)
0003A61A <AmiBlitz3.ab3@30101>   BEQ.w 'ugwl2
0003A61C <AmiBlitz3.ab3@30102>   SUBQ.w #1,D5
0003A620 <AmiBlitz3.ab3@30103>   BMI.w 'ugw2
0003A622 <AmiBlitz3.ab3@30106>   MOVEA.l (A2),A2
0003A626 <AmiBlitz3.ab3@30107>  BRA.w 'ugwl
0003A62A <AmiBlitz3.ab3@30110>   MOVE.w (A3),-$4(A1)
0003A62C <AmiBlitz3.ab3@30113> RTS
0003A632 <AmiBlitz3.ab3@30117>   MOVE.w debugnest,d0
0003A638 <AmiBlitz3.ab3@30118>   LEA storedebugmode, a0
0003A640 <AmiBlitz3.ab3@30119>   MOVE.b 0(a0,d0.w),debugmode
0003A646 <AmiBlitz3.ab3@30120>   TST.w debugnest
0003A64A <AmiBlitz3.ab3@30121>   BEQ JUMP_unpairrunerrs
0003A650 <AmiBlitz3.ab3@30122>   SUBQ.w #1,debugnest
0003A652 <AmiBlitz3.ab3@30123> RTS
0003A658 <AmiBlitz3.ab3@30125> JUMP_runerrsoverflow JMP runerrsoverflow
0003A65E <AmiBlitz3.ab3@30126> JUMP_unpairrunerrs   JMP unpairrunerrs
0003A666 <AmiBlitz3.ab3@30130>   BCHG #$7,use_debugger
0003A66E <AmiBlitz3.ab3@30132>   BTST #$7,use_debugger
0003A672 <AmiBlitz3.ab3@30133>   BNE 'debugon
0003A678 <AmiBlitz3.ab3@30134>   CLR.w debugmode
0003A67C <AmiBlitz3.ab3@30135>  BRA.b 'debugoff
0003A682 <AmiBlitz3.ab3@30138>   SNE debugmode
0003A684 <AmiBlitz3.ab3@30141>   MOVE.l a0,-(a7)
0003A6BC <AmiBlitz3.ab3@30144>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A6BE <AmiBlitz3.ab3@30149>   MOVE.l (a7)+,a0
0003A6C0 <AmiBlitz3.ab3@30150> RTS
0003A6C8 <AmiBlitz3.ab3@30155>   BTST #$7,use_debugger
0003A6CC <AmiBlitz3.ab3@30157>   BNE 'debugon
0003A6D2 <AmiBlitz3.ab3@30158>   CLR.w debugmode
0003A6D6 <AmiBlitz3.ab3@30159>  BRA.b 'debugoff
0003A6DC <AmiBlitz3.ab3@30163>   SNE debugmode
0003A6DE <AmiBlitz3.ab3@30166> RTS
0003A6E4 <AmiBlitz3.ab3@30171>   ADDQ.w #1,debugnest
0003A6EA <AmiBlitz3.ab3@30172>   MOVE.w debugnest,d0
0003A6EE <AmiBlitz3.ab3@30173>   CMP.w #18,d0
0003A6F2 <AmiBlitz3.ab3@30174>    BGE JUMP_runerrsoverflow
0003A6F8 <AmiBlitz3.ab3@30175>   LEA storedebugmode, a0
0003A700 <AmiBlitz3.ab3@30176>   MOVE.b debugmode,0( a0,d0.w)
0003A706 <AmiBlitz3.ab3@30180>   SF debugmode
0003A708 <AmiBlitz3.ab3@30181> RTS
0003A788 <AmiBlitz3.ab3@30184> usedpath:  Ds.l 32
0003A78C <AmiBlitz3.ab3@30188>   BEQ.w JUMP_syntaxerr
0003A792 <AmiBlitz3.ab3@30189>   LEA lastpath,A0
0003A796 <AmiBlitz3.ab3@30191>   MOVEM.l a0-a1/d0,-(a7)
0003A79C <AmiBlitz3.ab3@30192>   LEA lastpath2,a1
0003A79E <AmiBlitz3.ab3@30195>     MOVE.b (a0)+,(a1)+
0003A7A2 <AmiBlitz3.ab3@30196>   BNE 'l2
0003A7A6 <AmiBlitz3.ab3@30197>   MOVEM.l (a7)+,a0-a1/d0
0003A7AA <AmiBlitz3.ab3@30198>   LEA usedpath(PC),A0
0003A7AE <AmiBlitz3.ab3@30199>   MOVEM.l a0-a1/d0,-(a7)
0003A7B4 <AmiBlitz3.ab3@30200>   LEA lastpath,a1
0003A7B6 <AmiBlitz3.ab3@30203>     MOVE.b (a0)+,(a1)+
0003A7BA <AmiBlitz3.ab3@30204>   BNE 'l1
0003A7BE <AmiBlitz3.ab3@30205>   MOVEM.l (a7)+,a0-a1/d0
0003A7C0 <AmiBlitz3.ab3@30209>   TST.w D0
0003A7C4 <AmiBlitz3.ab3@30210>    BMI.w JUMP_syntaxerr
0003A7C6 <AmiBlitz3.ab3@30211>   MOVE.b D0,(A0)+
0003A7CA <AmiBlitz3.ab3@30212>   BSR.w JUMP_get1bytemain
0003A7CE <AmiBlitz3.ab3@30213>    BNE.w 'loop
0003A7D2 <AmiBlitz3.ab3@30216>   MOVE.b #$2,(A0)
0003A7D4 <AmiBlitz3.ab3@30217> RTS
0003A7D8 <AmiBlitz3.ab3@30221>   BEQ.w JUMP_syntaxerr
0003A7DE <AmiBlitz3.ab3@30222>   LEA path2,A0
0003A7E0 <AmiBlitz3.ab3@30234>   TST.w D0
0003A7E4 <AmiBlitz3.ab3@30235>    BMI.w JUMP_syntaxerr
0003A7E6 <AmiBlitz3.ab3@30236>   MOVE.b D0,(A0)+
0003A7EA <AmiBlitz3.ab3@30237>   BSR.w JUMP_get1bytemain
0003A7EE <AmiBlitz3.ab3@30238>    BNE.w 'loop
0003A7F2 <AmiBlitz3.ab3@30241>   MOVE.b #$2,(A0)
0003A7F4 <AmiBlitz3.ab3@30242> RTS
0003A7FA <AmiBlitz3.ab3@30245> JUMP_errormsg_reg JMP errormsg_reg
0003A804 <AmiBlitz3.ab3@30249>   MOVE.l #$f22d6780,fpucodeglobal
0003A80E <AmiBlitz3.ab3@30250>   MOVE.l #$f22c6780,fpucodelocal
0003A814 <AmiBlitz3.ab3@30251>   LEA regtable,a0
0003A81E <AmiBlitz3.ab3@30252>   MOVE.l #7,maxregs
0003A820 <AmiBlitz3.ab3@30255>   MOVE.l (a0),d0
0003A824 <AmiBlitz3.ab3@30256>   BEQ 'e1
0003A826 <AmiBlitz3.ab3@30257>   CLR.l (a0)
0003A82A <AmiBlitz3.ab3@30258>   MOVE.w 4(a0),d0
0003A834 <AmiBlitz3.ab3@30259>   MOVE.l fpucodeglobal,fpucode
0003A838 <AmiBlitz3.ab3@30260>   TST.w 6(a0)
0003A83C <AmiBlitz3.ab3@30261>   BEQ 'glob
0003A846 <AmiBlitz3.ab3@30262>   MOVE.l fpucodelocal,fpucode
0003A84C <AmiBlitz3.ab3@30265>   MOVE.l fpucode,d1
0003A852 <AmiBlitz3.ab3@30266>   JSR writelong
0003A85C <AmiBlitz3.ab3@30267>   SUB.l #$80,fpucodelocal
0003A866 <AmiBlitz3.ab3@30268>   SUB.l #$80,fpucodeglobal
0003A868 <AmiBlitz3.ab3@30269>   MOVE.w d0,d1
0003A86E <AmiBlitz3.ab3@30270>   JSR writeword
0003A870 <AmiBlitz3.ab3@30271>   ADDQ #8,a0
0003A874 <AmiBlitz3.ab3@30272>  BRA 'again
0003A876 <AmiBlitz3.ab3@30275> RTS
0003A87C <AmiBlitz3.ab3@30278> JUMP_notypeerr2 JMP notypeerr
0003A882 <AmiBlitz3.ab3@30279> JUMP_illtypeerr JMP illtypeerr
0003A88C <AmiBlitz3.ab3@30282>   MOVE.l #$f22d4780,fpucodeglobal
0003A896 <AmiBlitz3.ab3@30283>   MOVE.l #$f22c4780,fpucodelocal
0003A89C <AmiBlitz3.ab3@30284>   LEA regtable,a0
0003A89E <AmiBlitz3.ab3@30285>   TST.l (a0)
0003A8A2 <AmiBlitz3.ab3@30286>    BNE JUMP_errormsg_reg
0003A8A4 <AmiBlitz3.ab3@30287>   MOVE.l d7,-(a7)
0003A8A6 <AmiBlitz3.ab3@30288>   SUBQ.l #1,a5
0003A8AC <AmiBlitz3.ab3@30291>   JSR getparameter2
0003A8B0 <AmiBlitz3.ab3@30292>   BEQ.w 'nopar
0003A8B6 <AmiBlitz3.ab3@30293>   MOVE.w d0,lastchar
0003A8BC <AmiBlitz3.ab3@30294>   JSR findvariable
0003A8C0 <AmiBlitz3.ab3@30295>   BNE 'islocal
0003A8CA <AmiBlitz3.ab3@30296>   MOVE.l fpucodeglobal,fpucode
0003A8D4 <AmiBlitz3.ab3@30297>   MOVE.l #3,maxregs
0003A8D6 <AmiBlitz3.ab3@30298>   MOVEQ #0,d7
0003A8DE <AmiBlitz3.ab3@30301>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A8E2 <AmiBlitz3.ab3@30302>    BEQ 'doit
0003A8EA <AmiBlitz3.ab3@30303>   CMP.l #newtype_double,$a(a2)
0003A8EE <AmiBlitz3.ab3@30304>    BNE JUMP_illtypeerr
0003A8F4 <AmiBlitz3.ab3@30307>   LEA regtable,a0
0003A8F6 <AmiBlitz3.ab3@30308>   MOVEQ #0,d0
0003A8F8 <AmiBlitz3.ab3@30311>   TST.l (a0)
0003A8FC <AmiBlitz3.ab3@30312>    BEQ 'store
0003A8FE <AmiBlitz3.ab3@30313>   ADDQ.l #4,d0
0003A900 <AmiBlitz3.ab3@30314>   ADDQ.l #8,a0
0003A906 <AmiBlitz3.ab3@30315>   CMP.l #16,d0
0003A90A <AmiBlitz3.ab3@30316>    BCS 'loop
0003A914 <AmiBlitz3.ab3@30317>   MOVE.l #2,maxregs
0003A91A <AmiBlitz3.ab3@30318>   CMP.l #20,d0
0003A91E <AmiBlitz3.ab3@30319>    BCS 'loop
0003A928 <AmiBlitz3.ab3@30320>   MOVE.l #1,maxregs
0003A92E <AmiBlitz3.ab3@30321>   CMP.l #24,d0
0003A932 <AmiBlitz3.ab3@30322>    BCS 'loop
0003A938 <AmiBlitz3.ab3@30323>  JMP toovarerr
0003A93E <AmiBlitz3.ab3@30326>   TST.b fpu
0003A942 <AmiBlitz3.ab3@30327>    BEQ 'nofpu
0003A944 <AmiBlitz3.ab3@30328>   MOVE.l a2,(a0)
0003A94A <AmiBlitz3.ab3@30329>   MOVE.w 4(a2),4(a0)
0003A94E <AmiBlitz3.ab3@30330>   MOVE.w d7,6(a0)
0003A954 <AmiBlitz3.ab3@30331>   MOVE.l fpucode,d1
0003A95E <AmiBlitz3.ab3@30332>   SUB.l #$80,fpucodeglobal
0003A968 <AmiBlitz3.ab3@30333>   SUB.l #$80,fpucodelocal
0003A96E <AmiBlitz3.ab3@30334>   JSR writelong
0003A972 <AmiBlitz3.ab3@30335>   MOVE.w 4(a2),d1
0003A978 <AmiBlitz3.ab3@30336>   JSR writeword
0003A97E <AmiBlitz3.ab3@30339>   MOVE.w lastchar,d0
0003A982 <AmiBlitz3.ab3@30340>   CMP.w #":",d0
0003A986 <AmiBlitz3.ab3@30341>    BEQ 'nopar
0003A988 <AmiBlitz3.ab3@30342>   TST.w d0
0003A98C <AmiBlitz3.ab3@30343>    BEQ 'nopar
0003A990 <AmiBlitz3.ab3@30344>   CMP.w #",",d0
0003A994 <AmiBlitz3.ab3@30345>   BNE JUMP_syntaxerr
0003A998 <AmiBlitz3.ab3@30346>  BRA 'l2
0003A99A <AmiBlitz3.ab3@30349>    MOVE.l (a7)+,d7
0003A99C <AmiBlitz3.ab3@30350>  RTS
0003A99E <AmiBlitz3.ab3@30353>   MOVEQ #1,d7
0003A9A6 <AmiBlitz3.ab3@30354>   MOVE.b #1,newvariable
0003A9AC <AmiBlitz3.ab3@30355>   LEA firstlocal,a2
0003A9B2 <AmiBlitz3.ab3@30356>   JSR findvariable
0003A9B8 <AmiBlitz3.ab3@30357>   CLR.b newvariable
0003A9BE <AmiBlitz3.ab3@30358>   CMP.l #-1,d0
0003A9C2 <AmiBlitz3.ab3@30359>   BEQ.w JUMP_notypeerr2
0003A9CC <AmiBlitz3.ab3@30360>   MOVE.l fpucodelocal,fpucode
0003A9D0 <AmiBlitz3.ab3@30361>  BRA 'go
0003A9D4 <AmiBlitz3.ab3@30364>   CMP.b #".",d0
0003A9D8 <AmiBlitz3.ab3@30365>    BNE 'l1
0003A9DC <AmiBlitz3.ab3@30366>   BSR JUMP_get1bytemain
0003A9E0 <AmiBlitz3.ab3@30367>   BSR JUMP_get1bytemain
0003A9E4 <AmiBlitz3.ab3@30370>   ORI .b #$20,d0
0003A9E8 <AmiBlitz3.ab3@30371>   CMP.b #"d",d0
0003A9EC <AmiBlitz3.ab3@30372>    BNE JUMP_illeaerr
0003A9F0 <AmiBlitz3.ab3@30373>   BSR JUMP_get1bytemain
0003A9F4 <AmiBlitz3.ab3@30374>   SUB.b #$30,d0
0003A9F8 <AmiBlitz3.ab3@30375>   CMP.b #$7,d0
0003A9FC <AmiBlitz3.ab3@30376>    BGT JUMP_syntaxerr
0003AA00 <AmiBlitz3.ab3@30377>   MOVE.w #$49c0,d1
0003AA02 <AmiBlitz3.ab3@30378>   ADD.b d0,d1
0003AA08 <AmiBlitz3.ab3@30379>   JSR writeword
0003AA0C <AmiBlitz3.ab3@30380>   BSR JUMP_get1bytemain
0003AA0E <AmiBlitz3.ab3@30381> RTS
0003AA14 <AmiBlitz3.ab3@30385>   LEA lastpath,a0
0003AA18 <AmiBlitz3.ab3@30386>   LEA usedpath(PC),A1
0003AA1A <AmiBlitz3.ab3@30389>     MOVE.b (a0)+,(a1)+
0003AA1E <AmiBlitz3.ab3@30390>   BNE 'l1
0003AA24 <AmiBlitz3.ab3@30392>   LEA lastpath2,a0
0003AA2A <AmiBlitz3.ab3@30393>   LEA lastpath,A1
0003AA2C <AmiBlitz3.ab3@30396>     MOVE.b (a0)+,(a1)+
0003AA30 <AmiBlitz3.ab3@30397>   BNE 'l2
0003AA32 <AmiBlitz3.ab3@30398> RTS
0003AA38 <AmiBlitz3.ab3@30402>   TST.b objectcount
0003AA3C <AmiBlitz3.ab3@30403>   BEQ 'l2a
0003AA42 <AmiBlitz3.ab3@30404>  JMP macnesterr
0003AA48 <AmiBlitz3.ab3@30407>   LEA devo,a0
0003AA4E <AmiBlitz3.ab3@30408>   ADDQ.b #1,objectcount
0003AA52 <AmiBlitz3.ab3@30409>   MOVEM.l a1/d2,-(a7)
0003AA58 <AmiBlitz3.ab3@30410>   LEA ptr_parameterstore,a1
0003AA5A <AmiBlitz3.ab3@30413>     MOVE.b (a0)+,(a1)+
0003AA5E <AmiBlitz3.ab3@30414>   BNE 'l1
0003AA60 <AmiBlitz3.ab3@30416>   MOVEQ #13,d2
0003AA66 <AmiBlitz3.ab3@30417>   JSR findlabel2
0003AA6A <AmiBlitz3.ab3@30418>   BNE 'd
0003AA6E <AmiBlitz3.ab3@30419>   TST.l 8(a2)
0003AA72 <AmiBlitz3.ab3@30420>   BEQ 'd
0003AA78 <AmiBlitz3.ab3@30421>   SUBQ.b #1,objectcount
0003AA7C <AmiBlitz3.ab3@30422>   MOVEM.l (a7)+,a1/d2
0003AA82 <AmiBlitz3.ab3@30423>   JSR skiprest
0003AA8A <AmiBlitz3.ab3@30424>   MOVE.b #1,developobject
0003AA8C <AmiBlitz3.ab3@30425>  RTS
0003AA90 <AmiBlitz3.ab3@30428>   MOVEM.l (a7)+,a1/d2
0003AA98 <AmiBlitz3.ab3@30429>   MOVE.b #1,resdisable
0003AA9E <AmiBlitz3.ab3@30432>   CLR.b developobject
0003AAA4 <AmiBlitz3.ab3@30433> JMP do_Macro
0003AAAA <AmiBlitz3.ab3@30436> JUMP_illeaerr JMP illeaerr
0003AAB0 <AmiBlitz3.ab3@30440>   CLR.b typecheck
0003AAB6 <AmiBlitz3.ab3@30441>   CLR.b declare
0003AABC <AmiBlitz3.ab3@30442>   CLR.b declare2
0003AAC0 <AmiBlitz3.ab3@30443>   SUB.b #$30,d0
0003AAC4 <AmiBlitz3.ab3@30444>   BTST #0,d0
0003AAC8 <AmiBlitz3.ab3@30445>   BEQ 'l1
0003AAD0 <AmiBlitz3.ab3@30446>   MOVE.b #1,declare
0003AAD4 <AmiBlitz3.ab3@30449>   BTST #1,d0
0003AAD8 <AmiBlitz3.ab3@30450>   BEQ 'l2
0003AAE0 <AmiBlitz3.ab3@30451>   MOVE.b #1,declare2
0003AAE4 <AmiBlitz3.ab3@30454>   BTST #2,d0
0003AAE8 <AmiBlitz3.ab3@30455>   BEQ 'l3
0003AAF0 <AmiBlitz3.ab3@30456>   MOVE.b #1,typecheck
0003AAF4 <AmiBlitz3.ab3@30459>   BSR.w JUMP_get1bytemain
0003AAF6 <AmiBlitz3.ab3@30460> RTS
0003AAFC <AmiBlitz3.ab3@30462> JUMP_get1bytemain JMP get1bytemain
0003AB26 <AmiBlitz3.ab3@30466>   !basic
0003AB46 <AmiBlitz3.ab3@30468>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003AB64 <AmiBlitz3.ab3@30469>   !asm
0003AB66 <AmiBlitz3.ab3@30470> Return
0003AB68 <AmiBlitz3.ab3@30475>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003AB6A <AmiBlitz3.ab3@30476>   ADDQ #1,a5
0003AB6C <AmiBlitz3.ab3@30477>   MOVE.l a5,-(a7)
0003AB96 <AmiBlitz3.ab3@30478>   !basic
0003AB9C <AmiBlitz3.ab3@30479>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003ABA6 <AmiBlitz3.ab3@30480>   If _myD0
0003ABE6 <AmiBlitz3.ab3@30481>     newconst$ = UCase$(Peek.s(_myD0))
0003ABEC <AmiBlitz3.ab3@30482>   Else
0003AC26 <AmiBlitz3.ab3@30483>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003AC4E <AmiBlitz3.ab3@30484>     nwconst$="xxx"
0003AC76 <AmiBlitz3.ab3@30486>   condata$ =""
0003AC86 <AmiBlitz3.ab3@30487>   Poke.b ?skip_bytes,0
0003ACE2 <AmiBlitz3.ab3@30488>   If Left$(newconst$,2) = "__"
0003AD3C <AmiBlitz3.ab3@30489>     Select Mid$(newconst$,3,4)
0003AD60 <AmiBlitz3.ab3@30491>      Case "DATE"
0003ADBA <AmiBlitz3.ab3@30492>       Select Mid$(newconst$,3,6)
0003ADF8 <AmiBlitz3.ab3@30493>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003AE3C <AmiBlitz3.ab3@30494>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003AE4A <AmiBlitz3.ab3@30495>       End Select
0003AE58 <AmiBlitz3.ab3@30496>       i.l=SystemDate
0003AE7E <AmiBlitz3.ab3@30497>       condata$ = Date$ (i)
0003AEFC <AmiBlitz3.ab3@30498>       condata$ = Replace$(condata$,"/",".")
0003AF26 <AmiBlitz3.ab3@30500>      Case "VER_"
0003AF36 <AmiBlitz3.ab3@30503>       actual_version.l = Peek.l(?versioninformation)
0003AF46 <AmiBlitz3.ab3@30504>       actual_build.l   = Peek.l(?number_of_builds)
0003AF6A <AmiBlitz3.ab3@30506>       Format ""
0003AFC4 <AmiBlitz3.ab3@30507>       Select Mid$(newconst$,3,9)
0003AFE8 <AmiBlitz3.ab3@30509>        Case "VER_MAJOR"
0003B024 <AmiBlitz3.ab3@30510>         condata$ = Str$(actual_version LSR 24)
0003B04E <AmiBlitz3.ab3@30512>        Case "VER_MINOR"
0003B092 <AmiBlitz3.ab3@30513>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003B0BC <AmiBlitz3.ab3@30515>        Case "VER_PATCH"
0003B100 <AmiBlitz3.ab3@30516>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003B12A <AmiBlitz3.ab3@30518>        Case "VER_BUILD"
0003B14E <AmiBlitz3.ab3@30519>         Format ""
0003B182 <AmiBlitz3.ab3@30520>         condata$ = Str$(actual_build)
0003B188 <AmiBlitz3.ab3@30522>        Default
0003B1B0 <AmiBlitz3.ab3@30523>         condata$ = "{unknown compiler constant}"
0003B1BE <AmiBlitz3.ab3@30525>       End Select
0003B1E2 <AmiBlitz3.ab3@30526>       Format ""
0003B1F2 <AmiBlitz3.ab3@30527>       Poke.b ?skip_bytes,11
0003B21C <AmiBlitz3.ab3@30529>      Case "THIS"
0003B276 <AmiBlitz3.ab3@30530>       Select Mid$(newconst$,3,9)
0003B29A <AmiBlitz3.ab3@30532>        Case "THIS_FUNC"
0003B2AA <AmiBlitz3.ab3@30533>         Poke.b ?skip_bytes,15
0003B2CA <AmiBlitz3.ab3@30534>         If Peek.l(?currentfunction)<>0
0003B316 <AmiBlitz3.ab3@30535>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003B31C <AmiBlitz3.ab3@30536>         Else
0003B344 <AmiBlitz3.ab3@30537>           condata$ = "GLOBAL"
0003B36E <AmiBlitz3.ab3@30540>        Case "THIS_INCL"
0003B37E <AmiBlitz3.ab3@30541>         Poke.b ?skip_bytes,14
0003B39E <AmiBlitz3.ab3@30542>         If Peek.l(?includetemp2)<>0
0003B3EC <AmiBlitz3.ab3@30543>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003B416 <AmiBlitz3.ab3@30546>        Case "THIS_POIN"
0003B426 <AmiBlitz3.ab3@30547>         Poke.b ?skip_bytes,14
0003B446 <AmiBlitz3.ab3@30548>         If Peek.l(?currentfunction)<>0
0003B474 <AmiBlitz3.ab3@30549>           condata$ = Hex$(Peek.l(?currentfunction))
0003B482 <AmiBlitz3.ab3@30552>       End Select
0003B4AC <AmiBlitz3.ab3@30554>      Case "CODE"
0003B4BC <AmiBlitz3.ab3@30555>       Poke.b ?skip_bytes,10
0003B51E <AmiBlitz3.ab3@30556>       If Mid$(newconst$,3,8) = "CODELINE"
0003B55A <AmiBlitz3.ab3@30557>         condata$ = Str$(Peek.l(?globallinecount))
0003B568 <AmiBlitz3.ab3@30560>     End Select
0003B56E <AmiBlitz3.ab3@30562>   Else
0003B5C2 <AmiBlitz3.ab3@30563>     Select Left$(newconst$,1)
0003B5E6 <AmiBlitz3.ab3@30565>      Case "R"
0003B5F6 <AmiBlitz3.ab3@30566>       Poke.b ?skip_bytes,3
0003B66E <AmiBlitz3.ab3@30567>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B6EE <AmiBlitz3.ab3@30568>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B6FE <AmiBlitz3.ab3@30569>       Next
0003B728 <AmiBlitz3.ab3@30571>      Case "N"
0003B738 <AmiBlitz3.ab3@30572>       Poke.b ?skip_bytes,1
0003B75C <AmiBlitz3.ab3@30573>       condata$ = Chr$(10)
0003B762 <AmiBlitz3.ab3@30575>      Default
0003B774 <AmiBlitz3.ab3@30576>       char1.b = Peek.b(&newconst$)
0003B78C <AmiBlitz3.ab3@30577>       char2.b = Peek.b(&newconst$+1)
0003B798 <AmiBlitz3.ab3@30578>       nibble1.l = -1
0003B7A4 <AmiBlitz3.ab3@30579>       nibble2.l = -1
0003B7E2 <AmiBlitz3.ab3@30581>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B820 <AmiBlitz3.ab3@30582>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B864 <AmiBlitz3.ab3@30584>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B8A8 <AmiBlitz3.ab3@30585>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003B8EC <AmiBlitz3.ab3@30587>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003B930 <AmiBlitz3.ab3@30588>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003B956 <AmiBlitz3.ab3@30590>       If nibble1>=0 AND nibble2>=0
0003B96C <AmiBlitz3.ab3@30591>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003B990 <AmiBlitz3.ab3@30592>         condata$ = Chr$(newchar)
0003B9A0 <AmiBlitz3.ab3@30593>         Poke.b ?skip_bytes,2
0003B9AE <AmiBlitz3.ab3@30596>     End Select
0003BA0E <AmiBlitz3.ab3@30598>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003BB34 <AmiBlitz3.ab3@30599>     !cout{"detected unknown const: " + newconst$}
0003BB68 <AmiBlitz3.ab3@30600>     condata$ = newconst$
0003BB7E <AmiBlitz3.ab3@30603>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003BB80 <AmiBlitz3.ab3@30604>   MOVE.l d0,d2
0003BB82 <AmiBlitz3.ab3@30605>   MOVE.l d2,-(a7)
0003BB88 <AmiBlitz3.ab3@30607>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003BB8A <AmiBlitz3.ab3@30608>   MOVE.l d0,a0
0003BB8C <AmiBlitz3.ab3@30611>     MOVE.b (a0)+,d1
0003BB92 <AmiBlitz3.ab3@30612>     JSR pokedata1b
0003BB96 <AmiBlitz3.ab3@30613>  DBF d2,'l1
0003BBB4 <AmiBlitz3.ab3@30615>   !asm
0003BBB6 <AmiBlitz3.ab3@30616>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003BBB8 <AmiBlitz3.ab3@30617>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003BBBA <AmiBlitz3.ab3@30618>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003BBC0 <AmiBlitz3.ab3@30619>   ADD.l #1,d2
0003BBC6 <AmiBlitz3.ab3@30621>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003BBCC <AmiBlitz3.ab3@30622>   MOVE.b skip_bytes,D0
0003BBCE <AmiBlitz3.ab3@30623>   ADD.l D0,a5
0003BBD0 <AmiBlitz3.ab3@30624> RTS
0003BBD4 <AmiBlitz3.ab3@30700>   MOVEM.l d0-d2/a0-a5,-(a7)
0003BBDA <AmiBlitz3.ab3@30701>   TST.w proceduremode                                     ;1 in function
0003BBDE <AmiBlitz3.ab3@30702>   BEQ 'global
0003BBE4 <AmiBlitz3.ab3@30703>   LEA firstglob,a2
0003BBEA <AmiBlitz3.ab3@30704>   JSR findvariable2
0003BBEE <AmiBlitz3.ab3@30705>   BEQ 'isused
0003BBF6 <AmiBlitz3.ab3@30706>   MOVE.b #1,newvariable
0003BBFC <AmiBlitz3.ab3@30707>   LEA firstlocal,a2
0003BC02 <AmiBlitz3.ab3@30708>   JSR findvariable
0003BC06 <AmiBlitz3.ab3@30709>   BEQ 'isused
0003BC0C <AmiBlitz3.ab3@30710>   CLR.b newvariable
0003BC10 <AmiBlitz3.ab3@30711>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BC12 <AmiBlitz3.ab3@30712>   RTS
0003BC18 <AmiBlitz3.ab3@30715>   JSR findvariable
0003BC1C <AmiBlitz3.ab3@30716>   BNE 'isunused
0003BC22 <AmiBlitz3.ab3@30719>    MOVE.w lastchar,-(a7)                                  ;get the typename from source
0003BC28 <AmiBlitz3.ab3@30720>    JSR getparameter2
0003BC2E <AmiBlitz3.ab3@30721>    MOVE.w (a7)+,lastchar
0003BC32 <AmiBlitz3.ab3@30722>    MOVE.l $a(a2),a0                                       ; get the name of the type
0003BC36 <AmiBlitz3.ab3@30723>    LEA $b(a0),a0
0003BC3C <AmiBlitz3.ab3@30724>    LEA ptr_parameterstore,a1
0003BC3E <AmiBlitz3.ab3@30727>    CMPM.b (a0)+,(a1)+                                     ; compare name
0003BC42 <AmiBlitz3.ab3@30728>    BNE'error
0003BC44 <AmiBlitz3.ab3@30729>    TST.b (a1)
0003BC48 <AmiBlitz3.ab3@30730> 
0003BC4A <AmiBlitz3.ab3@30731>    TST.b (a0)
0003BC4E <AmiBlitz3.ab3@30732>    BNE 'error
0003BC52 <AmiBlitz3.ab3@30735>   MOVEM.l (a7)+,d0-d2/a0-a5
0003BC54 <AmiBlitz3.ab3@30736>  RTS
0003BC5A <AmiBlitz3.ab3@30739> JMP errormsg_declaredtwice
0003BC5E <AmiBlitz3.ab3@30743>   MOVEM.l a3/d1,-(a7)
0003BC64 <AmiBlitz3.ab3@30745>   CLR.b a4a5store
0003BC66 <AmiBlitz3.ab3@30748>   MOVE.b (a3)+,d1
0003BC6A <AmiBlitz3.ab3@30749>   CMP.b #$15,d1
0003BC6E <AmiBlitz3.ab3@30750>   BEQ 'find
0003BC72 <AmiBlitz3.ab3@30751>   CMP.b #$14,d1
0003BC76 <AmiBlitz3.ab3@30752>   BEQ 'find
0003BC7A <AmiBlitz3.ab3@30753>   CMP.b #$ff,d1
0003BC7E <AmiBlitz3.ab3@30754>   BNE 'continue
0003BC82 <AmiBlitz3.ab3@30755>   BRA 'notfind
0003BC88 <AmiBlitz3.ab3@30758>   MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003BC8E <AmiBlitz3.ab3@30759>   JSR writelong
0003BC96 <AmiBlitz3.ab3@30760>   MOVE.b #1,a4a5store
0003BC9A <AmiBlitz3.ab3@30763>   MOVEM.l (a7)+,a3/d1
0003BC9C <AmiBlitz3.ab3@30764> RTS
0003BCA2 <AmiBlitz3.ab3@30768>   TST.b a4a5store
0003BCA6 <AmiBlitz3.ab3@30769>   BEQ 'no
0003BCAC <AmiBlitz3.ab3@30770>   MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003BCB2 <AmiBlitz3.ab3@30771>   JSR writelong
0003BCB8 <AmiBlitz3.ab3@30772>   CLR.b a4a5store
0003BCBA <AmiBlitz3.ab3@30775> RTS
0003BCBA <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003BCBE <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003BCC0 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003BCC8 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003BCD4 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003BCD8 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003BCDA <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003BCDE <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003BD27 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003BD28 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003BD2C <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003BD2E <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003BD32 <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003BD4E <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003BD52 <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003BD54 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003BD58 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003BDB5 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003BDB6 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003BDBA <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003BDBC <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003BDC1 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003BDD1 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003BDD2 <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003BDD6 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003BDD8 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003BDDE <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003BDEE <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003BDF2 <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003BDF4 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003BDFB <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003BDFC <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003BE00 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003BE02 <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003BE0C <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003BE3F <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003BE40 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003BE44 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003BE46 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003BE4F <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003BE8A <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003BE8E <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003BE90 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003BE9A <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003BE9B <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003BE9C <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003BEA0 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003BEA2 <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003BEA5 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003BEBC <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003BEC2 <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003BED5 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003BED6 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003BEDA <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003BEE2 <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003BEEE <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003BEF2 <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003BEFB <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003BF0C <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003BF13 <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003BF20 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003BF26 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003BF2E <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003BF2F <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003BF36 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003BF3E <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003BF3F <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003BF44 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003BF4F <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003BF5A <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003BF5E <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003BF68 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003BF73 <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003BF78 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003BF81 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003BFE3 <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003BFE8 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003BFF1 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003C004 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003C00A <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003C04B <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003C05E <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003C063 <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003C08A <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003C08F <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003C09B <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003C0A2 <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003C0A7 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003C0BE <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003C0C2 <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003C0C9 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003C0DE <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003C0E3 <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003C102 <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003C106 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003C108 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003C10D <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003C139 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003C13E <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003C145 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003C14A <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003C14C <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003C151 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003C15E <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003C169 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003C17E <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003C183 <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003C192 <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003C198 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003C19E <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003C1BB <internal_commands.ab3@257> INCLUDE "internal_commands.ab3"
0003C1BC <internal_commands.ab3@258> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003C1C2 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003C1E5 <internal_commands.ab3@264> INCLUDE "internal_commands.ab3"
0003C1E6 <internal_commands.ab3@265> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003C1EF <internal_commands.ab3@270> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@271> INCLUDE "internal_commands.ab3"
0003C20A <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003C20F <internal_commands.ab3@277> INCLUDE "internal_commands.ab3"
0003C21E <internal_commands.ab3@278> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003C229 <internal_commands.ab3@284> INCLUDE "internal_commands.ab3"
0003C22A <internal_commands.ab3@285> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003C234 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003C249 <internal_commands.ab3@292> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@293> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003C250 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003C257 <internal_commands.ab3@298> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@299> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003C27D <internal_commands.ab3@305> INCLUDE "internal_commands.ab3"
0003C288 <internal_commands.ab3@306> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@312> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@313> INCLUDE "internal_commands.ab3"
0003C293 <internal_commands.ab3@314> INCLUDE "internal_commands.ab3"
0003C2AA <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@320> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@321> INCLUDE "internal_commands.ab3"
0003C2CB <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003C2CC <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@326> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@327> INCLUDE "internal_commands.ab3"
0003C2D7 <internal_commands.ab3@328> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003C2DC <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@334> INCLUDE "internal_commands.ab3"
0003C2E3 <internal_commands.ab3@335> INCLUDE "internal_commands.ab3"
0003C2E7 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003C2E8 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003C2EE <internal_commands.ab3@341> INCLUDE "internal_commands.ab3"
0003C2F5 <internal_commands.ab3@342> INCLUDE "internal_commands.ab3"
0003C30D <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@347> INCLUDE "internal_commands.ab3"
0003C314 <internal_commands.ab3@348> INCLUDE "internal_commands.ab3"
0003C31B <internal_commands.ab3@349> INCLUDE "internal_commands.ab3"
0003C320 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@354> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@355> INCLUDE "internal_commands.ab3"
0003C32D <internal_commands.ab3@356> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003C336 <internal_commands.ab3@361> INCLUDE "internal_commands.ab3"
0003C338 <internal_commands.ab3@362> INCLUDE "internal_commands.ab3"
0003C33F <internal_commands.ab3@363> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003C35E <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003C360 <internal_commands.ab3@369> INCLUDE "internal_commands.ab3"
0003C368 <internal_commands.ab3@370> INCLUDE "internal_commands.ab3"
0003C381 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@376> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@377> INCLUDE "internal_commands.ab3"
0003C38F <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003C396 <internal_commands.ab3@383> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@384> INCLUDE "internal_commands.ab3"
0003C39D <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@389> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@390> INCLUDE "internal_commands.ab3"
0003C3AB <internal_commands.ab3@391> INCLUDE "internal_commands.ab3"
0003C3AC <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003C3B2 <internal_commands.ab3@397> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@398> INCLUDE "internal_commands.ab3"
0003C3C1 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003C3C8 <internal_commands.ab3@404> INCLUDE "internal_commands.ab3"
0003C3D0 <internal_commands.ab3@405> INCLUDE "internal_commands.ab3"
0003C3DD <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003C3DE <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003C3E4 <internal_commands.ab3@411> INCLUDE "internal_commands.ab3"
0003C3EC <internal_commands.ab3@412> INCLUDE "internal_commands.ab3"
0003C3F9 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003C3FA <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003C400 <internal_commands.ab3@418> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@419> INCLUDE "internal_commands.ab3"
0003C415 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003C416 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@424> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@425> INCLUDE "internal_commands.ab3"
0003C421 <internal_commands.ab3@426> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@427> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@517> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003C42D <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003C434 <internal_commands.ab3@524> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@525> INCLUDE "internal_commands.ab3"
0003C438 <internal_commands.ab3@526> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@532> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003C448 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003C449 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003C450 <internal_commands.ab3@539> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@540> INCLUDE "internal_commands.ab3"
0003C454 <internal_commands.ab3@541> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003C45A <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003C45E <internal_commands.ab3@547> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003C465 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003C46C <internal_commands.ab3@554> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@555> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@556> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@562> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003C481 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003C488 <internal_commands.ab3@569> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@570> INCLUDE "internal_commands.ab3"
0003C48C <internal_commands.ab3@571> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@577> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003C49D <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003C4A4 <internal_commands.ab3@584> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@585> INCLUDE "internal_commands.ab3"
0003C4A8 <internal_commands.ab3@586> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@592> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003C4B9 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@599> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@600> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@601> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@607> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C4D4 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C4D5 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C4DC <internal_commands.ab3@614> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@615> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@616> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C4E6 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@622> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C4F1 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@629> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@630> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@631> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C502 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@637> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C50D <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@644> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@645> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@646> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C51E <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C522 <internal_commands.ab3@652> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C529 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@659> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@660> INCLUDE "internal_commands.ab3"
0003C534 <internal_commands.ab3@661> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C53A <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C53E <internal_commands.ab3@667> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C544 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C545 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@674> INCLUDE "internal_commands.ab3"
0003C54E <internal_commands.ab3@675> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@676> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C55A <internal_commands.ab3@682> INCLUDE "internal_commands.ab3"
0003C55C <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C560 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C561 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@689> INCLUDE "internal_commands.ab3"
0003C56A <internal_commands.ab3@690> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@691> INCLUDE "internal_commands.ab3"
0003C570 <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C576 <internal_commands.ab3@697> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C57C <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C57D <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C57E <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C584 <internal_commands.ab3@704> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@705> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@706> INCLUDE "internal_commands.ab3"
0003C58C <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C592 <internal_commands.ab3@712> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C598 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C599 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C59A <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C5A0 <internal_commands.ab3@719> INCLUDE "internal_commands.ab3"
0003C5A2 <internal_commands.ab3@720> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@721> INCLUDE "internal_commands.ab3"
0003C5A8 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C5AE <internal_commands.ab3@727> INCLUDE "internal_commands.ab3"
0003C5B0 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C5B4 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C5B5 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C5B6 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@734> INCLUDE "internal_commands.ab3"
0003C5BE <internal_commands.ab3@735> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@736> INCLUDE "internal_commands.ab3"
0003C5C4 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C5CA <internal_commands.ab3@742> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C5D0 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C5D1 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C5D2 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@749> INCLUDE "internal_commands.ab3"
0003C5DA <internal_commands.ab3@750> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@751> INCLUDE "internal_commands.ab3"
0003C5E0 <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C5E6 <internal_commands.ab3@757> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C5ED <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C5EE <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@764> INCLUDE "internal_commands.ab3"
0003C5F6 <internal_commands.ab3@765> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@766> INCLUDE "internal_commands.ab3"
0003C5FC <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C602 <internal_commands.ab3@772> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C609 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C60A <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@779> INCLUDE "internal_commands.ab3"
0003C612 <internal_commands.ab3@780> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@781> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C61E <internal_commands.ab3@787> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C625 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C626 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@794> INCLUDE "internal_commands.ab3"
0003C62E <internal_commands.ab3@795> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@796> INCLUDE "internal_commands.ab3"
0003C634 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@802> INCLUDE "internal_commands.ab3"
0003C63C <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C641 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@809> INCLUDE "internal_commands.ab3"
0003C64A <internal_commands.ab3@810> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@811> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C652 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@817> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C65D <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C660 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@824> INCLUDE "internal_commands.ab3"
0003C666 <internal_commands.ab3@825> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@826> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@832> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C679 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@839> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@840> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@841> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@847> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C695 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@854> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@855> INCLUDE "internal_commands.ab3"
0003C6A0 <internal_commands.ab3@856> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@862> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C6B0 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C6B1 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@869> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@870> INCLUDE "internal_commands.ab3"
0003C6BC <internal_commands.ab3@871> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@877> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C6CD <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C6D4 <internal_commands.ab3@884> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@885> INCLUDE "internal_commands.ab3"
0003C6D8 <internal_commands.ab3@886> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@892> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C6E9 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@899> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@900> INCLUDE "internal_commands.ab3"
0003C6F4 <internal_commands.ab3@901> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C6FE <internal_commands.ab3@907> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C705 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C706 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C70C <internal_commands.ab3@914> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@915> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@916> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C71A <internal_commands.ab3@922> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C721 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@929> INCLUDE "internal_commands.ab3"
0003C72A <internal_commands.ab3@930> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@931> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C732 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C736 <internal_commands.ab3@937> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C73C <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C73D <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@944> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@945> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@946> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C74E <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C752 <internal_commands.ab3@952> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C759 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C75C <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@959> INCLUDE "internal_commands.ab3"
0003C762 <internal_commands.ab3@960> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@961> INCLUDE "internal_commands.ab3"
0003C768 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C76A <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C76E <internal_commands.ab3@967> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C775 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C778 <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@974> INCLUDE "internal_commands.ab3"
0003C77E <internal_commands.ab3@975> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@976> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@982> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C791 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C794 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@989> INCLUDE "internal_commands.ab3"
0003C79A <internal_commands.ab3@990> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@991> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C7A2 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@997> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C7AD <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@1004> INCLUDE "internal_commands.ab3"
0003C7B6 <internal_commands.ab3@1005> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@1006> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@1012> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C7C9 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C7D0 <internal_commands.ab3@1019> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@1020> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@1021> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@1027> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C7E5 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C7E6 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@1034> INCLUDE "internal_commands.ab3"
0003C7EE <internal_commands.ab3@1035> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@1036> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C7FA <internal_commands.ab3@1042> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C801 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@1049> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@1050> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@1051> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C816 <internal_commands.ab3@1057> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C81D <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C81E <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@1064> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@1065> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@1066> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C832 <internal_commands.ab3@1072> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C839 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C83A <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C840 <internal_commands.ab3@1079> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@1080> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@1081> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@1087> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C855 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C856 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C85C <internal_commands.ab3@1094> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@1095> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@1096> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C86A <internal_commands.ab3@1102> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C871 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@1109> INCLUDE "internal_commands.ab3"
0003C87A <internal_commands.ab3@1110> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@1111> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C886 <internal_commands.ab3@1117> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C88D <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C894 <internal_commands.ab3@1124> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@1125> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@1126> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@1132> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C8A9 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C8B0 <internal_commands.ab3@1139> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@1140> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@1141> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C8BE <internal_commands.ab3@1147> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C8C5 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C8CC <internal_commands.ab3@1154> INCLUDE "internal_commands.ab3"
0003C8CE <internal_commands.ab3@1155> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@1156> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@1162> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C8E1 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003C8E8 <internal_commands.ab3@1169> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@1170> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@1171> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003C8F6 <internal_commands.ab3@1177> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003C8FD <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003C904 <internal_commands.ab3@1184> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@1185> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003C90C <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003C912 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003C919 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003C91C <internal_commands.ab3@1198> INCLUDE "internal_commands.ab3"
0003C920 <internal_commands.ab3@1199> INCLUDE "internal_commands.ab3"
0003C922 <internal_commands.ab3@1200> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003C928 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003C92A <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003C930 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003C935 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@1213> INCLUDE "internal_commands.ab3"
0003C93C <internal_commands.ab3@1214> INCLUDE "internal_commands.ab3"
0003C93E <internal_commands.ab3@1215> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C944 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003C94C <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003C951 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@1228> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@1229> INCLUDE "internal_commands.ab3"
0003C95A <internal_commands.ab3@1230> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003C962 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003C966 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003C96D <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003C970 <internal_commands.ab3@1243> INCLUDE "internal_commands.ab3"
0003C974 <internal_commands.ab3@1244> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@1245> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003C97C <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003C989 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@1258> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@1259> INCLUDE "internal_commands.ab3"
0003C992 <internal_commands.ab3@1260> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003C998 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003C99A <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@1266> INCLUDE "internal_commands.ab3"
0003C9A0 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003C9A4 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003C9A5 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003C9A8 <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003C9AC <internal_commands.ab3@1273> INCLUDE "internal_commands.ab3"
0003C9AE <internal_commands.ab3@1274> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@1275> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003C9BA <internal_commands.ab3@1281> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003C9C1 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003C9C4 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C9C8 <internal_commands.ab3@1288> INCLUDE "internal_commands.ab3"
0003C9CA <internal_commands.ab3@1289> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1290> INCLUDE "internal_commands.ab3"
0003C9D0 <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C9D6 <internal_commands.ab3@1296> INCLUDE "internal_commands.ab3"
0003C9D8 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C9DC <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C9DD <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@1303> INCLUDE "internal_commands.ab3"
0003C9E6 <internal_commands.ab3@1304> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1305> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C9EE <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C9F2 <internal_commands.ab3@1311> INCLUDE "internal_commands.ab3"
0003C9F4 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C9F9 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C9FC <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003CA00 <internal_commands.ab3@1318> INCLUDE "internal_commands.ab3"
0003CA02 <internal_commands.ab3@1319> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1320> INCLUDE "internal_commands.ab3"
0003CA08 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003CA0E <internal_commands.ab3@1326> INCLUDE "internal_commands.ab3"
0003CA10 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003CA15 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003CA16 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003CA1C <internal_commands.ab3@1333> INCLUDE "internal_commands.ab3"
0003CA1E <internal_commands.ab3@1334> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1335> INCLUDE "internal_commands.ab3"
0003CA24 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003CA26 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@1341> INCLUDE "internal_commands.ab3"
0003CA2C <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003CA31 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003CA34 <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@1348> INCLUDE "internal_commands.ab3"
0003CA3A <internal_commands.ab3@1349> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@1350> INCLUDE "internal_commands.ab3"
0003CA40 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003CA42 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003CA46 <internal_commands.ab3@1356> INCLUDE "internal_commands.ab3"
0003CA48 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003CA4D <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003CA4E <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003CA50 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003CA54 <internal_commands.ab3@1363> INCLUDE "internal_commands.ab3"
0003CA56 <internal_commands.ab3@1364> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@1365> INCLUDE "internal_commands.ab3"
0003CA5C <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003CA5E <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003CA62 <internal_commands.ab3@1371> INCLUDE "internal_commands.ab3"
0003CA64 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003CA69 <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003CA6A <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003CA6C <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@1378> INCLUDE "internal_commands.ab3"
0003CA72 <internal_commands.ab3@1379> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@1380> INCLUDE "internal_commands.ab3"
0003CA78 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003CA7A <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003CA7E <internal_commands.ab3@1386> INCLUDE "internal_commands.ab3"
0003CA80 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003CA85 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003CA86 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003CA88 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@1393> INCLUDE "internal_commands.ab3"
0003CA8E <internal_commands.ab3@1394> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@1395> INCLUDE "internal_commands.ab3"
0003CA94 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003CA96 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@1401> INCLUDE "internal_commands.ab3"
0003CA9C <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003CAA4 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003CAA5 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003CAAC <internal_commands.ab3@1408> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@1409> INCLUDE "internal_commands.ab3"
0003CAB0 <internal_commands.ab3@1410> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003CABA <internal_commands.ab3@1416> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003CAC0 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003CAC1 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003CAC8 <internal_commands.ab3@1423> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@1424> INCLUDE "internal_commands.ab3"
0003CACC <internal_commands.ab3@1425> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003CAD6 <internal_commands.ab3@1431> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003CADC <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003CADD <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003CAE0 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@1438> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@1439> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@1440> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003CAF2 <internal_commands.ab3@1446> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003CAF8 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003CAF9 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003CB00 <internal_commands.ab3@1453> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@1454> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@1455> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@1456> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003CB0E <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@1462> INCLUDE "internal_commands.ab3"
0003CB15 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@1469> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@1470> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@1471> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003CB2A <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@1477> INCLUDE "internal_commands.ab3"
0003CB30 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003CB31 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003CB34 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@1484> INCLUDE "internal_commands.ab3"
0003CB3C <internal_commands.ab3@1485> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@1486> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003CB46 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@1492> INCLUDE "internal_commands.ab3"
0003CB4C <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003CB4D <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003CB54 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@1499> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@1500> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@1501> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003CB62 <internal_commands.ab3@1506> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@1507> INCLUDE "internal_commands.ab3"
0003CB69 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003CB6A <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003CB72 <internal_commands.ab3@1514> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@1515> INCLUDE "internal_commands.ab3"
0003CB78 <internal_commands.ab3@1516> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003CB7E <internal_commands.ab3@1521> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@1522> INCLUDE "internal_commands.ab3"
0003CB85 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003CB8C <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003CB8E <internal_commands.ab3@1529> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@1530> INCLUDE "internal_commands.ab3"
0003CB94 <internal_commands.ab3@1531> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003CB9A <internal_commands.ab3@1537> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003CBA2 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003CBA3 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003CBA6 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003CBAA <internal_commands.ab3@1544> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@1545> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@1546> INCLUDE "internal_commands.ab3"
0003CBB2 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003CBB8 <internal_commands.ab3@1552> INCLUDE "internal_commands.ab3"
0003CBBA <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003CBC1 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003CBC8 <internal_commands.ab3@1559> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@1560> INCLUDE "internal_commands.ab3"
0003CBCC <internal_commands.ab3@1561> INCLUDE "internal_commands.ab3"
0003CBD0 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003CBD2 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@1567> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003CBDF <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003CBE2 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003CBE6 <internal_commands.ab3@1574> INCLUDE "internal_commands.ab3"
0003CBE8 <internal_commands.ab3@1575> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@1576> INCLUDE "internal_commands.ab3"
0003CBEE <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@1582> INCLUDE "internal_commands.ab3"
0003CBF6 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003CBFB <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003CBFE <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003CC02 <internal_commands.ab3@1589> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@1590> INCLUDE "internal_commands.ab3"
0003CC06 <internal_commands.ab3@1591> INCLUDE "internal_commands.ab3"
0003CC0A <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@1597> INCLUDE "internal_commands.ab3"
0003CC12 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003CC17 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003CC1A <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003CC1E <internal_commands.ab3@1604> INCLUDE "internal_commands.ab3"
0003CC20 <internal_commands.ab3@1605> INCLUDE "internal_commands.ab3"
0003CC22 <internal_commands.ab3@1606> INCLUDE "internal_commands.ab3"
0003CC26 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@1612> INCLUDE "internal_commands.ab3"
0003CC2E <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003CC33 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003CC36 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003CC3A <internal_commands.ab3@1619> INCLUDE "internal_commands.ab3"
0003CC3C <internal_commands.ab3@1620> INCLUDE "internal_commands.ab3"
0003CC3E <internal_commands.ab3@1621> INCLUDE "internal_commands.ab3"
0003CC42 <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003CC44 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@1627> INCLUDE "internal_commands.ab3"
0003CC4A <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003CC4E <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003CC4F <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003CC52 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003CC56 <internal_commands.ab3@1634> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@1635> INCLUDE "internal_commands.ab3"
0003CC5A <internal_commands.ab3@1636> INCLUDE "internal_commands.ab3"
0003CC5E <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003CC60 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@1642> INCLUDE "internal_commands.ab3"
0003CC66 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003CC6B <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003CC6E <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003CC72 <internal_commands.ab3@1649> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@1650> INCLUDE "internal_commands.ab3"
0003CC76 <internal_commands.ab3@1651> INCLUDE "internal_commands.ab3"
0003CC7A <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003CC7C <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@1657> INCLUDE "internal_commands.ab3"
0003CC82 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003CC86 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003CC87 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003CC8A <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003CC8E <internal_commands.ab3@1664> INCLUDE "internal_commands.ab3"
0003CC90 <internal_commands.ab3@1665> INCLUDE "internal_commands.ab3"
0003CC92 <internal_commands.ab3@1666> INCLUDE "internal_commands.ab3"
0003CC96 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003CC98 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003CC9C <internal_commands.ab3@1672> INCLUDE "internal_commands.ab3"
0003CC9E <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003CCA2 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003CCA3 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003CCA6 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003CCAA <internal_commands.ab3@1679> INCLUDE "internal_commands.ab3"
0003CCAC <internal_commands.ab3@1680> INCLUDE "internal_commands.ab3"
0003CCAE <internal_commands.ab3@1681> INCLUDE "internal_commands.ab3"
0003CCB2 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003CCB4 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003CCB8 <internal_commands.ab3@1687> INCLUDE "internal_commands.ab3"
0003CCBA <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003CCBD <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003CCBE <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003CCC0 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003CCC4 <internal_commands.ab3@1694> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@1695> INCLUDE "internal_commands.ab3"
0003CCC8 <internal_commands.ab3@1696> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003CCCE <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003CCD2 <internal_commands.ab3@1702> INCLUDE "internal_commands.ab3"
0003CCD4 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003CCD8 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003CCD9 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003CCDA <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003CCE0 <internal_commands.ab3@1709> INCLUDE "internal_commands.ab3"
0003CCE2 <internal_commands.ab3@1710> INCLUDE "internal_commands.ab3"
0003CCE4 <internal_commands.ab3@1711> INCLUDE "internal_commands.ab3"
0003CCE8 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003CCEE <internal_commands.ab3@1717> INCLUDE "internal_commands.ab3"
0003CCF0 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003CCF4 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003CCF5 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003CCF8 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003CCFC <internal_commands.ab3@1724> INCLUDE "internal_commands.ab3"
0003CCFE <internal_commands.ab3@1725> INCLUDE "internal_commands.ab3"
0003CD00 <internal_commands.ab3@1726> INCLUDE "internal_commands.ab3"
0003CD04 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@1732> INCLUDE "internal_commands.ab3"
0003CD0C <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003CD13 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003CD14 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003CD16 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@1739> INCLUDE "internal_commands.ab3"
0003CD1C <internal_commands.ab3@1740> INCLUDE "internal_commands.ab3"
0003CD1E <internal_commands.ab3@1741> INCLUDE "internal_commands.ab3"
0003CD22 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003CD24 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003CD28 <internal_commands.ab3@1747> INCLUDE "internal_commands.ab3"
0003CD2A <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003CD2E <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003CD2F <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003CD30 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003CD32 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003CD36 <internal_commands.ab3@1754> INCLUDE "internal_commands.ab3"
0003CD38 <internal_commands.ab3@1755> INCLUDE "internal_commands.ab3"
0003CD3A <internal_commands.ab3@1756> INCLUDE "internal_commands.ab3"
0003CD3E <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003CD40 <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003CD44 <internal_commands.ab3@1762> INCLUDE "internal_commands.ab3"
0003CD46 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003CD4A <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003CD4B <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003CD4C <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003CD4E <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003CD52 <internal_commands.ab3@1769> INCLUDE "internal_commands.ab3"
0003CD54 <internal_commands.ab3@1770> INCLUDE "internal_commands.ab3"
0003CD56 <internal_commands.ab3@1771> INCLUDE "internal_commands.ab3"
0003CD5A <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003CD5C <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003CD60 <internal_commands.ab3@1777> INCLUDE "internal_commands.ab3"
0003CD62 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003CD67 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003CD68 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003CD6A <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003CD6E <internal_commands.ab3@1784> INCLUDE "internal_commands.ab3"
0003CD70 <internal_commands.ab3@1785> INCLUDE "internal_commands.ab3"
0003CD72 <internal_commands.ab3@1786> INCLUDE "internal_commands.ab3"
0003CD76 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003CD78 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003CD7C <internal_commands.ab3@1792> INCLUDE "internal_commands.ab3"
0003CD7E <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003CD83 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003CD84 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003CD86 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003CD8A <internal_commands.ab3@1799> INCLUDE "internal_commands.ab3"
0003CD8C <internal_commands.ab3@1800> INCLUDE "internal_commands.ab3"
0003CD8E <internal_commands.ab3@1801> INCLUDE "internal_commands.ab3"
0003CD92 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003CD94 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003CD98 <internal_commands.ab3@1807> INCLUDE "internal_commands.ab3"
0003CD9A <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003CD9E <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003CD9F <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003CDA0 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003CDA2 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003CDA6 <internal_commands.ab3@1814> INCLUDE "internal_commands.ab3"
0003CDA8 <internal_commands.ab3@1815> INCLUDE "internal_commands.ab3"
0003CDAA <internal_commands.ab3@1816> INCLUDE "internal_commands.ab3"
0003CDAE <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003CDB0 <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003CDB4 <internal_commands.ab3@1822> INCLUDE "internal_commands.ab3"
0003CDB6 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003CDBA <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003CDBB <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003CDBC <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003CDBE <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003CDC2 <internal_commands.ab3@1829> INCLUDE "internal_commands.ab3"
0003CDC4 <internal_commands.ab3@1830> INCLUDE "internal_commands.ab3"
0003CDC6 <internal_commands.ab3@1831> INCLUDE "internal_commands.ab3"
0003CDCA <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003CDCC <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003CDD0 <internal_commands.ab3@1837> INCLUDE "internal_commands.ab3"
0003CDD2 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003CDD7 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003CDD8 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003CDDE <internal_commands.ab3@1844> INCLUDE "internal_commands.ab3"
0003CDE0 <internal_commands.ab3@1845> INCLUDE "internal_commands.ab3"
0003CDE2 <internal_commands.ab3@1846> INCLUDE "internal_commands.ab3"
0003CDE6 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003CDE8 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003CDEC <internal_commands.ab3@1852> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003CDF3 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003CDF6 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003CDFA <internal_commands.ab3@1859> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@1860> INCLUDE "internal_commands.ab3"
0003CDFE <internal_commands.ab3@1861> INCLUDE "internal_commands.ab3"
0003CE02 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003CE04 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003CE08 <internal_commands.ab3@1867> INCLUDE "internal_commands.ab3"
0003CE0A <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003CE0E <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003CE0F <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003CE12 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003CE16 <internal_commands.ab3@1874> INCLUDE "internal_commands.ab3"
0003CE18 <internal_commands.ab3@1875> INCLUDE "internal_commands.ab3"
0003CE1A <internal_commands.ab3@1876> INCLUDE "internal_commands.ab3"
0003CE1E <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003CE24 <internal_commands.ab3@1882> INCLUDE "internal_commands.ab3"
0003CE26 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003CE2A <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003CE2B <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003CE2C <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003CE32 <internal_commands.ab3@1889> INCLUDE "internal_commands.ab3"
0003CE34 <internal_commands.ab3@1890> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@1891> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003CE3C <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003CE40 <internal_commands.ab3@1897> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003CE46 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003CE47 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003CE48 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003CE4E <internal_commands.ab3@1904> INCLUDE "internal_commands.ab3"
0003CE50 <internal_commands.ab3@1905> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@1906> INCLUDE "internal_commands.ab3"
0003CE56 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003CE58 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003CE5C <internal_commands.ab3@1912> INCLUDE "internal_commands.ab3"
0003CE5E <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003CE62 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003CE63 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003CE64 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003CE66 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003CE6A <internal_commands.ab3@1919> INCLUDE "internal_commands.ab3"
0003CE6C <internal_commands.ab3@1920> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@1921> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003CE74 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003CE78 <internal_commands.ab3@1927> INCLUDE "internal_commands.ab3"
0003CE7A <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003CE7E <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003CE7F <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003CE80 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003CE82 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003CE86 <internal_commands.ab3@1934> INCLUDE "internal_commands.ab3"
0003CE88 <internal_commands.ab3@1935> INCLUDE "internal_commands.ab3"
0003CE8A <internal_commands.ab3@1936> INCLUDE "internal_commands.ab3"
0003CE8E <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003CE90 <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003CE94 <internal_commands.ab3@1942> INCLUDE "internal_commands.ab3"
0003CE96 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003CE9A <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003CE9B <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003CE9C <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003CE9E <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003CEA2 <internal_commands.ab3@1949> INCLUDE "internal_commands.ab3"
0003CEA4 <internal_commands.ab3@1950> INCLUDE "internal_commands.ab3"
0003CEA6 <internal_commands.ab3@1951> INCLUDE "internal_commands.ab3"
0003CEAA <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003CEAC <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003CEB0 <internal_commands.ab3@1957> INCLUDE "internal_commands.ab3"
0003CEB2 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003CEB6 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003CEB7 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003CEB8 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003CEBE <internal_commands.ab3@1964> INCLUDE "internal_commands.ab3"
0003CEC0 <internal_commands.ab3@1965> INCLUDE "internal_commands.ab3"
0003CEC2 <internal_commands.ab3@1966> INCLUDE "internal_commands.ab3"
0003CEC6 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003CEC8 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003CECC <internal_commands.ab3@1972> INCLUDE "internal_commands.ab3"
0003CECE <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003CED2 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003CED3 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003CED4 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003CED6 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CEDA <internal_commands.ab3@1979> INCLUDE "internal_commands.ab3"
0003CEDC <internal_commands.ab3@1980> INCLUDE "internal_commands.ab3"
0003CEDE <internal_commands.ab3@1981> INCLUDE "internal_commands.ab3"
0003CEE2 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003CEE4 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003CEE8 <internal_commands.ab3@1987> INCLUDE "internal_commands.ab3"
0003CEEA <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003CEEE <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003CEEF <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003CEF0 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003CEF2 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003CEF6 <internal_commands.ab3@1994> INCLUDE "internal_commands.ab3"
0003CEF8 <internal_commands.ab3@1995> INCLUDE "internal_commands.ab3"
0003CEFA <internal_commands.ab3@1996> INCLUDE "internal_commands.ab3"
0003CEFE <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003CF00 <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003CF04 <internal_commands.ab3@2002> INCLUDE "internal_commands.ab3"
0003CF06 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003CF0A <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003CF0B <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003CF0C <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003CF0E <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003CF12 <internal_commands.ab3@2009> INCLUDE "internal_commands.ab3"
0003CF14 <internal_commands.ab3@2010> INCLUDE "internal_commands.ab3"
0003CF16 <internal_commands.ab3@2011> INCLUDE "internal_commands.ab3"
0003CF1A <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003CF1C <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003CF20 <internal_commands.ab3@2017> INCLUDE "internal_commands.ab3"
0003CF22 <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003CF26 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003CF27 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003CF28 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003CF2A <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003CF2E <internal_commands.ab3@2024> INCLUDE "internal_commands.ab3"
0003CF30 <internal_commands.ab3@2025> INCLUDE "internal_commands.ab3"
0003CF32 <internal_commands.ab3@2026> INCLUDE "internal_commands.ab3"
0003CF36 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003CF38 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003CF3C <internal_commands.ab3@2032> INCLUDE "internal_commands.ab3"
0003CF3E <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003CF42 <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003CF43 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003CF44 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003CF46 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003CF4A <internal_commands.ab3@2039> INCLUDE "internal_commands.ab3"
0003CF4C <internal_commands.ab3@2040> INCLUDE "internal_commands.ab3"
0003CF4E <internal_commands.ab3@2041> INCLUDE "internal_commands.ab3"
0003CF52 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003CF54 <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003CF58 <internal_commands.ab3@2047> INCLUDE "internal_commands.ab3"
0003CF5A <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003CF5E <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003CF5F <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003CF60 <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003CF62 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003CF66 <internal_commands.ab3@2054> INCLUDE "internal_commands.ab3"
0003CF68 <internal_commands.ab3@2055> INCLUDE "internal_commands.ab3"
0003CF6A <internal_commands.ab3@2056> INCLUDE "internal_commands.ab3"
0003CF6E <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003CF70 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003CF74 <internal_commands.ab3@2062> INCLUDE "internal_commands.ab3"
0003CF76 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003CF7A <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003CF7B <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003CF7C <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003CF7E <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003CF82 <internal_commands.ab3@2069> INCLUDE "internal_commands.ab3"
0003CF84 <internal_commands.ab3@2070> INCLUDE "internal_commands.ab3"
0003CF86 <internal_commands.ab3@2071> INCLUDE "internal_commands.ab3"
0003CF8A <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003CF8C <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003CF90 <internal_commands.ab3@2077> INCLUDE "internal_commands.ab3"
0003CF92 <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003CF95 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003CF96 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003CF98 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003CF9C <internal_commands.ab3@2084> INCLUDE "internal_commands.ab3"
0003CF9E <internal_commands.ab3@2085> INCLUDE "internal_commands.ab3"
0003CFA0 <internal_commands.ab3@2086> INCLUDE "internal_commands.ab3"
0003CFA4 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003CFA6 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003CFAA <internal_commands.ab3@2092> INCLUDE "internal_commands.ab3"
0003CFAC <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003CFAF <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003CFB0 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003CFB2 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003CFB6 <internal_commands.ab3@2099> INCLUDE "internal_commands.ab3"
0003CFB8 <internal_commands.ab3@2100> INCLUDE "internal_commands.ab3"
0003CFBA <internal_commands.ab3@2101> INCLUDE "internal_commands.ab3"
0003CFBE <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003CFC0 <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003CFC4 <internal_commands.ab3@2107> INCLUDE "internal_commands.ab3"
0003CFC6 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003CFCB <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003CFCC <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003CFCE <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003CFD2 <internal_commands.ab3@2114> INCLUDE "internal_commands.ab3"
0003CFD4 <internal_commands.ab3@2115> INCLUDE "internal_commands.ab3"
0003CFD6 <internal_commands.ab3@2116> INCLUDE "internal_commands.ab3"
0003CFDA <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003CFDC <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003CFE0 <internal_commands.ab3@2122> INCLUDE "internal_commands.ab3"
0003CFE2 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003CFE6 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003CFE7 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003CFE8 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003CFEA <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003CFEE <internal_commands.ab3@2129> INCLUDE "internal_commands.ab3"
0003CFF0 <internal_commands.ab3@2130> INCLUDE "internal_commands.ab3"
0003CFF2 <internal_commands.ab3@2131> INCLUDE "internal_commands.ab3"
0003CFF6 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003CFF8 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003CFFC <internal_commands.ab3@2137> INCLUDE "internal_commands.ab3"
0003CFFE <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003D003 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003D004 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003D006 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003D00A <internal_commands.ab3@2144> INCLUDE "internal_commands.ab3"
0003D00C <internal_commands.ab3@2145> INCLUDE "internal_commands.ab3"
0003D00E <internal_commands.ab3@2146> INCLUDE "internal_commands.ab3"
0003D012 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003D014 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003D018 <internal_commands.ab3@2152> INCLUDE "internal_commands.ab3"
0003D01A <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003D01F <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003D020 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003D022 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003D026 <internal_commands.ab3@2159> INCLUDE "internal_commands.ab3"
0003D028 <internal_commands.ab3@2160> INCLUDE "internal_commands.ab3"
0003D02A <internal_commands.ab3@2161> INCLUDE "internal_commands.ab3"
0003D02E <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003D030 <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003D034 <internal_commands.ab3@2167> INCLUDE "internal_commands.ab3"
0003D036 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003D03B <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003D03C <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003D03E <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003D042 <internal_commands.ab3@2174> INCLUDE "internal_commands.ab3"
0003D044 <internal_commands.ab3@2175> INCLUDE "internal_commands.ab3"
0003D046 <internal_commands.ab3@2176> INCLUDE "internal_commands.ab3"
0003D04A <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003D050 <internal_commands.ab3@2182> INCLUDE "internal_commands.ab3"
0003D052 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003D057 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003D058 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003D05A <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003D05E <internal_commands.ab3@2189> INCLUDE "internal_commands.ab3"
0003D060 <internal_commands.ab3@2190> INCLUDE "internal_commands.ab3"
0003D062 <internal_commands.ab3@2191> INCLUDE "internal_commands.ab3"
0003D066 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003D068 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003D06C <internal_commands.ab3@2197> INCLUDE "internal_commands.ab3"
0003D06E <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003D073 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003D074 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003D076 <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003D07A <internal_commands.ab3@2204> INCLUDE "internal_commands.ab3"
0003D07C <internal_commands.ab3@2205> INCLUDE "internal_commands.ab3"
0003D07E <internal_commands.ab3@2206> INCLUDE "internal_commands.ab3"
0003D082 <internal_commands.ab3@2207> INCLUDE "internal_commands.ab3"
0003D084 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003D088 <internal_commands.ab3@2212> INCLUDE "internal_commands.ab3"
0003D08A <internal_commands.ab3@2213> INCLUDE "internal_commands.ab3"
0003D08E <internal_commands.ab3@2214> INCLUDE "internal_commands.ab3"
0003D08F <internal_commands.ab3@2215> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@2216> INCLUDE "internal_commands.ab3"
0003D092 <internal_commands.ab3@2218> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@2219> INCLUDE "internal_commands.ab3"
0003D098 <internal_commands.ab3@2220> INCLUDE "internal_commands.ab3"
0003D09A <internal_commands.ab3@2221> INCLUDE "internal_commands.ab3"
0003D09E <internal_commands.ab3@2222> INCLUDE "internal_commands.ab3"
0003D0A0 <internal_commands.ab3@2223> INCLUDE "internal_commands.ab3"
0003D0A4 <internal_commands.ab3@2227> INCLUDE "internal_commands.ab3"
0003D0A6 <internal_commands.ab3@2228> INCLUDE "internal_commands.ab3"
0003D0AB <internal_commands.ab3@2229> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003D0AE <internal_commands.ab3@2233> INCLUDE "internal_commands.ab3"
0003D0B2 <internal_commands.ab3@2234> INCLUDE "internal_commands.ab3"
0003D0B4 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003D0B6 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003D0BA <internal_commands.ab3@2237> INCLUDE "internal_commands.ab3"
0003D0BC <internal_commands.ab3@2238> INCLUDE "internal_commands.ab3"
0003D0C0 <internal_commands.ab3@2242> INCLUDE "internal_commands.ab3"
0003D0C2 <internal_commands.ab3@2243> INCLUDE "internal_commands.ab3"
0003D0C8 <internal_commands.ab3@2244> INCLUDE "internal_commands.ab3"
0003D0C9 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003D0CA <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003D0CC <internal_commands.ab3@2248> INCLUDE "internal_commands.ab3"
0003D0D0 <internal_commands.ab3@2249> INCLUDE "internal_commands.ab3"
0003D0D2 <internal_commands.ab3@2250> INCLUDE "internal_commands.ab3"
0003D0D4 <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003D0D8 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003D0DA <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003D0DE <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003D0E0 <internal_commands.ab3@2258> INCLUDE "internal_commands.ab3"
0003D0E4 <internal_commands.ab3@2259> INCLUDE "internal_commands.ab3"
0003D0E5 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003D0E6 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003D0E8 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003D0EC <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003D0EE <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003D0F0 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003D0F4 <internal_commands.ab3@2267> INCLUDE "internal_commands.ab3"
0003D0F6 <internal_commands.ab3@2268> INCLUDE "internal_commands.ab3"
0003D0FA <internal_commands.ab3@2272> INCLUDE "internal_commands.ab3"
0003D0FC <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003D101 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003D102 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003D104 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003D108 <internal_commands.ab3@2279> INCLUDE "internal_commands.ab3"
0003D10A <internal_commands.ab3@2280> INCLUDE "internal_commands.ab3"
0003D10C <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003D110 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003D112 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003D116 <internal_commands.ab3@2288> INCLUDE "internal_commands.ab3"
0003D118 <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003D11F <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003D120 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003D122 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003D124 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003D126 <internal_commands.ab3@2315> INCLUDE "internal_commands.ab3"
0003D128 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003D12A <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003D12C <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003D12E <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003D130 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003D132 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003D136 <internal_commands.ab3@2333> INCLUDE "internal_commands.ab3"
0003D138 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003D13A <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003D13C <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003D13E <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003D142 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003D148 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003D14C <internal_commands.ab3@2342> INCLUDE "internal_commands.ab3"
0003D14E <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003D150 <internal_commands.ab3@2344> INCLUDE "internal_commands.ab3"
0003D152 <internal_commands.ab3@2345> INCLUDE "internal_commands.ab3"
0003D154 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003D156 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003D158 <internal_commands.ab3@2354> INCLUDE "internal_commands.ab3"
0003D15C <internal_commands.ab3@2355> INCLUDE "internal_commands.ab3"
0003D160 <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003D164 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003D168 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003D16C <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003D16E <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003D170 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003D174 <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003D178 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003D17C <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003D180 <internal_commands.ab3@2367> INCLUDE "internal_commands.ab3"
0003D182 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003D184 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003D188 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003D18C <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003D190 <internal_commands.ab3@2374> INCLUDE "internal_commands.ab3"
0003D194 <internal_commands.ab3@2375> INCLUDE "internal_commands.ab3"
0003D196 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003D198 <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003D19A <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003D19E <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003D1A0 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003D1A4 <internal_commands.ab3@2384> INCLUDE "internal_commands.ab3"
0003D1A6 <internal_commands.ab3@2388> INCLUDE "internal_commands.ab3"
0003D1AA <internal_commands.ab3@2389> INCLUDE "internal_commands.ab3"
0003D1AC <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003D1B0 <internal_commands.ab3@2391> INCLUDE "internal_commands.ab3"
0003D1B4 <internal_commands.ab3@2392> INCLUDE "internal_commands.ab3"
0003D1B8 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003D1BC <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003D1C0 <internal_commands.ab3@2398> INCLUDE "internal_commands.ab3"
0003D1C4 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003D1C8 <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003D1CC <internal_commands.ab3@2402> INCLUDE "internal_commands.ab3"
0003D1D0 <internal_commands.ab3@2403> INCLUDE "internal_commands.ab3"
0003D1D4 <internal_commands.ab3@2404> INCLUDE "internal_commands.ab3"
0003D1D8 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003D1DC <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003D1E0 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003D1E4 <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003D1E8 <internal_commands.ab3@2412> INCLUDE "internal_commands.ab3"
0003D1EC <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003D1F0 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003D1F4 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003D1F8 <internal_commands.ab3@2417> INCLUDE "internal_commands.ab3"
0003D1FC <internal_commands.ab3@2418> INCLUDE "internal_commands.ab3"
0003D200 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003D204 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003D208 <internal_commands.ab3@2421> INCLUDE "internal_commands.ab3"
0003D20C <internal_commands.ab3@2422> INCLUDE "internal_commands.ab3"
0003D210 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003D214 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003D216 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003D21A <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003D21E <internal_commands.ab3@2430> INCLUDE "internal_commands.ab3"
0003D222 <internal_commands.ab3@2431> INCLUDE "internal_commands.ab3"
0003D226 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003D22A <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003D22E <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003D232 <internal_commands.ab3@2437> INCLUDE "internal_commands.ab3"
0003D236 <internal_commands.ab3@2438> INCLUDE "internal_commands.ab3"
0003D23A <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003D23C <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003D23E <internal_commands.ab3@2443> INCLUDE "internal_commands.ab3"
0003D240 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003D242 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003D244 <internal_commands.ab3@2446> INCLUDE "internal_commands.ab3"
0003D248 <internal_commands.ab3@2447> INCLUDE "internal_commands.ab3"
0003D24C <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003D250 <internal_commands.ab3@2451> INCLUDE "internal_commands.ab3"
0003D254 <internal_commands.ab3@2452> INCLUDE "internal_commands.ab3"
0003D256 <internal_commands.ab3@2453> INCLUDE "internal_commands.ab3"
0003D25A <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003D25E <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003D262 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003D266 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003D268 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003D26A <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003D26E <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003D272 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003D276 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003D27A <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003D27E <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003D282 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003D284 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003D286 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003D28A <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003D28E <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003D292 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003D294 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003D298 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003D29C <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003D29E <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003D2A2 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003D2A6 <internal_commands.ab3@2493> INCLUDE "internal_commands.ab3"
0003D2A8 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003D2AC <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003D2B0 <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003D2B4 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003D2B8 <internal_commands.ab3@2502> INCLUDE "internal_commands.ab3"
0003D2BC <internal_commands.ab3@2503> INCLUDE "internal_commands.ab3"
0003D2BE <internal_commands.ab3@2507> INCLUDE "internal_commands.ab3"
0003D2C2 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003D2C4 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003D2C6 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003D2C8 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003D2CC <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003D2D0 <internal_commands.ab3@2515> INCLUDE "internal_commands.ab3"
0003D2D4 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003D2D8 <internal_commands.ab3@2517> INCLUDE "internal_commands.ab3"
0003D2DC <internal_commands.ab3@2518> INCLUDE "internal_commands.ab3"
0003D2E0 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003D2E4 <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003D2E8 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003D2EC <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003D2F0 <internal_commands.ab3@2532> INCLUDE "internal_commands.ab3"
0003D2F4 <internal_commands.ab3@2533> INCLUDE "internal_commands.ab3"
0003D2F8 <internal_commands.ab3@2537> INCLUDE "internal_commands.ab3"
0003D2FA <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003D2FE <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003D302 <internal_commands.ab3@2542> INCLUDE "internal_commands.ab3"
0003D304 <internal_commands.ab3@2543> INCLUDE "internal_commands.ab3"
0003D306 <internal_commands.ab3@2544> INCLUDE "internal_commands.ab3"
0003D308 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003D30C <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003D310 <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003D312 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003D316 <internal_commands.ab3@2549> INCLUDE "internal_commands.ab3"
0003D318 <internal_commands.ab3@2550> INCLUDE "internal_commands.ab3"
0003D31A <internal_commands.ab3@2551> INCLUDE "internal_commands.ab3"
0003D31C <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003D320 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003D324 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003D326 <internal_commands.ab3@2557> INCLUDE "internal_commands.ab3"
0003D328 <internal_commands.ab3@2558> INCLUDE "internal_commands.ab3"
0003D32C <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003D330 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003D334 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003D338 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003D33A <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003D33E <internal_commands.ab3@2564> INCLUDE "internal_commands.ab3"
0003D342 <internal_commands.ab3@2565> INCLUDE "internal_commands.ab3"
0003D346 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003D348 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003D34A <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003D34C <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003D34E <internal_commands.ab3@2572> INCLUDE "internal_commands.ab3"
0003D350 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003D352 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003D356 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003D35A <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003D35C <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003D360 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003D362 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003D366 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003D36A <internal_commands.ab3@2584> INCLUDE "internal_commands.ab3"
0003D36C <internal_commands.ab3@2585> INCLUDE "internal_commands.ab3"
0003D36E <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003D370 <internal_commands.ab3@2592> INCLUDE "internal_commands.ab3"
0003D374 <internal_commands.ab3@2593> INCLUDE "internal_commands.ab3"
0003D376 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003D37A <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003D37E <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003D382 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003D384 <internal_commands.ab3@2600> INCLUDE "internal_commands.ab3"
0003D388 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003D38C <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003D38E <internal_commands.ab3@2606> INCLUDE "internal_commands.ab3"
0003D392 <internal_commands.ab3@2607> INCLUDE "internal_commands.ab3"
0003D396 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003D39A <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003D39E <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003D3A2 <internal_commands.ab3@2613> INCLUDE "internal_commands.ab3"
0003D3A6 <internal_commands.ab3@2614> INCLUDE "internal_commands.ab3"
0003D3AA <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003D3AE <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003D3B0 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003D3B5 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003D3B6 <internal_commands.ab3@2627> INCLUDE "internal_commands.ab3"
0003D3BA <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003D3BC <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003D3C3 <internal_commands.ab3@2633> INCLUDE "internal_commands.ab3"
0003D3C4 <internal_commands.ab3@2634> INCLUDE "internal_commands.ab3"
0003D3C8 <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003D3CA <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003D3D1 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003D3D2 <internal_commands.ab3@2641> INCLUDE "internal_commands.ab3"
0003D3D6 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003D3D8 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003D3E0 <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003D3E1 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003D3E2 <internal_commands.ab3@2655> INCLUDE "internal_commands.ab3"
0003D3E6 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003D3E8 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003D3ED <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003D401 <internal_commands.ab3@2661> INCLUDE "internal_commands.ab3"
0003D402 <internal_commands.ab3@2662> INCLUDE "internal_commands.ab3"
0003D406 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003D408 <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003D40C <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D40D <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D40E <internal_commands.ab3@2669> INCLUDE "internal_commands.ab3"
0003D412 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D414 <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D417 <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D418 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D41C <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D41E <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D425 <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D426 <internal_commands.ab3@2682> INCLUDE "internal_commands.ab3"
0003D42A <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D42C <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D432 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D43F <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D440 <internal_commands.ab3@2690> INCLUDE "internal_commands.ab3"
0003D444 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D446 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D44D <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D465 <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D466 <internal_commands.ab3@2697> INCLUDE "internal_commands.ab3"
0003D46A <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D46C <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D470 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D493 <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D494 <internal_commands.ab3@2704> INCLUDE "internal_commands.ab3"
0003D498 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D49A <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D4A1 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D4AC <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D4B0 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D4B2 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D4B8 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D4B9 <internal_commands.ab3@2717> INCLUDE "internal_commands.ab3"
0003D4BA <internal_commands.ab3@2718> INCLUDE "internal_commands.ab3"
0003D4BE <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D4C0 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D4C5 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D4C6 <internal_commands.ab3@2724> INCLUDE "internal_commands.ab3"
0003D4CA <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D4CC <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D4D3 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D4E5 <internal_commands.ab3@2731> INCLUDE "internal_commands.ab3"
0003D4E6 <internal_commands.ab3@2732> INCLUDE "internal_commands.ab3"
0003D4EA <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D4EC <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D4F6 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D4F7 <internal_commands.ab3@2738> INCLUDE "internal_commands.ab3"
0003D4F8 <internal_commands.ab3@2739> INCLUDE "internal_commands.ab3"
0003D4FC <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D4FE <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D506 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D513 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D514 <internal_commands.ab3@2746> INCLUDE "internal_commands.ab3"
0003D518 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D51A <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D51D <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D558 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D55C <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D55E <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D562 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D563 <internal_commands.ab3@2759> INCLUDE "internal_commands.ab3"
0003D564 <internal_commands.ab3@2760> INCLUDE "internal_commands.ab3"
0003D568 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D56A <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D572 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D573 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D574 <internal_commands.ab3@2767> INCLUDE "internal_commands.ab3"
0003D578 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D57A <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D582 <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D592 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D596 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D598 <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D5A1 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D5A9 <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D5AA <internal_commands.ab3@2781> INCLUDE "internal_commands.ab3"
0003D5AE <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D5B0 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D5B8 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D5C1 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D5C2 <internal_commands.ab3@2788> INCLUDE "internal_commands.ab3"
0003D5C6 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D5C8 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D5D0 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D5D1 <internal_commands.ab3@2794> INCLUDE "internal_commands.ab3"
0003D5D2 <internal_commands.ab3@2795> INCLUDE "internal_commands.ab3"
0003D5D6 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D5D8 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D5DE <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D5DF <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D5E0 <internal_commands.ab3@2802> INCLUDE "internal_commands.ab3"
0003D5E4 <internal_commands.ab3@2805> INCLUDE "internal_commands.ab3"
0003D5E6 <internal_commands.ab3@2806> INCLUDE "internal_commands.ab3"
0003D5ED <internal_commands.ab3@2807> INCLUDE "internal_commands.ab3"
0003D5EE <internal_commands.ab3@2808> INCLUDE "internal_commands.ab3"
0003D5F2 <internal_commands.ab3@2812> INCLUDE "internal_commands.ab3"
0003D5F4 <internal_commands.ab3@2813> INCLUDE "internal_commands.ab3"
0003D5FB <internal_commands.ab3@2814> INCLUDE "internal_commands.ab3"
0003D5FC <internal_commands.ab3@2815> INCLUDE "internal_commands.ab3"
0003D600 <internal_commands.ab3@2819> INCLUDE "internal_commands.ab3"
0003D602 <internal_commands.ab3@2820> INCLUDE "internal_commands.ab3"
0003D609 <internal_commands.ab3@2821> INCLUDE "internal_commands.ab3"
0003D60A <internal_commands.ab3@2822> INCLUDE "internal_commands.ab3"
0003D60E <internal_commands.ab3@2826> INCLUDE "internal_commands.ab3"
0003D610 <internal_commands.ab3@2827> INCLUDE "internal_commands.ab3"
0003D617 <internal_commands.ab3@2828> INCLUDE "internal_commands.ab3"
0003D618 <internal_commands.ab3@2829> INCLUDE "internal_commands.ab3"
0003D61C <internal_commands.ab3@2833> INCLUDE "internal_commands.ab3"
0003D61E <internal_commands.ab3@2834> INCLUDE "internal_commands.ab3"
0003D623 <internal_commands.ab3@2835> INCLUDE "internal_commands.ab3"
0003D639 <internal_commands.ab3@2836> INCLUDE "internal_commands.ab3"
0003D63A <internal_commands.ab3@2837> INCLUDE "internal_commands.ab3"
0003D63E <internal_commands.ab3@2840> INCLUDE "internal_commands.ab3"
0003D640 <internal_commands.ab3@2841> INCLUDE "internal_commands.ab3"
0003D64A <internal_commands.ab3@2842> INCLUDE "internal_commands.ab3"
0003D64B <internal_commands.ab3@2843> INCLUDE "internal_commands.ab3"
0003D64C <internal_commands.ab3@2844> INCLUDE "internal_commands.ab3"
0003D650 <internal_commands.ab3@2847> INCLUDE "internal_commands.ab3"
0003D652 <internal_commands.ab3@2848> INCLUDE "internal_commands.ab3"
0003D65D <internal_commands.ab3@2849> INCLUDE "internal_commands.ab3"
0003D65E <internal_commands.ab3@2850> INCLUDE "internal_commands.ab3"
0003D662 <internal_commands.ab3@2854> INCLUDE "internal_commands.ab3"
0003D664 <internal_commands.ab3@2855> INCLUDE "internal_commands.ab3"
0003D670 <internal_commands.ab3@2856> INCLUDE "internal_commands.ab3"
0003D69D <internal_commands.ab3@2857> INCLUDE "internal_commands.ab3"
0003D69E <internal_commands.ab3@2858> INCLUDE "internal_commands.ab3"
0003D6A2 <internal_commands.ab3@2861> INCLUDE "internal_commands.ab3"
0003D6A4 <internal_commands.ab3@2862> INCLUDE "internal_commands.ab3"
0003D6AC <internal_commands.ab3@2863> INCLUDE "internal_commands.ab3"
0003D6E3 <internal_commands.ab3@2864> INCLUDE "internal_commands.ab3"
0003D6E4 <internal_commands.ab3@2865> INCLUDE "internal_commands.ab3"
0003D6E8 <internal_commands.ab3@2868> INCLUDE "internal_commands.ab3"
0003D6EA <internal_commands.ab3@2869> INCLUDE "internal_commands.ab3"
0003D6F2 <internal_commands.ab3@2870> INCLUDE "internal_commands.ab3"
0003D711 <internal_commands.ab3@2871> INCLUDE "internal_commands.ab3"
0003D712 <internal_commands.ab3@2872> INCLUDE "internal_commands.ab3"
0003D716 <internal_commands.ab3@2875> INCLUDE "internal_commands.ab3"
0003D718 <internal_commands.ab3@2876> INCLUDE "internal_commands.ab3"
0003D71F <internal_commands.ab3@2877> INCLUDE "internal_commands.ab3"
0003D755 <internal_commands.ab3@2878> INCLUDE "internal_commands.ab3"
0003D756 <internal_commands.ab3@2879> INCLUDE "internal_commands.ab3"
0003D75A <internal_commands.ab3@2882> INCLUDE "internal_commands.ab3"
0003D75C <internal_commands.ab3@2883> INCLUDE "internal_commands.ab3"
0003D765 <internal_commands.ab3@2884> INCLUDE "internal_commands.ab3"
0003D79A <internal_commands.ab3@2885> INCLUDE "internal_commands.ab3"
0003D79E <internal_commands.ab3@2889> INCLUDE "internal_commands.ab3"
0003D7A0 <internal_commands.ab3@2890> INCLUDE "internal_commands.ab3"
0003D7B0 <internal_commands.ab3@2891> INCLUDE "internal_commands.ab3"
0003D7E7 <internal_commands.ab3@2892> INCLUDE "internal_commands.ab3"
0003D7E8 <internal_commands.ab3@2893> INCLUDE "internal_commands.ab3"
0003D7E8 <AmiBlitz3.ab3@30780> INCLUDE "internal_commands.ab3"
0003D7EC <AmiBlitz3.ab3@30785>            Dc.l cif_lt                                     ;ciflt
0003D7F0 <AmiBlitz3.ab3@30786>            Dc.l cif_eq                                     ;cifeq
0003D7F4 <AmiBlitz3.ab3@30787>            Dc.l cif_gt                                     ;cifgt
0003D7F8 <AmiBlitz3.ab3@30788>            Ds.l 1                                          ;0
0003D7FC <AmiBlitz3.ab3@30789>            Dc.l cif_le                                     ;cifle
0003D800 <AmiBlitz3.ab3@30790>            Dc.l cif_ne                                     ;cifne
0003D804 <AmiBlitz3.ab3@30791>            Dc.l cif_le                                     ;cifge
0003D808 <AmiBlitz3.ab3@30792>            Ds.l 1                                          ;0
0003D80C <AmiBlitz3.ab3@30793>            Dc.l cif_ge                                     ;cifge
0003D810 <AmiBlitz3.ab3@30794>            Dc.l cif_ne                                     ;cifne
0003D814 <AmiBlitz3.ab3@30795>            Dc.l cif_ge                                     ;cifge
0003D818 <AmiBlitz3.ab3@30796>            Ds.l 1                                          ;0
0003D81C <AmiBlitz3.ab3@30799>            Dc.l do_newtype                                 ;donewtype
0003D820 <AmiBlitz3.ab3@30800>            Dc.l do_end                                     ;doend
0003D824 <AmiBlitz3.ab3@30801>            Dc.l do_let                                     ;dolet
0003D828 <AmiBlitz3.ab3@30802>            Dc.l do_dim                                     ;dodim
0003D82C <AmiBlitz3.ab3@30803>            Dc.l do_goto                                    ;dogoto
0003D830 <AmiBlitz3.ab3@30804>            Dc.l do_gosub                                   ;dogosub
0003D834 <AmiBlitz3.ab3@30805>            Dc.l do_return                                  ;doreturn
0003D838 <AmiBlitz3.ab3@30806>            Dc.l do_statement                               ;dostate
0003D83C <AmiBlitz3.ab3@30807>            Dc.l do_function                                ;dofunc
0003D840 <AmiBlitz3.ab3@30808>            Dc.l do_mousewait                               ;domwait
0003D844 <AmiBlitz3.ab3@30809>            Dc.l do_if                                      ;doif
0003D848 <AmiBlitz3.ab3@30810>            Dc.l do_while                                   ;dowhile
0003D84C <AmiBlitz3.ab3@30811>            Dc.l do_Macro                                   ;domacro
0003D850 <AmiBlitz3.ab3@30812>            Dc.l do_select                                  ;doselect
0003D854 <AmiBlitz3.ab3@30813>            Dc.l do_case                                    ;docase
0003D858 <AmiBlitz3.ab3@30814>            Dc.l do_default                                 ;dodefault
0003D85C <AmiBlitz3.ab3@30815>            Dc.l do_AsmExit                                 ;doasmexit
0003D860 <AmiBlitz3.ab3@30816>            Dc.l do_xinclude                                ;doxinclude
0003D864 <AmiBlitz3.ab3@30817>            Dc.l do_INCLUDE                                 ;doinclude
0003D868 <AmiBlitz3.ab3@30818>            Dc.l do_syntax                                  ;syntaxerr
0003D86C <AmiBlitz3.ab3@30819>            Dc.l do_shared                                  ;doshared
0003D870 <AmiBlitz3.ab3@30820>            Dc.l do_for                                     ;dofor
0003D874 <AmiBlitz3.ab3@30821>            Dc.l do_next                                    ;donext
0003D878 <AmiBlitz3.ab3@30822>            Dc.l syntaxerr                                  ; To
0003D87C <AmiBlitz3.ab3@30823>            Dc.l syntaxerr                                  ; Step
0003D880 <AmiBlitz3.ab3@30824>            Dc.l do_data                                    ;dodata
0003D884 <AmiBlitz3.ab3@30825>            Dc.l do_read                                    ;doread
0003D888 <AmiBlitz3.ab3@30829>            Dc.l syntaxerr                                  ; CNIF
0003D88C <AmiBlitz3.ab3@30830>            Dc.l syntaxerr                                  ; CSIF
0003D890 <AmiBlitz3.ab3@30831>            Dc.l syntaxerr                                  ; CELSE
0003D894 <AmiBlitz3.ab3@30832>            Dc.l syntaxerr                                  ; CEND
0003D898 <AmiBlitz3.ab3@30833>            Dc.l do_cerr                                    ;docerr
0003D89C <AmiBlitz3.ab3@30834>            Dc.l do_then                                    ;dothen
0003D8A0 <AmiBlitz3.ab3@30835>            Dc.l do_else                                    ;doelse
0003D8A4 <AmiBlitz3.ab3@30836>            Dc.l do_even4                                   ;doeven4
0003D8A8 <AmiBlitz3.ab3@30837>            Dc.l do_even8                                   ;doeven8
0003D8AC <AmiBlitz3.ab3@30839>            Dc.l do_dc                                      ;dodc
0003D8B0 <AmiBlitz3.ab3@30840>            Dc.l do_ds                                      ;dods
0003D8B4 <AmiBlitz3.ab3@30841>            Dc.l do_even                                    ;doeven
0003D8B8 <AmiBlitz3.ab3@30842>            Dc.l do_dcb                                     ;dodcb
0003D8BC <AmiBlitz3.ab3@30843>            Dc.l do_setreg                                  ;dosetreg
0003D8C0 <AmiBlitz3.ab3@30844>            Dc.l do_IncBin                                  ;doincbin
0003D8C4 <AmiBlitz3.ab3@30845>            Dc.l do_free                                    ;dofree
0003D8C8 <AmiBlitz3.ab3@30846>            Dc.l do_use                                     ;douse
0003D8CC <AmiBlitz3.ab3@30847>            Dc.l do_Stop                                    ;dostop
0003D8D0 <AmiBlitz3.ab3@30848>            Dc.l do_Cont                                    ;docont
0003D8D4 <AmiBlitz3.ab3@30849>            Dc.l syntaxerr                                  ;syntaxeer
0003D8D8 <AmiBlitz3.ab3@30850>            Dc.l do_SetInt                                  ;dosetint
0003D8DC <AmiBlitz3.ab3@30851>            Dc.l do_ClrInt                                  ;doclrint
0003D8E0 <AmiBlitz3.ab3@30852>            Dc.l do_MaxLen                                  ;domaxlen
0003D8E4 <AmiBlitz3.ab3@30853>            Dc.l do_DEFTYPE                                 ;dodeftype
0003D8E8 <AmiBlitz3.ab3@30854>            Dc.l do_BLITZ                                   ;doblitz
0003D8EC <AmiBlitz3.ab3@30855>            Dc.l do_AMIGA                                   ;doamiga
0003D8F0 <AmiBlitz3.ab3@30856>            Dc.l do_QAMIGA                                  ;doqamiga
0003D8F4 <AmiBlitz3.ab3@30857>            Dc.l do_VWait                                   ;dovwait
0003D8F8 <AmiBlitz3.ab3@30858>            Dc.l do_LibJsr                                  ;dolibjsr
0003D8FC <AmiBlitz3.ab3@30859>            Dc.l do_TokeJsr                                 ;dotokejsr
0003D900 <AmiBlitz3.ab3@30860>            Dc.l do_BLibJsr                                 ;doblibjsr
0003D904 <AmiBlitz3.ab3@30861>            Dc.l _extb                                      ;syntaxerr
0003D908 <AmiBlitz3.ab3@30865>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003D90C <AmiBlitz3.ab3@30866>            Dc.l do_SetErr                                  ;doseterr
0003D910 <AmiBlitz3.ab3@30867>            Dc.l do_ClrErr                                  ;doclrerr
0003D914 <AmiBlitz3.ab3@30868>            Dc.l syntaxerr                                  ;syntaxerr
0003D918 <AmiBlitz3.ab3@30869>            Dc.l do_ErrFail                                 ;doerrfail
0003D91C <AmiBlitz3.ab3@30870>            Dc.l syntaxerr
0003D920 <AmiBlitz3.ab3@30871>            Dc.l syntaxerr                                  ;mod
0003D924 <AmiBlitz3.ab3@30872>            Dc.l syntaxerr                                  ;Pi
0003D928 <AmiBlitz3.ab3@30873>            Dc.l do_Repeat                                  ;dorepeat
0003D92C <AmiBlitz3.ab3@30874>            Dc.l do_Until                                   ;dountil
0003D930 <AmiBlitz3.ab3@30875>            Dc.l do_PutReg                                  ;doputreg
0003D934 <AmiBlitz3.ab3@30876>            Dc.l do_Pop                                     ;dopop
0003D938 <AmiBlitz3.ab3@30877>            Dc.l do_INCDIR                                  ;doincdir
0003D93C <AmiBlitz3.ab3@30878>            Dc.l mydo_Endif2                                ;mydoendif2
0003D940 <AmiBlitz3.ab3@30879>            Dc.l do_Wend                                    ;dowend
0003D944 <AmiBlitz3.ab3@30880>            Dc.l do_SysJsr                                  ;dosysjsr
0003D948 <AmiBlitz3.ab3@30881>            Dc.l do_WBStartup                               ;dowbstartup
0003D94C <AmiBlitz3.ab3@30882>            Dc.l syntaxerr
0003D950 <AmiBlitz3.ab3@30883>            Dc.l do_Ongo                                    ;doongo
0003D954 <AmiBlitz3.ab3@30884>            Dc.l syntaxerr
0003D958 <AmiBlitz3.ab3@30885>            Dc.l do_Forever                                 ;doforever
0003D95C <AmiBlitz3.ab3@30886>            Dc.l do_Restore                                 ;dorestore
0003D960 <AmiBlitz3.ab3@30887>            Dc.l do_Exchange                                ;doexchange
0003D964 <AmiBlitz3.ab3@30888>            Dc.l do_USEPATH                                 ;dousepath
0003D968 <AmiBlitz3.ab3@30889>            Dc.l do_CloseEd                                 ;doclosed
0003D96C <AmiBlitz3.ab3@30890>            Dc.l do_NoCli                                   ;donocli
0003D970 <AmiBlitz3.ab3@30891>            Dc.l syntaxerr                                  ;syntaxerr
0003D974 <AmiBlitz3.ab3@30892>            Dc.l syntaxerr                                  ;syntaxerr
0003D978 <AmiBlitz3.ab3@30893>            Dc.l syntaxerr                                  ;syntaxerr
0003D97C <AmiBlitz3.ab3@30894>            Dc.l syntaxerr                                  ;syntaxerr
0003D980 <AmiBlitz3.ab3@30895>            Dc.l syntaxerr                                  ;syntaxerr
0003D984 <AmiBlitz3.ab3@30896>            Dc.l do_runerrson                               ;dorunerrson
0003D988 <AmiBlitz3.ab3@30897>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003D98C <AmiBlitz3.ab3@30898>            Dc.l do_uselastpath
0003D990 <AmiBlitz3.ab3@30899>            Dc.l do_regload
0003D994 <AmiBlitz3.ab3@30900>            Dc.l do_regsave
0003D998 <AmiBlitz3.ab3@30901>            Dc.l do_Object
0003D99C <AmiBlitz3.ab3@30902>            Dc.l do_usepath2
0003D9A0 <AmiBlitz3.ab3@30903>            Dc.l do_LastRunErrsMode
0003D9A4 <AmiBlitz3.ab3@30926> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003D9A8 <AmiBlitz3.ab3@30927>            Dc.l menu_run
0003D9AC <AmiBlitz3.ab3@30928>            Dc.l menu_createexecutable
0003D9B0 <AmiBlitz3.ab3@30929>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003D9B4 <AmiBlitz3.ab3@30930>            Dc.l menu_createresidentfile
0003D9B8 <AmiBlitz3.ab3@30931> 
0003D9BC <AmiBlitz3.ab3@30932> 
0003D9C0 <AmiBlitz3.ab3@30933>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003D9C4 <AmiBlitz3.ab3@30934>            Dc.l menu_reloadlibs
0003D9C8 <AmiBlitz3.ab3@30935>            Dc.l menu_loaddebugmodule
0003D9CC <AmiBlitz3.ab3@30936>            Dc.l menu_dummyfunc
0003D9D0 <AmiBlitz3.ab3@30937>            Dc.l menu_newcreate
0003D9D4 <AmiBlitz3.ab3@30938>            Dc.l menu_dummyfunc
0003D9D8 <AmiBlitz3.ab3@30939>            Dc.l menu_toggledebug
0003D9DC <AmiBlitz3.ab3@30940> 
0003D9E0 <AmiBlitz3.ab3@30941>            Dc.l menu_dummyfunc
0003DA0A <AmiBlitz3.ab3@30946>   !basic
0003DA6C <AmiBlitz3.ab3@30947>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003DA8A <AmiBlitz3.ab3@30948>   !asm
0003DA8C <AmiBlitz3.ab3@30949> RTS
0003DA8D <AmiBlitz3.ab3@30955> set_autorun:               Dc.b $00
0003DA92 <AmiBlitz3.ab3@30956> autorun:                   Dc.b $80,$01,$01,$00,$01
0003DA93 <AmiBlitz3.ab3@30958> set_interruptcheck:        Dc.b $00
0003DA98 <AmiBlitz3.ab3@30959> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003DA99 <AmiBlitz3.ab3@30961> set_assemblercheck:        Ds.b 1
0003DA9E <AmiBlitz3.ab3@30962> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003DA9F <AmiBlitz3.ab3@30964> set_overflowcheck:         Ds.b 1
0003DAA4 <AmiBlitz3.ab3@30965> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003DAAA <AmiBlitz3.ab3@30967> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003DAB0 <AmiBlitz3.ab3@30968> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003DAB6 <AmiBlitz3.ab3@30969> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003DAB8 <AmiBlitz3.ab3@30970> Even4
0003DAC4 <AmiBlitz3.ab3@30973> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003DACC <AmiBlitz3.ab3@30974>                            Dc.l $00000000,$00000000
0003DAD4 <AmiBlitz3.ab3@30975> tstsize1:                  Dc.l $00000100,$000003E9
0003DAD8 <AmiBlitz3.ab3@30976> tstsize2:                  Dc.l $00000100
0003DADC <AmiBlitz3.ab3@30977> tstend:                    Dc.l $000003EC
0003DAE4 <AmiBlitz3.ab3@30978> tstsize3:                  Ds.l 2
0003DAE8 <AmiBlitz3.ab3@30979> tstdone:                   Dc.l $000003F2
0003DAEC <AmiBlitz3.ab3@30982> edstruct:                  Dc.l tokens                     ;data for ted
0003DAF0 <AmiBlitz3.ab3@30986>                            Dc.l 0
0003DAF4 <AmiBlitz3.ab3@30988>                            Dc.l read_xtrafile              ;load .xtra routine
0003DAF8 <AmiBlitz3.ab3@30989>                            Dc.l write_xtrafile             ;save .xtra routine
0003DAFC <AmiBlitz3.ab3@30990>                            Dc.l call_menuentry             ;Menu Routine
0003DB00 <AmiBlitz3.ab3@30991>                            Ds.l 1                          ;cleanup (?)
0003DB04 <AmiBlitz3.ab3@30992>                            Dc.b ":",34,".;"
0003DC00 <AmiBlitz3.ab3@30995> 
0003DCE0 <AmiBlitz3.ab3@30996>                            Ds.l 56
0003DCE2 <AmiBlitz3.ab3@31001> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003DCE6 <AmiBlitz3.ab3@31004> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003DCE8 <AmiBlitz3.ab3@31005>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003DCEC <AmiBlitz3.ab3@31006>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DCF2 <AmiBlitz3.ab3@31010> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003DCF4 <AmiBlitz3.ab3@31014>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DCF8 <AmiBlitz3.ab3@31017> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003DCFC <AmiBlitz3.ab3@31020> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DD00 <AmiBlitz3.ab3@31021>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DD02 <AmiBlitz3.ab3@31027>                            Dc.b $4A,$40                                             ;TST.W   D0
0003DD04 <AmiBlitz3.ab3@31031>                            Dc.b $4A,$80                                             ;TST.L   D0
0003DD06 <AmiBlitz3.ab3@31034> nops8:                     Dc.b $4E,$71                                             ;NOP
0003DD08 <AmiBlitz3.ab3@31035>                            Dc.b $4E,$71                                             ;NOP
0003DD0A <AmiBlitz3.ab3@31036>                            Dc.b $4E,$71                                             ;NOP
0003DD0C <AmiBlitz3.ab3@31037>                            Dc.b $4E,$71                                             ;NOP
0003DD0E <AmiBlitz3.ab3@31038> nops4:                     Dc.b $4E,$71                                             ;NOP
0003DD10 <AmiBlitz3.ab3@31040>                            Dc.b $4E,$71                                             ;NOP
0003DD12 <AmiBlitz3.ab3@31041>                            Dc.b $4E,$71                                             ;NOP
0003DD14 <AmiBlitz3.ab3@31042>                            Dc.b $4E,$71                                             ;NOP
0003DD18 <AmiBlitz3.ab3@31046> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DD1C <AmiBlitz3.ab3@31049> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DD1E <AmiBlitz3.ab3@31052> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003DD20 <AmiBlitz3.ab3@31055> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DD22 <AmiBlitz3.ab3@31056>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DD26 <AmiBlitz3.ab3@31057>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003DD28 <AmiBlitz3.ab3@31058>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003DD2A <AmiBlitz3.ab3@31064> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DD2E <AmiBlitz3.ab3@31065>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003DD30 <AmiBlitz3.ab3@31070> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DD34 <AmiBlitz3.ab3@31071>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003DD36 <AmiBlitz3.ab3@31075> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003DD38 <AmiBlitz3.ab3@31076>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003DD3C <AmiBlitz3.ab3@31082> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003DD3E <AmiBlitz3.ab3@31083>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003DD42 <AmiBlitz3.ab3@31084>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003DD46 <AmiBlitz3.ab3@31088> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003DD48 <AmiBlitz3.ab3@31089>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003DD4C <AmiBlitz3.ab3@31090>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003DD4E <AmiBlitz3.ab3@31093> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DD52 <AmiBlitz3.ab3@31096> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003DD56 <AmiBlitz3.ab3@31099> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003DD5A <AmiBlitz3.ab3@31102> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003DD5E <AmiBlitz3.ab3@31106>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DD60 <AmiBlitz3.ab3@31107>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DD62 <AmiBlitz3.ab3@31108>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003DD66 <AmiBlitz3.ab3@31113>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DD68 <AmiBlitz3.ab3@31114>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003DD6A <AmiBlitz3.ab3@31115>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003DD6E <AmiBlitz3.ab3@31120>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DD70 <AmiBlitz3.ab3@31121>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003DD72 <AmiBlitz3.ab3@31122>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003DD76 <AmiBlitz3.ab3@31127>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DD78 <AmiBlitz3.ab3@31128>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DD7A <AmiBlitz3.ab3@31129>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003DD7E <AmiBlitz3.ab3@31130>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003DD80 <AmiBlitz3.ab3@31131>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003DD84 <AmiBlitz3.ab3@31136>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DD86 <AmiBlitz3.ab3@31137>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003DD8A <AmiBlitz3.ab3@31138>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DD8C <AmiBlitz3.ab3@31139>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DD90 <AmiBlitz3.ab3@31140>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003DD92 <AmiBlitz3.ab3@31141>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DD94 <AmiBlitz3.ab3@31144>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003DD98 <AmiBlitz3.ab3@31149>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DD9A <AmiBlitz3.ab3@31150>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003DD9E <AmiBlitz3.ab3@31151>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003DDA0 <AmiBlitz3.ab3@31152>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DDA4 <AmiBlitz3.ab3@31153>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003DDA6 <AmiBlitz3.ab3@31154>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DDA8 <AmiBlitz3.ab3@31157>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003DDAC <AmiBlitz3.ab3@31162>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DDAE <AmiBlitz3.ab3@31163>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DDB2 <AmiBlitz3.ab3@31164>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DDB4 <AmiBlitz3.ab3@31165>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003DDB8 <AmiBlitz3.ab3@31166>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003DDBA <AmiBlitz3.ab3@31167>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DDBC <AmiBlitz3.ab3@31170>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003DDC0 <AmiBlitz3.ab3@31175>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003DDC2 <AmiBlitz3.ab3@31176>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DDC6 <AmiBlitz3.ab3@31177>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003DDCC <AmiBlitz3.ab3@31178>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003DDD0 <AmiBlitz3.ab3@31179>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003DDD2 <AmiBlitz3.ab3@31180>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003DDD6 <AmiBlitz3.ab3@31187>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003DDD8 <AmiBlitz3.ab3@31191> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003DDDA <AmiBlitz3.ab3@31194> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DDDE <AmiBlitz3.ab3@31197> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DDE0 <AmiBlitz3.ab3@31198> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003DDE4 <AmiBlitz3.ab3@31201> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DDE6 <AmiBlitz3.ab3@31204> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DDEA <AmiBlitz3.ab3@31207> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DDEC <AmiBlitz3.ab3@31211>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003DDEE <AmiBlitz3.ab3@31214> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003DDF0 <AmiBlitz3.ab3@31217> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DDF4 <AmiBlitz3.ab3@31220> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003DDF8 <AmiBlitz3.ab3@31223> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003DDFC <AmiBlitz3.ab3@31226> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DDFE <AmiBlitz3.ab3@31229> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DE00 <AmiBlitz3.ab3@31232> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DE04 <AmiBlitz3.ab3@31235> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003DE0A <AmiBlitz3.ab3@31236>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003DE0C <AmiBlitz3.ab3@31237>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DE10 <AmiBlitz3.ab3@31241> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003DE12 <AmiBlitz3.ab3@31242>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DE14 <AmiBlitz3.ab3@31246> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DE18 <AmiBlitz3.ab3@31249> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003DE1A <AmiBlitz3.ab3@31253>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003DE1C <AmiBlitz3.ab3@31257>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DE1E <AmiBlitz3.ab3@31261>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DE22 <AmiBlitz3.ab3@31264> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003DE26 <AmiBlitz3.ab3@31267> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003DE28 <AmiBlitz3.ab3@31270> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003DE2A <AmiBlitz3.ab3@31273> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DE2C <AmiBlitz3.ab3@31276> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003DE30 <AmiBlitz3.ab3@31279> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003DE34 <AmiBlitz3.ab3@31282> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003DE36 <AmiBlitz3.ab3@31285> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003DE38 <AmiBlitz3.ab3@31289>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003DE3C <AmiBlitz3.ab3@31292>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DE3E <AmiBlitz3.ab3@31298>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003DE42 <AmiBlitz3.ab3@31301>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003DE44 <AmiBlitz3.ab3@31307>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003DE48 <AmiBlitz3.ab3@31311> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003DE4A <AmiBlitz3.ab3@31314> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003DE4C <AmiBlitz3.ab3@31318>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DE4E <AmiBlitz3.ab3@31322>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DE54 <AmiBlitz3.ab3@31325> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003DE5A <AmiBlitz3.ab3@31328> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DE62 <AmiBlitz3.ab3@31332> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003DE66 <AmiBlitz3.ab3@31333>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003DE68 <AmiBlitz3.ab3@31337> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003DE6C <AmiBlitz3.ab3@31340> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003DE70 <AmiBlitz3.ab3@31343> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003DE74 <AmiBlitz3.ab3@31346> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DE78 <AmiBlitz3.ab3@31347> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003DE7C <AmiBlitz3.ab3@31351>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003DE80 <AmiBlitz3.ab3@31353>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003DE82 <AmiBlitz3.ab3@31356> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003DE86 <AmiBlitz3.ab3@31359> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003DE88 <AmiBlitz3.ab3@31362> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003DE8A <AmiBlitz3.ab3@31363>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003DE8C <AmiBlitz3.ab3@31364>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003DE90 <AmiBlitz3.ab3@31365> 
0003DE92 <AmiBlitz3.ab3@31366>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003DE94 <AmiBlitz3.ab3@31367>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003DE96 <AmiBlitz3.ab3@31368>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003DE9C <AmiBlitz3.ab3@31370>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003DE9E <AmiBlitz3.ab3@31375> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003DEA0 <AmiBlitz3.ab3@31376>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003DEA2 <AmiBlitz3.ab3@31380> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003DEA6 <AmiBlitz3.ab3@31383> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003DEA8 <AmiBlitz3.ab3@31386> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003DEAA <AmiBlitz3.ab3@31390>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003DEAC <AmiBlitz3.ab3@31393> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003DEB0 <AmiBlitz3.ab3@31396> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003DEB2 <AmiBlitz3.ab3@31397>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003DEB6 <AmiBlitz3.ab3@31401> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003DEBA <AmiBlitz3.ab3@31402> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003DEBE <AmiBlitz3.ab3@31406> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003DEC2 <AmiBlitz3.ab3@31410> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DEC8 <AmiBlitz3.ab3@31414> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003DECE <AmiBlitz3.ab3@31417> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003DED2 <AmiBlitz3.ab3@31421> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003DED6 <AmiBlitz3.ab3@31425>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DEDA <AmiBlitz3.ab3@31426>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DEE0 <AmiBlitz3.ab3@31431>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003DEE4 <AmiBlitz3.ab3@31436>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DEE6 <AmiBlitz3.ab3@31441>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DEEA <AmiBlitz3.ab3@31445>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DEEC <AmiBlitz3.ab3@31449> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003DEEE <AmiBlitz3.ab3@31452> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DEF0 <AmiBlitz3.ab3@31453>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DEF4 <AmiBlitz3.ab3@31457>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003DEF8 <AmiBlitz3.ab3@31461> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DEFC <AmiBlitz3.ab3@31464> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003DEFE <AmiBlitz3.ab3@31467> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003DF02 <AmiBlitz3.ab3@31470> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003DF04 <AmiBlitz3.ab3@31473> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003DF0D <AmiBlitz3.ab3@31477>                            Dc.b "ram:test",0
0003DF0E <AmiBlitz3.ab3@31478> Even
0003DF12 <AmiBlitz3.ab3@31482>                            Dc.l  0                          ;was  Ds.w 3 org source
0003DF14 <AmiBlitz3.ab3@31484>                            Dc.w  0
0003DF18 <AmiBlitz3.ab3@31487> _mathffpbase:              Ds.l 1                           ;maths org source
0003DF1A <AmiBlitz3.ab3@31488> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003DF1C <AmiBlitz3.ab3@31489> typelen:                   Ds.w 1
0003DF20 <AmiBlitz3.ab3@31490> prevtype:                  Ds.l 1
0003DF24 <AmiBlitz3.ab3@31491> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003DF26 <AmiBlitz3.ab3@31492> lastchar:                  Ds.w 1
0003DF2A <AmiBlitz3.ab3@31493> thistype:                  Ds.l 1
0003DF2E <AmiBlitz3.ab3@31494> errstack:                  Ds.l 1
0003DF32 <AmiBlitz3.ab3@31495> errcont:                   Ds.l 1
0003DF34 <AmiBlitz3.ab3@31496> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003DF36 <AmiBlitz3.ab3@31497> linesleft:                 Ds.w 1
0003DF3A <AmiBlitz3.ab3@31498> sourceline:                Ds.l 1                          ;thisitem org source
0003DF3E <AmiBlitz3.ab3@31499> varbase:                   Ds.l 1                          ;firstvar org source
0003DF42 <AmiBlitz3.ab3@31500> alllocals:                 Ds.l 1
0003DF46 <AmiBlitz3.ab3@31501> firstlocal:                Ds.l 1
0003DF4A <AmiBlitz3.ab3@31502> firstglob:                 Ds.l 1
0003DF4C <AmiBlitz3.ab3@31503> globalvarpointer:          Ds.w 1                          ;varoff org source
0003DF4E <AmiBlitz3.ab3@31504> locvaroff:                 Ds.w 1
0003DF52 <AmiBlitz3.ab3@31505> firstitem_:                 Ds.l 1
0003DF54 <AmiBlitz3.ab3@31506> numlines_org:              Ds.w 1                          ;numlines org source
0003DF56 <AmiBlitz3.ab3@31507> returncode_org:            Ds.w 1                          ;returncode org source
0003DF5A <AmiBlitz3.ab3@31508> firstiff:                  Ds.l 1                          ;firstif org source
0003DF5E <AmiBlitz3.ab3@31509> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003E15E <AmiBlitz3.ab3@31510> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003E16E <AmiBlitz3.ab3@31511> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003E36E <AmiBlitz3.ab3@31512> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E56E <AmiBlitz3.ab3@31513> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E76E <AmiBlitz3.ab3@31514> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E772 <AmiBlitz3.ab3@31516> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003E972 <AmiBlitz3.ab3@31517> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003EB72 <AmiBlitz3.ab3@31519> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003EB76 <AmiBlitz3.ab3@31520> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003ED76 <AmiBlitz3.ab3@31521> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003ED7A <AmiBlitz3.ab3@31522> size_deflibs:              Ds.l 1                          ;deflibs org source
0003EF7A <AmiBlitz3.ab3@31523> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003F17A <AmiBlitz3.ab3@31525> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003F17E <AmiBlitz3.ab3@31526> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003F37E <AmiBlitz3.ab3@31528> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003F382 <AmiBlitz3.ab3@31534>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003F386 <AmiBlitz3.ab3@31535>   Dc.b $00,$00,$00,$00
0003F38A <AmiBlitz3.ab3@31536>   Dc.b $00,$19,$00,$11
0003F38E <AmiBlitz3.ab3@31537>   Dc.b $00,$2E,$00,$18
0003F392 <AmiBlitz3.ab3@31538>   Dc.b $00,$04,$00,$03
0003F396 <AmiBlitz3.ab3@31539>   Dc.b $00,$01,$00,$22
0003F39A <AmiBlitz3.ab3@31540>   Dc.b $73,$68,$00,$00
0003F39E <AmiBlitz3.ab3@31541>   Dc.b $00,$00,$00,$00
0003F3A2 <AmiBlitz3.ab3@31542>   Dc.b $00,$00,$00,$00
0003F3A6 <AmiBlitz3.ab3@31543>   Dc.b $00,$00,$00,$00
0003F3AA <AmiBlitz3.ab3@31544>   Dc.b $00,$00,$00,$00
0003F3AE <AmiBlitz3.ab3@31545>   Dc.b $00,$00,$00,$00
0003F3B2 <AmiBlitz3.ab3@31546>   Dc.b $03,$22,$00,$21
0003F3B6 <AmiBlitz3.ab3@31547>   Dc.b $3C,$28,$00,$22
0003F3BA <AmiBlitz3.ab3@31548>   Dc.b $6E,$C0,$00,$00
0003F3BE <AmiBlitz3.ab3@31549>   Dc.b $00,$12,$00,$00
0003F3C2 <AmiBlitz3.ab3@31550>   Dc.b $00,$0E,$00,$00
0003F3C6 <AmiBlitz3.ab3@31551>   Dc.b $00,$00,$00,$00
0003F3CA <AmiBlitz3.ab3@31552>   Dc.b $00,$00,$00,$00
0003F3CE <AmiBlitz3.ab3@31553>   Dc.b $00,$00,$00,$00
0003F3D2 <AmiBlitz3.ab3@31554>   Dc.b $00,$00,$00,$2E
0003F3D6 <AmiBlitz3.ab3@31555>   Dc.b $00,$17,$00,$02
0003F3DA <AmiBlitz3.ab3@31556>   Dc.b $00,$01,$8E,$80
0003F3DE <AmiBlitz3.ab3@31557>   Dc.b $03,$00,$00,$00
0003F3E2 <AmiBlitz3.ab3@31558>   Dc.b $00,$00,$FF,$FF
0003F3E6 <AmiBlitz3.ab3@31559>   Dc.b $FF,$FF,$FF,$FC
0003F3EA <AmiBlitz3.ab3@31560>   Dc.b $80,$00,$00,$00
0003F3EE <AmiBlitz3.ab3@31561>   Dc.b $00,$00,$80,$00
0003F3F2 <AmiBlitz3.ab3@31562>   Dc.b $00,$3F,$BB,$40
0003F3F6 <AmiBlitz3.ab3@31563>   Dc.b $80,$1F,$C0,$00
0003F3FA <AmiBlitz3.ab3@31564>   Dc.b $00,$00,$80,$3F
0003F3FE <AmiBlitz3.ab3@31565>   Dc.b $C0,$0F,$BB,$40
0003F402 <AmiBlitz3.ab3@31566>   Dc.b $80,$1F,$C0,$00
0003F406 <AmiBlitz3.ab3@31567>   Dc.b $00,$00,$8E,$00
0003F40A <AmiBlitz3.ab3@31568>   Dc.b $F8,$00,$00,$00
0003F40E <AmiBlitz3.ab3@31569>   Dc.b $8F,$01,$FF,$00
0003F412 <AmiBlitz3.ab3@31570>   Dc.b $3B,$40,$81,$E3
0003F416 <AmiBlitz3.ab3@31571>   Dc.b $F7,$C0,$00,$00
0003F41A <AmiBlitz3.ab3@31572>   Dc.b $80,$7F,$F8,$70
0003F41E <AmiBlitz3.ab3@31573>   Dc.b $3B,$40,$80,$0F
0003F422 <AmiBlitz3.ab3@31574>   Dc.b $7C,$E0,$00,$00
0003F426 <AmiBlitz3.ab3@31575>   Dc.b $80,$00,$FD,$80
0003F42A <AmiBlitz3.ab3@31576>   Dc.b $00,$00,$80,$01
0003F42E <AmiBlitz3.ab3@31577>   Dc.b $F6,$00,$FB,$40
0003F432 <AmiBlitz3.ab3@31578>   Dc.b $80,$03,$EF,$00
0003F436 <AmiBlitz3.ab3@31579>   Dc.b $00,$00,$80,$07
0003F43A <AmiBlitz3.ab3@31580>   Dc.b $87,$80,$3B,$40
0003F43E <AmiBlitz3.ab3@31581>   Dc.b $80,$0F,$01,$C0
0003F442 <AmiBlitz3.ab3@31582>   Dc.b $00,$00,$80,$03
0003F446 <AmiBlitz3.ab3@31583>   Dc.b $F0,$70,$1D,$40
0003F44A <AmiBlitz3.ab3@31584>   Dc.b $80,$00,$18,$1C
0003F44E <AmiBlitz3.ab3@31585>   Dc.b $00,$00,$80,$00
0003F452 <AmiBlitz3.ab3@31586>   Dc.b $10,$06,$03,$40
0003F456 <AmiBlitz3.ab3@31587>   Dc.b $80,$00,$20,$1F
0003F45A <AmiBlitz3.ab3@31588>   Dc.b $00,$00,$80,$00
0003F45E <AmiBlitz3.ab3@31589>   Dc.b $00,$00,$01,$40
0003F462 <AmiBlitz3.ab3@31590>   Dc.b $80,$00,$00,$00
0003F466 <AmiBlitz3.ab3@31591>   Dc.b $00,$00,$80,$00
0003F46A <AmiBlitz3.ab3@31592>   Dc.b $00,$00,$00,$00
0003F46E <AmiBlitz3.ab3@31593>   Dc.b $00,$00,$00,$00
0003F472 <AmiBlitz3.ab3@31594>   Dc.b $00,$00,$00,$00
0003F476 <AmiBlitz3.ab3@31595>   Dc.b $00,$00,$00,$04
0003F47A <AmiBlitz3.ab3@31596>   Dc.b $00,$3F,$FC,$01
0003F47E <AmiBlitz3.ab3@31597>   Dc.b $BB,$44,$00,$60
0003F482 <AmiBlitz3.ab3@31598>   Dc.b $FE,$00,$00,$04
0003F486 <AmiBlitz3.ab3@31599>   Dc.b $00,$CF,$FF,$01
0003F48A <AmiBlitz3.ab3@31600>   Dc.b $BB,$44,$1F,$EF
0003F48E <AmiBlitz3.ab3@31601>   Dc.b $FF,$00,$00,$04
0003F492 <AmiBlitz3.ab3@31602>   Dc.b $33,$FF,$FF,$E0
0003F496 <AmiBlitz3.ab3@31603>   Dc.b $00,$04,$37,$FE
0003F49A <AmiBlitz3.ab3@31604>   Dc.b $7F,$FC,$1B,$44
0003F49E <AmiBlitz3.ab3@31605>   Dc.b $0F,$9C,$FF,$FF
0003F4A2 <AmiBlitz3.ab3@31606>   Dc.b $00,$04,$03,$E3
0003F4A6 <AmiBlitz3.ab3@31607>   Dc.b $FF,$FF,$DB,$44
0003F4AA <AmiBlitz3.ab3@31608>   Dc.b $00,$7F,$BF,$FF
0003F4AE <AmiBlitz3.ab3@31609>   Dc.b $80,$04,$00,$0F
0003F4B2 <AmiBlitz3.ab3@31610>   Dc.b $3F,$FE,$00,$04
0003F4B6 <AmiBlitz3.ab3@31611>   Dc.b $00,$06,$7F,$F8
0003F4BA <AmiBlitz3.ab3@31612>   Dc.b $1B,$44,$00,$0C
0003F4BE <AmiBlitz3.ab3@31613>   Dc.b $F7,$FC,$00,$04
0003F4C2 <AmiBlitz3.ab3@31614>   Dc.b $00,$19,$F9,$FE
0003F4C6 <AmiBlitz3.ab3@31615>   Dc.b $1B,$44,$00,$33
0003F4CA <AmiBlitz3.ab3@31616>   Dc.b $FE,$7F,$00,$04
0003F4CE <AmiBlitz3.ab3@31617>   Dc.b $00,$0F,$FF,$BF
0003F4D2 <AmiBlitz3.ab3@31618>   Dc.b $CD,$44,$00,$03
0003F4D6 <AmiBlitz3.ab3@31619>   Dc.b $EF,$EF,$F0,$04
0003F4DA <AmiBlitz3.ab3@31620>   Dc.b $00,$00,$7F,$DF
0003F4DE <AmiBlitz3.ab3@31621>   Dc.b $FB,$44,$00,$00
0003F4E2 <AmiBlitz3.ab3@31622>   Dc.b $FF,$A7,$FC,$04
0003F4E6 <AmiBlitz3.ab3@31623>   Dc.b $00,$00,$7E,$3F
0003F4EA <AmiBlitz3.ab3@31624>   Dc.b $FD,$44,$00,$00
0003F4EE <AmiBlitz3.ab3@31625>   Dc.b $00,$00,$00,$04
0003F4F2 <AmiBlitz3.ab3@31626>   Dc.b $7F,$FF,$FF,$FF
0003F4F6 <AmiBlitz3.ab3@31627>   Dc.b $FF,$FC,$00,$00
0003F4FA <AmiBlitz3.ab3@31628>   Dc.b $00,$01,$00,$00
0003F4FD <AmiBlitz3.ab3@31629>   Dc.b $00,$00,$04
0003F503 <AmiBlitz3.ab3@31632> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003F55B <AmiBlitz3.ab3@31633> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003F55C <AmiBlitz3.ab3@31634> Even
0003F560 <AmiBlitz3.ab3@31636> sysdebug:            Dc.l $3F0
0003F58A <AmiBlitz3.ab3@31641>  !basic
0003F59E <AmiBlitz3.ab3@31642>  If OnePassCompiling = True
0003F5BC <AmiBlitz3.ab3@31643>    maxmem.l = (AvailMem_ (#MEMF_PUBLIC) LSR 2)  ; 1/4 of the available free mem
0003F5CC <AmiBlitz3.ab3@31644>    objectlength.l = Peek.l(?objlen)
0003F5EA <AmiBlitz3.ab3@31645>    If Peek.b(?use_debugger) = 0
0003F610 <AmiBlitz3.ab3@31646>      If (objectlength < 3670056) AND (maxmem > 3670056)
0003F616 <AmiBlitz3.ab3@31647>        MOVE.l #3145727,d2     ; objectbuffersize
0003F61C <AmiBlitz3.ab3@31648>        MOVE.l  #262143,d3     ; libsbuffersize
0003F622 <AmiBlitz3.ab3@31649>        MOVE.l  #131071,d4     ; systembuffersize
0003F628 <AmiBlitz3.ab3@31650>        MOVE.l  #131071,d5     ; databuffersize
0003F62E <AmiBlitz3.ab3@31651>        JSR makeallox  ; added 40 buffer more
0003F658 <AmiBlitz3.ab3@31652>        !basic
0003F65E <AmiBlitz3.ab3@31653>      Else
0003F684 <AmiBlitz3.ab3@31654>        If (objectlength < 1572904) AND (maxmem > 1572904)
0003F6A2 <AmiBlitz3.ab3@31655>          !asm
0003F6A8 <AmiBlitz3.ab3@31656>          MOVE.l #1310719,d2     ; objectbuffersize
0003F6AE <AmiBlitz3.ab3@31657>          MOVE.l  #131071,d3     ; libsbuffersize
0003F6B4 <AmiBlitz3.ab3@31658>          MOVE.l   #65535,d4     ; systembuffersize
0003F6BA <AmiBlitz3.ab3@31659>          MOVE.l   #65535,d5     ; databuffersize
0003F6C0 <AmiBlitz3.ab3@31660>          JSR makeallox ; added 40 buffer more
0003F6EA <AmiBlitz3.ab3@31661>          !basic
0003F6F0 <AmiBlitz3.ab3@31664>    Else
0003F700 <AmiBlitz3.ab3@31665>      maxmem LSL 1 ; for debug test for 1/2 of the available mem
0003F726 <AmiBlitz3.ab3@31666>      If (objectlength < 12058664) AND (maxmem > 12058664)
0003F72C <AmiBlitz3.ab3@31667>        MOVE.l #5242879,d2     ; objectbuffersize
0003F732 <AmiBlitz3.ab3@31668>        MOVE.l  #262143,d3     ; libsbuffersize
0003F738 <AmiBlitz3.ab3@31669>        MOVE.l #6291455,d4     ; systembuffersize
0003F73E <AmiBlitz3.ab3@31670>        MOVE.l  #262143,d5     ; databuffersize
0003F744 <AmiBlitz3.ab3@31671>        JSR makeallox ; added 40 buffer more
0003F76E <AmiBlitz3.ab3@31672>        !basic
0003F774 <AmiBlitz3.ab3@31673>      Else
0003F79A <AmiBlitz3.ab3@31674>        If (objectlength < 6094888) AND (maxmem > 6094888)
0003F7B8 <AmiBlitz3.ab3@31675>          !asm
0003F7BE <AmiBlitz3.ab3@31676>          MOVE.l #2621439,d2     ; objectbuffersize
0003F7C4 <AmiBlitz3.ab3@31677>          MOVE.l  #262143,d3     ; libsbuffersize
0003F7CA <AmiBlitz3.ab3@31678>          MOVE.l #3145727,d4     ; systembuffersize
0003F7D0 <AmiBlitz3.ab3@31679>          MOVE.l   #65535,d5     ; databuffersize
0003F7D6 <AmiBlitz3.ab3@31680>          JSR makeallox ; added 40 buffer more
0003F800 <AmiBlitz3.ab3@31681>          !basic
0003F81E <AmiBlitz3.ab3@31686>  !asm
0003F820 <AmiBlitz3.ab3@31687> RTS
0003F84A <AmiBlitz3.ab3@31690>  !basic
0003F850 <AmiBlitz3.ab3@31691>    releaseexe = True                                  ; set release modus to on
0003F88E <AmiBlitz3.ab3@31692>    !ComData_GetW{comWord_CreateDebugFile,D0}          ; get the status for creating .dbg file
0003F892 <AmiBlitz3.ab3@31693>    releasedbg_save = PutD0                            ; save the status
0003F8C8 <AmiBlitz3.ab3@31694>    !ComData_SetW{comWord_CreateDebugFile,#0}          ; set it of so it will not create with every needed compile run
0003F8DA <AmiBlitz3.ab3@31695>    releasemakesmall_save = Peek.b(?make_smallestcode) ; save the status of make smallest code
0003F8EC <AmiBlitz3.ab3@31696> 
0003F92A <AmiBlitz3.ab3@31697>    !ComData_GetB{comByte_FuncOptimize,D0}             ; get the status of function optimizer
0003F92E <AmiBlitz3.ab3@31698>    releasefuncoptimize_save = PutD0                   ; save it
0003F964 <AmiBlitz3.ab3@31699>    !ComData_SetB{comByte_FuncOptimize,#1}             ; set it on
0003F976 <AmiBlitz3.ab3@31700>    releasedebugger_save = Peek.b(?use_debugger)       ; save the status of the use of the debugger
0003F986 <AmiBlitz3.ab3@31701>    Poke.b ?use_debugger,0                             ; set if off because we create a release verion and need no debugging code
0003F9A4 <AmiBlitz3.ab3@31702>  !asm
0003F9AA <AmiBlitz3.ab3@31703>  JSR menu_newcreate                                   ; jump to start the compiling
0003F9AE <AmiBlitz3.ab3@31704>  !regs2stack                                          ; save the registers
0003F9D8 <AmiBlitz3.ab3@31705>  !basic
0003F9DE <AmiBlitz3.ab3@31706>    releaseexe = False                                 ; set creat release exe off
0003F9E4 <AmiBlitz3.ab3@31707>    GetD0 releasedbg_save                              ; set the old status of create .dbg file back
0003FA18 <AmiBlitz3.ab3@31708>    !ComData_SetW{comWord_CreateDebugFile,D0}          ;                      "
0003FA2A <AmiBlitz3.ab3@31709>    Poke.b ?use_debugger,releasedebugger_save          ; set the old status of use Debugger back
0003FA32 <AmiBlitz3.ab3@31710>    GetD0 releasefuncoptimize_save                     ; set the old status of function optimizer back
0003FA66 <AmiBlitz3.ab3@31711>    !ComData_SetB{comByte_FuncOptimize,D0}             ;                       "
0003FA78 <AmiBlitz3.ab3@31712>    Poke.b ?make_smallestcode,releasemakesmall_save    ; set the old status of make smallest code back
0003FA96 <AmiBlitz3.ab3@31713>  !asm
0003FA9A <AmiBlitz3.ab3@31714>  !stack2regs                                          ; set registers back
0003FA9C <AmiBlitz3.ab3@31715> RTS
0003FAA0 <AmiBlitz3.ab3@31720> exelock              Ds.l 1
0003FAA4 <AmiBlitz3.ab3@31724> includesourceline    Dc.l 0
0003FAA8 <AmiBlitz3.ab3@31725> linenum              Ds.l 1
0003FAAC <AmiBlitz3.ab3@31726> globallinecount      Ds.l 1
0003FACA <AmiBlitz3.ab3@31727> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003FACE <AmiBlitz3.ab3@31728> calc_option          Dc.l 1
0003FAD2 <AmiBlitz3.ab3@31729> versioninformation   Dc.l $00
0003FAD6 <AmiBlitz3.ab3@31730> number_of_builds     Dc.l $00
0003FAD8 <AmiBlitz3.ab3@31731> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003FADA <AmiBlitz3.ab3@31732> rightsideflagmask    Ds.w 1
0003FADC <AmiBlitz3.ab3@31734> BSS
0003FADE <AmiBlitz3.ab3@31735> debugnest            Ds.w 1
0003FAE2 <AmiBlitz3.ab3@31736> instringf            Ds.l 1
0003FAE6 <AmiBlitz3.ab3@31737> funcscanon           Ds.l 1
0003FAFA <AmiBlitz3.ab3@31738> storedebugmode       Ds.b 20
0003FAFE <AmiBlitz3.ab3@31739> firsttimepref        Ds.l 1
0003FAFF <AmiBlitz3.ab3@31740> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003FB00 <AmiBlitz3.ab3@31741> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003FB02 <AmiBlitz3.ab3@31742> nostringopt          Ds.w 1
0003FB82 <AmiBlitz3.ab3@31743> path2:               Ds.l 32
0003FB86 <AmiBlitz3.ab3@31744> typebase             Dc.l 0
0003FB88 <AmiBlitz3.ab3@31745> doublepeek           Dc.w 0
0003FB8C <AmiBlitz3.ab3@31746> lastoffset           Dc.l 0
0003FB8E <AmiBlitz3.ab3@31747> firsttime            Dc.w 0
0003FB92 <AmiBlitz3.ab3@31748> lastdestpointer      Dc.l 0
0003FB96 <AmiBlitz3.ab3@31749> prevwritedat         Dc.l 0
0003FB9A <AmiBlitz3.ab3@31750> lastsourceline       Dc.l 0
0003FB9E <AmiBlitz3.ab3@31751> lastwritedat         Dc.l 0
0003FBA0 <AmiBlitz3.ab3@31752> makeexec             Dc.w 0
0003FBA2 <AmiBlitz3.ab3@31753> makeexec_remember    Dc.w 0
0003FBA6 <AmiBlitz3.ab3@31754> sharebase            Ds.l 1
0003FBAA <AmiBlitz3.ab3@31755> tempa7               Ds.l 1
0003FBAC <AmiBlitz3.ab3@31756> incnif               Ds.w 1
0003FBB0 <AmiBlitz3.ab3@31757> tempstore            Ds.l 1
0003FBB4 <AmiBlitz3.ab3@31758> result               Ds.l 1
0003FBB6 <AmiBlitz3.ab3@31759> automode             Ds.w 1
0003FBB8 <AmiBlitz3.ab3@31760> stackcorrect         Ds.w 1
0003FBBA <AmiBlitz3.ab3@31761> formode              Ds.w 1
0003FBBE <AmiBlitz3.ab3@31762> limitregs            Ds.l 1
0003FBC0 <AmiBlitz3.ab3@31763> onestep              Ds.w 1
0003FBC4 <AmiBlitz3.ab3@31764> reqmode              Ds.l 1
0003FC64 <AmiBlitz3.ab3@31765> inctab               Ds.l 40
0003FC66 <AmiBlitz3.ab3@31766> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003FC6A <AmiBlitz3.ab3@31767> includeline          Ds.l 1
0003FC6E <AmiBlitz3.ab3@31768> morememadd           Ds.l 1
0003FC70 <AmiBlitz3.ab3@31769> objectcount          Ds.w 1
0003FC74 <AmiBlitz3.ab3@31770> savefuncspace        Ds.l 1
0003FC78 <AmiBlitz3.ab3@31771> lasttrap1            Ds.l 1
0003FC7C <AmiBlitz3.ab3@31772> currentfunccall      Ds.l 1
0003FC7D <AmiBlitz3.ab3@31773> skipfunc             Ds.b 1
0003FC7E <AmiBlitz3.ab3@31774> resdisable           Ds.b 1
0003FC7F <AmiBlitz3.ab3@31775> skiptoggle           Ds.b 1
0003FC80 <AmiBlitz3.ab3@31776> developobject        Ds.b 1
0003FC82 <AmiBlitz3.ab3@31777> iniffcommand         Ds.w 1
0003FC84 <AmiBlitz3.ab3@31778> startoffsetmore      Ds.w 1
0003FC86 <AmiBlitz3.ab3@31779> olddebugmode         Ds.w 1
0003FC8A <AmiBlitz3.ab3@31780> fpucodeglobal        Ds.l 1
0003FC8E <AmiBlitz3.ab3@31781> fpucodelocal         Ds.l 1
0003FC92 <AmiBlitz3.ab3@31782> maxregs              Ds.l 1
0003FC96 <AmiBlitz3.ab3@31783> fpucode              Ds.l 1
0003FC98 <AmiBlitz3.ab3@31784> firstmline           Ds.w 1
0003FCD8 <AmiBlitz3.ab3@31785> regtable             Ds.l 16
0003FCDA <AmiBlitz3.ab3@31786> exdebug              Ds.w 1
0003FCDC <AmiBlitz3.ab3@31787> a2offset2            Ds.w 1
0003FCE0 <AmiBlitz3.ab3@31788> parnumtemp           Ds.l 1
0003FCE1 <AmiBlitz3.ab3@31789> doimmediate          Ds.b 1
0003FCE2 <AmiBlitz3.ab3@31790> notypecheck          Ds.b 1
0003FCE4 <AmiBlitz3.ab3@31791> vartype              Ds.w 1
0003FCE5 <AmiBlitz3.ab3@31792> peekaddrsize         Ds.b 1
0003FCE6 <AmiBlitz3.ab3@31793> declare2             Ds.b 1
0003FCE8 <AmiBlitz3.ab3@31794> parameternum         Ds.w 1
0003FCEC <AmiBlitz3.ab3@31795> lasttoken            Ds.l 1
0003FCEE <AmiBlitz3.ab3@31796> newvariable          Ds.w 1
0003FCEF <AmiBlitz3.ab3@31797> declare              Ds.b 1
0003FCF0 <AmiBlitz3.ab3@31798> typecheck            Ds.b 1
0003FCF1 <AmiBlitz3.ab3@31799> nowdeclare           Ds.b 1
0003FCF2 <AmiBlitz3.ab3@31800> dimkeep              Ds.b 1
0003FCF3 <AmiBlitz3.ab3@31801> a4a5store            Ds.b 1
0003FCF4 <AmiBlitz3.ab3@31802> ___freetouse         Ds.b 1
0003FCF8 <AmiBlitz3.ab3@31803> firstiffstore        Ds.l 1
0003FCFC <AmiBlitz3.ab3@31804> destpointer2         Ds.l 1
0003FD00 <AmiBlitz3.ab3@31805> stackaddr            Ds.l 1
0003FE04 <AmiBlitz3.ab3@31806> allowtab             Ds.b 260
0003FF04 <AmiBlitz3.ab3@31807> templine             Ds.b 256
0003FF06 <AmiBlitz3.ab3@31808> thenmode             Ds.w 1
0003FF08 <AmiBlitz3.ab3@31809> temp                 Ds.w 1
0003FF0A <AmiBlitz3.ab3@31810> tempregnum           Ds.w 1
0003FF0E <AmiBlitz3.ab3@31812> numlines2            Ds.l 1
0003FF12 <AmiBlitz3.ab3@31813> numlines             Ds.l 1
0003FF14 <AmiBlitz3.ab3@31814> exmac                Ds.w 1
0003FF16 <AmiBlitz3.ab3@31815> returncode           Ds.w 1
0003FF1A <AmiBlitz3.ab3@31816> fp0iff               Ds.l 1
0003FF1E <AmiBlitz3.ab3@31817> fp0addr              Ds.l 1
0003FF20 <AmiBlitz3.ab3@31818> fp0mode              Ds.w 1
0003FF22 <AmiBlitz3.ab3@31819> fp0var               Ds.w 1
0003FF24 <AmiBlitz3.ab3@31820> fastfunc             Ds.w 1
0003FF26 <AmiBlitz3.ab3@31821> retmode              Ds.w 1
0003FF28 <AmiBlitz3.ab3@31822> parnum               Ds.w 1
0003FF2A <AmiBlitz3.ab3@31823> regmask              Ds.w 1
0003FF2C <AmiBlitz3.ab3@31824> regnumfunc           Ds.w 1
0003FF2E <AmiBlitz3.ab3@31825> libmode              Ds.w 1
0003FF32 <AmiBlitz3.ab3@31826> oldline              Ds.l 1
0003FF36 <AmiBlitz3.ab3@31827> sourceline3          Ds.l 1
0003FFFE <AmiBlitz3.ab3@31828> debugstore           Ds.b 200
00040002 <AmiBlitz3.ab3@31829> deststore            Ds.l 1
00040006 <AmiBlitz3.ab3@31831> loada                Ds.l 1
0004000A <AmiBlitz3.ab3@31833> currtype             Ds.l 1
0004000E <AmiBlitz3.ab3@31834> arrayoffset          Ds.l 1
00040012 <AmiBlitz3.ab3@31835> lastlabel            Ds.l 1
00040016 <AmiBlitz3.ab3@31836> curtemplabel         Ds.l 1
0004001A <AmiBlitz3.ab3@31837> sourceline2          Ds.l 1
0004011A <AmiBlitz3.ab3@31838> chartab              Ds.b 256
00040192 <AmiBlitz3.ab3@31839> tempspace            Ds.b 120
000C01A2 <AmiBlitz3.ab3@31840> instrtab             Ds.l 65538*2
000C81A2 <AmiBlitz3.ab3@31842> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E81A6 <AmiBlitz3.ab3@31843> replacedat           Ds.w 65538
000F01A6 <AmiBlitz3.ab3@31844> variablehash         Ds.l 8192
000F01AA <AmiBlitz3.ab3@31845> newinitaddr          Ds.l 1
000F01AE <AmiBlitz3.ab3@31846> realbssend           Ds.l 1
000F01B0 <AmiBlitz3.ab3@31847> saved0               Ds.w 1
000F0230 <AmiBlitz3.ab3@31848> lastpath             Ds.b 128
000F02B0 <AmiBlitz3.ab3@31849> lastpath2            Ds.b 128
000F0378 <AmiBlitz3.ab3@31850> fpustackbase         Ds.w 100
000F037C <AmiBlitz3.ab3@31851> 
000F037E <AmiBlitz3.ab3@31852> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000F0382 <AmiBlitz3.ab3@31853> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000F0386 <AmiBlitz3.ab3@31854> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000F038A <AmiBlitz3.ab3@31855> rightsidetype        Dc.l 0  ; same as above but right side
000F038E <AmiBlitz3.ab3@31858> trap15temp           Ds.l 1
000F0392 <AmiBlitz3.ab3@31859> trap15temp2          Ds.l 1
000F0396 <AmiBlitz3.ab3@31860> templibend           Ds.l 1
000F039A <AmiBlitz3.ab3@31861> tempdata1start       Ds.l 1
000F039E <AmiBlitz3.ab3@31862> stacktrack           Ds.l 1
000F03A2 <AmiBlitz3.ab3@31863> pad                  Ds.l 1
000F04A2 <AmiBlitz3.ab3@31864> includetemp          Ds.b 256
000F0EA2 <AmiBlitz3.ab3@31865> includetemp2         Ds.b 256*10
000F0EA4 <AmiBlitz3.ab3@31866> funccall             Ds.w 1
000F0EA8 <AmiBlitz3.ab3@31869> ptr_resfile          Ds.l 1
000F0EAA <AmiBlitz3.ab3@31870> CalculatorButtonBinFlag:    Ds.w 1
000F0EAC <AmiBlitz3.ab3@31871> CalculatorButtonDecFlag:    Ds.w 1
000F0EB0 <AmiBlitz3.ab3@31872> ped_startup_addr:    Ds.l 1
000F0EB1 <AmiBlitz3.ab3@31873> start_without_libs:  Ds.b 1
000F0EB2 <AmiBlitz3.ab3@31874> skip_bytes:          Ds.b 1
000F0EB6 <AmiBlitz3.ab3@31875> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F0EBA <AmiBlitz3.ab3@31876> beforeparameterfetch Ds.l 1
000F0EBE <AmiBlitz3.ab3@31877> typetocast           Ds.l 1
000F0EC2 <AmiBlitz3.ab3@31878> errorcounter         Ds.l 1
000F0EC3 <AmiBlitz3.ab3@31879> iserror              Ds.b 1
000F0EC4 <AmiBlitz3.ab3@31880> MorphOS:             Ds.b 1 ; added to be able to select the cacheclear function 0=AOS, 1=MorphOS  tomsmart1
000F0EC8 <AmiBlitz3.ab3@31883> CLIMode:             Dc.l 0
000F0ECC <AmiBlitz3.ab3@31884> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F0ED0 <AmiBlitz3.ab3@31885> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
