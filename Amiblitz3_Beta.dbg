00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502A <hashmap.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503C <hashmap.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00005064 <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506A <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00005084 <hashmap.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
0000509C <hashmap.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
000050AE <hashmap.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
000050BC <hashmap.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F0 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050FE <hashmap.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00005108 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511A <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00005154 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00005164 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516A <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517A <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
000051CC <hashmap.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D8 <hashmap.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E6 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F4 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00005202 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00005210 <hashmap.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00005246 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00005254 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00005264 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
0000526C <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00005270 <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000528A <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
000052A4 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
000052BE <hashmap.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
000052E8 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
000052F4 <hashmap.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00005308 <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
0000533A <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00005352 <hashmap.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
0000535E <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000536C <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005396 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C0 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000053CA <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000053D0 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053FE <hashmap.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00005416 <hashmap.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
00005434 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00005448 <hashmap.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00005460 <hashmap.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00005488 <hashmap.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
000054AE <hashmap.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
000054BC <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
000054CA <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000054DE <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005532 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000555C <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000055A0 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000055C0 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000055D2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000055F6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00005604 <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
0000565C <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A2 <hashmap.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A8 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000056B0 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000056D8 <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000056EA <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
000056FC <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00005736 <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00005746 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
0000574C <hashmap.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575C <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00005762 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00005768 <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005780 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000057BE <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000057DC <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000580E <hashmap.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00005822 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00005836 <hashmap.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000584E <hashmap.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00005876 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
00005880 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000588E <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A6 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
000058AC <hashmap.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000058B4 <hashmap.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000058D4 <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058FA <hashmap.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00005904 <hashmap.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00005912 <hashmap.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000591C <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00005948 <hashmap.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
0000595C <hashmap.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00005962 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00005970 <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000059A6 <hashmap.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000059F4 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A1C <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A36 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A48 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A52 <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A6E <hashmap.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A98 <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AB6 <hashmap.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ADA <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B08 <hashmap.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B22 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B4A <hashmap.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B68 <hashmap.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B84 <hashmap.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B92 <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BA6 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BC8 <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BEA <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BF8 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C18 <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C48 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C4E <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C82 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC4 <hashmap.include.ab3@222> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CD4 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDE <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEE <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF4 <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D00 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D06 <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D34 <hashmap.include.ab3@236> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D64 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9A <hashmap.include.ab3@239> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DAE <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DC6 <hashmap.include.ab3@241> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DEE <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E1E <hashmap.include.ab3@243> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E3A <hashmap.include.ab3@244> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E48 <hashmap.include.ab3@245> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E5C <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EB0 <hashmap.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EDA <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F1E <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F44 <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F4A <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F68 <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F86 <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FA4 <hashmap.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FAA <hashmap.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FD0 <hashmap.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FFE <hashmap.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00006026 <hashmap.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
0000604A <hashmap.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
000060A0 <hashmap.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
000060F2 <hashmap.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00006148 <hashmap.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00006158 <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
000061AA <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
000061D2 <hashmap.include.ab3@307> XINCLUDE "/Shared/preprocessor.include.ab3"
000061F8 <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006212 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000621A <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00006242 <hashmap.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00006270 <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006298 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
000062A0 <hashmap.include.ab3@316> XINCLUDE "/Shared/preprocessor.include.ab3"
000062C4 <hashmap.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000062F8 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00006314 <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000631E <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006332 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006352 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636E <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637C <hashmap.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000638A <hashmap.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00006390 <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A8 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000063B8 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000063E6 <hashmap.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00006442 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
000064BA <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00006516 <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
0000651C <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006526 <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
0000652C <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
0000655A <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
00006560 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00006580 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
0000658A <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
0000659C <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000065AC <hashmap.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000065B6 <hashmap.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D0 <hashmap.include.ab3@354> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EA <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F2 <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F8 <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006602 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000660A <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006632 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
00006638 <hashmap.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
0000664C <hashmap.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
00006688 <hashmap.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000066AE <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000066BC <hashmap.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F8 <hashmap.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000670C <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675E <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
00006772 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000677C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000067A0 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D8 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000067DE <hashmap.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EA <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
000067FE <hashmap.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
00006808 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00006830 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006858 <hashmap.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
0000686A <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006896 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000068CA <hashmap.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000068F6 <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006942 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00006952 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
00006958 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00006964 <hashmap.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
00006992 <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006994 <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
0000699A <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
000069A4 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000069CE <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
000069D8 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
000069DE <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A08 <hashmap.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A30 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A3A <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A48 <hashmap.include.ab3@420> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A58 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A62 <hashmap.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <hashmap.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A7C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A96 <preprocessor.include.ab3@29> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB0 <preprocessor.include.ab3@30> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AD2 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B04 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B08 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B22 <preprocessor.include.ab3@36> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@37> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B46 <preprocessor.include.ab3@38> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5C <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B60 <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B7A <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B94 <preprocessor.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BAE <preprocessor.include.ab3@45> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD2 <preprocessor.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BD8 <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C02 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C1C <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C2C <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C36 <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C44 <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C66 <preprocessor.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C9A <preprocessor.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CB6 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CC0 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDC <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CEA <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CFE <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D20 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D42 <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D60 <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D8E <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D94 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA4 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DA8 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@73> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DDE <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DE8 <preprocessor.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E12 <preprocessor.include.ab3@76> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E28 <preprocessor.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E38 <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E54 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E70 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E8C <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA8 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC4 <preprocessor.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EE0 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EFC <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F18 <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F34 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F50 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F6C <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F88 <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA4 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FC0 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FDC <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF8 <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00007014 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00007030 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000704C <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00007068 <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00007084 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000070A0 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
000070BC <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D8 <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F4 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007110 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
0000712C <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00007148 <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00007164 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00007180 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
0000719C <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B8 <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D4 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000071F0 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
0000720C <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
00007228 <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007244 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
00007260 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
0000727C <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
00007298 <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B4 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
000072D0 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
000072EC <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
00007308 <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007324 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007340 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000735C <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00007378 <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
00007394 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
000073B0 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000073CC <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E8 <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007404 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007420 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000743C <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00007458 <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00007474 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
00007490 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000074AC <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C8 <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E4 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007500 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
0000751C <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
00007538 <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
00007554 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
00007570 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
0000758C <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A8 <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C4 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000075E0 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
000075FC <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
00007618 <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007634 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
00007650 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
0000766C <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00007688 <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A4 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
000076C0 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
000076DC <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F8 <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007714 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007730 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
0000774C <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
00007768 <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
00007784 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000077A0 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
000077BC <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D8 <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F4 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007810 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
0000782C <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
00007848 <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
00007864 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00007880 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
0000789C <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B8 <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D4 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
000078F0 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000790C <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
00007928 <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007944 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
00007960 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
0000797C <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
00007998 <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B4 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
000079D0 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
000079EC <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A08 <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A24 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A40 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A5C <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A78 <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A94 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AB0 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ACC <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE8 <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B04 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B20 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B3C <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B58 <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B74 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B90 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BAC <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC8 <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE4 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C00 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C1C <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C38 <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C40 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C4A <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C54 <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C5A <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C88 <preprocessor.include.ab3@247> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CA4 <preprocessor.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CD6 <preprocessor.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE0 <preprocessor.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D02 <preprocessor.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D0C <preprocessor.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D16 <preprocessor.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D20 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D3A <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D68 <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D84 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D92 <preprocessor.include.ab3@261> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCC <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DD4 <preprocessor.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DEE <preprocessor.include.ab3@265> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E14 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E36 <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5A <preprocessor.include.ab3@274> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E60 <preprocessor.include.ab3@275> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6E <preprocessor.include.ab3@276> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E74 <preprocessor.include.ab3@277> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7C <preprocessor.include.ab3@278> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E82 <preprocessor.include.ab3@279> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E8A <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E9E <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EC4 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEC <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EF6 <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0A <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F1E <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F2E <preprocessor.include.ab3@289> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F48 <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F76 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F8A <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB2 <preprocessor.include.ab3@293> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FB8 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC0 <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FC6 <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FEE <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FF8 <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00008006 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00008024 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00008032 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803A <preprocessor.include.ab3@304> XINCLUDE "/Shared/preprocessor.include.ab3"
00008040 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00008054 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
0000805E <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
00008086 <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808C <preprocessor.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00008094 <preprocessor.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
0000809A <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
000080AE <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B8 <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C0 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000080D4 <preprocessor.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
000080E8 <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FC <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
0000811A <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
00008128 <preprocessor.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
00008138 <preprocessor.include.ab3@331> XINCLUDE "/Shared/preprocessor.include.ab3"
00008160 <preprocessor.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00008182 <preprocessor.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
00008196 <preprocessor.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
000081B4 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C2 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
000081E8 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008210 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008232 <preprocessor.include.ab3@342> XINCLUDE "/Shared/preprocessor.include.ab3"
00008262 <preprocessor.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
00008290 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C2 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D0 <preprocessor.include.ab3@352> XINCLUDE "/Shared/preprocessor.include.ab3"
000082D6 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
000082E6 <preprocessor.include.ab3@356> XINCLUDE "/Shared/preprocessor.include.ab3"
000082EC <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
00008312 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00008334 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837C <preprocessor.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
0000839E <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A4 <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000083B2 <preprocessor.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C0 <preprocessor.include.ab3@367> XINCLUDE "/Shared/preprocessor.include.ab3"
000083C6 <preprocessor.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CE <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
000083EC <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
00008400 <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
00008410 <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
00008426 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843E <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
0000845A <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
00008464 <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00008480 <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00008492 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000084C0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
000084FC <preprocessor.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
0000850C <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
00008512 <preprocessor.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
00008518 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008530 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008540 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000085C6 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
00008600 <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
00008636 <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00008646 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
00008654 <preprocessor.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
0000865A <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
0000866A <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008694 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
0000869A <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000086D6 <preprocessor.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E6 <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
00008704 <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008712 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00008748 <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
0000876C <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
00008780 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00008790 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000087AE <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000087BC <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E0 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
00008804 <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008812 <preprocessor.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
00008840 <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000884E <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
00008854 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
0000885A <preprocessor.include.ab3@429> XINCLUDE "/Shared/preprocessor.include.ab3"
00008868 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008896 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A4 <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
000088AA <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
000088BA <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
000088C4 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
000088D8 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
000088FE <preprocessor.include.ab3@448> XINCLUDE "/Shared/preprocessor.include.ab3"
00008920 <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
00008948 <preprocessor.include.ab3@450> XINCLUDE "/Shared/preprocessor.include.ab3"
0000894E <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
0000895C <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
00008962 <preprocessor.include.ab3@453> XINCLUDE "/Shared/preprocessor.include.ab3"
00008976 <preprocessor.include.ab3@454> XINCLUDE "/Shared/preprocessor.include.ab3"
00008986 <preprocessor.include.ab3@455> XINCLUDE "/Shared/preprocessor.include.ab3"
0000899C <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B4 <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D0 <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
000089DA <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
000089F6 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A24 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A60 <preprocessor.include.ab3@464> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A70 <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A7E <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A84 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A94 <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ABE <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AC4 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF0 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B00 <preprocessor.include.ab3@474> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B10 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B2E <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B3C <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B72 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B96 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BAA <preprocessor.include.ab3@483> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BBA <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BD8 <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BE6 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0A <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2E <preprocessor.include.ab3@489> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C34 <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C44 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4A <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C6C <preprocessor.include.ab3@499> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C74 <preprocessor.include.ab3@500> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAA <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CC6 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CCC <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D02 <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D1E <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D46 <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D64 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D82 <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DB0 <preprocessor.include.ab3@512> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E12 <preprocessor.include.ab3@513> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E2C <preprocessor.include.ab3@514> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E46 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E50 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E8E <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E92 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E9C <preprocessor.include.ab3@523> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECA <preprocessor.include.ab3@524> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EEA <preprocessor.include.ab3@525> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F02 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F60 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8C <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F9E <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FAE <preprocessor.include.ab3@530> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FC6 <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FCC <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00009006 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00009010 <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00009016 <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00009020 <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009032 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009032 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009056 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000905E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000908C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
000090BA <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000912A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009138 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009188 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009188 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009188 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009188 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
000091AC <asl.include.ab3@93> XINCLUDE "PE/logging.include.ab3"
000091D4 <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091F8 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
00009226 <asl.include.ab3@294> XINCLUDE "PE/logging.include.ab3"
00009444 <asl.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
00009472 <asl.include.ab3@298> XINCLUDE "PE/logging.include.ab3"
0000949E <asl.include.ab3@300> XINCLUDE "PE/logging.include.ab3"
000094DA <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
00009506 <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
00009532 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
0000955E <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000958A <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
000095B6 <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
000095E2 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
0000960E <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
0000963A <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
000096C4 <asl.include.ab3@311> XINCLUDE "PE/logging.include.ab3"
0000974E <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
000097EC <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
00009836 <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009876 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
0000987C <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
000098C6 <asl.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
00009906 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
00009930 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009936 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009960 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
0000998A <asl.include.ab3@325> XINCLUDE "PE/logging.include.ab3"
000099B4 <asl.include.ab3@327> XINCLUDE "PE/logging.include.ab3"
000099BE <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
000099DC <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099FE <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
00009A2C <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A5A <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A88 <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009ACE <asl.include.ab3@336> XINCLUDE "PE/logging.include.ab3"
00009B14 <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009B5A <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B92 <asl.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
00009C90 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009CAE <asl.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
00009CB8 <asl.include.ab3@345> XINCLUDE "PE/logging.include.ab3"
00009CDE <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CF0 <asl.include.ab3@348> XINCLUDE "PE/logging.include.ab3"
00009D1E <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009D46 <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D58 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009DAE <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009DE4 <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DF4 <asl.include.ab3@355> XINCLUDE "PE/logging.include.ab3"
00009DFA <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009E0C <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009E16 <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009E50 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E56 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009EAE <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009ECC <asl.include.ab3@363> XINCLUDE "PE/logging.include.ab3"
00009ED2 <asl.include.ab3@366> XINCLUDE "PE/logging.include.ab3"
00009EE2 <asl.include.ab3@369> XINCLUDE "PE/logging.include.ab3"
00009EF2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009F02 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009F12 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009F22 <asl.include.ab3@374> XINCLUDE "PE/logging.include.ab3"
00009F2C <asl.include.ab3@376> XINCLUDE "PE/logging.include.ab3"
00009F40 <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F56 <asl.include.ab3@393> XINCLUDE "PE/logging.include.ab3"
00009F7E <asl.include.ab3@395> XINCLUDE "PE/logging.include.ab3"
00009F88 <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F9A <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009FD4 <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FDE <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A008 <asl.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A020 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A072 <asl.include.ab3@438> XINCLUDE "PE/logging.include.ab3"
0000A0A0 <asl.include.ab3@440> XINCLUDE "PE/logging.include.ab3"
0000A132 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A178 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A20A <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A224 <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A224 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A23A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A250 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A266 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A27C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A288 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A294 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A2A0 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A2AC <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2D4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2FC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A324 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A348 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A36C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A386 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A396 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A39C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A39E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A3A0 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A3A8 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A3AC <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A3AE <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A3B0 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A3B2 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A3B4 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A3B6 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A3B8 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A3BA <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3CA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3E4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A402 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A408 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A422 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A43E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A464 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A484 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A48E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A4BA <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4DC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4F6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4FC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A536 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A554 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A55A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A578 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A57E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A5A0 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5C0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5F8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A614 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A61A <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A620 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A626 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A62C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A648 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A694 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A69A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6D4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6E0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6FC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A702 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A73C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A746 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A74C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A76A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A798 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A79E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A7B4 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A7BC <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A818 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A826 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A82C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A85E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A86E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A888 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A89A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8F8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A932 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A96C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A98A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A9A8 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A9BE <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9DA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9F4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA72 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA84 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA9A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAC4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AACE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AADE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAE2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AB10 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB2A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB3C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB5C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB72 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000ABAA <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABD4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000ABFE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000AC16 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC2C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC74 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC94 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC9C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACDA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACE6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACF0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000AD02 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000AD08 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000AD16 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD3E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD52 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD7A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD8E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000ADB6 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADCA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADF2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADF4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000AE18 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE50 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEDA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AF02 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF32 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF6A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFC2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000B01A <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B09A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0CE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B102 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B108 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B116 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B14A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B172 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B22A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B2AA <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2DE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B2FE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B304 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B30A <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3DA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3EE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B4A6 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B526 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B616 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B620 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B654 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B674 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B67A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B680 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B750 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B764 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B798 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7C0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B878 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8F8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B92C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B94C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B952 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B958 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA28 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA3C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAF4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB74 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BBA8 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBC8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBCE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBD4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BCA4 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BCAA <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCE4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCE6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCEC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD84 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD96 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BDAC <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BE16 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE80 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE9A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BEB6 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BED4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BEEE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BEF8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BF14 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF36 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF3C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF62 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF7E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF90 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFEE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C026 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C02C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C074 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C08E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C09C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C0A2 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C0A8 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C0BA <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C1A6 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C1AC <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1F2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C1FE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C264 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C2AA <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2F2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C35A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C360 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C39A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C3A0 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C402 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C40C <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C420 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C43A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C440 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C466 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C482 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4E0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4E4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C506 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C50C <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C528 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C548 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C586 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5D4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C60A <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C610 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C616 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C646 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C64C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C652 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C664 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6C2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6FA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C700 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C748 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C762 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C770 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C776 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C77C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C78E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C794 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C79A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7F8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C840 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C850 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C86A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C870 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C8B8 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8F6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C900 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C906 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C92C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C932 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C958 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C9B8 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9D2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9DC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9F6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000CA00 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000CA18 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA48 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA64 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA72 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA78 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CAB2 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CABC <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAC2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAE0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAE6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAF8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CB06 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB24 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB5A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB6C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CBB6 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CCA0 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CCBE <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCE4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CD00 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD2C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD36 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD64 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD7E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD9A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CDA0 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDDA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDE0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDE6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDEC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE8C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE92 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF34 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF3A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF74 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF84 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CF9E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CFBC <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFC2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFDC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFFC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D0B0 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D0B6 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D0BC <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0E6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0F2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0F8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D112 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D11A <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D122 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D138 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D150 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D162 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D16E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D174 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D17C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D1B4 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1C6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1EA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1FC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D208 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D20E <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D21E <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D23C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D24E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D29A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D2A0 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2CA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2E2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D310 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D324 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D33A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D35A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D370 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D37A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D394 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D3B6 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3CE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3F0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3F6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D428 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D43C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D454 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D48C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D4BC <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4EC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D4FE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D506 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D530 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D53A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D554 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D56E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D58C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D5AC <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5F6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D610 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D622 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D658 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D66A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D672 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D69A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D6A0 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6C8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6D8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6EC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D702 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D712 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D716 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D72C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D756 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D75E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D75E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7FC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D802 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D808 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D80E <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D848 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D87A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D888 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D8B8 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC28 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC36 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC3C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DECE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEE8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF22 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF74 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF82 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFD8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFDE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E058 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0CC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0E6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0E6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E10E <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E128 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E132 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E144 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E168 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E176 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E182 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E186 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E1A4 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1DE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1E8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1F6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E202 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E210 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E21C <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E228 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E23A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E24A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E25A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E274 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E27E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E288 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E298 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E2A2 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E2B4 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2CA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2DA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2DE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2F4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2FA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E304 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E33A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E344 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E348 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E376 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E376 <prefixtree.include.ab3@132> XINCLUDE "translation.include.ab3"
0000E390 <prefixtree.include.ab3@197> XINCLUDE "translation.include.ab3"
0000E39A <prefixtree.include.ab3@199> XINCLUDE "translation.include.ab3"
0000E3C2 <prefixtree.include.ab3@200> XINCLUDE "translation.include.ab3"
0000E3E4 <prefixtree.include.ab3@201> XINCLUDE "translation.include.ab3"
0000E400 <prefixtree.include.ab3@202> XINCLUDE "translation.include.ab3"
0000E410 <prefixtree.include.ab3@203> XINCLUDE "translation.include.ab3"
0000E414 <prefixtree.include.ab3@206> XINCLUDE "translation.include.ab3"
0000E42E <prefixtree.include.ab3@259> XINCLUDE "translation.include.ab3"
0000E44E <prefixtree.include.ab3@260> XINCLUDE "translation.include.ab3"
0000E458 <prefixtree.include.ab3@261> XINCLUDE "translation.include.ab3"
0000E472 <prefixtree.include.ab3@262> XINCLUDE "translation.include.ab3"
0000E480 <prefixtree.include.ab3@263> XINCLUDE "translation.include.ab3"
0000E48E <prefixtree.include.ab3@264> XINCLUDE "translation.include.ab3"
0000E49C <prefixtree.include.ab3@265> XINCLUDE "translation.include.ab3"
0000E4AA <prefixtree.include.ab3@266> XINCLUDE "translation.include.ab3"
0000E4B6 <prefixtree.include.ab3@267> XINCLUDE "translation.include.ab3"
0000E4C4 <prefixtree.include.ab3@268> XINCLUDE "translation.include.ab3"
0000E4D2 <prefixtree.include.ab3@269> XINCLUDE "translation.include.ab3"
0000E4E0 <prefixtree.include.ab3@270> XINCLUDE "translation.include.ab3"
0000E4EE <prefixtree.include.ab3@271> XINCLUDE "translation.include.ab3"
0000E508 <prefixtree.include.ab3@272> XINCLUDE "translation.include.ab3"
0000E516 <prefixtree.include.ab3@273> XINCLUDE "translation.include.ab3"
0000E526 <prefixtree.include.ab3@274> XINCLUDE "translation.include.ab3"
0000E536 <prefixtree.include.ab3@275> XINCLUDE "translation.include.ab3"
0000E546 <prefixtree.include.ab3@276> XINCLUDE "translation.include.ab3"
0000E554 <prefixtree.include.ab3@277> XINCLUDE "translation.include.ab3"
0000E55E <prefixtree.include.ab3@279> XINCLUDE "translation.include.ab3"
0000E564 <prefixtree.include.ab3@280> XINCLUDE "translation.include.ab3"
0000E582 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E588 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E592 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E5B2 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E5E0 <prefixtree.include.ab3@302> XINCLUDE "translation.include.ab3"
0000E5FE <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E608 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E61A <prefixtree.include.ab3@305> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@306> XINCLUDE "translation.include.ab3"
0000E65C <prefixtree.include.ab3@307> XINCLUDE "translation.include.ab3"
0000E668 <prefixtree.include.ab3@309> XINCLUDE "translation.include.ab3"
0000E674 <prefixtree.include.ab3@310> XINCLUDE "translation.include.ab3"
0000E67A <prefixtree.include.ab3@311> XINCLUDE "translation.include.ab3"
0000E680 <prefixtree.include.ab3@312> XINCLUDE "translation.include.ab3"
0000E686 <prefixtree.include.ab3@313> XINCLUDE "translation.include.ab3"
0000E6BE <prefixtree.include.ab3@314> XINCLUDE "translation.include.ab3"
0000E6C4 <prefixtree.include.ab3@316> XINCLUDE "translation.include.ab3"
0000E6CA <prefixtree.include.ab3@317> XINCLUDE "translation.include.ab3"
0000E6D4 <prefixtree.include.ab3@320> XINCLUDE "translation.include.ab3"
0000E6DA <prefixtree.include.ab3@321> XINCLUDE "translation.include.ab3"
0000E70C <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E726 <prefixtree.include.ab3@342> XINCLUDE "translation.include.ab3"
0000E73E <prefixtree.include.ab3@343> XINCLUDE "translation.include.ab3"
0000E752 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E7A2 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E7C2 <prefixtree.include.ab3@347> XINCLUDE "translation.include.ab3"
0000E7D6 <prefixtree.include.ab3@348> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@349> XINCLUDE "translation.include.ab3"
0000E7F0 <prefixtree.include.ab3@350> XINCLUDE "translation.include.ab3"
0000E7F8 <prefixtree.include.ab3@351> XINCLUDE "translation.include.ab3"
0000E800 <prefixtree.include.ab3@352> XINCLUDE "translation.include.ab3"
0000E808 <prefixtree.include.ab3@353> XINCLUDE "translation.include.ab3"
0000E810 <prefixtree.include.ab3@354> XINCLUDE "translation.include.ab3"
0000E816 <prefixtree.include.ab3@355> XINCLUDE "translation.include.ab3"
0000E824 <prefixtree.include.ab3@356> XINCLUDE "translation.include.ab3"
0000E846 <prefixtree.include.ab3@358> XINCLUDE "translation.include.ab3"
0000E872 <prefixtree.include.ab3@359> XINCLUDE "translation.include.ab3"
0000E884 <prefixtree.include.ab3@361> XINCLUDE "translation.include.ab3"
0000E88A <prefixtree.include.ab3@362> XINCLUDE "translation.include.ab3"
0000E8B2 <prefixtree.include.ab3@364> XINCLUDE "translation.include.ab3"
0000E8D6 <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E8FE <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E932 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E942 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E94C <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E95A <prefixtree.include.ab3@370> XINCLUDE "translation.include.ab3"
0000E96E <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E974 <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E994 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E99A <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E9A2 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E9DC <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000EA02 <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000EA1A <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000EA4E <prefixtree.include.ab3@381> XINCLUDE "translation.include.ab3"
0000EA56 <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000EA64 <prefixtree.include.ab3@384> XINCLUDE "translation.include.ab3"
0000EA6A <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000EA82 <prefixtree.include.ab3@387> XINCLUDE "translation.include.ab3"
0000EA88 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000EA8E <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000EAA8 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000EAAE <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000EAB4 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000EAC8 <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000EAD6 <prefixtree.include.ab3@399> XINCLUDE "translation.include.ab3"
0000EB10 <prefixtree.include.ab3@401> XINCLUDE "translation.include.ab3"
0000EB36 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000EB4E <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000EB5A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EB66 <prefixtree.include.ab3@407> XINCLUDE "translation.include.ab3"
0000EB72 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EB7E <prefixtree.include.ab3@409> XINCLUDE "translation.include.ab3"
0000EB8A <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EB94 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EB9C <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EBB6 <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EBF4 <prefixtree.include.ab3@461> XINCLUDE "translation.include.ab3"
0000EBFA <prefixtree.include.ab3@462> XINCLUDE "translation.include.ab3"
0000EC60 <prefixtree.include.ab3@463> XINCLUDE "translation.include.ab3"
0000ECA0 <prefixtree.include.ab3@465> XINCLUDE "translation.include.ab3"
0000ECF6 <prefixtree.include.ab3@466> XINCLUDE "translation.include.ab3"
0000ED68 <prefixtree.include.ab3@467> XINCLUDE "translation.include.ab3"
0000ED74 <prefixtree.include.ab3@469> XINCLUDE "translation.include.ab3"
0000ED82 <prefixtree.include.ab3@470> XINCLUDE "translation.include.ab3"
0000EDC8 <prefixtree.include.ab3@471> XINCLUDE "translation.include.ab3"
0000EE12 <prefixtree.include.ab3@472> XINCLUDE "translation.include.ab3"
0000EE4A <prefixtree.include.ab3@473> XINCLUDE "translation.include.ab3"
0000EE9E <prefixtree.include.ab3@474> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@475> XINCLUDE "translation.include.ab3"
0000EEAA <prefixtree.include.ab3@476> XINCLUDE "translation.include.ab3"
0000EEB8 <prefixtree.include.ab3@478> XINCLUDE "translation.include.ab3"
0000EEC0 <prefixtree.include.ab3@479> XINCLUDE "translation.include.ab3"
0000EEFA <prefixtree.include.ab3@481> XINCLUDE "translation.include.ab3"
0000EF20 <prefixtree.include.ab3@482> XINCLUDE "translation.include.ab3"
0000EF38 <prefixtree.include.ab3@483> XINCLUDE "translation.include.ab3"
0000EF6E <prefixtree.include.ab3@484> XINCLUDE "translation.include.ab3"
0000EF84 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EF92 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EFAA <prefixtree.include.ab3@488> XINCLUDE "translation.include.ab3"
0000EFE2 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000F008 <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000F050 <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000F056 <prefixtree.include.ab3@492> XINCLUDE "translation.include.ab3"
0000F070 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000F07C <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000F082 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000F0AE <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000F0C2 <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000F0D0 <prefixtree.include.ab3@504> XINCLUDE "translation.include.ab3"
0000F0D8 <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000F112 <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000F138 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000F150 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000F18A <prefixtree.include.ab3@510> XINCLUDE "translation.include.ab3"
0000F1B4 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000F1CC <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000F1FC <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000F228 <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F244 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F252 <prefixtree.include.ab3@517> XINCLUDE "translation.include.ab3"
0000F260 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F29E <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F2DA <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F346 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F374 <prefixtree.include.ab3@522> XINCLUDE "translation.include.ab3"
0000F3A2 <prefixtree.include.ab3@523> XINCLUDE "translation.include.ab3"
0000F3EA <prefixtree.include.ab3@524> XINCLUDE "translation.include.ab3"
0000F404 <prefixtree.include.ab3@527> XINCLUDE "translation.include.ab3"
0000F44C <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F46A <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F488 <prefixtree.include.ab3@530> XINCLUDE "translation.include.ab3"
0000F4A2 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F4AE <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F4B4 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F4E0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F4F8 <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F4FE <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F512 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F52E <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F53C <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F544 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F570 <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F598 <prefixtree.include.ab3@549> XINCLUDE "translation.include.ab3"
0000F5C0 <prefixtree.include.ab3@550> XINCLUDE "translation.include.ab3"
0000F62C <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F63C <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F668 <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F6BE <prefixtree.include.ab3@555> XINCLUDE "translation.include.ab3"
0000F6CC <prefixtree.include.ab3@556> XINCLUDE "translation.include.ab3"
0000F6DA <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F6E0 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F734 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F854 <prefixtree.include.ab3@561> XINCLUDE "translation.include.ab3"
0000F8A4 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F8FA <prefixtree.include.ab3@564> XINCLUDE "translation.include.ab3"
0000F966 <prefixtree.include.ab3@565> XINCLUDE "translation.include.ab3"
0000F96E <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F9A8 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F9CE <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F9E6 <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000FA20 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000FA4A <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000FA62 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000FA86 <prefixtree.include.ab3@578> XINCLUDE "translation.include.ab3"
0000FADA <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000FAE2 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000FAE8 <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000FB4A <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000FB76 <prefixtree.include.ab3@583> XINCLUDE "translation.include.ab3"
0000FB92 <prefixtree.include.ab3@586> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000FBBC <prefixtree.include.ab3@591> XINCLUDE "translation.include.ab3"
0000FBCA <prefixtree.include.ab3@592> XINCLUDE "translation.include.ab3"
0000FC0E <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000FC7A <prefixtree.include.ab3@594> XINCLUDE "translation.include.ab3"
0000FCA8 <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000FCBC <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000FCEE <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FD38 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FD48 <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FD7C <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FD9E <prefixtree.include.ab3@601> XINCLUDE "translation.include.ab3"
0000FDAE <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FDB6 <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FDFA <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FE66 <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FE94 <prefixtree.include.ab3@608> XINCLUDE "translation.include.ab3"
0000FEB8 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FEFC <prefixtree.include.ab3@611> XINCLUDE "translation.include.ab3"
0000FF68 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FF96 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FFC4 <prefixtree.include.ab3@614> XINCLUDE "translation.include.ab3"
0000FFCC <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FFFA <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0001006C <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
00010072 <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
000100A0 <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
00010112 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
00010130 <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
00010154 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0001016C <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
00010172 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
00010178 <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0001017A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
00010184 <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
000101B0 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
000101D2 <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
000101DA <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
000101E0 <prefixtree.include.ab3@656> XINCLUDE "translation.include.ab3"
000101EE <prefixtree.include.ab3@657> XINCLUDE "translation.include.ab3"
00010228 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
0001024E <prefixtree.include.ab3@660> XINCLUDE "translation.include.ab3"
00010266 <prefixtree.include.ab3@661> XINCLUDE "translation.include.ab3"
000102A0 <prefixtree.include.ab3@662> XINCLUDE "translation.include.ab3"
000102CA <prefixtree.include.ab3@663> XINCLUDE "translation.include.ab3"
000102E2 <prefixtree.include.ab3@665> XINCLUDE "translation.include.ab3"
000102FA <prefixtree.include.ab3@666> XINCLUDE "translation.include.ab3"
00010332 <prefixtree.include.ab3@667> XINCLUDE "translation.include.ab3"
0001033A <prefixtree.include.ab3@669> XINCLUDE "translation.include.ab3"
00010374 <prefixtree.include.ab3@671> XINCLUDE "translation.include.ab3"
00010386 <prefixtree.include.ab3@673> XINCLUDE "translation.include.ab3"
000103AC <prefixtree.include.ab3@674> XINCLUDE "translation.include.ab3"
000103C2 <prefixtree.include.ab3@675> XINCLUDE "translation.include.ab3"
000103E8 <prefixtree.include.ab3@676> XINCLUDE "translation.include.ab3"
000103FC <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
00010426 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
00010430 <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010444 <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@702> XINCLUDE "translation.include.ab3"
0001047C <prefixtree.include.ab3@704> XINCLUDE "translation.include.ab3"
0001048E <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
000104AC <prefixtree.include.ab3@706> XINCLUDE "translation.include.ab3"
000104E8 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010504 <prefixtree.include.ab3@708> XINCLUDE "translation.include.ab3"
00010524 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
0001052E <prefixtree.include.ab3@710> XINCLUDE "translation.include.ab3"
00010534 <prefixtree.include.ab3@711> XINCLUDE "translation.include.ab3"
0001053E <prefixtree.include.ab3@712> XINCLUDE "translation.include.ab3"
0001054A <prefixtree.include.ab3@714> XINCLUDE "translation.include.ab3"
00010550 <prefixtree.include.ab3@716> XINCLUDE "translation.include.ab3"
0001057E <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
000105A6 <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
000105E6 <prefixtree.include.ab3@737> XINCLUDE "translation.include.ab3"
000105FE <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
00010644 <prefixtree.include.ab3@739> XINCLUDE "translation.include.ab3"
0001066E <prefixtree.include.ab3@742> XINCLUDE "translation.include.ab3"
0001069C <prefixtree.include.ab3@743> XINCLUDE "translation.include.ab3"
000106B6 <prefixtree.include.ab3@942> XINCLUDE "translation.include.ab3"
000106BE <prefixtree.include.ab3@943> XINCLUDE "translation.include.ab3"
000106D6 <prefixtree.include.ab3@944> XINCLUDE "translation.include.ab3"
000106E0 <prefixtree.include.ab3@945> XINCLUDE "translation.include.ab3"
000106F2 <prefixtree.include.ab3@946> XINCLUDE "translation.include.ab3"
0001072A <prefixtree.include.ab3@947> XINCLUDE "translation.include.ab3"
00010738 <prefixtree.include.ab3@948> XINCLUDE "translation.include.ab3"
00010744 <prefixtree.include.ab3@949> XINCLUDE "translation.include.ab3"
00010760 <prefixtree.include.ab3@950> XINCLUDE "translation.include.ab3"
00010782 <prefixtree.include.ab3@951> XINCLUDE "translation.include.ab3"
000107A4 <prefixtree.include.ab3@952> XINCLUDE "translation.include.ab3"
000107C6 <prefixtree.include.ab3@953> XINCLUDE "translation.include.ab3"
000107E8 <prefixtree.include.ab3@954> XINCLUDE "translation.include.ab3"
00010804 <prefixtree.include.ab3@955> XINCLUDE "translation.include.ab3"
00010822 <prefixtree.include.ab3@956> XINCLUDE "translation.include.ab3"
00010836 <prefixtree.include.ab3@957> XINCLUDE "translation.include.ab3"
0001083C <prefixtree.include.ab3@959> XINCLUDE "translation.include.ab3"
0001083E <prefixtree.include.ab3@961> XINCLUDE "translation.include.ab3"
00010844 <prefixtree.include.ab3@962> XINCLUDE "translation.include.ab3"
0001084E <prefixtree.include.ab3@964> XINCLUDE "translation.include.ab3"
00010854 <prefixtree.include.ab3@965> XINCLUDE "translation.include.ab3"
00010872 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010878 <prefixtree.include.ab3@984> XINCLUDE "translation.include.ab3"
0001089C <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
000108BA <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
000108E8 <prefixtree.include.ab3@987> XINCLUDE "translation.include.ab3"
00010916 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
00010944 <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
00010972 <prefixtree.include.ab3@990> XINCLUDE "translation.include.ab3"
000109A6 <prefixtree.include.ab3@991> XINCLUDE "translation.include.ab3"
000109B6 <prefixtree.include.ab3@992> XINCLUDE "translation.include.ab3"
000109C0 <prefixtree.include.ab3@994> XINCLUDE "translation.include.ab3"
000109C6 <prefixtree.include.ab3@995> XINCLUDE "translation.include.ab3"
000109C6 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
00010A10 <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A30 <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A3A <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A4E <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A94 <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010ADA <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010B20 <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B2A <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B46 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B70 <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BEE <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C6C <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CEA <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D68 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DE6 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E64 <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EE2 <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F60 <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FDE <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
0001105C <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110E0 <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
00011110 <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
0001116C <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011198 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
00011262 <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
00011270 <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
000112AE <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
00011332 <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
0001135C <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
0001137A <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
00011394 <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
0001139E <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
000113AA <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
000113BA <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113CA <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113DA <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113EA <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113EE <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
0001142C <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
00011484 <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114E0 <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
0001156A <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115E8 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
00011602 <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
00011630 <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
0001166C <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
0001173A <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
00011808 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
00011854 <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118D2 <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
00011950 <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
000119AE <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A44 <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A7C <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011ADA <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B62 <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B6A <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BD4 <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C40 <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C7E <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011D06 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D32 <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D8E <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E56 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011EBA <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011EC0 <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011EF4 <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011FC2 <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
00012090 <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
000120BA <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120D8 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
00012106 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
00012142 <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
000121B2 <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
000121BA <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
0001220C <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
00012234 <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
0001224C <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
00012300 <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
0001230E <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
00012364 <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
000123C2 <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123C8 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
0001244C <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124D0 <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
00012554 <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125D2 <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
00012650 <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126CE <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
0001274C <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127CA <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012848 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128C6 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128F0 <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
0001290E <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
0001293C <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
00012980 <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012986 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
000129A0 <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
000129BC <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129F0 <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
00012A14 <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A3C <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012AA8 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012B06 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B64 <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012BB0 <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012C0A <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012C10 <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012C16 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012C20 <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C2A <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C44 <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C72 <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C78 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012CBC <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CD6 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CE6 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CF0 <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CFC <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012D06 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D2A <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D72 <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012DBA <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012E02 <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012E18 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E2C <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E36 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E40 <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E5A <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E84 <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EC8 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EE2 <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F40 <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F5A <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F72 <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F7C <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F98 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012FA6 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012FB2 <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FFE <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
00013050 <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
000130A2 <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
000130B6 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130C6 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130CC <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130CE <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130D4 <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130DE <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130E8 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
00013102 <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
0001312C <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
00013142 <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
0001314C <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
000131C4 <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
00013200 <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
00013210 <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
00013230 <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
00013250 <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
00013270 <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
000132A6 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132CE <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
00013306 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
0001336A <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
0001338A <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
00013406 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
0001343E <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
000134B4 <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134D4 <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
00013550 <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013588 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135FE <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
0001361E <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
0001369A <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136C6 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136CE <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
00013714 <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
00013734 <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
0001373E <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013756 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013766 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
0001379E <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137D0 <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137E2 <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
00013864 <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
0001386E <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
000138A0 <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138D2 <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138FE <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
0001392A <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
0001394C <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013956 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
00013970 <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
00013970 <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013986 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
000139A2 <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
000139A4 <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139D2 <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139D2 <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139D2 <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139EC <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139F6 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
00013A18 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A30 <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A4A <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A7C <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A86 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A8C <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A9E <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013B12 <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013B18 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B52 <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B5C <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B62 <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B78 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B82 <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B9A <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B9C <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BCA <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BE4 <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BFA <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C2E <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C32 <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C4C <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C62 <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C96 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C9A <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013CB4 <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CCA <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CFE <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013D02 <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013D1C <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D32 <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D66 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D6A <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D84 <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D9A <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DCE <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DD2 <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DE8 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DFE <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013E0C <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013E1A <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013E24 <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E36 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E48 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E4E <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E88 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E8C <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013EA2 <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013EB8 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013EC4 <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013ED0 <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013ED8 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EE0 <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EE4 <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013F0E <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F3A <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F4C <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F64 <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F7A <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F80 <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013FB6 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FEE <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014026 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
0001405E <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014096 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140CE <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
00014106 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
0001413E <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014176 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
000141AE <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141E6 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
0001421E <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014256 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
0001428A <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
00014294 <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
0001429E <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
000142A8 <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142D2 <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142DC <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142E0 <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
00014314 <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
00014332 <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
0001433C <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
00014348 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
0001434E <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
0001435A <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
00014360 <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001436C <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
00014372 <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
00014378 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
000143B2 <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
000143B8 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143CE <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143D8 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143DE <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143E4 <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143E5 <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143E6 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143E7 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143E8 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143EA <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
000143EE <CLIModeSupport.ab3@120> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000143F4 <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143F6 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143FE <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
00014404 <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
00014406 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
0001440C <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
00014412 <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
00014416 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
00014418 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
0001441C <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
0001441E <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
00014420 <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
00014422 <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
00014426 <CLIModeSupport.ab3@169> XINCLUDE "CLIModeSupport.ab3"
00014428 <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
0001442E <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
00014434 <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
00014436 <CLIModeSupport.ab3@175> XINCLUDE "CLIModeSupport.ab3"
0001443A <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
0001443E <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
00014444 <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
0001444A <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
0001444E <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
00014452 <CLIModeSupport.ab3@183> XINCLUDE "CLIModeSupport.ab3"
00014458 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
0001445C <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
00014462 <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
00014468 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
0001446C <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
00014472 <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
0001447C <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
00014480 <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
00014484 <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014488 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
00014494 <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@211> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@212> XINCLUDE "CLIModeSupport.ab3"
000144AC <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
000144B2 <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
000144B6 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
000144BC <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
000144BE <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
000144C2 <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
000144C6 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
000144CA <CLIModeSupport.ab3@224> XINCLUDE "CLIModeSupport.ab3"
000144CE <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000144D2 <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000144D6 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
000144DA <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
000144DE <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
000144E4 <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
000144E6 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000144EA <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
000144EE <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
000144F2 <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000144F6 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000144FA <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144FE <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
00014502 <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
00014506 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
0001450A <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
00014512 <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
00014516 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
0001451A <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
00014522 <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014526 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
0001452A <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
0001452E <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
00014534 <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014536 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
0001453A <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
0001453E <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
00014544 <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
0001454A <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
00014552 <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014558 <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
0001455C <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00014566 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014568 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
0001456E <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
00014570 <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
00014574 <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
0001457A <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
0001457C <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
00014580 <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
0001458A <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
0001458E <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
00014590 <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014596 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
0001459C <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
0001459E <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
000145A2 <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
000145A8 <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
000145AA <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
000145AE <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
000145B2 <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
000145B8 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
000145BE <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
000145C2 <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
000145C6 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
000145CC <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000145D0 <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
000145D6 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
000145DA <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
000145DE <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000145E0 <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
000145EA <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000145FA <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
0001460A <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
0001460C <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
00014614 <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
00014618 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
0001461C <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
00014622 <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
00014624 <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00014628 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
0001462C <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
00014634 <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00014636 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
00014648 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
0001464C <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
00014650 <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
00014654 <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00014658 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
0001465C <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
0001465E <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
00014662 <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00014666 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00014668 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
0001466A <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
00014680 <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014686 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
000146C4 <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
000146C8 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
000146D2 <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
000146D4 <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
00014708 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
00014718 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
0001471A <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
00014752 <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
0001478A <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
000147C2 <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000147CC <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
000147D2 <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
000147E8 <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00014826 <CLIModeSupport.ab3@404> XINCLUDE "CLIModeSupport.ab3"
0001482A <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
00014832 <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
00014870 <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
00014872 <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00014876 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
000148B4 <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
000148B8 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
000148F6 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
000148FA <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
00014924 <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
0001492E <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
00014942 <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00014968 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
0001496E <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
0001497C <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
00014982 <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
000149BA <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
000149BE <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000149E8 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
000149EE <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
00014A0E <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
00014A18 <CLIModeSupport.ab3@434> XINCLUDE "CLIModeSupport.ab3"
00014A1C <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
00014A1E <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
00014A3C <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
00014A3E <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00014A44 <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
00014A4A <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
00014A74 <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00014A76 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00014AA4 <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00014AA8 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00014AD6 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00014B00 <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00014B10 <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00014B16 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00014B1C <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00014B56 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
00014B60 <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
00014B7A <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00014B98 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00014BA0 <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00014BA6 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014BAC <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00014BCE <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00014BE6 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00014C0C <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00014C36 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014C44 <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00014C4A <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
00014C5E <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00014C76 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00014C84 <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00014C98 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00014CCE <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00014CDC <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00014D0C <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00014D1A <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014D20 <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014D2E <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014D34 <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014D3A <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014D48 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014D4A <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014D50 <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00014D66 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014D70 <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014D76 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014DA0 <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014DDE <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014DE2 <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014E20 <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014E24 <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014E62 <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00014E66 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014E6E <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00014E76 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00014EBA <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00014ECC <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
00014EDA <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
00014F0E <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
00014F32 <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00014F3C <CLIModeSupport.ab3@521> XINCLUDE "CLIModeSupport.ab3"
00014F56 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00014F6A <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014FC2 <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
00015062 <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
0001506A <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
000150A2 <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
000150A8 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
000150B8 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
000150E0 <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
00015108 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
00015110 <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
00015116 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
0001511E <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00015126 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
0001514E <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00015156 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
0001515E <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
00015164 <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
0001516A <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
00015170 <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00015176 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
0001517C <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
00015182 <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00015188 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
0001518E <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00015196 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
0001519E <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
000151C6 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
000151CC <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
000151D2 <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
000151DA <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
000151FA <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
0001520A <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
0001521A <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
0001522A <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
0001523A <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
0001524A <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
0001525A <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
0001526A <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
0001527A <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
0001528A <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
0001529A <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
000152AA <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
000152BA <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000152CA <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000152DA <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000152EA <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
000152FA <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
0001530C <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
0001531E <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
00015330 <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
00015342 <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
00015354 <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00015366 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
00015384 <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
0001538A <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
00015390 <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
000153BA <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
000153CC <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
00015400 <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
00015418 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
00015464 <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
00015476 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
000154CC <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
0001553E <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
00015544 <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00015578 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
000155A0 <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
000155C8 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
00015602 <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
0001561A <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
0001569E <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
000156B8 <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
00015706 <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
00015716 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
0001571E <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
00015732 <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00015778 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
0001577E <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
000157C8 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
00015832 <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
00015898 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
000158CC <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000158F8 <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00015946 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
0001596A <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
00015970 <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
0001597E <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
000159DC <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
00015A3A <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
00015A64 <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00015A6E <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00015A76 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00015AB4 <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00015B00 <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00015B12 <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00015B68 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015BE0 <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015BE6 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00015C1A <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015C42 <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00015C78 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
00015C86 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
00015C94 <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00015D08 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
00015D0E <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00015D58 <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00015DA2 <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00015DD2 <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00015E02 <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
00015E2C <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015E7E <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00015ED4 <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00015F24 <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00015F8A <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00015FF6 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00016022 <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
00016052 <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000160CE <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
000160FE <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
0001612E <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
0001615E <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
0001618E <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
000161BE <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
000161EE <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
0001621E <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
0001624E <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
0001627E <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
000162AE <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
0001632A <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
0001635C <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
0001638E <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
000163BE <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
000163C4 <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
00016438 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
000164A4 <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
000164B6 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000164E4 <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
0001650C <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
00016520 <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
0001654A <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
0001658E <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
0001659E <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
000165AE <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
000165B4 <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
000165C4 <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000165D2 <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
000165DC <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
00016614 <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
0001664C <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
00016684 <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
00016694 <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
000166FC <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
00016734 <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
00016744 <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
00016754 <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
000167BC <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
00016824 <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
0001688C <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
000168F4 <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
0001695C <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
000169C4 <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00016A2C <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00016A94 <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00016AA4 <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00016ADC <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00016B16 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00016B50 <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00016B88 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00016BA4 <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00016BDC <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016C02 <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00016C0A <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00016C12 <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016C1A <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016C22 <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00016C36 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
00016C64 <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016C7E <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016C8C <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00016CF8 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00016D1E <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016D3A <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00016D44 <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00016D4E <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00016D5A <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00016D68 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00016D74 <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016DB0 <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00016DCA <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
00016DD8 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
00016DF8 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016E06 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016E14 <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00016E1A <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
00016E2A <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016E2E <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00016E62 <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
00016E96 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
00016E9A <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00016ECE <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00016ED2 <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00016F06 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
00016F0C <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00016F42 <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00016F78 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
00016FAE <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00016FE6 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
0001701E <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
000170BE <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
000170FE <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
00017134 <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
0001716A <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
000171A2 <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
000171C0 <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
000171C4 <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
000171CA <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000171D0 <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
000171D4 <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000171FE <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
00017212 <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
00017250 <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
00017284 <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
000172BA <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
00017312 <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
00017340 <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
00017344 <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
0001737A <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
000173A8 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
000173D6 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
000173DA <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
00017410 <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
0001743E <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
00017442 <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
000174A6 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
000174AC <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
000174E6 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
000174F0 <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
000174FA <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
00017514 <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
0001753E <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
00017544 <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
00017564 <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
0001756E <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
00017572 <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
00017574 <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
00017592 <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
00017594 <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
0001759A <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
000175A0 <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
000175CA <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
000175CC <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
000175FA <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
000175FE <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
0001762C <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00017656 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00017666 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
0001766C <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
00017672 <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
000176AC <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
000176B6 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
000176D0 <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
000176EE <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
00017718 <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00017746 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
000177D6 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
000177E0 <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000177F4 <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
00017830 <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
0001786C <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
000178A8 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
000178E4 <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
00017920 <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00017926 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
00017960 <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
00017972 <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
00017982 <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
0001798E <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
000179A8 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
000179AA <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
000179C8 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
000179CE <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
000179F8 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
000179FA <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
00017A04 <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
00017A0A <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
00017A1C <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
00017A56 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017A70 <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
00017A84 <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00017AEE <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00017AF4 <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017B5E <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017B72 <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
00017BDC <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00017C12 <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
00017C18 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00017C82 <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
00017C96 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00017CCC <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017CD2 <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00017D08 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00017D1C <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
00017D86 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00017D8C <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00017DF6 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00017E0A <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00017E40 <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00017E46 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00017E7C <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00017E96 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017EAA <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017F14 <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017F1A <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00017F84 <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017F98 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00018002 <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00018008 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
00018072 <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00018086 <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
000180F0 <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
000180F6 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
00018160 <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
00018174 <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
000181DE <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
000181E4 <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
0001824E <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
00018260 <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
00018270 <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
0001827A <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
000182E4 <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
000182EA <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
00018354 <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
0001835E <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
000183C8 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
000183FE <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
00018404 <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
0001846E <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
000184A4 <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
000184AC <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
000184DA <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
000184DE <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
00018506 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
0001850C <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
00018512 <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
00018518 <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
0001851E <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
00018524 <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
0001852E <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
00018538 <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
00018566 <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
00018592 <CLIModeSupport.ab3@1001> XINCLUDE "CLIModeSupport.ab3"
0001859A <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
00018600 <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
00018634 <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
0001863A <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
000186BA <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
000186CC <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
00018732 <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
00018798 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
0001879E <CLIModeSupport.ab3@1013> XINCLUDE "CLIModeSupport.ab3"
000187A6 <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
000187A8 <CLIModeSupport.ab3@1018> XINCLUDE "CLIModeSupport.ab3"
000187C6 <CLIModeSupport.ab3@1019> XINCLUDE "CLIModeSupport.ab3"
00018804 <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
00018842 <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
00018848 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
0001884E <CLIModeSupport.ab3@1024> XINCLUDE "CLIModeSupport.ab3"
00018854 <CLIModeSupport.ab3@1025> XINCLUDE "CLIModeSupport.ab3"
0001885E <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
00018864 <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
0001886A <CLIModeSupport.ab3@1030> XINCLUDE "CLIModeSupport.ab3"
00018870 <CLIModeSupport.ab3@1031> XINCLUDE "CLIModeSupport.ab3"
00018876 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
0001887A <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
00018884 <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
00018888 <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
000188B2 <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
000188B4 <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
000188BA <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
000188BE <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
000188C4 <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000188C8 <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000188D8 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
00018932 <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
00018944 <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
000189AE <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
000189B4 <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
000189FE <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
00018A10 <CLIModeSupport.ab3@1055> XINCLUDE "CLIModeSupport.ab3"
00018A3C <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
00018AE2 <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
00018B00 <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
00018B06 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
00018B30 <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
00018B3A <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
00018B6C <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018B86 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
00018B9A <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
00018BA6 <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
00018BC0 <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
00018BCA <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
00018BE4 <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
00018C0E <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
00018C32 <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
00018C70 <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
00018C74 <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
00018CB2 <CLIModeSupport.ab3@1084> XINCLUDE "CLIModeSupport.ab3"
00018CB6 <CLIModeSupport.ab3@1085> XINCLUDE "CLIModeSupport.ab3"
00018CF4 <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
00018D32 <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
00018D34 <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
00018D68 <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
00018D6E <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
00018DB2 <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
00018DC4 <CLIModeSupport.ab3@1095> XINCLUDE "CLIModeSupport.ab3"
00018DCC <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
00018DD2 <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
00018DDC <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
00018DEA <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018DF0 <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
00018E18 <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
00018E32 <CLIModeSupport.ab3@1104> XINCLUDE "CLIModeSupport.ab3"
00018E3C <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
00018E42 <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
00018E60 <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
00018E6A <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
00018E70 <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
00018E76 <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
00018E80 <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
00018E8E <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
00018E94 <CLIModeSupport.ab3@1114> XINCLUDE "CLIModeSupport.ab3"
00018EA4 <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018ED0 <CLIModeSupport.ab3@1117> XINCLUDE "CLIModeSupport.ab3"
00018EE6 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00018EF0 <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018EF6 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018F4E <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
00018FBC <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00018FD4 <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018FDA <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00019012 <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
00019040 <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
0001906A <CLIModeSupport.ab3@1130> XINCLUDE "CLIModeSupport.ab3"
00019074 <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
0001909C <CLIModeSupport.ab3@1133> XINCLUDE "CLIModeSupport.ab3"
000190C6 <CLIModeSupport.ab3@1134> XINCLUDE "CLIModeSupport.ab3"
00019168 <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
00019176 <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
000191C6 <CLIModeSupport.ab3@1137> XINCLUDE "CLIModeSupport.ab3"
000191D6 <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
0001929E <CLIModeSupport.ab3@1139> XINCLUDE "CLIModeSupport.ab3"
000192D2 <CLIModeSupport.ab3@1141> XINCLUDE "CLIModeSupport.ab3"
00019306 <CLIModeSupport.ab3@1142> XINCLUDE "CLIModeSupport.ab3"
0001933A <CLIModeSupport.ab3@1143> XINCLUDE "CLIModeSupport.ab3"
0001936E <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
000193A2 <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
000193D6 <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
0001940A <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
0001943E <CLIModeSupport.ab3@1148> XINCLUDE "CLIModeSupport.ab3"
00019440 <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
0001947E <CLIModeSupport.ab3@1151> XINCLUDE "CLIModeSupport.ab3"
00019482 <CLIModeSupport.ab3@1152> XINCLUDE "CLIModeSupport.ab3"
000194C0 <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
000194FE <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
00019500 <CLIModeSupport.ab3@1157> XINCLUDE "CLIModeSupport.ab3"
00019506 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
0001950A <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
0001950C <CLIModeSupport.ab3@1161> XINCLUDE "CLIModeSupport.ab3"
0001954A <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00019588 <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
0001958A <CLIModeSupport.ab3@1164> XINCLUDE "CLIModeSupport.ab3"
0001958C <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
0001958E <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
00019594 <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00019598 <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
000195A8 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
000195C0 <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
000195D8 <CLIModeSupport.ab3@1172> XINCLUDE "CLIModeSupport.ab3"
000195F0 <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
0001961A <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
00019644 <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
00019672 <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00019676 <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
0001969E <CLIModeSupport.ab3@1180> XINCLUDE "CLIModeSupport.ab3"
000196A0 <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
000196DE <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
000196E2 <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
00019720 <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
00019724 <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
00019762 <CLIModeSupport.ab3@1186> XINCLUDE "CLIModeSupport.ab3"
00019766 <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
000197A4 <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
000197A8 <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
000197CE <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000197F4 <CLIModeSupport.ab3@1193> XINCLUDE "CLIModeSupport.ab3"
0001981A <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
00019840 <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
00019866 <CLIModeSupport.ab3@1196> XINCLUDE "CLIModeSupport.ab3"
000198BC <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
00019912 <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
00019960 <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
000199B6 <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
000199DC <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
00019A02 <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
00019A28 <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
00019A7E <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019ACC <CLIModeSupport.ab3@1205> XINCLUDE "CLIModeSupport.ab3"
00019B1A <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
00019BD4 <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
00019C2A <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
00019C50 <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019C76 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
00019C9C <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
00019CF2 <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
00019D48 <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
00019D96 <CLIModeSupport.ab3@1214> XINCLUDE "CLIModeSupport.ab3"
00019DE4 <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
00019E32 <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019E80 <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
00019ECE <CLIModeSupport.ab3@1218> XINCLUDE "CLIModeSupport.ab3"
00019F1C <CLIModeSupport.ab3@1219> XINCLUDE "CLIModeSupport.ab3"
00019F6A <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
00019F90 <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
00019FB6 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
00019FDC <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
0001A02A <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
0001A078 <CLIModeSupport.ab3@1225> XINCLUDE "CLIModeSupport.ab3"
0001A0CE <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
0001A11C <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
0001A16A <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
0001A1B8 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
0001A1DE <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
0001A204 <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
0001A22A <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
0001A262 <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
0001A28A <CLIModeSupport.ab3@1234> XINCLUDE "CLIModeSupport.ab3"
0001A29E <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
0001A312 <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
0001A358 <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
0001A406 <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
0001A472 <CLIModeSupport.ab3@1239> XINCLUDE "CLIModeSupport.ab3"
0001A482 <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
0001A4A8 <CLIModeSupport.ab3@1242> XINCLUDE "CLIModeSupport.ab3"
0001A4B2 <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
0001A4DC <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
0001A4E2 <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
0001A4F2 <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
0001A592 <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
0001A5D2 <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
0001A5D8 <CLIModeSupport.ab3@1253> XINCLUDE "CLIModeSupport.ab3"
0001A63A <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
0001A644 <CLIModeSupport.ab3@1256> XINCLUDE "CLIModeSupport.ab3"
0001A64E <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
0001A668 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
0001A68A <CLIModeSupport.ab3@1335> XINCLUDE "CLIModeSupport.ab3"
0001A6AC <CLIModeSupport.ab3@1336> XINCLUDE "CLIModeSupport.ab3"
0001A706 <CLIModeSupport.ab3@1337> XINCLUDE "CLIModeSupport.ab3"
0001A728 <CLIModeSupport.ab3@1338> XINCLUDE "CLIModeSupport.ab3"
0001A74A <CLIModeSupport.ab3@1339> XINCLUDE "CLIModeSupport.ab3"
0001A7A4 <CLIModeSupport.ab3@1340> XINCLUDE "CLIModeSupport.ab3"
0001A7E6 <CLIModeSupport.ab3@1341> XINCLUDE "CLIModeSupport.ab3"
0001A7EC <CLIModeSupport.ab3@1343> XINCLUDE "CLIModeSupport.ab3"
0001A7FA <CLIModeSupport.ab3@1344> XINCLUDE "CLIModeSupport.ab3"
0001A800 <CLIModeSupport.ab3@1346> XINCLUDE "CLIModeSupport.ab3"
0001A814 <CLIModeSupport.ab3@1347> XINCLUDE "CLIModeSupport.ab3"
0001A81E <CLIModeSupport.ab3@1348> XINCLUDE "CLIModeSupport.ab3"
0001A898 <CLIModeSupport.ab3@1349> XINCLUDE "CLIModeSupport.ab3"
0001A8A2 <CLIModeSupport.ab3@1350> XINCLUDE "CLIModeSupport.ab3"
0001A8A8 <CLIModeSupport.ab3@1351> XINCLUDE "CLIModeSupport.ab3"
0001A8BC <CLIModeSupport.ab3@1354> XINCLUDE "CLIModeSupport.ab3"
0001A8C6 <CLIModeSupport.ab3@1355> XINCLUDE "CLIModeSupport.ab3"
0001A946 <CLIModeSupport.ab3@1356> XINCLUDE "CLIModeSupport.ab3"
0001A950 <CLIModeSupport.ab3@1357> XINCLUDE "CLIModeSupport.ab3"
0001A956 <CLIModeSupport.ab3@1358> XINCLUDE "CLIModeSupport.ab3"
0001A96A <CLIModeSupport.ab3@1361> XINCLUDE "CLIModeSupport.ab3"
0001A974 <CLIModeSupport.ab3@1362> XINCLUDE "CLIModeSupport.ab3"
0001A9BC <CLIModeSupport.ab3@1363> XINCLUDE "CLIModeSupport.ab3"
0001A9CA <CLIModeSupport.ab3@1364> XINCLUDE "CLIModeSupport.ab3"
0001A9F0 <CLIModeSupport.ab3@1365> XINCLUDE "CLIModeSupport.ab3"
0001A9FA <CLIModeSupport.ab3@1366> XINCLUDE "CLIModeSupport.ab3"
0001AA64 <CLIModeSupport.ab3@1367> XINCLUDE "CLIModeSupport.ab3"
0001AB36 <CLIModeSupport.ab3@1368> XINCLUDE "CLIModeSupport.ab3"
0001AB40 <CLIModeSupport.ab3@1369> XINCLUDE "CLIModeSupport.ab3"
0001AB46 <CLIModeSupport.ab3@1370> XINCLUDE "CLIModeSupport.ab3"
0001AB50 <CLIModeSupport.ab3@1372> XINCLUDE "CLIModeSupport.ab3"
0001AB56 <CLIModeSupport.ab3@1373> XINCLUDE "CLIModeSupport.ab3"
0001AB6A <CLIModeSupport.ab3@1376> XINCLUDE "CLIModeSupport.ab3"
0001AB74 <CLIModeSupport.ab3@1377> XINCLUDE "CLIModeSupport.ab3"
0001ABBC <CLIModeSupport.ab3@1378> XINCLUDE "CLIModeSupport.ab3"
0001ABC6 <CLIModeSupport.ab3@1379> XINCLUDE "CLIModeSupport.ab3"
0001ABCC <CLIModeSupport.ab3@1380> XINCLUDE "CLIModeSupport.ab3"
0001ABE0 <CLIModeSupport.ab3@1383> XINCLUDE "CLIModeSupport.ab3"
0001AC06 <CLIModeSupport.ab3@1384> XINCLUDE "CLIModeSupport.ab3"
0001AC1A <CLIModeSupport.ab3@1387> XINCLUDE "CLIModeSupport.ab3"
0001AC40 <CLIModeSupport.ab3@1388> XINCLUDE "CLIModeSupport.ab3"
0001AC54 <CLIModeSupport.ab3@1391> XINCLUDE "CLIModeSupport.ab3"
0001AC7A <CLIModeSupport.ab3@1392> XINCLUDE "CLIModeSupport.ab3"
0001AC8E <CLIModeSupport.ab3@1395> XINCLUDE "CLIModeSupport.ab3"
0001AC98 <CLIModeSupport.ab3@1396> XINCLUDE "CLIModeSupport.ab3"
0001ACC6 <CLIModeSupport.ab3@1397> XINCLUDE "CLIModeSupport.ab3"
0001AD16 <CLIModeSupport.ab3@1398> XINCLUDE "CLIModeSupport.ab3"
0001AD36 <CLIModeSupport.ab3@1399> XINCLUDE "CLIModeSupport.ab3"
0001AD4E <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001AE32 <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001AE3C <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001AE42 <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001AE44 <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001AE58 <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001AE8A <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001AE90 <CLIModeSupport.ab3@1410> XINCLUDE "CLIModeSupport.ab3"
0001AED4 <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001AEE6 <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001AEF8 <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001AF02 <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001AF08 <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001AF12 <CLIModeSupport.ab3@1417> XINCLUDE "CLIModeSupport.ab3"
0001AF2C <CLIModeSupport.ab3@1418> XINCLUDE "CLIModeSupport.ab3"
0001AF2C <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001AFAC <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001AFE4 <AmiBlitz3.ab3@99> If dynassign <> ""
0001AFFA <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001B004 <AmiBlitz3.ab3@101>     If *AssignSema
0001B014 <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001B01A <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B03A <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B044 <AmiBlitz3.ab3@105>       If *AssignSema
0001B054 <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B088 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B09A <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B0D6 <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B0E2 <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B0EE <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B0FE <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B10E <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B15A <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B1BA <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B24E <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B286 <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B308 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B38A <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B40C <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B48E <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B510 <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B584 <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B5F8 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B66C <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B69A <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B6BE <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B6EC <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B71A <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B7E4 <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B81C <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B85A <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B86A <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B870 <AmiBlitz3.ab3@152> Else
0001B880 <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B8A6 <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B8B2 <AmiBlitz3.ab3@160> dbg_fid.l = -1 ; no debug file id yet!
0001B8C4 <AmiBlitz3.ab3@163> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B8CE <AmiBlitz3.ab3@165> If CLIMode
0001B8D4 <AmiBlitz3.ab3@168>   err.l      = False                                       ; indicate that an error has occured
0001B8DA <AmiBlitz3.ab3@169>   showhelp.l = False                                       ; show the CLI tool's help
0001B932 <AmiBlitz3.ab3@172>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001B95A <AmiBlitz3.ab3@173>   cli_sourcefile.s    = ""
0001B982 <AmiBlitz3.ab3@174>   cli_exefile.s       = ""
0001B9AA <AmiBlitz3.ab3@175>   cli_savefile.s      = ""
0001B9D2 <AmiBlitz3.ab3@176>   cli_dumpfile.s      = ""
0001B9FA <AmiBlitz3.ab3@177>   cli_includepath.s   = ""
0001BA22 <AmiBlitz3.ab3@178>   cli_blitzlibpath.s  = ""
0001BA28 <AmiBlitz3.ab3@179>   cli_debuginfo.l     = False
0001BA2E <AmiBlitz3.ab3@180>   cli_run.l           = False
0001BA36 <AmiBlitz3.ab3@181>   cli_dumpflags.l     = $FFFFFFFF
0001BA5E <AmiBlitz3.ab3@182>   cli_info.s          = ""
0001BA64 <AmiBlitz3.ab3@183>   cli_release.l       = False
0001BA6E <AmiBlitz3.ab3@184>   cli_numargs.l       = dos_GetNumArgs{}
0001BA74 <AmiBlitz3.ab3@185>   cli_gui.l           = False
0001BA7C <AmiBlitz3.ab3@186>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BA84 <AmiBlitz3.ab3@187>   cli_verbose.l       = 1
0001BA8C <AmiBlitz3.ab3@188>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BA94 <AmiBlitz3.ab3@189>   cli_comstrbufsize.l = 0
0001BA9C <AmiBlitz3.ab3@190>   cli_exestacksize.l  = 0
0001BAA4 <AmiBlitz3.ab3@191>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BABC <AmiBlitz3.ab3@192>   If cli_numargs=0 Then showhelp=True
0001BAEC <AmiBlitz3.ab3@196>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BB38 <AmiBlitz3.ab3@197>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BC00 <AmiBlitz3.ab3@198>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BC36 <AmiBlitz3.ab3@199>     Select larg
0001BC82 <AmiBlitz3.ab3@200>       Case "s" : larg="source"
0001BCD4 <AmiBlitz3.ab3@201>       Case "e" : larg="exe"
0001BD26 <AmiBlitz3.ab3@202>       Case "d" : larg="debug"
0001BD78 <AmiBlitz3.ab3@203>       Case "r" : larg="release"
0001BDCA <AmiBlitz3.ab3@204>       Case "h" : larg="help"
0001BE1C <AmiBlitz3.ab3@205>       Case "v" : larg="verbose"
0001BE2A <AmiBlitz3.ab3@206>     End Select
0001BE60 <AmiBlitz3.ab3@208>     Select larg
0001BEB4 <AmiBlitz3.ab3@209>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001BF0E <AmiBlitz3.ab3@210>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001BF68 <AmiBlitz3.ab3@211>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001BF98 <AmiBlitz3.ab3@212>       Case "debug"    : cli_debuginfo   = True
0001BFC8 <AmiBlitz3.ab3@213>       Case "run"      : cli_run         = True
0001BFF8 <AmiBlitz3.ab3@214>       Case "release"  : cli_release     = True
0001C028 <AmiBlitz3.ab3@215>       Case "ped"      : cli_gui         = True
0001C082 <AmiBlitz3.ab3@216>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C0F4 <AmiBlitz3.ab3@217>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C124 <AmiBlitz3.ab3@218>                         cli_dumpfile    = dos_GetNextArg{}
0001C12C <AmiBlitz3.ab3@219>                         cli_dumpflags   = $0
0001C18C <AmiBlitz3.ab3@220>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C1EC <AmiBlitz3.ab3@221>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C24C <AmiBlitz3.ab3@222>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C2AC <AmiBlitz3.ab3@223>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C30C <AmiBlitz3.ab3@224>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C36C <AmiBlitz3.ab3@225>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C3CC <AmiBlitz3.ab3@226>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C42C <AmiBlitz3.ab3@227>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C48C <AmiBlitz3.ab3@228>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C49E <AmiBlitz3.ab3@229>                         If cli_dumpflags = $0
0001C4A4 <AmiBlitz3.ab3@230>                          err=True
0001C538 <AmiBlitz3.ab3@231>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C5AA <AmiBlitz3.ab3@234>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C5B2 <AmiBlitz3.ab3@235>                         cli_comflags.l  = $0
0001C612 <AmiBlitz3.ab3@236>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C672 <AmiBlitz3.ab3@237>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C6D2 <AmiBlitz3.ab3@238>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C732 <AmiBlitz3.ab3@239> 
0001C792 <AmiBlitz3.ab3@240>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C7AC <AmiBlitz3.ab3@241>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C7B2 <AmiBlitz3.ab3@242>                           err=True                                                                ; no
0001C846 <AmiBlitz3.ab3@243>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C84C <AmiBlitz3.ab3@244>                         Else
0001C85A <AmiBlitz3.ab3@245>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C8CC <AmiBlitz3.ab3@248>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C8D4 <AmiBlitz3.ab3@249>                         cli_dbgflags.l  = $0
0001C934 <AmiBlitz3.ab3@250>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C994 <AmiBlitz3.ab3@251>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001C9F4 <AmiBlitz3.ab3@252>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CA54 <AmiBlitz3.ab3@253>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CA6E <AmiBlitz3.ab3@254>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CA74 <AmiBlitz3.ab3@255>                           err=True                                                                ; no
0001CB08 <AmiBlitz3.ab3@256>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CB0E <AmiBlitz3.ab3@257>                         Else
0001CB1C <AmiBlitz3.ab3@258>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CB76 <AmiBlitz3.ab3@260>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CBD0 <AmiBlitz3.ab3@261>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CC2A <AmiBlitz3.ab3@262> 
0001CC50 <AmiBlitz3.ab3@263>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CC60 <AmiBlitz3.ab3@264>                           Poke.l ?maxerrorcount,cli_maxerrors
0001CCBA <AmiBlitz3.ab3@267>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001CCEA <AmiBlitz3.ab3@268>       Case "h"        : showhelp        = True             ; show the help and quit
0001CCF0 <AmiBlitz3.ab3@269>       Default
0001CD28 <AmiBlitz3.ab3@270>         If arg><""
0001CDBC <AmiBlitz3.ab3@271>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001CDC2 <AmiBlitz3.ab3@272>           err = True
0001CDD0 <AmiBlitz3.ab3@274>     End Select
0001CE1C <AmiBlitz3.ab3@275>   Until arg = "" OR err=True          ; until we processed all arguments
0001CE3E <AmiBlitz3.ab3@278>   If err><False OR showhelp = True
0001CE48 <AmiBlitz3.ab3@279>     If showhelp
0001CEAA <AmiBlitz3.ab3@280>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001CEE2 <AmiBlitz3.ab3@281>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001CF1A <AmiBlitz3.ab3@282>     NPrint "\\nOptions:"
0001CF52 <AmiBlitz3.ab3@283>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001CF8A <AmiBlitz3.ab3@284>     NPrint "  -(e)xe <file>       : output executable filename"
0001CFC2 <AmiBlitz3.ab3@285>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001CFFA <AmiBlitz3.ab3@286>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D032 <AmiBlitz3.ab3@287>     NPrint "  -run                : run compiled program"
0001D06A <AmiBlitz3.ab3@288>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D0A2 <AmiBlitz3.ab3@289>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D0DA <AmiBlitz3.ab3@290>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D112 <AmiBlitz3.ab3@291>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D14A <AmiBlitz3.ab3@292>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D182 <AmiBlitz3.ab3@293>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D1BA <AmiBlitz3.ab3@294>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D1F2 <AmiBlitz3.ab3@295>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D22A <AmiBlitz3.ab3@296>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D262 <AmiBlitz3.ab3@297>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D29A <AmiBlitz3.ab3@298>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D2D2 <AmiBlitz3.ab3@299>     NPrint "  -(h)elp             : show this help"
0001D30A <AmiBlitz3.ab3@300>     NPrint "\\nExample:"
0001D342 <AmiBlitz3.ab3@301>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D37A <AmiBlitz3.ab3@302>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D380 <AmiBlitz3.ab3@305>     Goto abnormal_exit
0001D39C <AmiBlitz3.ab3@308>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D400 <AmiBlitz3.ab3@309>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D410 <AmiBlitz3.ab3@312> Poke.l ?CLIMode,CLIMode
0001D434 <AmiBlitz3.ab3@342>   Dim incdim.s (#maxincludes)
0001D458 <AmiBlitz3.ab3@343>   Dim incline.l(#maxincludes)
0001D472 <AmiBlitz3.ab3@611> Function.s Get_Libinfo{addr_libnum.l}
0001D47E <AmiBlitz3.ab3@613>   lib_ab2.b = False : lib_os.b = False
0001D484 <AmiBlitz3.ab3@614>   addr_counter.l = addr_libnum
0001D48C <AmiBlitz3.ab3@615>   skip.l = 0
0001D49E <AmiBlitz3.ab3@616>   If addr_counter=0
0001D4D8 <AmiBlitz3.ab3@617>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D4F6 <AmiBlitz3.ab3@618>     Function Return ""
0001D504 <AmiBlitz3.ab3@623>     mem.l = Peek.l(addr_counter)
0001D512 <AmiBlitz3.ab3@628>     addr_counter + 2
0001D532 <AmiBlitz3.ab3@629>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D54C <AmiBlitz3.ab3@630>     If (mem LSR 16) = $ffe2
0001D552 <AmiBlitz3.ab3@632>       lib_os = True
0001D55A <AmiBlitz3.ab3@633>       skip = 10
0001D5A0 <AmiBlitz3.ab3@634>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D5E4 <AmiBlitz3.ab3@636>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D5FA <AmiBlitz3.ab3@638>   If (addr_counter>addr_libnum + $400)
0001D618 <AmiBlitz3.ab3@640>     Function Return ""
0001D61E <AmiBlitz3.ab3@641>   Else
0001D642 <AmiBlitz3.ab3@642>     Function Return Peek$(addr_counter + skip)
0001D64C <AmiBlitz3.ab3@644> End Function
0001D66A <AmiBlitz3.ab3@684>   !asm
0001D670 <AmiBlitz3.ab3@685>   MOVEA.l _execbase,A6
0001D674 <AmiBlitz3.ab3@686>   MOVEM.l d0/a0,-(a7)
0001D676 <AmiBlitz3.ab3@688>   MOVEQ #127,d0
0001D67C <AmiBlitz3.ab3@689>   LEA chartab,a0
0001D682 <AmiBlitz3.ab3@692>     MOVE.b #1,128(a0)
0001D684 <AmiBlitz3.ab3@693>     CLR.b (a0)+
0001D688 <AmiBlitz3.ab3@694>   DBF d0,'l12
0001D68E <AmiBlitz3.ab3@696>   LEA chartab,a0
0001D692 <AmiBlitz3.ab3@697>   MOVE.b #1,(a0)
0001D698 <AmiBlitz3.ab3@698>   MOVE.b #1,","(a0)
0001D69E <AmiBlitz3.ab3@699>   MOVE.b #1,";"(a0)
0001D6A4 <AmiBlitz3.ab3@700>   MOVE.b #1,":"(a0)
0001D6AA <AmiBlitz3.ab3@701>   MOVE.b #1,"("(a0)
0001D6B0 <AmiBlitz3.ab3@702>   MOVE.b #1,")"(a0)
0001D6B6 <AmiBlitz3.ab3@703>   MOVE.b #1,"="(a0)
0001D6BC <AmiBlitz3.ab3@704>   MOVE.b #1,"+"(a0)
0001D6C2 <AmiBlitz3.ab3@705>   MOVE.b #1,"-"(a0)
0001D6C8 <AmiBlitz3.ab3@706>   MOVE.b #1,"*"(a0)
0001D6CE <AmiBlitz3.ab3@707>   MOVE.b #1,"/"(a0)
0001D6D4 <AmiBlitz3.ab3@708>   MOVE.b #1,"$"(a0)
0001D6DA <AmiBlitz3.ab3@709>   MOVE.b #1,"%"(a0)
0001D6E0 <AmiBlitz3.ab3@710>   MOVE.b #1,"."(a0)
0001D6E6 <AmiBlitz3.ab3@711>   MOVE.b #1,"["(a0)
0001D6EC <AmiBlitz3.ab3@712>   MOVE.b #1,"]"(a0)
0001D6F2 <AmiBlitz3.ab3@713>   MOVE.b #1,"{"(a0)
0001D6F8 <AmiBlitz3.ab3@714>   MOVE.b #1,"}"(a0)
0001D6FE <AmiBlitz3.ab3@715>   MOVE.b #1,"\"(a0)
0001D704 <AmiBlitz3.ab3@716>   MOVE.b #1,">"(a0)
0001D70A <AmiBlitz3.ab3@717>   MOVE.b #1,"<"(a0)
0001D710 <AmiBlitz3.ab3@718>   MOVE.b #1,"&"(a0)
0001D716 <AmiBlitz3.ab3@719>   MOVE.b #1,"|"(a0)
0001D71C <AmiBlitz3.ab3@720>   MOVE.b #1,"^"(a0)
0001D722 <AmiBlitz3.ab3@721>   MOVE.b #1,$7e(a0)
0001D728 <AmiBlitz3.ab3@722>   MOVE.w #$0101,1(a0)
0001D72E <AmiBlitz3.ab3@724>   LEA instrtab,a0
0001D734 <AmiBlitz3.ab3@725>   MOVE.l #labelhash-instrtab,d0
0001D736 <AmiBlitz3.ab3@726>   ASR.l #2,d0
0001D738 <AmiBlitz3.ab3@727>   SUBQ.l #1,d0
0001D73A <AmiBlitz3.ab3@730>    CLR.l (a0)+
0001D73C <AmiBlitz3.ab3@731>    SUBQ.l #1,d0
0001D740 <AmiBlitz3.ab3@732>   BNE 'l10
0001D746 <AmiBlitz3.ab3@734>   LEA allowtab,a0
0001D74C <AmiBlitz3.ab3@735>   MOVE.l #255,d0
0001D74E <AmiBlitz3.ab3@738>     CLR.b (a0)+
0001D752 <AmiBlitz3.ab3@739>   DBF d0,'la1
0001D758 <AmiBlitz3.ab3@741>   LEA allowtab,a0
0001D75E <AmiBlitz3.ab3@742>   MOVE.b #1,$7d(a0)
0001D764 <AmiBlitz3.ab3@743>   MOVE.b #1,$7c(a0)
0001D76A <AmiBlitz3.ab3@744>   MOVE.b #1,$44(a0)
0001D770 <AmiBlitz3.ab3@745>   MOVE.b #1,$45(a0)
0001D776 <AmiBlitz3.ab3@746>   MOVE.b #1,$b9(a0)
0001D77C <AmiBlitz3.ab3@747>   MOVE.b #1,$89(a0)
0001D782 <AmiBlitz3.ab3@748>   MOVE.b #1,$ce(a0)
0001D788 <AmiBlitz3.ab3@749>   MOVE.b #1,$cf(a0)
0001D78E <AmiBlitz3.ab3@750>   MOVE.b #1,$d0(a0)
0001D794 <AmiBlitz3.ab3@751>   MOVE.b #1,$cd(a0)
0001D796 <AmiBlitz3.ab3@752>   MOVEQ #0,d0
0001D79C <AmiBlitz3.ab3@754>   MOVEA.l _execbase,a6
0001D7A2 <AmiBlitz3.ab3@759>   MOVE.l #$10000,d0
0001D7A8 <AmiBlitz3.ab3@760>   MOVE.l #80000,d1
0001D7AA <AmiBlitz3.ab3@761>   MOVE.l d1,d2
0001D7AE <AmiBlitz3.ab3@762>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D7B4 <AmiBlitz3.ab3@763>   MOVE.l d0,mempool
0001D7B8 <AmiBlitz3.ab3@764>   MOVEM.l (a7)+,d0/a0
0001D7BE <AmiBlitz3.ab3@765>   TST.l mempool
0001D7C2 <AmiBlitz3.ab3@766>   BEQ shutdown_compiler
0001D7C6 <AmiBlitz3.ab3@768>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D7CC <AmiBlitz3.ab3@769>   MOVE.l A4,ptr_ThisTask
0001D7D0 <AmiBlitz3.ab3@771>   BSR.w open_doslibrary
0001D7D4 <AmiBlitz3.ab3@772>   BEQ.w shutdown_compiler
0001D7DA <AmiBlitz3.ab3@774>   MOVE.l D2,stacksize
0001D7DC <AmiBlitz3.ab3@778>   MOVEQ.l #$00,D0
0001D7E2 <AmiBlitz3.ab3@779>   LEA tokens,A0
0001D7E4 <AmiBlitz3.ab3@782>     ADDQ.w #1,D0
0001D7E6 <AmiBlitz3.ab3@783>     MOVE.l (A0),D1
0001D7EA <AmiBlitz3.ab3@784>     BEQ.w JL_0_2D1C
0001D7EC <AmiBlitz3.ab3@785>     MOVEA.l D1,A0
0001D7F0 <AmiBlitz3.ab3@786> BRA.w JL_0_2D0E
0001D7F6 <AmiBlitz3.ab3@789>   MOVE.l A0,end_of_tokenlist
0001D7FA <AmiBlitz3.ab3@791>   BSR.w makeasmtable
0001D802 <AmiBlitz3.ab3@792>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D806 <AmiBlitz3.ab3@794>   BSR.w open_mathlibrary
0001D80A <AmiBlitz3.ab3@795>   BEQ.w freemem_and_quit4
0001D810 <AmiBlitz3.ab3@797>   MOVE.l constmaxpc,D0
0001D812 <AmiBlitz3.ab3@798>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D818 <AmiBlitz3.ab3@799>   MOVEA.l _execbase,A6
0001D81C <AmiBlitz3.ab3@800>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D822 <AmiBlitz3.ab3@801>   MOVE.l D0,constpcat
0001D826 <AmiBlitz3.ab3@802>   BEQ.w freemem_and_quit3
0001D82C <AmiBlitz3.ab3@803>   ADD.l constmaxpc,D0
0001D832 <AmiBlitz3.ab3@804>   MOVE.l D0,constlibat
0001D838 <AmiBlitz3.ab3@806>   MOVE.l macrobuffer_size,D0
0001D83E <AmiBlitz3.ab3@807>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D842 <AmiBlitz3.ab3@808>   BGE 'ok
0001D848 <AmiBlitz3.ab3@809>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D84E <AmiBlitz3.ab3@810>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D850 <AmiBlitz3.ab3@813>   ADDQ.l #4,d0
0001D852 <AmiBlitz3.ab3@814>   MOVEQ.l #$01,D1
0001D858 <AmiBlitz3.ab3@815>   MOVEA.l _execbase,A6
0001D85C <AmiBlitz3.ab3@816>   JSR _AllocMem(A6)                                        ;macro mem
0001D85E <AmiBlitz3.ab3@817>   MOVE.l d0,a0
0001D864 <AmiBlitz3.ab3@818>   MOVE.l macrobuffer_size,(a0)+
0001D866 <AmiBlitz3.ab3@819>   MOVE.l a0,d0
0001D86C <AmiBlitz3.ab3@820>   MOVE.l D0,ptr_macrobuffer_begin
0001D870 <AmiBlitz3.ab3@821>   BEQ.w freemem_and_quit2
0001D876 <AmiBlitz3.ab3@822>   ADD.l macrobuffer_size,D0
0001D87C <AmiBlitz3.ab3@823>   MOVE.l D0,ptr_macrobuffer_end
0001D882 <AmiBlitz3.ab3@825>   TST.l CLIMode
0001D886 <AmiBlitz3.ab3@826>   BEQ load_ped
0001D8B0 <AmiBlitz3.ab3@829>   !basic
0001D8BA <AmiBlitz3.ab3@830>   succ.l = InitEmulatedPED{}
0001D8BE <AmiBlitz3.ab3@831>   GetD0 succ
0001D8DC <AmiBlitz3.ab3@832>   !asm
0001D8DE <AmiBlitz3.ab3@833>   TST.l d0
0001D8E2 <AmiBlitz3.ab3@834>   BEQ freemem_and_quit
0001D8E8 <AmiBlitz3.ab3@835> JMP skip_ped
0001D8EE <AmiBlitz3.ab3@840>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D8F4 <AmiBlitz3.ab3@841>   MOVEA.l _dosbase,A6
0001D8F8 <AmiBlitz3.ab3@842>   JSR _LoadSeg(A6)
0001D8FE <AmiBlitz3.ab3@843>   MOVE.l D0,ptr_seg_ped
0001D902 <AmiBlitz3.ab3@845>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D904 <AmiBlitz3.ab3@849>   MOVEA.l D0,A2
0001D906 <AmiBlitz3.ab3@850>   ADDA.l A2,A2
0001D908 <AmiBlitz3.ab3@851>   ADDA.l A2,A2
0001D90E <AmiBlitz3.ab3@853>   LEA teddata,a1                                           ;lea edstruct,A1
0001D914 <AmiBlitz3.ab3@854>   MOVE.l #"TEDY",d1
0001D918 <AmiBlitz3.ab3@855>   JSR 4(A2)                                                ; Run PED
0001D91E <AmiBlitz3.ab3@857>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D924 <AmiBlitz3.ab3@858>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D962 <AmiBlitz3.ab3@860>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D966 <AmiBlitz3.ab3@861>   BEQ.w unload_ped
0001D96A <AmiBlitz3.ab3@862> 
0001D96E <AmiBlitz3.ab3@863>   BNE old_version_of_PED                                   ; no, than exit
0001D9AC <AmiBlitz3.ab3@869>   !ComData_GetL{comData_Magic,D0}
0001D9B2 <AmiBlitz3.ab3@870>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D9B6 <AmiBlitz3.ab3@871>   BNE unload_ped
0001D9EE <AmiBlitz3.ab3@874>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DA26 <AmiBlitz3.ab3@875>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DA5E <AmiBlitz3.ab3@876>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DA96 <AmiBlitz3.ab3@877>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DACE <AmiBlitz3.ab3@878>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DB06 <AmiBlitz3.ab3@879>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DB3E <AmiBlitz3.ab3@880>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DB76 <AmiBlitz3.ab3@881>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DBAE <AmiBlitz3.ab3@882>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DBE6 <AmiBlitz3.ab3@883>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DC1E <AmiBlitz3.ab3@884>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DC56 <AmiBlitz3.ab3@885>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DC8E <AmiBlitz3.ab3@888>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DCC6 <AmiBlitz3.ab3@889>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DCFE <AmiBlitz3.ab3@892>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001DD36 <AmiBlitz3.ab3@893>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001DD6E <AmiBlitz3.ab3@895>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001DDA6 <AmiBlitz3.ab3@896>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001DDDE <AmiBlitz3.ab3@898>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DE16 <AmiBlitz3.ab3@899>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001DE4E <AmiBlitz3.ab3@901>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001DE86 <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001DEBE <AmiBlitz3.ab3@903>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001DEF6 <AmiBlitz3.ab3@904>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001DF2E <AmiBlitz3.ab3@905>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001DF66 <AmiBlitz3.ab3@906>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001DF9E <AmiBlitz3.ab3@907>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001DFD6 <AmiBlitz3.ab3@908>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E00E <AmiBlitz3.ab3@909>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E046 <AmiBlitz3.ab3@910>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E07E <AmiBlitz3.ab3@911>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E0B6 <AmiBlitz3.ab3@912>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E0EE <AmiBlitz3.ab3@913>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E126 <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E15E <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E164 <AmiBlitz3.ab3@919>   CLR.w returncode_org
0001E18E <AmiBlitz3.ab3@921>   !basic
0001E198 <AmiBlitz3.ab3@922>   If CLIMode
0001E20A <AmiBlitz3.ab3@923>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E228 <AmiBlitz3.ab3@925>   !asm
0001E22E <AmiBlitz3.ab3@929>   TST.b start_without_libs
0001E232 <AmiBlitz3.ab3@930>   BNE skip_loading_libs
0001E236 <AmiBlitz3.ab3@931>     BSR.w call_setpointerbusy
0001E240 <AmiBlitz3.ab3@932>     MOVE.l #$FFFFffff,linenumat
0001E244 <AmiBlitz3.ab3@933>     BSR.w get_libraries
0001E24A <AmiBlitz3.ab3@934>     JSR init_libraries
0001E24E <AmiBlitz3.ab3@935>     BSR.w init_buffers
0001E252 <AmiBlitz3.ab3@936>     BSR.w call_setpointernormal
0001E254 <AmiBlitz3.ab3@941>   MOVEQ.l #-$01,D0
0001E25A <AmiBlitz3.ab3@942>   MOVEA.l _execbase,A6
0001E25E <AmiBlitz3.ab3@943>   JSR _AllocSignal(A6)
0001E264 <AmiBlitz3.ab3@944>   MOVE.l D0,signalNum
0001E266 <AmiBlitz3.ab3@945>   MOVEQ.l #$00,D1
0001E268 <AmiBlitz3.ab3@946>   BSET D0,D1
0001E26E <AmiBlitz3.ab3@947>   MOVE.l D1,signals
0001E274 <AmiBlitz3.ab3@951>   MOVE.l #str_defaultdbug,D1
0001E278 <AmiBlitz3.ab3@952>   MOVEA.l _dosbase(PC),A6
0001E27C <AmiBlitz3.ab3@953>   JSR _LoadSeg(A6)
0001E282 <AmiBlitz3.ab3@954>   MOVE.l D0,ptr_seg_debugger
0001E284 <AmiBlitz3.ab3@955>   TST.l d0
0001E288 <AmiBlitz3.ab3@956>   BNE ok_12
0001E2B2 <AmiBlitz3.ab3@957>     !basic
0001E314 <AmiBlitz3.ab3@958>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E332 <AmiBlitz3.ab3@959>     !asm
0001E338 <AmiBlitz3.ab3@962>   TST.l CLIMode
0001E33C <AmiBlitz3.ab3@963>   BEQ run_ped
0001E366 <AmiBlitz3.ab3@969>   !basic
0001E36C <AmiBlitz3.ab3@970>   err.l = False
0001E398 <AmiBlitz3.ab3@978>   If cli_sourcefile
0001E3B8 <AmiBlitz3.ab3@979>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E3C2 <AmiBlitz3.ab3@980>     If lock
0001E3E6 <AmiBlitz3.ab3@981>       NameFromLock_ lock,&cli_tempstr,1024
0001E410 <AmiBlitz3.ab3@982>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E420 <AmiBlitz3.ab3@983>       UnLock_ lock
0001E44C <AmiBlitz3.ab3@986>     If cli_exefile
0001E49E <AmiBlitz3.ab3@987>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E4F6 <AmiBlitz3.ab3@988>       path.s = dos_PathPart{cli_exefile}
0001E516 <AmiBlitz3.ab3@989>       lock.l = Lock_(&path,#ACCESS_READ)
0001E520 <AmiBlitz3.ab3@990>       If lock
0001E544 <AmiBlitz3.ab3@991>         NameFromLock_ lock,&cli_tempstr,1024
0001E56E <AmiBlitz3.ab3@992>         path.s = Peek.s(&cli_tempstr)
0001E61C <AmiBlitz3.ab3@993>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E62C <AmiBlitz3.ab3@994>         UnLock_ lock
0001E676 <AmiBlitz3.ab3@1005>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E6EA <AmiBlitz3.ab3@1006> 
0001E6F4 <AmiBlitz3.ab3@1007>   *PreProcessor.preprocessor = preproc_Create{}
0001E704 <AmiBlitz3.ab3@1008>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E736 <AmiBlitz3.ab3@1009>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E74A <AmiBlitz3.ab3@1010>   If *PreProcessor\tokens=#NULL
0001E7C4 <AmiBlitz3.ab3@1011>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E7CE <AmiBlitz3.ab3@1012>     preproc_QueryTokens{*PreProcessor}
0001E800 <AmiBlitz3.ab3@1013>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E84C <AmiBlitz3.ab3@1021>   If cli_sourcefile><"" AND err=False
0001E8F2 <AmiBlitz3.ab3@1022>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E924 <AmiBlitz3.ab3@1023>     succ=LoadSource{cli_sourcefile}
0001E92E <AmiBlitz3.ab3@1024>     If succ
0001E966 <AmiBlitz3.ab3@1025> 
0001E9E0 <AmiBlitz3.ab3@1026>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001EA22 <AmiBlitz3.ab3@1027> 
0001EA2C <AmiBlitz3.ab3@1029>         If comerr
0001EA32 <AmiBlitz3.ab3@1031>         Else
0001EA38 <AmiBlitz3.ab3@1035>     Else
0001EA88 <AmiBlitz3.ab3@1036>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EAD4 <AmiBlitz3.ab3@1040>   If cli_savefile><"" AND err=False
0001EB4E <AmiBlitz3.ab3@1041>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EB7C <AmiBlitz3.ab3@1042>     SaveSource{cli_savefile}
0001EBC8 <AmiBlitz3.ab3@1045>   If cli_dumpfile><"" AND err=False
0001EC12 <AmiBlitz3.ab3@1046>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EC48 <AmiBlitz3.ab3@1047>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EC52 <AmiBlitz3.ab3@1050>   If cli_run
0001EC66 <AmiBlitz3.ab3@1051>     If comerr=False
0001EC92 <AmiBlitz3.ab3@1052>       If cli_exefile
0001ED0C <AmiBlitz3.ab3@1053>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001ED42 <AmiBlitz3.ab3@1054> 
0001ED8C <AmiBlitz3.ab3@1056>       If cli_verbose>=1 Then NPrint "Running program..."
0001ED9A <AmiBlitz3.ab3@1057> 
0001ED9C <AmiBlitz3.ab3@1059>         CLR.l d0
0001EDDA <AmiBlitz3.ab3@1060>         !ComData_GetB{comByte_RunningFlag,D0}
0001EDDE <AmiBlitz3.ab3@1061>         running.l = PutD0
0001EDFA <AmiBlitz3.ab3@1062>         If running Then Delay_ 50
0001EE0E <AmiBlitz3.ab3@1064>       Until running=False
0001EE22 <AmiBlitz3.ab3@1065>       If Peek.l(?_runerror)
0001EE72 <AmiBlitz3.ab3@1066>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001EE84 <AmiBlitz3.ab3@1077>   preproc_Free{*PreProcessor} : *PreProcessor=#NULL
0001EECE <AmiBlitz3.ab3@1078>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001EED4 <AmiBlitz3.ab3@1079>   DeinitEmulatedPED{}
0001EEF2 <AmiBlitz3.ab3@1081>   !asm
0001EEF8 <AmiBlitz3.ab3@1082> JMP terminate_ab3
0001EEFE <AmiBlitz3.ab3@1087>   MOVEA.l ped_startup_addr,A1
0001EF04 <AmiBlitz3.ab3@1088>   LEA str_tempfilename,A0
0001EF06 <AmiBlitz3.ab3@1089>   JSR (A1)
0001EF0C <AmiBlitz3.ab3@1096>   MOVE.l signalNum,D0
0001EF12 <AmiBlitz3.ab3@1097>   MOVEA.l _execbase,A6
0001EF16 <AmiBlitz3.ab3@1098>   JSR _FreeSignal(A6)
0001EF1C <AmiBlitz3.ab3@1100>   MOVE.l ptr_seg_debugger,D1
0001EF20 <AmiBlitz3.ab3@1101>   BEQ.b skip_unload_debugger
0001EF24 <AmiBlitz3.ab3@1102>     MOVEA.l _dosbase(PC),A6
0001EF28 <AmiBlitz3.ab3@1103>     JSR _UnLoadSeg(A6)
0001EF2C <AmiBlitz3.ab3@1106>   BSR.w Aclearallvars
0001EF30 <AmiBlitz3.ab3@1107>   BSR.w free_residents
0001EF36 <AmiBlitz3.ab3@1108>   JSR free_blitzlibs
0001EF3C <AmiBlitz3.ab3@1111>   MOVE.l ptr_seg_ped,D1
0001EF40 <AmiBlitz3.ab3@1112>   BEQ freemem_and_quit
0001EF44 <AmiBlitz3.ab3@1113>   MOVEA.l _dosbase(PC),A6
0001EF48 <AmiBlitz3.ab3@1114>   JSR _UnLoadSeg(A6)
0001EF4C <AmiBlitz3.ab3@1115>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001EF76 <AmiBlitz3.ab3@1118>   !basic
0001F03A <AmiBlitz3.ab3@1119> 
0001F058 <AmiBlitz3.ab3@1120>   !asm
0001F05C <AmiBlitz3.ab3@1121>   BRA freemem_and_quit
0001F086 <AmiBlitz3.ab3@1124>   !basic
0001F14A <AmiBlitz3.ab3@1125>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F168 <AmiBlitz3.ab3@1126>   !asm
0001F16C <AmiBlitz3.ab3@1130>   BSR.w freeallox
0001F172 <AmiBlitz3.ab3@1131>   MOVEA.l ptr_macrobuffer_begin,A1
0001F174 <AmiBlitz3.ab3@1132>   MOVE.l -(a1),D0
0001F176 <AmiBlitz3.ab3@1133>   ADDQ.l #4,d0
0001F17C <AmiBlitz3.ab3@1134>   MOVEA.l _execbase,A6
0001F180 <AmiBlitz3.ab3@1135>   JSR _FreeMem(A6)
0001F186 <AmiBlitz3.ab3@1138>   MOVEA.l _dosbase,A1
0001F18C <AmiBlitz3.ab3@1139>   MOVEA.l _execbase,A6
0001F190 <AmiBlitz3.ab3@1140>   JSR _CloseLibrary(A6)
0001F196 <AmiBlitz3.ab3@1142>   MOVEA.l constpcat,A1
0001F19C <AmiBlitz3.ab3@1143>   MOVE.l constmaxpc,D0
0001F1A2 <AmiBlitz3.ab3@1144>   MOVEA.l _execbase,A6
0001F1A6 <AmiBlitz3.ab3@1145>   JSR _FreeMem(A6)
0001F1AC <AmiBlitz3.ab3@1148>   MOVEA.l _mathffpbase,A1
0001F1B2 <AmiBlitz3.ab3@1149>   MOVEA.l _execbase,A6
0001F1B6 <AmiBlitz3.ab3@1150>   JSR _CloseLibrary(A6)
0001F1BC <AmiBlitz3.ab3@1160>     MOVEA.l _execbase,A6
0001F1C2 <AmiBlitz3.ab3@1161>     MOVE.l mempool,a0
0001F1C6 <AmiBlitz3.ab3@1162>     JSR _DeletePool(a6)
0001F1CC <AmiBlitz3.ab3@1163>     CLR.l pushat
0001F1D2 <AmiBlitz3.ab3@1170>   JSR free_unusedfunctions
0001F1D4 <AmiBlitz3.ab3@1171>   MOVEQ #0,d0
0001F1E2 <AmiBlitz3.ab3@1174>   !exitasm
0001F21A <AmiBlitz3.ab3@1175>   If dynassign<>""
0001F224 <AmiBlitz3.ab3@1176>     If *AssignSema
0001F234 <AmiBlitz3.ab3@1177>       ReleaseSemaphore_ *AssignSema
0001F24C <AmiBlitz3.ab3@1178>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F2E0 <AmiBlitz3.ab3@1179>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F31A <AmiBlitz3.ab3@1180>         dos_RemAssign{dynassign}
0001F32A <AmiBlitz3.ab3@1181>         RemSemaphore_ *AssignSema
0001F33A <AmiBlitz3.ab3@1182>         ReleaseSemaphore_ *AssignSema
0001F370 <AmiBlitz3.ab3@1183>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = #NULL
0001F380 <AmiBlitz3.ab3@1184>         FreeVec_ *AssignSema
0001F388 <AmiBlitz3.ab3@1185>         *AssignSema = #NULL
0001F3B6 <AmiBlitz3.ab3@1189>   SetCurrentDir{cli_path}
0001F3D8 <AmiBlitz3.ab3@1190>   !coutclose
0001F3DE <AmiBlitz3.ab3@1191> End
0001F3EA <AmiBlitz3.ab3@1196> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F3EE <AmiBlitz3.ab3@1197> _dosbase:           Ds.l 1
0001F3F4 <AmiBlitz3.ab3@1201>   MOVEA.l _execbase,A6
0001F3FA <AmiBlitz3.ab3@1202>   LEA str_doslibrary,A1
0001F3FE <AmiBlitz3.ab3@1203>   JSR _OldOpenLibrary(A6)
0001F404 <AmiBlitz3.ab3@1204>   MOVE.l D0,_dosbase
0001F406 <AmiBlitz3.ab3@1205> RTS
0001F40C <AmiBlitz3.ab3@1209>   MOVEA.l #str_mathffpname,A1
0001F412 <AmiBlitz3.ab3@1210>   MOVEA.l _execbase,A6
0001F416 <AmiBlitz3.ab3@1211>   JSR _OldOpenLibrary(A6)
0001F41C <AmiBlitz3.ab3@1212>   MOVE.l D0,_mathffpbase
0001F41E <AmiBlitz3.ab3@1213> RTS
0001F450 <AmiBlitz3.ab3@1221> !ComData_JMP{comFunc_SetNormalPointer}
0001F482 <AmiBlitz3.ab3@1229> !ComData_JMP{comFunc_SetBusyPointer}
0001F4AC <AmiBlitz3.ab3@1233>   !basic
0001F4B0 <AmiBlitz3.ab3@1234>   ab3save_filenameP.l = PutD0
0001F4BA <AmiBlitz3.ab3@1235>   If ab3save_filenameP
0001F4E2 <AmiBlitz3.ab3@1236>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F510 <AmiBlitz3.ab3@1238>     SaveSource{ab3save_filename}
0001F516 <AmiBlitz3.ab3@1239>   Else
0001F550 <AmiBlitz3.ab3@1240>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F56E <AmiBlitz3.ab3@1242>   !asm
0001F570 <AmiBlitz3.ab3@1243>   RTS
0001F59A <AmiBlitz3.ab3@1246>   !basic
0001F59E <AmiBlitz3.ab3@1247>   ab3save_filenameP.l = PutD0
0001F5A8 <AmiBlitz3.ab3@1248>   If ab3save_filenameP
0001F5D0 <AmiBlitz3.ab3@1249>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F5FE <AmiBlitz3.ab3@1250>     LoadSource{ab3save_filename}
0001F604 <AmiBlitz3.ab3@1251>   Else
0001F63E <AmiBlitz3.ab3@1252>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F65C <AmiBlitz3.ab3@1254>   !asm
0001F65E <AmiBlitz3.ab3@1255>   RTS
0001F688 <AmiBlitz3.ab3@1258>   !basic
0001F68E <AmiBlitz3.ab3@1259>   ClearSource{}
0001F6AC <AmiBlitz3.ab3@1260>   !asm
0001F6AE <AmiBlitz3.ab3@1261>   RTS
0001F6D8 <AmiBlitz3.ab3@1264>   !basic
0001F6DE <AmiBlitz3.ab3@1265>   OpenConsoleFake{}
0001F6FC <AmiBlitz3.ab3@1266>   !asm
0001F6FE <AmiBlitz3.ab3@1267>   RTS
0001F728 <AmiBlitz3.ab3@1271>   !basic
0001F72E <AmiBlitz3.ab3@1272>   CloseConsoleFake{}
0001F74C <AmiBlitz3.ab3@1273>   !asm
0001F74E <AmiBlitz3.ab3@1274>   RTS
0001F754 <AmiBlitz3.ab3@1278>   MOVE.w d6,menuitemdebug
0001F77E <AmiBlitz3.ab3@1279>   !basic
0001F790 <AmiBlitz3.ab3@1280>   menuitemx.l = Peek.w(?menuitemdebug)
0001F7B6 <AmiBlitz3.ab3@1281>   If menuitemx>16 OR  menuitemx<0
0001F82A <AmiBlitz3.ab3@1282>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F832 <AmiBlitz3.ab3@1283>     menuitemx=0
0001F842 <AmiBlitz3.ab3@1285>   Poke.w ?menuitemdebug,menuitemx
0001F860 <AmiBlitz3.ab3@1286>   !asm
0001F866 <AmiBlitz3.ab3@1287>   MOVE.w menuitemdebug,d6
0001F86C <AmiBlitz3.ab3@1290>   MOVE.l A5,firstitem_
0001F872 <AmiBlitz3.ab3@1291>   MOVE.w D7,numlines_org
0001F878 <AmiBlitz3.ab3@1292>   MOVE.l d7,numlines
0001F87A <AmiBlitz3.ab3@1293>   LSL.w #2,D6
0001F880 <AmiBlitz3.ab3@1294>   LEA menu_items,A0
0001F884 <AmiBlitz3.ab3@1295>   MOVEA.l $0(A0,D6.W),A0
0001F88E <AmiBlitz3.ab3@1296>   MOVE.l #$FFFFffff,linenumat
0001F898 <AmiBlitz3.ab3@1297>   MOVE.l #$FFFFffff,compilelinecounter
0001F89A <AmiBlitz3.ab3@1300>   JSR (A0)                              ; jsr to the function for the menuitem
0001F8A0 <AmiBlitz3.ab3@1301>   MOVE.l compilelinecounter,D0
0001F8A2 <AmiBlitz3.ab3@1302> RTS
0001F8A6 <AmiBlitz3.ab3@1304> menuitemdebug: Dc.l 0
0001F8AA <AmiBlitz3.ab3@1306> mempool                Dc.l 0
0001F8C0 <AmiBlitz3.ab3@1307> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F8C6 <AmiBlitz3.ab3@1308> dloaderr:             JSR handle_compileerror
0001F8E2 <AmiBlitz3.ab3@1309>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F920 <AmiBlitz3.ab3@1317>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F926 <AmiBlitz3.ab3@1318>   LEA str_loaddebugmessage,A2
0001F92C <AmiBlitz3.ab3@1319>   LEA str_blitz3assign,A0
0001F932 <AmiBlitz3.ab3@1320>   LEA str_temp_debugmodulename,A1
0001F934 <AmiBlitz3.ab3@1322>   JSR (A3)                                                  ;open ped filerequest
0001F938 <AmiBlitz3.ab3@1324>   BEQ.w menu_loaddebugmodule_noload
0001F93E <AmiBlitz3.ab3@1325>   MOVE.l D0,ptr_temp_debugmodule
0001F942 <AmiBlitz3.ab3@1326>   BSR.w call_setpointerbusy
0001F948 <AmiBlitz3.ab3@1327> 
0001F94E <AmiBlitz3.ab3@1328>   MOVE.l A7,errstack
0001F958 <AmiBlitz3.ab3@1329>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F95E <AmiBlitz3.ab3@1330>   MOVE.l ptr_temp_debugmodule,D1
0001F962 <AmiBlitz3.ab3@1332>   MOVEA.l _dosbase(PC),A6
0001F966 <AmiBlitz3.ab3@1333>   JSR _LoadSeg(A6)
0001F968 <AmiBlitz3.ab3@1334>   MOVE.l D0,D7
0001F96C <AmiBlitz3.ab3@1335>   BEQ.w dloaderr
0001F972 <AmiBlitz3.ab3@1336>   MOVE.l ptr_seg_debugger,D1
0001F976 <AmiBlitz3.ab3@1337>   BEQ.b menu_loaddebugmodule_ndseg
0001F97A <AmiBlitz3.ab3@1338>   MOVEA.l _dosbase(PC),A6
0001F97E <AmiBlitz3.ab3@1339>   JSR _UnLoadSeg(A6)
0001F982 <AmiBlitz3.ab3@1340>   BSR.w call_setpointernormal
0001F988 <AmiBlitz3.ab3@1343>   MOVE.l D7,ptr_seg_debugger
0001F98A <AmiBlitz3.ab3@1346> RTS
0001F9A8 <AmiBlitz3.ab3@1349> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FA68 <AmiBlitz3.ab3@1350> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FB28 <AmiBlitz3.ab3@1351> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FB2C <AmiBlitz3.ab3@1352> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FB56 <AmiBlitz3.ab3@1356>   !basic
0001FB80 <AmiBlitz3.ab3@1357>   exepath.s = Peek.s(?exepath)
0001FBAA <AmiBlitz3.ab3@1358>   exefile.s = Peek.s(?exefilename)
0001FC2A <AmiBlitz3.ab3@1359>   exefile.s = dos_AddPart{exepath,exefile}
0001FC62 <AmiBlitz3.ab3@1360>   Poke.s ?tempspace,exefile
0001FC80 <AmiBlitz3.ab3@1361>   !asm
0001FC86 <AmiBlitz3.ab3@1382>   LEA tempspace,a0
0001FC88 <AmiBlitz3.ab3@1383>   MOVE.l a0,d0
0001FC8C <AmiBlitz3.ab3@1384> BRA newcreate2
0001FCB6 <AmiBlitz3.ab3@1390>   !basic
0001FCE0 <AmiBlitz3.ab3@1391>   request_exename.s = Peek.s(?str_request_exename )
0001FD3C <AmiBlitz3.ab3@1392>   request_exename   = !TRANS{request_exename}
0001FD42 <AmiBlitz3.ab3@1393>   GetD0 &request_exename
0001FD60 <AmiBlitz3.ab3@1394>   !asm
0001FD62 <AmiBlitz3.ab3@1395>   MOVE.l D0,A2
0001FDA0 <AmiBlitz3.ab3@1398>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FDA6 <AmiBlitz3.ab3@1400>   LEA exepath,A0
0001FDAC <AmiBlitz3.ab3@1401>   LEA exefilename,A1
0001FDAE <AmiBlitz3.ab3@1403>   JSR (A3)                                                 ;open ped filerequest
0001FDB2 <AmiBlitz3.ab3@1405>   BEQ.w cancel_createexe
0001FDBC <AmiBlitz3.ab3@1408>   ADD.l #1,number_of_builds
0001FDC2 <AmiBlitz3.ab3@1411>   MOVE.l D0,ptr_newexefilename
0001FDCA <AmiBlitz3.ab3@1412>   MOVE.w #-1,debugversion
0001FDD0 <AmiBlitz3.ab3@1413>   MOVE.w set_make_smallestcode,-(A7)
0001FDD8 <AmiBlitz3.ab3@1417>     MOVE.w #1,makeexec
0001FDDE <AmiBlitz3.ab3@1418>     JSR ab3_OpenDebugFile
0001FDE2 <AmiBlitz3.ab3@1419>     BSR.w startcompile
0001FDE8 <AmiBlitz3.ab3@1420>     JSR ab3_CloseDebugFile
0001FDF2 <AmiBlitz3.ab3@1421>     CMP.l #"NORE",reqmode
0001FDF6 <AmiBlitz3.ab3@1422>   BEQ 'l1
0001FDFC <AmiBlitz3.ab3@1424>   TST.w anyerrs
0001FE00 <AmiBlitz3.ab3@1425>   BNE.b menu_createexecutable__skip
0001FE04 <AmiBlitz3.ab3@1426>   BSR.w savefile
0001FE0A <AmiBlitz3.ab3@1429>   MOVE.w (A7)+,set_make_smallestcode
0001FE0C <AmiBlitz3.ab3@1432> RTS
0001FE14 <AmiBlitz3.ab3@1436>   MOVE.w #-1,flag_noPED
0001FE16 <AmiBlitz3.ab3@1437> RTS
0001FE1E <AmiBlitz3.ab3@1441>   MOVE.w #-1,flag_noCLI
0001FE20 <AmiBlitz3.ab3@1442> RTS
0001FE4A <AmiBlitz3.ab3@1445>   !basic
0001FE72 <AmiBlitz3.ab3@1446>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001FE82 <AmiBlitz3.ab3@1447>     Poke.w ?word_WriteDebugFileNow,0
0001FEA0 <AmiBlitz3.ab3@1448>   !asm
0001FEA2 <AmiBlitz3.ab3@1449> RTS
0001FECC <AmiBlitz3.ab3@1452>   !basic
0001FEDC <AmiBlitz3.ab3@1453>   Poke.w ?word_WriteDebugFileNow,0
0001FEEE <AmiBlitz3.ab3@1454>   If dbg_fid>=0
0001FF04 <AmiBlitz3.ab3@1455>     file_Close{dbg_fid} : dbg_fid = -1
0001FF16 <AmiBlitz3.ab3@1457>   If dbg_fid.l<0
0001FF18 <AmiBlitz3.ab3@1458>     CLR.l d0
0001FF56 <AmiBlitz3.ab3@1459>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001FF5A <AmiBlitz3.ab3@1460>     dbg_Create.l = PutD0
0001FF64 <AmiBlitz3.ab3@1461>     If (dbg_Create) ; only when set!
0001FF74 <AmiBlitz3.ab3@1462>       exefileP.l = Peek.l (?ptr_newexefilename)
0001FF9C <AmiBlitz3.ab3@1463>       exefile.s = ""
0001FFCE <AmiBlitz3.ab3@1464>       If exefileP Then exefile.s = Peek.s(exefileP)
00020006 <AmiBlitz3.ab3@1465>       If exefile><""
0002005C <AmiBlitz3.ab3@1466>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
0002006E <AmiBlitz3.ab3@1467>         If dbg_fid>=0
00020080 <AmiBlitz3.ab3@1468>           Poke.w ?word_WriteDebugFileNow,-1
0002008C <AmiBlitz3.ab3@1471>       oldhunkoffset.l = -1
000200B4 <AmiBlitz3.ab3@1472>       oldfile.s       = ""
000200D2 <AmiBlitz3.ab3@1475>   !asm
000200D4 <AmiBlitz3.ab3@1476> RTS
000200DA <AmiBlitz3.ab3@1479> TST.w word_WriteDebugFileNow
000200DE <AmiBlitz3.ab3@1480> BEQ 'skipdebugfile
00020108 <AmiBlitz3.ab3@1481> !basic
0002011A <AmiBlitz3.ab3@1482>   If dbg_fid>=0
0002012C <AmiBlitz3.ab3@1483>     pass.l          = Peek.w(?pass)
0002013E <AmiBlitz3.ab3@1484>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
00020162 <AmiBlitz3.ab3@1485> 
00020168 <AmiBlitz3.ab3@1486>       oldhunkoffset.l = hunkoffset.l
0002019C <AmiBlitz3.ab3@1487>       oldfile.s       = codefile.s
000201B8 <AmiBlitz3.ab3@1488>       If Peek.w (?ininclude)>0
000201C8 <AmiBlitz3.ab3@1489>         codeline.l = Peek.l(?includeline);-1
00020238 <AmiBlitz3.ab3@1490>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0002023E <AmiBlitz3.ab3@1491>       Else
0002026C <AmiBlitz3.ab3@1492>         !ComData_LEA{comStr_SourceName,A0}
0002026E <AmiBlitz3.ab3@1493>         MOVE.l A0,D0
00020272 <AmiBlitz3.ab3@1494>         sourceP.l = PutD0
0002029A <AmiBlitz3.ab3@1495>         codefile.s = Peek.s(sourceP)
000202AA <AmiBlitz3.ab3@1496>         codeline.l = Peek.l(?linenumat)
000202D2 <AmiBlitz3.ab3@1498>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
00020326 <AmiBlitz3.ab3@1499>       If oldhunkoffset><hunkoffset OR oldfile><codefile
00020336 <AmiBlitz3.ab3@1506>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
00020340 <AmiBlitz3.ab3@1507>         If *sourceLine
00020356 <AmiBlitz3.ab3@1508>           MaxLen detokenline.s = 65536
00020398 <AmiBlitz3.ab3@1509>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000203A8 <AmiBlitz3.ab3@1510>          *tn.preprocessor = Peek.l(?include_preprocessor)
000203D4 <AmiBlitz3.ab3@1511>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
00020402 <AmiBlitz3.ab3@1512>           If written>0 Then Poke.b &detokenline+written-1,0
0002042C <AmiBlitz3.ab3@1513>           sourceLineText.s = Peek.s(&detokenline)
00020432 <AmiBlitz3.ab3@1514>         Else
0002045A <AmiBlitz3.ab3@1515>           sourceLineText = "NULL"
00020522 <AmiBlitz3.ab3@1518>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
00020540 <AmiBlitz3.ab3@1524> !asm
00020542 <AmiBlitz3.ab3@1526> RTS
00020544 <AmiBlitz3.ab3@1528> word_WriteDebugFileNow: Dc.w 0
00020546 <AmiBlitz3.ab3@1530> flag_noPED:  Ds.w 1                                        ;closeed org source
00020548 <AmiBlitz3.ab3@1531> flag_noCLI:  Ds.w 1                                        ;nocli org source
0002054C <AmiBlitz3.ab3@1535>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00020552 <AmiBlitz3.ab3@1536>   MOVEA.l _execbase,A6
00020556 <AmiBlitz3.ab3@1537>   JSR _CacheClearU(A6)
0002055A <AmiBlitz3.ab3@1538>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002055C <AmiBlitz3.ab3@1539> RTS
00020560 <AmiBlitz3.ab3@1542>   MOVEM.l A2-A3,-(A7)
00020566 <AmiBlitz3.ab3@1543>   CLR.b doublepeek
0002056C <AmiBlitz3.ab3@1544>   MOVE.l A5,lastsourcepos
00020572 <AmiBlitz3.ab3@1545>    JSR getchar
00020576 <AmiBlitz3.ab3@1546>   CMP.w #$2E,D0
0002057A <AmiBlitz3.ab3@1547>    BEQ.w JL_0_49B4b
00020580 <AmiBlitz3.ab3@1548>   MOVEA.l defaulttype,A2
00020584 <AmiBlitz3.ab3@1549>   CMP.w #$24,D0
00020588 <AmiBlitz3.ab3@1550>    BNE.w JL_0_49CAb
0002058A <AmiBlitz3.ab3@1551>   MOVEQ.l #$07,D1
0002058E <AmiBlitz3.ab3@1552> BRA.w JL_0_49DEb
00020594 <AmiBlitz3.ab3@1555>   JSR getparameter2
00020598 <AmiBlitz3.ab3@1556>   BEQ.w syntaxerrb
0002059E <AmiBlitz3.ab3@1557>   LEA newtypebase,A2
000205A4 <AmiBlitz3.ab3@1558>   JSR findtype
000205A8 <AmiBlitz3.ab3@1559>   BNE.w notypeerrb
000205B2 <AmiBlitz3.ab3@1564>   MOVE.w oldqflag,instringon
000205B8 <AmiBlitz3.ab3@1565>   MOVEA.l lastsourcepos,A5
000205BE <AmiBlitz3.ab3@1567>   MOVE.l a2,functionreturntype
000205C6 <AmiBlitz3.ab3@1568>   CMPI.l #$100,$4(A2)
000205CA <AmiBlitz3.ab3@1569>   BLE.w 'isvar
000205CC <AmiBlitz3.ab3@1573>   MOVEQ #3,d1
000205D0 <AmiBlitz3.ab3@1574>   BRA JL_0_49DEb
000205D4 <AmiBlitz3.ab3@1581>   MOVE.w $6(A2),D1
000205DA <AmiBlitz3.ab3@1582>   CMP.w #8,8(a2)
000205DE <AmiBlitz3.ab3@1583>   BNE 'l1
000205E6 <AmiBlitz3.ab3@1584>   MOVE.b #1,doublepeek
000205EC <AmiBlitz3.ab3@1588>   MOVE.w D1,convsize
000205F0 <AmiBlitz3.ab3@1589>   MOVEM.l (A7)+,A2-A3
000205F2 <AmiBlitz3.ab3@1590> RTS
000205F8 <AmiBlitz3.ab3@1592> notypeerrb JMP notypeerr
000205FE <AmiBlitz3.ab3@1593> illtypeerrb JMP illtypeerr
00020604 <AmiBlitz3.ab3@1594> syntaxerrb JMP syntaxerr
0002060E <AmiBlitz3.ab3@1639>   ADD.l #1,number_of_builds
00020614 <AmiBlitz3.ab3@1641>   CLR.w debugversion
0002061A <AmiBlitz3.ab3@1642>   CLR.w flag_noPED
00020620 <AmiBlitz3.ab3@1643>   CLR.w flag_noCLI
00020628 <AmiBlitz3.ab3@1646>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
0002062C <AmiBlitz3.ab3@1647>     BSR.w startcompile
00020636 <AmiBlitz3.ab3@1648>     CMP.l #"NORE",reqmode
0002063A <AmiBlitz3.ab3@1649>   BEQ 'l1
00020640 <AmiBlitz3.ab3@1652>   TST.w anyerrs
00020644 <AmiBlitz3.ab3@1653>    BNE.w JL_0_3482
00020648 <AmiBlitz3.ab3@1655>   MOVE.w flag_noPED(PC),D1
0002064C <AmiBlitz3.ab3@1656>    BEQ.w skip_closingGUI
0002067E <AmiBlitz3.ab3@1661>   !ComData_JSR{comFunc_CloseGUI}
00020682 <AmiBlitz3.ab3@1662> BRA.b runprogram
00020686 <AmiBlitz3.ab3@1666>   BSR.w compilerequester
0002068C <AmiBlitz3.ab3@1669>   MOVEA.l _dosbase,A6
00020692 <AmiBlitz3.ab3@1670>   LEA exepath,a0
00020694 <AmiBlitz3.ab3@1671>   MOVE.l a0,d1
00020696 <AmiBlitz3.ab3@1672>   MOVEQ #-2,d2
0002069A <AmiBlitz3.ab3@1673>   JSR _Lock(a6)                                            ;lock
000206A0 <AmiBlitz3.ab3@1674>   MOVE.l d0,exelock
000206A6 <AmiBlitz3.ab3@1675>   MOVE.l #0,d1
000206AA <AmiBlitz3.ab3@1676>   JSR _CurrentDir(A6)
000206B0 <AmiBlitz3.ab3@1677>   MOVE.l D0,lock_currentdir
000206B2 <AmiBlitz3.ab3@1678>   MOVE.l D0,D1
000206B6 <AmiBlitz3.ab3@1679>   JSR _CurrentDir(A6)
000206BC <AmiBlitz3.ab3@1680>   CLR.l ptr_exetask
000206C2 <AmiBlitz3.ab3@1689>   MOVE.l #str_process_name,D1
000206C4 <AmiBlitz3.ab3@1690>   MOVEQ.l #$00,D2
000206CA <AmiBlitz3.ab3@1691>   MOVE.l #proc_seglist,D3
000206CC <AmiBlitz3.ab3@1692>   LSR.l #2,D3
000206D2 <AmiBlitz3.ab3@1693>   MOVE.l stacksize,D4
000206D8 <AmiBlitz3.ab3@1694>   MOVEA.l _dosbase,A6
000206DC <AmiBlitz3.ab3@1695>   JSR _CreateProc(A6)                                      ;runtask
000206DE <AmiBlitz3.ab3@1696>   TST.l D0
000206E2 <AmiBlitz3.ab3@1697>    BEQ ErrorRunningProg
00020718 <AmiBlitz3.ab3@1699>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
0002071E <AmiBlitz3.ab3@1701>   TST.w flag_noPED
00020722 <AmiBlitz3.ab3@1702>    BNE.b JL_0_344E
00020726 <AmiBlitz3.ab3@1703>   BSR.w close_compilewin
0002072C <AmiBlitz3.ab3@1706>   CLR.l firstlocal
00020732 <AmiBlitz3.ab3@1707>   CLR.l firstglob
00020736 <AmiBlitz3.ab3@1708>   MOVE.w flag_noPED(PC),D1
0002073A <AmiBlitz3.ab3@1709>   BEQ.w skip_openGUI
0002076C <AmiBlitz3.ab3@1713>   !ComData_JSR{comFunc_CreateGUI}
0002076E <AmiBlitz3.ab3@1723> RTS
00020778 <AmiBlitz3.ab3@1726> MOVE.l #1,_runerror
0002077C <AmiBlitz3.ab3@1727> BRA JL_0_344E
00020780 <AmiBlitz3.ab3@1729> _runerror: Dc.l 0
00020784 <AmiBlitz3.ab3@1730> lock_currentdir:    Ds.l 1                                          ;tasklock org source
00020788 <AmiBlitz3.ab3@1731> ptr_exetask:        Ds.l 1                                          ;panictask org source
0002078C <AmiBlitz3.ab3@1732> signalNum:          Ds.l 1                                          ;panicbit org source
00020790 <AmiBlitz3.ab3@1733> signals:            Ds.l 1                                          ;panicmask org source
000207A6 <AmiBlitz3.ab3@1735> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
000207AB <AmiBlitz3.ab3@1736>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
000207AC <AmiBlitz3.ab3@1737> Even4
000207B0 <AmiBlitz3.ab3@1739> ptr_ThisTask:       Ds.l 1                                          ;length
000207B4 <AmiBlitz3.ab3@1740> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
000207BA <AmiBlitz3.ab3@1744>   MOVEA.l $4,A0
000207C2 <AmiBlitz3.ab3@1745>   MOVE.l  $114(A0),ptr_exetask
000207C8 <AmiBlitz3.ab3@1747>   MOVEA.l _dosbase,A6
000207CE <AmiBlitz3.ab3@1748>   MOVE.l exelock,D1
000207D2 <AmiBlitz3.ab3@1749>   JSR _CurrentDir(A6)
00020808 <AmiBlitz3.ab3@1754>   !ComData_SetB{comByte_RunningFlag,#1}
0002080C <AmiBlitz3.ab3@1760>   MOVE.w flag_noCLI(PC),D1
00020810 <AmiBlitz3.ab3@1761>    BNE.b skip_openconsole
00020842 <AmiBlitz3.ab3@1765>   !ComData_JSR{comFunc_OpenConsole}
00020846 <AmiBlitz3.ab3@1768>   BSR.w calcvbr
0002084C <AmiBlitz3.ab3@1769>   MOVEA.l vbr,A0
00020852 <AmiBlitz3.ab3@1774>   CLR.w dirmode
00020858 <AmiBlitz3.ab3@1775>   CLR.l firstglob
0002085E <AmiBlitz3.ab3@1776>   CLR.l firstlocal
00020864 <AmiBlitz3.ab3@1778>   MOVE.l stacksize,D2
0002086A <AmiBlitz3.ab3@1779>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
00020870 <AmiBlitz3.ab3@1780>   LEA str_cliarguments,A0                                   ;cli arguement
00020876 <AmiBlitz3.ab3@1781>   MOVEA.l destbufferstart,A1
0002087A <AmiBlitz3.ab3@1782>   BSR.w Aclearcache
0002087C <AmiBlitz3.ab3@1785>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
00020882 <AmiBlitz3.ab3@1787>   MOVEA.l vbr,A0
00020888 <AmiBlitz3.ab3@1789>   CLR.l firstglob
0002088E <AmiBlitz3.ab3@1790>   CLR.l firstlocal
00020894 <AmiBlitz3.ab3@1791>   MOVEA.l _dosbase,A6
0002089A <AmiBlitz3.ab3@1792>   MOVE.l exelock,d1
0002089E <AmiBlitz3.ab3@1793>   BEQ 'nolock
000208A2 <AmiBlitz3.ab3@1794>   JSR _UnLock(a6)
000208D8 <AmiBlitz3.ab3@1799>   !ComData_SetB{comByte_RunningFlag,#0}
000208DC <AmiBlitz3.ab3@1802>   MOVE.w flag_noCLI(PC),D1
000208E0 <AmiBlitz3.ab3@1803>    BNE.b skip_closeconsole
00020912 <AmiBlitz3.ab3@1807>   !ComData_JSR{comFunc_CloseConsole}
0002091A <AmiBlitz3.ab3@1810>   MOVE.w #$0001,stopit
0002091E <AmiBlitz3.ab3@1811>   MOVE.l signals(PC),D0
00020924 <AmiBlitz3.ab3@1812>   MOVEA.l ptr_ThisTask,A1
0002092A <AmiBlitz3.ab3@1813>   MOVEA.l _execbase,A6
0002092E <AmiBlitz3.ab3@1814>   JSR _Signal(A6)
00020930 <AmiBlitz3.ab3@1815> RTS
00020936 <AmiBlitz3.ab3@1819>   MOVEA.l _execbase,A6
0002093A <AmiBlitz3.ab3@1820>   MOVE.w $128(A6),D0
0002093C <AmiBlitz3.ab3@1821>   MOVEQ.l #$00,D1
00020940 <AmiBlitz3.ab3@1822>   ANDI.w #$F,D0
00020944 <AmiBlitz3.ab3@1825>     BEQ.b calcvbr__skip
00020946 <AmiBlitz3.ab3@1826>     ADDQ.w #1,D1
00020948 <AmiBlitz3.ab3@1827>     LSR.w #1,D0
0002094C <AmiBlitz3.ab3@1828> BRA.b calcvbr_loop
0002094E <AmiBlitz3.ab3@1831>   MOVEQ.l #$00,D2
00020952 <AmiBlitz3.ab3@1832>   CMP.w #$2,D1
00020956 <AmiBlitz3.ab3@1833>    BCS.b calcvbr__skip2
0002095C <AmiBlitz3.ab3@1834>   MOVEA.l _execbase,A6
00020960 <AmiBlitz3.ab3@1835>   JSR _SuperState(A6)
00020964 <AmiBlitz3.ab3@1836>   Dc.l $4E7A2801                                           ;movec vbr,D2
00020968 <AmiBlitz3.ab3@1837>   JSR _UserState(A6)
0002096E <AmiBlitz3.ab3@1840>   MOVE.l D2,vbr
00020970 <AmiBlitz3.ab3@1841> RTS
00020976 <AmiBlitz3.ab3@1845>   LEA instrtab,a0
0002097C <AmiBlitz3.ab3@1846>   MOVE.l #labelhash-instrtab,d0
0002097E <AmiBlitz3.ab3@1847>   ASR.l #2,d0
00020980 <AmiBlitz3.ab3@1848>   SUBQ.l #1,d0
00020982 <AmiBlitz3.ab3@1851>   CLR.l (a0)+
00020984 <AmiBlitz3.ab3@1852>   SUBQ.l #1,d0
00020988 <AmiBlitz3.ab3@1853>   BNE 'l10
0002098C <AmiBlitz3.ab3@1854>   BSR.w call_setpointerbusy
00020990 <AmiBlitz3.ab3@1855>   BSR.w free_userlibs
00020994 <AmiBlitz3.ab3@1856>   BSR.w scan_for_userlibs
00020998 <AmiBlitz3.ab3@1857>   BSR.w JL_0_7082
0002099C <AmiBlitz3.ab3@1858> BRA.w call_setpointernormal
000209C6 <AmiBlitz3.ab3@1864>   !basic
00020A00 <AmiBlitz3.ab3@1865>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020A10 <AmiBlitz3.ab3@1867>   deflibNameP.l = Peek.l(?deflib)
00020A1A <AmiBlitz3.ab3@1868>   If deflibNameP
00020A4C <AmiBlitz3.ab3@1869>     If Peek.s(deflibNameP)<>""
00020A96 <AmiBlitz3.ab3@1870>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020A9C <AmiBlitz3.ab3@1871>     Else
00020AD6 <AmiBlitz3.ab3@1872>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020ADC <AmiBlitz3.ab3@1874>   Else
00020B16 <AmiBlitz3.ab3@1875>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020B50 <AmiBlitz3.ab3@1876>     error{"INTERNAL: Invalid deflib name pointer!"}
00020B6E <AmiBlitz3.ab3@1878>   !asm
00020B74 <AmiBlitz3.ab3@1883>   MOVE.l #str_path_userlibs,D1
00020B76 <AmiBlitz3.ab3@1884>   MOVEQ.l #-$02,D2
00020B7C <AmiBlitz3.ab3@1885>   MOVEA.l _dosbase,A6
00020B80 <AmiBlitz3.ab3@1886>   JSR _Lock(A6)
00020B82 <AmiBlitz3.ab3@1887>   MOVE.l D0,D7
00020B86 <AmiBlitz3.ab3@1888>    BEQ.w exit_get_libraries
00020B88 <AmiBlitz3.ab3@1889>   MOVE.l D7,D1
00020B8E <AmiBlitz3.ab3@1890>   MOVE.l #ptr_parameterstore,D2
00020B92 <AmiBlitz3.ab3@1891>   JSR _Examine(A6)
00020B94 <AmiBlitz3.ab3@1892>   TST.l D0
00020B98 <AmiBlitz3.ab3@1893>   BEQ.w unlock_and_exit_get_libraries
00020B9E <AmiBlitz3.ab3@1894>   MOVE.l fib_DirEntryType,D0
00020BA2 <AmiBlitz3.ab3@1895>   BMI.w unlock_and_exit_get_libraries
00020BA4 <AmiBlitz3.ab3@1900>     MOVE.l D7,D1
00020BAA <AmiBlitz3.ab3@1901>     MOVE.l #ptr_parameterstore,D2
00020BB0 <AmiBlitz3.ab3@1902>     MOVEA.l _dosbase,A6
00020BB4 <AmiBlitz3.ab3@1903>     JSR _ExNext(A6)
00020BB6 <AmiBlitz3.ab3@1904>     TST.l D0
00020BBA <AmiBlitz3.ab3@1905>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
00020BC0 <AmiBlitz3.ab3@1907>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020BC4 <AmiBlitz3.ab3@1908>     BPL.w scan_libsdrawer                                  ; skip directories
00020BCA <AmiBlitz3.ab3@1910>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020BCE <AmiBlitz3.ab3@1911>     BSR.w check_for_infoextention
00020BD2 <AmiBlitz3.ab3@1912>     BEQ.w scan_libsdrawer
00020BD8 <AmiBlitz3.ab3@1914>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020BDA <AmiBlitz3.ab3@1915>     MOVEQ.l #$26,D0
00020BDC <AmiBlitz3.ab3@1916>     MOVEQ.l #$01,D1
00020BE2 <AmiBlitz3.ab3@1917>     MOVE.l mempool,a0
00020BE6 <AmiBlitz3.ab3@1918>     JSR _AllocPooled(a6)
00020BEC <AmiBlitz3.ab3@1920>     MOVEA.l _dosbase,A6
00020BEE <AmiBlitz3.ab3@1921>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020BF4 <AmiBlitz3.ab3@1924>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020BF6 <AmiBlitz3.ab3@1927>     MOVE.l (A0),D5
00020BFA <AmiBlitz3.ab3@1928>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020BFC <AmiBlitz3.ab3@1929>     MOVEA.l D5,A2
00020BFE <AmiBlitz3.ab3@1930>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
00020C04 <AmiBlitz3.ab3@1933>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
00020C06 <AmiBlitz3.ab3@1936>       MOVEQ.l #$00,D0
00020C08 <AmiBlitz3.ab3@1937>       MOVE.b (A1)+,D0
00020C0C <AmiBlitz3.ab3@1938>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00020C0E <AmiBlitz3.ab3@1939>       MOVEQ.l #$00,D1
00020C10 <AmiBlitz3.ab3@1940>       MOVE.b (A2)+,D1
00020C14 <AmiBlitz3.ab3@1941>        BEQ.w JL_0_371C
00020C36 <AmiBlitz3.ab3@1942>       !compare1                                            ;bsr.w tstalpha
00020C3A <AmiBlitz3.ab3@1943>       BNE.w JL_0_3702
00020C3E <AmiBlitz3.ab3@1944>       ANDI.w #$DF,D0
00020C40 <AmiBlitz3.ab3@1947>       EXG.l D0,D1
00020C62 <AmiBlitz3.ab3@1948>       !compare1                                            ;bsr.w tstalpha
00020C66 <AmiBlitz3.ab3@1949>       BNE.w JL_0_3710
00020C6A <AmiBlitz3.ab3@1950>       ANDI.w #$DF,D0
00020C6C <AmiBlitz3.ab3@1953>       EXG.l D0,D1
00020C6E <AmiBlitz3.ab3@1954>       CMP.b D1,D0
00020C72 <AmiBlitz3.ab3@1955>     BEQ.w JL_0_36E6
00020C76 <AmiBlitz3.ab3@1956>     BCS.w JL_0_3722
00020C78 <AmiBlitz3.ab3@1959>     MOVEA.l D5,A0
00020C7C <AmiBlitz3.ab3@1960> BRA.w JL_0_36D6
00020C7E <AmiBlitz3.ab3@1963>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020C80 <AmiBlitz3.ab3@1964>     MOVE.l (A0),(A1)
00020C82 <AmiBlitz3.ab3@1965>     MOVE.l A1,(A0)
00020C84 <AmiBlitz3.ab3@1966>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020C88 <AmiBlitz3.ab3@1967>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
00020C8E <AmiBlitz3.ab3@1968>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
00020C90 <AmiBlitz3.ab3@1971>       MOVE.b (A0)+,(A1)+
00020C94 <AmiBlitz3.ab3@1972>     BNE.w JL_0_3734
00020C98 <AmiBlitz3.ab3@1973> BRA.w scan_libsdrawer
00020C9A <AmiBlitz3.ab3@1976>   MOVE.l D7,D1
00020CA0 <AmiBlitz3.ab3@1977>   MOVEA.l _dosbase,A6
00020CA4 <AmiBlitz3.ab3@1978>   JSR _UnLock(A6)
00020CA6 <AmiBlitz3.ab3@1979>   MOVEQ.l #-$01,D0
00020CA8 <AmiBlitz3.ab3@1982> RTS
00020CAA <AmiBlitz3.ab3@1985>   MOVE.l D7,D1
00020CB0 <AmiBlitz3.ab3@1986>   MOVEA.l _dosbase,A6
00020CB4 <AmiBlitz3.ab3@1987>   JSR _UnLock(A6)
00020CB6 <AmiBlitz3.ab3@1988>   MOVEQ.l #$00,D0
00020CB8 <AmiBlitz3.ab3@1989> RTS
00020CBE <AmiBlitz3.ab3@1993>   MOVEA.l _execbase,A6
00020CC4 <AmiBlitz3.ab3@1994>   MOVEA.l ptr_userlibs_list,A2
00020CCA <AmiBlitz3.ab3@1995>   CLR.l ptr_userlibs_list
00020CCE <AmiBlitz3.ab3@1998>     CMPA.w #$0,A2
00020CD2 <AmiBlitz3.ab3@1999>     BEQ.w exit_free_userlib
00020CD4 <AmiBlitz3.ab3@2000>       MOVEA.l A2,A1
00020CD6 <AmiBlitz3.ab3@2001>       MOVEQ.l #$26,D0
00020CD8 <AmiBlitz3.ab3@2002>       MOVEA.l (A2),A2
00020CDE <AmiBlitz3.ab3@2003>       MOVE.l mempool,a0
00020CE4 <AmiBlitz3.ab3@2004>       MOVEA.l _execbase,A6
00020CE8 <AmiBlitz3.ab3@2005>       JSR _FreePooled(A6)
00020CEC <AmiBlitz3.ab3@2006> BRA.w loop_free_userlib
00020CEE <AmiBlitz3.ab3@2009> RTS
00020CF0 <AmiBlitz3.ab3@2012> pass:  Dc.w 0                                             ; smallpass org source
00020CF2 <AmiBlitz3.ab3@2013> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020CF8 <AmiBlitz3.ab3@2017>   MOVE.l A7,errstack                                      ;startcompile
00020CFE <AmiBlitz3.ab3@2026>   CLR.l reqmode
00020D08 <AmiBlitz3.ab3@2028>   MOVE.l #Aclearallvars,errcont
00020D12 <AmiBlitz3.ab3@2029>   MOVE.l #concomstack,concomsp
00020D16 <AmiBlitz3.ab3@2037>   MOVE.w #1450,D0
00020D18 <AmiBlitz3.ab3@2038>   LSR.w #3,D0
00020D1A <AmiBlitz3.ab3@2039>   SUBQ.w #7,D0                                             ; 173
00020D20 <AmiBlitz3.ab3@2040>   MOVE.w D0,progressbar_width
00020D22 <AmiBlitz3.ab3@2041>   SWAP D0
00020D24 <AmiBlitz3.ab3@2042>   CLR.w D0
00020D2A <AmiBlitz3.ab3@2043>   MOVE.l numlines,d1
00020D2E <AmiBlitz3.ab3@2044>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020D30 <AmiBlitz3.ab3@2046>   TST.w D0
00020D34 <AmiBlitz3.ab3@2047>   BNE.w JL_0_37C0
00020D36 <AmiBlitz3.ab3@2048>   MOVEQ.l #-$01,D0
00020D3C <AmiBlitz3.ab3@2051>   MOVE.w D0,progress_per_line
00020D44 <AmiBlitz3.ab3@2060>   BTST #$7,use_debugger
00020D48 <AmiBlitz3.ab3@2062>   BNE 'debugon
00020D4E <AmiBlitz3.ab3@2063>   CLR.w debugmode
00020D52 <AmiBlitz3.ab3@2064> BRA.b 'debugoff
00020D58 <AmiBlitz3.ab3@2067>   SNE debugmode
00020D90 <AmiBlitz3.ab3@2075>   !ComData_SetB{comByte_DebugMode,debugmode}
00020D96 <AmiBlitz3.ab3@2078>   CLR.w dirmode                                            ;direct mode flag
00020D9C <AmiBlitz3.ab3@2079>   CLR.w ezerr                                              ;quiet error
00020DA2 <AmiBlitz3.ab3@2080>   CLR.l currentfunction
00020DA8 <AmiBlitz3.ab3@2081>   CLR.w connest
00020DAE <AmiBlitz3.ab3@2082>   CLR.w varmode
00020DB4 <AmiBlitz3.ab3@2083>   CLR.w proceduremode
00020DBA <AmiBlitz3.ab3@2084>   CLR.w ininclude
00020DC0 <AmiBlitz3.ab3@2085>   CLR.w intstring
00020DC6 <AmiBlitz3.ab3@2086>   CLR.w pass
00020DCE <AmiBlitz3.ab3@2087>   MOVE.w #0,compiler_job
00020DD4 <AmiBlitz3.ab3@2088>   CLR.l funcscanon
00020DDA <AmiBlitz3.ab3@2097>   CLR.l funcscanon
00020DDE <AmiBlitz3.ab3@2098>   BSR.w compileall
00020DE4 <AmiBlitz3.ab3@2099> 
00020DEA <AmiBlitz3.ab3@2100>   TST.l errorcounter
00020DEE <AmiBlitz3.ab3@2101>   BEQ _skiperrorstop
00020DF0 <AmiBlitz3.ab3@2102>   RTS
00020DF6 <AmiBlitz3.ab3@2105>   MOVE.w dontwrite,d0
00020DFA <AmiBlitz3.ab3@2106>   CMP.w #1,d0
00020DFE <AmiBlitz3.ab3@2107>   BNE 'l3
00020E04 <AmiBlitz3.ab3@2108>   TST.l errorcounter
00020E08 <AmiBlitz3.ab3@2109>   BNE 'l3
00020E0E <AmiBlitz3.ab3@2110>   CLR.w dontwrite
00020E12 <AmiBlitz3.ab3@2111>   BSR compileall                                           ;if a function is not found
00020E18 <AmiBlitz3.ab3@2112>   ADDQ.w #1,pass
00020E56 <AmiBlitz3.ab3@2117>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020E5A <AmiBlitz3.ab3@2118>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020E60 <AmiBlitz3.ab3@2119>   LEA firstproc,a0
00020E66 <AmiBlitz3.ab3@2120>   CLR.l savefuncspace
00020E68 <AmiBlitz3.ab3@2121>   MOVE.l (a0),d0
00020E6A <AmiBlitz3.ab3@2125>     MOVE.l d0,a0
00020E6E <AmiBlitz3.ab3@2126>     BEQ 'out
00020E72 <AmiBlitz3.ab3@2127>     TST.b isfunc(a0)
00020E76 <AmiBlitz3.ab3@2128>     BNE 'nex
00020E7A <AmiBlitz3.ab3@2129>     MOVEM.l d2/a6/a0,-(a7)
00020E7C <AmiBlitz3.ab3@2131>     MOVEQ #0,d0
00020E80 <AmiBlitz3.ab3@2132>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020E84 <AmiBlitz3.ab3@2133>     SUB.w #$21+#funcentry_extend,d0
00020E88 <AmiBlitz3.ab3@2134>     ADD.w #16,d0
00020E8E <AmiBlitz3.ab3@2135>     MOVE.l #$10000,d1
00020E90 <AmiBlitz3.ab3@2136>     MOVE.l d0,d2
00020E96 <AmiBlitz3.ab3@2137>     MOVEA.l _execbase,A6
00020E9A <AmiBlitz3.ab3@2138>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00020E9C <AmiBlitz3.ab3@2139>     MOVE.l d0,a1
00020EA0 <AmiBlitz3.ab3@2140>     MOVE.l d2,4(a1)
00020EA6 <AmiBlitz3.ab3@2141>     MOVE.l unusedfunc,(a1)
00020EAC <AmiBlitz3.ab3@2142>     MOVE.l d0,unusedfunc
00020EB0 <AmiBlitz3.ab3@2143>     MOVEM.l (a7)+,a6/a0/d2
00020EB4 <AmiBlitz3.ab3@2144>     MOVE.l isfunc+1(a0),d0
00020EB6 <AmiBlitz3.ab3@2145>     ADDQ.l #6,d0
00020EBC <AmiBlitz3.ab3@2146>     ADD.l d0,savefuncspace
00020EC0 <AmiBlitz3.ab3@2149>     MOVE.l d0,8(a1)
00020EC4 <AmiBlitz3.ab3@2150>     LEA 12(a1),a1
00020EC6 <AmiBlitz3.ab3@2151>     MOVE.l a0,-(a7)
00020ECA <AmiBlitz3.ab3@2152>     LEA $21+#funcentry_extend(a0),a0
00020ECC <AmiBlitz3.ab3@2155>       MOVE.b (a0)+,(a1)+
00020ED0 <AmiBlitz3.ab3@2156>     BNE 'l1
00020ED2 <AmiBlitz3.ab3@2157>     MOVE.l (a7)+,a0
00020ED4 <AmiBlitz3.ab3@2160>     MOVE.l (a0),d0
00020ED8 <AmiBlitz3.ab3@2161> BRA 'lr1
00020EE0 <AmiBlitz3.ab3@2164>   BTST #$7,make_smallestcode
00020EE4 <AmiBlitz3.ab3@2165>   BEQ.b JL_0_3844                                           ;optimize for executable
00020EEA <AmiBlitz3.ab3@2166>   CLR.l morememadd
00020EEE <AmiBlitz3.ab3@2168>   BSR.w alloxadj
00020EF2 <AmiBlitz3.ab3@2169>   BEQ.w JL_0_388A
00020EF6 <AmiBlitz3.ab3@2172>   BSR.w compileall
00020EFC <AmiBlitz3.ab3@2173>   ADDQ.w #1,pass
00020F02 <AmiBlitz3.ab3@2176>   MOVE.w dontwrite,D1
00020F06 <AmiBlitz3.ab3@2177>   BEQ.w JL_0_38A2
00020F0A <AmiBlitz3.ab3@2197> BRA.w JL_0_3896
00020F12 <AmiBlitz3.ab3@2208>   MOVE.w #$FFFF,anyerrs
00020F16 <AmiBlitz3.ab3@2209> BRA.w JL_0_38A2
00020F1A <AmiBlitz3.ab3@2212>   BSR.w alloxinc                                          ;increase all by 50%
00020F1E <AmiBlitz3.ab3@2213>   BEQ.w Aclearallvars
00020F22 <AmiBlitz3.ab3@2214> BRA.w JL_0_3824
00020F26 <AmiBlitz3.ab3@2226> BRA.w JL_0_38A6                                            ;???????
00020F2C <AmiBlitz3.ab3@2230>   JSR freereps
00020F32 <AmiBlitz3.ab3@2231>   JSR freesels
00020F38 <AmiBlitz3.ab3@2232>   JSR AJL_0_6DF2
00020F3E <AmiBlitz3.ab3@2233>   JSR freepends
00020F44 <AmiBlitz3.ab3@2234>   JSR freeifs
00020F4A <AmiBlitz3.ab3@2235>   JSR AJL_0_C188
00020F50 <AmiBlitz3.ab3@2236>   JSR AJL_0_C15C
00020F56 <AmiBlitz3.ab3@2237>   JSR AJL_0_D9BC
00020F5C <AmiBlitz3.ab3@2240> JMP cleartemplabel
00020F60 <AmiBlitz3.ab3@2243> mempool2:  Dc.l 0
00020F66 <AmiBlitz3.ab3@2247>   JSR Aclearcache
00020F6E <AmiBlitz3.ab3@2249>   BTST #$7,use_debugger
00020F72 <AmiBlitz3.ab3@2251>   BNE 'debugon
00020F78 <AmiBlitz3.ab3@2252>   CLR.w debugmode
00020F7C <AmiBlitz3.ab3@2253> BRA.b 'debugoff
00020F82 <AmiBlitz3.ab3@2256>   SNE debugmode
00020FBA <AmiBlitz3.ab3@2261>   !ComData_SetB{comByte_DebugMode,debugmode}
00020FC0 <AmiBlitz3.ab3@2263>   LEA regtable,a0
00020FC2 <AmiBlitz3.ab3@2264>   MOVEQ #10,d0
00020FC4 <AmiBlitz3.ab3@2267>     CLR.l (a0)+
00020FC8 <AmiBlitz3.ab3@2268>   DBF d0,'l1
00020FCE <AmiBlitz3.ab3@2270>   LEA includetemp2,a0
00020FD0 <AmiBlitz3.ab3@2271>   CLR.b (a0)
00020FDA <AmiBlitz3.ab3@2272>   MOVE.l #7,maxregs
00020FE0 <AmiBlitz3.ab3@2273>   CLR.w debugnest
00020FE6 <AmiBlitz3.ab3@2274>   CLR.b funcparloop
00020FEC <AmiBlitz3.ab3@2275>   CLR.b nostringopt
00020FF2 <AmiBlitz3.ab3@2276>   CLR.b firsttime
00020FF8 <AmiBlitz3.ab3@2277>   CLR.l lastdestpointer
00020FFE <AmiBlitz3.ab3@2278>   CLR.l lastwritedat
00021004 <AmiBlitz3.ab3@2279>   CLR.l prevwritedat
0002100A <AmiBlitz3.ab3@2280>   CLR.l includeline
00021010 <AmiBlitz3.ab3@2281>   CLR.b incnif
00021016 <AmiBlitz3.ab3@2282>   CLR.b formode
0002101C <AmiBlitz3.ab3@2283>   CLR.b funccall
00021022 <AmiBlitz3.ab3@2284>   CLR.w objectcount
00021028 <AmiBlitz3.ab3@2285>   CLR.b resdisable
0002102E <AmiBlitz3.ab3@2286>   CLR.b developobject
00021034 <AmiBlitz3.ab3@2287>   CLR.b optistring
0002103A <AmiBlitz3.ab3@2288>   CLR.b optistring2
00021040 <AmiBlitz3.ab3@2289>   CLR.b optiarray
00021046 <AmiBlitz3.ab3@2290>   CLR.b quickadd
0002104C <AmiBlitz3.ab3@2291>   CLR.w newmode
00021052 <AmiBlitz3.ab3@2292>   CLR.w mode
00021058 <AmiBlitz3.ab3@2293>   CLR.w string1
0002105E <AmiBlitz3.ab3@2294>   CLR.b fastfunc
00021064 <AmiBlitz3.ab3@2295>   CLR.w load_var_size
0002106A <AmiBlitz3.ab3@2296>   CLR.w load_var_reg
00021070 <AmiBlitz3.ab3@2297>   CLR.l load_var_addr
00021076 <AmiBlitz3.ab3@2298>   CLR.w imm_size
0002107C <AmiBlitz3.ab3@2299>   CLR.w imm_reg
00021082 <AmiBlitz3.ab3@2300>   CLR.l imm_addr
00021088 <AmiBlitz3.ab3@2301>   CLR.b _dcb
0002108E <AmiBlitz3.ab3@2302>   CLR.l nohunkoffset
00021094 <AmiBlitz3.ab3@2303>   CLR.b peekaddrsize
0002109A <AmiBlitz3.ab3@2304>   CLR.b typecheck
000210A0 <AmiBlitz3.ab3@2305>   CLR.b declare2
000210A6 <AmiBlitz3.ab3@2306>   CLR.b declare
000210AC <AmiBlitz3.ab3@2307>   CLR.l myoline                                          ;check
000210B2 <AmiBlitz3.ab3@2308>   CLR.l myline                                          ;check
000210B8 <AmiBlitz3.ab3@2309>   CLR.b newvariable
000210BE <AmiBlitz3.ab3@2310>   CLR.b saved0
000210C4 <AmiBlitz3.ab3@2311>   CLR.l bsssize
000210CA <AmiBlitz3.ab3@2312>   CLR.l chipsize
000210D0 <AmiBlitz3.ab3@2313>   CLR.b infunctioncode
000210D6 <AmiBlitz3.ab3@2314>   CLR.l errorcounter
000210E0 <AmiBlitz3.ab3@2315>   MOVE.l #-1,bssstart
000210EA <AmiBlitz3.ab3@2316>   MOVE.l #-1,bssend
000210F4 <AmiBlitz3.ab3@2317>   MOVE.l #-1,chipstart
000210FE <AmiBlitz3.ab3@2318>   MOVE.l #-1,chipend
00021106 <AmiBlitz3.ab3@2319>   MOVE.w #0,bssmode
0002110C <AmiBlitz3.ab3@2320>   CLR.w a2offset
00021112 <AmiBlitz3.ab3@2321>   CLR.w fast
00021118 <AmiBlitz3.ab3@2322>   CLR.w fpu
0002111E <AmiBlitz3.ab3@2323>   CLR.b iee
00021124 <AmiBlitz3.ab3@2324>   CLR.w newsyntax
00021128 <AmiBlitz3.ab3@2325>   BSR.w JL_0_38A6
0002112E <AmiBlitz3.ab3@2326>   JSR AJL_0_7962
00021134 <AmiBlitz3.ab3@2327>   JSR frallvars
0002113A <AmiBlitz3.ab3@2328>   JSR fralltypes
00021140 <AmiBlitz3.ab3@2329>   JSR freemacs
00021146 <AmiBlitz3.ab3@2330>   JSR clearfunctionlist
0002114C <AmiBlitz3.ab3@2331>   TST.w pass
00021152 <AmiBlitz3.ab3@2333>   JSR clearlabels
00021158 <AmiBlitz3.ab3@2334>   JSR clearhash
0002115E <AmiBlitz3.ab3@2337>   LEA devo,a0
00021162 <AmiBlitz3.ab3@2338>   MOVEM.l a0-a6/d0-d7,-(a7)
00021168 <AmiBlitz3.ab3@2339>   LEA ptr_parameterstore,a1
0002116A <AmiBlitz3.ab3@2342>     MOVE.b (a0)+,(a1)+
0002116E <AmiBlitz3.ab3@2343>   BNE 'l1b
00021170 <AmiBlitz3.ab3@2344>   MOVEQ #13,d2
00021176 <AmiBlitz3.ab3@2345>   JSR findlabel2
0002117A <AmiBlitz3.ab3@2346>   BNE 'd
0002117E <AmiBlitz3.ab3@2347>   CLR.l 8(a2)
00021182 <AmiBlitz3.ab3@2350>   MOVEM.l (a7)+,a0-a6/d0-d7
000211AC <AmiBlitz3.ab3@2351>   !basic
00021220 <AmiBlitz3.ab3@2352>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
0002123E <AmiBlitz3.ab3@2353>   !asm
00021244 <AmiBlitz3.ab3@2354>   CLR.b returncode
0002124A <AmiBlitz3.ab3@2355> JMP freeprocvs
00021250 <AmiBlitz3.ab3@2359>   MOVE.l #bssstore-labelhash,d0
00021252 <AmiBlitz3.ab3@2360>   ASR.l #2,d0
00021258 <AmiBlitz3.ab3@2361>   LEA labelhash,a0
0002125A <AmiBlitz3.ab3@2364>     CLR.l (a0)+
0002125C <AmiBlitz3.ab3@2365>     SUBQ.l #1,d0
00021260 <AmiBlitz3.ab3@2366>   BNE.s 'l10
00021266 <AmiBlitz3.ab3@2368>   LEA labelbase,a1
00021268 <AmiBlitz3.ab3@2369>   MOVE.l (a1),d0
0002126C <AmiBlitz3.ab3@2370>   BEQ 'l11
0002126E <AmiBlitz3.ab3@2373>     MOVE.l d0,a1
00021272 <AmiBlitz3.ab3@2374>     TST.l 4(a1)
00021276 <AmiBlitz3.ab3@2375>     BEQ 'l29
0002127A <AmiBlitz3.ab3@2376>     LEA $13(a1),a0
0002127C <AmiBlitz3.ab3@2377>     MOVEQ #0,d0
0002127E <AmiBlitz3.ab3@2378>     MOVEQ #0,d1
00021280 <AmiBlitz3.ab3@2381>       MOVE.b (a0)+,d1
00021284 <AmiBlitz3.ab3@2382>       BEQ 'l12
0002128A <AmiBlitz3.ab3@2383>       !hashalgo
0002128E <AmiBlitz3.ab3@2384> BRA 'l13
00021294 <AmiBlitz3.ab3@2387>     LEA labelhash,a0
0002129A <AmiBlitz3.ab3@2388>     AND.l #hashsize,d0
0002129C <AmiBlitz3.ab3@2389>      ASL.l #2,d0
000212A0 <AmiBlitz3.ab3@2390>     MOVE.l 0(a0,d0),d1                                     ;*4
000212A4 <AmiBlitz3.ab3@2391>     MOVE.l d1,$c(a1)
000212A8 <AmiBlitz3.ab3@2392>     MOVE.l a1,0(a0,d0)
000212AA <AmiBlitz3.ab3@2395>     MOVE.l (a1),d0
000212AE <AmiBlitz3.ab3@2396>   BNE 'l21
000212B0 <AmiBlitz3.ab3@2399> RTS
000212B6 <AmiBlitz3.ab3@2403>   MOVEA.l lastrestype,A0
000212B8 <AmiBlitz3.ab3@2404>   MOVEA.l (A0),A2
000212BA <AmiBlitz3.ab3@2405>   CLR.l (A0)
000212C0 <AmiBlitz3.ab3@2406> JMP freetypes
000212C6 <AmiBlitz3.ab3@2410>   MOVEA.l varbase,A3
000212CC <AmiBlitz3.ab3@2411>   CLR.l varbase
000212D0 <AmiBlitz3.ab3@2414>   CMPA.w #$0,A3
000212D4 <AmiBlitz3.ab3@2415>   BEQ.w 'l20
000212D6 <AmiBlitz3.ab3@2416>   MOVEA.l A3,A1
000212D8 <AmiBlitz3.ab3@2417>   MOVEA.l (A3),A3
000212DA <AmiBlitz3.ab3@2418>   MOVEQ.l #$00,D0
000212DE <AmiBlitz3.ab3@2419>   MOVE.b $E+4(A1),D0
000212E4 <AmiBlitz3.ab3@2420>   MOVEA.l _execbase,A6
000212EA <AmiBlitz3.ab3@2421>   MOVE.l mempool2,a0
000212EE <AmiBlitz3.ab3@2422>   JSR _FreePooled(A6)
000212F2 <AmiBlitz3.ab3@2423> BRA.w 'l10
000212F4 <AmiBlitz3.ab3@2426> RTS
000212FA <AmiBlitz3.ab3@2431>   LEA firstiff,A2
000212FC <AmiBlitz3.ab3@2432>   MOVEQ.l #$0E,D2
00021302 <AmiBlitz3.ab3@2433> JMP freeslist
00021304 <AmiBlitz3.ab3@2439> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
00021306 <AmiBlitz3.ab3@2440> inmacro:             Ds.w 1                                ;macmask org source ;macro found
0002130C <AmiBlitz3.ab3@2444>   CLR.w inmacro
00021312 <AmiBlitz3.ab3@2445>   ADDQ.l #1,globallinecount
00021318 <AmiBlitz3.ab3@2446>   CLR.b nostringopt
0002131C <AmiBlitz3.ab3@2447>   BSR.w JL_0_3CA4
00021322 <AmiBlitz3.ab3@2448>   CLR.w instringon
00021328 <AmiBlitz3.ab3@2451>   TST.w ininclude
0002132C <AmiBlitz3.ab3@2452>   BEQ.w JL_0_39B0
00021332 <AmiBlitz3.ab3@2453>   ADDQ.l #1,includeline
00021338 <AmiBlitz3.ab3@2454>     JSR ab3_WriteDebugFile
0002133E <AmiBlitz3.ab3@2455>   JSR AJL_0_C09E
00021342 <AmiBlitz3.ab3@2456>   BEQ.w JL_0_39B0
00021348 <AmiBlitz3.ab3@2457>   MOVE.w ininclude,D0
0002134C <AmiBlitz3.ab3@2458>   CMP.w #$4,D0
00021350 <AmiBlitz3.ab3@2459>   BCC.w JL_0_39AC
00021352 <AmiBlitz3.ab3@2460>   ADD.w D0,D0
00021358 <AmiBlitz3.ab3@2461>   LEA progress_per_line,A0
0002135C <AmiBlitz3.ab3@2462>   MOVE.w $0(A0,D0.W),D2
00021360 <AmiBlitz3.ab3@2463>   CMP.w progressbar_width(PC),D2
00021364 <AmiBlitz3.ab3@2464>   BCC.w JL_0_39AC
00021368 <AmiBlitz3.ab3@2465>   ADDQ.w #1,$0(A0,D0.W)
0002136A <AmiBlitz3.ab3@2466>   LSR.w #1,D0
0002136C <AmiBlitz3.ab3@2467>   MOVE.l d0,d1
0002136E <AmiBlitz3.ab3@2468>   EXT.l d1
00021370 <AmiBlitz3.ab3@2469>   MOVE.l d2,d0
00021372 <AmiBlitz3.ab3@2470>   EXT.l d0                                                 ;d0=x,d1=y
00021378 <AmiBlitz3.ab3@2472>   JSR update_progressbar
0002137A <AmiBlitz3.ab3@2475>   MOVEQ.l #-$01,D0
0002137C <AmiBlitz3.ab3@2476> RTS
00021382 <AmiBlitz3.ab3@2480>   MOVE.l titleat,D0
00021384 <AmiBlitz3.ab3@2481>   MOVEQ.l #$00,D1
0002138A <AmiBlitz3.ab3@2482>   MOVE.w progress_per_line,D1
0002138C <AmiBlitz3.ab3@2483>   ADD.l D1,D0
0002138E <AmiBlitz3.ab3@2484>   MOVE.l D0,D1
00021390 <AmiBlitz3.ab3@2485>   SWAP D0
00021396 <AmiBlitz3.ab3@2486>   CMP.w titleat,D0
0002139A <AmiBlitz3.ab3@2487>    BEQ.w JL_0_39E4
0002139C <AmiBlitz3.ab3@2491>   EXT.l d0
0002139E <AmiBlitz3.ab3@2492>   MOVE.l d1,-(a7)
000213A6 <AmiBlitz3.ab3@2495>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
000213AC <AmiBlitz3.ab3@2496>   JSR update_progressbar
000213B4 <AmiBlitz3.ab3@2497>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
000213B6 <AmiBlitz3.ab3@2501>   MOVE.l (a7)+,d1
000213BC <AmiBlitz3.ab3@2504>   MOVE.l D1,titleat
000213C2 <AmiBlitz3.ab3@2505>   ADDQ.l #1,linenumat
000213C8 <AmiBlitz3.ab3@2506>   CLR.w linedone
000213CE <AmiBlitz3.ab3@2507>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
000213D4 <AmiBlitz3.ab3@2509>   SUBQ.l #1,numlines2
000213D8 <AmiBlitz3.ab3@2510>    BEQ.w JL_0_3A12
000213DE <AmiBlitz3.ab3@2511>   MOVEA.l sourceline,A0
000213E0 <AmiBlitz3.ab3@2512>   MOVEA.l (A0),A0
000213E6 <AmiBlitz3.ab3@2513>   MOVE.l A0,sourceline
000213EA <AmiBlitz3.ab3@2514>   LEA $9(A0),A5
000213EC <AmiBlitz3.ab3@2517> RTS
000213EE <AmiBlitz3.ab3@2521>   MOVE.w D0,-(A7)
000213F0 <AmiBlitz3.ab3@2522>   MOVEQ.l #$03,D0
000213F2 <AmiBlitz3.ab3@2525>     MOVE.w D1,D2
000213F6 <AmiBlitz3.ab3@2526>     ANDI.w #$F,D2
000213FA <AmiBlitz3.ab3@2527>     ADDI.w #$30,D2
000213FE <AmiBlitz3.ab3@2528>     CMP.w #$3A,D2
00021402 <AmiBlitz3.ab3@2529>      BCS.w JL_0_3A2C
00021404 <AmiBlitz3.ab3@2530>     ADDQ.w #7,D2
00021408 <AmiBlitz3.ab3@2533>     MOVE.b D2,$0(A0,D0.W)
0002140A <AmiBlitz3.ab3@2534>     LSR.w #4,D1
0002140E <AmiBlitz3.ab3@2535>   DBF D0,JL_0_3A18
00021410 <AmiBlitz3.ab3@2537>   MOVE.w (A7)+,D0
00021412 <AmiBlitz3.ab3@2538> RTS
00021418 <AmiBlitz3.ab3@2548>   MOVE.w skipcode,D1
0002141C <AmiBlitz3.ab3@2549>   BNE.w JL_0_3A46
0002141E <AmiBlitz3.ab3@2550> RTS
00021420 <AmiBlitz3.ab3@2553>   MOVE.l A5,-(A7)
00021422 <AmiBlitz3.ab3@2554>   MOVEQ.l #$3A,D1                                          ;':'
00021424 <AmiBlitz3.ab3@2555>   MOVEQ.l #$21,D2                                          ;'!'
00021426 <AmiBlitz3.ab3@2556>   MOVEQ.l #$3B,D3                                          ;';'
00021428 <AmiBlitz3.ab3@2557>   MOVEQ.l #$22,D4                                          ;'"'
0002142A <AmiBlitz3.ab3@2560>   MOVE.b (A5)+,D0
0002142E <AmiBlitz3.ab3@2561>    BEQ.w JL_0_3CA0
00021432 <AmiBlitz3.ab3@2562>    BPL.w JL_0_3A60
00021434 <AmiBlitz3.ab3@2563>   MOVE.b (A5)+,D0
00021438 <AmiBlitz3.ab3@2564> BRA.w JL_0_3A50
0002143A <AmiBlitz3.ab3@2567>   CMP.b D4,D0
0002143E <AmiBlitz3.ab3@2568>    BNE.w JL_0_3A82
00021440 <AmiBlitz3.ab3@2571>   MOVE.b (A5)+,D0
00021444 <AmiBlitz3.ab3@2572>    BEQ.w notqerr
00021448 <AmiBlitz3.ab3@2578>   CMP.b #$22,D0
0002144C <AmiBlitz3.ab3@2579>    BNE.w JL_0_3A66
00021450 <AmiBlitz3.ab3@2580> BRA.w JL_0_3A50
00021452 <AmiBlitz3.ab3@2583>   CMP.b D1,D0
00021456 <AmiBlitz3.ab3@2584>    BEQ.w JL_0_3CA0
00021458 <AmiBlitz3.ab3@2585>   CMP.b D3,D0
0002145C <AmiBlitz3.ab3@2586>    BEQ.w JL_0_3CA0
0002145E <AmiBlitz3.ab3@2589>   CMP.b D2,D0
00021462 <AmiBlitz3.ab3@2590>    BNE.w JL_0_3A50
0002146A <AmiBlitz3.ab3@2591>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
0002146C <AmiBlitz3.ab3@2592>   MOVEA.l A5,A3
00021472 <AmiBlitz3.ab3@2593>    JSR getparameter2
00021476 <AmiBlitz3.ab3@2594>    BNE.w JL_0_3AAC
0002147C <AmiBlitz3.ab3@2595> JMP syntaxerr
00021486 <AmiBlitz3.ab3@2600>    MOVE.w oldqflag,instringon
0002148C <AmiBlitz3.ab3@2601>   MOVEA.l lastsourcepos,A5
00021492 <AmiBlitz3.ab3@2602>    JSR findmac                                             ;find macro
00021496 <AmiBlitz3.ab3@2603>    BEQ.w JL_0_3ABE
0002149C <AmiBlitz3.ab3@2604> JMP nomacerr
000214A2 <AmiBlitz3.ab3@2607>   TST.b debugmode
000214A6 <AmiBlitz3.ab3@2608>   BEQ 'sk1
000214AA <AmiBlitz3.ab3@2609>   MOVE.w #$4e71,d1
000214B0 <AmiBlitz3.ab3@2610>   JSR writeword
000214B2 <AmiBlitz3.ab3@2611>   MOVE.l a5,-(a7)
000214B4 <AmiBlitz3.ab3@2612>   MOVE.l a3,a5
000214B6 <AmiBlitz3.ab3@2613>   SUBQ.l #1,a5
000214BE <AmiBlitz3.ab3@2614>   MOVE.w #$0,inmacro
000214C2 <AmiBlitz3.ab3@2615>   BSR debugstuffa
000214CA <AmiBlitz3.ab3@2616>   MOVE.w #$FFFF,inmacro
000214CC <AmiBlitz3.ab3@2617>   MOVE.l (a7)+,a5
000214D0 <AmiBlitz3.ab3@2618>   MOVE.w #$4e71,d1
000214D6 <AmiBlitz3.ab3@2619>   JSR writeword
000214D8 <AmiBlitz3.ab3@2622>   MOVEA.l A5,A4
000214DC <AmiBlitz3.ab3@2625>    CMP.b #" ",(a4)+
000214E0 <AmiBlitz3.ab3@2626>     BEQ 'l5a
000214E2 <AmiBlitz3.ab3@2627>      SUBQ.l#1,a4
000214E6 <AmiBlitz3.ab3@2628>      CMP.b #",",(a4)
000214EA <AmiBlitz3.ab3@2629>     BEQ JL_0_3AEA
000214EC <AmiBlitz3.ab3@2632>   MOVEQ.l #$00,D4
000214F2 <AmiBlitz3.ab3@2633>   TST.b newsyntax
000214F6 <AmiBlitz3.ab3@2634>   BEQ 'l10b
000214FA <AmiBlitz3.ab3@2635>   MOVEM.l a0/d0,-(a7)
000214FE <AmiBlitz3.ab3@2636>   MOVE.l 4(a2),a0
00021502 <AmiBlitz3.ab3@2637>   MOVE.w 8(a2),d0
00021506 <AmiBlitz3.ab3@2640>   CMP.b #"`",(a0)+
0002150A <AmiBlitz3.ab3@2641>   BEQ 'x1
0002150C <AmiBlitz3.ab3@2642>   SUBQ.w #1,d0
00021510 <AmiBlitz3.ab3@2643>   BNE 'x2
00021514 <AmiBlitz3.ab3@2644> BRA 'x3
00021518 <AmiBlitz3.ab3@2647>   MOVEM.l (a7)+,a0/d0
0002151C <AmiBlitz3.ab3@2648> BRA 'l10
00021520 <AmiBlitz3.ab3@2651>   MOVEM.l (a7)+,a0/d0
00021524 <AmiBlitz3.ab3@2652> BRA JL_0_3AEA
00021528 <AmiBlitz3.ab3@2655>   CMPI.b #"{",(A4)
0002152C <AmiBlitz3.ab3@2656>    BNE.w JL_0_3AEA
0002152E <AmiBlitz3.ab3@2660>   ADDQ.l #1,a4
00021532 <AmiBlitz3.ab3@2663>     CMP.b #" ",(a4)
00021536 <AmiBlitz3.ab3@2664>     BEQ 'l5
0002153A <AmiBlitz3.ab3@2665>     MOVEM.l a0/d0,-(a7)
00021540 <AmiBlitz3.ab3@2666>     CLR.b exmac
00021546 <AmiBlitz3.ab3@2667>     LEA chartab,a0
00021548 <AmiBlitz3.ab3@2668>     MOVEQ #0,d0
0002154A <AmiBlitz3.ab3@2669>     MOVE.b (a4),d0
0002154E <AmiBlitz3.ab3@2670>     BMI 'm1
00021552 <AmiBlitz3.ab3@2671>     TST.b 0(a0,d0)
00021556 <AmiBlitz3.ab3@2672>     BEQ 'm1
0002155C <AmiBlitz3.ab3@2673>     TST.b newsyntax
00021560 <AmiBlitz3.ab3@2674>     BEQ 'ns1
00021564 <AmiBlitz3.ab3@2675>     CMP.b #"#",d0
00021568 <AmiBlitz3.ab3@2676>     BEQ 'm1
0002156C <AmiBlitz3.ab3@2677>     CMP.b #"$",d0
00021570 <AmiBlitz3.ab3@2678>     BEQ 'm1
00021574 <AmiBlitz3.ab3@2679>     CMP.b #"-",d0
00021578 <AmiBlitz3.ab3@2680>     BEQ 'm1
0002157C <AmiBlitz3.ab3@2683>   CMP.b #",",d0
00021580 <AmiBlitz3.ab3@2684>     BEQ 'm1
00021584 <AmiBlitz3.ab3@2685>     CMP.b #"{",d0
00021588 <AmiBlitz3.ab3@2686>     BNE 'm1b
0002158A <AmiBlitz3.ab3@2687>     ADDQ.l #1,a4
0002158E <AmiBlitz3.ab3@2688> BRA 'm1
00021594 <AmiBlitz3.ab3@2691>   TST.b newsyntax
00021598 <AmiBlitz3.ab3@2692>     BEQ 'm1
000215A0 <AmiBlitz3.ab3@2693>     MOVE.b #1,exmac
000215A4 <AmiBlitz3.ab3@2696>   MOVEM.l (a7)+,a0/d0
000215AA <AmiBlitz3.ab3@2697>     TST.b exmac
000215AE <AmiBlitz3.ab3@2698>     BNE JL_0_3AEA
000215B0 <AmiBlitz3.ab3@2705>   TST.b (a4)
000215B4 <AmiBlitz3.ab3@2706>   BEQ JL_0_3AEA
000215BA <AmiBlitz3.ab3@2709>   MOVEA.l ptr_macrobuffer_begin,A0
000215BC <AmiBlitz3.ab3@2712>   ADDQ.w #1,D4
000215BE <AmiBlitz3.ab3@2713>   MOVE.l A4,(A0)
000215C2 <AmiBlitz3.ab3@2714>   CLR.w 4(a0)
000215C6 <AmiBlitz3.ab3@2715>    BSR.w JL_0_3CC6
000215C8 <AmiBlitz3.ab3@2717>   ADDQ.l #4,a0
000215CA <AmiBlitz3.ab3@2721>   SUBQ.w #1,(a0)+
000215CE <AmiBlitz3.ab3@2722>   CMP.b #$7D,D0
000215D2 <AmiBlitz3.ab3@2723>   BEQ 'l10
000215D4 <AmiBlitz3.ab3@2724>   TST.b d0
000215D8 <AmiBlitz3.ab3@2725>   BEQ 'l10
000215DC <AmiBlitz3.ab3@2726> BRA JL_0_3AD0
000215E2 <AmiBlitz3.ab3@2730>   CLR.l sourceline3
000215E4 <AmiBlitz3.ab3@2731>   MOVEA.l A4,A5
000215EA <AmiBlitz3.ab3@2734>   MOVE.w D4,numarg
000215F0 <AmiBlitz3.ab3@2741>   MOVE.l #$01,D1
000215F6 <AmiBlitz3.ab3@2742>   MOVEA.l _execbase,A6
000215FC <AmiBlitz3.ab3@2743>   MOVE.l mempool,a0
00021602 <AmiBlitz3.ab3@2744>   MOVE.l macrobuffer_size,D0
00021608 <AmiBlitz3.ab3@2745>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
0002160C <AmiBlitz3.ab3@2746>   BGE 'l1m
00021612 <AmiBlitz3.ab3@2747>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021618 <AmiBlitz3.ab3@2748>   MOVE.l d0,macrobuffer_size
0002161C <AmiBlitz3.ab3@2751>   JSR _AllocPooled(a6)
00021626 <AmiBlitz3.ab3@2753>   MOVE.l myline,myoline
00021628 <AmiBlitz3.ab3@2756>   ADDQ.l #1,d0
0002162E <AmiBlitz3.ab3@2757>   MOVE.l D0,myline
00021630 <AmiBlitz3.ab3@2758>   MOVEA.l D0,A1
00021636 <AmiBlitz3.ab3@2759>   MOVE.b #":",-1(a1)
00021638 <AmiBlitz3.ab3@2760>   MOVEA.l A1,A6
0002163E <AmiBlitz3.ab3@2761>   ADDA.l macrobuffer_size,A6
00021640 <AmiBlitz3.ab3@2762>   MOVEA.l (A7)+,A0
00021642 <AmiBlitz3.ab3@2765>   CMPA.l A6,A1
00021646 <AmiBlitz3.ab3@2766>    BCC.w mbovererr
00021648 <AmiBlitz3.ab3@2767>   MOVE.b (A0)+,(a1)+
0002164A <AmiBlitz3.ab3@2768>   CMPA.l A3,A0
0002164E <AmiBlitz3.ab3@2769>    BCS.w JL_0_3B1E
00021650 <AmiBlitz3.ab3@2770>   SUBQ.w #1,A1
00021654 <AmiBlitz3.ab3@2771>   MOVE.w $8(A2),D1
00021658 <AmiBlitz3.ab3@2772>    BEQ.w JL_0_3C70
00021660 <AmiBlitz3.ab3@2773>   MOVE.w $A(A2),macnum
00021664 <AmiBlitz3.ab3@2774>   ADDQ.w #1,$A(A2)
00021668 <AmiBlitz3.ab3@2775>   MOVEA.l $4(A2),A2
0002166A <AmiBlitz3.ab3@2776>   SUBQ.w #1,D1
00021670 <AmiBlitz3.ab3@2777>   CLR.b firstmline
00021672 <AmiBlitz3.ab3@2780>     MOVEQ.l #$00,D0
00021674 <AmiBlitz3.ab3@2781>     MOVE.b (A2)+,D0
0002167A <AmiBlitz3.ab3@2782>     TST.b firstmline
0002167E <AmiBlitz3.ab3@2783>     BNE 'c1
00021682 <AmiBlitz3.ab3@2784>     CMP.b #$22,d0
00021686 <AmiBlitz3.ab3@2785>     BNE 's1
0002168E <AmiBlitz3.ab3@2786>     MOVE.b #1,firstmline
00021692 <AmiBlitz3.ab3@2789>     CMP.b #":",d0
00021696 <AmiBlitz3.ab3@2790>     BNE 'm1
0002169E <AmiBlitz3.ab3@2791>     MOVE.b #1,firstmline
000216A2 <AmiBlitz3.ab3@2794>     CMP.b #";",d0
000216A6 <AmiBlitz3.ab3@2795>     BNE 'c1
000216A8 <AmiBlitz3.ab3@2798>     SUBQ.w #1,d1                                           ;filter out comment
000216AA <AmiBlitz3.ab3@2799>     MOVE.b (a2)+,d0
000216B0 <AmiBlitz3.ab3@2800>     CMP.w #":@",-1(a2)
000216B4 <AmiBlitz3.ab3@2801>     BEQ 'c2
000216B6 <AmiBlitz3.ab3@2802>     TST.w d1
000216BA <AmiBlitz3.ab3@2803>     BNE 'l1
000216BE <AmiBlitz3.ab3@2804>   BRA JL_0_3C6C
000216C4 <AmiBlitz3.ab3@2807>     CMP.b #":",1(a2)
000216C8 <AmiBlitz3.ab3@2808>       BNE 'l1
000216CA <AmiBlitz3.ab3@2809>       ADDQ #2,a2
000216CC <AmiBlitz3.ab3@2810>       SUBQ #3,d1
000216CE <AmiBlitz3.ab3@2811>       MOVE.b (a2)+,d0
000216D6 <AmiBlitz3.ab3@2812>       MOVE.b #1,firstmline
000216DA <AmiBlitz3.ab3@2815>     CMP.b #"`",D0
000216DE <AmiBlitz3.ab3@2816>      BNE.w JL_0_3C56
000216E0 <AmiBlitz3.ab3@2817>     SUBQ.w #1,D1
000216E2 <AmiBlitz3.ab3@2818>     MOVE.b (A2)+,D0
000216E6 <AmiBlitz3.ab3@2819>     CMP.w #$7B,D0
000216EA <AmiBlitz3.ab3@2820>      BEQ.w JL_0_3BB6
000216EE <AmiBlitz3.ab3@2821>     CMP.w #$40,D0
000216F2 <AmiBlitz3.ab3@2822>      BNE.w JL_0_3B82
000216F4 <AmiBlitz3.ab3@2823>     MOVEQ.l #$00,D2
000216FA <AmiBlitz3.ab3@2824>     MOVE.w macnum,D2
000216FC <AmiBlitz3.ab3@2825>     MOVEA.l A1,A0
000216FE <AmiBlitz3.ab3@2826>     MOVE.w D1,-(A7)
00021704 <AmiBlitz3.ab3@2827>      JSR makelong
00021706 <AmiBlitz3.ab3@2828>     MOVEA.l A0,A1
00021708 <AmiBlitz3.ab3@2829>     MOVE.w (A7)+,D1
0002170C <AmiBlitz3.ab3@2830>   BRA.w JL_0_3C6C
00021710 <AmiBlitz3.ab3@2833>     ORI.w #$20,D0
00021714 <AmiBlitz3.ab3@2834>     CMP.w #$7A,D0
00021718 <AmiBlitz3.ab3@2835>      BCS.w JL_0_3B94
0002171E <AmiBlitz3.ab3@2836>   JMP ilconsterr
00021722 <AmiBlitz3.ab3@2839>     SUBI.w #$30,D0
00021726 <AmiBlitz3.ab3@2840>     CMP.w #$A,D0
0002172A <AmiBlitz3.ab3@2841>      BCS.w JL_0_3BF2
0002172E <AmiBlitz3.ab3@2842>     SUBI.w #$27,D0
00021732 <AmiBlitz3.ab3@2843>     CMP.w #$A,D0
00021736 <AmiBlitz3.ab3@2844>      BCC.w JL_0_3BB2
0002173C <AmiBlitz3.ab3@2845>   JMP ilconsterr
00021740 <AmiBlitz3.ab3@2848>   BRA.w JL_0_3BF2
00021742 <AmiBlitz3.ab3@2851>     MOVE.l A5,-(A7)
00021746 <AmiBlitz3.ab3@2852>     MOVEM.l D1/A1-A2/A6,-(A7)
00021748 <AmiBlitz3.ab3@2853>     MOVEA.l A2,A5
0002174E <AmiBlitz3.ab3@2854>      JSR AJL_0_BF6E
00021752 <AmiBlitz3.ab3@2855>     CMP.w #$7D,D0
00021756 <AmiBlitz3.ab3@2856>      BEQ.w JL_0_3BD2
0002175C <AmiBlitz3.ab3@2857>   JMP syntaxerr
00021760 <AmiBlitz3.ab3@2860>     MOVEM.l (A7)+,D1/A1-A2/A6
00021762 <AmiBlitz3.ab3@2861>     MOVE.l A5,D2
00021764 <AmiBlitz3.ab3@2862>     SUB.l A2,D2
00021766 <AmiBlitz3.ab3@2863>     SUB.w D2,D1
00021768 <AmiBlitz3.ab3@2864>     MOVEA.l A5,A2
0002176E <AmiBlitz3.ab3@2865>     CLR.w instringon
00021770 <AmiBlitz3.ab3@2866>     MOVEA.l (A7)+,A5
00021772 <AmiBlitz3.ab3@2867>     MOVE.l D3,D0
00021776 <AmiBlitz3.ab3@2868>     BPL.w JL_0_3BF2
0002177C <AmiBlitz3.ab3@2869>   JMP ilconsterr
0002177E <AmiBlitz3.ab3@2872>     SUBQ.w #1,D0
00021782 <AmiBlitz3.ab3@2873>      BPL.w JL_0_3C20
00021788 <AmiBlitz3.ab3@2877>     MOVE.w numarg,D0
0002178C <AmiBlitz3.ab3@2878>     DIVU #$A,D0
00021790 <AmiBlitz3.ab3@2879>     ADDI.w #$30,D0
00021792 <AmiBlitz3.ab3@2880>     CMPA.l A6,A1
00021796 <AmiBlitz3.ab3@2881>      BCC.w mbovererr
00021798 <AmiBlitz3.ab3@2882>     MOVE.b D0,(A1)+
0002179A <AmiBlitz3.ab3@2883>     SWAP D0
0002179E <AmiBlitz3.ab3@2884>     ADDI.w #$30,D0
000217A0 <AmiBlitz3.ab3@2885>     CMPA.l A6,A1
000217A4 <AmiBlitz3.ab3@2886>      BCC.w mbovererr
000217A6 <AmiBlitz3.ab3@2887>     MOVE.b D0,(A1)+
000217AA <AmiBlitz3.ab3@2888>   BRA.w JL_0_3C6C
000217B0 <AmiBlitz3.ab3@2894>     CMP.w numarg,D0
000217B4 <AmiBlitz3.ab3@2895>      BCC.w JL_0_3C6C
000217B6 <AmiBlitz3.ab3@2896>     LSL.w #1,D0
000217B8 <AmiBlitz3.ab3@2897>     MOVE.w D0,D4
000217BA <AmiBlitz3.ab3@2898>     LSL.w #1,D0
000217BC <AmiBlitz3.ab3@2899>     ADD.w D4,D0
000217C2 <AmiBlitz3.ab3@2900>     MOVEA.l ptr_macrobuffer_begin,A0
000217C4 <AmiBlitz3.ab3@2901>     ADDA.w D0,A0
000217C8 <AmiBlitz3.ab3@2902>     MOVE.w $4(A0),D4
000217CC <AmiBlitz3.ab3@2903>      BEQ.w JL_0_3C6C
000217CE <AmiBlitz3.ab3@2904>     MOVEA.l (A0),A0
000217D0 <AmiBlitz3.ab3@2905>     SUBQ.w #1,D4
000217D2 <AmiBlitz3.ab3@2908>       CMPA.l A6,A1
000217D6 <AmiBlitz3.ab3@2909>        BCC.w mbovererr
000217DA <AmiBlitz3.ab3@2910>       CMP.w #"@@",(a0)
000217DE <AmiBlitz3.ab3@2911>        BNE 'l10
000217E4 <AmiBlitz3.ab3@2912>       TST.w ininclude
000217E8 <AmiBlitz3.ab3@2913>        BNE errorjoin
000217EE <AmiBlitz3.ab3@2916>       MOVE.l sourceline,a0
000217F0 <AmiBlitz3.ab3@2917>       MOVE.l (a0),a0
000217F6 <AmiBlitz3.ab3@2918>       CMP.l #0,a0
000217FA <AmiBlitz3.ab3@2919>       BNE 'l11
000217FC <AmiBlitz3.ab3@2920>       MOVEQ #0,d0
00021802 <AmiBlitz3.ab3@2921>       JSR error
00021808 <AmiBlitz3.ab3@2924>       MOVE.l a0,sourceline
0002180E <AmiBlitz3.ab3@2925>       ADDQ.l #1,linenumat
00021812 <AmiBlitz3.ab3@2926>       LEA 9(a0),a0
00021814 <AmiBlitz3.ab3@2927>       MOVE.l a0,-(a7)
00021818 <AmiBlitz3.ab3@2930>       CMP.b #" ",(a0)+
0002181C <AmiBlitz3.ab3@2931>        BEQ 'l110
00021822 <AmiBlitz3.ab3@2932>       CMP.b #";",-1(a0)
00021824 <AmiBlitz3.ab3@2933>       MOVE.l (a7)+,a0
00021828 <AmiBlitz3.ab3@2934>        BEQ 'l111
0002182A <AmiBlitz3.ab3@2935>       SUBQ.l #1,d4
0002182C <AmiBlitz3.ab3@2938>       MOVE.b (A0)+,(A1)+
00021830 <AmiBlitz3.ab3@2939>     DBF D4,JL_0_3C46
00021834 <AmiBlitz3.ab3@2941>   BRA.w JL_0_3C6C
00021836 <AmiBlitz3.ab3@2944>     CMPA.l A6,A1
0002183A <AmiBlitz3.ab3@2945>      BCC.w mbovererr
0002183C <AmiBlitz3.ab3@2946>     MOVE.b D0,(A1)+
00021840 <AmiBlitz3.ab3@2947>      BPL.w JL_0_3C6C
00021842 <AmiBlitz3.ab3@2948>     CMPA.l A6,A1
00021846 <AmiBlitz3.ab3@2949>      BCC.w mbovererr
00021848 <AmiBlitz3.ab3@2950>     MOVE.b (A2)+,(A1)+
0002184A <AmiBlitz3.ab3@2951>     SUBQ.w #1,D1
0002184E <AmiBlitz3.ab3@2954>   DBF D1,JL_0_3B48
00021850 <AmiBlitz3.ab3@2964>   CMPA.l A6,A1
00021854 <AmiBlitz3.ab3@2965>    BCC.w mbovererr
00021856 <AmiBlitz3.ab3@2966>   MOVE.b (A5)+,(A1)+
0002185A <AmiBlitz3.ab3@2967>    BNE.w JL_0_3C70
00021860 <AmiBlitz3.ab3@2968>   MOVEA.l myline,A5
00021866 <AmiBlitz3.ab3@2969>   MOVE.l myoline,D0
0002186A <AmiBlitz3.ab3@2970>    BEQ.w JL_0_3C9C
0002186C <AmiBlitz3.ab3@2971>   SUBQ.l #1,d0
0002186E <AmiBlitz3.ab3@2972>   MOVEA.l D0,A1
00021874 <AmiBlitz3.ab3@2973>   MOVE.l macrobuffer_size,D0
0002187A <AmiBlitz3.ab3@2974>   MOVEA.l _execbase,A6
00021880 <AmiBlitz3.ab3@2975>   MOVE.l mempool,a0
00021884 <AmiBlitz3.ab3@2976>   JSR _FreePooled(A6)
00021888 <AmiBlitz3.ab3@2979> BRA.w JL_0_3A46
0002188A <AmiBlitz3.ab3@2982>   MOVEA.l (A7)+,A5
0002188C <AmiBlitz3.ab3@2983> RTS
00021892 <AmiBlitz3.ab3@2987>   MOVE.l myline,D0
00021896 <AmiBlitz3.ab3@2988>   BEQ.w JL_0_3CC4
00021898 <AmiBlitz3.ab3@2989>   SUBQ.l #1,d0
0002189E <AmiBlitz3.ab3@2990>   CLR.l myline
000218A0 <AmiBlitz3.ab3@2991>   MOVEA.l D0,A1
000218A6 <AmiBlitz3.ab3@2992>   MOVE.l macrobuffer_size,D0
000218AC <AmiBlitz3.ab3@2993>   MOVEA.l _execbase,A6
000218B2 <AmiBlitz3.ab3@2994>   MOVE.l mempool,a0
000218B6 <AmiBlitz3.ab3@2995> JMP _FreePooled(A6)
000218B8 <AmiBlitz3.ab3@2998> RTS
000218BA <AmiBlitz3.ab3@3002>   MOVEQ.l #$00,D2
000218BE <AmiBlitz3.ab3@3005>   ADDQ.w #1,4(a0)
000218C0 <AmiBlitz3.ab3@3006>    MOVE.b (A4)+,D0
000218C4 <AmiBlitz3.ab3@3008>    BEQ exit1
000218C8 <AmiBlitz3.ab3@3009>    BPL.w JL_0_3CD8
000218CC <AmiBlitz3.ab3@3010>   ADDQ.w #1,4(a0)
000218CE <AmiBlitz3.ab3@3011>   ADDQ.w #1,A4
000218D2 <AmiBlitz3.ab3@3012> BRA.w JL_0_3CC8
000218D8 <AmiBlitz3.ab3@3015>    TST.w instringon
000218DC <AmiBlitz3.ab3@3016>    BNE 'lnom
000218E0 <AmiBlitz3.ab3@3017>    CMP.b #";",d0
000218E4 <AmiBlitz3.ab3@3018>    BEQ exit2
000218E8 <AmiBlitz3.ab3@3019>    CMP.b #":",d0
000218EC <AmiBlitz3.ab3@3020>    BEQ exit2
000218F0 <AmiBlitz3.ab3@3023>   CMP.b #$22,D0
000218F4 <AmiBlitz3.ab3@3024>    BNE.w JL_0_3CEA
000218FA <AmiBlitz3.ab3@3025>   NOT.w instringon
000218FE <AmiBlitz3.ab3@3026> BRA.w JL_0_3CC8
00021904 <AmiBlitz3.ab3@3030>   TST.w instringon
00021908 <AmiBlitz3.ab3@3031>    BNE.w JL_0_3CC8
0002190C <AmiBlitz3.ab3@3032>    CMP.b #"@",d0
00021910 <AmiBlitz3.ab3@3033>    BNE 'l10
00021914 <AmiBlitz3.ab3@3034>    CMP.b #"@",(a4)
00021918 <AmiBlitz3.ab3@3035>    BNE 'l10
0002191E <AmiBlitz3.ab3@3036>    TST.w ininclude
00021922 <AmiBlitz3.ab3@3037>    BNE errorjoin
00021928 <AmiBlitz3.ab3@3038>    MOVE.l sourceline3,a4
0002192E <AmiBlitz3.ab3@3039>    CMP.l #0,a4
00021932 <AmiBlitz3.ab3@3040>    BNE 'l11
00021938 <AmiBlitz3.ab3@3041>    MOVE.l sourceline,a4
0002193A <AmiBlitz3.ab3@3044>   MOVE.l (a4),a4
00021940 <AmiBlitz3.ab3@3045>       CMP.l #0,a4
00021944 <AmiBlitz3.ab3@3046>       BNE 'l12
00021946 <AmiBlitz3.ab3@3047>       MOVEQ #0,d0
0002194C <AmiBlitz3.ab3@3048>       JSR error
00021952 <AmiBlitz3.ab3@3051>    MOVE.l a4,sourceline3
00021956 <AmiBlitz3.ab3@3052>    LEA 9(a4),a4
00021958 <AmiBlitz3.ab3@3053>    MOVEQ #",",d0
0002195C <AmiBlitz3.ab3@3056>   CMP.b #$2C,D0
00021960 <AmiBlitz3.ab3@3057>    BNE.w JL_0_3D06
00021962 <AmiBlitz3.ab3@3058>   TST.w D2
00021966 <AmiBlitz3.ab3@3059>    BEQ.w JL_0_3D30
0002196A <AmiBlitz3.ab3@3060> BRA.w JL_0_3CC8
0002196E <AmiBlitz3.ab3@3064>    CMP.b #$7B,D0                                           ;"{"
00021972 <AmiBlitz3.ab3@3065>    BEQ.w 'l10
00021976 <AmiBlitz3.ab3@3066>   CMP.b #$28,D0                                            ;"("
0002197A <AmiBlitz3.ab3@3069>    BNE.w JL_0_3D14
0002197C <AmiBlitz3.ab3@3070>   ADDQ.w #1,D2
00021980 <AmiBlitz3.ab3@3071> BRA.w JL_0_3CC8
00021984 <AmiBlitz3.ab3@3074>   CMP.b #$7D,D0                                           ;"}"
00021988 <AmiBlitz3.ab3@3075>    BNE.w JL_0_3D22
0002198A <AmiBlitz3.ab3@3076>  TST.w D2
0002198E <AmiBlitz3.ab3@3077>    BEQ.w JL_0_3D30
00021992 <AmiBlitz3.ab3@3081>    CMP.b #$7D,D0                                           ;"}"
00021996 <AmiBlitz3.ab3@3082>    BEQ.w 'l10
0002199A <AmiBlitz3.ab3@3083>   CMP.b #$29,D0                                            ;")"
0002199E <AmiBlitz3.ab3@3086>    BNE.w JL_0_3CC8
000219A0 <AmiBlitz3.ab3@3087>   SUBQ.w #1,D2
000219A4 <AmiBlitz3.ab3@3088> BRA.w JL_0_3CC8
000219A6 <AmiBlitz3.ab3@3091> RTS
000219A8 <AmiBlitz3.ab3@3095>       SUBQ.l #1,a4
000219AE <AmiBlitz3.ab3@3096>       CLR.l sourceline3
000219B0 <AmiBlitz3.ab3@3097> RTS
000219B2 <AmiBlitz3.ab3@3101>       MOVEQ #0,d0
000219B4 <AmiBlitz3.ab3@3102>       SUBQ.l #1,a4
000219BA <AmiBlitz3.ab3@3103>       CLR.l sourceline3
000219BC <AmiBlitz3.ab3@3104> RTS
000219C0 <AmiBlitz3.ab3@3108>   CMP.b #$7B,D0                                            ;"{"
000219C4 <AmiBlitz3.ab3@3109>   BEQ.w JL_0_3D3E
000219C8 <AmiBlitz3.ab3@3110>   CMP.b #$28,D0                                            ;"("
000219CA <AmiBlitz3.ab3@3113> RTS
000219CE <AmiBlitz3.ab3@3117>   CMP.b #$7D,D0                                            ;"}"
000219D2 <AmiBlitz3.ab3@3118>   BEQ.w JL_0_3D4C
000219D6 <AmiBlitz3.ab3@3119>   CMP.b #$29,D0                                            ;")"
000219D8 <AmiBlitz3.ab3@3122> RTS
000219DA <AmiBlitz3.ab3@3126> stopit:     Ds.w 1
000219DC <AmiBlitz3.ab3@3127> clrreq:     Ds.w 1
000219E0 <AmiBlitz3.ab3@3148>   MOVE.w clrreq(PC),D0
000219E4 <AmiBlitz3.ab3@3149>    BEQ.w close_compilewin__skip
00021A16 <AmiBlitz3.ab3@3151> 
00021A1C <AmiBlitz3.ab3@3153>   LEA clrreq,a0
00021A1E <AmiBlitz3.ab3@3154>   NOT.w (a0)                                               ;reass
00021A24 <AmiBlitz3.ab3@3155>   MOVEA.l ptr_ThisTask,A0
00021A28 <AmiBlitz3.ab3@3156>   CLR.l $1E(A0)
00021A2C <AmiBlitz3.ab3@3157>   CLR.l $2A(A0)
00021A2E <AmiBlitz3.ab3@3160> RTS
00021A30 <AmiBlitz3.ab3@3163> intsused:  Ds.w 1
00021A38 <AmiBlitz3.ab3@3167>   MOVE.w #-1,blitzoff
00021A3E <AmiBlitz3.ab3@3168>   CLR.w intsused
00021A44 <AmiBlitz3.ab3@3169>   CLR.w anyerrs
00021A4A <AmiBlitz3.ab3@3170>   CLR.w blitzmode
00021A50 <AmiBlitz3.ab3@3171>   CLR.w dontwrite                                              ;nomemleft
00021A56 <AmiBlitz3.ab3@3172>   CLR.w constmode
00021A5C <AmiBlitz3.ab3@3173>   CLR.w cmake
00021A62 <AmiBlitz3.ab3@3174>   CLR.w cfetchmode
00021A68 <AmiBlitz3.ab3@3175>   CLR.l intdata1
00021A6E <AmiBlitz3.ab3@3176>   CLR.w fuckpos
00021A74 <AmiBlitz3.ab3@3177>   CLR.w procnum
00021A7A <AmiBlitz3.ab3@3178>   CLR.w procnum2
00021A80 <AmiBlitz3.ab3@3179>   CLR.w dfetch
00021A86 <AmiBlitz3.ab3@3180>   CLR.l titleat
00021A8C <AmiBlitz3.ab3@3181>   CLR.b usedpath
00021A92 <AmiBlitz3.ab3@3182>   CLR.b path2
00021A98 <AmiBlitz3.ab3@3183>   CLR.w inerr
00021A9E <AmiBlitz3.ab3@3184>   CLR.w intlevel
00021AA4 <AmiBlitz3.ab3@3185>   CLR.l cont_pc
00021AAA <AmiBlitz3.ab3@3186>   CLR.l cont_pc2
00021AB0 <AmiBlitz3.ab3@3187>   CLR.l lastcontlink
00021ABA <AmiBlitz3.ab3@3188>   MOVE.l destbufferstart,destpointer
00021AC4 <AmiBlitz3.ab3@3189>   MOVE.l destbufferstart,bigpc
00021ACE <AmiBlitz3.ab3@3190>   MOVE.l destbufferend,libend
00021AD8 <AmiBlitz3.ab3@3191>   MOVE.l data1start,data1
00021AE2 <AmiBlitz3.ab3@3192>   MOVE.l data2at,data2
00021AEA <AmiBlitz3.ab3@3193>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021AF2 <AmiBlitz3.ab3@3194>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021AF8 <AmiBlitz3.ab3@3195>   CLR.w oldvcodelen
00021AFE <AmiBlitz3.ab3@3196>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021B00 <AmiBlitz3.ab3@3197> RTS
00021B02 <AmiBlitz3.ab3@3200> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021B08 <AmiBlitz3.ab3@3204>   LEA  clrreq,a1
00021B0C <AmiBlitz3.ab3@3205>   MOVE.w #2000,(a1)
00021B36 <AmiBlitz3.ab3@3206>   !basic
00021B4C <AmiBlitz3.ab3@3207> 
00021B9C <AmiBlitz3.ab3@3208>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00021BA4 <AmiBlitz3.ab3@3209>   calcpro.l      = 0
00021BAC <AmiBlitz3.ab3@3210>   calcpro_old.l  = 0
00021BB8 <AmiBlitz3.ab3@3211>   typ_old.l      = -1
00021BC4 <AmiBlitz3.ab3@3212>   pass_old.l     = -1
00021BCA <AmiBlitz3.ab3@3213>   update_comstatus_gui.b = True ; for the first
00021C04 <AmiBlitz3.ab3@3215>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021C3E <AmiBlitz3.ab3@3216>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021C5C <AmiBlitz3.ab3@3217>   !asm
00021C8E <AmiBlitz3.ab3@3218> 
00021C94 <AmiBlitz3.ab3@3220>   CLR.w stopit
00021C96 <AmiBlitz3.ab3@3221> RTS
00021C9C <AmiBlitz3.ab3@3225>   CLR.w storedebugmode
00021CA2 <AmiBlitz3.ab3@3226>   CLR.b iserror
00021CA6 <AmiBlitz3.ab3@3227>   BSR.w compilerequester
00021CB0 <AmiBlitz3.ab3@3229>   MOVE.l #0,globallinecount
00021CB6 <AmiBlitz3.ab3@3230>   JSR check_of_same_source
00021CBA <AmiBlitz3.ab3@3231>   BSR.w call_setpointerbusy
00021CBE <AmiBlitz3.ab3@3232>   BSR.w setcvars
00021CC6 <AmiBlitz3.ab3@3233>   MOVE.w #$8000,globalvarpointer
00021CD0 <AmiBlitz3.ab3@3234>   MOVE.l #newtype_quick,defaulttype
00021CD6 <AmiBlitz3.ab3@3235>   MOVE.l A7,passstack
00021CE0 <AmiBlitz3.ab3@3236>   MOVE.l #firstitem_,sourceline
00021CEA <AmiBlitz3.ab3@3237>   MOVE.w numlines_org,linesleft
00021CF4 <AmiBlitz3.ab3@3238>   MOVE.l numlines,numlines2
00021CFA <AmiBlitz3.ab3@3239>   ADDQ.w #1,linesleft
00021D00 <AmiBlitz3.ab3@3240>   ADDQ.l #1,numlines2
00021D0A <AmiBlitz3.ab3@3241>   MOVE.l #-1,linenumat
00021D0E <AmiBlitz3.ab3@3242>   BSR.w resetlibs
00021D12 <AmiBlitz3.ab3@3243>   BSR.w Aclearallvars
00021D18 <AmiBlitz3.ab3@3244>   LEA progress_per_line+2,A0
00021D1A <AmiBlitz3.ab3@3245>   MOVEQ.l #$03,D0
00021D1C <AmiBlitz3.ab3@3248>     CLR.w (A0)+
00021D20 <AmiBlitz3.ab3@3249>   DBF D0,JL_0_40EC
00021D26 <AmiBlitz3.ab3@3252>   LEA _include,a0
00021D2A <AmiBlitz3.ab3@3253>   MOVEM.l a0-a6/d0-d7,-(a7)
00021D30 <AmiBlitz3.ab3@3254>   LEA ptr_parameterstore,a1
00021D32 <AmiBlitz3.ab3@3257>     MOVE.b (a0)+,(a1)+
00021D36 <AmiBlitz3.ab3@3258>   BNE 'l1b
00021D38 <AmiBlitz3.ab3@3260>   MOVEQ #9,d2
00021D3E <AmiBlitz3.ab3@3261>   JSR findlabel2
00021D42 <AmiBlitz3.ab3@3262>   BNE 'd
00021D4A <AmiBlitz3.ab3@3263>   MOVE.l #0,8(a2)
00021D4E <AmiBlitz3.ab3@3264>   MOVEM.l (a7)+,a0-a6/d0-d7
00021D52 <AmiBlitz3.ab3@3265> BRA 'd2
00021D58 <AmiBlitz3.ab3@3268>   JSR addlabelhash
00021D60 <AmiBlitz3.ab3@3269>   MOVE.l #$1,$4(A2)
00021D68 <AmiBlitz3.ab3@3270>   MOVE.l #0,8(a2)
00021D6C <AmiBlitz3.ab3@3271>   MOVEM.l (a7)+,a0-a6/d0-d7
00021D72 <AmiBlitz3.ab3@3274>   LEA _debug,a0
00021D76 <AmiBlitz3.ab3@3275>   MOVEM.l a0-a6/d0-d7,-(a7)
00021D7C <AmiBlitz3.ab3@3276>   LEA ptr_parameterstore,a1
00021D7E <AmiBlitz3.ab3@3279>     MOVE.b (a0)+,(a1)+
00021D82 <AmiBlitz3.ab3@3280>   BNE 'l9b
00021D84 <AmiBlitz3.ab3@3282>   MOVEQ #7,d2
00021D8A <AmiBlitz3.ab3@3283>   JSR findlabel2
00021D8E <AmiBlitz3.ab3@3284>   BNE 'd9
00021D92 <AmiBlitz3.ab3@3285>   MOVE.b debugmode(PC),D0
00021D94 <AmiBlitz3.ab3@3286>   EXT.w d0
00021D96 <AmiBlitz3.ab3@3287>   EXT.l d0
00021D9A <AmiBlitz3.ab3@3288>   MOVE.l d0,8(a2)
00021D9E <AmiBlitz3.ab3@3289>   MOVEM.l (a7)+,a0-a6/d0-d7
00021DA2 <AmiBlitz3.ab3@3290> BRA 'd9b
00021DA8 <AmiBlitz3.ab3@3293>   JSR addlabelhash
00021DB0 <AmiBlitz3.ab3@3294>   MOVE.l #$1,$4(A2)
00021DB4 <AmiBlitz3.ab3@3295>   MOVE.b debugmode(PC),D0
00021DB6 <AmiBlitz3.ab3@3296>   EXT.w d0
00021DB8 <AmiBlitz3.ab3@3297>   EXT.l d0
00021DBC <AmiBlitz3.ab3@3298>   MOVE.l d0,8(a2)
00021DC0 <AmiBlitz3.ab3@3299>   MOVEM.l (a7)+,a0-a6/d0-d7
00021DC6 <AmiBlitz3.ab3@3302>   MOVE.l #firstitem_,a0
00021DC8 <AmiBlitz3.ab3@3303>   MOVE.l (a0),a0
00021DCC <AmiBlitz3.ab3@3304>   LEA 9(a0),a0
00021DD4 <AmiBlitz3.ab3@3305>   MOVE.w #0,exdebug
00021DDA <AmiBlitz3.ab3@3306>   TST.b debugmode
00021DDE <AmiBlitz3.ab3@3307>    BEQ 'l10
00021DE0 <AmiBlitz3.ab3@3310>   MOVE.b (a0)+,d0
00021DE4 <AmiBlitz3.ab3@3311>    BEQ 'l10
00021DE8 <AmiBlitz3.ab3@3312>   CMP.b #$20,d0
00021DEC <AmiBlitz3.ab3@3313>    BEQ 'l2
00021DEE <AmiBlitz3.ab3@3314>   SUBQ.l #1,a0
00021DF4 <AmiBlitz3.ab3@3315>   CMP.l #"DEBU",(a0)
00021DF8 <AmiBlitz3.ab3@3316>    BNE 'l10
00021DFE <AmiBlitz3.ab3@3317>   CMP.b #"G",4(a0)
00021E02 <AmiBlitz3.ab3@3318>    BNE 'l10
00021E0A <AmiBlitz3.ab3@3319>   MOVE.w #$0,debugversion
00021E12 <AmiBlitz3.ab3@3320>   MOVE.b #1,exdebug
00021E18 <AmiBlitz3.ab3@3323>   LEA nops4,A0
00021E1E <AmiBlitz3.ab3@3324>   LEA dataget,A1
00021E24 <AmiBlitz3.ab3@3325>   JSR pokecode2                                            ;write intro nops
00021E2A <AmiBlitz3.ab3@3326>   MOVE.l #$01010101,d1
00021E30 <AmiBlitz3.ab3@3327>   JSR writedatalong                                        ;for the 4 tempregs
00021E36 <AmiBlitz3.ab3@3328>   JSR writedatalong
00021E3C <AmiBlitz3.ab3@3329>   JSR writedatalong
00021E42 <AmiBlitz3.ab3@3330>   JSR writedatalong
00021E48 <AmiBlitz3.ab3@3331>   TST.b saved0
00021E4C <AmiBlitz3.ab3@3332>    BEQ 'l1
00021E52 <AmiBlitz3.ab3@3333>   MOVE.l #$4e714e71,d1
00021E58 <AmiBlitz3.ab3@3334>   JSR writelong                                            ;add 2 nops
00021E5E <AmiBlitz3.ab3@3335>   MOVE.l #$4e714e71,d1
00021E64 <AmiBlitz3.ab3@3336>   JSR writelong                                            ;add 2 nops
00021E6A <AmiBlitz3.ab3@3337>   MOVE.l #$4e714e71,d1
00021E70 <AmiBlitz3.ab3@3338>   JSR writelong                                            ;add 2 nops
00021E76 <AmiBlitz3.ab3@3339>    MOVE.l #$4e714e71,d1
00021E7C <AmiBlitz3.ab3@3340>   JSR writelong                                            ;add 2 nops
00021E80 <AmiBlitz3.ab3@3343>   MOVE.b debugmode(PC),D1
00021E84 <AmiBlitz3.ab3@3344>    BEQ.b JL_0_4132
00021E8E <AmiBlitz3.ab3@3345>   MOVE.b debugmode,storedebugmode
00021E92 <AmiBlitz3.ab3@3346>   MOVE.w #$FFDC,D1
00021E96 <AmiBlitz3.ab3@3347>    BSR.w uselib
00021E9C <AmiBlitz3.ab3@3348>   TST.w debugversion                                       ;make a version for debugger
00021EA0 <AmiBlitz3.ab3@3349>    BNE.b JL_0_412A
00021EA4 <AmiBlitz3.ab3@3353>   MOVE.w #$FA3C,D1
00021EA8 <AmiBlitz3.ab3@3354>    BSR.w uselib
00021EAC <AmiBlitz3.ab3@3355>   MOVE.w #$0001,D1
00021EB0 <AmiBlitz3.ab3@3356>    BSR.w uselib
00021EB4 <AmiBlitz3.ab3@3357> BRA.b JL_0_4132
00021EB8 <AmiBlitz3.ab3@3360>   MOVE.w #$FA32,D1
00021EBC <AmiBlitz3.ab3@3361>   BSR.w uselib
00021EC0 <AmiBlitz3.ab3@3364>   BSR.w nextline
00021EC6 <AmiBlitz3.ab3@3365>   CLR.l linenum
00021ECC <AmiBlitz3.ab3@3366>   CLR.l stacktrack
00021ED2 <AmiBlitz3.ab3@3369>   ADDQ.l #1,linenum
00021EDC <AmiBlitz3.ab3@3370>   MOVE.l destpointer,destpointer2
00021EE2 <AmiBlitz3.ab3@3371>   MOVE.l a5,sourceline2
00021EE6 <AmiBlitz3.ab3@3372>   BSR.w compile_line                                        ;compile pass
00021EEA <AmiBlitz3.ab3@3375>   BSR.w nextline
00021EEE <AmiBlitz3.ab3@3376>    BNE.w JL_0_4136
00021EF2 <AmiBlitz3.ab3@3377>   BSR.w JUMP_do_runerrson
00021EF6 <AmiBlitz3.ab3@3378>   BSR.w pointchk
00021EFC <AmiBlitz3.ab3@3379>   TST.b objectcount
00021F00 <AmiBlitz3.ab3@3380>    BNE macenderr
00021F06 <AmiBlitz3.ab3@3381>   CLR.l linenumat
00021F0A <AmiBlitz3.ab3@3382>   BSR.w errchx2
00021F14 <AmiBlitz3.ab3@3383>   CMP.l #-1,bssend
00021F18 <AmiBlitz3.ab3@3384>    BNE 'l30
00021F22 <AmiBlitz3.ab3@3385>   MOVE.l destpointer,bssend                                ;compile end
00021F28 <AmiBlitz3.ab3@3388>   MOVE.l destpointer,d0
00021F32 <AmiBlitz3.ab3@3389>   CMP.l #-1,bssstart
00021F36 <AmiBlitz3.ab3@3390>   BNE 'lnf6
00021F40 <AmiBlitz3.ab3@3391>   CMP.l #-1,chipstart
00021F44 <AmiBlitz3.ab3@3392>   BNE 'lnf6
00021F48 <AmiBlitz3.ab3@3393> BRA 'leven4
00021F4E <AmiBlitz3.ab3@3396>   MOVE.l destpointer,d1
00021F50 <AmiBlitz3.ab3@3397>   ADDQ.l #3,d1
00021F56 <AmiBlitz3.ab3@3398>   AND.l #$fffffffc,d1                                      ;bug ?
00021F5C <AmiBlitz3.ab3@3399>   MOVE.l d1,destpointer
00021F66 <AmiBlitz3.ab3@3402>   MOVE.l destpointer,codeend
00021F70 <AmiBlitz3.ab3@3403>   CMP.l #-1,chipend
00021F74 <AmiBlitz3.ab3@3404>   BNE 'l31
00021F7E <AmiBlitz3.ab3@3405>   MOVE.l destpointer,chipend
00021F84 <AmiBlitz3.ab3@3408>   MOVE.l destpointer,d1
00021F86 <AmiBlitz3.ab3@3409>   ADDQ.l #1,d1
00021F8C <AmiBlitz3.ab3@3410>   AND.l #$fffffffe,d1                                     ;new evenexit
00021F92 <AmiBlitz3.ab3@3411>   MOVE.l d1,destpointer
00021F96 <AmiBlitz3.ab3@3412>   MOVE.b debugmode(PC),D1
00021F9A <AmiBlitz3.ab3@3413>    BEQ.b JL_0_4180
00021F9E <AmiBlitz3.ab3@3414>    BSR.w debugstuff
00021FA2 <AmiBlitz3.ab3@3415>   MOVE.w #$C300,D1
00021FA8 <AmiBlitz3.ab3@3416>    JSR Atokejsr
00021FAC <AmiBlitz3.ab3@3417>    BSR.w debugstuff
00021FB0 <AmiBlitz3.ab3@3418>   MOVE.l eopcode(PC),D1
00021FB6 <AmiBlitz3.ab3@3419>    JSR writelong
00021FBA <AmiBlitz3.ab3@3420>   MOVE.l lastcontlink(PC),D1
00021FBE <AmiBlitz3.ab3@3421>    BEQ.b JL_0_4180
00021FC0 <AmiBlitz3.ab3@3422>   MOVEA.l D1,A0
00021FC4 <AmiBlitz3.ab3@3423>   CLR.w $6(A0)
00021FCE <AmiBlitz3.ab3@3429>   MOVE.l destpointer,endop                                ;where end goes...
00021FD4 <AmiBlitz3.ab3@3431>   TST.w blitzmode
00021FD8 <AmiBlitz3.ab3@3432>   BEQ.w JL_0_4198
00021FDC <AmiBlitz3.ab3@3433>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
00021FE2 <AmiBlitz3.ab3@3436>   TST.w intsused
00021FE6 <AmiBlitz3.ab3@3437>   BEQ.b JL_0_41AA
00021FEA <AmiBlitz3.ab3@3438>   MOVE.w #$C105,D1                                        ;interupts off!
00021FF0 <AmiBlitz3.ab3@3439>   JSR tokejsr2
00021FF4 <AmiBlitz3.ab3@3442>   BSR.w calcstatic
00021FFA <AmiBlitz3.ab3@3443>   MOVE.w D4,numstatic
00022000 <AmiBlitz3.ab3@3444>   MOVE.l D3,staticdata
00022004 <AmiBlitz3.ab3@3445>    BSR.w calcmaxs
0002200A <AmiBlitz3.ab3@3447>   TST.l tokeslist
0002200E <AmiBlitz3.ab3@3448>    BEQ.b JL_0_41F8
00022014 <AmiBlitz3.ab3@3449>   MOVE.w gotocode,D1                                       ;jmp!
0002201A <AmiBlitz3.ab3@3450>    JSR writeword
00022024 <AmiBlitz3.ab3@3451>   MOVE.l destpointer,endjmpat
00022028 <AmiBlitz3.ab3@3452>    BSR.w addoff
0002202E <AmiBlitz3.ab3@3453>    JSR writelong                                           
00022032 <AmiBlitz3.ab3@3455>    BSR.w JL_0_6C76                                         ;has to be done before finits!
00022038 <AmiBlitz3.ab3@3459>   TST.w dontwrite
0002203C <AmiBlitz3.ab3@3460>    BNE.b JL_0_41F8
00022040 <AmiBlitz3.ab3@3461>   MOVEA.l endjmpat(PC),A4
00022046 <AmiBlitz3.ab3@3462>   MOVE.l destpointer,(A4)
0002204C <AmiBlitz3.ab3@3465>   TST.b returncode
00022050 <AmiBlitz3.ab3@3466>   BEQ 'l2
00022054 <AmiBlitz3.ab3@3467>   MOVE.w #$2e80,d1
0002205A <AmiBlitz3.ab3@3468>   JSR writeword
00022060 <AmiBlitz3.ab3@3471>   JSR JL_0_B98A
00022066 <AmiBlitz3.ab3@3472>   TST.b returncode
0002206A <AmiBlitz3.ab3@3473>   BEQ 'l3
0002206E <AmiBlitz3.ab3@3474>   MOVE.w #$4e75,d1
00022074 <AmiBlitz3.ab3@3475>   JSR writeword
00022078 <AmiBlitz3.ab3@3476> BRA 'l1
0002207E <AmiBlitz3.ab3@3479>   MOVE.l #$70004E75,D1
00022084 <AmiBlitz3.ab3@3480>   JSR writelong                                            ;write moveq #0,d0:rts
0002208A <AmiBlitz3.ab3@3483>   JSR JL_0_B73E
0002208E <AmiBlitz3.ab3@3484>   BSR.w asmfixer
00022092 <AmiBlitz3.ab3@3485>   BSR.w close_compilewin
00022096 <AmiBlitz3.ab3@3486> BRA.w call_setpointernormal
0002209C <AmiBlitz3.ab3@3490> JMP do_runerrson
0002209E <AmiBlitz3.ab3@3494> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
000220A0 <AmiBlitz3.ab3@3495>             Dc.b $4E,$40                                   ;TRAP  #00
000220A4 <AmiBlitz3.ab3@3497> endjmpat:   Ds.l 1
000220AA <AmiBlitz3.ab3@3501>   MOVEA.l newtype_string,A2
000220B0 <AmiBlitz3.ab3@3502>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
000220B4 <AmiBlitz3.ab3@3505>     CMPA.w #$0,A2
000220B8 <AmiBlitz3.ab3@3506>      BEQ.w pointchk_done
000220BC <AmiBlitz3.ab3@3507>     CMP.l $4(A2),D0
000220C0 <AmiBlitz3.ab3@3508>      BNE.w pointchk_next
000220C8 <AmiBlitz3.ab3@3509>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
000220CC <AmiBlitz3.ab3@3510> BRA.w notypeerr
000220CE <AmiBlitz3.ab3@3513>     MOVEA.l (A2),A2
000220D2 <AmiBlitz3.ab3@3514> BRA.w pointchk_loop
000220D4 <AmiBlitz3.ab3@3517> RTS
000220DA <AmiBlitz3.ab3@3521>   LEA labelbase,A2
000220DC <AmiBlitz3.ab3@3525>   MOVE.l (A2),D0                                           ;testlabels
000220E0 <AmiBlitz3.ab3@3526>    BEQ.w errchx2_done
000220E2 <AmiBlitz3.ab3@3527>   MOVEA.l D0,A2
000220E6 <AmiBlitz3.ab3@3528>   MOVE.l $4(A2),D0
000220EA <AmiBlitz3.ab3@3529>   BTST #$0,D0
000220EE <AmiBlitz3.ab3@3530>    BNE.w errchx2_loop
000220F2 <AmiBlitz3.ab3@3531>   MOVE.l $8(A2),D0
000220F6 <AmiBlitz3.ab3@3532>    BNE.w errchx2_loop
000220FE <AmiBlitz3.ab3@3533>   MOVE.w $10(A2),linenumat+2
00022100 <AmiBlitz3.ab3@3534>   MOVEQ #0,d0
00022104 <AmiBlitz3.ab3@3535>   MOVE.b $12(a2),d0
0002210C <AmiBlitz3.ab3@3536>   MOVE.w 0(a2,d0),linenumat
00022112 <AmiBlitz3.ab3@3537> JMP nolaberr                                               ;label not found
00022118 <AmiBlitz3.ab3@3540>   MOVE.l concomsp,D0
0002211E <AmiBlitz3.ab3@3541>   CMP.l #concomstack,D0
00022122 <AmiBlitz3.ab3@3542>    BNE.w chxerr4
00022128 <AmiBlitz3.ab3@3543>   MOVE.w connest,D1
0002212C <AmiBlitz3.ab3@3544>    BNE.w chxerr4
0002212E <AmiBlitz3.ab3@3547>   MOVE.l D1,-(A7)
00022134 <AmiBlitz3.ab3@3548>   MOVE.l firstsel,D1
00022138 <AmiBlitz3.ab3@3549>    BNE.w errchx_err1
0002213E <AmiBlitz3.ab3@3550>   MOVE.l firstrep,D1
00022142 <AmiBlitz3.ab3@3551>    BNE.w errchx_err2
00022148 <AmiBlitz3.ab3@3552>   MOVE.w intstring,D1
0002214C <AmiBlitz3.ab3@3553>    BNE.w errchx_err3
00022150 <AmiBlitz3.ab3@3554>   MOVE.l 4(a7),d1
00022156 <AmiBlitz3.ab3@3555>   MOVE.w proceduremode,D1
0002215A <AmiBlitz3.ab3@3556>    BNE.w errchx_err6
00022160 <AmiBlitz3.ab3@3557>   MOVE.l firstiff,d1
00022164 <AmiBlitz3.ab3@3558>    BNE errchx_err5
0002216A <AmiBlitz3.ab3@3559>   MOVE.l firstfor,D1
0002216E <AmiBlitz3.ab3@3560>    BNE.w errchx_err7
00022170 <AmiBlitz3.ab3@3561>   MOVE.l (A7)+,D1
00022172 <AmiBlitz3.ab3@3562> RTS
0002217C <AmiBlitz3.ab3@3566>   MOVE.l sellineat,linenumat
00022182 <AmiBlitz3.ab3@3567> JMP selerrz
0002218C <AmiBlitz3.ab3@3570>   MOVE.l replineat,linenumat
00022192 <AmiBlitz3.ab3@3571> JMP unterr3
0002219C <AmiBlitz3.ab3@3574>   MOVE.l intlineat,linenumat
000221A2 <AmiBlitz3.ab3@3575> JMP interr2
000221AC <AmiBlitz3.ab3@3578>   MOVE.l iflineat,linenumat
000221B2 <AmiBlitz3.ab3@3579> JMP noenderr
000221BC <AmiBlitz3.ab3@3582>   MOVE.l prolineat,linenumat
000221C2 <AmiBlitz3.ab3@3583> JMP nopenderr
000221CC <AmiBlitz3.ab3@3586>   MOVE.l forlineat,linenumat
000221D2 <AmiBlitz3.ab3@3587> JMP nonexterr
000221DC <AmiBlitz3.ab3@3590>   MOVE.l ciflineat,linenumat
000221E2 <AmiBlitz3.ab3@3591> JMP nocenderr
000221EC <AmiBlitz3.ab3@3595>   MOVE.l data1,maxsat
000221EE <AmiBlitz3.ab3@3596>   MOVEQ.l #$00,D4
000221F4 <AmiBlitz3.ab3@3597>   MOVEA.l libpointer,A2
000221F8 <AmiBlitz3.ab3@3600>     CMPA.w #$0,A2
000221FC <AmiBlitz3.ab3@3601>      BEQ.w calcmaxs_done
00022200 <AmiBlitz3.ab3@3602>     TST.w $C(A2)
00022204 <AmiBlitz3.ab3@3603>      BPL.w calcmaxs_next
00022208 <AmiBlitz3.ab3@3604>     MOVE.l $12(A2),D0
0002220C <AmiBlitz3.ab3@3605>     TST.w -$2(A2,D0.L)
00022210 <AmiBlitz3.ab3@3606>      BEQ.w calcmaxs_next
00022212 <AmiBlitz3.ab3@3607>     ADDQ.w #1,D4
00022216 <AmiBlitz3.ab3@3608>     MOVE.w -$6(A2,D0.L),D1
0002221A <AmiBlitz3.ab3@3609>     BSR.w pokedata1
0002221C <AmiBlitz3.ab3@3610>     MOVEQ.l #$01,D1
00022220 <AmiBlitz3.ab3@3611>     MOVE.w -$2(A2,D0.L),D2
00022222 <AmiBlitz3.ab3@3612>     LSL.w D2,D1
00022226 <AmiBlitz3.ab3@3613>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
0002222A <AmiBlitz3.ab3@3614>     BSR.w writedatalong
0002222C <AmiBlitz3.ab3@3617>     MOVEA.l (A2),A2
00022230 <AmiBlitz3.ab3@3618> BRA.w calcmaxs_loop
00022236 <AmiBlitz3.ab3@3621>   MOVE.w D4,maxsused
0002223A <AmiBlitz3.ab3@3622>    BEQ.w calcmaxs_done2
0002223E <AmiBlitz3.ab3@3623>   MOVE.w #$FFFA,D1                                         ;;use memlib
00022242 <AmiBlitz3.ab3@3624> BRA.w uselib
00022244 <AmiBlitz3.ab3@3627> RTS
0002224A <AmiBlitz3.ab3@3631>    MOVE.l a7,stackaddr
0002224E <AmiBlitz3.ab3@3632>    BSR.w compile_term
00022252 <AmiBlitz3.ab3@3633>    BSR.w reget
00022256 <AmiBlitz3.ab3@3634>    BNE.w illeolerr
0002225C <AmiBlitz3.ab3@3635>    TST.w dontwrite
00022260 <AmiBlitz3.ab3@3636>    BNE 'l1
00022266 <AmiBlitz3.ab3@3637>    TST.l stacktrack
0002226A <AmiBlitz3.ab3@3638>    BNE errormsg_stack
0002226E <AmiBlitz3.ab3@3641>    CMP.w #-$7FDE,D0
00022272 <AmiBlitz3.ab3@3642>    BNE.w compile_line_notelse
00022278 <AmiBlitz3.ab3@3643>    JSR do_else2
0002227C <AmiBlitz3.ab3@3644> BRA.w compile_line
0002227E <AmiBlitz3.ab3@3647>   TST.w D0
00022282 <AmiBlitz3.ab3@3648>   BNE.w compile_line
00022288 <AmiBlitz3.ab3@3653>   MOVE.l firstiff,D0
0002228C <AmiBlitz3.ab3@3654>    BEQ.w compile_line_done
0002228E <AmiBlitz3.ab3@3655>   MOVEA.l D0,A0
00022292 <AmiBlitz3.ab3@3656>   MOVE.w $C(A0),D1
00022296 <AmiBlitz3.ab3@3657>    BPL.w compile_line_done
0002229A <AmiBlitz3.ab3@3661>   BCLR #$F,D1
000222A0 <AmiBlitz3.ab3@3662>    JSR AJL_0_D7B8
000222A6 <AmiBlitz3.ab3@3663>    JSR AJL_0_D81C
000222AA <AmiBlitz3.ab3@3664> BRA.w compile_line_unthen
000222AC <AmiBlitz3.ab3@3667> RTS
000222B2 <AmiBlitz3.ab3@3671>   LEA lastgloballabel,A0
000222B4 <AmiBlitz3.ab3@3672>   TST.b (A0)
000222B8 <AmiBlitz3.ab3@3673>   BEQ.w nolocerr
000222BE <AmiBlitz3.ab3@3674>   LEA ptr_parameterstore,A1
000222C0 <AmiBlitz3.ab3@3675>   MOVEQ.l #$00,D2
000222C2 <AmiBlitz3.ab3@3678>   ADDQ.w #1,D2
000222C4 <AmiBlitz3.ab3@3679>   MOVE.b (A0)+,(A1)+
000222C8 <AmiBlitz3.ab3@3680>    BNE.w createlab_loop
000222CE <AmiBlitz3.ab3@3681>   MOVE.b #$27,-$1(A1)
000222D0 <AmiBlitz3.ab3@3682>   MOVE.w D2,-(A7)
000222D6 <AmiBlitz3.ab3@3683>    JSR makename4
000222D8 <AmiBlitz3.ab3@3684>   CMP.w (A7)+,D2
000222DC <AmiBlitz3.ab3@3685>    BEQ.w syntaxerr
000222DE <AmiBlitz3.ab3@3686>    TST.w d0
000222E2 <AmiBlitz3.ab3@3687>    BPL createlab_done
000222EA <AmiBlitz3.ab3@3688>    MOVE.w #$3a,lastchar
000222EC <AmiBlitz3.ab3@3689>    SUBQ.l #2,a5
000222EE <AmiBlitz3.ab3@3692> RTS
000222F8 <AmiBlitz3.ab3@3696>   MOVE.l #forthstack,forthsp
00022302 <AmiBlitz3.ab3@3697>   MOVE.l #precstack,precsp
00022304 <AmiBlitz3.ab3@3698> RTS
00022306 <AmiBlitz3.ab3@3705>   MOVEQ.l #$00,D4
00022330 <AmiBlitz3.ab3@3708>   !basic
00022372 <AmiBlitz3.ab3@3709> 
00022382 <AmiBlitz3.ab3@3711>   If (c_abort = 1)           ; check if set
00022384 <AmiBlitz3.ab3@3712>     MOVEQ.l #-$01,d4
0002238A <AmiBlitz3.ab3@3713>     MOVE.w D4,stopit
000223A8 <AmiBlitz3.ab3@3714>     !asm
000223AC <AmiBlitz3.ab3@3715>     BRA chkrealstop__skip
000223CA <AmiBlitz3.ab3@3717>   !asm
000223CC <AmiBlitz3.ab3@3718>   MOVEQ.l #$00,D6
000223CE <AmiBlitz3.ab3@3719>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
000223D0 <AmiBlitz3.ab3@3723> RTS
000223D4 <AmiBlitz3.ab3@3727>   MOVE.w stopit(PC),D0
000223D8 <AmiBlitz3.ab3@3728>   BEQ chkstop__chk
000223DE <AmiBlitz3.ab3@3729>   SUBQ.w #1,stopit
000223E0 <AmiBlitz3.ab3@3733> RTS
000223E8 <AmiBlitz3.ab3@3736>   MOVE.w #2000,stopit
000223EC <AmiBlitz3.ab3@3737>   BSR.w chkrealstop
000223F0 <AmiBlitz3.ab3@3738>   BEQ.b chkstop__rts
000223F4 <AmiBlitz3.ab3@3740>   BSR.w close_compilewin
000223F8 <AmiBlitz3.ab3@3741>   BSR.w call_setpointernormal
000223FE <AmiBlitz3.ab3@3743>   MOVEA.l errstack,A7
00022404 <AmiBlitz3.ab3@3744>   MOVEA.l errcont,A0
0002240C <AmiBlitz3.ab3@3745>   MOVE.w #-1,anyerrs
0002240E <AmiBlitz3.ab3@3746> JMP (A0)
00022412 <AmiBlitz3.ab3@3749> d_pc:           Ds.l 1
00022416 <AmiBlitz3.ab3@3750> d_bigpc:        Ds.l 1
00022418 <AmiBlitz3.ab3@3751> d_nomemleft:    Ds.w 1
0002241C <AmiBlitz3.ab3@3752> cont_pc:        Ds.l 1
00022420 <AmiBlitz3.ab3@3753> cont_pc2:       Ds.l 1
00022424 <AmiBlitz3.ab3@3754> lastcontlink:   Ds.l 1
00022428 <AmiBlitz3.ab3@3758>   ORI.w #$4E40,D1
0002242C <AmiBlitz3.ab3@3759> BRA.w JUMP_writeword
00022432 <AmiBlitz3.ab3@3763>   TST.b debugmode
00022436 <AmiBlitz3.ab3@3764>   BEQ.w debugstuff__rts
0002243C <AmiBlitz3.ab3@3771>   TST.w dirmode                                            ;or while in direct mode...
00022440 <AmiBlitz3.ab3@3772>    BNE debugstuff__rts
0002244A <AmiBlitz3.ab3@3773>   MOVE.l destpointer,d_pc
00022454 <AmiBlitz3.ab3@3774>   MOVE.l bigpc,d_bigpc
0002245E <AmiBlitz3.ab3@3775>   MOVE.w dontwrite,d_nomemleft
00022462 <AmiBlitz3.ab3@3776>   MOVEM.l D0-D1,-(A7)
00022464 <AmiBlitz3.ab3@3777>   MOVEQ.l #$01,D1
00022468 <AmiBlitz3.ab3@3778>    BSR.w writetrap                                         ;write the adress to sourceline
0002246E <AmiBlitz3.ab3@3782>    MOVE.l destpointer,D0
00022474 <AmiBlitz3.ab3@3783>   MOVE.l cont_pc,D1
0002247A <AmiBlitz3.ab3@3784>   MOVE.l D0,cont_pc
00022480 <AmiBlitz3.ab3@3785>   MOVE.l D1,cont_pc2
00022484 <AmiBlitz3.ab3@3786>    BEQ.b debugstuff__skip
0002248A <AmiBlitz3.ab3@3787>   TST.w dontwrite
0002248E <AmiBlitz3.ab3@3788>    BNE.b debugstuff__skip
00022490 <AmiBlitz3.ab3@3789>   MOVEA.l D1,A4
00022492 <AmiBlitz3.ab3@3790>   SUB.l A4,D0
00022496 <AmiBlitz3.ab3@3791>   MOVE.w D0,$6(A4)
0002249C <AmiBlitz3.ab3@3792>   MOVE.l A4,lastcontlink
000224A2 <AmiBlitz3.ab3@3795>   TST.w ininclude
000224A8 <AmiBlitz3.ab3@3797>   TST.w makeexec
000224AC <AmiBlitz3.ab3@3798>   BEQ 'l1
000224B2 <AmiBlitz3.ab3@3799>   TST.w exdebug
000224B6 <AmiBlitz3.ab3@3800>   BEQ 'noinc
000224BA <AmiBlitz3.ab3@3803>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
000224C0 <AmiBlitz3.ab3@3804>   MOVE.l data1,d1
000224C6 <AmiBlitz3.ab3@3805>   TST.b firsttime
000224CA <AmiBlitz3.ab3@3806>   BNE 'nofirst
000224D2 <AmiBlitz3.ab3@3807>   MOVE.b #1,firsttime
000224D8 <AmiBlitz3.ab3@3808>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
000224DE <AmiBlitz3.ab3@3809>   JSR writedatalong
000224E4 <AmiBlitz3.ab3@3810>   MOVE.l #"AmiB",d1
000224EA <AmiBlitz3.ab3@3811>   JSR writedatalong
000224F0 <AmiBlitz3.ab3@3812>   MOVE.l destbufferstart,d1
000224F6 <AmiBlitz3.ab3@3813>   JSR writedatalong
000224FC <AmiBlitz3.ab3@3814>   TST.w dontwrite
00022500 <AmiBlitz3.ab3@3815>   BNE 'nohunk
00022506 <AmiBlitz3.ab3@3816>   MOVE.l data1,d1
00022508 <AmiBlitz3.ab3@3817>   SUBQ.l #4,d1
0002250E <AmiBlitz3.ab3@3818>   SUB.l destbufferstart,d1
00022510 <AmiBlitz3.ab3@3819>   MOVE.l d1,d2
00022516 <AmiBlitz3.ab3@3820>   JSR addhunkoffset
0002251C <AmiBlitz3.ab3@3823>   MOVE.l destpointer,d2
00022522 <AmiBlitz3.ab3@3824>   MOVE.l data1,d1
00022528 <AmiBlitz3.ab3@3827>   MOVE.l destpointer,d2
0002252A <AmiBlitz3.ab3@3828>   MOVE.l d1,d3
00022530 <AmiBlitz3.ab3@3829>   SUB.l destbufferstart,d1
00022536 <AmiBlitz3.ab3@3830>   OR.l #$80000000,d1
0002253C <AmiBlitz3.ab3@3831>   JSR writelong
00022542 <AmiBlitz3.ab3@3832>   TST.w inmacro
00022546 <AmiBlitz3.ab3@3833>   BEQ 'sc1
0002254C <AmiBlitz3.ab3@3834>   MOVE.l myline,a0
00022550 <AmiBlitz3.ab3@3836> BRA 'inc2
00022556 <AmiBlitz3.ab3@3838>  'sc1  TST.w ininclude
0002255A <AmiBlitz3.ab3@3839>   BEQ 'inc
00022560 <AmiBlitz3.ab3@3840>   MOVE.l includesourceline,a0
00022564 <AmiBlitz3.ab3@3841> BRA 'inc2
0002256A <AmiBlitz3.ab3@3844>   MOVE.l sourceline,a0
0002256E <AmiBlitz3.ab3@3845>   LEA 9(a0),a0
00022570 <AmiBlitz3.ab3@3848>   MOVE.l d1,d2
00022572 <AmiBlitz3.ab3@3849>   MOVE.l A5,D1
00022574 <AmiBlitz3.ab3@3850>   SUB.l a0,D1
0002257A <AmiBlitz3.ab3@3851>   ADD.l #9,d1
0002257E <AmiBlitz3.ab3@3852>   BSR.w JUMP_writeword
00022584 <AmiBlitz3.ab3@3853>   CMP.l #9,d1
00022588 <AmiBlitz3.ab3@3854>   BEQ 'pos1
0002258E <AmiBlitz3.ab3@3855>   TST.w dontwrite
00022592 <AmiBlitz3.ab3@3856>   BNE 'nopad
00022598 <AmiBlitz3.ab3@3857>   MOVE.l lastsourceline,d1
0002259C <AmiBlitz3.ab3@3858>   MOVE.l d1,-6(a4)
000225A0 <AmiBlitz3.ab3@3859> BRA 'nopad
000225A6 <AmiBlitz3.ab3@3862>   MOVE.l d2,lastsourceline
000225B0 <AmiBlitz3.ab3@3863>    MOVE.l destpointer,lastdestpointer
000225B2 <AmiBlitz3.ab3@3864>    MOVEQ #0,d1
000225B8 <AmiBlitz3.ab3@3865>   MOVE.l data1,d2
000225BE <AmiBlitz3.ab3@3866>   SUB.l destbufferstart,d2
000225C4 <AmiBlitz3.ab3@3867>   JSR writedatalong
000225CA <AmiBlitz3.ab3@3868>   TST.w dontwrite
000225CE <AmiBlitz3.ab3@3869>   BNE 'no2
000225D4 <AmiBlitz3.ab3@3870>   JSR addhunkoffset
000225DA <AmiBlitz3.ab3@3873>   MOVE.l data1,d2
000225E0 <AmiBlitz3.ab3@3874>   SUB.l destbufferstart,d2
000225E6 <AmiBlitz3.ab3@3875>   JSR writedatalong
000225EC <AmiBlitz3.ab3@3876>   TST.w dontwrite
000225F0 <AmiBlitz3.ab3@3877>   BNE 'no
000225F6 <AmiBlitz3.ab3@3878>   JSR addhunkoffset
000225FC <AmiBlitz3.ab3@3879>   MOVE.l lastwritedat,a1
00022602 <AmiBlitz3.ab3@3880>   CMP.l #0,a1
00022606 <AmiBlitz3.ab3@3881>   BEQ 'no
00022608 <AmiBlitz3.ab3@3882>   MOVE.l d3,(a1)
00022610 <AmiBlitz3.ab3@3883>   MOVE.l prevwritedat,4(a1)
0002261A <AmiBlitz3.ab3@3884>   MOVE.l lastwritedat,prevwritedat
00022620 <AmiBlitz3.ab3@3887>   MOVE.l d3,lastwritedat
00022622 <AmiBlitz3.ab3@3888>   MOVEQ #4,d1
00022626 <AmiBlitz3.ab3@3889>   BSR pokedata1b
00022628 <AmiBlitz3.ab3@3892>   MOVE.b (a0)+,d1
0002262C <AmiBlitz3.ab3@3893>   BEQ 'done
00022630 <AmiBlitz3.ab3@3894>   BSR pokedata1b
00022634 <AmiBlitz3.ab3@3895> BRA 'loop
00022636 <AmiBlitz3.ab3@3898>   MOVEQ #0,d1
0002263A <AmiBlitz3.ab3@3899>   BSR pokedata1b
00022640 <AmiBlitz3.ab3@3900>   MOVE.l data1,d1
00022644 <AmiBlitz3.ab3@3901>   BTST #0,d1
00022648 <AmiBlitz3.ab3@3902>   BEQ 'nopad
0002264A <AmiBlitz3.ab3@3903>   MOVEQ #0,d1
0002264E <AmiBlitz3.ab3@3904>   BSR pokedata1b
00022652 <AmiBlitz3.ab3@3907>   MOVEM.l (a7)+,a0-a1/d2/d3
00022656 <AmiBlitz3.ab3@3908> BRA 'noinc2
0002265C <AmiBlitz3.ab3@3911>   MOVE.l sourceline,D1
00022662 <AmiBlitz3.ab3@3913>   JSR writelong
00022664 <AmiBlitz3.ab3@3914>   MOVE.l A5,D1
0002266A <AmiBlitz3.ab3@3915>   SUB.l sourceline,D1
00022670 <AmiBlitz3.ab3@3917>   JSR writeword
00022672 <AmiBlitz3.ab3@3920>   MOVEQ.l #$00,D1
00022678 <AmiBlitz3.ab3@3921>   JSR writeword                                            ; was: BSR.w writeword
0002267C <AmiBlitz3.ab3@3922>   MOVEM.l (A7)+,D0-D1
0002267E <AmiBlitz3.ab3@3925> RTS
00022684 <AmiBlitz3.ab3@3929>   TST.b debugmode                                          ;extern debug
00022688 <AmiBlitz3.ab3@3930>    BEQ.b undodebug__rts
0002268E <AmiBlitz3.ab3@3931>   TST.b dirmode
00022692 <AmiBlitz3.ab3@3932>   BNE undodebug__rts
0002269C <AmiBlitz3.ab3@3937>   MOVE.w d_nomemleft,dontwrite
000226A6 <AmiBlitz3.ab3@3938>   MOVE.l d_bigpc,bigpc
000226B0 <AmiBlitz3.ab3@3939>   MOVE.l d_pc,destpointer
000226BA <AmiBlitz3.ab3@3940>   MOVE.l cont_pc2,cont_pc
000226BC <AmiBlitz3.ab3@3943> RTS
000226C6 <AmiBlitz3.ab3@3947>   MOVE.l #forthstack,forthsp
000226D0 <AmiBlitz3.ab3@3948>   MOVE.l #precstack,precsp
000226D6 <AmiBlitz3.ab3@3949>   CLR.w regnum
000226DC <AmiBlitz3.ab3@3950>   CLR.w nonew
000226E2 <AmiBlitz3.ab3@3951>   CLR.w sbasegot
000226EC <AmiBlitz3.ab3@3952>   MOVE.w varcodelen,oldvcodelen
000226F2 <AmiBlitz3.ab3@3953>   CLR.w varcodelen
000226FA <AmiBlitz3.ab3@3954>   MOVE.w #-1,lasta6
000226FC <AmiBlitz3.ab3@3955> RTS
00022702 <AmiBlitz3.ab3@3959>   TST.w linemode
00022706 <AmiBlitz3.ab3@3960>   BMI.b smode__skip
0002270A <AmiBlitz3.ab3@3961>   BSR.w undodebug
00022710 <AmiBlitz3.ab3@3962>   MOVE.w linemode,D1
00022712 <AmiBlitz3.ab3@3963>   ADDQ.w #4,A7
00022714 <AmiBlitz3.ab3@3964>   LSL.w #2,D1
0002271A <AmiBlitz3.ab3@3965>   LEA modetable,A0
0002271E <AmiBlitz3.ab3@3966>   MOVEA.l $0(A0,D1.W),A0
00022722 <AmiBlitz3.ab3@3967>   BSR.w reget
00022724 <AmiBlitz3.ab3@3970> JMP (A0)                                                   ;jumptokenroutine
00022726 <AmiBlitz3.ab3@3973> RTS
0002272E <AmiBlitz3.ab3@3978>   MOVE.w #0,leaa0a0+2
00022734 <AmiBlitz3.ab3@3979>   CLR.b nowdeclare
0002273A <AmiBlitz3.ab3@3980>   CLR.b notypecheck
00022740 <AmiBlitz3.ab3@3981>   CLR.l lasttoken
00022746 <AmiBlitz3.ab3@3982>   CLR.b doimmediate
0002274C <AmiBlitz3.ab3@3983>   CLR.w vartype
00022752 <AmiBlitz3.ab3@3984>   CLR.w regnumfunc
00022758 <AmiBlitz3.ab3@3985>   CLR.b optistring
0002275E <AmiBlitz3.ab3@3986>   CLR.b iniffcommand
00022764 <AmiBlitz3.ab3@3987>   CLR.w instringon  ; new
0002276A <AmiBlitz3.ab3@3988>   CLR.b funccall
00022770 <AmiBlitz3.ab3@3989>   CLR.l currentfunccall
00022776 <AmiBlitz3.ab3@3990>   CLR.l leftsidetype
0002277C <AmiBlitz3.ab3@3991>   CLR.l rightsidetype
00022782 <AmiBlitz3.ab3@3992>   CLR.w leftsideflagmask
00022788 <AmiBlitz3.ab3@3993>   CLR.w rightsideflagmask
0002278E <AmiBlitz3.ab3@3994>   CLR.b peekaddrsize
00022794 <AmiBlitz3.ab3@3995>   CLR.b blitzparloop
0002279A <AmiBlitz3.ab3@3996>   CLR.b funcparloop
000227A0 <AmiBlitz3.ab3@3997>   CLR.w parnum           ;7.2014
000227A6 <AmiBlitz3.ab3@3998>   TST.b debugmode
000227AA <AmiBlitz3.ab3@3999>    BEQ 'fpu
000227B4 <AmiBlitz3.ab3@4005>   MOVE.b fpu,iee
000227B8 <AmiBlitz3.ab3@4006>   MOVE.w stopit(PC),D0
000227BC <AmiBlitz3.ab3@4007>   BNE chkstop_chkb
000227C0 <AmiBlitz3.ab3@4008>   BSR.w chkstop                                          ; message here
000227C6 <AmiBlitz3.ab3@4011>   SUBQ.w #1,stopit
000227CA <AmiBlitz3.ab3@4014>   BSR.w findmacro                                          ;macro
000227D0 <AmiBlitz3.ab3@4068>   TST.b debugmode
000227D4 <AmiBlitz3.ab3@4069>    BEQ.s 'l10
000227DA <AmiBlitz3.ab3@4070>   TST.b exdebug
000227DE <AmiBlitz3.ab3@4071>   BEQ 'l10a
000227E0 <AmiBlitz3.ab3@4072>   MOVE.w (a5),d0
000227E4 <AmiBlitz3.ab3@4073>   CMP.w #$8025,d0
000227E8 <AmiBlitz3.ab3@4074>    BEQ 'l10
000227EC <AmiBlitz3.ab3@4077>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
000227F0 <AmiBlitz3.ab3@4081>   BSR.w get1bytemain                                       ;gettokenmain
000227F4 <AmiBlitz3.ab3@4082>    BEQ.w undodebug
000227F8 <AmiBlitz3.ab3@4083>   CMP.w #$002b,d0                                            ;check for + cast sign
000227FC <AmiBlitz3.ab3@4084>     BNE 'lb2
00022800 <AmiBlitz3.ab3@4085>     BSR.w get1bytemain
00022808 <AmiBlitz3.ab3@4086>     MOVE.b #1,notypecheck
00022812 <AmiBlitz3.ab3@4094>   MOVE.l #forthstack,forthsp
0002281C <AmiBlitz3.ab3@4095>   MOVE.l #precstack,precsp
00022822 <AmiBlitz3.ab3@4096>   CLR.w regnum
00022828 <AmiBlitz3.ab3@4097>   CLR.w nonew
0002282E <AmiBlitz3.ab3@4098>   CLR.w sbasegot
00022838 <AmiBlitz3.ab3@4099>   MOVE.w varcodelen,oldvcodelen
0002283E <AmiBlitz3.ab3@4101>   CLR.w varcodelen
00022846 <AmiBlitz3.ab3@4102>   MOVE.w #$FFFF,lasta6
0002284A <AmiBlitz3.ab3@4104>   BSR.w smode
0002284C <AmiBlitz3.ab3@4105>   TST.w D0
00022850 <AmiBlitz3.ab3@4106>   BMI.w get_tokencode
00022854 <AmiBlitz3.ab3@4107>   CMP.w #$2E,D0
00022858 <AmiBlitz3.ab3@4108>    BEQ.w JL_0_4644                                         ;shortlist
0002285C <AmiBlitz3.ab3@4109>   CMP.w #"#",D0
00022860 <AmiBlitz3.ab3@4110>    BEQ.w JL_0_4718                                         ;constant found
00022864 <AmiBlitz3.ab3@4111>   CMP.w #$27,D0
00022868 <AmiBlitz3.ab3@4112>    BEQ.w JL_0_4638                                         ;local label
0002286E <AmiBlitz3.ab3@4113>   MOVE.l A5,letstart
00022874 <AmiBlitz3.ab3@4114>   JSR getparameter
00022878 <AmiBlitz3.ab3@4115>   BSR.w reget
0002287C <AmiBlitz3.ab3@4116>    BEQ.w JL_0_4658                                         ;label found
00022880 <AmiBlitz3.ab3@4117>   CMP.w #$7B,D0
00022884 <AmiBlitz3.ab3@4118>    BEQ.w JL_0_475C
00022886 <AmiBlitz3.ab3@4119>   TST.w d0
0002288A <AmiBlitz3.ab3@4120>    BPL 'll1
00022890 <AmiBlitz3.ab3@4121>   TST.b newsyntax
00022894 <AmiBlitz3.ab3@4122>    BEQ 'll1
0002289A <AmiBlitz3.ab3@4123>   LEA allowtab,a0
0002289C <AmiBlitz3.ab3@4124>   MOVEQ #0,d1
0002289E <AmiBlitz3.ab3@4125>   MOVE.b d0,d1
000228A2 <AmiBlitz3.ab3@4126>   TST.b 0(a0,d1.w)
000228A6 <AmiBlitz3.ab3@4127>    BNE 'll1
000228A8 <AmiBlitz3.ab3@4128>   SUBQ.l #2,a5
000228B0 <AmiBlitz3.ab3@4129>   MOVE.w #":",lastchar                                     ;no doublepoint
000228B4 <AmiBlitz3.ab3@4130> BRA JL_0_4658
000228BC <AmiBlitz3.ab3@4133>   CMP.l #"equ ",-1(a5)
000228C0 <AmiBlitz3.ab3@4134>    BEQ 'll4
000228C8 <AmiBlitz3.ab3@4135>   CMP.l #"EQU ",-1(a5)
000228CC <AmiBlitz3.ab3@4136>    BNE 'll2
000228CE <AmiBlitz3.ab3@4139>   ADDQ.l #2,a5
000228D2 <AmiBlitz3.ab3@4140>   BSR.w findlabel2
000228D6 <AmiBlitz3.ab3@4141>   BEQ.w 'lf1
000228DA <AmiBlitz3.ab3@4142>   BSR.w addlabelhash
000228E2 <AmiBlitz3.ab3@4143>   MOVE.l #$1,$4(A2)
000228EA <AmiBlitz3.ab3@4146>   CMPI.l #$1,$4(A2)
000228EE <AmiBlitz3.ab3@4147>    BNE.w illconerr
000228F2 <AmiBlitz3.ab3@4148>   BSR get1bytemain
000228F4 <AmiBlitz3.ab3@4149>   MOVE.l A2,-(A7)
000228F6 <AmiBlitz3.ab3@4160>   SUBQ.l #1,a5
000228F8 <AmiBlitz3.ab3@4163>   SUBQ.l #1,a5
000228FE <AmiBlitz3.ab3@4164>   JSR AJL_0_BF6E
00022900 <AmiBlitz3.ab3@4165>   MOVEA.l (A7)+,A2
00022904 <AmiBlitz3.ab3@4166>   MOVE.l D3,$8(A2)
00022906 <AmiBlitz3.ab3@4167>   RTS
0002290A <AmiBlitz3.ab3@4168>   BSR get1bytemain
00022912 <AmiBlitz3.ab3@4171>   CMP.l #"SET ",-1(a5)
00022916 <AmiBlitz3.ab3@4172>   BNE 'll3
0002291A <AmiBlitz3.ab3@4173> BRA 'll4
00022920 <AmiBlitz3.ab3@4176> JMP AJL_0_DEA6
00022924 <AmiBlitz3.ab3@4179>   CMP.w #-$7FDE,D0
00022928 <AmiBlitz3.ab3@4180>   BEQ.w get_tokencode
0002292C <AmiBlitz3.ab3@4181> BRA.w undodebug
00022930 <AmiBlitz3.ab3@4184>   BSR.w undodebug
00022934 <AmiBlitz3.ab3@4185>   BSR.w createlab
00022938 <AmiBlitz3.ab3@4186> BRA.w JL_0_466E
0002293C <AmiBlitz3.ab3@4189>   BSR.w get1bytemain
00022940 <AmiBlitz3.ab3@4190>    BEQ.w JL_0_462C
00022944 <AmiBlitz3.ab3@4191>   CMP.w #"'",D0
00022948 <AmiBlitz3.ab3@4192>    BEQ.w JL_0_4638
0002294C <AmiBlitz3.ab3@4193>    BSR.w makename2
0002294E <AmiBlitz3.ab3@4194>    TST.w d0
00022952 <AmiBlitz3.ab3@4195>    BPL 'll1
00022954 <AmiBlitz3.ab3@4196>    SUBQ.l #2,a5
0002295C <AmiBlitz3.ab3@4197>    MOVE.w #":",lastchar
00022960 <AmiBlitz3.ab3@4198> BRA JL_0_4658                                              ;????
00022964 <AmiBlitz3.ab3@4202>   BSR.w undodebug
0002296A <AmiBlitz3.ab3@4203>   LEA ptr_parameterstore,A0
00022970 <AmiBlitz3.ab3@4204>   LEA lastgloballabel,A1
00022972 <AmiBlitz3.ab3@4207>   MOVE.b (A0)+,(A1)+
00022976 <AmiBlitz3.ab3@4208>    BNE.w JL_0_4668
0002297A <AmiBlitz3.ab3@4211>   BSR.w findlabel2
0002297E <AmiBlitz3.ab3@4212>    BEQ.w JL_0_4698
00022982 <AmiBlitz3.ab3@4213>    BSR.w addlabelhash
00022986 <AmiBlitz3.ab3@4216>   CLR.l $4(A2)
0002298E <AmiBlitz3.ab3@4217>   MOVE.l destpointer,$8(A2)
00022996 <AmiBlitz3.ab3@4220>   MOVE.w procnum,$10(A2)
00022998 <AmiBlitz3.ab3@4221> RTS
0002299C <AmiBlitz3.ab3@4225>   MOVE.l $4(A2),D0
000229A0 <AmiBlitz3.ab3@4226>   BTST #$0,D0
000229A4 <AmiBlitz3.ab3@4227>    BNE.w illlaberr
000229AA <AmiBlitz3.ab3@4228>   TST.w pass
000229AE <AmiBlitz3.ab3@4230>   MOVE.l $8(A2),D0
000229B2 <AmiBlitz3.ab3@4231>    BNE.w duplaberr
000229BA <AmiBlitz3.ab3@4232>   MOVE.w procnum,$10(A2)
000229BE <AmiBlitz3.ab3@4233>   MOVEA.l $4(A2),A3
000229C4 <AmiBlitz3.ab3@4234>   MOVEA.l _execbase,A6
000229C8 <AmiBlitz3.ab3@4237>   CMPA.w #$0,A3
000229CC <AmiBlitz3.ab3@4238>    BEQ.w JL_0_467A
000229D0 <AmiBlitz3.ab3@4239>     MOVE.l $4(A2),D1
000229D4 <AmiBlitz3.ab3@4240>     BTST #$0,D1
000229D8 <AmiBlitz3.ab3@4241>     BNE.w illlaberr
000229DC <AmiBlitz3.ab3@4242>   MOVE.w $8(A3),D1
000229E0 <AmiBlitz3.ab3@4243>   CMP.w $10(A2),D1
000229E4 <AmiBlitz3.ab3@4244>    BEQ.w JL_0_46DC
000229EA <AmiBlitz3.ab3@4245>    TST.b newsyntax
000229EE <AmiBlitz3.ab3@4246>    BEQ 'l1
000229F2 <AmiBlitz3.ab3@4247> BRA.w JL_0_46DC                                            ;label context out of range fix
000229FA <AmiBlitz3.ab3@4252>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
000229FE <AmiBlitz3.ab3@4253> BRA.w referr
00022A04 <AmiBlitz3.ab3@4256>   MOVE.w dontwrite,D1
00022A08 <AmiBlitz3.ab3@4257>    BNE.w JL_0_4706
00022A0C <AmiBlitz3.ab3@4258>   MOVEA.l $4(A3),A1
00022A12 <AmiBlitz3.ab3@4259>   BTST #$0,$7(A3)
00022A16 <AmiBlitz3.ab3@4260>    BEQ.w JL_0_4700
00022A18 <AmiBlitz3.ab3@4261>   SUBQ.w #1,A1
00022A1E <AmiBlitz3.ab3@4262>   MOVE.l data2,(A1)
00022A22 <AmiBlitz3.ab3@4263> BRA.w JL_0_4706
00022A28 <AmiBlitz3.ab3@4266>   MOVE.l destpointer,(A1)
00022A2A <AmiBlitz3.ab3@4269>   MOVEA.l A3,A1
00022A2C <AmiBlitz3.ab3@4270>   MOVEA.l (A3),A3
00022A30 <AmiBlitz3.ab3@4271>   MOVE.l A3,$4(A2)
00022A32 <AmiBlitz3.ab3@4272>   MOVEQ.l #$0C+2,D0
00022A38 <AmiBlitz3.ab3@4273>   MOVE.l mempool,a0
00022A3E <AmiBlitz3.ab3@4274>   MOVEA.l _execbase,A6
00022A42 <AmiBlitz3.ab3@4275>   JSR _FreePooled(A6)
00022A46 <AmiBlitz3.ab3@4276> BRA.w JL_0_46BC
00022A50 <AmiBlitz3.ab3@4281>    MOVE.l #forthstack,forthsp
00022A5A <AmiBlitz3.ab3@4282>   MOVE.l #precstack,precsp
00022A5E <AmiBlitz3.ab3@4283>    BSR.w getparameter2
00022A62 <AmiBlitz3.ab3@4286>   BSR.w findlabel2
00022A66 <AmiBlitz3.ab3@4287>    BEQ.w JL_0_4738
00022A6A <AmiBlitz3.ab3@4288>    BSR.w addlabelhash
00022A72 <AmiBlitz3.ab3@4289>   MOVE.l #$1,$4(A2)
00022A76 <AmiBlitz3.ab3@4290> BRA.w JL_0_4744
00022A7E <AmiBlitz3.ab3@4293>   CMPI.l #$1,$4(A2)
00022A82 <AmiBlitz3.ab3@4294>    BNE.w illconerr
00022A86 <AmiBlitz3.ab3@4303>   CMP.w #$3D,D0
00022A8A <AmiBlitz3.ab3@4304>   BEQ.w JL_0_474E
00022A8C <AmiBlitz3.ab3@4305> RTS
00022A8E <AmiBlitz3.ab3@4309>   MOVE.l A2,-(A7)
00022A94 <AmiBlitz3.ab3@4310>   JSR AJL_0_BF6E
00022A96 <AmiBlitz3.ab3@4311>   MOVEA.l (A7)+,A2
00022A9A <AmiBlitz3.ab3@4312>   MOVE.l D3,$8(A2)                                         ;store constant
00022AA2 <AmiBlitz3.ab3@4313>   CMP.w #$0a,lastchar
00022AA6 <AmiBlitz3.ab3@4314>   BNE 'l1
00022AAE <AmiBlitz3.ab3@4315>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00022AB0 <AmiBlitz3.ab3@4318> RTS
00022AB4 <AmiBlitz3.ab3@4321>   BSR.w findproc                                           ;write statement call
00022AB8 <AmiBlitz3.ab3@4322>   BEQ _state
00022ABE <AmiBlitz3.ab3@4323>   TST.l unusedfunc
00022AC2 <AmiBlitz3.ab3@4324>   BEQ noprocerr
00022AC8 <AmiBlitz3.ab3@4326>   JSR gotoendsource
00022ACC <AmiBlitz3.ab3@4329>   TST.b $5(A2)
00022AD2 <AmiBlitz3.ab3@4331>   MOVE.l a2,currentfunccall
00022ADA <AmiBlitz3.ab3@4332>   MOVE.b #1,funccall
00022AE0 <AmiBlitz3.ab3@4333>   MOVE.b #1,isfunc(a2)
00022AE4 <AmiBlitz3.ab3@4334>   MOVE.l $E(A2),-(A7)
00022AE6 <AmiBlitz3.ab3@4335>   MOVEQ.l #$00,D0
00022AEA <AmiBlitz3.ab3@4336>   MOVE.b $4(A2),D0
00022AF0 <AmiBlitz3.ab3@4337>   MOVE.l d0,parnumtemp
00022AF4 <AmiBlitz3.ab3@4338>   BEQ.w JL_0_4786
00022AF8 <AmiBlitz3.ab3@4339>   TST.b $20(a2)                                            ;increase if morepar
00022AFC <AmiBlitz3.ab3@4340>   BNE 'no0par
00022AFE <AmiBlitz3.ab3@4341>   MOVE.l a5,a4
00022B02 <AmiBlitz3.ab3@4344>   CMP.b #$20,(a4)+
00022B06 <AmiBlitz3.ab3@4345>   BEQ 'l1
00022B0C <AmiBlitz3.ab3@4346>   CMP.b #"}",-1(a4)
00022B10 <AmiBlitz3.ab3@4347>   BNE  'no0par                                             ;statementcall pars
00022B12 <AmiBlitz3.ab3@4348>   MOVEQ #0,d0
00022B16 <AmiBlitz3.ab3@4351>   LEA $16(A2),A1
00022B18 <AmiBlitz3.ab3@4354>   MOVE.l d1,-(a7)
00022B1A <AmiBlitz3.ab3@4355>   MOVE.b (a1),d2
00022B1C <AmiBlitz3.ab3@4356>   MOVE.l d0,d1
00022B20 <AmiBlitz3.ab3@4357>   CMP.w #4,d2
00022B24 <AmiBlitz3.ab3@4358>   BNE 'l1b
00022B2A <AmiBlitz3.ab3@4359>   ADD.l #$203c,d1
00022B30 <AmiBlitz3.ab3@4361>   JSR writeword
00022B36 <AmiBlitz3.ab3@4362>   MOVE.l #$ffff0000,d1
00022B3C <AmiBlitz3.ab3@4364>   JSR writelong
00022B40 <AmiBlitz3.ab3@4365> BRA 'l2b
00022B46 <AmiBlitz3.ab3@4368>   TST.b fpu
00022B4A <AmiBlitz3.ab3@4369>   BNE 'l1c
00022B4E <AmiBlitz3.ab3@4370>   CMP.w #5,d2
00022B52 <AmiBlitz3.ab3@4371>   BNE 'l1c
00022B58 <AmiBlitz3.ab3@4372>   ADD.l #$203c,d1
00022B5E <AmiBlitz3.ab3@4374>   JSR writeword
00022B64 <AmiBlitz3.ab3@4375>   MOVE.l #$800000c1,d1
00022B6A <AmiBlitz3.ab3@4377>   JSR writelong
00022B6E <AmiBlitz3.ab3@4378> BRA 'l2b
00022B74 <AmiBlitz3.ab3@4381>   ADD.l #$70ff,d1
00022B7A <AmiBlitz3.ab3@4383>   JSR writeword
00022B80 <AmiBlitz3.ab3@4384>   MOVE.l #$f23c5000,d1
00022B82 <AmiBlitz3.ab3@4385>   MOVE.l d0,d2
00022B84 <AmiBlitz3.ab3@4386>   ASR.l #2,d2
00022B86 <AmiBlitz3.ab3@4387>   ADD.l d2,d1
00022B8C <AmiBlitz3.ab3@4389>   JSR writelong
00022B90 <AmiBlitz3.ab3@4390>   MOVE.w #$ffff,d1
00022B96 <AmiBlitz3.ab3@4392>   JSR writeword
00022B98 <AmiBlitz3.ab3@4395>   MOVE.l (a7)+,d1
00022B9A <AmiBlitz3.ab3@4396>   ADDQ.l #1,a1
00022BA0 <AmiBlitz3.ab3@4397>   ADD.l #$0200,d0
00022BA6 <AmiBlitz3.ab3@4398>   CMP.l #$0e00,d0
00022BAA <AmiBlitz3.ab3@4399>    BEQ syntaxerr
00022BAC <AmiBlitz3.ab3@4400>   TST.b (a1)
00022BB0 <AmiBlitz3.ab3@4401>    BNE 'again
00022BB4 <AmiBlitz3.ab3@4402> BRA JL_0_4786
00022BBE <AmiBlitz3.ab3@4405>   MOVE.w a2offset,a2offset2
00022BC2 <AmiBlitz3.ab3@4406>   LEA $16(A2),A2
00022BC8 <AmiBlitz3.ab3@4407>   MOVE.b funcparloop,-(a7)
00022BD0 <AmiBlitz3.ab3@4408>   MOVE.b #1,funcparloop
00022BD6 <AmiBlitz3.ab3@4409>   MOVE.b blitzparloop,-(a7)
00022BDC <AmiBlitz3.ab3@4410>   CLR.b blitzparloop
00022BE0 <AmiBlitz3.ab3@4411>   BSR.w fetchpees2
00022BE6 <AmiBlitz3.ab3@4412>   MOVE.b (a7)+,blitzparloop
00022BEC <AmiBlitz3.ab3@4413>   MOVE.b (a7)+,funcparloop
00022BF0 <AmiBlitz3.ab3@4414> BRA.w JL_0_478A
00022BF4 <AmiBlitz3.ab3@4417>   BSR.w get1bytemain
00022BF8 <AmiBlitz3.ab3@4420>   CMP.w #$7D,D0
00022BFC <AmiBlitz3.ab3@4421>    BNE.w morepar_                                          ;syntax error morepar
00022C02 <AmiBlitz3.ab3@4422>    JSR chkstak
00022C04 <AmiBlitz3.ab3@4423>   MOVE.l (A7)+,D1
00022C0A <AmiBlitz3.ab3@4439>    JSR JL_0_AFCA
00022C10 <AmiBlitz3.ab3@4461>   CLR.b funccall
00022C14 <AmiBlitz3.ab3@4462> BRA.w get1bytemain
00022C1A <AmiBlitz3.ab3@4466>   MOVE.l d0,lasttoken
00022C1E <AmiBlitz3.ab3@4467>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022C22 <AmiBlitz3.ab3@4468>   BNE 'l2
00022C26 <AmiBlitz3.ab3@4469>    MOVE.w #$dd05,d0
00022C2A <AmiBlitz3.ab3@4472>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00022C2E <AmiBlitz3.ab3@4473>   BNE 'l3
00022C32 <AmiBlitz3.ab3@4474>    MOVE.w #$dd06,d0
00022C36 <AmiBlitz3.ab3@4477>   CMP.w #-$7FC4,D0
00022C3A <AmiBlitz3.ab3@4478>   BCS.w JL_0_47C4
00022C3E <AmiBlitz3.ab3@4479>     CMP.w #-$7F4D,D0
00022C42 <AmiBlitz3.ab3@4480>     BCC.w JL_0_47C4
00022C4A <AmiBlitz3.ab3@4481>       BTST #$7,assemblercheck                              ;inline Assembler checking
00022C4E <AmiBlitz3.ab3@4482>       BNE.b JL_0_47C0
00022C54 <AmiBlitz3.ab3@4483>         TST.b debugmode
00022C58 <AmiBlitz3.ab3@4484>         BEQ.b 'l10
00022C62 <AmiBlitz3.ab3@4489>           MOVE.w d_nomemleft,dontwrite
00022C6C <AmiBlitz3.ab3@4490>           MOVE.l d_bigpc,bigpc
00022C76 <AmiBlitz3.ab3@4491>           MOVE.l d_pc,destpointer
00022C80 <AmiBlitz3.ab3@4492>           MOVE.l cont_pc2,cont_pc
00022C84 <AmiBlitz3.ab3@4498> BRA.w JL_0_612C
00022C88 <AmiBlitz3.ab3@4501>   BCLR #$F,D0
00022C8A <AmiBlitz3.ab3@4502>   MOVE.w D0,D1
00022C8E <AmiBlitz3.ab3@4503>   ANDI.w #$7F00,D1
00022C92 <AmiBlitz3.ab3@4504>   BNE.w JL_0_4856
00022C96 <AmiBlitz3.ab3@4505>     CMP.w #$B3,D0                                          ;intern Instructions
00022C9A <AmiBlitz3.ab3@4506>     BCS.w JL_0_47F2
00022C9E <AmiBlitz3.ab3@4507>       SUBI.w #$77,D0
00022CA2 <AmiBlitz3.ab3@4508>       CMP.w #$4B,D0
00022CA6 <AmiBlitz3.ab3@4509>       BEQ.w JL_0_4830
00022CAA <AmiBlitz3.ab3@4510>         CMP.w #$46,D0
00022CAE <AmiBlitz3.ab3@4511>         BEQ.w JL_0_4830
00022CB2 <AmiBlitz3.ab3@4512> BRA.w JL_0_4834                                            ; change tokennum
00022CB6 <AmiBlitz3.ab3@4515>     CMP.w #$38,D0
00022CBA <AmiBlitz3.ab3@4516>      BEQ.w JL_0_4830
00022CBE <AmiBlitz3.ab3@4517>     CMP.w #$39,D0
00022CC2 <AmiBlitz3.ab3@4518>      BEQ.w JL_0_4830
00022CC6 <AmiBlitz3.ab3@4519>     CMP.w #$D,D0
00022CCA <AmiBlitz3.ab3@4520>      BEQ.w JL_0_4830
00022CCE <AmiBlitz3.ab3@4521>     CMP.w #$12,D0
00022CD2 <AmiBlitz3.ab3@4522>      BEQ.w JL_0_4830
00022CD6 <AmiBlitz3.ab3@4523>     CMP.w #$13,D0
00022CDA <AmiBlitz3.ab3@4524>      BEQ.w JL_0_4830
00022CDE <AmiBlitz3.ab3@4525>     CMP.w #$1A,D0
00022CE2 <AmiBlitz3.ab3@4526>      BEQ.w JL_0_4830
00022CE6 <AmiBlitz3.ab3@4527>     CMP.w #$2A,D0
00022CEA <AmiBlitz3.ab3@4528>      BHI.w JL_0_4834
00022CEE <AmiBlitz3.ab3@4529>     CMP.w #$23,D0
00022CF2 <AmiBlitz3.ab3@4530>      BCS.b JL_0_4834
00022CF6 <AmiBlitz3.ab3@4533>   BSR.w undodebug
00022CF8 <AmiBlitz3.ab3@4536>   SUBQ.w #1,D0
00022CFA <AmiBlitz3.ab3@4537>   LSL.w #2,D0
00022D00 <AmiBlitz3.ab3@4544>   LEA instructionbase,A0
00022D04 <AmiBlitz3.ab3@4545>   MOVEA.l $0(A0,D0.W),A0
00022D06 <AmiBlitz3.ab3@4546>   MOVE.l A0,-(A7)
00022D0A <AmiBlitz3.ab3@4547> BRA.w get1bytemain
00022D0C <AmiBlitz3.ab3@4553>   MOVE.w D0,D1
00022D10 <AmiBlitz3.ab3@4554>    BSR.w searchinstr
00022D16 <AmiBlitz3.ab3@4555>    TST.b newmode
00022D1A <AmiBlitz3.ab3@4556>    BNE compile_term
00022D20 <AmiBlitz3.ab3@4557>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00022D24 <AmiBlitz3.ab3@4558>    BNE.w stamigalib
00022D2A <AmiBlitz3.ab3@4559>   BTST #$0,$1(A3)
00022D2E <AmiBlitz3.ab3@4560>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022D32 <AmiBlitz3.ab3@4561>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00022D36 <AmiBlitz3.ab3@4562>    BSR.w JL_0_66F6
00022D3C <AmiBlitz3.ab3@4568>   MOVE.w numreps,-(A7)
00022D42 <AmiBlitz3.ab3@4569>   MOVE.w userp,-(A7)
00022D48 <AmiBlitz3.ab3@4570>   MOVE.w a2offset,-(A7)
00022D4A <AmiBlitz3.ab3@4571>   MOVE.l A2,-(A7)                                          ;recurs.
00022D54 <AmiBlitz3.ab3@4572>   MOVE.w convsize,userp
00022D58 <AmiBlitz3.ab3@4573>   LEA $6(A3),A1
00022D5A <AmiBlitz3.ab3@4577>    MOVE.w (A1),D2
00022D5E <AmiBlitz3.ab3@4578>    BMI.w SERR                                              ;statement syntax error
00022D62 <AmiBlitz3.ab3@4579>   ANDI.w #$FF,D2
00022D64 <AmiBlitz3.ab3@4580>   CMP.w D2,D1
00022D68 <AmiBlitz3.ab3@4581>    BEQ.w JL_0_48E0
00022D6C <AmiBlitz3.ab3@4582>    BCS.w JL_0_48CC
00022D6E <AmiBlitz3.ab3@4583>   MOVE.b (A1),D3
00022D72 <AmiBlitz3.ab3@4584>   ANDI.w #$7,D3
00022D76 <AmiBlitz3.ab3@4585>    BEQ.w JL_0_48CC
00022D78 <AmiBlitz3.ab3@4586>   MOVE.w D2,D4
00022D7A <AmiBlitz3.ab3@4587>   SUB.w D3,D4
00022D7C <AmiBlitz3.ab3@4588>   MOVEQ.l #$00,D5
00022D7E <AmiBlitz3.ab3@4589>   MOVE.w D1,D5
00022D80 <AmiBlitz3.ab3@4590>   SUB.w D4,D5
00022D82 <AmiBlitz3.ab3@4591>   DIVU D3,D5
00022D84 <AmiBlitz3.ab3@4592>   SWAP D5
00022D86 <AmiBlitz3.ab3@4593>   TST.w D5
00022D8A <AmiBlitz3.ab3@4594>    BEQ.w JL_0_48E0
00022D8C <AmiBlitz3.ab3@4597>   ADDQ.w #2,A1
00022D8E <AmiBlitz3.ab3@4598>   ADDA.w D2,A1
00022D92 <AmiBlitz3.ab3@4599>    BSR.w aligna1
00022D96 <AmiBlitz3.ab3@4600>    BSR.w skiplibreg
00022D9A <AmiBlitz3.ab3@4601>   LEA $C(A1),A1
00022D9E <AmiBlitz3.ab3@4602> BRA.w JL_0_489A
00022DA0 <AmiBlitz3.ab3@4605>   MOVE.w (a3),d2
00022DA4 <AmiBlitz3.ab3@4606>   BTST #1,d2
00022DA8 <AmiBlitz3.ab3@4607>   BEQ statement_
00022DAC <AmiBlitz3.ab3@4608>   CMP.w #1,d1
00022DB0 <AmiBlitz3.ab3@4609>   BEQ statement_
00022DB4 <AmiBlitz3.ab3@4612>   CMP.b #$20,(a5)+
00022DB8 <AmiBlitz3.ab3@4613>   BEQ 'l2
00022DBE <AmiBlitz3.ab3@4614>   CMP.b #"(",-2(a5)
00022DC2 <AmiBlitz3.ab3@4615>   BNE 'l1
00022DC6 <AmiBlitz3.ab3@4616> BRA parameter_
00022DCA <AmiBlitz3.ab3@4619> BRA inbrackets_
00022DCC <AmiBlitz3.ab3@4622>   MOVE.b (A1),D2
00022DCE <AmiBlitz3.ab3@4623>   LSL.w #8,D2
00022DD0 <AmiBlitz3.ab3@4624>   OR.w D2,D1
00022DD2 <AmiBlitz3.ab3@4625>   MOVE.l A1,-(A7)
00022DD8 <AmiBlitz3.ab3@4626>   CLR.w a2offset
00022DDA <AmiBlitz3.ab3@4627>   TST.w D1
00022DDE <AmiBlitz3.ab3@4628>    BEQ.w JL_0_4900
00022DE2 <AmiBlitz3.ab3@4629>   LEA $2(A1),A2
00022DE8 <AmiBlitz3.ab3@4631>   MOVE.l lasttoken,-(a7)
00022DEE <AmiBlitz3.ab3@4632>   CLR.l lasttoken
00022DF2 <AmiBlitz3.ab3@4633>   BSR.w fetchlibps
00022DF8 <AmiBlitz3.ab3@4634>   MOVE.l (a7)+,lasttoken
00022DFC <AmiBlitz3.ab3@4635> BRA.w JL_0_4904
00022E00 <AmiBlitz3.ab3@4638>   BSR.w get1bytemain
00022E02 <AmiBlitz3.ab3@4641>   MOVEA.l (A7)+,A1
00022E04 <AmiBlitz3.ab3@4642>   MOVEA.l (A7)+,A2
00022E0A <AmiBlitz3.ab3@4643>   MOVE.w a2offset,D1
00022E0E <AmiBlitz3.ab3@4644>    BEQ.w JL_0_493A
00022E14 <AmiBlitz3.ab3@4645>   MOVE.w D1,preplibst+2
00022E1A <AmiBlitz3.ab3@4646>   MOVE.l preplibst,D1
00022E20 <AmiBlitz3.ab3@4647>    JSR writelong                                           ;write array offset stack correct
00022E2A <AmiBlitz3.ab3@4648>   MOVE.w numreps,movenumrep+2
00022E2E <AmiBlitz3.ab3@4649>    BEQ.w JL_0_493A
00022E34 <AmiBlitz3.ab3@4650>   MOVE.l movenumrep,D1
00022E3A <AmiBlitz3.ab3@4651>    JSR writelong
00022E40 <AmiBlitz3.ab3@4655>   JSR userjsr
00022E46 <AmiBlitz3.ab3@4658>   MOVE.w a2offset,D1
00022E4A <AmiBlitz3.ab3@4659>    BEQ.w JL_0_4974
00022E4E <AmiBlitz3.ab3@4660>   CMP.w #$8,D1
00022E52 <AmiBlitz3.ab3@4661>    BHI.w JL_0_4964
00022E56 <AmiBlitz3.ab3@4662>   ANDI.w #$7,D1
00022E58 <AmiBlitz3.ab3@4663>   LSL.w #8,D1
00022E5A <AmiBlitz3.ab3@4664>   LSL.w #1,D1
00022E5E <AmiBlitz3.ab3@4665>   ORI.w #$504F,D1
00022E64 <AmiBlitz3.ab3@4667>   JSR writeword
00022E68 <AmiBlitz3.ab3@4668> BRA.w JL_0_4974
00022E6E <AmiBlitz3.ab3@4671>   MOVE.w D1,fixlibst+2
00022E74 <AmiBlitz3.ab3@4672>   MOVE.l fixlibst,D1
00022E7A <AmiBlitz3.ab3@4673>   JSR writelong
00022E80 <AmiBlitz3.ab3@4676>   MOVE.w (A7)+,a2offset
00022E86 <AmiBlitz3.ab3@4677>   MOVE.w (A7)+,userp
00022E8C <AmiBlitz3.ab3@4678>   MOVE.w (A7)+,numreps
00022E90 <AmiBlitz3.ab3@4679> BRA.w reget
00022E94 <AmiBlitz3.ab3@4683>   MOVEM.l A2-A3,-(A7)
00022E9A <AmiBlitz3.ab3@4684>   CLR.b doublepeek
00022EA0 <AmiBlitz3.ab3@4685>   MOVE.l A5,lastsourcepos
00022EA4 <AmiBlitz3.ab3@4686>    BSR.w getchar
00022EA8 <AmiBlitz3.ab3@4687>   CMP.w #$2E,D0
00022EAC <AmiBlitz3.ab3@4688>    BEQ.w JL_0_49B4
00022EB2 <AmiBlitz3.ab3@4689>   MOVEA.l defaulttype,A2
00022EB6 <AmiBlitz3.ab3@4690>   CMP.w #$24,D0
00022EBA <AmiBlitz3.ab3@4691>    BNE.w JL_0_49CA
00022EBC <AmiBlitz3.ab3@4692>   MOVEQ.l #$07,D1
00022EC0 <AmiBlitz3.ab3@4693> BRA.w JL_0_49DE
00022EC4 <AmiBlitz3.ab3@4696>   BSR.w getparameter2
00022EC8 <AmiBlitz3.ab3@4697>   BEQ.w syntaxerr
00022ECE <AmiBlitz3.ab3@4698>   LEA newtypebase,A2
00022ED2 <AmiBlitz3.ab3@4699>   BSR.w findtype
00022ED6 <AmiBlitz3.ab3@4700>   BNE.w notypeerr
00022EE0 <AmiBlitz3.ab3@4704>   MOVE.w oldqflag,instringon
00022EE6 <AmiBlitz3.ab3@4705>   MOVEA.l lastsourcepos,A5
00022EEA <AmiBlitz3.ab3@4710>   MOVE.w $6(A2),D1
00022EF0 <AmiBlitz3.ab3@4711>   CMP.w #8,8(a2)
00022EF4 <AmiBlitz3.ab3@4712>   BNE 'l1
00022EFC <AmiBlitz3.ab3@4713>   MOVE.b #1,doublepeek
00022F02 <AmiBlitz3.ab3@4717>   MOVE.w D1,convsize
00022F06 <AmiBlitz3.ab3@4718>   MOVEM.l (A7)+,A2-A3
00022F08 <AmiBlitz3.ab3@4719> RTS
00022F0E <AmiBlitz3.ab3@4724>   BTST #$3,$1(A3)
00022F12 <AmiBlitz3.ab3@4725>   BEQ.w JL_0_4A06
00022F16 <AmiBlitz3.ab3@4726>   BSR.w AJL_0_498A                                         ;read peek/poke size
00022F1A <AmiBlitz3.ab3@4728>   ORI.w #$7000,D1
00022F20 <AmiBlitz3.ab3@4729>   JSR writeword
00022F26 <AmiBlitz3.ab3@4730>   ADDQ.w #1,regnum
00022F28 <AmiBlitz3.ab3@4733> RTS
00022F2A <AmiBlitz3.ab3@4739>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00022F2C <AmiBlitz3.ab3@4740>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00022F2E <AmiBlitz3.ab3@4741>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00022F30 <AmiBlitz3.ab3@4745> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00022F32 <AmiBlitz3.ab3@4746>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00022F34 <AmiBlitz3.ab3@4747>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022F36 <AmiBlitz3.ab3@4751> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022F38 <AmiBlitz3.ab3@4752>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022F3A <AmiBlitz3.ab3@4753>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00022F3C <AmiBlitz3.ab3@4757> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00022F3E <AmiBlitz3.ab3@4760> srctype:    Ds.w 1
00022F42 <AmiBlitz3.ab3@4765>   BSR.w excget
00022F46 <AmiBlitz3.ab3@4766>   CMP.w #$2C,D0
00022F4A <AmiBlitz3.ab3@4767>    BNE.w syntaxerr
00022F50 <AmiBlitz3.ab3@4768>   MOVE.b D2,srctype
00022F56 <AmiBlitz3.ab3@4769>   MOVE.w pusha2,D1
00022F5C <AmiBlitz3.ab3@4770>   JSR writeword
00022F60 <AmiBlitz3.ab3@4771>   BSR.w get1bytemain
00022F64 <AmiBlitz3.ab3@4772>   BSR.w excget
00022F6A <AmiBlitz3.ab3@4773>   CMP.b srctype,D2
00022F6E <AmiBlitz3.ab3@4774>    BNE.w excerr2
00022F74 <AmiBlitz3.ab3@4775>   MOVE.w pulla1,D1
00022F7A <AmiBlitz3.ab3@4776>    JSR writeword
00022F7E <AmiBlitz3.ab3@4777>   CMP.b #$2,D2
00022F82 <AmiBlitz3.ab3@4778>    BCS.w JL_0_4B2A
00022F86 <AmiBlitz3.ab3@4779>    BEQ.w JL_0_4B1E
00022F8A <AmiBlitz3.ab3@4780>   LEA swapl(PC),A0
00022F8E <AmiBlitz3.ab3@4781>   LEA swaplf(PC),A1
00022F94 <AmiBlitz3.ab3@4782> JMP pokecode
00022F98 <AmiBlitz3.ab3@4785>   LEA swapw(PC),A0
00022F9C <AmiBlitz3.ab3@4786>   LEA swapwf(PC),A1
00022FA2 <AmiBlitz3.ab3@4787> JMP pokecode
00022FA6 <AmiBlitz3.ab3@4790>   LEA swapb(PC),A0
00022FAA <AmiBlitz3.ab3@4791>   LEA swapbf(PC),A1
00022FB0 <AmiBlitz3.ab3@4792> JMP pokecode
00022FB6 <AmiBlitz3.ab3@4796>   JSR getparameter
00022FBA <AmiBlitz3.ab3@4797>   BSR.w JL_0_8E3C
00022FC0 <AmiBlitz3.ab3@4798>   JSR calcvar
00022FC4 <AmiBlitz3.ab3@4799>   BTST #$E,D2
00022FC8 <AmiBlitz3.ab3@4800>    BEQ.w JL_0_4B4E
00022FCC <AmiBlitz3.ab3@4801>   MOVE.b #$4,D2
00022FCE <AmiBlitz3.ab3@4804>   TST.b D2
00022FD2 <AmiBlitz3.ab3@4805>    BEQ.w excerr
00022FD6 <AmiBlitz3.ab3@4806>   BTST #$F,D2
00022FDA <AmiBlitz3.ab3@4807>    BNE.w JL_0_4B6A
00022FE0 <AmiBlitz3.ab3@4808>   MOVE.w leaamp,D1
00022FE6 <AmiBlitz3.ab3@4809>    JSR pokewda5s
00022FE8 <AmiBlitz3.ab3@4810>   MOVE.w D3,D1
00022FEE <AmiBlitz3.ab3@4811> JMP writeword
00022FF0 <AmiBlitz3.ab3@4814> RTS
00022FF6 <AmiBlitz3.ab3@4824>   MOVE.l mempool,a0
00022FFC <AmiBlitz3.ab3@4825>   MOVEA.l _execbase,A6
00023000 <AmiBlitz3.ab3@4826> JMP _AllocPooled(a6)
00023004 <AmiBlitz3.ab3@4830>   MOVE.w #$BF00,D1
0002300A <AmiBlitz3.ab3@4831> JMP Atokejsr
0002300E <AmiBlitz3.ab3@4835>   CMP.w #-$7FFA,D0
00023012 <AmiBlitz3.ab3@4836>    BEQ.w popreturn
00023016 <AmiBlitz3.ab3@4837>   CMP.w #-$7FEA,D0
0002301A <AmiBlitz3.ab3@4838>    BEQ.w popnext2
0002301E <AmiBlitz3.ab3@4839>   CMP.w #-$7FF2,D0
00023022 <AmiBlitz3.ab3@4840>    BEQ.w popselect2
00023026 <AmiBlitz3.ab3@4841>   CMP.w #-$7FF5,D0
0002302A <AmiBlitz3.ab3@4842>    BEQ.w get1bytemain
0002302E <AmiBlitz3.ab3@4843>   CMP.w #-$7FF4,D0
00023032 <AmiBlitz3.ab3@4844>    BEQ.w get1bytemain
00023036 <AmiBlitz3.ab3@4845>   CMP.w #-$7FEC,D0
0002303A <AmiBlitz3.ab3@4846>    BEQ.w get1bytemain
0002303E <AmiBlitz3.ab3@4847>   CMP.w #-$7F45,D0
00023042 <AmiBlitz3.ab3@4848>    BEQ.w get1bytemain
00023046 <AmiBlitz3.ab3@4849> BRA.w syntaxerr
0002304C <AmiBlitz3.ab3@4852>   TST.b debugmode
00023050 <AmiBlitz3.ab3@4853>    BEQ.w popreturn__norerr
00023054 <AmiBlitz3.ab3@4854>   LEA popreturn__rfix(PC),A0
00023058 <AmiBlitz3.ab3@4855>   LEA popreturn__rfixf(PC),A1
0002305E <AmiBlitz3.ab3@4856>    JSR pokecode
00023062 <AmiBlitz3.ab3@4857>   MOVE.w #$C305,D1
00023068 <AmiBlitz3.ab3@4858>    JSR Atokejsr
0002306C <AmiBlitz3.ab3@4859>   MOVE.w popreturn__rfix2(PC),D1
00023072 <AmiBlitz3.ab3@4861>    JSR writeword
00023076 <AmiBlitz3.ab3@4862> BRA.w get1bytemain
0002307C <AmiBlitz3.ab3@4866>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
00023080 <AmiBlitz3.ab3@4867>   BEQ.w popreturn__rfix2
00023086 <AmiBlitz3.ab3@4870>   JSR $20000                                               ;reass
00023088 <AmiBlitz3.ab3@4873>   ADDQ.w #6,A7
0002308C <AmiBlitz3.ab3@4877>   MOVE.w popreturn__sfix(PC),D1
00023092 <AmiBlitz3.ab3@4878>   JSR writeword
00023096 <AmiBlitz3.ab3@4879> BRA.w get1bytemain
00023098 <AmiBlitz3.ab3@4884>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0002309E <AmiBlitz3.ab3@4889>   MOVE.l firstfor,D0
000230A2 <AmiBlitz3.ab3@4890>    BEQ.w noforerr
000230A4 <AmiBlitz3.ab3@4891>   MOVEA.l D0,A2
000230A8 <AmiBlitz3.ab3@4892>    BSR.w get1bytemain
000230AC <AmiBlitz3.ab3@4893>   BSR.w popnext
000230B2 <AmiBlitz3.ab3@4896>   TST.b debugmode
000230B6 <AmiBlitz3.ab3@4897>    BEQ.w popnext3__ner
000230BC <AmiBlitz3.ab3@4898>   MOVE.l nextfixw2,D1
000230C2 <AmiBlitz3.ab3@4899>   CMPI.w #$3,$C(A2)
000230C6 <AmiBlitz3.ab3@4900>    BCS.w writelong2
000230CC <AmiBlitz3.ab3@4901>   MOVE.l nextfixl2,D1
000230D2 <AmiBlitz3.ab3@4902> writelong2 JMP  writelong
000230D8 <AmiBlitz3.ab3@4905>   CMPI.w #$3,$C(A2)
000230DC <AmiBlitz3.ab3@4906>    BCS.w popnext3__skip2
000230E2 <AmiBlitz3.ab3@4907>   MOVE.l nextfixl,D1
000230E8 <AmiBlitz3.ab3@4908>   JMP writelong
000230EE <AmiBlitz3.ab3@4911>   MOVE.w nextfixw,D1
000230F4 <AmiBlitz3.ab3@4912> JMP writeword
000230F8 <AmiBlitz3.ab3@4916>   MOVE.w $C(A2),D0
000230FE <AmiBlitz3.ab3@4917>   TST.b debugmode
00023102 <AmiBlitz3.ab3@4918>    BEQ.w popnext__norunerr
00023106 <AmiBlitz3.ab3@4919>   MOVE.w #$C306,D1
0002310A <AmiBlitz3.ab3@4920>   CMP.w #$3,D0
0002310E <AmiBlitz3.ab3@4921>    BCS.w popnext__oktc
00023110 <AmiBlitz3.ab3@4922>   ADDQ.w #1,D1
00023112 <AmiBlitz3.ab3@4925>   MOVE.l A2,-(A7)
00023118 <AmiBlitz3.ab3@4926>   JSR Atokejsr
0002311A <AmiBlitz3.ab3@4927>   MOVEA.l (A7)+,A2
0002311C <AmiBlitz3.ab3@4930> RTS
00023122 <AmiBlitz3.ab3@4934>   MOVE.l firstsel,D0
00023126 <AmiBlitz3.ab3@4935>    BEQ.w eselerr
00023128 <AmiBlitz3.ab3@4936>   MOVEA.l D0,A2
0002312C <AmiBlitz3.ab3@4937>    BSR.w get1bytemain
00023130 <AmiBlitz3.ab3@4940>   MOVE.w $C(A2),D2
00023136 <AmiBlitz3.ab3@4941>   TST.b debugmode
0002313A <AmiBlitz3.ab3@4942>    BEQ.w popselect__norerr
0002313E <AmiBlitz3.ab3@4943>   MOVE.w #$C313,D1
00023142 <AmiBlitz3.ab3@4944>   CMP.w #$3,D2
00023146 <AmiBlitz3.ab3@4945>    BCS.w popselect__chkit
00023148 <AmiBlitz3.ab3@4946>   ADDQ.w #1,D1
0002314E <AmiBlitz3.ab3@4949>   JSR Atokejsr                                             ;make sure next thing on stack
00023150 <AmiBlitz3.ab3@4953>   MOVEQ.l #$02,D1
00023154 <AmiBlitz3.ab3@4954>   CMP.w #$3,D2
00023158 <AmiBlitz3.ab3@4955>    BCS.w popselect__doit
0002315A <AmiBlitz3.ab3@4956>   MOVEQ.l #$04,D1
0002315E <AmiBlitz3.ab3@4957>   CMP.w #$7,D2
00023162 <AmiBlitz3.ab3@4958>    BCS.w popselect__doit
00023168 <AmiBlitz3.ab3@4959>   LEA endselstr,A0
0002316E <AmiBlitz3.ab3@4960>   LEA endselstrf,A1
00023174 <AmiBlitz3.ab3@4961>   TST.b debugmode
00023178 <AmiBlitz3.ab3@4962>    BEQ.w popselect__norerr3
0002317E <AmiBlitz3.ab3@4963>   LEA endselstrf2,A1
00023184 <AmiBlitz3.ab3@4966>   JSR pokecode
00023188 <AmiBlitz3.ab3@4967>   MOVE.w #$C003,D1                                         ;global freemem
0002318E <AmiBlitz3.ab3@4968> JMP Atokejsr
00023194 <AmiBlitz3.ab3@4971>   TST.b debugmode
00023198 <AmiBlitz3.ab3@4972>    BEQ.w popselect__norerr2
0002319A <AmiBlitz3.ab3@4973>   ADDQ.w #2,D1                                             ;for the "sE"
0002319C <AmiBlitz3.ab3@4976>   LSL.w #8,D1
0002319E <AmiBlitz3.ab3@4977>   LSL.w #1,D1
000231A4 <AmiBlitz3.ab3@4978>   OR.w endsel,D1
000231AA <AmiBlitz3.ab3@4979> JMP writeword
000231AE <AmiBlitz3.ab3@4982> firstrep:    Ds.l 1
000231B2 <AmiBlitz3.ab3@4983> replineat:   Ds.l 1
000231B8 <AmiBlitz3.ab3@4992>   CLR.l fp0addr
000231C2 <AmiBlitz3.ab3@4993>   MOVE.l linenumat,replineat
000231C4 <AmiBlitz3.ab3@4994>   MOVEQ.l #$08,D0
000231CA <AmiBlitz3.ab3@4995>   MOVEA.l _execbase,A6
000231D0 <AmiBlitz3.ab3@4996>   MOVE.l mempool,a0
000231D4 <AmiBlitz3.ab3@4997>   JSR _AllocPooled(a6)
000231D6 <AmiBlitz3.ab3@4999>   MOVEA.l D0,A0
000231DA <AmiBlitz3.ab3@5000>   MOVE.l firstrep(PC),(A0)
000231E0 <AmiBlitz3.ab3@5001>   MOVE.l A0,firstrep
000231E8 <AmiBlitz3.ab3@5002>   MOVE.l destpointer,$4(A0)
000231EA <AmiBlitz3.ab3@5003> RTS
000231F0 <AmiBlitz3.ab3@5006> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
000231F4 <AmiBlitz3.ab3@5009>   LEA str_temp(PC),A1
000231F6 <AmiBlitz3.ab3@5010>   CLR.w (A1)
000231FA <AmiBlitz3.ab3@5011>   CLR.l $2(A1)
000231FC <AmiBlitz3.ab3@5014>   MOVEQ.l #$04,D0
00023200 <AmiBlitz3.ab3@5017>     MOVE.b $1(A1),(A1)+
00023204 <AmiBlitz3.ab3@5018>   DBF D0,check_for_infoextention__loop
00023208 <AmiBlitz3.ab3@5023>   LEA str_temp(PC),A1
0002320A <AmiBlitz3.ab3@5024>   MOVE.b (A0),D0
0002320E <AmiBlitz3.ab3@5025>   ORI.b #$20,D0
00023212 <AmiBlitz3.ab3@5026>   MOVE.b D0,$5(A1)
00023214 <AmiBlitz3.ab3@5027>   TST.b (A0)+
00023218 <AmiBlitz3.ab3@5028>    BNE.w check_for_infoextention__loop2
0002321C <AmiBlitz3.ab3@5029>   CMPI.w #$2E69,(A1)+                                      ;".i"
00023220 <AmiBlitz3.ab3@5030>    BNE.w check_for_infoextention__no
00023226 <AmiBlitz3.ab3@5031>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00023228 <AmiBlitz3.ab3@5034> RTS
0002322C <AmiBlitz3.ab3@5038>   BPL.w gettokeps__evaltoke
0002322E <AmiBlitz3.ab3@5039>   MOVE.w D0,D1
00023232 <AmiBlitz3.ab3@5040>   ANDI.w #$7F80,D1
00023236 <AmiBlitz3.ab3@5041>    BEQ.w tokeerr
0002323A <AmiBlitz3.ab3@5042>   BCLR #$F,D0
0002323C <AmiBlitz3.ab3@5043>   MOVE.w D0,D4                                             ;got toke number
00023240 <AmiBlitz3.ab3@5044>   BSR.w get1bytemain
00023244 <AmiBlitz3.ab3@5045> BRA.w gettokeps__gotnum
0002324A <AmiBlitz3.ab3@5048>   JSR JL_0_BF6A
00023250 <AmiBlitz3.ab3@5049>   CMP.l #MaxWord,D3
00023254 <AmiBlitz3.ab3@5050>    BHI.w tokeerr
00023256 <AmiBlitz3.ab3@5051>   TST.w D6
0002325A <AmiBlitz3.ab3@5052>    BNE.w tokeerr
0002325C <AmiBlitz3.ab3@5053>   MOVE.w D3,D4
0002325E <AmiBlitz3.ab3@5056>   MOVEQ.l #$00,D5
00023262 <AmiBlitz3.ab3@5057>   CMP.w #$2C,D0
00023266 <AmiBlitz3.ab3@5058>    BNE.w gettokeps__gotfrom
00023268 <AmiBlitz3.ab3@5059>   MOVE.w D4,-(A7)
0002326E <AmiBlitz3.ab3@5060>    JSR AJL_0_BF6E
00023274 <AmiBlitz3.ab3@5061>   CMP.l #MaxWord,D3
00023278 <AmiBlitz3.ab3@5062>    BHI.w tokeerr
0002327A <AmiBlitz3.ab3@5063>   TST.w D6
0002327E <AmiBlitz3.ab3@5064>    BNE.w tokeerr
00023280 <AmiBlitz3.ab3@5065>   MOVE.w D3,D5
00023282 <AmiBlitz3.ab3@5066>   MOVE.w (A7)+,D4
00023284 <AmiBlitz3.ab3@5069> RTS                                                        ;d4=toke, d5=form
00023286 <AmiBlitz3.ab3@5073>   TST.w D0
0002328A <AmiBlitz3.ab3@5074>    BSR.w gettokeps
0002328E <AmiBlitz3.ab3@5075>   MOVE.w #$4EB9,D1
00023294 <AmiBlitz3.ab3@5076>   JSR writeword
00023298 <AmiBlitz3.ab3@5077>   BSR.w addoff
0002329A <AmiBlitz3.ab3@5078>   MOVE.w D5,D1
0002329E <AmiBlitz3.ab3@5079>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
000232A0 <AmiBlitz3.ab3@5080>   SWAP D1
000232A2 <AmiBlitz3.ab3@5081>   MOVE.w D4,D1
000232A8 <AmiBlitz3.ab3@5082> JMP writelong
000232AA <AmiBlitz3.ab3@5086>   TST.w D0
000232AE <AmiBlitz3.ab3@5087>    BSR.w gettokeps
000232B2 <AmiBlitz3.ab3@5088>   MOVE.w #$4EB9,D1
000232B8 <AmiBlitz3.ab3@5089>   JSR writeword
000232BC <AmiBlitz3.ab3@5090>   BSR.w addoff
000232BE <AmiBlitz3.ab3@5091>   MOVE.w D5,D1
000232C2 <AmiBlitz3.ab3@5092>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
000232C4 <AmiBlitz3.ab3@5093>   SWAP D1
000232C6 <AmiBlitz3.ab3@5094>   MOVE.w D4,D1
000232CC <AmiBlitz3.ab3@5095>   JMP writelong
000232D2 <AmiBlitz3.ab3@5099>   JSR JL_0_BF6A
000232D8 <AmiBlitz3.ab3@5100>   CMP.l #$10000,D3
000232DC <AmiBlitz3.ab3@5101>    BCC.w tokeerr
000232DE <AmiBlitz3.ab3@5102>   MOVE.w D3,D1
000232E4 <AmiBlitz3.ab3@5103> JMP Atokejsr
000232E8 <AmiBlitz3.ab3@5107>   BSR.w gettokeps
000232EC <AmiBlitz3.ab3@5108>   MOVE.w #$4EB9,D1
000232F2 <AmiBlitz3.ab3@5109>   JSR writeword
000232F8 <AmiBlitz3.ab3@5110>   MOVE.l destpointer,D3
00023300 <AmiBlitz3.ab3@5111>   BTST #$7,blitzmode
00023304 <AmiBlitz3.ab3@5112>    BEQ.w do_TokeJsr__inamiga
00023308 <AmiBlitz3.ab3@5113>   BSET #$E,D5
0002330C <AmiBlitz3.ab3@5116>   BSR.w JL_0_6E86
00023310 <AmiBlitz3.ab3@5117>   BSR.w addoff
00023316 <AmiBlitz3.ab3@5118>   JMP writelong
0002331A <AmiBlitz3.ab3@5122>   BEQ.w do_VWait__zero
0002331C <AmiBlitz3.ab3@5123>   MOVEQ.l #$02,D2                                          ;get a word
00023322 <AmiBlitz3.ab3@5125>   JSR bakeval
00023326 <AmiBlitz3.ab3@5126>   MOVE.w fvwait(PC),D1
0002332A <AmiBlitz3.ab3@5127> BRA.w do_VWait__vcont
0002332E <AmiBlitz3.ab3@5130>   MOVE.w #$7000,D1                                         ;moveq #0,d0
00023334 <AmiBlitz3.ab3@5133>   JSR writeword
00023338 <AmiBlitz3.ab3@5134>   MOVE.w #$C104,D1
0002333E <AmiBlitz3.ab3@5135> JMP Atokejsr
00023340 <AmiBlitz3.ab3@5139>   SUBQ.w #1,D0
00023346 <AmiBlitz3.ab3@5142>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
0002334A <AmiBlitz3.ab3@5145>   Dc.l $426d0001                                           ;clr.w $0(A5)
0002334E <AmiBlitz3.ab3@5149>   MOVE.b debugmode(PC),D1
00023352 <AmiBlitz3.ab3@5150>   BEQ.b debugmode_codelabel__skip
00023356 <AmiBlitz3.ab3@5151>   MOVE.w #$D500,D1
0002335C <AmiBlitz3.ab3@5152> JMP Atokejsr
0002335E <AmiBlitz3.ab3@5155> RTS
00023366 <AmiBlitz3.ab3@5159>   BSET #$0,blitzmode
0002336E <AmiBlitz3.ab3@5160>   BSET #$7,blitzmode
00023372 <AmiBlitz3.ab3@5161>   MOVE.w #$C200,D1
00023378 <AmiBlitz3.ab3@5162>   JSR Atokejsr
0002337E <AmiBlitz3.ab3@5163>   TST.b debugmode
00023382 <AmiBlitz3.ab3@5164>    BEQ.w do_BLITZ__done
00023386 <AmiBlitz3.ab3@5165>   MOVE.w cgoblitz(PC),D1
0002338C <AmiBlitz3.ab3@5166>   JSR writeword
0002338E <AmiBlitz3.ab3@5167>   MOVEQ.l #-$01,D1
00023394 <AmiBlitz3.ab3@5168>   JSR writeword
0002339A <AmiBlitz3.ab3@5169>   JSR getbbase
000233A0 <AmiBlitz3.ab3@5170>   JSR writeword
000233A4 <AmiBlitz3.ab3@5173> BRA.w debugmode_codelabel
000233A8 <AmiBlitz3.ab3@5177>   MOVE.w #$C201,D1
000233AC <AmiBlitz3.ab3@5178> BRA.w do_AMIGA__toamode
000233B0 <AmiBlitz3.ab3@5182>   MOVE.W  #$C202,D1
000233B8 <AmiBlitz3.ab3@5185>   BSET #$0,blitzmode
000233C0 <AmiBlitz3.ab3@5186>   BCLR #$7,blitzmode
000233C6 <AmiBlitz3.ab3@5187>   JSR Atokejsr
000233CC <AmiBlitz3.ab3@5188>   TST.b debugmode
000233D0 <AmiBlitz3.ab3@5189>    BEQ.w do_AMIGA__done
000233D4 <AmiBlitz3.ab3@5190>   MOVE.w cgoamiga(PC),D1
000233DA <AmiBlitz3.ab3@5191>   JSR writeword
000233E0 <AmiBlitz3.ab3@5192>   JSR getbbase
000233E6 <AmiBlitz3.ab3@5193>   JSR writeword
000233EA <AmiBlitz3.ab3@5196> BRA.w debugmode_codelabel
000233EE <AmiBlitz3.ab3@5200>   MOVEM.l D2-D7/A2-A4,-(A7)
000233F2 <AmiBlitz3.ab3@5203>   MOVEM.l (A7)+,D2-D7/A2-A4
000233F8 <AmiBlitz3.ab3@5207>   JSR JL_0_BF6A
000233FE <AmiBlitz3.ab3@5208>   CMP.l #$E,D3
00023402 <AmiBlitz3.ab3@5209>    BCC.w interr4
00023406 <AmiBlitz3.ab3@5210>   MOVE.w #$7000,D1
00023408 <AmiBlitz3.ab3@5211>   OR.w D3,D1
0002340E <AmiBlitz3.ab3@5212>   JSR writeword
00023412 <AmiBlitz3.ab3@5213>   MOVE.w #$C101,D1
00023418 <AmiBlitz3.ab3@5214> JMP Atokejsr                                               ;clear the interupt
0002341A <AmiBlitz3.ab3@5217> inerr:       Ds.w 1                                        ;flag - in error trap mode
0002341E <AmiBlitz3.ab3@5218> errjmp:      Ds.l 1                                        ;where err jump is
00023422 <AmiBlitz3.ab3@5219> errcode:     Ds.l 1
00023426 <AmiBlitz3.ab3@5223>   MOVE.W  #$D202,D1
0002342C <AmiBlitz3.ab3@5224> JMP Atokejsr                                               ;BRA.W Atokejsr
00023430 <AmiBlitz3.ab3@5228>   MOVE.w inerr(PC),D1
00023434 <AmiBlitz3.ab3@5229>    BEQ.w errerr3
0002343A <AmiBlitz3.ab3@5230>   CLR.w inerr
00023440 <AmiBlitz3.ab3@5231>   MOVE.w dontwrite,D1
00023444 <AmiBlitz3.ab3@5232>    BNE.w doendseterr__skip
00023448 <AmiBlitz3.ab3@5233>   MOVEA.l errjmp(PC),A0
0002344E <AmiBlitz3.ab3@5234>   MOVE.l destpointer,(A0)
00023452 <AmiBlitz3.ab3@5237> BRA.w get1bytemain
00023456 <AmiBlitz3.ab3@5241>   MOVE.w #$D205,D1
0002345C <AmiBlitz3.ab3@5242> JMP Atokejsr
00023462 <AmiBlitz3.ab3@5246>   MOVE.w proceduremode,D1
00023466 <AmiBlitz3.ab3@5247>    BNE.w errerr1
0002346A <AmiBlitz3.ab3@5248>   MOVE.w inerr(PC),D1
0002346E <AmiBlitz3.ab3@5249>    BNE.w errerr2
00023474 <AmiBlitz3.ab3@5250>   LEA inerr,a0
00023476 <AmiBlitz3.ab3@5251>   NOT.w (a0)                                               ;reass
0002347A <AmiBlitz3.ab3@5252>   MOVE.w #$203C,D1                                         ;move.l #x,d0
00023480 <AmiBlitz3.ab3@5253>   JSR writeword
0002348A <AmiBlitz3.ab3@5254>   MOVE.l destpointer,errcode
0002348E <AmiBlitz3.ab3@5255>   BSR.w addoff
00023494 <AmiBlitz3.ab3@5256>   JSR writelong
00023498 <AmiBlitz3.ab3@5257>   MOVE.w #$D201,D1
0002349E <AmiBlitz3.ab3@5258>   JSR Atokejsr
000234A2 <AmiBlitz3.ab3@5259>   MOVE.w #$4EF9,D1                                         ;JMP
000234A8 <AmiBlitz3.ab3@5260>   JSR writeword
000234B2 <AmiBlitz3.ab3@5261>   MOVE.l destpointer,errjmp
000234B6 <AmiBlitz3.ab3@5262>   BSR.w addoff
000234BC <AmiBlitz3.ab3@5263>   JSR writelong
000234C2 <AmiBlitz3.ab3@5264>   MOVE.w dontwrite,D1
000234C6 <AmiBlitz3.ab3@5265>    BNE.w do_SetErr__skip
000234CA <AmiBlitz3.ab3@5266>   MOVEA.l errcode(PC),A0
000234D0 <AmiBlitz3.ab3@5267>   MOVE.l destpointer,(A0)
000234D2 <AmiBlitz3.ab3@5270> RTS
000234D6 <AmiBlitz3.ab3@5273> intlineat:  Ds.l 1
000234D8 <AmiBlitz3.ab3@5277>   MOVEQ.l #-$01,D1                                        ;type - need new string space
000234DC <AmiBlitz3.ab3@5278>   BSR.w errchx
000234E2 <AmiBlitz3.ab3@5279>   MOVE.w D1,intstring
000234EC <AmiBlitz3.ab3@5280>   MOVE.l linenumat,intlineat
000234F2 <AmiBlitz3.ab3@5281>   JSR JL_0_BF6A                                           ;get constant - int level
000234F8 <AmiBlitz3.ab3@5282>   CMP.l #$E,D3
000234FC <AmiBlitz3.ab3@5283>    BCC.w interr4
00023502 <AmiBlitz3.ab3@5284>   ST intsused
00023508 <AmiBlitz3.ab3@5285>   MOVE.w D3,intlevel
0002350C <AmiBlitz3.ab3@5286>   MOVE.w #$7000,D1
0002350E <AmiBlitz3.ab3@5287>   OR.w D3,D1                                              
00023514 <AmiBlitz3.ab3@5288>   JSR writeword                                         ;moveq #x,d0
00023518 <AmiBlitz3.ab3@5289>   MOVE.w #$223C,D1                                        ;move.l #x,d1
0002351E <AmiBlitz3.ab3@5290>   JSR writeword
00023522 <AmiBlitz3.ab3@5291>   BSR.w addoff
00023528 <AmiBlitz3.ab3@5292>   MOVE.l destpointer,-(A7)
0002352C <AmiBlitz3.ab3@5293>   BSR.w writelong
00023530 <AmiBlitz3.ab3@5294>   MOVE.w #$C100,D1
00023536 <AmiBlitz3.ab3@5295>   JSR Atokejsr
0002353A <AmiBlitz3.ab3@5296>   MOVE.w #$4EF9,D1                                        ;jmp
00023540 <AmiBlitz3.ab3@5297>   JSR writeword
00023544 <AmiBlitz3.ab3@5298>   BSR.w addoff
0002354E <AmiBlitz3.ab3@5299>   MOVE.l destpointer,intjmpat
00023552 <AmiBlitz3.ab3@5300>   BSR.w writelong
00023554 <AmiBlitz3.ab3@5301>   MOVEA.l (A7)+,A0
0002355A <AmiBlitz3.ab3@5302>   MOVE.w dontwrite,D1
0002355E <AmiBlitz3.ab3@5303>   BNE.w do_SetInt__dontpoke
00023564 <AmiBlitz3.ab3@5304>   MOVE.l destpointer,(A0)
00023568 <AmiBlitz3.ab3@5307>   MOVE.l intstart0(PC),D1
0002356C <AmiBlitz3.ab3@5308>   BSR.w writelong
00023572 <AmiBlitz3.ab3@5309>   TST.b debugmode
00023576 <AmiBlitz3.ab3@5310>    BEQ.w do_SetInt__norerr
00023578 <AmiBlitz3.ab3@5314>   MOVEQ.l #$02,D1
0002357C <AmiBlitz3.ab3@5315>   BSR.w writetrap
00023580 <AmiBlitz3.ab3@5316>   BSR.w addoff
0002358A <AmiBlitz3.ab3@5317>   MOVE.l destpointer,intcleanat
0002358E <AmiBlitz3.ab3@5318>   BSR.w writelong
00023594 <AmiBlitz3.ab3@5319>   MOVE.w intlevel,D1
00023598 <AmiBlitz3.ab3@5320>   BSR.w writeword
0002359C <AmiBlitz3.ab3@5321>   MOVE.w #$C30B,D1                                         ;disable stack checks
000235A2 <AmiBlitz3.ab3@5322>   JSR Atokejsr
000235A6 <AmiBlitz3.ab3@5325>   MOVE.w #$FED3,D1
000235AA <AmiBlitz3.ab3@5326>   BSR.w uselib
000235AE <AmiBlitz3.ab3@5327>   MOVE.w #$C102,D1
000235B4 <AmiBlitz3.ab3@5328>   JSR Atokejsr
000235BC <AmiBlitz3.ab3@5329>   MOVE.w #-1,lasta6
000235C6 <AmiBlitz3.ab3@5330>   MOVE.l linenumat,intline
000235C8 <AmiBlitz3.ab3@5331> RTS
000235CA <AmiBlitz3.ab3@5335>             Ds.w 1                                         ;??looks like obsolved data??
000235CE <AmiBlitz3.ab3@5337> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
000235D2 <AmiBlitz3.ab3@5339> intjmpat:   Ds.l 1
000235D6 <AmiBlitz3.ab3@5340> intline:    Ds.l 1
000235D8 <AmiBlitz3.ab3@5341> intstring:  Ds.w 1                                         ;flag 0 = no setint
000235DA <AmiBlitz3.ab3@5344> intlevel:   Ds.w 1
000235DE <AmiBlitz3.ab3@5345> intcleanat: Ds.l 1
000235E2 <AmiBlitz3.ab3@5346> ret15add:   Ds.l 1
000235E4 <AmiBlitz3.ab3@5347> ret15cc:    Ds.w 1
000235EC <AmiBlitz3.ab3@5351>   ADDI.l #$12,$2(A7)
000235F4 <AmiBlitz3.ab3@5352>   MOVE.l $2(A7),ret15add
000235FA <AmiBlitz3.ab3@5353>   MOVE.w (A7),ret15cc
00023602 <AmiBlitz3.ab3@5354>   MOVE.l #directdo,$2(A7)
00023604 <AmiBlitz3.ab3@5355> RTE
00023608 <AmiBlitz3.ab3@5364>   MOVE.l ret15add(PC),-(A7)
0002360C <AmiBlitz3.ab3@5365>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023610 <AmiBlitz3.ab3@5366>   MOVEM.l D0-D7/A0-A6,-(A7)
0002361A <AmiBlitz3.ab3@5367>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
00023624 <AmiBlitz3.ab3@5368>   MOVE.l destbufferstart,trap15temp2
0002362E <AmiBlitz3.ab3@5369>   MOVE.l libend,templibend
00023638 <AmiBlitz3.ab3@5370>   MOVE.l data1start,tempdata1start
0002363E <AmiBlitz3.ab3@5371>   CLR.l hunkoffsetcounter
00023644 <AmiBlitz3.ab3@5373>   MOVE.l directbuffer,a0
0002364A <AmiBlitz3.ab3@5377>   MOVE.l a0,destbufferstart
00023650 <AmiBlitz3.ab3@5378>   ADD.l #3900,a0
00023656 <AmiBlitz3.ab3@5379>   MOVE.l a0,destbufferend
0002365C <AmiBlitz3.ab3@5380>   TST.b exdebug
00023660 <AmiBlitz3.ab3@5381>   BEQ 'l1
00023666 <AmiBlitz3.ab3@5382>   MOVE.l a0,libend
0002366C <AmiBlitz3.ab3@5383>   ADD.l #4000,a0
00023672 <AmiBlitz3.ab3@5384>   MOVE.l a0,data1start
0002367C <AmiBlitz3.ab3@5387>   MOVE.l #dircont,errcont
00023682 <AmiBlitz3.ab3@5388> 
00023688 <AmiBlitz3.ab3@5389>   MOVE.l A7,errstack
00023690 <AmiBlitz3.ab3@5390>   MOVE.w #$FFFF,dirmode
00023694 <AmiBlitz3.ab3@5392>     MOVEA.l ret15add(PC),A1
0002369A <AmiBlitz3.ab3@5393>     MOVE.w -(A1),blitzmode
0002369C <AmiBlitz3.ab3@5394>     CLR.l -(A1)
000236A2 <AmiBlitz3.ab3@5395>     MOVE.l -(A1),firstglob
000236A8 <AmiBlitz3.ab3@5396>     MOVE.l -(A1),firstlocal
000236AE <AmiBlitz3.ab3@5398>   CLR.w proceduremode
000236B4 <AmiBlitz3.ab3@5399>   MOVE.l firstglob,D0
000236BA <AmiBlitz3.ab3@5400>   OR.l firstlocal,D0
000236BE <AmiBlitz3.ab3@5401>   BEQ.b directdo__skip
000236C4 <AmiBlitz3.ab3@5402>   NOT.w proceduremode
000236C6 <AmiBlitz3.ab3@5405>   MOVEA.l -(A1),A0                                         ;address of string
000236C8 <AmiBlitz3.ab3@5409>   MOVE.l A0,-(A7)
00023706 <AmiBlitz3.ab3@5412>   !ComData_GetL{comFunc_DebugTrap,A1}
00023708 <AmiBlitz3.ab3@5414>   JSR (A1)                                                 ;tokenise line.....
0002370A <AmiBlitz3.ab3@5416>   MOVEA.l (A7)+,A5
00023714 <AmiBlitz3.ab3@5417>   MOVE.l directbuffer,destpointer
0002371A <AmiBlitz3.ab3@5418>   TST.b exdebug
0002371E <AmiBlitz3.ab3@5419>   BEQ 'noexdebug
00023720 <AmiBlitz3.ab3@5420>   MOVE.l a5,a0
00023726 <AmiBlitz3.ab3@5421>   MOVE.l #200,d0
0002372C <AmiBlitz3.ab3@5424>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023730 <AmiBlitz3.ab3@5425>   DBF d0,'l1
00023736 <AmiBlitz3.ab3@5430>   MOVE.l destpointer,a0
0002373A <AmiBlitz3.ab3@5431>   MOVE.w #$207c,(a0)+
0002373C <AmiBlitz3.ab3@5432>   MOVE.l a5,d0
00023742 <AmiBlitz3.ab3@5433>   ADD.l #$206,d0                                           ;constant from debuglib
00023744 <AmiBlitz3.ab3@5434>   MOVE.l d0,(a0)+
0002374A <AmiBlitz3.ab3@5435>   MOVE.l a0,destpointer
0002374C <AmiBlitz3.ab3@5436>   MOVE.l a5,a0
00023750 <AmiBlitz3.ab3@5437>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
00023756 <AmiBlitz3.ab3@5438>   MOVE.l #"$520",(a0)+
0002375A <AmiBlitz3.ab3@5439>   MOVE.w #"4:",(a0)+
00023760 <AmiBlitz3.ab3@5442>   CLR.w dontwrite
00023768 <AmiBlitz3.ab3@5443>   MOVE.w #$FFFF,lasta6
0002376C <AmiBlitz3.ab3@5444>   BSR.w compile_line                                        ;.....compile it
00023772 <AmiBlitz3.ab3@5445>   TST.b exdebug
00023776 <AmiBlitz3.ab3@5446>   BEQ 'noexdebug2
0002377C <AmiBlitz3.ab3@5447>   JSR JL_0_6C76
00023782 <AmiBlitz3.ab3@5450>   CLR.w proceduremode
00023786 <AmiBlitz3.ab3@5451>   BSR.w errchx
0002378A <AmiBlitz3.ab3@5452>   MOVE.w #$4EF9,D1
0002378E <AmiBlitz3.ab3@5453>   BSR.w writeword                                          ;JMP
00023792 <AmiBlitz3.ab3@5454>   MOVE.l ret15add(PC),D1
00023796 <AmiBlitz3.ab3@5455>   BSR.w writelong                                          ;jmp to done
0002379C <AmiBlitz3.ab3@5456>   MOVE.w dontwrite,D0
000237A0 <AmiBlitz3.ab3@5457>    BNE.w nodirmem
000237A8 <AmiBlitz3.ab3@5458>   MOVE.l directbuffer,$3E(A7)                              ;install code address
000237AE <AmiBlitz3.ab3@5461>   CLR.w dirmode
000237B4 <AmiBlitz3.ab3@5462>   MOVE.w ret15cc(PC),$3C(A7)
000237BE <AmiBlitz3.ab3@5463>   MOVE.l trap15temp,destbufferend
000237C8 <AmiBlitz3.ab3@5464>   MOVE.l trap15temp2,destbufferstart
000237D2 <AmiBlitz3.ab3@5465>   MOVE.l tempdata1start,data1start
000237DC <AmiBlitz3.ab3@5466>   MOVE.l templibend,libend
000237E0 <AmiBlitz3.ab3@5467>   MOVEM.l (A7)+,D0-D7/A0-A6
000237E4 <AmiBlitz3.ab3@5468>   BSR.w Aclearcache                                        ;selden used
000237E6 <AmiBlitz3.ab3@5469> RTR
000237EA <AmiBlitz3.ab3@5472>   MOVEA.l ret15add(PC),A0
000237EC <AmiBlitz3.ab3@5473>   SUBQ.w #2,A0
000237EE <AmiBlitz3.ab3@5474>   MOVE.l D0,-(A0)
000237F2 <AmiBlitz3.ab3@5475> BRA.w direxit
000237F6 <AmiBlitz3.ab3@5479>   MOVE.w $6(A3),D1
000237FA <AmiBlitz3.ab3@5480>   BSR.w uselib                                             ;get lib for base address
000237FE <AmiBlitz3.ab3@5481>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023800 <AmiBlitz3.ab3@5482>   ADDQ.w #8,A3
00023802 <AmiBlitz3.ab3@5483>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
00023804 <AmiBlitz3.ab3@5484>   MOVE.l A3,-(A7)
00023806 <AmiBlitz3.ab3@5488>   MOVEQ.l #$00,D3
0002380C <AmiBlitz3.ab3@5489>   JSR checka4a5
0002380E <AmiBlitz3.ab3@5491>   MOVE.b (A3)+,D1
00023812 <AmiBlitz3.ab3@5492>    BMI.w stamigalib__done
00023814 <AmiBlitz3.ab3@5493>   MOVEQ.l #$03,D2
00023816 <AmiBlitz3.ab3@5494>   ADDQ.w #1,D3
0002381A <AmiBlitz3.ab3@5495>   MOVEM.l D3/A3,-(A7)
00023820 <AmiBlitz3.ab3@5496>   MOVE.b funcparloop,-(a7)
00023828 <AmiBlitz3.ab3@5497>   MOVE.b #0,funcparloop
0002382E <AmiBlitz3.ab3@5498>   MOVE.l leftsidetype,-(a7)
00023834 <AmiBlitz3.ab3@5499>   MOVE.l rightsidetype,-(a7)
0002383A <AmiBlitz3.ab3@5500>   MOVE.w leftsideflagmask,-(a7)
00023840 <AmiBlitz3.ab3@5501>   MOVE.w rightsideflagmask,-(a7)
00023846 <AmiBlitz3.ab3@5502>   CLR.l leftsidetype
0002384C <AmiBlitz3.ab3@5503>   CLR.l rightsidetype
00023852 <AmiBlitz3.ab3@5504>   CLR.w leftsideflagmask
00023858 <AmiBlitz3.ab3@5505>   CLR.w rightsideflagmask
0002385E <AmiBlitz3.ab3@5506>   MOVE.b blitzparloop,-(a7)
00023866 <AmiBlitz3.ab3@5507>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
0002386C <AmiBlitz3.ab3@5508>   JSR peval
00023872 <AmiBlitz3.ab3@5509>   MOVE.b (a7)+,blitzparloop
00023878 <AmiBlitz3.ab3@5510>   MOVE.w (a7)+,rightsideflagmask
0002387E <AmiBlitz3.ab3@5511>   MOVE.w (a7)+,leftsideflagmask
00023884 <AmiBlitz3.ab3@5512>   MOVE.l (a7)+,rightsidetype
0002388A <AmiBlitz3.ab3@5513>   MOVE.l (a7)+,leftsidetype
00023890 <AmiBlitz3.ab3@5514>   MOVE.b (a7)+,funcparloop
00023894 <AmiBlitz3.ab3@5515>   MOVEM.l (A7)+,D3/A3
00023898 <AmiBlitz3.ab3@5516>   CMP.w #$2C,D0
0002389C <AmiBlitz3.ab3@5517>    BEQ.w stamigalib__loop
0002389E <AmiBlitz3.ab3@5518>   TST.b (A3)
000238A2 <AmiBlitz3.ab3@5519>    BPL.w syntaxerr
000238A4 <AmiBlitz3.ab3@5522>   MOVEA.l (A7)+,A3
000238A6 <AmiBlitz3.ab3@5523>   SUBQ.w #1,D3
000238AA <AmiBlitz3.ab3@5524>    BPL.w stamigalib__toend
000238AE <AmiBlitz3.ab3@5525>    BSR.w get1bytemain                                      ;no pars - get :
000238B2 <AmiBlitz3.ab3@5526> BRA.w stamigalib__nopars
000238B4 <AmiBlitz3.ab3@5529>   TST.b (A3)+                                              ;go to end of params
000238B8 <AmiBlitz3.ab3@5530>    BPL.w stamigalib__toend
000238BA <AmiBlitz3.ab3@5531>   SUBQ.w #1,A3
000238BC <AmiBlitz3.ab3@5534>    MOVEQ.l #$00,D1
000238BE <AmiBlitz3.ab3@5535>    MOVE.b -(A3),D1
000238C2 <AmiBlitz3.ab3@5536>    BTST #$4,D1
000238C6 <AmiBlitz3.ab3@5537>     BNE.w stamigalib__addreg
000238C8 <AmiBlitz3.ab3@5538>    LSL.w #8,D1
000238CA <AmiBlitz3.ab3@5539>    LSL.w #1,D1
000238CE <AmiBlitz3.ab3@5540>    ORI.w #$201F,D1
000238D2 <AmiBlitz3.ab3@5541>  BRA.w stamigalib__gotit
000238D6 <AmiBlitz3.ab3@5544>    ANDI.w #$7,D1
000238D8 <AmiBlitz3.ab3@5545>    LSL.w #8,D1
000238DA <AmiBlitz3.ab3@5546>    LSL.w #1,D1
000238DE <AmiBlitz3.ab3@5547>    ORI.w #$205F,D1
000238E2 <AmiBlitz3.ab3@5550>     BSR.w writeword
000238E6 <AmiBlitz3.ab3@5551>   DBF D3,stamigalib__loop2
000238EC <AmiBlitz3.ab3@5554>   MOVE.w (A7)+,libjsr+2
000238F2 <AmiBlitz3.ab3@5555>   MOVE.w (A7)+,libbase+2
000238F8 <AmiBlitz3.ab3@5556>   MOVE.l libbase,D1
000238FC <AmiBlitz3.ab3@5557>    BSR.w writelong
00023902 <AmiBlitz3.ab3@5558>   MOVE.l libjsr,D1
00023908 <AmiBlitz3.ab3@5559>   JSR writelong
0002390E <AmiBlitz3.ab3@5560>   JSR restorea4a5
00023910 <AmiBlitz3.ab3@5561>   RTS
00023916 <AmiBlitz3.ab3@5564>   MOVE.l data1,D4
0002391C <AmiBlitz3.ab3@5565>   SUB.l data1start,D4
00023922 <AmiBlitz3.ab3@5566>   ADD.l #10000,d4
00023928 <AmiBlitz3.ab3@5567>   MOVE.l libend,D3
0002392E <AmiBlitz3.ab3@5568>   SUB.l destbufferend,D3
00023934 <AmiBlitz3.ab3@5569>   ADD.l #40000,d3
0002393A <AmiBlitz3.ab3@5570>   MOVE.l bigpc,D2
00023940 <AmiBlitz3.ab3@5571>   SUB.l destbufferstart,D2
00023946 <AmiBlitz3.ab3@5572>   ADD.l #20000,d2
0002394C <AmiBlitz3.ab3@5573>   MOVE.l databuffer,D5
00023952 <AmiBlitz3.ab3@5574>   ADD.l #10000,D5
00023956 <AmiBlitz3.ab3@5575> BRA newallox
0002395C <AmiBlitz3.ab3@5579>   MOVE.l objectbuffer,D2
0002395E <AmiBlitz3.ab3@5580>   LSR.l #1,D2
00023964 <AmiBlitz3.ab3@5581>   ADD.l objectbuffer,D2
0002396A <AmiBlitz3.ab3@5582>   MOVE.l libsbuffer,D3
0002396C <AmiBlitz3.ab3@5583>   LSR.l #1,D3
00023972 <AmiBlitz3.ab3@5584>   ADD.l libsbuffer,D3
00023978 <AmiBlitz3.ab3@5585>   MOVE.l systembuffer,D4
0002397A <AmiBlitz3.ab3@5586>   LSR.l #1,D4
00023980 <AmiBlitz3.ab3@5587>   ADD.l systembuffer,D4
00023986 <AmiBlitz3.ab3@5588>   MOVE.l databuffer,D5
00023988 <AmiBlitz3.ab3@5589>   LSR.l #1,D5
0002398E <AmiBlitz3.ab3@5590>   ADD.l databuffer,D5
00023992 <AmiBlitz3.ab3@5591> BRA.w newallox
00023998 <AmiBlitz3.ab3@5595>   MOVE.l bigpc,D2
0002399E <AmiBlitz3.ab3@5596>   SUB.l destbufferstart,D2                                     ;size of object buffer
000239A4 <AmiBlitz3.ab3@5597>   SUB.l savefuncspace,d2
000239AA <AmiBlitz3.ab3@5599>   TST.w debugversion
000239AE <AmiBlitz3.ab3@5600>    BNE.b alloxadj__skip
000239B4 <AmiBlitz3.ab3@5601>   ADDI.l #$800,D2
000239BA <AmiBlitz3.ab3@5604>   MOVE.l libend,D3
000239C0 <AmiBlitz3.ab3@5605>   SUB.l destbufferend,D3
000239C6 <AmiBlitz3.ab3@5607>   MOVE.l data1,D4
000239CC <AmiBlitz3.ab3@5608>   SUB.l data1start,D4
000239D2 <AmiBlitz3.ab3@5610>   MOVE.l data2,D5
000239D8 <AmiBlitz3.ab3@5611>   SUB.l data2at,D5
000239DE <AmiBlitz3.ab3@5613>   CLR.l morememadd
000239E2 <AmiBlitz3.ab3@5616>   BSR.w makeallox
000239E6 <AmiBlitz3.ab3@5617>   BNE.w newallox__done
000239EA <AmiBlitz3.ab3@5618> BRA.w init_buffers
000239EC <AmiBlitz3.ab3@5621> RTS
000239F2 <AmiBlitz3.ab3@5625>   MOVEA.l _execbase,A6
000239F8 <AmiBlitz3.ab3@5626>   MOVE.l objlen,D0
000239FC <AmiBlitz3.ab3@5627>   BEQ.w freeallox__skip
00023A02 <AmiBlitz3.ab3@5628>   CLR.l objlen
00023A08 <AmiBlitz3.ab3@5629>   MOVEA.l destbufferstart,A1
00023A0E <AmiBlitz3.ab3@5630>   MOVE.l mempool,a0
00023A12 <AmiBlitz3.ab3@5631> JMP _FreeVec(A6)
00023A14 <AmiBlitz3.ab3@5634> RTS
00023A1A <AmiBlitz3.ab3@5638>   MOVE.l objectbuffer,D2
00023A20 <AmiBlitz3.ab3@5639>   MOVE.l libsbuffer,D3
00023A26 <AmiBlitz3.ab3@5640>   MOVE.l systembuffer,D4
00023A2C <AmiBlitz3.ab3@5641>   MOVE.l databuffer,D5
00023A34 <AmiBlitz3.ab3@5644>   MOVE.w #$FFFF,anyerrs
00023A38 <AmiBlitz3.ab3@5645>   BSR.w freeallox
00023A3A <AmiBlitz3.ab3@5649>   ADDQ.l #1,D2
00023A3E <AmiBlitz3.ab3@5650>   BCLR #$0,D2
00023A40 <AmiBlitz3.ab3@5651>   ADDQ.l #1,D3
00023A44 <AmiBlitz3.ab3@5652>   BCLR #$0,D3
00023A46 <AmiBlitz3.ab3@5653>   ADDQ.l #1,D4
00023A4A <AmiBlitz3.ab3@5654>   BCLR #$0,D4
00023A4C <AmiBlitz3.ab3@5655>   TST.l d5
00023A50 <AmiBlitz3.ab3@5656>   BNE 'l1
00023A52 <AmiBlitz3.ab3@5659>   ADDQ.l #1,D5
00023A56 <AmiBlitz3.ab3@5660>   BCLR #$0,D5
00023A58 <AmiBlitz3.ab3@5661>   MOVE.l D2,D0
00023A5A <AmiBlitz3.ab3@5662>   ADD.l D3,D0
00023A5C <AmiBlitz3.ab3@5663>   ADD.l D4,D0
00023A5E <AmiBlitz3.ab3@5664>   ADD.l D5,D0
00023A64 <AmiBlitz3.ab3@5665>   ADD.l #moremem,d0
00023A66 <AmiBlitz3.ab3@5666>   MOVE.l D0,D6
00023A6C <AmiBlitz3.ab3@5667>   MOVE.l #MemfPublic_MemfClear,D1
00023A72 <AmiBlitz3.ab3@5668>   MOVE.l mempool,a0
00023A78 <AmiBlitz3.ab3@5669>   MOVEA.l _execbase,A6
00023A7C <AmiBlitz3.ab3@5670>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023A7E <AmiBlitz3.ab3@5672>   TST.l D0
00023A82 <AmiBlitz3.ab3@5673>   BEQ.w exit_initbuffers
00023A88 <AmiBlitz3.ab3@5674>   MOVE.l D6,objlen
00023A8E <AmiBlitz3.ab3@5675>   MOVE.l D2,objectbuffer
00023A94 <AmiBlitz3.ab3@5676>   MOVE.l D3,libsbuffer
00023A9A <AmiBlitz3.ab3@5677>   MOVE.l D4,systembuffer
00023AA0 <AmiBlitz3.ab3@5678>   MOVE.l D5,databuffer
00023AA6 <AmiBlitz3.ab3@5679>   MOVE.l D0,destbufferstart
00023ADA <AmiBlitz3.ab3@5682>   !ComData_SetL{comPtr_DestBufferStart,D0}
00023ADC <AmiBlitz3.ab3@5683>   ADD.l D2,D0
00023AE2 <AmiBlitz3.ab3@5684>   MOVE.l D0,destbufferend
00023AE4 <AmiBlitz3.ab3@5685>   ADD.l D3,D0
00023AEA <AmiBlitz3.ab3@5686>   MOVE.l D0,data1start
00023AEC <AmiBlitz3.ab3@5687>   ADD.l D4,D0
00023AF2 <AmiBlitz3.ab3@5688>   MOVE.l D0,data2at
00023AF4 <AmiBlitz3.ab3@5689>   ADD.l D5,D0
00023AFA <AmiBlitz3.ab3@5690>   MOVE.l D0,allat
00023AFC <AmiBlitz3.ab3@5693> RTS
00023B00 <AmiBlitz3.ab3@5697>   Dc.b $00,$00,$00,$01                                     ;         1
00023B04 <AmiBlitz3.ab3@5698>   Dc.b $00,$00,$00,$0A                                     ;        10
00023B08 <AmiBlitz3.ab3@5699>   Dc.b $00,$00,$00,$64                                     ;       100
00023B0C <AmiBlitz3.ab3@5700>   Dc.b $00,$00,$03,$E8                                     ;      1000
00023B10 <AmiBlitz3.ab3@5701>   Dc.b $00,$00,$27,$10                                     ;     10000
00023B14 <AmiBlitz3.ab3@5702>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023B18 <AmiBlitz3.ab3@5703>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023B1C <AmiBlitz3.ab3@5704>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023B20 <AmiBlitz3.ab3@5705>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023B24 <AmiBlitz3.ab3@5706>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023B26 <AmiBlitz3.ab3@5710>   MOVEQ.l #$00,D1                                          ;no zero printed
00023B28 <AmiBlitz3.ab3@5711>   MOVEQ.l #$24,D3                                          ; "$"
00023B2A <AmiBlitz3.ab3@5714>   MOVEQ.l #$30,D4                                          ; "0"
00023B2E <AmiBlitz3.ab3@5717>     CMP.l divisors(PC,D3.W),D2
00023B32 <AmiBlitz3.ab3@5718>     BCS.w makelong__skip
00023B36 <AmiBlitz3.ab3@5719>     SUB.l divisors(PC,D3.W),D2
00023B38 <AmiBlitz3.ab3@5720>     ADDQ.w #1,D4
00023B3C <AmiBlitz3.ab3@5721> BRA.w makelong__loop2
00023B40 <AmiBlitz3.ab3@5724>   CMP.b #"0",D4
00023B44 <AmiBlitz3.ab3@5725>   BNE.w makelong__doit
00023B46 <AmiBlitz3.ab3@5726>   TST.w D1
00023B4A <AmiBlitz3.ab3@5727>   BEQ.w makelong__skip2
00023B4C <AmiBlitz3.ab3@5730>   MOVE.b D4,(A0)+
00023B4E <AmiBlitz3.ab3@5731>   MOVEQ.l #$01,D1
00023B50 <AmiBlitz3.ab3@5734>   SUBQ.w #4,D3
00023B54 <AmiBlitz3.ab3@5735>   BPL.w makelong__loop
00023B56 <AmiBlitz3.ab3@5736>   TST.w D1
00023B5A <AmiBlitz3.ab3@5737>   BNE.w makelong__skip3
00023B5E <AmiBlitz3.ab3@5738>   MOVE.b #"0",(A0)+
00023B60 <AmiBlitz3.ab3@5741>   CLR.b (A0)
00023B62 <AmiBlitz3.ab3@5742> RTS
00023B82 <AmiBlitz3.ab3@5745> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00023C42 <AmiBlitz3.ab3@5746> str_residentpath:       Ds.l 48                                                ;respath org source
00023D02 <AmiBlitz3.ab3@5747> str_residentname:       Ds.l 48                                                ;resname org source
00023D08 <AmiBlitz3.ab3@5751>   MOVE.l macrobase,D0
00023D0C <AmiBlitz3.ab3@5752>    BNE.w create_residentfile
00023D12 <AmiBlitz3.ab3@5753>   MOVE.l newtype_string,D0
00023D16 <AmiBlitz3.ab3@5754>    BNE.w create_residentfile
00023D1C <AmiBlitz3.ab3@5755>   MOVEA.l labelbase,A2
00023D20 <AmiBlitz3.ab3@5758>     CMPA.w #$0,A2
00023D24 <AmiBlitz3.ab3@5759>      BEQ.w menu_createresidentfile__err
00023D2C <AmiBlitz3.ab3@5760>     CMPI.l #$1,$4(A2)
00023D30 <AmiBlitz3.ab3@5761>      BEQ.w create_residentfile
00023D32 <AmiBlitz3.ab3@5762>     MOVEA.l (A2),A2
00023D36 <AmiBlitz3.ab3@5763> BRA.w menu_createresidentfile__loop
00023D60 <AmiBlitz3.ab3@5766>   !basic
00023DC2 <AmiBlitz3.ab3@5767> 
00023DE0 <AmiBlitz3.ab3@5768>   !asm
00023DE2 <AmiBlitz3.ab3@5769> RTS
00023E20 <AmiBlitz3.ab3@5775>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023E26 <AmiBlitz3.ab3@5776>   LEA str_residentrequester,A2
00023E2C <AmiBlitz3.ab3@5777>   LEA str_residentpath,A0
00023E32 <AmiBlitz3.ab3@5778>   LEA str_residentname,A1
00023E5C <AmiBlitz3.ab3@5779>   !basic
00023E94 <AmiBlitz3.ab3@5780>     Poke$ ?str_residentpath,my_residentsdir$
00023EC0 <AmiBlitz3.ab3@5781>     Poke$ ?str_residentname,".res"
00023EDE <AmiBlitz3.ab3@5782>   !asm
00023EE0 <AmiBlitz3.ab3@5784>   JSR (A3)                                                 ;open ped filerequest
00023EE4 <AmiBlitz3.ab3@5786>   BEQ.w menu_createresidentfile__err
00023EE6 <AmiBlitz3.ab3@5789>   MOVE.l D0,D1
00023EEC <AmiBlitz3.ab3@5790>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00023EF0 <AmiBlitz3.ab3@5791>   MOVEA.l _dosbase(PC),A6
00023EF4 <AmiBlitz3.ab3@5792>   JSR _Open(A6)
00023EF6 <AmiBlitz3.ab3@5793>   MOVE.l D0,D7                                             ;handle
00023EFA <AmiBlitz3.ab3@5794>   BEQ.w menu_createresidentfile__err
00023EFE <AmiBlitz3.ab3@5795>   MOVEM.l d2-d7/a0-a6,-(a7)
00023F04 <AmiBlitz3.ab3@5796>   LEA devo,a0
00023F0A <AmiBlitz3.ab3@5797>   LEA ptr_parameterstore,a1
00023F0C <AmiBlitz3.ab3@5800>     MOVE.b (a0)+,(a1)+
00023F10 <AmiBlitz3.ab3@5801>   BNE 'l1
00023F12 <AmiBlitz3.ab3@5802>   MOVEQ #13,d2
00023F18 <AmiBlitz3.ab3@5803>   JSR findlabel2
00023F1C <AmiBlitz3.ab3@5804>   BNE 'd
00023F20 <AmiBlitz3.ab3@5805>   TST.l 8(a2)
00023F24 <AmiBlitz3.ab3@5806>   BEQ 'd2
00023F4E <AmiBlitz3.ab3@5807>   !basic
00023FB0 <AmiBlitz3.ab3@5808>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00023FCE <AmiBlitz3.ab3@5809>   !asm
00023FD2 <AmiBlitz3.ab3@5810>   MOVEM.l (a7)+,d2-d7/a0-a6
00023FD6 <AmiBlitz3.ab3@5811>   MOVEA.l _dosbase(PC),A6
00023FD8 <AmiBlitz3.ab3@5812>   MOVE.l d7,d1
00023FDC <AmiBlitz3.ab3@5813>   JSR _Close(a6)
00023FE0 <AmiBlitz3.ab3@5814> BRA menu_createresidentfile__err
00023FE4 <AmiBlitz3.ab3@5818>   MOVEM.l (a7)+,d2-d7/a0-a6
00023FE8 <AmiBlitz3.ab3@5819>   BSR.w call_setpointerbusy
00023FEC <AmiBlitz3.ab3@5821>   BSR.w AJL_0_7962
00023FEE <AmiBlitz3.ab3@5822>   MOVE.l D7,D1
00023FF4 <AmiBlitz3.ab3@5823>   MOVE.l #tsthead,D2                                       ;header
00023FF6 <AmiBlitz3.ab3@5824>   MOVEQ.l #$20,D3
00023FFA <AmiBlitz3.ab3@5825>   MOVEA.l _dosbase(PC),A6
00023FFE <AmiBlitz3.ab3@5826>   JSR _Write(A6)
00024000 <AmiBlitz3.ab3@5827>   MOVEQ.l #$00,D6                                          ;offset from start of file!
00024004 <AmiBlitz3.ab3@5828>   BSR.w restypes
00024008 <AmiBlitz3.ab3@5829>   BSR.w resmacs
0002400C <AmiBlitz3.ab3@5830>   BSR.w resconsts
0002400E <AmiBlitz3.ab3@5831>   MOVE.l D6,D3
00024010 <AmiBlitz3.ab3@5832>   ADDQ.l #3,D3
00024016 <AmiBlitz3.ab3@5833>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00024018 <AmiBlitz3.ab3@5834>   MOVE.l D3,-(A7)
0002401A <AmiBlitz3.ab3@5835>   SUB.l D6,D3
0002401E <AmiBlitz3.ab3@5836>   BEQ.w menu_createresidentfile__noalign
00024024 <AmiBlitz3.ab3@5837>   MOVE.l #writelist,D2
00024026 <AmiBlitz3.ab3@5838>   MOVE.l D7,D1
0002402C <AmiBlitz3.ab3@5839>   MOVEA.l _dosbase,A6
00024030 <AmiBlitz3.ab3@5840>   JSR _Write(A6)
0002403A <AmiBlitz3.ab3@5843>    MOVE.l hunkoffsetcounter,tstsize3
0002403E <AmiBlitz3.ab3@5844>    BEQ.w menu_createresidentfile__skip2a
00024040 <AmiBlitz3.ab3@5845>   MOVE.l D7,D1
00024046 <AmiBlitz3.ab3@5846>   MOVE.l #tstend,D2
00024048 <AmiBlitz3.ab3@5847>   MOVEQ.l #$0C,D3
0002404E <AmiBlitz3.ab3@5848>   MOVEA.l _dosbase,A6
00024052 <AmiBlitz3.ab3@5849>    JSR _Write(A6)
00024058 <AmiBlitz3.ab3@5853>   MOVEA.l hunkoffsetbase,A2
0002405C <AmiBlitz3.ab3@5856>   CMPA.w #$0,A2
00024060 <AmiBlitz3.ab3@5857>    BEQ.w menu_createresidentfile__skip2
00024064 <AmiBlitz3.ab3@5858>   LEA $4(A2),A1
00024066 <AmiBlitz3.ab3@5859>   MOVE.l D7,D1
00024068 <AmiBlitz3.ab3@5860>   MOVE.l A1,D2
0002406A <AmiBlitz3.ab3@5861>   MOVEQ.l #$04,D3
00024070 <AmiBlitz3.ab3@5862>   MOVEA.l _dosbase,A6
00024074 <AmiBlitz3.ab3@5863>    JSR _Write(A6)
00024076 <AmiBlitz3.ab3@5864>   MOVEA.l (A2),A2
0002407A <AmiBlitz3.ab3@5865> BRA.w menu_createresidentfile__oloop
0002407C <AmiBlitz3.ab3@5868>   MOVE.l D7,D1
00024082 <AmiBlitz3.ab3@5869>   MOVE.l #zero,D2
00024084 <AmiBlitz3.ab3@5870>   MOVEQ.l #$04,D3
0002408A <AmiBlitz3.ab3@5871>   MOVEA.l _dosbase,A6
0002408E <AmiBlitz3.ab3@5872>   JSR _Write(A6)
00024090 <AmiBlitz3.ab3@5875>   MOVE.l D7,D1
00024096 <AmiBlitz3.ab3@5876>   MOVE.l #tstdone,D2
00024098 <AmiBlitz3.ab3@5877>   MOVEQ.l #$04,D3
0002409E <AmiBlitz3.ab3@5878>   MOVEA.l _dosbase,A6
000240A2 <AmiBlitz3.ab3@5879>    JSR _Write(A6)
000240A4 <AmiBlitz3.ab3@5880>   MOVE.l (A7)+,D0
000240A6 <AmiBlitz3.ab3@5881>   LSR.l #2,D0
000240AC <AmiBlitz3.ab3@5882>   MOVE.l D0,temp1
000240AE <AmiBlitz3.ab3@5883>   MOVE.l D7,D1
000240B0 <AmiBlitz3.ab3@5884>   MOVEQ.l #$14,D2
000240B2 <AmiBlitz3.ab3@5885>   MOVEQ.l #-$01,D3
000240B6 <AmiBlitz3.ab3@5886>   JSR _Seek(A6)
000240B8 <AmiBlitz3.ab3@5887>   MOVE.l D7,D1
000240BE <AmiBlitz3.ab3@5888>   MOVE.l #temp1,D2
000240C0 <AmiBlitz3.ab3@5889>   MOVEQ.l #$04,D3
000240C4 <AmiBlitz3.ab3@5890>    JSR _Write(A6)
000240C6 <AmiBlitz3.ab3@5891>   MOVE.l D7,D1
000240C8 <AmiBlitz3.ab3@5892>   MOVEQ.l #$1C,D2
000240CA <AmiBlitz3.ab3@5893>   MOVEQ.l #-$01,D3
000240CE <AmiBlitz3.ab3@5894>    JSR _Seek(A6)
000240D0 <AmiBlitz3.ab3@5895>   MOVE.l D7,D1
000240D6 <AmiBlitz3.ab3@5896>   MOVE.l #temp1,D2
000240D8 <AmiBlitz3.ab3@5897>   MOVEQ.l #$04,D3
000240DC <AmiBlitz3.ab3@5898>    JSR _Write(A6)
000240DE <AmiBlitz3.ab3@5899>   MOVE.l D7,D1
000240E2 <AmiBlitz3.ab3@5900>    JSR _Close(A6)
000240E6 <AmiBlitz3.ab3@5901> BRA.w call_setpointernormal
000240E8 <AmiBlitz3.ab3@5905>   ADDQ.w #5,D1
000240EA <AmiBlitz3.ab3@5906>   ADDQ.b #8,D0
000240EE <AmiBlitz3.ab3@5909>     CMPA.w #$0,A2
000240F2 <AmiBlitz3.ab3@5910>     BEQ.w writelist__done
000240F6 <AmiBlitz3.ab3@5911>      BSR.w writeitem
000240F8 <AmiBlitz3.ab3@5912>     MOVEA.l (A2),A2
000240FC <AmiBlitz3.ab3@5913> BRA.w writelist__loop
000240FE <AmiBlitz3.ab3@5916> RTS
00024100 <AmiBlitz3.ab3@5919>   MOVEQ.l #$00,D3
00024104 <AmiBlitz3.ab3@5920>   MOVE.b $0(A2,D5.W),D3
00024106 <AmiBlitz3.ab3@5921>   ADDQ.w #1,D3
0002410A <AmiBlitz3.ab3@5922>   BCLR #$0,D3                                              ;word align
0002410C <AmiBlitz3.ab3@5923>   MOVE.l (A2),-(A7)
00024110 <AmiBlitz3.ab3@5924>    BEQ.w writeitem__skip
00024114 <AmiBlitz3.ab3@5925>    BSR.w resoff
00024116 <AmiBlitz3.ab3@5926>   ADD.l D3,D6
00024118 <AmiBlitz3.ab3@5927>   MOVE.l D6,(A2)
0002411A <AmiBlitz3.ab3@5928>   SUB.l D3,D6
0002411C <AmiBlitz3.ab3@5931>    ADD.l D3,D6
0002411E <AmiBlitz3.ab3@5932>   MOVE.l A2,D2
00024120 <AmiBlitz3.ab3@5933>   MOVE.l D7,D1
00024126 <AmiBlitz3.ab3@5934>   MOVEA.l _dosbase,A6
0002412A <AmiBlitz3.ab3@5935>    JSR _Write(A6)
0002412C <AmiBlitz3.ab3@5936>   MOVE.l (A7)+,(A2)
0002412E <AmiBlitz3.ab3@5937> RTS
00024130 <AmiBlitz3.ab3@5940>   MOVE.l D6,D2
00024134 <AmiBlitz3.ab3@5941> BRA.w addhunkoffset
00024138 <AmiBlitz3.ab3@5945>     CMPA.w #$0,A2
0002413C <AmiBlitz3.ab3@5946>      BEQ.w writeoffs__done
00024142 <AmiBlitz3.ab3@5947>     MOVEA.l newtypebase,A1
00024144 <AmiBlitz3.ab3@5948>     MOVEQ.l #$00,D1
00024148 <AmiBlitz3.ab3@5951>       CMPA.w #$0,A1
0002414C <AmiBlitz3.ab3@5952>       BEQ.w writeoffs__found
00024150 <AmiBlitz3.ab3@5953>       CMPA.l $A(A2),A1
00024154 <AmiBlitz3.ab3@5954>        BEQ.w writeoffs__found
00024156 <AmiBlitz3.ab3@5955>       ADDQ.w #1,D1
00024158 <AmiBlitz3.ab3@5956>       MOVEA.l (A1),A1
0002415C <AmiBlitz3.ab3@5957> BRA.w writeoffs__loop2
00024160 <AmiBlitz3.ab3@5960>     MOVE.w $A(A2),-(A7)
00024164 <AmiBlitz3.ab3@5961>     MOVE.w D1,$A(A2)
00024168 <AmiBlitz3.ab3@5962>      BSR.w writeitem
0002416C <AmiBlitz3.ab3@5963>     MOVE.w (A7)+,$A(A2)
0002416E <AmiBlitz3.ab3@5964>     MOVEA.l (A2),A2
00024172 <AmiBlitz3.ab3@5965> BRA.w writeoffs
00024174 <AmiBlitz3.ab3@5968> RTS
00024176 <AmiBlitz3.ab3@5972>   MOVEQ.l #$00,D0
0002417A <AmiBlitz3.ab3@5975>   CMPA.w #$0,A2
0002417E <AmiBlitz3.ab3@5976>    BEQ.w countem__done
00024180 <AmiBlitz3.ab3@5977>   ADDQ.w #1,D0
00024182 <AmiBlitz3.ab3@5978>   MOVEA.l (A2),A2
00024186 <AmiBlitz3.ab3@5979> BRA.w countem__loop
0002418C <AmiBlitz3.ab3@5982>   MOVE.w D0,temp1
0002418E <AmiBlitz3.ab3@5983>   MOVE.l D7,D1
00024194 <AmiBlitz3.ab3@5984>   MOVE.l #temp1,D2
00024196 <AmiBlitz3.ab3@5985>   MOVEQ.l #$02,D3
00024198 <AmiBlitz3.ab3@5986>   ADDQ.l #2,D6
0002419E <AmiBlitz3.ab3@5987>   MOVEA.l _dosbase,A6
000241A2 <AmiBlitz3.ab3@5988> JMP _Write(A6)
000241A8 <AmiBlitz3.ab3@5992>    TST.b resdisable
000241AC <AmiBlitz3.ab3@5993>    BEQ resmacs__l1
000241B2 <AmiBlitz3.ab3@5994>    MOVE.l currentmacroaddr,a3
000241B8 <AmiBlitz3.ab3@5995>    CMP.l #0,a3
000241BC <AmiBlitz3.ab3@5996>    BEQ resmacs__l1
000241BE <AmiBlitz3.ab3@5997>    MOVE.l (a3),a3
000241C2 <AmiBlitz3.ab3@5998> BRA resmacs__l2
000241C8 <AmiBlitz3.ab3@6001>   MOVEA.l macrobase,A3                                     ;??begin org code??
000241CA <AmiBlitz3.ab3@6004>   MOVEA.l A3,A2
000241CE <AmiBlitz3.ab3@6005>   BSR.w countem
000241D2 <AmiBlitz3.ab3@6008>    CMPA.w #$0,A3
000241D6 <AmiBlitz3.ab3@6009>    BEQ.w resmacs__done
000241D8 <AmiBlitz3.ab3@6010>   MOVE.l D6,D5
000241DA <AmiBlitz3.ab3@6011>   MOVE.l (A3),-(A7)
000241DE <AmiBlitz3.ab3@6012>   MOVE.l $4(A3),-(A7)
000241E0 <AmiBlitz3.ab3@6013>   MOVEQ.l #$00,D3
000241E4 <AmiBlitz3.ab3@6014>   MOVE.b $C(A3),D3
000241E6 <AmiBlitz3.ab3@6015>   ADDQ.w #1,D3
000241EA <AmiBlitz3.ab3@6016>   BCLR #$0,D3
000241EC <AmiBlitz3.ab3@6017>   ADD.l D3,D6                                              ;add len of struct
000241F0 <AmiBlitz3.ab3@6018>   TST.w $8(A3)
000241F4 <AmiBlitz3.ab3@6019>    BEQ.w resmacs__notext
000241F8 <AmiBlitz3.ab3@6020>   MOVE.l D6,$4(A3)
000241FA <AmiBlitz3.ab3@6021>   MOVE.l D5,D2
000241FC <AmiBlitz3.ab3@6022>   ADDQ.l #4,D2
00024200 <AmiBlitz3.ab3@6023>    BSR.w addhunkoffset
00024202 <AmiBlitz3.ab3@6026>   MOVEQ.l #$00,D4
00024206 <AmiBlitz3.ab3@6027>   MOVE.w $8(A3),D4
00024208 <AmiBlitz3.ab3@6028>   ADDQ.w #1,D4
0002420C <AmiBlitz3.ab3@6029>   BCLR #$0,D4
0002420E <AmiBlitz3.ab3@6030>   ADD.l D4,D6
00024210 <AmiBlitz3.ab3@6031>   TST.l (A3)
00024214 <AmiBlitz3.ab3@6032>    BEQ.w resmacs__nomore
00024216 <AmiBlitz3.ab3@6033>   MOVE.l D6,(A3)
00024218 <AmiBlitz3.ab3@6034>   MOVE.l D5,D2
0002421C <AmiBlitz3.ab3@6035>    BSR.w addhunkoffset
0002421E <AmiBlitz3.ab3@6038>   MOVE.l A3,D2
00024220 <AmiBlitz3.ab3@6039>   MOVE.l D7,D1
00024226 <AmiBlitz3.ab3@6041>    MOVEA.l _dosbase,A6
0002422A <AmiBlitz3.ab3@6042>    JSR _Write(a6)
0002422C <AmiBlitz3.ab3@6043>   TST.l D4
00024230 <AmiBlitz3.ab3@6044>    BEQ.w resmacs__skip
00024232 <AmiBlitz3.ab3@6045>   MOVE.l (A7),D2
00024234 <AmiBlitz3.ab3@6046>   MOVE.l D4,D3
00024236 <AmiBlitz3.ab3@6047>   MOVE.l D7,D1
0002423C <AmiBlitz3.ab3@6049>     MOVEA.l _dosbase,A6
00024240 <AmiBlitz3.ab3@6050>    JSR _Write(A6)
00024244 <AmiBlitz3.ab3@6053>   MOVE.l (A7)+,$4(A3)
00024246 <AmiBlitz3.ab3@6054>   MOVE.l (A7)+,(A3)
00024248 <AmiBlitz3.ab3@6055>   MOVEA.l (A3),A3
0002424C <AmiBlitz3.ab3@6056> BRA.w resmacs__loop
0002424E <AmiBlitz3.ab3@6059> RTS
00024254 <AmiBlitz3.ab3@6063>   TST.b resdisable
00024258 <AmiBlitz3.ab3@6064>   BEQ restypes__l1
0002425E <AmiBlitz3.ab3@6065>   MOVE.l lastrestype,a3
00024264 <AmiBlitz3.ab3@6066>   CMP.l #0,a3
00024268 <AmiBlitz3.ab3@6067>   BEQ restypes__l1
0002426A <AmiBlitz3.ab3@6068>   MOVE.l (a3),a3
0002426E <AmiBlitz3.ab3@6069> BRA restypes__l2
00024274 <AmiBlitz3.ab3@6072>   MOVEA.l newtype_string,A3
00024276 <AmiBlitz3.ab3@6075>   MOVEA.l A3,A2
0002427A <AmiBlitz3.ab3@6076>    BSR.w countem
0002427E <AmiBlitz3.ab3@6079>    CMPA.w #$0,A3
00024282 <AmiBlitz3.ab3@6080>    BEQ.w restypes__done
00024284 <AmiBlitz3.ab3@6081>   MOVE.l D6,-(A7)
00024288 <AmiBlitz3.ab3@6082>   MOVEA.l $4(A3),A2
0002428A <AmiBlitz3.ab3@6083>   MOVEQ.l #$0E,D5
0002428E <AmiBlitz3.ab3@6084>    BSR.w writeoffs
00024290 <AmiBlitz3.ab3@6085>   MOVE.l (A7)+,D0
00024294 <AmiBlitz3.ab3@6086>   MOVE.l $4(A3),-(A7)
00024298 <AmiBlitz3.ab3@6087>   MOVE.l D0,$4(A3)
0002429A <AmiBlitz3.ab3@6088>   MOVE.l D6,D2
0002429C <AmiBlitz3.ab3@6089>   ADDQ.l #4,D2
000242A0 <AmiBlitz3.ab3@6090>    BSR.w addhunkoffset
000242A2 <AmiBlitz3.ab3@6091>   MOVEQ.l #$00,D3
000242A6 <AmiBlitz3.ab3@6092>   MOVE.b $A(A3),D3
000242A8 <AmiBlitz3.ab3@6093>   ADDQ.w #1,D3
000242AC <AmiBlitz3.ab3@6094>   BCLR #$0,D3
000242AE <AmiBlitz3.ab3@6095>   ADD.l D3,D6
000242B0 <AmiBlitz3.ab3@6096>   MOVE.l A3,D2
000242B2 <AmiBlitz3.ab3@6097>   MOVE.l D7,D1
000242B8 <AmiBlitz3.ab3@6099>     MOVEA.l _dosbase,A6
000242BC <AmiBlitz3.ab3@6100>     JSR _Write(A6)
000242C0 <AmiBlitz3.ab3@6101>   MOVE.l (A7)+,$4(A3)
000242C2 <AmiBlitz3.ab3@6102>   MOVEA.l (A3),A3
000242C6 <AmiBlitz3.ab3@6103> BRA.w restypes__loop
000242C8 <AmiBlitz3.ab3@6106> RTS
000242CE <AmiBlitz3.ab3@6110>    TST.b resdisable
000242D2 <AmiBlitz3.ab3@6111>    BEQ resconsts__l1
000242D8 <AmiBlitz3.ab3@6112>    MOVE.l currentlabeladdr,a2
000242DE <AmiBlitz3.ab3@6113>    CMP.l #0,a2
000242E2 <AmiBlitz3.ab3@6114>    BEQ resconsts__l1
000242E4 <AmiBlitz3.ab3@6115>    MOVE.l (a2),a2
000242E8 <AmiBlitz3.ab3@6116> BRA resconsts__l2
000242EE <AmiBlitz3.ab3@6119>    MOVEA.l labelbase,A2
000242F0 <AmiBlitz3.ab3@6122>    MOVEQ.l #$00,D0
000242F4 <AmiBlitz3.ab3@6125>    CMPA.w #$0,A2
000242F8 <AmiBlitz3.ab3@6126>    BEQ.w resconsts__done
00024300 <AmiBlitz3.ab3@6127>   CMPI.l #$1,$4(A2)
00024304 <AmiBlitz3.ab3@6128>    BNE.w resconsts__next
00024306 <AmiBlitz3.ab3@6129>   ADDQ.w #1,D0
00024308 <AmiBlitz3.ab3@6132>   MOVEA.l (A2),A2
0002430C <AmiBlitz3.ab3@6133> BRA.w resconsts__loop
00024312 <AmiBlitz3.ab3@6136>   MOVE.w D0,temp1
00024314 <AmiBlitz3.ab3@6137>   MOVE.l D7,D1
0002431A <AmiBlitz3.ab3@6138>   MOVE.l #temp1,D2
0002431C <AmiBlitz3.ab3@6139>   MOVEQ.l #$02,D3
0002431E <AmiBlitz3.ab3@6140>   ADDQ.l #2,D6
00024324 <AmiBlitz3.ab3@6142>     MOVEA.l _dosbase,A6
00024328 <AmiBlitz3.ab3@6143>     JSR _Write(A6)
0002432E <AmiBlitz3.ab3@6144>    TST.b resdisable
00024332 <AmiBlitz3.ab3@6145>    BEQ resconsts__done_l1
00024338 <AmiBlitz3.ab3@6146>    MOVE.l currentlabeladdr,a2
0002433E <AmiBlitz3.ab3@6147>    CMP.l #0,a2
00024342 <AmiBlitz3.ab3@6148>    BEQ resconsts__done_l1
00024344 <AmiBlitz3.ab3@6149>    MOVE.l (a2),a2
00024348 <AmiBlitz3.ab3@6150> BRA resconsts__loop2
0002434E <AmiBlitz3.ab3@6153>    MOVEA.l labelbase,A2                                    ;write resident labels
00024352 <AmiBlitz3.ab3@6156>    CMPA.w #$0,A2
00024356 <AmiBlitz3.ab3@6157>    BEQ.w resconsts__done2
0002435E <AmiBlitz3.ab3@6158>   CMPI.l #$1,$4(A2)
00024362 <AmiBlitz3.ab3@6159>    BNE.w resconsts__next2
00024364 <AmiBlitz3.ab3@6160>    MOVEQ.l #$00,D3
00024368 <AmiBlitz3.ab3@6161>   MOVE.b $12(A2),D3                                        ;length
0002436A <AmiBlitz3.ab3@6162>   ADDQ.w #1,D3
0002436E <AmiBlitz3.ab3@6163>   BCLR #$0,D3
00024370 <AmiBlitz3.ab3@6164>   MOVE.l D6,D2
00024372 <AmiBlitz3.ab3@6165>   ADD.l D3,D6
00024374 <AmiBlitz3.ab3@6168>   MOVE.l (A2),-(A7)
00024376 <AmiBlitz3.ab3@6169>   TST.l (A2)
0002437A <AmiBlitz3.ab3@6170>    BEQ.w resconsts__nonext
0002437C <AmiBlitz3.ab3@6171>   MOVE.l D6,(A2)
00024380 <AmiBlitz3.ab3@6172>    BSR.w addhunkoffset
00024382 <AmiBlitz3.ab3@6175>   MOVE.l A2,D2
00024384 <AmiBlitz3.ab3@6176>   MOVE.l D7,D1
0002438A <AmiBlitz3.ab3@6178>     MOVEA.l _dosbase,A6
0002438E <AmiBlitz3.ab3@6179>     JSR _Write(A6)
00024390 <AmiBlitz3.ab3@6180>   MOVE.l (A7)+,(A2)
00024392 <AmiBlitz3.ab3@6183>   MOVEA.l (A2),A2
00024396 <AmiBlitz3.ab3@6184> BRA.w resconsts__loop2
00024398 <AmiBlitz3.ab3@6187> RTS
000243C2 <AmiBlitz3.ab3@6191>    !basic
000243C8 <AmiBlitz3.ab3@6192>     MOVE.l ptr_resfile,d0
000243D8 <AmiBlitz3.ab3@6193>     resfileP.l = Peek.l(?ptr_resfile)
000243E2 <AmiBlitz3.ab3@6194>     If resfileP
0002440A <AmiBlitz3.ab3@6195>       resfile$ = Peek.s(resfileP)
00024456 <AmiBlitz3.ab3@6196>       tests.b = Instr(resfile$,"/")
000244A2 <AmiBlitz3.ab3@6197>       testc.b = Instr(resfile$,":")
000244C4 <AmiBlitz3.ab3@6198>       If tests=0 AND testc=0
00024544 <AmiBlitz3.ab3@6199>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
00024556 <AmiBlitz3.ab3@6200>         Poke.l ?ptr_resfile,&resfile$
0002455C <AmiBlitz3.ab3@6202>     Else
00024596 <AmiBlitz3.ab3@6203>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
000245B4 <AmiBlitz3.ab3@6205>    !asm
000245B6 <AmiBlitz3.ab3@6206> RTS
000245BC <AmiBlitz3.ab3@6210> 
000245C2 <AmiBlitz3.ab3@6211>   MOVE.l A7,errstack
000245CC <AmiBlitz3.ab3@6214>   MOVE.l #next_resentry,errcont
000245D4 <AmiBlitz3.ab3@6215>   MOVE.w #$FFFF,ezerr
000245D8 <AmiBlitz3.ab3@6216>   BSR.w Aclearallvars
000245DC <AmiBlitz3.ab3@6217>   BSR.w free_residents
000245E2 <AmiBlitz3.ab3@6219>   LEA residents_table,A5
000245E4 <AmiBlitz3.ab3@6220>   MOVEQ.l #$07,D6
000245E6 <AmiBlitz3.ab3@6223>     TST.b (A5)
000245EA <AmiBlitz3.ab3@6224>     BEQ.w next_resentry
000245F0 <AmiBlitz3.ab3@6225>     MOVE.l A5,ptr_resfile
000245F4 <AmiBlitz3.ab3@6226>     BSR check_residentpath
000245FA <AmiBlitz3.ab3@6227>     MOVE.l ptr_resfile,d1
00024600 <AmiBlitz3.ab3@6228>     MOVEA.l _dosbase,A6
00024604 <AmiBlitz3.ab3@6229>     JSR _LoadSeg(A6)
00024608 <AmiBlitz3.ab3@6230>     MOVE.l D0,$40(A5)
0002460C <AmiBlitz3.ab3@6231>     BNE.w reloadresident__yeah
00024610 <AmiBlitz3.ab3@6232>     BSR.w reserr
00024612 <AmiBlitz3.ab3@6235>     MOVEA.l D0,A3
00024614 <AmiBlitz3.ab3@6236>     ADDA.l A3,A3
00024616 <AmiBlitz3.ab3@6237>     ADDA.l A3,A3
00024618 <AmiBlitz3.ab3@6238>     ADDQ.w #4,A3                                           ;start of res
0002461C <AmiBlitz3.ab3@6239>     BSR.w JL_0_5A9E
00024620 <AmiBlitz3.ab3@6240>     BSR.w JL_0_5A62                                        ;add macros to list
00024624 <AmiBlitz3.ab3@6241>     BSR.w JL_0_5A32                                        ;read labels
00024628 <AmiBlitz3.ab3@6244>     LEA ResidentEntryStep(A5),A5       ;$44
0002462C <AmiBlitz3.ab3@6245>   DBF D6,reloadresident__loop
00024636 <AmiBlitz3.ab3@6250>   MOVE.l #free_residents,errcont
0002463C <AmiBlitz3.ab3@6252>   MOVEA.l newtype_string,A3
0002463E <AmiBlitz3.ab3@6253>   MOVEQ.l #$0B,D7
00024642 <AmiBlitz3.ab3@6254>   BSR.w checkclash
00024648 <AmiBlitz3.ab3@6256>   MOVEA.l macrobase,A3
0002464A <AmiBlitz3.ab3@6257>   MOVEQ.l #$d,D7
0002464E <AmiBlitz3.ab3@6258>   BSR.w checkclash
00024654 <AmiBlitz3.ab3@6260>   MOVEA.l firstconst,A3
00024656 <AmiBlitz3.ab3@6261>   MOVEQ.l #$19,D7
0002465A <AmiBlitz3.ab3@6262>   BSR.w checkclash
0002465C <AmiBlitz3.ab3@6265> RTS
0002465E <AmiBlitz3.ab3@6269>   MOVEA.l A3,A4
00024662 <AmiBlitz3.ab3@6272>     CMPA.w #$0,A4
00024666 <AmiBlitz3.ab3@6273>     BEQ.w checkclash__done
0002466C <AmiBlitz3.ab3@6275>     LEA ptr_parameterstore,A0
00024670 <AmiBlitz3.ab3@6276>     LEA $0(A4,D7.W),A1
00024672 <AmiBlitz3.ab3@6277>     MOVEQ.l #-$01,D2
00024674 <AmiBlitz3.ab3@6280>       ADDQ.w #1,D2
00024676 <AmiBlitz3.ab3@6281>       MOVE.b (A1)+,(A0)+
0002467A <AmiBlitz3.ab3@6282>     BNE.w checkclash__loop2
0002467C <AmiBlitz3.ab3@6283>     MOVEA.l A3,A2
00024680 <AmiBlitz3.ab3@6286>     BSR.w findlab
00024684 <AmiBlitz3.ab3@6287>     BNE.w checkclash__next                                  ;not found
00024686 <AmiBlitz3.ab3@6288>     CMPA.l A2,A4
0002468A <AmiBlitz3.ab3@6289>     BEQ.w checkclash__l1
0002468C <AmiBlitz3.ab3@6290>     MOVE.l a1,a5
00024690 <AmiBlitz3.ab3@6291> BRA clasherr
00024694 <AmiBlitz3.ab3@6294> BRA.w checkclash__more
00024696 <AmiBlitz3.ab3@6297>     MOVEA.l (A4),A4
0002469A <AmiBlitz3.ab3@6298> BRA.w checkclash__loop
0002469C <AmiBlitz3.ab3@6301> RTS
000246A2 <AmiBlitz3.ab3@6305>   MOVEA.l _dosbase,A6
000246A8 <AmiBlitz3.ab3@6307>   LEA newtype_string,A0
000246AE <AmiBlitz3.ab3@6308>   MOVE.l A0,lastrestype
000246B0 <AmiBlitz3.ab3@6309>   CLR.l (A0)
000246B6 <AmiBlitz3.ab3@6311>   LEA macrobase,A0
000246BC <AmiBlitz3.ab3@6312>   MOVE.l A0,currentmacroaddr
000246BE <AmiBlitz3.ab3@6313>   CLR.l (A0)
000246C4 <AmiBlitz3.ab3@6315>   LEA labelbase,A0
000246CA <AmiBlitz3.ab3@6316>   MOVE.l A0,currentlabeladdr
000246CC <AmiBlitz3.ab3@6317>   CLR.l (A0)
000246D2 <AmiBlitz3.ab3@6318>   CLR.w rescnt
0002470A <AmiBlitz3.ab3@6322>   !ComData_SetB{comByte_DebugMode,debugmode}
00024710 <AmiBlitz3.ab3@6325>   LEA residents_table,A2
00024712 <AmiBlitz3.ab3@6326>   MOVEQ.l #$07,D2
00024716 <AmiBlitz3.ab3@6329>      MOVE.l $40(A2),D1
0002471A <AmiBlitz3.ab3@6330>      BEQ.w free_residents__next
0002471E <AmiBlitz3.ab3@6331>       CLR.l $40(A2)
00024724 <AmiBlitz3.ab3@6332>       MOVEA.l _dosbase,A6
00024728 <AmiBlitz3.ab3@6333>       JSR _UnLoadSeg(A6)
0002472C <AmiBlitz3.ab3@6336>      LEA ResidentEntryStep(A2),A2   ; $44
00024730 <AmiBlitz3.ab3@6337>    DBF D2,free_residents__loop
00024732 <AmiBlitz3.ab3@6339> RTS
00024734 <AmiBlitz3.ab3@6343>   MOVE.w (A3)+,D1
00024738 <AmiBlitz3.ab3@6344>   BEQ.w JL_0_5A60
0002473E <AmiBlitz3.ab3@6345>   MOVEA.l currentlabeladdr,A2
00024740 <AmiBlitz3.ab3@6346>   MOVE.l A3,(A2)
00024742 <AmiBlitz3.ab3@6347>   SUBQ.w #1,D1
00024744 <AmiBlitz3.ab3@6350>     MOVEA.l A3,A2
00024746 <AmiBlitz3.ab3@6351>     MOVEA.l (A3),A3
0002474A <AmiBlitz3.ab3@6352>   DBF D1,JL_0_5A42
0002474C <AmiBlitz3.ab3@6354>   CLR.l (a2)                                               ;bugfix for object
00024752 <AmiBlitz3.ab3@6355>   MOVE.l A2,currentlabeladdr
00024754 <AmiBlitz3.ab3@6356>   MOVEA.l A2,A3
00024756 <AmiBlitz3.ab3@6357>   MOVEQ.l #$00,D0
0002475A <AmiBlitz3.ab3@6358>   MOVE.b $12(A3),D0
0002475C <AmiBlitz3.ab3@6359>   ADDQ.w #1,D0
00024760 <AmiBlitz3.ab3@6360>   BCLR #$0,D0
00024762 <AmiBlitz3.ab3@6361>   ADDA.w D0,A3
00024764 <AmiBlitz3.ab3@6364> RTS
00024766 <AmiBlitz3.ab3@6368>   MOVE.w (A3)+,D1
0002476A <AmiBlitz3.ab3@6369>   BEQ.w JL_0_5A9C
00024770 <AmiBlitz3.ab3@6371>   MOVEA.l currentmacroaddr,A2
00024772 <AmiBlitz3.ab3@6372>   MOVE.l A3,(A2)
00024774 <AmiBlitz3.ab3@6373>   SUBQ.w #1,D1
00024776 <AmiBlitz3.ab3@6376>     MOVEA.l A3,A2
00024778 <AmiBlitz3.ab3@6377>     MOVEA.l (A3),A3
0002477C <AmiBlitz3.ab3@6378>   DBF D1,JL_0_5A72
00024782 <AmiBlitz3.ab3@6380>   MOVE.l A2,currentmacroaddr
00024784 <AmiBlitz3.ab3@6381>   MOVEA.l A2,A3
00024786 <AmiBlitz3.ab3@6382>   MOVEQ.l #$00,D0
0002478A <AmiBlitz3.ab3@6383>   MOVE.b $C(A3),D0
0002478C <AmiBlitz3.ab3@6384>   ADDQ.w #1,D0
00024790 <AmiBlitz3.ab3@6385>   BCLR #$0,D0
00024794 <AmiBlitz3.ab3@6386>   MOVE.w $8(A3),D1
00024796 <AmiBlitz3.ab3@6387>   ADDQ.w #1,D1
0002479A <AmiBlitz3.ab3@6388>   BCLR #$0,D1
0002479C <AmiBlitz3.ab3@6389>   ADDA.w D0,A3
0002479E <AmiBlitz3.ab3@6390>   ADDA.w D1,A3
000247A0 <AmiBlitz3.ab3@6393> RTS
000247A2 <AmiBlitz3.ab3@6397>   MOVE.w (A3)+,D1
000247A6 <AmiBlitz3.ab3@6398>   BEQ.w JL_0_5B38
000247A8 <AmiBlitz3.ab3@6399>   MOVE.w D1,-(A7)
000247AA <AmiBlitz3.ab3@6400>   SUBQ.w #1,D1
000247B0 <AmiBlitz3.ab3@6401>   MOVEA.l lastrestype,A2
000247B2 <AmiBlitz3.ab3@6402>   MOVE.l A2,-(A7)
000247B4 <AmiBlitz3.ab3@6405>       MOVE.l (A3),D0
000247B8 <AmiBlitz3.ab3@6406>       BEQ.w JL_0_5ABC
000247BA <AmiBlitz3.ab3@6407>       MOVEA.l D0,A3
000247BE <AmiBlitz3.ab3@6408> BRA.w JL_0_5AB0
000247C2 <AmiBlitz3.ab3@6411>       MOVE.b $E(A3),D0
000247C4 <AmiBlitz3.ab3@6412>       ADDQ.w #1,D0
000247C8 <AmiBlitz3.ab3@6413>       BCLR #$0,D0
000247CA <AmiBlitz3.ab3@6414>       ADDA.w D0,A3
000247CC <AmiBlitz3.ab3@6415>       MOVE.l A3,(A2)
000247CE <AmiBlitz3.ab3@6416>       MOVEA.l A3,A2
000247D0 <AmiBlitz3.ab3@6417>       MOVEQ.l #$00,D0
000247D4 <AmiBlitz3.ab3@6418>       MOVE.b $A(A3),D0
000247D6 <AmiBlitz3.ab3@6419>       ADDQ.w #1,D0
000247DA <AmiBlitz3.ab3@6420>       BCLR #$0,D0
000247DC <AmiBlitz3.ab3@6421>       ADDA.w D0,A3
000247E0 <AmiBlitz3.ab3@6422>   DBF D1,JL_0_5AB0
000247E2 <AmiBlitz3.ab3@6424>   MOVEA.l (A7)+,A0
000247E4 <AmiBlitz3.ab3@6425>   MOVEA.l (A0),A0
000247E8 <AmiBlitz3.ab3@6428>     CMPA.w #$0,A0
000247EC <AmiBlitz3.ab3@6429>     BEQ.w JL_0_5B2A
000247F0 <AmiBlitz3.ab3@6430>     MOVEA.l $4(A0),A1
000247F4 <AmiBlitz3.ab3@6433>     CMPA.w #$0,A1
000247F8 <AmiBlitz3.ab3@6434>     BEQ.w JL_0_5B24
000247FC <AmiBlitz3.ab3@6435>     MOVE.w $A(A1),D0
00024802 <AmiBlitz3.ab3@6436>     MOVEA.l newtypebase,A4
00024806 <AmiBlitz3.ab3@6437>     CMP.w #$7,D0
0002480A <AmiBlitz3.ab3@6438>     BCS.w JL_0_5B0E
00024810 <AmiBlitz3.ab3@6439>     SUB.w rescnt,D0
00024812 <AmiBlitz3.ab3@6442>     SUBQ.w #1,D0
00024816 <AmiBlitz3.ab3@6443>     BMI.w JL_0_5B1A
00024818 <AmiBlitz3.ab3@6446>        MOVEA.l (A4),A4
0002481C <AmiBlitz3.ab3@6447>   DBF D0,JL_0_5B14
00024820 <AmiBlitz3.ab3@6450>     MOVE.l A4,$A(A1)
00024822 <AmiBlitz3.ab3@6451>     MOVEA.l (A1),A1
00024826 <AmiBlitz3.ab3@6452> BRA.w JL_0_5AEE
00024828 <AmiBlitz3.ab3@6455>     MOVEA.l (A0),A0
0002482C <AmiBlitz3.ab3@6456> BRA.w JL_0_5AE2
0002482E <AmiBlitz3.ab3@6459>   MOVE.w (A7)+,D0
00024834 <AmiBlitz3.ab3@6460>   ADD.w D0,rescnt
0002483A <AmiBlitz3.ab3@6461>   MOVE.l A2,lastrestype
0002483C <AmiBlitz3.ab3@6464> RTS
00024842 <AmiBlitz3.ab3@6468>   LEA tokens,A0
00024846 <AmiBlitz3.ab3@6469>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
00024848 <AmiBlitz3.ab3@6472>     MOVEA.l (A0),A0
0002484C <AmiBlitz3.ab3@6473>   DBF D0,JL_0_5BD0
00024852 <AmiBlitz3.ab3@6475>   MOVEA.l #asmpnts,A1                                      ;create tokentab
00024856 <AmiBlitz3.ab3@6476>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
0002485A <AmiBlitz3.ab3@6479>       LEA $6(A0),A2
0002485C <AmiBlitz3.ab3@6482>         TST.b (A2)+
00024860 <AmiBlitz3.ab3@6483>       BNE.w JL_0_5BE4
00024862 <AmiBlitz3.ab3@6486>         TST.b (A2)+
00024866 <AmiBlitz3.ab3@6487>       BNE.w JL_0_5BEA
00024868 <AmiBlitz3.ab3@6489>       ADDQ.w #1,A2
0002486A <AmiBlitz3.ab3@6490>       EXG.l D1,A2
0002486E <AmiBlitz3.ab3@6491>       BCLR #$0,D1
00024870 <AmiBlitz3.ab3@6492>       EXG.l D1,A2
00024872 <AmiBlitz3.ab3@6493>       MOVE.l A2,(A1)+
00024874 <AmiBlitz3.ab3@6494>       MOVEA.l (A0),A0
00024878 <AmiBlitz3.ab3@6495>   DBF D0,JL_0_5BE0
0002487A <AmiBlitz3.ab3@6496> RTS
0002487E <AmiBlitz3.ab3@6500>   BSR.w asmconst
00024880 <AmiBlitz3.ab3@6501>   MOVEQ.l #$0B,D5
00024882 <AmiBlitz3.ab3@6502> RTS
00024884 <AmiBlitz3.ab3@6505> unmove:  Ds.w 1
00024888 <AmiBlitz3.ab3@6509>   MOVE.w #$48E7,D1
0002488C <AmiBlitz3.ab3@6510>   BSR.w writeword                                          ;movem.l -(a7)
00024890 <AmiBlitz3.ab3@6511>   MOVE.w #$000F,D2
00024892 <AmiBlitz3.ab3@6512>   SUB.w D4,D2
00024894 <AmiBlitz3.ab3@6513>   MOVEQ.l #-$01,D1
00024896 <AmiBlitz3.ab3@6514>   BCLR D2,D1
0002489A <AmiBlitz3.ab3@6515>   BSR.w writeword
0002489C <AmiBlitz3.ab3@6516>   MOVEQ.l #-$01,D1
0002489E <AmiBlitz3.ab3@6517>   BCLR D4,D1
000248A4 <AmiBlitz3.ab3@6518>   MOVE.w D1,unmove
000248A6 <AmiBlitz3.ab3@6519> RTS
000248AA <AmiBlitz3.ab3@6523>   MOVE.w #$4CDF,D1
000248AE <AmiBlitz3.ab3@6524>   BSR.w writeword
000248B2 <AmiBlitz3.ab3@6525>   MOVE.w unmove(PC),D1
000248B6 <AmiBlitz3.ab3@6526> BRA.w writeword
000248BA <AmiBlitz3.ab3@6539>   BSR.w JL_0_5D22
000248BE <AmiBlitz3.ab3@6540>   CMP.w #$2C,D0                                            ;#','
000248C2 <AmiBlitz3.ab3@6541>    BNE.w syntaxerr
000248C8 <AmiBlitz3.ab3@6542>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
000248CC <AmiBlitz3.ab3@6543>    BSR.w writelong
000248CE <AmiBlitz3.ab3@6544>   MOVE.w D4,D1
000248D2 <AmiBlitz3.ab3@6545>   ORI.w #$2F00,D1
000248D6 <AmiBlitz3.ab3@6546>    BSR.w writeword
000248DA <AmiBlitz3.ab3@6547>    BSR.w get1bytemain
000248DE <AmiBlitz3.ab3@6548>    BSR.w getparameter
000248E2 <AmiBlitz3.ab3@6549>    BSR.w JL_0_8E3C
000248E6 <AmiBlitz3.ab3@6550>    BSR.w calcvar
000248EA <AmiBlitz3.ab3@6551>    BTST #$E,D2
000248EE <AmiBlitz3.ab3@6552>    BEQ.w JL_0_5C80
000248F2 <AmiBlitz3.ab3@6555>    MOVE.b #$3,D2
000248F6 <AmiBlitz3.ab3@6556> BRA.w JL_0_5C8E
000248F8 <AmiBlitz3.ab3@6559>   TST.b D2
000248FC <AmiBlitz3.ab3@6560>    BEQ.w JL_0_5C78
00024900 <AmiBlitz3.ab3@6561>   CMP.b #$7,D2
00024904 <AmiBlitz3.ab3@6562>    BEQ.w JL_0_5C78
00024908 <AmiBlitz3.ab3@6565>   BTST #$F,D2
0002490C <AmiBlitz3.ab3@6566>    BNE.w JL_0_5CA4
00024910 <AmiBlitz3.ab3@6567>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
00024914 <AmiBlitz3.ab3@6568>    BSR.w writeword
00024916 <AmiBlitz3.ab3@6569>   MOVE.w D3,D1
0002491A <AmiBlitz3.ab3@6570>    BSR.w writeword
0002491E <AmiBlitz3.ab3@6573>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
00024922 <AmiBlitz3.ab3@6574>    BSR.w writeword
00024926 <AmiBlitz3.ab3@6575>   MOVE.w #$1480,D1
0002492A <AmiBlitz3.ab3@6576>   CMP.b #$1,D2
0002492E <AmiBlitz3.ab3@6577>    BEQ.w JL_0_5CC8
00024932 <AmiBlitz3.ab3@6578>   EORI.w #$3000,D1
00024936 <AmiBlitz3.ab3@6579>   CMP.b #$2,D2
0002493A <AmiBlitz3.ab3@6580>    BNE.w JL_0_5CC8
0002493E <AmiBlitz3.ab3@6581>   ORI.w #$1000,D1
00024942 <AmiBlitz3.ab3@6584>   BSR.w writeword
00024948 <AmiBlitz3.ab3@6585>   MOVE.l #$4CDF7FFF,D1
0002494C <AmiBlitz3.ab3@6586> BRA.w writelong
00024950 <AmiBlitz3.ab3@6590>   BSR.w JL_0_5D22
00024954 <AmiBlitz3.ab3@6591>   CMP.w #$2C,D0
00024958 <AmiBlitz3.ab3@6592>    BNE.w syntaxerr
0002495C <AmiBlitz3.ab3@6593>    BSR.w regmovems
0002495E <AmiBlitz3.ab3@6594>   MOVE.w D4,-(A7)
00024960 <AmiBlitz3.ab3@6595>   MOVEQ.l #$03,D2
00024964 <AmiBlitz3.ab3@6596>    BSR.w eval
00024966 <AmiBlitz3.ab3@6597>   MOVE.w (A7)+,D1
0002496A <AmiBlitz3.ab3@6598>    BEQ.w JL_0_5D1A
0002496E <AmiBlitz3.ab3@6599>   CMP.w #$8,D1
00024972 <AmiBlitz3.ab3@6600>    BCC.w JL_0_5D0C
00024974 <AmiBlitz3.ab3@6601>   LSL.w #8,D1
00024976 <AmiBlitz3.ab3@6602>   LSL.w #1,D1
0002497A <AmiBlitz3.ab3@6603>   ORI.w #$2000,D1
0002497E <AmiBlitz3.ab3@6604>    BSR.w writeword
00024982 <AmiBlitz3.ab3@6605> BRA.w JL_0_5D1A
00024984 <AmiBlitz3.ab3@6608>   SUBQ.w #8,D1
00024986 <AmiBlitz3.ab3@6609>   LSL.w #8,D1
00024988 <AmiBlitz3.ab3@6610>   LSL.w #1,D1
0002498C <AmiBlitz3.ab3@6611>   ORI.w #$2040,D1
00024990 <AmiBlitz3.ab3@6612>   BSR.w writeword
00024994 <AmiBlitz3.ab3@6615> BRA.w dounmove
00024998 <AmiBlitz3.ab3@6619>   BSR.w get1bytemain
0002499C <AmiBlitz3.ab3@6622>   ORI.w #$20,D0
000249A0 <AmiBlitz3.ab3@6623>   CMP.w #$64,D0
000249A4 <AmiBlitz3.ab3@6624>    BEQ.w JL_0_5D4E
000249A8 <AmiBlitz3.ab3@6625>   CMP.w #$61,D0
000249AC <AmiBlitz3.ab3@6626>    BNE.w syntaxerr
000249B0 <AmiBlitz3.ab3@6627>    BSR.w JL_0_5D4E
000249B2 <AmiBlitz3.ab3@6628>   ADDQ.w #8,D4
000249B4 <AmiBlitz3.ab3@6629> RTS
000249E0 <AmiBlitz3.ab3@6633>   !fget                                                   ;bsr.w get1bytemain
000249E4 <AmiBlitz3.ab3@6635>   ORI.w #$20,D0
000249E8 <AmiBlitz3.ab3@6638>   CMP.w #$61,D0
000249EC <AmiBlitz3.ab3@6639>   BNE.w syntaxerr
00024A18 <AmiBlitz3.ab3@6642>   !fget                                                    ;bsr.w get1bytemain
00024A1C <AmiBlitz3.ab3@6643>   SUBI.w #$30,D0
00024A20 <AmiBlitz3.ab3@6644>    BMI.w syntaxerr
00024A24 <AmiBlitz3.ab3@6645>   CMP.w #$7,D0
00024A28 <AmiBlitz3.ab3@6646>    BHI.w syntaxerr
00024A2A <AmiBlitz3.ab3@6647>   MOVE.w D0,D4
00024A56 <AmiBlitz3.ab3@6648>   !fget
00024A58 <AmiBlitz3.ab3@6649> RTS                                                        ;bra.w get1bytemain
00024A5A <AmiBlitz3.ab3@6653>   ADDQ.w #8,D4
00024A5C <AmiBlitz3.ab3@6656>   MOVEQ.l #$00,D5
00024A60 <AmiBlitz3.ab3@6657>   SUBI.w #$30,D4
00024A64 <AmiBlitz3.ab3@6660>   CMP.w #$2D,D0
00024A68 <AmiBlitz3.ab3@6661>    BEQ.w JL_0_5D9E
00024A6C <AmiBlitz3.ab3@6662>   CMP.w #$2F,D0
00024A70 <AmiBlitz3.ab3@6663>    BEQ.w JL_0_5D8C
00024A74 <AmiBlitz3.ab3@6664> BRA.w syntaxerr
00024A76 <AmiBlitz3.ab3@6667>   BSET D4,D5
00024A78 <AmiBlitz3.ab3@6670>   MOVE.w D5,D4
00024A7A <AmiBlitz3.ab3@6671>   MOVEQ.l #$0F,D5
00024A7C <AmiBlitz3.ab3@6672> RTS
00024A7E <AmiBlitz3.ab3@6675>   BSET D4,D5
00024A82 <AmiBlitz3.ab3@6676>   BSR.w JL_0_5D1E
00024A94 <AmiBlitz3.ab3@6677>   !compare3                                                ;bsr.w JL_0_5FC0
00024A98 <AmiBlitz3.ab3@6678>   BNE.w JL_0_5D70
00024A9C <AmiBlitz3.ab3@6679> BRA.w JL_0_5D84
00024A9E <AmiBlitz3.ab3@6682>   MOVE.w D4,D1
00024AA2 <AmiBlitz3.ab3@6683>    BSR.w JL_0_5D1E
00024AA4 <AmiBlitz3.ab3@6684>   CMP.w D4,D1
00024AA8 <AmiBlitz3.ab3@6685>    BLS.w JL_0_5DAC
00024AAA <AmiBlitz3.ab3@6686>   EXG.l D4,D1
00024AAC <AmiBlitz3.ab3@6689>   BSET D1,D5
00024AAE <AmiBlitz3.ab3@6690>   ADDQ.w #1,D1
00024AB0 <AmiBlitz3.ab3@6691>   CMP.w D4,D1
00024AB4 <AmiBlitz3.ab3@6692>    BLS.w JL_0_5DAC
00024AC6 <AmiBlitz3.ab3@6693>   !compare3                                                ;bsr.w JL_0_5FC0
00024ACA <AmiBlitz3.ab3@6694>   BNE.w JL_0_5D70
00024ACE <AmiBlitz3.ab3@6695> BRA.w JL_0_5D86
00024AD0 <AmiBlitz3.ab3@6698>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024AFC <AmiBlitz3.ab3@6699>    !fget
00024B00 <AmiBlitz3.ab3@6700>   CMP.w #$23,D0
00024B04 <AmiBlitz3.ab3@6701>    BEQ.w getimm
00024B08 <AmiBlitz3.ab3@6702>   CMP.w #$28,D0
00024B0C <AmiBlitz3.ab3@6703>    BEQ.w JL_0_5DFE
00024B10 <AmiBlitz3.ab3@6704>   CMP.w #$2D,D0
00024B14 <AmiBlitz3.ab3@6705>    BNE.w JL_0_5E20
00024B40 <AmiBlitz3.ab3@6706>    !fget                                                   ;bsr.w get1bytemain       -(
00024B44 <AmiBlitz3.ab3@6707>   CMP.w #$28,D0
00024B48 <AmiBlitz3.ab3@6708>    BNE.w JL_0_5F4E
00024B4C <AmiBlitz3.ab3@6709>    BSR.w JL_0_5D3E
00024B50 <AmiBlitz3.ab3@6710>   CMP.w #$29,D0
00024B54 <AmiBlitz3.ab3@6711>    BNE.w syntaxerr
00024B56 <AmiBlitz3.ab3@6712>   MOVEQ.l #$04,D5
00024B82 <AmiBlitz3.ab3@6713>   !fget                                                    ;bsr.w get1bytemain
00024B84 <AmiBlitz3.ab3@6714> RTS
00024B88 <AmiBlitz3.ab3@6718>   BSR.w JL_0_5D3E
00024B8C <AmiBlitz3.ab3@6719>   CMP.w #$29,D0
00024B90 <AmiBlitz3.ab3@6720>    BNE.w syntaxerr
00024BBC <AmiBlitz3.ab3@6721>   !fget                                                    ;bsr.w get1bytemain
00024BC0 <AmiBlitz3.ab3@6722>   CMP.w #$2B,D0
00024BC4 <AmiBlitz3.ab3@6723>    BEQ.w JL_0_5E1A
00024BC6 <AmiBlitz3.ab3@6724>   MOVEQ.l #$02,D5
00024BC8 <AmiBlitz3.ab3@6725> RTS
00024BCA <AmiBlitz3.ab3@6729>   MOVEQ.l #$03,D5
00024BF6 <AmiBlitz3.ab3@6730>   !fget                                                    ;bra.w get1bytemain
00024BF8 <AmiBlitz3.ab3@6731> RTS
00024BFC <AmiBlitz3.ab3@6735>   ORI.w #$20,D0
00024BFE <AmiBlitz3.ab3@6736>   MOVE.w D0,D1                                            
00024C2A <AmiBlitz3.ab3@6737>    !fget                                                   ;bsr.w get1bytemain
00024C2E <AmiBlitz3.ab3@6738>   CMP.w #$64,D1
00024C32 <AmiBlitz3.ab3@6739>    BNE.w JL_0_5E6C
00024C36 <AmiBlitz3.ab3@6740>   CMP.w #$30,D0
00024C3A <AmiBlitz3.ab3@6741>    BCS.w JL_0_5EAE
00024C3E <AmiBlitz3.ab3@6742>   CMP.w #$37,D0
00024C42 <AmiBlitz3.ab3@6743>    BHI.w JL_0_5EAE
00024C44 <AmiBlitz3.ab3@6744>   MOVE.w D0,D4
00024C70 <AmiBlitz3.ab3@6745>    !fget                                                   ;bsr.w get1bytemain
00024C82 <AmiBlitz3.ab3@6746>    !compare3                                               ;bsr.w JL_0_5FC0
00024C86 <AmiBlitz3.ab3@6747>    BEQ.w JL_0_5E64
00024C8A <AmiBlitz3.ab3@6748>   CMP.w #$2D,D0
00024C8E <AmiBlitz3.ab3@6749>    BEQ.w JL_0_5D6A
00024C92 <AmiBlitz3.ab3@6750>   CMP.w #$2F,D0
00024C96 <AmiBlitz3.ab3@6751>    BEQ.w JL_0_5D6A
00024C9A <AmiBlitz3.ab3@6752> BRA.w JL_0_5EB8
00024C9C <AmiBlitz3.ab3@6755>   MOVEQ.l #$00,D5
00024CA0 <AmiBlitz3.ab3@6756>   SUBI.w #$30,D4
00024CA2 <AmiBlitz3.ab3@6757> RTS
00024CA6 <AmiBlitz3.ab3@6760>    CMP.w #$61,D1
00024CAA <AmiBlitz3.ab3@6761>    BNE.w JL_0_5EAE
00024CAE <AmiBlitz3.ab3@6762>   CMP.w #$30,D0
00024CB2 <AmiBlitz3.ab3@6763>    BCS.w JL_0_5EAE
00024CB6 <AmiBlitz3.ab3@6764>   CMP.w #$37,D0
00024CBA <AmiBlitz3.ab3@6765>    BHI.w JL_0_5EAE
00024CBC <AmiBlitz3.ab3@6766>   MOVE.w D0,D4
00024CE8 <AmiBlitz3.ab3@6767>    !fget                                                   ;bsr.w get1bytemain
00024CFA <AmiBlitz3.ab3@6768>    !compare3                                               ;bsr.w JL_0_5FC0
00024CFE <AmiBlitz3.ab3@6769>    BEQ.w JL_0_5EA6
00024D02 <AmiBlitz3.ab3@6770>   CMP.w #$2D,D0
00024D06 <AmiBlitz3.ab3@6771>    BEQ.w JL_0_5D68                                         ;movem
00024D0A <AmiBlitz3.ab3@6772>   CMP.w #$2F,D0
00024D0E <AmiBlitz3.ab3@6773>    BEQ.w JL_0_5D68
00024D12 <AmiBlitz3.ab3@6774> BRA.w JL_0_5EB8
00024D14 <AmiBlitz3.ab3@6777>   MOVEQ.l #1,d5
00024D18 <AmiBlitz3.ab3@6778>   SUBI.w #$30,D4
00024D1C <AmiBlitz3.ab3@6780> BRA 'l10
00024D1E <AmiBlitz3.ab3@6781>   ADDQ.w #8,d4
00024D20 <AmiBlitz3.ab3@6782>   MOVEQ #0,d5
00024D22 <AmiBlitz3.ab3@6783>   BSET d4,d5
00024D24 <AmiBlitz3.ab3@6784>   MOVE.w d5,d4
00024D26 <AmiBlitz3.ab3@6785>   MOVEQ.l #$0f,D5                                          ;01
00024D28 <AmiBlitz3.ab3@6788> RTS
00024D2C <AmiBlitz3.ab3@6792>   ORI.w #$20,D0
00024D2E <AmiBlitz3.ab3@6793>   MOVE.w D0,D4
00024D5A <AmiBlitz3.ab3@6794>    !fget                                                   ;bsr.w get1bytemain
00024D6C <AmiBlitz3.ab3@6797>   !compare3                                                ;bsr.w JL_0_5FC0
00024D70 <AmiBlitz3.ab3@6798>    BNE.w JL_0_5EF2
00024D74 <AmiBlitz3.ab3@6799>   CMP.w #$73,D1
00024D78 <AmiBlitz3.ab3@6800>    BNE.w JL_0_5EF2
00024D7C <AmiBlitz3.ab3@6801>   CMP.w #$70,D4
00024D80 <AmiBlitz3.ab3@6802>    BNE.w JL_0_5EDE
00024D92 <AmiBlitz3.ab3@6803>    !compare3                                               ;bsr.w JL_0_5FC0
00024D96 <AmiBlitz3.ab3@6804>    BNE.w JL_0_5F4E
00024D98 <AmiBlitz3.ab3@6805>   MOVEQ.l #$07,D4
00024D9A <AmiBlitz3.ab3@6806>   MOVEQ.l #$01,D5
00024D9C <AmiBlitz3.ab3@6807> RTS
00024DA0 <AmiBlitz3.ab3@6811>   CMP.w #$72,D4
00024DA4 <AmiBlitz3.ab3@6812>    BNE.w JL_0_5F4E
00024DB6 <AmiBlitz3.ab3@6813>    !compare3                                               ;bsr.w JL_0_5FC0
00024DBA <AmiBlitz3.ab3@6814>    BNE.w JL_0_5F4E
00024DBC <AmiBlitz3.ab3@6815>   MOVEQ.l #$0D,D5
00024DBE <AmiBlitz3.ab3@6816> RTS
00024DC2 <AmiBlitz3.ab3@6820>   ORI.w #$20,D0
00024DC6 <AmiBlitz3.ab3@6821>   CMP.w #$63,D1
00024DCA <AmiBlitz3.ab3@6822>    BNE.w JL_0_5F22
00024DCE <AmiBlitz3.ab3@6823>   CMP.w #$63,D4
00024DD2 <AmiBlitz3.ab3@6824>    BNE.w JL_0_5F4E
00024DD6 <AmiBlitz3.ab3@6825>   CMP.w #$72,D0
00024DDA <AmiBlitz3.ab3@6826>    BNE.w JL_0_5F4E
00024DDE <AmiBlitz3.ab3@6827>    BSR.w get1bytemain                                      ;??wy not !fget
00024DE2 <AmiBlitz3.ab3@6828>    BEQ.w JL_0_5F1E
00024DE6 <AmiBlitz3.ab3@6829>   CMP.w #$2C,D0
00024DEA <AmiBlitz3.ab3@6830>    BNE.w JL_0_5F4E
00024DEC <AmiBlitz3.ab3@6833>   MOVEQ.l #$0C,D5
00024DEE <AmiBlitz3.ab3@6834> RTS
00024DF2 <AmiBlitz3.ab3@6838>   CMP.w #$75,D1
00024DF6 <AmiBlitz3.ab3@6839>    BNE.w JL_0_5F4E
00024DFA <AmiBlitz3.ab3@6840>   CMP.w #$73,D4
00024DFE <AmiBlitz3.ab3@6841>    BNE.w JL_0_5F4E
00024E02 <AmiBlitz3.ab3@6842>   CMP.w #$70,D0
00024E06 <AmiBlitz3.ab3@6843>    BNE.w JL_0_5F4E
00024E0A <AmiBlitz3.ab3@6844>    BSR.w get1bytemain                                      ;??wy not !fget
00024E0E <AmiBlitz3.ab3@6845>    BEQ.w JL_0_5F4A
00024E12 <AmiBlitz3.ab3@6846>   CMP.w #$2C,D0
00024E16 <AmiBlitz3.ab3@6847>    BNE.w JL_0_5F4E
00024E18 <AmiBlitz3.ab3@6850>   MOVEQ.l #$0E,D5
00024E1A <AmiBlitz3.ab3@6851> RTS
00024E1C <AmiBlitz3.ab3@6855>   MOVEA.l A4,A5
00024E20 <AmiBlitz3.ab3@6856>    BSR.w asmconst
00024E32 <AmiBlitz3.ab3@6857>    !compare3                                               ;bsr.w JL_0_5FC0
00024E36 <AmiBlitz3.ab3@6858>    BEQ.w JL_0_5FB8
00024E3A <AmiBlitz3.ab3@6859>   CMP.w #$2E,D0
00024E3E <AmiBlitz3.ab3@6860>    BEQ.w JL_0_5FA0
00024E42 <AmiBlitz3.ab3@6861>   CMP.w #$28,D0
00024E46 <AmiBlitz3.ab3@6862>    BNE.w syntaxerr
00024E4A <AmiBlitz3.ab3@6863>    BSR.w get1bytemain                                      ;??wy not !fget
00024E4E <AmiBlitz3.ab3@6864>   ORI.w #$20,D0
00024E52 <AmiBlitz3.ab3@6865>   CMP.w #$70,D0
00024E56 <AmiBlitz3.ab3@6866>    BNE.w JL_0_5F98
00024E5A <AmiBlitz3.ab3@6867>    BSR.w get1bytemain                                      ;??wy not !fget
00024E5E <AmiBlitz3.ab3@6868>   ORI.w #$20,D0
00024E62 <AmiBlitz3.ab3@6869>   CMP.w #$63,D0
00024E66 <AmiBlitz3.ab3@6870>    BNE.w syntaxerr
00024E6A <AmiBlitz3.ab3@6871>    BSR.w get1bytemain                                      ;??wy not !fget
00024E6E <AmiBlitz3.ab3@6872>    BSR.w JL_0_5FD4
00024E70 <AmiBlitz3.ab3@6873>   ADDQ.w #4,D5
00024E72 <AmiBlitz3.ab3@6874> RTS
00024E76 <AmiBlitz3.ab3@6878>   BSR.w JL_0_5D46
00024E7A <AmiBlitz3.ab3@6879> BRA.w JL_0_5FD4
00024E7E <AmiBlitz3.ab3@6883>    BSR.w get1bytemain                                     ;??wy not !fget
00024E82 <AmiBlitz3.ab3@6884>   ORI.w #$20,D0
00024E86 <AmiBlitz3.ab3@6885>   CMP.w #$77,D0
00024E8A <AmiBlitz3.ab3@6886>    BEQ.w JL_0_5FBC
00024E8E <AmiBlitz3.ab3@6887>   CMP.w #$6C,D0
00024E92 <AmiBlitz3.ab3@6888>    BNE.w syntaxerr
00024E94 <AmiBlitz3.ab3@6891>   MOVEQ.l #$08,D5
00024E96 <AmiBlitz3.ab3@6892> RTS
00024E98 <AmiBlitz3.ab3@6896>   MOVEQ.l #$07,D5
00024E9A <AmiBlitz3.ab3@6897> RTS
00024E9C <AmiBlitz3.ab3@6901>   TST.w D0
00024EA0 <AmiBlitz3.ab3@6902>    BEQ.w JL_0_5FD2
00024EA4 <AmiBlitz3.ab3@6903>   CMP.w #$3A,D0
00024EA8 <AmiBlitz3.ab3@6904>    BEQ.w JL_0_5FD2
00024EAC <AmiBlitz3.ab3@6905>   CMP.w #$2C,D0
00024EAE <AmiBlitz3.ab3@6908> RTS
00024EB2 <AmiBlitz3.ab3@6912>   CMP.w #$2C,D0
00024EB6 <AmiBlitz3.ab3@6913>    BNE.w JL_0_6054
00024EBA <AmiBlitz3.ab3@6914>    BSR.w get1bytemain                                      ;??wy not !fget
00024EBE <AmiBlitz3.ab3@6915>   ORI.w #$20,D0
00024EC0 <AmiBlitz3.ab3@6916>   MOVEQ.l #$00,D1
00024EC4 <AmiBlitz3.ab3@6917>   CMP.w #$64,D0
00024EC8 <AmiBlitz3.ab3@6918>    BEQ.w JL_0_5FFA
00024ECC <AmiBlitz3.ab3@6919>   CMP.w #$61,D0
00024ED0 <AmiBlitz3.ab3@6920>    BNE.w syntaxerr
00024ED4 <AmiBlitz3.ab3@6921>   BSET #$F,D1
00024ED8 <AmiBlitz3.ab3@6924>    BSR.w get1bytemain                                      ;??wy not !fget
00024EDC <AmiBlitz3.ab3@6925>   SUBI.w #$30,D0
00024EE0 <AmiBlitz3.ab3@6926>    BMI.w syntaxerr
00024EE4 <AmiBlitz3.ab3@6927>   CMP.w #$7,D0
00024EE8 <AmiBlitz3.ab3@6928>    BHI.w syntaxerr
00024EEA <AmiBlitz3.ab3@6929>   LSL.w #8,D0
00024EEC <AmiBlitz3.ab3@6930>   LSL.w #4,D0
00024EEE <AmiBlitz3.ab3@6931>   OR.w D0,D1
00024EF2 <AmiBlitz3.ab3@6932>    BSR.w get1bytemain                                      ;??wy not !fget
00024EF6 <AmiBlitz3.ab3@6933>   CMP.w #$2E,D0
00024EFA <AmiBlitz3.ab3@6934>    BNE.w JL_0_6040
00024EFE <AmiBlitz3.ab3@6935>    BSR.w get1bytemain                                      ;??wy not !fget
00024F02 <AmiBlitz3.ab3@6936>   ORI.w #$20,D0
00024F06 <AmiBlitz3.ab3@6937>   CMP.w #$77,D0
00024F0A <AmiBlitz3.ab3@6938>    BEQ.w JL_0_603C
00024F0E <AmiBlitz3.ab3@6939>   CMP.w #$6C,D0
00024F12 <AmiBlitz3.ab3@6940>    BNE.w syntaxerr
00024F16 <AmiBlitz3.ab3@6941>   BSET #$B,D1
00024F1A <AmiBlitz3.ab3@6944>    BSR.w get1bytemain                                      ;??wy not !fget
00024F1E <AmiBlitz3.ab3@6947>    CMP.b #"*",d0                                           ;020 * Mode
00024F22 <AmiBlitz3.ab3@6948>             BNE 'l1
00024F26 <AmiBlitz3.ab3@6949>             BSR.w get1bytemain                             ;??wy not !fget
00024F2A <AmiBlitz3.ab3@6950>             CMP.b #"2",d0
00024F2E <AmiBlitz3.ab3@6951>             BNE 'l2
00024F32 <AmiBlitz3.ab3@6952>             OR.w #$200,d1
00024F36 <AmiBlitz3.ab3@6953> BRA 'l1b
00024F3A <AmiBlitz3.ab3@6956>             CMP.b #"4",d0
00024F3E <AmiBlitz3.ab3@6957>             BNE 'l3
00024F42 <AmiBlitz3.ab3@6958>             OR.w #$400,d1
00024F46 <AmiBlitz3.ab3@6959> BRA 'l1b
00024F4A <AmiBlitz3.ab3@6962>             CMP.b #"8",d0
00024F4E <AmiBlitz3.ab3@6963>             BNE syntaxerr
00024F52 <AmiBlitz3.ab3@6964>             OR.w #$600,d1
00024F56 <AmiBlitz3.ab3@6967>         BSR.w get1bytemain                                 ;??wy not !fget
00024F5A <AmiBlitz3.ab3@6970>   CMP.w #$29,D0
00024F5E <AmiBlitz3.ab3@6971>    BNE.w syntaxerr
00024F64 <AmiBlitz3.ab3@6972>   MOVE.w D1,extraword
00024F66 <AmiBlitz3.ab3@6973>   MOVEQ.l #$06,D5
00024F6A <AmiBlitz3.ab3@6974> BRA.w get1bytemain                                         ;??wy not !fget
00024F6E <AmiBlitz3.ab3@6978>   CMP.w #")",D0                                            ;")"
00024F72 <AmiBlitz3.ab3@6979>    BNE.w errorbracketmiss                                  ; was syntax error
00024F74 <AmiBlitz3.ab3@6980>   MOVEQ.l #$05,D5
00024F78 <AmiBlitz3.ab3@6981> BRA.w get1bytemain                                         ;??wy not !fget
00024F7E <AmiBlitz3.ab3@6988>   MOVEA.l asmbuff,A0
00024F84 <AmiBlitz3.ab3@6989>   MOVE.w ininclude,D1
00024F8A <AmiBlitz3.ab3@6990>   OR.w inmacro,D1
00024F8C <AmiBlitz3.ab3@6991>   MOVE.w D1,(A0)+                                          ;flag!
00024F90 <AmiBlitz3.ab3@6992>    BNE.w copyconst
00024F92 <AmiBlitz3.ab3@6993>   MOVE.l A5,-(A7)
00024F96 <AmiBlitz3.ab3@6994>    BSR.w copyconst
00024F9C <AmiBlitz3.ab3@6995>   MOVEA.l asmbuff,A0
00024FA0 <AmiBlitz3.ab3@6996>   CMP.w #$4,D1
00024FA4 <AmiBlitz3.ab3@6997>    BLS.w asmconst__leave
00024FAA <AmiBlitz3.ab3@6998>   TST.w lc
00024FAE <AmiBlitz3.ab3@6999>    BNE.w asmconst__leave
00024FB0 <AmiBlitz3.ab3@7000>   ADDQ.w #2,A0
00024FB2 <AmiBlitz3.ab3@7001>   MOVE.l (A7)+,(A0)+
00024FB4 <AmiBlitz3.ab3@7002>   CLR.b (A0)
00024FBC <AmiBlitz3.ab3@7003>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00024FBE <AmiBlitz3.ab3@7004> RTS
00024FC0 <AmiBlitz3.ab3@7008>   NOT.w (A0)
00024FC2 <AmiBlitz3.ab3@7009>   ADDQ.w #4,A7
00024FC4 <AmiBlitz3.ab3@7010> RTS
00024FC6 <AmiBlitz3.ab3@7013> lc:  Ds.w 1
00024FCC <AmiBlitz3.ab3@7017>   CLR.w lc
00024FCE <AmiBlitz3.ab3@7018>   MOVEQ.l #$00,D1
00024FD0 <AmiBlitz3.ab3@7021>    ADDQ.w #1,D1                                            ;label name
00024FFC <AmiBlitz3.ab3@7022>    !fget                                                   ;bsr.w get1bytemain
00025000 <AmiBlitz3.ab3@7023>    BEQ.w copyconst__done
00025004 <AmiBlitz3.ab3@7024>    CMP.w #$22,d0
00025008 <AmiBlitz3.ab3@7025>    BNE.s copyconst__loop_l10
0002500E <AmiBlitz3.ab3@7026>    NOT.w instringon
00025012 <AmiBlitz3.ab3@7029>    CMP.w #":",d0
00025016 <AmiBlitz3.ab3@7030>    BNE.s copyconst__loop_l11
0002501C <AmiBlitz3.ab3@7031>    TST.w instringon
00025020 <AmiBlitz3.ab3@7032>    BEQ copyconst__done
00025022 <AmiBlitz3.ab3@7035>   TST.w D0
00025026 <AmiBlitz3.ab3@7036>   BPL.w copyconst__notmi
00025028 <AmiBlitz3.ab3@7037>   MOVE.w D0,-(A7)
0002502A <AmiBlitz3.ab3@7038>   LSR.w #8,D0
0002502C <AmiBlitz3.ab3@7039>   MOVE.b D0,(A0)+
0002502E <AmiBlitz3.ab3@7040>   MOVE.w (A7)+,D0
00025030 <AmiBlitz3.ab3@7041>   MOVE.b D0,(A0)+
00025032 <AmiBlitz3.ab3@7042>   ADDQ.w #1,D1
00025036 <AmiBlitz3.ab3@7043> BRA.s copyconst__loop
0002503C <AmiBlitz3.ab3@7046>    TST.w instringon
00025040 <AmiBlitz3.ab3@7047>    BNE.w copyconst__putbyte
00025046 <AmiBlitz3.ab3@7048>    TST.b _dcb
0002504A <AmiBlitz3.ab3@7049>    BNE copyconst__notmi_l10
0002504E <AmiBlitz3.ab3@7050>    CMP.w #$28,D0
00025052 <AmiBlitz3.ab3@7051>    BEQ.w copyconst__done
00025056 <AmiBlitz3.ab3@7054>    CMP.w #$2C,D0
0002505A <AmiBlitz3.ab3@7055>    BEQ.w copyconst__done
0002505E <AmiBlitz3.ab3@7056>    CMP.b #"'",D0
00025062 <AmiBlitz3.ab3@7057>    BNE.w copyconst__putbyte
00025068 <AmiBlitz3.ab3@7058>    MOVE.w D0,lc                                     ;locallabels
0002506A <AmiBlitz3.ab3@7059>    MOVE.l A1,-(A7)
00025070 <AmiBlitz3.ab3@7060>    LEA lastgloballabel,A1
00025072 <AmiBlitz3.ab3@7061>    TST.b (A1)
00025076 <AmiBlitz3.ab3@7062>    BEQ.w nolocerr
00025078 <AmiBlitz3.ab3@7065>   ADDQ.w #1,D1
0002507A <AmiBlitz3.ab3@7066>   MOVE.b (A1)+,(A0)+
0002507E <AmiBlitz3.ab3@7067>    BNE.w copyconst__cloop
00025080 <AmiBlitz3.ab3@7068>   SUBQ.w #1,D1
00025082 <AmiBlitz3.ab3@7069>   SUBQ.w #1,A0
00025084 <AmiBlitz3.ab3@7070>   MOVEA.l (A7)+,A1
00025086 <AmiBlitz3.ab3@7073>   MOVE.b D0,(A0)+
0002508A <AmiBlitz3.ab3@7074> BRA.w copyconst__loop
0002508C <AmiBlitz3.ab3@7077>   CLR.b (A0)
00025092 <AmiBlitz3.ab3@7078>   MOVE.w D1,asmlen2
00025094 <AmiBlitz3.ab3@7079> RTS
0002509A <AmiBlitz3.ab3@7084>   CMP.l #$80ad,d0
0002509E <AmiBlitz3.ab3@7085>   BNE.s 'l12
000250A4 <AmiBlitz3.ab3@7086> JMP bssseg
000250AA <AmiBlitz3.ab3@7089>   CMP.l #$807f,d0
000250AE <AmiBlitz3.ab3@7090>     BNE.s 'l13
000250B4 <AmiBlitz3.ab3@7091> JMP chipseg
000250BA <AmiBlitz3.ab3@7094>   ADDQ.l #1,destpointer                                    ;even
000250C2 <AmiBlitz3.ab3@7095>   BCLR #$0,destpointer+3
000250C6 <AmiBlitz3.ab3@7096>   SUBI.w #$803C,D0
000250C8 <AmiBlitz3.ab3@7097>   LSL.w #2,D0
000250CE <AmiBlitz3.ab3@7098>   MOVEA.l #asmpnts,A0
000250D2 <AmiBlitz3.ab3@7099>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
000250D8 <AmiBlitz3.ab3@7100>   MOVE.w D0,temp1
000250DA <AmiBlitz3.ab3@7101>   MOVE.l A0,-(A7)
000250DC <AmiBlitz3.ab3@7102>   MOVEQ.l #$01,D1
00025108 <AmiBlitz3.ab3@7103>    !fget                                                   ;bsr.w get1bytemain
0002510C <AmiBlitz3.ab3@7104>   CMP.w #$2E,D0
00025110 <AmiBlitz3.ab3@7105>    BNE.w JL_0_6184
0002513C <AmiBlitz3.ab3@7106>   !fget                                                    ;bsr.w get1bytemain
00025140 <AmiBlitz3.ab3@7107>   ORI.w #$20,D0
00025144 <AmiBlitz3.ab3@7108>   CMP.w #$77,D0                                            ;long
00025148 <AmiBlitz3.ab3@7109>    BEQ.w JL_0_618A
0002514C <AmiBlitz3.ab3@7110>   CMP.w #$62,D0                                            ;byte
00025150 <AmiBlitz3.ab3@7111>    BEQ.w JL_0_617A
00025154 <AmiBlitz3.ab3@7112>   CMP.w #$6C,D0                                            ;word
00025158 <AmiBlitz3.ab3@7113>    BEQ.w JL_0_6196
0002515C <AmiBlitz3.ab3@7114>   CMP.w #"s",d0
00025160 <AmiBlitz3.ab3@7115>   BNE syntaxerr
00025164 <AmiBlitz3.ab3@7116> BRA.w JL_0_617A
00025166 <AmiBlitz3.ab3@7119>   MOVEQ.l #$00,D1
0002516A <AmiBlitz3.ab3@7120>   MOVE.w $8(A0),D0
0002516E <AmiBlitz3.ab3@7121> BRA.w JL_0_619E
00025170 <AmiBlitz3.ab3@7124>   MOVEQ.l #$04,D1
00025174 <AmiBlitz3.ab3@7125> BRA.w JL_0_61AE
00025176 <AmiBlitz3.ab3@7128>   MOVEQ.l #$04,D1
0002517A <AmiBlitz3.ab3@7129>   MOVE.w $8(A0),D0
0002517C <AmiBlitz3.ab3@7130>   LSR.w #4,D0
00025180 <AmiBlitz3.ab3@7131> BRA.w JL_0_619E
00025182 <AmiBlitz3.ab3@7134>   MOVEQ.l #$08,D1
00025186 <AmiBlitz3.ab3@7135>   MOVE.w $8(A0),D0
00025188 <AmiBlitz3.ab3@7136>   LSR.w #8,D0
0002518C <AmiBlitz3.ab3@7139>    ANDI.w #$F,D0
00025190 <AmiBlitz3.ab3@7140>   CMP.w #$F,D0
00025194 <AmiBlitz3.ab3@7141>    BNE.w 'cl60
0002519C <AmiBlitz3.ab3@7144>    CMP.l #"MULS",-6(a0)
000251A0 <AmiBlitz3.ab3@7145>    BNE 'c20
000251A6 <AmiBlitz3.ab3@7146>    MOVE.l #$4c000800,d1
000251AC <AmiBlitz3.ab3@7147> JMP do32
000251B4 <AmiBlitz3.ab3@7150>    CMP.l #"MULU",-6(a0)
000251B8 <AmiBlitz3.ab3@7151>    BNE 'c30
000251BE <AmiBlitz3.ab3@7152>    MOVE.l #$4c000000,d1
000251C4 <AmiBlitz3.ab3@7153> JMP do32
000251CC <AmiBlitz3.ab3@7156>    CMP.l #"DIVS",-6(a0)
000251D0 <AmiBlitz3.ab3@7157>    BNE 'c40
000251D6 <AmiBlitz3.ab3@7158>    MOVE.l #$4c400800,d1
000251DC <AmiBlitz3.ab3@7159> JMP do32
000251E4 <AmiBlitz3.ab3@7162>    CMP.l #"DIVU",-6(a0)
000251E8 <AmiBlitz3.ab3@7163>    BNE 'c50
000251EE <AmiBlitz3.ab3@7164>    MOVE.l #$4c400000,d1
000251F4 <AmiBlitz3.ab3@7165> JMP do32
000251F8 <AmiBlitz3.ab3@7168> BRA illsizeerr
00025224 <AmiBlitz3.ab3@7171>   !fget                                                    ;bsr.w get1bytemain
0002522A <AmiBlitz3.ab3@7174>   MOVE.w D1,asmsize
0002522C <AmiBlitz3.ab3@7175>   MOVEQ.l #-$01,D3
00025230 <AmiBlitz3.ab3@7176>    BSR.w reget
00025234 <AmiBlitz3.ab3@7177>    BEQ.w JL_0_6200
0002523E <AmiBlitz3.ab3@7178>   MOVE.l #ptr_parameterstore,asmbuff
00025248 <AmiBlitz3.ab3@7180>    MOVE.w oldqflag,instringon
0002524E <AmiBlitz3.ab3@7181>   MOVEA.l lastsourcepos,A5
00025252 <AmiBlitz3.ab3@7182>    BSR.w JL_0_5DC2
00025254 <AmiBlitz3.ab3@7183>   MOVE.l D4,D2                                             ;to src
00025256 <AmiBlitz3.ab3@7184>   MOVE.l D5,D3
00025260 <AmiBlitz3.ab3@7185>   MOVE.w asmlen2,asmlen
00025262 <AmiBlitz3.ab3@7186>   MOVEQ.l #-$01,D5
0002526C <AmiBlitz3.ab3@7187>   MOVE.w extraword,extraword2
00025270 <AmiBlitz3.ab3@7188>   CMP.w #$2C,D0                                            ;','
00025274 <AmiBlitz3.ab3@7189>    BNE.w JL_0_6200
0002527E <AmiBlitz3.ab3@7190>   MOVE.l #namebuff2,asmbuff
00025282 <AmiBlitz3.ab3@7191>    BSR.w JL_0_5DC2                                         ;dest
00025284 <AmiBlitz3.ab3@7194>   MOVEA.l (A7)+,A0
0002528A <AmiBlitz3.ab3@7195>   MOVEA.l destpointer,A1
0002528C <AmiBlitz3.ab3@7196>   MOVEA.l A1,A4
0002528E <AmiBlitz3.ab3@7197>   ADDQ.w #2,A1
00025290 <AmiBlitz3.ab3@7198>   MOVE.w (A0),D1
00025292 <AmiBlitz3.ab3@7199>   TST.w D3
00025296 <AmiBlitz3.ab3@7200>    BMI.w JL_0_639E
0002529A <AmiBlitz3.ab3@7201>   MOVE.w $E(A0),D0
0002529E <AmiBlitz3.ab3@7202>    BPL.w JL_0_6264
000252A2 <AmiBlitz3.ab3@7203>   BTST #$0,D0
000252A6 <AmiBlitz3.ab3@7204>    BEQ.w JL_0_6240
000252AA <AmiBlitz3.ab3@7205>   CMP.w #$1,D5
000252AE <AmiBlitz3.ab3@7206>    BNE.w JL_0_6240
000252B2 <AmiBlitz3.ab3@7207>   CMP.w #$E,D3
000252B6 <AmiBlitz3.ab3@7208>    BEQ.w JL_0_6264
000252BC <AmiBlitz3.ab3@7209>   MOVE.w temp1,D0
000252BE <AmiBlitz3.ab3@7210>   ADDQ.w #4,D0
000252C2 <AmiBlitz3.ab3@7211> BRA.w JL_0_6256
000252C6 <AmiBlitz3.ab3@7214>   BTST #$1,D0
000252CA <AmiBlitz3.ab3@7215>    BEQ.w JL_0_6264
000252CE <AmiBlitz3.ab3@7216>   CMP.w #$B,D3
000252D2 <AmiBlitz3.ab3@7217>    BNE.w JL_0_6264
000252D8 <AmiBlitz3.ab3@7218>   MOVE.w temp1,D0
000252DA <AmiBlitz3.ab3@7221>   ADDQ.w #4,D0
000252E0 <AmiBlitz3.ab3@7222>   MOVEA.l #asmpnts,A0
000252E4 <AmiBlitz3.ab3@7223>   MOVEA.l $0(A0,D0.W),A0
000252E6 <AmiBlitz3.ab3@7224>   MOVE.w (A0),D1
000252F0 <AmiBlitz3.ab3@7227>   MOVE.l #ptr_parameterstore,buff1
000252FA <AmiBlitz3.ab3@7228>   MOVE.l #namebuff2,buff2
000252FE <AmiBlitz3.ab3@7229>   MOVE.l $A(A0),D0
00025302 <AmiBlitz3.ab3@7230>    BEQ.w JL_0_62DC
00025304 <AmiBlitz3.ab3@7231>   MOVEA.l D0,A3
0002530A <AmiBlitz3.ab3@7232>   MOVE.w asmsize,D6
0002530C <AmiBlitz3.ab3@7235>    JSR (A3)
00025310 <AmiBlitz3.ab3@7236>    BPL.w JL_0_629A
00025314 <AmiBlitz3.ab3@7237>   CMP.w #-$2,D0
00025318 <AmiBlitz3.ab3@7238>    BEQ.w illsizeerr
0002531C <AmiBlitz3.ab3@7239> BRA.w illeaerr
00025320 <AmiBlitz3.ab3@7242>   BEQ.w JL_0_62DC
00025322 <AmiBlitz3.ab3@7243>   EXG.l D2,D4
00025324 <AmiBlitz3.ab3@7244>   EXG.l D3,D5
0002532A <AmiBlitz3.ab3@7245>   MOVE.l extraword,D6
0002532C <AmiBlitz3.ab3@7246>   SWAP D6
00025332 <AmiBlitz3.ab3@7247>   MOVE.l D6,extraword
0002533C <AmiBlitz3.ab3@7248>   MOVE.l #namebuff2,buff1
00025346 <AmiBlitz3.ab3@7249>   MOVE.l #ptr_parameterstore,buff2
0002534C <AmiBlitz3.ab3@7250>   MOVE.w asmlen,D6
00025352 <AmiBlitz3.ab3@7251>   MOVE.w asmlen2,D7
00025358 <AmiBlitz3.ab3@7252>   MOVE.w D6,asmlen2
0002535E <AmiBlitz3.ab3@7253>   MOVE.w D7,asmlen
00025368 <AmiBlitz3.ab3@7256>   MOVE.l buff1,asmbuff
0002536C <AmiBlitz3.ab3@7257>   MOVE.w $E(A0),D0
00025370 <AmiBlitz3.ab3@7258>    BEQ.w JL_0_6348
00025374 <AmiBlitz3.ab3@7259>    BMI.w JL_0_6348
00025378 <AmiBlitz3.ab3@7260>    CMP.w #$7000,d1
0002537C <AmiBlitz3.ab3@7261>    BNE 'skip
00025380 <AmiBlitz3.ab3@7262>    CMP.w #$b,d3
00025384 <AmiBlitz3.ab3@7263>    BNE illeaerr
00025388 <AmiBlitz3.ab3@7266>    CMP.w #$1,D0
0002538C <AmiBlitz3.ab3@7267>    BNE.w JL_0_630E
00025390 <AmiBlitz3.ab3@7268>    CMP.w #$B,D3
00025394 <AmiBlitz3.ab3@7269>    BNE.w JL_0_6348
00025398 <AmiBlitz3.ab3@7272>    BSR.w insasm
0002539A <AmiBlitz3.ab3@7273>   MOVE.w D4,D2
0002539C <AmiBlitz3.ab3@7274>   MOVE.w D5,D3
000253A0 <AmiBlitz3.ab3@7275> BRA.w JL_0_6364
000253A4 <AmiBlitz3.ab3@7278>    CMP.w #$2,D0
000253A8 <AmiBlitz3.ab3@7279>    BNE.w JL_0_6324
000253AC <AmiBlitz3.ab3@7280>   CMP.w #$8,D3
000253B0 <AmiBlitz3.ab3@7281>    BNE.w illeaerr
000253B2 <AmiBlitz3.ab3@7282>   MOVEQ.l #$09,D3
000253B6 <AmiBlitz3.ab3@7283> BRA.w JL_0_6348
000253BA <AmiBlitz3.ab3@7286>    CMP.w #$3,D0
000253BE <AmiBlitz3.ab3@7287>    BEQ.w JL_0_6302
000253C2 <AmiBlitz3.ab3@7288>   CMP.w #$4,D0
000253C6 <AmiBlitz3.ab3@7289>    BEQ.w JL_0_6302
000253CA <AmiBlitz3.ab3@7290>   CMP.w #$5,D0
000253CE <AmiBlitz3.ab3@7291>    BNE.w JL_0_6348
000253D2 <AmiBlitz3.ab3@7292>   CMP.w #$8,D5
000253D6 <AmiBlitz3.ab3@7293>    BNE.w illeaerr
000253D8 <AmiBlitz3.ab3@7294>   OR.w D2,D1
000253DA <AmiBlitz3.ab3@7295>   MOVEQ.l #$09,D5
000253DE <AmiBlitz3.ab3@7298>   MOVE.w $2(A0),D6
000253E2 <AmiBlitz3.ab3@7299>   MOVE.b $6(A0),D7
000253E6 <AmiBlitz3.ab3@7300>   MOVEM.l D4-D5,-(A7)
000253EC <AmiBlitz3.ab3@7301>   MOVE.w extraword2,D4
000253F0 <AmiBlitz3.ab3@7302>    BSR.w doea
000253F4 <AmiBlitz3.ab3@7303>   MOVEM.l (A7)+,D2-D3
000253F6 <AmiBlitz3.ab3@7304>   TST.w D3
000253FA <AmiBlitz3.ab3@7307>     BMI.w JL_0_6392
00025400 <AmiBlitz3.ab3@7308>   MOVE.w extraword,D4
00025404 <AmiBlitz3.ab3@7309>   MOVE.w $4(A0),D6
00025408 <AmiBlitz3.ab3@7310>   MOVE.b $7(A0),D7
00025412 <AmiBlitz3.ab3@7311>   MOVE.l buff2,asmbuff
0002541C <AmiBlitz3.ab3@7312>   MOVE.w asmlen2,asmlen
00025420 <AmiBlitz3.ab3@7313>    BSR.w doea
00025424 <AmiBlitz3.ab3@7314> BRA.w JL_0_63AA
00025428 <AmiBlitz3.ab3@7317>   MOVE.w $4(A0),D0
0002542C <AmiBlitz3.ab3@7318>    BNE.w illeaerr
00025430 <AmiBlitz3.ab3@7319> BRA.w JL_0_63AA
00025434 <AmiBlitz3.ab3@7323>   MOVE.w $2(A0),D0
00025438 <AmiBlitz3.ab3@7324>   OR.w $4(A0),D0
0002543C <AmiBlitz3.ab3@7325>    BNE.w illeaerr
00025440 <AmiBlitz3.ab3@7328>   MOVE.w $8(A0),D0
00025444 <AmiBlitz3.ab3@7329>   ANDI.w #$F000,D0
00025448 <AmiBlitz3.ab3@7330>   CMP.w #-$1000,D0
0002544C <AmiBlitz3.ab3@7331>    BEQ.w JL_0_63D2
0002544E <AmiBlitz3.ab3@7332>   LSR.w #8,D0
00025450 <AmiBlitz3.ab3@7333>   LSR.w #4,D0
00025454 <AmiBlitz3.ab3@7334>   MOVE.w $8(A0),D2
0002545A <AmiBlitz3.ab3@7335>   MOVE.w asmsize,D3
0002545C <AmiBlitz3.ab3@7336>   LSR.w D3,D2
00025460 <AmiBlitz3.ab3@7337>   ANDI.w #$F,D2
00025462 <AmiBlitz3.ab3@7338>   LSL.w D0,D2
00025464 <AmiBlitz3.ab3@7339>   OR.w D2,D1
0002546A <AmiBlitz3.ab3@7342>   CMPA.l destbufferend,A4
0002546E <AmiBlitz3.ab3@7343>    BCS.w JL_0_63E8
00025476 <AmiBlitz3.ab3@7345>   MOVE.w #$FFFF,dontwrite
0002547A <AmiBlitz3.ab3@7346> BRA.w JL_0_63EA
0002547C <AmiBlitz3.ab3@7349>   MOVE.w D1,(A4)
00025482 <AmiBlitz3.ab3@7352>   MOVE.l A1,destpointer
00025484 <AmiBlitz3.ab3@7353> RTS
0002548A <AmiBlitz3.ab3@7357>   MOVE.l destpointer,-(A7)
00025490 <AmiBlitz3.ab3@7358>   MOVE.l A1,destpointer
00025494 <AmiBlitz3.ab3@7359>    BSR.w addoff
0002549A <AmiBlitz3.ab3@7360>   MOVEA.l destpointer,A1
000254A0 <AmiBlitz3.ab3@7361>   MOVE.l (A7)+,destpointer
000254A2 <AmiBlitz3.ab3@7362> RTS
000254A6 <AmiBlitz3.ab3@7366>   MOVEM.l d2-d6,-(a7)
000254AC <AmiBlitz3.ab3@7367>   JSR stripspaces
000254B0 <AmiBlitz3.ab3@7368>   CMP.b #"d",(a5)+
000254B4 <AmiBlitz3.ab3@7369>   BNE noreg
000254B6 <AmiBlitz3.ab3@7370>   MOVE.b (a5)+,d0
000254BA <AmiBlitz3.ab3@7371>   CMP.b #$30,d0
000254BE <AmiBlitz3.ab3@7372>   BLT noreg
000254C2 <AmiBlitz3.ab3@7373>   CMP.b #$37,d0
000254C6 <AmiBlitz3.ab3@7374>   BGT noreg
000254CA <AmiBlitz3.ab3@7375>   SUB.b #$30,d0
000254CC <AmiBlitz3.ab3@7376>   MOVEQ #0,d3
000254CE <AmiBlitz3.ab3@7377>   MOVE.b d0,d3                                             ;reg1
000254D0 <AmiBlitz3.ab3@7378>   ASL.l #8,d3
000254D2 <AmiBlitz3.ab3@7379>   ASL.l #8,d3
000254D8 <AmiBlitz3.ab3@7380>   JSR stripspaces
000254DC <AmiBlitz3.ab3@7381>   CMP.b #",",(a5)+
000254E0 <AmiBlitz3.ab3@7382>   BNE noreg
000254E6 <AmiBlitz3.ab3@7383>   JSR stripspaces
000254EA <AmiBlitz3.ab3@7384>   CMP.b #"d",(a5)+
000254EE <AmiBlitz3.ab3@7385>   BNE noreg
000254F0 <AmiBlitz3.ab3@7386>   MOVE.b (a5)+,d0
000254F4 <AmiBlitz3.ab3@7387>   CMP.b #$30,d0
000254F8 <AmiBlitz3.ab3@7388>   BLT noreg
000254FC <AmiBlitz3.ab3@7389>   CMP.b #$37,d0
00025500 <AmiBlitz3.ab3@7390>   BGT noreg
00025504 <AmiBlitz3.ab3@7391>   SUB.b #$30,d0
00025506 <AmiBlitz3.ab3@7392>   MOVEQ #0,d4
00025508 <AmiBlitz3.ab3@7393>   MOVE.b d0,d4                                             ;reg2
0002550A <AmiBlitz3.ab3@7394>   ASL.l #8,d4
0002550C <AmiBlitz3.ab3@7395>   ASL.l #4,d4
0002550E <AmiBlitz3.ab3@7396>   OR.b d0,d1
00025510 <AmiBlitz3.ab3@7397>   OR.l d3,d1
00025512 <AmiBlitz3.ab3@7398>   OR.l d4,d1
00025518 <AmiBlitz3.ab3@7399>   JSR writelong
0002551C <AmiBlitz3.ab3@7400>   MOVEM.l (a7)+,d2-d6
00025520 <AmiBlitz3.ab3@7401>   MOVEM.l d1/a1-a3,-(a7)
00025524 <AmiBlitz3.ab3@7402> BRA exit
00025528 <AmiBlitz3.ab3@7406>   MOVEM.l (a7)+,d2-d6
0002552E <AmiBlitz3.ab3@7407>   LEA errtext,a0
00025530 <AmiBlitz3.ab3@7408>   MOVE.l a0,-(a7)
00025536 <AmiBlitz3.ab3@7409> JMP handle_compileerror
0002553C <AmiBlitz3.ab3@7418>   MOVE.w dontwrite,D1
00025540 <AmiBlitz3.ab3@7419>    BNE.w asmfixer__done
00025548 <AmiBlitz3.ab3@7420>   BTST #$7,make_smallestcode
0002554C <AmiBlitz3.ab3@7421>    BEQ.w asmfixer__go
00025550 <AmiBlitz3.ab3@7422>   MOVE.w pass(PC),D1
00025554 <AmiBlitz3.ab3@7423>    BEQ.w asmfixer__done
0002555A <AmiBlitz3.ab3@7426>   MOVEA.l templabel,A2                                     ;insert labels in Code
00025562 <AmiBlitz3.ab3@7427>   MOVE.b #1,curtemplabel
0002556A <AmiBlitz3.ab3@7428>   MOVE.w #$FFFF,constmode
00025570 <AmiBlitz3.ab3@7429>   CLR.w regnum
0002557A <AmiBlitz3.ab3@7430>           MOVE.l #forthstack,forthsp
00025584 <AmiBlitz3.ab3@7431>           MOVE.l #precstack,precsp
00025588 <AmiBlitz3.ab3@7432>    BSR.w prepstack
0002558A <AmiBlitz3.ab3@7435>   MOVE.l A2,-(A7)
0002558E <AmiBlitz3.ab3@7436>    BSR.w chkstop
00025590 <AmiBlitz3.ab3@7437>   MOVEA.l (A7)+,A2
00025594 <AmiBlitz3.ab3@7438>   CMPA.w #$0,A2
00025598 <AmiBlitz3.ab3@7439>    BEQ.w asmfixer__done2
0002559E <AmiBlitz3.ab3@7440>    CLR.b iee
000255A4 <AmiBlitz3.ab3@7441>   MOVE.l A2,asmbuff
000255A8 <AmiBlitz3.ab3@7442>   LEA $10(A2),A5
000255AC <AmiBlitz3.ab3@7443>   TST.b $F(A2)
000255B0 <AmiBlitz3.ab3@7444>    BNE.w asmfixer__skipo
000255B2 <AmiBlitz3.ab3@7445>   MOVEA.l (A5),A5                                          ;pointer to real text
000255B8 <AmiBlitz3.ab3@7448>    CLR.w asmtype
000255BC <AmiBlitz3.ab3@7449>    CMP.b #".",(a5)
000255C0 <AmiBlitz3.ab3@7450>    BNE.s asmfixer__skipo_l10
000255C2 <AmiBlitz3.ab3@7451>    MOVE.l a2,-(a7)
000255C4 <AmiBlitz3.ab3@7452>    ADDQ.l #1,a5
000255CA <AmiBlitz3.ab3@7453>    LEA newtypebase,a2
000255CE <AmiBlitz3.ab3@7454>    BSR getparameter2
000255D2 <AmiBlitz3.ab3@7455>    BEQ.w syntaxerr
000255D6 <AmiBlitz3.ab3@7456>    BSR findtype
000255DA <AmiBlitz3.ab3@7457>    BNE.w notypeerr
000255DE <AmiBlitz3.ab3@7458>    LEA $4(a2),a2
000255E2 <AmiBlitz3.ab3@7459>    BSR getparameter2
000255E6 <AmiBlitz3.ab3@7460>    BEQ.w syntaxerr
000255EA <AmiBlitz3.ab3@7461>    BSR.w findvariable2
000255EE <AmiBlitz3.ab3@7462>    BNE.w notypeerr
000255F2 <AmiBlitz3.ab3@7463>    MOVE.w $4(a2),d3
000255F4 <AmiBlitz3.ab3@7464>    EXT.l d3
000255F8 <AmiBlitz3.ab3@7465> BRA asmfixer__skipo_l30b
000255FC <AmiBlitz3.ab3@7468>   CMP.b #"\",(a5)
00025600 <AmiBlitz3.ab3@7469>     BNE asmfixer__skipo_l20
00025602 <AmiBlitz3.ab3@7470>     ADDQ.l #1,a5
00025604 <AmiBlitz3.ab3@7471>    MOVE.l a2,-(a7)
00025606 <AmiBlitz3.ab3@7472>    MOVE.l a5,a4
0002560C <AmiBlitz3.ab3@7473>    LEA usedpath,a5
00025610 <AmiBlitz3.ab3@7474>    CMP.b #"*",(a5)
00025614 <AmiBlitz3.ab3@7475>    BNE asmfixer__skipo_lm1
00025616 <AmiBlitz3.ab3@7476>    ADDQ.l #1,a5
0002561A <AmiBlitz3.ab3@7479>    BSR.w getparameter2
0002561E <AmiBlitz3.ab3@7480>    BEQ.w syntaxerr
00025624 <AmiBlitz3.ab3@7481>    LEA varbase,A2
0002562C <AmiBlitz3.ab3@7482>    MOVE.b #1,newvariable
00025630 <AmiBlitz3.ab3@7483>    BSR.w findvariable
00025636 <AmiBlitz3.ab3@7484>    CLR.b newvariable
0002563C <AmiBlitz3.ab3@7485>    CMP.l #-1,d0
00025640 <AmiBlitz3.ab3@7486>    BEQ.w notypeerr
00025642 <AmiBlitz3.ab3@7487>    MOVE.l a4,a5
00025646 <AmiBlitz3.ab3@7488>    MOVE.l $a(a2),a2
0002564A <AmiBlitz3.ab3@7489>    LEA $4(a2),a2
0002564E <AmiBlitz3.ab3@7490>    BSR getparameter2
00025652 <AmiBlitz3.ab3@7491>    BEQ.w syntaxerr
00025656 <AmiBlitz3.ab3@7492>    BSR.w findvariable2
0002565A <AmiBlitz3.ab3@7493>    BNE.w notypeerr
0002565E <AmiBlitz3.ab3@7494>   MOVE.w $4(A2),D3
00025660 <AmiBlitz3.ab3@7495>   EXT.l D3
00025666 <AmiBlitz3.ab3@7498>    CMP.b #"[",-1(a5)
0002566A <AmiBlitz3.ab3@7499>    BNE asmfixer__skipo_l30c
0002566C <AmiBlitz3.ab3@7500>    MOVEQ #0,d0
0002566E <AmiBlitz3.ab3@7501>    MOVE.b (a5)+,d0
00025670 <AmiBlitz3.ab3@7502>    MOVE.l d3,-(a7)
00025672 <AmiBlitz3.ab3@7503>    MOVEQ #0,d3
00025678 <AmiBlitz3.ab3@7504>    JSR atoi
0002567A <AmiBlitz3.ab3@7505>    MOVE.l (a7)+,d1
0002567E <AmiBlitz3.ab3@7506>    MOVE.l $a(a2),a2
00025682 <AmiBlitz3.ab3@7507>    MOVE.w 8(a2),d0
00025684 <AmiBlitz3.ab3@7508>    MULS d0,d3
00025686 <AmiBlitz3.ab3@7509>    ADD.l d1,d3
00025688 <AmiBlitz3.ab3@7512>   MOVE.l (a7)+,a2
0002568C <AmiBlitz3.ab3@7513> BRA asmfixer__oko
00025692 <AmiBlitz3.ab3@7516>   CMP.w #$c,$8(a2)
00025696 <AmiBlitz3.ab3@7517>      BEQ asmfixer__skipo_lf1
0002569C <AmiBlitz3.ab3@7518>      CMP.w #$d,$8(a2)
000256A0 <AmiBlitz3.ab3@7519>      BEQ asmfixer__skipo_lf1
000256A6 <AmiBlitz3.ab3@7522>   JSR AJL_0_BF6E
000256AC <AmiBlitz3.ab3@7525>   MOVEA.l asmbuff,A2
000256B0 <AmiBlitz3.ab3@7526>    BEQ.w asmfixer__oko
000256B4 <AmiBlitz3.ab3@7527>   CMP.w #$28,D0
000256B8 <AmiBlitz3.ab3@7528>    BEQ.w asmfixer__oko
000256BC <AmiBlitz3.ab3@7529>   CMP.w #$2C,D0
000256C0 <AmiBlitz3.ab3@7530>    BEQ.w asmfixer__oko
000256C4 <AmiBlitz3.ab3@7531> BRA.w syntaxerr
000256CC <AmiBlitz3.ab3@7534>   MOVE.b #1,iee
000256D0 <AmiBlitz3.ab3@7535> BRA asmfixer__skipo_lf2
000256D4 <AmiBlitz3.ab3@7538>   MOVEA.l $4(A2),A1
000256D8 <AmiBlitz3.ab3@7540>   MOVE.w $8(A2),D1                                         ;labelmode
000256DC <AmiBlitz3.ab3@7541>   CMP.w #$5,D1
000256E0 <AmiBlitz3.ab3@7542>    BNE.w asmfixer__notdan
000256E4 <AmiBlitz3.ab3@7545>    BSR.w chkword                                         ;word
000256E6 <AmiBlitz3.ab3@7548>   MOVE.w D3,(A1)
000256EA <AmiBlitz3.ab3@7549> BRA.w asmfixer__next
000256EE <AmiBlitz3.ab3@7552>   CMP.w #$6,D1
000256F2 <AmiBlitz3.ab3@7553>    BNE.w asmfixer__notdanxi
000256F6 <AmiBlitz3.ab3@7556>    BSR.w chkbyte                                         ;byte
000256FA <AmiBlitz3.ab3@7559>   MOVE.b D3,$1(A1)
000256FE <AmiBlitz3.ab3@7560> BRA.w asmfixer__next
00025702 <AmiBlitz3.ab3@7563>    CMP.w #$11,D1                                           ;byte
00025706 <AmiBlitz3.ab3@7564>    BEQ.w asmfixer__isbyte2
0002570A <AmiBlitz3.ab3@7565>    CMP.w #$c,d1
0002570E <AmiBlitz3.ab3@7566>    BEQ asmfixer__single1
00025712 <AmiBlitz3.ab3@7567>    CMP.w #$d,d1
00025716 <AmiBlitz3.ab3@7568>    BEQ asmfixer__double1
0002571A <AmiBlitz3.ab3@7569>   CMP.w #$7,D1
0002571E <AmiBlitz3.ab3@7570>    BEQ.w asmfixer__word                                    ;word
00025722 <AmiBlitz3.ab3@7571>   CMP.w #$8,D1
00025726 <AmiBlitz3.ab3@7572>    BNE.w asmfixer__notabsl
0002572C <AmiBlitz3.ab3@7575>   MOVE.w asmtype,D1                                        ;long
00025730 <AmiBlitz3.ab3@7576>    BEQ.w asmfixer__notpcrel
00025734 <AmiBlitz3.ab3@7577>      BSR.w asmoff
00025736 <AmiBlitz3.ab3@7580>   MOVE.l D3,(A1)
0002573A <AmiBlitz3.ab3@7581> BRA.w asmfixer__next
00025740 <AmiBlitz3.ab3@7585>   fmove.s fp0,0(a1)
00025744 <AmiBlitz3.ab3@7586> BRA.w asmfixer__next
0002574A <AmiBlitz3.ab3@7590>   fmove.d fp0,0(a1)
0002574E <AmiBlitz3.ab3@7591> BRA.w asmfixer__next
00025752 <AmiBlitz3.ab3@7595>   CMP.w #$9,D1
00025756 <AmiBlitz3.ab3@7596>    BNE.w asmfixer__notdpc
00025758 <AmiBlitz3.ab3@7597>   SUB.l A1,D3                                              ;branchword
0002575C <AmiBlitz3.ab3@7598>    BSR.w chkword
0002575E <AmiBlitz3.ab3@7599>   MOVE.w D3,(A1)
00025762 <AmiBlitz3.ab3@7600> BRA.w asmfixer__next
00025766 <AmiBlitz3.ab3@7604>   CMP.w #$A,D1
0002576A <AmiBlitz3.ab3@7605>    BNE.w asmfixer__imm
0002576C <AmiBlitz3.ab3@7606>   SUB.l A1,D3                                              ;branchbyte
00025770 <AmiBlitz3.ab3@7607> BRA.w asmfixer__isbyte
00025774 <AmiBlitz3.ab3@7611>   CMP.w #$11,d1
00025778 <AmiBlitz3.ab3@7612>   BLE asmfixer__imm_org
0002577A <AmiBlitz3.ab3@7613>   MOVE.l a3,-(a7)
00025780 <AmiBlitz3.ab3@7614>   LEA pluginbase,a3
00025784 <AmiBlitz3.ab3@7615>   MOVE.l 8(a2),a0
00025786 <AmiBlitz3.ab3@7616>   JSR (a0)                                                 ;hook
00025788 <AmiBlitz3.ab3@7617>   MOVE.l (a7)+,a3
0002578C <AmiBlitz3.ab3@7618> BRA asmfixer__next
00025790 <AmiBlitz3.ab3@7621>   MOVE.w $A(A2),D0
00025794 <AmiBlitz3.ab3@7622>    BEQ.w asmfixer__noflag
00025798 <AmiBlitz3.ab3@7623>   CMP.w #$1,D0
0002579C <AmiBlitz3.ab3@7624>    BEQ.w asmfixer__tocount
000257A0 <AmiBlitz3.ab3@7625>   CMP.w #$3,D0
000257A4 <AmiBlitz3.ab3@7626>    BEQ.w asmfixer__tomoveq
000257A8 <AmiBlitz3.ab3@7627>   CMP.w #$4,D0
000257AC <AmiBlitz3.ab3@7628>    BEQ.w asmfixer__totrap
000257B0 <AmiBlitz3.ab3@7631>   CMP.w #$B,D1                                             ;long
000257B4 <AmiBlitz3.ab3@7632>    BEQ.w asmfixer__isabsl
000257B8 <AmiBlitz3.ab3@7633> BRA asmfixer__word2                                              ;word
000257BE <AmiBlitz3.ab3@7636>   CMP.l #$F,D3
000257C2 <AmiBlitz3.ab3@7637>    BHI.w illtraperr
000257C4 <AmiBlitz3.ab3@7638>   OR.b D3,-(A1)
000257C8 <AmiBlitz3.ab3@7639> BRA.w asmfixer__next
000257CE <AmiBlitz3.ab3@7642>   CMP.l #$8,D3
000257D2 <AmiBlitz3.ab3@7643>    BHI.w illimmerr
000257D4 <AmiBlitz3.ab3@7644>   TST.l D3
000257D8 <AmiBlitz3.ab3@7645>    BEQ.w illimmerr
000257DC <AmiBlitz3.ab3@7646>   ANDI.w #$7,D3
000257DE <AmiBlitz3.ab3@7647>   LSL.w #8,D3
000257E0 <AmiBlitz3.ab3@7648>   LSL.w #1,D3
000257E2 <AmiBlitz3.ab3@7649>   OR.w D3,-(A1)
000257E6 <AmiBlitz3.ab3@7650> BRA.w asmfixer__next
000257EA <AmiBlitz3.ab3@7653>    BSR.w chkbyte
000257EC <AmiBlitz3.ab3@7654>   MOVE.b D3,-(A1)
000257EE <AmiBlitz3.ab3@7657>   MOVEA.l (A2),A2
000257F2 <AmiBlitz3.ab3@7658> BRA.w asmfixer__loop
000257F8 <AmiBlitz3.ab3@7661>   CLR.w constmode
000257FE <AmiBlitz3.ab3@7664>   CLR.b curtemplabel
00025800 <AmiBlitz3.ab3@7665> RTS
00025802 <AmiBlitz3.ab3@7674>   BTST D3,D6
00025806 <AmiBlitz3.ab3@7675>    BEQ.w illeaerr
0002580A <AmiBlitz3.ab3@7676>    BSR.w makemode
0002580E <AmiBlitz3.ab3@7677>   CMP.w #$7,D3
00025812 <AmiBlitz3.ab3@7678>    BCS.w doea__skip
00025814 <AmiBlitz3.ab3@7679>   MOVE.w D3,D2
00025816 <AmiBlitz3.ab3@7680>   SUBQ.w #7,D2
0002581A <AmiBlitz3.ab3@7681>   CMP.w #$5,D2
0002581E <AmiBlitz3.ab3@7682>    BCS.w doea__skip0
00025820 <AmiBlitz3.ab3@7683>   MOVEQ.l #$04,D2
00025822 <AmiBlitz3.ab3@7686>   MOVEQ.l #$07,D3
00025824 <AmiBlitz3.ab3@7689>   MOVE.b D7,D0
00025828 <AmiBlitz3.ab3@7690>   ANDI.w #$F,D0
0002582C <AmiBlitz3.ab3@7691>   CMP.w #$F,D0
00025830 <AmiBlitz3.ab3@7692>    BEQ.w doea__skip2
00025832 <AmiBlitz3.ab3@7693>   LSL.w D0,D3
00025834 <AmiBlitz3.ab3@7694>   OR.w D3,D1
00025836 <AmiBlitz3.ab3@7697>   LSR.w #4,D7
0002583A <AmiBlitz3.ab3@7698>   ANDI.w #$F,D7
0002583E <AmiBlitz3.ab3@7699>   CMP.w #$F,D7
00025842 <AmiBlitz3.ab3@7700>    BEQ.w doea__skip3
00025844 <AmiBlitz3.ab3@7701>   LSL.w D7,D2
00025846 <AmiBlitz3.ab3@7702>   OR.w D2,D1
00025848 <AmiBlitz3.ab3@7705> RTS
0002584E <AmiBlitz3.ab3@7709>   CMP.l #$7F,D3
00025852 <AmiBlitz3.ab3@7710>    BGT.w illdiserr
00025858 <AmiBlitz3.ab3@7711>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
0002585C <AmiBlitz3.ab3@7712>    BLT.w illdiserr
0002585E <AmiBlitz3.ab3@7713> RTS
00025864 <AmiBlitz3.ab3@7717>   CMP.l #$7fff,D3
00025868 <AmiBlitz3.ab3@7718>    BGT.w illdiserr
0002586E <AmiBlitz3.ab3@7719>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
00025872 <AmiBlitz3.ab3@7720>    BLT.w illdiserr
00025874 <AmiBlitz3.ab3@7721> RTS
00025876 <AmiBlitz3.ab3@7726>   MOVE.b (a5)+,d0
00025878 <AmiBlitz3.ab3@7727>   CMP.b d1,d0
0002587C <AmiBlitz3.ab3@7728>   BEQ 'll10
0002587E <AmiBlitz3.ab3@7729>   TST.b d0
00025882 <AmiBlitz3.ab3@7730>   BNE 'll20
00025884 <AmiBlitz3.ab3@7733>   SUBQ #1,a5
00025886 <AmiBlitz3.ab3@7734> RTS
00025888 <AmiBlitz3.ab3@7739>   MOVE.b (a5)+,d0
0002588C <AmiBlitz3.ab3@7740>   CMP.b #",",d0
00025890 <AmiBlitz3.ab3@7741>   BEQ 'll10
00025894 <AmiBlitz3.ab3@7742>   CMP.b #";",d0
00025898 <AmiBlitz3.ab3@7743>   BEQ 'll10
0002589C <AmiBlitz3.ab3@7744>  CMP.b #":",d0
000258A0 <AmiBlitz3.ab3@7745>   BEQ 'll10
000258A2 <AmiBlitz3.ab3@7748>   TST.b d0
000258A6 <AmiBlitz3.ab3@7749>   BNE 'll20
000258A8 <AmiBlitz3.ab3@7752>   SUBQ #1,a5
000258AA <AmiBlitz3.ab3@7753> RTS
000258AC <AmiBlitz3.ab3@7757>   ADD.l a2,d1
000258B2 <AmiBlitz3.ab3@7758>   LEA tempspace,a1
000258B4 <AmiBlitz3.ab3@7759>   MOVE.l d1,a0
000258B6 <AmiBlitz3.ab3@7762>   MOVE.b (a0)+,(a1)+
000258BA <AmiBlitz3.ab3@7763>   BNE.s 'l10
000258BC <AmiBlitz3.ab3@7764>   SUBQ.l #1,a0
000258BE <AmiBlitz3.ab3@7765>   SUBQ.l #1,a1
000258C0 <AmiBlitz3.ab3@7768>   MOVE.b (a5)+,(a1)+
000258C4 <AmiBlitz3.ab3@7769>   BNE.s 'l20
000258C6 <AmiBlitz3.ab3@7770>   CLR.b (a1)
000258CC <AmiBlitz3.ab3@7771>   LEA tempspace,a5
000258CE <AmiBlitz3.ab3@7772> RTS
000258D2 <AmiBlitz3.ab3@7776>   MOVEM.l D1-D2/A0,-(A7)
000258D4 <AmiBlitz3.ab3@7777>   MOVE.l d0,d2
000258D6 <AmiBlitz3.ab3@7778>   MOVEQ #0,d1
000258D8 <AmiBlitz3.ab3@7779>   MOVE.l a5,a4
000258DA <AmiBlitz3.ab3@7782>   ADDQ.l #1,d1
000258DC <AmiBlitz3.ab3@7783>   MOVE.b (a5)+,d0
000258E0 <AmiBlitz3.ab3@7784>   CMP.b #",",d0
000258E4 <AmiBlitz3.ab3@7785>   BEQ 'll10
000258E8 <AmiBlitz3.ab3@7786>   CMP.b #";",d0
000258EC <AmiBlitz3.ab3@7787>   BEQ 'll10
000258F0 <AmiBlitz3.ab3@7788>   CMP.b #":",d0
000258F4 <AmiBlitz3.ab3@7789>   BEQ 'll10
000258F8 <AmiBlitz3.ab3@7790>   CMP.b #"(",d0
000258FC <AmiBlitz3.ab3@7791>   BEQ 'll10
000258FE <AmiBlitz3.ab3@7792>   TST.b d0
00025902 <AmiBlitz3.ab3@7793>   BNE 'll20
00025904 <AmiBlitz3.ab3@7796>   SUBQ #1,a5
00025908 <AmiBlitz3.ab3@7797>   CMP.b #"'",(a4)
0002590C <AmiBlitz3.ab3@7798>   BEQ 'llocal
00025912 <AmiBlitz3.ab3@7799>   TST.w inmacro
00025916 <AmiBlitz3.ab3@7800>   BNE 'lmacro
00025918 <AmiBlitz3.ab3@7801>   MOVEQ.l #$14+4,D0
0002591A <AmiBlitz3.ab3@7802>   ADD.l d1,d0
0002591C <AmiBlitz3.ab3@7803>   MOVE.l d1,-(a7)
0002591E <AmiBlitz3.ab3@7804>   MOVEQ.l #$01,D1
00025924 <AmiBlitz3.ab3@7805>   MOVEA.l _execbase,A6
0002592A <AmiBlitz3.ab3@7806>   MOVE.l mempool2,a0
0002592E <AmiBlitz3.ab3@7807>   JSR _AllocPooled(a6)
00025930 <AmiBlitz3.ab3@7809>   MOVE.l (a7)+,d1
00025932 <AmiBlitz3.ab3@7810>   TST.l d0
00025936 <AmiBlitz3.ab3@7811>   BEQ nomemory
00025938 <AmiBlitz3.ab3@7812>   MOVEA.l D0,A0
00025940 <AmiBlitz3.ab3@7814>   MOVE.w linenumat+2,$A(A0)
00025946 <AmiBlitz3.ab3@7816>   MOVE.l templabel,(A0)
0002594C <AmiBlitz3.ab3@7817>   MOVE.l A0,templabel
00025954 <AmiBlitz3.ab3@7818>   MOVE.l destpointer,$4(A0)
00025958 <AmiBlitz3.ab3@7819>   MOVE.l d2,$8(A0)
0002595C <AmiBlitz3.ab3@7820>   LEA $E(A0),A0
00025960 <AmiBlitz3.ab3@7821>   MOVE.b #$14,(A0)+
00025962 <AmiBlitz3.ab3@7822>   CLR.b (a0)+
00025964 <AmiBlitz3.ab3@7824>   MOVE.l a0,d2
00025966 <AmiBlitz3.ab3@7825>   ADDQ.l #4,d2
00025968 <AmiBlitz3.ab3@7826>   MOVE.l d2,(a0)+
0002596A <AmiBlitz3.ab3@7829>   MOVE.b (a4)+,(a0)+
0002596C <AmiBlitz3.ab3@7830>   SUBQ.l #1,d1
00025970 <AmiBlitz3.ab3@7831>   BNE 'lc1
00025972 <AmiBlitz3.ab3@7832>   CLR.b (a0)+
00025978 <AmiBlitz3.ab3@7833>   MOVE.w linenumat,(a0)
0002597C <AmiBlitz3.ab3@7834>   MOVEM.l (A7)+,D1-D2/A0
0002597E <AmiBlitz3.ab3@7835> RTS
00025980 <AmiBlitz3.ab3@7838>   MOVEQ.l #$10+2,D0
00025982 <AmiBlitz3.ab3@7839>   ADD.l d1,d0
00025986 <AmiBlitz3.ab3@7840>   MOVEM.l a4/d3,-(a7)
00025988 <AmiBlitz3.ab3@7841>   MOVE.l d1,d3
0002598A <AmiBlitz3.ab3@7842>   MOVEQ.l #$01,D1
00025990 <AmiBlitz3.ab3@7843>   MOVEA.l _execbase,A6
00025996 <AmiBlitz3.ab3@7844>   MOVE.l mempool2,a0
0002599A <AmiBlitz3.ab3@7845>   JSR _AllocPooled(a6)
0002599C <AmiBlitz3.ab3@7847>   TST.l d0
000259A0 <AmiBlitz3.ab3@7848>   BEQ nomemory
000259A2 <AmiBlitz3.ab3@7849>   MOVEA.l D0,A0
000259AA <AmiBlitz3.ab3@7852>   MOVE.w linenumat+2,$C(A0)
000259B0 <AmiBlitz3.ab3@7853>   MOVE.l templabel,(A0)
000259B6 <AmiBlitz3.ab3@7854>   MOVE.l A0,templabel
000259BE <AmiBlitz3.ab3@7855>   MOVE.l destpointer,$4(A0)
000259C2 <AmiBlitz3.ab3@7856>   MOVE.l d2,$8(A0)
000259C6 <AmiBlitz3.ab3@7857>   LEA $E(A0),A0
000259C8 <AmiBlitz3.ab3@7858>   MOVE.b d3,(A0)+
000259CE <AmiBlitz3.ab3@7859>   ADD.b #$10,-1(a0)
000259D2 <AmiBlitz3.ab3@7860>   MOVE.b #$1,(a0)+
000259D4 <AmiBlitz3.ab3@7861>   SUBQ.w #1,d3
000259D6 <AmiBlitz3.ab3@7864>   MOVE.b (a4)+,(a0)+
000259D8 <AmiBlitz3.ab3@7865>   SUBQ.l #1,d3
000259DC <AmiBlitz3.ab3@7866>   BNE.s 'lm2
000259DE <AmiBlitz3.ab3@7867>   CLR.b (a0)+
000259E4 <AmiBlitz3.ab3@7868>   MOVE.w linenumat,(a0)
000259E8 <AmiBlitz3.ab3@7869>   MOVEM.l (a7)+,d3/a4
000259EC <AmiBlitz3.ab3@7870>   MOVEM.l (A7)+,D1-D2/A0
000259EE <AmiBlitz3.ab3@7871> RTS
000259F4 <AmiBlitz3.ab3@7874>   LEA lastgloballabel,a1
000259F6 <AmiBlitz3.ab3@7877>   ADDQ.l #1,d1
000259F8 <AmiBlitz3.ab3@7878>   TST.b (a1)+
000259FC <AmiBlitz3.ab3@7879>   BNE.s 'll11
000259FE <AmiBlitz3.ab3@7880>   MOVEQ.l #$10+2,D0
00025A00 <AmiBlitz3.ab3@7881>   ADD.l d1,d0
00025A04 <AmiBlitz3.ab3@7882>   MOVEM.l a4/d3,-(a7)
00025A06 <AmiBlitz3.ab3@7883>   MOVE.l d1,d3
00025A08 <AmiBlitz3.ab3@7884>   MOVEQ.l #$01,D1
00025A0E <AmiBlitz3.ab3@7885>   MOVEA.l _execbase,A6
00025A14 <AmiBlitz3.ab3@7886>   MOVE.l mempool2,a0
00025A18 <AmiBlitz3.ab3@7887>   JSR _AllocPooled(a6)
00025A1A <AmiBlitz3.ab3@7889>   TST.l d0
00025A1E <AmiBlitz3.ab3@7890>   BEQ nomemory
00025A20 <AmiBlitz3.ab3@7891>   MOVEA.l D0,A0
00025A28 <AmiBlitz3.ab3@7894>   MOVE.w linenumat+2,$C(A0)
00025A2E <AmiBlitz3.ab3@7895>   MOVE.l templabel,(A0)
00025A34 <AmiBlitz3.ab3@7896>   MOVE.l A0,templabel
00025A3C <AmiBlitz3.ab3@7897>   MOVE.l destpointer,$4(A0)
00025A40 <AmiBlitz3.ab3@7898>   MOVE.l d2,$8(A0)
00025A44 <AmiBlitz3.ab3@7899>   LEA $E(A0),A0
00025A46 <AmiBlitz3.ab3@7900>   MOVE.b d3,(A0)+
00025A4C <AmiBlitz3.ab3@7901>   ADD.b #$10,-1(a0)
00025A50 <AmiBlitz3.ab3@7902>   MOVE.b #$1,(a0)+
00025A52 <AmiBlitz3.ab3@7903>   SUBQ.w #1,d3
00025A58 <AmiBlitz3.ab3@7904>   LEA lastgloballabel,a1
00025A5A <AmiBlitz3.ab3@7907>   SUBQ.l #1,d3
00025A5C <AmiBlitz3.ab3@7908>   MOVE.b (a1)+,(a0)+
00025A60 <AmiBlitz3.ab3@7909>   BNE.s 'lm3
00025A62 <AmiBlitz3.ab3@7910>   SUBQ.l #1,a0
00025A64 <AmiBlitz3.ab3@7913>   MOVE.b (a4)+,(a0)+
00025A66 <AmiBlitz3.ab3@7914>   SUBQ.l #1,d3
00025A6A <AmiBlitz3.ab3@7915>   BNE.s 'lm1
00025A6C <AmiBlitz3.ab3@7916>   CLR.b (a0)+
00025A72 <AmiBlitz3.ab3@7917>   MOVE.w linenumat,(a0)
00025A76 <AmiBlitz3.ab3@7918>   MOVEM.l (a7)+,d3/a4
00025A7A <AmiBlitz3.ab3@7919>   MOVEM.l (A7)+,D1-D2/A0
00025A7C <AmiBlitz3.ab3@7920> RTS
00025AA6 <AmiBlitz3.ab3@7924>   !basic
00025B08 <AmiBlitz3.ab3@7925>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025B1A <AmiBlitz3.ab3@7926>   loop Delay_ 1
00025B20 <AmiBlitz3.ab3@7927> Goto loop
00025B24 <AmiBlitz3.ab3@7931>   MOVEM.l D0-D2/A0,-(A7)
00025B28 <AmiBlitz3.ab3@7932>   MOVE.w $E(A0),-(A7)
00025B2C <AmiBlitz3.ab3@7933>    BPL.w insasm__ok
00025B2E <AmiBlitz3.ab3@7934>   CLR.w (A7)
00025B30 <AmiBlitz3.ab3@7937>   MOVE.l A1,-(A7)
00025B32 <AmiBlitz3.ab3@7938>   MOVEQ.l #$10+2,D0
00025B38 <AmiBlitz3.ab3@7939>   ADD.w asmlen,D0
00025B3A <AmiBlitz3.ab3@7940>   MOVE.w D0,D2
00025B3C <AmiBlitz3.ab3@7941>   MOVEQ.l #$01,D1
00025B42 <AmiBlitz3.ab3@7942>   MOVEA.l _execbase,A6
00025B48 <AmiBlitz3.ab3@7943>   MOVE.l mempool2,a0
00025B4C <AmiBlitz3.ab3@7944>   JSR _AllocPooled(a6)
00025B4E <AmiBlitz3.ab3@7946>   MOVEA.l D0,A0
00025B56 <AmiBlitz3.ab3@7949>   MOVE.w linenumat+2,$C(A0)
00025B5C <AmiBlitz3.ab3@7950>   MOVE.l templabel,(A0)
00025B62 <AmiBlitz3.ab3@7951>   MOVE.l A0,templabel
00025B66 <AmiBlitz3.ab3@7952>   MOVE.l (A7),$4(A0)
00025B6A <AmiBlitz3.ab3@7953>   MOVE.w d3,$8(A0)
00025B70 <AmiBlitz3.ab3@7954>   MOVE.w $4(A7),$A(A0)
00025B74 <AmiBlitz3.ab3@7955>   LEA $E(A0),A0
00025B76 <AmiBlitz3.ab3@7956>   MOVE.b D2,(A0)+                                           ;length
00025B7C <AmiBlitz3.ab3@7957>   MOVEA.l asmbuff,A1
00025B7E <AmiBlitz3.ab3@7958>   ADDQ.w #1,A1
00025B80 <AmiBlitz3.ab3@7959>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00025B84 <AmiBlitz3.ab3@7960>    BNE.w insasm__loop
00025B86 <AmiBlitz3.ab3@7961>   MOVE.l (A1)+,(A0)+
00025B8C <AmiBlitz3.ab3@7962>   MOVE.w linenumat,(a0)
00025B90 <AmiBlitz3.ab3@7963> BRA.w insasm__loopdone
00025B92 <AmiBlitz3.ab3@7966>    MOVE.b (A1)+,(A0)+
00025B96 <AmiBlitz3.ab3@7967>    BNE.w insasm__loop
00025B9C <AmiBlitz3.ab3@7968>    MOVE.w linenumat,(a0)
00025B9E <AmiBlitz3.ab3@7971>   MOVEA.l (A7)+,A1
00025BA0 <AmiBlitz3.ab3@7972>   ADDQ.w #2,A7
00025BA4 <AmiBlitz3.ab3@7973>   MOVEM.l (A7)+,D0-D2/A0
00025BA6 <AmiBlitz3.ab3@7974> RTS
00025BAA <AmiBlitz3.ab3@7978>   CMP.w #$5,D3
00025BAE <AmiBlitz3.ab3@7979>    BCS.w makemode__done
00025BB2 <AmiBlitz3.ab3@7980>   CMP.w #$B,D3
00025BB6 <AmiBlitz3.ab3@7981>    BHI.w makemode__done2
00025BBA <AmiBlitz3.ab3@7982>    BEQ.w makemode__imm
00025BBE <AmiBlitz3.ab3@7983>    BSR.w insasm
00025BC2 <AmiBlitz3.ab3@7984>   CMP.w #$5,D3
00025BC6 <AmiBlitz3.ab3@7985>    BEQ.w makemode__word
00025BCA <AmiBlitz3.ab3@7986>   CMP.w #$6,D3
00025BCE <AmiBlitz3.ab3@7987>    BEQ.w makemode__dxi
00025BD2 <AmiBlitz3.ab3@7988>   CMP.w #$7,D3
00025BD6 <AmiBlitz3.ab3@7989>    BEQ.w makemode__word
00025BDA <AmiBlitz3.ab3@7990>   CMP.w #$8,D3
00025BDE <AmiBlitz3.ab3@7991>    BEQ.w makemode__long
00025BE2 <AmiBlitz3.ab3@7992>   CMP.w #$9,D3
00025BE6 <AmiBlitz3.ab3@7993>    BEQ.w makemode__word
00025BEC <AmiBlitz3.ab3@7997>   CMPA.l destbufferend,A1
00025BF0 <AmiBlitz3.ab3@7998>    BCS.w makemode__ok7
00025BF2 <AmiBlitz3.ab3@7999>   ADDQ.w #2,A1
00025BF4 <AmiBlitz3.ab3@8000> RTS
00025BF6 <AmiBlitz3.ab3@8003>   MOVE.w D4,(A1)+
00025BF8 <AmiBlitz3.ab3@8004> RTS
00025C00 <AmiBlitz3.ab3@8007>   CMPI.w #$8,asmsize
00025C04 <AmiBlitz3.ab3@8008>    BCC.w makemode__immlong
00025C06 <AmiBlitz3.ab3@8009>   MOVEQ.l #$10,D3
00025C0A <AmiBlitz3.ab3@8010>    BSR.w insasm
00025C0C <AmiBlitz3.ab3@8011>   MOVEQ.l #$0B,D3
00025C10 <AmiBlitz3.ab3@8012> BRA.w makemode__word
00025C14 <AmiBlitz3.ab3@8015>   BSR.w insasm
00025C16 <AmiBlitz3.ab3@8018>   ADDQ.w #2,A1
00025C18 <AmiBlitz3.ab3@8021>   ADDQ.w #2,A1
00025C1A <AmiBlitz3.ab3@8022> RTS
00025C1E <AmiBlitz3.ab3@8025>   CMP.w #$F,D3
00025C22 <AmiBlitz3.ab3@8026>    BNE.w makemode__done
00025C28 <AmiBlitz3.ab3@8027>   CMPA.l destbufferend,A1
00025C2C <AmiBlitz3.ab3@8028>    BCS.w makemode__ok3
00025C2E <AmiBlitz3.ab3@8029>   ADDQ.w #2,A1
00025C30 <AmiBlitz3.ab3@8030>   ADDQ.w #4,A7
00025C32 <AmiBlitz3.ab3@8031> RTS
00025C34 <AmiBlitz3.ab3@8034>   MOVE.w D2,(A1)+
00025C36 <AmiBlitz3.ab3@8035>   ADDQ.w #4,A7
00025C38 <AmiBlitz3.ab3@8038> RTS
00025C3C <AmiBlitz3.ab3@8042>   BSR.w storeloc
00025C46 <AmiBlitz3.ab3@8043>   MOVE.l linenumat,oldline
00025C48 <AmiBlitz3.ab3@8044>   MOVEQ.l #$00,D1
00025C4C <AmiBlitz3.ab3@8045>    BSR.w get1bytemain
00025C50 <AmiBlitz3.ab3@8046>    BEQ.w JL_0_676E
00025C52 <AmiBlitz3.ab3@8047>   MOVEQ.l #$00,D3
00025C56 <AmiBlitz3.ab3@8048> BRA.w JL_0_6726
00025C5A <AmiBlitz3.ab3@8051>    BSR.w get1bytemain
00025C5E <AmiBlitz3.ab3@8052>    BNE.w JL_0_671C
00025C60 <AmiBlitz3.ab3@8055>   TST.w D3
00025C64 <AmiBlitz3.ab3@8056>    BNE.w brackets_                                         ;syntax error brackets
00025C68 <AmiBlitz3.ab3@8057> BRA.w JL_0_676C
00025C6E <AmiBlitz3.ab3@8060>    MOVE.w instringon,D4
00025C72 <AmiBlitz3.ab3@8062>      BEQ JL_0_6726
00025C74 <AmiBlitz3.ab3@8065>     MOVEQ #0,d0
00025C76 <AmiBlitz3.ab3@8066>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025C7C <AmiBlitz3.ab3@8067>      MOVE.w d0,lastchar
00025C80 <AmiBlitz3.ab3@8068>      BEQ ready
00025C84 <AmiBlitz3.ab3@8069>      CMP.b #$22,d0
00025C88 <AmiBlitz3.ab3@8070>      BNE 'l1
00025C8E <AmiBlitz3.ab3@8071>      NOT.w instringon
00025C92 <AmiBlitz3.ab3@8072> BRA JL_0_670A
00025C96 <AmiBlitz3.ab3@8075>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00025C9A <AmiBlitz3.ab3@8076>            BNE 'l10
00025C9E <AmiBlitz3.ab3@8077>            CMP.b #"@",(a5)
00025CA2 <AmiBlitz3.ab3@8078>            BNE 'l10
00025CA8 <AmiBlitz3.ab3@8081>            TST.w ininclude
00025CAC <AmiBlitz3.ab3@8082>            BNE 'inc
00025CB2 <AmiBlitz3.ab3@8083>            MOVE.l sourceline3,a5
00025CB8 <AmiBlitz3.ab3@8084>            CMP.l #0,a5
00025CBC <AmiBlitz3.ab3@8085>            BNE 'l11t
00025CC2 <AmiBlitz3.ab3@8086>            MOVEA.l sourceline,A5
00025CC4 <AmiBlitz3.ab3@8089>            MOVEA.l (A5),A5
00025CCA <AmiBlitz3.ab3@8090>            CMP.l #0,a5
00025CCE <AmiBlitz3.ab3@8091>            BEQ JL_0_676C
00025CD4 <AmiBlitz3.ab3@8092>            MOVE.l a5,sourceline3
00025CD8 <AmiBlitz3.ab3@8093>            LEA $9(A5),A5
00025CDC <AmiBlitz3.ab3@8094> BRA 'l11
00025CDE <AmiBlitz3.ab3@8097>            ADDQ.l #1,a5
00025CE0 <AmiBlitz3.ab3@8098>            TST.b (a5)
00025CE4 <AmiBlitz3.ab3@8099>            BNE 'inc
00025CE6 <AmiBlitz3.ab3@8103>            ADDQ.l #1,a5
00025CE8 <AmiBlitz3.ab3@8104>            TST.b (a5)
00025CEC <AmiBlitz3.ab3@8105>            BEQ illeolerr
00025CEE <AmiBlitz3.ab3@8106>            MOVE.l a5,-(a7)
00025CF2 <AmiBlitz3.ab3@8109>       CMP.b #" ",(a5)+
00025CF6 <AmiBlitz3.ab3@8110>       BEQ 'l110
00025CFC <AmiBlitz3.ab3@8111>        CMP.b #";",-1(a5)
00025CFE <AmiBlitz3.ab3@8112>        MOVE.l (a7)+,a5
00025D02 <AmiBlitz3.ab3@8113>        BEQ 'l111
00025D06 <AmiBlitz3.ab3@8114> BRA JL_0_670A
00025D0A <AmiBlitz3.ab3@8117>    CMP.w #$29,D0
00025D0E <AmiBlitz3.ab3@8118>    BNE.w JL_0_673A
00025D10 <AmiBlitz3.ab3@8119>   TST.w D3
00025D14 <AmiBlitz3.ab3@8120>    BEQ.w JL_0_676C
00025D16 <AmiBlitz3.ab3@8123>   SUBQ.w #1,D3
00025D1A <AmiBlitz3.ab3@8124> BRA.w JL_0_670A
00025D1E <AmiBlitz3.ab3@8127>    CMP.w #$7D,D0
00025D22 <AmiBlitz3.ab3@8128>    BEQ.w JL_0_6734
00025D26 <AmiBlitz3.ab3@8129>   CMP.w #$28,D0
00025D2A <AmiBlitz3.ab3@8130>    BNE.w JL_0_6750
00025D2C <AmiBlitz3.ab3@8133>    ADDQ.w #1,D3
00025D30 <AmiBlitz3.ab3@8134> BRA.w JL_0_670A
00025D34 <AmiBlitz3.ab3@8137>   CMP.w #$7B,D0
00025D38 <AmiBlitz3.ab3@8138>    BEQ.w JL_0_674A
00025D3C <AmiBlitz3.ab3@8139>   CMP.w #$2C,D0
00025D40 <AmiBlitz3.ab3@8140>    BNE.w JL_0_670A
00025D42 <AmiBlitz3.ab3@8141>   TST.w D3
00025D46 <AmiBlitz3.ab3@8142>    BNE.w JL_0_670A
00025D48 <AmiBlitz3.ab3@8143>   ADDQ.w #1,D1
00025D4C <AmiBlitz3.ab3@8144> BRA.w JL_0_670A
00025D4E <AmiBlitz3.ab3@8147>   ADDQ.w #1,D1
00025D54 <AmiBlitz3.ab3@8150>   CLR.l sourceline3
00025D5E <AmiBlitz3.ab3@8151>   MOVE.l oldline,linenumat
00025D62 <AmiBlitz3.ab3@8152> BRA.w resloc
00025D68 <AmiBlitz3.ab3@8156>    CLR.w numreps
00025D6A <AmiBlitz3.ab3@8157>   MOVE.w D1,D0
00025D6E <AmiBlitz3.ab3@8158>   ANDI.w #$FF00,D0
00025D72 <AmiBlitz3.ab3@8159>    BEQ.w fetchlibps__noreps
00025D74 <AmiBlitz3.ab3@8160>   LSR.w #8,D0
00025D76 <AmiBlitz3.ab3@8161>   LSR.w #4,D0
00025D7A <AmiBlitz3.ab3@8162>    BEQ.w fetchlibps__skip
00025D7C <AmiBlitz3.ab3@8163>   SUB.b D0,D1
00025D86 <AmiBlitz3.ab3@8164>    MOVE.w regnum,regnumfunc
00025D8C <AmiBlitz3.ab3@8165>    MOVE.b funcparloop,-(a7)
00025D94 <AmiBlitz3.ab3@8166>    MOVE.b #0,funcparloop
00025D9A <AmiBlitz3.ab3@8167>    MOVE.l leftsidetype,-(a7)
00025DA0 <AmiBlitz3.ab3@8168>    MOVE.l rightsidetype,-(a7)
00025DA6 <AmiBlitz3.ab3@8169>    MOVE.w leftsideflagmask,-(a7)
00025DAC <AmiBlitz3.ab3@8170>    MOVE.w rightsideflagmask,-(a7)
00025DB2 <AmiBlitz3.ab3@8171>    CLR.l leftsidetype
00025DB8 <AmiBlitz3.ab3@8172>    CLR.l rightsidetype
00025DBE <AmiBlitz3.ab3@8173>    CLR.w leftsideflagmask
00025DC4 <AmiBlitz3.ab3@8174>    CLR.w rightsideflagmask
00025DCA <AmiBlitz3.ab3@8175>    MOVE.b blitzparloop,-(a7)
00025DD2 <AmiBlitz3.ab3@8176>    MOVE.b #1,blitzparloop
00025DD6 <AmiBlitz3.ab3@8177>    BSR.w fetchpees2
00025DDC <AmiBlitz3.ab3@8178>    MOVE.b (a7)+,blitzparloop
00025DE2 <AmiBlitz3.ab3@8179>    MOVE.w (a7)+,rightsideflagmask
00025DE8 <AmiBlitz3.ab3@8180>    MOVE.w (a7)+,leftsideflagmask
00025DEE <AmiBlitz3.ab3@8181>    MOVE.l (a7)+,rightsidetype
00025DF4 <AmiBlitz3.ab3@8182>    MOVE.l (a7)+,leftsidetype
00025DFA <AmiBlitz3.ab3@8183>    MOVE.b (a7)+,funcparloop
00025DFE <AmiBlitz3.ab3@8184>   CMP.w #$2C,D0
00025E02 <AmiBlitz3.ab3@8185>    BNE.w syntaxerr
00025E04 <AmiBlitz3.ab3@8188>   MOVE.w D1,D2
00025E06 <AmiBlitz3.ab3@8189>   LSR.w #8,D2
00025E0A <AmiBlitz3.ab3@8190>   ANDI.w #$7,D2
00025E0C <AmiBlitz3.ab3@8193>    CMP.b D2,D1
00025E10 <AmiBlitz3.ab3@8194>    BCS.w fetchlibps__repsdone
00025E12 <AmiBlitz3.ab3@8195>   SUB.b D2,D1
00025E16 <AmiBlitz3.ab3@8196>   MOVEM.l D2/A2,-(A7)
00025E18 <AmiBlitz3.ab3@8197>   MOVE.w D2,D0
00025E1E <AmiBlitz3.ab3@8198>   MOVE.b funcparloop,-(a7)
00025E26 <AmiBlitz3.ab3@8199>   MOVE.b #0,funcparloop
00025E2C <AmiBlitz3.ab3@8200>   MOVE.l leftsidetype,-(a7)
00025E32 <AmiBlitz3.ab3@8201>   MOVE.l rightsidetype,-(a7)
00025E38 <AmiBlitz3.ab3@8202>   MOVE.w leftsideflagmask,-(a7)
00025E3E <AmiBlitz3.ab3@8203>   MOVE.w rightsideflagmask,-(a7)
00025E44 <AmiBlitz3.ab3@8204>   CLR.l leftsidetype
00025E4A <AmiBlitz3.ab3@8205>   CLR.l rightsidetype
00025E50 <AmiBlitz3.ab3@8206>   CLR.w leftsideflagmask
00025E56 <AmiBlitz3.ab3@8207>   CLR.w rightsideflagmask
00025E5C <AmiBlitz3.ab3@8208>   MOVE.b blitzparloop,-(a7)
00025E64 <AmiBlitz3.ab3@8209>   MOVE.b #1,blitzparloop
00025E68 <AmiBlitz3.ab3@8210>   BSR.w fetchpees4
00025E6E <AmiBlitz3.ab3@8211>   MOVE.b (a7)+,blitzparloop
00025E74 <AmiBlitz3.ab3@8212>   MOVE.w (a7)+,rightsideflagmask
00025E7A <AmiBlitz3.ab3@8213>   MOVE.w (a7)+,leftsideflagmask
00025E80 <AmiBlitz3.ab3@8214>   MOVE.l (a7)+,rightsidetype
00025E86 <AmiBlitz3.ab3@8215>   MOVE.l (a7)+,leftsidetype
00025E8C <AmiBlitz3.ab3@8216>   MOVE.b (a7)+,funcparloop
00025E90 <AmiBlitz3.ab3@8217>   MOVEM.l (A7)+,D2/A2
00025E96 <AmiBlitz3.ab3@8218>   ADDQ.w #1,numreps
00025E9A <AmiBlitz3.ab3@8219> BRA.w fetchlibps__rloop
00025EA0 <AmiBlitz3.ab3@8222>    MOVE.w numreps,D3
00025EA4 <AmiBlitz3.ab3@8223>    BEQ.w syntaxerr
00025EA6 <AmiBlitz3.ab3@8224>   ADDA.w D2,A2
00025EAA <AmiBlitz3.ab3@8225>   ANDI.w #$FF,D1
00025EAE <AmiBlitz3.ab3@8226>    BEQ.w fetchlibps__done
00025EB2 <AmiBlitz3.ab3@8227>   CMP.w #$2C,D0
00025EB6 <AmiBlitz3.ab3@8228>    BNE.w syntaxerr
00025EB8 <AmiBlitz3.ab3@8231>    MOVE.w D1,D0
00025EBC <AmiBlitz3.ab3@8232>    BNE.w fetchpees2b
00025EBE <AmiBlitz3.ab3@8235> RTS
00025EC4 <AmiBlitz3.ab3@8238>   MOVE.b funcparloop,-(a7)
00025ECA <AmiBlitz3.ab3@8239>   MOVE.l leftsidetype,-(a7)
00025ED0 <AmiBlitz3.ab3@8240>   MOVE.l rightsidetype,-(a7)
00025ED6 <AmiBlitz3.ab3@8241>   MOVE.w leftsideflagmask,-(a7)
00025EDC <AmiBlitz3.ab3@8242>   MOVE.w rightsideflagmask,-(a7)
00025EE2 <AmiBlitz3.ab3@8243>   CLR.l leftsidetype
00025EE8 <AmiBlitz3.ab3@8244>   CLR.l rightsidetype
00025EEE <AmiBlitz3.ab3@8245>   CLR.w leftsideflagmask
00025EF4 <AmiBlitz3.ab3@8246>   CLR.w rightsideflagmask
00025EFC <AmiBlitz3.ab3@8247>   MOVE.b #0,funcparloop
00025F02 <AmiBlitz3.ab3@8248>   MOVE.b blitzparloop,-(a7)
00025F0A <AmiBlitz3.ab3@8249>   MOVE.b #1,blitzparloop
00025F0E <AmiBlitz3.ab3@8250>   BSR.w fetchpees2
00025F14 <AmiBlitz3.ab3@8251>   MOVE.b (a7)+,blitzparloop
00025F1A <AmiBlitz3.ab3@8252>   MOVE.w (a7)+,rightsideflagmask
00025F20 <AmiBlitz3.ab3@8253>   MOVE.w (a7)+,leftsideflagmask
00025F26 <AmiBlitz3.ab3@8254>   MOVE.l (a7)+,rightsidetype
00025F2C <AmiBlitz3.ab3@8255>   MOVE.l (a7)+,leftsidetype
00025F32 <AmiBlitz3.ab3@8256>   MOVE.b (a7)+,funcparloop
00025F34 <AmiBlitz3.ab3@8257> RTS
00025F38 <AmiBlitz3.ab3@8261> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00025F3A <AmiBlitz3.ab3@8264> partostack:  Ds.w 1                                        ;pmode org source
00025F3C <AmiBlitz3.ab3@8268>   MOVEQ.l #$01,D2
00025F40 <AmiBlitz3.ab3@8269> BRA.w fetchpees3
00025F42 <AmiBlitz3.ab3@8272>   MOVEQ.l #$00,D2
00025F46 <AmiBlitz3.ab3@8275>   ANDI.w #$F,D0
00025F4C <AmiBlitz3.ab3@8283>   CLR.w parnum
00025F4E <AmiBlitz3.ab3@8284>   MOVE.w D1,-(A7)
00025F52 <AmiBlitz3.ab3@8285>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00025F58 <AmiBlitz3.ab3@8286>   MOVE.w D2,partostack
00025F5A <AmiBlitz3.ab3@8287>   MOVE.w D0,-(A7)
00025F5E <AmiBlitz3.ab3@8288>   CMP.w #"@@",(a5)                                         ;was l15
00025F62 <AmiBlitz3.ab3@8289>   BNE fetchpees__loop
00025F68 <AmiBlitz3.ab3@8290>   TST.w ininclude                                          ;merge macrolines
00025F6C <AmiBlitz3.ab3@8291>   BNE errorjoin
00025F72 <AmiBlitz3.ab3@8292>        MOVEA.l sourceline,A5
00025F74 <AmiBlitz3.ab3@8295>            MOVEA.l (A5),A5
00025F7A <AmiBlitz3.ab3@8296>            MOVE.l a5,sourceline
00025F7E <AmiBlitz3.ab3@8297>            LEA $9(A5),A5
00025F84 <AmiBlitz3.ab3@8298>            ADDQ.l #1,linenumat
00025F86 <AmiBlitz3.ab3@8302>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00025F8A <AmiBlitz3.ab3@8303>    BNE.w fetchpees__skip0
00025F90 <AmiBlitz3.ab3@8304>   MOVE.w userp,D2                                          ;user selected type
00025F92 <AmiBlitz3.ab3@8306>    MOVE.l A2,-(A7)
00025F98 <AmiBlitz3.ab3@8307>    ADDQ.w #1,parnum
00025F9E <AmiBlitz3.ab3@8308>    TST.b funccall
00025FA2 <AmiBlitz3.ab3@8309>    BEQ fetchpees__skip0_l1
00025FAA <AmiBlitz3.ab3@8310>    CMP.w #6,parnum
00025FAE <AmiBlitz3.ab3@8311>    BLE fetchpees__skip0_l1
00025FB2 <AmiBlitz3.ab3@8312>    CMP.w #7,d2
00025FB8 <AmiBlitz3.ab3@8318>    TST.b fpu
00025FBC <AmiBlitz3.ab3@8319>    BEQ fetchpees__skip0_old
00025FC2 <AmiBlitz3.ab3@8320>    TST.w regnumfunc
00025FC6 <AmiBlitz3.ab3@8321>    BEQ fetchpees__skip0_old
00025FCC <AmiBlitz3.ab3@8322>    CMP.w #$48e7,-4(a4)
00025FD0 <AmiBlitz3.ab3@8323>    BNE fetchpees__skip0_old
00025FD2 <AmiBlitz3.ab3@8324>    MOVEQ #0,d1
00025FD8 <AmiBlitz3.ab3@8325>    MOVE.w regnum,d1
00025FDE <AmiBlitz3.ab3@8326>    CMP regnumfunc,d1                                       ;fpu reg function save
00025FE2 <AmiBlitz3.ab3@8327>    BGE fetchpees__skip0_old
00025FE4 <AmiBlitz3.ab3@8328>    ASL.w #7,d1
00025FE6 <AmiBlitz3.ab3@8329>    MOVE.l d0,-(a7)
00025FEC <AmiBlitz3.ab3@8330>    MOVE.w regnumfunc,d0
00025FF2 <AmiBlitz3.ab3@8331>    CLR.w regmask
00025FF8 <AmiBlitz3.ab3@8333>    BSET d0,regmask
00025FFA <AmiBlitz3.ab3@8334>    SUBQ #1,d0
00025FFE <AmiBlitz3.ab3@8335>    BNE fetchpees__skip0_loop
00026000 <AmiBlitz3.ab3@8336>     MOVEQ #0,d0
00026006 <AmiBlitz3.ab3@8339>       BTST d0,regmask
0002600A <AmiBlitz3.ab3@8340>       BEQ fetchpees__skip0_noa7
0002600C <AmiBlitz3.ab3@8341>       MOVEQ #0,d1
0002600E <AmiBlitz3.ab3@8342>       MOVE.w d0,d1
00026010 <AmiBlitz3.ab3@8343>       SUBQ.w #1,d1
00026012 <AmiBlitz3.ab3@8344>       ASL #7,d1
00026018 <AmiBlitz3.ab3@8345>       OR.l #$f2277400,d1                                   ;fmove.d
0002601C <AmiBlitz3.ab3@8347>       BSR writelong
00026022 <AmiBlitz3.ab3@8349>       ADDQ.l #2,stacktrack
00026028 <AmiBlitz3.ab3@8350>       MOVE.l stacktrack,d1
0002602E <AmiBlitz3.ab3@8351>       CMP.l #180,d1
00026032 <AmiBlitz3.ab3@8352>       BGT conmemerr                                        ;formel too complex
00026034 <AmiBlitz3.ab3@8353>       MOVE.l a0,-(a7)
0002603A <AmiBlitz3.ab3@8354>       LEA fpustackbase,a0
00026042 <AmiBlitz3.ab3@8355>       MOVE.w regmask,0(a0,d1)
00026044 <AmiBlitz3.ab3@8356>       MOVE.l (a7)+,a0
00026046 <AmiBlitz3.ab3@8359>       ADDQ.w #1,d0
0002604C <AmiBlitz3.ab3@8360>       CMP.w regnumfunc,d0
00026050 <AmiBlitz3.ab3@8361>       BLE fetchpees__skip0_loop2
00026052 <AmiBlitz3.ab3@8364>       MOVE.l (a7)+,d0
00026058 <AmiBlitz3.ab3@8367>      MOVE.l currentfunccall,-(a7)
0002605E <AmiBlitz3.ab3@8368>      MOVE.w parnum,-(a7)
00026064 <AmiBlitz3.ab3@8369>      TST.l rightsidetype
00026068 <AmiBlitz3.ab3@8370>      BSR.w JL_0_6836
0002606E <AmiBlitz3.ab3@8371>      MOVE.w (a7)+,parnum
00026074 <AmiBlitz3.ab3@8373>    MOVE.l (a7)+,currentfunccall
0002607A <AmiBlitz3.ab3@8375>    TST.b typecheck                            ;typecheck for function call
0002607E <AmiBlitz3.ab3@8376>    BEQ 'notypecheck
00026084 <AmiBlitz3.ab3@8377>    TST.b notypecheck
00026088 <AmiBlitz3.ab3@8378>    BNE 'notypecheck
0002608E <AmiBlitz3.ab3@8379>    TST.b blitzparloop
00026092 <AmiBlitz3.ab3@8380>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
0002609C <AmiBlitz3.ab3@8381>    CMP.l #0,currentfunccall
000260A0 <AmiBlitz3.ab3@8382>    BEQ 'isblitzlibcall
000260A4 <AmiBlitz3.ab3@8383>    MOVEM.l a0/a1,-(a7)
000260AA <AmiBlitz3.ab3@8384>    MOVE.l currentfunccall,a0
000260B0 <AmiBlitz3.ab3@8385>    MOVE.w parnum,d1
000260B6 <AmiBlitz3.ab3@8386>    TST.b isconstantvalue
000260BA <AmiBlitz3.ab3@8387>    BEQ 'noconstant
000260C4 <AmiBlitz3.ab3@8388>    CMP.l #0,lastconstantvalue
000260C8 <AmiBlitz3.ab3@8389>    BEQ 'isnull
000260CC <AmiBlitz3.ab3@8391>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
000260D2 <AmiBlitz3.ab3@8392>    CMP.l #0,a0
000260D6 <AmiBlitz3.ab3@8393>    BEQ 'notype
000260DE <AmiBlitz3.ab3@8394>    CMP.l #$100,4(a0)
000260E2 <AmiBlitz3.ab3@8395>    BLE 'notype
000260E8 <AmiBlitz3.ab3@8396>    MOVE.l lasttoken,d1
000260EC <AmiBlitz3.ab3@8397>    CMP.w #$b581,d1                   ; ok, when token for null
000260F0 <AmiBlitz3.ab3@8398>    BEQ 'isnull
000260F6 <AmiBlitz3.ab3@8399>    TST.l typetocast
000260FA <AmiBlitz3.ab3@8400>    BEQ 'nocast
00026100 <AmiBlitz3.ab3@8401>    MOVE.l typetocast,a1
00026104 <AmiBlitz3.ab3@8402>    BRA 'typecheck
0002610A <AmiBlitz3.ab3@8404>    MOVE.l rightsidetype,a1
00026110 <AmiBlitz3.ab3@8405>    CMP.l #0,a1
00026114 <AmiBlitz3.ab3@8406>    BEQ 'notype
0002611C <AmiBlitz3.ab3@8407> 'typecheck   CMP.l #$100,4(a1)
0002611E <AmiBlitz3.ab3@8409>    CMP.l a0,a1
00026122 <AmiBlitz3.ab3@8410>    BEQ 'ok
0002612A <AmiBlitz3.ab3@8412>    CMP.l #$100,4(a1)                 ; is a type here
0002612E <AmiBlitz3.ab3@8413>    BLE 'error
00026132 <AmiBlitz3.ab3@8414>    MOVE.l 4(a1),a1                   ; load the address of type.
00026136 <AmiBlitz3.ab3@8415>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
0002613A <AmiBlitz3.ab3@8416>    BEQ 'ok
00026140 <AmiBlitz3.ab3@8417> 'error: JMP   error_convert_types    ; for syntax 4
00026146 <AmiBlitz3.ab3@8421>    CLR.l typetocast
0002614A <AmiBlitz3.ab3@8422>    MOVEM.l (a7)+,a0/a1
00026150 <AmiBlitz3.ab3@8426>    CLR.l lastfunction
00026156 <AmiBlitz3.ab3@8427>    TST.b fpu
0002615A <AmiBlitz3.ab3@8428>    BEQ fetchpees__skip0_noprint
0002615C <AmiBlitz3.ab3@8429>   MOVE.l (a7),a2
0002615E <AmiBlitz3.ab3@8430>   ADDQ.l #1,a2
00026162 <AmiBlitz3.ab3@8431>    CMP.b #5,d2
00026166 <AmiBlitz3.ab3@8432>   BNE fetchpees__skip0_noprint
0002616C <AmiBlitz3.ab3@8433>   CMP.b #$5d,24(a2)
00026170 <AmiBlitz3.ab3@8434>   BNE fetchpees__skip0_noprint
00026176 <AmiBlitz3.ab3@8435>   CMP.b #$81,25(a2)
0002617A <AmiBlitz3.ab3@8436>   BLT fetchpees__skip0_noprint
00026180 <AmiBlitz3.ab3@8437>   CMP.b #$86,25(a2)
00026184 <AmiBlitz3.ab3@8438>   BEQ fetchpees__skip0_ok
0002618A <AmiBlitz3.ab3@8439>   CMP.b #$87,25(a2)
0002618E <AmiBlitz3.ab3@8440>   BEQ fetchpees__skip0_ok
00026194 <AmiBlitz3.ab3@8441>   CMP.b #$88,25(a2)
00026198 <AmiBlitz3.ab3@8442>   BEQ fetchpees__skip0_ok
0002619E <AmiBlitz3.ab3@8443>   CMP.b #$83,25(a2)
000261A2 <AmiBlitz3.ab3@8444>   BGT fetchpees__skip0_noprint
000261A8 <AmiBlitz3.ab3@8447>   MOVE.l destpointer,a4
000261AE <AmiBlitz3.ab3@8448>   CMP.w #$2f00,-2(a4)
000261B2 <AmiBlitz3.ab3@8449>   BNE fetchpees__skip0_noprint
000261B8 <AmiBlitz3.ab3@8450>   SUBQ.l #2,destpointer
000261BE <AmiBlitz3.ab3@8452>   MOVE.l #$f2277400,d1
000261C2 <AmiBlitz3.ab3@8453>   BSR writelong                                            ;fmove.d fp0,-(a7)
000261C8 <AmiBlitz3.ab3@8454>   ADDQ #4,a2offset
000261CE <AmiBlitz3.ab3@8472>   CLR.b optistring
000261D0 <AmiBlitz3.ab3@8473>   MOVEA.l (A7)+,A2
000261D4 <AmiBlitz3.ab3@8474>    CMP.w #"@",d0
000261D8 <AmiBlitz3.ab3@8475>   BNE fetchpees__skip0_l10
000261DC <AmiBlitz3.ab3@8476>    CMP.b #"@",(a5)
000261E0 <AmiBlitz3.ab3@8477>   BNE fetchpees__skip0_l10
000261E6 <AmiBlitz3.ab3@8478>   TST.w ininclude
000261EA <AmiBlitz3.ab3@8479>   BNE errorjoin
000261F0 <AmiBlitz3.ab3@8480>   MOVEA.l sourceline,A5
000261F2 <AmiBlitz3.ab3@8481>            MOVEA.l (A5),A5
000261F8 <AmiBlitz3.ab3@8482>            MOVE.l a5,sourceline
000261FE <AmiBlitz3.ab3@8483>            ADDQ.l #1,linenumat
00026202 <AmiBlitz3.ab3@8484>            LEA $9(A5),A5
00026204 <AmiBlitz3.ab3@8485>            MOVEQ #0,d0
00026208 <AmiBlitz3.ab3@8486>            BSR get1bytemain
0002620C <AmiBlitz3.ab3@8489>    CMP.b #32,(a5)+ ;for space after a ,
00026210 <AmiBlitz3.ab3@8490>    BEQ fetchpees__skip0_l10:
00026212 <AmiBlitz3.ab3@8491>    SUBQ.l #1,a5
00026216 <AmiBlitz3.ab3@8493>    CMP.w #"@@",(a5)                                        ;if merge
0002621A <AmiBlitz3.ab3@8494>    BNE fetchpees__skip0_l15
0002621E <AmiBlitz3.ab3@8495>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
00026224 <AmiBlitz3.ab3@8496>    JSR mergeline
00026228 <AmiBlitz3.ab3@8497>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
0002622A <AmiBlitz3.ab3@8517>       SUBQ.w #1,(A7)
0002622E <AmiBlitz3.ab3@8518>    BEQ.w fetchpees__done
00026232 <AmiBlitz3.ab3@8520>     CMP.w #$2C,D0
00026236 <AmiBlitz3.ab3@8522>    BNE overloadfunc
0002623A <AmiBlitz3.ab3@8523> BRA.w fetchpees__loop
0002623C <AmiBlitz3.ab3@8526>   ADDQ.w #2,A7
00026242 <AmiBlitz3.ab3@8527>   MOVE.w (A7)+,partostack
00026244 <AmiBlitz3.ab3@8528>   MOVE.w (A7)+,D1
0002624A <AmiBlitz3.ab3@8529>   CLR.b isconstantvalue
00026254 <AmiBlitz3.ab3@8530>   MOVE.l currentfunccall,lastfunction
0002625A <AmiBlitz3.ab3@8531>   CLR.b funccall
00026260 <AmiBlitz3.ab3@8532>   CLR.l currentfunccall
00026262 <AmiBlitz3.ab3@8533> RTS
00026268 <AmiBlitz3.ab3@8537>   CLR.b funccall
0002626E <AmiBlitz3.ab3@8538>   MOVE.w regnum,d1
00026274 <AmiBlitz3.ab3@8539>   MOVE.l currentfunccall,a4
00026278 <AmiBlitz3.ab3@8540>   CMP.b $20(a4),d1                                         ;increase if more pars
0002627C <AmiBlitz3.ab3@8541>   BLT notparerr
0002627E <AmiBlitz3.ab3@8544>   MOVE.b (a2)+,d2
00026286 <AmiBlitz3.ab3@8545>   ADD.w #1,parnum
0002628C <AmiBlitz3.ab3@8546>   TST.b fpu
00026290 <AmiBlitz3.ab3@8547>   BEQ 'nofpu
00026294 <AmiBlitz3.ab3@8548>   CMP.b #5,d2
00026298 <AmiBlitz3.ab3@8549>   BNE 'nofpu
0002629A <AmiBlitz3.ab3@8550>   MOVEQ #0,d1
000262A0 <AmiBlitz3.ab3@8551>   MOVE.w regnum,d1
000262A8 <AmiBlitz3.ab3@8552>   CMP.w #6,regnum
000262AC <AmiBlitz3.ab3@8553>   BLT 'nostack2
000262B0 <AmiBlitz3.ab3@8558>   MOVE.w #$2c3c,d1
000262B4 <AmiBlitz3.ab3@8559>   BSR writeword
000262BA <AmiBlitz3.ab3@8560>   MOVE.l #$bf800000,d1
000262BE <AmiBlitz3.ab3@8561>   BSR writelong
000262C2 <AmiBlitz3.ab3@8562>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000262C8 <AmiBlitz3.ab3@8563>   ADD.w parnum,d1
000262CE <AmiBlitz3.ab3@8564>   JSR Atokejsr
000262D4 <AmiBlitz3.ab3@8565>   TST.w dontwrite
000262D8 <AmiBlitz3.ab3@8566>   BNE 'l1
000262DE <AmiBlitz3.ab3@8567>   MOVE.l data1start,d1
000262E4 <AmiBlitz3.ab3@8568>   MOVE.l destpointer,a4
000262E8 <AmiBlitz3.ab3@8569>   ADD.l d1,-4(a4)
000262EE <AmiBlitz3.ab3@8570>   MOVE.l destpointer,d1
000262F0 <AmiBlitz3.ab3@8571>   SUBQ.l #4,d1
000262F6 <AmiBlitz3.ab3@8572>   SUB.l destbufferstart,d1
000262F8 <AmiBlitz3.ab3@8573>   MOVE.l d2,-(a7)
000262FA <AmiBlitz3.ab3@8574>   MOVE.l d1,d2
00026300 <AmiBlitz3.ab3@8575>   JSR addhunkoffset
00026302 <AmiBlitz3.ab3@8576>   MOVE.l (a7)+,d2
00026306 <AmiBlitz3.ab3@8577> BRA 'l1
00026308 <AmiBlitz3.ab3@8580>   ASL.l #7,d1
0002630E <AmiBlitz3.ab3@8581>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
00026312 <AmiBlitz3.ab3@8582>   BSR writelong
00026314 <AmiBlitz3.ab3@8583>   MOVEQ #-1,d1                                             ;-1
00026318 <AmiBlitz3.ab3@8584>   BSR writeword
0002631C <AmiBlitz3.ab3@8585> BRA 'l1
00026322 <AmiBlitz3.ab3@8588>   MOVE.w regnum,d1
0002632A <AmiBlitz3.ab3@8589>   CMP.w #6,regnum
0002632E <AmiBlitz3.ab3@8590>   BLT 'nostack
00026332 <AmiBlitz3.ab3@8595>   CMP.b #2,d2
00026336 <AmiBlitz3.ab3@8596>   BGT 'nw
0002633A <AmiBlitz3.ab3@8597> BRA 'nos
0002633E <AmiBlitz3.ab3@8606>   CMP.w #7,d2
00026342 <AmiBlitz3.ab3@8607>   BNE 'nos
00026348 <AmiBlitz3.ab3@8608>   ADDQ #4,a2offset
0002634E <AmiBlitz3.ab3@8610>     MOVE.l #$48780000,d1
00026352 <AmiBlitz3.ab3@8611>     BSR writelong
00026358 <AmiBlitz3.ab3@8612>     ADDQ.w #4,a2offset
0002635C <AmiBlitz3.ab3@8613>     MOVE.w #$2f3c,d1
00026360 <AmiBlitz3.ab3@8614>     BSR writeword
00026366 <AmiBlitz3.ab3@8615>     MOVE.l #-1,d1
0002636A <AmiBlitz3.ab3@8616>     BSR writelong
0002636E <AmiBlitz3.ab3@8617>   BRA 'l1
00026372 <AmiBlitz3.ab3@8621>   CMP.b #4,d2
00026376 <AmiBlitz3.ab3@8622>       BNE 'noq
0002637A <AmiBlitz3.ab3@8623>       MOVE.w #$2c3c,d1
0002637E <AmiBlitz3.ab3@8624>       BSR writeword
00026384 <AmiBlitz3.ab3@8625>       MOVE.l #$ffff0000,d1
00026388 <AmiBlitz3.ab3@8626>       BSR writelong
0002638C <AmiBlitz3.ab3@8627> BRA 'noq2
00026390 <AmiBlitz3.ab3@8630>      CMP.b #5,d2
00026394 <AmiBlitz3.ab3@8631>      BNE 'nof
00026398 <AmiBlitz3.ab3@8632>       MOVE.w #$2c3c,d1
0002639C <AmiBlitz3.ab3@8633>       BSR writeword
000263A2 <AmiBlitz3.ab3@8634>       MOVE.l #$800000c1,d1
000263A6 <AmiBlitz3.ab3@8635>       BSR writelong
000263AA <AmiBlitz3.ab3@8636> BRA 'noq2
000263AE <AmiBlitz3.ab3@8639>   MOVE.w #$7cff,d1
000263B2 <AmiBlitz3.ab3@8640>   BSR writeword
000263B6 <AmiBlitz3.ab3@8643>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
000263BC <AmiBlitz3.ab3@8644>   ADD.w parnum,d1
000263C2 <AmiBlitz3.ab3@8645>   JSR Atokejsr
000263C8 <AmiBlitz3.ab3@8646>    TST.w dontwrite
000263CC <AmiBlitz3.ab3@8647>    BNE 'l1
000263D2 <AmiBlitz3.ab3@8648>    MOVE.l data1start,d1
000263D8 <AmiBlitz3.ab3@8649>    MOVE.l destpointer,a4
000263DC <AmiBlitz3.ab3@8650>    ADD.l d1,-4(a4)
000263E2 <AmiBlitz3.ab3@8651>    MOVE.l destpointer,d1
000263E4 <AmiBlitz3.ab3@8652>    SUBQ.l #4,d1
000263EA <AmiBlitz3.ab3@8653>    SUB.l destbufferstart,d1
000263EC <AmiBlitz3.ab3@8654>    MOVE.l d2,-(a7)
000263EE <AmiBlitz3.ab3@8655>    MOVE.l d1,d2
000263F4 <AmiBlitz3.ab3@8656>    JSR addhunkoffset
000263F6 <AmiBlitz3.ab3@8657>    MOVE.l (a7)+,d2
000263FA <AmiBlitz3.ab3@8658> BRA 'l1
000263FC <AmiBlitz3.ab3@8661>   ASL.l #8,d1
000263FE <AmiBlitz3.ab3@8662>   ASL.l #1,d1
00026404 <AmiBlitz3.ab3@8663>   OR.l #$203c,d1                                           ;-1
00026408 <AmiBlitz3.ab3@8664>   BSR writeword
0002640E <AmiBlitz3.ab3@8665>   MOVE.l #-1,d1
00026412 <AmiBlitz3.ab3@8666>   CMP.b #4,d2
00026416 <AmiBlitz3.ab3@8667>   BNE 'nq1
0002641C <AmiBlitz3.ab3@8668>   MOVE.l #$ffff0000,d1
00026420 <AmiBlitz3.ab3@8671>   CMP.b #5,d2
00026424 <AmiBlitz3.ab3@8672>   BNE 'nof2
0002642A <AmiBlitz3.ab3@8673>   TST.b fpu
0002642E <AmiBlitz3.ab3@8674>   BNE 'nof2
00026434 <AmiBlitz3.ab3@8675>   MOVE.l #$800000c1,d1
00026438 <AmiBlitz3.ab3@8678>    BSR writelong
0002643C <AmiBlitz3.ab3@8679>    CMP.b #7,d2
00026440 <AmiBlitz3.ab3@8680>    BNE 'l1
00026446 <AmiBlitz3.ab3@8682>      MOVE.l #$48780000,d1
0002644A <AmiBlitz3.ab3@8683>      BSR writelong
00026450 <AmiBlitz3.ab3@8685>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
00026456 <AmiBlitz3.ab3@8686>    MOVE.l #$594f,d1                                        ; subq #4,a7
0002645A <AmiBlitz3.ab3@8687>    BSR writeword
0002645C <AmiBlitz3.ab3@8690>    SUBQ.w #1,(A7)
00026460 <AmiBlitz3.ab3@8691>    BEQ.w fetchpees__done
00026466 <AmiBlitz3.ab3@8692>    ADDQ.w #1,regnum
0002646A <AmiBlitz3.ab3@8693> BRA 'ol2
0002646C <AmiBlitz3.ab3@8696>    MOVE.w D2,D1
00026470 <AmiBlitz3.ab3@8697>    ANDI.w #$40,D1
00026476 <AmiBlitz3.ab3@8698>    MOVE.b D1,partostack
00026478 <AmiBlitz3.ab3@8699>    TST.b D2
0002647C <AmiBlitz3.ab3@8700>     BMI.w handlevara
00026480 <AmiBlitz3.ab3@8701>    BTST #$5,D2
00026484 <AmiBlitz3.ab3@8702>     BNE.w handlearr
0002648A <AmiBlitz3.ab3@8703>     MOVE.w regnumstore,-(a7)
00026490 <AmiBlitz3.ab3@8704>     MOVE.w tempregnum,-(a7)
00026496 <AmiBlitz3.ab3@8705>     MOVE.w parnum,-(a7)
0002649A <AmiBlitz3.ab3@8706>     BSR.w getap                                        ;recursive entry
000264A0 <AmiBlitz3.ab3@8707>     MOVE.w (a7)+,parnum
000264A6 <AmiBlitz3.ab3@8708>     MOVE.w (a7)+,tempregnum
000264AC <AmiBlitz3.ab3@8709>     MOVE.w (a7)+,regnumstore
000264B0 <AmiBlitz3.ab3@8712>     MOVE.w partostack(PC),D1
000264B4 <AmiBlitz3.ab3@8713>     BEQ.w JL_0_6886
000264BA <AmiBlitz3.ab3@8716>    ADDQ.w #4,a2offset
000264C0 <AmiBlitz3.ab3@8719>    MOVE.w pushdn,D1
000264C6 <AmiBlitz3.ab3@8720>    OR.w regnum,D1
000264CA <AmiBlitz3.ab3@8721>    CMP.w #$3,D2
000264CE <AmiBlitz3.ab3@8722>     BCC.w JL_0_6880
000264D4 <AmiBlitz3.ab3@8723>    SUBQ.w #2,a2offset
000264D8 <AmiBlitz3.ab3@8724>    ORI.w #$1000,D1
000264DC <AmiBlitz3.ab3@8725>    BSR.w writeword
000264DE <AmiBlitz3.ab3@8726> RTS
000264E2 <AmiBlitz3.ab3@8729>   CMP.b #7,d2
000264E6 <AmiBlitz3.ab3@8730>    BNE 'l10
000264EE <AmiBlitz3.ab3@8731>    CMP.b #2,optistring
000264F4 <AmiBlitz3.ab3@8735>   TST.b iee
000264F8 <AmiBlitz3.ab3@8736>   BEQ 'old
000264FC <AmiBlitz3.ab3@8737>   CMP.b #5,d2
00026500 <AmiBlitz3.ab3@8738>   BNE 'old
00026504 <AmiBlitz3.ab3@8741>   BSR.w writeword                                          ;write val to stack
00026506 <AmiBlitz3.ab3@8742> RTS
0002650C <AmiBlitz3.ab3@8745>   SUBQ.w #4,a2offset
0002650E <AmiBlitz3.ab3@8746> RTS
00026514 <AmiBlitz3.ab3@8749>   ADDQ.w #1,regnum
00026516 <AmiBlitz3.ab3@8750> RTS
00026518 <AmiBlitz3.ab3@8754>   MOVEQ.l #$03,D2
0002651C <AmiBlitz3.ab3@8755> BRA.w JL_0_6854
00026520 <AmiBlitz3.ab3@8759>   ANDI.w #$7,D2
00026522 <AmiBlitz3.ab3@8760>   MOVE.w D2,-(A7)
00026526 <AmiBlitz3.ab3@8761>    BSR.w JL_0_A916
0002652A <AmiBlitz3.ab3@8762>   CMP.b #$7,D2                                             ;ignore pnt to $
0002652E <AmiBlitz3.ab3@8763>    BEQ.w JL_0_68C0
00026532 <AmiBlitz3.ab3@8764>   BTST #$E,D2
00026536 <AmiBlitz3.ab3@8765>    BEQ.w JL_0_68B6
0002653A <AmiBlitz3.ab3@8766>   MOVE.b #$3,D2                                            ;pointer to long
0002653E <AmiBlitz3.ab3@8767> BRA.w JL_0_68C0
00026540 <AmiBlitz3.ab3@8770>    TST.b D2
00026544 <AmiBlitz3.ab3@8771>    BNE.w JL_0_68C0
00026548 <AmiBlitz3.ab3@8772>   MOVE.b #$3,D2
0002654A <AmiBlitz3.ab3@8775>   MOVE.w (A7)+,D3
0002654C <AmiBlitz3.ab3@8776>   TST.b D3
00026550 <AmiBlitz3.ab3@8777>    BEQ.w JL_0_68D2
00026552 <AmiBlitz3.ab3@8778>   CMP.b D2,D3
00026556 <AmiBlitz3.ab3@8779>    BEQ.w putalp
0002655A <AmiBlitz3.ab3@8780> BRA.w mismatcherr
00026560 <AmiBlitz3.ab3@8783>   ADDQ.w #2,a2offset
00026564 <AmiBlitz3.ab3@8784>   MOVE.w ptype(PC),D1
00026568 <AmiBlitz3.ab3@8785>    BSR.w writeword
0002656A <AmiBlitz3.ab3@8786>   MOVEQ.l #$00,D1
0002656C <AmiBlitz3.ab3@8787>   MOVE.b D2,D1
00026570 <AmiBlitz3.ab3@8788>    BSR.w writeword
00026574 <AmiBlitz3.ab3@8789> BRA.w putalp
00026576 <AmiBlitz3.ab3@8792>    MOVE.w D2,-(A7)
0002657A <AmiBlitz3.ab3@8793>    BSR.w JL_0_694E
00026580 <AmiBlitz3.ab3@8794>   BTST #$4,$1(A7)
00026584 <AmiBlitz3.ab3@8795>    BEQ.w JL_0_6900
00026588 <AmiBlitz3.ab3@8796>    BSR.w JL_0_699A
0002658E <AmiBlitz3.ab3@8799>    BTST #$3,$1(A7)
00026592 <AmiBlitz3.ab3@8800>    BEQ.w JL_0_690E
00026596 <AmiBlitz3.ab3@8801>    BSR.w sendtype
00026598 <AmiBlitz3.ab3@8804>    MOVE.w (A7)+,D2
0002659C <AmiBlitz3.ab3@8805> BRA.w get1bytemain
000265A2 <AmiBlitz3.ab3@8808>   MOVE.w regnum,D1
000265A4 <AmiBlitz3.ab3@8809>   LSL.w #8,D1
000265A6 <AmiBlitz3.ab3@8810>   LSL.w #1,D1
000265AA <AmiBlitz3.ab3@8811>   ORI.w #$7000,D1
000265B0 <AmiBlitz3.ab3@8812>   BTST #$0,$7(A3)
000265B4 <AmiBlitz3.ab3@8813>    BNE.w JL_0_6946                                         ;A Pointer
000265BC <AmiBlitz3.ab3@8814>   CMPI.l #$100,$4(A2)
000265C0 <AmiBlitz3.ab3@8815>    BCC.w arrerr1                                           ;illegal type to send
000265C4 <AmiBlitz3.ab3@8816>   MOVE.b $7(A2),D1
000265C8 <AmiBlitz3.ab3@8819>   BSR.w writeword                                          ;moveq #type,d regat
000265CA <AmiBlitz3.ab3@8820>   MOVEQ.l #$02,D2                                          ;just a word.
000265CE <AmiBlitz3.ab3@8821> BRA.w JL_0_685C
000265D2 <AmiBlitz3.ab3@8824>   MOVE.b #$3,D1
000265D6 <AmiBlitz3.ab3@8825> BRA.w JL_0_693C
000265DA <AmiBlitz3.ab3@8829>    BSR.w get1bytemain                                      ;write array paramter code
000265DE <AmiBlitz3.ab3@8830>    BSR.w getparameter
000265E6 <AmiBlitz3.ab3@8831>   BTST #$1,flagmask+1
000265EA <AmiBlitz3.ab3@8832>    BEQ.w syntaxerr
000265EE <AmiBlitz3.ab3@8833>    BSR.w JL_0_8E3C
000265F2 <AmiBlitz3.ab3@8834>    BSR.w get1bytemain
000265F6 <AmiBlitz3.ab3@8835>   CMP.w #$29,D0                                            ;we just want a() or whatever
000265FA <AmiBlitz3.ab3@8836>    BNE.w syntaxerr
00026600 <AmiBlitz3.ab3@8837>   MOVE.w notshared,D1
00026604 <AmiBlitz3.ab3@8838>    BNE.w noarrayerr
0002660A <AmiBlitz3.ab3@8839>   MOVE.w regnum,D1
0002660C <AmiBlitz3.ab3@8840>   LSL.w #8,D1
0002660E <AmiBlitz3.ab3@8841>   LSL.w #1,D1
00026612 <AmiBlitz3.ab3@8842>   OR.w fbase(PC),D1
00026618 <AmiBlitz3.ab3@8843>    TST.b varmode
0002661C <AmiBlitz3.ab3@8844>    BEQ 'l1
00026620 <AmiBlitz3.ab3@8845>    BCLR #0,d1
00026624 <AmiBlitz3.ab3@8848>    BSR.w writeword
00026628 <AmiBlitz3.ab3@8849>   MOVE.w $4(A3),D1
0002662C <AmiBlitz3.ab3@8850>    BSR.w writeword
00026630 <AmiBlitz3.ab3@8851> BRA.w putalp
00026636 <AmiBlitz3.ab3@8855>   MOVE.w regnum,D1
00026638 <AmiBlitz3.ab3@8856>   LSL.w #8,D1
0002663A <AmiBlitz3.ab3@8857>   LSL.w #1,D1
0002663E <AmiBlitz3.ab3@8858>   OR.w fbase(PC),D1
00026644 <AmiBlitz3.ab3@8859>    TST.b varmode
00026648 <AmiBlitz3.ab3@8860>    BEQ 'l1
0002664C <AmiBlitz3.ab3@8861>    BCLR #0,d1
00026650 <AmiBlitz3.ab3@8864>    BSR.w writeword
00026654 <AmiBlitz3.ab3@8865>   MOVE.w $8(A3),D1
00026656 <AmiBlitz3.ab3@8866>   LSL.w #2,D1
0002665C <AmiBlitz3.ab3@8867>   MOVE.w varmode,D2
00026660 <AmiBlitz3.ab3@8868>    BEQ.w JL_0_69BE
00026662 <AmiBlitz3.ab3@8869>   NEG.w D1
00026666 <AmiBlitz3.ab3@8872>    ADD.w $4(A3),D1
0002666A <AmiBlitz3.ab3@8873>    BSR.w writeword
00026670 <AmiBlitz3.ab3@8874>   MOVE.w regnum,D1
00026672 <AmiBlitz3.ab3@8875>   LSL.w #8,D1
00026674 <AmiBlitz3.ab3@8876>   LSL.w #1,D1
00026678 <AmiBlitz3.ab3@8877>   MOVE.w partostack(PC),D2
0002667C <AmiBlitz3.ab3@8878>    BNE.w JL_0_69F4
00026684 <AmiBlitz3.ab3@8879>   CMPI.w #$7,regnum
00026688 <AmiBlitz3.ab3@8880>    BCC.w JL_0_69F4
0002668C <AmiBlitz3.ab3@8881>   OR.w pushlast(PC),D1
00026692 <AmiBlitz3.ab3@8882>   MOVE.w regnum,D2
00026694 <AmiBlitz3.ab3@8883>   SUBQ.w #1,D2
00026696 <AmiBlitz3.ab3@8884>   OR.w D2,D1
0002669A <AmiBlitz3.ab3@8885> BRA.w JL_0_69F8
0002669E <AmiBlitz3.ab3@8888>   OR.w pushadd(PC),D1
000266A2 <AmiBlitz3.ab3@8891>   BSR.w writeword
000266AA <AmiBlitz3.ab3@8892>   MOVE.b #$1,partostack
000266AE <AmiBlitz3.ab3@8893> BRA.w putalp
000266B2 <AmiBlitz3.ab3@8897> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
000266B4 <AmiBlitz3.ab3@8898> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
000266B6 <AmiBlitz3.ab3@8899> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
000266BA <AmiBlitz3.ab3@8904>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
000266BE <AmiBlitz3.ab3@8905>    BEQ.w evalu2
000266C2 <AmiBlitz3.ab3@8906> BRA.w eval
000266C8 <AmiBlitz3.ab3@8910>   MOVEA.l libpointer,A1
000266CC <AmiBlitz3.ab3@8913>    CMPA.w #$0,A1
000266D0 <AmiBlitz3.ab3@8914>    BEQ.w resetlibs__done
000266D6 <AmiBlitz3.ab3@8915>   MOVE.w #-1,$A(A1)
000266DC <AmiBlitz3.ab3@8916>   BCLR #$7,$C(A1)
000266DE <AmiBlitz3.ab3@8917>   MOVEA.l (A1),A1
000266E2 <AmiBlitz3.ab3@8918> BRA.w resetlibs__loop
000266E4 <AmiBlitz3.ab3@8921> RTS
000266E8 <AmiBlitz3.ab3@8925>   MOVE.w #$FFFE,D1
000266EC <AmiBlitz3.ab3@8928>    BSR.w JL_0_6F38
000266F2 <AmiBlitz3.ab3@8931>   TST.w cfetchmode
000266F6 <AmiBlitz3.ab3@8932>    BEQ.w uselib3__noconst
000266FC <AmiBlitz3.ab3@8933>   BTST #$6,$C(A1)
00026700 <AmiBlitz3.ab3@8934>    BNE.w uselib3__constok
00026704 <AmiBlitz3.ab3@8935> BRA.w badconerr                                            ;Can't use this Library!
00026706 <AmiBlitz3.ab3@8938> RTS
0002670C <AmiBlitz3.ab3@8941>    BSET #$7,$C(A1)
00026710 <AmiBlitz3.ab3@8942>    BNE.w JL_0_6C74                                         ;already done....
00026716 <AmiBlitz3.ab3@8943>    CMPI.w #-1,$A(A1)
0002671A <AmiBlitz3.ab3@8944>    BNE.w JL_0_6C74                                         ;something already here
00026720 <AmiBlitz3.ab3@8948>    TST.w dirmode
00026724 <AmiBlitz3.ab3@8949>    BEQ.b JL_0_6A86
0002672A <AmiBlitz3.ab3@8950>    TST.b exdebug
0002672E <AmiBlitz3.ab3@8951>    BEQ 'l1
00026732 <AmiBlitz3.ab3@8952> BRA.b JL_0_6A86
00026738 <AmiBlitz3.ab3@8955>   BCLR #$7,$C(A1)
0002673C <AmiBlitz3.ab3@8956> BRA.w dirliberr
00026742 <AmiBlitz3.ab3@8959>   MOVE.b debugmode,-(a7)
00026746 <AmiBlitz3.ab3@8960>   MOVEM.l D1/A0/A2,-(A7)
0002674E <AmiBlitz3.ab3@8966>   BTST #$7,use_debugger
00026752 <AmiBlitz3.ab3@8967>   BNE 'debugon
00026754 <AmiBlitz3.ab3@8968>   CLR.w D1
00026758 <AmiBlitz3.ab3@8969> BRA.b 'debugoff
0002675A <AmiBlitz3.ab3@8972>   SNE D1
00026760 <AmiBlitz3.ab3@8975>   MOVE.b d1,debugmode
00026762 <AmiBlitz3.ab3@8979>   MOVEA.l A1,A0
00026766 <AmiBlitz3.ab3@8980>   ADDA.l $12(A1),A0
0002676A <AmiBlitz3.ab3@8981>   TST.w -$2(A0)
0002676E <AmiBlitz3.ab3@8982>    BEQ.w JL_0_6AD2
00026772 <AmiBlitz3.ab3@8983>   MOVEM.l A0-A1,-(A7)
00026776 <AmiBlitz3.ab3@8984>   MOVE.w #$FB4F,D1
0002677A <AmiBlitz3.ab3@8985>    BSR.w uselib
0002677E <AmiBlitz3.ab3@8986>   MOVEM.l (A7)+,A0-A1
00026784 <AmiBlitz3.ab3@8987>   ADDQ.w #1,globalvarpointer
0002678C <AmiBlitz3.ab3@8988>   BCLR #$0,globalvarpointer+1
00026794 <AmiBlitz3.ab3@8989>   MOVE.w globalvarpointer,-$6(A0)
0002679A <AmiBlitz3.ab3@8990>   ADDQ.w #4,globalvarpointer
0002679E <AmiBlitz3.ab3@8991>   TST.l -$E(A0)
000267A2 <AmiBlitz3.ab3@8992>    BEQ.w JL_0_6AD2
000267A8 <AmiBlitz3.ab3@8993>   ADDQ.w #4,globalvarpointer
000267B0 <AmiBlitz3.ab3@8996>   MOVE.l libend,$28(A1)
000267B2 <AmiBlitz3.ab3@8997>   MOVEA.l A1,A0
000267B6 <AmiBlitz3.ab3@8998>   ADDA.l $12(A1),A0
000267B8 <AmiBlitz3.ab3@8999>   MOVE.l A1,D1
000267BC <AmiBlitz3.ab3@9000>   ADD.l $6(A1),D1
000267C0 <AmiBlitz3.ab3@9001>   TST.l $2C(A1)
000267C4 <AmiBlitz3.ab3@9002>    BEQ.w JL_0_6AFE
000267CA <AmiBlitz3.ab3@9004>   TST.b debugmode
000267CE <AmiBlitz3.ab3@9005>    BNE.w JL_0_6AFE
000267D0 <AmiBlitz3.ab3@9006>   MOVE.l A1,D1
000267D4 <AmiBlitz3.ab3@9007>   ADD.l $2C(A1),D1
000267DA <AmiBlitz3.ab3@9010>   MOVEA.l libend,A2
000267E0 <AmiBlitz3.ab3@9013>   CMPA.l data1start,A2
000267E4 <AmiBlitz3.ab3@9014>    BCS.w JL_0_6B24
000267EC <AmiBlitz3.ab3@9015>   MOVE.w #$FFFF,dontwrite
000267EE <AmiBlitz3.ab3@9018>   ADDQ.w #2,A0
000267F0 <AmiBlitz3.ab3@9019>   ADDQ.w #2,A2
000267F2 <AmiBlitz3.ab3@9020>   CMPA.l D1,A0
000267F6 <AmiBlitz3.ab3@9021>    BCS.w JL_0_6B16
000267FA <AmiBlitz3.ab3@9022> BRA.w JL_0_6B2C
000267FC <AmiBlitz3.ab3@9025>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
000267FE <AmiBlitz3.ab3@9026>   CMPA.l D1,A0
00026802 <AmiBlitz3.ab3@9027>    BCS.w JL_0_6B04
00026808 <AmiBlitz3.ab3@9030>   MOVE.l A2,libend
0002680C <AmiBlitz3.ab3@9031>   MOVE.l $20(A1),D1
00026810 <AmiBlitz3.ab3@9032>    BEQ.w JL_0_6BB8
00026814 <AmiBlitz3.ab3@9033>   MOVEM.l D0/D2-D3,-(A7)
00026818 <AmiBlitz3.ab3@9034>   MOVEA.l $24(A1),A0
0002681A <AmiBlitz3.ab3@9035>   MOVEQ.l #$00,D3
0002681C <AmiBlitz3.ab3@9038>   MOVE.l (A0)+,D2
00026820 <AmiBlitz3.ab3@9039>   TST.l $2C(A1)
00026824 <AmiBlitz3.ab3@9040>    BEQ.w JL_0_6B60
0002682A <AmiBlitz3.ab3@9041>   TST.b debugmode
0002682E <AmiBlitz3.ab3@9042>    BNE.w JL_0_6B60
00026832 <AmiBlitz3.ab3@9043>   CMP.l $2C(A1),D2
00026836 <AmiBlitz3.ab3@9044>    BCC.w JL_0_6BA0
0002683A <AmiBlitz3.ab3@9047>   TST.w $0(A1,D2.L)
0002683E <AmiBlitz3.ab3@9048>    BPL.w JL_0_6B72
00026840 <AmiBlitz3.ab3@9049>   TST.l D3
00026844 <AmiBlitz3.ab3@9050>    BNE.w JL_0_6B72
00026846 <AmiBlitz3.ab3@9051>   MOVE.l A0,D0
00026848 <AmiBlitz3.ab3@9052>   MOVE.l D1,D3
0002684C <AmiBlitz3.ab3@9055>   SUB.l $12(A1),D2
00026850 <AmiBlitz3.ab3@9056>    BMI.w JL_0_6BA0
00026854 <AmiBlitz3.ab3@9057>   ADD.l $28(A1),D2
00026856 <AmiBlitz3.ab3@9058>   MOVE.l D2,-(A7)
0002685C <AmiBlitz3.ab3@9059>   SUB.l destbufferstart,D2
00026860 <AmiBlitz3.ab3@9060>    BSR.w addhunkoffset
00026862 <AmiBlitz3.ab3@9061>   MOVEA.l (A7)+,A2
00026868 <AmiBlitz3.ab3@9062>   TST.w dontwrite
0002686C <AmiBlitz3.ab3@9063>    BNE.w JL_0_6BA0
00026870 <AmiBlitz3.ab3@9064>   MOVE.l $28(A1),D2
00026874 <AmiBlitz3.ab3@9065>   SUB.l $12(A1),D2
00026876 <AmiBlitz3.ab3@9066>   ADD.l D2,(A2)
00026878 <AmiBlitz3.ab3@9069>    SUBQ.l #1,D1
0002687C <AmiBlitz3.ab3@9070>    BNE.w JL_0_6B44
0002687E <AmiBlitz3.ab3@9071>   MOVE.l D3,D2
00026882 <AmiBlitz3.ab3@9072>    BEQ.w JL_0_6BB4
00026884 <AmiBlitz3.ab3@9073>   MOVEA.l D0,A2
00026886 <AmiBlitz3.ab3@9074>   SUBQ.w #4,A2
0002688A <AmiBlitz3.ab3@9075>    BSR.w JL_0_6E34
0002688E <AmiBlitz3.ab3@9078>    MOVEM.l (A7)+,D0/D2-D3
00026892 <AmiBlitz3.ab3@9081>    MOVEM.l (A7)+,D1/A0/A2
00026896 <AmiBlitz3.ab3@9082>   MOVEM.l D1-D2,-(A7)
0002689A <AmiBlitz3.ab3@9083>   TST.w $1A(A1)
0002689E <AmiBlitz3.ab3@9084>    BNE.w JL_0_6BD0
000268A2 <AmiBlitz3.ab3@9085>   CLR.w $A(A1)
000268A6 <AmiBlitz3.ab3@9086> BRA.w JL_0_6C5E
000268AC <AmiBlitz3.ab3@9089>   ADDQ.w #1,globalvarpointer
000268B4 <AmiBlitz3.ab3@9090>   BCLR #$0,globalvarpointer+1
000268BC <AmiBlitz3.ab3@9091>   MOVE.w globalvarpointer,$A(A1)
000268C0 <AmiBlitz3.ab3@9092>   CMP.w #-$12D,D1
000268C4 <AmiBlitz3.ab3@9093>    BNE.w JL_0_6C16
000268CC <AmiBlitz3.ab3@9094>   MOVE.w $A(A1),movestdn+2
000268D4 <AmiBlitz3.ab3@9095>   MOVE.w $A(A1),pusha3+2
000268DC <AmiBlitz3.ab3@9096>   MOVE.w $A(A1),pusha32+2
000268E4 <AmiBlitz3.ab3@9097>   MOVE.w $A(A1),pulla3+2
000268EC <AmiBlitz3.ab3@9098>   MOVE.w $A(A1),geta3+2
000268F0 <AmiBlitz3.ab3@9101>    CMP.w #-$3E9,D1
000268F4 <AmiBlitz3.ab3@9102>    BNE.w JL_0_6C3E
000268FC <AmiBlitz3.ab3@9103>   MOVE.w $A(A1),dataget+2
00026904 <AmiBlitz3.ab3@9104>   MOVE.w $A(A1),dataput+2
0002690C <AmiBlitz3.ab3@9105>   MOVE.w $A(A1),rescode+6
00026914 <AmiBlitz3.ab3@9106>   MOVE.w $A(A1),rescode2+2
0002691A <AmiBlitz3.ab3@9109>   ADDQ.w #2,globalvarpointer
0002691E <AmiBlitz3.ab3@9110>   TST.w $1A(A1)
00026922 <AmiBlitz3.ab3@9111>    BMI.w JL_0_6C52
00026928 <AmiBlitz3.ab3@9112>   ADDQ.w #2,globalvarpointer
0002692C <AmiBlitz3.ab3@9115>   MOVEM.l D1/A1,-(A7)
00026930 <AmiBlitz3.ab3@9116>   BSR.w uselib2
00026934 <AmiBlitz3.ab3@9117>   MOVEM.l (A7)+,D1/A1
00026936 <AmiBlitz3.ab3@9120>   MOVE.w D1,D2
0002693A <AmiBlitz3.ab3@9121>   MOVE.l $16(A1),D1
0002693E <AmiBlitz3.ab3@9122>    BSR.w uselib2_org
00026942 <AmiBlitz3.ab3@9123>   MOVE.l $1C(A1),D1
00026946 <AmiBlitz3.ab3@9124>    BSR.w uselib2_org
0002694A <AmiBlitz3.ab3@9125>   MOVEM.l (A7)+,D1-D2
00026950 <AmiBlitz3.ab3@9127>   MOVE.b (a7)+,debugmode
00026952 <AmiBlitz3.ab3@9130> RTS
00026954 <AmiBlitz3.ab3@9134>   MOVEQ.l #$00,D2
0002695A <AmiBlitz3.ab3@9137>   MOVEA.l tokeslist,A2
0002695C <AmiBlitz3.ab3@9138>   CMPA.l D2,A2
00026960 <AmiBlitz3.ab3@9139>    BEQ.w JL_0_6CE0
00026962 <AmiBlitz3.ab3@9140>   MOVE.l A2,-(A7)
00026964 <AmiBlitz3.ab3@9143>   MOVEQ.l #$00,D3
00026968 <AmiBlitz3.ab3@9146>   MOVEA.l $8(A2),A3
0002696A <AmiBlitz3.ab3@9147>   CMPA.l D3,A3
0002696E <AmiBlitz3.ab3@9148>    BEQ.w JL_0_6CD2
00026970 <AmiBlitz3.ab3@9149>   MOVE.l A3,-(A7)
00026974 <AmiBlitz3.ab3@9150>   MOVEM.l D2-D3/A2-A3,-(A7)
00026978 <AmiBlitz3.ab3@9151>   MOVE.w $4(A2),D1
0002697C <AmiBlitz3.ab3@9152>   MOVE.w $6(A2),D2
00026980 <AmiBlitz3.ab3@9153>    BSR.w JL_0_6CE2
00026984 <AmiBlitz3.ab3@9154>   MOVEM.l (A7)+,D2-D3/A2-A3
0002698A <AmiBlitz3.ab3@9155>   MOVE.w dontwrite,D0
0002698E <AmiBlitz3.ab3@9156>    BEQ.w JL_0_6CBE
00026990 <AmiBlitz3.ab3@9159>   MOVEA.l (A3),A3
00026992 <AmiBlitz3.ab3@9160>   CMPA.l D3,A3
00026996 <AmiBlitz3.ab3@9161>    BNE.w JL_0_6CB2
0002699A <AmiBlitz3.ab3@9162> BRA.w JL_0_6CCC
0002699E <AmiBlitz3.ab3@9165>   MOVEA.l $4(A3),A0
000269A0 <AmiBlitz3.ab3@9166>   MOVE.l D7,(A0)
000269A2 <AmiBlitz3.ab3@9167>   MOVEA.l (A3),A3
000269A4 <AmiBlitz3.ab3@9168>   CMPA.l D3,A3
000269A8 <AmiBlitz3.ab3@9169>    BNE.w JL_0_6CBE
000269AA <AmiBlitz3.ab3@9172>   MOVE.l (A7)+,D3
000269AE <AmiBlitz3.ab3@9173> BRA.w JL_0_6C88
000269B0 <AmiBlitz3.ab3@9176>    MOVEA.l (A2),A2
000269B2 <AmiBlitz3.ab3@9177>   CMPA.l D2,A2
000269B6 <AmiBlitz3.ab3@9178>    BNE.w JL_0_6C86
000269B8 <AmiBlitz3.ab3@9179>   MOVE.l (A7)+,D2
000269BC <AmiBlitz3.ab3@9180> BRA.w JL_0_6C78
000269BE <AmiBlitz3.ab3@9183> RTS
000269C0 <AmiBlitz3.ab3@9187>   MOVE.w D2,-(A7)
000269C4 <AmiBlitz3.ab3@9188>    BSR.w searchinstr
000269C6 <AmiBlitz3.ab3@9189>   MOVE.w (A7)+,D2
000269CE <AmiBlitz3.ab3@9190>   BCLR #$7,blitzmode
000269D2 <AmiBlitz3.ab3@9191>   BCLR #$E,D2
000269D6 <AmiBlitz3.ab3@9192>    BEQ.w JL_0_6D02
000269DE <AmiBlitz3.ab3@9193>   BSET #$7,blitzmode
000269E0 <AmiBlitz3.ab3@9196>   TST.w (A3)
000269E4 <AmiBlitz3.ab3@9197>    BEQ.w JL_0_6DAC
000269EA <AmiBlitz3.ab3@9198>   BTST #$2,$1(A3)
000269EE <AmiBlitz3.ab3@9199>    BNE.w tokeerr
000269F4 <AmiBlitz3.ab3@9200>   BTST #$3,$1(A3)
000269F8 <AmiBlitz3.ab3@9201>    BNE.w tokeerr
000269FC <AmiBlitz3.ab3@9202>   LEA $6(A3),A3
000269FE <AmiBlitz3.ab3@9205>   MOVE.w (A3)+,D0
00026A02 <AmiBlitz3.ab3@9206>    BMI.w tokeerr
00026A06 <AmiBlitz3.ab3@9207>   ANDI.w #$FF,D0
00026A08 <AmiBlitz3.ab3@9208>   ADDA.w D0,A3
00026A0A <AmiBlitz3.ab3@9209>   ADDQ.w #1,A3
00026A0C <AmiBlitz3.ab3@9210>   EXG.l D0,A3
00026A10 <AmiBlitz3.ab3@9211>   BCLR #$0,D0
00026A12 <AmiBlitz3.ab3@9212>   EXG.l D0,A3
00026A14 <AmiBlitz3.ab3@9213>   SUBQ.w #1,D2
00026A18 <AmiBlitz3.ab3@9214>    BPL.w JL_0_6D98
00026A1A <AmiBlitz3.ab3@9215>   TST.w (A3)
00026A1E <AmiBlitz3.ab3@9216>    BNE.w JL_0_6D76
00026A22 <AmiBlitz3.ab3@9217>   MOVE.l $2(A3),D0
00026A26 <AmiBlitz3.ab3@9218>   OR.l $A(A3),D0
00026A2A <AmiBlitz3.ab3@9219>    BNE.w JL_0_6D76
00026A30 <AmiBlitz3.ab3@9220>   BTST #$0,$9(A3)
00026A34 <AmiBlitz3.ab3@9221>    BNE.w JL_0_6D76
00026A38 <AmiBlitz3.ab3@9222>   MOVE.l $6(A3),D7
00026A3C <AmiBlitz3.ab3@9223>   MOVE.w $0(A2,D7.L),D0
00026A40 <AmiBlitz3.ab3@9224>   ANDI.w #$F000,D0
00026A44 <AmiBlitz3.ab3@9225>   CMP.w #-$6000,D0
00026A48 <AmiBlitz3.ab3@9226>    BEQ.w JL_0_6D76
00026A4C <AmiBlitz3.ab3@9229>   SUB.l $12(A2),D7
00026A50 <AmiBlitz3.ab3@9230>   ADD.l $28(A2),D7
00026A52 <AmiBlitz3.ab3@9231> RTS
00026A58 <AmiBlitz3.ab3@9235>   LEA cutejsr,A0
00026A5E <AmiBlitz3.ab3@9238>   MOVE.l destpointer,-(A7)
00026A66 <AmiBlitz3.ab3@9239>   MOVE.w #$FFFF,lasta6
00026A68 <AmiBlitz3.ab3@9242>    JSR (A0)
00026A6C <AmiBlitz3.ab3@9243>   MOVE.w #$4E75,D1
00026A70 <AmiBlitz3.ab3@9244>    BSR.w writeword
00026A72 <AmiBlitz3.ab3@9245>   MOVE.l (A7)+,D7
00026A74 <AmiBlitz3.ab3@9246> RTS
00026A76 <AmiBlitz3.ab3@9250>   TST.w (A3)+
00026A7A <AmiBlitz3.ab3@9251>    BEQ.w JL_0_6DA4
00026A7C <AmiBlitz3.ab3@9252>   ADDQ.w #2,A3
00026A80 <AmiBlitz3.ab3@9253> BRA.w JL_0_6D98
00026A84 <AmiBlitz3.ab3@9256>   LEA $C(A3),A3
00026A88 <AmiBlitz3.ab3@9257> BRA.w JL_0_6D20
00026A8A <AmiBlitz3.ab3@9261>   TST.w D2
00026A8E <AmiBlitz3.ab3@9262>    BNE.w tokeerr
00026A92 <AmiBlitz3.ab3@9263>   TST.w $6(A3)
00026A96 <AmiBlitz3.ab3@9264>    BNE.w JL_0_6DE4
00026A9A <AmiBlitz3.ab3@9265>   MOVE.l $8(A3),D0
00026A9E <AmiBlitz3.ab3@9266>   OR.l $10(A3),D0
00026AA2 <AmiBlitz3.ab3@9267>    BNE.w JL_0_6DE4
00026AA8 <AmiBlitz3.ab3@9268>   BTST #$0,$F(A3)
00026AAC <AmiBlitz3.ab3@9269>    BNE.w JL_0_6DE4
00026AB0 <AmiBlitz3.ab3@9270>   MOVE.l $C(A3),D7
00026AB4 <AmiBlitz3.ab3@9271>   MOVE.w $0(A2,D7.L),D0
00026AB8 <AmiBlitz3.ab3@9272>   ANDI.w #$F000,D0
00026ABC <AmiBlitz3.ab3@9273>   CMP.w #-$6000,D0
00026AC0 <AmiBlitz3.ab3@9274>    BNE.w JL_0_6D6C
00026AC2 <AmiBlitz3.ab3@9277>   MOVE.l A3,D1
00026AC4 <AmiBlitz3.ab3@9278>   SUB.l A2,D1
00026ACA <AmiBlitz3.ab3@9279>   LEA Amakelibsub,A0
00026ACE <AmiBlitz3.ab3@9280> BRA.w JL_0_6D7C
00026AD4 <AmiBlitz3.ab3@9284>   MOVEA.l _execbase,A6
00026ADA <AmiBlitz3.ab3@9285>   MOVEA.l tokeslist,A2
00026AE0 <AmiBlitz3.ab3@9286>   CLR.l tokeslist
00026AE4 <AmiBlitz3.ab3@9289>     CMPA.w #$0,A2
00026AE8 <AmiBlitz3.ab3@9290>      BEQ.w JL_0_6E32
00026AEC <AmiBlitz3.ab3@9291>     MOVEA.l $8(A2),A3
00026AF0 <AmiBlitz3.ab3@9294>       CMPA.w #$0,A3
00026AF4 <AmiBlitz3.ab3@9295>        BEQ.w JL_0_6E24
00026AF6 <AmiBlitz3.ab3@9296>       MOVEA.l A3,A1
00026AF8 <AmiBlitz3.ab3@9297>       MOVEA.l (A3),A3
00026AFA <AmiBlitz3.ab3@9298>       MOVEQ.l #$08,D0
00026B00 <AmiBlitz3.ab3@9299>       MOVE.l mempool,a0
00026B06 <AmiBlitz3.ab3@9300>       MOVEA.l _execbase,A6
00026B0A <AmiBlitz3.ab3@9301>       JSR _FreePooled(A6)
00026B0E <AmiBlitz3.ab3@9302> BRA.w JL_0_6E0E
00026B10 <AmiBlitz3.ab3@9305>     MOVEA.l A2,A1
00026B12 <AmiBlitz3.ab3@9306>     MOVEA.l (A2),A2
00026B14 <AmiBlitz3.ab3@9307>     MOVEQ.l #$0C,D0
00026B1A <AmiBlitz3.ab3@9308>     MOVE.l mempool,a0
00026B20 <AmiBlitz3.ab3@9309>     MOVEA.l _execbase,A6
00026B24 <AmiBlitz3.ab3@9310>     JSR _FreePooled(A6)
00026B28 <AmiBlitz3.ab3@9311> BRA.w JL_0_6E02
00026B2A <AmiBlitz3.ab3@9314> RTS
00026B2E <AmiBlitz3.ab3@9318>   MOVEM.l D3-D5/A1-A6,-(A7)
00026B30 <AmiBlitz3.ab3@9319>   MOVEA.l A1,A4
00026B32 <AmiBlitz3.ab3@9322>   MOVE.l (A2)+,D3
00026B36 <AmiBlitz3.ab3@9323>   MOVE.w $0(A4,D3.L),D5
00026B3A <AmiBlitz3.ab3@9324>    BPL.w JL_0_6E7A
00026B3E <AmiBlitz3.ab3@9325>   TST.l $2C(A4)
00026B42 <AmiBlitz3.ab3@9326>    BEQ.w JL_0_6E5E
00026B48 <AmiBlitz3.ab3@9327>   TST.b debugmode
00026B4C <AmiBlitz3.ab3@9328>    BNE.w JL_0_6E5E
00026B50 <AmiBlitz3.ab3@9329>   CMP.l $2C(A4),D3
00026B54 <AmiBlitz3.ab3@9330>    BCC.w JL_0_6E7A
00026B58 <AmiBlitz3.ab3@9333>   BCLR #$F,D5
00026B5C <AmiBlitz3.ab3@9334>   MOVE.w $2(A4,D3.L),D4
00026B60 <AmiBlitz3.ab3@9335>   SUB.l $12(A4),D3
00026B64 <AmiBlitz3.ab3@9336>   ADD.l $28(A4),D3
00026B68 <AmiBlitz3.ab3@9337>   MOVEM.l D2/A2/A4,-(A7)
00026B6C <AmiBlitz3.ab3@9338>    BSR.w JL_0_6E86
00026B70 <AmiBlitz3.ab3@9339>   MOVEM.l (A7)+,D2/A2/A4
00026B72 <AmiBlitz3.ab3@9342>   SUBQ.l #1,D2
00026B76 <AmiBlitz3.ab3@9343>    BNE.w JL_0_6E3A
00026B7A <AmiBlitz3.ab3@9344>   MOVEM.l (A7)+,D3-D5/A1-A6
00026B7C <AmiBlitz3.ab3@9345> RTS
00026B82 <AmiBlitz3.ab3@9349>   LEA tokeslist,A3
00026B88 <AmiBlitz3.ab3@9350>   MOVEA.l _execbase,A6
00026B8A <AmiBlitz3.ab3@9353>   MOVE.l (A3),D0
00026B8E <AmiBlitz3.ab3@9354>    BEQ.w JL_0_6EAC
00026B90 <AmiBlitz3.ab3@9355>   MOVEA.l D0,A3
00026B94 <AmiBlitz3.ab3@9356>   CMP.w $4(A3),D4
00026B98 <AmiBlitz3.ab3@9357>    BNE.w JL_0_6E90
00026B9C <AmiBlitz3.ab3@9358>   CMP.w $6(A3),D5
00026BA0 <AmiBlitz3.ab3@9359>    BNE.w JL_0_6E90
00026BA4 <AmiBlitz3.ab3@9360> BRA.w JL_0_6ED0
00026BA6 <AmiBlitz3.ab3@9363>   MOVEQ.l #$0C,D0
00026BA8 <AmiBlitz3.ab3@9364>   MOVEQ.l #$01,D1
00026BAE <AmiBlitz3.ab3@9365>   MOVE.l mempool,a0
00026BB2 <AmiBlitz3.ab3@9366>   JSR _AllocPooled(a6)
00026BB4 <AmiBlitz3.ab3@9368>   MOVEA.l D0,A3
00026BBA <AmiBlitz3.ab3@9369>   MOVE.l tokeslist,(A3)
00026BC0 <AmiBlitz3.ab3@9370>   MOVE.l A3,tokeslist
00026BC4 <AmiBlitz3.ab3@9371>   MOVE.w D4,$4(A3)
00026BC8 <AmiBlitz3.ab3@9372>   MOVE.w D5,$6(A3)
00026BCC <AmiBlitz3.ab3@9373>   CLR.l $8(A3)
00026BCE <AmiBlitz3.ab3@9376>   MOVEQ.l #$08,D0
00026BD0 <AmiBlitz3.ab3@9377>   MOVEQ.l #$01,D1
00026BD6 <AmiBlitz3.ab3@9378>   MOVE.l mempool,a0
00026BDA <AmiBlitz3.ab3@9379>   JSR _AllocPooled(a6)
00026BDC <AmiBlitz3.ab3@9381>   MOVEA.l D0,A0
00026BE0 <AmiBlitz3.ab3@9382>   MOVE.l D3,$4(A0)
00026BE4 <AmiBlitz3.ab3@9383>   MOVE.l $8(A3),(A0)
00026BE8 <AmiBlitz3.ab3@9384>   MOVE.l A0,$8(A3)
00026BEA <AmiBlitz3.ab3@9385>   MOVE.w D4,D1
00026BEE <AmiBlitz3.ab3@9386> BRA.w searchinstr
00026BF2 <AmiBlitz3.ab3@9389> tokeslist: Ds.l 1
00026BF6 <AmiBlitz3.ab3@9402>   BEQ.w uselib2_org__skip
00026BF8 <AmiBlitz3.ab3@9403>   MOVE.l A1,-(A7)
00026BFA <AmiBlitz3.ab3@9404>   ADDA.l D1,A1
00026BFC <AmiBlitz3.ab3@9405>   ADDQ.w #6,A1
00026BFE <AmiBlitz3.ab3@9408>     MOVE.w (A1)+,D1
00026C02 <AmiBlitz3.ab3@9409>     BEQ.w uselib2_org__done
00026C04 <AmiBlitz3.ab3@9410>     CMP.w D2,D1
00026C08 <AmiBlitz3.ab3@9411>     BEQ.w uselib2_org__skip2
00026C0A <AmiBlitz3.ab3@9412>     MOVE.l A1,-(A7)
00026C0E <AmiBlitz3.ab3@9413>     BSR.w uselib
00026C10 <AmiBlitz3.ab3@9414>     MOVEA.l (A7)+,A1
00026C12 <AmiBlitz3.ab3@9417>     ADDQ.w #2,A1
00026C16 <AmiBlitz3.ab3@9418> BRA.w uselib2_org__loop
00026C18 <AmiBlitz3.ab3@9421>   MOVEA.l (A7)+,A1
00026C1A <AmiBlitz3.ab3@9424> RTS
00026C20 <AmiBlitz3.ab3@9428>   MOVEA.l libpointer,A1
00026C24 <AmiBlitz3.ab3@9431>   CMPA.w #$0,A1
00026C28 <AmiBlitz3.ab3@9432>    BEQ.b JL_0_6F36
00026C2C <AmiBlitz3.ab3@9433>   CMP.w $4(A1),D1
00026C30 <AmiBlitz3.ab3@9434>    BEQ.w JL_0_6F34
00026C32 <AmiBlitz3.ab3@9435>   MOVEA.l (A1),A1
00026C36 <AmiBlitz3.ab3@9436> BRA.w JL_0_6F20
00026C38 <AmiBlitz3.ab3@9439>   MOVEQ.l #-$01,D1
00026C3A <AmiBlitz3.ab3@9442> RTS
00026C3E <AmiBlitz3.ab3@9446>   MOVEM.l d0/a2,-(a7)
00026C40 <AmiBlitz3.ab3@9447>   MOVEQ #0,d0
00026C46 <AmiBlitz3.ab3@9448>   LEA instrtab+4,a2
00026C48 <AmiBlitz3.ab3@9449>   MOVE.w d1,d0
00026C4A <AmiBlitz3.ab3@9450>   ASL.l #3,d0
00026C4E <AmiBlitz3.ab3@9451>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00026C54 <AmiBlitz3.ab3@9452>   CMP.l #0,a1
00026C58 <AmiBlitz3.ab3@9453>   BNE JL_0_6F54b
00026C5E <AmiBlitz3.ab3@9455>   MOVEA.l libpointer,A1
00026C62 <AmiBlitz3.ab3@9458>     CMPA.w #$0,A1
00026C66 <AmiBlitz3.ab3@9459>     BEQ.w noliberr
00026C6A <AmiBlitz3.ab3@9460>     CMP.w $4(A1),D1
00026C6E <AmiBlitz3.ab3@9461>     BEQ.w JL_0_6F54
00026C70 <AmiBlitz3.ab3@9462>    MOVEA.l (A1),A1
00026C74 <AmiBlitz3.ab3@9463> BRA.w JL_0_6F3E
00026C78 <AmiBlitz3.ab3@9466>   MOVE.l a1,0(a2,d0.l)
00026C7C <AmiBlitz3.ab3@9469>   MOVEM.l (a7)+,d0/a2
00026C7E <AmiBlitz3.ab3@9470> RTS
00026C82 <AmiBlitz3.ab3@9473>   MOVEM.l d0-d1/a1,-(a7)
00026C84 <AmiBlitz3.ab3@9474>   MOVEQ #0,d0
00026C8A <AmiBlitz3.ab3@9475>   LEA instrtab,a1
00026C8C <AmiBlitz3.ab3@9476>   MOVE.w d1,d0
00026C8E <AmiBlitz3.ab3@9477>   ASL.l #3,d0
00026C92 <AmiBlitz3.ab3@9478>   MOVE.l 0(a1,d0.l),a3
00026C96 <AmiBlitz3.ab3@9479>   MOVE.l 4(a1,d0.l),a2
00026C9C <AmiBlitz3.ab3@9480>   CMP.l #0,a3
00026CA0 <AmiBlitz3.ab3@9481>   BNE JL_0_6F92b
00026CA6 <AmiBlitz3.ab3@9483>   MOVEA.l libpointer,A2
00026CAA <AmiBlitz3.ab3@9486>   CMPA.w #$0,A2
00026CAE <AmiBlitz3.ab3@9487>   BEQ.w notokerr
00026CB2 <AmiBlitz3.ab3@9488>   CMP.w $E(A2),D1
00026CB6 <AmiBlitz3.ab3@9489>   BCS.w JL_0_6FB8
00026CBA <AmiBlitz3.ab3@9490>   CMP.w $10(A2),D1
00026CBE <AmiBlitz3.ab3@9491>   BCC.w JL_0_6FB8
00026CC2 <AmiBlitz3.ab3@9492>   LEA $30(A2),A3
00026CC6 <AmiBlitz3.ab3@9493>   TST.w $4(A2)
00026CCA <AmiBlitz3.ab3@9494>   BPL.w JL_0_6FA6
00026CCE <AmiBlitz3.ab3@9497>     CMP.w $E(A2),D1
00026CD2 <AmiBlitz3.ab3@9498>     BEQ.w JL_0_6F92
00026CD4 <AmiBlitz3.ab3@9499>     SUBQ.w #1,D1
00026CD8 <AmiBlitz3.ab3@9500>     MOVEA.l $2(A3),A3
00026CDC <AmiBlitz3.ab3@9501> BRA.w JL_0_6F80
00026CE0 <AmiBlitz3.ab3@9504>   MOVE.l a3,0(a1,d0.l)
00026CE4 <AmiBlitz3.ab3@9505>   MOVE.l a2,4(a1,d0.l)
00026CE8 <AmiBlitz3.ab3@9508>   MOVEM.l (a7)+,d0-d1/a1
00026CEC <AmiBlitz3.ab3@9509>   MOVEM.l D1/A1-a3,-(A7)
00026CF0 <AmiBlitz3.ab3@9510>   CMP.w #1,(a3)
00026CF4 <AmiBlitz3.ab3@9511>   BNE.s ex10
00026CFC <AmiBlitz3.ab3@9512>   CMP.l #$12345678,$e(a3)
00026D00 <AmiBlitz3.ab3@9513>   BNE.s ex10
00026D06 <AmiBlitz3.ab3@9514>   CMP.w #$ffff,$16(a3)
00026D0A <AmiBlitz3.ab3@9515>   BNE.s ex10
00026D0E <AmiBlitz3.ab3@9516>   MOVE.l $12(a3),d1
00026D12 <AmiBlitz3.ab3@9517>   BEQ.s ex10
00026D18 <AmiBlitz3.ab3@9518>   LEA pluginbase,a3
00026D1C <AmiBlitz3.ab3@9520> JMP 0(a2,d1.l)                                             ;plugin
00026D20 <AmiBlitz3.ab3@9523>   MOVEM.l (A7)+,D1/A1-a3
00026D26 <AmiBlitz3.ab3@9524>   JSR stripspaces
00026D28 <AmiBlitz3.ab3@9525>   MOVEQ #0,d0
00026D2A <AmiBlitz3.ab3@9526>   MOVE.b (a5)+,d0
00026D30 <AmiBlitz3.ab3@9527>   MOVE.w d0,lastchar
00026D32 <AmiBlitz3.ab3@9528>   ADDQ.l #4,a7
00026D34 <AmiBlitz3.ab3@9529> RTS
00026D36 <AmiBlitz3.ab3@9533>   MOVEA.l A2,A1
00026D3C <AmiBlitz3.ab3@9534>   CLR.b newmode
00026D40 <AmiBlitz3.ab3@9535>   MOVE.w $4(A1),D1
00026D44 <AmiBlitz3.ab3@9538>   BSR.w uselib3
00026D48 <AmiBlitz3.ab3@9539>   MOVEM.l (A7)+,D1/A1-a3
00026D4A <AmiBlitz3.ab3@9540> RTS
00026D50 <AmiBlitz3.ab3@9543>   MOVE.w globalvarpointer,-(a7)
00026D58 <AmiBlitz3.ab3@9544>   MOVE.w #$8004,globalvarpointer
00026D5C <AmiBlitz3.ab3@9545>   BSR.w uselib3
00026D62 <AmiBlitz3.ab3@9546>   MOVE.w (a7)+,globalvarpointer
00026D66 <AmiBlitz3.ab3@9547>   MOVEM.l (A7)+,D1/A1-a3
00026D68 <AmiBlitz3.ab3@9548> RTS
00026D6C <AmiBlitz3.ab3@9551>     CMP.w $E(A2),D1
00026D70 <AmiBlitz3.ab3@9552>     BEQ.w JL_0_6F92
00026D72 <AmiBlitz3.ab3@9553>     SUBQ.w #1,D1
00026D76 <AmiBlitz3.ab3@9554>     MOVEA.l $2(A3),A3
00026D7A <AmiBlitz3.ab3@9555> BRA.w JL_0_6FA6
00026D7C <AmiBlitz3.ab3@9558>   MOVEA.l (A2),A2
00026D80 <AmiBlitz3.ab3@9559> BRA.w JL_0_6F5C
00026D86 <AmiBlitz3.ab3@9562> JMP writeword
00026D8A <AmiBlitz3.ab3@9565> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00026D8E <AmiBlitz3.ab3@9566> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026D92 <AmiBlitz3.ab3@9567> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026D94 <AmiBlitz3.ab3@9573>   TST.l D0
00026D98 <AmiBlitz3.ab3@9574>   BEQ.w exit_loadlibsfile
00026D9A <AmiBlitz3.ab3@9575>     MOVE.l D0,D6                                           ;d6=len
00026DA0 <AmiBlitz3.ab3@9576>     MOVEA.l _dosbase,A6
00026DA6 <AmiBlitz3.ab3@9577>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026DAA <AmiBlitz3.ab3@9578>     JSR _Open(A6)
00026DAC <AmiBlitz3.ab3@9579>     MOVE.l D0,D7
00026DB0 <AmiBlitz3.ab3@9580>     BEQ.w exit_loadlibsfile
00026DB2 <AmiBlitz3.ab3@9581>       MOVE.l D6,D0
00026DB4 <AmiBlitz3.ab3@9582>       MOVEQ.l #$01,D1
00026DBA <AmiBlitz3.ab3@9583>       MOVEA.l _execbase,A6
00026DC0 <AmiBlitz3.ab3@9584>       MOVE.l mempool,a0
00026DC4 <AmiBlitz3.ab3@9585>       JSR _AllocPooled(a6)
00026DC6 <AmiBlitz3.ab3@9586>       MOVE.l D0,D5                                         ;start address
00026DC8 <AmiBlitz3.ab3@9588>       MOVE.l D7,D1                                         ; handle
00026DCA <AmiBlitz3.ab3@9589>       MOVE.l D5,D2                                         ; buffer addr
00026DCC <AmiBlitz3.ab3@9590>       MOVE.l D6,D3                                         ; size
00026DD2 <AmiBlitz3.ab3@9591>       MOVEA.l _dosbase,A6
00026DD6 <AmiBlitz3.ab3@9592>       JSR _Read(A6)
00026DD8 <AmiBlitz3.ab3@9593>       MOVE.l D7,D1
00026DDC <AmiBlitz3.ab3@9594>       JSR _Close(A6)
00026DDE <AmiBlitz3.ab3@9596>       MOVEA.l D5,A0                                        ; buffer addr
00026DE0 <AmiBlitz3.ab3@9602>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00026DE4 <AmiBlitz3.ab3@9603>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00026DE8 <AmiBlitz3.ab3@9604>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00026DEA <AmiBlitz3.ab3@9605>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00026DEC <AmiBlitz3.ab3@9606>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00026DEE <AmiBlitz3.ab3@9607>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00026DF2 <AmiBlitz3.ab3@9608>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00026DF4 <AmiBlitz3.ab3@9609>           ADD.l D0,D0                                      ;   verdoppele D0
00026DF6 <AmiBlitz3.ab3@9610>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00026DFA <AmiBlitz3.ab3@9611>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00026DFE <AmiBlitz3.ab3@9612>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00026E02 <AmiBlitz3.ab3@9613>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00026E04 <AmiBlitz3.ab3@9614>           CMPA.l A0,A2
00026E08 <AmiBlitz3.ab3@9615>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00026E0E <AmiBlitz3.ab3@9616>             MOVE.l -$8(A2),$20(A1)                         ;
00026E12 <AmiBlitz3.ab3@9617>             MOVE.l A2,$24(A1)                              ;
00026E16 <AmiBlitz3.ab3@9618> BRA.w JL_0_7010
00026E18 <AmiBlitz3.ab3@9621>       MOVE.l D5,D0
00026E1A <AmiBlitz3.ab3@9624> RTS
00026E44 <AmiBlitz3.ab3@9628>   !basic
00026EB8 <AmiBlitz3.ab3@9629>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026EEC <AmiBlitz3.ab3@9630>    dos_Delete{tempmapping$}
00026F30 <AmiBlitz3.ab3@9631>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00026F4E <AmiBlitz3.ab3@9632>   !asm
00026F54 <AmiBlitz3.ab3@9634>   LEA libpointer,A3
00026F5A <AmiBlitz3.ab3@9638>   MOVE.l size_deflibs,D0
00026F60 <AmiBlitz3.ab3@9639>   MOVE.l deflib,d1
00026F64 <AmiBlitz3.ab3@9640>   BEQ 'l1
00026F68 <AmiBlitz3.ab3@9641> BRA 'l2
00026F6E <AmiBlitz3.ab3@9644>   MOVE.l #str_path_deflibs,D1
00026F72 <AmiBlitz3.ab3@9647>   BSR.w load_libsfile
00026F78 <AmiBlitz3.ab3@9648>   MOVE.l D0,ptr_deflibs
00026F7E <AmiBlitz3.ab3@9651>   MOVE.l size_acidlibs,D0
00026F84 <AmiBlitz3.ab3@9652>   MOVE.l #str_path_acidlibs,D1
00026F88 <AmiBlitz3.ab3@9653>   BSR.w load_libsfile
00026F8E <AmiBlitz3.ab3@9654>   MOVE.l D0,ptr_acidlibs
00026F90 <AmiBlitz3.ab3@9658>   CLR.l (A3)
00026F96 <AmiBlitz3.ab3@9659>   MOVE.l A3,ptr_userlibs
00026F9C <AmiBlitz3.ab3@9664>   LEA str_libfilename,A0
00026FA2 <AmiBlitz3.ab3@9665>   LEA str_path_userlibs,A1
00026FA4 <AmiBlitz3.ab3@9668>     MOVE.b (A1)+,(A0)+
00026FA8 <AmiBlitz3.ab3@9669>   BNE.b JL_0_708E
00026FAA <AmiBlitz3.ab3@9671>   SUBQ.w #1,A0
00026FAE <AmiBlitz3.ab3@9672>   MOVE.b #$2F,(A0)+
00026FB0 <AmiBlitz3.ab3@9675>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
00026FB6 <AmiBlitz3.ab3@9677>   LEA ptr_userlibs_list,A2
00026FBC <AmiBlitz3.ab3@9678>   MOVEA.l ptr_userlibs,A3
00026FC2 <AmiBlitz3.ab3@9679>   MOVEA.l _dosbase,A6
00026FC4 <AmiBlitz3.ab3@9684>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00026FC8 <AmiBlitz3.ab3@9685>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00026FCA <AmiBlitz3.ab3@9687>       CLR.l (A3)
00026FCC <AmiBlitz3.ab3@9688>       ADDQ.w #4,A7
00026FF6 <AmiBlitz3.ab3@9689>       !basic
0002700A <AmiBlitz3.ab3@9690>       If fid<>-1
00027014 <AmiBlitz3.ab3@9691>         file_Close{fid}
00027020 <AmiBlitz3.ab3@9692>         fid = -1
0002703E <AmiBlitz3.ab3@9694>       !asm
00027042 <AmiBlitz3.ab3@9695> BRA.w process_libraries
00027044 <AmiBlitz3.ab3@9698>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
00027048 <AmiBlitz3.ab3@9699>       TST.w $4(A2)                                         ; naechste addresse pruefen
0002704C <AmiBlitz3.ab3@9700>     BEQ.b JL_0_70BA
00027050 <AmiBlitz3.ab3@9702>     LEA $6(A2),A1
00027052 <AmiBlitz3.ab3@9703>     MOVEA.l (A7),A0
00027054 <AmiBlitz3.ab3@9706>       MOVE.b (A1)+,(A0)+
00027058 <AmiBlitz3.ab3@9707>     BNE.w JL_0_70D4
0002705A <AmiBlitz3.ab3@9711>     MOVE.l A0,-(A7)
00027060 <AmiBlitz3.ab3@9712>     MOVE.l #str_libfilename,D1
00027062 <AmiBlitz3.ab3@9713>     MOVEQ.l #-$02,D2
00027068 <AmiBlitz3.ab3@9714>     MOVEA.l _dosbase,A6
0002706C <AmiBlitz3.ab3@9715>      JSR _Lock(A6)
0002706E <AmiBlitz3.ab3@9716>     MOVE.l D0,D1
00027072 <AmiBlitz3.ab3@9717>      BEQ.w JL_0_7156
00027074 <AmiBlitz3.ab3@9718>     MOVEA.l (A7),A0
0002707A <AmiBlitz3.ab3@9719>     MOVE.b #$2F,-$1(A0)
0002707C <AmiBlitz3.ab3@9722>     MOVE.l D1,-(A7)
00027082 <AmiBlitz3.ab3@9723>     MOVE.l #ptr_parameterstore,D2
00027088 <AmiBlitz3.ab3@9724>     MOVEA.l _dosbase,A6
0002708C <AmiBlitz3.ab3@9725>     JSR _Examine(A6)
0002708E <AmiBlitz3.ab3@9726>     TST.l D0
00027092 <AmiBlitz3.ab3@9727>      BEQ.w JL_0_7150
00027098 <AmiBlitz3.ab3@9730>     LEA fib_FileName,A0
0002709C <AmiBlitz3.ab3@9731>     BSR.w check_for_infoextention
000270A0 <AmiBlitz3.ab3@9732>     BEQ.w JL_0_7150
000270CA <AmiBlitz3.ab3@9735>     !basic
0002714E <AmiBlitz3.ab3@9736>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
0002716C <AmiBlitz3.ab3@9737>     !asm
00027172 <AmiBlitz3.ab3@9738>     MOVE.l #str_libfilename,D1
00027176 <AmiBlitz3.ab3@9739>     BSR.w open_userlibfile
00027178 <AmiBlitz3.ab3@9742>     MOVE.l (A7)+,D1
0002717E <AmiBlitz3.ab3@9743>     MOVEA.l _dosbase,A6
00027182 <AmiBlitz3.ab3@9744>     JSR _UnLock(A6)
00027184 <AmiBlitz3.ab3@9747>     ADDQ.w #4,A7
00027188 <AmiBlitz3.ab3@9748> BRA.w JL_0_70BA
0002718E <AmiBlitz3.ab3@9751>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00027194 <AmiBlitz3.ab3@9752>   MOVEA.l _dosbase,A6
00027198 <AmiBlitz3.ab3@9753>    JSR _Open(A6)
0002719A <AmiBlitz3.ab3@9754>   MOVE.l D0,D7
0002719E <AmiBlitz3.ab3@9755>    BEQ.w exit_userlibfile
000271A0 <AmiBlitz3.ab3@9758>   MOVE.l D7,D1                                             ; filehandle
000271A6 <AmiBlitz3.ab3@9759>   MOVE.l #optstuff,D2                                     ; buffer
000271AC <AmiBlitz3.ab3@9760>   MOVEA.l _dosbase,A6
000271AE <AmiBlitz3.ab3@9761>   MOVEQ.l #$20,D3                                          ; size
000271B2 <AmiBlitz3.ab3@9762>   JSR _Read(A6)
000271B8 <AmiBlitz3.ab3@9765>   MOVE.l optstuff+28,D6
000271BA <AmiBlitz3.ab3@9766>   LSL.l #2,D6
000271BC <AmiBlitz3.ab3@9767>   MOVE.l D6,D0
000271BE <AmiBlitz3.ab3@9768>   MOVEQ.l #$01,D1
000271C4 <AmiBlitz3.ab3@9769>   MOVEA.l _execbase,A6
000271CA <AmiBlitz3.ab3@9770>   MOVE.l mempool,a0
000271CE <AmiBlitz3.ab3@9771>   JSR _AllocPooled(a6)
000271D0 <AmiBlitz3.ab3@9772>   MOVEA.l D0,A5
000271D6 <AmiBlitz3.ab3@9775>   MOVEA.l _dosbase,A6
000271D8 <AmiBlitz3.ab3@9776>   MOVE.l D7,D1                                             ; filehandle
000271DA <AmiBlitz3.ab3@9777>   MOVE.l A5,D2                                             ; buffer
000271DC <AmiBlitz3.ab3@9778>   MOVE.l D6,D3                                             ; size
000271E0 <AmiBlitz3.ab3@9779>    JSR _Read(A6)
000271E2 <AmiBlitz3.ab3@9780>   MOVE.l A5,(A3)
000271E4 <AmiBlitz3.ab3@9782>   MOVE.l A5,d0
000271E6 <AmiBlitz3.ab3@9784>   MOVEA.l A5,A3
000271EA <AmiBlitz3.ab3@9785>   MOVE.l D6,$6(A5)
000271EE <AmiBlitz3.ab3@9786>   CLR.l $20(A5)
00027218 <AmiBlitz3.ab3@9788>   !basic
00027222 <AmiBlitz3.ab3@9790>   addr_libnum.l = PutD0 + 4
00027236 <AmiBlitz3.ab3@9791>   If fid<>-1
000272D6 <AmiBlitz3.ab3@9792>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00027308 <AmiBlitz3.ab3@9793>     file_WriteLine{fid,currentlib$}
00027326 <AmiBlitz3.ab3@9795>   !asm
00027328 <AmiBlitz3.ab3@9798>   MOVE.l D7,D1                                             ; filehandle
0002732E <AmiBlitz3.ab3@9799>   MOVE.l #optstuff,D2                                     ; buffer
00027330 <AmiBlitz3.ab3@9800>   MOVEQ.l #$0C,D3                                          ; size
00027336 <AmiBlitz3.ab3@9801>   MOVEA.l _dosbase,A6
0002733A <AmiBlitz3.ab3@9802>    JSR _Read(A6)
00027340 <AmiBlitz3.ab3@9804>   CMP.l #$C,D0
00027344 <AmiBlitz3.ab3@9805>    BCS.w close_and_exit_userlibfile
0002734A <AmiBlitz3.ab3@9808>   MOVE.l optstuff+4,D0
0002734E <AmiBlitz3.ab3@9809>   MOVE.l D0,$20(A5)
00027350 <AmiBlitz3.ab3@9810>   LSL.l #2,D0
00027352 <AmiBlitz3.ab3@9811>   MOVE.l D0,D5
00027354 <AmiBlitz3.ab3@9812>   MOVEQ.l #$01,D1
0002735A <AmiBlitz3.ab3@9813>   MOVEA.l _execbase,A6
00027360 <AmiBlitz3.ab3@9814>   MOVE.l mempool,a0
00027364 <AmiBlitz3.ab3@9815>   JSR _AllocPooled(a6)
0002736A <AmiBlitz3.ab3@9817>   MOVEA.l _dosbase,A6
0002736E <AmiBlitz3.ab3@9818>   MOVE.l D0,$24(A5)
00027370 <AmiBlitz3.ab3@9819>   MOVE.l D7,D1
00027372 <AmiBlitz3.ab3@9820>   MOVE.l D0,D2
00027374 <AmiBlitz3.ab3@9821>   MOVE.l D5,D3
00027378 <AmiBlitz3.ab3@9822>   JSR _Read(A6)
0002737A <AmiBlitz3.ab3@9825>   MOVE.l D7,D1
00027380 <AmiBlitz3.ab3@9826>   MOVEA.l _dosbase,A6
00027384 <AmiBlitz3.ab3@9827> JMP _Close(A6)
00027386 <AmiBlitz3.ab3@9830> RTS
0002738C <AmiBlitz3.ab3@9836>   CLR.w number_of_objects
00027392 <AmiBlitz3.ab3@9837>   MOVEA.l end_of_tokenlist,A3
00027398 <AmiBlitz3.ab3@9838>   MOVEA.l libpointer,A2
0002739C <AmiBlitz3.ab3@9841>     CMPA.w #$0,A2
000273A0 <AmiBlitz3.ab3@9842>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
000273A4 <AmiBlitz3.ab3@9844>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
000273A8 <AmiBlitz3.ab3@9845>     BMI.w JL_0_7226
000273AA <AmiBlitz3.ab3@9846>       LSL.w #7,D7
000273AC <AmiBlitz3.ab3@9847>       ADDQ.w #1,D7
000273B0 <AmiBlitz3.ab3@9848>       MOVE.w D7,$E(A2)
000273B4 <AmiBlitz3.ab3@9851>     LEA $30(A2),A1
000273BA <AmiBlitz3.ab3@9852>     LEA temp1,A4
000273BC <AmiBlitz3.ab3@9855>       MOVE.w (A1),D0
000273C0 <AmiBlitz3.ab3@9856>       BMI.w JL_0_72AE
000273C2 <AmiBlitz3.ab3@9857>       MOVE.l A1,(A4)
000273C4 <AmiBlitz3.ab3@9858>       MOVEA.l A1,A4
000273C6 <AmiBlitz3.ab3@9859>       ADDQ.w #2,A4
000273C8 <AmiBlitz3.ab3@9860>       ADDQ.w #6,A1
000273CC <AmiBlitz3.ab3@9861>       CMP.w #$8,D0
000273D0 <AmiBlitz3.ab3@9862>       BEQ.w JL_0_7290
000273D4 <AmiBlitz3.ab3@9863>         ANDI.w #$F,D0
000273D8 <AmiBlitz3.ab3@9864>         BNE.w JL_0_725C
000273DC <AmiBlitz3.ab3@9865>           BSR.w skiplibreg
000273E0 <AmiBlitz3.ab3@9866>           LEA $C(A1),A1
000273E2 <AmiBlitz3.ab3@9867>           ADDQ.w #1,D7
000273E6 <AmiBlitz3.ab3@9868> BRA.w JL_0_7230
000273EA <AmiBlitz3.ab3@9871>     BTST #$2,D0
000273EE <AmiBlitz3.ab3@9872>     BEQ.w JL_0_7274
000273F0 <AmiBlitz3.ab3@9873>       ADDQ.w #4,A1
000273F2 <AmiBlitz3.ab3@9876>         TST.b (A1)+
000273F6 <AmiBlitz3.ab3@9877>       BPL.w JL_0_7266
000273FA <AmiBlitz3.ab3@9878>       BSR.w aligna1
000273FE <AmiBlitz3.ab3@9879> BRA.w JL_0_7290
00027400 <AmiBlitz3.ab3@9882>       MOVE.w (A1)+,D0
00027404 <AmiBlitz3.ab3@9883>       BMI.w JL_0_7290
00027408 <AmiBlitz3.ab3@9884>       ANDI.w #$FF,D0
0002740A <AmiBlitz3.ab3@9885>       ADDA.w D0,A1
0002740E <AmiBlitz3.ab3@9886>       BSR.w aligna1
00027412 <AmiBlitz3.ab3@9887>       BSR.w skiplibreg
00027416 <AmiBlitz3.ab3@9888>       LEA $C(A1),A1
0002741A <AmiBlitz3.ab3@9889> BRA.w JL_0_7274
0002741C <AmiBlitz3.ab3@9892>     MOVE.l A1,(A3)
0002741E <AmiBlitz3.ab3@9893>     MOVEA.l A1,A3
00027420 <AmiBlitz3.ab3@9894>     ADDQ.w #4,A1
00027422 <AmiBlitz3.ab3@9895>     MOVE.w D7,(A1)+
00027424 <AmiBlitz3.ab3@9898>       TST.b (A1)+
00027428 <AmiBlitz3.ab3@9899>     BNE.w JL_0_7298
0002742A <AmiBlitz3.ab3@9902>       TST.b (A1)+
0002742E <AmiBlitz3.ab3@9903>     BNE.w JL_0_729E
00027432 <AmiBlitz3.ab3@9905>     BSR.w aligna1
00027434 <AmiBlitz3.ab3@9906>     ADDQ.w #1,D7
00027438 <AmiBlitz3.ab3@9907> BRA.w JL_0_7230
0002743C <AmiBlitz3.ab3@9910>     TST.w $4(A2)
00027440 <AmiBlitz3.ab3@9911>      BMI.w JL_0_72BA
00027444 <AmiBlitz3.ab3@9912>     MOVE.w D7,$10(A2)
00027446 <AmiBlitz3.ab3@9915>     ADDQ.w #2,A1
00027448 <AmiBlitz3.ab3@9916>     TST.l (A1)+
0002744C <AmiBlitz3.ab3@9917>      BEQ.w JL_0_72CC
00027452 <AmiBlitz3.ab3@9918>     ADDQ.w #1,number_of_objects
00027456 <AmiBlitz3.ab3@9919>     LEA $16(A1),A1
00027458 <AmiBlitz3.ab3@9922>     SUBA.l A2,A1
0002745C <AmiBlitz3.ab3@9923>     MOVE.l A1,$12(A2)
0002745E <AmiBlitz3.ab3@9924>     MOVEA.l (A2),A2
00027462 <AmiBlitz3.ab3@9925> BRA.w JL_0_720E
00027464 <AmiBlitz3.ab3@9928>   CLR.l (A3)
0002746A <AmiBlitz3.ab3@9929> 
00027470 <AmiBlitz3.ab3@9930>   MOVE.l A7,errstack
0002747A <AmiBlitz3.ab3@9931>   MOVE.l #AL_0_730E,errcont
00027482 <AmiBlitz3.ab3@9932>   MOVE.w #$FFFF,ezerr
00027486 <AmiBlitz3.ab3@9933>   MOVE.w #$FFFA,D1
0002748A <AmiBlitz3.ab3@9934>    BSR.w JL_0_6F38
00027490 <AmiBlitz3.ab3@9935>   MOVE.l A1,tempvm
00027494 <AmiBlitz3.ab3@9936>   MOVE.w #$FDA7,D1
00027498 <AmiBlitz3.ab3@9937>    BSR.w JL_0_6F38
0002749E <AmiBlitz3.ab3@9938>   MOVE.l A1,ffplib
000274A0 <AmiBlitz3.ab3@9941> RTS
000274A4 <AmiBlitz3.ab3@9944> ffplib:  Ds.l 1
000274A6 <AmiBlitz3.ab3@9948>     TST.w (A1)+
000274AA <AmiBlitz3.ab3@9949>     BEQ.w JL_0_7320
000274AC <AmiBlitz3.ab3@9950>     ADDQ.w #2,A1
000274B0 <AmiBlitz3.ab3@9951> BRA.w skiplibreg
000274B2 <AmiBlitz3.ab3@9954> RTS
000274B4 <AmiBlitz3.ab3@9958>   EXG.l A1,A0
000274B8 <AmiBlitz3.ab3@9959>   BSR.w aligna1
000274BA <AmiBlitz3.ab3@9960>   EXG.l A1,A0
000274BC <AmiBlitz3.ab3@9961> RTS
000274BE <AmiBlitz3.ab3@9964>   EXG.l D0,A1
000274C0 <AmiBlitz3.ab3@9965>   ADDQ.l #1,D0
000274C4 <AmiBlitz3.ab3@9966>   BCLR #$0,D0
000274C6 <AmiBlitz3.ab3@9967>   EXG.l D0,A1
000274C8 <AmiBlitz3.ab3@9968> RTS
000274CE <AmiBlitz3.ab3@9972>   MOVEA.l _execbase,A6
000274D4 <AmiBlitz3.ab3@9973>   MOVEA.l ptr_userlibs,A2
000274D6 <AmiBlitz3.ab3@9974>   MOVE.l (A2),D0
000274D8 <AmiBlitz3.ab3@9975>   CLR.l (A2)
000274DA <AmiBlitz3.ab3@9976>   MOVEA.l D0,A2
000274DE <AmiBlitz3.ab3@9979>     CMPA.w #$0,A2
000274E2 <AmiBlitz3.ab3@9980>     BEQ.w free_userlib
000274E6 <AmiBlitz3.ab3@9982>     MOVE.l $20(A2),D0
000274EA <AmiBlitz3.ab3@9983>     BEQ.b JL_0_7360
000274EC <AmiBlitz3.ab3@9984>       LSL.l #2,D0
000274F2 <AmiBlitz3.ab3@9985>       MOVE.l mempool,a0
000274F6 <AmiBlitz3.ab3@9986>       MOVEA.l $24(A2),A1
000274FA <AmiBlitz3.ab3@9987>       JSR _FreePooled(A6)
000274FC <AmiBlitz3.ab3@9990>     MOVEA.l A2,A1
00027500 <AmiBlitz3.ab3@9991>     MOVE.l $6(A1),D0
00027506 <AmiBlitz3.ab3@9992>     MOVE.l mempool,a0
00027508 <AmiBlitz3.ab3@9993>     MOVEA.l (A2),A2
0002750E <AmiBlitz3.ab3@9994>     MOVEA.l _execbase,A6
00027512 <AmiBlitz3.ab3@9995>     JSR _FreePooled(A6)
00027516 <AmiBlitz3.ab3@9996> BRA.w JL_0_7348
0002751A <AmiBlitz3.ab3@10000>   BSR.w free_userlibs
00027520 <AmiBlitz3.ab3@10001>   MOVEA.l _execbase,A6
00027526 <AmiBlitz3.ab3@10002>   CLR.l libpointer
0002752C <AmiBlitz3.ab3@10003>   MOVEA.l end_of_tokenlist,A0
0002752E <AmiBlitz3.ab3@10004>   CLR.l (A0)
00027534 <AmiBlitz3.ab3@10006>   MOVE.l size_acidlibs,D0
00027538 <AmiBlitz3.ab3@10007>   BEQ.b JL_0_73A2
0002753E <AmiBlitz3.ab3@10008>     MOVE.l ptr_acidlibs,D1
00027542 <AmiBlitz3.ab3@10009>     BEQ.b JL_0_73A2
00027548 <AmiBlitz3.ab3@10010>       CLR.l ptr_acidlibs
0002754A <AmiBlitz3.ab3@10011>       MOVEA.l D1,A1
00027550 <AmiBlitz3.ab3@10012>       MOVE.l mempool,a0
00027556 <AmiBlitz3.ab3@10013>       MOVEA.l _execbase,A6
0002755A <AmiBlitz3.ab3@10014>       JSR _FreePooled(A6)                                 ; free acidlibs
00027560 <AmiBlitz3.ab3@10017>   MOVE.l size_deflibs,D0
00027564 <AmiBlitz3.ab3@10018>   BEQ.b JL_0_73BE
0002756A <AmiBlitz3.ab3@10019>     MOVE.l ptr_deflibs,D1
0002756E <AmiBlitz3.ab3@10020>     BEQ.b JL_0_73BE
00027574 <AmiBlitz3.ab3@10021>       CLR.l ptr_deflibs                                    ; d0: memorySize
00027576 <AmiBlitz3.ab3@10022>       MOVEA.l D1,A1                                        ; a1: memory
0002757C <AmiBlitz3.ab3@10023>       MOVE.l mempool,a0                                    ; a0: poolHeader
00027582 <AmiBlitz3.ab3@10024>       MOVEA.l _execbase,A6
00027586 <AmiBlitz3.ab3@10025>       JSR _FreePooled(A6)                                  ; free deflibs
00027588 <AmiBlitz3.ab3@10028> RTS
0002758E <AmiBlitz3.ab3@10032>   MOVEA.l currentmacroaddr,A0
00027590 <AmiBlitz3.ab3@10033>   MOVEA.l (A0),A2
00027592 <AmiBlitz3.ab3@10034>   CLR.l (A0)
00027598 <AmiBlitz3.ab3@10035>   MOVEA.l _execbase,A6
0002759C <AmiBlitz3.ab3@10038>     CMPA.w #$0,A2
000275A0 <AmiBlitz3.ab3@10039>     BEQ.w JL_0_73FA
000275A2 <AmiBlitz3.ab3@10040>     MOVEQ.l #$00,D0
000275A6 <AmiBlitz3.ab3@10041>     MOVE.w $8(A2),D0
000275AA <AmiBlitz3.ab3@10042>     BEQ.w JL_0_73E8
000275AE <AmiBlitz3.ab3@10043>     MOVEA.l $4(A2),A1
000275B4 <AmiBlitz3.ab3@10044>     MOVE.l mempool,a0
000275B8 <AmiBlitz3.ab3@10045>     JSR _FreePooled(A6)
000275BA <AmiBlitz3.ab3@10048>     MOVEA.l A2,A1
000275BC <AmiBlitz3.ab3@10049>     MOVEA.l (A2),A2
000275BE <AmiBlitz3.ab3@10050>     MOVEQ.l #$00,D0
000275C2 <AmiBlitz3.ab3@10051>     MOVE.b $C(A1),D0
000275C8 <AmiBlitz3.ab3@10052>     MOVE.l mempool2,a0
000275CC <AmiBlitz3.ab3@10053>     JSR _FreePooled(A6)
000275D0 <AmiBlitz3.ab3@10054> BRA.w JL_0_73CE
000275D2 <AmiBlitz3.ab3@10057> RTS
000275D8 <AmiBlitz3.ab3@10061>   MOVEA.l templabel,A2
000275DE <AmiBlitz3.ab3@10062>   CLR.l templabel
000275E0 <AmiBlitz3.ab3@10063> RTS
000275E6 <AmiBlitz3.ab3@10066>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
000275EA <AmiBlitz3.ab3@10069>     CMPA.w #$0,A2
000275EE <AmiBlitz3.ab3@10070>     BEQ.w JL_0_7426
000275F0 <AmiBlitz3.ab3@10071>     MOVEQ.l #$00,D0
000275F4 <AmiBlitz3.ab3@10072>     MOVE.b $E(A2),D0                                       ;labeltemp
000275F6 <AmiBlitz3.ab3@10073>     MOVEA.l A2,A1
000275F8 <AmiBlitz3.ab3@10074>     MOVEA.l (A2),A2
000275FE <AmiBlitz3.ab3@10075>     MOVE.l mempool2,a0
00027602 <AmiBlitz3.ab3@10077> BRA.w JL_0_740C
00027604 <AmiBlitz3.ab3@10080> RTS
0002760A <AmiBlitz3.ab3@10084>   MOVEA.l data1,A4
00027610 <AmiBlitz3.ab3@10085>   CMPA.l data2at,A4
00027614 <AmiBlitz3.ab3@10086>   BCC.w JL_0_7442
00027616 <AmiBlitz3.ab3@10087>     MOVE.b D1,(A4)+
0002761C <AmiBlitz3.ab3@10088>     MOVE.l A4,data1
0002761E <AmiBlitz3.ab3@10089> RTS
00027626 <AmiBlitz3.ab3@10092>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
0002762C <AmiBlitz3.ab3@10093>   ADDQ.l #1,data1
0002762E <AmiBlitz3.ab3@10094> RTS
00027630 <AmiBlitz3.ab3@10098>   SWAP D1
00027634 <AmiBlitz3.ab3@10099>   BSR.w pokedata1
00027636 <AmiBlitz3.ab3@10100>   SWAP D1
0002763C <AmiBlitz3.ab3@10103>   MOVEA.l data1,A4
00027642 <AmiBlitz3.ab3@10104>   CMPA.l data2at,A4
00027646 <AmiBlitz3.ab3@10105>    BCC.w JL_0_7474
00027648 <AmiBlitz3.ab3@10106>   MOVE.w D1,(A4)+
0002764E <AmiBlitz3.ab3@10107>   MOVE.l A4,data1
00027650 <AmiBlitz3.ab3@10108> RTS
00027658 <AmiBlitz3.ab3@10111>   MOVE.w #$FFFF,dontwrite
0002765E <AmiBlitz3.ab3@10112>   ADDQ.l #2,data1
00027660 <AmiBlitz3.ab3@10113> RTS
00027666 <AmiBlitz3.ab3@10117>   MOVE.l data1,D3                                      ;write local string/type allocs
00027668 <AmiBlitz3.ab3@10118>   MOVEQ.l #$00,D4
0002766C <AmiBlitz3.ab3@10121>   CMPA.w #$0,A2
00027670 <AmiBlitz3.ab3@10122>    BEQ.w JL_0_74CAc
00027674 <AmiBlitz3.ab3@10123>   TST.w $6(A2)
00027678 <AmiBlitz3.ab3@10124>    BNE.w JL_0_74C4c
0002767C <AmiBlitz3.ab3@10125>   MOVEA.l $A(A2),A3
00027684 <AmiBlitz3.ab3@10126>   CMPI.l #$100,$4(A3)
00027688 <AmiBlitz3.ab3@10127>    BCS.w JL_0_74C4c
0002768C <AmiBlitz3.ab3@10128>   MOVE.w $4(A2),D1
00027690 <AmiBlitz3.ab3@10129>    BSR.w pokedata1
00027694 <AmiBlitz3.ab3@10130>   MOVE.w $8(A3),D1
00027698 <AmiBlitz3.ab3@10131>    BSR.w pokedata1
0002769A <AmiBlitz3.ab3@10132>   ADDQ.w #1,D4
0002769C <AmiBlitz3.ab3@10135>    MOVEA.l (A2),A2
000276A0 <AmiBlitz3.ab3@10136> BRA.w JL_0_7492c
000276A2 <AmiBlitz3.ab3@10139>    TST.w D4
000276A6 <AmiBlitz3.ab3@10140>    BEQ.w JL_0_74E0
000276AA <AmiBlitz3.ab3@10141>   MOVE.w #$FF37,D1
000276AE <AmiBlitz3.ab3@10142>    BSR.w uselib
000276B2 <AmiBlitz3.ab3@10143>   MOVE.w #$FFFA,D1
000276B6 <AmiBlitz3.ab3@10144> BRA.w uselib
000276BC <AmiBlitz3.ab3@10152>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
000276C2 <AmiBlitz3.ab3@10155>   MOVE.l data1,D3
000276C4 <AmiBlitz3.ab3@10156>   MOVEQ.l #$00,D4
000276CA <AmiBlitz3.ab3@10157>   TST.b iserror
000276CE <AmiBlitz3.ab3@10158>   BEQ JL_0_7492
000276D0 <AmiBlitz3.ab3@10159>   RTS
000276D4 <AmiBlitz3.ab3@10161>    CMPA.w #$0,A2
000276D8 <AmiBlitz3.ab3@10162>    BEQ.w JL_0_74CA
000276DC <AmiBlitz3.ab3@10163>   TST.w $6(A2)
000276E0 <AmiBlitz3.ab3@10164>    BNE.w JL_0_74C4
000276E4 <AmiBlitz3.ab3@10165>   MOVEA.l $A(A2),A3
000276EC <AmiBlitz3.ab3@10166>   CMPI.l #$100,$4(A3)
000276F0 <AmiBlitz3.ab3@10167>    BCS.w JL_0_74C4
000276F4 <AmiBlitz3.ab3@10168>   MOVE.w $4(A2),D1
000276F8 <AmiBlitz3.ab3@10169>    BSR.w pokedata1
000276FC <AmiBlitz3.ab3@10170>   MOVE.w $8(A3),D1
00027700 <AmiBlitz3.ab3@10171>    BSR.w pokedata1
00027702 <AmiBlitz3.ab3@10172>   ADDQ.w #1,D4
00027704 <AmiBlitz3.ab3@10175>   MOVEA.l (A2),A2
00027708 <AmiBlitz3.ab3@10176> BRA.w JL_0_7492
0002770E <AmiBlitz3.ab3@10180>   MOVEA.l sharebase,A2
00027712 <AmiBlitz3.ab3@10183>   CMPA.w #$0,A2
00027716 <AmiBlitz3.ab3@10184>    BEQ.w JL_0_74CAb
0002771A <AmiBlitz3.ab3@10186>   TST.w $6(A2)
0002771E <AmiBlitz3.ab3@10187>    BNE.w JL_0_74C4b
00027722 <AmiBlitz3.ab3@10188>   MOVEA.l $A(A2),A3
0002772A <AmiBlitz3.ab3@10189>   CMPI.l #$100,$4(A3)
0002772E <AmiBlitz3.ab3@10190>    BCS.w JL_0_74C4b
00027732 <AmiBlitz3.ab3@10191>   MOVE.w $4(A2),D1
00027736 <AmiBlitz3.ab3@10192>    BSR.w pokedata1
0002773A <AmiBlitz3.ab3@10193>   MOVE.w $8(A3),D1
0002773E <AmiBlitz3.ab3@10194>    BSR.w pokedata1
00027740 <AmiBlitz3.ab3@10195>   ADDQ.w #1,D4
00027742 <AmiBlitz3.ab3@10198>   MOVEA.l (A2),A2
00027746 <AmiBlitz3.ab3@10199> BRA.w JL_0_7492b
00027748 <AmiBlitz3.ab3@10202>    TST.w D4
0002774C <AmiBlitz3.ab3@10203>    BEQ.w JL_0_74E0
00027750 <AmiBlitz3.ab3@10204>   MOVE.w #$FF37,D1
00027754 <AmiBlitz3.ab3@10205>    BSR.w uselib                                            ;use statics lib
00027758 <AmiBlitz3.ab3@10206>   MOVE.w #$FFFA,D1                                         ;use memlib
0002775C <AmiBlitz3.ab3@10207> BRA.w uselib
0002775E <AmiBlitz3.ab3@10210> RTS
00027764 <AmiBlitz3.ab3@10214>   MOVE.w numtoa2,D1
00027768 <AmiBlitz3.ab3@10215>    BSR.w writeword
0002776C <AmiBlitz3.ab3@10216>    BSR.w addoff
0002776E <AmiBlitz3.ab3@10217>   MOVE.l D3,D1
00027772 <AmiBlitz3.ab3@10218>    BSR.w writelong
00027774 <AmiBlitz3.ab3@10219>   SUBQ.w #1,D4
0002777A <AmiBlitz3.ab3@10220>   MOVE.w D4,endarray+2
00027780 <AmiBlitz3.ab3@10221>   MOVE.l endarray,D1
00027784 <AmiBlitz3.ab3@10222> BRA.w writelong
00027786 <AmiBlitz3.ab3@10226>   MOVE.l D3,-(A7)
0002778C <AmiBlitz3.ab3@10229>   MOVEA.l _dosbase,A6
00027790 <AmiBlitz3.ab3@10230>   JSR _Write(a6)
00027792 <AmiBlitz3.ab3@10232>   CMP.l (A7)+,D0
00027796 <AmiBlitz3.ab3@10233>    BNE.w JL_0_7516
00027798 <AmiBlitz3.ab3@10234> RTS
0002779A <AmiBlitz3.ab3@10237>   MOVE.l D7,D1
000277A0 <AmiBlitz3.ab3@10239>   MOVEA.l _dosbase,A6
000277A4 <AmiBlitz3.ab3@10240>   JSR _Close(a6)
000277AA <AmiBlitz3.ab3@10243> JMP error_create_exe
000277B0 <AmiBlitz3.ab3@10252> 
000277B6 <AmiBlitz3.ab3@10253>   MOVE.l A7,errstack
000277BA <AmiBlitz3.ab3@10254>   MOVEM.l d2-d7/a2-a6,-(a7)
000277C4 <AmiBlitz3.ab3@10255>   MOVE.l #AL_0_7790,errcont
000277CA <AmiBlitz3.ab3@10256>    JSR call_setpointerbusy
000277D2 <AmiBlitz3.ab3@10257>   MOVE.w #$FFFF,anyerrs
000277DC <AmiBlitz3.ab3@10258>   CMP.l #-1,chipstart
000277E0 <AmiBlitz3.ab3@10259>   BEQ 'l01
000277E6 <AmiBlitz3.ab3@10260>   MOVE.l chipend,d1
000277E8 <AmiBlitz3.ab3@10261>   ADDQ.l #3,d1
000277EE <AmiBlitz3.ab3@10262>   AND.l #$fffffffc,d1                                      ;bug
000277F4 <AmiBlitz3.ab3@10263>   MOVE.l d1,chipend
000277F6 <AmiBlitz3.ab3@10264>   MOVE.l d1,a1
000277FC <AmiBlitz3.ab3@10265>   MOVE.l chipstart,a0
000277FE <AmiBlitz3.ab3@10266>   MOVE.l a1,d1
00027800 <AmiBlitz3.ab3@10267>   SUB.l a0,d1
00027806 <AmiBlitz3.ab3@10268>   MOVE.l d1,chipsize
00027810 <AmiBlitz3.ab3@10271>   CMP.l #-1,bssstart
00027814 <AmiBlitz3.ab3@10272>   BEQ 'l11
0002781A <AmiBlitz3.ab3@10273>   MOVE.l realbssend,a1
00027820 <AmiBlitz3.ab3@10274>   MOVE.l bssstart,a0
00027822 <AmiBlitz3.ab3@10275>   MOVE.l a1,d1
00027824 <AmiBlitz3.ab3@10276>   SUB.l a0,d1
0002782A <AmiBlitz3.ab3@10277>   MOVE.l d1,bsssize
0002782E <AmiBlitz3.ab3@10278>   BEQ 'l11
00027830 <AmiBlitz3.ab3@10281>   TST.b (a0)+
00027834 <AmiBlitz3.ab3@10282>   BEQ 'l31
0002783A <AmiBlitz3.ab3@10283>   TST.b debugmode
0002783E <AmiBlitz3.ab3@10284>   BEQ 'l1
00027844 <AmiBlitz3.ab3@10285>   TST.b exdebug
00027848 <AmiBlitz3.ab3@10286>   BNE 'l31
0002784E <AmiBlitz3.ab3@10289>   MOVE.l #nodata,-(a7)
00027854 <AmiBlitz3.ab3@10290> JMP handle_compileerror
00027856 <AmiBlitz3.ab3@10293>   CMP.l a0,a1
0002785A <AmiBlitz3.ab3@10294>   BGT 'l32
00027860 <AmiBlitz3.ab3@10295>   MOVE.l bssend,d1
00027862 <AmiBlitz3.ab3@10296>   ADDQ.l #3,d1
00027868 <AmiBlitz3.ab3@10297>   AND.l #$fffffffc,d1                                      ;bug
0002786E <AmiBlitz3.ab3@10298>   MOVE.l d1,bssend
00027870 <AmiBlitz3.ab3@10299>   MOVE.l d1,a1
00027876 <AmiBlitz3.ab3@10300>   MOVE.l bssstart,a0
00027878 <AmiBlitz3.ab3@10301>   MOVE.l a1,d1
0002787A <AmiBlitz3.ab3@10302>   SUB.l a0,d1
00027880 <AmiBlitz3.ab3@10303>   MOVE.l d1,bsssize
00027884 <AmiBlitz3.ab3@10306>   MOVEM.l d5-d7/d3,-(a7)
0002788A <AmiBlitz3.ab3@10307>   MOVE.w dontwrite,D1
0002788E <AmiBlitz3.ab3@10308>   BNE.w JL_0_757C
00027894 <AmiBlitz3.ab3@10309>   MOVE.l chipsize,d5
0002789A <AmiBlitz3.ab3@10310>   MOVE.l bsssize,d3
000278A0 <AmiBlitz3.ab3@10311>   MOVE.l chipstart,d7
000278A6 <AmiBlitz3.ab3@10312>   MOVE.l bssstart,d6
000278AC <AmiBlitz3.ab3@10313>   MOVEA.l hunkoffsetbase,A2
000278B2 <AmiBlitz3.ab3@10314>   MOVEA.l destbufferstart,A1
000278B4 <AmiBlitz3.ab3@10315>   MOVE.l A1,D2
000278BA <AmiBlitz3.ab3@10316>   ADD.l noinits,D2
000278C0 <AmiBlitz3.ab3@10317>   CLR.l hunkoffsetnum
000278C4 <AmiBlitz3.ab3@10320>   CMPA.w #$0,A2
000278C8 <AmiBlitz3.ab3@10321>    BEQ.w JL_0_757C
000278CC <AmiBlitz3.ab3@10322>   MOVE.l $4(A2),D0
000278D0 <AmiBlitz3.ab3@10323>    LEA $0(a1,d0.l),a0
000278D2 <AmiBlitz3.ab3@10324>    MOVE.l (a0),d1
000278D4 <AmiBlitz3.ab3@10325>   TST.l d1
000278D8 <AmiBlitz3.ab3@10326>    BMI.w 'lm1
000278E0 <AmiBlitz3.ab3@10327>   MOVE.b #0,newhunk
000278EA <AmiBlitz3.ab3@10328>   CMP.l #-1,chipstart
000278EE <AmiBlitz3.ab3@10329>   BEQ 'l10
000278F4 <AmiBlitz3.ab3@10330>   CMP.l chipstart,d1
000278F8 <AmiBlitz3.ab3@10331>   BLT 'l10
00027900 <AmiBlitz3.ab3@10332>   MOVE.b #1,newhunk
00027906 <AmiBlitz3.ab3@10333>   CMP.l chipend,d1
0002790A <AmiBlitz3.ab3@10334>   BGE 'l110
0002790C <AmiBlitz3.ab3@10335>   SUB.l d7,(a0)
00027914 <AmiBlitz3.ab3@10336>   ADD.l #$80000000,4(a2)
00027918 <AmiBlitz3.ab3@10337> BRA JL_0_7576
0002791C <AmiBlitz3.ab3@10340>   SUB.l d5,0(a0)
00027926 <AmiBlitz3.ab3@10343>   CMP.l #-1,bssstart
0002792A <AmiBlitz3.ab3@10344>     BEQ 'l11
00027930 <AmiBlitz3.ab3@10345>   CMP.l bssstart,d1
00027934 <AmiBlitz3.ab3@10346>   BLT 'l11
0002793A <AmiBlitz3.ab3@10347>   CMP.l bssend,d1
0002793E <AmiBlitz3.ab3@10348>   BGE 'l111
00027944 <AmiBlitz3.ab3@10349>   TST.b newhunk
00027948 <AmiBlitz3.ab3@10350>   BEQ 'ln1
0002794A <AmiBlitz3.ab3@10351>   ADD.l d5,(a0)
0002794C <AmiBlitz3.ab3@10354>   SUB.l d6,(a0)
00027954 <AmiBlitz3.ab3@10355>   ADD.l #$40000000,4(a2)
00027958 <AmiBlitz3.ab3@10356> BRA JL_0_7576
0002795C <AmiBlitz3.ab3@10359>   SUB.l d3,0(a0)
0002795E <AmiBlitz3.ab3@10362>   SUB.l D2,(A0)
00027964 <AmiBlitz3.ab3@10365>   ADDQ.l #1,hunkoffsetnum
00027966 <AmiBlitz3.ab3@10368>    MOVEA.l (A2),A2
0002796A <AmiBlitz3.ab3@10369> BRA.w JL_0_755E
0002796E <AmiBlitz3.ab3@10373>   MOVEM.l (a7)+,d5-d7/d3
00027974 <AmiBlitz3.ab3@10374>   MOVE.l ptr_newexefilename,D1
0002797A <AmiBlitz3.ab3@10375>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027980 <AmiBlitz3.ab3@10376>   MOVEA.l _dosbase,A6
00027984 <AmiBlitz3.ab3@10377>    JSR _Open(A6)
00027986 <AmiBlitz3.ab3@10378>   MOVE.l D0,D7
0002798A <AmiBlitz3.ab3@10379>    BEQ.w execerr
00027990 <AmiBlitz3.ab3@10380>   MOVE.l objlen,D0
00027996 <AmiBlitz3.ab3@10381>   SUB.l #moremem,d0
0002799C <AmiBlitz3.ab3@10382>   SUB.l noinits,D0
000279A6 <AmiBlitz3.ab3@10383>   CMP.l #-1,bssstart
000279AA <AmiBlitz3.ab3@10384>   BEQ 'l60
000279B0 <AmiBlitz3.ab3@10385>   SUB.l bsssize,d0
000279B6 <AmiBlitz3.ab3@10386>   SUB.l chipsize,d0
000279BA <AmiBlitz3.ab3@10387> BRA.s 'l61
000279C4 <AmiBlitz3.ab3@10390>   CMP.l #-1,chipstart
000279C8 <AmiBlitz3.ab3@10391>   BEQ 'l61
000279CE <AmiBlitz3.ab3@10392>   SUB.l bsssize,d0
000279D4 <AmiBlitz3.ab3@10393>   SUB.l chipsize,d0
000279D6 <AmiBlitz3.ab3@10396>   ADDQ.l #3,D0
000279D8 <AmiBlitz3.ab3@10397>   LSR.l #2,D0
000279DE <AmiBlitz3.ab3@10398>   MOVE.l D0,tstsize1
000279E4 <AmiBlitz3.ab3@10399>   MOVE.l D0,tstsize2
000279E6 <AmiBlitz3.ab3@10400>   MOVE.l D7,D1
000279EC <AmiBlitz3.ab3@10401>   MOVE.l #tsthead,D2                                      ;hunkbegin
000279EE <AmiBlitz3.ab3@10402>   MOVEQ.l #$20,D3
000279F8 <AmiBlitz3.ab3@10403>   CMP.l #-1,bssstart
000279FC <AmiBlitz3.ab3@10404>   BEQ 'lb1
00027A06 <AmiBlitz3.ab3@10405>   CMP.l #-1,chipstart
00027A0A <AmiBlitz3.ab3@10406>   BEQ 'lb1
00027A14 <AmiBlitz3.ab3@10407>   MOVE.l #1,bssnum
00027A1E <AmiBlitz3.ab3@10408>   MOVE.l #2,chipnum
00027A20 <AmiBlitz3.ab3@10409>   MOVEQ.l #$28,D3
00027A26 <AmiBlitz3.ab3@10410>   MOVE.l bsssize,d2
00027A28 <AmiBlitz3.ab3@10411>   ADDQ.l #3,d2
00027A2A <AmiBlitz3.ab3@10412>   ASR.l #2,d2
00027A30 <AmiBlitz3.ab3@10413>   MOVE.l d2,hunkend+8
00027A36 <AmiBlitz3.ab3@10414>   MOVE.l d2,bsssize3
00027A3C <AmiBlitz3.ab3@10415>   MOVE.l chipsize,d2
00027A3E <AmiBlitz3.ab3@10416>   ADDQ.l #3,d2
00027A40 <AmiBlitz3.ab3@10417>   ASR.l #2,d2
00027A46 <AmiBlitz3.ab3@10418>   MOVE.l d2,chipsize2
00027A50 <AmiBlitz3.ab3@10419>   ADD.l #$40000000,chipsize2
00027A56 <AmiBlitz3.ab3@10420>   MOVE.l d2,hunkend2+8
00027A5C <AmiBlitz3.ab3@10421>   MOVE.l D0,tstsize1c
00027A62 <AmiBlitz3.ab3@10422>   MOVE.l D0,tstsize2c
00027A68 <AmiBlitz3.ab3@10423>   MOVE.l #hunkbegin2,d2
00027A6C <AmiBlitz3.ab3@10424> BRA 'l100
00027A76 <AmiBlitz3.ab3@10427>   CMP.l #-1,bssstart
00027A7A <AmiBlitz3.ab3@10428>   BEQ 'l10
00027A84 <AmiBlitz3.ab3@10429>   MOVE.l #1,bssnum
00027A86 <AmiBlitz3.ab3@10430>   MOVEQ.l #$24,D3
00027A8C <AmiBlitz3.ab3@10431>   MOVE.l bsssize,d2
00027A8E <AmiBlitz3.ab3@10432>   ADDQ.l #3,d2
00027A90 <AmiBlitz3.ab3@10433>   ASR.l #2,d2
00027A96 <AmiBlitz3.ab3@10434>   MOVE.l d2,hunkend+8
00027A9C <AmiBlitz3.ab3@10435>   MOVE.l d2,bsssize2
00027AA2 <AmiBlitz3.ab3@10436>   MOVE.l D0,tstsize1b
00027AA8 <AmiBlitz3.ab3@10437>   MOVE.l D0,tstsize2b
00027AAE <AmiBlitz3.ab3@10438>   MOVE.l #hunkbegin,d2
00027AB8 <AmiBlitz3.ab3@10441>   CMP.l #-1,chipstart
00027ABC <AmiBlitz3.ab3@10442>   BEQ 'l100
00027AC6 <AmiBlitz3.ab3@10443>   MOVE.l #1,chipnum
00027AC8 <AmiBlitz3.ab3@10444>   MOVEQ.l #$24,D3
00027ACE <AmiBlitz3.ab3@10445>   MOVE.l chipsize,d2
00027AD0 <AmiBlitz3.ab3@10446>   ADDQ.l #3,d2
00027AD2 <AmiBlitz3.ab3@10447>   ASR.l #2,d2
00027AD8 <AmiBlitz3.ab3@10448>   MOVE.l d2,hunkend2+8
00027ADE <AmiBlitz3.ab3@10449>   MOVE.l d2,bsssize2
00027AE8 <AmiBlitz3.ab3@10450>   ADD.l #$40000000,bsssize2
00027AEE <AmiBlitz3.ab3@10451>   MOVE.l D0,tstsize1b
00027AF4 <AmiBlitz3.ab3@10452>   MOVE.l D0,tstsize2b
00027AFA <AmiBlitz3.ab3@10453>   MOVE.l #hunkbegin,d2
00027AFE <AmiBlitz3.ab3@10456>    BSR.w mywrite
00027B04 <AmiBlitz3.ab3@10457>   MOVE.l destbufferstart,D2
00027B0A <AmiBlitz3.ab3@10458>   ADD.l noinits,D2
00027B10 <AmiBlitz3.ab3@10459>   MOVE.l objlen,D3
00027B16 <AmiBlitz3.ab3@10460>   SUB.l #moremem,d3
00027B1C <AmiBlitz3.ab3@10461>   SUB.l noinits,D3
00027B26 <AmiBlitz3.ab3@10462>   CMP.l #-1,bssstart
00027B2A <AmiBlitz3.ab3@10463>   BNE 'l40
00027B34 <AmiBlitz3.ab3@10464>   CMP.l #-1,chipstart
00027B38 <AmiBlitz3.ab3@10465>   BNE 'l40
00027B3C <AmiBlitz3.ab3@10466> BRA 'l41
00027B42 <AmiBlitz3.ab3@10469>   MOVE.l codeend,d1
00027B44 <AmiBlitz3.ab3@10470>     SUB.l d2,d1
00027B46 <AmiBlitz3.ab3@10471>     MOVE.l d1,d3
00027B4C <AmiBlitz3.ab3@10472>   SUB.l bsssize,d3
00027B52 <AmiBlitz3.ab3@10473>   SUB.l chipsize,d3
00027B54 <AmiBlitz3.ab3@10474>   MOVE.l D7,D1
00027B58 <AmiBlitz3.ab3@10475>   BSR.w mywrite
00027B5E <AmiBlitz3.ab3@10476>   MOVE.l objlen,D3
00027B64 <AmiBlitz3.ab3@10477>   SUB.l #moremem,d3
00027B6A <AmiBlitz3.ab3@10478>   SUB.l noinits,D3
00027B6C <AmiBlitz3.ab3@10479>   MOVE.l d3,d1
00027B72 <AmiBlitz3.ab3@10480>   MOVE.l destbufferstart,D2
00027B78 <AmiBlitz3.ab3@10481>   ADD.l noinits,D2
00027B7A <AmiBlitz3.ab3@10482>   ADD.l d2,d1
00027B80 <AmiBlitz3.ab3@10483>   SUB.l codeend,d1
00027B82 <AmiBlitz3.ab3@10484>   MOVE.l d1,d3
00027B88 <AmiBlitz3.ab3@10485>   MOVE.l codeend,d2
00027B8A <AmiBlitz3.ab3@10488>   MOVE.l d2,d1
00027B8C <AmiBlitz3.ab3@10489>   ADD.l d3,d1
00027B8E <AmiBlitz3.ab3@10490>   ADDQ.l #3,D1
00027B94 <AmiBlitz3.ab3@10491>   ANDI.l #$FFFFFFFC,D1
00027B96 <AmiBlitz3.ab3@10492>   SUB.l d2,d1
00027B98 <AmiBlitz3.ab3@10493>   MOVE.l d1,d3
00027B9A <AmiBlitz3.ab3@10494>   MOVE.l D7,D1
00027B9E <AmiBlitz3.ab3@10495>    BSR.w mywrite
00027BA8 <AmiBlitz3.ab3@10496>   MOVE.l hunkoffsetcounter,tstsize3
00027BAC <AmiBlitz3.ab3@10497>    BEQ.w JL_0_7646
00027BAE <AmiBlitz3.ab3@10498>   MOVE.l D7,D1
00027BB4 <AmiBlitz3.ab3@10499>   MOVE.l #tstend,D2
00027BB6 <AmiBlitz3.ab3@10500>   MOVEQ.l #$04,D3
00027BBA <AmiBlitz3.ab3@10501>    BSR.w mywrite
00027BC0 <AmiBlitz3.ab3@10502>    MOVEA.l _execbase,A6
00027BC6 <AmiBlitz3.ab3@10503>    MOVE.l hunkoffsetcounter,d0
00027BC8 <AmiBlitz3.ab3@10504>    ASL.l #2,d0
00027BCE <AmiBlitz3.ab3@10505>    ADD.l #12,d0
00027BD0 <AmiBlitz3.ab3@10506>    MOVEQ #0,d1
00027BD4 <AmiBlitz3.ab3@10507>    JSR _AllocMem(a6)
00027BD6 <AmiBlitz3.ab3@10508>    TST.l d0
00027BDA <AmiBlitz3.ab3@10509>    BEQ nomem
00027BE0 <AmiBlitz3.ab3@10510>    MOVE.l noinits,D4
00027BE2 <AmiBlitz3.ab3@10511>    MOVE.l d5,-(a7)
00027BE4 <AmiBlitz3.ab3@10512>    MOVE.l d0,d5
00027BE6 <AmiBlitz3.ab3@10513>    MOVE.l d0,a1
00027BEC <AmiBlitz3.ab3@10514>    MOVEA.l hunkoffsetbase,A2
00027BF4 <AmiBlitz3.ab3@10515>    MOVE.b #0,newhunk
00027BF8 <AmiBlitz3.ab3@10518>   CMPA.w #$0,A2
00027BFC <AmiBlitz3.ab3@10519>    BEQ.w savehunk
00027C02 <AmiBlitz3.ab3@10520>   MOVE.l destbufferstart,D2
00027C08 <AmiBlitz3.ab3@10521>   ADD.l noinits,D2
00027C0C <AmiBlitz3.ab3@10522>   MOVE.l  $4(A2),d1
00027C10 <AmiBlitz3.ab3@10523>   BTST #31,d1
00027C14 <AmiBlitz3.ab3@10524>   BEQ 'lh1
00027C1C <AmiBlitz3.ab3@10525>   MOVE.b #1,newhunk
00027C20 <AmiBlitz3.ab3@10526> BRA 'lh3
00027C24 <AmiBlitz3.ab3@10529>   BTST #30,d1
00027C28 <AmiBlitz3.ab3@10530>   BEQ 'lh2
00027C30 <AmiBlitz3.ab3@10531>   MOVE.b #1,newhunk
00027C34 <AmiBlitz3.ab3@10532> BRA 'lh3
00027C36 <AmiBlitz3.ab3@10535>   ADD.l d1,d2
00027C3C <AmiBlitz3.ab3@10536>   CMP.l chipend,d2
00027C40 <AmiBlitz3.ab3@10537>   BLT 'l100
00027C46 <AmiBlitz3.ab3@10538>   SUB.l chipsize,d1
00027C4C <AmiBlitz3.ab3@10541>   CMP.l bssend,d2
00027C50 <AmiBlitz3.ab3@10542>   BLT 'l101
00027C56 <AmiBlitz3.ab3@10543>   SUB.l bsssize,d1
00027C58 <AmiBlitz3.ab3@10546>   MOVE.l d1,(a1)
00027C5A <AmiBlitz3.ab3@10547>   SUB.l D4,(A1)+
00027C5C <AmiBlitz3.ab3@10550>   MOVEA.l (A2),A2
00027C60 <AmiBlitz3.ab3@10551> BRA.w menu_createresidentfile__oloopb
00027C62 <AmiBlitz3.ab3@10555>   MOVE.l D7,D1
00027C68 <AmiBlitz3.ab3@10556>   MOVEA.l _dosbase,A6
00027C72 <AmiBlitz3.ab3@10557>   MOVE.l hunkoffsetnum,tstsize3
00027C76 <AmiBlitz3.ab3@10558>   BEQ 'ln1
00027C7C <AmiBlitz3.ab3@10559>   MOVE.l #tstend+4,d2
00027C7E <AmiBlitz3.ab3@10560>     MOVEQ #8,d3
00027C82 <AmiBlitz3.ab3@10561>    JSR _Write(A6)
00027C84 <AmiBlitz3.ab3@10562>   MOVE.l d7,d1
00027C8A <AmiBlitz3.ab3@10563>   MOVE.l hunkoffsetnum,d3
00027C8C <AmiBlitz3.ab3@10564>   ASL.l #2,d3
00027C8E <AmiBlitz3.ab3@10565>   MOVE.l d5,D2
00027C92 <AmiBlitz3.ab3@10566>   JSR _Write(a6)
00027C98 <AmiBlitz3.ab3@10569>   TST.b newhunk
00027C9C <AmiBlitz3.ab3@10570>   BEQ 'l10
00027CA2 <AmiBlitz3.ab3@10571>   MOVEA.l hunkoffsetbase,A2
00027CA4 <AmiBlitz3.ab3@10572>   MOVE.l d5,a0
00027CA6 <AmiBlitz3.ab3@10573>   ADDQ #8,a0
00027CAE <AmiBlitz3.ab3@10574>   MOVE.l bssnum,-4(a0)
00027CB0 <AmiBlitz3.ab3@10575>   MOVEQ #0,d6
00027CB4 <AmiBlitz3.ab3@10578>   CMPA.w #$0,A2
00027CB8 <AmiBlitz3.ab3@10579>    BEQ.w 'lh3
00027CBE <AmiBlitz3.ab3@10580>   MOVE.l destbufferstart,D2
00027CC4 <AmiBlitz3.ab3@10581>   ADD.l noinits,D2
00027CC8 <AmiBlitz3.ab3@10582>   MOVE.l  $4(A2),d1
00027CCC <AmiBlitz3.ab3@10583>   BTST #30,d1
00027CD0 <AmiBlitz3.ab3@10584>   BEQ 'lh1
00027CD4 <AmiBlitz3.ab3@10585>   BCLR #30,d1
00027CD6 <AmiBlitz3.ab3@10586>   MOVE.l d1,(a0)
00027CD8 <AmiBlitz3.ab3@10587>   SUB.l D4,(A0)+
00027CDA <AmiBlitz3.ab3@10588>   ADDQ.l #1,d6
00027CDC <AmiBlitz3.ab3@10591>   MOVE.l (a2),a2
00027CE0 <AmiBlitz3.ab3@10592> BRA 'lh2
00027CE2 <AmiBlitz3.ab3@10595>   TST.l d6
00027CE6 <AmiBlitz3.ab3@10596>     BEQ 'lh10
00027CE8 <AmiBlitz3.ab3@10597>     MOVE.l d5,a0
00027CEA <AmiBlitz3.ab3@10598>     MOVE.l d6,(a0)
00027CEC <AmiBlitz3.ab3@10599>     MOVE.l d7,d1
00027CEE <AmiBlitz3.ab3@10600>     MOVE.l d5,d2
00027CF0 <AmiBlitz3.ab3@10601>     MOVE.l d6,d3
00027CF2 <AmiBlitz3.ab3@10602>     ASL.l #2,d3
00027CF4 <AmiBlitz3.ab3@10603>     ADDQ.l #8,d3
00027CF8 <AmiBlitz3.ab3@10604>     BSR.w mywrite
00027CFE <AmiBlitz3.ab3@10607>   MOVEA.l hunkoffsetbase,A2
00027D00 <AmiBlitz3.ab3@10608>   MOVE.l d5,a0
00027D02 <AmiBlitz3.ab3@10609>   ADDQ #8,a0
00027D0A <AmiBlitz3.ab3@10610>   MOVE.l chipnum,-4(a0)
00027D0C <AmiBlitz3.ab3@10611>   MOVEQ #0,d6
00027D10 <AmiBlitz3.ab3@10614>   CMPA.w #$0,A2
00027D14 <AmiBlitz3.ab3@10615>    BEQ.w 'lh30
00027D1A <AmiBlitz3.ab3@10616>   MOVE.l destbufferstart,D2
00027D20 <AmiBlitz3.ab3@10617>   ADD.l noinits,D2
00027D24 <AmiBlitz3.ab3@10618>   MOVE.l  $4(A2),d1
00027D28 <AmiBlitz3.ab3@10619>   BTST #31,d1
00027D2C <AmiBlitz3.ab3@10620>   BEQ 'lh11
00027D30 <AmiBlitz3.ab3@10621>   BCLR #31,d1
00027D32 <AmiBlitz3.ab3@10622>   MOVE.l d1,(a0)
00027D34 <AmiBlitz3.ab3@10623>   SUB.l D4,(A0)+
00027D36 <AmiBlitz3.ab3@10624>   ADDQ.l #1,d6
00027D38 <AmiBlitz3.ab3@10627>   MOVE.l (a2),a2
00027D3C <AmiBlitz3.ab3@10628> BRA 'lh20
00027D3E <AmiBlitz3.ab3@10631>   TST.l d6
00027D42 <AmiBlitz3.ab3@10632>     BEQ 'l10
00027D44 <AmiBlitz3.ab3@10633>     MOVE.l d5,a0
00027D46 <AmiBlitz3.ab3@10634>     MOVE.l d6,(a0)
00027D48 <AmiBlitz3.ab3@10635>     MOVE.l d7,d1
00027D4A <AmiBlitz3.ab3@10636>     MOVE.l d5,d2
00027D4C <AmiBlitz3.ab3@10637>     MOVE.l d6,d3
00027D4E <AmiBlitz3.ab3@10638>     ASL.l #2,d3
00027D50 <AmiBlitz3.ab3@10639>     ADDQ.l #8,d3
00027D54 <AmiBlitz3.ab3@10640>     BSR.w mywrite
00027D5A <AmiBlitz3.ab3@10644>    MOVEA.l _execbase,A6
00027D60 <AmiBlitz3.ab3@10645>    MOVE.l hunkoffsetcounter,d0
00027D62 <AmiBlitz3.ab3@10646>    ASL.l #2,d0
00027D68 <AmiBlitz3.ab3@10647>    ADD.l #12,d0
00027D6A <AmiBlitz3.ab3@10648>    MOVE.l d5,a1
00027D6E <AmiBlitz3.ab3@10649>    JSR _FreeMem(a6)
00027D74 <AmiBlitz3.ab3@10650>    MOVEA.l _dosbase,A6
00027D76 <AmiBlitz3.ab3@10651>    MOVE.l (a7)+,d5
00027D7A <AmiBlitz3.ab3@10652> BRA JL_0_7632
00027D80 <AmiBlitz3.ab3@10656>   MOVEA.l hunkoffsetbase,A2
00027D86 <AmiBlitz3.ab3@10657>   MOVE.l noinits,D4
00027D8A <AmiBlitz3.ab3@10660>   CMPA.w #$0,A2                                            ;write hunkoffsets
00027D8E <AmiBlitz3.ab3@10661>   BEQ.w JL_0_7632
00027D92 <AmiBlitz3.ab3@10662>   LEA $4(A2),A1
00027D94 <AmiBlitz3.ab3@10663>   SUB.l D4,(A1)
00027D96 <AmiBlitz3.ab3@10664>   MOVE.l D7,D1
00027D98 <AmiBlitz3.ab3@10665>   MOVE.l A1,D2
00027D9A <AmiBlitz3.ab3@10666>   MOVEQ.l #$04,D3
00027D9E <AmiBlitz3.ab3@10667>   BSR.w mywrite
00027DA2 <AmiBlitz3.ab3@10668>   ADD.l D4,$4(A2)
00027DA4 <AmiBlitz3.ab3@10669>   MOVEA.l (A2),A2
00027DA8 <AmiBlitz3.ab3@10670> BRA.w JL_0_7610
00027DAE <AmiBlitz3.ab3@10673>   CLR.l tstsize3
00027DB0 <AmiBlitz3.ab3@10674>   MOVE.l D7,D1
00027DB6 <AmiBlitz3.ab3@10675>   MOVE.l #tstsize3,D2
00027DB8 <AmiBlitz3.ab3@10676>   MOVEQ.l #$04,D3
00027DBC <AmiBlitz3.ab3@10677>    BSR.w mywrite
00027DC4 <AmiBlitz3.ab3@10680>   BTST #$7,link_debuginfo
00027DC8 <AmiBlitz3.ab3@10681>    BEQ.w JL_0_7706
00027DCE <AmiBlitz3.ab3@10682>   MOVE.l #sysdebug,D2                                      ;debughunks
00027DD0 <AmiBlitz3.ab3@10683>   MOVEQ.l #$04,D3
00027DD2 <AmiBlitz3.ab3@10684>   MOVE.l D7,D1
00027DD6 <AmiBlitz3.ab3@10685>    BSR.w mywrite
00027DDC <AmiBlitz3.ab3@10686>   MOVEA.l labelbase,A2
00027DE0 <AmiBlitz3.ab3@10689>   CMPA.w #$0,A2
00027DE4 <AmiBlitz3.ab3@10690>    BEQ.w JL_0_76F8
00027DEA <AmiBlitz3.ab3@10691>   BTST #$0,$7(A2)
00027DEE <AmiBlitz3.ab3@10692>    BEQ.w JL_0_7682
00027DF6 <AmiBlitz3.ab3@10693>   CMPI.l #$1,$4(A2)
00027DFA <AmiBlitz3.ab3@10695>   BRA.w JL_0_76F2                                            ;only addr labels
00027DFC <AmiBlitz3.ab3@10697>   MOVEQ.l #$00,D4
00027E00 <AmiBlitz3.ab3@10698>   MOVE.b $12(A2),D4
00027E04 <AmiBlitz3.ab3@10699>   SUBI.w #$13,D4
00027E06 <AmiBlitz3.ab3@10700>   ADDQ.w #2,D4
00027E0A <AmiBlitz3.ab3@10701>   ANDI.w #$FFFC,D4
00027E0C <AmiBlitz3.ab3@10702>   MOVE.l D4,D5
00027E0E <AmiBlitz3.ab3@10703>   LSR.w #2,D5
00027E14 <AmiBlitz3.ab3@10704>   MOVE.l D5,temp1
00027E16 <AmiBlitz3.ab3@10705>   LSL.w #2,D5
00027E1C <AmiBlitz3.ab3@10706>   MOVE.l #temp1,a1
00027E22 <AmiBlitz3.ab3@10708>   LEA debugstore,a0
00027E24 <AmiBlitz3.ab3@10709>   MOVE.l (a1),(a0)+
00027E26 <AmiBlitz3.ab3@10710>   MOVEQ.l #$04,D3
00027E2A <AmiBlitz3.ab3@10713>   LEA $13(A2),A1
00027E2C <AmiBlitz3.ab3@10714>   MOVE.l d4,d1
00027E2E <AmiBlitz3.ab3@10715>   SUBQ.l #1,d1
00027E30 <AmiBlitz3.ab3@10718>     MOVE.b (a1)+,d0
00027E34 <AmiBlitz3.ab3@10719>     BEQ 'l21
00027E38 <AmiBlitz3.ab3@10720>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00027E3C <AmiBlitz3.ab3@10721>     BNE 'ok
00027E40 <AmiBlitz3.ab3@10722>     MOVE.b #"_",d0
00027E42 <AmiBlitz3.ab3@10723> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00027E46 <AmiBlitz3.ab3@10724>   DBF d1,'l10
00027E4A <AmiBlitz3.ab3@10726> BRA 'l22
00027E4C <AmiBlitz3.ab3@10729>       CLR.b (a0)+
00027E50 <AmiBlitz3.ab3@10730>   DBF d1,'l21
00027E52 <AmiBlitz3.ab3@10733>   ADD.l d4,d3
00027E54 <AmiBlitz3.ab3@10738>   SUB.l D4,D5
00027E58 <AmiBlitz3.ab3@10739>    BEQ.w JL_0_76CE
00027E5E <AmiBlitz3.ab3@10740>   MOVE.l #zero,a1
00027E60 <AmiBlitz3.ab3@10742>   MOVE.l (a1),(a0)+
00027E62 <AmiBlitz3.ab3@10744>   ADD.l d5,d3
00027E66 <AmiBlitz3.ab3@10749>   MOVE.l $8(A2),D2
00027E6C <AmiBlitz3.ab3@10750>   SUB.l destbufferstart,D2
00027E72 <AmiBlitz3.ab3@10751>   SUB.l noinits,D2
00027E78 <AmiBlitz3.ab3@10752>   MOVE.l D2,temp1
00027E7E <AmiBlitz3.ab3@10753>   MOVE.l #temp1,a1
00027E80 <AmiBlitz3.ab3@10755>   MOVE.l (a1),(a0)+
00027E86 <AmiBlitz3.ab3@10756>   ADD.l #4,d3
00027E8C <AmiBlitz3.ab3@10757>   LEA debugstore,a0
00027E8E <AmiBlitz3.ab3@10758>   MOVE.l a0,d2
00027E90 <AmiBlitz3.ab3@10760>   MOVE.l D7,D1
00027E94 <AmiBlitz3.ab3@10761>   BSR.w mywrite
00027E96 <AmiBlitz3.ab3@10764>   MOVEA.l (A2),A2
00027E9A <AmiBlitz3.ab3@10765> BRA.w JL_0_7664
00027EA0 <AmiBlitz3.ab3@10769>   MOVE.l #zero,D2
00027EA2 <AmiBlitz3.ab3@10770>   MOVEQ.l #$04,D3
00027EA4 <AmiBlitz3.ab3@10771>   MOVE.l D7,D1
00027EA8 <AmiBlitz3.ab3@10772>   BSR.w mywrite
00027EAA <AmiBlitz3.ab3@10775>   MOVE.l D7,D1
00027EB0 <AmiBlitz3.ab3@10776>   MOVE.l #tstdone,D2                                      ;hunkend
00027EB2 <AmiBlitz3.ab3@10777>   MOVEQ.l #$04,D3
00027EBC <AmiBlitz3.ab3@10778>   CMPI.l #-1,bssstart
00027EC0 <AmiBlitz3.ab3@10779>   BEQ 'l10
00027EC2 <AmiBlitz3.ab3@10780>   MOVEQ #16,d3
00027EC8 <AmiBlitz3.ab3@10781>   MOVE.l #hunkend,d2
00027ED2 <AmiBlitz3.ab3@10782>   CMPI.l #-1,chipstart
00027ED6 <AmiBlitz3.ab3@10783>   BEQ 'l10
00027ED8 <AmiBlitz3.ab3@10784>   MOVE.l d7,d1
00027EDA <AmiBlitz3.ab3@10785>   MOVEQ #12,d3
00027EDE <AmiBlitz3.ab3@10786>   BSR.w mywrite
00027EE8 <AmiBlitz3.ab3@10789>   CMPI.l #-1,chipstart
00027EEC <AmiBlitz3.ab3@10790>   BEQ 'l11
00027EEE <AmiBlitz3.ab3@10791>   MOVEQ #12,d3
00027EF4 <AmiBlitz3.ab3@10792>   MOVE.l #hunkend2,d2
00027EF6 <AmiBlitz3.ab3@10793>   MOVE.l d7,d1
00027EFA <AmiBlitz3.ab3@10794>   BSR.w mywrite
00027EFC <AmiBlitz3.ab3@10795>   MOVE.l d7,d1
00027F02 <AmiBlitz3.ab3@10796>   MOVE.l chipstart,d2
00027F08 <AmiBlitz3.ab3@10797>   MOVE.l chipsize,d3
00027F0C <AmiBlitz3.ab3@10798>   BSR.w mywrite
00027F0E <AmiBlitz3.ab3@10799>   MOVEQ #4,d3
00027F14 <AmiBlitz3.ab3@10800>   MOVE.l #hunkend,d2
00027F16 <AmiBlitz3.ab3@10801>   MOVE.l d7,d1
00027F1A <AmiBlitz3.ab3@10804>   BSR.w mywrite
00027F1C <AmiBlitz3.ab3@10805>   MOVE.l D7,D1
00027F22 <AmiBlitz3.ab3@10806>   MOVEA.l _dosbase,A6
00027F26 <AmiBlitz3.ab3@10807>   JSR _Close(A6)
00027F2E <AmiBlitz3.ab3@10812>   BTST #$7,create_iconfile
00027F32 <AmiBlitz3.ab3@10813>    BEQ.w skip_createicon
00027F38 <AmiBlitz3.ab3@10815>   MOVEA.l ptr_newexefilename,A0
00027F3A <AmiBlitz3.ab3@10818>     TST.b (A0)+
00027F3E <AmiBlitz3.ab3@10819>   BNE.w JL_0_772C
00027F40 <AmiBlitz3.ab3@10820>   SUBQ.w #1,A0
00027F42 <AmiBlitz3.ab3@10821>   MOVE.l A0,-(A7)
00027F48 <AmiBlitz3.ab3@10822>   LEA str_infoextention2,A1
00027F4A <AmiBlitz3.ab3@10825>     MOVE.b (A1)+,(A0)+
00027F4E <AmiBlitz3.ab3@10826>   BNE.w JL_0_773A
00027F54 <AmiBlitz3.ab3@10828>   MOVE.l ptr_newexefilename,D1
00027F56 <AmiBlitz3.ab3@10829>   MOVEQ.l #-$02,D2
00027F5C <AmiBlitz3.ab3@10830>   MOVEA.l _dosbase,A6
00027F60 <AmiBlitz3.ab3@10831>   JSR _Lock(A6)
00027F62 <AmiBlitz3.ab3@10832>   MOVE.l D0,D1
00027F66 <AmiBlitz3.ab3@10833>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00027F6A <AmiBlitz3.ab3@10834>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00027F6E <AmiBlitz3.ab3@10835> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00027F74 <AmiBlitz3.ab3@10838>   MOVE.l ptr_newexefilename,D1
00027F7A <AmiBlitz3.ab3@10839>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027F80 <AmiBlitz3.ab3@10840>   MOVEA.l _dosbase,A6
00027F84 <AmiBlitz3.ab3@10841>    JSR _Open(A6)
00027F86 <AmiBlitz3.ab3@10842>   MOVE.l D0,D7
00027F8A <AmiBlitz3.ab3@10843>    BEQ.w JL_0_7788
00027F90 <AmiBlitz3.ab3@10844>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027F96 <AmiBlitz3.ab3@10845>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00027F98 <AmiBlitz3.ab3@10846>   MOVE.l D7,D1
00027F9E <AmiBlitz3.ab3@10847>   MOVEA.l _dosbase,A6
00027FA2 <AmiBlitz3.ab3@10848>   JSR _Write(A6)
00027FA4 <AmiBlitz3.ab3@10849>   MOVE.l D7,D1
00027FA8 <AmiBlitz3.ab3@10850>   JSR _Close(A6)
00027FAA <AmiBlitz3.ab3@10853>   MOVEA.l (A7)+,A0
00027FAC <AmiBlitz3.ab3@10854>   CLR.b (A0)
00027FB2 <AmiBlitz3.ab3@10859>   TST.b exdebug
00027FB6 <AmiBlitz3.ab3@10860>    BEQ JL_0_757Cb
00027FBC <AmiBlitz3.ab3@10861>   MOVE.w dontwrite,D1
00027FC0 <AmiBlitz3.ab3@10862>   BNE.w JL_0_757Cb
00027FC6 <AmiBlitz3.ab3@10863>   MOVE.l chipsize,d5
00027FCC <AmiBlitz3.ab3@10864>   MOVE.l bsssize,d3
00027FD2 <AmiBlitz3.ab3@10865>   MOVE.l chipstart,d7
00027FD8 <AmiBlitz3.ab3@10866>   MOVE.l bssstart,d6
00027FDE <AmiBlitz3.ab3@10867>   MOVEA.l hunkoffsetbase,A2
00027FE4 <AmiBlitz3.ab3@10868>   MOVEA.l destbufferstart,A1
00027FE6 <AmiBlitz3.ab3@10869>   MOVE.l A1,D2
00027FEC <AmiBlitz3.ab3@10870>   ADD.l noinits,D2
00027FF2 <AmiBlitz3.ab3@10871>   CLR.l hunkoffsetnum
00027FF6 <AmiBlitz3.ab3@10874>   CMPA.w #$0,A2
00027FFA <AmiBlitz3.ab3@10875>    BEQ.w JL_0_757Cb
00027FFE <AmiBlitz3.ab3@10876>   MOVE.l $4(A2),D0
00028002 <AmiBlitz3.ab3@10877>    LEA $0(a1,d0.l),a0
00028004 <AmiBlitz3.ab3@10878>    MOVE.l (a0),d1
00028006 <AmiBlitz3.ab3@10879>   TST.l d1
0002800A <AmiBlitz3.ab3@10880>    BMI.w 'lm1
00028012 <AmiBlitz3.ab3@10881>   MOVE.b #0,newhunk
0002801C <AmiBlitz3.ab3@10882>   CMP.l #-1,chipstart
00028020 <AmiBlitz3.ab3@10883>   BEQ 'l10
00028026 <AmiBlitz3.ab3@10884>   CMP.l chipstart,d1
0002802A <AmiBlitz3.ab3@10885>   BLT 'l10
00028032 <AmiBlitz3.ab3@10886>   MOVE.b #1,newhunk
00028038 <AmiBlitz3.ab3@10887>   CMP.l chipend,d1
0002803C <AmiBlitz3.ab3@10888>   BGE 'l110
0002803E <AmiBlitz3.ab3@10889>   ADD.l d7,(a0)
00028046 <AmiBlitz3.ab3@10890>   ADD.l #$80000000,4(a2)
0002804A <AmiBlitz3.ab3@10891> BRA JL_0_7576b
0002804E <AmiBlitz3.ab3@10894>   ADD.l d5,0(a0)
00028058 <AmiBlitz3.ab3@10897>   CMP.l #-1,bssstart
0002805C <AmiBlitz3.ab3@10898>     BEQ 'l11
00028062 <AmiBlitz3.ab3@10899>   CMP.l bssstart,d1
00028066 <AmiBlitz3.ab3@10900>   BLT 'l11
0002806C <AmiBlitz3.ab3@10901>   CMP.l bssend,d1
00028070 <AmiBlitz3.ab3@10902>   BGE 'l111
00028076 <AmiBlitz3.ab3@10903>   TST.b newhunk
0002807A <AmiBlitz3.ab3@10904>   BEQ 'ln1
0002807C <AmiBlitz3.ab3@10905>   ADD.l d5,(a0)
0002807E <AmiBlitz3.ab3@10908>   ADD.l d6,(a0)
00028086 <AmiBlitz3.ab3@10909>   ADD.l #$40000000,4(a2)
0002808A <AmiBlitz3.ab3@10910> BRA JL_0_7576b
0002808E <AmiBlitz3.ab3@10913>   ADD.l d3,0(a0)
00028090 <AmiBlitz3.ab3@10916>   ADD.l D2,(A0)                                            ;only normal code offsets restore
00028096 <AmiBlitz3.ab3@10919>   ADDQ.l #1,hunkoffsetnum
00028098 <AmiBlitz3.ab3@10922>   MOVEA.l (A2),A2
0002809C <AmiBlitz3.ab3@10923> BRA.w JL_0_755Eb
000280A2 <AmiBlitz3.ab3@10926>   JSR call_setpointernormal
000280A6 <AmiBlitz3.ab3@10927>   MOVEM.l (a7)+,d2-d7/a2-a6
000280A8 <AmiBlitz3.ab3@10929> RTS
000280AA <AmiBlitz3.ab3@10933>   MOVE.l D2,-(A7)
000280B0 <AmiBlitz3.ab3@10934>   MOVE.l destpointer,D2
000280B6 <AmiBlitz3.ab3@10935>   SUB.l destbufferstart,D2
000280BA <AmiBlitz3.ab3@10936>   BSR.w addhunkoffset
000280BC <AmiBlitz3.ab3@10937>   MOVE.l (A7)+,D2
000280BE <AmiBlitz3.ab3@10938> RTS
000280C2 <AmiBlitz3.ab3@10942>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
000280C8 <AmiBlitz3.ab3@10943>   TST.b nohunkoffset
000280CC <AmiBlitz3.ab3@10944>   BNE 'l10
000280CE <AmiBlitz3.ab3@10945>   MOVEQ.l #$8,D0
000280D0 <AmiBlitz3.ab3@10946>   MOVEQ.l #$01,D1
000280D6 <AmiBlitz3.ab3@10947>   MOVEA.l _execbase,A6
000280DC <AmiBlitz3.ab3@10948>   MOVE.l mempool2,a0
000280E0 <AmiBlitz3.ab3@10949>   JSR _AllocPooled(a6)
000280E6 <AmiBlitz3.ab3@10951>   ADDQ.l #1,hunkoffsetcounter
000280E8 <AmiBlitz3.ab3@10952>   MOVEA.l D0,A0
000280EE <AmiBlitz3.ab3@10953>   MOVE.l hunkoffsetbase,(A0)
000280F4 <AmiBlitz3.ab3@10954>   MOVE.l A0,hunkoffsetbase
000280F8 <AmiBlitz3.ab3@10955>   MOVE.l D2,$4(A0)
000280FC <AmiBlitz3.ab3@10958>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
000280FE <AmiBlitz3.ab3@10959> RTS
00028104 <AmiBlitz3.ab3@10963>   CLR.l hunkoffsetbase
0002810A <AmiBlitz3.ab3@10964>   MOVEA.l _execbase,A6
00028110 <AmiBlitz3.ab3@10965>   MOVEA.l hunkoffsetbase,A2
00028114 <AmiBlitz3.ab3@10968>     CMPA.w #$0,A2
00028118 <AmiBlitz3.ab3@10969>      BEQ.w JL_0_7988
0002811A <AmiBlitz3.ab3@10970>     MOVEA.l A2,A1
0002811C <AmiBlitz3.ab3@10971>     MOVEQ.l #$08,D0
0002811E <AmiBlitz3.ab3@10972>     MOVEA.l (A2),A2
00028124 <AmiBlitz3.ab3@10973>     MOVE.l mempool2,a0
00028128 <AmiBlitz3.ab3@10974>     JSR _FreePooled(A6)
0002812C <AmiBlitz3.ab3@10975> BRA.w JL_0_7972
00028132 <AmiBlitz3.ab3@10978>   CLR.l hunkoffsetcounter
00028134 <AmiBlitz3.ab3@10979> RTS
0002814C <AmiBlitz3.ab3@10982> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
00028150 <AmiBlitz3.ab3@10983> cmakea5:    Ds.l 1
00028152 <AmiBlitz3.ab3@10984> cmake:      Ds.w 1
000281D2 <AmiBlitz3.ab3@10985> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
000281D8 <AmiBlitz3.ab3@10989>   MOVE.l A5,lastsourcepos
000281E2 <AmiBlitz3.ab3@10990>   MOVE.w instringon,oldqflag
000281E4 <AmiBlitz3.ab3@10994>   MOVEQ.l #$00,D0
000281E6 <AmiBlitz3.ab3@10995>   MOVE.b (A5)+,D0
000281EA <AmiBlitz3.ab3@10996>    BEQ getcharb__donea
000281EE <AmiBlitz3.ab3@10997>   BPL getcharb__stuffa
000281F0 <AmiBlitz3.ab3@10998>   LSL.l #8,D0
000281F2 <AmiBlitz3.ab3@10999>   MOVE.b (A5)+,D0
000281F4 <AmiBlitz3.ab3@11000>   MOVE.l a1,-(a7)
000281FA <AmiBlitz3.ab3@11001>   LEA replacedat,a1
000281FE <AmiBlitz3.ab3@11002>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
00028202 <AmiBlitz3.ab3@11003>   BEQ getchar__l10
00028206 <AmiBlitz3.ab3@11004>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00028208 <AmiBlitz3.ab3@11008>   MOVE.l (a7)+,a1
0002820C <AmiBlitz3.ab3@11009> BRA getchar__weiter
00028210 <AmiBlitz3.ab3@11012>   CMP.w #$22,D0
00028214 <AmiBlitz3.ab3@11013>    BEQ.b swapquotea
00028218 <AmiBlitz3.ab3@11014>   CMP.w #$3B,D0
0002821C <AmiBlitz3.ab3@11015>    BNE.b getcharb__donea
00028222 <AmiBlitz3.ab3@11016>   TST.w instringon
00028226 <AmiBlitz3.ab3@11017>    BNE.b getcharb__donea
00028228 <AmiBlitz3.ab3@11020>   MOVE.b (A5)+,D0
0002822C <AmiBlitz3.ab3@11021>              BEQ getchar__l1
00028230 <AmiBlitz3.ab3@11022>              CMP.b #":",d0
00028234 <AmiBlitz3.ab3@11023>              BNE getcharb__loopa                                ;:@
00028238 <AmiBlitz3.ab3@11024>              CMP.b #"@",(a5)
0002823C <AmiBlitz3.ab3@11025>              BNE getcharb__loopa
0002823E <AmiBlitz3.ab3@11026>              ADDQ #1,a5
00028244 <AmiBlitz3.ab3@11029>   MOVE.w D0,lastchar
00028248 <AmiBlitz3.ab3@11032> BRA.s getchar__weiter
0002824E <AmiBlitz3.ab3@11035>   NOT.w instringon
00028254 <AmiBlitz3.ab3@11038>    MOVE.w D0,lastchar
00028258 <AmiBlitz3.ab3@11039>    BEQ.w getchar__done
0002825C <AmiBlitz3.ab3@11040>    BPL.w getchar__done2
00028260 <AmiBlitz3.ab3@11041>   CMP.w #-$7FE4,D0                                         ;cnif
00028264 <AmiBlitz3.ab3@11042>    BEQ.w getchar__cnif
00028268 <AmiBlitz3.ab3@11043>   CMP.w #-$7FE3,D0                                         ;csif
0002826C <AmiBlitz3.ab3@11044>    BEQ.w getchar__csif
00028270 <AmiBlitz3.ab3@11045>   CMP.w #-$7FE2,D0                                         ;celse
00028274 <AmiBlitz3.ab3@11046>    BEQ.w getchar__celse
00028278 <AmiBlitz3.ab3@11047>   CMP.w #-$7FE1,D0                                         ;cend
0002827C <AmiBlitz3.ab3@11048>    BEQ.w getchar__cend
00028282 <AmiBlitz3.ab3@11051>   TST.w skipcode
00028286 <AmiBlitz3.ab3@11052>    BEQ.w getchar
0002828A <AmiBlitz3.ab3@11053>   CMP.w #$7E,D0
0002828E <AmiBlitz3.ab3@11054>    BEQ.w getchar__cmake                                         ;tilde
00028292 <AmiBlitz3.ab3@11055>   CMP.w #$2,D0
00028296 <AmiBlitz3.ab3@11056>    BNE.w getchar__notunpath
0002829C <AmiBlitz3.ab3@11057>   MOVEA.l usedfrom,A5
000282A2 <AmiBlitz3.ab3@11058>   CLR.l usedfrom
000282A6 <AmiBlitz3.ab3@11059> BRA.w getchar
000282AA <AmiBlitz3.ab3@11062>   CMP.w #$1,D0
000282AE <AmiBlitz3.ab3@11063>    BNE.w getchar__done
000282B2 <AmiBlitz3.ab3@11067>   MOVEA.l cmakea5(PC),A5
000282B6 <AmiBlitz3.ab3@11068> BRA.w getchar
000282BC <AmiBlitz3.ab3@11071>   TST.w cmake
000282C0 <AmiBlitz3.ab3@11072>    BNE.w getchar__done
000282C4 <AmiBlitz3.ab3@11074>   MOVEM.l D0-D7/A0-A6,-(A7)
000282CA <AmiBlitz3.ab3@11075>   LEA cmake,a0                                         ;reass
000282CC <AmiBlitz3.ab3@11076>   NOT.w (a0)
000282D0 <AmiBlitz3.ab3@11077>   LEA cmakebak(PC),A0
000282D6 <AmiBlitz3.ab3@11078>   LEA ptr_parameterstore,A1
000282D8 <AmiBlitz3.ab3@11079>   MOVEQ.l #$1F,D0
000282DA <AmiBlitz3.ab3@11082>     MOVE.l (A1)+,(A0)+
000282DE <AmiBlitz3.ab3@11083>   DBF D0,getchar__cmloop
000282E4 <AmiBlitz3.ab3@11086>    JSR AJL_0_BF6E
000282E8 <AmiBlitz3.ab3@11087>   CMP.w #$7E,D0
000282EC <AmiBlitz3.ab3@11088>    BNE.w syntaxerr
000282F2 <AmiBlitz3.ab3@11089>   MOVE.l A5,cmakea5                                      ;tilde
000282F6 <AmiBlitz3.ab3@11090>   LEA cmakebuff(PC),A0
000282F8 <AmiBlitz3.ab3@11091>   MOVE.l D3,D2
000282FC <AmiBlitz3.ab3@11092>   BSR.w makelong
000282FE <AmiBlitz3.ab3@11093>   ADDQ.b #1,(A0)
00028304 <AmiBlitz3.ab3@11094>   LEA cmake,a0
00028306 <AmiBlitz3.ab3@11095>   NOT.w (a0)                                               ;reass
0002830A <AmiBlitz3.ab3@11096>   LEA cmakebak(PC),A0
00028310 <AmiBlitz3.ab3@11097>   LEA ptr_parameterstore,A1
00028312 <AmiBlitz3.ab3@11098>   MOVEQ.l #$1F,D0
00028314 <AmiBlitz3.ab3@11101>     MOVE.l (A0)+,(A1)+
00028318 <AmiBlitz3.ab3@11102>   DBF D0,getchar__cmloop2
0002831C <AmiBlitz3.ab3@11104>   MOVEM.l (A7)+,D0-D7/A0-A6
00028320 <AmiBlitz3.ab3@11105>   LEA cmakebuff(PC),A5
00028324 <AmiBlitz3.ab3@11106> BRA.w getchar
00028326 <AmiBlitz3.ab3@11109> RTS
00028330 <AmiBlitz3.ab3@11113>   MOVE.l linenumat,ciflineat                               ;csif
00028336 <AmiBlitz3.ab3@11114>   TST.w skipcode
0002833A <AmiBlitz3.ab3@11115>    BEQ.w getchar__incnest
0002833E <AmiBlitz3.ab3@11116>    BSR.w get1bytemain
00028340 <AmiBlitz3.ab3@11117>    MOVE.l a1,-(a7)
00028346 <AmiBlitz3.ab3@11118>    JSR JL_0_C492
00028348 <AmiBlitz3.ab3@11119>    MOVE.l (a7)+,a1
0002834C <AmiBlitz3.ab3@11120> BRA.w getchar
00028356 <AmiBlitz3.ab3@11123>   MOVE.l linenumat,ciflineat                               ;cnif
0002835C <AmiBlitz3.ab3@11124>   TST.w skipcode
00028360 <AmiBlitz3.ab3@11125>    BEQ.w getchar__incnest
00028364 <AmiBlitz3.ab3@11126>    BSR.w get1bytemain
00028368 <AmiBlitz3.ab3@11127>    CMP.b #"@",d0
0002836C <AmiBlitz3.ab3@11128>    BNE getchar__cnif_ok2
00028370 <AmiBlitz3.ab3@11129>    BSR.w get1bytemain
00028378 <AmiBlitz3.ab3@11130>    MOVE.b #1,incnif
0002837E <AmiBlitz3.ab3@11131>    JSR findconstant2
00028382 <AmiBlitz3.ab3@11132>    BEQ getchar__cnif_ok2
00028388 <AmiBlitz3.ab3@11135>    MOVE.w fast,-(a7)
0002838E <AmiBlitz3.ab3@11136>    CLR.b fast
00028390 <AmiBlitz3.ab3@11137>    MOVE.l a1,-(a7)
00028396 <AmiBlitz3.ab3@11138>    JSR JL_0_C47E
0002839C <AmiBlitz3.ab3@11139>    CLR.b incnif
0002839E <AmiBlitz3.ab3@11140>    MOVE.l (a7)+,a1
000283A4 <AmiBlitz3.ab3@11141>    MOVE.w (a7)+,fast
000283A8 <AmiBlitz3.ab3@11142> BRA.w getchar
000283AE <AmiBlitz3.ab3@11145>   ADDQ.w #1,connest
000283B2 <AmiBlitz3.ab3@11146> BRA.w getchar
000283B8 <AmiBlitz3.ab3@11149>   MOVE.w connest,D0                                      ;celse
000283BC <AmiBlitz3.ab3@11150>    BNE.w getchar
000283C2 <AmiBlitz3.ab3@11151>   NOT.w skipcode
000283C6 <AmiBlitz3.ab3@11152> BRA.w getchar
000283CC <AmiBlitz3.ab3@11155>   SUBQ.w #1,connest                                      ;cend
000283D0 <AmiBlitz3.ab3@11156>    BPL.w getchar
000283D6 <AmiBlitz3.ab3@11157>   ADDQ.w #1,connest
000283DC <AmiBlitz3.ab3@11158>   MOVEA.l concomsp,A0
000283E2 <AmiBlitz3.ab3@11159>   CMPA.l #concomstack,A0
000283E6 <AmiBlitz3.ab3@11160>    BEQ.w nociferr
000283E8 <AmiBlitz3.ab3@11161>   SUBQ.w #2,A0
000283EE <AmiBlitz3.ab3@11162>   MOVE.l A0,concomsp
000283F4 <AmiBlitz3.ab3@11163>   MOVE.w (A0),skipcode
000283F8 <AmiBlitz3.ab3@11164> BRA.w getchar
000283FC <AmiBlitz3.ab3@11167> ciflineat:   Ds.l 1
000283FE <AmiBlitz3.ab3@11175>   MOVEQ.l #$00,D0
00028400 <AmiBlitz3.ab3@11176>   MOVE.b (A5)+,D0
00028404 <AmiBlitz3.ab3@11177>    BEQ.b getcharb__done
00028408 <AmiBlitz3.ab3@11178>    BPL.b getcharb__stuff
0002840A <AmiBlitz3.ab3@11179>   LSL.w #8,D0
0002840C <AmiBlitz3.ab3@11180>   MOVE.b (A5)+,D0
0002840E <AmiBlitz3.ab3@11181> RTS
00028412 <AmiBlitz3.ab3@11184>   CMP.w #$22,D0
00028416 <AmiBlitz3.ab3@11185>    BEQ.b swapquote
0002841A <AmiBlitz3.ab3@11186>   CMP.w #$3B,D0
0002841E <AmiBlitz3.ab3@11187>    BNE.b getcharb__done
00028424 <AmiBlitz3.ab3@11188>   TST.w instringon
00028428 <AmiBlitz3.ab3@11189>    BNE.b getcharb__done
0002842A <AmiBlitz3.ab3@11192>   MOVE.b (A5)+,D0
0002842E <AmiBlitz3.ab3@11193>             BEQ getcharb__loop_l1
00028432 <AmiBlitz3.ab3@11194>             CMP.b #":",d0
00028436 <AmiBlitz3.ab3@11195>             BNE getcharb__loop
0002843A <AmiBlitz3.ab3@11196>             CMP.b #"@",(a5)
0002843E <AmiBlitz3.ab3@11197>             BNE getcharb__loop
00028444 <AmiBlitz3.ab3@11200>   MOVE.w D0,lastchar
00028446 <AmiBlitz3.ab3@11203> RTS
0002844C <AmiBlitz3.ab3@11206>   NOT.w instringon
0002844E <AmiBlitz3.ab3@11207> RTS
00028452 <AmiBlitz3.ab3@11211>   BSR.w getchar
00028458 <AmiBlitz3.ab3@11212>   TST.w instringon
0002845C <AmiBlitz3.ab3@11213>    BNE.w get1byte__skip
00028460 <AmiBlitz3.ab3@11214>   CMP.w #$20,D0
00028464 <AmiBlitz3.ab3@11215>    BEQ.w get1byte_
00028466 <AmiBlitz3.ab3@11218> RTS
00028480 <AmiBlitz3.ab3@11221> gs:        Ds.w 13                                         ;ds.b 26  org source
00028484 <AmiBlitz3.ab3@11222>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
00028486 <AmiBlitz3.ab3@11223>            Dc.b $C4,$DC
0002848A <AmiBlitz3.ab3@11229>   BSR.w getchar
00028490 <AmiBlitz3.ab3@11230>   TST.w instringon
00028494 <AmiBlitz3.ab3@11231>    BNE.w gchar2
00028498 <AmiBlitz3.ab3@11232>   CMP.w #$20,D0
0002849C <AmiBlitz3.ab3@11233>    BEQ.w get1bytemain
0002849E <AmiBlitz3.ab3@11235>   TST.w D0
000284A2 <AmiBlitz3.ab3@11238>   BEQ.b get1bytemain__zero
000284A8 <AmiBlitz3.ab3@11239>   TST.w instringon
000284AC <AmiBlitz3.ab3@11240>    BEQ.b get1bytemain__noqoute
000284B0 <AmiBlitz3.ab3@11241>   CMP.b #$20,D0
000284B4 <AmiBlitz3.ab3@11242>    BCC.b get1bytemain__skip
000284B8 <AmiBlitz3.ab3@11243>   MOVE.b gs(PC,D0.W),D0
000284BA <AmiBlitz3.ab3@11244> RTS
000284BE <AmiBlitz3.ab3@11247>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
000284C2 <AmiBlitz3.ab3@11248>    BEQ.b get1bytemain__zero
000284C6 <AmiBlitz3.ab3@11249>   CMP.w #$3A,D0
000284CA <AmiBlitz3.ab3@11250>    BEQ.b get1bytemain__zero
000284CC <AmiBlitz3.ab3@11253>   TST.w D0
000284CE <AmiBlitz3.ab3@11256> RTS
000284D4 <AmiBlitz3.ab3@11260>   MOVE.w lastchar,D0
000284D8 <AmiBlitz3.ab3@11261> BRA.w gchar2
000284E2 <AmiBlitz3.ab3@11265>   MOVE.w oldqflag,instringon
000284E8 <AmiBlitz3.ab3@11266>   MOVEA.l lastsourcepos,A5
000284EA <AmiBlitz3.ab3@11267> RTS
000284F0 <AmiBlitz3.ab3@11271>   MOVE.w D0,locchar
000284F6 <AmiBlitz3.ab3@11272>   MOVE.l A5,locloc
000284F8 <AmiBlitz3.ab3@11273> RTS
000284FE <AmiBlitz3.ab3@11277>   MOVEA.l locloc,A5
00028504 <AmiBlitz3.ab3@11278>   MOVE.w locchar,D0
0002850A <AmiBlitz3.ab3@11279>   MOVE.w D0,lastchar
0002850C <AmiBlitz3.ab3@11280> RTS
0002850C <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
00028554 <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
000285A6 <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
000285E4 <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
00028622 <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
0002864C <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
0002867C <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
000286C6 <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
0002874C <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
000287AE <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
000287F6 <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
00028848 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
000288AA <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
000288F8 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
0002892E <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
0002895C <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
00028976 <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
00028994 <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028A12 <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00028A3C <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028A62 <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028A82 <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028AA0 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028AC0 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028AE8 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028B12 <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028B14 <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
00028B30 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
00028B56 <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00028B6E <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00028BCC <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00028BEE <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028C14 <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00028C3C <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
00028C5C <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00028C80 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028CC6 <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028CEA <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00028D0E <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
00028D2E <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
00028D52 <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
00028D74 <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028DA0 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00028DC6 <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
00028DD0 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00028DF6 <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
00028E48 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028EB2 <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028F10 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00028F7E <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00028FBA <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00028FD8 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00028FFE <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
0002902E <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
00029052 <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
00029080 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
000290A4 <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
000290BA <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
000290D0 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
000290D6 <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
000290DE <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
000290E0 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
000290E4 <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
000290EC <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
000290EE <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00029128 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
00029154 <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
00029184 <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
000291BC <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
00029216 <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00029218 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
0002921C <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00029220 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
00029224 <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00029228 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
0002922C <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00029230 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
00029234 <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
00029238 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
0002923C <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
00029240 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
0002927E <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
000292B0 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
000292CE <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
000292F8 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
00029314 <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
0002932E <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
0002934C <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
00029370 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
00029372 <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
000293C4 <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
000293EC <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
00029414 <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00029430 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
00029450 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
00029468 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
000294AC <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
000294F4 <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
0002951E <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
00029548 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
00029562 <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
0002958C <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
000295E0 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
0002962C <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
00029664 <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
0002966A <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
00029678 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
000296A8 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
000296DC <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
00029742 <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
00029760 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
000297DA <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
00029802 <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029818 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
0002982C <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
0002982E <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
0002982F <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
00029830 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
00029850 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
00029856 <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
00029868 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
0002989C <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
000298B4 <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
000298D0 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
000298E8 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029908 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029928 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
0002994E <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
00029964 <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
00029980 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
000299AA <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
000299C2 <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
000299DE <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
000299FE <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00029A16 <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029A1A <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029A20 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
00029A26 <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00029A3B <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029A41 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
00029A42 <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029A46 <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00029A4C <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
00029A52 <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029A65 <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029A6B <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029A6C <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029A8A <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029AA2 <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029ABE <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029AE8 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029B02 <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00029B22 <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
00029B40 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
00029B6E <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
00029B78 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029BAA <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029BC8 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029BE6 <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029C06 <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
00029C2C <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
00029C52 <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
00029C7A <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029C98 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029CB8 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029CD2 <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029CF4 <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
00029D12 <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
00029D34 <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
00029D58 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
00029D5E <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
00029D7A <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029D96 <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029DB4 <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
00029DD2 <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
00029E20 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
00029E3E <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
00029E5C <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
00029E76 <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029EC2 <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029EE8 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029F08 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00029F2A <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
00029F46 <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
00029F6C <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029F88 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
00029FA6 <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
00029FCE <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
00029FEA <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
00029FFA <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A01C <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
0002A020 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A022 <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
0002A03C <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A060 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A080 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A0B2 <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A110 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A148 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A186 <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A1BC <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A1EE <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A212 <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A236 <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A280 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A2A8 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A2F2 <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
0002A332 <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
0002A332 <AmiBlitz3.ab3@11284> XINCLUDE "internal_errormsg.ab3"
0002A334 <AmiBlitz3.ab3@11288> ezerr:   Ds.w 1                                            ;for simple errors
0002A33A <AmiBlitz3.ab3@11294>    MOVE.l myline,d0
0002A33E <AmiBlitz3.ab3@11295>   BNE handle_compileerror__l2
0002A344 <AmiBlitz3.ab3@11297>     MOVE.l a5,lastsourcepos
0002A346 <AmiBlitz3.ab3@11299>     SUBA.l a5,a5
0002A34C <AmiBlitz3.ab3@11301>   TST.l usedfrom
0002A350 <AmiBlitz3.ab3@11302>   BEQ handle_compileerror__org
0002A356 <AmiBlitz3.ab3@11303>     MOVEA.l usedfrom,a5
0002A35C <AmiBlitz3.ab3@11306>   TST.w dirmode
0002A360 <AmiBlitz3.ab3@11307>   BNE.b handle_compileerror__quiet
0002A366 <AmiBlitz3.ab3@11308>     JSR call_setpointernormal
0002A36A <AmiBlitz3.ab3@11309>     MOVE.w ezerr(PC),D0
0002A36E <AmiBlitz3.ab3@11310>     BNE.w handle_compileerror__skip
0002A374 <AmiBlitz3.ab3@11311>       MOVE.w cfetchmode,D0
0002A378 <AmiBlitz3.ab3@11312>       BEQ.w handle_compileerror__skip2
0002A382 <AmiBlitz3.ab3@11313>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A388 <AmiBlitz3.ab3@11316>   MOVE.w constmode,D0
0002A38C <AmiBlitz3.ab3@11317>   BEQ.b handle_compileerror__skip3
0002A390 <AmiBlitz3.ab3@11318>     BSR.w asmerr2
0002A396 <AmiBlitz3.ab3@11321>   MOVE.l firstlocal,D1
0002A39C <AmiBlitz3.ab3@11322>   OR.l firstglob,D1
0002A3A0 <AmiBlitz3.ab3@11323>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
0002A3A6 <AmiBlitz3.ab3@11324> 
0002A3AA <AmiBlitz3.ab3@11325>     BNE handle_compileerror__notproc                       ; yes skip
0002A3B0 <AmiBlitz3.ab3@11326>       JSR JL_0_DB5C                                        ; no free some data ????
0002A3B8 <AmiBlitz3.ab3@11329>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A3C2 <AmiBlitz3.ab3@11330>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A3C6 <AmiBlitz3.ab3@11331>   BEQ handle_compileerror__notproc_l1
0002A3D0 <AmiBlitz3.ab3@11332>     MOVE.l linenumat,compilelinecounter
0002A3D6 <AmiBlitz3.ab3@11335>   JSR close_compilewin
0002A3D8 <AmiBlitz3.ab3@11338>   MOVEA.l (A7)+,A0
0002A3DE <AmiBlitz3.ab3@11339>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A3E4 <AmiBlitz3.ab3@11340>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A3E8 <AmiBlitz3.ab3@11341>   BLT 'lesserror
0002A3EE <AmiBlitz3.ab3@11342>   LEA errorlimit_text,a0
0002A3F4 <AmiBlitz3.ab3@11345>   ADDQ.l #1,errorcounter
0002A3FA <AmiBlitz3.ab3@11346>   JSR errorstringparse
0002A404 <AmiBlitz3.ab3@11347>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A408 <AmiBlitz3.ab3@11348>   BEQ handle_compileerror__skip_Lxx2
0002A40E <AmiBlitz3.ab3@11349>   TST.l CLIMode
0002A412 <AmiBlitz3.ab3@11350>   BNE 'climode_output
0002A418 <AmiBlitz3.ab3@11353>     JSR save_errorfile
0002A41C <AmiBlitz3.ab3@11354>     BRA 'end_output
0002A422 <AmiBlitz3.ab3@11357>     JSR stdout_error
0002A428 <AmiBlitz3.ab3@11359>      MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A42E <AmiBlitz3.ab3@11360>      CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A432 <AmiBlitz3.ab3@11361>      BGT 'end_output
0002A438 <AmiBlitz3.ab3@11362>     MOVE.l lastsourcepos,a5
0002A43A <AmiBlitz3.ab3@11364>  'loop TST.b (a5)
0002A43E <AmiBlitz3.ab3@11365>       BEQ 'ok2
0002A440 <AmiBlitz3.ab3@11366>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A444 <AmiBlitz3.ab3@11367>     BEQ 'ok
0002A448 <AmiBlitz3.ab3@11368>     CMP.b #":",d0
0002A44C <AmiBlitz3.ab3@11369>     BEQ 'ok
0002A450 <AmiBlitz3.ab3@11370>     BRA 'loop
0002A452 <AmiBlitz3.ab3@11372>  'ok SUBQ.l #1,a5
0002A45A <AmiBlitz3.ab3@11374>  'ok2 MOVE.w #0,lastchar
0002A462 <AmiBlitz3.ab3@11375>     MOVE.b #1,iserror
0002A468 <AmiBlitz3.ab3@11376>     MOVE.l stackaddr,a7
0002A46A <AmiBlitz3.ab3@11377>     RTS
0002A46C <AmiBlitz3.ab3@11383>   MOVE.l A0,-(a7)
0002A4AA <AmiBlitz3.ab3@11384>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A4AC <AmiBlitz3.ab3@11385>   MOVE.l (a7)+,A0
0002A4B0 <AmiBlitz3.ab3@11387>   MOVEM.l d6/D7/A6,-(A7)
0002A4B6 <AmiBlitz3.ab3@11388>   MOVE.l includeline,d7
0002A4BC <AmiBlitz3.ab3@11389>   MOVE.l #"INLN",a6
0002A4C6 <AmiBlitz3.ab3@11390>   MOVE.l errstack,tempa7
0002A4C8 <AmiBlitz3.ab3@11391>   JSR (A1)                                                  ;open ped errorrequest
0002A4CC <AmiBlitz3.ab3@11393>   MOVEM.l (A7)+,D7/d6/A6
0002A4D2 <AmiBlitz3.ab3@11396>   MOVE.l tempa7,a7
0002A4D8 <AmiBlitz3.ab3@11397>   MOVEA.l errcont,A0
0002A4DA <AmiBlitz3.ab3@11399> RTS
0002A4E0 <AmiBlitz3.ab3@11402>   MOVEA.l errstack,A7
0002A4E6 <AmiBlitz3.ab3@11403>   MOVEA.l errcont,A0
0002A4E8 <AmiBlitz3.ab3@11405> RTS
0002A4EA <AmiBlitz3.ab3@11408>   MOVE.l (A7),D0
0002A4F0 <AmiBlitz3.ab3@11409>   MOVEA.l errstack,A7
0002A4F6 <AmiBlitz3.ab3@11410>   MOVEA.l errcont,A0
0002A4F8 <AmiBlitz3.ab3@11411> JMP (A0)
0002A4FC <AmiBlitz3.ab3@11417>   CMP.w #$7A,D0                                            ;'z'
0002A500 <AmiBlitz3.ab3@11418>    BHI.w tstalpha__no
0002A504 <AmiBlitz3.ab3@11419>   CMP.w #$41,D0                                            ;'A'
0002A508 <AmiBlitz3.ab3@11420>    BCS.w tstalpha__no
0002A50C <AmiBlitz3.ab3@11421>   CMP.w #$61,D0                                            ;'a'
0002A510 <AmiBlitz3.ab3@11422>    BCC.w tstalpha__yes
0002A514 <AmiBlitz3.ab3@11423>   CMP.w #$5A,D0                                            ;'Z'
0002A518 <AmiBlitz3.ab3@11424>    BHI.w tstalpha__no
0002A51A <AmiBlitz3.ab3@11427>   CMP.w D0,D0
0002A51C <AmiBlitz3.ab3@11430> RTS
0002A520 <AmiBlitz3.ab3@11438>   CMP.w #$30,D0                                            ;'0'
0002A524 <AmiBlitz3.ab3@11439>    BCS.w tstnum__skip
0002A528 <AmiBlitz3.ab3@11440>   CMP.w #$39,D0                                            ;'9'
0002A52C <AmiBlitz3.ab3@11441>    BHI.w tstnum__skip                                     
0002A52E <AmiBlitz3.ab3@11442>   CMP.w D0,D0
0002A530 <AmiBlitz3.ab3@11445> RTS
0002A552 <AmiBlitz3.ab3@11451>   !compare1                                                ;bsr.w tstalpha
0002A556 <AmiBlitz3.ab3@11452>    BEQ.w tstlab__skip
0002A568 <AmiBlitz3.ab3@11453>   !compare2                                                ;bsr.w tstnum2
0002A56C <AmiBlitz3.ab3@11454>    BEQ.w tstlab__skip
0002A570 <AmiBlitz3.ab3@11455>   CMP.w #$5F,D0                                            ;'_'
0002A574 <AmiBlitz3.ab3@11456>    BEQ.w tstlab__skip
0002A578 <AmiBlitz3.ab3@11457>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A57A <AmiBlitz3.ab3@11460> RTS
0002A584 <AmiBlitz3.ab3@11465>   MOVE.w oldqflag,instringon
0002A58A <AmiBlitz3.ab3@11466>   MOVEA.l lastsourcepos,A5
0002A590 <AmiBlitz3.ab3@11469>   MOVE.l a5,beforeparameterfetch
0002A596 <AmiBlitz3.ab3@11470>   LEA ptr_parameterstore,A1
0002A598 <AmiBlitz3.ab3@11473>   MOVEQ.l #$00,D2
0002A59E <AmiBlitz3.ab3@11476>   LEA chartab,a0
0002A5A0 <AmiBlitz3.ab3@11477>   MOVEQ #0,d0
0002A5A6 <AmiBlitz3.ab3@11478>   MOVE.l A5,lastsourcepos
0002A5B0 <AmiBlitz3.ab3@11479>   MOVE.w instringon,oldqflag
0002A5B2 <AmiBlitz3.ab3@11482>     MOVE.b (a5)+,d0
0002A5B6 <AmiBlitz3.ab3@11483>   CMP.b #$20,d0                                            ;space deftype
0002A5BA <AmiBlitz3.ab3@11484>   BEQ makename4__retry
0002A5C0 <AmiBlitz3.ab3@11486>   MOVE.w d0,lastchar
0002A5C4 <AmiBlitz3.ab3@11487>   TST.b 0(a0,d0.w)
0002A5C8 <AmiBlitz3.ab3@11488>   BNE makename__done
0002A5CA <AmiBlitz3.ab3@11497>   MOVE.b D0,(A1)+
0002A5CC <AmiBlitz3.ab3@11498>   ADDQ.l #1,D2
0002A5D2 <AmiBlitz3.ab3@11499>   MOVE.l A5,lastsourcepos
0002A5D4 <AmiBlitz3.ab3@11502>   MOVE.b (a5)+,d0
0002A5DA <AmiBlitz3.ab3@11503>   MOVE.b d0,lastchar+1
0002A5DE <AmiBlitz3.ab3@11504>   CMP.b #$20,d0
0002A5E2 <AmiBlitz3.ab3@11505>   BEQ makename__loop_l20
0002A5E6 <AmiBlitz3.ab3@11507>   TST.b 0(a0,d0)
0002A5EA <AmiBlitz3.ab3@11508>   BEQ makename__loop
0002A5EE <AmiBlitz3.ab3@11509>   CMP.b #2,d0
0002A5F2 <AmiBlitz3.ab3@11510>   BNE makename__loop_lf1
0002A5F8 <AmiBlitz3.ab3@11511>   MOVEA.l usedfrom,A5
0002A5FE <AmiBlitz3.ab3@11512>   CLR.l usedfrom
0002A602 <AmiBlitz3.ab3@11513> BRA makename__loop_ln1
0002A606 <AmiBlitz3.ab3@11516>   CMP.b #1,d0
0002A60A <AmiBlitz3.ab3@11517>   BNE makename__loop_l20
0002A60E <AmiBlitz3.ab3@11518>   MOVEA.l cmakea5(PC),A5
0002A612 <AmiBlitz3.ab3@11519> BRA makename__loop_ln1
0002A616 <AmiBlitz3.ab3@11522>   CMP.b #$7e,d0
0002A61A <AmiBlitz3.ab3@11523>             BNE makename__loop_lt
0002A620 <AmiBlitz3.ab3@11524>             TST.w cmake
0002A624 <AmiBlitz3.ab3@11525>             BNE.w makename__loop_a1
0002A626 <AmiBlitz3.ab3@11526>             SUBQ.l #1,a5
0002A62A <AmiBlitz3.ab3@11527>             BSR.w get1bytemain
0002A62E <AmiBlitz3.ab3@11528> BRA makename__loop
0002A632 <AmiBlitz3.ab3@11532> BRA makename__loop_gpex
0002A636 <AmiBlitz3.ab3@11536>   BSR.w getchar
0002A658 <AmiBlitz3.ab3@11537>    !compare1                                               ;bsr.w tstalpha
0002A65C <AmiBlitz3.ab3@11538>    BEQ.w makename__loop_getp1
0002A66E <AmiBlitz3.ab3@11539>    !compare2                                               ;bsr.w tstnum
0002A672 <AmiBlitz3.ab3@11540>    BEQ.w makename__loop_getp1
0002A676 <AmiBlitz3.ab3@11541>   CMP.w #$5F,D0                                            ;'_'
0002A67A <AmiBlitz3.ab3@11542>    BEQ.w makename__loop_getp1
0002A67E <AmiBlitz3.ab3@11543>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A682 <AmiBlitz3.ab3@11547>       BNE makename__loop_gpex
0002A686 <AmiBlitz3.ab3@11548>       CMP.b #$20,d0
0002A68A <AmiBlitz3.ab3@11549>       BNE.w makename__loop
0002A68C <AmiBlitz3.ab3@11552>      TST.b d0
0002A690 <AmiBlitz3.ab3@11553>      BPL makename__loop_l10
0002A692 <AmiBlitz3.ab3@11554>      SUBQ.l #1,a5
0002A696 <AmiBlitz3.ab3@11555>      BSR get1byte_
0002A69A <AmiBlitz3.ab3@11558>    CMP.w #$20,D0
0002A69E <AmiBlitz3.ab3@11559>    BNE.w makename__done
0002A6A0 <AmiBlitz3.ab3@11560>    MOVEQ #0,d0
0002A6A6 <AmiBlitz3.ab3@11561>   MOVE.l a5,lastsourcepos
0002A6A8 <AmiBlitz3.ab3@11564>   MOVE.b (a5)+,d0                                          ;neuneu
0002A6AC <AmiBlitz3.ab3@11565>   BPL makename__loop_l101:
0002A6AE <AmiBlitz3.ab3@11566>   ASL.w #8,d0
0002A6B0 <AmiBlitz3.ab3@11567>   MOVE.b (a5)+,d0
0002A6B6 <AmiBlitz3.ab3@11570>   TST.w instringon
0002A6BA <AmiBlitz3.ab3@11571>   BNE makename__loop_l102
0002A6BE <AmiBlitz3.ab3@11572>   CMP.b #$20,d0
0002A6C2 <AmiBlitz3.ab3@11573>   BEQ makename__loop_l103
0002A6C6 <AmiBlitz3.ab3@11574>   CMP.b #";",d0
0002A6CA <AmiBlitz3.ab3@11575>   BNE makename__loop_l102
0002A6CC <AmiBlitz3.ab3@11578>   MOVE.b (A5)+,D0
0002A6D0 <AmiBlitz3.ab3@11579>              BEQ makename__loop_l1
0002A6D4 <AmiBlitz3.ab3@11580>              CMP.b #":",d0
0002A6D8 <AmiBlitz3.ab3@11581>              BNE makename__loop_lr                         ;:@
0002A6DC <AmiBlitz3.ab3@11582>              CMP.b #"@",(a5)
0002A6E0 <AmiBlitz3.ab3@11583>              BNE makename__loop_lr
0002A6E2 <AmiBlitz3.ab3@11584>              ADDQ #1,a5
0002A6E8 <AmiBlitz3.ab3@11588>   MOVE.w d0,lastchar
0002A6EC <AmiBlitz3.ab3@11592>   CMP.b #";",d0
0002A6F0 <AmiBlitz3.ab3@11593>   BEQ makename__done_l11
0002A6F2 <AmiBlitz3.ab3@11594>   CLR.b (A1)
0002A6F4 <AmiBlitz3.ab3@11596>   TST.w D2
0002A6F6 <AmiBlitz3.ab3@11597> RTS
0002A6F8 <AmiBlitz3.ab3@11600>   CLR.b (a1)
0002A6FA <AmiBlitz3.ab3@11601>   MOVEQ #0,d0
0002A700 <AmiBlitz3.ab3@11602>   MOVE.w d0,lastchar
0002A702 <AmiBlitz3.ab3@11604>   TST.w D2
0002A704 <AmiBlitz3.ab3@11605> RTS
0002A706 <AmiBlitz3.ab3@11611>   MOVE.l (A2),D0
0002A70A <AmiBlitz3.ab3@11614>   BEQ.w findlast__here
0002A70C <AmiBlitz3.ab3@11615>   MOVEA.l D0,A2
0002A710 <AmiBlitz3.ab3@11616> BRA.w findlast__loop
0002A714 <AmiBlitz3.ab3@11619> BRA.w reget
0002A716 <AmiBlitz3.ab3@11625>   MOVE.l (A2),-(A7)
0002A71A <AmiBlitz3.ab3@11626>   BSR.w addlabel
0002A71C <AmiBlitz3.ab3@11627>   MOVE.l (A7)+,(A2)
0002A71E <AmiBlitz3.ab3@11628> RTS
0002A724 <AmiBlitz3.ab3@11633>   CLR.l fp0addr
0002A72A <AmiBlitz3.ab3@11634>   TST.w dirmode
0002A72E <AmiBlitz3.ab3@11635>    BNE.w illdirerr
0002A730 <AmiBlitz3.ab3@11636>   MOVEQ.l #$00,D0
0002A732 <AmiBlitz3.ab3@11637>   MOVE.w D7,D0
0002A734 <AmiBlitz3.ab3@11638>   ADD.w D2,D0
0002A736 <AmiBlitz3.ab3@11639>   ADDQ.w #1,D0
0002A738 <AmiBlitz3.ab3@11640>   MOVE.w D0,D2
0002A73A <AmiBlitz3.ab3@11641>   ADDQ.l #2,d0
0002A73C <AmiBlitz3.ab3@11642>   MOVEQ.l #$01,D1
0002A742 <AmiBlitz3.ab3@11643>   MOVEA.l _execbase,A6
0002A748 <AmiBlitz3.ab3@11644>   MOVE.l mempool2,a0
0002A74C <AmiBlitz3.ab3@11645>   JSR _AllocPooled(a6)
0002A752 <AmiBlitz3.ab3@11647>   MOVE.l lastlabel,a2
0002A754 <AmiBlitz3.ab3@11648>   MOVE.l D0,(A2)
0002A756 <AmiBlitz3.ab3@11649>   MOVE.l d0,a0
0002A758 <AmiBlitz3.ab3@11650>   CLR.l (a0)
0002A75E <AmiBlitz3.ab3@11651>   MOVE.l a0,lastlabel
0002A760 <AmiBlitz3.ab3@11652>   MOVE.l d0,A2
0002A764 <AmiBlitz3.ab3@11653>   LEA -$1(A0,D7.W),A0
0002A766 <AmiBlitz3.ab3@11654>   MOVE.b D2,(A0)+
0002A76C <AmiBlitz3.ab3@11655>   LEA ptr_parameterstore,A1
0002A76E <AmiBlitz3.ab3@11656>   MOVEQ #0,d0
0002A770 <AmiBlitz3.ab3@11657>   MOVEQ #0,d1
0002A772 <AmiBlitz3.ab3@11660>   MOVE.b (A1)+,d1
0002A776 <AmiBlitz3.ab3@11661>    BEQ 'l1
0002A77C <AmiBlitz3.ab3@11662>    !hashalgo
0002A77E <AmiBlitz3.ab3@11663>    MOVE.b d1,(A0)+
0002A782 <AmiBlitz3.ab3@11664> BRA addlabel_loop2a
0002A784 <AmiBlitz3.ab3@11667>    CLR.b (a0)+
0002A78A <AmiBlitz3.ab3@11668>    LEA labelhash,a0
0002A790 <AmiBlitz3.ab3@11669>    AND.l #hashsize,d0
0002A792 <AmiBlitz3.ab3@11670>    ASL.l #2,d0
0002A796 <AmiBlitz3.ab3@11671>    MOVE.l 0(a0,d0),d1
0002A79A <AmiBlitz3.ab3@11672>    MOVE.l d1,$c(a2)
0002A79E <AmiBlitz3.ab3@11673>    MOVE.l a2,0(a0,d0)
0002A7A0 <AmiBlitz3.ab3@11674>    MOVEQ #0,d0
0002A7A4 <AmiBlitz3.ab3@11675> BRA.w reget
0002A7AA <AmiBlitz3.ab3@11679>    TST.b newvariable
0002A7AE <AmiBlitz3.ab3@11680>    BNE addlabel
0002A7B4 <AmiBlitz3.ab3@11683>   TST.w dirmode
0002A7B8 <AmiBlitz3.ab3@11684>    BNE.w illdirerr
0002A7BA <AmiBlitz3.ab3@11685>   MOVEQ.l #$00,D0
0002A7BC <AmiBlitz3.ab3@11686>   MOVE.w D7,D0
0002A7BE <AmiBlitz3.ab3@11687>   ADD.w D2,D0
0002A7C0 <AmiBlitz3.ab3@11688>   ADDQ.w #1,D0
0002A7C2 <AmiBlitz3.ab3@11689>   MOVE.w D0,D2
0002A7C4 <AmiBlitz3.ab3@11690>   MOVEQ.l #$01,D1
0002A7CA <AmiBlitz3.ab3@11691>   MOVEA.l _execbase,A6
0002A7D0 <AmiBlitz3.ab3@11692>   MOVE.l mempool2,a0
0002A7D4 <AmiBlitz3.ab3@11693>   JSR _AllocPooled(a6)
0002A7D6 <AmiBlitz3.ab3@11694>   MOVEA.l D0,A0
0002A7DC <AmiBlitz3.ab3@11696>   LEA varbase,a2
0002A7DE <AmiBlitz3.ab3@11697>   MOVE.l (a2),(a0)
0002A7E0 <AmiBlitz3.ab3@11698>   MOVE.l A0,(A2)
0002A7E2 <AmiBlitz3.ab3@11699>   MOVEA.l A0,A2
0002A7E6 <AmiBlitz3.ab3@11700>   LEA -$1(A0,D7.W),A0
0002A7E8 <AmiBlitz3.ab3@11701>   MOVE.b D2,(A0)+
0002A7EE <AmiBlitz3.ab3@11702>   LEA ptr_parameterstore,A1
0002A7F0 <AmiBlitz3.ab3@11703>   MOVEQ #0,d0
0002A7F2 <AmiBlitz3.ab3@11704>   MOVEQ #0,d1
0002A7F4 <AmiBlitz3.ab3@11707>   MOVE.b (A1)+,d1
0002A7F8 <AmiBlitz3.ab3@11708>    BEQ 'l12
0002A7FE <AmiBlitz3.ab3@11709>    !hashalgo
0002A800 <AmiBlitz3.ab3@11710>    MOVE.b d1,(A0)+
0002A804 <AmiBlitz3.ab3@11711> BRA 'l11
0002A806 <AmiBlitz3.ab3@11714>   CLR.b (a0)+
0002A80C <AmiBlitz3.ab3@11715>   LEA variablehash,a0
0002A812 <AmiBlitz3.ab3@11716>    AND.l #hashsize,d0
0002A814 <AmiBlitz3.ab3@11717>    ASL.l #2,d0
0002A818 <AmiBlitz3.ab3@11718>    MOVE.l 0(a0,d0),d1
0002A81C <AmiBlitz3.ab3@11719>    MOVE.l d1,$e(a2)
0002A820 <AmiBlitz3.ab3@11720>    MOVE.l a2,0(a0,d0)
0002A822 <AmiBlitz3.ab3@11721>    MOVEQ #0,d0
0002A826 <AmiBlitz3.ab3@11722> BRA.w reget
0002A82C <AmiBlitz3.ab3@11726>   TST.w dirmode
0002A830 <AmiBlitz3.ab3@11727>    BNE.w illdirerr
0002A832 <AmiBlitz3.ab3@11734>   MOVEQ.l #$00,D0
0002A834 <AmiBlitz3.ab3@11735>   MOVE.w D7,D0
0002A836 <AmiBlitz3.ab3@11736>   ADD.w D2,D0
0002A838 <AmiBlitz3.ab3@11737>   ADDQ.w #1,D0
0002A83A <AmiBlitz3.ab3@11738>   MOVE.w D0,D2
0002A83C <AmiBlitz3.ab3@11739>   MOVEQ.l #$01,D1
0002A842 <AmiBlitz3.ab3@11740>   MOVEA.l _execbase,A6
0002A848 <AmiBlitz3.ab3@11741>   MOVE.l mempool2,a0
0002A84C <AmiBlitz3.ab3@11742>   JSR _AllocPooled(a6)
0002A84E <AmiBlitz3.ab3@11744>   MOVEA.l D0,A0
0002A850 <AmiBlitz3.ab3@11745>   MOVE.l A0,(A2)
0002A852 <AmiBlitz3.ab3@11746>   CLR.l (a0)
0002A856 <AmiBlitz3.ab3@11747>   CLR.l 8(a0)                                              ;clear next
0002A858 <AmiBlitz3.ab3@11748>   MOVEA.l A0,A2
0002A85C <AmiBlitz3.ab3@11749>   LEA -$1(A0,D7.W),A0
0002A85E <AmiBlitz3.ab3@11750>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A864 <AmiBlitz3.ab3@11751>   LEA ptr_parameterstore,A1
0002A866 <AmiBlitz3.ab3@11752>   MOVEQ #0,d0
0002A868 <AmiBlitz3.ab3@11753>   MOVEQ #0,d1
0002A86A <AmiBlitz3.ab3@11756>   MOVE.b (A1)+,d1
0002A86C <AmiBlitz3.ab3@11759>   MOVE.b d1,(A0)+
0002A870 <AmiBlitz3.ab3@11760>   BNE.w addlabel_loop2
0002A874 <AmiBlitz3.ab3@11761> BRA.w reget
0002A876 <AmiBlitz3.ab3@11765>   MOVEQ.l #$13,D7
0002A87C <AmiBlitz3.ab3@11766>   LEA constantbase,A2
0002A880 <AmiBlitz3.ab3@11767> BRA.w findlab
0002A882 <AmiBlitz3.ab3@11771>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A888 <AmiBlitz3.ab3@11772>   LEA xinclude_base,A2
0002A88C <AmiBlitz3.ab3@11773> BRA.w findlab
0002A88E <AmiBlitz3.ab3@11777>   MOVEQ.l #$09,D7
0002A894 <AmiBlitz3.ab3@11778>   LEA firstconst,A2
0002A898 <AmiBlitz3.ab3@11779> BRA.w findlab
0002A89A <AmiBlitz3.ab3@11783>   MOVEQ.l #$0d,D7                                          ;find macro
0002A8A0 <AmiBlitz3.ab3@11784>   LEA macrobase,A2
0002A8A4 <AmiBlitz3.ab3@11785> BRA.w findlab
0002A8AA <AmiBlitz3.ab3@11789>   LEA labelhash,A2
0002A8AC <AmiBlitz3.ab3@11790>   MOVEQ.l #$13,D7
0002A8AE <AmiBlitz3.ab3@11791>   EXT.l d2
0002A8B4 <AmiBlitz3.ab3@11792>   LEA ptr_parameterstore,A0
0002A8B6 <AmiBlitz3.ab3@11793>   MOVEQ #0,d0
0002A8B8 <AmiBlitz3.ab3@11794>   MOVEQ #0,d1
0002A8BA <AmiBlitz3.ab3@11797>     MOVE.b (a0)+,d1
0002A8BE <AmiBlitz3.ab3@11798>     BEQ 'l15
0002A8C4 <AmiBlitz3.ab3@11799>     !hashalgo
0002A8C8 <AmiBlitz3.ab3@11800> BRA 'l20
0002A8CE <AmiBlitz3.ab3@11803>   AND.l #hashsize,d0
0002A8D0 <AmiBlitz3.ab3@11804>   ASL.l #2,d0
0002A8D4 <AmiBlitz3.ab3@11805>   MOVE.l 0(a2,d0),d0
0002A8D8 <AmiBlitz3.ab3@11806> BRA 'l11
0002A8DC <AmiBlitz3.ab3@11809>   MOVE.l $c(A2),D0                                         ;find label
0002A8E0 <AmiBlitz3.ab3@11812>   BEQ findlab__no
0002A8E2 <AmiBlitz3.ab3@11813>   MOVEA.l D0,A2
0002A8E4 <AmiBlitz3.ab3@11814>   MOVEQ.l #$00,D0
0002A8E8 <AmiBlitz3.ab3@11815>   MOVE.b -$1(A2,D7.l),D0
0002A8EE <AmiBlitz3.ab3@11816>   LEA ptr_parameterstore,A0
0002A8F0 <AmiBlitz3.ab3@11817>   SUB.l D7,D0
0002A8F2 <AmiBlitz3.ab3@11818>   SUBQ.l #1,D0
0002A8F4 <AmiBlitz3.ab3@11819>   CMP.l D0,D2
0002A8F8 <AmiBlitz3.ab3@11820>    BNE.b 'l10
0002A8FC <AmiBlitz3.ab3@11821>   LEA $0(A2,D7.W),A1
0002A8FE <AmiBlitz3.ab3@11822>   SUBQ.l #1,D0
0002A900 <AmiBlitz3.ab3@11825>     MOVE.b (a1)+,d1
0002A902 <AmiBlitz3.ab3@11826>     CMP.b (a0)+,d1
0002A906 <AmiBlitz3.ab3@11828>     BNE.b 'l10
0002A90A <AmiBlitz3.ab3@11829>   DBF D0,'l201
0002A90E <AmiBlitz3.ab3@11831>   BSR.w reget
0002A910 <AmiBlitz3.ab3@11832>   CMP.w D0,D0
0002A912 <AmiBlitz3.ab3@11833> RTS
0002A914 <AmiBlitz3.ab3@11837>   MOVEQ.l #$0B,D7
0002A918 <AmiBlitz3.ab3@11838> BRA.w findlab
0002A91E <AmiBlitz3.ab3@11842>   LEA firstproc,A2
0002A924 <AmiBlitz3.ab3@11843>   MOVE.l #$21+#funcentry_extend,D7
0002A928 <AmiBlitz3.ab3@11844> BRA findlab
0002A92E <AmiBlitz3.ab3@11848>   LEA firstfor,A2
0002A930 <AmiBlitz3.ab3@11849>   MOVEQ.l #$11,D7
0002A934 <AmiBlitz3.ab3@11850> BRA.w findlab
0002A936 <AmiBlitz3.ab3@11854>   MOVEQ.l #$0F,D7
0002A93A <AmiBlitz3.ab3@11855> BRA.w findlab
0002A93C <AmiBlitz3.ab3@11859>   MOVEQ.l #$0F+4,D7
0002A942 <AmiBlitz3.ab3@11860>   TST.b newvariable
0002A946 <AmiBlitz3.ab3@11861>    BNE.w findlab
0002A94C <AmiBlitz3.ab3@11862>   LEA variablehash,A2
0002A952 <AmiBlitz3.ab3@11863>   LEA ptr_parameterstore,A0
0002A954 <AmiBlitz3.ab3@11864>   MOVEQ #0,d0
0002A956 <AmiBlitz3.ab3@11865>   MOVEQ #0,d1
0002A958 <AmiBlitz3.ab3@11868>     MOVE.b (a0)+,d1
0002A95C <AmiBlitz3.ab3@11869>     BEQ 'l15
0002A962 <AmiBlitz3.ab3@11870>     !hashalgo
0002A966 <AmiBlitz3.ab3@11871> BRA 'l20
0002A96C <AmiBlitz3.ab3@11874>   AND.l #hashsize,d0
0002A96E <AmiBlitz3.ab3@11875>   ASL.l #2,d0
0002A972 <AmiBlitz3.ab3@11876>   MOVE.l 0(a2,d0),d0
0002A976 <AmiBlitz3.ab3@11877> BRA 'l11
0002A97A <AmiBlitz3.ab3@11880>   MOVE.l $e(A2),D0                                         ;find label
0002A97E <AmiBlitz3.ab3@11883>   BEQ findlab__no
0002A980 <AmiBlitz3.ab3@11884>   MOVEA.l D0,A2
0002A982 <AmiBlitz3.ab3@11885>   MOVEQ.l #$00,D0
0002A986 <AmiBlitz3.ab3@11886>   MOVE.b -$1(A2,D7.W),D0
0002A98C <AmiBlitz3.ab3@11887>   LEA ptr_parameterstore,A0
0002A98E <AmiBlitz3.ab3@11888>   SUB.w D7,D0
0002A990 <AmiBlitz3.ab3@11889>   SUBQ.l #1,D0
0002A992 <AmiBlitz3.ab3@11890>   CMP.w D0,D2
0002A996 <AmiBlitz3.ab3@11891>    BNE.b 'l10
0002A99A <AmiBlitz3.ab3@11892>   LEA $0(A2,D7.W),A1
0002A99C <AmiBlitz3.ab3@11893>   SUBQ.l #1,D0
0002A99E <AmiBlitz3.ab3@11896>     MOVE.b (a1)+,d1
0002A9A0 <AmiBlitz3.ab3@11897>     CMP.b (a0)+,d1
0002A9A4 <AmiBlitz3.ab3@11899>     BNE.b 'l10
0002A9A8 <AmiBlitz3.ab3@11900>   DBF D0,'l201
0002A9AC <AmiBlitz3.ab3@11902>   BSR.w reget
0002A9AE <AmiBlitz3.ab3@11903>   CMP.w D0,D0
0002A9B0 <AmiBlitz3.ab3@11904> RTS
0002A9B2 <AmiBlitz3.ab3@11917>     MOVE.l (A2),D0                                         ;find label
0002A9B6 <AmiBlitz3.ab3@11918>      BEQ.b findlab__no
0002A9B8 <AmiBlitz3.ab3@11919>     MOVEA.l D0,A2
0002A9BA <AmiBlitz3.ab3@11920>     MOVEQ.l #$00,D0
0002A9BE <AmiBlitz3.ab3@11921>     MOVE.b -$1(A2,D7.W),D0
0002A9C0 <AmiBlitz3.ab3@11922>     SUB.l D7,D0
0002A9C2 <AmiBlitz3.ab3@11923>     SUBQ.l #1,D0
0002A9C4 <AmiBlitz3.ab3@11924>   CMP.w D0,D2
0002A9C8 <AmiBlitz3.ab3@11925>   BNE.b findlab__loop
0002A9CC <AmiBlitz3.ab3@11927>   LEA $0(A2,D7.W),A1
0002A9D2 <AmiBlitz3.ab3@11928>   LEA ptr_parameterstore,A0
0002A9D4 <AmiBlitz3.ab3@11929>   SUBQ.l #1,D0
0002A9D6 <AmiBlitz3.ab3@11932>     MOVE.b (a1)+,d1
0002A9D8 <AmiBlitz3.ab3@11933>     CMP.b (a0)+,d1
0002A9DC <AmiBlitz3.ab3@11935>     BNE.b findlab__loop
0002A9E0 <AmiBlitz3.ab3@11936>   DBF D0,findlab__loop2
0002A9E4 <AmiBlitz3.ab3@11938>   BSR.w reget
0002A9E6 <AmiBlitz3.ab3@11939>   CMP.w D0,D0
0002A9E8 <AmiBlitz3.ab3@11940> RTS
0002A9EC <AmiBlitz3.ab3@11943>   BSR.w reget
0002A9EE <AmiBlitz3.ab3@11944>   MOVEQ.l #-$01,D1
0002A9F0 <AmiBlitz3.ab3@11945> RTS
0002A9F6 <AmiBlitz3.ab3@11949>   MOVEA.l alllocals,A4
0002A9FC <AmiBlitz3.ab3@11950>   CLR.l alllocals
0002AA00 <AmiBlitz3.ab3@11954>     CMPA.w #$0,A4
0002AA04 <AmiBlitz3.ab3@11955>      BEQ.b freeprocvs__done
0002AA08 <AmiBlitz3.ab3@11956>     MOVEA.l $4(A4),A3
0002AA0C <AmiBlitz3.ab3@11958>     MOVEA.l $8(A4),A3
0002AA0E <AmiBlitz3.ab3@11960>     MOVEA.l A4,A1
0002AA10 <AmiBlitz3.ab3@11961>     MOVEA.l (A4),A4
0002AA12 <AmiBlitz3.ab3@11962>     MOVEQ.l #$0C,D0
0002AA18 <AmiBlitz3.ab3@11963>     MOVEA.l _execbase,A6
0002AA1E <AmiBlitz3.ab3@11964>     MOVE.l mempool,a0
0002AA22 <AmiBlitz3.ab3@11965>     JSR _FreePooled(A6)
0002AA26 <AmiBlitz3.ab3@11966> BRA.b freeprocvs__loop
0002AA2C <AmiBlitz3.ab3@11969>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002AA32 <AmiBlitz3.ab3@11970>   CLR.l firstlocal
0002AA38 <AmiBlitz3.ab3@11971>   CLR.l sharebase
0002AA3E <AmiBlitz3.ab3@11972>   TST.l mempool2
0002AA42 <AmiBlitz3.ab3@11973>   BEQ freeprocvs__done_l10
0002AA48 <AmiBlitz3.ab3@11975>   MOVEA.l _execbase,A6
0002AA4E <AmiBlitz3.ab3@11976>   MOVE.l mempool2,a0
0002AA54 <AmiBlitz3.ab3@11977>   CLR.l mempool2
0002AA58 <AmiBlitz3.ab3@11978>   JSR _DeletePool(a6)
0002AA5E <AmiBlitz3.ab3@11981>   MOVE.l _execbase,a6
0002AA64 <AmiBlitz3.ab3@11982>   MOVE.l #$10000,d0
0002AA6A <AmiBlitz3.ab3@11983>   MOVE.l #80000,d1
0002AA6C <AmiBlitz3.ab3@11984>   MOVE.l d1,d2
0002AA70 <AmiBlitz3.ab3@11985>   JSR _CreatePool(a6)
0002AA76 <AmiBlitz3.ab3@11986>   MOVE.l d0,mempool2
0002AA78 <AmiBlitz3.ab3@11987> RTS
0002AA7C <AmiBlitz3.ab3@11991>   CMPA.w #$0,A3
0002AA80 <AmiBlitz3.ab3@11992>    BEQ.w freevars__done
0002AA82 <AmiBlitz3.ab3@11993>   MOVEA.l A3,A1
0002AA84 <AmiBlitz3.ab3@11994>   MOVEA.l (A3),A3
0002AA86 <AmiBlitz3.ab3@11995>   MOVEQ.l #$00,D0
0002AA8A <AmiBlitz3.ab3@11996>   MOVE.b $E(A1),D0
0002AA90 <AmiBlitz3.ab3@11997>   MOVEA.l _execbase,A6
0002AA96 <AmiBlitz3.ab3@11998>   MOVE.l mempool2,a0
0002AA9A <AmiBlitz3.ab3@11999>   JSR _FreePooled(A6)
0002AA9E <AmiBlitz3.ab3@12000> BRA.w freevars
0002AAA2 <AmiBlitz3.ab3@12003>     CMPA.w #$0,A3
0002AAA6 <AmiBlitz3.ab3@12004>      BEQ.w freevars__done
0002AAA8 <AmiBlitz3.ab3@12005>     MOVEA.l A3,A1
0002AAAA <AmiBlitz3.ab3@12006>     MOVEA.l (A3),A3
0002AAAC <AmiBlitz3.ab3@12007>     MOVEQ.l #$00,D0
0002AAB0 <AmiBlitz3.ab3@12008>     MOVE.b $E+4(A1),D0
0002AAB6 <AmiBlitz3.ab3@12009>     MOVEA.l _execbase,A6
0002AABC <AmiBlitz3.ab3@12010>     MOVE.l mempool2,a0
0002AAC0 <AmiBlitz3.ab3@12011>     JSR _FreePooled(A6)
0002AAC4 <AmiBlitz3.ab3@12012> BRA.w freevarsb
0002AAC6 <AmiBlitz3.ab3@12015> RTS
0002AACC <AmiBlitz3.ab3@12019>   MOVEA.l currentlabeladdr,A0
0002AAD2 <AmiBlitz3.ab3@12020>   MOVE.l a0,lastlabel
0002AAD4 <AmiBlitz3.ab3@12021>   MOVEA.l (A0),A2
0002AAD6 <AmiBlitz3.ab3@12022>   CLR.l (A0)
0002AADC <AmiBlitz3.ab3@12023>   MOVEA.l _execbase,A6
0002AAE0 <AmiBlitz3.ab3@12026>   CMPA.w #$0,A2
0002AAE4 <AmiBlitz3.ab3@12027>    BEQ.w clearlabels__done
0002AAE8 <AmiBlitz3.ab3@12028>   MOVE.l $4(A2),D0
0002AAEC <AmiBlitz3.ab3@12029>   BTST #$0,D0
0002AAF0 <AmiBlitz3.ab3@12030>    BNE.w clearlabels__skip
0002AAF2 <AmiBlitz3.ab3@12031>   MOVEA.l D0,A3
0002AAF6 <AmiBlitz3.ab3@12034>     CMPA.w #$0,A3
0002AAFA <AmiBlitz3.ab3@12035>      BEQ.w clearlabels__skip
0002AAFC <AmiBlitz3.ab3@12036>     MOVEA.l A3,A1
0002AAFE <AmiBlitz3.ab3@12037>     MOVEA.l (A3),A3
0002AB00 <AmiBlitz3.ab3@12038>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002AB06 <AmiBlitz3.ab3@12039>     MOVE.l mempool,a0
0002AB0A <AmiBlitz3.ab3@12040>     JSR _FreePooled(A6)
0002AB0E <AmiBlitz3.ab3@12041> BRA.w clearlabels__loop2
0002AB10 <AmiBlitz3.ab3@12044>   MOVEQ.l #$00,D0
0002AB14 <AmiBlitz3.ab3@12045>   MOVE.b $12(A2),D0
0002AB16 <AmiBlitz3.ab3@12046>   MOVEA.l A2,A1
0002AB18 <AmiBlitz3.ab3@12047>   MOVEA.l (A2),A2
0002AB1E <AmiBlitz3.ab3@12048>   MOVE.l mempool2,a0
0002AB22 <AmiBlitz3.ab3@12050> BRA.w clearlabels__loop
0002AB24 <AmiBlitz3.ab3@12053> RTS
0002AB2A <AmiBlitz3.ab3@12057>   MOVEA.l firstpend,A3
0002AB30 <AmiBlitz3.ab3@12058>   CLR.l firstpend
0002AB36 <AmiBlitz3.ab3@12059>   MOVEA.l _execbase,A6
0002AB3A <AmiBlitz3.ab3@12062>     CMPA.w #$0,A3
0002AB3E <AmiBlitz3.ab3@12063>      BEQ.w freepends__done
0002AB40 <AmiBlitz3.ab3@12064>     MOVEA.l A3,A1
0002AB42 <AmiBlitz3.ab3@12065>     MOVEQ.l #$08,D0
0002AB44 <AmiBlitz3.ab3@12066>     MOVEA.l (A3),A3
0002AB4A <AmiBlitz3.ab3@12067>     MOVE.l mempool,a0
0002AB4E <AmiBlitz3.ab3@12068>     JSR _FreePooled(A6)
0002AB52 <AmiBlitz3.ab3@12069> BRA.w fpnd2
0002AB54 <AmiBlitz3.ab3@12072> RTS
0002AB5A <AmiBlitz3.ab3@12076>   MOVEA.l firstproc,A2
0002AB60 <AmiBlitz3.ab3@12077>   CLR.l firstproc
0002AB66 <AmiBlitz3.ab3@12078>   MOVEA.l _execbase,A6
0002AB6A <AmiBlitz3.ab3@12081>     CMPA.w #$0,A2
0002AB6E <AmiBlitz3.ab3@12082>      BEQ.w clearfunctionlist__done
0002AB70 <AmiBlitz3.ab3@12083>     MOVEA.l A2,A1
0002AB72 <AmiBlitz3.ab3@12084>     MOVEA.l (A2),A2
0002AB74 <AmiBlitz3.ab3@12085>     MOVEQ.l #$00,D0
0002AB78 <AmiBlitz3.ab3@12086>     MOVE.b $20+#funcentry_extend(A1),D0
0002AB7E <AmiBlitz3.ab3@12087>     MOVE.l mempool2,a0
0002AB82 <AmiBlitz3.ab3@12088>     JSR _FreePooled(A6)
0002AB86 <AmiBlitz3.ab3@12089> BRA.w clearfunctionlist__loop
0002AB88 <AmiBlitz3.ab3@12092> RTS
0002AB8C <AmiBlitz3.ab3@12096>   CMPA.w #$0,A2
0002AB90 <AmiBlitz3.ab3@12097>    BEQ.w freetypes__done
0002AB94 <AmiBlitz3.ab3@12098>   MOVEA.l $4(A2),A3
0002AB98 <AmiBlitz3.ab3@12099>   CMPA.w #$FF,A3
0002AB9C <AmiBlitz3.ab3@12100>    BEQ.w freetypes__noway
0002ABA0 <AmiBlitz3.ab3@12104>    BSR.w freevars
0002ABA2 <AmiBlitz3.ab3@12107>     MOVEA.l A2,A1
0002ABA4 <AmiBlitz3.ab3@12108>     MOVEA.l (A2),A2
0002ABA6 <AmiBlitz3.ab3@12109>     MOVEQ.l #$00,D0
0002ABAA <AmiBlitz3.ab3@12110>     MOVE.b $A(A1),D0
0002ABB0 <AmiBlitz3.ab3@12111>     MOVEA.l _execbase,A6
0002ABB6 <AmiBlitz3.ab3@12112>     MOVE.l mempool2,a0
0002ABBA <AmiBlitz3.ab3@12113>     JSR _FreePooled(A6)
0002ABBE <AmiBlitz3.ab3@12114> BRA.w freetypes
0002ABC0 <AmiBlitz3.ab3@12117> RTS
0002ABC6 <AmiBlitz3.ab3@12121>   JSR uselib2
0002ABCC <AmiBlitz3.ab3@12123>   CLR.w notshared
0002ABD2 <AmiBlitz3.ab3@12124>   CLR.w varmode
0002ABD8 <AmiBlitz3.ab3@12125>   MOVE.w proceduremode,D1
0002ABDC <AmiBlitz3.ab3@12126>    BNE.w JL_0_8F4E
0002ABE2 <AmiBlitz3.ab3@12127>   LEA varbase,A2
0002ABE8 <AmiBlitz3.ab3@12128>   LEA ptr_parameterstore,a0
0002ABEC <AmiBlitz3.ab3@12129>   CMP.b #$22,(a0)
0002ABF0 <AmiBlitz3.ab3@12130>   BNE JL_0_8E5E
0002ABF2 <AmiBlitz3.ab3@12131>   MOVEQ #0,d0
0002ABF8 <AmiBlitz3.ab3@12132> JMP error
0002ABFC <AmiBlitz3.ab3@12135>   BSR.w findvariable
0002AC00 <AmiBlitz3.ab3@12138>   BNE.w JL_0_8E7E
0002AC06 <AmiBlitz3.ab3@12141>   MOVE.b flagmask+1,D1
0002AC0A <AmiBlitz3.ab3@12142>   MOVE.b $7(A2),D3
0002AC0C <AmiBlitz3.ab3@12143>   EOR.b D3,D1
0002AC10 <AmiBlitz3.ab3@12144>   BNE 'l2
0002AC18 <AmiBlitz3.ab3@12145>   CMP.b #2,nowdeclare
0002AC1C <AmiBlitz3.ab3@12146>   BEQ errormsg_declaredtwice
0002AC20 <AmiBlitz3.ab3@12147> BRA.w JL_0_8FA8
0002AC24 <AmiBlitz3.ab3@12150>   BSR.w findlab
0002AC28 <AmiBlitz3.ab3@12151>   BNE 'l1
0002AC30 <AmiBlitz3.ab3@12152>   CMP.b #2,nowdeclare
0002AC34 <AmiBlitz3.ab3@12153>   BEQ errormsg_declaredtwice
0002AC36 <AmiBlitz3.ab3@12154>   CMP.w d0,d0
0002AC3A <AmiBlitz3.ab3@12157> BRA.w JL_0_8E62
0002AC3C <AmiBlitz3.ab3@12160>    MOVE.l a2,-(a7)
0002AC42 <AmiBlitz3.ab3@12161>    LEA sharebase,a2
0002AC44 <AmiBlitz3.ab3@12162>    MOVEQ #$f+4,d7
0002AC48 <AmiBlitz3.ab3@12163>    BSR.w findlab
0002AC4C <AmiBlitz3.ab3@12164>    BEQ 'l2x
0002AC4E <AmiBlitz3.ab3@12165>    MOVE.l (a7)+,a2
0002AC52 <AmiBlitz3.ab3@12166> BRA 'cont
0002AC54 <AmiBlitz3.ab3@12169>   ADDQ.l #4,a7
0002AC5A <AmiBlitz3.ab3@12170>   CLR.w varmode
0002AC60 <AmiBlitz3.ab3@12171>   MOVE.b flagmask+1,D1
0002AC64 <AmiBlitz3.ab3@12172>   MOVE.b $7(A2),D3
0002AC66 <AmiBlitz3.ab3@12173>   EOR.b D3,D1
0002AC6A <AmiBlitz3.ab3@12174>   BNE vardeclareerr
0002AC6E <AmiBlitz3.ab3@12175> BRA JL_0_8FA8
0002AC74 <AmiBlitz3.ab3@12178>    MOVE.w nonew,D1
0002AC78 <AmiBlitz3.ab3@12179>    BNE.w nonewerr
0002AC7E <AmiBlitz3.ab3@12180>    TST.b nowdeclare
0002AC82 <AmiBlitz3.ab3@12181>    BNE 'l2
0002AC88 <AmiBlitz3.ab3@12182>    TST.b declare2
0002AC8C <AmiBlitz3.ab3@12183>    BEQ 'l1
0002AC90 <AmiBlitz3.ab3@12184>    CMP.b #$2e,d0
0002AC94 <AmiBlitz3.ab3@12185>    BEQ 'l2
0002AC98 <AmiBlitz3.ab3@12186>    CMP.b #"$",d0
0002AC9C <AmiBlitz3.ab3@12187>    BEQ 'l2
0002ACA0 <AmiBlitz3.ab3@12188> BRA vardeclareerr
0002ACA6 <AmiBlitz3.ab3@12191>   TST.b declare
0002ACAA <AmiBlitz3.ab3@12192>    BNE vardeclareerr
0002ACAE <AmiBlitz3.ab3@12195>   BSR.w addvariable
0002ACB4 <AmiBlitz3.ab3@12196>   NOT.w notshared
0002ACB6 <AmiBlitz3.ab3@12197>   MOVEA.l A2,A3
0002ACBC <AmiBlitz3.ab3@12198>   MOVEA.l defaulttype,A2
0002ACC0 <AmiBlitz3.ab3@12199>   CMP.w #$2E,D0
0002ACC4 <AmiBlitz3.ab3@12200>    BEQ.w JL_0_8EB8
0002ACC8 <AmiBlitz3.ab3@12201>   CMP.w #$24,D0
0002ACCC <AmiBlitz3.ab3@12202>    BNE.w JL_0_8ECA
0002ACD2 <AmiBlitz3.ab3@12203>   LEA newtype_string,A2
0002ACD6 <AmiBlitz3.ab3@12204>    BSR.w get1bytemain
0002ACDA <AmiBlitz3.ab3@12205> BRA.w JL_0_8ECA
0002ACE0 <AmiBlitz3.ab3@12208> JMP JUMP_notypeerr
0002ACE4 <AmiBlitz3.ab3@12211>    BSR.w getparameter2
0002ACEA <AmiBlitz3.ab3@12212>   LEA newtypebase,A2
0002ACEE <AmiBlitz3.ab3@12213>    BSR.w findtype
0002ACF2 <AmiBlitz3.ab3@12214>    BNE.w notypeerr3
0002ACF8 <AmiBlitz3.ab3@12217>   CMPA.l #newtype_byte,A2
0002ACFC <AmiBlitz3.ab3@12218>    BEQ.w JL_0_8EECb
0002AD02 <AmiBlitz3.ab3@12219>   MOVE.w varmode,D1
0002AD06 <AmiBlitz3.ab3@12220>    BNE.w JL_0_8EE4b
0002AD0C <AmiBlitz3.ab3@12221>   ADDQ.w #1,globalvarpointer
0002AD14 <AmiBlitz3.ab3@12224>   BCLR #$0,globalvarpointer+1
0002AD18 <AmiBlitz3.ab3@12227>   MOVE.l A2,$A(A3)
0002AD20 <AmiBlitz3.ab3@12228>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AD22 <AmiBlitz3.ab3@12230>   MOVEQ.l #$04,D1
0002AD2A <AmiBlitz3.ab3@12231>   BTST #$0,flagmask+1
0002AD2E <AmiBlitz3.ab3@12232>    BNE.w JL_0_8F22b
0002AD36 <AmiBlitz3.ab3@12233>   BTST #$1,flagmask+1
0002AD3A <AmiBlitz3.ab3@12234>    BNE.w JL_0_8F22b
0002AD42 <AmiBlitz3.ab3@12235>   CMPI.l #$100,$4(A2)
0002AD46 <AmiBlitz3.ab3@12236>    BCC.w JL_0_8F22b
0002AD4A <AmiBlitz3.ab3@12237>   MOVE.w $8(A2),D1
0002AD50 <AmiBlitz3.ab3@12240>   TST.w varmode
0002AD54 <AmiBlitz3.ab3@12241> BRA.w JL_0_8F3E
0002AD58 <AmiBlitz3.ab3@12250>   BSR.w getparameter2
0002AD5E <AmiBlitz3.ab3@12251>   LEA newtypebase,A2
0002AD62 <AmiBlitz3.ab3@12252>    BSR.w findtype
0002AD66 <AmiBlitz3.ab3@12253>    BNE.w notypeerr
0002AD6C <AmiBlitz3.ab3@12256>   CMPA.l #newtype_byte,A2
0002AD70 <AmiBlitz3.ab3@12257>    BEQ.w JL_0_8EEC
0002AD76 <AmiBlitz3.ab3@12258>   MOVE.w varmode,D1
0002AD7A <AmiBlitz3.ab3@12259>    BNE.w JL_0_8EE4
0002AD80 <AmiBlitz3.ab3@12260>   ADDQ.w #1,globalvarpointer
0002AD88 <AmiBlitz3.ab3@12263>   BCLR #$0,globalvarpointer+1
0002AD8C <AmiBlitz3.ab3@12266>   MOVE.l A2,$A(A3)
0002AD94 <AmiBlitz3.ab3@12267>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AD96 <AmiBlitz3.ab3@12268>   MOVEQ.l #$04,D1
0002AD9E <AmiBlitz3.ab3@12269>   BTST #$0,flagmask+1
0002ADA2 <AmiBlitz3.ab3@12270>    BNE.w JL_0_8F22
0002ADAA <AmiBlitz3.ab3@12271>   BTST #$1,flagmask+1
0002ADAE <AmiBlitz3.ab3@12272>    BNE.w JL_0_8F22
0002ADB6 <AmiBlitz3.ab3@12273>   CMPI.l #$100,$4(A2)
0002ADBA <AmiBlitz3.ab3@12274>    BCC.w JL_0_8F22
0002ADBE <AmiBlitz3.ab3@12275>   MOVE.w $8(A2),D1
0002ADC4 <AmiBlitz3.ab3@12278>   TST.w varmode
0002ADC8 <AmiBlitz3.ab3@12279>    BEQ.w JL_0_8F3E
0002ADCA <AmiBlitz3.ab3@12280>   NEG.w D1
0002ADD0 <AmiBlitz3.ab3@12281>   ADD.w D1,globalvarpointer
0002ADD8 <AmiBlitz3.ab3@12282>   MOVE.w globalvarpointer,$4(A3)
0002ADDA <AmiBlitz3.ab3@12283> RTS
0002ADE2 <AmiBlitz3.ab3@12286>   MOVE.w globalvarpointer,$4(A3)
0002ADE8 <AmiBlitz3.ab3@12287>   ADD.w D1,globalvarpointer
0002ADEA <AmiBlitz3.ab3@12288> RTS
0002ADF0 <AmiBlitz3.ab3@12292>   LEA firstglob,A2
0002ADF4 <AmiBlitz3.ab3@12293>    BSR.w findvariable2
0002ADF8 <AmiBlitz3.ab3@12296>   BNE.w JL_0_8F74
0002ADFE <AmiBlitz3.ab3@12297>   MOVE.b flagmask+1,D1
0002AE02 <AmiBlitz3.ab3@12298>   MOVE.b $7(A2),D3
0002AE04 <AmiBlitz3.ab3@12299>   EOR.b D3,D1
0002AE08 <AmiBlitz3.ab3@12300>    BEQ.w JL_0_8FA8
0002AE0C <AmiBlitz3.ab3@12301>    BSR.w findlab
0002AE10 <AmiBlitz3.ab3@12302> BRA.w JL_0_8F58
0002AE18 <AmiBlitz3.ab3@12305>   MOVE.w #$FFFF,varmode
0002AE1E <AmiBlitz3.ab3@12306>   MOVE.w globalvarpointer,-(A7)
0002AE28 <AmiBlitz3.ab3@12307>   MOVE.w locvaroff,globalvarpointer
0002AE2E <AmiBlitz3.ab3@12308>   LEA firstlocal,A2
0002AE36 <AmiBlitz3.ab3@12309>   MOVE.b #1,newvariable
0002AE3A <AmiBlitz3.ab3@12310>    BSR.w JL_0_8E5E
0002AE40 <AmiBlitz3.ab3@12311>   CLR.b newvariable
0002AE4A <AmiBlitz3.ab3@12312>   MOVE.w globalvarpointer,locvaroff
0002AE50 <AmiBlitz3.ab3@12313>   MOVE.w (A7)+,globalvarpointer
0002AE52 <AmiBlitz3.ab3@12314> RTS
0002AE54 <AmiBlitz3.ab3@12317>   MOVEA.l A2,A3
0002AE58 <AmiBlitz3.ab3@12318>   CMP.w #$2E,D0
0002AE5C <AmiBlitz3.ab3@12319>    BEQ.w JL_0_8FCE
0002AE60 <AmiBlitz3.ab3@12320>   CMP.w #$24,D0
0002AE64 <AmiBlitz3.ab3@12321>    BNE.w JL_0_8FE8
0002AE6C <AmiBlitz3.ab3@12322>   CMPI.l #newtype_string,$A(A3)
0002AE70 <AmiBlitz3.ab3@12323>    BNE.w rongtypeerr
0002AE74 <AmiBlitz3.ab3@12324>    BSR.w get1bytemain
0002AE78 <AmiBlitz3.ab3@12325> BRA.w JL_0_8FE8
0002AE7C <AmiBlitz3.ab3@12328>    BSR.w getparameter2
0002AE82 <AmiBlitz3.ab3@12329>   LEA newtypebase,A2
0002AE86 <AmiBlitz3.ab3@12330>    BSR.w findtype
0002AE8A <AmiBlitz3.ab3@12331>    BNE.w notypeerr
0002AE8E <AmiBlitz3.ab3@12332>   CMPA.l $A(A3),A2
0002AE92 <AmiBlitz3.ab3@12333>    BNE.w rongtypeerr
0002AE9A <AmiBlitz3.ab3@12335>   BTST #$0,flagmask+1
0002AE9E <AmiBlitz3.ab3@12336>    BEQ.w JL_0_8FFE
0002AEA4 <AmiBlitz3.ab3@12337>   BTST #$0,$7(A3)
0002AEA8 <AmiBlitz3.ab3@12338>    BEQ.w pointerr
0002AEAC <AmiBlitz3.ab3@12341>   MOVEA.l $A(A3),A2
0002AEAE <AmiBlitz3.ab3@12342> RTS
0002AEB0 <AmiBlitz3.ab3@12346>    TST.l D3                                                ;newtype >32kb  .w to .l
0002AEB4 <AmiBlitz3.ab3@12347>    BEQ.w JL_0_9042
0002AEBE <AmiBlitz3.ab3@12348>    MOVE.l destpointer,loada
0002AEC2 <AmiBlitz3.ab3@12351> BRA JL_0_9032
0002AEC6 <AmiBlitz3.ab3@12353>   CMP.w #$9,D3                                             ;_addq_arrays
0002AECA <AmiBlitz3.ab3@12354>    BCC.w JL_0_9032
0002AED0 <AmiBlitz3.ab3@12355>   MOVE.w d3,arrayoffset
0002AED4 <AmiBlitz3.ab3@12356>   ANDI.w #$7,D3
0002AED6 <AmiBlitz3.ab3@12357>   LSL.w #8,D3
0002AED8 <AmiBlitz3.ab3@12358>   LSL.w #1,D3
0002AEE0 <AmiBlitz3.ab3@12359>   ANDI.w #$F1FF,addqa0
0002AEE6 <AmiBlitz3.ab3@12360>   OR.w D3,addqa0
0002AEEC <AmiBlitz3.ab3@12361>   MOVE.w addqa0,D1
0002AEF0 <AmiBlitz3.ab3@12362> BRA.w writeword
0002AEF6 <AmiBlitz3.ab3@12365>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002AEFA <AmiBlitz3.ab3@12366>   BGT longoffset
0002AF00 <AmiBlitz3.ab3@12367>   MOVE.w D3,leaa0a0+2
0002AF06 <AmiBlitz3.ab3@12368>   MOVE.w d3,arrayoffset
0002AF0C <AmiBlitz3.ab3@12369>   MOVE.l leaa0a0,D1
0002AF10 <AmiBlitz3.ab3@12370>   BSR.w writelong
0002AF12 <AmiBlitz3.ab3@12373> RTS
0002AF16 <AmiBlitz3.ab3@12376>    MOVE.w #$d5fc,d1
0002AF1A <AmiBlitz3.ab3@12377>    BSR writeword
0002AF1C <AmiBlitz3.ab3@12378>    MOVE.l d3,d1
0002AF20 <AmiBlitz3.ab3@12379>    BSR.w writelong
0002AF22 <AmiBlitz3.ab3@12380> RTS
0002AF26 <AmiBlitz3.ab3@12384>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002AF2A <AmiBlitz3.ab3@12387>    BCS.w arrchk3                                           
0002AF30 <AmiBlitz3.ab3@12388>    JSR $20000                                              ;jsr 0
0002AF36 <AmiBlitz3.ab3@12394>   TST.b fast
0002AF3A <AmiBlitz3.ab3@12395>   BEQ 'l1
0002AF3C <AmiBlitz3.ab3@12396>    MOVEQ #0,d1                                             ;faster arrays
0002AF42 <AmiBlitz3.ab3@12397>    MOVE.w regnum,d2
0002AF44 <AmiBlitz3.ab3@12398>    MOVE.w d2,d1
0002AF46 <AmiBlitz3.ab3@12399>    LSL.w #8,d1
0002AF48 <AmiBlitz3.ab3@12400>    LSL.w #4,d1
0002AF4A <AmiBlitz3.ab3@12401>    ADD.w d2,d1
0002AF50 <AmiBlitz3.ab3@12402>    OR.l #$4c2d0000,d1
0002AF56 <AmiBlitz3.ab3@12403>    TST.w varmode
0002AF5A <AmiBlitz3.ab3@12404>    BEQ 'l1a
0002AF5E <AmiBlitz3.ab3@12405>    BCLR #16,d1
0002AF62 <AmiBlitz3.ab3@12408>    BSR writelong
0002AF66 <AmiBlitz3.ab3@12409>    MOVE.w $4(A7),D1
0002AF6A <AmiBlitz3.ab3@12410>    BSR.w writeword
0002AF70 <AmiBlitz3.ab3@12411>    MOVE.w regnum,D1
0002AF72 <AmiBlitz3.ab3@12412>   SUBQ.w #1,D1
0002AF74 <AmiBlitz3.ab3@12413>   LSL.w #8,D1
0002AF76 <AmiBlitz3.ab3@12414>   LSL.w #1,D1
0002AF7A <AmiBlitz3.ab3@12415>   ORI.w #$D080,D1
0002AF80 <AmiBlitz3.ab3@12416>   OR.w regnum,D1
0002AF84 <AmiBlitz3.ab3@12417>    BSR.w writeword
0002AF86 <AmiBlitz3.ab3@12418> RTS
0002AF8C <AmiBlitz3.ab3@12421>   MOVE.w regnum,D2
0002AF90 <AmiBlitz3.ab3@12422>   MOVE.w arrmul1(PC),D1
0002AF92 <AmiBlitz3.ab3@12423>   OR.w D2,D1
0002AF94 <AmiBlitz3.ab3@12424>   SUBQ.w #1,D1
0002AF98 <AmiBlitz3.ab3@12425>    BSR.w writeword
0002AF9C <AmiBlitz3.ab3@12426>   MOVE.w arrmul2(PC),D1
0002AF9E <AmiBlitz3.ab3@12427>   OR.w D2,D1
0002AFA0 <AmiBlitz3.ab3@12428>   MOVE.w D2,D3
0002AFA2 <AmiBlitz3.ab3@12429>   SUBQ.w #1,D3
0002AFA4 <AmiBlitz3.ab3@12430>   LSL.w #8,D3
0002AFA6 <AmiBlitz3.ab3@12431>   LSL.w #1,D3
0002AFA8 <AmiBlitz3.ab3@12432>   OR.w D3,D1
0002AFAC <AmiBlitz3.ab3@12433>    BSR.w writeword
0002AFB0 <AmiBlitz3.ab3@12434>   MOVE.w arrmul3(PC),D1
0002AFB2 <AmiBlitz3.ab3@12435>   MOVE.w D2,D3
0002AFB4 <AmiBlitz3.ab3@12436>   LSL.w #8,D3
0002AFB6 <AmiBlitz3.ab3@12437>   LSL.w #1,D3
0002AFB8 <AmiBlitz3.ab3@12438>   OR.w D3,D1
0002AFBC <AmiBlitz3.ab3@12439>    BSR.w pokewda5s
0002AFC0 <AmiBlitz3.ab3@12440>   MOVE.w $4(A7),D1
0002AFC2 <AmiBlitz3.ab3@12441>   ADDQ.w #2,D1
0002AFC6 <AmiBlitz3.ab3@12442>    BSR.w writeword
0002AFCA <AmiBlitz3.ab3@12443>   MOVE.w arrmul4(PC),D1
0002AFCC <AmiBlitz3.ab3@12444>   MOVE.w D2,D3
0002AFCE <AmiBlitz3.ab3@12445>   SUBQ.w #1,D3
0002AFD0 <AmiBlitz3.ab3@12446>   LSL.w #8,D3
0002AFD2 <AmiBlitz3.ab3@12447>   LSL.w #1,D3
0002AFD4 <AmiBlitz3.ab3@12448>   OR.w D3,D1
0002AFD8 <AmiBlitz3.ab3@12449>    BSR.w pokewda5s
0002AFDC <AmiBlitz3.ab3@12450>   MOVE.w $4(A7),D1
0002AFE0 <AmiBlitz3.ab3@12451>    BSR.w writeword
0002AFE4 <AmiBlitz3.ab3@12452>   MOVE.w arrmul5(PC),D1
0002AFE6 <AmiBlitz3.ab3@12453>   OR.w D2,D1
0002AFE8 <AmiBlitz3.ab3@12454>   SUBQ.w #1,D1
0002AFEC <AmiBlitz3.ab3@12455>    BSR.w writeword
0002AFF0 <AmiBlitz3.ab3@12456>   MOVE.w arrmul6(PC),D1
0002AFF2 <AmiBlitz3.ab3@12457>   OR.w D2,D1
0002AFF4 <AmiBlitz3.ab3@12458>   SUBQ.w #1,D1
0002AFF8 <AmiBlitz3.ab3@12459>    BSR.w writeword
0002AFFC <AmiBlitz3.ab3@12460>   MOVE.w arrmul7(PC),D1
0002AFFE <AmiBlitz3.ab3@12461>   OR.w D2,D1
0002B000 <AmiBlitz3.ab3@12462>   SUBQ.w #1,D1
0002B002 <AmiBlitz3.ab3@12463>   MOVE.w D2,D3
0002B004 <AmiBlitz3.ab3@12464>   LSL.w #8,D3
0002B006 <AmiBlitz3.ab3@12465>   LSL.w #1,D3
0002B008 <AmiBlitz3.ab3@12466>   OR.w D3,D1
0002B00C <AmiBlitz3.ab3@12467>    BSR.w writeword
0002B010 <AmiBlitz3.ab3@12468>   MOVE.w arrmul8(PC),D1
0002B012 <AmiBlitz3.ab3@12469>   MOVE.w D2,D3
0002B014 <AmiBlitz3.ab3@12470>   SUBQ.w #1,D3
0002B016 <AmiBlitz3.ab3@12471>   LSL.w #8,D3
0002B018 <AmiBlitz3.ab3@12472>   LSL.w #1,D3
0002B01A <AmiBlitz3.ab3@12473>   OR.w D3,D1
0002B01E <AmiBlitz3.ab3@12474>    BSR.w writeword
0002B024 <AmiBlitz3.ab3@12475>   MOVE.w regnum,D1
0002B026 <AmiBlitz3.ab3@12476>   SUBQ.w #1,D1
0002B028 <AmiBlitz3.ab3@12477>   LSL.w #8,D1
0002B02A <AmiBlitz3.ab3@12478>   LSL.w #1,D1
0002B02E <AmiBlitz3.ab3@12479>   ORI.w #$D080,D1
0002B034 <AmiBlitz3.ab3@12480>   OR.w regnum,D1
0002B038 <AmiBlitz3.ab3@12481> BRA.w writeword
0002B03A <AmiBlitz3.ab3@12489> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B03C <AmiBlitz3.ab3@12490> arrmul2:   MOVE  d0,d0
0002B040 <AmiBlitz3.ab3@12491> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B044 <AmiBlitz3.ab3@12492> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B046 <AmiBlitz3.ab3@12494> arrmul5:   SWAP d0
0002B048 <AmiBlitz3.ab3@12495> arrmul6:   CLR d0
0002B04A <AmiBlitz3.ab3@12496> arrmul7:   ADD.l d0,d0
0002B04C <AmiBlitz3.ab3@12497> arrmul8:   MOVE.l (a7)+,d0
0002B050 <AmiBlitz3.ab3@12502> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B054 <AmiBlitz3.ab3@12503> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B056 <AmiBlitz3.ab3@12504> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B05C <AmiBlitz3.ab3@12522>   CLR.l lastoffset_org
0002B062 <AmiBlitz3.ab3@12523>   BTST #$1,$7(A3)
0002B066 <AmiBlitz3.ab3@12524>    BEQ.w calcvar__notarr
0002B06C <AmiBlitz3.ab3@12525>   MOVE.w notshared,D1
0002B070 <AmiBlitz3.ab3@12526>    BNE.w noarrerr
0002B074 <AmiBlitz3.ab3@12527>    BSR.w get1bytemain
0002B078 <AmiBlitz3.ab3@12528>   CMP.w #$29,D0
0002B07C <AmiBlitz3.ab3@12529>    BNE.w calcvar__notalist
0002B082 <AmiBlitz3.ab3@12530>   BTST #$0,$6(A3)
0002B086 <AmiBlitz3.ab3@12531>    BEQ.w nolisterr
0002B08E <AmiBlitz3.ab3@12532>   MOVE.w $4(A3),listcode1+2
0002B092 <AmiBlitz3.ab3@12533>   MOVE.l listcode1(PC),D1
0002B096 <AmiBlitz3.ab3@12534>    BSR.w pokela5s
0002B09A <AmiBlitz3.ab3@12535>   MOVE.l listcode2(PC),D1
0002B09E <AmiBlitz3.ab3@12536>    BSR.w writelong
0002B0A4 <AmiBlitz3.ab3@12537>   TST.b debugmode
0002B0A8 <AmiBlitz3.ab3@12538>    BEQ.w calcvar__nolrerr
0002B0AA <AmiBlitz3.ab3@12542>   MOVE.l A2,-(A7)
0002B0AE <AmiBlitz3.ab3@12543>   MOVE.w #$C315,D1
0002B0B2 <AmiBlitz3.ab3@12544>    BSR.w Atokejsr
0002B0B4 <AmiBlitz3.ab3@12545>   MOVEA.l (A7)+,A2
0002B0B8 <AmiBlitz3.ab3@12548>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B0BC <AmiBlitz3.ab3@12550>    BSR.w writeword
0002B0C0 <AmiBlitz3.ab3@12551> BRA.w calcvar__normalar
0002B0C2 <AmiBlitz3.ab3@12554> calcvar__listoff:   Ds.w 1
0002B0C8 <AmiBlitz3.ab3@12558>   CLR.w calcvar__listoff
0002B0CE <AmiBlitz3.ab3@12559>   BTST #$0,$6(A3)
0002B0D2 <AmiBlitz3.ab3@12560>    BEQ.w calcvar__knop
0002B0DA <AmiBlitz3.ab3@12561>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002B0DE <AmiBlitz3.ab3@12564>   MOVEM.l A2-A3,-(A7)
0002B0E4 <AmiBlitz3.ab3@12565>   MOVE.w varmode,-(A7)
0002B0E8 <AmiBlitz3.ab3@12566>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B0EC <AmiBlitz3.ab3@12567>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B0EE <AmiBlitz3.ab3@12568>   MOVE.l A2,-(A7)
0002B0F4 <AmiBlitz3.ab3@12569>   MOVE.w flagmask,-(A7)
0002B0FE <AmiBlitz3.ab3@12571>   MOVE.w oldqflag,instringon
0002B104 <AmiBlitz3.ab3@12572>   MOVEA.l lastsourcepos,A5
0002B108 <AmiBlitz3.ab3@12573>    BSR.w arreval
0002B10E <AmiBlitz3.ab3@12574>   MOVE.w (A7)+,flagmask
0002B116 <AmiBlitz3.ab3@12575>   MOVE.w $8(A7),varmode
0002B11C <AmiBlitz3.ab3@12576>   TST.b debugmode
0002B120 <AmiBlitz3.ab3@12577>    BEQ.w calcvar__noszchk
0002B122 <AmiBlitz3.ab3@12581>   MOVEA.l (A7)+,A2
0002B124 <AmiBlitz3.ab3@12582>   MOVEQ.l #$04,D1
0002B12C <AmiBlitz3.ab3@12583>   BTST #$0,flagmask+1                                      ;pointer?
0002B130 <AmiBlitz3.ab3@12584>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002B134 <AmiBlitz3.ab3@12585>   MOVE.w $8(A2),D1
0002B138 <AmiBlitz3.ab3@12588>   ADD.w calcvar__listoff(PC),D1
0002B13C <AmiBlitz3.ab3@12589>   BSR.w JL_0_B6DE
0002B142 <AmiBlitz3.ab3@12590>   ADDQ.w #1,regnum
0002B144 <AmiBlitz3.ab3@12593>   ADDQ.w #4,(A7)
0002B148 <AmiBlitz3.ab3@12594>   TST.w $4(A7)
0002B14C <AmiBlitz3.ab3@12595>    BEQ.w calcvar__isglob
0002B14E <AmiBlitz3.ab3@12596>   SUBQ.w #8,(A7)                                           ;range check local array
0002B154 <AmiBlitz3.ab3@12599>   TST.b debugmode
0002B158 <AmiBlitz3.ab3@12600>    BEQ.w calcvar__noer1
0002B15E <AmiBlitz3.ab3@12601>   MOVE.w regnum,D1
0002B160 <AmiBlitz3.ab3@12602>   SUBQ.w #1,D1
0002B162 <AmiBlitz3.ab3@12603>   LSL.w #8,D1
0002B164 <AmiBlitz3.ab3@12604>   LSL.w #1,D1
0002B168 <AmiBlitz3.ab3@12605>   OR.w zarrchk(PC),D1
0002B16C <AmiBlitz3.ab3@12606>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B16E <AmiBlitz3.ab3@12607>   MOVE.w (A7),D1
0002B172 <AmiBlitz3.ab3@12608>    BSR.w writeword
0002B176 <AmiBlitz3.ab3@12609>   MOVE.l arrchk2(PC),D1
0002B17A <AmiBlitz3.ab3@12610>    BSR.w writelong
0002B17E <AmiBlitz3.ab3@12611>   MOVE.w #$C309,D1
0002B182 <AmiBlitz3.ab3@12612>    BSR.w Atokejsr
0002B186 <AmiBlitz3.ab3@12615>   SUBQ.w #1,$2(A7)
0002B18A <AmiBlitz3.ab3@12616>    BEQ.w calcvar__ardone
0002B18E <AmiBlitz3.ab3@12617>   CMP.w #$2C,D0
0002B192 <AmiBlitz3.ab3@12618>    BNE.w syntaxerr
0002B198 <AmiBlitz3.ab3@12619>    TST.b fast
0002B19C <AmiBlitz3.ab3@12620>    BNE 'l1
0002B1A0 <AmiBlitz3.ab3@12621>    BSR.w arrevalchk
0002B1A4 <AmiBlitz3.ab3@12622> BRA 'l2
0002B1A8 <AmiBlitz3.ab3@12625>   BSR arreval
0002B1B0 <AmiBlitz3.ab3@12628>   MOVE.w $4(A7),varmode
0002B1B4 <AmiBlitz3.ab3@12629>   BSR.w JL_0_9052
0002B1B8 <AmiBlitz3.ab3@12630> BRA.w calcvar__arloop
0002B1BC <AmiBlitz3.ab3@12634>   CMP.w #$29,D0
0002B1C0 <AmiBlitz3.ab3@12635>    BNE.w syntaxerr
0002B1C6 <AmiBlitz3.ab3@12636>   SUBQ.w #1,regnum
0002B1C8 <AmiBlitz3.ab3@12637>   ADDQ.w #6,A7
0002B1CC <AmiBlitz3.ab3@12638>   MOVEM.l (A7)+,A2-A3
0002B1D4 <AmiBlitz3.ab3@12639>   MOVE.w $4(A3),movea5a0+2
0002B1DA <AmiBlitz3.ab3@12640>   MOVE.l movea5a0,D1
0002B1DE <AmiBlitz3.ab3@12641>    BSR.w pokela5s
0002B1E4 <AmiBlitz3.ab3@12642>   MOVE.w regnum,D1
0002B1E8 <AmiBlitz3.ab3@12643>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B1EC <AmiBlitz3.ab3@12644>    BSR.w writeword
0002B1F2 <AmiBlitz3.ab3@12645>   BTST #$0,$6(A3)
0002B1F6 <AmiBlitz3.ab3@12646>    BEQ.w calcvar__normalar
0002B1FA <AmiBlitz3.ab3@12650>   MOVE.w listarfix(PC),D1
0002B1FE <AmiBlitz3.ab3@12651>    BSR.w writeword
0002B202 <AmiBlitz3.ab3@12654>   BSR.w get1bytemain
0002B208 <AmiBlitz3.ab3@12658>   BTST #$0,$7(A3)
0002B20C <AmiBlitz3.ab3@12659>    BEQ.w calcvar__noppnt
0002B210 <AmiBlitz3.ab3@12660>   CMP.w #$5C,D0
0002B214 <AmiBlitz3.ab3@12661>    BNE.w calcvar__pmskip
0002B218 <AmiBlitz3.ab3@12662>   MOVE.w calcvar__pfix(PC),D1
0002B21C <AmiBlitz3.ab3@12663>    BSR.w writeword
0002B220 <AmiBlitz3.ab3@12666>   MOVE.w #$8000,D2
0002B224 <AmiBlitz3.ab3@12667> BRA.w calcvar__loopml
0002B228 <AmiBlitz3.ab3@12670>   MOVE.w #$C000,D2
0002B22C <AmiBlitz3.ab3@12671> BRA.w calcvar__loopml
0002B22E <AmiBlitz3.ab3@12675> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B232 <AmiBlitz3.ab3@12680>   CMP.w #$28,D0
0002B236 <AmiBlitz3.ab3@12681>    BEQ.w noarrerr
0002B23E <AmiBlitz3.ab3@12682>   CMPI.l #$100,$4(A2)
0002B242 <AmiBlitz3.ab3@12683>    BCS.w calcvar__simpvar
0002B248 <AmiBlitz3.ab3@12684>   BTST #$0,$7(A3)
0002B24C <AmiBlitz3.ab3@12685>    BEQ.w calcvar__notap
0002B250 <AmiBlitz3.ab3@12689>   CMP.w #$5C,D0
0002B254 <AmiBlitz3.ab3@12690>    BEQ.w calcvar__notap
0002B256 <AmiBlitz3.ab3@12691>   MOVEQ.l #$00,D2
0002B25A <AmiBlitz3.ab3@12692> BRA.w calcvar__simpvar2
0002B25E <AmiBlitz3.ab3@12695>   MOVE.w #$8000,D2
0002B266 <AmiBlitz3.ab3@12696>   MOVE.w $4(A3),movea5a0+2
0002B26C <AmiBlitz3.ab3@12697>   MOVE.l movea5a0,D1
0002B270 <AmiBlitz3.ab3@12698>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B276 <AmiBlitz3.ab3@12700>    TST.b debugmode
0002B27A <AmiBlitz3.ab3@12701>    BEQ.w 'skip
0002B27E <AmiBlitz3.ab3@12702>    MOVE.w #$c320,D1
0002B284 <AmiBlitz3.ab3@12703>    JSR Atokejsr
0002B286 <AmiBlitz3.ab3@12707>   MOVEQ.l #$00,D3
0002B28A <AmiBlitz3.ab3@12710>   CMP.w #$5C,D0
0002B28E <AmiBlitz3.ab3@12711>    BNE.w calcvar__done
0002B296 <AmiBlitz3.ab3@12712>   CMPI.l #$100,$4(A2)
0002B29A <AmiBlitz3.ab3@12713>    BCS.w rongtypeerr
0002B29C <AmiBlitz3.ab3@12714>   MOVE.w D2,-(A7)
0002B2A0 <AmiBlitz3.ab3@12715>    BSR.w getparameter2
0002B2A4 <AmiBlitz3.ab3@12716>    BEQ.w syntaxerr
0002B2A6 <AmiBlitz3.ab3@12717>   ADDQ.w #4,A2
0002B2AA <AmiBlitz3.ab3@12718>    BSR.w findvariable2
0002B2AE <AmiBlitz3.ab3@12719>    BNE.w noofferr
0002B2B0 <AmiBlitz3.ab3@12720>   MOVE.w (A7)+,D2
0002B2B2 <AmiBlitz3.ab3@12721>   MOVEA.l A2,A3                                             ;pointer to offset
0002B2B6 <AmiBlitz3.ab3@12722>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B2B8 <AmiBlitz3.ab3@12723>   MOVEQ #0,d1
0002B2BC <AmiBlitz3.ab3@12724>   MOVE.w 4(a3),d1
0002B2BE <AmiBlitz3.ab3@12725>   ADD.l d1,d3
0002B2C4 <AmiBlitz3.ab3@12727>   MOVE.l A3,lastoffset_org
0002B2C8 <AmiBlitz3.ab3@12728>   CMP.w #$5B,D0
0002B2CC <AmiBlitz3.ab3@12729>    BNE.w calcvar__realdone
0002B2D2 <AmiBlitz3.ab3@12730>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B2D6 <AmiBlitz3.ab3@12731>    BEQ.w rongtypeerr
0002B2DA <AmiBlitz3.ab3@12732>    BSR.w JL_0_9004
0002B2DE <AmiBlitz3.ab3@12733>   MOVEM.l A2-A3,-(A7)
0002B2E4 <AmiBlitz3.ab3@12734>   MOVE.w varmode,-(A7)
0002B2EA <AmiBlitz3.ab3@12735>   MOVE.l lastoffset_org,-(A7)
0002B2F0 <AmiBlitz3.ab3@12736>   MOVE.w pusha2,D1
0002B2F4 <AmiBlitz3.ab3@12737>   BSR.w writeword
0002B2F6 <AmiBlitz3.ab3@12738>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B300 <AmiBlitz3.ab3@12739>   MOVE.l destpointer,deststore
0002B306 <AmiBlitz3.ab3@12740>   MOVE.l leftsidetype,-(a7)
0002B30C <AmiBlitz3.ab3@12741>   MOVE.l rightsidetype,-(a7)
0002B312 <AmiBlitz3.ab3@12743>   MOVE.w leftsideflagmask,-(a7)
0002B318 <AmiBlitz3.ab3@12744>   MOVE.w rightsideflagmask,-(a7)
0002B31E <AmiBlitz3.ab3@12745>   CLR.l rightsidetype
0002B324 <AmiBlitz3.ab3@12746>   CLR.l leftsidetype
0002B32A <AmiBlitz3.ab3@12747>   CLR.w leftsideflagmask
0002B330 <AmiBlitz3.ab3@12748>   CLR.w rightsideflagmask
0002B334 <AmiBlitz3.ab3@12749>   BSR.w eval
0002B33A <AmiBlitz3.ab3@12750>   MOVE.w (a7)+,rightsideflagmask
0002B340 <AmiBlitz3.ab3@12751>   MOVE.w (a7)+,leftsideflagmask
0002B346 <AmiBlitz3.ab3@12752>   MOVE.l (a7)+,rightsidetype
0002B34C <AmiBlitz3.ab3@12753>   MOVE.l (a7)+,leftsidetype
0002B350 <AmiBlitz3.ab3@12754>   CMP.w #$5D,D0
0002B354 <AmiBlitz3.ab3@12755>    BNE.w syntaxerr
0002B35A <AmiBlitz3.ab3@12756>   TST.b fast                                               ;a2,-(a7) array
0002B35E <AmiBlitz3.ab3@12757>   BEQ calcvar__loop0_l10
0002B364 <AmiBlitz3.ab3@12761>   MOVE.l destpointer,d1
0002B36A <AmiBlitz3.ab3@12762>   SUB.l deststore,d1
0002B370 <AmiBlitz3.ab3@12763>   CMP.l #4,d1
0002B374 <AmiBlitz3.ab3@12764>   BNE calcvar__loop0_l10
0002B37A <AmiBlitz3.ab3@12765>   MOVE.l destpointer,a4
0002B380 <AmiBlitz3.ab3@12766>   MOVE.l -4(a4),-6(a4)
0002B386 <AmiBlitz3.ab3@12767>   SUBQ.l #2,destpointer
0002B38C <AmiBlitz3.ab3@12768>   CLR.l imm_addr
0002B392 <AmiBlitz3.ab3@12769>   CLR.l load_var_addr
0002B396 <AmiBlitz3.ab3@12770> BRA calcvar__loop0_l20
0002B39C <AmiBlitz3.ab3@12773>   MOVE.w pulla2,D1
0002B3A0 <AmiBlitz3.ab3@12774>    BSR.w writeword
0002B3A6 <AmiBlitz3.ab3@12777>   MOVE.l (A7)+,lastoffset_org
0002B3AC <AmiBlitz3.ab3@12778>   MOVE.w (A7)+,varmode
0002B3B0 <AmiBlitz3.ab3@12779>   MOVEM.l (A7)+,A2-A3
0002B3B6 <AmiBlitz3.ab3@12785>   TST.w debugmode
0002B3BA <AmiBlitz3.ab3@12786>    BEQ.b calcvar__nobchk
0002B3BE <AmiBlitz3.ab3@12787>   MOVE.w $8(A3),D1
0002B3C2 <AmiBlitz3.ab3@12788>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002B3C8 <AmiBlitz3.ab3@12792>   MOVE.w D1,brchkcode+2
0002B3CE <AmiBlitz3.ab3@12793>   MOVE.w regnum,D1
0002B3D0 <AmiBlitz3.ab3@12794>   LSL.w #8,D1
0002B3D2 <AmiBlitz3.ab3@12795>   LSL.w #1,D1
0002B3D6 <AmiBlitz3.ab3@12796>   OR.w brchkcode0(PC),D1
0002B3DC <AmiBlitz3.ab3@12797>   MOVE.w D1,brchkcode
0002B3E0 <AmiBlitz3.ab3@12798>   MOVE.l brchkcode(PC),D1
0002B3E4 <AmiBlitz3.ab3@12799>    BSR.w writelong
0002B3E8 <AmiBlitz3.ab3@12800>   MOVE.l brchkcode+4(PC),D1
0002B3EC <AmiBlitz3.ab3@12801>    BSR.w writelong
0002B3F0 <AmiBlitz3.ab3@12802>   MOVE.w brchkcode+8(PC),D1
0002B3F4 <AmiBlitz3.ab3@12803>    BSR.w writeword
0002B3F6 <AmiBlitz3.ab3@12806>   MOVEQ.l #$04,D1
0002B3FC <AmiBlitz3.ab3@12807>   BTST #$0,$7(A3)
0002B400 <AmiBlitz3.ab3@12808>    BNE.w calcvar__dothemul
0002B404 <AmiBlitz3.ab3@12809>   MOVE.w $8(A2),D1
0002B408 <AmiBlitz3.ab3@12812>   BSR.w JL_0_B6DE
0002B40E <AmiBlitz3.ab3@12813>   MOVE.w addrega2,D1
0002B414 <AmiBlitz3.ab3@12814>   OR.w regnum,D1
0002B418 <AmiBlitz3.ab3@12815>    OR.w #$100,d1                                           ;>32kb types
0002B41C <AmiBlitz3.ab3@12816>    BSR.w writeword
0002B420 <AmiBlitz3.ab3@12817>    BSR.w get1bytemain
0002B422 <AmiBlitz3.ab3@12818>   MOVEQ.l #$00,D3
0002B426 <AmiBlitz3.ab3@12819>   MOVE.w #$8000,D2
0002B42C <AmiBlitz3.ab3@12822>   BTST #$0,$7(A3)
0002B430 <AmiBlitz3.ab3@12823>    BNE.w calcvar__pointer
0002B434 <AmiBlitz3.ab3@12824> BRA.w calcvar__loop0
0002B438 <AmiBlitz3.ab3@12828>  CMP.w #$5C,D0
0002B43C <AmiBlitz3.ab3@12829>    BNE.w calcvar__done3
0002B43E <AmiBlitz3.ab3@12830>   TST.w D3
0002B442 <AmiBlitz3.ab3@12831>    BNE.w calcvar__pskip
0002B448 <AmiBlitz3.ab3@12832>   MOVE.w movea0,D1
0002B44C <AmiBlitz3.ab3@12833>    BSR.w writeword
0002B450 <AmiBlitz3.ab3@12834> BRA.w calcvar__pmore
0002B456 <AmiBlitz3.ab3@12837>   MOVE.w D3,movea0a0+2
0002B45C <AmiBlitz3.ab3@12838>   MOVE.l movea0a0,D1
0002B460 <AmiBlitz3.ab3@12839>    BSR.w writelong
0002B466 <AmiBlitz3.ab3@12842>   BTST #$2,$7(A3)
0002B46A <AmiBlitz3.ab3@12843>    BEQ.w calcvar__loopml
0002B470 <AmiBlitz3.ab3@12844>   MOVE.l adda0a0,D1
0002B474 <AmiBlitz3.ab3@12845>    BSR.w writelong
0002B478 <AmiBlitz3.ab3@12846> BRA.w calcvar__loopml
0002B47C <AmiBlitz3.ab3@12849>   BSET #$E,D2
0002B482 <AmiBlitz3.ab3@12850>   BTST #$2,$7(A3)
0002B486 <AmiBlitz3.ab3@12851>    BNE.w calcvar__done
0002B48A <AmiBlitz3.ab3@12852>   BSET #$D,D2
0002B492 <AmiBlitz3.ab3@12855>   CMPI.l #$100,$4(A2)
0002B496 <AmiBlitz3.ab3@12856>    BCC.w calcvar__done2
0002B49A <AmiBlitz3.ab3@12857>   MOVE.b $7(A2),D2
0002B49E <AmiBlitz3.ab3@12860> BRA.w JL_0_9004
0002B4A2 <AmiBlitz3.ab3@12863>   MOVE.w $6(A2),D2
0002B4A6 <AmiBlitz3.ab3@12866>   MOVE.w $4(A3),D3
0002B4AC <AmiBlitz3.ab3@12867>   BTST #$0,$7(A3)
0002B4B0 <AmiBlitz3.ab3@12868>    BEQ.w calcvar__nopoint
0002B4B4 <AmiBlitz3.ab3@12869>   BSET #$E,D2
0002B4B6 <AmiBlitz3.ab3@12872> RTS
0002B4BA <AmiBlitz3.ab3@12876> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B4BE <AmiBlitz3.ab3@12877> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B4C0 <AmiBlitz3.ab3@12878>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002B4C2 <AmiBlitz3.ab3@12879>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B4C4 <AmiBlitz3.ab3@12880>              Dc.b $4E,$40                                  ;TRAP    #00
0002B4CA <AmiBlitz3.ab3@12888>   TST.w varmode
0002B4CE <AmiBlitz3.ab3@12889>    BEQ.w writeword
0002B4D2 <AmiBlitz3.ab3@12890>   BCLR #$0,D1
0002B4D6 <AmiBlitz3.ab3@12891> BRA.w writeword
0002B4DC <AmiBlitz3.ab3@12894>   TST.w varmode
0002B4E0 <AmiBlitz3.ab3@12895>    BEQ.w writeword
0002B4E4 <AmiBlitz3.ab3@12896>   BCLR #$9,D1
0002B4E8 <AmiBlitz3.ab3@12897> BRA.w writeword
0002B4EE <AmiBlitz3.ab3@12900>   TST.w proceduremode
0002B4F2 <AmiBlitz3.ab3@12901>    BEQ.w writelong
0002B4F6 <AmiBlitz3.ab3@12902>   BCLR #$19,D1
0002B4FA <AmiBlitz3.ab3@12903> BRA.w writelong
0002B500 <AmiBlitz3.ab3@12906>   TST.w varmode
0002B504 <AmiBlitz3.ab3@12907>   BEQ.w writelong
0002B508 <AmiBlitz3.ab3@12908>   BCLR #$10,D1
0002B50E <AmiBlitz3.ab3@12911>   ADDQ.l #1,destpointer
0002B516 <AmiBlitz3.ab3@12912>   BCLR #$0,destpointer+3
0002B51C <AmiBlitz3.ab3@12913>   MOVEA.l destpointer,A4
0002B522 <AmiBlitz3.ab3@12914>   CMPA.l destbufferend,A4
0002B526 <AmiBlitz3.ab3@12915>    BCC.w writeword__overa
0002B528 <AmiBlitz3.ab3@12916>   MOVE.l D1,(A4)+
0002B52E <AmiBlitz3.ab3@12919>   MOVE.l A4,destpointer
0002B532 <AmiBlitz3.ab3@12920>   CMPA.l bigpc(PC),A4
0002B536 <AmiBlitz3.ab3@12921>    BHI.w writeword__nbp
0002B538 <AmiBlitz3.ab3@12922> RTS
0002B540 <AmiBlitz3.ab3@12925>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B546 <AmiBlitz3.ab3@12926>   CLR.b fast
0002B54C <AmiBlitz3.ab3@12927>   CLR.b fpu
0002B552 <AmiBlitz3.ab3@12928>   CLR.b iee
0002B554 <AmiBlitz3.ab3@12929>   ADDQ.w #4,A4
0002B558 <AmiBlitz3.ab3@12930> BRA.w writeword__msa
0002B55E <AmiBlitz3.ab3@12936>   ADDQ.l #1,destpointer
0002B566 <AmiBlitz3.ab3@12937>   BCLR #$0,destpointer+3
0002B56C <AmiBlitz3.ab3@12938>   MOVEA.l destpointer,A4
0002B572 <AmiBlitz3.ab3@12939>   CMPA.l destbufferend,A4
0002B576 <AmiBlitz3.ab3@12940>    BCC.w writeword__over
0002B578 <AmiBlitz3.ab3@12941>   MOVE.w D1,(A4)+
0002B57E <AmiBlitz3.ab3@12944>   MOVE.l A4,destpointer
0002B582 <AmiBlitz3.ab3@12945>   CMPA.l bigpc(PC),A4
0002B586 <AmiBlitz3.ab3@12946>    BHI.w writeword__nbp
0002B588 <AmiBlitz3.ab3@12947> RTS
0002B58E <AmiBlitz3.ab3@12950>   ADDQ.l #1,destpointer
0002B596 <AmiBlitz3.ab3@12951>   BCLR #$0,destpointer+3
0002B59C <AmiBlitz3.ab3@12952>   MOVEA.l destpointer,A4
0002B5A2 <AmiBlitz3.ab3@12953>   CMPA.l destbufferend,A4
0002B5A6 <AmiBlitz3.ab3@12954>    BCC.w writeword__over
0002B5A8 <AmiBlitz3.ab3@12955>   MOVE.w D1,(A4)+
0002B5AE <AmiBlitz3.ab3@12956>   MOVE.l A4,destpointer
0002B5B2 <AmiBlitz3.ab3@12957>   CMPA.l bigpc(PC),A4
0002B5B6 <AmiBlitz3.ab3@12958>    BHI.w writeword__nbp
0002B5B8 <AmiBlitz3.ab3@12959> RTS
0002B5BE <AmiBlitz3.ab3@12962>   TST.w cfetchmode
0002B5C2 <AmiBlitz3.ab3@12963>   BNE.w writeword__nbp2
0002B5C8 <AmiBlitz3.ab3@12964>   MOVE.l A4,bigpc
0002B5CA <AmiBlitz3.ab3@12967> RTS
0002B5D2 <AmiBlitz3.ab3@12970>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B5D4 <AmiBlitz3.ab3@12971>   ADDQ.w #2,A4
0002B5DA <AmiBlitz3.ab3@12972>   CLR.b fast
0002B5E0 <AmiBlitz3.ab3@12973>   CLR.b fpu
0002B5E6 <AmiBlitz3.ab3@12974>   CLR.b iee
0002B5EA <AmiBlitz3.ab3@12975> BRA.w writeword__ms
0002B5F0 <AmiBlitz3.ab3@12979>   MOVEA.l destpointer,A4
0002B5F6 <AmiBlitz3.ab3@12980>   CMPA.l destbufferend,A4
0002B5FA <AmiBlitz3.ab3@12981>    BCC.w writebyte__over
0002B5FC <AmiBlitz3.ab3@12982>   MOVE.b D1,(A4)+
0002B602 <AmiBlitz3.ab3@12985>   MOVE.l A4,destpointer
0002B606 <AmiBlitz3.ab3@12986>   CMPA.l bigpc(PC),A4
0002B60A <AmiBlitz3.ab3@12987>    BHI.w writebyte__nbp
0002B60C <AmiBlitz3.ab3@12988> RTS
0002B612 <AmiBlitz3.ab3@12991>   TST.w cfetchmode
0002B616 <AmiBlitz3.ab3@12992>    BNE.w writebyte__nbp2
0002B61C <AmiBlitz3.ab3@12993>   MOVE.l A4,bigpc
0002B61E <AmiBlitz3.ab3@12996> RTS
0002B626 <AmiBlitz3.ab3@12999>   MOVE.w #-1,dontwrite
0002B628 <AmiBlitz3.ab3@13000>   ADDQ.w #1,A4
0002B62E <AmiBlitz3.ab3@13001>   CLR.b fast
0002B634 <AmiBlitz3.ab3@13002>   CLR.b fpu
0002B63A <AmiBlitz3.ab3@13003>   CLR.b iee
0002B63E <AmiBlitz3.ab3@13004> BRA.w writebyte__ms
0002B642 <AmiBlitz3.ab3@13007> bigpc:   Ds.l 1
0002B644 <AmiBlitz3.ab3@13011>   MOVE.w (A0)+,D1
0002B648 <AmiBlitz3.ab3@13012>   BSR.w writeword
0002B64A <AmiBlitz3.ab3@13015>     CMPA.l A1,A0
0002B64E <AmiBlitz3.ab3@13016>     BCC.w pokecode__done
0002B650 <AmiBlitz3.ab3@13017>       MOVE.w (A0)+,D1
0002B654 <AmiBlitz3.ab3@13018>       BSR.w writeword
0002B658 <AmiBlitz3.ab3@13019> BRA.w pokecode__loop
0002B65A <AmiBlitz3.ab3@13022> RTS
0002B65C <AmiBlitz3.ab3@13025>   MOVE.w (A0)+,D1
0002B660 <AmiBlitz3.ab3@13026>   BSR.w writeword
0002B662 <AmiBlitz3.ab3@13027>   CMPA.l A1,A0
0002B666 <AmiBlitz3.ab3@13028>   BCS.w pokecode2
0002B668 <AmiBlitz3.ab3@13029> RTS
0002B66E <AmiBlitz3.ab3@13035>   TST.b iniffcommand
0002B672 <AmiBlitz3.ab3@13036>   BEQ 'l1
0002B676 <AmiBlitz3.ab3@13037>     MOVE.w #$4880,D1
0002B67C <AmiBlitz3.ab3@13038>     OR.w regnum,D1
0002B680 <AmiBlitz3.ab3@13039>     BSR writeword
0002B682 <AmiBlitz3.ab3@13042> RTS
0002B686 <AmiBlitz3.ab3@13045>   BSR.w convert_byte_to_word
0002B68C <AmiBlitz3.ab3@13048>   TST.b iee
0002B690 <AmiBlitz3.ab3@13049>   BEQ 'old
0002B694 <AmiBlitz3.ab3@13050>   CMP.b #5,d2
0002B698 <AmiBlitz3.ab3@13051>   BEQ wtof
0002B69C <AmiBlitz3.ab3@13054>   MOVE.w #$48C0,D1
0002B6A2 <AmiBlitz3.ab3@13055>   OR.w regnum,D1
0002B6A6 <AmiBlitz3.ab3@13056> BRA.w writeword
0002B6A8 <AmiBlitz3.ab3@13059>   MOVEQ #0,d0
0002B6AE <AmiBlitz3.ab3@13060>   MOVE.w regnum,d0
0002B6B0 <AmiBlitz3.ab3@13061>   ASL.l #7,d0
0002B6B6 <AmiBlitz3.ab3@13062>   MOVE.l #$f2005000,d1
0002B6B8 <AmiBlitz3.ab3@13063>   OR.l d0,d1
0002B6BA <AmiBlitz3.ab3@13064>   ASL.l #1,d0
0002B6BC <AmiBlitz3.ab3@13065>   ASL.l #8,d0
0002B6BE <AmiBlitz3.ab3@13066>   OR.l d0,d1
0002B6C2 <AmiBlitz3.ab3@13067> BRA writelong
0002B6C6 <AmiBlitz3.ab3@13071>   BSR.w convert_byte_to_word
0002B6CA <AmiBlitz3.ab3@13074>   MOVE.w #$4840,D1
0002B6D0 <AmiBlitz3.ab3@13075>   OR.w regnum,D1
0002B6D4 <AmiBlitz3.ab3@13076>    BSR.w writeword
0002B6D8 <AmiBlitz3.ab3@13077>   MOVE.w #$4240,D1
0002B6DE <AmiBlitz3.ab3@13078>   OR.w regnum,D1
0002B6E2 <AmiBlitz3.ab3@13079> BRA.w writeword
0002B6E6 <AmiBlitz3.ab3@13083>   CMP.w #$ffdc,d1
0002B6EA <AmiBlitz3.ab3@13084>   BNE 'negfpu
0002B6EC <AmiBlitz3.ab3@13085>   MOVEQ #0,d0
0002B6F2 <AmiBlitz3.ab3@13086>   MOVE.w regnum,d0
0002B6F4 <AmiBlitz3.ab3@13087>   ASL.l #7,d0
0002B6FA <AmiBlitz3.ab3@13088>   MOVE.l #$f2004000,d1
0002B6FC <AmiBlitz3.ab3@13089>   OR.l d0,d1
0002B6FE <AmiBlitz3.ab3@13090>   ASL.l #1,d0
0002B700 <AmiBlitz3.ab3@13091>   ASL.l #8,d0
0002B702 <AmiBlitz3.ab3@13092>   OR.l d0,d1
0002B706 <AmiBlitz3.ab3@13093> BRA writelong
0002B708 <AmiBlitz3.ab3@13097>   MOVEQ #0,d1
0002B70E <AmiBlitz3.ab3@13098>   MOVE.w regnum,d1                                         ;fpu neg
0002B710 <AmiBlitz3.ab3@13099>   ASL.l #7,d1
0002B716 <AmiBlitz3.ab3@13100>   OR.l #$f200001a,d1
0002B718 <AmiBlitz3.ab3@13101>   MOVE.l d0,-(a7)
0002B71A <AmiBlitz3.ab3@13102>   MOVEQ #0,d0
0002B720 <AmiBlitz3.ab3@13103>   MOVE.w regnum,d0
0002B722 <AmiBlitz3.ab3@13104>   ASL.l #8,d0
0002B724 <AmiBlitz3.ab3@13105>   ASL.l #2,d0
0002B726 <AmiBlitz3.ab3@13106>   OR.l d0,d1
0002B728 <AmiBlitz3.ab3@13107>   MOVE.l (a7)+,d0
0002B72C <AmiBlitz3.ab3@13108> BRA writelong
0002B732 <AmiBlitz3.ab3@13111>    TST.b iee
0002B736 <AmiBlitz3.ab3@13112>    BNE wtof
0002B73A <AmiBlitz3.ab3@13113>    BSR.w convert_byte_to_long
0002B73E <AmiBlitz3.ab3@13116>    MOVE.w #$FFDC,D1
0002B744 <AmiBlitz3.ab3@13119>    TST.b iee
0002B748 <AmiBlitz3.ab3@13120>    BNE ltof
0002B74E <AmiBlitz3.ab3@13121>    MOVE.w D1,libjsr+2
0002B752 <AmiBlitz3.ab3@13122>    BSR.w JL_0_AD40
0002B754 <AmiBlitz3.ab3@13123>   MOVE.l D4,D1
0002B758 <AmiBlitz3.ab3@13124>    BSR.w JL_0_AD38
0002B75C <AmiBlitz3.ab3@13125>   MOVE.w #$C900,D1
0002B760 <AmiBlitz3.ab3@13126>    BSR.w Atokejsr
0002B764 <AmiBlitz3.ab3@13127>    BSR.w JL_0_A352
0002B76A <AmiBlitz3.ab3@13128>   MOVE.l libjsr,D1
0002B76E <AmiBlitz3.ab3@13129>    BSR.w writelong
0002B772 <AmiBlitz3.ab3@13130>    BSR.w JL_0_A36E
0002B774 <AmiBlitz3.ab3@13131>   MOVE.l D5,D1
0002B778 <AmiBlitz3.ab3@13132> BRA.w JL_0_AD38
0002B77A <AmiBlitz3.ab3@13135> RTS
0002B77E <AmiBlitz3.ab3@13138>   MOVE.w #$C317,D1
0002B784 <AmiBlitz3.ab3@13139>   TST.b typecheck
0002B788 <AmiBlitz3.ab3@13140>   BEQ 'l1
0002B78E <AmiBlitz3.ab3@13141>    TST.b notypecheck
0002B792 <AmiBlitz3.ab3@13142>    BNE 'l1
0002B798 <AmiBlitz3.ab3@13143>    TST.l lasttoken
0002B79E <AmiBlitz3.ab3@13150>   TST.b debugmode
0002B7A2 <AmiBlitz3.ab3@13151>    BEQ.w JL_0_9696
0002B7AA <AmiBlitz3.ab3@13152>   BTST #$7,overflowcheck
0002B7AE <AmiBlitz3.ab3@13153>    BEQ.w JL_0_9696
0002B7B4 <AmiBlitz3.ab3@13154>   TST.w cfetchmode
0002B7B8 <AmiBlitz3.ab3@13155>    BNE.w JL_0_9696
0002B7BE <AmiBlitz3.ab3@13156>   TST.w regnum
0002B7C2 <AmiBlitz3.ab3@13157>    BEQ.w JL_0_968A
0002B7C4 <AmiBlitz3.ab3@13158>   MOVE.w D1,-(A7)
0002B7C8 <AmiBlitz3.ab3@13159>   MOVE.w JL_0_9698(PC),D1
0002B7CC <AmiBlitz3.ab3@13160>    BSR.w writeword
0002B7D2 <AmiBlitz3.ab3@13161>   MOVE.w regnum,D1
0002B7D6 <AmiBlitz3.ab3@13162>   OR.w L_0_969C(PC),D1
0002B7DA <AmiBlitz3.ab3@13163>    BSR.w writeword
0002B7DC <AmiBlitz3.ab3@13164>   MOVE.w (A7)+,D1
0002B7E0 <AmiBlitz3.ab3@13165>    BSR.w JL_0_968A
0002B7E4 <AmiBlitz3.ab3@13166>   MOVE.w L_0_969A(PC),D1
0002B7E8 <AmiBlitz3.ab3@13167> BRA.w writeword
0002B7EC <AmiBlitz3.ab3@13171>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B7F0 <AmiBlitz3.ab3@13172>    BSR.w Atokejsr
0002B7F4 <AmiBlitz3.ab3@13173>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B7F6 <AmiBlitz3.ab3@13176> RTS
0002B7F8 <AmiBlitz3.ab3@13179>   MOVE.l D0,-(A7)
0002B7FA <AmiBlitz3.ab3@13182>   MOVE.l (A7)+,D0
0002B7FC <AmiBlitz3.ab3@13185>   MOVE.l D0,D0
0002B800 <AmiBlitz3.ab3@13188>   BSR.w convert_word_to_long
0002B806 <AmiBlitz3.ab3@13189>   TST.b iee
0002B80A <AmiBlitz3.ab3@13190>   BEQ 'old
0002B80E <AmiBlitz3.ab3@13191>   CMP.b #5,d2
0002B812 <AmiBlitz3.ab3@13192>   BNE 'old
0002B814 <AmiBlitz3.ab3@13193> RTS
0002B818 <AmiBlitz3.ab3@13196> BRA.w JL_0_9600
0002B81C <AmiBlitz3.ab3@13200>   MOVE.w #$C316,D1
0002B822 <AmiBlitz3.ab3@13201>   TST.b typecheck
0002B826 <AmiBlitz3.ab3@13202>   BEQ 'l1
0002B82C <AmiBlitz3.ab3@13203>   TST.b peekaddrsize
0002B830 <AmiBlitz3.ab3@13204>   BNE 'l1
0002B836 <AmiBlitz3.ab3@13205>   TST.b notypecheck
0002B83A <AmiBlitz3.ab3@13206>   BNE 'l1
0002B840 <AmiBlitz3.ab3@13207>   TST.l lasttoken
0002B844 <AmiBlitz3.ab3@13213> BRA.w JL_0_963A
0002B848 <AmiBlitz3.ab3@13217>   MOVE.w #$C318,D1
0002B84E <AmiBlitz3.ab3@13218>   TST.b typecheck
0002B852 <AmiBlitz3.ab3@13219>   BEQ 'l1
0002B858 <AmiBlitz3.ab3@13220>   TST.b peekaddrsize
0002B85C <AmiBlitz3.ab3@13221>   BNE 'l1
0002B862 <AmiBlitz3.ab3@13222>   TST.b notypecheck
0002B866 <AmiBlitz3.ab3@13223>   BNE 'l1
0002B86C <AmiBlitz3.ab3@13224>   TST.l lasttoken
0002B870 <AmiBlitz3.ab3@13230> BRA.w JL_0_963A
0002B874 <AmiBlitz3.ab3@13234>   MOVE.w #$C318,D1
0002B87A <AmiBlitz3.ab3@13235>   TST.b typecheck
0002B87E <AmiBlitz3.ab3@13236>   BEQ 'l1
0002B884 <AmiBlitz3.ab3@13237>   TST.b notypecheck
0002B888 <AmiBlitz3.ab3@13238>   BNE 'l1
0002B88E <AmiBlitz3.ab3@13239>   TST.l lasttoken
0002B892 <AmiBlitz3.ab3@13245>   BSR.w JL_0_963A
0002B896 <AmiBlitz3.ab3@13246> BRA.w convert_word_to_quick
0002B89A <AmiBlitz3.ab3@13250> BRA.w JL_0_9600
0002B89C <AmiBlitz3.ab3@13254> RTS
0002B8A0 <AmiBlitz3.ab3@13258>   MOVE.w #$C319,D1
0002B8A6 <AmiBlitz3.ab3@13259>   TST.b typecheck
0002B8AA <AmiBlitz3.ab3@13260>   BEQ 'l1
0002B8B0 <AmiBlitz3.ab3@13261>   TST.b notypecheck
0002B8B4 <AmiBlitz3.ab3@13262>   BNE 'l1
0002B8BA <AmiBlitz3.ab3@13263>   TST.l lasttoken
0002B8BE <AmiBlitz3.ab3@13270>   BSR.w JL_0_963A
0002B8C2 <AmiBlitz3.ab3@13273>   MOVE.w #$4240,D1
0002B8C8 <AmiBlitz3.ab3@13274>   OR.w regnum,D1
0002B8CC <AmiBlitz3.ab3@13275>   BSR.w writeword
0002B8D0 <AmiBlitz3.ab3@13276>   MOVE.w #$4840,D1
0002B8D6 <AmiBlitz3.ab3@13277>   OR.w regnum,D1
0002B8DA <AmiBlitz3.ab3@13278> BRA.w writeword
0002B8DE <AmiBlitz3.ab3@13282> BRA.w JL_0_96D0
0002B8E2 <AmiBlitz3.ab3@13286>   BSR.w JL_0_96D0
0002B8E6 <AmiBlitz3.ab3@13287> BRA.w convert_word_to_long
0002B8E8 <AmiBlitz3.ab3@13292>   MOVEQ #0,d0
0002B8EE <AmiBlitz3.ab3@13293>   MOVE.w regnum,d0
0002B8F0 <AmiBlitz3.ab3@13294>   ASL.l #7,d0
0002B8F6 <AmiBlitz3.ab3@13295>   MOVE.l #$f2004000,d1
0002B8F8 <AmiBlitz3.ab3@13296>   OR.l d0,d1
0002B8FA <AmiBlitz3.ab3@13297>   ASL.l #1,d0
0002B8FC <AmiBlitz3.ab3@13298>   ASL.l #8,d0
0002B8FE <AmiBlitz3.ab3@13299>   OR.l d0,d1
0002B902 <AmiBlitz3.ab3@13300>   BSR writelong
0002B908 <AmiBlitz3.ab3@13301>   MOVE.w regnum,d0
0002B90A <AmiBlitz3.ab3@13302>   ASL.l #7,d0
0002B910 <AmiBlitz3.ab3@13303>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B912 <AmiBlitz3.ab3@13304>   OR.w d0,d1
0002B916 <AmiBlitz3.ab3@13305>   BSR writelong
0002B91C <AmiBlitz3.ab3@13306>   MOVE.l #$37800000,d1
0002B920 <AmiBlitz3.ab3@13307>   BSR writelong
0002B922 <AmiBlitz3.ab3@13308> RTS
0002B928 <AmiBlitz3.ab3@13312>   TST.b iee
0002B92C <AmiBlitz3.ab3@13313>   BNE qtof
0002B930 <AmiBlitz3.ab3@13314>   MOVE.w #$D300,D1
0002B932 <AmiBlitz3.ab3@13317>   MOVE.w D1,-(A7)
0002B936 <AmiBlitz3.ab3@13318>    BSR.w JL_0_AD40
0002B938 <AmiBlitz3.ab3@13319>   MOVE.l D4,D1
0002B93C <AmiBlitz3.ab3@13320>    BSR.w JL_0_AD38
0002B940 <AmiBlitz3.ab3@13321>    BSR.w JL_0_A352
0002B942 <AmiBlitz3.ab3@13322>   MOVE.w (A7)+,D1
0002B946 <AmiBlitz3.ab3@13323>    BSR.w Atokejsr
0002B94A <AmiBlitz3.ab3@13324>    BSR.w JL_0_A36E
0002B94C <AmiBlitz3.ab3@13325>   MOVE.l D5,D1
0002B950 <AmiBlitz3.ab3@13326> BRA.w JL_0_AD38
0002B952 <AmiBlitz3.ab3@13330> RTS
0002B958 <AmiBlitz3.ab3@13333>   TST.b typecheck
0002B95C <AmiBlitz3.ab3@13334>   BEQ 'l1
0002B962 <AmiBlitz3.ab3@13335>   TST.b notypecheck
0002B966 <AmiBlitz3.ab3@13336>   BNE 'l1
0002B96C <AmiBlitz3.ab3@13337>   TST.l lasttoken
0002B972 <AmiBlitz3.ab3@13342>   TST.b iee
0002B976 <AmiBlitz3.ab3@13343>   BNE ftol
0002B97A <AmiBlitz3.ab3@13344>   MOVE.w #$C31A,D1
0002B97E <AmiBlitz3.ab3@13345>   BSR.w JL_0_963A
0002B982 <AmiBlitz3.ab3@13346>   BSR.w JL_0_974A
0002B986 <AmiBlitz3.ab3@13347> BRA.w convert_long_to_byte
0002B988 <AmiBlitz3.ab3@13351> RTS
0002B98E <AmiBlitz3.ab3@13354>   TST.b typecheck
0002B992 <AmiBlitz3.ab3@13355>   BEQ 'l1
0002B998 <AmiBlitz3.ab3@13356>   TST.b notypecheck
0002B99C <AmiBlitz3.ab3@13357>   BNE 'l1
0002B9A2 <AmiBlitz3.ab3@13358>   TST.l lasttoken
0002B9A8 <AmiBlitz3.ab3@13363>   TST.b iee
0002B9AC <AmiBlitz3.ab3@13364>   BNE ftol
0002B9B0 <AmiBlitz3.ab3@13365>   MOVE.w #$C31B,D1
0002B9B4 <AmiBlitz3.ab3@13366>   BSR.w JL_0_963A
0002B9B8 <AmiBlitz3.ab3@13367>   BSR.w JL_0_974A
0002B9BC <AmiBlitz3.ab3@13368> BRA.w convert_long_to_word
0002B9BE <AmiBlitz3.ab3@13372> RTS
0002B9C4 <AmiBlitz3.ab3@13375>   TST.b iee
0002B9C8 <AmiBlitz3.ab3@13376>   BNE ftol
0002B9CC <AmiBlitz3.ab3@13377>   MOVE.w #$C31C,D1
0002B9D0 <AmiBlitz3.ab3@13378>   BSR.w JL_0_963A
0002B9D4 <AmiBlitz3.ab3@13381>   MOVE.w #$FFE2,D1
0002B9D8 <AmiBlitz3.ab3@13382> BRA.w JL_0_9604
0002B9DA <AmiBlitz3.ab3@13385>   MOVE.l d0,-(a7)
0002B9DC <AmiBlitz3.ab3@13386>   MOVEQ #0,d0
0002B9E2 <AmiBlitz3.ab3@13387>   MOVE.w regnum,d0
0002B9E4 <AmiBlitz3.ab3@13388>   ASL.l #7,d0
0002B9EA <AmiBlitz3.ab3@13389>   MOVE.l #$f2006000,d1
0002B9EC <AmiBlitz3.ab3@13390>   OR.l d0,d1
0002B9EE <AmiBlitz3.ab3@13391>   ASL.l #1,d0
0002B9F0 <AmiBlitz3.ab3@13392>   ASL.l #8,d0
0002B9F2 <AmiBlitz3.ab3@13393>   OR.l d0,d1
0002B9F4 <AmiBlitz3.ab3@13394>   MOVE.l (a7)+,d0
0002B9F8 <AmiBlitz3.ab3@13395> BRA writelong
0002B9FA <AmiBlitz3.ab3@13399>   MOVE.l d0,-(a7)
0002B9FC <AmiBlitz3.ab3@13400>   MOVEQ #0,d0
0002BA02 <AmiBlitz3.ab3@13401>   MOVE.l #$f23c4023,d1
0002BA08 <AmiBlitz3.ab3@13402>   MOVE.w regnum,d0
0002BA0A <AmiBlitz3.ab3@13403>   ASL.l #7,d0
0002BA0C <AmiBlitz3.ab3@13404>   OR.l d0,d1
0002BA10 <AmiBlitz3.ab3@13405>   BSR writelong
0002BA16 <AmiBlitz3.ab3@13406>   MOVE.l #$00010000,d1
0002BA1A <AmiBlitz3.ab3@13407>   BSR writelong
0002BA20 <AmiBlitz3.ab3@13408>   MOVE.w regnum,d0
0002BA22 <AmiBlitz3.ab3@13409>   ASL.l #7,d0
0002BA28 <AmiBlitz3.ab3@13410>   MOVE.l #$f2006000,d1
0002BA2A <AmiBlitz3.ab3@13411>   OR.l d0,d1
0002BA2C <AmiBlitz3.ab3@13412>   ASL.l #1,d0
0002BA2E <AmiBlitz3.ab3@13413>   ASL.l #8,d0
0002BA30 <AmiBlitz3.ab3@13414>   OR.l d0,d1
0002BA34 <AmiBlitz3.ab3@13415>   BSR writelong
0002BA36 <AmiBlitz3.ab3@13416>   MOVE.l (a7)+,d0
0002BA38 <AmiBlitz3.ab3@13417> RTS
0002BA3A <AmiBlitz3.ab3@13421> RTS
0002BA40 <AmiBlitz3.ab3@13425>   TST.b iee
0002BA44 <AmiBlitz3.ab3@13426>   BNE ftoq
0002BA48 <AmiBlitz3.ab3@13427>   MOVE.w #$C31B,D1
0002BA4C <AmiBlitz3.ab3@13428>   BSR.w JL_0_963A
0002BA50 <AmiBlitz3.ab3@13429>   MOVE.w #$D301,D1
0002BA54 <AmiBlitz3.ab3@13430> BRA.w JL_0_96FC
0002BA5A <AmiBlitz3.ab3@13436>    TST.b blitzparloop
0002BA5E <AmiBlitz3.ab3@13437>    BNE 'l1
0002BA64 <AmiBlitz3.ab3@13438>    TST.b funcparloop
0002BA68 <AmiBlitz3.ab3@13439>    BNE 'l1
0002BA6C <AmiBlitz3.ab3@13440>    BRA error_convert_types
0002BA74 <AmiBlitz3.ab3@13443>   CMP.b #2,optistring
0002BA78 <AmiBlitz3.ab3@13444>   BEQ JLrts
0002BA7E <AmiBlitz3.ab3@13445>   MOVE.w stol,D1
0002BA82 <AmiBlitz3.ab3@13446>   BSR.w writeword
0002BA8A <AmiBlitz3.ab3@13447>   CMPI.w #$2,sbgot
0002BA8E <AmiBlitz3.ab3@13448>   BCS.w sbtolong
0002BA92 <AmiBlitz3.ab3@13449>   MOVE.w ceos(PC),D1
0002BA96 <AmiBlitz3.ab3@13450>   BSR.w writeword
0002BA9C <AmiBlitz3.ab3@13453>   MOVE.w regnum,D1
0002BA9E <AmiBlitz3.ab3@13454>   LSL.w #8,D1
0002BAA0 <AmiBlitz3.ab3@13455>   LSL.w #1,D1
0002BAA8 <AmiBlitz3.ab3@13456>   CMPI.w #$2,sbgot
0002BAAC <AmiBlitz3.ab3@13457>   BCS.w JL_0_98E8
0002BAB2 <AmiBlitz3.ab3@13458>   MOVE.w a2offset,D3
0002BAB8 <AmiBlitz3.ab3@13459>   SUB.w thisstuse,D3
0002BABC <AmiBlitz3.ab3@13460>   CMP.w #$6,D3
0002BAC0 <AmiBlitz3.ab3@13461>   BNE.w JL_0_98D4b
0002BAC6 <AmiBlitz3.ab3@13462>   OR.w movestst2,D1
0002BACA <AmiBlitz3.ab3@13463>   BSR.w writeword
0002BAD0 <AmiBlitz3.ab3@13464>   LEA movestst2+2,A0
0002BAD6 <AmiBlitz3.ab3@13465>   LEA movestst2f,A1
0002BADA <AmiBlitz3.ab3@13466> BRA.w pokecode2
0002BAE0 <AmiBlitz3.ab3@13470>   OR.w movea7dn,D1
0002BAE4 <AmiBlitz3.ab3@13471>   BSR.w writeword
0002BAEA <AmiBlitz3.ab3@13472>   MOVE.l #0,D1
0002BAEE <AmiBlitz3.ab3@13473> BRA.w writeword
0002BAF4 <AmiBlitz3.ab3@13477>   ADDQ.w #1,fuckpos
0002BAF8 <AmiBlitz3.ab3@13478>   BSR.w writeconvertcode
0002BAFE <AmiBlitz3.ab3@13479>   SUBQ.w #1,fuckpos
0002BB00 <AmiBlitz3.ab3@13481> RTS
0002BB02 <AmiBlitz3.ab3@13485>   MOVE.w D3,D1
0002BB06 <AmiBlitz3.ab3@13486>   CMP.w #7,d1
0002BB0A <AmiBlitz3.ab3@13487>   BLE 'ok
0002BB10 <AmiBlitz3.ab3@13488>   JMP errorinternalconvert
0002BB12 <AmiBlitz3.ab3@13489> 'ok  SUBQ.w #1,D1
0002BB16 <AmiBlitz3.ab3@13490>   MULU #$7,D1
0002BB18 <AmiBlitz3.ab3@13491>   ADD.w D2,D1
0002BB1A <AmiBlitz3.ab3@13492>   SUBQ.w #1,D1
0002BB1C <AmiBlitz3.ab3@13493>   LSL.w #2,D1
0002BB22 <AmiBlitz3.ab3@13494>   LEA convtable,A0
0002BB26 <AmiBlitz3.ab3@13495>   MOVE.l $0(A0,D1.W),D1
0002BB2A <AmiBlitz3.ab3@13496>   BEQ.w JL_0_97A2
0002BB2C <AmiBlitz3.ab3@13497>     MOVEA.l D1,A0
0002BB30 <AmiBlitz3.ab3@13498>     CMP.b #$ff,d3
0002BB34 <AmiBlitz3.ab3@13499>     BEQ JL_0_97A2
0002BB36 <AmiBlitz3.ab3@13500> JMP (A0)
0002BB38 <AmiBlitz3.ab3@13503> RTS
0002BB3C <AmiBlitz3.ab3@13506> usedfrom:  Ds.l 1
0002BB40 <AmiBlitz3.ab3@13513>   CMP.w #"\",D0
0002BB44 <AmiBlitz3.ab3@13514>   BNE.w JL_0_97C2
0002BB48 <AmiBlitz3.ab3@13515>     CMP.b #"\",(a5)
0002BB4C <AmiBlitz3.ab3@13516>     BNE 'first
0002BB52 <AmiBlitz3.ab3@13517>       MOVE.l A5,usedfrom
0002BB58 <AmiBlitz3.ab3@13518>       LEA path2,A5
0002BB5C <AmiBlitz3.ab3@13519> BRA 'g1
0002BB5E <AmiBlitz3.ab3@13522>     SUBQ.w #1,A5
0002BB64 <AmiBlitz3.ab3@13523>   MOVE.l A5,usedfrom
0002BB6A <AmiBlitz3.ab3@13524>   LEA usedpath,A5                                          ;read path
0002BB6E <AmiBlitz3.ab3@13527>   BSR.w get1bytemain
0002BB74 <AmiBlitz3.ab3@13530>   CLR.w flagmask
0002BB78 <AmiBlitz3.ab3@13531>   CMP.w #$2A,D0
0002BB7C <AmiBlitz3.ab3@13532>    BNE.w JL_0_983A
0002BB84 <AmiBlitz3.ab3@13533>   MOVE.w #$0001,flagmask
0002BB88 <AmiBlitz3.ab3@13535>    BSR.w getparameter2
0002BB8C <AmiBlitz3.ab3@13538>    BEQ.w syntaxerr
0002BB90 <AmiBlitz3.ab3@13539>   CMP.w #$28,D0
0002BB94 <AmiBlitz3.ab3@13540>    BEQ.w JL_0_9830
0002BB98 <AmiBlitz3.ab3@13541>   CMP.w #$2E,D0
0002BB9C <AmiBlitz3.ab3@13542>    BEQ.w JL_0_980C
0002BBA0 <AmiBlitz3.ab3@13543>   CMP.w #$24,D0
0002BBA4 <AmiBlitz3.ab3@13544>    BNE.w JL_0_9838
0002BBAC <AmiBlitz3.ab3@13545>   ORI.w #$8,flagmask
0002BBB0 <AmiBlitz3.ab3@13546>    BSR.w storeloc
0002BBB4 <AmiBlitz3.ab3@13547>    BSR.w get1bytemain
0002BBB8 <AmiBlitz3.ab3@13548> BRA.w JL_0_9822
0002BBBC <AmiBlitz3.ab3@13552>   BSR.w storeloc
0002BBBE <AmiBlitz3.ab3@13553>   MOVE.w D2,-(A7)
0002BBC4 <AmiBlitz3.ab3@13554>   LEA namebuff2,A1
0002BBC8 <AmiBlitz3.ab3@13555>    BSR.w makename3
0002BBCC <AmiBlitz3.ab3@13556>    BEQ.w syntaxerr
0002BBCE <AmiBlitz3.ab3@13557>   MOVE.w (A7)+,D2
0002BBD0 <AmiBlitz3.ab3@13560>    MOVE.w D0,D1
0002BBD4 <AmiBlitz3.ab3@13561>    BSR.w resloc
0002BBD8 <AmiBlitz3.ab3@13562>    CMP.w #$28,D1
0002BBDC <AmiBlitz3.ab3@13563>    BNE.w JL_0_9838
0002BBE4 <AmiBlitz3.ab3@13566>   ORI.w #$2,flagmask
0002BBE6 <AmiBlitz3.ab3@13569> RTS
0002BBEA <AmiBlitz3.ab3@13573>   CMP.w #$40,D0
0002BBEE <AmiBlitz3.ab3@13574>    BNE.w JL_0_984E
0002BBF6 <AmiBlitz3.ab3@13575>   MOVE.w #$0005,flagmask
0002BBFA <AmiBlitz3.ab3@13576> BRA.w JL_0_97D8
0002BBFE <AmiBlitz3.ab3@13580>   BSR.w makename2
0002BC02 <AmiBlitz3.ab3@13581> BRA.w JL_0_97DC
0002BC06 <AmiBlitz3.ab3@13585>   MOVE.w #$FED3,D1
0002BC0A <AmiBlitz3.ab3@13586>    BSR.w uselib
0002BC10 <AmiBlitz3.ab3@13587>   LEA pusha3,A0
0002BC16 <AmiBlitz3.ab3@13588>   LEA pusha3f,A1
0002BC1A <AmiBlitz3.ab3@13589> BRA.w pokecode
0002BC1E <AmiBlitz3.ab3@13593>   MOVE.w #$FED3,D1
0002BC22 <AmiBlitz3.ab3@13594>    BSR.w uselib
0002BC28 <AmiBlitz3.ab3@13595>   LEA pulla3,A0
0002BC2E <AmiBlitz3.ab3@13596>   LEA pulla3f,A1
0002BC32 <AmiBlitz3.ab3@13597> BRA.w pokecode
0002BC34 <AmiBlitz3.ab3@13601> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002BC3C <AmiBlitz3.ab3@13606>     CMP.b #2,optistring
0002BC40 <AmiBlitz3.ab3@13607>    BEQ 'l10
0002BC44 <AmiBlitz3.ab3@13608>    MOVE.w ceos(PC),D1
0002BC48 <AmiBlitz3.ab3@13609>    BSR.w writeword                                         ;clr.b (a3)
0002BC4E <AmiBlitz3.ab3@13612>   MOVE.w regnum,D1
0002BC50 <AmiBlitz3.ab3@13613>   LSL.w #8,D1
0002BC52 <AmiBlitz3.ab3@13614>   LSL.w #1,D1
0002BC5A <AmiBlitz3.ab3@13615>   CMPI.w #$2,sbgot
0002BC5E <AmiBlitz3.ab3@13616>    BCS.w JL_0_98E8
0002BC64 <AmiBlitz3.ab3@13617>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002BC6A <AmiBlitz3.ab3@13618>   SUB.w thisstuse,D3
0002BC6E <AmiBlitz3.ab3@13619>   CMP.w #$6,D3
0002BC72 <AmiBlitz3.ab3@13620>    BNE.w JL_0_98D4
0002BC78 <AmiBlitz3.ab3@13621>   OR.w movestst2,D1
0002BC7C <AmiBlitz3.ab3@13622>    BSR.w writeword
0002BC82 <AmiBlitz3.ab3@13623>   LEA movestst2+2,A0
0002BC88 <AmiBlitz3.ab3@13624>   LEA movestst2f,A1
0002BC8C <AmiBlitz3.ab3@13625> BRA.w pokecode2
0002BC92 <AmiBlitz3.ab3@13629>    OR.w movea7dn,D1
0002BC96 <AmiBlitz3.ab3@13630>    BSR.w writeword
0002BC9C <AmiBlitz3.ab3@13631>   MOVE.l movea7dn+2,D1
0002BCA0 <AmiBlitz3.ab3@13643>   BSR writelong
0002BCA8 <AmiBlitz3.ab3@13646>    CMP.w #6,regnum
0002BCAC <AmiBlitz3.ab3@13647>    BEQ 'l1
0002BCB2 <AmiBlitz3.ab3@13648>    TST.w stackpar
0002BCB6 <AmiBlitz3.ab3@13649>    BNE 'l1
0002BCBC <AmiBlitz3.ab3@13650>    TST.b funcparloop
0002BCC0 <AmiBlitz3.ab3@13651>    BEQ 'l1
0002BCC6 <AmiBlitz3.ab3@13652>    MOVE.l #$48780000,d1
0002BCCA <AmiBlitz3.ab3@13653>    BSR writelong
0002BCCC <AmiBlitz3.ab3@13657> RTS
0002BCCE <AmiBlitz3.ab3@13662>      MOVE.l d1,-(a7)
0002BCD6 <AmiBlitz3.ab3@13663>      CMP.w #6,regnum
0002BCDA <AmiBlitz3.ab3@13664>      BEQ 'l1
0002BCE0 <AmiBlitz3.ab3@13665>      TST.w stackpar
0002BCE4 <AmiBlitz3.ab3@13666>      BNE 'l1
0002BCEA <AmiBlitz3.ab3@13667>      TST.b funcparloop
0002BCEE <AmiBlitz3.ab3@13668>      BEQ 'l1
0002BCF4 <AmiBlitz3.ab3@13669>      MOVE.l #$48780000,d1
0002BCF8 <AmiBlitz3.ab3@13670>      BSR writelong
0002BCFA <AmiBlitz3.ab3@13673>      MOVE.l (a7)+,d1
0002BD00 <AmiBlitz3.ab3@13675>    OR.w movestdn,D1
0002BD04 <AmiBlitz3.ab3@13676>    BSR.w writeword
0002BD08 <AmiBlitz3.ab3@13677>   MOVE.w #$FED3,D1
0002BD0C <AmiBlitz3.ab3@13678>    BSR.w uselib
0002BD10 <AmiBlitz3.ab3@13679>   MOVE.w $A(A1),D1
0002BD14 <AmiBlitz3.ab3@13680> BRA.w writeword
0002BD16 <AmiBlitz3.ab3@13683> unknown:    Ds.w 1
0002BD1C <AmiBlitz3.ab3@13686> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002BD20 <AmiBlitz3.ab3@13687> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002BD26 <AmiBlitz3.ab3@13688>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002BD2C <AmiBlitz3.ab3@13694>   TST.b debugmode
0002BD30 <AmiBlitz3.ab3@13695>   BEQ.w sharreval
0002BD34 <AmiBlitz3.ab3@13696>  BSR.w arreval
0002BD38 <AmiBlitz3.ab3@13699>   MOVE.w somecode(PC),D1
0002BD3E <AmiBlitz3.ab3@13700>   OR.w regnum,D1
0002BD42 <AmiBlitz3.ab3@13701>    BSR.w writeword
0002BD44 <AmiBlitz3.ab3@13702>   MOVEQ.l #$01,D1
0002BD46 <AmiBlitz3.ab3@13703>   SWAP D1
0002BD4A <AmiBlitz3.ab3@13704>    BSR.w writelong
0002BD4E <AmiBlitz3.ab3@13705>   MOVE.l somecode2(PC),D1
0002BD52 <AmiBlitz3.ab3@13706>    BSR.w writelong
0002BD56 <AmiBlitz3.ab3@13707>   MOVE.w #$C309,D1
0002BD5A <AmiBlitz3.ab3@13708> BRA.w Atokejsr
0002BD5C <AmiBlitz3.ab3@13712>   MOVEQ.l #$02,D2
0002BD5E <AmiBlitz3.ab3@13713>   MOVEQ.l #$00,D1
0002BD60 <AmiBlitz3.ab3@13714>   MOVEQ.l #$00,D3
0002BD64 <AmiBlitz3.ab3@13715> BRA.w maineval2
0002BD66 <AmiBlitz3.ab3@13719>   MOVEQ.l #$03,D2
0002BD68 <AmiBlitz3.ab3@13720>   MOVEQ.l #$00,D1
0002BD6A <AmiBlitz3.ab3@13721>   MOVEQ.l #$00,D3
0002BD70 <AmiBlitz3.ab3@13722>   MOVE.b notypecheck,-(a7)
0002BD78 <AmiBlitz3.ab3@13723>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002BD7E <AmiBlitz3.ab3@13724>   JSR maineval2
0002BD84 <AmiBlitz3.ab3@13725>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002BD86 <AmiBlitz3.ab3@13726>   RTS
0002BD90 <AmiBlitz3.ab3@13730>   MOVE.w oldqflag,instringon
0002BD96 <AmiBlitz3.ab3@13731>   MOVEA.l lastsourcepos,A5
0002BD98 <AmiBlitz3.ab3@13732>   MOVEQ.l #-$01,D1
0002BD9A <AmiBlitz3.ab3@13733>   MOVEQ.l #-$01,D3
0002BD9E <AmiBlitz3.ab3@13734> BRA.w peval
0002BDA8 <AmiBlitz3.ab3@13739>   MOVE.w oldqflag,instringon
0002BDAE <AmiBlitz3.ab3@13740>   MOVEA.l lastsourcepos,A5
0002BDB0 <AmiBlitz3.ab3@13743>   MOVEQ.l #-$01,D1
0002BDB2 <AmiBlitz3.ab3@13744>   MOVEQ.l #$00,D3
0002BDB8 <AmiBlitz3.ab3@13745>   MOVE.l leftsidetype,-(a7)
0002BDBE <AmiBlitz3.ab3@13746>   MOVE.l rightsidetype,-(a7)
0002BDC4 <AmiBlitz3.ab3@13747>   MOVE.w leftsideflagmask,-(a7)
0002BDCA <AmiBlitz3.ab3@13748>   MOVE.w rightsideflagmask,-(a7)
0002BDD0 <AmiBlitz3.ab3@13749>   CLR.l leftsidetype
0002BDD6 <AmiBlitz3.ab3@13750>   CLR.l rightsidetype
0002BDDC <AmiBlitz3.ab3@13751>   CLR.w leftsideflagmask
0002BDE2 <AmiBlitz3.ab3@13752>   CLR.w rightsideflagmask
0002BDE8 <AmiBlitz3.ab3@13753>   JSR maineval
0002BDEE <AmiBlitz3.ab3@13754>   MOVE.w (a7)+,rightsideflagmask
0002BDF4 <AmiBlitz3.ab3@13755>   MOVE.w (a7)+,leftsideflagmask
0002BDFA <AmiBlitz3.ab3@13756>   MOVE.l (a7)+,rightsidetype
0002BE00 <AmiBlitz3.ab3@13757>   MOVE.l (a7)+,leftsidetype
0002BE02 <AmiBlitz3.ab3@13758>   RTS
0002BE0C <AmiBlitz3.ab3@13762>   MOVE.w oldqflag,instringon
0002BE12 <AmiBlitz3.ab3@13763>   MOVEA.l lastsourcepos,A5
0002BE14 <AmiBlitz3.ab3@13764>   MOVEQ.l #$00,D1
0002BE16 <AmiBlitz3.ab3@13765>   MOVEQ.l #-$01,D3
0002BE1A <AmiBlitz3.ab3@13766> BRA.w maineval
0002BE1C <AmiBlitz3.ab3@13770>   MOVEQ.l #$01,D1
0002BE1E <AmiBlitz3.ab3@13771>   MOVEQ.l #-$01,D3
0002BE22 <AmiBlitz3.ab3@13772> BRA.w maineval
0002BE2C <AmiBlitz3.ab3@13777>   MOVE.w oldqflag,instringon
0002BE32 <AmiBlitz3.ab3@13778>   MOVEA.l lastsourcepos,A5
0002BE34 <AmiBlitz3.ab3@13781>   MOVEQ.l #$00,D1                                        ;no push
0002BE36 <AmiBlitz3.ab3@13782>   MOVEQ.l #$00,D3
0002BE3E <AmiBlitz3.ab3@13803>    CMPI.w #$6,regnum
0002BE42 <AmiBlitz3.ab3@13804>    BCS.w maineval2
0002BE44 <AmiBlitz3.ab3@13805>    MOVEQ #0,d1
0002BE4A <AmiBlitz3.ab3@13806>    MOVE.l destpointer,a4
0002BE50 <AmiBlitz3.ab3@13808>    CMPA.l destbufferend,A4
0002BE54 <AmiBlitz3.ab3@13809>    BCC.w maineval__l2
0002BE5A <AmiBlitz3.ab3@13811>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002BE5E <AmiBlitz3.ab3@13813>    BNE maineval__l2
0002BE62 <AmiBlitz3.ab3@13817> BRA maineval__l1
0002BE64 <AmiBlitz3.ab3@13820>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002BE6C <AmiBlitz3.ab3@13823>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002BE72 <AmiBlitz3.ab3@13826>   MOVE.w thisstuse,-(A7)
0002BE7C <AmiBlitz3.ab3@13827>   MOVE.w a2offset,thisstuse
0002BE82 <AmiBlitz3.ab3@13828>   MOVE.w stackpar,-(A7)
0002BE88 <AmiBlitz3.ab3@13829>   MOVE.w D1,stackpar
0002BE8E <AmiBlitz3.ab3@13830>   MOVE.w sbgot,-(A7)
0002BE94 <AmiBlitz3.ab3@13831>   CLR.w sbgot
0002BE98 <AmiBlitz3.ab3@13832>   MOVE.w unknown(PC),-(A7)
0002BE9E <AmiBlitz3.ab3@13833>   MOVE.w D3,unknown
0002BEA0 <AmiBlitz3.ab3@13834>   MOVE.w D2,-(a7)
0002BEA6 <AmiBlitz3.ab3@13835>   MOVE.w d2,mode
0002BEAA <AmiBlitz3.ab3@13836>    BSR.w eval3
0002BEAC <AmiBlitz3.ab3@13837>   MOVE.w (a7)+,d3
0002BEB0 <AmiBlitz3.ab3@13838>    BEQ.w maineval__noconv
0002BEB4 <AmiBlitz3.ab3@13839>   MOVE.w unknown(PC),D1
0002BEB8 <AmiBlitz3.ab3@13840>    BNE.w maineval__noconv
0002BEBA <AmiBlitz3.ab3@13841>   EXG.l D2,D3
0002BEBC <AmiBlitz3.ab3@13842>    MOVE.l a2,-(a7)
0002BEC2 <AmiBlitz3.ab3@13843>    TST.b curtemplabel
0002BEC6 <AmiBlitz3.ab3@13844>    BEQ maineval2__l10
0002BECC <AmiBlitz3.ab3@13845>    MOVE.l asmbuff,a2
0002BED2 <AmiBlitz3.ab3@13846>    CMP.w #$c,$8(a2)
0002BED6 <AmiBlitz3.ab3@13847>    BEQ maineval2__l20
0002BEDC <AmiBlitz3.ab3@13848>    CMP.w #$d,$8(a2)
0002BEE0 <AmiBlitz3.ab3@13849>    BEQ maineval2__l20
0002BEE2 <AmiBlitz3.ab3@13852>   CMP.w d2,d3
0002BEE6 <AmiBlitz3.ab3@13853>   BEQ maineval2__l20
0002BEEA <AmiBlitz3.ab3@13854>   BSR.w writeconvertcode
0002BEF0 <AmiBlitz3.ab3@13855>   CLR.b doimmediate
0002BEF2 <AmiBlitz3.ab3@13858>   MOVE.l (a7)+,a2
0002BEF8 <AmiBlitz3.ab3@13861>   MOVE.w (A7)+,unknown
0002BEFE <AmiBlitz3.ab3@13862>   MOVE.w stackpar,D1
0002BF02 <AmiBlitz3.ab3@13863>    BEQ.w maineval__skipme
0002BF06 <AmiBlitz3.ab3@13864>    BMI.w maineval__skipme
0002BF0C <AmiBlitz3.ab3@13868>   MOVE.w regnum,D1
0002BF0E <AmiBlitz3.ab3@13869>   LSL.w #8,D1
0002BF10 <AmiBlitz3.ab3@13870>   LSL.w #1,D1
0002BF14 <AmiBlitz3.ab3@13871>   CMP.w #$7,D2
0002BF18 <AmiBlitz3.ab3@13872>    BNE.w maineval__hi1
0002BF20 <AmiBlitz3.ab3@13873>    CMP.b #2,optistring
0002BF24 <AmiBlitz3.ab3@13874>    BEQ maineval__hi1a
0002BF26 <AmiBlitz3.ab3@13875>   MOVE.w D1,-(A7)
0002BF2C <AmiBlitz3.ab3@13876>   OR.w getstlen,D1
0002BF30 <AmiBlitz3.ab3@13877>    BSR.w writeword
0002BF32 <AmiBlitz3.ab3@13878>   MOVE.w (A7)+,D1
0002BF38 <AmiBlitz3.ab3@13881>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002BF3C <AmiBlitz3.ab3@13885>   MOVE.w #$3f3c,d1
0002BF40 <AmiBlitz3.ab3@13886>    BSR.w writeword
0002BF42 <AmiBlitz3.ab3@13890>   MOVE.w d2,d1
0002BF48 <AmiBlitz3.ab3@13891>   MOVE.w d1,libmode
0002BF4C <AmiBlitz3.ab3@13892>    BSR.w writeword
0002BF50 <AmiBlitz3.ab3@13893>   CMP.w #$7,D2
0002BF54 <AmiBlitz3.ab3@13894>    BNE.w maineval__skipme
0002BF5A <AmiBlitz3.ab3@13895>   MOVE.w putstlen,D1
0002BF60 <AmiBlitz3.ab3@13896>   OR.w regnum,D1
0002BF64 <AmiBlitz3.ab3@13897>    BSR.w writeword
0002BF68 <AmiBlitz3.ab3@13900>    CMP.w #$7,D2
0002BF6C <AmiBlitz3.ab3@13901>    BNE.w maineval__notst
0002BF74 <AmiBlitz3.ab3@13912>    CMP.b #2,optistring
0002BF78 <AmiBlitz3.ab3@13913>    BEQ maineval__skipme_l10
0002BF7E <AmiBlitz3.ab3@13914>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002BF82 <AmiBlitz3.ab3@13915>    BSR.w sbtolong
0002BF86 <AmiBlitz3.ab3@13916> BRA.w maineval__notst2
0002BF8E <AmiBlitz3.ab3@13920>     CMP.w #6,regnum
0002BF92 <AmiBlitz3.ab3@13921>     BEQ maineval__skipme_l10_l1
0002BF98 <AmiBlitz3.ab3@13922>     TST.b funcparloop
0002BF9C <AmiBlitz3.ab3@13923>     BEQ maineval__skipme_l10_l1
0002BFA2 <AmiBlitz3.ab3@13924>     MOVE.l #$48780000,d1
0002BFA6 <AmiBlitz3.ab3@13925>     BSR writelong
0002BFAA <AmiBlitz3.ab3@13928> BRA.w maineval__notst2
0002BFB0 <AmiBlitz3.ab3@13931>   ADDQ.w #2,a2offset
0002BFB4 <AmiBlitz3.ab3@13932> BRA maineval__skipme
0002BFBC <AmiBlitz3.ab3@13935>   CMPI.w #$2,sbgot
0002BFC0 <AmiBlitz3.ab3@13936>    BCS.w maineval__notst2                                         ;correct stack
0002BFC4 <AmiBlitz3.ab3@13937>   MOVE.w ststfix(PC),D1
0002BFC8 <AmiBlitz3.ab3@13938>    BSR.w writeword
0002BFCE <AmiBlitz3.ab3@13941>   MOVE.w (A7)+,sbgot
0002BFD4 <AmiBlitz3.ab3@13942>   MOVE.w stackpar,D1
0002BFD8 <AmiBlitz3.ab3@13943>    BPL.w maineval__skip
0002BFDC <AmiBlitz3.ab3@13944>    CMP.b #7,d2
0002BFE0 <AmiBlitz3.ab3@13945>    BEQ maineval__notst2_l1
0002BFE6 <AmiBlitz3.ab3@13946>   TST.b funcparloop
0002BFEA <AmiBlitz3.ab3@13947>   BEQ maineval__notst2_l1
0002BFEE <AmiBlitz3.ab3@13948>   CMP.b #5,d2
0002BFF2 <AmiBlitz3.ab3@13949>   BNE maineval__notst2_skip
0002BFF8 <AmiBlitz3.ab3@13950>   TST.b fpu
0002BFFC <AmiBlitz3.ab3@13951>   BEQ maineval__notst2_skip
0002C002 <AmiBlitz3.ab3@13952>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C008 <AmiBlitz3.ab3@13953>   JSR writelong
0002C00C <AmiBlitz3.ab3@13956>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C012 <AmiBlitz3.ab3@13957>   ADD.w parnum,d1
0002C018 <AmiBlitz3.ab3@13958>   JSR Atokejsr
0002C01E <AmiBlitz3.ab3@13959>    TST.w dontwrite
0002C022 <AmiBlitz3.ab3@13960>    BNE maineval__notst2_l1
0002C028 <AmiBlitz3.ab3@13961>    MOVE.l data1start,d1
0002C02E <AmiBlitz3.ab3@13962>    MOVE.l destpointer,a4
0002C032 <AmiBlitz3.ab3@13963>    ADD.l d1,-4(a4)
0002C038 <AmiBlitz3.ab3@13964>    MOVE.l destpointer,d1
0002C03A <AmiBlitz3.ab3@13965>    SUBQ.l #4,d1
0002C040 <AmiBlitz3.ab3@13966>    SUB.l destbufferstart,d1
0002C042 <AmiBlitz3.ab3@13967>    MOVE.l d2,-(a7)
0002C044 <AmiBlitz3.ab3@13968>    MOVE.l d1,d2
0002C04A <AmiBlitz3.ab3@13969>    JSR addhunkoffset
0002C04C <AmiBlitz3.ab3@13970>    MOVE.l (a7)+,d2
0002C050 <AmiBlitz3.ab3@13971> BRA maineval__skip
0002C056 <AmiBlitz3.ab3@13974>   ADDQ.w #2,a2offset
0002C05C <AmiBlitz3.ab3@13975>   MOVE.w pushd0wd,D1
0002C060 <AmiBlitz3.ab3@13976>   CMP.w #$3,D2                                             ;write parameter to stack
0002C064 <AmiBlitz3.ab3@13977>    BCS.w maineval__ok
0002C06A <AmiBlitz3.ab3@13978>   ADDQ.w #2,a2offset
0002C070 <AmiBlitz3.ab3@13979>   TST.b fpu
0002C074 <AmiBlitz3.ab3@13980>   BEQ maineval__notst2_nofpu
0002C078 <AmiBlitz3.ab3@13981>   CMP.w #5,d2
0002C07C <AmiBlitz3.ab3@13982>   BNE maineval__notst2_nofpu
0002C07E <AmiBlitz3.ab3@13983>   MOVEQ #0,d1
0002C084 <AmiBlitz3.ab3@13984>   MOVE.w regnum,d1
0002C086 <AmiBlitz3.ab3@13985>   ASL.l #7,d1
0002C08C <AmiBlitz3.ab3@13986>   OR.l #$f2276400,d1
0002C090 <AmiBlitz3.ab3@13987>   BSR writelong
0002C094 <AmiBlitz3.ab3@13988> BRA maineval__skip
0002C09A <AmiBlitz3.ab3@13991>   MOVE.w pushd0l,D1
0002C0A0 <AmiBlitz3.ab3@13994>    OR.w regnum,D1
0002C0A4 <AmiBlitz3.ab3@13995>    BSR.w writeword                                         ;nat
0002C0AA <AmiBlitz3.ab3@13998>   MOVE.w (A7)+,stackpar
0002C0B0 <AmiBlitz3.ab3@13999>   MOVE.w (A7)+,thisstuse
0002C0B2 <AmiBlitz3.ab3@14000> RTS
0002C0B4 <AmiBlitz3.ab3@14003> thisstuse: Ds.w 1
0002C0B6 <AmiBlitz3.ab3@14006> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C0B8 <AmiBlitz3.ab3@14007> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C0BC <AmiBlitz3.ab3@14012>   BSR.w eval4
0002C0C6 <AmiBlitz3.ab3@14013>   SUBI.l #$12,forthsp
0002C0C8 <AmiBlitz3.ab3@14014> RTS
0002C0CA <AmiBlitz3.ab3@14018>   MOVEQ.l #$01,D1
0002C0CE <AmiBlitz3.ab3@14020>       MOVEA.l precsp(PC),A1
0002C0D0 <AmiBlitz3.ab3@14021>       MOVE.l A0,(A1)+
0002C0D2 <AmiBlitz3.ab3@14022>       MOVE.w D1,(A1)+
0002C0D8 <AmiBlitz3.ab3@14023>       MOVE.l A1,precsp
0002C0DC <AmiBlitz3.ab3@14024>    BSR.w calcloop
0002C0DE <AmiBlitz3.ab3@14025>   TST.w D1
0002C0E2 <AmiBlitz3.ab3@14026>    BNE.w syntaxerr
0002C0E8 <AmiBlitz3.ab3@14027>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002C0EA <AmiBlitz3.ab3@14028> RTS
0002C0EE <AmiBlitz3.ab3@14033>   BSR.w JL_0_9C24
0002C0F2 <AmiBlitz3.ab3@14036>   MOVEA.l precsp(PC),A1
0002C0F4 <AmiBlitz3.ab3@14037>   CMP.w -(A1),D1
0002C0F8 <AmiBlitz3.ab3@14038>    BHI.w JL_0_9B0A
0002C0FA <AmiBlitz3.ab3@14039> RTS
0002C0FE <AmiBlitz3.ab3@14044>   MOVEA.l precsp(PC),A1
0002C100 <AmiBlitz3.ab3@14045>   MOVE.l A0,(A1)+
0002C102 <AmiBlitz3.ab3@14046>   MOVE.w D1,(A1)+
0002C108 <AmiBlitz3.ab3@14047>   MOVE.l A1,precsp
0002C10A <AmiBlitz3.ab3@14048>   MOVE.w D2,-(A7)
0002C110 <AmiBlitz3.ab3@14049>   ADDQ.w #1,regnum
0002C114 <AmiBlitz3.ab3@14050>    BSR.w calcloop               ;constant optimizer
0002C11A <AmiBlitz3.ab3@14051>   SUBQ.w #1,regnum
0002C11C <AmiBlitz3.ab3@14052>   MOVE.w (A7)+,D3
0002C120 <AmiBlitz3.ab3@14053>   MOVEM.l D1/A0,-(A7)
0002C124 <AmiBlitz3.ab3@14054>    BEQ.w JL_0_9B2E
0002C128 <AmiBlitz3.ab3@14055>    BSR.w JL_0_9770
0002C12C <AmiBlitz3.ab3@14058>   BSR.w popprec
0002C130 <AmiBlitz3.ab3@14059>   BSR.w writecode
0002C134 <AmiBlitz3.ab3@14060>   MOVEA.l forthsp(PC),A0
0002C138 <AmiBlitz3.ab3@14061>   MOVE.w -$2(A0),D1
0002C13C <AmiBlitz3.ab3@14062>   OR.w -$14(A0),D1
0002C140 <AmiBlitz3.ab3@14063>   MOVE.w D1,-$14(A0)
0002C144 <AmiBlitz3.ab3@14064>    BNE.w JL_0_9C0E
0002C14A <AmiBlitz3.ab3@14065>   MOVE.w dontwrite,D1
0002C14E <AmiBlitz3.ab3@14066>    BNE.w JL_0_9C0E
0002C152 <AmiBlitz3.ab3@14067>    MOVEA.l -$24(A0),A0
0002C28E <AmiBlitz3.ab3@14069>  !newcalc
0002C292 <AmiBlitz3.ab3@14070>    BEQ 'l10
0002C296 <AmiBlitz3.ab3@14071>    MOVEA.l forthsp(PC),A0
0002C29E <AmiBlitz3.ab3@14072>    MOVE.w -$18(A0),lasta6
0002C2A6 <AmiBlitz3.ab3@14073>    MOVE.l -$1C(A0),lasta6
0002C2AA <AmiBlitz3.ab3@14074>    MOVEA.l -$24(A0),A0
0002C2B0 <AmiBlitz3.ab3@14075>    MOVE.l A0,destpointer
0002C2B6 <AmiBlitz3.ab3@14076>    MOVEA.l _mathffpbase,A6
0002C2BC <AmiBlitz3.ab3@14077>    MOVEA.l ffplib,A1
0002C2C0 <AmiBlitz3.ab3@14078> BRA cont1
0002C2C4 <AmiBlitz3.ab3@14081>   MOVE.w #$2000,D1
0002C2CA <AmiBlitz3.ab3@14082>   OR.w regnum,D1
0002C2CE <AmiBlitz3.ab3@14083>    BSR.w writeword
0002C2D0 <AmiBlitz3.ab3@14084>     MOVEQ #0,d1
0002C2D6 <AmiBlitz3.ab3@14085>     MOVE.w regnum,D1
0002C2D8 <AmiBlitz3.ab3@14086>     ASL.l #8,d1
0002C2DA <AmiBlitz3.ab3@14087>     ASL.l #2,d1
0002C2E0 <AmiBlitz3.ab3@14088>     OR.l #$f2000000,d1
0002C2E4 <AmiBlitz3.ab3@14089>     BSR writelong
0002C2E8 <AmiBlitz3.ab3@14090>   MOVE.w #$4E75,D1
0002C2EC <AmiBlitz3.ab3@14091>    BSR.w writeword
0002C2F4 <AmiBlitz3.ab3@14092>   MOVE.w -$18(A0),lasta6
0002C2FC <AmiBlitz3.ab3@14093>   MOVE.l -$1C(A0),lasta6
0002C300 <AmiBlitz3.ab3@14094>   MOVEA.l -$24(A0),A0
0002C306 <AmiBlitz3.ab3@14095>   MOVE.l A0,destpointer
0002C30A <AmiBlitz3.ab3@14096>   MOVEM.l D2/A5,-(A7)
0002C310 <AmiBlitz3.ab3@14097>   MOVEA.l _mathffpbase,A6
0002C316 <AmiBlitz3.ab3@14098>   MOVEA.l ffplib,A1
0002C31A <AmiBlitz3.ab3@14099>   MOVE.w $A(A1),D0
0002C320 <AmiBlitz3.ab3@14100>   LEA _mathffpbase,A5
0002C322 <AmiBlitz3.ab3@14101>   SUBA.w D0,A5
0002C328 <AmiBlitz3.ab3@14102>   JSR Aclearcache                                          ;neg +
0002C32E <AmiBlitz3.ab3@14103>   CLR.l load_var_addr
0002C334 <AmiBlitz3.ab3@14104>   CLR.l imm_addr
0002C33A <AmiBlitz3.ab3@14105>   TST.w dontwrite
0002C33E <AmiBlitz3.ab3@14106>   BNE '1
0002C340 <AmiBlitz3.ab3@14107>   JSR (A0)                                                 ;calc constant inline expression
0002C344 <AmiBlitz3.ab3@14110>   MOVEM.l (A7)+,D2/A5
0002C34A <AmiBlitz3.ab3@14113>   MOVE.b d2,isconstantvalue
0002C350 <AmiBlitz3.ab3@14114>   MOVE.l d0,lastconstantvalue
0002C356 <AmiBlitz3.ab3@14115>   MOVE.w regnum,D1
0002C358 <AmiBlitz3.ab3@14116>   LSL.w #8,D1
0002C35A <AmiBlitz3.ab3@14117>   LSL.w #1,D1
0002C35E <AmiBlitz3.ab3@14118>   ORI.w #$203C,D1
0002C362 <AmiBlitz3.ab3@14119>   CMP.w #$3,D2
0002C366 <AmiBlitz3.ab3@14120>    BCC.w JL_0_9BCE
0002C36A <AmiBlitz3.ab3@14121>   ORI.w #$1000,D1
0002C36E <AmiBlitz3.ab3@14122>    BSR.w writeword
0002C370 <AmiBlitz3.ab3@14123>   MOVE.w D0,D1
0002C374 <AmiBlitz3.ab3@14124>    BSR.w writeword
0002C378 <AmiBlitz3.ab3@14125> BRA.w JL_0_9BD8
0002C37E <AmiBlitz3.ab3@14129>   TST.b iee                                                ;fpu constant
0002C382 <AmiBlitz3.ab3@14130>   BEQ 'l10
0002C386 <AmiBlitz3.ab3@14131>   CMP.b #5,d2
0002C38A <AmiBlitz3.ab3@14132>   BNE 'l10
0002C38C <AmiBlitz3.ab3@14133>   MOVEQ #0,d1
0002C392 <AmiBlitz3.ab3@14134>   MOVE.w regnum,D1
0002C394 <AmiBlitz3.ab3@14135>   ASL.l #7,d1
0002C39A <AmiBlitz3.ab3@14136>   OR.l #$f23c5400,d1
0002C39E <AmiBlitz3.ab3@14137>   BSR writelong
0002C3A0 <AmiBlitz3.ab3@14138>   SUBQ.l #8,a7
0002C3A6 <AmiBlitz3.ab3@14139>   fmove.d fp0,0(a7)
0002C3A8 <AmiBlitz3.ab3@14140>   MOVE.l (a7)+,d1
0002C3AC <AmiBlitz3.ab3@14141>   BSR writelong
0002C3AE <AmiBlitz3.ab3@14142>   MOVE.l (a7)+,d1
0002C3B2 <AmiBlitz3.ab3@14143>   BSR writelong
0002C3B6 <AmiBlitz3.ab3@14144> BRA JL_0_9BD8
0002C3BA <AmiBlitz3.ab3@14147>   BSR.w writeword
0002C3BC <AmiBlitz3.ab3@14148>   MOVE.l D0,D1
0002C3C0 <AmiBlitz3.ab3@14149>   BSR.w writelong
0002C3C4 <AmiBlitz3.ab3@14152>   MOVEA.l forthsp(PC),A0
0002C3C8 <AmiBlitz3.ab3@14153>   MOVEA.l -$20(A0),A3
0002C3CE <AmiBlitz3.ab3@14154>   MOVEA.l hunkoffsetbase,A2
0002C3D4 <AmiBlitz3.ab3@14155>   MOVE.l A3,hunkoffsetbase
0002C3DA <AmiBlitz3.ab3@14156>   MOVEA.l _execbase,A6
0002C3DC <AmiBlitz3.ab3@14159>   CMPA.l A3,A2
0002C3E0 <AmiBlitz3.ab3@14160>   BEQ.w JL_0_9C0A
0002C3E6 <AmiBlitz3.ab3@14161>   SUBQ.l #1,hunkoffsetcounter
0002C3E8 <AmiBlitz3.ab3@14162>   MOVEA.l A2,A1
0002C3EA <AmiBlitz3.ab3@14163>   MOVEA.l (A2),A2
0002C3EC <AmiBlitz3.ab3@14164>   MOVEQ.l #$8,D0
0002C3F2 <AmiBlitz3.ab3@14165>   MOVE.l mempool2,a0
0002C3F6 <AmiBlitz3.ab3@14166>    JSR _FreePooled(A6)
0002C3FA <AmiBlitz3.ab3@14167> BRA.w JL_0_9BF0
0002C3FE <AmiBlitz3.ab3@14171>   MOVEA.l forthsp(PC),A0
0002C402 <AmiBlitz3.ab3@14174>   LEA -$12(A0),A0
0002C408 <AmiBlitz3.ab3@14175>   MOVE.l A0,forthsp
0002C40C <AmiBlitz3.ab3@14176>   MOVEM.l (A7)+,D1/A0
0002C410 <AmiBlitz3.ab3@14177>   BSR.w reget
0002C414 <AmiBlitz3.ab3@14178> BRA.w JL_0_9AFE
0002C418 <AmiBlitz3.ab3@14182>   BSR.w JL_0_A386
0002C41A <AmiBlitz3.ab3@14183>   TST.w d0
0002C41E <AmiBlitz3.ab3@14184>   BEQ JL_0_9C42
0002C422 <AmiBlitz3.ab3@14185>   CMP.b #",",d0
0002C426 <AmiBlitz3.ab3@14186>   BEQ JL_0_9C42
0002C42A <AmiBlitz3.ab3@14187>   CMP.b #"@",d0                                            ;expandline @@
0002C42E <AmiBlitz3.ab3@14188>   BEQ JL_0_9C42
0002C434 <AmiBlitz3.ab3@14189>   LEA operators,A0
0002C436 <AmiBlitz3.ab3@14192>    TST.w (A0)
0002C43A <AmiBlitz3.ab3@14193>    BEQ.w JL_0_9C42
0002C43C <AmiBlitz3.ab3@14194>   CMP.w (A0),D0
0002C440 <AmiBlitz3.ab3@14195>    BEQ.w JL_0_9C46a
0002C444 <AmiBlitz3.ab3@14196>   LEA $20(A0),A0
0002C448 <AmiBlitz3.ab3@14197> BRA.w JL_0_9C2E
0002C44A <AmiBlitz3.ab3@14201>   MOVEQ.l #$00,D1
0002C44C <AmiBlitz3.ab3@14202> RTS
0002C450 <AmiBlitz3.ab3@14206>   CMP.w #$3C,D0
0002C454 <AmiBlitz3.ab3@14207>    BNE.w JL_0_9C70
0002C458 <AmiBlitz3.ab3@14208>    BSR.w get1bytemain
0002C45C <AmiBlitz3.ab3@14209>   CMP.w #$3D,D0
0002C460 <AmiBlitz3.ab3@14210>    BNE.w JL_0_9C64
0002C466 <AmiBlitz3.ab3@14211>   LEA ople,A0
0002C46A <AmiBlitz3.ab3@14212> BRA.w JL_0_9CCA
0002C46E <AmiBlitz3.ab3@14216>   CMP.w #$3E,D0
0002C472 <AmiBlitz3.ab3@14217>    BNE.w JL_0_9C96
0002C476 <AmiBlitz3.ab3@14218> BRA.w JL_0_9CC4
0002C47A <AmiBlitz3.ab3@14222>   CMP.w #$3E,D0
0002C47E <AmiBlitz3.ab3@14223>    BNE.w JL_0_9C9E
0002C482 <AmiBlitz3.ab3@14224>    BSR.w get1bytemain
0002C486 <AmiBlitz3.ab3@14225>   CMP.w #$3D,D0
0002C48A <AmiBlitz3.ab3@14226>    BNE.w JL_0_9C8E
0002C490 <AmiBlitz3.ab3@14227>   LEA opge,A0
0002C494 <AmiBlitz3.ab3@14228> BRA.w JL_0_9CCA
0002C498 <AmiBlitz3.ab3@14232>   CMP.w #$3C,D0
0002C49C <AmiBlitz3.ab3@14233>    BEQ.w JL_0_9CC4
0002C4A6 <AmiBlitz3.ab3@14237>     MOVE.w oldqflag,instringon
0002C4AC <AmiBlitz3.ab3@14238>     MOVEA.l lastsourcepos,A5
0002C4B0 <AmiBlitz3.ab3@14239> BRA.w JL_0_9CCA
0002C4B4 <AmiBlitz3.ab3@14243>   CMP.w #$3D,D0
0002C4B8 <AmiBlitz3.ab3@14244>    BNE.w JL_0_9CCA
0002C4BC <AmiBlitz3.ab3@14245>    BSR.w get1bytemain
0002C4C0 <AmiBlitz3.ab3@14246>   CMP.w #$3E,D0
0002C4C4 <AmiBlitz3.ab3@14247>    BNE.w JL_0_9CBC
0002C4CA <AmiBlitz3.ab3@14248>   LEA opge,A0
0002C4CE <AmiBlitz3.ab3@14249> BRA.w JL_0_9CCA
0002C4D2 <AmiBlitz3.ab3@14253>   CMP.w #$3C,D0
0002C4D6 <AmiBlitz3.ab3@14254>   BNE.w JL_0_9C96
0002C4DC <AmiBlitz3.ab3@14257>   LEA opne,A0
0002C4E0 <AmiBlitz3.ab3@14260>   MOVE.w $1E(A0),D1
0002C4E2 <AmiBlitz3.ab3@14261> RTS
0002C4E4 <AmiBlitz3.ab3@14268>   MOVE.w d2,d1
0002C4E6 <AmiBlitz3.ab3@14269>   SUBQ.w #1,D1
0002C4EA <AmiBlitz3.ab3@14270>    BMI.w illoperr
0002C4EC <AmiBlitz3.ab3@14271>   LSL.w #2,D1
0002C4F0 <AmiBlitz3.ab3@14272>   MOVE.l $2(A0,D1.W),D1
0002C4F4 <AmiBlitz3.ab3@14273>    BEQ.w illoperr
0002C4F6 <AmiBlitz3.ab3@14274>   MOVEA.l D1,A0
0002C4F8 <AmiBlitz3.ab3@14277> JMP (A0)
0002C4FC <AmiBlitz3.ab3@14293>   MOVEA.l precsp(PC),A1
0002C502 <AmiBlitz3.ab3@14294>   CMPA.l #precstackf,A1
0002C506 <AmiBlitz3.ab3@14295>    BCC.w pserr
0002C508 <AmiBlitz3.ab3@14296>   MOVE.w -(A1),D1
0002C50A <AmiBlitz3.ab3@14297>   MOVEA.l -(A1),A0
0002C510 <AmiBlitz3.ab3@14298>   MOVE.l A1,precsp
0002C512 <AmiBlitz3.ab3@14299> RTS
0002C516 <AmiBlitz3.ab3@14302> precsp:      Dc.l precstack
0002C612 <AmiBlitz3.ab3@14303> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C696 <AmiBlitz3.ab3@14304>              Ds.l 33
0002C698 <AmiBlitz3.ab3@14310> mseq:  SEQ D0
0002C69A <AmiBlitz3.ab3@14311> msne:    SNE D0
0002C69C <AmiBlitz3.ab3@14312> mslt:    SLT D0
0002C69E <AmiBlitz3.ab3@14313> msle:    SLE D0
0002C6A0 <AmiBlitz3.ab3@14314> msgt:    SGT D0
0002C6A2 <AmiBlitz3.ab3@14315> msge:    SGE D0
0002C6A4 <AmiBlitz3.ab3@14317> cmp0:    CMP.b D0,D0
0002C6A6 <AmiBlitz3.ab3@14318> cmp1:    CMP.w D0,D0
0002C6A8 <AmiBlitz3.ab3@14319> cmp2:    CMP.l D0,D0
0002C6AC <AmiBlitz3.ab3@14323>   MOVE.w cmp0(PC),D1
0002C6B0 <AmiBlitz3.ab3@14324> BRA.w doeqcmp2                                            ;writecompare
0002C6B4 <AmiBlitz3.ab3@14328>   MOVE.w cmp0(PC),D1
0002C6B8 <AmiBlitz3.ab3@14329> BRA.w donecmp2
0002C6BC <AmiBlitz3.ab3@14333>   MOVE.w cmp0(PC),D1
0002C6C0 <AmiBlitz3.ab3@14334> BRA.w doltcmp2
0002C6C4 <AmiBlitz3.ab3@14338>   MOVE.w cmp0(PC),D1
0002C6C8 <AmiBlitz3.ab3@14339> BRA.w dolecmp2
0002C6CC <AmiBlitz3.ab3@14343>   MOVE.w cmp0(PC),D1
0002C6D0 <AmiBlitz3.ab3@14344> BRA.w dogtcmp2
0002C6D4 <AmiBlitz3.ab3@14349>   MOVE.w cmp0(PC),D1
0002C6D8 <AmiBlitz3.ab3@14350> BRA.w dogecmp2
0002C6DC <AmiBlitz3.ab3@14354>   MOVE.w cmp1(PC),D1
0002C6E0 <AmiBlitz3.ab3@14355> BRA.w doeqcmp2
0002C6E4 <AmiBlitz3.ab3@14359>   MOVE.w cmp1(PC),D1
0002C6E8 <AmiBlitz3.ab3@14360> BRA.w donecmp2
0002C6EC <AmiBlitz3.ab3@14364>   MOVE.w cmp1(PC),D1
0002C6F0 <AmiBlitz3.ab3@14365> BRA.w doltcmp2
0002C6F4 <AmiBlitz3.ab3@14369>   MOVE.w cmp1(PC),D1
0002C6F8 <AmiBlitz3.ab3@14370> BRA.w dolecmp2
0002C6FC <AmiBlitz3.ab3@14374>   MOVE.w cmp1(PC),D1
0002C700 <AmiBlitz3.ab3@14375> BRA.w dogtcmp2
0002C704 <AmiBlitz3.ab3@14380>   MOVE.w cmp1(PC),D1
0002C708 <AmiBlitz3.ab3@14381> BRA.w dogecmp2
0002C70C <AmiBlitz3.ab3@14385>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C710 <AmiBlitz3.ab3@14386> BRA doeqcmp2
0002C714 <AmiBlitz3.ab3@14389>   MOVE.w cmp2(PC),D1
0002C718 <AmiBlitz3.ab3@14390> BRA donecmp2
0002C71C <AmiBlitz3.ab3@14394>   MOVE.w cmp2(PC),D1
0002C720 <AmiBlitz3.ab3@14395> BRA.w doltcmp2
0002C724 <AmiBlitz3.ab3@14399>   MOVE.w cmp2(PC),D1
0002C728 <AmiBlitz3.ab3@14400> BRA.w dolecmp2
0002C72C <AmiBlitz3.ab3@14404>   MOVE.w cmp2(PC),D1
0002C730 <AmiBlitz3.ab3@14405> BRA.w dogtcmp2
0002C734 <AmiBlitz3.ab3@14409>   MOVE.w cmp2(PC),D1
0002C738 <AmiBlitz3.ab3@14410> BRA.w dogecmp2
0002C73A <AmiBlitz3.ab3@14413> cfregat:  Ds.w 1
0002C740 <AmiBlitz3.ab3@14417>   MOVE.w D1,libjsr+2
0002C744 <AmiBlitz3.ab3@14418>    BSR.w JL_0_AD40
0002C746 <AmiBlitz3.ab3@14419>   MOVE.l D4,D1
0002C74A <AmiBlitz3.ab3@14420>    BSR.w JL_0_AD38
0002C74E <AmiBlitz3.ab3@14421>   MOVE.w #$C900,D1
0002C752 <AmiBlitz3.ab3@14422>    BSR.w Atokejsr
0002C756 <AmiBlitz3.ab3@14423>    BSR.w JL_0_A352
0002C75C <AmiBlitz3.ab3@14424>   MOVE.l libjsr,D1
0002C760 <AmiBlitz3.ab3@14425>    BSR.w writelong
0002C76A <AmiBlitz3.ab3@14426>   MOVE.w regnum,cfregat
0002C770 <AmiBlitz3.ab3@14427>   CLR.w regnum
0002C772 <AmiBlitz3.ab3@14428> RTS
0002C77C <AmiBlitz3.ab3@14432>   MOVE.w cfregat,regnum
0002C780 <AmiBlitz3.ab3@14433>    BSR.w JL_0_A36E
0002C782 <AmiBlitz3.ab3@14434>   MOVE.l D5,D1
0002C786 <AmiBlitz3.ab3@14435> BRA.w JL_0_AD38
0002C788 <AmiBlitz3.ab3@14439>    MOVEQ.l #-$2A,D1
0002C78E <AmiBlitz3.ab3@14440>    TST.b fpu
0002C792 <AmiBlitz3.ab3@14441>    BEQ do_equal_float__nofpu
0002C794 <AmiBlitz3.ab3@14442>    MOVEQ #0,d1
0002C79A <AmiBlitz3.ab3@14443>    MOVE.w regnum,d1
0002C79C <AmiBlitz3.ab3@14444>    MOVE.l d1,d2
0002C79E <AmiBlitz3.ab3@14445>    ASL.l #7,d1
0002C7A0 <AmiBlitz3.ab3@14446>    ADDQ  #1,d2
0002C7A2 <AmiBlitz3.ab3@14447>    ASL.l #8,d2
0002C7A4 <AmiBlitz3.ab3@14448>    ASL.l #2,d2
0002C7A6 <AmiBlitz3.ab3@14449>    OR.l d2,d1
0002C7AC <AmiBlitz3.ab3@14450>    OR.l #$f2000038,d1
0002C7B2 <AmiBlitz3.ab3@14451>    JSR writelong
0002C7B6 <AmiBlitz3.ab3@14452>    MOVE.w #$f240,d1
0002C7BC <AmiBlitz3.ab3@14453>    OR.w regnum,d1
0002C7C0 <AmiBlitz3.ab3@14454>    BSR writeword
0002C7C2 <AmiBlitz3.ab3@14455>    MOVEQ.l #1,d2
0002C7C6 <AmiBlitz3.ab3@14456>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C7CA <AmiBlitz3.ab3@14457>    BSR writeword
0002C7CC <AmiBlitz3.ab3@14458> RTS
0002C7D0 <AmiBlitz3.ab3@14461>    BSR.w docflib
0002C7D4 <AmiBlitz3.ab3@14462>    BSR.w doeqcmp
0002C7D8 <AmiBlitz3.ab3@14463> BRA.w docflib2
0002C7DA <AmiBlitz3.ab3@14467>   MOVEQ.l #-$2A,D1
0002C7E0 <AmiBlitz3.ab3@14468>   TST.b fpu
0002C7E4 <AmiBlitz3.ab3@14469>    BEQ do_not_equal_float__nofpu
0002C7E6 <AmiBlitz3.ab3@14470>    MOVEQ #0,d1
0002C7EC <AmiBlitz3.ab3@14471>    MOVE.w regnum,d1
0002C7EE <AmiBlitz3.ab3@14472>    MOVE.l d1,d2
0002C7F0 <AmiBlitz3.ab3@14473>    ASL.l #7,d1
0002C7F2 <AmiBlitz3.ab3@14474>    ADDQ  #1,d2
0002C7F4 <AmiBlitz3.ab3@14475>    ASL.l #8,d2
0002C7F6 <AmiBlitz3.ab3@14476>    ASL.l #2,d2
0002C7F8 <AmiBlitz3.ab3@14477>    OR.l d2,d1
0002C7FE <AmiBlitz3.ab3@14478>    OR.l #$f2000038,d1
0002C804 <AmiBlitz3.ab3@14479>    JSR writelong
0002C808 <AmiBlitz3.ab3@14480>    MOVE.w #$f240,d1
0002C80E <AmiBlitz3.ab3@14481>    OR.w regnum,d1
0002C812 <AmiBlitz3.ab3@14482>    BSR writeword
0002C818 <AmiBlitz3.ab3@14483>    MOVE.l #1,d2
0002C81C <AmiBlitz3.ab3@14484>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C820 <AmiBlitz3.ab3@14485>    BSR writeword
0002C822 <AmiBlitz3.ab3@14486> RTS
0002C826 <AmiBlitz3.ab3@14489>    BSR.w docflib
0002C82A <AmiBlitz3.ab3@14490>    BSR.w donecmp
0002C82E <AmiBlitz3.ab3@14491> BRA.w docflib2
0002C830 <AmiBlitz3.ab3@14495>   MOVEQ.l #-$2A,D1
0002C836 <AmiBlitz3.ab3@14496>     TST.b fpu
0002C83A <AmiBlitz3.ab3@14497>    BEQ do_littler_float__nofpu
0002C83C <AmiBlitz3.ab3@14498>    MOVEQ #0,d1
0002C842 <AmiBlitz3.ab3@14499>    MOVE.w regnum,d1
0002C844 <AmiBlitz3.ab3@14500>    MOVE.l d1,d2
0002C846 <AmiBlitz3.ab3@14501>    ASL.l #7,d1
0002C848 <AmiBlitz3.ab3@14502>    ADDQ  #1,d2
0002C84A <AmiBlitz3.ab3@14503>    ASL.l #8,d2
0002C84C <AmiBlitz3.ab3@14504>    ASL.l #2,d2
0002C84E <AmiBlitz3.ab3@14505>    OR.l d2,d1
0002C854 <AmiBlitz3.ab3@14506>    OR.l #$f2000038,d1
0002C85A <AmiBlitz3.ab3@14507>    JSR writelong
0002C85E <AmiBlitz3.ab3@14508>    MOVE.w #$f240,d1
0002C864 <AmiBlitz3.ab3@14509>    OR.w regnum,d1
0002C868 <AmiBlitz3.ab3@14510>    BSR writeword
0002C86E <AmiBlitz3.ab3@14511>    MOVE.l #$1,d2
0002C872 <AmiBlitz3.ab3@14512>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C876 <AmiBlitz3.ab3@14513>    BSR writeword
0002C878 <AmiBlitz3.ab3@14514> RTS
0002C87C <AmiBlitz3.ab3@14517>    BSR.w docflib
0002C880 <AmiBlitz3.ab3@14518>    BSR.w doltcmp
0002C884 <AmiBlitz3.ab3@14519> BRA.w docflib2
0002C886 <AmiBlitz3.ab3@14523>   MOVEQ.l #-$2A,D1
0002C88C <AmiBlitz3.ab3@14524>   TST.b fpu
0002C890 <AmiBlitz3.ab3@14525>    BEQ do_littler_equal_float__nofpu
0002C892 <AmiBlitz3.ab3@14526>    MOVEQ #0,d1
0002C898 <AmiBlitz3.ab3@14527>    MOVE.w regnum,d1
0002C89A <AmiBlitz3.ab3@14528>    MOVE.l d1,d2
0002C89C <AmiBlitz3.ab3@14529>    ASL.l #7,d1
0002C89E <AmiBlitz3.ab3@14530>    ADDQ  #1,d2
0002C8A0 <AmiBlitz3.ab3@14531>    ASL.l #8,d2
0002C8A2 <AmiBlitz3.ab3@14532>    ASL.l #2,d2
0002C8A4 <AmiBlitz3.ab3@14533>    OR.l d2,d1
0002C8AA <AmiBlitz3.ab3@14534>    OR.l #$f2000038,d1
0002C8B0 <AmiBlitz3.ab3@14535>    JSR writelong
0002C8B4 <AmiBlitz3.ab3@14536>    MOVE.w #$f240,d1
0002C8BA <AmiBlitz3.ab3@14537>    OR.w regnum,d1
0002C8BE <AmiBlitz3.ab3@14538>    BSR writeword
0002C8C4 <AmiBlitz3.ab3@14539>    MOVE.l #1,d2
0002C8C8 <AmiBlitz3.ab3@14540>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C8CC <AmiBlitz3.ab3@14541>    BSR writeword
0002C8CE <AmiBlitz3.ab3@14542> RTS
0002C8D2 <AmiBlitz3.ab3@14545>    BSR.w docflib
0002C8D6 <AmiBlitz3.ab3@14546>    BSR.w dolecmp
0002C8DA <AmiBlitz3.ab3@14547> BRA.w docflib2
0002C8DC <AmiBlitz3.ab3@14551>   MOVEQ.l #-$2A,D1
0002C8E2 <AmiBlitz3.ab3@14552>    TST.b fpu
0002C8E6 <AmiBlitz3.ab3@14553>    BEQ do_greater_float__nofpu
0002C8E8 <AmiBlitz3.ab3@14554>     MOVEQ #0,d1
0002C8EE <AmiBlitz3.ab3@14555>    MOVE.w regnum,d1
0002C8F0 <AmiBlitz3.ab3@14556>    MOVE.l d1,d2
0002C8F2 <AmiBlitz3.ab3@14557>    ASL.l #7,d1
0002C8F4 <AmiBlitz3.ab3@14558>    ADDQ  #1,d2
0002C8F6 <AmiBlitz3.ab3@14559>    ASL.l #8,d2
0002C8F8 <AmiBlitz3.ab3@14560>    ASL.l #2,d2
0002C8FA <AmiBlitz3.ab3@14561>    OR.l d2,d1
0002C900 <AmiBlitz3.ab3@14562>    OR.l #$f2000038,d1
0002C906 <AmiBlitz3.ab3@14563>    JSR writelong
0002C90A <AmiBlitz3.ab3@14564>    MOVE.w #$f240,d1
0002C910 <AmiBlitz3.ab3@14565>    OR.w regnum,d1
0002C914 <AmiBlitz3.ab3@14566>    BSR writeword
0002C91A <AmiBlitz3.ab3@14567>    MOVE.l #1,d2
0002C91E <AmiBlitz3.ab3@14568>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C922 <AmiBlitz3.ab3@14569>    BSR writeword
0002C924 <AmiBlitz3.ab3@14570> RTS
0002C928 <AmiBlitz3.ab3@14573>    BSR.w docflib
0002C92C <AmiBlitz3.ab3@14574>    BSR.w dogtcmp
0002C930 <AmiBlitz3.ab3@14575> BRA.w docflib2
0002C932 <AmiBlitz3.ab3@14579>   MOVEQ.l #-$2A,D1
0002C938 <AmiBlitz3.ab3@14580>  TST.b fpu
0002C93C <AmiBlitz3.ab3@14581>    BEQ do_greater_equal_float__nofpu
0002C93E <AmiBlitz3.ab3@14582>    MOVEQ #0,d1
0002C944 <AmiBlitz3.ab3@14583>    MOVE.w regnum,d1
0002C946 <AmiBlitz3.ab3@14584>    MOVE.l d1,d2
0002C948 <AmiBlitz3.ab3@14585>    ASL.l #7,d1
0002C94A <AmiBlitz3.ab3@14586>    ADDQ  #1,d2
0002C94C <AmiBlitz3.ab3@14587>    ASL.l #8,d2
0002C94E <AmiBlitz3.ab3@14588>    ASL.l #2,d2
0002C950 <AmiBlitz3.ab3@14589>    OR.l d2,d1
0002C956 <AmiBlitz3.ab3@14590>    OR.l #$f2000038,d1
0002C95C <AmiBlitz3.ab3@14591>    JSR writelong
0002C960 <AmiBlitz3.ab3@14592>    MOVE.w #$f240,d1
0002C966 <AmiBlitz3.ab3@14593>    OR.w regnum,d1
0002C96A <AmiBlitz3.ab3@14594>    BSR writeword
0002C970 <AmiBlitz3.ab3@14595>    MOVE.l #1,d2
0002C974 <AmiBlitz3.ab3@14596>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C978 <AmiBlitz3.ab3@14597>    BSR writeword
0002C97A <AmiBlitz3.ab3@14598> RTS
0002C97E <AmiBlitz3.ab3@14601>    BSR.w docflib
0002C982 <AmiBlitz3.ab3@14602>    BSR.w dogecmp
0002C986 <AmiBlitz3.ab3@14603> BRA.w docflib2
0002C98C <AmiBlitz3.ab3@14608>   MOVE.l #$CE00,D1
0002C992 <AmiBlitz3.ab3@14609>    MOVE.l d1,lastinstruction
0002C996 <AmiBlitz3.ab3@14610>    BSR.w Atokejsr
0002C99A <AmiBlitz3.ab3@14611> BRA.w doeqcmp
0002C9A0 <AmiBlitz3.ab3@14615>   MOVE.l #$CE00,D1
0002C9A6 <AmiBlitz3.ab3@14616>    MOVE.l d1,lastinstruction
0002C9AA <AmiBlitz3.ab3@14617>    BSR.w Atokejsr
0002C9AE <AmiBlitz3.ab3@14618> BRA.w donecmp
0002C9B4 <AmiBlitz3.ab3@14622>   MOVE.l #$CE00,D1
0002C9BA <AmiBlitz3.ab3@14623>    MOVE.l d1,lastinstruction
0002C9BE <AmiBlitz3.ab3@14624>    BSR.w Atokejsr
0002C9C2 <AmiBlitz3.ab3@14625> BRA.w doltcmp
0002C9C8 <AmiBlitz3.ab3@14629>   MOVE.l #$CE00,D1
0002C9CE <AmiBlitz3.ab3@14630>    MOVE.l d1,lastinstruction
0002C9D2 <AmiBlitz3.ab3@14631>    BSR.w Atokejsr
0002C9D6 <AmiBlitz3.ab3@14632> BRA.w dolecmp
0002C9DC <AmiBlitz3.ab3@14636>   MOVE.l #$CE00,D1
0002C9E2 <AmiBlitz3.ab3@14637>    MOVE.l d1,lastinstruction
0002C9E6 <AmiBlitz3.ab3@14638>    BSR.w Atokejsr
0002C9EA <AmiBlitz3.ab3@14639> BRA.w dogtcmp
0002C9F0 <AmiBlitz3.ab3@14643>   MOVE.l #$CE00,D1
0002C9F6 <AmiBlitz3.ab3@14644>    MOVE.l d1,lastinstruction
0002C9FA <AmiBlitz3.ab3@14645>    BSR.w Atokejsr
0002C9FE <AmiBlitz3.ab3@14646> BRA.w dogecmp
0002CA04 <AmiBlitz3.ab3@14651>   TST.b fast                                               ;compare
0002CA08 <AmiBlitz3.ab3@14652>   BEQ cmpit__org
0002CA0E <AmiBlitz3.ab3@14656>   MOVE.l destpointer,a0
0002CA14 <AmiBlitz3.ab3@14657>   SUB.l imm_addr,a0
0002CA1A <AmiBlitz3.ab3@14658>   CMP.l #6,a0
0002CA1E <AmiBlitz3.ab3@14659>   BNE cmpit__l11
0002CA24 <AmiBlitz3.ab3@14660>   MOVE.l imm_addr,a0
0002CA2C <AmiBlitz3.ab3@14661>   CMP.w #$223c,imm_addr
0002CA30 <AmiBlitz3.ab3@14662>   BNE cmpit__org
0002CA36 <AmiBlitz3.ab3@14663>   ADD.w #$8e80,-6(a4)
0002CA3C <AmiBlitz3.ab3@14666>   CLR.l imm_addr
0002CA3E <AmiBlitz3.ab3@14667> RTS
0002CA44 <AmiBlitz3.ab3@14670>   CMP.l #4,a0
0002CA48 <AmiBlitz3.ab3@14671>   BNE cmpit__l10
0002CA4C <AmiBlitz3.ab3@14672>   CMP.b #2,d3
0002CA50 <AmiBlitz3.ab3@14673>   BNE cmpit__l11b
0002CA56 <AmiBlitz3.ab3@14674>   ADD.w #$7e40,-4(a4)
0002CA58 <AmiBlitz3.ab3@14675> RTS
0002CA5E <AmiBlitz3.ab3@14678>  ADD.w #$7e00,-4(a4)
0002CA60 <AmiBlitz3.ab3@14679> RTS
0002CA66 <AmiBlitz3.ab3@14682>    MOVE.l destpointer,a0
0002CA6C <AmiBlitz3.ab3@14683>    SUB.l load_var_addr,a0
0002CA70 <AmiBlitz3.ab3@14684>    CMP.w #4,a0
0002CA74 <AmiBlitz3.ab3@14685>    BNE cmpit__org
0002CA78 <AmiBlitz3.ab3@14686>    CMP.b #3,d3
0002CA7C <AmiBlitz3.ab3@14687>    BCS cmpit__lv1
0002CA82 <AmiBlitz3.ab3@14688>    CLR.l load_var_addr
0002CA88 <AmiBlitz3.ab3@14689>    ADD.w #$9080-$200,-4(a4)
0002CA8A <AmiBlitz3.ab3@14690> RTS
0002CA8E <AmiBlitz3.ab3@14693>   CMP.b #2,d3
0002CA92 <AmiBlitz3.ab3@14694>    BNE cmpit__org
0002CA98 <AmiBlitz3.ab3@14695>    CLR.l load_var_addr
0002CA9E <AmiBlitz3.ab3@14696>    ADD.w #$8040-$200,-4(a4)
0002CAA0 <AmiBlitz3.ab3@14697> RTS
0002CAA6 <AmiBlitz3.ab3@14700>   MOVE.w regnum,D3
0002CAA8 <AmiBlitz3.ab3@14701>   OR.w D3,D1
0002CAAA <AmiBlitz3.ab3@14702>   LSL.w #8,D3
0002CAAC <AmiBlitz3.ab3@14703>   LSL.w #1,D3
0002CAAE <AmiBlitz3.ab3@14704>   OR.w D3,D1
0002CAB0 <AmiBlitz3.ab3@14705>   ADDQ.w #1,D1
0002CAB4 <AmiBlitz3.ab3@14706> BRA.w writeword
0002CAB8 <AmiBlitz3.ab3@14710>    BSR.w cmpit
0002CABC <AmiBlitz3.ab3@14713>    MOVE.w mseq(PC),D1
0002CAC0 <AmiBlitz3.ab3@14714> BRA.w cpoke
0002CAC4 <AmiBlitz3.ab3@14718>   BSR.w cmpit
0002CAC8 <AmiBlitz3.ab3@14721>   MOVE.w msne(PC),D1
0002CACC <AmiBlitz3.ab3@14722> BRA.w cpoke
0002CAD0 <AmiBlitz3.ab3@14726>   BSR.w cmpit
0002CAD4 <AmiBlitz3.ab3@14729>    MOVE.w mslt(PC),D1
0002CAD8 <AmiBlitz3.ab3@14730> BRA.w cpoke
0002CADC <AmiBlitz3.ab3@14734>    BSR.w cmpit
0002CAE0 <AmiBlitz3.ab3@14737>    MOVE.w msle(PC),D1
0002CAE4 <AmiBlitz3.ab3@14738> BRA.w cpoke
0002CAE8 <AmiBlitz3.ab3@14742>    BSR.w cmpit
0002CAEC <AmiBlitz3.ab3@14745>    MOVE.w msgt(PC),D1
0002CAF0 <AmiBlitz3.ab3@14746> BRA.w cpoke
0002CAF4 <AmiBlitz3.ab3@14750>   BSR.w cmpit
0002CAF8 <AmiBlitz3.ab3@14753>    MOVE.w msge(PC),D1
0002CAFE <AmiBlitz3.ab3@14756>    OR.w regnum,D1
0002CB02 <AmiBlitz3.ab3@14757>    CMP.w #5,d2
0002CB06 <AmiBlitz3.ab3@14758>    BNE cpoke__nod0
0002CB0A <AmiBlitz3.ab3@14759>    CMP.w #5,d3
0002CB0E <AmiBlitz3.ab3@14760>    BNE cpoke__nod0
0002CB10 <AmiBlitz3.ab3@14761>    MOVE.l d1,-(a7)
0002CB16 <AmiBlitz3.ab3@14762>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002CB1A <AmiBlitz3.ab3@14763>    BSR writelong
0002CB1C <AmiBlitz3.ab3@14764>    MOVE.l (a7)+,d1
0002CB20 <AmiBlitz3.ab3@14767>    BSR.w writeword                                         ;writeseq
0002CB22 <AmiBlitz3.ab3@14768>    MOVEQ.l #1,d2
0002CB28 <AmiBlitz3.ab3@14769>    MOVE.l lasttoken,d1
0002CB2E <AmiBlitz3.ab3@14770>     TST.b fast
0002CB32 <AmiBlitz3.ab3@14771>     BEQ.s cpoke__l11
0002CB38 <AmiBlitz3.ab3@14772>    CMP.l #$800b,d1
0002CB3C <AmiBlitz3.ab3@14773>    BEQ cpoke__l10
0002CB40 <AmiBlitz3.ab3@14776>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002CB46 <AmiBlitz3.ab3@14777>   OR.w regnum,D1
0002CB4A <AmiBlitz3.ab3@14778>    BSR.w writeword                                         ;writeext.w
0002CB4C <AmiBlitz3.ab3@14779>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002CB4E <AmiBlitz3.ab3@14782> RTS
0002CB52 <AmiBlitz3.ab3@14787>   MOVE.w #$D040,D1
0002CB54 <AmiBlitz3.ab3@14788>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002CB58 <AmiBlitz3.ab3@14789> BRA.w doplus2
0002CB5C <AmiBlitz3.ab3@14793>   MOVE.w #$D040,D1
0002CB5E <AmiBlitz3.ab3@14794>   MOVEQ.l #$03,D2                                          ;now a long
0002CB62 <AmiBlitz3.ab3@14795>    BSR.w doplus2
0002CB66 <AmiBlitz3.ab3@14796> BRA.w convert_word_to_long
0002CB6A <AmiBlitz3.ab3@14800>   MOVE.w #$D080,D1                                         ;writeaddlong
0002CB6C <AmiBlitz3.ab3@14803>   MOVE.w d1,a1
0002CB72 <AmiBlitz3.ab3@14804>   TST.b fast
0002CB76 <AmiBlitz3.ab3@14805>   BEQ doplus2__l10
0002CB78 <AmiBlitz3.ab3@14809>   ASR.w #8,d1
0002CB7C <AmiBlitz3.ab3@14810>   CMP.b #$90,d1
0002CB80 <AmiBlitz3.ab3@14811>   BEQ doplus2__sub1
0002CB84 <AmiBlitz3.ab3@14812>   CMP.b #$d0,d1
0002CB88 <AmiBlitz3.ab3@14813>   BNE doplus2__l10
0002CB8C <AmiBlitz3.ab3@14814>   CMP.b #3,d3
0002CB90 <AmiBlitz3.ab3@14815>   BCS doplus2__lq10
0002CB96 <AmiBlitz3.ab3@14816>   TST.b quickadd
0002CB9C <AmiBlitz3.ab3@14820>    MOVE.l destpointer,a0
0002CBA2 <AmiBlitz3.ab3@14821>    CLR.b quickadd
0002CBA8 <AmiBlitz3.ab3@14822>    CLR.l load_var_addr
0002CBAE <AmiBlitz3.ab3@14823>    SUB.l imm_addr,a0
0002CBB2 <AmiBlitz3.ab3@14824>    CMP.w #6,a0
0002CBB6 <AmiBlitz3.ab3@14825>    BEQ doplus2__li10
0002CBBA <AmiBlitz3.ab3@14826>    CMP.w #4,a0
0002CBBE <AmiBlitz3.ab3@14827>    BNE.s doplus2__li1
0002CBC4 <AmiBlitz3.ab3@14828>    CLR.l imm_addr
0002CBCA <AmiBlitz3.ab3@14829>    ADD.w #$a040-$200,-4(a4)
0002CBCC <AmiBlitz3.ab3@14830> RTS
0002CBCE <AmiBlitz3.ab3@14833>    MOVE.l a4,a0
0002CBD4 <AmiBlitz3.ab3@14834>    SUB.l load_var_addr,a0
0002CBDA <AmiBlitz3.ab3@14835>    CMP.l #$a,a0
0002CBDE <AmiBlitz3.ab3@14836>    BNE doplus2__l10e
0002CBE4 <AmiBlitz3.ab3@14837>    CLR.l load_var_addr
0002CBE8 <AmiBlitz3.ab3@14838>    MOVE.w -$8(a4),d1
0002CBEE <AmiBlitz3.ab3@14839>    MOVE.l -$4(a4),-$8(a4)
0002CBF2 <AmiBlitz3.ab3@14840>    MOVE.w d1,-$4(a4)
0002CBF8 <AmiBlitz3.ab3@14841>    SUB.w #$1980,-$a(a4)
0002CBFE <AmiBlitz3.ab3@14842>    SUBQ.l #2,destpointer
0002CC00 <AmiBlitz3.ab3@14843> RTS
0002CC06 <AmiBlitz3.ab3@14846>   CLR.b quickadd
0002CC0A <AmiBlitz3.ab3@14847> BRA doplus2__l10
0002CC10 <AmiBlitz3.ab3@14850>    CLR.l imm_addr
0002CC14 <AmiBlitz3.ab3@14851>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002CC18 <AmiBlitz3.ab3@14852>    BNE doplus2__doit
0002CC1E <AmiBlitz3.ab3@14853>    SUBQ.l #6,destpointer
0002CC20 <AmiBlitz3.ab3@14854> RTS
0002CC26 <AmiBlitz3.ab3@14857>    ADD.w #$b080-$200,-6(a4)
0002CC28 <AmiBlitz3.ab3@14858> RTS
0002CC2E <AmiBlitz3.ab3@14861>    MOVE.l destpointer,a0
0002CC34 <AmiBlitz3.ab3@14862>    SUB.l load_var_addr,a0
0002CC38 <AmiBlitz3.ab3@14863>    CMP.w #4,a0
0002CC3C <AmiBlitz3.ab3@14864>    BNE doplus2__l10
0002CC40 <AmiBlitz3.ab3@14865>    CMP.b #3,d3
0002CC44 <AmiBlitz3.ab3@14866>    BNE doplus2__lv1
0002CC4A <AmiBlitz3.ab3@14867>    CLR.l load_var_addr
0002CC50 <AmiBlitz3.ab3@14868>    ADD.w #$b080-$200,-4(a4)
0002CC52 <AmiBlitz3.ab3@14869> RTS
0002CC56 <AmiBlitz3.ab3@14872>   CMP.b #2,d3
0002CC5A <AmiBlitz3.ab3@14873>   BNE doplus2__l10
0002CC60 <AmiBlitz3.ab3@14874>   CLR.l load_var_addr
0002CC66 <AmiBlitz3.ab3@14875>   ADD.w #$a040-$200,-4(a4)
0002CC68 <AmiBlitz3.ab3@14876> RTS
0002CC6E <AmiBlitz3.ab3@14879>   MOVE.w regnum,D3
0002CC70 <AmiBlitz3.ab3@14880>   MOVE.w a1,d1
0002CC72 <AmiBlitz3.ab3@14881>   OR.w D3,D1
0002CC74 <AmiBlitz3.ab3@14882>   ADDQ.w #1,D1
0002CC76 <AmiBlitz3.ab3@14883>   LSL.w #8,D3
0002CC78 <AmiBlitz3.ab3@14884>   LSL.w #1,D3
0002CC7A <AmiBlitz3.ab3@14885>   OR.w D3,D1
0002CC7E <AmiBlitz3.ab3@14886> BRA.w writeword
0002CC82 <AmiBlitz3.ab3@14889>    CMP.b #3,d3
0002CC86 <AmiBlitz3.ab3@14890>    BCS doplus2__sub1_lq10
0002CC8C <AmiBlitz3.ab3@14891>    TST.b quickadd
0002CC92 <AmiBlitz3.ab3@14895>    MOVE.l destpointer,a0
0002CC98 <AmiBlitz3.ab3@14896>    CLR.b quickadd
0002CC9E <AmiBlitz3.ab3@14897>    CLR.l load_var_addr
0002CCA4 <AmiBlitz3.ab3@14898>    SUB.l imm_addr,a0
0002CCA8 <AmiBlitz3.ab3@14899>    CMP.w #6,a0
0002CCAC <AmiBlitz3.ab3@14900>    BEQ doplus2__sub1_li10
0002CCB0 <AmiBlitz3.ab3@14901>    CMP.w #4,a0
0002CCB4 <AmiBlitz3.ab3@14902>    BNE.s doplus2__sub1_li1
0002CCBA <AmiBlitz3.ab3@14903>    CLR.l imm_addr
0002CCC0 <AmiBlitz3.ab3@14904>    ADD.w #$6040-$200,-4(a4)
0002CCC2 <AmiBlitz3.ab3@14905> RTS
0002CCC4 <AmiBlitz3.ab3@14908>    MOVE.l a4,a0
0002CCCA <AmiBlitz3.ab3@14909>     SUB.l load_var_addr,a0
0002CCD0 <AmiBlitz3.ab3@14910>     CMP.l #$a,a0
0002CCD4 <AmiBlitz3.ab3@14911>     BNE doplus2__sub1_l10e
0002CCDA <AmiBlitz3.ab3@14912>    CLR.l load_var_addr
0002CCDE <AmiBlitz3.ab3@14913>    MOVE.w -$8(a4),d1
0002CCE4 <AmiBlitz3.ab3@14914>    MOVE.l -$4(a4),-$8(a4)
0002CCE8 <AmiBlitz3.ab3@14915>    MOVE.w d1,-$4(a4)
0002CCEE <AmiBlitz3.ab3@14916>    SUB.w #$1b80,-$a(a4)
0002CCF4 <AmiBlitz3.ab3@14917>    SUBQ.l #2,destpointer
0002CCF6 <AmiBlitz3.ab3@14918> RTS
0002CCFC <AmiBlitz3.ab3@14921>   CLR.b quickadd
0002CD00 <AmiBlitz3.ab3@14922> BRA doplus2__sub1_l10
0002CD06 <AmiBlitz3.ab3@14925>    CLR.l imm_addr
0002CD0C <AmiBlitz3.ab3@14926>    ADD.w #$7080-$200,-6(a4)
0002CD0E <AmiBlitz3.ab3@14927> RTS
0002CD14 <AmiBlitz3.ab3@14930>    MOVE.l destpointer,a0
0002CD1A <AmiBlitz3.ab3@14931>    SUB.l load_var_addr,a0
0002CD1E <AmiBlitz3.ab3@14932>    CMP.w #4,a0
0002CD22 <AmiBlitz3.ab3@14933>    BNE doplus2__sub1_l10
0002CD26 <AmiBlitz3.ab3@14934>    CMP.b #3,d3
0002CD2A <AmiBlitz3.ab3@14935>    BNE doplus2__sub1_lv1
0002CD30 <AmiBlitz3.ab3@14936>    CLR.l load_var_addr
0002CD36 <AmiBlitz3.ab3@14937>    ADD.w #$7080-$200,-4(a4)
0002CD38 <AmiBlitz3.ab3@14938> RTS
0002CD3C <AmiBlitz3.ab3@14941>    CMP.b #2,d3
0002CD40 <AmiBlitz3.ab3@14942>    BNE doplus2__sub1_l10
0002CD46 <AmiBlitz3.ab3@14943>    CLR.l load_var_addr
0002CD4C <AmiBlitz3.ab3@14944>    ADD.w #$6040-$200,-4(a4)
0002CD4E <AmiBlitz3.ab3@14945> RTS
0002CD54 <AmiBlitz3.ab3@14948>   MOVE.w regnum,D3
0002CD56 <AmiBlitz3.ab3@14949>   MOVE.w a1,d1
0002CD58 <AmiBlitz3.ab3@14950>   OR.w D3,D1
0002CD5A <AmiBlitz3.ab3@14951>   ADDQ.w #1,D1
0002CD5C <AmiBlitz3.ab3@14952>   LSL.w #8,D3
0002CD5E <AmiBlitz3.ab3@14953>   LSL.w #1,D3
0002CD60 <AmiBlitz3.ab3@14954>   OR.w D3,D1
0002CD64 <AmiBlitz3.ab3@14955> BRA.w writeword
0002CD66 <AmiBlitz3.ab3@14959>   MOVEQ #0,d0
0002CD6C <AmiBlitz3.ab3@14960>   MOVE.w regnum,d0
0002CD6E <AmiBlitz3.ab3@14961>   ADDQ #1,d0
0002CD70 <AmiBlitz3.ab3@14962>   ASL.w #8,d0
0002CD72 <AmiBlitz3.ab3@14963>   ASL.w #2,d0
0002CD78 <AmiBlitz3.ab3@14964>   MOVE.l #$f2000022,d1                                     ;fpu add
0002CD7A <AmiBlitz3.ab3@14965>   OR.l d0,d1
0002CD80 <AmiBlitz3.ab3@14966>   MOVE.w regnum,d0
0002CD82 <AmiBlitz3.ab3@14967>   ASL.w #7,d0
0002CD84 <AmiBlitz3.ab3@14968>   OR.l d0,d1
0002CD88 <AmiBlitz3.ab3@14969> BRA.w writelong
0002CD8E <AmiBlitz3.ab3@14975>   TST.b iee
0002CD92 <AmiBlitz3.ab3@14976>   BNE do_plus_float__fadd1
0002CD96 <AmiBlitz3.ab3@14977>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002CD9C <AmiBlitz3.ab3@14980>    MOVE.w D1,libjsr+2
0002CDA0 <AmiBlitz3.ab3@14981>    BSR.w JL_0_AD40
0002CDA2 <AmiBlitz3.ab3@14982>   MOVE.l D4,D1
0002CDA6 <AmiBlitz3.ab3@14983>    BSR.w JL_0_AD38
0002CDAA <AmiBlitz3.ab3@14984>   MOVE.w #$C900,D1
0002CDAE <AmiBlitz3.ab3@14985>    BSR.w Atokejsr
0002CDB2 <AmiBlitz3.ab3@14986>    BSR.w JL_0_A352
0002CDB8 <AmiBlitz3.ab3@14987>   MOVE.l libjsr,D1
0002CDBC <AmiBlitz3.ab3@14988>    BSR.w writelong
0002CDC0 <AmiBlitz3.ab3@14989>    BSR.w JL_0_A36E
0002CDC2 <AmiBlitz3.ab3@14990>   MOVE.l D5,D1
0002CDC6 <AmiBlitz3.ab3@14991> BRA.w JL_0_AD38
0002CDCC <AmiBlitz3.ab3@14995>   MOVE.w regnum,D1
0002CDCE <AmiBlitz3.ab3@14996>   LSL.w #8,D1
0002CDD0 <AmiBlitz3.ab3@14997>   LSL.w #1,D1
0002CDD2 <AmiBlitz3.ab3@14998>   MOVE.w D1,-(A7)
0002CDD6 <AmiBlitz3.ab3@14999>   CMP.w #3072,d1
0002CDDA <AmiBlitz3.ab3@15000>   BEQ 'l1
0002CDE0 <AmiBlitz3.ab3@15001>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002CDE4 <AmiBlitz3.ab3@15002> BRA 'l2
0002CDE8 <AmiBlitz3.ab3@15005>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002CDEC <AmiBlitz3.ab3@15008>    BSR.w writeword
0002CDEE <AmiBlitz3.ab3@15009>   MOVE.w (A7)+,D1
0002CDF4 <AmiBlitz3.ab3@15010>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002CDF8 <AmiBlitz3.ab3@15011> BRA.w writeword
0002CDFC <AmiBlitz3.ab3@15017>   MOVE.w #$9040,D1
0002CE00 <AmiBlitz3.ab3@15018> BRA.w doplus2
0002CE04 <AmiBlitz3.ab3@15022>   MOVE.w #$9040,D1
0002CE08 <AmiBlitz3.ab3@15023> BRA.w doplus2
0002CE0C <AmiBlitz3.ab3@15027>   MOVE.w #$9080,D1
0002CE10 <AmiBlitz3.ab3@15028> BRA.w doplus2
0002CE16 <AmiBlitz3.ab3@15032>    TST.b iee
0002CE1A <AmiBlitz3.ab3@15033>     BNE do_minus_float__fs1
0002CE1E <AmiBlitz3.ab3@15034>   MOVE.w #$FFB8,D1                                         ;floatsub
0002CE22 <AmiBlitz3.ab3@15035> BRA.w doflib
0002CE24 <AmiBlitz3.ab3@15038>   MOVEQ #0,d0
0002CE2A <AmiBlitz3.ab3@15039>   MOVE.w regnum,d0
0002CE2C <AmiBlitz3.ab3@15040>   ADDQ #1,d0
0002CE2E <AmiBlitz3.ab3@15041>   ASL.w #8,d0
0002CE30 <AmiBlitz3.ab3@15042>   ASL.w #2,d0
0002CE36 <AmiBlitz3.ab3@15043>   MOVE.l #$f2000028,d1
0002CE38 <AmiBlitz3.ab3@15044>   OR.l d0,d1
0002CE3E <AmiBlitz3.ab3@15045>   MOVE.w regnum,d0
0002CE40 <AmiBlitz3.ab3@15046>   ASL.w #7,d0
0002CE42 <AmiBlitz3.ab3@15047>   OR.l d0,d1
0002CE46 <AmiBlitz3.ab3@15048> BRA.w writelong
0002CE4A <AmiBlitz3.ab3@15054>   MOVE.w #$C1C0,D1
0002CE4C <AmiBlitz3.ab3@15055>   MOVEQ.l #$02,D2                                          ;now a word
0002CE50 <AmiBlitz3.ab3@15056> BRA.w doplus2
0002CE54 <AmiBlitz3.ab3@15060>   MOVE.w #$C1C0,D1
0002CE56 <AmiBlitz3.ab3@15061>   MOVEQ.l #$03,D2                                          ;now a long.
0002CE5A <AmiBlitz3.ab3@15062> BRA.w doplus2
0002CE5E <AmiBlitz3.ab3@15066>   MOVE.w #$CA00,D1                                         ;quickmul
0002CE62 <AmiBlitz3.ab3@15067> BRA.w domylib
0002CE68 <AmiBlitz3.ab3@15071>   TST.b fast
0002CE6C <AmiBlitz3.ab3@15072>   BNE.s 'l10
0002CE70 <AmiBlitz3.ab3@15073>   MOVE.w #$CA01,D1                                         ;writelongmul
0002CE74 <AmiBlitz3.ab3@15074> BRA.w domylib
0002CE7A <AmiBlitz3.ab3@15083>    MOVE.l destpointer,a0
0002CE80 <AmiBlitz3.ab3@15084>    SUB.l imm_addr,a0
0002CE84 <AmiBlitz3.ab3@15085>    CMP.w #6,a0
0002CE88 <AmiBlitz3.ab3@15086>    BNE 'li1
0002CE8A <AmiBlitz3.ab3@15087>    MOVEQ.l #2,d1
0002CE8C <AmiBlitz3.ab3@15088>    MOVEQ #1,d3
0002CE90 <AmiBlitz3.ab3@15091>   CMP.l -4(a4),d1
0002CE94 <AmiBlitz3.ab3@15092>    BEQ 'oklsl
0002CE96 <AmiBlitz3.ab3@15093>     LSL.l #1,d1
0002CE9C <AmiBlitz3.ab3@15094>     ADD.l #1,d3
0002CEA2 <AmiBlitz3.ab3@15095>     CMP.l #9,d3
0002CEA6 <AmiBlitz3.ab3@15096>     BNE 'ag
0002CEAA <AmiBlitz3.ab3@15097>    MOVE.w -2(a4),d1
0002CEAE <AmiBlitz3.ab3@15098>    BSR writeword
0002CEB4 <AmiBlitz3.ab3@15099>    MOVE.w -6(a4),-4(a4)
0002CEBC <AmiBlitz3.ab3@15100>    MOVE.l #$4c3c0800,-8(a4)
0002CEC2 <AmiBlitz3.ab3@15101>    MOVE.w regnum,D3
0002CEC6 <AmiBlitz3.ab3@15102>    MULS #$1000,D3
0002CECA <AmiBlitz3.ab3@15103>    OR.w D3,-6(a4)
0002CED0 <AmiBlitz3.ab3@15104>    CLR.l load_var_addr
0002CED6 <AmiBlitz3.ab3@15105>    CLR.l imm_addr
0002CEDA <AmiBlitz3.ab3@15106> BRA 'li3
0002CEDE <AmiBlitz3.ab3@15109>    CMP.w #8,d3
0002CEE2 <AmiBlitz3.ab3@15110>    BEQ 'ok
0002CEE4 <AmiBlitz3.ab3@15111>    ASL.l #1,d3
0002CEE6 <AmiBlitz3.ab3@15112>    ASL.l #8,d3
0002CEEA <AmiBlitz3.ab3@15113>    MOVE.w #$e188,d1
0002CEEC <AmiBlitz3.ab3@15114>    OR.w d3,d1
0002CEF0 <AmiBlitz3.ab3@15115>    MOVE.w d1,-6(a4)
0002CEF4 <AmiBlitz3.ab3@15116> BRA 'okls
0002CEFA <AmiBlitz3.ab3@15119>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002CF00 <AmiBlitz3.ab3@15122>   MOVE.w regnum,d3
0002CF04 <AmiBlitz3.ab3@15123>    OR.b d3,-5(a4)
0002CF0A <AmiBlitz3.ab3@15124>    SUBQ.l #4,destpointer
0002CF10 <AmiBlitz3.ab3@15125>    CLR.l load_var_addr
0002CF16 <AmiBlitz3.ab3@15126>    CLR.l imm_addr
0002CF1A <AmiBlitz3.ab3@15127> BRA 'li3
0002CF20 <AmiBlitz3.ab3@15130>    MOVE.l destpointer,a0
0002CF26 <AmiBlitz3.ab3@15131>    SUB.l load_var_addr,a0
0002CF2A <AmiBlitz3.ab3@15132>    CMP.w #4,a0
0002CF2E <AmiBlitz3.ab3@15133>    BNE 'li2
0002CF32 <AmiBlitz3.ab3@15134>    MOVE.w -2(a4),d1
0002CF36 <AmiBlitz3.ab3@15135>    BSR writeword
0002CF3C <AmiBlitz3.ab3@15136>    MOVE.b #$4c,-6(a4)
0002CF42 <AmiBlitz3.ab3@15137>    MOVE.w #$0800,-4(a4)
0002CF48 <AmiBlitz3.ab3@15138>    MOVE.w regnum,D3
0002CF4C <AmiBlitz3.ab3@15139>    MULS #$1000,d3
0002CF50 <AmiBlitz3.ab3@15140>    OR.w D3,-4(a4)
0002CF54 <AmiBlitz3.ab3@15141> BRA 'li3
0002CF5A <AmiBlitz3.ab3@15144>    MOVE.l #$4c010800,d1
0002CF60 <AmiBlitz3.ab3@15145>    MOVE.w regnum,D3
0002CF62 <AmiBlitz3.ab3@15146>    EXT.l d3
0002CF66 <AmiBlitz3.ab3@15147>    MULS #$1000,d3
0002CF68 <AmiBlitz3.ab3@15148>    OR.w D3,d1
0002CF6C <AmiBlitz3.ab3@15149>    MULS #$10,d3
0002CF6E <AmiBlitz3.ab3@15150>    ADD.l d3,d1
0002CF72 <AmiBlitz3.ab3@15151>    BSR writelong
0002CF74 <AmiBlitz3.ab3@15156> RTS
0002CF76 <AmiBlitz3.ab3@15160>   MOVE.w D1,-(A7)
0002CF7A <AmiBlitz3.ab3@15161>    BSR.w JL_0_AD40
0002CF7C <AmiBlitz3.ab3@15162>   MOVE.l D4,D1
0002CF80 <AmiBlitz3.ab3@15163>    BSR.w JL_0_AD38
0002CF84 <AmiBlitz3.ab3@15164>    BSR.w JL_0_A352
0002CF86 <AmiBlitz3.ab3@15165>   MOVEQ #0,d1
0002CF88 <AmiBlitz3.ab3@15166>   MOVE.w (A7)+,D1
0002CF8E <AmiBlitz3.ab3@15167>   MOVE.l d1,lastinstruction
0002CF92 <AmiBlitz3.ab3@15168>    BSR.w Atokejsr
0002CF96 <AmiBlitz3.ab3@15169>    BSR.w JL_0_A36E
0002CF98 <AmiBlitz3.ab3@15170>   MOVE.l D5,D1
0002CF9C <AmiBlitz3.ab3@15171> BRA.w JL_0_AD38
0002CFA2 <AmiBlitz3.ab3@15175>    TST.b iee
0002CFA6 <AmiBlitz3.ab3@15176>     BNE fm1
0002CFAA <AmiBlitz3.ab3@15177>  MOVE.w #$FFB2,D1                                          ;floatmul
0002CFAE <AmiBlitz3.ab3@15178> BRA.w doflib
0002CFB0 <AmiBlitz3.ab3@15181>   MOVEQ #0,d0
0002CFB6 <AmiBlitz3.ab3@15182>  MOVE.w regnum,d0
0002CFB8 <AmiBlitz3.ab3@15183>  ADDQ #1,d0
0002CFBA <AmiBlitz3.ab3@15184>  ASL.w #8,d0
0002CFBC <AmiBlitz3.ab3@15185>  ASL.w #2,d0
0002CFC2 <AmiBlitz3.ab3@15186>  MOVE.l #$f2000023,d1
0002CFC4 <AmiBlitz3.ab3@15187>  OR.l d0,d1
0002CFCA <AmiBlitz3.ab3@15188>  MOVE.w regnum,d0
0002CFCC <AmiBlitz3.ab3@15189>  ASL.w #7,d0
0002CFCE <AmiBlitz3.ab3@15190>  OR.l d0,d1
0002CFD2 <AmiBlitz3.ab3@15191> BRA.w writelong
0002CFD4 <AmiBlitz3.ab3@15195>   MOVE.w D2,-(A7)                                          ;dopow
0002CFD6 <AmiBlitz3.ab3@15196>   MOVE.w D2,D3
0002CFD8 <AmiBlitz3.ab3@15197>   MOVEQ.l #$05,D2
0002CFDC <AmiBlitz3.ab3@15198>    BSR.w JL_0_9770
0002CFE2 <AmiBlitz3.ab3@15199>   ADDQ.w #1,regnum
0002CFE4 <AmiBlitz3.ab3@15200>   MOVE.w (A7)+,D3
0002CFE6 <AmiBlitz3.ab3@15201>   MOVEQ.l #$05,D2
0002CFEA <AmiBlitz3.ab3@15202>    BSR.w writeconvertcode
0002CFF0 <AmiBlitz3.ab3@15203>   SUBQ.w #1,regnum
0002CFF4 <AmiBlitz3.ab3@15204>    BSR.w nocando
0002CFFA <AmiBlitz3.ab3@15205>    TST.b fpu
0002CFFE <AmiBlitz3.ab3@15206>    BEQ 'old
0002D000 <AmiBlitz3.ab3@15207>    MOVEQ #0,d1
0002D006 <AmiBlitz3.ab3@15208>    MOVE.w regnum,d1
0002D008 <AmiBlitz3.ab3@15209>   MOVE.l d1,d0
0002D00A <AmiBlitz3.ab3@15210>   ASL.w #7,d1
0002D00C <AmiBlitz3.ab3@15211>   ASL.w #8,d0
0002D00E <AmiBlitz3.ab3@15212>   ASL.w #2,d0
0002D010 <AmiBlitz3.ab3@15213>   OR.w d0,d1
0002D012 <AmiBlitz3.ab3@15214>   MOVE.l d1,-(a7)
0002D018 <AmiBlitz3.ab3@15216>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D01C <AmiBlitz3.ab3@15217>    BSR writelong
0002D022 <AmiBlitz3.ab3@15218>    MOVE.w regnum,d0
0002D024 <AmiBlitz3.ab3@15219>  ADDQ #1,d0
0002D026 <AmiBlitz3.ab3@15220>  ASL.w #8,d0
0002D028 <AmiBlitz3.ab3@15221>  ASL.w #2,d0
0002D02E <AmiBlitz3.ab3@15222>  MOVE.l #$f2000023,d1
0002D030 <AmiBlitz3.ab3@15223>  OR.l d0,d1
0002D036 <AmiBlitz3.ab3@15224>  MOVE.w regnum,d0
0002D038 <AmiBlitz3.ab3@15225>  ASL.w #7,d0
0002D03A <AmiBlitz3.ab3@15226>  OR.l d0,d1
0002D040 <AmiBlitz3.ab3@15227>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D044 <AmiBlitz3.ab3@15228>    BSR writelong
0002D046 <AmiBlitz3.ab3@15229>    MOVE.l (a7)+,d1
0002D04C <AmiBlitz3.ab3@15231>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D050 <AmiBlitz3.ab3@15232>    BSR writelong
0002D052 <AmiBlitz3.ab3@15233> RTS
0002D056 <AmiBlitz3.ab3@15236>   MOVE.w #$6001,D1
0002D05A <AmiBlitz3.ab3@15237> BRA.w domylib
0002D05E <AmiBlitz3.ab3@15243>   MOVEA.l forthsp(PC),A0
0002D062 <AmiBlitz3.ab3@15244>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D064 <AmiBlitz3.ab3@15245> RTS
0002D068 <AmiBlitz3.ab3@15251>   MOVE.w #$D400,D1
0002D06C <AmiBlitz3.ab3@15252> BRA.w domylib
0002D070 <AmiBlitz3.ab3@15256>   MOVE.w #$D401,D1
0002D074 <AmiBlitz3.ab3@15257> BRA.w domylib
0002D078 <AmiBlitz3.ab3@15261>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D07C <AmiBlitz3.ab3@15262>   MOVE.w #$D402,D1
0002D080 <AmiBlitz3.ab3@15263> BRA.w domylib
0002D084 <AmiBlitz3.ab3@15267>   MOVE.w #$D403,D1
0002D086 <AmiBlitz3.ab3@15268>   MOVEQ.l #$02,D2                                          ;now a word.
0002D08A <AmiBlitz3.ab3@15269> BRA.w domylib
0002D08E <AmiBlitz3.ab3@15273>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D094 <AmiBlitz3.ab3@15274>   TST.b fpu
0002D098 <AmiBlitz3.ab3@15275>   BEQ 'old
0002D09A <AmiBlitz3.ab3@15276>   MOVEQ #0,d1
0002D0A0 <AmiBlitz3.ab3@15277>   MOVE.w regnum,d1                                         ;fpu mod
0002D0A2 <AmiBlitz3.ab3@15278>   MOVE.l d1,d0
0002D0A4 <AmiBlitz3.ab3@15279>   ADDQ.l #1,d1
0002D0A6 <AmiBlitz3.ab3@15280>   ASL.l #7,d0
0002D0A8 <AmiBlitz3.ab3@15281>   ASL.l #8,d1
0002D0AA <AmiBlitz3.ab3@15282>   ASL.l #2,d1
0002D0AC <AmiBlitz3.ab3@15283>   OR.l d0,d1
0002D0AE <AmiBlitz3.ab3@15284>   MOVE.l d0,-(a7)
0002D0B4 <AmiBlitz3.ab3@15285>   OR.l #$f2000021,d1
0002D0B8 <AmiBlitz3.ab3@15286>   BSR writelong
0002D0BA <AmiBlitz3.ab3@15287>   MOVE.l (a7)+,d0
0002D0BC <AmiBlitz3.ab3@15288>  RTS
0002D0C0 <AmiBlitz3.ab3@15291>   MOVE.w #$D404,D1
0002D0C2 <AmiBlitz3.ab3@15292>   MOVEQ.l #$03,D2                                          ;now a long
0002D0C6 <AmiBlitz3.ab3@15293> BRA.w domylib
0002D0CA <AmiBlitz3.ab3@15301>   MOVE.w #$48C0,D1
0002D0D0 <AmiBlitz3.ab3@15302>   OR.w regnum,D1
0002D0D4 <AmiBlitz3.ab3@15303>    BSR.w writeword
0002D0D6 <AmiBlitz3.ab3@15304>   ADDQ.w #1,D1
0002D0DA <AmiBlitz3.ab3@15305>    BSR.w writeword
0002D0DE <AmiBlitz3.ab3@15308>    MOVE.w #$48C0,D1
0002D0E4 <AmiBlitz3.ab3@15309>   OR.w regnum,D1
0002D0E8 <AmiBlitz3.ab3@15310>    BSR.w writeword
0002D0EC <AmiBlitz3.ab3@15311>   MOVE.w #$81C0,D1
0002D0F0 <AmiBlitz3.ab3@15312> BRA.w doplus2
0002D0F6 <AmiBlitz3.ab3@15316>   TST.b fast
0002D0FA <AmiBlitz3.ab3@15317>   BNE.s 'l10
0002D0FE <AmiBlitz3.ab3@15318>   MOVE.w #$CB01,D1
0002D102 <AmiBlitz3.ab3@15319> BRA.w domylib
0002D106 <AmiBlitz3.ab3@15325>   BSR.w JL_0_AD40
0002D108 <AmiBlitz3.ab3@15326>   MOVE.l D4,D1
0002D10C <AmiBlitz3.ab3@15327>    BSR.w JL_0_AD38
0002D110 <AmiBlitz3.ab3@15328>    BSR.w JL_0_A352
0002D116 <AmiBlitz3.ab3@15342>    MOVE.l #$4c410800,d1
0002D11A <AmiBlitz3.ab3@15343>    BSR writelong
0002D11E <AmiBlitz3.ab3@15346>   MOVE.w #$4e71,d1
0002D122 <AmiBlitz3.ab3@15348>    BSR.w JL_0_A36E
0002D124 <AmiBlitz3.ab3@15349>   MOVE.l D5,D1
0002D128 <AmiBlitz3.ab3@15350> BRA.w JL_0_AD38
0002D12C <AmiBlitz3.ab3@15353>     CMP.w #8,d3
0002D130 <AmiBlitz3.ab3@15354>     BEQ 'ok
0002D132 <AmiBlitz3.ab3@15355>     ASL.l #1,d3
0002D134 <AmiBlitz3.ab3@15356>     ASL.l #8,d3
0002D138 <AmiBlitz3.ab3@15357>     MOVE.w #$e080,d1
0002D13A <AmiBlitz3.ab3@15358>     OR.w d3,d1
0002D13E <AmiBlitz3.ab3@15359> BRA 'oklsr2
0002D142 <AmiBlitz3.ab3@15362>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D148 <AmiBlitz3.ab3@15365>      SUBQ.l #6,destpointer
0002D14C <AmiBlitz3.ab3@15366>      BSR writeword
0002D14E <AmiBlitz3.ab3@15367>      MOVE.l (a7)+,d3
0002D150 <AmiBlitz3.ab3@15368>      MOVEQ #0,d1
0002D156 <AmiBlitz3.ab3@15369>      CLR.l load_var_addr
0002D15C <AmiBlitz3.ab3@15370>      CLR.l imm_addr
0002D160 <AmiBlitz3.ab3@15371> BRA JL_0_AD38
0002D164 <AmiBlitz3.ab3@15375>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D168 <AmiBlitz3.ab3@15376> BRA.w domylib
0002D16E <AmiBlitz3.ab3@15380>    TST.b iee
0002D172 <AmiBlitz3.ab3@15381>    BNE fdiv1
0002D176 <AmiBlitz3.ab3@15382>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D17A <AmiBlitz3.ab3@15383> BRA.w doflib
0002D17C <AmiBlitz3.ab3@15387>   MOVEQ #0,d0
0002D182 <AmiBlitz3.ab3@15388>   MOVE.w regnum,d0
0002D184 <AmiBlitz3.ab3@15389>   ADDQ #1,d0
0002D186 <AmiBlitz3.ab3@15390>   ASL.w #8,d0
0002D188 <AmiBlitz3.ab3@15391>   ASL.w #2,d0
0002D18E <AmiBlitz3.ab3@15392>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D190 <AmiBlitz3.ab3@15393>   OR.l d0,d1
0002D196 <AmiBlitz3.ab3@15394>   MOVE.w regnum,d0
0002D198 <AmiBlitz3.ab3@15395>   ASL.w #7,d0
0002D19A <AmiBlitz3.ab3@15396>   OR.l d0,d1
0002D19E <AmiBlitz3.ab3@15397> BRA.w writelong
0002D1A2 <AmiBlitz3.ab3@15401>   MOVE.w #$C000,D1
0002D1A6 <AmiBlitz3.ab3@15402> BRA.w doplus2
0002D1AA <AmiBlitz3.ab3@15406>   MOVE.w #$C040,D1
0002D1AE <AmiBlitz3.ab3@15407> BRA.w doplus2
0002D1B2 <AmiBlitz3.ab3@15411>   MOVE.w #$C080,D1
0002D1B6 <AmiBlitz3.ab3@15412> BRA.w doplus2
0002D1BA <AmiBlitz3.ab3@15416>   MOVE.w #$8000,D1
0002D1BE <AmiBlitz3.ab3@15417> BRA.w doplus2
0002D1C2 <AmiBlitz3.ab3@15421>   MOVE.w #$8040,D1
0002D1C6 <AmiBlitz3.ab3@15422> BRA.w doplus2
0002D1CA <AmiBlitz3.ab3@15426>   MOVE.w #$8080,D1
0002D1CE <AmiBlitz3.ab3@15427> BRA.w doplus2
0002D1D2 <AmiBlitz3.ab3@15431>   MOVE.w #$B100,D1
0002D1D8 <AmiBlitz3.ab3@15434>    MOVE.w regnum,D3
0002D1DA <AmiBlitz3.ab3@15435>   OR.w D3,D1
0002D1DC <AmiBlitz3.ab3@15436>   ADDQ.w #1,D3
0002D1DE <AmiBlitz3.ab3@15437>   LSL.w #8,D3
0002D1E0 <AmiBlitz3.ab3@15438>   LSL.w #1,D3
0002D1E2 <AmiBlitz3.ab3@15439>   OR.w D3,D1
0002D1E6 <AmiBlitz3.ab3@15440> BRA.w writeword
0002D1EA <AmiBlitz3.ab3@15444>   MOVE.w #$B140,D1
0002D1EE <AmiBlitz3.ab3@15445> BRA.w JL_0_A25C
0002D1F2 <AmiBlitz3.ab3@15449>   MOVE.w #$B180,D1
0002D1F6 <AmiBlitz3.ab3@15450> BRA.w JL_0_A25C
0002D1FA <AmiBlitz3.ab3@15454>   MOVE.w #$E1A8,D1
0002D1FE <AmiBlitz3.ab3@15455> BRA.w JL_0_A298
0002D202 <AmiBlitz3.ab3@15459>   MOVE.w #$E0A8,D1
0002D206 <AmiBlitz3.ab3@15460> BRA.w JL_0_A298
0002D20A <AmiBlitz3.ab3@15464>   MOVE.w #$E0A0,D1
0002D20E <AmiBlitz3.ab3@15465> BRA.w JL_0_A298
0002D210 <AmiBlitz3.ab3@15469>   MOVE.w D1,-(A7)
0002D216 <AmiBlitz3.ab3@15470>   ADDQ.w #1,regnum
0002D218 <AmiBlitz3.ab3@15471>   MOVE.w D2,-(A7)
0002D21A <AmiBlitz3.ab3@15472>   MOVE.w D2,D3
0002D21C <AmiBlitz3.ab3@15473>   MOVEQ.l #$02,D2
0002D220 <AmiBlitz3.ab3@15478>    BSR.w writeconvertcode
0002D222 <AmiBlitz3.ab3@15480>   MOVE.w (A7)+,D2
0002D228 <AmiBlitz3.ab3@15481>   SUBQ.w #1,regnum
0002D22C <AmiBlitz3.ab3@15482>   CMP.w #$4,D2
0002D230 <AmiBlitz3.ab3@15483>    BEQ.w JL_0_A2C2
0002D232 <AmiBlitz3.ab3@15484>   MOVE.w D2,D3
0002D234 <AmiBlitz3.ab3@15485>   MOVEQ.l #$03,D2
0002D238 <AmiBlitz3.ab3@15486>    BSR.w JL_0_9770
0002D23A <AmiBlitz3.ab3@15489>    MOVE.w (A7)+,D1
0002D240 <AmiBlitz3.ab3@15490>   MOVE.w regnum,D3
0002D242 <AmiBlitz3.ab3@15491>   OR.w D3,D1
0002D244 <AmiBlitz3.ab3@15492>   ADDQ.w #1,D3
0002D246 <AmiBlitz3.ab3@15493>   LSL.w #8,D3
0002D248 <AmiBlitz3.ab3@15494>   LSL.w #1,D3
0002D24A <AmiBlitz3.ab3@15495>   OR.w D3,D1
0002D24E <AmiBlitz3.ab3@15496> BRA.w writeword
0002D252 <AmiBlitz3.ab3@15500>   MOVE.w #$0100,D1
0002D256 <AmiBlitz3.ab3@15501>    BSR.w JL_0_A31C
0002D25C <AmiBlitz3.ab3@15502>   MOVE.w regnum,D1
0002D260 <AmiBlitz3.ab3@15503>   ORI.w #$56C0,D1
0002D264 <AmiBlitz3.ab3@15504>    BSR.w writeword
0002D26A <AmiBlitz3.ab3@15505>   MOVE.w regnum,D1
0002D26E <AmiBlitz3.ab3@15506>   ORI.w #$4880,D1
0002D272 <AmiBlitz3.ab3@15507>    BSR.w writeword
0002D274 <AmiBlitz3.ab3@15508>   MOVEQ.l #$02,D2
0002D276 <AmiBlitz3.ab3@15509> RTS
0002D27A <AmiBlitz3.ab3@15513>   MOVE.w #$01C0,D1
0002D27E <AmiBlitz3.ab3@15516>    BSR.w JL_0_A31C
0002D280 <AmiBlitz3.ab3@15517>   MOVEQ.l #$03,D2
0002D282 <AmiBlitz3.ab3@15518> RTS
0002D286 <AmiBlitz3.ab3@15522>   MOVE.w #$0180,D1
0002D28A <AmiBlitz3.ab3@15523> BRA.w JL_0_A304
0002D28E <AmiBlitz3.ab3@15527>   MOVE.w #$0140,D1
0002D292 <AmiBlitz3.ab3@15528> BRA.w JL_0_A304
0002D294 <AmiBlitz3.ab3@15532>   MOVE.w D1,-(A7)
0002D296 <AmiBlitz3.ab3@15533>   MOVE.w D2,-(A7)
0002D298 <AmiBlitz3.ab3@15534>   MOVE.w D2,D3
0002D29A <AmiBlitz3.ab3@15535>   MOVEQ.l #$03,D2
0002D29E <AmiBlitz3.ab3@15536>    BSR.w JL_0_9770
0002D2A0 <AmiBlitz3.ab3@15537>   MOVE.w (A7)+,D3
0002D2A2 <AmiBlitz3.ab3@15538>   MOVEQ.l #$01,D2
0002D2A8 <AmiBlitz3.ab3@15539>   ADDQ.w #1,regnum
0002D2AC <AmiBlitz3.ab3@15540>    BSR.w writeconvertcode
0002D2B2 <AmiBlitz3.ab3@15541>   SUBQ.w #1,regnum
0002D2B8 <AmiBlitz3.ab3@15542>   MOVE.w regnum,D1
0002D2BA <AmiBlitz3.ab3@15543>   MOVE.w D1,D2
0002D2BC <AmiBlitz3.ab3@15544>   ADDQ.w #1,D2
0002D2BE <AmiBlitz3.ab3@15545>   LSL.w #8,D2
0002D2C0 <AmiBlitz3.ab3@15546>   LSL.w #1,D2
0002D2C2 <AmiBlitz3.ab3@15547>   OR.w (A7)+,D1
0002D2C4 <AmiBlitz3.ab3@15548>   OR.w D2,D1
0002D2C8 <AmiBlitz3.ab3@15549> BRA.w writeword
0002D2CE <AmiBlitz3.ab3@15553>   MOVE.w regnum,D1
0002D2D2 <AmiBlitz3.ab3@15554>    BEQ.w JL_0_A36C
0002D2D6 <AmiBlitz3.ab3@15555>   ORI.w #$2000,D1
0002D2DA <AmiBlitz3.ab3@15556>    BSR.w writeword
0002D2DE <AmiBlitz3.ab3@15557>   ADDI.w #$201,D1
0002D2E2 <AmiBlitz3.ab3@15558>    BSR.w writeword
0002D2E4 <AmiBlitz3.ab3@15561> RTS
0002D2EA <AmiBlitz3.ab3@15565>   MOVE.w regnum,D1
0002D2EE <AmiBlitz3.ab3@15566>    BEQ.w JL_0_A384
0002D2F0 <AmiBlitz3.ab3@15567>   LSL.w #8,D1
0002D2F2 <AmiBlitz3.ab3@15568>   LSL.w #1,D1
0002D2F6 <AmiBlitz3.ab3@15569>   ORI.w #$2000,D1
0002D2FA <AmiBlitz3.ab3@15570>    BSR.w writeword
0002D2FC <AmiBlitz3.ab3@15573> RTS
0002D302 <AmiBlitz3.ab3@15577>    CLR.b isconstantvalue
0002D308 <AmiBlitz3.ab3@15578>    CLR.l lastconstantvalue
0002D310 <AmiBlitz3.ab3@15579>    CMPI.w #$7,regnum
0002D314 <AmiBlitz3.ab3@15580>    BCS.w JL_0_A6B4
0002D31A <AmiBlitz3.ab3@15581>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D31E <AmiBlitz3.ab3@15582>   BSR writelong
0002D322 <AmiBlitz3.ab3@15583>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D326 <AmiBlitz3.ab3@15585>   CMP.w #$3,D2
0002D32A <AmiBlitz3.ab3@15586>    BCS.w JL_0_A3A2
0002D32E <AmiBlitz3.ab3@15587>   MOVE.w #$2F06,D1
0002D332 <AmiBlitz3.ab3@15590>   BSR.w writeword
0002D334 <AmiBlitz3.ab3@15591>   MOVE.w D1,-(A7)
0002D33A <AmiBlitz3.ab3@15592>   SUBQ.w #1,regnum
0002D33E <AmiBlitz3.ab3@15593>    BSR.w JL_0_A6B4
0002D344 <AmiBlitz3.ab3@15594>   ADDQ.w #1,regnum
0002D34A <AmiBlitz3.ab3@15595>   MOVE.l #$f2001b80,d1
0002D34E <AmiBlitz3.ab3@15596>   BSR writelong
0002D352 <AmiBlitz3.ab3@15597>   MOVE.w #$3E06,D1
0002D356 <AmiBlitz3.ab3@15598>   CMP.w #$3,D2
0002D35A <AmiBlitz3.ab3@15599>    BCS.w JL_0_A3C8
0002D35E <AmiBlitz3.ab3@15600>   MOVE.w #$2E06,D1
0002D362 <AmiBlitz3.ab3@15603>   BSR.w writeword
0002D364 <AmiBlitz3.ab3@15604>   MOVE.w (A7)+,D1
0002D368 <AmiBlitz3.ab3@15605>   ANDI.w #$F000,D1
0002D36C <AmiBlitz3.ab3@15606>   ORI.w #$C1F,D1
0002D372 <AmiBlitz3.ab3@15607>   JSR writeword
0002D378 <AmiBlitz3.ab3@15608>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D37C <AmiBlitz3.ab3@15609> BRA writelong
0002D380 <AmiBlitz3.ab3@15613>   BSR.w JL_0_A6B4
0002D384 <AmiBlitz3.ab3@15614>   MOVE.w #$4440,D1
0002D388 <AmiBlitz3.ab3@15615>   CMP.w #$3,D2
0002D38C <AmiBlitz3.ab3@15616>    BCS.w JL_0_A406
0002D390 <AmiBlitz3.ab3@15617>   MOVE.w #$4480,D1
0002D394 <AmiBlitz3.ab3@15618>   CMP.w #$5,D2
0002D398 <AmiBlitz3.ab3@15619>    BCS.w JL_0_A406
0002D39C <AmiBlitz3.ab3@15620>   CMP.w #$6,D2
0002D3A0 <AmiBlitz3.ab3@15621>    BCC.w illoperr
0002D3A4 <AmiBlitz3.ab3@15622>   MOVE.w #$FFC4,D1
0002D3A8 <AmiBlitz3.ab3@15623> BRA.w JL_0_9604
0002D3AE <AmiBlitz3.ab3@15626>   OR.w regnum,D1                                           ;negate
0002D3B4 <AmiBlitz3.ab3@15627>   CLR.l imm_addr
0002D3B8 <AmiBlitz3.ab3@15628> BRA.w writeword
0002D3BC <AmiBlitz3.ab3@15632>    BSR.w eval4
0002D3C0 <AmiBlitz3.ab3@15633>   CMP.w #")",D0
0002D3C4 <AmiBlitz3.ab3@15634>    BEQ.w JL_0_A424
0002D3C8 <AmiBlitz3.ab3@15635>   CMP.w #"}",D0
0002D3CC <AmiBlitz3.ab3@15636>    BNE.w brackets_                                         ;syntax error brackets
0002D3D0 <AmiBlitz3.ab3@15639> BRA.w get1bytemain
0002D3D4 <AmiBlitz3.ab3@15643>    BSR.w eval4
0002D3D8 <AmiBlitz3.ab3@15644>   CMP.w #$5,D2
0002D3DC <AmiBlitz3.ab3@15645>    BCC.w illoperr
0002D3E2 <AmiBlitz3.ab3@15646>   MOVE.w regnum,D1
0002D3E6 <AmiBlitz3.ab3@15647>   ORI.w #$4640,D1
0002D3EA <AmiBlitz3.ab3@15648>   CMP.w #$3,D2
0002D3EE <AmiBlitz3.ab3@15649>    BCS.w writeword
0002D3F2 <AmiBlitz3.ab3@15650>   EORI.w #$C0,D1
0002D3F6 <AmiBlitz3.ab3@15651> BRA.w writeword
0002D3F8 <AmiBlitz3.ab3@15655>   MOVEQ.l #$05,D2                                          ;fpu pi
0002D3FE <AmiBlitz3.ab3@15656>    TST.b fpu
0002D402 <AmiBlitz3.ab3@15657>   BEQ 'old
0002D408 <AmiBlitz3.ab3@15658> JMP fpupi
0002D40E <AmiBlitz3.ab3@15661>   MOVE.w regnum,D1
0002D410 <AmiBlitz3.ab3@15662>   LSL.w #8,D1
0002D412 <AmiBlitz3.ab3@15663>   LSL.w #1,D1
0002D416 <AmiBlitz3.ab3@15664>   ORI.w #$203C,D1
0002D41A <AmiBlitz3.ab3@15665>    BSR.w writeword
0002D420 <AmiBlitz3.ab3@15666>   MOVE.l #$C90FDA42,D1
0002D424 <AmiBlitz3.ab3@15667>    BSR.w writelong
0002D428 <AmiBlitz3.ab3@15668> BRA.w get1bytemain
0002D524 <AmiBlitz3.ab3@15676> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D620 <AmiBlitz3.ab3@15677>              Ds.l 63
0002D668 <AmiBlitz3.ab3@15678>              Ds.l 18
0002D66C <AmiBlitz3.ab3@15679> forthsp:     Dc.l forthstack
0002D698 <AmiBlitz3.ab3@15684>    !fget
0002D69C <AmiBlitz3.ab3@15685>    CMP.b #$7e,d0
0002D6A0 <AmiBlitz3.ab3@15686>    BNE 'noc
0002D6A2 <AmiBlitz3.ab3@15687>    SUBQ.l #1,a5
0002D6A6 <AmiBlitz3.ab3@15688>    BSR get1bytemain
0002D6AA <AmiBlitz3.ab3@15691>    CMP.b #"#",d0
0002D6AE <AmiBlitz3.ab3@15692>    BNE 'ld1
0002D6B2 <AmiBlitz3.ab3@15693>    CMP.b #$22,(a5)
0002D6B6 <AmiBlitz3.ab3@15694>    BNE 'ld1
0002D6BC <AmiBlitz3.ab3@15695>    JSR addimmi
0002D6C0 <AmiBlitz3.ab3@15698>    CMP.b #$22,d0
0002D6C4 <AmiBlitz3.ab3@15699>    BNE 'l11
0002D6CA <AmiBlitz3.ab3@15709>    NOT.w instringon
0002D6CC <AmiBlitz3.ab3@15712>    TST.b d0
0002D6D0 <AmiBlitz3.ab3@15713>    BPL 'l10
0002D6D2 <AmiBlitz3.ab3@15714>    LSL.w #8,d0
0002D6D4 <AmiBlitz3.ab3@15715>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002D6DA <AmiBlitz3.ab3@15716>    MOVE.l d0,lasttoken
0002D6E0 <AmiBlitz3.ab3@15717>    MOVE.w d0,lastchar
0002D6E6 <AmiBlitz3.ab3@15718>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D6EC <AmiBlitz3.ab3@15719>    CLR.w rightsideflagmask
0002D6F0 <AmiBlitz3.ab3@15721>   CMP.w #"(",D0
0002D6F4 <AmiBlitz3.ab3@15722>    BEQ.w checkcast2
0002D6F8 <AmiBlitz3.ab3@15723> nocast CMP.w #"{",D0
0002D6FC <AmiBlitz3.ab3@15724>    BEQ.w JL_0_A410
0002D700 <AmiBlitz3.ab3@15725>   CMP.w #$2D,D0
0002D704 <AmiBlitz3.ab3@15726>    BEQ.w JL_0_A3DA
0002D708 <AmiBlitz3.ab3@15727>   CMP.w #-$7F77,D0
0002D70C <AmiBlitz3.ab3@15728>    BEQ.w JL_0_A428
0002D710 <AmiBlitz3.ab3@15729>   MOVEA.l forthsp(PC),A1
0002D716 <AmiBlitz3.ab3@15730>   CMPA.l #forthsp,A1
0002D71A <AmiBlitz3.ab3@15731>    BCC.w conmemerr
0002D720 <AmiBlitz3.ab3@15732>   MOVE.l destpointer,(A1)+
0002D726 <AmiBlitz3.ab3@15733>   MOVE.l hunkoffsetbase,(A1)+
0002D72C <AmiBlitz3.ab3@15734>   MOVE.l lasta6,(A1)+
0002D732 <AmiBlitz3.ab3@15735>   MOVE.w lasta6,(A1)+
0002D734 <AmiBlitz3.ab3@15736>   CLR.w (A1)+
0002D736 <AmiBlitz3.ab3@15737>   CLR.w (A1)+
0002D73C <AmiBlitz3.ab3@15738>   MOVE.l A1,forthsp
0002D74E <AmiBlitz3.ab3@15740>    !compare2
0002D752 <AmiBlitz3.ab3@15741>    BEQ.w JL_0_B224
0002D756 <AmiBlitz3.ab3@15742>   CMP.w #".",D0
0002D75A <AmiBlitz3.ab3@15743>    BEQ.w JL_0_B21E
0002D75E <AmiBlitz3.ab3@15744>   CMP.w #"#",D0
0002D762 <AmiBlitz3.ab3@15745>    BEQ.w get_constant
0002D766 <AmiBlitz3.ab3@15746>   CMP.w #"$",D0
0002D76A <AmiBlitz3.ab3@15747>    BEQ.w get_hexconstant
0002D76E <AmiBlitz3.ab3@15748>   CMP.w #"%",D0
0002D772 <AmiBlitz3.ab3@15749>    BEQ.w JL_0_A8C0
0002D776 <AmiBlitz3.ab3@15750>   CMP.w #-$7FD1,D0
0002D77A <AmiBlitz3.ab3@15751>    BEQ.w _SizeOf
0002D77E <AmiBlitz3.ab3@15752>   CMP.w #-$7F46,D0
0002D782 <AmiBlitz3.ab3@15753>    BEQ.w JL_0_A44E
0002D786 <AmiBlitz3.ab3@15754>   CMP.w #-$7F3B,D0
0002D78A <AmiBlitz3.ab3@15755>    BEQ.w JL_0_A83C
0002D78E <AmiBlitz3.ab3@15756>   CMP.w #-$7F3A,D0
0002D792 <AmiBlitz3.ab3@15757>    BEQ.w JL_0_A846
0002D798 <AmiBlitz3.ab3@15758>   MOVE.w constmode,D1
0002D79C <AmiBlitz3.ab3@15759>    BEQ.w JL_0_A776
0002D7BE <AmiBlitz3.ab3@15760>    !compare1                                               ;bsr.w tstalpha
0002D7C2 <AmiBlitz3.ab3@15761>    BEQ.w JL_0_AF22
0002D7C6 <AmiBlitz3.ab3@15762>   CMP.w #$5F,D0
0002D7CA <AmiBlitz3.ab3@15763>    BEQ.w JL_0_AF22
0002D7CE <AmiBlitz3.ab3@15764>   CMP.w #$22,D0
0002D7D2 <AmiBlitz3.ab3@15765>    BEQ.w JL_0_AF00
0002D7D6 <AmiBlitz3.ab3@15766> BRA.w syntaxerr
0002D7DC <AmiBlitz3.ab3@15768> checkcast2 JMP checkcast
0002D7E2 <AmiBlitz3.ab3@15771>   MOVE.w cfetchmode,D1
0002D7E6 <AmiBlitz3.ab3@15772>   BEQ.w JL_0_A784
0002D7EA <AmiBlitz3.ab3@15773> BRA.w badconerr
0002D7F0 <AmiBlitz3.ab3@15776> JMP syntaxerropt4
0002D7F2 <AmiBlitz3.ab3@15780>   NOT.w -(A1)
0002D814 <AmiBlitz3.ab3@15781>   !compare1                                                ;bsr.w tstalpha
0002D818 <AmiBlitz3.ab3@15782>    BEQ.w JL_0_AF4C
0002D81C <AmiBlitz3.ab3@15783>   CMP.w #$2A,D0
0002D820 <AmiBlitz3.ab3@15784>    BEQ.w JL_0_AF4C
0002D824 <AmiBlitz3.ab3@15785>   CMP.w #$5C,D0
0002D828 <AmiBlitz3.ab3@15786>    BEQ.w JL_0_AF4C
0002D82C <AmiBlitz3.ab3@15787>   CMP.w #$22,D0
0002D830 <AmiBlitz3.ab3@15788>    BEQ.w JL_0_ADC0
0002D834 <AmiBlitz3.ab3@15789>   BTST #$F,D0
0002D838 <AmiBlitz3.ab3@15790>    BNE.w JL_0_AAF2
0002D83C <AmiBlitz3.ab3@15791>   CMP.w #"&",D0
0002D840 <AmiBlitz3.ab3@15792>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D844 <AmiBlitz3.ab3@15793>   CMP.w #"?",D0
0002D848 <AmiBlitz3.ab3@15794>    BEQ.w JL_0_AED4
0002D84C <AmiBlitz3.ab3@15797>   CMP.b #"@",d0
0002D850 <AmiBlitz3.ab3@15798>    BNE syntaxerr
0002D856 <AmiBlitz3.ab3@15799>   TST.b newsyntax
0002D85A <AmiBlitz3.ab3@15800>    BEQ JUMP_syntaxerropt4
0002D860 <AmiBlitz3.ab3@15801>   MOVE.w regnum,D1
0002D862 <AmiBlitz3.ab3@15802>   LSL.w #8,D1
0002D864 <AmiBlitz3.ab3@15803>   LSL.w #1,D1
0002D868 <AmiBlitz3.ab3@15804>   ORI.w #$203C,D1
0002D86C <AmiBlitz3.ab3@15805>   BSR.w writeword
0002D870 <AmiBlitz3.ab3@15806>   CMP.b #$22,(a5)
0002D874 <AmiBlitz3.ab3@15807>    BNE syntaxerr
0002D876 <AmiBlitz3.ab3@15808>   ADDQ #1,a5
0002D878 <AmiBlitz3.ab3@15809>   MOVEQ #0,d0
0002D87C <AmiBlitz3.ab3@15810>   CMP.b #1,d2
0002D880 <AmiBlitz3.ab3@15811>    BEQ 'l3b
0002D884 <AmiBlitz3.ab3@15812>   CMP.b #2,d2
0002D888 <AmiBlitz3.ab3@15813>    BEQ 'l2b
0002D88C <AmiBlitz3.ab3@15814>   CMP.b #4,d2
0002D890 <AmiBlitz3.ab3@15815>    BEQ error_convert_types
0002D892 <AmiBlitz3.ab3@15816>   MOVE.b (a5)+,d0
0002D896 <AmiBlitz3.ab3@15817>   BEQ syntaxerr
0002D89A <AmiBlitz3.ab3@15818>   CMP.b #$22,d0
0002D89E <AmiBlitz3.ab3@15819>   BNE 'l1
0002D8A2 <AmiBlitz3.ab3@15820>     MOVE.b #0,d0
0002D8A6 <AmiBlitz3.ab3@15821> BRA 'do
0002D8A8 <AmiBlitz3.ab3@15824>   ASL.l #8,d0
0002D8AA <AmiBlitz3.ab3@15825>   MOVE.b (a5)+,d0
0002D8AE <AmiBlitz3.ab3@15826>   BEQ syntaxerr
0002D8B2 <AmiBlitz3.ab3@15827>   CMP.b #$22,d0
0002D8B6 <AmiBlitz3.ab3@15828>   BNE 'l2
0002D8BA <AmiBlitz3.ab3@15829>     MOVE.b #0,d0
0002D8BC <AmiBlitz3.ab3@15830>     ASR.l #8,d0
0002D8C0 <AmiBlitz3.ab3@15831> BRA 'do
0002D8C2 <AmiBlitz3.ab3@15834>   ASL.l #8,d0
0002D8C4 <AmiBlitz3.ab3@15837>   MOVE.b (a5)+,d0
0002D8C8 <AmiBlitz3.ab3@15838>    BEQ syntaxerr
0002D8CC <AmiBlitz3.ab3@15839>    CMP.b #$22,d0
0002D8D0 <AmiBlitz3.ab3@15840>    BNE 'l3
0002D8D4 <AmiBlitz3.ab3@15841>    MOVE.b #0,d0
0002D8D6 <AmiBlitz3.ab3@15842>    ASR.l #8,d0
0002D8DA <AmiBlitz3.ab3@15843> BRA 'do
0002D8DC <AmiBlitz3.ab3@15846>   ASL.l #8,d0
0002D8DE <AmiBlitz3.ab3@15849>   MOVE.b (a5)+,d0
0002D8E2 <AmiBlitz3.ab3@15850>    BEQ syntaxerr
0002D8E6 <AmiBlitz3.ab3@15851>    CMP.b #$22,d0
0002D8EA <AmiBlitz3.ab3@15852>    BNE 'l4
0002D8EE <AmiBlitz3.ab3@15853>    MOVE.b #0,d0
0002D8F0 <AmiBlitz3.ab3@15854>    ASR.l #8,d0
0002D8F4 <AmiBlitz3.ab3@15855> BRA 'do
0002D8F8 <AmiBlitz3.ab3@15858>    CMP.b #$22,(a5)+
0002D8FC <AmiBlitz3.ab3@15859>    BNE JUMP_error4char
0002D8FE <AmiBlitz3.ab3@15862>   MOVE.l d0,d1
0002D902 <AmiBlitz3.ab3@15863>     BSR writelong
0002D906 <AmiBlitz3.ab3@15864>     BSR get1bytemain
0002D908 <AmiBlitz3.ab3@15865> RTS
0002D90C <AmiBlitz3.ab3@15869>   BSR.w get1bytemain
0002D910 <AmiBlitz3.ab3@15870>   CMP.w #$2E,D0
0002D914 <AmiBlitz3.ab3@15871>    BEQ.b JL_0_A7F4
0002D91E <AmiBlitz3.ab3@15873>   MOVE.w oldqflag,instringon
0002D924 <AmiBlitz3.ab3@15874>   MOVEA.l lastsourcepos,A5
0002D926 <AmiBlitz3.ab3@15875>   MOVE.w D2,-(A7)
0002D92A <AmiBlitz3.ab3@15876>    BSR.w getparameter2
0002D92E <AmiBlitz3.ab3@15877>    BEQ.w syntaxerr
0002D934 <AmiBlitz3.ab3@15878>   LEA varbase,A2
0002D938 <AmiBlitz3.ab3@15879>    BSR.w findvariable
0002D93C <AmiBlitz3.ab3@15880>    BNE.w notypeerr
0002D940 <AmiBlitz3.ab3@15881>   MOVE.w $4(A2),D3
0002D942 <AmiBlitz3.ab3@15882>   EXT.l D3
0002D944 <AmiBlitz3.ab3@15883>   MOVE.w (A7)+,D2
0002D948 <AmiBlitz3.ab3@15884> BRA.w JL_0_B46E
0002D94A <AmiBlitz3.ab3@15888>   MOVE.w D2,-(A7)
0002D94E <AmiBlitz3.ab3@15889>    BSR.w getparameter2
0002D952 <AmiBlitz3.ab3@15890>    BEQ.w syntaxerr
0002D958 <AmiBlitz3.ab3@15891>   LEA newtypebase,A2
0002D95C <AmiBlitz3.ab3@15892>    BSR.w findtype
0002D960 <AmiBlitz3.ab3@15893>    BNE.w notypeerr
0002D962 <AmiBlitz3.ab3@15894>   MOVEQ.l #$00,D3
0002D966 <AmiBlitz3.ab3@15895>   CMP.w #$5C,D0
0002D96A <AmiBlitz3.ab3@15896>    BNE.w JL_0_A832
0002D96E <AmiBlitz3.ab3@15897>    BSR.w getparameter2
0002D972 <AmiBlitz3.ab3@15898>    BEQ.w syntaxerr
0002D976 <AmiBlitz3.ab3@15899>   LEA $4(A2),A2
0002D97A <AmiBlitz3.ab3@15900>    BSR.w findvariable2
0002D97E <AmiBlitz3.ab3@15901>    BNE.w noofferr
0002D982 <AmiBlitz3.ab3@15902>   MOVE.w $4(A2),D3
0002D986 <AmiBlitz3.ab3@15903> BRA.w JL_0_A836
0002D98A <AmiBlitz3.ab3@15907>   MOVE.w $8(A2),D3
0002D98C <AmiBlitz3.ab3@15910>   MOVE.w (A7)+,D2
0002D990 <AmiBlitz3.ab3@15911> BRA.w JL_0_B46E
0002D992 <AmiBlitz3.ab3@15915>   MOVEQ.l #-$01,D3
0002D996 <AmiBlitz3.ab3@15916>    BSR.w get1bytemain
0002D99A <AmiBlitz3.ab3@15917> BRA.w JL_0_B46E
0002D99C <AmiBlitz3.ab3@15921>   MOVEQ.l #$00,D3
0002D9A0 <AmiBlitz3.ab3@15922>    BSR.w get1bytemain
0002D9A4 <AmiBlitz3.ab3@15923> BRA.w JL_0_B46E
0002D9A8 <AmiBlitz3.ab3@15927>   CMP.w #$30,D0
0002D9AC <AmiBlitz3.ab3@15928>    BCS.w JL_0_A876
0002D9B0 <AmiBlitz3.ab3@15929>   CMP.w #$39,D0
0002D9B4 <AmiBlitz3.ab3@15930>    BLS.w JL_0_A874
0002D9B8 <AmiBlitz3.ab3@15931>   ANDI.w #$FFDF,D0
0002D9BC <AmiBlitz3.ab3@15932>   CMP.w #$46,D0
0002D9C0 <AmiBlitz3.ab3@15933>    BHI.w JL_0_A876
0002D9C4 <AmiBlitz3.ab3@15934>   CMP.w #$41,D0
0002D9C8 <AmiBlitz3.ab3@15935>    BCS.w JL_0_A876
0002D9CA <AmiBlitz3.ab3@15938>    CMP.w D0,D0
0002D9CC <AmiBlitz3.ab3@15941> RTS
0002D9D0 <AmiBlitz3.ab3@15945>   CMP.w #$31,D0
0002D9D4 <AmiBlitz3.ab3@15946>    BEQ.w JL_0_A884
0002D9D8 <AmiBlitz3.ab3@15947>   CMP.w #$30,D0
0002D9DA <AmiBlitz3.ab3@15950> RTS
0002D9DC <AmiBlitz3.ab3@15954>    MOVEQ #0,d0
0002D9DE <AmiBlitz3.ab3@15955>    MOVE.b (a5)+,d0
0002D9E0 <AmiBlitz3.ab3@15956>    MOVE.b (a5)+,d0
0002D9E4 <AmiBlitz3.ab3@15957>    BSR ishex
0002D9E8 <AmiBlitz3.ab3@15958>    BNE syntaxerr
0002D9EC <AmiBlitz3.ab3@15959>    SUBI.w #$30,D0
0002D9F0 <AmiBlitz3.ab3@15960>    CMP.w #$9,D0
0002D9F4 <AmiBlitz3.ab3@15961>    BLS.w 'l1
0002D9F6 <AmiBlitz3.ab3@15962>    SUBQ.w #7,D0
0002D9F8 <AmiBlitz3.ab3@15965>    MOVE.l d0,d1
0002D9FA <AmiBlitz3.ab3@15966>    MOVE.b (a5)+,d0
0002D9FE <AmiBlitz3.ab3@15967>      BSR ishex
0002DA02 <AmiBlitz3.ab3@15968>     BNE syntaxerr
0002DA04 <AmiBlitz3.ab3@15969>     LSL.l #4,d1
0002DA08 <AmiBlitz3.ab3@15970>     SUBI.w #$30,D0
0002DA0C <AmiBlitz3.ab3@15971>    CMP.w #$9,D0
0002DA10 <AmiBlitz3.ab3@15972>    BLS.w 'l2
0002DA12 <AmiBlitz3.ab3@15973>    SUBQ.w #7,D0
0002DA14 <AmiBlitz3.ab3@15976>   ADD.l d1,d0
0002DA16 <AmiBlitz3.ab3@15977> RTS
0002DA1A <AmiBlitz3.ab3@15981>    BSR.w get1bytemain
0002DA1E <AmiBlitz3.ab3@15982>    BSR.w ishex
0002DA22 <AmiBlitz3.ab3@15983>    BNE.w syntaxerr
0002DA24 <AmiBlitz3.ab3@15984>   MOVEQ.l #$00,D3
0002DA28 <AmiBlitz3.ab3@15985>   CMP.w #5,d2
0002DA2C <AmiBlitz3.ab3@15986>   BNE JL_0_A894
0002DA32 <AmiBlitz3.ab3@15987>   CMP.l #newtype_double,a2
0002DA36 <AmiBlitz3.ab3@15988>   BEQ 'doit
0002DA3C <AmiBlitz3.ab3@15989>   CMP.l #newtype_float,a2
0002DA40 <AmiBlitz3.ab3@15990>   BNE JL_0_A894
0002DA48 <AmiBlitz3.ab3@15993>    fmove.s #0,fp0
0002DA4E <AmiBlitz3.ab3@15995>   TST.b fpu
0002DA52 <AmiBlitz3.ab3@15996>   BEQ JL_0_A894
0002DA58 <AmiBlitz3.ab3@15997>   fmove.w #16,fp1
0002DA5C <AmiBlitz3.ab3@15998>   fmul.x fp1,fp0
0002DA60 <AmiBlitz3.ab3@15999>   SUBI.w #$30,D0
0002DA64 <AmiBlitz3.ab3@16000>   CMP.w #$9,D0
0002DA68 <AmiBlitz3.ab3@16001>    BLS.w JL_0_A8AEa
0002DA6A <AmiBlitz3.ab3@16002>   SUBQ.w #7,D0
0002DA6E <AmiBlitz3.ab3@16005>    fmove.w d0,fp1
0002DA72 <AmiBlitz3.ab3@16006>    fadd.x fp1,fp0
0002DA76 <AmiBlitz3.ab3@16007>    BSR.w get1bytemain
0002DA7A <AmiBlitz3.ab3@16008>    BSR.w ishex
0002DA7E <AmiBlitz3.ab3@16009>    BEQ.w JL_0_A894a
0002DA82 <AmiBlitz3.ab3@16010> BRA.w nofpregload
0002DA88 <AmiBlitz3.ab3@16014>   CMP.l #$10000000,D3
0002DA8C <AmiBlitz3.ab3@16015>    BCC.w overerr
0002DA8E <AmiBlitz3.ab3@16016>   LSL.l #4,D3
0002DA92 <AmiBlitz3.ab3@16017>   SUBI.w #$30,D0
0002DA96 <AmiBlitz3.ab3@16018>   CMP.w #$9,D0
0002DA9A <AmiBlitz3.ab3@16019>    BLS.w JL_0_A8AE
0002DA9C <AmiBlitz3.ab3@16020>   SUBQ.w #7,D0
0002DA9E <AmiBlitz3.ab3@16023>   OR.w D0,D3
0002DAA2 <AmiBlitz3.ab3@16024>    BSR.w get1bytemain
0002DAA6 <AmiBlitz3.ab3@16025>    BSR.w ishex
0002DAAA <AmiBlitz3.ab3@16026>    BEQ.w JL_0_A894
0002DAAE <AmiBlitz3.ab3@16027> BRA.w JL_0_B46E
0002DAB2 <AmiBlitz3.ab3@16031>    BSR.w get1bytemain
0002DAB6 <AmiBlitz3.ab3@16032>    BSR.w JL_0_A878
0002DABA <AmiBlitz3.ab3@16033>    BNE.w syntaxerr
0002DABC <AmiBlitz3.ab3@16034>    MOVEQ.l #$00,D3
0002DABE <AmiBlitz3.ab3@16037>    LSL.l #1,D3
0002DAC2 <AmiBlitz3.ab3@16038>    BCS.w overerr
0002DAC6 <AmiBlitz3.ab3@16039>   SUBI.w #$30,D0
0002DAC8 <AmiBlitz3.ab3@16040>   OR.w D0,D3
0002DACC <AmiBlitz3.ab3@16041>    BSR.w get1bytemain
0002DAD0 <AmiBlitz3.ab3@16042>    BSR.w JL_0_A878
0002DAD4 <AmiBlitz3.ab3@16043>    BEQ.w JL_0_A8CE
0002DAD8 <AmiBlitz3.ab3@16044> BRA.w JL_0_B46E
0002DADA <AmiBlitz3.ab3@16048>    MOVE.w d2,-(A7)
0002DAE2 <AmiBlitz3.ab3@16049>    MOVE.b #0,automode
0002DAE6 <AmiBlitz3.ab3@16050>    CMP.b #"@",(a5)
0002DAEA <AmiBlitz3.ab3@16051>    BNE 'l1
0002DAEC <AmiBlitz3.ab3@16052>    ADDQ.l #1,a5
0002DAF4 <AmiBlitz3.ab3@16053>    MOVE.b #1,automode
0002DAF8 <AmiBlitz3.ab3@16054>    BSR getparameter2
0002DAFC <AmiBlitz3.ab3@16055>    BSR findlabel2
0002DB00 <AmiBlitz3.ab3@16056>    BNE 'addit
0002DB04 <AmiBlitz3.ab3@16057> BRA errormsg_autocount
0002DB08 <AmiBlitz3.ab3@16060>   BSR.w addlabelhash
0002DB10 <AmiBlitz3.ab3@16061>   MOVE.l #$1,$4(A2)
0002DB14 <AmiBlitz3.ab3@16062>   MOVEM.l a2/a5,-(a7)
0002DB1A <AmiBlitz3.ab3@16063>   MOVE.w lastchar,-(a7)
0002DB20 <AmiBlitz3.ab3@16064>   LEA autostorename,a5
0002DB24 <AmiBlitz3.ab3@16065>   BSR getparameter2
0002DB28 <AmiBlitz3.ab3@16066>   BSR findlabel2
0002DB2C <AmiBlitz3.ab3@16067>   BEQ 'found
0002DB30 <AmiBlitz3.ab3@16068>   BSR.w addlabelhash
0002DB38 <AmiBlitz3.ab3@16069>   MOVE.l #$1,$4(A2)
0002DB40 <AmiBlitz3.ab3@16070>   MOVE.l #0,8(a2)
0002DB42 <AmiBlitz3.ab3@16073>    MOVE.w (a7)+,d0
0002DB48 <AmiBlitz3.ab3@16074>    MOVE.w d0,lastchar
0002DB4C <AmiBlitz3.ab3@16075>   MOVE.l 8(a2),d3
0002DB54 <AmiBlitz3.ab3@16076>   ADD.l #1,8(a2)
0002DB58 <AmiBlitz3.ab3@16077>   MOVEM.l (a7)+,a2/a5
0002DB5C <AmiBlitz3.ab3@16078>   MOVE.l d3,8(a2)
0002DB60 <AmiBlitz3.ab3@16079>   MOVE.l $8(A2),D3
0002DB64 <AmiBlitz3.ab3@16080> BRA.l 'l3
0002DB68 <AmiBlitz3.ab3@16083>   BSR.w getparameter2
0002DB6E <AmiBlitz3.ab3@16084>     TST.b incnif
0002DB72 <AmiBlitz3.ab3@16085>     BEQ 'lc1
0002DB76 <AmiBlitz3.ab3@16086>     BSR.w findlabel2
0002DB7A <AmiBlitz3.ab3@16087>     BNE 'l5
0002DB7C <AmiBlitz3.ab3@16088>     MOVEQ #1,d3
0002DB7E <AmiBlitz3.ab3@16089>     MOVE.w (A7)+,D2
0002DB82 <AmiBlitz3.ab3@16090> BRA JL_0_B46E
0002DB84 <AmiBlitz3.ab3@16093>   MOVEQ #0,d3
0002DB86 <AmiBlitz3.ab3@16094>     MOVE.w (A7)+,D2
0002DB8A <AmiBlitz3.ab3@16095> BRA JL_0_B46E
0002DB8E <AmiBlitz3.ab3@16098>    BSR.w findlabel2
0002DB92 <AmiBlitz3.ab3@16099>    BNE.w cnferr
0002DB9A <AmiBlitz3.ab3@16102>    CMPI.l #$1,$4(A2)
0002DB9E <AmiBlitz3.ab3@16103>    BNE.w cnferr
0002DBA2 <AmiBlitz3.ab3@16105>    MOVE.l $8(A2),D3
0002DBA4 <AmiBlitz3.ab3@16106>    MOVE.w (A7)+,D2
0002DBA8 <AmiBlitz3.ab3@16107> BRA.w JL_0_B46E
0002DBAE <AmiBlitz3.ab3@16111>   CLR.w vartype
0002DBB6 <AmiBlitz3.ab3@16112>   MOVE.b #3,peekaddrsize
0002DBBA <AmiBlitz3.ab3@16113>   BSR.w JL_0_A916
0002DBC0 <AmiBlitz3.ab3@16114>   MOVE.l a2,rightsidetype
0002DBCA <AmiBlitz3.ab3@16115>   MOVE.w flagmask,rightsideflagmask
0002DBCC <AmiBlitz3.ab3@16116>   MOVEQ.l #$03,D2
0002DBCE <AmiBlitz3.ab3@16117> RTS
0002DBD2 <AmiBlitz3.ab3@16121>    BSR.w get1bytemain
0002DBE4 <AmiBlitz3.ab3@16122>    !compare2
0002DBE8 <AmiBlitz3.ab3@16123>    BEQ andop2
0002DBEC <AmiBlitz3.ab3@16124>    BSR.w getparameter
0002DBF0 <AmiBlitz3.ab3@16125>    BSR.w JL_0_8E3C
0002DBF4 <AmiBlitz3.ab3@16126>    BSR.w calcvar
0002DBF8 <AmiBlitz3.ab3@16127>   CMP.b #$7,D2
0002DBFC <AmiBlitz3.ab3@16128>    BNE.w JL_0_A960
0002DC00 <AmiBlitz3.ab3@16129>   BTST #$F,D2
0002DC04 <AmiBlitz3.ab3@16130>    BNE.w JL_0_A94A
0002DC0A <AmiBlitz3.ab3@16131>   MOVE.w D3,stamp2+2
0002DC10 <AmiBlitz3.ab3@16132>   MOVE.l stamp2,D1
0002DC14 <AmiBlitz3.ab3@16133>    BSR.w pokela5s
0002DC18 <AmiBlitz3.ab3@16134> BRA.w JL_0_A978
0002DC1E <AmiBlitz3.ab3@16138>   MOVE.w regnum,D1
0002DC20 <AmiBlitz3.ab3@16139>   LSL.w #8,D1
0002DC22 <AmiBlitz3.ab3@16140>   LSL.w #1,D1
0002DC28 <AmiBlitz3.ab3@16141>   OR.w stamp,D1
0002DC2C <AmiBlitz3.ab3@16142>    BSR.w writeword
0002DC2E <AmiBlitz3.ab3@16143> RTS
0002DC32 <AmiBlitz3.ab3@16147>   BTST #$F,D2
0002DC36 <AmiBlitz3.ab3@16148>    BNE.w JL_0_A978
0002DC3C <AmiBlitz3.ab3@16149>   MOVE.w D3,leaamp+2
0002DC42 <AmiBlitz3.ab3@16150>   MOVE.l leaamp,D1
0002DC46 <AmiBlitz3.ab3@16151>    BSR.w pokela5s
0002DC4C <AmiBlitz3.ab3@16154>   MOVE.w regnum,D1
0002DC4E <AmiBlitz3.ab3@16155>   LSL.w #8,D1
0002DC50 <AmiBlitz3.ab3@16156>   LSL.w #1,D1
0002DC56 <AmiBlitz3.ab3@16157>   OR.w leaamp2,D1
0002DC5A <AmiBlitz3.ab3@16158> BRA.w writeword
0002DC5E <AmiBlitz3.ab3@16162>   MOVE.w #$D200,D1
0002DC62 <AmiBlitz3.ab3@16163>    BSR.w Atokejsr
0002DC64 <AmiBlitz3.ab3@16164>   MOVEQ.l #$03,D2
0002DC66 <AmiBlitz3.ab3@16165> RTS
0002DC6A <AmiBlitz3.ab3@16169> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002DC6C <AmiBlitz3.ab3@16170>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002DC6E <AmiBlitz3.ab3@16171>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002DC72 <AmiBlitz3.ab3@16177>    BSR.w get1bytemain
0002DC74 <AmiBlitz3.ab3@16178>   MOVE.w D0,D1
0002DC78 <AmiBlitz3.ab3@16179>    BPL.w syntaxerr
0002DC7A <AmiBlitz3.ab3@16180>   MOVE.w D2,-(A7)
0002DC7E <AmiBlitz3.ab3@16181>   BCLR #$F,D1
0002DC82 <AmiBlitz3.ab3@16182>    BSR.w searchinstr
0002DC86 <AmiBlitz3.ab3@16183>   MOVE.l $12(A2),D0
0002DC8A <AmiBlitz3.ab3@16184>   TST.w -$2(A2,D0.L)
0002DC8E <AmiBlitz3.ab3@16185>    BEQ.w freeerr
0002DC90 <AmiBlitz3.ab3@16186>   MOVE.w (A7)+,D2
0002DC92 <AmiBlitz3.ab3@16187> RTS
0002DC96 <AmiBlitz3.ab3@16191>   MOVE.l $0(A5),D0
0002DC9A <AmiBlitz3.ab3@16192>    BNE.b ucodeskip
0002DC9C <AmiBlitz3.ab3@16193>   MOVEQ.l #-$01,D0
0002DCA0 <AmiBlitz3.ab3@16194> BRA.b usedcodef
0002DCA4 <AmiBlitz3.ab3@16197>   SUB.l $0(A5),D0
0002DCA6 <AmiBlitz3.ab3@16200>   LSR.w #8,D0
0002DCAA <AmiBlitz3.ab3@16205>    MOVE.l $0(A5),D0
0002DCAE <AmiBlitz3.ab3@16206>    BNE.b ucodeskip2
0002DCB0 <AmiBlitz3.ab3@16207>   MOVEQ.l #-$01,D0
0002DCB4 <AmiBlitz3.ab3@16208> BRA.b usedcode2f
0002DCB8 <AmiBlitz3.ab3@16211>   SUB.l $0(A5),D0                                          ;usedcode2
0002DCBA <AmiBlitz3.ab3@16212>   LSR.w #8,D0
0002DCBC <AmiBlitz3.ab3@16215>   LSR.w #8,D0
0002DCBE <AmiBlitz3.ab3@16220>   MOVE.l D0,-(A7)
0002DCC0 <AmiBlitz3.ab3@16223>   MOVE.l (A7)+,D0
0002DCC2 <AmiBlitz3.ab3@16226>   MOVE.l D0,D0
0002DCC6 <AmiBlitz3.ab3@16232>   BSR.w JL_0_A9A0
0002DCCA <AmiBlitz3.ab3@16234>   MOVE.w -$2(A2,D0.L),D3
0002DCCE <AmiBlitz3.ab3@16235>   CMP.w #$9,D3
0002DCD2 <AmiBlitz3.ab3@16236>    BCC.w doused__skip
0002DCD6 <AmiBlitz3.ab3@16240>   LEA usedcode(PC),A0
0002DCDA <AmiBlitz3.ab3@16241>   LEA usedcodef(PC),A1
0002DCE0 <AmiBlitz3.ab3@16243>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002DCE4 <AmiBlitz3.ab3@16244>   ANDI.w #$7,D3
0002DCE6 <AmiBlitz3.ab3@16245>   LSL.w #8,D3
0002DCE8 <AmiBlitz3.ab3@16246>   LSL.w #1,D3
0002DCEC <AmiBlitz3.ab3@16247>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002DCF0 <AmiBlitz3.ab3@16248> BRA.w doused__skip2
0002DCF4 <AmiBlitz3.ab3@16253>   LEA usedcode2(PC),A0
0002DCF8 <AmiBlitz3.ab3@16254>   LEA usedcode2f(PC),A1
0002DCFE <AmiBlitz3.ab3@16256>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002DD00 <AmiBlitz3.ab3@16257>   SUBQ.w #8,D3
0002DD02 <AmiBlitz3.ab3@16258>   LSL.w #8,D3
0002DD04 <AmiBlitz3.ab3@16259>   LSL.w #1,D3
0002DD08 <AmiBlitz3.ab3@16260>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002DD0C <AmiBlitz3.ab3@16263>   MOVE.w -$6(A2,D0.L),D3
0002DD10 <AmiBlitz3.ab3@16264>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002DD12 <AmiBlitz3.ab3@16265>   ADDQ.w #4,D3
0002DD16 <AmiBlitz3.ab3@16266>   MOVE.w D3,$2(A0)
0002DD1C <AmiBlitz3.ab3@16267>   MOVE.w regnum,D1
0002DD20 <AmiBlitz3.ab3@16268>    BEQ.w doused__skip3
0002DD24 <AmiBlitz3.ab3@16269>   MOVE.w usedprep(PC),D1
0002DD28 <AmiBlitz3.ab3@16270>    BSR.w writeword
0002DD2C <AmiBlitz3.ab3@16273>   BSR.w pokecode
0002DD32 <AmiBlitz3.ab3@16274>   MOVE.w regnum,D1
0002DD36 <AmiBlitz3.ab3@16275>    BEQ.w doused__skip4
0002DD38 <AmiBlitz3.ab3@16276>   LSL.w #8,D1
0002DD3A <AmiBlitz3.ab3@16277>   LSL.w #1,D1
0002DD3E <AmiBlitz3.ab3@16278>   OR.w usedfix(PC),D1
0002DD42 <AmiBlitz3.ab3@16279>    BSR.w writeword
0002DD46 <AmiBlitz3.ab3@16280>   MOVE.w useddone(PC),D1
0002DD4A <AmiBlitz3.ab3@16281>    BSR.w writeword
0002DD4C <AmiBlitz3.ab3@16284>    MOVEQ.l #$02,D2
0002DD50 <AmiBlitz3.ab3@16285> BRA.w get1bytemain
0002DD54 <AmiBlitz3.ab3@16293>    BSR.w JL_0_A9A0
0002DD56 <AmiBlitz3.ab3@16295>   MOVEQ.l #$00,D3
0002DD5A <AmiBlitz3.ab3@16296>   MOVE.w -$4(A2,D0.L),D3
0002DD5E <AmiBlitz3.ab3@16297>    BSR.w get1bytemain
0002DD62 <AmiBlitz3.ab3@16298> BRA.w JL_0_B46E
0002DD66 <AmiBlitz3.ab3@16305>    BSR.w get1bytemain
0002DD68 <AmiBlitz3.ab3@16306>   MOVE.w D0,-(A7)
0002DD6C <AmiBlitz3.ab3@16307>    BSR.w get1bytemain
0002DD70 <AmiBlitz3.ab3@16308>   CMP.w #$28,D0
0002DD74 <AmiBlitz3.ab3@16309>    BNE.w syntaxerr
0002DD76 <AmiBlitz3.ab3@16310>   MOVE.w (A7)+,D0
0002DD7A <AmiBlitz3.ab3@16311>    BSR.w JL_0_C340
0002DD7E <AmiBlitz3.ab3@16312>    BSR.w reget
0002DD82 <AmiBlitz3.ab3@16313>   CMP.w #$29,D0
0002DD86 <AmiBlitz3.ab3@16314>    BNE.w syntaxerr
0002DD8A <AmiBlitz3.ab3@16318>   LEA addrcode(PC),A0
0002DD8E <AmiBlitz3.ab3@16319>   LEA addrcodef(PC),A1
0002DD94 <AmiBlitz3.ab3@16320>   MOVE.w -$6(A2),$2(A0)
0002DD98 <AmiBlitz3.ab3@16321>   MOVE.w $4(A0),D1
0002DD9C <AmiBlitz3.ab3@16322>   ANDI.w #$FFF8,D1
0002DDA2 <AmiBlitz3.ab3@16323>   OR.w regnum,D1
0002DDA6 <AmiBlitz3.ab3@16324>   MOVE.w D1,$4(A0)
0002DDAA <AmiBlitz3.ab3@16325>   MOVE.w $6(A0),D1
0002DDAE <AmiBlitz3.ab3@16326>   ANDI.w #$F1FF,D1
0002DDB4 <AmiBlitz3.ab3@16327>   MOVE.w regnum,D0
0002DDB6 <AmiBlitz3.ab3@16328>   LSL.w #8,D0
0002DDB8 <AmiBlitz3.ab3@16329>   LSL.w #1,D0
0002DDBA <AmiBlitz3.ab3@16330>   OR.w D0,D1
0002DDBE <AmiBlitz3.ab3@16331>   MOVE.w D1,$6(A0)
0002DDC2 <AmiBlitz3.ab3@16332>    BSR.w pokecode
0002DDC4 <AmiBlitz3.ab3@16333>   MOVEQ.l #$03,D2
0002DDC8 <AmiBlitz3.ab3@16334> BRA.w get1bytemain
0002DDCC <AmiBlitz3.ab3@16338>   CMP.w #-$7F4D,D0
0002DDD0 <AmiBlitz3.ab3@16339>    BHI.w JL_0_AAFE
0002DDD4 <AmiBlitz3.ab3@16340> BRA.w syntaxerr
0002DDD8 <AmiBlitz3.ab3@16347> .do_null   CMP.w #$b581,d0
0002DDDC <AmiBlitz3.ab3@16348>    BNE 'nonull
0002DDE2 <AmiBlitz3.ab3@16349>    MOVE.l d0,lastinstruction
0002DDE6 <AmiBlitz3.ab3@16350>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002DDEC <AmiBlitz3.ab3@16351>    MOVE.w regnum,d0
0002DDEE <AmiBlitz3.ab3@16352>    ASL.l #7,d0
0002DDF0 <AmiBlitz3.ab3@16353>    ASL.l #2,d0
0002DDF2 <AmiBlitz3.ab3@16354>    OR.l d0,d1
0002DDF6 <AmiBlitz3.ab3@16355>    BSR writeword
0002DDFC <AmiBlitz3.ab3@16356>    JSR get1bytemain
0002DDFE <AmiBlitz3.ab3@16357>    RTS
0002DE02 <AmiBlitz3.ab3@16359> 'nonull CMP.w #$c982,d0
0002DE06 <AmiBlitz3.ab3@16360>        BNE nonew_
0002DE08 <AmiBlitz3.ab3@16362>   MOVE.l a5,-(a7)
0002DE0E <AmiBlitz3.ab3@16363>   MOVE.w lastchar,-(a7)
0002DE14 <AmiBlitz3.ab3@16364>   JSR get1bytemain
0002DE18 <AmiBlitz3.ab3@16365>   CMP.w #"(",d0                                             ; use oldcode
0002DE1C <AmiBlitz3.ab3@16366>   BNE 'newcode
0002DE22 <AmiBlitz3.ab3@16367>   JSR get1bytemain
0002DE26 <AmiBlitz3.ab3@16368>   CMP.w #")",d0
0002DE2A <AmiBlitz3.ab3@16369>   BEQ 'newcode
0002DE30 <AmiBlitz3.ab3@16370>   MOVE.w (a7)+,lastchar
0002DE32 <AmiBlitz3.ab3@16371>   MOVE.l (a7)+,a5
0002DE38 <AmiBlitz3.ab3@16372>   MOVE.w lastchar,d0
0002DE3C <AmiBlitz3.ab3@16373>   BRA nonew_
0002DE3E <AmiBlitz3.ab3@16374> 'newcode  MOVE.l a0,-(a7)
0002DE44 <AmiBlitz3.ab3@16375>   TST.b blitzparloop
0002DE48 <AmiBlitz3.ab3@16376>   BNE 'err
0002DE4E <AmiBlitz3.ab3@16377>   TST.b funcparloop
0002DE52 <AmiBlitz3.ab3@16378>   BNE 'err
0002DE56 <AmiBlitz3.ab3@16379>   BRA 'ok
0002DE5C <AmiBlitz3.ab3@16380> 'err JMP errornewnotincalls
0002DE62 <AmiBlitz3.ab3@16381> 'ok  MOVE.l #$203c0000,d1
0002DE66 <AmiBlitz3.ab3@16382>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002DE68 <AmiBlitz3.ab3@16383>   MOVEQ #0,d1
0002DE6C <AmiBlitz3.ab3@16384>   MOVE.w 8(a0),d1
0002DE70 <AmiBlitz3.ab3@16385>   BSR writeword
0002DE74 <AmiBlitz3.ab3@16386>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002DE78 <AmiBlitz3.ab3@16387>   BSR writeword
0002DE7C <AmiBlitz3.ab3@16388>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002DE80 <AmiBlitz3.ab3@16389>   BSR.w tokejsr2
0002DE82 <AmiBlitz3.ab3@16390>   MOVE.l (a7)+,a0
0002DE84 <AmiBlitz3.ab3@16391>   ADDQ.l #6,a7                      ; a5 need not restore
0002DE88 <AmiBlitz3.ab3@16392>   CMP.w #")",d0
0002DE8C <AmiBlitz3.ab3@16393>   BNE 'nobracket
0002DE92 <AmiBlitz3.ab3@16394>   JSR get1bytemain
0002DE94 <AmiBlitz3.ab3@16395> 'nobracket  RTS
0002DE98 <AmiBlitz3.ab3@16397> nonew_  CMP.w #-$7F4A,D0
0002DE9C <AmiBlitz3.ab3@16398>    BEQ.w JL_0_A98C
0002DEA0 <AmiBlitz3.ab3@16399>   CMP.w #-$7F48,D0
0002DEA4 <AmiBlitz3.ab3@16400>    BEQ.w doaddr
0002DEA8 <AmiBlitz3.ab3@16401>   CMP.w #-$7F3C,D0
0002DEAC <AmiBlitz3.ab3@16402>    BEQ.w domaximum
0002DEB0 <AmiBlitz3.ab3@16403>   CMP.w #-$7F2F,D0
0002DEB4 <AmiBlitz3.ab3@16404>    BEQ.w doused
0002DEB6 <AmiBlitz3.ab3@16405>   MOVE.w D2,-(A7)
0002DEB8 <AmiBlitz3.ab3@16406>   MOVE.w D0,D1
0002DEBC <AmiBlitz3.ab3@16407>   BCLR #$F,D1
0002DEC0 <AmiBlitz3.ab3@16409>    BSR.w searchinstr
0002DEC2 <AmiBlitz3.ab3@16410>   MOVE.w (A3),D1
0002DEC6 <AmiBlitz3.ab3@16411>   BTST #$1,D1
0002DECA <AmiBlitz3.ab3@16412>    BEQ.w noreturn_                                         ;syntax error noreturn
0002DECE <AmiBlitz3.ab3@16413>   BTST #$2,D1
0002DED2 <AmiBlitz3.ab3@16414>    BNE.w JL_0_AC1A
0002DED4 <AmiBlitz3.ab3@16415>   LSR.w #8,D1
0002DEDA <AmiBlitz3.ab3@16416>   BTST #$3,$1(A3)
0002DEDE <AmiBlitz3.ab3@16417>    BEQ.w JL_0_AB4C
0002DEE4 <AmiBlitz3.ab3@16418>    JSR AJL_0_498A
0002DEEA <AmiBlitz3.ab3@16421>    CLR.l rightsidetype
0002DEF0 <AmiBlitz3.ab3@16422>    CLR.w rightsideflagmask
0002DEF2 <AmiBlitz3.ab3@16423>    MOVE.w D1,-(A7)                                         ;is library instruction
0002DEF6 <AmiBlitz3.ab3@16424>   CMP.w #$7,D1
0002DEFA <AmiBlitz3.ab3@16425>    BNE.w JL_0_AB5E
0002DEFC <AmiBlitz3.ab3@16426>   MOVE.l A2,-(A7)
0002DF00 <AmiBlitz3.ab3@16427>    BSR.w makesbase
0002DF02 <AmiBlitz3.ab3@16428>   MOVEA.l (A7)+,A2
0002DF06 <AmiBlitz3.ab3@16431>     BSR.w JL_0_AFA2
0002DF08 <AmiBlitz3.ab3@16432>   MOVE.w D3,-(A7)
0002DF0C <AmiBlitz3.ab3@16433>    BSR.w get1bytemain
0002DF0E <AmiBlitz3.ab3@16434>   MOVEQ.l #$00,D1
0002DF12 <AmiBlitz3.ab3@16435>   CMP.w #$28,D0
0002DF16 <AmiBlitz3.ab3@16436>    BNE.w JL_0_AB80
0002DF1C <AmiBlitz3.ab3@16437>    JSR JL_0_66F6
0002DF1E <AmiBlitz3.ab3@16438>   TST.w D1
0002DF22 <AmiBlitz3.ab3@16439>    BEQ.w syntaxerr
0002DF26 <AmiBlitz3.ab3@16440> BRA.w JL_0_AB84
0002DF30 <AmiBlitz3.ab3@16445>   MOVE.w oldqflag,instringon
0002DF36 <AmiBlitz3.ab3@16446>   MOVEA.l lastsourcepos,A5
0002DF3C <AmiBlitz3.ab3@16449>    MOVE.w regnum,-(A7)
0002DF46 <AmiBlitz3.ab3@16450>    MOVE.w regnum,regnumstore
0002DF4C <AmiBlitz3.ab3@16451>    TST.b fpu
0002DF50 <AmiBlitz3.ab3@16452>             BEQ 'nofloat
0002DF56 <AmiBlitz3.ab3@16453>             CMP.w #$ffff,28(a3)
0002DF5A <AmiBlitz3.ab3@16454>             BNE 'nofloat
0002DF60 <AmiBlitz3.ab3@16455>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002DF64 <AmiBlitz3.ab3@16456>             BEQ 'nofloat
0002DF6A <AmiBlitz3.ab3@16457>             CMP.w #$3c02,34(a3)                            ;int skip
0002DF6E <AmiBlitz3.ab3@16458>             BEQ 'quick
0002DF72 <AmiBlitz3.ab3@16459>             CMP.b #5,(a3)
0002DF76 <AmiBlitz3.ab3@16460>             BNE 'nofloat
0002DF7C <AmiBlitz3.ab3@16463>             CLR.l load_var_addr
0002DF80 <AmiBlitz3.ab3@16464> BRA 'isfpu
0002DF86 <AmiBlitz3.ab3@16467>    CLR.w regnum
0002DF88 <AmiBlitz3.ab3@16470>    MOVE.w D1,-(A7)
0002DF8E <AmiBlitz3.ab3@16471>   BTST #$3,$1(A3)
0002DF92 <AmiBlitz3.ab3@16472>    BEQ.w JL_0_ABB0
0002DF96 <AmiBlitz3.ab3@16491>   MOVE.w $6(A7),D1
0002DF9C <AmiBlitz3.ab3@16492>   MOVE.w d1,peeksize
0002DFA0 <AmiBlitz3.ab3@16502>   ORI.w #$7000,D1
0002DFA4 <AmiBlitz3.ab3@16503>   BSR.w writeword                                          ;write peekmode
0002DFAA <AmiBlitz3.ab3@16506>   ADDQ.w #1,regnum
0002DFAC <AmiBlitz3.ab3@16507>   MOVE.w (A7),D1
0002DFB4 <AmiBlitz3.ab3@16510>   MOVE.w 2(a7),tempregnum
0002DFBA <AmiBlitz3.ab3@16511>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002DFC0 <AmiBlitz3.ab3@16512>   CLR.w parnum                                              ;7.2014
0002DFC6 <AmiBlitz3.ab3@16513>   JSR JL_0_4878                                             ;write code of blitzfunc
0002DFCC <AmiBlitz3.ab3@16514>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002DFCE <AmiBlitz3.ab3@16515>   TST.w (A7)+
0002DFD2 <AmiBlitz3.ab3@16516>   BEQ.w JL_0_ABC6
0002DFD6 <AmiBlitz3.ab3@16517>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002DFDA <AmiBlitz3.ab3@16518>   BNE.w errorbracketmiss                                    ; was syntax error
0002DFE0 <AmiBlitz3.ab3@16519>   CLR.l lasttoken
0002DFE4 <AmiBlitz3.ab3@16520>   BSR.w get1bytemain
0002DFE6 <AmiBlitz3.ab3@16523>    MOVE.w (A7)+,D1
0002DFEC <AmiBlitz3.ab3@16524>    MOVE.w D1,regnum
0002DFF0 <AmiBlitz3.ab3@16525>    BEQ.w JL_0_ABDE
0002DFF6 <AmiBlitz3.ab3@16526>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002DFFA <AmiBlitz3.ab3@16527>    BNE 'noval
0002E000 <AmiBlitz3.ab3@16528>    TST.b fpu
0002E004 <AmiBlitz3.ab3@16529>    BEQ 'noval
0002E00A <AmiBlitz3.ab3@16530>    CLR.l load_var_addr
0002E00C <AmiBlitz3.ab3@16531>    MOVEQ #0,d1
0002E012 <AmiBlitz3.ab3@16532>    MOVE.w regnum,d1
0002E014 <AmiBlitz3.ab3@16533>    LSL.l #7,d1
0002E01A <AmiBlitz3.ab3@16534>    OR.l #$f2000000,d1
0002E01E <AmiBlitz3.ab3@16535>    BSR writelong
0002E022 <AmiBlitz3.ab3@16536> BRA JL_0_ABDE
0002E028 <AmiBlitz3.ab3@16540>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E02C <AmiBlitz3.ab3@16541>    BEQ 'quick
0002E030 <AmiBlitz3.ab3@16542>    CMP.b #5,d2
0002E034 <AmiBlitz3.ab3@16543>    BNE 'nofpu
0002E03A <AmiBlitz3.ab3@16544>    TST.b fpu
0002E03E <AmiBlitz3.ab3@16545>    BEQ 'nofpu
0002E044 <AmiBlitz3.ab3@16550>    CLR.l load_var_addr
0002E048 <AmiBlitz3.ab3@16551> BRA JL_0_ABDE
0002E04A <AmiBlitz3.ab3@16554>   LSL.w #8,D1
0002E04C <AmiBlitz3.ab3@16555>   LSL.w #1,D1
0002E050 <AmiBlitz3.ab3@16556>   ORI.w #$2000,D1
0002E054 <AmiBlitz3.ab3@16557>   BSR.w writeword                                          ;write move.l d0,dx
0002E05A <AmiBlitz3.ab3@16558>   TST.b fpu
0002E05E <AmiBlitz3.ab3@16559>   BEQ JL_0_ABDE
0002E060 <AmiBlitz3.ab3@16560>   MOVEQ #0,d1
0002E066 <AmiBlitz3.ab3@16561>   MOVE.w regnum,d1
0002E068 <AmiBlitz3.ab3@16562>   LSL.l #7,d1
0002E06E <AmiBlitz3.ab3@16563>   OR.l #$f2000000,d1
0002E070 <AmiBlitz3.ab3@16567>        MOVE.w (A7)+,D3
0002E074 <AmiBlitz3.ab3@16568>        BEQ.w JL_0_ABFC
0002E07A <AmiBlitz3.ab3@16569>        TST.b fpu
0002E07E <AmiBlitz3.ab3@16570>        BEQ 'nofpu
0002E080 <AmiBlitz3.ab3@16571>       MOVE.l d0,-(a7)
0002E082 <AmiBlitz3.ab3@16572>        MOVE.l a0,-(a7)
0002E088 <AmiBlitz3.ab3@16573>        MOVE.l stacktrack,d1
0002E08E <AmiBlitz3.ab3@16574>        LEA fpustackbase,a0
0002E096 <AmiBlitz3.ab3@16575>        MOVE.w 0(a0,d1),regmask
0002E098 <AmiBlitz3.ab3@16576>        MOVE.l (a7)+,a0
0002E09C <AmiBlitz3.ab3@16577>       MOVE.w #8,d0
0002E0A0 <AmiBlitz3.ab3@16580>       BEQ 'ready
0002E0A6 <AmiBlitz3.ab3@16581>       BTST d0,regmask
0002E0AA <AmiBlitz3.ab3@16582>       BEQ 'noa7
0002E0AC <AmiBlitz3.ab3@16583>       MOVEQ #0,d1
0002E0AE <AmiBlitz3.ab3@16584>       MOVE.w d0,d1
0002E0B0 <AmiBlitz3.ab3@16585>       SUBQ.w #1,d1
0002E0B2 <AmiBlitz3.ab3@16586>       ASL #7,d1
0002E0B8 <AmiBlitz3.ab3@16588>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E0BC <AmiBlitz3.ab3@16589>       BSR writelong
0002E0C2 <AmiBlitz3.ab3@16590>       SUBQ.l #2,stacktrack
0002E0C4 <AmiBlitz3.ab3@16593>       SUBQ.w #1,d0
0002E0C8 <AmiBlitz3.ab3@16594>       BNE 'loop
0002E0CA <AmiBlitz3.ab3@16597>       MOVE.l (a7)+,d0
0002E0D0 <AmiBlitz3.ab3@16598>       SUBQ.l #2,stacktrack                                 ;int track
0002E0D4 <AmiBlitz3.ab3@16601>    MOVE.w #$4CDF,D1
0002E0D8 <AmiBlitz3.ab3@16602>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E0DA <AmiBlitz3.ab3@16603>   MOVEQ.l #$00,D1
0002E0DC <AmiBlitz3.ab3@16604>   MOVEQ.l #$0F,D4
0002E0DE <AmiBlitz3.ab3@16607>     LSL.w #1,D3
0002E0E0 <AmiBlitz3.ab3@16608>     ROXR.w #1,D1
0002E0E4 <AmiBlitz3.ab3@16609>   DBF D4,JL_0_ABF0
0002E0E8 <AmiBlitz3.ab3@16611>    BSR.w writeword
0002E0EE <AmiBlitz3.ab3@16612>    TST.b fast
0002E0F2 <AmiBlitz3.ab3@16613>    BEQ JL_0_ABFC
0002E0F8 <AmiBlitz3.ab3@16614>    TST.w regnum
0002E0FC <AmiBlitz3.ab3@16615>    BEQ JL_0_ABFC
0002E102 <AmiBlitz3.ab3@16616>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E106 <AmiBlitz3.ab3@16617>    BNE 'l1
0002E10C <AmiBlitz3.ab3@16618>    MOVE.w regnum,d1
0002E10E <AmiBlitz3.ab3@16619>    ASL.l #8,d1
0002E110 <AmiBlitz3.ab3@16620>    ASL.l #1,d1
0002E114 <AmiBlitz3.ab3@16621>    OR.w #$70ff,d1
0002E11E <AmiBlitz3.ab3@16622>    SUB.l #12,destpointer
0002E122 <AmiBlitz3.ab3@16623>    BSR writeword
0002E128 <AmiBlitz3.ab3@16626>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E12C <AmiBlitz3.ab3@16627>    BNE 'l2
0002E132 <AmiBlitz3.ab3@16628>     MOVE.w regnum,d1
0002E134 <AmiBlitz3.ab3@16629>     ASL.l #8,d1
0002E136 <AmiBlitz3.ab3@16630>     ASL.l #1,d1
0002E13A <AmiBlitz3.ab3@16631>     OR.w #$7000,d1
0002E144 <AmiBlitz3.ab3@16632>     SUB.l #12,destpointer
0002E148 <AmiBlitz3.ab3@16633>     BSR writeword
0002E14A <AmiBlitz3.ab3@16637>    MOVE.w (A7)+,D2
0002E14E <AmiBlitz3.ab3@16638>   CMP.w #$7,D2                                             ;destination var type
0002E152 <AmiBlitz3.ab3@16639>    BNE.w JL_0_AC16
0002E158 <AmiBlitz3.ab3@16640>   MOVE.w putstlen,D1
0002E15E <AmiBlitz3.ab3@16641>   OR.w regnum,D1
0002E162 <AmiBlitz3.ab3@16642>    BSR.w writeword
0002E166 <AmiBlitz3.ab3@16645> BRA.w JL_0_AF66
0002E16A <AmiBlitz3.ab3@16650>   MOVE.w $6(A3),D1
0002E16E <AmiBlitz3.ab3@16651>    BSR.w uselib
0002E172 <AmiBlitz3.ab3@16652>    BSR.w JL_0_AD40
0002E174 <AmiBlitz3.ab3@16653>   MOVE.l D4,D1
0002E176 <AmiBlitz3.ab3@16654>   MOVE.l D5,-(A7)
0002E17A <AmiBlitz3.ab3@16655>    BSR.w JL_0_AD38
0002E17E <AmiBlitz3.ab3@16656>   MOVE.w $A(A1),-(A7)
0002E180 <AmiBlitz3.ab3@16657>   ADDQ.w #8,A3
0002E182 <AmiBlitz3.ab3@16658>   MOVE.w (A3)+,-(A7)
0002E184 <AmiBlitz3.ab3@16659>   MOVE.l A3,-(A7)
0002E188 <AmiBlitz3.ab3@16660>    BSR.w get1bytemain
0002E18A <AmiBlitz3.ab3@16661>   MOVE.w D0,-(A7)
0002E18C <AmiBlitz3.ab3@16662>   MOVEQ.l #$00,D3
0002E192 <AmiBlitz3.ab3@16663>   JSR checka4a5
0002E194 <AmiBlitz3.ab3@16665>   MOVE.b (A3)+,D1
0002E198 <AmiBlitz3.ab3@16666>    BMI.w JL_0_AC6A
0002E19A <AmiBlitz3.ab3@16667>   MOVEQ.l #$03,D2
0002E19C <AmiBlitz3.ab3@16668>   ADDQ.w #1,D3
0002E1A0 <AmiBlitz3.ab3@16669>   MOVEM.l D3/A3,-(A7)
0002E1A6 <AmiBlitz3.ab3@16670>   MOVE.b funcparloop,-(a7)
0002E1AC <AmiBlitz3.ab3@16671>   CLR.b funcparloop
0002E1B2 <AmiBlitz3.ab3@16672>   MOVE.b blitzparloop,-(a7)
0002E1BA <AmiBlitz3.ab3@16673>   MOVE.b #1,blitzparloop
0002E1C0 <AmiBlitz3.ab3@16674>   MOVE.l lasttoken,-(a7)
0002E1C6 <AmiBlitz3.ab3@16675>   MOVE.l leftsidetype,-(a7)
0002E1CC <AmiBlitz3.ab3@16676>   MOVE.l rightsidetype,-(a7)
0002E1D0 <AmiBlitz3.ab3@16677>   BSR.w peval
0002E1D6 <AmiBlitz3.ab3@16678>   MOVE.l (a7)+,rightsidetype
0002E1DC <AmiBlitz3.ab3@16679>   MOVE.l (a7)+,leftsidetype
0002E1E2 <AmiBlitz3.ab3@16680>   MOVE.l (a7)+,lasttoken
0002E1E8 <AmiBlitz3.ab3@16681>   MOVE.b (a7)+,blitzparloop
0002E1EE <AmiBlitz3.ab3@16682>   MOVE.b (a7)+,funcparloop
0002E1F4 <AmiBlitz3.ab3@16683>   SUBQ.w #4,a2offset
0002E1F8 <AmiBlitz3.ab3@16684>   MOVEM.l (A7)+,D3/A3
0002E1FC <AmiBlitz3.ab3@16685>   CMP.w #$2C,D0
0002E200 <AmiBlitz3.ab3@16686>    BEQ.w JL_0_AC40
0002E202 <AmiBlitz3.ab3@16687>   TST.b (A3)
0002E206 <AmiBlitz3.ab3@16688>    BPL.w syntaxerr
0002E208 <AmiBlitz3.ab3@16691>   MOVE.w (A7)+,D1
0002E20C <AmiBlitz3.ab3@16692>    BSR.w JL_0_AD04
0002E20E <AmiBlitz3.ab3@16693>   MOVEA.l (A7)+,A3
0002E210 <AmiBlitz3.ab3@16694>   SUBQ.w #1,D3
0002E214 <AmiBlitz3.ab3@16695>    BMI.w JL_0_ACBE
0002E216 <AmiBlitz3.ab3@16698>   TST.b (A3)+
0002E21A <AmiBlitz3.ab3@16699>    BPL.w JL_0_AC78
0002E21C <AmiBlitz3.ab3@16700>   SUBQ.w #1,A3
0002E21E <AmiBlitz3.ab3@16703>     MOVEQ.l #$00,D1
0002E220 <AmiBlitz3.ab3@16704>     MOVE.b -(A3),D1
0002E224 <AmiBlitz3.ab3@16705>     BTST #$4,D1
0002E228 <AmiBlitz3.ab3@16706>      BNE.w JL_0_ACAA
0002E22E <AmiBlitz3.ab3@16707>     CMP.w regnum,D1
0002E232 <AmiBlitz3.ab3@16708>      BCC.w JL_0_AC9E
0002E234 <AmiBlitz3.ab3@16709>     BSET D1,D5
0002E236 <AmiBlitz3.ab3@16710>     MOVEQ.l #$0F,D0
0002E238 <AmiBlitz3.ab3@16711>     SUB.w D1,D0
0002E23A <AmiBlitz3.ab3@16712>     BSET D0,D4
0002E23C <AmiBlitz3.ab3@16715>     LSL.w #8,D1
0002E23E <AmiBlitz3.ab3@16716>     LSL.w #1,D1
0002E242 <AmiBlitz3.ab3@16717>     ORI.w #$201F,D1
0002E246 <AmiBlitz3.ab3@16718>   BRA.w JL_0_ACB6
0002E24A <AmiBlitz3.ab3@16721>     ANDI.w #$7,D1
0002E24C <AmiBlitz3.ab3@16722>     LSL.w #8,D1
0002E24E <AmiBlitz3.ab3@16723>     LSL.w #1,D1
0002E252 <AmiBlitz3.ab3@16724>     ORI.w #$205F,D1
0002E256 <AmiBlitz3.ab3@16727>      BSR.w writeword
0002E25A <AmiBlitz3.ab3@16728>   DBF D3,JL_0_AC80
0002E260 <AmiBlitz3.ab3@16731>   MOVE.w (A7)+,libjsr+2
0002E266 <AmiBlitz3.ab3@16732>   MOVE.w (A7)+,libbase+2
0002E26C <AmiBlitz3.ab3@16733>   MOVE.l libbase,D1
0002E270 <AmiBlitz3.ab3@16734>    BSR.w writelong
0002E276 <AmiBlitz3.ab3@16735>   MOVE.l libjsr,D1
0002E27A <AmiBlitz3.ab3@16736>    BSR.w writelong
0002E280 <AmiBlitz3.ab3@16737>   MOVE.w regnum,D1
0002E284 <AmiBlitz3.ab3@16738>    BEQ.w JL_0_ACF4
0002E286 <AmiBlitz3.ab3@16739>   LSL.w #8,D1
0002E288 <AmiBlitz3.ab3@16740>   LSL.w #1,D1
0002E28C <AmiBlitz3.ab3@16741>   ORI.w #$2000,D1
0002E290 <AmiBlitz3.ab3@16742>    BSR.w writeword
0002E292 <AmiBlitz3.ab3@16745>   MOVE.l (A7)+,D1
0002E296 <AmiBlitz3.ab3@16746>    BSR.w JL_0_AD38
0002E29C <AmiBlitz3.ab3@16747>    JSR restorea4a5
0002E29E <AmiBlitz3.ab3@16748>   MOVEQ.l #$03,D2
0002E2A2 <AmiBlitz3.ab3@16749>    BSR.w reget
0002E2A6 <AmiBlitz3.ab3@16750> BRA.w JL_0_AF66
0002E2A8 <AmiBlitz3.ab3@16753>   TST.w D3
0002E2AC <AmiBlitz3.ab3@16754>    BEQ.w JL_0_AD1E
0002E2B0 <AmiBlitz3.ab3@16755>   CMP.w #$28,D1
0002E2B4 <AmiBlitz3.ab3@16756>    BNE.w syntaxerr
0002E2B8 <AmiBlitz3.ab3@16757>   CMP.w #$29,D0
0002E2BC <AmiBlitz3.ab3@16758>    BNE.w syntaxerr
0002E2C0 <AmiBlitz3.ab3@16759> BRA.w get1bytemain
0002E2C4 <AmiBlitz3.ab3@16762>   CMP.w #$28,D1
0002E2C8 <AmiBlitz3.ab3@16763>    BNE.w JL_0_AD36
0002E2CC <AmiBlitz3.ab3@16764>    BSR.w get1bytemain
0002E2D0 <AmiBlitz3.ab3@16765>   CMP.w #$29,D0
0002E2D4 <AmiBlitz3.ab3@16766>    BNE.w syntaxerr
0002E2D8 <AmiBlitz3.ab3@16767> BRA.w get1bytemain
0002E2DA <AmiBlitz3.ab3@16770> RTS
0002E2DC <AmiBlitz3.ab3@16773>   TST.w D1
0002E2E0 <AmiBlitz3.ab3@16774>    BNE.w writelong
0002E2E2 <AmiBlitz3.ab3@16775> RTS
0002E2E6 <AmiBlitz3.ab3@16779>   MOVE.w #$48E7,D4
0002E2E8 <AmiBlitz3.ab3@16780>   SWAP D4
0002E2EA <AmiBlitz3.ab3@16781>   CLR.w D4
0002E2EE <AmiBlitz3.ab3@16782>   MOVE.w #$4CDF,D5
0002E2F0 <AmiBlitz3.ab3@16783>   SWAP D5
0002E2F2 <AmiBlitz3.ab3@16784>   CLR.w D5
0002E2F8 <AmiBlitz3.ab3@16785>   MOVE.w regnum,D1
0002E2FC <AmiBlitz3.ab3@16786>    BEQ.w JL_0_AD74
0002E300 <AmiBlitz3.ab3@16787>   BSET #$F,D4
0002E304 <AmiBlitz3.ab3@16788>   BSET #$0,D5
0002E308 <AmiBlitz3.ab3@16789>   CMP.w #$2,D1
0002E30C <AmiBlitz3.ab3@16790>    BCS.w JL_0_AD72
0002E310 <AmiBlitz3.ab3@16793>   BSET #$E,D4
0002E314 <AmiBlitz3.ab3@16794>   BSET #$1,D5
0002E316 <AmiBlitz3.ab3@16797> RTS
0002E31C <AmiBlitz3.ab3@16800>   TST.w fuckpos
0002E320 <AmiBlitz3.ab3@16801>   BNE.w JL_0_AD6A
0002E322 <AmiBlitz3.ab3@16802> RTS
0002E324 <AmiBlitz3.ab3@16805> fuckpos:  Ds.w 1
0002E32A <AmiBlitz3.ab3@16809>   MOVE.w sbasegot,D1
0002E32E <AmiBlitz3.ab3@16810>    BEQ.w makesbase__skip
0002E332 <AmiBlitz3.ab3@16814>   MOVE.w sbgot(PC),D1
0002E336 <AmiBlitz3.ab3@16815>    BNE.w makesbase__skip2
0002E33E <AmiBlitz3.ab3@16819>   MOVE.w #$0002,sbgot
0002E344 <AmiBlitz3.ab3@16820>   MOVE.w movea3a7,D1
0002E348 <AmiBlitz3.ab3@16821> BRA.w writeword
0002E34A <AmiBlitz3.ab3@16824> RTS
0002E352 <AmiBlitz3.ab3@16829>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E358 <AmiBlitz3.ab3@16832>   MOVE.l #$C601,D1
0002E360 <AmiBlitz3.ab3@16833>   MOVE.w #-1,sbasegot
0002E366 <AmiBlitz3.ab3@16834>   MOVE.l d1,lastinstruction
0002E36A <AmiBlitz3.ab3@16835>   BSR.w Atokejsr
0002E36C <AmiBlitz3.ab3@16836> RTS
0002E376 <AmiBlitz3.ab3@16841>   MOVE.l data1,litdata1
0002E37C <AmiBlitz3.ab3@16842>   TST.b fast
0002E380 <AmiBlitz3.ab3@16843>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E384 <AmiBlitz3.ab3@16847> BRA 'l50                                                   ;to deactivate
0002E38A <AmiBlitz3.ab3@16853>   TST.b optistring
0002E38E <AmiBlitz3.ab3@16854>   BNE.s 'l21
0002E394 <AmiBlitz3.ab3@16855>   CLR.b string1
0002E39C <AmiBlitz3.ab3@16856>   MOVE.b #1,optistring
0002E3A2 <AmiBlitz3.ab3@16857>   TST.b nostringopt
0002E3A6 <AmiBlitz3.ab3@16858>   BNE 'l21
0002E3A8 <AmiBlitz3.ab3@16859>   MOVE.l a5,a4
0002E3AA <AmiBlitz3.ab3@16860>   SUBQ.l #1,a4
0002E3AC <AmiBlitz3.ab3@16863>     TST.b (a4)
0002E3B0 <AmiBlitz3.ab3@16864>     BMI 'l19a
0002E3B4 <AmiBlitz3.ab3@16865>     BEQ.s 'l20
0002E3B8 <AmiBlitz3.ab3@16866>     CMP.b #$22,(a4)
0002E3BC <AmiBlitz3.ab3@16867>     BEQ.s 'l19
0002E3C2 <AmiBlitz3.ab3@16870>     TST.w string1
0002E3C6 <AmiBlitz3.ab3@16871>     BNE 'l11
0002E3CA <AmiBlitz3.ab3@16872>     CMP.b #":",(a4)
0002E3CE <AmiBlitz3.ab3@16873>     BEQ.s 'l20
0002E3D2 <AmiBlitz3.ab3@16874>     CMP.b #";",(a4)
0002E3D6 <AmiBlitz3.ab3@16875>     BEQ.s 'l20
0002E3DA <AmiBlitz3.ab3@16876>     CMP.b #"+",(a4)
0002E3DE <AmiBlitz3.ab3@16877>     BEQ.s 'l21
0002E3E2 <AmiBlitz3.ab3@16878>     CMP.b #",",(a4)
0002E3E6 <AmiBlitz3.ab3@16879>     BEQ.s 'l20                                             ;was l21
0002E3EA <AmiBlitz3.ab3@16880>     CMP.b #")",(a4)
0002E3EE <AmiBlitz3.ab3@16881>     BEQ.s 'l20                                             ;was l21
0002E3F0 <AmiBlitz3.ab3@16884>     ADDQ.l #1,a4
0002E3F4 <AmiBlitz3.ab3@16885> BRA.s 'l10
0002E3FC <AmiBlitz3.ab3@16888>   BCHG #0,string1
0002E400 <AmiBlitz3.ab3@16889> BRA 'l18
0002E402 <AmiBlitz3.ab3@16892>   ADDQ.l #1,a4
0002E404 <AmiBlitz3.ab3@16893>   TST.b (a4)
0002E408 <AmiBlitz3.ab3@16894>   BEQ 'l21
0002E40C <AmiBlitz3.ab3@16895> BRA 'l11
0002E40E <AmiBlitz3.ab3@16898>   MOVE.l a5,a4
0002E410 <AmiBlitz3.ab3@16899>   SUBQ.l #1,a4
0002E414 <AmiBlitz3.ab3@16902>   CMP.b #$20,-(a4)
0002E418 <AmiBlitz3.ab3@16903>   BEQ 'll1
0002E41C <AmiBlitz3.ab3@16904>   CMP.b #"+",(a4)
0002E420 <AmiBlitz3.ab3@16905>   BEQ 'l21
0002E428 <AmiBlitz3.ab3@16920>   MOVE.b #2,optistring
0002E430 <AmiBlitz3.ab3@16923>   CMP.b #2,optistring
0002E434 <AmiBlitz3.ab3@16924>   BEQ.s 'l100
0002E438 <AmiBlitz3.ab3@16927>   BSR.w makesbase
0002E43C <AmiBlitz3.ab3@16928>   BSR.w pokedata1                                          ;writestringsizespace
0002E440 <AmiBlitz3.ab3@16929>   BSR.w pokedata1
0002E442 <AmiBlitz3.ab3@16932>   MOVEQ.l #$00,D2
0002E448 <AmiBlitz3.ab3@16935>     MOVE.l a5,lastsourcepos
0002E44A <AmiBlitz3.ab3@16936>     MOVEQ #0,d0
0002E44C <AmiBlitz3.ab3@16937>     MOVE.b (a5)+,d0
0002E44E <AmiBlitz3.ab3@16938>     TST.w D0
0002E452 <AmiBlitz3.ab3@16939>      BEQ.w notqerr
0002E456 <AmiBlitz3.ab3@16940>     CMP.w #$22,D0                                          ; --- " ---
0002E45A <AmiBlitz3.ab3@16941>      BEQ.w JL_0_ADF6
0002E45E <AmiBlitz3.ab3@16942>     CMP.b #"\",d0
0002E462 <AmiBlitz3.ab3@16943>      BNE 'l1
0002E466 <AmiBlitz3.ab3@16944>     CMP.b #"\",(a5)
0002E46A <AmiBlitz3.ab3@16945>      BNE 'l1
0002E470 <AmiBlitz3.ab3@16946>     TST.b newsyntax
0002E474 <AmiBlitz3.ab3@16947>      BEQ 'l1
0002E47A <AmiBlitz3.ab3@16948>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E47E <AmiBlitz3.ab3@16949>     BNE 'l2
0002E480 <AmiBlitz3.ab3@16950>     ADDQ #2,a5
0002E482 <AmiBlitz3.ab3@16953>     ADDQ.w #1,D2
0002E484 <AmiBlitz3.ab3@16954>     MOVE.w D0,D1
0002E488 <AmiBlitz3.ab3@16955>     BSR.w pokedata1b                                        ;writestring
0002E48C <AmiBlitz3.ab3@16956> BRA.w writestring
0002E492 <AmiBlitz3.ab3@16959>     JSR check_newconstants
0002E496 <AmiBlitz3.ab3@16960> BRA writestring
0002E49C <AmiBlitz3.ab3@16963>   NOT instringon
0002E4A2 <AmiBlitz3.ab3@16964>   MOVE.w dontwrite,D1
0002E4A6 <AmiBlitz3.ab3@16965>   BNE.w JL_0_AE0A
0002E4AE <AmiBlitz3.ab3@16966>   CMP.b #2,optistring
0002E4B2 <AmiBlitz3.ab3@16967>   BEQ 'l10
0002E4B8 <AmiBlitz3.ab3@16968>     MOVEA.l litdata1,A0
0002E4BA <AmiBlitz3.ab3@16969>     CLR.w (A0)+                                            ;writesize
0002E4BC <AmiBlitz3.ab3@16970>     MOVE.w D2,(A0)
0002E4C0 <AmiBlitz3.ab3@16974>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002E4C6 <AmiBlitz3.ab3@16975>   ADDQ.l #1,data1
0002E4CE <AmiBlitz3.ab3@16976>   BCLR #$0,data1+3
0002E4D0 <AmiBlitz3.ab3@16977>   MOVEQ.l #$07,D2
0002E4D4 <AmiBlitz3.ab3@16978> BRA.w get1bytemain
0002E4D8 <AmiBlitz3.ab3@16982>   BSR.w makename2
0002E4DC <AmiBlitz3.ab3@16983>   BSR.w findlabel2
0002E4E0 <AmiBlitz3.ab3@16984>   BEQ.w JL_0_AE4A
0002E4E4 <AmiBlitz3.ab3@16985>   BSR.w addlabelhash
0002E4E8 <AmiBlitz3.ab3@16986>   CLR.l $4(A2)
0002E4EC <AmiBlitz3.ab3@16987>   CLR.l $8(A2)
0002E4F4 <AmiBlitz3.ab3@16989>   MOVE.w linenumat+2,$10(A2)
0002E4FA <AmiBlitz3.ab3@16990>   MOVE.w linenumat,d0
0002E4FC <AmiBlitz3.ab3@16991>   MOVEQ #0,d1
0002E500 <AmiBlitz3.ab3@16992>   MOVE.b -1(a2,d7),d1
0002E504 <AmiBlitz3.ab3@16993>   MOVE.w d0,0(a2,d1)
0002E508 <AmiBlitz3.ab3@16994> BRA.w JL_0_AE52
0002E50C <AmiBlitz3.ab3@16997>   TST.l $8(A2)
0002E510 <AmiBlitz3.ab3@16998>   BNE.w JL_0_AE88
0002E516 <AmiBlitz3.ab3@17001>   MOVEA.l _execbase,A6
0002E518 <AmiBlitz3.ab3@17002>   MOVEQ.l #$0C+2,D0
0002E51A <AmiBlitz3.ab3@17003>   MOVEQ.l #$01,D1
0002E520 <AmiBlitz3.ab3@17004>   MOVE.l mempool,a0
0002E524 <AmiBlitz3.ab3@17005>   JSR _AllocPooled(a6)
0002E526 <AmiBlitz3.ab3@17007>   MOVEA.l D0,A0
0002E52A <AmiBlitz3.ab3@17008>   MOVE.l $4(A2),(A0)
0002E52E <AmiBlitz3.ab3@17009>   MOVE.l A0,$4(A2)
0002E536 <AmiBlitz3.ab3@17010>   MOVE.l destpointer,$4(A0)
0002E53A <AmiBlitz3.ab3@17011>   ADDQ.l #2,$4(A0)
0002E542 <AmiBlitz3.ab3@17012>   MOVE.w procnum,$8(A0)
0002E54A <AmiBlitz3.ab3@17013>   MOVE.w linenumat+2,$A(A0)
0002E552 <AmiBlitz3.ab3@17014>   MOVE.w linenumat,$c(a0)
0002E554 <AmiBlitz3.ab3@17015> RTS
0002E558 <AmiBlitz3.ab3@17018>   MOVE.l $4(A2),D1
0002E55C <AmiBlitz3.ab3@17019>   BTST #$0,D1
0002E560 <AmiBlitz3.ab3@17020>    BNE.w illlaberr
0002E566 <AmiBlitz3.ab3@17021>   MOVE.w procnum,D1
0002E56A <AmiBlitz3.ab3@17022>   CMP.w $10(A2),D1
0002E56E <AmiBlitz3.ab3@17023>    BNE.w referr
0002E570 <AmiBlitz3.ab3@17024> RTS
0002E572 <AmiBlitz3.ab3@17028>   MOVE.w D0,-(A7)
0002E57A <AmiBlitz3.ab3@17029>   CMP.b #2,optistring
0002E57E <AmiBlitz3.ab3@17030>   BEQ 'l10
0002E584 <AmiBlitz3.ab3@17033>   MOVE.w numtoa0,D1
0002E588 <AmiBlitz3.ab3@17034>    BSR.w writeword
0002E58C <AmiBlitz3.ab3@17035>    BSR.w addoff
0002E592 <AmiBlitz3.ab3@17036>   MOVE.l litdata1,D1
0002E596 <AmiBlitz3.ab3@17037>    BSR.w writelong
0002E59C <AmiBlitz3.ab3@17038>   MOVE.w pushlen,D1
0002E5A0 <AmiBlitz3.ab3@17039>    BSR.w writeword
0002E5A4 <AmiBlitz3.ab3@17040>   MOVE.w #$C600,D1
0002E5A8 <AmiBlitz3.ab3@17041>    BSR.w Atokejsr
0002E5AA <AmiBlitz3.ab3@17042>   MOVE.w (A7)+,D0
0002E5AC <AmiBlitz3.ab3@17043> RTS
0002E5AE <AmiBlitz3.ab3@17046>   MOVEQ #0,d1
0002E5B2 <AmiBlitz3.ab3@17047>   BSR.w pokedata1b
0002E5B8 <AmiBlitz3.ab3@17048>   MOVE.l destpointer,a4
0002E5BC <AmiBlitz3.ab3@17049>   MOVE.w #$203c,d1
0002E5C2 <AmiBlitz3.ab3@17050>   TST.w mode
0002E5C6 <AmiBlitz3.ab3@17051>   BNE 'lm10
0002E5CC <AmiBlitz3.ab3@17052>    ADDQ.w #4,a2offset
0002E5D0 <AmiBlitz3.ab3@17053>   MOVE.w #$2f3c,d1
0002E5D6 <AmiBlitz3.ab3@17056>   TST.w mode
0002E5DA <AmiBlitz3.ab3@17057>   BEQ 'lm3
0002E5E0 <AmiBlitz3.ab3@17058>   MOVE.w regnum,D0
0002E5E2 <AmiBlitz3.ab3@17059>   LSL.w #8,D0
0002E5E4 <AmiBlitz3.ab3@17060>   LSL.w #1,D0
0002E5E6 <AmiBlitz3.ab3@17061>   OR.w d0,d1
0002E5EA <AmiBlitz3.ab3@17062>   BSR writeword
0002E5EE <AmiBlitz3.ab3@17063>   BSR.w addoff
0002E5F4 <AmiBlitz3.ab3@17064>   MOVE.l litdata1,D1
0002E5F8 <AmiBlitz3.ab3@17065>   BSR.w writelong
0002E600 <AmiBlitz3.ab3@17066>   CMP.w #3,mode
0002E604 <AmiBlitz3.ab3@17067>   BEQ 'l30
0002E60A <AmiBlitz3.ab3@17068>    ADDQ.w #4,a2offset
0002E60E <AmiBlitz3.ab3@17069>   MOVE.w #$4878,D1
0002E612 <AmiBlitz3.ab3@17070>   BSR.w writeword
0002E614 <AmiBlitz3.ab3@17071>   MOVE.l d2,d1
0002E618 <AmiBlitz3.ab3@17072>   BSR writeword
0002E61A <AmiBlitz3.ab3@17075>   MOVE.w (A7)+,D0
0002E61C <AmiBlitz3.ab3@17076> RTS
0002E622 <AmiBlitz3.ab3@17079>   MOVE.l #$3f3c0007,d1
0002E626 <AmiBlitz3.ab3@17080>   BSR writelong
0002E62C <AmiBlitz3.ab3@17081>   MOVE.w regnum,D1
0002E62E <AmiBlitz3.ab3@17082>   LSL.w #8,D1
0002E630 <AmiBlitz3.ab3@17083>   LSL.w #1,D1
0002E634 <AmiBlitz3.ab3@17084>   ORI.w #$2f3c,d1
0002E638 <AmiBlitz3.ab3@17085>   BSR writeword
0002E63E <AmiBlitz3.ab3@17086>    ADDQ.w #4,a2offset
0002E640 <AmiBlitz3.ab3@17087>   MOVE.l d2,d1
0002E644 <AmiBlitz3.ab3@17088>   BSR writelong
0002E648 <AmiBlitz3.ab3@17089>   MOVE.w #$2f3c,d1
0002E64C <AmiBlitz3.ab3@17090>   BSR writeword
0002E650 <AmiBlitz3.ab3@17091>   BSR.w addoff
0002E656 <AmiBlitz3.ab3@17092>   MOVE.l litdata1,D1
0002E65A <AmiBlitz3.ab3@17093>   BSR.w writelong
0002E65C <AmiBlitz3.ab3@17094>   MOVE.w (A7)+,D0
0002E65E <AmiBlitz3.ab3@17095> RTS
0002E662 <AmiBlitz3.ab3@17099>   BSR.w get1bytemain
0002E666 <AmiBlitz3.ab3@17100>    BSR.w JL_0_AE22
0002E66C <AmiBlitz3.ab3@17101>   MOVE.w regnum,D1
0002E66E <AmiBlitz3.ab3@17102>   LSL.w #8,D1
0002E670 <AmiBlitz3.ab3@17103>   LSL.w #1,D1
0002E674 <AmiBlitz3.ab3@17104>   ORI.w #$203C,D1
0002E678 <AmiBlitz3.ab3@17105>    BSR.w writeword
0002E67C <AmiBlitz3.ab3@17106>    BSR.w addoff
0002E680 <AmiBlitz3.ab3@17107>   MOVE.l $8(A2),D1
0002E684 <AmiBlitz3.ab3@17108>    BSR.w writelong
0002E686 <AmiBlitz3.ab3@17109>   MOVEQ.l #$03,D2
0002E68C <AmiBlitz3.ab3@17110>   CLR.b peekaddrsize
0002E690 <AmiBlitz3.ab3@17111> BRA.w reget
0002E692 <AmiBlitz3.ab3@17114>   MOVEQ.l #$00,D3
0002E696 <AmiBlitz3.ab3@17117>   BSR.w get1bytemain
0002E69A <AmiBlitz3.ab3@17118>    BEQ.w syntaxerr
0002E69E <AmiBlitz3.ab3@17119>   CMP.w #$22,D0
0002E6A2 <AmiBlitz3.ab3@17120>    BEQ.w JL_0_AF1A
0002E6A4 <AmiBlitz3.ab3@17121>   LSL.l #8,D3
0002E6A6 <AmiBlitz3.ab3@17122>   MOVE.b D0,D3
0002E6AA <AmiBlitz3.ab3@17123> BRA.w JL_0_AF02
0002E6AE <AmiBlitz3.ab3@17126>   BSR.w get1bytemain
0002E6B2 <AmiBlitz3.ab3@17127> BRA.w JL_0_B46E
0002E6B4 <AmiBlitz3.ab3@17130>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E6B8 <AmiBlitz3.ab3@17131>    BSR.w makename2
0002E6BC <AmiBlitz3.ab3@17132>    BSR.w findlabel2
0002E6C0 <AmiBlitz3.ab3@17133>    BEQ.w 'l10
0002E6C6 <AmiBlitz3.ab3@17134>    LEA ptr_parameterstore,a0
0002E6CC <AmiBlitz3.ab3@17135>    CMP.b #"@",-1(a0,d2.w)
0002E6D0 <AmiBlitz3.ab3@17136>    BNE cnferr
0002E6D4 <AmiBlitz3.ab3@17137>    CLR.b -1(a0,d2.w)
0002E6D6 <AmiBlitz3.ab3@17138>    SUBQ.l #1,d2
0002E6DC <AmiBlitz3.ab3@17139>    LEA varbase,a2
0002E6E0 <AmiBlitz3.ab3@17140>    BSR findvariable
0002E6E4 <AmiBlitz3.ab3@17141>    BNE cnferr
0002E6E8 <AmiBlitz3.ab3@17142>    CMP.b #"\",d0
0002E6EC <AmiBlitz3.ab3@17143>    BNE 'l6
0002E6F2 <AmiBlitz3.ab3@17144>    ADDQ #1,lastsourcepos
0002E6F6 <AmiBlitz3.ab3@17145>    MOVE.l $a(a2),a2
0002E6F8 <AmiBlitz3.ab3@17146>    ADDQ.l #4,a2
0002E6FC <AmiBlitz3.ab3@17147>    BSR.w makename2
0002E700 <AmiBlitz3.ab3@17148>    BSR findvariable2
0002E704 <AmiBlitz3.ab3@17149>    BNE cnferr
0002E708 <AmiBlitz3.ab3@17150> BRA.s 'l6                                                  ;???
0002E70C <AmiBlitz3.ab3@17153>    MOVE.w $4(a2),d3
0002E70E <AmiBlitz3.ab3@17154>    EXT.l d3
0002E712 <AmiBlitz3.ab3@17155> BRA JL_0_AF46
0002E716 <AmiBlitz3.ab3@17158>   MOVE.l $8(A2),D3
0002E71E <AmiBlitz3.ab3@17159>   CMPI.l #$1,$4(A2)
0002E722 <AmiBlitz3.ab3@17160>    BEQ.w JL_0_AF46
0002E728 <AmiBlitz3.ab3@17161>   NOT.w asmtype
0002E72A <AmiBlitz3.ab3@17164>   MOVE.w (A7)+,D2
0002E72E <AmiBlitz3.ab3@17165> BRA.w JL_0_B46E
0002E730 <AmiBlitz3.ab3@17169>   MOVE.w D2,-(A7)
0002E734 <AmiBlitz3.ab3@17170>    BSR.w getparameter
0002E738 <AmiBlitz3.ab3@17171>   CMP.w #"{",D0                                          ;test if var = function{}
0002E73C <AmiBlitz3.ab3@17172>    BEQ.w isfunction
0002E740 <AmiBlitz3.ab3@17173>    BSR.w JL_0_8E3C
0002E744 <AmiBlitz3.ab3@17175>    BSR.w calcvar                                         ;getvaroffset+type
0002E748 <AmiBlitz3.ab3@17176>    BSR.w JL_0_B150
0002E74E <AmiBlitz3.ab3@17177>    MOVE.l a2,rightsidetype
0002E758 <AmiBlitz3.ab3@17178>    MOVE.w flagmask, rightsideflagmask
0002E75E <AmiBlitz3.ab3@17189>    TST.b typecheck
0002E762 <AmiBlitz3.ab3@17190>    BEQ JL_0_AF66
0002E76C <AmiBlitz3.ab3@17191>    CMP.l #$da01,lasttoken                                  ;poke
0002E770 <AmiBlitz3.ab3@17192>    BEQ 'l1
0002E77A <AmiBlitz3.ab3@17193>    CMP.l #$da02,lasttoken                                  ;peek
0002E77E <AmiBlitz3.ab3@17194>    BNE 'l2
0002E786 <AmiBlitz3.ab3@17197>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E78A <AmiBlitz3.ab3@17198>    BNE JL_0_AF66
0002E790 <AmiBlitz3.ab3@17199>    MOVE.b d2,peekaddrsize
0002E794 <AmiBlitz3.ab3@17200>    BRA JL_0_AF66
0002E79A <AmiBlitz3.ab3@17203>   CLR.b peekaddrsize
0002E79E <AmiBlitz3.ab3@17206>   CMP.w #$1,D2
0002E7A2 <AmiBlitz3.ab3@17207>    BNE.w JL_0_AF7C
0002E7A8 <AmiBlitz3.ab3@17208>   MOVE.w regnum,D1
0002E7AC <AmiBlitz3.ab3@17209>   ORI.w #$4880,D1
0002E7B0 <AmiBlitz3.ab3@17210>    BSR.w writeword
0002E7B2 <AmiBlitz3.ab3@17213>   MOVE.w (A7)+,D3
0002E7B6 <AmiBlitz3.ab3@17214>    BEQ.w JL_0_AF9E
0002E7BC <AmiBlitz3.ab3@17215>    MOVE.l lastinstructionaddr,a0
0002E7C0 <AmiBlitz3.ab3@17216>   CMP.w #$3,D3
0002E7C4 <AmiBlitz3.ab3@17217>    BNE.w JL_0_AF92
0002E7C8 <AmiBlitz3.ab3@17218>   CMP.w #$4,D2
0002E7CC <AmiBlitz3.ab3@17219>    BEQ.w JL_0_AF98
0002E7CE <AmiBlitz3.ab3@17222>   CMP.w D2,D3
0002E7D2 <AmiBlitz3.ab3@17223>    BLS.w JL_0_AF9E
0002E7D4 <AmiBlitz3.ab3@17226>   EXG.l D2,D3
0002E7D6 <AmiBlitz3.ab3@17227>   MOVE.l a0,-(a7)
0002E7DC <AmiBlitz3.ab3@17228>   TST.b typecheck
0002E7E0 <AmiBlitz3.ab3@17229>   BEQ 'ok
0002E7E6 <AmiBlitz3.ab3@17230>   TST.b notypecheck
0002E7EA <AmiBlitz3.ab3@17231>   BNE 'ok
0002E7F0 <AmiBlitz3.ab3@17232>   MOVE.l leftsidetype,a0
0002E7FA <AmiBlitz3.ab3@17233>   CMP.l #0,leftsidetype
0002E7FE <AmiBlitz3.ab3@17234>   BEQ 'ok
0002E806 <AmiBlitz3.ab3@17235>   CMP.w #1,leftsideflagmask
0002E80A <AmiBlitz3.ab3@17236>   BEQ 'isptr
0002E812 <AmiBlitz3.ab3@17237>   CMP.l #$100,4(a0)
0002E816 <AmiBlitz3.ab3@17238>   BLE 'ok
0002E81A <AmiBlitz3.ab3@17240>   CMP.b #3,d3
0002E81E <AmiBlitz3.ab3@17241>   BEQ 'ok
0002E822 <AmiBlitz3.ab3@17242>   CMP.b #7,d3
0002E826 <AmiBlitz3.ab3@17243>   BEQ 'ok
0002E82C <AmiBlitz3.ab3@17244>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E82E <AmiBlitz3.ab3@17246>   MOVE.l (a7)+,a0
0002E832 <AmiBlitz3.ab3@17247>   BSR.w writeconvertcode         ;called from var assign
0002E836 <AmiBlitz3.ab3@17250> BRA.w reget
0002E838 <AmiBlitz3.ab3@17253>   MOVEQ.l #$00,D3
0002E83E <AmiBlitz3.ab3@17254>   MOVE.w regnum,D1
0002E842 <AmiBlitz3.ab3@17255>    BEQ.w JL_0_AFC8
0002E844 <AmiBlitz3.ab3@17256>   SUBQ.w #1,D1
0002E846 <AmiBlitz3.ab3@17259>      LSR.l #1,D3
0002E84A <AmiBlitz3.ab3@17260>      BSET #$F,D3
0002E84E <AmiBlitz3.ab3@17261>   DBF D1,JL_0_AFB0b
0002E854 <AmiBlitz3.ab3@17263>    TST.b fpu
0002E858 <AmiBlitz3.ab3@17264>    BEQ 'l1
0002E85E <AmiBlitz3.ab3@17265>    ADDQ.l #2,stacktrack                                    ;intern command
0002E860 <AmiBlitz3.ab3@17266>     MOVE.l a0,-(a7)
0002E866 <AmiBlitz3.ab3@17267>     MOVE.l stacktrack,d1
0002E86C <AmiBlitz3.ab3@17268>     LEA fpustackbase,a0
0002E870 <AmiBlitz3.ab3@17269>     CLR.w 0(a0,d1)
0002E876 <AmiBlitz3.ab3@17270>     CLR.w regmask
0002E878 <AmiBlitz3.ab3@17271>     MOVE.l (a7)+,a0
0002E87C <AmiBlitz3.ab3@17274>   MOVE.w #$48E7,D1
0002E880 <AmiBlitz3.ab3@17275>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E882 <AmiBlitz3.ab3@17276>   MOVE.w D3,D1
0002E886 <AmiBlitz3.ab3@17277> BRA.w writeword
0002E888 <AmiBlitz3.ab3@17282>   MOVEQ.l #$00,D3
0002E88E <AmiBlitz3.ab3@17283>   MOVE.w regnum,D1
0002E892 <AmiBlitz3.ab3@17284>    BEQ.w JL_0_AFC8
0002E894 <AmiBlitz3.ab3@17285>   SUBQ.w #1,D1
0002E896 <AmiBlitz3.ab3@17288>     LSR.l #1,D3
0002E89A <AmiBlitz3.ab3@17289>     BSET #$F,D3
0002E89E <AmiBlitz3.ab3@17290>   DBF D1,JL_0_AFB0
0002E8A4 <AmiBlitz3.ab3@17292>    TST.b fpu
0002E8A8 <AmiBlitz3.ab3@17293>    BEQ 'l1
0002E8AE <AmiBlitz3.ab3@17294>    ADDQ.l #2,stacktrack                                    ;intern command
0002E8B0 <AmiBlitz3.ab3@17295>     MOVE.l a0,-(a7)
0002E8B6 <AmiBlitz3.ab3@17296>     MOVE.l stacktrack,d1
0002E8BC <AmiBlitz3.ab3@17297>     LEA fpustackbase,a0
0002E8C0 <AmiBlitz3.ab3@17298>     CLR.w 0(a0,d1)
0002E8C4 <AmiBlitz3.ab3@17299>    CMP.b #5,(a3)                                           ;result float ?
0002E8C8 <AmiBlitz3.ab3@17300>     BNE 'nofpu
0002E8D2 <AmiBlitz3.ab3@17302>     MOVE.w regnum,regnumfunc
0002E8D8 <AmiBlitz3.ab3@17305>   CLR.w regmask
0002E8DA <AmiBlitz3.ab3@17306>     MOVE.l (a7)+,a0
0002E8DE <AmiBlitz3.ab3@17309>   MOVE.w #$48E7,D1
0002E8E2 <AmiBlitz3.ab3@17310>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E8E4 <AmiBlitz3.ab3@17311>   MOVE.w D3,D1
0002E8E8 <AmiBlitz3.ab3@17312> BRA.w writeword
0002E8EA <AmiBlitz3.ab3@17315> RTS
0002E8EC <AmiBlitz3.ab3@17319>   MOVE.l D1,-(A7)
0002E8F0 <AmiBlitz3.ab3@17320>   MOVE.w #$4EB9,D1
0002E8F4 <AmiBlitz3.ab3@17321>    BSR.w writeword
0002E8F8 <AmiBlitz3.ab3@17322>    BSR.w addoff
0002E8FA <AmiBlitz3.ab3@17323>   MOVE.l (A7)+,D1
0002E8FE <AmiBlitz3.ab3@17324> BRA.w writelong
0002E902 <AmiBlitz3.ab3@17328>    BSR.w findproc                                          ;write function call
0002E906 <AmiBlitz3.ab3@17329>    BEQ 'l1
0002E90C <AmiBlitz3.ab3@17330>    TST.l unusedfunc
0002E910 <AmiBlitz3.ab3@17331>    BEQ noprocerr
0002E916 <AmiBlitz3.ab3@17333>    JSR gotoendsource
0002E91E <AmiBlitz3.ab3@17336>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E924 <AmiBlitz3.ab3@17337>   TST.l typetocast
0002E928 <AmiBlitz3.ab3@17338>   BEQ 'nocast
0002E932 <AmiBlitz3.ab3@17339>   MOVE.l typetocast,rightsidetype
0002E938 <AmiBlitz3.ab3@17340>   CLR.l typetocast
0002E93A <AmiBlitz3.ab3@17341>   MOVE.l a1,-(a7)
0002E940 <AmiBlitz3.ab3@17342>   MOVE.l rightsidetype,a1
0002E946 <AmiBlitz3.ab3@17343>   CMP.l leftsidetype,a1
0002E94A <AmiBlitz3.ab3@17344>   BEQ 'ok
0002E950 <AmiBlitz3.ab3@17345>   JMP errorconvertreturntype2
0002E952 <AmiBlitz3.ab3@17346> 'ok  MOVE.l (a7)+,a1
0002E954 <AmiBlitz3.ab3@17348>   MOVEQ.l #$00,D1
0002E958 <AmiBlitz3.ab3@17349>   MOVE.b $5(A2),D1
0002E95E <AmiBlitz3.ab3@17350>   MOVE.b d1,retmode
0002E962 <AmiBlitz3.ab3@17351>    BMI.w illprocerr
0002E968 <AmiBlitz3.ab3@17352>    MOVE.b #1,isfunc(a2)
0002E96A <AmiBlitz3.ab3@17353>   MOVE.w D1,-(A7)
0002E96C <AmiBlitz3.ab3@17354>   MOVEQ.l #$00,D1
0002E970 <AmiBlitz3.ab3@17355>   MOVE.b $4(A2),D1
0002E972 <AmiBlitz3.ab3@17356>   LSR.w #4,D1
0002E976 <AmiBlitz3.ab3@17357>    BEQ.w JL_0_B006
0002E978 <AmiBlitz3.ab3@17358>   LSL.w #2,D1
0002E97E <AmiBlitz3.ab3@17359>   SUB.w D1,a2offset
0002E982 <AmiBlitz3.ab3@17362>   CMPI.w #$7,(A7)
0002E986 <AmiBlitz3.ab3@17363>    BNE.b JL_0_B014
0002E988 <AmiBlitz3.ab3@17364>   MOVE.l A2,-(A7)
0002E98C <AmiBlitz3.ab3@17365>    BSR.w makesbase
0002E98E <AmiBlitz3.ab3@17366>   MOVEA.l (A7)+,A2
0002E994 <AmiBlitz3.ab3@17369>   MOVE.w sbasegot,-(A7)
0002E998 <AmiBlitz3.ab3@17370>    BEQ.b JL_0_B020
0002E99C <AmiBlitz3.ab3@17371>    BSR.w dopusha3
0002E9A0 <AmiBlitz3.ab3@17374>   BSR.w JL_0_AFA2func
0002E9A2 <AmiBlitz3.ab3@17375>   MOVE.w D3,-(A7)
0002E9A6 <AmiBlitz3.ab3@17376>   MOVE.l $E(A2),D1
0002E9AA <AmiBlitz3.ab3@17377>   TST.b $20(a2)                                            ;increase if morepar
0002E9AE <AmiBlitz3.ab3@17378>   BNE 'no0par
0002E9B0 <AmiBlitz3.ab3@17379>   MOVE.l a5,a4
0002E9B4 <AmiBlitz3.ab3@17382>   CMP.b #$20,(a4)+
0002E9B8 <AmiBlitz3.ab3@17383>   BEQ 'l1
0002E9BE <AmiBlitz3.ab3@17384>   CMP.b #"}",-1(a4)
0002E9C2 <AmiBlitz3.ab3@17385>   BNE  'no0par
0002E9C4 <AmiBlitz3.ab3@17386>   MOVEQ #0,d0
0002E9C8 <AmiBlitz3.ab3@17389>   LEA $16(A2),A1
0002E9CA <AmiBlitz3.ab3@17392>   MOVE.l d1,-(a7)
0002E9CC <AmiBlitz3.ab3@17393>   MOVE.b (a1),d2
0002E9CE <AmiBlitz3.ab3@17394>   MOVE.l d0,d1
0002E9D2 <AmiBlitz3.ab3@17395>   CMP.w #4,d2
0002E9D6 <AmiBlitz3.ab3@17396>   BNE 'l1b
0002E9DC <AmiBlitz3.ab3@17397>   ADD.l #$203c,d1
0002E9E0 <AmiBlitz3.ab3@17398>   BSR writeword
0002E9E6 <AmiBlitz3.ab3@17399>   MOVE.l #$ffff0000,d1
0002E9EA <AmiBlitz3.ab3@17400>   BSR writelong
0002E9EE <AmiBlitz3.ab3@17401> BRA 'l2b
0002E9F4 <AmiBlitz3.ab3@17404>    TST.b fpu
0002E9F8 <AmiBlitz3.ab3@17405>    BNE 'l1c
0002E9FC <AmiBlitz3.ab3@17406>    CMP.w #5,d2
0002EA00 <AmiBlitz3.ab3@17407>    BNE 'l1c
0002EA06 <AmiBlitz3.ab3@17408>    ADD.l #$203c,d1
0002EA0A <AmiBlitz3.ab3@17409>    BSR writeword
0002EA10 <AmiBlitz3.ab3@17410>    MOVE.l #$800000c1,d1
0002EA14 <AmiBlitz3.ab3@17411>    BSR writelong
0002EA18 <AmiBlitz3.ab3@17412> BRA 'l2b
0002EA1E <AmiBlitz3.ab3@17415>   ADD.l #$70ff,d1
0002EA22 <AmiBlitz3.ab3@17416>   BSR writeword
0002EA26 <AmiBlitz3.ab3@17417>   CMP.w #7,d2
0002EA2A <AmiBlitz3.ab3@17418>   BNE 'l1d
0002EA30 <AmiBlitz3.ab3@17419>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA34 <AmiBlitz3.ab3@17420>   BSR writelong
0002EA36 <AmiBlitz3.ab3@17421>   MOVEQ #0,d1
0002EA3A <AmiBlitz3.ab3@17422>   BSR writeword
0002EA40 <AmiBlitz3.ab3@17423>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA44 <AmiBlitz3.ab3@17424>   BSR writelong
0002EA46 <AmiBlitz3.ab3@17425>   MOVEQ #0,d1
0002EA4A <AmiBlitz3.ab3@17426>   BSR writeword
0002EA50 <AmiBlitz3.ab3@17428> 'l1d  MOVE.l #$f23c5000,d1
0002EA52 <AmiBlitz3.ab3@17429>   MOVE.l d0,d2
0002EA54 <AmiBlitz3.ab3@17430>   ASR.l #2,d2
0002EA56 <AmiBlitz3.ab3@17431>   ADD.l d2,d1
0002EA5A <AmiBlitz3.ab3@17432>   BSR writelong
0002EA5E <AmiBlitz3.ab3@17433>   MOVE.w #$ffff,d1
0002EA62 <AmiBlitz3.ab3@17434>   BSR writeword
0002EA64 <AmiBlitz3.ab3@17438>   MOVE.l (a7)+,d1
0002EA66 <AmiBlitz3.ab3@17439>      ADDQ.l #1,a1
0002EA6C <AmiBlitz3.ab3@17440>      ADD.l #$0200,d0
0002EA72 <AmiBlitz3.ab3@17441>      CMP.l #$0e00,d0
0002EA76 <AmiBlitz3.ab3@17442>      BEQ syntaxerr
0002EA78 <AmiBlitz3.ab3@17443>      TST.b (a1)
0002EA7C <AmiBlitz3.ab3@17444>      BNE 'again
0002EA80 <AmiBlitz3.ab3@17445> BRA 'p1
0002EA84 <AmiBlitz3.ab3@17448>   TST.b $4(A2)
0002EA88 <AmiBlitz3.ab3@17449>    BNE.w JL_0_B03E
0002EA8C <AmiBlitz3.ab3@17452>   BSR.w JL_0_AFCA
0002EA90 <AmiBlitz3.ab3@17453>    BSR.w get1bytemain
0002EA94 <AmiBlitz3.ab3@17454> BRA.w JL_0_B06C
0002EA9A <AmiBlitz3.ab3@17458>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002EAA0 <AmiBlitz3.ab3@17459>   MOVE.w regnum,-(A7)
0002EAAA <AmiBlitz3.ab3@17460>   MOVE.w regnum,regnumfunc
0002EAAC <AmiBlitz3.ab3@17463>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002EAB4 <AmiBlitz3.ab3@17464>   MOVE.b #1,funccall
0002EAB6 <AmiBlitz3.ab3@17465>   MOVEQ.l #$00,D0
0002EABA <AmiBlitz3.ab3@17466>   MOVE.b $4(A2),D0
0002EAC4 <AmiBlitz3.ab3@17467>   MOVE.w a2offset,a2offset2
0002EACC <AmiBlitz3.ab3@17468>   MOVE.b 5(a2),retmode
0002EAD2 <AmiBlitz3.ab3@17469>   MOVE.l a2,currentfunccall
0002EAD6 <AmiBlitz3.ab3@17470>   LEA $16(A2),A2
0002EADC <AmiBlitz3.ab3@17471>   CLR.w regnum
0002EAE2 <AmiBlitz3.ab3@17472>   CLR.w regmask
0002EAE8 <AmiBlitz3.ab3@17473>   MOVE.b isconstantvalue,-(a7)
0002EAEE <AmiBlitz3.ab3@17474>   MOVE.b funcparloop,-(a7)
0002EAF6 <AmiBlitz3.ab3@17475>   MOVE.b #1,funcparloop
0002EAFC <AmiBlitz3.ab3@17476>   MOVE.l rightsidetype,-(a7)
0002EB02 <AmiBlitz3.ab3@17477>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002EB08 <AmiBlitz3.ab3@17478>   MOVE.b blitzparloop,-(a7)
0002EB0E <AmiBlitz3.ab3@17479>   CLR.b blitzparloop
0002EB14 <AmiBlitz3.ab3@17480>   JSR fetchpees2
0002EB1A <AmiBlitz3.ab3@17481>   MOVE.b (a7)+,blitzparloop
0002EB20 <AmiBlitz3.ab3@17482>   MOVE.l (a7)+,leftsidetype
0002EB26 <AmiBlitz3.ab3@17483>   MOVE.l (a7)+,rightsidetype
0002EB2C <AmiBlitz3.ab3@17484>   MOVE.b (a7)+,funcparloop
0002EB32 <AmiBlitz3.ab3@17485>   MOVE.b (a7)+,isconstantvalue
0002EB38 <AmiBlitz3.ab3@17486>   JSR chkstak
0002EB3A <AmiBlitz3.ab3@17487>   MOVE.l (A7)+,D1
0002EB3E <AmiBlitz3.ab3@17503>    BTST #0,d1
0002EB42 <AmiBlitz3.ab3@17504>    BNE intern1
0002EB46 <AmiBlitz3.ab3@17505>    BSR.w JL_0_AFCA
0002EB4C <AmiBlitz3.ab3@17527>   MOVE.w (A7)+,regnum
0002EB52 <AmiBlitz3.ab3@17528>   MOVE.w (a7)+,parnum                                     ;07.2014
0002EB56 <AmiBlitz3.ab3@17530>   CMP.w #"}",D0
0002EB5A <AmiBlitz3.ab3@17531>    BNE.w errorbracketmiss2
0002EB5C <AmiBlitz3.ab3@17532>    MOVEQ #0,d1                                            ; end of function call pars
0002EB62 <AmiBlitz3.ab3@17533>   MOVE.w regnum,D1
0002EB66 <AmiBlitz3.ab3@17534>    BEQ.w JL_0_B08A
0002EB6C <AmiBlitz3.ab3@17535>    TST.b fpu
0002EB70 <AmiBlitz3.ab3@17536>    BEQ 'old
0002EB78 <AmiBlitz3.ab3@17537>    CMP.b #5,retmode
0002EB7C <AmiBlitz3.ab3@17538>    BNE 'old
0002EB7E <AmiBlitz3.ab3@17539>    ASL.l #7,d1
0002EB84 <AmiBlitz3.ab3@17540>    OR.l #$f2000000,d1
0002EB88 <AmiBlitz3.ab3@17541>    BSR writelong
0002EB8C <AmiBlitz3.ab3@17542> BRA JL_0_B08A
0002EB8E <AmiBlitz3.ab3@17544>  'old  LSL.w #8,D1
0002EB90 <AmiBlitz3.ab3@17545>   LSL.w #1,D1
0002EB94 <AmiBlitz3.ab3@17546>   ORI.w #$2000,D1
0002EB98 <AmiBlitz3.ab3@17547>    BSR.w writeword
0002EB9A <AmiBlitz3.ab3@17550>    MOVE.w (A7)+,D3
0002EB9E <AmiBlitz3.ab3@17551>    BEQ.w JL_0_B0A8
0002EBA4 <AmiBlitz3.ab3@17552>    TST.b fpu
0002EBA8 <AmiBlitz3.ab3@17553>    BEQ 'old
0002EBAA <AmiBlitz3.ab3@17554>    MOVE.l d0,-(a7)
0002EBAE <AmiBlitz3.ab3@17555>    MOVE.w #8,d0
0002EBB0 <AmiBlitz3.ab3@17556>    MOVE.l a0,-(a7)
0002EBB6 <AmiBlitz3.ab3@17557>    MOVE.l stacktrack,d1
0002EBBC <AmiBlitz3.ab3@17558>    LEA fpustackbase,a0
0002EBC4 <AmiBlitz3.ab3@17559>    MOVE.w 0(a0,d1),regmask
0002EBC6 <AmiBlitz3.ab3@17560>    MOVE.l (a7)+,a0
0002EBCA <AmiBlitz3.ab3@17563>   BEQ 'ready
0002EBD0 <AmiBlitz3.ab3@17564>    BTST d0,regmask
0002EBD4 <AmiBlitz3.ab3@17565>    BEQ 'noa7
0002EBD6 <AmiBlitz3.ab3@17566>    MOVEQ #0,d1
0002EBD8 <AmiBlitz3.ab3@17567>    MOVE.w d0,d1
0002EBDA <AmiBlitz3.ab3@17568>    SUBQ.w #1,d1
0002EBDC <AmiBlitz3.ab3@17569>    ASL #7,d1
0002EBE2 <AmiBlitz3.ab3@17571>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002EBE6 <AmiBlitz3.ab3@17572>    BSR writelong
0002EBEC <AmiBlitz3.ab3@17573>    SUBQ.l #2,stacktrack
0002EBEE <AmiBlitz3.ab3@17576>    SUBQ.w #1,d0
0002EBF2 <AmiBlitz3.ab3@17577>    BNE 'loop
0002EBF8 <AmiBlitz3.ab3@17580>   SUBQ.l #2,stacktrack                                     ;integer sub
0002EBFA <AmiBlitz3.ab3@17581>   MOVE.l (a7)+,d0
0002EBFE <AmiBlitz3.ab3@17584>   MOVE.w #$4CDF,D1
0002EC02 <AmiBlitz3.ab3@17585>    BSR.w writeword
0002EC04 <AmiBlitz3.ab3@17586>   MOVEQ.l #$00,D1
0002EC06 <AmiBlitz3.ab3@17587>   MOVEQ.l #$0F,D4
0002EC08 <AmiBlitz3.ab3@17590>     LSL.w #1,D3
0002EC0A <AmiBlitz3.ab3@17591>     ROXR.w #1,D1
0002EC0E <AmiBlitz3.ab3@17592>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002EC12 <AmiBlitz3.ab3@17594>     BSR.w writeword
0002EC18 <AmiBlitz3.ab3@17595>    CLR.w regnumfunc
0002EC1A <AmiBlitz3.ab3@17598>   MOVE.w (A7)+,D1
0002EC1E <AmiBlitz3.ab3@17599>    BEQ.b JL_0_B0D2
0002EC22 <AmiBlitz3.ab3@17600>   CMPI.w #$7,(A7)
0002EC26 <AmiBlitz3.ab3@17601>    BEQ.b JL_0_B0C4
0002EC2C <AmiBlitz3.ab3@17602>   LEA geta3,A0
0002EC32 <AmiBlitz3.ab3@17603>   LEA numtoa0,A1
0002EC36 <AmiBlitz3.ab3@17604>    BSR.w pokecode
0002EC3A <AmiBlitz3.ab3@17605> BRA.b JL_0_B0CE
0002EC40 <AmiBlitz3.ab3@17608>   MOVE.w deca3,D1
0002EC44 <AmiBlitz3.ab3@17609>    BSR.w writeword
0002EC48 <AmiBlitz3.ab3@17612>   BSR.w dopulla3                                           ;fix up string base
0002EC4A <AmiBlitz3.ab3@17615>   MOVE.w (A7)+,D2                                          ;what it returns!
0002EC4E <AmiBlitz3.ab3@17616>   CMP.w #$7,D2
0002EC52 <AmiBlitz3.ab3@17617>    BNE.w JL_0_B0EC
0002EC58 <AmiBlitz3.ab3@17618>   MOVE.w putstlen,D1
0002EC5E <AmiBlitz3.ab3@17619>   OR.w regnum,D1
0002EC62 <AmiBlitz3.ab3@17620>    BSR.w writeword
0002EC66 <AmiBlitz3.ab3@17623>   BSR.w get1bytemain
0002EC6A <AmiBlitz3.ab3@17624> BRA.w JL_0_AF66
0002EC6C <AmiBlitz3.ab3@17628> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002EC74 <AmiBlitz3.ab3@17633>   CMP.b #2,optistring
0002EC78 <AmiBlitz3.ab3@17634>   BEQ fs2
0002EC7C <AmiBlitz3.ab3@17635>   BSR.w makesbase                                          ;writestringvariable
0002EC80 <AmiBlitz3.ab3@17636>   BTST #$F,D2
0002EC84 <AmiBlitz3.ab3@17637>    BNE.w JL_0_B112
0002EC8A <AmiBlitz3.ab3@17638>   MOVE.w D3,leaa5d3a2+2
0002EC90 <AmiBlitz3.ab3@17639>   MOVE.l leaa5d3a2,D1
0002EC94 <AmiBlitz3.ab3@17640>    BSR.w pokela5s
0002EC9A <AmiBlitz3.ab3@17643>   MOVE.w regnum,D1
0002EC9C <AmiBlitz3.ab3@17644>   LSL.w #8,D1
0002EC9E <AmiBlitz3.ab3@17645>   LSL.w #1,D1
0002ECA2 <AmiBlitz3.ab3@17646>   ORI.w #$7000,D1
0002ECA8 <AmiBlitz3.ab3@17647>   LEA stvarget2,A0
0002ECAA <AmiBlitz3.ab3@17648>   MOVE.w D1,(A0)
0002ECB0 <AmiBlitz3.ab3@17649>   MOVE.w regnum,D1
0002ECB6 <AmiBlitz3.ab3@17650>   ANDI.w #$FFF8,$2(A0)
0002ECBA <AmiBlitz3.ab3@17651>   OR.w D1,$2(A0)
0002ECC0 <AmiBlitz3.ab3@17652>   LEA stvarget2f,A1
0002ECC4 <AmiBlitz3.ab3@17653>    BSR.w pokecode
0002ECC8 <AmiBlitz3.ab3@17654>   MOVE.w #$C600,D1
0002ECCC <AmiBlitz3.ab3@17655>    BSR.w Atokejsr
0002ECCE <AmiBlitz3.ab3@17656>   MOVEQ.l #$07,D2
0002ECD2 <AmiBlitz3.ab3@17657> BRA.w reget
0002ECD8 <AmiBlitz3.ab3@17660>      TST.w stackpar
0002ECDC <AmiBlitz3.ab3@17661>      BMI 'l10
0002ECE2 <AmiBlitz3.ab3@17662>      MOVE.l #$3f3c0007,d1
0002ECE8 <AmiBlitz3.ab3@17663>      ADDQ.w #2,a2offset
0002ECEC <AmiBlitz3.ab3@17664>      BSR writelong
0002ECF0 <AmiBlitz3.ab3@17667>   MOVE.w #$4878,d1
0002ECF6 <AmiBlitz3.ab3@17668>      CLR.w stackpar
0002ECFA <AmiBlitz3.ab3@17669>      BSR writeword
0002ECFE <AmiBlitz3.ab3@17670>      MOVE.w #$0,d1
0002ED02 <AmiBlitz3.ab3@17671>      BSR writeword
0002ED06 <AmiBlitz3.ab3@17672>      MOVE.w #$246d,d1
0002ED0A <AmiBlitz3.ab3@17673>      BSR writeword
0002ED0C <AmiBlitz3.ab3@17674>      MOVE.w d3,d1
0002ED10 <AmiBlitz3.ab3@17675>      BSR writeword
0002ED16 <AmiBlitz3.ab3@17676>      MOVE.l #$4a926704,d1
0002ED1A <AmiBlitz3.ab3@17677>      BSR writelong
0002ED20 <AmiBlitz3.ab3@17678>      MOVE.l #$2eaafffc,d1
0002ED24 <AmiBlitz3.ab3@17679>      BSR writelong
0002ED28 <AmiBlitz3.ab3@17680>      MOVE.w #$2f0a,d1
0002ED2E <AmiBlitz3.ab3@17681>      ADDQ.w #8,a2offset
0002ED32 <AmiBlitz3.ab3@17682>      BSR writeword
0002ED36 <AmiBlitz3.ab3@17683> BRA.w reget
0002ED3A <AmiBlitz3.ab3@17686>   CMP.b #$7,D2                                             ;load basic var
0002ED3E <AmiBlitz3.ab3@17687>    BEQ.w JL_0_B0F6
0002ED44 <AmiBlitz3.ab3@17689>    TST.b iee
0002ED48 <AmiBlitz3.ab3@17690>    BEQ 'noiee
0002ED4C <AmiBlitz3.ab3@17691>    CMP.b #5,d2
0002ED50 <AmiBlitz3.ab3@17692>    BNE 'noiee
0002ED52 <AmiBlitz3.ab3@17693>    MOVE.l d0,-(a7)                                         ;fpu load var
0002ED56 <AmiBlitz3.ab3@17694>    BTST #15,d2
0002ED5A <AmiBlitz3.ab3@17695>    BEQ 'var
0002ED60 <AmiBlitz3.ab3@17696>    CMP.l #$7fff,d3
0002ED64 <AmiBlitz3.ab3@17697>    BGT 'longoffset
0002ED6A <AmiBlitz3.ab3@17698>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002ED6C <AmiBlitz3.ab3@17699>    TST.w d3                                                ;offset =0
0002ED70 <AmiBlitz3.ab3@17700>    BNE 'offset
0002ED76 <AmiBlitz3.ab3@17703>   MOVE.l #$f2124400,d1
0002ED78 <AmiBlitz3.ab3@17704>    MOVEQ #0,d3
0002ED7C <AmiBlitz3.ab3@17705> BRA 'glob
0002ED82 <AmiBlitz3.ab3@17708>   SUBQ.l #4,destpointer
0002ED86 <AmiBlitz3.ab3@17709> BRA 'glob
0002ED8C <AmiBlitz3.ab3@17712>   TST.b fast
0002ED90 <AmiBlitz3.ab3@17713>    BEQ 'nofastload
0002ED96 <AmiBlitz3.ab3@17714>    TST.w regnum
0002ED9A <AmiBlitz3.ab3@17715>    BNE 'nofastload
0002EDA0 <AmiBlitz3.ab3@17716>    CMP.l fp0addr,a4
0002EDA4 <AmiBlitz3.ab3@17717>    BNE 'nofastload
0002EDAA <AmiBlitz3.ab3@17718>    MOVE.l fp0iff,d1
0002EDB0 <AmiBlitz3.ab3@17719>    CMP.l firstiff,d1
0002EDB4 <AmiBlitz3.ab3@17720>    BNE 'nofastload
0002EDBA <AmiBlitz3.ab3@17721>    MOVE.w varmode,d1
0002EDC0 <AmiBlitz3.ab3@17722>    CMP.w fp0mode,d1
0002EDC4 <AmiBlitz3.ab3@17723>    BNE 'nofastload
0002EDCA <AmiBlitz3.ab3@17724>    CMP.w fp0var,d3
0002EDCE <AmiBlitz3.ab3@17725>    BNE 'nofastload
0002EDD2 <AmiBlitz3.ab3@17726>    BCLR #16,d2
0002EDD4 <AmiBlitz3.ab3@17727>    MOVE.l (a7)+,d0
0002EDD6 <AmiBlitz3.ab3@17728> RTS
0002EDD8 <AmiBlitz3.ab3@17731>    MOVEQ #0,d0
0002EDDE <AmiBlitz3.ab3@17732>    MOVE.w regnum,d0
0002EDE4 <AmiBlitz3.ab3@17733>    CMP.l maxregs,d0
0002EDE8 <AmiBlitz3.ab3@17734>    BLE 'ok
0002EDEE <AmiBlitz3.ab3@17735>    LEA cmplxerr,a0
0002EDF0 <AmiBlitz3.ab3@17736>   MOVE.l a0,-(a7)
0002EDF6 <AmiBlitz3.ab3@17737> JMP handle_compileerror
0002EDFC <AmiBlitz3.ab3@17740>    LEA regtable,a4
0002EDFE <AmiBlitz3.ab3@17741>    TST.l (a4)
0002EE02 <AmiBlitz3.ab3@17742>    BEQ 'noreg
0002EE06 <AmiBlitz3.ab3@17743>    CMP.w 0+4(a4),d3
0002EE0A <AmiBlitz3.ab3@17744>    BNE 'doreg1
0002EE10 <AmiBlitz3.ab3@17745>    MOVE.l #$f2001c00,d1
0002EE16 <AmiBlitz3.ab3@17746>    MOVE.w regnum,d0
0002EE18 <AmiBlitz3.ab3@17747>    ASL.w #7,d0
0002EE1A <AmiBlitz3.ab3@17748>    OR.w d0,d1
0002EE1E <AmiBlitz3.ab3@17749>    BSR writelong
0002EE20 <AmiBlitz3.ab3@17750>    MOVE.l (a7)+,d0
0002EE22 <AmiBlitz3.ab3@17751> RTS
0002EE26 <AmiBlitz3.ab3@17754>   CMP.w 8+4(a4),d3
0002EE2A <AmiBlitz3.ab3@17755>    BNE 'doreg2
0002EE30 <AmiBlitz3.ab3@17756>    MOVE.l #$f2001800,d1
0002EE36 <AmiBlitz3.ab3@17757>    MOVE.w regnum,d0
0002EE38 <AmiBlitz3.ab3@17758>    ASL.w #7,d0
0002EE3A <AmiBlitz3.ab3@17759>    OR.w d0,d1
0002EE3E <AmiBlitz3.ab3@17760>    BSR writelong
0002EE40 <AmiBlitz3.ab3@17761>    MOVE.l (a7)+,d0
0002EE42 <AmiBlitz3.ab3@17762> RTS
0002EE46 <AmiBlitz3.ab3@17765>   CMP.w 16+4(a4),d3
0002EE4A <AmiBlitz3.ab3@17766>    BNE 'doreg3
0002EE50 <AmiBlitz3.ab3@17767>    MOVE.l #$f2001400,d1
0002EE56 <AmiBlitz3.ab3@17768>    MOVE.w regnum,d0
0002EE58 <AmiBlitz3.ab3@17769>    ASL.w #7,d0
0002EE5A <AmiBlitz3.ab3@17770>    OR.w d0,d1
0002EE5E <AmiBlitz3.ab3@17771>    BSR  writelong
0002EE60 <AmiBlitz3.ab3@17772>    MOVE.l (a7)+,d0
0002EE62 <AmiBlitz3.ab3@17773> RTS
0002EE66 <AmiBlitz3.ab3@17776>   CMP.w 24+4(a4),d3
0002EE6A <AmiBlitz3.ab3@17777>    BNE 'doreg4
0002EE70 <AmiBlitz3.ab3@17778>    MOVE.l #$f2001000,d1
0002EE76 <AmiBlitz3.ab3@17779>    MOVE.w regnum,d0
0002EE78 <AmiBlitz3.ab3@17780>    ASL.w #7,d0
0002EE7A <AmiBlitz3.ab3@17781>    OR.w d0,d1
0002EE7E <AmiBlitz3.ab3@17782>    BSR writelong
0002EE80 <AmiBlitz3.ab3@17783>    MOVE.l (a7)+,d0
0002EE82 <AmiBlitz3.ab3@17784> RTS
0002EE86 <AmiBlitz3.ab3@17787>    CMP.w 32+4(a4),d3
0002EE8A <AmiBlitz3.ab3@17788>    BNE 'noreg
0002EE90 <AmiBlitz3.ab3@17789>    MOVE.l #$f2000c00,d1
0002EE96 <AmiBlitz3.ab3@17790>    MOVE.w regnum,d0
0002EE98 <AmiBlitz3.ab3@17791>    ASL.w #7,d0
0002EE9A <AmiBlitz3.ab3@17792>    OR.w d0,d1
0002EE9E <AmiBlitz3.ab3@17793>    BSR writelong
0002EEA0 <AmiBlitz3.ab3@17794>    MOVE.l (a7)+,d0
0002EEA2 <AmiBlitz3.ab3@17795> RTS
0002EEA8 <AmiBlitz3.ab3@17798>    MOVE.l #$f22d4400,d1                                    ;var
0002EEAE <AmiBlitz3.ab3@17799>    TST.w varmode
0002EEB2 <AmiBlitz3.ab3@17800>   BEQ 'glob
0002EEB6 <AmiBlitz3.ab3@17801>   BCLR #16,d1                                              ;local
0002EEB8 <AmiBlitz3.ab3@17804>    MOVEQ #0,d0
0002EEBE <AmiBlitz3.ab3@17805>    MOVE.w regnum,d0
0002EEC2 <AmiBlitz3.ab3@17806>    CMP.w #7,d0
0002EEC6 <AmiBlitz3.ab3@17807>    BLE 'ok2
0002EECC <AmiBlitz3.ab3@17808>    LEA cmplxerr,a0
0002EECE <AmiBlitz3.ab3@17809>   MOVE.l a0,-(a7)
0002EED4 <AmiBlitz3.ab3@17810> JMP handle_compileerror
0002EED6 <AmiBlitz3.ab3@17813>      ASL.w #7,d0
0002EED8 <AmiBlitz3.ab3@17814>    OR.l d0,d1
0002EEE0 <AmiBlitz3.ab3@17815>    CMP.l #doublecheck,8(a2)
0002EEE4 <AmiBlitz3.ab3@17816>    BNE 'dbl
0002EEEA <AmiBlitz3.ab3@17817>    OR.l #$00001000,d1
0002EEEE <AmiBlitz3.ab3@17820>   BSR writelong
0002EEF0 <AmiBlitz3.ab3@17821>    MOVE.l (a7)+,d0
0002EEF4 <AmiBlitz3.ab3@17822>    AND.w #$ff,d2
0002EEF6 <AmiBlitz3.ab3@17823>    MOVE.w d3,d1
0002EEFA <AmiBlitz3.ab3@17824>    BEQ 'nooffs
0002EEFE <AmiBlitz3.ab3@17825> BRA writeword
0002EF00 <AmiBlitz3.ab3@17830> RTS
0002EF06 <AmiBlitz3.ab3@17833>   MOVE.w regnum,D1
0002EF0C <AmiBlitz3.ab3@17834>   MOVE.w d1,load_var_reg
0002EF0E <AmiBlitz3.ab3@17835>   LSL.w #8,D1
0002EF18 <AmiBlitz3.ab3@17836>   MOVE.l destpointer,load_var_addr
0002EF1E <AmiBlitz3.ab3@17837>   MOVE.w d2,load_var_size
0002EF20 <AmiBlitz3.ab3@17838>   LSL.w #1,D1
0002EF24 <AmiBlitz3.ab3@17839>   BTST #$E,D2
0002EF28 <AmiBlitz3.ab3@17840>    BNE.w JL_0_B17A
0002EF2A <AmiBlitz3.ab3@17841>   TST.b D2
0002EF2E <AmiBlitz3.ab3@17842>    BNE.w JL_0_B17E
0002EF30 <AmiBlitz3.ab3@17843>   MOVEQ.l #$03,D2
0002EF34 <AmiBlitz3.ab3@17844>   ORI.w #$200A,D1
0002EF38 <AmiBlitz3.ab3@17845> BRA.w writeword
0002EF3C <AmiBlitz3.ab3@17848>   MOVE.b #$3,D2
0002EF40 <AmiBlitz3.ab3@17851>   BTST #$F,D2
0002EF44 <AmiBlitz3.ab3@17852>    BEQ.w JL_0_B19A                                         ;loadarray
0002EF4A <AmiBlitz3.ab3@17853>    TST.b fast                                              ;lea->move xx(a2)
0002EF4E <AmiBlitz3.ab3@17854>    BEQ 'la10
0002EF54 <AmiBlitz3.ab3@17859>    CLR.l load_var_addr
0002EF58 <AmiBlitz3.ab3@17860> BRA 'la10
0002EF60 <AmiBlitz3.ab3@17862>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002EF64 <AmiBlitz3.ab3@17863>    BNE 'la10
0002EF6A <AmiBlitz3.ab3@17864>    TST.b optiarray
0002EF6E <AmiBlitz3.ab3@17865>    BNE 'la10
0002EF74 <AmiBlitz3.ab3@17866>    MOVE.l destpointer,a4
0002EF7A <AmiBlitz3.ab3@17867>    SUB.l loada,a4
0002EF7E <AmiBlitz3.ab3@17868>    CMP.w #4,a4
0002EF82 <AmiBlitz3.ab3@17869>    BEQ 'la100
0002EF86 <AmiBlitz3.ab3@17870>    CMP.w #2,a4
0002EF8A <AmiBlitz3.ab3@17871>    BNE 'la10
0002EF90 <AmiBlitz3.ab3@17872>    MOVE.l destpointer,a4
0002EF94 <AmiBlitz3.ab3@17873>    CMP.b #3,d2
0002EF98 <AmiBlitz3.ab3@17874>    BCS 'la110
0002EF9E <AmiBlitz3.ab3@17875>    MOVE.w #$202a,-2(a4)
0002EFA2 <AmiBlitz3.ab3@17876>    OR.w d1,-2(a4)
0002EFA8 <AmiBlitz3.ab3@17877>    MOVE.w arrayoffset,d1
0002EFAC <AmiBlitz3.ab3@17878>    BSR writeword
0002EFB0 <AmiBlitz3.ab3@17879> BRA JL_0_B194
0002EFB4 <AmiBlitz3.ab3@17882>    CMP.b #2,d2
0002EFB8 <AmiBlitz3.ab3@17883>    BNE 'la120
0002EFBE <AmiBlitz3.ab3@17884>     MOVE.w #$302a,-2(a4)
0002EFC2 <AmiBlitz3.ab3@17885>    OR.w d1,-2(a4)
0002EFC8 <AmiBlitz3.ab3@17887>    MOVE.w arrayoffset,d1
0002EFCC <AmiBlitz3.ab3@17888>    BSR writeword
0002EFD0 <AmiBlitz3.ab3@17889> BRA JL_0_B194
0002EFD4 <AmiBlitz3.ab3@17892>   CMP.b #1,d2
0002EFD8 <AmiBlitz3.ab3@17893>    BNE.s 'la10
0002EFDE <AmiBlitz3.ab3@17894>     MOVE.w #$102a,-2(a4)
0002EFE2 <AmiBlitz3.ab3@17895>    OR.w d1,-2(a4)
0002EFE8 <AmiBlitz3.ab3@17896>    MOVE.w arrayoffset,d1
0002EFEC <AmiBlitz3.ab3@17897>    BSR writeword
0002EFF0 <AmiBlitz3.ab3@17898> BRA JL_0_B194
0002EFF6 <AmiBlitz3.ab3@17901>   MOVE.l destpointer,a4
0002EFFC <AmiBlitz3.ab3@17902>    CMP.w #$45ea,-2(a4)
0002F000 <AmiBlitz3.ab3@17903>    BNE 'la10
0002F004 <AmiBlitz3.ab3@17904>    CMP.b #3,d2
0002F008 <AmiBlitz3.ab3@17905>    BCS 'la11
0002F00E <AmiBlitz3.ab3@17906>    MOVE.w #$202a,-4(a4)
0002F012 <AmiBlitz3.ab3@17907>    OR.w d1,-4(a4)
0002F016 <AmiBlitz3.ab3@17908> BRA JL_0_B194
0002F01A <AmiBlitz3.ab3@17911>    CMP.b #2,d2
0002F01E <AmiBlitz3.ab3@17912>    BNE 'la12
0002F024 <AmiBlitz3.ab3@17913>     MOVE.w #$302a,-4(a4)
0002F028 <AmiBlitz3.ab3@17914>    OR.w d1,-4(a4)
0002F02C <AmiBlitz3.ab3@17915> BRA JL_0_B194
0002F030 <AmiBlitz3.ab3@17918>   CMP.b #1,d2
0002F034 <AmiBlitz3.ab3@17919>    BNE.s 'la10
0002F03A <AmiBlitz3.ab3@17920>     MOVE.w #$102a,-4(a4)
0002F03E <AmiBlitz3.ab3@17921>    OR.w d1,-4(a4)
0002F042 <AmiBlitz3.ab3@17922> BRA JL_0_B194
0002F048 <AmiBlitz3.ab3@17925>    OR.w movea2dn,D1
0002F04C <AmiBlitz3.ab3@17926>    BSR.w JL_0_B1B2
0002F050 <AmiBlitz3.ab3@17927>    BSR.w writeword
0002F054 <AmiBlitz3.ab3@17930>   ANDI.w #$FF,D2
0002F056 <AmiBlitz3.ab3@17931> RTS
0002F05C <AmiBlitz3.ab3@17935>    MOVE.l destpointer,a4
0002F064 <AmiBlitz3.ab3@17936>    MOVE.l #$f22a4400,-4(a4)
0002F06A <AmiBlitz3.ab3@17937>    MOVE.w arrayoffset,d1
0002F06E <AmiBlitz3.ab3@17938> BRA writeword
0002F074 <AmiBlitz3.ab3@17942>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F078 <AmiBlitz3.ab3@17943>    BSR.w JL_0_B1B2
0002F07C <AmiBlitz3.ab3@17944>    BSR.w pokewda5s
0002F07E <AmiBlitz3.ab3@17945>   MOVE.w D3,D1
0002F082 <AmiBlitz3.ab3@17946>    BSR.w writeword
0002F086 <AmiBlitz3.ab3@17947> BRA.w JL_0_B194
0002F08A <AmiBlitz3.ab3@17950>   BTST #$E,D2
0002F08E <AmiBlitz3.ab3@17951>    BNE.w JL_0_B1CA
0002F092 <AmiBlitz3.ab3@17952>   CMP.b #$1,D2
0002F096 <AmiBlitz3.ab3@17953>    BEQ.w JL_0_B1CC
0002F09A <AmiBlitz3.ab3@17954>   CMP.b #$2,D2
0002F09E <AmiBlitz3.ab3@17955>    BEQ.w JL_0_B1D2
0002F0A0 <AmiBlitz3.ab3@17958> RTS
0002F0A4 <AmiBlitz3.ab3@17961>   EORI.w #$3000,D1
0002F0A6 <AmiBlitz3.ab3@17962> RTS
0002F0AA <AmiBlitz3.ab3@17965>   ORI.w #$1000,D1
0002F0AC <AmiBlitz3.ab3@17966> RTS
0002F0B4 <AmiBlitz3.ab3@17970>   MOVE.w #$FFFF,dfetch
0002F0B8 <AmiBlitz3.ab3@17971>   BSR.w get1bytemain
0002F0BC <AmiBlitz3.ab3@17972>   CMP.w #$2D,D0
0002F0C0 <AmiBlitz3.ab3@17973>    BNE.w JL_0_B206
0002F0C4 <AmiBlitz3.ab3@17974>   BSR.w get1bytemain
0002F0C8 <AmiBlitz3.ab3@17975>   BSR.w JL_0_B206
0002F0CC <AmiBlitz3.ab3@17976>   CMP.w #$5,D2
0002F0D0 <AmiBlitz3.ab3@17977>    BCC.w JL_0_B200
0002F0D2 <AmiBlitz3.ab3@17978>   NEG.l D0
0002F0D4 <AmiBlitz3.ab3@17979> RTS
0002F0DA <AmiBlitz3.ab3@17982>   TST.b fpu
0002F0DE <AmiBlitz3.ab3@17983>   BEQ 'noneg
0002F0E2 <AmiBlitz3.ab3@17984>   fneg.x fp0
0002F0E4 <AmiBlitz3.ab3@17985> RTS
0002F0E8 <AmiBlitz3.ab3@17988>   BCHG #$7,D0
0002F0EA <AmiBlitz3.ab3@17989> RTS
0002F0EE <AmiBlitz3.ab3@17992>   CMP.w #$24,D0
0002F0F2 <AmiBlitz3.ab3@17993>    BEQ.w get_hexconstant
0002F0F6 <AmiBlitz3.ab3@17994>   CMP.w #$25,D0
0002F0FA <AmiBlitz3.ab3@17995>    BEQ.w JL_0_A8C0
0002F0FE <AmiBlitz3.ab3@17996>   CMP.w #$2E,D0
0002F102 <AmiBlitz3.ab3@17997>    BNE.w JL_0_B224
0002F104 <AmiBlitz3.ab3@18000>   MOVEQ.l #$00,D3
0002F108 <AmiBlitz3.ab3@18001> BRA.w JL_0_B272
0002F10A <AmiBlitz3.ab3@18004>   MOVEQ.l #$00,D3                                          ;number
0002F10E <AmiBlitz3.ab3@18005>    BSR.w atoi
0002F112 <AmiBlitz3.ab3@18006>   CMP.w #$2E,D0
0002F116 <AmiBlitz3.ab3@18007>    BEQ.w JL_0_B268
0002F11A <AmiBlitz3.ab3@18008>   ORI.w #$20,D0
0002F11E <AmiBlitz3.ab3@18009>   CMP.w #$65,D0
0002F122 <AmiBlitz3.ab3@18010>    BNE.w JL_0_B46E
0002F128 <AmiBlitz3.ab3@18011>   CMP.l #$800000,D3
0002F12C <AmiBlitz3.ab3@18012>    BCC.w overerr
0002F12E <AmiBlitz3.ab3@18013>   MOVEQ.l #-$01,D6
0002F132 <AmiBlitz3.ab3@18014>   fmove.l d3,fp0
0002F134 <AmiBlitz3.ab3@18015>   MOVE.l D3,D0
0002F13A <AmiBlitz3.ab3@18016>   MOVEA.l _mathffpbase,A6
0002F13E <AmiBlitz3.ab3@18017>    JSR -$24(A6)
0002F140 <AmiBlitz3.ab3@18018>   MOVE.l D0,D3
0002F144 <AmiBlitz3.ab3@18019>    BSR.w JL_0_B2E6
0002F148 <AmiBlitz3.ab3@18020>    BSR.w reget
0002F14C <AmiBlitz3.ab3@18021>    BSR.w JL_0_B480
0002F150 <AmiBlitz3.ab3@18022> BRA.w JL_0_B3DC
0002F154 <AmiBlitz3.ab3@18025>   CMP.b #4,d2
0002F158 <AmiBlitz3.ab3@18026>   BEQ 'l4
0002F15C <AmiBlitz3.ab3@18027>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F162 <AmiBlitz3.ab3@18030>    TST.b fpu
0002F166 <AmiBlitz3.ab3@18031>    BNE 'l1
0002F16C <AmiBlitz3.ab3@18032>    CMP.l #$800000,D3
0002F170 <AmiBlitz3.ab3@18033>    BCC.w overerr
0002F174 <AmiBlitz3.ab3@18034> BRA JL_0_B272
0002F17A <AmiBlitz3.ab3@18037>   CMP.l #$7fffffff,d3
0002F17E <AmiBlitz3.ab3@18038>     BCC.w overerr
0002F180 <AmiBlitz3.ab3@18041>   MOVEQ.l #-$01,D6
0002F182 <AmiBlitz3.ab3@18042>   MOVE.l D3,D0
0002F186 <AmiBlitz3.ab3@18043>   fmove.l d3,fp0
0002F18C <AmiBlitz3.ab3@18044>   MOVEA.l _mathffpbase,A6
0002F190 <AmiBlitz3.ab3@18045>    JSR -$24(A6)                                            ;integer to ffp
0002F192 <AmiBlitz3.ab3@18046>   MOVE.l D0,-(A7)
0002F196 <AmiBlitz3.ab3@18047>    BSR.w get1bytemain
0002F19A <AmiBlitz3.ab3@18048>    BSR.w tstnum
0002F19E <AmiBlitz3.ab3@18049>    BNE.w syntaxerr
0002F1A0 <AmiBlitz3.ab3@18050>   MOVEQ.l #$00,D3
0002F1A4 <AmiBlitz3.ab3@18051>    BSR.w atoi
0002F1A6 <AmiBlitz3.ab3@18052>   TST.l D3
0002F1AA <AmiBlitz3.ab3@18053>    BEQ.w JL_0_B2E0
0002F1B0 <AmiBlitz3.ab3@18054>   TST.b fpu
0002F1B4 <AmiBlitz3.ab3@18055>   BNE 'l1
0002F1BA <AmiBlitz3.ab3@18056>   CMP.l #$800000,D3
0002F1BE <AmiBlitz3.ab3@18057>    BCC.w overerr
0002F1C2 <AmiBlitz3.ab3@18058> BRA 'l2
0002F1C8 <AmiBlitz3.ab3@18061>   CMP.l #$7fffffff,d3
0002F1CC <AmiBlitz3.ab3@18062>   BCC overerr
0002F1D0 <AmiBlitz3.ab3@18065>   fmove.l d5,fp1
0002F1D2 <AmiBlitz3.ab3@18066>   MOVE.l D5,D0
0002F1D6 <AmiBlitz3.ab3@18067>    JSR -$24(A6)
0002F1D8 <AmiBlitz3.ab3@18068>   MOVE.l D0,D5
0002F1DC <AmiBlitz3.ab3@18069>   fmove.l d3,fp2
0002F1DE <AmiBlitz3.ab3@18070>   MOVE.l D3,D0
0002F1E2 <AmiBlitz3.ab3@18071>    JSR -$24(A6)
0002F1E6 <AmiBlitz3.ab3@18072>   fdiv.x fp1,fp2
0002F1E8 <AmiBlitz3.ab3@18073>   MOVE.l D5,D1
0002F1EC <AmiBlitz3.ab3@18074>    JSR -$54(A6)
0002F1F0 <AmiBlitz3.ab3@18075>   fadd.x fp2,fp0
0002F1F2 <AmiBlitz3.ab3@18076>   MOVE.l (A7)+,D1
0002F1F6 <AmiBlitz3.ab3@18077>    JSR -$42(A6)
0002F1F8 <AmiBlitz3.ab3@18078>   MOVE.l D0,D3
0002F1FC <AmiBlitz3.ab3@18079>    BSR.w reget
0002F200 <AmiBlitz3.ab3@18080>   ORI.w #$20,D0
0002F204 <AmiBlitz3.ab3@18081>   CMP.w #$65,D0
0002F208 <AmiBlitz3.ab3@18082>    BNE.w JL_0_B2D4
0002F20C <AmiBlitz3.ab3@18083>    BSR.w JL_0_B2E6
0002F210 <AmiBlitz3.ab3@18086>    BSR.w reget
0002F214 <AmiBlitz3.ab3@18087>    BSR.w JL_0_B480
0002F218 <AmiBlitz3.ab3@18088> BRA.w JL_0_B3DC
0002F21A <AmiBlitz3.ab3@18091>   MOVE.l (A7)+,D3
0002F21E <AmiBlitz3.ab3@18092> BRA.w JL_0_B2D4
0002F222 <AmiBlitz3.ab3@18095>   BSR.w get1bytemain
0002F226 <AmiBlitz3.ab3@18096>   CMP.w #$2B,D0
0002F22A <AmiBlitz3.ab3@18097>    BEQ.w JL_0_B30E
0002F22E <AmiBlitz3.ab3@18098>   CMP.w #$2D,D0
0002F232 <AmiBlitz3.ab3@18099>    BNE.w JL_0_B312
0002F236 <AmiBlitz3.ab3@18100>    BSR.w get1bytemain
0002F23A <AmiBlitz3.ab3@18101>    BSR.w getsign
0002F23C <AmiBlitz3.ab3@18102>   MOVE.l D3,D0
0002F240 <AmiBlitz3.ab3@18103>   fdiv.x fp1,fp0
0002F242 <AmiBlitz3.ab3@18104>   MOVE.l D4,D1
0002F246 <AmiBlitz3.ab3@18105>    JSR -$54(A6)
0002F248 <AmiBlitz3.ab3@18106>   MOVE.l D0,D3
0002F24A <AmiBlitz3.ab3@18107> RTS
0002F24E <AmiBlitz3.ab3@18110>   BSR.w get1bytemain
0002F252 <AmiBlitz3.ab3@18113>   BSR.w getsign
0002F256 <AmiBlitz3.ab3@18114>   fmul.x fp1,fp0
0002F258 <AmiBlitz3.ab3@18115>   MOVE.l D3,D0
0002F25A <AmiBlitz3.ab3@18116>   MOVE.l D4,D1
0002F25E <AmiBlitz3.ab3@18117>    JSR -$4E(A6)
0002F260 <AmiBlitz3.ab3@18118>   MOVE.l D0,D3
0002F262 <AmiBlitz3.ab3@18119> RTS
0002F266 <AmiBlitz3.ab3@18122>   BSR.w tstnum
0002F26A <AmiBlitz3.ab3@18123>    BNE.w syntaxerr
0002F26C <AmiBlitz3.ab3@18124>   MOVE.w D0,D4
0002F270 <AmiBlitz3.ab3@18125>   SUBI.w #$30,D4
0002F274 <AmiBlitz3.ab3@18126>    BSR.w get1bytemain
0002F278 <AmiBlitz3.ab3@18127>    BSR.w tstnum
0002F27C <AmiBlitz3.ab3@18128>    BNE.w getsign__skip
0002F280 <AmiBlitz3.ab3@18129>   MULU #$A,D4
0002F284 <AmiBlitz3.ab3@18130>   SUBI.w #$30,D0
0002F286 <AmiBlitz3.ab3@18131>   ADD.w D0,D4
0002F28A <AmiBlitz3.ab3@18132>    BSR.w get1bytemain
0002F28E <AmiBlitz3.ab3@18135>   CMP.w #$12,D4
0002F292 <AmiBlitz3.ab3@18136>    BHI.w overerr
0002F294 <AmiBlitz3.ab3@18137>   LSL.w #3,D4
0002F29A <AmiBlitz3.ab3@18138>   LEA fputab,a0
0002F29C <AmiBlitz3.ab3@18139>   ADD.l d4,a0
0002F2A2 <AmiBlitz3.ab3@18140>   fmove.d 0(a0),fp1
0002F2A4 <AmiBlitz3.ab3@18141>   LSR.w #1,d4
0002F2A8 <AmiBlitz3.ab3@18142>   MOVE.l facts(PC,D4.W),D4
0002F2AA <AmiBlitz3.ab3@18143> RTS
0002F2F2 <AmiBlitz3.ab3@18147>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F2F6 <AmiBlitz3.ab3@18152>   Dc.l $80000041
0002F2FA <AmiBlitz3.ab3@18153>   Dc.l $A0000044
0002F2FE <AmiBlitz3.ab3@18154>   Dc.l $C8000047
0002F302 <AmiBlitz3.ab3@18155>   Dc.l $FA00004A
0002F306 <AmiBlitz3.ab3@18156>   Dc.l $9C40004E
0002F30A <AmiBlitz3.ab3@18157>   Dc.l $C3500051
0002F30E <AmiBlitz3.ab3@18158>   Dc.l $F4240054
0002F312 <AmiBlitz3.ab3@18159>   Dc.l $98968058
0002F316 <AmiBlitz3.ab3@18160>   Dc.l $BEBC205B
0002F31A <AmiBlitz3.ab3@18161>   Dc.l $EE6B285E
0002F31E <AmiBlitz3.ab3@18162>   Dc.l $9502F962
0002F322 <AmiBlitz3.ab3@18163>   Dc.l $BA43B765
0002F326 <AmiBlitz3.ab3@18164>   Dc.l $E8D4A568
0002F32A <AmiBlitz3.ab3@18165>   Dc.l $9184E76C
0002F32E <AmiBlitz3.ab3@18166>   Dc.l $B5E6A96F
0002F332 <AmiBlitz3.ab3@18167>   Dc.l $E35F2972
0002F336 <AmiBlitz3.ab3@18168>   Dc.l $8E1BCA76
0002F33A <AmiBlitz3.ab3@18169>   Dc.l $B1A2BD79
0002F33E <AmiBlitz3.ab3@18170>   Dc.l $DE0B6C7C
0002F340 <AmiBlitz3.ab3@18174>   MOVEQ.l #$01,D5
0002F342 <AmiBlitz3.ab3@18177>   LSL.l #1,D5
0002F344 <AmiBlitz3.ab3@18178>   MOVE.l D5,D1
0002F346 <AmiBlitz3.ab3@18179>   LSL.l #2,D5
0002F348 <AmiBlitz3.ab3@18180>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F34A <AmiBlitz3.ab3@18181>   LSL.l #1,D3
0002F34E <AmiBlitz3.ab3@18182>    BCS.w overerr
0002F350 <AmiBlitz3.ab3@18183>   MOVE.l D3,D1
0002F352 <AmiBlitz3.ab3@18184>   LSL.l #1,D3
0002F356 <AmiBlitz3.ab3@18185>    BCS.w overerr
0002F358 <AmiBlitz3.ab3@18186>   LSL.l #1,D3
0002F35C <AmiBlitz3.ab3@18187>    BCS.w overerr
0002F35E <AmiBlitz3.ab3@18188>   ADD.l D1,D3
0002F362 <AmiBlitz3.ab3@18189>   SUBI.w #$30,D0
0002F364 <AmiBlitz3.ab3@18190>   ADD.l D0,D3
0002F390 <AmiBlitz3.ab3@18191>    !fget                                                   ;bsr.w get1bytemain
0002F394 <AmiBlitz3.ab3@18192>    CMP.b #1,d0
0002F398 <AmiBlitz3.ab3@18193>    BNE 'cm1
0002F39A <AmiBlitz3.ab3@18194>    SUBQ.l #1,a5
0002F39E <AmiBlitz3.ab3@18195>    BSR get1bytemain                                        ;??wy not !fget
0002F3A2 <AmiBlitz3.ab3@18198>   CMP.b #$7e,d0
0002F3A6 <AmiBlitz3.ab3@18199>    BNE 'cm2
0002F3A8 <AmiBlitz3.ab3@18200>    SUBQ.l #1,a5
0002F3AC <AmiBlitz3.ab3@18201>    BSR get1bytemain
0002F3AE <AmiBlitz3.ab3@18204>   TST.b d0
0002F3B2 <AmiBlitz3.ab3@18205>    BPL 'l10
0002F3B4 <AmiBlitz3.ab3@18206>    LSL.w #8,d0
0002F3B6 <AmiBlitz3.ab3@18207>    MOVE.b (a5)+,d0
0002F3BC <AmiBlitz3.ab3@18208>    MOVE.w d0,lastchar
0002F3CE <AmiBlitz3.ab3@18211>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F3D2 <AmiBlitz3.ab3@18212>    BEQ.w atoi__loop
0002F3D4 <AmiBlitz3.ab3@18213> RTS
0002F3D6 <AmiBlitz3.ab3@18216> dfetch:  Ds.w 1                                            ;fetching data?
0002F3DA <AmiBlitz3.ab3@18220>   MOVE.w dfetch(PC),D1
0002F3DE <AmiBlitz3.ab3@18221>    BEQ.w JL_0_B3EC
0002F3E4 <AmiBlitz3.ab3@18222>   CLR.w dfetch
0002F3E6 <AmiBlitz3.ab3@18223> RTS
0002F3EC <AmiBlitz3.ab3@18226>   MOVE.b d2,isconstantvalue
0002F3F2 <AmiBlitz3.ab3@18227>   MOVE.l d0,lastconstantvalue
0002F3F8 <AmiBlitz3.ab3@18228>   MOVE.w d2,imm_size
0002F402 <AmiBlitz3.ab3@18229>   MOVE.w regnum,imm_reg
0002F40C <AmiBlitz3.ab3@18230>   MOVE.l destpointer,imm_addr                           ; long
0002F410 <AmiBlitz3.ab3@18231>   CMP.w #$3,D2
0002F414 <AmiBlitz3.ab3@18232>   BEQ.w JL_0_B434
0002F418 <AmiBlitz3.ab3@18233>   CMP.w #$5,D2                                          ;float
0002F41C <AmiBlitz3.ab3@18234>   BEQ.w JL_0_B434
0002F420 <AmiBlitz3.ab3@18235>   CMP.w #$1,D2
0002F424 <AmiBlitz3.ab3@18236>   BEQ.w JL_0_B418
0002F428 <AmiBlitz3.ab3@18237>   CMP.w #$2,D2
0002F42C <AmiBlitz3.ab3@18238>   BEQ.w JL_0_B418
0002F430 <AmiBlitz3.ab3@18239>   CMP.w #$4,D2
0002F434 <AmiBlitz3.ab3@18240>   BEQ.w JL_0_B434
0002F438 <AmiBlitz3.ab3@18242> BRA.w mismatcherr
0002F43E <AmiBlitz3.ab3@18245>   MOVE.w regnum,D1
0002F440 <AmiBlitz3.ab3@18246>   LSL.w #8,D1
0002F442 <AmiBlitz3.ab3@18247>   LSL.w #1,D1
0002F446 <AmiBlitz3.ab3@18248>   ORI.w #$303C,D1
0002F44A <AmiBlitz3.ab3@18249>    BSR.w writeword
0002F44C <AmiBlitz3.ab3@18250>   MOVE.w D0,D1
0002F450 <AmiBlitz3.ab3@18251>    BSR.w writeword
0002F454 <AmiBlitz3.ab3@18252> BRA.w reget
0002F456 <AmiBlitz3.ab3@18255>   MOVEQ #0,d1
0002F45C <AmiBlitz3.ab3@18256>   MOVE.w regnum,D1
0002F462 <AmiBlitz3.ab3@18257>   TST.b fpu
0002F466 <AmiBlitz3.ab3@18258>   BEQ 'f1
0002F46A <AmiBlitz3.ab3@18259>   CMP.w #5,d2
0002F46E <AmiBlitz3.ab3@18260>   BEQ 'l10
0002F472 <AmiBlitz3.ab3@18261> BRA 'f2
0002F478 <AmiBlitz3.ab3@18264>   TST.b iee
0002F47C <AmiBlitz3.ab3@18265>   BNE 'l10
0002F47E <AmiBlitz3.ab3@18268>   LSL.w #8,D1
0002F480 <AmiBlitz3.ab3@18269>   LSL.w #1,D1
0002F484 <AmiBlitz3.ab3@18270>   ORI.w #$203C,D1
0002F488 <AmiBlitz3.ab3@18271>    BSR.w writeword
0002F48A <AmiBlitz3.ab3@18272>   MOVE.l D0,D1
0002F48E <AmiBlitz3.ab3@18273>    BSR.w writelong
0002F492 <AmiBlitz3.ab3@18274> BRA.w reget
0002F494 <AmiBlitz3.ab3@18277>   MOVEQ #5,d2
0002F496 <AmiBlitz3.ab3@18278>   ASL.l #7,d1
0002F498 <AmiBlitz3.ab3@18279>   SUBQ.l #8,a7
0002F49E <AmiBlitz3.ab3@18284>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F4A4 <AmiBlitz3.ab3@18285>        fmove.s fp0,0(a7)
0002F4A8 <AmiBlitz3.ab3@18287>   BSR writelong
0002F4AA <AmiBlitz3.ab3@18288>   MOVE.l (a7)+,d1
0002F4AE <AmiBlitz3.ab3@18289>   BSR writelong
0002F4B0 <AmiBlitz3.ab3@18290>   MOVE.l (a7)+,d1
0002F4B4 <AmiBlitz3.ab3@18294> BRA.w reget
0002F4B6 <AmiBlitz3.ab3@18300>  MOVE.l D3,D0
0002F4B8 <AmiBlitz3.ab3@18301>   TST.w D6
0002F4BC <AmiBlitz3.ab3@18302>    BEQ.w JL_0_B46C
0002F4C2 <AmiBlitz3.ab3@18303>   MOVEA.l _mathffpbase,A6
0002F4C6 <AmiBlitz3.ab3@18304>    JSR -$1E(A6)
0002F4CA <AmiBlitz3.ab3@18305>    BVC.w JL_0_B46C
0002F4CC <AmiBlitz3.ab3@18306>   ADDQ.w #4,A7
0002F4D0 <AmiBlitz3.ab3@18307> BRA.w JL_0_B5A0
0002F4D2 <AmiBlitz3.ab3@18310> RTS
0002F4D4 <AmiBlitz3.ab3@18314>   MOVEQ.l #$00,D6
0002F4D8 <AmiBlitz3.ab3@18315>    fmove.l d3,fp0
0002F4DC <AmiBlitz3.ab3@18318>   BSR.w JL_0_B480
0002F4E0 <AmiBlitz3.ab3@18319> BRA.w JL_0_B3DC
0002F4E2 <AmiBlitz3.ab3@18322>   MOVE.w D2,-(A7)
0002F4E6 <AmiBlitz3.ab3@18323>    BSR.w JL_0_BF6A
0002F4E8 <AmiBlitz3.ab3@18324>   MOVE.w (A7)+,D2
0002F4EA <AmiBlitz3.ab3@18327>   TST.w D2
0002F4EE <AmiBlitz3.ab3@18328>    BNE.w JL_0_B498
0002F4F0 <AmiBlitz3.ab3@18329>   TST.w D6
0002F4F4 <AmiBlitz3.ab3@18330>    BEQ.w JL_0_B492
0002F4F6 <AmiBlitz3.ab3@18331>   MOVEQ.l #$04,D2
0002F4FA <AmiBlitz3.ab3@18332> BRA.w JL_0_B510
0002F4FC <AmiBlitz3.ab3@18335>   MOVEQ.l #$02,D2
0002F500 <AmiBlitz3.ab3@18336> BRA.w JL_0_B4C4
0002F504 <AmiBlitz3.ab3@18339>   CMP.w #$1,D2
0002F508 <AmiBlitz3.ab3@18340>    BEQ.w JL_0_B4C4
0002F50C <AmiBlitz3.ab3@18341>   CMP.w #$2,D2
0002F510 <AmiBlitz3.ab3@18342>    BEQ.w JL_0_B4F8
0002F514 <AmiBlitz3.ab3@18343>   CMP.w #$3,D2
0002F518 <AmiBlitz3.ab3@18344>    BEQ.w JL_0_B57A
0002F51C <AmiBlitz3.ab3@18345>   CMP.w #$4,D2
0002F520 <AmiBlitz3.ab3@18346>    BEQ.w JL_0_B506
0002F524 <AmiBlitz3.ab3@18347>   CMP.w #$5,D2
0002F528 <AmiBlitz3.ab3@18348>    BEQ.w JL_0_B586
0002F52C <AmiBlitz3.ab3@18349> BRA.w mismatcherr
0002F530 <AmiBlitz3.ab3@18352>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002F536 <AmiBlitz3.ab3@18353>   CMP.l #$7f,D0
0002F53A <AmiBlitz3.ab3@18354>    BGT.w JL_0_B4DC
0002F540 <AmiBlitz3.ab3@18355>   CMP.l #$FFFFFF80,D0
0002F544 <AmiBlitz3.ab3@18356>    BGE.w JL_0_B59E
0002F546 <AmiBlitz3.ab3@18359>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F54C <AmiBlitz3.ab3@18360>   CMP.l #$7fff,D0
0002F550 <AmiBlitz3.ab3@18361>    BGT.w JL_0_B4F2
0002F556 <AmiBlitz3.ab3@18362>   CMP.l #$FFFF8000,D0
0002F55A <AmiBlitz3.ab3@18363>    BGE.w JL_0_B59E
0002F55C <AmiBlitz3.ab3@18366>   MOVEQ.l #$03,D2
0002F560 <AmiBlitz3.ab3@18367> BRA.w JL_0_B59E
0002F562 <AmiBlitz3.ab3@18393>   TST.w D6
0002F566 <AmiBlitz3.ab3@18394>    BNE.w JL_0_B510
0002F56A <AmiBlitz3.ab3@18395>    BSR.w JL_0_B450
0002F56E <AmiBlitz3.ab3@18396> BRA.w JL_0_B4DC
0002F572 <AmiBlitz3.ab3@18399>   BSR.w JL_0_B450
0002F574 <AmiBlitz3.ab3@18400>   TST.w D6
0002F578 <AmiBlitz3.ab3@18401>   BEQ.w JL_0_B560
0002F57E <AmiBlitz3.ab3@18404>   CMP.l #MaxWordSgnd,D0
0002F582 <AmiBlitz3.ab3@18405>    BGT.w JL_0_B5A0
0002F588 <AmiBlitz3.ab3@18406>   CMP.l #$FFFF8000,D0
0002F58C <AmiBlitz3.ab3@18407>    BLT.w JL_0_B5A0
0002F58E <AmiBlitz3.ab3@18408>   MOVE.w D0,-(A7)
0002F592 <AmiBlitz3.ab3@18409>    JSR -$24(A6)
0002F594 <AmiBlitz3.ab3@18410>   MOVE.l D0,D1
0002F596 <AmiBlitz3.ab3@18411>   MOVE.l D3,D0
0002F59A <AmiBlitz3.ab3@18412>    JSR -$48(A6)
0002F5A0 <AmiBlitz3.ab3@18413>   MOVE.l #$80000051,D1
0002F5A4 <AmiBlitz3.ab3@18414>    JSR -$4E(A6)
0002F5A8 <AmiBlitz3.ab3@18415>    JSR -$1E(A6)
0002F5AC <AmiBlitz3.ab3@18416>    BEQ.w JL_0_B55A
0002F5B2 <AmiBlitz3.ab3@18417>   CMP.l #$10000,D0
0002F5B6 <AmiBlitz3.ab3@18418>    BCC.w JL_0_B55A
0002F5B8 <AmiBlitz3.ab3@18419>   MOVE.w D0,D1
0002F5BA <AmiBlitz3.ab3@18420>   MOVE.w (A7)+,D0
0002F5BC <AmiBlitz3.ab3@18421>   SWAP D0
0002F5BE <AmiBlitz3.ab3@18422>   MOVE.w D1,D0
0002F5C2 <AmiBlitz3.ab3@18423> BRA.w JL_0_B59E
0002F5C4 <AmiBlitz3.ab3@18426>   ADDQ.w #2,A7
0002F5C8 <AmiBlitz3.ab3@18427> BRA.w JL_0_B5A0
0002F5CE <AmiBlitz3.ab3@18430>   CMP.l #MaxWordSgnd,D0
0002F5D2 <AmiBlitz3.ab3@18431>    BGT.w JL_0_B4F2
0002F5D8 <AmiBlitz3.ab3@18432>   CMP.l #$FFFF8000,D0
0002F5DC <AmiBlitz3.ab3@18433>    BLT.w JL_0_B4F2
0002F5DE <AmiBlitz3.ab3@18434>   SWAP D0
0002F5E2 <AmiBlitz3.ab3@18435> BRA.w JL_0_B59E
0002F5E4 <AmiBlitz3.ab3@18438>   TST.w D6
0002F5E8 <AmiBlitz3.ab3@18439>   BNE.w JL_0_B5A0
0002F5EA <AmiBlitz3.ab3@18440>   MOVE.l D3,D0
0002F5EE <AmiBlitz3.ab3@18441> BRA.w JL_0_B59E
0002F5F0 <AmiBlitz3.ab3@18444>   TST.w D6
0002F5F4 <AmiBlitz3.ab3@18445>   BNE.w JL_0_B5A0
0002F5F6 <AmiBlitz3.ab3@18446>   MOVE.l D3,D0
0002F5FC <AmiBlitz3.ab3@18447>   MOVEA.l _mathffpbase,A6
0002F600 <AmiBlitz3.ab3@18448>   JSR -$24(A6)
0002F602 <AmiBlitz3.ab3@18449>   MOVE.l D0,D3
0002F606 <AmiBlitz3.ab3@18450> BRA.w JL_0_B5A0
0002F608 <AmiBlitz3.ab3@18453> RTS
0002F60A <AmiBlitz3.ab3@18456>   MOVEQ.l #$05,D2
0002F60C <AmiBlitz3.ab3@18457>   MOVE.l D3,D0
0002F60E <AmiBlitz3.ab3@18458> RTS
0002F612 <AmiBlitz3.ab3@18462>             Ds.l 1                                         ;??Looks like unused data??
0002F616 <AmiBlitz3.ab3@18463> pushpc:     Ds.l 1
0002F61A <AmiBlitz3.ab3@18464> pushoff:    Ds.l 1
0002F61E <AmiBlitz3.ab3@18465> pushdooff:  Ds.l 1
0002F620 <AmiBlitz3.ab3@18466> pushclen:   Ds.w 1
0002F624 <AmiBlitz3.ab3@18467> pushat:     Ds.l 1
0002F62E <AmiBlitz3.ab3@18471>   MOVE.l destpointer,pushpc
0002F638 <AmiBlitz3.ab3@18472>   MOVE.l hunkoffsetbase,pushoff
0002F63A <AmiBlitz3.ab3@18473> RTS
0002F63E <AmiBlitz3.ab3@18477>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F644 <AmiBlitz3.ab3@18478>   MOVE.l destpointer,D0
0002F648 <AmiBlitz3.ab3@18479>   MOVE.l pushpc(PC),D1
0002F64E <AmiBlitz3.ab3@18480>   MOVE.l D1,destpointer
0002F650 <AmiBlitz3.ab3@18481>   SUB.l D1,D0
0002F656 <AmiBlitz3.ab3@18482>   MOVE.w D0,pushclen
0002F65A <AmiBlitz3.ab3@18483>    BEQ.w JL_0_B636
0002F660 <AmiBlitz3.ab3@18484>   MOVE.w dontwrite,D1
0002F664 <AmiBlitz3.ab3@18485>    BNE.w JL_0_B636
0002F66C <AmiBlitz3.ab3@18486>    CMP.w #1000,pushclen
0002F670 <AmiBlitz3.ab3@18487>    BGE conmemerr
0002F676 <AmiBlitz3.ab3@18488>    MOVE.l pushat,d0
0002F67A <AmiBlitz3.ab3@18489>    BNE 'nomem
0002F680 <AmiBlitz3.ab3@18490>    MOVE.l #1024,d0
0002F682 <AmiBlitz3.ab3@18491>   MOVEQ.l #$01,D1
0002F688 <AmiBlitz3.ab3@18492>   MOVEA.l _execbase,A6
0002F68E <AmiBlitz3.ab3@18493>   MOVE.l mempool,a0
0002F692 <AmiBlitz3.ab3@18494>   JSR _AllocPooled(a6)
0002F698 <AmiBlitz3.ab3@18496>   MOVE.l D0,pushat
0002F69A <AmiBlitz3.ab3@18499>   MOVEA.l D0,A0
0002F6A0 <AmiBlitz3.ab3@18500>   MOVEA.l pushpc,A1
0002F6A6 <AmiBlitz3.ab3@18501>   MOVE.l A1,destpointer
0002F6AC <AmiBlitz3.ab3@18502>   MOVE.w pushclen,D0
0002F6AE <AmiBlitz3.ab3@18503>   LSR.w #1,D0
0002F6B0 <AmiBlitz3.ab3@18504>   SUBQ.w #1,D0
0002F6B2 <AmiBlitz3.ab3@18507>     MOVE.w (A1)+,(A0)+
0002F6B6 <AmiBlitz3.ab3@18508>   DBF D0,JL_0_B626
0002F6C0 <AmiBlitz3.ab3@18510>    MOVE.l hunkoffsetbase,pushdooff
0002F6C4 <AmiBlitz3.ab3@18513>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F6C6 <AmiBlitz3.ab3@18514> RTS
0002F6CA <AmiBlitz3.ab3@18518>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F6CC <AmiBlitz3.ab3@18519>   MOVEQ.l #$00,D0
0002F6D2 <AmiBlitz3.ab3@18520>   MOVE.w pushclen,D0
0002F6D6 <AmiBlitz3.ab3@18521>    BEQ.w JL_0_B6D8
0002F6DC <AmiBlitz3.ab3@18522>   MOVE.l destpointer,D1
0002F6E2 <AmiBlitz3.ab3@18523>   ADD.l D0,destpointer
0002F6E8 <AmiBlitz3.ab3@18524>   TST.w dontwrite
0002F6EC <AmiBlitz3.ab3@18525>    BNE.w JL_0_B6D8
0002F6EE <AmiBlitz3.ab3@18526>   LSR.w #1,D0
0002F6F0 <AmiBlitz3.ab3@18527>   SUBQ.w #1,D0
0002F6F2 <AmiBlitz3.ab3@18528>   MOVEA.l D1,A1
0002F6F8 <AmiBlitz3.ab3@18529>   MOVEA.l pushat,A0
0002F6FE <AmiBlitz3.ab3@18532>     CMPA.l destbufferend,A1
0002F702 <AmiBlitz3.ab3@18533>     BCS.w JL_0_B684
0002F70A <AmiBlitz3.ab3@18535>     MOVE.w #$FFFF,dontwrite
0002F70E <AmiBlitz3.ab3@18536>   BRA.w JL_0_B6D8
0002F710 <AmiBlitz3.ab3@18539>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F714 <AmiBlitz3.ab3@18540>   DBF D0,JL_0_B66E
0002F71A <AmiBlitz3.ab3@18542>   SUB.l pushpc,D1
0002F71E <AmiBlitz3.ab3@18543>   BEQ.w JL_0_B6C2
0002F724 <AmiBlitz3.ab3@18544>   MOVEA.l pushdooff,A0
0002F72A <AmiBlitz3.ab3@18547>   CMPA.l pushoff,A0
0002F72E <AmiBlitz3.ab3@18548>   BEQ.w JL_0_B6C2
0002F732 <AmiBlitz3.ab3@18549>   MOVEA.l $4(A0),A1
0002F738 <AmiBlitz3.ab3@18550>   ADDA.l destbufferstart,A1
0002F73E <AmiBlitz3.ab3@18551>   CMPA.l destbufferend,A1
0002F742 <AmiBlitz3.ab3@18552>   BCC.w JL_0_B6BC
0002F746 <AmiBlitz3.ab3@18553>   ADD.l D1,$4(A0)
0002F748 <AmiBlitz3.ab3@18556>   MOVEA.l (A0),A0
0002F74C <AmiBlitz3.ab3@18557> BRA.w JL_0_B69A
0002F752 <AmiBlitz3.ab3@18560>   MOVEA.l pushat,A1
0002F754 <AmiBlitz3.ab3@18561>   MOVEQ.l #$00,D0
0002F75A <AmiBlitz3.ab3@18562>   MOVE.w pushclen,D0
0002F760 <AmiBlitz3.ab3@18563>   MOVEA.l _execbase,A6
0002F766 <AmiBlitz3.ab3@18564>   MOVE.l mempool,a0
0002F76A <AmiBlitz3.ab3@18568>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F76C <AmiBlitz3.ab3@18569> RTS
0002F76E <AmiBlitz3.ab3@18572>   MOVE.l D1,-(A7)                                          ;array mul
0002F770 <AmiBlitz3.ab3@18573>   MOVEQ.l #$00,D2
0002F772 <AmiBlitz3.ab3@18574>   MOVEQ.l #$0F,D3
0002F774 <AmiBlitz3.ab3@18577>     LSL.w #1,D1
0002F778 <AmiBlitz3.ab3@18578>     BCC.w JL_0_B6EE
0002F77A <AmiBlitz3.ab3@18579>     ADDQ.w #1,D2
0002F77C <AmiBlitz3.ab3@18580>     MOVE.w D3,D4
0002F780 <AmiBlitz3.ab3@18583>   DBF D3,JL_0_B6E4
0002F782 <AmiBlitz3.ab3@18585>   SUBQ.w #1,D2
0002F786 <AmiBlitz3.ab3@18586>    BNE.w JL_0_B726
0002F788 <AmiBlitz3.ab3@18587>   ADDQ.w #4,A7
0002F78A <AmiBlitz3.ab3@18588>   MOVE.w D4,D1
0002F78E <AmiBlitz3.ab3@18589>    BEQ.w JL_0_B724
0002F792 <AmiBlitz3.ab3@18590>   CMP.w #$8,D1
0002F796 <AmiBlitz3.ab3@18591>    BCS.w JL_0_B712
0002F79A <AmiBlitz3.ab3@18592>   SUBI.w #$8,D1
0002F79E <AmiBlitz3.ab3@18593>    BSR.w JL_0_B712
0002F7A0 <AmiBlitz3.ab3@18594>   MOVEQ.l #$00,D1
0002F7A2 <AmiBlitz3.ab3@18597>   LSL.w #8,D1
0002F7A4 <AmiBlitz3.ab3@18598>   LSL.w #1,D1
0002F7A8 <AmiBlitz3.ab3@18599>   ORI.w #$E188,D1
0002F7AE <AmiBlitz3.ab3@18600>   OR.w regnum,D1
0002F7B2 <AmiBlitz3.ab3@18601> BRA.w writeword
0002F7B4 <AmiBlitz3.ab3@18604> RTS
0002F7B6 <AmiBlitz3.ab3@18607>   MOVEQ #0,d1
0002F7BC <AmiBlitz3.ab3@18608>   MOVE.w regnum,D1
0002F7BE <AmiBlitz3.ab3@18609>   LSL.l #8,D1
0002F7C0 <AmiBlitz3.ab3@18611>   LSL.l #4,d1
0002F7C6 <AmiBlitz3.ab3@18613>   OR.l #$4c3c0000,d1
0002F7CC <AmiBlitz3.ab3@18614>   OR.w regnum,d1
0002F7D0 <AmiBlitz3.ab3@18615>   BSR.w writelong
0002F7D2 <AmiBlitz3.ab3@18616>   MOVE.l (A7)+,D1
0002F7D6 <AmiBlitz3.ab3@18618> BRA writelong
0002F7DC <AmiBlitz3.ab3@18621>   MOVE.l destpointer,-(A7)
0002F7DE <AmiBlitz3.ab3@18622>   MOVEQ.l #-$01,D7
0002F7E2 <AmiBlitz3.ab3@18625>     BSR.w findhilib
0002F7E6 <AmiBlitz3.ab3@18626>      BEQ.w JL_0_B8A4
0002F7EA <AmiBlitz3.ab3@18627>     TST.w $C(A2)
0002F7EE <AmiBlitz3.ab3@18628>      BPL.w JL_0_B746
0002F7F2 <AmiBlitz3.ab3@18630>     MOVE.l $16(A2),D1
0002F7F6 <AmiBlitz3.ab3@18631>     BEQ.w JL_0_B746
0002F7FA <AmiBlitz3.ab3@18633>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F7FE <AmiBlitz3.ab3@18634>     CMP.w #-$2,D1
0002F802 <AmiBlitz3.ab3@18635>      BNE.w JL_0_B772
0002F806 <AmiBlitz3.ab3@18636>     BSR.w makevsize
0002F80A <AmiBlitz3.ab3@18637> BRA.w JL_0_B7FE
0002F80E <AmiBlitz3.ab3@18640>     CMP.w #-$5C4,D1
0002F812 <AmiBlitz3.ab3@18641>      BNE.w JL_0_B790
0002F816 <AmiBlitz3.ab3@18642>     MOVE.w #$7000,D1
0002F81E <AmiBlitz3.ab3@18643>     BTST #$7,autorun
0002F820 <AmiBlitz3.ab3@18644>     SNE D1
0002F824 <AmiBlitz3.ab3@18645>     BSR.w writeword
0002F828 <AmiBlitz3.ab3@18646> BRA.w JL_0_B7FE
0002F82C <AmiBlitz3.ab3@18649>     CMP.w #-$12D,D1
0002F830 <AmiBlitz3.ab3@18650>      BNE.w JL_0_B7A0
0002F834 <AmiBlitz3.ab3@18651>     BSR.w makessize
0002F838 <AmiBlitz3.ab3@18652> BRA.w JL_0_B7FE
0002F83C <AmiBlitz3.ab3@18655>     CMP.w #-$1F5,D1
0002F840 <AmiBlitz3.ab3@18656>      BNE.w JL_0_B7C2
0002F844 <AmiBlitz3.ab3@18657>     MOVE.w #$203C,D1
0002F848 <AmiBlitz3.ab3@18658>     BSR.w writeword
0002F84C <AmiBlitz3.ab3@18659>     BSR.w addoff
0002F852 <AmiBlitz3.ab3@18660>     MOVE.l endop,D1
0002F856 <AmiBlitz3.ab3@18661>     BSR.w writelong
0002F85A <AmiBlitz3.ab3@18662> BRA.w JL_0_B7FE
0002F85E <AmiBlitz3.ab3@18665>     CMP.w #-$3E9,D1
0002F862 <AmiBlitz3.ab3@18666>      BNE.w JL_0_B7E4
0002F866 <AmiBlitz3.ab3@18667>     MOVE.w #$203C,D1
0002F86A <AmiBlitz3.ab3@18668>     BSR.w writeword
0002F86E <AmiBlitz3.ab3@18669>     BSR.w addoff
0002F874 <AmiBlitz3.ab3@18670>     MOVE.l data2at,D1
0002F878 <AmiBlitz3.ab3@18671>     BSR.w writelong
0002F87C <AmiBlitz3.ab3@18672> BRA.w JL_0_B7FE
0002F880 <AmiBlitz3.ab3@18675>     CMP.w #$1,D1
0002F884 <AmiBlitz3.ab3@18676>      BNE.w JL_0_B7FE
0002F888 <AmiBlitz3.ab3@18677>     MOVE.w #$203C,D1
0002F88C <AmiBlitz3.ab3@18678>     BSR.w writeword
0002F892 <AmiBlitz3.ab3@18679>     MOVE.l ptr_seg_debugger,D1
0002F896 <AmiBlitz3.ab3@18680>     BSR.w writelong
0002F89A <AmiBlitz3.ab3@18683>     MOVE.l $16(A2),D1
0002F8A2 <AmiBlitz3.ab3@18684>     MOVE.w #$FFFF,lasta6
0002F8A6 <AmiBlitz3.ab3@18685>     BSR.w Amakelibsub
0002F8AC <AmiBlitz3.ab3@18686>     CMPI.w #$FFFE,$4(A2)
0002F8B0 <AmiBlitz3.ab3@18687>      BNE.w JL_0_B83A
0002F8B6 <AmiBlitz3.ab3@18688>     MOVE.l intdata1,D1
0002F8BA <AmiBlitz3.ab3@18689>      BEQ.w JL_0_B83A
0002F8C0 <AmiBlitz3.ab3@18690>     MOVE.w putidata1,D1
0002F8C4 <AmiBlitz3.ab3@18691>     BSR.w writeword
0002F8C8 <AmiBlitz3.ab3@18692>     BSR.w addoff
0002F8CE <AmiBlitz3.ab3@18693>     MOVE.l intdata1,D1
0002F8D2 <AmiBlitz3.ab3@18694>     BSR.w writelong
0002F8D6 <AmiBlitz3.ab3@18697>     MOVE.w #$2B40,D1
0002F8DA <AmiBlitz3.ab3@18698>     TST.w $1A(A2)
0002F8DE <AmiBlitz3.ab3@18699>      BEQ.w JL_0_B746
0002F8E2 <AmiBlitz3.ab3@18700>      BPL.w JL_0_B84E
0002F8E6 <AmiBlitz3.ab3@18701>     MOVE.w #$3B40,D1
0002F8EA <AmiBlitz3.ab3@18704>     BSR.w writeword
0002F8EE <AmiBlitz3.ab3@18705>     MOVE.w $A(A2),D1
0002F8F2 <AmiBlitz3.ab3@18706>      BSR.w writeword
0002F8F8 <AmiBlitz3.ab3@18707>     CMPI.w #$FFFA,$4(A2)
0002F8FC <AmiBlitz3.ab3@18708>      BNE.w JL_0_B746
0002F8FE <AmiBlitz3.ab3@18709>     MOVE.w D7,-(A7)
0002F904 <AmiBlitz3.ab3@18710>     MOVE.w numstatic,D4
0002F908 <AmiBlitz3.ab3@18711>      BEQ.w JL_0_B882
0002F90E <AmiBlitz3.ab3@18712>     MOVE.l staticdata,D3
0002F914 <AmiBlitz3.ab3@18713>      JSR datastart
0002F918 <AmiBlitz3.ab3@18714>     MOVE.w #$C500,D1
0002F91C <AmiBlitz3.ab3@18715>      BSR.w tokejsr2
0002F922 <AmiBlitz3.ab3@18718>     MOVE.w maxsused,D4
0002F926 <AmiBlitz3.ab3@18719>      BEQ.w JL_0_B89E
0002F92C <AmiBlitz3.ab3@18720>     MOVE.l maxsat,D3
0002F932 <AmiBlitz3.ab3@18721>      JSR datastart
0002F936 <AmiBlitz3.ab3@18722>     MOVE.w #$CF00,D1
0002F93A <AmiBlitz3.ab3@18723>      BSR.w tokejsr2
0002F93C <AmiBlitz3.ab3@18726>     MOVE.w (A7)+,D7
0002F940 <AmiBlitz3.ab3@18727> BRA.w JL_0_B746
0002F946 <AmiBlitz3.ab3@18730>   MOVE.l destpointer,D1
0002F948 <AmiBlitz3.ab3@18731>   CMP.l (A7),D1
0002F94C <AmiBlitz3.ab3@18732>    BNE.w JL_0_B8BC
0002F954 <AmiBlitz3.ab3@18733>   MOVE.w #$0008,noinits+2
0002F958 <AmiBlitz3.ab3@18734> BRA.w JL_0_B8E6
0002F95E <AmiBlitz3.ab3@18737>   CLR.w noinits+2
0002F964 <AmiBlitz3.ab3@18738>   MOVE.w dontwrite,D1
0002F968 <AmiBlitz3.ab3@18739>    BNE.w JL_0_B8DE
0002F96E <AmiBlitz3.ab3@18740>   TST.l newinitaddr
0002F972 <AmiBlitz3.ab3@18741>    BEQ 'l10
0002F978 <AmiBlitz3.ab3@18742>   MOVE.l newinitaddr,D2
0002F97E <AmiBlitz3.ab3@18743>   SUB.l destbufferstart,D2
0002F980 <AmiBlitz3.ab3@18744>   ADDQ.l #2,d2
0002F986 <AmiBlitz3.ab3@18745>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F98A <AmiBlitz3.ab3@18747>   MOVE.w #$4EB9,(A0)+
0002F98C <AmiBlitz3.ab3@18748>   MOVE.l (A7),(A0)+
0002F990 <AmiBlitz3.ab3@18750> BRA 'l20
0002F996 <AmiBlitz3.ab3@18753>   MOVEA.l destbufferstart,A0                               ;write initcode
0002F99C <AmiBlitz3.ab3@18754>   TST.b saved0
0002F9A0 <AmiBlitz3.ab3@18755>   BEQ 'l1
0002F9A4 <AmiBlitz3.ab3@18756>   MOVE.w #$23c0,(a0)+
0002F9A6 <AmiBlitz3.ab3@18757>   MOVE.l a0,a1
0002F9A8 <AmiBlitz3.ab3@18758>   ADDQ.l #6,a1
0002F9AA <AmiBlitz3.ab3@18759>   MOVE.l a1,(a0)+
0002F9AC <AmiBlitz3.ab3@18760>   MOVEQ.l #$02,D2
0002F9B0 <AmiBlitz3.ab3@18761>   BSR.w addhunkoffset
0002F9B4 <AmiBlitz3.ab3@18762>   MOVE.w #$6004,(a0)+
0002F9BA <AmiBlitz3.ab3@18763>   MOVE.l #$4e714e71,(a0)+
0002F9BE <AmiBlitz3.ab3@18766>   MOVE.w #$4EB9,(A0)+
0002F9C0 <AmiBlitz3.ab3@18767>   MOVE.l (A7),(A0)+
0002F9C2 <AmiBlitz3.ab3@18768>   MOVEQ #2,d2
0002F9C8 <AmiBlitz3.ab3@18769>   TST.b saved0
0002F9CC <AmiBlitz3.ab3@18770>   BEQ 'l20
0002F9CE <AmiBlitz3.ab3@18771>   MOVEQ.l #14,D2
0002F9D2 <AmiBlitz3.ab3@18774>   BSR.w addhunkoffset
0002F9D6 <AmiBlitz3.ab3@18775>   MOVE.w #$2039,(a0)+
0002F9D8 <AmiBlitz3.ab3@18776>   MOVE.l a1,(a0)+
0002F9DA <AmiBlitz3.ab3@18777>   MOVEQ.l #20,d2
0002F9DE <AmiBlitz3.ab3@18780>   BSR.w addhunkoffset
0002F9E2 <AmiBlitz3.ab3@18783>   MOVE.w #$4E75,D1
0002F9E6 <AmiBlitz3.ab3@18784>   BSR.w writeword
0002F9E8 <AmiBlitz3.ab3@18787>   ADDQ.w #4,A7
0002F9EA <AmiBlitz3.ab3@18788> RTS
0002F9EE <AmiBlitz3.ab3@18793>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002F9F4 <AmiBlitz3.ab3@18795>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002F9FA <AmiBlitz3.ab3@18797>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FA00 <AmiBlitz3.ab3@18802>   MOVE.l stringbuffer,D1
0002FA04 <AmiBlitz3.ab3@18803> BRA.w makesize
0002FA06 <AmiBlitz3.ab3@18806>   MOVEQ.l #$00,D1
0002FA0C <AmiBlitz3.ab3@18807>   MOVE.w globalvarpointer,D1
0002FA10 <AmiBlitz3.ab3@18808>   SUBI.w #$8000,D1
0002FA14 <AmiBlitz3.ab3@18809>   BNE.w makesize
0002FA16 <AmiBlitz3.ab3@18810>     MOVEQ.l #$08,D1
0002FA18 <AmiBlitz3.ab3@18813>   MOVE.l D1,-(A7)
0002FA1C <AmiBlitz3.ab3@18814>   MOVE.w #$203C,D1
0002FA20 <AmiBlitz3.ab3@18815>   BSR.w writeword
0002FA22 <AmiBlitz3.ab3@18816>   MOVE.l (A7)+,D1
0002FA26 <AmiBlitz3.ab3@18817> BRA.w writelong
0002FA28 <AmiBlitz3.ab3@18825>   MOVEQ.l #$00,D1
0002FA2E <AmiBlitz3.ab3@18826>   MOVEA.l libpointer,A1
0002FA32 <AmiBlitz3.ab3@18829>     CMPA.w #$0,A1
0002FA36 <AmiBlitz3.ab3@18830>     BEQ.w findhilib__done
0002FA3A <AmiBlitz3.ab3@18831>       CMP.w $4(A1),D7
0002FA3E <AmiBlitz3.ab3@18832>       BLS.w findhilib__next
0002FA42 <AmiBlitz3.ab3@18833>         CMP.w $4(A1),D1
0002FA46 <AmiBlitz3.ab3@18834>         BCC.w findhilib__next
0002FA4A <AmiBlitz3.ab3@18835>           MOVE.w $4(A1),D1
0002FA4C <AmiBlitz3.ab3@18836>           MOVEA.l A1,A2
0002FA4E <AmiBlitz3.ab3@18839>     MOVEA.l (A1),A1
0002FA52 <AmiBlitz3.ab3@18840> BRA.w findhilib__loop
0002FA54 <AmiBlitz3.ab3@18843>   MOVE.w D1,D7
0002FA56 <AmiBlitz3.ab3@18844> RTS
0002FA58 <AmiBlitz3.ab3@18852>   MOVEQ.l #-$01,D1
0002FA5E <AmiBlitz3.ab3@18853>   MOVEA.l libpointer,A1
0002FA62 <AmiBlitz3.ab3@18856>     CMPA.w #$0,A1
0002FA66 <AmiBlitz3.ab3@18857>      BEQ.w findlolib__done
0002FA6A <AmiBlitz3.ab3@18858>     CMP.w $4(A1),D7
0002FA6E <AmiBlitz3.ab3@18859>      BCC.w findlolib__next
0002FA72 <AmiBlitz3.ab3@18860>     CMP.w $4(A1),D1
0002FA76 <AmiBlitz3.ab3@18861>      BLS.w findlolib__next
0002FA7A <AmiBlitz3.ab3@18862>     MOVE.w $4(A1),D1
0002FA7C <AmiBlitz3.ab3@18863>     MOVEA.l A1,A2
0002FA7E <AmiBlitz3.ab3@18866>     MOVEA.l (A1),A1
0002FA82 <AmiBlitz3.ab3@18867> BRA.w findlolib__loop
0002FA84 <AmiBlitz3.ab3@18870>   MOVE.w D1,D7
0002FA88 <AmiBlitz3.ab3@18871>   CMP.w #-$1,D1
0002FA8A <AmiBlitz3.ab3@18872> RTS
0002FA90 <AmiBlitz3.ab3@18876>   ADDQ.w #1,globalvarpointer
0002FA98 <AmiBlitz3.ab3@18877>   BCLR #$0,globalvarpointer+1
0002FA9A <AmiBlitz3.ab3@18878>   MOVEQ.l #$00,D7
0002FA9E <AmiBlitz3.ab3@18881>     BSR.w findlolib
0002FAA2 <AmiBlitz3.ab3@18882>     BEQ.w JL_0_BA74
0002FAA6 <AmiBlitz3.ab3@18883>     TST.w $C(A2)
0002FAAA <AmiBlitz3.ab3@18884>     BPL.w JL_0_B99A
0002FAAC <AmiBlitz3.ab3@18885>     MOVEA.l A2,A1
0002FAB0 <AmiBlitz3.ab3@18886>     ADDA.l $12(A1),A1
0002FAB4 <AmiBlitz3.ab3@18887>     TST.w -$2(A1)
0002FAB8 <AmiBlitz3.ab3@18888>     BEQ.w JL_0_BA34
0002FABC <AmiBlitz3.ab3@18889>     MOVE.l -$A(A1),D1
0002FAC0 <AmiBlitz3.ab3@18890>     LEA $6(A2,D1.L),A3
0002FAC2 <AmiBlitz3.ab3@18893>       TST.w (A3)+
0002FAC6 <AmiBlitz3.ab3@18894>       BEQ.w JL_0_B9CC
0002FAC8 <AmiBlitz3.ab3@18895>         ADDQ.w #2,A3
0002FACC <AmiBlitz3.ab3@18896> BRA.w JL_0_B9C0
0002FAD0 <AmiBlitz3.ab3@18899>     TST.l $4(A3)
0002FAD4 <AmiBlitz3.ab3@18900>     BEQ.w JL_0_BA34
0002FAD8 <AmiBlitz3.ab3@18901>       MOVE.w freemax(PC),D1
0002FADC <AmiBlitz3.ab3@18902>       BSR.w writeword
0002FAE0 <AmiBlitz3.ab3@18903>       MOVE.w -$4(A1),D1
0002FAE4 <AmiBlitz3.ab3@18904>       BSR.w writeword
0002FAEA <AmiBlitz3.ab3@18905>       MOVE.l free,D1
0002FAEE <AmiBlitz3.ab3@18906>       MOVE.w -$6(A1),D1
0002FAF2 <AmiBlitz3.ab3@18907>       BSR.w writelong
0002FAF8 <AmiBlitz3.ab3@18908>       MOVE.l destpointer,-(A7)
0002FAFA <AmiBlitz3.ab3@18909>       MOVEQ.l #$01,D1
0002FAFE <AmiBlitz3.ab3@18910>       MOVE.w -$2(A1),D2
0002FB00 <AmiBlitz3.ab3@18911>       LSL.w D2,D1
0002FB02 <AmiBlitz3.ab3@18912>       MOVE.w D1,-(A7)
0002FB06 <AmiBlitz3.ab3@18913>       MOVE.l -$A(A1),D1
0002FB0A <AmiBlitz3.ab3@18914>       BSR.w Amakelibsub
0002FB0E <AmiBlitz3.ab3@18915>       MOVE.w freemax3(PC),D1
0002FB12 <AmiBlitz3.ab3@18916>       BSR.w writeword
0002FB14 <AmiBlitz3.ab3@18917>       MOVE.w (A7)+,D1
0002FB18 <AmiBlitz3.ab3@18918>       BSR.w writeword
0002FB1C <AmiBlitz3.ab3@18919>       MOVE.l freemax2(PC),D1
0002FB20 <AmiBlitz3.ab3@18920>       BSR.w writelong
0002FB22 <AmiBlitz3.ab3@18921>       MOVE.l (A7)+,D1
0002FB28 <AmiBlitz3.ab3@18922>       SUB.l destpointer,D1
0002FB2C <AmiBlitz3.ab3@18923>       BSR.w writeword
0002FB30 <AmiBlitz3.ab3@18924>       MOVE.w freemax4(PC),D1
0002FB34 <AmiBlitz3.ab3@18925>       BSR.w writeword
0002FB38 <AmiBlitz3.ab3@18928>     MOVE.l $1C(A2),D1
0002FB3C <AmiBlitz3.ab3@18929>     BEQ.w JL_0_B99A
0002FB40 <AmiBlitz3.ab3@18931>     MOVE.w $4(A2),D1
0002FB44 <AmiBlitz3.ab3@18932>     CMP.w #-$2,D1
0002FB48 <AmiBlitz3.ab3@18933>     BNE.w JL_0_BA50
0002FB4C <AmiBlitz3.ab3@18934>       BSR.w makevsize
0002FB50 <AmiBlitz3.ab3@18935> BRA.w JL_0_BA60
0002FB54 <AmiBlitz3.ab3@18938>     CMP.w #-$12D,D1
0002FB58 <AmiBlitz3.ab3@18939>     BNE.w JL_0_BA60
0002FB5C <AmiBlitz3.ab3@18940>       BSR.w makessize
0002FB60 <AmiBlitz3.ab3@18941> BRA.w JL_0_BA60
0002FB64 <AmiBlitz3.ab3@18944>     MOVE.l $1C(A2),D1
0002FB6C <AmiBlitz3.ab3@18945>     MOVE.w #$FFFF,lasta6
0002FB70 <AmiBlitz3.ab3@18946>     BSR.w Amakelibsub
0002FB74 <AmiBlitz3.ab3@18947> BRA.w JL_0_B99A
0002FB76 <AmiBlitz3.ab3@18950> RTS
0002FB7A <AmiBlitz3.ab3@18954> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002FB7C <AmiBlitz3.ab3@18956> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002FB80 <AmiBlitz3.ab3@18957>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002FB82 <AmiBlitz3.ab3@18958> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002FB86 <AmiBlitz3.ab3@18959> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002FB8C <AmiBlitz3.ab3@18964>   TST.b debugmode
0002FB90 <AmiBlitz3.ab3@18965>    BEQ.b chkstak__skip
0002FB96 <AmiBlitz3.ab3@18966>   TST.w debugversion
0002FB9A <AmiBlitz3.ab3@18967>    BNE.b chkstak__skip
0002FB9E <AmiBlitz3.ab3@18968>   MOVE.w #$C308,D1
0002FBA2 <AmiBlitz3.ab3@18969> BRA.w Atokejsr
0002FBA4 <AmiBlitz3.ab3@18972> RTS
0002FBAC <AmiBlitz3.ab3@18976>   MOVE.w #$FFFF,lasta6
0002FBB0 <AmiBlitz3.ab3@18981>   MOVEM.l D0-d7/A0-a6,-(A7)
0002FBB8 <AmiBlitz3.ab3@18982>   MOVE.b #1,nostringopt
0002FBBE <AmiBlitz3.ab3@18983>   JSR searchinstr
0002FBC0 <AmiBlitz3.ab3@18984>   MOVE.l A3,D1
0002FBC2 <AmiBlitz3.ab3@18985>   SUB.l A2,D1
0002FBC6 <AmiBlitz3.ab3@18986>   BSR.w Amakelibsub
0002FBCA <AmiBlitz3.ab3@18987>   MOVEM.l (A7)+,d0-d7/a0-a6
0002FBCC <AmiBlitz3.ab3@18988> RTS
0002FBD2 <AmiBlitz3.ab3@18995>   MOVE.l libisat,-(A7)                                   ;library write
0002FBD8 <AmiBlitz3.ab3@18996>   MOVE.l A2,libisat
0002FBDA <AmiBlitz3.ab3@18998>   MOVEA.l A1,A2
0002FBDC <AmiBlitz3.ab3@18999>   MOVE.w (A2)+,D1
0002FBE2 <AmiBlitz3.ab3@19000>   MOVE.l a2,lastinstructionaddr
0002FBE6 <AmiBlitz3.ab3@19001>   ANDI.w #$FF,D1
0002FBE8 <AmiBlitz3.ab3@19002>   ADDA.w D1,A2
0002FBEA <AmiBlitz3.ab3@19003>   EXG.l D0,A2
0002FBEC <AmiBlitz3.ab3@19004>   ADDQ.l #1,D0
0002FBF0 <AmiBlitz3.ab3@19005>   BCLR #$0,D0
0002FBF2 <AmiBlitz3.ab3@19006>   EXG.l D0,A2
0002FBF6 <AmiBlitz3.ab3@19007> BRA.w JL_0_BB08
0002FBFC <AmiBlitz3.ab3@19011>   MOVE.l libisat,-(A7)
0002FC02 <AmiBlitz3.ab3@19012>   MOVE.l A2,libisat
0002FC04 <AmiBlitz3.ab3@19013>   MOVEA.l A3,A2
0002FC08 <AmiBlitz3.ab3@19014> BRA.w JL_0_BB08
0002FC0A <AmiBlitz3.ab3@19018>   MOVE.l a1,-(a7)
0002FC0C <AmiBlitz3.ab3@19021>   MOVE.l d0,a0
0002FC10 <AmiBlitz3.ab3@19022>   MOVE.l $a(a0),d0
0002FC12 <AmiBlitz3.ab3@19023>   MOVE.l d0,a1
0002FC1A <AmiBlitz3.ab3@19024>   CMP.l #8,4(a1)
0002FC1E <AmiBlitz3.ab3@19025>   BLE 'norec
0002FC20 <AmiBlitz3.ab3@19026>   MOVE.l a0,-(a7)
0002FC26 <AmiBlitz3.ab3@19027>   MOVE.l typebase,-(a7)
0002FC28 <AmiBlitz3.ab3@19028>   MOVEQ #0,d0
0002FC2C <AmiBlitz3.ab3@19029>   MOVE.w 4(a0),d0
0002FC32 <AmiBlitz3.ab3@19030>   ADD.l d0,typebase
0002FC36 <AmiBlitz3.ab3@19031>   MOVE.l $4(a1),d0
0002FC3A <AmiBlitz3.ab3@19032>   BSR scantype
0002FC40 <AmiBlitz3.ab3@19033>   MOVE.l (a7)+,typebase
0002FC42 <AmiBlitz3.ab3@19034>   MOVE.l (a7)+,a0
0002FC48 <AmiBlitz3.ab3@19037>   CMP.l #newtype_string,d0
0002FC4C <AmiBlitz3.ab3@19038>   BNE 'nostring
0002FC52 <AmiBlitz3.ab3@19039>   ADDQ #2,a2offset
0002FC58 <AmiBlitz3.ab3@19040>   MOVE.l #$3f3c0000,d1
0002FC5A <AmiBlitz3.ab3@19041>   MOVEQ #0,d0
0002FC5E <AmiBlitz3.ab3@19042>   MOVE.w 4(a0),d0
0002FC64 <AmiBlitz3.ab3@19043>   ADD.l typebase,d0
0002FC66 <AmiBlitz3.ab3@19044>   MOVE.w d0,d1
0002FC6A <AmiBlitz3.ab3@19045>   BSR writelong
0002FC70 <AmiBlitz3.ab3@19046>   TST.b debugmode
0002FC74 <AmiBlitz3.ab3@19047>   BEQ 'l1a
0002FC76 <AmiBlitz3.ab3@19048>   MOVE.l d1,-(a7)
0002FC7C <AmiBlitz3.ab3@19049>   MOVE.l #$c308,d1
0002FC82 <AmiBlitz3.ab3@19050>   JSR Atokejsr
0002FC84 <AmiBlitz3.ab3@19051>   MOVE.l (a7)+,d1
0002FC88 <AmiBlitz3.ab3@19054>   TST.w 8(a0)
0002FC8C <AmiBlitz3.ab3@19055>   BEQ 'nostring
0002FC90 <AmiBlitz3.ab3@19056>   MOVEM.l d2/d3,-(a7)
0002FC92 <AmiBlitz3.ab3@19057>   MOVE.l d1,d2
0002FC94 <AmiBlitz3.ab3@19058>   MOVEQ #0,d3
0002FC98 <AmiBlitz3.ab3@19059>   MOVE.w 8(a0),d3
0002FC9A <AmiBlitz3.ab3@19060>   SUBQ.l #1,d3
0002FC9E <AmiBlitz3.ab3@19061>   BEQ 'nostring2
0002FCA0 <AmiBlitz3.ab3@19064>   ADDQ.l #4,d2
0002FCA2 <AmiBlitz3.ab3@19065>   MOVE.l d2,d1
0002FCA6 <AmiBlitz3.ab3@19066>   BSR writelong
0002FCAC <AmiBlitz3.ab3@19067>   TST.b debugmode
0002FCB0 <AmiBlitz3.ab3@19068>   BEQ 'l1
0002FCB6 <AmiBlitz3.ab3@19069>   MOVE.l #$c308,d1
0002FCBC <AmiBlitz3.ab3@19070>   JSR Atokejsr
0002FCC2 <AmiBlitz3.ab3@19073>   ADDQ #2,a2offset
0002FCC4 <AmiBlitz3.ab3@19074>   SUBQ.l #1,d3
0002FCC8 <AmiBlitz3.ab3@19075>   BNE 'loop
0002FCCC <AmiBlitz3.ab3@19078>   MOVEM.l (a7)+,d2/d3
0002FCCE <AmiBlitz3.ab3@19081>   MOVE.l (a0),d0
0002FCD2 <AmiBlitz3.ab3@19082>   BNE 'more
0002FCD4 <AmiBlitz3.ab3@19083>   MOVE.l (a7)+,a1
0002FCD6 <AmiBlitz3.ab3@19084> RTS
0002FCDA <AmiBlitz3.ab3@19087> libisat:   Ds.l 1
0002FCE0 <AmiBlitz3.ab3@19093>   MOVE.l libisat,-(A7)                                   
0002FCE6 <AmiBlitz3.ab3@19094>   MOVE.l A2,libisat
0002FCEA <AmiBlitz3.ab3@19095>   LEA $6(A2,D1.L),A2
0002FCF2 <AmiBlitz3.ab3@19099>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002FCF6 <AmiBlitz3.ab3@19100>   BEQ 'dowritevar
0002FCFE <AmiBlitz3.ab3@19101>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002FD02 <AmiBlitz3.ab3@19102>   BEQ 'dowritevar
0002FD0A <AmiBlitz3.ab3@19103>   CMP.l #$3e175265,$1c(a2)
0002FD0E <AmiBlitz3.ab3@19104>   BEQ 'dowritevar
0002FD16 <AmiBlitz3.ab3@19105>   CMP.l #$3e165772,$1c(a2)
0002FD1A <AmiBlitz3.ab3@19106>   BNE 'nowritef
0002FD1E <AmiBlitz3.ab3@19109>   MOVEM.l a0-a2/d2,-(a7)
0002FD20 <AmiBlitz3.ab3@19110>   MOVEQ #0,d1
0002FD2A <AmiBlitz3.ab3@19111>   MOVE.l #0,typebase
0002FD2E <AmiBlitz3.ab3@19112>   MOVE.l $a(a3),a0
0002FD32 <AmiBlitz3.ab3@19113>   MOVE.l $4(a0),d0
0002FD38 <AmiBlitz3.ab3@19114>   CMP.l #8,d0
0002FD3C <AmiBlitz3.ab3@19115>   BLE 'notype
0002FD40 <AmiBlitz3.ab3@19116>   BSR scantype
0002FD46 <AmiBlitz3.ab3@19119>   MOVE.l #$3f3c0000,d1
0002FD4C <AmiBlitz3.ab3@19120>   MOVE.w a2offset,d1
0002FD50 <AmiBlitz3.ab3@19121>   BSR writelong
0002FD56 <AmiBlitz3.ab3@19122>   MOVE.l #$3f3c0000,d1
0002FD5A <AmiBlitz3.ab3@19123>   MOVE.l $a(a3),a0
0002FD5E <AmiBlitz3.ab3@19124>   MOVE.w 8(a0),d1
0002FD62 <AmiBlitz3.ab3@19125>   BSR writelong
0002FD68 <AmiBlitz3.ab3@19126>   MOVE.l #$3f3cab12,d1
0002FD6C <AmiBlitz3.ab3@19127>   BSR writelong
0002FD72 <AmiBlitz3.ab3@19128>   ADDQ.w #6,a2offset
0002FD76 <AmiBlitz3.ab3@19129>   MOVEM.l (a7)+,a0-a2/d2
0002FD7C <AmiBlitz3.ab3@19132>   TST.b fpu
0002FD80 <AmiBlitz3.ab3@19133>   BEQ 'nofpu2
0002FD88 <AmiBlitz3.ab3@19134>   CMP.l #$496e7400,$1a(a2)
0002FD8C <AmiBlitz3.ab3@19135>   BNE 'noint
0002FD8E <AmiBlitz3.ab3@19136>   MOVEQ #0,d1
0002FD94 <AmiBlitz3.ab3@19137>   SUBQ.l #8,destpointer                                    ;fpu int
0002FD9A <AmiBlitz3.ab3@19138>   CLR.w a2offset
0002FD9E <AmiBlitz3.ab3@19139>   CMP.b #2,d2
0002FDA2 <AmiBlitz3.ab3@19140>   BGT 'noword
0002FDA6 <AmiBlitz3.ab3@19141>   MOVE.w #$48c0,d1
0002FDAC <AmiBlitz3.ab3@19142>   OR.w regnumstore,d1
0002FDB0 <AmiBlitz3.ab3@19143>   BSR writeword
0002FDB4 <AmiBlitz3.ab3@19144> BRA 'exit2
0002FDB8 <AmiBlitz3.ab3@19147>    CMP.b #3,d2
0002FDBC <AmiBlitz3.ab3@19148>         BNE 'nolong
0002FDC0 <AmiBlitz3.ab3@19149> BRA 'exit2
0002FDC4 <AmiBlitz3.ab3@19152>    CMP.b #4,d2
0002FDC8 <AmiBlitz3.ab3@19153>         BNE 'noquick
0002FDCC <AmiBlitz3.ab3@19154>         MOVE.w #$e080,d1
0002FDD2 <AmiBlitz3.ab3@19155>         OR.w regnumstore,d1
0002FDD6 <AmiBlitz3.ab3@19156>         BSR writeword
0002FDDA <AmiBlitz3.ab3@19157>         MOVE.w #$e080,d1
0002FDE0 <AmiBlitz3.ab3@19158>         OR.w regnumstore,d1
0002FDE4 <AmiBlitz3.ab3@19159>         BSR writeword
0002FDE8 <AmiBlitz3.ab3@19160> BRA 'exit2
0002FDEA <AmiBlitz3.ab3@19163>         MOVEQ #0,d0
0002FDEC <AmiBlitz3.ab3@19164>         MOVEQ #0,d1
0002FDF2 <AmiBlitz3.ab3@19165>         MOVE.w regnumstore,d0
0002FDF4 <AmiBlitz3.ab3@19166>         ASL.l #7,d0
0002FDFA <AmiBlitz3.ab3@19167>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002FDFC <AmiBlitz3.ab3@19168>         OR.l d0,d1
0002FE02 <AmiBlitz3.ab3@19170>         MOVE.l #$3f000000,d1
0002FE04 <AmiBlitz3.ab3@19172>         MOVEQ #0,d0
0002FE06 <AmiBlitz3.ab3@19173>         MOVEQ #0,d1
0002FE0C <AmiBlitz3.ab3@19174>         MOVE.w regnumstore,d0
0002FE0E <AmiBlitz3.ab3@19175>         ASL.l #7,d0
0002FE10 <AmiBlitz3.ab3@19176>         MOVE.l d0,d1
0002FE16 <AmiBlitz3.ab3@19177>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002FE18 <AmiBlitz3.ab3@19178>         ASL.l #3,d0
0002FE1A <AmiBlitz3.ab3@19179>         OR.l d0,d1
0002FE1E <AmiBlitz3.ab3@19180>         BSR writelong
0002FE20 <AmiBlitz3.ab3@19181>         MOVEQ #0,d0
0002FE26 <AmiBlitz3.ab3@19182>         MOVE.w regnumstore,d0
0002FE28 <AmiBlitz3.ab3@19183>         ASL.l #7,d0
0002FE2E <AmiBlitz3.ab3@19184>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002FE30 <AmiBlitz3.ab3@19185>         OR.l d0,d1
0002FE32 <AmiBlitz3.ab3@19186>         ASL.l #1,d0
0002FE34 <AmiBlitz3.ab3@19187>         ASL.l #8,d0
0002FE36 <AmiBlitz3.ab3@19188>         OR.l d0,d1
0002FE3A <AmiBlitz3.ab3@19189> BRA 'exit
0002FE40 <AmiBlitz3.ab3@19192>   CMP.w #$3c01,24(a2)
0002FE44 <AmiBlitz3.ab3@19193>   BNE 'noval
0002FE46 <AmiBlitz3.ab3@19194>   MOVE.l a2,-(a7)
0002FE4A <AmiBlitz3.ab3@19195>   BSR.w JL_0_BB14
0002FE4C <AmiBlitz3.ab3@19196>   MOVE.l (a7)+,a2
0002FE50 <AmiBlitz3.ab3@19197> BRA 'exit2
0002FE58 <AmiBlitz3.ab3@19214>   CMP.l #$41627300,$1a(a2)
0002FE5C <AmiBlitz3.ab3@19215>   BNE 'noabs
0002FE5E <AmiBlitz3.ab3@19216>   MOVEQ #0,d1
0002FE64 <AmiBlitz3.ab3@19217>   MOVE.w regnumstore,d1
0002FE66 <AmiBlitz3.ab3@19218>   MOVE.w d1,d0
0002FE68 <AmiBlitz3.ab3@19219>   ASL.w #7,d1
0002FE6A <AmiBlitz3.ab3@19220>   ASL.w #8,d0
0002FE6C <AmiBlitz3.ab3@19221>   ASL.w #2,d0
0002FE6E <AmiBlitz3.ab3@19222>   OR.w d0,d1
0002FE74 <AmiBlitz3.ab3@19223>   SUBQ.l #8,destpointer                                    ;fpu abs
0002FE78 <AmiBlitz3.ab3@19224>   MOVEM.l d3/d1,-(a7)
0002FE7C <AmiBlitz3.ab3@19225>   MOVE.w #5,d3
0002FE7E <AmiBlitz3.ab3@19226>   EXG d2,d3
0002FE84 <AmiBlitz3.ab3@19227>   MOVE.w regnum,-(a7)
0002FE8E <AmiBlitz3.ab3@19228>   MOVE.w regnumstore,regnum
0002FE92 <AmiBlitz3.ab3@19229>   BSR writeconvertcode
0002FE98 <AmiBlitz3.ab3@19230>   MOVE.w (a7)+,regnum
0002FE9A <AmiBlitz3.ab3@19231>   EXG d2,d3
0002FE9E <AmiBlitz3.ab3@19232>   MOVEM.l (a7)+,d3/d1
0002FEA4 <AmiBlitz3.ab3@19233>   OR.l #$f2000018,d1
0002FEAA <AmiBlitz3.ab3@19234>   CLR.w a2offset
0002FEAE <AmiBlitz3.ab3@19235> BRA 'exit
0002FEB2 <AmiBlitz3.ab3@19238>   CMP.b #5,d2
0002FEB6 <AmiBlitz3.ab3@19239>   BNE 'nofpu2
0002FEBA <AmiBlitz3.ab3@19240>   MOVE.b 24(a2),d0
0002FEBE <AmiBlitz3.ab3@19241>   CMP.b #$60,d0                                            ;nolib $edxx
0002FEC2 <AmiBlitz3.ab3@19242>   BNE 'nofpu
0002FEC4 <AmiBlitz3.ab3@19243>   MOVEQ #0,d1
0002FECA <AmiBlitz3.ab3@19244>   MOVE.w regnumstore,d1
0002FECC <AmiBlitz3.ab3@19245>   MOVE.w d1,d0
0002FECE <AmiBlitz3.ab3@19246>   ASL.w #7,d1
0002FED0 <AmiBlitz3.ab3@19247>   ASL.w #8,d0
0002FED2 <AmiBlitz3.ab3@19248>   ASL.w #2,d0
0002FED4 <AmiBlitz3.ab3@19249>   OR.w d0,d1
0002FED8 <AmiBlitz3.ab3@19250>   MOVE.b 25(a2),d0
0002FEDC <AmiBlitz3.ab3@19251>   CMP.b #5,d0
0002FEE0 <AmiBlitz3.ab3@19252>   BNE 'nocos
0002FEE6 <AmiBlitz3.ab3@19253>   OR.l #$f200001d,d1                                       ;fpu cos
0002FEEA <AmiBlitz3.ab3@19254> BRA 'exit
0002FEEE <AmiBlitz3.ab3@19257>   CMP.b #$c,d0
0002FEF2 <AmiBlitz3.ab3@19258>   BNE 'nosqr
0002FEF8 <AmiBlitz3.ab3@19259>   OR.l #$f2000004,d1                                       ;fpu sqr
0002FEFC <AmiBlitz3.ab3@19260> BRA 'exit
0002FF00 <AmiBlitz3.ab3@19263>   CMP.b #$d,d0
0002FF04 <AmiBlitz3.ab3@19264>   BNE 'notan
0002FF0A <AmiBlitz3.ab3@19265>   OR.l #$f200000f,d1                                       ;fpu tan
0002FF0E <AmiBlitz3.ab3@19266> BRA 'exit
0002FF12 <AmiBlitz3.ab3@19269>   CMP.b #$a,d0
0002FF16 <AmiBlitz3.ab3@19270>   BNE 'nosin
0002FF1C <AmiBlitz3.ab3@19271>   OR.l #$f200000e,d1                                       ;fpu sin
0002FF20 <AmiBlitz3.ab3@19272> BRA 'exit
0002FF24 <AmiBlitz3.ab3@19275>   CMP.b #$3,d0
0002FF28 <AmiBlitz3.ab3@19276>   BNE 'noasin
0002FF2E <AmiBlitz3.ab3@19277>   OR.l #$f200000c,d1                                       ;fpu asin
0002FF32 <AmiBlitz3.ab3@19278> BRA 'exit
0002FF36 <AmiBlitz3.ab3@19281>   CMP.b #$2,d0
0002FF3A <AmiBlitz3.ab3@19282>   BNE 'noacos
0002FF40 <AmiBlitz3.ab3@19283>   OR.l #$f200001c,d1                                       ;fpu acos
0002FF44 <AmiBlitz3.ab3@19284> BRA 'exit
0002FF48 <AmiBlitz3.ab3@19287>   CMP.b #$4,d0
0002FF4C <AmiBlitz3.ab3@19288>   BNE 'noatan
0002FF52 <AmiBlitz3.ab3@19289>   OR.l #$f200000a,d1                                       ;fpu atan
0002FF56 <AmiBlitz3.ab3@19290> BRA 'exit
0002FF5A <AmiBlitz3.ab3@19293>   CMP.b #$e,d0
0002FF5E <AmiBlitz3.ab3@19294>   BNE 'nohtan
0002FF64 <AmiBlitz3.ab3@19295>   OR.l #$f2000009,d1                                       ;fpu htan
0002FF68 <AmiBlitz3.ab3@19296> BRA 'exit
0002FF6C <AmiBlitz3.ab3@19299>   CMP.b #$6,d0
0002FF70 <AmiBlitz3.ab3@19300>   BNE 'nohcos
0002FF76 <AmiBlitz3.ab3@19301>   OR.l #$f2000019,d1                                       ;fpu hcos
0002FF7A <AmiBlitz3.ab3@19302> BRA 'exit
0002FF7E <AmiBlitz3.ab3@19305>   CMP.b #$b,d0
0002FF82 <AmiBlitz3.ab3@19306>   BNE 'nohsin
0002FF88 <AmiBlitz3.ab3@19307>   OR.l #$f2000002,d1                                       ;fpu hsin
0002FF8C <AmiBlitz3.ab3@19308> BRA 'exit
0002FF90 <AmiBlitz3.ab3@19311>   CMP.b #$9,d0
0002FF94 <AmiBlitz3.ab3@19312>   BNE 'nolog
0002FF9A <AmiBlitz3.ab3@19313>   OR.l #$f2000014,d1                                       ;fpu log
0002FF9E <AmiBlitz3.ab3@19314> BRA 'exit
0002FFA2 <AmiBlitz3.ab3@19317>   CMP.b #$8,d0
0002FFA6 <AmiBlitz3.ab3@19318>   BNE 'nolog10
0002FFAC <AmiBlitz3.ab3@19319>   OR.l #$f2000015,d1                                       ;fpu log10
0002FFB0 <AmiBlitz3.ab3@19320> BRA 'exit
0002FFB4 <AmiBlitz3.ab3@19323>   CMP.b #$7,d0
0002FFB8 <AmiBlitz3.ab3@19324>   BNE 'noexp
0002FFBE <AmiBlitz3.ab3@19325>   OR.l #$f2000010,d1                                       ;fpu exp
0002FFC2 <AmiBlitz3.ab3@19326> BRA 'exit
0002FFC8 <AmiBlitz3.ab3@19329>   LEA fpuerr,a0
0002FFCA <AmiBlitz3.ab3@19330>   MOVE.l a0,-(a7)
0002FFD0 <AmiBlitz3.ab3@19331> JMP handle_compileerror
0002FFD4 <AmiBlitz3.ab3@19335>   CMP.b #$3c,d0
0002FFD8 <AmiBlitz3.ab3@19336>   BNE 'nofpu2
0002FFDA <AmiBlitz3.ab3@19337>   MOVEQ #0,d1
0002FFE0 <AmiBlitz3.ab3@19338>       MOVE.w regnumstore,d1
0002FFE2 <AmiBlitz3.ab3@19339>       MOVE.w d1,d0
0002FFE4 <AmiBlitz3.ab3@19340>       ASL.w #7,d1
0002FFE6 <AmiBlitz3.ab3@19341>       ASL.w #8,d0
0002FFE8 <AmiBlitz3.ab3@19342>       ASL.w #2,d0
0002FFEA <AmiBlitz3.ab3@19343>       OR.w d0,d1
0002FFF0 <AmiBlitz3.ab3@19344>       CMP.b #$03,25(a2)
0002FFF4 <AmiBlitz3.ab3@19345>       BNE 'nosgn
0002FFFA <AmiBlitz3.ab3@19348>       SUBQ.l #8,destpointer                                ;fpu sgn
00030000 <AmiBlitz3.ab3@19349>         OR.l #$f200003a,d1
00030004 <AmiBlitz3.ab3@19350>         BSR writelong
0003000A <AmiBlitz3.ab3@19351>         CLR.w a2offset
00030010 <AmiBlitz3.ab3@19352>          MOVE.l #$F28E0006,d1
00030014 <AmiBlitz3.ab3@19353>          BSR writelong
0003001A <AmiBlitz3.ab3@19354>   MOVE.l #$7000600a,d1
0003001E <AmiBlitz3.ab3@19355>   BSR writelong
00030024 <AmiBlitz3.ab3@19356>   MOVE.l #$70014840,d1
00030028 <AmiBlitz3.ab3@19357>   BSR writelong
0003002E <AmiBlitz3.ab3@19358>   MOVE.l #$F292,d1
00030032 <AmiBlitz3.ab3@19359>   BSR writeword
00030038 <AmiBlitz3.ab3@19360>   MOVE.l #$000470FF,d1
0003003C <AmiBlitz3.ab3@19361> BRA 'exit
00030044 <AmiBlitz3.ab3@19364>   CMP.l #"Frac",$1a(a2)
00030048 <AmiBlitz3.ab3@19365>   BNE 'nofrac
0003004E <AmiBlitz3.ab3@19366> JMP notwork
00030052 <AmiBlitz3.ab3@19407> BRA 'exit
00030056 <AmiBlitz3.ab3@19411>   BSR.w JL_0_BB14                                          ;write lib code
0003005C <AmiBlitz3.ab3@19412>   MOVE.l (A7)+,libisat
0003005E <AmiBlitz3.ab3@19413> RTS
00030062 <AmiBlitz3.ab3@19416>   BSR writelong
00030068 <AmiBlitz3.ab3@19419>   MOVE.l (A7)+,libisat
0003006A <AmiBlitz3.ab3@19420> RTS
0003006E <AmiBlitz3.ab3@19424>   BSR.w fetchregs
00030074 <AmiBlitz3.ab3@19425>   TST.b debugmode
00030078 <AmiBlitz3.ab3@19426>    BEQ.w JL_0_BB76
0003007A <AmiBlitz3.ab3@19427>   MOVE.l (A2),D1
0003007E <AmiBlitz3.ab3@19428>   OR.l $8(A2),D1
00030082 <AmiBlitz3.ab3@19429>   BCLR #$0,D1
00030084 <AmiBlitz3.ab3@19430>   TST.l D1
00030088 <AmiBlitz3.ab3@19431>    BEQ.w JL_0_BB76
0003008A <AmiBlitz3.ab3@19432>   MOVE.l (A2)+,D1
0003008E <AmiBlitz3.ab3@19433>   BTST #$0,D1
00030092 <AmiBlitz3.ab3@19434>    BEQ.w JL_0_BB60
00030098 <AmiBlitz3.ab3@19435>   TST.w blitzmode
0003009C <AmiBlitz3.ab3@19436>    BPL.w blitzerr
000300A2 <AmiBlitz3.ab3@19437>   TST.b debugmode
000300A6 <AmiBlitz3.ab3@19438>    BEQ.w JL_0_BB5C
000300A8 <AmiBlitz3.ab3@19439>   MOVE.l D1,-(A7)
000300AC <AmiBlitz3.ab3@19440>   MOVE.w #$C311,D1
000300B0 <AmiBlitz3.ab3@19441>    BSR.w makebtst
000300B2 <AmiBlitz3.ab3@19442>   MOVE.l (A7)+,D1
000300B6 <AmiBlitz3.ab3@19445>   BCLR #$0,D1
000300B8 <AmiBlitz3.ab3@19448>   TST.l D1
000300BC <AmiBlitz3.ab3@19449>    BSR.w JL_0_BBC6
000300BE <AmiBlitz3.ab3@19450>   MOVE.l (A2)+,D1
000300C2 <AmiBlitz3.ab3@19451>    BSR.w JL_0_BB98
000300C4 <AmiBlitz3.ab3@19452>   MOVE.l (A2)+,D1
000300C8 <AmiBlitz3.ab3@19453>    BSR.w JL_0_BBC6
000300CC <AmiBlitz3.ab3@19454> BRA.w JL_0_BB90
000300D2 <AmiBlitz3.ab3@19457>   BTST #$0,$3(A2)
000300D6 <AmiBlitz3.ab3@19458>    BEQ.w JL_0_BB88
000300DA <AmiBlitz3.ab3@19459>   MOVE.w blitzmode(PC),D1
000300DE <AmiBlitz3.ab3@19460>    BPL.w blitzerr
000300E2 <AmiBlitz3.ab3@19463>   MOVE.l $4(A2),D1
000300E6 <AmiBlitz3.ab3@19464>    BSR.w JL_0_BB98
000300EC <AmiBlitz3.ab3@19467>   MOVEA.l libisat,A2
000300EE <AmiBlitz3.ab3@19468> RTS
000300F2 <AmiBlitz3.ab3@19471>   BTST #$0,D1
000300F6 <AmiBlitz3.ab3@19472>    BEQ.w JL_0_BBC4
000300FC <AmiBlitz3.ab3@19473>   TST.w blitzmode
00030100 <AmiBlitz3.ab3@19474>    BMI.w amigaerr
00030106 <AmiBlitz3.ab3@19475>   TST.b debugmode
0003010A <AmiBlitz3.ab3@19476>    BEQ.w JL_0_BBC0
0003010C <AmiBlitz3.ab3@19477>   MOVE.l D1,-(A7)
00030110 <AmiBlitz3.ab3@19478>   MOVE.w #$C312,D1
00030114 <AmiBlitz3.ab3@19479>    BSR.w makebtst
00030116 <AmiBlitz3.ab3@19480>   MOVE.l (A7)+,D1
0003011A <AmiBlitz3.ab3@19483>   BCLR #$0,D1
0003011C <AmiBlitz3.ab3@19486>   TST.l D1
00030120 <AmiBlitz3.ab3@19489>    BEQ.w JL_0_BBD2
00030122 <AmiBlitz3.ab3@19490>   MOVE.l A1,-(A7)
00030126 <AmiBlitz3.ab3@19491>    BSR.w JL_0_BBD4
00030128 <AmiBlitz3.ab3@19492>   MOVEA.l (A7)+,A1
0003012A <AmiBlitz3.ab3@19495> RTS
00030130 <AmiBlitz3.ab3@19498>   MOVEA.l libisat,A0
00030136 <AmiBlitz3.ab3@19499>   TST.w cfetchmode
0003013A <AmiBlitz3.ab3@19500>    BEQ.w JL_0_BBF6
0003013C <AmiBlitz3.ab3@19501>   ADD.l A0,D1
0003013E <AmiBlitz3.ab3@19502>   MOVE.l D1,-(A7)
00030142 <AmiBlitz3.ab3@19503>   MOVE.w #$4EB9,D1
00030146 <AmiBlitz3.ab3@19504>    BSR.w writeword
00030148 <AmiBlitz3.ab3@19505>   MOVE.l (A7)+,D1
0003014C <AmiBlitz3.ab3@19506> BRA.w writelong
00030150 <AmiBlitz3.ab3@19509>   LEA $0(A0,D1.L),A1
00030156 <AmiBlitz3.ab3@19510>   CLR.w inline
0003015A <AmiBlitz3.ab3@19513>   CMPI.b #$A0,(A1)+
0003015E <AmiBlitz3.ab3@19514>    BNE.w JL_0_BC68
00030160 <AmiBlitz3.ab3@19515>   TST.b (A1)+
00030164 <AmiBlitz3.ab3@19516>    BEQ.w JL_0_BC18
0003016A <AmiBlitz3.ab3@19517>   CMPI.b #$1,-$1(A1)
0003016E <AmiBlitz3.ab3@19518>    BEQ.w JL_0_BC24
00030174 <AmiBlitz3.ab3@19521>   MOVE.w (A1)+,inline
00030176 <AmiBlitz3.ab3@19522>   ADDQ.l #4,D1
0003017A <AmiBlitz3.ab3@19523> BRA.w JL_0_BC00
00030180 <AmiBlitz3.ab3@19526>   TST.w blitzmode
00030184 <AmiBlitz3.ab3@19527>    BPL.w JL_0_BC4A
0003018A <AmiBlitz3.ab3@19528>   TST.b debugmode
0003018E <AmiBlitz3.ab3@19529>    BEQ.w JL_0_BC40
00030192 <AmiBlitz3.ab3@19530>   MOVE.w #$C311,D1
00030196 <AmiBlitz3.ab3@19531>    BSR.w makebtst
00030198 <AmiBlitz3.ab3@19534>   MOVE.l (A1)+,D1
0003019C <AmiBlitz3.ab3@19535>   LEA $0(A0,D1.L),A1
000301A0 <AmiBlitz3.ab3@19536> BRA.w JL_0_BC00
000301A6 <AmiBlitz3.ab3@19539>   TST.b debugmode
000301AA <AmiBlitz3.ab3@19540>    BEQ.w JL_0_BC60
000301AC <AmiBlitz3.ab3@19541>   MOVE.l D1,-(A7)
000301B0 <AmiBlitz3.ab3@19542>   MOVE.w #$C312,D1
000301B4 <AmiBlitz3.ab3@19543>    BSR.w makebtst
000301B6 <AmiBlitz3.ab3@19544>   MOVE.l (A7)+,D1
000301B8 <AmiBlitz3.ab3@19547>   ADDQ.w #4,A1
000301BA <AmiBlitz3.ab3@19548>   ADDQ.l #6,D1
000301BE <AmiBlitz3.ab3@19549> BRA.w JL_0_BC00
000301C4 <AmiBlitz3.ab3@19552>   TST.w inline
000301C8 <AmiBlitz3.ab3@19553>    BEQ.w JL_0_BC7E
000301CA <AmiBlitz3.ab3@19554>   SUBQ.w #1,A1
000301CC <AmiBlitz3.ab3@19555>   MOVEA.l A1,A0
000301D0 <AmiBlitz3.ab3@19556>   ADDA.w inline(PC),A1
000301D4 <AmiBlitz3.ab3@19557> BRA.w pokecode2
000301D8 <AmiBlitz3.ab3@19560>   MOVEM.l a0/D1,-(A7)
000301DE <AmiBlitz3.ab3@19561>   TST.w debugversion
000301E2 <AmiBlitz3.ab3@19562>   BEQ 'l11
000301EA <AmiBlitz3.ab3@19563>   BTST #$7,link_debuginfo
000301EE <AmiBlitz3.ab3@19564>   BEQ.w 'l11
000301F4 <AmiBlitz3.ab3@19565>   MOVE.l lastinstruction,d1
000301F8 <AmiBlitz3.ab3@19566>   BEQ 'l11
000301FE <AmiBlitz3.ab3@19567>   CLR.l lastinstruction
00030204 <AmiBlitz3.ab3@19568>   CMP.l #$e000,d1
00030208 <AmiBlitz3.ab3@19569>   BGE 'ln99
0003020E <AmiBlitz3.ab3@19570>   LEA notf,a0
00030214 <AmiBlitz3.ab3@19571>   CMP.l #$c601,d1
00030218 <AmiBlitz3.ab3@19572>   BNE 'ln1
0003021E <AmiBlitz3.ab3@19573>   LEA strcpy,a0
00030222 <AmiBlitz3.ab3@19574> BRA 'ln3
00030228 <AmiBlitz3.ab3@19577>   CMP.l #$c700,d1
0003022C <AmiBlitz3.ab3@19578>   BNE 'ln2
00030232 <AmiBlitz3.ab3@19579>   LEA strvar,a0
00030236 <AmiBlitz3.ab3@19580> BRA 'ln3
0003023C <AmiBlitz3.ab3@19583>   CMP.l #$ce00,d1
00030240 <AmiBlitz3.ab3@19584>   BNE 'ln4
00030246 <AmiBlitz3.ab3@19585>   LEA strcmp,a0
0003024A <AmiBlitz3.ab3@19586> BRA 'ln3
00030250 <AmiBlitz3.ab3@19589>   CMP.l #$ca00,d1
00030254 <AmiBlitz3.ab3@19590>   BNE 'ln5
0003025A <AmiBlitz3.ab3@19591>   LEA qmul,a0
0003025E <AmiBlitz3.ab3@19592> BRA 'ln3
00030264 <AmiBlitz3.ab3@19595>   CMP.l #$d000,d1
00030268 <AmiBlitz3.ab3@19596>      BNE 'ln6
0003026E <AmiBlitz3.ab3@19597>      LEA _MaxLen,a0
00030272 <AmiBlitz3.ab3@19598> BRA 'ln3
00030278 <AmiBlitz3.ab3@19601>   CMP.l #$cb00,d1
0003027C <AmiBlitz3.ab3@19602>   BNE 'ln3
00030282 <AmiBlitz3.ab3@19603>   LEA qdiv,a0
00030286 <AmiBlitz3.ab3@19604> BRA 'ln3
00030288 <AmiBlitz3.ab3@19607>   MOVE.l d1,a0
0003028C <AmiBlitz3.ab3@19608>   LEA $8(a0),a0
00030290 <AmiBlitz3.ab3@19611>   CMP.w #$ffff,(a0)+
00030294 <AmiBlitz3.ab3@19612>   BNE 'l1
00030298 <AmiBlitz3.ab3@19613>   LEA 6(a0),a0
0003029C <AmiBlitz3.ab3@19616>   MOVEM.l a1/a2/d7/d2,-(a7)
0003029E <AmiBlitz3.ab3@19617>   MOVEQ #0,d2
000302A4 <AmiBlitz3.ab3@19618>   LEA ptr_parameterstore,a1
000302A6 <AmiBlitz3.ab3@19621>   ADDQ.l #1,d2
000302A8 <AmiBlitz3.ab3@19622>   MOVE.b (a0)+,d0
000302AC <AmiBlitz3.ab3@19623> 
000302B0 <AmiBlitz3.ab3@19624>   BNE 'nodollar
000302B4 <AmiBlitz3.ab3@19625>   MOVE.b #"S",d0
000302B8 <AmiBlitz3.ab3@19627>   CMP.b #"?",d0
000302BC <AmiBlitz3.ab3@19628>   BEQ 'nolabelwrite
000302BE <AmiBlitz3.ab3@19629>   MOVE.b d0,(a1)+
000302C2 <AmiBlitz3.ab3@19630>   BNE 'l2
000302C8 <AmiBlitz3.ab3@19631>   MOVE.w #"__",-1(a1)
000302CA <AmiBlitz3.ab3@19632>   ADDQ.l #2,d2
000302CE <AmiBlitz3.ab3@19633>   CLR.b 1(a1)
000302D4 <AmiBlitz3.ab3@19634>   JSR findlabel2
000302D8 <AmiBlitz3.ab3@19635>   BEQ 'l3
000302DE <AmiBlitz3.ab3@19636>   JSR addlabelhash
000302E2 <AmiBlitz3.ab3@19639>   CLR.l 4(a2)
000302E6 <AmiBlitz3.ab3@19640>   MOVE.l $14(a7),a0
000302EA <AmiBlitz3.ab3@19641>   MOVE.l $10(a7),d1
000302EE <AmiBlitz3.ab3@19642>   SUB.l $12(a0),d1
000302F2 <AmiBlitz3.ab3@19643>   ADD.l $28(a0),d1
000302F6 <AmiBlitz3.ab3@19644>   MOVE.l d1,8(a2)
000302FA <AmiBlitz3.ab3@19645> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
00030300 <AmiBlitz3.ab3@19648>   TST.b typecheck
00030304 <AmiBlitz3.ab3@19649>   BEQ 'p1
0003030A <AmiBlitz3.ab3@19650>   MOVE.l lasttoken,d1
00030310 <AmiBlitz3.ab3@19651>   CMP.l #$da01,d1                                          ;poke
00030314 <AmiBlitz3.ab3@19652>   BEQ 'lp1
0003031A <AmiBlitz3.ab3@19653>   CMP.l #$da02,d1                                          ;peek
0003031E <AmiBlitz3.ab3@19654>   BNE 'p1
00030324 <AmiBlitz3.ab3@19657>   TST.b peekaddrsize
00030328 <AmiBlitz3.ab3@19658>   BEQ 'p1
00030330 <AmiBlitz3.ab3@19659>   CMP.b #3,peekaddrsize
00030334 <AmiBlitz3.ab3@19660>   BNE errormsg_onlylong
0003033A <AmiBlitz3.ab3@19661>   CLR.b peekaddrsize
00030340 <AmiBlitz3.ab3@19669>    TST.b fpu
00030344 <AmiBlitz3.ab3@19670>   BNE 'optf
0003034A <AmiBlitz3.ab3@19671>   TST.b fast
0003034E <AmiBlitz3.ab3@19672>   BEQ JL11a2
00030356 <AmiBlitz3.ab3@19679>   CMP.l #"Poke",20(a2)                                     ;poke
0003035A <AmiBlitz3.ab3@19680>   BNE peekopt
0003035E <AmiBlitz3.ab3@19681>   TST.b 24(a2)
00030362 <AmiBlitz3.ab3@19682>   BNE peekopt
00030366 <AmiBlitz3.ab3@19683>   CMP.b #3,d2
0003036A <AmiBlitz3.ab3@19684>   BNE 'lw1
00030370 <AmiBlitz3.ab3@19687>   MOVE.l #$21821990,d1
00030374 <AmiBlitz3.ab3@19688> BRA.s 'lpx
00030378 <AmiBlitz3.ab3@19691>   CMP.b #2,d2
0003037C <AmiBlitz3.ab3@19692>   BNE 'lb1
00030382 <AmiBlitz3.ab3@19693>   MOVE.l #$31821990,d1
00030386 <AmiBlitz3.ab3@19694> BRA.s 'lpx
0003038A <AmiBlitz3.ab3@19697>   CMP.b #1,d2
0003038E <AmiBlitz3.ab3@19698>   BNE 'lp3
00030394 <AmiBlitz3.ab3@19699>   MOVE.l #$11821990,d1
00030398 <AmiBlitz3.ab3@19700> BRA.s 'lpx
0003039C <AmiBlitz3.ab3@19703>   CMP.b #5,d2
000303A0 <AmiBlitz3.ab3@19704>     BNE JL11a2
000303A6 <AmiBlitz3.ab3@19705>     TST.b fpu
000303AA <AmiBlitz3.ab3@19706>     BEQ 'll1
000303B0 <AmiBlitz3.ab3@19707>      MOVE.l destpointer,a4
000303B8 <AmiBlitz3.ab3@19708>     CMP.l #$f22d4500,-6(a4)
000303BC <AmiBlitz3.ab3@19709>     BNE 'noglob
000303C2 <AmiBlitz3.ab3@19710>     TST.b doublepeek
000303C6 <AmiBlitz3.ab3@19711>     BNE 'noglob
000303CC <AmiBlitz3.ab3@19712>     MOVE.w -2(a4),-4(a4)
000303D2 <AmiBlitz3.ab3@19713>     MOVE.w #$21ad,-6(a4)
000303D8 <AmiBlitz3.ab3@19714>     MOVE.w #$1990,-2(a4)
000303E0 <AmiBlitz3.ab3@19715>     MOVE.w #9,peeksize
000303E2 <AmiBlitz3.ab3@19716>     ADDQ #8,a7
000303E4 <AmiBlitz3.ab3@19717> RTS
000303EC <AmiBlitz3.ab3@19720>     CMP.l #$f22c4500,-6(a4)
000303F0 <AmiBlitz3.ab3@19721>     BNE 'nolocal
000303F6 <AmiBlitz3.ab3@19722>     MOVE.w -2(a4),-4(a4)
000303FC <AmiBlitz3.ab3@19723>     TST.b doublepeek                                       ;dont move longfix on double floats
00030400 <AmiBlitz3.ab3@19724>     BNE 'nolocal
00030406 <AmiBlitz3.ab3@19725>     MOVE.w #$21ac,-6(a4)
0003040C <AmiBlitz3.ab3@19726>     MOVE.w #$1990,-2(a4)
00030414 <AmiBlitz3.ab3@19727>     MOVE.w #9,peeksize
00030416 <AmiBlitz3.ab3@19728>     ADDQ #8,a7
00030418 <AmiBlitz3.ab3@19729> RTS
0003041C <AmiBlitz3.ab3@19732>     MOVE.w #$f230,d1
00030420 <AmiBlitz3.ab3@19733>     BSR writeword
00030426 <AmiBlitz3.ab3@19734>   MOVE.l #$65001990,d1
0003042C <AmiBlitz3.ab3@19735>   TST.b doublepeek
00030430 <AmiBlitz3.ab3@19736>   BEQ 'lpx
00030436 <AmiBlitz3.ab3@19737>   OR.l   #$10000000,d1
00030438 <AmiBlitz3.ab3@19741>   ADDQ #8,a7
00030440 <AmiBlitz3.ab3@19742>   MOVE.w #9,peeksize
00030444 <AmiBlitz3.ab3@19743> BRA writelong
0003044C <AmiBlitz3.ab3@19746>   CMP.l #"Peek",20(a2)
00030450 <AmiBlitz3.ab3@19747>   BNE 'l10
00030454 <AmiBlitz3.ab3@19748>   TST.b 24(a2)
00030458 <AmiBlitz3.ab3@19749>   BNE 'l10
00030460 <AmiBlitz3.ab3@19750>   CMP.w #7,peeksize
00030464 <AmiBlitz3.ab3@19751>   BEQ 'l10
0003046C <AmiBlitz3.ab3@19752>    CMP.w #3,peeksize
00030470 <AmiBlitz3.ab3@19753>    BNE.s 'lw1
00030476 <AmiBlitz3.ab3@19756>   MOVE.l #$20301990,d1
0003047A <AmiBlitz3.ab3@19757> BRA exitjsr
00030482 <AmiBlitz3.ab3@19760>   CMP.w #2,peeksize
00030486 <AmiBlitz3.ab3@19761>    BNE.s 'lb1
0003048C <AmiBlitz3.ab3@19762>    MOVE.l #$30301990,d1
00030490 <AmiBlitz3.ab3@19763> BRA exitjsr
00030498 <AmiBlitz3.ab3@19766>   CMP.w #1,peeksize
0003049C <AmiBlitz3.ab3@19767>    BNE.s 'lf1
000304A2 <AmiBlitz3.ab3@19768>    MOVE.l #$10301990,d1
000304A6 <AmiBlitz3.ab3@19769> BRA exitjsr
000304AE <AmiBlitz3.ab3@19772>   CMP.w #5,peeksize
000304B2 <AmiBlitz3.ab3@19773>    BNE 'l10
000304B8 <AmiBlitz3.ab3@19774>    TST.b fpu
000304BC <AmiBlitz3.ab3@19775>    BEQ 'll1
000304C0 <AmiBlitz3.ab3@19776>    MOVE.w #$f230,d1
000304C4 <AmiBlitz3.ab3@19777>    BSR writeword
000304C6 <AmiBlitz3.ab3@19778>    MOVEQ #0,d1
000304CC <AmiBlitz3.ab3@19779>    MOVE.w tempregnum,d1
000304CE <AmiBlitz3.ab3@19780>    ASL.l #7,d1
000304D0 <AmiBlitz3.ab3@19781>    ASL.l #8,d1
000304D2 <AmiBlitz3.ab3@19782>    ASL.l #8,d1
000304D8 <AmiBlitz3.ab3@19783>    ADD.l #$44001990,d1
000304DE <AmiBlitz3.ab3@19784>     TST.b doublepeek
000304E2 <AmiBlitz3.ab3@19785>     BEQ 'lpx2
000304E8 <AmiBlitz3.ab3@19786>     OR.l   #$10000000,d1
000304EC <AmiBlitz3.ab3@19788> BRA exitjsr
000304F0 <AmiBlitz3.ab3@19792>   MOVE.w #$4EB9,D1
000304F4 <AmiBlitz3.ab3@19793>    BSR.w writeword                                         ;writesysjsr
000304F8 <AmiBlitz3.ab3@19794>   MOVEM.l (A7)+,a0/D1
000304FE <AmiBlitz3.ab3@19795>    JSR addoff
00030502 <AmiBlitz3.ab3@19796>   SUB.l $12(A0),D1
00030506 <AmiBlitz3.ab3@19797>   ADD.l $28(A0),D1
0003050A <AmiBlitz3.ab3@19798> BRA.w writelong
0003050C <AmiBlitz3.ab3@19803>   MOVE.w D1,-(A7)
00030510 <AmiBlitz3.ab3@19804>   MOVE.w tstmode(PC),D1
00030514 <AmiBlitz3.ab3@19805>    BSR.w writeword
00030518 <AmiBlitz3.ab3@19806>    BSR.w getbbase
0003051C <AmiBlitz3.ab3@19807>    BSR.w writeword
0003051E <AmiBlitz3.ab3@19808>   MOVE.w (A7)+,D1
00030522 <AmiBlitz3.ab3@19809>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
00030526 <AmiBlitz3.ab3@19810>    BSR.w Atokejsr
0003052A <AmiBlitz3.ab3@19811>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
0003052C <AmiBlitz3.ab3@19812> RTS
00030530 <AmiBlitz3.ab3@19820>   MOVE.w blitzoff(PC),D1
00030534 <AmiBlitz3.ab3@19821>   CMP.w #-$1,D1
00030538 <AmiBlitz3.ab3@19822>    BNE.w getbbase__done
0003053E <AmiBlitz3.ab3@19823>   ADDQ.w #1,globalvarpointer
00030546 <AmiBlitz3.ab3@19824>   BCLR #$0,globalvarpointer+1
0003054C <AmiBlitz3.ab3@19825>   MOVE.w globalvarpointer,D1
00030552 <AmiBlitz3.ab3@19826>   MOVE.w D1,blitzoff
00030558 <AmiBlitz3.ab3@19827>   ADDQ.w #2,globalvarpointer
0003055A <AmiBlitz3.ab3@19830> RTS
0003055E <AmiBlitz3.ab3@19834> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
00030560 <AmiBlitz3.ab3@19837> inline:     Ds.w 1
00030562 <AmiBlitz3.ab3@19838> blitzoff:   Dc.w $FFFF                                   ;-1 org source
00030564 <AmiBlitz3.ab3@19839> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
00030566 <AmiBlitz3.ab3@19843>   MOVE.w (A2)+,D1
0003056A <AmiBlitz3.ab3@19844>    BEQ.w fetchregs__done
0003056C <AmiBlitz3.ab3@19845>   MOVE.w (A2)+,D2
00030570 <AmiBlitz3.ab3@19846>    BSR.w toreg
00030574 <AmiBlitz3.ab3@19847> BRA.w fetchregs
00030576 <AmiBlitz3.ab3@19850> RTS
0003057A <AmiBlitz3.ab3@19855>   CMP.w #-$100,D2
0003057E <AmiBlitz3.ab3@19856>    BCC.w toreg__yeah
00030582 <AmiBlitz3.ab3@19858>   BCLR #$F,D2
00030586 <AmiBlitz3.ab3@19859>    BEQ.w toreg__nobm
0003058C <AmiBlitz3.ab3@19861>   TST.w blitzmode
00030590 <AmiBlitz3.ab3@19862>    BMI.w toreg__yeah
00030592 <AmiBlitz3.ab3@19863> RTS
00030596 <AmiBlitz3.ab3@19866>   BCLR #$E,D2
0003059A <AmiBlitz3.ab3@19867>    BEQ.w toreg__yeah
000305A0 <AmiBlitz3.ab3@19869>   TST.w blitzmode
000305A4 <AmiBlitz3.ab3@19870>    BPL.w toreg__yeah
000305A6 <AmiBlitz3.ab3@19871> RTS
000305AC <AmiBlitz3.ab3@19874>   JSR uselib
000305AE <AmiBlitz3.ab3@19875>   TST.b D2
000305B2 <AmiBlitz3.ab3@19876>    BEQ.w toreg__norm
000305B6 <AmiBlitz3.ab3@19877>   CMP.b #$4,D2
000305BA <AmiBlitz3.ab3@19878>    BNE.w toreg__suv
000305BE <AmiBlitz3.ab3@19879>   MOVE.w #$0004,-(A7)
000305C4 <AmiBlitz3.ab3@19880>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
000305C8 <AmiBlitz3.ab3@19881> BRA.w toreg__sendmd
000305CC <AmiBlitz3.ab3@19884>   CMP.b #$3,D2
000305D0 <AmiBlitz3.ab3@19885>    BNE.w toreg__notnmax
000305D2 <AmiBlitz3.ab3@19886>   CLR.w -(A7)
000305D8 <AmiBlitz3.ab3@19887>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
000305DA <AmiBlitz3.ab3@19893>   LSR.w #8,D2
000305DE <AmiBlitz3.ab3@19894>   MOVE.w #$303C,D1                                         ;move.w #x,dn
000305E2 <AmiBlitz3.ab3@19895>   BTST #$7,D2
000305E6 <AmiBlitz3.ab3@19896>    BEQ.w toreg__skipad
000305EA <AmiBlitz3.ab3@19897>   MOVE.w #$307C,D1                                         ;move.w #x,an
000305EE <AmiBlitz3.ab3@19898>   CMP.w #$16,D2
000305F2 <AmiBlitz3.ab3@19899>    BNE.w toreg__skipad
000305FA <AmiBlitz3.ab3@19900>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
000305FE <AmiBlitz3.ab3@19903>   ANDI.w #$7,D2
00030600 <AmiBlitz3.ab3@19904>   LSL.w #8,D2
00030602 <AmiBlitz3.ab3@19905>   LSL.w #1,D2
00030604 <AmiBlitz3.ab3@19906>   OR.w D2,D1
00030608 <AmiBlitz3.ab3@19907>    BSR.w writeword
0003060C <AmiBlitz3.ab3@19908>   MOVE.l $12(A1),D1
0003060E <AmiBlitz3.ab3@19909>   ADD.l (A7)+,D1
00030612 <AmiBlitz3.ab3@19910>   MOVE.w $0(A1,D1.L),D1
00030614 <AmiBlitz3.ab3@19911>   ADD.w (A7)+,D1
00030618 <AmiBlitz3.ab3@19912> BRA.w writeword
0003061A <AmiBlitz3.ab3@19915>   MOVE.w D2,-(A7)
0003061C <AmiBlitz3.ab3@19916>   LSR.w #8,D2
00030620 <AmiBlitz3.ab3@19917>   CMP.w #$16,D2
00030624 <AmiBlitz3.ab3@19918>    BNE.w toreg__isnta6
0003062C <AmiBlitz3.ab3@19919>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030630 <AmiBlitz3.ab3@19922>   MOVE.l $12(A1),D1                                        ;objectspace
00030634 <AmiBlitz3.ab3@19923>   MOVE.w -$6(A1,D1.L),-(A7)
00030638 <AmiBlitz3.ab3@19924>    BSR.w makeregop
0003063C <AmiBlitz3.ab3@19925>    BSR.w writeword
0003063E <AmiBlitz3.ab3@19926>   MOVE.w (A7)+,D1
00030640 <AmiBlitz3.ab3@19927>   MOVE.w (A7)+,D2
00030642 <AmiBlitz3.ab3@19928>   TST.b D2
00030646 <AmiBlitz3.ab3@19929>    BPL.w toreg__skippy1
0003064A <AmiBlitz3.ab3@19934>    BSR.w writeword                                         ;move.l x(a5),dn
0003064C <AmiBlitz3.ab3@19935>   MOVE.w D2,-(A7)                                          ;store reg used
00030650 <AmiBlitz3.ab3@19937>   ADDA.l $12(A1),A1
00030652 <AmiBlitz3.ab3@19938>   MOVE.b D2,D1
00030656 <AmiBlitz3.ab3@19939>   ANDI.w #$7,D1
0003065C <AmiBlitz3.ab3@19941>   TST.b debugmode
00030660 <AmiBlitz3.ab3@19942>    BEQ.w toreg__norerr
00030662 <AmiBlitz3.ab3@19944>   MOVE.w D1,-(A7)
00030664 <AmiBlitz3.ab3@19945>   LSL.w #8,D1
00030666 <AmiBlitz3.ab3@19946>   LSL.w #1,D1
0003066A <AmiBlitz3.ab3@19947>   ORI.w #$B07C,D1                                          ;cmp #x,dn
0003066E <AmiBlitz3.ab3@19948>    BSR.w writeword
00030672 <AmiBlitz3.ab3@19949>   MOVE.w -$4(A1),D1
00030676 <AmiBlitz3.ab3@19950>    BSR.w writeword
0003067A <AmiBlitz3.ab3@19951>   MOVE.l maxchk(PC),D1                                  ;bcs
0003067E <AmiBlitz3.ab3@19952>    BSR.w writelong
00030680 <AmiBlitz3.ab3@19953>   MOVE.l A2,-(A7)
00030684 <AmiBlitz3.ab3@19954>   MOVE.w #$C30A,D1
00030688 <AmiBlitz3.ab3@19955>    BSR.w Atokejsr
0003068A <AmiBlitz3.ab3@19956>   MOVEA.l (A7)+,A2
0003068C <AmiBlitz3.ab3@19957>   MOVE.w (A7)+,D1
00030690 <AmiBlitz3.ab3@19960>   MOVE.w -$2(A1),D2                                        ;shift amount
00030694 <AmiBlitz3.ab3@19963>   CMP.w #$9,D2
00030698 <AmiBlitz3.ab3@19964>    BCS.w toreg__simp
0003069C <AmiBlitz3.ab3@19965>   MOVEM.w D1-D2,-(A7)
0003069E <AmiBlitz3.ab3@19967>   MOVEQ.l #$00,D2                                          ;!!!!!
000306A0 <AmiBlitz3.ab3@19969>   LSL.w #8,D2
000306A2 <AmiBlitz3.ab3@19970>   LSL.w #1,D2
000306A4 <AmiBlitz3.ab3@19971>   OR.w D2,D1
000306A8 <AmiBlitz3.ab3@19972>   OR.w lsldn(PC),D1
000306AC <AmiBlitz3.ab3@19973>    BSR.w writeword
000306B0 <AmiBlitz3.ab3@19974>   MOVEM.w (A7)+,D1-D2
000306B2 <AmiBlitz3.ab3@19975>   SUBQ.w #8,D2
000306B6 <AmiBlitz3.ab3@19976> BRA.w toreg__shloop
000306B8 <AmiBlitz3.ab3@19979>   MOVE.w D1,-(A7)
000306BC <AmiBlitz3.ab3@19980>   OR.w #$48c0,d1
000306C0 <AmiBlitz3.ab3@19981>   BSR writeword
000306C2 <AmiBlitz3.ab3@19982>   MOVE.w (a7),d1
000306C4 <AmiBlitz3.ab3@19983>   TST.w D2
000306C8 <AmiBlitz3.ab3@19984>   BEQ.w toreg__simp2
000306CC <AmiBlitz3.ab3@19986>   ANDI.w #$7,D2                                            ;?????
000306CE <AmiBlitz3.ab3@19988>   LSL.w #8,D2
000306D0 <AmiBlitz3.ab3@19989>   LSL.w #1,D2
000306D2 <AmiBlitz3.ab3@19990>   OR.w D2,D1
000306D6 <AmiBlitz3.ab3@19991>   OR.w lsldn(PC),D1
000306DA <AmiBlitz3.ab3@19992>    BSR.w writeword
000306DC <AmiBlitz3.ab3@19998>   MOVE.w (A7)+,D1
000306E0 <AmiBlitz3.ab3@19999>   ANDI.w #$7,D1
000306E4 <AmiBlitz3.ab3@20000>   OR.w maxdo(PC),D1
000306E6 <AmiBlitz3.ab3@20001>   MOVE.w (A7)+,D2
000306E8 <AmiBlitz3.ab3@20002>   LSL.w #1,D2
000306EC <AmiBlitz3.ab3@20003>   ANDI.w #$E00,D2
000306EE <AmiBlitz3.ab3@20004>   OR.w D2,D1
000306F2 <AmiBlitz3.ab3@20005> BRA.w writeword
000306F6 <AmiBlitz3.ab3@20008>   CMP.b #$1,D2
000306FA <AmiBlitz3.ab3@20009>    BEQ.w toreg__skippy
000306FC <AmiBlitz3.ab3@20013>   ADDQ.w #4,D1
00030702 <AmiBlitz3.ab3@20015>   TST.b debugmode
00030706 <AmiBlitz3.ab3@20016>    BEQ.w toreg__skippy
0003070A <AmiBlitz3.ab3@20018>    BSR.w writeword
0003070C <AmiBlitz3.ab3@20019>   SWAP D1
00030710 <AmiBlitz3.ab3@20020>   MOVE.w toreg__theretest(PC),D1
00030712 <AmiBlitz3.ab3@20021>   SWAP D1
00030716 <AmiBlitz3.ab3@20022>    BSR.w writelong
0003071A <AmiBlitz3.ab3@20023>   MOVE.l toreg__theretest+4(PC),D1
0003071E <AmiBlitz3.ab3@20024>    BSR.w writelong
00030722 <AmiBlitz3.ab3@20025>   MOVE.l toreg__theretest+8(PC),D1
00030726 <AmiBlitz3.ab3@20026> BRA.w writelong
0003072A <AmiBlitz3.ab3@20029> BRA.w writeword
0003072E <AmiBlitz3.ab3@20034>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
00030732 <AmiBlitz3.ab3@20035>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
00030734 <AmiBlitz3.ab3@20036>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
00030736 <AmiBlitz3.ab3@20037>             Dc.b $4E,$40                                   ;TRAP   #00
00030738 <AmiBlitz3.ab3@20042>   LSR.w #8,D2
0003073C <AmiBlitz3.ab3@20043>   CMP.b #$16,D2
00030740 <AmiBlitz3.ab3@20044>    BNE.w toreg__nota6
00030744 <AmiBlitz3.ab3@20045>   MOVE.w $A(A1),D1
0003074A <AmiBlitz3.ab3@20046>   CMP.w lasta6,D1
0003074E <AmiBlitz3.ab3@20047>    BEQ.w toreg__sk
00030754 <AmiBlitz3.ab3@20048>   MOVE.w D1,lasta6
00030758 <AmiBlitz3.ab3@20051>    BSR.w makeregop
0003075C <AmiBlitz3.ab3@20052>   TST.w $1A(A1)
00030760 <AmiBlitz3.ab3@20053>    BPL.w toreg__long
00030764 <AmiBlitz3.ab3@20054>   CMP.w stackop(PC),D1
00030768 <AmiBlitz3.ab3@20055>    BNE.w toreg__notst
0003076E <AmiBlitz3.ab3@20056>   SUBQ.w #2,a2offset
00030772 <AmiBlitz3.ab3@20059>    ORI.w #$1000,D1
00030776 <AmiBlitz3.ab3@20062>    BSR.w writeword
0003077A <AmiBlitz3.ab3@20063>   MOVE.w $A(A1),D1
0003077E <AmiBlitz3.ab3@20064>    BSR.w writeword
00030780 <AmiBlitz3.ab3@20067> RTS
00030782 <AmiBlitz3.ab3@20071> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
00030786 <AmiBlitz3.ab3@20072> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
0003078C <AmiBlitz3.ab3@20073>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
0003078E <AmiBlitz3.ab3@20076> 
00030790 <AmiBlitz3.ab3@20079>             Dc.b $00,$00
00030794 <AmiBlitz3.ab3@20080> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030798 <AmiBlitz3.ab3@20087>   CMP.b #$FF,D2
0003079C <AmiBlitz3.ab3@20088>    BNE.w makeregop__notst
000307A0 <AmiBlitz3.ab3@20089>   MOVE.w stackop(PC),D1
000307A6 <AmiBlitz3.ab3@20090>   ADDQ.w #4,a2offset
000307A8 <AmiBlitz3.ab3@20091> RTS
000307AA <AmiBlitz3.ab3@20094>   MOVE.l A3,-(A7)
000307B0 <AmiBlitz3.ab3@20095>   LEA regtransd,A3
000307B4 <AmiBlitz3.ab3@20096>   BTST #$4,D2
000307B8 <AmiBlitz3.ab3@20097>    BEQ.w makeregop__skip
000307BE <AmiBlitz3.ab3@20098>   LEA regtransa,A3
000307C2 <AmiBlitz3.ab3@20101>   ANDI.w #$7,D2
000307C4 <AmiBlitz3.ab3@20102>   MOVE.w D2,D1
000307C6 <AmiBlitz3.ab3@20103>   LSL.w #8,D1
000307C8 <AmiBlitz3.ab3@20104>   LSL.w #1,D1
000307CA <AmiBlitz3.ab3@20105>   OR.w (A3),D1
000307CC <AmiBlitz3.ab3@20106>   MOVEA.l (A7)+,A3
000307CE <AmiBlitz3.ab3@20107> RTS
000307D2 <AmiBlitz3.ab3@20113>   CMP.w #$3C,D0
000307D6 <AmiBlitz3.ab3@20114>    BCS.w ifchar__no
000307DA <AmiBlitz3.ab3@20115>   CMP.w #$3E,D0
000307DE <AmiBlitz3.ab3@20116>    BHI.w ifchar__no
000307E2 <AmiBlitz3.ab3@20117>   SUBI.w #$3C,D0
000307E4 <AmiBlitz3.ab3@20118>   CMP.w D0,D0
000307E6 <AmiBlitz3.ab3@20121> RTS
000307F0 <AmiBlitz3.ab3@20126>   MOVE.w oldqflag,instringon
000307F6 <AmiBlitz3.ab3@20127>   MOVEA.l lastsourcepos,A5
000307FC <AmiBlitz3.ab3@20132>   MOVE.w regnum,-(A7)
00030802 <AmiBlitz3.ab3@20133>   CLR.w regnum
00030808 <AmiBlitz3.ab3@20134>   MOVE.l destpointer,-(A7)
0003080E <AmiBlitz3.ab3@20135>   MOVE.l destbufferend,-(A7)
00030814 <AmiBlitz3.ab3@20136>   MOVE.w dontwrite,-(A7)
0003081A <AmiBlitz3.ab3@20137>   MOVE.w lasta6,-(A7)
00030820 <AmiBlitz3.ab3@20138>   MOVE.w cfetchmode,-(A7)
00030824 <AmiBlitz3.ab3@20139>    BNE.w JL_0_BFB6
0003082E <AmiBlitz3.ab3@20140>   MOVE.l destbufferend,oldlibat
00030834 <AmiBlitz3.ab3@20141>   MOVEA.l constpcat,A0
0003083A <AmiBlitz3.ab3@20142>   MOVE.l A0,destpointer
0003083E <AmiBlitz3.ab3@20143> BRA.w JL_0_BFBC
00030844 <AmiBlitz3.ab3@20146>   MOVEA.l destpointer,A0
00030846 <AmiBlitz3.ab3@20149>   MOVE.l A0,-(A7)
00030850 <AmiBlitz3.ab3@20150>   MOVE.l constlibat,destbufferend
00030856 <AmiBlitz3.ab3@20151>   CLR.w dontwrite
0003085E <AmiBlitz3.ab3@20153>   MOVE.w #$FFFF,lasta6
00030866 <AmiBlitz3.ab3@20154>   MOVE.w #$FFFF,cfetchmode
0003086A <AmiBlitz3.ab3@20156>     BSR.w arreval
0003086C <AmiBlitz3.ab3@20157>    MOVE.l (a7),a0
000309A8 <AmiBlitz3.ab3@20159>  !newcalc
000309AC <AmiBlitz3.ab3@20160>    BEQ 'l10
000309AE <AmiBlitz3.ab3@20161>    MOVE.l d0,d3
000309B0 <AmiBlitz3.ab3@20162>    MOVEA.l (A7)+,A0
000309B4 <AmiBlitz3.ab3@20163> BRA bc1
000309B8 <AmiBlitz3.ab3@20166>    MOVE.w #$2600,D1
000309BE <AmiBlitz3.ab3@20167>   OR.w regnum,D1
000309C2 <AmiBlitz3.ab3@20168>    BSR.w writeword
000309C6 <AmiBlitz3.ab3@20169>   MOVE.w #$4E75,D1
000309CA <AmiBlitz3.ab3@20170>    BSR.w writeword
000309D0 <AmiBlitz3.ab3@20171>   MOVE.w dontwrite,D1
000309D4 <AmiBlitz3.ab3@20172>    BNE.w conmemerr
000309D6 <AmiBlitz3.ab3@20173>   MOVEA.l (A7)+,A0
000309D8 <AmiBlitz3.ab3@20174>   NOP
000309DE <AmiBlitz3.ab3@20175>    JSR Aclearcache                                         ;simple expression
000309E0 <AmiBlitz3.ab3@20178>    JSR (A0)                                                ;writeresult
000309E6 <AmiBlitz3.ab3@20181>   MOVE.w (A7)+,cfetchmode
000309EC <AmiBlitz3.ab3@20182>   MOVE.w (A7)+,lasta6
000309F2 <AmiBlitz3.ab3@20183>   MOVE.w (A7)+,dontwrite
000309F8 <AmiBlitz3.ab3@20184>   MOVE.l (A7)+,destbufferend
000309FE <AmiBlitz3.ab3@20185>   MOVE.l (A7)+,destpointer
00030A04 <AmiBlitz3.ab3@20186>   MOVE.w (A7)+,regnum
00030A0A <AmiBlitz3.ab3@20189> JMP reget
00030A0E <AmiBlitz3.ab3@20192> oldlibat:   Ds.l 1
00030A14 <AmiBlitz3.ab3@20196>   LEA incdir,A0
00030A18 <AmiBlitz3.ab3@20199>   CMP.w #$22,D0
00030A1C <AmiBlitz3.ab3@20200>    BEQ.w JL_0_C052
00030A1E <AmiBlitz3.ab3@20201>   MOVE.b D0,(A0)+
00030A20 <AmiBlitz3.ab3@20202>   TST.w D0
00030A24 <AmiBlitz3.ab3@20203>    BEQ.w JL_0_C05A
00030A28 <AmiBlitz3.ab3@20204>    BMI.w syntaxerr
00030A2E <AmiBlitz3.ab3@20207>   JSR get1bytemain                                         ;_long
00030A32 <AmiBlitz3.ab3@20208> BRA.w JL_0_C03E
00030A34 <AmiBlitz3.ab3@20211> RTS
00030A3A <AmiBlitz3.ab3@20215>   LEA ptr_parameterstore,A1                                ;getparameter
00030A40 <AmiBlitz3.ab3@20216>   LEA incdir,A0
00030A42 <AmiBlitz3.ab3@20217>   MOVEQ.l #-$01,D2
00030A44 <AmiBlitz3.ab3@20220>     ADDQ.w #1,D2
00030A46 <AmiBlitz3.ab3@20221>     MOVE.b (A0)+,(A1)+
00030A4A <AmiBlitz3.ab3@20222>   BNE.w JL_0_C06A
00030A4C <AmiBlitz3.ab3@20223>   SUBQ.w #1,A1
00030A56 <AmiBlitz3.ab3@20225>   MOVE.w oldqflag,instringon
00030A5C <AmiBlitz3.ab3@20226>   MOVEA.l lastsourcepos,A5
00030A62 <AmiBlitz3.ab3@20230>   JSR get1bytemain
00030A64 <AmiBlitz3.ab3@20231>   TST.w D0
00030A68 <AmiBlitz3.ab3@20232>    BMI.w syntaxerr
00030A6C <AmiBlitz3.ab3@20233>   CMP.b #$22,D0
00030A70 <AmiBlitz3.ab3@20234>    BEQ.w JL_0_C078
00030A72 <AmiBlitz3.ab3@20235>   MOVE.b D0,(A1)+
00030A76 <AmiBlitz3.ab3@20236>    BEQ.w JL_0_C096
00030A78 <AmiBlitz3.ab3@20237>   ADDQ.w #1,D2
00030A7C <AmiBlitz3.ab3@20238> BRA.w JL_0_C078
00030A7E <AmiBlitz3.ab3@20241>   TST.w D2
00030A82 <AmiBlitz3.ab3@20242>    BEQ.w syntaxerr
00030A84 <AmiBlitz3.ab3@20243> RTS
00030A8A <AmiBlitz3.ab3@20247>   MOVEA.l constantbase,A2
00030A8E <AmiBlitz3.ab3@20248>   MOVEA.l $E(A2),A5
00030A94 <AmiBlitz3.ab3@20249>   MOVE.l a5,includesourceline
00030A9A <AmiBlitz3.ab3@20250>   LEA inctab,a0
00030AA0 <AmiBlitz3.ab3@20251>   MOVE.w ininclude,d0
00030AA4 <AmiBlitz3.ab3@20252>   MOVE.l $0(a0,d0*4),d0
00030AA8 <AmiBlitz3.ab3@20253>   MOVEA.l $4(A2),A0
00030AAC <AmiBlitz3.ab3@20255>   LEA $0(A0,D0.l),A0
00030AAE <AmiBlitz3.ab3@20256>   MOVEA.l A5,A1
00030AB0 <AmiBlitz3.ab3@20259>     CMPA.l A0,A1
00030AB4 <AmiBlitz3.ab3@20260>      BCC.w JL_0_C0C6
00030AB6 <AmiBlitz3.ab3@20261>   TST.b (A1)+
00030ABA <AmiBlitz3.ab3@20262>   BNE.w JL_0_C0B6
00030ABE <AmiBlitz3.ab3@20263> BRA.w JL_0_C112
00030AC2 <AmiBlitz3.ab3@20266>   MOVEA.l $4(A2),A1
00030AC4 <AmiBlitz3.ab3@20269>   CMPA.l A0,A5
00030AC8 <AmiBlitz3.ab3@20270>   BCC.w JL_0_C0D6
00030ACA <AmiBlitz3.ab3@20271>   MOVE.b (A5)+,(A1)+
00030ACE <AmiBlitz3.ab3@20272> BRA.w JL_0_C0CA
00030AD0 <AmiBlitz3.ab3@20275>   MOVE.l A1,D0
00030AD4 <AmiBlitz3.ab3@20276>   SUB.l $4(A2),D0
00030ADA <AmiBlitz3.ab3@20277>   LEA inctab,a0
00030ADC <AmiBlitz3.ab3@20278>   MOVEQ #0,d1
00030AE2 <AmiBlitz3.ab3@20279>   MOVE.w ininclude,d1
00030AE6 <AmiBlitz3.ab3@20280>   MOVE.l d0,0(a0,d1*4)
00030AEC <AmiBlitz3.ab3@20282>   MOVEA.l _dosbase,A6
00030AF0 <AmiBlitz3.ab3@20283>   MOVE.l $8(A2),D1
00030AF2 <AmiBlitz3.ab3@20284>   MOVE.l A1,D2
00030AF8 <AmiBlitz3.ab3@20285>   MOVE.l D2,include_base
00030AFE <AmiBlitz3.ab3@20287>   MOVE.l #$10000000,d3                                     ;load whole file
00030B00 <AmiBlitz3.ab3@20288>   SUB.l D0,D3
00030B04 <AmiBlitz3.ab3@20289>    JSR _Read(A6)
00030B06 <AmiBlitz3.ab3@20290>   TST.l D0
00030B0A <AmiBlitz3.ab3@20291>    BMI.w error_reading_file
00030B0E <AmiBlitz3.ab3@20292>    BEQ.w JL_0_C120
00030B14 <AmiBlitz3.ab3@20293>    MOVE.l D0,include_length
00030B56 <AmiBlitz3.ab3@20294>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00030B80 <AmiBlitz3.ab3@20295>    !basic
00030B90 <AmiBlitz3.ab3@20296>    ilen.l  = Peek.l(?include_length)
00030BA0 <AmiBlitz3.ab3@20297>    ibase.l = Peek.l(?include_base)
00030BB0 <AmiBlitz3.ab3@20298>    ido.l   = Peek.l(?include_process)
00030BC0 <AmiBlitz3.ab3@20299>    *tn.preprocessor = Peek.l(?include_preprocessor)
00030BCA <AmiBlitz3.ab3@20300>    If ido
00030BDC <AmiBlitz3.ab3@20301>      ioffset.l = SkipXtraHeader{ibase,ilen}
00030C02 <AmiBlitz3.ab3@20302>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00030C14 <AmiBlitz3.ab3@20303>      If nilen>0
00030C24 <AmiBlitz3.ab3@20307>        Poke.l ?include_length,nilen
00030C42 <AmiBlitz3.ab3@20310>    !asm
00030C4C <AmiBlitz3.ab3@20311>    MOVE.l #0,include_process
00030C52 <AmiBlitz3.ab3@20312>    MOVE.l include_length,D0
00030C58 <AmiBlitz3.ab3@20313>    LEA inctab,a0
00030C5A <AmiBlitz3.ab3@20314>    MOVEQ #0,d1
00030C60 <AmiBlitz3.ab3@20315>    MOVE.w ininclude,d1
00030C64 <AmiBlitz3.ab3@20316>    ADD.l d0,0(a0,d1*4)
00030C68 <AmiBlitz3.ab3@20318>   MOVEA.l $4(A2),A5
00030C6C <AmiBlitz3.ab3@20320>    MOVE.l 0(a0,d1*4),d0
00030C70 <AmiBlitz3.ab3@20321>   CLR.b $0(A5,D0.l)
00030C72 <AmiBlitz3.ab3@20324>   MOVEA.l A5,A0
00030C74 <AmiBlitz3.ab3@20327>     TST.b (A0)+
00030C78 <AmiBlitz3.ab3@20328>   BNE.w JL_0_C114
00030C7C <AmiBlitz3.ab3@20329>   MOVE.l A0,$E(A2)
00030C7E <AmiBlitz3.ab3@20330> RTS
00030C82 <AmiBlitz3.ab3@20333> include_length:        Dc.l 0                              ; for tokenizer!
00030C86 <AmiBlitz3.ab3@20334> include_base:          Dc.l 0
00030C8A <AmiBlitz3.ab3@20335> include_process:       Dc.l 0
00030C8E <AmiBlitz3.ab3@20336> include_preprocessor:  Dc.l 0
00030C92 <AmiBlitz3.ab3@20340>   MOVE.l $8(A2),D1
00030C98 <AmiBlitz3.ab3@20342>   MOVEA.l _dosbase,A6
00030C9C <AmiBlitz3.ab3@20343>   JSR _Close(a6)
00030CA2 <AmiBlitz3.ab3@20344>   MOVEA.l _execbase,A6
00030CA6 <AmiBlitz3.ab3@20345>   MOVEA.l $4(A2),A1
00030CAC <AmiBlitz3.ab3@20346>   MOVE.l #$400*8,D0                                        ;exit include
00030CB0 <AmiBlitz3.ab3@20348>   JSR _FreeVec(a6)
00030CB6 <AmiBlitz3.ab3@20351>   MOVE.l (A2),constantbase
00030CB8 <AmiBlitz3.ab3@20352>   MOVEA.l A2,A1
00030CBA <AmiBlitz3.ab3@20353>   MOVEQ.l #$00,D0
00030CBE <AmiBlitz3.ab3@20354>   MOVE.b $12(A2),D0
00030CC4 <AmiBlitz3.ab3@20355>   MOVEA.l _execbase,A6
00030CCA <AmiBlitz3.ab3@20356>   MOVE.l mempool2,a0
00030CCE <AmiBlitz3.ab3@20357>   JSR _FreePooled(A6)
00030CD4 <AmiBlitz3.ab3@20358>   JSR zero_includename
00030CDA <AmiBlitz3.ab3@20359>   SUBQ.w #1,ininclude
00030CDE <AmiBlitz3.ab3@20360>   BNE.w AJL_0_C09E
00030CE4 <AmiBlitz3.ab3@20363>   LEA _include,a0
00030CE8 <AmiBlitz3.ab3@20364>   MOVEM.l a0-a6/d0-d7,-(a7)
00030CEE <AmiBlitz3.ab3@20365>   LEA ptr_parameterstore,a1
00030CF0 <AmiBlitz3.ab3@20368>     MOVE.b (a0)+,(a1)+
00030CF4 <AmiBlitz3.ab3@20369>   BNE 'l1b
00030CF6 <AmiBlitz3.ab3@20370>   MOVEQ #9,d2
00030CFC <AmiBlitz3.ab3@20371>   JSR findlabel2
00030D00 <AmiBlitz3.ab3@20372>   BNE 'd
00030D04 <AmiBlitz3.ab3@20373>   CLR.l 8(a2)
00030D08 <AmiBlitz3.ab3@20376>   MOVEM.l (a7)+,a0-a6/d0-d7
00030D0A <AmiBlitz3.ab3@20377> RTS
00030D10 <AmiBlitz3.ab3@20381>   MOVE.l unusedfunc,d0
00030D14 <AmiBlitz3.ab3@20382>   BEQ 'noclear
00030D18 <AmiBlitz3.ab3@20383>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030D1A <AmiBlitz3.ab3@20386>     MOVE.l d0,a1
00030D1E <AmiBlitz3.ab3@20387>     MOVE.l 4(a1),d0
00030D20 <AmiBlitz3.ab3@20388>     MOVE.l (a1),d2
00030D26 <AmiBlitz3.ab3@20389>     MOVE.l _execbase,a6
00030D2A <AmiBlitz3.ab3@20390>     JSR _FreeMem(a6)
00030D2C <AmiBlitz3.ab3@20391>     MOVE.l d2,d0
00030D30 <AmiBlitz3.ab3@20392>   BNE 'f1
00030D36 <AmiBlitz3.ab3@20393>   CLR.l unusedfunc
00030D3A <AmiBlitz3.ab3@20394>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00030D3C <AmiBlitz3.ab3@20397> RTS
00030D42 <AmiBlitz3.ab3@20401>   MOVEA.l xinclude_base,A2
00030D48 <AmiBlitz3.ab3@20402>   CLR.l xinclude_base
00030D4C <AmiBlitz3.ab3@20405>     CMPA.w #$0,A2
00030D50 <AmiBlitz3.ab3@20406>      BEQ.w JL_0_C186
00030D52 <AmiBlitz3.ab3@20407>     MOVEQ.l #$00,D0
00030D56 <AmiBlitz3.ab3@20408>     MOVE.b 4+8(A2),D0
00030D58 <AmiBlitz3.ab3@20409>     MOVEA.l A2,A1
00030D5A <AmiBlitz3.ab3@20410>     MOVEA.l (A2),A2
00030D60 <AmiBlitz3.ab3@20411>     MOVEA.l _execbase,A6
00030D66 <AmiBlitz3.ab3@20412>     MOVE.l mempool2,a0
00030D6A <AmiBlitz3.ab3@20413>     JSR _FreePooled(A6)
00030D6E <AmiBlitz3.ab3@20414> BRA.w JL_0_C168
00030D70 <AmiBlitz3.ab3@20417> RTS
00030D76 <AmiBlitz3.ab3@20421>   MOVEA.l constantbase,A2
00030D7C <AmiBlitz3.ab3@20422>   CLR.l constantbase
00030D80 <AmiBlitz3.ab3@20425>     CMPA.w #$0,A2
00030D84 <AmiBlitz3.ab3@20426>      BEQ.w JL_0_C1DC
00030D88 <AmiBlitz3.ab3@20427>     MOVE.l $8(A2),D1
00030D8C <AmiBlitz3.ab3@20428>      BEQ.w JL_0_C1AE
00030D92 <AmiBlitz3.ab3@20429>     MOVEA.l _dosbase,A6
00030D96 <AmiBlitz3.ab3@20430>      JSR _Close(A6)
00030D9A <AmiBlitz3.ab3@20433>     MOVE.l $4(A2),D0
00030D9E <AmiBlitz3.ab3@20434>      BEQ.w JL_0_C1C6
00030DA0 <AmiBlitz3.ab3@20435>     MOVEA.l D0,A1
00030DA6 <AmiBlitz3.ab3@20436>     MOVE.l #$400*8,D0
00030DAC <AmiBlitz3.ab3@20437>     MOVEA.l _execbase,A6
00030DB2 <AmiBlitz3.ab3@20438>     MOVE.l mempool,a0
00030DB6 <AmiBlitz3.ab3@20439>     JSR _FreeVec(a6)
00030DB8 <AmiBlitz3.ab3@20442>     MOVEQ.l #$00,D0
00030DBC <AmiBlitz3.ab3@20443>     MOVE.b $12(A2),D0
00030DBE <AmiBlitz3.ab3@20444>     MOVEA.l A2,A1
00030DC0 <AmiBlitz3.ab3@20445>     MOVEA.l (A2),A2
00030DC6 <AmiBlitz3.ab3@20446>     MOVEA.l _execbase,A6
00030DCC <AmiBlitz3.ab3@20447>     MOVE.l mempool2,a0
00030DD0 <AmiBlitz3.ab3@20448>     JSR _FreePooled(A6)
00030DD4 <AmiBlitz3.ab3@20449> BRA.w JL_0_C194
00030DD6 <AmiBlitz3.ab3@20452> RTS
00030DD8 <AmiBlitz3.ab3@20456>   SWAP D0
00030DDC <AmiBlitz3.ab3@20457>    BSR.w JL_0_C1E6
00030DDE <AmiBlitz3.ab3@20458>   SWAP D0
00030DE4 <AmiBlitz3.ab3@20461>   MOVEA.l data2,A4
00030DEA <AmiBlitz3.ab3@20462>   CMPA.l allat,A4
00030DEE <AmiBlitz3.ab3@20463>    BCC.w JL_0_C200
00030DF0 <AmiBlitz3.ab3@20464>   MOVE.w D0,(A4)+
00030DF6 <AmiBlitz3.ab3@20465>   MOVE.l A4,data2
00030DF8 <AmiBlitz3.ab3@20466> RTS
00030E00 <AmiBlitz3.ab3@20469>   MOVE.w #$FFFF,dontwrite
00030E06 <AmiBlitz3.ab3@20470>   ADDQ.l #2,data2
00030E08 <AmiBlitz3.ab3@20471> RTS
00030E0E <AmiBlitz3.ab3@20475>   MOVEA.l data2,A4
00030E14 <AmiBlitz3.ab3@20476>   CMPA.l allat,A4
00030E18 <AmiBlitz3.ab3@20477>    BCC.w JL_0_C22A
00030E1A <AmiBlitz3.ab3@20478>   MOVE.b D0,(A4)+
00030E20 <AmiBlitz3.ab3@20479>   MOVE.l A4,data2
00030E22 <AmiBlitz3.ab3@20480> RTS
00030E2A <AmiBlitz3.ab3@20483>   MOVE.w #$FFFF,dontwrite
00030E30 <AmiBlitz3.ab3@20484>   ADDQ.l #1,data2
00030E32 <AmiBlitz3.ab3@20485> RTS
00030E36 <AmiBlitz3.ab3@20489>   CMP.w #$22,D0
00030E3A <AmiBlitz3.ab3@20490>    BNE.w syntaxerr
00030E40 <AmiBlitz3.ab3@20494>   JSR get1bytemain
00030E44 <AmiBlitz3.ab3@20495>   CMP.b #$22,D0
00030E48 <AmiBlitz3.ab3@20496>    BEQ.w JL_0_C25A
00030E4A <AmiBlitz3.ab3@20497>   TST.w D0
00030E4E <AmiBlitz3.ab3@20498>    BEQ.w syntaxerr
00030E50 <AmiBlitz3.ab3@20499>   MOVE.b D0,(A0)+
00030E54 <AmiBlitz3.ab3@20500> BRA.w JL_0_C242
00030E56 <AmiBlitz3.ab3@20503>   CLR.b (A0)
00030E58 <AmiBlitz3.ab3@20504> RTS
00030E5A <AmiBlitz3.ab3@20507>   TST.l D3
00030E5C <AmiBlitz3.ab3@20508> RTS
00030E62 <AmiBlitz3.ab3@20511>   LEA ptr_parameterstore,A0
00030E68 <AmiBlitz3.ab3@20512>   LEA namebuff2,A1
00030E6A <AmiBlitz3.ab3@20515>     MOVE.b (A0)+,D0
00030E6E <AmiBlitz3.ab3@20516>     BEQ.w JL_0_C27C
00030E70 <AmiBlitz3.ab3@20517>   CMP.b (A1)+,D0
00030E74 <AmiBlitz3.ab3@20518>   BEQ.w JL_0_C26E
00030E76 <AmiBlitz3.ab3@20519> RTS
00030E78 <AmiBlitz3.ab3@20522>   TST.b (A1)
00030E7C <AmiBlitz3.ab3@20523>   BNE.w JL_0_C284
00030E7E <AmiBlitz3.ab3@20524> RTS
00030E82 <AmiBlitz3.ab3@20527>   CMP.w #$1,D0
00030E84 <AmiBlitz3.ab3@20528> RTS
00030E88 <AmiBlitz3.ab3@20532>   CMP.w #$2E,D0                                            ;dodeftype
00030E8C <AmiBlitz3.ab3@20533>    BNE.w syntaxerr
00030E90 <AmiBlitz3.ab3@20534>   BSR.w getparameter2
00030E96 <AmiBlitz3.ab3@20535>   LEA newtypebase,A2
00030E9A <AmiBlitz3.ab3@20536>   BSR.w findtype
00030E9E <AmiBlitz3.ab3@20537>    BNE.w notypeerr
00030EA4 <AmiBlitz3.ab3@20538>   TST.b declare
00030EA8 <AmiBlitz3.ab3@20539>    BNE 'l1
00030EAE <AmiBlitz3.ab3@20540>   TST.b declare2
00030EB2 <AmiBlitz3.ab3@20541>    BEQ 'l2
00030EBA <AmiBlitz3.ab3@20544>   MOVE.b #2,nowdeclare
00030EC0 <AmiBlitz3.ab3@20548>   JSR reget
00030EC4 <AmiBlitz3.ab3@20549>    BNE.w JL_0_C2B4
00030ECA <AmiBlitz3.ab3@20550>   MOVE.l A2,defaulttype
00030ECC <AmiBlitz3.ab3@20551> RTS
00030ED2 <AmiBlitz3.ab3@20554>   MOVE.l defaulttype,-(A7)
00030ED8 <AmiBlitz3.ab3@20555>   MOVE.l A2,defaulttype
00030EDC <AmiBlitz3.ab3@20558>   BSR.w getparameter
00030EE0 <AmiBlitz3.ab3@20559>    BSR.w JL_0_8E3C
00030EE4 <AmiBlitz3.ab3@20560>   CMP.w #$2C,D0
00030EE8 <AmiBlitz3.ab3@20561>    BNE.w JL_0_C2D8
00030EEE <AmiBlitz3.ab3@20562>    JSR get1bytemain                                        ; was BSR.w
00030EF2 <AmiBlitz3.ab3@20563> BRA.w JL_0_C2C0
00030EF8 <AmiBlitz3.ab3@20566>   MOVE.l (A7)+,defaulttype
00030EFA <AmiBlitz3.ab3@20567> RTS
00030EFE <AmiBlitz3.ab3@20571>   LEA $4(A5),A2                                            ;fehler function
00030F00 <AmiBlitz3.ab3@20574>   MOVE.l A2,D0
00030F04 <AmiBlitz3.ab3@20577>   BSR.w getparameter
00030F08 <AmiBlitz3.ab3@20578>   BSR.w JL_0_8E3C
00030F0C <AmiBlitz3.ab3@20579>   BSR.w calcvar
00030F10 <AmiBlitz3.ab3@20580>   CMP.b #$7,D2
00030F14 <AmiBlitz3.ab3@20581>    BNE.w mismatcherr
00030F18 <AmiBlitz3.ab3@20582>   MOVE.w varmode(PC),-(A7)
00030F1C <AmiBlitz3.ab3@20583>   CMP.w #$3D,D0
00030F20 <AmiBlitz3.ab3@20584>    BNE.w syntaxerr
00030F24 <AmiBlitz3.ab3@20585>   BTST #$F,D2
00030F28 <AmiBlitz3.ab3@20586>    BNE.w JL_0_C31C
00030F2C <AmiBlitz3.ab3@20587>   MOVE.w JL_0_C2E0(PC),D1
00030F30 <AmiBlitz3.ab3@20588>   BSR.w pokewda5s
00030F32 <AmiBlitz3.ab3@20589>   MOVE.w D3,D1
00030F36 <AmiBlitz3.ab3@20590>   BSR.w writeword
00030F3A <AmiBlitz3.ab3@20593>   MOVE.w L_0_C2E4(PC),D1
00030F3E <AmiBlitz3.ab3@20594>   BSR.w writeword
00030F44 <AmiBlitz3.ab3@20595>   ADDQ.w #1,regnum
00030F46 <AmiBlitz3.ab3@20596>   MOVEQ.l #$03,D2
00030F4A <AmiBlitz3.ab3@20597>   BSR.w eval
00030F50 <AmiBlitz3.ab3@20598>   MOVE.l #$D000,D1
00030F56 <AmiBlitz3.ab3@20599>   MOVE.l d1,lastinstruction
00030F58 <AmiBlitz3.ab3@20600>   TST.w (A7)+
00030F5C <AmiBlitz3.ab3@20601>    BEQ.w Atokejsr
00030F5E <AmiBlitz3.ab3@20602>   ADDQ.w #1,D1
00030F62 <AmiBlitz3.ab3@20603> BRA.w Atokejsr
00030F64 <AmiBlitz3.ab3@20607>   MOVE.w D0,D1
00030F68 <AmiBlitz3.ab3@20608>    BPL.w syntaxerr
00030F6C <AmiBlitz3.ab3@20609>   BCLR #$F,D1
00030F72 <AmiBlitz3.ab3@20610>    JSR searchinstr
00030F76 <AmiBlitz3.ab3@20611>   MOVE.l $12(A2),D0
00030F7A <AmiBlitz3.ab3@20612>   TST.w -$2(A2,D0.L)
00030F7E <AmiBlitz3.ab3@20613>    BEQ.w freeerr
00030F80 <AmiBlitz3.ab3@20614>   MOVEQ.l #$02,D2
00030F82 <AmiBlitz3.ab3@20615>   MOVE.l A2,-(A7)
00030F86 <AmiBlitz3.ab3@20616>    BSR.w eval
00030F88 <AmiBlitz3.ab3@20617>   MOVEA.l (A7)+,A2
00030F8E <AmiBlitz3.ab3@20618>   MOVE.l A2,mymaxlib
00030F92 <AmiBlitz3.ab3@20619>   ADDA.l $12(A2),A2
00030F98 <AmiBlitz3.ab3@20620>   TST.b debugmode
00030F9C <AmiBlitz3.ab3@20621>    BEQ.w JL_0_C3A8
00030FA2 <AmiBlitz3.ab3@20622>   MOVE.w regnum,D1
00030FA4 <AmiBlitz3.ab3@20623>   LSL.w #8,D1
00030FA6 <AmiBlitz3.ab3@20624>   LSL.w #1,D1
00030FAA <AmiBlitz3.ab3@20625>   ORI.w #$B07C,D1
00030FAE <AmiBlitz3.ab3@20626>    BSR.w writeword
00030FB2 <AmiBlitz3.ab3@20627>   MOVE.w -$4(A2),D1
00030FB6 <AmiBlitz3.ab3@20628>    BSR.w writeword
00030FBC <AmiBlitz3.ab3@20629>   MOVE.l maxchk,D1
00030FC0 <AmiBlitz3.ab3@20630>    BSR.w writelong
00030FC2 <AmiBlitz3.ab3@20631>   MOVE.l A2,-(A7)
00030FC6 <AmiBlitz3.ab3@20632>   MOVE.w #$C30A,D1
00030FCA <AmiBlitz3.ab3@20633>    BSR.w Atokejsr
00030FCC <AmiBlitz3.ab3@20634>   MOVEA.l (A7)+,A2
00030FD0 <AmiBlitz3.ab3@20637>   MOVE.w -$2(A2),D2
00030FD6 <AmiBlitz3.ab3@20640>   MOVE.w regnum,D1
00030FDC <AmiBlitz3.ab3@20641>   OR.w lslimm,D1
00030FE0 <AmiBlitz3.ab3@20642>   CMP.w #$8,D2
00030FE4 <AmiBlitz3.ab3@20643>    BCS.w JL_0_C3CE
00030FE8 <AmiBlitz3.ab3@20644>    BSR.w writeword
00030FEA <AmiBlitz3.ab3@20645>   SUBQ.w #8,D2
00030FEE <AmiBlitz3.ab3@20646>    BNE.w JL_0_C3AC
00030FF2 <AmiBlitz3.ab3@20647> BRA.w JL_0_C3DA
00030FF4 <AmiBlitz3.ab3@20650>   MOVE.w D2,D0
00030FF6 <AmiBlitz3.ab3@20651>   LSL.w #8,D0
00030FF8 <AmiBlitz3.ab3@20652>   LSL.w #1,D0
00030FFA <AmiBlitz3.ab3@20653>   OR.w D0,D1
00030FFE <AmiBlitz3.ab3@20654>   BSR.w writeword
00031000 <AmiBlitz3.ab3@20657> RTS
00031004 <AmiBlitz3.ab3@20662>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
00031006 <AmiBlitz3.ab3@20663>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003100A <AmiBlitz3.ab3@20667> mymaxlib:  Ds.l 1
0003100E <AmiBlitz3.ab3@20671>   BSR.w JL_0_C340
00031012 <AmiBlitz3.ab3@20672>   LEA free(PC),A0
00031016 <AmiBlitz3.ab3@20673>   LEA freef(PC),A1
0003101C <AmiBlitz3.ab3@20674>   MOVE.w -$6(A2),$2(A0)
00031020 <AmiBlitz3.ab3@20675>   BSR.w pokecode
00031024 <AmiBlitz3.ab3@20676>   MOVE.l -$A(A2),D1
00031028 <AmiBlitz3.ab3@20679>   BEQ.w nosuperr
0003102C <AmiBlitz3.ab3@20680>   MOVEA.l mymaxlib(PC),A2
00031030 <AmiBlitz3.ab3@20681> BRA.w Amakelibsub
00031034 <AmiBlitz3.ab3@20686>   BSR.w JL_0_C340
0003103A <AmiBlitz3.ab3@20687>   LEA use,A0
00031040 <AmiBlitz3.ab3@20688>   LEA usef,A1
00031046 <AmiBlitz3.ab3@20689>   MOVE.w -$6(A2),$2(A0)
0003104C <AmiBlitz3.ab3@20690>   MOVE.w -$6(A2),-$2(A1)
00031050 <AmiBlitz3.ab3@20691>   ADDQ.w #4,-$2(A1)
00031054 <AmiBlitz3.ab3@20692>   BSR.w pokecode
00031058 <AmiBlitz3.ab3@20693>   MOVE.l -$E(A2),D1
0003105C <AmiBlitz3.ab3@20694> BRA.w maxjsr
00031062 <AmiBlitz3.ab3@20698>   JSR get1bytemain
00031068 <AmiBlitz3.ab3@20702>   MOVE.l firstiff,D0
0003106C <AmiBlitz3.ab3@20703>    BEQ.w noiferr
0003106E <AmiBlitz3.ab3@20704>   MOVEA.l D0,A0
00031074 <AmiBlitz3.ab3@20705>   CMPI.b #$1,$D(A0)
00031078 <AmiBlitz3.ab3@20706>    BEQ.w illelseerr
0003107C <AmiBlitz3.ab3@20707>   MOVE.w #$6000,D1
00031082 <AmiBlitz3.ab3@20709>     TST.b fast
00031086 <AmiBlitz3.ab3@20710>     BEQ 'l1
0003108C <AmiBlitz3.ab3@20711>     OR.l #$ff,d1
00031090 <AmiBlitz3.ab3@20712>     BSR writeword
00031092 <AmiBlitz3.ab3@20716>   SWAP D1
00031096 <AmiBlitz3.ab3@20717>   BSR.w writelong
00031098 <AmiBlitz3.ab3@20718>   MOVEQ.l #$00,D1
0003109C <AmiBlitz3.ab3@20719>   BSR.w AJL_0_D7B8
000310A4 <AmiBlitz3.ab3@20720>   MOVE.l destpointer,$8(A0)
000310A8 <AmiBlitz3.ab3@20721> BRA.w do_then
000310AE <AmiBlitz3.ab3@20725>   LEA ptr_parameterstore,A0
000310B0 <AmiBlitz3.ab3@20726>   MOVE.l A0,-(A7)
000310B4 <AmiBlitz3.ab3@20727>   BSR.w JL_0_C23A
000310B8 <AmiBlitz3.ab3@20728> BRA.w handle_compileerror
000310BC <AmiBlitz3.ab3@20732>   BSR.w JL_0_BF6A
000310BE <AmiBlitz3.ab3@20733>   MOVEQ.l #$05,D1
000310C8 <AmiBlitz3.ab3@20735>   MOVE.w oldqflag,instringon
000310CE <AmiBlitz3.ab3@20736>   MOVEA.l lastsourcepos,A5
000310D4 <AmiBlitz3.ab3@20737>   LEA AJL_0_C25E,A0
000310D8 <AmiBlitz3.ab3@20738> BRA.w JL_0_C4B4
000310DE <AmiBlitz3.ab3@20742>   LEA ptr_parameterstore,A0
000310E2 <AmiBlitz3.ab3@20743>   BSR.w JL_0_C23A
000310E8 <AmiBlitz3.ab3@20744>   JSR get1bytemain
000310EC <AmiBlitz3.ab3@20745>   BSR.w JL_0_CCA8
000310F2 <AmiBlitz3.ab3@20746>   LEA namebuff2,A0
000310F6 <AmiBlitz3.ab3@20747>   BSR.w JL_0_C23A
000310FC <AmiBlitz3.ab3@20748>   LEA AJL_0_C262,A0
000310FE <AmiBlitz3.ab3@20751>   LSL.w #2,D1
00031104 <AmiBlitz3.ab3@20752>   LEA CIF_branches,A1
00031108 <AmiBlitz3.ab3@20753>   MOVE.l $0(A1,D1.W),-(A7)
0003110A <AmiBlitz3.ab3@20754>   MOVEQ.l #-$01,D1
0003110C <AmiBlitz3.ab3@20757>   JSR (A0)
0003110E <AmiBlitz3.ab3@20759>   MOVEA.l (A7)+,A1
00031110 <AmiBlitz3.ab3@20761> JMP (A1)
00031114 <AmiBlitz3.ab3@20765>   BEQ.w JL_0_C4F6
00031118 <AmiBlitz3.ab3@20766> BRA.w JL_0_C4F4
0003111C <AmiBlitz3.ab3@20770>   BNE.w JL_0_C4F6
00031120 <AmiBlitz3.ab3@20771> BRA.w JL_0_C4F4
00031124 <AmiBlitz3.ab3@20775>   BLT.w JL_0_C4F6
00031128 <AmiBlitz3.ab3@20776> BRA.w JL_0_C4F4
0003112C <AmiBlitz3.ab3@20780>   BLE.w JL_0_C4F6
00031130 <AmiBlitz3.ab3@20781> BRA.w JL_0_C4F4
00031134 <AmiBlitz3.ab3@20785>   BGT.w JL_0_C4F6
00031138 <AmiBlitz3.ab3@20786> BRA.w JL_0_C4F4
0003113C <AmiBlitz3.ab3@20790>   BGE.w JL_0_C4F6
0003113E <AmiBlitz3.ab3@20793>   MOVEQ.l #$00,D1
00031144 <AmiBlitz3.ab3@20796>   MOVEA.l concomsp,A0
0003114A <AmiBlitz3.ab3@20797>   MOVE.w skipcode,(A0)+
00031150 <AmiBlitz3.ab3@20798>   MOVE.l A0,concomsp
00031156 <AmiBlitz3.ab3@20799>   MOVE.w D1,skipcode
0003115C <AmiBlitz3.ab3@20800>   JSR get1bytemain
00031160 <AmiBlitz3.ab3@20801>    BNE.w syntaxerr
00031166 <AmiBlitz3.ab3@20802> JMP bakup
0003116E <AmiBlitz3.ab3@20806> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
00031172 <AmiBlitz3.ab3@20807> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
00031176 <AmiBlitz3.ab3@20814>   MOVE.w #$FC17,D1
0003117C <AmiBlitz3.ab3@20815>   JSR uselib
00031182 <AmiBlitz3.ab3@20817>   JSR reget
00031186 <AmiBlitz3.ab3@20818>    BEQ.w do_Restore__resbeg
0003118A <AmiBlitz3.ab3@20819>   BSR.w JL_0_AE22                                          ;get label name!
0003118E <AmiBlitz3.ab3@20820>   MOVE.w rescode(PC),D1
00031192 <AmiBlitz3.ab3@20821>   BSR.w writeword
00031198 <AmiBlitz3.ab3@20822>   JSR addoff                                               ;add offset
0003119C <AmiBlitz3.ab3@20823>   MOVE.l $C(A2),D1
000311A0 <AmiBlitz3.ab3@20824>   BSR.w writelong
000311A4 <AmiBlitz3.ab3@20825>   MOVE.w rescode+6(PC),D1
000311A8 <AmiBlitz3.ab3@20826>   BSR.w writeword
000311AC <AmiBlitz3.ab3@20827>   MOVE.l $4(A2),D1                                         ;is it outstanding?
000311B0 <AmiBlitz3.ab3@20828>   BEQ.w do_Restore__no
000311B2 <AmiBlitz3.ab3@20830>   MOVEA.l D1,A1
000311B6 <AmiBlitz3.ab3@20831>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
000311B8 <AmiBlitz3.ab3@20832> RTS
000311BA <AmiBlitz3.ab3@20837> RTS
000311BE <AmiBlitz3.ab3@20840>   MOVE.w #$CD00,D1
000311C4 <AmiBlitz3.ab3@20841>   JSR Atokejsr
000311C8 <AmiBlitz3.ab3@20842>   MOVE.l rescode2(PC),D1
000311CE <AmiBlitz3.ab3@20843> JMP writelong
000311D2 <AmiBlitz3.ab3@20847>   MOVE.w #$FC17,D1
000311D8 <AmiBlitz3.ab3@20848>   JSR uselib
000311DE <AmiBlitz3.ab3@20851>   MOVE.l dataget,D1
000311E2 <AmiBlitz3.ab3@20852>   BSR.w writelong
000311E6 <AmiBlitz3.ab3@20853>   BSR.w getparameter
000311EA <AmiBlitz3.ab3@20854>   BSR.w JL_0_8E3C
000311EE <AmiBlitz3.ab3@20855>   BSR.w calcvar
000311F2 <AmiBlitz3.ab3@20856>   BTST #$E,D2
000311F6 <AmiBlitz3.ab3@20857>    BEQ.w JL_0_C5A6
000311FA <AmiBlitz3.ab3@20858>   MOVE.b #$6,D2
000311FC <AmiBlitz3.ab3@20861>   TST.b D2
00031200 <AmiBlitz3.ab3@20862>    BEQ.w noleterr
00031206 <AmiBlitz3.ab3@20863>   TST.b debugmode
0003120A <AmiBlitz3.ab3@20864>    BEQ.w JL_0_C5D0
0003120E <AmiBlitz3.ab3@20865>   MOVE.w #$7000,D1
00031210 <AmiBlitz3.ab3@20866>   MOVE.b D2,D1
00031214 <AmiBlitz3.ab3@20867>   ANDI.b #$F,D1
00031218 <AmiBlitz3.ab3@20868>   BSR.w writeword
0003121C <AmiBlitz3.ab3@20869>   MOVE.w #$C310,D1
0003121E <AmiBlitz3.ab3@20870>   MOVE.w D2,-(A7)
00031222 <AmiBlitz3.ab3@20871>   BSR.w Atokejsr
00031224 <AmiBlitz3.ab3@20872>   MOVE.w (A7)+,D2
00031228 <AmiBlitz3.ab3@20875>   CMP.b #$7,D2
0003122C <AmiBlitz3.ab3@20876>    BEQ.w JL_0_C684
00031230 <AmiBlitz3.ab3@20877>   CMP.b #$1,D2
00031234 <AmiBlitz3.ab3@20878>    BNE.w JL_0_C62A
0003123A <AmiBlitz3.ab3@20879>   LEA dataletb2,A0
00031240 <AmiBlitz3.ab3@20880>   LEA dataletb2f,A1
00031244 <AmiBlitz3.ab3@20881>   BTST #$F,D2
00031248 <AmiBlitz3.ab3@20882>    BEQ.w JL_0_C5FC
0003124C <AmiBlitz3.ab3@20883>   BSR.w pokecode
00031250 <AmiBlitz3.ab3@20884> BRA.w JL_0_C668
00031256 <AmiBlitz3.ab3@20887>   LEA dataletb,A0
0003125C <AmiBlitz3.ab3@20888>   LEA dataletbf,A1
00031262 <AmiBlitz3.ab3@20889>   TST.w varmode
00031266 <AmiBlitz3.ab3@20890>    BEQ.w JL_0_C61E
0003126C <AmiBlitz3.ab3@20891>   LEA dataletbl,A0
00031272 <AmiBlitz3.ab3@20892>   LEA dataletblf,A1
00031276 <AmiBlitz3.ab3@20895>   MOVE.w D3,$4(A0)
0003127A <AmiBlitz3.ab3@20896>   BSR.w pokecode
0003127E <AmiBlitz3.ab3@20897> BRA.w JL_0_C668
00031284 <AmiBlitz3.ab3@20900>   LEA dataletw,A0
00031288 <AmiBlitz3.ab3@20901>   CMP.b #$3,D2
0003128C <AmiBlitz3.ab3@20902>    BCS.w JL_0_C63E
00031292 <AmiBlitz3.ab3@20903>   LEA dataletl,A0
00031296 <AmiBlitz3.ab3@20906>   BTST #$F,D2
0003129A <AmiBlitz3.ab3@20907>    BEQ.w JL_0_C652
0003129E <AmiBlitz3.ab3@20908>   MOVE.w $4(A0),D1
000312A2 <AmiBlitz3.ab3@20909>    BSR.w writeword
000312A6 <AmiBlitz3.ab3@20910> BRA.w JL_0_C668
000312AC <AmiBlitz3.ab3@20913>   TST.w varmode
000312B0 <AmiBlitz3.ab3@20914>    BEQ.w JL_0_C65E
000312B2 <AmiBlitz3.ab3@20915>   ADDQ.w #6,A0
000312B6 <AmiBlitz3.ab3@20918>   MOVE.w D3,$2(A0)
000312B8 <AmiBlitz3.ab3@20919>   MOVE.l (A0),D1
000312BC <AmiBlitz3.ab3@20920>   BSR.w writelong
000312C2 <AmiBlitz3.ab3@20923>   MOVE.l dataput,D1
000312C6 <AmiBlitz3.ab3@20924>    BSR.w writelong
000312CA <AmiBlitz3.ab3@20925>   CMP.w #$2C,D0
000312CE <AmiBlitz3.ab3@20926>    BEQ.w JL_0_C67C
000312D0 <AmiBlitz3.ab3@20927> RTS
000312D6 <AmiBlitz3.ab3@20930>   JSR get1bytemain
000312DA <AmiBlitz3.ab3@20931> BRA.w JL_0_C584
000312E0 <AmiBlitz3.ab3@20935>   MOVE.w stlenget,D1
000312E4 <AmiBlitz3.ab3@20936>    BSR.w writeword
000312E8 <AmiBlitz3.ab3@20937>   BTST #$F,D2
000312EC <AmiBlitz3.ab3@20938>    BNE.w JL_0_C6C0
000312F2 <AmiBlitz3.ab3@20939>   TST.w varmode
000312F6 <AmiBlitz3.ab3@20940>    BEQ.w JL_0_C6B0
000312FC <AmiBlitz3.ab3@20941>   MOVE.w D3,leaampl+2
00031302 <AmiBlitz3.ab3@20942>   MOVE.l leaampl,D1
00031306 <AmiBlitz3.ab3@20943> BRA.w JL_0_C6BC
0003130C <AmiBlitz3.ab3@20946>   MOVE.w D3,leaamp+2
00031312 <AmiBlitz3.ab3@20947>   MOVE.l leaamp,D1
00031316 <AmiBlitz3.ab3@20950>   BSR.w writelong
0003131A <AmiBlitz3.ab3@20953>   MOVE.w #$C701,D1
00031320 <AmiBlitz3.ab3@20954>   MOVE.w varmode,D2
00031324 <AmiBlitz3.ab3@20955>    BEQ.w JL_0_C6D0
00031326 <AmiBlitz3.ab3@20956>   SUBQ.w #1,D1
0003132A <AmiBlitz3.ab3@20959>   BSR.w Atokejsr
00031332 <AmiBlitz3.ab3@20960>   MOVE.w #$FFFF,lasta6
00031338 <AmiBlitz3.ab3@20961>   LEA stalign,A0
0003133E <AmiBlitz3.ab3@20962>   LEA stalignf,A1
00031342 <AmiBlitz3.ab3@20963>   BSR.w pokecode
00031346 <AmiBlitz3.ab3@20964> BRA.w JL_0_C668
0003134A <AmiBlitz3.ab3@20968>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
0003134E <AmiBlitz3.ab3@20969>    BNE.w JL_0_C720
00031354 <AmiBlitz3.ab3@20970>   JSR get1bytemain
00031358 <AmiBlitz3.ab3@20971>   CMP.w #$77,D0
0003135C <AmiBlitz3.ab3@20972>    BEQ.w JL_0_C71C
00031360 <AmiBlitz3.ab3@20973>   CMP.w #$62,D0
00031364 <AmiBlitz3.ab3@20974>    BEQ.w JL_0_C718
00031368 <AmiBlitz3.ab3@20975>   CMP.w #"s",d0
0003136C <AmiBlitz3.ab3@20976>   BEQ single3
00031370 <AmiBlitz3.ab3@20977>   CMP.w #"d",d0
00031374 <AmiBlitz3.ab3@20978>   BEQ double3
00031378 <AmiBlitz3.ab3@20979>   CMP.w #$6C,D0
0003137C <AmiBlitz3.ab3@20980>    BNE.w syntaxerr
0003137E <AmiBlitz3.ab3@20981>   MOVEQ.l #$02,D1
00031380 <AmiBlitz3.ab3@20982> RTS
00031388 <AmiBlitz3.ab3@20986>   MOVE.b #1,iee
0003138A <AmiBlitz3.ab3@20987>   MOVEQ.l #$3,d1
0003138C <AmiBlitz3.ab3@20988> RTS
00031394 <AmiBlitz3.ab3@20992>   MOVE.b #1,iee
00031396 <AmiBlitz3.ab3@20993>   MOVEQ.l #$4,d1
00031398 <AmiBlitz3.ab3@20994> RTS
0003139A <AmiBlitz3.ab3@20998>   MOVEQ.l #$00,D1
0003139C <AmiBlitz3.ab3@20999> RTS
0003139E <AmiBlitz3.ab3@21003>   MOVEQ.l #$01,D1
000313A0 <AmiBlitz3.ab3@21004> RTS
000313A2 <AmiBlitz3.ab3@21008>   MOVEQ.l #$01,D1
000313A8 <AmiBlitz3.ab3@21009> JMP bakup
000313AC <AmiBlitz3.ab3@21013>   BSR.w JL_0_C6F0
000313AE <AmiBlitz3.ab3@21015>   MOVE.w D1,-(A7)
000313B2 <AmiBlitz3.ab3@21016>    BSR.w AJL_0_BF6E
000313B6 <AmiBlitz3.ab3@21017>   CMP.w #$2C,D0
000313BA <AmiBlitz3.ab3@21018>    BNE.w syntaxerr
000313BC <AmiBlitz3.ab3@21019>   MOVE.l D3,-(A7)
000313C0 <AmiBlitz3.ab3@21020>    BSR.w AJL_0_BF6E
000313C2 <AmiBlitz3.ab3@21021>   MOVE.l D3,D1
000313C4 <AmiBlitz3.ab3@21022>   MOVE.l (A7)+,D3
000313C6 <AmiBlitz3.ab3@21023>   MOVE.w (A7)+,D2
000313CA <AmiBlitz3.ab3@21024>    BEQ.w JL_0_C774
000313CE <AmiBlitz3.ab3@21028>   CMP.w #$1,D2
000313D2 <AmiBlitz3.ab3@21029>    BEQ.w JL_0_C768
000313D4 <AmiBlitz3.ab3@21032>   SWAP D1
000313D8 <AmiBlitz3.ab3@21033>    BSR.w writeword
000313DA <AmiBlitz3.ab3@21034>   SWAP D1
000313DE <AmiBlitz3.ab3@21035>    BSR.w writeword
000313E0 <AmiBlitz3.ab3@21036>   SUBQ.l #1,D3
000313E4 <AmiBlitz3.ab3@21037>    BNE.w JL_0_C754
000313E6 <AmiBlitz3.ab3@21038> RTS
000313EA <AmiBlitz3.ab3@21041>    BSR.w writeword
000313EC <AmiBlitz3.ab3@21042>   SUBQ.l #1,D3
000313F0 <AmiBlitz3.ab3@21043>    BNE.w JL_0_C768
000313F2 <AmiBlitz3.ab3@21044> RTS
000313F6 <AmiBlitz3.ab3@21047>    BSR.w writebyte
000313F8 <AmiBlitz3.ab3@21048>   SUBQ.l #1,D3
000313FC <AmiBlitz3.ab3@21049>    BNE.w JL_0_C774
000313FE <AmiBlitz3.ab3@21050> RTS
00031402 <AmiBlitz3.ab3@21054>   BSR.w JL_0_C6F0                                          ;definestorage
00031404 <AmiBlitz3.ab3@21055>   MOVE.w D1,-(A7)
00031408 <AmiBlitz3.ab3@21056>   BSR.w AJL_0_BF6E
0003140A <AmiBlitz3.ab3@21057>   MOVE.w (A7)+,D1
0003140C <AmiBlitz3.ab3@21058>   LSL.l D1,D3
0003140E <AmiBlitz3.ab3@21059>   MOVE.l d3,d0
00031412 <AmiBlitz3.ab3@21060>   BEQ 'll5
00031414 <AmiBlitz3.ab3@21061>   MOVEQ #0,d1
0003141A <AmiBlitz3.ab3@21064>     JSR writebyte
0003141C <AmiBlitz3.ab3@21065>     SUBQ.l #1,d3
00031420 <AmiBlitz3.ab3@21066>   BNE.s 'll10
00031422 <AmiBlitz3.ab3@21069> RTS
00031424 <AmiBlitz3.ab3@21073>   MOVE.w D0,-(A7)
0003142A <AmiBlitz3.ab3@21074>   LEA dummyasm,A0
00031430 <AmiBlitz3.ab3@21075>   MOVEA.l destpointer,A1
0003143A <AmiBlitz3.ab3@21076>   MOVE.w asmlen2,asmlen
00031440 <AmiBlitz3.ab3@21077>   JSR insasm
00031442 <AmiBlitz3.ab3@21078>   MOVE.w (A7)+,D0
00031444 <AmiBlitz3.ab3@21079> RTS
00031448 <AmiBlitz3.ab3@21083>   BSR.w JL_0_C6F0
00031452 <AmiBlitz3.ab3@21085>   MOVE.l #ptr_parameterstore,asmbuff
00031454 <AmiBlitz3.ab3@21086>   TST.w D1
00031458 <AmiBlitz3.ab3@21087>    BEQ.w JL_0_C7EE
0003145C <AmiBlitz3.ab3@21088>   CMP.w #$1,D1
00031460 <AmiBlitz3.ab3@21089>    BEQ.w JL_0_C844
00031464 <AmiBlitz3.ab3@21090>   CMP.w #$2,d1
00031468 <AmiBlitz3.ab3@21091>    BEQ long
0003146C <AmiBlitz3.ab3@21092>   CMP.w #$3,d1
00031470 <AmiBlitz3.ab3@21093>    BEQ single
00031472 <AmiBlitz3.ab3@21094>    MOVEQ.l #$0d,D3
00031478 <AmiBlitz3.ab3@21100>    JSR asmconst
0003147C <AmiBlitz3.ab3@21101>    BSR.w JL_0_C796
00031480 <AmiBlitz3.ab3@21102>    BSR.w writelong
00031484 <AmiBlitz3.ab3@21103>    BSR   writelong
00031488 <AmiBlitz3.ab3@21104>   CMP.w #$2C,D0
0003148C <AmiBlitz3.ab3@21105>    BEQ.w JL_0_C7D8b
0003148E <AmiBlitz3.ab3@21106> RTS
00031490 <AmiBlitz3.ab3@21110>   MOVEQ.l #$0B,D3
00031498 <AmiBlitz3.ab3@21114>   MOVE.b #1,_dcb
0003149E <AmiBlitz3.ab3@21117>   JSR asmconst
000314A4 <AmiBlitz3.ab3@21118>   CLR.b _dcb
000314A8 <AmiBlitz3.ab3@21119>   BSR.w JL_0_C796
000314AC <AmiBlitz3.ab3@21120>   BSR writebyte
000314B0 <AmiBlitz3.ab3@21121>   BSR writebyte
000314B4 <AmiBlitz3.ab3@21122>   BSR writebyte                                            ;long
000314B8 <AmiBlitz3.ab3@21123>   BSR writebyte
000314BC <AmiBlitz3.ab3@21124>   CMP.w #$2C,D0
000314C0 <AmiBlitz3.ab3@21125>    BEQ.w JL_0_C7D8
000314C2 <AmiBlitz3.ab3@21126> RTS
000314C4 <AmiBlitz3.ab3@21130>   MOVEQ.l #$0c,D3
000314CC <AmiBlitz3.ab3@21134>   MOVE.b #1,_dcb
000314D2 <AmiBlitz3.ab3@21137>   JSR asmconst
000314D8 <AmiBlitz3.ab3@21138>   CLR.b _dcb
000314DC <AmiBlitz3.ab3@21139>   BSR.w JL_0_C796
000314E0 <AmiBlitz3.ab3@21140>   BSR.w writebyte
000314E4 <AmiBlitz3.ab3@21141>   BSR.w writebyte
000314E8 <AmiBlitz3.ab3@21142>   BSR.w writebyte
000314EC <AmiBlitz3.ab3@21143>   BSR.w writebyte
000314F0 <AmiBlitz3.ab3@21144>   CMP.w #$2C,D0
000314F4 <AmiBlitz3.ab3@21145>    BEQ.w JL_0_C7D8a
000314F6 <AmiBlitz3.ab3@21146> RTS
000314F8 <AmiBlitz3.ab3@21151>   MOVEQ.l #$11,D3
000314FE <AmiBlitz3.ab3@21154>   JSR get1bytemain
00031502 <AmiBlitz3.ab3@21155>   CMP.w #$22,D0
00031506 <AmiBlitz3.ab3@21156>    BNE.w JL_0_C81E
00031508 <AmiBlitz3.ab3@21159>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
0003150C <AmiBlitz3.ab3@21160>    BEQ.w syntaxerr
00031510 <AmiBlitz3.ab3@21161>   CMP.w #$22,D0
00031514 <AmiBlitz3.ab3@21162>    BEQ.w JL_0_C816
00031518 <AmiBlitz3.ab3@21163>   CMP.b #"\",d0
0003151C <AmiBlitz3.ab3@21164>    BNE 'n1
00031520 <AmiBlitz3.ab3@21165>   CMP.b #"\",(a5)
00031524 <AmiBlitz3.ab3@21166>    BEQ 'do1
00031526 <AmiBlitz3.ab3@21169>   MOVE.w D0,D1
0003152A <AmiBlitz3.ab3@21170>   BSR.w writebyte
0003152E <AmiBlitz3.ab3@21171> BRA.w JL_0_C7FC
00031536 <AmiBlitz3.ab3@21174>   CMP.l #"__DA",1(a5)
0003153A <AmiBlitz3.ab3@21175>    BNE 'nodate1
00031542 <AmiBlitz3.ab3@21176>   CMP.l #"TE__",5(a5)
00031546 <AmiBlitz3.ab3@21177>    BEQ 'c1
0003154E <AmiBlitz3.ab3@21178>   CMP.l #"TE_G",5(a5)
00031552 <AmiBlitz3.ab3@21179>    BNE 'nodate1
0003155A <AmiBlitz3.ab3@21180>   CMP.l #"ER__",9(a5)
0003155E <AmiBlitz3.ab3@21181>    BNE 'nodate1
00031564 <AmiBlitz3.ab3@21182>   JSR compiledatedc_ger
00031568 <AmiBlitz3.ab3@21183> BRA 'n1
0003156E <AmiBlitz3.ab3@21186>   JSR compiledatedc
00031572 <AmiBlitz3.ab3@21187> BRA 'n1
0003157A <AmiBlitz3.ab3@21190>   CMP.l #"__VE",1(a5)
0003157E <AmiBlitz3.ab3@21191>    BNE 'n1
00031584 <AmiBlitz3.ab3@21192>   CMP.w #"R_",5(a5)
00031588 <AmiBlitz3.ab3@21193>    BNE 'n1
0003158E <AmiBlitz3.ab3@21194>   JSR version_string_dc
00031592 <AmiBlitz3.ab3@21195> BRA.w JL_0_C7FC
00031598 <AmiBlitz3.ab3@21199>   CLR.w instringon
0003159E <AmiBlitz3.ab3@21200>   JSR get1bytemain
000315A2 <AmiBlitz3.ab3@21201> BRA.w JL_0_C83A
000315AC <AmiBlitz3.ab3@21206>    MOVE.w oldqflag,instringon
000315B2 <AmiBlitz3.ab3@21207>   MOVEA.l lastsourcepos,A5
000315B8 <AmiBlitz3.ab3@21208>    JSR asmconst
000315BE <AmiBlitz3.ab3@21209>   SUBQ.l #1,destpointer
000315C2 <AmiBlitz3.ab3@21210>    BSR.w JL_0_C796
000315C8 <AmiBlitz3.ab3@21211>   ADDQ.l #1,destpointer
000315CC <AmiBlitz3.ab3@21212>    BSR.w writebyte
000315D0 <AmiBlitz3.ab3@21215>   CMP.w #$2C,D0
000315D4 <AmiBlitz3.ab3@21216>    BEQ.w JL_0_C7F0
000315D6 <AmiBlitz3.ab3@21217> RTS
000315D8 <AmiBlitz3.ab3@21221>   MOVEQ.l #$10,D3
000315E0 <AmiBlitz3.ab3@21227>   MOVE.b #1,_dcb
000315E6 <AmiBlitz3.ab3@21228>   JSR asmconst
000315EC <AmiBlitz3.ab3@21229>   CLR.b _dcb
000315F0 <AmiBlitz3.ab3@21230>   BSR.w JL_0_C796
000315F4 <AmiBlitz3.ab3@21231>   BSR.w writebyte
000315F8 <AmiBlitz3.ab3@21232>   BSR.w writebyte
000315FC <AmiBlitz3.ab3@21233>   CMP.w #$2C,D0
00031600 <AmiBlitz3.ab3@21234>    BEQ.w JL_0_C84A
00031602 <AmiBlitz3.ab3@21235> RTS
00031608 <AmiBlitz3.ab3@21239>   ADDQ.l #3,destpointer
00031610 <AmiBlitz3.ab3@21240>   ANDI.w #$FFFC,destpointer+2
00031612 <AmiBlitz3.ab3@21241> RTS
00031618 <AmiBlitz3.ab3@21245>   ADDQ.l #7,destpointer
00031620 <AmiBlitz3.ab3@21246>   ANDI.w #$FFF8,destpointer+2
00031622 <AmiBlitz3.ab3@21247> RTS
00031628 <AmiBlitz3.ab3@21251>   ADDQ.l #1,destpointer                                    ;even
00031630 <AmiBlitz3.ab3@21252>   BCLR #$0,destpointer+3
00031632 <AmiBlitz3.ab3@21253> RTS
00031634 <AmiBlitz3.ab3@21256> datasize: Ds.w 1
0003163A <AmiBlitz3.ab3@21266>   TST.b debugmode
0003163E <AmiBlitz3.ab3@21267>   BEQ.w pdt__skip
00031642 <AmiBlitz3.ab3@21268>   MOVE.w #$4420,D0                                         ;'D '
00031646 <AmiBlitz3.ab3@21269>   MOVE.b datasize+1(PC),D0
0003164A <AmiBlitz3.ab3@21270> BRA.w JL_0_C1E6
0003164C <AmiBlitz3.ab3@21273> RTS
00031650 <AmiBlitz3.ab3@21277>   MOVE.w #$FC17,D1
00031656 <AmiBlitz3.ab3@21278>    JSR uselib
00031660 <AmiBlitz3.ab3@21280>    MOVE.w oldqflag,instringon
00031666 <AmiBlitz3.ab3@21281>   MOVEA.l lastsourcepos,A5
0003166C <AmiBlitz3.ab3@21282>    JSR AJL_0_498A
00031672 <AmiBlitz3.ab3@21283>   MOVE.w D1,datasize
00031676 <AmiBlitz3.ab3@21284>   CMP.w #$7,D1
0003167A <AmiBlitz3.ab3@21285>    BEQ.w JL_0_C944
0003167C <AmiBlitz3.ab3@21286>   MOVE.w D1,-(A7)
00031680 <AmiBlitz3.ab3@21289>   BSR.w pdt
00031682 <AmiBlitz3.ab3@21290>   MOVE.w (A7),D2
00031686 <AmiBlitz3.ab3@21291>    BSR.w JL_0_B1D8
00031688 <AmiBlitz3.ab3@21292>   CMP.w (A7),D2                                            ;datamode
0003168C <AmiBlitz3.ab3@21293>    BEQ.w JL_0_C920
0003168E <AmiBlitz3.ab3@21294>   MOVE.w D2,D1
00031690 <AmiBlitz3.ab3@21295>   MOVE.w (A7),D2
00031694 <AmiBlitz3.ab3@21296>   CMP.w #$2,D2
00031698 <AmiBlitz3.ab3@21297>    BNE.w JL_0_C8FE
0003169C <AmiBlitz3.ab3@21298>   CMP.w #$3,D1
000316A0 <AmiBlitz3.ab3@21299>    BNE.w baddaterr
000316A6 <AmiBlitz3.ab3@21300>   CMP.l #$10000,D3
000316AA <AmiBlitz3.ab3@21301>    BCC.w baddaterr
000316AE <AmiBlitz3.ab3@21302> BRA.w JL_0_C920
000316B2 <AmiBlitz3.ab3@21305>   CMP.w #$1,D2
000316B6 <AmiBlitz3.ab3@21306>    BNE.w JL_0_C91C
000316BA <AmiBlitz3.ab3@21307>   CMP.w #$2,D1
000316BE <AmiBlitz3.ab3@21308>    BNE.w baddaterr
000316C4 <AmiBlitz3.ab3@21309>   CMP.l #$100,D3
000316C8 <AmiBlitz3.ab3@21310>    BCC.w baddaterr
000316CC <AmiBlitz3.ab3@21311> BRA.w JL_0_C920
000316D0 <AmiBlitz3.ab3@21314> BRA.w baddaterr
000316D4 <AmiBlitz3.ab3@21317>   CMP.w #$3,D2
000316D8 <AmiBlitz3.ab3@21318>   BCC.w JL_0_C930
000316DC <AmiBlitz3.ab3@21319>   BSR.w JL_0_C1E6
000316E0 <AmiBlitz3.ab3@21320> BRA.w JL_0_C934
000316E6 <AmiBlitz3.ab3@21323>   TST.b iee
000316EA <AmiBlitz3.ab3@21324>   BEQ 'old
000316EE <AmiBlitz3.ab3@21325>   CMP.b #5,d2
000316F2 <AmiBlitz3.ab3@21326>   BNE 'old
000316F6 <AmiBlitz3.ab3@21327>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
000316FA <AmiBlitz3.ab3@21331>   BSR.w JL_0_C1DE                                          ;write data >3
00031700 <AmiBlitz3.ab3@21334>   JSR reget
00031704 <AmiBlitz3.ab3@21335>   CMP.w #$2C,D0
00031708 <AmiBlitz3.ab3@21336>    BEQ.w JL_0_C8CC
0003170A <AmiBlitz3.ab3@21337>   ADDQ.w #2,A7
0003170C <AmiBlitz3.ab3@21338> RTS
00031710 <AmiBlitz3.ab3@21341>    BSR.w pdt
00031716 <AmiBlitz3.ab3@21342>   MOVE.l data2,-(A7)
0003171A <AmiBlitz3.ab3@21343>    BSR.w JL_0_C1DE
0003171C <AmiBlitz3.ab3@21344>   MOVEQ.l #$00,D1
00031722 <AmiBlitz3.ab3@21345>    JSR get1bytemain
00031726 <AmiBlitz3.ab3@21346>    BEQ.w JL_0_C9A6
0003172A <AmiBlitz3.ab3@21347>   CMP.w #$22,D0
0003172E <AmiBlitz3.ab3@21348>    BEQ.w JL_0_C988
00031732 <AmiBlitz3.ab3@21349>   CMP.w #$2C,D0
00031736 <AmiBlitz3.ab3@21350>    BEQ.w JL_0_C9A6
0003173A <AmiBlitz3.ab3@21353>    BSR.w JL_0_C210
0003173C <AmiBlitz3.ab3@21354>   ADDQ.w #1,D1
00031742 <AmiBlitz3.ab3@21355>    JSR getchar
00031744 <AmiBlitz3.ab3@21356>   TST.w D0
00031748 <AmiBlitz3.ab3@21357>    BEQ.w JL_0_C9A6
0003174C <AmiBlitz3.ab3@21358>   CMP.w #$2C,D0
00031750 <AmiBlitz3.ab3@21359>    BEQ.w JL_0_C9A6
00031754 <AmiBlitz3.ab3@21360> BRA.w JL_0_C96C
00031756 <AmiBlitz3.ab3@21364>    MOVEQ #0,d0
00031758 <AmiBlitz3.ab3@21365>    MOVE.b (a5)+,d0
0003175C <AmiBlitz3.ab3@21366>    BEQ.w notqerr2
00031760 <AmiBlitz3.ab3@21367>   CMP.w #$22,D0
00031764 <AmiBlitz3.ab3@21368>    BEQ.w JL_0_C9A2
00031768 <AmiBlitz3.ab3@21369>    BSR.w JL_0_C210
0003176A <AmiBlitz3.ab3@21370>   ADDQ.w #1,D1
0003176E <AmiBlitz3.ab3@21371> BRA.w JL_0_C988
00031774 <AmiBlitz3.ab3@21372> notqerr2 JMP notqerr
0003177A <AmiBlitz3.ab3@21374>   CLR.w instringon
00031780 <AmiBlitz3.ab3@21375>   JSR get1bytemain
00031782 <AmiBlitz3.ab3@21378>   MOVEA.l (A7)+,A0
00031788 <AmiBlitz3.ab3@21379>   MOVE.w dontwrite,D2
0003178C <AmiBlitz3.ab3@21380>    BNE.w JL_0_C9B4
0003178E <AmiBlitz3.ab3@21381>   MOVE.l D1,(A0)
00031794 <AmiBlitz3.ab3@21384>   ADDQ.l #1,data2
0003179C <AmiBlitz3.ab3@21385>   BCLR #$0,data2+3
000317A0 <AmiBlitz3.ab3@21386>   CMP.w #$2C,D0
000317A4 <AmiBlitz3.ab3@21387>    BEQ.w JL_0_C944
000317A6 <AmiBlitz3.ab3@21388> RTS
000317AC <AmiBlitz3.ab3@21392> JMP vardeclareerr
000317B2 <AmiBlitz3.ab3@21395>   MOVE.w proceduremode,D1                                  ;doshared
000317B6 <AmiBlitz3.ab3@21397>   BNE.w 'l1
000317B8 <AmiBlitz3.ab3@21398>   MOVE.w D1,-(A7)
000317BE <AmiBlitz3.ab3@21399>   CLR.w proceduremode
000317C4 <AmiBlitz3.ab3@21402>   LEA varbase,a2
000317C8 <AmiBlitz3.ab3@21403>   BSR.w getparameter
000317CA <AmiBlitz3.ab3@21404>   MOVE.w d2,-(a7)
000317D0 <AmiBlitz3.ab3@21405>    JSR findvariable
000317D4 <AmiBlitz3.ab3@21406>    BEQ 'checkdim
000317DA <AmiBlitz3.ab3@21407>    LEA sharebase,a2
000317DC <AmiBlitz3.ab3@21408>    MOVEQ #$f+4,d7
000317E0 <AmiBlitz3.ab3@21409>    BSR.w findlab                                         ;find var
000317E4 <AmiBlitz3.ab3@21410>    BEQ.b dupsherr
000317E8 <AmiBlitz3.ab3@21411>    BSR addlabel
000317EC <AmiBlitz3.ab3@21412>    CMP.b #".",d0
000317F0 <AmiBlitz3.ab3@21413>    BNE JUMP_vardeclareerr
000317F2 <AmiBlitz3.ab3@21414>    MOVE.l a2,a3
000317F8 <AmiBlitz3.ab3@21415>    JSR JL_0_8EB8b
000317FA <AmiBlitz3.ab3@21446>   MOVE.w (a7)+,d2
000317FE <AmiBlitz3.ab3@21447>    CMP.b #",",d0
00031802 <AmiBlitz3.ab3@21448>    BNE 'ret
00031808 <AmiBlitz3.ab3@21449>    JSR get1bytemain
0003180C <AmiBlitz3.ab3@21450> BRA 'again2
00031812 <AmiBlitz3.ab3@21453>   MOVE.w (A7)+,proceduremode
00031814 <AmiBlitz3.ab3@21454> RTS
0003181A <AmiBlitz3.ab3@21461>    CMP.w #2,6(a2)
0003181E <AmiBlitz3.ab3@21462>    BEQ 'do
00031824 <AmiBlitz3.ab3@21463>    CMP.w #$102,6(a2)
00031828 <AmiBlitz3.ab3@21464>    BEQ 'do
0003182E <AmiBlitz3.ab3@21465> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
00031834 <AmiBlitz3.ab3@21468>   LEA varbase,a0
00031836 <AmiBlitz3.ab3@21471>   MOVE.l (A0),D0                                           ;find label
0003183A <AmiBlitz3.ab3@21472>    BEQ.b 'z1
0003183C <AmiBlitz3.ab3@21473>    CMP.l d0,a2
00031840 <AmiBlitz3.ab3@21474>    BEQ 'z1
00031842 <AmiBlitz3.ab3@21475>    MOVE.l d0,a0
00031846 <AmiBlitz3.ab3@21476> BRA 'm1
00031848 <AmiBlitz3.ab3@21479>   MOVE.l (a2),d1
0003184A <AmiBlitz3.ab3@21480>     MOVE.l d1,(a0)
0003184C <AmiBlitz3.ab3@21481>     CLR.l (a2)
00031852 <AmiBlitz3.ab3@21482>     LEA sharebase,a0
00031854 <AmiBlitz3.ab3@21483>     MOVE.l (a0),(a2)
00031856 <AmiBlitz3.ab3@21484>     MOVE.l a2,(a0)
0003185C <AmiBlitz3.ab3@21485>     JSR get1bytemain
00031862 <AmiBlitz3.ab3@21486>     JSR get1bytemain
00031866 <AmiBlitz3.ab3@21487> BRA 'domore
0003186E <AmiBlitz3.ab3@21490>   MOVE.b #1,nowdeclare
00031870 <AmiBlitz3.ab3@21491>   MOVE.w D1,-(A7)
00031876 <AmiBlitz3.ab3@21492>   CLR.w proceduremode
0003187A <AmiBlitz3.ab3@21495>    BSR.w getparameter
0003187C <AmiBlitz3.ab3@21496>   MOVE.w D2,-(A7)
00031882 <AmiBlitz3.ab3@21497>   LEA firstglob,A2
00031886 <AmiBlitz3.ab3@21498>    BSR.w findvariable2
0003188A <AmiBlitz3.ab3@21499>    BNE.b JL_0_CA06
00031890 <AmiBlitz3.ab3@21502>   MOVE.b flagmask+1,D1
00031894 <AmiBlitz3.ab3@21503>   MOVE.b $7(A2),D3
00031896 <AmiBlitz3.ab3@21504>   EOR.b D3,D1
0003189A <AmiBlitz3.ab3@21505>    BEQ.w dupsherr
0003189E <AmiBlitz3.ab3@21506>    BSR.w findlab
000318A2 <AmiBlitz3.ab3@21507>    BEQ.b JL_0_C9F0
000318A6 <AmiBlitz3.ab3@21510>    BSR.w addlabel
000318A8 <AmiBlitz3.ab3@21511>   MOVE.w (A7)+,D2
000318AA <AmiBlitz3.ab3@21512>   MOVE.l A2,-(A7)
000318AE <AmiBlitz3.ab3@21513>    BSR.w JL_0_8E3C
000318B0 <AmiBlitz3.ab3@21514>   MOVEA.l (A7)+,A2
000318B2 <AmiBlitz3.ab3@21515>   MOVEQ.l #$04,D1
000318B4 <AmiBlitz3.ab3@21516>   ADDQ.w #4,A2
000318B6 <AmiBlitz3.ab3@21517>   ADDQ.w #4,A3
000318B8 <AmiBlitz3.ab3@21520>     MOVE.w (A3)+,(A2)+
000318BC <AmiBlitz3.ab3@21521>   DBF D1,JL_0_CA1A
000318C4 <AmiBlitz3.ab3@21523>   BTST #$1,flagmask+1
000318C8 <AmiBlitz3.ab3@21524>    BEQ.w JL_0_CA3C
000318CE <AmiBlitz3.ab3@21525>    JSR get1bytemain
000318D2 <AmiBlitz3.ab3@21526>   CMP.w #$29,D0
000318D6 <AmiBlitz3.ab3@21527>    BNE.w syntaxerrc
000318DC <AmiBlitz3.ab3@21528>    JSR get1bytemain
000318E0 <AmiBlitz3.ab3@21531>    CMP.w #$2C,D0
000318E4 <AmiBlitz3.ab3@21532>    BNE.w JL_0_CA4C
000318EA <AmiBlitz3.ab3@21533>    JSR get1bytemain
000318EE <AmiBlitz3.ab3@21534> BRA.w JL_0_C9DE
000318F4 <AmiBlitz3.ab3@21537>   MOVE.w (A7)+,proceduremode
000318F6 <AmiBlitz3.ab3@21538> RTS
000318FC <AmiBlitz3.ab3@21540> syntaxerrc JMP syntaxerr
00031900 <AmiBlitz3.ab3@21543>    BSR.w JL_0_C05C
00031906 <AmiBlitz3.ab3@21544>    JSR check_incdir                                        ; ergebnis in d2
0003190C <AmiBlitz3.ab3@21546>    LEA ptr_parameterstore,a1
0003190E <AmiBlitz3.ab3@21547>    MOVE.l d2,-(a7)
00031914 <AmiBlitz3.ab3@21548>    LEA includetemp,a0                                      ; filename in includetemp packen
00031916 <AmiBlitz3.ab3@21551>      MOVE.b (a1)+,(a0)+
0003191A <AmiBlitz3.ab3@21552>    BNE 'l4
00031920 <AmiBlitz3.ab3@21554>    LEA ptr_parameterstore,a1
00031922 <AmiBlitz3.ab3@21555>    MOVE.l a1,a0
00031924 <AmiBlitz3.ab3@21558>     TST.b (a0)+
00031928 <AmiBlitz3.ab3@21559>    BNE 'l1
0003192A <AmiBlitz3.ab3@21562>      MOVE.b -(a0),d0
0003192E <AmiBlitz3.ab3@21563>      CMP.b #":",d0
00031932 <AmiBlitz3.ab3@21564>       BEQ 'out
00031936 <AmiBlitz3.ab3@21565>      CMP.b #"/",d0
0003193A <AmiBlitz3.ab3@21566>       BEQ 'out
0003193C <AmiBlitz3.ab3@21567>      CMP.l a1,a0
00031940 <AmiBlitz3.ab3@21568>       BEQ 'out2
00031944 <AmiBlitz3.ab3@21569> BRA 'l2
00031946 <AmiBlitz3.ab3@21572>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
00031948 <AmiBlitz3.ab3@21575>    MOVEQ.l #-$01,D2
0003194A <AmiBlitz3.ab3@21578>      ADDQ.w #1,D2
0003194C <AmiBlitz3.ab3@21579>      MOVE.b (a0)+,(a1)+
00031950 <AmiBlitz3.ab3@21580>    BNE 'l3
00031952 <AmiBlitz3.ab3@21581>    CLR.b (a1)+
00031958 <AmiBlitz3.ab3@21583>    LEA ptr_parameterstore,a1
0003195C <AmiBlitz3.ab3@21584>    BSR.w findxinc                                         ;find include
00031960 <AmiBlitz3.ab3@21585>     BEQ.w 'outb
00031962 <AmiBlitz3.ab3@21587>    MOVE.w D2,-(A7)
00031966 <AmiBlitz3.ab3@21588>    BSR.w addlabel
00031968 <AmiBlitz3.ab3@21589>    MOVE.w (A7)+,D2
0003196E <AmiBlitz3.ab3@21591>    LEA ptr_parameterstore,a1
00031974 <AmiBlitz3.ab3@21592>    LEA includetemp,a0                                      ; namen in includetemp schreiben
00031976 <AmiBlitz3.ab3@21595>     MOVE.b (a0)+,(a1)+
0003197A <AmiBlitz3.ab3@21596>    BNE 'l4b
0003197C <AmiBlitz3.ab3@21598>    MOVE.l (a7)+,d2
00031982 <AmiBlitz3.ab3@21599>    LEA ptr_parameterstore,a1
00031986 <AmiBlitz3.ab3@21600> BRA.w JL_0_CB18
0003198C <AmiBlitz3.ab3@21603>    LEA ptr_parameterstore,a1
00031992 <AmiBlitz3.ab3@21604>    LEA includetemp,a0
00031994 <AmiBlitz3.ab3@21607>     MOVE.b (a0)+,(a1)+
00031998 <AmiBlitz3.ab3@21608>    BNE 'l4b2
0003199A <AmiBlitz3.ab3@21610>    MOVE.l (a7)+,d2
000319A0 <AmiBlitz3.ab3@21611>    LEA ptr_parameterstore,a1
000319A2 <AmiBlitz3.ab3@21614> RTS
000319A6 <AmiBlitz3.ab3@21618>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
000319AC <AmiBlitz3.ab3@21620>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
000319B2 <AmiBlitz3.ab3@21622>   MOVEA.l _dosbase,A6
000319B4 <AmiBlitz3.ab3@21623>   MOVE.l D0,D7                                                 ; store Lockpointer
000319B8 <AmiBlitz3.ab3@21624>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
000319BA <AmiBlitz3.ab3@21625>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
000319C0 <AmiBlitz3.ab3@21626>   MOVE.l ptr_macrobuffer_begin,D2
000319C4 <AmiBlitz3.ab3@21627>    JSR _Examine(A6)
000319CA <AmiBlitz3.ab3@21628>   MOVEA.l ptr_macrobuffer_begin,A0
000319CE <AmiBlitz3.ab3@21629>   MOVE.l $4(A0),D0
000319D2 <AmiBlitz3.ab3@21630>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
000319D6 <AmiBlitz3.ab3@21631>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
000319D8 <AmiBlitz3.ab3@21632>   MOVE.l D7,D1                                                 ; begin unlock the file
000319DC <AmiBlitz3.ab3@21633>    JSR _UnLock(A6)
000319E2 <AmiBlitz3.ab3@21635>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
000319E8 <AmiBlitz3.ab3@21636>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
000319EC <AmiBlitz3.ab3@21637>    JSR _Open(A6)
000319EE <AmiBlitz3.ab3@21638>   MOVE.l D0,D7
000319F2 <AmiBlitz3.ab3@21639>    BEQ.w error_cant_open_include
000319F8 <AmiBlitz3.ab3@21640>   MOVE.l destpointer,D0
000319FA <AmiBlitz3.ab3@21641>   ADD.l D3,D0
00031A00 <AmiBlitz3.ab3@21642>   CMP.l destbufferend,D0
00031A04 <AmiBlitz3.ab3@21643>    BHI.w JL_0_CAF6
00031A0A <AmiBlitz3.ab3@21644>   MOVE.l destpointer,D2
00031A0C <AmiBlitz3.ab3@21645>   MOVE.l D7,D1
00031A10 <AmiBlitz3.ab3@21646>    JSR _Read(A6)
00031A16 <AmiBlitz3.ab3@21647>   CMP.l #$FFFFFFFF,D0
00031A1A <AmiBlitz3.ab3@21648>    BEQ.w error_reading_file
00031A20 <AmiBlitz3.ab3@21649>   ADD.l D0,destpointer
00031A24 <AmiBlitz3.ab3@21650> BRA.w JL_0_CB04
00031A2C <AmiBlitz3.ab3@21653>   MOVE.w #$FFFF,dontwrite
00031A32 <AmiBlitz3.ab3@21654>   MOVE.l D0,destpointer
00031A34 <AmiBlitz3.ab3@21657>   MOVE.l D7,D1
00031A38 <AmiBlitz3.ab3@21658> JMP _Close(A6)
00031A3E <AmiBlitz3.ab3@21662> JMP illdirerr
00031A44 <AmiBlitz3.ab3@21665>   TST.w dirmode                                            ;include  open
00031A48 <AmiBlitz3.ab3@21666>    BNE.w JUMP_illdirerr
00031A4C <AmiBlitz3.ab3@21667>   BSR.w JL_0_C05C
00031A52 <AmiBlitz3.ab3@21668>   JSR check_incdir
00031A56 <AmiBlitz3.ab3@21671>   BSR.w findconstant
00031A5A <AmiBlitz3.ab3@21672>    BEQ.w alincerr
00031A60 <AmiBlitz3.ab3@21674>   LEA constantbase,A2
00031A64 <AmiBlitz3.ab3@21675>   BSR.w addhere2
00031A68 <AmiBlitz3.ab3@21676>   CLR.w $C(A2)
00031A6C <AmiBlitz3.ab3@21677>   CLR.l $4(A2)
00031A72 <AmiBlitz3.ab3@21679>   MOVE.l #ptr_parameterstore,D1
00031A74 <AmiBlitz3.ab3@21680>   MOVE.l d1,a0
00031A7A <AmiBlitz3.ab3@21681>   LEA includetemp2,a1
00031A7C <AmiBlitz3.ab3@21684>     MOVE.b (a0)+,(a1)+
00031A80 <AmiBlitz3.ab3@21685>   BNE 'l1
00031A86 <AmiBlitz3.ab3@21686>   JSR save_includename
00031A90 <AmiBlitz3.ab3@21687>   MOVE.l #0,include_process
00031A98 <AmiBlitz3.ab3@21689>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031A9C <AmiBlitz3.ab3@21690>   BEQ 'ok
00031AA4 <AmiBlitz3.ab3@21691>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031AA8 <AmiBlitz3.ab3@21692>   BEQ 'ok_tokenize
00031AB0 <AmiBlitz3.ab3@21693>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031AB4 <AmiBlitz3.ab3@21694>   BEQ 'ok_tokenize
00031ABC <AmiBlitz3.ab3@21695>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031AC0 <AmiBlitz3.ab3@21696>   BEQ 'ok
00031AC6 <AmiBlitz3.ab3@21697> JMP errortoken                                             ;can only include
00031AD0 <AmiBlitz3.ab3@21700>    MOVE.l #-1,include_process                              ; must tokenize the include
00031AD6 <AmiBlitz3.ab3@21703>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00031ADC <AmiBlitz3.ab3@21704>   MOVEA.l _dosbase,A6
00031AE0 <AmiBlitz3.ab3@21705>   JSR _Open(A6)
00031AE4 <AmiBlitz3.ab3@21706>   MOVE.l D0,$8(A2)
00031AE8 <AmiBlitz3.ab3@21707>   BEQ.w error_cant_open_include
00031AEE <AmiBlitz3.ab3@21708>   CLR.l includeline
00031AF2 <AmiBlitz3.ab3@21709>   MOVE.l 8(a2),d1
00031AF4 <AmiBlitz3.ab3@21710>   MOVE.l d3,-(a7)
00031AF6 <AmiBlitz3.ab3@21711>   MOVEQ #0,d2
00031AF8 <AmiBlitz3.ab3@21712>   MOVEQ #1,d3
00031AFC <AmiBlitz3.ab3@21713>   JSR _Seek(a6)                                            ; -66
00031B00 <AmiBlitz3.ab3@21714>   MOVE.l 8(a2),d1
00031B02 <AmiBlitz3.ab3@21715>   MOVEQ #0,d2
00031B04 <AmiBlitz3.ab3@21716>   MOVEQ #-1,d3
00031B08 <AmiBlitz3.ab3@21717>   JSR _Seek(a6)                                            ; -66
00031B0A <AmiBlitz3.ab3@21718>   MOVE.l (a7)+,d3
00031B0C <AmiBlitz3.ab3@21719>   ADDQ.l #4,d0
00031B12 <AmiBlitz3.ab3@21721>   MOVE.l #$10000,D1
00031B18 <AmiBlitz3.ab3@21722>   MOVEA.l _execbase,A6
00031B1C <AmiBlitz3.ab3@21725>   JSR _AllocVec(a6)
00031B20 <AmiBlitz3.ab3@21727>   MOVE.l D0,$4(A2)
00031B24 <AmiBlitz3.ab3@21728>   MOVE.l D0,$E(A2)
00031B26 <AmiBlitz3.ab3@21729>   MOVEA.l D0,A5
00031B2C <AmiBlitz3.ab3@21736>   ADDQ.w #1,ininclude                                      ;enter include
00031B32 <AmiBlitz3.ab3@21739>   LEA _include,a0
00031B36 <AmiBlitz3.ab3@21740>   MOVEM.l a0-a6/d0-d7,-(a7)
00031B3C <AmiBlitz3.ab3@21741>   LEA ptr_parameterstore,a1
00031B3E <AmiBlitz3.ab3@21744>     MOVE.b (a0)+,(a1)+
00031B42 <AmiBlitz3.ab3@21745>   BNE 'l1b
00031B44 <AmiBlitz3.ab3@21747>   MOVEQ #9,d2
00031B4A <AmiBlitz3.ab3@21748>   JSR findlabel2
00031B4E <AmiBlitz3.ab3@21749>   BNE 'd
00031B56 <AmiBlitz3.ab3@21750>   MOVE.l #1,8(a2)
00031B5A <AmiBlitz3.ab3@21751>   MOVEM.l (a7)+,a0-a6/d0-d7
00031B5E <AmiBlitz3.ab3@21752> BRA 'd2
00031B64 <AmiBlitz3.ab3@21755>   JSR addlabelhash
00031B6C <AmiBlitz3.ab3@21756>   MOVE.l #$1,$4(A2)
00031B74 <AmiBlitz3.ab3@21757>   MOVE.l #1,8(a2)
00031B78 <AmiBlitz3.ab3@21758>   MOVEM.l (a7)+,a0-a6/d0-d7
00031B7E <AmiBlitz3.ab3@21761>   LEA inctab,a0
00031B80 <AmiBlitz3.ab3@21762>   MOVEQ #0,d1
00031B86 <AmiBlitz3.ab3@21763>   MOVE.w ininclude,d1
00031B8A <AmiBlitz3.ab3@21764>   CLR.l $0(a0,d1*4)
00031B90 <AmiBlitz3.ab3@21765>   MOVEA.l passstack,A7
00031B96 <AmiBlitz3.ab3@21766> JMP AJL_0_413A
00031B9C <AmiBlitz3.ab3@21768> JUMP_dupmacerr JMP dupmacerr
00031B9E <AmiBlitz3.ab3@21770> coolnest:   Ds.w 1
00031BA2 <AmiBlitz3.ab3@21771> macline:    Ds.l 1
00031BAC <AmiBlitz3.ab3@21775>   MOVE.l linenumat,macline
00031BB0 <AmiBlitz3.ab3@21776>    BSR.w makename2
00031BB4 <AmiBlitz3.ab3@21777>    BEQ.w JUMP_syntaxerr
00031BBA <AmiBlitz3.ab3@21779>    CLR.b thenmode
00031BC4 <AmiBlitz3.ab3@21781>    MOVE.w oldqflag,instringon
00031BCA <AmiBlitz3.ab3@21782>   MOVEA.l lastsourcepos,A5
00031BCE <AmiBlitz3.ab3@21783>    BSR.w findmac
00031BD2 <AmiBlitz3.ab3@21784>    BEQ.w JUMP_dupmacerr
00031BD6 <AmiBlitz3.ab3@21785>    BSR.w addlabel
00031BDA <AmiBlitz3.ab3@21786>   CLR.w $A(A2)
00031BE0 <AmiBlitz3.ab3@21787>   MOVEA.l ptr_macrobuffer_begin,A0
00031BE2 <AmiBlitz3.ab3@21788>   MOVEQ.l #$00,D2
00031BE8 <AmiBlitz3.ab3@21789>   CLR.w coolnest
00031BEA <AmiBlitz3.ab3@21792>   MOVE.b (a5),d0
00031BEE <AmiBlitz3.ab3@21793>      BEQ 'l3
00031BF2 <AmiBlitz3.ab3@21794>      CMP.b #" ",d0
00031BF6 <AmiBlitz3.ab3@21795>       BNE 'l2                                              ;space macro
00031BF8 <AmiBlitz3.ab3@21796>       ADDQ.l #1,a5
00031BFC <AmiBlitz3.ab3@21797> BRA 'l1
00031C00 <AmiBlitz3.ab3@21800>    CMP.b #";",d0
00031C04 <AmiBlitz3.ab3@21801>       BNE 'l3
00031C06 <AmiBlitz3.ab3@21804>    MOVE.b (a5),d0
00031C0A <AmiBlitz3.ab3@21805>       BEQ 'l5
00031C0E <AmiBlitz3.ab3@21806>       BSR.w JL_0_CC98                                      ;add comment
00031C10 <AmiBlitz3.ab3@21807>       ADDQ.l #1,a5
00031C14 <AmiBlitz3.ab3@21808> BRA 'l4
00031C18 <AmiBlitz3.ab3@21811>    MOVE.b #":",d0
00031C1C <AmiBlitz3.ab3@21812>       BSR.w JL_0_CC98
00031C20 <AmiBlitz3.ab3@21813>       MOVE.b #"@",d0
00031C24 <AmiBlitz3.ab3@21814>       BSR.w JL_0_CC98
00031C2C <AmiBlitz3.ab3@21817>    MOVE.b #0,temp
00031C34 <AmiBlitz3.ab3@21818>       MOVE.b #0,thenmode
00031C3A <AmiBlitz3.ab3@21821>   JSR getcharb
00031C3C <AmiBlitz3.ab3@21822>   TST.w D0
00031C40 <AmiBlitz3.ab3@21823>    BNE.w JL_0_CBDE
00031C44 <AmiBlitz3.ab3@21824>   MOVEM.l D2/A0/A2,-(A7)
00031C4A <AmiBlitz3.ab3@21825>   CMP.w #"@@",-3(a5)
00031C4E <AmiBlitz3.ab3@21826>   BNE 'l2a
00031C54 <AmiBlitz3.ab3@21827>   JSR nextline
00031C58 <AmiBlitz3.ab3@21828>   BEQ.w JUMP_macenderr
00031C5C <AmiBlitz3.ab3@21829>   MOVEM.l (A7)+,D2/A0/A2
00031C60 <AmiBlitz3.ab3@21830> BRA.w JL_0_CBB6
00031C66 <AmiBlitz3.ab3@21833>    JSR nextline
00031C6A <AmiBlitz3.ab3@21834>    BEQ.w JUMP_macenderr
00031C6E <AmiBlitz3.ab3@21835>   MOVEM.l (A7)+,D2/A0/A2
00031C70 <AmiBlitz3.ab3@21836>   TST.w D2
00031C74 <AmiBlitz3.ab3@21837>    BEQ.w JL_0_CBB6
00031C76 <AmiBlitz3.ab3@21840>   MOVE.b (a5),d0
00031C7A <AmiBlitz3.ab3@21841>       CMP.b #" ",d0
00031C7E <AmiBlitz3.ab3@21842>       BNE 'l1
00031C80 <AmiBlitz3.ab3@21843>       ADDQ.w #1,a5
00031C84 <AmiBlitz3.ab3@21844> BRA 'l2
00031C8A <AmiBlitz3.ab3@21847>   TST.b thenmode
00031C8E <AmiBlitz3.ab3@21848>      BEQ 'l3
00031C90 <AmiBlitz3.ab3@21849>      MOVEQ #":",d0
00031C94 <AmiBlitz3.ab3@21850>      BSR.w JL_0_CC98
00031C98 <AmiBlitz3.ab3@21851>      MOVE.w #-$7FFE,D0                                     ;write end if
00031C9C <AmiBlitz3.ab3@21852>      BSR macputw
00031CA0 <AmiBlitz3.ab3@21853>      MOVE.w #$800b,d0
00031CA4 <AmiBlitz3.ab3@21854>      BSR.w macputw
00031CAA <AmiBlitz3.ab3@21855>      CLR.b thenmode
00031CAC <AmiBlitz3.ab3@21858>    MOVEQ.l #$3A,D0
00031CB4 <AmiBlitz3.ab3@21859>      MOVE.b #1,temp
00031CB8 <AmiBlitz3.ab3@21861> BRA.w JL_0_CC2A
00031CBC <AmiBlitz3.ab3@21865>   BPL.w JL_0_CC2A
00031CC0 <AmiBlitz3.ab3@21866>   CMP.w #-$7FF3,D0                                         ;macro ?
00031CC4 <AmiBlitz3.ab3@21867>    BNE.w JL_0_CBF4
00031CCA <AmiBlitz3.ab3@21868>   ADDQ.w #1,coolnest
00031CCE <AmiBlitz3.ab3@21869> BRA.w JL_0_CC22
00031CD4 <AmiBlitz3.ab3@21871> JUMP_macnesterr JMP macnesterr
00031CD8 <AmiBlitz3.ab3@21874>   CMP.w #$80d7,d0                                          ;object ?
00031CDC <AmiBlitz3.ab3@21875>     BNE 'l1x
00031CE2 <AmiBlitz3.ab3@21876>     TST.b objectcount
00031CE6 <AmiBlitz3.ab3@21877>     BNE JUMP_macnesterr
00031CEA <AmiBlitz3.ab3@21880>   CMP.w #$8021,d0
00031CEE <AmiBlitz3.ab3@21881>     BNE 'nothen
00031CF6 <AmiBlitz3.ab3@21882>     MOVE.b #1,thenmode
00031CFC <AmiBlitz3.ab3@21885>   TST.b thenmode
00031D00 <AmiBlitz3.ab3@21886>         BEQ 'l1
00031D04 <AmiBlitz3.ab3@21887>    CMP.w #$8002,d0                                         ;end if
00031D08 <AmiBlitz3.ab3@21888>    BNE 'l1
00031D0C <AmiBlitz3.ab3@21889>    MOVEM.l d0/a5,-(a7)
00031D12 <AmiBlitz3.ab3@21890>    JSR get1bytemain
00031D14 <AmiBlitz3.ab3@21891>    MOVE.w d0,d1
00031D18 <AmiBlitz3.ab3@21892>    MOVEM.l (a7)+,a5/d0
00031D1C <AmiBlitz3.ab3@21893>    CMP.w #$800b,d1
00031D20 <AmiBlitz3.ab3@21894>    BNE 'l1
00031D26 <AmiBlitz3.ab3@21895>    CLR.b thenmode
00031D2A <AmiBlitz3.ab3@21898>    CMP.w #-$7FFE,D0                                        ;end ?
00031D2E <AmiBlitz3.ab3@21899>    BNE.w JL_0_CC22
00031D30 <AmiBlitz3.ab3@21900>    MOVE.l a5,-(a7)
00031D36 <AmiBlitz3.ab3@21901>    JSR get1bytemain
00031D38 <AmiBlitz3.ab3@21902>    MOVE.l (a7)+,a5
00031D3A <AmiBlitz3.ab3@21903>    TST.w d0
00031D3E <AmiBlitz3.ab3@21904>    BEQ 'doend
00031D42 <AmiBlitz3.ab3@21905>    CMP.w #":",d0
00031D46 <AmiBlitz3.ab3@21906>    BEQ 'doend
00031D4A <AmiBlitz3.ab3@21907>    CMP.w #";",d0
00031D4E <AmiBlitz3.ab3@21908>    BEQ 'doend
00031D50 <AmiBlitz3.ab3@21909>    MOVE.l a5,-(a7)
00031D56 <AmiBlitz3.ab3@21910>    JSR get1bytemain
00031D5A <AmiBlitz3.ab3@21911>    MOVE.l -1(a5),d0
00031D5C <AmiBlitz3.ab3@21912>    MOVE.l (a7)+,a5
00031D62 <AmiBlitz3.ab3@21913>    CMP.l #"noa7",d0
00031D66 <AmiBlitz3.ab3@21914>    BEQ 'doend
00031D6A <AmiBlitz3.ab3@21915> BRA 'morechar
00031D6E <AmiBlitz3.ab3@21918>   MOVE.w #$8002,D0
00031D72 <AmiBlitz3.ab3@21919>    BSR.w macputw
00031D76 <AmiBlitz3.ab3@21920> BRA JL_0_CBB6
00031D7C <AmiBlitz3.ab3@21923>   JSR get1bytemain
00031D80 <AmiBlitz3.ab3@21924>    CMP.w #-$7FF3,D0                                        ;end macro
00031D84 <AmiBlitz3.ab3@21925>    BEQ.w 'lo1
00031D88 <AmiBlitz3.ab3@21926>   CMP.w #$80d7,d0                                          ;end object
00031D8C <AmiBlitz3.ab3@21927>   BNE JL_0_CC12
00031D92 <AmiBlitz3.ab3@21928>   SUBQ.b #1,objectcount
00031D98 <AmiBlitz3.ab3@21929>   TST.b developobject
00031D9C <AmiBlitz3.ab3@21930>   BEQ 'lo1
00031DA0 <AmiBlitz3.ab3@21931>   BSR skiprest
00031DA2 <AmiBlitz3.ab3@21932> RTS
00031DA8 <AmiBlitz3.ab3@21935>   SUBQ.w #1,coolnest
00031DAC <AmiBlitz3.ab3@21936>    BMI.w JL_0_CC32
00031DAE <AmiBlitz3.ab3@21939>   MOVE.w D0,-(A7)
00031DB2 <AmiBlitz3.ab3@21940>   MOVE.w #$8002,D0
00031DB6 <AmiBlitz3.ab3@21941>    BSR.w macputw
00031DB8 <AmiBlitz3.ab3@21942>   MOVE.w (A7)+,D0
00031DBC <AmiBlitz3.ab3@21943> BRA.w JL_0_CC22
00031DC0 <AmiBlitz3.ab3@21946>   BSR.w macputw
00031DC4 <AmiBlitz3.ab3@21947> BRA.w JL_0_CBB6
00031DCA <AmiBlitz3.ab3@21949> JUMP_macenderr JMP macenderr
00031DD0 <AmiBlitz3.ab3@21952>     CMP.w #"@@",-1(a5)                                     ;merge lines
00031DD4 <AmiBlitz3.ab3@21953>     BNE 'no
00031DD8 <AmiBlitz3.ab3@21954>      MOVEM.l D2/A0/A2,-(A7)
00031DDE <AmiBlitz3.ab3@21955>    JSR nextline
00031DE2 <AmiBlitz3.ab3@21956>    BEQ.w JUMP_macenderr
00031DE6 <AmiBlitz3.ab3@21957>   MOVEM.l (A7)+,D2/A0/A2
00031DE8 <AmiBlitz3.ab3@21958>     TST.w D2
00031DEC <AmiBlitz3.ab3@21959>    BEQ.w JL_0_CBB6
00031DF0 <AmiBlitz3.ab3@21960> BRA JL_0_CBB6
00031DF4 <AmiBlitz3.ab3@21964>   BSR.w JL_0_CC98
00031DF8 <AmiBlitz3.ab3@21965> BRA.w JL_0_CBB6
00031DFA <AmiBlitz3.ab3@21968>   ADDQ.w #4,A7
00031DFC <AmiBlitz3.ab3@21969>   MOVE.l A0,D0
00031E02 <AmiBlitz3.ab3@21970>   SUB.l ptr_macrobuffer_begin,D0
00031E06 <AmiBlitz3.ab3@21973>    BEQ.w JL_0_CC5E
00031E0A <AmiBlitz3.ab3@21974>   CMPI.b #":",-(A0)
00031E0E <AmiBlitz3.ab3@21975>    BNE.w JL_0_CC5E
00031E12 <AmiBlitz3.ab3@21976>   CMP.w #$1,D0
00031E16 <AmiBlitz3.ab3@21977>    BEQ.w JL_0_CC58
00031E1A <AmiBlitz3.ab3@21978>   TST.b -$1(A0)
00031E1E <AmiBlitz3.ab3@21979>    BMI.w JL_0_CC5E
00031E20 <AmiBlitz3.ab3@21982>   SUBQ.w #1,D0
00031E24 <AmiBlitz3.ab3@21983> BRA.w JL_0_CC3C
00031E28 <AmiBlitz3.ab3@21986>   MOVE.w D0,$8(A2)
00031E2C <AmiBlitz3.ab3@21987>    BEQ.w JL_0_CC8E
00031E2E <AmiBlitz3.ab3@21988>   MOVEQ.l #$01,D1
00031E34 <AmiBlitz3.ab3@21989>   MOVEA.l _execbase,A6
00031E3A <AmiBlitz3.ab3@21990>   MOVE.l mempool,a0
00031E3E <AmiBlitz3.ab3@21991>   JSR _AllocPooled(a6)
00031E40 <AmiBlitz3.ab3@21993>   MOVEA.l D0,A0
00031E44 <AmiBlitz3.ab3@21994>   MOVE.l A0,$4(A2)
00031E48 <AmiBlitz3.ab3@21995>   MOVE.w $8(A2),D1
00031E4C <AmiBlitz3.ab3@21996>    BEQ.w JL_0_CC8E
00031E4E <AmiBlitz3.ab3@21997>   SUBQ.w #1,D1
00031E54 <AmiBlitz3.ab3@21998>   MOVEA.l ptr_macrobuffer_begin,A1
00031E56 <AmiBlitz3.ab3@22001>     MOVE.b (A1)+,(A0)+
00031E5A <AmiBlitz3.ab3@22002>   DBF D1,JL_0_CC88
00031E60 <AmiBlitz3.ab3@22005> JMP get1bytemain
00031E62 <AmiBlitz3.ab3@22009>   MOVE.w D0,D1
00031E64 <AmiBlitz3.ab3@22010>   LSR.w #8,D1
00031E66 <AmiBlitz3.ab3@22011>   MOVE.b D1,(A0)+
00031E68 <AmiBlitz3.ab3@22014>   MOVEQ.l #-$01,D2
00031E6A <AmiBlitz3.ab3@22015>   MOVE.b D0,(A0)+
00031E70 <AmiBlitz3.ab3@22016>   CMPA.l ptr_macrobuffer_end,A0
00031E74 <AmiBlitz3.ab3@22017>    BCC.w macbigerr2
00031E76 <AmiBlitz3.ab3@22018> RTS
00031E7C <AmiBlitz3.ab3@22019> macbigerr2 JMP macbigerr
00031E7E <AmiBlitz3.ab3@22022>   MOVE.l d0,-(a7)
00031E80 <AmiBlitz3.ab3@22023>   MOVEQ #0,d0
00031E86 <AmiBlitz3.ab3@22024>   CLR.b skiptoggle
00031E88 <AmiBlitz3.ab3@22027>     MOVE.b (a5),d0
00031E8C <AmiBlitz3.ab3@22028>     BEQ 'l3
00031E90 <AmiBlitz3.ab3@22029>     CMP.b #";",d0
00031E94 <AmiBlitz3.ab3@22030>     BNE 'l2
00031E9C <AmiBlitz3.ab3@22031>     MOVE.b #1,skiptoggle
00031EA2 <AmiBlitz3.ab3@22034>     TST.b skiptoggle
00031EA6 <AmiBlitz3.ab3@22035>     BNE 'l4
00031EAA <AmiBlitz3.ab3@22036>     CMP.b #":",d0
00031EAE <AmiBlitz3.ab3@22037>     BEQ 'l3
00031EB0 <AmiBlitz3.ab3@22040>     ADDQ #1,a5
00031EB4 <AmiBlitz3.ab3@22041> BRA 'loop
00031EBA <AmiBlitz3.ab3@22044>   MOVE.w d0,lastchar
00031EBC <AmiBlitz3.ab3@22045>   MOVE.l (a7)+,d0
00031EBE <AmiBlitz3.ab3@22046> RTS
00031EC2 <AmiBlitz3.ab3@22050>   BSR.w ifchar
00031EC6 <AmiBlitz3.ab3@22051>    BNE.w JUMP_syntaxerr
00031EC8 <AmiBlitz3.ab3@22052>   MOVE.w D0,D1
00031ECE <AmiBlitz3.ab3@22053>   JSR get1bytemain
00031ED2 <AmiBlitz3.ab3@22054>   BSR.w ifchar
00031ED6 <AmiBlitz3.ab3@22055>    BNE.w JL_0_CCDA
00031ED8 <AmiBlitz3.ab3@22056>   ADDQ.w #1,D0
00031EDA <AmiBlitz3.ab3@22057>   MOVE.w D0,D2
00031EDC <AmiBlitz3.ab3@22058>   ADD.w D0,D0
00031EDE <AmiBlitz3.ab3@22059>   ADD.w D2,D0
00031EE0 <AmiBlitz3.ab3@22060>   ADD.w D0,D1
00031EE2 <AmiBlitz3.ab3@22061>   MOVE.w D1,D0
00031EE6 <AmiBlitz3.ab3@22062>   ANDI.w #$3,D0
00031EEA <AmiBlitz3.ab3@22063>   CMP.w #$3,D0
00031EEE <AmiBlitz3.ab3@22064>    BEQ.w JUMP_syntaxerr
00031EF4 <AmiBlitz3.ab3@22066>   JSR get1bytemain
00031EF6 <AmiBlitz3.ab3@22069> RTS
00031EF8 <AmiBlitz3.ab3@22075> thetst1:  TST.b D0
00031EFA <AmiBlitz3.ab3@22076> thetst2:  TST.w D0
00031EFC <AmiBlitz3.ab3@22077> thetst3:  TST.l D0
00031EFE <AmiBlitz3.ab3@22078> thetst4:  TST.l (A7)+                                      ;Any Length?
00031F02 <AmiBlitz3.ab3@22079> thetst5:  JSR _Reschedule(A6)
00031F06 <AmiBlitz3.ab3@22081> posbr:    BEQ.w posbr
00031F0A <AmiBlitz3.ab3@22082> negbr:    BNE.w negbr
00031F0C <AmiBlitz3.ab3@22086>   MOVEQ.l #-$01,D2
00031F10 <AmiBlitz3.ab3@22087> BRA.w JL_0_D04C
00031F16 <AmiBlitz3.ab3@22091>   CLR.l fp0addr
00031F18 <AmiBlitz3.ab3@22092>   MOVEQ.l #$01,D1                                          ;while flag
00031F1A <AmiBlitz3.ab3@22093>   MOVEQ.l #$00,D2                                          ;negate flag
00031F1E <AmiBlitz3.ab3@22094> BRA.w JL_0_D04E
00031F24 <AmiBlitz3.ab3@22098>   LEA firstrep,A2
00031F26 <AmiBlitz3.ab3@22099>   MOVEQ.l #$08,D2
00031F2A <AmiBlitz3.ab3@22100> BRA.w freeslist
00031F2E <AmiBlitz3.ab3@22104>   LEA firstsel(PC),A2
00031F30 <AmiBlitz3.ab3@22105>   MOVEQ.l #$0E,D2
00031F32 <AmiBlitz3.ab3@22110>   MOVEQ.l #$00,D3
00031F34 <AmiBlitz3.ab3@22118>   MOVE.l (A2),D0
00031F36 <AmiBlitz3.ab3@22119>   CLR.l (A2)
00031F38 <AmiBlitz3.ab3@22120>   MOVEA.l D0,A2
00031F3E <AmiBlitz3.ab3@22121>   MOVEA.l _execbase,A6
00031F42 <AmiBlitz3.ab3@22124>     CMPA.w #$0,A2
00031F46 <AmiBlitz3.ab3@22125>      BEQ.w freelist__done
00031F48 <AmiBlitz3.ab3@22126>     TST.w D3
00031F4C <AmiBlitz3.ab3@22127>      BEQ.w freelist__skip
00031F50 <AmiBlitz3.ab3@22128>     MOVEM.l D2-D3/A2,-(A7)
00031F52 <AmiBlitz3.ab3@22129>     ADDA.w D3,A2
00031F54 <AmiBlitz3.ab3@22130>     MOVE.l D4,D2
00031F58 <AmiBlitz3.ab3@22131>     BSR.w freeslist
00031F5C <AmiBlitz3.ab3@22132>     MOVEM.l (A7)+,D2-D3/A2
00031F5E <AmiBlitz3.ab3@22135>     MOVEA.l A2,A1
00031F60 <AmiBlitz3.ab3@22136>     MOVE.l D2,D0
00031F62 <AmiBlitz3.ab3@22137>     MOVEA.l (A2),A2
00031F68 <AmiBlitz3.ab3@22138>     MOVE.l mempool,a0
00031F6C <AmiBlitz3.ab3@22139>     JSR _FreePooled(A6)
00031F70 <AmiBlitz3.ab3@22140> BRA.w freelist__loop
00031F72 <AmiBlitz3.ab3@22143> RTS
00031F78 <AmiBlitz3.ab3@22146> JMP eselerr
00031F7C <AmiBlitz3.ab3@22149> firstsel:  Ds.l 1
00031F80 <AmiBlitz3.ab3@22152> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031F82 <AmiBlitz3.ab3@22155> selpushw:   MOVE.w D0,-(A7)
00031F84 <AmiBlitz3.ab3@22157> selpushl:   MOVE.l D0,-(A7)
00031F88 <AmiBlitz3.ab3@22159> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031F8C <AmiBlitz3.ab3@22162> selcomb:    ANDI.w #$FF,D0
00031F8E <AmiBlitz3.ab3@22163> selcomw:    CMP.w (A7),D0
00031F90 <AmiBlitz3.ab3@22165> selcoml:    CMP.l (A7),D0
00031F94 <AmiBlitz3.ab3@22167> selbne:     BNE.w selbne
00031F96 <AmiBlitz3.ab3@22169> endsel:     ADDQ.w #8,A7
00031F9A <AmiBlitz3.ab3@22175>   MOVE.l firstsel(PC),D0                                  
00031F9E <AmiBlitz3.ab3@22176>    BEQ.w JUMP_eselerr
00031FA0 <AmiBlitz3.ab3@22177>   MOVEA.l D0,A2
00031FA4 <AmiBlitz3.ab3@22178>    BSR.w JL_0_CDFC
00031FAA <AmiBlitz3.ab3@22181>   MOVEA.l _execbase,A6
00031FAE <AmiBlitz3.ab3@22184>   MOVE.l $4(A2),D0
00031FB2 <AmiBlitz3.ab3@22185>    BEQ.w doendsel__done
00031FB4 <AmiBlitz3.ab3@22186>   MOVEA.l D0,A3
00031FB8 <AmiBlitz3.ab3@22187>   MOVEA.l $4(A3),A0
00031FBE <AmiBlitz3.ab3@22188>   MOVE.l destpointer,D1
00031FC0 <AmiBlitz3.ab3@22189>   SUB.l A0,D1
00031FC6 <AmiBlitz3.ab3@22191>     TST.b fast
00031FCA <AmiBlitz3.ab3@22192>     BEQ doendsel__loop_l1
00031FD0 <AmiBlitz3.ab3@22193>     MOVE.w dontwrite,D0
00031FD4 <AmiBlitz3.ab3@22194>     BNE.w doendsel__skip
00031FD6 <AmiBlitz3.ab3@22195>     ADDQ.l #2,d1
00031FDA <AmiBlitz3.ab3@22196>     MOVE.l d1,-2(a0)
00031FDE <AmiBlitz3.ab3@22197>   BRA doendsel__skip
00031FE4 <AmiBlitz3.ab3@22201>   TST.w dontwrite
00031FE8 <AmiBlitz3.ab3@22202>      BNE.w doendsel__skip
00031FEE <AmiBlitz3.ab3@22203>   CMP.l #MaxWordSgnd,D1
00031FF2 <AmiBlitz3.ab3@22204>    BHI.w JUMP_cbraerr
00031FF4 <AmiBlitz3.ab3@22205>   MOVE.w D1,(A0)
00031FF8 <AmiBlitz3.ab3@22208>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00031FFA <AmiBlitz3.ab3@22209>   MOVEA.l A3,A1
00031FFC <AmiBlitz3.ab3@22210>   MOVEQ.l #$08,D0
00032002 <AmiBlitz3.ab3@22211>   MOVE.l mempool,a0
00032006 <AmiBlitz3.ab3@22212>    JSR _FreePooled(A6)
0003200A <AmiBlitz3.ab3@22213> BRA.w doendsel__loop
00032010 <AmiBlitz3.ab3@22216>   JSR popselect                                            ;fix stack on select
00032014 <AmiBlitz3.ab3@22217>   MOVEA.l firstsel(PC),A1
0003201A <AmiBlitz3.ab3@22218>   MOVE.l (A1),firstsel
0003201C <AmiBlitz3.ab3@22219>   MOVEQ.l #$0E,D0
00032022 <AmiBlitz3.ab3@22220>   MOVEA.l _execbase,A6
00032028 <AmiBlitz3.ab3@22221>   MOVE.l mempool,a0
0003202C <AmiBlitz3.ab3@22222>   JSR _FreePooled(A6)
00032032 <AmiBlitz3.ab3@22223> JMP get1bytemain
00032034 <AmiBlitz3.ab3@22227>   MOVEA.l (A7)+,A1
00032036 <AmiBlitz3.ab3@22228>   SUBQ.w #8,A1
00032038 <AmiBlitz3.ab3@22229>   MOVEQ.l #$09,D0
0003203A <AmiBlitz3.ab3@22230>   ADD.l (A1),D0
0003203C <AmiBlitz3.ab3@22233>   ADDQ.w #2,A7                                             ;for runtime errs!
00032040 <AmiBlitz3.ab3@22238>   MOVE.l firstsel(PC),D0
00032044 <AmiBlitz3.ab3@22239>    BEQ.w JUMP_defaerr
00032046 <AmiBlitz3.ab3@22240>   MOVEA.l D0,A2
0003204A <AmiBlitz3.ab3@22241>   BSR.w JL_0_CE26
0003204E <AmiBlitz3.ab3@22242>   BSR.w JL_0_CDFC
00032052 <AmiBlitz3.ab3@22243>   CLR.l $8(A2)
00032056 <AmiBlitz3.ab3@22244>   MOVE.w $C(A2),D2
0003205A <AmiBlitz3.ab3@22245> BRA.w JL_0_CE5E
00032060 <AmiBlitz3.ab3@22248> JMP defaerr
00032064 <AmiBlitz3.ab3@22251>   MOVE.l $8(A2),D0
00032068 <AmiBlitz3.ab3@22252>    BEQ.w JL_0_CE24
0003206A <AmiBlitz3.ab3@22253>   MOVEA.l D0,A0
00032070 <AmiBlitz3.ab3@22254>   MOVE.l destpointer,D1
00032072 <AmiBlitz3.ab3@22255>   SUB.l A0,D1
00032078 <AmiBlitz3.ab3@22257>     TST.b fast
0003207C <AmiBlitz3.ab3@22258>     BEQ 'l1
00032082 <AmiBlitz3.ab3@22259>     TST.w dontwrite
00032086 <AmiBlitz3.ab3@22260>     BNE.w JL_0_CE24
00032088 <AmiBlitz3.ab3@22261>     ADDQ.l #2,d1
0003208C <AmiBlitz3.ab3@22262>     MOVE.l D1,-2(A0)
00032090 <AmiBlitz3.ab3@22263>   BRA JL_0_CE24
00032096 <AmiBlitz3.ab3@22267>   TST.w dontwrite
0003209A <AmiBlitz3.ab3@22268>      BNE.w JL_0_CE24
000320A0 <AmiBlitz3.ab3@22269>    CMP.l #MaxWordSgnd,D1
000320A4 <AmiBlitz3.ab3@22270>    BHI.w JUMP_cbraerr
000320A6 <AmiBlitz3.ab3@22271>   MOVE.w D1,(A0)
000320A8 <AmiBlitz3.ab3@22274> RTS
000320AE <AmiBlitz3.ab3@22277> JMP cbraerr
000320B2 <AmiBlitz3.ab3@22281>   MOVE.l $8(A2),D0
000320B6 <AmiBlitz3.ab3@22282>    BEQ.w JL_0_CE5C
000320B8 <AmiBlitz3.ab3@22283>   MOVEA.l D0,A3
000320BC <AmiBlitz3.ab3@22284>   MOVE.w #$6000,D1
000320C2 <AmiBlitz3.ab3@22286>    TST.b fast
000320C6 <AmiBlitz3.ab3@22287>    BEQ 'l1
000320CC <AmiBlitz3.ab3@22288>    OR.l #$ff,d1
000320D0 <AmiBlitz3.ab3@22289>    BSR writeword
000320D4 <AmiBlitz3.ab3@22293>   BSR.w writeword
000320D6 <AmiBlitz3.ab3@22294>   MOVEQ.l #$08,D0
000320D8 <AmiBlitz3.ab3@22295>   MOVEQ.l #$01,D1
000320DE <AmiBlitz3.ab3@22296>   MOVEA.l _execbase,A6
000320E4 <AmiBlitz3.ab3@22297>   MOVE.l mempool,a0
000320E8 <AmiBlitz3.ab3@22298>   JSR _AllocPooled(a6)
000320EA <AmiBlitz3.ab3@22300>   MOVEA.l D0,A0
000320EE <AmiBlitz3.ab3@22301>   MOVE.l $4(A2),(A0)
000320F2 <AmiBlitz3.ab3@22302>   MOVE.l A0,$4(A2)
000320FA <AmiBlitz3.ab3@22303>   MOVE.l destpointer,$4(A0)
000320FE <AmiBlitz3.ab3@22304> BRA.w writeword
00032100 <AmiBlitz3.ab3@22307> RTS
00032106 <AmiBlitz3.ab3@22311>   TST.b debugmode
0003210A <AmiBlitz3.ab3@22312>    BEQ.w JL_0_CE7A
0003210E <AmiBlitz3.ab3@22313>   MOVE.w #$C313,D1
00032112 <AmiBlitz3.ab3@22314>   CMP.w #$3,D2
00032116 <AmiBlitz3.ab3@22315>    BCS.w JL_0_CE76
00032118 <AmiBlitz3.ab3@22316>   ADDQ.w #1,D1
0003211C <AmiBlitz3.ab3@22319> BRA.w Atokejsr
0003211E <AmiBlitz3.ab3@22322> RTS
00032124 <AmiBlitz3.ab3@22326> JMP caseerr
00032128 <AmiBlitz3.ab3@22329>   MOVE.l firstsel(PC),D0
0003212C <AmiBlitz3.ab3@22330>    BEQ.w JUMP_caseerr
0003212E <AmiBlitz3.ab3@22331>   MOVEA.l D0,A2
00032132 <AmiBlitz3.ab3@22332>    BSR.w JL_0_CE26
00032136 <AmiBlitz3.ab3@22333>    BSR.w JL_0_CDFC
0003213A <AmiBlitz3.ab3@22334>   MOVE.w $C(A2),D2
0003213C <AmiBlitz3.ab3@22335>   MOVE.w D2,-(A7)
00032140 <AmiBlitz3.ab3@22336>    BSR.w JL_0_CE5E
00032142 <AmiBlitz3.ab3@22337>   MOVE.w (A7),D2
00032146 <AmiBlitz3.ab3@22338>    BSR.w bakeval
00032148 <AmiBlitz3.ab3@22339>   MOVE.w (A7)+,D2
0003214C <AmiBlitz3.ab3@22340>   LEA selcomb(PC),A0
00032150 <AmiBlitz3.ab3@22341>   LEA selcombf(PC),A1
00032154 <AmiBlitz3.ab3@22342>   CMP.w #$1,D2
00032158 <AmiBlitz3.ab3@22343>    BEQ.w JL_0_CED8
0003215C <AmiBlitz3.ab3@22344>   LEA selcomw(PC),A0
00032160 <AmiBlitz3.ab3@22345>   CMP.w #$2,D2
00032164 <AmiBlitz3.ab3@22346>    BEQ.w JL_0_CED8
00032168 <AmiBlitz3.ab3@22347>   LEA selcoml(PC),A0
0003216C <AmiBlitz3.ab3@22348>   LEA selcomlf(PC),A1
00032170 <AmiBlitz3.ab3@22349>   CMP.w #$7,D2
00032174 <AmiBlitz3.ab3@22350>    BCS.w JL_0_CED8
00032178 <AmiBlitz3.ab3@22352>   MOVE.w #$CE01,D1
0003217C <AmiBlitz3.ab3@22353>    BSR.w Atokejsr
00032180 <AmiBlitz3.ab3@22354> BRA.w JL_0_CEDC
00032184 <AmiBlitz3.ab3@22357>   BSR.w pokecode
00032188 <AmiBlitz3.ab3@22360>   MOVE.w selbne(PC),D1
0003218E <AmiBlitz3.ab3@22362>     TST.b fast
00032192 <AmiBlitz3.ab3@22363>     BEQ 'l1
00032198 <AmiBlitz3.ab3@22364>     ORI.l #$ff,d1
0003219C <AmiBlitz3.ab3@22365>     BSR writeword
000321A0 <AmiBlitz3.ab3@22368>   BSR.w writeword
000321A4 <AmiBlitz3.ab3@22369>   MOVEA.l firstsel(PC),A0
000321AC <AmiBlitz3.ab3@22370>   MOVE.l destpointer,$8(A0)
000321B0 <AmiBlitz3.ab3@22371> BRA.w writeword
000321B4 <AmiBlitz3.ab3@22375> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
000321B6 <AmiBlitz3.ab3@22376> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
000321BA <AmiBlitz3.ab3@22379> sellineat:  Ds.l 1
000321C0 <AmiBlitz3.ab3@22385>   TST.b debugmode
000321C4 <AmiBlitz3.ab3@22386>    BEQ.w JL_0_CF0E
000321C8 <AmiBlitz3.ab3@22387>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
000321CC <AmiBlitz3.ab3@22388>    BSR.w writelong
000321D6 <AmiBlitz3.ab3@22391>   MOVE.l linenumat,sellineat
000321E0 <AmiBlitz3.ab3@22393>    MOVE.l destpointer,pushpc
000321EA <AmiBlitz3.ab3@22394>   MOVE.l hunkoffsetbase,pushoff
000321EC <AmiBlitz3.ab3@22395>   MOVEQ.l #$00,D2
000321F0 <AmiBlitz3.ab3@22396>    BSR.w bakevalu                                          ;Evaluate
000321F4 <AmiBlitz3.ab3@22397>    BSR.w JL_0_B5D2
000321F8 <AmiBlitz3.ab3@22398>   CMP.w #$7,D2
000321FC <AmiBlitz3.ab3@22399>    BNE.w JL_0_CF36
00032200 <AmiBlitz3.ab3@22400>   MOVE.w clrst(PC),D1
00032204 <AmiBlitz3.ab3@22401>    BSR.w writeword
00032208 <AmiBlitz3.ab3@22404>    BSR.w JL_0_B63C
0003220C <AmiBlitz3.ab3@22405>   LEA selpushb(PC),A0
00032210 <AmiBlitz3.ab3@22406>   LEA selpushbf(PC),A1
00032214 <AmiBlitz3.ab3@22407>   CMP.w #$1,D2
00032218 <AmiBlitz3.ab3@22408>    BEQ.w JL_0_CF88
0003221C <AmiBlitz3.ab3@22409>   LEA selpushw(PC),A0
00032220 <AmiBlitz3.ab3@22410>   CMP.w #$2,D2
00032224 <AmiBlitz3.ab3@22411>    BEQ.w JL_0_CF88
00032228 <AmiBlitz3.ab3@22412>   LEA selpushl(PC),A0
0003222C <AmiBlitz3.ab3@22413>   LEA selpushlf(PC),A1
00032230 <AmiBlitz3.ab3@22414>   CMP.w #$7,D2
00032234 <AmiBlitz3.ab3@22415>    BCS.w JL_0_CF88
0003223A <AmiBlitz3.ab3@22417>   MOVE.w moved0a3,D1                                       ;d0 to a3!
0003223E <AmiBlitz3.ab3@22418>    BSR.w writeword
00032242 <AmiBlitz3.ab3@22419>   LEA selpushs(PC),A0
00032246 <AmiBlitz3.ab3@22420>   LEA selpushsf(PC),A1
0003224A <AmiBlitz3.ab3@22421>    BSR.w pokecode
0003224E <AmiBlitz3.ab3@22422>   MOVE.w #$C701,D1
00032252 <AmiBlitz3.ab3@22423>    BSR.w Atokejsr
00032256 <AmiBlitz3.ab3@22424> BRA.w JL_0_CF8C
0003225A <AmiBlitz3.ab3@22427>   BSR.w pokecode
0003225C <AmiBlitz3.ab3@22430>   MOVEQ.l #$0E,D0
0003225E <AmiBlitz3.ab3@22431>   MOVEQ.l #$01,D1
00032264 <AmiBlitz3.ab3@22432>   MOVEA.l _execbase,A6
0003226A <AmiBlitz3.ab3@22434>   MOVE.l mempool,a0
0003226E <AmiBlitz3.ab3@22435>   JSR _AllocPooled(a6)
00032270 <AmiBlitz3.ab3@22436>   MOVEA.l D0,A0
00032274 <AmiBlitz3.ab3@22437>   MOVE.l firstsel(PC),(A0)
0003227A <AmiBlitz3.ab3@22438>   MOVE.l A0,firstsel
0003227E <AmiBlitz3.ab3@22439>   CLR.l $4(A0)
00032282 <AmiBlitz3.ab3@22440>   CLR.l $8(A0)
00032286 <AmiBlitz3.ab3@22441>   MOVE.w D2,$C(A0)
00032288 <AmiBlitz3.ab3@22442> RTS
0003228E <AmiBlitz3.ab3@22446>   MOVE.l firstrep,D0
00032292 <AmiBlitz3.ab3@22447>    BEQ.w JUMP_unterr1
00032296 <AmiBlitz3.ab3@22448>   MOVE.w #$6000,D1
0003229A <AmiBlitz3.ab3@22449>   BSR.w writeword
0003229C <AmiBlitz3.ab3@22450>   MOVEA.l D0,A0
000322A0 <AmiBlitz3.ab3@22451>   MOVE.l $4(A0),D1
000322A6 <AmiBlitz3.ab3@22452>   SUB.l destpointer,D1
000322A8 <AmiBlitz3.ab3@22453>   TST.w D1
000322AC <AmiBlitz3.ab3@22454>    BPL.w JUMP_unterr2
000322B0 <AmiBlitz3.ab3@22455>   BSR.w writeword
000322B6 <AmiBlitz3.ab3@22456>   MOVEA.l _execbase,A6
000322BA <AmiBlitz3.ab3@22457> BRA.w JL_0_D036
000322C0 <AmiBlitz3.ab3@22460> JMP unterr2
000322C6 <AmiBlitz3.ab3@22463> JMP unterr1
000322CC <AmiBlitz3.ab3@22467>   MOVE.l firstrep,D0
000322D0 <AmiBlitz3.ab3@22468>    BEQ.w JUMP_unterr1
000322D4 <AmiBlitz3.ab3@22469>   BSR.w do_if
000322DA <AmiBlitz3.ab3@22470>   JSR reget
000322DE <AmiBlitz3.ab3@22471>    BNE.w JUMP_syntaxerr
000322E4 <AmiBlitz3.ab3@22472>   MOVE.w dontwrite,D1
000322E8 <AmiBlitz3.ab3@22473>    BNE.w JL_0_D020
000322EE <AmiBlitz3.ab3@22474>   MOVEA.l firstrep,A0
000322F4 <AmiBlitz3.ab3@22475>   MOVEA.l destpointer,A1
000322FA <AmiBlitz3.ab3@22477>     TST.b fast
000322FE <AmiBlitz3.ab3@22478>     BEQ 'l1
00032300 <AmiBlitz3.ab3@22479>     SUBQ.w #4,a1
00032304 <AmiBlitz3.ab3@22480>     MOVE.l $4(A0),D2
00032306 <AmiBlitz3.ab3@22481>     SUB.l A1,D2
00032308 <AmiBlitz3.ab3@22482>     MOVE.l d2,(a1)
0003230C <AmiBlitz3.ab3@22483>   BRA JL_0_D020
0003230E <AmiBlitz3.ab3@22487>   SUBQ.w #2,A1
00032312 <AmiBlitz3.ab3@22488>   MOVE.l $4(A0),D2
00032314 <AmiBlitz3.ab3@22489>   SUB.l A1,D2
00032316 <AmiBlitz3.ab3@22490>   TST.w D2
0003231A <AmiBlitz3.ab3@22491>    BPL.w JUMP_unterr2
0003231C <AmiBlitz3.ab3@22492>   MOVE.w D2,(A1)
00032322 <AmiBlitz3.ab3@22495>   MOVEA.l firstiff,A1
00032328 <AmiBlitz3.ab3@22496>   MOVE.l (A1),firstiff
0003232A <AmiBlitz3.ab3@22497>   MOVEQ.l #$0E,D0
00032330 <AmiBlitz3.ab3@22498>   MOVEA.l _execbase,A6
00032336 <AmiBlitz3.ab3@22499>   MOVE.l mempool,a0
0003233A <AmiBlitz3.ab3@22500>   JSR _FreePooled(A6)
00032340 <AmiBlitz3.ab3@22503>   MOVEA.l firstrep,A1
00032346 <AmiBlitz3.ab3@22504>   MOVE.l (A1),firstrep
00032348 <AmiBlitz3.ab3@22505>   MOVEQ.l #$08,D0
0003234E <AmiBlitz3.ab3@22506>   MOVE.l mempool,a0
00032352 <AmiBlitz3.ab3@22507> JMP _FreePooled(A6)
00032356 <AmiBlitz3.ab3@22510> iflineat:   Ds.l 1
00032358 <AmiBlitz3.ab3@22514>   MOVEQ.l #$00,D2
0003235E <AmiBlitz3.ab3@22515>   TST.b fast
00032362 <AmiBlitz3.ab3@22516>   BEQ 'l1
0003236A <AmiBlitz3.ab3@22517>   MOVE.b #1,nostringopt
00032372 <AmiBlitz3.ab3@22518>   MOVE.b #1,iniffcommand
00032374 <AmiBlitz3.ab3@22522>   MOVEQ.l #$00,D1
00032376 <AmiBlitz3.ab3@22525>   MOVE.w D1,-(A7)
0003237C <AmiBlitz3.ab3@22526>   MOVE.l destpointer,-(A7)
0003237E <AmiBlitz3.ab3@22527>   MOVE.w D2,-(A7)
00032388 <AmiBlitz3.ab3@22528>   MOVE.l linenumat,iflineat
0003238A <AmiBlitz3.ab3@22529>   MOVEQ.l #$00,D2
00032394 <AmiBlitz3.ab3@22530>   MOVE.b optistring,optistring2
0003239C <AmiBlitz3.ab3@22531>   MOVE.b #1,optistring
000323A0 <AmiBlitz3.ab3@22532>   BSR.w bakevalu
000323AA <AmiBlitz3.ab3@22533>   MOVE.b optistring2,optistring
000323AE <AmiBlitz3.ab3@22534>   CMP.w #$5,D2
000323B2 <AmiBlitz3.ab3@22535>    BEQ.w JL_0_D09C
000323B6 <AmiBlitz3.ab3@22536>   MOVE.w thetst1(PC),D1
000323BA <AmiBlitz3.ab3@22537>   CMP.w #$1,D2
000323BE <AmiBlitz3.ab3@22538>    BEQ.w writebranchcode
000323C2 <AmiBlitz3.ab3@22539>   MOVE.w thetst2(PC),D1
000323C6 <AmiBlitz3.ab3@22540>   CMP.w #$2,D2
000323CA <AmiBlitz3.ab3@22541>    BEQ.w writebranchcode
000323CE <AmiBlitz3.ab3@22542>   MOVE.w thetst4(PC),D1
000323D2 <AmiBlitz3.ab3@22543>   CMP.w #$7,D2
000323D6 <AmiBlitz3.ab3@22544>    BEQ.w writebranchcode
000323DA <AmiBlitz3.ab3@22545>   MOVE.w thetst3(PC),D1
000323DE <AmiBlitz3.ab3@22546> BRA.w writebranchcode
000323E4 <AmiBlitz3.ab3@22549>   TST.b fpu
000323E8 <AmiBlitz3.ab3@22550>   BEQ 'dofpu
000323EE <AmiBlitz3.ab3@22551>   MOVE.l #$f200003a,d1
000323F2 <AmiBlitz3.ab3@22552>   BSR writelong
000323F6 <AmiBlitz3.ab3@22553>   MOVE.w #$f2c1,d1
000323FA <AmiBlitz3.ab3@22554>   BSR writeword
000323FE <AmiBlitz3.ab3@22555>   BSR writelong
00032400 <AmiBlitz3.ab3@22556>   ADDQ.l #2,a7
00032404 <AmiBlitz3.ab3@22557> BRA.w br2
00032408 <AmiBlitz3.ab3@22560>    MOVE.w #$C900,D1
0003240C <AmiBlitz3.ab3@22561>    BSR.w Atokejsr
00032410 <AmiBlitz3.ab3@22562>   MOVE.l thetst5(PC),D1
00032414 <AmiBlitz3.ab3@22563>    BSR.w writelong
00032418 <AmiBlitz3.ab3@22564> BRA.w JL_0_D0B4
0003241E <AmiBlitz3.ab3@22568>          CLR.b iniffcommand
00032424 <AmiBlitz3.ab3@22569>          TST.b fast                                        ;branchcode
00032428 <AmiBlitz3.ab3@22570>          BEQ b6
0003242E <AmiBlitz3.ab3@22571>          TST.b fpu
00032432 <AmiBlitz3.ab3@22572>          BEQ 'nofpu
00032438 <AmiBlitz3.ab3@22576>           MOVE.l destpointer,a0
0003243E <AmiBlitz3.ab3@22577>          SUB.l load_var_addr,a0
00032444 <AmiBlitz3.ab3@22578>          CMP.l #4,a0
00032448 <AmiBlitz3.ab3@22579>          BEQ 'nofpu
00032450 <AmiBlitz3.ab3@22580>          CMP.l #$f2400014,-4(a4)                           ;<
00032454 <AmiBlitz3.ab3@22581>          BNE 'nolt
0003245A <AmiBlitz3.ab3@22582>          SUBQ.l #2,destpointer
00032460 <AmiBlitz3.ab3@22583>          MOVE.w #$f293,-4(a4)                              ;
00032464 <AmiBlitz3.ab3@22584> BRA 'brf
0003246C <AmiBlitz3.ab3@22587>   CMP.l #$f2400015,-4(a4)                                  ;<=
00032470 <AmiBlitz3.ab3@22588>          BNE 'nole
00032476 <AmiBlitz3.ab3@22589>          SUBQ.l #2,destpointer
0003247C <AmiBlitz3.ab3@22590>          MOVE.w #$f292,-4(a4)
00032480 <AmiBlitz3.ab3@22591> BRA 'brf
00032488 <AmiBlitz3.ab3@22594>   CMP.l #$f2400013,-4(a4)                                  ;=>
0003248C <AmiBlitz3.ab3@22595>          BNE 'noge
00032492 <AmiBlitz3.ab3@22596>          SUBQ.l #2,destpointer
00032498 <AmiBlitz3.ab3@22597>          MOVE.w #$f294,-4(a4)
0003249C <AmiBlitz3.ab3@22598> BRA 'brf
000324A4 <AmiBlitz3.ab3@22601>   CMP.l #$f2400012,-4(a4)                                  ;>
000324A8 <AmiBlitz3.ab3@22602>          BNE 'nogt
000324AE <AmiBlitz3.ab3@22603>          SUBQ.l #2,destpointer
000324B4 <AmiBlitz3.ab3@22604>          MOVE.w #$f295,-4(a4)
000324B8 <AmiBlitz3.ab3@22605> BRA 'brf
000324C0 <AmiBlitz3.ab3@22608>   CMP.l #$f2400001,-4(a4)                                  ;=
000324C4 <AmiBlitz3.ab3@22609>          BNE 'noeq
000324CA <AmiBlitz3.ab3@22610>          SUBQ.l #2,destpointer
000324D0 <AmiBlitz3.ab3@22611>          MOVE.w #$f28e,-4(a4)
000324D4 <AmiBlitz3.ab3@22612> BRA 'brf
000324DC <AmiBlitz3.ab3@22615>   CMP.l #$f240000e,-4(a4)                                  ;<>
000324E0 <AmiBlitz3.ab3@22616>          BNE 'none
000324E6 <AmiBlitz3.ab3@22617>          SUBQ.l #2,destpointer
000324EC <AmiBlitz3.ab3@22618>          MOVE.w #$f281,-4(a4)
000324EE <AmiBlitz3.ab3@22621>   ADDQ.l #2,a7
000324F4 <AmiBlitz3.ab3@22623>     TST.b fast
000324F8 <AmiBlitz3.ab3@22624>     BEQ 'l1
000324FE <AmiBlitz3.ab3@22625>     OR.b #$40,-3(a4)
00032502 <AmiBlitz3.ab3@22626>     BSR writeword
00032506 <AmiBlitz3.ab3@22630>  BSR writeword
0003250A <AmiBlitz3.ab3@22631> BRA.s br2
00032510 <AmiBlitz3.ab3@22635>   MOVE.l destpointer,a0
00032516 <AmiBlitz3.ab3@22636>          SUB.l load_var_addr,a0
0003251C <AmiBlitz3.ab3@22637>          CMP.l #4,a0
00032520 <AmiBlitz3.ab3@22638>          BEQ JL_0_D0B4
00032526 <AmiBlitz3.ab3@22639>          CMP.w #$4eb9,-6(a4)
0003252A <AmiBlitz3.ab3@22640>          BEQ b6
00032530 <AmiBlitz3.ab3@22641>          CMP.w #$5ec0,-2(a4)                               ;>
00032534 <AmiBlitz3.ab3@22642>      BNE.s 'lb1
0003253A <AmiBlitz3.ab3@22643>          MOVE.w #$6f00,-2(a4)                              ;ble
0003253E <AmiBlitz3.ab3@22644> BRA.s br
00032544 <AmiBlitz3.ab3@22647>  CMP.w #$5dc0,-2(a4)                                       ;<
00032548 <AmiBlitz3.ab3@22648>   BNE.s 'lb2
0003254E <AmiBlitz3.ab3@22649>          MOVE.w #$6c00,-2(a4)                              ;bge
00032552 <AmiBlitz3.ab3@22650> BRA.s br
00032558 <AmiBlitz3.ab3@22653>   CMP.w #$57c0,-2(a4)                                      ;=
0003255C <AmiBlitz3.ab3@22654>   BNE.s 'lb3
00032562 <AmiBlitz3.ab3@22655>          MOVE.w #$6600,-2(a4)                              ;bne
00032566 <AmiBlitz3.ab3@22656> BRA.s br
0003256C <AmiBlitz3.ab3@22659>   CMP.w #$56c0,-2(a4)                                      ;<>
00032570 <AmiBlitz3.ab3@22660>   BNE.s 'lb4
00032576 <AmiBlitz3.ab3@22661>          MOVE.w #$6700,-2(a4)                              ;beq
0003257A <AmiBlitz3.ab3@22662> BRA.s br
00032580 <AmiBlitz3.ab3@22665>   CMP.w #$5cc0,-2(a4)                                      ;>=
00032584 <AmiBlitz3.ab3@22666>   BNE.s 'lb5
0003258A <AmiBlitz3.ab3@22667>          MOVE.w #$6d00,-2(a4)                              ;blt
0003258E <AmiBlitz3.ab3@22668> BRA.s br
00032594 <AmiBlitz3.ab3@22671>   CMP.w #$5fc0,-2(a4)                                      ;<=
00032598 <AmiBlitz3.ab3@22672>         BNE.s b6
0003259E <AmiBlitz3.ab3@22673>          MOVE.w #$6e00,-2(a4)                              ;bgt
000325A0 <AmiBlitz3.ab3@22676>   TST.w (a7)+
000325A6 <AmiBlitz3.ab3@22678>         TST.b fast
000325AA <AmiBlitz3.ab3@22679>         BEQ 'l1
000325B0 <AmiBlitz3.ab3@22680>         OR.b #$ff,-1(a4)                                   ;long branches
000325B4 <AmiBlitz3.ab3@22681>         BSR writeword
000325B8 <AmiBlitz3.ab3@22685>         BSR writeword
000325BC <AmiBlitz3.ab3@22686> BRA.s br2
000325C0 <AmiBlitz3.ab3@22689>   BSR.w writeword
000325C4 <AmiBlitz3.ab3@22692>   MOVE.l posbr(PC),D1
000325C6 <AmiBlitz3.ab3@22693>   TST.w (A7)+
000325CA <AmiBlitz3.ab3@22694>    BEQ.w JL_0_D0C2
000325CE <AmiBlitz3.ab3@22695>   MOVE.l negbr(PC),D1
000325D4 <AmiBlitz3.ab3@22698>   TST.b fast
000325D8 <AmiBlitz3.ab3@22699>            BEQ 'l1
000325DE <AmiBlitz3.ab3@22700>            OR.l #$00ff0000,d1
000325E2 <AmiBlitz3.ab3@22701>            BSR writelong
000325E6 <AmiBlitz3.ab3@22702>            BSR writeword
000325EA <AmiBlitz3.ab3@22703> BRA br2
000325EE <AmiBlitz3.ab3@22706>   BSR.w writelong
000325F0 <AmiBlitz3.ab3@22709>  MOVEQ.l #$0E,D0
000325F2 <AmiBlitz3.ab3@22710>   MOVEQ.l #$01,D1
000325F8 <AmiBlitz3.ab3@22711>   MOVEA.l _execbase,A6
000325FE <AmiBlitz3.ab3@22713>   MOVE.l mempool,a0
00032602 <AmiBlitz3.ab3@22714>   JSR _AllocPooled(a6)
00032604 <AmiBlitz3.ab3@22715>   MOVEA.l D0,A0
0003260A <AmiBlitz3.ab3@22716>   MOVE.l firstiff,(A0)
00032610 <AmiBlitz3.ab3@22717>   MOVE.l A0,firstiff
00032614 <AmiBlitz3.ab3@22718>   MOVE.l (A7)+,$4(A0)
0003261C <AmiBlitz3.ab3@22719>   MOVE.l destpointer,$8(A0)
00032620 <AmiBlitz3.ab3@22720>   MOVE.w (A7)+,$C(A0)
00032626 <AmiBlitz3.ab3@22721>    JSR reget
0003262A <AmiBlitz3.ab3@22722>    BEQ.w JL_0_D10C
00032630 <AmiBlitz3.ab3@22723>   BSET #$7,$C(A0)
0003263A <AmiBlitz3.ab3@22727>   MOVE.w oldqflag,instringon
00032640 <AmiBlitz3.ab3@22728>   MOVEA.l lastsourcepos,A5
00032648 <AmiBlitz3.ab3@22729>   MOVE.w #$003A,lastchar
0003264A <AmiBlitz3.ab3@22732> RTS
0003264E <AmiBlitz3.ab3@22736>   CMP.w #$1,D0
00032652 <AmiBlitz3.ab3@22737>    BLT.w JL_0_D128
00032656 <AmiBlitz3.ab3@22738>   CMP.w #$0,D0
0003265A <AmiBlitz3.ab3@22739>    BGT.w JL_0_D128
0003265C <AmiBlitz3.ab3@22740>   ADD.w D0,D0
0003265E <AmiBlitz3.ab3@22741>   ADD.w D0,D0
00032662 <AmiBlitz3.ab3@22742>   MOVEA.l JL_0_D128(PC,D0.W),A0
00032664 <AmiBlitz3.ab3@22745> JMP (A0)
00032668 <AmiBlitz3.ab3@22748> BRA.w JL_0_D128
0003266C <AmiBlitz3.ab3@22752>   CMP.w #$1,D0
00032670 <AmiBlitz3.ab3@22753>    BLT.w JL_0_D146
00032674 <AmiBlitz3.ab3@22754>   CMP.w #$0,D0
00032678 <AmiBlitz3.ab3@22755>    BGT.w JL_0_D146
0003267A <AmiBlitz3.ab3@22756>   ADD.w D0,D0
0003267C <AmiBlitz3.ab3@22757>   ADD.w D0,D0
00032680 <AmiBlitz3.ab3@22758>   MOVEA.l JL_0_D146(PC,D0.W),A0
00032682 <AmiBlitz3.ab3@22761>   JSR (A0)
00032686 <AmiBlitz3.ab3@22764> BRA.w JL_0_D146
0003268A <AmiBlitz3.ab3@22768>   CMP.w #$1,D0
0003268E <AmiBlitz3.ab3@22769>    BLT.w JL_0_D168
00032692 <AmiBlitz3.ab3@22770>   CMP.w #$0,D0
00032696 <AmiBlitz3.ab3@22771>    BGT.w JL_0_D168
00032698 <AmiBlitz3.ab3@22772>   ADD.w D0,D0
0003269A <AmiBlitz3.ab3@22773>   ADD.w D0,D0
0003269E <AmiBlitz3.ab3@22774>   MOVEA.l JL_0_D168(PC,D0.W),A0
000326A2 <AmiBlitz3.ab3@22777>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
000326A4 <AmiBlitz3.ab3@22780>    JSR (A0)
000326A8 <AmiBlitz3.ab3@22783> BRA.w JL_0_D168
000326AA <AmiBlitz3.ab3@22786> labcnt:   Ds.w 1
000326AC <AmiBlitz3.ab3@22793>   MOVEQ.l #$02,D2
000326B0 <AmiBlitz3.ab3@22794>    BSR.w bakeval
000326B4 <AmiBlitz3.ab3@22795>   LEA JL_0_D10E(PC),A0
000326B8 <AmiBlitz3.ab3@22796>   LEA JL_0_D12C(PC),A1
000326BC <AmiBlitz3.ab3@22797>   MOVE.w #$001A,D1
000326C0 <AmiBlitz3.ab3@22798>   CMP.w #-$7FFB,D0
000326C4 <AmiBlitz3.ab3@22799>    BEQ.w JL_0_D1B6
000326C8 <AmiBlitz3.ab3@22800>   CMP.w #-$7FFA,D0
000326CC <AmiBlitz3.ab3@22801>    BNE.w JUMP_syntaxerr
000326D0 <AmiBlitz3.ab3@22802>   LEA JL_0_D12C(PC),A0
000326D4 <AmiBlitz3.ab3@22803>   LEA JL_0_D14A(PC),A1
000326D8 <AmiBlitz3.ab3@22804>   MOVE.w #$001A,D1
000326DE <AmiBlitz3.ab3@22805>   TST.b debugmode
000326E2 <AmiBlitz3.ab3@22806>    BEQ.b JL_0_D1B6
000326E8 <AmiBlitz3.ab3@22807>    JSR chkstak
000326EC <AmiBlitz3.ab3@22808>   LEA JL_0_D14A(PC),A0
000326F0 <AmiBlitz3.ab3@22809>   LEA labcnt(PC),A1
000326F4 <AmiBlitz3.ab3@22810>   MOVE.w #$001E,D1
000326F6 <AmiBlitz3.ab3@22813>   MOVE.w D1,-(A7)
000326FC <AmiBlitz3.ab3@22814>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032700 <AmiBlitz3.ab3@22815>    BSR.w pokecode
00032706 <AmiBlitz3.ab3@22816>   CLR.w labcnt
0003270C <AmiBlitz3.ab3@22821>    JSR get1bytemain
00032712 <AmiBlitz3.ab3@22822>   SUBQ.l #2,destpointer                                    ;for makealab!
00032716 <AmiBlitz3.ab3@22823>    BSR.w JL_0_AE22
0003271C <AmiBlitz3.ab3@22824>   ADDQ.l #2,destpointer
00032722 <AmiBlitz3.ab3@22825>    JSR addoff
00032726 <AmiBlitz3.ab3@22826>   MOVE.l $8(A2),D1
0003272A <AmiBlitz3.ab3@22827>    BSR.w writelong
00032730 <AmiBlitz3.ab3@22828>   ADDQ.w #1,labcnt
00032736 <AmiBlitz3.ab3@22829>    JSR reget
0003273A <AmiBlitz3.ab3@22830>   CMP.w #$2C,D0
0003273E <AmiBlitz3.ab3@22831>    BEQ.w JL_0_D1C8
00032740 <AmiBlitz3.ab3@22832>   MOVEA.l (A7)+,A0
00032742 <AmiBlitz3.ab3@22833>   MOVE.w (A7)+,D2
00032748 <AmiBlitz3.ab3@22834>   MOVE.w dontwrite,D1
0003274C <AmiBlitz3.ab3@22835>    BNE.w JL_0_D21A
00032750 <AmiBlitz3.ab3@22836>   MOVE.w labcnt(PC),D1
00032754 <AmiBlitz3.ab3@22837>   MOVE.w D1,$A(A0)
00032756 <AmiBlitz3.ab3@22838>   ADD.w D1,D1
00032758 <AmiBlitz3.ab3@22839>   ADD.w D1,D1
0003275A <AmiBlitz3.ab3@22840>   ADDQ.w #2,D1
0003275E <AmiBlitz3.ab3@22841>   MOVE.w D1,$2(A0,D2.W)
00032760 <AmiBlitz3.ab3@22844> RTS
00032766 <AmiBlitz3.ab3@22848>   TST.b debugmode
0003276A <AmiBlitz3.ab3@22849>    BEQ.w JL_0_D236
00032770 <AmiBlitz3.ab3@22850>    JSR chkstak
00032776 <AmiBlitz3.ab3@22851>   MOVE.l AL_0_D162,D1
0003277A <AmiBlitz3.ab3@22852>    BSR.w writelong
00032780 <AmiBlitz3.ab3@22854>   MOVE.w gosubcode,D1
00032784 <AmiBlitz3.ab3@22855> BRA.w JL_0_D246
0003278A <AmiBlitz3.ab3@22859>   MOVE.w gotocode,D1
0003278C <AmiBlitz3.ab3@22862>   MOVE.w D1,-(A7)
00032790 <AmiBlitz3.ab3@22863>    BSR.w JL_0_AE22
00032792 <AmiBlitz3.ab3@22864>   MOVE.w (A7)+,D1
00032796 <AmiBlitz3.ab3@22865>    BSR.w writeword
0003279C <AmiBlitz3.ab3@22866>    JSR addoff
000327A0 <AmiBlitz3.ab3@22867>   MOVE.l $8(A2),D1
000327A4 <AmiBlitz3.ab3@22868> BRA.w writelong
000327AA <AmiBlitz3.ab3@22872>   MOVE.w proceduremode,D1
000327AE <AmiBlitz3.ab3@22873>    BEQ.w JUMP_badpenderr
000327B2 <AmiBlitz3.ab3@22874>   MOVE.w #$4EF9,D1
000327B6 <AmiBlitz3.ab3@22875>    BSR.w writeword
000327BC <AmiBlitz3.ab3@22876>    JSR addoff
000327C2 <AmiBlitz3.ab3@22877>   MOVEA.l _execbase,A6
000327C4 <AmiBlitz3.ab3@22878>   MOVEQ.l #$08,D0
000327C6 <AmiBlitz3.ab3@22879>   MOVEQ.l #$01,D1
000327CC <AmiBlitz3.ab3@22881>   MOVE.l mempool,a0
000327D0 <AmiBlitz3.ab3@22882>   JSR _AllocPooled(a6)
000327D2 <AmiBlitz3.ab3@22883>   MOVEA.l D0,A0
000327D8 <AmiBlitz3.ab3@22884>   MOVE.l firstpend,(A0)
000327DE <AmiBlitz3.ab3@22885>   MOVE.l A0,firstpend
000327E6 <AmiBlitz3.ab3@22886>   MOVE.l destpointer,$4(A0)
000327EA <AmiBlitz3.ab3@22887> BRA.w writelong
000327EE <AmiBlitz3.ab3@22891>   BSR.w do_AsmExit
000327F4 <AmiBlitz3.ab3@22892> JMP get1bytemain
000327FC <AmiBlitz3.ab3@22896>   MOVE.b #1,nostringopt
00032800 <AmiBlitz3.ab3@22897>   MOVEM.l a0/a1/d1,-(a7)
00032806 <AmiBlitz3.ab3@22898>   MOVEA.l currentfunction,A0
0003280C <AmiBlitz3.ab3@22899>     CMP.l #0,a0
00032810 <AmiBlitz3.ab3@22900>     BNE 'l1
00032816 <AmiBlitz3.ab3@22901>     JMP errorasmexit
00032818 <AmiBlitz3.ab3@22902> 'l1 MOVEQ.l #$00,D2
0003281C <AmiBlitz3.ab3@22903>   MOVE.b $5(A0),D2
00032820 <AmiBlitz3.ab3@22904>   BSR.w eval
00032826 <AmiBlitz3.ab3@22906>   MOVEA.l currentfunction,A0
0003282A <AmiBlitz3.ab3@22907>   MOVE.l funcstruct_returntype(a0),a0
00032830 <AmiBlitz3.ab3@22908>   CMP.l #0,a0
00032834 <AmiBlitz3.ab3@22909>   BEQ 'isstatement
0003283C <AmiBlitz3.ab3@22910>   CMP.l #$100,4(a0)
00032840 <AmiBlitz3.ab3@22911>   BLT.w 'isvar
00032842 <AmiBlitz3.ab3@22912>   MOVE.l a2,a1
00032848 <AmiBlitz3.ab3@22913>   TST.l typetocast
0003284C <AmiBlitz3.ab3@22914>   BEQ 'nocast
00032852 <AmiBlitz3.ab3@22915>   MOVE.l typetocast,a1
00032854 <AmiBlitz3.ab3@22916> 'nocast  CMP.l a0,a1
00032858 <AmiBlitz3.ab3@22917>   BEQ 'ok
0003285E <AmiBlitz3.ab3@22918>   CLR.l typetocast
00032864 <AmiBlitz3.ab3@22919>   MOVE.l lasttoken,d1
00032868 <AmiBlitz3.ab3@22920>   CMP.w #$b581,d1                   ; ok, when token for null
0003286C <AmiBlitz3.ab3@22921>   BEQ 'isnull
00032872 <AmiBlitz3.ab3@22922> 'error  JMP errorconvertreturntype
00032876 <AmiBlitz3.ab3@22929>   MOVEM.l (a7)+,a0/a1/d1
0003287A <AmiBlitz3.ab3@22930> BRA.w do_AsmExit
00032880 <AmiBlitz3.ab3@22932> error_convert_types2 JMP error_convert_types
00032886 <AmiBlitz3.ab3@22945>   TST.b debugmode
0003288A <AmiBlitz3.ab3@22946>    BEQ.w JL_0_D2CA
0003288E <AmiBlitz3.ab3@22947>   MOVE.w #$C305,D1
00032892 <AmiBlitz3.ab3@22948> BRA.w Atokejsr
00032896 <AmiBlitz3.ab3@22951>   MOVE.w #$4E75,D1
0003289A <AmiBlitz3.ab3@22952> BRA.w writeword
0003289E <AmiBlitz3.ab3@22955> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
000328A2 <AmiBlitz3.ab3@22956> proclocals:  Ds.l 1                                        ;for debugga!
000328A4 <AmiBlitz3.ab3@22957> procnum:     Ds.w 1
000328A6 <AmiBlitz3.ab3@22958> procnum2:    Ds.w 1
000328AA <AmiBlitz3.ab3@22959> prolineat:   Ds.l 1
000328B0 <AmiBlitz3.ab3@22963>    TST.w proceduremode
000328B4 <AmiBlitz3.ab3@22964>    BGT JUMP_sreterr
000328B8 <AmiBlitz3.ab3@22965>    CMP.w #-$7FF9,D0
000328BC <AmiBlitz3.ab3@22966>    BEQ.w JL_0_D29C
000328BE <AmiBlitz3.ab3@22967>    MOVEQ.l #-$01,D1
000328C2 <AmiBlitz3.ab3@22968> BRA.w do_function2
000328C8 <AmiBlitz3.ab3@22971> JMP sreterr
000328CE <AmiBlitz3.ab3@22975>   CLR.b skipfunc
000328D4 <AmiBlitz3.ab3@22976>   TST.l unusedfunc
000328D8 <AmiBlitz3.ab3@22977>   BEQ 'ex
000328DC <AmiBlitz3.ab3@22978>   MOVEM.l d0-d7/a0-a6,-(a7)
000328E2 <AmiBlitz3.ab3@22979>   MOVE.l unusedfunc,d1
000328E8 <AmiBlitz3.ab3@22980>   LEA ptr_parameterstore,a5
000328EA <AmiBlitz3.ab3@22983>   MOVE.l d1,a0
000328EE <AmiBlitz3.ab3@22984>   LEA 12(a0),a2
000328F0 <AmiBlitz3.ab3@22985>   MOVE.l a5,a1
000328F2 <AmiBlitz3.ab3@22987>   CMPM.b (a1)+,(a2)+
000328F6 <AmiBlitz3.ab3@22988>   BNE 'neq
000328F8 <AmiBlitz3.ab3@22989>   TST.b (a2)
000328FC <AmiBlitz3.ab3@22990>   BNE 'ch
000328FE <AmiBlitz3.ab3@22991>   TST.b (a1)
00032902 <AmiBlitz3.ab3@22992>   BNE 'neq
0003290A <AmiBlitz3.ab3@22993>   MOVE.b #1,skipfunc
0003290E <AmiBlitz3.ab3@22994> BRA 'out
00032910 <AmiBlitz3.ab3@22997>   MOVE.l (a0),d1
00032914 <AmiBlitz3.ab3@22998>   BNE 'ag
00032918 <AmiBlitz3.ab3@23001>   MOVEM.l (a7)+,d0-d7/a0-a6
0003291A <AmiBlitz3.ab3@23004> RTS
00032920 <AmiBlitz3.ab3@23008> JMP dupprocerr
00032926 <AmiBlitz3.ab3@23011> JMP illprocperr
0003292E <AmiBlitz3.ab3@23018>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
00032932 <AmiBlitz3.ab3@23019>    BEQ JUMP_sreterr
00032936 <AmiBlitz3.ab3@23020>   CMP.w #-$7FF9,D0
0003293A <AmiBlitz3.ab3@23021>    BEQ.w do_function_return
00032944 <AmiBlitz3.ab3@23024>   MOVE.w oldqflag,instringon
0003294A <AmiBlitz3.ab3@23025>   MOVEA.l lastsourcepos,A5
00032950 <AmiBlitz3.ab3@23026>   JSR getfunctionreturntype
00032956 <AmiBlitz3.ab3@23027>   JSR get1bytemain
0003295C <AmiBlitz3.ab3@23030>   TST.b declare
00032960 <AmiBlitz3.ab3@23031>   BEQ 'l1
00032968 <AmiBlitz3.ab3@23032>   MOVE.b #1,nowdeclare
0003296E <AmiBlitz3.ab3@23035>   JSR errchx                                           ;writejumpoverfunction
00032974 <AmiBlitz3.ab3@23038>   CLR.b fastfunc
0003297E <AmiBlitz3.ab3@23039>   MOVE.l firstiff,firstiffstore
00032986 <AmiBlitz3.ab3@23040>   CMP.l #"FAST",-1(a5)
0003298A <AmiBlitz3.ab3@23041>   BNE 'nofast
00032990 <AmiBlitz3.ab3@23042>   CMP.b #" ",3(a5)
00032994 <AmiBlitz3.ab3@23043>   BNE 'nofast
00032996 <AmiBlitz3.ab3@23044>   ADDQ.l #3,a5
0003299A <AmiBlitz3.ab3@23047>     CMP.b #" ",(a5)
0003299E <AmiBlitz3.ab3@23048>      BNE 'x1
000329A0 <AmiBlitz3.ab3@23049>     ADDQ #1,a5
000329A4 <AmiBlitz3.ab3@23050> BRA 'x2
000329AA <AmiBlitz3.ab3@23053>   MOVE.l a5,lastsourcepos
000329B2 <AmiBlitz3.ab3@23054>   MOVE.b #1,fastfunc
000329BA <AmiBlitz3.ab3@23057>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
000329BE <AmiBlitz3.ab3@23058> BRA 'noopt
000329C4 <AmiBlitz3.ab3@23060>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
000329C8 <AmiBlitz3.ab3@23061>   BNE 'noopt
000329CA <AmiBlitz3.ab3@23062>   ADDQ.l #4,a5
000329CE <AmiBlitz3.ab3@23065>     CMP.b #" ",(a5)
000329D2 <AmiBlitz3.ab3@23066>      BNE 'x1b
000329D4 <AmiBlitz3.ab3@23067>     ADDQ #1,a5
000329D8 <AmiBlitz3.ab3@23068> BRA 'x2b
000329DE <AmiBlitz3.ab3@23071>   MOVE.l a5,lastsourcepos
000329E4 <AmiBlitz3.ab3@23073>   JSR makename2
000329E8 <AmiBlitz3.ab3@23074> BRA 'l1
000329EE <AmiBlitz3.ab3@23078>   JSR makename2
000329F4 <AmiBlitz3.ab3@23079>   JSR checkused
000329FA <AmiBlitz3.ab3@23080>   TST.b skipfunc
000329FE <AmiBlitz3.ab3@23081>    BEQ 'l1
00032A04 <AmiBlitz3.ab3@23082>   JSR skipme
00032A0A <AmiBlitz3.ab3@23083>   CLR.b fastfunc
00032A0C <AmiBlitz3.ab3@23084> RTS
00032A16 <AmiBlitz3.ab3@23087>   MOVE.l linenumat,prolineat
00032A1C <AmiBlitz3.ab3@23088>   ADDQ.w #1,procnum2
00032A24 <AmiBlitz3.ab3@23089>   MOVE.w procnum2(PC),procnum
00032A2A <AmiBlitz3.ab3@23090>   MOVE.w D1,proceduremode
00032A30 <AmiBlitz3.ab3@23091>   CLR.w locvaroff
00032A34 <AmiBlitz3.ab3@23092>   CMP.w #$7B,D0
00032A38 <AmiBlitz3.ab3@23093>    BNE.w JUMP_syntaxerr
00032A40 <AmiBlitz3.ab3@23094>    MOVE.b #1,infunctioncode
00032A46 <AmiBlitz3.ab3@23095>   MOVEA.l tempvm,A0
00032A4E <AmiBlitz3.ab3@23096>   MOVE.w $C(A0),memlibstat
00032A54 <AmiBlitz3.ab3@23097>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032A58 <AmiBlitz3.ab3@23098>   MOVE.w #$4EF9,D1
00032A5C <AmiBlitz3.ab3@23099>    BSR.w writeword
00032A62 <AmiBlitz3.ab3@23100>    JSR addoff
00032A66 <AmiBlitz3.ab3@23101>    BSR.w writelong
00032A6C <AmiBlitz3.ab3@23102>    JSR findproc                                          ;findproc function
00032A70 <AmiBlitz3.ab3@23103>    BEQ.w JUMP_dupprocerr
00032A76 <AmiBlitz3.ab3@23104>    JSR addlabel
00032A7C <AmiBlitz3.ab3@23105>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032A82 <AmiBlitz3.ab3@23106>    MOVE.b #0,isfunc(a2)
00032A8A <AmiBlitz3.ab3@23107>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032A92 <AmiBlitz3.ab3@23108>   MOVE.l destpointer,$E(A2)
00032A98 <AmiBlitz3.ab3@23109>   MOVE.l A2,currentfunction
00032A9E <AmiBlitz3.ab3@23110>   LEA nops8,A0
00032AA4 <AmiBlitz3.ab3@23111>   LEA dataget,A1
00032AA8 <AmiBlitz3.ab3@23112>    BSR.w pokecode2
00032AAE <AmiBlitz3.ab3@23113>   TST.b debugmode
00032AB2 <AmiBlitz3.ab3@23114>    BEQ.b JL_0_D3AA
00032AB4 <AmiBlitz3.ab3@23115>   MOVEQ.l #$04,D1
00032ABA <AmiBlitz3.ab3@23116>    JSR writetrap
00032AC4 <AmiBlitz3.ab3@23117>   MOVE.l destpointer,proclocals
00032AC8 <AmiBlitz3.ab3@23118>    BSR.w writelong
00032ACC <AmiBlitz3.ab3@23119>    BSR.w writelong
00032AD0 <AmiBlitz3.ab3@23122>    LEA $16(A2),A4
00032AD8 <AmiBlitz3.ab3@23123>   MOVE.b proceduremode+1,$5(A2)
00032ADA <AmiBlitz3.ab3@23124>   MOVEQ.l #$00,D6
00032ADC <AmiBlitz3.ab3@23125>   MOVEQ.l #$00,D5
00032AE2 <AmiBlitz3.ab3@23126>    JSR get1bytemain
00032AE6 <AmiBlitz3.ab3@23127>   CMP.w #$7D,D0
00032AEA <AmiBlitz3.ab3@23128>    BEQ.w JL_0_D466
00032AEE <AmiBlitz3.ab3@23131>    CMP.b #"@",d0
00032AF2 <AmiBlitz3.ab3@23132>    BNE 'l2
00032AF4 <AmiBlitz3.ab3@23133>    MOVE.l a0,-(a7)
00032AFA <AmiBlitz3.ab3@23134>    MOVE.l currentfunction,a0
00032B00 <AmiBlitz3.ab3@23135>    CMP.b #31,$20(a0)                                       ;increase if morepars
00032B04 <AmiBlitz3.ab3@23136>    BNE 'l1
00032B08 <AmiBlitz3.ab3@23137>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032B0E <AmiBlitz3.ab3@23140>    JSR get1bytemain
00032B10 <AmiBlitz3.ab3@23141>    MOVE.l (a7)+,a0
00032B14 <AmiBlitz3.ab3@23144>    BSR.w getparameter
00032B18 <AmiBlitz3.ab3@23145>    BSR.w JL_0_8E3C
00032B20 <AmiBlitz3.ab3@23146>   CMPI.l #$7,$4(A2)
00032B24 <AmiBlitz3.ab3@23147>    BNE.w JL_0_D3F6
00032B2A <AmiBlitz3.ab3@23148>   LEA stbuff,A0
00032B2C <AmiBlitz3.ab3@23149>   MOVE.w D5,D1
00032B2E <AmiBlitz3.ab3@23150>   LSL.w #2,D1
00032B32 <AmiBlitz3.ab3@23151>   MOVE.w D6,$0(A0,D1.W)
00032B38 <AmiBlitz3.ab3@23152>   MOVE.w $4(A3),$2(A0,D1.W)
00032B3A <AmiBlitz3.ab3@23153>   ADDQ.w #1,D5
00032B3C <AmiBlitz3.ab3@23154>   MOVEQ.l #$07,D2
00032B40 <AmiBlitz3.ab3@23155> BRA.w JL_0_D442
00032B46 <AmiBlitz3.ab3@23158> JMP toovarerr
00032B4A <AmiBlitz3.ab3@23161>   MOVE.w #$2940,D1
00032B4C <AmiBlitz3.ab3@23162>   MOVEQ.l #$03,D2
00032B54 <AmiBlitz3.ab3@23163>   BTST #$0,flagmask+1
00032B58 <AmiBlitz3.ab3@23164>    BNE.w JL_0_D430
00032B60 <AmiBlitz3.ab3@23165>   CMPI.l #$100,$4(A2)
00032B64 <AmiBlitz3.ab3@23166>    BCC.w JUMP_illprocperr
00032B68 <AmiBlitz3.ab3@23167>   MOVE.w $6(A2),D2
00032B6C <AmiBlitz3.ab3@23168>   CMP.w #$2,D2
00032B70 <AmiBlitz3.ab3@23169>    BHI.w JL_0_D430
00032B74 <AmiBlitz3.ab3@23170>    BEQ.w JL_0_D42C
00032B78 <AmiBlitz3.ab3@23171>   EORI.w #$3000,D1
00032B7C <AmiBlitz3.ab3@23172> BRA.w JL_0_D430
00032B82 <AmiBlitz3.ab3@23175> JMP more6pard
00032B86 <AmiBlitz3.ab3@23178>   ORI.w #$1000,D1
00032B88 <AmiBlitz3.ab3@23181>   OR.w D6,D1
00032B8E <AmiBlitz3.ab3@23182>   TST.b fpu
00032B92 <AmiBlitz3.ab3@23183>   BEQ 'nofpu
00032B96 <AmiBlitz3.ab3@23184>   CMP.b #5,d2
00032B9A <AmiBlitz3.ab3@23185>   BNE 'nofpu
00032B9E <AmiBlitz3.ab3@23186>   CMP.w #6,d6
00032BA2 <AmiBlitz3.ab3@23187>   BLT 'l10a
00032BA8 <AmiBlitz3.ab3@23188>   CMP.l #newtype_double,a2
00032BAC <AmiBlitz3.ab3@23189>   BEQ JUMP_more6pard
00032BB0 <AmiBlitz3.ab3@23190> BRA 'nofpu
00032BB6 <AmiBlitz3.ab3@23193>   MOVE.l #$f22c6400,d1
00032BBA <AmiBlitz3.ab3@23194>   MOVEM.l d0/a4,-(a7)
00032BBC <AmiBlitz3.ab3@23195>   MOVE.l d6,d0
00032BBE <AmiBlitz3.ab3@23196>   ASL.l #7,d0
00032BC0 <AmiBlitz3.ab3@23197>   OR.w d0,d1
00032BC6 <AmiBlitz3.ab3@23198>   CMP.l #newtype_double,a2
00032BCA <AmiBlitz3.ab3@23199>   BNE 'l1
00032BD0 <AmiBlitz3.ab3@23200>   OR.l #$1000,d1
00032BD4 <AmiBlitz3.ab3@23203>   BSR writelong
00032BD8 <AmiBlitz3.ab3@23204>   MOVE.w 4(a3),d1
00032BDC <AmiBlitz3.ab3@23205>   BSR writeword
00032BE0 <AmiBlitz3.ab3@23206>   MOVEM.l (a7)+,a4/d0
00032BE4 <AmiBlitz3.ab3@23207> BRA JL_0_D442
00032BE6 <AmiBlitz3.ab3@23210>   MOVE.l A4,-(A7)
00032BEA <AmiBlitz3.ab3@23211>    CMP.w #6,d6
00032BEE <AmiBlitz3.ab3@23212>    BLT 'l10
00032BF2 <AmiBlitz3.ab3@23213>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00032BF4 <AmiBlitz3.ab3@23214>    ADD.w d6,d1
00032BFA <AmiBlitz3.ab3@23215>    JSR Atokejsr
00032C00 <AmiBlitz3.ab3@23216>    TST.w dontwrite
00032C04 <AmiBlitz3.ab3@23217>    BNE 'l10
00032C0A <AmiBlitz3.ab3@23218>    MOVE.l data1start,d1
00032C10 <AmiBlitz3.ab3@23219>    MOVE.l destpointer,a4
00032C14 <AmiBlitz3.ab3@23220>    ADD.l d1,-6(a4)
00032C1A <AmiBlitz3.ab3@23221>    MOVE.l destpointer,d1
00032C1C <AmiBlitz3.ab3@23222>    SUBQ.l #6,d1
00032C22 <AmiBlitz3.ab3@23223>    SUB.l destbufferstart,d1
00032C24 <AmiBlitz3.ab3@23225>    MOVE.l d2,-(a7)
00032C26 <AmiBlitz3.ab3@23226>    MOVE.l d1,d2
00032C2C <AmiBlitz3.ab3@23227>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032C2E <AmiBlitz3.ab3@23228>    MOVE.l (a7)+,d2
00032C34 <AmiBlitz3.ab3@23229>    MOVE.l destpointer,a4
00032C38 <AmiBlitz3.ab3@23230>    CMP.w #2,d2
00032C3C <AmiBlitz3.ab3@23231>    BNE 'nw1
00032C42 <AmiBlitz3.ab3@23233>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00032C4A <AmiBlitz3.ab3@23234>    ADD.l #2,-6(a4)
00032C4E <AmiBlitz3.ab3@23237>    CMP.w #1,d2
00032C52 <AmiBlitz3.ab3@23238>    BNE 'nb
00032C58 <AmiBlitz3.ab3@23239>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00032C60 <AmiBlitz3.ab3@23240>    ADD.l #3,-6(a4)
00032C66 <AmiBlitz3.ab3@23243>    MOVE.w $4(a3),-2(a4)
00032C6A <AmiBlitz3.ab3@23244> BRA 'ne1
00032C6E <AmiBlitz3.ab3@23247>   BSR.w writeword                                          ;write storeparameter
00032C72 <AmiBlitz3.ab3@23250>   MOVE.w $4(A3),D1
00032C76 <AmiBlitz3.ab3@23251>    BSR.w writeword
00032C78 <AmiBlitz3.ab3@23254>   MOVEA.l (A7)+,A4
00032C7E <AmiBlitz3.ab3@23257>   CLR.l functionreturntype
00032C80 <AmiBlitz3.ab3@23258>   ADDQ.w #1,D6
00032C84 <AmiBlitz3.ab3@23259>   CMP.w #11,D6                                             ;max function parameters
00032C88 <AmiBlitz3.ab3@23260>    BCC.w JUMP_toovarerr
00032C8E <AmiBlitz3.ab3@23261>   MOVE.l currentfunction,a0
00032C92 <AmiBlitz3.ab3@23262>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00032C94 <AmiBlitz3.ab3@23263>   MOVE.b D2,(A4)+
00032C98 <AmiBlitz3.ab3@23264>   CMP.w #$2C,D0
00032C9C <AmiBlitz3.ab3@23265>    BNE.w JL_0_D45E
00032CA2 <AmiBlitz3.ab3@23266>    JSR get1bytemain
00032CA6 <AmiBlitz3.ab3@23278> BRA.w JL_0_D3C6
00032CAA <AmiBlitz3.ab3@23281>   CMP.w #$7D,D0
00032CAE <AmiBlitz3.ab3@23282>    BNE.w JUMP_syntaxerr
00032CB4 <AmiBlitz3.ab3@23285>   MOVEA.l currentfunction,A2
00032CB6 <AmiBlitz3.ab3@23286>   LSL.w #4,D5
00032CB8 <AmiBlitz3.ab3@23287>   OR.w D5,D6
00032CBC <AmiBlitz3.ab3@23288>   MOVE.b D6,$4(A2)
00032CBE <AmiBlitz3.ab3@23289>   LSR.w #4,D6
00032CC2 <AmiBlitz3.ab3@23290>    BEQ.w JL_0_D4C4
00032CC8 <AmiBlitz3.ab3@23291>   LEA stbuff,A0
00032CCA <AmiBlitz3.ab3@23292>   SUBQ.w #1,D6
00032CCC <AmiBlitz3.ab3@23295>     MOVE.w D6,D1                                           ;function stringpars
00032CCE <AmiBlitz3.ab3@23296>     LSL.w #2,D1                                            ;stringsize was 2
00032CD0 <AmiBlitz3.ab3@23298>       LSL.w #1,d1
00032CD2 <AmiBlitz3.ab3@23299>       ADDQ.w #4,d1
00032CD4 <AmiBlitz3.ab3@23301>     ADDQ.w #8,D1
00032CDA <AmiBlitz3.ab3@23302>     MOVE.w D1,funcst+2
00032CE0 <AmiBlitz3.ab3@23303>     MOVE.l funcst,D1
00032CE4 <AmiBlitz3.ab3@23304>     BSR.w writelong
00032CE6 <AmiBlitz3.ab3@23305>     MOVE.w (A0)+,D1
00032CEA <AmiBlitz3.ab3@23306>     CMP.b #5,d1
00032CEE <AmiBlitz3.ab3@23307>     BLE 's1
00032CF2 <AmiBlitz3.ab3@23308>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00032CF6 <AmiBlitz3.ab3@23309>     BSR writeinstruction
00032CF8 <AmiBlitz3.ab3@23310>     MOVE.w D6,D1                                           ;function stringpars
00032CFA <AmiBlitz3.ab3@23311>     LSL.w #2,D1                                            ;stringsize was 2
00032CFC <AmiBlitz3.ab3@23313>       LSL.w #1,d1
00032CFE <AmiBlitz3.ab3@23315>     ADDQ.w #8,D1
00032D02 <AmiBlitz3.ab3@23316>     BSR writeword
00032D06 <AmiBlitz3.ab3@23317>   BRA 's2
00032D0C <AmiBlitz3.ab3@23320>     OR.w movedna3,D1
00032D10 <AmiBlitz3.ab3@23321>      BSR.w writeword
00032D16 <AmiBlitz3.ab3@23324>     MOVE.w (A0)+,least+2
00032D1C <AmiBlitz3.ab3@23325>     MOVE.l least,D1
00032D20 <AmiBlitz3.ab3@23326>      BSR.w writelong
00032D22 <AmiBlitz3.ab3@23327>     MOVE.l A0,-(A7)
00032D26 <AmiBlitz3.ab3@23328>     MOVE.w #$C700,D1
00032D2A <AmiBlitz3.ab3@23329>      BSR.w Atokejsr
00032D2C <AmiBlitz3.ab3@23330>     MOVEA.l (A7)+,A0
00032D30 <AmiBlitz3.ab3@23331>   DBF D6,JL_0_D482
00032D36 <AmiBlitz3.ab3@23334> JMP get1bytemain
00032D3C <AmiBlitz3.ab3@23338>   MOVE.w dontwrite,D1
00032D40 <AmiBlitz3.ab3@23339>    BNE.w JL_0_D4F6
00032D46 <AmiBlitz3.ab3@23340>   MOVE.l destpointer,-(A7)
00032D4C <AmiBlitz3.ab3@23341>   MOVE.l A0,destpointer
00032D52 <AmiBlitz3.ab3@23342>   MOVE.l linksize,D1
00032D56 <AmiBlitz3.ab3@23343>    BSR.w writelong                                         ;writefunctions jumppos
00032D5C <AmiBlitz3.ab3@23344>    TST.b fastfunc
00032D60 <AmiBlitz3.ab3@23345>    BNE 'skip
00032D64 <AmiBlitz3.ab3@23346>   MOVE.w #$CC00,D1
00032D68 <AmiBlitz3.ab3@23347>    BSR.w tokejsr2                                          ;write clearvars
00032D6E <AmiBlitz3.ab3@23350>   MOVE.l (A7)+,destpointer
00032D70 <AmiBlitz3.ab3@23353> RTS
00032D76 <AmiBlitz3.ab3@23357>   MOVEA.l currentfunction,A2
00032D7A <AmiBlitz3.ab3@23358>   MOVEA.l $E(A2),A0
00032D7E <AmiBlitz3.ab3@23359>   MOVE.w $6(A2),D1
00032D82 <AmiBlitz3.ab3@23360>    BEQ.w JL_0_D538
00032D88 <AmiBlitz3.ab3@23361>   MOVE.w D1,linksize+2
00032D8C <AmiBlitz3.ab3@23362>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00032D90 <AmiBlitz3.ab3@23363>    BNE.w JL_0_D522
00032D92 <AmiBlitz3.ab3@23364>   ADDQ.w #6,A0
00032D96 <AmiBlitz3.ab3@23365>   MOVE.l A0,$E(A2)
00032D9A <AmiBlitz3.ab3@23366> BRA.w JL_0_D4C8
00032D9C <AmiBlitz3.ab3@23369>   MOVE.l A0,-(A7)
00032DA0 <AmiBlitz3.ab3@23370>    BSR.w JL_0_D4C8
00032DA2 <AmiBlitz3.ab3@23371>   MOVEA.l (A7)+,A0
00032DA6 <AmiBlitz3.ab3@23372>   LEA $A(A0),A0
00032DAC <AmiBlitz3.ab3@23373>   MOVEA.l currentfunction,A2
00032DB0 <AmiBlitz3.ab3@23374> BRA.w JL_0_D54A
00032DB4 <AmiBlitz3.ab3@23377>   MOVE.w $8(A2),D1
00032DB8 <AmiBlitz3.ab3@23378>    BNE.w JL_0_D54A
00032DBC <AmiBlitz3.ab3@23379>   LEA $10(A0),A0
00032DC0 <AmiBlitz3.ab3@23380>   MOVE.l A0,$E(A2)
00032DC2 <AmiBlitz3.ab3@23381> RTS
00032DC8 <AmiBlitz3.ab3@23385> JMP errormsg_nofast
00032DCE <AmiBlitz3.ab3@23388>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00032DD2 <AmiBlitz3.ab3@23389>    BNE.w JL_0_D580
00032DD8 <AmiBlitz3.ab3@23390>    TST.b fastfunc
00032DDC <AmiBlitz3.ab3@23391>    BNE JUMP_errormsg_nofast
00032DE2 <AmiBlitz3.ab3@23392>   MOVE.l destpointer,-(A7)
00032DE8 <AmiBlitz3.ab3@23393>   MOVE.l A0,destpointer
00032DEC <AmiBlitz3.ab3@23394>   MOVE.w #$4EB9,D1
00032DF0 <AmiBlitz3.ab3@23395>    BSR.w writeword
00032DF6 <AmiBlitz3.ab3@23396>    JSR addoff
00032DFA <AmiBlitz3.ab3@23397>    BSR.w writelong
00032DFC <AmiBlitz3.ab3@23398>   MOVEA.l (A7)+,A0
00032E02 <AmiBlitz3.ab3@23399>   MOVEA.l destpointer,A1
00032E04 <AmiBlitz3.ab3@23400>   MOVE.l A0,-(A1)
00032E0A <AmiBlitz3.ab3@23401>   MOVE.l A0,destpointer
00032E0E <AmiBlitz3.ab3@23404>   MOVE.w $8(A2),D4
00032E12 <AmiBlitz3.ab3@23405>    BPL.w JL_0_D59E
00032E16 <AmiBlitz3.ab3@23406>   MOVE.w #$C004,D1
00032E1A <AmiBlitz3.ab3@23407>    BSR.w tokejsr2
00032E20 <AmiBlitz3.ab3@23408>   MOVEA.l currentfunction,A2
00032E24 <AmiBlitz3.ab3@23409>   MOVE.w $8(A2),D4
00032E28 <AmiBlitz3.ab3@23410>   ANDI.w #$7FFF,D4
00032E2C <AmiBlitz3.ab3@23413>    BEQ.w JL_0_D5E0
00032E30 <AmiBlitz3.ab3@23414>   MOVE.b $4(A2),D1
00032E34 <AmiBlitz3.ab3@23415>   ANDI.w #$F,D1
00032E36 <AmiBlitz3.ab3@23416>   MOVE.w D1,-(A7)
00032E3A <AmiBlitz3.ab3@23417>   CMP.w #$5,D1
00032E3E <AmiBlitz3.ab3@23418>    BCS.w JL_0_D5BC
00032E42 <AmiBlitz3.ab3@23419>   MOVE.w #$2F04,D1
00032E46 <AmiBlitz3.ab3@23420>    BSR.w writeword
00032E4C <AmiBlitz3.ab3@23423>   MOVE.l locdatast,D3
00032E52 <AmiBlitz3.ab3@23424>    JSR datastart
00032E56 <AmiBlitz3.ab3@23425>   MOVE.w #$C501,D1
00032E5A <AmiBlitz3.ab3@23426>    BSR.w tokejsr2
00032E5C <AmiBlitz3.ab3@23427>   MOVE.w (A7)+,D1
00032E60 <AmiBlitz3.ab3@23428>   CMP.w #$5,D1
00032E64 <AmiBlitz3.ab3@23429>    BCS.w JL_0_D5E0
00032E68 <AmiBlitz3.ab3@23430>   MOVE.w #$281F,D1
00032E6C <AmiBlitz3.ab3@23431>    BSR.w writeword
00032E70 <AmiBlitz3.ab3@23433>   MOVE.w #$4E75,D1
00032E74 <AmiBlitz3.ab3@23434> BRA.w writeword
00032E7A <AmiBlitz3.ab3@23438>   LEA mwait,A0
00032E80 <AmiBlitz3.ab3@23439>   LEA mwaitf,A1
00032E84 <AmiBlitz3.ab3@23440> BRA.w pokecode
00032E8A <AmiBlitz3.ab3@23444> JMP laberr
00032E8E <AmiBlitz3.ab3@23447>   CMP.w #$2E,D0
00032E92 <AmiBlitz3.ab3@23448>   BNE.w JUMP_syntaxerr
00032E98 <AmiBlitz3.ab3@23449>   JSR getparameter2
00032E9C <AmiBlitz3.ab3@23450>   BEQ.w JUMP_laberr
00032EA2 <AmiBlitz3.ab3@23451>   LEA newtypebase,A2
00032EA8 <AmiBlitz3.ab3@23452>   JSR findtype
00032EAC <AmiBlitz3.ab3@23453>   BNE.w JL_0_D626
00032EB4 <AmiBlitz3.ab3@23454>   CMPI.l #MaxByte,$4(A2)
00032EB8 <AmiBlitz3.ab3@23455>   BNE.w JUMP_typeerr
00032EBC <AmiBlitz3.ab3@23456> BRA.w JL_0_D62A
00032EC2 <AmiBlitz3.ab3@23459> JMP typeerr
00032EC8 <AmiBlitz3.ab3@23462>   JSR addlabel
00032ECC <AmiBlitz3.ab3@23465>   CLR.l $4(A2)
00032ED2 <AmiBlitz3.ab3@23466>   MOVE.l A2,thistype
00032ED8 <AmiBlitz3.ab3@23467>   CLR.l prevtype
00032EDE <AmiBlitz3.ab3@23468>   CLR.w typelen
00032EE4 <AmiBlitz3.ab3@23469>   CLR.w linemode
00032EEA <AmiBlitz3.ab3@23470>   JSR reget
00032EEE <AmiBlitz3.ab3@23471>   BNE.w typemode
00032EF0 <AmiBlitz3.ab3@23472> RTS
00032EF4 <AmiBlitz3.ab3@23475>   CMP.w #-$7FFE,D0
00032EF8 <AmiBlitz3.ab3@23476>   BEQ.w JL_0_D82E
00032F02 <AmiBlitz3.ab3@23478>   MOVE.w oldqflag,instringon
00032F08 <AmiBlitz3.ab3@23479>   MOVEA.l lastsourcepos,A5
00032F0A <AmiBlitz3.ab3@23480>   MOVEQ.l #$00,D6
00032F0E <AmiBlitz3.ab3@23481>   CMP.w #$2A,D0
00032F12 <AmiBlitz3.ab3@23482>   BNE.w JL_0_D670
00032F14 <AmiBlitz3.ab3@23483>   MOVEQ.l #$01,D6
00032F1A <AmiBlitz3.ab3@23484>   JSR get1bytemain
00032F1E <AmiBlitz3.ab3@23485> BRA.w JL_0_D67E
00032F22 <AmiBlitz3.ab3@23488>   CMP.w #$40,D0
00032F26 <AmiBlitz3.ab3@23489>   BNE.w JL_0_D67E
00032F28 <AmiBlitz3.ab3@23490>   MOVEQ.l #$05,D6
00032F2E <AmiBlitz3.ab3@23491>   JSR get1bytemain
00032F34 <AmiBlitz3.ab3@23494>   MOVE.w D6,flagmask
00032F3A <AmiBlitz3.ab3@23495>   JSR getparameter2
00032F3E <AmiBlitz3.ab3@23496>   BEQ.w JUMP_syntaxerr
00032F44 <AmiBlitz3.ab3@23497>   MOVEA.l thistype,A2
00032F46 <AmiBlitz3.ab3@23498>   ADDQ.w #4,A2
00032F4C <AmiBlitz3.ab3@23499>   JSR findvariable2
00032F50 <AmiBlitz3.ab3@23500>   BEQ.w JUMP_dupofferr
00032F56 <AmiBlitz3.ab3@23501>   JSR addlabel
00032F58 <AmiBlitz3.ab3@23502>   MOVE.l A2,-(A7)
00032F5C <AmiBlitz3.ab3@23503>   CMP.w #$2E,D0
00032F60 <AmiBlitz3.ab3@23504>    BEQ.w JL_0_D6CE
00032F64 <AmiBlitz3.ab3@23505>   CMP.w #$24,D0
00032F68 <AmiBlitz3.ab3@23506>    BNE.w JL_0_D6C0
00032F6E <AmiBlitz3.ab3@23507>   MOVE.l #newtype_string,D2
00032F74 <AmiBlitz3.ab3@23508>    JSR get1bytemain
00032F78 <AmiBlitz3.ab3@23509> BRA.w JL_0_D710
00032F7E <AmiBlitz3.ab3@23512> JMP dupofferr
00032F84 <AmiBlitz3.ab3@23515>   MOVE.l prevtype,D2
00032F88 <AmiBlitz3.ab3@23516>   BEQ.w JUMP_notypeerr
00032F8C <AmiBlitz3.ab3@23517> BRA.w JL_0_D706
00032F92 <AmiBlitz3.ab3@23520> JMP notypeerr
00032F98 <AmiBlitz3.ab3@23523>   JSR getparameter2
00032F9C <AmiBlitz3.ab3@23524>    BEQ.w JUMP_syntaxerr
00032FA2 <AmiBlitz3.ab3@23525>   LEA newtypebase,A2
00032FA8 <AmiBlitz3.ab3@23526>    JSR findtype
00032FAC <AmiBlitz3.ab3@23527>    BEQ.w JL_0_D704
00032FB4 <AmiBlitz3.ab3@23528>   BTST #$0,flagmask+1
00032FB8 <AmiBlitz3.ab3@23529>    BEQ.w JUMP_notypeerr
00032FBE <AmiBlitz3.ab3@23530>   JSR addlabel
00032FC6 <AmiBlitz3.ab3@23533>   MOVE.w linenumat+2,$8(A2)
00032FCE <AmiBlitz3.ab3@23534>   MOVE.l #MaxByte,$4(A2)
00032FD0 <AmiBlitz3.ab3@23537>   MOVE.l A2,D2
00032FD6 <AmiBlitz3.ab3@23540>   CMP.l #newtype_byte,D2
00032FDA <AmiBlitz3.ab3@23541>    BEQ.w JL_0_D71E
00032FE0 <AmiBlitz3.ab3@23544>   ADDQ.w #1,typelen
00032FE8 <AmiBlitz3.ab3@23545>   BCLR #$0,typelen+1
00032FEA <AmiBlitz3.ab3@23548>   MOVEQ.l #$00,D3
00032FEC <AmiBlitz3.ab3@23549>   MOVEA.l D2,A2
00032FF2 <AmiBlitz3.ab3@23550>   MOVE.l A2,prevtype
00032FF6 <AmiBlitz3.ab3@23551>   MOVE.w $8(A2),D3
00032FF8 <AmiBlitz3.ab3@23552>   MOVEA.l (A7)+,A2
00032FFC <AmiBlitz3.ab3@23553>   MOVE.l D2,$A(A2)
00032FFE <AmiBlitz3.ab3@23554>   MOVEQ.l #$00,D4
00033004 <AmiBlitz3.ab3@23555>   MOVE.w typelen,D4
00033008 <AmiBlitz3.ab3@23556>   MOVE.w D4,$4(A2)
00033010 <AmiBlitz3.ab3@23557>   BTST #$0,flagmask+1
00033014 <AmiBlitz3.ab3@23558>    BEQ.w JL_0_D74C
00033016 <AmiBlitz3.ab3@23559>   MOVEQ.l #$04,D3
0003301A <AmiBlitz3.ab3@23562>   CMP.w #$5B,D0
0003301E <AmiBlitz3.ab3@23563>    BNE.w JL_0_D782
00033022 <AmiBlitz3.ab3@23564>   MOVEM.l D3-D4/A2,-(A7)
00033026 <AmiBlitz3.ab3@23565>    BSR.w AJL_0_BF6E
0003302A <AmiBlitz3.ab3@23566>   CMP.w #$5D,D0
0003302E <AmiBlitz3.ab3@23567>    BNE.w JUMP_syntaxerr
00033030 <AmiBlitz3.ab3@23568>   TST.w D6
00033034 <AmiBlitz3.ab3@23569>    BNE.w JUMP_fpconerr
00033036 <AmiBlitz3.ab3@23570>   MOVE.l D3,D1
0003303A <AmiBlitz3.ab3@23571>   MOVEM.l (A7)+,D3-D4/A2
00033040 <AmiBlitz3.ab3@23572>    JSR get1bytemain
00033044 <AmiBlitz3.ab3@23573>   MOVE.w D1,$8(A2)
00033048 <AmiBlitz3.ab3@23574>   MULU.l d1,d3                                             ;>32k fix was mulu.w
00033050 <AmiBlitz3.ab3@23575>   ORI.w #$2,flagmask
00033052 <AmiBlitz3.ab3@23578>   ADD.l D3,D4
00033058 <AmiBlitz3.ab3@23581>     CMP.l #65532,d4
0003305C <AmiBlitz3.ab3@23586>   BCC JUMP_toolongerr
00033064 <AmiBlitz3.ab3@23587>   MOVE.w flagmask,$6(A2)
0003306A <AmiBlitz3.ab3@23588>   MOVE.w D4,typelen
0003306C <AmiBlitz3.ab3@23589> RTS
00033072 <AmiBlitz3.ab3@23592> JMP badenderr
00033078 <AmiBlitz3.ab3@23595> JMP noiferr
0003307E <AmiBlitz3.ab3@23598> JMP toolongerr
00033084 <AmiBlitz3.ab3@23601> JMP fpconerr
0003308A <AmiBlitz3.ab3@23604>   MOVE.l firstiff,D0
0003308E <AmiBlitz3.ab3@23605>    BEQ.w JUMP_noiferr
00033090 <AmiBlitz3.ab3@23606>   MOVEA.l D0,A0
00033094 <AmiBlitz3.ab3@23607>   MOVE.w $C(A0),D0
00033098 <AmiBlitz3.ab3@23608>   ANDI.w #$FF,D0
0003309A <AmiBlitz3.ab3@23609>   CMP.w D0,D1
0003309E <AmiBlitz3.ab3@23610>    BNE.w JUMP_badenderr
000330A2 <AmiBlitz3.ab3@23613>   CMP.w #$1,D1
000330A6 <AmiBlitz3.ab3@23614>   BNE.w JL_0_D7D8
000330AA <AmiBlitz3.ab3@23615>   MOVE.w #$6000,D1
000330B0 <AmiBlitz3.ab3@23618>     TST.b fast
000330B4 <AmiBlitz3.ab3@23619>     BEQ 'l1
000330BA <AmiBlitz3.ab3@23620>     OR.l #$ff,d1
000330BE <AmiBlitz3.ab3@23624>   BSR.w writeword
000330C4 <AmiBlitz3.ab3@23625>   MOVEA.l destpointer,A1
000330C8 <AmiBlitz3.ab3@23626>   MOVE.l $4(A0),D1
000330CA <AmiBlitz3.ab3@23627>   SUB.l A1,D1
000330D0 <AmiBlitz3.ab3@23630>     TST.b fast
000330D4 <AmiBlitz3.ab3@23631>     BEQ 'l2
000330D8 <AmiBlitz3.ab3@23632>     BSR writelong
000330DC <AmiBlitz3.ab3@23633>   BRA JL_0_D7D8
000330E0 <AmiBlitz3.ab3@23637>   BSR.w writeword
000330E4 <AmiBlitz3.ab3@23640>   MOVEA.l $8(A0),A1                                        ;write if branch destination
000330EA <AmiBlitz3.ab3@23641>   MOVE.l destpointer,D1
000330EC <AmiBlitz3.ab3@23642>   SUB.l A1,D1
000330F2 <AmiBlitz3.ab3@23645>     TST.b fast
000330F6 <AmiBlitz3.ab3@23646>     BEQ 'l1
000330F8 <AmiBlitz3.ab3@23647>     ADDQ.l #4,D1
000330FE <AmiBlitz3.ab3@23648>     MOVE.w dontwrite,D0
00033102 <AmiBlitz3.ab3@23649>     BNE.w JL_0_D7FE
00033106 <AmiBlitz3.ab3@23650>     MOVE.l d1,-$4(a1)
0003310A <AmiBlitz3.ab3@23651>   BRA JL_0_D7FE
0003310C <AmiBlitz3.ab3@23655>   ADDQ.l #2,d1
00033112 <AmiBlitz3.ab3@23656>   TST.w dontwrite
00033116 <AmiBlitz3.ab3@23657>   BNE JL_0_D7FE
0003311C <AmiBlitz3.ab3@23658>   CMP.l #MinWordSgnd,D1
00033120 <AmiBlitz3.ab3@23659>   BCC.w JUMP_bigiferr
00033124 <AmiBlitz3.ab3@23660>   MOVE.w D1,-$2(A1)
00033126 <AmiBlitz3.ab3@23663> RTS
0003312C <AmiBlitz3.ab3@23666> JMP bigiferr
00033136 <AmiBlitz3.ab3@23671>   MOVE.w oldqflag,instringon
0003313C <AmiBlitz3.ab3@23672>   MOVEA.l lastsourcepos,A5
0003313E <AmiBlitz3.ab3@23675>   MOVEQ.l #$01,D1
00033142 <AmiBlitz3.ab3@23676> BRA.w JL_0_D810
0003314C <AmiBlitz3.ab3@23680>   MOVE.w oldqflag,instringon
00033152 <AmiBlitz3.ab3@23681>   MOVEA.l lastsourcepos,A5
00033154 <AmiBlitz3.ab3@23684>   MOVEQ.l #$00,D1
00033158 <AmiBlitz3.ab3@23687>   BSR.w JL_0_D79E
0003315C <AmiBlitz3.ab3@23688>   BSR.w AJL_0_D81C
00033162 <AmiBlitz3.ab3@23689> JMP get1bytemain
00033168 <AmiBlitz3.ab3@23692>   MOVE.l (A0),firstiff
0003316A <AmiBlitz3.ab3@23693>   MOVEA.l A0,A1
0003316C <AmiBlitz3.ab3@23694>   MOVEQ.l #$0E,D0
00033172 <AmiBlitz3.ab3@23695>   MOVEA.l _execbase,A6
00033178 <AmiBlitz3.ab3@23696>   MOVE.l mempool,a0
0003317C <AmiBlitz3.ab3@23697> JMP _FreePooled(A6)
00033182 <AmiBlitz3.ab3@23701>   JSR get1bytemain
00033186 <AmiBlitz3.ab3@23704>   BEQ.w JL_0_D980
0003318E <AmiBlitz3.ab3@23705>   CMP.l #"noa7",-1(a5)
00033192 <AmiBlitz3.ab3@23706>   BNE 'l1
00033198 <AmiBlitz3.ab3@23707>   JSR get1bytemain
0003319E <AmiBlitz3.ab3@23708>   JSR get1bytemain
000331A4 <AmiBlitz3.ab3@23709>   JSR get1bytemain
000331AC <AmiBlitz3.ab3@23710>   MOVE.w #$3a,lastchar
000331B0 <AmiBlitz3.ab3@23711> BRA JL_0_D980
000331B6 <AmiBlitz3.ab3@23714>   CMP.w #"d0",-1(a5)
000331BA <AmiBlitz3.ab3@23715>   BNE 'l2
000331C2 <AmiBlitz3.ab3@23716>   MOVE.b #1,returncode
000331C8 <AmiBlitz3.ab3@23717>   CLR.w lastchar
000331CC <AmiBlitz3.ab3@23718> BRA JL_0_D980
000331D0 <AmiBlitz3.ab3@23721>   CMP.w #$80d7,d0
000331D4 <AmiBlitz3.ab3@23722>   BNE JL_0_D836
000331DA <AmiBlitz3.ab3@23723>   JSR skiprest
000331DC <AmiBlitz3.ab3@23724> RTS
000331E0 <AmiBlitz3.ab3@23727>   BSR.w JL_0_D844
000331E6 <AmiBlitz3.ab3@23728>   JSR reget
000331EA <AmiBlitz3.ab3@23729>   BNE.w JL_0_D836
000331EC <AmiBlitz3.ab3@23730> RTS
000331F0 <AmiBlitz3.ab3@23733>   CMP.w #-$7FFF,D0
000331F4 <AmiBlitz3.ab3@23734>    BNE.w JL_0_D87E
000331FA <AmiBlitz3.ab3@23735>   MOVE.w linemode,D1
000331FE <AmiBlitz3.ab3@23736>    BNE.w JUMP_modeerr
00033204 <AmiBlitz3.ab3@23737>   ADDQ.w #1,typelen
0003320C <AmiBlitz3.ab3@23738>   BCLR #$0,typelen+1
00033212 <AmiBlitz3.ab3@23739>   MOVEA.l thistype,A0
0003321A <AmiBlitz3.ab3@23740>   MOVE.w typelen,$8(A0)
00033222 <AmiBlitz3.ab3@23741>   MOVE.w #$FFFF,linemode
00033228 <AmiBlitz3.ab3@23742> JMP get1bytemain
0003322E <AmiBlitz3.ab3@23745> JMP modeerr
00033232 <AmiBlitz3.ab3@23748>   CMP.w #-$7FF5,D0
00033236 <AmiBlitz3.ab3@23749>    BEQ.w JL_0_D80E
0003323A <AmiBlitz3.ab3@23750>   CMP.w #-$7FF4,D0
0003323E <AmiBlitz3.ab3@23751>    BEQ.w JL_0_D804
00033242 <AmiBlitz3.ab3@23752>   CMP.w #-$7FF8,D0
00033246 <AmiBlitz3.ab3@23753>    BNE.w JL_0_D89A
0003324A <AmiBlitz3.ab3@23756> BRA.w JL_0_D9E8
00033250 <AmiBlitz3.ab3@23759> JMP interr3
00033254 <AmiBlitz3.ab3@23762>   CMP.w #-$7FF7,D0
00033258 <AmiBlitz3.ab3@23763>    BNE.w JL_0_D8C8
0003325E <AmiBlitz3.ab3@23764>    TST.b fpu
00033262 <AmiBlitz3.ab3@23765>    BEQ 'nof
00033268 <AmiBlitz3.ab3@23766>    MOVEA.l currentfunction,A0
0003326E <AmiBlitz3.ab3@23767>    CMP.l #0,a0
00033272 <AmiBlitz3.ab3@23768>    BEQ 'nof
00033278 <AmiBlitz3.ab3@23769>    CMP.b #5,$5(a0)
0003327C <AmiBlitz3.ab3@23770>     BNE 'nof
00033282 <AmiBlitz3.ab3@23771>    MOVE.l #$f23c5000,d1
00033286 <AmiBlitz3.ab3@23772>    BSR writelong
0003328A <AmiBlitz3.ab3@23773>    MOVE.w #0,d1
0003328E <AmiBlitz3.ab3@23774>    BSR writeword
00033292 <AmiBlitz3.ab3@23777>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
00033296 <AmiBlitz3.ab3@23778>    BSR.w writeword
0003329C <AmiBlitz3.ab3@23779>   MOVEA.l currentfunction,A0
000332A2 <AmiBlitz3.ab3@23780>   CMP.l #0,a0
000332A6 <AmiBlitz3.ab3@23781>   BEQ JL_0_D896
000332AC <AmiBlitz3.ab3@23782>   MOVE.l destpointer,d1
000332B0 <AmiBlitz3.ab3@23783>   SUB.l $e(a0),d1
000332B4 <AmiBlitz3.ab3@23784>   MOVE.l d1,isfunc+1(a0)
000332BA <AmiBlitz3.ab3@23785>   CMPI.b #$7,$5(A0)
000332BE <AmiBlitz3.ab3@23786>    BNE.w JL_0_D896
000332C4 <AmiBlitz3.ab3@23787>   MOVE.w putstlen,D1
000332C8 <AmiBlitz3.ab3@23788>    BSR.w writeword
000332CC <AmiBlitz3.ab3@23789> BRA.w JL_0_D896
000332D2 <AmiBlitz3.ab3@23792> JMP interr
000332D6 <AmiBlitz3.ab3@23795>  CMP.w #-$7FD0,D0
000332DA <AmiBlitz3.ab3@23796>    BNE.w JL_0_D966
000332E0 <AmiBlitz3.ab3@23797>   MOVE.w proceduremode,D1
000332E4 <AmiBlitz3.ab3@23798>    BNE.w JUMP_interr3
000332EA <AmiBlitz3.ab3@23799>   TST.b debugmode
000332EE <AmiBlitz3.ab3@23800>    BEQ.w JL_0_D90A
000332F0 <AmiBlitz3.ab3@23801>   MOVEQ.l #$03,D1
000332F6 <AmiBlitz3.ab3@23802>    JSR writetrap
000332FC <AmiBlitz3.ab3@23803>   MOVE.w dontwrite,D1
00033300 <AmiBlitz3.ab3@23804>    BNE.w JL_0_D90A
00033306 <AmiBlitz3.ab3@23805>   MOVEA.l intcleanat,A0
0003330C <AmiBlitz3.ab3@23806>   MOVE.l destpointer,(A0)
00033310 <AmiBlitz3.ab3@23807>   MOVE.w #$C30C,D1
00033314 <AmiBlitz3.ab3@23808>    BSR.w Atokejsr
0003331A <AmiBlitz3.ab3@23811>   MOVE.w intstring,D1
0003331E <AmiBlitz3.ab3@23812>    BEQ.w JUMP_interr
00033322 <AmiBlitz3.ab3@23813>    BPL.w JL_0_D934
00033328 <AmiBlitz3.ab3@23814>   MOVE.w intlevel,D1
0003332C <AmiBlitz3.ab3@23815>   ORI.w #$7200,D1
00033330 <AmiBlitz3.ab3@23816>    BSR.w writeword
00033334 <AmiBlitz3.ab3@23817>   MOVE.w #$C103,D1
00033338 <AmiBlitz3.ab3@23818>    BSR.w Atokejsr
0003333E <AmiBlitz3.ab3@23819>   CLR.w intlevel
00033344 <AmiBlitz3.ab3@23822>  CLR.w intstring
0003334A <AmiBlitz3.ab3@23823>   MOVE.l intfin,D1
0003334E <AmiBlitz3.ab3@23824>    BSR.w writelong
00033354 <AmiBlitz3.ab3@23825>   MOVE.l #$70004E75,D1
00033358 <AmiBlitz3.ab3@23826>    BSR.w writelong
0003335E <AmiBlitz3.ab3@23827>   MOVE.w dontwrite,D1
00033362 <AmiBlitz3.ab3@23828>    BNE.w JL_0_D962
00033368 <AmiBlitz3.ab3@23829>   MOVEA.l intjmpat,A0
0003336C <AmiBlitz3.ab3@23830>   MOVE.l destpointer(PC),(A0)
00033372 <AmiBlitz3.ab3@23833> JMP get1bytemain
00033376 <AmiBlitz3.ab3@23837>   CMP.w #-$7FF2,D0
0003337A <AmiBlitz3.ab3@23838>    BEQ.w doendsel
0003337E <AmiBlitz3.ab3@23839>   CMP.w #-$7F4C,D0
00033382 <AmiBlitz3.ab3@23840>    BNE.w JL_0_D97C
00033388 <AmiBlitz3.ab3@23841> JMP doendseterr
0003338E <AmiBlitz3.ab3@23845> JMP syntaxerr
00033394 <AmiBlitz3.ab3@23849>   TST.w dirmode
00033398 <AmiBlitz3.ab3@23850>   BNE.w JUMP_baddirerr
0003339C <AmiBlitz3.ab3@23851>   MOVE.w #$C800,D1
000333A2 <AmiBlitz3.ab3@23852>   JSR Atokejsr                                            ;end
000333AA <AmiBlitz3.ab3@23853>   CMP.l #"noa7",-4(a5)
000333AE <AmiBlitz3.ab3@23854>   BNE 'l10
000333B4 <AmiBlitz3.ab3@23855>   TST.w dontwrite
000333B8 <AmiBlitz3.ab3@23856>   BNE 'l10
000333BE <AmiBlitz3.ab3@23857>   MOVE.l destpointer,d1
000333C0 <AmiBlitz3.ab3@23858>   SUBQ.l #4,d1
000333C2 <AmiBlitz3.ab3@23859>   MOVE.l a0,-(a7)
000333C4 <AmiBlitz3.ab3@23860>   MOVE.l d1,a0
000333C6 <AmiBlitz3.ab3@23861>   MOVE.l (a0),a0
000333CC <AmiBlitz3.ab3@23862>   MOVE.l #$60000002,(a0)+
000333D0 <AmiBlitz3.ab3@23863>   MOVE.w #$588f,(a0)
000333D2 <AmiBlitz3.ab3@23864>   MOVE.l (a7)+,a0
000333D4 <AmiBlitz3.ab3@23867> RTS
000333DA <AmiBlitz3.ab3@23871>   TST.w dirmode                                            ;stop
000333DE <AmiBlitz3.ab3@23872>   BNE.w JUMP_baddirerr
000333E0 <AmiBlitz3.ab3@23873>   MOVE.w d0,d1
000333E4 <AmiBlitz3.ab3@23874>   BEQ 'l10
000333E8 <AmiBlitz3.ab3@23875>   CMP.b #$3a,d0
000333EC <AmiBlitz3.ab3@23876>   BEQ 'l10
000333F2 <AmiBlitz3.ab3@23877>   JSR get1bytemain
000333F8 <AmiBlitz3.ab3@23880>   TST.b debugmode
000333FC <AmiBlitz3.ab3@23881>   BEQ.w newstop
00033400 <AmiBlitz3.ab3@23882>   MOVE.w #$D501,D1
00033404 <AmiBlitz3.ab3@23883> BRA.w Atokejsr
00033406 <AmiBlitz3.ab3@23887>     RTS
00033408 <AmiBlitz3.ab3@23889>   MOVE.w d1,d0
0003340C <AmiBlitz3.ab3@23890>   BEQ 'l10
00033410 <AmiBlitz3.ab3@23891>   CMP.b #$3a,d0
00033414 <AmiBlitz3.ab3@23892>   BEQ 'l10
00033418 <AmiBlitz3.ab3@23893>   SUB.b #$30,d0
0003341C <AmiBlitz3.ab3@23894>   MOVE.w #$4e40,d1
00033420 <AmiBlitz3.ab3@23895> BRA 'l11
00033424 <AmiBlitz3.ab3@23898>   MOVE.w #$4e4a,d1
00033428 <AmiBlitz3.ab3@23899> BRA writeword
0003342A <AmiBlitz3.ab3@23902>   ADD.b d0,d1
0003342E <AmiBlitz3.ab3@23903> BRA writeword
00033434 <AmiBlitz3.ab3@23907> JMP badconterr
00033438 <AmiBlitz3.ab3@23910>   MOVE.w #$4E71,D1
0003343C <AmiBlitz3.ab3@23911> BRA.w writeword
00033442 <AmiBlitz3.ab3@23914>   MOVEA.l firstfor,A2
00033448 <AmiBlitz3.ab3@23915>   CLR.l firstfor
0003344E <AmiBlitz3.ab3@23916>   MOVEA.l _execbase,A6
00033452 <AmiBlitz3.ab3@23919>   CMPA.w #$0,A2
00033456 <AmiBlitz3.ab3@23920>   BEQ.w JL_0_D9E6
00033458 <AmiBlitz3.ab3@23921>   MOVEA.l A2,A1
0003345A <AmiBlitz3.ab3@23922>   MOVEA.l (A1),A2
0003345C <AmiBlitz3.ab3@23923>   MOVEQ.l #$00,D0
00033462 <AmiBlitz3.ab3@23924>   MOVE.l mempool2,a0
00033466 <AmiBlitz3.ab3@23925>   MOVE.b $10(A1),D0
0003346A <AmiBlitz3.ab3@23926>   JSR _FreePooled(A6)                                      ;freememfor_error
0003346E <AmiBlitz3.ab3@23927> BRA.w JL_0_D9CC
00033470 <AmiBlitz3.ab3@23930> RTS
00033476 <AmiBlitz3.ab3@23934> JMP badpenderr
0003347C <AmiBlitz3.ab3@23940>   MOVE.w proceduremode,D1
00033480 <AmiBlitz3.ab3@23941>    BEQ.w JUMP_badpenderr
00033486 <AmiBlitz3.ab3@23943>   MOVE.w dontwrite,D1
0003348A <AmiBlitz3.ab3@23944>    BNE.w JL_0_DA1A
00033490 <AmiBlitz3.ab3@23945>   MOVEA.l firstpend,A2
00033494 <AmiBlitz3.ab3@23948>   CMPA.w #$0,A2
00033498 <AmiBlitz3.ab3@23949>    BEQ.w JL_0_DA1A
0003349C <AmiBlitz3.ab3@23950>   MOVEA.l $4(A2),A0
000334A2 <AmiBlitz3.ab3@23951>   MOVE.l destpointer,(A0)
000334A4 <AmiBlitz3.ab3@23952>   MOVEA.l (A2),A2
000334A8 <AmiBlitz3.ab3@23953> BRA.w JL_0_DA02
000334AE <AmiBlitz3.ab3@23956>   TST.b debugmode
000334B2 <AmiBlitz3.ab3@23957>    BEQ.b JL_0_DA2A
000334B4 <AmiBlitz3.ab3@23958>   MOVEQ.l #$05,D1
000334BA <AmiBlitz3.ab3@23959>   JSR writetrap
000334C0 <AmiBlitz3.ab3@23962>   MOVEA.l firstlocal,A2                                    ;firstlocal
000334C6 <AmiBlitz3.ab3@23963>   JSR calcstatic2b                                           ;calcstatic
000334CC <AmiBlitz3.ab3@23964>   MOVEA.l currentfunction,A0
000334D2 <AmiBlitz3.ab3@23965>   MOVE.l destpointer,d1
000334D6 <AmiBlitz3.ab3@23966>   SUB.l $e(a0),d1
000334DA <AmiBlitz3.ab3@23967>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
000334DE <AmiBlitz3.ab3@23968>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
000334E4 <AmiBlitz3.ab3@23969>   MOVE.l D3,locdatast
000334EA <AmiBlitz3.ab3@23970>   MOVEA.l tempvm,A1
000334F0 <AmiBlitz3.ab3@23971>  CLR.b infunctioncode
000334F6 <AmiBlitz3.ab3@23972>   MOVE.l firstiffstore,d1
000334FC <AmiBlitz3.ab3@23973>   CMP.l firstiff,d1
00033500 <AmiBlitz3.ab3@23974>   BNE JUMP_noenderr
00033504 <AmiBlitz3.ab3@23975>   TST.w $C(A1)                                             ;dim
00033508 <AmiBlitz3.ab3@23976>    BPL.w JL_0_DA64
0003350E <AmiBlitz3.ab3@23977>  BSET #$7,$8(A0)
00033512 <AmiBlitz3.ab3@23978>   MOVE.w #$C005,D1
00033516 <AmiBlitz3.ab3@23979>    BSR.w tokejsr2                                          ;writefreememstatement
0003351A <AmiBlitz3.ab3@23980> BRA.w JL_0_DA6C
00033520 <AmiBlitz3.ab3@23983> JMP noenderr
00033528 <AmiBlitz3.ab3@23986>   MOVE.w memlibstat,$C(A1)
0003352E <AmiBlitz3.ab3@23989>   MOVEA.l currentfunction,A0
00033532 <AmiBlitz3.ab3@23990>   MOVE.l $E(A0),-(A7)
0003353A <AmiBlitz3.ab3@23991>   MOVE.w locvaroff,$6(A0)
00033540 <AmiBlitz3.ab3@23992>   BCLR #$1,$7(A0)
00033546 <AmiBlitz3.ab3@23993>   BCLR #$0,$7(A0)
0003354C <AmiBlitz3.ab3@23994>   CMPI.b #$7,$5(A0)
00033550 <AmiBlitz3.ab3@23995>    BNE.w JL_0_DA9E
00033556 <AmiBlitz3.ab3@23996>   MOVE.w getstlen,D1
0003355A <AmiBlitz3.ab3@23997>    BSR.w writeword
0003355E <AmiBlitz3.ab3@24000>   TST.w $6(A0)
00033562 <AmiBlitz3.ab3@24001>    BEQ.w JL_0_DAB8
00033566 <AmiBlitz3.ab3@24002>   MOVE.w #$FC7B,D1
0003356C <AmiBlitz3.ab3@24003>    JSR uselib
00033572 <AmiBlitz3.ab3@24004>   MOVE.w unlinka4,D1
00033578 <AmiBlitz3.ab3@24005>    JSR writeword
0003357E <AmiBlitz3.ab3@24008>   MOVEA.l currentfunction,A0
00033580 <AmiBlitz3.ab3@24009>   MOVEQ.l #$00,D1
00033584 <AmiBlitz3.ab3@24010>   MOVE.b $4(A0),D1
00033586 <AmiBlitz3.ab3@24011>   LSR.w #4,D1
0003358A <AmiBlitz3.ab3@24012>    BEQ.w JL_0_DB24
0003358C <AmiBlitz3.ab3@24014>      LSL.w #1,d1
00033590 <AmiBlitz3.ab3@24016>   CMP.w #$1,D1
00033594 <AmiBlitz3.ab3@24017>    BNE.w JL_0_DAE0
0003359A <AmiBlitz3.ab3@24018>   MOVE.w fix1,D1
000335A0 <AmiBlitz3.ab3@24019>    JSR writeword
000335A4 <AmiBlitz3.ab3@24020> BRA.w JL_0_DB24
000335A6 <AmiBlitz3.ab3@24023>   LSL.w #2,D1
000335A8 <AmiBlitz3.ab3@24024>   MOVE.w D1,-(A7)
000335AE <AmiBlitz3.ab3@24025>   MOVE.w D1,moverts+2
000335B4 <AmiBlitz3.ab3@24026>   MOVE.l moverts,D1
000335BA <AmiBlitz3.ab3@24027>    JSR writelong
000335BC <AmiBlitz3.ab3@24028>   MOVE.w (A7)+,D1
000335C0 <AmiBlitz3.ab3@24029>   CMP.w #$8,D1
000335C4 <AmiBlitz3.ab3@24030>    BHI.w JL_0_DB14
000335C8 <AmiBlitz3.ab3@24031>   ANDI.w #$7,D1
000335CA <AmiBlitz3.ab3@24032>   LSL.w #8,D1
000335CC <AmiBlitz3.ab3@24033>   LSL.w #1,D1
000335D2 <AmiBlitz3.ab3@24034>   OR.w fixq,D1
000335D8 <AmiBlitz3.ab3@24035>    JSR writeword
000335DC <AmiBlitz3.ab3@24036> BRA.w JL_0_DB24
000335E2 <AmiBlitz3.ab3@24040>    MOVE.w D1,fixstack+2
000335E8 <AmiBlitz3.ab3@24041>   MOVE.l fixstack,D1
000335EE <AmiBlitz3.ab3@24042>    JSR writelong
000335F2 <AmiBlitz3.ab3@24045>    BSR.w JL_0_D2CA
000335F6 <AmiBlitz3.ab3@24046>    BSR.w JL_0_D4F8
000335F8 <AmiBlitz3.ab3@24047>   MOVEA.l (A7)+,A0
000335FE <AmiBlitz3.ab3@24048>   MOVE.w dontwrite,D1
00033602 <AmiBlitz3.ab3@24049>    BNE.w JL_0_DB3E
00033608 <AmiBlitz3.ab3@24050>   MOVE.l destpointer,-(A0)
0003360E <AmiBlitz3.ab3@24053>   CLR.w proceduremode
00033614 <AmiBlitz3.ab3@24054>   CLR.l currentfunction
0003361A <AmiBlitz3.ab3@24055>   CLR.w procnum
0003361E <AmiBlitz3.ab3@24056>    BSR.w JL_0_DB5C
00033624 <AmiBlitz3.ab3@24057>    JSR freepends
0003362A <AmiBlitz3.ab3@24058> JMP get1bytemain
0003362C <AmiBlitz3.ab3@24061>   MOVEQ.l #$0C,D0
0003362E <AmiBlitz3.ab3@24062>   MOVEQ.l #$01,D1
00033634 <AmiBlitz3.ab3@24063>   MOVEA.l _execbase,A6
0003363A <AmiBlitz3.ab3@24065>   MOVE.l mempool,a0
0003363E <AmiBlitz3.ab3@24066>   JSR _AllocPooled(a6)
00033640 <AmiBlitz3.ab3@24067>   MOVEA.l D0,A0
00033646 <AmiBlitz3.ab3@24068>   MOVE.l alllocals,(A0)
0003364C <AmiBlitz3.ab3@24069>   MOVE.l A0,alllocals
00033652 <AmiBlitz3.ab3@24070>   MOVE.l firstlocal,D0
00033658 <AmiBlitz3.ab3@24071>   CLR.l firstlocal
0003365C <AmiBlitz3.ab3@24072>   MOVE.l D0,$4(A0)
00033662 <AmiBlitz3.ab3@24073>   MOVE.l firstglob,D1
00033668 <AmiBlitz3.ab3@24074>   CLR.l firstglob
0003366C <AmiBlitz3.ab3@24075>   MOVE.l D1,$8(A0)
00033672 <AmiBlitz3.ab3@24076>   TST.b debugmode
00033676 <AmiBlitz3.ab3@24077>    BEQ.b JL_0_DBB0
0003367C <AmiBlitz3.ab3@24078>   TST.w dontwrite
00033680 <AmiBlitz3.ab3@24079>    BNE.b JL_0_DBB0
00033684 <AmiBlitz3.ab3@24080>   MOVEA.l proclocals(PC),A0
00033686 <AmiBlitz3.ab3@24081>   MOVE.l D0,(A0)+
00033688 <AmiBlitz3.ab3@24082>   MOVE.l D1,(A0)
0003368A <AmiBlitz3.ab3@24085> RTS
00033690 <AmiBlitz3.ab3@24088> JMP baddirerr
00033696 <AmiBlitz3.ab3@24092>   TST.w dirmode
0003369A <AmiBlitz3.ab3@24093>    BNE.w JUMP_baddirerr
000336A0 <AmiBlitz3.ab3@24094>   MOVE.l firstfor,D1
000336A4 <AmiBlitz3.ab3@24095>    BEQ.w JUMP_noforerr
000336AA <AmiBlitz3.ab3@24096>   JSR reget
000336AE <AmiBlitz3.ab3@24097>    BEQ.w JL_0_DC18
000336B2 <AmiBlitz3.ab3@24100>   BSR.w getparameter
000336B6 <AmiBlitz3.ab3@24101>   MOVEA.l firstfor(PC),A2
000336B8 <AmiBlitz3.ab3@24102>   MOVEQ.l #$00,D1
000336BC <AmiBlitz3.ab3@24103>   MOVE.b $10(A2),D1
000336C0 <AmiBlitz3.ab3@24104>   SUBI.w #$12,D1
000336C2 <AmiBlitz3.ab3@24105>   CMP.w D1,D2
000336C6 <AmiBlitz3.ab3@24106>    BNE.w JUMP_noforerr
000336CA <AmiBlitz3.ab3@24107>   LEA ptr_parameterstore(PC),A0
000336CE <AmiBlitz3.ab3@24108>   LEA $11(A2),A1
000336D0 <AmiBlitz3.ab3@24109>   SUBQ.w #1,D2
000336D2 <AmiBlitz3.ab3@24112>     CMPM.b (A0)+,(A1)+
000336D6 <AmiBlitz3.ab3@24113>     BNE.w JUMP_noforerr
000336DA <AmiBlitz3.ab3@24114>   DBF D2,JL_0_DBF0
000336DE <AmiBlitz3.ab3@24116>    BSR.w JL_0_DC1A
000336E4 <AmiBlitz3.ab3@24117>    JSR reget
000336E8 <AmiBlitz3.ab3@24118>    BEQ.w JL_0_DC16
000336EC <AmiBlitz3.ab3@24119>   CMP.w #$2C,D0
000336F0 <AmiBlitz3.ab3@24120>    BNE.w JUMP_syntaxerr
000336F6 <AmiBlitz3.ab3@24121>    JSR get1bytemain
000336FA <AmiBlitz3.ab3@24122> BRA.w JL_0_DBCE
00033700 <AmiBlitz3.ab3@24125> JMP noforerr
00033702 <AmiBlitz3.ab3@24128> RTS
00033706 <AmiBlitz3.ab3@24132>   MOVE.l 8(a7),a2
0003370A <AmiBlitz3.ab3@24133>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
0003370E <AmiBlitz3.ab3@24134>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
00033712 <AmiBlitz3.ab3@24135>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
00033714 <AmiBlitz3.ab3@24139>   MOVEA.l D1,A2
0003371A <AmiBlitz3.ab3@24142>   JSR popnext                                           ;error checking for next.
0003371E <AmiBlitz3.ab3@24143>   MOVE.w $C(A2),D0
00033724 <AmiBlitz3.ab3@24144>   LEA nextb,A0
0003372A <AmiBlitz3.ab3@24145>   LEA nextbf,A1
0003372E <AmiBlitz3.ab3@24146>   CMP.w #$1,D0
00033732 <AmiBlitz3.ab3@24147>    BEQ.w JL_0_DC74
00033738 <AmiBlitz3.ab3@24148>   LEA nextw,A0
0003373E <AmiBlitz3.ab3@24149>   LEA nextwf,A1
00033742 <AmiBlitz3.ab3@24150>   CMP.w #$2,D0
00033746 <AmiBlitz3.ab3@24151>    BEQ.w JL_0_DC74
0003374C <AmiBlitz3.ab3@24152>   LEA nextl,A0
00033752 <AmiBlitz3.ab3@24153>   LEA nextlf,A1
00033756 <AmiBlitz3.ab3@24154>   CMP.w #$5,D0
0003375A <AmiBlitz3.ab3@24155>    BNE.w JL_0_DC74
00033760 <AmiBlitz3.ab3@24156>    TST.b fpu
00033764 <AmiBlitz3.ab3@24157>    BEQ 'old
0003376A <AmiBlitz3.ab3@24158>    LEA fpu2dats,a0                                         ;fpu next code
00033770 <AmiBlitz3.ab3@24159>    LEA fpu2date,a1
00033774 <AmiBlitz3.ab3@24160> BRA JL_0_DC74
00033778 <AmiBlitz3.ab3@24163>   MOVE.w #$C900,D1
0003377C <AmiBlitz3.ab3@24164>    BSR.w Atokejsr
00033782 <AmiBlitz3.ab3@24165>   LEA nextf,A0
00033788 <AmiBlitz3.ab3@24166>   LEA nextff,A1
0003378E <AmiBlitz3.ab3@24169>   JSR pokecode
00033794 <AmiBlitz3.ab3@24170>     TST.b fast                                             ;fast for next deactivate
00033798 <AmiBlitz3.ab3@24171> BRA 'l1
0003379E <AmiBlitz3.ab3@24173>     TST.b onestep
000337A2 <AmiBlitz3.ab3@24174>     BEQ 'l1
000337A8 <AmiBlitz3.ab3@24175>     CLR.b onestep
000337AE <AmiBlitz3.ab3@24176>     SUBQ.l #4,destpointer
000337B2 <AmiBlitz3.ab3@24177>     MOVE.w #$5292,d1
000337B8 <AmiBlitz3.ab3@24178>     JSR writeword
000337BC <AmiBlitz3.ab3@24181>   MOVE.l JL_0_DCF4(PC),D1
000337C2 <AmiBlitz3.ab3@24182>    JSR writelong
000337C8 <AmiBlitz3.ab3@24183>   MOVEA.l firstfor,A2
000337CE <AmiBlitz3.ab3@24184>   MOVE.l (A2),firstfor
000337D2 <AmiBlitz3.ab3@24185>   MOVEA.l $8(A2),A0
000337D8 <AmiBlitz3.ab3@24186>   MOVEA.l destpointer,A1
000337DA <AmiBlitz3.ab3@24187>   MOVE.l A1,D1
000337DC <AmiBlitz3.ab3@24188>   SUB.l A0,D1
000337DE <AmiBlitz3.ab3@24189>   ADDQ.l #2,D1
000337E4 <AmiBlitz3.ab3@24190>   CMP.l #MinWordSgnd,D1
000337E8 <AmiBlitz3.ab3@24191>    BCC.w JUMP_bigforerr
000337EE <AmiBlitz3.ab3@24192>   TST.w dontwrite
000337F2 <AmiBlitz3.ab3@24193>    BNE.w JL_0_DCB4
000337F6 <AmiBlitz3.ab3@24194>   MOVE.w D1,-$2(A0)
000337F8 <AmiBlitz3.ab3@24197>   MOVE.l A1,D1
000337FC <AmiBlitz3.ab3@24198>   SUB.l $4(A2),D1
000337FE <AmiBlitz3.ab3@24199>   SUBQ.l #6,D1
00033804 <AmiBlitz3.ab3@24200>   CMP.l #MinWordSgnd,D1
00033808 <AmiBlitz3.ab3@24201>    BCC.w JUMP_bigforerr
0003380E <AmiBlitz3.ab3@24202>   TST.w dontwrite
00033812 <AmiBlitz3.ab3@24203>    BNE.w JL_0_DCD6
00033814 <AmiBlitz3.ab3@24204>   NEG.w D1
00033818 <AmiBlitz3.ab3@24205>   MOVE.w D1,-$2(A1)
0003381E <AmiBlitz3.ab3@24208>   JSR popnext3
00033824 <AmiBlitz3.ab3@24209>   MOVEA.l _execbase,A6
00033826 <AmiBlitz3.ab3@24210>   MOVEA.l A2,A1
00033828 <AmiBlitz3.ab3@24211>   MOVEQ.l #$00,D0
0003382C <AmiBlitz3.ab3@24212>   MOVE.b $10(A1),D0
00033832 <AmiBlitz3.ab3@24213>   MOVE.l mempool2,a0
00033836 <AmiBlitz3.ab3@24214>   JSR _FreePooled(A6)
0003383C <AmiBlitz3.ab3@24215> JMP reget
00033842 <AmiBlitz3.ab3@24218> JMP notallowd
00033848 <AmiBlitz3.ab3@24221> JMP bigforerr
0003384C <AmiBlitz3.ab3@24228>   MOVE.w #$664F,-(A7)
00033850 <AmiBlitz3.ab3@24231> BRA.w JL_0_DCF4
00033856 <AmiBlitz3.ab3@24234> JMP error_dublicate_for
0003385A <AmiBlitz3.ab3@24237> forlineat:   Ds.l 1
0003385C <AmiBlitz3.ab3@24238> fortemp:     Ds.w 1
00033862 <AmiBlitz3.ab3@24245>   CLR.l fp0addr
00033868 <AmiBlitz3.ab3@24246>   TST.w dirmode
0003386C <AmiBlitz3.ab3@24247>    BNE.w JUMP_baddirerr
00033876 <AmiBlitz3.ab3@24248>   MOVE.l linenumat,forlineat
0003387C <AmiBlitz3.ab3@24252>   MOVE.l A5,letstart
00033880 <AmiBlitz3.ab3@24253>   BSR.w getparameter
00033886 <AmiBlitz3.ab3@24254>   MOVE.w D2,fortemp
0003388C <AmiBlitz3.ab3@24255>   JSR findfor
00033890 <AmiBlitz3.ab3@24256>    BEQ.w JUMP_error_dublicate_for
00033896 <AmiBlitz3.ab3@24257>   LEA firstfor,A2
0003389C <AmiBlitz3.ab3@24258>   JSR addhere2
0003389E <AmiBlitz3.ab3@24259>   MOVE.l A2,-(A7)
000338A4 <AmiBlitz3.ab3@24260>   TST.b debugmode
000338A8 <AmiBlitz3.ab3@24261>    BEQ.b JL_0_DD4C
000338AE <AmiBlitz3.ab3@24262>   JSR chkstak
000338B4 <AmiBlitz3.ab3@24263>   MOVE.l AJL_0_DCF0,D1
000338BA <AmiBlitz3.ab3@24264>   JSR  writelong
000338BE <AmiBlitz3.ab3@24267>   MOVE.w fortemp(PC),D2
000338C6 <AmiBlitz3.ab3@24268>   MOVE.b #1,formode
000338CA <AmiBlitz3.ab3@24269>   BSR.w AJL_0_DEA6                                         ;for get 1. value
000338D0 <AmiBlitz3.ab3@24270>   CLR.b formode
000338D4 <AmiBlitz3.ab3@24271>   CMP.w #-$7FE8,D0
000338D8 <AmiBlitz3.ab3@24272>    BNE.w JUMP_syntaxerr
000338DE <AmiBlitz3.ab3@24273>   MOVE.w commode,D1
000338E2 <AmiBlitz3.ab3@24274>    BNE.w JUMP_syntaxerr
000338E6 <AmiBlitz3.ab3@24275>   CMP.b #$6,D2
000338EA <AmiBlitz3.ab3@24276>    BCC.w JUMP_badforerr
000338EE <AmiBlitz3.ab3@24277>   BTST #$F,D2
000338F2 <AmiBlitz3.ab3@24278>    BNE.w JL_0_DD86
000338F8 <AmiBlitz3.ab3@24279>   MOVE.w leaamp,D1
000338FE <AmiBlitz3.ab3@24280>   JSR pokewda5s
00033900 <AmiBlitz3.ab3@24281>   MOVE.w D3,D1
00033906 <AmiBlitz3.ab3@24282>   JSR  writeword
0003390C <AmiBlitz3.ab3@24285>   MOVE.w pushindex,D1
00033912 <AmiBlitz3.ab3@24286>   JSR  writeword
00033916 <AmiBlitz3.ab3@24287>   ANDI.w #$FF,D2
00033918 <AmiBlitz3.ab3@24289>   MOVEA.l (A7),A1
0003391C <AmiBlitz3.ab3@24290>   MOVE.w D2,$C(A1)
0003391E <AmiBlitz3.ab3@24291>   MOVE.w D2,-(A7)
00033922 <AmiBlitz3.ab3@24292>    BSR.w eval
00033928 <AmiBlitz3.ab3@24293>    CLR.b onestep
0003392C <AmiBlitz3.ab3@24294>    CMP.w #$8019,d0
00033930 <AmiBlitz3.ab3@24295>    BEQ 'l1
00033938 <AmiBlitz3.ab3@24296>    MOVE.b #1,onestep
0003393A <AmiBlitz3.ab3@24299>   MOVE.w (A7),D2
00033940 <AmiBlitz3.ab3@24300>   MOVE.w pushd0l,D1
00033944 <AmiBlitz3.ab3@24301>   CMP.w #$3,D2
00033948 <AmiBlitz3.ab3@24302>    BCC.w JL_0_DDB6
0003394E <AmiBlitz3.ab3@24303>   MOVE.w pushd0wd,D1
00033950 <AmiBlitz3.ab3@24306>    MOVE.w D1,-(A7)
00033956 <AmiBlitz3.ab3@24307>    TST.b fpu
0003395A <AmiBlitz3.ab3@24308>    BEQ 'old
0003395E <AmiBlitz3.ab3@24309>    CMP.b #5,d2
00033962 <AmiBlitz3.ab3@24310>    BNE 'old
00033968 <AmiBlitz3.ab3@24311>    MOVE.l #$f2276400,d1
0003396E <AmiBlitz3.ab3@24313>    JSR writelong
00033972 <AmiBlitz3.ab3@24314> BRA 'weit
00033978 <AmiBlitz3.ab3@24317>    JSR  writeword                                          ;fpu for end value
0003397C <AmiBlitz3.ab3@24320>   CMP.w #-$7FE7,D0
00033980 <AmiBlitz3.ab3@24321>    BNE.w JL_0_DDCC
00033984 <AmiBlitz3.ab3@24322>    BSR.w eval
0003398A <AmiBlitz3.ab3@24323>    TST.b fpu
0003398E <AmiBlitz3.ab3@24324>    BEQ JL_0_DE0C
00033992 <AmiBlitz3.ab3@24325>    CMP.b #5,d2
00033996 <AmiBlitz3.ab3@24326>    BNE JL_0_DE0C
0003399C <AmiBlitz3.ab3@24327>    MOVE.l #$f2276400,d1                                    ;write step <> 1
000339A2 <AmiBlitz3.ab3@24329>   JSR writelong
000339A4 <AmiBlitz3.ab3@24332>    MOVE.w (a7)+,d1
000339A8 <AmiBlitz3.ab3@24333> BRA fpur
000339AC <AmiBlitz3.ab3@24336>   CMP.w #$4,D2
000339B0 <AmiBlitz3.ab3@24337>    BCC.w JL_0_DDE0
000339B4 <AmiBlitz3.ab3@24338>   MOVE.w #$7001,D1
000339BA <AmiBlitz3.ab3@24339>   JSR writeword
000339BE <AmiBlitz3.ab3@24340> BRA.w JL_0_DE0C
000339C4 <AmiBlitz3.ab3@24343> JMP badforerr
000339C8 <AmiBlitz3.ab3@24346>   BNE.w JL_0_DDFA
000339CC <AmiBlitz3.ab3@24347>   MOVE.w #$7001,D1
000339D2 <AmiBlitz3.ab3@24348>   JSR writeword
000339D8 <AmiBlitz3.ab3@24349>   MOVE.w swapd0,D1
000339DE <AmiBlitz3.ab3@24350>   JSR writeword
000339E2 <AmiBlitz3.ab3@24351> BRA.w JL_0_DE0C
000339E8 <AmiBlitz3.ab3@24354>   TST.b fpu
000339EC <AmiBlitz3.ab3@24355>    BEQ 'old
000339F0 <AmiBlitz3.ab3@24356>   CMP.b #5,d2
000339F4 <AmiBlitz3.ab3@24357>    BNE 'old
000339FA <AmiBlitz3.ab3@24358>   MOVE.l #$f23c5000,d1
00033A00 <AmiBlitz3.ab3@24359>   JSR writelong
00033A04 <AmiBlitz3.ab3@24360>   MOVE.w #$1,d1
00033A0A <AmiBlitz3.ab3@24361>   JSR writeword
00033A10 <AmiBlitz3.ab3@24362>   MOVE.l #$f2276400,d1
00033A16 <AmiBlitz3.ab3@24363>   JSR writelong
00033A18 <AmiBlitz3.ab3@24364>   MOVE.w (a7)+,d1
00033A1C <AmiBlitz3.ab3@24365> BRA fpur
00033A20 <AmiBlitz3.ab3@24368>   MOVE.w #$203C,D1                                         ;write step 1
00033A26 <AmiBlitz3.ab3@24369>   JSR writeword
00033A2C <AmiBlitz3.ab3@24370>   MOVE.l #$80000041,D1                                     ;ffp '1'
00033A32 <AmiBlitz3.ab3@24371>   JSR writelong
00033A34 <AmiBlitz3.ab3@24374>   MOVE.w (A7)+,D1
00033A3A <AmiBlitz3.ab3@24375>   JSR writeword                                            ;push step on stack
00033A3C <AmiBlitz3.ab3@24378>   MOVE.w (A7)+,D2
00033A3E <AmiBlitz3.ab3@24379>   MOVEA.l (A7),A1
00033A46 <AmiBlitz3.ab3@24380>   MOVE.l destpointer,$4(A1)
00033A4C <AmiBlitz3.ab3@24381>   LEA forcompb,A0
00033A52 <AmiBlitz3.ab3@24382>   LEA forcompbf,A1
00033A56 <AmiBlitz3.ab3@24383>   CMP.w #$1,D2
00033A5A <AmiBlitz3.ab3@24384>    BEQ.w JL_0_DE7E
00033A60 <AmiBlitz3.ab3@24385>   LEA forcompw,A0
00033A66 <AmiBlitz3.ab3@24386>   LEA forcompwf,A1
00033A6A <AmiBlitz3.ab3@24387>   CMP.w #$2,D2
00033A6E <AmiBlitz3.ab3@24388>    BEQ.w JL_0_DE7E
00033A74 <AmiBlitz3.ab3@24389>   LEA forcompl,A0
00033A7A <AmiBlitz3.ab3@24390>   LEA forcomplf,A1
00033A7E <AmiBlitz3.ab3@24391>   CMP.w #$5,D2
00033A82 <AmiBlitz3.ab3@24392>    BNE.w JL_0_DE7E
00033A88 <AmiBlitz3.ab3@24393>   TST.b fpu
00033A8C <AmiBlitz3.ab3@24394>    BEQ 'old
00033A92 <AmiBlitz3.ab3@24395>   LEA fpu_start,a0
00033A98 <AmiBlitz3.ab3@24396>   LEA fpu_end,a1
00033A9E <AmiBlitz3.ab3@24397>   JSR pokecode
00033AA2 <AmiBlitz3.ab3@24398> BRA fpu3
00033AA8 <AmiBlitz3.ab3@24401>   LEA forcompf,A0                                         ;
00033AAE <AmiBlitz3.ab3@24402>   LEA forcompff,A1
00033AB4 <AmiBlitz3.ab3@24403>   JSR pokecode
00033AB8 <AmiBlitz3.ab3@24404>   MOVE.w #$C900,D1
00033ABC <AmiBlitz3.ab3@24405>   BSR.w Atokejsr
00033AC2 <AmiBlitz3.ab3@24406>   LEA forcompf2,A0
00033AC8 <AmiBlitz3.ab3@24407>   LEA forcompf2f,A1
00033ACE <AmiBlitz3.ab3@24410>   JSR pokecode
00033AD4 <AmiBlitz3.ab3@24411>   TST.b fast                                               ;fast for next
00033AD8 <AmiBlitz3.ab3@24412>    BEQ 's1
00033ADC <AmiBlitz3.ab3@24413>   CMP.w #3,d2
00033AE0 <AmiBlitz3.ab3@24414>    BNE 's1
00033AE6 <AmiBlitz3.ab3@24415>   TST.b onestep
00033AEA <AmiBlitz3.ab3@24416>    BEQ 's1
00033AF4 <AmiBlitz3.ab3@24417>   SUB.l #10,destpointer
00033AF8 <AmiBlitz3.ab3@24418>   MOVE.w #$b081,d1
00033AFE <AmiBlitz3.ab3@24419>   JSR writeword
00033B02 <AmiBlitz3.ab3@24423>   MOVE.l thebgt(PC),D1
00033B08 <AmiBlitz3.ab3@24424>   JSR writelong
00033B0A <AmiBlitz3.ab3@24427>   MOVEA.l (A7)+,A1
00033B12 <AmiBlitz3.ab3@24428>   MOVE.l destpointer,$8(A1)
00033B18 <AmiBlitz3.ab3@24429> JMP reget
00033B1C <AmiBlitz3.ab3@24432>   MOVEA.l 8(a7),a2
00033B20 <AmiBlitz3.ab3@24433>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033B26 <AmiBlitz3.ab3@24434>   fmove.s 4(a7),fp1
00033B2A <AmiBlitz3.ab3@24435>   BTST.b #7,(a7)
00033B2E <AmiBlitz3.ab3@24436>   BNE 'negi
00033B32 <AmiBlitz3.ab3@24437>   fcmp.x fp1,fp0
00033B36 <AmiBlitz3.ab3@24438> BRA 'negi2
00033B3A <AmiBlitz3.ab3@24441>   fcmp.x fp0,fp1
00033B3E <AmiBlitz3.ab3@24444>   Dc.l $f2920000                                           ;fbgt.w
00033B42 <AmiBlitz3.ab3@24448>   BGT.w thebgt
00033B48 <AmiBlitz3.ab3@24451>   MOVE.l A5,letstart
00033B4E <AmiBlitz3.ab3@24452>   JSR getparameter
00033B58 <AmiBlitz3.ab3@24458>   MOVE.l destpointer,pushpc
00033B62 <AmiBlitz3.ab3@24459>   MOVE.l hunkoffsetbase,pushoff
00033B68 <AmiBlitz3.ab3@24460>   CLR.l rightsidetype
00033B6E <AmiBlitz3.ab3@24461>   CLR.w rightsideflagmask
00033B76 <AmiBlitz3.ab3@24462>   MOVE.w #$0001,regnum
00033B7C <AmiBlitz3.ab3@24463>   JSR JL_0_8E3C
00033B82 <AmiBlitz3.ab3@24464>   JSR calcvar
00033B88 <AmiBlitz3.ab3@24465>   TST.b formode
00033B8C <AmiBlitz3.ab3@24466>   BEQ 'lf1
00033B92 <AmiBlitz3.ab3@24467>   CMP.l #newtype_double,A2
00033B96 <AmiBlitz3.ab3@24468>   BEQ JUMP_notallowd
00033B9C <AmiBlitz3.ab3@24469>   MOVE.l a2,currtype
00033BA2 <AmiBlitz3.ab3@24472>   CLR.w startoffsetmore
00033BA6 <AmiBlitz3.ab3@24473>   CMP.w #$3d,d0
00033BAA <AmiBlitz3.ab3@24474>   BNE 'l1a
00033BAE <AmiBlitz3.ab3@24475>   BTST #15,d2
00033BB2 <AmiBlitz3.ab3@24476>   BEQ 'l1a
00033BB6 <AmiBlitz3.ab3@24477>   CMP.b #1,d2
00033BBA <AmiBlitz3.ab3@24478>   BNE 'l1a
00033BC4 <AmiBlitz3.ab3@24479>   MOVE.w leaa0a0+2,startoffsetmore
00033BCA <AmiBlitz3.ab3@24482>   CLR.w regnum
00033BCE <AmiBlitz3.ab3@24483>   BSR.w JL_0_B5D2
00033BD4 <AmiBlitz3.ab3@24484>   CLR.w commode
00033BDA <AmiBlitz3.ab3@24485>   CLR.w stackcorrect
00033BE0 <AmiBlitz3.ab3@24486>   CLR.w pcodd
00033BE6 <AmiBlitz3.ab3@24487>   MOVE.w startoffsetmore,d1
00033BEA <AmiBlitz3.ab3@24488>   BTST #0,d1
00033BEE <AmiBlitz3.ab3@24489>   BEQ 'l2a
00033BF6 <AmiBlitz3.ab3@24490>   MOVE.w #1,pcodd
00033BFA <AmiBlitz3.ab3@24493>   CMP.w #$3D,D0                                            ;=
00033BFE <AmiBlitz3.ab3@24494>   BEQ.w JL_0_DEE0
00033C00 <AmiBlitz3.ab3@24497>   MOVE.b (a5)+,d1
00033C04 <AmiBlitz3.ab3@24498>   BEQ 'l10
00033C08 <AmiBlitz3.ab3@24499>   CMP.b #":",d1
00033C0C <AmiBlitz3.ab3@24500>   BEQ 'l10
00033C10 <AmiBlitz3.ab3@24501>   CMP.b #";",d1
00033C14 <AmiBlitz3.ab3@24502>   BEQ 'l10
00033C18 <AmiBlitz3.ab3@24503>   CMP.b #"0",d1
00033C1C <AmiBlitz3.ab3@24504>   BLT 'l11
00033C20 <AmiBlitz3.ab3@24505>   CMP.b #"9",d1
00033C24 <AmiBlitz3.ab3@24506>   BGT 'l11
00033C28 <AmiBlitz3.ab3@24507> BRA.s 'l1
00033C30 <AmiBlitz3.ab3@24510>   MOVE.b #1,quickadd
00033C36 <AmiBlitz3.ab3@24513>   MOVEA.l letstart,A5
00033C38 <AmiBlitz3.ab3@24514>   SUBQ.w #1,A5
00033C3C <AmiBlitz3.ab3@24517>   CMP.b #$7,D2
00033C40 <AmiBlitz3.ab3@24518>    BNE.w JL_0_DF8A
00033C44 <AmiBlitz3.ab3@24524>   MOVEM.w D2-D3,-(A7)
00033C4A <AmiBlitz3.ab3@24525>   MOVE.l lastoffset_org,-(A7)
00033C50 <AmiBlitz3.ab3@24526>   MOVE.w varmode,-(A7)
00033C5A <AmiBlitz3.ab3@24528>    MOVE.l #forthstack,forthsp
00033C64 <AmiBlitz3.ab3@24529>    MOVE.l #precstack,precsp
00033C6A <AmiBlitz3.ab3@24530>    CLR.w regnum
00033C70 <AmiBlitz3.ab3@24531>    CLR.w nonew
00033C76 <AmiBlitz3.ab3@24532>    CLR.w sbasegot
00033C80 <AmiBlitz3.ab3@24533>    MOVE.w varcodelen,oldvcodelen
00033C86 <AmiBlitz3.ab3@24534>    CLR.w varcodelen
00033C8E <AmiBlitz3.ab3@24535>    MOVE.w #$FFFF,lasta6
00033C90 <AmiBlitz3.ab3@24538>   MOVEQ.l #$07,D2
00033C94 <AmiBlitz3.ab3@24539>    BSR.w eval
00033C9A <AmiBlitz3.ab3@24540>   MOVE.w (A7)+,varmode
00033CA0 <AmiBlitz3.ab3@24541>   MOVE.l (A7)+,lastoffset_org
00033CA6 <AmiBlitz3.ab3@24542>   MOVE.w moved0a3,D1
00033CAC <AmiBlitz3.ab3@24543>    JSR writeword
00033CB2 <AmiBlitz3.ab3@24544>   MOVE.w commode,D1
00033CB6 <AmiBlitz3.ab3@24545>    BEQ.w JL_0_DF38
00033CBC <AmiBlitz3.ab3@24546>   LEA pulla2st,A0
00033CC2 <AmiBlitz3.ab3@24547>   LEA pulla2stf,A1
00033CC8 <AmiBlitz3.ab3@24548>    JSR pokecode
00033CCC <AmiBlitz3.ab3@24549> BRA.w JL_0_DF3C
00033CD0 <AmiBlitz3.ab3@24552>   BSR.w JL_0_B63C
00033CD4 <AmiBlitz3.ab3@24555>   MOVEM.w (A7)+,D2-D3
00033CD8 <AmiBlitz3.ab3@24556>   BTST #$F,D2
00033CDC <AmiBlitz3.ab3@24557>   BNE.w JL_0_DF58
00033CE2 <AmiBlitz3.ab3@24558>     MOVE.w D3,leaa5d3a2+2
00033CE8 <AmiBlitz3.ab3@24559>     MOVE.l leaa5d3a2,D1
00033CEE <AmiBlitz3.ab3@24560>     JSR pokela5s
00033CF2 <AmiBlitz3.ab3@24563>   MOVE.w #$FE6F,D1
00033CF8 <AmiBlitz3.ab3@24564>   JSR uselib
00033CFE <AmiBlitz3.ab3@24565>   MOVE.l #$C700,D1
00033D04 <AmiBlitz3.ab3@24566>   MOVE.l d1,lastinstruction
00033D0A <AmiBlitz3.ab3@24567>   MOVE.w varmode,D2
00033D0E <AmiBlitz3.ab3@24568>   BNE.w JL_0_DF70
00033D10 <AmiBlitz3.ab3@24569>     ADDQ.w #1,D1
00033D14 <AmiBlitz3.ab3@24572>   BSR.w Atokejsr
00033D18 <AmiBlitz3.ab3@24573>   CMP.w #$2C,D0
00033D1C <AmiBlitz3.ab3@24574>   BNE.w JL_0_E0C6
00033D22 <AmiBlitz3.ab3@24576>   MOVE.w addq4a2,D1
00033D28 <AmiBlitz3.ab3@24577>   JSR writeword
00033D2C <AmiBlitz3.ab3@24578> BRA.w JL_0_E018
00033D32 <AmiBlitz3.ab3@24581> JMP error4char
00033D38 <AmiBlitz3.ab3@24584> JMP error_convert_types
00033D3C <AmiBlitz3.ab3@24588>    BTST #$E,D2
00033D40 <AmiBlitz3.ab3@24589>    BNE.w JL_0_DF9C
00033D42 <AmiBlitz3.ab3@24590>   TST.b D2
00033D46 <AmiBlitz3.ab3@24591>    BEQ.w JUMP_noleterr
00033D4C <AmiBlitz3.ab3@24592>    TST.b newsyntax
00033D50 <AmiBlitz3.ab3@24593>    BEQ JL_0_DFA0
00033D54 <AmiBlitz3.ab3@24596>    CMP.w #$4022,(a5)
00033D58 <AmiBlitz3.ab3@24597>    BNE JL_0_DFA0
00033D5E <AmiBlitz3.ab3@24598>    CMP.l #3,d2
00033D62 <AmiBlitz3.ab3@24599>    BNE  JUMP_error_convert_types
00033D64 <AmiBlitz3.ab3@24600>    ADDQ #2,a5
00033D66 <AmiBlitz3.ab3@24601>    MOVEQ #0,d0
00033D68 <AmiBlitz3.ab3@24602>    MOVE.b (a5)+,d0
00033D6C <AmiBlitz3.ab3@24603>    BEQ JL_0_DFA0
00033D70 <AmiBlitz3.ab3@24604>    CMP.b #$22,d0
00033D74 <AmiBlitz3.ab3@24605>    BNE 'l1
00033D78 <AmiBlitz3.ab3@24606>    MOVE.b #0,d0
00033D7C <AmiBlitz3.ab3@24607> BRA 'do
00033D7E <AmiBlitz3.ab3@24610>   ASL.l #8,d0
00033D80 <AmiBlitz3.ab3@24611>    MOVE.b (a5)+,d0
00033D84 <AmiBlitz3.ab3@24612>    BEQ JL_0_DFA0
00033D88 <AmiBlitz3.ab3@24613>    CMP.b #$22,d0
00033D8C <AmiBlitz3.ab3@24614>    BNE 'l2
00033D90 <AmiBlitz3.ab3@24615>    MOVE.b #0,d0
00033D92 <AmiBlitz3.ab3@24616>    ASR.l #8,d0
00033D96 <AmiBlitz3.ab3@24617> BRA 'do
00033D98 <AmiBlitz3.ab3@24620>   ASL.l #8,d0
00033D9A <AmiBlitz3.ab3@24621>     MOVE.b (a5)+,d0
00033D9E <AmiBlitz3.ab3@24622>    BEQ JL_0_DFA0
00033DA2 <AmiBlitz3.ab3@24623>    CMP.b #$22,d0
00033DA6 <AmiBlitz3.ab3@24624>    BNE 'l3
00033DAA <AmiBlitz3.ab3@24625>    MOVE.b #0,d0
00033DAC <AmiBlitz3.ab3@24626>    ASR.l #8,d0
00033DB0 <AmiBlitz3.ab3@24627> BRA 'do
00033DB2 <AmiBlitz3.ab3@24630>   ASL.l #8,d0
00033DB4 <AmiBlitz3.ab3@24631>     MOVE.b (a5)+,d0
00033DB8 <AmiBlitz3.ab3@24632>    BEQ JL_0_DFA0
00033DBC <AmiBlitz3.ab3@24633>    CMP.b #$22,d0
00033DC0 <AmiBlitz3.ab3@24634>    BNE 'l4
00033DC4 <AmiBlitz3.ab3@24635>    MOVE.b #0,d0
00033DC6 <AmiBlitz3.ab3@24636>    ASR.l #8,d0
00033DCA <AmiBlitz3.ab3@24637> BRA 'do
00033DCE <AmiBlitz3.ab3@24640>    CMP.b #$22,(a5)+
00033DD2 <AmiBlitz3.ab3@24641>    BNE JUMP_error4char
00033DD6 <AmiBlitz3.ab3@24644>   MOVE.w #$2b7c,d1
00033DDC <AmiBlitz3.ab3@24645>    TST.w varmode
00033DE0 <AmiBlitz3.ab3@24646>    BEQ 'g3
00033DE4 <AmiBlitz3.ab3@24647>    BCLR #9,d1
00033DEA <AmiBlitz3.ab3@24650>     JSR writeword
00033DEC <AmiBlitz3.ab3@24651>     MOVE.l d0,d1
00033DF2 <AmiBlitz3.ab3@24652>     JSR writelong
00033DF4 <AmiBlitz3.ab3@24653>     MOVE.w d3,d1
00033DFA <AmiBlitz3.ab3@24654>     JSR writeword
00033E00 <AmiBlitz3.ab3@24655>     JSR get1bytemain
00033E02 <AmiBlitz3.ab3@24656> RTS
00033E08 <AmiBlitz3.ab3@24662> JMP noleterr
00033E0E <AmiBlitz3.ab3@24666>   MOVE.w d2,vartype
00033E12 <AmiBlitz3.ab3@24667>   MOVE.b #$3,D2
00033E16 <AmiBlitz3.ab3@24670>   CMP.b #5,d2
00033E1A <AmiBlitz3.ab3@24671>   BNE 'l1
00033E20 <AmiBlitz3.ab3@24672>   MOVE.l a2,currtype
00033E24 <AmiBlitz3.ab3@24676>   MOVEM.w D2-D3,-(A7)
00033E2A <AmiBlitz3.ab3@24677>   MOVE.w varmode,-(A7)
00033E30 <AmiBlitz3.ab3@24678>   MOVE.l a2,leftsidetype
00033E3A <AmiBlitz3.ab3@24679>   MOVE.w flagmask,leftsideflagmask
00033E3E <AmiBlitz3.ab3@24680>   BTST #$f,d2
00033E42 <AmiBlitz3.ab3@24681>   BEQ 'nomultiassign
00033E48 <AmiBlitz3.ab3@24682>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033E4E <AmiBlitz3.ab3@24683>   CLR.w leftsideflagmask
00033E52 <AmiBlitz3.ab3@24684> 'nomultiassign  ANDI.w #$FF,D2
00033E58 <AmiBlitz3.ab3@24685>   MOVE.l lastoffset_org,-(A7)
00033E5E <AmiBlitz3.ab3@24686>   JSR eval                                ; calc right side of var assign
00033E62 <AmiBlitz3.ab3@24687>   MOVEM.l a0/a1,-(a7)
00033E68 <AmiBlitz3.ab3@24688>   MOVE.l leftsidetype,a0
00033E6E <AmiBlitz3.ab3@24689>   CMP.l #0,a0
00033E72 <AmiBlitz3.ab3@24690>   BEQ 'nocheck
00033E7A <AmiBlitz3.ab3@24691>   CMP.w #1,leftsideflagmask
00033E7E <AmiBlitz3.ab3@24692>   BEQ 'isptr
00033E86 <AmiBlitz3.ab3@24693>   CMP.l #$100,4(a0)
00033E8A <AmiBlitz3.ab3@24694>   BLE 'nocheck
00033E90 <AmiBlitz3.ab3@24695> 'isptr TST.l typetocast
00033E94 <AmiBlitz3.ab3@24696>   BEQ 'nocast
00033E9A <AmiBlitz3.ab3@24697>   MOVE.l typetocast,a1
00033E9E <AmiBlitz3.ab3@24698>   BRA 'typecheck
00033EA4 <AmiBlitz3.ab3@24699> 'nocast  TST.l rightsidetype
00033EA8 <AmiBlitz3.ab3@24700>   BEQ 'nocheck
00033EAE <AmiBlitz3.ab3@24701>   MOVE.l rightsidetype,a1
00033EB6 <AmiBlitz3.ab3@24702>   CMP.w #1,rightsideflagmask
00033EBA <AmiBlitz3.ab3@24703>   BEQ 'ok
00033EC2 <AmiBlitz3.ab3@24704>   CMP.l #$100,4(a1)
00033EC6 <AmiBlitz3.ab3@24705>   BGE 'typecheck
00033ECE <AmiBlitz3.ab3@24706>   CMP.l #$3,4(a1)
00033ED2 <AmiBlitz3.ab3@24707>   BEQ 'ok                              ;long assign is allow with this codelines
00033ED6 <AmiBlitz3.ab3@24708>   BRA 'error
00033EDC <AmiBlitz3.ab3@24710>   TST.b typecheck
00033EE0 <AmiBlitz3.ab3@24711>   BEQ 'nocheck
00033EE6 <AmiBlitz3.ab3@24712>   TST.b notypecheck
00033EEA <AmiBlitz3.ab3@24713>   BNE 'ok
00033EEC <AmiBlitz3.ab3@24714>   CMP.l a0,a1
00033EF0 <AmiBlitz3.ab3@24715>   BEQ 'ok
00033EF4 <AmiBlitz3.ab3@24717>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00033EF8 <AmiBlitz3.ab3@24718>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00033EFC <AmiBlitz3.ab3@24719>   BEQ 'ok
00033F02 <AmiBlitz3.ab3@24721>  JMP   error_convert_types     ;for syntax 4  = typecheck
00033F08 <AmiBlitz3.ab3@24724>    CLR.l typetocast
00033F0C <AmiBlitz3.ab3@24725>    MOVEM.l (a7)+, a0/a1
00033F12 <AmiBlitz3.ab3@24726>   MOVE.l (A7)+,lastoffset_org
00033F18 <AmiBlitz3.ab3@24727>   MOVE.w commode,D1
00033F1C <AmiBlitz3.ab3@24728>    BNE.w JL_0_DFCC
00033F20 <AmiBlitz3.ab3@24729>    BSR.w JL_0_B63C
00033F26 <AmiBlitz3.ab3@24732>   MOVE.w (A7)+,varmode
00033F2A <AmiBlitz3.ab3@24733>   MOVEM.w (A7)+,D2-D3
00033F2E <AmiBlitz3.ab3@24735>   MOVE.w #$2B40,D1
00033F34 <AmiBlitz3.ab3@24736>   MOVE.w varmode,D4
00033F38 <AmiBlitz3.ab3@24737>    BEQ.w JL_0_DFE8
00033F3C <AmiBlitz3.ab3@24738>   BCLR #$9,D1
00033F40 <AmiBlitz3.ab3@24741>   BTST #$F,D2
00033F44 <AmiBlitz3.ab3@24742>    BEQ.w JL_0_E090
00033F4A <AmiBlitz3.ab3@24743>    TST.b stackcorrect
00033F4E <AmiBlitz3.ab3@24744>    BNE 'st1
00033F54 <AmiBlitz3.ab3@24745>   MOVE.w commode,D1
00033F58 <AmiBlitz3.ab3@24746>    BEQ.w JL_0_E004
00033F5E <AmiBlitz3.ab3@24749>   MOVE.w pulla2,D1
00033F64 <AmiBlitz3.ab3@24750>    JSR writeword
00033F68 <AmiBlitz3.ab3@24753>   MOVE.w #$2480,D1
00033F6C <AmiBlitz3.ab3@24754>    MOVEM.l a0/d0,-(a7)
00033F72 <AmiBlitz3.ab3@24755>    MOVEA.l lastoffset_org,A0
00033F74 <AmiBlitz3.ab3@24756>    MOVE.l A0,D0
00033F78 <AmiBlitz3.ab3@24757>    BEQ.w 'skip
00033F7A <AmiBlitz3.ab3@24758>    MOVEA.l D0,A0
00033F82 <AmiBlitz3.ab3@24759>    MOVE.l $A(A0),currtype
00033F86 <AmiBlitz3.ab3@24762>   MOVEM.l (a7)+,a0/d0
00033F8A <AmiBlitz3.ab3@24763>   CMP.w #$2C,D0
00033F8E <AmiBlitz3.ab3@24764>    BNE.w JL_0_E090
00033F92 <AmiBlitz3.ab3@24765>     MOVE.w #$24C0,D1
00033F96 <AmiBlitz3.ab3@24766>    BSR.w JL_0_E090                                         ;write store
00033F9C <AmiBlitz3.ab3@24769>    MOVE.l lastoffset_org,D0
00033FA4 <AmiBlitz3.ab3@24773>   MOVE.w #$FFFF,commode
00033FAA <AmiBlitz3.ab3@24774>   CLR.w varcodelen
00033FB2 <AmiBlitz3.ab3@24775>   MOVE.b #1,optiarray
00033FB8 <AmiBlitz3.ab3@24776>   MOVE.w pusha2,D1
00033FBE <AmiBlitz3.ab3@24777>    JSR writeword
00033FC4 <AmiBlitz3.ab3@24778>   TST.l lastoffset_org
00033FC8 <AmiBlitz3.ab3@24779>   BEQ dimmore
00033FCE <AmiBlitz3.ab3@24780>   MOVEA.l lastoffset_org,A0
00033FD0 <AmiBlitz3.ab3@24781>   MOVE.l (A0),D0
00033FD4 <AmiBlitz3.ab3@24782>    BEQ.w JUMP_comerr
00033FD6 <AmiBlitz3.ab3@24783>   MOVEA.l D0,A0
00033FDC <AmiBlitz3.ab3@24784>   MOVE.l A0,lastoffset_org
00033FE2 <AmiBlitz3.ab3@24785>   BTST #$1,$7(A0)
00033FE6 <AmiBlitz3.ab3@24786>    BNE.w JUMP_nocomerr
00033FEA <AmiBlitz3.ab3@24787>   MOVEA.l $A(A0),A1
00033FEE <AmiBlitz3.ab3@24788>   MOVE.l $4(A1),D2
00033FF4 <AmiBlitz3.ab3@24791>   BTST #$0,$7(A0)
00033FF8 <AmiBlitz3.ab3@24792>    BNE.w JL_0_E078
00033FFE <AmiBlitz3.ab3@24793>   CMP.l #$100,D2
00034002 <AmiBlitz3.ab3@24794>    BCC.l JUMP_nocomerr
00034006 <AmiBlitz3.ab3@24795> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
0003400C <AmiBlitz3.ab3@24798>         CLR.b optiarray
00034010 <AmiBlitz3.ab3@24799>         CMP.w #"@@",(a5)
00034014 <AmiBlitz3.ab3@24800>         BEQ 'n1
00034018 <AmiBlitz3.ab3@24801> BRA 'd1
0003401E <AmiBlitz3.ab3@24804>   JSR nextline
00034020 <AmiBlitz3.ab3@24805>         MOVE.l a5,-(a7)
00034022 <AmiBlitz3.ab3@24808>   MOVE.b (a5)+,d0
00034026 <AmiBlitz3.ab3@24809>         CMP.b #$20,d0
0003402A <AmiBlitz3.ab3@24810>         BEQ 'l2
0003402C <AmiBlitz3.ab3@24811>         MOVE.l (a7)+,a5
00034030 <AmiBlitz3.ab3@24812>         CMP.b #";",d0
00034034 <AmiBlitz3.ab3@24813>         BEQ 'n1
0003403A <AmiBlitz3.ab3@24816>         TST.w debugmode
0003403E <AmiBlitz3.ab3@24817>         BEQ JL_0_DEE0
00034040 <AmiBlitz3.ab3@24818>         MOVE.l a0,-(a7)
00034046 <AmiBlitz3.ab3@24819>         MOVE.l pushat,a0
0003404C <AmiBlitz3.ab3@24820>         CMP.l #0,a0
00034050 <AmiBlitz3.ab3@24821>         BNE 'o1
00034054 <AmiBlitz3.ab3@24822> BRA 'skip
0003405C <AmiBlitz3.ab3@24825>         ADD.l #1,2(a0)
00034062 <AmiBlitz3.ab3@24828>   CLR.w commode
0003406A <AmiBlitz3.ab3@24829>         MOVE.b #1,stackcorrect
0003406C <AmiBlitz3.ab3@24830>         MOVE.l (a7)+,a0
00034072 <AmiBlitz3.ab3@24831> JMP JL_0_DEE0
00034078 <AmiBlitz3.ab3@24834> JMP nocomerr
0003407E <AmiBlitz3.ab3@24837>   CMP.l #$100,D2
00034082 <AmiBlitz3.ab3@24838>    BCS.w JL_0_E084
00034084 <AmiBlitz3.ab3@24839>   MOVEQ.l #$00,D2
00034088 <AmiBlitz3.ab3@24842>   BSET #$E,D2
0003408C <AmiBlitz3.ab3@24845>   BSET #$F,D2
00034090 <AmiBlitz3.ab3@24846> BRA.w JL_0_DEE0
00034096 <AmiBlitz3.ab3@24849>    MOVE.l destpointer,a4
0003409E <AmiBlitz3.ab3@24850>    MOVE.l #$f22a6400,-4(a4)
000340A4 <AmiBlitz3.ab3@24851>    MOVE.w arrayoffset,d1
000340AA <AmiBlitz3.ab3@24852> JMP writeword
000340B0 <AmiBlitz3.ab3@24855> JMP comerr
000340B6 <AmiBlitz3.ab3@24858>    TST.b fpu
000340BA <AmiBlitz3.ab3@24859>    BEQ 'nofloat
000340BE <AmiBlitz3.ab3@24860>    CMP.b #5,d2
000340C2 <AmiBlitz3.ab3@24861>    BNE 'nofloat
000340C8 <AmiBlitz3.ab3@24862>    CLR.w fp0var
000340CE <AmiBlitz3.ab3@24863>    LEA regtable,a4
000340D0 <AmiBlitz3.ab3@24864>    TST.l (a4)
000340D4 <AmiBlitz3.ab3@24865>    BEQ 'noreg
000340D8 <AmiBlitz3.ab3@24866>    BTST #15,d2                                             ;regvars
000340DC <AmiBlitz3.ab3@24867>    BNE 'noreg
000340E0 <AmiBlitz3.ab3@24868>    CMP.w 0+4(a4),d3
000340E4 <AmiBlitz3.ab3@24869>    BNE 'doreg1
000340EA <AmiBlitz3.ab3@24870>    MOVE.l #$f2000380,d1
000340F0 <AmiBlitz3.ab3@24871>    MOVE.w regnum,d0
000340F4 <AmiBlitz3.ab3@24872>    BNE 'noopt
000340FA <AmiBlitz3.ab3@24878>    MOVE.l destpointer,a4
00034102 <AmiBlitz3.ab3@24879>    CMP.l #$f2001c80,-8(a4)
00034106 <AmiBlitz3.ab3@24880>    BNE 'noopt
0003410E <AmiBlitz3.ab3@24881>    CMP.l #$f2000422,-4(a4)
00034112 <AmiBlitz3.ab3@24882>    BNE 'noopt
00034118 <AmiBlitz3.ab3@24883>    MOVE.l #$f20003a2,d1
00034122 <AmiBlitz3.ab3@24884>    SUB.l #8,destpointer
00034124 <AmiBlitz3.ab3@24887>    ASL.w #7,d0
00034126 <AmiBlitz3.ab3@24888>    OR.w d0,d1
0003412C <AmiBlitz3.ab3@24889>    JSR writelong
0003412E <AmiBlitz3.ab3@24890> RTS
00034132 <AmiBlitz3.ab3@24893>   CMP.w 8+4(a4),d3
00034136 <AmiBlitz3.ab3@24894>    BNE 'doreg2
0003413C <AmiBlitz3.ab3@24895>    MOVE.l #$f2000300,d1
00034142 <AmiBlitz3.ab3@24896>    MOVE.w regnum,d0
00034144 <AmiBlitz3.ab3@24897>    ASL.w #7,d0
00034146 <AmiBlitz3.ab3@24898>    OR.w d0,d1
0003414C <AmiBlitz3.ab3@24899>    JSR writelong
0003414E <AmiBlitz3.ab3@24900> RTS
00034152 <AmiBlitz3.ab3@24903>   CMP.w 16+4(a4),d3
00034156 <AmiBlitz3.ab3@24904>    BNE 'doreg3
0003415C <AmiBlitz3.ab3@24905>    MOVE.l #$f2000280,d1
00034162 <AmiBlitz3.ab3@24906>    MOVE.w regnum,d0
00034164 <AmiBlitz3.ab3@24907>    ASL.w #7,d0
00034166 <AmiBlitz3.ab3@24908>    OR.w d0,d1
0003416C <AmiBlitz3.ab3@24909>    JSR  writelong
0003416E <AmiBlitz3.ab3@24910>  RTS
00034172 <AmiBlitz3.ab3@24913>   CMP.w 24+4(a4),d3
00034176 <AmiBlitz3.ab3@24914>    BNE 'doreg4
0003417C <AmiBlitz3.ab3@24915>    MOVE.l #$f2000200,d1
00034182 <AmiBlitz3.ab3@24916>    MOVE.w regnum,d0
00034184 <AmiBlitz3.ab3@24917>    ASL.w #7,d0
00034186 <AmiBlitz3.ab3@24918>    OR.w d0,d1
0003418C <AmiBlitz3.ab3@24919>    JSR writelong
0003418E <AmiBlitz3.ab3@24920> RTS
00034192 <AmiBlitz3.ab3@24923>   CMP.w 32+4(a4),d3
00034196 <AmiBlitz3.ab3@24924>    BNE 'noreg
0003419C <AmiBlitz3.ab3@24925>    MOVE.l #$f2000180,d1
000341A2 <AmiBlitz3.ab3@24926>    MOVE.w regnum,d0
000341A4 <AmiBlitz3.ab3@24927>    ASL.w #7,d0
000341A6 <AmiBlitz3.ab3@24928>    OR.w d0,d1
000341AC <AmiBlitz3.ab3@24929>    JSR writelong
000341AE <AmiBlitz3.ab3@24930> RTS
000341B4 <AmiBlitz3.ab3@24933>    TST.w regnum
000341B8 <AmiBlitz3.ab3@24934>    BNE 'nofp0
000341BE <AmiBlitz3.ab3@24935>    MOVE.l destpointer ,a4
000341C6 <AmiBlitz3.ab3@24936>    CMP.l #$f2304400,-6(a4)
000341CA <AmiBlitz3.ab3@24937>    BNE 'do
000341D0 <AmiBlitz3.ab3@24938>    CMP.w #$1990,-2(a4)
000341D4 <AmiBlitz3.ab3@24939>    BNE 'do
000341D8 <AmiBlitz3.ab3@24940>    BTST #15,d2                                             ;types ?
000341DC <AmiBlitz3.ab3@24941>    BNE 'do
000341E2 <AmiBlitz3.ab3@24942>   MOVE.l #$2b701990,d1                                     ;var
000341E8 <AmiBlitz3.ab3@24943>   TST.w varmode
000341EC <AmiBlitz3.ab3@24944>   BEQ 'glob1
000341F0 <AmiBlitz3.ab3@24945>   BCLR #25,d1
000341F4 <AmiBlitz3.ab3@24948>   MOVE.l d1,-6(a4)
000341F8 <AmiBlitz3.ab3@24949>   MOVE.w d3,-2(a4)
000341FE <AmiBlitz3.ab3@24950>   CLR.w fp0var
00034206 <AmiBlitz3.ab3@24951>   MOVE.w #$ffff,fp0mode
00034208 <AmiBlitz3.ab3@24952> RTS
00034210 <AmiBlitz3.ab3@24955>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
00034214 <AmiBlitz3.ab3@24956>    BNE 'do3
0003421E <AmiBlitz3.ab3@24957>    CMP.l #newtype_double,currtype
00034222 <AmiBlitz3.ab3@24958>    BEQ 'do4
00034226 <AmiBlitz3.ab3@24961>   MOVE.w #$2b6d,d1
0003422C <AmiBlitz3.ab3@24962>    TST.w varmode
00034230 <AmiBlitz3.ab3@24963>    BEQ 'g2
00034234 <AmiBlitz3.ab3@24964>     BCLR #9,d1
00034238 <AmiBlitz3.ab3@24967>     CMP.w #$2b6d,d1
0003423C <AmiBlitz3.ab3@24968>     BNE 'd1
00034240 <AmiBlitz3.ab3@24969>     CMP.w -2(a4),d3
00034244 <AmiBlitz3.ab3@24970>     BNE 'd1
0003424A <AmiBlitz3.ab3@24971>     SUBQ.l #6,destpointer
0003424E <AmiBlitz3.ab3@24972> BRA 'd12
00034252 <AmiBlitz3.ab3@24975>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
00034258 <AmiBlitz3.ab3@24976>     MOVE.w -2(a4),-4(a4)
0003425C <AmiBlitz3.ab3@24977>     MOVE.w d3,-2(a4)
00034262 <AmiBlitz3.ab3@24980>   CLR.w fp0var
0003426A <AmiBlitz3.ab3@24981>     MOVE.w #$ffff,fp0mode
0003426C <AmiBlitz3.ab3@24982> RTS
00034274 <AmiBlitz3.ab3@24985>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
00034278 <AmiBlitz3.ab3@24986>    BNE 'do4
0003427C <AmiBlitz3.ab3@24987>    MOVE.w #$2b6c,d1
00034282 <AmiBlitz3.ab3@24988>       TST.w varmode
00034286 <AmiBlitz3.ab3@24989>    BEQ 'g3
0003428A <AmiBlitz3.ab3@24990>    BCLR #9,d1
0003428E <AmiBlitz3.ab3@24993>   MOVE.w d1,-6(a4)
00034294 <AmiBlitz3.ab3@24994>     MOVE.w -2(a4),-4(a4)
00034298 <AmiBlitz3.ab3@24995>     MOVE.w d3,-2(a4)
0003429E <AmiBlitz3.ab3@24996>     CLR.w fp0var
000342A6 <AmiBlitz3.ab3@24997>     MOVE.w #$ffff,fp0mode
000342A8 <AmiBlitz3.ab3@24998> RTS
000342AE <AmiBlitz3.ab3@25001>   MOVE.w d3,fp0var
000342B8 <AmiBlitz3.ab3@25002>    MOVE.w varmode,fp0mode
000342BA <AmiBlitz3.ab3@25003>    ADDQ.l #6,a4
000342C0 <AmiBlitz3.ab3@25004>    MOVE.l a4,fp0addr
000342CA <AmiBlitz3.ab3@25005>    MOVE.l firstiff,fp0iff
000342CE <AmiBlitz3.ab3@25008>   MOVEM.l d0/d4,-(a7)
000342D0 <AmiBlitz3.ab3@25009>    MOVEQ #0,d0
000342D6 <AmiBlitz3.ab3@25010>     MOVE.w regnum,d0
000342D8 <AmiBlitz3.ab3@25011>    ASL.w #7,d0                                             ;fpu store var
000342DC <AmiBlitz3.ab3@25012>   BTST #15,d2
000342E0 <AmiBlitz3.ab3@25013>    BEQ 'var
000342E2 <AmiBlitz3.ab3@25014>    MOVE.w d1,d4
000342E6 <AmiBlitz3.ab3@25015>    CMP.w #$24c0,d4
000342EA <AmiBlitz3.ab3@25016>    BNE 'nopl
000342F0 <AmiBlitz3.ab3@25017>    MOVE.l #$f21a6400,d1
000342F2 <AmiBlitz3.ab3@25018>    MOVEQ #0,d3
000342F6 <AmiBlitz3.ab3@25019> BRA 'glob
000342FC <AmiBlitz3.ab3@25023>   MOVE.l #$f2126400,d1
000342FE <AmiBlitz3.ab3@25024>    TST.w d3                                                ;offset =0
00034302 <AmiBlitz3.ab3@25025>    BNE 'offset
00034308 <AmiBlitz3.ab3@25026>    MOVE.l #$f2126400,d1
0003430A <AmiBlitz3.ab3@25034>    MOVEQ #0,d3
0003430E <AmiBlitz3.ab3@25035> BRA 'glob
00034314 <AmiBlitz3.ab3@25038>   MOVE.l #$f22d6400,d1                                     ;var
0003431A <AmiBlitz3.ab3@25039>   TST.w varmode
0003431E <AmiBlitz3.ab3@25040>   BEQ 'glob
00034322 <AmiBlitz3.ab3@25041>   BCLR #16,d1
00034324 <AmiBlitz3.ab3@25042>  'glob OR.l d0,d1
0003432E <AmiBlitz3.ab3@25045>   CMP.l #newtype_double,currtype
00034332 <AmiBlitz3.ab3@25046>   BNE 'dbl1
00034338 <AmiBlitz3.ab3@25047>   OR.l #$00001000,d1
0003433E <AmiBlitz3.ab3@25050>   JSR writelong
00034344 <AmiBlitz3.ab3@25051>   CLR.l currtype
00034348 <AmiBlitz3.ab3@25052>   MOVEM.l (a7)+,d0/d4
0003434A <AmiBlitz3.ab3@25053>   MOVE.l d3,d1
0003434E <AmiBlitz3.ab3@25054>   BEQ 'nooffs
00034354 <AmiBlitz3.ab3@25055> JMP writeword
00034356 <AmiBlitz3.ab3@25058> RTS
0003435C <AmiBlitz3.ab3@25072>     TST.b fast                                             ;write lea->xx(a2)
00034360 <AmiBlitz3.ab3@25073>    BEQ 'la10
00034366 <AmiBlitz3.ab3@25077>    TST.b quickadd
0003436C <AmiBlitz3.ab3@25079>      CLR.b quickadd
00034370 <AmiBlitz3.ab3@25080>    CMP.w #$2480,d1
00034374 <AmiBlitz3.ab3@25081>    BNE 'la10
0003437A <AmiBlitz3.ab3@25082>    TST.b optiarray
0003437E <AmiBlitz3.ab3@25083>    BNE 'la10
00034384 <AmiBlitz3.ab3@25084>    MOVE.l destpointer,a4
0003438A <AmiBlitz3.ab3@25085>    CMP.w #$45ea,-4(a4)
0003438E <AmiBlitz3.ab3@25086>    BNE 'la10
00034396 <AmiBlitz3.ab3@25087>    CMP.w #8,pushclen
0003439A <AmiBlitz3.ab3@25088>    BEQ 'la100
000343A2 <AmiBlitz3.ab3@25089>    CMP.w #6,pushclen
000343A6 <AmiBlitz3.ab3@25090>    BNE 'la10
000343AA <AmiBlitz3.ab3@25091>    CMP.b #3,d2
000343AE <AmiBlitz3.ab3@25092>    BCS 'la110
000343B4 <AmiBlitz3.ab3@25094>    MOVE.w #$2540,-2(a4)
000343BA <AmiBlitz3.ab3@25095>    MOVE.w arrayoffset,d1
000343C0 <AmiBlitz3.ab3@25096> JMP writeword
000343C6 <AmiBlitz3.ab3@25099>    CLR.b quickadd
000343C8 <AmiBlitz3.ab3@25100> RTS
000343CC <AmiBlitz3.ab3@25103>    CMP.b #2,d2
000343D0 <AmiBlitz3.ab3@25104>    BNE 'la120
000343D6 <AmiBlitz3.ab3@25105>     MOVE.w #$3540,-2(a4)
000343DC <AmiBlitz3.ab3@25106>    MOVE.w arrayoffset,d1
000343E2 <AmiBlitz3.ab3@25107> JMP writeword
000343E6 <AmiBlitz3.ab3@25110>   CMP.b #1,d2
000343EA <AmiBlitz3.ab3@25111>    BNE.s 'la10
000343F0 <AmiBlitz3.ab3@25112>     MOVE.w #$1540,-2(a4)
000343F6 <AmiBlitz3.ab3@25113>    MOVE.w arrayoffset,d1
000343FC <AmiBlitz3.ab3@25114> JMP writeword
00034400 <AmiBlitz3.ab3@25117>    CMP.b #3,d2
00034404 <AmiBlitz3.ab3@25118>    BCS 'la11
0003440A <AmiBlitz3.ab3@25119>    MOVE.w #$2540,-4(a4)
0003440C <AmiBlitz3.ab3@25120> RTS
00034410 <AmiBlitz3.ab3@25123>    CMP.b #2,d2
00034414 <AmiBlitz3.ab3@25124>    BNE 'la12
0003441A <AmiBlitz3.ab3@25125>     MOVE.w #$3540,-4(a4)
0003441C <AmiBlitz3.ab3@25126> RTS
00034420 <AmiBlitz3.ab3@25128>  'la12 CMP.b #1,d2
00034424 <AmiBlitz3.ab3@25129>    BNE.s 'la10
0003442A <AmiBlitz3.ab3@25130>     MOVE.w #$1540,-4(a4)
0003442C <AmiBlitz3.ab3@25131> RTS
00034432 <AmiBlitz3.ab3@25134>   CLR.b optiarray
00034436 <AmiBlitz3.ab3@25135>    CMP.b #$1,D2
0003443A <AmiBlitz3.ab3@25136>    BEQ.w JL_0_E0AC
0003443E <AmiBlitz3.ab3@25137>    BSR.w varalign
00034442 <AmiBlitz3.ab3@25138>    CMP.b #$3,D2
00034446 <AmiBlitz3.ab3@25139>    BCC.w writevarlong
0003444C <AmiBlitz3.ab3@25140>    TST.b fast                                              ;optiimmi
00034450 <AmiBlitz3.ab3@25141>    BEQ 'l10b
00034456 <AmiBlitz3.ab3@25146>    MOVE.l destpointer,a0
0003445C <AmiBlitz3.ab3@25147>    SUB.l imm_addr,a0
00034462 <AmiBlitz3.ab3@25148>    CMP.l #4,a0
00034466 <AmiBlitz3.ab3@25149>    BNE 'l10
0003446C <AmiBlitz3.ab3@25150>    CLR.l imm_addr
00034472 <AmiBlitz3.ab3@25151>    MOVE.l destpointer,a4
00034476 <AmiBlitz3.ab3@25152>    OR.w #$107c,d1
0003447A <AmiBlitz3.ab3@25153>    MOVE.w d1,-4(a4)
0003447C <AmiBlitz3.ab3@25154>     MOVE.w D3,D1
00034482 <AmiBlitz3.ab3@25155> JMP writeword
00034488 <AmiBlitz3.ab3@25158>   MOVE.l destpointer,a0
0003448E <AmiBlitz3.ab3@25159>   SUB.l load_var_addr,a0
00034494 <AmiBlitz3.ab3@25160>   CMP.l #4,a0
00034498 <AmiBlitz3.ab3@25161>   BNE 'l10b
0003449E <AmiBlitz3.ab3@25162>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
000344A2 <AmiBlitz3.ab3@25163>   BNE 'l10b
000344A8 <AmiBlitz3.ab3@25165>   CLR.l load_var_addr
000344AE <AmiBlitz3.ab3@25166>   MOVE.l destpointer,a4
000344B2 <AmiBlitz3.ab3@25167>   OR.w #$102d,d1
000344B6 <AmiBlitz3.ab3@25168>   MOVE.w d1,-4(a4)
000344B8 <AmiBlitz3.ab3@25169>   MOVE.w d3,d1
000344BE <AmiBlitz3.ab3@25170> JMP writeword
000344C2 <AmiBlitz3.ab3@25173>   ORI.w #$1000,D1                                          ;word
000344C6 <AmiBlitz3.ab3@25174> BRA.w writestorevar
000344CC <AmiBlitz3.ab3@25178>    TST.b fast                                              ;optiimmi
000344D0 <AmiBlitz3.ab3@25179>    BEQ 'l10b
000344D6 <AmiBlitz3.ab3@25184>    MOVE.l destpointer,a0
000344DC <AmiBlitz3.ab3@25185>    SUB.l imm_addr,a0
000344E2 <AmiBlitz3.ab3@25186>    CMP.l #4,a0
000344E6 <AmiBlitz3.ab3@25187>    BNE 'l10
000344EC <AmiBlitz3.ab3@25188>    CLR.l imm_addr
000344F2 <AmiBlitz3.ab3@25189>    MOVE.l destpointer,a4
000344F6 <AmiBlitz3.ab3@25190>    OR.w #$7c,d1
000344FA <AmiBlitz3.ab3@25191>    EORI #$3000,d1
000344FE <AmiBlitz3.ab3@25192>    MOVE.w d1,-4(a4)
00034500 <AmiBlitz3.ab3@25193>       MOVE.w D3,D1
00034506 <AmiBlitz3.ab3@25194> JMP writeword
0003450C <AmiBlitz3.ab3@25197>   MOVE.l destpointer,a0
00034512 <AmiBlitz3.ab3@25198>   SUB.l load_var_addr,a0
00034518 <AmiBlitz3.ab3@25199>   CMP.l #4,a0
0003451C <AmiBlitz3.ab3@25200>   BNE 'l10b
00034522 <AmiBlitz3.ab3@25201>   CLR.l load_var_addr
00034528 <AmiBlitz3.ab3@25202>   MOVE.l destpointer,a4
0003452E <AmiBlitz3.ab3@25203>    CMP.w #$1b6d,-4(a4)
00034532 <AmiBlitz3.ab3@25204>    BNE 'l10b
00034536 <AmiBlitz3.ab3@25205>    OR.w #$2d,d1
0003453A <AmiBlitz3.ab3@25206>    EORI #$3000,d1
0003453E <AmiBlitz3.ab3@25207>    MOVE.w d1,-4(a4)
00034540 <AmiBlitz3.ab3@25208>   MOVE.w d3,d1
00034546 <AmiBlitz3.ab3@25209> JMP writeword
0003454C <AmiBlitz3.ab3@25212>   ADDQ.w #1,pcodd                                          ;byte
00034550 <AmiBlitz3.ab3@25213>   EORI.w #$3000,D1
00034556 <AmiBlitz3.ab3@25216>   JSR writeword
0003455A <AmiBlitz3.ab3@25217>   BTST #$7,D1
0003455E <AmiBlitz3.ab3@25218>    BNE JL_0_E0C6
00034560 <AmiBlitz3.ab3@25219>   MOVE.w D3,D1
00034566 <AmiBlitz3.ab3@25220> JMP writeword
0003456C <AmiBlitz3.ab3@25223>    TST.b fast                                              ;optiimmi
00034570 <AmiBlitz3.ab3@25224>    BEQ 'l10b
00034576 <AmiBlitz3.ab3@25228>    MOVE.l destpointer,a0
0003457C <AmiBlitz3.ab3@25229>    SUB.l imm_addr,a0
00034582 <AmiBlitz3.ab3@25230>    CMP.l #6,a0
00034586 <AmiBlitz3.ab3@25231>    BNE 'l10
0003458C <AmiBlitz3.ab3@25232>    CLR.l imm_addr
00034592 <AmiBlitz3.ab3@25233>    MOVE.l destpointer,a4
00034596 <AmiBlitz3.ab3@25234>    OR.w #$7c,d1
0003459A <AmiBlitz3.ab3@25235>    MOVE.w d1,-6(a4)
0003459C <AmiBlitz3.ab3@25236>     MOVE.w D3,D1
000345A2 <AmiBlitz3.ab3@25237> JMP writeword
000345A8 <AmiBlitz3.ab3@25240>   MOVE.l destpointer,a0
000345AE <AmiBlitz3.ab3@25241>   SUB.l load_var_addr,a0
000345B4 <AmiBlitz3.ab3@25242>   CMP.l #4,a0
000345B8 <AmiBlitz3.ab3@25243>   BNE 'l10b
000345BE <AmiBlitz3.ab3@25244>   CLR.l load_var_addr
000345C4 <AmiBlitz3.ab3@25245>   MOVE.l destpointer,a4
000345CA <AmiBlitz3.ab3@25246>   CMP.w #$245f,-2(a4)
000345CE <AmiBlitz3.ab3@25247>   BEQ 'l10b
000345D2 <AmiBlitz3.ab3@25248>   OR.w #$28,d1
000345D6 <AmiBlitz3.ab3@25249>   OR.w d1,-4(a4)
000345DC <AmiBlitz3.ab3@25250>   CMP.w #$2b6d,-4(a4)
000345E0 <AmiBlitz3.ab3@25251>   BNE 'd1
000345E4 <AmiBlitz3.ab3@25252>   CMP.w -2(a4),d3
000345E8 <AmiBlitz3.ab3@25253>   BNE 'd1
000345EE <AmiBlitz3.ab3@25254>   SUBQ.l #4,destpointer
000345F0 <AmiBlitz3.ab3@25255> RTS
000345F2 <AmiBlitz3.ab3@25258>   MOVE.w d3,d1
000345F8 <AmiBlitz3.ab3@25259> JMP writeword
000345FE <AmiBlitz3.ab3@25262>   JSR writeword
00034602 <AmiBlitz3.ab3@25263>   BTST #$7,D1
00034606 <AmiBlitz3.ab3@25264>    BNE.b JL_0_E0C6
00034608 <AmiBlitz3.ab3@25265>   MOVE.w D3,D1
0003460E <AmiBlitz3.ab3@25266> JMP writeword
00034610 <AmiBlitz3.ab3@25269> RTS
00034612 <AmiBlitz3.ab3@25273>   MOVE.w D1,-(A7)
00034616 <AmiBlitz3.ab3@25274>   MOVE.w pcodd(PC),D1
00034618 <AmiBlitz3.ab3@25275>   LSR.w #1,D1
0003461C <AmiBlitz3.ab3@25276>    BCC.b JL_0_E0E2
00034622 <AmiBlitz3.ab3@25277>   CLR.w pcodd
00034628 <AmiBlitz3.ab3@25278>   MOVE.w add1a2,D1
0003462E <AmiBlitz3.ab3@25279>    JSR writeword
00034630 <AmiBlitz3.ab3@25282>   MOVE.w (A7)+,D1
00034632 <AmiBlitz3.ab3@25283> RTS
00034634 <AmiBlitz3.ab3@25287> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
00034636 <AmiBlitz3.ab3@25290> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
00034638 <AmiBlitz3.ab3@25291> listadd:   Ds.w 1                                          ;set to 8 if it's a list
0003463A <AmiBlitz3.ab3@25292> listsize:  Ds.w 1
00034640 <AmiBlitz3.ab3@25296>   ADDQ.w #1,regnum
00034648 <AmiBlitz3.ab3@25297>   MOVE.b #1,nowdeclare
0003464E <AmiBlitz3.ab3@25298>   CLR.b dimkeep
00034656 <AmiBlitz3.ab3@25299>    CMP.l #"KEEP",-1(a5)
0003465A <AmiBlitz3.ab3@25300>   BNE 'nokeep
00034660 <AmiBlitz3.ab3@25301>   CMP.b #" ",3(a5)
00034664 <AmiBlitz3.ab3@25302>   BNE 'nokeep
00034666 <AmiBlitz3.ab3@25303>   ADDQ.l #3,a5
0003466A <AmiBlitz3.ab3@25306>     CMP.b #" ",(a5)
0003466E <AmiBlitz3.ab3@25307>     BNE '1
00034670 <AmiBlitz3.ab3@25308>    ADDQ #1,a5
00034674 <AmiBlitz3.ab3@25309> BRA '2
0003467A <AmiBlitz3.ab3@25312>   MOVE.l a5,lastsourcepos
00034682 <AmiBlitz3.ab3@25313>   MOVE.b #1,dimkeep
00034686 <AmiBlitz3.ab3@25321>   MOVE.w #$FF9A,D1
0003468C <AmiBlitz3.ab3@25322>   JSR uselib
00034692 <AmiBlitz3.ab3@25325>   CLR.w listadd
00034696 <AmiBlitz3.ab3@25326>   CMP.w #-$7F4D,D0
0003469A <AmiBlitz3.ab3@25327>    BNE.w JL_0_E11E
000346A2 <AmiBlitz3.ab3@25328>   MOVE.w #$0008,listadd
000346A6 <AmiBlitz3.ab3@25329>   MOVE.w #$FFFA,D1
000346AC <AmiBlitz3.ab3@25330>    JSR uselib
000346B2 <AmiBlitz3.ab3@25331>    JSR get1bytemain
000346B8 <AmiBlitz3.ab3@25334>   CLR.w nonew
000346BE <AmiBlitz3.ab3@25335>    JSR getparameter
000346C6 <AmiBlitz3.ab3@25336>   BTST #$1,flagmask+1
000346CA <AmiBlitz3.ab3@25337>    BEQ.w JUMP_syntaxerr
000346D0 <AmiBlitz3.ab3@25338>    JSR JL_0_8E3C
000346D6 <AmiBlitz3.ab3@25339>   MOVE.w notshared,D1
000346DA <AmiBlitz3.ab3@25340>    BNE.w JL_0_E198
000346E2 <AmiBlitz3.ab3@25341>   MOVE.w $8(A3),temp1
000346E8 <AmiBlitz3.ab3@25342>   MOVE.w proceduremode,D2
000346EC <AmiBlitz3.ab3@25343>    BNE.w JL_0_E176
000346F2 <AmiBlitz3.ab3@25344>   MOVE.w globalvarpointer,-(A7)
000346FA <AmiBlitz3.ab3@25345>   MOVE.w $4(A3),globalvarpointer
00034700 <AmiBlitz3.ab3@25346>   ADDQ.w #4,globalvarpointer
00034704 <AmiBlitz3.ab3@25347>    BSR.w write_dim_code
0003470A <AmiBlitz3.ab3@25348>   MOVE.w (A7)+,globalvarpointer
0003470E <AmiBlitz3.ab3@25349> BRA.w JL_0_E1BA
00034714 <AmiBlitz3.ab3@25360>   MOVE.w globalvarpointer,-(A7)
0003471A <AmiBlitz3.ab3@25361>             MOVE.w proceduremode,-(a7)
00034720 <AmiBlitz3.ab3@25362>             CLR.w proceduremode
00034728 <AmiBlitz3.ab3@25363>   MOVE.w $4(A3),globalvarpointer
0003472E <AmiBlitz3.ab3@25364>   ADDQ.w #4,globalvarpointer
00034732 <AmiBlitz3.ab3@25365>    BSR.w write_dim_code
00034738 <AmiBlitz3.ab3@25366>    MOVE.w (a7)+,proceduremode
0003473E <AmiBlitz3.ab3@25367>   MOVE.w (A7)+,globalvarpointer
00034742 <AmiBlitz3.ab3@25368> BRA.w JL_0_E1BA
0003474A <AmiBlitz3.ab3@25371>   MOVE.w #$FFFF,temp1
0003474E <AmiBlitz3.ab3@25372>   MOVE.w listadd(PC),D1
00034752 <AmiBlitz3.ab3@25373>    BEQ.w JL_0_E1B6
0003475A <AmiBlitz3.ab3@25374>   MOVE.w #$4000,temp1
00034760 <AmiBlitz3.ab3@25375>   BSET #$0,$6(A3)
00034766 <AmiBlitz3.ab3@25378>         TST.w proceduremode
0003476A <AmiBlitz3.ab3@25379>        BNE 'l1
00034770 <AmiBlitz3.ab3@25380>        MOVE.w locvaroff,-(a7)
00034774 <AmiBlitz3.ab3@25383>   BSR.w write_dim_code
0003477A <AmiBlitz3.ab3@25384>         TST.w proceduremode
0003477E <AmiBlitz3.ab3@25385>         BNE JL_0_E1BA
00034784 <AmiBlitz3.ab3@25386>        MOVE.w (A7)+,locvaroff
0003478A <AmiBlitz3.ab3@25389>   JSR get1bytemain
0003478E <AmiBlitz3.ab3@25390>   CMP.w #$2C,D0
00034792 <AmiBlitz3.ab3@25391>    BNE.w JL_0_E1CE
00034798 <AmiBlitz3.ab3@25392>    JSR get1bytemain
0003479C <AmiBlitz3.ab3@25393> BRA.w JL_0_E0FC
0003479E <AmiBlitz3.ab3@25396> RTS
000347A6 <AmiBlitz3.ab3@25399>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
000347AC <AmiBlitz3.ab3@25400>   MOVE.w beginarr,D1
000347B2 <AmiBlitz3.ab3@25401>    JSR writeword
000347B4 <AmiBlitz3.ab3@25402>   MOVEQ.l #$00,D1
000347BA <AmiBlitz3.ab3@25403>    JSR writeword
000347BC <AmiBlitz3.ab3@25404>   MOVEQ.l #$04,D1
000347C4 <AmiBlitz3.ab3@25405>   BTST #$0,flagmask+1
000347C8 <AmiBlitz3.ab3@25406>    BNE.w write_dim_code__pointer
000347CC <AmiBlitz3.ab3@25407>   MOVE.w $8(A2),D1
000347D0 <AmiBlitz3.ab3@25410>   ADD.w listadd(PC),D1                                     ;size of one element.
000347D6 <AmiBlitz3.ab3@25411>   MOVE.w D1,listsize
000347DC <AmiBlitz3.ab3@25412>    JSR writeword
000347E2 <AmiBlitz3.ab3@25413>   CLR.w temp2                                              ;# dim's got
000347E4 <AmiBlitz3.ab3@25414>   MOVE.l A3,-(A7)
000347EA <AmiBlitz3.ab3@25417>   ADDQ.w #1,temp2
000347EC <AmiBlitz3.ab3@25418>   MOVEQ.l #$03,D2                                          ;get word
000347F2 <AmiBlitz3.ab3@25419>   MOVE.w notshared,-(a7)
000347F8 <AmiBlitz3.ab3@25420>    JSR eval
000347FE <AmiBlitz3.ab3@25421>   MOVE.w (a7)+,notshared
00034804 <AmiBlitz3.ab3@25422>   TST.b debugmode
00034808 <AmiBlitz3.ab3@25423>    BEQ.w write_dim_code__norerr0
0003480C <AmiBlitz3.ab3@25424>   MOVE.w #$C30F,D1
00034810 <AmiBlitz3.ab3@25430>       MOVE.w #$5281,d1
00034816 <AmiBlitz3.ab3@25431>       JSR writeword
0003481C <AmiBlitz3.ab3@25432>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
00034822 <AmiBlitz3.ab3@25433>       JSR writelong
00034828 <AmiBlitz3.ab3@25434>   MOVE.w proceduremode,D2
0003482C <AmiBlitz3.ab3@25435>    BEQ.w write_dim_code__global
00034832 <AmiBlitz3.ab3@25436>   SUBQ.w #4,locvaroff
0003483C <AmiBlitz3.ab3@25437>   MOVE.w locvaroff,putarr+2
00034840 <AmiBlitz3.ab3@25438> BRA.w write_dim_code__doit
00034846 <AmiBlitz3.ab3@25441> JMP syntaxerr
00034850 <AmiBlitz3.ab3@25444>   MOVE.w globalvarpointer,putarr+2
00034856 <AmiBlitz3.ab3@25445>   ADDQ.w #4,globalvarpointer
0003485C <AmiBlitz3.ab3@25448>   TST.b dimkeep
00034860 <AmiBlitz3.ab3@25449>            BEQ write_dim_code__doit_l1
00034862 <AmiBlitz3.ab3@25450>       MOVEQ #0,d1
00034868 <AmiBlitz3.ab3@25451>       MOVE.w putarr+2,d1
0003486E <AmiBlitz3.ab3@25452>       OR.l  #$222d0000,d1
00034874 <AmiBlitz3.ab3@25453>       MOVE.w proceduremode,D2
00034878 <AmiBlitz3.ab3@25454>       BEQ write_dim_code__doit_l2
0003487E <AmiBlitz3.ab3@25455>       TST.w notshared
00034882 <AmiBlitz3.ab3@25456>       BEQ write_dim_code__doit_l2
00034888 <AmiBlitz3.ab3@25457>       SUB.l #$00010000,d1
0003488E <AmiBlitz3.ab3@25460>   JSR writelong
00034894 <AmiBlitz3.ab3@25463>   MOVE.l putarr,D1
0003489A <AmiBlitz3.ab3@25464>       TST.w notshared
0003489E <AmiBlitz3.ab3@25465>       BNE write_dim_code__doit_l1a
000348A4 <AmiBlitz3.ab3@25466>       JSR writelong
000348A8 <AmiBlitz3.ab3@25467> BRA write_dim_code__doit_l4
000348AE <AmiBlitz3.ab3@25470>   JSR pokela5d
000348B2 <AmiBlitz3.ab3@25473>   CMP.w #$2C,D0
000348B6 <AmiBlitz3.ab3@25474>    BEQ.w write_dim_code__loop
000348BA <AmiBlitz3.ab3@25475>   CMP.w #$29,D0
000348BE <AmiBlitz3.ab3@25476>    BNE.w JUMP_syntaxerr
000348C0 <AmiBlitz3.ab3@25477>   MOVEA.l (A7)+,A3
000348C6 <AmiBlitz3.ab3@25478>   MOVE.w temp1,D1
000348CA <AmiBlitz3.ab3@25479>    BMI.w write_dim_code__nocare
000348CE <AmiBlitz3.ab3@25483>   BTST #$E,D1
000348D2 <AmiBlitz3.ab3@25484>    BEQ.w write_dim_code__notl
000348DA <AmiBlitz3.ab3@25485>   CMPI.w #$1,temp2
000348DE <AmiBlitz3.ab3@25486>    BNE.w JUMP_redimerr
000348E2 <AmiBlitz3.ab3@25487> BRA.w write_dim_code__nocare
000348E8 <AmiBlitz3.ab3@25490> JMP redimerr
000348EE <AmiBlitz3.ab3@25493>   CMP.w temp2,D1
000348F2 <AmiBlitz3.ab3@25494>    BNE.w JUMP_redimerr                                      ;range too long
000348F8 <AmiBlitz3.ab3@25497>   LEA globalvarpointer,A0
000348FE <AmiBlitz3.ab3@25498>   MOVE.w proceduremode,D1
00034902 <AmiBlitz3.ab3@25499>   BEQ.w write_dim_code__gskip
00034908 <AmiBlitz3.ab3@25500>   LEA locvaroff,A0
0003490E <AmiBlitz3.ab3@25503>   MOVE.W  extraword,(A0)
00034912 <AmiBlitz3.ab3@25504>   BRA.W   write_dim_code__care
0003491A <AmiBlitz3.ab3@25507>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034920 <AmiBlitz3.ab3@25510>   LEA doarr,A0
00034926 <AmiBlitz3.ab3@25511>   MOVE.w $4(A3),$2(A0)
0003492E <AmiBlitz3.ab3@25512>   MOVE.w putarr+2,$6(A0)
00034930 <AmiBlitz3.ab3@25513>   MOVE.l (A0)+,D1
00034936 <AmiBlitz3.ab3@25514>    JSR writelong
00034938 <AmiBlitz3.ab3@25515>   MOVE.l (A0),D1
0003493E <AmiBlitz3.ab3@25516>    JSR writelong
00034944 <AmiBlitz3.ab3@25517>    TST.b dimkeep
00034948 <AmiBlitz3.ab3@25518>   BNE write_dim_code__care_l3
0003494C <AmiBlitz3.ab3@25521>   MOVE.w #$C400,D1
00034950 <AmiBlitz3.ab3@25522> BRA write_dim_code__care_l2
00034954 <AmiBlitz3.ab3@25525>   MOVE.w #$C405,d1
0003495A <AmiBlitz3.ab3@25528>   MOVE.w proceduremode,D2
0003495E <AmiBlitz3.ab3@25529>    BEQ.w write_dim_code__isg
00034964 <AmiBlitz3.ab3@25530>    TST.w notshared
00034968 <AmiBlitz3.ab3@25531>    BEQ write_dim_code__isg
0003496A <AmiBlitz3.ab3@25532>   ADDQ.w #1,D1
0003496E <AmiBlitz3.ab3@25535>   MOVE.w listadd(PC),D2
00034972 <AmiBlitz3.ab3@25536>    BEQ.w write_dim_code__isrg
00034974 <AmiBlitz3.ab3@25537>   MOVE.w D1,-(A7)
00034978 <AmiBlitz3.ab3@25538>   MOVE.w setles(PC),D1
0003497E <AmiBlitz3.ab3@25539>    JSR writeword
00034982 <AmiBlitz3.ab3@25540>   MOVE.w listsize(PC),D1
00034988 <AmiBlitz3.ab3@25541>    JSR writeword
0003498A <AmiBlitz3.ab3@25542>   MOVE.w (A7)+,D1
0003498C <AmiBlitz3.ab3@25543>   ADDQ.w #3,D1
00034990 <AmiBlitz3.ab3@25546> BRA.w Atokejsr
00034996 <AmiBlitz3.ab3@25553>     MOVE.l #$f23c4400,d1
0003499C <AmiBlitz3.ab3@25555>   MOVE.w regnum,d0
0003499E <AmiBlitz3.ab3@25556>   ASL.w #7,d0
000349A0 <AmiBlitz3.ab3@25557>   OR.w d0,d1
000349A6 <AmiBlitz3.ab3@25558>   JSR writelong
000349AC <AmiBlitz3.ab3@25564>     MOVE.l #$40490fd9,d1
000349B2 <AmiBlitz3.ab3@25566>   JSR writelong
000349B8 <AmiBlitz3.ab3@25567> JMP get1bytemain
000349BC <AmiBlitz3.ab3@25571> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
000349C0 <AmiBlitz3.ab3@25578> vbr:                Ds.l 1
000349C2 <AmiBlitz3.ab3@25579> cfetchmode:         Ds.w 1                               ;1=fetching a constant
000349C8 <AmiBlitz3.ab3@25581> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
000349CC <AmiBlitz3.ab3@25585> constpcat:          Ds.l 1
000349D0 <AmiBlitz3.ab3@25586> constlibat:         Ds.l 1
000349D4 <AmiBlitz3.ab3@25587> constmaxpc:         Dc.l $400
000349D8 <AmiBlitz3.ab3@25589> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
000349DC <AmiBlitz3.ab3@25590> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
000349E0 <AmiBlitz3.ab3@25591> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
000349E4 <AmiBlitz3.ab3@25592> lastrestype:        Dc.l newtype_string
000349E6 <AmiBlitz3.ab3@25593> rescnt:             Ds.w 1                               ;# resident
000349E8 <AmiBlitz3.ab3@25594> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
000349EC <AmiBlitz3.ab3@25595> resat:              Dc.l residents_table                 ;??looks like not used anymore??
000349EE <AmiBlitz3.ab3@25596> linedone:           Ds.w 1
00034A04 <AmiBlitz3.ab3@25597> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034A08 <AmiBlitz3.ab3@25606>   Dc.l 0                                        ; bytetobyte
00034A0C <AmiBlitz3.ab3@25607>   Dc.l convert_byte_to_word                     ; bytetoword
00034A10 <AmiBlitz3.ab3@25608>   Dc.l convert_byte_to_long                     ; bytetolong
00034A14 <AmiBlitz3.ab3@25609>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034A18 <AmiBlitz3.ab3@25610>   Dc.l convert_byte_to_float                    ; bytetofloat
00034A1C <AmiBlitz3.ab3@25611>   Dc.l convert_byte_to_long                     ; bytetolong
00034A20 <AmiBlitz3.ab3@25612>   Dc.l error_convert_types                      ; noconerr
00034A24 <AmiBlitz3.ab3@25615>   Dc.l convert_word_to_byte                     ; wordtobyte
00034A28 <AmiBlitz3.ab3@25616>   Dc.l 0                                        ; wordtoword
00034A2C <AmiBlitz3.ab3@25617>   Dc.l convert_word_to_long                     ; wordtolong
00034A30 <AmiBlitz3.ab3@25618>   Dc.l convert_word_to_quick                    ; wordtoquick
00034A34 <AmiBlitz3.ab3@25619>   Dc.l convert_word_to_float                    ; wordtofloat
00034A38 <AmiBlitz3.ab3@25620>   Dc.l convert_word_to_long                     ; wordtolong
00034A3C <AmiBlitz3.ab3@25621>   Dc.l error_convert_types                      ; noconerr
00034A40 <AmiBlitz3.ab3@25624>   Dc.l convert_long_to_byte                     ; longtobyte
00034A44 <AmiBlitz3.ab3@25625>   Dc.l convert_long_to_word                     ; longtoword
00034A48 <AmiBlitz3.ab3@25626>   Dc.l 0                                        ; longtolong
00034A4C <AmiBlitz3.ab3@25627>   Dc.l convert_long_to_quick                    ; longtoquick
00034A50 <AmiBlitz3.ab3@25628>   Dc.l convert_long_to_float                    ; longtofloat
00034A54 <AmiBlitz3.ab3@25629>   Dc.l 0                                        ; longtolong
00034A58 <AmiBlitz3.ab3@25630>   Dc.l error_convert_types                      ; noconerr
00034A5C <AmiBlitz3.ab3@25633>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034A60 <AmiBlitz3.ab3@25634>   Dc.l convert_quick_to_word                    ; quicktoword
00034A64 <AmiBlitz3.ab3@25635>   Dc.l convert_quick_to_long                    ; quicktolong
00034A68 <AmiBlitz3.ab3@25636>   Dc.l 0                                        ; quicktoquick
00034A6C <AmiBlitz3.ab3@25637>   Dc.l convert_quick_to_float                   ; quicktofloat
00034A70 <AmiBlitz3.ab3@25638>   Dc.l convert_quick_to_long                    ; quicktolong
00034A74 <AmiBlitz3.ab3@25639>   Dc.l error_convert_types                      ; noconerr
00034A78 <AmiBlitz3.ab3@25642>   Dc.l convert_float_to_byte                    ; floattobyte
00034A7C <AmiBlitz3.ab3@25643>   Dc.l convert_float_to_word                    ; floattoword
00034A80 <AmiBlitz3.ab3@25644>   Dc.l convert_float_to_long                    ; floattolong
00034A84 <AmiBlitz3.ab3@25645>   Dc.l convert_float_to_quick                   ; floattoquick
00034A88 <AmiBlitz3.ab3@25646>   Dc.l 0                                        ; floattofloat
00034A8C <AmiBlitz3.ab3@25647>   Dc.l convert_float_to_long                    ; floattolong
00034A90 <AmiBlitz3.ab3@25648>   Dc.l error_convert_types                      ; noconerr
00034A94 <AmiBlitz3.ab3@25651>   Dc.l convert_long_to_byte                     ; longtobyte
00034A98 <AmiBlitz3.ab3@25652>   Dc.l convert_long_to_word                     ; longtoword
00034A9C <AmiBlitz3.ab3@25653>   Dc.l 0                                        ; longtolong
00034AA0 <AmiBlitz3.ab3@25654>   Dc.l convert_long_to_quick                    ; longtoquick
00034AA4 <AmiBlitz3.ab3@25655>   Dc.l convert_long_to_float                    ; longtofloat
00034AA8 <AmiBlitz3.ab3@25656>   Dc.l 0                                        ; longtolong
00034AAC <AmiBlitz3.ab3@25657>   Dc.l error_convert_types                      ; noconerr
00034AB0 <AmiBlitz3.ab3@25660>   Dc.l error_convert_types                      ; noconerr
00034AB4 <AmiBlitz3.ab3@25661>   Dc.l error_convert_types                      ; noconerr
00034AB8 <AmiBlitz3.ab3@25662>   Dc.l string_to_long                           ; stringtolong
00034ABC <AmiBlitz3.ab3@25663>   Dc.l error_convert_types                      ; noconerr
00034AC0 <AmiBlitz3.ab3@25664>   Dc.l error_convert_types                      ; noconerr
00034AC4 <AmiBlitz3.ab3@25665>   Dc.l string_to_long                           ; stringtolong
00034AC8 <AmiBlitz3.ab3@25666>   Ds.l 1
00034ACA <AmiBlitz3.ab3@25672>   Dc.b $00,$2B                                  ;+ ; add
00034ACE <AmiBlitz3.ab3@25673>   Dc.l do_plus_byte                             ;doplusb
00034AD2 <AmiBlitz3.ab3@25674>   Dc.l do_plus_word                             ;doplusw
00034AD6 <AmiBlitz3.ab3@25675>   Dc.l do_plus_long                             ;doplusl
00034ADA <AmiBlitz3.ab3@25676>   Dc.l do_plus_long                             ;doplusl
00034ADE <AmiBlitz3.ab3@25677>   Dc.l do_plus_float                            ;doplusf
00034AE2 <AmiBlitz3.ab3@25678>   Ds.l 1
00034AE6 <AmiBlitz3.ab3@25679>   Dc.l add_strings                              ;addstrings
00034AE8 <AmiBlitz3.ab3@25680>   Dc.b $0B,$B8
00034AEA <AmiBlitz3.ab3@25682>   Dc.b $00,$2D                                  ;- ; sub
00034AEE <AmiBlitz3.ab3@25683>   Dc.l do_minus_byte                            ;dominusb
00034AF2 <AmiBlitz3.ab3@25684>   Dc.l do_minus_word                            ;dominusw
00034AF6 <AmiBlitz3.ab3@25685>   Dc.l do_minus_long                            ;dominusl
00034AFA <AmiBlitz3.ab3@25686>   Dc.l do_minus_long                            ;dominusl
00034AFE <AmiBlitz3.ab3@25687>   Dc.l do_minus_float                           ;dominusf
00034B06 <AmiBlitz3.ab3@25688>   Ds.l 2
00034B08 <AmiBlitz3.ab3@25689>   Dc.b $0B,$B8
00034B0A <AmiBlitz3.ab3@25691>   Dc.b $00,$2A                                  ;* ; mul
00034B0E <AmiBlitz3.ab3@25692>   Dc.l do_times_byte                            ;dotimesb
00034B12 <AmiBlitz3.ab3@25693>   Dc.l do_times_word                            ;dotimesw
00034B16 <AmiBlitz3.ab3@25694>   Dc.l do_times_long                            ;dotimesl
00034B1A <AmiBlitz3.ab3@25695>   Dc.l do_times_quick                           ;dotimesq
00034B1E <AmiBlitz3.ab3@25696>   Dc.l do_times_float                           ;dotimesf
00034B26 <AmiBlitz3.ab3@25697>   Ds.l 2
00034B28 <AmiBlitz3.ab3@25698>   Dc.b $0F,$A0
00034B2A <AmiBlitz3.ab3@25700>   Dc.b $00,$2F                                  ;/ ; div
00034B2E <AmiBlitz3.ab3@25701>   Dc.l do_Div_byte                              ;dodivb
00034B32 <AmiBlitz3.ab3@25702>   Dc.l do_Div_word                              ;dodivb
00034B36 <AmiBlitz3.ab3@25703>   Dc.l do_Div_long                              ;dodivl
00034B3A <AmiBlitz3.ab3@25704>   Dc.l do_Div_quick                             ;dodivq
00034B3E <AmiBlitz3.ab3@25705>   Dc.l do_Div_float                             ;dodivf
00034B46 <AmiBlitz3.ab3@25706>   Ds.l 2
00034B48 <AmiBlitz3.ab3@25707>   Dc.b $0F,$A0
00034B4A <AmiBlitz3.ab3@25709>   Dc.b $00,$26                                  ;& ; & int
00034B4E <AmiBlitz3.ab3@25710>   Dc.l do_AND_byte                              ;doandb
00034B52 <AmiBlitz3.ab3@25711>   Dc.l do_AND_word                              ;doandw
00034B56 <AmiBlitz3.ab3@25712>   Dc.l do_AND_long                              ;doandl
00034B5A <AmiBlitz3.ab3@25713>   Dc.l do_AND_long                              ;doandl
00034B66 <AmiBlitz3.ab3@25714>   Ds.l 3
00034B68 <AmiBlitz3.ab3@25715>   Dc.b $13,$88
00034B6A <AmiBlitz3.ab3@25717>   Dc.b $00,$7C                                  ;| ;or int ;
00034B6E <AmiBlitz3.ab3@25718>   Dc.l do_OR_byte                               ;doorb
00034B72 <AmiBlitz3.ab3@25719>   Dc.l do_OR_word                               ;doorw
00034B76 <AmiBlitz3.ab3@25720>   Dc.l do_OR_long                               ;doorl
00034B7A <AmiBlitz3.ab3@25721>   Dc.l do_OR_long                               ;doorl
00034B86 <AmiBlitz3.ab3@25722>   Ds.l 3
00034B88 <AmiBlitz3.ab3@25723>   Dc.b $13,$88
00034B8A <AmiBlitz3.ab3@25725>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00034B8E <AmiBlitz3.ab3@25726>   Dc.l do_AND_byte                              ;doandb
00034B92 <AmiBlitz3.ab3@25727>   Dc.l do_AND_word                              ;doandw
00034B96 <AmiBlitz3.ab3@25728>   Dc.l do_AND_long                              ;doandl
00034B9A <AmiBlitz3.ab3@25729>   Dc.l do_AND_long                              ;doandl
00034BA6 <AmiBlitz3.ab3@25730>   Ds.l 3
00034BA8 <AmiBlitz3.ab3@25731>   Dc.b $03,$E8
00034BAA <AmiBlitz3.ab3@25733>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00034BAE <AmiBlitz3.ab3@25734>   Dc.l do_OR_byte                               ;doorb
00034BB2 <AmiBlitz3.ab3@25735>   Dc.l do_OR_word                               ;doorw
00034BB6 <AmiBlitz3.ab3@25736>   Dc.l do_OR_long                               ;doorl
00034BBA <AmiBlitz3.ab3@25737>   Dc.l do_OR_long                               ;doorl
00034BC6 <AmiBlitz3.ab3@25738>   Ds.l 3
00034BC8 <AmiBlitz3.ab3@25739>   Dc.b $03,$E8
00034BCA <AmiBlitz3.ab3@25741>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00034BCE <AmiBlitz3.ab3@25742>   Dc.l do_EOR_byte                              ;doeorb
00034BD2 <AmiBlitz3.ab3@25743>   Dc.l do_EOR_word                              ;doeorw
00034BD6 <AmiBlitz3.ab3@25744>   Dc.l do_EOR_long                              ;doeorl
00034BDA <AmiBlitz3.ab3@25745>   Dc.l do_EOR_long                              ;doeorl
00034BE6 <AmiBlitz3.ab3@25746>   Ds.l 3
00034BE8 <AmiBlitz3.ab3@25747>   Dc.b $03,$E8
00034BEA <AmiBlitz3.ab3@25749>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00034BEE <AmiBlitz3.ab3@25750>   Dc.l do_LSL                                   ;dolslb
00034BF2 <AmiBlitz3.ab3@25751>   Dc.l do_LSL                                   ;dolslw
00034BF6 <AmiBlitz3.ab3@25752>   Dc.l do_LSL                                   ;dolsll
00034BFA <AmiBlitz3.ab3@25753>   Dc.l do_LSL                                   ;dolsll
00034C06 <AmiBlitz3.ab3@25754>   Ds.l 3
00034C08 <AmiBlitz3.ab3@25755>   Dc.b $17,$70
00034C0A <AmiBlitz3.ab3@25757>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00034C0E <AmiBlitz3.ab3@25758>   Dc.l do_LSL                                   ;dolslb
00034C12 <AmiBlitz3.ab3@25759>   Dc.l do_LSL                                   ;dolslw
00034C16 <AmiBlitz3.ab3@25760>   Dc.l do_LSL                                   ;dolsll
00034C1A <AmiBlitz3.ab3@25761>   Dc.l do_LSL                                   ;dolsll
00034C26 <AmiBlitz3.ab3@25762>   Ds.l 3
00034C28 <AmiBlitz3.ab3@25763>   Dc.b $17,$70
00034C2A <AmiBlitz3.ab3@25765>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00034C2E <AmiBlitz3.ab3@25766>   Dc.l do_LSR                                   ;dolsrb
00034C32 <AmiBlitz3.ab3@25767>   Dc.l do_LSR                                   ;dolsrw
00034C36 <AmiBlitz3.ab3@25768>   Dc.l do_LSR                                   ;dolsrl
00034C3A <AmiBlitz3.ab3@25769>   Dc.l do_LSR                                   ;dolsrl
00034C46 <AmiBlitz3.ab3@25770>   Ds.l 3
00034C48 <AmiBlitz3.ab3@25771>   Dc.b $17,$70
00034C4A <AmiBlitz3.ab3@25773>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034C4E <AmiBlitz3.ab3@25774>   Dc.l do_ASR                                   ;doasrb
00034C52 <AmiBlitz3.ab3@25775>   Dc.l do_ASR                                   ;doasrw
00034C56 <AmiBlitz3.ab3@25776>   Dc.l do_ASR                                   ;doasrl
00034C5A <AmiBlitz3.ab3@25777>   Dc.l do_ASR                                   ;doasrl
00034C66 <AmiBlitz3.ab3@25778>   Ds.l 3
00034C68 <AmiBlitz3.ab3@25779>   Dc.b $17,$70
00034C6A <AmiBlitz3.ab3@25781>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034C6E <AmiBlitz3.ab3@25782>   Dc.l do_mod_byte                              ;domodb
00034C72 <AmiBlitz3.ab3@25783>   Dc.l do_mod_word                              ;domodw
00034C76 <AmiBlitz3.ab3@25784>   Dc.l do_mod_long                              ;domodl
00034C7A <AmiBlitz3.ab3@25785>   Dc.l do_mod_quick                             ;domodq
00034C7E <AmiBlitz3.ab3@25786>   Dc.l do_mod_float                             ;domodf
00034C86 <AmiBlitz3.ab3@25787>   Ds.l 2
00034C88 <AmiBlitz3.ab3@25788>   Dc.b $13,$88
00034C8A <AmiBlitz3.ab3@25791>   Dc.b $00,$5E                                  ;^
00034C8E <AmiBlitz3.ab3@25792>   Dc.l do_pow                                   ;dopow
00034C92 <AmiBlitz3.ab3@25793>   Dc.l do_pow                                   ;dopow
00034C96 <AmiBlitz3.ab3@25794>   Dc.l do_pow                                   ;dopow
00034C9A <AmiBlitz3.ab3@25795>   Dc.l do_pow                                   ;dopow
00034C9E <AmiBlitz3.ab3@25796>   Dc.l do_pow                                   ;dopow
00034CA6 <AmiBlitz3.ab3@25797>   Ds.l 2
00034CA8 <AmiBlitz3.ab3@25798>   Dc.b $1B,$58                                  ;7000
00034CAA <AmiBlitz3.ab3@25801>   Dc.b $00,$3D                                  ;=
00034CAE <AmiBlitz3.ab3@25802>   Dc.l do_equal_byte                            ;doeqb
00034CB2 <AmiBlitz3.ab3@25803>   Dc.l do_equal_word                            ;doeqw
00034CB6 <AmiBlitz3.ab3@25804>   Dc.l do_equal_long                            ;doeql
00034CBA <AmiBlitz3.ab3@25805>   Dc.l do_equal_long                            ;doeql
00034CBE <AmiBlitz3.ab3@25806>   Dc.l do_equal_float                           ;doeqf
00034CC2 <AmiBlitz3.ab3@25807>   Dc.l do_equal_long                            ;doeql
00034CC6 <AmiBlitz3.ab3@25808>   Dc.l do_equal_string                          ;doeqs
00034CC8 <AmiBlitz3.ab3@25809>   Dc.b $07,$D0                                  ;2000
00034CCA <AmiBlitz3.ab3@25812>   Dc.b $3C,$3E                                  ;<>
00034CCE <AmiBlitz3.ab3@25813>   Dc.l do_not_equal_byte                        ;doneb
00034CD2 <AmiBlitz3.ab3@25814>   Dc.l do_not_equal_word                        ;donew
00034CD6 <AmiBlitz3.ab3@25815>   Dc.l do_not_equal_long                        ;donel
00034CDA <AmiBlitz3.ab3@25816>   Dc.l do_not_equal_long                        ;donel
00034CDE <AmiBlitz3.ab3@25817>   Dc.l do_not_equal_float                       ;donef
00034CE2 <AmiBlitz3.ab3@25818>   Dc.l do_not_equal_long                        ;donel
00034CE6 <AmiBlitz3.ab3@25819>   Dc.l do_not_equal_string                      ;dones
00034CE8 <AmiBlitz3.ab3@25820>   Dc.b $07,$D0                                  ;2000
00034CEA <AmiBlitz3.ab3@25823>   Dc.b $00,$3C                                  ;<
00034CEE <AmiBlitz3.ab3@25824>   Dc.l do_littler_byte                          ;doltb
00034CF2 <AmiBlitz3.ab3@25825>   Dc.l do_littler_word                          ;doltw
00034CF6 <AmiBlitz3.ab3@25826>   Dc.l do_littler_long                          ;doltl
00034CFA <AmiBlitz3.ab3@25827>   Dc.l do_littler_long                          ;doltl
00034CFE <AmiBlitz3.ab3@25828>   Dc.l do_littler_float                         ;doltf
00034D02 <AmiBlitz3.ab3@25829>   Dc.l do_littler_long                          ;doltl
00034D06 <AmiBlitz3.ab3@25830>   Dc.l do_littler_string                        ;dolts
00034D08 <AmiBlitz3.ab3@25831>   Dc.b $07,$D0                                  ;2000
00034D0A <AmiBlitz3.ab3@25834>   Dc.b $3C,$3D                                  ;<=
00034D0E <AmiBlitz3.ab3@25835>   Dc.l do_littler_equal_byte                    ;doleb
00034D12 <AmiBlitz3.ab3@25836>   Dc.l do_littler_equal_word                    ;doleb
00034D16 <AmiBlitz3.ab3@25837>   Dc.l do_littler_equal_long                    ;dolel
00034D1A <AmiBlitz3.ab3@25838>   Dc.l do_littler_equal_long                    ;dolel
00034D1E <AmiBlitz3.ab3@25839>   Dc.l do_littler_equal_float                   ;dolef
00034D22 <AmiBlitz3.ab3@25840>   Dc.l do_littler_equal_long                    ;dolel
00034D26 <AmiBlitz3.ab3@25841>   Dc.l do_littler_equal_string                  ;doles
00034D28 <AmiBlitz3.ab3@25842>   Dc.b $07,$D0                                  ;2000
00034D2A <AmiBlitz3.ab3@25845>   Dc.b $00,$3E                                  ;>
00034D2E <AmiBlitz3.ab3@25846>   Dc.l do_greater_byte                          ;dogtb
00034D32 <AmiBlitz3.ab3@25847>   Dc.l do_greater_word                          ;dogtw
00034D36 <AmiBlitz3.ab3@25848>   Dc.l do_greater_long                          ;dogtl
00034D3A <AmiBlitz3.ab3@25849>   Dc.l do_greater_long                          ;dogtl
00034D3E <AmiBlitz3.ab3@25850>   Dc.l do_greater_float                         ;dogtf
00034D42 <AmiBlitz3.ab3@25851>   Dc.l do_greater_long                          ;dogtl
00034D46 <AmiBlitz3.ab3@25852>   Dc.l do_greater_string                        ;dogts
00034D48 <AmiBlitz3.ab3@25853>   Dc.b $07,$D0                                  ;2000
00034D4A <AmiBlitz3.ab3@25856>   Dc.b $3E,$3D                                  ;>=
00034D4E <AmiBlitz3.ab3@25857>   Dc.l do_greater_equal_byte                    ;dogeb
00034D52 <AmiBlitz3.ab3@25858>   Dc.l do_greater_equal_word                    ;dogew
00034D56 <AmiBlitz3.ab3@25859>   Dc.l do_greater_equal_long                    ;dogel
00034D5A <AmiBlitz3.ab3@25860>   Dc.l do_greater_equal_long                    ;dogel
00034D5E <AmiBlitz3.ab3@25861>   Dc.l do_greater_equal_float                   ;dogef
00034D62 <AmiBlitz3.ab3@25862>   Dc.l do_greater_equal_long                    ;dogel
00034D66 <AmiBlitz3.ab3@25863>   Dc.l do_greater_equal_string                  ;doges
00034D68 <AmiBlitz3.ab3@25864>   Dc.b $07,$D0                                  ;2000
00034D6A <AmiBlitz3.ab3@25866>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034D6E <AmiBlitz3.ab3@25867>   Dc.l _BitTst
00034D72 <AmiBlitz3.ab3@25868>   Dc.l _BitTst
00034D76 <AmiBlitz3.ab3@25869>   Dc.l _BitTst
00034D7A <AmiBlitz3.ab3@25870>   Dc.l _BitTst
00034D86 <AmiBlitz3.ab3@25871>   Ds.l 3
00034D88 <AmiBlitz3.ab3@25872>   Dc.b $1F,$40                                  ;8000
00034D8A <AmiBlitz3.ab3@25874>   Dc.b $80,$CE                                  ;$8000+27+tnum
00034D8E <AmiBlitz3.ab3@25875>   Dc.l _BitSet
00034D92 <AmiBlitz3.ab3@25876>   Dc.l _BitSet
00034D96 <AmiBlitz3.ab3@25877>   Dc.l _BitSet
00034D9A <AmiBlitz3.ab3@25878>   Dc.l _BitSet
00034DA6 <AmiBlitz3.ab3@25879>   Ds.l 3
00034DA8 <AmiBlitz3.ab3@25880>   Dc.b $1F,$40                                  ;8000
00034DAA <AmiBlitz3.ab3@25882>   Dc.b $80,$CF                                  ;$8000+28+tnum
00034DAE <AmiBlitz3.ab3@25883>   Dc.l _BitClr
00034DB2 <AmiBlitz3.ab3@25884>   Dc.l _BitClr
00034DB6 <AmiBlitz3.ab3@25885>   Dc.l _BitClr
00034DBA <AmiBlitz3.ab3@25886>   Dc.l _BitClr
00034DC6 <AmiBlitz3.ab3@25887>   Ds.l 3
00034DC8 <AmiBlitz3.ab3@25888>   Dc.b $1F,$40                                  ;8000
00034DCA <AmiBlitz3.ab3@25890>   Dc.b $80,$D0                                  ;$8000+29+tnum
00034DCE <AmiBlitz3.ab3@25891>   Dc.l _BitChg
00034DD2 <AmiBlitz3.ab3@25892>   Dc.l _BitChg
00034DD6 <AmiBlitz3.ab3@25893>   Dc.l _BitChg
00034DDA <AmiBlitz3.ab3@25894>   Dc.l _BitChg
00034DE6 <AmiBlitz3.ab3@25895>   Ds.l 3
00034DE8 <AmiBlitz3.ab3@25896>   Dc.b $1F,$40                                  ;8000
00034DEA <AmiBlitz3.ab3@25898>   Dc.b $00,$00
00034DEE <AmiBlitz3.ab3@25903> modetable:   Dc.l typemode
00034DF2 <AmiBlitz3.ab3@25906> newtypebase: Dc.l newtype_byte
00034DFA <AmiBlitz3.ab3@25909>   Dc.l newtype_word,$01                                    
00034DFC <AmiBlitz3.ab3@25910>   Dc.w $0001
00034E00 <AmiBlitz3.ab3@25911>   Dc.b 13,"b",0,0
00034E08 <AmiBlitz3.ab3@25914>   Dc.l newtype_long,$02
00034E0A <AmiBlitz3.ab3@25915>   Dc.w $0002
00034E0E <AmiBlitz3.ab3@25916>   Dc.b 13,"w",0,0
00034E16 <AmiBlitz3.ab3@25919>   Dc.l newtype_quick,$03                                   
00034E18 <AmiBlitz3.ab3@25920>   Dc.w $0004
00034E1C <AmiBlitz3.ab3@25921>   Dc.b 13,"l",0,0
00034E24 <AmiBlitz3.ab3@25924>   Dc.l newtype_float,$04                                   
00034E26 <AmiBlitz3.ab3@25925>   Dc.w $0004
00034E2A <AmiBlitz3.ab3@25926>   Dc.b 13,"q",0,0
00034E32 <AmiBlitz3.ab3@25930>   Dc.l newtype_double,$05                                  ;make problems on old residents
00034E34 <AmiBlitz3.ab3@25931>   Dc.w $0004
00034E38 <AmiBlitz3.ab3@25932>   Dc.b 13,"f",0,0
00034E40 <AmiBlitz3.ab3@25935>   Dc.l newtype_double,$06
00034E42 <AmiBlitz3.ab3@25936>   Dc.w $0004
00034E46 <AmiBlitz3.ab3@25937>   Dc.b 13,"a",0,0
00034E4E <AmiBlitz3.ab3@25940>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00034E50 <AmiBlitz3.ab3@25941>   Dc.w $0008
00034E54 <AmiBlitz3.ab3@25942>   Dc.b 13,"d",0,0
00034E5C <AmiBlitz3.ab3@25946>   Dc.l $0000000,$07                                        ;stringtype
00034E5E <AmiBlitz3.ab3@25947>   Dc.w $0004
00034E62 <AmiBlitz3.ab3@25948>   Dc.b 13,"s",0,0
00034E6A <AmiBlitz3.ab3@25951>   Dc.l $00,$00
00034E6C <AmiBlitz3.ab3@25952>   Dc.w $0000
00034E70 <AmiBlitz3.ab3@25953>   Dc.b $01,$00,$00,$00
00034ED0 <AmiBlitz3.ab3@25956> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00034ED2 <AmiBlitz3.ab3@25960> dirmode:              Ds.w 1                               ;shows if directmode is on
00034ED6 <AmiBlitz3.ab3@25962>                       Ds.l 1                               ;int org source ;intuition!
00034ED8 <AmiBlitz3.ab3@25963> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00034EDC <AmiBlitz3.ab3@25964> maxsat:               Ds.l 1                               ;data1 info pos
00034EDE <AmiBlitz3.ab3@25965> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00034EE0 <AmiBlitz3.ab3@25967> maxsused:             Ds.w 1                               ;maximums used in prog
00034EE2 <AmiBlitz3.ab3@25971> dark:                 Ds.w 1                               ;dark compile?
00034EE4 <AmiBlitz3.ab3@25972> qlab:                 Ds.w 1                               ;quick lab allocate
00034EE8 <AmiBlitz3.ab3@25973> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00034EEA <AmiBlitz3.ab3@25978> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00034EEC <AmiBlitz3.ab3@25979> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00034EF0 <AmiBlitz3.ab3@25980> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00034EF4 <AmiBlitz3.ab3@25982> letstart:             Ds.l 1
00034EF6 <AmiBlitz3.ab3@25983> dontwrite:            Ds.w 1                               ;nomemleft org source
00034F76 <AmiBlitz3.ab3@25984> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034F7A <AmiBlitz3.ab3@25986> locdatast:            Ds.l 1
00034F7E <AmiBlitz3.ab3@25987> firstpend:            Ds.l 1
00034F82 <AmiBlitz3.ab3@25991> data2at:              Ds.l 1
00034F86 <AmiBlitz3.ab3@25992> data2:                Ds.l 1
00034F8A <AmiBlitz3.ab3@25993> data1start:           Ds.l 1                               ;data1at org source
00034F8E <AmiBlitz3.ab3@25994> data1:                Ds.l 1                               ;pc for initialized data!
00034F92 <AmiBlitz3.ab3@25995> destbufferstart:      Ds.l 1                               ;pcat org source
00034F96 <AmiBlitz3.ab3@25999> destbufferend:        Ds.l 1                               ;libat org source
00034F9A <AmiBlitz3.ab3@26000> libend:               Ds.l 1                               ;lib org source
00034F9E <AmiBlitz3.ab3@26001> allat:                Ds.l 1                               ;highest allocmemd location for code
00034FA8 <AmiBlitz3.ab3@26002> dummyasm:             Dc.w 0,0,0,0,0
00034FAC <AmiBlitz3.ab3@26003>                       Dc.l 0
00034FAE <AmiBlitz3.ab3@26004>                       Dc.w 0
00034FB2 <AmiBlitz3.ab3@26008> buff1:                Ds.l 1                               ;buffer for text get
00034FB6 <AmiBlitz3.ab3@26009> buff2:                Ds.l 1                               ;ditto for dest
00034FB8 <AmiBlitz3.ab3@26010> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00034FBA <AmiBlitz3.ab3@26011> asmtype:              Ds.w 1                               ;0=contains no prog reference
00034FBC <AmiBlitz3.ab3@26012> extraword:            Ds.w 1                               ;the extension word for assembler
00034FBE <AmiBlitz3.ab3@26013> extraword2:           Ds.w 1                               ;ditto
00034FC0 <AmiBlitz3.ab3@26014> asmsize:              Ds.w 1
00034FC4 <AmiBlitz3.ab3@26015> asmbuff:              Ds.l 1
00034FC6 <AmiBlitz3.ab3@26016> asmlen:               Ds.w 1                               ;first (src) text len
00034FC8 <AmiBlitz3.ab3@26017> asmlen2:              Ds.w 1                               ;second (dest)
00034FCC <AmiBlitz3.ab3@26018> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00034FCE <AmiBlitz3.ab3@26021> macnum:               Ds.w 1
00034FD2 <AmiBlitz3.ab3@26023>                       Dc.l 0                               ;address of next 0 in include fil
00034FD6 <AmiBlitz3.ab3@26024> titleat:              Ds.l 1                               ;5 longs for compile streaks
00034FE0 <AmiBlitz3.ab3@26025> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
00034FE2 <AmiBlitz3.ab3@26026> connest:              Ds.w 1                               ;conditional nest level
00034FE6 <AmiBlitz3.ab3@26027> firstconst:           Ds.l 1                               ;first constant (#a)
00034FE8 <AmiBlitz3.ab3@26028> numarg:               Ds.w 1                               ;number of macro arguements
00034FEC <AmiBlitz3.ab3@26029> myoline:              Ds.l 1                               ;macro done yet?
00034FF0 <AmiBlitz3.ab3@26030> myline:               Ds.l 1                               ;pointer to some memory to create
00034FF4 <AmiBlitz3.ab3@26033>                       Ds.l 1
00035034 <AmiBlitz3.ab3@26034> concomstack:          Ds.l 16                              ;32 deep conditional compilation
00035038 <AmiBlitz3.ab3@26035> concomsp:             Dc.l concomstack                     ;stack pointer
0003503A <AmiBlitz3.ab3@26036> oldqflag:             Ds.w 1
0003503E <AmiBlitz3.ab3@26039>                       Ds.l 1
00035040 <AmiBlitz3.ab3@26041>                       Ds.w 1
00035044 <AmiBlitz3.ab3@26042> firstfor:             Ds.l 1                               ;first for
00035046 <AmiBlitz3.ab3@26043> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
00035048 <AmiBlitz3.ab3@26044> sbgot:                Ds.w 1                               ;flag for string got 2
0003504A <AmiBlitz3.ab3@26045> convsize:             Ds.w 1                               ;usertype org source
0003504C <AmiBlitz3.ab3@26046> userp:                Ds.w 1
00035050 <AmiBlitz3.ab3@26051> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
00035052 <AmiBlitz3.ab3@26052> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
00035054 <AmiBlitz3.ab3@26053> numreps:              Ds.w 1                               ;number of repeats in a repeatable
00035058 <AmiBlitz3.ab3@26055> locloc:               Ds.l 1
0003505A <AmiBlitz3.ab3@26056> locchar:              Ds.w 1
000350DA <AmiBlitz3.ab3@26057> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
000350DC <AmiBlitz3.ab3@26058> commode:              Ds.w 1                               ;in comma mode...
000350E0 <AmiBlitz3.ab3@26059> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
000350E4 <AmiBlitz3.ab3@26060> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
000350E8 <AmiBlitz3.ab3@26061> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
000350EA <AmiBlitz3.ab3@26063>                       Ds.w 1                               ;opt reset offset
000351EA <AmiBlitz3.ab3@26065>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
000352EA <AmiBlitz3.ab3@26067>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
000352EC <AmiBlitz3.ab3@26068> varcodelen:           Ds.w 1                               ;and length
000352EE <AmiBlitz3.ab3@26070>                       Ds.w 1
000352F4 <AmiBlitz3.ab3@26071> oldvcodelen:          Ds.w 3                               ;old varcodelen
000352F8 <AmiBlitz3.ab3@26075> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
000352FA <AmiBlitz3.ab3@26076> memlibstat:           Ds.w 1                               ;status of memory library during
000352FC <AmiBlitz3.ab3@26079>                       Dc.w 0
000352FE <AmiBlitz3.ab3@26081>                       Dc.w 0
00035300 <AmiBlitz3.ab3@26083> varmode:              Ds.w 1                               ;0 a5 pointer to global
00035304 <AmiBlitz3.ab3@26085> currentfunction:      Ds.l 1                               ;thisproc org source
00035308 <AmiBlitz3.ab3@26086> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
0003530A <AmiBlitz3.ab3@26087> 
0003530C <AmiBlitz3.ab3@26089> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00035310 <AmiBlitz3.ab3@26090> passstack:            Ds.l 1
00035314 <AmiBlitz3.ab3@26091> zero:                 Ds.l 1                               ;ZERO!
00035316 <AmiBlitz3.ab3@26092> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
0003531A <AmiBlitz3.ab3@26094> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
0003531E <AmiBlitz3.ab3@26095> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00035320 <AmiBlitz3.ab3@26096> lasta6:               Dc.w $FFFF                           ;-1 org source
00035322 <AmiBlitz3.ab3@26097> instringon:           Ds.w 1                               ;quoteflag org source
00035326 <AmiBlitz3.ab3@26098> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
0003532A <AmiBlitz3.ab3@26099> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
0003532E <AmiBlitz3.ab3@26100> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
00035332 <AmiBlitz3.ab3@26101> endop:                Ds.l 1                               ;end of program pc - before finishups!
00035336 <AmiBlitz3.ab3@26102> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
0003533A <AmiBlitz3.ab3@26103> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
0003533C <AmiBlitz3.ab3@26104> numstatic:            Ds.w 1                               ;number of static structs
00035340 <AmiBlitz3.ab3@26105> staticdata:           Ds.l 1                               ;data1 val for statics
00035344 <AmiBlitz3.ab3@26106> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
00035346 <AmiBlitz3.ab3@26107> sbasegot:             Ds.w 1                               ;string base got?
0003534A <AmiBlitz3.ab3@26108> litdata1:             Ds.l 1
0003534E <AmiBlitz3.ab3@26112> objlen:               Ds.l 1
00035352 <AmiBlitz3.ab3@26113> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
00035356 <AmiBlitz3.ab3@26114> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
00035358 <AmiBlitz3.ab3@26116> flagmask:             Ds.w 1                               ;mask for flag of variable when
0003535A <AmiBlitz3.ab3@26118> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
0003535C <AmiBlitz3.ab3@26119> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
00035360 <AmiBlitz3.ab3@26120> temp1:                Ds.l 1
00035364 <AmiBlitz3.ab3@26121> temp2:                Ds.l 1
00035368 <AmiBlitz3.ab3@26123> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
0003536C <AmiBlitz3.ab3@26124> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
000353E0 <AmiBlitz3.ab3@26125> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
000353E4 <AmiBlitz3.ab3@26126> fib_Size:             Ds.l 1                               ;namebuff+124 org source
00035464 <AmiBlitz3.ab3@26128> namebuff2:            Ds.b 128
0003546C <AmiBlitz3.ab3@26129>                       Ds.b 8                               ;for fileinfoblock
000354AC <AmiBlitz3.ab3@26132> optstuff:             Ds.b 64                              ;temp opt make buffer
000354AE <AmiBlitz3.ab3@26149>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
000354B2 <AmiBlitz3.ab3@26150>   Dc.l xtra_versionnumber                                  ; vers org source
000354B6 <AmiBlitz3.ab3@26151>   Dc.l create_iconfile                                     ; create icon for executable
000354BA <AmiBlitz3.ab3@26152>   Ds.l 1
000354BC <AmiBlitz3.ab3@26154>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
000354C0 <AmiBlitz3.ab3@26157>   Dc.l set_use_debugger
000354C4 <AmiBlitz3.ab3@26158>   Dc.l AL_0_11010                                          ;+obsolet: debugger
000354C8 <AmiBlitz3.ab3@26159>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
000354CC <AmiBlitz3.ab3@26160>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
000354D0 <AmiBlitz3.ab3@26161>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
000354D4 <AmiBlitz3.ab3@26162>   Dc.l set_make_smallestcode
000354D8 <AmiBlitz3.ab3@26163>   Dc.l set_link_debuginfo
000354DC <AmiBlitz3.ab3@26164>   Dc.l set_autorun
000354E0 <AmiBlitz3.ab3@26165>   Dc.l set_interruptcheck
000354E4 <AmiBlitz3.ab3@26166>   Dc.l set_assemblercheck
000354E8 <AmiBlitz3.ab3@26168>   Dc.l set_overflowcheck
000354EC <AmiBlitz3.ab3@26169>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
000354F0 <AmiBlitz3.ab3@26170>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
000354F4 <AmiBlitz3.ab3@26171>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
000354F8 <AmiBlitz3.ab3@26174>   Ds.l 1
000354FA <AmiBlitz3.ab3@26176>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
000354FE <AmiBlitz3.ab3@26183>   Dc.l objectbuffer
00035502 <AmiBlitz3.ab3@26184>   Dc.l libsbuffer
00035506 <AmiBlitz3.ab3@26185>   Dc.l systembuffer
0003550A <AmiBlitz3.ab3@26186>   Dc.l databuffer
0003550E <AmiBlitz3.ab3@26187>   Dc.l macrobuffer_size
00035512 <AmiBlitz3.ab3@26188>   Dc.l stringbuffer
00035516 <AmiBlitz3.ab3@26191>   Ds.l 1
00035518 <AmiBlitz3.ab3@26195>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035520 <AmiBlitz3.ab3@26196>   Dc.l residents_table,0
00035522 <AmiBlitz3.ab3@26200>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
0003552A <AmiBlitz3.ab3@26201>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
0003552C <AmiBlitz3.ab3@26202>   Ds.w 1
00035628 <AmiBlitz3.ab3@26206>   Ds.l 63
00035724 <AmiBlitz3.ab3@26207>   Ds.l 63
00035820 <AmiBlitz3.ab3@26208>   Ds.l 63
00035902 <AmiBlitz3.ab3@26209>   Ds.w 113
00035904 <AmiBlitz3.ab3@26212> comsettings_message:  Ds.w 1                               ;allchg org source
00035906 <AmiBlitz3.ab3@26213> xtra_versionnumber:   Ds.w 1                               ;vers org source
0003590C <AmiBlitz3.ab3@26217>   CLR.b exefilename
0003590E <AmiBlitz3.ab3@26218>   TST.l d0
00035912 <AmiBlitz3.ab3@26219>   BNE read_xtrafile__l10
00035914 <AmiBlitz3.ab3@26220> RTS
0003591A <AmiBlitz3.ab3@26223>   JSR free_residents                                       ;jsr freeres2 org source
00035920 <AmiBlitz3.ab3@26224> 
00035926 <AmiBlitz3.ab3@26225>   LEA ptr_xtradata,A2
00035928 <AmiBlitz3.ab3@26226>   MOVEQ.l #$00,D4
0003592A <AmiBlitz3.ab3@26229>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
0003592E <AmiBlitz3.ab3@26230>     BEQ.b read_xtrafile__done
00035930 <AmiBlitz3.ab3@26233>     MOVE.l (A2)+,D2
00035934 <AmiBlitz3.ab3@26234>   BEQ.b read_xtrafile__loop
00035936 <AmiBlitz3.ab3@26236>   MOVE.l D4,D3
00035938 <AmiBlitz3.ab3@26237>   MOVE.l D7,D1
0003593C <AmiBlitz3.ab3@26238>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003593E <AmiBlitz3.ab3@26239>   TST.l D0
00035942 <AmiBlitz3.ab3@26240>   BNE.b read_xtrafile__loop2
00035946 <AmiBlitz3.ab3@26241> BRA.w read_xtrafile__done2
0003594C <AmiBlitz3.ab3@26244>   TST.b xtra_versionnumber
00035950 <AmiBlitz3.ab3@26245>    BNE.b read_xtrafile__nover0
00035958 <AmiBlitz3.ab3@26246>   MOVE.w #$0080,set_autorun                                ;auto run on
00035962 <AmiBlitz3.ab3@26247>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
00035968 <AmiBlitz3.ab3@26248>   CLR.w set_assemblercheck                                 ;assembler checking off
00035972 <AmiBlitz3.ab3@26249>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
00035976 <AmiBlitz3.ab3@26250> BRA.b read_xtrafile__ver0
00035978 <AmiBlitz3.ab3@26253>   MOVE.l D7,D1                                             ;load cli arg!
0003597E <AmiBlitz3.ab3@26254>   MOVE.l #str_cliarguments,D2
00035984 <AmiBlitz3.ab3@26255>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
00035988 <AmiBlitz3.ab3@26256>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
0003598E <AmiBlitz3.ab3@26257>   MOVE.l #str_cliarguments,A0
00035994 <AmiBlitz3.ab3@26258>   ADDA.l #115,A0
0003599A <AmiBlitz3.ab3@26259>   MOVE.l #0,(a0) ; terminate it!
0003599C <AmiBlitz3.ab3@26261>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
000359A2 <AmiBlitz3.ab3@26262>   MOVE.l #stacksize,D2
000359A8 <AmiBlitz3.ab3@26263>   MOVE.l #4,D3
000359AC <AmiBlitz3.ab3@26264>   JSR _Read(A6)
000359B6 <AmiBlitz3.ab3@26265>   CMP.l ##MIN_STACKSIZE,stacksize
000359BA <AmiBlitz3.ab3@26266>   BGE 'stackok
000359C4 <AmiBlitz3.ab3@26267>   MOVE.l ##MIN_STACKSIZE,stacksize
000359C6 <AmiBlitz3.ab3@26270>   MOVE.l D7,D1
000359CC <AmiBlitz3.ab3@26271>   MOVE.l #versioninformation,D2
000359D2 <AmiBlitz3.ab3@26272>   MOVE.l #4,D3
000359D6 <AmiBlitz3.ab3@26273>   JSR _Read(A6)
000359D8 <AmiBlitz3.ab3@26275>   MOVE.l D7,D1
000359DE <AmiBlitz3.ab3@26276>   MOVE.l #number_of_builds,D2
000359E4 <AmiBlitz3.ab3@26277>   MOVE.l #4,D3
000359E8 <AmiBlitz3.ab3@26278>   JSR _Read(A6)
000359EE <AmiBlitz3.ab3@26284> 
000359F4 <AmiBlitz3.ab3@26285>   MOVE.l A7,errstack
000359FE <AmiBlitz3.ab3@26286>   MOVE.l #read_xtrafile__done2,errcont
00035A06 <AmiBlitz3.ab3@26287>   MOVE.w #$FFFF,ezerr
00035A0C <AmiBlitz3.ab3@26290>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035A0E <AmiBlitz3.ab3@26291>     MOVEQ.l #$04,D3
00035A10 <AmiBlitz3.ab3@26292>     MOVE.l D7,D1
00035A14 <AmiBlitz3.ab3@26293>     JSR _Read(A6)
00035A16 <AmiBlitz3.ab3@26294>     TST.l D0
00035A1A <AmiBlitz3.ab3@26295>     BEQ.b read_xtrafile__done2
00035A20 <AmiBlitz3.ab3@26296>     MOVE.w temp1,D1
00035A22 <AmiBlitz3.ab3@26297>     TST.w d1                                               ;new
00035A26 <AmiBlitz3.ab3@26298>     BEQ read_xtrafile__done2                                         ;new
00035A2C <AmiBlitz3.ab3@26299>      JSR AJL_0_6F1A
00035A32 <AmiBlitz3.ab3@26301>     CMP.l #0,a1
00035A36 <AmiBlitz3.ab3@26302>     BEQ read_xtrafile__dloop
00035A3A <AmiBlitz3.ab3@26303>     MOVE.l $12(A1),D0
00035A42 <AmiBlitz3.ab3@26304>     MOVE.w temp1+2,-$4(A1,D0.L)
00035A46 <AmiBlitz3.ab3@26305> BRA.b read_xtrafile__dloop
00035A4A <AmiBlitz3.ab3@26311>   LEA residents_table(PC),A0
00035A4C <AmiBlitz3.ab3@26312>   MOVEQ.l #$07,D0
00035A50 <AmiBlitz3.ab3@26315>     CLR.l $40(A0)
00035A54 <AmiBlitz3.ab3@26316>     LEA ResidentEntryStep(A0),A0   ; $44
00035A58 <AmiBlitz3.ab3@26317>   DBF D0,read_xtrafile__loop3
00035A5C <AmiBlitz3.ab3@26319>   MOVEM.l D7/A6,-(A7)
00035A62 <AmiBlitz3.ab3@26320>   JSR init_buffers
00035A68 <AmiBlitz3.ab3@26321>   JSR reloadresident
00035A6C <AmiBlitz3.ab3@26322>   MOVEM.l (A7)+,D7/A6
00035A6E <AmiBlitz3.ab3@26323> RTS
00035A76 <AmiBlitz3.ab3@26327>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035A7C <AmiBlitz3.ab3@26336>   LEA ptr_xtradata,A2
00035A7E <AmiBlitz3.ab3@26337>   MOVEQ.l #$00,D4
00035A80 <AmiBlitz3.ab3@26341>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035A84 <AmiBlitz3.ab3@26342>   BEQ.b write_xtrafile__done
00035A86 <AmiBlitz3.ab3@26345>    MOVE.l (A2)+,D2
00035A8A <AmiBlitz3.ab3@26346>    BEQ.b write_xtrafile__loop
00035A8C <AmiBlitz3.ab3@26348>    MOVE.l D4,D3
00035A8E <AmiBlitz3.ab3@26349>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035A92 <AmiBlitz3.ab3@26350>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035A96 <AmiBlitz3.ab3@26351> BRA.b write_xtrafile__loop2
00035A98 <AmiBlitz3.ab3@26354>   MOVE.l D7,D1
00035A9E <AmiBlitz3.ab3@26355>   MOVE.l #str_cliarguments,D2
00035AA4 <AmiBlitz3.ab3@26356>   MOVE.l #116,D3
00035AA8 <AmiBlitz3.ab3@26357>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035AAA <AmiBlitz3.ab3@26359>   MOVE.l D7,D1
00035AB0 <AmiBlitz3.ab3@26360>   MOVE.l #stacksize,D2
00035AB6 <AmiBlitz3.ab3@26361>   MOVE.l #4,D3
00035ABA <AmiBlitz3.ab3@26362>   JSR _Write(A6)
00035ABC <AmiBlitz3.ab3@26364>   MOVE.l D7,D1
00035AC2 <AmiBlitz3.ab3@26365>   MOVE.l #versioninformation,D2
00035AC8 <AmiBlitz3.ab3@26366>   MOVE.l #4,D3
00035ACC <AmiBlitz3.ab3@26367>   JSR _Write(A6)
00035ACE <AmiBlitz3.ab3@26369>   MOVE.l D7,D1
00035AD4 <AmiBlitz3.ab3@26370>   MOVE.l #number_of_builds,D2
00035ADA <AmiBlitz3.ab3@26371>   MOVE.l #4,D3
00035ADE <AmiBlitz3.ab3@26372>   JSR _Write(A6)
00035AE4 <AmiBlitz3.ab3@26378>   LEA libpointer,A2
00035AE6 <AmiBlitz3.ab3@26381>     MOVE.l (A2),D0
00035AEA <AmiBlitz3.ab3@26382>     BEQ.w write_xtrafile__done2
00035AEC <AmiBlitz3.ab3@26383>     MOVEA.l D0,A2
00035AF0 <AmiBlitz3.ab3@26384>     MOVE.l $12(A2),D4
00035AF4 <AmiBlitz3.ab3@26385>     TST.w -$2(A2,D4.L)
00035AF8 <AmiBlitz3.ab3@26386>     BEQ.w write_xtrafile__loop3
00035AFC <AmiBlitz3.ab3@26388>     LEA $4(A2),A0
00035AFE <AmiBlitz3.ab3@26389>     MOVE.l A0,D2
00035B00 <AmiBlitz3.ab3@26390>     MOVEQ.l #$02,D3
00035B02 <AmiBlitz3.ab3@26391>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00035B06 <AmiBlitz3.ab3@26392>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B0A <AmiBlitz3.ab3@26394>     LEA -$4(A2,D4.L),A0
00035B0C <AmiBlitz3.ab3@26395>     MOVE.l A0,D2
00035B0E <AmiBlitz3.ab3@26396>     MOVEQ.l #$02,D3
00035B10 <AmiBlitz3.ab3@26397>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035B14 <AmiBlitz3.ab3@26398>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B18 <AmiBlitz3.ab3@26399> BRA.w write_xtrafile__loop3
00035B1E <AmiBlitz3.ab3@26404>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035B20 <AmiBlitz3.ab3@26405>   MOVE.l A2,D2           ; move the address to d2
00035B26 <AmiBlitz3.ab3@26406>   MOVE.l #4,D3           ; we only need 4 bytes to save
00035B28 <AmiBlitz3.ab3@26407>   MOVE.l D7,D1           ; we set the file handle
00035B2C <AmiBlitz3.ab3@26408>   JSR _Write(A6)         ; and we write it.
00035B2E <AmiBlitz3.ab3@26410> RTS
00035B34 <AmiBlitz3.ab3@26415>   LEA optssave,A0                      ; backup address
00035B3A <AmiBlitz3.ab3@26416>   LEA ptr_xtradata,A1                  ; source address
00035B3C <AmiBlitz3.ab3@26419>   MOVE.w (A1)+,D0                                          ;length of data move
00035B40 <AmiBlitz3.ab3@26420>   BEQ.b 'backupdone
00035B42 <AmiBlitz3.ab3@26421>   SUBQ.w #1,D0
00035B44 <AmiBlitz3.ab3@26424>     MOVE.l (A1)+,D1
00035B48 <AmiBlitz3.ab3@26425>     BEQ.b 'backuploop
00035B4A <AmiBlitz3.ab3@26426>     MOVEA.l D1,A2
00035B4C <AmiBlitz3.ab3@26427>     MOVE.w D0,D1
00035B4E <AmiBlitz3.ab3@26430>       MOVE.b (A2)+,(A0)+
00035B52 <AmiBlitz3.ab3@26431>   DBF D1,'backuploop3
00035B56 <AmiBlitz3.ab3@26433> BRA.w 'backuploop2
00035B5C <AmiBlitz3.ab3@26437>   LEA bufferlist,A1
00035B5E <AmiBlitz3.ab3@26440>     MOVE.l (A1)+,D2
00035B62 <AmiBlitz3.ab3@26441>     BEQ.b 'loop4done
00035B64 <AmiBlitz3.ab3@26443>     MOVEA.l D2,A0
00035B66 <AmiBlitz3.ab3@26444>     MOVE.l (A0),D2
00035B68 <AmiBlitz3.ab3@26445>     ADDQ.w #8,A0
00035B6E <AmiBlitz3.ab3@26446>     JSR makelong
00035B72 <AmiBlitz3.ab3@26447> BRA.b 'loop4
00035B78 <AmiBlitz3.ab3@26450>   CLR.w state_of_residents                                 ;resident change
00035B7E <AmiBlitz3.ab3@26451>   CLR.w comsettings_message                                ;alloc change
00035B84 <AmiBlitz3.ab3@26452>   CLR.w maxobject_pos
00035B86 <AmiBlitz3.ab3@26453> RTS   ; new tomsmart1
00035B8C <AmiBlitz3.ab3@26457>   LEA optssave,A0
00035B92 <AmiBlitz3.ab3@26458>   LEA ptr_xtradata,A1
00035B94 <AmiBlitz3.ab3@26461>   MOVE.w (A1)+,D0
00035B98 <AmiBlitz3.ab3@26462>   BEQ.b 'restoredone
00035B9A <AmiBlitz3.ab3@26463>   SUBQ.w #1,D0
00035B9C <AmiBlitz3.ab3@26466>     MOVE.l (A1)+,D1
00035BA0 <AmiBlitz3.ab3@26467>     BEQ.b 'restoreloop1
00035BA2 <AmiBlitz3.ab3@26468>     MOVEA.l D1,A2
00035BA4 <AmiBlitz3.ab3@26469>     MOVE.w D0,D1
00035BA6 <AmiBlitz3.ab3@26472>       MOVE.b (A0)+,(A2)+
00035BAA <AmiBlitz3.ab3@26473>   DBF D1,'restoreloop3
00035BAE <AmiBlitz3.ab3@26475> BRA.b 'restoreloop2
00035BB0 <AmiBlitz3.ab3@26478> RTS
00035BB6 <AmiBlitz3.ab3@26482>   JSR free_residents                    ; first free the allready loaded residents
00035BBC <AmiBlitz3.ab3@26483>   JSR Clear_Residents_table             ; second clear the complete resident table
00035BBE <AmiBlitz3.ab3@26484> RTS
00035BC6 <AmiBlitz3.ab3@26488>   MOVE.w #$FFFF,state_of_residents
00035BCC <AmiBlitz3.ab3@26489>   MOVE.w state_of_residents,D0
00035BD2 <AmiBlitz3.ab3@26490>   JSR reloadresident
00035BD4 <AmiBlitz3.ab3@26491> RTS
00035BD6 <AmiBlitz3.ab3@26496>   MOVE.l d0,a1
00035BDC <AmiBlitz3.ab3@26497>   MOVEA.l libpointer,A2
00035BE0 <AmiBlitz3.ab3@26500>     MOVE.l $12(A2),D0
00035BE4 <AmiBlitz3.ab3@26501>     TST.w -$2(A2,D0.L)
00035BE8 <AmiBlitz3.ab3@26502>      BEQ.w JL_0_102AAa
00035BEA <AmiBlitz3.ab3@26503>     SUBQ.w #1,D1
00035BEE <AmiBlitz3.ab3@26504>      BPL.w JL_0_102AAa
00035BF2 <AmiBlitz3.ab3@26505>     MOVEA.l -$1A(A2,D0.L),A3
00035BF4 <AmiBlitz3.ab3@26506>     ADDA.l A2,A3
00035BF6 <AmiBlitz3.ab3@26509>       MOVE.b (A3)+,(A1)+
00035BFA <AmiBlitz3.ab3@26510>     BNE.w JL_0_10294a
00035BFC <AmiBlitz3.ab3@26512>     CLR.b -(A1)
00035C00 <AmiBlitz3.ab3@26513>     MOVE.w -$4(A2,D0.L),D0
00035C06 <AmiBlitz3.ab3@26514>     AND.l #$ffff,d0
00035C08 <AmiBlitz3.ab3@26515> RTS
00035C0A <AmiBlitz3.ab3@26518>     MOVEA.l (A2),A2
00035C0E <AmiBlitz3.ab3@26519> BRA.w JL_0_1027Ca
00035C1E <AmiBlitz3.ab3@26524> str_maxobjects_name:   Dc.b "              ",0 : Even
00035C2E <AmiBlitz3.ab3@26525> str_maxobjects_name2:  Dc.b "              ",0 : Even
00035C32 <AmiBlitz3.ab3@26526> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
00035C36 <AmiBlitz3.ab3@26527>                        Dc.l $00000000
00035C42 <AmiBlitz3.ab3@26528> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00035C46 <AmiBlitz3.ab3@26530> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
00035C4A <AmiBlitz3.ab3@26531>                        Dc.l $00000000
00035C56 <AmiBlitz3.ab3@26532> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00035C5A <AmiBlitz3.ab3@26534> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
00035C5E <AmiBlitz3.ab3@26535>                        Dc.l $00000000
00035C6A <AmiBlitz3.ab3@26536> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035C6E <AmiBlitz3.ab3@26538> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035C72 <AmiBlitz3.ab3@26539>                        Dc.l $00000000
00035C7E <AmiBlitz3.ab3@26540> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035C82 <AmiBlitz3.ab3@26542> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00035C86 <AmiBlitz3.ab3@26543>                        Dc.l $00000000
00035C92 <AmiBlitz3.ab3@26544> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00035C96 <AmiBlitz3.ab3@26546> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00035C9A <AmiBlitz3.ab3@26547>                        Dc.l $00000000
00035CA6 <AmiBlitz3.ab3@26548> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00035CA8 <AmiBlitz3.ab3@26550> maxobjects_value:      Dc.w $0064
00035CAC <AmiBlitz3.ab3@26551>                        Dc.l $00000000
00035CB8 <AmiBlitz3.ab3@26552> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00035CBA <AmiBlitz3.ab3@26554> maxobjects_value2:     Dc.w $0014
00035CBC <AmiBlitz3.ab3@26555>                        Dc.w $0000
00035CC8 <AmiBlitz3.ab3@26557> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00035CC9 <AmiBlitz3.ab3@26561> set_create_iconfile:   Dc.b $00
00035CCC <AmiBlitz3.ab3@26562> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00035CCE <AmiBlitz3.ab3@26563>                        Dc.b $00,$01
00035CCF <AmiBlitz3.ab3@26565> set_use_debugger:      Dc.b $00                            ; Flags.w
00035CD2 <AmiBlitz3.ab3@26566> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035CD4 <AmiBlitz3.ab3@26567>                        Dc.b $00,$01                        ; GadgetType.w
00035CD8 <AmiBlitz3.ab3@26568> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00035CDC <AmiBlitz3.ab3@26569> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00035CE0 <AmiBlitz3.ab3@26570> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00035CE2 <AmiBlitz3.ab3@26571> AL_0_11094:            Ds.w 1
00035CE3 <AmiBlitz3.ab3@26573> set_make_smallestcode: Ds.b 1
00035CE6 <AmiBlitz3.ab3@26574> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00035CE8 <AmiBlitz3.ab3@26575>                        Dc.b $00,$01
00035CE9 <AmiBlitz3.ab3@26576> set_link_debuginfo:    Ds.b 1
00035CEC <AmiBlitz3.ab3@26577> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00035CEE <AmiBlitz3.ab3@26578>                        Dc.b $00,$01
00035F0E <AmiBlitz3.ab3@26583>   Ds.l 136         ;resident files STEP $44 piece 8
00035F8E <AmiBlitz3.ab3@26588> str_calcexpression:        Ds.l 32
00035F92 <AmiBlitz3.ab3@26589> destbufferend_backup_calc: Ds.l 1
00035F9C <AmiBlitz3.ab3@26594>   MOVE.l destbufferend,destbufferend_backup_calc
00035FA2 <AmiBlitz3.ab3@26595> 
00035FA8 <AmiBlitz3.ab3@26596>   MOVE.l A7,errstack
00035FB2 <AmiBlitz3.ab3@26597>   MOVE.l #Calc_Error_Exit,errcont
00035FDC <AmiBlitz3.ab3@26604>   !basic         ; get the flage for the conversion form the editor
00036020 <AmiBlitz3.ab3@26605>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
00036064 <AmiBlitz3.ab3@26606>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
00036082 <AmiBlitz3.ab3@26607>   !asm
00036088 <AmiBlitz3.ab3@26609>   LEA str_calcexpression,A0
0003608E <AmiBlitz3.ab3@26618>   JSR setcvars
00036094 <AmiBlitz3.ab3@26619>   JSR setsvars
0003609A <AmiBlitz3.ab3@26620>   CLR.w connest
000360A0 <AmiBlitz3.ab3@26621>   LEA str_calcexpression,A5
000360A6 <AmiBlitz3.ab3@26622>   JSR AJL_0_BF6E
000360AC <AmiBlitz3.ab3@26623>   LEA str_calcexpression,A0
000360AE <AmiBlitz3.ab3@26624>   TST.l D3
000360B2 <AmiBlitz3.ab3@26625>    BPL.w JL_0_11AE8
000360B6 <AmiBlitz3.ab3@26626>   MOVE.b #$2D,(A0)+
000360B8 <AmiBlitz3.ab3@26627>   NEG.l D3
000360C0 <AmiBlitz3.ab3@26630>   CMPI.w #$80,CalculatorButtonDecFlag
000360C4 <AmiBlitz3.ab3@26631>    BEQ.w JL_0_11B74
000360C6 <AmiBlitz3.ab3@26632>   MOVEQ.l #$00,D1
000360CE <AmiBlitz3.ab3@26633>   CMPI.w #$80,CalculatorButtonBinFlag
000360D2 <AmiBlitz3.ab3@26634>    BNE.w JL_0_11B36
000360D4 <AmiBlitz3.ab3@26635>   MOVEQ.l #$1F,D0
000360D8 <AmiBlitz3.ab3@26636>   MOVE.b #$25,(A0)+
000360DA <AmiBlitz3.ab3@26639>       LSL.l #1,D3
000360DE <AmiBlitz3.ab3@26640>        BCC.w JL_0_11B18
000360E2 <AmiBlitz3.ab3@26641>       MOVE.b #"1",(A0)+
000360E4 <AmiBlitz3.ab3@26642>       MOVEQ.l #-$01,D1
000360E8 <AmiBlitz3.ab3@26643>   BRA.w JL_0_11B22
000360EA <AmiBlitz3.ab3@26646>       TST.w D1
000360EE <AmiBlitz3.ab3@26647>       BEQ.w JL_0_11B22
000360F2 <AmiBlitz3.ab3@26648>       MOVE.b #"0",(A0)+
000360F6 <AmiBlitz3.ab3@26651>  DBF D0,JL_0_11B08
000360F8 <AmiBlitz3.ab3@26654>   TST.w D1
000360FC <AmiBlitz3.ab3@26655>   BNE.w JL_0_11B30
00036100 <AmiBlitz3.ab3@26656>   MOVE.b #"0",(A0)+
00036102 <AmiBlitz3.ab3@26659>   CLR.b (A0)
00036106 <AmiBlitz3.ab3@26660> BRA.w JL_0_11B7C
00036108 <AmiBlitz3.ab3@26663>   MOVEQ.l #$07,D0
0003610C <AmiBlitz3.ab3@26664>   MOVE.b #$24,(A0)+
0003610E <AmiBlitz3.ab3@26667>     MOVE.l D3,D2
00036110 <AmiBlitz3.ab3@26668>     SWAP D2
00036112 <AmiBlitz3.ab3@26669>     LSR.w #8,D2
00036114 <AmiBlitz3.ab3@26670>     LSR.w #4,D2
00036118 <AmiBlitz3.ab3@26671>     ADDI.w #$30,D2
0003611C <AmiBlitz3.ab3@26672>     CMP.w #$3A,D2
00036120 <AmiBlitz3.ab3@26673>      BCS.w JL_0_11B52
00036122 <AmiBlitz3.ab3@26674>     ADDQ.w #7,D2
00036126 <AmiBlitz3.ab3@26677>     CMP.w #$30,D2
0003612A <AmiBlitz3.ab3@26678>     BEQ.w JL_0_11B62
0003612C <AmiBlitz3.ab3@26679>     MOVE.b D2,(A0)+
0003612E <AmiBlitz3.ab3@26680>     MOVEQ.l #-$01,D1
00036132 <AmiBlitz3.ab3@26681>   BRA.w JL_0_11B6A
00036134 <AmiBlitz3.ab3@26684>     TST.w D1
00036138 <AmiBlitz3.ab3@26685>      BEQ.w JL_0_11B6A
0003613A <AmiBlitz3.ab3@26686>     MOVE.b D2,(A0)+
0003613C <AmiBlitz3.ab3@26689>     LSL.l #4,D3
00036140 <AmiBlitz3.ab3@26690>  DBF D0,JL_0_11B3C
00036144 <AmiBlitz3.ab3@26692> BRA.w JL_0_11B26
00036146 <AmiBlitz3.ab3@26695>   MOVE.l D3,D2
0003614C <AmiBlitz3.ab3@26696>   JSR makelong
00036156 <AmiBlitz3.ab3@26703>   MOVE.l destbufferend_backup_calc,destbufferend
00036158 <AmiBlitz3.ab3@26705> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
00036257 <AmiBlitz3.ab3@26709> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
00036258 <AmiBlitz3.ab3@26711> Even
0003625A <AmiBlitz3.ab3@26725>     MOVE.b (a5)+,d0
0003625E <AmiBlitz3.ab3@26726>     BEQ 'l2
00036262 <AmiBlitz3.ab3@26727>     CMP.b #$80,d0
00036266 <AmiBlitz3.ab3@26728>     BNE 'l1
00036268 <AmiBlitz3.ab3@26729>     MOVE.b (a5)+,d0
0003626C <AmiBlitz3.ab3@26730>     BEQ 'l2
00036270 <AmiBlitz3.ab3@26731>     CMP.b #$02,d0
00036274 <AmiBlitz3.ab3@26732>   BNE 'l1
00036278 <AmiBlitz3.ab3@26735>     CMP.b #$20,(a5)+
0003627C <AmiBlitz3.ab3@26736>   BEQ 'l3
0003627E <AmiBlitz3.ab3@26737>   SUBQ.l #1,a5
00036280 <AmiBlitz3.ab3@26738>   TST.b (a5)
00036284 <AmiBlitz3.ab3@26739>   BEQ 'l2
00036288 <AmiBlitz3.ab3@26740>   CMP.w #$8008,(a5)
0003628C <AmiBlitz3.ab3@26741>   BEQ 'l4
00036290 <AmiBlitz3.ab3@26742>   CMP.w #$8009,(a5)
00036294 <AmiBlitz3.ab3@26743>   BEQ 'l4
00036298 <AmiBlitz3.ab3@26744> BRA 'l1
0003629A <AmiBlitz3.ab3@26747>   ADDQ.l #2,a5
000362A0 <AmiBlitz3.ab3@26748>   JSR skiprest
000362A2 <AmiBlitz3.ab3@26749> RTS
000362A8 <AmiBlitz3.ab3@26752>   JSR nextline
000362AC <AmiBlitz3.ab3@26753>   BNE 'l1
000362AE <AmiBlitz3.ab3@26754> RTS
000362D8 <AmiBlitz3.ab3@26758>   !basic
000362E2 <AmiBlitz3.ab3@26759>   DateFormat 1
000362F0 <AmiBlitz3.ab3@26760>   i.l=SystemDate
00036316 <AmiBlitz3.ab3@26761>   a$=Date$ (i)
00036394 <AmiBlitz3.ab3@26762>   a$=Replace$(a$,"/",".")
0003639A <AmiBlitz3.ab3@26763>   GetD0 &a$
0003639C <AmiBlitz3.ab3@26764>   MOVEQ #8,d2
0003639E <AmiBlitz3.ab3@26765>   MOVE.l d0,a0
000363A0 <AmiBlitz3.ab3@26768>     MOVE.b (a0)+,d1
000363A6 <AmiBlitz3.ab3@26769>     JSR pokedata1b
000363AA <AmiBlitz3.ab3@26770>  DBF d2,'l1
000363AC <AmiBlitz3.ab3@26772>   MOVEQ #0,d0
000363AE <AmiBlitz3.ab3@26773>   MOVE.b (a0)+,d0
000363CC <AmiBlitz3.ab3@26774>   !asm
000363D2 <AmiBlitz3.ab3@26775>   ADD.l #9,d2
000363D8 <AmiBlitz3.ab3@26776>   ADD.l #9,a5
000363DA <AmiBlitz3.ab3@26777> RTS
00036404 <AmiBlitz3.ab3@26781>   !basic
0003640E <AmiBlitz3.ab3@26782>   DateFormat 0
0003641C <AmiBlitz3.ab3@26783>   i.l=SystemDate
00036442 <AmiBlitz3.ab3@26784>   a$=Date$ (i)
000364C0 <AmiBlitz3.ab3@26785>   a$=Replace$(a$,"/",".")
000364C6 <AmiBlitz3.ab3@26786>   GetD0 &a$
000364C8 <AmiBlitz3.ab3@26787>   MOVEQ #8,d2
000364CA <AmiBlitz3.ab3@26788>   MOVE.l d0,a0
000364CC <AmiBlitz3.ab3@26791>     MOVE.b (a0)+,d1
000364D2 <AmiBlitz3.ab3@26792>     JSR pokedata1b
000364D6 <AmiBlitz3.ab3@26793>  DBF d2,'l1
000364D8 <AmiBlitz3.ab3@26795>   MOVEQ #0,d0
000364DA <AmiBlitz3.ab3@26796>   MOVE.b (a0)+,d0
000364F8 <AmiBlitz3.ab3@26797>   !asm
000364FE <AmiBlitz3.ab3@26798>   ADD.l #9,d2
00036504 <AmiBlitz3.ab3@26799>   ADD.l #13,a5
00036506 <AmiBlitz3.ab3@26800> RTS
00036530 <AmiBlitz3.ab3@26804>   !basic
0003653A <AmiBlitz3.ab3@26805>   DateFormat 1
00036548 <AmiBlitz3.ab3@26806>   i.l = SystemDate
0003656E <AmiBlitz3.ab3@26807>   a$ = Date$ (i)
000365EC <AmiBlitz3.ab3@26808>   a$ = Replace$(a$,"/",".")
000365F2 <AmiBlitz3.ab3@26809>   GetD0 &a$
000365F4 <AmiBlitz3.ab3@26810>   MOVEQ #8,d2
000365F6 <AmiBlitz3.ab3@26811>   MOVE.l d0,a0
000365F8 <AmiBlitz3.ab3@26814>     MOVE.b (a0)+,d1
000365FE <AmiBlitz3.ab3@26815>     JSR writebyte
00036602 <AmiBlitz3.ab3@26816>  DBF d2,'l1
00036604 <AmiBlitz3.ab3@26818>   MOVEQ #0,d0
00036606 <AmiBlitz3.ab3@26819>   MOVE.b (a0)+,d0
00036624 <AmiBlitz3.ab3@26820>   !asm
0003662A <AmiBlitz3.ab3@26821>   ADD.l #9,a5
0003662C <AmiBlitz3.ab3@26822> RTS
00036656 <AmiBlitz3.ab3@26826>   !basic
00036660 <AmiBlitz3.ab3@26827>   DateFormat 0
0003666E <AmiBlitz3.ab3@26828>   i.l=SystemDate
00036694 <AmiBlitz3.ab3@26829>   a$=Date$ (i)
00036712 <AmiBlitz3.ab3@26830>   a$=Replace$(a$,"/",".")
00036718 <AmiBlitz3.ab3@26831>   GetD0 &a$
0003671A <AmiBlitz3.ab3@26832>   MOVEQ #8,d2
0003671C <AmiBlitz3.ab3@26833>   MOVE.l d0,a0
0003671E <AmiBlitz3.ab3@26836>     MOVE.b (a0)+,d1
00036724 <AmiBlitz3.ab3@26837>     JSR writebyte
00036728 <AmiBlitz3.ab3@26838>  DBF d2,'l1
0003672A <AmiBlitz3.ab3@26840>   MOVEQ #0,d0
0003672C <AmiBlitz3.ab3@26841>   MOVE.b (a0)+,d0
0003674A <AmiBlitz3.ab3@26842>   !asm
00036750 <AmiBlitz3.ab3@26843>   ADD.l #13,a5
00036752 <AmiBlitz3.ab3@26844> RTS
00036754 <AmiBlitz3.ab3@26848>   MOVE.l d2,-(a7)                                          ; D2 -> stack
00036756 <AmiBlitz3.ab3@26849>   MOVE.l a5,d0
00036780 <AmiBlitz3.ab3@26850>   !basic
00036784 <AmiBlitz3.ab3@26851>   _myD0.l = PutD0
0003678E <AmiBlitz3.ab3@26852>   If _myD0
000367D4 <AmiBlitz3.ab3@26853>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036826 <AmiBlitz3.ab3@26854>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
0003682C <AmiBlitz3.ab3@26855>   Else
00036866 <AmiBlitz3.ab3@26856>     error{"INTERNAL: Invalid pointer in version_string!"}
00036876 <AmiBlitz3.ab3@26861>   actual_version.l = Peek.l(?versioninformation)
00036886 <AmiBlitz3.ab3@26862>   actual_build.l   = Peek.l(?number_of_builds)
000368AA <AmiBlitz3.ab3@26864>   Format "00"
000368E0 <AmiBlitz3.ab3@26865>   Select verstring$
00036904 <AmiBlitz3.ab3@26867>     Case "VER_MAJOR"
00036940 <AmiBlitz3.ab3@26868>      put_versionstr$ = Str$(actual_version LSR 24)
0003696A <AmiBlitz3.ab3@26870>     Case "VER_MINOR"
000369AE <AmiBlitz3.ab3@26871>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
000369D8 <AmiBlitz3.ab3@26873>     Case "VER_PATCH"
00036A1C <AmiBlitz3.ab3@26874>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036A46 <AmiBlitz3.ab3@26876>     Case "VER_BUILD"
00036A6A <AmiBlitz3.ab3@26877>      Format ""
00036A9E <AmiBlitz3.ab3@26878>      put_versionstr$ = Str$(actual_build)
00036AA4 <AmiBlitz3.ab3@26880>     Default
00036ACC <AmiBlitz3.ab3@26881>      put_versionstr$ = "{unknown compilerconstant}"
00036ADA <AmiBlitz3.ab3@26884>   End Select
00036AFE <AmiBlitz3.ab3@26885>   Format ""
00036B0E <AmiBlitz3.ab3@26887>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00036B10 <AmiBlitz3.ab3@26888>   MOVE.l d0,d2
00036B12 <AmiBlitz3.ab3@26889>   MOVE.l d2,-(a7)
00036B16 <AmiBlitz3.ab3@26890>   SUB #1,d2
00036B1C <AmiBlitz3.ab3@26892>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036B1E <AmiBlitz3.ab3@26893>   MOVE.l d0,a0
00036B20 <AmiBlitz3.ab3@26896>     MOVE.b (a0)+,d1
00036B26 <AmiBlitz3.ab3@26897>     JSR pokedata1b
00036B2A <AmiBlitz3.ab3@26898>  DBF d2,'l1
00036B2C <AmiBlitz3.ab3@26900>   MOVEQ #0,d0
00036B4A <AmiBlitz3.ab3@26901>   !asm
00036B4C <AmiBlitz3.ab3@26902>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036B4E <AmiBlitz3.ab3@26903>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036B50 <AmiBlitz3.ab3@26904>   ADD.l d0,d2
00036B56 <AmiBlitz3.ab3@26905>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036B58 <AmiBlitz3.ab3@26906>   MOVEQ #0,d0
00036B5A <AmiBlitz3.ab3@26907> RTS
00036B5C <AmiBlitz3.ab3@26911>   MOVE.l a5,d0
00036B86 <AmiBlitz3.ab3@26912>   !basic
00036B8A <AmiBlitz3.ab3@26913>   _myD0.l = PutD0
00036B94 <AmiBlitz3.ab3@26914>   If _myD0
00036BDA <AmiBlitz3.ab3@26915>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036C2C <AmiBlitz3.ab3@26916>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036C32 <AmiBlitz3.ab3@26917>   Else
00036C6C <AmiBlitz3.ab3@26918>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036C7C <AmiBlitz3.ab3@26923>   actual_version.l = Peek.l(?versioninformation)
00036C8C <AmiBlitz3.ab3@26924>   actual_build.l   = Peek.l(?number_of_builds)
00036CB0 <AmiBlitz3.ab3@26926>   Format ""
00036CE6 <AmiBlitz3.ab3@26927>   Select verstring$
00036D0A <AmiBlitz3.ab3@26929>     Case "VER_MAJOR"
00036D46 <AmiBlitz3.ab3@26930>      put_versionstr$ = Str$(actual_version LSR 24)
00036D70 <AmiBlitz3.ab3@26932>     Case "VER_MINOR"
00036DB4 <AmiBlitz3.ab3@26933>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036DDE <AmiBlitz3.ab3@26935>     Case "VER_PATCH"
00036E22 <AmiBlitz3.ab3@26936>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036E4C <AmiBlitz3.ab3@26938>     Case "VER_BUILD"
00036E70 <AmiBlitz3.ab3@26939>      Format ""
00036EA4 <AmiBlitz3.ab3@26940>      put_versionstr$ = Str$(actual_build)
00036EAA <AmiBlitz3.ab3@26942>     Default
00036ED2 <AmiBlitz3.ab3@26943>      put_versionstr$ = "{unknown compilerconstant}"
00036EE0 <AmiBlitz3.ab3@26945>   End Select
00036F04 <AmiBlitz3.ab3@26946>   Format ""
00036F1A <AmiBlitz3.ab3@26948>   GetD0 FLen(put_versionstr$)-1
00036F1C <AmiBlitz3.ab3@26949>   MOVE.l d0,d2
00036F22 <AmiBlitz3.ab3@26951>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036F24 <AmiBlitz3.ab3@26952>   MOVE.l d0,a0
00036F26 <AmiBlitz3.ab3@26955>     MOVE.b (a0)+,d1
00036F2C <AmiBlitz3.ab3@26956>     JSR writebyte
00036F30 <AmiBlitz3.ab3@26957>  DBF d2,'l1
00036F32 <AmiBlitz3.ab3@26959>   MOVEQ #0,d0
00036F34 <AmiBlitz3.ab3@26960>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036F52 <AmiBlitz3.ab3@26961>   !asm
00036F58 <AmiBlitz3.ab3@26962>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036F5A <AmiBlitz3.ab3@26963> RTS
00036F5C <AmiBlitz3.ab3@27065>  MOVE.l a5,-(a7)
00036F88 <AmiBlitz3.ab3@27066>  !fget
00036F8C <AmiBlitz3.ab3@27067>  CMP.w #".",d0
00036F90 <AmiBlitz3.ab3@27068>  BNE 'skip
00036F94 <AmiBlitz3.ab3@27069>  MOVEM.l a2/d2,-(a7)
00036F9A <AmiBlitz3.ab3@27070>  LEA newtypebase,a2
00036FA0 <AmiBlitz3.ab3@27071>  JSR getparameter2
00036FA4 <AmiBlitz3.ab3@27072>  BEQ.w JUMP_syntaxerr
00036FAA <AmiBlitz3.ab3@27073>  JSR findtype
00036FAE <AmiBlitz3.ab3@27074>  BNE.w JUMP_notypeerr
00036FB4 <AmiBlitz3.ab3@27075>  MOVE.l a2,typetocast
00036FB8 <AmiBlitz3.ab3@27076>  MOVEM.l (a7)+,a2/d2
00036FBC <AmiBlitz3.ab3@27077>  CMP.w #")",d0
00036FC0 <AmiBlitz3.ab3@27078>  BNE JUMP_errorbracketmiss
00036FC2 <AmiBlitz3.ab3@27079>  ADDQ.l #4,a7
00036FEE <AmiBlitz3.ab3@27080>  !fget
00036FF4 <AmiBlitz3.ab3@27081>  JMP nocast
00036FF6 <AmiBlitz3.ab3@27083> 'skip MOVE.l (a7)+,a5
00036FFC <AmiBlitz3.ab3@27084>  JMP JL_0_A410
00037002 <AmiBlitz3.ab3@27086> JUMP_errorbracketmiss JMP errorbracketmiss
0003702C <AmiBlitz3.ab3@27088> Function.l ab3_GetIncludeLock{filename.s}
0003704C <AmiBlitz3.ab3@27089>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
000370A4 <AmiBlitz3.ab3@27090>   ex.s       = dos_GetExt{filename}
000370B8 <AmiBlitz3.ab3@27092>   If incLock = False
0003712C <AmiBlitz3.ab3@27093>     filename = dos_SetExt{filename,"ab3"}
0003714C <AmiBlitz3.ab3@27094>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
00037160 <AmiBlitz3.ab3@27097>   If incLock = False
000371D4 <AmiBlitz3.ab3@27098>     filename = dos_SetExt{filename,"ab2"}
000371F4 <AmiBlitz3.ab3@27099>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00037208 <AmiBlitz3.ab3@27102>   If incLock = False
0003727C <AmiBlitz3.ab3@27103>     filename = dos_SetExt{filename,"bb2"}
0003729C <AmiBlitz3.ab3@27104>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
000372B0 <AmiBlitz3.ab3@27107>   If incLock = False
00037342 <AmiBlitz3.ab3@27108>     filename = dos_SetExt{filename,ex+".ab3"}
00037362 <AmiBlitz3.ab3@27109>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
00037376 <AmiBlitz3.ab3@27112>   If incLock = False
000373EA <AmiBlitz3.ab3@27113>     filename = dos_SetExt{filename,"ab2"}
0003740A <AmiBlitz3.ab3@27114>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
0003741E <AmiBlitz3.ab3@27117>   If incLock = False
00037492 <AmiBlitz3.ab3@27118>     filename = dos_SetExt{filename,"bb2"}
000374B2 <AmiBlitz3.ab3@27119>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
000374BC <AmiBlitz3.ab3@27122>  Function Return incLock
000374D6 <AmiBlitz3.ab3@27123> End Function
00037500 <AmiBlitz3.ab3@27127>   !basic
0003752A <AmiBlitz3.ab3@27128>   incString.s = Peek$(?ptr_parameterstore)
00037558 <AmiBlitz3.ab3@27130>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
0003755C <AmiBlitz3.ab3@27131>   incDirP.l   = PutD0                                       ;    "
00037584 <AmiBlitz3.ab3@27132>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037604 <AmiBlitz3.ab3@27133>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037636 <AmiBlitz3.ab3@27134>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
0003764A <AmiBlitz3.ab3@27136>   If incLock = False ; not found => check default Include Directory
0003765A <AmiBlitz3.ab3@27137>     incDirP.l = Peek.l(?incd)
00037664 <AmiBlitz3.ab3@27138>     If incDirP
0003768C <AmiBlitz3.ab3@27139>       incDir_.s = Peek.s(incDirP)
00037692 <AmiBlitz3.ab3@27140>     Else
000376FC <AmiBlitz3.ab3@27141>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
0003777C <AmiBlitz3.ab3@27143>     incFile.s = dos_AddPart{incDir_,incString}
000377AE <AmiBlitz3.ab3@27144>     incLock.l = ab3_GetIncludeLock{incFile}
000377C2 <AmiBlitz3.ab3@27147>   If incLock = False ; not found => check relative to current source
000377DA <AmiBlitz3.ab3@27148>     incDepth.l = Peek.w(?ininclude)-1
00037800 <AmiBlitz3.ab3@27149>     If incDepth >= 0 AND incDepth < #maxincludes
00037860 <AmiBlitz3.ab3@27150>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
000378E0 <AmiBlitz3.ab3@27151>       incFile.s = dos_AddPart{incDir_,incString}
00037912 <AmiBlitz3.ab3@27152>       incLock.l = ab3_GetIncludeLock{incFile}
00037926 <AmiBlitz3.ab3@27156>   If incLock = False ; still not found => check default Include Directory and name only
00037936 <AmiBlitz3.ab3@27157>     incDirP.l = Peek.l(?incd)
00037940 <AmiBlitz3.ab3@27158>     If incDirP
00037968 <AmiBlitz3.ab3@27159>       incDir_.s = Peek.s(incDirP)
0003796E <AmiBlitz3.ab3@27160>     Else
000379D8 <AmiBlitz3.ab3@27161>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037A86 <AmiBlitz3.ab3@27163>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037AB8 <AmiBlitz3.ab3@27164>     incLock.l = ab3_GetIncludeLock{incFile}
00037AC2 <AmiBlitz3.ab3@27167>   If incLock
00037AD8 <AmiBlitz3.ab3@27168>     MaxLen incFile = 1024
00037AFC <AmiBlitz3.ab3@27169>     NameFromLock_ incLock,&incFile,1024
00037B26 <AmiBlitz3.ab3@27170>     incFile = Peek.s(&incFile)
00037B5E <AmiBlitz3.ab3@27171>     Poke$ ?ptr_parameterstore,incFile
00037B72 <AmiBlitz3.ab3@27172>     i = FLen(incFile)
00037B7E <AmiBlitz3.ab3@27173>     GetReg d0,i
00037B84 <AmiBlitz3.ab3@27174>     MOVE.l d0,tempstore
00037B94 <AmiBlitz3.ab3@27175>     UnLock_ incLock
00037BB2 <AmiBlitz3.ab3@27178>   !asm
00037BB8 <AmiBlitz3.ab3@27179>   TST.l tempstore
00037BBC <AmiBlitz3.ab3@27180>    BEQ 'l1
00037BC2 <AmiBlitz3.ab3@27181>   MOVE.l tempstore,d2
00037BC4 <AmiBlitz3.ab3@27184> RTS
00037BEE <AmiBlitz3.ab3@27188>   !basic
00037C18 <AmiBlitz3.ab3@27189>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00037C46 <AmiBlitz3.ab3@27190>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037C4A <AmiBlitz3.ab3@27191>   incDirP.l   = PutD0                                       ;    "
00037C72 <AmiBlitz3.ab3@27192>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037CF2 <AmiBlitz3.ab3@27193>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037D12 <AmiBlitz3.ab3@27194>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00037D26 <AmiBlitz3.ab3@27196>   If incLock = False                                        ; not found => try orignal string only to find
00037D46 <AmiBlitz3.ab3@27197>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037D50 <AmiBlitz3.ab3@27200>   If incLock                                                ; found => store full path
00037D66 <AmiBlitz3.ab3@27201>     MaxLen incFile = 1024
00037D8A <AmiBlitz3.ab3@27202>     NameFromLock_ incLock,&incFile,1024
00037DB4 <AmiBlitz3.ab3@27203>     incFile = Peek.s(&incFile)
00037DEC <AmiBlitz3.ab3@27204>     Poke$ ?ptr_parameterstore,incFile
00037DF8 <AmiBlitz3.ab3@27207> 
00037E16 <AmiBlitz3.ab3@27208>   !asm
00037E18 <AmiBlitz3.ab3@27209> RTS
00037E1E <AmiBlitz3.ab3@27220>   JSR Aclearallvars
00037E24 <AmiBlitz3.ab3@27221>   JSR free_unusedfunctions
00037E2E <AmiBlitz3.ab3@27236>   MOVE.l #"NORE",reqmode
00037E34 <AmiBlitz3.ab3@27237> JSR handle_compileerror
00037E36 <AmiBlitz3.ab3@27240>   MOVE.l d0,-(a7)
00037E38 <AmiBlitz3.ab3@27241>   MOVE.l a5,d0
00037E42 <AmiBlitz3.ab3@27242>   !basica7
00037E46 <AmiBlitz3.ab3@27243>   i.l = PutD0
00037E50 <AmiBlitz3.ab3@27244>   If i
00037E78 <AmiBlitz3.ab3@27245>     a$ = Peek$(i)
00037EAA <AmiBlitz3.ab3@27246>     b$ = Peeks$(i-7,7)
00037FE2 <AmiBlitz3.ab3@27248> 
00037FE8 <AmiBlitz3.ab3@27249>     MOVE.l d0,result
00037FEC <AmiBlitz3.ab3@27251>   !asma7
00037FEE <AmiBlitz3.ab3@27252>   MOVE.l (a7)+,d0
00037FF0 <AmiBlitz3.ab3@27253> RTS
0003801A <AmiBlitz3.ab3@27257>   !basic
00038048 <AmiBlitz3.ab3@27258>   !ComData_LEA{comStr_CurrentDir,D0}
0003804C <AmiBlitz3.ab3@27259>   currentDirP.l = PutD0
0003807A <AmiBlitz3.ab3@27261>   !ComData_LEA{comStr_SourceName,D0}
0003807E <AmiBlitz3.ab3@27262>   fileNameP.l = PutD0
000380A6 <AmiBlitz3.ab3@27264>   check_dirname$  = Peek$(currentDirP)
000380CE <AmiBlitz3.ab3@27265>   check_filename$ = Peek$(fileNameP)
00038154 <AmiBlitz3.ab3@27266>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
0003815A <AmiBlitz3.ab3@27267>     JSR free_unusedfunctions
000381A4 <AmiBlitz3.ab3@27269>   olddirname$ = Peek$(check_dirname$)
000381EE <AmiBlitz3.ab3@27270>   oldfilename$ = Peek$(check_filename$)
00038218 <AmiBlitz3.ab3@27271>   For i = 0 To #maxincludes-1
0003822C <AmiBlitz3.ab3@27272>     incline(i) = 0
0003823C <AmiBlitz3.ab3@27273>   Next
0003825A <AmiBlitz3.ab3@27274>   !asm
0003825C <AmiBlitz3.ab3@27275> RTS
0003825E <AmiBlitz3.ab3@27279>   MOVEQ #0,d1
00038260 <AmiBlitz3.ab3@27282>   MOVE.b (a5)+,d0
00038264 <AmiBlitz3.ab3@27283>   BEQ 'er1
00038268 <AmiBlitz3.ab3@27284>   CMP.b #$20,d0
0003826C <AmiBlitz3.ab3@27285>   BEQ 'l1
0003826E <AmiBlitz3.ab3@27286>   ADDQ #1,d1
00038272 <AmiBlitz3.ab3@27287>   CMP.b #$22,d0
00038276 <AmiBlitz3.ab3@27288>   BNE 'l1
00038278 <AmiBlitz3.ab3@27289> RTS
0003827E <AmiBlitz3.ab3@27292> JMP syntaxerr
000382A2 <AmiBlitz3.ab3@27303> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
000382C0 <AmiBlitz3.ab3@27304> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
000382C6 <AmiBlitz3.ab3@27309>   TST.b exdebug
000382CA <AmiBlitz3.ab3@27310>   BNE 'l10
000382D0 <AmiBlitz3.ab3@27311>   MOVE.l #$4e71,d1
000382D6 <AmiBlitz3.ab3@27312>   JSR writeword
000382DC <AmiBlitz3.ab3@27313>   MOVE.l destpointer,d0
000382DE <AmiBlitz3.ab3@27314>   MOVE.l d0,d1
000382E0 <AmiBlitz3.ab3@27315>   ADDQ.l #3,d1
000382E6 <AmiBlitz3.ab3@27316>   AND.l #$fffffffc,d1
000382EC <AmiBlitz3.ab3@27317>   MOVE.l d1,destpointer
000382F2 <AmiBlitz3.ab3@27318>   SUB.l destpointer,d0
000382F6 <AmiBlitz3.ab3@27319>   BEQ 'lnf1
00038300 <AmiBlitz3.ab3@27320>   CMP.l #-1,bssstart
00038304 <AmiBlitz3.ab3@27321>   BNE 'lnf1
0003830E <AmiBlitz3.ab3@27322>   CMP.l #-1,chipstart
00038312 <AmiBlitz3.ab3@27323>   BNE 'lnf1
00038318 <AmiBlitz3.ab3@27324>   MOVE.l destpointer,a4
0003831E <AmiBlitz3.ab3@27325>   TST.w dontwrite
00038322 <AmiBlitz3.ab3@27326>   BNE 'lnf1
00038328 <AmiBlitz3.ab3@27327>   MOVE.w #$4e71,-2(a4)
00038332 <AmiBlitz3.ab3@27330>   CMP.l #-1,bssstart
00038336 <AmiBlitz3.ab3@27331>   BEQ 'l11
0003833C <AmiBlitz3.ab3@27332>   MOVE.l #erro1t,-(a7)
00038342 <AmiBlitz3.ab3@27333> JMP handle_compileerror
0003834C <AmiBlitz3.ab3@27336>   MOVE.l destpointer,bssstart
00038354 <AmiBlitz3.ab3@27337>   MOVE.b #1,bssmode
0003835A <AmiBlitz3.ab3@27340>   TST.b chipmode
0003835E <AmiBlitz3.ab3@27341>   BEQ 'l10
00038368 <AmiBlitz3.ab3@27342>   MOVE.l destpointer,chipend
0003836E <AmiBlitz3.ab3@27343>   CLR.b chipmode
00038374 <AmiBlitz3.ab3@27346>   JSR get1bytemain
00038376 <AmiBlitz3.ab3@27347> RTS
0003837C <AmiBlitz3.ab3@27351>    TST.b exdebug
00038380 <AmiBlitz3.ab3@27352>   BNE 'x1
00038386 <AmiBlitz3.ab3@27353>   MOVE.l destpointer,d0
0003838C <AmiBlitz3.ab3@27354>   MOVE.l d0,realbssend
00038392 <AmiBlitz3.ab3@27355>   MOVE.l #$4e71,d1
00038398 <AmiBlitz3.ab3@27356>   JSR writeword
0003839E <AmiBlitz3.ab3@27357>   MOVE.l destpointer,d0
000383A0 <AmiBlitz3.ab3@27358>   MOVE.l d0,d1
000383A2 <AmiBlitz3.ab3@27359>   ADDQ.l #3,d1
000383A8 <AmiBlitz3.ab3@27360>   AND.l #$fffffffc,d1
000383AE <AmiBlitz3.ab3@27361>   MOVE.l d1,destpointer
000383B4 <AmiBlitz3.ab3@27362>   SUB.l destpointer,d0
000383B8 <AmiBlitz3.ab3@27363>   BEQ 'lnf1
000383BE <AmiBlitz3.ab3@27364>   MOVE.l destpointer,a4
000383C8 <AmiBlitz3.ab3@27365>   CMP.l #-1,bssstart
000383CC <AmiBlitz3.ab3@27366>   BNE 'lnf1
000383D6 <AmiBlitz3.ab3@27367>   CMP.l #-1,chipstart
000383DA <AmiBlitz3.ab3@27368>   BNE 'lnf1
000383E0 <AmiBlitz3.ab3@27369>   TST.w dontwrite
000383E4 <AmiBlitz3.ab3@27370>   BNE 'lnf1
000383EA <AmiBlitz3.ab3@27371>   MOVE.w #$4e71,-2(a4)
000383F0 <AmiBlitz3.ab3@27374>   TST.b bssmode
000383F4 <AmiBlitz3.ab3@27375>   BEQ 'l10
000383FE <AmiBlitz3.ab3@27376>   MOVE.l destpointer,bssend
00038404 <AmiBlitz3.ab3@27377>   CLR.b bssmode
0003840E <AmiBlitz3.ab3@27382>   CMP.l #-1,chipstart
00038412 <AmiBlitz3.ab3@27383>   BEQ 'l11
00038418 <AmiBlitz3.ab3@27384>   MOVE.l #erro1t,-(a7)
0003841E <AmiBlitz3.ab3@27385> JMP handle_compileerror
00038428 <AmiBlitz3.ab3@27388>   MOVE.l destpointer,chipstart
00038430 <AmiBlitz3.ab3@27389>   MOVE.b #1,chipmode
00038436 <AmiBlitz3.ab3@27392>   JSR get1bytemain
00038438 <AmiBlitz3.ab3@27393> RTS
00038462 <AmiBlitz3.ab3@27397>   !basic
00038474 <AmiBlitz3.ab3@27407>   i.l = Peek.w(?ininclude)
0003849A <AmiBlitz3.ab3@27408>   If i>=0 AND i<#maxincludes
000384CC <AmiBlitz3.ab3@27409>     incdim (i) = Peek.s(?includetemp2)
000384E6 <AmiBlitz3.ab3@27410>     incline(i) = Peek.l(?includeline)
000384F0 <AmiBlitz3.ab3@27412>     If CLIMode
0003859E <AmiBlitz3.ab3@27413>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
000385BC <AmiBlitz3.ab3@27417>   !asm
000385BE <AmiBlitz3.ab3@27418> RTS
000385E8 <AmiBlitz3.ab3@27422>   !basic
000385FA <AmiBlitz3.ab3@27423>   i.l = Peek.w(?ininclude)
00038620 <AmiBlitz3.ab3@27424>   If i>=0 AND i<#maxincludes
00038650 <AmiBlitz3.ab3@27425>     incdim (i) = ""
00038664 <AmiBlitz3.ab3@27426>     incline(i) = 0
0003869C <AmiBlitz3.ab3@27427>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
000386BA <AmiBlitz3.ab3@27429>   !asm
000386BC <AmiBlitz3.ab3@27430> RTS
000386C2 <AmiBlitz3.ab3@27434>   LEA replacedat,a0
000386C6 <AmiBlitz3.ab3@27435>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
000386C8 <AmiBlitz3.ab3@27436> RTS
000386CE <AmiBlitz3.ab3@27440>   TST.b fpu
000386D2 <AmiBlitz3.ab3@27441>   BEQ 'l1
000386DC <AmiBlitz3.ab3@27444>   MOVE.l destpointer,newinitaddr
000386E2 <AmiBlitz3.ab3@27445>   JSR writeword
000386E8 <AmiBlitz3.ab3@27446>   JSR writelong
000386EA <AmiBlitz3.ab3@27447> RTS
000386EC <AmiBlitz3.ab3@27452>   TST.b (a5)
000386F0 <AmiBlitz3.ab3@27453>    BEQ.s 'll20
000386F4 <AmiBlitz3.ab3@27454>   CMP.b #$20,(a5)
000386F8 <AmiBlitz3.ab3@27455>    BNE.s 'll10
000386FA <AmiBlitz3.ab3@27456>   ADDQ.l #1,a5
000386FE <AmiBlitz3.ab3@27457> BRA.s 'll21
00038702 <AmiBlitz3.ab3@27460>   CMP.b #";",(a5)
00038706 <AmiBlitz3.ab3@27461>   BNE.s 'll20
00038708 <AmiBlitz3.ab3@27464>   TST.b (a5)+
0003870C <AmiBlitz3.ab3@27465>   BEQ.s 'll23
00038710 <AmiBlitz3.ab3@27466> BRA.s 'll25
00038712 <AmiBlitz3.ab3@27469>   SUBQ.l #1,a5
00038714 <AmiBlitz3.ab3@27472> RTS
00038718 <AmiBlitz3.ab3@27476>   MOVEM.l a2/d2,-(a7)
0003871A <AmiBlitz3.ab3@27477>   MOVEQ #0,d2
00038720 <AmiBlitz3.ab3@27478>   LEA ptr_parameterstore,a0
00038726 <AmiBlitz3.ab3@27479>   LEA chartab,a2
00038728 <AmiBlitz3.ab3@27482>   MOVE.b (a5),d0
0003872C <AmiBlitz3.ab3@27483>   TST.b 0(a2,d0)
00038730 <AmiBlitz3.ab3@27484>   BNE 'l10
00038732 <AmiBlitz3.ab3@27485>   ADDQ.l #1,a5
00038734 <AmiBlitz3.ab3@27486>   MOVE.b d0,(a0)+
00038736 <AmiBlitz3.ab3@27487>   ADDQ.l #1,d2
0003873A <AmiBlitz3.ab3@27488> BRA fc2
0003873C <AmiBlitz3.ab3@27491>   CLR.b (a0)+
00038742 <AmiBlitz3.ab3@27492>   JSR findlabel2
00038744 <AmiBlitz3.ab3@27493>   MOVE.l a2,a0
00038748 <AmiBlitz3.ab3@27494>   MOVEM.l (a7)+,a2/d2
0003874A <AmiBlitz3.ab3@27495> RTS
0003874C <AmiBlitz3.ab3@27499>   TST.l d0
00038750 <AmiBlitz3.ab3@27500>   BNE 'l10
00038756 <AmiBlitz3.ab3@27501>     MOVE.l #syntax_,-(a7)
0003875C <AmiBlitz3.ab3@27502> JMP handle_compileerror
00038762 <AmiBlitz3.ab3@27505>   CMP.l #1,d0
00038766 <AmiBlitz3.ab3@27506>   BNE 'l20
0003876C <AmiBlitz3.ab3@27507>     MOVE.l #overflow,-(a7)
00038772 <AmiBlitz3.ab3@27508> JMP handle_compileerror
00038774 <AmiBlitz3.ab3@27511>   ADD.l a2,d0
00038776 <AmiBlitz3.ab3@27512>   MOVE.l d0,-(a7)
0003877C <AmiBlitz3.ab3@27513> JMP handle_compileerror
00038782 <AmiBlitz3.ab3@27517>   JMP _return
00038788 <AmiBlitz3.ab3@27518>   JMP _return
0003878E <AmiBlitz3.ab3@27519>   JMP _return
00038794 <AmiBlitz3.ab3@27520>   JMP _return
0003879A <AmiBlitz3.ab3@27521>   JMP _return
000387A0 <AmiBlitz3.ab3@27522>   JMP _return
000387A6 <AmiBlitz3.ab3@27523>   JMP _return
000387AC <AmiBlitz3.ab3@27524>   JMP _return
000387B2 <AmiBlitz3.ab3@27525>   JMP _return
000387B8 <AmiBlitz3.ab3@27526>   JMP _return
000387BE <AmiBlitz3.ab3@27527>   JMP Atokejsr
000387C4 <AmiBlitz3.ab3@27528>   JMP writeinit
000387CA <AmiBlitz3.ab3@27529>   JMP macroexecute
000387D0 <AmiBlitz3.ab3@27530>   JMP findnext
000387D6 <AmiBlitz3.ab3@27531>   JMP replacelib
000387DC <AmiBlitz3.ab3@27532>   JMP findconstant2
000387E2 <AmiBlitz3.ab3@27533>   JMP findchar                                             ;char in d1
000387E8 <AmiBlitz3.ab3@27534>   JMP stripspaces
000387EE <AmiBlitz3.ab3@27535>   JMP calc                                                 ;d0 varmode
000387F4 <AmiBlitz3.ab3@27536>   JMP error
000387FA <AmiBlitz3.ab3@27537>   JMP writelong                                            ;d1 value
00038800 <AmiBlitz3.ab3@27538>   JMP writeword                                            ;d1 value
00038806 <AmiBlitz3.ab3@27539>   JMP writebyte                                            ;d1 value
0003880C <AmiBlitz3.ab3@27540> JMP exit
00038810 <AmiBlitz3.ab3@27544>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
00038812 <AmiBlitz3.ab3@27547>   fast            Dc.w 0
00038814 <AmiBlitz3.ab3@27548>   fpu             Dc.w 0
00038816 <AmiBlitz3.ab3@27549>   newsyntax       Dc.w 0
00038817 <AmiBlitz3.ab3@27551>   optistring      Dc.b 0
00038818 <AmiBlitz3.ab3@27552>   optistring2     Dc.b 0
00038819 <AmiBlitz3.ab3@27553>   optiarray       Dc.b 0
0003881A <AmiBlitz3.ab3@27554>   quickadd        Dc.b 0
0003881C <AmiBlitz3.ab3@27555>   newmode         Dc.w 0
0003881E <AmiBlitz3.ab3@27556>   mode            Dc.w 0
00038820 <AmiBlitz3.ab3@27557>   string1         Dc.w 0
00038822 <AmiBlitz3.ab3@27558>   load_var_size   Dc.w 0
00038824 <AmiBlitz3.ab3@27559>   load_var_reg    Dc.w 0
00038828 <AmiBlitz3.ab3@27560>   load_var_addr   Dc.l 0
0003882A <AmiBlitz3.ab3@27561>   imm_size        Dc.w 0
0003882C <AmiBlitz3.ab3@27562>   imm_reg         Dc.w 0
00038830 <AmiBlitz3.ab3@27563>   imm_addr        Dc.l 0
00038831 <AmiBlitz3.ab3@27564>   iee             Dc.b 0
00038832 <AmiBlitz3.ab3@27565>   _dcb            Dc.b 0
00038836 <AmiBlitz3.ab3@27566>   nohunkoffset    Dc.l 0
0003883A <AmiBlitz3.ab3@27569> teddata:        Dc.l tokens
0003883E <AmiBlitz3.ab3@27570>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
00038842 <AmiBlitz3.ab3@27571>                 Dc.l read_xtrafile
00038846 <AmiBlitz3.ab3@27572>                 Dc.l write_xtrafile
0003884A <AmiBlitz3.ab3@27573>                 Dc.l call_menuentry                        ; compile AND RUN ?
0003884E <AmiBlitz3.ab3@27574>                 Dc.l 0
00038852 <AmiBlitz3.ab3@27575>                 Dc.b ":",34,".;"
00038856 <AmiBlitz3.ab3@27576>                 Dc.l "NEW1"
0003885A <AmiBlitz3.ab3@27577>                 Dc.l newtypebase
0003885E <AmiBlitz3.ab3@27578> realconstbase:  Dc.l labelbase
00038862 <AmiBlitz3.ab3@27579> deflib          Dc.l 0
00038866 <AmiBlitz3.ab3@27580> incd            Dc.l 0
0003886A <AmiBlitz3.ab3@27581>                 Dc.l 0
0003886E <AmiBlitz3.ab3@27582>                 Dc.l 0
00038872 <AmiBlitz3.ab3@27583>                 Dc.l 0
00038874 <AmiBlitz3.ab3@27584> _return         RTS
00038875 <AmiBlitz3.ab3@27585>                 Dc.b 0
00038C75 <AmiBlitz3.ab3@27586> chartab2        Ds.l 256
00038C79 <AmiBlitz3.ab3@27587> codeend         Dc.l 0
00038C7D <AmiBlitz3.ab3@27588> hunkoffsetnum   Dc.l 0
00038C81 <AmiBlitz3.ab3@27589> chipsize        Dc.l 0
00038C85 <AmiBlitz3.ab3@27590> bsssize         Dc.l 0
00038C89 <AmiBlitz3.ab3@27591> bssstart        Dc.l -1
00038C8D <AmiBlitz3.ab3@27592> bssend          Dc.l -1
00038C91 <AmiBlitz3.ab3@27593> chipstart       Dc.l -1
00038C95 <AmiBlitz3.ab3@27594> chipend         Dc.l -1
00038C96 <AmiBlitz3.ab3@27595> bssmode         Dc.b 0
00038C97 <AmiBlitz3.ab3@27596> chipmode        Dc.b 0
00038C98 <AmiBlitz3.ab3@27597> newhunk         Dc.b 0
00038C9C <AmiBlitz3.ab3@27598> bssnum          Dc.l 0
00038CA0 <AmiBlitz3.ab3@27599> chipnum         Dc.l 0
00038CA4 <AmiBlitz3.ab3@27600> lastinstruction Dc.l 0
00038CA8 <AmiBlitz3.ab3@27601> lastinstructionaddr Dc.l 0
00038CBC <AmiBlitz3.ab3@27602> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00038CC0 <AmiBlitz3.ab3@27603> tstsize1b:      Ds.l 1
00038CC4 <AmiBlitz3.ab3@27604> bsssize2        Dc.l 1
00038CC8 <AmiBlitz3.ab3@27605>                 Dc.l $03E9
00038CCC <AmiBlitz3.ab3@27606> tstsize2b:      Dc.l $100
00038CE0 <AmiBlitz3.ab3@27607> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038CE4 <AmiBlitz3.ab3@27608> tstsize1c:      Ds.l 1
00038CE8 <AmiBlitz3.ab3@27609> bsssize3        Dc.l 1
00038CEC <AmiBlitz3.ab3@27610> chipsize2       Dc.l 1
00038CF0 <AmiBlitz3.ab3@27611>                 Dc.l $3e9
00038CF4 <AmiBlitz3.ab3@27612> tstsize2c       Dc.l 0
00038D04 <AmiBlitz3.ab3@27613> hunkend         Dc.l $3f2,$3eb,0,$3f2
00038D14 <AmiBlitz3.ab3@27614> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00038D1B <AmiBlitz3.ab3@27615> strcpy          Dc.b "strcpy",0
00038D22 <AmiBlitz3.ab3@27616> strcmp          Dc.b "strcmp",0
00038D29 <AmiBlitz3.ab3@27617> strvar          Dc.b "strvar",0
00038D2E <AmiBlitz3.ab3@27618> qmul            Dc.b "qmul",0
00038D33 <AmiBlitz3.ab3@27619> qdiv            Dc.b "qdiv",0
00038D3A <AmiBlitz3.ab3@27620> _MaxLen         Dc.b "maxlen",0
00038D3F <AmiBlitz3.ab3@27621> notf            Dc.b "????",0
00038D62 <AmiBlitz3.ab3@27623> errtext         Dc.b "only reg addressing Mode supported",0
00038D8C <AmiBlitz3.ab3@27624> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00038DCE <AmiBlitz3.ab3@27625> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00038DD0 <AmiBlitz3.ab3@27626> peeksize        Dc.w 0
00038DD4 <AmiBlitz3.ab3@27628> mainstart       Dc.l 0
00038DD5 <AmiBlitz3.ab3@27630> infunctioncode  Dc.b 0
00038DD7 <AmiBlitz3.ab3@27631> regnumstore     Dc.w 0
00038E04 <AmiBlitz3.ab3@27632>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00038E0C <AmiBlitz3.ab3@27633> testcode        Dc.b "print i",0
00038E70 <AmiBlitz3.ab3@27634>                 Ds.b 100
00038E7E <AmiBlitz3.ab3@27635> devo            Dc.b "developobject",0 : Even
00038E90 <AmiBlitz3.ab3@27636> autostorename   Dc.b "__autoconstantnum",0
00038E9A <AmiBlitz3.ab3@27637> _include        Dc.b "__include",0
00038EA2 <AmiBlitz3.ab3@27638> _debug          Dc.b "__debug",0
00038EA6 <AmiBlitz3.ab3@27639> unusedfunc      Dc.l 0
00038EA8 <AmiBlitz3.ab3@27643>   MOVE.l a0,d0
00038ED2 <AmiBlitz3.ab3@27644>   !basic
00038ED6 <AmiBlitz3.ab3@27645>   *olderror.l= PutD0
00038F30 <AmiBlitz3.ab3@27646> 
00038F64 <AmiBlitz3.ab3@27647>   error_type$ = error$
00039000 <AmiBlitz3.ab3@27648> 
00039014 <AmiBlitz3.ab3@27649>   If Peek.l (?beforeparameterfetch)
0003902A <AmiBlitz3.ab3@27650>     MaxLen detokenline.s = 65536
0003906C <AmiBlitz3.ab3@27651>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
0003907C <AmiBlitz3.ab3@27652>    *tn.preprocessor = Peek.l(?include_preprocessor)
000390A6 <AmiBlitz3.ab3@27653>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
000390CE <AmiBlitz3.ab3@27654>     If written>0 Then Poke.b &detokenline+written,0
000390F8 <AmiBlitz3.ab3@27655>     sourceLineText.s = Peek.s(&detokenline)
000390FE <AmiBlitz3.ab3@27656>   Else
00039126 <AmiBlitz3.ab3@27657>     sourceLineText = "NULL"
0003915A <AmiBlitz3.ab3@27659>   error_source$ = sourceLineText
000391AC <AmiBlitz3.ab3@27660>   error$=error$+sourceLineText
000391B2 <AmiBlitz3.ab3@27661>   GetD0 &error$
000391D0 <AmiBlitz3.ab3@27662>   !asm
000391D2 <AmiBlitz3.ab3@27663>   MOVE.l d0,a0
000391D4 <AmiBlitz3.ab3@27664> RTS
000391D6 <AmiBlitz3.ab3@27668>   MOVE.l a0,-(a7)
000391D8 <AmiBlitz3.ab3@27669>   MOVE.l a0,d0
000391DA <AmiBlitz3.ab3@27670>   MOVE.l a5,a0                                             ;macro title
00039204 <AmiBlitz3.ab3@27671>   !basic
00039208 <AmiBlitz3.ab3@27672>   i = PutD0
0003920A <AmiBlitz3.ab3@27673>   MOVEQ #20,d0
0003920C <AmiBlitz3.ab3@27676>     MOVE.b -(a0),d1
00039210 <AmiBlitz3.ab3@27677>     BEQ 'l1
00039214 <AmiBlitz3.ab3@27678>     CMP.b #":",d1
00039218 <AmiBlitz3.ab3@27679>     BEQ 'l1
0003921A <AmiBlitz3.ab3@27680>     SUBQ.l #1,d0
0003921E <AmiBlitz3.ab3@27681>     BNE 'l2
00039220 <AmiBlitz3.ab3@27684>   ADDQ #1,a0
00039222 <AmiBlitz3.ab3@27685>   MOVE.l a0,d0
00039226 <AmiBlitz3.ab3@27686>   i2.l = PutD0
00039242 <AmiBlitz3.ab3@27687>   If Peek.w (?ininclude)>0
0003929C <AmiBlitz3.ab3@27688>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
000392AC <AmiBlitz3.ab3@27689>     errorline.l = Peek.l(?includeline);-1
000392D4 <AmiBlitz3.ab3@27690>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000392FE <AmiBlitz3.ab3@27691>     errorfile.s = Peek.s(?includetemp2)
00039304 <AmiBlitz3.ab3@27692>   Else
0003933C <AmiBlitz3.ab3@27693>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
00039352 <AmiBlitz3.ab3@27694>     errorline.l = Peek.l(?compilelinecounter) + 1
00039386 <AmiBlitz3.ab3@27695>     errorfile.s = cli_sourcefile
00039390 <AmiBlitz3.ab3@27698>   If i
00039434 <AmiBlitz3.ab3@27699>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
000394B2 <AmiBlitz3.ab3@27700>     errortext.s = Replace$(errortext,"\n","\\0a")
000394B8 <AmiBlitz3.ab3@27701>   Else
000394E0 <AmiBlitz3.ab3@27702>     errortext.s = "???"
00039658 <AmiBlitz3.ab3@27705>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
00039720 <AmiBlitz3.ab3@27706>   NPrint "  ",error_type$,"\\n  ",error_source$
0003973E <AmiBlitz3.ab3@27710>   !asm
00039740 <AmiBlitz3.ab3@27711>   MOVE.l (a7)+,a0
00039742 <AmiBlitz3.ab3@27712> RTS
00039744 <AmiBlitz3.ab3@27716>   MOVE.l a0,-(a7)
00039746 <AmiBlitz3.ab3@27717>   MOVE.l a0,d0
00039748 <AmiBlitz3.ab3@27718>   MOVE.l a5,a0                                             ;macro title
00039772 <AmiBlitz3.ab3@27719>   !basic
00039776 <AmiBlitz3.ab3@27720>   i = PutD0
00039778 <AmiBlitz3.ab3@27721>   MOVEQ #20,d0
0003977A <AmiBlitz3.ab3@27724>     MOVE.b -(a0),d1
0003977E <AmiBlitz3.ab3@27725>     BEQ 'l1
00039782 <AmiBlitz3.ab3@27726>     CMP.b #":",d1
00039786 <AmiBlitz3.ab3@27727>     BEQ 'l1
00039788 <AmiBlitz3.ab3@27728>     SUBQ.l #1,d0
0003978C <AmiBlitz3.ab3@27729>     BNE 'l2
0003978E <AmiBlitz3.ab3@27732>   ADDQ #1,a0
00039790 <AmiBlitz3.ab3@27733>   MOVE.l a0,d0
00039794 <AmiBlitz3.ab3@27734>   i2.l = PutD0
00039818 <AmiBlitz3.ab3@27735>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
0003982C <AmiBlitz3.ab3@27736>   If fid <> -1
00039848 <AmiBlitz3.ab3@27737>     If Peek.w (?ininclude)>0
000398A2 <AmiBlitz3.ab3@27738>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
000398A8 <AmiBlitz3.ab3@27739>     Else
000398D4 <AmiBlitz3.ab3@27740>       Poke$(?includetemp2),""
000398FE <AmiBlitz3.ab3@27742>     a$ = Peek$(?includetemp2)
00039970 <AmiBlitz3.ab3@27743>     x$ = Replace$(Peek$(i),"\\0a","\n")
000399A2 <AmiBlitz3.ab3@27744>     file_WriteLine{fid,x$}
000399EC <AmiBlitz3.ab3@27745>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039A18 <AmiBlitz3.ab3@27746>     If a$
00039A4A <AmiBlitz3.ab3@27747>       file_WriteLine{fid,a$}
00039A94 <AmiBlitz3.ab3@27748>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039ABC <AmiBlitz3.ab3@27749>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039AC2 <AmiBlitz3.ab3@27750>     Else
00039AE8 <AmiBlitz3.ab3@27751>       file_WriteLine{fid,"none"}
00039B18 <AmiBlitz3.ab3@27753>     file_WriteLine{fid,Peek$(i2)}
00039B6E <AmiBlitz3.ab3@27754>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00039BB8 <AmiBlitz3.ab3@27755>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00039BC2 <AmiBlitz3.ab3@27756>     file_Close{fid}
00039BE0 <AmiBlitz3.ab3@27758>   !asm
00039BE2 <AmiBlitz3.ab3@27759>   MOVE.l (a7)+,a0
00039BE4 <AmiBlitz3.ab3@27760> RTS
00039C0E <AmiBlitz3.ab3@27764>   !basic
00039C12 <AmiBlitz3.ab3@27765>   progress.l     = PutD0
00039C24 <AmiBlitz3.ab3@27766>   total.l        = Peek.w(?progressbar_width)
00039C42 <AmiBlitz3.ab3@27767>   calcpro        = (progress * 100) / total +1
00039C54 <AmiBlitz3.ab3@27768>   pass.l         = Peek.w(?pass)
00039C66 <AmiBlitz3.ab3@27769>   typ.l          = Peek.w(?compiler_job)
00039C84 <AmiBlitz3.ab3@27772> If (pass><pass_old OR typ><typ_old)
00039C92 <AmiBlitz3.ab3@27774>     If pass_old><pass
00039D2E <AmiBlitz3.ab3@27775>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039D84 <AmiBlitz3.ab3@27776>       If cli_verbose>=2 Then NPrint passtatusstr
00039D8A <AmiBlitz3.ab3@27779>     pass_old = pass
00039D90 <AmiBlitz3.ab3@27780>     typ_old  = typ
00039D96 <AmiBlitz3.ab3@27781>     update_comstatus_gui = True
00039DA8 <AmiBlitz3.ab3@27782>     If typ=0
00039E88 <AmiBlitz3.ab3@27783>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00039E90 <AmiBlitz3.ab3@27784>       calcpro = 0  ; set gauge to 0
00039EA2 <AmiBlitz3.ab3@27786>     If typ=1
00039F82 <AmiBlitz3.ab3@27787>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
00039F8A <AmiBlitz3.ab3@27788>       calcpro = 0  ; set gauge to 0
00039FE0 <AmiBlitz3.ab3@27791>     If cli_verbose>=3 Then NPrint comstatusstr
00039FEE <AmiBlitz3.ab3@27794>   If (calcpro >< calcpro_old)
0003A042 <AmiBlitz3.ab3@27795>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A048 <AmiBlitz3.ab3@27796>     calcpro_old = calcpro
0003A04E <AmiBlitz3.ab3@27797>     update_comstatus_gui = True
0003A068 <AmiBlitz3.ab3@27800>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A086 <AmiBlitz3.ab3@27801>     !asm
0003A0B8 <AmiBlitz3.ab3@27802> 
0003A0E2 <AmiBlitz3.ab3@27803>     !basic
0003A0E8 <AmiBlitz3.ab3@27804>     update_comstatus_gui  = False ; because we update the gui
0003A106 <AmiBlitz3.ab3@27806>   !asm
0003A108 <AmiBlitz3.ab3@27807> RTS
0003A10E <AmiBlitz3.ab3@27812>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A114 <AmiBlitz3.ab3@27813>   LEA maxobjects_value,A3                                  ;current value
0003A11A <AmiBlitz3.ab3@27814>   MOVEA.l libpointer,A2
0003A11E <AmiBlitz3.ab3@27817>   CMPA.w #$0,A2
0003A122 <AmiBlitz3.ab3@27818>   BEQ.w menu4c__igotb
0003A124 <AmiBlitz3.ab3@27819>   MOVEA.l A2,A1
0003A128 <AmiBlitz3.ab3@27820>   ADDA.l $12(A1),A1
0003A12C <AmiBlitz3.ab3@27821>   TST.w -$2(A1)
0003A130 <AmiBlitz3.ab3@27822>   BEQ.w JL_0_FFF6b
0003A132 <AmiBlitz3.ab3@27823>   SUBQ.w #1,D5
0003A136 <AmiBlitz3.ab3@27824>   BMI.w JL_0_FFFCb
0003A138 <AmiBlitz3.ab3@27827>   MOVEA.l (A2),A2
0003A13C <AmiBlitz3.ab3@27828> BRA.w JL_0_FFDAb
0003A140 <AmiBlitz3.ab3@27831>   MOVE.w (A3),-$4(A1)
0003A142 <AmiBlitz3.ab3@27834> RTS
0003A148 <AmiBlitz3.ab3@27838>   MOVE.w debugnest,d0
0003A14E <AmiBlitz3.ab3@27839>   LEA storedebugmode, a0
0003A156 <AmiBlitz3.ab3@27840>   MOVE.b 0(a0,d0.w),debugmode
0003A15C <AmiBlitz3.ab3@27841>   TST.w debugnest
0003A160 <AmiBlitz3.ab3@27842>   BEQ JUMP_unpairrunerrs
0003A166 <AmiBlitz3.ab3@27843>   SUBQ.w #1,debugnest
0003A168 <AmiBlitz3.ab3@27844> RTS
0003A16E <AmiBlitz3.ab3@27847> JMP runerrsoverflow
0003A174 <AmiBlitz3.ab3@27850> JMP unpairrunerrs
0003A17C <AmiBlitz3.ab3@27854>   BCHG #$7,use_debugger
0003A184 <AmiBlitz3.ab3@27856>   BTST #$7,use_debugger
0003A188 <AmiBlitz3.ab3@27857>   BNE 'debugon
0003A18E <AmiBlitz3.ab3@27858>   CLR.w debugmode
0003A192 <AmiBlitz3.ab3@27859> BRA.b 'debugoff
0003A198 <AmiBlitz3.ab3@27862>   SNE debugmode
0003A19A <AmiBlitz3.ab3@27865>   MOVE.l a0,-(a7)
0003A1D2 <AmiBlitz3.ab3@27868>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A1D4 <AmiBlitz3.ab3@27873>   MOVE.l (a7)+,a0
0003A1D6 <AmiBlitz3.ab3@27874> RTS
0003A1DE <AmiBlitz3.ab3@27879>   BTST #$7,use_debugger
0003A1E2 <AmiBlitz3.ab3@27880>   BNE 'debugon
0003A1E8 <AmiBlitz3.ab3@27881>   CLR.w debugmode
0003A1EC <AmiBlitz3.ab3@27882> BRA.b 'debugoff
0003A1F2 <AmiBlitz3.ab3@27885>   SNE debugmode
0003A1F4 <AmiBlitz3.ab3@27888> RTS
0003A1FA <AmiBlitz3.ab3@27892>   ADDQ.w #1,debugnest
0003A200 <AmiBlitz3.ab3@27893>   MOVE.w debugnest,d0
0003A204 <AmiBlitz3.ab3@27894>   CMP.w #18,d0
0003A208 <AmiBlitz3.ab3@27895>    BGE JUMP_runerrsoverflow
0003A20E <AmiBlitz3.ab3@27896>   LEA storedebugmode, a0
0003A216 <AmiBlitz3.ab3@27897>   MOVE.b debugmode,0( a0,d0.w)
0003A21C <AmiBlitz3.ab3@27900>   SF debugmode
0003A21E <AmiBlitz3.ab3@27901> RTS
0003A29E <AmiBlitz3.ab3@27904> usedpath:  Ds.l 32
0003A2A2 <AmiBlitz3.ab3@27908>   BEQ.w JUMP_syntaxerr
0003A2A8 <AmiBlitz3.ab3@27909>   LEA lastpath,A0
0003A2AC <AmiBlitz3.ab3@27910>   MOVEM.l a0-a1/d0,-(a7)
0003A2B2 <AmiBlitz3.ab3@27911>   LEA lastpath2,a1
0003A2B4 <AmiBlitz3.ab3@27914>     MOVE.b (a0)+,(a1)+
0003A2B8 <AmiBlitz3.ab3@27915>   BNE 'l2
0003A2BC <AmiBlitz3.ab3@27916>   MOVEM.l (a7)+,a0-a1/d0
0003A2C0 <AmiBlitz3.ab3@27917>   LEA usedpath(PC),A0
0003A2C4 <AmiBlitz3.ab3@27918>   MOVEM.l a0-a1/d0,-(a7)
0003A2CA <AmiBlitz3.ab3@27919>   LEA lastpath,a1
0003A2CC <AmiBlitz3.ab3@27922>     MOVE.b (a0)+,(a1)+
0003A2D0 <AmiBlitz3.ab3@27923>   BNE 'l1
0003A2D4 <AmiBlitz3.ab3@27924>   MOVEM.l (a7)+,a0-a1/d0
0003A2D6 <AmiBlitz3.ab3@27927>   TST.w D0
0003A2DA <AmiBlitz3.ab3@27928>    BMI.w JUMP_syntaxerr
0003A2DC <AmiBlitz3.ab3@27929>   MOVE.b D0,(A0)+
0003A2E0 <AmiBlitz3.ab3@27930>   BSR.w JUMP_get1bytemain
0003A2E4 <AmiBlitz3.ab3@27931>    BNE.w JL_0_4AA8
0003A2E8 <AmiBlitz3.ab3@27932>   MOVE.b #$2,(A0)
0003A2EA <AmiBlitz3.ab3@27933> RTS
0003A2EE <AmiBlitz3.ab3@27937>   BEQ.w JUMP_syntaxerr
0003A2F4 <AmiBlitz3.ab3@27938>   LEA path2,A0
0003A2F6 <AmiBlitz3.ab3@27948>   TST.w D0
0003A2FA <AmiBlitz3.ab3@27949>    BMI.w JUMP_syntaxerr
0003A2FC <AmiBlitz3.ab3@27950>   MOVE.b D0,(A0)+
0003A300 <AmiBlitz3.ab3@27951>   BSR.w JUMP_get1bytemain
0003A304 <AmiBlitz3.ab3@27952>    BNE.w JL_0_4AA8b
0003A308 <AmiBlitz3.ab3@27953>   MOVE.b #$2,(A0)
0003A30A <AmiBlitz3.ab3@27954> RTS
0003A310 <AmiBlitz3.ab3@27963> JMP errormsg_reg
0003A31A <AmiBlitz3.ab3@27967>   MOVE.l #$f22d6780,fpucodeglobal
0003A324 <AmiBlitz3.ab3@27968>   MOVE.l #$f22c6780,fpucodelocal
0003A32A <AmiBlitz3.ab3@27969>   LEA regtable,a0
0003A334 <AmiBlitz3.ab3@27970>   MOVE.l #7,maxregs
0003A336 <AmiBlitz3.ab3@27973>   MOVE.l (a0),d0
0003A33A <AmiBlitz3.ab3@27974>   BEQ 'e1
0003A33C <AmiBlitz3.ab3@27975>   CLR.l (a0)
0003A340 <AmiBlitz3.ab3@27976>   MOVE.w 4(a0),d0
0003A34A <AmiBlitz3.ab3@27977>   MOVE.l fpucodeglobal,fpucode
0003A34E <AmiBlitz3.ab3@27978>   TST.w 6(a0)
0003A352 <AmiBlitz3.ab3@27979>   BEQ 'glob
0003A35C <AmiBlitz3.ab3@27980>   MOVE.l fpucodelocal,fpucode
0003A362 <AmiBlitz3.ab3@27983>   MOVE.l fpucode,d1
0003A368 <AmiBlitz3.ab3@27984>   JSR writelong
0003A372 <AmiBlitz3.ab3@27985>   SUB.l #$80,fpucodelocal
0003A37C <AmiBlitz3.ab3@27986>   SUB.l #$80,fpucodeglobal
0003A37E <AmiBlitz3.ab3@27987>   MOVE.w d0,d1
0003A384 <AmiBlitz3.ab3@27988>   JSR writeword
0003A386 <AmiBlitz3.ab3@27989>   ADDQ #8,a0
0003A38A <AmiBlitz3.ab3@27990> BRA 'again
0003A38C <AmiBlitz3.ab3@27993> RTS
0003A392 <AmiBlitz3.ab3@28000> JMP notypeerr
0003A398 <AmiBlitz3.ab3@28003> JMP illtypeerr
0003A3A2 <AmiBlitz3.ab3@28006>   MOVE.l #$f22d4780,fpucodeglobal
0003A3AC <AmiBlitz3.ab3@28007>   MOVE.l #$f22c4780,fpucodelocal
0003A3B2 <AmiBlitz3.ab3@28008>   LEA regtable,a0
0003A3B4 <AmiBlitz3.ab3@28009>   TST.l (a0)
0003A3B8 <AmiBlitz3.ab3@28010>    BNE JUMP_errormsg_reg
0003A3BA <AmiBlitz3.ab3@28011>   MOVE.l d7,-(a7)
0003A3BC <AmiBlitz3.ab3@28012>   SUBQ.l #1,a5
0003A3C2 <AmiBlitz3.ab3@28015>   JSR getparameter2
0003A3C6 <AmiBlitz3.ab3@28016>   BEQ.w 'nopar
0003A3CC <AmiBlitz3.ab3@28017>   MOVE.w d0,lastchar
0003A3D2 <AmiBlitz3.ab3@28018>   JSR findvariable
0003A3D6 <AmiBlitz3.ab3@28019>   BNE 'islocal
0003A3E0 <AmiBlitz3.ab3@28020>   MOVE.l fpucodeglobal,fpucode
0003A3EA <AmiBlitz3.ab3@28021>   MOVE.l #3,maxregs
0003A3EC <AmiBlitz3.ab3@28022>   MOVEQ #0,d7
0003A3F4 <AmiBlitz3.ab3@28025>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A3F8 <AmiBlitz3.ab3@28026>    BEQ 'doit
0003A400 <AmiBlitz3.ab3@28027>   CMP.l #newtype_double,$a(a2)
0003A404 <AmiBlitz3.ab3@28028>    BNE JUMP_illtypeerr
0003A40A <AmiBlitz3.ab3@28031>   LEA regtable,a0
0003A40C <AmiBlitz3.ab3@28032>   MOVEQ #0,d0
0003A40E <AmiBlitz3.ab3@28035>   TST.l (a0)
0003A412 <AmiBlitz3.ab3@28036>    BEQ 'store
0003A414 <AmiBlitz3.ab3@28037>   ADDQ.l #4,d0
0003A416 <AmiBlitz3.ab3@28038>   ADDQ.l #8,a0
0003A41C <AmiBlitz3.ab3@28039>   CMP.l #16,d0
0003A420 <AmiBlitz3.ab3@28040>    BCS 'loop
0003A42A <AmiBlitz3.ab3@28041>   MOVE.l #2,maxregs
0003A430 <AmiBlitz3.ab3@28042>   CMP.l #20,d0
0003A434 <AmiBlitz3.ab3@28043>    BCS 'loop
0003A43E <AmiBlitz3.ab3@28044>   MOVE.l #1,maxregs
0003A444 <AmiBlitz3.ab3@28045>   CMP.l #24,d0
0003A448 <AmiBlitz3.ab3@28046>    BCS 'loop
0003A44E <AmiBlitz3.ab3@28047> JMP toovarerr
0003A454 <AmiBlitz3.ab3@28050>   TST.b fpu
0003A458 <AmiBlitz3.ab3@28051>    BEQ 'nofpu
0003A45A <AmiBlitz3.ab3@28052>   MOVE.l a2,(a0)
0003A460 <AmiBlitz3.ab3@28053>   MOVE.w 4(a2),4(a0)
0003A464 <AmiBlitz3.ab3@28054>   MOVE.w d7,6(a0)
0003A46A <AmiBlitz3.ab3@28055>   MOVE.l fpucode,d1
0003A474 <AmiBlitz3.ab3@28056>   SUB.l #$80,fpucodeglobal
0003A47E <AmiBlitz3.ab3@28057>   SUB.l #$80,fpucodelocal
0003A484 <AmiBlitz3.ab3@28058>   JSR writelong
0003A488 <AmiBlitz3.ab3@28059>   MOVE.w 4(a2),d1
0003A48E <AmiBlitz3.ab3@28060>   JSR writeword
0003A494 <AmiBlitz3.ab3@28063>   MOVE.w lastchar,d0
0003A498 <AmiBlitz3.ab3@28064>   CMP.w #":",d0
0003A49C <AmiBlitz3.ab3@28065>    BEQ 'nopar
0003A49E <AmiBlitz3.ab3@28066>   TST.w d0
0003A4A2 <AmiBlitz3.ab3@28067>    BEQ 'nopar
0003A4A6 <AmiBlitz3.ab3@28068>   CMP.w #",",d0
0003A4AA <AmiBlitz3.ab3@28069>   BNE JUMP_syntaxerr
0003A4AE <AmiBlitz3.ab3@28070> BRA 'l2
0003A4B0 <AmiBlitz3.ab3@28073>    MOVE.l (a7)+,d7
0003A4B2 <AmiBlitz3.ab3@28074> RTS
0003A4B4 <AmiBlitz3.ab3@28077>   MOVEQ #1,d7
0003A4BC <AmiBlitz3.ab3@28078>   MOVE.b #1,newvariable
0003A4C2 <AmiBlitz3.ab3@28079>   LEA firstlocal,a2
0003A4C8 <AmiBlitz3.ab3@28080>   JSR findvariable
0003A4CE <AmiBlitz3.ab3@28081>   CLR.b newvariable
0003A4D4 <AmiBlitz3.ab3@28082>   CMP.l #-1,d0
0003A4D8 <AmiBlitz3.ab3@28083>   BEQ.w JUMP_notypeerr2
0003A4E2 <AmiBlitz3.ab3@28084>   MOVE.l fpucodelocal,fpucode
0003A4E6 <AmiBlitz3.ab3@28085> BRA 'go
0003A4EA <AmiBlitz3.ab3@28088>   CMP.b #".",d0
0003A4EE <AmiBlitz3.ab3@28089>    BNE 'l1
0003A4F2 <AmiBlitz3.ab3@28090>   BSR JUMP_get1bytemain
0003A4F6 <AmiBlitz3.ab3@28091>   BSR JUMP_get1bytemain
0003A4FA <AmiBlitz3.ab3@28094>   ORI .b #$20,d0
0003A4FE <AmiBlitz3.ab3@28095>   CMP.b #"d",d0
0003A502 <AmiBlitz3.ab3@28096>    BNE JUMP_illeaerr
0003A506 <AmiBlitz3.ab3@28097>   BSR JUMP_get1bytemain
0003A50A <AmiBlitz3.ab3@28098>   SUB.b #$30,d0
0003A50E <AmiBlitz3.ab3@28099>   CMP.b #$7,d0
0003A512 <AmiBlitz3.ab3@28100>    BGT JUMP_syntaxerr
0003A516 <AmiBlitz3.ab3@28101>   MOVE.w #$49c0,d1
0003A518 <AmiBlitz3.ab3@28102>   ADD.b d0,d1
0003A51E <AmiBlitz3.ab3@28103>   JSR writeword
0003A522 <AmiBlitz3.ab3@28104>   BSR JUMP_get1bytemain
0003A524 <AmiBlitz3.ab3@28105> RTS
0003A52A <AmiBlitz3.ab3@28109>   LEA lastpath,a0
0003A52E <AmiBlitz3.ab3@28110>   LEA usedpath(PC),A1
0003A530 <AmiBlitz3.ab3@28113>     MOVE.b (a0)+,(a1)+
0003A534 <AmiBlitz3.ab3@28114>   BNE 'l1
0003A53A <AmiBlitz3.ab3@28116>   LEA lastpath2,a0
0003A540 <AmiBlitz3.ab3@28117>   LEA lastpath,A1
0003A542 <AmiBlitz3.ab3@28120>     MOVE.b (a0)+,(a1)+
0003A546 <AmiBlitz3.ab3@28121>   BNE 'l2
0003A548 <AmiBlitz3.ab3@28122> RTS
0003A54E <AmiBlitz3.ab3@28126>   TST.b objectcount
0003A552 <AmiBlitz3.ab3@28127>   BEQ 'l2a
0003A558 <AmiBlitz3.ab3@28128> JMP macnesterr
0003A55E <AmiBlitz3.ab3@28131>   LEA devo,a0
0003A564 <AmiBlitz3.ab3@28132>   ADDQ.b #1,objectcount
0003A568 <AmiBlitz3.ab3@28133>   MOVEM.l a1/d2,-(a7)
0003A56E <AmiBlitz3.ab3@28134>   LEA ptr_parameterstore,a1
0003A570 <AmiBlitz3.ab3@28137>     MOVE.b (a0)+,(a1)+
0003A574 <AmiBlitz3.ab3@28138>   BNE 'l1
0003A576 <AmiBlitz3.ab3@28140>   MOVEQ #13,d2
0003A57C <AmiBlitz3.ab3@28141>   JSR findlabel2
0003A580 <AmiBlitz3.ab3@28142>   BNE 'd
0003A584 <AmiBlitz3.ab3@28143>   TST.l 8(a2)
0003A588 <AmiBlitz3.ab3@28144>   BEQ 'd
0003A58E <AmiBlitz3.ab3@28145>   SUBQ.b #1,objectcount
0003A592 <AmiBlitz3.ab3@28146>   MOVEM.l (a7)+,a1/d2
0003A598 <AmiBlitz3.ab3@28147>   JSR skiprest
0003A5A0 <AmiBlitz3.ab3@28148>   MOVE.b #1,developobject
0003A5A2 <AmiBlitz3.ab3@28149> RTS
0003A5A6 <AmiBlitz3.ab3@28152>   MOVEM.l (a7)+,a1/d2
0003A5AE <AmiBlitz3.ab3@28153>   MOVE.b #1,resdisable
0003A5B4 <AmiBlitz3.ab3@28156>   CLR.b developobject
0003A5BA <AmiBlitz3.ab3@28157> JMP do_Macro
0003A5C0 <AmiBlitz3.ab3@28161> JMP illeaerr
0003A5C6 <AmiBlitz3.ab3@28165>   CLR.b typecheck
0003A5CC <AmiBlitz3.ab3@28166>   CLR.b declare
0003A5D2 <AmiBlitz3.ab3@28167>   CLR.b declare2
0003A5D6 <AmiBlitz3.ab3@28168>   SUB.b #$30,d0
0003A5DA <AmiBlitz3.ab3@28169>   BTST #0,d0
0003A5DE <AmiBlitz3.ab3@28170>   BEQ 'l1
0003A5E6 <AmiBlitz3.ab3@28171>   MOVE.b #1,declare
0003A5EA <AmiBlitz3.ab3@28174>   BTST #1,d0
0003A5EE <AmiBlitz3.ab3@28175>   BEQ 'l2
0003A5F6 <AmiBlitz3.ab3@28176>   MOVE.b #1,declare2
0003A5FA <AmiBlitz3.ab3@28179>   BTST #2,d0
0003A5FE <AmiBlitz3.ab3@28180>   BEQ 'l3
0003A606 <AmiBlitz3.ab3@28181>   MOVE.b #1,typecheck
0003A60A <AmiBlitz3.ab3@28183>   BSR.w JUMP_get1bytemain
0003A60C <AmiBlitz3.ab3@28184> RTS
0003A612 <AmiBlitz3.ab3@28187> JMP get1bytemain
0003A63C <AmiBlitz3.ab3@28191>   !basic
0003A65C <AmiBlitz3.ab3@28193>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A67A <AmiBlitz3.ab3@28194>   !asm
0003A67C <AmiBlitz3.ab3@28195> Return
0003A67E <AmiBlitz3.ab3@28200>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A680 <AmiBlitz3.ab3@28201>   ADDQ #1,a5
0003A682 <AmiBlitz3.ab3@28202>   MOVE.l a5,-(a7)
0003A6AC <AmiBlitz3.ab3@28203>   !basic
0003A6B2 <AmiBlitz3.ab3@28204>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A6BC <AmiBlitz3.ab3@28205>   If _myD0
0003A6FC <AmiBlitz3.ab3@28206>     newconst$ = UCase$(Peek.s(_myD0))
0003A702 <AmiBlitz3.ab3@28207>   Else
0003A73C <AmiBlitz3.ab3@28208>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A764 <AmiBlitz3.ab3@28209>     nwconst$="xxx"
0003A78C <AmiBlitz3.ab3@28211>   condata$ =""
0003A79C <AmiBlitz3.ab3@28212>   Poke.b ?skip_bytes,0
0003A7F8 <AmiBlitz3.ab3@28213>   If Left$(newconst$,2) = "__"
0003A852 <AmiBlitz3.ab3@28214>     Select Mid$(newconst$,3,4)
0003A876 <AmiBlitz3.ab3@28216>      Case "DATE"
0003A8D0 <AmiBlitz3.ab3@28217>       Select Mid$(newconst$,3,6)
0003A90E <AmiBlitz3.ab3@28218>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A952 <AmiBlitz3.ab3@28219>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003A960 <AmiBlitz3.ab3@28220>       End Select
0003A96E <AmiBlitz3.ab3@28221>       i.l=SystemDate
0003A994 <AmiBlitz3.ab3@28222>       condata$ = Date$ (i)
0003AA12 <AmiBlitz3.ab3@28223>       condata$ = Replace$(condata$,"/",".")
0003AA3C <AmiBlitz3.ab3@28225>      Case "VER_"
0003AA4C <AmiBlitz3.ab3@28228>       actual_version.l = Peek.l(?versioninformation)
0003AA5C <AmiBlitz3.ab3@28229>       actual_build.l   = Peek.l(?number_of_builds)
0003AA80 <AmiBlitz3.ab3@28231>       Format ""
0003AADA <AmiBlitz3.ab3@28232>       Select Mid$(newconst$,3,9)
0003AAFE <AmiBlitz3.ab3@28234>        Case "VER_MAJOR"
0003AB3A <AmiBlitz3.ab3@28235>         condata$ = Str$(actual_version LSR 24)
0003AB64 <AmiBlitz3.ab3@28237>        Case "VER_MINOR"
0003ABA8 <AmiBlitz3.ab3@28238>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003ABD2 <AmiBlitz3.ab3@28240>        Case "VER_PATCH"
0003AC16 <AmiBlitz3.ab3@28241>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003AC40 <AmiBlitz3.ab3@28243>        Case "VER_BUILD"
0003AC64 <AmiBlitz3.ab3@28244>         Format ""
0003AC98 <AmiBlitz3.ab3@28245>         condata$ = Str$(actual_build)
0003AC9E <AmiBlitz3.ab3@28247>        Default
0003ACC6 <AmiBlitz3.ab3@28248>         condata$ = "{unknown compiler constant}"
0003ACD4 <AmiBlitz3.ab3@28250>       End Select
0003ACF8 <AmiBlitz3.ab3@28251>       Format ""
0003AD08 <AmiBlitz3.ab3@28252>       Poke.b ?skip_bytes,11
0003AD32 <AmiBlitz3.ab3@28254>      Case "THIS"
0003AD8C <AmiBlitz3.ab3@28255>       Select Mid$(newconst$,3,9)
0003ADB0 <AmiBlitz3.ab3@28257>        Case "THIS_FUNC"
0003ADC0 <AmiBlitz3.ab3@28258>         Poke.b ?skip_bytes,15
0003ADE0 <AmiBlitz3.ab3@28259>         If Peek.l(?currentfunction)<>0
0003AE2C <AmiBlitz3.ab3@28260>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003AE32 <AmiBlitz3.ab3@28261>         Else
0003AE5A <AmiBlitz3.ab3@28262>           condata$ = "GLOBAL"
0003AE84 <AmiBlitz3.ab3@28265>        Case "THIS_INCL"
0003AE94 <AmiBlitz3.ab3@28266>         Poke.b ?skip_bytes,14
0003AEB4 <AmiBlitz3.ab3@28267>         If Peek.l(?includetemp2)<>0
0003AF02 <AmiBlitz3.ab3@28268>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003AF2C <AmiBlitz3.ab3@28271>        Case "THIS_POIN"
0003AF3C <AmiBlitz3.ab3@28272>         Poke.b ?skip_bytes,14
0003AF5C <AmiBlitz3.ab3@28273>         If Peek.l(?currentfunction)<>0
0003AF8A <AmiBlitz3.ab3@28274>           condata$ = Hex$(Peek.l(?currentfunction))
0003AF98 <AmiBlitz3.ab3@28277>       End Select
0003AFC2 <AmiBlitz3.ab3@28279>      Case "CODE"
0003AFD2 <AmiBlitz3.ab3@28280>       Poke.b ?skip_bytes,10
0003B034 <AmiBlitz3.ab3@28281>       If Mid$(newconst$,3,8) = "CODELINE"
0003B070 <AmiBlitz3.ab3@28282>         condata$ = Str$(Peek.l(?globallinecount))
0003B07E <AmiBlitz3.ab3@28285>     End Select
0003B084 <AmiBlitz3.ab3@28287>   Else
0003B0D8 <AmiBlitz3.ab3@28288>     Select Left$(newconst$,1)
0003B0FC <AmiBlitz3.ab3@28290>      Case "R"
0003B10C <AmiBlitz3.ab3@28291>       Poke.b ?skip_bytes,3
0003B184 <AmiBlitz3.ab3@28292>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B204 <AmiBlitz3.ab3@28293>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B214 <AmiBlitz3.ab3@28294>       Next
0003B23E <AmiBlitz3.ab3@28296>      Case "N"
0003B24E <AmiBlitz3.ab3@28297>       Poke.b ?skip_bytes,1
0003B272 <AmiBlitz3.ab3@28298>       condata$ = Chr$(10)
0003B278 <AmiBlitz3.ab3@28300>      Default
0003B28A <AmiBlitz3.ab3@28301>       char1.b = Peek.b(&newconst$)
0003B2A2 <AmiBlitz3.ab3@28302>       char2.b = Peek.b(&newconst$+1)
0003B2AE <AmiBlitz3.ab3@28303>       nibble1.l = -1
0003B2BA <AmiBlitz3.ab3@28304>       nibble2.l = -1
0003B2F8 <AmiBlitz3.ab3@28306>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B336 <AmiBlitz3.ab3@28307>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B37A <AmiBlitz3.ab3@28309>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B3BE <AmiBlitz3.ab3@28310>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003B402 <AmiBlitz3.ab3@28312>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003B446 <AmiBlitz3.ab3@28313>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003B46C <AmiBlitz3.ab3@28315>       If nibble1>=0 AND nibble2>=0
0003B482 <AmiBlitz3.ab3@28316>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003B4A6 <AmiBlitz3.ab3@28317>         condata$ = Chr$(newchar)
0003B4B6 <AmiBlitz3.ab3@28318>         Poke.b ?skip_bytes,2
0003B4C4 <AmiBlitz3.ab3@28321>     End Select
0003B524 <AmiBlitz3.ab3@28323>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B64A <AmiBlitz3.ab3@28324>     !cout{"detected unknown const: " + newconst$}
0003B67E <AmiBlitz3.ab3@28325>     condata$ = newconst$
0003B694 <AmiBlitz3.ab3@28328>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B696 <AmiBlitz3.ab3@28329>   MOVE.l d0,d2
0003B698 <AmiBlitz3.ab3@28330>   MOVE.l d2,-(a7)
0003B69E <AmiBlitz3.ab3@28332>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B6A0 <AmiBlitz3.ab3@28333>   MOVE.l d0,a0
0003B6A2 <AmiBlitz3.ab3@28336>     MOVE.b (a0)+,d1
0003B6A8 <AmiBlitz3.ab3@28337>     JSR pokedata1b
0003B6AC <AmiBlitz3.ab3@28338>  DBF d2,'l1
0003B6CA <AmiBlitz3.ab3@28340>   !asm
0003B6CC <AmiBlitz3.ab3@28341>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B6CE <AmiBlitz3.ab3@28342>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B6D0 <AmiBlitz3.ab3@28343>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B6D6 <AmiBlitz3.ab3@28344>   ADD.l #1,d2
0003B6DC <AmiBlitz3.ab3@28346>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B6E2 <AmiBlitz3.ab3@28347>   MOVE.b skip_bytes,D0
0003B6E4 <AmiBlitz3.ab3@28348>   ADD.l D0,a5
0003B6E6 <AmiBlitz3.ab3@28349> RTS
0003B6EA <AmiBlitz3.ab3@28424> MOVEM.l a3/d1,-(a7)
0003B6F0 <AmiBlitz3.ab3@28426> CLR.b a4a5store
0003B6F2 <AmiBlitz3.ab3@28427> 'continue: MOVE.b (a3)+,d1
0003B6F6 <AmiBlitz3.ab3@28428> CMP.b #$15,d1
0003B6FA <AmiBlitz3.ab3@28429> BEQ 'find
0003B6FE <AmiBlitz3.ab3@28430> CMP.b #$14,d1
0003B702 <AmiBlitz3.ab3@28431> BEQ 'find
0003B706 <AmiBlitz3.ab3@28432> CMP.b #$ff,d1
0003B70A <AmiBlitz3.ab3@28433> BNE 'continue
0003B70E <AmiBlitz3.ab3@28434> BRA 'notfind
0003B714 <AmiBlitz3.ab3@28436> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B71A <AmiBlitz3.ab3@28437> JSR writelong
0003B722 <AmiBlitz3.ab3@28438> MOVE.b #1,a4a5store
0003B726 <AmiBlitz3.ab3@28439> 'notfind: MOVEM.l (a7)+,a3/d1
0003B728 <AmiBlitz3.ab3@28440> RTS
0003B72E <AmiBlitz3.ab3@28443> TST.b a4a5store
0003B732 <AmiBlitz3.ab3@28444> BEQ 'no
0003B738 <AmiBlitz3.ab3@28445> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B73E <AmiBlitz3.ab3@28446> JSR writelong
0003B744 <AmiBlitz3.ab3@28447> CLR.b a4a5store
0003B746 <AmiBlitz3.ab3@28448> 'no RTS
0003B746 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003B74A <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B74C <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B754 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B760 <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B764 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B766 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B76A <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B7B3 <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B7B4 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B7B8 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B7BA <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B7BE <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B7DA <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B7DE <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B7E0 <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B7E4 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B841 <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B842 <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B846 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B848 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B84D <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B85D <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B85E <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B862 <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B864 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B86A <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B87A <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B87E <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B880 <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B887 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B888 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B88C <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B88E <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B898 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B8CB <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B8CC <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B8D0 <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B8D2 <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B8DB <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003B916 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003B91A <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003B91C <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003B926 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003B927 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003B928 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003B92C <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003B92E <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003B931 <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003B948 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003B94C <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003B94E <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003B954 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003B961 <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003B962 <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003B966 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003B968 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003B96E <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003B97A <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003B97E <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003B980 <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003B987 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003B994 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003B998 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003B99A <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003B99F <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003B9AC <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003B9B0 <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003B9B2 <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003B9BA <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003B9BB <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003B9BC <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003B9C0 <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003B9CA <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003B9CB <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003B9CC <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003B9D0 <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003B9D2 <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003B9DB <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003B9E6 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003B9EA <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003B9EC <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003B9F4 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003B9FF <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003BA00 <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003BA04 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003BA06 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003BA0D <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003BA6F <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003BA70 <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003BA74 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003BA76 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003BA7D <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003BA8C <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003BA90 <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003BA92 <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003BA96 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003BACC <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003BAD0 <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003BAD2 <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003BAD7 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003BAE6 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003BAEA <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003BAEC <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003BAEF <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003BB10 <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003BB14 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003BB16 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003BB1B <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003BB27 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003BB28 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003BB2C <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003BB2E <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003BB33 <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003BB4A <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003BB4E <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003BB50 <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003BB55 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003BB64 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003BB68 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003BB6A <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003BB6F <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003BB8E <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003BB92 <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003BB94 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003BB99 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003BBB8 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003BBBC <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003BBBE <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003BBC4 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003BBC5 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003BBC6 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003BBCA <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003BBCC <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003BBD1 <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003BBD2 <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003BBD6 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003BBD8 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003BBDD <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003BBEA <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003BBEE <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003BBF0 <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003BBF5 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003BC04 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003BC08 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003BC0A <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003BC0F <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003BC1E <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003BC22 <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003BC24 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003BC2A <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003BC47 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003BC48 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003BC4C <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003BC4E <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003BC54 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003BC71 <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003BC72 <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003BC76 <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003BC78 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003BC7B <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003BC92 <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003BC96 <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003BC98 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003BC9B <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003BCAA <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003BCAE <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003BCB0 <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003BCB5 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003BCB6 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003BCBA <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003BCBC <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003BCC0 <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003BCD5 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003BCD6 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003BCDA <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003BCDC <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003BCE3 <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003BCFC <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003BD00 <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003BD02 <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003BD09 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003BD14 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003BD18 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003BD1A <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003BD1F <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003BD36 <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003BD3A <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003BD3C <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003BD40 <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003BD57 <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003BD58 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003BD5C <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003BD5E <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003BD63 <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003BD64 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003BD68 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003BD6A <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003BD6F <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003BD73 <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003BD74 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003BD78 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003BD7A <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003BD81 <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003BD99 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003BD9A <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003BD9E <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003BDA0 <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003BDA7 <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003BDAC <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003BDB0 <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003BDB2 <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003BDB9 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003BDBE <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003BDC2 <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003BDC4 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003BDCB <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003BDE6 <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003BDEA <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003BDEC <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003BDF4 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003BE0D <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003BE0E <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003BE12 <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003BE14 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003BE1A <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003BE1B <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003BE1C <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003BE20 <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003BE22 <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003BE28 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003BE29 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003BE2A <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003BE2E <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003BE30 <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003BE37 <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003BE38 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003BE3C <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003BE3E <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003BE44 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003BE4D <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003BE4E <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003BE52 <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003BE54 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003BE5C <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003BE69 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003BE6A <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003BE6E <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003BE70 <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003BE78 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003BE85 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003BE86 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003BE8A <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003BE8C <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003BE94 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003BEA1 <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003BEA2 <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003BEA6 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003BEA8 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003BEAD <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003BEAE <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003BEB2 <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003BEB4 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003BEB9 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003BEBC <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003BEC2 <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003BEC4 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003BECA <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003BECE <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003BED0 <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003BED4 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003BED5 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003BED6 <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003BED8 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003BEDE <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003BEE0 <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003BEE4 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003BEE6 <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003BEEA <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003BEEC <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003BEF1 <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003BEF2 <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003BEF4 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003BEF8 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003BEFC <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003BF00 <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003BF02 <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003BF06 <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003BF0D <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003BF0E <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003BF10 <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003BF14 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003BF18 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003BF1E <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003BF22 <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003BF29 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003BF2A <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003BF2C <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003BF30 <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003BF34 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003BF38 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003BF3A <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003BF3E <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003BF45 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003BF46 <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003BF48 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003BF4C <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003BF50 <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003BF54 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003BF56 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003BF5A <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003BF5C <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003BF61 <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003BF62 <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003BF64 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003BF68 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003BF6A <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003BF72 <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003BF76 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003BF78 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003BF7D <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003BF7E <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003BF80 <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003BF84 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003BF86 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003BF8C <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003BF8E <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003BF92 <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003BF94 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003BF98 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003BF99 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003BF9A <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003BF9C <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003BFA0 <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003BFA2 <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003BFAA <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003BFAE <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003BFB0 <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003BFB4 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003BFB5 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003BFB6 <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003BFB8 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003BFBE <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003BFC4 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003BFC6 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003BFCA <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003BFCC <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003BFD1 <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003BFD2 <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003BFD4 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003BFDA <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003BFE0 <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003BFE2 <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003BFE6 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003BFE8 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003BFEC <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003BFED <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003BFEE <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003BFF0 <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003BFF6 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003BFFC <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003BFFE <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C002 <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C004 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003C009 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003C00A <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C010 <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C012 <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003C01A <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C01E <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C020 <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003C025 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003C026 <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003C028 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C02E <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003C036 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C03A <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C03C <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003C041 <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003C042 <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C048 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C04A <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003C052 <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C056 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C058 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003C05D <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003C05E <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C066 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C06C <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003C06E <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C072 <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C074 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003C079 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003C07A <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C082 <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003C08A <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C090 <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003C095 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003C096 <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C09E <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003C0A6 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C0AA <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C0AC <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003C0B1 <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003C0B2 <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003C0B4 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C0BA <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C0C0 <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003C0C2 <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C0C6 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C0C8 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003C0CD <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003C0CE <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003C0D0 <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C0D6 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003C0DE <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C0E2 <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C0E4 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003C0E9 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003C0EA <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003C0EC <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C0F0 <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C0F2 <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003C0FA <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C0FE <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C100 <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003C105 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003C106 <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003C108 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C10E <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003C116 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C11A <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C11C <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003C121 <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003C122 <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C12A <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003C132 <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C138 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003C13D <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003C13E <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C144 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C146 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C14C <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003C14E <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C152 <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C154 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C159 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003C15A <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003C15C <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C160 <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C162 <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C168 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003C16A <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C16E <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C170 <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C175 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003C176 <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C17E <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C184 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003C186 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C18C <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C191 <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003C192 <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003C194 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C198 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C19A <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C1A0 <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003C1A2 <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C1A8 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C1AD <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003C1AE <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003C1B0 <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C1B4 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C1B6 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C1BC <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003C1BE <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C1C2 <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C1C4 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003C1C9 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003C1CA <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003C1CC <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C1D0 <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C1D2 <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C1D8 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003C1DA <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C1DE <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C1E0 <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003C1E5 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003C1E6 <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003C1E8 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C1EE <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003C1F6 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C1FC <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003C201 <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003C202 <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003C204 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C20A <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003C212 <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C218 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003C21D <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003C21E <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003C220 <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C226 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003C22E <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C232 <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C234 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003C239 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003C23A <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003C23C <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C240 <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C242 <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003C24A <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C250 <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C255 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003C256 <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003C258 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C25E <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C264 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003C266 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C26A <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C26C <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C271 <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003C272 <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C278 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C27A <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C280 <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003C282 <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C286 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C288 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C28D <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003C28E <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003C290 <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C296 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C29C <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003C29E <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C2A2 <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C2A4 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C2A9 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003C2AA <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003C2AC <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C2B2 <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C2B8 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003C2BA <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C2C0 <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C2C5 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003C2C6 <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003C2C8 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C2CC <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C2CE <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C2D4 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003C2D6 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C2DA <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C2DC <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C2E1 <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003C2E2 <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C2E8 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C2EA <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003C2F0 <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003C2F2 <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C2F6 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C2F8 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C2FD <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003C2FE <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003C300 <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C304 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C306 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003C30C <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003C30E <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C314 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C319 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003C31A <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003C31C <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C320 <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C322 <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003C328 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003C32A <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C330 <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C335 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003C336 <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003C338 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C33E <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003C344 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003C346 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C34C <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C351 <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003C352 <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003C354 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C358 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C35A <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C35C <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003C360 <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003C362 <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C368 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C36D <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003C36E <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003C370 <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C374 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C376 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C378 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003C37C <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003C37E <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C384 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C389 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003C38A <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003C38C <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C392 <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003C398 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003C39A <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C3A0 <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C3A5 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003C3A6 <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003C3A8 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C3AC <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C3AE <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003C3B4 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003C3B6 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C3BC <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C3C1 <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003C3C2 <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003C3C4 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C3C8 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C3CA <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003C3D0 <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003C3D2 <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C3D6 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C3D8 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C3DD <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003C3DE <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003C3E0 <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C3E4 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C3E6 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003C3EC <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003C3EE <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C3F4 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C3F9 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003C3FA <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003C3FC <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C400 <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C402 <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003C40A <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003C410 <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003C415 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003C416 <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003C418 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003C41E <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003C424 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003C426 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003C42C <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003C431 <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003C432 <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003C434 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003C438 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003C43A <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003C440 <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003C442 <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003C446 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003C448 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003C44D <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003C44E <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003C450 <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003C454 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003C456 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003C45C <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003C45E <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C464 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C469 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003C46A <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003C46C <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003C472 <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003C478 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003C47A <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003C480 <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003C485 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003C486 <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003C488 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003C48C <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003C48E <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003C494 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003C496 <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003C49A <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003C49C <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003C4A1 <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003C4A2 <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003C4A4 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003C4A8 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003C4AA <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003C4B0 <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003C4B2 <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003C4B8 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003C4BD <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003C4BE <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003C4C0 <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003C4C6 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003C4CC <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003C4CE <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003C4D4 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003C4D9 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003C4DA <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003C4DC <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003C4E2 <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003C4E8 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003C4EA <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C4EE <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C4F0 <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003C4F5 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003C4F6 <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003C4F8 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C4FE <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003C506 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C50A <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C50C <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003C511 <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003C512 <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C51A <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003C522 <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C526 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C528 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C530 <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003C531 <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003C534 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003C53A <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C54C <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003C54D <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003C54E <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C55C <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003C569 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003C56A <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C570 <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C57E <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C584 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003C585 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C58C <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C59A <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C5A1 <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003C5A2 <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C5A8 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C5B0 <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C5B6 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003C5BD <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003C5BE <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C5C4 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C5D2 <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C5D8 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003C5D9 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003C5DA <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C5E0 <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C5E2 <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003C5EA <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C5EE <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C5F0 <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C5F5 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003C5F6 <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C5FC <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C5FE <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003C606 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C60A <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C60C <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C611 <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003C612 <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C61A <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003C622 <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C626 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C628 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003C62E <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003C62F <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C636 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003C63E <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C644 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003C64C <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003C64D <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003C66B <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C66E <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C676 <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C67C <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C682 <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003C687 <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003C68A <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003C692 <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C698 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C69E <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003C6A3 <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003C6A6 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003C6AE <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C6B4 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C6BA <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003C6BF <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003C6C2 <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C6CA <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003C6D0 <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C6D4 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C6D6 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003C6DB <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C6F7 <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C6FE <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C706 <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C70C <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C712 <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003C713 <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003C714 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C71A <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C71C <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003C724 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C72A <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C72E <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003C72F <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003C730 <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003C732 <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C736 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C738 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003C740 <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C746 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C749 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C74C <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C752 <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C754 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C765 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C768 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C76E <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C770 <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C781 <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C782 <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C784 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C78C <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C796 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C79E <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C79F <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C7A0 <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C7A2 <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C7A8 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C7B0 <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C7B6 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C7BB <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C7BC <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C7C4 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C7CC <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C7D0 <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C7D2 <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C7D7 <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C7D8 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C7E0 <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C7E6 <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C7E8 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C7EE <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C7F3 <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C7F4 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C7FA <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C802 <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C808 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C80F <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C816 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C81E <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C824 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C82A <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C82B <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C832 <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C83A <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C840 <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C846 <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C847 <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C848 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C850 <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C856 <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C858 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C85C <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C85E <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C863 <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C864 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C86A <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C86C <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C874 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C87A <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C87F <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C880 <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C886 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C888 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C890 <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C894 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C896 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C89B <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C89C <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C89E <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C8A4 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C8AC <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C8B0 <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C8B2 <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C8B7 <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C8B8 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C8BA <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C8BE <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C8C0 <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C8C8 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C8CC <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C8CE <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C8D3 <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C8D4 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C8DC <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C8E4 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C8E8 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C8EA <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C8EF <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C8F0 <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003C8F6 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003C8F8 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003C900 <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003C904 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003C906 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003C90B <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003C90C <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003C912 <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003C914 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003C91C <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003C920 <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003C922 <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003C927 <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003C928 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003C92A <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003C930 <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003C938 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003C93C <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003C93E <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003C943 <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003C944 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003C94C <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003C954 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003C95A <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003C95F <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003C960 <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003C962 <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003C966 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003C968 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003C970 <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003C974 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003C976 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003C97B <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003C97C <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003C984 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003C98C <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003C992 <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003C997 <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003C998 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003C99A <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003C9A0 <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003C9A8 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003C9AC <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003C9AE <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003C9B3 <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003C9B4 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003C9BA <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003C9BC <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003C9C4 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003C9C8 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003C9CA <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003C9CE <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003C9CF <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003C9D0 <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003C9D6 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003C9D8 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003C9E0 <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003C9E6 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003C9EA <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003C9EB <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003C9EC <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003C9EE <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003C9F2 <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003C9F4 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003C9F6 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003C9FC <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CA00 <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003CA02 <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003CA07 <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003CA08 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003CA0E <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003CA10 <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003CA16 <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003CA18 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003CA1C <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003CA1E <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003CA21 <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003CA22 <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003CA24 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003CA2C <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003CA3B <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003CA3E <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003CA42 <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003CA46 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003CA4C <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003CA50 <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003CA57 <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003CA5E <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003CA62 <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003CA6C <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003CA72 <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003CA73 <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003CA76 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003CA7A <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003CA7C <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003CA7E <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003CA82 <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003CA88 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003CA8F <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003CA96 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003CA9E <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003CAA4 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003CAAB <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003CAAC <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003CAB2 <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003CABA <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003CAC0 <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003CAC7 <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003CAC8 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003CACE <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003CAD2 <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003CAD6 <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003CADC <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003CAE3 <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003CAE6 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003CAEA <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003CAEC <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003CAF2 <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003CAF4 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003CAF8 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003CAFA <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003CAFF <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003CB00 <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003CB02 <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003CB06 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003CB08 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003CB0E <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003CB10 <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003CB14 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003CB16 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003CB1A <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003CB1B <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003CB1C <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003CB22 <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003CB24 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003CB2A <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003CB2C <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003CB30 <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003CB32 <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003CB37 <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003CB38 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003CB3A <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003CB3E <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003CB40 <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003CB46 <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003CB48 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003CB4C <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003CB4E <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003CB54 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003CB55 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003CB56 <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003CB5C <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003CB60 <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003CB64 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003CB66 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003CB6A <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003CB70 <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003CB71 <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003CB72 <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003CB78 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003CB7C <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003CB80 <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003CB82 <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003CB86 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003CB8D <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003CB8E <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003CB94 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003CB9C <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003CB9E <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003CBA2 <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003CBAB <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003CBB0 <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003CBB2 <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003CBB6 <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003CBB8 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003CBBA <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003CBBE <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003CBC4 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003CBC6 <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003CBC8 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003CBCE <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003CBD4 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003CBDA <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003CBDC <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003CBE0 <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003CBE2 <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003CBE8 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003CBF0 <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003CBFA <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003CBFC <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003CC0E <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003CC14 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003CC20 <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003CC22 <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003CC26 <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003CC2A <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003CC30 <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003CC32 <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003CC36 <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003CC38 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003CC3C <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003CC44 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003CC4C <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003CC54 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003CC5C <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003CC60 <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003CC6C <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003CC70 <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003CC78 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003CC7C <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003CC84 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003CC90 <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003CC94 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003CC98 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003CC9C <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003CCA0 <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003CCA2 <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003CCA6 <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003CCAA <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003CCAE <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003CCB2 <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003CCB6 <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003CCBA <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003CCBE <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003CCC2 <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003CCC6 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003CCC8 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003CCCA <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003CCCE <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003CCD0 <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003CCD4 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003CCD8 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003CCE0 <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003CCE2 <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003CCE6 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003CCEA <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003CCEE <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003CCF2 <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003CCF4 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003CCF6 <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003CCFA <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003CCFE <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003CD02 <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003CD06 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003CD0A <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003CD0E <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003CD10 <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003CD12 <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003CD16 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003CD1A <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003CD1E <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003CD20 <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003CD24 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003CD28 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003CD2A <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003CD2E <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003CD32 <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003CD34 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003CD38 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003CD3C <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003CD40 <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003CD44 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003CD48 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003CD4A <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003CD4E <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003CD50 <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003CD52 <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003CD54 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003CD58 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003CD5C <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003CD60 <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003CD64 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003CD68 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003CD6C <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003CD70 <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003CD74 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003CD78 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003CD7C <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003CD80 <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003CD84 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003CD86 <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003CD8A <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003CD8E <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003CD90 <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003CD92 <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003CD94 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003CD98 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003CD9C <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003CD9E <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003CDA2 <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003CDA4 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003CDA6 <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003CDA8 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003CDAC <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003CDB0 <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003CDB2 <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003CDB4 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003CDB8 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003CDBC <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003CDC0 <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003CDC4 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003CDC6 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003CDCA <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003CDCE <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003CDD2 <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003CDD4 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003CDD8 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003CDDC <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003CDDE <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003CDE2 <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003CDE6 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003CDE8 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003CDEC <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003CDEE <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003CDF2 <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003CDF6 <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003CDF8 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003CDFA <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003CE00 <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003CE02 <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003CE06 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003CE0A <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003CE0E <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003CE14 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003CE18 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003CE1A <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003CE1E <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003CE22 <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003CE26 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003CE2A <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003CE2E <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003CE32 <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003CE3C <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003CE41 <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003CE42 <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003CE46 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003CE48 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003CE4F <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003CE50 <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003CE54 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003CE56 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003CE5D <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003CE5E <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003CE62 <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003CE64 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003CE6C <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003CE6D <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003CE6E <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003CE74 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003CE79 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003CE8D <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003CE8E <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003CE92 <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003CE94 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003CE98 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003CE99 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003CE9A <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003CE9E <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003CEA0 <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003CEA3 <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003CEA4 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003CEA8 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003CEAA <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003CEB1 <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003CEB2 <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003CEB6 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003CEB8 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003CEBE <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003CECB <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003CECC <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003CED0 <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003CED2 <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003CED9 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003CEF1 <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003CEF2 <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003CEF6 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003CEF8 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003CEFC <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003CF1F <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003CF20 <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003CF24 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003CF26 <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003CF2D <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003CF38 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003CF3C <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003CF3E <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003CF44 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003CF45 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003CF46 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003CF4A <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003CF4C <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003CF51 <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003CF52 <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003CF56 <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003CF58 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003CF5F <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003CF71 <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003CF72 <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003CF76 <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003CF78 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003CF82 <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003CF83 <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003CF84 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003CF88 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003CF8A <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003CF92 <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003CF9F <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003CFA0 <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003CFA4 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003CFA6 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003CFA9 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003CFE4 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003CFE8 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003CFEA <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003CFEE <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003CFEF <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003CFF0 <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003CFF4 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003CFF6 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003CFFE <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003CFFF <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D000 <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D004 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003D006 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D00E <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D01E <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D022 <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003D024 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D02D <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D035 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D036 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D03A <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003D03C <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D044 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D04D <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D04E <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D052 <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003D054 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D05C <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D05D <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D05E <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D062 <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003D064 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D06A <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D06B <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D06C <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D070 <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003D072 <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D079 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D07A <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D07E <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003D080 <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D087 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D088 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D08C <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003D08E <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D095 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D09A <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003D09C <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D0A3 <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D0A4 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D0A8 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003D0AA <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D0AF <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D0C5 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D0C6 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D0CA <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003D0CC <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D0D6 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D0D7 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D0D8 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D0DC <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003D0DE <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D0E9 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D0EA <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D0EE <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003D0F0 <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D0FC <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D129 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D12A <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D12E <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003D130 <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D138 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D16F <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D170 <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D174 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003D176 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D17E <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D19D <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D19E <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D1A2 <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003D1A4 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D1AB <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D1E1 <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D1E2 <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D1E6 <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003D1E8 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D1F1 <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D226 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D22A <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003D22C <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D23C <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D273 <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D274 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D274 <AmiBlitz3.ab3@28452> INCLUDE "internal_commands.ab3"
0003D278 <AmiBlitz3.ab3@28457>            Dc.l cif_lt                                     ;ciflt
0003D27C <AmiBlitz3.ab3@28458>            Dc.l cif_eq                                     ;cifeq
0003D280 <AmiBlitz3.ab3@28459>            Dc.l cif_gt                                     ;cifgt
0003D284 <AmiBlitz3.ab3@28460>            Ds.l 1                                          ;0
0003D288 <AmiBlitz3.ab3@28461>            Dc.l cif_le                                     ;cifle
0003D28C <AmiBlitz3.ab3@28462>            Dc.l cif_ne                                     ;cifne
0003D290 <AmiBlitz3.ab3@28463>            Dc.l cif_le                                     ;cifge
0003D294 <AmiBlitz3.ab3@28464>            Ds.l 1                                          ;0
0003D298 <AmiBlitz3.ab3@28465>            Dc.l cif_ge                                     ;cifge
0003D29C <AmiBlitz3.ab3@28466>            Dc.l cif_ne                                     ;cifne
0003D2A0 <AmiBlitz3.ab3@28467>            Dc.l cif_ge                                     ;cifge
0003D2A4 <AmiBlitz3.ab3@28468>            Ds.l 1                                          ;0
0003D2A8 <AmiBlitz3.ab3@28471>            Dc.l do_newtype                                 ;donewtype
0003D2AC <AmiBlitz3.ab3@28472>            Dc.l do_end                                     ;doend
0003D2B0 <AmiBlitz3.ab3@28473>            Dc.l do_let                                     ;dolet
0003D2B4 <AmiBlitz3.ab3@28474>            Dc.l do_dim                                     ;dodim
0003D2B8 <AmiBlitz3.ab3@28475>            Dc.l do_goto                                    ;dogoto
0003D2BC <AmiBlitz3.ab3@28476>            Dc.l do_gosub                                   ;dogosub
0003D2C0 <AmiBlitz3.ab3@28477>            Dc.l do_return                                  ;doreturn
0003D2C4 <AmiBlitz3.ab3@28478>            Dc.l do_statement                               ;dostatement
0003D2C8 <AmiBlitz3.ab3@28479>            Dc.l do_function                                ;dofunc
0003D2CC <AmiBlitz3.ab3@28480>            Dc.l do_mousewait                               ;domwait
0003D2D0 <AmiBlitz3.ab3@28481>            Dc.l do_if                                      ;doif
0003D2D4 <AmiBlitz3.ab3@28482>            Dc.l do_while                                   ;dowhile
0003D2D8 <AmiBlitz3.ab3@28483>            Dc.l do_Macro                                   ;domacro
0003D2DC <AmiBlitz3.ab3@28484>            Dc.l do_select                                  ;doselect
0003D2E0 <AmiBlitz3.ab3@28485>            Dc.l do_case                                    ;docase
0003D2E4 <AmiBlitz3.ab3@28486>            Dc.l do_default                                 ;dodefault
0003D2E8 <AmiBlitz3.ab3@28487>            Dc.l do_AsmExit                                 ;doasmexit
0003D2EC <AmiBlitz3.ab3@28488>            Dc.l do_xinclude                                ;doxinclude
0003D2F0 <AmiBlitz3.ab3@28489>            Dc.l do_INCLUDE                                 ;doinclude
0003D2F4 <AmiBlitz3.ab3@28490>            Dc.l do_syntax                                  ;syntaxerr
0003D2F8 <AmiBlitz3.ab3@28491>            Dc.l do_shared                                  ;doshared
0003D2FC <AmiBlitz3.ab3@28492>            Dc.l do_for                                     ;dofor
0003D300 <AmiBlitz3.ab3@28493>            Dc.l do_next                                    ;donext
0003D304 <AmiBlitz3.ab3@28494>            Dc.l syntaxerr                                  ; To
0003D308 <AmiBlitz3.ab3@28495>            Dc.l syntaxerr                                  ; Step
0003D30C <AmiBlitz3.ab3@28496>            Dc.l do_data                                    ;dodata
0003D310 <AmiBlitz3.ab3@28497>            Dc.l do_read                                    ;doread
0003D314 <AmiBlitz3.ab3@28501>            Dc.l syntaxerr                                  ; CNIF
0003D318 <AmiBlitz3.ab3@28502>            Dc.l syntaxerr                                  ; CSIF
0003D31C <AmiBlitz3.ab3@28503>            Dc.l syntaxerr                                  ; CELSE
0003D320 <AmiBlitz3.ab3@28504>            Dc.l syntaxerr                                  ; CEND
0003D324 <AmiBlitz3.ab3@28505>            Dc.l do_cerr                                    ;docerr
0003D328 <AmiBlitz3.ab3@28506>            Dc.l do_then                                    ;dothen
0003D32C <AmiBlitz3.ab3@28507>            Dc.l do_else                                    ;doelse
0003D330 <AmiBlitz3.ab3@28508>            Dc.l do_even4                                   ;doeven4
0003D334 <AmiBlitz3.ab3@28509>            Dc.l do_even8                                   ;doeven8
0003D338 <AmiBlitz3.ab3@28511>            Dc.l do_dc                                      ;dodc
0003D33C <AmiBlitz3.ab3@28512>            Dc.l do_ds                                      ;dods
0003D340 <AmiBlitz3.ab3@28513>            Dc.l do_even                                    ;doeven
0003D344 <AmiBlitz3.ab3@28514>            Dc.l do_dcb                                     ;dodcb
0003D348 <AmiBlitz3.ab3@28515>            Dc.l do_setreg                                  ;dosetreg
0003D34C <AmiBlitz3.ab3@28516>            Dc.l do_IncBin                                  ;doincbin
0003D350 <AmiBlitz3.ab3@28517>            Dc.l do_free                                    ;dofree
0003D354 <AmiBlitz3.ab3@28518>            Dc.l do_use                                     ;douse
0003D358 <AmiBlitz3.ab3@28519>            Dc.l do_Stop                                    ;dostop
0003D35C <AmiBlitz3.ab3@28520>            Dc.l do_Cont                                    ;docont
0003D360 <AmiBlitz3.ab3@28521>            Dc.l syntaxerr                                  ;syntaxeer
0003D364 <AmiBlitz3.ab3@28522>            Dc.l do_SetInt                                  ;dosetint
0003D368 <AmiBlitz3.ab3@28523>            Dc.l do_ClrInt                                  ;doclrint
0003D36C <AmiBlitz3.ab3@28524>            Dc.l do_MaxLen                                  ;domaxlen
0003D370 <AmiBlitz3.ab3@28525>            Dc.l do_DEFTYPE                                 ;dodeftype
0003D374 <AmiBlitz3.ab3@28526>            Dc.l do_BLITZ                                   ;doblitz
0003D378 <AmiBlitz3.ab3@28527>            Dc.l do_AMIGA                                   ;doamiga
0003D37C <AmiBlitz3.ab3@28528>            Dc.l do_QAMIGA                                  ;doqamiga
0003D380 <AmiBlitz3.ab3@28529>            Dc.l do_VWait                                   ;dovwait
0003D384 <AmiBlitz3.ab3@28530>            Dc.l do_LibJsr                                  ;dolibjsr
0003D388 <AmiBlitz3.ab3@28531>            Dc.l do_TokeJsr                                 ;dotokejsr
0003D38C <AmiBlitz3.ab3@28532>            Dc.l do_BLibJsr                                 ;doblibjsr
0003D390 <AmiBlitz3.ab3@28533>            Dc.l _extb                                      ;syntaxerr
0003D394 <AmiBlitz3.ab3@28537>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003D398 <AmiBlitz3.ab3@28538>            Dc.l do_SetErr                                  ;doseterr
0003D39C <AmiBlitz3.ab3@28539>            Dc.l do_ClrErr                                  ;doclrerr
0003D3A0 <AmiBlitz3.ab3@28540>            Dc.l syntaxerr                                  ;syntaxerr
0003D3A4 <AmiBlitz3.ab3@28541>            Dc.l do_ErrFail                                 ;doerrfail
0003D3A8 <AmiBlitz3.ab3@28542>            Dc.l syntaxerr
0003D3AC <AmiBlitz3.ab3@28543>            Dc.l syntaxerr                                  ;mod
0003D3B0 <AmiBlitz3.ab3@28544>            Dc.l syntaxerr                                  ;Pi
0003D3B4 <AmiBlitz3.ab3@28545>            Dc.l do_Repeat                                  ;dorepeat
0003D3B8 <AmiBlitz3.ab3@28546>            Dc.l do_Until                                   ;dountil
0003D3BC <AmiBlitz3.ab3@28547>            Dc.l do_PutReg                                  ;doputreg
0003D3C0 <AmiBlitz3.ab3@28548>            Dc.l do_Pop                                     ;dopop
0003D3C4 <AmiBlitz3.ab3@28549>            Dc.l do_INCDIR                                  ;doincdir
0003D3C8 <AmiBlitz3.ab3@28550>            Dc.l mydo_Endif2                                ;mydoendif2
0003D3CC <AmiBlitz3.ab3@28551>            Dc.l do_Wend                                    ;dowend
0003D3D0 <AmiBlitz3.ab3@28552>            Dc.l do_SysJsr                                  ;dosysjsr
0003D3D4 <AmiBlitz3.ab3@28553>            Dc.l do_WBStartup                               ;dowbstartup
0003D3D8 <AmiBlitz3.ab3@28554>            Dc.l syntaxerr
0003D3DC <AmiBlitz3.ab3@28555>            Dc.l do_Ongo                                    ;doongo
0003D3E0 <AmiBlitz3.ab3@28556>            Dc.l syntaxerr
0003D3E4 <AmiBlitz3.ab3@28557>            Dc.l do_Forever                                 ;doforever
0003D3E8 <AmiBlitz3.ab3@28558>            Dc.l do_Restore                                 ;dorestore
0003D3EC <AmiBlitz3.ab3@28559>            Dc.l do_Exchange                                ;doexchange
0003D3F0 <AmiBlitz3.ab3@28560>            Dc.l do_USEPATH                                 ;dousepath
0003D3F4 <AmiBlitz3.ab3@28561>            Dc.l do_CloseEd                                 ;doclosed
0003D3F8 <AmiBlitz3.ab3@28562>            Dc.l do_NoCli                                   ;donocli
0003D3FC <AmiBlitz3.ab3@28563>            Dc.l syntaxerr                                  ;syntaxerr
0003D400 <AmiBlitz3.ab3@28564>            Dc.l syntaxerr                                  ;syntaxerr
0003D404 <AmiBlitz3.ab3@28565>            Dc.l syntaxerr                                  ;syntaxerr
0003D408 <AmiBlitz3.ab3@28566>            Dc.l syntaxerr                                  ;syntaxerr
0003D40C <AmiBlitz3.ab3@28567>            Dc.l syntaxerr                                  ;syntaxerr
0003D410 <AmiBlitz3.ab3@28568>            Dc.l do_runerrson                               ;dorunerrson
0003D414 <AmiBlitz3.ab3@28569>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003D418 <AmiBlitz3.ab3@28570>            Dc.l do_uselastpath
0003D41C <AmiBlitz3.ab3@28571>            Dc.l do_regload
0003D420 <AmiBlitz3.ab3@28572>            Dc.l do_regsave
0003D424 <AmiBlitz3.ab3@28573>            Dc.l do_Object
0003D428 <AmiBlitz3.ab3@28574>            Dc.l do_usepath2
0003D42C <AmiBlitz3.ab3@28575>            Dc.l do_LastRunErrsMode
0003D430 <AmiBlitz3.ab3@28598> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003D434 <AmiBlitz3.ab3@28599>            Dc.l menu_run
0003D438 <AmiBlitz3.ab3@28600>            Dc.l menu_createexecutable
0003D43C <AmiBlitz3.ab3@28601>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003D440 <AmiBlitz3.ab3@28602>            Dc.l menu_createresidentfile
0003D444 <AmiBlitz3.ab3@28603> 
0003D448 <AmiBlitz3.ab3@28604> 
0003D44C <AmiBlitz3.ab3@28605>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003D450 <AmiBlitz3.ab3@28606>            Dc.l menu_reloadlibs
0003D454 <AmiBlitz3.ab3@28607>            Dc.l menu_loaddebugmodule
0003D458 <AmiBlitz3.ab3@28608>            Dc.l menu_dummyfunc
0003D45C <AmiBlitz3.ab3@28609>            Dc.l menu_newcreate
0003D460 <AmiBlitz3.ab3@28610>            Dc.l menu_dummyfunc
0003D464 <AmiBlitz3.ab3@28611>            Dc.l menu_toggledebug
0003D468 <AmiBlitz3.ab3@28612>            Dc.l menu_dummyfunc
0003D46C <AmiBlitz3.ab3@28613>            Dc.l menu_dummyfunc
0003D496 <AmiBlitz3.ab3@28618>   !basic
0003D4F8 <AmiBlitz3.ab3@28619>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003D516 <AmiBlitz3.ab3@28620>   !asm
0003D518 <AmiBlitz3.ab3@28621> RTS
0003D519 <AmiBlitz3.ab3@28627> set_autorun:               Dc.b $00
0003D51E <AmiBlitz3.ab3@28628> autorun:                   Dc.b $80,$01,$01,$00,$01
0003D51F <AmiBlitz3.ab3@28630> set_interruptcheck:        Dc.b $00
0003D524 <AmiBlitz3.ab3@28631> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003D525 <AmiBlitz3.ab3@28633> set_assemblercheck:        Ds.b 1
0003D52A <AmiBlitz3.ab3@28634> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003D52B <AmiBlitz3.ab3@28636> set_overflowcheck:         Ds.b 1
0003D530 <AmiBlitz3.ab3@28637> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003D536 <AmiBlitz3.ab3@28639> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003D53C <AmiBlitz3.ab3@28640> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D542 <AmiBlitz3.ab3@28641> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D544 <AmiBlitz3.ab3@28642> Even4
0003D550 <AmiBlitz3.ab3@28645> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D558 <AmiBlitz3.ab3@28646>                            Dc.l $00000000,$00000000
0003D560 <AmiBlitz3.ab3@28647> tstsize1:                  Dc.l $00000100,$000003E9
0003D564 <AmiBlitz3.ab3@28648> tstsize2:                  Dc.l $00000100
0003D568 <AmiBlitz3.ab3@28649> tstend:                    Dc.l $000003EC
0003D570 <AmiBlitz3.ab3@28650> tstsize3:                  Ds.l 2
0003D574 <AmiBlitz3.ab3@28651> tstdone:                   Dc.l $000003F2
0003D578 <AmiBlitz3.ab3@28654> edstruct:                  Dc.l tokens                     ;data for ted
0003D57C <AmiBlitz3.ab3@28658>                            Dc.l 0
0003D580 <AmiBlitz3.ab3@28660>                            Dc.l read_xtrafile              ;load .xtra routine
0003D584 <AmiBlitz3.ab3@28661>                            Dc.l write_xtrafile             ;save .xtra routine
0003D588 <AmiBlitz3.ab3@28662>                            Dc.l call_menuentry             ;Menu Routine
0003D58C <AmiBlitz3.ab3@28663>                            Ds.l 1                          ;cleanup (?)
0003D590 <AmiBlitz3.ab3@28664>                            Dc.b ":",34,".;"
0003D68C <AmiBlitz3.ab3@28667> 
0003D76C <AmiBlitz3.ab3@28668>                            Ds.l 56
0003D76E <AmiBlitz3.ab3@28673> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D772 <AmiBlitz3.ab3@28676> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D774 <AmiBlitz3.ab3@28677>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D778 <AmiBlitz3.ab3@28678>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D77E <AmiBlitz3.ab3@28682> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D780 <AmiBlitz3.ab3@28686>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D784 <AmiBlitz3.ab3@28689> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D788 <AmiBlitz3.ab3@28692> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D78C <AmiBlitz3.ab3@28693>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D78E <AmiBlitz3.ab3@28699>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D790 <AmiBlitz3.ab3@28703>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D792 <AmiBlitz3.ab3@28706> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D794 <AmiBlitz3.ab3@28707>                            Dc.b $4E,$71                                             ;NOP
0003D796 <AmiBlitz3.ab3@28708>                            Dc.b $4E,$71                                             ;NOP
0003D798 <AmiBlitz3.ab3@28709>                            Dc.b $4E,$71                                             ;NOP
0003D79A <AmiBlitz3.ab3@28710> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D79C <AmiBlitz3.ab3@28712>                            Dc.b $4E,$71                                             ;NOP
0003D79E <AmiBlitz3.ab3@28713>                            Dc.b $4E,$71                                             ;NOP
0003D7A0 <AmiBlitz3.ab3@28714>                            Dc.b $4E,$71                                             ;NOP
0003D7A4 <AmiBlitz3.ab3@28718> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D7A8 <AmiBlitz3.ab3@28721> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D7AA <AmiBlitz3.ab3@28724> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D7AC <AmiBlitz3.ab3@28727> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7AE <AmiBlitz3.ab3@28728>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D7B2 <AmiBlitz3.ab3@28729>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D7B4 <AmiBlitz3.ab3@28730>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D7B6 <AmiBlitz3.ab3@28736> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7BA <AmiBlitz3.ab3@28737>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D7BC <AmiBlitz3.ab3@28742> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7C0 <AmiBlitz3.ab3@28743>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D7C2 <AmiBlitz3.ab3@28747> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D7C4 <AmiBlitz3.ab3@28748>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D7C8 <AmiBlitz3.ab3@28754> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D7CA <AmiBlitz3.ab3@28755>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D7CE <AmiBlitz3.ab3@28756>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D7D2 <AmiBlitz3.ab3@28760> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D7D4 <AmiBlitz3.ab3@28761>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D7D8 <AmiBlitz3.ab3@28762>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D7DA <AmiBlitz3.ab3@28765> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D7DE <AmiBlitz3.ab3@28768> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D7E2 <AmiBlitz3.ab3@28771> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D7E6 <AmiBlitz3.ab3@28774> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D7EA <AmiBlitz3.ab3@28778>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D7EC <AmiBlitz3.ab3@28779>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D7EE <AmiBlitz3.ab3@28780>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D7F2 <AmiBlitz3.ab3@28785>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D7F4 <AmiBlitz3.ab3@28786>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D7F6 <AmiBlitz3.ab3@28787>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D7FA <AmiBlitz3.ab3@28792>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D7FC <AmiBlitz3.ab3@28793>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D7FE <AmiBlitz3.ab3@28794>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D802 <AmiBlitz3.ab3@28799>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D804 <AmiBlitz3.ab3@28800>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D806 <AmiBlitz3.ab3@28801>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D80A <AmiBlitz3.ab3@28802>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D80C <AmiBlitz3.ab3@28803>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D810 <AmiBlitz3.ab3@28808>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D812 <AmiBlitz3.ab3@28809>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D816 <AmiBlitz3.ab3@28810>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D818 <AmiBlitz3.ab3@28811>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D81C <AmiBlitz3.ab3@28812>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D81E <AmiBlitz3.ab3@28813>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D820 <AmiBlitz3.ab3@28816>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D824 <AmiBlitz3.ab3@28821>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D826 <AmiBlitz3.ab3@28822>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D82A <AmiBlitz3.ab3@28823>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D82C <AmiBlitz3.ab3@28824>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D830 <AmiBlitz3.ab3@28825>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D832 <AmiBlitz3.ab3@28826>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D834 <AmiBlitz3.ab3@28829>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D838 <AmiBlitz3.ab3@28834>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D83A <AmiBlitz3.ab3@28835>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D83E <AmiBlitz3.ab3@28836>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D840 <AmiBlitz3.ab3@28837>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D844 <AmiBlitz3.ab3@28838>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D846 <AmiBlitz3.ab3@28839>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D848 <AmiBlitz3.ab3@28842>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D84C <AmiBlitz3.ab3@28847>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D84E <AmiBlitz3.ab3@28848>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D852 <AmiBlitz3.ab3@28849>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D858 <AmiBlitz3.ab3@28850>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D85C <AmiBlitz3.ab3@28851>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D85E <AmiBlitz3.ab3@28852>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D862 <AmiBlitz3.ab3@28859>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D864 <AmiBlitz3.ab3@28863> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D866 <AmiBlitz3.ab3@28866> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D86A <AmiBlitz3.ab3@28869> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D86C <AmiBlitz3.ab3@28870> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D870 <AmiBlitz3.ab3@28873> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D872 <AmiBlitz3.ab3@28876> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D876 <AmiBlitz3.ab3@28879> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D878 <AmiBlitz3.ab3@28883>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D87A <AmiBlitz3.ab3@28886> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D87C <AmiBlitz3.ab3@28889> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D880 <AmiBlitz3.ab3@28892> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D884 <AmiBlitz3.ab3@28895> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D888 <AmiBlitz3.ab3@28898> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D88A <AmiBlitz3.ab3@28901> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D88C <AmiBlitz3.ab3@28904> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D890 <AmiBlitz3.ab3@28907> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D896 <AmiBlitz3.ab3@28908>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D898 <AmiBlitz3.ab3@28909>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D89C <AmiBlitz3.ab3@28913> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D89E <AmiBlitz3.ab3@28914>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D8A0 <AmiBlitz3.ab3@28918> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D8A4 <AmiBlitz3.ab3@28921> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D8A6 <AmiBlitz3.ab3@28925>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D8A8 <AmiBlitz3.ab3@28929>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D8AA <AmiBlitz3.ab3@28933>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D8AE <AmiBlitz3.ab3@28936> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D8B2 <AmiBlitz3.ab3@28939> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D8B4 <AmiBlitz3.ab3@28942> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D8B6 <AmiBlitz3.ab3@28945> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D8B8 <AmiBlitz3.ab3@28948> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D8BC <AmiBlitz3.ab3@28951> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D8C0 <AmiBlitz3.ab3@28954> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D8C2 <AmiBlitz3.ab3@28957> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D8C4 <AmiBlitz3.ab3@28961>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D8C8 <AmiBlitz3.ab3@28964>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D8CA <AmiBlitz3.ab3@28970>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D8CE <AmiBlitz3.ab3@28973>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D8D0 <AmiBlitz3.ab3@28979>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D8D4 <AmiBlitz3.ab3@28983> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D8D6 <AmiBlitz3.ab3@28986> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D8D8 <AmiBlitz3.ab3@28990>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D8DA <AmiBlitz3.ab3@28994>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D8E0 <AmiBlitz3.ab3@28997> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D8E6 <AmiBlitz3.ab3@29000> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D8EE <AmiBlitz3.ab3@29004> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003D8F2 <AmiBlitz3.ab3@29005>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003D8F4 <AmiBlitz3.ab3@29009> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003D8F8 <AmiBlitz3.ab3@29012> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003D8FC <AmiBlitz3.ab3@29015> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003D900 <AmiBlitz3.ab3@29018> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D904 <AmiBlitz3.ab3@29019> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003D908 <AmiBlitz3.ab3@29023>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003D90C <AmiBlitz3.ab3@29025>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003D90E <AmiBlitz3.ab3@29028> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D912 <AmiBlitz3.ab3@29031> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D914 <AmiBlitz3.ab3@29034> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003D916 <AmiBlitz3.ab3@29035>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D918 <AmiBlitz3.ab3@29036>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003D91C <AmiBlitz3.ab3@29037> 
0003D91E <AmiBlitz3.ab3@29038>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003D920 <AmiBlitz3.ab3@29039>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003D922 <AmiBlitz3.ab3@29040>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003D928 <AmiBlitz3.ab3@29042>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D92A <AmiBlitz3.ab3@29047> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D92C <AmiBlitz3.ab3@29048>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003D92E <AmiBlitz3.ab3@29052> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003D932 <AmiBlitz3.ab3@29055> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D934 <AmiBlitz3.ab3@29058> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D936 <AmiBlitz3.ab3@29062>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003D938 <AmiBlitz3.ab3@29065> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D93C <AmiBlitz3.ab3@29068> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D93E <AmiBlitz3.ab3@29069>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D942 <AmiBlitz3.ab3@29073> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003D946 <AmiBlitz3.ab3@29074> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D94A <AmiBlitz3.ab3@29078> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003D94E <AmiBlitz3.ab3@29082> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D954 <AmiBlitz3.ab3@29086> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003D95A <AmiBlitz3.ab3@29089> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003D95E <AmiBlitz3.ab3@29093> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003D962 <AmiBlitz3.ab3@29097>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D966 <AmiBlitz3.ab3@29098>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D96C <AmiBlitz3.ab3@29103>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003D970 <AmiBlitz3.ab3@29108>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D972 <AmiBlitz3.ab3@29113>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D976 <AmiBlitz3.ab3@29117>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003D978 <AmiBlitz3.ab3@29121> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003D97A <AmiBlitz3.ab3@29124> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D97C <AmiBlitz3.ab3@29125>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003D980 <AmiBlitz3.ab3@29129>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003D984 <AmiBlitz3.ab3@29133> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D988 <AmiBlitz3.ab3@29136> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003D98A <AmiBlitz3.ab3@29139> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003D98E <AmiBlitz3.ab3@29142> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003D990 <AmiBlitz3.ab3@29145> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003D999 <AmiBlitz3.ab3@29149>                            Dc.b "ram:test",0
0003D99A <AmiBlitz3.ab3@29150> Even
0003D99E <AmiBlitz3.ab3@29154>                            Dc.l  0                          ;was  Ds.w 3 org source
0003D9A0 <AmiBlitz3.ab3@29156>                            Dc.w  0
0003D9A4 <AmiBlitz3.ab3@29159> _mathffpbase:              Ds.l 1                           ;maths org source
0003D9A6 <AmiBlitz3.ab3@29160> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003D9A8 <AmiBlitz3.ab3@29161> typelen:                   Ds.w 1
0003D9AC <AmiBlitz3.ab3@29162> prevtype:                  Ds.l 1
0003D9B0 <AmiBlitz3.ab3@29163> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003D9B2 <AmiBlitz3.ab3@29164> lastchar:                  Ds.w 1
0003D9B6 <AmiBlitz3.ab3@29165> thistype:                  Ds.l 1
0003D9BA <AmiBlitz3.ab3@29166> errstack:                  Ds.l 1
0003D9BE <AmiBlitz3.ab3@29167> errcont:                   Ds.l 1
0003D9C0 <AmiBlitz3.ab3@29168> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003D9C2 <AmiBlitz3.ab3@29169> linesleft:                 Ds.w 1
0003D9C6 <AmiBlitz3.ab3@29170> sourceline:                Ds.l 1                          ;thisitem org source
0003D9CA <AmiBlitz3.ab3@29171> varbase:                   Ds.l 1                          ;firstvar org source
0003D9CE <AmiBlitz3.ab3@29172> alllocals:                 Ds.l 1
0003D9D2 <AmiBlitz3.ab3@29173> firstlocal:                Ds.l 1
0003D9D6 <AmiBlitz3.ab3@29174> firstglob:                 Ds.l 1
0003D9D8 <AmiBlitz3.ab3@29175> globalvarpointer:          Ds.w 1                          ;varoff org source
0003D9DA <AmiBlitz3.ab3@29176> locvaroff:                 Ds.w 1
0003D9DE <AmiBlitz3.ab3@29177> firstitem_:                 Ds.l 1
0003D9E0 <AmiBlitz3.ab3@29178> numlines_org:              Ds.w 1                          ;numlines org source
0003D9E2 <AmiBlitz3.ab3@29179> returncode_org:            Ds.w 1                          ;returncode org source
0003D9E6 <AmiBlitz3.ab3@29180> firstiff:                  Ds.l 1                          ;firstif org source
0003D9EA <AmiBlitz3.ab3@29181> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003DBEA <AmiBlitz3.ab3@29182> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003DBFA <AmiBlitz3.ab3@29183> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003DDFA <AmiBlitz3.ab3@29184> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003DFFA <AmiBlitz3.ab3@29185> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E1FA <AmiBlitz3.ab3@29186> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E1FE <AmiBlitz3.ab3@29188> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003E3FE <AmiBlitz3.ab3@29189> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E5FE <AmiBlitz3.ab3@29191> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E602 <AmiBlitz3.ab3@29192> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E802 <AmiBlitz3.ab3@29193> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E806 <AmiBlitz3.ab3@29194> size_deflibs:              Ds.l 1                          ;deflibs org source
0003EA06 <AmiBlitz3.ab3@29195> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003EC06 <AmiBlitz3.ab3@29197> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003EC0A <AmiBlitz3.ab3@29198> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003EE0A <AmiBlitz3.ab3@29200> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003EE0E <AmiBlitz3.ab3@29206>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003EE12 <AmiBlitz3.ab3@29207>   Dc.b $00,$00,$00,$00
0003EE16 <AmiBlitz3.ab3@29208>   Dc.b $00,$19,$00,$11
0003EE1A <AmiBlitz3.ab3@29209>   Dc.b $00,$2E,$00,$18
0003EE1E <AmiBlitz3.ab3@29210>   Dc.b $00,$04,$00,$03
0003EE22 <AmiBlitz3.ab3@29211>   Dc.b $00,$01,$00,$22
0003EE26 <AmiBlitz3.ab3@29212>   Dc.b $73,$68,$00,$00
0003EE2A <AmiBlitz3.ab3@29213>   Dc.b $00,$00,$00,$00
0003EE2E <AmiBlitz3.ab3@29214>   Dc.b $00,$00,$00,$00
0003EE32 <AmiBlitz3.ab3@29215>   Dc.b $00,$00,$00,$00
0003EE36 <AmiBlitz3.ab3@29216>   Dc.b $00,$00,$00,$00
0003EE3A <AmiBlitz3.ab3@29217>   Dc.b $00,$00,$00,$00
0003EE3E <AmiBlitz3.ab3@29218>   Dc.b $03,$22,$00,$21
0003EE42 <AmiBlitz3.ab3@29219>   Dc.b $3C,$28,$00,$22
0003EE46 <AmiBlitz3.ab3@29220>   Dc.b $6E,$C0,$00,$00
0003EE4A <AmiBlitz3.ab3@29221>   Dc.b $00,$12,$00,$00
0003EE4E <AmiBlitz3.ab3@29222>   Dc.b $00,$0E,$00,$00
0003EE52 <AmiBlitz3.ab3@29223>   Dc.b $00,$00,$00,$00
0003EE56 <AmiBlitz3.ab3@29224>   Dc.b $00,$00,$00,$00
0003EE5A <AmiBlitz3.ab3@29225>   Dc.b $00,$00,$00,$00
0003EE5E <AmiBlitz3.ab3@29226>   Dc.b $00,$00,$00,$2E
0003EE62 <AmiBlitz3.ab3@29227>   Dc.b $00,$17,$00,$02
0003EE66 <AmiBlitz3.ab3@29228>   Dc.b $00,$01,$8E,$80
0003EE6A <AmiBlitz3.ab3@29229>   Dc.b $03,$00,$00,$00
0003EE6E <AmiBlitz3.ab3@29230>   Dc.b $00,$00,$FF,$FF
0003EE72 <AmiBlitz3.ab3@29231>   Dc.b $FF,$FF,$FF,$FC
0003EE76 <AmiBlitz3.ab3@29232>   Dc.b $80,$00,$00,$00
0003EE7A <AmiBlitz3.ab3@29233>   Dc.b $00,$00,$80,$00
0003EE7E <AmiBlitz3.ab3@29234>   Dc.b $00,$3F,$BB,$40
0003EE82 <AmiBlitz3.ab3@29235>   Dc.b $80,$1F,$C0,$00
0003EE86 <AmiBlitz3.ab3@29236>   Dc.b $00,$00,$80,$3F
0003EE8A <AmiBlitz3.ab3@29237>   Dc.b $C0,$0F,$BB,$40
0003EE8E <AmiBlitz3.ab3@29238>   Dc.b $80,$1F,$C0,$00
0003EE92 <AmiBlitz3.ab3@29239>   Dc.b $00,$00,$8E,$00
0003EE96 <AmiBlitz3.ab3@29240>   Dc.b $F8,$00,$00,$00
0003EE9A <AmiBlitz3.ab3@29241>   Dc.b $8F,$01,$FF,$00
0003EE9E <AmiBlitz3.ab3@29242>   Dc.b $3B,$40,$81,$E3
0003EEA2 <AmiBlitz3.ab3@29243>   Dc.b $F7,$C0,$00,$00
0003EEA6 <AmiBlitz3.ab3@29244>   Dc.b $80,$7F,$F8,$70
0003EEAA <AmiBlitz3.ab3@29245>   Dc.b $3B,$40,$80,$0F
0003EEAE <AmiBlitz3.ab3@29246>   Dc.b $7C,$E0,$00,$00
0003EEB2 <AmiBlitz3.ab3@29247>   Dc.b $80,$00,$FD,$80
0003EEB6 <AmiBlitz3.ab3@29248>   Dc.b $00,$00,$80,$01
0003EEBA <AmiBlitz3.ab3@29249>   Dc.b $F6,$00,$FB,$40
0003EEBE <AmiBlitz3.ab3@29250>   Dc.b $80,$03,$EF,$00
0003EEC2 <AmiBlitz3.ab3@29251>   Dc.b $00,$00,$80,$07
0003EEC6 <AmiBlitz3.ab3@29252>   Dc.b $87,$80,$3B,$40
0003EECA <AmiBlitz3.ab3@29253>   Dc.b $80,$0F,$01,$C0
0003EECE <AmiBlitz3.ab3@29254>   Dc.b $00,$00,$80,$03
0003EED2 <AmiBlitz3.ab3@29255>   Dc.b $F0,$70,$1D,$40
0003EED6 <AmiBlitz3.ab3@29256>   Dc.b $80,$00,$18,$1C
0003EEDA <AmiBlitz3.ab3@29257>   Dc.b $00,$00,$80,$00
0003EEDE <AmiBlitz3.ab3@29258>   Dc.b $10,$06,$03,$40
0003EEE2 <AmiBlitz3.ab3@29259>   Dc.b $80,$00,$20,$1F
0003EEE6 <AmiBlitz3.ab3@29260>   Dc.b $00,$00,$80,$00
0003EEEA <AmiBlitz3.ab3@29261>   Dc.b $00,$00,$01,$40
0003EEEE <AmiBlitz3.ab3@29262>   Dc.b $80,$00,$00,$00
0003EEF2 <AmiBlitz3.ab3@29263>   Dc.b $00,$00,$80,$00
0003EEF6 <AmiBlitz3.ab3@29264>   Dc.b $00,$00,$00,$00
0003EEFA <AmiBlitz3.ab3@29265>   Dc.b $00,$00,$00,$00
0003EEFE <AmiBlitz3.ab3@29266>   Dc.b $00,$00,$00,$00
0003EF02 <AmiBlitz3.ab3@29267>   Dc.b $00,$00,$00,$04
0003EF06 <AmiBlitz3.ab3@29268>   Dc.b $00,$3F,$FC,$01
0003EF0A <AmiBlitz3.ab3@29269>   Dc.b $BB,$44,$00,$60
0003EF0E <AmiBlitz3.ab3@29270>   Dc.b $FE,$00,$00,$04
0003EF12 <AmiBlitz3.ab3@29271>   Dc.b $00,$CF,$FF,$01
0003EF16 <AmiBlitz3.ab3@29272>   Dc.b $BB,$44,$1F,$EF
0003EF1A <AmiBlitz3.ab3@29273>   Dc.b $FF,$00,$00,$04
0003EF1E <AmiBlitz3.ab3@29274>   Dc.b $33,$FF,$FF,$E0
0003EF22 <AmiBlitz3.ab3@29275>   Dc.b $00,$04,$37,$FE
0003EF26 <AmiBlitz3.ab3@29276>   Dc.b $7F,$FC,$1B,$44
0003EF2A <AmiBlitz3.ab3@29277>   Dc.b $0F,$9C,$FF,$FF
0003EF2E <AmiBlitz3.ab3@29278>   Dc.b $00,$04,$03,$E3
0003EF32 <AmiBlitz3.ab3@29279>   Dc.b $FF,$FF,$DB,$44
0003EF36 <AmiBlitz3.ab3@29280>   Dc.b $00,$7F,$BF,$FF
0003EF3A <AmiBlitz3.ab3@29281>   Dc.b $80,$04,$00,$0F
0003EF3E <AmiBlitz3.ab3@29282>   Dc.b $3F,$FE,$00,$04
0003EF42 <AmiBlitz3.ab3@29283>   Dc.b $00,$06,$7F,$F8
0003EF46 <AmiBlitz3.ab3@29284>   Dc.b $1B,$44,$00,$0C
0003EF4A <AmiBlitz3.ab3@29285>   Dc.b $F7,$FC,$00,$04
0003EF4E <AmiBlitz3.ab3@29286>   Dc.b $00,$19,$F9,$FE
0003EF52 <AmiBlitz3.ab3@29287>   Dc.b $1B,$44,$00,$33
0003EF56 <AmiBlitz3.ab3@29288>   Dc.b $FE,$7F,$00,$04
0003EF5A <AmiBlitz3.ab3@29289>   Dc.b $00,$0F,$FF,$BF
0003EF5E <AmiBlitz3.ab3@29290>   Dc.b $CD,$44,$00,$03
0003EF62 <AmiBlitz3.ab3@29291>   Dc.b $EF,$EF,$F0,$04
0003EF66 <AmiBlitz3.ab3@29292>   Dc.b $00,$00,$7F,$DF
0003EF6A <AmiBlitz3.ab3@29293>   Dc.b $FB,$44,$00,$00
0003EF6E <AmiBlitz3.ab3@29294>   Dc.b $FF,$A7,$FC,$04
0003EF72 <AmiBlitz3.ab3@29295>   Dc.b $00,$00,$7E,$3F
0003EF76 <AmiBlitz3.ab3@29296>   Dc.b $FD,$44,$00,$00
0003EF7A <AmiBlitz3.ab3@29297>   Dc.b $00,$00,$00,$04
0003EF7E <AmiBlitz3.ab3@29298>   Dc.b $7F,$FF,$FF,$FF
0003EF82 <AmiBlitz3.ab3@29299>   Dc.b $FF,$FC,$00,$00
0003EF86 <AmiBlitz3.ab3@29300>   Dc.b $00,$01,$00,$00
0003EF89 <AmiBlitz3.ab3@29301>   Dc.b $00,$00,$04
0003EF8F <AmiBlitz3.ab3@29304> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003EFE7 <AmiBlitz3.ab3@29305> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003EFE8 <AmiBlitz3.ab3@29306> Even
0003EFEC <AmiBlitz3.ab3@29308> sysdebug:            Dc.l $3F0
0003EFF0 <AmiBlitz3.ab3@29312> exelock              Ds.l 1
0003EFF4 <AmiBlitz3.ab3@29316> includesourceline    Dc.l 0
0003EFF8 <AmiBlitz3.ab3@29317> linenum              Ds.l 1
0003EFFC <AmiBlitz3.ab3@29318> globallinecount      Ds.l 1
0003F01A <AmiBlitz3.ab3@29319> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003F01E <AmiBlitz3.ab3@29320> calc_option          Dc.l 1
0003F022 <AmiBlitz3.ab3@29321> versioninformation   Dc.l $00
0003F026 <AmiBlitz3.ab3@29322> number_of_builds     Dc.l $00
0003F028 <AmiBlitz3.ab3@29323> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003F02A <AmiBlitz3.ab3@29324> rightsideflagmask    Ds.w 1
0003F02C <AmiBlitz3.ab3@29326> BSS
0003F02E <AmiBlitz3.ab3@29327> debugnest            Ds.w 1
0003F032 <AmiBlitz3.ab3@29328> instringf            Ds.l 1
0003F036 <AmiBlitz3.ab3@29329> funcscanon           Ds.l 1
0003F04A <AmiBlitz3.ab3@29330> storedebugmode       Ds.b 20
0003F04E <AmiBlitz3.ab3@29331> firsttimepref        Ds.l 1
0003F04F <AmiBlitz3.ab3@29332> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003F050 <AmiBlitz3.ab3@29333> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003F052 <AmiBlitz3.ab3@29334> nostringopt          Ds.w 1
0003F0D2 <AmiBlitz3.ab3@29335> path2:               Ds.l 32
0003F0D6 <AmiBlitz3.ab3@29336> typebase             Dc.l 0
0003F0D8 <AmiBlitz3.ab3@29337> doublepeek           Dc.w 0
0003F0DC <AmiBlitz3.ab3@29338> lastoffset           Dc.l 0
0003F0DE <AmiBlitz3.ab3@29339> firsttime            Dc.w 0
0003F0E2 <AmiBlitz3.ab3@29340> lastdestpointer      Dc.l 0
0003F0E6 <AmiBlitz3.ab3@29341> prevwritedat         Dc.l 0
0003F0EA <AmiBlitz3.ab3@29342> lastsourceline       Dc.l 0
0003F0EE <AmiBlitz3.ab3@29343> lastwritedat         Dc.l 0
0003F0F0 <AmiBlitz3.ab3@29344> makeexec             Dc.w 0
0003F0F2 <AmiBlitz3.ab3@29345> makeexec_remember    Dc.w 0
0003F0F6 <AmiBlitz3.ab3@29346> sharebase            Ds.l 1
0003F0FA <AmiBlitz3.ab3@29347> tempa7               Ds.l 1
0003F0FC <AmiBlitz3.ab3@29348> incnif               Ds.w 1
0003F100 <AmiBlitz3.ab3@29349> tempstore            Ds.l 1
0003F104 <AmiBlitz3.ab3@29350> result               Ds.l 1
0003F106 <AmiBlitz3.ab3@29351> automode             Ds.w 1
0003F108 <AmiBlitz3.ab3@29352> stackcorrect         Ds.w 1
0003F10A <AmiBlitz3.ab3@29353> formode              Ds.w 1
0003F10E <AmiBlitz3.ab3@29354> limitregs            Ds.l 1
0003F110 <AmiBlitz3.ab3@29355> onestep              Ds.w 1
0003F114 <AmiBlitz3.ab3@29356> reqmode              Ds.l 1
0003F1B4 <AmiBlitz3.ab3@29357> inctab               Ds.l 40
0003F1B6 <AmiBlitz3.ab3@29358> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003F1BA <AmiBlitz3.ab3@29359> includeline          Ds.l 1
0003F1BE <AmiBlitz3.ab3@29360> morememadd           Ds.l 1
0003F1C0 <AmiBlitz3.ab3@29361> objectcount          Ds.w 1
0003F1C4 <AmiBlitz3.ab3@29362> savefuncspace        Ds.l 1
0003F1C8 <AmiBlitz3.ab3@29363> lasttrap1            Ds.l 1
0003F1CC <AmiBlitz3.ab3@29364> currentfunccall      Ds.l 1
0003F1CD <AmiBlitz3.ab3@29365> skipfunc             Ds.b 1
0003F1CE <AmiBlitz3.ab3@29366> resdisable           Ds.b 1
0003F1CF <AmiBlitz3.ab3@29367> skiptoggle           Ds.b 1
0003F1D0 <AmiBlitz3.ab3@29368> developobject        Ds.b 1
0003F1D2 <AmiBlitz3.ab3@29369> iniffcommand         Ds.w 1
0003F1D4 <AmiBlitz3.ab3@29370> startoffsetmore      Ds.w 1
0003F1D6 <AmiBlitz3.ab3@29371> olddebugmode         Ds.w 1
0003F1DA <AmiBlitz3.ab3@29372> fpucodeglobal        Ds.l 1
0003F1DE <AmiBlitz3.ab3@29373> fpucodelocal         Ds.l 1
0003F1E2 <AmiBlitz3.ab3@29374> maxregs              Ds.l 1
0003F1E6 <AmiBlitz3.ab3@29375> fpucode              Ds.l 1
0003F1E8 <AmiBlitz3.ab3@29376> firstmline           Ds.w 1
0003F228 <AmiBlitz3.ab3@29377> regtable             Ds.l 16
0003F22A <AmiBlitz3.ab3@29378> exdebug              Ds.w 1
0003F22C <AmiBlitz3.ab3@29379> a2offset2            Ds.w 1
0003F230 <AmiBlitz3.ab3@29380> parnumtemp           Ds.l 1
0003F231 <AmiBlitz3.ab3@29381> doimmediate          Ds.b 1
0003F232 <AmiBlitz3.ab3@29382> notypecheck          Ds.b 1
0003F234 <AmiBlitz3.ab3@29383> vartype              Ds.w 1
0003F235 <AmiBlitz3.ab3@29384> peekaddrsize         Ds.b 1
0003F236 <AmiBlitz3.ab3@29385> declare2             Ds.b 1
0003F238 <AmiBlitz3.ab3@29386> parameternum         Ds.w 1
0003F23C <AmiBlitz3.ab3@29387> lasttoken            Ds.l 1
0003F23E <AmiBlitz3.ab3@29388> newvariable          Ds.w 1
0003F23F <AmiBlitz3.ab3@29389> declare              Ds.b 1
0003F240 <AmiBlitz3.ab3@29390> typecheck            Ds.b 1
0003F241 <AmiBlitz3.ab3@29391> nowdeclare           Ds.b 1
0003F242 <AmiBlitz3.ab3@29392> dimkeep              Ds.b 1
0003F243 <AmiBlitz3.ab3@29393> a4a5store            Ds.b 1
0003F244 <AmiBlitz3.ab3@29394> ___freetouse         Ds.b 1
0003F248 <AmiBlitz3.ab3@29395> firstiffstore        Ds.l 1
0003F24C <AmiBlitz3.ab3@29396> destpointer2         Ds.l 1
0003F250 <AmiBlitz3.ab3@29397> stackaddr            Ds.l 1
0003F354 <AmiBlitz3.ab3@29398> allowtab             Ds.b 260
0003F454 <AmiBlitz3.ab3@29399> templine             Ds.b 256
0003F456 <AmiBlitz3.ab3@29400> thenmode             Ds.w 1
0003F458 <AmiBlitz3.ab3@29401> temp                 Ds.w 1
0003F45A <AmiBlitz3.ab3@29402> tempregnum           Ds.w 1
0003F45E <AmiBlitz3.ab3@29404> numlines2            Ds.l 1
0003F462 <AmiBlitz3.ab3@29405> numlines             Ds.l 1
0003F464 <AmiBlitz3.ab3@29406> exmac                Ds.w 1
0003F466 <AmiBlitz3.ab3@29407> returncode           Ds.w 1
0003F46A <AmiBlitz3.ab3@29408> fp0iff               Ds.l 1
0003F46E <AmiBlitz3.ab3@29409> fp0addr              Ds.l 1
0003F470 <AmiBlitz3.ab3@29410> fp0mode              Ds.w 1
0003F472 <AmiBlitz3.ab3@29411> fp0var               Ds.w 1
0003F474 <AmiBlitz3.ab3@29412> fastfunc             Ds.w 1
0003F476 <AmiBlitz3.ab3@29413> retmode              Ds.w 1
0003F478 <AmiBlitz3.ab3@29414> parnum               Ds.w 1
0003F47A <AmiBlitz3.ab3@29415> regmask              Ds.w 1
0003F47C <AmiBlitz3.ab3@29416> regnumfunc           Ds.w 1
0003F47E <AmiBlitz3.ab3@29417> libmode              Ds.w 1
0003F482 <AmiBlitz3.ab3@29418> oldline              Ds.l 1
0003F486 <AmiBlitz3.ab3@29419> sourceline3          Ds.l 1
0003F54E <AmiBlitz3.ab3@29420> debugstore           Ds.b 200
0003F552 <AmiBlitz3.ab3@29421> deststore            Ds.l 1
0003F556 <AmiBlitz3.ab3@29423> loada                Ds.l 1
0003F55A <AmiBlitz3.ab3@29425> currtype             Ds.l 1
0003F55E <AmiBlitz3.ab3@29426> arrayoffset          Ds.l 1
0003F562 <AmiBlitz3.ab3@29427> lastlabel            Ds.l 1
0003F566 <AmiBlitz3.ab3@29428> curtemplabel         Ds.l 1
0003F56A <AmiBlitz3.ab3@29429> sourceline2          Ds.l 1
0003F66A <AmiBlitz3.ab3@29430> chartab              Ds.b 256
0003F6E2 <AmiBlitz3.ab3@29431> tempspace            Ds.b 120
000BF6F2 <AmiBlitz3.ab3@29432> instrtab             Ds.l 65538*2
000C76F2 <AmiBlitz3.ab3@29434> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E76F6 <AmiBlitz3.ab3@29435> replacedat           Ds.w 65538
000EF6F6 <AmiBlitz3.ab3@29436> variablehash         Ds.l 8192
000EF6FA <AmiBlitz3.ab3@29437> newinitaddr          Ds.l 1
000EF6FE <AmiBlitz3.ab3@29438> realbssend           Ds.l 1
000EF700 <AmiBlitz3.ab3@29439> saved0               Ds.w 1
000EF780 <AmiBlitz3.ab3@29440> lastpath             Ds.b 128
000EF800 <AmiBlitz3.ab3@29441> lastpath2            Ds.b 128
000EF8C8 <AmiBlitz3.ab3@29442> fpustackbase         Ds.w 100
000EF8CC <AmiBlitz3.ab3@29443> 
000EF8CE <AmiBlitz3.ab3@29444> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF8D2 <AmiBlitz3.ab3@29445> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF8D6 <AmiBlitz3.ab3@29446> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF8DA <AmiBlitz3.ab3@29447> rightsidetype        Dc.l 0  ; same as above but right side
000EF8DE <AmiBlitz3.ab3@29450> trap15temp           Ds.l 1
000EF8E2 <AmiBlitz3.ab3@29451> trap15temp2          Ds.l 1
000EF8E6 <AmiBlitz3.ab3@29452> templibend           Ds.l 1
000EF8EA <AmiBlitz3.ab3@29453> tempdata1start       Ds.l 1
000EF8EE <AmiBlitz3.ab3@29454> stacktrack           Ds.l 1
000EF8F2 <AmiBlitz3.ab3@29455> pad                  Ds.l 1
000EF9F2 <AmiBlitz3.ab3@29456> includetemp          Ds.b 256
000F03F2 <AmiBlitz3.ab3@29457> includetemp2         Ds.b 256*10
000F03F4 <AmiBlitz3.ab3@29458> funccall             Ds.w 1
000F03F8 <AmiBlitz3.ab3@29461> ptr_resfile          Ds.l 1
000F03FA <AmiBlitz3.ab3@29462> CalculatorButtonBinFlag:    Ds.w 1
000F03FC <AmiBlitz3.ab3@29463> CalculatorButtonDecFlag:    Ds.w 1
000F0400 <AmiBlitz3.ab3@29464> ped_startup_addr:    Ds.l 1
000F0401 <AmiBlitz3.ab3@29465> start_without_libs:  Ds.b 1
000F0402 <AmiBlitz3.ab3@29466> skip_bytes:          Ds.b 1
000F0406 <AmiBlitz3.ab3@29467> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F040A <AmiBlitz3.ab3@29468> beforeparameterfetch Ds.l 1
000F040E <AmiBlitz3.ab3@29469> typetocast           Ds.l 1
000F0412 <AmiBlitz3.ab3@29470> errorcounter         Ds.l 1
000F0413 <AmiBlitz3.ab3@29471> iserror              Ds.b 1
000F0414 <AmiBlitz3.ab3@29472> Even
000F0418 <AmiBlitz3.ab3@29474> CLIMode:             Dc.l 0
000F041C <AmiBlitz3.ab3@29475> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F0420 <AmiBlitz3.ab3@29476> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
