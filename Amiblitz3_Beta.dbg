00000008 <AmiBlitz3.ab3@0> 
00000014 <AmiBlitz3.ab3@43> optimize 5                               ; don't use FPU (opt. 4)
00000076 <AmiBlitz3.ab3@64> !initasm                                 ; some initial mumbo jumbo
000000A0 <AmiBlitz3.ab3@65> !basic
000000AC <AmiBlitz3.ab3@70> cli_verbose = -1
000000B2 <AmiBlitz3.ab3@71> CLIMode     = False
000000C8 <AmiBlitz3.ab3@72> MaxLen cli_tempstr.s = 1024
000000E4 <AmiBlitz3.ab3@73> GetCurrentDirName_ &cli_tempstr,1024  ; get the current dir to restore it on exit
0000010E <AmiBlitz3.ab3@74> cli_path.s = Peek.s(&cli_tempstr)
0000010E <library_offsets.ab3@1> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <AmiBlitz3.ab3@78> XINCLUDE "/Shared/library_offsets.ab3"   ; needed includes
0000010E <dos.include.ab3@1> XINCLUDE "dos.include.ab3"
0000010E <error.include.ab3@1> XINCLUDE "dos.include.ab3"
00000146 <error.include.ab3@62> XINCLUDE "dos.include.ab3"
0000016E <error.include.ab3@63> XINCLUDE "dos.include.ab3"
00000196 <error.include.ab3@64> XINCLUDE "dos.include.ab3"
000001BE <error.include.ab3@65> XINCLUDE "dos.include.ab3"
000001C4 <error.include.ab3@66> XINCLUDE "dos.include.ab3"
000001F8 <error.include.ab3@67> XINCLUDE "dos.include.ab3"
0000022C <error.include.ab3@68> XINCLUDE "dos.include.ab3"
00000260 <error.include.ab3@69> XINCLUDE "dos.include.ab3"
0000027C <error.include.ab3@73> XINCLUDE "dos.include.ab3"
00000296 <error.include.ab3@99> XINCLUDE "dos.include.ab3"
000002A2 <error.include.ab3@101> XINCLUDE "dos.include.ab3"
000002A6 <error.include.ab3@102> XINCLUDE "dos.include.ab3"
000002B4 <error.include.ab3@104> XINCLUDE "dos.include.ab3"
000002F6 <error.include.ab3@124> XINCLUDE "dos.include.ab3"
0000037A <error.include.ab3@126> XINCLUDE "dos.include.ab3"
000003E6 <error.include.ab3@127> XINCLUDE "dos.include.ab3"
00000400 <error.include.ab3@129> XINCLUDE "dos.include.ab3"
00000438 <error.include.ab3@130> XINCLUDE "dos.include.ab3"
00000498 <error.include.ab3@131> XINCLUDE "dos.include.ab3"
000004A6 <error.include.ab3@133> XINCLUDE "dos.include.ab3"
000004B4 <error.include.ab3@134> XINCLUDE "dos.include.ab3"
000004C2 <error.include.ab3@135> XINCLUDE "dos.include.ab3"
000004D0 <error.include.ab3@136> XINCLUDE "dos.include.ab3"
000004F8 <error.include.ab3@137> XINCLUDE "dos.include.ab3"
00000506 <error.include.ab3@138> XINCLUDE "dos.include.ab3"
0000050E <error.include.ab3@139> XINCLUDE "dos.include.ab3"
00000540 <error.include.ab3@141> XINCLUDE "dos.include.ab3"
0000055A <error.include.ab3@146> XINCLUDE "dos.include.ab3"
00000592 <error.include.ab3@147> XINCLUDE "dos.include.ab3"
00000598 <error.include.ab3@148> XINCLUDE "dos.include.ab3"
000005DC <error.include.ab3@149> XINCLUDE "dos.include.ab3"
00000624 <error.include.ab3@150> XINCLUDE "dos.include.ab3"
0000062E <error.include.ab3@154> XINCLUDE "dos.include.ab3"
00000648 <error.include.ab3@156> XINCLUDE "dos.include.ab3"
00000692 <error.include.ab3@195> XINCLUDE "dos.include.ab3"
0000069A <error.include.ab3@197> XINCLUDE "dos.include.ab3"
00000706 <error.include.ab3@198> XINCLUDE "dos.include.ab3"
00000728 <error.include.ab3@199> XINCLUDE "dos.include.ab3"
00000788 <error.include.ab3@200> XINCLUDE "dos.include.ab3"
00000796 <error.include.ab3@202> XINCLUDE "dos.include.ab3"
000007A4 <error.include.ab3@203> XINCLUDE "dos.include.ab3"
000007B2 <error.include.ab3@204> XINCLUDE "dos.include.ab3"
000007C0 <error.include.ab3@205> XINCLUDE "dos.include.ab3"
00000820 <error.include.ab3@206> XINCLUDE "dos.include.ab3"
0000082E <error.include.ab3@207> XINCLUDE "dos.include.ab3"
00000864 <error.include.ab3@210> XINCLUDE "dos.include.ab3"
0000086E <error.include.ab3@214> XINCLUDE "dos.include.ab3"
0000088A <error.include.ab3@215> XINCLUDE "dos.include.ab3"
0000088A <multilist.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <strptr.include.ab3@1> XINCLUDE "dos.include.ab3"
0000088A <useful.include.ab3@1> XINCLUDE "dos.include.ab3"
000008B8 <useful.include.ab3@283> XINCLUDE "dos.include.ab3"
000008C2 <useful.include.ab3@284> XINCLUDE "dos.include.ab3"
000008D6 <useful.include.ab3@285> XINCLUDE "dos.include.ab3"
000008DE <useful.include.ab3@286> XINCLUDE "dos.include.ab3"
00000906 <useful.include.ab3@287> XINCLUDE "dos.include.ab3"
0000092C <useful.include.ab3@288> XINCLUDE "dos.include.ab3"
0000094C <useful.include.ab3@291> XINCLUDE "dos.include.ab3"
0000095A <useful.include.ab3@292> XINCLUDE "dos.include.ab3"
00000980 <useful.include.ab3@293> XINCLUDE "dos.include.ab3"
00000988 <useful.include.ab3@295> XINCLUDE "dos.include.ab3"
00000990 <useful.include.ab3@296> XINCLUDE "dos.include.ab3"
00000996 <useful.include.ab3@297> XINCLUDE "dos.include.ab3"
000009B2 <useful.include.ab3@298> XINCLUDE "dos.include.ab3"
000009D6 <useful.include.ab3@299> XINCLUDE "dos.include.ab3"
000009EA <useful.include.ab3@300> XINCLUDE "dos.include.ab3"
000009F0 <useful.include.ab3@301> XINCLUDE "dos.include.ab3"
00000A3A <useful.include.ab3@302> XINCLUDE "dos.include.ab3"
00000A3C <useful.include.ab3@303> XINCLUDE "dos.include.ab3"
00000A4A <useful.include.ab3@305> XINCLUDE "dos.include.ab3"
00000A6A <useful.include.ab3@307> XINCLUDE "dos.include.ab3"
00000AC8 <useful.include.ab3@308> XINCLUDE "dos.include.ab3"
00000ACE <useful.include.ab3@309> XINCLUDE "dos.include.ab3"
00000ADC <useful.include.ab3@310> XINCLUDE "dos.include.ab3"
00000AF0 <useful.include.ab3@311> XINCLUDE "dos.include.ab3"
00000B02 <useful.include.ab3@312> XINCLUDE "dos.include.ab3"
00000B10 <useful.include.ab3@313> XINCLUDE "dos.include.ab3"
00000B16 <useful.include.ab3@314> XINCLUDE "dos.include.ab3"
00000B22 <useful.include.ab3@315> XINCLUDE "dos.include.ab3"
00000B36 <useful.include.ab3@318> XINCLUDE "dos.include.ab3"
00000B4A <useful.include.ab3@319> XINCLUDE "dos.include.ab3"
00000B5C <useful.include.ab3@320> XINCLUDE "dos.include.ab3"
00000B6A <useful.include.ab3@321> XINCLUDE "dos.include.ab3"
00000B88 <useful.include.ab3@322> XINCLUDE "dos.include.ab3"
00000B8E <useful.include.ab3@323> XINCLUDE "dos.include.ab3"
00000BA2 <useful.include.ab3@327> XINCLUDE "dos.include.ab3"
00000BAC <useful.include.ab3@328> XINCLUDE "dos.include.ab3"
00000BB4 <useful.include.ab3@329> XINCLUDE "dos.include.ab3"
00000BD2 <useful.include.ab3@330> XINCLUDE "dos.include.ab3"
00000BD8 <useful.include.ab3@331> XINCLUDE "dos.include.ab3"
00000C04 <useful.include.ab3@332> XINCLUDE "dos.include.ab3"
00000C0A <useful.include.ab3@334> XINCLUDE "dos.include.ab3"
00000C1C <useful.include.ab3@335> XINCLUDE "dos.include.ab3"
00000C34 <useful.include.ab3@336> XINCLUDE "dos.include.ab3"
00000C4C <useful.include.ab3@337> XINCLUDE "dos.include.ab3"
00000C6A <useful.include.ab3@338> XINCLUDE "dos.include.ab3"
00000C6C <useful.include.ab3@340> XINCLUDE "dos.include.ab3"
00000C7A <useful.include.ab3@341> XINCLUDE "dos.include.ab3"
00000CA0 <useful.include.ab3@342> XINCLUDE "dos.include.ab3"
00000D34 <useful.include.ab3@343> XINCLUDE "dos.include.ab3"
00000D42 <useful.include.ab3@345> XINCLUDE "dos.include.ab3"
00000D48 <useful.include.ab3@346> XINCLUDE "dos.include.ab3"
00000D72 <useful.include.ab3@347> XINCLUDE "dos.include.ab3"
00000D90 <useful.include.ab3@348> XINCLUDE "dos.include.ab3"
00000D90 <strptr.include.ab3@37> XINCLUDE "dos.include.ab3"
00000DAA <strptr.include.ab3@96> XINCLUDE "dos.include.ab3"
00000DB4 <strptr.include.ab3@97> XINCLUDE "dos.include.ab3"
00000DFC <strptr.include.ab3@98> XINCLUDE "dos.include.ab3"
00000E00 <strptr.include.ab3@100> XINCLUDE "dos.include.ab3"
00000E2E <strptr.include.ab3@197> XINCLUDE "dos.include.ab3"
00000E38 <strptr.include.ab3@198> XINCLUDE "dos.include.ab3"
00000E80 <strptr.include.ab3@199> XINCLUDE "dos.include.ab3"
00000E94 <strptr.include.ab3@200> XINCLUDE "dos.include.ab3"
00000EA6 <strptr.include.ab3@201> XINCLUDE "dos.include.ab3"
00000ECA <strptr.include.ab3@205> XINCLUDE "dos.include.ab3"
00000ED4 <strptr.include.ab3@208> XINCLUDE "dos.include.ab3"
00000EE2 <strptr.include.ab3@209> XINCLUDE "dos.include.ab3"
00000EEC <strptr.include.ab3@210> XINCLUDE "dos.include.ab3"
00000F14 <strptr.include.ab3@211> XINCLUDE "dos.include.ab3"
00000F2E <strptr.include.ab3@212> XINCLUDE "dos.include.ab3"
00000F46 <strptr.include.ab3@216> XINCLUDE "dos.include.ab3"
00000F60 <strptr.include.ab3@282> XINCLUDE "dos.include.ab3"
00000F6A <strptr.include.ab3@283> XINCLUDE "dos.include.ab3"
00000F78 <strptr.include.ab3@284> XINCLUDE "dos.include.ab3"
00000FAA <strptr.include.ab3@285> XINCLUDE "dos.include.ab3"
00000FC8 <strptr.include.ab3@287> XINCLUDE "dos.include.ab3"
00000FD2 <strptr.include.ab3@288> XINCLUDE "dos.include.ab3"
00000FD2 <multilist.include.ab3@44> XINCLUDE "dos.include.ab3"
00000FE8 <multilist.include.ab3@61> XINCLUDE "dos.include.ab3"
00001002 <multilist.include.ab3@406> XINCLUDE "dos.include.ab3"
0000100C <multilist.include.ab3@407> XINCLUDE "dos.include.ab3"
0000102E <multilist.include.ab3@408> XINCLUDE "dos.include.ab3"
00001052 <multilist.include.ab3@409> XINCLUDE "dos.include.ab3"
00001064 <multilist.include.ab3@410> XINCLUDE "dos.include.ab3"
0000107C <multilist.include.ab3@411> XINCLUDE "dos.include.ab3"
00001090 <multilist.include.ab3@412> XINCLUDE "dos.include.ab3"
000010A2 <multilist.include.ab3@415> XINCLUDE "dos.include.ab3"
000010B2 <multilist.include.ab3@416> XINCLUDE "dos.include.ab3"
000010B8 <multilist.include.ab3@417> XINCLUDE "dos.include.ab3"
000010C8 <multilist.include.ab3@418> XINCLUDE "dos.include.ab3"
000010D8 <multilist.include.ab3@419> XINCLUDE "dos.include.ab3"
000010F2 <multilist.include.ab3@420> XINCLUDE "dos.include.ab3"
000010F6 <multilist.include.ab3@422> XINCLUDE "dos.include.ab3"
00001110 <multilist.include.ab3@585> XINCLUDE "dos.include.ab3"
00001140 <multilist.include.ab3@586> XINCLUDE "dos.include.ab3"
0000114A <multilist.include.ab3@588> XINCLUDE "dos.include.ab3"
00001154 <multilist.include.ab3@589> XINCLUDE "dos.include.ab3"
00001176 <multilist.include.ab3@590> XINCLUDE "dos.include.ab3"
0000119A <multilist.include.ab3@591> XINCLUDE "dos.include.ab3"
000011AC <multilist.include.ab3@592> XINCLUDE "dos.include.ab3"
000011C4 <multilist.include.ab3@593> XINCLUDE "dos.include.ab3"
000011D8 <multilist.include.ab3@594> XINCLUDE "dos.include.ab3"
000011EA <multilist.include.ab3@597> XINCLUDE "dos.include.ab3"
000011FA <multilist.include.ab3@598> XINCLUDE "dos.include.ab3"
00001200 <multilist.include.ab3@599> XINCLUDE "dos.include.ab3"
00001210 <multilist.include.ab3@600> XINCLUDE "dos.include.ab3"
00001220 <multilist.include.ab3@601> XINCLUDE "dos.include.ab3"
0000123A <multilist.include.ab3@602> XINCLUDE "dos.include.ab3"
00001240 <multilist.include.ab3@603> XINCLUDE "dos.include.ab3"
00001246 <multilist.include.ab3@604> XINCLUDE "dos.include.ab3"
0000124A <multilist.include.ab3@605> XINCLUDE "dos.include.ab3"
00001264 <multilist.include.ab3@713> XINCLUDE "dos.include.ab3"
0000126C <multilist.include.ab3@714> XINCLUDE "dos.include.ab3"
00001276 <multilist.include.ab3@715> XINCLUDE "dos.include.ab3"
0000128C <multilist.include.ab3@716> XINCLUDE "dos.include.ab3"
000012A0 <multilist.include.ab3@717> XINCLUDE "dos.include.ab3"
000012C4 <multilist.include.ab3@718> XINCLUDE "dos.include.ab3"
000012D2 <multilist.include.ab3@721> XINCLUDE "dos.include.ab3"
000012DC <multilist.include.ab3@722> XINCLUDE "dos.include.ab3"
000012E2 <multilist.include.ab3@723> XINCLUDE "dos.include.ab3"
000012EC <multilist.include.ab3@724> XINCLUDE "dos.include.ab3"
000012F2 <multilist.include.ab3@725> XINCLUDE "dos.include.ab3"
00001310 <multilist.include.ab3@742> XINCLUDE "dos.include.ab3"
00001318 <multilist.include.ab3@743> XINCLUDE "dos.include.ab3"
00001322 <multilist.include.ab3@744> XINCLUDE "dos.include.ab3"
00001340 <multilist.include.ab3@745> XINCLUDE "dos.include.ab3"
00001356 <multilist.include.ab3@746> XINCLUDE "dos.include.ab3"
0000136A <multilist.include.ab3@747> XINCLUDE "dos.include.ab3"
0000139E <multilist.include.ab3@748> XINCLUDE "dos.include.ab3"
000013AC <multilist.include.ab3@751> XINCLUDE "dos.include.ab3"
000013B6 <multilist.include.ab3@752> XINCLUDE "dos.include.ab3"
000013BC <multilist.include.ab3@753> XINCLUDE "dos.include.ab3"
000013C6 <multilist.include.ab3@754> XINCLUDE "dos.include.ab3"
000013CA <multilist.include.ab3@756> XINCLUDE "dos.include.ab3"
000013D0 <multilist.include.ab3@757> XINCLUDE "dos.include.ab3"
000013EA <multilist.include.ab3@795> XINCLUDE "dos.include.ab3"
000013F4 <multilist.include.ab3@796> XINCLUDE "dos.include.ab3"
000013FE <multilist.include.ab3@797> XINCLUDE "dos.include.ab3"
00001414 <multilist.include.ab3@798> XINCLUDE "dos.include.ab3"
00001424 <multilist.include.ab3@799> XINCLUDE "dos.include.ab3"
0000142E <multilist.include.ab3@801> XINCLUDE "dos.include.ab3"
00001434 <multilist.include.ab3@802> XINCLUDE "dos.include.ab3"
00001438 <multilist.include.ab3@803> XINCLUDE "dos.include.ab3"
0000145A <multilist.include.ab3@821> XINCLUDE "dos.include.ab3"
00001462 <multilist.include.ab3@822> XINCLUDE "dos.include.ab3"
0000147C <multilist.include.ab3@823> XINCLUDE "dos.include.ab3"
00001486 <multilist.include.ab3@824> XINCLUDE "dos.include.ab3"
0000149C <multilist.include.ab3@825> XINCLUDE "dos.include.ab3"
000014B0 <multilist.include.ab3@826> XINCLUDE "dos.include.ab3"
00001506 <multilist.include.ab3@827> XINCLUDE "dos.include.ab3"
00001540 <multilist.include.ab3@828> XINCLUDE "dos.include.ab3"
00001552 <multilist.include.ab3@829> XINCLUDE "dos.include.ab3"
00001574 <multilist.include.ab3@830> XINCLUDE "dos.include.ab3"
0000157A <multilist.include.ab3@831> XINCLUDE "dos.include.ab3"
000015D0 <multilist.include.ab3@832> XINCLUDE "dos.include.ab3"
0000160A <multilist.include.ab3@833> XINCLUDE "dos.include.ab3"
00001610 <multilist.include.ab3@835> XINCLUDE "dos.include.ab3"
0000164A <multilist.include.ab3@836> XINCLUDE "dos.include.ab3"
00001684 <multilist.include.ab3@837> XINCLUDE "dos.include.ab3"
00001696 <multilist.include.ab3@839> XINCLUDE "dos.include.ab3"
000016A0 <multilist.include.ab3@840> XINCLUDE "dos.include.ab3"
000016A6 <multilist.include.ab3@841> XINCLUDE "dos.include.ab3"
000016B0 <multilist.include.ab3@842> XINCLUDE "dos.include.ab3"
000016C4 <multilist.include.ab3@843> XINCLUDE "dos.include.ab3"
0000170A <multilist.include.ab3@870> XINCLUDE "dos.include.ab3"
00001712 <multilist.include.ab3@871> XINCLUDE "dos.include.ab3"
00001730 <multilist.include.ab3@872> XINCLUDE "dos.include.ab3"
0000175C <multilist.include.ab3@873> XINCLUDE "dos.include.ab3"
0000177A <multilist.include.ab3@874> XINCLUDE "dos.include.ab3"
00001794 <multilist.include.ab3@875> XINCLUDE "dos.include.ab3"
000017AE <multilist.include.ab3@876> XINCLUDE "dos.include.ab3"
00001830 <multilist.include.ab3@877> XINCLUDE "dos.include.ab3"
00001844 <multilist.include.ab3@879> XINCLUDE "dos.include.ab3"
0000185C <multilist.include.ab3@880> XINCLUDE "dos.include.ab3"
00001862 <multilist.include.ab3@881> XINCLUDE "dos.include.ab3"
0000187A <multilist.include.ab3@882> XINCLUDE "dos.include.ab3"
00001890 <multilist.include.ab3@884> XINCLUDE "dos.include.ab3"
000018AA <multilist.include.ab3@886> XINCLUDE "dos.include.ab3"
000018BE <multilist.include.ab3@887> XINCLUDE "dos.include.ab3"
000018CC <multilist.include.ab3@888> XINCLUDE "dos.include.ab3"
00001922 <multilist.include.ab3@889> XINCLUDE "dos.include.ab3"
00001958 <multilist.include.ab3@890> XINCLUDE "dos.include.ab3"
00001988 <multilist.include.ab3@891> XINCLUDE "dos.include.ab3"
00001A10 <multilist.include.ab3@893> XINCLUDE "dos.include.ab3"
00001A16 <multilist.include.ab3@894> XINCLUDE "dos.include.ab3"
00001A24 <multilist.include.ab3@895> XINCLUDE "dos.include.ab3"
00001A7A <multilist.include.ab3@896> XINCLUDE "dos.include.ab3"
00001AB0 <multilist.include.ab3@897> XINCLUDE "dos.include.ab3"
00001AE0 <multilist.include.ab3@898> XINCLUDE "dos.include.ab3"
00001AE6 <multilist.include.ab3@901> XINCLUDE "dos.include.ab3"
00001B00 <multilist.include.ab3@902> XINCLUDE "dos.include.ab3"
00001B0E <multilist.include.ab3@903> XINCLUDE "dos.include.ab3"
00001B48 <multilist.include.ab3@904> XINCLUDE "dos.include.ab3"
00001B7E <multilist.include.ab3@905> XINCLUDE "dos.include.ab3"
00001BAE <multilist.include.ab3@906> XINCLUDE "dos.include.ab3"
00001BBC <multilist.include.ab3@909> XINCLUDE "dos.include.ab3"
00001BC6 <multilist.include.ab3@910> XINCLUDE "dos.include.ab3"
00001BCC <multilist.include.ab3@911> XINCLUDE "dos.include.ab3"
00001BD6 <multilist.include.ab3@912> XINCLUDE "dos.include.ab3"
00001BEA <multilist.include.ab3@913> XINCLUDE "dos.include.ab3"
00001BEA <dos.include.ab3@57> XINCLUDE "dos.include.ab3"
00001BEA <wbstart.include.ab3@1> XINCLUDE "dos.include.ab3"
00001C00 <wbstart.include.ab3@58> XINCLUDE "dos.include.ab3"
00001C0A <wbstart.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C22 <wbstart.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C24 <wbstart.include.ab3@63> XINCLUDE "dos.include.ab3"
00001C52 <wbstart.include.ab3@64> XINCLUDE "dos.include.ab3"
00001C52 <dos.include.ab3@59> XINCLUDE "dos.include.ab3"
00001C68 <dos.include.ab3@61> XINCLUDE "dos.include.ab3"
00001C70 <dos.include.ab3@79> XINCLUDE "dos.include.ab3"
00001C78 <dos.include.ab3@80> XINCLUDE "dos.include.ab3"
00001CA0 <dos.include.ab3@81> XINCLUDE "dos.include.ab3"
00001CA8 <dos.include.ab3@82> XINCLUDE "dos.include.ab3"
00001CD0 <dos.include.ab3@83> XINCLUDE "dos.include.ab3"
00001CF8 <dos.include.ab3@84> XINCLUDE "dos.include.ab3"
00001D20 <dos.include.ab3@85> XINCLUDE "dos.include.ab3"
00001D28 <dos.include.ab3@86> XINCLUDE "dos.include.ab3"
00001D30 <dos.include.ab3@87> XINCLUDE "dos.include.ab3"
00001D38 <dos.include.ab3@88> XINCLUDE "dos.include.ab3"
00001D40 <dos.include.ab3@89> XINCLUDE "dos.include.ab3"
00001D48 <dos.include.ab3@90> XINCLUDE "dos.include.ab3"
00001D50 <dos.include.ab3@91> XINCLUDE "dos.include.ab3"
00001D58 <dos.include.ab3@92> XINCLUDE "dos.include.ab3"
00001D60 <dos.include.ab3@93> XINCLUDE "dos.include.ab3"
00001D68 <dos.include.ab3@94> XINCLUDE "dos.include.ab3"
00001D88 <dos.include.ab3@95> XINCLUDE "dos.include.ab3"
00001D90 <dos.include.ab3@96> XINCLUDE "dos.include.ab3"
00001D98 <dos.include.ab3@97> XINCLUDE "dos.include.ab3"
00001DC0 <dos.include.ab3@99> XINCLUDE "dos.include.ab3"
00001DD6 <dos.include.ab3@130> XINCLUDE "dos.include.ab3"
00001DE2 <dos.include.ab3@131> XINCLUDE "dos.include.ab3"
00001DE6 <dos.include.ab3@132> XINCLUDE "dos.include.ab3"
00001DFC <dos.include.ab3@145> XINCLUDE "dos.include.ab3"
00001E16 <dos.include.ab3@146> XINCLUDE "dos.include.ab3"
00001E2C <dos.include.ab3@147> XINCLUDE "dos.include.ab3"
00001E56 <dos.include.ab3@148> XINCLUDE "dos.include.ab3"
00001E60 <dos.include.ab3@149> XINCLUDE "dos.include.ab3"
00001E66 <dos.include.ab3@150> XINCLUDE "dos.include.ab3"
00001E7C <dos.include.ab3@163> XINCLUDE "dos.include.ab3"
00001E96 <dos.include.ab3@164> XINCLUDE "dos.include.ab3"
00001EAC <dos.include.ab3@165> XINCLUDE "dos.include.ab3"
00001ED6 <dos.include.ab3@166> XINCLUDE "dos.include.ab3"
00001EE0 <dos.include.ab3@167> XINCLUDE "dos.include.ab3"
00001EE6 <dos.include.ab3@168> XINCLUDE "dos.include.ab3"
00001F10 <dos.include.ab3@184> XINCLUDE "dos.include.ab3"
00001F1C <dos.include.ab3@185> XINCLUDE "dos.include.ab3"
00001F3C <dos.include.ab3@186> XINCLUDE "dos.include.ab3"
00001F46 <dos.include.ab3@187> XINCLUDE "dos.include.ab3"
00001F56 <dos.include.ab3@188> XINCLUDE "dos.include.ab3"
00001F66 <dos.include.ab3@189> XINCLUDE "dos.include.ab3"
00001F70 <dos.include.ab3@191> XINCLUDE "dos.include.ab3"
00001F8A <dos.include.ab3@192> XINCLUDE "dos.include.ab3"
00001FA0 <dos.include.ab3@430> XINCLUDE "dos.include.ab3"
00001FB2 <dos.include.ab3@432> XINCLUDE "dos.include.ab3"
0000202C <dos.include.ab3@433> XINCLUDE "dos.include.ab3"
00002056 <dos.include.ab3@434> XINCLUDE "dos.include.ab3"
0000206E <dos.include.ab3@435> XINCLUDE "dos.include.ab3"
00002084 <dos.include.ab3@461> XINCLUDE "dos.include.ab3"
00002096 <dos.include.ab3@462> XINCLUDE "dos.include.ab3"
0000209A <dos.include.ab3@463> XINCLUDE "dos.include.ab3"
000020B0 <dos.include.ab3@479> XINCLUDE "dos.include.ab3"
000020B2 <dos.include.ab3@480> XINCLUDE "dos.include.ab3"
000020EC <dos.include.ab3@541> XINCLUDE "dos.include.ab3"
00002120 <dos.include.ab3@543> XINCLUDE "dos.include.ab3"
00002146 <dos.include.ab3@544> XINCLUDE "dos.include.ab3"
00002166 <dos.include.ab3@545> XINCLUDE "dos.include.ab3"
00002186 <dos.include.ab3@546> XINCLUDE "dos.include.ab3"
000021B0 <dos.include.ab3@549> XINCLUDE "dos.include.ab3"
000021FC <dos.include.ab3@551> XINCLUDE "dos.include.ab3"
0000220E <dos.include.ab3@552> XINCLUDE "dos.include.ab3"
0000225E <dos.include.ab3@553> XINCLUDE "dos.include.ab3"
00002288 <dos.include.ab3@556> XINCLUDE "dos.include.ab3"
000022A6 <dos.include.ab3@558> XINCLUDE "dos.include.ab3"
000022D0 <dos.include.ab3@674> XINCLUDE "dos.include.ab3"
000022E6 <dos.include.ab3@675> XINCLUDE "dos.include.ab3"
000022F0 <dos.include.ab3@676> XINCLUDE "dos.include.ab3"
00002318 <dos.include.ab3@677> XINCLUDE "dos.include.ab3"
0000231E <dos.include.ab3@678> XINCLUDE "dos.include.ab3"
00002346 <dos.include.ab3@679> XINCLUDE "dos.include.ab3"
00002370 <dos.include.ab3@681> XINCLUDE "dos.include.ab3"
0000238E <dos.include.ab3@682> XINCLUDE "dos.include.ab3"
000023B8 <dos.include.ab3@705> XINCLUDE "dos.include.ab3"
00002428 <dos.include.ab3@706> XINCLUDE "dos.include.ab3"
00002452 <dos.include.ab3@707> XINCLUDE "dos.include.ab3"
00002470 <dos.include.ab3@708> XINCLUDE "dos.include.ab3"
0000249A <dos.include.ab3@743> XINCLUDE "dos.include.ab3"
000024BA <dos.include.ab3@744> XINCLUDE "dos.include.ab3"
000024E6 <dos.include.ab3@745> XINCLUDE "dos.include.ab3"
000024F0 <dos.include.ab3@746> XINCLUDE "dos.include.ab3"
0000250A <dos.include.ab3@747> XINCLUDE "dos.include.ab3"
00002534 <dos.include.ab3@894> XINCLUDE "dos.include.ab3"
000025E2 <dos.include.ab3@895> XINCLUDE "dos.include.ab3"
000025F8 <dos.include.ab3@896> XINCLUDE "dos.include.ab3"
00002602 <dos.include.ab3@897> XINCLUDE "dos.include.ab3"
0000262A <dos.include.ab3@898> XINCLUDE "dos.include.ab3"
00002634 <dos.include.ab3@899> XINCLUDE "dos.include.ab3"
0000263A <dos.include.ab3@900> XINCLUDE "dos.include.ab3"
00002640 <dos.include.ab3@901> XINCLUDE "dos.include.ab3"
00002646 <dos.include.ab3@902> XINCLUDE "dos.include.ab3"
00002658 <dos.include.ab3@904> XINCLUDE "dos.include.ab3"
00002662 <dos.include.ab3@906> XINCLUDE "dos.include.ab3"
0000267C <dos.include.ab3@907> XINCLUDE "dos.include.ab3"
000026BA <dos.include.ab3@928> XINCLUDE "dos.include.ab3"
000026C2 <dos.include.ab3@929> XINCLUDE "dos.include.ab3"
00002770 <dos.include.ab3@930> XINCLUDE "dos.include.ab3"
00002784 <dos.include.ab3@931> XINCLUDE "dos.include.ab3"
000027C6 <dos.include.ab3@932> XINCLUDE "dos.include.ab3"
000027E6 <dos.include.ab3@934> XINCLUDE "dos.include.ab3"
000027F0 <dos.include.ab3@935> XINCLUDE "dos.include.ab3"
0000280C <dos.include.ab3@936> XINCLUDE "dos.include.ab3"
00002846 <dos.include.ab3@988> XINCLUDE "dos.include.ab3"
0000284E <dos.include.ab3@989> XINCLUDE "dos.include.ab3"
000028FC <dos.include.ab3@990> XINCLUDE "dos.include.ab3"
00002932 <dos.include.ab3@991> XINCLUDE "dos.include.ab3"
00002952 <dos.include.ab3@992> XINCLUDE "dos.include.ab3"
00002970 <dos.include.ab3@993> XINCLUDE "dos.include.ab3"
00002994 <dos.include.ab3@994> XINCLUDE "dos.include.ab3"
0000299E <dos.include.ab3@996> XINCLUDE "dos.include.ab3"
000029BA <dos.include.ab3@997> XINCLUDE "dos.include.ab3"
000029F4 <dos.include.ab3@1014> XINCLUDE "dos.include.ab3"
00002AA2 <dos.include.ab3@1015> XINCLUDE "dos.include.ab3"
00002ADA <dos.include.ab3@1016> XINCLUDE "dos.include.ab3"
00002AFA <dos.include.ab3@1017> XINCLUDE "dos.include.ab3"
00002B00 <dos.include.ab3@1018> XINCLUDE "dos.include.ab3"
00002B20 <dos.include.ab3@1019> XINCLUDE "dos.include.ab3"
00002B2A <dos.include.ab3@1020> XINCLUDE "dos.include.ab3"
00002B44 <dos.include.ab3@1021> XINCLUDE "dos.include.ab3"
00002B5C <dos.include.ab3@1022> XINCLUDE "dos.include.ab3"
00002B66 <dos.include.ab3@1025> XINCLUDE "dos.include.ab3"
00002B82 <dos.include.ab3@1026> XINCLUDE "dos.include.ab3"
00002BAC <dos.include.ab3@1161> XINCLUDE "dos.include.ab3"
00002BBA <dos.include.ab3@1163> XINCLUDE "dos.include.ab3"
00002C80 <dos.include.ab3@1164> XINCLUDE "dos.include.ab3"
00002CAA <dos.include.ab3@1165> XINCLUDE "dos.include.ab3"
00002CD2 <dos.include.ab3@1167> XINCLUDE "dos.include.ab3"
00002CFC <dos.include.ab3@1168> XINCLUDE "dos.include.ab3"
00002D26 <dos.include.ab3@1170> XINCLUDE "dos.include.ab3"
00002D44 <dos.include.ab3@1171> XINCLUDE "dos.include.ab3"
00002D6E <dos.include.ab3@1189> XINCLUDE "dos.include.ab3"
00002DDA <dos.include.ab3@1191> XINCLUDE "dos.include.ab3"
00002E02 <dos.include.ab3@1192> XINCLUDE "dos.include.ab3"
00002E10 <dos.include.ab3@1193> XINCLUDE "dos.include.ab3"
00002E44 <dos.include.ab3@1194> XINCLUDE "dos.include.ab3"
00002E52 <dos.include.ab3@1197> XINCLUDE "dos.include.ab3"
00002E74 <dos.include.ab3@1203> XINCLUDE "dos.include.ab3"
00002E82 <dos.include.ab3@1207> XINCLUDE "dos.include.ab3"
00002EA6 <dos.include.ab3@1208> XINCLUDE "dos.include.ab3"
00002ED0 <dos.include.ab3@1209> XINCLUDE "dos.include.ab3"
00002EFA <dos.include.ab3@1212> XINCLUDE "dos.include.ab3"
00002F18 <dos.include.ab3@1213> XINCLUDE "dos.include.ab3"
00002F42 <dos.include.ab3@1274> XINCLUDE "dos.include.ab3"
00002F9A <dos.include.ab3@1275> XINCLUDE "dos.include.ab3"
00002FC4 <dos.include.ab3@1276> XINCLUDE "dos.include.ab3"
00002FE2 <dos.include.ab3@1277> XINCLUDE "dos.include.ab3"
00002FF8 <dos.include.ab3@1351> XINCLUDE "dos.include.ab3"
00002FFE <dos.include.ab3@1353> XINCLUDE "dos.include.ab3"
00003008 <dos.include.ab3@1354> XINCLUDE "dos.include.ab3"
00003012 <dos.include.ab3@1355> XINCLUDE "dos.include.ab3"
00003030 <dos.include.ab3@1358> XINCLUDE "dos.include.ab3"
00003036 <dos.include.ab3@1359> XINCLUDE "dos.include.ab3"
0000303C <dos.include.ab3@1360> XINCLUDE "dos.include.ab3"
0000304C <dos.include.ab3@1362> XINCLUDE "dos.include.ab3"
00003052 <dos.include.ab3@1363> XINCLUDE "dos.include.ab3"
0000305A <dos.include.ab3@1364> XINCLUDE "dos.include.ab3"
00003082 <dos.include.ab3@1365> XINCLUDE "dos.include.ab3"
0000308C <dos.include.ab3@1366> XINCLUDE "dos.include.ab3"
00003096 <dos.include.ab3@1368> XINCLUDE "dos.include.ab3"
000030AA <dos.include.ab3@1369> XINCLUDE "dos.include.ab3"
000030C0 <dos.include.ab3@1474> XINCLUDE "dos.include.ab3"
000030C6 <dos.include.ab3@1480> XINCLUDE "dos.include.ab3"
000030EA <dos.include.ab3@1481> XINCLUDE "dos.include.ab3"
0000310E <dos.include.ab3@1482> XINCLUDE "dos.include.ab3"
00003132 <dos.include.ab3@1483> XINCLUDE "dos.include.ab3"
00003138 <dos.include.ab3@1484> XINCLUDE "dos.include.ab3"
00003164 <dos.include.ab3@1485> XINCLUDE "dos.include.ab3"
00003166 <dos.include.ab3@1486> XINCLUDE "dos.include.ab3"
00003194 <dos.include.ab3@1487> XINCLUDE "dos.include.ab3"
000031BE <dos.include.ab3@1503> XINCLUDE "dos.include.ab3"
00003242 <dos.include.ab3@1506> XINCLUDE "dos.include.ab3"
0000330A <dos.include.ab3@1507> XINCLUDE "dos.include.ab3"
00003314 <dos.include.ab3@1509> XINCLUDE "dos.include.ab3"
0000335E <dos.include.ab3@1510> XINCLUDE "dos.include.ab3"
000033AA <dos.include.ab3@1512> XINCLUDE "dos.include.ab3"
000033E2 <dos.include.ab3@1513> XINCLUDE "dos.include.ab3"
000033F4 <dos.include.ab3@1514> XINCLUDE "dos.include.ab3"
0000340A <dos.include.ab3@1515> XINCLUDE "dos.include.ab3"
00003410 <dos.include.ab3@1516> XINCLUDE "dos.include.ab3"
00003426 <dos.include.ab3@1517> XINCLUDE "dos.include.ab3"
0000345A <dos.include.ab3@1519> XINCLUDE "dos.include.ab3"
00003460 <dos.include.ab3@1520> XINCLUDE "dos.include.ab3"
0000346A <dos.include.ab3@1522> XINCLUDE "dos.include.ab3"
00003484 <dos.include.ab3@1523> XINCLUDE "dos.include.ab3"
000034CE <dos.include.ab3@1553> XINCLUDE "dos.include.ab3"
00003504 <dos.include.ab3@1555> XINCLUDE "dos.include.ab3"
00003528 <dos.include.ab3@1556> XINCLUDE "dos.include.ab3"
00003532 <dos.include.ab3@1557> XINCLUDE "dos.include.ab3"
0000355A <dos.include.ab3@1558> XINCLUDE "dos.include.ab3"
000035A2 <dos.include.ab3@1561> XINCLUDE "dos.include.ab3"
00003678 <dos.include.ab3@1563> XINCLUDE "dos.include.ab3"
000036A2 <dos.include.ab3@1564> XINCLUDE "dos.include.ab3"
000036C2 <dos.include.ab3@1565> XINCLUDE "dos.include.ab3"
000036FC <dos.include.ab3@1584> XINCLUDE "dos.include.ab3"
00003702 <dos.include.ab3@1586> XINCLUDE "dos.include.ab3"
00003708 <dos.include.ab3@1587> XINCLUDE "dos.include.ab3"
00003710 <dos.include.ab3@1588> XINCLUDE "dos.include.ab3"
00003746 <dos.include.ab3@1589> XINCLUDE "dos.include.ab3"
00003754 <dos.include.ab3@1590> XINCLUDE "dos.include.ab3"
0000375E <dos.include.ab3@1591> XINCLUDE "dos.include.ab3"
0000378A <dos.include.ab3@1592> XINCLUDE "dos.include.ab3"
00003798 <dos.include.ab3@1593> XINCLUDE "dos.include.ab3"
000037A2 <dos.include.ab3@1594> XINCLUDE "dos.include.ab3"
000037D0 <dos.include.ab3@1596> XINCLUDE "dos.include.ab3"
0000384E <dos.include.ab3@1599> XINCLUDE "dos.include.ab3"
000038A0 <dos.include.ab3@1602> XINCLUDE "dos.include.ab3"
000038B2 <dos.include.ab3@1603> XINCLUDE "dos.include.ab3"
00003920 <dos.include.ab3@1604> XINCLUDE "dos.include.ab3"
00003926 <dos.include.ab3@1605> XINCLUDE "dos.include.ab3"
00003972 <dos.include.ab3@1606> XINCLUDE "dos.include.ab3"
00003A40 <dos.include.ab3@1610> XINCLUDE "dos.include.ab3"
00003B20 <dos.include.ab3@1611> XINCLUDE "dos.include.ab3"
00003B8C <dos.include.ab3@1613> XINCLUDE "dos.include.ab3"
00003B92 <dos.include.ab3@1614> XINCLUDE "dos.include.ab3"
00003BAE <dos.include.ab3@1615> XINCLUDE "dos.include.ab3"
00003BBC <dos.include.ab3@1618> XINCLUDE "dos.include.ab3"
00003BC2 <dos.include.ab3@1619> XINCLUDE "dos.include.ab3"
00003BD4 <dos.include.ab3@1622> XINCLUDE "dos.include.ab3"
00003BEA <dos.include.ab3@1623> XINCLUDE "dos.include.ab3"
00003BF4 <dos.include.ab3@1624> XINCLUDE "dos.include.ab3"
00003C10 <dos.include.ab3@1625> XINCLUDE "dos.include.ab3"
00003C3A <dos.include.ab3@2221> XINCLUDE "dos.include.ab3"
00003C4E <dos.include.ab3@2222> XINCLUDE "dos.include.ab3"
00003C8C <dos.include.ab3@2223> XINCLUDE "dos.include.ab3"
00003D72 <dos.include.ab3@2224> XINCLUDE "dos.include.ab3"
00003D78 <dos.include.ab3@2225> XINCLUDE "dos.include.ab3"
00003DC8 <dos.include.ab3@2226> XINCLUDE "dos.include.ab3"
00003DF2 <dos.include.ab3@2227> XINCLUDE "dos.include.ab3"
00003E10 <dos.include.ab3@2228> XINCLUDE "dos.include.ab3"
00003E3A <dos.include.ab3@2252> XINCLUDE "dos.include.ab3"
00003E4E <dos.include.ab3@2253> XINCLUDE "dos.include.ab3"
00003E8C <dos.include.ab3@2254> XINCLUDE "dos.include.ab3"
00003F72 <dos.include.ab3@2255> XINCLUDE "dos.include.ab3"
00003F78 <dos.include.ab3@2256> XINCLUDE "dos.include.ab3"
00003FEA <dos.include.ab3@2257> XINCLUDE "dos.include.ab3"
00004014 <dos.include.ab3@2258> XINCLUDE "dos.include.ab3"
00004032 <dos.include.ab3@2259> XINCLUDE "dos.include.ab3"
0000406C <dos.include.ab3@2285> XINCLUDE "dos.include.ab3"
000040A4 <dos.include.ab3@2286> XINCLUDE "dos.include.ab3"
000040FC <dos.include.ab3@2287> XINCLUDE "dos.include.ab3"
00004160 <dos.include.ab3@2288> XINCLUDE "dos.include.ab3"
0000418A <dos.include.ab3@2290> XINCLUDE "dos.include.ab3"
000041AA <dos.include.ab3@2291> XINCLUDE "dos.include.ab3"
000041D4 <dos.include.ab3@2308> XINCLUDE "dos.include.ab3"
000041DA <dos.include.ab3@2309> XINCLUDE "dos.include.ab3"
000041F0 <dos.include.ab3@2310> XINCLUDE "dos.include.ab3"
000041FA <dos.include.ab3@2311> XINCLUDE "dos.include.ab3"
00004200 <dos.include.ab3@2312> XINCLUDE "dos.include.ab3"
00004210 <dos.include.ab3@2313> XINCLUDE "dos.include.ab3"
0000421A <dos.include.ab3@2315> XINCLUDE "dos.include.ab3"
00004234 <dos.include.ab3@2316> XINCLUDE "dos.include.ab3"
00004262 <dos.include.ab3@2558> XINCLUDE "dos.include.ab3"
00004284 <dos.include.ab3@2559> XINCLUDE "dos.include.ab3"
0000428C <dos.include.ab3@2560> XINCLUDE "dos.include.ab3"
0000429A <dos.include.ab3@2561> XINCLUDE "dos.include.ab3"
000042B4 <dos.include.ab3@2563> XINCLUDE "dos.include.ab3"
000042E2 <dos.include.ab3@2582> XINCLUDE "dos.include.ab3"
000042F6 <dos.include.ab3@2583> XINCLUDE "dos.include.ab3"
0000432A <dos.include.ab3@2584> XINCLUDE "dos.include.ab3"
00004344 <dos.include.ab3@2586> XINCLUDE "dos.include.ab3"
0000434C <dos.include.ab3@2587> XINCLUDE "dos.include.ab3"
0000435A <dos.include.ab3@2588> XINCLUDE "dos.include.ab3"
00004374 <dos.include.ab3@2590> XINCLUDE "dos.include.ab3"
0000439E <dos.include.ab3@2726> XINCLUDE "dos.include.ab3"
000043AA <dos.include.ab3@2728> XINCLUDE "dos.include.ab3"
000043CA <dos.include.ab3@2729> XINCLUDE "dos.include.ab3"
000043F0 <dos.include.ab3@2730> XINCLUDE "dos.include.ab3"
0000441C <dos.include.ab3@2731> XINCLUDE "dos.include.ab3"
00004434 <dos.include.ab3@2732> XINCLUDE "dos.include.ab3"
00004442 <dos.include.ab3@2734> XINCLUDE "dos.include.ab3"
00004448 <dos.include.ab3@2735> XINCLUDE "dos.include.ab3"
00004454 <dos.include.ab3@2736> XINCLUDE "dos.include.ab3"
0000445A <dos.include.ab3@2738> XINCLUDE "dos.include.ab3"
00004466 <dos.include.ab3@2739> XINCLUDE "dos.include.ab3"
00004476 <dos.include.ab3@2741> XINCLUDE "dos.include.ab3"
0000447C <dos.include.ab3@2742> XINCLUDE "dos.include.ab3"
00004488 <dos.include.ab3@2743> XINCLUDE "dos.include.ab3"
00004492 <dos.include.ab3@2745> XINCLUDE "dos.include.ab3"
000044AC <dos.include.ab3@2746> XINCLUDE "dos.include.ab3"
000044AC <AmiBlitz3.ab3@79> XINCLUDE "dos.include.ab3"
000044BA <AmiBlitz3.ab3@81> If dos_FromCLI{}
000044C0 <AmiBlitz3.ab3@82>   CLIMode.l=True
000044CC <AmiBlitz3.ab3@83>   error_SetFlags{#error_stdout}
000044CC <common.ab3@1> XINCLUDE "/Shared/common.ab3"
000044F4 <common.ab3@48> XINCLUDE "/Shared/common.ab3"
000044FA <common.ab3@261> XINCLUDE "/Shared/common.ab3"
000044FC <common.ab3@262> XINCLUDE "/Shared/common.ab3"
0000468C <common.ab3@263> XINCLUDE "/Shared/common.ab3"
00004690 <common.ab3@264> XINCLUDE "/Shared/common.ab3"
00004694 <common.ab3@266> XINCLUDE "/Shared/common.ab3"
00004698 <common.ab3@267> XINCLUDE "/Shared/common.ab3"
0000469C <common.ab3@269> XINCLUDE "/Shared/common.ab3"
000046A0 <common.ab3@270> XINCLUDE "/Shared/common.ab3"
000046A4 <common.ab3@271> XINCLUDE "/Shared/common.ab3"
000046A8 <common.ab3@272> XINCLUDE "/Shared/common.ab3"
000046AC <common.ab3@273> XINCLUDE "/Shared/common.ab3"
000046B0 <common.ab3@274> XINCLUDE "/Shared/common.ab3"
000046B4 <common.ab3@275> XINCLUDE "/Shared/common.ab3"
000046B8 <common.ab3@276> XINCLUDE "/Shared/common.ab3"
000046BC <common.ab3@277> XINCLUDE "/Shared/common.ab3"
000046C0 <common.ab3@279> XINCLUDE "/Shared/common.ab3"
000046C4 <common.ab3@281> XINCLUDE "/Shared/common.ab3"
000046C8 <common.ab3@282> XINCLUDE "/Shared/common.ab3"
000046CC <common.ab3@283> XINCLUDE "/Shared/common.ab3"
000046D0 <common.ab3@284> XINCLUDE "/Shared/common.ab3"
000046D4 <common.ab3@285> XINCLUDE "/Shared/common.ab3"
000046D8 <common.ab3@286> XINCLUDE "/Shared/common.ab3"
000046DC <common.ab3@287> XINCLUDE "/Shared/common.ab3"
000046E0 <common.ab3@288> XINCLUDE "/Shared/common.ab3"
000046E4 <common.ab3@289> XINCLUDE "/Shared/common.ab3"
000046E8 <common.ab3@290> XINCLUDE "/Shared/common.ab3"
000046F0 <common.ab3@293> XINCLUDE "/Shared/common.ab3"
000046F4 <common.ab3@294> XINCLUDE "/Shared/common.ab3"
000046F6 <common.ab3@295> XINCLUDE "/Shared/common.ab3"
000046FA <common.ab3@296> XINCLUDE "/Shared/common.ab3"
000046FC <common.ab3@297> XINCLUDE "/Shared/common.ab3"
00004700 <common.ab3@298> XINCLUDE "/Shared/common.ab3"
00004704 <common.ab3@299> XINCLUDE "/Shared/common.ab3"
00004708 <common.ab3@300> XINCLUDE "/Shared/common.ab3"
0000470C <common.ab3@301> XINCLUDE "/Shared/common.ab3"
00004710 <common.ab3@302> XINCLUDE "/Shared/common.ab3"
00004718 <common.ab3@303> XINCLUDE "/Shared/common.ab3"
00004720 <common.ab3@304> XINCLUDE "/Shared/common.ab3"
00004724 <common.ab3@305> XINCLUDE "/Shared/common.ab3"
00004728 <common.ab3@306> XINCLUDE "/Shared/common.ab3"
0000472C <common.ab3@307> XINCLUDE "/Shared/common.ab3"
0000472E <common.ab3@309> XINCLUDE "/Shared/common.ab3"
000047EE <common.ab3@310> XINCLUDE "/Shared/common.ab3"
00004836 <common.ab3@311> XINCLUDE "/Shared/common.ab3"
0000483A <common.ab3@313> XINCLUDE "/Shared/common.ab3"
0000483C <common.ab3@314> XINCLUDE "/Shared/common.ab3"
00004840 <common.ab3@315> XINCLUDE "/Shared/common.ab3"
00004842 <common.ab3@316> XINCLUDE "/Shared/common.ab3"
00004844 <common.ab3@317> XINCLUDE "/Shared/common.ab3"
00004846 <common.ab3@318> XINCLUDE "/Shared/common.ab3"
00004848 <common.ab3@319> XINCLUDE "/Shared/common.ab3"
0000484A <common.ab3@321> XINCLUDE "/Shared/common.ab3"
0000484C <common.ab3@322> XINCLUDE "/Shared/common.ab3"
0000484D <common.ab3@326> XINCLUDE "/Shared/common.ab3"
0000484E <common.ab3@328> XINCLUDE "/Shared/common.ab3"
00004850 <common.ab3@329> XINCLUDE "/Shared/common.ab3"
00004852 <common.ab3@330> XINCLUDE "/Shared/common.ab3"
00004854 <common.ab3@332> XINCLUDE "/Shared/common.ab3"
00004856 <common.ab3@335> XINCLUDE "/Shared/common.ab3"
00004858 <common.ab3@337> XINCLUDE "/Shared/common.ab3"
0000485A <common.ab3@339> XINCLUDE "/Shared/common.ab3"
0000485E <common.ab3@341> XINCLUDE "/Shared/common.ab3"
00004860 <common.ab3@343> XINCLUDE "/Shared/common.ab3"
00004862 <common.ab3@344> XINCLUDE "/Shared/common.ab3"
00004864 <common.ab3@346> XINCLUDE "/Shared/common.ab3"
00004868 <common.ab3@348> XINCLUDE "/Shared/common.ab3"
0000486A <common.ab3@349> XINCLUDE "/Shared/common.ab3"
0000486C <common.ab3@350> XINCLUDE "/Shared/common.ab3"
00004870 <common.ab3@353> XINCLUDE "/Shared/common.ab3"
00004872 <common.ab3@354> XINCLUDE "/Shared/common.ab3"
00004874 <common.ab3@355> XINCLUDE "/Shared/common.ab3"
00004876 <common.ab3@356> XINCLUDE "/Shared/common.ab3"
00004878 <common.ab3@358> XINCLUDE "/Shared/common.ab3"
0000487A <common.ab3@359> XINCLUDE "/Shared/common.ab3"
0000487E <common.ab3@361> XINCLUDE "/Shared/common.ab3"
00004880 <common.ab3@362> XINCLUDE "/Shared/common.ab3"
00004882 <common.ab3@363> XINCLUDE "/Shared/common.ab3"
00004884 <common.ab3@367> XINCLUDE "/Shared/common.ab3"
00004886 <common.ab3@368> XINCLUDE "/Shared/common.ab3"
0000488A <common.ab3@369> XINCLUDE "/Shared/common.ab3"
0000488C <common.ab3@375> XINCLUDE "/Shared/common.ab3"
0000488E <common.ab3@377> XINCLUDE "/Shared/common.ab3"
00004890 <common.ab3@379> XINCLUDE "/Shared/common.ab3"
00004892 <common.ab3@380> XINCLUDE "/Shared/common.ab3"
00004894 <common.ab3@381> XINCLUDE "/Shared/common.ab3"
00004898 <common.ab3@382> XINCLUDE "/Shared/common.ab3"
0000489A <common.ab3@383> XINCLUDE "/Shared/common.ab3"
0000489C <common.ab3@384> XINCLUDE "/Shared/common.ab3"
0000489E <common.ab3@385> XINCLUDE "/Shared/common.ab3"
000048A0 <common.ab3@386> XINCLUDE "/Shared/common.ab3"
000048A2 <common.ab3@388> XINCLUDE "/Shared/common.ab3"
000048A4 <common.ab3@390> XINCLUDE "/Shared/common.ab3"
000048A6 <common.ab3@392> XINCLUDE "/Shared/common.ab3"
000048AA <common.ab3@393> XINCLUDE "/Shared/common.ab3"
000048AC <common.ab3@394> XINCLUDE "/Shared/common.ab3"
000048DA <common.ab3@395> XINCLUDE "/Shared/common.ab3"
000048E4 <common.ab3@396> XINCLUDE "/Shared/common.ab3"
000048E8 <common.ab3@397> XINCLUDE "/Shared/common.ab3"
000048EA <common.ab3@399> XINCLUDE "/Shared/common.ab3"
000048EC <common.ab3@400> XINCLUDE "/Shared/common.ab3"
000048F0 <common.ab3@401> XINCLUDE "/Shared/common.ab3"
000048F4 <common.ab3@402> XINCLUDE "/Shared/common.ab3"
000048FD <common.ab3@403> XINCLUDE "/Shared/common.ab3"
00004900 <common.ab3@404> XINCLUDE "/Shared/common.ab3"
0000492D <common.ab3@405> XINCLUDE "/Shared/common.ab3"
0000496D <common.ab3@406> XINCLUDE "/Shared/common.ab3"
00004979 <common.ab3@407> XINCLUDE "/Shared/common.ab3"
000049C9 <common.ab3@408> XINCLUDE "/Shared/common.ab3"
000049D5 <common.ab3@409> XINCLUDE "/Shared/common.ab3"
00004A25 <common.ab3@410> XINCLUDE "/Shared/common.ab3"
00004B21 <common.ab3@411> XINCLUDE "/Shared/common.ab3"
00004B23 <common.ab3@412> XINCLUDE "/Shared/common.ab3"
00004BE3 <common.ab3@413> XINCLUDE "/Shared/common.ab3"
00004C23 <common.ab3@414> XINCLUDE "/Shared/common.ab3"
00004C25 <common.ab3@415> XINCLUDE "/Shared/common.ab3"
00004C26 <common.ab3@416> XINCLUDE "/Shared/common.ab3"
00004C2A <common.ab3@419> XINCLUDE "/Shared/common.ab3"
00004C2E <common.ab3@421> XINCLUDE "/Shared/common.ab3"
00004C32 <common.ab3@422> XINCLUDE "/Shared/common.ab3"
00004C36 <common.ab3@423> XINCLUDE "/Shared/common.ab3"
00004C3A <common.ab3@425> XINCLUDE "/Shared/common.ab3"
00004C3E <common.ab3@427> XINCLUDE "/Shared/common.ab3"
00004C42 <common.ab3@428> XINCLUDE "/Shared/common.ab3"
00004C46 <common.ab3@429> XINCLUDE "/Shared/common.ab3"
00004C4A <common.ab3@430> XINCLUDE "/Shared/common.ab3"
00004C4E <common.ab3@431> XINCLUDE "/Shared/common.ab3"
00004C52 <common.ab3@432> XINCLUDE "/Shared/common.ab3"
00004C56 <common.ab3@433> XINCLUDE "/Shared/common.ab3"
00004C5A <common.ab3@434> XINCLUDE "/Shared/common.ab3"
00004C5E <common.ab3@436> XINCLUDE "/Shared/common.ab3"
00004C62 <common.ab3@438> XINCLUDE "/Shared/common.ab3"
00004C66 <common.ab3@440> XINCLUDE "/Shared/common.ab3"
00004C6A <common.ab3@442> XINCLUDE "/Shared/common.ab3"
00004C6E <common.ab3@443> XINCLUDE "/Shared/common.ab3"
00004C78 <common.ab3@444> XINCLUDE "/Shared/common.ab3"
00004C7C <common.ab3@445> XINCLUDE "/Shared/common.ab3"
00004C80 <common.ab3@448> XINCLUDE "/Shared/common.ab3"
00004C82 <common.ab3@449> XINCLUDE "/Shared/common.ab3"
00004C84 <common.ab3@450> XINCLUDE "/Shared/common.ab3"
00004CA2 <common.ab3@451> XINCLUDE "/Shared/common.ab3"
00004CA6 <common.ab3@452> XINCLUDE "/Shared/common.ab3"
00004CA8 <common.ab3@454> XINCLUDE "/Shared/common.ab3"
00004CAC <common.ab3@455> XINCLUDE "/Shared/common.ab3"
00004CE0 <common.ab3@456> XINCLUDE "/Shared/common.ab3"
00004CE4 <common.ab3@457> XINCLUDE "/Shared/common.ab3"
00004CF2 <common.ab3@459> XINCLUDE "/Shared/common.ab3"
00004D04 <common.ab3@460> XINCLUDE "/Shared/common.ab3"
00004D06 <common.ab3@461> XINCLUDE "/Shared/common.ab3"
00004D1A <common.ab3@462> XINCLUDE "/Shared/common.ab3"
00004D30 <common.ab3@463> XINCLUDE "/Shared/common.ab3"
00004D46 <common.ab3@464> XINCLUDE "/Shared/common.ab3"
00004D5C <common.ab3@465> XINCLUDE "/Shared/common.ab3"
00004D72 <common.ab3@466> XINCLUDE "/Shared/common.ab3"
00004D74 <common.ab3@467> XINCLUDE "/Shared/common.ab3"
00004D76 <common.ab3@468> XINCLUDE "/Shared/common.ab3"
00004D7A <common.ab3@470> XINCLUDE "/Shared/common.ab3"
00004D7E <common.ab3@472> XINCLUDE "/Shared/common.ab3"
00004D82 <common.ab3@474> XINCLUDE "/Shared/common.ab3"
00004D86 <common.ab3@475> XINCLUDE "/Shared/common.ab3"
00004D8A <common.ab3@476> XINCLUDE "/Shared/common.ab3"
00004D8E <common.ab3@477> XINCLUDE "/Shared/common.ab3"
00004D92 <common.ab3@478> XINCLUDE "/Shared/common.ab3"
00004D96 <common.ab3@479> XINCLUDE "/Shared/common.ab3"
00004D9A <common.ab3@480> XINCLUDE "/Shared/common.ab3"
00004D9E <common.ab3@481> XINCLUDE "/Shared/common.ab3"
00004DA4 <common.ab3@482> XINCLUDE "/Shared/common.ab3"
00004DB6 <common.ab3@483> XINCLUDE "/Shared/common.ab3"
00004DB8 <common.ab3@487> XINCLUDE "/Shared/common.ab3"
00004DBC <common.ab3@488> XINCLUDE "/Shared/common.ab3"
00004DBE <common.ab3@489> XINCLUDE "/Shared/common.ab3"
00004DC2 <common.ab3@490> XINCLUDE "/Shared/common.ab3"
00004DC4 <common.ab3@491> XINCLUDE "/Shared/common.ab3"
00004DC8 <common.ab3@492> XINCLUDE "/Shared/common.ab3"
00004DCA <common.ab3@493> XINCLUDE "/Shared/common.ab3"
00004DCE <common.ab3@494> XINCLUDE "/Shared/common.ab3"
00004DD0 <common.ab3@495> XINCLUDE "/Shared/common.ab3"
00004DD4 <common.ab3@496> XINCLUDE "/Shared/common.ab3"
00004DD6 <common.ab3@497> XINCLUDE "/Shared/common.ab3"
00004DDA <common.ab3@498> XINCLUDE "/Shared/common.ab3"
00004DDC <common.ab3@499> XINCLUDE "/Shared/common.ab3"
00004DE0 <common.ab3@500> XINCLUDE "/Shared/common.ab3"
00004DE2 <common.ab3@501> XINCLUDE "/Shared/common.ab3"
00004DE6 <common.ab3@502> XINCLUDE "/Shared/common.ab3"
00004DE8 <common.ab3@503> XINCLUDE "/Shared/common.ab3"
00004DEC <common.ab3@504> XINCLUDE "/Shared/common.ab3"
00004DEE <common.ab3@505> XINCLUDE "/Shared/common.ab3"
00004DF2 <common.ab3@506> XINCLUDE "/Shared/common.ab3"
00004DF4 <common.ab3@507> XINCLUDE "/Shared/common.ab3"
00004DF8 <common.ab3@508> XINCLUDE "/Shared/common.ab3"
00004DFA <common.ab3@509> XINCLUDE "/Shared/common.ab3"
00004DFE <common.ab3@510> XINCLUDE "/Shared/common.ab3"
00004E00 <common.ab3@511> XINCLUDE "/Shared/common.ab3"
00004E04 <common.ab3@512> XINCLUDE "/Shared/common.ab3"
00004E06 <common.ab3@513> XINCLUDE "/Shared/common.ab3"
00004E0A <common.ab3@514> XINCLUDE "/Shared/common.ab3"
00004E0C <common.ab3@515> XINCLUDE "/Shared/common.ab3"
00004E20 <common.ab3@519> XINCLUDE "/Shared/common.ab3"
00004E34 <common.ab3@520> XINCLUDE "/Shared/common.ab3"
00004E48 <common.ab3@521> XINCLUDE "/Shared/common.ab3"
00004E4A <common.ab3@522> XINCLUDE "/Shared/common.ab3"
00004E4E <common.ab3@523> XINCLUDE "/Shared/common.ab3"
00004E52 <common.ab3@524> XINCLUDE "/Shared/common.ab3"
00004E56 <common.ab3@525> XINCLUDE "/Shared/common.ab3"
00004E5A <common.ab3@526> XINCLUDE "/Shared/common.ab3"
00004E5E <common.ab3@527> XINCLUDE "/Shared/common.ab3"
00004E62 <common.ab3@528> XINCLUDE "/Shared/common.ab3"
00004E66 <common.ab3@529> XINCLUDE "/Shared/common.ab3"
00004E67 <common.ab3@530> XINCLUDE "/Shared/common.ab3"
00004E68 <common.ab3@531> XINCLUDE "/Shared/common.ab3"
00004E69 <common.ab3@532> XINCLUDE "/Shared/common.ab3"
00004E6C <common.ab3@533> XINCLUDE "/Shared/common.ab3"
00004E70 <common.ab3@534> XINCLUDE "/Shared/common.ab3"
00004E74 <common.ab3@535> XINCLUDE "/Shared/common.ab3"
00004E78 <common.ab3@536> XINCLUDE "/Shared/common.ab3"
00004E7C <common.ab3@537> XINCLUDE "/Shared/common.ab3"
00004E80 <common.ab3@538> XINCLUDE "/Shared/common.ab3"
00004E84 <common.ab3@539> XINCLUDE "/Shared/common.ab3"
00004E85 <common.ab3@540> XINCLUDE "/Shared/common.ab3"
00004E86 <common.ab3@541> XINCLUDE "/Shared/common.ab3"
00004E88 <common.ab3@542> XINCLUDE "/Shared/common.ab3"
00004E8C <common.ab3@543> XINCLUDE "/Shared/common.ab3"
00004E90 <common.ab3@544> XINCLUDE "/Shared/common.ab3"
00004E94 <common.ab3@545> XINCLUDE "/Shared/common.ab3"
00004E98 <common.ab3@547> XINCLUDE "/Shared/common.ab3"
00004E9C <common.ab3@548> XINCLUDE "/Shared/common.ab3"
00004EA0 <common.ab3@549> XINCLUDE "/Shared/common.ab3"
00004EA4 <common.ab3@550> XINCLUDE "/Shared/common.ab3"
00004EA8 <common.ab3@551> XINCLUDE "/Shared/common.ab3"
00004EAC <common.ab3@552> XINCLUDE "/Shared/common.ab3"
00004EB0 <common.ab3@553> XINCLUDE "/Shared/common.ab3"
00004EB4 <common.ab3@554> XINCLUDE "/Shared/common.ab3"
00004EB8 <common.ab3@558> XINCLUDE "/Shared/common.ab3"
00004EBC <common.ab3@559> XINCLUDE "/Shared/common.ab3"
00004EC0 <common.ab3@560> XINCLUDE "/Shared/common.ab3"
00004EC2 <common.ab3@561> XINCLUDE "/Shared/common.ab3"
00004EC3 <common.ab3@562> XINCLUDE "/Shared/common.ab3"
00004EC7 <common.ab3@563> XINCLUDE "/Shared/common.ab3"
00004ECB <common.ab3@564> XINCLUDE "/Shared/common.ab3"
00004ECF <common.ab3@565> XINCLUDE "/Shared/common.ab3"
00004ED3 <common.ab3@566> XINCLUDE "/Shared/common.ab3"
00004ED4 <common.ab3@568> XINCLUDE "/Shared/common.ab3"
00004ED8 <common.ab3@570> XINCLUDE "/Shared/common.ab3"
00004EDC <common.ab3@571> XINCLUDE "/Shared/common.ab3"
00004EE0 <common.ab3@572> XINCLUDE "/Shared/common.ab3"
00004EE4 <common.ab3@573> XINCLUDE "/Shared/common.ab3"
00004EE8 <common.ab3@574> XINCLUDE "/Shared/common.ab3"
00004EE9 <common.ab3@575> XINCLUDE "/Shared/common.ab3"
00004EEA <common.ab3@577> XINCLUDE "/Shared/common.ab3"
00004EEE <common.ab3@579> XINCLUDE "/Shared/common.ab3"
00004EF2 <common.ab3@580> XINCLUDE "/Shared/common.ab3"
00004EF4 <common.ab3@581> XINCLUDE "/Shared/common.ab3"
00004EF6 <common.ab3@582> XINCLUDE "/Shared/common.ab3"
00004EFA <common.ab3@586> XINCLUDE "/Shared/common.ab3"
00004EFE <common.ab3@587> XINCLUDE "/Shared/common.ab3"
00004F02 <common.ab3@589> XINCLUDE "/Shared/common.ab3"
00004F06 <common.ab3@590> XINCLUDE "/Shared/common.ab3"
00004F0A <common.ab3@592> XINCLUDE "/Shared/common.ab3"
00004F0E <common.ab3@593> XINCLUDE "/Shared/common.ab3"
00004F12 <common.ab3@595> XINCLUDE "/Shared/common.ab3"
00004F16 <common.ab3@596> XINCLUDE "/Shared/common.ab3"
00004F1A <common.ab3@597> XINCLUDE "/Shared/common.ab3"
00004F1E <common.ab3@598> XINCLUDE "/Shared/common.ab3"
00004F22 <common.ab3@599> XINCLUDE "/Shared/common.ab3"
00004F26 <common.ab3@600> XINCLUDE "/Shared/common.ab3"
00004F2A <common.ab3@601> XINCLUDE "/Shared/common.ab3"
00004F2E <common.ab3@602> XINCLUDE "/Shared/common.ab3"
00004F32 <common.ab3@603> XINCLUDE "/Shared/common.ab3"
00004F36 <common.ab3@604> XINCLUDE "/Shared/common.ab3"
00004F3A <common.ab3@605> XINCLUDE "/Shared/common.ab3"
00004F3E <common.ab3@606> XINCLUDE "/Shared/common.ab3"
00004F42 <common.ab3@607> XINCLUDE "/Shared/common.ab3"
00004F46 <common.ab3@608> XINCLUDE "/Shared/common.ab3"
00004F46 <AmiBlitz3.ab3@86> XINCLUDE "/Shared/common.ab3"
00004F46 <preprocessor.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F46 <hashmap.include.ab3@1> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F64 <hashmap.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F6C <hashmap.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00004F9A <hashmap.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FCA <hashmap.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FDA <hashmap.include.ab3@44> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FE4 <hashmap.include.ab3@46> XINCLUDE "/Shared/preprocessor.include.ab3"
00004FEA <hashmap.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
0000500C <hashmap.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
0000502C <hashmap.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
0000503E <hashmap.include.ab3@55> XINCLUDE "/Shared/preprocessor.include.ab3"
00005066 <hashmap.include.ab3@56> XINCLUDE "/Shared/preprocessor.include.ab3"
0000506C <hashmap.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00005086 <hashmap.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
000050A0 <hashmap.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
000050B2 <hashmap.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
000050C0 <hashmap.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
000050F4 <hashmap.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00005102 <hashmap.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
0000510C <hashmap.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
0000511E <hashmap.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00005158 <hashmap.include.ab3@71> XINCLUDE "/Shared/preprocessor.include.ab3"
00005168 <hashmap.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
0000516E <hashmap.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
0000517E <hashmap.include.ab3@75> XINCLUDE "/Shared/preprocessor.include.ab3"
0000518A <hashmap.include.ab3@77> XINCLUDE "/Shared/preprocessor.include.ab3"
00005198 <hashmap.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
000051A8 <hashmap.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
000051C8 <hashmap.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
000051D4 <hashmap.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
000051E2 <hashmap.include.ab3@84> XINCLUDE "/Shared/preprocessor.include.ab3"
000051F0 <hashmap.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
000051FE <hashmap.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
0000520C <hashmap.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
0000523E <hashmap.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
0000524C <hashmap.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
0000525C <hashmap.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00005262 <hashmap.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00005266 <hashmap.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00005280 <hashmap.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
0000529A <hashmap.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
000052B4 <hashmap.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
000052D4 <hashmap.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
000052DE <hashmap.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
000052EA <hashmap.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
000052FE <hashmap.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00005330 <hashmap.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
00005348 <hashmap.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
00005354 <hashmap.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
00005362 <hashmap.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
00005370 <hashmap.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000537A <hashmap.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00005388 <hashmap.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
000053B2 <hashmap.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
000053BC <hashmap.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000053C2 <hashmap.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000053F0 <hashmap.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000540A <hashmap.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
0000542A <hashmap.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
0000543E <hashmap.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
00005456 <hashmap.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
0000547E <hashmap.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00005498 <hashmap.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
000054A6 <hashmap.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
000054B4 <hashmap.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
000054C2 <hashmap.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
000054D6 <hashmap.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
0000552A <hashmap.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
00005554 <hashmap.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
00005598 <hashmap.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
000055B8 <hashmap.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
000055CA <hashmap.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
000055EE <hashmap.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
000055FC <hashmap.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00005654 <hashmap.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000569A <hashmap.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A0 <hashmap.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000056A6 <hashmap.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000056CE <hashmap.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
000056E0 <hashmap.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
000056F2 <hashmap.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
0000572C <hashmap.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000573C <hashmap.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00005742 <hashmap.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
00005752 <hashmap.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
00005758 <hashmap.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
0000575E <hashmap.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
00005776 <hashmap.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
000057B4 <hashmap.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000057D0 <hashmap.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
00005802 <hashmap.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00005816 <hashmap.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
0000582A <hashmap.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00005842 <hashmap.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000586A <hashmap.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
00005874 <hashmap.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00005882 <hashmap.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
0000589A <hashmap.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A0 <hashmap.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000058A8 <hashmap.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
000058C8 <hashmap.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
000058EE <hashmap.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
000058F8 <hashmap.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00005906 <hashmap.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
00005910 <hashmap.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
0000593C <hashmap.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00005950 <hashmap.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00005956 <hashmap.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00005964 <hashmap.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
0000599A <hashmap.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
000059E8 <hashmap.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A10 <hashmap.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A2A <hashmap.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A3C <hashmap.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A46 <hashmap.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A62 <hashmap.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00005A8C <hashmap.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AA8 <hashmap.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ACA <hashmap.include.ab3@215> XINCLUDE "/Shared/preprocessor.include.ab3"
00005AF8 <hashmap.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B12 <hashmap.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B3A <hashmap.include.ab3@218> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B56 <hashmap.include.ab3@219> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B72 <hashmap.include.ab3@220> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B80 <hashmap.include.ab3@221> XINCLUDE "/Shared/preprocessor.include.ab3"
00005B94 <hashmap.include.ab3@223> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BB6 <hashmap.include.ab3@224> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BD8 <hashmap.include.ab3@225> XINCLUDE "/Shared/preprocessor.include.ab3"
00005BE6 <hashmap.include.ab3@226> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C06 <hashmap.include.ab3@227> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C36 <hashmap.include.ab3@228> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C3C <hashmap.include.ab3@229> XINCLUDE "/Shared/preprocessor.include.ab3"
00005C70 <hashmap.include.ab3@230> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CB2 <hashmap.include.ab3@231> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CC2 <hashmap.include.ab3@232> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CCC <hashmap.include.ab3@233> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CDC <hashmap.include.ab3@234> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CE2 <hashmap.include.ab3@238> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CEA <hashmap.include.ab3@240> XINCLUDE "/Shared/preprocessor.include.ab3"
00005CF0 <hashmap.include.ab3@242> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D1E <hashmap.include.ab3@246> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D50 <hashmap.include.ab3@248> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D88 <hashmap.include.ab3@249> XINCLUDE "/Shared/preprocessor.include.ab3"
00005D9C <hashmap.include.ab3@250> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DB4 <hashmap.include.ab3@251> XINCLUDE "/Shared/preprocessor.include.ab3"
00005DDC <hashmap.include.ab3@252> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E0E <hashmap.include.ab3@253> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E2A <hashmap.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E38 <hashmap.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00005E4C <hashmap.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00005EA0 <hashmap.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00005ECA <hashmap.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F0E <hashmap.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F34 <hashmap.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F3A <hashmap.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F58 <hashmap.include.ab3@264> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F76 <hashmap.include.ab3@266> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F94 <hashmap.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00005F9A <hashmap.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FBC <hashmap.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00005FEA <hashmap.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00006012 <hashmap.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00006036 <hashmap.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
0000608C <hashmap.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
000060DE <hashmap.include.ab3@314> XINCLUDE "/Shared/preprocessor.include.ab3"
00006134 <hashmap.include.ab3@315> XINCLUDE "/Shared/preprocessor.include.ab3"
00006144 <hashmap.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
00006196 <hashmap.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
000061BE <hashmap.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
000061E4 <hashmap.include.ab3@321> XINCLUDE "/Shared/preprocessor.include.ab3"
00006200 <hashmap.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00006208 <hashmap.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
00006230 <hashmap.include.ab3@324> XINCLUDE "/Shared/preprocessor.include.ab3"
0000625E <hashmap.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
00006286 <hashmap.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
0000628E <hashmap.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000062B2 <hashmap.include.ab3@330> XINCLUDE "/Shared/preprocessor.include.ab3"
000062E6 <hashmap.include.ab3@332> XINCLUDE "/Shared/preprocessor.include.ab3"
00006302 <hashmap.include.ab3@333> XINCLUDE "/Shared/preprocessor.include.ab3"
0000630C <hashmap.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
00006320 <hashmap.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
00006340 <hashmap.include.ab3@336> XINCLUDE "/Shared/preprocessor.include.ab3"
0000635C <hashmap.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
0000636A <hashmap.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00006378 <hashmap.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
0000637E <hashmap.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00006396 <hashmap.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
000063A6 <hashmap.include.ab3@343> XINCLUDE "/Shared/preprocessor.include.ab3"
000063D4 <hashmap.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00006430 <hashmap.include.ab3@345> XINCLUDE "/Shared/preprocessor.include.ab3"
000064A6 <hashmap.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
00006502 <hashmap.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
00006508 <hashmap.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
00006512 <hashmap.include.ab3@351> XINCLUDE "/Shared/preprocessor.include.ab3"
00006518 <hashmap.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00006546 <hashmap.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
0000654C <hashmap.include.ab3@359> XINCLUDE "/Shared/preprocessor.include.ab3"
0000656C <hashmap.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
00006576 <hashmap.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
00006588 <hashmap.include.ab3@362> XINCLUDE "/Shared/preprocessor.include.ab3"
00006598 <hashmap.include.ab3@363> XINCLUDE "/Shared/preprocessor.include.ab3"
000065A2 <hashmap.include.ab3@366> XINCLUDE "/Shared/preprocessor.include.ab3"
000065BC <hashmap.include.ab3@368> XINCLUDE "/Shared/preprocessor.include.ab3"
000065D6 <hashmap.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
000065DC <hashmap.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
000065E2 <hashmap.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000065EC <hashmap.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000065F4 <hashmap.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
0000661C <hashmap.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
00006622 <hashmap.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
00006636 <hashmap.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
00006672 <hashmap.include.ab3@382> XINCLUDE "/Shared/preprocessor.include.ab3"
00006698 <hashmap.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
000066A6 <hashmap.include.ab3@384> XINCLUDE "/Shared/preprocessor.include.ab3"
000066E2 <hashmap.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
000066F6 <hashmap.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00006732 <hashmap.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
00006748 <hashmap.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
0000675C <hashmap.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
00006766 <hashmap.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
0000678A <hashmap.include.ab3@394> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C2 <hashmap.include.ab3@395> XINCLUDE "/Shared/preprocessor.include.ab3"
000067C8 <hashmap.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
000067D0 <hashmap.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
000067E4 <hashmap.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
000067EE <hashmap.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00006816 <hashmap.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
0000683E <hashmap.include.ab3@403> XINCLUDE "/Shared/preprocessor.include.ab3"
00006850 <hashmap.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000687C <hashmap.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
000068B0 <hashmap.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
000068DC <hashmap.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
00006928 <hashmap.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
00006938 <hashmap.include.ab3@410> XINCLUDE "/Shared/preprocessor.include.ab3"
0000693E <hashmap.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
00006946 <hashmap.include.ab3@413> XINCLUDE "/Shared/preprocessor.include.ab3"
00006974 <hashmap.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00006976 <hashmap.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
0000697C <hashmap.include.ab3@419> XINCLUDE "/Shared/preprocessor.include.ab3"
00006986 <hashmap.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
000069B0 <hashmap.include.ab3@422> XINCLUDE "/Shared/preprocessor.include.ab3"
000069BA <hashmap.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000069C0 <hashmap.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000069EA <hashmap.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
000069F0 <hashmap.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A10 <hashmap.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A1A <hashmap.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A28 <hashmap.include.ab3@436> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A38 <hashmap.include.ab3@437> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A42 <hashmap.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <hashmap.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A5C <preprocessor.include.ab3@11> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A76 <preprocessor.include.ab3@31> XINCLUDE "/Shared/preprocessor.include.ab3"
00006A90 <preprocessor.include.ab3@32> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AB2 <preprocessor.include.ab3@33> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE4 <preprocessor.include.ab3@34> XINCLUDE "/Shared/preprocessor.include.ab3"
00006AE8 <preprocessor.include.ab3@35> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B02 <preprocessor.include.ab3@39> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B1C <preprocessor.include.ab3@40> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B26 <preprocessor.include.ab3@41> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B3C <preprocessor.include.ab3@42> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B40 <preprocessor.include.ab3@43> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B5A <preprocessor.include.ab3@47> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B74 <preprocessor.include.ab3@48> XINCLUDE "/Shared/preprocessor.include.ab3"
00006B8E <preprocessor.include.ab3@49> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB2 <preprocessor.include.ab3@50> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BB8 <preprocessor.include.ab3@51> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BE2 <preprocessor.include.ab3@52> XINCLUDE "/Shared/preprocessor.include.ab3"
00006BFC <preprocessor.include.ab3@53> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C0C <preprocessor.include.ab3@54> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C16 <preprocessor.include.ab3@57> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C24 <preprocessor.include.ab3@58> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C46 <preprocessor.include.ab3@59> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C7A <preprocessor.include.ab3@60> XINCLUDE "/Shared/preprocessor.include.ab3"
00006C96 <preprocessor.include.ab3@61> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CA0 <preprocessor.include.ab3@62> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CBC <preprocessor.include.ab3@63> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CCA <preprocessor.include.ab3@64> XINCLUDE "/Shared/preprocessor.include.ab3"
00006CDE <preprocessor.include.ab3@65> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D00 <preprocessor.include.ab3@66> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D22 <preprocessor.include.ab3@67> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D40 <preprocessor.include.ab3@68> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D6E <preprocessor.include.ab3@69> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D74 <preprocessor.include.ab3@70> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D84 <preprocessor.include.ab3@72> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D88 <preprocessor.include.ab3@74> XINCLUDE "/Shared/preprocessor.include.ab3"
00006D9E <preprocessor.include.ab3@78> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DBE <preprocessor.include.ab3@79> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DC8 <preprocessor.include.ab3@80> XINCLUDE "/Shared/preprocessor.include.ab3"
00006DF2 <preprocessor.include.ab3@81> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E08 <preprocessor.include.ab3@82> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E18 <preprocessor.include.ab3@83> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E34 <preprocessor.include.ab3@85> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E50 <preprocessor.include.ab3@86> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E6C <preprocessor.include.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00006E88 <preprocessor.include.ab3@88> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EA4 <preprocessor.include.ab3@89> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EC0 <preprocessor.include.ab3@90> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EDC <preprocessor.include.ab3@91> XINCLUDE "/Shared/preprocessor.include.ab3"
00006EF8 <preprocessor.include.ab3@92> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F14 <preprocessor.include.ab3@93> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F30 <preprocessor.include.ab3@94> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F4C <preprocessor.include.ab3@95> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F68 <preprocessor.include.ab3@96> XINCLUDE "/Shared/preprocessor.include.ab3"
00006F84 <preprocessor.include.ab3@97> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FA0 <preprocessor.include.ab3@98> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FBC <preprocessor.include.ab3@99> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FD8 <preprocessor.include.ab3@100> XINCLUDE "/Shared/preprocessor.include.ab3"
00006FF4 <preprocessor.include.ab3@101> XINCLUDE "/Shared/preprocessor.include.ab3"
00007010 <preprocessor.include.ab3@102> XINCLUDE "/Shared/preprocessor.include.ab3"
0000702C <preprocessor.include.ab3@103> XINCLUDE "/Shared/preprocessor.include.ab3"
00007048 <preprocessor.include.ab3@104> XINCLUDE "/Shared/preprocessor.include.ab3"
00007064 <preprocessor.include.ab3@105> XINCLUDE "/Shared/preprocessor.include.ab3"
00007080 <preprocessor.include.ab3@106> XINCLUDE "/Shared/preprocessor.include.ab3"
0000709C <preprocessor.include.ab3@107> XINCLUDE "/Shared/preprocessor.include.ab3"
000070B8 <preprocessor.include.ab3@108> XINCLUDE "/Shared/preprocessor.include.ab3"
000070D4 <preprocessor.include.ab3@109> XINCLUDE "/Shared/preprocessor.include.ab3"
000070F0 <preprocessor.include.ab3@110> XINCLUDE "/Shared/preprocessor.include.ab3"
0000710C <preprocessor.include.ab3@111> XINCLUDE "/Shared/preprocessor.include.ab3"
00007128 <preprocessor.include.ab3@112> XINCLUDE "/Shared/preprocessor.include.ab3"
00007144 <preprocessor.include.ab3@113> XINCLUDE "/Shared/preprocessor.include.ab3"
00007160 <preprocessor.include.ab3@114> XINCLUDE "/Shared/preprocessor.include.ab3"
0000717C <preprocessor.include.ab3@115> XINCLUDE "/Shared/preprocessor.include.ab3"
00007198 <preprocessor.include.ab3@116> XINCLUDE "/Shared/preprocessor.include.ab3"
000071B4 <preprocessor.include.ab3@117> XINCLUDE "/Shared/preprocessor.include.ab3"
000071D0 <preprocessor.include.ab3@118> XINCLUDE "/Shared/preprocessor.include.ab3"
000071EC <preprocessor.include.ab3@119> XINCLUDE "/Shared/preprocessor.include.ab3"
00007208 <preprocessor.include.ab3@120> XINCLUDE "/Shared/preprocessor.include.ab3"
00007224 <preprocessor.include.ab3@121> XINCLUDE "/Shared/preprocessor.include.ab3"
00007240 <preprocessor.include.ab3@122> XINCLUDE "/Shared/preprocessor.include.ab3"
0000725C <preprocessor.include.ab3@123> XINCLUDE "/Shared/preprocessor.include.ab3"
00007278 <preprocessor.include.ab3@124> XINCLUDE "/Shared/preprocessor.include.ab3"
00007294 <preprocessor.include.ab3@125> XINCLUDE "/Shared/preprocessor.include.ab3"
000072B0 <preprocessor.include.ab3@126> XINCLUDE "/Shared/preprocessor.include.ab3"
000072CC <preprocessor.include.ab3@127> XINCLUDE "/Shared/preprocessor.include.ab3"
000072E8 <preprocessor.include.ab3@128> XINCLUDE "/Shared/preprocessor.include.ab3"
00007304 <preprocessor.include.ab3@129> XINCLUDE "/Shared/preprocessor.include.ab3"
00007320 <preprocessor.include.ab3@130> XINCLUDE "/Shared/preprocessor.include.ab3"
0000733C <preprocessor.include.ab3@131> XINCLUDE "/Shared/preprocessor.include.ab3"
00007358 <preprocessor.include.ab3@132> XINCLUDE "/Shared/preprocessor.include.ab3"
00007374 <preprocessor.include.ab3@133> XINCLUDE "/Shared/preprocessor.include.ab3"
00007390 <preprocessor.include.ab3@134> XINCLUDE "/Shared/preprocessor.include.ab3"
000073AC <preprocessor.include.ab3@135> XINCLUDE "/Shared/preprocessor.include.ab3"
000073C8 <preprocessor.include.ab3@136> XINCLUDE "/Shared/preprocessor.include.ab3"
000073E4 <preprocessor.include.ab3@137> XINCLUDE "/Shared/preprocessor.include.ab3"
00007400 <preprocessor.include.ab3@138> XINCLUDE "/Shared/preprocessor.include.ab3"
0000741C <preprocessor.include.ab3@139> XINCLUDE "/Shared/preprocessor.include.ab3"
00007438 <preprocessor.include.ab3@140> XINCLUDE "/Shared/preprocessor.include.ab3"
00007454 <preprocessor.include.ab3@141> XINCLUDE "/Shared/preprocessor.include.ab3"
00007470 <preprocessor.include.ab3@142> XINCLUDE "/Shared/preprocessor.include.ab3"
0000748C <preprocessor.include.ab3@143> XINCLUDE "/Shared/preprocessor.include.ab3"
000074A8 <preprocessor.include.ab3@144> XINCLUDE "/Shared/preprocessor.include.ab3"
000074C4 <preprocessor.include.ab3@145> XINCLUDE "/Shared/preprocessor.include.ab3"
000074E0 <preprocessor.include.ab3@146> XINCLUDE "/Shared/preprocessor.include.ab3"
000074FC <preprocessor.include.ab3@147> XINCLUDE "/Shared/preprocessor.include.ab3"
00007518 <preprocessor.include.ab3@148> XINCLUDE "/Shared/preprocessor.include.ab3"
00007534 <preprocessor.include.ab3@149> XINCLUDE "/Shared/preprocessor.include.ab3"
00007550 <preprocessor.include.ab3@150> XINCLUDE "/Shared/preprocessor.include.ab3"
0000756C <preprocessor.include.ab3@151> XINCLUDE "/Shared/preprocessor.include.ab3"
00007588 <preprocessor.include.ab3@152> XINCLUDE "/Shared/preprocessor.include.ab3"
000075A4 <preprocessor.include.ab3@153> XINCLUDE "/Shared/preprocessor.include.ab3"
000075C0 <preprocessor.include.ab3@154> XINCLUDE "/Shared/preprocessor.include.ab3"
000075DC <preprocessor.include.ab3@155> XINCLUDE "/Shared/preprocessor.include.ab3"
000075F8 <preprocessor.include.ab3@156> XINCLUDE "/Shared/preprocessor.include.ab3"
00007614 <preprocessor.include.ab3@157> XINCLUDE "/Shared/preprocessor.include.ab3"
00007630 <preprocessor.include.ab3@158> XINCLUDE "/Shared/preprocessor.include.ab3"
0000764C <preprocessor.include.ab3@159> XINCLUDE "/Shared/preprocessor.include.ab3"
00007668 <preprocessor.include.ab3@160> XINCLUDE "/Shared/preprocessor.include.ab3"
00007684 <preprocessor.include.ab3@161> XINCLUDE "/Shared/preprocessor.include.ab3"
000076A0 <preprocessor.include.ab3@162> XINCLUDE "/Shared/preprocessor.include.ab3"
000076BC <preprocessor.include.ab3@163> XINCLUDE "/Shared/preprocessor.include.ab3"
000076D8 <preprocessor.include.ab3@164> XINCLUDE "/Shared/preprocessor.include.ab3"
000076F4 <preprocessor.include.ab3@165> XINCLUDE "/Shared/preprocessor.include.ab3"
00007710 <preprocessor.include.ab3@166> XINCLUDE "/Shared/preprocessor.include.ab3"
0000772C <preprocessor.include.ab3@167> XINCLUDE "/Shared/preprocessor.include.ab3"
00007748 <preprocessor.include.ab3@168> XINCLUDE "/Shared/preprocessor.include.ab3"
00007764 <preprocessor.include.ab3@169> XINCLUDE "/Shared/preprocessor.include.ab3"
00007780 <preprocessor.include.ab3@170> XINCLUDE "/Shared/preprocessor.include.ab3"
0000779C <preprocessor.include.ab3@171> XINCLUDE "/Shared/preprocessor.include.ab3"
000077B8 <preprocessor.include.ab3@172> XINCLUDE "/Shared/preprocessor.include.ab3"
000077D4 <preprocessor.include.ab3@173> XINCLUDE "/Shared/preprocessor.include.ab3"
000077F0 <preprocessor.include.ab3@174> XINCLUDE "/Shared/preprocessor.include.ab3"
0000780C <preprocessor.include.ab3@175> XINCLUDE "/Shared/preprocessor.include.ab3"
00007828 <preprocessor.include.ab3@176> XINCLUDE "/Shared/preprocessor.include.ab3"
00007844 <preprocessor.include.ab3@177> XINCLUDE "/Shared/preprocessor.include.ab3"
00007860 <preprocessor.include.ab3@178> XINCLUDE "/Shared/preprocessor.include.ab3"
0000787C <preprocessor.include.ab3@179> XINCLUDE "/Shared/preprocessor.include.ab3"
00007898 <preprocessor.include.ab3@180> XINCLUDE "/Shared/preprocessor.include.ab3"
000078B4 <preprocessor.include.ab3@181> XINCLUDE "/Shared/preprocessor.include.ab3"
000078D0 <preprocessor.include.ab3@182> XINCLUDE "/Shared/preprocessor.include.ab3"
000078EC <preprocessor.include.ab3@183> XINCLUDE "/Shared/preprocessor.include.ab3"
00007908 <preprocessor.include.ab3@184> XINCLUDE "/Shared/preprocessor.include.ab3"
00007924 <preprocessor.include.ab3@185> XINCLUDE "/Shared/preprocessor.include.ab3"
00007940 <preprocessor.include.ab3@186> XINCLUDE "/Shared/preprocessor.include.ab3"
0000795C <preprocessor.include.ab3@187> XINCLUDE "/Shared/preprocessor.include.ab3"
00007978 <preprocessor.include.ab3@188> XINCLUDE "/Shared/preprocessor.include.ab3"
00007994 <preprocessor.include.ab3@189> XINCLUDE "/Shared/preprocessor.include.ab3"
000079B0 <preprocessor.include.ab3@190> XINCLUDE "/Shared/preprocessor.include.ab3"
000079CC <preprocessor.include.ab3@191> XINCLUDE "/Shared/preprocessor.include.ab3"
000079E8 <preprocessor.include.ab3@192> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A04 <preprocessor.include.ab3@193> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A20 <preprocessor.include.ab3@194> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A3C <preprocessor.include.ab3@195> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A58 <preprocessor.include.ab3@196> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A74 <preprocessor.include.ab3@197> XINCLUDE "/Shared/preprocessor.include.ab3"
00007A90 <preprocessor.include.ab3@198> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AAC <preprocessor.include.ab3@199> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AC8 <preprocessor.include.ab3@200> XINCLUDE "/Shared/preprocessor.include.ab3"
00007AE4 <preprocessor.include.ab3@201> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B00 <preprocessor.include.ab3@202> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B1C <preprocessor.include.ab3@203> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B38 <preprocessor.include.ab3@204> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B54 <preprocessor.include.ab3@205> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B70 <preprocessor.include.ab3@206> XINCLUDE "/Shared/preprocessor.include.ab3"
00007B8C <preprocessor.include.ab3@207> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BA8 <preprocessor.include.ab3@208> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BC4 <preprocessor.include.ab3@209> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BE0 <preprocessor.include.ab3@210> XINCLUDE "/Shared/preprocessor.include.ab3"
00007BFC <preprocessor.include.ab3@211> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C18 <preprocessor.include.ab3@212> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C20 <preprocessor.include.ab3@213> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C2A <preprocessor.include.ab3@214> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C34 <preprocessor.include.ab3@216> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C3A <preprocessor.include.ab3@217> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C68 <preprocessor.include.ab3@254> XINCLUDE "/Shared/preprocessor.include.ab3"
00007C84 <preprocessor.include.ab3@255> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CB6 <preprocessor.include.ab3@256> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CC0 <preprocessor.include.ab3@257> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CE2 <preprocessor.include.ab3@258> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CEC <preprocessor.include.ab3@259> XINCLUDE "/Shared/preprocessor.include.ab3"
00007CF6 <preprocessor.include.ab3@260> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D00 <preprocessor.include.ab3@262> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D1A <preprocessor.include.ab3@263> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D48 <preprocessor.include.ab3@267> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D64 <preprocessor.include.ab3@268> XINCLUDE "/Shared/preprocessor.include.ab3"
00007D72 <preprocessor.include.ab3@269> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DAC <preprocessor.include.ab3@270> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DB4 <preprocessor.include.ab3@272> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DCE <preprocessor.include.ab3@273> XINCLUDE "/Shared/preprocessor.include.ab3"
00007DF4 <preprocessor.include.ab3@280> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E16 <preprocessor.include.ab3@281> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E3A <preprocessor.include.ab3@282> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E40 <preprocessor.include.ab3@283> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E4E <preprocessor.include.ab3@284> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E54 <preprocessor.include.ab3@285> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E5C <preprocessor.include.ab3@286> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E62 <preprocessor.include.ab3@287> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E6A <preprocessor.include.ab3@288> XINCLUDE "/Shared/preprocessor.include.ab3"
00007E7E <preprocessor.include.ab3@290> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EA4 <preprocessor.include.ab3@291> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ECC <preprocessor.include.ab3@292> XINCLUDE "/Shared/preprocessor.include.ab3"
00007ED6 <preprocessor.include.ab3@294> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EEA <preprocessor.include.ab3@295> XINCLUDE "/Shared/preprocessor.include.ab3"
00007EFE <preprocessor.include.ab3@296> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F0E <preprocessor.include.ab3@297> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F28 <preprocessor.include.ab3@298> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F56 <preprocessor.include.ab3@299> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F6A <preprocessor.include.ab3@300> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F92 <preprocessor.include.ab3@301> XINCLUDE "/Shared/preprocessor.include.ab3"
00007F98 <preprocessor.include.ab3@302> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA0 <preprocessor.include.ab3@303> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FA6 <preprocessor.include.ab3@305> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FCE <preprocessor.include.ab3@306> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FD8 <preprocessor.include.ab3@308> XINCLUDE "/Shared/preprocessor.include.ab3"
00007FE6 <preprocessor.include.ab3@309> XINCLUDE "/Shared/preprocessor.include.ab3"
00008004 <preprocessor.include.ab3@310> XINCLUDE "/Shared/preprocessor.include.ab3"
00008012 <preprocessor.include.ab3@311> XINCLUDE "/Shared/preprocessor.include.ab3"
0000801A <preprocessor.include.ab3@312> XINCLUDE "/Shared/preprocessor.include.ab3"
00008020 <preprocessor.include.ab3@313> XINCLUDE "/Shared/preprocessor.include.ab3"
00008034 <preprocessor.include.ab3@317> XINCLUDE "/Shared/preprocessor.include.ab3"
0000803E <preprocessor.include.ab3@318> XINCLUDE "/Shared/preprocessor.include.ab3"
0000804C <preprocessor.include.ab3@319> XINCLUDE "/Shared/preprocessor.include.ab3"
00008066 <preprocessor.include.ab3@320> XINCLUDE "/Shared/preprocessor.include.ab3"
0000806C <preprocessor.include.ab3@322> XINCLUDE "/Shared/preprocessor.include.ab3"
00008074 <preprocessor.include.ab3@323> XINCLUDE "/Shared/preprocessor.include.ab3"
0000807A <preprocessor.include.ab3@325> XINCLUDE "/Shared/preprocessor.include.ab3"
0000808E <preprocessor.include.ab3@326> XINCLUDE "/Shared/preprocessor.include.ab3"
00008098 <preprocessor.include.ab3@327> XINCLUDE "/Shared/preprocessor.include.ab3"
000080A0 <preprocessor.include.ab3@328> XINCLUDE "/Shared/preprocessor.include.ab3"
000080B4 <preprocessor.include.ab3@329> XINCLUDE "/Shared/preprocessor.include.ab3"
000080C8 <preprocessor.include.ab3@334> XINCLUDE "/Shared/preprocessor.include.ab3"
000080DC <preprocessor.include.ab3@335> XINCLUDE "/Shared/preprocessor.include.ab3"
000080FA <preprocessor.include.ab3@337> XINCLUDE "/Shared/preprocessor.include.ab3"
00008108 <preprocessor.include.ab3@338> XINCLUDE "/Shared/preprocessor.include.ab3"
00008118 <preprocessor.include.ab3@339> XINCLUDE "/Shared/preprocessor.include.ab3"
00008140 <preprocessor.include.ab3@340> XINCLUDE "/Shared/preprocessor.include.ab3"
00008162 <preprocessor.include.ab3@341> XINCLUDE "/Shared/preprocessor.include.ab3"
00008176 <preprocessor.include.ab3@344> XINCLUDE "/Shared/preprocessor.include.ab3"
00008194 <preprocessor.include.ab3@346> XINCLUDE "/Shared/preprocessor.include.ab3"
000081A2 <preprocessor.include.ab3@347> XINCLUDE "/Shared/preprocessor.include.ab3"
000081C8 <preprocessor.include.ab3@348> XINCLUDE "/Shared/preprocessor.include.ab3"
000081F0 <preprocessor.include.ab3@349> XINCLUDE "/Shared/preprocessor.include.ab3"
00008212 <preprocessor.include.ab3@350> XINCLUDE "/Shared/preprocessor.include.ab3"
00008242 <preprocessor.include.ab3@353> XINCLUDE "/Shared/preprocessor.include.ab3"
00008270 <preprocessor.include.ab3@357> XINCLUDE "/Shared/preprocessor.include.ab3"
000082A2 <preprocessor.include.ab3@358> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B0 <preprocessor.include.ab3@360> XINCLUDE "/Shared/preprocessor.include.ab3"
000082B6 <preprocessor.include.ab3@361> XINCLUDE "/Shared/preprocessor.include.ab3"
000082C6 <preprocessor.include.ab3@364> XINCLUDE "/Shared/preprocessor.include.ab3"
000082CC <preprocessor.include.ab3@365> XINCLUDE "/Shared/preprocessor.include.ab3"
000082F2 <preprocessor.include.ab3@369> XINCLUDE "/Shared/preprocessor.include.ab3"
00008314 <preprocessor.include.ab3@370> XINCLUDE "/Shared/preprocessor.include.ab3"
0000833C <preprocessor.include.ab3@371> XINCLUDE "/Shared/preprocessor.include.ab3"
0000835C <preprocessor.include.ab3@372> XINCLUDE "/Shared/preprocessor.include.ab3"
0000837E <preprocessor.include.ab3@373> XINCLUDE "/Shared/preprocessor.include.ab3"
00008384 <preprocessor.include.ab3@374> XINCLUDE "/Shared/preprocessor.include.ab3"
00008392 <preprocessor.include.ab3@375> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A0 <preprocessor.include.ab3@376> XINCLUDE "/Shared/preprocessor.include.ab3"
000083A6 <preprocessor.include.ab3@377> XINCLUDE "/Shared/preprocessor.include.ab3"
000083AE <preprocessor.include.ab3@378> XINCLUDE "/Shared/preprocessor.include.ab3"
000083CC <preprocessor.include.ab3@379> XINCLUDE "/Shared/preprocessor.include.ab3"
000083E0 <preprocessor.include.ab3@380> XINCLUDE "/Shared/preprocessor.include.ab3"
000083F0 <preprocessor.include.ab3@381> XINCLUDE "/Shared/preprocessor.include.ab3"
00008406 <preprocessor.include.ab3@383> XINCLUDE "/Shared/preprocessor.include.ab3"
0000841E <preprocessor.include.ab3@385> XINCLUDE "/Shared/preprocessor.include.ab3"
0000843A <preprocessor.include.ab3@386> XINCLUDE "/Shared/preprocessor.include.ab3"
00008444 <preprocessor.include.ab3@387> XINCLUDE "/Shared/preprocessor.include.ab3"
00008460 <preprocessor.include.ab3@388> XINCLUDE "/Shared/preprocessor.include.ab3"
00008472 <preprocessor.include.ab3@389> XINCLUDE "/Shared/preprocessor.include.ab3"
000084A0 <preprocessor.include.ab3@390> XINCLUDE "/Shared/preprocessor.include.ab3"
000084DC <preprocessor.include.ab3@391> XINCLUDE "/Shared/preprocessor.include.ab3"
000084EC <preprocessor.include.ab3@392> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F2 <preprocessor.include.ab3@393> XINCLUDE "/Shared/preprocessor.include.ab3"
000084F8 <preprocessor.include.ab3@396> XINCLUDE "/Shared/preprocessor.include.ab3"
00008510 <preprocessor.include.ab3@397> XINCLUDE "/Shared/preprocessor.include.ab3"
00008520 <preprocessor.include.ab3@398> XINCLUDE "/Shared/preprocessor.include.ab3"
000085A6 <preprocessor.include.ab3@399> XINCLUDE "/Shared/preprocessor.include.ab3"
000085E0 <preprocessor.include.ab3@400> XINCLUDE "/Shared/preprocessor.include.ab3"
00008616 <preprocessor.include.ab3@401> XINCLUDE "/Shared/preprocessor.include.ab3"
00008626 <preprocessor.include.ab3@402> XINCLUDE "/Shared/preprocessor.include.ab3"
00008634 <preprocessor.include.ab3@404> XINCLUDE "/Shared/preprocessor.include.ab3"
0000863A <preprocessor.include.ab3@405> XINCLUDE "/Shared/preprocessor.include.ab3"
0000864A <preprocessor.include.ab3@406> XINCLUDE "/Shared/preprocessor.include.ab3"
00008674 <preprocessor.include.ab3@407> XINCLUDE "/Shared/preprocessor.include.ab3"
0000867A <preprocessor.include.ab3@408> XINCLUDE "/Shared/preprocessor.include.ab3"
000086A6 <preprocessor.include.ab3@409> XINCLUDE "/Shared/preprocessor.include.ab3"
000086B6 <preprocessor.include.ab3@412> XINCLUDE "/Shared/preprocessor.include.ab3"
000086C6 <preprocessor.include.ab3@414> XINCLUDE "/Shared/preprocessor.include.ab3"
000086E4 <preprocessor.include.ab3@415> XINCLUDE "/Shared/preprocessor.include.ab3"
000086F2 <preprocessor.include.ab3@416> XINCLUDE "/Shared/preprocessor.include.ab3"
00008728 <preprocessor.include.ab3@417> XINCLUDE "/Shared/preprocessor.include.ab3"
0000874C <preprocessor.include.ab3@418> XINCLUDE "/Shared/preprocessor.include.ab3"
00008760 <preprocessor.include.ab3@421> XINCLUDE "/Shared/preprocessor.include.ab3"
00008770 <preprocessor.include.ab3@423> XINCLUDE "/Shared/preprocessor.include.ab3"
0000878E <preprocessor.include.ab3@424> XINCLUDE "/Shared/preprocessor.include.ab3"
0000879C <preprocessor.include.ab3@425> XINCLUDE "/Shared/preprocessor.include.ab3"
000087C0 <preprocessor.include.ab3@426> XINCLUDE "/Shared/preprocessor.include.ab3"
000087E4 <preprocessor.include.ab3@427> XINCLUDE "/Shared/preprocessor.include.ab3"
000087F2 <preprocessor.include.ab3@431> XINCLUDE "/Shared/preprocessor.include.ab3"
00008800 <preprocessor.include.ab3@432> XINCLUDE "/Shared/preprocessor.include.ab3"
00008820 <preprocessor.include.ab3@433> XINCLUDE "/Shared/preprocessor.include.ab3"
0000882E <preprocessor.include.ab3@434> XINCLUDE "/Shared/preprocessor.include.ab3"
00008834 <preprocessor.include.ab3@435> XINCLUDE "/Shared/preprocessor.include.ab3"
0000883A <preprocessor.include.ab3@438> XINCLUDE "/Shared/preprocessor.include.ab3"
00008848 <preprocessor.include.ab3@440> XINCLUDE "/Shared/preprocessor.include.ab3"
00008856 <preprocessor.include.ab3@441> XINCLUDE "/Shared/preprocessor.include.ab3"
00008876 <preprocessor.include.ab3@442> XINCLUDE "/Shared/preprocessor.include.ab3"
00008884 <preprocessor.include.ab3@443> XINCLUDE "/Shared/preprocessor.include.ab3"
0000888A <preprocessor.include.ab3@444> XINCLUDE "/Shared/preprocessor.include.ab3"
0000889A <preprocessor.include.ab3@449> XINCLUDE "/Shared/preprocessor.include.ab3"
000088A4 <preprocessor.include.ab3@451> XINCLUDE "/Shared/preprocessor.include.ab3"
000088B8 <preprocessor.include.ab3@452> XINCLUDE "/Shared/preprocessor.include.ab3"
000088DE <preprocessor.include.ab3@456> XINCLUDE "/Shared/preprocessor.include.ab3"
00008900 <preprocessor.include.ab3@457> XINCLUDE "/Shared/preprocessor.include.ab3"
00008928 <preprocessor.include.ab3@458> XINCLUDE "/Shared/preprocessor.include.ab3"
0000892E <preprocessor.include.ab3@459> XINCLUDE "/Shared/preprocessor.include.ab3"
0000893C <preprocessor.include.ab3@460> XINCLUDE "/Shared/preprocessor.include.ab3"
00008942 <preprocessor.include.ab3@461> XINCLUDE "/Shared/preprocessor.include.ab3"
00008956 <preprocessor.include.ab3@462> XINCLUDE "/Shared/preprocessor.include.ab3"
00008966 <preprocessor.include.ab3@463> XINCLUDE "/Shared/preprocessor.include.ab3"
0000897C <preprocessor.include.ab3@465> XINCLUDE "/Shared/preprocessor.include.ab3"
00008994 <preprocessor.include.ab3@467> XINCLUDE "/Shared/preprocessor.include.ab3"
000089B0 <preprocessor.include.ab3@468> XINCLUDE "/Shared/preprocessor.include.ab3"
000089BA <preprocessor.include.ab3@469> XINCLUDE "/Shared/preprocessor.include.ab3"
000089D6 <preprocessor.include.ab3@470> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A04 <preprocessor.include.ab3@471> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A40 <preprocessor.include.ab3@472> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A50 <preprocessor.include.ab3@473> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A5E <preprocessor.include.ab3@475> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A64 <preprocessor.include.ab3@476> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A74 <preprocessor.include.ab3@477> XINCLUDE "/Shared/preprocessor.include.ab3"
00008A9E <preprocessor.include.ab3@478> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AA4 <preprocessor.include.ab3@479> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AD0 <preprocessor.include.ab3@480> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AE0 <preprocessor.include.ab3@482> XINCLUDE "/Shared/preprocessor.include.ab3"
00008AF0 <preprocessor.include.ab3@484> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B0E <preprocessor.include.ab3@485> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B1C <preprocessor.include.ab3@486> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B52 <preprocessor.include.ab3@487> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B76 <preprocessor.include.ab3@488> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B8A <preprocessor.include.ab3@491> XINCLUDE "/Shared/preprocessor.include.ab3"
00008B9A <preprocessor.include.ab3@493> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BB8 <preprocessor.include.ab3@494> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BC6 <preprocessor.include.ab3@495> XINCLUDE "/Shared/preprocessor.include.ab3"
00008BEA <preprocessor.include.ab3@496> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C0E <preprocessor.include.ab3@497> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C14 <preprocessor.include.ab3@501> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C24 <preprocessor.include.ab3@502> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C2A <preprocessor.include.ab3@503> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C4C <preprocessor.include.ab3@507> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C54 <preprocessor.include.ab3@508> XINCLUDE "/Shared/preprocessor.include.ab3"
00008C8A <preprocessor.include.ab3@509> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CA6 <preprocessor.include.ab3@510> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CAC <preprocessor.include.ab3@511> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CE2 <preprocessor.include.ab3@515> XINCLUDE "/Shared/preprocessor.include.ab3"
00008CFE <preprocessor.include.ab3@516> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D26 <preprocessor.include.ab3@517> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D44 <preprocessor.include.ab3@518> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D62 <preprocessor.include.ab3@519> XINCLUDE "/Shared/preprocessor.include.ab3"
00008D90 <preprocessor.include.ab3@520> XINCLUDE "/Shared/preprocessor.include.ab3"
00008DF2 <preprocessor.include.ab3@521> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E0C <preprocessor.include.ab3@522> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E26 <preprocessor.include.ab3@526> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E30 <preprocessor.include.ab3@527> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E6E <preprocessor.include.ab3@528> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E72 <preprocessor.include.ab3@529> XINCLUDE "/Shared/preprocessor.include.ab3"
00008E7C <preprocessor.include.ab3@531> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EAA <preprocessor.include.ab3@532> XINCLUDE "/Shared/preprocessor.include.ab3"
00008ECA <preprocessor.include.ab3@533> XINCLUDE "/Shared/preprocessor.include.ab3"
00008EE2 <preprocessor.include.ab3@534> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F40 <preprocessor.include.ab3@535> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F6C <preprocessor.include.ab3@536> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F7E <preprocessor.include.ab3@537> XINCLUDE "/Shared/preprocessor.include.ab3"
00008F8E <preprocessor.include.ab3@538> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FA6 <preprocessor.include.ab3@539> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FAC <preprocessor.include.ab3@541> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FE6 <preprocessor.include.ab3@542> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FF0 <preprocessor.include.ab3@544> XINCLUDE "/Shared/preprocessor.include.ab3"
00008FF6 <preprocessor.include.ab3@545> XINCLUDE "/Shared/preprocessor.include.ab3"
00009000 <preprocessor.include.ab3@546> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <preprocessor.include.ab3@547> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <AmiBlitz3.ab3@87> XINCLUDE "/Shared/preprocessor.include.ab3"
00009012 <logging.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009012 <PE_Tools.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009036 <PE_Tools.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000903E <PE_Tools.include.ab3@84> XINCLUDE "PE/logging.include.ab3"
0000906C <PE_Tools.include.ab3@85> XINCLUDE "PE/logging.include.ab3"
0000909A <PE_Tools.include.ab3@86> XINCLUDE "PE/logging.include.ab3"
0000910A <PE_Tools.include.ab3@87> XINCLUDE "PE/logging.include.ab3"
00009118 <PE_Tools.include.ab3@88> XINCLUDE "PE/logging.include.ab3"
00009168 <PE_Tools.include.ab3@89> XINCLUDE "PE/logging.include.ab3"
00009168 <logging.include.ab3@11> XINCLUDE "PE/logging.include.ab3"
00009168 <file.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
00009168 <asl.include.ab3@1> XINCLUDE "PE/logging.include.ab3"
0000918C <asl.include.ab3@94> XINCLUDE "PE/logging.include.ab3"
000091B4 <asl.include.ab3@95> XINCLUDE "PE/logging.include.ab3"
000091D8 <asl.include.ab3@96> XINCLUDE "PE/logging.include.ab3"
00009206 <asl.include.ab3@295> XINCLUDE "PE/logging.include.ab3"
00009424 <asl.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
00009452 <asl.include.ab3@299> XINCLUDE "PE/logging.include.ab3"
0000947E <asl.include.ab3@301> XINCLUDE "PE/logging.include.ab3"
000094BA <asl.include.ab3@302> XINCLUDE "PE/logging.include.ab3"
000094E6 <asl.include.ab3@303> XINCLUDE "PE/logging.include.ab3"
00009512 <asl.include.ab3@304> XINCLUDE "PE/logging.include.ab3"
0000953E <asl.include.ab3@305> XINCLUDE "PE/logging.include.ab3"
0000956A <asl.include.ab3@306> XINCLUDE "PE/logging.include.ab3"
00009596 <asl.include.ab3@307> XINCLUDE "PE/logging.include.ab3"
000095C2 <asl.include.ab3@308> XINCLUDE "PE/logging.include.ab3"
000095EE <asl.include.ab3@309> XINCLUDE "PE/logging.include.ab3"
0000961A <asl.include.ab3@310> XINCLUDE "PE/logging.include.ab3"
000096A4 <asl.include.ab3@312> XINCLUDE "PE/logging.include.ab3"
0000972E <asl.include.ab3@313> XINCLUDE "PE/logging.include.ab3"
000097CC <asl.include.ab3@314> XINCLUDE "PE/logging.include.ab3"
00009816 <asl.include.ab3@315> XINCLUDE "PE/logging.include.ab3"
00009856 <asl.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000985C <asl.include.ab3@317> XINCLUDE "PE/logging.include.ab3"
000098A6 <asl.include.ab3@320> XINCLUDE "PE/logging.include.ab3"
000098E6 <asl.include.ab3@321> XINCLUDE "PE/logging.include.ab3"
00009910 <asl.include.ab3@322> XINCLUDE "PE/logging.include.ab3"
00009916 <asl.include.ab3@323> XINCLUDE "PE/logging.include.ab3"
00009940 <asl.include.ab3@324> XINCLUDE "PE/logging.include.ab3"
0000996A <asl.include.ab3@326> XINCLUDE "PE/logging.include.ab3"
00009994 <asl.include.ab3@328> XINCLUDE "PE/logging.include.ab3"
0000999E <asl.include.ab3@329> XINCLUDE "PE/logging.include.ab3"
000099BC <asl.include.ab3@330> XINCLUDE "PE/logging.include.ab3"
000099DE <asl.include.ab3@331> XINCLUDE "PE/logging.include.ab3"
00009A0C <asl.include.ab3@332> XINCLUDE "PE/logging.include.ab3"
00009A3A <asl.include.ab3@333> XINCLUDE "PE/logging.include.ab3"
00009A68 <asl.include.ab3@334> XINCLUDE "PE/logging.include.ab3"
00009AAE <asl.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
00009AF4 <asl.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
00009B3A <asl.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
00009B72 <asl.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
00009C70 <asl.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
00009C8E <asl.include.ab3@344> XINCLUDE "PE/logging.include.ab3"
00009C98 <asl.include.ab3@346> XINCLUDE "PE/logging.include.ab3"
00009CBE <asl.include.ab3@347> XINCLUDE "PE/logging.include.ab3"
00009CD0 <asl.include.ab3@349> XINCLUDE "PE/logging.include.ab3"
00009CFE <asl.include.ab3@350> XINCLUDE "PE/logging.include.ab3"
00009D26 <asl.include.ab3@351> XINCLUDE "PE/logging.include.ab3"
00009D38 <asl.include.ab3@352> XINCLUDE "PE/logging.include.ab3"
00009D8E <asl.include.ab3@353> XINCLUDE "PE/logging.include.ab3"
00009DC4 <asl.include.ab3@354> XINCLUDE "PE/logging.include.ab3"
00009DD4 <asl.include.ab3@356> XINCLUDE "PE/logging.include.ab3"
00009DDA <asl.include.ab3@357> XINCLUDE "PE/logging.include.ab3"
00009DEC <asl.include.ab3@358> XINCLUDE "PE/logging.include.ab3"
00009DF6 <asl.include.ab3@359> XINCLUDE "PE/logging.include.ab3"
00009E30 <asl.include.ab3@360> XINCLUDE "PE/logging.include.ab3"
00009E36 <asl.include.ab3@361> XINCLUDE "PE/logging.include.ab3"
00009E8E <asl.include.ab3@362> XINCLUDE "PE/logging.include.ab3"
00009EAC <asl.include.ab3@364> XINCLUDE "PE/logging.include.ab3"
00009EB2 <asl.include.ab3@367> XINCLUDE "PE/logging.include.ab3"
00009EC2 <asl.include.ab3@370> XINCLUDE "PE/logging.include.ab3"
00009ED2 <asl.include.ab3@371> XINCLUDE "PE/logging.include.ab3"
00009EE2 <asl.include.ab3@372> XINCLUDE "PE/logging.include.ab3"
00009EF2 <asl.include.ab3@373> XINCLUDE "PE/logging.include.ab3"
00009F02 <asl.include.ab3@375> XINCLUDE "PE/logging.include.ab3"
00009F0C <asl.include.ab3@377> XINCLUDE "PE/logging.include.ab3"
00009F20 <asl.include.ab3@378> XINCLUDE "PE/logging.include.ab3"
00009F36 <asl.include.ab3@394> XINCLUDE "PE/logging.include.ab3"
00009F5E <asl.include.ab3@396> XINCLUDE "PE/logging.include.ab3"
00009F68 <asl.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
00009F7A <asl.include.ab3@398> XINCLUDE "PE/logging.include.ab3"
00009FB4 <asl.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
00009FBE <asl.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
00009FE8 <asl.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A000 <asl.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A052 <asl.include.ab3@439> XINCLUDE "PE/logging.include.ab3"
0000A080 <asl.include.ab3@441> XINCLUDE "PE/logging.include.ab3"
0000A112 <asl.include.ab3@442> XINCLUDE "PE/logging.include.ab3"
0000A158 <asl.include.ab3@443> XINCLUDE "PE/logging.include.ab3"
0000A1EA <asl.include.ab3@444> XINCLUDE "PE/logging.include.ab3"
0000A204 <asl.include.ab3@445> XINCLUDE "PE/logging.include.ab3"
0000A204 <file.include.ab3@57> XINCLUDE "PE/logging.include.ab3"
0000A21A <file.include.ab3@66> XINCLUDE "PE/logging.include.ab3"
0000A230 <file.include.ab3@67> XINCLUDE "PE/logging.include.ab3"
0000A246 <file.include.ab3@68> XINCLUDE "PE/logging.include.ab3"
0000A25C <file.include.ab3@70> XINCLUDE "PE/logging.include.ab3"
0000A268 <file.include.ab3@72> XINCLUDE "PE/logging.include.ab3"
0000A274 <file.include.ab3@73> XINCLUDE "PE/logging.include.ab3"
0000A280 <file.include.ab3@74> XINCLUDE "PE/logging.include.ab3"
0000A28C <file.include.ab3@75> XINCLUDE "PE/logging.include.ab3"
0000A2B4 <file.include.ab3@77> XINCLUDE "PE/logging.include.ab3"
0000A2DC <file.include.ab3@78> XINCLUDE "PE/logging.include.ab3"
0000A304 <file.include.ab3@79> XINCLUDE "PE/logging.include.ab3"
0000A328 <file.include.ab3@109> XINCLUDE "PE/logging.include.ab3"
0000A34C <file.include.ab3@110> XINCLUDE "PE/logging.include.ab3"
0000A366 <file.include.ab3@156> XINCLUDE "PE/logging.include.ab3"
0000A376 <file.include.ab3@157> XINCLUDE "PE/logging.include.ab3"
0000A378 <file.include.ab3@158> XINCLUDE "PE/logging.include.ab3"
0000A37A <file.include.ab3@159> XINCLUDE "PE/logging.include.ab3"
0000A37C <file.include.ab3@160> XINCLUDE "PE/logging.include.ab3"
0000A37E <file.include.ab3@161> XINCLUDE "PE/logging.include.ab3"
0000A380 <file.include.ab3@162> XINCLUDE "PE/logging.include.ab3"
0000A384 <file.include.ab3@163> XINCLUDE "PE/logging.include.ab3"
0000A388 <file.include.ab3@164> XINCLUDE "PE/logging.include.ab3"
0000A38C <file.include.ab3@165> XINCLUDE "PE/logging.include.ab3"
0000A38E <file.include.ab3@166> XINCLUDE "PE/logging.include.ab3"
0000A390 <file.include.ab3@167> XINCLUDE "PE/logging.include.ab3"
0000A392 <file.include.ab3@168> XINCLUDE "PE/logging.include.ab3"
0000A394 <file.include.ab3@169> XINCLUDE "PE/logging.include.ab3"
0000A396 <file.include.ab3@170> XINCLUDE "PE/logging.include.ab3"
0000A398 <file.include.ab3@171> XINCLUDE "PE/logging.include.ab3"
0000A39A <file.include.ab3@172> XINCLUDE "PE/logging.include.ab3"
0000A3A4 <file.include.ab3@173> XINCLUDE "PE/logging.include.ab3"
0000A3AA <file.include.ab3@174> XINCLUDE "PE/logging.include.ab3"
0000A3C4 <file.include.ab3@215> XINCLUDE "PE/logging.include.ab3"
0000A3E2 <file.include.ab3@217> XINCLUDE "PE/logging.include.ab3"
0000A3E8 <file.include.ab3@218> XINCLUDE "PE/logging.include.ab3"
0000A402 <file.include.ab3@237> XINCLUDE "PE/logging.include.ab3"
0000A41E <file.include.ab3@239> XINCLUDE "PE/logging.include.ab3"
0000A444 <file.include.ab3@240> XINCLUDE "PE/logging.include.ab3"
0000A464 <file.include.ab3@241> XINCLUDE "PE/logging.include.ab3"
0000A46E <file.include.ab3@242> XINCLUDE "PE/logging.include.ab3"
0000A49A <file.include.ab3@243> XINCLUDE "PE/logging.include.ab3"
0000A4BC <file.include.ab3@244> XINCLUDE "PE/logging.include.ab3"
0000A4D6 <file.include.ab3@245> XINCLUDE "PE/logging.include.ab3"
0000A4DC <file.include.ab3@248> XINCLUDE "PE/logging.include.ab3"
0000A516 <file.include.ab3@249> XINCLUDE "PE/logging.include.ab3"
0000A534 <file.include.ab3@251> XINCLUDE "PE/logging.include.ab3"
0000A53A <file.include.ab3@252> XINCLUDE "PE/logging.include.ab3"
0000A558 <file.include.ab3@271> XINCLUDE "PE/logging.include.ab3"
0000A55E <file.include.ab3@273> XINCLUDE "PE/logging.include.ab3"
0000A580 <file.include.ab3@274> XINCLUDE "PE/logging.include.ab3"
0000A5A0 <file.include.ab3@275> XINCLUDE "PE/logging.include.ab3"
0000A5D8 <file.include.ab3@276> XINCLUDE "PE/logging.include.ab3"
0000A5F4 <file.include.ab3@277> XINCLUDE "PE/logging.include.ab3"
0000A5FA <file.include.ab3@278> XINCLUDE "PE/logging.include.ab3"
0000A600 <file.include.ab3@279> XINCLUDE "PE/logging.include.ab3"
0000A606 <file.include.ab3@281> XINCLUDE "PE/logging.include.ab3"
0000A60C <file.include.ab3@282> XINCLUDE "PE/logging.include.ab3"
0000A628 <file.include.ab3@283> XINCLUDE "PE/logging.include.ab3"
0000A674 <file.include.ab3@285> XINCLUDE "PE/logging.include.ab3"
0000A67A <file.include.ab3@286> XINCLUDE "PE/logging.include.ab3"
0000A6B4 <file.include.ab3@287> XINCLUDE "PE/logging.include.ab3"
0000A6C0 <file.include.ab3@288> XINCLUDE "PE/logging.include.ab3"
0000A6DC <file.include.ab3@289> XINCLUDE "PE/logging.include.ab3"
0000A6E2 <file.include.ab3@291> XINCLUDE "PE/logging.include.ab3"
0000A71C <file.include.ab3@292> XINCLUDE "PE/logging.include.ab3"
0000A726 <file.include.ab3@296> XINCLUDE "PE/logging.include.ab3"
0000A72C <file.include.ab3@297> XINCLUDE "PE/logging.include.ab3"
0000A74A <file.include.ab3@316> XINCLUDE "PE/logging.include.ab3"
0000A778 <file.include.ab3@318> XINCLUDE "PE/logging.include.ab3"
0000A77E <file.include.ab3@319> XINCLUDE "PE/logging.include.ab3"
0000A794 <file.include.ab3@335> XINCLUDE "PE/logging.include.ab3"
0000A79C <file.include.ab3@337> XINCLUDE "PE/logging.include.ab3"
0000A7F8 <file.include.ab3@338> XINCLUDE "PE/logging.include.ab3"
0000A806 <file.include.ab3@339> XINCLUDE "PE/logging.include.ab3"
0000A80C <file.include.ab3@340> XINCLUDE "PE/logging.include.ab3"
0000A83E <file.include.ab3@341> XINCLUDE "PE/logging.include.ab3"
0000A848 <file.include.ab3@342> XINCLUDE "PE/logging.include.ab3"
0000A84E <file.include.ab3@343> XINCLUDE "PE/logging.include.ab3"
0000A868 <file.include.ab3@397> XINCLUDE "PE/logging.include.ab3"
0000A87A <file.include.ab3@399> XINCLUDE "PE/logging.include.ab3"
0000A8D8 <file.include.ab3@400> XINCLUDE "PE/logging.include.ab3"
0000A912 <file.include.ab3@401> XINCLUDE "PE/logging.include.ab3"
0000A94C <file.include.ab3@402> XINCLUDE "PE/logging.include.ab3"
0000A96A <file.include.ab3@403> XINCLUDE "PE/logging.include.ab3"
0000A988 <file.include.ab3@404> XINCLUDE "PE/logging.include.ab3"
0000A99E <file.include.ab3@405> XINCLUDE "PE/logging.include.ab3"
0000A9BA <file.include.ab3@406> XINCLUDE "PE/logging.include.ab3"
0000A9D4 <file.include.ab3@407> XINCLUDE "PE/logging.include.ab3"
0000AA52 <file.include.ab3@408> XINCLUDE "PE/logging.include.ab3"
0000AA64 <file.include.ab3@410> XINCLUDE "PE/logging.include.ab3"
0000AA7A <file.include.ab3@422> XINCLUDE "PE/logging.include.ab3"
0000AAA4 <file.include.ab3@424> XINCLUDE "PE/logging.include.ab3"
0000AAAE <file.include.ab3@425> XINCLUDE "PE/logging.include.ab3"
0000AABE <file.include.ab3@426> XINCLUDE "PE/logging.include.ab3"
0000AAC2 <file.include.ab3@427> XINCLUDE "PE/logging.include.ab3"
0000AAF0 <file.include.ab3@428> XINCLUDE "PE/logging.include.ab3"
0000AB0A <file.include.ab3@447> XINCLUDE "PE/logging.include.ab3"
0000AB1C <file.include.ab3@449> XINCLUDE "PE/logging.include.ab3"
0000AB3C <file.include.ab3@450> XINCLUDE "PE/logging.include.ab3"
0000AB52 <file.include.ab3@451> XINCLUDE "PE/logging.include.ab3"
0000AB8A <file.include.ab3@452> XINCLUDE "PE/logging.include.ab3"
0000ABB4 <file.include.ab3@453> XINCLUDE "PE/logging.include.ab3"
0000ABDE <file.include.ab3@456> XINCLUDE "PE/logging.include.ab3"
0000ABF6 <file.include.ab3@457> XINCLUDE "PE/logging.include.ab3"
0000AC0C <file.include.ab3@525> XINCLUDE "PE/logging.include.ab3"
0000AC54 <file.include.ab3@527> XINCLUDE "PE/logging.include.ab3"
0000AC74 <file.include.ab3@528> XINCLUDE "PE/logging.include.ab3"
0000AC7C <file.include.ab3@529> XINCLUDE "PE/logging.include.ab3"
0000ACBA <file.include.ab3@568> XINCLUDE "PE/logging.include.ab3"
0000ACC6 <file.include.ab3@570> XINCLUDE "PE/logging.include.ab3"
0000ACD0 <file.include.ab3@571> XINCLUDE "PE/logging.include.ab3"
0000ACE2 <file.include.ab3@572> XINCLUDE "PE/logging.include.ab3"
0000ACE8 <file.include.ab3@573> XINCLUDE "PE/logging.include.ab3"
0000ACF6 <file.include.ab3@574> XINCLUDE "PE/logging.include.ab3"
0000AD1E <file.include.ab3@575> XINCLUDE "PE/logging.include.ab3"
0000AD32 <file.include.ab3@576> XINCLUDE "PE/logging.include.ab3"
0000AD5A <file.include.ab3@577> XINCLUDE "PE/logging.include.ab3"
0000AD6E <file.include.ab3@578> XINCLUDE "PE/logging.include.ab3"
0000AD96 <file.include.ab3@579> XINCLUDE "PE/logging.include.ab3"
0000ADAA <file.include.ab3@580> XINCLUDE "PE/logging.include.ab3"
0000ADD2 <file.include.ab3@581> XINCLUDE "PE/logging.include.ab3"
0000ADD4 <file.include.ab3@582> XINCLUDE "PE/logging.include.ab3"
0000ADF8 <file.include.ab3@584> XINCLUDE "PE/logging.include.ab3"
0000AE30 <file.include.ab3@586> XINCLUDE "PE/logging.include.ab3"
0000AEBA <file.include.ab3@587> XINCLUDE "PE/logging.include.ab3"
0000AEE2 <file.include.ab3@588> XINCLUDE "PE/logging.include.ab3"
0000AF12 <file.include.ab3@589> XINCLUDE "PE/logging.include.ab3"
0000AF4A <file.include.ab3@593> XINCLUDE "PE/logging.include.ab3"
0000AFA2 <file.include.ab3@594> XINCLUDE "PE/logging.include.ab3"
0000AFFA <file.include.ab3@595> XINCLUDE "PE/logging.include.ab3"
0000B07A <file.include.ab3@597> XINCLUDE "PE/logging.include.ab3"
0000B0AE <file.include.ab3@598> XINCLUDE "PE/logging.include.ab3"
0000B0E2 <file.include.ab3@599> XINCLUDE "PE/logging.include.ab3"
0000B0E8 <file.include.ab3@600> XINCLUDE "PE/logging.include.ab3"
0000B0F6 <file.include.ab3@601> XINCLUDE "PE/logging.include.ab3"
0000B12A <file.include.ab3@602> XINCLUDE "PE/logging.include.ab3"
0000B152 <file.include.ab3@603> XINCLUDE "PE/logging.include.ab3"
0000B20A <file.include.ab3@604> XINCLUDE "PE/logging.include.ab3"
0000B28A <file.include.ab3@605> XINCLUDE "PE/logging.include.ab3"
0000B2BE <file.include.ab3@606> XINCLUDE "PE/logging.include.ab3"
0000B2DE <file.include.ab3@608> XINCLUDE "PE/logging.include.ab3"
0000B2E4 <file.include.ab3@609> XINCLUDE "PE/logging.include.ab3"
0000B2EA <file.include.ab3@610> XINCLUDE "PE/logging.include.ab3"
0000B3BA <file.include.ab3@611> XINCLUDE "PE/logging.include.ab3"
0000B3CE <file.include.ab3@614> XINCLUDE "PE/logging.include.ab3"
0000B486 <file.include.ab3@615> XINCLUDE "PE/logging.include.ab3"
0000B506 <file.include.ab3@616> XINCLUDE "PE/logging.include.ab3"
0000B5F6 <file.include.ab3@617> XINCLUDE "PE/logging.include.ab3"
0000B600 <file.include.ab3@618> XINCLUDE "PE/logging.include.ab3"
0000B634 <file.include.ab3@619> XINCLUDE "PE/logging.include.ab3"
0000B654 <file.include.ab3@620> XINCLUDE "PE/logging.include.ab3"
0000B65A <file.include.ab3@621> XINCLUDE "PE/logging.include.ab3"
0000B660 <file.include.ab3@622> XINCLUDE "PE/logging.include.ab3"
0000B730 <file.include.ab3@623> XINCLUDE "PE/logging.include.ab3"
0000B744 <file.include.ab3@627> XINCLUDE "PE/logging.include.ab3"
0000B778 <file.include.ab3@628> XINCLUDE "PE/logging.include.ab3"
0000B7A0 <file.include.ab3@629> XINCLUDE "PE/logging.include.ab3"
0000B858 <file.include.ab3@630> XINCLUDE "PE/logging.include.ab3"
0000B8D8 <file.include.ab3@631> XINCLUDE "PE/logging.include.ab3"
0000B90C <file.include.ab3@632> XINCLUDE "PE/logging.include.ab3"
0000B92C <file.include.ab3@635> XINCLUDE "PE/logging.include.ab3"
0000B932 <file.include.ab3@636> XINCLUDE "PE/logging.include.ab3"
0000B938 <file.include.ab3@637> XINCLUDE "PE/logging.include.ab3"
0000BA08 <file.include.ab3@638> XINCLUDE "PE/logging.include.ab3"
0000BA1C <file.include.ab3@641> XINCLUDE "PE/logging.include.ab3"
0000BAD4 <file.include.ab3@642> XINCLUDE "PE/logging.include.ab3"
0000BB54 <file.include.ab3@643> XINCLUDE "PE/logging.include.ab3"
0000BB88 <file.include.ab3@644> XINCLUDE "PE/logging.include.ab3"
0000BBA8 <file.include.ab3@645> XINCLUDE "PE/logging.include.ab3"
0000BBAE <file.include.ab3@646> XINCLUDE "PE/logging.include.ab3"
0000BBB4 <file.include.ab3@647> XINCLUDE "PE/logging.include.ab3"
0000BC84 <file.include.ab3@648> XINCLUDE "PE/logging.include.ab3"
0000BC8A <file.include.ab3@651> XINCLUDE "PE/logging.include.ab3"
0000BCC4 <file.include.ab3@652> XINCLUDE "PE/logging.include.ab3"
0000BCC6 <file.include.ab3@653> XINCLUDE "PE/logging.include.ab3"
0000BCCC <file.include.ab3@655> XINCLUDE "PE/logging.include.ab3"
0000BD64 <file.include.ab3@656> XINCLUDE "PE/logging.include.ab3"
0000BD76 <file.include.ab3@659> XINCLUDE "PE/logging.include.ab3"
0000BD8C <file.include.ab3@660> XINCLUDE "PE/logging.include.ab3"
0000BDF6 <file.include.ab3@661> XINCLUDE "PE/logging.include.ab3"
0000BE60 <file.include.ab3@662> XINCLUDE "PE/logging.include.ab3"
0000BE7A <file.include.ab3@663> XINCLUDE "PE/logging.include.ab3"
0000BE96 <file.include.ab3@664> XINCLUDE "PE/logging.include.ab3"
0000BEB4 <file.include.ab3@665> XINCLUDE "PE/logging.include.ab3"
0000BECE <file.include.ab3@666> XINCLUDE "PE/logging.include.ab3"
0000BED8 <file.include.ab3@668> XINCLUDE "PE/logging.include.ab3"
0000BEF4 <file.include.ab3@669> XINCLUDE "PE/logging.include.ab3"
0000BF16 <file.include.ab3@805> XINCLUDE "PE/logging.include.ab3"
0000BF1C <file.include.ab3@807> XINCLUDE "PE/logging.include.ab3"
0000BF42 <file.include.ab3@808> XINCLUDE "PE/logging.include.ab3"
0000BF5E <file.include.ab3@809> XINCLUDE "PE/logging.include.ab3"
0000BF70 <file.include.ab3@810> XINCLUDE "PE/logging.include.ab3"
0000BFCE <file.include.ab3@811> XINCLUDE "PE/logging.include.ab3"
0000C006 <file.include.ab3@812> XINCLUDE "PE/logging.include.ab3"
0000C00C <file.include.ab3@813> XINCLUDE "PE/logging.include.ab3"
0000C054 <file.include.ab3@814> XINCLUDE "PE/logging.include.ab3"
0000C06E <file.include.ab3@815> XINCLUDE "PE/logging.include.ab3"
0000C07C <file.include.ab3@818> XINCLUDE "PE/logging.include.ab3"
0000C082 <file.include.ab3@819> XINCLUDE "PE/logging.include.ab3"
0000C088 <file.include.ab3@820> XINCLUDE "PE/logging.include.ab3"
0000C09A <file.include.ab3@821> XINCLUDE "PE/logging.include.ab3"
0000C186 <file.include.ab3@822> XINCLUDE "PE/logging.include.ab3"
0000C18C <file.include.ab3@823> XINCLUDE "PE/logging.include.ab3"
0000C1D2 <file.include.ab3@824> XINCLUDE "PE/logging.include.ab3"
0000C1DE <file.include.ab3@825> XINCLUDE "PE/logging.include.ab3"
0000C244 <file.include.ab3@826> XINCLUDE "PE/logging.include.ab3"
0000C28A <file.include.ab3@827> XINCLUDE "PE/logging.include.ab3"
0000C2D2 <file.include.ab3@830> XINCLUDE "PE/logging.include.ab3"
0000C33A <file.include.ab3@831> XINCLUDE "PE/logging.include.ab3"
0000C340 <file.include.ab3@832> XINCLUDE "PE/logging.include.ab3"
0000C37A <file.include.ab3@833> XINCLUDE "PE/logging.include.ab3"
0000C380 <file.include.ab3@835> XINCLUDE "PE/logging.include.ab3"
0000C3E2 <file.include.ab3@836> XINCLUDE "PE/logging.include.ab3"
0000C3EC <file.include.ab3@838> XINCLUDE "PE/logging.include.ab3"
0000C400 <file.include.ab3@839> XINCLUDE "PE/logging.include.ab3"
0000C41A <file.include.ab3@841> XINCLUDE "PE/logging.include.ab3"
0000C420 <file.include.ab3@843> XINCLUDE "PE/logging.include.ab3"
0000C446 <file.include.ab3@844> XINCLUDE "PE/logging.include.ab3"
0000C462 <file.include.ab3@845> XINCLUDE "PE/logging.include.ab3"
0000C4C0 <file.include.ab3@846> XINCLUDE "PE/logging.include.ab3"
0000C4C4 <file.include.ab3@849> XINCLUDE "PE/logging.include.ab3"
0000C4E6 <file.include.ab3@867> XINCLUDE "PE/logging.include.ab3"
0000C4EC <file.include.ab3@869> XINCLUDE "PE/logging.include.ab3"
0000C508 <file.include.ab3@870> XINCLUDE "PE/logging.include.ab3"
0000C528 <file.include.ab3@871> XINCLUDE "PE/logging.include.ab3"
0000C566 <file.include.ab3@872> XINCLUDE "PE/logging.include.ab3"
0000C5B4 <file.include.ab3@873> XINCLUDE "PE/logging.include.ab3"
0000C5EA <file.include.ab3@874> XINCLUDE "PE/logging.include.ab3"
0000C5F0 <file.include.ab3@875> XINCLUDE "PE/logging.include.ab3"
0000C5F6 <file.include.ab3@876> XINCLUDE "PE/logging.include.ab3"
0000C626 <file.include.ab3@877> XINCLUDE "PE/logging.include.ab3"
0000C62C <file.include.ab3@878> XINCLUDE "PE/logging.include.ab3"
0000C632 <file.include.ab3@880> XINCLUDE "PE/logging.include.ab3"
0000C644 <file.include.ab3@881> XINCLUDE "PE/logging.include.ab3"
0000C6A2 <file.include.ab3@882> XINCLUDE "PE/logging.include.ab3"
0000C6DA <file.include.ab3@883> XINCLUDE "PE/logging.include.ab3"
0000C6E0 <file.include.ab3@884> XINCLUDE "PE/logging.include.ab3"
0000C728 <file.include.ab3@885> XINCLUDE "PE/logging.include.ab3"
0000C742 <file.include.ab3@886> XINCLUDE "PE/logging.include.ab3"
0000C750 <file.include.ab3@888> XINCLUDE "PE/logging.include.ab3"
0000C756 <file.include.ab3@889> XINCLUDE "PE/logging.include.ab3"
0000C75C <file.include.ab3@890> XINCLUDE "PE/logging.include.ab3"
0000C76E <file.include.ab3@891> XINCLUDE "PE/logging.include.ab3"
0000C774 <file.include.ab3@892> XINCLUDE "PE/logging.include.ab3"
0000C77A <file.include.ab3@893> XINCLUDE "PE/logging.include.ab3"
0000C7D8 <file.include.ab3@894> XINCLUDE "PE/logging.include.ab3"
0000C820 <file.include.ab3@897> XINCLUDE "PE/logging.include.ab3"
0000C82A <file.include.ab3@900> XINCLUDE "PE/logging.include.ab3"
0000C830 <file.include.ab3@901> XINCLUDE "PE/logging.include.ab3"
0000C84A <file.include.ab3@955> XINCLUDE "PE/logging.include.ab3"
0000C850 <file.include.ab3@957> XINCLUDE "PE/logging.include.ab3"
0000C898 <file.include.ab3@958> XINCLUDE "PE/logging.include.ab3"
0000C8D6 <file.include.ab3@959> XINCLUDE "PE/logging.include.ab3"
0000C8E0 <file.include.ab3@960> XINCLUDE "PE/logging.include.ab3"
0000C8E6 <file.include.ab3@961> XINCLUDE "PE/logging.include.ab3"
0000C90C <file.include.ab3@1108> XINCLUDE "PE/logging.include.ab3"
0000C912 <file.include.ab3@1110> XINCLUDE "PE/logging.include.ab3"
0000C938 <file.include.ab3@1111> XINCLUDE "PE/logging.include.ab3"
0000C998 <file.include.ab3@1112> XINCLUDE "PE/logging.include.ab3"
0000C9B2 <file.include.ab3@1113> XINCLUDE "PE/logging.include.ab3"
0000C9BC <file.include.ab3@1114> XINCLUDE "PE/logging.include.ab3"
0000C9D6 <file.include.ab3@1115> XINCLUDE "PE/logging.include.ab3"
0000C9E0 <file.include.ab3@1116> XINCLUDE "PE/logging.include.ab3"
0000C9F8 <file.include.ab3@1117> XINCLUDE "PE/logging.include.ab3"
0000CA28 <file.include.ab3@1118> XINCLUDE "PE/logging.include.ab3"
0000CA44 <file.include.ab3@1119> XINCLUDE "PE/logging.include.ab3"
0000CA52 <file.include.ab3@1120> XINCLUDE "PE/logging.include.ab3"
0000CA58 <file.include.ab3@1123> XINCLUDE "PE/logging.include.ab3"
0000CA92 <file.include.ab3@1124> XINCLUDE "PE/logging.include.ab3"
0000CA9C <file.include.ab3@1126> XINCLUDE "PE/logging.include.ab3"
0000CAA2 <file.include.ab3@1127> XINCLUDE "PE/logging.include.ab3"
0000CAC0 <file.include.ab3@1148> XINCLUDE "PE/logging.include.ab3"
0000CAC6 <file.include.ab3@1150> XINCLUDE "PE/logging.include.ab3"
0000CAD8 <file.include.ab3@1151> XINCLUDE "PE/logging.include.ab3"
0000CAE6 <file.include.ab3@1152> XINCLUDE "PE/logging.include.ab3"
0000CB04 <file.include.ab3@1153> XINCLUDE "PE/logging.include.ab3"
0000CB3A <file.include.ab3@1154> XINCLUDE "PE/logging.include.ab3"
0000CB4C <file.include.ab3@1155> XINCLUDE "PE/logging.include.ab3"
0000CB96 <file.include.ab3@1156> XINCLUDE "PE/logging.include.ab3"
0000CC80 <file.include.ab3@1157> XINCLUDE "PE/logging.include.ab3"
0000CC9E <file.include.ab3@1158> XINCLUDE "PE/logging.include.ab3"
0000CCC4 <file.include.ab3@1160> XINCLUDE "PE/logging.include.ab3"
0000CCE0 <file.include.ab3@1161> XINCLUDE "PE/logging.include.ab3"
0000CD0C <file.include.ab3@1162> XINCLUDE "PE/logging.include.ab3"
0000CD16 <file.include.ab3@1163> XINCLUDE "PE/logging.include.ab3"
0000CD44 <file.include.ab3@1164> XINCLUDE "PE/logging.include.ab3"
0000CD5E <file.include.ab3@1165> XINCLUDE "PE/logging.include.ab3"
0000CD7A <file.include.ab3@1166> XINCLUDE "PE/logging.include.ab3"
0000CD80 <file.include.ab3@1167> XINCLUDE "PE/logging.include.ab3"
0000CDBA <file.include.ab3@1168> XINCLUDE "PE/logging.include.ab3"
0000CDC0 <file.include.ab3@1170> XINCLUDE "PE/logging.include.ab3"
0000CDC6 <file.include.ab3@1171> XINCLUDE "PE/logging.include.ab3"
0000CDCC <file.include.ab3@1173> XINCLUDE "PE/logging.include.ab3"
0000CE6C <file.include.ab3@1174> XINCLUDE "PE/logging.include.ab3"
0000CE72 <file.include.ab3@1176> XINCLUDE "PE/logging.include.ab3"
0000CF14 <file.include.ab3@1177> XINCLUDE "PE/logging.include.ab3"
0000CF1A <file.include.ab3@1179> XINCLUDE "PE/logging.include.ab3"
0000CF54 <file.include.ab3@1180> XINCLUDE "PE/logging.include.ab3"
0000CF5E <file.include.ab3@1182> XINCLUDE "PE/logging.include.ab3"
0000CF64 <file.include.ab3@1183> XINCLUDE "PE/logging.include.ab3"
0000CF7E <file.include.ab3@1245> XINCLUDE "PE/logging.include.ab3"
0000CF9C <file.include.ab3@1247> XINCLUDE "PE/logging.include.ab3"
0000CFA2 <file.include.ab3@1248> XINCLUDE "PE/logging.include.ab3"
0000CFBC <file.include.ab3@1398> XINCLUDE "PE/logging.include.ab3"
0000CFDC <file.include.ab3@1400> XINCLUDE "PE/logging.include.ab3"
0000D090 <file.include.ab3@1401> XINCLUDE "PE/logging.include.ab3"
0000D096 <file.include.ab3@1402> XINCLUDE "PE/logging.include.ab3"
0000D09C <file.include.ab3@1403> XINCLUDE "PE/logging.include.ab3"
0000D0C6 <file.include.ab3@1404> XINCLUDE "PE/logging.include.ab3"
0000D0D2 <file.include.ab3@1406> XINCLUDE "PE/logging.include.ab3"
0000D0D8 <file.include.ab3@1407> XINCLUDE "PE/logging.include.ab3"
0000D0F2 <file.include.ab3@1593> XINCLUDE "PE/logging.include.ab3"
0000D0FA <file.include.ab3@1594> XINCLUDE "PE/logging.include.ab3"
0000D102 <file.include.ab3@1595> XINCLUDE "PE/logging.include.ab3"
0000D118 <file.include.ab3@1596> XINCLUDE "PE/logging.include.ab3"
0000D130 <file.include.ab3@1597> XINCLUDE "PE/logging.include.ab3"
0000D142 <file.include.ab3@1598> XINCLUDE "PE/logging.include.ab3"
0000D14E <file.include.ab3@1599> XINCLUDE "PE/logging.include.ab3"
0000D154 <file.include.ab3@1600> XINCLUDE "PE/logging.include.ab3"
0000D15C <file.include.ab3@1601> XINCLUDE "PE/logging.include.ab3"
0000D194 <file.include.ab3@1602> XINCLUDE "PE/logging.include.ab3"
0000D1A6 <file.include.ab3@1603> XINCLUDE "PE/logging.include.ab3"
0000D1CA <file.include.ab3@1604> XINCLUDE "PE/logging.include.ab3"
0000D1DC <file.include.ab3@1605> XINCLUDE "PE/logging.include.ab3"
0000D1E8 <file.include.ab3@1606> XINCLUDE "PE/logging.include.ab3"
0000D1EE <file.include.ab3@1607> XINCLUDE "PE/logging.include.ab3"
0000D1FE <file.include.ab3@1608> XINCLUDE "PE/logging.include.ab3"
0000D21C <file.include.ab3@1613> XINCLUDE "PE/logging.include.ab3"
0000D22E <file.include.ab3@1616> XINCLUDE "PE/logging.include.ab3"
0000D27A <file.include.ab3@1617> XINCLUDE "PE/logging.include.ab3"
0000D280 <file.include.ab3@1619> XINCLUDE "PE/logging.include.ab3"
0000D2AA <file.include.ab3@1621> XINCLUDE "PE/logging.include.ab3"
0000D2C2 <file.include.ab3@1622> XINCLUDE "PE/logging.include.ab3"
0000D2F0 <file.include.ab3@1706> XINCLUDE "PE/logging.include.ab3"
0000D304 <file.include.ab3@1707> XINCLUDE "PE/logging.include.ab3"
0000D31A <file.include.ab3@1708> XINCLUDE "PE/logging.include.ab3"
0000D33A <file.include.ab3@1709> XINCLUDE "PE/logging.include.ab3"
0000D350 <file.include.ab3@1710> XINCLUDE "PE/logging.include.ab3"
0000D35A <file.include.ab3@1711> XINCLUDE "PE/logging.include.ab3"
0000D374 <file.include.ab3@1712> XINCLUDE "PE/logging.include.ab3"
0000D396 <file.include.ab3@1787> XINCLUDE "PE/logging.include.ab3"
0000D3AE <file.include.ab3@1789> XINCLUDE "PE/logging.include.ab3"
0000D3D0 <file.include.ab3@1790> XINCLUDE "PE/logging.include.ab3"
0000D3D6 <file.include.ab3@1791> XINCLUDE "PE/logging.include.ab3"
0000D408 <file.include.ab3@1811> XINCLUDE "PE/logging.include.ab3"
0000D41C <file.include.ab3@1813> XINCLUDE "PE/logging.include.ab3"
0000D434 <file.include.ab3@1814> XINCLUDE "PE/logging.include.ab3"
0000D44C <file.include.ab3@1815> XINCLUDE "PE/logging.include.ab3"
0000D46C <file.include.ab3@1816> XINCLUDE "PE/logging.include.ab3"
0000D49C <file.include.ab3@1817> XINCLUDE "PE/logging.include.ab3"
0000D4CC <file.include.ab3@1818> XINCLUDE "PE/logging.include.ab3"
0000D4DE <file.include.ab3@1819> XINCLUDE "PE/logging.include.ab3"
0000D4E6 <file.include.ab3@1820> XINCLUDE "PE/logging.include.ab3"
0000D510 <file.include.ab3@1821> XINCLUDE "PE/logging.include.ab3"
0000D51A <file.include.ab3@1823> XINCLUDE "PE/logging.include.ab3"
0000D534 <file.include.ab3@1824> XINCLUDE "PE/logging.include.ab3"
0000D54E <file.include.ab3@1841> XINCLUDE "PE/logging.include.ab3"
0000D56C <file.include.ab3@1843> XINCLUDE "PE/logging.include.ab3"
0000D58C <file.include.ab3@1844> XINCLUDE "PE/logging.include.ab3"
0000D5D6 <file.include.ab3@1845> XINCLUDE "PE/logging.include.ab3"
0000D5F0 <file.include.ab3@1846> XINCLUDE "PE/logging.include.ab3"
0000D602 <file.include.ab3@1847> XINCLUDE "PE/logging.include.ab3"
0000D638 <file.include.ab3@1848> XINCLUDE "PE/logging.include.ab3"
0000D64A <file.include.ab3@1849> XINCLUDE "PE/logging.include.ab3"
0000D652 <file.include.ab3@1850> XINCLUDE "PE/logging.include.ab3"
0000D67A <file.include.ab3@1851> XINCLUDE "PE/logging.include.ab3"
0000D680 <file.include.ab3@1853> XINCLUDE "PE/logging.include.ab3"
0000D6A8 <file.include.ab3@1854> XINCLUDE "PE/logging.include.ab3"
0000D6B8 <file.include.ab3@1856> XINCLUDE "PE/logging.include.ab3"
0000D6CC <file.include.ab3@1857> XINCLUDE "PE/logging.include.ab3"
0000D6E2 <file.include.ab3@1870> XINCLUDE "PE/logging.include.ab3"
0000D6F2 <file.include.ab3@1872> XINCLUDE "PE/logging.include.ab3"
0000D6F6 <file.include.ab3@1873> XINCLUDE "PE/logging.include.ab3"
0000D70C <file.include.ab3@1894> XINCLUDE "PE/logging.include.ab3"
0000D736 <file.include.ab3@1896> XINCLUDE "PE/logging.include.ab3"
0000D73E <file.include.ab3@1897> XINCLUDE "PE/logging.include.ab3"
0000D73E <logging.include.ab3@13> XINCLUDE "PE/logging.include.ab3"
0000D7DC <logging.include.ab3@35> XINCLUDE "PE/logging.include.ab3"
0000D7E2 <logging.include.ab3@36> XINCLUDE "PE/logging.include.ab3"
0000D7E8 <logging.include.ab3@37> XINCLUDE "PE/logging.include.ab3"
0000D7EE <logging.include.ab3@38> XINCLUDE "PE/logging.include.ab3"
0000D828 <logging.include.ab3@129> XINCLUDE "PE/logging.include.ab3"
0000D85A <logging.include.ab3@131> XINCLUDE "PE/logging.include.ab3"
0000D868 <logging.include.ab3@132> XINCLUDE "PE/logging.include.ab3"
0000D898 <logging.include.ab3@133> XINCLUDE "PE/logging.include.ab3"
0000DC08 <logging.include.ab3@134> XINCLUDE "PE/logging.include.ab3"
0000DC16 <logging.include.ab3@135> XINCLUDE "PE/logging.include.ab3"
0000DC1C <logging.include.ab3@136> XINCLUDE "PE/logging.include.ab3"
0000DEAE <logging.include.ab3@137> XINCLUDE "PE/logging.include.ab3"
0000DEC8 <logging.include.ab3@139> XINCLUDE "PE/logging.include.ab3"
0000DF02 <logging.include.ab3@142> XINCLUDE "PE/logging.include.ab3"
0000DF54 <logging.include.ab3@143> XINCLUDE "PE/logging.include.ab3"
0000DF62 <logging.include.ab3@144> XINCLUDE "PE/logging.include.ab3"
0000DFB8 <logging.include.ab3@145> XINCLUDE "PE/logging.include.ab3"
0000DFBE <logging.include.ab3@146> XINCLUDE "PE/logging.include.ab3"
0000E038 <logging.include.ab3@147> XINCLUDE "PE/logging.include.ab3"
0000E0AC <logging.include.ab3@148> XINCLUDE "PE/logging.include.ab3"
0000E0C6 <logging.include.ab3@150> XINCLUDE "PE/logging.include.ab3"
0000E0C6 <AmiBlitz3.ab3@89> XINCLUDE "PE/logging.include.ab3"
0000E0C6 <translation.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0C6 <phrasebook.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0C6 <prefixtree.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0C6 <dynamicarray.include.ab3@1> XINCLUDE "translation.include.ab3"
0000E0EE <dynamicarray.include.ab3@42> XINCLUDE "translation.include.ab3"
0000E108 <dynamicarray.include.ab3@55> XINCLUDE "translation.include.ab3"
0000E112 <dynamicarray.include.ab3@56> XINCLUDE "translation.include.ab3"
0000E124 <dynamicarray.include.ab3@57> XINCLUDE "translation.include.ab3"
0000E148 <dynamicarray.include.ab3@58> XINCLUDE "translation.include.ab3"
0000E156 <dynamicarray.include.ab3@60> XINCLUDE "translation.include.ab3"
0000E162 <dynamicarray.include.ab3@61> XINCLUDE "translation.include.ab3"
0000E166 <dynamicarray.include.ab3@63> XINCLUDE "translation.include.ab3"
0000E184 <dynamicarray.include.ab3@99> XINCLUDE "translation.include.ab3"
0000E19E <dynamicarray.include.ab3@101> XINCLUDE "translation.include.ab3"
0000E1BE <dynamicarray.include.ab3@102> XINCLUDE "translation.include.ab3"
0000E1C8 <dynamicarray.include.ab3@103> XINCLUDE "translation.include.ab3"
0000E1D6 <dynamicarray.include.ab3@104> XINCLUDE "translation.include.ab3"
0000E1E2 <dynamicarray.include.ab3@105> XINCLUDE "translation.include.ab3"
0000E1F0 <dynamicarray.include.ab3@106> XINCLUDE "translation.include.ab3"
0000E1FC <dynamicarray.include.ab3@107> XINCLUDE "translation.include.ab3"
0000E208 <dynamicarray.include.ab3@108> XINCLUDE "translation.include.ab3"
0000E21A <dynamicarray.include.ab3@109> XINCLUDE "translation.include.ab3"
0000E22A <dynamicarray.include.ab3@110> XINCLUDE "translation.include.ab3"
0000E234 <dynamicarray.include.ab3@113> XINCLUDE "translation.include.ab3"
0000E23A <dynamicarray.include.ab3@114> XINCLUDE "translation.include.ab3"
0000E254 <dynamicarray.include.ab3@425> XINCLUDE "translation.include.ab3"
0000E25E <dynamicarray.include.ab3@427> XINCLUDE "translation.include.ab3"
0000E268 <dynamicarray.include.ab3@428> XINCLUDE "translation.include.ab3"
0000E278 <dynamicarray.include.ab3@429> XINCLUDE "translation.include.ab3"
0000E282 <dynamicarray.include.ab3@430> XINCLUDE "translation.include.ab3"
0000E294 <dynamicarray.include.ab3@431> XINCLUDE "translation.include.ab3"
0000E2AA <dynamicarray.include.ab3@432> XINCLUDE "translation.include.ab3"
0000E2B4 <dynamicarray.include.ab3@433> XINCLUDE "translation.include.ab3"
0000E2BA <dynamicarray.include.ab3@435> XINCLUDE "translation.include.ab3"
0000E2BE <dynamicarray.include.ab3@437> XINCLUDE "translation.include.ab3"
0000E2D4 <dynamicarray.include.ab3@531> XINCLUDE "translation.include.ab3"
0000E2DA <dynamicarray.include.ab3@533> XINCLUDE "translation.include.ab3"
0000E2E4 <dynamicarray.include.ab3@535> XINCLUDE "translation.include.ab3"
0000E31A <dynamicarray.include.ab3@536> XINCLUDE "translation.include.ab3"
0000E324 <dynamicarray.include.ab3@537> XINCLUDE "translation.include.ab3"
0000E328 <dynamicarray.include.ab3@538> XINCLUDE "translation.include.ab3"
0000E356 <dynamicarray.include.ab3@539> XINCLUDE "translation.include.ab3"
0000E356 <prefixtree.include.ab3@156> XINCLUDE "translation.include.ab3"
0000E370 <prefixtree.include.ab3@221> XINCLUDE "translation.include.ab3"
0000E37A <prefixtree.include.ab3@223> XINCLUDE "translation.include.ab3"
0000E3A2 <prefixtree.include.ab3@224> XINCLUDE "translation.include.ab3"
0000E3C4 <prefixtree.include.ab3@225> XINCLUDE "translation.include.ab3"
0000E3DC <prefixtree.include.ab3@226> XINCLUDE "translation.include.ab3"
0000E3F2 <prefixtree.include.ab3@227> XINCLUDE "translation.include.ab3"
0000E3F6 <prefixtree.include.ab3@230> XINCLUDE "translation.include.ab3"
0000E410 <prefixtree.include.ab3@283> XINCLUDE "translation.include.ab3"
0000E430 <prefixtree.include.ab3@284> XINCLUDE "translation.include.ab3"
0000E43A <prefixtree.include.ab3@285> XINCLUDE "translation.include.ab3"
0000E454 <prefixtree.include.ab3@286> XINCLUDE "translation.include.ab3"
0000E462 <prefixtree.include.ab3@287> XINCLUDE "translation.include.ab3"
0000E470 <prefixtree.include.ab3@288> XINCLUDE "translation.include.ab3"
0000E47E <prefixtree.include.ab3@289> XINCLUDE "translation.include.ab3"
0000E48C <prefixtree.include.ab3@290> XINCLUDE "translation.include.ab3"
0000E498 <prefixtree.include.ab3@291> XINCLUDE "translation.include.ab3"
0000E4A2 <prefixtree.include.ab3@292> XINCLUDE "translation.include.ab3"
0000E4B0 <prefixtree.include.ab3@293> XINCLUDE "translation.include.ab3"
0000E4BE <prefixtree.include.ab3@294> XINCLUDE "translation.include.ab3"
0000E4CC <prefixtree.include.ab3@295> XINCLUDE "translation.include.ab3"
0000E4E6 <prefixtree.include.ab3@296> XINCLUDE "translation.include.ab3"
0000E4F4 <prefixtree.include.ab3@297> XINCLUDE "translation.include.ab3"
0000E504 <prefixtree.include.ab3@298> XINCLUDE "translation.include.ab3"
0000E514 <prefixtree.include.ab3@299> XINCLUDE "translation.include.ab3"
0000E524 <prefixtree.include.ab3@300> XINCLUDE "translation.include.ab3"
0000E532 <prefixtree.include.ab3@301> XINCLUDE "translation.include.ab3"
0000E53C <prefixtree.include.ab3@303> XINCLUDE "translation.include.ab3"
0000E542 <prefixtree.include.ab3@304> XINCLUDE "translation.include.ab3"
0000E560 <prefixtree.include.ab3@322> XINCLUDE "translation.include.ab3"
0000E566 <prefixtree.include.ab3@323> XINCLUDE "translation.include.ab3"
0000E570 <prefixtree.include.ab3@324> XINCLUDE "translation.include.ab3"
0000E590 <prefixtree.include.ab3@325> XINCLUDE "translation.include.ab3"
0000E5BE <prefixtree.include.ab3@326> XINCLUDE "translation.include.ab3"
0000E5DC <prefixtree.include.ab3@327> XINCLUDE "translation.include.ab3"
0000E5E6 <prefixtree.include.ab3@328> XINCLUDE "translation.include.ab3"
0000E5F8 <prefixtree.include.ab3@329> XINCLUDE "translation.include.ab3"
0000E624 <prefixtree.include.ab3@330> XINCLUDE "translation.include.ab3"
0000E63A <prefixtree.include.ab3@331> XINCLUDE "translation.include.ab3"
0000E646 <prefixtree.include.ab3@333> XINCLUDE "translation.include.ab3"
0000E652 <prefixtree.include.ab3@334> XINCLUDE "translation.include.ab3"
0000E658 <prefixtree.include.ab3@335> XINCLUDE "translation.include.ab3"
0000E65E <prefixtree.include.ab3@336> XINCLUDE "translation.include.ab3"
0000E664 <prefixtree.include.ab3@337> XINCLUDE "translation.include.ab3"
0000E69C <prefixtree.include.ab3@338> XINCLUDE "translation.include.ab3"
0000E6A2 <prefixtree.include.ab3@340> XINCLUDE "translation.include.ab3"
0000E6A8 <prefixtree.include.ab3@341> XINCLUDE "translation.include.ab3"
0000E6B2 <prefixtree.include.ab3@344> XINCLUDE "translation.include.ab3"
0000E6B8 <prefixtree.include.ab3@345> XINCLUDE "translation.include.ab3"
0000E6EA <prefixtree.include.ab3@365> XINCLUDE "translation.include.ab3"
0000E706 <prefixtree.include.ab3@366> XINCLUDE "translation.include.ab3"
0000E720 <prefixtree.include.ab3@367> XINCLUDE "translation.include.ab3"
0000E734 <prefixtree.include.ab3@368> XINCLUDE "translation.include.ab3"
0000E784 <prefixtree.include.ab3@369> XINCLUDE "translation.include.ab3"
0000E7A6 <prefixtree.include.ab3@371> XINCLUDE "translation.include.ab3"
0000E7BA <prefixtree.include.ab3@372> XINCLUDE "translation.include.ab3"
0000E7C8 <prefixtree.include.ab3@373> XINCLUDE "translation.include.ab3"
0000E7D4 <prefixtree.include.ab3@374> XINCLUDE "translation.include.ab3"
0000E7DC <prefixtree.include.ab3@375> XINCLUDE "translation.include.ab3"
0000E7E4 <prefixtree.include.ab3@376> XINCLUDE "translation.include.ab3"
0000E7EC <prefixtree.include.ab3@377> XINCLUDE "translation.include.ab3"
0000E7F4 <prefixtree.include.ab3@378> XINCLUDE "translation.include.ab3"
0000E7FA <prefixtree.include.ab3@379> XINCLUDE "translation.include.ab3"
0000E808 <prefixtree.include.ab3@380> XINCLUDE "translation.include.ab3"
0000E82A <prefixtree.include.ab3@382> XINCLUDE "translation.include.ab3"
0000E856 <prefixtree.include.ab3@383> XINCLUDE "translation.include.ab3"
0000E868 <prefixtree.include.ab3@385> XINCLUDE "translation.include.ab3"
0000E86E <prefixtree.include.ab3@386> XINCLUDE "translation.include.ab3"
0000E896 <prefixtree.include.ab3@388> XINCLUDE "translation.include.ab3"
0000E8BA <prefixtree.include.ab3@389> XINCLUDE "translation.include.ab3"
0000E8E2 <prefixtree.include.ab3@390> XINCLUDE "translation.include.ab3"
0000E916 <prefixtree.include.ab3@391> XINCLUDE "translation.include.ab3"
0000E926 <prefixtree.include.ab3@392> XINCLUDE "translation.include.ab3"
0000E930 <prefixtree.include.ab3@393> XINCLUDE "translation.include.ab3"
0000E93E <prefixtree.include.ab3@394> XINCLUDE "translation.include.ab3"
0000E952 <prefixtree.include.ab3@395> XINCLUDE "translation.include.ab3"
0000E958 <prefixtree.include.ab3@396> XINCLUDE "translation.include.ab3"
0000E978 <prefixtree.include.ab3@397> XINCLUDE "translation.include.ab3"
0000E97E <prefixtree.include.ab3@398> XINCLUDE "translation.include.ab3"
0000E986 <prefixtree.include.ab3@400> XINCLUDE "translation.include.ab3"
0000E9C0 <prefixtree.include.ab3@402> XINCLUDE "translation.include.ab3"
0000E9E6 <prefixtree.include.ab3@403> XINCLUDE "translation.include.ab3"
0000E9FE <prefixtree.include.ab3@404> XINCLUDE "translation.include.ab3"
0000EA32 <prefixtree.include.ab3@405> XINCLUDE "translation.include.ab3"
0000EA3A <prefixtree.include.ab3@406> XINCLUDE "translation.include.ab3"
0000EA48 <prefixtree.include.ab3@408> XINCLUDE "translation.include.ab3"
0000EA4E <prefixtree.include.ab3@410> XINCLUDE "translation.include.ab3"
0000EA66 <prefixtree.include.ab3@411> XINCLUDE "translation.include.ab3"
0000EA6C <prefixtree.include.ab3@412> XINCLUDE "translation.include.ab3"
0000EA72 <prefixtree.include.ab3@413> XINCLUDE "translation.include.ab3"
0000EA8C <prefixtree.include.ab3@414> XINCLUDE "translation.include.ab3"
0000EA92 <prefixtree.include.ab3@417> XINCLUDE "translation.include.ab3"
0000EA98 <prefixtree.include.ab3@419> XINCLUDE "translation.include.ab3"
0000EA9E <prefixtree.include.ab3@421> XINCLUDE "translation.include.ab3"
0000EAAC <prefixtree.include.ab3@422> XINCLUDE "translation.include.ab3"
0000EABA <prefixtree.include.ab3@423> XINCLUDE "translation.include.ab3"
0000EAF4 <prefixtree.include.ab3@425> XINCLUDE "translation.include.ab3"
0000EB1A <prefixtree.include.ab3@426> XINCLUDE "translation.include.ab3"
0000EB32 <prefixtree.include.ab3@427> XINCLUDE "translation.include.ab3"
0000EB3E <prefixtree.include.ab3@430> XINCLUDE "translation.include.ab3"
0000EB4A <prefixtree.include.ab3@431> XINCLUDE "translation.include.ab3"
0000EB56 <prefixtree.include.ab3@432> XINCLUDE "translation.include.ab3"
0000EB62 <prefixtree.include.ab3@433> XINCLUDE "translation.include.ab3"
0000EB6E <prefixtree.include.ab3@434> XINCLUDE "translation.include.ab3"
0000EB78 <prefixtree.include.ab3@435> XINCLUDE "translation.include.ab3"
0000EB80 <prefixtree.include.ab3@437> XINCLUDE "translation.include.ab3"
0000EB9A <prefixtree.include.ab3@438> XINCLUDE "translation.include.ab3"
0000EBD8 <prefixtree.include.ab3@485> XINCLUDE "translation.include.ab3"
0000EBDE <prefixtree.include.ab3@486> XINCLUDE "translation.include.ab3"
0000EC44 <prefixtree.include.ab3@487> XINCLUDE "translation.include.ab3"
0000EC84 <prefixtree.include.ab3@489> XINCLUDE "translation.include.ab3"
0000ECDA <prefixtree.include.ab3@490> XINCLUDE "translation.include.ab3"
0000ED4C <prefixtree.include.ab3@491> XINCLUDE "translation.include.ab3"
0000ED58 <prefixtree.include.ab3@493> XINCLUDE "translation.include.ab3"
0000ED66 <prefixtree.include.ab3@494> XINCLUDE "translation.include.ab3"
0000EDAC <prefixtree.include.ab3@495> XINCLUDE "translation.include.ab3"
0000EDF6 <prefixtree.include.ab3@496> XINCLUDE "translation.include.ab3"
0000EE2E <prefixtree.include.ab3@497> XINCLUDE "translation.include.ab3"
0000EE82 <prefixtree.include.ab3@498> XINCLUDE "translation.include.ab3"
0000EE88 <prefixtree.include.ab3@499> XINCLUDE "translation.include.ab3"
0000EE8E <prefixtree.include.ab3@500> XINCLUDE "translation.include.ab3"
0000EE9C <prefixtree.include.ab3@502> XINCLUDE "translation.include.ab3"
0000EEA4 <prefixtree.include.ab3@503> XINCLUDE "translation.include.ab3"
0000EEDE <prefixtree.include.ab3@505> XINCLUDE "translation.include.ab3"
0000EF04 <prefixtree.include.ab3@506> XINCLUDE "translation.include.ab3"
0000EF1C <prefixtree.include.ab3@507> XINCLUDE "translation.include.ab3"
0000EF52 <prefixtree.include.ab3@508> XINCLUDE "translation.include.ab3"
0000EF68 <prefixtree.include.ab3@509> XINCLUDE "translation.include.ab3"
0000EF76 <prefixtree.include.ab3@511> XINCLUDE "translation.include.ab3"
0000EF8E <prefixtree.include.ab3@512> XINCLUDE "translation.include.ab3"
0000EFC6 <prefixtree.include.ab3@513> XINCLUDE "translation.include.ab3"
0000EFEC <prefixtree.include.ab3@514> XINCLUDE "translation.include.ab3"
0000F034 <prefixtree.include.ab3@515> XINCLUDE "translation.include.ab3"
0000F03A <prefixtree.include.ab3@516> XINCLUDE "translation.include.ab3"
0000F054 <prefixtree.include.ab3@518> XINCLUDE "translation.include.ab3"
0000F060 <prefixtree.include.ab3@519> XINCLUDE "translation.include.ab3"
0000F066 <prefixtree.include.ab3@520> XINCLUDE "translation.include.ab3"
0000F092 <prefixtree.include.ab3@521> XINCLUDE "translation.include.ab3"
0000F0A6 <prefixtree.include.ab3@526> XINCLUDE "translation.include.ab3"
0000F0B4 <prefixtree.include.ab3@528> XINCLUDE "translation.include.ab3"
0000F0BC <prefixtree.include.ab3@529> XINCLUDE "translation.include.ab3"
0000F0F6 <prefixtree.include.ab3@531> XINCLUDE "translation.include.ab3"
0000F11C <prefixtree.include.ab3@532> XINCLUDE "translation.include.ab3"
0000F134 <prefixtree.include.ab3@533> XINCLUDE "translation.include.ab3"
0000F16E <prefixtree.include.ab3@534> XINCLUDE "translation.include.ab3"
0000F198 <prefixtree.include.ab3@535> XINCLUDE "translation.include.ab3"
0000F1B0 <prefixtree.include.ab3@536> XINCLUDE "translation.include.ab3"
0000F1E0 <prefixtree.include.ab3@537> XINCLUDE "translation.include.ab3"
0000F20C <prefixtree.include.ab3@538> XINCLUDE "translation.include.ab3"
0000F228 <prefixtree.include.ab3@539> XINCLUDE "translation.include.ab3"
0000F236 <prefixtree.include.ab3@541> XINCLUDE "translation.include.ab3"
0000F244 <prefixtree.include.ab3@542> XINCLUDE "translation.include.ab3"
0000F282 <prefixtree.include.ab3@543> XINCLUDE "translation.include.ab3"
0000F2BE <prefixtree.include.ab3@544> XINCLUDE "translation.include.ab3"
0000F32A <prefixtree.include.ab3@545> XINCLUDE "translation.include.ab3"
0000F358 <prefixtree.include.ab3@546> XINCLUDE "translation.include.ab3"
0000F386 <prefixtree.include.ab3@547> XINCLUDE "translation.include.ab3"
0000F3CE <prefixtree.include.ab3@548> XINCLUDE "translation.include.ab3"
0000F3E8 <prefixtree.include.ab3@551> XINCLUDE "translation.include.ab3"
0000F430 <prefixtree.include.ab3@552> XINCLUDE "translation.include.ab3"
0000F44E <prefixtree.include.ab3@553> XINCLUDE "translation.include.ab3"
0000F46C <prefixtree.include.ab3@554> XINCLUDE "translation.include.ab3"
0000F486 <prefixtree.include.ab3@557> XINCLUDE "translation.include.ab3"
0000F492 <prefixtree.include.ab3@558> XINCLUDE "translation.include.ab3"
0000F498 <prefixtree.include.ab3@559> XINCLUDE "translation.include.ab3"
0000F4C4 <prefixtree.include.ab3@560> XINCLUDE "translation.include.ab3"
0000F4DC <prefixtree.include.ab3@562> XINCLUDE "translation.include.ab3"
0000F4E2 <prefixtree.include.ab3@563> XINCLUDE "translation.include.ab3"
0000F4F6 <prefixtree.include.ab3@566> XINCLUDE "translation.include.ab3"
0000F504 <prefixtree.include.ab3@568> XINCLUDE "translation.include.ab3"
0000F512 <prefixtree.include.ab3@569> XINCLUDE "translation.include.ab3"
0000F520 <prefixtree.include.ab3@570> XINCLUDE "translation.include.ab3"
0000F528 <prefixtree.include.ab3@571> XINCLUDE "translation.include.ab3"
0000F554 <prefixtree.include.ab3@572> XINCLUDE "translation.include.ab3"
0000F57C <prefixtree.include.ab3@573> XINCLUDE "translation.include.ab3"
0000F5A4 <prefixtree.include.ab3@574> XINCLUDE "translation.include.ab3"
0000F610 <prefixtree.include.ab3@575> XINCLUDE "translation.include.ab3"
0000F620 <prefixtree.include.ab3@576> XINCLUDE "translation.include.ab3"
0000F64C <prefixtree.include.ab3@577> XINCLUDE "translation.include.ab3"
0000F6A2 <prefixtree.include.ab3@579> XINCLUDE "translation.include.ab3"
0000F6B0 <prefixtree.include.ab3@580> XINCLUDE "translation.include.ab3"
0000F6BE <prefixtree.include.ab3@581> XINCLUDE "translation.include.ab3"
0000F6C4 <prefixtree.include.ab3@582> XINCLUDE "translation.include.ab3"
0000F718 <prefixtree.include.ab3@584> XINCLUDE "translation.include.ab3"
0000F838 <prefixtree.include.ab3@585> XINCLUDE "translation.include.ab3"
0000F888 <prefixtree.include.ab3@587> XINCLUDE "translation.include.ab3"
0000F8DE <prefixtree.include.ab3@588> XINCLUDE "translation.include.ab3"
0000F94A <prefixtree.include.ab3@589> XINCLUDE "translation.include.ab3"
0000F952 <prefixtree.include.ab3@593> XINCLUDE "translation.include.ab3"
0000F98C <prefixtree.include.ab3@595> XINCLUDE "translation.include.ab3"
0000F9B2 <prefixtree.include.ab3@596> XINCLUDE "translation.include.ab3"
0000F9CA <prefixtree.include.ab3@597> XINCLUDE "translation.include.ab3"
0000FA04 <prefixtree.include.ab3@598> XINCLUDE "translation.include.ab3"
0000FA2E <prefixtree.include.ab3@599> XINCLUDE "translation.include.ab3"
0000FA46 <prefixtree.include.ab3@600> XINCLUDE "translation.include.ab3"
0000FA6A <prefixtree.include.ab3@602> XINCLUDE "translation.include.ab3"
0000FABE <prefixtree.include.ab3@603> XINCLUDE "translation.include.ab3"
0000FAC6 <prefixtree.include.ab3@604> XINCLUDE "translation.include.ab3"
0000FACC <prefixtree.include.ab3@605> XINCLUDE "translation.include.ab3"
0000FB2E <prefixtree.include.ab3@606> XINCLUDE "translation.include.ab3"
0000FB5A <prefixtree.include.ab3@607> XINCLUDE "translation.include.ab3"
0000FB76 <prefixtree.include.ab3@610> XINCLUDE "translation.include.ab3"
0000FB84 <prefixtree.include.ab3@612> XINCLUDE "translation.include.ab3"
0000FB92 <prefixtree.include.ab3@613> XINCLUDE "translation.include.ab3"
0000FBA0 <prefixtree.include.ab3@615> XINCLUDE "translation.include.ab3"
0000FBAE <prefixtree.include.ab3@616> XINCLUDE "translation.include.ab3"
0000FBF2 <prefixtree.include.ab3@617> XINCLUDE "translation.include.ab3"
0000FC5E <prefixtree.include.ab3@618> XINCLUDE "translation.include.ab3"
0000FC8C <prefixtree.include.ab3@619> XINCLUDE "translation.include.ab3"
0000FCA0 <prefixtree.include.ab3@620> XINCLUDE "translation.include.ab3"
0000FCD2 <prefixtree.include.ab3@621> XINCLUDE "translation.include.ab3"
0000FD1C <prefixtree.include.ab3@622> XINCLUDE "translation.include.ab3"
0000FD2C <prefixtree.include.ab3@623> XINCLUDE "translation.include.ab3"
0000FD60 <prefixtree.include.ab3@624> XINCLUDE "translation.include.ab3"
0000FD82 <prefixtree.include.ab3@625> XINCLUDE "translation.include.ab3"
0000FD92 <prefixtree.include.ab3@626> XINCLUDE "translation.include.ab3"
0000FD9A <prefixtree.include.ab3@629> XINCLUDE "translation.include.ab3"
0000FDDE <prefixtree.include.ab3@630> XINCLUDE "translation.include.ab3"
0000FE4A <prefixtree.include.ab3@631> XINCLUDE "translation.include.ab3"
0000FE78 <prefixtree.include.ab3@632> XINCLUDE "translation.include.ab3"
0000FE9C <prefixtree.include.ab3@634> XINCLUDE "translation.include.ab3"
0000FEE0 <prefixtree.include.ab3@635> XINCLUDE "translation.include.ab3"
0000FF4C <prefixtree.include.ab3@636> XINCLUDE "translation.include.ab3"
0000FF7A <prefixtree.include.ab3@637> XINCLUDE "translation.include.ab3"
0000FFA8 <prefixtree.include.ab3@638> XINCLUDE "translation.include.ab3"
0000FFB0 <prefixtree.include.ab3@639> XINCLUDE "translation.include.ab3"
0000FFDE <prefixtree.include.ab3@640> XINCLUDE "translation.include.ab3"
00010050 <prefixtree.include.ab3@641> XINCLUDE "translation.include.ab3"
00010056 <prefixtree.include.ab3@642> XINCLUDE "translation.include.ab3"
00010084 <prefixtree.include.ab3@643> XINCLUDE "translation.include.ab3"
000100F6 <prefixtree.include.ab3@644> XINCLUDE "translation.include.ab3"
00010114 <prefixtree.include.ab3@647> XINCLUDE "translation.include.ab3"
00010138 <prefixtree.include.ab3@648> XINCLUDE "translation.include.ab3"
00010150 <prefixtree.include.ab3@649> XINCLUDE "translation.include.ab3"
00010156 <prefixtree.include.ab3@650> XINCLUDE "translation.include.ab3"
0001015C <prefixtree.include.ab3@653> XINCLUDE "translation.include.ab3"
0001015E <prefixtree.include.ab3@655> XINCLUDE "translation.include.ab3"
00010168 <prefixtree.include.ab3@658> XINCLUDE "translation.include.ab3"
00010194 <prefixtree.include.ab3@659> XINCLUDE "translation.include.ab3"
000101B6 <prefixtree.include.ab3@677> XINCLUDE "translation.include.ab3"
000101BE <prefixtree.include.ab3@679> XINCLUDE "translation.include.ab3"
000101C4 <prefixtree.include.ab3@680> XINCLUDE "translation.include.ab3"
000101D2 <prefixtree.include.ab3@681> XINCLUDE "translation.include.ab3"
0001020C <prefixtree.include.ab3@683> XINCLUDE "translation.include.ab3"
00010232 <prefixtree.include.ab3@684> XINCLUDE "translation.include.ab3"
0001024A <prefixtree.include.ab3@685> XINCLUDE "translation.include.ab3"
00010284 <prefixtree.include.ab3@686> XINCLUDE "translation.include.ab3"
000102AE <prefixtree.include.ab3@687> XINCLUDE "translation.include.ab3"
000102C6 <prefixtree.include.ab3@689> XINCLUDE "translation.include.ab3"
000102DE <prefixtree.include.ab3@690> XINCLUDE "translation.include.ab3"
00010316 <prefixtree.include.ab3@691> XINCLUDE "translation.include.ab3"
0001031E <prefixtree.include.ab3@693> XINCLUDE "translation.include.ab3"
00010358 <prefixtree.include.ab3@695> XINCLUDE "translation.include.ab3"
0001036A <prefixtree.include.ab3@697> XINCLUDE "translation.include.ab3"
00010390 <prefixtree.include.ab3@698> XINCLUDE "translation.include.ab3"
000103A6 <prefixtree.include.ab3@699> XINCLUDE "translation.include.ab3"
000103CC <prefixtree.include.ab3@700> XINCLUDE "translation.include.ab3"
000103E0 <prefixtree.include.ab3@701> XINCLUDE "translation.include.ab3"
000103F8 <prefixtree.include.ab3@703> XINCLUDE "translation.include.ab3"
0001040A <prefixtree.include.ab3@705> XINCLUDE "translation.include.ab3"
00010414 <prefixtree.include.ab3@707> XINCLUDE "translation.include.ab3"
00010428 <prefixtree.include.ab3@709> XINCLUDE "translation.include.ab3"
00010442 <prefixtree.include.ab3@726> XINCLUDE "translation.include.ab3"
0001045E <prefixtree.include.ab3@728> XINCLUDE "translation.include.ab3"
00010470 <prefixtree.include.ab3@729> XINCLUDE "translation.include.ab3"
0001048C <prefixtree.include.ab3@730> XINCLUDE "translation.include.ab3"
000104C8 <prefixtree.include.ab3@731> XINCLUDE "translation.include.ab3"
000104E4 <prefixtree.include.ab3@732> XINCLUDE "translation.include.ab3"
00010504 <prefixtree.include.ab3@733> XINCLUDE "translation.include.ab3"
0001050E <prefixtree.include.ab3@734> XINCLUDE "translation.include.ab3"
00010514 <prefixtree.include.ab3@735> XINCLUDE "translation.include.ab3"
0001051E <prefixtree.include.ab3@736> XINCLUDE "translation.include.ab3"
00010526 <prefixtree.include.ab3@738> XINCLUDE "translation.include.ab3"
0001052C <prefixtree.include.ab3@740> XINCLUDE "translation.include.ab3"
0001055A <prefixtree.include.ab3@759> XINCLUDE "translation.include.ab3"
00010582 <prefixtree.include.ab3@760> XINCLUDE "translation.include.ab3"
000105C2 <prefixtree.include.ab3@761> XINCLUDE "translation.include.ab3"
000105DA <prefixtree.include.ab3@762> XINCLUDE "translation.include.ab3"
00010620 <prefixtree.include.ab3@763> XINCLUDE "translation.include.ab3"
0001064A <prefixtree.include.ab3@766> XINCLUDE "translation.include.ab3"
00010678 <prefixtree.include.ab3@767> XINCLUDE "translation.include.ab3"
00010692 <prefixtree.include.ab3@966> XINCLUDE "translation.include.ab3"
00010698 <prefixtree.include.ab3@967> XINCLUDE "translation.include.ab3"
000106B0 <prefixtree.include.ab3@968> XINCLUDE "translation.include.ab3"
000106BA <prefixtree.include.ab3@969> XINCLUDE "translation.include.ab3"
000106CC <prefixtree.include.ab3@970> XINCLUDE "translation.include.ab3"
00010704 <prefixtree.include.ab3@971> XINCLUDE "translation.include.ab3"
00010712 <prefixtree.include.ab3@972> XINCLUDE "translation.include.ab3"
0001071E <prefixtree.include.ab3@973> XINCLUDE "translation.include.ab3"
0001073A <prefixtree.include.ab3@974> XINCLUDE "translation.include.ab3"
0001075C <prefixtree.include.ab3@975> XINCLUDE "translation.include.ab3"
0001077E <prefixtree.include.ab3@976> XINCLUDE "translation.include.ab3"
000107A0 <prefixtree.include.ab3@977> XINCLUDE "translation.include.ab3"
000107C2 <prefixtree.include.ab3@978> XINCLUDE "translation.include.ab3"
000107DE <prefixtree.include.ab3@979> XINCLUDE "translation.include.ab3"
000107FC <prefixtree.include.ab3@980> XINCLUDE "translation.include.ab3"
00010810 <prefixtree.include.ab3@981> XINCLUDE "translation.include.ab3"
00010816 <prefixtree.include.ab3@983> XINCLUDE "translation.include.ab3"
00010818 <prefixtree.include.ab3@985> XINCLUDE "translation.include.ab3"
0001081E <prefixtree.include.ab3@986> XINCLUDE "translation.include.ab3"
00010828 <prefixtree.include.ab3@988> XINCLUDE "translation.include.ab3"
0001082E <prefixtree.include.ab3@989> XINCLUDE "translation.include.ab3"
0001084C <prefixtree.include.ab3@1007> XINCLUDE "translation.include.ab3"
00010852 <prefixtree.include.ab3@1008> XINCLUDE "translation.include.ab3"
00010876 <prefixtree.include.ab3@1009> XINCLUDE "translation.include.ab3"
00010894 <prefixtree.include.ab3@1010> XINCLUDE "translation.include.ab3"
000108C2 <prefixtree.include.ab3@1011> XINCLUDE "translation.include.ab3"
000108F0 <prefixtree.include.ab3@1012> XINCLUDE "translation.include.ab3"
0001091E <prefixtree.include.ab3@1013> XINCLUDE "translation.include.ab3"
0001094C <prefixtree.include.ab3@1014> XINCLUDE "translation.include.ab3"
00010980 <prefixtree.include.ab3@1015> XINCLUDE "translation.include.ab3"
00010990 <prefixtree.include.ab3@1016> XINCLUDE "translation.include.ab3"
0001099A <prefixtree.include.ab3@1018> XINCLUDE "translation.include.ab3"
000109A0 <prefixtree.include.ab3@1019> XINCLUDE "translation.include.ab3"
000109A0 <phrasebook.include.ab3@34> XINCLUDE "translation.include.ab3"
000109EA <phrasebook.include.ab3@58> XINCLUDE "translation.include.ab3"
00010A0A <phrasebook.include.ab3@59> XINCLUDE "translation.include.ab3"
00010A14 <phrasebook.include.ab3@60> XINCLUDE "translation.include.ab3"
00010A28 <phrasebook.include.ab3@61> XINCLUDE "translation.include.ab3"
00010A6E <phrasebook.include.ab3@62> XINCLUDE "translation.include.ab3"
00010AB4 <phrasebook.include.ab3@63> XINCLUDE "translation.include.ab3"
00010AFA <phrasebook.include.ab3@64> XINCLUDE "translation.include.ab3"
00010B04 <phrasebook.include.ab3@66> XINCLUDE "translation.include.ab3"
00010B20 <phrasebook.include.ab3@67> XINCLUDE "translation.include.ab3"
00010B4A <phrasebook.include.ab3@70> XINCLUDE "translation.include.ab3"
00010BC8 <phrasebook.include.ab3@71> XINCLUDE "translation.include.ab3"
00010C46 <phrasebook.include.ab3@72> XINCLUDE "translation.include.ab3"
00010CC4 <phrasebook.include.ab3@73> XINCLUDE "translation.include.ab3"
00010D42 <phrasebook.include.ab3@74> XINCLUDE "translation.include.ab3"
00010DC0 <phrasebook.include.ab3@75> XINCLUDE "translation.include.ab3"
00010E3E <phrasebook.include.ab3@76> XINCLUDE "translation.include.ab3"
00010EBC <phrasebook.include.ab3@77> XINCLUDE "translation.include.ab3"
00010F3A <phrasebook.include.ab3@78> XINCLUDE "translation.include.ab3"
00010FB8 <phrasebook.include.ab3@79> XINCLUDE "translation.include.ab3"
00011036 <phrasebook.include.ab3@80> XINCLUDE "translation.include.ab3"
000110BA <phrasebook.include.ab3@81> XINCLUDE "translation.include.ab3"
000110EA <phrasebook.include.ab3@82> XINCLUDE "translation.include.ab3"
00011146 <phrasebook.include.ab3@84> XINCLUDE "translation.include.ab3"
00011172 <phrasebook.include.ab3@85> XINCLUDE "translation.include.ab3"
0001123C <phrasebook.include.ab3@86> XINCLUDE "translation.include.ab3"
0001124A <phrasebook.include.ab3@88> XINCLUDE "translation.include.ab3"
00011288 <phrasebook.include.ab3@89> XINCLUDE "translation.include.ab3"
0001130C <phrasebook.include.ab3@90> XINCLUDE "translation.include.ab3"
00011336 <phrasebook.include.ab3@91> XINCLUDE "translation.include.ab3"
00011354 <phrasebook.include.ab3@92> XINCLUDE "translation.include.ab3"
0001136E <phrasebook.include.ab3@106> XINCLUDE "translation.include.ab3"
00011378 <phrasebook.include.ab3@107> XINCLUDE "translation.include.ab3"
00011384 <phrasebook.include.ab3@108> XINCLUDE "translation.include.ab3"
00011394 <phrasebook.include.ab3@109> XINCLUDE "translation.include.ab3"
000113A4 <phrasebook.include.ab3@110> XINCLUDE "translation.include.ab3"
000113B4 <phrasebook.include.ab3@111> XINCLUDE "translation.include.ab3"
000113C4 <phrasebook.include.ab3@112> XINCLUDE "translation.include.ab3"
000113C8 <phrasebook.include.ab3@114> XINCLUDE "translation.include.ab3"
00011406 <phrasebook.include.ab3@131> XINCLUDE "translation.include.ab3"
0001145E <phrasebook.include.ab3@132> XINCLUDE "translation.include.ab3"
000114BA <phrasebook.include.ab3@133> XINCLUDE "translation.include.ab3"
00011544 <phrasebook.include.ab3@134> XINCLUDE "translation.include.ab3"
000115C2 <phrasebook.include.ab3@135> XINCLUDE "translation.include.ab3"
000115DC <phrasebook.include.ab3@137> XINCLUDE "translation.include.ab3"
0001160A <phrasebook.include.ab3@155> XINCLUDE "translation.include.ab3"
00011646 <phrasebook.include.ab3@156> XINCLUDE "translation.include.ab3"
00011714 <phrasebook.include.ab3@158> XINCLUDE "translation.include.ab3"
000117E2 <phrasebook.include.ab3@159> XINCLUDE "translation.include.ab3"
0001182E <phrasebook.include.ab3@161> XINCLUDE "translation.include.ab3"
000118AC <phrasebook.include.ab3@162> XINCLUDE "translation.include.ab3"
0001192A <phrasebook.include.ab3@163> XINCLUDE "translation.include.ab3"
00011988 <phrasebook.include.ab3@165> XINCLUDE "translation.include.ab3"
00011A1E <phrasebook.include.ab3@166> XINCLUDE "translation.include.ab3"
00011A56 <phrasebook.include.ab3@168> XINCLUDE "translation.include.ab3"
00011AB4 <phrasebook.include.ab3@169> XINCLUDE "translation.include.ab3"
00011B3C <phrasebook.include.ab3@170> XINCLUDE "translation.include.ab3"
00011B44 <phrasebook.include.ab3@172> XINCLUDE "translation.include.ab3"
00011BAE <phrasebook.include.ab3@174> XINCLUDE "translation.include.ab3"
00011C1A <phrasebook.include.ab3@175> XINCLUDE "translation.include.ab3"
00011C58 <phrasebook.include.ab3@176> XINCLUDE "translation.include.ab3"
00011CE0 <phrasebook.include.ab3@177> XINCLUDE "translation.include.ab3"
00011D0C <phrasebook.include.ab3@187> XINCLUDE "translation.include.ab3"
00011D68 <phrasebook.include.ab3@188> XINCLUDE "translation.include.ab3"
00011E30 <phrasebook.include.ab3@189> XINCLUDE "translation.include.ab3"
00011E94 <phrasebook.include.ab3@190> XINCLUDE "translation.include.ab3"
00011E9A <phrasebook.include.ab3@191> XINCLUDE "translation.include.ab3"
00011ECE <phrasebook.include.ab3@192> XINCLUDE "translation.include.ab3"
00011F9C <phrasebook.include.ab3@196> XINCLUDE "translation.include.ab3"
0001206A <phrasebook.include.ab3@197> XINCLUDE "translation.include.ab3"
00012094 <phrasebook.include.ab3@199> XINCLUDE "translation.include.ab3"
000120B2 <phrasebook.include.ab3@200> XINCLUDE "translation.include.ab3"
000120E0 <phrasebook.include.ab3@204> XINCLUDE "translation.include.ab3"
0001211C <phrasebook.include.ab3@205> XINCLUDE "translation.include.ab3"
0001218C <phrasebook.include.ab3@206> XINCLUDE "translation.include.ab3"
00012194 <phrasebook.include.ab3@207> XINCLUDE "translation.include.ab3"
000121E6 <phrasebook.include.ab3@208> XINCLUDE "translation.include.ab3"
0001220E <phrasebook.include.ab3@209> XINCLUDE "translation.include.ab3"
00012226 <phrasebook.include.ab3@210> XINCLUDE "translation.include.ab3"
000122DA <phrasebook.include.ab3@211> XINCLUDE "translation.include.ab3"
000122E8 <phrasebook.include.ab3@212> XINCLUDE "translation.include.ab3"
0001233E <phrasebook.include.ab3@213> XINCLUDE "translation.include.ab3"
0001239C <phrasebook.include.ab3@214> XINCLUDE "translation.include.ab3"
000123A2 <phrasebook.include.ab3@215> XINCLUDE "translation.include.ab3"
00012426 <phrasebook.include.ab3@216> XINCLUDE "translation.include.ab3"
000124AA <phrasebook.include.ab3@217> XINCLUDE "translation.include.ab3"
0001252E <phrasebook.include.ab3@218> XINCLUDE "translation.include.ab3"
000125AC <phrasebook.include.ab3@219> XINCLUDE "translation.include.ab3"
0001262A <phrasebook.include.ab3@220> XINCLUDE "translation.include.ab3"
000126A8 <phrasebook.include.ab3@221> XINCLUDE "translation.include.ab3"
00012726 <phrasebook.include.ab3@222> XINCLUDE "translation.include.ab3"
000127A4 <phrasebook.include.ab3@223> XINCLUDE "translation.include.ab3"
00012822 <phrasebook.include.ab3@224> XINCLUDE "translation.include.ab3"
000128A0 <phrasebook.include.ab3@225> XINCLUDE "translation.include.ab3"
000128CA <phrasebook.include.ab3@226> XINCLUDE "translation.include.ab3"
000128E8 <phrasebook.include.ab3@227> XINCLUDE "translation.include.ab3"
00012916 <phrasebook.include.ab3@245> XINCLUDE "translation.include.ab3"
0001295A <phrasebook.include.ab3@246> XINCLUDE "translation.include.ab3"
00012960 <phrasebook.include.ab3@247> XINCLUDE "translation.include.ab3"
0001297A <phrasebook.include.ab3@248> XINCLUDE "translation.include.ab3"
00012996 <phrasebook.include.ab3@249> XINCLUDE "translation.include.ab3"
000129CA <phrasebook.include.ab3@250> XINCLUDE "translation.include.ab3"
000129EE <phrasebook.include.ab3@251> XINCLUDE "translation.include.ab3"
00012A16 <phrasebook.include.ab3@252> XINCLUDE "translation.include.ab3"
00012A82 <phrasebook.include.ab3@253> XINCLUDE "translation.include.ab3"
00012AE0 <phrasebook.include.ab3@256> XINCLUDE "translation.include.ab3"
00012B3E <phrasebook.include.ab3@257> XINCLUDE "translation.include.ab3"
00012B8A <phrasebook.include.ab3@258> XINCLUDE "translation.include.ab3"
00012BE4 <phrasebook.include.ab3@259> XINCLUDE "translation.include.ab3"
00012BEA <phrasebook.include.ab3@260> XINCLUDE "translation.include.ab3"
00012BF0 <phrasebook.include.ab3@262> XINCLUDE "translation.include.ab3"
00012BFA <phrasebook.include.ab3@263> XINCLUDE "translation.include.ab3"
00012C04 <phrasebook.include.ab3@264> XINCLUDE "translation.include.ab3"
00012C1E <phrasebook.include.ab3@265> XINCLUDE "translation.include.ab3"
00012C4C <phrasebook.include.ab3@282> XINCLUDE "translation.include.ab3"
00012C52 <phrasebook.include.ab3@283> XINCLUDE "translation.include.ab3"
00012C96 <phrasebook.include.ab3@284> XINCLUDE "translation.include.ab3"
00012CB0 <phrasebook.include.ab3@285> XINCLUDE "translation.include.ab3"
00012CC0 <phrasebook.include.ab3@286> XINCLUDE "translation.include.ab3"
00012CCA <phrasebook.include.ab3@287> XINCLUDE "translation.include.ab3"
00012CD6 <phrasebook.include.ab3@288> XINCLUDE "translation.include.ab3"
00012CE0 <phrasebook.include.ab3@289> XINCLUDE "translation.include.ab3"
00012D04 <phrasebook.include.ab3@292> XINCLUDE "translation.include.ab3"
00012D4C <phrasebook.include.ab3@293> XINCLUDE "translation.include.ab3"
00012D94 <phrasebook.include.ab3@294> XINCLUDE "translation.include.ab3"
00012DDC <phrasebook.include.ab3@295> XINCLUDE "translation.include.ab3"
00012DF2 <phrasebook.include.ab3@296> XINCLUDE "translation.include.ab3"
00012E06 <phrasebook.include.ab3@297> XINCLUDE "translation.include.ab3"
00012E10 <phrasebook.include.ab3@299> XINCLUDE "translation.include.ab3"
00012E1A <phrasebook.include.ab3@300> XINCLUDE "translation.include.ab3"
00012E34 <phrasebook.include.ab3@301> XINCLUDE "translation.include.ab3"
00012E5E <phrasebook.include.ab3@317> XINCLUDE "translation.include.ab3"
00012EA2 <phrasebook.include.ab3@318> XINCLUDE "translation.include.ab3"
00012EBC <phrasebook.include.ab3@319> XINCLUDE "translation.include.ab3"
00012F1A <phrasebook.include.ab3@320> XINCLUDE "translation.include.ab3"
00012F34 <phrasebook.include.ab3@321> XINCLUDE "translation.include.ab3"
00012F4C <phrasebook.include.ab3@323> XINCLUDE "translation.include.ab3"
00012F56 <phrasebook.include.ab3@324> XINCLUDE "translation.include.ab3"
00012F72 <phrasebook.include.ab3@325> XINCLUDE "translation.include.ab3"
00012F80 <phrasebook.include.ab3@326> XINCLUDE "translation.include.ab3"
00012F8C <phrasebook.include.ab3@327> XINCLUDE "translation.include.ab3"
00012FD8 <phrasebook.include.ab3@328> XINCLUDE "translation.include.ab3"
0001302A <phrasebook.include.ab3@329> XINCLUDE "translation.include.ab3"
0001307C <phrasebook.include.ab3@330> XINCLUDE "translation.include.ab3"
00013090 <phrasebook.include.ab3@331> XINCLUDE "translation.include.ab3"
000130A0 <phrasebook.include.ab3@332> XINCLUDE "translation.include.ab3"
000130A6 <phrasebook.include.ab3@333> XINCLUDE "translation.include.ab3"
000130A8 <phrasebook.include.ab3@335> XINCLUDE "translation.include.ab3"
000130AE <phrasebook.include.ab3@336> XINCLUDE "translation.include.ab3"
000130B8 <phrasebook.include.ab3@338> XINCLUDE "translation.include.ab3"
000130C2 <phrasebook.include.ab3@339> XINCLUDE "translation.include.ab3"
000130DC <phrasebook.include.ab3@340> XINCLUDE "translation.include.ab3"
00013106 <phrasebook.include.ab3@379> XINCLUDE "translation.include.ab3"
0001311C <phrasebook.include.ab3@380> XINCLUDE "translation.include.ab3"
00013126 <phrasebook.include.ab3@381> XINCLUDE "translation.include.ab3"
0001319E <phrasebook.include.ab3@382> XINCLUDE "translation.include.ab3"
000131DA <phrasebook.include.ab3@383> XINCLUDE "translation.include.ab3"
000131EA <phrasebook.include.ab3@384> XINCLUDE "translation.include.ab3"
0001320A <phrasebook.include.ab3@385> XINCLUDE "translation.include.ab3"
0001322A <phrasebook.include.ab3@386> XINCLUDE "translation.include.ab3"
0001324A <phrasebook.include.ab3@387> XINCLUDE "translation.include.ab3"
00013280 <phrasebook.include.ab3@388> XINCLUDE "translation.include.ab3"
000132A8 <phrasebook.include.ab3@389> XINCLUDE "translation.include.ab3"
000132E0 <phrasebook.include.ab3@390> XINCLUDE "translation.include.ab3"
00013344 <phrasebook.include.ab3@391> XINCLUDE "translation.include.ab3"
00013364 <phrasebook.include.ab3@392> XINCLUDE "translation.include.ab3"
000133E0 <phrasebook.include.ab3@393> XINCLUDE "translation.include.ab3"
00013418 <phrasebook.include.ab3@396> XINCLUDE "translation.include.ab3"
0001348E <phrasebook.include.ab3@397> XINCLUDE "translation.include.ab3"
000134AE <phrasebook.include.ab3@398> XINCLUDE "translation.include.ab3"
0001352A <phrasebook.include.ab3@399> XINCLUDE "translation.include.ab3"
00013562 <phrasebook.include.ab3@402> XINCLUDE "translation.include.ab3"
000135D8 <phrasebook.include.ab3@403> XINCLUDE "translation.include.ab3"
000135F8 <phrasebook.include.ab3@404> XINCLUDE "translation.include.ab3"
00013674 <phrasebook.include.ab3@405> XINCLUDE "translation.include.ab3"
000136A0 <phrasebook.include.ab3@408> XINCLUDE "translation.include.ab3"
000136A8 <phrasebook.include.ab3@409> XINCLUDE "translation.include.ab3"
000136EE <phrasebook.include.ab3@410> XINCLUDE "translation.include.ab3"
0001370E <phrasebook.include.ab3@411> XINCLUDE "translation.include.ab3"
00013718 <phrasebook.include.ab3@412> XINCLUDE "translation.include.ab3"
00013730 <phrasebook.include.ab3@413> XINCLUDE "translation.include.ab3"
00013740 <phrasebook.include.ab3@414> XINCLUDE "translation.include.ab3"
00013778 <phrasebook.include.ab3@415> XINCLUDE "translation.include.ab3"
000137AA <phrasebook.include.ab3@416> XINCLUDE "translation.include.ab3"
000137BC <phrasebook.include.ab3@419> XINCLUDE "translation.include.ab3"
0001383E <phrasebook.include.ab3@420> XINCLUDE "translation.include.ab3"
00013848 <phrasebook.include.ab3@421> XINCLUDE "translation.include.ab3"
0001387A <phrasebook.include.ab3@422> XINCLUDE "translation.include.ab3"
000138AC <phrasebook.include.ab3@423> XINCLUDE "translation.include.ab3"
000138D8 <phrasebook.include.ab3@428> XINCLUDE "translation.include.ab3"
00013904 <phrasebook.include.ab3@429> XINCLUDE "translation.include.ab3"
00013926 <phrasebook.include.ab3@430> XINCLUDE "translation.include.ab3"
00013930 <phrasebook.include.ab3@432> XINCLUDE "translation.include.ab3"
0001394A <phrasebook.include.ab3@433> XINCLUDE "translation.include.ab3"
0001394A <translation.include.ab3@31> XINCLUDE "translation.include.ab3"
00013960 <translation.include.ab3@43> XINCLUDE "translation.include.ab3"
0001397C <translation.include.ab3@44> XINCLUDE "translation.include.ab3"
0001397E <translation.include.ab3@45> XINCLUDE "translation.include.ab3"
000139AC <translation.include.ab3@46> XINCLUDE "translation.include.ab3"
000139AC <AmiBlitz3.ab3@91> XINCLUDE "translation.include.ab3"
000139AC <ted.include.ab3@1> XINCLUDE "/Shared/ted.include.ab3"
000139C6 <ted.include.ab3@161> XINCLUDE "/Shared/ted.include.ab3"
000139D0 <ted.include.ab3@162> XINCLUDE "/Shared/ted.include.ab3"
000139F2 <ted.include.ab3@163> XINCLUDE "/Shared/ted.include.ab3"
00013A0A <ted.include.ab3@164> XINCLUDE "/Shared/ted.include.ab3"
00013A24 <ted.include.ab3@166> XINCLUDE "/Shared/ted.include.ab3"
00013A56 <ted.include.ab3@167> XINCLUDE "/Shared/ted.include.ab3"
00013A60 <ted.include.ab3@168> XINCLUDE "/Shared/ted.include.ab3"
00013A66 <ted.include.ab3@170> XINCLUDE "/Shared/ted.include.ab3"
00013A78 <ted.include.ab3@171> XINCLUDE "/Shared/ted.include.ab3"
00013AEC <ted.include.ab3@172> XINCLUDE "/Shared/ted.include.ab3"
00013AF2 <ted.include.ab3@173> XINCLUDE "/Shared/ted.include.ab3"
00013B2C <ted.include.ab3@174> XINCLUDE "/Shared/ted.include.ab3"
00013B36 <ted.include.ab3@177> XINCLUDE "/Shared/ted.include.ab3"
00013B3C <ted.include.ab3@178> XINCLUDE "/Shared/ted.include.ab3"
00013B52 <ted.include.ab3@180> XINCLUDE "/Shared/ted.include.ab3"
00013B5C <ted.include.ab3@181> XINCLUDE "/Shared/ted.include.ab3"
00013B74 <ted.include.ab3@183> XINCLUDE "/Shared/ted.include.ab3"
00013B76 <ted.include.ab3@185> XINCLUDE "/Shared/ted.include.ab3"
00013BA4 <ted.include.ab3@186> XINCLUDE "/Shared/ted.include.ab3"
00013BBE <ted.include.ab3@190> XINCLUDE "/Shared/ted.include.ab3"
00013BD4 <ted.include.ab3@191> XINCLUDE "/Shared/ted.include.ab3"
00013C08 <ted.include.ab3@192> XINCLUDE "/Shared/ted.include.ab3"
00013C0C <ted.include.ab3@194> XINCLUDE "/Shared/ted.include.ab3"
00013C26 <ted.include.ab3@196> XINCLUDE "/Shared/ted.include.ab3"
00013C3C <ted.include.ab3@197> XINCLUDE "/Shared/ted.include.ab3"
00013C70 <ted.include.ab3@198> XINCLUDE "/Shared/ted.include.ab3"
00013C74 <ted.include.ab3@200> XINCLUDE "/Shared/ted.include.ab3"
00013C8E <ted.include.ab3@216> XINCLUDE "/Shared/ted.include.ab3"
00013CA4 <ted.include.ab3@217> XINCLUDE "/Shared/ted.include.ab3"
00013CD8 <ted.include.ab3@218> XINCLUDE "/Shared/ted.include.ab3"
00013CDC <ted.include.ab3@220> XINCLUDE "/Shared/ted.include.ab3"
00013CF6 <ted.include.ab3@236> XINCLUDE "/Shared/ted.include.ab3"
00013D0C <ted.include.ab3@237> XINCLUDE "/Shared/ted.include.ab3"
00013D40 <ted.include.ab3@238> XINCLUDE "/Shared/ted.include.ab3"
00013D44 <ted.include.ab3@240> XINCLUDE "/Shared/ted.include.ab3"
00013D5E <ted.include.ab3@242> XINCLUDE "/Shared/ted.include.ab3"
00013D74 <ted.include.ab3@243> XINCLUDE "/Shared/ted.include.ab3"
00013DA8 <ted.include.ab3@244> XINCLUDE "/Shared/ted.include.ab3"
00013DAC <ted.include.ab3@246> XINCLUDE "/Shared/ted.include.ab3"
00013DAC <AmiBlitz3.ab3@92> XINCLUDE "/Shared/ted.include.ab3"
00013DAC <CLIModeSupport.ab3@1> XINCLUDE "CLIModeSupport.ab3"
00013DC2 <CLIModeSupport.ab3@4> XINCLUDE "CLIModeSupport.ab3"
00013DD8 <CLIModeSupport.ab3@7> XINCLUDE "CLIModeSupport.ab3"
00013DE6 <CLIModeSupport.ab3@8> XINCLUDE "CLIModeSupport.ab3"
00013DF4 <CLIModeSupport.ab3@9> XINCLUDE "CLIModeSupport.ab3"
00013DFE <CLIModeSupport.ab3@11> XINCLUDE "CLIModeSupport.ab3"
00013E10 <CLIModeSupport.ab3@12> XINCLUDE "CLIModeSupport.ab3"
00013E22 <CLIModeSupport.ab3@13> XINCLUDE "CLIModeSupport.ab3"
00013E28 <CLIModeSupport.ab3@14> XINCLUDE "CLIModeSupport.ab3"
00013E62 <CLIModeSupport.ab3@15> XINCLUDE "CLIModeSupport.ab3"
00013E66 <CLIModeSupport.ab3@18> XINCLUDE "CLIModeSupport.ab3"
00013E7C <CLIModeSupport.ab3@21> XINCLUDE "CLIModeSupport.ab3"
00013E92 <CLIModeSupport.ab3@23> XINCLUDE "CLIModeSupport.ab3"
00013E9E <CLIModeSupport.ab3@24> XINCLUDE "CLIModeSupport.ab3"
00013EAA <CLIModeSupport.ab3@25> XINCLUDE "CLIModeSupport.ab3"
00013EB2 <CLIModeSupport.ab3@26> XINCLUDE "CLIModeSupport.ab3"
00013EBA <CLIModeSupport.ab3@27> XINCLUDE "CLIModeSupport.ab3"
00013EBE <CLIModeSupport.ab3@28> XINCLUDE "CLIModeSupport.ab3"
00013EE8 <CLIModeSupport.ab3@47> XINCLUDE "CLIModeSupport.ab3"
00013F14 <CLIModeSupport.ab3@49> XINCLUDE "CLIModeSupport.ab3"
00013F26 <CLIModeSupport.ab3@50> XINCLUDE "CLIModeSupport.ab3"
00013F3E <CLIModeSupport.ab3@52> XINCLUDE "CLIModeSupport.ab3"
00013F54 <CLIModeSupport.ab3@56> XINCLUDE "CLIModeSupport.ab3"
00013F5A <CLIModeSupport.ab3@58> XINCLUDE "CLIModeSupport.ab3"
00013F90 <CLIModeSupport.ab3@61> XINCLUDE "CLIModeSupport.ab3"
00013FC8 <CLIModeSupport.ab3@62> XINCLUDE "CLIModeSupport.ab3"
00014000 <CLIModeSupport.ab3@63> XINCLUDE "CLIModeSupport.ab3"
00014038 <CLIModeSupport.ab3@64> XINCLUDE "CLIModeSupport.ab3"
00014070 <CLIModeSupport.ab3@65> XINCLUDE "CLIModeSupport.ab3"
000140A8 <CLIModeSupport.ab3@66> XINCLUDE "CLIModeSupport.ab3"
000140E0 <CLIModeSupport.ab3@67> XINCLUDE "CLIModeSupport.ab3"
00014118 <CLIModeSupport.ab3@68> XINCLUDE "CLIModeSupport.ab3"
00014150 <CLIModeSupport.ab3@69> XINCLUDE "CLIModeSupport.ab3"
00014188 <CLIModeSupport.ab3@70> XINCLUDE "CLIModeSupport.ab3"
000141C0 <CLIModeSupport.ab3@71> XINCLUDE "CLIModeSupport.ab3"
000141F8 <CLIModeSupport.ab3@72> XINCLUDE "CLIModeSupport.ab3"
00014230 <CLIModeSupport.ab3@73> XINCLUDE "CLIModeSupport.ab3"
00014264 <CLIModeSupport.ab3@74> XINCLUDE "CLIModeSupport.ab3"
0001426E <CLIModeSupport.ab3@75> XINCLUDE "CLIModeSupport.ab3"
00014278 <CLIModeSupport.ab3@77> XINCLUDE "CLIModeSupport.ab3"
00014282 <CLIModeSupport.ab3@78> XINCLUDE "CLIModeSupport.ab3"
000142AC <CLIModeSupport.ab3@82> XINCLUDE "CLIModeSupport.ab3"
000142B6 <CLIModeSupport.ab3@83> XINCLUDE "CLIModeSupport.ab3"
000142BA <CLIModeSupport.ab3@84> XINCLUDE "CLIModeSupport.ab3"
000142EE <CLIModeSupport.ab3@85> XINCLUDE "CLIModeSupport.ab3"
0001430C <CLIModeSupport.ab3@88> XINCLUDE "CLIModeSupport.ab3"
00014316 <CLIModeSupport.ab3@89> XINCLUDE "CLIModeSupport.ab3"
00014322 <CLIModeSupport.ab3@90> XINCLUDE "CLIModeSupport.ab3"
00014328 <CLIModeSupport.ab3@91> XINCLUDE "CLIModeSupport.ab3"
00014334 <CLIModeSupport.ab3@92> XINCLUDE "CLIModeSupport.ab3"
0001433A <CLIModeSupport.ab3@93> XINCLUDE "CLIModeSupport.ab3"
00014346 <CLIModeSupport.ab3@94> XINCLUDE "CLIModeSupport.ab3"
0001434C <CLIModeSupport.ab3@95> XINCLUDE "CLIModeSupport.ab3"
00014352 <CLIModeSupport.ab3@98> XINCLUDE "CLIModeSupport.ab3"
0001438C <CLIModeSupport.ab3@99> XINCLUDE "CLIModeSupport.ab3"
00014392 <CLIModeSupport.ab3@100> XINCLUDE "CLIModeSupport.ab3"
000143A8 <CLIModeSupport.ab3@103> XINCLUDE "CLIModeSupport.ab3"
000143B2 <CLIModeSupport.ab3@105> XINCLUDE "CLIModeSupport.ab3"
000143B8 <CLIModeSupport.ab3@106> XINCLUDE "CLIModeSupport.ab3"
000143BE <CLIModeSupport.ab3@108> XINCLUDE "CLIModeSupport.ab3"
000143BF <CLIModeSupport.ab3@110> XINCLUDE "CLIModeSupport.ab3"
000143C0 <CLIModeSupport.ab3@111> XINCLUDE "CLIModeSupport.ab3"
000143C1 <CLIModeSupport.ab3@112> XINCLUDE "CLIModeSupport.ab3"
000143C2 <CLIModeSupport.ab3@113> XINCLUDE "CLIModeSupport.ab3"
000143C4 <CLIModeSupport.ab3@116> XINCLUDE "CLIModeSupport.ab3"
000143C6 <CLIModeSupport.ab3@117> XINCLUDE "CLIModeSupport.ab3"
000143C8 <CLIModeSupport.ab3@120> XINCLUDE "CLIModeSupport.ab3"
000143CA <CLIModeSupport.ab3@121> XINCLUDE "CLIModeSupport.ab3"
000143CE <CLIModeSupport.ab3@122> XINCLUDE "CLIModeSupport.ab3"
000143D0 <CLIModeSupport.ab3@124> XINCLUDE "CLIModeSupport.ab3"
000143D2 <CLIModeSupport.ab3@125> XINCLUDE "CLIModeSupport.ab3"
000143D6 <CLIModeSupport.ab3@126> XINCLUDE "CLIModeSupport.ab3"
000143D8 <CLIModeSupport.ab3@127> XINCLUDE "CLIModeSupport.ab3"
000143DA <CLIModeSupport.ab3@147> XINCLUDE "CLIModeSupport.ab3"
000143DC <CLIModeSupport.ab3@148> XINCLUDE "CLIModeSupport.ab3"
000143DE <CLIModeSupport.ab3@149> XINCLUDE "CLIModeSupport.ab3"
000143E0 <CLIModeSupport.ab3@150> XINCLUDE "CLIModeSupport.ab3"
000143E2 <CLIModeSupport.ab3@153> XINCLUDE "CLIModeSupport.ab3"
000143E6 <CLIModeSupport.ab3@154> XINCLUDE "CLIModeSupport.ab3"
000143EC <CLIModeSupport.ab3@157> XINCLUDE "CLIModeSupport.ab3"
000143F0 <CLIModeSupport.ab3@158> XINCLUDE "CLIModeSupport.ab3"
000143F2 <CLIModeSupport.ab3@161> XINCLUDE "CLIModeSupport.ab3"
000143F6 <CLIModeSupport.ab3@162> XINCLUDE "CLIModeSupport.ab3"
000143F8 <CLIModeSupport.ab3@163> XINCLUDE "CLIModeSupport.ab3"
000143FA <CLIModeSupport.ab3@164> XINCLUDE "CLIModeSupport.ab3"
000143FC <CLIModeSupport.ab3@165> XINCLUDE "CLIModeSupport.ab3"
000143FE <CLIModeSupport.ab3@166> XINCLUDE "CLIModeSupport.ab3"
00014400 <CLIModeSupport.ab3@169> XINCLUDE "CLIModeSupport.ab3"
00014402 <CLIModeSupport.ab3@170> XINCLUDE "CLIModeSupport.ab3"
00014408 <CLIModeSupport.ab3@171> XINCLUDE "CLIModeSupport.ab3"
0001440E <CLIModeSupport.ab3@172> XINCLUDE "CLIModeSupport.ab3"
00014410 <CLIModeSupport.ab3@175> XINCLUDE "CLIModeSupport.ab3"
00014414 <CLIModeSupport.ab3@176> XINCLUDE "CLIModeSupport.ab3"
00014418 <CLIModeSupport.ab3@177> XINCLUDE "CLIModeSupport.ab3"
0001441E <CLIModeSupport.ab3@178> XINCLUDE "CLIModeSupport.ab3"
00014424 <CLIModeSupport.ab3@180> XINCLUDE "CLIModeSupport.ab3"
00014428 <CLIModeSupport.ab3@181> XINCLUDE "CLIModeSupport.ab3"
0001442C <CLIModeSupport.ab3@183> XINCLUDE "CLIModeSupport.ab3"
00014432 <CLIModeSupport.ab3@185> XINCLUDE "CLIModeSupport.ab3"
00014436 <CLIModeSupport.ab3@186> XINCLUDE "CLIModeSupport.ab3"
0001443C <CLIModeSupport.ab3@189> XINCLUDE "CLIModeSupport.ab3"
00014442 <CLIModeSupport.ab3@192> XINCLUDE "CLIModeSupport.ab3"
00014446 <CLIModeSupport.ab3@193> XINCLUDE "CLIModeSupport.ab3"
0001444C <CLIModeSupport.ab3@196> XINCLUDE "CLIModeSupport.ab3"
00014450 <CLIModeSupport.ab3@197> XINCLUDE "CLIModeSupport.ab3"
00014456 <CLIModeSupport.ab3@198> XINCLUDE "CLIModeSupport.ab3"
0001445A <CLIModeSupport.ab3@199> XINCLUDE "CLIModeSupport.ab3"
0001445E <CLIModeSupport.ab3@202> XINCLUDE "CLIModeSupport.ab3"
00014462 <CLIModeSupport.ab3@203> XINCLUDE "CLIModeSupport.ab3"
00014466 <CLIModeSupport.ab3@204> XINCLUDE "CLIModeSupport.ab3"
0001446A <CLIModeSupport.ab3@205> XINCLUDE "CLIModeSupport.ab3"
0001446E <CLIModeSupport.ab3@206> XINCLUDE "CLIModeSupport.ab3"
00014472 <CLIModeSupport.ab3@208> XINCLUDE "CLIModeSupport.ab3"
00014476 <CLIModeSupport.ab3@209> XINCLUDE "CLIModeSupport.ab3"
0001447A <CLIModeSupport.ab3@210> XINCLUDE "CLIModeSupport.ab3"
0001447E <CLIModeSupport.ab3@211> XINCLUDE "CLIModeSupport.ab3"
00014482 <CLIModeSupport.ab3@212> XINCLUDE "CLIModeSupport.ab3"
00014486 <CLIModeSupport.ab3@213> XINCLUDE "CLIModeSupport.ab3"
0001448C <CLIModeSupport.ab3@214> XINCLUDE "CLIModeSupport.ab3"
00014490 <CLIModeSupport.ab3@215> XINCLUDE "CLIModeSupport.ab3"
00014496 <CLIModeSupport.ab3@218> XINCLUDE "CLIModeSupport.ab3"
00014498 <CLIModeSupport.ab3@219> XINCLUDE "CLIModeSupport.ab3"
0001449C <CLIModeSupport.ab3@220> XINCLUDE "CLIModeSupport.ab3"
000144A0 <CLIModeSupport.ab3@221> XINCLUDE "CLIModeSupport.ab3"
000144A4 <CLIModeSupport.ab3@224> XINCLUDE "CLIModeSupport.ab3"
000144A8 <CLIModeSupport.ab3@225> XINCLUDE "CLIModeSupport.ab3"
000144AC <CLIModeSupport.ab3@226> XINCLUDE "CLIModeSupport.ab3"
000144B0 <CLIModeSupport.ab3@227> XINCLUDE "CLIModeSupport.ab3"
000144B4 <CLIModeSupport.ab3@228> XINCLUDE "CLIModeSupport.ab3"
000144B8 <CLIModeSupport.ab3@229> XINCLUDE "CLIModeSupport.ab3"
000144BE <CLIModeSupport.ab3@232> XINCLUDE "CLIModeSupport.ab3"
000144C0 <CLIModeSupport.ab3@233> XINCLUDE "CLIModeSupport.ab3"
000144C4 <CLIModeSupport.ab3@234> XINCLUDE "CLIModeSupport.ab3"
000144C8 <CLIModeSupport.ab3@235> XINCLUDE "CLIModeSupport.ab3"
000144CC <CLIModeSupport.ab3@236> XINCLUDE "CLIModeSupport.ab3"
000144D0 <CLIModeSupport.ab3@237> XINCLUDE "CLIModeSupport.ab3"
000144D4 <CLIModeSupport.ab3@239> XINCLUDE "CLIModeSupport.ab3"
000144D8 <CLIModeSupport.ab3@240> XINCLUDE "CLIModeSupport.ab3"
000144DC <CLIModeSupport.ab3@241> XINCLUDE "CLIModeSupport.ab3"
000144E0 <CLIModeSupport.ab3@242> XINCLUDE "CLIModeSupport.ab3"
000144E4 <CLIModeSupport.ab3@243> XINCLUDE "CLIModeSupport.ab3"
000144E8 <CLIModeSupport.ab3@244> XINCLUDE "CLIModeSupport.ab3"
000144EC <CLIModeSupport.ab3@245> XINCLUDE "CLIModeSupport.ab3"
000144F0 <CLIModeSupport.ab3@246> XINCLUDE "CLIModeSupport.ab3"
000144F4 <CLIModeSupport.ab3@247> XINCLUDE "CLIModeSupport.ab3"
000144F8 <CLIModeSupport.ab3@248> XINCLUDE "CLIModeSupport.ab3"
000144FC <CLIModeSupport.ab3@249> XINCLUDE "CLIModeSupport.ab3"
00014500 <CLIModeSupport.ab3@250> XINCLUDE "CLIModeSupport.ab3"
00014504 <CLIModeSupport.ab3@251> XINCLUDE "CLIModeSupport.ab3"
00014508 <CLIModeSupport.ab3@252> XINCLUDE "CLIModeSupport.ab3"
0001450E <CLIModeSupport.ab3@255> XINCLUDE "CLIModeSupport.ab3"
00014510 <CLIModeSupport.ab3@256> XINCLUDE "CLIModeSupport.ab3"
00014514 <CLIModeSupport.ab3@257> XINCLUDE "CLIModeSupport.ab3"
00014518 <CLIModeSupport.ab3@258> XINCLUDE "CLIModeSupport.ab3"
0001451E <CLIModeSupport.ab3@259> XINCLUDE "CLIModeSupport.ab3"
00014524 <CLIModeSupport.ab3@261> XINCLUDE "CLIModeSupport.ab3"
00014528 <CLIModeSupport.ab3@262> XINCLUDE "CLIModeSupport.ab3"
0001452C <CLIModeSupport.ab3@263> XINCLUDE "CLIModeSupport.ab3"
00014532 <CLIModeSupport.ab3@265> XINCLUDE "CLIModeSupport.ab3"
00014536 <CLIModeSupport.ab3@266> XINCLUDE "CLIModeSupport.ab3"
0001453C <CLIModeSupport.ab3@267> XINCLUDE "CLIModeSupport.ab3"
00014540 <CLIModeSupport.ab3@268> XINCLUDE "CLIModeSupport.ab3"
00014542 <CLIModeSupport.ab3@271> XINCLUDE "CLIModeSupport.ab3"
00014548 <CLIModeSupport.ab3@272> XINCLUDE "CLIModeSupport.ab3"
0001454A <CLIModeSupport.ab3@275> XINCLUDE "CLIModeSupport.ab3"
0001454C <CLIModeSupport.ab3@276> XINCLUDE "CLIModeSupport.ab3"
0001454E <CLIModeSupport.ab3@277> XINCLUDE "CLIModeSupport.ab3"
00014550 <CLIModeSupport.ab3@280> XINCLUDE "CLIModeSupport.ab3"
00014554 <CLIModeSupport.ab3@281> XINCLUDE "CLIModeSupport.ab3"
00014556 <CLIModeSupport.ab3@282> XINCLUDE "CLIModeSupport.ab3"
0001455A <CLIModeSupport.ab3@283> XINCLUDE "CLIModeSupport.ab3"
0001455E <CLIModeSupport.ab3@284> XINCLUDE "CLIModeSupport.ab3"
00014562 <CLIModeSupport.ab3@285> XINCLUDE "CLIModeSupport.ab3"
00014564 <CLIModeSupport.ab3@286> XINCLUDE "CLIModeSupport.ab3"
00014568 <CLIModeSupport.ab3@287> XINCLUDE "CLIModeSupport.ab3"
0001456A <CLIModeSupport.ab3@290> XINCLUDE "CLIModeSupport.ab3"
0001456C <CLIModeSupport.ab3@291> XINCLUDE "CLIModeSupport.ab3"
00014570 <CLIModeSupport.ab3@292> XINCLUDE "CLIModeSupport.ab3"
00014572 <CLIModeSupport.ab3@293> XINCLUDE "CLIModeSupport.ab3"
00014576 <CLIModeSupport.ab3@294> XINCLUDE "CLIModeSupport.ab3"
00014578 <CLIModeSupport.ab3@297> XINCLUDE "CLIModeSupport.ab3"
0001457C <CLIModeSupport.ab3@298> XINCLUDE "CLIModeSupport.ab3"
00014582 <CLIModeSupport.ab3@301> XINCLUDE "CLIModeSupport.ab3"
00014584 <CLIModeSupport.ab3@302> XINCLUDE "CLIModeSupport.ab3"
00014588 <CLIModeSupport.ab3@303> XINCLUDE "CLIModeSupport.ab3"
0001458C <CLIModeSupport.ab3@304> XINCLUDE "CLIModeSupport.ab3"
00014592 <CLIModeSupport.ab3@305> XINCLUDE "CLIModeSupport.ab3"
00014598 <CLIModeSupport.ab3@307> XINCLUDE "CLIModeSupport.ab3"
0001459C <CLIModeSupport.ab3@308> XINCLUDE "CLIModeSupport.ab3"
000145A0 <CLIModeSupport.ab3@309> XINCLUDE "CLIModeSupport.ab3"
000145A6 <CLIModeSupport.ab3@311> XINCLUDE "CLIModeSupport.ab3"
000145AA <CLIModeSupport.ab3@312> XINCLUDE "CLIModeSupport.ab3"
000145B0 <CLIModeSupport.ab3@313> XINCLUDE "CLIModeSupport.ab3"
000145B4 <CLIModeSupport.ab3@314> XINCLUDE "CLIModeSupport.ab3"
000145B8 <CLIModeSupport.ab3@315> XINCLUDE "CLIModeSupport.ab3"
000145BA <CLIModeSupport.ab3@318> XINCLUDE "CLIModeSupport.ab3"
000145BE <CLIModeSupport.ab3@319> XINCLUDE "CLIModeSupport.ab3"
000145C4 <CLIModeSupport.ab3@320> XINCLUDE "CLIModeSupport.ab3"
000145C8 <CLIModeSupport.ab3@321> XINCLUDE "CLIModeSupport.ab3"
000145CC <CLIModeSupport.ab3@322> XINCLUDE "CLIModeSupport.ab3"
000145D0 <CLIModeSupport.ab3@323> XINCLUDE "CLIModeSupport.ab3"
000145D4 <CLIModeSupport.ab3@324> XINCLUDE "CLIModeSupport.ab3"
000145D8 <CLIModeSupport.ab3@325> XINCLUDE "CLIModeSupport.ab3"
000145DC <CLIModeSupport.ab3@326> XINCLUDE "CLIModeSupport.ab3"
000145E0 <CLIModeSupport.ab3@328> XINCLUDE "CLIModeSupport.ab3"
000145E4 <CLIModeSupport.ab3@329> XINCLUDE "CLIModeSupport.ab3"
000145E6 <CLIModeSupport.ab3@330> XINCLUDE "CLIModeSupport.ab3"
000145E8 <CLIModeSupport.ab3@331> XINCLUDE "CLIModeSupport.ab3"
000145EA <CLIModeSupport.ab3@332> XINCLUDE "CLIModeSupport.ab3"
000145EE <CLIModeSupport.ab3@333> XINCLUDE "CLIModeSupport.ab3"
000145F0 <CLIModeSupport.ab3@334> XINCLUDE "CLIModeSupport.ab3"
000145F2 <CLIModeSupport.ab3@335> XINCLUDE "CLIModeSupport.ab3"
000145F4 <CLIModeSupport.ab3@336> XINCLUDE "CLIModeSupport.ab3"
000145F6 <CLIModeSupport.ab3@337> XINCLUDE "CLIModeSupport.ab3"
000145F8 <CLIModeSupport.ab3@338> XINCLUDE "CLIModeSupport.ab3"
000145FC <CLIModeSupport.ab3@339> XINCLUDE "CLIModeSupport.ab3"
000145FE <CLIModeSupport.ab3@340> XINCLUDE "CLIModeSupport.ab3"
00014602 <CLIModeSupport.ab3@341> XINCLUDE "CLIModeSupport.ab3"
00014604 <CLIModeSupport.ab3@344> XINCLUDE "CLIModeSupport.ab3"
00014606 <CLIModeSupport.ab3@345> XINCLUDE "CLIModeSupport.ab3"
00014608 <CLIModeSupport.ab3@346> XINCLUDE "CLIModeSupport.ab3"
0001460C <CLIModeSupport.ab3@347> XINCLUDE "CLIModeSupport.ab3"
0001460E <CLIModeSupport.ab3@348> XINCLUDE "CLIModeSupport.ab3"
00014610 <CLIModeSupport.ab3@351> XINCLUDE "CLIModeSupport.ab3"
00014612 <CLIModeSupport.ab3@354> XINCLUDE "CLIModeSupport.ab3"
00014616 <CLIModeSupport.ab3@355> XINCLUDE "CLIModeSupport.ab3"
0001461A <CLIModeSupport.ab3@358> XINCLUDE "CLIModeSupport.ab3"
0001461E <CLIModeSupport.ab3@359> XINCLUDE "CLIModeSupport.ab3"
00014622 <CLIModeSupport.ab3@360> XINCLUDE "CLIModeSupport.ab3"
00014626 <CLIModeSupport.ab3@361> XINCLUDE "CLIModeSupport.ab3"
0001462A <CLIModeSupport.ab3@362> XINCLUDE "CLIModeSupport.ab3"
0001462E <CLIModeSupport.ab3@363> XINCLUDE "CLIModeSupport.ab3"
00014632 <CLIModeSupport.ab3@364> XINCLUDE "CLIModeSupport.ab3"
00014636 <CLIModeSupport.ab3@365> XINCLUDE "CLIModeSupport.ab3"
00014638 <CLIModeSupport.ab3@368> XINCLUDE "CLIModeSupport.ab3"
0001463A <CLIModeSupport.ab3@371> XINCLUDE "CLIModeSupport.ab3"
0001463C <CLIModeSupport.ab3@374> XINCLUDE "CLIModeSupport.ab3"
00014640 <CLIModeSupport.ab3@375> XINCLUDE "CLIModeSupport.ab3"
00014642 <CLIModeSupport.ab3@376> XINCLUDE "CLIModeSupport.ab3"
00014644 <CLIModeSupport.ab3@377> XINCLUDE "CLIModeSupport.ab3"
0001465A <CLIModeSupport.ab3@382> XINCLUDE "CLIModeSupport.ab3"
00014660 <CLIModeSupport.ab3@383> XINCLUDE "CLIModeSupport.ab3"
0001469E <CLIModeSupport.ab3@385> XINCLUDE "CLIModeSupport.ab3"
000146A2 <CLIModeSupport.ab3@386> XINCLUDE "CLIModeSupport.ab3"
000146AC <CLIModeSupport.ab3@387> XINCLUDE "CLIModeSupport.ab3"
000146AE <CLIModeSupport.ab3@388> XINCLUDE "CLIModeSupport.ab3"
000146E2 <CLIModeSupport.ab3@389> XINCLUDE "CLIModeSupport.ab3"
000146F2 <CLIModeSupport.ab3@390> XINCLUDE "CLIModeSupport.ab3"
000146F4 <CLIModeSupport.ab3@393> XINCLUDE "CLIModeSupport.ab3"
0001472C <CLIModeSupport.ab3@394> XINCLUDE "CLIModeSupport.ab3"
00014764 <CLIModeSupport.ab3@395> XINCLUDE "CLIModeSupport.ab3"
0001479C <CLIModeSupport.ab3@396> XINCLUDE "CLIModeSupport.ab3"
000147A6 <CLIModeSupport.ab3@398> XINCLUDE "CLIModeSupport.ab3"
000147AC <CLIModeSupport.ab3@399> XINCLUDE "CLIModeSupport.ab3"
000147C2 <CLIModeSupport.ab3@403> XINCLUDE "CLIModeSupport.ab3"
00014800 <CLIModeSupport.ab3@404> XINCLUDE "CLIModeSupport.ab3"
00014804 <CLIModeSupport.ab3@405> XINCLUDE "CLIModeSupport.ab3"
0001480C <CLIModeSupport.ab3@406> XINCLUDE "CLIModeSupport.ab3"
0001484A <CLIModeSupport.ab3@407> XINCLUDE "CLIModeSupport.ab3"
0001484C <CLIModeSupport.ab3@408> XINCLUDE "CLIModeSupport.ab3"
00014850 <CLIModeSupport.ab3@409> XINCLUDE "CLIModeSupport.ab3"
0001488E <CLIModeSupport.ab3@411> XINCLUDE "CLIModeSupport.ab3"
00014892 <CLIModeSupport.ab3@412> XINCLUDE "CLIModeSupport.ab3"
000148D0 <CLIModeSupport.ab3@414> XINCLUDE "CLIModeSupport.ab3"
000148D4 <CLIModeSupport.ab3@415> XINCLUDE "CLIModeSupport.ab3"
000148FE <CLIModeSupport.ab3@417> XINCLUDE "CLIModeSupport.ab3"
00014908 <CLIModeSupport.ab3@418> XINCLUDE "CLIModeSupport.ab3"
0001491C <CLIModeSupport.ab3@419> XINCLUDE "CLIModeSupport.ab3"
00014942 <CLIModeSupport.ab3@420> XINCLUDE "CLIModeSupport.ab3"
00014948 <CLIModeSupport.ab3@421> XINCLUDE "CLIModeSupport.ab3"
00014956 <CLIModeSupport.ab3@422> XINCLUDE "CLIModeSupport.ab3"
0001495C <CLIModeSupport.ab3@423> XINCLUDE "CLIModeSupport.ab3"
00014994 <CLIModeSupport.ab3@425> XINCLUDE "CLIModeSupport.ab3"
00014998 <CLIModeSupport.ab3@428> XINCLUDE "CLIModeSupport.ab3"
000149C2 <CLIModeSupport.ab3@431> XINCLUDE "CLIModeSupport.ab3"
000149C8 <CLIModeSupport.ab3@432> XINCLUDE "CLIModeSupport.ab3"
000149E8 <CLIModeSupport.ab3@433> XINCLUDE "CLIModeSupport.ab3"
000149F2 <CLIModeSupport.ab3@434> XINCLUDE "CLIModeSupport.ab3"
000149F6 <CLIModeSupport.ab3@435> XINCLUDE "CLIModeSupport.ab3"
000149F8 <CLIModeSupport.ab3@436> XINCLUDE "CLIModeSupport.ab3"
00014A16 <CLIModeSupport.ab3@437> XINCLUDE "CLIModeSupport.ab3"
00014A18 <CLIModeSupport.ab3@438> XINCLUDE "CLIModeSupport.ab3"
00014A1E <CLIModeSupport.ab3@439> XINCLUDE "CLIModeSupport.ab3"
00014A24 <CLIModeSupport.ab3@440> XINCLUDE "CLIModeSupport.ab3"
00014A4E <CLIModeSupport.ab3@442> XINCLUDE "CLIModeSupport.ab3"
00014A50 <CLIModeSupport.ab3@443> XINCLUDE "CLIModeSupport.ab3"
00014A7E <CLIModeSupport.ab3@444> XINCLUDE "CLIModeSupport.ab3"
00014A82 <CLIModeSupport.ab3@445> XINCLUDE "CLIModeSupport.ab3"
00014AB0 <CLIModeSupport.ab3@446> XINCLUDE "CLIModeSupport.ab3"
00014AB4 <CLIModeSupport.ab3@447> XINCLUDE "CLIModeSupport.ab3"
00014ADA <CLIModeSupport.ab3@449> XINCLUDE "CLIModeSupport.ab3"
00014AEA <CLIModeSupport.ab3@450> XINCLUDE "CLIModeSupport.ab3"
00014AF0 <CLIModeSupport.ab3@451> XINCLUDE "CLIModeSupport.ab3"
00014AF6 <CLIModeSupport.ab3@452> XINCLUDE "CLIModeSupport.ab3"
00014B30 <CLIModeSupport.ab3@453> XINCLUDE "CLIModeSupport.ab3"
00014B3A <CLIModeSupport.ab3@455> XINCLUDE "CLIModeSupport.ab3"
00014B54 <CLIModeSupport.ab3@456> XINCLUDE "CLIModeSupport.ab3"
00014B72 <CLIModeSupport.ab3@468> XINCLUDE "CLIModeSupport.ab3"
00014B7A <CLIModeSupport.ab3@469> XINCLUDE "CLIModeSupport.ab3"
00014B80 <CLIModeSupport.ab3@470> XINCLUDE "CLIModeSupport.ab3"
00014B86 <CLIModeSupport.ab3@471> XINCLUDE "CLIModeSupport.ab3"
00014BA8 <CLIModeSupport.ab3@472> XINCLUDE "CLIModeSupport.ab3"
00014BC0 <CLIModeSupport.ab3@474> XINCLUDE "CLIModeSupport.ab3"
00014BE6 <CLIModeSupport.ab3@475> XINCLUDE "CLIModeSupport.ab3"
00014C10 <CLIModeSupport.ab3@476> XINCLUDE "CLIModeSupport.ab3"
00014C1E <CLIModeSupport.ab3@477> XINCLUDE "CLIModeSupport.ab3"
00014C24 <CLIModeSupport.ab3@478> XINCLUDE "CLIModeSupport.ab3"
00014C38 <CLIModeSupport.ab3@479> XINCLUDE "CLIModeSupport.ab3"
00014C50 <CLIModeSupport.ab3@481> XINCLUDE "CLIModeSupport.ab3"
00014C5E <CLIModeSupport.ab3@482> XINCLUDE "CLIModeSupport.ab3"
00014C72 <CLIModeSupport.ab3@483> XINCLUDE "CLIModeSupport.ab3"
00014CA8 <CLIModeSupport.ab3@484> XINCLUDE "CLIModeSupport.ab3"
00014CB6 <CLIModeSupport.ab3@485> XINCLUDE "CLIModeSupport.ab3"
00014CE6 <CLIModeSupport.ab3@486> XINCLUDE "CLIModeSupport.ab3"
00014CF4 <CLIModeSupport.ab3@487> XINCLUDE "CLIModeSupport.ab3"
00014CFA <CLIModeSupport.ab3@488> XINCLUDE "CLIModeSupport.ab3"
00014D08 <CLIModeSupport.ab3@489> XINCLUDE "CLIModeSupport.ab3"
00014D0E <CLIModeSupport.ab3@490> XINCLUDE "CLIModeSupport.ab3"
00014D14 <CLIModeSupport.ab3@492> XINCLUDE "CLIModeSupport.ab3"
00014D22 <CLIModeSupport.ab3@493> XINCLUDE "CLIModeSupport.ab3"
00014D24 <CLIModeSupport.ab3@494> XINCLUDE "CLIModeSupport.ab3"
00014D2A <CLIModeSupport.ab3@496> XINCLUDE "CLIModeSupport.ab3"
00014D40 <CLIModeSupport.ab3@498> XINCLUDE "CLIModeSupport.ab3"
00014D4A <CLIModeSupport.ab3@499> XINCLUDE "CLIModeSupport.ab3"
00014D50 <CLIModeSupport.ab3@500> XINCLUDE "CLIModeSupport.ab3"
00014D7A <CLIModeSupport.ab3@504> XINCLUDE "CLIModeSupport.ab3"
00014DB8 <CLIModeSupport.ab3@505> XINCLUDE "CLIModeSupport.ab3"
00014DBC <CLIModeSupport.ab3@506> XINCLUDE "CLIModeSupport.ab3"
00014DFA <CLIModeSupport.ab3@507> XINCLUDE "CLIModeSupport.ab3"
00014DFE <CLIModeSupport.ab3@508> XINCLUDE "CLIModeSupport.ab3"
00014E3C <CLIModeSupport.ab3@509> XINCLUDE "CLIModeSupport.ab3"
00014E40 <CLIModeSupport.ab3@510> XINCLUDE "CLIModeSupport.ab3"
00014E48 <CLIModeSupport.ab3@512> XINCLUDE "CLIModeSupport.ab3"
00014E50 <CLIModeSupport.ab3@513> XINCLUDE "CLIModeSupport.ab3"
00014E94 <CLIModeSupport.ab3@515> XINCLUDE "CLIModeSupport.ab3"
00014EA6 <CLIModeSupport.ab3@516> XINCLUDE "CLIModeSupport.ab3"
00014EB4 <CLIModeSupport.ab3@517> XINCLUDE "CLIModeSupport.ab3"
00014EE8 <CLIModeSupport.ab3@518> XINCLUDE "CLIModeSupport.ab3"
00014F0C <CLIModeSupport.ab3@520> XINCLUDE "CLIModeSupport.ab3"
00014F16 <CLIModeSupport.ab3@521> XINCLUDE "CLIModeSupport.ab3"
00014F30 <CLIModeSupport.ab3@522> XINCLUDE "CLIModeSupport.ab3"
00014F44 <CLIModeSupport.ab3@523> XINCLUDE "CLIModeSupport.ab3"
00014F9C <CLIModeSupport.ab3@524> XINCLUDE "CLIModeSupport.ab3"
0001503C <CLIModeSupport.ab3@525> XINCLUDE "CLIModeSupport.ab3"
00015044 <CLIModeSupport.ab3@526> XINCLUDE "CLIModeSupport.ab3"
0001507C <CLIModeSupport.ab3@527> XINCLUDE "CLIModeSupport.ab3"
00015082 <CLIModeSupport.ab3@528> XINCLUDE "CLIModeSupport.ab3"
00015092 <CLIModeSupport.ab3@529> XINCLUDE "CLIModeSupport.ab3"
000150BA <CLIModeSupport.ab3@532> XINCLUDE "CLIModeSupport.ab3"
000150E2 <CLIModeSupport.ab3@533> XINCLUDE "CLIModeSupport.ab3"
000150EA <CLIModeSupport.ab3@534> XINCLUDE "CLIModeSupport.ab3"
000150F0 <CLIModeSupport.ab3@535> XINCLUDE "CLIModeSupport.ab3"
000150F8 <CLIModeSupport.ab3@536> XINCLUDE "CLIModeSupport.ab3"
00015100 <CLIModeSupport.ab3@537> XINCLUDE "CLIModeSupport.ab3"
00015128 <CLIModeSupport.ab3@538> XINCLUDE "CLIModeSupport.ab3"
00015130 <CLIModeSupport.ab3@539> XINCLUDE "CLIModeSupport.ab3"
00015138 <CLIModeSupport.ab3@540> XINCLUDE "CLIModeSupport.ab3"
0001513E <CLIModeSupport.ab3@541> XINCLUDE "CLIModeSupport.ab3"
00015144 <CLIModeSupport.ab3@542> XINCLUDE "CLIModeSupport.ab3"
0001514A <CLIModeSupport.ab3@543> XINCLUDE "CLIModeSupport.ab3"
00015150 <CLIModeSupport.ab3@544> XINCLUDE "CLIModeSupport.ab3"
00015156 <CLIModeSupport.ab3@545> XINCLUDE "CLIModeSupport.ab3"
0001515C <CLIModeSupport.ab3@546> XINCLUDE "CLIModeSupport.ab3"
00015162 <CLIModeSupport.ab3@547> XINCLUDE "CLIModeSupport.ab3"
00015168 <CLIModeSupport.ab3@548> XINCLUDE "CLIModeSupport.ab3"
00015170 <CLIModeSupport.ab3@549> XINCLUDE "CLIModeSupport.ab3"
00015178 <CLIModeSupport.ab3@550> XINCLUDE "CLIModeSupport.ab3"
000151A0 <CLIModeSupport.ab3@551> XINCLUDE "CLIModeSupport.ab3"
000151A6 <CLIModeSupport.ab3@552> XINCLUDE "CLIModeSupport.ab3"
000151AC <CLIModeSupport.ab3@553> XINCLUDE "CLIModeSupport.ab3"
000151B4 <CLIModeSupport.ab3@554> XINCLUDE "CLIModeSupport.ab3"
000151D4 <CLIModeSupport.ab3@558> XINCLUDE "CLIModeSupport.ab3"
000151E4 <CLIModeSupport.ab3@560> XINCLUDE "CLIModeSupport.ab3"
000151F4 <CLIModeSupport.ab3@561> XINCLUDE "CLIModeSupport.ab3"
00015204 <CLIModeSupport.ab3@563> XINCLUDE "CLIModeSupport.ab3"
00015214 <CLIModeSupport.ab3@564> XINCLUDE "CLIModeSupport.ab3"
00015224 <CLIModeSupport.ab3@565> XINCLUDE "CLIModeSupport.ab3"
00015234 <CLIModeSupport.ab3@566> XINCLUDE "CLIModeSupport.ab3"
00015244 <CLIModeSupport.ab3@567> XINCLUDE "CLIModeSupport.ab3"
00015254 <CLIModeSupport.ab3@568> XINCLUDE "CLIModeSupport.ab3"
00015264 <CLIModeSupport.ab3@569> XINCLUDE "CLIModeSupport.ab3"
00015274 <CLIModeSupport.ab3@570> XINCLUDE "CLIModeSupport.ab3"
00015284 <CLIModeSupport.ab3@571> XINCLUDE "CLIModeSupport.ab3"
00015294 <CLIModeSupport.ab3@572> XINCLUDE "CLIModeSupport.ab3"
000152A4 <CLIModeSupport.ab3@573> XINCLUDE "CLIModeSupport.ab3"
000152B4 <CLIModeSupport.ab3@574> XINCLUDE "CLIModeSupport.ab3"
000152C4 <CLIModeSupport.ab3@575> XINCLUDE "CLIModeSupport.ab3"
000152D4 <CLIModeSupport.ab3@576> XINCLUDE "CLIModeSupport.ab3"
000152E6 <CLIModeSupport.ab3@578> XINCLUDE "CLIModeSupport.ab3"
000152F8 <CLIModeSupport.ab3@579> XINCLUDE "CLIModeSupport.ab3"
0001530A <CLIModeSupport.ab3@580> XINCLUDE "CLIModeSupport.ab3"
0001531C <CLIModeSupport.ab3@581> XINCLUDE "CLIModeSupport.ab3"
0001532E <CLIModeSupport.ab3@582> XINCLUDE "CLIModeSupport.ab3"
00015340 <CLIModeSupport.ab3@583> XINCLUDE "CLIModeSupport.ab3"
0001535E <CLIModeSupport.ab3@585> XINCLUDE "CLIModeSupport.ab3"
00015364 <CLIModeSupport.ab3@586> XINCLUDE "CLIModeSupport.ab3"
0001536A <CLIModeSupport.ab3@588> XINCLUDE "CLIModeSupport.ab3"
00015394 <CLIModeSupport.ab3@589> XINCLUDE "CLIModeSupport.ab3"
000153A6 <CLIModeSupport.ab3@590> XINCLUDE "CLIModeSupport.ab3"
000153DA <CLIModeSupport.ab3@593> XINCLUDE "CLIModeSupport.ab3"
000153F2 <CLIModeSupport.ab3@594> XINCLUDE "CLIModeSupport.ab3"
0001543E <CLIModeSupport.ab3@595> XINCLUDE "CLIModeSupport.ab3"
00015450 <CLIModeSupport.ab3@596> XINCLUDE "CLIModeSupport.ab3"
000154A6 <CLIModeSupport.ab3@597> XINCLUDE "CLIModeSupport.ab3"
00015518 <CLIModeSupport.ab3@598> XINCLUDE "CLIModeSupport.ab3"
0001551E <CLIModeSupport.ab3@599> XINCLUDE "CLIModeSupport.ab3"
00015552 <CLIModeSupport.ab3@600> XINCLUDE "CLIModeSupport.ab3"
0001557A <CLIModeSupport.ab3@601> XINCLUDE "CLIModeSupport.ab3"
000155A2 <CLIModeSupport.ab3@603> XINCLUDE "CLIModeSupport.ab3"
000155DC <CLIModeSupport.ab3@604> XINCLUDE "CLIModeSupport.ab3"
000155F4 <CLIModeSupport.ab3@605> XINCLUDE "CLIModeSupport.ab3"
00015678 <CLIModeSupport.ab3@606> XINCLUDE "CLIModeSupport.ab3"
00015692 <CLIModeSupport.ab3@607> XINCLUDE "CLIModeSupport.ab3"
000156E0 <CLIModeSupport.ab3@608> XINCLUDE "CLIModeSupport.ab3"
000156F0 <CLIModeSupport.ab3@610> XINCLUDE "CLIModeSupport.ab3"
000156F8 <CLIModeSupport.ab3@612> XINCLUDE "CLIModeSupport.ab3"
0001570C <CLIModeSupport.ab3@613> XINCLUDE "CLIModeSupport.ab3"
00015752 <CLIModeSupport.ab3@614> XINCLUDE "CLIModeSupport.ab3"
00015758 <CLIModeSupport.ab3@615> XINCLUDE "CLIModeSupport.ab3"
000157A2 <CLIModeSupport.ab3@616> XINCLUDE "CLIModeSupport.ab3"
0001580C <CLIModeSupport.ab3@617> XINCLUDE "CLIModeSupport.ab3"
00015872 <CLIModeSupport.ab3@618> XINCLUDE "CLIModeSupport.ab3"
000158A6 <CLIModeSupport.ab3@619> XINCLUDE "CLIModeSupport.ab3"
000158D2 <CLIModeSupport.ab3@621> XINCLUDE "CLIModeSupport.ab3"
00015920 <CLIModeSupport.ab3@622> XINCLUDE "CLIModeSupport.ab3"
00015944 <CLIModeSupport.ab3@623> XINCLUDE "CLIModeSupport.ab3"
0001594A <CLIModeSupport.ab3@624> XINCLUDE "CLIModeSupport.ab3"
00015958 <CLIModeSupport.ab3@626> XINCLUDE "CLIModeSupport.ab3"
000159B6 <CLIModeSupport.ab3@628> XINCLUDE "CLIModeSupport.ab3"
00015A14 <CLIModeSupport.ab3@629> XINCLUDE "CLIModeSupport.ab3"
00015A3E <CLIModeSupport.ab3@630> XINCLUDE "CLIModeSupport.ab3"
00015A48 <CLIModeSupport.ab3@631> XINCLUDE "CLIModeSupport.ab3"
00015A50 <CLIModeSupport.ab3@632> XINCLUDE "CLIModeSupport.ab3"
00015A8E <CLIModeSupport.ab3@633> XINCLUDE "CLIModeSupport.ab3"
00015ADA <CLIModeSupport.ab3@634> XINCLUDE "CLIModeSupport.ab3"
00015AEC <CLIModeSupport.ab3@635> XINCLUDE "CLIModeSupport.ab3"
00015B42 <CLIModeSupport.ab3@636> XINCLUDE "CLIModeSupport.ab3"
00015BBA <CLIModeSupport.ab3@637> XINCLUDE "CLIModeSupport.ab3"
00015BC0 <CLIModeSupport.ab3@638> XINCLUDE "CLIModeSupport.ab3"
00015BF4 <CLIModeSupport.ab3@639> XINCLUDE "CLIModeSupport.ab3"
00015C1C <CLIModeSupport.ab3@640> XINCLUDE "CLIModeSupport.ab3"
00015C52 <CLIModeSupport.ab3@643> XINCLUDE "CLIModeSupport.ab3"
00015C60 <CLIModeSupport.ab3@644> XINCLUDE "CLIModeSupport.ab3"
00015C6E <CLIModeSupport.ab3@645> XINCLUDE "CLIModeSupport.ab3"
00015CE2 <CLIModeSupport.ab3@646> XINCLUDE "CLIModeSupport.ab3"
00015CE8 <CLIModeSupport.ab3@647> XINCLUDE "CLIModeSupport.ab3"
00015D32 <CLIModeSupport.ab3@648> XINCLUDE "CLIModeSupport.ab3"
00015D7C <CLIModeSupport.ab3@649> XINCLUDE "CLIModeSupport.ab3"
00015DAC <CLIModeSupport.ab3@650> XINCLUDE "CLIModeSupport.ab3"
00015DDC <CLIModeSupport.ab3@651> XINCLUDE "CLIModeSupport.ab3"
00015E06 <CLIModeSupport.ab3@652> XINCLUDE "CLIModeSupport.ab3"
00015E58 <CLIModeSupport.ab3@653> XINCLUDE "CLIModeSupport.ab3"
00015EAE <CLIModeSupport.ab3@654> XINCLUDE "CLIModeSupport.ab3"
00015EFE <CLIModeSupport.ab3@655> XINCLUDE "CLIModeSupport.ab3"
00015F64 <CLIModeSupport.ab3@656> XINCLUDE "CLIModeSupport.ab3"
00015FD0 <CLIModeSupport.ab3@657> XINCLUDE "CLIModeSupport.ab3"
00015FFC <CLIModeSupport.ab3@658> XINCLUDE "CLIModeSupport.ab3"
0001602C <CLIModeSupport.ab3@659> XINCLUDE "CLIModeSupport.ab3"
000160A8 <CLIModeSupport.ab3@660> XINCLUDE "CLIModeSupport.ab3"
000160D8 <CLIModeSupport.ab3@661> XINCLUDE "CLIModeSupport.ab3"
00016108 <CLIModeSupport.ab3@662> XINCLUDE "CLIModeSupport.ab3"
00016138 <CLIModeSupport.ab3@663> XINCLUDE "CLIModeSupport.ab3"
00016168 <CLIModeSupport.ab3@664> XINCLUDE "CLIModeSupport.ab3"
00016198 <CLIModeSupport.ab3@665> XINCLUDE "CLIModeSupport.ab3"
000161C8 <CLIModeSupport.ab3@666> XINCLUDE "CLIModeSupport.ab3"
000161F8 <CLIModeSupport.ab3@667> XINCLUDE "CLIModeSupport.ab3"
00016228 <CLIModeSupport.ab3@668> XINCLUDE "CLIModeSupport.ab3"
00016258 <CLIModeSupport.ab3@669> XINCLUDE "CLIModeSupport.ab3"
00016288 <CLIModeSupport.ab3@670> XINCLUDE "CLIModeSupport.ab3"
00016304 <CLIModeSupport.ab3@671> XINCLUDE "CLIModeSupport.ab3"
00016336 <CLIModeSupport.ab3@672> XINCLUDE "CLIModeSupport.ab3"
00016368 <CLIModeSupport.ab3@673> XINCLUDE "CLIModeSupport.ab3"
00016398 <CLIModeSupport.ab3@674> XINCLUDE "CLIModeSupport.ab3"
0001639E <CLIModeSupport.ab3@675> XINCLUDE "CLIModeSupport.ab3"
00016412 <CLIModeSupport.ab3@676> XINCLUDE "CLIModeSupport.ab3"
0001647E <CLIModeSupport.ab3@677> XINCLUDE "CLIModeSupport.ab3"
00016490 <CLIModeSupport.ab3@678> XINCLUDE "CLIModeSupport.ab3"
000164BE <CLIModeSupport.ab3@679> XINCLUDE "CLIModeSupport.ab3"
000164E6 <CLIModeSupport.ab3@680> XINCLUDE "CLIModeSupport.ab3"
000164FA <CLIModeSupport.ab3@681> XINCLUDE "CLIModeSupport.ab3"
00016524 <CLIModeSupport.ab3@682> XINCLUDE "CLIModeSupport.ab3"
00016568 <CLIModeSupport.ab3@683> XINCLUDE "CLIModeSupport.ab3"
00016578 <CLIModeSupport.ab3@684> XINCLUDE "CLIModeSupport.ab3"
00016588 <CLIModeSupport.ab3@685> XINCLUDE "CLIModeSupport.ab3"
0001658E <CLIModeSupport.ab3@686> XINCLUDE "CLIModeSupport.ab3"
0001659E <CLIModeSupport.ab3@688> XINCLUDE "CLIModeSupport.ab3"
000165AC <CLIModeSupport.ab3@692> XINCLUDE "CLIModeSupport.ab3"
000165B6 <CLIModeSupport.ab3@695> XINCLUDE "CLIModeSupport.ab3"
000165EE <CLIModeSupport.ab3@698> XINCLUDE "CLIModeSupport.ab3"
00016626 <CLIModeSupport.ab3@699> XINCLUDE "CLIModeSupport.ab3"
0001665E <CLIModeSupport.ab3@700> XINCLUDE "CLIModeSupport.ab3"
0001666E <CLIModeSupport.ab3@701> XINCLUDE "CLIModeSupport.ab3"
000166D6 <CLIModeSupport.ab3@702> XINCLUDE "CLIModeSupport.ab3"
0001670E <CLIModeSupport.ab3@703> XINCLUDE "CLIModeSupport.ab3"
0001671E <CLIModeSupport.ab3@704> XINCLUDE "CLIModeSupport.ab3"
0001672E <CLIModeSupport.ab3@705> XINCLUDE "CLIModeSupport.ab3"
00016796 <CLIModeSupport.ab3@706> XINCLUDE "CLIModeSupport.ab3"
000167FE <CLIModeSupport.ab3@707> XINCLUDE "CLIModeSupport.ab3"
00016866 <CLIModeSupport.ab3@708> XINCLUDE "CLIModeSupport.ab3"
000168CE <CLIModeSupport.ab3@709> XINCLUDE "CLIModeSupport.ab3"
00016936 <CLIModeSupport.ab3@710> XINCLUDE "CLIModeSupport.ab3"
0001699E <CLIModeSupport.ab3@711> XINCLUDE "CLIModeSupport.ab3"
00016A06 <CLIModeSupport.ab3@712> XINCLUDE "CLIModeSupport.ab3"
00016A6E <CLIModeSupport.ab3@713> XINCLUDE "CLIModeSupport.ab3"
00016A7E <CLIModeSupport.ab3@714> XINCLUDE "CLIModeSupport.ab3"
00016AB6 <CLIModeSupport.ab3@716> XINCLUDE "CLIModeSupport.ab3"
00016AF0 <CLIModeSupport.ab3@717> XINCLUDE "CLIModeSupport.ab3"
00016B2A <CLIModeSupport.ab3@718> XINCLUDE "CLIModeSupport.ab3"
00016B62 <CLIModeSupport.ab3@719> XINCLUDE "CLIModeSupport.ab3"
00016B7E <CLIModeSupport.ab3@720> XINCLUDE "CLIModeSupport.ab3"
00016BB6 <CLIModeSupport.ab3@721> XINCLUDE "CLIModeSupport.ab3"
00016BDC <CLIModeSupport.ab3@723> XINCLUDE "CLIModeSupport.ab3"
00016BE4 <CLIModeSupport.ab3@726> XINCLUDE "CLIModeSupport.ab3"
00016BEC <CLIModeSupport.ab3@728> XINCLUDE "CLIModeSupport.ab3"
00016BF4 <CLIModeSupport.ab3@729> XINCLUDE "CLIModeSupport.ab3"
00016BFC <CLIModeSupport.ab3@731> XINCLUDE "CLIModeSupport.ab3"
00016C10 <CLIModeSupport.ab3@732> XINCLUDE "CLIModeSupport.ab3"
00016C3E <CLIModeSupport.ab3@733> XINCLUDE "CLIModeSupport.ab3"
00016C58 <CLIModeSupport.ab3@734> XINCLUDE "CLIModeSupport.ab3"
00016C66 <CLIModeSupport.ab3@735> XINCLUDE "CLIModeSupport.ab3"
00016CD2 <CLIModeSupport.ab3@736> XINCLUDE "CLIModeSupport.ab3"
00016CF8 <CLIModeSupport.ab3@737> XINCLUDE "CLIModeSupport.ab3"
00016D14 <CLIModeSupport.ab3@738> XINCLUDE "CLIModeSupport.ab3"
00016D1E <CLIModeSupport.ab3@739> XINCLUDE "CLIModeSupport.ab3"
00016D28 <CLIModeSupport.ab3@740> XINCLUDE "CLIModeSupport.ab3"
00016D34 <CLIModeSupport.ab3@741> XINCLUDE "CLIModeSupport.ab3"
00016D42 <CLIModeSupport.ab3@742> XINCLUDE "CLIModeSupport.ab3"
00016D4E <CLIModeSupport.ab3@743> XINCLUDE "CLIModeSupport.ab3"
00016D8A <CLIModeSupport.ab3@744> XINCLUDE "CLIModeSupport.ab3"
00016DA4 <CLIModeSupport.ab3@745> XINCLUDE "CLIModeSupport.ab3"
00016DB2 <CLIModeSupport.ab3@746> XINCLUDE "CLIModeSupport.ab3"
00016DD2 <CLIModeSupport.ab3@747> XINCLUDE "CLIModeSupport.ab3"
00016DE0 <CLIModeSupport.ab3@748> XINCLUDE "CLIModeSupport.ab3"
00016DEE <CLIModeSupport.ab3@749> XINCLUDE "CLIModeSupport.ab3"
00016DF4 <CLIModeSupport.ab3@751> XINCLUDE "CLIModeSupport.ab3"
00016E04 <CLIModeSupport.ab3@752> XINCLUDE "CLIModeSupport.ab3"
00016E08 <CLIModeSupport.ab3@754> XINCLUDE "CLIModeSupport.ab3"
00016E3C <CLIModeSupport.ab3@755> XINCLUDE "CLIModeSupport.ab3"
00016E70 <CLIModeSupport.ab3@756> XINCLUDE "CLIModeSupport.ab3"
00016E74 <CLIModeSupport.ab3@757> XINCLUDE "CLIModeSupport.ab3"
00016EA8 <CLIModeSupport.ab3@758> XINCLUDE "CLIModeSupport.ab3"
00016EAC <CLIModeSupport.ab3@759> XINCLUDE "CLIModeSupport.ab3"
00016EE0 <CLIModeSupport.ab3@760> XINCLUDE "CLIModeSupport.ab3"
00016EE6 <CLIModeSupport.ab3@761> XINCLUDE "CLIModeSupport.ab3"
00016F1C <CLIModeSupport.ab3@763> XINCLUDE "CLIModeSupport.ab3"
00016F52 <CLIModeSupport.ab3@764> XINCLUDE "CLIModeSupport.ab3"
00016F88 <CLIModeSupport.ab3@765> XINCLUDE "CLIModeSupport.ab3"
00016FC0 <CLIModeSupport.ab3@766> XINCLUDE "CLIModeSupport.ab3"
00016FF8 <CLIModeSupport.ab3@767> XINCLUDE "CLIModeSupport.ab3"
00017098 <CLIModeSupport.ab3@769> XINCLUDE "CLIModeSupport.ab3"
000170D8 <CLIModeSupport.ab3@770> XINCLUDE "CLIModeSupport.ab3"
0001710E <CLIModeSupport.ab3@771> XINCLUDE "CLIModeSupport.ab3"
00017144 <CLIModeSupport.ab3@772> XINCLUDE "CLIModeSupport.ab3"
0001717C <CLIModeSupport.ab3@775> XINCLUDE "CLIModeSupport.ab3"
0001719A <CLIModeSupport.ab3@776> XINCLUDE "CLIModeSupport.ab3"
0001719E <CLIModeSupport.ab3@777> XINCLUDE "CLIModeSupport.ab3"
000171A4 <CLIModeSupport.ab3@778> XINCLUDE "CLIModeSupport.ab3"
000171AA <CLIModeSupport.ab3@779> XINCLUDE "CLIModeSupport.ab3"
000171AE <CLIModeSupport.ab3@780> XINCLUDE "CLIModeSupport.ab3"
000171D8 <CLIModeSupport.ab3@781> XINCLUDE "CLIModeSupport.ab3"
000171EC <CLIModeSupport.ab3@785> XINCLUDE "CLIModeSupport.ab3"
0001722A <CLIModeSupport.ab3@786> XINCLUDE "CLIModeSupport.ab3"
0001725E <CLIModeSupport.ab3@787> XINCLUDE "CLIModeSupport.ab3"
00017294 <CLIModeSupport.ab3@791> XINCLUDE "CLIModeSupport.ab3"
000172EC <CLIModeSupport.ab3@793> XINCLUDE "CLIModeSupport.ab3"
0001731A <CLIModeSupport.ab3@794> XINCLUDE "CLIModeSupport.ab3"
0001731E <CLIModeSupport.ab3@795> XINCLUDE "CLIModeSupport.ab3"
00017354 <CLIModeSupport.ab3@796> XINCLUDE "CLIModeSupport.ab3"
00017382 <CLIModeSupport.ab3@797> XINCLUDE "CLIModeSupport.ab3"
000173B0 <CLIModeSupport.ab3@799> XINCLUDE "CLIModeSupport.ab3"
000173B4 <CLIModeSupport.ab3@800> XINCLUDE "CLIModeSupport.ab3"
000173EA <CLIModeSupport.ab3@801> XINCLUDE "CLIModeSupport.ab3"
00017418 <CLIModeSupport.ab3@803> XINCLUDE "CLIModeSupport.ab3"
0001741C <CLIModeSupport.ab3@804> XINCLUDE "CLIModeSupport.ab3"
00017480 <CLIModeSupport.ab3@805> XINCLUDE "CLIModeSupport.ab3"
00017486 <CLIModeSupport.ab3@808> XINCLUDE "CLIModeSupport.ab3"
000174C0 <CLIModeSupport.ab3@809> XINCLUDE "CLIModeSupport.ab3"
000174CA <CLIModeSupport.ab3@812> XINCLUDE "CLIModeSupport.ab3"
000174D4 <CLIModeSupport.ab3@814> XINCLUDE "CLIModeSupport.ab3"
000174EE <CLIModeSupport.ab3@815> XINCLUDE "CLIModeSupport.ab3"
00017518 <CLIModeSupport.ab3@818> XINCLUDE "CLIModeSupport.ab3"
0001751E <CLIModeSupport.ab3@819> XINCLUDE "CLIModeSupport.ab3"
0001753E <CLIModeSupport.ab3@820> XINCLUDE "CLIModeSupport.ab3"
00017548 <CLIModeSupport.ab3@821> XINCLUDE "CLIModeSupport.ab3"
0001754C <CLIModeSupport.ab3@822> XINCLUDE "CLIModeSupport.ab3"
0001754E <CLIModeSupport.ab3@823> XINCLUDE "CLIModeSupport.ab3"
0001756C <CLIModeSupport.ab3@824> XINCLUDE "CLIModeSupport.ab3"
0001756E <CLIModeSupport.ab3@825> XINCLUDE "CLIModeSupport.ab3"
00017574 <CLIModeSupport.ab3@826> XINCLUDE "CLIModeSupport.ab3"
0001757A <CLIModeSupport.ab3@828> XINCLUDE "CLIModeSupport.ab3"
000175A4 <CLIModeSupport.ab3@829> XINCLUDE "CLIModeSupport.ab3"
000175A6 <CLIModeSupport.ab3@830> XINCLUDE "CLIModeSupport.ab3"
000175D4 <CLIModeSupport.ab3@831> XINCLUDE "CLIModeSupport.ab3"
000175D8 <CLIModeSupport.ab3@832> XINCLUDE "CLIModeSupport.ab3"
00017606 <CLIModeSupport.ab3@833> XINCLUDE "CLIModeSupport.ab3"
0001760A <CLIModeSupport.ab3@834> XINCLUDE "CLIModeSupport.ab3"
00017630 <CLIModeSupport.ab3@835> XINCLUDE "CLIModeSupport.ab3"
00017640 <CLIModeSupport.ab3@836> XINCLUDE "CLIModeSupport.ab3"
00017646 <CLIModeSupport.ab3@837> XINCLUDE "CLIModeSupport.ab3"
0001764C <CLIModeSupport.ab3@838> XINCLUDE "CLIModeSupport.ab3"
00017686 <CLIModeSupport.ab3@839> XINCLUDE "CLIModeSupport.ab3"
00017690 <CLIModeSupport.ab3@841> XINCLUDE "CLIModeSupport.ab3"
000176AA <CLIModeSupport.ab3@842> XINCLUDE "CLIModeSupport.ab3"
000176C8 <CLIModeSupport.ab3@845> XINCLUDE "CLIModeSupport.ab3"
000176F2 <CLIModeSupport.ab3@846> XINCLUDE "CLIModeSupport.ab3"
00017720 <CLIModeSupport.ab3@847> XINCLUDE "CLIModeSupport.ab3"
000177B0 <CLIModeSupport.ab3@848> XINCLUDE "CLIModeSupport.ab3"
000177BA <CLIModeSupport.ab3@850> XINCLUDE "CLIModeSupport.ab3"
000177CE <CLIModeSupport.ab3@851> XINCLUDE "CLIModeSupport.ab3"
0001780A <CLIModeSupport.ab3@852> XINCLUDE "CLIModeSupport.ab3"
00017846 <CLIModeSupport.ab3@853> XINCLUDE "CLIModeSupport.ab3"
00017882 <CLIModeSupport.ab3@854> XINCLUDE "CLIModeSupport.ab3"
000178BE <CLIModeSupport.ab3@855> XINCLUDE "CLIModeSupport.ab3"
000178FA <CLIModeSupport.ab3@856> XINCLUDE "CLIModeSupport.ab3"
00017900 <CLIModeSupport.ab3@857> XINCLUDE "CLIModeSupport.ab3"
0001793A <CLIModeSupport.ab3@858> XINCLUDE "CLIModeSupport.ab3"
0001794C <CLIModeSupport.ab3@863> XINCLUDE "CLIModeSupport.ab3"
0001795C <CLIModeSupport.ab3@864> XINCLUDE "CLIModeSupport.ab3"
00017968 <CLIModeSupport.ab3@867> XINCLUDE "CLIModeSupport.ab3"
00017982 <CLIModeSupport.ab3@868> XINCLUDE "CLIModeSupport.ab3"
00017984 <CLIModeSupport.ab3@870> XINCLUDE "CLIModeSupport.ab3"
000179A2 <CLIModeSupport.ab3@871> XINCLUDE "CLIModeSupport.ab3"
000179A8 <CLIModeSupport.ab3@872> XINCLUDE "CLIModeSupport.ab3"
000179D2 <CLIModeSupport.ab3@873> XINCLUDE "CLIModeSupport.ab3"
000179D4 <CLIModeSupport.ab3@874> XINCLUDE "CLIModeSupport.ab3"
000179DE <CLIModeSupport.ab3@876> XINCLUDE "CLIModeSupport.ab3"
000179E4 <CLIModeSupport.ab3@877> XINCLUDE "CLIModeSupport.ab3"
000179F6 <CLIModeSupport.ab3@880> XINCLUDE "CLIModeSupport.ab3"
00017A30 <CLIModeSupport.ab3@897> XINCLUDE "CLIModeSupport.ab3"
00017A4A <CLIModeSupport.ab3@901> XINCLUDE "CLIModeSupport.ab3"
00017A5E <CLIModeSupport.ab3@903> XINCLUDE "CLIModeSupport.ab3"
00017AC8 <CLIModeSupport.ab3@904> XINCLUDE "CLIModeSupport.ab3"
00017ACE <CLIModeSupport.ab3@905> XINCLUDE "CLIModeSupport.ab3"
00017B38 <CLIModeSupport.ab3@906> XINCLUDE "CLIModeSupport.ab3"
00017B4C <CLIModeSupport.ab3@909> XINCLUDE "CLIModeSupport.ab3"
00017BB6 <CLIModeSupport.ab3@910> XINCLUDE "CLIModeSupport.ab3"
00017BEC <CLIModeSupport.ab3@911> XINCLUDE "CLIModeSupport.ab3"
00017BF2 <CLIModeSupport.ab3@912> XINCLUDE "CLIModeSupport.ab3"
00017C5C <CLIModeSupport.ab3@913> XINCLUDE "CLIModeSupport.ab3"
00017C70 <CLIModeSupport.ab3@914> XINCLUDE "CLIModeSupport.ab3"
00017CA6 <CLIModeSupport.ab3@915> XINCLUDE "CLIModeSupport.ab3"
00017CAC <CLIModeSupport.ab3@916> XINCLUDE "CLIModeSupport.ab3"
00017CE2 <CLIModeSupport.ab3@917> XINCLUDE "CLIModeSupport.ab3"
00017CF6 <CLIModeSupport.ab3@921> XINCLUDE "CLIModeSupport.ab3"
00017D60 <CLIModeSupport.ab3@922> XINCLUDE "CLIModeSupport.ab3"
00017D66 <CLIModeSupport.ab3@923> XINCLUDE "CLIModeSupport.ab3"
00017DD0 <CLIModeSupport.ab3@924> XINCLUDE "CLIModeSupport.ab3"
00017DE4 <CLIModeSupport.ab3@927> XINCLUDE "CLIModeSupport.ab3"
00017E1A <CLIModeSupport.ab3@928> XINCLUDE "CLIModeSupport.ab3"
00017E20 <CLIModeSupport.ab3@929> XINCLUDE "CLIModeSupport.ab3"
00017E56 <CLIModeSupport.ab3@930> XINCLUDE "CLIModeSupport.ab3"
00017E70 <CLIModeSupport.ab3@935> XINCLUDE "CLIModeSupport.ab3"
00017E84 <CLIModeSupport.ab3@937> XINCLUDE "CLIModeSupport.ab3"
00017EEE <CLIModeSupport.ab3@938> XINCLUDE "CLIModeSupport.ab3"
00017EF4 <CLIModeSupport.ab3@939> XINCLUDE "CLIModeSupport.ab3"
00017F5E <CLIModeSupport.ab3@940> XINCLUDE "CLIModeSupport.ab3"
00017F72 <CLIModeSupport.ab3@943> XINCLUDE "CLIModeSupport.ab3"
00017FDC <CLIModeSupport.ab3@944> XINCLUDE "CLIModeSupport.ab3"
00017FE2 <CLIModeSupport.ab3@945> XINCLUDE "CLIModeSupport.ab3"
0001804C <CLIModeSupport.ab3@946> XINCLUDE "CLIModeSupport.ab3"
00018060 <CLIModeSupport.ab3@949> XINCLUDE "CLIModeSupport.ab3"
000180CA <CLIModeSupport.ab3@950> XINCLUDE "CLIModeSupport.ab3"
000180D0 <CLIModeSupport.ab3@951> XINCLUDE "CLIModeSupport.ab3"
0001813A <CLIModeSupport.ab3@952> XINCLUDE "CLIModeSupport.ab3"
0001814E <CLIModeSupport.ab3@955> XINCLUDE "CLIModeSupport.ab3"
000181B8 <CLIModeSupport.ab3@956> XINCLUDE "CLIModeSupport.ab3"
000181BE <CLIModeSupport.ab3@957> XINCLUDE "CLIModeSupport.ab3"
00018228 <CLIModeSupport.ab3@958> XINCLUDE "CLIModeSupport.ab3"
0001823A <CLIModeSupport.ab3@963> XINCLUDE "CLIModeSupport.ab3"
0001824A <CLIModeSupport.ab3@964> XINCLUDE "CLIModeSupport.ab3"
00018254 <CLIModeSupport.ab3@967> XINCLUDE "CLIModeSupport.ab3"
000182BE <CLIModeSupport.ab3@968> XINCLUDE "CLIModeSupport.ab3"
000182C4 <CLIModeSupport.ab3@969> XINCLUDE "CLIModeSupport.ab3"
0001832E <CLIModeSupport.ab3@970> XINCLUDE "CLIModeSupport.ab3"
00018338 <CLIModeSupport.ab3@973> XINCLUDE "CLIModeSupport.ab3"
000183A2 <CLIModeSupport.ab3@974> XINCLUDE "CLIModeSupport.ab3"
000183D8 <CLIModeSupport.ab3@975> XINCLUDE "CLIModeSupport.ab3"
000183DE <CLIModeSupport.ab3@976> XINCLUDE "CLIModeSupport.ab3"
00018448 <CLIModeSupport.ab3@978> XINCLUDE "CLIModeSupport.ab3"
0001847E <CLIModeSupport.ab3@979> XINCLUDE "CLIModeSupport.ab3"
00018486 <CLIModeSupport.ab3@982> XINCLUDE "CLIModeSupport.ab3"
000184B4 <CLIModeSupport.ab3@984> XINCLUDE "CLIModeSupport.ab3"
000184B8 <CLIModeSupport.ab3@985> XINCLUDE "CLIModeSupport.ab3"
000184E0 <CLIModeSupport.ab3@986> XINCLUDE "CLIModeSupport.ab3"
000184E6 <CLIModeSupport.ab3@989> XINCLUDE "CLIModeSupport.ab3"
000184EC <CLIModeSupport.ab3@992> XINCLUDE "CLIModeSupport.ab3"
000184F2 <CLIModeSupport.ab3@993> XINCLUDE "CLIModeSupport.ab3"
000184F8 <CLIModeSupport.ab3@994> XINCLUDE "CLIModeSupport.ab3"
000184FE <CLIModeSupport.ab3@995> XINCLUDE "CLIModeSupport.ab3"
00018508 <CLIModeSupport.ab3@996> XINCLUDE "CLIModeSupport.ab3"
00018512 <CLIModeSupport.ab3@997> XINCLUDE "CLIModeSupport.ab3"
00018540 <CLIModeSupport.ab3@999> XINCLUDE "CLIModeSupport.ab3"
0001856C <CLIModeSupport.ab3@1001> XINCLUDE "CLIModeSupport.ab3"
00018574 <CLIModeSupport.ab3@1002> XINCLUDE "CLIModeSupport.ab3"
000185DA <CLIModeSupport.ab3@1005> XINCLUDE "CLIModeSupport.ab3"
0001860E <CLIModeSupport.ab3@1006> XINCLUDE "CLIModeSupport.ab3"
00018614 <CLIModeSupport.ab3@1007> XINCLUDE "CLIModeSupport.ab3"
00018694 <CLIModeSupport.ab3@1008> XINCLUDE "CLIModeSupport.ab3"
000186A6 <CLIModeSupport.ab3@1010> XINCLUDE "CLIModeSupport.ab3"
0001870C <CLIModeSupport.ab3@1011> XINCLUDE "CLIModeSupport.ab3"
00018772 <CLIModeSupport.ab3@1012> XINCLUDE "CLIModeSupport.ab3"
00018778 <CLIModeSupport.ab3@1013> XINCLUDE "CLIModeSupport.ab3"
00018780 <CLIModeSupport.ab3@1014> XINCLUDE "CLIModeSupport.ab3"
00018782 <CLIModeSupport.ab3@1018> XINCLUDE "CLIModeSupport.ab3"
000187A0 <CLIModeSupport.ab3@1019> XINCLUDE "CLIModeSupport.ab3"
000187DE <CLIModeSupport.ab3@1020> XINCLUDE "CLIModeSupport.ab3"
0001881C <CLIModeSupport.ab3@1021> XINCLUDE "CLIModeSupport.ab3"
00018822 <CLIModeSupport.ab3@1023> XINCLUDE "CLIModeSupport.ab3"
00018828 <CLIModeSupport.ab3@1024> XINCLUDE "CLIModeSupport.ab3"
0001882E <CLIModeSupport.ab3@1025> XINCLUDE "CLIModeSupport.ab3"
00018838 <CLIModeSupport.ab3@1028> XINCLUDE "CLIModeSupport.ab3"
0001883E <CLIModeSupport.ab3@1029> XINCLUDE "CLIModeSupport.ab3"
00018844 <CLIModeSupport.ab3@1030> XINCLUDE "CLIModeSupport.ab3"
0001884A <CLIModeSupport.ab3@1031> XINCLUDE "CLIModeSupport.ab3"
00018850 <CLIModeSupport.ab3@1032> XINCLUDE "CLIModeSupport.ab3"
00018854 <CLIModeSupport.ab3@1033> XINCLUDE "CLIModeSupport.ab3"
0001885E <CLIModeSupport.ab3@1034> XINCLUDE "CLIModeSupport.ab3"
00018862 <CLIModeSupport.ab3@1035> XINCLUDE "CLIModeSupport.ab3"
0001888C <CLIModeSupport.ab3@1037> XINCLUDE "CLIModeSupport.ab3"
0001888E <CLIModeSupport.ab3@1038> XINCLUDE "CLIModeSupport.ab3"
00018894 <CLIModeSupport.ab3@1040> XINCLUDE "CLIModeSupport.ab3"
00018898 <CLIModeSupport.ab3@1041> XINCLUDE "CLIModeSupport.ab3"
0001889E <CLIModeSupport.ab3@1043> XINCLUDE "CLIModeSupport.ab3"
000188A2 <CLIModeSupport.ab3@1044> XINCLUDE "CLIModeSupport.ab3"
000188B2 <CLIModeSupport.ab3@1046> XINCLUDE "CLIModeSupport.ab3"
0001890C <CLIModeSupport.ab3@1047> XINCLUDE "CLIModeSupport.ab3"
0001891E <CLIModeSupport.ab3@1049> XINCLUDE "CLIModeSupport.ab3"
00018988 <CLIModeSupport.ab3@1050> XINCLUDE "CLIModeSupport.ab3"
0001898E <CLIModeSupport.ab3@1051> XINCLUDE "CLIModeSupport.ab3"
000189D8 <CLIModeSupport.ab3@1052> XINCLUDE "CLIModeSupport.ab3"
000189EA <CLIModeSupport.ab3@1055> XINCLUDE "CLIModeSupport.ab3"
00018A16 <CLIModeSupport.ab3@1056> XINCLUDE "CLIModeSupport.ab3"
00018ABC <CLIModeSupport.ab3@1057> XINCLUDE "CLIModeSupport.ab3"
00018ADA <CLIModeSupport.ab3@1058> XINCLUDE "CLIModeSupport.ab3"
00018AE0 <CLIModeSupport.ab3@1059> XINCLUDE "CLIModeSupport.ab3"
00018B0A <CLIModeSupport.ab3@1060> XINCLUDE "CLIModeSupport.ab3"
00018B14 <CLIModeSupport.ab3@1061> XINCLUDE "CLIModeSupport.ab3"
00018B46 <CLIModeSupport.ab3@1062> XINCLUDE "CLIModeSupport.ab3"
00018B60 <CLIModeSupport.ab3@1063> XINCLUDE "CLIModeSupport.ab3"
00018B74 <CLIModeSupport.ab3@1068> XINCLUDE "CLIModeSupport.ab3"
00018B80 <CLIModeSupport.ab3@1070> XINCLUDE "CLIModeSupport.ab3"
00018B9A <CLIModeSupport.ab3@1071> XINCLUDE "CLIModeSupport.ab3"
00018BA4 <CLIModeSupport.ab3@1073> XINCLUDE "CLIModeSupport.ab3"
00018BBE <CLIModeSupport.ab3@1075> XINCLUDE "CLIModeSupport.ab3"
00018BE8 <CLIModeSupport.ab3@1079> XINCLUDE "CLIModeSupport.ab3"
00018C0C <CLIModeSupport.ab3@1080> XINCLUDE "CLIModeSupport.ab3"
00018C4A <CLIModeSupport.ab3@1081> XINCLUDE "CLIModeSupport.ab3"
00018C4E <CLIModeSupport.ab3@1082> XINCLUDE "CLIModeSupport.ab3"
00018C8C <CLIModeSupport.ab3@1084> XINCLUDE "CLIModeSupport.ab3"
00018C90 <CLIModeSupport.ab3@1085> XINCLUDE "CLIModeSupport.ab3"
00018CCE <CLIModeSupport.ab3@1088> XINCLUDE "CLIModeSupport.ab3"
00018D0C <CLIModeSupport.ab3@1089> XINCLUDE "CLIModeSupport.ab3"
00018D0E <CLIModeSupport.ab3@1090> XINCLUDE "CLIModeSupport.ab3"
00018D42 <CLIModeSupport.ab3@1091> XINCLUDE "CLIModeSupport.ab3"
00018D48 <CLIModeSupport.ab3@1093> XINCLUDE "CLIModeSupport.ab3"
00018D8C <CLIModeSupport.ab3@1094> XINCLUDE "CLIModeSupport.ab3"
00018D9E <CLIModeSupport.ab3@1095> XINCLUDE "CLIModeSupport.ab3"
00018DA6 <CLIModeSupport.ab3@1097> XINCLUDE "CLIModeSupport.ab3"
00018DAC <CLIModeSupport.ab3@1098> XINCLUDE "CLIModeSupport.ab3"
00018DB6 <CLIModeSupport.ab3@1100> XINCLUDE "CLIModeSupport.ab3"
00018DC4 <CLIModeSupport.ab3@1101> XINCLUDE "CLIModeSupport.ab3"
00018DCA <CLIModeSupport.ab3@1102> XINCLUDE "CLIModeSupport.ab3"
00018DF2 <CLIModeSupport.ab3@1103> XINCLUDE "CLIModeSupport.ab3"
00018E0C <CLIModeSupport.ab3@1104> XINCLUDE "CLIModeSupport.ab3"
00018E16 <CLIModeSupport.ab3@1105> XINCLUDE "CLIModeSupport.ab3"
00018E1C <CLIModeSupport.ab3@1106> XINCLUDE "CLIModeSupport.ab3"
00018E3A <CLIModeSupport.ab3@1108> XINCLUDE "CLIModeSupport.ab3"
00018E44 <CLIModeSupport.ab3@1109> XINCLUDE "CLIModeSupport.ab3"
00018E4A <CLIModeSupport.ab3@1110> XINCLUDE "CLIModeSupport.ab3"
00018E50 <CLIModeSupport.ab3@1111> XINCLUDE "CLIModeSupport.ab3"
00018E5A <CLIModeSupport.ab3@1112> XINCLUDE "CLIModeSupport.ab3"
00018E68 <CLIModeSupport.ab3@1113> XINCLUDE "CLIModeSupport.ab3"
00018E6E <CLIModeSupport.ab3@1114> XINCLUDE "CLIModeSupport.ab3"
00018E7E <CLIModeSupport.ab3@1116> XINCLUDE "CLIModeSupport.ab3"
00018EAA <CLIModeSupport.ab3@1117> XINCLUDE "CLIModeSupport.ab3"
00018EC0 <CLIModeSupport.ab3@1118> XINCLUDE "CLIModeSupport.ab3"
00018ECA <CLIModeSupport.ab3@1119> XINCLUDE "CLIModeSupport.ab3"
00018ED0 <CLIModeSupport.ab3@1120> XINCLUDE "CLIModeSupport.ab3"
00018F28 <CLIModeSupport.ab3@1122> XINCLUDE "CLIModeSupport.ab3"
00018F96 <CLIModeSupport.ab3@1124> XINCLUDE "CLIModeSupport.ab3"
00018FAE <CLIModeSupport.ab3@1125> XINCLUDE "CLIModeSupport.ab3"
00018FB4 <CLIModeSupport.ab3@1126> XINCLUDE "CLIModeSupport.ab3"
00018FEC <CLIModeSupport.ab3@1127> XINCLUDE "CLIModeSupport.ab3"
0001901A <CLIModeSupport.ab3@1129> XINCLUDE "CLIModeSupport.ab3"
00019044 <CLIModeSupport.ab3@1130> XINCLUDE "CLIModeSupport.ab3"
0001904E <CLIModeSupport.ab3@1132> XINCLUDE "CLIModeSupport.ab3"
00019076 <CLIModeSupport.ab3@1133> XINCLUDE "CLIModeSupport.ab3"
000190A0 <CLIModeSupport.ab3@1134> XINCLUDE "CLIModeSupport.ab3"
00019142 <CLIModeSupport.ab3@1135> XINCLUDE "CLIModeSupport.ab3"
00019150 <CLIModeSupport.ab3@1136> XINCLUDE "CLIModeSupport.ab3"
000191A0 <CLIModeSupport.ab3@1137> XINCLUDE "CLIModeSupport.ab3"
000191B0 <CLIModeSupport.ab3@1138> XINCLUDE "CLIModeSupport.ab3"
00019278 <CLIModeSupport.ab3@1139> XINCLUDE "CLIModeSupport.ab3"
000192AC <CLIModeSupport.ab3@1141> XINCLUDE "CLIModeSupport.ab3"
000192E0 <CLIModeSupport.ab3@1142> XINCLUDE "CLIModeSupport.ab3"
00019314 <CLIModeSupport.ab3@1143> XINCLUDE "CLIModeSupport.ab3"
00019348 <CLIModeSupport.ab3@1144> XINCLUDE "CLIModeSupport.ab3"
0001937C <CLIModeSupport.ab3@1145> XINCLUDE "CLIModeSupport.ab3"
000193B0 <CLIModeSupport.ab3@1146> XINCLUDE "CLIModeSupport.ab3"
000193E4 <CLIModeSupport.ab3@1147> XINCLUDE "CLIModeSupport.ab3"
00019418 <CLIModeSupport.ab3@1148> XINCLUDE "CLIModeSupport.ab3"
0001941A <CLIModeSupport.ab3@1150> XINCLUDE "CLIModeSupport.ab3"
00019458 <CLIModeSupport.ab3@1151> XINCLUDE "CLIModeSupport.ab3"
0001945C <CLIModeSupport.ab3@1152> XINCLUDE "CLIModeSupport.ab3"
0001949A <CLIModeSupport.ab3@1155> XINCLUDE "CLIModeSupport.ab3"
000194D8 <CLIModeSupport.ab3@1156> XINCLUDE "CLIModeSupport.ab3"
000194DA <CLIModeSupport.ab3@1157> XINCLUDE "CLIModeSupport.ab3"
000194E0 <CLIModeSupport.ab3@1158> XINCLUDE "CLIModeSupport.ab3"
000194E4 <CLIModeSupport.ab3@1159> XINCLUDE "CLIModeSupport.ab3"
000194E6 <CLIModeSupport.ab3@1161> XINCLUDE "CLIModeSupport.ab3"
00019524 <CLIModeSupport.ab3@1162> XINCLUDE "CLIModeSupport.ab3"
00019562 <CLIModeSupport.ab3@1163> XINCLUDE "CLIModeSupport.ab3"
00019564 <CLIModeSupport.ab3@1164> XINCLUDE "CLIModeSupport.ab3"
00019566 <CLIModeSupport.ab3@1165> XINCLUDE "CLIModeSupport.ab3"
00019568 <CLIModeSupport.ab3@1166> XINCLUDE "CLIModeSupport.ab3"
0001956E <CLIModeSupport.ab3@1167> XINCLUDE "CLIModeSupport.ab3"
00019572 <CLIModeSupport.ab3@1168> XINCLUDE "CLIModeSupport.ab3"
00019582 <CLIModeSupport.ab3@1170> XINCLUDE "CLIModeSupport.ab3"
0001959A <CLIModeSupport.ab3@1171> XINCLUDE "CLIModeSupport.ab3"
000195B2 <CLIModeSupport.ab3@1172> XINCLUDE "CLIModeSupport.ab3"
000195CA <CLIModeSupport.ab3@1173> XINCLUDE "CLIModeSupport.ab3"
000195F4 <CLIModeSupport.ab3@1175> XINCLUDE "CLIModeSupport.ab3"
0001961E <CLIModeSupport.ab3@1176> XINCLUDE "CLIModeSupport.ab3"
0001964C <CLIModeSupport.ab3@1178> XINCLUDE "CLIModeSupport.ab3"
00019650 <CLIModeSupport.ab3@1179> XINCLUDE "CLIModeSupport.ab3"
00019678 <CLIModeSupport.ab3@1180> XINCLUDE "CLIModeSupport.ab3"
0001967A <CLIModeSupport.ab3@1181> XINCLUDE "CLIModeSupport.ab3"
000196B8 <CLIModeSupport.ab3@1182> XINCLUDE "CLIModeSupport.ab3"
000196BC <CLIModeSupport.ab3@1183> XINCLUDE "CLIModeSupport.ab3"
000196FA <CLIModeSupport.ab3@1184> XINCLUDE "CLIModeSupport.ab3"
000196FE <CLIModeSupport.ab3@1185> XINCLUDE "CLIModeSupport.ab3"
0001973C <CLIModeSupport.ab3@1186> XINCLUDE "CLIModeSupport.ab3"
00019740 <CLIModeSupport.ab3@1187> XINCLUDE "CLIModeSupport.ab3"
0001977E <CLIModeSupport.ab3@1189> XINCLUDE "CLIModeSupport.ab3"
00019782 <CLIModeSupport.ab3@1190> XINCLUDE "CLIModeSupport.ab3"
000197A8 <CLIModeSupport.ab3@1192> XINCLUDE "CLIModeSupport.ab3"
000197CE <CLIModeSupport.ab3@1193> XINCLUDE "CLIModeSupport.ab3"
000197F4 <CLIModeSupport.ab3@1194> XINCLUDE "CLIModeSupport.ab3"
0001981A <CLIModeSupport.ab3@1195> XINCLUDE "CLIModeSupport.ab3"
00019840 <CLIModeSupport.ab3@1196> XINCLUDE "CLIModeSupport.ab3"
00019896 <CLIModeSupport.ab3@1197> XINCLUDE "CLIModeSupport.ab3"
000198EC <CLIModeSupport.ab3@1198> XINCLUDE "CLIModeSupport.ab3"
0001993A <CLIModeSupport.ab3@1199> XINCLUDE "CLIModeSupport.ab3"
00019990 <CLIModeSupport.ab3@1200> XINCLUDE "CLIModeSupport.ab3"
000199B6 <CLIModeSupport.ab3@1201> XINCLUDE "CLIModeSupport.ab3"
000199DC <CLIModeSupport.ab3@1202> XINCLUDE "CLIModeSupport.ab3"
00019A02 <CLIModeSupport.ab3@1203> XINCLUDE "CLIModeSupport.ab3"
00019A58 <CLIModeSupport.ab3@1204> XINCLUDE "CLIModeSupport.ab3"
00019AA6 <CLIModeSupport.ab3@1205> XINCLUDE "CLIModeSupport.ab3"
00019AF4 <CLIModeSupport.ab3@1206> XINCLUDE "CLIModeSupport.ab3"
00019BAE <CLIModeSupport.ab3@1207> XINCLUDE "CLIModeSupport.ab3"
00019C04 <CLIModeSupport.ab3@1208> XINCLUDE "CLIModeSupport.ab3"
00019C2A <CLIModeSupport.ab3@1209> XINCLUDE "CLIModeSupport.ab3"
00019C50 <CLIModeSupport.ab3@1210> XINCLUDE "CLIModeSupport.ab3"
00019C76 <CLIModeSupport.ab3@1211> XINCLUDE "CLIModeSupport.ab3"
00019CCC <CLIModeSupport.ab3@1212> XINCLUDE "CLIModeSupport.ab3"
00019D22 <CLIModeSupport.ab3@1213> XINCLUDE "CLIModeSupport.ab3"
00019D70 <CLIModeSupport.ab3@1214> XINCLUDE "CLIModeSupport.ab3"
00019DBE <CLIModeSupport.ab3@1215> XINCLUDE "CLIModeSupport.ab3"
00019E0C <CLIModeSupport.ab3@1216> XINCLUDE "CLIModeSupport.ab3"
00019E5A <CLIModeSupport.ab3@1217> XINCLUDE "CLIModeSupport.ab3"
00019EA8 <CLIModeSupport.ab3@1218> XINCLUDE "CLIModeSupport.ab3"
00019EF6 <CLIModeSupport.ab3@1219> XINCLUDE "CLIModeSupport.ab3"
00019F44 <CLIModeSupport.ab3@1220> XINCLUDE "CLIModeSupport.ab3"
00019F6A <CLIModeSupport.ab3@1221> XINCLUDE "CLIModeSupport.ab3"
00019F90 <CLIModeSupport.ab3@1222> XINCLUDE "CLIModeSupport.ab3"
00019FB6 <CLIModeSupport.ab3@1223> XINCLUDE "CLIModeSupport.ab3"
0001A004 <CLIModeSupport.ab3@1224> XINCLUDE "CLIModeSupport.ab3"
0001A052 <CLIModeSupport.ab3@1225> XINCLUDE "CLIModeSupport.ab3"
0001A0A8 <CLIModeSupport.ab3@1226> XINCLUDE "CLIModeSupport.ab3"
0001A0F6 <CLIModeSupport.ab3@1227> XINCLUDE "CLIModeSupport.ab3"
0001A144 <CLIModeSupport.ab3@1228> XINCLUDE "CLIModeSupport.ab3"
0001A192 <CLIModeSupport.ab3@1229> XINCLUDE "CLIModeSupport.ab3"
0001A1B8 <CLIModeSupport.ab3@1230> XINCLUDE "CLIModeSupport.ab3"
0001A1DE <CLIModeSupport.ab3@1231> XINCLUDE "CLIModeSupport.ab3"
0001A204 <CLIModeSupport.ab3@1232> XINCLUDE "CLIModeSupport.ab3"
0001A23C <CLIModeSupport.ab3@1233> XINCLUDE "CLIModeSupport.ab3"
0001A264 <CLIModeSupport.ab3@1234> XINCLUDE "CLIModeSupport.ab3"
0001A278 <CLIModeSupport.ab3@1235> XINCLUDE "CLIModeSupport.ab3"
0001A2EC <CLIModeSupport.ab3@1236> XINCLUDE "CLIModeSupport.ab3"
0001A332 <CLIModeSupport.ab3@1237> XINCLUDE "CLIModeSupport.ab3"
0001A3E0 <CLIModeSupport.ab3@1238> XINCLUDE "CLIModeSupport.ab3"
0001A44C <CLIModeSupport.ab3@1239> XINCLUDE "CLIModeSupport.ab3"
0001A45C <CLIModeSupport.ab3@1240> XINCLUDE "CLIModeSupport.ab3"
0001A482 <CLIModeSupport.ab3@1242> XINCLUDE "CLIModeSupport.ab3"
0001A48C <CLIModeSupport.ab3@1244> XINCLUDE "CLIModeSupport.ab3"
0001A4B6 <CLIModeSupport.ab3@1245> XINCLUDE "CLIModeSupport.ab3"
0001A4BC <CLIModeSupport.ab3@1246> XINCLUDE "CLIModeSupport.ab3"
0001A4CC <CLIModeSupport.ab3@1248> XINCLUDE "CLIModeSupport.ab3"
0001A56C <CLIModeSupport.ab3@1250> XINCLUDE "CLIModeSupport.ab3"
0001A5AC <CLIModeSupport.ab3@1251> XINCLUDE "CLIModeSupport.ab3"
0001A5B2 <CLIModeSupport.ab3@1253> XINCLUDE "CLIModeSupport.ab3"
0001A614 <CLIModeSupport.ab3@1254> XINCLUDE "CLIModeSupport.ab3"
0001A61E <CLIModeSupport.ab3@1256> XINCLUDE "CLIModeSupport.ab3"
0001A628 <CLIModeSupport.ab3@1258> XINCLUDE "CLIModeSupport.ab3"
0001A642 <CLIModeSupport.ab3@1259> XINCLUDE "CLIModeSupport.ab3"
0001A664 <CLIModeSupport.ab3@1335> XINCLUDE "CLIModeSupport.ab3"
0001A686 <CLIModeSupport.ab3@1336> XINCLUDE "CLIModeSupport.ab3"
0001A6E0 <CLIModeSupport.ab3@1337> XINCLUDE "CLIModeSupport.ab3"
0001A702 <CLIModeSupport.ab3@1338> XINCLUDE "CLIModeSupport.ab3"
0001A724 <CLIModeSupport.ab3@1339> XINCLUDE "CLIModeSupport.ab3"
0001A77E <CLIModeSupport.ab3@1340> XINCLUDE "CLIModeSupport.ab3"
0001A7C0 <CLIModeSupport.ab3@1341> XINCLUDE "CLIModeSupport.ab3"
0001A7C6 <CLIModeSupport.ab3@1343> XINCLUDE "CLIModeSupport.ab3"
0001A7D4 <CLIModeSupport.ab3@1344> XINCLUDE "CLIModeSupport.ab3"
0001A7DA <CLIModeSupport.ab3@1346> XINCLUDE "CLIModeSupport.ab3"
0001A7EE <CLIModeSupport.ab3@1347> XINCLUDE "CLIModeSupport.ab3"
0001A7F8 <CLIModeSupport.ab3@1348> XINCLUDE "CLIModeSupport.ab3"
0001A872 <CLIModeSupport.ab3@1349> XINCLUDE "CLIModeSupport.ab3"
0001A87C <CLIModeSupport.ab3@1350> XINCLUDE "CLIModeSupport.ab3"
0001A882 <CLIModeSupport.ab3@1351> XINCLUDE "CLIModeSupport.ab3"
0001A896 <CLIModeSupport.ab3@1354> XINCLUDE "CLIModeSupport.ab3"
0001A8A0 <CLIModeSupport.ab3@1355> XINCLUDE "CLIModeSupport.ab3"
0001A920 <CLIModeSupport.ab3@1356> XINCLUDE "CLIModeSupport.ab3"
0001A92A <CLIModeSupport.ab3@1357> XINCLUDE "CLIModeSupport.ab3"
0001A930 <CLIModeSupport.ab3@1358> XINCLUDE "CLIModeSupport.ab3"
0001A944 <CLIModeSupport.ab3@1361> XINCLUDE "CLIModeSupport.ab3"
0001A94E <CLIModeSupport.ab3@1362> XINCLUDE "CLIModeSupport.ab3"
0001A996 <CLIModeSupport.ab3@1363> XINCLUDE "CLIModeSupport.ab3"
0001A9A4 <CLIModeSupport.ab3@1364> XINCLUDE "CLIModeSupport.ab3"
0001A9CA <CLIModeSupport.ab3@1365> XINCLUDE "CLIModeSupport.ab3"
0001A9D4 <CLIModeSupport.ab3@1366> XINCLUDE "CLIModeSupport.ab3"
0001AA3E <CLIModeSupport.ab3@1367> XINCLUDE "CLIModeSupport.ab3"
0001AB10 <CLIModeSupport.ab3@1368> XINCLUDE "CLIModeSupport.ab3"
0001AB1A <CLIModeSupport.ab3@1369> XINCLUDE "CLIModeSupport.ab3"
0001AB20 <CLIModeSupport.ab3@1370> XINCLUDE "CLIModeSupport.ab3"
0001AB2A <CLIModeSupport.ab3@1372> XINCLUDE "CLIModeSupport.ab3"
0001AB30 <CLIModeSupport.ab3@1373> XINCLUDE "CLIModeSupport.ab3"
0001AB44 <CLIModeSupport.ab3@1376> XINCLUDE "CLIModeSupport.ab3"
0001AB4E <CLIModeSupport.ab3@1377> XINCLUDE "CLIModeSupport.ab3"
0001AB96 <CLIModeSupport.ab3@1378> XINCLUDE "CLIModeSupport.ab3"
0001ABA0 <CLIModeSupport.ab3@1379> XINCLUDE "CLIModeSupport.ab3"
0001ABA6 <CLIModeSupport.ab3@1380> XINCLUDE "CLIModeSupport.ab3"
0001ABBA <CLIModeSupport.ab3@1383> XINCLUDE "CLIModeSupport.ab3"
0001ABE0 <CLIModeSupport.ab3@1384> XINCLUDE "CLIModeSupport.ab3"
0001ABF4 <CLIModeSupport.ab3@1387> XINCLUDE "CLIModeSupport.ab3"
0001AC1A <CLIModeSupport.ab3@1388> XINCLUDE "CLIModeSupport.ab3"
0001AC2E <CLIModeSupport.ab3@1391> XINCLUDE "CLIModeSupport.ab3"
0001AC54 <CLIModeSupport.ab3@1392> XINCLUDE "CLIModeSupport.ab3"
0001AC68 <CLIModeSupport.ab3@1395> XINCLUDE "CLIModeSupport.ab3"
0001AC72 <CLIModeSupport.ab3@1396> XINCLUDE "CLIModeSupport.ab3"
0001ACA0 <CLIModeSupport.ab3@1397> XINCLUDE "CLIModeSupport.ab3"
0001ACF0 <CLIModeSupport.ab3@1398> XINCLUDE "CLIModeSupport.ab3"
0001AD10 <CLIModeSupport.ab3@1399> XINCLUDE "CLIModeSupport.ab3"
0001AD28 <CLIModeSupport.ab3@1400> XINCLUDE "CLIModeSupport.ab3"
0001AE0C <CLIModeSupport.ab3@1401> XINCLUDE "CLIModeSupport.ab3"
0001AE16 <CLIModeSupport.ab3@1402> XINCLUDE "CLIModeSupport.ab3"
0001AE1C <CLIModeSupport.ab3@1403> XINCLUDE "CLIModeSupport.ab3"
0001AE1E <CLIModeSupport.ab3@1405> XINCLUDE "CLIModeSupport.ab3"
0001AE32 <CLIModeSupport.ab3@1406> XINCLUDE "CLIModeSupport.ab3"
0001AE64 <CLIModeSupport.ab3@1409> XINCLUDE "CLIModeSupport.ab3"
0001AE6A <CLIModeSupport.ab3@1410> XINCLUDE "CLIModeSupport.ab3"
0001AEAE <CLIModeSupport.ab3@1411> XINCLUDE "CLIModeSupport.ab3"
0001AEC0 <CLIModeSupport.ab3@1412> XINCLUDE "CLIModeSupport.ab3"
0001AED2 <CLIModeSupport.ab3@1413> XINCLUDE "CLIModeSupport.ab3"
0001AEDC <CLIModeSupport.ab3@1414> XINCLUDE "CLIModeSupport.ab3"
0001AEE2 <CLIModeSupport.ab3@1415> XINCLUDE "CLIModeSupport.ab3"
0001AEEC <CLIModeSupport.ab3@1417> XINCLUDE "CLIModeSupport.ab3"
0001AF06 <CLIModeSupport.ab3@1418> XINCLUDE "CLIModeSupport.ab3"
0001AF06 <AmiBlitz3.ab3@93> XINCLUDE "CLIModeSupport.ab3"
0001AF86 <AmiBlitz3.ab3@98> dynassign.s = dos_GetToolString{"ASSIGN",default_assign$}       ; replaced hardcoded path  tomsmart1 2012 03 09
0001AFBE <AmiBlitz3.ab3@99> If dynassign <> ""
0001AFD4 <AmiBlitz3.ab3@100>     *AssignSema.SignalSemaphore = FindSemaphore_(&dynassign)    ; does it already exist?
0001AFDE <AmiBlitz3.ab3@101>     If *AssignSema
0001AFEE <AmiBlitz3.ab3@102>       ObtainSemaphoreShared_ *AssignSema
0001AFF4 <AmiBlitz3.ab3@103>     Else                                                        ; no, create one...
0001B014 <AmiBlitz3.ab3@104>       *AssignSema = AllocVec_ (SizeOf.SignalSemaphore,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B01E <AmiBlitz3.ab3@105>       If *AssignSema
0001B02E <AmiBlitz3.ab3@106>         InitSemaphore_ *AssignSema
0001B062 <AmiBlitz3.ab3@108>         *AssignSema\ss_Link\ln_Name = AllocVec_(FLen(dynassign)+1,#MEMF_PUBLIC|#MEMF_CLEAR)
0001B074 <AmiBlitz3.ab3@109>         If *AssignSema\ss_Link\ln_Name
0001B0B0 <AmiBlitz3.ab3@110>           Poke.s  *AssignSema\ss_Link\ln_Name,dynassign
0001B0BC <AmiBlitz3.ab3@112>         *AssignSema\ss_Link\ln_Pri  = 1
0001B0C8 <AmiBlitz3.ab3@113>         *AssignSema\ss_Link\ln_Type = #NT_SIGNALSEM
0001B0D8 <AmiBlitz3.ab3@115>         AddSemaphore_ *AssignSema
0001B0E8 <AmiBlitz3.ab3@116>         ObtainSemaphoreShared_ *AssignSema
0001B134 <AmiBlitz3.ab3@122>   mydir.s = dos_GetProgDir{"Sys:"}
0001B194 <AmiBlitz3.ab3@123>   If dos_SetAssign{dynassign,mydir,False}
0001B228 <AmiBlitz3.ab3@124>     dos_AddAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001B260 <AmiBlitz3.ab3@127>   Poke$ ?str_blitz3assign,dynassign
0001B2E2 <AmiBlitz3.ab3@128>   Poke$ ?str_defaultdbug,dos_AddPart{dynassign,"Debug/DefaultDBug"}
0001B364 <AmiBlitz3.ab3@131>   Poke$ ?str_path_acidlibs,dos_AddPart{dynassign, "BlitzLibs/AcidLibs"}
0001B3E6 <AmiBlitz3.ab3@132>   Poke$ ?str_path_deflibs ,dos_AddPart{dynassign, "BlitzLibs/DefLibs" }
0001B468 <AmiBlitz3.ab3@133>   Poke$ ?str_path_userlibs,dos_AddPart{dynassign, "BlitzLibs/UserLibs"}
0001B4EA <AmiBlitz3.ab3@134>   Poke$ ?str_path_includes,dos_AddPart{dynassign, "Sourcecodes/Includes"}
0001B55E <AmiBlitz3.ab3@135>   my_systemdir$    = dos_AddPart{dynassign, "System"}
0001B5D2 <AmiBlitz3.ab3@136>   my_residentsdir$ = dos_AddPart{dynassign, "BlitzLibs/Residents"}
0001B646 <AmiBlitz3.ab3@137>   my_blitzlibsdir$ = dos_AddPart{dynassign, "BlitzLibs"}
0001B674 <AmiBlitz3.ab3@138>   dos_CreateDir{my_blitzlibsdir$}
0001B698 <AmiBlitz3.ab3@139>   dos_CreateDir{Peek$(?str_path_userlibs)}
0001B6C6 <AmiBlitz3.ab3@140>   dos_CreateDir{my_residentsdir$}
0001B6F4 <AmiBlitz3.ab3@141>   dos_CreateDir{my_systemdir$}
0001B7BE <AmiBlitz3.ab3@147> pedfile$ = dos_GetToolString{"EDITOR",dos_AddPart{my_systemdir$,"PED"}}
0001B7F6 <AmiBlitz3.ab3@148> Poke.s ?str_pedfile,pedfile$
0001B834 <AmiBlitz3.ab3@150> If dos_GetToolState{"START_WITHOUT_LIBS"} = -1
0001B844 <AmiBlitz3.ab3@151>   Poke.b ?start_without_libs,1
0001B84A <AmiBlitz3.ab3@152> Else
0001B85A <AmiBlitz3.ab3@153>   Poke.b ?start_without_libs,0
0001B880 <AmiBlitz3.ab3@156> !TRANS_INIT{"AmiBlitz3"}     ; init localization via translation.include
0001B8AE <AmiBlitz3.ab3@161> If ( FindResident_("MorphOS") )
0001B8BE <AmiBlitz3.ab3@162>   Poke.b ?MorphOS,1      ; set it to use CacheClear_E
0001B8C4 <AmiBlitz3.ab3@163> Else
0001B8D4 <AmiBlitz3.ab3@164>   Poke.b ?MorphOS,0      ; set it to use CacheClear_U
0001B8E0 <AmiBlitz3.ab3@168> dbg_fid.l = -1 ; no debug file id yet!
0001B8F2 <AmiBlitz3.ab3@171> Poke.l ?maxerrorcount,#defaultmaxerrorcount                ; set the default value  tomsmart1
0001B8FC <AmiBlitz3.ab3@173> If CLIMode
0001B902 <AmiBlitz3.ab3@176>   err.l      = False                                       ; indicate that an error has occured
0001B908 <AmiBlitz3.ab3@177>   showhelp.l = False                                       ; show the CLI tool's help
0001B960 <AmiBlitz3.ab3@180>   cli_progpath.s      = dos_GetProgDir{default_assign$}    ; replaced hardcoded path  tomsmart1 2012 03 09
0001B988 <AmiBlitz3.ab3@181>   cli_sourcefile.s    = ""
0001B9B0 <AmiBlitz3.ab3@182>   cli_exefile.s       = ""
0001B9D8 <AmiBlitz3.ab3@183>   cli_savefile.s      = ""
0001BA00 <AmiBlitz3.ab3@184>   cli_dumpfile.s      = ""
0001BA28 <AmiBlitz3.ab3@185>   cli_includepath.s   = ""
0001BA50 <AmiBlitz3.ab3@186>   cli_blitzlibpath.s  = ""
0001BA56 <AmiBlitz3.ab3@187>   cli_debuginfo.l     = False
0001BA5C <AmiBlitz3.ab3@188>   cli_run.l           = False
0001BA64 <AmiBlitz3.ab3@189>   cli_dumpflags.l     = $FFFFFFFF
0001BA8C <AmiBlitz3.ab3@190>   cli_info.s          = ""
0001BA92 <AmiBlitz3.ab3@191>   cli_release.l       = False
0001BA9C <AmiBlitz3.ab3@192>   cli_numargs.l       = dos_GetNumArgs{}
0001BAA2 <AmiBlitz3.ab3@193>   cli_gui.l           = False
0001BAAA <AmiBlitz3.ab3@194>   cli_dumpform.l      = 1 ; 0 = bin, 1 = ASCII
0001BAB2 <AmiBlitz3.ab3@195>   cli_verbose.l       = 1
0001BABA <AmiBlitz3.ab3@196>   cli_comdbgflags.l   = $00000000             ; added to support compiler and debugger settings via CLI  tomsmart1
0001BAC2 <AmiBlitz3.ab3@197>   cli_comstrbufsize.l = 0
0001BACA <AmiBlitz3.ab3@198>   cli_exestacksize.l  = 0
0001BAD2 <AmiBlitz3.ab3@199>   cli_maxerrors.l     = 0                     ; added to make maxerrorcount changable in CLIMode  tomsmart1
0001BAEA <AmiBlitz3.ab3@200>   If cli_numargs=0 Then showhelp=True
0001BB1A <AmiBlitz3.ab3@204>     arg.s = dos_GetNextArg{}                               ; get the next CLI argument
0001BB66 <AmiBlitz3.ab3@205>     larg.s = LCase$(arg)                                   ; lower case the option string
0001BC2E <AmiBlitz3.ab3@206>     If Left$(larg,1)="-" Then larg = Right$(larg,FLen(larg)-1)
0001BC64 <AmiBlitz3.ab3@207>     Select larg
0001BCB0 <AmiBlitz3.ab3@208>       Case "s" : larg="source"
0001BD02 <AmiBlitz3.ab3@209>       Case "e" : larg="exe"
0001BD54 <AmiBlitz3.ab3@210>       Case "d" : larg="debug"
0001BDA6 <AmiBlitz3.ab3@211>       Case "r" : larg="release"
0001BDF8 <AmiBlitz3.ab3@212>       Case "h" : larg="help"
0001BE4A <AmiBlitz3.ab3@213>       Case "v" : larg="verbose"
0001BE58 <AmiBlitz3.ab3@214>     End Select
0001BE8E <AmiBlitz3.ab3@216>     Select larg
0001BEE2 <AmiBlitz3.ab3@217>       Case "exe"      : cli_exefile     = dos_GetNextArg{}
0001BF3C <AmiBlitz3.ab3@218>       Case "source"   : cli_sourcefile  = dos_GetNextArg{}
0001BF96 <AmiBlitz3.ab3@219>       Case "save"     : cli_savefile    = dos_GetNextArg{}
0001BFC6 <AmiBlitz3.ab3@220>       Case "debug"    : cli_debuginfo   = True
0001BFF6 <AmiBlitz3.ab3@221>       Case "run"      : cli_run         = True
0001C026 <AmiBlitz3.ab3@222>       Case "release"  : cli_release     = True
0001C056 <AmiBlitz3.ab3@223>       Case "ped"      : cli_gui         = True
0001C0B0 <AmiBlitz3.ab3@224>       Case "dform"    : cli_dumpform.l  = Vallong(dos_GetNextArg{})
0001C122 <AmiBlitz3.ab3@225>       Case "dump"     : cli_info        = LCase$(dos_GetNextArg{})
0001C152 <AmiBlitz3.ab3@226>                         cli_dumpfile    = dos_GetNextArg{}
0001C15A <AmiBlitz3.ab3@227>                         cli_dumpflags   = $0
0001C1BA <AmiBlitz3.ab3@228>                         If Instr(cli_info,"all"  ) Then cli_dumpflags | $FFFFFFFF
0001C21A <AmiBlitz3.ab3@229>                         If Instr(cli_info,"token") Then cli_dumpflags | #DUMPFLG_TOKENS
0001C27A <AmiBlitz3.ab3@230>                         If Instr(cli_info,"label") Then cli_dumpflags | #DUMPFLG_LABELS
0001C2DA <AmiBlitz3.ab3@231>                         If Instr(cli_info,"var"  ) Then cli_dumpflags | #DUMPFLG_VARS
0001C33A <AmiBlitz3.ab3@232>                         If Instr(cli_info,"const") Then cli_dumpflags | #DUMPFLG_CONSTANTS
0001C39A <AmiBlitz3.ab3@233>                         If Instr(cli_info,"func" ) Then cli_dumpflags | #DUMPFLG_FUNCTIONS
0001C3FA <AmiBlitz3.ab3@234>                         If Instr(cli_info,"macro") Then cli_dumpflags | #DUMPFLG_MACROS
0001C45A <AmiBlitz3.ab3@235>                         If Instr(cli_info,"type" ) Then cli_dumpflags | #DUMPFLG_NEWTYPES
0001C4BA <AmiBlitz3.ab3@236>                         If Instr(cli_info,"lib"  ) Then cli_dumpflags | #DUMPFLG_LIBS
0001C4CC <AmiBlitz3.ab3@237>                         If cli_dumpflags = $0
0001C4D2 <AmiBlitz3.ab3@238>                          err=True
0001C566 <AmiBlitz3.ab3@239>                          NPrint "\\1b[1m*** ERROR: Invalid flags for dumpfile \\22",cli_info,"\\22 specified!\\1b[0m"
0001C5D8 <AmiBlitz3.ab3@242>       Case "setcom"   : cli_setcom.s    = LCase$(dos_GetNextArg{})
0001C5E0 <AmiBlitz3.ab3@243>                         cli_comflags.l  = $0
0001C640 <AmiBlitz3.ab3@244>                         If Instr(cli_setcom,"icon"  ) Then cli_comflags | #CLI_COMSETICONFLAG     ; create Icon
0001C6A0 <AmiBlitz3.ab3@245>                         If Instr(cli_setcom,"small" ) Then cli_comflags | #CLI_COMSETSMALLFLAG    ; make smallest code
0001C700 <AmiBlitz3.ab3@246>                         If Instr(cli_setcom,"func"  ) Then cli_comflags | #CLI_COMSETFUNCFLAG     ; use Functionoptimizer
0001C760 <AmiBlitz3.ab3@247> 
0001C7C0 <AmiBlitz3.ab3@248>                         If Instr(cli_setcom,"dbgf"  ) Then cli_comflags | #CLI_COMSETDBGFFLAG     ; create a .dbf file
0001C7DA <AmiBlitz3.ab3@249>                         If (cli_comflags & #CLI_COMSETALLFLAGS) = 0                               ; test if args are correct
0001C7E0 <AmiBlitz3.ab3@250>                           err=True                                                                ; no
0001C874 <AmiBlitz3.ab3@251>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setcom \\22",cli_setcom,"\\22 specified!\\1b[0m"
0001C87A <AmiBlitz3.ab3@252>                         Else
0001C888 <AmiBlitz3.ab3@253>                           cli_comdbgflags | cli_comflags                                          ; yes then add it
0001C8FA <AmiBlitz3.ab3@256>       Case "setdbg"   : cli_setdbg.s    = LCase$(dos_GetNextArg{})
0001C902 <AmiBlitz3.ab3@257>                         cli_dbgflags.l  = $0
0001C962 <AmiBlitz3.ab3@258>                         If Instr(cli_setdbg,"auto" ) Then cli_dbgflags | #CLI_DEBUGAUTOFLAG       ; autorun
0001C9C2 <AmiBlitz3.ab3@259>                         If Instr(cli_setdbg,"irq"  ) Then cli_dbgflags | #CLI_DEBUGIRQFLAG        ; interrupt check
0001CA22 <AmiBlitz3.ab3@260>                         If Instr(cli_setdbg,"asm"  ) Then cli_dbgflags | #CLI_DEBUGASMFLAG        ; assembler check
0001CA82 <AmiBlitz3.ab3@261>                         If Instr(cli_setdbg,"ofl"  ) Then cli_dbgflags | #CLI_DEBUGOFLFLAG        ; overflow check
0001CA9C <AmiBlitz3.ab3@262>                         If (cli_dbgflags & #CLI_DEBUGALLFLAGS) = 0                                ; yes then add it
0001CAA2 <AmiBlitz3.ab3@263>                           err=True                                                                ; no
0001CB36 <AmiBlitz3.ab3@264>                           NPrint "\\1b[1m*** ERROR: Invalid flags for setdbg \\22",cli_setdbg,"\\22 specified!\\1b[0m"
0001CB3C <AmiBlitz3.ab3@265>                         Else
0001CB4A <AmiBlitz3.ab3@266>                           cli_comdbgflags | cli_dbgflags                                          ; yes then add it
0001CBA4 <AmiBlitz3.ab3@268>       Case "strbufsize": cli_comstrbufsize = Vallong(dos_GetNextArg{})
0001CBFE <AmiBlitz3.ab3@269>       Case "stacksize" : cli_exestacksize  = Vallong(dos_GetNextArg{})
0001CC58 <AmiBlitz3.ab3@270> 
0001CC7E <AmiBlitz3.ab3@271>                         If ((cli_maxerrors > 0) AND (cli_maxerrors <4097))                        ; check
0001CC8E <AmiBlitz3.ab3@272>                           Poke.l ?maxerrorcount,cli_maxerrors
0001CCE8 <AmiBlitz3.ab3@275>       Case "verbose"  : cli_verbose     = Vallong(dos_GetNextArg{})
0001CD18 <AmiBlitz3.ab3@276>       Case "h"        : showhelp        = True             ; show the help and quit
0001CD1E <AmiBlitz3.ab3@277>       Default
0001CD56 <AmiBlitz3.ab3@278>         If arg><""
0001CDEA <AmiBlitz3.ab3@279>           NPrint "\\1b[1m*** ERROR: Unknown option \\22",arg,"\\22 specified!\\1b[0m"
0001CDF0 <AmiBlitz3.ab3@280>           err = True
0001CDFE <AmiBlitz3.ab3@282>     End Select
0001CE4A <AmiBlitz3.ab3@283>   Until arg = "" OR err=True          ; until we processed all arguments
0001CE6C <AmiBlitz3.ab3@286>   If err><False OR showhelp = True
0001CE76 <AmiBlitz3.ab3@287>     If showhelp
0001CED8 <AmiBlitz3.ab3@288>     NPrint "AmiBlitz ",Peek.s(?myversion)
0001CF10 <AmiBlitz3.ab3@289>     NPrint "\\nSyntax: AmiBlitz3 [options]"
0001CF48 <AmiBlitz3.ab3@290>     NPrint "\\nOptions:"
0001CF80 <AmiBlitz3.ab3@291>     NPrint "  -(s)ource <file>    : input source code filename (bb2, ab2 or ab3)"
0001CFB8 <AmiBlitz3.ab3@292>     NPrint "  -(e)xe <file>       : output executable filename"
0001CFF0 <AmiBlitz3.ab3@293>     NPrint "  -(d)ebug            : compile and start runtime debugger"
0001D028 <AmiBlitz3.ab3@294>     NPrint "  -(r)elease          : create release executable (size optimized)"
0001D060 <AmiBlitz3.ab3@295>     NPrint "  -run                : run compiled program"
0001D098 <AmiBlitz3.ab3@296>     NPrint "  -dump <info> <file> : dump compiler internals to file"
0001D0D0 <AmiBlitz3.ab3@297>     NPrint "                        (info=all|token|label|var|func|const|macro|type|lib)"
0001D108 <AmiBlitz3.ab3@298>     NPrint "  -setcom <options>   : set compiler settings (options=icon|small|func|ldbg|dbgf)"       ; added  tomsmart1
0001D140 <AmiBlitz3.ab3@299>     NPrint "  -setdbg <check>     : set debugger settings (check=auto|irq|asm|ofl)"                  ; added  tomsmart1
0001D178 <AmiBlitz3.ab3@300>     NPrint "  -strbufsize <n>     : set the string buffer size of the compiler"                      ; added  tomsmart1
0001D1B0 <AmiBlitz3.ab3@301>     NPrint "  -stacksize <n>      : set the stacksize for the exe if it run/debug"                   ; added  tomsmart1
0001D1E8 <AmiBlitz3.ab3@302>     NPrint "  -maxerrors <n>      ; set maxerrorcounter of the compiler (1-4096; default=99)"        ; added  tomsmart1
0001D220 <AmiBlitz3.ab3@303>     NPrint "  -dform <n>          : format of compiler internals dump (0=bin, 1=ASCII; default=1)"
0001D258 <AmiBlitz3.ab3@304>     NPrint "  -PED                : start AmiBlitz3 IDE (PED)"
0001D290 <AmiBlitz3.ab3@305>     NPrint "  -save <file>        : re-save source code (convert format, if needed)"
0001D2C8 <AmiBlitz3.ab3@306>     NPrint "  -(v)erbose <n>      : set verbose level (0, 1 or 2; default=1)"
0001D300 <AmiBlitz3.ab3@307>     NPrint "  -(h)elp             : show this help"
0001D338 <AmiBlitz3.ab3@308>     NPrint "\\nExample:"
0001D370 <AmiBlitz3.ab3@309>     NPrint "  AmiBlitz3 -s \\22DH0:Sourcecodes/MyProgram.ab3\\22 -e RAM:MyProgram.exe"
0001D3A8 <AmiBlitz3.ab3@310>     NPrint "\\nNote: To start the AmiBlitz3 IDE, run from Workbench or with -PED option."
0001D3AE <AmiBlitz3.ab3@313>     Goto abnormal_exit
0001D3CA <AmiBlitz3.ab3@316>   If cli_gui        Then CLIMode = False : error_SetFlags{#error_requester}
0001D42E <AmiBlitz3.ab3@317>   If cli_sourcefile Then Poke.s ?str_tempfilename,cli_sourcefile
0001D43E <AmiBlitz3.ab3@320> Poke.l ?CLIMode,CLIMode
0001D462 <AmiBlitz3.ab3@355>   Dim incdim.s (#maxincludes)
0001D486 <AmiBlitz3.ab3@356>   Dim incline.l(#maxincludes)
0001D4A0 <AmiBlitz3.ab3@624> Function.s Get_Libinfo{addr_libnum.l}
0001D4AC <AmiBlitz3.ab3@626>   lib_ab2.b = False : lib_os.b = False
0001D4B2 <AmiBlitz3.ab3@627>   addr_counter.l = addr_libnum
0001D4BA <AmiBlitz3.ab3@628>   skip.l = 0
0001D4CC <AmiBlitz3.ab3@629>   If addr_counter=0
0001D506 <AmiBlitz3.ab3@630>     error{"INTERNAL: \\__THIS_FUNCTION: Invalid pointer!"}
0001D524 <AmiBlitz3.ab3@631>     Function Return ""
0001D532 <AmiBlitz3.ab3@636>     mem.l = Peek.l(addr_counter)
0001D540 <AmiBlitz3.ab3@641>     addr_counter + 2
0001D560 <AmiBlitz3.ab3@642>     If (mem = $0000ffff) Then lib_ab2= True : skip = 8
0001D57A <AmiBlitz3.ab3@643>     If (mem LSR 16) = $ffe2
0001D580 <AmiBlitz3.ab3@645>       lib_os = True
0001D588 <AmiBlitz3.ab3@646>       skip = 10
0001D5CE <AmiBlitz3.ab3@647>       If Peek$(addr_counter+skip) = "" Then skip + 4
0001D612 <AmiBlitz3.ab3@649>   Until (lib_ab2=True OR lib_os = True) OR (addr_counter>addr_libnum + $400)
0001D628 <AmiBlitz3.ab3@651>   If (addr_counter>addr_libnum + $400)
0001D646 <AmiBlitz3.ab3@653>     Function Return ""
0001D64C <AmiBlitz3.ab3@654>   Else
0001D670 <AmiBlitz3.ab3@655>     Function Return Peek$(addr_counter + skip)
0001D67A <AmiBlitz3.ab3@657> End Function
0001D698 <AmiBlitz3.ab3@697>   !asm
0001D69E <AmiBlitz3.ab3@698>   MOVEA.l _execbase,A6
0001D6A2 <AmiBlitz3.ab3@699>   MOVEM.l d0/a0,-(a7)
0001D6A4 <AmiBlitz3.ab3@701>   MOVEQ #127,d0
0001D6AA <AmiBlitz3.ab3@702>   LEA chartab,a0
0001D6B0 <AmiBlitz3.ab3@705>     MOVE.b #1,128(a0)
0001D6B2 <AmiBlitz3.ab3@706>     CLR.b (a0)+
0001D6B6 <AmiBlitz3.ab3@707>   DBF d0,'l12
0001D6BC <AmiBlitz3.ab3@709>   LEA chartab,a0
0001D6C0 <AmiBlitz3.ab3@710>   MOVE.b #1,(a0)
0001D6C6 <AmiBlitz3.ab3@711>   MOVE.b #1,","(a0)
0001D6CC <AmiBlitz3.ab3@712>   MOVE.b #1,";"(a0)
0001D6D2 <AmiBlitz3.ab3@713>   MOVE.b #1,":"(a0)
0001D6D8 <AmiBlitz3.ab3@714>   MOVE.b #1,"("(a0)
0001D6DE <AmiBlitz3.ab3@715>   MOVE.b #1,")"(a0)
0001D6E4 <AmiBlitz3.ab3@716>   MOVE.b #1,"="(a0)
0001D6EA <AmiBlitz3.ab3@717>   MOVE.b #1,"+"(a0)
0001D6F0 <AmiBlitz3.ab3@718>   MOVE.b #1,"-"(a0)
0001D6F6 <AmiBlitz3.ab3@719>   MOVE.b #1,"*"(a0)
0001D6FC <AmiBlitz3.ab3@720>   MOVE.b #1,"/"(a0)
0001D702 <AmiBlitz3.ab3@721>   MOVE.b #1,"$"(a0)
0001D708 <AmiBlitz3.ab3@722>   MOVE.b #1,"%"(a0)
0001D70E <AmiBlitz3.ab3@723>   MOVE.b #1,"."(a0)
0001D714 <AmiBlitz3.ab3@724>   MOVE.b #1,"["(a0)
0001D71A <AmiBlitz3.ab3@725>   MOVE.b #1,"]"(a0)
0001D720 <AmiBlitz3.ab3@726>   MOVE.b #1,"{"(a0)
0001D726 <AmiBlitz3.ab3@727>   MOVE.b #1,"}"(a0)
0001D72C <AmiBlitz3.ab3@728>   MOVE.b #1,"\"(a0)
0001D732 <AmiBlitz3.ab3@729>   MOVE.b #1,">"(a0)
0001D738 <AmiBlitz3.ab3@730>   MOVE.b #1,"<"(a0)
0001D73E <AmiBlitz3.ab3@731>   MOVE.b #1,"&"(a0)
0001D744 <AmiBlitz3.ab3@732>   MOVE.b #1,"|"(a0)
0001D74A <AmiBlitz3.ab3@733>   MOVE.b #1,"^"(a0)
0001D750 <AmiBlitz3.ab3@734>   MOVE.b #1,$7e(a0)
0001D756 <AmiBlitz3.ab3@735>   MOVE.w #$0101,1(a0)
0001D75C <AmiBlitz3.ab3@737>   LEA instrtab,a0
0001D762 <AmiBlitz3.ab3@738>   MOVE.l #labelhash-instrtab,d0
0001D764 <AmiBlitz3.ab3@739>   ASR.l #2,d0
0001D766 <AmiBlitz3.ab3@740>   SUBQ.l #1,d0
0001D768 <AmiBlitz3.ab3@743>    CLR.l (a0)+
0001D76A <AmiBlitz3.ab3@744>    SUBQ.l #1,d0
0001D76E <AmiBlitz3.ab3@745>   BNE 'l10
0001D774 <AmiBlitz3.ab3@747>   LEA allowtab,a0
0001D77A <AmiBlitz3.ab3@748>   MOVE.l #255,d0
0001D77C <AmiBlitz3.ab3@751>     CLR.b (a0)+
0001D780 <AmiBlitz3.ab3@752>   DBF d0,'la1
0001D786 <AmiBlitz3.ab3@754>   LEA allowtab,a0
0001D78C <AmiBlitz3.ab3@755>   MOVE.b #1,$7d(a0)
0001D792 <AmiBlitz3.ab3@756>   MOVE.b #1,$7c(a0)
0001D798 <AmiBlitz3.ab3@757>   MOVE.b #1,$44(a0)
0001D79E <AmiBlitz3.ab3@758>   MOVE.b #1,$45(a0)
0001D7A4 <AmiBlitz3.ab3@759>   MOVE.b #1,$b9(a0)
0001D7AA <AmiBlitz3.ab3@760>   MOVE.b #1,$89(a0)
0001D7B0 <AmiBlitz3.ab3@761>   MOVE.b #1,$ce(a0)
0001D7B6 <AmiBlitz3.ab3@762>   MOVE.b #1,$cf(a0)
0001D7BC <AmiBlitz3.ab3@763>   MOVE.b #1,$d0(a0)
0001D7C2 <AmiBlitz3.ab3@764>   MOVE.b #1,$cd(a0)
0001D7C4 <AmiBlitz3.ab3@765>   MOVEQ #0,d0
0001D7CA <AmiBlitz3.ab3@767>   MOVEA.l _execbase,a6
0001D7D0 <AmiBlitz3.ab3@772>   MOVE.l #$10000,d0
0001D7D6 <AmiBlitz3.ab3@773>   MOVE.l #80000,d1
0001D7D8 <AmiBlitz3.ab3@774>   MOVE.l d1,d2
0001D7DC <AmiBlitz3.ab3@775>   JSR _CreatePool(a6)                                      ; alloc memory for own stuff
0001D7E2 <AmiBlitz3.ab3@776>   MOVE.l d0,mempool
0001D7E6 <AmiBlitz3.ab3@777>   MOVEM.l (a7)+,d0/a0
0001D7EC <AmiBlitz3.ab3@778>   TST.l mempool
0001D7F0 <AmiBlitz3.ab3@779>   BEQ shutdown_compiler
0001D7F4 <AmiBlitz3.ab3@781>   MOVEA.l $114(A6),A4                                      ; get adress of this.Task-Structure
0001D7FA <AmiBlitz3.ab3@782>   MOVE.l A4,ptr_ThisTask
0001D7FE <AmiBlitz3.ab3@784>   BSR.w open_doslibrary
0001D802 <AmiBlitz3.ab3@785>   BEQ.w shutdown_compiler
0001D808 <AmiBlitz3.ab3@787>   MOVE.l D2,stacksize
0001D80A <AmiBlitz3.ab3@791>   MOVEQ.l #$00,D0
0001D810 <AmiBlitz3.ab3@792>   LEA tokens,A0
0001D812 <AmiBlitz3.ab3@795>     ADDQ.w #1,D0
0001D814 <AmiBlitz3.ab3@796>     MOVE.l (A0),D1
0001D818 <AmiBlitz3.ab3@797>     BEQ.w JL_0_2D1C
0001D81A <AmiBlitz3.ab3@798>     MOVEA.l D1,A0
0001D81E <AmiBlitz3.ab3@799> BRA.w JL_0_2D0E
0001D824 <AmiBlitz3.ab3@802>   MOVE.l A0,end_of_tokenlist
0001D828 <AmiBlitz3.ab3@804>   BSR.w makeasmtable
0001D830 <AmiBlitz3.ab3@805>   MOVE.w #$FFFF,returncode_org                             ;#-1,returncode
0001D834 <AmiBlitz3.ab3@807>   BSR.w open_mathlibrary
0001D838 <AmiBlitz3.ab3@808>   BEQ.w freemem_and_quit4
0001D83E <AmiBlitz3.ab3@810>   MOVE.l constmaxpc,D0
0001D840 <AmiBlitz3.ab3@811>   MOVEQ.l #$02,D1                                          ;chipmem            ;01 org source
0001D846 <AmiBlitz3.ab3@812>   MOVEA.l _execbase,A6
0001D84A <AmiBlitz3.ab3@813>   JSR _AllocMem(A6)                                        ;mem for branch routine
0001D850 <AmiBlitz3.ab3@814>   MOVE.l D0,constpcat
0001D854 <AmiBlitz3.ab3@815>   BEQ.w freemem_and_quit3
0001D85A <AmiBlitz3.ab3@816>   ADD.l constmaxpc,D0
0001D860 <AmiBlitz3.ab3@817>   MOVE.l D0,constlibat
0001D866 <AmiBlitz3.ab3@819>   MOVE.l macrobuffer_size,D0
0001D86C <AmiBlitz3.ab3@820>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                        ; replaced by a constant  tomsmart1
0001D870 <AmiBlitz3.ab3@821>   BGE 'ok
0001D876 <AmiBlitz3.ab3@822>     MOVE.l #DEFAULT_MACROBUFFERSIZE,d0
0001D87C <AmiBlitz3.ab3@823>     MOVE.l d0,macrobuffer_size                             ; replaced with a constant tomsmart1
0001D87E <AmiBlitz3.ab3@826>   ADDQ.l #4,d0
0001D880 <AmiBlitz3.ab3@827>   MOVEQ.l #$01,D1
0001D886 <AmiBlitz3.ab3@828>   MOVEA.l _execbase,A6
0001D88A <AmiBlitz3.ab3@829>   JSR _AllocMem(A6)                                        ;macro mem
0001D88C <AmiBlitz3.ab3@830>   MOVE.l d0,a0
0001D892 <AmiBlitz3.ab3@831>   MOVE.l macrobuffer_size,(a0)+
0001D894 <AmiBlitz3.ab3@832>   MOVE.l a0,d0
0001D89A <AmiBlitz3.ab3@833>   MOVE.l D0,ptr_macrobuffer_begin
0001D89E <AmiBlitz3.ab3@834>   BEQ.w freemem_and_quit2
0001D8A4 <AmiBlitz3.ab3@835>   ADD.l macrobuffer_size,D0
0001D8AA <AmiBlitz3.ab3@836>   MOVE.l D0,ptr_macrobuffer_end
0001D8B0 <AmiBlitz3.ab3@838>   TST.l CLIMode
0001D8B4 <AmiBlitz3.ab3@839>   BEQ load_ped
0001D8DE <AmiBlitz3.ab3@842>   !basic
0001D8E8 <AmiBlitz3.ab3@843>   succ.l = InitEmulatedPED{}
0001D8EC <AmiBlitz3.ab3@844>   GetD0 succ
0001D90A <AmiBlitz3.ab3@845>   !asm
0001D90C <AmiBlitz3.ab3@846>   TST.l d0
0001D910 <AmiBlitz3.ab3@847>   BEQ freemem_and_quit
0001D916 <AmiBlitz3.ab3@848> JMP skip_ped
0001D91C <AmiBlitz3.ab3@853>   MOVE.l #str_pedfile,D1                                   ; Load PED
0001D922 <AmiBlitz3.ab3@854>   MOVEA.l _dosbase,A6
0001D926 <AmiBlitz3.ab3@855>   JSR _LoadSeg(A6)
0001D92C <AmiBlitz3.ab3@856>   MOVE.l D0,ptr_seg_ped
0001D930 <AmiBlitz3.ab3@858>   BEQ.w cant_load_PED         ; was freemem_and_quit  added error massage  that we can't load it  tomsmart1  2012 03
0001D932 <AmiBlitz3.ab3@862>   MOVEA.l D0,A2
0001D934 <AmiBlitz3.ab3@863>   ADDA.l A2,A2
0001D936 <AmiBlitz3.ab3@864>   ADDA.l A2,A2
0001D93C <AmiBlitz3.ab3@866>   LEA teddata,a1                                           ;lea edstruct,A1
0001D942 <AmiBlitz3.ab3@867>   MOVE.l #"TEDY",d1
0001D946 <AmiBlitz3.ab3@868>   JSR 4(A2)                                                ; Run PED
0001D94C <AmiBlitz3.ab3@870>   MOVE.l A0,ped_startup_addr                               ; PED returns address of routine "startup_code"
0001D952 <AmiBlitz3.ab3@871>   MOVE.l A1,comdata                                        ; PED returns address of comdata-area in A1
0001D990 <AmiBlitz3.ab3@873>   !ComData_GetW{comWord_PEDIsAvailable,D0}                 ; if PED_IsAvailable=0, quit AmiBlitz
0001D994 <AmiBlitz3.ab3@874>   BEQ.w unload_ped
0001D998 <AmiBlitz3.ab3@875> 
0001D99C <AmiBlitz3.ab3@876>   BNE old_version_of_PED                                   ; no, than exit
0001D9DA <AmiBlitz3.ab3@882>   !ComData_GetL{comData_Magic,D0}
0001D9E0 <AmiBlitz3.ab3@883>   CMP.l ##MagicIdentifier_Long,D0                          ;"~::~",D0    ; replace with a constants  tomsmart1 2012 03 09
0001D9E4 <AmiBlitz3.ab3@884>   BNE unload_ped
0001DA1C <AmiBlitz3.ab3@887>   !ComData_SetL{comPtr_Trap15            ,#directTrap15 }
0001DA54 <AmiBlitz3.ab3@888>   !ComData_SetL{comPtr_DirectBuffer      ,#directbuffer}
0001DA8C <AmiBlitz3.ab3@889>   !ComData_SetL{comPtr_MacroBase         ,#macrobase}
0001DAC4 <AmiBlitz3.ab3@890>   !ComData_SetL{comPtr_VarBase           ,#varbase }
0001DAFC <AmiBlitz3.ab3@891>   !ComData_SetL{comPtr_InstrBase         ,#instrtab}
0001DB34 <AmiBlitz3.ab3@892>   !ComData_SetL{comPtr_LibPointer        ,#libpointer}
0001DB6C <AmiBlitz3.ab3@893>   !ComData_SetL{comPtr_CompilerVersion   ,#myversion }
0001DBA4 <AmiBlitz3.ab3@894>   !ComData_SetL{comPtr_VersionInformation,#versioninformation}
0001DBDC <AmiBlitz3.ab3@895>   !ComData_SetL{comPtr_NumberOfBuilds    ,#number_of_builds}
0001DC14 <AmiBlitz3.ab3@896>   !ComData_SetL{comFunc_SaveSource       ,#ab3_SaveSource}
0001DC4C <AmiBlitz3.ab3@897>   !ComData_SetL{comFunc_LoadSource       ,#ab3_LoadSource}
0001DC84 <AmiBlitz3.ab3@898>   !ComData_SetL{comFunc_ClearSource      ,#ab3_ClearSource}
0001DCBC <AmiBlitz3.ab3@901>   !ComData_SetL{comFunc_CalculatExpression       ,#menu_calculator}
0001DCF4 <AmiBlitz3.ab3@902>   !ComData_SetL{comPtr_CalculatorExpressionString,#str_calcexpression}
0001DD2C <AmiBlitz3.ab3@905>   !ComData_SetL{comFunc_BackupXtraData           ,#BackupXtraData}
0001DD64 <AmiBlitz3.ab3@906>   !ComData_SetL{comFunc_RestoreXtraData          ,#RestoreXtraData}
0001DD9C <AmiBlitz3.ab3@908>   !ComData_SetL{comFunc_GetObjectEntry           ,#getobjectentry}
0001DDD4 <AmiBlitz3.ab3@909>   !ComData_SetL{comFunc_StoreMaxObjects          ,#storemaxobjects}
0001DE0C <AmiBlitz3.ab3@911>   !ComData_SetL{comFunc_ReloadResidentsForPED    ,#ReloadResidentsForPED}
0001DE44 <AmiBlitz3.ab3@912>   !ComData_SetL{comFunc_FreeClearResidentsForPED ,#FreeClearResidentsForPED}    ; add tomsmart1 2012 06 09
0001DE7C <AmiBlitz3.ab3@914>   !ComData_SetL{comPtr_Residents_Table           ,#residents_table}
0001DEB4 <AmiBlitz3.ab3@915>   !ComData_SetL{comPtr_StringBuffer_Long         ,#stringbuffer}
0001DEEC <AmiBlitz3.ab3@916>   !ComData_SetL{comPtr_Stacksize_Long            ,#stacksize}
0001DF24 <AmiBlitz3.ab3@917>   !ComData_SetL{comPtr_Create_IconFile_Byte      ,#create_iconfile}
0001DF5C <AmiBlitz3.ab3@918>   !ComData_SetL{comPtr_Make_SmallestCode_Byte    ,#make_smallestcode}
0001DF94 <AmiBlitz3.ab3@919>   !ComData_SetL{comPtr_Link_DebugInfo_Byte       ,#link_debuginfo}
0001DFCC <AmiBlitz3.ab3@920>   !ComData_SetL{comPtr_Use_Debugger_Byte         ,#use_debugger}
0001E004 <AmiBlitz3.ab3@921>   !ComData_SetL{comPtr_Autorun_Byte              ,#autorun}
0001E03C <AmiBlitz3.ab3@922>   !ComData_SetL{comPtr_InterruptCheck_Byte       ,#interruptcheck}
0001E074 <AmiBlitz3.ab3@923>   !ComData_SetL{comPtr_AssemblerCheck_Byte       ,#assemblercheck}
0001E0AC <AmiBlitz3.ab3@924>   !ComData_SetL{comPtr_OverflowCheck_Byte        ,#overflowcheck}
0001E0E4 <AmiBlitz3.ab3@925>   !ComData_SetL{comPtr_Number_of_Objects_Word    ,#number_of_objects}
0001E11C <AmiBlitz3.ab3@926>   !ComData_SetL{comPtr_MaxObjects_Value_Word     ,#maxobjects_value}
0001E154 <AmiBlitz3.ab3@927>   !ComData_SetL{comPtr_MaxObject_Pos_Word        ,#maxobject_pos}
0001E18C <AmiBlitz3.ab3@930>   !ComData_SetL{comPtr_CLIArgumentsString       ,#str_cliarguments}
0001E192 <AmiBlitz3.ab3@932>   CLR.w returncode_org
0001E1BC <AmiBlitz3.ab3@934>   !basic
0001E1C6 <AmiBlitz3.ab3@935>   If CLIMode
0001E238 <AmiBlitz3.ab3@936>     If cli_verbose>=3 Then NPrint !TRANS{"Loading BlitzLibs..."}
0001E256 <AmiBlitz3.ab3@938>   !asm
0001E25C <AmiBlitz3.ab3@942>   TST.b start_without_libs
0001E260 <AmiBlitz3.ab3@943>   BNE skip_loading_libs
0001E264 <AmiBlitz3.ab3@944>     BSR.w call_setpointerbusy
0001E26E <AmiBlitz3.ab3@945>     MOVE.l #$FFFFffff,linenumat
0001E272 <AmiBlitz3.ab3@946>     BSR.w get_libraries
0001E278 <AmiBlitz3.ab3@947>     JSR init_libraries
0001E27C <AmiBlitz3.ab3@948>     BSR.w init_buffers
0001E280 <AmiBlitz3.ab3@949>     BSR.w call_setpointernormal
0001E282 <AmiBlitz3.ab3@954>   MOVEQ.l #-$01,D0
0001E288 <AmiBlitz3.ab3@955>   MOVEA.l _execbase,A6
0001E28C <AmiBlitz3.ab3@956>   JSR _AllocSignal(A6)
0001E292 <AmiBlitz3.ab3@957>   MOVE.l D0,signalNum
0001E294 <AmiBlitz3.ab3@958>   MOVEQ.l #$00,D1
0001E296 <AmiBlitz3.ab3@959>   BSET D0,D1
0001E29C <AmiBlitz3.ab3@960>   MOVE.l D1,signals
0001E2A2 <AmiBlitz3.ab3@964>   MOVE.l #str_defaultdbug,D1
0001E2A6 <AmiBlitz3.ab3@965>   MOVEA.l _dosbase(PC),A6
0001E2AA <AmiBlitz3.ab3@966>   JSR _LoadSeg(A6)
0001E2B0 <AmiBlitz3.ab3@967>   MOVE.l D0,ptr_seg_debugger
0001E2B2 <AmiBlitz3.ab3@968>   TST.l d0
0001E2B6 <AmiBlitz3.ab3@969>   BNE ok_12
0001E2E0 <AmiBlitz3.ab3@970>     !basic
0001E342 <AmiBlitz3.ab3@971>     error{!TRANS{"The Debugexecutor `Defaultdbug` was not found.\\nDebugging is not possible."}}
0001E360 <AmiBlitz3.ab3@972>     !asm
0001E366 <AmiBlitz3.ab3@975>   TST.l CLIMode
0001E36A <AmiBlitz3.ab3@976>   BEQ run_ped
0001E394 <AmiBlitz3.ab3@982>   !basic
0001E39A <AmiBlitz3.ab3@983>   err.l = False
0001E3C6 <AmiBlitz3.ab3@991>   If cli_sourcefile
0001E3E6 <AmiBlitz3.ab3@992>     lock.l = Lock_(&cli_sourcefile,#ACCESS_READ)
0001E3F0 <AmiBlitz3.ab3@993>     If lock
0001E414 <AmiBlitz3.ab3@994>       NameFromLock_ lock,&cli_tempstr,1024
0001E43E <AmiBlitz3.ab3@995>       cli_sourcefile.s = Peek.s(&cli_tempstr)
0001E44E <AmiBlitz3.ab3@996>       UnLock_ lock
0001E47A <AmiBlitz3.ab3@999>     If cli_exefile
0001E4CC <AmiBlitz3.ab3@1000>       SetCurrentDir{dos_PathPart{cli_sourcefile}}
0001E524 <AmiBlitz3.ab3@1001>       path.s = dos_PathPart{cli_exefile}
0001E544 <AmiBlitz3.ab3@1002>       lock.l = Lock_(&path,#ACCESS_READ)
0001E54E <AmiBlitz3.ab3@1003>       If lock
0001E572 <AmiBlitz3.ab3@1004>         NameFromLock_ lock,&cli_tempstr,1024
0001E59C <AmiBlitz3.ab3@1005>         path.s = Peek.s(&cli_tempstr)
0001E64A <AmiBlitz3.ab3@1006>         cli_exefile = dos_AddPart{path,dos_FilePart{cli_exefile}}
0001E65A <AmiBlitz3.ab3@1007>         UnLock_ lock
0001E6A4 <AmiBlitz3.ab3@1018>   If cli_verbose>=3 Then NPrint "Initializing token hashmap..."
0001E718 <AmiBlitz3.ab3@1019> 
0001E722 <AmiBlitz3.ab3@1020>   *PreProcessor.preprocessor = preproc_Create{}
0001E732 <AmiBlitz3.ab3@1021>   Poke.l ?comPtr_PreProcessor,*PreProcessor
0001E764 <AmiBlitz3.ab3@1022>   preproc_LoadTokens{*PreProcessor,TokenHashMapFile}
0001E77A <AmiBlitz3.ab3@1023>   If *PreProcessor\tokens=Null
0001E7F4 <AmiBlitz3.ab3@1024>     If cli_verbose>=1 Then NPrint "No hashmap found (\\22"+TokenHashMapFile+"\\22), will be created..."
0001E7FE <AmiBlitz3.ab3@1025>     preproc_QueryTokens{*PreProcessor}
0001E830 <AmiBlitz3.ab3@1026>     preproc_SaveTokens{*PreProcessor,TokenHashMapFile}
0001E87C <AmiBlitz3.ab3@1034>   If cli_sourcefile><"" AND err=False
0001E922 <AmiBlitz3.ab3@1035>     If cli_verbose>=3 Then NPrint "Loading sourcecode \\22",cli_sourcefile,"\\22..."
0001E954 <AmiBlitz3.ab3@1036>     succ=LoadSource{cli_sourcefile}
0001E95E <AmiBlitz3.ab3@1037>     If succ
0001E996 <AmiBlitz3.ab3@1038> 
0001EA10 <AmiBlitz3.ab3@1039>         If cli_verbose>=1 Then NPrint "Compiling \\22"+cli_sourcefile+"\\22..."
0001EA52 <AmiBlitz3.ab3@1040> 
0001EA5C <AmiBlitz3.ab3@1042>         If comerr
0001EA62 <AmiBlitz3.ab3@1044>         Else
0001EA68 <AmiBlitz3.ab3@1048>     Else
0001EAB8 <AmiBlitz3.ab3@1049>       If cli_verbose>=0 NPrint "\\1b[1m*** ERROR: Unable to read source file!\\1b[0m" : err=True
0001EB04 <AmiBlitz3.ab3@1053>   If cli_savefile><"" AND err=False
0001EB7E <AmiBlitz3.ab3@1054>     If cli_verbose>=2 Then NPrint "Saving sourcefiles as "+cli_savefile+"..."
0001EBAC <AmiBlitz3.ab3@1055>     SaveSource{cli_savefile}
0001EBF8 <AmiBlitz3.ab3@1058>   If cli_dumpfile><"" AND err=False
0001EC42 <AmiBlitz3.ab3@1059>     If cli_verbose>=2 Then NPrint "Saving dumpfile..."
0001EC78 <AmiBlitz3.ab3@1060>     DumpFile{cli_dumpfile,cli_dumpflags,cli_dumpform}
0001EC82 <AmiBlitz3.ab3@1063>   If cli_run
0001EC96 <AmiBlitz3.ab3@1064>     If comerr=False
0001ECC2 <AmiBlitz3.ab3@1065>       If cli_exefile
0001ED3C <AmiBlitz3.ab3@1066>         If cli_verbose>=1 Then NPrint "Recompiling "+cli_sourcefile+" for debug..."
0001ED72 <AmiBlitz3.ab3@1067> 
0001EDBC <AmiBlitz3.ab3@1069>       If cli_verbose>=1 Then NPrint "Running program..."
0001EDCA <AmiBlitz3.ab3@1070> 
0001EDCC <AmiBlitz3.ab3@1072>         CLR.l d0
0001EE0A <AmiBlitz3.ab3@1073>         !ComData_GetB{comByte_RunningFlag,D0}
0001EE0E <AmiBlitz3.ab3@1074>         running.l = PutD0
0001EE2A <AmiBlitz3.ab3@1075>         If running Then Delay_ 50
0001EE3E <AmiBlitz3.ab3@1077>       Until running=False
0001EE52 <AmiBlitz3.ab3@1078>       If Peek.l(?_runerror)
0001EEA2 <AmiBlitz3.ab3@1079>         If cli_verbose>=0 Then NPrint "\\1b[1m*** ERROR: Unable to run compiled program!\\1b[0m" : err=True
0001EEB2 <AmiBlitz3.ab3@1090>   preproc_Free{*PreProcessor} : *PreProcessor=Null
0001EEFC <AmiBlitz3.ab3@1091>   If cli_verbose>=3 Then NPrint "Exit AmiBlitz3."
0001EF02 <AmiBlitz3.ab3@1092>   DeinitEmulatedPED{}
0001EF20 <AmiBlitz3.ab3@1094>   !asm
0001EF26 <AmiBlitz3.ab3@1095> JMP terminate_ab3
0001EF2C <AmiBlitz3.ab3@1100>   MOVEA.l ped_startup_addr,A1
0001EF32 <AmiBlitz3.ab3@1101>   LEA str_tempfilename,A0
0001EF34 <AmiBlitz3.ab3@1102>   JSR (A1)
0001EF3A <AmiBlitz3.ab3@1109>   MOVE.l signalNum,D0
0001EF40 <AmiBlitz3.ab3@1110>   MOVEA.l _execbase,A6
0001EF44 <AmiBlitz3.ab3@1111>   JSR _FreeSignal(A6)
0001EF4A <AmiBlitz3.ab3@1113>   MOVE.l ptr_seg_debugger,D1
0001EF4E <AmiBlitz3.ab3@1114>   BEQ.b skip_unload_debugger
0001EF52 <AmiBlitz3.ab3@1115>     MOVEA.l _dosbase(PC),A6
0001EF56 <AmiBlitz3.ab3@1116>     JSR _UnLoadSeg(A6)
0001EF5A <AmiBlitz3.ab3@1119>   BSR.w Aclearallvars
0001EF5E <AmiBlitz3.ab3@1120>   BSR.w free_residents
0001EF64 <AmiBlitz3.ab3@1121>   JSR free_blitzlibs
0001EF6A <AmiBlitz3.ab3@1124>   MOVE.l ptr_seg_ped,D1
0001EF6E <AmiBlitz3.ab3@1125>   BEQ freemem_and_quit
0001EF72 <AmiBlitz3.ab3@1126>   MOVEA.l _dosbase(PC),A6
0001EF76 <AmiBlitz3.ab3@1127>   JSR _UnLoadSeg(A6)
0001EF7A <AmiBlitz3.ab3@1128>   BRA freemem_and_quit     ; added by tomsmart1 for Ped errormessage
0001EFA4 <AmiBlitz3.ab3@1131>   !basic
0001F068 <AmiBlitz3.ab3@1132> 
0001F086 <AmiBlitz3.ab3@1133>   !asm
0001F08A <AmiBlitz3.ab3@1134>   BRA freemem_and_quit
0001F0B4 <AmiBlitz3.ab3@1137>   !basic
0001F178 <AmiBlitz3.ab3@1138>   error{!TRANS{"Can't load the Editor:\n"} + pedfile$ + !TRANS{"\n must quit, sorry!"} }  ; show error message  tomsmart1
0001F196 <AmiBlitz3.ab3@1139>   !asm
0001F19A <AmiBlitz3.ab3@1143>   BSR.w freeallox
0001F1A0 <AmiBlitz3.ab3@1144>   MOVEA.l ptr_macrobuffer_begin,A1
0001F1A2 <AmiBlitz3.ab3@1145>   MOVE.l -(a1),D0
0001F1A4 <AmiBlitz3.ab3@1146>   ADDQ.l #4,d0
0001F1AA <AmiBlitz3.ab3@1147>   MOVEA.l _execbase,A6
0001F1AE <AmiBlitz3.ab3@1148>   JSR _FreeMem(A6)
0001F1B4 <AmiBlitz3.ab3@1151>   MOVEA.l _dosbase,A1
0001F1BA <AmiBlitz3.ab3@1152>   MOVEA.l _execbase,A6
0001F1BE <AmiBlitz3.ab3@1153>   JSR _CloseLibrary(A6)
0001F1C4 <AmiBlitz3.ab3@1155>   MOVEA.l constpcat,A1
0001F1CA <AmiBlitz3.ab3@1156>   MOVE.l constmaxpc,D0
0001F1D0 <AmiBlitz3.ab3@1157>   MOVEA.l _execbase,A6
0001F1D4 <AmiBlitz3.ab3@1158>   JSR _FreeMem(A6)
0001F1DA <AmiBlitz3.ab3@1161>   MOVEA.l _mathffpbase,A1
0001F1E0 <AmiBlitz3.ab3@1162>   MOVEA.l _execbase,A6
0001F1E4 <AmiBlitz3.ab3@1163>   JSR _CloseLibrary(A6)
0001F1EA <AmiBlitz3.ab3@1167>   TST.l mempool2                    ; test if mempool2 is allocated
0001F1EE <AmiBlitz3.ab3@1168>   BEQ shutdown_compiler             ; no jump
0001F1F4 <AmiBlitz3.ab3@1169>   MOVEA.l _execbase,A6              ; yes delete it to free the memory
0001F1FA <AmiBlitz3.ab3@1170>   MOVE.l mempool2,a0
0001F1FE <AmiBlitz3.ab3@1171>   JSR _DeletePool(a6)
0001F204 <AmiBlitz3.ab3@1172>   CLR.l mempool2
0001F20A <AmiBlitz3.ab3@1175>   MOVEA.l _execbase,A6
0001F210 <AmiBlitz3.ab3@1176>   MOVE.l mempool,a0
0001F214 <AmiBlitz3.ab3@1177>   JSR _DeletePool(a6)
0001F21A <AmiBlitz3.ab3@1178>   CLR.l pushat
0001F220 <AmiBlitz3.ab3@1179>   CLR.l mempool
0001F226 <AmiBlitz3.ab3@1182>   JSR free_unusedfunctions
0001F228 <AmiBlitz3.ab3@1183>   MOVEQ #0,d0
0001F236 <AmiBlitz3.ab3@1186>   !exitasm
0001F26E <AmiBlitz3.ab3@1187>   If dynassign<>""
0001F278 <AmiBlitz3.ab3@1188>     If *AssignSema
0001F288 <AmiBlitz3.ab3@1189>       ReleaseSemaphore_ *AssignSema
0001F2A0 <AmiBlitz3.ab3@1190>       If (AttemptSemaphore_ (*AssignSema))                 ; we are the exclusive owner of the sema now!
0001F334 <AmiBlitz3.ab3@1191>         dos_RemAssign{"LIBS:",dos_AddPart{dynassign,"Libs"}}
0001F36E <AmiBlitz3.ab3@1192>         dos_RemAssign{dynassign}
0001F37E <AmiBlitz3.ab3@1193>         RemSemaphore_ *AssignSema
0001F38E <AmiBlitz3.ab3@1194>         ReleaseSemaphore_ *AssignSema
0001F3C0 <AmiBlitz3.ab3@1195>         If *AssignSema\ss_Link\ln_Name Then FreeVec_ *AssignSema\ss_Link\ln_Name : *AssignSema\ss_Link\ln_Name = Null
0001F3D0 <AmiBlitz3.ab3@1196>         FreeVec_ *AssignSema
0001F3D6 <AmiBlitz3.ab3@1197>         *AssignSema = Null
0001F404 <AmiBlitz3.ab3@1201>   SetCurrentDir{cli_path}
0001F426 <AmiBlitz3.ab3@1202>   !coutclose
0001F42C <AmiBlitz3.ab3@1203> End
0001F438 <AmiBlitz3.ab3@1207> str_doslibrary:     Dc.b "dos.library",0 : Even
0001F43C <AmiBlitz3.ab3@1208> _dosbase:           Ds.l 1
0001F442 <AmiBlitz3.ab3@1212>   MOVEA.l _execbase,A6
0001F448 <AmiBlitz3.ab3@1213>   LEA str_doslibrary,A1
0001F44C <AmiBlitz3.ab3@1214>   JSR _OldOpenLibrary(A6)
0001F452 <AmiBlitz3.ab3@1215>   MOVE.l D0,_dosbase
0001F454 <AmiBlitz3.ab3@1216> RTS
0001F45A <AmiBlitz3.ab3@1220>   MOVEA.l #str_mathffpname,A1
0001F460 <AmiBlitz3.ab3@1221>   MOVEA.l _execbase,A6
0001F464 <AmiBlitz3.ab3@1222>   JSR _OldOpenLibrary(A6)
0001F46A <AmiBlitz3.ab3@1223>   MOVE.l D0,_mathffpbase
0001F46C <AmiBlitz3.ab3@1224> RTS
0001F49E <AmiBlitz3.ab3@1232> !ComData_JMP{comFunc_SetNormalPointer}
0001F4D0 <AmiBlitz3.ab3@1240> !ComData_JMP{comFunc_SetBusyPointer}
0001F4FA <AmiBlitz3.ab3@1244>   !basic
0001F4FE <AmiBlitz3.ab3@1245>   ab3save_filenameP.l = PutD0
0001F508 <AmiBlitz3.ab3@1246>   If ab3save_filenameP
0001F530 <AmiBlitz3.ab3@1247>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F55E <AmiBlitz3.ab3@1249>     SaveSource{ab3save_filename}
0001F564 <AmiBlitz3.ab3@1250>   Else
0001F59E <AmiBlitz3.ab3@1251>     error{"INTERNAL ERROR: no filename passed in D0 to SaveSource{}!"}
0001F5BC <AmiBlitz3.ab3@1253>   !asm
0001F5BE <AmiBlitz3.ab3@1254>   RTS
0001F5E8 <AmiBlitz3.ab3@1257>   !basic
0001F5EC <AmiBlitz3.ab3@1258>   ab3save_filenameP.l = PutD0
0001F5F6 <AmiBlitz3.ab3@1259>   If ab3save_filenameP
0001F61E <AmiBlitz3.ab3@1260>     ab3save_filename.s = Peek.s(ab3save_filenameP)
0001F64C <AmiBlitz3.ab3@1261>     LoadSource{ab3save_filename}
0001F652 <AmiBlitz3.ab3@1262>   Else
0001F68C <AmiBlitz3.ab3@1263>     error{"INTERNAL ERROR: no filename passed in D0 to LoadSource{}!"}
0001F6AA <AmiBlitz3.ab3@1265>   !asm
0001F6AC <AmiBlitz3.ab3@1266>   RTS
0001F6D6 <AmiBlitz3.ab3@1269>   !basic
0001F6DC <AmiBlitz3.ab3@1270>   ClearSource{}
0001F6FA <AmiBlitz3.ab3@1271>   !asm
0001F6FC <AmiBlitz3.ab3@1272>   RTS
0001F726 <AmiBlitz3.ab3@1275>   !basic
0001F72C <AmiBlitz3.ab3@1276>   OpenConsoleFake{}
0001F74A <AmiBlitz3.ab3@1277>   !asm
0001F74C <AmiBlitz3.ab3@1278>   RTS
0001F776 <AmiBlitz3.ab3@1282>   !basic
0001F77C <AmiBlitz3.ab3@1283>   CloseConsoleFake{}
0001F79A <AmiBlitz3.ab3@1284>   !asm
0001F79C <AmiBlitz3.ab3@1285>   RTS
0001F7A2 <AmiBlitz3.ab3@1289>   MOVE.w d6,menuitemdebug
0001F7CC <AmiBlitz3.ab3@1290>   !basic
0001F7DE <AmiBlitz3.ab3@1291>   menuitemx.l = Peek.w(?menuitemdebug)
0001F804 <AmiBlitz3.ab3@1292>   If menuitemx>16 OR  menuitemx<0
0001F878 <AmiBlitz3.ab3@1293>     error{"Called invalid AB3 Menuitem #"+Str$(menuitemx)+"!"}
0001F880 <AmiBlitz3.ab3@1294>     menuitemx=0
0001F890 <AmiBlitz3.ab3@1296>   Poke.w ?menuitemdebug,menuitemx
0001F8AE <AmiBlitz3.ab3@1297>   !asm
0001F8B4 <AmiBlitz3.ab3@1298>   MOVE.w menuitemdebug,d6
0001F8BA <AmiBlitz3.ab3@1301>   MOVE.l A5,firstitem_
0001F8C0 <AmiBlitz3.ab3@1302>   MOVE.w D7,numlines_org
0001F8C6 <AmiBlitz3.ab3@1303>   MOVE.l d7,numlines
0001F8C8 <AmiBlitz3.ab3@1304>   LSL.w #2,D6
0001F8CE <AmiBlitz3.ab3@1305>   LEA menu_items,A0
0001F8D2 <AmiBlitz3.ab3@1306>   MOVEA.l $0(A0,D6.W),A0
0001F8DC <AmiBlitz3.ab3@1307>   MOVE.l #$FFFFffff,linenumat
0001F8E6 <AmiBlitz3.ab3@1308>   MOVE.l #$FFFFffff,compilelinecounter
0001F8E8 <AmiBlitz3.ab3@1311>   JSR (A0)                              ; jsr to the function for the menuitem
0001F8EE <AmiBlitz3.ab3@1312>   MOVE.l compilelinecounter,D0
0001F8F0 <AmiBlitz3.ab3@1313> RTS
0001F8F4 <AmiBlitz3.ab3@1315> menuitemdebug: Dc.l 0
0001F8F8 <AmiBlitz3.ab3@1317> mempool                Dc.l 0
0001F90E <AmiBlitz3.ab3@1318> str_loaddebugmessage:  Dc.b "Debug module to load",0 : Even
0001F914 <AmiBlitz3.ab3@1319> dloaderr:             JSR handle_compileerror
0001F930 <AmiBlitz3.ab3@1320>                        Dc.b "Can't LoadSeg debug module!",0 : Even
0001F96E <AmiBlitz3.ab3@1328>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001F974 <AmiBlitz3.ab3@1329>   LEA str_loaddebugmessage,A2
0001F97A <AmiBlitz3.ab3@1330>   LEA str_blitz3assign,A0
0001F980 <AmiBlitz3.ab3@1331>   LEA str_temp_debugmodulename,A1
0001F982 <AmiBlitz3.ab3@1333>   JSR (A3)                                                  ;open ped filerequest
0001F986 <AmiBlitz3.ab3@1335>   BEQ.w menu_loaddebugmodule_noload
0001F98C <AmiBlitz3.ab3@1336>   MOVE.l D0,ptr_temp_debugmodule
0001F990 <AmiBlitz3.ab3@1337>   BSR.w call_setpointerbusy
0001F996 <AmiBlitz3.ab3@1338> 
0001F99C <AmiBlitz3.ab3@1339>   MOVE.l A7,errstack
0001F9A6 <AmiBlitz3.ab3@1340>   MOVE.l #menu_loaddebugmodule_noload,errcont
0001F9AC <AmiBlitz3.ab3@1341>   MOVE.l ptr_temp_debugmodule,D1
0001F9B0 <AmiBlitz3.ab3@1343>   MOVEA.l _dosbase(PC),A6
0001F9B4 <AmiBlitz3.ab3@1344>   JSR _LoadSeg(A6)
0001F9B6 <AmiBlitz3.ab3@1345>   MOVE.l D0,D7
0001F9BA <AmiBlitz3.ab3@1346>   BEQ.w dloaderr
0001F9C0 <AmiBlitz3.ab3@1347>   MOVE.l ptr_seg_debugger,D1
0001F9C4 <AmiBlitz3.ab3@1348>   BEQ.b menu_loaddebugmodule_ndseg
0001F9C8 <AmiBlitz3.ab3@1349>   MOVEA.l _dosbase(PC),A6
0001F9CC <AmiBlitz3.ab3@1350>   JSR _UnLoadSeg(A6)
0001F9D0 <AmiBlitz3.ab3@1351>   BSR.w call_setpointernormal
0001F9D6 <AmiBlitz3.ab3@1354>   MOVE.l D7,ptr_seg_debugger
0001F9D8 <AmiBlitz3.ab3@1357> RTS
0001F9F6 <AmiBlitz3.ab3@1360> str_request_exename:   Dc.b "Name of Executable to Create:",0 : Even                        ;xtext org source
0001FAB6 <AmiBlitz3.ab3@1361> exepath:               Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xpath  dcb.b 192,0 org source
0001FB76 <AmiBlitz3.ab3@1362> exefilename:           Ds.l 48                             ;Ds.b #MAX_STRINGSIZE ; Ds.l 48  ;xname  dcb.b 192,0 org source
0001FB7A <AmiBlitz3.ab3@1363> ptr_newexefilename:    Dc.l 0                                                               ;execname org
0001FBA4 <AmiBlitz3.ab3@1367>   !basic
0001FBCE <AmiBlitz3.ab3@1368>   exepath.s = Peek.s(?exepath)
0001FBF8 <AmiBlitz3.ab3@1369>   exefile.s = Peek.s(?exefilename)
0001FC78 <AmiBlitz3.ab3@1370>   exefile.s = dos_AddPart{exepath,exefile}
0001FCB0 <AmiBlitz3.ab3@1371>   Poke.s ?tempspace,exefile
0001FCCE <AmiBlitz3.ab3@1372>   !asm
0001FCD4 <AmiBlitz3.ab3@1393>   LEA tempspace,a0
0001FCD6 <AmiBlitz3.ab3@1394>   MOVE.l a0,d0
0001FCDA <AmiBlitz3.ab3@1395> BRA newcreate2
0001FD04 <AmiBlitz3.ab3@1401>   !basic
0001FD2E <AmiBlitz3.ab3@1402>   request_exename.s = Peek.s(?str_request_exename )
0001FD8A <AmiBlitz3.ab3@1403>   request_exename   = !TRANS{request_exename}
0001FD90 <AmiBlitz3.ab3@1404>   GetD0 &request_exename
0001FDAE <AmiBlitz3.ab3@1405>   !asm
0001FDB0 <AmiBlitz3.ab3@1406>   MOVE.l D0,A2
0001FDEE <AmiBlitz3.ab3@1409>   !ComData_GetL{comFunc_ASLFileRequest,A3}
0001FDF4 <AmiBlitz3.ab3@1411>   LEA exepath,A0
0001FDFA <AmiBlitz3.ab3@1412>   LEA exefilename,A1
0001FDFC <AmiBlitz3.ab3@1414>   JSR (A3)                                                 ;open ped filerequest
0001FE00 <AmiBlitz3.ab3@1416>   BEQ.w cancel_createexe
0001FE0A <AmiBlitz3.ab3@1419>   ADD.l #1,number_of_builds
0001FE10 <AmiBlitz3.ab3@1422>   MOVE.l D0,ptr_newexefilename
0001FE18 <AmiBlitz3.ab3@1423>   MOVE.w #-1,debugversion
0001FE1E <AmiBlitz3.ab3@1424>   MOVE.w set_make_smallestcode,-(A7)
0001FE26 <AmiBlitz3.ab3@1428>     MOVE.w #1,makeexec
0001FE2C <AmiBlitz3.ab3@1429>     JSR ab3_OpenDebugFile
0001FE30 <AmiBlitz3.ab3@1430>     BSR.w startcompile
0001FE36 <AmiBlitz3.ab3@1431>     JSR ab3_CloseDebugFile
0001FE40 <AmiBlitz3.ab3@1432>     CMP.l #"NORE",reqmode
0001FE44 <AmiBlitz3.ab3@1433>   BEQ 'l1
0001FE4A <AmiBlitz3.ab3@1435>   TST.w anyerrs
0001FE4E <AmiBlitz3.ab3@1436>   BNE.b menu_createexecutable__skip
0001FE52 <AmiBlitz3.ab3@1437>   BSR.w savefile
0001FE58 <AmiBlitz3.ab3@1440>   MOVE.w (A7)+,set_make_smallestcode
0001FE5A <AmiBlitz3.ab3@1443> RTS
0001FE62 <AmiBlitz3.ab3@1447>   MOVE.w #-1,flag_noPED
0001FE64 <AmiBlitz3.ab3@1448> RTS
0001FE6C <AmiBlitz3.ab3@1452>   MOVE.w #-1,flag_noCLI
0001FE6E <AmiBlitz3.ab3@1453> RTS
0001FE98 <AmiBlitz3.ab3@1456>   !basic
0001FEC0 <AmiBlitz3.ab3@1457>     If dbg_fid>=0 Then file_Close{dbg_fid} : dbg_fid = -1
0001FED0 <AmiBlitz3.ab3@1458>     Poke.w ?word_WriteDebugFileNow,0
0001FEEE <AmiBlitz3.ab3@1459>   !asm
0001FEF0 <AmiBlitz3.ab3@1460> RTS
0001FF1A <AmiBlitz3.ab3@1463>   !basic
0001FF2A <AmiBlitz3.ab3@1464>   Poke.w ?word_WriteDebugFileNow,0
0001FF3C <AmiBlitz3.ab3@1465>   If dbg_fid>=0
0001FF52 <AmiBlitz3.ab3@1466>     file_Close{dbg_fid} : dbg_fid = -1
0001FF64 <AmiBlitz3.ab3@1468>   If dbg_fid.l<0
0001FF66 <AmiBlitz3.ab3@1469>     CLR.l d0
0001FFA4 <AmiBlitz3.ab3@1470>     !ComData_GetW{comWord_CreateDebugFile,D0}
0001FFA8 <AmiBlitz3.ab3@1471>     dbg_Create.l = PutD0
0001FFB2 <AmiBlitz3.ab3@1472>     If (dbg_Create) ; only when set!
0001FFC2 <AmiBlitz3.ab3@1473>       exefileP.l = Peek.l (?ptr_newexefilename)
0001FFEA <AmiBlitz3.ab3@1474>       exefile.s = ""
0002001C <AmiBlitz3.ab3@1475>       If exefileP Then exefile.s = Peek.s(exefileP)
00020054 <AmiBlitz3.ab3@1476>       If exefile><""
000200AA <AmiBlitz3.ab3@1477>         dbg_fid = file_Open{exefile+".dbg",#file_forcewrite}
000200BC <AmiBlitz3.ab3@1478>         If dbg_fid>=0
000200CE <AmiBlitz3.ab3@1479>           Poke.w ?word_WriteDebugFileNow,-1
000200DA <AmiBlitz3.ab3@1482>       oldhunkoffset.l = -1
00020102 <AmiBlitz3.ab3@1483>       oldfile.s       = ""
00020120 <AmiBlitz3.ab3@1486>   !asm
00020122 <AmiBlitz3.ab3@1487> RTS
00020128 <AmiBlitz3.ab3@1490> TST.w word_WriteDebugFileNow
0002012C <AmiBlitz3.ab3@1491> BEQ 'skipdebugfile
00020156 <AmiBlitz3.ab3@1492> !basic
00020168 <AmiBlitz3.ab3@1493>   If dbg_fid>=0
0002017A <AmiBlitz3.ab3@1494>     pass.l          = Peek.w(?pass)
0002018C <AmiBlitz3.ab3@1495>     makesmallest.b  = Peek.b(?make_smallestcode)               ; get the status of make_smallestcode  tomsmart1
000201B0 <AmiBlitz3.ab3@1496> 
000201B6 <AmiBlitz3.ab3@1497>       oldhunkoffset.l = hunkoffset.l
000201EA <AmiBlitz3.ab3@1498>       oldfile.s       = codefile.s
00020206 <AmiBlitz3.ab3@1499>       If Peek.w (?ininclude)>0
00020216 <AmiBlitz3.ab3@1500>         codeline.l = Peek.l(?includeline);-1
00020286 <AmiBlitz3.ab3@1501>         codefile.s = dos_FilePart{incdim(Peek.w(?ininclude)-1)}
0002028C <AmiBlitz3.ab3@1502>       Else
000202BA <AmiBlitz3.ab3@1503>         !ComData_LEA{comStr_SourceName,A0}
000202BC <AmiBlitz3.ab3@1504>         MOVE.l A0,D0
000202C0 <AmiBlitz3.ab3@1505>         sourceP.l = PutD0
000202E8 <AmiBlitz3.ab3@1506>         codefile.s = Peek.s(sourceP)
000202F8 <AmiBlitz3.ab3@1507>         codeline.l = Peek.l(?linenumat)
00020320 <AmiBlitz3.ab3@1509>       hunkoffset.l = Peek.l(?destpointer)-Peek.l(?destbufferstart)
00020374 <AmiBlitz3.ab3@1510>       If oldhunkoffset><hunkoffset OR oldfile><codefile
00020384 <AmiBlitz3.ab3@1517>         *sourceLine.SourceLine_t = Peek.l(?sourceline)
0002038E <AmiBlitz3.ab3@1518>         If *sourceLine
000203A4 <AmiBlitz3.ab3@1519>           MaxLen detokenline.s = 65536
000203E6 <AmiBlitz3.ab3@1520>          !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000203F6 <AmiBlitz3.ab3@1521>          *tn.preprocessor = Peek.l(?include_preprocessor)
00020422 <AmiBlitz3.ab3@1522>           written.l = preproc_Detokenize{*tn,&*sourceLine\Text,&detokenline,*sourceLine\CharLength}
00020450 <AmiBlitz3.ab3@1523>           If written>0 Then Poke.b &detokenline+written-1,0
0002047A <AmiBlitz3.ab3@1524>           sourceLineText.s = Peek.s(&detokenline)
00020480 <AmiBlitz3.ab3@1525>         Else
000204A8 <AmiBlitz3.ab3@1526>           sourceLineText = "NULL"
00020570 <AmiBlitz3.ab3@1529>         file_WriteLine{dbg_fid,Hex$(hunkoffset)+" <"+codefile+"@"+Str$(codeline)+"> "+sourceLineText}
0002058E <AmiBlitz3.ab3@1535> !asm
00020590 <AmiBlitz3.ab3@1537> RTS
00020592 <AmiBlitz3.ab3@1539> word_WriteDebugFileNow: Dc.w 0
00020594 <AmiBlitz3.ab3@1541> flag_noPED:  Ds.w 1                                        ;closeed org source
00020596 <AmiBlitz3.ab3@1542> flag_noCLI:  Ds.w 1                                        ;nocli org source
0002059A <AmiBlitz3.ab3@1546>   MOVEM.l A2-A3,-(A7)
000205A0 <AmiBlitz3.ab3@1547>   CLR.b doublepeek
000205A6 <AmiBlitz3.ab3@1548>   MOVE.l A5,lastsourcepos
000205AC <AmiBlitz3.ab3@1549>    JSR getchar
000205B0 <AmiBlitz3.ab3@1550>   CMP.w #$2E,D0
000205B4 <AmiBlitz3.ab3@1551>    BEQ.w JL_0_49B4b
000205BA <AmiBlitz3.ab3@1552>   MOVEA.l defaulttype,A2
000205BE <AmiBlitz3.ab3@1553>   CMP.w #$24,D0
000205C2 <AmiBlitz3.ab3@1554>    BNE.w JL_0_49CAb
000205C4 <AmiBlitz3.ab3@1555>   MOVEQ.l #$07,D1
000205C8 <AmiBlitz3.ab3@1556> BRA.w JL_0_49DEb
000205CE <AmiBlitz3.ab3@1559>   JSR getparameter2
000205D2 <AmiBlitz3.ab3@1560>   BEQ.w syntaxerrb
000205D8 <AmiBlitz3.ab3@1561>   LEA newtypebase,A2
000205DE <AmiBlitz3.ab3@1562>   JSR findtype
000205E2 <AmiBlitz3.ab3@1563>   BNE.w notypeerrb
000205EC <AmiBlitz3.ab3@1568>   MOVE.w oldqflag,instringon
000205F2 <AmiBlitz3.ab3@1569>   MOVEA.l lastsourcepos,A5
000205F8 <AmiBlitz3.ab3@1571>   MOVE.l a2,functionreturntype
00020600 <AmiBlitz3.ab3@1572>   CMPI.l #$100,$4(A2)
00020604 <AmiBlitz3.ab3@1573>   BLE.w 'isvar
00020606 <AmiBlitz3.ab3@1577>   MOVEQ #3,d1
0002060A <AmiBlitz3.ab3@1578>   BRA JL_0_49DEb
0002060E <AmiBlitz3.ab3@1585>   MOVE.w $6(A2),D1
00020614 <AmiBlitz3.ab3@1586>   CMP.w #8,8(a2)
00020618 <AmiBlitz3.ab3@1587>   BNE 'l1
00020620 <AmiBlitz3.ab3@1588>   MOVE.b #1,doublepeek
00020626 <AmiBlitz3.ab3@1592>   MOVE.w D1,convsize
0002062A <AmiBlitz3.ab3@1593>   MOVEM.l (A7)+,A2-A3
0002062C <AmiBlitz3.ab3@1594> RTS
00020632 <AmiBlitz3.ab3@1596> notypeerrb  JMP notypeerr
00020638 <AmiBlitz3.ab3@1597> illtypeerrb JMP illtypeerr
0002063E <AmiBlitz3.ab3@1598> syntaxerrb  JMP syntaxerr
00020642 <AmiBlitz3.ab3@1603>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00020648 <AmiBlitz3.ab3@1604>   MOVEA.l _execbase,A6
0002064E <AmiBlitz3.ab3@1605>   TST.b MorphOS                    ; test if we have MorphOS ( 0 no, 1 yes)
00020652 <AmiBlitz3.ab3@1606>    BEQ 'useclearU                  ; if we have 0 = No MorpOS then jump
00020654 <AmiBlitz3.ab3@1608>   MOVEQ.l #8,d1
0002065A <AmiBlitz3.ab3@1609>   MOVE.l #200,d0
0002065E <AmiBlitz3.ab3@1610>   JSR _CacheClearE(A6)
00020662 <AmiBlitz3.ab3@1611>  BRA 'exit
00020666 <AmiBlitz3.ab3@1650>   JSR _CacheClearU(A6)
0002066A <AmiBlitz3.ab3@1653>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
0002066C <AmiBlitz3.ab3@1654> RTS
00020676 <AmiBlitz3.ab3@1659>   ADD.l #1,number_of_builds
0002067C <AmiBlitz3.ab3@1661>   CLR.w debugversion
00020682 <AmiBlitz3.ab3@1662>   CLR.w flag_noPED
00020688 <AmiBlitz3.ab3@1663>   CLR.w flag_noCLI
00020690 <AmiBlitz3.ab3@1666>     MOVE.w #0,makeexec                                     ;MOVE.w #$FFFF,debugversion
00020694 <AmiBlitz3.ab3@1667>     BSR.w startcompile
0002069E <AmiBlitz3.ab3@1668>     CMP.l #"NORE",reqmode
000206A2 <AmiBlitz3.ab3@1669>   BEQ 'l1
000206A8 <AmiBlitz3.ab3@1672>   TST.w anyerrs
000206AC <AmiBlitz3.ab3@1673>    BNE.w JL_0_3482
000206B0 <AmiBlitz3.ab3@1675>   MOVE.w flag_noPED(PC),D1
000206B4 <AmiBlitz3.ab3@1676>    BEQ.w skip_closingGUI
000206E6 <AmiBlitz3.ab3@1681>   !ComData_JSR{comFunc_CloseGUI}
000206EA <AmiBlitz3.ab3@1682> BRA.b runprogram
000206EE <AmiBlitz3.ab3@1686>   BSR.w compilerequester
000206F4 <AmiBlitz3.ab3@1689>   MOVEA.l _dosbase,A6
000206FA <AmiBlitz3.ab3@1690>   LEA exepath,a0
000206FC <AmiBlitz3.ab3@1691>   MOVE.l a0,d1
000206FE <AmiBlitz3.ab3@1692>   MOVEQ #-2,d2
00020702 <AmiBlitz3.ab3@1693>   JSR _Lock(a6)                                            ;lock
00020708 <AmiBlitz3.ab3@1694>   MOVE.l d0,exelock
0002070E <AmiBlitz3.ab3@1695>   MOVE.l #0,d1
00020712 <AmiBlitz3.ab3@1696>   JSR _CurrentDir(A6)
00020718 <AmiBlitz3.ab3@1697>   MOVE.l D0,lock_currentdir
0002071A <AmiBlitz3.ab3@1698>   MOVE.l D0,D1
0002071E <AmiBlitz3.ab3@1699>   JSR _CurrentDir(A6)
00020724 <AmiBlitz3.ab3@1700>   CLR.l ptr_exetask
0002072A <AmiBlitz3.ab3@1709>   MOVE.l #str_process_name,D1
0002072C <AmiBlitz3.ab3@1710>   MOVEQ.l #$00,D2
00020732 <AmiBlitz3.ab3@1711>   MOVE.l #proc_seglist,D3
00020734 <AmiBlitz3.ab3@1712>   LSR.l #2,D3
0002073A <AmiBlitz3.ab3@1713>   MOVE.l stacksize,D4
00020740 <AmiBlitz3.ab3@1714>   MOVEA.l _dosbase,A6
00020744 <AmiBlitz3.ab3@1715>   JSR _CreateProc(A6)                                      ;runtask
00020746 <AmiBlitz3.ab3@1716>   TST.l D0
0002074A <AmiBlitz3.ab3@1717>    BEQ ErrorRunningProg
00020780 <AmiBlitz3.ab3@1719>   !ComData_SetB{comByte_RunningFlag,#1}   ; this should be done here, straigt after it is clear that
00020786 <AmiBlitz3.ab3@1721>   TST.w flag_noPED
0002078A <AmiBlitz3.ab3@1722>    BNE.b JL_0_344E
0002078E <AmiBlitz3.ab3@1723>   BSR.w close_compilewin
00020794 <AmiBlitz3.ab3@1726>   CLR.l firstlocal
0002079A <AmiBlitz3.ab3@1727>   CLR.l firstglob
0002079E <AmiBlitz3.ab3@1728>   MOVE.w flag_noPED(PC),D1
000207A2 <AmiBlitz3.ab3@1729>   BEQ.w skip_openGUI
000207D4 <AmiBlitz3.ab3@1733>   !ComData_JSR{comFunc_CreateGUI}
000207D6 <AmiBlitz3.ab3@1743> RTS
000207E0 <AmiBlitz3.ab3@1746> MOVE.l #1,_runerror
000207E4 <AmiBlitz3.ab3@1747> BRA JL_0_344E
000207E8 <AmiBlitz3.ab3@1749> _runerror: Dc.l 0
000207EC <AmiBlitz3.ab3@1750> lock_currentdir:    Ds.l 1                                          ;tasklock org source
000207F0 <AmiBlitz3.ab3@1751> ptr_exetask:        Ds.l 1                                          ;panictask org source
000207F4 <AmiBlitz3.ab3@1752> signalNum:          Ds.l 1                                          ;panicbit org source
000207F8 <AmiBlitz3.ab3@1753> signals:            Ds.l 1                                          ;panicmask org source
0002080E <AmiBlitz3.ab3@1755> str_process_name:   Dc.b "Blitz ][ Program Proc",0 : Even           ;procname org source
00020813 <AmiBlitz3.ab3@1756>                     Ds.b 5                                          ;cnop 0,4 :dc.l 0   ;length org source
00020814 <AmiBlitz3.ab3@1757> Even4
00020818 <AmiBlitz3.ab3@1759> ptr_ThisTask:       Ds.l 1                                          ;length
0002081C <AmiBlitz3.ab3@1760> .proc_seglist:      Ds.l 1                                          ;procstart org source ;next
00020822 <AmiBlitz3.ab3@1764>   MOVEA.l $4,A0
0002082A <AmiBlitz3.ab3@1765>   MOVE.l  $114(A0),ptr_exetask
00020830 <AmiBlitz3.ab3@1767>   MOVEA.l _dosbase,A6
00020836 <AmiBlitz3.ab3@1768>   MOVE.l exelock,D1
0002083A <AmiBlitz3.ab3@1769>   JSR _CurrentDir(A6)
00020870 <AmiBlitz3.ab3@1774>   !ComData_SetB{comByte_RunningFlag,#1}
00020874 <AmiBlitz3.ab3@1780>   MOVE.w flag_noCLI(PC),D1
00020878 <AmiBlitz3.ab3@1781>    BNE.b skip_openconsole
000208AA <AmiBlitz3.ab3@1785>   !ComData_JSR{comFunc_OpenConsole}
000208AE <AmiBlitz3.ab3@1788>   BSR.w calcvbr
000208B4 <AmiBlitz3.ab3@1789>   MOVEA.l vbr,A0
000208BA <AmiBlitz3.ab3@1794>   CLR.w dirmode
000208C0 <AmiBlitz3.ab3@1795>   CLR.l firstglob
000208C6 <AmiBlitz3.ab3@1796>   CLR.l firstlocal
000208CC <AmiBlitz3.ab3@1798>   MOVE.l stacksize,D2
000208D2 <AmiBlitz3.ab3@1799>   MOVE.l #$624C745A,D7                                      ;#'bLtZ',d7 org source ;force cli-type run
000208D8 <AmiBlitz3.ab3@1800>   LEA str_cliarguments,A0                                   ;cli arguement
000208DE <AmiBlitz3.ab3@1801>   MOVEA.l destbufferstart,A1
000208E2 <AmiBlitz3.ab3@1802>   BSR.w Aclearcache
000208E4 <AmiBlitz3.ab3@1805>   JSR (A1)                                                 ; execute compiled code  ;Run the thing!
000208EA <AmiBlitz3.ab3@1807>   MOVEA.l vbr,A0
000208F0 <AmiBlitz3.ab3@1809>   CLR.l firstglob
000208F6 <AmiBlitz3.ab3@1810>   CLR.l firstlocal
000208FC <AmiBlitz3.ab3@1811>   MOVEA.l _dosbase,A6
00020902 <AmiBlitz3.ab3@1812>   MOVE.l exelock,d1
00020906 <AmiBlitz3.ab3@1813>   BEQ 'nolock
0002090A <AmiBlitz3.ab3@1814>   JSR _UnLock(a6)
00020940 <AmiBlitz3.ab3@1819>   !ComData_SetB{comByte_RunningFlag,#0}
00020944 <AmiBlitz3.ab3@1822>   MOVE.w flag_noCLI(PC),D1
00020948 <AmiBlitz3.ab3@1823>    BNE.b skip_closeconsole
0002097A <AmiBlitz3.ab3@1827>   !ComData_JSR{comFunc_CloseConsole}
00020982 <AmiBlitz3.ab3@1830>   MOVE.w #$0001,stopit
00020986 <AmiBlitz3.ab3@1831>   MOVE.l signals(PC),D0
0002098C <AmiBlitz3.ab3@1832>   MOVEA.l ptr_ThisTask,A1
00020992 <AmiBlitz3.ab3@1833>   MOVEA.l _execbase,A6
00020996 <AmiBlitz3.ab3@1834>   JSR _Signal(A6)
00020998 <AmiBlitz3.ab3@1835> RTS
0002099E <AmiBlitz3.ab3@1839>   MOVEA.l _execbase,A6
000209A2 <AmiBlitz3.ab3@1840>   MOVE.w $128(A6),D0
000209A4 <AmiBlitz3.ab3@1841>   MOVEQ.l #$00,D1
000209A8 <AmiBlitz3.ab3@1842>   ANDI.w #$F,D0
000209AC <AmiBlitz3.ab3@1845>     BEQ.b calcvbr__skip
000209AE <AmiBlitz3.ab3@1846>     ADDQ.w #1,D1
000209B0 <AmiBlitz3.ab3@1847>     LSR.w #1,D0
000209B4 <AmiBlitz3.ab3@1848> BRA.b calcvbr_loop
000209B6 <AmiBlitz3.ab3@1851>   MOVEQ.l #$00,D2
000209BA <AmiBlitz3.ab3@1852>   CMP.w #$2,D1
000209BE <AmiBlitz3.ab3@1853>    BCS.b calcvbr__skip2
000209C4 <AmiBlitz3.ab3@1854>   MOVEA.l _execbase,A6
000209C8 <AmiBlitz3.ab3@1855>   JSR _SuperState(A6)
000209CC <AmiBlitz3.ab3@1856>   Dc.l $4E7A2801                                           ;movec vbr,D2
000209D0 <AmiBlitz3.ab3@1857>   JSR _UserState(A6)
000209D6 <AmiBlitz3.ab3@1860>   MOVE.l D2,vbr
000209D8 <AmiBlitz3.ab3@1861> RTS
000209DE <AmiBlitz3.ab3@1865>   LEA instrtab,a0
000209E4 <AmiBlitz3.ab3@1866>   MOVE.l #labelhash-instrtab,d0
000209E6 <AmiBlitz3.ab3@1867>   ASR.l #2,d0
000209E8 <AmiBlitz3.ab3@1868>   SUBQ.l #1,d0
000209EA <AmiBlitz3.ab3@1871>   CLR.l (a0)+
000209EC <AmiBlitz3.ab3@1872>   SUBQ.l #1,d0
000209F0 <AmiBlitz3.ab3@1873>   BNE 'l10
000209F4 <AmiBlitz3.ab3@1874>   BSR.w call_setpointerbusy
000209F8 <AmiBlitz3.ab3@1875>   BSR.w free_userlibs
000209FC <AmiBlitz3.ab3@1876>   BSR.w scan_for_userlibs
00020A00 <AmiBlitz3.ab3@1877>   BSR.w JL_0_7082
00020A04 <AmiBlitz3.ab3@1878> BRA.w call_setpointernormal
00020A2E <AmiBlitz3.ab3@1884>   !basic
00020A68 <AmiBlitz3.ab3@1885>   Poke.l ?size_acidlibs, dos_GetFileSize{Peek$(?str_path_acidlibs)}
00020A78 <AmiBlitz3.ab3@1887>   deflibNameP.l = Peek.l(?deflib)
00020A82 <AmiBlitz3.ab3@1888>   If deflibNameP
00020AB4 <AmiBlitz3.ab3@1889>     If Peek.s(deflibNameP)<>""
00020AFE <AmiBlitz3.ab3@1890>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(Peek.l(?deflib))}
00020B04 <AmiBlitz3.ab3@1891>     Else
00020B3E <AmiBlitz3.ab3@1892>       Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020B44 <AmiBlitz3.ab3@1894>   Else
00020B7E <AmiBlitz3.ab3@1895>     Poke.l ?size_deflibs, dos_GetFileSize{Peek.s(?str_path_deflibs)}
00020BB8 <AmiBlitz3.ab3@1896>     error{"INTERNAL: Invalid deflib name pointer!"}
00020BD6 <AmiBlitz3.ab3@1898>   !asm
00020BDC <AmiBlitz3.ab3@1903>   MOVE.l #str_path_userlibs,D1
00020BDE <AmiBlitz3.ab3@1904>   MOVEQ.l #-$02,D2
00020BE4 <AmiBlitz3.ab3@1905>   MOVEA.l _dosbase,A6
00020BE8 <AmiBlitz3.ab3@1906>   JSR _Lock(A6)
00020BEA <AmiBlitz3.ab3@1907>   MOVE.l D0,D7
00020BEE <AmiBlitz3.ab3@1908>    BEQ.w exit_get_libraries
00020BF0 <AmiBlitz3.ab3@1909>   MOVE.l D7,D1
00020BF6 <AmiBlitz3.ab3@1910>   MOVE.l #ptr_parameterstore,D2
00020BFA <AmiBlitz3.ab3@1911>   JSR _Examine(A6)
00020BFC <AmiBlitz3.ab3@1912>   TST.l D0
00020C00 <AmiBlitz3.ab3@1913>   BEQ.w unlock_and_exit_get_libraries
00020C06 <AmiBlitz3.ab3@1914>   MOVE.l fib_DirEntryType,D0
00020C0A <AmiBlitz3.ab3@1915>   BMI.w unlock_and_exit_get_libraries
00020C0C <AmiBlitz3.ab3@1920>     MOVE.l D7,D1
00020C12 <AmiBlitz3.ab3@1921>     MOVE.l #ptr_parameterstore,D2
00020C18 <AmiBlitz3.ab3@1922>     MOVEA.l _dosbase,A6
00020C1C <AmiBlitz3.ab3@1923>     JSR _ExNext(A6)
00020C1E <AmiBlitz3.ab3@1924>     TST.l D0
00020C22 <AmiBlitz3.ab3@1925>      BEQ.w exit_scan_libsdrawer                            ; kein weiteres File
00020C28 <AmiBlitz3.ab3@1927>     MOVE.l fib_DirEntryType,D0                             ; positive for directoies, negative for files
00020C2C <AmiBlitz3.ab3@1928>     BPL.w scan_libsdrawer                                  ; skip directories
00020C32 <AmiBlitz3.ab3@1930>     LEA fib_FileName,A0                                    ; pruefen ob infofile
00020C36 <AmiBlitz3.ab3@1931>     BSR.w check_for_infoextention
00020C3A <AmiBlitz3.ab3@1932>     BEQ.w scan_libsdrawer
00020C40 <AmiBlitz3.ab3@1934>     MOVEA.l _execbase,A6                                   ; allocate $26 = 38 bytes fuer listeneintrag
00020C42 <AmiBlitz3.ab3@1935>     MOVEQ.l #$26,D0
00020C44 <AmiBlitz3.ab3@1936>     MOVEQ.l #$01,D1
00020C4A <AmiBlitz3.ab3@1937>     MOVE.l mempool,a0
00020C4E <AmiBlitz3.ab3@1938>     JSR _AllocPooled(a6)
00020C54 <AmiBlitz3.ab3@1940>     MOVEA.l _dosbase,A6
00020C56 <AmiBlitz3.ab3@1941>     MOVE.l D0,D6                                           ; sichere speicheradresse in D6
00020C5C <AmiBlitz3.ab3@1944>     LEA ptr_userlibs_list,A0                               ; pruefe liste
00020C5E <AmiBlitz3.ab3@1947>     MOVE.l (A0),D5
00020C62 <AmiBlitz3.ab3@1948>      BEQ.w JL_0_3722                                       ; kein pointer da? kann springe weiter
00020C64 <AmiBlitz3.ab3@1949>     MOVEA.l D5,A2
00020C66 <AmiBlitz3.ab3@1950>     ADDQ.w #6,A2                                           ; 6 bytes weiter gehen, um dateinamen zu speichern
00020C6C <AmiBlitz3.ab3@1953>     LEA fib_FileName,A1                                    ; vergleich, ob Dateiname schon in der liste ist
00020C6E <AmiBlitz3.ab3@1956>       MOVEQ.l #$00,D0
00020C70 <AmiBlitz3.ab3@1957>       MOVE.b (A1)+,D0
00020C74 <AmiBlitz3.ab3@1958>        BEQ.w JL_0_3722                                     ; dateiname komplett, dann weiter
00020C76 <AmiBlitz3.ab3@1959>       MOVEQ.l #$00,D1
00020C78 <AmiBlitz3.ab3@1960>       MOVE.b (A2)+,D1
00020C7C <AmiBlitz3.ab3@1961>        BEQ.w JL_0_371C
00020C9E <AmiBlitz3.ab3@1962>       !compare1                                            ;bsr.w tstalpha
00020CA2 <AmiBlitz3.ab3@1963>       BNE.w JL_0_3702
00020CA6 <AmiBlitz3.ab3@1964>       ANDI.w #$DF,D0
00020CA8 <AmiBlitz3.ab3@1967>       EXG.l D0,D1
00020CCA <AmiBlitz3.ab3@1968>       !compare1                                            ;bsr.w tstalpha
00020CCE <AmiBlitz3.ab3@1969>       BNE.w JL_0_3710
00020CD2 <AmiBlitz3.ab3@1970>       ANDI.w #$DF,D0
00020CD4 <AmiBlitz3.ab3@1973>       EXG.l D0,D1
00020CD6 <AmiBlitz3.ab3@1974>       CMP.b D1,D0
00020CDA <AmiBlitz3.ab3@1975>     BEQ.w JL_0_36E6
00020CDE <AmiBlitz3.ab3@1976>     BCS.w JL_0_3722
00020CE0 <AmiBlitz3.ab3@1979>     MOVEA.l D5,A0
00020CE4 <AmiBlitz3.ab3@1980> BRA.w JL_0_36D6
00020CE6 <AmiBlitz3.ab3@1983>     MOVEA.l D6,A1                                          ; hier war die adresse des allokierten Speicers drin
00020CE8 <AmiBlitz3.ab3@1984>     MOVE.l (A0),(A1)
00020CEA <AmiBlitz3.ab3@1985>     MOVE.l A1,(A0)
00020CEC <AmiBlitz3.ab3@1986>     ADDQ.w #4,A1                                           ; pointer zum naechsten namen ueberspringen
00020CF0 <AmiBlitz3.ab3@1987>     MOVE.w #$FFFF,(A1)+                                    ; $FFFF schreiben
00020CF6 <AmiBlitz3.ab3@1988>     MOVEA.l #fib_FileName,A0                               ; dateinamen in die liste kopieren
00020CF8 <AmiBlitz3.ab3@1991>       MOVE.b (A0)+,(A1)+
00020CFC <AmiBlitz3.ab3@1992>     BNE.w JL_0_3734
00020D00 <AmiBlitz3.ab3@1993> BRA.w scan_libsdrawer
00020D02 <AmiBlitz3.ab3@1996>   MOVE.l D7,D1
00020D08 <AmiBlitz3.ab3@1997>   MOVEA.l _dosbase,A6
00020D0C <AmiBlitz3.ab3@1998>   JSR _UnLock(A6)
00020D0E <AmiBlitz3.ab3@1999>   MOVEQ.l #-$01,D0
00020D10 <AmiBlitz3.ab3@2002> RTS
00020D12 <AmiBlitz3.ab3@2005>   MOVE.l D7,D1
00020D18 <AmiBlitz3.ab3@2006>   MOVEA.l _dosbase,A6
00020D1C <AmiBlitz3.ab3@2007>   JSR _UnLock(A6)
00020D1E <AmiBlitz3.ab3@2008>   MOVEQ.l #$00,D0
00020D20 <AmiBlitz3.ab3@2009> RTS
00020D26 <AmiBlitz3.ab3@2013>   MOVEA.l _execbase,A6
00020D2C <AmiBlitz3.ab3@2014>   MOVEA.l ptr_userlibs_list,A2
00020D32 <AmiBlitz3.ab3@2015>   CLR.l ptr_userlibs_list
00020D36 <AmiBlitz3.ab3@2018>     CMPA.w #$0,A2
00020D3A <AmiBlitz3.ab3@2019>     BEQ.w exit_free_userlib
00020D3C <AmiBlitz3.ab3@2020>       MOVEA.l A2,A1
00020D3E <AmiBlitz3.ab3@2021>       MOVEQ.l #$26,D0
00020D40 <AmiBlitz3.ab3@2022>       MOVEA.l (A2),A2
00020D46 <AmiBlitz3.ab3@2023>       MOVE.l mempool,a0
00020D4C <AmiBlitz3.ab3@2024>       MOVEA.l _execbase,A6
00020D50 <AmiBlitz3.ab3@2025>       JSR _FreePooled(A6)
00020D54 <AmiBlitz3.ab3@2026> BRA.w loop_free_userlib
00020D56 <AmiBlitz3.ab3@2029> RTS
00020D58 <AmiBlitz3.ab3@2032> pass:  Dc.w 0                                             ; smallpass org source
00020D5A <AmiBlitz3.ab3@2033> compiler_job: Dc.w 0                                      ; added by thilo: what the compiler is doing at the moment
00020D60 <AmiBlitz3.ab3@2037>   MOVE.l A7,errstack                                      ;startcompile
00020D66 <AmiBlitz3.ab3@2046>   CLR.l reqmode
00020D70 <AmiBlitz3.ab3@2048>   MOVE.l #Aclearallvars,errcont
00020D7A <AmiBlitz3.ab3@2049>   MOVE.l #concomstack,concomsp
00020D7E <AmiBlitz3.ab3@2057>   MOVE.w #1450,D0
00020D80 <AmiBlitz3.ab3@2058>   LSR.w #3,D0
00020D82 <AmiBlitz3.ab3@2059>   SUBQ.w #7,D0                                             ; 173
00020D88 <AmiBlitz3.ab3@2060>   MOVE.w D0,progressbar_width
00020D8A <AmiBlitz3.ab3@2061>   SWAP D0
00020D8C <AmiBlitz3.ab3@2062>   CLR.w D0
00020D92 <AmiBlitz3.ab3@2063>   MOVE.l numlines,d1
00020D96 <AmiBlitz3.ab3@2064>   DIVU.l d1,d0                                             ; progressbar_width / numlines
00020D98 <AmiBlitz3.ab3@2066>   TST.w D0
00020D9C <AmiBlitz3.ab3@2067>   BNE.w JL_0_37C0
00020D9E <AmiBlitz3.ab3@2068>   MOVEQ.l #-$01,D0
00020DA4 <AmiBlitz3.ab3@2071>   MOVE.w D0,progress_per_line
00020DAC <AmiBlitz3.ab3@2080>   BTST #$7,use_debugger
00020DB0 <AmiBlitz3.ab3@2082>   BNE 'debugon
00020DB6 <AmiBlitz3.ab3@2083>   CLR.w debugmode
00020DBA <AmiBlitz3.ab3@2084> BRA.b 'debugoff
00020DC0 <AmiBlitz3.ab3@2087>   SNE debugmode
00020DF8 <AmiBlitz3.ab3@2095>   !ComData_SetB{comByte_DebugMode,debugmode}
00020DFE <AmiBlitz3.ab3@2098>   CLR.w dirmode                                            ;direct mode flag
00020E04 <AmiBlitz3.ab3@2099>   CLR.w ezerr                                              ;quiet error
00020E0A <AmiBlitz3.ab3@2100>   CLR.l currentfunction
00020E10 <AmiBlitz3.ab3@2101>   CLR.w connest
00020E16 <AmiBlitz3.ab3@2102>   CLR.w varmode
00020E1C <AmiBlitz3.ab3@2103>   CLR.w proceduremode
00020E22 <AmiBlitz3.ab3@2104>   CLR.w ininclude
00020E28 <AmiBlitz3.ab3@2105>   CLR.w intstring
00020E2E <AmiBlitz3.ab3@2106>   CLR.w pass
00020E36 <AmiBlitz3.ab3@2107>   MOVE.w #0,compiler_job
00020E3C <AmiBlitz3.ab3@2108>   CLR.l funcscanon
00020E42 <AmiBlitz3.ab3@2117>   CLR.l funcscanon
00020E46 <AmiBlitz3.ab3@2118>   BSR.w compileall
00020E4C <AmiBlitz3.ab3@2119> 
00020E52 <AmiBlitz3.ab3@2120>   TST.l errorcounter
00020E56 <AmiBlitz3.ab3@2121>   BEQ _skiperrorstop
00020E58 <AmiBlitz3.ab3@2122>   RTS
00020E5E <AmiBlitz3.ab3@2125>   MOVE.w dontwrite,d0
00020E62 <AmiBlitz3.ab3@2126>   CMP.w #1,d0
00020E66 <AmiBlitz3.ab3@2127>   BNE 'l3
00020E6C <AmiBlitz3.ab3@2128>   TST.l errorcounter
00020E70 <AmiBlitz3.ab3@2129>   BNE 'l3
00020E76 <AmiBlitz3.ab3@2130>   CLR.w dontwrite
00020E7A <AmiBlitz3.ab3@2131>   BSR compileall                                           ;if a function is not found
00020E80 <AmiBlitz3.ab3@2132>   ADDQ.w #1,pass
00020EBE <AmiBlitz3.ab3@2137>   !ComData_GetB{comByte_FuncOptimize,D0}  ; now its in the xtra file and can be put to GUI settings ; Wanderer
00020EC2 <AmiBlitz3.ab3@2138>   BEQ 'out  ; only if func optimize is set >< 0; Wanderer
00020EC8 <AmiBlitz3.ab3@2139>   LEA firstproc,a0
00020ECE <AmiBlitz3.ab3@2140>   CLR.l savefuncspace
00020ED0 <AmiBlitz3.ab3@2141>   MOVE.l (a0),d0
00020ED2 <AmiBlitz3.ab3@2145>     MOVE.l d0,a0
00020ED6 <AmiBlitz3.ab3@2146>     BEQ 'out
00020EDA <AmiBlitz3.ab3@2147>     TST.b isfunc(a0)
00020EDE <AmiBlitz3.ab3@2148>     BNE 'nex
00020EE2 <AmiBlitz3.ab3@2149>     MOVEM.l d2/a6/a0,-(a7)
00020EE4 <AmiBlitz3.ab3@2151>     MOVEQ #0,d0
00020EE8 <AmiBlitz3.ab3@2152>     MOVE.b $21+#funcentry_extend-1(a0),d0
00020EEC <AmiBlitz3.ab3@2153>     SUB.w #$21+#funcentry_extend,d0
00020EF0 <AmiBlitz3.ab3@2154>     ADD.w #16,d0
00020EF6 <AmiBlitz3.ab3@2155>     MOVE.l #$10000,d1
00020EF8 <AmiBlitz3.ab3@2156>     MOVE.l d0,d2
00020EFE <AmiBlitz3.ab3@2157>     MOVEA.l _execbase,A6
00020F02 <AmiBlitz3.ab3@2158>     JSR _AllocMem(a6)         ; thilo: not 100% sure about this!
00020F04 <AmiBlitz3.ab3@2159>     MOVE.l d0,a1
00020F08 <AmiBlitz3.ab3@2160>     MOVE.l d2,4(a1)
00020F0E <AmiBlitz3.ab3@2161>     MOVE.l unusedfunc,(a1)
00020F14 <AmiBlitz3.ab3@2162>     MOVE.l d0,unusedfunc
00020F18 <AmiBlitz3.ab3@2163>     MOVEM.l (a7)+,a6/a0/d2
00020F1C <AmiBlitz3.ab3@2164>     MOVE.l isfunc+1(a0),d0
00020F1E <AmiBlitz3.ab3@2165>     ADDQ.l #6,d0
00020F24 <AmiBlitz3.ab3@2166>     ADD.l d0,savefuncspace
00020F28 <AmiBlitz3.ab3@2169>     MOVE.l d0,8(a1)
00020F2C <AmiBlitz3.ab3@2170>     LEA 12(a1),a1
00020F2E <AmiBlitz3.ab3@2171>     MOVE.l a0,-(a7)
00020F32 <AmiBlitz3.ab3@2172>     LEA $21+#funcentry_extend(a0),a0
00020F34 <AmiBlitz3.ab3@2175>       MOVE.b (a0)+,(a1)+
00020F38 <AmiBlitz3.ab3@2176>     BNE 'l1
00020F3A <AmiBlitz3.ab3@2177>     MOVE.l (a7)+,a0
00020F3C <AmiBlitz3.ab3@2180>     MOVE.l (a0),d0
00020F40 <AmiBlitz3.ab3@2181> BRA 'lr1
00020F48 <AmiBlitz3.ab3@2184>   BTST #$7,make_smallestcode
00020F4C <AmiBlitz3.ab3@2185>   BEQ.b JL_0_3844                                           ;optimize for executable
00020F52 <AmiBlitz3.ab3@2186>   CLR.l morememadd
00020F56 <AmiBlitz3.ab3@2188>   BSR.w alloxadj
00020F5A <AmiBlitz3.ab3@2189>   BEQ.w JL_0_388A
00020F5E <AmiBlitz3.ab3@2192>   BSR.w compileall
00020F64 <AmiBlitz3.ab3@2193>   ADDQ.w #1,pass
00020F6A <AmiBlitz3.ab3@2196>   MOVE.w dontwrite,D1
00020F6E <AmiBlitz3.ab3@2197>   BEQ.w JL_0_38A2
00020F72 <AmiBlitz3.ab3@2217> BRA.w JL_0_3896
00020F7A <AmiBlitz3.ab3@2228>   MOVE.w #$FFFF,anyerrs
00020F7E <AmiBlitz3.ab3@2229> BRA.w JL_0_38A2
00020F82 <AmiBlitz3.ab3@2232>   BSR.w alloxinc                                          ;increase all by 50%
00020F86 <AmiBlitz3.ab3@2233>   BEQ.w Aclearallvars
00020F8A <AmiBlitz3.ab3@2234> BRA.w JL_0_3824
00020F8E <AmiBlitz3.ab3@2246> BRA.w JL_0_38A6                                            ;???????
00020F94 <AmiBlitz3.ab3@2250>   JSR freereps
00020F9A <AmiBlitz3.ab3@2251>   JSR freesels
00020FA0 <AmiBlitz3.ab3@2252>   JSR AJL_0_6DF2
00020FA6 <AmiBlitz3.ab3@2253>   JSR freepends
00020FAC <AmiBlitz3.ab3@2254>   JSR freeifs
00020FB2 <AmiBlitz3.ab3@2255>   JSR AJL_0_C188
00020FB8 <AmiBlitz3.ab3@2256>   JSR AJL_0_C15C
00020FBE <AmiBlitz3.ab3@2257>   JSR AJL_0_D9BC
00020FC4 <AmiBlitz3.ab3@2260> JMP cleartemplabel
00020FC8 <AmiBlitz3.ab3@2263> mempool2:  Dc.l 0
00020FCE <AmiBlitz3.ab3@2267>   JSR Aclearcache
00020FD6 <AmiBlitz3.ab3@2269>   BTST #$7,use_debugger
00020FDA <AmiBlitz3.ab3@2271>   BNE 'debugon
00020FE0 <AmiBlitz3.ab3@2272>   CLR.w debugmode
00020FE4 <AmiBlitz3.ab3@2273> BRA.b 'debugoff
00020FEA <AmiBlitz3.ab3@2276>   SNE debugmode
00021022 <AmiBlitz3.ab3@2281>   !ComData_SetB{comByte_DebugMode,debugmode}
00021028 <AmiBlitz3.ab3@2283>   LEA regtable,a0
0002102A <AmiBlitz3.ab3@2284>   MOVEQ #10,d0
0002102C <AmiBlitz3.ab3@2287>     CLR.l (a0)+
00021030 <AmiBlitz3.ab3@2288>   DBF d0,'l1
00021036 <AmiBlitz3.ab3@2290>   LEA includetemp2,a0
00021038 <AmiBlitz3.ab3@2291>   CLR.b (a0)
00021042 <AmiBlitz3.ab3@2292>   MOVE.l #7,maxregs
00021048 <AmiBlitz3.ab3@2293>   CLR.w debugnest
0002104E <AmiBlitz3.ab3@2294>   CLR.b funcparloop
00021054 <AmiBlitz3.ab3@2295>   CLR.b nostringopt
0002105A <AmiBlitz3.ab3@2296>   CLR.b firsttime
00021060 <AmiBlitz3.ab3@2297>   CLR.l lastdestpointer
00021066 <AmiBlitz3.ab3@2298>   CLR.l lastwritedat
0002106C <AmiBlitz3.ab3@2299>   CLR.l prevwritedat
00021072 <AmiBlitz3.ab3@2300>   CLR.l includeline
00021078 <AmiBlitz3.ab3@2301>   CLR.b incnif
0002107E <AmiBlitz3.ab3@2302>   CLR.b formode
00021084 <AmiBlitz3.ab3@2303>   CLR.b funccall
0002108A <AmiBlitz3.ab3@2304>   CLR.w objectcount
00021090 <AmiBlitz3.ab3@2305>   CLR.b resdisable
00021096 <AmiBlitz3.ab3@2306>   CLR.b developobject
0002109C <AmiBlitz3.ab3@2307>   CLR.b optistring
000210A2 <AmiBlitz3.ab3@2308>   CLR.b optistring2
000210A8 <AmiBlitz3.ab3@2309>   CLR.b optiarray
000210AE <AmiBlitz3.ab3@2310>   CLR.b quickadd
000210B4 <AmiBlitz3.ab3@2311>   CLR.w newmode
000210BA <AmiBlitz3.ab3@2312>   CLR.w mode
000210C0 <AmiBlitz3.ab3@2313>   CLR.w string1
000210C6 <AmiBlitz3.ab3@2314>   CLR.b fastfunc
000210CC <AmiBlitz3.ab3@2315>   CLR.w load_var_size
000210D2 <AmiBlitz3.ab3@2316>   CLR.w load_var_reg
000210D8 <AmiBlitz3.ab3@2317>   CLR.l load_var_addr
000210DE <AmiBlitz3.ab3@2318>   CLR.w imm_size
000210E4 <AmiBlitz3.ab3@2319>   CLR.w imm_reg
000210EA <AmiBlitz3.ab3@2320>   CLR.l imm_addr
000210F0 <AmiBlitz3.ab3@2321>   CLR.b _dcb
000210F6 <AmiBlitz3.ab3@2322>   CLR.l nohunkoffset
000210FC <AmiBlitz3.ab3@2323>   CLR.b peekaddrsize
00021102 <AmiBlitz3.ab3@2324>   CLR.b typecheck
00021108 <AmiBlitz3.ab3@2325>   CLR.b declare2
0002110E <AmiBlitz3.ab3@2326>   CLR.b declare
00021114 <AmiBlitz3.ab3@2327>   CLR.l myoline                                          ;check
0002111A <AmiBlitz3.ab3@2328>   CLR.l myline                                          ;check
00021120 <AmiBlitz3.ab3@2329>   CLR.b newvariable
00021126 <AmiBlitz3.ab3@2330>   CLR.b saved0
0002112C <AmiBlitz3.ab3@2331>   CLR.l bsssize
00021132 <AmiBlitz3.ab3@2332>   CLR.l chipsize
00021138 <AmiBlitz3.ab3@2333>   CLR.b infunctioncode
0002113E <AmiBlitz3.ab3@2334>   CLR.l errorcounter
00021148 <AmiBlitz3.ab3@2335>   MOVE.l #-1,bssstart
00021152 <AmiBlitz3.ab3@2336>   MOVE.l #-1,bssend
0002115C <AmiBlitz3.ab3@2337>   MOVE.l #-1,chipstart
00021166 <AmiBlitz3.ab3@2338>   MOVE.l #-1,chipend
0002116E <AmiBlitz3.ab3@2339>   MOVE.w #0,bssmode
00021174 <AmiBlitz3.ab3@2340>   CLR.w a2offset
0002117A <AmiBlitz3.ab3@2341>   CLR.w fast
00021180 <AmiBlitz3.ab3@2342>   CLR.w fpu
00021186 <AmiBlitz3.ab3@2343>   CLR.b iee
0002118C <AmiBlitz3.ab3@2344>   CLR.w newsyntax
00021190 <AmiBlitz3.ab3@2345>   BSR.w JL_0_38A6
00021196 <AmiBlitz3.ab3@2346>   JSR AJL_0_7962
0002119C <AmiBlitz3.ab3@2347>   JSR frallvars
000211A2 <AmiBlitz3.ab3@2348>   JSR fralltypes
000211A8 <AmiBlitz3.ab3@2349>   JSR freemacs
000211AE <AmiBlitz3.ab3@2350>   JSR clearfunctionlist
000211B4 <AmiBlitz3.ab3@2351>   TST.w pass
000211BA <AmiBlitz3.ab3@2353>   JSR clearlabels
000211C0 <AmiBlitz3.ab3@2354>   JSR clearhash
000211C6 <AmiBlitz3.ab3@2357>   LEA devo,a0
000211CA <AmiBlitz3.ab3@2358>   MOVEM.l a0-a6/d0-d7,-(a7)
000211D0 <AmiBlitz3.ab3@2359>   LEA ptr_parameterstore,a1
000211D2 <AmiBlitz3.ab3@2362>     MOVE.b (a0)+,(a1)+
000211D6 <AmiBlitz3.ab3@2363>   BNE 'l1b
000211D8 <AmiBlitz3.ab3@2364>   MOVEQ #13,d2
000211DE <AmiBlitz3.ab3@2365>   JSR findlabel2
000211E2 <AmiBlitz3.ab3@2366>   BNE 'd
000211E6 <AmiBlitz3.ab3@2367>   CLR.l 8(a2)
000211EA <AmiBlitz3.ab3@2370>   MOVEM.l (a7)+,a0-a6/d0-d7
00021214 <AmiBlitz3.ab3@2371>   !basic
00021288 <AmiBlitz3.ab3@2372>   dos_Delete{dos_AddPart{my_systemdir$,"ab_compileerror.txt"}}
000212A6 <AmiBlitz3.ab3@2373>   !asm
000212AC <AmiBlitz3.ab3@2374>   CLR.b returncode
000212B2 <AmiBlitz3.ab3@2375> JMP freeprocvs
000212B8 <AmiBlitz3.ab3@2379>   MOVE.l #bssstore-labelhash,d0
000212BA <AmiBlitz3.ab3@2380>   ASR.l #2,d0
000212C0 <AmiBlitz3.ab3@2381>   LEA labelhash,a0
000212C2 <AmiBlitz3.ab3@2384>     CLR.l (a0)+
000212C4 <AmiBlitz3.ab3@2385>     SUBQ.l #1,d0
000212C8 <AmiBlitz3.ab3@2386>   BNE.s 'l10
000212CE <AmiBlitz3.ab3@2388>   LEA labelbase,a1
000212D0 <AmiBlitz3.ab3@2389>   MOVE.l (a1),d0
000212D4 <AmiBlitz3.ab3@2390>   BEQ 'l11
000212D6 <AmiBlitz3.ab3@2393>     MOVE.l d0,a1
000212DA <AmiBlitz3.ab3@2394>     TST.l 4(a1)
000212DE <AmiBlitz3.ab3@2395>     BEQ 'l29
000212E2 <AmiBlitz3.ab3@2396>     LEA $13(a1),a0
000212E4 <AmiBlitz3.ab3@2397>     MOVEQ #0,d0
000212E6 <AmiBlitz3.ab3@2398>     MOVEQ #0,d1
000212E8 <AmiBlitz3.ab3@2401>       MOVE.b (a0)+,d1
000212EC <AmiBlitz3.ab3@2402>       BEQ 'l12
000212F2 <AmiBlitz3.ab3@2403>       !hashalgo
000212F6 <AmiBlitz3.ab3@2404> BRA 'l13
000212FC <AmiBlitz3.ab3@2407>     LEA labelhash,a0
00021302 <AmiBlitz3.ab3@2408>     AND.l #hashsize,d0
00021304 <AmiBlitz3.ab3@2409>      ASL.l #2,d0
00021308 <AmiBlitz3.ab3@2410>     MOVE.l 0(a0,d0),d1                                     ;*4
0002130C <AmiBlitz3.ab3@2411>     MOVE.l d1,$c(a1)
00021310 <AmiBlitz3.ab3@2412>     MOVE.l a1,0(a0,d0)
00021312 <AmiBlitz3.ab3@2415>     MOVE.l (a1),d0
00021316 <AmiBlitz3.ab3@2416>   BNE 'l21
00021318 <AmiBlitz3.ab3@2419> RTS
0002131E <AmiBlitz3.ab3@2423>   MOVEA.l lastrestype,A0
00021320 <AmiBlitz3.ab3@2424>   MOVEA.l (A0),A2
00021322 <AmiBlitz3.ab3@2425>   CLR.l (A0)
00021328 <AmiBlitz3.ab3@2426> JMP freetypes
0002132E <AmiBlitz3.ab3@2430>   MOVEA.l varbase,A3
00021334 <AmiBlitz3.ab3@2431>   CLR.l varbase
00021338 <AmiBlitz3.ab3@2434>   CMPA.w #$0,A3
0002133C <AmiBlitz3.ab3@2435>   BEQ.w 'l20
0002133E <AmiBlitz3.ab3@2436>   MOVEA.l A3,A1
00021340 <AmiBlitz3.ab3@2437>   MOVEA.l (A3),A3
00021342 <AmiBlitz3.ab3@2438>   MOVEQ.l #$00,D0
00021346 <AmiBlitz3.ab3@2439>   MOVE.b $E+4(A1),D0
0002134C <AmiBlitz3.ab3@2440>   MOVEA.l _execbase,A6
00021352 <AmiBlitz3.ab3@2441>   MOVE.l mempool2,a0
00021356 <AmiBlitz3.ab3@2442>   JSR _FreePooled(A6)
0002135A <AmiBlitz3.ab3@2443> BRA.w 'l10
0002135C <AmiBlitz3.ab3@2446> RTS
00021362 <AmiBlitz3.ab3@2451>   LEA firstiff,A2
00021364 <AmiBlitz3.ab3@2452>   MOVEQ.l #$0E,D2
0002136A <AmiBlitz3.ab3@2453> JMP freeslist
0002136C <AmiBlitz3.ab3@2459> progressbar_width:   Dc.w 100                              ;riteend org source ;right end of include strip
0002136E <AmiBlitz3.ab3@2460> inmacro:             Ds.w 1                                ;macmask org source ;macro found
00021374 <AmiBlitz3.ab3@2464>   CLR.w inmacro
0002137A <AmiBlitz3.ab3@2465>   ADDQ.l #1,globallinecount
00021380 <AmiBlitz3.ab3@2466>   CLR.b nostringopt
00021384 <AmiBlitz3.ab3@2467>   BSR.w JL_0_3CA4
0002138A <AmiBlitz3.ab3@2468>   CLR.w instringon
00021390 <AmiBlitz3.ab3@2471>   TST.w ininclude
00021394 <AmiBlitz3.ab3@2472>   BEQ.w JL_0_39B0
0002139A <AmiBlitz3.ab3@2473>   ADDQ.l #1,includeline
000213A0 <AmiBlitz3.ab3@2474>     JSR ab3_WriteDebugFile
000213A6 <AmiBlitz3.ab3@2475>   JSR AJL_0_C09E
000213AA <AmiBlitz3.ab3@2476>   BEQ.w JL_0_39B0
000213B0 <AmiBlitz3.ab3@2477>   MOVE.w ininclude,D0
000213B4 <AmiBlitz3.ab3@2478>   CMP.w #$4,D0
000213B8 <AmiBlitz3.ab3@2479>   BCC.w JL_0_39AC
000213BA <AmiBlitz3.ab3@2480>   ADD.w D0,D0
000213C0 <AmiBlitz3.ab3@2481>   LEA progress_per_line,A0
000213C4 <AmiBlitz3.ab3@2482>   MOVE.w $0(A0,D0.W),D2
000213C8 <AmiBlitz3.ab3@2483>   CMP.w progressbar_width(PC),D2
000213CC <AmiBlitz3.ab3@2484>   BCC.w JL_0_39AC
000213D0 <AmiBlitz3.ab3@2485>   ADDQ.w #1,$0(A0,D0.W)
000213D2 <AmiBlitz3.ab3@2486>   LSR.w #1,D0
000213D4 <AmiBlitz3.ab3@2487>   MOVE.l d0,d1
000213D6 <AmiBlitz3.ab3@2488>   EXT.l d1
000213D8 <AmiBlitz3.ab3@2489>   MOVE.l d2,d0
000213DA <AmiBlitz3.ab3@2490>   EXT.l d0                                                 ;d0=x,d1=y
000213E0 <AmiBlitz3.ab3@2492>   JSR update_progressbar
000213E2 <AmiBlitz3.ab3@2495>   MOVEQ.l #-$01,D0
000213E4 <AmiBlitz3.ab3@2496> RTS
000213EA <AmiBlitz3.ab3@2500>   MOVE.l titleat,D0
000213EC <AmiBlitz3.ab3@2501>   MOVEQ.l #$00,D1
000213F2 <AmiBlitz3.ab3@2502>   MOVE.w progress_per_line,D1
000213F4 <AmiBlitz3.ab3@2503>   ADD.l D1,D0
000213F6 <AmiBlitz3.ab3@2504>   MOVE.l D0,D1
000213F8 <AmiBlitz3.ab3@2505>   SWAP D0
000213FE <AmiBlitz3.ab3@2506>   CMP.w titleat,D0
00021402 <AmiBlitz3.ab3@2507>    BEQ.w JL_0_39E4
00021404 <AmiBlitz3.ab3@2511>   EXT.l d0
00021406 <AmiBlitz3.ab3@2512>   MOVE.l d1,-(a7)
0002140E <AmiBlitz3.ab3@2515>   MOVE.w #1,compiler_job                                    ; set to compiler job 1 (=build executable)
00021414 <AmiBlitz3.ab3@2516>   JSR update_progressbar
0002141C <AmiBlitz3.ab3@2517>   MOVE.w #0,compiler_job                                    ; set to compiler job 0 (=compile source)
0002141E <AmiBlitz3.ab3@2521>   MOVE.l (a7)+,d1
00021424 <AmiBlitz3.ab3@2524>   MOVE.l D1,titleat
0002142A <AmiBlitz3.ab3@2525>   ADDQ.l #1,linenumat
00021430 <AmiBlitz3.ab3@2526>   CLR.w linedone
00021436 <AmiBlitz3.ab3@2527>   JSR ab3_WriteDebugFile  ; write to DebugFile every main source line
0002143C <AmiBlitz3.ab3@2529>   SUBQ.l #1,numlines2
00021440 <AmiBlitz3.ab3@2530>    BEQ.w JL_0_3A12
00021446 <AmiBlitz3.ab3@2531>   MOVEA.l sourceline,A0
00021448 <AmiBlitz3.ab3@2532>   MOVEA.l (A0),A0
0002144E <AmiBlitz3.ab3@2533>   MOVE.l A0,sourceline
00021452 <AmiBlitz3.ab3@2534>   LEA $9(A0),A5
00021454 <AmiBlitz3.ab3@2537> RTS
00021456 <AmiBlitz3.ab3@2541>   MOVE.w D0,-(A7)
00021458 <AmiBlitz3.ab3@2542>   MOVEQ.l #$03,D0
0002145A <AmiBlitz3.ab3@2545>     MOVE.w D1,D2
0002145E <AmiBlitz3.ab3@2546>     ANDI.w #$F,D2
00021462 <AmiBlitz3.ab3@2547>     ADDI.w #$30,D2
00021466 <AmiBlitz3.ab3@2548>     CMP.w #$3A,D2
0002146A <AmiBlitz3.ab3@2549>      BCS.w JL_0_3A2C
0002146C <AmiBlitz3.ab3@2550>     ADDQ.w #7,D2
00021470 <AmiBlitz3.ab3@2553>     MOVE.b D2,$0(A0,D0.W)
00021472 <AmiBlitz3.ab3@2554>     LSR.w #4,D1
00021476 <AmiBlitz3.ab3@2555>   DBF D0,JL_0_3A18
00021478 <AmiBlitz3.ab3@2557>   MOVE.w (A7)+,D0
0002147A <AmiBlitz3.ab3@2558> RTS
00021480 <AmiBlitz3.ab3@2568>   MOVE.w skipcode,D1
00021484 <AmiBlitz3.ab3@2569>   BNE.w JL_0_3A46
00021486 <AmiBlitz3.ab3@2570> RTS
00021488 <AmiBlitz3.ab3@2573>   MOVE.l A5,-(A7)
0002148A <AmiBlitz3.ab3@2574>   MOVEQ.l #$3A,D1                                          ;':'
0002148C <AmiBlitz3.ab3@2575>   MOVEQ.l #$21,D2                                          ;'!'
0002148E <AmiBlitz3.ab3@2576>   MOVEQ.l #$3B,D3                                          ;';'
00021490 <AmiBlitz3.ab3@2577>   MOVEQ.l #$22,D4                                          ;'"'
00021492 <AmiBlitz3.ab3@2580>   MOVE.b (A5)+,D0
00021496 <AmiBlitz3.ab3@2581>    BEQ.w JL_0_3CA0
0002149A <AmiBlitz3.ab3@2582>    BPL.w JL_0_3A60
0002149C <AmiBlitz3.ab3@2583>   MOVE.b (A5)+,D0
000214A0 <AmiBlitz3.ab3@2584> BRA.w JL_0_3A50
000214A2 <AmiBlitz3.ab3@2587>   CMP.b D4,D0
000214A6 <AmiBlitz3.ab3@2588>    BNE.w JL_0_3A82
000214A8 <AmiBlitz3.ab3@2591>   MOVE.b (A5)+,D0
000214AC <AmiBlitz3.ab3@2592>    BEQ.w notqerr
000214B0 <AmiBlitz3.ab3@2598>   CMP.b #$22,D0
000214B4 <AmiBlitz3.ab3@2599>    BNE.w JL_0_3A66
000214B8 <AmiBlitz3.ab3@2600> BRA.w JL_0_3A50
000214BA <AmiBlitz3.ab3@2603>   CMP.b D1,D0
000214BE <AmiBlitz3.ab3@2604>    BEQ.w JL_0_3CA0
000214C0 <AmiBlitz3.ab3@2605>   CMP.b D3,D0
000214C4 <AmiBlitz3.ab3@2606>    BEQ.w JL_0_3CA0
000214C6 <AmiBlitz3.ab3@2609>   CMP.b D2,D0
000214CA <AmiBlitz3.ab3@2610>    BNE.w JL_0_3A50
000214D2 <AmiBlitz3.ab3@2611>   MOVE.w #$FFFF,inmacro                                    ; no runtimecheck in macros
000214D4 <AmiBlitz3.ab3@2612>   MOVEA.l A5,A3
000214DA <AmiBlitz3.ab3@2613>    JSR getparameter2
000214DE <AmiBlitz3.ab3@2614>    BNE.w JL_0_3AAC
000214E4 <AmiBlitz3.ab3@2615> JMP syntaxerr
000214EE <AmiBlitz3.ab3@2620>    MOVE.w oldqflag,instringon
000214F4 <AmiBlitz3.ab3@2621>   MOVEA.l lastsourcepos,A5
000214FA <AmiBlitz3.ab3@2622>    JSR findmac                                             ;find macro
000214FE <AmiBlitz3.ab3@2623>    BEQ.w JL_0_3ABE
00021504 <AmiBlitz3.ab3@2624> JMP nomacerr
0002150A <AmiBlitz3.ab3@2627>   TST.b debugmode
0002150E <AmiBlitz3.ab3@2628>   BEQ 'sk1
00021512 <AmiBlitz3.ab3@2629>   MOVE.w #$4e71,d1
00021518 <AmiBlitz3.ab3@2630>   JSR writeword
0002151A <AmiBlitz3.ab3@2631>   MOVE.l a5,-(a7)
0002151C <AmiBlitz3.ab3@2632>   MOVE.l a3,a5
0002151E <AmiBlitz3.ab3@2633>   SUBQ.l #1,a5
00021526 <AmiBlitz3.ab3@2634>   MOVE.w #$0,inmacro
0002152A <AmiBlitz3.ab3@2635>   BSR debugstuffa
00021532 <AmiBlitz3.ab3@2636>   MOVE.w #$FFFF,inmacro
00021534 <AmiBlitz3.ab3@2637>   MOVE.l (a7)+,a5
00021538 <AmiBlitz3.ab3@2638>   MOVE.w #$4e71,d1
0002153E <AmiBlitz3.ab3@2639>   JSR writeword
00021540 <AmiBlitz3.ab3@2642>   MOVEA.l A5,A4
00021544 <AmiBlitz3.ab3@2645>    CMP.b #" ",(a4)+
00021548 <AmiBlitz3.ab3@2646>     BEQ 'l5a
0002154A <AmiBlitz3.ab3@2647>      SUBQ.l#1,a4
0002154E <AmiBlitz3.ab3@2648>      CMP.b #",",(a4)
00021552 <AmiBlitz3.ab3@2649>     BEQ JL_0_3AEA
00021554 <AmiBlitz3.ab3@2652>   MOVEQ.l #$00,D4
0002155A <AmiBlitz3.ab3@2653>   TST.b newsyntax
0002155E <AmiBlitz3.ab3@2654>   BEQ 'l10b
00021562 <AmiBlitz3.ab3@2655>   MOVEM.l a0/d0,-(a7)
00021566 <AmiBlitz3.ab3@2656>   MOVE.l 4(a2),a0
0002156A <AmiBlitz3.ab3@2657>   MOVE.w 8(a2),d0
0002156E <AmiBlitz3.ab3@2660>   CMP.b #"`",(a0)+
00021572 <AmiBlitz3.ab3@2661>   BEQ 'x1
00021574 <AmiBlitz3.ab3@2662>   SUBQ.w #1,d0
00021578 <AmiBlitz3.ab3@2663>   BNE 'x2
0002157C <AmiBlitz3.ab3@2664> BRA 'x3
00021580 <AmiBlitz3.ab3@2667>   MOVEM.l (a7)+,a0/d0
00021584 <AmiBlitz3.ab3@2668> BRA 'l10
00021588 <AmiBlitz3.ab3@2671>   MOVEM.l (a7)+,a0/d0
0002158C <AmiBlitz3.ab3@2672> BRA JL_0_3AEA
00021590 <AmiBlitz3.ab3@2675>   CMPI.b #"{",(A4)
00021594 <AmiBlitz3.ab3@2676>    BNE.w JL_0_3AEA
00021596 <AmiBlitz3.ab3@2680>   ADDQ.l #1,a4
0002159A <AmiBlitz3.ab3@2683>     CMP.b #" ",(a4)
0002159E <AmiBlitz3.ab3@2684>     BEQ 'l5
000215A2 <AmiBlitz3.ab3@2685>     MOVEM.l a0/d0,-(a7)
000215A8 <AmiBlitz3.ab3@2686>     CLR.b exmac
000215AE <AmiBlitz3.ab3@2687>     LEA chartab,a0
000215B0 <AmiBlitz3.ab3@2688>     MOVEQ #0,d0
000215B2 <AmiBlitz3.ab3@2689>     MOVE.b (a4),d0
000215B6 <AmiBlitz3.ab3@2690>     BMI 'm1
000215BA <AmiBlitz3.ab3@2691>     TST.b 0(a0,d0)
000215BE <AmiBlitz3.ab3@2692>     BEQ 'm1
000215C4 <AmiBlitz3.ab3@2693>     TST.b newsyntax
000215C8 <AmiBlitz3.ab3@2694>     BEQ 'ns1
000215CC <AmiBlitz3.ab3@2695>     CMP.b #"#",d0
000215D0 <AmiBlitz3.ab3@2696>     BEQ 'm1
000215D4 <AmiBlitz3.ab3@2697>     CMP.b #"$",d0
000215D8 <AmiBlitz3.ab3@2698>     BEQ 'm1
000215DC <AmiBlitz3.ab3@2699>     CMP.b #"-",d0
000215E0 <AmiBlitz3.ab3@2700>     BEQ 'm1
000215E4 <AmiBlitz3.ab3@2703>   CMP.b #",",d0
000215E8 <AmiBlitz3.ab3@2704>     BEQ 'm1
000215EC <AmiBlitz3.ab3@2705>     CMP.b #"{",d0
000215F0 <AmiBlitz3.ab3@2706>     BNE 'm1b
000215F2 <AmiBlitz3.ab3@2707>     ADDQ.l #1,a4
000215F6 <AmiBlitz3.ab3@2708> BRA 'm1
000215FC <AmiBlitz3.ab3@2711>   TST.b newsyntax
00021600 <AmiBlitz3.ab3@2712>     BEQ 'm1
00021608 <AmiBlitz3.ab3@2713>     MOVE.b #1,exmac
0002160C <AmiBlitz3.ab3@2716>   MOVEM.l (a7)+,a0/d0
00021612 <AmiBlitz3.ab3@2717>     TST.b exmac
00021616 <AmiBlitz3.ab3@2718>     BNE JL_0_3AEA
00021618 <AmiBlitz3.ab3@2725>   TST.b (a4)
0002161C <AmiBlitz3.ab3@2726>   BEQ JL_0_3AEA
00021622 <AmiBlitz3.ab3@2729>   MOVEA.l ptr_macrobuffer_begin,A0
00021624 <AmiBlitz3.ab3@2732>   ADDQ.w #1,D4
00021626 <AmiBlitz3.ab3@2733>   MOVE.l A4,(A0)
0002162A <AmiBlitz3.ab3@2734>   CLR.w 4(a0)
0002162E <AmiBlitz3.ab3@2735>    BSR.w JL_0_3CC6
00021630 <AmiBlitz3.ab3@2737>   ADDQ.l #4,a0
00021632 <AmiBlitz3.ab3@2741>   SUBQ.w #1,(a0)+
00021636 <AmiBlitz3.ab3@2742>   CMP.b #$7D,D0
0002163A <AmiBlitz3.ab3@2743>   BEQ 'l10
0002163C <AmiBlitz3.ab3@2744>   TST.b d0
00021640 <AmiBlitz3.ab3@2745>   BEQ 'l10
00021644 <AmiBlitz3.ab3@2746> BRA JL_0_3AD0
0002164A <AmiBlitz3.ab3@2750>   CLR.l sourceline3
0002164C <AmiBlitz3.ab3@2751>   MOVEA.l A4,A5
00021652 <AmiBlitz3.ab3@2754>   MOVE.w D4,numarg
00021658 <AmiBlitz3.ab3@2761>   MOVE.l #$01,D1
0002165E <AmiBlitz3.ab3@2762>   MOVEA.l _execbase,A6
00021664 <AmiBlitz3.ab3@2763>   MOVE.l mempool,a0
0002166A <AmiBlitz3.ab3@2764>   MOVE.l macrobuffer_size,D0
00021670 <AmiBlitz3.ab3@2765>   CMP.l #DEFAULT_MACROBUFFERSIZE,d0                          ; replaced with a constant tomsmart1
00021674 <AmiBlitz3.ab3@2766>   BGE 'l1m
0002167A <AmiBlitz3.ab3@2767>   MOVE.l #DEFAULT_MACROBUFFERSIZE,d0                         ; replaced with a constant tomsmart1
00021680 <AmiBlitz3.ab3@2768>   MOVE.l d0,macrobuffer_size
00021684 <AmiBlitz3.ab3@2771>   JSR _AllocPooled(a6)
0002168E <AmiBlitz3.ab3@2773>   MOVE.l myline,myoline
00021690 <AmiBlitz3.ab3@2776>   ADDQ.l #1,d0
00021696 <AmiBlitz3.ab3@2777>   MOVE.l D0,myline
00021698 <AmiBlitz3.ab3@2778>   MOVEA.l D0,A1
0002169E <AmiBlitz3.ab3@2779>   MOVE.b #":",-1(a1)
000216A0 <AmiBlitz3.ab3@2780>   MOVEA.l A1,A6
000216A6 <AmiBlitz3.ab3@2781>   ADDA.l macrobuffer_size,A6
000216A8 <AmiBlitz3.ab3@2782>   MOVEA.l (A7)+,A0
000216AA <AmiBlitz3.ab3@2785>   CMPA.l A6,A1
000216AE <AmiBlitz3.ab3@2786>    BCC.w mbovererr
000216B0 <AmiBlitz3.ab3@2787>   MOVE.b (A0)+,(a1)+
000216B2 <AmiBlitz3.ab3@2788>   CMPA.l A3,A0
000216B6 <AmiBlitz3.ab3@2789>    BCS.w JL_0_3B1E
000216B8 <AmiBlitz3.ab3@2790>   SUBQ.w #1,A1
000216BC <AmiBlitz3.ab3@2791>   MOVE.w $8(A2),D1
000216C0 <AmiBlitz3.ab3@2792>    BEQ.w JL_0_3C70
000216C8 <AmiBlitz3.ab3@2793>   MOVE.w $A(A2),macnum
000216CC <AmiBlitz3.ab3@2794>   ADDQ.w #1,$A(A2)
000216D0 <AmiBlitz3.ab3@2795>   MOVEA.l $4(A2),A2
000216D2 <AmiBlitz3.ab3@2796>   SUBQ.w #1,D1
000216D8 <AmiBlitz3.ab3@2797>   CLR.b firstmline
000216DA <AmiBlitz3.ab3@2800>     MOVEQ.l #$00,D0
000216DC <AmiBlitz3.ab3@2801>     MOVE.b (A2)+,D0
000216E2 <AmiBlitz3.ab3@2802>     TST.b firstmline
000216E6 <AmiBlitz3.ab3@2803>     BNE 'c1
000216EA <AmiBlitz3.ab3@2804>     CMP.b #$22,d0
000216EE <AmiBlitz3.ab3@2805>     BNE 's1
000216F6 <AmiBlitz3.ab3@2806>     MOVE.b #1,firstmline
000216FA <AmiBlitz3.ab3@2809>     CMP.b #":",d0
000216FE <AmiBlitz3.ab3@2810>     BNE 'm1
00021706 <AmiBlitz3.ab3@2811>     MOVE.b #1,firstmline
0002170A <AmiBlitz3.ab3@2814>     CMP.b #";",d0
0002170E <AmiBlitz3.ab3@2815>     BNE 'c1
00021710 <AmiBlitz3.ab3@2818>     SUBQ.w #1,d1                                           ;filter out comment
00021712 <AmiBlitz3.ab3@2819>     MOVE.b (a2)+,d0
00021718 <AmiBlitz3.ab3@2820>     CMP.w #":@",-1(a2)
0002171C <AmiBlitz3.ab3@2821>     BEQ 'c2
0002171E <AmiBlitz3.ab3@2822>     TST.w d1
00021722 <AmiBlitz3.ab3@2823>     BNE 'l1
00021726 <AmiBlitz3.ab3@2824>   BRA JL_0_3C6C
0002172C <AmiBlitz3.ab3@2827>     CMP.b #":",1(a2)
00021730 <AmiBlitz3.ab3@2828>       BNE 'l1
00021732 <AmiBlitz3.ab3@2829>       ADDQ #2,a2
00021734 <AmiBlitz3.ab3@2830>       SUBQ #3,d1
00021736 <AmiBlitz3.ab3@2831>       MOVE.b (a2)+,d0
0002173E <AmiBlitz3.ab3@2832>       MOVE.b #1,firstmline
00021742 <AmiBlitz3.ab3@2835>     CMP.b #"`",D0
00021746 <AmiBlitz3.ab3@2836>      BNE.w JL_0_3C56
00021748 <AmiBlitz3.ab3@2837>     SUBQ.w #1,D1
0002174A <AmiBlitz3.ab3@2838>     MOVE.b (A2)+,D0
0002174E <AmiBlitz3.ab3@2839>     CMP.w #$7B,D0
00021752 <AmiBlitz3.ab3@2840>      BEQ.w JL_0_3BB6
00021756 <AmiBlitz3.ab3@2841>     CMP.w #$40,D0
0002175A <AmiBlitz3.ab3@2842>      BNE.w JL_0_3B82
0002175C <AmiBlitz3.ab3@2843>     MOVEQ.l #$00,D2
00021762 <AmiBlitz3.ab3@2844>     MOVE.w macnum,D2
00021764 <AmiBlitz3.ab3@2845>     MOVEA.l A1,A0
00021766 <AmiBlitz3.ab3@2846>     MOVE.w D1,-(A7)
0002176C <AmiBlitz3.ab3@2847>      JSR makelong
0002176E <AmiBlitz3.ab3@2848>     MOVEA.l A0,A1
00021770 <AmiBlitz3.ab3@2849>     MOVE.w (A7)+,D1
00021774 <AmiBlitz3.ab3@2850>   BRA.w JL_0_3C6C
00021778 <AmiBlitz3.ab3@2853>     ORI.w #$20,D0
0002177C <AmiBlitz3.ab3@2854>     CMP.w #$7A,D0
00021780 <AmiBlitz3.ab3@2855>      BCS.w JL_0_3B94
00021786 <AmiBlitz3.ab3@2856>   JMP ilconsterr
0002178A <AmiBlitz3.ab3@2859>     SUBI.w #$30,D0
0002178E <AmiBlitz3.ab3@2860>     CMP.w #$A,D0
00021792 <AmiBlitz3.ab3@2861>      BCS.w JL_0_3BF2
00021796 <AmiBlitz3.ab3@2862>     SUBI.w #$27,D0
0002179A <AmiBlitz3.ab3@2863>     CMP.w #$A,D0
0002179E <AmiBlitz3.ab3@2864>      BCC.w JL_0_3BB2
000217A4 <AmiBlitz3.ab3@2865>   JMP ilconsterr
000217A8 <AmiBlitz3.ab3@2868>   BRA.w JL_0_3BF2
000217AA <AmiBlitz3.ab3@2871>     MOVE.l A5,-(A7)
000217AE <AmiBlitz3.ab3@2872>     MOVEM.l D1/A1-A2/A6,-(A7)
000217B0 <AmiBlitz3.ab3@2873>     MOVEA.l A2,A5
000217B6 <AmiBlitz3.ab3@2874>      JSR AJL_0_BF6E
000217BA <AmiBlitz3.ab3@2875>     CMP.w #$7D,D0
000217BE <AmiBlitz3.ab3@2876>      BEQ.w JL_0_3BD2
000217C4 <AmiBlitz3.ab3@2877>   JMP syntaxerr
000217C8 <AmiBlitz3.ab3@2880>     MOVEM.l (A7)+,D1/A1-A2/A6
000217CA <AmiBlitz3.ab3@2881>     MOVE.l A5,D2
000217CC <AmiBlitz3.ab3@2882>     SUB.l A2,D2
000217CE <AmiBlitz3.ab3@2883>     SUB.w D2,D1
000217D0 <AmiBlitz3.ab3@2884>     MOVEA.l A5,A2
000217D6 <AmiBlitz3.ab3@2885>     CLR.w instringon
000217D8 <AmiBlitz3.ab3@2886>     MOVEA.l (A7)+,A5
000217DA <AmiBlitz3.ab3@2887>     MOVE.l D3,D0
000217DE <AmiBlitz3.ab3@2888>     BPL.w JL_0_3BF2
000217E4 <AmiBlitz3.ab3@2889>   JMP ilconsterr
000217E6 <AmiBlitz3.ab3@2892>     SUBQ.w #1,D0
000217EA <AmiBlitz3.ab3@2893>      BPL.w JL_0_3C20
000217F0 <AmiBlitz3.ab3@2897>     MOVE.w numarg,D0
000217F4 <AmiBlitz3.ab3@2898>     DIVU #$A,D0
000217F8 <AmiBlitz3.ab3@2899>     ADDI.w #$30,D0
000217FA <AmiBlitz3.ab3@2900>     CMPA.l A6,A1
000217FE <AmiBlitz3.ab3@2901>      BCC.w mbovererr
00021800 <AmiBlitz3.ab3@2902>     MOVE.b D0,(A1)+
00021802 <AmiBlitz3.ab3@2903>     SWAP D0
00021806 <AmiBlitz3.ab3@2904>     ADDI.w #$30,D0
00021808 <AmiBlitz3.ab3@2905>     CMPA.l A6,A1
0002180C <AmiBlitz3.ab3@2906>      BCC.w mbovererr
0002180E <AmiBlitz3.ab3@2907>     MOVE.b D0,(A1)+
00021812 <AmiBlitz3.ab3@2908>   BRA.w JL_0_3C6C
00021818 <AmiBlitz3.ab3@2914>     CMP.w numarg,D0
0002181C <AmiBlitz3.ab3@2915>      BCC.w JL_0_3C6C
0002181E <AmiBlitz3.ab3@2916>     LSL.w #1,D0
00021820 <AmiBlitz3.ab3@2917>     MOVE.w D0,D4
00021822 <AmiBlitz3.ab3@2918>     LSL.w #1,D0
00021824 <AmiBlitz3.ab3@2919>     ADD.w D4,D0
0002182A <AmiBlitz3.ab3@2920>     MOVEA.l ptr_macrobuffer_begin,A0
0002182C <AmiBlitz3.ab3@2921>     ADDA.w D0,A0
00021830 <AmiBlitz3.ab3@2922>     MOVE.w $4(A0),D4
00021834 <AmiBlitz3.ab3@2923>      BEQ.w JL_0_3C6C
00021836 <AmiBlitz3.ab3@2924>     MOVEA.l (A0),A0
00021838 <AmiBlitz3.ab3@2925>     SUBQ.w #1,D4
0002183A <AmiBlitz3.ab3@2928>       CMPA.l A6,A1
0002183E <AmiBlitz3.ab3@2929>        BCC.w mbovererr
00021842 <AmiBlitz3.ab3@2930>       CMP.w #"@@",(a0)
00021846 <AmiBlitz3.ab3@2931>        BNE 'l10
0002184C <AmiBlitz3.ab3@2932>       TST.w ininclude
00021850 <AmiBlitz3.ab3@2933>        BNE errorjoin
00021856 <AmiBlitz3.ab3@2936>       MOVE.l sourceline,a0
00021858 <AmiBlitz3.ab3@2937>       MOVE.l (a0),a0
0002185E <AmiBlitz3.ab3@2938>       CMP.l #0,a0
00021862 <AmiBlitz3.ab3@2939>       BNE 'l11
00021864 <AmiBlitz3.ab3@2940>       MOVEQ #0,d0
0002186A <AmiBlitz3.ab3@2941>       JSR error
00021870 <AmiBlitz3.ab3@2944>       MOVE.l a0,sourceline
00021876 <AmiBlitz3.ab3@2945>       ADDQ.l #1,linenumat
0002187A <AmiBlitz3.ab3@2946>       LEA 9(a0),a0
0002187C <AmiBlitz3.ab3@2947>       MOVE.l a0,-(a7)
00021880 <AmiBlitz3.ab3@2950>       CMP.b #" ",(a0)+
00021884 <AmiBlitz3.ab3@2951>        BEQ 'l110
0002188A <AmiBlitz3.ab3@2952>       CMP.b #";",-1(a0)
0002188C <AmiBlitz3.ab3@2953>       MOVE.l (a7)+,a0
00021890 <AmiBlitz3.ab3@2954>        BEQ 'l111
00021892 <AmiBlitz3.ab3@2955>       SUBQ.l #1,d4
00021894 <AmiBlitz3.ab3@2958>       MOVE.b (A0)+,(A1)+
00021898 <AmiBlitz3.ab3@2959>     DBF D4,JL_0_3C46
0002189C <AmiBlitz3.ab3@2961>   BRA.w JL_0_3C6C
0002189E <AmiBlitz3.ab3@2964>     CMPA.l A6,A1
000218A2 <AmiBlitz3.ab3@2965>      BCC.w mbovererr
000218A4 <AmiBlitz3.ab3@2966>     MOVE.b D0,(A1)+
000218A8 <AmiBlitz3.ab3@2967>      BPL.w JL_0_3C6C
000218AA <AmiBlitz3.ab3@2968>     CMPA.l A6,A1
000218AE <AmiBlitz3.ab3@2969>      BCC.w mbovererr
000218B0 <AmiBlitz3.ab3@2970>     MOVE.b (A2)+,(A1)+
000218B2 <AmiBlitz3.ab3@2971>     SUBQ.w #1,D1
000218B6 <AmiBlitz3.ab3@2974>   DBF D1,JL_0_3B48
000218B8 <AmiBlitz3.ab3@2984>   CMPA.l A6,A1
000218BC <AmiBlitz3.ab3@2985>    BCC.w mbovererr
000218BE <AmiBlitz3.ab3@2986>   MOVE.b (A5)+,(A1)+
000218C2 <AmiBlitz3.ab3@2987>    BNE.w JL_0_3C70
000218C8 <AmiBlitz3.ab3@2988>   MOVEA.l myline,A5
000218CE <AmiBlitz3.ab3@2989>   MOVE.l myoline,D0
000218D2 <AmiBlitz3.ab3@2990>    BEQ.w JL_0_3C9C
000218D4 <AmiBlitz3.ab3@2991>   SUBQ.l #1,d0
000218D6 <AmiBlitz3.ab3@2992>   MOVEA.l D0,A1
000218DC <AmiBlitz3.ab3@2993>   MOVE.l macrobuffer_size,D0
000218E2 <AmiBlitz3.ab3@2994>   MOVEA.l _execbase,A6
000218E8 <AmiBlitz3.ab3@2995>   MOVE.l mempool,a0
000218EC <AmiBlitz3.ab3@2996>   JSR _FreePooled(A6)
000218F0 <AmiBlitz3.ab3@2999> BRA.w JL_0_3A46
000218F2 <AmiBlitz3.ab3@3002>   MOVEA.l (A7)+,A5
000218F4 <AmiBlitz3.ab3@3003> RTS
000218FA <AmiBlitz3.ab3@3007>   MOVE.l myline,D0
000218FE <AmiBlitz3.ab3@3008>   BEQ.w JL_0_3CC4
00021900 <AmiBlitz3.ab3@3009>   SUBQ.l #1,d0
00021906 <AmiBlitz3.ab3@3010>   CLR.l myline
00021908 <AmiBlitz3.ab3@3011>   MOVEA.l D0,A1
0002190E <AmiBlitz3.ab3@3012>   MOVE.l macrobuffer_size,D0
00021914 <AmiBlitz3.ab3@3013>   MOVEA.l _execbase,A6
0002191A <AmiBlitz3.ab3@3014>   MOVE.l mempool,a0
0002191E <AmiBlitz3.ab3@3015> JMP _FreePooled(A6)
00021920 <AmiBlitz3.ab3@3018> RTS
00021922 <AmiBlitz3.ab3@3022>   MOVEQ.l #$00,D2
00021926 <AmiBlitz3.ab3@3025>   ADDQ.w #1,4(a0)
00021928 <AmiBlitz3.ab3@3026>    MOVE.b (A4)+,D0
0002192C <AmiBlitz3.ab3@3028>    BEQ exit1
00021930 <AmiBlitz3.ab3@3029>    BPL.w JL_0_3CD8
00021934 <AmiBlitz3.ab3@3030>   ADDQ.w #1,4(a0)
00021936 <AmiBlitz3.ab3@3031>   ADDQ.w #1,A4
0002193A <AmiBlitz3.ab3@3032> BRA.w JL_0_3CC8
00021940 <AmiBlitz3.ab3@3035>    TST.w instringon
00021944 <AmiBlitz3.ab3@3036>    BNE 'lnom
00021948 <AmiBlitz3.ab3@3037>    CMP.b #";",d0
0002194C <AmiBlitz3.ab3@3038>    BEQ exit2
00021950 <AmiBlitz3.ab3@3039>    CMP.b #":",d0
00021954 <AmiBlitz3.ab3@3040>    BEQ exit2
00021958 <AmiBlitz3.ab3@3043>   CMP.b #$22,D0
0002195C <AmiBlitz3.ab3@3044>    BNE.w JL_0_3CEA
00021962 <AmiBlitz3.ab3@3045>   NOT.w instringon
00021966 <AmiBlitz3.ab3@3046> BRA.w JL_0_3CC8
0002196C <AmiBlitz3.ab3@3050>   TST.w instringon
00021970 <AmiBlitz3.ab3@3051>    BNE.w JL_0_3CC8
00021974 <AmiBlitz3.ab3@3052>    CMP.b #"@",d0
00021978 <AmiBlitz3.ab3@3053>    BNE 'l10
0002197C <AmiBlitz3.ab3@3054>    CMP.b #"@",(a4)
00021980 <AmiBlitz3.ab3@3055>    BNE 'l10
00021986 <AmiBlitz3.ab3@3056>    TST.w ininclude
0002198A <AmiBlitz3.ab3@3057>    BNE errorjoin
00021990 <AmiBlitz3.ab3@3058>    MOVE.l sourceline3,a4
00021996 <AmiBlitz3.ab3@3059>    CMP.l #0,a4
0002199A <AmiBlitz3.ab3@3060>    BNE 'l11
000219A0 <AmiBlitz3.ab3@3061>    MOVE.l sourceline,a4
000219A2 <AmiBlitz3.ab3@3064>   MOVE.l (a4),a4
000219A8 <AmiBlitz3.ab3@3065>       CMP.l #0,a4
000219AC <AmiBlitz3.ab3@3066>       BNE 'l12
000219AE <AmiBlitz3.ab3@3067>       MOVEQ #0,d0
000219B4 <AmiBlitz3.ab3@3068>       JSR error
000219BA <AmiBlitz3.ab3@3071>    MOVE.l a4,sourceline3
000219BE <AmiBlitz3.ab3@3072>    LEA 9(a4),a4
000219C0 <AmiBlitz3.ab3@3073>    MOVEQ #",",d0
000219C4 <AmiBlitz3.ab3@3076>   CMP.b #$2C,D0
000219C8 <AmiBlitz3.ab3@3077>    BNE.w JL_0_3D06
000219CA <AmiBlitz3.ab3@3078>   TST.w D2
000219CE <AmiBlitz3.ab3@3079>    BEQ.w JL_0_3D30
000219D2 <AmiBlitz3.ab3@3080> BRA.w JL_0_3CC8
000219D6 <AmiBlitz3.ab3@3084>    CMP.b #$7B,D0                                           ;"{"
000219DA <AmiBlitz3.ab3@3085>    BEQ.w 'l10
000219DE <AmiBlitz3.ab3@3086>   CMP.b #$28,D0                                            ;"("
000219E2 <AmiBlitz3.ab3@3089>    BNE.w JL_0_3D14
000219E4 <AmiBlitz3.ab3@3090>   ADDQ.w #1,D2
000219E8 <AmiBlitz3.ab3@3091> BRA.w JL_0_3CC8
000219EC <AmiBlitz3.ab3@3094>   CMP.b #$7D,D0                                           ;"}"
000219F0 <AmiBlitz3.ab3@3095>    BNE.w JL_0_3D22
000219F2 <AmiBlitz3.ab3@3096>  TST.w D2
000219F6 <AmiBlitz3.ab3@3097>    BEQ.w JL_0_3D30
000219FA <AmiBlitz3.ab3@3101>    CMP.b #$7D,D0                                           ;"}"
000219FE <AmiBlitz3.ab3@3102>    BEQ.w 'l10
00021A02 <AmiBlitz3.ab3@3103>   CMP.b #$29,D0                                            ;")"
00021A06 <AmiBlitz3.ab3@3106>    BNE.w JL_0_3CC8
00021A08 <AmiBlitz3.ab3@3107>   SUBQ.w #1,D2
00021A0C <AmiBlitz3.ab3@3108> BRA.w JL_0_3CC8
00021A0E <AmiBlitz3.ab3@3111> RTS
00021A10 <AmiBlitz3.ab3@3115>       SUBQ.l #1,a4
00021A16 <AmiBlitz3.ab3@3116>       CLR.l sourceline3
00021A18 <AmiBlitz3.ab3@3117> RTS
00021A1A <AmiBlitz3.ab3@3121>       MOVEQ #0,d0
00021A1C <AmiBlitz3.ab3@3122>       SUBQ.l #1,a4
00021A22 <AmiBlitz3.ab3@3123>       CLR.l sourceline3
00021A24 <AmiBlitz3.ab3@3124> RTS
00021A28 <AmiBlitz3.ab3@3128>   CMP.b #$7B,D0                                            ;"{"
00021A2C <AmiBlitz3.ab3@3129>   BEQ.w JL_0_3D3E
00021A30 <AmiBlitz3.ab3@3130>   CMP.b #$28,D0                                            ;"("
00021A32 <AmiBlitz3.ab3@3133> RTS
00021A36 <AmiBlitz3.ab3@3137>   CMP.b #$7D,D0                                            ;"}"
00021A3A <AmiBlitz3.ab3@3138>   BEQ.w JL_0_3D4C
00021A3E <AmiBlitz3.ab3@3139>   CMP.b #$29,D0                                            ;")"
00021A40 <AmiBlitz3.ab3@3142> RTS
00021A42 <AmiBlitz3.ab3@3146> stopit:     Ds.w 1
00021A44 <AmiBlitz3.ab3@3147> clrreq:     Ds.w 1
00021A48 <AmiBlitz3.ab3@3168>   MOVE.w clrreq(PC),D0
00021A4C <AmiBlitz3.ab3@3169>    BEQ.w close_compilewin__skip
00021A7E <AmiBlitz3.ab3@3171> 
00021A84 <AmiBlitz3.ab3@3173>   LEA clrreq,a0
00021A86 <AmiBlitz3.ab3@3174>   NOT.w (a0)                                               ;reass
00021A8C <AmiBlitz3.ab3@3175>   MOVEA.l ptr_ThisTask,A0
00021A90 <AmiBlitz3.ab3@3176>   CLR.l $1E(A0)
00021A94 <AmiBlitz3.ab3@3177>   CLR.l $2A(A0)
00021A96 <AmiBlitz3.ab3@3180> RTS
00021A98 <AmiBlitz3.ab3@3183> intsused:  Ds.w 1
00021AA0 <AmiBlitz3.ab3@3187>   MOVE.w #-1,blitzoff
00021AA6 <AmiBlitz3.ab3@3188>   CLR.w intsused
00021AAC <AmiBlitz3.ab3@3189>   CLR.w anyerrs
00021AB2 <AmiBlitz3.ab3@3190>   CLR.w blitzmode
00021AB8 <AmiBlitz3.ab3@3191>   CLR.w dontwrite                                              ;nomemleft
00021ABE <AmiBlitz3.ab3@3192>   CLR.w constmode
00021AC4 <AmiBlitz3.ab3@3193>   CLR.w cmake
00021ACA <AmiBlitz3.ab3@3194>   CLR.w cfetchmode
00021AD0 <AmiBlitz3.ab3@3195>   CLR.l intdata1
00021AD6 <AmiBlitz3.ab3@3196>   CLR.w fuckpos
00021ADC <AmiBlitz3.ab3@3197>   CLR.w procnum
00021AE2 <AmiBlitz3.ab3@3198>   CLR.w procnum2
00021AE8 <AmiBlitz3.ab3@3199>   CLR.w dfetch
00021AEE <AmiBlitz3.ab3@3200>   CLR.l titleat
00021AF4 <AmiBlitz3.ab3@3201>   CLR.b usedpath
00021AFA <AmiBlitz3.ab3@3202>   CLR.b path2
00021B00 <AmiBlitz3.ab3@3203>   CLR.w inerr
00021B06 <AmiBlitz3.ab3@3204>   CLR.w intlevel
00021B0C <AmiBlitz3.ab3@3205>   CLR.l cont_pc
00021B12 <AmiBlitz3.ab3@3206>   CLR.l cont_pc2
00021B18 <AmiBlitz3.ab3@3207>   CLR.l lastcontlink
00021B22 <AmiBlitz3.ab3@3208>   MOVE.l destbufferstart,destpointer
00021B2C <AmiBlitz3.ab3@3209>   MOVE.l destbufferstart,bigpc
00021B36 <AmiBlitz3.ab3@3210>   MOVE.l destbufferend,libend
00021B40 <AmiBlitz3.ab3@3211>   MOVE.l data1start,data1
00021B4A <AmiBlitz3.ab3@3212>   MOVE.l data2at,data2
00021B52 <AmiBlitz3.ab3@3213>   MOVE.w #-1,skipcode                                      ;#-1,comflag org source
00021B5A <AmiBlitz3.ab3@3214>   MOVE.w #-1,linemode                                      ;#-1,linemode org soruce
00021B60 <AmiBlitz3.ab3@3215>   CLR.w oldvcodelen
00021B66 <AmiBlitz3.ab3@3216>   CLR.b lastgloballabel                                    ;lastbiglab org source
00021B68 <AmiBlitz3.ab3@3217> RTS
00021B6A <AmiBlitz3.ab3@3220> debugmode:  Ds.w 1                                         ;debugga org source ;debugger enabled?
00021B70 <AmiBlitz3.ab3@3224>   LEA  clrreq,a1
00021B74 <AmiBlitz3.ab3@3225>   MOVE.w #2000,(a1)
00021B9E <AmiBlitz3.ab3@3226>   !basic
00021BB4 <AmiBlitz3.ab3@3227> 
00021C04 <AmiBlitz3.ab3@3228>   comstatusstr   = !TRANS{"Initializing Compiler..."} ;default settings
00021C0C <AmiBlitz3.ab3@3229>   calcpro.l      = 0
00021C14 <AmiBlitz3.ab3@3230>   calcpro_old.l  = 0
00021C20 <AmiBlitz3.ab3@3231>   typ_old.l      = -1
00021C2C <AmiBlitz3.ab3@3232>   pass_old.l     = -1
00021C32 <AmiBlitz3.ab3@3233>   update_comstatus_gui.b = True ; for the first
00021C6C <AmiBlitz3.ab3@3235>   GetD0 &comstatusstr : !ComData_SetL{comPtr_CompileStatusString,d0}  ; set pointer of status string for gui tomsmart1 2012 05 12
00021CA6 <AmiBlitz3.ab3@3236>   GetD0 &calcpro      : !ComData_SetL{comPtr_CompileCalcProLong ,d0}  ; set pointer of calcpro long for gui tomsmart1 2012 05 12
00021CC4 <AmiBlitz3.ab3@3237>   !asm
00021CF6 <AmiBlitz3.ab3@3238> 
00021CFC <AmiBlitz3.ab3@3240>   CLR.w stopit
00021CFE <AmiBlitz3.ab3@3241> RTS
00021D04 <AmiBlitz3.ab3@3245>   CLR.w storedebugmode
00021D0A <AmiBlitz3.ab3@3246>   CLR.b iserror
00021D0E <AmiBlitz3.ab3@3247>   BSR.w compilerequester
00021D18 <AmiBlitz3.ab3@3249>   MOVE.l #0,globallinecount
00021D1E <AmiBlitz3.ab3@3250>   JSR check_of_same_source
00021D22 <AmiBlitz3.ab3@3251>   BSR.w call_setpointerbusy
00021D26 <AmiBlitz3.ab3@3252>   BSR.w setcvars
00021D2E <AmiBlitz3.ab3@3253>   MOVE.w #$8000,globalvarpointer
00021D38 <AmiBlitz3.ab3@3254>   MOVE.l #newtype_quick,defaulttype
00021D3E <AmiBlitz3.ab3@3255>   MOVE.l A7,passstack
00021D48 <AmiBlitz3.ab3@3256>   MOVE.l #firstitem_,sourceline
00021D52 <AmiBlitz3.ab3@3257>   MOVE.w numlines_org,linesleft
00021D5C <AmiBlitz3.ab3@3258>   MOVE.l numlines,numlines2
00021D62 <AmiBlitz3.ab3@3259>   ADDQ.w #1,linesleft
00021D68 <AmiBlitz3.ab3@3260>   ADDQ.l #1,numlines2
00021D72 <AmiBlitz3.ab3@3261>   MOVE.l #-1,linenumat
00021D76 <AmiBlitz3.ab3@3262>   BSR.w resetlibs
00021D7A <AmiBlitz3.ab3@3263>   BSR.w Aclearallvars
00021D80 <AmiBlitz3.ab3@3264>   LEA progress_per_line+2,A0
00021D82 <AmiBlitz3.ab3@3265>   MOVEQ.l #$03,D0
00021D84 <AmiBlitz3.ab3@3268>     CLR.w (A0)+
00021D88 <AmiBlitz3.ab3@3269>   DBF D0,JL_0_40EC
00021D8E <AmiBlitz3.ab3@3272>   LEA _include,a0
00021D92 <AmiBlitz3.ab3@3273>   MOVEM.l a0-a6/d0-d7,-(a7)
00021D98 <AmiBlitz3.ab3@3274>   LEA ptr_parameterstore,a1
00021D9A <AmiBlitz3.ab3@3277>     MOVE.b (a0)+,(a1)+
00021D9E <AmiBlitz3.ab3@3278>   BNE 'l1b
00021DA0 <AmiBlitz3.ab3@3280>   MOVEQ #9,d2
00021DA6 <AmiBlitz3.ab3@3281>   JSR findlabel2
00021DAA <AmiBlitz3.ab3@3282>   BNE 'd
00021DB2 <AmiBlitz3.ab3@3283>   MOVE.l #0,8(a2)
00021DB6 <AmiBlitz3.ab3@3284>   MOVEM.l (a7)+,a0-a6/d0-d7
00021DBA <AmiBlitz3.ab3@3285> BRA 'd2
00021DC0 <AmiBlitz3.ab3@3288>   JSR addlabelhash
00021DC8 <AmiBlitz3.ab3@3289>   MOVE.l #$1,$4(A2)
00021DD0 <AmiBlitz3.ab3@3290>   MOVE.l #0,8(a2)
00021DD4 <AmiBlitz3.ab3@3291>   MOVEM.l (a7)+,a0-a6/d0-d7
00021DDA <AmiBlitz3.ab3@3294>   LEA _debug,a0
00021DDE <AmiBlitz3.ab3@3295>   MOVEM.l a0-a6/d0-d7,-(a7)
00021DE4 <AmiBlitz3.ab3@3296>   LEA ptr_parameterstore,a1
00021DE6 <AmiBlitz3.ab3@3299>     MOVE.b (a0)+,(a1)+
00021DEA <AmiBlitz3.ab3@3300>   BNE 'l9b
00021DEC <AmiBlitz3.ab3@3302>   MOVEQ #7,d2
00021DF2 <AmiBlitz3.ab3@3303>   JSR findlabel2
00021DF6 <AmiBlitz3.ab3@3304>   BNE 'd9
00021DFA <AmiBlitz3.ab3@3305>   MOVE.b debugmode(PC),D0
00021DFC <AmiBlitz3.ab3@3306>   EXT.w d0
00021DFE <AmiBlitz3.ab3@3307>   EXT.l d0
00021E02 <AmiBlitz3.ab3@3308>   MOVE.l d0,8(a2)
00021E06 <AmiBlitz3.ab3@3309>   MOVEM.l (a7)+,a0-a6/d0-d7
00021E0A <AmiBlitz3.ab3@3310> BRA 'd9b
00021E10 <AmiBlitz3.ab3@3313>   JSR addlabelhash
00021E18 <AmiBlitz3.ab3@3314>   MOVE.l #$1,$4(A2)
00021E1C <AmiBlitz3.ab3@3315>   MOVE.b debugmode(PC),D0
00021E1E <AmiBlitz3.ab3@3316>   EXT.w d0
00021E20 <AmiBlitz3.ab3@3317>   EXT.l d0
00021E24 <AmiBlitz3.ab3@3318>   MOVE.l d0,8(a2)
00021E28 <AmiBlitz3.ab3@3319>   MOVEM.l (a7)+,a0-a6/d0-d7
00021E2E <AmiBlitz3.ab3@3322>   MOVE.l #firstitem_,a0
00021E30 <AmiBlitz3.ab3@3323>   MOVE.l (a0),a0
00021E34 <AmiBlitz3.ab3@3324>   LEA 9(a0),a0
00021E3C <AmiBlitz3.ab3@3325>   MOVE.w #0,exdebug
00021E42 <AmiBlitz3.ab3@3326>   TST.b debugmode
00021E46 <AmiBlitz3.ab3@3327>    BEQ 'l10
00021E48 <AmiBlitz3.ab3@3330>   MOVE.b (a0)+,d0
00021E4C <AmiBlitz3.ab3@3331>    BEQ 'l10
00021E50 <AmiBlitz3.ab3@3332>   CMP.b #$20,d0
00021E54 <AmiBlitz3.ab3@3333>    BEQ 'l2
00021E56 <AmiBlitz3.ab3@3334>   SUBQ.l #1,a0
00021E5C <AmiBlitz3.ab3@3335>   CMP.l #"DEBU",(a0)
00021E60 <AmiBlitz3.ab3@3336>    BNE 'l10
00021E66 <AmiBlitz3.ab3@3337>   CMP.b #"G",4(a0)
00021E6A <AmiBlitz3.ab3@3338>    BNE 'l10
00021E72 <AmiBlitz3.ab3@3339>   MOVE.w #$0,debugversion
00021E7A <AmiBlitz3.ab3@3340>   MOVE.b #1,exdebug
00021E80 <AmiBlitz3.ab3@3343>   LEA nops4,A0
00021E86 <AmiBlitz3.ab3@3344>   LEA dataget,A1
00021E8C <AmiBlitz3.ab3@3345>   JSR pokecode2                                            ;write intro nops
00021E92 <AmiBlitz3.ab3@3346>   MOVE.l #$01010101,d1
00021E98 <AmiBlitz3.ab3@3347>   JSR writedatalong                                        ;for the 4 tempregs
00021E9E <AmiBlitz3.ab3@3348>   JSR writedatalong
00021EA4 <AmiBlitz3.ab3@3349>   JSR writedatalong
00021EAA <AmiBlitz3.ab3@3350>   JSR writedatalong
00021EB0 <AmiBlitz3.ab3@3351>   TST.b saved0
00021EB4 <AmiBlitz3.ab3@3352>    BEQ 'l1
00021EBA <AmiBlitz3.ab3@3353>   MOVE.l #$4e714e71,d1
00021EC0 <AmiBlitz3.ab3@3354>   JSR writelong                                            ;add 2 nops
00021EC6 <AmiBlitz3.ab3@3355>   MOVE.l #$4e714e71,d1
00021ECC <AmiBlitz3.ab3@3356>   JSR writelong                                            ;add 2 nops
00021ED2 <AmiBlitz3.ab3@3357>   MOVE.l #$4e714e71,d1
00021ED8 <AmiBlitz3.ab3@3358>   JSR writelong                                            ;add 2 nops
00021EDE <AmiBlitz3.ab3@3359>    MOVE.l #$4e714e71,d1
00021EE4 <AmiBlitz3.ab3@3360>   JSR writelong                                            ;add 2 nops
00021EE8 <AmiBlitz3.ab3@3363>   MOVE.b debugmode(PC),D1
00021EEC <AmiBlitz3.ab3@3364>    BEQ.b JL_0_4132
00021EF6 <AmiBlitz3.ab3@3365>   MOVE.b debugmode,storedebugmode
00021EFA <AmiBlitz3.ab3@3366>   MOVE.w #$FFDC,D1
00021EFE <AmiBlitz3.ab3@3367>    BSR.w uselib
00021F04 <AmiBlitz3.ab3@3368>   TST.w debugversion                                       ;make a version for debugger
00021F08 <AmiBlitz3.ab3@3369>    BNE.b JL_0_412A
00021F0C <AmiBlitz3.ab3@3373>   MOVE.w #$FA3C,D1
00021F10 <AmiBlitz3.ab3@3374>    BSR.w uselib
00021F14 <AmiBlitz3.ab3@3375>   MOVE.w #$0001,D1
00021F18 <AmiBlitz3.ab3@3376>    BSR.w uselib
00021F1C <AmiBlitz3.ab3@3377> BRA.b JL_0_4132
00021F20 <AmiBlitz3.ab3@3380>   MOVE.w #$FA32,D1
00021F24 <AmiBlitz3.ab3@3381>   BSR.w uselib
00021F28 <AmiBlitz3.ab3@3384>   BSR.w nextline
00021F2E <AmiBlitz3.ab3@3385>   CLR.l linenum
00021F34 <AmiBlitz3.ab3@3386>   CLR.l stacktrack
00021F3A <AmiBlitz3.ab3@3389>   ADDQ.l #1,linenum
00021F44 <AmiBlitz3.ab3@3390>   MOVE.l destpointer,destpointer2
00021F4A <AmiBlitz3.ab3@3391>   MOVE.l a5,sourceline2
00021F4E <AmiBlitz3.ab3@3392>   BSR.w compile_line                                        ;compile pass
00021F52 <AmiBlitz3.ab3@3395>   BSR.w nextline
00021F56 <AmiBlitz3.ab3@3396>    BNE.w JL_0_4136
00021F5A <AmiBlitz3.ab3@3397>   BSR.w JUMP_do_runerrson
00021F5E <AmiBlitz3.ab3@3398>   BSR.w pointchk
00021F64 <AmiBlitz3.ab3@3399>   TST.b objectcount
00021F68 <AmiBlitz3.ab3@3400>    BNE macenderr
00021F6E <AmiBlitz3.ab3@3401>   CLR.l linenumat
00021F72 <AmiBlitz3.ab3@3402>   BSR.w errchx2
00021F7C <AmiBlitz3.ab3@3403>   CMP.l #-1,bssend
00021F80 <AmiBlitz3.ab3@3404>    BNE 'l30
00021F8A <AmiBlitz3.ab3@3405>   MOVE.l destpointer,bssend                                ;compile end
00021F90 <AmiBlitz3.ab3@3408>   MOVE.l destpointer,d0
00021F9A <AmiBlitz3.ab3@3409>   CMP.l #-1,bssstart
00021F9E <AmiBlitz3.ab3@3410>   BNE 'lnf6
00021FA8 <AmiBlitz3.ab3@3411>   CMP.l #-1,chipstart
00021FAC <AmiBlitz3.ab3@3412>   BNE 'lnf6
00021FB0 <AmiBlitz3.ab3@3413> BRA 'leven4
00021FB6 <AmiBlitz3.ab3@3416>   MOVE.l destpointer,d1
00021FB8 <AmiBlitz3.ab3@3417>   ADDQ.l #3,d1
00021FBE <AmiBlitz3.ab3@3418>   AND.l #$fffffffc,d1                                      ;bug ?
00021FC4 <AmiBlitz3.ab3@3419>   MOVE.l d1,destpointer
00021FCE <AmiBlitz3.ab3@3422>   MOVE.l destpointer,codeend
00021FD8 <AmiBlitz3.ab3@3423>   CMP.l #-1,chipend
00021FDC <AmiBlitz3.ab3@3424>   BNE 'l31
00021FE6 <AmiBlitz3.ab3@3425>   MOVE.l destpointer,chipend
00021FEC <AmiBlitz3.ab3@3428>   MOVE.l destpointer,d1
00021FEE <AmiBlitz3.ab3@3429>   ADDQ.l #1,d1
00021FF4 <AmiBlitz3.ab3@3430>   AND.l #$fffffffe,d1                                     ;new evenexit
00021FFA <AmiBlitz3.ab3@3431>   MOVE.l d1,destpointer
00021FFE <AmiBlitz3.ab3@3432>   MOVE.b debugmode(PC),D1
00022002 <AmiBlitz3.ab3@3433>    BEQ.b JL_0_4180
00022006 <AmiBlitz3.ab3@3434>    BSR.w debugstuff
0002200A <AmiBlitz3.ab3@3435>   MOVE.w #$C300,D1
00022010 <AmiBlitz3.ab3@3436>    JSR Atokejsr
00022014 <AmiBlitz3.ab3@3437>    BSR.w debugstuff
00022018 <AmiBlitz3.ab3@3438>   MOVE.l eopcode(PC),D1
0002201E <AmiBlitz3.ab3@3439>    JSR writelong
00022022 <AmiBlitz3.ab3@3440>   MOVE.l lastcontlink(PC),D1
00022026 <AmiBlitz3.ab3@3441>    BEQ.b JL_0_4180
00022028 <AmiBlitz3.ab3@3442>   MOVEA.l D1,A0
0002202C <AmiBlitz3.ab3@3443>   CLR.w $6(A0)
00022036 <AmiBlitz3.ab3@3449>   MOVE.l destpointer,endop                                ;where end goes...
0002203C <AmiBlitz3.ab3@3451>   TST.w blitzmode
00022040 <AmiBlitz3.ab3@3452>   BEQ.w JL_0_4198
00022044 <AmiBlitz3.ab3@3453>   BSR.w do_AMIGA                                          ;back to amiga if in blitz!
0002204A <AmiBlitz3.ab3@3456>   TST.w intsused
0002204E <AmiBlitz3.ab3@3457>   BEQ.b JL_0_41AA
00022052 <AmiBlitz3.ab3@3458>   MOVE.w #$C105,D1                                        ;interupts off!
00022058 <AmiBlitz3.ab3@3459>   JSR tokejsr2
0002205C <AmiBlitz3.ab3@3462>   BSR.w calcstatic
00022062 <AmiBlitz3.ab3@3463>   MOVE.w D4,numstatic
00022068 <AmiBlitz3.ab3@3464>   MOVE.l D3,staticdata
0002206C <AmiBlitz3.ab3@3465>    BSR.w calcmaxs
00022072 <AmiBlitz3.ab3@3467>   TST.l tokeslist
00022076 <AmiBlitz3.ab3@3468>    BEQ.b JL_0_41F8
0002207C <AmiBlitz3.ab3@3469>   MOVE.w gotocode,D1                                       ;jmp!
00022082 <AmiBlitz3.ab3@3470>    JSR writeword
0002208C <AmiBlitz3.ab3@3471>   MOVE.l destpointer,endjmpat
00022090 <AmiBlitz3.ab3@3472>    BSR.w addoff
00022096 <AmiBlitz3.ab3@3473>    JSR writelong                                           
0002209A <AmiBlitz3.ab3@3475>    BSR.w JL_0_6C76                                         ;has to be done before finits!
000220A0 <AmiBlitz3.ab3@3479>   TST.w dontwrite
000220A4 <AmiBlitz3.ab3@3480>    BNE.b JL_0_41F8
000220A8 <AmiBlitz3.ab3@3481>   MOVEA.l endjmpat(PC),A4
000220AE <AmiBlitz3.ab3@3482>   MOVE.l destpointer,(A4)
000220B4 <AmiBlitz3.ab3@3485>   TST.b returncode
000220B8 <AmiBlitz3.ab3@3486>   BEQ 'l2
000220BC <AmiBlitz3.ab3@3487>   MOVE.w #$2e80,d1
000220C2 <AmiBlitz3.ab3@3488>   JSR writeword
000220C8 <AmiBlitz3.ab3@3491>   JSR JL_0_B98A
000220CE <AmiBlitz3.ab3@3492>   TST.b returncode
000220D2 <AmiBlitz3.ab3@3493>   BEQ 'l3
000220D6 <AmiBlitz3.ab3@3494>   MOVE.w #$4e75,d1
000220DC <AmiBlitz3.ab3@3495>   JSR writeword
000220E0 <AmiBlitz3.ab3@3496> BRA 'l1
000220E6 <AmiBlitz3.ab3@3499>   MOVE.l #$70004E75,D1
000220EC <AmiBlitz3.ab3@3500>   JSR writelong                                            ;write moveq #0,d0:rts
000220F2 <AmiBlitz3.ab3@3503>   JSR JL_0_B73E
000220F6 <AmiBlitz3.ab3@3504>   BSR.w asmfixer
000220FA <AmiBlitz3.ab3@3505>   BSR.w close_compilewin
000220FE <AmiBlitz3.ab3@3506> BRA.w call_setpointernormal
00022104 <AmiBlitz3.ab3@3510> JMP do_runerrson
00022106 <AmiBlitz3.ab3@3514> eopcode:    Dc.b $70,$03                                   ;MOVEQ #$03,D0
00022108 <AmiBlitz3.ab3@3515>             Dc.b $4E,$40                                   ;TRAP  #00
0002210C <AmiBlitz3.ab3@3517> endjmpat:   Ds.l 1
00022112 <AmiBlitz3.ab3@3521>   MOVEA.l newtype_string,A2
00022118 <AmiBlitz3.ab3@3522>   MOVE.l #MaxByte,D0                                       ;move.l #$ff,d0 org source
0002211C <AmiBlitz3.ab3@3525>     CMPA.w #$0,A2
00022120 <AmiBlitz3.ab3@3526>      BEQ.w pointchk_done
00022124 <AmiBlitz3.ab3@3527>     CMP.l $4(A2),D0
00022128 <AmiBlitz3.ab3@3528>      BNE.w pointchk_next
00022130 <AmiBlitz3.ab3@3529>     MOVE.w $8(A2),linenumat+2                              ;type not found  ;move 8(a2),linenumat org source
00022134 <AmiBlitz3.ab3@3530> BRA.w notypeerr
00022136 <AmiBlitz3.ab3@3533>     MOVEA.l (A2),A2
0002213A <AmiBlitz3.ab3@3534> BRA.w pointchk_loop
0002213C <AmiBlitz3.ab3@3537> RTS
00022142 <AmiBlitz3.ab3@3541>   LEA labelbase,A2
00022144 <AmiBlitz3.ab3@3545>   MOVE.l (A2),D0                                           ;testlabels
00022148 <AmiBlitz3.ab3@3546>    BEQ.w errchx2_done
0002214A <AmiBlitz3.ab3@3547>   MOVEA.l D0,A2
0002214E <AmiBlitz3.ab3@3548>   MOVE.l $4(A2),D0
00022152 <AmiBlitz3.ab3@3549>   BTST #$0,D0
00022156 <AmiBlitz3.ab3@3550>    BNE.w errchx2_loop
0002215A <AmiBlitz3.ab3@3551>   MOVE.l $8(A2),D0
0002215E <AmiBlitz3.ab3@3552>    BNE.w errchx2_loop
00022166 <AmiBlitz3.ab3@3553>   MOVE.w $10(A2),linenumat+2
00022168 <AmiBlitz3.ab3@3554>   MOVEQ #0,d0
0002216C <AmiBlitz3.ab3@3555>   MOVE.b $12(a2),d0
00022174 <AmiBlitz3.ab3@3556>   MOVE.w 0(a2,d0),linenumat
0002217A <AmiBlitz3.ab3@3557> JMP nolaberr                                               ;label not found
00022180 <AmiBlitz3.ab3@3560>   MOVE.l concomsp,D0
00022186 <AmiBlitz3.ab3@3561>   CMP.l #concomstack,D0
0002218A <AmiBlitz3.ab3@3562>    BNE.w chxerr4
00022190 <AmiBlitz3.ab3@3563>   MOVE.w connest,D1
00022194 <AmiBlitz3.ab3@3564>    BNE.w chxerr4
00022196 <AmiBlitz3.ab3@3567>   MOVE.l D1,-(A7)
0002219C <AmiBlitz3.ab3@3568>   MOVE.l firstsel,D1
000221A0 <AmiBlitz3.ab3@3569>    BNE.w errchx_err1
000221A6 <AmiBlitz3.ab3@3570>   MOVE.l firstrep,D1
000221AA <AmiBlitz3.ab3@3571>    BNE.w errchx_err2
000221B0 <AmiBlitz3.ab3@3572>   MOVE.w intstring,D1
000221B4 <AmiBlitz3.ab3@3573>    BNE.w errchx_err3
000221B8 <AmiBlitz3.ab3@3574>   MOVE.l 4(a7),d1
000221BE <AmiBlitz3.ab3@3575>   MOVE.w proceduremode,D1
000221C2 <AmiBlitz3.ab3@3576>    BNE.w errchx_err6
000221C8 <AmiBlitz3.ab3@3577>   MOVE.l firstiff,d1
000221CC <AmiBlitz3.ab3@3578>    BNE errchx_err5
000221D2 <AmiBlitz3.ab3@3579>   MOVE.l firstfor,D1
000221D6 <AmiBlitz3.ab3@3580>    BNE.w errchx_err7
000221D8 <AmiBlitz3.ab3@3581>   MOVE.l (A7)+,D1
000221DA <AmiBlitz3.ab3@3582> RTS
000221E4 <AmiBlitz3.ab3@3586>   MOVE.l sellineat,linenumat
000221EA <AmiBlitz3.ab3@3587> JMP selerrz
000221F4 <AmiBlitz3.ab3@3590>   MOVE.l replineat,linenumat
000221FA <AmiBlitz3.ab3@3591> JMP unterr3
00022204 <AmiBlitz3.ab3@3594>   MOVE.l intlineat,linenumat
0002220A <AmiBlitz3.ab3@3595> JMP interr2
00022214 <AmiBlitz3.ab3@3598>   MOVE.l iflineat,linenumat
0002221A <AmiBlitz3.ab3@3599> JMP noenderr
00022224 <AmiBlitz3.ab3@3602>   MOVE.l prolineat,linenumat
0002222A <AmiBlitz3.ab3@3603> JMP nopenderr
00022234 <AmiBlitz3.ab3@3606>   MOVE.l forlineat,linenumat
0002223A <AmiBlitz3.ab3@3607> JMP nonexterr
00022244 <AmiBlitz3.ab3@3610>   MOVE.l ciflineat,linenumat
0002224A <AmiBlitz3.ab3@3611> JMP nocenderr
00022254 <AmiBlitz3.ab3@3615>   MOVE.l data1,maxsat
00022256 <AmiBlitz3.ab3@3616>   MOVEQ.l #$00,D4
0002225C <AmiBlitz3.ab3@3617>   MOVEA.l libpointer,A2
00022260 <AmiBlitz3.ab3@3620>     CMPA.w #$0,A2
00022264 <AmiBlitz3.ab3@3621>      BEQ.w calcmaxs_done
00022268 <AmiBlitz3.ab3@3622>     TST.w $C(A2)
0002226C <AmiBlitz3.ab3@3623>      BPL.w calcmaxs_next
00022270 <AmiBlitz3.ab3@3624>     MOVE.l $12(A2),D0
00022274 <AmiBlitz3.ab3@3625>     TST.w -$2(A2,D0.L)
00022278 <AmiBlitz3.ab3@3626>      BEQ.w calcmaxs_next
0002227A <AmiBlitz3.ab3@3627>     ADDQ.w #1,D4
0002227E <AmiBlitz3.ab3@3628>     MOVE.w -$6(A2,D0.L),D1
00022282 <AmiBlitz3.ab3@3629>     BSR.w pokedata1
00022284 <AmiBlitz3.ab3@3630>     MOVEQ.l #$01,D1
00022288 <AmiBlitz3.ab3@3631>     MOVE.w -$2(A2,D0.L),D2
0002228A <AmiBlitz3.ab3@3632>     LSL.w D2,D1
0002228E <AmiBlitz3.ab3@3633>     MULU -$4(A2,D0.L),D1                                   ;write objectspacesize
00022292 <AmiBlitz3.ab3@3634>     BSR.w writedatalong
00022294 <AmiBlitz3.ab3@3637>     MOVEA.l (A2),A2
00022298 <AmiBlitz3.ab3@3638> BRA.w calcmaxs_loop
0002229E <AmiBlitz3.ab3@3641>   MOVE.w D4,maxsused
000222A2 <AmiBlitz3.ab3@3642>    BEQ.w calcmaxs_done2
000222A6 <AmiBlitz3.ab3@3643>   MOVE.w #$FFFA,D1                                         ;;use memlib
000222AA <AmiBlitz3.ab3@3644> BRA.w uselib
000222AC <AmiBlitz3.ab3@3647> RTS
000222B2 <AmiBlitz3.ab3@3651>    MOVE.l a7,stackaddr
000222B6 <AmiBlitz3.ab3@3652>    BSR.w compile_term
000222BA <AmiBlitz3.ab3@3653>    BSR.w reget
000222BE <AmiBlitz3.ab3@3654>    BNE.w illeolerr
000222C4 <AmiBlitz3.ab3@3655>    TST.w dontwrite
000222C8 <AmiBlitz3.ab3@3656>    BNE 'l1
000222CE <AmiBlitz3.ab3@3657>    TST.l stacktrack
000222D2 <AmiBlitz3.ab3@3658>    BNE errormsg_stack
000222D6 <AmiBlitz3.ab3@3661>    CMP.w #-$7FDE,D0
000222DA <AmiBlitz3.ab3@3662>    BNE.w compile_line_notelse
000222E0 <AmiBlitz3.ab3@3663>    JSR do_else2
000222E4 <AmiBlitz3.ab3@3664> BRA.w compile_line
000222E6 <AmiBlitz3.ab3@3667>   TST.w D0
000222EA <AmiBlitz3.ab3@3668>   BNE.w compile_line
000222F0 <AmiBlitz3.ab3@3673>   MOVE.l firstiff,D0
000222F4 <AmiBlitz3.ab3@3674>    BEQ.w compile_line_done
000222F6 <AmiBlitz3.ab3@3675>   MOVEA.l D0,A0
000222FA <AmiBlitz3.ab3@3676>   MOVE.w $C(A0),D1
000222FE <AmiBlitz3.ab3@3677>    BPL.w compile_line_done
00022302 <AmiBlitz3.ab3@3681>   BCLR #$F,D1
00022308 <AmiBlitz3.ab3@3682>    JSR AJL_0_D7B8
0002230E <AmiBlitz3.ab3@3683>    JSR AJL_0_D81C
00022312 <AmiBlitz3.ab3@3684> BRA.w compile_line_unthen
00022314 <AmiBlitz3.ab3@3687> RTS
0002231A <AmiBlitz3.ab3@3691>   LEA lastgloballabel,A0
0002231C <AmiBlitz3.ab3@3692>   TST.b (A0)
00022320 <AmiBlitz3.ab3@3693>   BEQ.w nolocerr
00022326 <AmiBlitz3.ab3@3694>   LEA ptr_parameterstore,A1
00022328 <AmiBlitz3.ab3@3695>   MOVEQ.l #$00,D2
0002232A <AmiBlitz3.ab3@3698>   ADDQ.w #1,D2
0002232C <AmiBlitz3.ab3@3699>   MOVE.b (A0)+,(A1)+
00022330 <AmiBlitz3.ab3@3700>    BNE.w createlab_loop
00022336 <AmiBlitz3.ab3@3701>   MOVE.b #$27,-$1(A1)
00022338 <AmiBlitz3.ab3@3702>   MOVE.w D2,-(A7)
0002233E <AmiBlitz3.ab3@3703>    JSR makename4
00022340 <AmiBlitz3.ab3@3704>   CMP.w (A7)+,D2
00022344 <AmiBlitz3.ab3@3705>    BEQ.w syntaxerr
00022346 <AmiBlitz3.ab3@3706>    TST.w d0
0002234A <AmiBlitz3.ab3@3707>    BPL createlab_done
00022352 <AmiBlitz3.ab3@3708>    MOVE.w #$3a,lastchar
00022354 <AmiBlitz3.ab3@3709>    SUBQ.l #2,a5
00022356 <AmiBlitz3.ab3@3712> RTS
00022360 <AmiBlitz3.ab3@3716>   MOVE.l #forthstack,forthsp
0002236A <AmiBlitz3.ab3@3717>   MOVE.l #precstack,precsp
0002236C <AmiBlitz3.ab3@3718> RTS
0002236E <AmiBlitz3.ab3@3725>   MOVEQ.l #$00,D4
00022398 <AmiBlitz3.ab3@3728>   !basic
000223DA <AmiBlitz3.ab3@3729> 
000223EA <AmiBlitz3.ab3@3731>   If (c_abort = 1)           ; check if set
000223EC <AmiBlitz3.ab3@3732>     MOVEQ.l #-$01,d4
000223F2 <AmiBlitz3.ab3@3733>     MOVE.w D4,stopit
00022410 <AmiBlitz3.ab3@3734>     !asm
00022414 <AmiBlitz3.ab3@3735>     BRA chkrealstop__skip
00022432 <AmiBlitz3.ab3@3737>   !asm
00022434 <AmiBlitz3.ab3@3738>   MOVEQ.l #$00,D6
00022436 <AmiBlitz3.ab3@3739>   MOVEQ.l #$00,D7                                          ; clr Z-Flag for beq.b in chkstop_chk
00022438 <AmiBlitz3.ab3@3743> RTS
0002243C <AmiBlitz3.ab3@3747>   MOVE.w stopit(PC),D0
00022440 <AmiBlitz3.ab3@3748>   BEQ chkstop__chk
00022446 <AmiBlitz3.ab3@3749>   SUBQ.w #1,stopit
00022448 <AmiBlitz3.ab3@3753> RTS
00022450 <AmiBlitz3.ab3@3756>   MOVE.w #2000,stopit
00022454 <AmiBlitz3.ab3@3757>   BSR.w chkrealstop
00022458 <AmiBlitz3.ab3@3758>   BEQ.b chkstop__rts
0002245C <AmiBlitz3.ab3@3760>   BSR.w close_compilewin
00022460 <AmiBlitz3.ab3@3761>   BSR.w call_setpointernormal
00022466 <AmiBlitz3.ab3@3763>   MOVEA.l errstack,A7
0002246C <AmiBlitz3.ab3@3764>   MOVEA.l errcont,A0
00022474 <AmiBlitz3.ab3@3765>   MOVE.w #-1,anyerrs
00022476 <AmiBlitz3.ab3@3766> JMP (A0)
0002247A <AmiBlitz3.ab3@3769> d_pc:           Ds.l 1
0002247E <AmiBlitz3.ab3@3770> d_bigpc:        Ds.l 1
00022480 <AmiBlitz3.ab3@3771> d_nomemleft:    Ds.w 1
00022484 <AmiBlitz3.ab3@3772> cont_pc:        Ds.l 1
00022488 <AmiBlitz3.ab3@3773> cont_pc2:       Ds.l 1
0002248C <AmiBlitz3.ab3@3774> lastcontlink:   Ds.l 1
00022490 <AmiBlitz3.ab3@3778>   ORI.w #$4E40,D1
00022494 <AmiBlitz3.ab3@3779> BRA.w JUMP_writeword
0002249A <AmiBlitz3.ab3@3783>   TST.b debugmode
0002249E <AmiBlitz3.ab3@3784>   BEQ.w debugstuff__rts
000224A4 <AmiBlitz3.ab3@3791>   TST.w dirmode                                            ;or while in direct mode...
000224A8 <AmiBlitz3.ab3@3792>    BNE debugstuff__rts
000224B2 <AmiBlitz3.ab3@3793>   MOVE.l destpointer,d_pc
000224BC <AmiBlitz3.ab3@3794>   MOVE.l bigpc,d_bigpc
000224C6 <AmiBlitz3.ab3@3795>   MOVE.w dontwrite,d_nomemleft
000224CA <AmiBlitz3.ab3@3796>   MOVEM.l D0-D1,-(A7)
000224CC <AmiBlitz3.ab3@3797>   MOVEQ.l #$01,D1
000224D0 <AmiBlitz3.ab3@3798>    BSR.w writetrap                                         ;write the adress to sourceline
000224D6 <AmiBlitz3.ab3@3802>    MOVE.l destpointer,D0
000224DC <AmiBlitz3.ab3@3803>   MOVE.l cont_pc,D1
000224E2 <AmiBlitz3.ab3@3804>   MOVE.l D0,cont_pc
000224E8 <AmiBlitz3.ab3@3805>   MOVE.l D1,cont_pc2
000224EC <AmiBlitz3.ab3@3806>    BEQ.b debugstuff__skip
000224F2 <AmiBlitz3.ab3@3807>   TST.w dontwrite
000224F6 <AmiBlitz3.ab3@3808>    BNE.b debugstuff__skip
000224F8 <AmiBlitz3.ab3@3809>   MOVEA.l D1,A4
000224FA <AmiBlitz3.ab3@3810>   SUB.l A4,D0
000224FE <AmiBlitz3.ab3@3811>   MOVE.w D0,$6(A4)
00022504 <AmiBlitz3.ab3@3812>   MOVE.l A4,lastcontlink
0002250A <AmiBlitz3.ab3@3815>   TST.w ininclude
00022510 <AmiBlitz3.ab3@3817>   TST.w makeexec
00022514 <AmiBlitz3.ab3@3818>   BEQ 'l1
0002251A <AmiBlitz3.ab3@3819>   TST.w exdebug
0002251E <AmiBlitz3.ab3@3820>   BEQ 'noinc
00022522 <AmiBlitz3.ab3@3823>   MOVEM.l a0-a1/d2/d3,-(a7)                                ;write source for includes
00022528 <AmiBlitz3.ab3@3824>   MOVE.l data1,d1
0002252E <AmiBlitz3.ab3@3825>   TST.b firsttime
00022532 <AmiBlitz3.ab3@3826>   BNE 'nofirst
0002253A <AmiBlitz3.ab3@3827>   MOVE.b #1,firsttime
00022540 <AmiBlitz3.ab3@3828>   MOVE.l #"DuCk",d1                                        ; to found from debugger the code start
00022546 <AmiBlitz3.ab3@3829>   JSR writedatalong
0002254C <AmiBlitz3.ab3@3830>   MOVE.l #"AmiB",d1
00022552 <AmiBlitz3.ab3@3831>   JSR writedatalong
00022558 <AmiBlitz3.ab3@3832>   MOVE.l destbufferstart,d1
0002255E <AmiBlitz3.ab3@3833>   JSR writedatalong
00022564 <AmiBlitz3.ab3@3834>   TST.w dontwrite
00022568 <AmiBlitz3.ab3@3835>   BNE 'nohunk
0002256E <AmiBlitz3.ab3@3836>   MOVE.l data1,d1
00022570 <AmiBlitz3.ab3@3837>   SUBQ.l #4,d1
00022576 <AmiBlitz3.ab3@3838>   SUB.l destbufferstart,d1
00022578 <AmiBlitz3.ab3@3839>   MOVE.l d1,d2
0002257E <AmiBlitz3.ab3@3840>   JSR addhunkoffset
00022584 <AmiBlitz3.ab3@3843>   MOVE.l destpointer,d2
0002258A <AmiBlitz3.ab3@3844>   MOVE.l data1,d1
00022590 <AmiBlitz3.ab3@3847>   MOVE.l destpointer,d2
00022592 <AmiBlitz3.ab3@3848>   MOVE.l d1,d3
00022598 <AmiBlitz3.ab3@3849>   SUB.l destbufferstart,d1
0002259E <AmiBlitz3.ab3@3850>   OR.l #$80000000,d1
000225A4 <AmiBlitz3.ab3@3851>   JSR writelong
000225AA <AmiBlitz3.ab3@3852>   TST.w inmacro
000225AE <AmiBlitz3.ab3@3853>   BEQ 'sc1
000225B4 <AmiBlitz3.ab3@3854>   MOVE.l myline,a0
000225B8 <AmiBlitz3.ab3@3856> BRA 'inc2
000225BE <AmiBlitz3.ab3@3858>  'sc1  TST.w ininclude
000225C2 <AmiBlitz3.ab3@3859>   BEQ 'inc
000225C8 <AmiBlitz3.ab3@3860>   MOVE.l includesourceline,a0
000225CC <AmiBlitz3.ab3@3861> BRA 'inc2
000225D2 <AmiBlitz3.ab3@3864>   MOVE.l sourceline,a0
000225D6 <AmiBlitz3.ab3@3865>   LEA 9(a0),a0
000225D8 <AmiBlitz3.ab3@3868>   MOVE.l d1,d2
000225DA <AmiBlitz3.ab3@3869>   MOVE.l A5,D1
000225DC <AmiBlitz3.ab3@3870>   SUB.l a0,D1
000225E2 <AmiBlitz3.ab3@3871>   ADD.l #9,d1
000225E6 <AmiBlitz3.ab3@3872>   BSR.w JUMP_writeword
000225EC <AmiBlitz3.ab3@3873>   CMP.l #9,d1
000225F0 <AmiBlitz3.ab3@3874>   BEQ 'pos1
000225F6 <AmiBlitz3.ab3@3875>   TST.w dontwrite
000225FA <AmiBlitz3.ab3@3876>   BNE 'nopad
00022600 <AmiBlitz3.ab3@3877>   MOVE.l lastsourceline,d1
00022604 <AmiBlitz3.ab3@3878>   MOVE.l d1,-6(a4)
00022608 <AmiBlitz3.ab3@3879> BRA 'nopad
0002260E <AmiBlitz3.ab3@3882>   MOVE.l d2,lastsourceline
00022618 <AmiBlitz3.ab3@3883>    MOVE.l destpointer,lastdestpointer
0002261A <AmiBlitz3.ab3@3884>    MOVEQ #0,d1
00022620 <AmiBlitz3.ab3@3885>   MOVE.l data1,d2
00022626 <AmiBlitz3.ab3@3886>   SUB.l destbufferstart,d2
0002262C <AmiBlitz3.ab3@3887>   JSR writedatalong
00022632 <AmiBlitz3.ab3@3888>   TST.w dontwrite
00022636 <AmiBlitz3.ab3@3889>   BNE 'no2
0002263C <AmiBlitz3.ab3@3890>   JSR addhunkoffset
00022642 <AmiBlitz3.ab3@3893>   MOVE.l data1,d2
00022648 <AmiBlitz3.ab3@3894>   SUB.l destbufferstart,d2
0002264E <AmiBlitz3.ab3@3895>   JSR writedatalong
00022654 <AmiBlitz3.ab3@3896>   TST.w dontwrite
00022658 <AmiBlitz3.ab3@3897>   BNE 'no
0002265E <AmiBlitz3.ab3@3898>   JSR addhunkoffset
00022664 <AmiBlitz3.ab3@3899>   MOVE.l lastwritedat,a1
0002266A <AmiBlitz3.ab3@3900>   CMP.l #0,a1
0002266E <AmiBlitz3.ab3@3901>   BEQ 'no
00022670 <AmiBlitz3.ab3@3902>   MOVE.l d3,(a1)
00022678 <AmiBlitz3.ab3@3903>   MOVE.l prevwritedat,4(a1)
00022682 <AmiBlitz3.ab3@3904>   MOVE.l lastwritedat,prevwritedat
00022688 <AmiBlitz3.ab3@3907>   MOVE.l d3,lastwritedat
0002268A <AmiBlitz3.ab3@3908>   MOVEQ #4,d1
0002268E <AmiBlitz3.ab3@3909>   BSR pokedata1b
00022690 <AmiBlitz3.ab3@3912>   MOVE.b (a0)+,d1
00022694 <AmiBlitz3.ab3@3913>   BEQ 'done
00022698 <AmiBlitz3.ab3@3914>   BSR pokedata1b
0002269C <AmiBlitz3.ab3@3915> BRA 'loop
0002269E <AmiBlitz3.ab3@3918>   MOVEQ #0,d1
000226A2 <AmiBlitz3.ab3@3919>   BSR pokedata1b
000226A8 <AmiBlitz3.ab3@3920>   MOVE.l data1,d1
000226AC <AmiBlitz3.ab3@3921>   BTST #0,d1
000226B0 <AmiBlitz3.ab3@3922>   BEQ 'nopad
000226B2 <AmiBlitz3.ab3@3923>   MOVEQ #0,d1
000226B6 <AmiBlitz3.ab3@3924>   BSR pokedata1b
000226BA <AmiBlitz3.ab3@3927>   MOVEM.l (a7)+,a0-a1/d2/d3
000226BE <AmiBlitz3.ab3@3928> BRA 'noinc2
000226C4 <AmiBlitz3.ab3@3931>   MOVE.l sourceline,D1
000226CA <AmiBlitz3.ab3@3933>   JSR writelong
000226CC <AmiBlitz3.ab3@3934>   MOVE.l A5,D1
000226D2 <AmiBlitz3.ab3@3935>   SUB.l sourceline,D1
000226D8 <AmiBlitz3.ab3@3937>   JSR writeword
000226DA <AmiBlitz3.ab3@3940>   MOVEQ.l #$00,D1
000226E0 <AmiBlitz3.ab3@3941>   JSR writeword                                            ; was: BSR.w writeword
000226E4 <AmiBlitz3.ab3@3942>   MOVEM.l (A7)+,D0-D1
000226E6 <AmiBlitz3.ab3@3945> RTS
000226EC <AmiBlitz3.ab3@3949>   TST.b debugmode                                          ;extern debug
000226F0 <AmiBlitz3.ab3@3950>    BEQ.b undodebug__rts
000226F6 <AmiBlitz3.ab3@3951>   TST.b dirmode
000226FA <AmiBlitz3.ab3@3952>   BNE undodebug__rts
00022704 <AmiBlitz3.ab3@3957>   MOVE.w d_nomemleft,dontwrite
0002270E <AmiBlitz3.ab3@3958>   MOVE.l d_bigpc,bigpc
00022718 <AmiBlitz3.ab3@3959>   MOVE.l d_pc,destpointer
00022722 <AmiBlitz3.ab3@3960>   MOVE.l cont_pc2,cont_pc
00022724 <AmiBlitz3.ab3@3963> RTS
0002272E <AmiBlitz3.ab3@3967>   MOVE.l #forthstack,forthsp
00022738 <AmiBlitz3.ab3@3968>   MOVE.l #precstack,precsp
0002273E <AmiBlitz3.ab3@3969>   CLR.w regnum
00022744 <AmiBlitz3.ab3@3970>   CLR.w nonew
0002274A <AmiBlitz3.ab3@3971>   CLR.w sbasegot
00022754 <AmiBlitz3.ab3@3972>   MOVE.w varcodelen,oldvcodelen
0002275A <AmiBlitz3.ab3@3973>   CLR.w varcodelen
00022762 <AmiBlitz3.ab3@3974>   MOVE.w #-1,lasta6
00022764 <AmiBlitz3.ab3@3975> RTS
0002276A <AmiBlitz3.ab3@3979>   TST.w linemode
0002276E <AmiBlitz3.ab3@3980>   BMI.b smode__skip
00022772 <AmiBlitz3.ab3@3981>   BSR.w undodebug
00022778 <AmiBlitz3.ab3@3982>   MOVE.w linemode,D1
0002277A <AmiBlitz3.ab3@3983>   ADDQ.w #4,A7
0002277C <AmiBlitz3.ab3@3984>   LSL.w #2,D1
00022782 <AmiBlitz3.ab3@3985>   LEA modetable,A0
00022786 <AmiBlitz3.ab3@3986>   MOVEA.l $0(A0,D1.W),A0
0002278A <AmiBlitz3.ab3@3987>   BSR.w reget
0002278C <AmiBlitz3.ab3@3990> JMP (A0)                                                   ;jumptokenroutine
0002278E <AmiBlitz3.ab3@3993> RTS
00022796 <AmiBlitz3.ab3@3998>   MOVE.w #0,leaa0a0+2
0002279C <AmiBlitz3.ab3@3999>   CLR.b nowdeclare
000227A2 <AmiBlitz3.ab3@4000>   CLR.b notypecheck
000227A8 <AmiBlitz3.ab3@4001>   CLR.l lasttoken
000227AE <AmiBlitz3.ab3@4002>   CLR.b doimmediate
000227B4 <AmiBlitz3.ab3@4003>   CLR.w vartype
000227BA <AmiBlitz3.ab3@4004>   CLR.w regnumfunc
000227C0 <AmiBlitz3.ab3@4005>   CLR.b optistring
000227C6 <AmiBlitz3.ab3@4006>   CLR.b iniffcommand
000227CC <AmiBlitz3.ab3@4007>   CLR.w instringon  ; new
000227D2 <AmiBlitz3.ab3@4008>   CLR.b funccall
000227D8 <AmiBlitz3.ab3@4009>   CLR.l currentfunccall
000227DE <AmiBlitz3.ab3@4010>   CLR.l leftsidetype
000227E4 <AmiBlitz3.ab3@4011>   CLR.l rightsidetype
000227EA <AmiBlitz3.ab3@4012>   CLR.w leftsideflagmask
000227F0 <AmiBlitz3.ab3@4013>   CLR.w rightsideflagmask
000227F6 <AmiBlitz3.ab3@4014>   CLR.b peekaddrsize
000227FC <AmiBlitz3.ab3@4015>   CLR.b blitzparloop
00022802 <AmiBlitz3.ab3@4016>   CLR.b funcparloop
00022808 <AmiBlitz3.ab3@4017>   CLR.w parnum           ;7.2014
0002280E <AmiBlitz3.ab3@4018>   TST.b debugmode
00022812 <AmiBlitz3.ab3@4019>    BEQ 'fpu
0002281C <AmiBlitz3.ab3@4025>   MOVE.b fpu,iee
00022820 <AmiBlitz3.ab3@4026>   MOVE.w stopit(PC),D0
00022824 <AmiBlitz3.ab3@4027>   BNE chkstop_chkb
00022828 <AmiBlitz3.ab3@4028>   BSR.w chkstop                                          ; message here
0002282E <AmiBlitz3.ab3@4031>   SUBQ.w #1,stopit
00022832 <AmiBlitz3.ab3@4034>   BSR.w findmacro                                          ;macro
00022838 <AmiBlitz3.ab3@4088>   TST.b debugmode
0002283C <AmiBlitz3.ab3@4089>    BEQ.s 'l10
00022842 <AmiBlitz3.ab3@4090>   TST.b exdebug
00022846 <AmiBlitz3.ab3@4091>   BEQ 'l10a
00022848 <AmiBlitz3.ab3@4092>   MOVE.w (a5),d0
0002284C <AmiBlitz3.ab3@4093>   CMP.w #$8025,d0
00022850 <AmiBlitz3.ab3@4094>    BEQ 'l10
00022854 <AmiBlitz3.ab3@4097>   BSR.w debugstuffa                                         ;insert runtimecode debugcode
00022858 <AmiBlitz3.ab3@4101>   BSR.w get1bytemain                                       ;gettokenmain
0002285C <AmiBlitz3.ab3@4102>    BEQ.w undodebug
00022860 <AmiBlitz3.ab3@4103>   CMP.w #$002b,d0                                            ;check for + cast sign
00022864 <AmiBlitz3.ab3@4104>     BNE 'lb2
00022868 <AmiBlitz3.ab3@4105>     BSR.w get1bytemain
00022870 <AmiBlitz3.ab3@4106>     MOVE.b #1,notypecheck
0002287A <AmiBlitz3.ab3@4114>   MOVE.l #forthstack,forthsp
00022884 <AmiBlitz3.ab3@4115>   MOVE.l #precstack,precsp
0002288A <AmiBlitz3.ab3@4116>   CLR.w regnum
00022890 <AmiBlitz3.ab3@4117>   CLR.w nonew
00022896 <AmiBlitz3.ab3@4118>   CLR.w sbasegot
000228A0 <AmiBlitz3.ab3@4119>   MOVE.w varcodelen,oldvcodelen
000228A6 <AmiBlitz3.ab3@4121>   CLR.w varcodelen
000228AE <AmiBlitz3.ab3@4122>   MOVE.w #$FFFF,lasta6
000228B2 <AmiBlitz3.ab3@4124>   BSR.w smode
000228B4 <AmiBlitz3.ab3@4125>   TST.w D0
000228B8 <AmiBlitz3.ab3@4126>   BMI.w get_tokencode
000228BC <AmiBlitz3.ab3@4127>   CMP.w #$2E,D0
000228C0 <AmiBlitz3.ab3@4128>    BEQ.w JL_0_4644                                         ;shortlist
000228C4 <AmiBlitz3.ab3@4129>   CMP.w #"#",D0
000228C8 <AmiBlitz3.ab3@4130>    BEQ.w JL_0_4718                                         ;constant found
000228CC <AmiBlitz3.ab3@4131>   CMP.w #$27,D0
000228D0 <AmiBlitz3.ab3@4132>    BEQ.w JL_0_4638                                         ;local label
000228D6 <AmiBlitz3.ab3@4133>   MOVE.l A5,letstart
000228DC <AmiBlitz3.ab3@4134>   JSR getparameter
000228E0 <AmiBlitz3.ab3@4135>   BSR.w reget
000228E4 <AmiBlitz3.ab3@4136>    BEQ.w JL_0_4658                                         ;label found
000228E8 <AmiBlitz3.ab3@4137>   CMP.w #$7B,D0
000228EC <AmiBlitz3.ab3@4138>    BEQ.w JL_0_475C
000228EE <AmiBlitz3.ab3@4139>   TST.w d0
000228F2 <AmiBlitz3.ab3@4140>    BPL 'll1
000228F8 <AmiBlitz3.ab3@4141>   TST.b newsyntax
000228FC <AmiBlitz3.ab3@4142>    BEQ 'll1
00022902 <AmiBlitz3.ab3@4143>   LEA allowtab,a0
00022904 <AmiBlitz3.ab3@4144>   MOVEQ #0,d1
00022906 <AmiBlitz3.ab3@4145>   MOVE.b d0,d1
0002290A <AmiBlitz3.ab3@4146>   TST.b 0(a0,d1.w)
0002290E <AmiBlitz3.ab3@4147>    BNE 'll1
00022910 <AmiBlitz3.ab3@4148>   SUBQ.l #2,a5
00022918 <AmiBlitz3.ab3@4149>   MOVE.w #":",lastchar                                     ;no doublepoint
0002291C <AmiBlitz3.ab3@4150> BRA JL_0_4658
00022924 <AmiBlitz3.ab3@4153>   CMP.l #"equ ",-1(a5)
00022928 <AmiBlitz3.ab3@4154>    BEQ 'll4
00022930 <AmiBlitz3.ab3@4155>   CMP.l #"EQU ",-1(a5)
00022934 <AmiBlitz3.ab3@4156>    BNE 'll2
00022936 <AmiBlitz3.ab3@4159>   ADDQ.l #2,a5
0002293A <AmiBlitz3.ab3@4160>   BSR.w findlabel2
0002293E <AmiBlitz3.ab3@4161>   BEQ.w 'lf1
00022942 <AmiBlitz3.ab3@4162>   BSR.w addlabelhash
0002294A <AmiBlitz3.ab3@4163>   MOVE.l #$1,$4(A2)
00022952 <AmiBlitz3.ab3@4166>   CMPI.l #$1,$4(A2)
00022956 <AmiBlitz3.ab3@4167>    BNE.w illconerr
0002295A <AmiBlitz3.ab3@4168>   BSR get1bytemain
0002295C <AmiBlitz3.ab3@4169>   MOVE.l A2,-(A7)
0002295E <AmiBlitz3.ab3@4180>   SUBQ.l #1,a5
00022960 <AmiBlitz3.ab3@4183>   SUBQ.l #1,a5
00022966 <AmiBlitz3.ab3@4184>   JSR AJL_0_BF6E
00022968 <AmiBlitz3.ab3@4185>   MOVEA.l (A7)+,A2
0002296C <AmiBlitz3.ab3@4186>   MOVE.l D3,$8(A2)
0002296E <AmiBlitz3.ab3@4187>   RTS
00022972 <AmiBlitz3.ab3@4188>   BSR get1bytemain
0002297A <AmiBlitz3.ab3@4191>   CMP.l #"SET ",-1(a5)
0002297E <AmiBlitz3.ab3@4192>   BNE 'll3
00022982 <AmiBlitz3.ab3@4193> BRA 'll4
00022988 <AmiBlitz3.ab3@4196> JMP AJL_0_DEA6
0002298C <AmiBlitz3.ab3@4199>   CMP.w #-$7FDE,D0
00022990 <AmiBlitz3.ab3@4200>   BEQ.w get_tokencode
00022994 <AmiBlitz3.ab3@4201> BRA.w undodebug
00022998 <AmiBlitz3.ab3@4204>   BSR.w undodebug
0002299C <AmiBlitz3.ab3@4205>   BSR.w createlab
000229A0 <AmiBlitz3.ab3@4206> BRA.w JL_0_466E
000229A4 <AmiBlitz3.ab3@4209>   BSR.w get1bytemain
000229A8 <AmiBlitz3.ab3@4210>    BEQ.w JL_0_462C
000229AC <AmiBlitz3.ab3@4211>   CMP.w #"'",D0
000229B0 <AmiBlitz3.ab3@4212>    BEQ.w JL_0_4638
000229B4 <AmiBlitz3.ab3@4213>    BSR.w makename2
000229B6 <AmiBlitz3.ab3@4214>    TST.w d0
000229BA <AmiBlitz3.ab3@4215>    BPL 'll1
000229BC <AmiBlitz3.ab3@4216>    SUBQ.l #2,a5
000229C4 <AmiBlitz3.ab3@4217>    MOVE.w #":",lastchar
000229C8 <AmiBlitz3.ab3@4218> BRA JL_0_4658                                              ;????
000229CC <AmiBlitz3.ab3@4222>   BSR.w undodebug
000229D2 <AmiBlitz3.ab3@4223>   LEA ptr_parameterstore,A0
000229D8 <AmiBlitz3.ab3@4224>   LEA lastgloballabel,A1
000229DA <AmiBlitz3.ab3@4227>   MOVE.b (A0)+,(A1)+
000229DE <AmiBlitz3.ab3@4228>    BNE.w JL_0_4668
000229E2 <AmiBlitz3.ab3@4231>   BSR.w findlabel2
000229E6 <AmiBlitz3.ab3@4232>    BEQ.w JL_0_4698
000229EA <AmiBlitz3.ab3@4233>    BSR.w addlabelhash
000229EE <AmiBlitz3.ab3@4236>   CLR.l $4(A2)
000229F6 <AmiBlitz3.ab3@4237>   MOVE.l destpointer,$8(A2)
000229FE <AmiBlitz3.ab3@4240>   MOVE.w procnum,$10(A2)
00022A00 <AmiBlitz3.ab3@4241> RTS
00022A04 <AmiBlitz3.ab3@4245>   MOVE.l $4(A2),D0
00022A08 <AmiBlitz3.ab3@4246>   BTST #$0,D0
00022A0C <AmiBlitz3.ab3@4247>    BNE.w illlaberr
00022A12 <AmiBlitz3.ab3@4248>   TST.w pass
00022A16 <AmiBlitz3.ab3@4250>   MOVE.l $8(A2),D0
00022A1A <AmiBlitz3.ab3@4251>    BNE.w duplaberr
00022A22 <AmiBlitz3.ab3@4252>   MOVE.w procnum,$10(A2)
00022A26 <AmiBlitz3.ab3@4253>   MOVEA.l $4(A2),A3
00022A2C <AmiBlitz3.ab3@4254>   MOVEA.l _execbase,A6
00022A30 <AmiBlitz3.ab3@4257>   CMPA.w #$0,A3
00022A34 <AmiBlitz3.ab3@4258>    BEQ.w JL_0_467A
00022A38 <AmiBlitz3.ab3@4259>     MOVE.l $4(A2),D1
00022A3C <AmiBlitz3.ab3@4260>     BTST #$0,D1
00022A40 <AmiBlitz3.ab3@4261>     BNE.w illlaberr
00022A44 <AmiBlitz3.ab3@4262>   MOVE.w $8(A3),D1
00022A48 <AmiBlitz3.ab3@4263>   CMP.w $10(A2),D1
00022A4C <AmiBlitz3.ab3@4264>    BEQ.w JL_0_46DC
00022A52 <AmiBlitz3.ab3@4265>    TST.b newsyntax
00022A56 <AmiBlitz3.ab3@4266>    BEQ 'l1
00022A5A <AmiBlitz3.ab3@4267> BRA.w JL_0_46DC                                            ;label context out of range fix
00022A62 <AmiBlitz3.ab3@4272>   MOVE.w $A(A3),linenumat+2                                ;move 10(a3),linenumat org source
00022A66 <AmiBlitz3.ab3@4273> BRA.w referr
00022A6C <AmiBlitz3.ab3@4276>   MOVE.w dontwrite,D1
00022A70 <AmiBlitz3.ab3@4277>    BNE.w JL_0_4706
00022A74 <AmiBlitz3.ab3@4278>   MOVEA.l $4(A3),A1
00022A7A <AmiBlitz3.ab3@4279>   BTST #$0,$7(A3)
00022A7E <AmiBlitz3.ab3@4280>    BEQ.w JL_0_4700
00022A80 <AmiBlitz3.ab3@4281>   SUBQ.w #1,A1
00022A86 <AmiBlitz3.ab3@4282>   MOVE.l data2,(A1)
00022A8A <AmiBlitz3.ab3@4283> BRA.w JL_0_4706
00022A90 <AmiBlitz3.ab3@4286>   MOVE.l destpointer,(A1)
00022A92 <AmiBlitz3.ab3@4289>   MOVEA.l A3,A1
00022A94 <AmiBlitz3.ab3@4290>   MOVEA.l (A3),A3
00022A98 <AmiBlitz3.ab3@4291>   MOVE.l A3,$4(A2)
00022A9A <AmiBlitz3.ab3@4292>   MOVEQ.l #$0C+2,D0
00022AA0 <AmiBlitz3.ab3@4293>   MOVE.l mempool,a0
00022AA6 <AmiBlitz3.ab3@4294>   MOVEA.l _execbase,A6
00022AAA <AmiBlitz3.ab3@4295>   JSR _FreePooled(A6)
00022AAE <AmiBlitz3.ab3@4296> BRA.w JL_0_46BC
00022AB8 <AmiBlitz3.ab3@4301>    MOVE.l #forthstack,forthsp
00022AC2 <AmiBlitz3.ab3@4302>   MOVE.l #precstack,precsp
00022AC6 <AmiBlitz3.ab3@4303>    BSR.w getparameter2
00022ACA <AmiBlitz3.ab3@4306>   BSR.w findlabel2
00022ACE <AmiBlitz3.ab3@4307>    BEQ.w JL_0_4738
00022AD2 <AmiBlitz3.ab3@4308>    BSR.w addlabelhash
00022ADA <AmiBlitz3.ab3@4309>   MOVE.l #$1,$4(A2)
00022ADE <AmiBlitz3.ab3@4310> BRA.w JL_0_4744
00022AE6 <AmiBlitz3.ab3@4313>   CMPI.l #$1,$4(A2)
00022AEA <AmiBlitz3.ab3@4314>    BNE.w illconerr
00022AEE <AmiBlitz3.ab3@4323>   CMP.w #$3D,D0
00022AF2 <AmiBlitz3.ab3@4324>   BEQ.w JL_0_474E
00022AF4 <AmiBlitz3.ab3@4325> RTS
00022AF6 <AmiBlitz3.ab3@4329>   MOVE.l A2,-(A7)
00022AFC <AmiBlitz3.ab3@4330>   JSR AJL_0_BF6E
00022AFE <AmiBlitz3.ab3@4331>   MOVEA.l (A7)+,A2
00022B02 <AmiBlitz3.ab3@4332>   MOVE.l D3,$8(A2)                                         ;store constant
00022B0A <AmiBlitz3.ab3@4333>   CMP.w #$0a,lastchar
00022B0E <AmiBlitz3.ab3@4334>   BNE 'l1
00022B16 <AmiBlitz3.ab3@4335>   MOVE.w #":",lastchar                                     ;hack to read wizard include files
00022B18 <AmiBlitz3.ab3@4338> RTS
00022B1C <AmiBlitz3.ab3@4341>   BSR.w findproc                                           ;write statement call
00022B20 <AmiBlitz3.ab3@4342>   BEQ _state
00022B26 <AmiBlitz3.ab3@4343>   TST.l unusedfunc
00022B2A <AmiBlitz3.ab3@4344>   BEQ noprocerr
00022B30 <AmiBlitz3.ab3@4346>   JSR gotoendsource
00022B34 <AmiBlitz3.ab3@4349>   TST.b $5(A2)
00022B3A <AmiBlitz3.ab3@4351>   MOVE.l a2,currentfunccall
00022B42 <AmiBlitz3.ab3@4352>   MOVE.b #1,funccall
00022B48 <AmiBlitz3.ab3@4353>   MOVE.b #1,isfunc(a2)
00022B4C <AmiBlitz3.ab3@4354>   MOVE.l $E(A2),-(A7)
00022B4E <AmiBlitz3.ab3@4355>   MOVEQ.l #$00,D0
00022B52 <AmiBlitz3.ab3@4356>   MOVE.b $4(A2),D0
00022B58 <AmiBlitz3.ab3@4357>   MOVE.l d0,parnumtemp
00022B5C <AmiBlitz3.ab3@4358>   BEQ.w JL_0_4786
00022B60 <AmiBlitz3.ab3@4359>   TST.b $20(a2)                                            ;increase if morepar
00022B64 <AmiBlitz3.ab3@4360>   BNE 'no0par
00022B66 <AmiBlitz3.ab3@4361>   MOVE.l a5,a4
00022B6A <AmiBlitz3.ab3@4364>   CMP.b #$20,(a4)+
00022B6E <AmiBlitz3.ab3@4365>   BEQ 'l1
00022B74 <AmiBlitz3.ab3@4366>   CMP.b #"}",-1(a4)
00022B78 <AmiBlitz3.ab3@4367>   BNE  'no0par                                             ;statementcall pars
00022B7A <AmiBlitz3.ab3@4368>   MOVEQ #0,d0
00022B7E <AmiBlitz3.ab3@4371>   LEA $16(A2),A1
00022B80 <AmiBlitz3.ab3@4374>   MOVE.l d1,-(a7)
00022B82 <AmiBlitz3.ab3@4375>   MOVE.b (a1),d2
00022B84 <AmiBlitz3.ab3@4376>   MOVE.l d0,d1
00022B88 <AmiBlitz3.ab3@4377>   CMP.w #4,d2
00022B8C <AmiBlitz3.ab3@4378>   BNE 'l1b
00022B92 <AmiBlitz3.ab3@4379>   ADD.l #$203c,d1
00022B98 <AmiBlitz3.ab3@4381>   JSR writeword
00022B9E <AmiBlitz3.ab3@4382>   MOVE.l #$ffff0000,d1
00022BA4 <AmiBlitz3.ab3@4384>   JSR writelong
00022BA8 <AmiBlitz3.ab3@4385> BRA 'l2b
00022BAE <AmiBlitz3.ab3@4388>   TST.b fpu
00022BB2 <AmiBlitz3.ab3@4389>   BNE 'l1c
00022BB6 <AmiBlitz3.ab3@4390>   CMP.w #5,d2
00022BBA <AmiBlitz3.ab3@4391>   BNE 'l1c
00022BC0 <AmiBlitz3.ab3@4392>   ADD.l #$203c,d1
00022BC6 <AmiBlitz3.ab3@4394>   JSR writeword
00022BCC <AmiBlitz3.ab3@4395>   MOVE.l #$800000c1,d1
00022BD2 <AmiBlitz3.ab3@4397>   JSR writelong
00022BD6 <AmiBlitz3.ab3@4398> BRA 'l2b
00022BDC <AmiBlitz3.ab3@4401>   ADD.l #$70ff,d1
00022BE2 <AmiBlitz3.ab3@4403>   JSR writeword
00022BE8 <AmiBlitz3.ab3@4404>   MOVE.l #$f23c5000,d1
00022BEA <AmiBlitz3.ab3@4405>   MOVE.l d0,d2
00022BEC <AmiBlitz3.ab3@4406>   ASR.l #2,d2
00022BEE <AmiBlitz3.ab3@4407>   ADD.l d2,d1
00022BF4 <AmiBlitz3.ab3@4409>   JSR writelong
00022BF8 <AmiBlitz3.ab3@4410>   MOVE.w #$ffff,d1
00022BFE <AmiBlitz3.ab3@4412>   JSR writeword
00022C00 <AmiBlitz3.ab3@4415>   MOVE.l (a7)+,d1
00022C02 <AmiBlitz3.ab3@4416>   ADDQ.l #1,a1
00022C08 <AmiBlitz3.ab3@4417>   ADD.l #$0200,d0
00022C0E <AmiBlitz3.ab3@4418>   CMP.l #$0e00,d0
00022C12 <AmiBlitz3.ab3@4419>    BEQ syntaxerr
00022C14 <AmiBlitz3.ab3@4420>   TST.b (a1)
00022C18 <AmiBlitz3.ab3@4421>    BNE 'again
00022C1C <AmiBlitz3.ab3@4422> BRA JL_0_4786
00022C26 <AmiBlitz3.ab3@4425>   MOVE.w a2offset,a2offset2
00022C2A <AmiBlitz3.ab3@4426>   LEA $16(A2),A2
00022C30 <AmiBlitz3.ab3@4427>   MOVE.b funcparloop,-(a7)
00022C38 <AmiBlitz3.ab3@4428>   MOVE.b #1,funcparloop
00022C3E <AmiBlitz3.ab3@4429>   MOVE.b blitzparloop,-(a7)
00022C44 <AmiBlitz3.ab3@4430>   CLR.b blitzparloop
00022C48 <AmiBlitz3.ab3@4431>   BSR.w fetchpees2
00022C4E <AmiBlitz3.ab3@4432>   MOVE.b (a7)+,blitzparloop
00022C54 <AmiBlitz3.ab3@4433>   MOVE.b (a7)+,funcparloop
00022C58 <AmiBlitz3.ab3@4434> BRA.w JL_0_478A
00022C5C <AmiBlitz3.ab3@4437>   BSR.w get1bytemain
00022C60 <AmiBlitz3.ab3@4440>   CMP.w #$7D,D0
00022C64 <AmiBlitz3.ab3@4441>    BNE.w morepar_                                          ;syntax error morepar
00022C6A <AmiBlitz3.ab3@4442>    JSR chkstak
00022C6C <AmiBlitz3.ab3@4443>   MOVE.l (A7)+,D1
00022C72 <AmiBlitz3.ab3@4459>    JSR JL_0_AFCA
00022C78 <AmiBlitz3.ab3@4481>   CLR.b funccall
00022C7C <AmiBlitz3.ab3@4482> BRA.w get1bytemain
00022C82 <AmiBlitz3.ab3@4486>   MOVE.l d0,lasttoken
00022C86 <AmiBlitz3.ab3@4487>   CMP.w #$c09f,d0                                          ;hack to use getregd0 instead of getd0
00022C8A <AmiBlitz3.ab3@4488>   BNE 'l2
00022C8E <AmiBlitz3.ab3@4489>    MOVE.w #$dd05,d0
00022C92 <AmiBlitz3.ab3@4492>   CMP.w #$c0a0,d0                                          ;hack to use getregd0 instead of getd0
00022C96 <AmiBlitz3.ab3@4493>   BNE 'l3
00022C9A <AmiBlitz3.ab3@4494>    MOVE.w #$dd06,d0
00022C9E <AmiBlitz3.ab3@4497>   CMP.w #-$7FC4,D0
00022CA2 <AmiBlitz3.ab3@4498>   BCS.w JL_0_47C4
00022CA6 <AmiBlitz3.ab3@4499>     CMP.w #-$7F4D,D0
00022CAA <AmiBlitz3.ab3@4500>     BCC.w JL_0_47C4
00022CB2 <AmiBlitz3.ab3@4501>       BTST #$7,assemblercheck                              ;inline Assembler checking
00022CB6 <AmiBlitz3.ab3@4502>       BNE.b JL_0_47C0
00022CBC <AmiBlitz3.ab3@4503>         TST.b debugmode
00022CC0 <AmiBlitz3.ab3@4504>         BEQ.b 'l10
00022CCA <AmiBlitz3.ab3@4509>           MOVE.w d_nomemleft,dontwrite
00022CD4 <AmiBlitz3.ab3@4510>           MOVE.l d_bigpc,bigpc
00022CDE <AmiBlitz3.ab3@4511>           MOVE.l d_pc,destpointer
00022CE8 <AmiBlitz3.ab3@4512>           MOVE.l cont_pc2,cont_pc
00022CEC <AmiBlitz3.ab3@4518> BRA.w JL_0_612C
00022CF0 <AmiBlitz3.ab3@4521>   BCLR #$F,D0
00022CF2 <AmiBlitz3.ab3@4522>   MOVE.w D0,D1
00022CF6 <AmiBlitz3.ab3@4523>   ANDI.w #$7F00,D1
00022CFA <AmiBlitz3.ab3@4524>   BNE.w JL_0_4856
00022CFE <AmiBlitz3.ab3@4525>     CMP.w #$B3,D0                                          ;intern Instructions
00022D02 <AmiBlitz3.ab3@4526>     BCS.w JL_0_47F2
00022D06 <AmiBlitz3.ab3@4527>       SUBI.w #$77,D0
00022D0A <AmiBlitz3.ab3@4528>       CMP.w #$4B,D0
00022D0E <AmiBlitz3.ab3@4529>       BEQ.w JL_0_4830
00022D12 <AmiBlitz3.ab3@4530>         CMP.w #$46,D0
00022D16 <AmiBlitz3.ab3@4531>         BEQ.w JL_0_4830
00022D1A <AmiBlitz3.ab3@4532> BRA.w JL_0_4834                                            ; change tokennum
00022D1E <AmiBlitz3.ab3@4535>     CMP.w #$38,D0
00022D22 <AmiBlitz3.ab3@4536>      BEQ.w JL_0_4830
00022D26 <AmiBlitz3.ab3@4537>     CMP.w #$39,D0
00022D2A <AmiBlitz3.ab3@4538>      BEQ.w JL_0_4830
00022D2E <AmiBlitz3.ab3@4539>     CMP.w #$D,D0
00022D32 <AmiBlitz3.ab3@4540>      BEQ.w JL_0_4830
00022D36 <AmiBlitz3.ab3@4541>     CMP.w #$12,D0
00022D3A <AmiBlitz3.ab3@4542>      BEQ.w JL_0_4830
00022D3E <AmiBlitz3.ab3@4543>     CMP.w #$13,D0
00022D42 <AmiBlitz3.ab3@4544>      BEQ.w JL_0_4830
00022D46 <AmiBlitz3.ab3@4545>     CMP.w #$1A,D0
00022D4A <AmiBlitz3.ab3@4546>      BEQ.w JL_0_4830
00022D4E <AmiBlitz3.ab3@4547>     CMP.w #$2A,D0
00022D52 <AmiBlitz3.ab3@4548>      BHI.w JL_0_4834
00022D56 <AmiBlitz3.ab3@4549>     CMP.w #$23,D0
00022D5A <AmiBlitz3.ab3@4550>      BCS.b JL_0_4834
00022D5E <AmiBlitz3.ab3@4553>   BSR.w undodebug
00022D60 <AmiBlitz3.ab3@4556>   SUBQ.w #1,D0
00022D62 <AmiBlitz3.ab3@4557>   LSL.w #2,D0
00022D68 <AmiBlitz3.ab3@4564>   LEA instructionbase,A0
00022D6C <AmiBlitz3.ab3@4565>   MOVEA.l $0(A0,D0.W),A0
00022D6E <AmiBlitz3.ab3@4566>   MOVE.l A0,-(A7)
00022D72 <AmiBlitz3.ab3@4567> BRA.w get1bytemain
00022D74 <AmiBlitz3.ab3@4573>   MOVE.w D0,D1
00022D78 <AmiBlitz3.ab3@4574>    BSR.w searchinstr
00022D7E <AmiBlitz3.ab3@4575>    TST.b newmode
00022D82 <AmiBlitz3.ab3@4576>    BNE compile_term
00022D88 <AmiBlitz3.ab3@4577>   BTST #$2,$1(A3)                                          ;a3 = pointer to instr ;toke stuff in a3
00022D8C <AmiBlitz3.ab3@4578>    BNE.w stamigalib
00022D92 <AmiBlitz3.ab3@4579>   BTST #$0,$1(A3)
00022D96 <AmiBlitz3.ab3@4580>    BEQ.w needreturn_                                       ;syntax err need return   ;check it's a statement
00022D9A <AmiBlitz3.ab3@4581>    BSR.w JL_0_49EA                                         ;does it need a size specifier?
00022D9E <AmiBlitz3.ab3@4582>    BSR.w JL_0_66F6
00022DA4 <AmiBlitz3.ab3@4588>   MOVE.w numreps,-(A7)
00022DAA <AmiBlitz3.ab3@4589>   MOVE.w userp,-(A7)
00022DB0 <AmiBlitz3.ab3@4590>   MOVE.w a2offset,-(A7)
00022DB2 <AmiBlitz3.ab3@4591>   MOVE.l A2,-(A7)                                          ;recurs.
00022DBC <AmiBlitz3.ab3@4592>   MOVE.w convsize,userp
00022DC0 <AmiBlitz3.ab3@4593>   LEA $6(A3),A1
00022DC2 <AmiBlitz3.ab3@4597>    MOVE.w (A1),D2
00022DC6 <AmiBlitz3.ab3@4598>    BMI.w SERR                                              ;statement syntax error
00022DCA <AmiBlitz3.ab3@4599>   ANDI.w #$FF,D2
00022DCC <AmiBlitz3.ab3@4600>   CMP.w D2,D1
00022DD0 <AmiBlitz3.ab3@4601>    BEQ.w JL_0_48E0
00022DD4 <AmiBlitz3.ab3@4602>    BCS.w JL_0_48CC
00022DD6 <AmiBlitz3.ab3@4603>   MOVE.b (A1),D3
00022DDA <AmiBlitz3.ab3@4604>   ANDI.w #$7,D3
00022DDE <AmiBlitz3.ab3@4605>    BEQ.w JL_0_48CC
00022DE0 <AmiBlitz3.ab3@4606>   MOVE.w D2,D4
00022DE2 <AmiBlitz3.ab3@4607>   SUB.w D3,D4
00022DE4 <AmiBlitz3.ab3@4608>   MOVEQ.l #$00,D5
00022DE6 <AmiBlitz3.ab3@4609>   MOVE.w D1,D5
00022DE8 <AmiBlitz3.ab3@4610>   SUB.w D4,D5
00022DEA <AmiBlitz3.ab3@4611>   DIVU D3,D5
00022DEC <AmiBlitz3.ab3@4612>   SWAP D5
00022DEE <AmiBlitz3.ab3@4613>   TST.w D5
00022DF2 <AmiBlitz3.ab3@4614>    BEQ.w JL_0_48E0
00022DF4 <AmiBlitz3.ab3@4617>   ADDQ.w #2,A1
00022DF6 <AmiBlitz3.ab3@4618>   ADDA.w D2,A1
00022DFA <AmiBlitz3.ab3@4619>    BSR.w aligna1
00022DFE <AmiBlitz3.ab3@4620>    BSR.w skiplibreg
00022E02 <AmiBlitz3.ab3@4621>   LEA $C(A1),A1
00022E06 <AmiBlitz3.ab3@4622> BRA.w JL_0_489A
00022E08 <AmiBlitz3.ab3@4625>   MOVE.w (a3),d2
00022E0C <AmiBlitz3.ab3@4626>   BTST #1,d2
00022E10 <AmiBlitz3.ab3@4627>   BEQ statement_
00022E14 <AmiBlitz3.ab3@4628>   CMP.w #1,d1
00022E18 <AmiBlitz3.ab3@4629>   BEQ statement_
00022E1C <AmiBlitz3.ab3@4632>   CMP.b #$20,(a5)+
00022E20 <AmiBlitz3.ab3@4633>   BEQ 'l2
00022E26 <AmiBlitz3.ab3@4634>   CMP.b #"(",-2(a5)
00022E2A <AmiBlitz3.ab3@4635>   BNE 'l1
00022E2E <AmiBlitz3.ab3@4636> BRA parameter_
00022E32 <AmiBlitz3.ab3@4639> BRA inbrackets_
00022E34 <AmiBlitz3.ab3@4642>   MOVE.b (A1),D2
00022E36 <AmiBlitz3.ab3@4643>   LSL.w #8,D2
00022E38 <AmiBlitz3.ab3@4644>   OR.w D2,D1
00022E3A <AmiBlitz3.ab3@4645>   MOVE.l A1,-(A7)
00022E40 <AmiBlitz3.ab3@4646>   CLR.w a2offset
00022E42 <AmiBlitz3.ab3@4647>   TST.w D1
00022E46 <AmiBlitz3.ab3@4648>    BEQ.w JL_0_4900
00022E4A <AmiBlitz3.ab3@4649>   LEA $2(A1),A2
00022E50 <AmiBlitz3.ab3@4651>   MOVE.l lasttoken,-(a7)
00022E56 <AmiBlitz3.ab3@4652>   CLR.l lasttoken
00022E5A <AmiBlitz3.ab3@4653>   BSR.w fetchlibps
00022E60 <AmiBlitz3.ab3@4654>   MOVE.l (a7)+,lasttoken
00022E64 <AmiBlitz3.ab3@4655> BRA.w JL_0_4904
00022E68 <AmiBlitz3.ab3@4658>   BSR.w get1bytemain
00022E6A <AmiBlitz3.ab3@4661>   MOVEA.l (A7)+,A1
00022E6C <AmiBlitz3.ab3@4662>   MOVEA.l (A7)+,A2
00022E72 <AmiBlitz3.ab3@4663>   MOVE.w a2offset,D1
00022E76 <AmiBlitz3.ab3@4664>    BEQ.w JL_0_493A
00022E7C <AmiBlitz3.ab3@4665>   MOVE.w D1,preplibst+2
00022E82 <AmiBlitz3.ab3@4666>   MOVE.l preplibst,D1
00022E88 <AmiBlitz3.ab3@4667>    JSR writelong                                           ;write array offset stack correct
00022E92 <AmiBlitz3.ab3@4668>   MOVE.w numreps,movenumrep+2
00022E96 <AmiBlitz3.ab3@4669>    BEQ.w JL_0_493A
00022E9C <AmiBlitz3.ab3@4670>   MOVE.l movenumrep,D1
00022EA2 <AmiBlitz3.ab3@4671>    JSR writelong
00022EA8 <AmiBlitz3.ab3@4675>   JSR userjsr
00022EAE <AmiBlitz3.ab3@4678>   MOVE.w a2offset,D1
00022EB2 <AmiBlitz3.ab3@4679>    BEQ.w JL_0_4974
00022EB6 <AmiBlitz3.ab3@4680>   CMP.w #$8,D1
00022EBA <AmiBlitz3.ab3@4681>    BHI.w JL_0_4964
00022EBE <AmiBlitz3.ab3@4682>   ANDI.w #$7,D1
00022EC0 <AmiBlitz3.ab3@4683>   LSL.w #8,D1
00022EC2 <AmiBlitz3.ab3@4684>   LSL.w #1,D1
00022EC6 <AmiBlitz3.ab3@4685>   ORI.w #$504F,D1
00022ECC <AmiBlitz3.ab3@4687>   JSR writeword
00022ED0 <AmiBlitz3.ab3@4688> BRA.w JL_0_4974
00022ED6 <AmiBlitz3.ab3@4691>   MOVE.w D1,fixlibst+2
00022EDC <AmiBlitz3.ab3@4692>   MOVE.l fixlibst,D1
00022EE2 <AmiBlitz3.ab3@4693>   JSR writelong
00022EE8 <AmiBlitz3.ab3@4696>   MOVE.w (A7)+,a2offset
00022EEE <AmiBlitz3.ab3@4697>   MOVE.w (A7)+,userp
00022EF4 <AmiBlitz3.ab3@4698>   MOVE.w (A7)+,numreps
00022EF8 <AmiBlitz3.ab3@4699> BRA.w reget
00022EFC <AmiBlitz3.ab3@4703>   MOVEM.l A2-A3,-(A7)
00022F02 <AmiBlitz3.ab3@4704>   CLR.b doublepeek
00022F08 <AmiBlitz3.ab3@4705>   MOVE.l A5,lastsourcepos
00022F0C <AmiBlitz3.ab3@4706>    BSR.w getchar
00022F10 <AmiBlitz3.ab3@4707>   CMP.w #$2E,D0
00022F14 <AmiBlitz3.ab3@4708>    BEQ.w JL_0_49B4
00022F1A <AmiBlitz3.ab3@4709>   MOVEA.l defaulttype,A2
00022F1E <AmiBlitz3.ab3@4710>   CMP.w #$24,D0
00022F22 <AmiBlitz3.ab3@4711>    BNE.w JL_0_49CA
00022F24 <AmiBlitz3.ab3@4712>   MOVEQ.l #$07,D1
00022F28 <AmiBlitz3.ab3@4713> BRA.w JL_0_49DE
00022F2C <AmiBlitz3.ab3@4716>   BSR.w getparameter2
00022F30 <AmiBlitz3.ab3@4717>   BEQ.w syntaxerr
00022F36 <AmiBlitz3.ab3@4718>   LEA newtypebase,A2
00022F3A <AmiBlitz3.ab3@4719>   BSR.w findtype
00022F3E <AmiBlitz3.ab3@4720>   BNE.w notypeerr
00022F48 <AmiBlitz3.ab3@4724>   MOVE.w oldqflag,instringon
00022F4E <AmiBlitz3.ab3@4725>   MOVEA.l lastsourcepos,A5
00022F52 <AmiBlitz3.ab3@4730>   MOVE.w $6(A2),D1
00022F58 <AmiBlitz3.ab3@4731>   CMP.w #8,8(a2)
00022F5C <AmiBlitz3.ab3@4732>   BNE 'l1
00022F64 <AmiBlitz3.ab3@4733>   MOVE.b #1,doublepeek
00022F6A <AmiBlitz3.ab3@4737>   MOVE.w D1,convsize
00022F6E <AmiBlitz3.ab3@4738>   MOVEM.l (A7)+,A2-A3
00022F70 <AmiBlitz3.ab3@4739> RTS
00022F76 <AmiBlitz3.ab3@4744>   BTST #$3,$1(A3)
00022F7A <AmiBlitz3.ab3@4745>   BEQ.w JL_0_4A06
00022F7E <AmiBlitz3.ab3@4746>   BSR.w AJL_0_498A                                         ;read peek/poke size
00022F82 <AmiBlitz3.ab3@4748>   ORI.w #$7000,D1
00022F88 <AmiBlitz3.ab3@4749>   JSR writeword
00022F8E <AmiBlitz3.ab3@4750>   ADDQ.w #1,regnum
00022F90 <AmiBlitz3.ab3@4753> RTS
00022F92 <AmiBlitz3.ab3@4759>             Dc.b $10,$12                                   ;MOVE.B  (A2),D0
00022F94 <AmiBlitz3.ab3@4760>             Dc.b $14,$91                                   ;MOVE.B  (A1),(A2)
00022F96 <AmiBlitz3.ab3@4761>             Dc.b $12,$80                                   ;MOVE.B  D0,(A1)
00022F98 <AmiBlitz3.ab3@4765> swapw:      Dc.b $30,$12                                   ;MOVE.W  (A2),D0
00022F9A <AmiBlitz3.ab3@4766>             Dc.b $34,$91                                   ;MOVE.W  (A1),(A2)
00022F9C <AmiBlitz3.ab3@4767>             Dc.b $32,$80                                   ;MOVE.W  D0,(A1)
00022F9E <AmiBlitz3.ab3@4771> swapl:      Dc.b $20,$12                                   ;MOVE.L  (A2),D0
00022FA0 <AmiBlitz3.ab3@4772>             Dc.b $24,$91                                   ;MOVE.L  (A1),(A2)
00022FA2 <AmiBlitz3.ab3@4773>             Dc.b $22,$80                                   ;MOVE.L  D0,(A1)
00022FA4 <AmiBlitz3.ab3@4777> pulla1:     Dc.b $22,$5F                                   ;MOVEA.L (A7)+,A1
00022FA6 <AmiBlitz3.ab3@4780> srctype:    Ds.w 1
00022FAA <AmiBlitz3.ab3@4785>   BSR.w excget
00022FAE <AmiBlitz3.ab3@4786>   CMP.w #$2C,D0
00022FB2 <AmiBlitz3.ab3@4787>    BNE.w syntaxerr
00022FB8 <AmiBlitz3.ab3@4788>   MOVE.b D2,srctype
00022FBE <AmiBlitz3.ab3@4789>   MOVE.w pusha2,D1
00022FC4 <AmiBlitz3.ab3@4790>   JSR writeword
00022FC8 <AmiBlitz3.ab3@4791>   BSR.w get1bytemain
00022FCC <AmiBlitz3.ab3@4792>   BSR.w excget
00022FD2 <AmiBlitz3.ab3@4793>   CMP.b srctype,D2
00022FD6 <AmiBlitz3.ab3@4794>    BNE.w excerr2
00022FDC <AmiBlitz3.ab3@4795>   MOVE.w pulla1,D1
00022FE2 <AmiBlitz3.ab3@4796>    JSR writeword
00022FE6 <AmiBlitz3.ab3@4797>   CMP.b #$2,D2
00022FEA <AmiBlitz3.ab3@4798>    BCS.w JL_0_4B2A
00022FEE <AmiBlitz3.ab3@4799>    BEQ.w JL_0_4B1E
00022FF2 <AmiBlitz3.ab3@4800>   LEA swapl(PC),A0
00022FF6 <AmiBlitz3.ab3@4801>   LEA swaplf(PC),A1
00022FFC <AmiBlitz3.ab3@4802> JMP pokecode
00023000 <AmiBlitz3.ab3@4805>   LEA swapw(PC),A0
00023004 <AmiBlitz3.ab3@4806>   LEA swapwf(PC),A1
0002300A <AmiBlitz3.ab3@4807> JMP pokecode
0002300E <AmiBlitz3.ab3@4810>   LEA swapb(PC),A0
00023012 <AmiBlitz3.ab3@4811>   LEA swapbf(PC),A1
00023018 <AmiBlitz3.ab3@4812> JMP pokecode
0002301E <AmiBlitz3.ab3@4816>   JSR getparameter
00023022 <AmiBlitz3.ab3@4817>   BSR.w JL_0_8E3C
00023028 <AmiBlitz3.ab3@4818>   JSR calcvar
0002302C <AmiBlitz3.ab3@4819>   BTST #$E,D2
00023030 <AmiBlitz3.ab3@4820>    BEQ.w JL_0_4B4E
00023034 <AmiBlitz3.ab3@4821>   MOVE.b #$4,D2
00023036 <AmiBlitz3.ab3@4824>   TST.b D2
0002303A <AmiBlitz3.ab3@4825>    BEQ.w excerr
0002303E <AmiBlitz3.ab3@4826>   BTST #$F,D2
00023042 <AmiBlitz3.ab3@4827>    BNE.w JL_0_4B6A
00023048 <AmiBlitz3.ab3@4828>   MOVE.w leaamp,D1
0002304E <AmiBlitz3.ab3@4829>    JSR pokewda5s
00023050 <AmiBlitz3.ab3@4830>   MOVE.w D3,D1
00023056 <AmiBlitz3.ab3@4831> JMP writeword
00023058 <AmiBlitz3.ab3@4834> RTS
0002305E <AmiBlitz3.ab3@4844>   MOVE.l mempool,a0
00023064 <AmiBlitz3.ab3@4845>   MOVEA.l _execbase,A6
00023068 <AmiBlitz3.ab3@4846> JMP _AllocPooled(a6)
0002306C <AmiBlitz3.ab3@4850>   MOVE.w #$BF00,D1
00023072 <AmiBlitz3.ab3@4851> JMP Atokejsr
00023076 <AmiBlitz3.ab3@4855>   CMP.w #-$7FFA,D0
0002307A <AmiBlitz3.ab3@4856>    BEQ.w popreturn
0002307E <AmiBlitz3.ab3@4857>   CMP.w #-$7FEA,D0
00023082 <AmiBlitz3.ab3@4858>    BEQ.w popnext2
00023086 <AmiBlitz3.ab3@4859>   CMP.w #-$7FF2,D0
0002308A <AmiBlitz3.ab3@4860>    BEQ.w popselect2
0002308E <AmiBlitz3.ab3@4861>   CMP.w #-$7FF5,D0
00023092 <AmiBlitz3.ab3@4862>    BEQ.w get1bytemain
00023096 <AmiBlitz3.ab3@4863>   CMP.w #-$7FF4,D0
0002309A <AmiBlitz3.ab3@4864>    BEQ.w get1bytemain
0002309E <AmiBlitz3.ab3@4865>   CMP.w #-$7FEC,D0
000230A2 <AmiBlitz3.ab3@4866>    BEQ.w get1bytemain
000230A6 <AmiBlitz3.ab3@4867>   CMP.w #-$7F45,D0
000230AA <AmiBlitz3.ab3@4868>    BEQ.w get1bytemain
000230AE <AmiBlitz3.ab3@4869> BRA.w syntaxerr
000230B4 <AmiBlitz3.ab3@4872>   TST.b debugmode
000230B8 <AmiBlitz3.ab3@4873>    BEQ.w popreturn__norerr
000230BC <AmiBlitz3.ab3@4874>   LEA popreturn__rfix(PC),A0
000230C0 <AmiBlitz3.ab3@4875>   LEA popreturn__rfixf(PC),A1
000230C6 <AmiBlitz3.ab3@4876>    JSR pokecode
000230CA <AmiBlitz3.ab3@4877>   MOVE.w #$C305,D1
000230D0 <AmiBlitz3.ab3@4878>    JSR Atokejsr
000230D4 <AmiBlitz3.ab3@4879>   MOVE.w popreturn__rfix2(PC),D1
000230DA <AmiBlitz3.ab3@4881>    JSR writeword
000230DE <AmiBlitz3.ab3@4882> BRA.w get1bytemain
000230E4 <AmiBlitz3.ab3@4886>   CMPI.w #$6753,$4(A7)                                     ;#"gS",4(A7)
000230E8 <AmiBlitz3.ab3@4887>   BEQ.w popreturn__rfix2
000230EE <AmiBlitz3.ab3@4890>   JSR $20000                                               ;reass
000230F0 <AmiBlitz3.ab3@4893>   ADDQ.w #6,A7
000230F4 <AmiBlitz3.ab3@4897>   MOVE.w popreturn__sfix(PC),D1
000230FA <AmiBlitz3.ab3@4898>   JSR writeword
000230FE <AmiBlitz3.ab3@4899> BRA.w get1bytemain
00023100 <AmiBlitz3.ab3@4904>   Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
00023106 <AmiBlitz3.ab3@4909>   MOVE.l firstfor,D0
0002310A <AmiBlitz3.ab3@4910>    BEQ.w noforerr
0002310C <AmiBlitz3.ab3@4911>   MOVEA.l D0,A2
00023110 <AmiBlitz3.ab3@4912>    BSR.w get1bytemain
00023114 <AmiBlitz3.ab3@4913>   BSR.w popnext
0002311A <AmiBlitz3.ab3@4916>   TST.b debugmode
0002311E <AmiBlitz3.ab3@4917>    BEQ.w popnext3__ner
00023124 <AmiBlitz3.ab3@4918>   MOVE.l nextfixw2,D1
0002312A <AmiBlitz3.ab3@4919>   CMPI.w #$3,$C(A2)
0002312E <AmiBlitz3.ab3@4920>    BCS.w writelong2
00023134 <AmiBlitz3.ab3@4921>   MOVE.l nextfixl2,D1
0002313A <AmiBlitz3.ab3@4922> writelong2 JMP  writelong
00023140 <AmiBlitz3.ab3@4925>   CMPI.w #$3,$C(A2)
00023144 <AmiBlitz3.ab3@4926>    BCS.w popnext3__skip2
0002314A <AmiBlitz3.ab3@4927>   MOVE.l nextfixl,D1
00023150 <AmiBlitz3.ab3@4928>   JMP writelong
00023156 <AmiBlitz3.ab3@4931>   MOVE.w nextfixw,D1
0002315C <AmiBlitz3.ab3@4932> JMP writeword
00023160 <AmiBlitz3.ab3@4936>   MOVE.w $C(A2),D0
00023166 <AmiBlitz3.ab3@4937>   TST.b debugmode
0002316A <AmiBlitz3.ab3@4938>    BEQ.w popnext__norunerr
0002316E <AmiBlitz3.ab3@4939>   MOVE.w #$C306,D1
00023172 <AmiBlitz3.ab3@4940>   CMP.w #$3,D0
00023176 <AmiBlitz3.ab3@4941>    BCS.w popnext__oktc
00023178 <AmiBlitz3.ab3@4942>   ADDQ.w #1,D1
0002317A <AmiBlitz3.ab3@4945>   MOVE.l A2,-(A7)
00023180 <AmiBlitz3.ab3@4946>   JSR Atokejsr
00023182 <AmiBlitz3.ab3@4947>   MOVEA.l (A7)+,A2
00023184 <AmiBlitz3.ab3@4950> RTS
0002318A <AmiBlitz3.ab3@4954>   MOVE.l firstsel,D0
0002318E <AmiBlitz3.ab3@4955>    BEQ.w eselerr
00023190 <AmiBlitz3.ab3@4956>   MOVEA.l D0,A2
00023194 <AmiBlitz3.ab3@4957>    BSR.w get1bytemain
00023198 <AmiBlitz3.ab3@4960>   MOVE.w $C(A2),D2
0002319E <AmiBlitz3.ab3@4961>   TST.b debugmode
000231A2 <AmiBlitz3.ab3@4962>    BEQ.w popselect__norerr
000231A6 <AmiBlitz3.ab3@4963>   MOVE.w #$C313,D1
000231AA <AmiBlitz3.ab3@4964>   CMP.w #$3,D2
000231AE <AmiBlitz3.ab3@4965>    BCS.w popselect__chkit
000231B0 <AmiBlitz3.ab3@4966>   ADDQ.w #1,D1
000231B6 <AmiBlitz3.ab3@4969>   JSR Atokejsr                                             ;make sure next thing on stack
000231B8 <AmiBlitz3.ab3@4973>   MOVEQ.l #$02,D1
000231BC <AmiBlitz3.ab3@4974>   CMP.w #$3,D2
000231C0 <AmiBlitz3.ab3@4975>    BCS.w popselect__doit
000231C2 <AmiBlitz3.ab3@4976>   MOVEQ.l #$04,D1
000231C6 <AmiBlitz3.ab3@4977>   CMP.w #$7,D2
000231CA <AmiBlitz3.ab3@4978>    BCS.w popselect__doit
000231D0 <AmiBlitz3.ab3@4979>   LEA endselstr,A0
000231D6 <AmiBlitz3.ab3@4980>   LEA endselstrf,A1
000231DC <AmiBlitz3.ab3@4981>   TST.b debugmode
000231E0 <AmiBlitz3.ab3@4982>    BEQ.w popselect__norerr3
000231E6 <AmiBlitz3.ab3@4983>   LEA endselstrf2,A1
000231EC <AmiBlitz3.ab3@4986>   JSR pokecode
000231F0 <AmiBlitz3.ab3@4987>   MOVE.w #$C003,D1                                         ;global freemem
000231F6 <AmiBlitz3.ab3@4988> JMP Atokejsr
000231FC <AmiBlitz3.ab3@4991>   TST.b debugmode
00023200 <AmiBlitz3.ab3@4992>    BEQ.w popselect__norerr2
00023202 <AmiBlitz3.ab3@4993>   ADDQ.w #2,D1                                             ;for the "sE"
00023204 <AmiBlitz3.ab3@4996>   LSL.w #8,D1
00023206 <AmiBlitz3.ab3@4997>   LSL.w #1,D1
0002320C <AmiBlitz3.ab3@4998>   OR.w endsel,D1
00023212 <AmiBlitz3.ab3@4999> JMP writeword
00023216 <AmiBlitz3.ab3@5002> firstrep:    Ds.l 1
0002321A <AmiBlitz3.ab3@5003> replineat:   Ds.l 1
00023220 <AmiBlitz3.ab3@5012>   CLR.l fp0addr
0002322A <AmiBlitz3.ab3@5013>   MOVE.l linenumat,replineat
0002322C <AmiBlitz3.ab3@5014>   MOVEQ.l #$08,D0
00023232 <AmiBlitz3.ab3@5015>   MOVEA.l _execbase,A6
00023238 <AmiBlitz3.ab3@5016>   MOVE.l mempool,a0
0002323C <AmiBlitz3.ab3@5017>   JSR _AllocPooled(a6)
0002323E <AmiBlitz3.ab3@5019>   MOVEA.l D0,A0
00023242 <AmiBlitz3.ab3@5020>   MOVE.l firstrep(PC),(A0)
00023248 <AmiBlitz3.ab3@5021>   MOVE.l A0,firstrep
00023250 <AmiBlitz3.ab3@5022>   MOVE.l destpointer,$4(A0)
00023252 <AmiBlitz3.ab3@5023> RTS
00023258 <AmiBlitz3.ab3@5026> str_temp:  Ds.w 3                                            ;infochk  ds.b 6 org source
0002325C <AmiBlitz3.ab3@5029>   LEA str_temp(PC),A1
0002325E <AmiBlitz3.ab3@5030>   CLR.w (A1)
00023262 <AmiBlitz3.ab3@5031>   CLR.l $2(A1)
00023264 <AmiBlitz3.ab3@5034>   MOVEQ.l #$04,D0
00023268 <AmiBlitz3.ab3@5037>     MOVE.b $1(A1),(A1)+
0002326C <AmiBlitz3.ab3@5038>   DBF D0,check_for_infoextention__loop
00023270 <AmiBlitz3.ab3@5043>   LEA str_temp(PC),A1
00023272 <AmiBlitz3.ab3@5044>   MOVE.b (A0),D0
00023276 <AmiBlitz3.ab3@5045>   ORI.b #$20,D0
0002327A <AmiBlitz3.ab3@5046>   MOVE.b D0,$5(A1)
0002327C <AmiBlitz3.ab3@5047>   TST.b (A0)+
00023280 <AmiBlitz3.ab3@5048>    BNE.w check_for_infoextention__loop2
00023284 <AmiBlitz3.ab3@5049>   CMPI.w #$2E69,(A1)+                                      ;".i"
00023288 <AmiBlitz3.ab3@5050>    BNE.w check_for_infoextention__no
0002328E <AmiBlitz3.ab3@5051>   CMPI.l #$6E666F20,(A1)                                   ;"nfo "
00023290 <AmiBlitz3.ab3@5054> RTS
00023294 <AmiBlitz3.ab3@5058>   BPL.w gettokeps__evaltoke
00023296 <AmiBlitz3.ab3@5059>   MOVE.w D0,D1
0002329A <AmiBlitz3.ab3@5060>   ANDI.w #$7F80,D1
0002329E <AmiBlitz3.ab3@5061>    BEQ.w tokeerr
000232A2 <AmiBlitz3.ab3@5062>   BCLR #$F,D0
000232A4 <AmiBlitz3.ab3@5063>   MOVE.w D0,D4                                             ;got toke number
000232A8 <AmiBlitz3.ab3@5064>   BSR.w get1bytemain
000232AC <AmiBlitz3.ab3@5065> BRA.w gettokeps__gotnum
000232B2 <AmiBlitz3.ab3@5068>   JSR JL_0_BF6A
000232B8 <AmiBlitz3.ab3@5069>   CMP.l #MaxWord,D3
000232BC <AmiBlitz3.ab3@5070>    BHI.w tokeerr
000232BE <AmiBlitz3.ab3@5071>   TST.w D6
000232C2 <AmiBlitz3.ab3@5072>    BNE.w tokeerr
000232C4 <AmiBlitz3.ab3@5073>   MOVE.w D3,D4
000232C6 <AmiBlitz3.ab3@5076>   MOVEQ.l #$00,D5
000232CA <AmiBlitz3.ab3@5077>   CMP.w #$2C,D0
000232CE <AmiBlitz3.ab3@5078>    BNE.w gettokeps__gotfrom
000232D0 <AmiBlitz3.ab3@5079>   MOVE.w D4,-(A7)
000232D6 <AmiBlitz3.ab3@5080>    JSR AJL_0_BF6E
000232DC <AmiBlitz3.ab3@5081>   CMP.l #MaxWord,D3
000232E0 <AmiBlitz3.ab3@5082>    BHI.w tokeerr
000232E2 <AmiBlitz3.ab3@5083>   TST.w D6
000232E6 <AmiBlitz3.ab3@5084>    BNE.w tokeerr
000232E8 <AmiBlitz3.ab3@5085>   MOVE.w D3,D5
000232EA <AmiBlitz3.ab3@5086>   MOVE.w (A7)+,D4
000232EC <AmiBlitz3.ab3@5089> RTS                                                        ;d4=toke, d5=form
000232EE <AmiBlitz3.ab3@5093>   TST.w D0
000232F2 <AmiBlitz3.ab3@5094>    BSR.w gettokeps
000232F6 <AmiBlitz3.ab3@5095>   MOVE.w #$4EB9,D1
000232FC <AmiBlitz3.ab3@5096>   JSR writeword
00023300 <AmiBlitz3.ab3@5097>   BSR.w addoff
00023302 <AmiBlitz3.ab3@5098>   MOVE.w D5,D1
00023306 <AmiBlitz3.ab3@5099>   ORI.w #$8000,D1                                          ;Toke of Amiga type.
00023308 <AmiBlitz3.ab3@5100>   SWAP D1
0002330A <AmiBlitz3.ab3@5101>   MOVE.w D4,D1
00023310 <AmiBlitz3.ab3@5102> JMP writelong
00023312 <AmiBlitz3.ab3@5106>   TST.w D0
00023316 <AmiBlitz3.ab3@5107>    BSR.w gettokeps
0002331A <AmiBlitz3.ab3@5108>   MOVE.w #$4EB9,D1
00023320 <AmiBlitz3.ab3@5109>   JSR writeword
00023324 <AmiBlitz3.ab3@5110>   BSR.w addoff
00023326 <AmiBlitz3.ab3@5111>   MOVE.w D5,D1
0002332A <AmiBlitz3.ab3@5112>   ORI.w #$C000,D1                                          ;Toke of Blitz type.
0002332C <AmiBlitz3.ab3@5113>   SWAP D1
0002332E <AmiBlitz3.ab3@5114>   MOVE.w D4,D1
00023334 <AmiBlitz3.ab3@5115>   JMP writelong
0002333A <AmiBlitz3.ab3@5119>   JSR JL_0_BF6A
00023340 <AmiBlitz3.ab3@5120>   CMP.l #$10000,D3
00023344 <AmiBlitz3.ab3@5121>    BCC.w tokeerr
00023346 <AmiBlitz3.ab3@5122>   MOVE.w D3,D1
0002334C <AmiBlitz3.ab3@5123> JMP Atokejsr
00023350 <AmiBlitz3.ab3@5127>   BSR.w gettokeps
00023354 <AmiBlitz3.ab3@5128>   MOVE.w #$4EB9,D1
0002335A <AmiBlitz3.ab3@5129>   JSR writeword
00023360 <AmiBlitz3.ab3@5130>   MOVE.l destpointer,D3
00023368 <AmiBlitz3.ab3@5131>   BTST #$7,blitzmode
0002336C <AmiBlitz3.ab3@5132>    BEQ.w do_TokeJsr__inamiga
00023370 <AmiBlitz3.ab3@5133>   BSET #$E,D5
00023374 <AmiBlitz3.ab3@5136>   BSR.w JL_0_6E86
00023378 <AmiBlitz3.ab3@5137>   BSR.w addoff
0002337E <AmiBlitz3.ab3@5138>   JMP writelong
00023382 <AmiBlitz3.ab3@5142>   BEQ.w do_VWait__zero
00023384 <AmiBlitz3.ab3@5143>   MOVEQ.l #$02,D2                                          ;get a word
0002338A <AmiBlitz3.ab3@5145>   JSR bakeval
0002338E <AmiBlitz3.ab3@5146>   MOVE.w fvwait(PC),D1
00023392 <AmiBlitz3.ab3@5147> BRA.w do_VWait__vcont
00023396 <AmiBlitz3.ab3@5150>   MOVE.w #$7000,D1                                         ;moveq #0,d0
0002339C <AmiBlitz3.ab3@5153>   JSR writeword
000233A0 <AmiBlitz3.ab3@5154>   MOVE.w #$C104,D1
000233A6 <AmiBlitz3.ab3@5155> JMP Atokejsr
000233A8 <AmiBlitz3.ab3@5159>   SUBQ.w #1,D0
000233AE <AmiBlitz3.ab3@5162>   Dc.w $3b7c,$ffff,0                                       ;move.w #$FFFF,$0(A5) ;noopt
000233B2 <AmiBlitz3.ab3@5165>   Dc.l $426d0001                                           ;clr.w $0(A5)
000233B6 <AmiBlitz3.ab3@5169>   MOVE.b debugmode(PC),D1
000233BA <AmiBlitz3.ab3@5170>   BEQ.b debugmode_codelabel__skip
000233BE <AmiBlitz3.ab3@5171>   MOVE.w #$D500,D1
000233C4 <AmiBlitz3.ab3@5172> JMP Atokejsr
000233C6 <AmiBlitz3.ab3@5175> RTS
000233CE <AmiBlitz3.ab3@5179>   BSET #$0,blitzmode
000233D6 <AmiBlitz3.ab3@5180>   BSET #$7,blitzmode
000233DA <AmiBlitz3.ab3@5181>   MOVE.w #$C200,D1
000233E0 <AmiBlitz3.ab3@5182>   JSR Atokejsr
000233E6 <AmiBlitz3.ab3@5183>   TST.b debugmode
000233EA <AmiBlitz3.ab3@5184>    BEQ.w do_BLITZ__done
000233EE <AmiBlitz3.ab3@5185>   MOVE.w cgoblitz(PC),D1
000233F4 <AmiBlitz3.ab3@5186>   JSR writeword
000233F6 <AmiBlitz3.ab3@5187>   MOVEQ.l #-$01,D1
000233FC <AmiBlitz3.ab3@5188>   JSR writeword
00023402 <AmiBlitz3.ab3@5189>   JSR getbbase
00023408 <AmiBlitz3.ab3@5190>   JSR writeword
0002340C <AmiBlitz3.ab3@5193> BRA.w debugmode_codelabel
00023410 <AmiBlitz3.ab3@5197>   MOVE.w #$C201,D1
00023414 <AmiBlitz3.ab3@5198> BRA.w do_AMIGA__toamode
00023418 <AmiBlitz3.ab3@5202>   MOVE.W  #$C202,D1
00023420 <AmiBlitz3.ab3@5205>   BSET #$0,blitzmode
00023428 <AmiBlitz3.ab3@5206>   BCLR #$7,blitzmode
0002342E <AmiBlitz3.ab3@5207>   JSR Atokejsr
00023434 <AmiBlitz3.ab3@5208>   TST.b debugmode
00023438 <AmiBlitz3.ab3@5209>    BEQ.w do_AMIGA__done
0002343C <AmiBlitz3.ab3@5210>   MOVE.w cgoamiga(PC),D1
00023442 <AmiBlitz3.ab3@5211>   JSR writeword
00023448 <AmiBlitz3.ab3@5212>   JSR getbbase
0002344E <AmiBlitz3.ab3@5213>   JSR writeword
00023452 <AmiBlitz3.ab3@5216> BRA.w debugmode_codelabel
00023456 <AmiBlitz3.ab3@5220>   MOVEM.l D2-D7/A2-A4,-(A7)
0002345A <AmiBlitz3.ab3@5223>   MOVEM.l (A7)+,D2-D7/A2-A4
00023460 <AmiBlitz3.ab3@5227>   JSR JL_0_BF6A
00023466 <AmiBlitz3.ab3@5228>   CMP.l #$E,D3
0002346A <AmiBlitz3.ab3@5229>    BCC.w interr4
0002346E <AmiBlitz3.ab3@5230>   MOVE.w #$7000,D1
00023470 <AmiBlitz3.ab3@5231>   OR.w D3,D1
00023476 <AmiBlitz3.ab3@5232>   JSR writeword
0002347A <AmiBlitz3.ab3@5233>   MOVE.w #$C101,D1
00023480 <AmiBlitz3.ab3@5234> JMP Atokejsr                                               ;clear the interupt
00023482 <AmiBlitz3.ab3@5237> inerr:       Ds.w 1                                        ;flag - in error trap mode
00023486 <AmiBlitz3.ab3@5238> errjmp:      Ds.l 1                                        ;where err jump is
0002348A <AmiBlitz3.ab3@5239> errcode:     Ds.l 1
0002348E <AmiBlitz3.ab3@5243>   MOVE.W  #$D202,D1
00023494 <AmiBlitz3.ab3@5244> JMP Atokejsr                                               ;BRA.W Atokejsr
00023498 <AmiBlitz3.ab3@5248>   MOVE.w inerr(PC),D1
0002349C <AmiBlitz3.ab3@5249>    BEQ.w errerr3
000234A2 <AmiBlitz3.ab3@5250>   CLR.w inerr
000234A8 <AmiBlitz3.ab3@5251>   MOVE.w dontwrite,D1
000234AC <AmiBlitz3.ab3@5252>    BNE.w doendseterr__skip
000234B0 <AmiBlitz3.ab3@5253>   MOVEA.l errjmp(PC),A0
000234B6 <AmiBlitz3.ab3@5254>   MOVE.l destpointer,(A0)
000234BA <AmiBlitz3.ab3@5257> BRA.w get1bytemain
000234BE <AmiBlitz3.ab3@5261>   MOVE.w #$D205,D1
000234C4 <AmiBlitz3.ab3@5262> JMP Atokejsr
000234CA <AmiBlitz3.ab3@5266>   MOVE.w proceduremode,D1
000234CE <AmiBlitz3.ab3@5267>    BNE.w errerr1
000234D2 <AmiBlitz3.ab3@5268>   MOVE.w inerr(PC),D1
000234D6 <AmiBlitz3.ab3@5269>    BNE.w errerr2
000234DC <AmiBlitz3.ab3@5270>   LEA inerr,a0
000234DE <AmiBlitz3.ab3@5271>   NOT.w (a0)                                               ;reass
000234E2 <AmiBlitz3.ab3@5272>   MOVE.w #$203C,D1                                         ;move.l #x,d0
000234E8 <AmiBlitz3.ab3@5273>   JSR writeword
000234F2 <AmiBlitz3.ab3@5274>   MOVE.l destpointer,errcode
000234F6 <AmiBlitz3.ab3@5275>   BSR.w addoff
000234FC <AmiBlitz3.ab3@5276>   JSR writelong
00023500 <AmiBlitz3.ab3@5277>   MOVE.w #$D201,D1
00023506 <AmiBlitz3.ab3@5278>   JSR Atokejsr
0002350A <AmiBlitz3.ab3@5279>   MOVE.w #$4EF9,D1                                         ;JMP
00023510 <AmiBlitz3.ab3@5280>   JSR writeword
0002351A <AmiBlitz3.ab3@5281>   MOVE.l destpointer,errjmp
0002351E <AmiBlitz3.ab3@5282>   BSR.w addoff
00023524 <AmiBlitz3.ab3@5283>   JSR writelong
0002352A <AmiBlitz3.ab3@5284>   MOVE.w dontwrite,D1
0002352E <AmiBlitz3.ab3@5285>    BNE.w do_SetErr__skip
00023532 <AmiBlitz3.ab3@5286>   MOVEA.l errcode(PC),A0
00023538 <AmiBlitz3.ab3@5287>   MOVE.l destpointer,(A0)
0002353A <AmiBlitz3.ab3@5290> RTS
0002353E <AmiBlitz3.ab3@5293> intlineat:  Ds.l 1
00023540 <AmiBlitz3.ab3@5297>   MOVEQ.l #-$01,D1                                        ;type - need new string space
00023544 <AmiBlitz3.ab3@5298>   BSR.w errchx
0002354A <AmiBlitz3.ab3@5299>   MOVE.w D1,intstring
00023554 <AmiBlitz3.ab3@5300>   MOVE.l linenumat,intlineat
0002355A <AmiBlitz3.ab3@5301>   JSR JL_0_BF6A                                           ;get constant - int level
00023560 <AmiBlitz3.ab3@5302>   CMP.l #$E,D3
00023564 <AmiBlitz3.ab3@5303>    BCC.w interr4
0002356A <AmiBlitz3.ab3@5304>   ST intsused
00023570 <AmiBlitz3.ab3@5305>   MOVE.w D3,intlevel
00023574 <AmiBlitz3.ab3@5306>   MOVE.w #$7000,D1
00023576 <AmiBlitz3.ab3@5307>   OR.w D3,D1                                              
0002357C <AmiBlitz3.ab3@5308>   JSR writeword                                         ;moveq #x,d0
00023580 <AmiBlitz3.ab3@5309>   MOVE.w #$223C,D1                                        ;move.l #x,d1
00023586 <AmiBlitz3.ab3@5310>   JSR writeword
0002358A <AmiBlitz3.ab3@5311>   BSR.w addoff
00023590 <AmiBlitz3.ab3@5312>   MOVE.l destpointer,-(A7)
00023594 <AmiBlitz3.ab3@5313>   BSR.w writelong
00023598 <AmiBlitz3.ab3@5314>   MOVE.w #$C100,D1
0002359E <AmiBlitz3.ab3@5315>   JSR Atokejsr
000235A2 <AmiBlitz3.ab3@5316>   MOVE.w #$4EF9,D1                                        ;jmp
000235A8 <AmiBlitz3.ab3@5317>   JSR writeword
000235AC <AmiBlitz3.ab3@5318>   BSR.w addoff
000235B6 <AmiBlitz3.ab3@5319>   MOVE.l destpointer,intjmpat
000235BA <AmiBlitz3.ab3@5320>   BSR.w writelong
000235BC <AmiBlitz3.ab3@5321>   MOVEA.l (A7)+,A0
000235C2 <AmiBlitz3.ab3@5322>   MOVE.w dontwrite,D1
000235C6 <AmiBlitz3.ab3@5323>   BNE.w do_SetInt__dontpoke
000235CC <AmiBlitz3.ab3@5324>   MOVE.l destpointer,(A0)
000235D0 <AmiBlitz3.ab3@5327>   MOVE.l intstart0(PC),D1
000235D4 <AmiBlitz3.ab3@5328>   BSR.w writelong
000235DA <AmiBlitz3.ab3@5329>   TST.b debugmode
000235DE <AmiBlitz3.ab3@5330>    BEQ.w do_SetInt__norerr
000235E0 <AmiBlitz3.ab3@5334>   MOVEQ.l #$02,D1
000235E4 <AmiBlitz3.ab3@5335>   BSR.w writetrap
000235E8 <AmiBlitz3.ab3@5336>   BSR.w addoff
000235F2 <AmiBlitz3.ab3@5337>   MOVE.l destpointer,intcleanat
000235F6 <AmiBlitz3.ab3@5338>   BSR.w writelong
000235FC <AmiBlitz3.ab3@5339>   MOVE.w intlevel,D1
00023600 <AmiBlitz3.ab3@5340>   BSR.w writeword
00023604 <AmiBlitz3.ab3@5341>   MOVE.w #$C30B,D1                                         ;disable stack checks
0002360A <AmiBlitz3.ab3@5342>   JSR Atokejsr
0002360E <AmiBlitz3.ab3@5345>   MOVE.w #$FED3,D1
00023612 <AmiBlitz3.ab3@5346>   BSR.w uselib
00023616 <AmiBlitz3.ab3@5347>   MOVE.w #$C102,D1
0002361C <AmiBlitz3.ab3@5348>   JSR Atokejsr
00023624 <AmiBlitz3.ab3@5349>   MOVE.w #-1,lasta6
0002362E <AmiBlitz3.ab3@5350>   MOVE.l linenumat,intline
00023630 <AmiBlitz3.ab3@5351> RTS
00023632 <AmiBlitz3.ab3@5355>             Ds.w 1                                         ;??looks like obsolved data??
00023636 <AmiBlitz3.ab3@5357> intdata1:   Ds.l 1                                         ;where in data1 a5 is being kept
0002363A <AmiBlitz3.ab3@5359> intjmpat:   Ds.l 1
0002363E <AmiBlitz3.ab3@5360> intline:    Ds.l 1
00023640 <AmiBlitz3.ab3@5361> intstring:  Ds.w 1                                         ;flag 0 = no setint
00023642 <AmiBlitz3.ab3@5364> intlevel:   Ds.w 1
00023646 <AmiBlitz3.ab3@5365> intcleanat: Ds.l 1
0002364A <AmiBlitz3.ab3@5366> ret15add:   Ds.l 1
0002364C <AmiBlitz3.ab3@5367> ret15cc:    Ds.w 1
00023654 <AmiBlitz3.ab3@5371>   ADDI.l #$12,$2(A7)
0002365C <AmiBlitz3.ab3@5372>   MOVE.l $2(A7),ret15add
00023662 <AmiBlitz3.ab3@5373>   MOVE.w (A7),ret15cc
0002366A <AmiBlitz3.ab3@5374>   MOVE.l #directdo,$2(A7)
0002366C <AmiBlitz3.ab3@5375> RTE
00023670 <AmiBlitz3.ab3@5384>   MOVE.l ret15add(PC),-(A7)
00023674 <AmiBlitz3.ab3@5385>   MOVE.w ret15cc(PC),-(A7)                                 ;15*4
00023678 <AmiBlitz3.ab3@5386>   MOVEM.l D0-D7/A0-A6,-(A7)
00023682 <AmiBlitz3.ab3@5387>   MOVE.l destbufferend,trap15temp                          ;store high buff addr
0002368C <AmiBlitz3.ab3@5388>   MOVE.l destbufferstart,trap15temp2
00023696 <AmiBlitz3.ab3@5389>   MOVE.l libend,templibend
000236A0 <AmiBlitz3.ab3@5390>   MOVE.l data1start,tempdata1start
000236A6 <AmiBlitz3.ab3@5391>   CLR.l hunkoffsetcounter
000236AC <AmiBlitz3.ab3@5393>   MOVE.l directbuffer,a0
000236B2 <AmiBlitz3.ab3@5397>   MOVE.l a0,destbufferstart
000236B8 <AmiBlitz3.ab3@5398>   ADD.l #3900,a0
000236BE <AmiBlitz3.ab3@5399>   MOVE.l a0,destbufferend
000236C4 <AmiBlitz3.ab3@5400>   TST.b exdebug
000236C8 <AmiBlitz3.ab3@5401>   BEQ 'l1
000236CE <AmiBlitz3.ab3@5402>   MOVE.l a0,libend
000236D4 <AmiBlitz3.ab3@5403>   ADD.l #4000,a0
000236DA <AmiBlitz3.ab3@5404>   MOVE.l a0,data1start
000236E4 <AmiBlitz3.ab3@5407>   MOVE.l #dircont,errcont
000236EA <AmiBlitz3.ab3@5408> 
000236F0 <AmiBlitz3.ab3@5409>   MOVE.l A7,errstack
000236F8 <AmiBlitz3.ab3@5410>   MOVE.w #$FFFF,dirmode
000236FC <AmiBlitz3.ab3@5412>     MOVEA.l ret15add(PC),A1
00023702 <AmiBlitz3.ab3@5413>     MOVE.w -(A1),blitzmode
00023704 <AmiBlitz3.ab3@5414>     CLR.l -(A1)
0002370A <AmiBlitz3.ab3@5415>     MOVE.l -(A1),firstglob
00023710 <AmiBlitz3.ab3@5416>     MOVE.l -(A1),firstlocal
00023716 <AmiBlitz3.ab3@5418>   CLR.w proceduremode
0002371C <AmiBlitz3.ab3@5419>   MOVE.l firstglob,D0
00023722 <AmiBlitz3.ab3@5420>   OR.l firstlocal,D0
00023726 <AmiBlitz3.ab3@5421>   BEQ.b directdo__skip
0002372C <AmiBlitz3.ab3@5422>   NOT.w proceduremode
0002372E <AmiBlitz3.ab3@5425>   MOVEA.l -(A1),A0                                         ;address of string
00023730 <AmiBlitz3.ab3@5429>   MOVE.l A0,-(A7)
0002376E <AmiBlitz3.ab3@5432>   !ComData_GetL{comFunc_DebugTrap,A1}
00023770 <AmiBlitz3.ab3@5434>   JSR (A1)                                                 ;tokenise line.....
00023772 <AmiBlitz3.ab3@5436>   MOVEA.l (A7)+,A5
0002377C <AmiBlitz3.ab3@5437>   MOVE.l directbuffer,destpointer
00023782 <AmiBlitz3.ab3@5438>   TST.b exdebug
00023786 <AmiBlitz3.ab3@5439>   BEQ 'noexdebug
00023788 <AmiBlitz3.ab3@5440>   MOVE.l a5,a0
0002378E <AmiBlitz3.ab3@5441>   MOVE.l #200,d0
00023794 <AmiBlitz3.ab3@5444>     MOVE.b 0(a0,d0.l),8(a0,d0.l)
00023798 <AmiBlitz3.ab3@5445>   DBF d0,'l1
0002379E <AmiBlitz3.ab3@5450>   MOVE.l destpointer,a0
000237A2 <AmiBlitz3.ab3@5451>   MOVE.w #$207c,(a0)+
000237A4 <AmiBlitz3.ab3@5452>   MOVE.l a5,d0
000237AA <AmiBlitz3.ab3@5453>   ADD.l #$206,d0                                           ;constant from debuglib
000237AC <AmiBlitz3.ab3@5454>   MOVE.l d0,(a0)+
000237B2 <AmiBlitz3.ab3@5455>   MOVE.l a0,destpointer
000237B4 <AmiBlitz3.ab3@5456>   MOVE.l a5,a0
000237B8 <AmiBlitz3.ab3@5457>   MOVE.w #$8039,(a0)+                                      ;TokeJsr 164 (inputoutputlib) LSL 7+4
000237BE <AmiBlitz3.ab3@5458>   MOVE.l #"$520",(a0)+
000237C2 <AmiBlitz3.ab3@5459>   MOVE.w #"4:",(a0)+
000237C8 <AmiBlitz3.ab3@5462>   CLR.w dontwrite
000237D0 <AmiBlitz3.ab3@5463>   MOVE.w #$FFFF,lasta6
000237D4 <AmiBlitz3.ab3@5464>   BSR.w compile_line                                        ;.....compile it
000237DA <AmiBlitz3.ab3@5465>   TST.b exdebug
000237DE <AmiBlitz3.ab3@5466>   BEQ 'noexdebug2
000237E4 <AmiBlitz3.ab3@5467>   JSR JL_0_6C76
000237EA <AmiBlitz3.ab3@5470>   CLR.w proceduremode
000237EE <AmiBlitz3.ab3@5471>   BSR.w errchx
000237F2 <AmiBlitz3.ab3@5472>   MOVE.w #$4EF9,D1
000237F6 <AmiBlitz3.ab3@5473>   BSR.w writeword                                          ;JMP
000237FA <AmiBlitz3.ab3@5474>   MOVE.l ret15add(PC),D1
000237FE <AmiBlitz3.ab3@5475>   BSR.w writelong                                          ;jmp to done
00023804 <AmiBlitz3.ab3@5476>   MOVE.w dontwrite,D0
00023808 <AmiBlitz3.ab3@5477>    BNE.w nodirmem
00023810 <AmiBlitz3.ab3@5478>   MOVE.l directbuffer,$3E(A7)                              ;install code address
00023816 <AmiBlitz3.ab3@5481>   CLR.w dirmode
0002381C <AmiBlitz3.ab3@5482>   MOVE.w ret15cc(PC),$3C(A7)
00023826 <AmiBlitz3.ab3@5483>   MOVE.l trap15temp,destbufferend
00023830 <AmiBlitz3.ab3@5484>   MOVE.l trap15temp2,destbufferstart
0002383A <AmiBlitz3.ab3@5485>   MOVE.l tempdata1start,data1start
00023844 <AmiBlitz3.ab3@5486>   MOVE.l templibend,libend
00023848 <AmiBlitz3.ab3@5487>   MOVEM.l (A7)+,D0-D7/A0-A6
0002384C <AmiBlitz3.ab3@5488>   BSR.w Aclearcache                                        ;selden used
0002384E <AmiBlitz3.ab3@5489> RTR
00023852 <AmiBlitz3.ab3@5492>   MOVEA.l ret15add(PC),A0
00023854 <AmiBlitz3.ab3@5493>   SUBQ.w #2,A0
00023856 <AmiBlitz3.ab3@5494>   MOVE.l D0,-(A0)
0002385A <AmiBlitz3.ab3@5495> BRA.w direxit
0002385E <AmiBlitz3.ab3@5499>   MOVE.w $6(A3),D1
00023862 <AmiBlitz3.ab3@5500>   BSR.w uselib                                             ;get lib for base address
00023866 <AmiBlitz3.ab3@5501>   MOVE.w $A(A1),-(A7)                                      ;libbase reg
00023868 <AmiBlitz3.ab3@5502>   ADDQ.w #8,A3
0002386A <AmiBlitz3.ab3@5503>   MOVE.w (A3)+,-(A7)                                       ;get offset for lib
0002386C <AmiBlitz3.ab3@5504>   MOVE.l A3,-(A7)
0002386E <AmiBlitz3.ab3@5508>   MOVEQ.l #$00,D3
00023874 <AmiBlitz3.ab3@5509>   JSR checka4a5
00023876 <AmiBlitz3.ab3@5511>   MOVE.b (A3)+,D1
0002387A <AmiBlitz3.ab3@5512>    BMI.w stamigalib__done
0002387C <AmiBlitz3.ab3@5513>   MOVEQ.l #$03,D2
0002387E <AmiBlitz3.ab3@5514>   ADDQ.w #1,D3
00023882 <AmiBlitz3.ab3@5515>   MOVEM.l D3/A3,-(A7)
00023888 <AmiBlitz3.ab3@5516>   MOVE.b funcparloop,-(a7)
00023890 <AmiBlitz3.ab3@5517>   MOVE.b #0,funcparloop
00023896 <AmiBlitz3.ab3@5518>   MOVE.l leftsidetype,-(a7)
0002389C <AmiBlitz3.ab3@5519>   MOVE.l rightsidetype,-(a7)
000238A2 <AmiBlitz3.ab3@5520>   MOVE.w leftsideflagmask,-(a7)
000238A8 <AmiBlitz3.ab3@5521>   MOVE.w rightsideflagmask,-(a7)
000238AE <AmiBlitz3.ab3@5522>   CLR.l leftsidetype
000238B4 <AmiBlitz3.ab3@5523>   CLR.l rightsidetype
000238BA <AmiBlitz3.ab3@5524>   CLR.w leftsideflagmask
000238C0 <AmiBlitz3.ab3@5525>   CLR.w rightsideflagmask
000238C6 <AmiBlitz3.ab3@5526>   MOVE.b blitzparloop,-(a7)
000238CE <AmiBlitz3.ab3@5527>   MOVE.b #1,blitzparloop                                 ;write the parameter to stack
000238D4 <AmiBlitz3.ab3@5528>   JSR peval
000238DA <AmiBlitz3.ab3@5529>   MOVE.b (a7)+,blitzparloop
000238E0 <AmiBlitz3.ab3@5530>   MOVE.w (a7)+,rightsideflagmask
000238E6 <AmiBlitz3.ab3@5531>   MOVE.w (a7)+,leftsideflagmask
000238EC <AmiBlitz3.ab3@5532>   MOVE.l (a7)+,rightsidetype
000238F2 <AmiBlitz3.ab3@5533>   MOVE.l (a7)+,leftsidetype
000238F8 <AmiBlitz3.ab3@5534>   MOVE.b (a7)+,funcparloop
000238FC <AmiBlitz3.ab3@5535>   MOVEM.l (A7)+,D3/A3
00023900 <AmiBlitz3.ab3@5536>   CMP.w #$2C,D0
00023904 <AmiBlitz3.ab3@5537>    BEQ.w stamigalib__loop
00023906 <AmiBlitz3.ab3@5538>   TST.b (A3)
0002390A <AmiBlitz3.ab3@5539>    BPL.w syntaxerr
0002390C <AmiBlitz3.ab3@5542>   MOVEA.l (A7)+,A3
0002390E <AmiBlitz3.ab3@5543>   SUBQ.w #1,D3
00023912 <AmiBlitz3.ab3@5544>    BPL.w stamigalib__toend
00023916 <AmiBlitz3.ab3@5545>    BSR.w get1bytemain                                      ;no pars - get :
0002391A <AmiBlitz3.ab3@5546> BRA.w stamigalib__nopars
0002391C <AmiBlitz3.ab3@5549>   TST.b (A3)+                                              ;go to end of params
00023920 <AmiBlitz3.ab3@5550>    BPL.w stamigalib__toend
00023922 <AmiBlitz3.ab3@5551>   SUBQ.w #1,A3
00023924 <AmiBlitz3.ab3@5554>    MOVEQ.l #$00,D1
00023926 <AmiBlitz3.ab3@5555>    MOVE.b -(A3),D1
0002392A <AmiBlitz3.ab3@5556>    BTST #$4,D1
0002392E <AmiBlitz3.ab3@5557>     BNE.w stamigalib__addreg
00023930 <AmiBlitz3.ab3@5558>    LSL.w #8,D1
00023932 <AmiBlitz3.ab3@5559>    LSL.w #1,D1
00023936 <AmiBlitz3.ab3@5560>    ORI.w #$201F,D1
0002393A <AmiBlitz3.ab3@5561>  BRA.w stamigalib__gotit
0002393E <AmiBlitz3.ab3@5564>    ANDI.w #$7,D1
00023940 <AmiBlitz3.ab3@5565>    LSL.w #8,D1
00023942 <AmiBlitz3.ab3@5566>    LSL.w #1,D1
00023946 <AmiBlitz3.ab3@5567>    ORI.w #$205F,D1
0002394A <AmiBlitz3.ab3@5570>     BSR.w writeword
0002394E <AmiBlitz3.ab3@5571>   DBF D3,stamigalib__loop2
00023954 <AmiBlitz3.ab3@5574>   MOVE.w (A7)+,libjsr+2
0002395A <AmiBlitz3.ab3@5575>   MOVE.w (A7)+,libbase+2
00023960 <AmiBlitz3.ab3@5576>   MOVE.l libbase,D1
00023964 <AmiBlitz3.ab3@5577>    BSR.w writelong
0002396A <AmiBlitz3.ab3@5578>   MOVE.l libjsr,D1
00023970 <AmiBlitz3.ab3@5579>   JSR writelong
00023976 <AmiBlitz3.ab3@5580>   JSR restorea4a5
00023978 <AmiBlitz3.ab3@5581>   RTS
0002397E <AmiBlitz3.ab3@5584>   MOVE.l data1,D4
00023984 <AmiBlitz3.ab3@5585>   SUB.l data1start,D4
0002398A <AmiBlitz3.ab3@5586>   ADD.l #10000,d4
00023990 <AmiBlitz3.ab3@5587>   MOVE.l libend,D3
00023996 <AmiBlitz3.ab3@5588>   SUB.l destbufferend,D3
0002399C <AmiBlitz3.ab3@5589>   ADD.l #40000,d3
000239A2 <AmiBlitz3.ab3@5590>   MOVE.l bigpc,D2
000239A8 <AmiBlitz3.ab3@5591>   SUB.l destbufferstart,D2
000239AE <AmiBlitz3.ab3@5592>   ADD.l #20000,d2
000239B4 <AmiBlitz3.ab3@5593>   MOVE.l databuffer,D5
000239BA <AmiBlitz3.ab3@5594>   ADD.l #10000,D5
000239BE <AmiBlitz3.ab3@5595> BRA newallox
000239C4 <AmiBlitz3.ab3@5599>   MOVE.l objectbuffer,D2
000239C6 <AmiBlitz3.ab3@5600>   LSR.l #1,D2
000239CC <AmiBlitz3.ab3@5601>   ADD.l objectbuffer,D2
000239D2 <AmiBlitz3.ab3@5602>   MOVE.l libsbuffer,D3
000239D4 <AmiBlitz3.ab3@5603>   LSR.l #1,D3
000239DA <AmiBlitz3.ab3@5604>   ADD.l libsbuffer,D3
000239E0 <AmiBlitz3.ab3@5605>   MOVE.l systembuffer,D4
000239E2 <AmiBlitz3.ab3@5606>   LSR.l #1,D4
000239E8 <AmiBlitz3.ab3@5607>   ADD.l systembuffer,D4
000239EE <AmiBlitz3.ab3@5608>   MOVE.l databuffer,D5
000239F0 <AmiBlitz3.ab3@5609>   LSR.l #1,D5
000239F6 <AmiBlitz3.ab3@5610>   ADD.l databuffer,D5
000239FA <AmiBlitz3.ab3@5611> BRA.w newallox
00023A00 <AmiBlitz3.ab3@5615>   MOVE.l bigpc,D2
00023A06 <AmiBlitz3.ab3@5616>   SUB.l destbufferstart,D2                                     ;size of object buffer
00023A0C <AmiBlitz3.ab3@5617>   SUB.l savefuncspace,d2
00023A12 <AmiBlitz3.ab3@5619>   TST.w debugversion
00023A16 <AmiBlitz3.ab3@5620>    BNE.b alloxadj__skip
00023A1C <AmiBlitz3.ab3@5621>   ADDI.l #$800,D2
00023A22 <AmiBlitz3.ab3@5624>   MOVE.l libend,D3
00023A28 <AmiBlitz3.ab3@5625>   SUB.l destbufferend,D3
00023A2E <AmiBlitz3.ab3@5627>   MOVE.l data1,D4
00023A34 <AmiBlitz3.ab3@5628>   SUB.l data1start,D4
00023A3A <AmiBlitz3.ab3@5630>   MOVE.l data2,D5
00023A40 <AmiBlitz3.ab3@5631>   SUB.l data2at,D5
00023A46 <AmiBlitz3.ab3@5633>   CLR.l morememadd
00023A4A <AmiBlitz3.ab3@5636>   BSR.w makeallox
00023A4E <AmiBlitz3.ab3@5637>   BNE.w newallox__done
00023A52 <AmiBlitz3.ab3@5638> BRA.w init_buffers
00023A54 <AmiBlitz3.ab3@5641> RTS
00023A5A <AmiBlitz3.ab3@5645>   MOVEA.l _execbase,A6
00023A60 <AmiBlitz3.ab3@5646>   MOVE.l objlen,D0
00023A64 <AmiBlitz3.ab3@5647>   BEQ.w freeallox__skip
00023A6A <AmiBlitz3.ab3@5648>   CLR.l objlen
00023A70 <AmiBlitz3.ab3@5649>   MOVEA.l destbufferstart,A1
00023A76 <AmiBlitz3.ab3@5650>   MOVE.l mempool,a0
00023A7A <AmiBlitz3.ab3@5651> JMP _FreeVec(A6)
00023A7C <AmiBlitz3.ab3@5654> RTS
00023A82 <AmiBlitz3.ab3@5658>   MOVE.l objectbuffer,D2
00023A88 <AmiBlitz3.ab3@5659>   MOVE.l libsbuffer,D3
00023A8E <AmiBlitz3.ab3@5660>   MOVE.l systembuffer,D4
00023A94 <AmiBlitz3.ab3@5661>   MOVE.l databuffer,D5
00023A9C <AmiBlitz3.ab3@5664>   MOVE.w #$FFFF,anyerrs
00023AA0 <AmiBlitz3.ab3@5665>   BSR.w freeallox
00023AA2 <AmiBlitz3.ab3@5669>   ADDQ.l #1,D2
00023AA6 <AmiBlitz3.ab3@5670>   BCLR #$0,D2
00023AA8 <AmiBlitz3.ab3@5671>   ADDQ.l #1,D3
00023AAC <AmiBlitz3.ab3@5672>   BCLR #$0,D3
00023AAE <AmiBlitz3.ab3@5673>   ADDQ.l #1,D4
00023AB2 <AmiBlitz3.ab3@5674>   BCLR #$0,D4
00023AB4 <AmiBlitz3.ab3@5675>   TST.l d5
00023AB8 <AmiBlitz3.ab3@5676>   BNE 'l1
00023ABA <AmiBlitz3.ab3@5679>   ADDQ.l #1,D5
00023ABE <AmiBlitz3.ab3@5680>   BCLR #$0,D5
00023AC0 <AmiBlitz3.ab3@5681>   MOVE.l D2,D0
00023AC2 <AmiBlitz3.ab3@5682>   ADD.l D3,D0
00023AC4 <AmiBlitz3.ab3@5683>   ADD.l D4,D0
00023AC6 <AmiBlitz3.ab3@5684>   ADD.l D5,D0
00023ACC <AmiBlitz3.ab3@5685>   ADD.l #moremem,d0
00023ACE <AmiBlitz3.ab3@5686>   MOVE.l D0,D6
00023AD4 <AmiBlitz3.ab3@5687>   MOVE.l #MemfPublic_MemfClear,D1
00023ADA <AmiBlitz3.ab3@5688>   MOVE.l mempool,a0
00023AE0 <AmiBlitz3.ab3@5689>   MOVEA.l _execbase,A6
00023AE4 <AmiBlitz3.ab3@5690>   JSR _AllocVec(a6)                                        ;alloc mem for objectbuffer
00023AE6 <AmiBlitz3.ab3@5692>   TST.l D0
00023AEA <AmiBlitz3.ab3@5693>   BEQ.w exit_initbuffers
00023AF0 <AmiBlitz3.ab3@5694>   MOVE.l D6,objlen
00023AF6 <AmiBlitz3.ab3@5695>   MOVE.l D2,objectbuffer
00023AFC <AmiBlitz3.ab3@5696>   MOVE.l D3,libsbuffer
00023B02 <AmiBlitz3.ab3@5697>   MOVE.l D4,systembuffer
00023B08 <AmiBlitz3.ab3@5698>   MOVE.l D5,databuffer
00023B0E <AmiBlitz3.ab3@5699>   MOVE.l D0,destbufferstart
00023B42 <AmiBlitz3.ab3@5702>   !ComData_SetL{comPtr_DestBufferStart,D0}
00023B44 <AmiBlitz3.ab3@5703>   ADD.l D2,D0
00023B4A <AmiBlitz3.ab3@5704>   MOVE.l D0,destbufferend
00023B4C <AmiBlitz3.ab3@5705>   ADD.l D3,D0
00023B52 <AmiBlitz3.ab3@5706>   MOVE.l D0,data1start
00023B54 <AmiBlitz3.ab3@5707>   ADD.l D4,D0
00023B5A <AmiBlitz3.ab3@5708>   MOVE.l D0,data2at
00023B5C <AmiBlitz3.ab3@5709>   ADD.l D5,D0
00023B62 <AmiBlitz3.ab3@5710>   MOVE.l D0,allat
00023B64 <AmiBlitz3.ab3@5713> RTS
00023B68 <AmiBlitz3.ab3@5717>   Dc.b $00,$00,$00,$01                                     ;         1
00023B6C <AmiBlitz3.ab3@5718>   Dc.b $00,$00,$00,$0A                                     ;        10
00023B70 <AmiBlitz3.ab3@5719>   Dc.b $00,$00,$00,$64                                     ;       100
00023B74 <AmiBlitz3.ab3@5720>   Dc.b $00,$00,$03,$E8                                     ;      1000
00023B78 <AmiBlitz3.ab3@5721>   Dc.b $00,$00,$27,$10                                     ;     10000
00023B7C <AmiBlitz3.ab3@5722>   Dc.b $00,$01,$86,$A0                                     ;    100000
00023B80 <AmiBlitz3.ab3@5723>   Dc.b $00,$0F,$42,$40                                     ;   1000000
00023B84 <AmiBlitz3.ab3@5724>   Dc.b $00,$98,$96,$80                                     ;  10000000
00023B88 <AmiBlitz3.ab3@5725>   Dc.b $05,$F5,$E1,$00                                     ; 100000000
00023B8C <AmiBlitz3.ab3@5726>   Dc.b $3B,$9A,$CA,$00                                     ;1000000000
00023B8E <AmiBlitz3.ab3@5730>   MOVEQ.l #$00,D1                                          ;no zero printed
00023B90 <AmiBlitz3.ab3@5731>   MOVEQ.l #$24,D3                                          ; "$"
00023B92 <AmiBlitz3.ab3@5734>   MOVEQ.l #$30,D4                                          ; "0"
00023B96 <AmiBlitz3.ab3@5737>     CMP.l divisors(PC,D3.W),D2
00023B9A <AmiBlitz3.ab3@5738>     BCS.w makelong__skip
00023B9E <AmiBlitz3.ab3@5739>     SUB.l divisors(PC,D3.W),D2
00023BA0 <AmiBlitz3.ab3@5740>     ADDQ.w #1,D4
00023BA4 <AmiBlitz3.ab3@5741> BRA.w makelong__loop2
00023BA8 <AmiBlitz3.ab3@5744>   CMP.b #"0",D4
00023BAC <AmiBlitz3.ab3@5745>   BNE.w makelong__doit
00023BAE <AmiBlitz3.ab3@5746>   TST.w D1
00023BB2 <AmiBlitz3.ab3@5747>   BEQ.w makelong__skip2
00023BB4 <AmiBlitz3.ab3@5750>   MOVE.b D4,(A0)+
00023BB6 <AmiBlitz3.ab3@5751>   MOVEQ.l #$01,D1
00023BB8 <AmiBlitz3.ab3@5754>   SUBQ.w #4,D3
00023BBC <AmiBlitz3.ab3@5755>   BPL.w makelong__loop
00023BBE <AmiBlitz3.ab3@5756>   TST.w D1
00023BC2 <AmiBlitz3.ab3@5757>   BNE.w makelong__skip3
00023BC6 <AmiBlitz3.ab3@5758>   MOVE.b #"0",(A0)+
00023BC8 <AmiBlitz3.ab3@5761>   CLR.b (A0)
00023BCA <AmiBlitz3.ab3@5762> RTS
00023BEA <AmiBlitz3.ab3@5765> str_residentrequester:  Dc.b "Name of Resident File to Create",0 : Even        ;restext org source
00023CAA <AmiBlitz3.ab3@5766> str_residentpath:       Ds.l 48                                                ;respath org source
00023D6A <AmiBlitz3.ab3@5767> str_residentname:       Ds.l 48                                                ;resname org source
00023D70 <AmiBlitz3.ab3@5771>   MOVE.l macrobase,D0
00023D74 <AmiBlitz3.ab3@5772>    BNE.w create_residentfile
00023D7A <AmiBlitz3.ab3@5773>   MOVE.l newtype_string,D0
00023D7E <AmiBlitz3.ab3@5774>    BNE.w create_residentfile
00023D84 <AmiBlitz3.ab3@5775>   MOVEA.l labelbase,A2
00023D88 <AmiBlitz3.ab3@5778>     CMPA.w #$0,A2
00023D8C <AmiBlitz3.ab3@5779>      BEQ.w menu_createresidentfile__err
00023D94 <AmiBlitz3.ab3@5780>     CMPI.l #$1,$4(A2)
00023D98 <AmiBlitz3.ab3@5781>      BEQ.w create_residentfile
00023D9A <AmiBlitz3.ab3@5782>     MOVEA.l (A2),A2
00023D9E <AmiBlitz3.ab3@5783> BRA.w menu_createresidentfile__loop
00023DC8 <AmiBlitz3.ab3@5786>   !basic
00023E2A <AmiBlitz3.ab3@5787> 
00023E48 <AmiBlitz3.ab3@5788>   !asm
00023E4A <AmiBlitz3.ab3@5789> RTS
00023E88 <AmiBlitz3.ab3@5795>   !ComData_GetL{comFunc_ASLFileRequest,A3}
00023E8E <AmiBlitz3.ab3@5796>   LEA str_residentrequester,A2
00023E94 <AmiBlitz3.ab3@5797>   LEA str_residentpath,A0
00023E9A <AmiBlitz3.ab3@5798>   LEA str_residentname,A1
00023EC4 <AmiBlitz3.ab3@5799>   !basic
00023EFC <AmiBlitz3.ab3@5800>     Poke$ ?str_residentpath,my_residentsdir$
00023F28 <AmiBlitz3.ab3@5801>     Poke$ ?str_residentname,".res"
00023F46 <AmiBlitz3.ab3@5802>   !asm
00023F48 <AmiBlitz3.ab3@5804>   JSR (A3)                                                 ;open ped filerequest
00023F4C <AmiBlitz3.ab3@5806>   BEQ.w menu_createresidentfile__err
00023F4E <AmiBlitz3.ab3@5809>   MOVE.l D0,D1
00023F54 <AmiBlitz3.ab3@5810>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00023F58 <AmiBlitz3.ab3@5811>   MOVEA.l _dosbase(PC),A6
00023F5C <AmiBlitz3.ab3@5812>   JSR _Open(A6)
00023F5E <AmiBlitz3.ab3@5813>   MOVE.l D0,D7                                             ;handle
00023F62 <AmiBlitz3.ab3@5814>   BEQ.w menu_createresidentfile__err
00023F66 <AmiBlitz3.ab3@5815>   MOVEM.l d2-d7/a0-a6,-(a7)
00023F6C <AmiBlitz3.ab3@5816>   LEA devo,a0
00023F72 <AmiBlitz3.ab3@5817>   LEA ptr_parameterstore,a1
00023F74 <AmiBlitz3.ab3@5820>     MOVE.b (a0)+,(a1)+
00023F78 <AmiBlitz3.ab3@5821>   BNE 'l1
00023F7A <AmiBlitz3.ab3@5822>   MOVEQ #13,d2
00023F80 <AmiBlitz3.ab3@5823>   JSR findlabel2
00023F84 <AmiBlitz3.ab3@5824>   BNE 'd
00023F88 <AmiBlitz3.ab3@5825>   TST.l 8(a2)
00023F8C <AmiBlitz3.ab3@5826>   BEQ 'd2
00023FB6 <AmiBlitz3.ab3@5827>   !basic
00024018 <AmiBlitz3.ab3@5828>     error{!TRANS{"Cannot create Resident with develope debug 1"}}
00024036 <AmiBlitz3.ab3@5829>   !asm
0002403A <AmiBlitz3.ab3@5830>   MOVEM.l (a7)+,d2-d7/a0-a6
0002403E <AmiBlitz3.ab3@5831>   MOVEA.l _dosbase(PC),A6
00024040 <AmiBlitz3.ab3@5832>   MOVE.l d7,d1
00024044 <AmiBlitz3.ab3@5833>   JSR _Close(a6)
00024048 <AmiBlitz3.ab3@5834> BRA menu_createresidentfile__err
0002404C <AmiBlitz3.ab3@5838>   MOVEM.l (a7)+,d2-d7/a0-a6
00024050 <AmiBlitz3.ab3@5839>   BSR.w call_setpointerbusy
00024054 <AmiBlitz3.ab3@5841>   BSR.w AJL_0_7962
00024056 <AmiBlitz3.ab3@5842>   MOVE.l D7,D1
0002405C <AmiBlitz3.ab3@5843>   MOVE.l #tsthead,D2                                       ;header
0002405E <AmiBlitz3.ab3@5844>   MOVEQ.l #$20,D3
00024062 <AmiBlitz3.ab3@5845>   MOVEA.l _dosbase(PC),A6
00024066 <AmiBlitz3.ab3@5846>   JSR _Write(A6)
00024068 <AmiBlitz3.ab3@5847>   MOVEQ.l #$00,D6                                          ;offset from start of file!
0002406C <AmiBlitz3.ab3@5848>   BSR.w restypes
00024070 <AmiBlitz3.ab3@5849>   BSR.w resmacs
00024074 <AmiBlitz3.ab3@5850>   BSR.w resconsts
00024076 <AmiBlitz3.ab3@5851>   MOVE.l D6,D3
00024078 <AmiBlitz3.ab3@5852>   ADDQ.l #3,D3
0002407E <AmiBlitz3.ab3@5853>   ANDI.l #$FFFFFFFC,D3                                    ;long word align
00024080 <AmiBlitz3.ab3@5854>   MOVE.l D3,-(A7)
00024082 <AmiBlitz3.ab3@5855>   SUB.l D6,D3
00024086 <AmiBlitz3.ab3@5856>   BEQ.w menu_createresidentfile__noalign
0002408C <AmiBlitz3.ab3@5857>   MOVE.l #writelist,D2
0002408E <AmiBlitz3.ab3@5858>   MOVE.l D7,D1
00024094 <AmiBlitz3.ab3@5859>   MOVEA.l _dosbase,A6
00024098 <AmiBlitz3.ab3@5860>   JSR _Write(A6)
000240A2 <AmiBlitz3.ab3@5863>    MOVE.l hunkoffsetcounter,tstsize3
000240A6 <AmiBlitz3.ab3@5864>    BEQ.w menu_createresidentfile__skip2a
000240A8 <AmiBlitz3.ab3@5865>   MOVE.l D7,D1
000240AE <AmiBlitz3.ab3@5866>   MOVE.l #tstend,D2
000240B0 <AmiBlitz3.ab3@5867>   MOVEQ.l #$0C,D3
000240B6 <AmiBlitz3.ab3@5868>   MOVEA.l _dosbase,A6
000240BA <AmiBlitz3.ab3@5869>    JSR _Write(A6)
000240C0 <AmiBlitz3.ab3@5873>   MOVEA.l hunkoffsetbase,A2
000240C4 <AmiBlitz3.ab3@5876>   CMPA.w #$0,A2
000240C8 <AmiBlitz3.ab3@5877>    BEQ.w menu_createresidentfile__skip2
000240CC <AmiBlitz3.ab3@5878>   LEA $4(A2),A1
000240CE <AmiBlitz3.ab3@5879>   MOVE.l D7,D1
000240D0 <AmiBlitz3.ab3@5880>   MOVE.l A1,D2
000240D2 <AmiBlitz3.ab3@5881>   MOVEQ.l #$04,D3
000240D8 <AmiBlitz3.ab3@5882>   MOVEA.l _dosbase,A6
000240DC <AmiBlitz3.ab3@5883>    JSR _Write(A6)
000240DE <AmiBlitz3.ab3@5884>   MOVEA.l (A2),A2
000240E2 <AmiBlitz3.ab3@5885> BRA.w menu_createresidentfile__oloop
000240E4 <AmiBlitz3.ab3@5888>   MOVE.l D7,D1
000240EA <AmiBlitz3.ab3@5889>   MOVE.l #zero,D2
000240EC <AmiBlitz3.ab3@5890>   MOVEQ.l #$04,D3
000240F2 <AmiBlitz3.ab3@5891>   MOVEA.l _dosbase,A6
000240F6 <AmiBlitz3.ab3@5892>   JSR _Write(A6)
000240F8 <AmiBlitz3.ab3@5895>   MOVE.l D7,D1
000240FE <AmiBlitz3.ab3@5896>   MOVE.l #tstdone,D2
00024100 <AmiBlitz3.ab3@5897>   MOVEQ.l #$04,D3
00024106 <AmiBlitz3.ab3@5898>   MOVEA.l _dosbase,A6
0002410A <AmiBlitz3.ab3@5899>    JSR _Write(A6)
0002410C <AmiBlitz3.ab3@5900>   MOVE.l (A7)+,D0
0002410E <AmiBlitz3.ab3@5901>   LSR.l #2,D0
00024114 <AmiBlitz3.ab3@5902>   MOVE.l D0,temp1
00024116 <AmiBlitz3.ab3@5903>   MOVE.l D7,D1
00024118 <AmiBlitz3.ab3@5904>   MOVEQ.l #$14,D2
0002411A <AmiBlitz3.ab3@5905>   MOVEQ.l #-$01,D3
0002411E <AmiBlitz3.ab3@5906>   JSR _Seek(A6)
00024120 <AmiBlitz3.ab3@5907>   MOVE.l D7,D1
00024126 <AmiBlitz3.ab3@5908>   MOVE.l #temp1,D2
00024128 <AmiBlitz3.ab3@5909>   MOVEQ.l #$04,D3
0002412C <AmiBlitz3.ab3@5910>    JSR _Write(A6)
0002412E <AmiBlitz3.ab3@5911>   MOVE.l D7,D1
00024130 <AmiBlitz3.ab3@5912>   MOVEQ.l #$1C,D2
00024132 <AmiBlitz3.ab3@5913>   MOVEQ.l #-$01,D3
00024136 <AmiBlitz3.ab3@5914>    JSR _Seek(A6)
00024138 <AmiBlitz3.ab3@5915>   MOVE.l D7,D1
0002413E <AmiBlitz3.ab3@5916>   MOVE.l #temp1,D2
00024140 <AmiBlitz3.ab3@5917>   MOVEQ.l #$04,D3
00024144 <AmiBlitz3.ab3@5918>    JSR _Write(A6)
00024146 <AmiBlitz3.ab3@5919>   MOVE.l D7,D1
0002414A <AmiBlitz3.ab3@5920>    JSR _Close(A6)
0002414E <AmiBlitz3.ab3@5921> BRA.w call_setpointernormal
00024150 <AmiBlitz3.ab3@5925>   ADDQ.w #5,D1
00024152 <AmiBlitz3.ab3@5926>   ADDQ.b #8,D0
00024156 <AmiBlitz3.ab3@5929>     CMPA.w #$0,A2
0002415A <AmiBlitz3.ab3@5930>     BEQ.w writelist__done
0002415E <AmiBlitz3.ab3@5931>      BSR.w writeitem
00024160 <AmiBlitz3.ab3@5932>     MOVEA.l (A2),A2
00024164 <AmiBlitz3.ab3@5933> BRA.w writelist__loop
00024166 <AmiBlitz3.ab3@5936> RTS
00024168 <AmiBlitz3.ab3@5939>   MOVEQ.l #$00,D3
0002416C <AmiBlitz3.ab3@5940>   MOVE.b $0(A2,D5.W),D3
0002416E <AmiBlitz3.ab3@5941>   ADDQ.w #1,D3
00024172 <AmiBlitz3.ab3@5942>   BCLR #$0,D3                                              ;word align
00024174 <AmiBlitz3.ab3@5943>   MOVE.l (A2),-(A7)
00024178 <AmiBlitz3.ab3@5944>    BEQ.w writeitem__skip
0002417C <AmiBlitz3.ab3@5945>    BSR.w resoff
0002417E <AmiBlitz3.ab3@5946>   ADD.l D3,D6
00024180 <AmiBlitz3.ab3@5947>   MOVE.l D6,(A2)
00024182 <AmiBlitz3.ab3@5948>   SUB.l D3,D6
00024184 <AmiBlitz3.ab3@5951>    ADD.l D3,D6
00024186 <AmiBlitz3.ab3@5952>   MOVE.l A2,D2
00024188 <AmiBlitz3.ab3@5953>   MOVE.l D7,D1
0002418E <AmiBlitz3.ab3@5954>   MOVEA.l _dosbase,A6
00024192 <AmiBlitz3.ab3@5955>    JSR _Write(A6)
00024194 <AmiBlitz3.ab3@5956>   MOVE.l (A7)+,(A2)
00024196 <AmiBlitz3.ab3@5957> RTS
00024198 <AmiBlitz3.ab3@5960>   MOVE.l D6,D2
0002419C <AmiBlitz3.ab3@5961> BRA.w addhunkoffset
000241A0 <AmiBlitz3.ab3@5965>     CMPA.w #$0,A2
000241A4 <AmiBlitz3.ab3@5966>      BEQ.w writeoffs__done
000241AA <AmiBlitz3.ab3@5967>     MOVEA.l newtypebase,A1
000241AC <AmiBlitz3.ab3@5968>     MOVEQ.l #$00,D1
000241B0 <AmiBlitz3.ab3@5971>       CMPA.w #$0,A1
000241B4 <AmiBlitz3.ab3@5972>       BEQ.w writeoffs__found
000241B8 <AmiBlitz3.ab3@5973>       CMPA.l $A(A2),A1
000241BC <AmiBlitz3.ab3@5974>        BEQ.w writeoffs__found
000241BE <AmiBlitz3.ab3@5975>       ADDQ.w #1,D1
000241C0 <AmiBlitz3.ab3@5976>       MOVEA.l (A1),A1
000241C4 <AmiBlitz3.ab3@5977> BRA.w writeoffs__loop2
000241C8 <AmiBlitz3.ab3@5980>     MOVE.w $A(A2),-(A7)
000241CC <AmiBlitz3.ab3@5981>     MOVE.w D1,$A(A2)
000241D0 <AmiBlitz3.ab3@5982>      BSR.w writeitem
000241D4 <AmiBlitz3.ab3@5983>     MOVE.w (A7)+,$A(A2)
000241D6 <AmiBlitz3.ab3@5984>     MOVEA.l (A2),A2
000241DA <AmiBlitz3.ab3@5985> BRA.w writeoffs
000241DC <AmiBlitz3.ab3@5988> RTS
000241DE <AmiBlitz3.ab3@5992>   MOVEQ.l #$00,D0
000241E2 <AmiBlitz3.ab3@5995>   CMPA.w #$0,A2
000241E6 <AmiBlitz3.ab3@5996>    BEQ.w countem__done
000241E8 <AmiBlitz3.ab3@5997>   ADDQ.w #1,D0
000241EA <AmiBlitz3.ab3@5998>   MOVEA.l (A2),A2
000241EE <AmiBlitz3.ab3@5999> BRA.w countem__loop
000241F4 <AmiBlitz3.ab3@6002>   MOVE.w D0,temp1
000241F6 <AmiBlitz3.ab3@6003>   MOVE.l D7,D1
000241FC <AmiBlitz3.ab3@6004>   MOVE.l #temp1,D2
000241FE <AmiBlitz3.ab3@6005>   MOVEQ.l #$02,D3
00024200 <AmiBlitz3.ab3@6006>   ADDQ.l #2,D6
00024206 <AmiBlitz3.ab3@6007>   MOVEA.l _dosbase,A6
0002420A <AmiBlitz3.ab3@6008> JMP _Write(A6)
00024210 <AmiBlitz3.ab3@6012>    TST.b resdisable
00024214 <AmiBlitz3.ab3@6013>    BEQ resmacs__l1
0002421A <AmiBlitz3.ab3@6014>    MOVE.l currentmacroaddr,a3
00024220 <AmiBlitz3.ab3@6015>    CMP.l #0,a3
00024224 <AmiBlitz3.ab3@6016>    BEQ resmacs__l1
00024226 <AmiBlitz3.ab3@6017>    MOVE.l (a3),a3
0002422A <AmiBlitz3.ab3@6018> BRA resmacs__l2
00024230 <AmiBlitz3.ab3@6021>   MOVEA.l macrobase,A3                                     ;??begin org code??
00024232 <AmiBlitz3.ab3@6024>   MOVEA.l A3,A2
00024236 <AmiBlitz3.ab3@6025>   BSR.w countem
0002423A <AmiBlitz3.ab3@6028>    CMPA.w #$0,A3
0002423E <AmiBlitz3.ab3@6029>    BEQ.w resmacs__done
00024240 <AmiBlitz3.ab3@6030>   MOVE.l D6,D5
00024242 <AmiBlitz3.ab3@6031>   MOVE.l (A3),-(A7)
00024246 <AmiBlitz3.ab3@6032>   MOVE.l $4(A3),-(A7)
00024248 <AmiBlitz3.ab3@6033>   MOVEQ.l #$00,D3
0002424C <AmiBlitz3.ab3@6034>   MOVE.b $C(A3),D3
0002424E <AmiBlitz3.ab3@6035>   ADDQ.w #1,D3
00024252 <AmiBlitz3.ab3@6036>   BCLR #$0,D3
00024254 <AmiBlitz3.ab3@6037>   ADD.l D3,D6                                              ;add len of struct
00024258 <AmiBlitz3.ab3@6038>   TST.w $8(A3)
0002425C <AmiBlitz3.ab3@6039>    BEQ.w resmacs__notext
00024260 <AmiBlitz3.ab3@6040>   MOVE.l D6,$4(A3)
00024262 <AmiBlitz3.ab3@6041>   MOVE.l D5,D2
00024264 <AmiBlitz3.ab3@6042>   ADDQ.l #4,D2
00024268 <AmiBlitz3.ab3@6043>    BSR.w addhunkoffset
0002426A <AmiBlitz3.ab3@6046>   MOVEQ.l #$00,D4
0002426E <AmiBlitz3.ab3@6047>   MOVE.w $8(A3),D4
00024270 <AmiBlitz3.ab3@6048>   ADDQ.w #1,D4
00024274 <AmiBlitz3.ab3@6049>   BCLR #$0,D4
00024276 <AmiBlitz3.ab3@6050>   ADD.l D4,D6
00024278 <AmiBlitz3.ab3@6051>   TST.l (A3)
0002427C <AmiBlitz3.ab3@6052>    BEQ.w resmacs__nomore
0002427E <AmiBlitz3.ab3@6053>   MOVE.l D6,(A3)
00024280 <AmiBlitz3.ab3@6054>   MOVE.l D5,D2
00024284 <AmiBlitz3.ab3@6055>    BSR.w addhunkoffset
00024286 <AmiBlitz3.ab3@6058>   MOVE.l A3,D2
00024288 <AmiBlitz3.ab3@6059>   MOVE.l D7,D1
0002428E <AmiBlitz3.ab3@6061>    MOVEA.l _dosbase,A6
00024292 <AmiBlitz3.ab3@6062>    JSR _Write(a6)
00024294 <AmiBlitz3.ab3@6063>   TST.l D4
00024298 <AmiBlitz3.ab3@6064>    BEQ.w resmacs__skip
0002429A <AmiBlitz3.ab3@6065>   MOVE.l (A7),D2
0002429C <AmiBlitz3.ab3@6066>   MOVE.l D4,D3
0002429E <AmiBlitz3.ab3@6067>   MOVE.l D7,D1
000242A4 <AmiBlitz3.ab3@6069>     MOVEA.l _dosbase,A6
000242A8 <AmiBlitz3.ab3@6070>    JSR _Write(A6)
000242AC <AmiBlitz3.ab3@6073>   MOVE.l (A7)+,$4(A3)
000242AE <AmiBlitz3.ab3@6074>   MOVE.l (A7)+,(A3)
000242B0 <AmiBlitz3.ab3@6075>   MOVEA.l (A3),A3
000242B4 <AmiBlitz3.ab3@6076> BRA.w resmacs__loop
000242B6 <AmiBlitz3.ab3@6079> RTS
000242BC <AmiBlitz3.ab3@6083>   TST.b resdisable
000242C0 <AmiBlitz3.ab3@6084>   BEQ restypes__l1
000242C6 <AmiBlitz3.ab3@6085>   MOVE.l lastrestype,a3
000242CC <AmiBlitz3.ab3@6086>   CMP.l #0,a3
000242D0 <AmiBlitz3.ab3@6087>   BEQ restypes__l1
000242D2 <AmiBlitz3.ab3@6088>   MOVE.l (a3),a3
000242D6 <AmiBlitz3.ab3@6089> BRA restypes__l2
000242DC <AmiBlitz3.ab3@6092>   MOVEA.l newtype_string,A3
000242DE <AmiBlitz3.ab3@6095>   MOVEA.l A3,A2
000242E2 <AmiBlitz3.ab3@6096>    BSR.w countem
000242E6 <AmiBlitz3.ab3@6099>    CMPA.w #$0,A3
000242EA <AmiBlitz3.ab3@6100>    BEQ.w restypes__done
000242EC <AmiBlitz3.ab3@6101>   MOVE.l D6,-(A7)
000242F0 <AmiBlitz3.ab3@6102>   MOVEA.l $4(A3),A2
000242F2 <AmiBlitz3.ab3@6103>   MOVEQ.l #$0E,D5
000242F6 <AmiBlitz3.ab3@6104>    BSR.w writeoffs
000242F8 <AmiBlitz3.ab3@6105>   MOVE.l (A7)+,D0
000242FC <AmiBlitz3.ab3@6106>   MOVE.l $4(A3),-(A7)
00024300 <AmiBlitz3.ab3@6107>   MOVE.l D0,$4(A3)
00024302 <AmiBlitz3.ab3@6108>   MOVE.l D6,D2
00024304 <AmiBlitz3.ab3@6109>   ADDQ.l #4,D2
00024308 <AmiBlitz3.ab3@6110>    BSR.w addhunkoffset
0002430A <AmiBlitz3.ab3@6111>   MOVEQ.l #$00,D3
0002430E <AmiBlitz3.ab3@6112>   MOVE.b $A(A3),D3
00024310 <AmiBlitz3.ab3@6113>   ADDQ.w #1,D3
00024314 <AmiBlitz3.ab3@6114>   BCLR #$0,D3
00024316 <AmiBlitz3.ab3@6115>   ADD.l D3,D6
00024318 <AmiBlitz3.ab3@6116>   MOVE.l A3,D2
0002431A <AmiBlitz3.ab3@6117>   MOVE.l D7,D1
00024320 <AmiBlitz3.ab3@6119>     MOVEA.l _dosbase,A6
00024324 <AmiBlitz3.ab3@6120>     JSR _Write(A6)
00024328 <AmiBlitz3.ab3@6121>   MOVE.l (A7)+,$4(A3)
0002432A <AmiBlitz3.ab3@6122>   MOVEA.l (A3),A3
0002432E <AmiBlitz3.ab3@6123> BRA.w restypes__loop
00024330 <AmiBlitz3.ab3@6126> RTS
00024336 <AmiBlitz3.ab3@6130>    TST.b resdisable
0002433A <AmiBlitz3.ab3@6131>    BEQ resconsts__l1
00024340 <AmiBlitz3.ab3@6132>    MOVE.l currentlabeladdr,a2
00024346 <AmiBlitz3.ab3@6133>    CMP.l #0,a2
0002434A <AmiBlitz3.ab3@6134>    BEQ resconsts__l1
0002434C <AmiBlitz3.ab3@6135>    MOVE.l (a2),a2
00024350 <AmiBlitz3.ab3@6136> BRA resconsts__l2
00024356 <AmiBlitz3.ab3@6139>    MOVEA.l labelbase,A2
00024358 <AmiBlitz3.ab3@6142>    MOVEQ.l #$00,D0
0002435C <AmiBlitz3.ab3@6145>    CMPA.w #$0,A2
00024360 <AmiBlitz3.ab3@6146>    BEQ.w resconsts__done
00024368 <AmiBlitz3.ab3@6147>   CMPI.l #$1,$4(A2)
0002436C <AmiBlitz3.ab3@6148>    BNE.w resconsts__next
0002436E <AmiBlitz3.ab3@6149>   ADDQ.w #1,D0
00024370 <AmiBlitz3.ab3@6152>   MOVEA.l (A2),A2
00024374 <AmiBlitz3.ab3@6153> BRA.w resconsts__loop
0002437A <AmiBlitz3.ab3@6156>   MOVE.w D0,temp1
0002437C <AmiBlitz3.ab3@6157>   MOVE.l D7,D1
00024382 <AmiBlitz3.ab3@6158>   MOVE.l #temp1,D2
00024384 <AmiBlitz3.ab3@6159>   MOVEQ.l #$02,D3
00024386 <AmiBlitz3.ab3@6160>   ADDQ.l #2,D6
0002438C <AmiBlitz3.ab3@6162>     MOVEA.l _dosbase,A6
00024390 <AmiBlitz3.ab3@6163>     JSR _Write(A6)
00024396 <AmiBlitz3.ab3@6164>    TST.b resdisable
0002439A <AmiBlitz3.ab3@6165>    BEQ resconsts__done_l1
000243A0 <AmiBlitz3.ab3@6166>    MOVE.l currentlabeladdr,a2
000243A6 <AmiBlitz3.ab3@6167>    CMP.l #0,a2
000243AA <AmiBlitz3.ab3@6168>    BEQ resconsts__done_l1
000243AC <AmiBlitz3.ab3@6169>    MOVE.l (a2),a2
000243B0 <AmiBlitz3.ab3@6170> BRA resconsts__loop2
000243B6 <AmiBlitz3.ab3@6173>    MOVEA.l labelbase,A2                                    ;write resident labels
000243BA <AmiBlitz3.ab3@6176>    CMPA.w #$0,A2
000243BE <AmiBlitz3.ab3@6177>    BEQ.w resconsts__done2
000243C6 <AmiBlitz3.ab3@6178>   CMPI.l #$1,$4(A2)
000243CA <AmiBlitz3.ab3@6179>    BNE.w resconsts__next2
000243CC <AmiBlitz3.ab3@6180>    MOVEQ.l #$00,D3
000243D0 <AmiBlitz3.ab3@6181>   MOVE.b $12(A2),D3                                        ;length
000243D2 <AmiBlitz3.ab3@6182>   ADDQ.w #1,D3
000243D6 <AmiBlitz3.ab3@6183>   BCLR #$0,D3
000243D8 <AmiBlitz3.ab3@6184>   MOVE.l D6,D2
000243DA <AmiBlitz3.ab3@6185>   ADD.l D3,D6
000243DC <AmiBlitz3.ab3@6188>   MOVE.l (A2),-(A7)
000243DE <AmiBlitz3.ab3@6189>   TST.l (A2)
000243E2 <AmiBlitz3.ab3@6190>    BEQ.w resconsts__nonext
000243E4 <AmiBlitz3.ab3@6191>   MOVE.l D6,(A2)
000243E8 <AmiBlitz3.ab3@6192>    BSR.w addhunkoffset
000243EA <AmiBlitz3.ab3@6195>   MOVE.l A2,D2
000243EC <AmiBlitz3.ab3@6196>   MOVE.l D7,D1
000243F2 <AmiBlitz3.ab3@6198>     MOVEA.l _dosbase,A6
000243F6 <AmiBlitz3.ab3@6199>     JSR _Write(A6)
000243F8 <AmiBlitz3.ab3@6200>   MOVE.l (A7)+,(A2)
000243FA <AmiBlitz3.ab3@6203>   MOVEA.l (A2),A2
000243FE <AmiBlitz3.ab3@6204> BRA.w resconsts__loop2
00024400 <AmiBlitz3.ab3@6207> RTS
0002442A <AmiBlitz3.ab3@6211>    !basic
00024430 <AmiBlitz3.ab3@6212>     MOVE.l ptr_resfile,d0
00024440 <AmiBlitz3.ab3@6213>     resfileP.l = Peek.l(?ptr_resfile)
0002444A <AmiBlitz3.ab3@6214>     If resfileP
00024472 <AmiBlitz3.ab3@6215>       resfile$ = Peek.s(resfileP)
000244BE <AmiBlitz3.ab3@6216>       tests.b = Instr(resfile$,"/")
0002450A <AmiBlitz3.ab3@6217>       testc.b = Instr(resfile$,":")
0002452C <AmiBlitz3.ab3@6218>       If tests=0 AND testc=0
000245AC <AmiBlitz3.ab3@6219>         resfile$ = dos_AddPart{my_residentsdir$,resfile$}
000245BE <AmiBlitz3.ab3@6220>         Poke.l ?ptr_resfile,&resfile$
000245C4 <AmiBlitz3.ab3@6222>     Else
000245FE <AmiBlitz3.ab3@6223>       error{"INTERNAL: Invalid pointer in ptr_resfile!"}
0002461C <AmiBlitz3.ab3@6225>    !asm
0002461E <AmiBlitz3.ab3@6226> RTS
00024624 <AmiBlitz3.ab3@6230> 
0002462A <AmiBlitz3.ab3@6231>   MOVE.l A7,errstack
00024634 <AmiBlitz3.ab3@6234>   MOVE.l #next_resentry,errcont
0002463C <AmiBlitz3.ab3@6235>   MOVE.w #$FFFF,ezerr
00024640 <AmiBlitz3.ab3@6236>   BSR.w Aclearallvars
00024644 <AmiBlitz3.ab3@6237>   BSR.w free_residents
0002464A <AmiBlitz3.ab3@6239>   LEA residents_table,A5
0002464C <AmiBlitz3.ab3@6240>   MOVEQ.l #$07,D6
0002464E <AmiBlitz3.ab3@6243>     TST.b (A5)
00024652 <AmiBlitz3.ab3@6244>     BEQ.w next_resentry
00024658 <AmiBlitz3.ab3@6245>     MOVE.l A5,ptr_resfile
0002465C <AmiBlitz3.ab3@6246>     BSR check_residentpath
00024662 <AmiBlitz3.ab3@6247>     MOVE.l ptr_resfile,d1
00024668 <AmiBlitz3.ab3@6248>     MOVEA.l _dosbase,A6
0002466C <AmiBlitz3.ab3@6249>     JSR _LoadSeg(A6)
00024670 <AmiBlitz3.ab3@6250>     MOVE.l D0,$40(A5)
00024674 <AmiBlitz3.ab3@6251>     BNE.w reloadresident__yeah
00024678 <AmiBlitz3.ab3@6252>     BSR.w reserr
0002467A <AmiBlitz3.ab3@6255>     MOVEA.l D0,A3
0002467C <AmiBlitz3.ab3@6256>     ADDA.l A3,A3
0002467E <AmiBlitz3.ab3@6257>     ADDA.l A3,A3
00024680 <AmiBlitz3.ab3@6258>     ADDQ.w #4,A3                                           ;start of res
00024684 <AmiBlitz3.ab3@6259>     BSR.w JL_0_5A9E
00024688 <AmiBlitz3.ab3@6260>     BSR.w JL_0_5A62                                        ;add macros to list
0002468C <AmiBlitz3.ab3@6261>     BSR.w JL_0_5A32                                        ;read labels
00024690 <AmiBlitz3.ab3@6264>     LEA ResidentEntryStep(A5),A5       ;$44
00024694 <AmiBlitz3.ab3@6265>   DBF D6,reloadresident__loop
0002469E <AmiBlitz3.ab3@6270>   MOVE.l #free_residents,errcont
000246A4 <AmiBlitz3.ab3@6272>   MOVEA.l newtype_string,A3
000246A6 <AmiBlitz3.ab3@6273>   MOVEQ.l #$0B,D7
000246AA <AmiBlitz3.ab3@6274>   BSR.w checkclash
000246B0 <AmiBlitz3.ab3@6276>   MOVEA.l macrobase,A3
000246B2 <AmiBlitz3.ab3@6277>   MOVEQ.l #$d,D7
000246B6 <AmiBlitz3.ab3@6278>   BSR.w checkclash
000246BC <AmiBlitz3.ab3@6280>   MOVEA.l firstconst,A3
000246BE <AmiBlitz3.ab3@6281>   MOVEQ.l #$19,D7
000246C2 <AmiBlitz3.ab3@6282>   BSR.w checkclash
000246C4 <AmiBlitz3.ab3@6285> RTS
000246C6 <AmiBlitz3.ab3@6289>   MOVEA.l A3,A4
000246CA <AmiBlitz3.ab3@6292>     CMPA.w #$0,A4
000246CE <AmiBlitz3.ab3@6293>     BEQ.w checkclash__done
000246D4 <AmiBlitz3.ab3@6295>     LEA ptr_parameterstore,A0
000246D8 <AmiBlitz3.ab3@6296>     LEA $0(A4,D7.W),A1
000246DA <AmiBlitz3.ab3@6297>     MOVEQ.l #-$01,D2
000246DC <AmiBlitz3.ab3@6300>       ADDQ.w #1,D2
000246DE <AmiBlitz3.ab3@6301>       MOVE.b (A1)+,(A0)+
000246E2 <AmiBlitz3.ab3@6302>     BNE.w checkclash__loop2
000246E4 <AmiBlitz3.ab3@6303>     MOVEA.l A3,A2
000246E8 <AmiBlitz3.ab3@6306>     BSR.w findlab
000246EC <AmiBlitz3.ab3@6307>     BNE.w checkclash__next                                  ;not found
000246EE <AmiBlitz3.ab3@6308>     CMPA.l A2,A4
000246F2 <AmiBlitz3.ab3@6309>     BEQ.w checkclash__l1
000246F4 <AmiBlitz3.ab3@6310>     MOVE.l a1,a5
000246F8 <AmiBlitz3.ab3@6311> BRA clasherr
000246FC <AmiBlitz3.ab3@6314> BRA.w checkclash__more
000246FE <AmiBlitz3.ab3@6317>     MOVEA.l (A4),A4
00024702 <AmiBlitz3.ab3@6318> BRA.w checkclash__loop
00024704 <AmiBlitz3.ab3@6321> RTS
0002470A <AmiBlitz3.ab3@6325>   MOVEA.l _dosbase,A6
00024710 <AmiBlitz3.ab3@6327>   LEA newtype_string,A0
00024716 <AmiBlitz3.ab3@6328>   MOVE.l A0,lastrestype
00024718 <AmiBlitz3.ab3@6329>   CLR.l (A0)
0002471E <AmiBlitz3.ab3@6331>   LEA macrobase,A0
00024724 <AmiBlitz3.ab3@6332>   MOVE.l A0,currentmacroaddr
00024726 <AmiBlitz3.ab3@6333>   CLR.l (A0)
0002472C <AmiBlitz3.ab3@6335>   LEA labelbase,A0
00024732 <AmiBlitz3.ab3@6336>   MOVE.l A0,currentlabeladdr
00024734 <AmiBlitz3.ab3@6337>   CLR.l (A0)
0002473A <AmiBlitz3.ab3@6338>   CLR.w rescnt
00024772 <AmiBlitz3.ab3@6342>   !ComData_SetB{comByte_DebugMode,debugmode}
00024778 <AmiBlitz3.ab3@6345>   LEA residents_table,A2
0002477A <AmiBlitz3.ab3@6346>   MOVEQ.l #$07,D2
0002477E <AmiBlitz3.ab3@6349>      MOVE.l $40(A2),D1
00024782 <AmiBlitz3.ab3@6350>      BEQ.w free_residents__next
00024786 <AmiBlitz3.ab3@6351>       CLR.l $40(A2)
0002478C <AmiBlitz3.ab3@6352>       MOVEA.l _dosbase,A6
00024790 <AmiBlitz3.ab3@6353>       JSR _UnLoadSeg(A6)
00024794 <AmiBlitz3.ab3@6356>      LEA ResidentEntryStep(A2),A2   ; $44
00024798 <AmiBlitz3.ab3@6357>    DBF D2,free_residents__loop
0002479A <AmiBlitz3.ab3@6359> RTS
0002479C <AmiBlitz3.ab3@6363>   MOVE.w (A3)+,D1
000247A0 <AmiBlitz3.ab3@6364>   BEQ.w JL_0_5A60
000247A6 <AmiBlitz3.ab3@6365>   MOVEA.l currentlabeladdr,A2
000247A8 <AmiBlitz3.ab3@6366>   MOVE.l A3,(A2)
000247AA <AmiBlitz3.ab3@6367>   SUBQ.w #1,D1
000247AC <AmiBlitz3.ab3@6370>     MOVEA.l A3,A2
000247AE <AmiBlitz3.ab3@6371>     MOVEA.l (A3),A3
000247B2 <AmiBlitz3.ab3@6372>   DBF D1,JL_0_5A42
000247B4 <AmiBlitz3.ab3@6374>   CLR.l (a2)                                               ;bugfix for object
000247BA <AmiBlitz3.ab3@6375>   MOVE.l A2,currentlabeladdr
000247BC <AmiBlitz3.ab3@6376>   MOVEA.l A2,A3
000247BE <AmiBlitz3.ab3@6377>   MOVEQ.l #$00,D0
000247C2 <AmiBlitz3.ab3@6378>   MOVE.b $12(A3),D0
000247C4 <AmiBlitz3.ab3@6379>   ADDQ.w #1,D0
000247C8 <AmiBlitz3.ab3@6380>   BCLR #$0,D0
000247CA <AmiBlitz3.ab3@6381>   ADDA.w D0,A3
000247CC <AmiBlitz3.ab3@6384> RTS
000247CE <AmiBlitz3.ab3@6388>   MOVE.w (A3)+,D1
000247D2 <AmiBlitz3.ab3@6389>   BEQ.w JL_0_5A9C
000247D8 <AmiBlitz3.ab3@6391>   MOVEA.l currentmacroaddr,A2
000247DA <AmiBlitz3.ab3@6392>   MOVE.l A3,(A2)
000247DC <AmiBlitz3.ab3@6393>   SUBQ.w #1,D1
000247DE <AmiBlitz3.ab3@6396>     MOVEA.l A3,A2
000247E0 <AmiBlitz3.ab3@6397>     MOVEA.l (A3),A3
000247E4 <AmiBlitz3.ab3@6398>   DBF D1,JL_0_5A72
000247EA <AmiBlitz3.ab3@6400>   MOVE.l A2,currentmacroaddr
000247EC <AmiBlitz3.ab3@6401>   MOVEA.l A2,A3
000247EE <AmiBlitz3.ab3@6402>   MOVEQ.l #$00,D0
000247F2 <AmiBlitz3.ab3@6403>   MOVE.b $C(A3),D0
000247F4 <AmiBlitz3.ab3@6404>   ADDQ.w #1,D0
000247F8 <AmiBlitz3.ab3@6405>   BCLR #$0,D0
000247FC <AmiBlitz3.ab3@6406>   MOVE.w $8(A3),D1
000247FE <AmiBlitz3.ab3@6407>   ADDQ.w #1,D1
00024802 <AmiBlitz3.ab3@6408>   BCLR #$0,D1
00024804 <AmiBlitz3.ab3@6409>   ADDA.w D0,A3
00024806 <AmiBlitz3.ab3@6410>   ADDA.w D1,A3
00024808 <AmiBlitz3.ab3@6413> RTS
0002480A <AmiBlitz3.ab3@6417>   MOVE.w (A3)+,D1
0002480E <AmiBlitz3.ab3@6418>   BEQ.w JL_0_5B38
00024810 <AmiBlitz3.ab3@6419>   MOVE.w D1,-(A7)
00024812 <AmiBlitz3.ab3@6420>   SUBQ.w #1,D1
00024818 <AmiBlitz3.ab3@6421>   MOVEA.l lastrestype,A2
0002481A <AmiBlitz3.ab3@6422>   MOVE.l A2,-(A7)
0002481C <AmiBlitz3.ab3@6425>       MOVE.l (A3),D0
00024820 <AmiBlitz3.ab3@6426>       BEQ.w JL_0_5ABC
00024822 <AmiBlitz3.ab3@6427>       MOVEA.l D0,A3
00024826 <AmiBlitz3.ab3@6428> BRA.w JL_0_5AB0
0002482A <AmiBlitz3.ab3@6431>       MOVE.b $E(A3),D0
0002482C <AmiBlitz3.ab3@6432>       ADDQ.w #1,D0
00024830 <AmiBlitz3.ab3@6433>       BCLR #$0,D0
00024832 <AmiBlitz3.ab3@6434>       ADDA.w D0,A3
00024834 <AmiBlitz3.ab3@6435>       MOVE.l A3,(A2)
00024836 <AmiBlitz3.ab3@6436>       MOVEA.l A3,A2
00024838 <AmiBlitz3.ab3@6437>       MOVEQ.l #$00,D0
0002483C <AmiBlitz3.ab3@6438>       MOVE.b $A(A3),D0
0002483E <AmiBlitz3.ab3@6439>       ADDQ.w #1,D0
00024842 <AmiBlitz3.ab3@6440>       BCLR #$0,D0
00024844 <AmiBlitz3.ab3@6441>       ADDA.w D0,A3
00024848 <AmiBlitz3.ab3@6442>   DBF D1,JL_0_5AB0
0002484A <AmiBlitz3.ab3@6444>   MOVEA.l (A7)+,A0
0002484C <AmiBlitz3.ab3@6445>   MOVEA.l (A0),A0
00024850 <AmiBlitz3.ab3@6448>     CMPA.w #$0,A0
00024854 <AmiBlitz3.ab3@6449>     BEQ.w JL_0_5B2A
00024858 <AmiBlitz3.ab3@6450>     MOVEA.l $4(A0),A1
0002485C <AmiBlitz3.ab3@6453>     CMPA.w #$0,A1
00024860 <AmiBlitz3.ab3@6454>     BEQ.w JL_0_5B24
00024864 <AmiBlitz3.ab3@6455>     MOVE.w $A(A1),D0
0002486A <AmiBlitz3.ab3@6456>     MOVEA.l newtypebase,A4
0002486E <AmiBlitz3.ab3@6457>     CMP.w #$7,D0
00024872 <AmiBlitz3.ab3@6458>     BCS.w JL_0_5B0E
00024878 <AmiBlitz3.ab3@6459>     SUB.w rescnt,D0
0002487A <AmiBlitz3.ab3@6462>     SUBQ.w #1,D0
0002487E <AmiBlitz3.ab3@6463>     BMI.w JL_0_5B1A
00024880 <AmiBlitz3.ab3@6466>        MOVEA.l (A4),A4
00024884 <AmiBlitz3.ab3@6467>   DBF D0,JL_0_5B14
00024888 <AmiBlitz3.ab3@6470>     MOVE.l A4,$A(A1)
0002488A <AmiBlitz3.ab3@6471>     MOVEA.l (A1),A1
0002488E <AmiBlitz3.ab3@6472> BRA.w JL_0_5AEE
00024890 <AmiBlitz3.ab3@6475>     MOVEA.l (A0),A0
00024894 <AmiBlitz3.ab3@6476> BRA.w JL_0_5AE2
00024896 <AmiBlitz3.ab3@6479>   MOVE.w (A7)+,D0
0002489C <AmiBlitz3.ab3@6480>   ADD.w D0,rescnt
000248A2 <AmiBlitz3.ab3@6481>   MOVE.l A2,lastrestype
000248A4 <AmiBlitz3.ab3@6484> RTS
000248AA <AmiBlitz3.ab3@6488>   LEA tokens,A0
000248AE <AmiBlitz3.ab3@6489>   MOVE.w #$003A,D0                                         ; $003A : 58 dec
000248B0 <AmiBlitz3.ab3@6492>     MOVEA.l (A0),A0
000248B4 <AmiBlitz3.ab3@6493>   DBF D0,JL_0_5BD0
000248BA <AmiBlitz3.ab3@6495>   MOVEA.l #asmpnts,A1                                      ;create tokentab
000248BE <AmiBlitz3.ab3@6496>   MOVE.w #$0076,D0                                         ; $0076 : 118 dec
000248C2 <AmiBlitz3.ab3@6499>       LEA $6(A0),A2
000248C4 <AmiBlitz3.ab3@6502>         TST.b (A2)+
000248C8 <AmiBlitz3.ab3@6503>       BNE.w JL_0_5BE4
000248CA <AmiBlitz3.ab3@6506>         TST.b (A2)+
000248CE <AmiBlitz3.ab3@6507>       BNE.w JL_0_5BEA
000248D0 <AmiBlitz3.ab3@6509>       ADDQ.w #1,A2
000248D2 <AmiBlitz3.ab3@6510>       EXG.l D1,A2
000248D6 <AmiBlitz3.ab3@6511>       BCLR #$0,D1
000248D8 <AmiBlitz3.ab3@6512>       EXG.l D1,A2
000248DA <AmiBlitz3.ab3@6513>       MOVE.l A2,(A1)+
000248DC <AmiBlitz3.ab3@6514>       MOVEA.l (A0),A0
000248E0 <AmiBlitz3.ab3@6515>   DBF D0,JL_0_5BE0
000248E2 <AmiBlitz3.ab3@6516> RTS
000248E6 <AmiBlitz3.ab3@6520>   BSR.w asmconst
000248E8 <AmiBlitz3.ab3@6521>   MOVEQ.l #$0B,D5
000248EA <AmiBlitz3.ab3@6522> RTS
000248EC <AmiBlitz3.ab3@6525> unmove:  Ds.w 1
000248F0 <AmiBlitz3.ab3@6529>   MOVE.w #$48E7,D1
000248F4 <AmiBlitz3.ab3@6530>   BSR.w writeword                                          ;movem.l -(a7)
000248F8 <AmiBlitz3.ab3@6531>   MOVE.w #$000F,D2
000248FA <AmiBlitz3.ab3@6532>   SUB.w D4,D2
000248FC <AmiBlitz3.ab3@6533>   MOVEQ.l #-$01,D1
000248FE <AmiBlitz3.ab3@6534>   BCLR D2,D1
00024902 <AmiBlitz3.ab3@6535>   BSR.w writeword
00024904 <AmiBlitz3.ab3@6536>   MOVEQ.l #-$01,D1
00024906 <AmiBlitz3.ab3@6537>   BCLR D4,D1
0002490C <AmiBlitz3.ab3@6538>   MOVE.w D1,unmove
0002490E <AmiBlitz3.ab3@6539> RTS
00024912 <AmiBlitz3.ab3@6543>   MOVE.w #$4CDF,D1
00024916 <AmiBlitz3.ab3@6544>   BSR.w writeword
0002491A <AmiBlitz3.ab3@6545>   MOVE.w unmove(PC),D1
0002491E <AmiBlitz3.ab3@6546> BRA.w writeword
00024922 <AmiBlitz3.ab3@6559>   BSR.w JL_0_5D22
00024926 <AmiBlitz3.ab3@6560>   CMP.w #$2C,D0                                            ;#','
0002492A <AmiBlitz3.ab3@6561>    BNE.w syntaxerr
00024930 <AmiBlitz3.ab3@6562>   MOVE.l #$48E7FFFE,D1                                     ;movem to stack
00024934 <AmiBlitz3.ab3@6563>    BSR.w writelong
00024936 <AmiBlitz3.ab3@6564>   MOVE.w D4,D1
0002493A <AmiBlitz3.ab3@6565>   ORI.w #$2F00,D1
0002493E <AmiBlitz3.ab3@6566>    BSR.w writeword
00024942 <AmiBlitz3.ab3@6567>    BSR.w get1bytemain
00024946 <AmiBlitz3.ab3@6568>    BSR.w getparameter
0002494A <AmiBlitz3.ab3@6569>    BSR.w JL_0_8E3C
0002494E <AmiBlitz3.ab3@6570>    BSR.w calcvar
00024952 <AmiBlitz3.ab3@6571>    BTST #$E,D2
00024956 <AmiBlitz3.ab3@6572>    BEQ.w JL_0_5C80
0002495A <AmiBlitz3.ab3@6575>    MOVE.b #$3,D2
0002495E <AmiBlitz3.ab3@6576> BRA.w JL_0_5C8E
00024960 <AmiBlitz3.ab3@6579>   TST.b D2
00024964 <AmiBlitz3.ab3@6580>    BEQ.w JL_0_5C78
00024968 <AmiBlitz3.ab3@6581>   CMP.b #$7,D2
0002496C <AmiBlitz3.ab3@6582>    BEQ.w JL_0_5C78
00024970 <AmiBlitz3.ab3@6585>   BTST #$F,D2
00024974 <AmiBlitz3.ab3@6586>    BNE.w JL_0_5CA4
00024978 <AmiBlitz3.ab3@6587>   MOVE.w #$45ED,D1                                         ;lea x(a5),a2
0002497C <AmiBlitz3.ab3@6588>    BSR.w writeword
0002497E <AmiBlitz3.ab3@6589>   MOVE.w D3,D1
00024982 <AmiBlitz3.ab3@6590>    BSR.w writeword
00024986 <AmiBlitz3.ab3@6593>   MOVE.w #$201F,D1                                         ;move.l (a7)+,d0
0002498A <AmiBlitz3.ab3@6594>    BSR.w writeword
0002498E <AmiBlitz3.ab3@6595>   MOVE.w #$1480,D1
00024992 <AmiBlitz3.ab3@6596>   CMP.b #$1,D2
00024996 <AmiBlitz3.ab3@6597>    BEQ.w JL_0_5CC8
0002499A <AmiBlitz3.ab3@6598>   EORI.w #$3000,D1
0002499E <AmiBlitz3.ab3@6599>   CMP.b #$2,D2
000249A2 <AmiBlitz3.ab3@6600>    BNE.w JL_0_5CC8
000249A6 <AmiBlitz3.ab3@6601>   ORI.w #$1000,D1
000249AA <AmiBlitz3.ab3@6604>   BSR.w writeword
000249B0 <AmiBlitz3.ab3@6605>   MOVE.l #$4CDF7FFF,D1
000249B4 <AmiBlitz3.ab3@6606> BRA.w writelong
000249B8 <AmiBlitz3.ab3@6610>   BSR.w JL_0_5D22
000249BC <AmiBlitz3.ab3@6611>   CMP.w #$2C,D0
000249C0 <AmiBlitz3.ab3@6612>    BNE.w syntaxerr
000249C4 <AmiBlitz3.ab3@6613>    BSR.w regmovems
000249C6 <AmiBlitz3.ab3@6614>   MOVE.w D4,-(A7)
000249C8 <AmiBlitz3.ab3@6615>   MOVEQ.l #$03,D2
000249CC <AmiBlitz3.ab3@6616>    BSR.w eval
000249CE <AmiBlitz3.ab3@6617>   MOVE.w (A7)+,D1
000249D2 <AmiBlitz3.ab3@6618>    BEQ.w JL_0_5D1A
000249D6 <AmiBlitz3.ab3@6619>   CMP.w #$8,D1
000249DA <AmiBlitz3.ab3@6620>    BCC.w JL_0_5D0C
000249DC <AmiBlitz3.ab3@6621>   LSL.w #8,D1
000249DE <AmiBlitz3.ab3@6622>   LSL.w #1,D1
000249E2 <AmiBlitz3.ab3@6623>   ORI.w #$2000,D1
000249E6 <AmiBlitz3.ab3@6624>    BSR.w writeword
000249EA <AmiBlitz3.ab3@6625> BRA.w JL_0_5D1A
000249EC <AmiBlitz3.ab3@6628>   SUBQ.w #8,D1
000249EE <AmiBlitz3.ab3@6629>   LSL.w #8,D1
000249F0 <AmiBlitz3.ab3@6630>   LSL.w #1,D1
000249F4 <AmiBlitz3.ab3@6631>   ORI.w #$2040,D1
000249F8 <AmiBlitz3.ab3@6632>   BSR.w writeword
000249FC <AmiBlitz3.ab3@6635> BRA.w dounmove
00024A00 <AmiBlitz3.ab3@6639>   BSR.w get1bytemain
00024A04 <AmiBlitz3.ab3@6642>   ORI.w #$20,D0
00024A08 <AmiBlitz3.ab3@6643>   CMP.w #$64,D0
00024A0C <AmiBlitz3.ab3@6644>    BEQ.w JL_0_5D4E
00024A10 <AmiBlitz3.ab3@6645>   CMP.w #$61,D0
00024A14 <AmiBlitz3.ab3@6646>    BNE.w syntaxerr
00024A18 <AmiBlitz3.ab3@6647>    BSR.w JL_0_5D4E
00024A1A <AmiBlitz3.ab3@6648>   ADDQ.w #8,D4
00024A1C <AmiBlitz3.ab3@6649> RTS
00024A48 <AmiBlitz3.ab3@6653>   !fget                                                   ;bsr.w get1bytemain
00024A4C <AmiBlitz3.ab3@6655>   ORI.w #$20,D0
00024A50 <AmiBlitz3.ab3@6658>   CMP.w #$61,D0
00024A54 <AmiBlitz3.ab3@6659>   BNE.w syntaxerr
00024A80 <AmiBlitz3.ab3@6662>   !fget                                                    ;bsr.w get1bytemain
00024A84 <AmiBlitz3.ab3@6663>   SUBI.w #$30,D0
00024A88 <AmiBlitz3.ab3@6664>    BMI.w syntaxerr
00024A8C <AmiBlitz3.ab3@6665>   CMP.w #$7,D0
00024A90 <AmiBlitz3.ab3@6666>    BHI.w syntaxerr
00024A92 <AmiBlitz3.ab3@6667>   MOVE.w D0,D4
00024ABE <AmiBlitz3.ab3@6668>   !fget
00024AC0 <AmiBlitz3.ab3@6669> RTS                                                        ;bra.w get1bytemain
00024AC2 <AmiBlitz3.ab3@6673>   ADDQ.w #8,D4
00024AC4 <AmiBlitz3.ab3@6676>   MOVEQ.l #$00,D5
00024AC8 <AmiBlitz3.ab3@6677>   SUBI.w #$30,D4
00024ACC <AmiBlitz3.ab3@6680>   CMP.w #$2D,D0
00024AD0 <AmiBlitz3.ab3@6681>    BEQ.w JL_0_5D9E
00024AD4 <AmiBlitz3.ab3@6682>   CMP.w #$2F,D0
00024AD8 <AmiBlitz3.ab3@6683>    BEQ.w JL_0_5D8C
00024ADC <AmiBlitz3.ab3@6684> BRA.w syntaxerr
00024ADE <AmiBlitz3.ab3@6687>   BSET D4,D5
00024AE0 <AmiBlitz3.ab3@6690>   MOVE.w D5,D4
00024AE2 <AmiBlitz3.ab3@6691>   MOVEQ.l #$0F,D5
00024AE4 <AmiBlitz3.ab3@6692> RTS
00024AE6 <AmiBlitz3.ab3@6695>   BSET D4,D5
00024AEA <AmiBlitz3.ab3@6696>   BSR.w JL_0_5D1E
00024AFC <AmiBlitz3.ab3@6697>   !compare3                                                ;bsr.w JL_0_5FC0
00024B00 <AmiBlitz3.ab3@6698>   BNE.w JL_0_5D70
00024B04 <AmiBlitz3.ab3@6699> BRA.w JL_0_5D84
00024B06 <AmiBlitz3.ab3@6702>   MOVE.w D4,D1
00024B0A <AmiBlitz3.ab3@6703>    BSR.w JL_0_5D1E
00024B0C <AmiBlitz3.ab3@6704>   CMP.w D4,D1
00024B10 <AmiBlitz3.ab3@6705>    BLS.w JL_0_5DAC
00024B12 <AmiBlitz3.ab3@6706>   EXG.l D4,D1
00024B14 <AmiBlitz3.ab3@6709>   BSET D1,D5
00024B16 <AmiBlitz3.ab3@6710>   ADDQ.w #1,D1
00024B18 <AmiBlitz3.ab3@6711>   CMP.w D4,D1
00024B1C <AmiBlitz3.ab3@6712>    BLS.w JL_0_5DAC
00024B2E <AmiBlitz3.ab3@6713>   !compare3                                                ;bsr.w JL_0_5FC0
00024B32 <AmiBlitz3.ab3@6714>   BNE.w JL_0_5D70
00024B36 <AmiBlitz3.ab3@6715> BRA.w JL_0_5D86
00024B38 <AmiBlitz3.ab3@6718>   MOVEA.l A5,A4                                            ;bsr.w get1bytemain
00024B64 <AmiBlitz3.ab3@6719>    !fget
00024B68 <AmiBlitz3.ab3@6720>   CMP.w #$23,D0
00024B6C <AmiBlitz3.ab3@6721>    BEQ.w getimm
00024B70 <AmiBlitz3.ab3@6722>   CMP.w #$28,D0
00024B74 <AmiBlitz3.ab3@6723>    BEQ.w JL_0_5DFE
00024B78 <AmiBlitz3.ab3@6724>   CMP.w #$2D,D0
00024B7C <AmiBlitz3.ab3@6725>    BNE.w JL_0_5E20
00024BA8 <AmiBlitz3.ab3@6726>    !fget                                                   ;bsr.w get1bytemain       -(
00024BAC <AmiBlitz3.ab3@6727>   CMP.w #$28,D0
00024BB0 <AmiBlitz3.ab3@6728>    BNE.w JL_0_5F4E
00024BB4 <AmiBlitz3.ab3@6729>    BSR.w JL_0_5D3E
00024BB8 <AmiBlitz3.ab3@6730>   CMP.w #$29,D0
00024BBC <AmiBlitz3.ab3@6731>    BNE.w syntaxerr
00024BBE <AmiBlitz3.ab3@6732>   MOVEQ.l #$04,D5
00024BEA <AmiBlitz3.ab3@6733>   !fget                                                    ;bsr.w get1bytemain
00024BEC <AmiBlitz3.ab3@6734> RTS
00024BF0 <AmiBlitz3.ab3@6738>   BSR.w JL_0_5D3E
00024BF4 <AmiBlitz3.ab3@6739>   CMP.w #$29,D0
00024BF8 <AmiBlitz3.ab3@6740>    BNE.w syntaxerr
00024C24 <AmiBlitz3.ab3@6741>   !fget                                                    ;bsr.w get1bytemain
00024C28 <AmiBlitz3.ab3@6742>   CMP.w #$2B,D0
00024C2C <AmiBlitz3.ab3@6743>    BEQ.w JL_0_5E1A
00024C2E <AmiBlitz3.ab3@6744>   MOVEQ.l #$02,D5
00024C30 <AmiBlitz3.ab3@6745> RTS
00024C32 <AmiBlitz3.ab3@6749>   MOVEQ.l #$03,D5
00024C5E <AmiBlitz3.ab3@6750>   !fget                                                    ;bra.w get1bytemain
00024C60 <AmiBlitz3.ab3@6751> RTS
00024C64 <AmiBlitz3.ab3@6755>   ORI.w #$20,D0
00024C66 <AmiBlitz3.ab3@6756>   MOVE.w D0,D1                                            
00024C92 <AmiBlitz3.ab3@6757>    !fget                                                   ;bsr.w get1bytemain
00024C96 <AmiBlitz3.ab3@6758>   CMP.w #$64,D1
00024C9A <AmiBlitz3.ab3@6759>    BNE.w JL_0_5E6C
00024C9E <AmiBlitz3.ab3@6760>   CMP.w #$30,D0
00024CA2 <AmiBlitz3.ab3@6761>    BCS.w JL_0_5EAE
00024CA6 <AmiBlitz3.ab3@6762>   CMP.w #$37,D0
00024CAA <AmiBlitz3.ab3@6763>    BHI.w JL_0_5EAE
00024CAC <AmiBlitz3.ab3@6764>   MOVE.w D0,D4
00024CD8 <AmiBlitz3.ab3@6765>    !fget                                                   ;bsr.w get1bytemain
00024CEA <AmiBlitz3.ab3@6766>    !compare3                                               ;bsr.w JL_0_5FC0
00024CEE <AmiBlitz3.ab3@6767>    BEQ.w JL_0_5E64
00024CF2 <AmiBlitz3.ab3@6768>   CMP.w #$2D,D0
00024CF6 <AmiBlitz3.ab3@6769>    BEQ.w JL_0_5D6A
00024CFA <AmiBlitz3.ab3@6770>   CMP.w #$2F,D0
00024CFE <AmiBlitz3.ab3@6771>    BEQ.w JL_0_5D6A
00024D02 <AmiBlitz3.ab3@6772> BRA.w JL_0_5EB8
00024D04 <AmiBlitz3.ab3@6775>   MOVEQ.l #$00,D5
00024D08 <AmiBlitz3.ab3@6776>   SUBI.w #$30,D4
00024D0A <AmiBlitz3.ab3@6777> RTS
00024D0E <AmiBlitz3.ab3@6780>    CMP.w #$61,D1
00024D12 <AmiBlitz3.ab3@6781>    BNE.w JL_0_5EAE
00024D16 <AmiBlitz3.ab3@6782>   CMP.w #$30,D0
00024D1A <AmiBlitz3.ab3@6783>    BCS.w JL_0_5EAE
00024D1E <AmiBlitz3.ab3@6784>   CMP.w #$37,D0
00024D22 <AmiBlitz3.ab3@6785>    BHI.w JL_0_5EAE
00024D24 <AmiBlitz3.ab3@6786>   MOVE.w D0,D4
00024D50 <AmiBlitz3.ab3@6787>    !fget                                                   ;bsr.w get1bytemain
00024D62 <AmiBlitz3.ab3@6788>    !compare3                                               ;bsr.w JL_0_5FC0
00024D66 <AmiBlitz3.ab3@6789>    BEQ.w JL_0_5EA6
00024D6A <AmiBlitz3.ab3@6790>   CMP.w #$2D,D0
00024D6E <AmiBlitz3.ab3@6791>    BEQ.w JL_0_5D68                                         ;movem
00024D72 <AmiBlitz3.ab3@6792>   CMP.w #$2F,D0
00024D76 <AmiBlitz3.ab3@6793>    BEQ.w JL_0_5D68
00024D7A <AmiBlitz3.ab3@6794> BRA.w JL_0_5EB8
00024D7C <AmiBlitz3.ab3@6797>   MOVEQ.l #1,d5
00024D80 <AmiBlitz3.ab3@6798>   SUBI.w #$30,D4
00024D84 <AmiBlitz3.ab3@6800> BRA 'l10
00024D86 <AmiBlitz3.ab3@6801>   ADDQ.w #8,d4
00024D88 <AmiBlitz3.ab3@6802>   MOVEQ #0,d5
00024D8A <AmiBlitz3.ab3@6803>   BSET d4,d5
00024D8C <AmiBlitz3.ab3@6804>   MOVE.w d5,d4
00024D8E <AmiBlitz3.ab3@6805>   MOVEQ.l #$0f,D5                                          ;01
00024D90 <AmiBlitz3.ab3@6808> RTS
00024D94 <AmiBlitz3.ab3@6812>   ORI.w #$20,D0
00024D96 <AmiBlitz3.ab3@6813>   MOVE.w D0,D4
00024DC2 <AmiBlitz3.ab3@6814>    !fget                                                   ;bsr.w get1bytemain
00024DD4 <AmiBlitz3.ab3@6817>   !compare3                                                ;bsr.w JL_0_5FC0
00024DD8 <AmiBlitz3.ab3@6818>    BNE.w JL_0_5EF2
00024DDC <AmiBlitz3.ab3@6819>   CMP.w #$73,D1
00024DE0 <AmiBlitz3.ab3@6820>    BNE.w JL_0_5EF2
00024DE4 <AmiBlitz3.ab3@6821>   CMP.w #$70,D4
00024DE8 <AmiBlitz3.ab3@6822>    BNE.w JL_0_5EDE
00024DFA <AmiBlitz3.ab3@6823>    !compare3                                               ;bsr.w JL_0_5FC0
00024DFE <AmiBlitz3.ab3@6824>    BNE.w JL_0_5F4E
00024E00 <AmiBlitz3.ab3@6825>   MOVEQ.l #$07,D4
00024E02 <AmiBlitz3.ab3@6826>   MOVEQ.l #$01,D5
00024E04 <AmiBlitz3.ab3@6827> RTS
00024E08 <AmiBlitz3.ab3@6831>   CMP.w #$72,D4
00024E0C <AmiBlitz3.ab3@6832>    BNE.w JL_0_5F4E
00024E1E <AmiBlitz3.ab3@6833>    !compare3                                               ;bsr.w JL_0_5FC0
00024E22 <AmiBlitz3.ab3@6834>    BNE.w JL_0_5F4E
00024E24 <AmiBlitz3.ab3@6835>   MOVEQ.l #$0D,D5
00024E26 <AmiBlitz3.ab3@6836> RTS
00024E2A <AmiBlitz3.ab3@6840>   ORI.w #$20,D0
00024E2E <AmiBlitz3.ab3@6841>   CMP.w #$63,D1
00024E32 <AmiBlitz3.ab3@6842>    BNE.w JL_0_5F22
00024E36 <AmiBlitz3.ab3@6843>   CMP.w #$63,D4
00024E3A <AmiBlitz3.ab3@6844>    BNE.w JL_0_5F4E
00024E3E <AmiBlitz3.ab3@6845>   CMP.w #$72,D0
00024E42 <AmiBlitz3.ab3@6846>    BNE.w JL_0_5F4E
00024E46 <AmiBlitz3.ab3@6847>    BSR.w get1bytemain                                      ;??wy not !fget
00024E4A <AmiBlitz3.ab3@6848>    BEQ.w JL_0_5F1E
00024E4E <AmiBlitz3.ab3@6849>   CMP.w #$2C,D0
00024E52 <AmiBlitz3.ab3@6850>    BNE.w JL_0_5F4E
00024E54 <AmiBlitz3.ab3@6853>   MOVEQ.l #$0C,D5
00024E56 <AmiBlitz3.ab3@6854> RTS
00024E5A <AmiBlitz3.ab3@6858>   CMP.w #$75,D1
00024E5E <AmiBlitz3.ab3@6859>    BNE.w JL_0_5F4E
00024E62 <AmiBlitz3.ab3@6860>   CMP.w #$73,D4
00024E66 <AmiBlitz3.ab3@6861>    BNE.w JL_0_5F4E
00024E6A <AmiBlitz3.ab3@6862>   CMP.w #$70,D0
00024E6E <AmiBlitz3.ab3@6863>    BNE.w JL_0_5F4E
00024E72 <AmiBlitz3.ab3@6864>    BSR.w get1bytemain                                      ;??wy not !fget
00024E76 <AmiBlitz3.ab3@6865>    BEQ.w JL_0_5F4A
00024E7A <AmiBlitz3.ab3@6866>   CMP.w #$2C,D0
00024E7E <AmiBlitz3.ab3@6867>    BNE.w JL_0_5F4E
00024E80 <AmiBlitz3.ab3@6870>   MOVEQ.l #$0E,D5
00024E82 <AmiBlitz3.ab3@6871> RTS
00024E84 <AmiBlitz3.ab3@6875>   MOVEA.l A4,A5
00024E88 <AmiBlitz3.ab3@6876>    BSR.w asmconst
00024E9A <AmiBlitz3.ab3@6877>    !compare3                                               ;bsr.w JL_0_5FC0
00024E9E <AmiBlitz3.ab3@6878>    BEQ.w JL_0_5FB8
00024EA2 <AmiBlitz3.ab3@6879>   CMP.w #$2E,D0
00024EA6 <AmiBlitz3.ab3@6880>    BEQ.w JL_0_5FA0
00024EAA <AmiBlitz3.ab3@6881>   CMP.w #$28,D0
00024EAE <AmiBlitz3.ab3@6882>    BNE.w syntaxerr
00024EB2 <AmiBlitz3.ab3@6883>    BSR.w get1bytemain                                      ;??wy not !fget
00024EB6 <AmiBlitz3.ab3@6884>   ORI.w #$20,D0
00024EBA <AmiBlitz3.ab3@6885>   CMP.w #$70,D0
00024EBE <AmiBlitz3.ab3@6886>    BNE.w JL_0_5F98
00024EC2 <AmiBlitz3.ab3@6887>    BSR.w get1bytemain                                      ;??wy not !fget
00024EC6 <AmiBlitz3.ab3@6888>   ORI.w #$20,D0
00024ECA <AmiBlitz3.ab3@6889>   CMP.w #$63,D0
00024ECE <AmiBlitz3.ab3@6890>    BNE.w syntaxerr
00024ED2 <AmiBlitz3.ab3@6891>    BSR.w get1bytemain                                      ;??wy not !fget
00024ED6 <AmiBlitz3.ab3@6892>    BSR.w JL_0_5FD4
00024ED8 <AmiBlitz3.ab3@6893>   ADDQ.w #4,D5
00024EDA <AmiBlitz3.ab3@6894> RTS
00024EDE <AmiBlitz3.ab3@6898>   BSR.w JL_0_5D46
00024EE2 <AmiBlitz3.ab3@6899> BRA.w JL_0_5FD4
00024EE6 <AmiBlitz3.ab3@6903>    BSR.w get1bytemain                                     ;??wy not !fget
00024EEA <AmiBlitz3.ab3@6904>   ORI.w #$20,D0
00024EEE <AmiBlitz3.ab3@6905>   CMP.w #$77,D0
00024EF2 <AmiBlitz3.ab3@6906>    BEQ.w JL_0_5FBC
00024EF6 <AmiBlitz3.ab3@6907>   CMP.w #$6C,D0
00024EFA <AmiBlitz3.ab3@6908>    BNE.w syntaxerr
00024EFC <AmiBlitz3.ab3@6911>   MOVEQ.l #$08,D5
00024EFE <AmiBlitz3.ab3@6912> RTS
00024F00 <AmiBlitz3.ab3@6916>   MOVEQ.l #$07,D5
00024F02 <AmiBlitz3.ab3@6917> RTS
00024F04 <AmiBlitz3.ab3@6921>   TST.w D0
00024F08 <AmiBlitz3.ab3@6922>    BEQ.w JL_0_5FD2
00024F0C <AmiBlitz3.ab3@6923>   CMP.w #$3A,D0
00024F10 <AmiBlitz3.ab3@6924>    BEQ.w JL_0_5FD2
00024F14 <AmiBlitz3.ab3@6925>   CMP.w #$2C,D0
00024F16 <AmiBlitz3.ab3@6928> RTS
00024F1A <AmiBlitz3.ab3@6932>   CMP.w #$2C,D0
00024F1E <AmiBlitz3.ab3@6933>    BNE.w JL_0_6054
00024F22 <AmiBlitz3.ab3@6934>    BSR.w get1bytemain                                      ;??wy not !fget
00024F26 <AmiBlitz3.ab3@6935>   ORI.w #$20,D0
00024F28 <AmiBlitz3.ab3@6936>   MOVEQ.l #$00,D1
00024F2C <AmiBlitz3.ab3@6937>   CMP.w #$64,D0
00024F30 <AmiBlitz3.ab3@6938>    BEQ.w JL_0_5FFA
00024F34 <AmiBlitz3.ab3@6939>   CMP.w #$61,D0
00024F38 <AmiBlitz3.ab3@6940>    BNE.w syntaxerr
00024F3C <AmiBlitz3.ab3@6941>   BSET #$F,D1
00024F40 <AmiBlitz3.ab3@6944>    BSR.w get1bytemain                                      ;??wy not !fget
00024F44 <AmiBlitz3.ab3@6945>   SUBI.w #$30,D0
00024F48 <AmiBlitz3.ab3@6946>    BMI.w syntaxerr
00024F4C <AmiBlitz3.ab3@6947>   CMP.w #$7,D0
00024F50 <AmiBlitz3.ab3@6948>    BHI.w syntaxerr
00024F52 <AmiBlitz3.ab3@6949>   LSL.w #8,D0
00024F54 <AmiBlitz3.ab3@6950>   LSL.w #4,D0
00024F56 <AmiBlitz3.ab3@6951>   OR.w D0,D1
00024F5A <AmiBlitz3.ab3@6952>    BSR.w get1bytemain                                      ;??wy not !fget
00024F5E <AmiBlitz3.ab3@6953>   CMP.w #$2E,D0
00024F62 <AmiBlitz3.ab3@6954>    BNE.w JL_0_6040
00024F66 <AmiBlitz3.ab3@6955>    BSR.w get1bytemain                                      ;??wy not !fget
00024F6A <AmiBlitz3.ab3@6956>   ORI.w #$20,D0
00024F6E <AmiBlitz3.ab3@6957>   CMP.w #$77,D0
00024F72 <AmiBlitz3.ab3@6958>    BEQ.w JL_0_603C
00024F76 <AmiBlitz3.ab3@6959>   CMP.w #$6C,D0
00024F7A <AmiBlitz3.ab3@6960>    BNE.w syntaxerr
00024F7E <AmiBlitz3.ab3@6961>   BSET #$B,D1
00024F82 <AmiBlitz3.ab3@6964>    BSR.w get1bytemain                                      ;??wy not !fget
00024F86 <AmiBlitz3.ab3@6967>    CMP.b #"*",d0                                           ;020 * Mode
00024F8A <AmiBlitz3.ab3@6968>             BNE 'l1
00024F8E <AmiBlitz3.ab3@6969>             BSR.w get1bytemain                             ;??wy not !fget
00024F92 <AmiBlitz3.ab3@6970>             CMP.b #"2",d0
00024F96 <AmiBlitz3.ab3@6971>             BNE 'l2
00024F9A <AmiBlitz3.ab3@6972>             OR.w #$200,d1
00024F9E <AmiBlitz3.ab3@6973> BRA 'l1b
00024FA2 <AmiBlitz3.ab3@6976>             CMP.b #"4",d0
00024FA6 <AmiBlitz3.ab3@6977>             BNE 'l3
00024FAA <AmiBlitz3.ab3@6978>             OR.w #$400,d1
00024FAE <AmiBlitz3.ab3@6979> BRA 'l1b
00024FB2 <AmiBlitz3.ab3@6982>             CMP.b #"8",d0
00024FB6 <AmiBlitz3.ab3@6983>             BNE syntaxerr
00024FBA <AmiBlitz3.ab3@6984>             OR.w #$600,d1
00024FBE <AmiBlitz3.ab3@6987>         BSR.w get1bytemain                                 ;??wy not !fget
00024FC2 <AmiBlitz3.ab3@6990>   CMP.w #$29,D0
00024FC6 <AmiBlitz3.ab3@6991>    BNE.w syntaxerr
00024FCC <AmiBlitz3.ab3@6992>   MOVE.w D1,extraword
00024FCE <AmiBlitz3.ab3@6993>   MOVEQ.l #$06,D5
00024FD2 <AmiBlitz3.ab3@6994> BRA.w get1bytemain                                         ;??wy not !fget
00024FD6 <AmiBlitz3.ab3@6998>   CMP.w #")",D0                                            ;")"
00024FDA <AmiBlitz3.ab3@6999>    BNE.w errorbracketmiss                                  ; was syntax error
00024FDC <AmiBlitz3.ab3@7000>   MOVEQ.l #$05,D5
00024FE0 <AmiBlitz3.ab3@7001> BRA.w get1bytemain                                         ;??wy not !fget
00024FE6 <AmiBlitz3.ab3@7008>   MOVEA.l asmbuff,A0
00024FEC <AmiBlitz3.ab3@7009>   MOVE.w ininclude,D1
00024FF2 <AmiBlitz3.ab3@7010>   OR.w inmacro,D1
00024FF4 <AmiBlitz3.ab3@7011>   MOVE.w D1,(A0)+                                          ;flag!
00024FF8 <AmiBlitz3.ab3@7012>    BNE.w copyconst
00024FFA <AmiBlitz3.ab3@7013>   MOVE.l A5,-(A7)
00024FFE <AmiBlitz3.ab3@7014>    BSR.w copyconst
00025004 <AmiBlitz3.ab3@7015>   MOVEA.l asmbuff,A0
00025008 <AmiBlitz3.ab3@7016>   CMP.w #$4,D1
0002500C <AmiBlitz3.ab3@7017>    BLS.w asmconst__leave
00025012 <AmiBlitz3.ab3@7018>   TST.w lc
00025016 <AmiBlitz3.ab3@7019>    BNE.w asmconst__leave
00025018 <AmiBlitz3.ab3@7020>   ADDQ.w #2,A0
0002501A <AmiBlitz3.ab3@7021>   MOVE.l (A7)+,(A0)+
0002501C <AmiBlitz3.ab3@7022>   CLR.b (A0)
00025024 <AmiBlitz3.ab3@7023>   MOVE.w #$0004,asmlen2                                    ;pointer + 0
00025026 <AmiBlitz3.ab3@7024> RTS
00025028 <AmiBlitz3.ab3@7028>   NOT.w (A0)
0002502A <AmiBlitz3.ab3@7029>   ADDQ.w #4,A7
0002502C <AmiBlitz3.ab3@7030> RTS
0002502E <AmiBlitz3.ab3@7033> lc:  Ds.w 1
00025034 <AmiBlitz3.ab3@7037>   CLR.w lc
00025036 <AmiBlitz3.ab3@7038>   MOVEQ.l #$00,D1
00025038 <AmiBlitz3.ab3@7041>    ADDQ.w #1,D1                                            ;label name
00025064 <AmiBlitz3.ab3@7042>    !fget                                                   ;bsr.w get1bytemain
00025068 <AmiBlitz3.ab3@7043>    BEQ.w copyconst__done
0002506C <AmiBlitz3.ab3@7044>    CMP.w #$22,d0
00025070 <AmiBlitz3.ab3@7045>    BNE.s copyconst__loop_l10
00025076 <AmiBlitz3.ab3@7046>    NOT.w instringon
0002507A <AmiBlitz3.ab3@7049>    CMP.w #":",d0
0002507E <AmiBlitz3.ab3@7050>    BNE.s copyconst__loop_l11
00025084 <AmiBlitz3.ab3@7051>    TST.w instringon
00025088 <AmiBlitz3.ab3@7052>    BEQ copyconst__done
0002508A <AmiBlitz3.ab3@7055>   TST.w D0
0002508E <AmiBlitz3.ab3@7056>   BPL.w copyconst__notmi
00025090 <AmiBlitz3.ab3@7057>   MOVE.w D0,-(A7)
00025092 <AmiBlitz3.ab3@7058>   LSR.w #8,D0
00025094 <AmiBlitz3.ab3@7059>   MOVE.b D0,(A0)+
00025096 <AmiBlitz3.ab3@7060>   MOVE.w (A7)+,D0
00025098 <AmiBlitz3.ab3@7061>   MOVE.b D0,(A0)+
0002509A <AmiBlitz3.ab3@7062>   ADDQ.w #1,D1
0002509E <AmiBlitz3.ab3@7063> BRA.s copyconst__loop
000250A4 <AmiBlitz3.ab3@7066>    TST.w instringon
000250A8 <AmiBlitz3.ab3@7067>    BNE.w copyconst__putbyte
000250AE <AmiBlitz3.ab3@7068>    TST.b _dcb
000250B2 <AmiBlitz3.ab3@7069>    BNE copyconst__notmi_l10
000250B6 <AmiBlitz3.ab3@7070>    CMP.w #$28,D0
000250BA <AmiBlitz3.ab3@7071>    BEQ.w copyconst__done
000250BE <AmiBlitz3.ab3@7074>    CMP.w #$2C,D0
000250C2 <AmiBlitz3.ab3@7075>    BEQ.w copyconst__done
000250C6 <AmiBlitz3.ab3@7076>    CMP.b #"'",D0
000250CA <AmiBlitz3.ab3@7077>    BNE.w copyconst__putbyte
000250D0 <AmiBlitz3.ab3@7078>    MOVE.w D0,lc                                     ;locallabels
000250D2 <AmiBlitz3.ab3@7079>    MOVE.l A1,-(A7)
000250D8 <AmiBlitz3.ab3@7080>    LEA lastgloballabel,A1
000250DA <AmiBlitz3.ab3@7081>    TST.b (A1)
000250DE <AmiBlitz3.ab3@7082>    BEQ.w nolocerr
000250E0 <AmiBlitz3.ab3@7085>   ADDQ.w #1,D1
000250E2 <AmiBlitz3.ab3@7086>   MOVE.b (A1)+,(A0)+
000250E6 <AmiBlitz3.ab3@7087>    BNE.w copyconst__cloop
000250E8 <AmiBlitz3.ab3@7088>   SUBQ.w #1,D1
000250EA <AmiBlitz3.ab3@7089>   SUBQ.w #1,A0
000250EC <AmiBlitz3.ab3@7090>   MOVEA.l (A7)+,A1
000250EE <AmiBlitz3.ab3@7093>   MOVE.b D0,(A0)+
000250F2 <AmiBlitz3.ab3@7094> BRA.w copyconst__loop
000250F4 <AmiBlitz3.ab3@7097>   CLR.b (A0)
000250FA <AmiBlitz3.ab3@7098>   MOVE.w D1,asmlen2
000250FC <AmiBlitz3.ab3@7099> RTS
00025102 <AmiBlitz3.ab3@7104>   CMP.l #$80ad,d0
00025106 <AmiBlitz3.ab3@7105>   BNE.s 'l12
0002510C <AmiBlitz3.ab3@7106> JMP bssseg
00025112 <AmiBlitz3.ab3@7109>   CMP.l #$807f,d0
00025116 <AmiBlitz3.ab3@7110>     BNE.s 'l13
0002511C <AmiBlitz3.ab3@7111> JMP chipseg
00025122 <AmiBlitz3.ab3@7114>   ADDQ.l #1,destpointer                                    ;even
0002512A <AmiBlitz3.ab3@7115>   BCLR #$0,destpointer+3
0002512E <AmiBlitz3.ab3@7116>   SUBI.w #$803C,D0
00025130 <AmiBlitz3.ab3@7117>   LSL.w #2,D0
00025136 <AmiBlitz3.ab3@7118>   MOVEA.l #asmpnts,A0
0002513A <AmiBlitz3.ab3@7119>   MOVEA.l $0(A0,D0.W),A0                                   ;begin inline assembler
00025140 <AmiBlitz3.ab3@7120>   MOVE.w D0,temp1
00025142 <AmiBlitz3.ab3@7121>   MOVE.l A0,-(A7)
00025144 <AmiBlitz3.ab3@7122>   MOVEQ.l #$01,D1
00025170 <AmiBlitz3.ab3@7123>    !fget                                                   ;bsr.w get1bytemain
00025174 <AmiBlitz3.ab3@7124>   CMP.w #$2E,D0
00025178 <AmiBlitz3.ab3@7125>    BNE.w JL_0_6184
000251A4 <AmiBlitz3.ab3@7126>   !fget                                                    ;bsr.w get1bytemain
000251A8 <AmiBlitz3.ab3@7127>   ORI.w #$20,D0
000251AC <AmiBlitz3.ab3@7128>   CMP.w #$77,D0                                            ;long
000251B0 <AmiBlitz3.ab3@7129>    BEQ.w JL_0_618A
000251B4 <AmiBlitz3.ab3@7130>   CMP.w #$62,D0                                            ;byte
000251B8 <AmiBlitz3.ab3@7131>    BEQ.w JL_0_617A
000251BC <AmiBlitz3.ab3@7132>   CMP.w #$6C,D0                                            ;word
000251C0 <AmiBlitz3.ab3@7133>    BEQ.w JL_0_6196
000251C4 <AmiBlitz3.ab3@7134>   CMP.w #"s",d0
000251C8 <AmiBlitz3.ab3@7135>   BNE syntaxerr
000251CC <AmiBlitz3.ab3@7136> BRA.w JL_0_617A
000251CE <AmiBlitz3.ab3@7139>   MOVEQ.l #$00,D1
000251D2 <AmiBlitz3.ab3@7140>   MOVE.w $8(A0),D0
000251D6 <AmiBlitz3.ab3@7141> BRA.w JL_0_619E
000251D8 <AmiBlitz3.ab3@7144>   MOVEQ.l #$04,D1
000251DC <AmiBlitz3.ab3@7145> BRA.w JL_0_61AE
000251DE <AmiBlitz3.ab3@7148>   MOVEQ.l #$04,D1
000251E2 <AmiBlitz3.ab3@7149>   MOVE.w $8(A0),D0
000251E4 <AmiBlitz3.ab3@7150>   LSR.w #4,D0
000251E8 <AmiBlitz3.ab3@7151> BRA.w JL_0_619E
000251EA <AmiBlitz3.ab3@7154>   MOVEQ.l #$08,D1
000251EE <AmiBlitz3.ab3@7155>   MOVE.w $8(A0),D0
000251F0 <AmiBlitz3.ab3@7156>   LSR.w #8,D0
000251F4 <AmiBlitz3.ab3@7159>    ANDI.w #$F,D0
000251F8 <AmiBlitz3.ab3@7160>   CMP.w #$F,D0
000251FC <AmiBlitz3.ab3@7161>    BNE.w 'cl60
00025204 <AmiBlitz3.ab3@7164>    CMP.l #"MULS",-6(a0)
00025208 <AmiBlitz3.ab3@7165>    BNE 'c20
0002520E <AmiBlitz3.ab3@7166>    MOVE.l #$4c000800,d1
00025214 <AmiBlitz3.ab3@7167> JMP do32
0002521C <AmiBlitz3.ab3@7170>    CMP.l #"MULU",-6(a0)
00025220 <AmiBlitz3.ab3@7171>    BNE 'c30
00025226 <AmiBlitz3.ab3@7172>    MOVE.l #$4c000000,d1
0002522C <AmiBlitz3.ab3@7173> JMP do32
00025234 <AmiBlitz3.ab3@7176>    CMP.l #"DIVS",-6(a0)
00025238 <AmiBlitz3.ab3@7177>    BNE 'c40
0002523E <AmiBlitz3.ab3@7178>    MOVE.l #$4c400800,d1
00025244 <AmiBlitz3.ab3@7179> JMP do32
0002524C <AmiBlitz3.ab3@7182>    CMP.l #"DIVU",-6(a0)
00025250 <AmiBlitz3.ab3@7183>    BNE 'c50
00025256 <AmiBlitz3.ab3@7184>    MOVE.l #$4c400000,d1
0002525C <AmiBlitz3.ab3@7185> JMP do32
00025260 <AmiBlitz3.ab3@7188> BRA illsizeerr
0002528C <AmiBlitz3.ab3@7191>   !fget                                                    ;bsr.w get1bytemain
00025292 <AmiBlitz3.ab3@7194>   MOVE.w D1,asmsize
00025294 <AmiBlitz3.ab3@7195>   MOVEQ.l #-$01,D3
00025298 <AmiBlitz3.ab3@7196>    BSR.w reget
0002529C <AmiBlitz3.ab3@7197>    BEQ.w JL_0_6200
000252A6 <AmiBlitz3.ab3@7198>   MOVE.l #ptr_parameterstore,asmbuff
000252B0 <AmiBlitz3.ab3@7200>    MOVE.w oldqflag,instringon
000252B6 <AmiBlitz3.ab3@7201>   MOVEA.l lastsourcepos,A5
000252BA <AmiBlitz3.ab3@7202>    BSR.w JL_0_5DC2
000252BC <AmiBlitz3.ab3@7203>   MOVE.l D4,D2                                             ;to src
000252BE <AmiBlitz3.ab3@7204>   MOVE.l D5,D3
000252C8 <AmiBlitz3.ab3@7205>   MOVE.w asmlen2,asmlen
000252CA <AmiBlitz3.ab3@7206>   MOVEQ.l #-$01,D5
000252D4 <AmiBlitz3.ab3@7207>   MOVE.w extraword,extraword2
000252D8 <AmiBlitz3.ab3@7208>   CMP.w #$2C,D0                                            ;','
000252DC <AmiBlitz3.ab3@7209>    BNE.w JL_0_6200
000252E6 <AmiBlitz3.ab3@7210>   MOVE.l #namebuff2,asmbuff
000252EA <AmiBlitz3.ab3@7211>    BSR.w JL_0_5DC2                                         ;dest
000252EC <AmiBlitz3.ab3@7214>   MOVEA.l (A7)+,A0
000252F2 <AmiBlitz3.ab3@7215>   MOVEA.l destpointer,A1
000252F4 <AmiBlitz3.ab3@7216>   MOVEA.l A1,A4
000252F6 <AmiBlitz3.ab3@7217>   ADDQ.w #2,A1
000252F8 <AmiBlitz3.ab3@7218>   MOVE.w (A0),D1
000252FA <AmiBlitz3.ab3@7219>   TST.w D3
000252FE <AmiBlitz3.ab3@7220>    BMI.w JL_0_639E
00025302 <AmiBlitz3.ab3@7221>   MOVE.w $E(A0),D0
00025306 <AmiBlitz3.ab3@7222>    BPL.w JL_0_6264
0002530A <AmiBlitz3.ab3@7223>   BTST #$0,D0
0002530E <AmiBlitz3.ab3@7224>    BEQ.w JL_0_6240
00025312 <AmiBlitz3.ab3@7225>   CMP.w #$1,D5
00025316 <AmiBlitz3.ab3@7226>    BNE.w JL_0_6240
0002531A <AmiBlitz3.ab3@7227>   CMP.w #$E,D3
0002531E <AmiBlitz3.ab3@7228>    BEQ.w JL_0_6264
00025324 <AmiBlitz3.ab3@7229>   MOVE.w temp1,D0
00025326 <AmiBlitz3.ab3@7230>   ADDQ.w #4,D0
0002532A <AmiBlitz3.ab3@7231> BRA.w JL_0_6256
0002532E <AmiBlitz3.ab3@7234>   BTST #$1,D0
00025332 <AmiBlitz3.ab3@7235>    BEQ.w JL_0_6264
00025336 <AmiBlitz3.ab3@7236>   CMP.w #$B,D3
0002533A <AmiBlitz3.ab3@7237>    BNE.w JL_0_6264
00025340 <AmiBlitz3.ab3@7238>   MOVE.w temp1,D0
00025342 <AmiBlitz3.ab3@7241>   ADDQ.w #4,D0
00025348 <AmiBlitz3.ab3@7242>   MOVEA.l #asmpnts,A0
0002534C <AmiBlitz3.ab3@7243>   MOVEA.l $0(A0,D0.W),A0
0002534E <AmiBlitz3.ab3@7244>   MOVE.w (A0),D1
00025358 <AmiBlitz3.ab3@7247>   MOVE.l #ptr_parameterstore,buff1
00025362 <AmiBlitz3.ab3@7248>   MOVE.l #namebuff2,buff2
00025366 <AmiBlitz3.ab3@7249>   MOVE.l $A(A0),D0
0002536A <AmiBlitz3.ab3@7250>    BEQ.w JL_0_62DC
0002536C <AmiBlitz3.ab3@7251>   MOVEA.l D0,A3
00025372 <AmiBlitz3.ab3@7252>   MOVE.w asmsize,D6
00025374 <AmiBlitz3.ab3@7255>    JSR (A3)
00025378 <AmiBlitz3.ab3@7256>    BPL.w JL_0_629A
0002537C <AmiBlitz3.ab3@7257>   CMP.w #-$2,D0
00025380 <AmiBlitz3.ab3@7258>    BEQ.w illsizeerr
00025384 <AmiBlitz3.ab3@7259> BRA.w illeaerr
00025388 <AmiBlitz3.ab3@7262>   BEQ.w JL_0_62DC
0002538A <AmiBlitz3.ab3@7263>   EXG.l D2,D4
0002538C <AmiBlitz3.ab3@7264>   EXG.l D3,D5
00025392 <AmiBlitz3.ab3@7265>   MOVE.l extraword,D6
00025394 <AmiBlitz3.ab3@7266>   SWAP D6
0002539A <AmiBlitz3.ab3@7267>   MOVE.l D6,extraword
000253A4 <AmiBlitz3.ab3@7268>   MOVE.l #namebuff2,buff1
000253AE <AmiBlitz3.ab3@7269>   MOVE.l #ptr_parameterstore,buff2
000253B4 <AmiBlitz3.ab3@7270>   MOVE.w asmlen,D6
000253BA <AmiBlitz3.ab3@7271>   MOVE.w asmlen2,D7
000253C0 <AmiBlitz3.ab3@7272>   MOVE.w D6,asmlen2
000253C6 <AmiBlitz3.ab3@7273>   MOVE.w D7,asmlen
000253D0 <AmiBlitz3.ab3@7276>   MOVE.l buff1,asmbuff
000253D4 <AmiBlitz3.ab3@7277>   MOVE.w $E(A0),D0
000253D8 <AmiBlitz3.ab3@7278>    BEQ.w JL_0_6348
000253DC <AmiBlitz3.ab3@7279>    BMI.w JL_0_6348
000253E0 <AmiBlitz3.ab3@7280>    CMP.w #$7000,d1
000253E4 <AmiBlitz3.ab3@7281>    BNE 'skip
000253E8 <AmiBlitz3.ab3@7282>    CMP.w #$b,d3
000253EC <AmiBlitz3.ab3@7283>    BNE illeaerr
000253F0 <AmiBlitz3.ab3@7286>    CMP.w #$1,D0
000253F4 <AmiBlitz3.ab3@7287>    BNE.w JL_0_630E
000253F8 <AmiBlitz3.ab3@7288>    CMP.w #$B,D3
000253FC <AmiBlitz3.ab3@7289>    BNE.w JL_0_6348
00025400 <AmiBlitz3.ab3@7292>    BSR.w insasm
00025402 <AmiBlitz3.ab3@7293>   MOVE.w D4,D2
00025404 <AmiBlitz3.ab3@7294>   MOVE.w D5,D3
00025408 <AmiBlitz3.ab3@7295> BRA.w JL_0_6364
0002540C <AmiBlitz3.ab3@7298>    CMP.w #$2,D0
00025410 <AmiBlitz3.ab3@7299>    BNE.w JL_0_6324
00025414 <AmiBlitz3.ab3@7300>   CMP.w #$8,D3
00025418 <AmiBlitz3.ab3@7301>    BNE.w illeaerr
0002541A <AmiBlitz3.ab3@7302>   MOVEQ.l #$09,D3
0002541E <AmiBlitz3.ab3@7303> BRA.w JL_0_6348
00025422 <AmiBlitz3.ab3@7306>    CMP.w #$3,D0
00025426 <AmiBlitz3.ab3@7307>    BEQ.w JL_0_6302
0002542A <AmiBlitz3.ab3@7308>   CMP.w #$4,D0
0002542E <AmiBlitz3.ab3@7309>    BEQ.w JL_0_6302
00025432 <AmiBlitz3.ab3@7310>   CMP.w #$5,D0
00025436 <AmiBlitz3.ab3@7311>    BNE.w JL_0_6348
0002543A <AmiBlitz3.ab3@7312>   CMP.w #$8,D5
0002543E <AmiBlitz3.ab3@7313>    BNE.w illeaerr
00025440 <AmiBlitz3.ab3@7314>   OR.w D2,D1
00025442 <AmiBlitz3.ab3@7315>   MOVEQ.l #$09,D5
00025446 <AmiBlitz3.ab3@7318>   MOVE.w $2(A0),D6
0002544A <AmiBlitz3.ab3@7319>   MOVE.b $6(A0),D7
0002544E <AmiBlitz3.ab3@7320>   MOVEM.l D4-D5,-(A7)
00025454 <AmiBlitz3.ab3@7321>   MOVE.w extraword2,D4
00025458 <AmiBlitz3.ab3@7322>    BSR.w doea
0002545C <AmiBlitz3.ab3@7323>   MOVEM.l (A7)+,D2-D3
0002545E <AmiBlitz3.ab3@7324>   TST.w D3
00025462 <AmiBlitz3.ab3@7327>     BMI.w JL_0_6392
00025468 <AmiBlitz3.ab3@7328>   MOVE.w extraword,D4
0002546C <AmiBlitz3.ab3@7329>   MOVE.w $4(A0),D6
00025470 <AmiBlitz3.ab3@7330>   MOVE.b $7(A0),D7
0002547A <AmiBlitz3.ab3@7331>   MOVE.l buff2,asmbuff
00025484 <AmiBlitz3.ab3@7332>   MOVE.w asmlen2,asmlen
00025488 <AmiBlitz3.ab3@7333>    BSR.w doea
0002548C <AmiBlitz3.ab3@7334> BRA.w JL_0_63AA
00025490 <AmiBlitz3.ab3@7337>   MOVE.w $4(A0),D0
00025494 <AmiBlitz3.ab3@7338>    BNE.w illeaerr
00025498 <AmiBlitz3.ab3@7339> BRA.w JL_0_63AA
0002549C <AmiBlitz3.ab3@7343>   MOVE.w $2(A0),D0
000254A0 <AmiBlitz3.ab3@7344>   OR.w $4(A0),D0
000254A4 <AmiBlitz3.ab3@7345>    BNE.w illeaerr
000254A8 <AmiBlitz3.ab3@7348>   MOVE.w $8(A0),D0
000254AC <AmiBlitz3.ab3@7349>   ANDI.w #$F000,D0
000254B0 <AmiBlitz3.ab3@7350>   CMP.w #-$1000,D0
000254B4 <AmiBlitz3.ab3@7351>    BEQ.w JL_0_63D2
000254B6 <AmiBlitz3.ab3@7352>   LSR.w #8,D0
000254B8 <AmiBlitz3.ab3@7353>   LSR.w #4,D0
000254BC <AmiBlitz3.ab3@7354>   MOVE.w $8(A0),D2
000254C2 <AmiBlitz3.ab3@7355>   MOVE.w asmsize,D3
000254C4 <AmiBlitz3.ab3@7356>   LSR.w D3,D2
000254C8 <AmiBlitz3.ab3@7357>   ANDI.w #$F,D2
000254CA <AmiBlitz3.ab3@7358>   LSL.w D0,D2
000254CC <AmiBlitz3.ab3@7359>   OR.w D2,D1
000254D2 <AmiBlitz3.ab3@7362>   CMPA.l destbufferend,A4
000254D6 <AmiBlitz3.ab3@7363>    BCS.w JL_0_63E8
000254DE <AmiBlitz3.ab3@7365>   MOVE.w #$FFFF,dontwrite
000254E2 <AmiBlitz3.ab3@7366> BRA.w JL_0_63EA
000254E4 <AmiBlitz3.ab3@7369>   MOVE.w D1,(A4)
000254EA <AmiBlitz3.ab3@7372>   MOVE.l A1,destpointer
000254EC <AmiBlitz3.ab3@7373> RTS
000254F2 <AmiBlitz3.ab3@7377>   MOVE.l destpointer,-(A7)
000254F8 <AmiBlitz3.ab3@7378>   MOVE.l A1,destpointer
000254FC <AmiBlitz3.ab3@7379>    BSR.w addoff
00025502 <AmiBlitz3.ab3@7380>   MOVEA.l destpointer,A1
00025508 <AmiBlitz3.ab3@7381>   MOVE.l (A7)+,destpointer
0002550A <AmiBlitz3.ab3@7382> RTS
0002550E <AmiBlitz3.ab3@7386>   MOVEM.l d2-d6,-(a7)
00025514 <AmiBlitz3.ab3@7387>   JSR stripspaces
00025518 <AmiBlitz3.ab3@7388>   CMP.b #"d",(a5)+
0002551C <AmiBlitz3.ab3@7389>   BNE noreg
0002551E <AmiBlitz3.ab3@7390>   MOVE.b (a5)+,d0
00025522 <AmiBlitz3.ab3@7391>   CMP.b #$30,d0
00025526 <AmiBlitz3.ab3@7392>   BLT noreg
0002552A <AmiBlitz3.ab3@7393>   CMP.b #$37,d0
0002552E <AmiBlitz3.ab3@7394>   BGT noreg
00025532 <AmiBlitz3.ab3@7395>   SUB.b #$30,d0
00025534 <AmiBlitz3.ab3@7396>   MOVEQ #0,d3
00025536 <AmiBlitz3.ab3@7397>   MOVE.b d0,d3                                             ;reg1
00025538 <AmiBlitz3.ab3@7398>   ASL.l #8,d3
0002553A <AmiBlitz3.ab3@7399>   ASL.l #8,d3
00025540 <AmiBlitz3.ab3@7400>   JSR stripspaces
00025544 <AmiBlitz3.ab3@7401>   CMP.b #",",(a5)+
00025548 <AmiBlitz3.ab3@7402>   BNE noreg
0002554E <AmiBlitz3.ab3@7403>   JSR stripspaces
00025552 <AmiBlitz3.ab3@7404>   CMP.b #"d",(a5)+
00025556 <AmiBlitz3.ab3@7405>   BNE noreg
00025558 <AmiBlitz3.ab3@7406>   MOVE.b (a5)+,d0
0002555C <AmiBlitz3.ab3@7407>   CMP.b #$30,d0
00025560 <AmiBlitz3.ab3@7408>   BLT noreg
00025564 <AmiBlitz3.ab3@7409>   CMP.b #$37,d0
00025568 <AmiBlitz3.ab3@7410>   BGT noreg
0002556C <AmiBlitz3.ab3@7411>   SUB.b #$30,d0
0002556E <AmiBlitz3.ab3@7412>   MOVEQ #0,d4
00025570 <AmiBlitz3.ab3@7413>   MOVE.b d0,d4                                             ;reg2
00025572 <AmiBlitz3.ab3@7414>   ASL.l #8,d4
00025574 <AmiBlitz3.ab3@7415>   ASL.l #4,d4
00025576 <AmiBlitz3.ab3@7416>   OR.b d0,d1
00025578 <AmiBlitz3.ab3@7417>   OR.l d3,d1
0002557A <AmiBlitz3.ab3@7418>   OR.l d4,d1
00025580 <AmiBlitz3.ab3@7419>   JSR writelong
00025584 <AmiBlitz3.ab3@7420>   MOVEM.l (a7)+,d2-d6
00025588 <AmiBlitz3.ab3@7421>   MOVEM.l d1/a1-a3,-(a7)
0002558C <AmiBlitz3.ab3@7422> BRA exit
00025590 <AmiBlitz3.ab3@7426>   MOVEM.l (a7)+,d2-d6
00025596 <AmiBlitz3.ab3@7427>   LEA errtext,a0
00025598 <AmiBlitz3.ab3@7428>   MOVE.l a0,-(a7)
0002559E <AmiBlitz3.ab3@7429> JMP handle_compileerror
000255A4 <AmiBlitz3.ab3@7438>   MOVE.w dontwrite,D1
000255A8 <AmiBlitz3.ab3@7439>    BNE.w asmfixer__done
000255B0 <AmiBlitz3.ab3@7440>   BTST #$7,make_smallestcode
000255B4 <AmiBlitz3.ab3@7441>    BEQ.w asmfixer__go
000255B8 <AmiBlitz3.ab3@7442>   MOVE.w pass(PC),D1
000255BC <AmiBlitz3.ab3@7443>    BEQ.w asmfixer__done
000255C2 <AmiBlitz3.ab3@7446>   MOVEA.l templabel,A2                                     ;insert labels in Code
000255CA <AmiBlitz3.ab3@7447>   MOVE.b #1,curtemplabel
000255D2 <AmiBlitz3.ab3@7448>   MOVE.w #$FFFF,constmode
000255D8 <AmiBlitz3.ab3@7449>   CLR.w regnum
000255E2 <AmiBlitz3.ab3@7450>           MOVE.l #forthstack,forthsp
000255EC <AmiBlitz3.ab3@7451>           MOVE.l #precstack,precsp
000255F0 <AmiBlitz3.ab3@7452>    BSR.w prepstack
000255F2 <AmiBlitz3.ab3@7455>   MOVE.l A2,-(A7)
000255F6 <AmiBlitz3.ab3@7456>    BSR.w chkstop
000255F8 <AmiBlitz3.ab3@7457>   MOVEA.l (A7)+,A2
000255FC <AmiBlitz3.ab3@7458>   CMPA.w #$0,A2
00025600 <AmiBlitz3.ab3@7459>    BEQ.w asmfixer__done2
00025606 <AmiBlitz3.ab3@7460>    CLR.b iee
0002560C <AmiBlitz3.ab3@7461>   MOVE.l A2,asmbuff
00025610 <AmiBlitz3.ab3@7462>   LEA $10(A2),A5
00025614 <AmiBlitz3.ab3@7463>   TST.b $F(A2)
00025618 <AmiBlitz3.ab3@7464>    BNE.w asmfixer__skipo
0002561A <AmiBlitz3.ab3@7465>   MOVEA.l (A5),A5                                          ;pointer to real text
00025620 <AmiBlitz3.ab3@7468>    CLR.w asmtype
00025624 <AmiBlitz3.ab3@7469>    CMP.b #".",(a5)
00025628 <AmiBlitz3.ab3@7470>    BNE.s asmfixer__skipo_l10
0002562A <AmiBlitz3.ab3@7471>    MOVE.l a2,-(a7)
0002562C <AmiBlitz3.ab3@7472>    ADDQ.l #1,a5
00025632 <AmiBlitz3.ab3@7473>    LEA newtypebase,a2
00025636 <AmiBlitz3.ab3@7474>    BSR getparameter2
0002563A <AmiBlitz3.ab3@7475>    BEQ.w syntaxerr
0002563E <AmiBlitz3.ab3@7476>    BSR findtype
00025642 <AmiBlitz3.ab3@7477>    BNE.w notypeerr
00025646 <AmiBlitz3.ab3@7478>    LEA $4(a2),a2
0002564A <AmiBlitz3.ab3@7479>    BSR getparameter2
0002564E <AmiBlitz3.ab3@7480>    BEQ.w syntaxerr
00025652 <AmiBlitz3.ab3@7481>    BSR.w findvariable2
00025656 <AmiBlitz3.ab3@7482>    BNE.w notypeerr
0002565A <AmiBlitz3.ab3@7483>    MOVE.w $4(a2),d3
0002565C <AmiBlitz3.ab3@7484>    EXT.l d3
00025660 <AmiBlitz3.ab3@7485> BRA asmfixer__skipo_l30b
00025664 <AmiBlitz3.ab3@7488>   CMP.b #"\",(a5)
00025668 <AmiBlitz3.ab3@7489>     BNE asmfixer__skipo_l20
0002566A <AmiBlitz3.ab3@7490>     ADDQ.l #1,a5
0002566C <AmiBlitz3.ab3@7491>    MOVE.l a2,-(a7)
0002566E <AmiBlitz3.ab3@7492>    MOVE.l a5,a4
00025674 <AmiBlitz3.ab3@7493>    LEA usedpath,a5
00025678 <AmiBlitz3.ab3@7494>    CMP.b #"*",(a5)
0002567C <AmiBlitz3.ab3@7495>    BNE asmfixer__skipo_lm1
0002567E <AmiBlitz3.ab3@7496>    ADDQ.l #1,a5
00025682 <AmiBlitz3.ab3@7499>    BSR.w getparameter2
00025686 <AmiBlitz3.ab3@7500>    BEQ.w syntaxerr
0002568C <AmiBlitz3.ab3@7501>    LEA varbase,A2
00025694 <AmiBlitz3.ab3@7502>    MOVE.b #1,newvariable
00025698 <AmiBlitz3.ab3@7503>    BSR.w findvariable
0002569E <AmiBlitz3.ab3@7504>    CLR.b newvariable
000256A4 <AmiBlitz3.ab3@7505>    CMP.l #-1,d0
000256A8 <AmiBlitz3.ab3@7506>    BEQ.w notypeerr
000256AA <AmiBlitz3.ab3@7507>    MOVE.l a4,a5
000256AE <AmiBlitz3.ab3@7508>    MOVE.l $a(a2),a2
000256B2 <AmiBlitz3.ab3@7509>    LEA $4(a2),a2
000256B6 <AmiBlitz3.ab3@7510>    BSR getparameter2
000256BA <AmiBlitz3.ab3@7511>    BEQ.w syntaxerr
000256BE <AmiBlitz3.ab3@7512>    BSR.w findvariable2
000256C2 <AmiBlitz3.ab3@7513>    BNE.w notypeerr
000256C6 <AmiBlitz3.ab3@7514>   MOVE.w $4(A2),D3
000256C8 <AmiBlitz3.ab3@7515>   EXT.l D3
000256CE <AmiBlitz3.ab3@7518>    CMP.b #"[",-1(a5)
000256D2 <AmiBlitz3.ab3@7519>    BNE asmfixer__skipo_l30c
000256D4 <AmiBlitz3.ab3@7520>    MOVEQ #0,d0
000256D6 <AmiBlitz3.ab3@7521>    MOVE.b (a5)+,d0
000256D8 <AmiBlitz3.ab3@7522>    MOVE.l d3,-(a7)
000256DA <AmiBlitz3.ab3@7523>    MOVEQ #0,d3
000256E0 <AmiBlitz3.ab3@7524>    JSR atoi
000256E2 <AmiBlitz3.ab3@7525>    MOVE.l (a7)+,d1
000256E6 <AmiBlitz3.ab3@7526>    MOVE.l $a(a2),a2
000256EA <AmiBlitz3.ab3@7527>    MOVE.w 8(a2),d0
000256EC <AmiBlitz3.ab3@7528>    MULS d0,d3
000256EE <AmiBlitz3.ab3@7529>    ADD.l d1,d3
000256F0 <AmiBlitz3.ab3@7532>   MOVE.l (a7)+,a2
000256F4 <AmiBlitz3.ab3@7533> BRA asmfixer__oko
000256FA <AmiBlitz3.ab3@7536>   CMP.w #$c,$8(a2)
000256FE <AmiBlitz3.ab3@7537>      BEQ asmfixer__skipo_lf1
00025704 <AmiBlitz3.ab3@7538>      CMP.w #$d,$8(a2)
00025708 <AmiBlitz3.ab3@7539>      BEQ asmfixer__skipo_lf1
0002570E <AmiBlitz3.ab3@7542>   JSR AJL_0_BF6E
00025714 <AmiBlitz3.ab3@7545>   MOVEA.l asmbuff,A2
00025718 <AmiBlitz3.ab3@7546>    BEQ.w asmfixer__oko
0002571C <AmiBlitz3.ab3@7547>   CMP.w #$28,D0
00025720 <AmiBlitz3.ab3@7548>    BEQ.w asmfixer__oko
00025724 <AmiBlitz3.ab3@7549>   CMP.w #$2C,D0
00025728 <AmiBlitz3.ab3@7550>    BEQ.w asmfixer__oko
0002572C <AmiBlitz3.ab3@7551> BRA.w syntaxerr
00025734 <AmiBlitz3.ab3@7554>   MOVE.b #1,iee
00025738 <AmiBlitz3.ab3@7555> BRA asmfixer__skipo_lf2
0002573C <AmiBlitz3.ab3@7558>   MOVEA.l $4(A2),A1
00025740 <AmiBlitz3.ab3@7560>   MOVE.w $8(A2),D1                                         ;labelmode
00025744 <AmiBlitz3.ab3@7561>   CMP.w #$5,D1
00025748 <AmiBlitz3.ab3@7562>    BNE.w asmfixer__notdan
0002574C <AmiBlitz3.ab3@7565>    BSR.w chkword                                         ;word
0002574E <AmiBlitz3.ab3@7568>   MOVE.w D3,(A1)
00025752 <AmiBlitz3.ab3@7569> BRA.w asmfixer__next
00025756 <AmiBlitz3.ab3@7572>   CMP.w #$6,D1
0002575A <AmiBlitz3.ab3@7573>    BNE.w asmfixer__notdanxi
0002575E <AmiBlitz3.ab3@7576>    BSR.w chkbyte                                         ;byte
00025762 <AmiBlitz3.ab3@7579>   MOVE.b D3,$1(A1)
00025766 <AmiBlitz3.ab3@7580> BRA.w asmfixer__next
0002576A <AmiBlitz3.ab3@7583>    CMP.w #$11,D1                                           ;byte
0002576E <AmiBlitz3.ab3@7584>    BEQ.w asmfixer__isbyte2
00025772 <AmiBlitz3.ab3@7585>    CMP.w #$c,d1
00025776 <AmiBlitz3.ab3@7586>    BEQ asmfixer__single1
0002577A <AmiBlitz3.ab3@7587>    CMP.w #$d,d1
0002577E <AmiBlitz3.ab3@7588>    BEQ asmfixer__double1
00025782 <AmiBlitz3.ab3@7589>   CMP.w #$7,D1
00025786 <AmiBlitz3.ab3@7590>    BEQ.w asmfixer__word                                    ;word
0002578A <AmiBlitz3.ab3@7591>   CMP.w #$8,D1
0002578E <AmiBlitz3.ab3@7592>    BNE.w asmfixer__notabsl
00025794 <AmiBlitz3.ab3@7595>   MOVE.w asmtype,D1                                        ;long
00025798 <AmiBlitz3.ab3@7596>    BEQ.w asmfixer__notpcrel
0002579C <AmiBlitz3.ab3@7597>      BSR.w asmoff
0002579E <AmiBlitz3.ab3@7600>   MOVE.l D3,(A1)
000257A2 <AmiBlitz3.ab3@7601> BRA.w asmfixer__next
000257A8 <AmiBlitz3.ab3@7605>   fmove.s fp0,0(a1)
000257AC <AmiBlitz3.ab3@7606> BRA.w asmfixer__next
000257B2 <AmiBlitz3.ab3@7610>   fmove.d fp0,0(a1)
000257B6 <AmiBlitz3.ab3@7611> BRA.w asmfixer__next
000257BA <AmiBlitz3.ab3@7615>   CMP.w #$9,D1
000257BE <AmiBlitz3.ab3@7616>    BNE.w asmfixer__notdpc
000257C0 <AmiBlitz3.ab3@7617>   SUB.l A1,D3                                              ;branchword
000257C4 <AmiBlitz3.ab3@7618>    BSR.w chkword
000257C6 <AmiBlitz3.ab3@7619>   MOVE.w D3,(A1)
000257CA <AmiBlitz3.ab3@7620> BRA.w asmfixer__next
000257CE <AmiBlitz3.ab3@7624>   CMP.w #$A,D1
000257D2 <AmiBlitz3.ab3@7625>    BNE.w asmfixer__imm
000257D4 <AmiBlitz3.ab3@7626>   SUB.l A1,D3                                              ;branchbyte
000257D8 <AmiBlitz3.ab3@7627> BRA.w asmfixer__isbyte
000257DC <AmiBlitz3.ab3@7631>   CMP.w #$11,d1
000257E0 <AmiBlitz3.ab3@7632>   BLE asmfixer__imm_org
000257E2 <AmiBlitz3.ab3@7633>   MOVE.l a3,-(a7)
000257E8 <AmiBlitz3.ab3@7634>   LEA pluginbase,a3
000257EC <AmiBlitz3.ab3@7635>   MOVE.l 8(a2),a0
000257EE <AmiBlitz3.ab3@7636>   JSR (a0)                                                 ;hook
000257F0 <AmiBlitz3.ab3@7637>   MOVE.l (a7)+,a3
000257F4 <AmiBlitz3.ab3@7638> BRA asmfixer__next
000257F8 <AmiBlitz3.ab3@7641>   MOVE.w $A(A2),D0
000257FC <AmiBlitz3.ab3@7642>    BEQ.w asmfixer__noflag
00025800 <AmiBlitz3.ab3@7643>   CMP.w #$1,D0
00025804 <AmiBlitz3.ab3@7644>    BEQ.w asmfixer__tocount
00025808 <AmiBlitz3.ab3@7645>   CMP.w #$3,D0
0002580C <AmiBlitz3.ab3@7646>    BEQ.w asmfixer__tomoveq
00025810 <AmiBlitz3.ab3@7647>   CMP.w #$4,D0
00025814 <AmiBlitz3.ab3@7648>    BEQ.w asmfixer__totrap
00025818 <AmiBlitz3.ab3@7651>   CMP.w #$B,D1                                             ;long
0002581C <AmiBlitz3.ab3@7652>    BEQ.w asmfixer__isabsl
00025820 <AmiBlitz3.ab3@7653> BRA asmfixer__word2                                              ;word
00025826 <AmiBlitz3.ab3@7656>   CMP.l #$F,D3
0002582A <AmiBlitz3.ab3@7657>    BHI.w illtraperr
0002582C <AmiBlitz3.ab3@7658>   OR.b D3,-(A1)
00025830 <AmiBlitz3.ab3@7659> BRA.w asmfixer__next
00025836 <AmiBlitz3.ab3@7662>   CMP.l #$8,D3
0002583A <AmiBlitz3.ab3@7663>    BHI.w illimmerr
0002583C <AmiBlitz3.ab3@7664>   TST.l D3
00025840 <AmiBlitz3.ab3@7665>    BEQ.w illimmerr
00025844 <AmiBlitz3.ab3@7666>   ANDI.w #$7,D3
00025846 <AmiBlitz3.ab3@7667>   LSL.w #8,D3
00025848 <AmiBlitz3.ab3@7668>   LSL.w #1,D3
0002584A <AmiBlitz3.ab3@7669>   OR.w D3,-(A1)
0002584E <AmiBlitz3.ab3@7670> BRA.w asmfixer__next
00025852 <AmiBlitz3.ab3@7673>    BSR.w chkbyte
00025854 <AmiBlitz3.ab3@7674>   MOVE.b D3,-(A1)
00025856 <AmiBlitz3.ab3@7677>   MOVEA.l (A2),A2
0002585A <AmiBlitz3.ab3@7678> BRA.w asmfixer__loop
00025860 <AmiBlitz3.ab3@7681>   CLR.w constmode
00025866 <AmiBlitz3.ab3@7684>   CLR.b curtemplabel
00025868 <AmiBlitz3.ab3@7685> RTS
0002586A <AmiBlitz3.ab3@7694>   BTST D3,D6
0002586E <AmiBlitz3.ab3@7695>    BEQ.w illeaerr
00025872 <AmiBlitz3.ab3@7696>    BSR.w makemode
00025876 <AmiBlitz3.ab3@7697>   CMP.w #$7,D3
0002587A <AmiBlitz3.ab3@7698>    BCS.w doea__skip
0002587C <AmiBlitz3.ab3@7699>   MOVE.w D3,D2
0002587E <AmiBlitz3.ab3@7700>   SUBQ.w #7,D2
00025882 <AmiBlitz3.ab3@7701>   CMP.w #$5,D2
00025886 <AmiBlitz3.ab3@7702>    BCS.w doea__skip0
00025888 <AmiBlitz3.ab3@7703>   MOVEQ.l #$04,D2
0002588A <AmiBlitz3.ab3@7706>   MOVEQ.l #$07,D3
0002588C <AmiBlitz3.ab3@7709>   MOVE.b D7,D0
00025890 <AmiBlitz3.ab3@7710>   ANDI.w #$F,D0
00025894 <AmiBlitz3.ab3@7711>   CMP.w #$F,D0
00025898 <AmiBlitz3.ab3@7712>    BEQ.w doea__skip2
0002589A <AmiBlitz3.ab3@7713>   LSL.w D0,D3
0002589C <AmiBlitz3.ab3@7714>   OR.w D3,D1
0002589E <AmiBlitz3.ab3@7717>   LSR.w #4,D7
000258A2 <AmiBlitz3.ab3@7718>   ANDI.w #$F,D7
000258A6 <AmiBlitz3.ab3@7719>   CMP.w #$F,D7
000258AA <AmiBlitz3.ab3@7720>    BEQ.w doea__skip3
000258AC <AmiBlitz3.ab3@7721>   LSL.w D7,D2
000258AE <AmiBlitz3.ab3@7722>   OR.w D2,D1
000258B0 <AmiBlitz3.ab3@7725> RTS
000258B6 <AmiBlitz3.ab3@7729>   CMP.l #$7F,D3
000258BA <AmiBlitz3.ab3@7730>    BGT.w illdiserr
000258C0 <AmiBlitz3.ab3@7731>   CMP.l #$FFFFFF80,D3                                      ;#-128,d3 org source
000258C4 <AmiBlitz3.ab3@7732>    BLT.w illdiserr
000258C6 <AmiBlitz3.ab3@7733> RTS
000258CC <AmiBlitz3.ab3@7737>   CMP.l #$7fff,D3
000258D0 <AmiBlitz3.ab3@7738>    BGT.w illdiserr
000258D6 <AmiBlitz3.ab3@7739>   CMP.l #$FFFF8000,D3                                      ;#-32768,d3 org source
000258DA <AmiBlitz3.ab3@7740>    BLT.w illdiserr
000258DC <AmiBlitz3.ab3@7741> RTS
000258DE <AmiBlitz3.ab3@7746>   MOVE.b (a5)+,d0
000258E0 <AmiBlitz3.ab3@7747>   CMP.b d1,d0
000258E4 <AmiBlitz3.ab3@7748>   BEQ 'll10
000258E6 <AmiBlitz3.ab3@7749>   TST.b d0
000258EA <AmiBlitz3.ab3@7750>   BNE 'll20
000258EC <AmiBlitz3.ab3@7753>   SUBQ #1,a5
000258EE <AmiBlitz3.ab3@7754> RTS
000258F0 <AmiBlitz3.ab3@7759>   MOVE.b (a5)+,d0
000258F4 <AmiBlitz3.ab3@7760>   CMP.b #",",d0
000258F8 <AmiBlitz3.ab3@7761>   BEQ 'll10
000258FC <AmiBlitz3.ab3@7762>   CMP.b #";",d0
00025900 <AmiBlitz3.ab3@7763>   BEQ 'll10
00025904 <AmiBlitz3.ab3@7764>  CMP.b #":",d0
00025908 <AmiBlitz3.ab3@7765>   BEQ 'll10
0002590A <AmiBlitz3.ab3@7768>   TST.b d0
0002590E <AmiBlitz3.ab3@7769>   BNE 'll20
00025910 <AmiBlitz3.ab3@7772>   SUBQ #1,a5
00025912 <AmiBlitz3.ab3@7773> RTS
00025914 <AmiBlitz3.ab3@7777>   ADD.l a2,d1
0002591A <AmiBlitz3.ab3@7778>   LEA tempspace,a1
0002591C <AmiBlitz3.ab3@7779>   MOVE.l d1,a0
0002591E <AmiBlitz3.ab3@7782>   MOVE.b (a0)+,(a1)+
00025922 <AmiBlitz3.ab3@7783>   BNE.s 'l10
00025924 <AmiBlitz3.ab3@7784>   SUBQ.l #1,a0
00025926 <AmiBlitz3.ab3@7785>   SUBQ.l #1,a1
00025928 <AmiBlitz3.ab3@7788>   MOVE.b (a5)+,(a1)+
0002592C <AmiBlitz3.ab3@7789>   BNE.s 'l20
0002592E <AmiBlitz3.ab3@7790>   CLR.b (a1)
00025934 <AmiBlitz3.ab3@7791>   LEA tempspace,a5
00025936 <AmiBlitz3.ab3@7792> RTS
0002593A <AmiBlitz3.ab3@7796>   MOVEM.l D1-D2/A0,-(A7)
0002593C <AmiBlitz3.ab3@7797>   MOVE.l d0,d2
0002593E <AmiBlitz3.ab3@7798>   MOVEQ #0,d1
00025940 <AmiBlitz3.ab3@7799>   MOVE.l a5,a4
00025942 <AmiBlitz3.ab3@7802>   ADDQ.l #1,d1
00025944 <AmiBlitz3.ab3@7803>   MOVE.b (a5)+,d0
00025948 <AmiBlitz3.ab3@7804>   CMP.b #",",d0
0002594C <AmiBlitz3.ab3@7805>   BEQ 'll10
00025950 <AmiBlitz3.ab3@7806>   CMP.b #";",d0
00025954 <AmiBlitz3.ab3@7807>   BEQ 'll10
00025958 <AmiBlitz3.ab3@7808>   CMP.b #":",d0
0002595C <AmiBlitz3.ab3@7809>   BEQ 'll10
00025960 <AmiBlitz3.ab3@7810>   CMP.b #"(",d0
00025964 <AmiBlitz3.ab3@7811>   BEQ 'll10
00025966 <AmiBlitz3.ab3@7812>   TST.b d0
0002596A <AmiBlitz3.ab3@7813>   BNE 'll20
0002596C <AmiBlitz3.ab3@7816>   SUBQ #1,a5
00025970 <AmiBlitz3.ab3@7817>   CMP.b #"'",(a4)
00025974 <AmiBlitz3.ab3@7818>   BEQ 'llocal
0002597A <AmiBlitz3.ab3@7819>   TST.w inmacro
0002597E <AmiBlitz3.ab3@7820>   BNE 'lmacro
00025980 <AmiBlitz3.ab3@7821>   MOVEQ.l #$14+4,D0
00025982 <AmiBlitz3.ab3@7822>   ADD.l d1,d0
00025984 <AmiBlitz3.ab3@7823>   MOVE.l d1,-(a7)
00025986 <AmiBlitz3.ab3@7824>   MOVEQ.l #$01,D1
0002598C <AmiBlitz3.ab3@7825>   MOVEA.l _execbase,A6
00025992 <AmiBlitz3.ab3@7826>   MOVE.l mempool2,a0
00025996 <AmiBlitz3.ab3@7827>   JSR _AllocPooled(a6)
00025998 <AmiBlitz3.ab3@7829>   MOVE.l (a7)+,d1
0002599A <AmiBlitz3.ab3@7830>   TST.l d0
0002599E <AmiBlitz3.ab3@7831>   BEQ nomemory
000259A0 <AmiBlitz3.ab3@7832>   MOVEA.l D0,A0
000259A8 <AmiBlitz3.ab3@7834>   MOVE.w linenumat+2,$A(A0)
000259AE <AmiBlitz3.ab3@7836>   MOVE.l templabel,(A0)
000259B4 <AmiBlitz3.ab3@7837>   MOVE.l A0,templabel
000259BC <AmiBlitz3.ab3@7838>   MOVE.l destpointer,$4(A0)
000259C0 <AmiBlitz3.ab3@7839>   MOVE.l d2,$8(A0)
000259C4 <AmiBlitz3.ab3@7840>   LEA $E(A0),A0
000259C8 <AmiBlitz3.ab3@7841>   MOVE.b #$14,(A0)+
000259CA <AmiBlitz3.ab3@7842>   CLR.b (a0)+
000259CC <AmiBlitz3.ab3@7844>   MOVE.l a0,d2
000259CE <AmiBlitz3.ab3@7845>   ADDQ.l #4,d2
000259D0 <AmiBlitz3.ab3@7846>   MOVE.l d2,(a0)+
000259D2 <AmiBlitz3.ab3@7849>   MOVE.b (a4)+,(a0)+
000259D4 <AmiBlitz3.ab3@7850>   SUBQ.l #1,d1
000259D8 <AmiBlitz3.ab3@7851>   BNE 'lc1
000259DA <AmiBlitz3.ab3@7852>   CLR.b (a0)+
000259E0 <AmiBlitz3.ab3@7853>   MOVE.w linenumat,(a0)
000259E4 <AmiBlitz3.ab3@7854>   MOVEM.l (A7)+,D1-D2/A0
000259E6 <AmiBlitz3.ab3@7855> RTS
000259E8 <AmiBlitz3.ab3@7858>   MOVEQ.l #$10+2,D0
000259EA <AmiBlitz3.ab3@7859>   ADD.l d1,d0
000259EE <AmiBlitz3.ab3@7860>   MOVEM.l a4/d3,-(a7)
000259F0 <AmiBlitz3.ab3@7861>   MOVE.l d1,d3
000259F2 <AmiBlitz3.ab3@7862>   MOVEQ.l #$01,D1
000259F8 <AmiBlitz3.ab3@7863>   MOVEA.l _execbase,A6
000259FE <AmiBlitz3.ab3@7864>   MOVE.l mempool2,a0
00025A02 <AmiBlitz3.ab3@7865>   JSR _AllocPooled(a6)
00025A04 <AmiBlitz3.ab3@7867>   TST.l d0
00025A08 <AmiBlitz3.ab3@7868>   BEQ nomemory
00025A0A <AmiBlitz3.ab3@7869>   MOVEA.l D0,A0
00025A12 <AmiBlitz3.ab3@7872>   MOVE.w linenumat+2,$C(A0)
00025A18 <AmiBlitz3.ab3@7873>   MOVE.l templabel,(A0)
00025A1E <AmiBlitz3.ab3@7874>   MOVE.l A0,templabel
00025A26 <AmiBlitz3.ab3@7875>   MOVE.l destpointer,$4(A0)
00025A2A <AmiBlitz3.ab3@7876>   MOVE.l d2,$8(A0)
00025A2E <AmiBlitz3.ab3@7877>   LEA $E(A0),A0
00025A30 <AmiBlitz3.ab3@7878>   MOVE.b d3,(A0)+
00025A36 <AmiBlitz3.ab3@7879>   ADD.b #$10,-1(a0)
00025A3A <AmiBlitz3.ab3@7880>   MOVE.b #$1,(a0)+
00025A3C <AmiBlitz3.ab3@7881>   SUBQ.w #1,d3
00025A3E <AmiBlitz3.ab3@7884>   MOVE.b (a4)+,(a0)+
00025A40 <AmiBlitz3.ab3@7885>   SUBQ.l #1,d3
00025A44 <AmiBlitz3.ab3@7886>   BNE.s 'lm2
00025A46 <AmiBlitz3.ab3@7887>   CLR.b (a0)+
00025A4C <AmiBlitz3.ab3@7888>   MOVE.w linenumat,(a0)
00025A50 <AmiBlitz3.ab3@7889>   MOVEM.l (a7)+,d3/a4
00025A54 <AmiBlitz3.ab3@7890>   MOVEM.l (A7)+,D1-D2/A0
00025A56 <AmiBlitz3.ab3@7891> RTS
00025A5C <AmiBlitz3.ab3@7894>   LEA lastgloballabel,a1
00025A5E <AmiBlitz3.ab3@7897>   ADDQ.l #1,d1
00025A60 <AmiBlitz3.ab3@7898>   TST.b (a1)+
00025A64 <AmiBlitz3.ab3@7899>   BNE.s 'll11
00025A66 <AmiBlitz3.ab3@7900>   MOVEQ.l #$10+2,D0
00025A68 <AmiBlitz3.ab3@7901>   ADD.l d1,d0
00025A6C <AmiBlitz3.ab3@7902>   MOVEM.l a4/d3,-(a7)
00025A6E <AmiBlitz3.ab3@7903>   MOVE.l d1,d3
00025A70 <AmiBlitz3.ab3@7904>   MOVEQ.l #$01,D1
00025A76 <AmiBlitz3.ab3@7905>   MOVEA.l _execbase,A6
00025A7C <AmiBlitz3.ab3@7906>   MOVE.l mempool2,a0
00025A80 <AmiBlitz3.ab3@7907>   JSR _AllocPooled(a6)
00025A82 <AmiBlitz3.ab3@7909>   TST.l d0
00025A86 <AmiBlitz3.ab3@7910>   BEQ nomemory
00025A88 <AmiBlitz3.ab3@7911>   MOVEA.l D0,A0
00025A90 <AmiBlitz3.ab3@7914>   MOVE.w linenumat+2,$C(A0)
00025A96 <AmiBlitz3.ab3@7915>   MOVE.l templabel,(A0)
00025A9C <AmiBlitz3.ab3@7916>   MOVE.l A0,templabel
00025AA4 <AmiBlitz3.ab3@7917>   MOVE.l destpointer,$4(A0)
00025AA8 <AmiBlitz3.ab3@7918>   MOVE.l d2,$8(A0)
00025AAC <AmiBlitz3.ab3@7919>   LEA $E(A0),A0
00025AAE <AmiBlitz3.ab3@7920>   MOVE.b d3,(A0)+
00025AB4 <AmiBlitz3.ab3@7921>   ADD.b #$10,-1(a0)
00025AB8 <AmiBlitz3.ab3@7922>   MOVE.b #$1,(a0)+
00025ABA <AmiBlitz3.ab3@7923>   SUBQ.w #1,d3
00025AC0 <AmiBlitz3.ab3@7924>   LEA lastgloballabel,a1
00025AC2 <AmiBlitz3.ab3@7927>   SUBQ.l #1,d3
00025AC4 <AmiBlitz3.ab3@7928>   MOVE.b (a1)+,(a0)+
00025AC8 <AmiBlitz3.ab3@7929>   BNE.s 'lm3
00025ACA <AmiBlitz3.ab3@7930>   SUBQ.l #1,a0
00025ACC <AmiBlitz3.ab3@7933>   MOVE.b (a4)+,(a0)+
00025ACE <AmiBlitz3.ab3@7934>   SUBQ.l #1,d3
00025AD2 <AmiBlitz3.ab3@7935>   BNE.s 'lm1
00025AD4 <AmiBlitz3.ab3@7936>   CLR.b (a0)+
00025ADA <AmiBlitz3.ab3@7937>   MOVE.w linenumat,(a0)
00025ADE <AmiBlitz3.ab3@7938>   MOVEM.l (a7)+,d3/a4
00025AE2 <AmiBlitz3.ab3@7939>   MOVEM.l (A7)+,D1-D2/A0
00025AE4 <AmiBlitz3.ab3@7940> RTS
00025B0E <AmiBlitz3.ab3@7944>   !basic
00025B70 <AmiBlitz3.ab3@7945>   error{!TRANS{"No memory available!!!\\nAB3 will terminate due to low memory!"}}
00025B82 <AmiBlitz3.ab3@7946>   loop Delay_ 1
00025B88 <AmiBlitz3.ab3@7947> Goto loop
00025B8C <AmiBlitz3.ab3@7951>   MOVEM.l D0-D2/A0,-(A7)
00025B90 <AmiBlitz3.ab3@7952>   MOVE.w $E(A0),-(A7)
00025B94 <AmiBlitz3.ab3@7953>    BPL.w insasm__ok
00025B96 <AmiBlitz3.ab3@7954>   CLR.w (A7)
00025B98 <AmiBlitz3.ab3@7957>   MOVE.l A1,-(A7)
00025B9A <AmiBlitz3.ab3@7958>   MOVEQ.l #$10+2,D0
00025BA0 <AmiBlitz3.ab3@7959>   ADD.w asmlen,D0
00025BA2 <AmiBlitz3.ab3@7960>   MOVE.w D0,D2
00025BA4 <AmiBlitz3.ab3@7961>   MOVEQ.l #$01,D1
00025BAA <AmiBlitz3.ab3@7962>   MOVEA.l _execbase,A6
00025BB0 <AmiBlitz3.ab3@7963>   MOVE.l mempool2,a0
00025BB4 <AmiBlitz3.ab3@7964>   JSR _AllocPooled(a6)
00025BB6 <AmiBlitz3.ab3@7966>   MOVEA.l D0,A0
00025BBE <AmiBlitz3.ab3@7969>   MOVE.w linenumat+2,$C(A0)
00025BC4 <AmiBlitz3.ab3@7970>   MOVE.l templabel,(A0)
00025BCA <AmiBlitz3.ab3@7971>   MOVE.l A0,templabel
00025BCE <AmiBlitz3.ab3@7972>   MOVE.l (A7),$4(A0)
00025BD2 <AmiBlitz3.ab3@7973>   MOVE.w d3,$8(A0)
00025BD8 <AmiBlitz3.ab3@7974>   MOVE.w $4(A7),$A(A0)
00025BDC <AmiBlitz3.ab3@7975>   LEA $E(A0),A0
00025BDE <AmiBlitz3.ab3@7976>   MOVE.b D2,(A0)+                                           ;length
00025BE4 <AmiBlitz3.ab3@7977>   MOVEA.l asmbuff,A1
00025BE6 <AmiBlitz3.ab3@7978>   ADDQ.w #1,A1
00025BE8 <AmiBlitz3.ab3@7979>   MOVE.b (A1)+,(A0)+                                        ;type - 0 = indirect,else direct
00025BEC <AmiBlitz3.ab3@7980>    BNE.w insasm__loop
00025BEE <AmiBlitz3.ab3@7981>   MOVE.l (A1)+,(A0)+
00025BF4 <AmiBlitz3.ab3@7982>   MOVE.w linenumat,(a0)
00025BF8 <AmiBlitz3.ab3@7983> BRA.w insasm__loopdone
00025BFA <AmiBlitz3.ab3@7986>    MOVE.b (A1)+,(A0)+
00025BFE <AmiBlitz3.ab3@7987>    BNE.w insasm__loop
00025C04 <AmiBlitz3.ab3@7988>    MOVE.w linenumat,(a0)
00025C06 <AmiBlitz3.ab3@7991>   MOVEA.l (A7)+,A1
00025C08 <AmiBlitz3.ab3@7992>   ADDQ.w #2,A7
00025C0C <AmiBlitz3.ab3@7993>   MOVEM.l (A7)+,D0-D2/A0
00025C0E <AmiBlitz3.ab3@7994> RTS
00025C12 <AmiBlitz3.ab3@7998>   CMP.w #$5,D3
00025C16 <AmiBlitz3.ab3@7999>    BCS.w makemode__done
00025C1A <AmiBlitz3.ab3@8000>   CMP.w #$B,D3
00025C1E <AmiBlitz3.ab3@8001>    BHI.w makemode__done2
00025C22 <AmiBlitz3.ab3@8002>    BEQ.w makemode__imm
00025C26 <AmiBlitz3.ab3@8003>    BSR.w insasm
00025C2A <AmiBlitz3.ab3@8004>   CMP.w #$5,D3
00025C2E <AmiBlitz3.ab3@8005>    BEQ.w makemode__word
00025C32 <AmiBlitz3.ab3@8006>   CMP.w #$6,D3
00025C36 <AmiBlitz3.ab3@8007>    BEQ.w makemode__dxi
00025C3A <AmiBlitz3.ab3@8008>   CMP.w #$7,D3
00025C3E <AmiBlitz3.ab3@8009>    BEQ.w makemode__word
00025C42 <AmiBlitz3.ab3@8010>   CMP.w #$8,D3
00025C46 <AmiBlitz3.ab3@8011>    BEQ.w makemode__long
00025C4A <AmiBlitz3.ab3@8012>   CMP.w #$9,D3
00025C4E <AmiBlitz3.ab3@8013>    BEQ.w makemode__word
00025C54 <AmiBlitz3.ab3@8017>   CMPA.l destbufferend,A1
00025C58 <AmiBlitz3.ab3@8018>    BCS.w makemode__ok7
00025C5A <AmiBlitz3.ab3@8019>   ADDQ.w #2,A1
00025C5C <AmiBlitz3.ab3@8020> RTS
00025C5E <AmiBlitz3.ab3@8023>   MOVE.w D4,(A1)+
00025C60 <AmiBlitz3.ab3@8024> RTS
00025C68 <AmiBlitz3.ab3@8027>   CMPI.w #$8,asmsize
00025C6C <AmiBlitz3.ab3@8028>    BCC.w makemode__immlong
00025C6E <AmiBlitz3.ab3@8029>   MOVEQ.l #$10,D3
00025C72 <AmiBlitz3.ab3@8030>    BSR.w insasm
00025C74 <AmiBlitz3.ab3@8031>   MOVEQ.l #$0B,D3
00025C78 <AmiBlitz3.ab3@8032> BRA.w makemode__word
00025C7C <AmiBlitz3.ab3@8035>   BSR.w insasm
00025C7E <AmiBlitz3.ab3@8038>   ADDQ.w #2,A1
00025C80 <AmiBlitz3.ab3@8041>   ADDQ.w #2,A1
00025C82 <AmiBlitz3.ab3@8042> RTS
00025C86 <AmiBlitz3.ab3@8045>   CMP.w #$F,D3
00025C8A <AmiBlitz3.ab3@8046>    BNE.w makemode__done
00025C90 <AmiBlitz3.ab3@8047>   CMPA.l destbufferend,A1
00025C94 <AmiBlitz3.ab3@8048>    BCS.w makemode__ok3
00025C96 <AmiBlitz3.ab3@8049>   ADDQ.w #2,A1
00025C98 <AmiBlitz3.ab3@8050>   ADDQ.w #4,A7
00025C9A <AmiBlitz3.ab3@8051> RTS
00025C9C <AmiBlitz3.ab3@8054>   MOVE.w D2,(A1)+
00025C9E <AmiBlitz3.ab3@8055>   ADDQ.w #4,A7
00025CA0 <AmiBlitz3.ab3@8058> RTS
00025CA4 <AmiBlitz3.ab3@8062>   BSR.w storeloc
00025CAE <AmiBlitz3.ab3@8063>   MOVE.l linenumat,oldline
00025CB0 <AmiBlitz3.ab3@8064>   MOVEQ.l #$00,D1
00025CB4 <AmiBlitz3.ab3@8065>    BSR.w get1bytemain
00025CB8 <AmiBlitz3.ab3@8066>    BEQ.w JL_0_676E
00025CBA <AmiBlitz3.ab3@8067>   MOVEQ.l #$00,D3
00025CBE <AmiBlitz3.ab3@8068> BRA.w JL_0_6726
00025CC2 <AmiBlitz3.ab3@8071>    BSR.w get1bytemain
00025CC6 <AmiBlitz3.ab3@8072>    BNE.w JL_0_671C
00025CC8 <AmiBlitz3.ab3@8075>   TST.w D3
00025CCC <AmiBlitz3.ab3@8076>    BNE.w brackets_                                         ;syntax error brackets
00025CD0 <AmiBlitz3.ab3@8077> BRA.w JL_0_676C
00025CD6 <AmiBlitz3.ab3@8080>    MOVE.w instringon,D4
00025CDA <AmiBlitz3.ab3@8082>      BEQ JL_0_6726
00025CDC <AmiBlitz3.ab3@8085>     MOVEQ #0,d0
00025CDE <AmiBlitz3.ab3@8086>      MOVE.b (a5)+,d0                                       ;fix "ue"
00025CE4 <AmiBlitz3.ab3@8087>      MOVE.w d0,lastchar
00025CE8 <AmiBlitz3.ab3@8088>      BEQ ready
00025CEC <AmiBlitz3.ab3@8089>      CMP.b #$22,d0
00025CF0 <AmiBlitz3.ab3@8090>      BNE 'l1
00025CF6 <AmiBlitz3.ab3@8091>      NOT.w instringon
00025CFA <AmiBlitz3.ab3@8092> BRA JL_0_670A
00025CFE <AmiBlitz3.ab3@8095>            CMP.b #"@",d0                                   ;expand line @@ 1. for parameter
00025D02 <AmiBlitz3.ab3@8096>            BNE 'l10
00025D06 <AmiBlitz3.ab3@8097>            CMP.b #"@",(a5)
00025D0A <AmiBlitz3.ab3@8098>            BNE 'l10
00025D10 <AmiBlitz3.ab3@8101>            TST.w ininclude
00025D14 <AmiBlitz3.ab3@8102>            BNE 'inc
00025D1A <AmiBlitz3.ab3@8103>            MOVE.l sourceline3,a5
00025D20 <AmiBlitz3.ab3@8104>            CMP.l #0,a5
00025D24 <AmiBlitz3.ab3@8105>            BNE 'l11t
00025D2A <AmiBlitz3.ab3@8106>            MOVEA.l sourceline,A5
00025D2C <AmiBlitz3.ab3@8109>            MOVEA.l (A5),A5
00025D32 <AmiBlitz3.ab3@8110>            CMP.l #0,a5
00025D36 <AmiBlitz3.ab3@8111>            BEQ JL_0_676C
00025D3C <AmiBlitz3.ab3@8112>            MOVE.l a5,sourceline3
00025D40 <AmiBlitz3.ab3@8113>            LEA $9(A5),A5
00025D44 <AmiBlitz3.ab3@8114> BRA 'l11
00025D46 <AmiBlitz3.ab3@8117>            ADDQ.l #1,a5
00025D48 <AmiBlitz3.ab3@8118>            TST.b (a5)
00025D4C <AmiBlitz3.ab3@8119>            BNE 'inc
00025D4E <AmiBlitz3.ab3@8123>            ADDQ.l #1,a5
00025D50 <AmiBlitz3.ab3@8124>            TST.b (a5)
00025D54 <AmiBlitz3.ab3@8125>            BEQ illeolerr
00025D56 <AmiBlitz3.ab3@8126>            MOVE.l a5,-(a7)
00025D5A <AmiBlitz3.ab3@8129>       CMP.b #" ",(a5)+
00025D5E <AmiBlitz3.ab3@8130>       BEQ 'l110
00025D64 <AmiBlitz3.ab3@8131>        CMP.b #";",-1(a5)
00025D66 <AmiBlitz3.ab3@8132>        MOVE.l (a7)+,a5
00025D6A <AmiBlitz3.ab3@8133>        BEQ 'l111
00025D6E <AmiBlitz3.ab3@8134> BRA JL_0_670A
00025D72 <AmiBlitz3.ab3@8137>    CMP.w #$29,D0
00025D76 <AmiBlitz3.ab3@8138>    BNE.w JL_0_673A
00025D78 <AmiBlitz3.ab3@8139>   TST.w D3
00025D7C <AmiBlitz3.ab3@8140>    BEQ.w JL_0_676C
00025D7E <AmiBlitz3.ab3@8143>   SUBQ.w #1,D3
00025D82 <AmiBlitz3.ab3@8144> BRA.w JL_0_670A
00025D86 <AmiBlitz3.ab3@8147>    CMP.w #$7D,D0
00025D8A <AmiBlitz3.ab3@8148>    BEQ.w JL_0_6734
00025D8E <AmiBlitz3.ab3@8149>   CMP.w #$28,D0
00025D92 <AmiBlitz3.ab3@8150>    BNE.w JL_0_6750
00025D94 <AmiBlitz3.ab3@8153>    ADDQ.w #1,D3
00025D98 <AmiBlitz3.ab3@8154> BRA.w JL_0_670A
00025D9C <AmiBlitz3.ab3@8157>   CMP.w #$7B,D0
00025DA0 <AmiBlitz3.ab3@8158>    BEQ.w JL_0_674A
00025DA4 <AmiBlitz3.ab3@8159>   CMP.w #$2C,D0
00025DA8 <AmiBlitz3.ab3@8160>    BNE.w JL_0_670A
00025DAA <AmiBlitz3.ab3@8161>   TST.w D3
00025DAE <AmiBlitz3.ab3@8162>    BNE.w JL_0_670A
00025DB0 <AmiBlitz3.ab3@8163>   ADDQ.w #1,D1
00025DB4 <AmiBlitz3.ab3@8164> BRA.w JL_0_670A
00025DB6 <AmiBlitz3.ab3@8167>   ADDQ.w #1,D1
00025DBC <AmiBlitz3.ab3@8170>   CLR.l sourceline3
00025DC6 <AmiBlitz3.ab3@8171>   MOVE.l oldline,linenumat
00025DCA <AmiBlitz3.ab3@8172> BRA.w resloc
00025DD0 <AmiBlitz3.ab3@8176>    CLR.w numreps
00025DD2 <AmiBlitz3.ab3@8177>   MOVE.w D1,D0
00025DD6 <AmiBlitz3.ab3@8178>   ANDI.w #$FF00,D0
00025DDA <AmiBlitz3.ab3@8179>    BEQ.w fetchlibps__noreps
00025DDC <AmiBlitz3.ab3@8180>   LSR.w #8,D0
00025DDE <AmiBlitz3.ab3@8181>   LSR.w #4,D0
00025DE2 <AmiBlitz3.ab3@8182>    BEQ.w fetchlibps__skip
00025DE4 <AmiBlitz3.ab3@8183>   SUB.b D0,D1
00025DEE <AmiBlitz3.ab3@8184>    MOVE.w regnum,regnumfunc
00025DF4 <AmiBlitz3.ab3@8185>    MOVE.b funcparloop,-(a7)
00025DFC <AmiBlitz3.ab3@8186>    MOVE.b #0,funcparloop
00025E02 <AmiBlitz3.ab3@8187>    MOVE.l leftsidetype,-(a7)
00025E08 <AmiBlitz3.ab3@8188>    MOVE.l rightsidetype,-(a7)
00025E0E <AmiBlitz3.ab3@8189>    MOVE.w leftsideflagmask,-(a7)
00025E14 <AmiBlitz3.ab3@8190>    MOVE.w rightsideflagmask,-(a7)
00025E1A <AmiBlitz3.ab3@8191>    CLR.l leftsidetype
00025E20 <AmiBlitz3.ab3@8192>    CLR.l rightsidetype
00025E26 <AmiBlitz3.ab3@8193>    CLR.w leftsideflagmask
00025E2C <AmiBlitz3.ab3@8194>    CLR.w rightsideflagmask
00025E32 <AmiBlitz3.ab3@8195>    MOVE.b blitzparloop,-(a7)
00025E3A <AmiBlitz3.ab3@8196>    MOVE.b #1,blitzparloop
00025E3E <AmiBlitz3.ab3@8197>    BSR.w fetchpees2
00025E44 <AmiBlitz3.ab3@8198>    MOVE.b (a7)+,blitzparloop
00025E4A <AmiBlitz3.ab3@8199>    MOVE.w (a7)+,rightsideflagmask
00025E50 <AmiBlitz3.ab3@8200>    MOVE.w (a7)+,leftsideflagmask
00025E56 <AmiBlitz3.ab3@8201>    MOVE.l (a7)+,rightsidetype
00025E5C <AmiBlitz3.ab3@8202>    MOVE.l (a7)+,leftsidetype
00025E62 <AmiBlitz3.ab3@8203>    MOVE.b (a7)+,funcparloop
00025E66 <AmiBlitz3.ab3@8204>   CMP.w #$2C,D0
00025E6A <AmiBlitz3.ab3@8205>    BNE.w syntaxerr
00025E6C <AmiBlitz3.ab3@8208>   MOVE.w D1,D2
00025E6E <AmiBlitz3.ab3@8209>   LSR.w #8,D2
00025E72 <AmiBlitz3.ab3@8210>   ANDI.w #$7,D2
00025E74 <AmiBlitz3.ab3@8213>    CMP.b D2,D1
00025E78 <AmiBlitz3.ab3@8214>    BCS.w fetchlibps__repsdone
00025E7A <AmiBlitz3.ab3@8215>   SUB.b D2,D1
00025E7E <AmiBlitz3.ab3@8216>   MOVEM.l D2/A2,-(A7)
00025E80 <AmiBlitz3.ab3@8217>   MOVE.w D2,D0
00025E86 <AmiBlitz3.ab3@8218>   MOVE.b funcparloop,-(a7)
00025E8E <AmiBlitz3.ab3@8219>   MOVE.b #0,funcparloop
00025E94 <AmiBlitz3.ab3@8220>   MOVE.l leftsidetype,-(a7)
00025E9A <AmiBlitz3.ab3@8221>   MOVE.l rightsidetype,-(a7)
00025EA0 <AmiBlitz3.ab3@8222>   MOVE.w leftsideflagmask,-(a7)
00025EA6 <AmiBlitz3.ab3@8223>   MOVE.w rightsideflagmask,-(a7)
00025EAC <AmiBlitz3.ab3@8224>   CLR.l leftsidetype
00025EB2 <AmiBlitz3.ab3@8225>   CLR.l rightsidetype
00025EB8 <AmiBlitz3.ab3@8226>   CLR.w leftsideflagmask
00025EBE <AmiBlitz3.ab3@8227>   CLR.w rightsideflagmask
00025EC4 <AmiBlitz3.ab3@8228>   MOVE.b blitzparloop,-(a7)
00025ECC <AmiBlitz3.ab3@8229>   MOVE.b #1,blitzparloop
00025ED0 <AmiBlitz3.ab3@8230>   BSR.w fetchpees4
00025ED6 <AmiBlitz3.ab3@8231>   MOVE.b (a7)+,blitzparloop
00025EDC <AmiBlitz3.ab3@8232>   MOVE.w (a7)+,rightsideflagmask
00025EE2 <AmiBlitz3.ab3@8233>   MOVE.w (a7)+,leftsideflagmask
00025EE8 <AmiBlitz3.ab3@8234>   MOVE.l (a7)+,rightsidetype
00025EEE <AmiBlitz3.ab3@8235>   MOVE.l (a7)+,leftsidetype
00025EF4 <AmiBlitz3.ab3@8236>   MOVE.b (a7)+,funcparloop
00025EF8 <AmiBlitz3.ab3@8237>   MOVEM.l (A7)+,D2/A2
00025EFE <AmiBlitz3.ab3@8238>   ADDQ.w #1,numreps
00025F02 <AmiBlitz3.ab3@8239> BRA.w fetchlibps__rloop
00025F08 <AmiBlitz3.ab3@8242>    MOVE.w numreps,D3
00025F0C <AmiBlitz3.ab3@8243>    BEQ.w syntaxerr
00025F0E <AmiBlitz3.ab3@8244>   ADDA.w D2,A2
00025F12 <AmiBlitz3.ab3@8245>   ANDI.w #$FF,D1
00025F16 <AmiBlitz3.ab3@8246>    BEQ.w fetchlibps__done
00025F1A <AmiBlitz3.ab3@8247>   CMP.w #$2C,D0
00025F1E <AmiBlitz3.ab3@8248>    BNE.w syntaxerr
00025F20 <AmiBlitz3.ab3@8251>    MOVE.w D1,D0
00025F24 <AmiBlitz3.ab3@8252>    BNE.w fetchpees2b
00025F26 <AmiBlitz3.ab3@8255> RTS
00025F2C <AmiBlitz3.ab3@8258>   MOVE.b funcparloop,-(a7)
00025F32 <AmiBlitz3.ab3@8259>   MOVE.l leftsidetype,-(a7)
00025F38 <AmiBlitz3.ab3@8260>   MOVE.l rightsidetype,-(a7)
00025F3E <AmiBlitz3.ab3@8261>   MOVE.w leftsideflagmask,-(a7)
00025F44 <AmiBlitz3.ab3@8262>   MOVE.w rightsideflagmask,-(a7)
00025F4A <AmiBlitz3.ab3@8263>   CLR.l leftsidetype
00025F50 <AmiBlitz3.ab3@8264>   CLR.l rightsidetype
00025F56 <AmiBlitz3.ab3@8265>   CLR.w leftsideflagmask
00025F5C <AmiBlitz3.ab3@8266>   CLR.w rightsideflagmask
00025F64 <AmiBlitz3.ab3@8267>   MOVE.b #0,funcparloop
00025F6A <AmiBlitz3.ab3@8268>   MOVE.b blitzparloop,-(a7)
00025F72 <AmiBlitz3.ab3@8269>   MOVE.b #1,blitzparloop
00025F76 <AmiBlitz3.ab3@8270>   BSR.w fetchpees2
00025F7C <AmiBlitz3.ab3@8271>   MOVE.b (a7)+,blitzparloop
00025F82 <AmiBlitz3.ab3@8272>   MOVE.w (a7)+,rightsideflagmask
00025F88 <AmiBlitz3.ab3@8273>   MOVE.w (a7)+,leftsideflagmask
00025F8E <AmiBlitz3.ab3@8274>   MOVE.l (a7)+,rightsidetype
00025F94 <AmiBlitz3.ab3@8275>   MOVE.l (a7)+,leftsidetype
00025F9A <AmiBlitz3.ab3@8276>   MOVE.b (a7)+,funcparloop
00025F9C <AmiBlitz3.ab3@8277> RTS
00025FA0 <AmiBlitz3.ab3@8281> ptype:    Dc.b $3F,$3C,$00,$00                             ;MOVE.W  #$0000,-(A7)
00025FA2 <AmiBlitz3.ab3@8284> partostack:  Ds.w 1                                        ;pmode org source
00025FA4 <AmiBlitz3.ab3@8288>   MOVEQ.l #$01,D2
00025FA8 <AmiBlitz3.ab3@8289> BRA.w fetchpees3
00025FAA <AmiBlitz3.ab3@8292>   MOVEQ.l #$00,D2
00025FAE <AmiBlitz3.ab3@8295>   ANDI.w #$F,D0
00025FB4 <AmiBlitz3.ab3@8303>   CLR.w parnum
00025FB6 <AmiBlitz3.ab3@8304>   MOVE.w D1,-(A7)
00025FBA <AmiBlitz3.ab3@8305>   MOVE.w partostack(PC),-(A7)                              ;in case of recursion
00025FC0 <AmiBlitz3.ab3@8306>   MOVE.w D2,partostack
00025FC2 <AmiBlitz3.ab3@8307>   MOVE.w D0,-(A7)
00025FC6 <AmiBlitz3.ab3@8308>   CMP.w #"@@",(a5)                                         ;was l15
00025FCA <AmiBlitz3.ab3@8309>   BNE fetchpees__loop
00025FD0 <AmiBlitz3.ab3@8310>   TST.w ininclude                                          ;merge macrolines
00025FD4 <AmiBlitz3.ab3@8311>   BNE errorjoin
00025FDA <AmiBlitz3.ab3@8312>        MOVEA.l sourceline,A5
00025FDC <AmiBlitz3.ab3@8315>            MOVEA.l (A5),A5
00025FE2 <AmiBlitz3.ab3@8316>            MOVE.l a5,sourceline
00025FE6 <AmiBlitz3.ab3@8317>            LEA $9(A5),A5
00025FEC <AmiBlitz3.ab3@8318>            ADDQ.l #1,linenumat
00025FEE <AmiBlitz3.ab3@8322>   MOVE.b (A2)+,D2                                          ;parameterloop   d2=vartype
00025FF2 <AmiBlitz3.ab3@8323>    BNE.w fetchpees__skip0
00025FF8 <AmiBlitz3.ab3@8324>   MOVE.w userp,D2                                          ;user selected type
00025FFA <AmiBlitz3.ab3@8326>    MOVE.l A2,-(A7)
00026000 <AmiBlitz3.ab3@8327>    ADDQ.w #1,parnum
00026006 <AmiBlitz3.ab3@8328>    TST.b funccall
0002600A <AmiBlitz3.ab3@8329>    BEQ fetchpees__skip0_l1
00026012 <AmiBlitz3.ab3@8330>    CMP.w #6,parnum
00026016 <AmiBlitz3.ab3@8331>    BLE fetchpees__skip0_l1
0002601A <AmiBlitz3.ab3@8332>    CMP.w #7,d2
00026020 <AmiBlitz3.ab3@8338>    TST.b fpu
00026024 <AmiBlitz3.ab3@8339>    BEQ fetchpees__skip0_old
0002602A <AmiBlitz3.ab3@8340>    TST.w regnumfunc
0002602E <AmiBlitz3.ab3@8341>    BEQ fetchpees__skip0_old
00026034 <AmiBlitz3.ab3@8342>    CMP.w #$48e7,-4(a4)
00026038 <AmiBlitz3.ab3@8343>    BNE fetchpees__skip0_old
0002603A <AmiBlitz3.ab3@8344>    MOVEQ #0,d1
00026040 <AmiBlitz3.ab3@8345>    MOVE.w regnum,d1
00026046 <AmiBlitz3.ab3@8346>    CMP regnumfunc,d1                                       ;fpu reg function save
0002604A <AmiBlitz3.ab3@8347>    BGE fetchpees__skip0_old
0002604C <AmiBlitz3.ab3@8348>    ASL.w #7,d1
0002604E <AmiBlitz3.ab3@8349>    MOVE.l d0,-(a7)
00026054 <AmiBlitz3.ab3@8350>    MOVE.w regnumfunc,d0
0002605A <AmiBlitz3.ab3@8351>    CLR.w regmask
00026060 <AmiBlitz3.ab3@8353>    BSET d0,regmask
00026062 <AmiBlitz3.ab3@8354>    SUBQ #1,d0
00026066 <AmiBlitz3.ab3@8355>    BNE fetchpees__skip0_loop
00026068 <AmiBlitz3.ab3@8356>     MOVEQ #0,d0
0002606E <AmiBlitz3.ab3@8359>       BTST d0,regmask
00026072 <AmiBlitz3.ab3@8360>       BEQ fetchpees__skip0_noa7
00026074 <AmiBlitz3.ab3@8361>       MOVEQ #0,d1
00026076 <AmiBlitz3.ab3@8362>       MOVE.w d0,d1
00026078 <AmiBlitz3.ab3@8363>       SUBQ.w #1,d1
0002607A <AmiBlitz3.ab3@8364>       ASL #7,d1
00026080 <AmiBlitz3.ab3@8365>       OR.l #$f2277400,d1                                   ;fmove.d
00026084 <AmiBlitz3.ab3@8367>       BSR writelong
0002608A <AmiBlitz3.ab3@8369>       ADDQ.l #2,stacktrack
00026090 <AmiBlitz3.ab3@8370>       MOVE.l stacktrack,d1
00026096 <AmiBlitz3.ab3@8371>       CMP.l #180,d1
0002609A <AmiBlitz3.ab3@8372>       BGT conmemerr                                        ;formel too complex
0002609C <AmiBlitz3.ab3@8373>       MOVE.l a0,-(a7)
000260A2 <AmiBlitz3.ab3@8374>       LEA fpustackbase,a0
000260AA <AmiBlitz3.ab3@8375>       MOVE.w regmask,0(a0,d1)
000260AC <AmiBlitz3.ab3@8376>       MOVE.l (a7)+,a0
000260AE <AmiBlitz3.ab3@8379>       ADDQ.w #1,d0
000260B4 <AmiBlitz3.ab3@8380>       CMP.w regnumfunc,d0
000260B8 <AmiBlitz3.ab3@8381>       BLE fetchpees__skip0_loop2
000260BA <AmiBlitz3.ab3@8384>       MOVE.l (a7)+,d0
000260C0 <AmiBlitz3.ab3@8387>      MOVE.l currentfunccall,-(a7)
000260C6 <AmiBlitz3.ab3@8388>      MOVE.w parnum,-(a7)
000260CC <AmiBlitz3.ab3@8389>      TST.l rightsidetype
000260D0 <AmiBlitz3.ab3@8390>      BSR.w JL_0_6836
000260D6 <AmiBlitz3.ab3@8391>      MOVE.w (a7)+,parnum
000260DC <AmiBlitz3.ab3@8393>    MOVE.l (a7)+,currentfunccall
000260E2 <AmiBlitz3.ab3@8395>    TST.b typecheck                            ;typecheck for function call
000260E6 <AmiBlitz3.ab3@8396>    BEQ 'notypecheck
000260EC <AmiBlitz3.ab3@8397>    TST.b notypecheck
000260F0 <AmiBlitz3.ab3@8398>    BNE 'notypecheck
000260F6 <AmiBlitz3.ab3@8399>    TST.b blitzparloop
000260FA <AmiBlitz3.ab3@8400>    BNE 'isblitzlibcall                                    ;no typecheck for blitzlibs currently
00026104 <AmiBlitz3.ab3@8401>    CMP.l #0,currentfunccall
00026108 <AmiBlitz3.ab3@8402>    BEQ 'isblitzlibcall
0002610C <AmiBlitz3.ab3@8403>    MOVEM.l a0/a1,-(a7)
00026112 <AmiBlitz3.ab3@8404>    MOVE.l currentfunccall,a0
00026118 <AmiBlitz3.ab3@8405>    MOVE.w parnum,d1
0002611E <AmiBlitz3.ab3@8406>    TST.b isconstantvalue
00026122 <AmiBlitz3.ab3@8407>    BEQ 'noconstant
0002612C <AmiBlitz3.ab3@8408>    CMP.l #0,lastconstantvalue
00026130 <AmiBlitz3.ab3@8409>    BEQ 'isnull
00026134 <AmiBlitz3.ab3@8411>    MOVE.l funcstruct_parametertype-4(a0,d1*4),a0
0002613A <AmiBlitz3.ab3@8412>    CMP.l #0,a0
0002613E <AmiBlitz3.ab3@8413>    BEQ 'notype
00026146 <AmiBlitz3.ab3@8414>    CMP.l #$100,4(a0)
0002614A <AmiBlitz3.ab3@8415>    BLE 'notype
00026150 <AmiBlitz3.ab3@8416>    MOVE.l lasttoken,d1
00026154 <AmiBlitz3.ab3@8417>    CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
00026158 <AmiBlitz3.ab3@8418>    BEQ 'isnull
0002615E <AmiBlitz3.ab3@8419>    TST.l typetocast
00026162 <AmiBlitz3.ab3@8420>    BEQ 'nocast
00026168 <AmiBlitz3.ab3@8421>    MOVE.l typetocast,a1
0002616C <AmiBlitz3.ab3@8422>    BRA 'typecheck
00026172 <AmiBlitz3.ab3@8424>    MOVE.l rightsidetype,a1
00026178 <AmiBlitz3.ab3@8425>    CMP.l #0,a1
0002617C <AmiBlitz3.ab3@8426>    BEQ 'notype
00026184 <AmiBlitz3.ab3@8427> 'typecheck   CMP.l #$100,4(a1)
00026186 <AmiBlitz3.ab3@8429>    CMP.l a0,a1
0002618A <AmiBlitz3.ab3@8430>    BEQ 'ok
00026192 <AmiBlitz3.ab3@8432>    CMP.l #$100,4(a1)                 ; is a type here
00026196 <AmiBlitz3.ab3@8433>    BLE 'error
0002619A <AmiBlitz3.ab3@8434>    MOVE.l 4(a1),a1                   ; load the address of type.
0002619E <AmiBlitz3.ab3@8435>    CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
000261A2 <AmiBlitz3.ab3@8436>    BEQ 'ok
000261A8 <AmiBlitz3.ab3@8437> 'error: JMP   error_convert_types    ; for syntax 4
000261AE <AmiBlitz3.ab3@8441>    CLR.l typetocast
000261B2 <AmiBlitz3.ab3@8442>    MOVEM.l (a7)+,a0/a1
000261B8 <AmiBlitz3.ab3@8446>    CLR.l lastfunction
000261BE <AmiBlitz3.ab3@8447>    TST.b fpu
000261C2 <AmiBlitz3.ab3@8448>    BEQ fetchpees__skip0_noprint
000261C4 <AmiBlitz3.ab3@8449>   MOVE.l (a7),a2
000261C6 <AmiBlitz3.ab3@8450>   ADDQ.l #1,a2
000261CA <AmiBlitz3.ab3@8451>    CMP.b #5,d2
000261CE <AmiBlitz3.ab3@8452>   BNE fetchpees__skip0_noprint
000261D4 <AmiBlitz3.ab3@8453>   CMP.b #$5d,24(a2)
000261D8 <AmiBlitz3.ab3@8454>   BNE fetchpees__skip0_noprint
000261DE <AmiBlitz3.ab3@8455>   CMP.b #$81,25(a2)
000261E2 <AmiBlitz3.ab3@8456>   BLT fetchpees__skip0_noprint
000261E8 <AmiBlitz3.ab3@8457>   CMP.b #$86,25(a2)
000261EC <AmiBlitz3.ab3@8458>   BEQ fetchpees__skip0_ok
000261F2 <AmiBlitz3.ab3@8459>   CMP.b #$87,25(a2)
000261F6 <AmiBlitz3.ab3@8460>   BEQ fetchpees__skip0_ok
000261FC <AmiBlitz3.ab3@8461>   CMP.b #$88,25(a2)
00026200 <AmiBlitz3.ab3@8462>   BEQ fetchpees__skip0_ok
00026206 <AmiBlitz3.ab3@8463>   CMP.b #$83,25(a2)
0002620A <AmiBlitz3.ab3@8464>   BGT fetchpees__skip0_noprint
00026210 <AmiBlitz3.ab3@8467>   MOVE.l destpointer,a4
00026216 <AmiBlitz3.ab3@8468>   CMP.w #$2f00,-2(a4)
0002621A <AmiBlitz3.ab3@8469>   BNE fetchpees__skip0_noprint
00026220 <AmiBlitz3.ab3@8470>   SUBQ.l #2,destpointer
00026226 <AmiBlitz3.ab3@8472>   MOVE.l #$f2277400,d1
0002622A <AmiBlitz3.ab3@8473>   BSR writelong                                            ;fmove.d fp0,-(a7)
00026230 <AmiBlitz3.ab3@8474>   ADDQ #4,a2offset
00026236 <AmiBlitz3.ab3@8492>   CLR.b optistring
00026238 <AmiBlitz3.ab3@8493>   MOVEA.l (A7)+,A2
0002623C <AmiBlitz3.ab3@8494>    CMP.w #"@",d0
00026240 <AmiBlitz3.ab3@8495>   BNE fetchpees__skip0_l10
00026244 <AmiBlitz3.ab3@8496>    CMP.b #"@",(a5)
00026248 <AmiBlitz3.ab3@8497>   BNE fetchpees__skip0_l10
0002624E <AmiBlitz3.ab3@8498>   TST.w ininclude
00026252 <AmiBlitz3.ab3@8499>   BNE errorjoin
00026258 <AmiBlitz3.ab3@8500>   MOVEA.l sourceline,A5
0002625A <AmiBlitz3.ab3@8501>            MOVEA.l (A5),A5
00026260 <AmiBlitz3.ab3@8502>            MOVE.l a5,sourceline
00026266 <AmiBlitz3.ab3@8503>            ADDQ.l #1,linenumat
0002626A <AmiBlitz3.ab3@8504>            LEA $9(A5),A5
0002626C <AmiBlitz3.ab3@8505>            MOVEQ #0,d0
00026270 <AmiBlitz3.ab3@8506>            BSR get1bytemain
00026274 <AmiBlitz3.ab3@8509>    CMP.b #32,(a5)+ ;for space after a ,
00026278 <AmiBlitz3.ab3@8510>    BEQ fetchpees__skip0_l10:
0002627A <AmiBlitz3.ab3@8511>    SUBQ.l #1,a5
0002627E <AmiBlitz3.ab3@8513>    CMP.w #"@@",(a5)                                        ;if merge
00026282 <AmiBlitz3.ab3@8514>    BNE fetchpees__skip0_l15
00026286 <AmiBlitz3.ab3@8515>    MOVEM.l d0-d7/a0-a4/a6,-(a7)
0002628C <AmiBlitz3.ab3@8516>    JSR mergeline
00026290 <AmiBlitz3.ab3@8517>    MOVEM.l (a7)+,d0-d7/a0-a4/a6
00026292 <AmiBlitz3.ab3@8537>       SUBQ.w #1,(A7)
00026296 <AmiBlitz3.ab3@8538>    BEQ.w fetchpees__done
0002629A <AmiBlitz3.ab3@8540>     CMP.w #$2C,D0
0002629E <AmiBlitz3.ab3@8542>    BNE overloadfunc
000262A2 <AmiBlitz3.ab3@8543> BRA.w fetchpees__loop
000262A4 <AmiBlitz3.ab3@8546>   ADDQ.w #2,A7
000262AA <AmiBlitz3.ab3@8547>   MOVE.w (A7)+,partostack
000262AC <AmiBlitz3.ab3@8548>   MOVE.w (A7)+,D1
000262B2 <AmiBlitz3.ab3@8549>   CLR.b isconstantvalue
000262BC <AmiBlitz3.ab3@8550>   MOVE.l currentfunccall,lastfunction
000262C2 <AmiBlitz3.ab3@8551>   CLR.b funccall
000262C8 <AmiBlitz3.ab3@8552>   CLR.l currentfunccall
000262CA <AmiBlitz3.ab3@8553> RTS
000262D0 <AmiBlitz3.ab3@8557>   CLR.b funccall
000262D6 <AmiBlitz3.ab3@8558>   MOVE.w regnum,d1
000262DC <AmiBlitz3.ab3@8559>   MOVE.l currentfunccall,a4
000262E0 <AmiBlitz3.ab3@8560>   CMP.b $20(a4),d1                                         ;increase if more pars
000262E4 <AmiBlitz3.ab3@8561>   BLT notparerr
000262E6 <AmiBlitz3.ab3@8564>   MOVE.b (a2)+,d2
000262EE <AmiBlitz3.ab3@8565>   ADD.w #1,parnum
000262F4 <AmiBlitz3.ab3@8566>   TST.b fpu
000262F8 <AmiBlitz3.ab3@8567>   BEQ 'nofpu
000262FC <AmiBlitz3.ab3@8568>   CMP.b #5,d2
00026300 <AmiBlitz3.ab3@8569>   BNE 'nofpu
00026302 <AmiBlitz3.ab3@8570>   MOVEQ #0,d1
00026308 <AmiBlitz3.ab3@8571>   MOVE.w regnum,d1
00026310 <AmiBlitz3.ab3@8572>   CMP.w #6,regnum
00026314 <AmiBlitz3.ab3@8573>   BLT 'nostack2
00026318 <AmiBlitz3.ab3@8578>   MOVE.w #$2c3c,d1
0002631C <AmiBlitz3.ab3@8579>   BSR writeword
00026322 <AmiBlitz3.ab3@8580>   MOVE.l #$bf800000,d1
00026326 <AmiBlitz3.ab3@8581>   BSR writelong
0002632A <AmiBlitz3.ab3@8582>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026330 <AmiBlitz3.ab3@8583>   ADD.w parnum,d1
00026336 <AmiBlitz3.ab3@8584>   JSR Atokejsr
0002633C <AmiBlitz3.ab3@8585>   TST.w dontwrite
00026340 <AmiBlitz3.ab3@8586>   BNE 'l1
00026346 <AmiBlitz3.ab3@8587>   MOVE.l data1start,d1
0002634C <AmiBlitz3.ab3@8588>   MOVE.l destpointer,a4
00026350 <AmiBlitz3.ab3@8589>   ADD.l d1,-4(a4)
00026356 <AmiBlitz3.ab3@8590>   MOVE.l destpointer,d1
00026358 <AmiBlitz3.ab3@8591>   SUBQ.l #4,d1
0002635E <AmiBlitz3.ab3@8592>   SUB.l destbufferstart,d1
00026360 <AmiBlitz3.ab3@8593>   MOVE.l d2,-(a7)
00026362 <AmiBlitz3.ab3@8594>   MOVE.l d1,d2
00026368 <AmiBlitz3.ab3@8595>   JSR addhunkoffset
0002636A <AmiBlitz3.ab3@8596>   MOVE.l (a7)+,d2
0002636E <AmiBlitz3.ab3@8597> BRA 'l1
00026370 <AmiBlitz3.ab3@8600>   ASL.l #7,d1
00026376 <AmiBlitz3.ab3@8601>   OR.l #$F23C5000,d1                                       ;fmove.w #-1,fpx
0002637A <AmiBlitz3.ab3@8602>   BSR writelong
0002637C <AmiBlitz3.ab3@8603>   MOVEQ #-1,d1                                             ;-1
00026380 <AmiBlitz3.ab3@8604>   BSR writeword
00026384 <AmiBlitz3.ab3@8605> BRA 'l1
0002638A <AmiBlitz3.ab3@8608>   MOVE.w regnum,d1
00026392 <AmiBlitz3.ab3@8609>   CMP.w #6,regnum
00026396 <AmiBlitz3.ab3@8610>   BLT 'nostack
0002639A <AmiBlitz3.ab3@8615>   CMP.b #2,d2
0002639E <AmiBlitz3.ab3@8616>   BGT 'nw
000263A2 <AmiBlitz3.ab3@8617> BRA 'nos
000263A6 <AmiBlitz3.ab3@8626>   CMP.w #7,d2
000263AA <AmiBlitz3.ab3@8627>   BNE 'nos
000263B0 <AmiBlitz3.ab3@8628>   ADDQ #4,a2offset
000263B6 <AmiBlitz3.ab3@8630>     MOVE.l #$48780000,d1
000263BA <AmiBlitz3.ab3@8631>     BSR writelong
000263C0 <AmiBlitz3.ab3@8632>     ADDQ.w #4,a2offset
000263C4 <AmiBlitz3.ab3@8633>     MOVE.w #$2f3c,d1
000263C8 <AmiBlitz3.ab3@8634>     BSR writeword
000263CE <AmiBlitz3.ab3@8635>     MOVE.l #-1,d1
000263D2 <AmiBlitz3.ab3@8636>     BSR writelong
000263D6 <AmiBlitz3.ab3@8637>   BRA 'l1
000263DA <AmiBlitz3.ab3@8641>   CMP.b #4,d2
000263DE <AmiBlitz3.ab3@8642>       BNE 'noq
000263E2 <AmiBlitz3.ab3@8643>       MOVE.w #$2c3c,d1
000263E6 <AmiBlitz3.ab3@8644>       BSR writeword
000263EC <AmiBlitz3.ab3@8645>       MOVE.l #$ffff0000,d1
000263F0 <AmiBlitz3.ab3@8646>       BSR writelong
000263F4 <AmiBlitz3.ab3@8647> BRA 'noq2
000263F8 <AmiBlitz3.ab3@8650>      CMP.b #5,d2
000263FC <AmiBlitz3.ab3@8651>      BNE 'nof
00026400 <AmiBlitz3.ab3@8652>       MOVE.w #$2c3c,d1
00026404 <AmiBlitz3.ab3@8653>       BSR writeword
0002640A <AmiBlitz3.ab3@8654>       MOVE.l #$800000c1,d1
0002640E <AmiBlitz3.ab3@8655>       BSR writelong
00026412 <AmiBlitz3.ab3@8656> BRA 'noq2
00026416 <AmiBlitz3.ab3@8659>   MOVE.w #$7cff,d1
0002641A <AmiBlitz3.ab3@8660>   BSR writeword
0002641E <AmiBlitz3.ab3@8663>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
00026424 <AmiBlitz3.ab3@8664>   ADD.w parnum,d1
0002642A <AmiBlitz3.ab3@8665>   JSR Atokejsr
00026430 <AmiBlitz3.ab3@8666>    TST.w dontwrite
00026434 <AmiBlitz3.ab3@8667>    BNE 'l1
0002643A <AmiBlitz3.ab3@8668>    MOVE.l data1start,d1
00026440 <AmiBlitz3.ab3@8669>    MOVE.l destpointer,a4
00026444 <AmiBlitz3.ab3@8670>    ADD.l d1,-4(a4)
0002644A <AmiBlitz3.ab3@8671>    MOVE.l destpointer,d1
0002644C <AmiBlitz3.ab3@8672>    SUBQ.l #4,d1
00026452 <AmiBlitz3.ab3@8673>    SUB.l destbufferstart,d1
00026454 <AmiBlitz3.ab3@8674>    MOVE.l d2,-(a7)
00026456 <AmiBlitz3.ab3@8675>    MOVE.l d1,d2
0002645C <AmiBlitz3.ab3@8676>    JSR addhunkoffset
0002645E <AmiBlitz3.ab3@8677>    MOVE.l (a7)+,d2
00026462 <AmiBlitz3.ab3@8678> BRA 'l1
00026464 <AmiBlitz3.ab3@8681>   ASL.l #8,d1
00026466 <AmiBlitz3.ab3@8682>   ASL.l #1,d1
0002646C <AmiBlitz3.ab3@8683>   OR.l #$203c,d1                                           ;-1
00026470 <AmiBlitz3.ab3@8684>   BSR writeword
00026476 <AmiBlitz3.ab3@8685>   MOVE.l #-1,d1
0002647A <AmiBlitz3.ab3@8686>   CMP.b #4,d2
0002647E <AmiBlitz3.ab3@8687>   BNE 'nq1
00026484 <AmiBlitz3.ab3@8688>   MOVE.l #$ffff0000,d1
00026488 <AmiBlitz3.ab3@8691>   CMP.b #5,d2
0002648C <AmiBlitz3.ab3@8692>   BNE 'nof2
00026492 <AmiBlitz3.ab3@8693>   TST.b fpu
00026496 <AmiBlitz3.ab3@8694>   BNE 'nof2
0002649C <AmiBlitz3.ab3@8695>   MOVE.l #$800000c1,d1
000264A0 <AmiBlitz3.ab3@8698>    BSR writelong
000264A4 <AmiBlitz3.ab3@8699>    CMP.b #7,d2
000264A8 <AmiBlitz3.ab3@8700>    BNE 'l1
000264AE <AmiBlitz3.ab3@8702>      MOVE.l #$48780000,d1
000264B2 <AmiBlitz3.ab3@8703>      BSR writelong
000264B8 <AmiBlitz3.ab3@8705>    ADDQ.w #4,a2offset                                      ; bug fix for string parameters
000264BE <AmiBlitz3.ab3@8706>    MOVE.l #$594f,d1                                        ; subq #4,a7
000264C2 <AmiBlitz3.ab3@8707>    BSR writeword
000264C4 <AmiBlitz3.ab3@8710>    SUBQ.w #1,(A7)
000264C8 <AmiBlitz3.ab3@8711>    BEQ.w fetchpees__done
000264CE <AmiBlitz3.ab3@8712>    ADDQ.w #1,regnum
000264D2 <AmiBlitz3.ab3@8713> BRA 'ol2
000264D4 <AmiBlitz3.ab3@8716>    MOVE.w D2,D1
000264D8 <AmiBlitz3.ab3@8717>    ANDI.w #$40,D1
000264DE <AmiBlitz3.ab3@8718>    MOVE.b D1,partostack
000264E0 <AmiBlitz3.ab3@8719>    TST.b D2
000264E4 <AmiBlitz3.ab3@8720>     BMI.w handlevara
000264E8 <AmiBlitz3.ab3@8721>    BTST #$5,D2
000264EC <AmiBlitz3.ab3@8722>     BNE.w handlearr
000264F2 <AmiBlitz3.ab3@8723>     MOVE.w regnumstore,-(a7)
000264F8 <AmiBlitz3.ab3@8724>     MOVE.w tempregnum,-(a7)
000264FE <AmiBlitz3.ab3@8725>     MOVE.w parnum,-(a7)
00026502 <AmiBlitz3.ab3@8726>     BSR.w getap                                        ;recursive entry
00026508 <AmiBlitz3.ab3@8727>     MOVE.w (a7)+,parnum
0002650E <AmiBlitz3.ab3@8728>     MOVE.w (a7)+,tempregnum
00026514 <AmiBlitz3.ab3@8729>     MOVE.w (a7)+,regnumstore
00026518 <AmiBlitz3.ab3@8732>     MOVE.w partostack(PC),D1
0002651C <AmiBlitz3.ab3@8733>     BEQ.w JL_0_6886
00026522 <AmiBlitz3.ab3@8736>    ADDQ.w #4,a2offset
00026528 <AmiBlitz3.ab3@8739>    MOVE.w pushdn,D1
0002652E <AmiBlitz3.ab3@8740>    OR.w regnum,D1
00026532 <AmiBlitz3.ab3@8741>    CMP.w #$3,D2
00026536 <AmiBlitz3.ab3@8742>     BCC.w JL_0_6880
0002653C <AmiBlitz3.ab3@8743>    SUBQ.w #2,a2offset
00026540 <AmiBlitz3.ab3@8744>    ORI.w #$1000,D1
00026544 <AmiBlitz3.ab3@8745>    BSR.w writeword
00026546 <AmiBlitz3.ab3@8746> RTS
0002654A <AmiBlitz3.ab3@8749>   CMP.b #7,d2
0002654E <AmiBlitz3.ab3@8750>    BNE 'l10
00026556 <AmiBlitz3.ab3@8751>    CMP.b #2,optistring
0002655C <AmiBlitz3.ab3@8755>   TST.b iee
00026560 <AmiBlitz3.ab3@8756>   BEQ 'old
00026564 <AmiBlitz3.ab3@8757>   CMP.b #5,d2
00026568 <AmiBlitz3.ab3@8758>   BNE 'old
0002656C <AmiBlitz3.ab3@8761>   BSR.w writeword                                          ;write val to stack
0002656E <AmiBlitz3.ab3@8762> RTS
00026574 <AmiBlitz3.ab3@8765>   SUBQ.w #4,a2offset
00026576 <AmiBlitz3.ab3@8766> RTS
0002657C <AmiBlitz3.ab3@8769>   ADDQ.w #1,regnum
0002657E <AmiBlitz3.ab3@8770> RTS
00026580 <AmiBlitz3.ab3@8774>   MOVEQ.l #$03,D2
00026584 <AmiBlitz3.ab3@8775> BRA.w JL_0_6854
00026588 <AmiBlitz3.ab3@8779>   ANDI.w #$7,D2
0002658A <AmiBlitz3.ab3@8780>   MOVE.w D2,-(A7)
0002658E <AmiBlitz3.ab3@8781>    BSR.w JL_0_A916
00026592 <AmiBlitz3.ab3@8782>   CMP.b #$7,D2                                             ;ignore pnt to $
00026596 <AmiBlitz3.ab3@8783>    BEQ.w JL_0_68C0
0002659A <AmiBlitz3.ab3@8784>   BTST #$E,D2
0002659E <AmiBlitz3.ab3@8785>    BEQ.w JL_0_68B6
000265A2 <AmiBlitz3.ab3@8786>   MOVE.b #$3,D2                                            ;pointer to long
000265A6 <AmiBlitz3.ab3@8787> BRA.w JL_0_68C0
000265A8 <AmiBlitz3.ab3@8790>    TST.b D2
000265AC <AmiBlitz3.ab3@8791>    BNE.w JL_0_68C0
000265B0 <AmiBlitz3.ab3@8792>   MOVE.b #$3,D2
000265B2 <AmiBlitz3.ab3@8795>   MOVE.w (A7)+,D3
000265B4 <AmiBlitz3.ab3@8796>   TST.b D3
000265B8 <AmiBlitz3.ab3@8797>    BEQ.w JL_0_68D2
000265BA <AmiBlitz3.ab3@8798>   CMP.b D2,D3
000265BE <AmiBlitz3.ab3@8799>    BEQ.w putalp
000265C2 <AmiBlitz3.ab3@8800> BRA.w mismatcherr
000265C8 <AmiBlitz3.ab3@8803>   ADDQ.w #2,a2offset
000265CC <AmiBlitz3.ab3@8804>   MOVE.w ptype(PC),D1
000265D0 <AmiBlitz3.ab3@8805>    BSR.w writeword
000265D2 <AmiBlitz3.ab3@8806>   MOVEQ.l #$00,D1
000265D4 <AmiBlitz3.ab3@8807>   MOVE.b D2,D1
000265D8 <AmiBlitz3.ab3@8808>    BSR.w writeword
000265DC <AmiBlitz3.ab3@8809> BRA.w putalp
000265DE <AmiBlitz3.ab3@8812>    MOVE.w D2,-(A7)
000265E2 <AmiBlitz3.ab3@8813>    BSR.w JL_0_694E
000265E8 <AmiBlitz3.ab3@8814>   BTST #$4,$1(A7)
000265EC <AmiBlitz3.ab3@8815>    BEQ.w JL_0_6900
000265F0 <AmiBlitz3.ab3@8816>    BSR.w JL_0_699A
000265F6 <AmiBlitz3.ab3@8819>    BTST #$3,$1(A7)
000265FA <AmiBlitz3.ab3@8820>    BEQ.w JL_0_690E
000265FE <AmiBlitz3.ab3@8821>    BSR.w sendtype
00026600 <AmiBlitz3.ab3@8824>    MOVE.w (A7)+,D2
00026604 <AmiBlitz3.ab3@8825> BRA.w get1bytemain
0002660A <AmiBlitz3.ab3@8828>   MOVE.w regnum,D1
0002660C <AmiBlitz3.ab3@8829>   LSL.w #8,D1
0002660E <AmiBlitz3.ab3@8830>   LSL.w #1,D1
00026612 <AmiBlitz3.ab3@8831>   ORI.w #$7000,D1
00026618 <AmiBlitz3.ab3@8832>   BTST #$0,$7(A3)
0002661C <AmiBlitz3.ab3@8833>    BNE.w JL_0_6946                                         ;A Pointer
00026624 <AmiBlitz3.ab3@8834>   CMPI.l #$100,$4(A2)
00026628 <AmiBlitz3.ab3@8835>    BCC.w arrerr1                                           ;illegal type to send
0002662C <AmiBlitz3.ab3@8836>   MOVE.b $7(A2),D1
00026630 <AmiBlitz3.ab3@8839>   BSR.w writeword                                          ;moveq #type,d regat
00026632 <AmiBlitz3.ab3@8840>   MOVEQ.l #$02,D2                                          ;just a word.
00026636 <AmiBlitz3.ab3@8841> BRA.w JL_0_685C
0002663A <AmiBlitz3.ab3@8844>   MOVE.b #$3,D1
0002663E <AmiBlitz3.ab3@8845> BRA.w JL_0_693C
00026642 <AmiBlitz3.ab3@8849>    BSR.w get1bytemain                                      ;write array paramter code
00026646 <AmiBlitz3.ab3@8850>    BSR.w getparameter
0002664E <AmiBlitz3.ab3@8851>   BTST #$1,flagmask+1
00026652 <AmiBlitz3.ab3@8852>    BEQ.w syntaxerr
00026656 <AmiBlitz3.ab3@8853>    BSR.w JL_0_8E3C
0002665A <AmiBlitz3.ab3@8854>    BSR.w get1bytemain
0002665E <AmiBlitz3.ab3@8855>   CMP.w #$29,D0                                            ;we just want a() or whatever
00026662 <AmiBlitz3.ab3@8856>    BNE.w syntaxerr
00026668 <AmiBlitz3.ab3@8857>   MOVE.w notshared,D1
0002666C <AmiBlitz3.ab3@8858>    BNE.w noarrayerr
00026672 <AmiBlitz3.ab3@8859>   MOVE.w regnum,D1
00026674 <AmiBlitz3.ab3@8860>   LSL.w #8,D1
00026676 <AmiBlitz3.ab3@8861>   LSL.w #1,D1
0002667A <AmiBlitz3.ab3@8862>   OR.w fbase(PC),D1
00026680 <AmiBlitz3.ab3@8863>    TST.b varmode
00026684 <AmiBlitz3.ab3@8864>    BEQ 'l1
00026688 <AmiBlitz3.ab3@8865>    BCLR #0,d1
0002668C <AmiBlitz3.ab3@8868>    BSR.w writeword
00026690 <AmiBlitz3.ab3@8869>   MOVE.w $4(A3),D1
00026694 <AmiBlitz3.ab3@8870>    BSR.w writeword
00026698 <AmiBlitz3.ab3@8871> BRA.w putalp
0002669E <AmiBlitz3.ab3@8875>   MOVE.w regnum,D1
000266A0 <AmiBlitz3.ab3@8876>   LSL.w #8,D1
000266A2 <AmiBlitz3.ab3@8877>   LSL.w #1,D1
000266A6 <AmiBlitz3.ab3@8878>   OR.w fbase(PC),D1
000266AC <AmiBlitz3.ab3@8879>    TST.b varmode
000266B0 <AmiBlitz3.ab3@8880>    BEQ 'l1
000266B4 <AmiBlitz3.ab3@8881>    BCLR #0,d1
000266B8 <AmiBlitz3.ab3@8884>    BSR.w writeword
000266BC <AmiBlitz3.ab3@8885>   MOVE.w $8(A3),D1
000266BE <AmiBlitz3.ab3@8886>   LSL.w #2,D1
000266C4 <AmiBlitz3.ab3@8887>   MOVE.w varmode,D2
000266C8 <AmiBlitz3.ab3@8888>    BEQ.w JL_0_69BE
000266CA <AmiBlitz3.ab3@8889>   NEG.w D1
000266CE <AmiBlitz3.ab3@8892>    ADD.w $4(A3),D1
000266D2 <AmiBlitz3.ab3@8893>    BSR.w writeword
000266D8 <AmiBlitz3.ab3@8894>   MOVE.w regnum,D1
000266DA <AmiBlitz3.ab3@8895>   LSL.w #8,D1
000266DC <AmiBlitz3.ab3@8896>   LSL.w #1,D1
000266E0 <AmiBlitz3.ab3@8897>   MOVE.w partostack(PC),D2
000266E4 <AmiBlitz3.ab3@8898>    BNE.w JL_0_69F4
000266EC <AmiBlitz3.ab3@8899>   CMPI.w #$7,regnum
000266F0 <AmiBlitz3.ab3@8900>    BCC.w JL_0_69F4
000266F4 <AmiBlitz3.ab3@8901>   OR.w pushlast(PC),D1
000266FA <AmiBlitz3.ab3@8902>   MOVE.w regnum,D2
000266FC <AmiBlitz3.ab3@8903>   SUBQ.w #1,D2
000266FE <AmiBlitz3.ab3@8904>   OR.w D2,D1
00026702 <AmiBlitz3.ab3@8905> BRA.w JL_0_69F8
00026706 <AmiBlitz3.ab3@8908>   OR.w pushadd(PC),D1
0002670A <AmiBlitz3.ab3@8911>   BSR.w writeword
00026712 <AmiBlitz3.ab3@8912>   MOVE.b #$1,partostack
00026716 <AmiBlitz3.ab3@8913> BRA.w putalp
0002671A <AmiBlitz3.ab3@8917> fbase:       Dc.b $20,$2D,$00,$00                           ;MOVE.L  $0000(A5),D0
0002671C <AmiBlitz3.ab3@8918> pushadd:     Dc.b $D0,$97                                   ;ADD.L (A7),D0
0002671E <AmiBlitz3.ab3@8919> pushlast:    Dc.b $D0,$80                                   ;ADD.L D0,D0
00026722 <AmiBlitz3.ab3@8924>   ANDI.w #$7,D2                                            ;0-7 (unknown to string)
00026726 <AmiBlitz3.ab3@8925>    BEQ.w evalu2
0002672A <AmiBlitz3.ab3@8926> BRA.w eval
00026730 <AmiBlitz3.ab3@8930>   MOVEA.l libpointer,A1
00026734 <AmiBlitz3.ab3@8933>    CMPA.w #$0,A1
00026738 <AmiBlitz3.ab3@8934>    BEQ.w resetlibs__done
0002673E <AmiBlitz3.ab3@8935>   MOVE.w #-1,$A(A1)
00026744 <AmiBlitz3.ab3@8936>   BCLR #$7,$C(A1)
00026746 <AmiBlitz3.ab3@8937>   MOVEA.l (A1),A1
0002674A <AmiBlitz3.ab3@8938> BRA.w resetlibs__loop
0002674C <AmiBlitz3.ab3@8941> RTS
00026750 <AmiBlitz3.ab3@8945>   MOVE.w #$FFFE,D1
00026754 <AmiBlitz3.ab3@8948>    BSR.w JL_0_6F38
0002675A <AmiBlitz3.ab3@8951>   TST.w cfetchmode
0002675E <AmiBlitz3.ab3@8952>    BEQ.w uselib3__noconst
00026764 <AmiBlitz3.ab3@8953>   BTST #$6,$C(A1)
00026768 <AmiBlitz3.ab3@8954>    BNE.w uselib3__constok
0002676C <AmiBlitz3.ab3@8955> BRA.w badconerr                                            ;Can't use this Library!
0002676E <AmiBlitz3.ab3@8958> RTS
00026774 <AmiBlitz3.ab3@8961>    BSET #$7,$C(A1)
00026778 <AmiBlitz3.ab3@8962>    BNE.w JL_0_6C74                                         ;already done....
0002677E <AmiBlitz3.ab3@8963>    CMPI.w #-1,$A(A1)
00026782 <AmiBlitz3.ab3@8964>    BNE.w JL_0_6C74                                         ;something already here
00026788 <AmiBlitz3.ab3@8968>    TST.w dirmode
0002678C <AmiBlitz3.ab3@8969>    BEQ.b JL_0_6A86
00026792 <AmiBlitz3.ab3@8970>    TST.b exdebug
00026796 <AmiBlitz3.ab3@8971>    BEQ 'l1
0002679A <AmiBlitz3.ab3@8972> BRA.b JL_0_6A86
000267A0 <AmiBlitz3.ab3@8975>   BCLR #$7,$C(A1)
000267A4 <AmiBlitz3.ab3@8976> BRA.w dirliberr
000267AA <AmiBlitz3.ab3@8979>   MOVE.b debugmode,-(a7)
000267AE <AmiBlitz3.ab3@8980>   MOVEM.l D1/A0/A2,-(A7)
000267B6 <AmiBlitz3.ab3@8986>   BTST #$7,use_debugger
000267BA <AmiBlitz3.ab3@8987>   BNE 'debugon
000267BC <AmiBlitz3.ab3@8988>   CLR.w D1
000267C0 <AmiBlitz3.ab3@8989> BRA.b 'debugoff
000267C2 <AmiBlitz3.ab3@8992>   SNE D1
000267C8 <AmiBlitz3.ab3@8995>   MOVE.b d1,debugmode
000267CA <AmiBlitz3.ab3@8999>   MOVEA.l A1,A0
000267CE <AmiBlitz3.ab3@9000>   ADDA.l $12(A1),A0
000267D2 <AmiBlitz3.ab3@9001>   TST.w -$2(A0)
000267D6 <AmiBlitz3.ab3@9002>    BEQ.w JL_0_6AD2
000267DA <AmiBlitz3.ab3@9003>   MOVEM.l A0-A1,-(A7)
000267DE <AmiBlitz3.ab3@9004>   MOVE.w #$FB4F,D1
000267E2 <AmiBlitz3.ab3@9005>    BSR.w uselib
000267E6 <AmiBlitz3.ab3@9006>   MOVEM.l (A7)+,A0-A1
000267EC <AmiBlitz3.ab3@9007>   ADDQ.w #1,globalvarpointer
000267F4 <AmiBlitz3.ab3@9008>   BCLR #$0,globalvarpointer+1
000267FC <AmiBlitz3.ab3@9009>   MOVE.w globalvarpointer,-$6(A0)
00026802 <AmiBlitz3.ab3@9010>   ADDQ.w #4,globalvarpointer
00026806 <AmiBlitz3.ab3@9011>   TST.l -$E(A0)
0002680A <AmiBlitz3.ab3@9012>    BEQ.w JL_0_6AD2
00026810 <AmiBlitz3.ab3@9013>   ADDQ.w #4,globalvarpointer
00026818 <AmiBlitz3.ab3@9016>   MOVE.l libend,$28(A1)
0002681A <AmiBlitz3.ab3@9017>   MOVEA.l A1,A0
0002681E <AmiBlitz3.ab3@9018>   ADDA.l $12(A1),A0
00026820 <AmiBlitz3.ab3@9019>   MOVE.l A1,D1
00026824 <AmiBlitz3.ab3@9020>   ADD.l $6(A1),D1
00026828 <AmiBlitz3.ab3@9021>   TST.l $2C(A1)
0002682C <AmiBlitz3.ab3@9022>    BEQ.w JL_0_6AFE
00026832 <AmiBlitz3.ab3@9024>   TST.b debugmode
00026836 <AmiBlitz3.ab3@9025>    BNE.w JL_0_6AFE
00026838 <AmiBlitz3.ab3@9026>   MOVE.l A1,D1
0002683C <AmiBlitz3.ab3@9027>   ADD.l $2C(A1),D1
00026842 <AmiBlitz3.ab3@9030>   MOVEA.l libend,A2
00026848 <AmiBlitz3.ab3@9033>   CMPA.l data1start,A2
0002684C <AmiBlitz3.ab3@9034>    BCS.w JL_0_6B24
00026854 <AmiBlitz3.ab3@9035>   MOVE.w #$FFFF,dontwrite
00026856 <AmiBlitz3.ab3@9038>   ADDQ.w #2,A0
00026858 <AmiBlitz3.ab3@9039>   ADDQ.w #2,A2
0002685A <AmiBlitz3.ab3@9040>   CMPA.l D1,A0
0002685E <AmiBlitz3.ab3@9041>    BCS.w JL_0_6B16
00026862 <AmiBlitz3.ab3@9042> BRA.w JL_0_6B2C
00026864 <AmiBlitz3.ab3@9045>   MOVE.w (A0)+,(A2)+                                       ;copylibcode
00026866 <AmiBlitz3.ab3@9046>   CMPA.l D1,A0
0002686A <AmiBlitz3.ab3@9047>    BCS.w JL_0_6B04
00026870 <AmiBlitz3.ab3@9050>   MOVE.l A2,libend
00026874 <AmiBlitz3.ab3@9051>   MOVE.l $20(A1),D1
00026878 <AmiBlitz3.ab3@9052>    BEQ.w JL_0_6BB8
0002687C <AmiBlitz3.ab3@9053>   MOVEM.l D0/D2-D3,-(A7)
00026880 <AmiBlitz3.ab3@9054>   MOVEA.l $24(A1),A0
00026882 <AmiBlitz3.ab3@9055>   MOVEQ.l #$00,D3
00026884 <AmiBlitz3.ab3@9058>   MOVE.l (A0)+,D2
00026888 <AmiBlitz3.ab3@9059>   TST.l $2C(A1)
0002688C <AmiBlitz3.ab3@9060>    BEQ.w JL_0_6B60
00026892 <AmiBlitz3.ab3@9061>   TST.b debugmode
00026896 <AmiBlitz3.ab3@9062>    BNE.w JL_0_6B60
0002689A <AmiBlitz3.ab3@9063>   CMP.l $2C(A1),D2
0002689E <AmiBlitz3.ab3@9064>    BCC.w JL_0_6BA0
000268A2 <AmiBlitz3.ab3@9067>   TST.w $0(A1,D2.L)
000268A6 <AmiBlitz3.ab3@9068>    BPL.w JL_0_6B72
000268A8 <AmiBlitz3.ab3@9069>   TST.l D3
000268AC <AmiBlitz3.ab3@9070>    BNE.w JL_0_6B72
000268AE <AmiBlitz3.ab3@9071>   MOVE.l A0,D0
000268B0 <AmiBlitz3.ab3@9072>   MOVE.l D1,D3
000268B4 <AmiBlitz3.ab3@9075>   SUB.l $12(A1),D2
000268B8 <AmiBlitz3.ab3@9076>    BMI.w JL_0_6BA0
000268BC <AmiBlitz3.ab3@9077>   ADD.l $28(A1),D2
000268BE <AmiBlitz3.ab3@9078>   MOVE.l D2,-(A7)
000268C4 <AmiBlitz3.ab3@9079>   SUB.l destbufferstart,D2
000268C8 <AmiBlitz3.ab3@9080>    BSR.w addhunkoffset
000268CA <AmiBlitz3.ab3@9081>   MOVEA.l (A7)+,A2
000268D0 <AmiBlitz3.ab3@9082>   TST.w dontwrite
000268D4 <AmiBlitz3.ab3@9083>    BNE.w JL_0_6BA0
000268D8 <AmiBlitz3.ab3@9084>   MOVE.l $28(A1),D2
000268DC <AmiBlitz3.ab3@9085>   SUB.l $12(A1),D2
000268DE <AmiBlitz3.ab3@9086>   ADD.l D2,(A2)
000268E0 <AmiBlitz3.ab3@9089>    SUBQ.l #1,D1
000268E4 <AmiBlitz3.ab3@9090>    BNE.w JL_0_6B44
000268E6 <AmiBlitz3.ab3@9091>   MOVE.l D3,D2
000268EA <AmiBlitz3.ab3@9092>    BEQ.w JL_0_6BB4
000268EC <AmiBlitz3.ab3@9093>   MOVEA.l D0,A2
000268EE <AmiBlitz3.ab3@9094>   SUBQ.w #4,A2
000268F2 <AmiBlitz3.ab3@9095>    BSR.w JL_0_6E34
000268F6 <AmiBlitz3.ab3@9098>    MOVEM.l (A7)+,D0/D2-D3
000268FA <AmiBlitz3.ab3@9101>    MOVEM.l (A7)+,D1/A0/A2
000268FE <AmiBlitz3.ab3@9102>   MOVEM.l D1-D2,-(A7)
00026902 <AmiBlitz3.ab3@9103>   TST.w $1A(A1)
00026906 <AmiBlitz3.ab3@9104>    BNE.w JL_0_6BD0
0002690A <AmiBlitz3.ab3@9105>   CLR.w $A(A1)
0002690E <AmiBlitz3.ab3@9106> BRA.w JL_0_6C5E
00026914 <AmiBlitz3.ab3@9109>   ADDQ.w #1,globalvarpointer
0002691C <AmiBlitz3.ab3@9110>   BCLR #$0,globalvarpointer+1
00026924 <AmiBlitz3.ab3@9111>   MOVE.w globalvarpointer,$A(A1)
00026928 <AmiBlitz3.ab3@9112>   CMP.w #-$12D,D1
0002692C <AmiBlitz3.ab3@9113>    BNE.w JL_0_6C16
00026934 <AmiBlitz3.ab3@9114>   MOVE.w $A(A1),movestdn+2
0002693C <AmiBlitz3.ab3@9115>   MOVE.w $A(A1),pusha3+2
00026944 <AmiBlitz3.ab3@9116>   MOVE.w $A(A1),pusha32+2
0002694C <AmiBlitz3.ab3@9117>   MOVE.w $A(A1),pulla3+2
00026954 <AmiBlitz3.ab3@9118>   MOVE.w $A(A1),geta3+2
00026958 <AmiBlitz3.ab3@9121>    CMP.w #-$3E9,D1
0002695C <AmiBlitz3.ab3@9122>    BNE.w JL_0_6C3E
00026964 <AmiBlitz3.ab3@9123>   MOVE.w $A(A1),dataget+2
0002696C <AmiBlitz3.ab3@9124>   MOVE.w $A(A1),dataput+2
00026974 <AmiBlitz3.ab3@9125>   MOVE.w $A(A1),rescode+6
0002697C <AmiBlitz3.ab3@9126>   MOVE.w $A(A1),rescode2+2
00026982 <AmiBlitz3.ab3@9129>   ADDQ.w #2,globalvarpointer
00026986 <AmiBlitz3.ab3@9130>   TST.w $1A(A1)
0002698A <AmiBlitz3.ab3@9131>    BMI.w JL_0_6C52
00026990 <AmiBlitz3.ab3@9132>   ADDQ.w #2,globalvarpointer
00026994 <AmiBlitz3.ab3@9135>   MOVEM.l D1/A1,-(A7)
00026998 <AmiBlitz3.ab3@9136>   BSR.w uselib2
0002699C <AmiBlitz3.ab3@9137>   MOVEM.l (A7)+,D1/A1
0002699E <AmiBlitz3.ab3@9140>   MOVE.w D1,D2
000269A2 <AmiBlitz3.ab3@9141>   MOVE.l $16(A1),D1
000269A6 <AmiBlitz3.ab3@9142>    BSR.w uselib2_org
000269AA <AmiBlitz3.ab3@9143>   MOVE.l $1C(A1),D1
000269AE <AmiBlitz3.ab3@9144>    BSR.w uselib2_org
000269B2 <AmiBlitz3.ab3@9145>   MOVEM.l (A7)+,D1-D2
000269B8 <AmiBlitz3.ab3@9147>   MOVE.b (a7)+,debugmode
000269BA <AmiBlitz3.ab3@9150> RTS
000269BC <AmiBlitz3.ab3@9154>   MOVEQ.l #$00,D2
000269C2 <AmiBlitz3.ab3@9157>   MOVEA.l tokeslist,A2
000269C4 <AmiBlitz3.ab3@9158>   CMPA.l D2,A2
000269C8 <AmiBlitz3.ab3@9159>    BEQ.w JL_0_6CE0
000269CA <AmiBlitz3.ab3@9160>   MOVE.l A2,-(A7)
000269CC <AmiBlitz3.ab3@9163>   MOVEQ.l #$00,D3
000269D0 <AmiBlitz3.ab3@9166>   MOVEA.l $8(A2),A3
000269D2 <AmiBlitz3.ab3@9167>   CMPA.l D3,A3
000269D6 <AmiBlitz3.ab3@9168>    BEQ.w JL_0_6CD2
000269D8 <AmiBlitz3.ab3@9169>   MOVE.l A3,-(A7)
000269DC <AmiBlitz3.ab3@9170>   MOVEM.l D2-D3/A2-A3,-(A7)
000269E0 <AmiBlitz3.ab3@9171>   MOVE.w $4(A2),D1
000269E4 <AmiBlitz3.ab3@9172>   MOVE.w $6(A2),D2
000269E8 <AmiBlitz3.ab3@9173>    BSR.w JL_0_6CE2
000269EC <AmiBlitz3.ab3@9174>   MOVEM.l (A7)+,D2-D3/A2-A3
000269F2 <AmiBlitz3.ab3@9175>   MOVE.w dontwrite,D0
000269F6 <AmiBlitz3.ab3@9176>    BEQ.w JL_0_6CBE
000269F8 <AmiBlitz3.ab3@9179>   MOVEA.l (A3),A3
000269FA <AmiBlitz3.ab3@9180>   CMPA.l D3,A3
000269FE <AmiBlitz3.ab3@9181>    BNE.w JL_0_6CB2
00026A02 <AmiBlitz3.ab3@9182> BRA.w JL_0_6CCC
00026A06 <AmiBlitz3.ab3@9185>   MOVEA.l $4(A3),A0
00026A08 <AmiBlitz3.ab3@9186>   MOVE.l D7,(A0)
00026A0A <AmiBlitz3.ab3@9187>   MOVEA.l (A3),A3
00026A0C <AmiBlitz3.ab3@9188>   CMPA.l D3,A3
00026A10 <AmiBlitz3.ab3@9189>    BNE.w JL_0_6CBE
00026A12 <AmiBlitz3.ab3@9192>   MOVE.l (A7)+,D3
00026A16 <AmiBlitz3.ab3@9193> BRA.w JL_0_6C88
00026A18 <AmiBlitz3.ab3@9196>    MOVEA.l (A2),A2
00026A1A <AmiBlitz3.ab3@9197>   CMPA.l D2,A2
00026A1E <AmiBlitz3.ab3@9198>    BNE.w JL_0_6C86
00026A20 <AmiBlitz3.ab3@9199>   MOVE.l (A7)+,D2
00026A24 <AmiBlitz3.ab3@9200> BRA.w JL_0_6C78
00026A26 <AmiBlitz3.ab3@9203> RTS
00026A28 <AmiBlitz3.ab3@9207>   MOVE.w D2,-(A7)
00026A2C <AmiBlitz3.ab3@9208>    BSR.w searchinstr
00026A2E <AmiBlitz3.ab3@9209>   MOVE.w (A7)+,D2
00026A36 <AmiBlitz3.ab3@9210>   BCLR #$7,blitzmode
00026A3A <AmiBlitz3.ab3@9211>   BCLR #$E,D2
00026A3E <AmiBlitz3.ab3@9212>    BEQ.w JL_0_6D02
00026A46 <AmiBlitz3.ab3@9213>   BSET #$7,blitzmode
00026A48 <AmiBlitz3.ab3@9216>   TST.w (A3)
00026A4C <AmiBlitz3.ab3@9217>    BEQ.w JL_0_6DAC
00026A52 <AmiBlitz3.ab3@9218>   BTST #$2,$1(A3)
00026A56 <AmiBlitz3.ab3@9219>    BNE.w tokeerr
00026A5C <AmiBlitz3.ab3@9220>   BTST #$3,$1(A3)
00026A60 <AmiBlitz3.ab3@9221>    BNE.w tokeerr
00026A64 <AmiBlitz3.ab3@9222>   LEA $6(A3),A3
00026A66 <AmiBlitz3.ab3@9225>   MOVE.w (A3)+,D0
00026A6A <AmiBlitz3.ab3@9226>    BMI.w tokeerr
00026A6E <AmiBlitz3.ab3@9227>   ANDI.w #$FF,D0
00026A70 <AmiBlitz3.ab3@9228>   ADDA.w D0,A3
00026A72 <AmiBlitz3.ab3@9229>   ADDQ.w #1,A3
00026A74 <AmiBlitz3.ab3@9230>   EXG.l D0,A3
00026A78 <AmiBlitz3.ab3@9231>   BCLR #$0,D0
00026A7A <AmiBlitz3.ab3@9232>   EXG.l D0,A3
00026A7C <AmiBlitz3.ab3@9233>   SUBQ.w #1,D2
00026A80 <AmiBlitz3.ab3@9234>    BPL.w JL_0_6D98
00026A82 <AmiBlitz3.ab3@9235>   TST.w (A3)
00026A86 <AmiBlitz3.ab3@9236>    BNE.w JL_0_6D76
00026A8A <AmiBlitz3.ab3@9237>   MOVE.l $2(A3),D0
00026A8E <AmiBlitz3.ab3@9238>   OR.l $A(A3),D0
00026A92 <AmiBlitz3.ab3@9239>    BNE.w JL_0_6D76
00026A98 <AmiBlitz3.ab3@9240>   BTST #$0,$9(A3)
00026A9C <AmiBlitz3.ab3@9241>    BNE.w JL_0_6D76
00026AA0 <AmiBlitz3.ab3@9242>   MOVE.l $6(A3),D7
00026AA4 <AmiBlitz3.ab3@9243>   MOVE.w $0(A2,D7.L),D0
00026AA8 <AmiBlitz3.ab3@9244>   ANDI.w #$F000,D0
00026AAC <AmiBlitz3.ab3@9245>   CMP.w #-$6000,D0
00026AB0 <AmiBlitz3.ab3@9246>    BEQ.w JL_0_6D76
00026AB4 <AmiBlitz3.ab3@9249>   SUB.l $12(A2),D7
00026AB8 <AmiBlitz3.ab3@9250>   ADD.l $28(A2),D7
00026ABA <AmiBlitz3.ab3@9251> RTS
00026AC0 <AmiBlitz3.ab3@9255>   LEA cutejsr,A0
00026AC6 <AmiBlitz3.ab3@9258>   MOVE.l destpointer,-(A7)
00026ACE <AmiBlitz3.ab3@9259>   MOVE.w #$FFFF,lasta6
00026AD0 <AmiBlitz3.ab3@9262>    JSR (A0)
00026AD4 <AmiBlitz3.ab3@9263>   MOVE.w #$4E75,D1
00026AD8 <AmiBlitz3.ab3@9264>    BSR.w writeword
00026ADA <AmiBlitz3.ab3@9265>   MOVE.l (A7)+,D7
00026ADC <AmiBlitz3.ab3@9266> RTS
00026ADE <AmiBlitz3.ab3@9270>   TST.w (A3)+
00026AE2 <AmiBlitz3.ab3@9271>    BEQ.w JL_0_6DA4
00026AE4 <AmiBlitz3.ab3@9272>   ADDQ.w #2,A3
00026AE8 <AmiBlitz3.ab3@9273> BRA.w JL_0_6D98
00026AEC <AmiBlitz3.ab3@9276>   LEA $C(A3),A3
00026AF0 <AmiBlitz3.ab3@9277> BRA.w JL_0_6D20
00026AF2 <AmiBlitz3.ab3@9281>   TST.w D2
00026AF6 <AmiBlitz3.ab3@9282>    BNE.w tokeerr
00026AFA <AmiBlitz3.ab3@9283>   TST.w $6(A3)
00026AFE <AmiBlitz3.ab3@9284>    BNE.w JL_0_6DE4
00026B02 <AmiBlitz3.ab3@9285>   MOVE.l $8(A3),D0
00026B06 <AmiBlitz3.ab3@9286>   OR.l $10(A3),D0
00026B0A <AmiBlitz3.ab3@9287>    BNE.w JL_0_6DE4
00026B10 <AmiBlitz3.ab3@9288>   BTST #$0,$F(A3)
00026B14 <AmiBlitz3.ab3@9289>    BNE.w JL_0_6DE4
00026B18 <AmiBlitz3.ab3@9290>   MOVE.l $C(A3),D7
00026B1C <AmiBlitz3.ab3@9291>   MOVE.w $0(A2,D7.L),D0
00026B20 <AmiBlitz3.ab3@9292>   ANDI.w #$F000,D0
00026B24 <AmiBlitz3.ab3@9293>   CMP.w #-$6000,D0
00026B28 <AmiBlitz3.ab3@9294>    BNE.w JL_0_6D6C
00026B2A <AmiBlitz3.ab3@9297>   MOVE.l A3,D1
00026B2C <AmiBlitz3.ab3@9298>   SUB.l A2,D1
00026B32 <AmiBlitz3.ab3@9299>   LEA Amakelibsub,A0
00026B36 <AmiBlitz3.ab3@9300> BRA.w JL_0_6D7C
00026B3C <AmiBlitz3.ab3@9304>   MOVEA.l _execbase,A6
00026B42 <AmiBlitz3.ab3@9305>   MOVEA.l tokeslist,A2
00026B48 <AmiBlitz3.ab3@9306>   CLR.l tokeslist
00026B4C <AmiBlitz3.ab3@9309>     CMPA.w #$0,A2
00026B50 <AmiBlitz3.ab3@9310>      BEQ.w JL_0_6E32
00026B54 <AmiBlitz3.ab3@9311>     MOVEA.l $8(A2),A3
00026B58 <AmiBlitz3.ab3@9314>       CMPA.w #$0,A3
00026B5C <AmiBlitz3.ab3@9315>        BEQ.w JL_0_6E24
00026B5E <AmiBlitz3.ab3@9316>       MOVEA.l A3,A1
00026B60 <AmiBlitz3.ab3@9317>       MOVEA.l (A3),A3
00026B62 <AmiBlitz3.ab3@9318>       MOVEQ.l #$08,D0
00026B68 <AmiBlitz3.ab3@9319>       MOVE.l mempool,a0
00026B6E <AmiBlitz3.ab3@9320>       MOVEA.l _execbase,A6
00026B72 <AmiBlitz3.ab3@9321>       JSR _FreePooled(A6)
00026B76 <AmiBlitz3.ab3@9322> BRA.w JL_0_6E0E
00026B78 <AmiBlitz3.ab3@9325>     MOVEA.l A2,A1
00026B7A <AmiBlitz3.ab3@9326>     MOVEA.l (A2),A2
00026B7C <AmiBlitz3.ab3@9327>     MOVEQ.l #$0C,D0
00026B82 <AmiBlitz3.ab3@9328>     MOVE.l mempool,a0
00026B88 <AmiBlitz3.ab3@9329>     MOVEA.l _execbase,A6
00026B8C <AmiBlitz3.ab3@9330>     JSR _FreePooled(A6)
00026B90 <AmiBlitz3.ab3@9331> BRA.w JL_0_6E02
00026B92 <AmiBlitz3.ab3@9334> RTS
00026B96 <AmiBlitz3.ab3@9338>   MOVEM.l D3-D5/A1-A6,-(A7)
00026B98 <AmiBlitz3.ab3@9339>   MOVEA.l A1,A4
00026B9A <AmiBlitz3.ab3@9342>   MOVE.l (A2)+,D3
00026B9E <AmiBlitz3.ab3@9343>   MOVE.w $0(A4,D3.L),D5
00026BA2 <AmiBlitz3.ab3@9344>    BPL.w JL_0_6E7A
00026BA6 <AmiBlitz3.ab3@9345>   TST.l $2C(A4)
00026BAA <AmiBlitz3.ab3@9346>    BEQ.w JL_0_6E5E
00026BB0 <AmiBlitz3.ab3@9347>   TST.b debugmode
00026BB4 <AmiBlitz3.ab3@9348>    BNE.w JL_0_6E5E
00026BB8 <AmiBlitz3.ab3@9349>   CMP.l $2C(A4),D3
00026BBC <AmiBlitz3.ab3@9350>    BCC.w JL_0_6E7A
00026BC0 <AmiBlitz3.ab3@9353>   BCLR #$F,D5
00026BC4 <AmiBlitz3.ab3@9354>   MOVE.w $2(A4,D3.L),D4
00026BC8 <AmiBlitz3.ab3@9355>   SUB.l $12(A4),D3
00026BCC <AmiBlitz3.ab3@9356>   ADD.l $28(A4),D3
00026BD0 <AmiBlitz3.ab3@9357>   MOVEM.l D2/A2/A4,-(A7)
00026BD4 <AmiBlitz3.ab3@9358>    BSR.w JL_0_6E86
00026BD8 <AmiBlitz3.ab3@9359>   MOVEM.l (A7)+,D2/A2/A4
00026BDA <AmiBlitz3.ab3@9362>   SUBQ.l #1,D2
00026BDE <AmiBlitz3.ab3@9363>    BNE.w JL_0_6E3A
00026BE2 <AmiBlitz3.ab3@9364>   MOVEM.l (A7)+,D3-D5/A1-A6
00026BE4 <AmiBlitz3.ab3@9365> RTS
00026BEA <AmiBlitz3.ab3@9369>   LEA tokeslist,A3
00026BF0 <AmiBlitz3.ab3@9370>   MOVEA.l _execbase,A6
00026BF2 <AmiBlitz3.ab3@9373>   MOVE.l (A3),D0
00026BF6 <AmiBlitz3.ab3@9374>    BEQ.w JL_0_6EAC
00026BF8 <AmiBlitz3.ab3@9375>   MOVEA.l D0,A3
00026BFC <AmiBlitz3.ab3@9376>   CMP.w $4(A3),D4
00026C00 <AmiBlitz3.ab3@9377>    BNE.w JL_0_6E90
00026C04 <AmiBlitz3.ab3@9378>   CMP.w $6(A3),D5
00026C08 <AmiBlitz3.ab3@9379>    BNE.w JL_0_6E90
00026C0C <AmiBlitz3.ab3@9380> BRA.w JL_0_6ED0
00026C0E <AmiBlitz3.ab3@9383>   MOVEQ.l #$0C,D0
00026C10 <AmiBlitz3.ab3@9384>   MOVEQ.l #$01,D1
00026C16 <AmiBlitz3.ab3@9385>   MOVE.l mempool,a0
00026C1A <AmiBlitz3.ab3@9386>   JSR _AllocPooled(a6)
00026C1C <AmiBlitz3.ab3@9388>   MOVEA.l D0,A3
00026C22 <AmiBlitz3.ab3@9389>   MOVE.l tokeslist,(A3)
00026C28 <AmiBlitz3.ab3@9390>   MOVE.l A3,tokeslist
00026C2C <AmiBlitz3.ab3@9391>   MOVE.w D4,$4(A3)
00026C30 <AmiBlitz3.ab3@9392>   MOVE.w D5,$6(A3)
00026C34 <AmiBlitz3.ab3@9393>   CLR.l $8(A3)
00026C36 <AmiBlitz3.ab3@9396>   MOVEQ.l #$08,D0
00026C38 <AmiBlitz3.ab3@9397>   MOVEQ.l #$01,D1
00026C3E <AmiBlitz3.ab3@9398>   MOVE.l mempool,a0
00026C42 <AmiBlitz3.ab3@9399>   JSR _AllocPooled(a6)
00026C44 <AmiBlitz3.ab3@9401>   MOVEA.l D0,A0
00026C48 <AmiBlitz3.ab3@9402>   MOVE.l D3,$4(A0)
00026C4C <AmiBlitz3.ab3@9403>   MOVE.l $8(A3),(A0)
00026C50 <AmiBlitz3.ab3@9404>   MOVE.l A0,$8(A3)
00026C52 <AmiBlitz3.ab3@9405>   MOVE.w D4,D1
00026C56 <AmiBlitz3.ab3@9406> BRA.w searchinstr
00026C5A <AmiBlitz3.ab3@9409> tokeslist: Ds.l 1
00026C5E <AmiBlitz3.ab3@9422>   BEQ.w uselib2_org__skip
00026C60 <AmiBlitz3.ab3@9423>   MOVE.l A1,-(A7)
00026C62 <AmiBlitz3.ab3@9424>   ADDA.l D1,A1
00026C64 <AmiBlitz3.ab3@9425>   ADDQ.w #6,A1
00026C66 <AmiBlitz3.ab3@9428>     MOVE.w (A1)+,D1
00026C6A <AmiBlitz3.ab3@9429>     BEQ.w uselib2_org__done
00026C6C <AmiBlitz3.ab3@9430>     CMP.w D2,D1
00026C70 <AmiBlitz3.ab3@9431>     BEQ.w uselib2_org__skip2
00026C72 <AmiBlitz3.ab3@9432>     MOVE.l A1,-(A7)
00026C76 <AmiBlitz3.ab3@9433>     BSR.w uselib
00026C78 <AmiBlitz3.ab3@9434>     MOVEA.l (A7)+,A1
00026C7A <AmiBlitz3.ab3@9437>     ADDQ.w #2,A1
00026C7E <AmiBlitz3.ab3@9438> BRA.w uselib2_org__loop
00026C80 <AmiBlitz3.ab3@9441>   MOVEA.l (A7)+,A1
00026C82 <AmiBlitz3.ab3@9444> RTS
00026C88 <AmiBlitz3.ab3@9448>   MOVEA.l libpointer,A1
00026C8C <AmiBlitz3.ab3@9451>   CMPA.w #$0,A1
00026C90 <AmiBlitz3.ab3@9452>    BEQ.b JL_0_6F36
00026C94 <AmiBlitz3.ab3@9453>   CMP.w $4(A1),D1
00026C98 <AmiBlitz3.ab3@9454>    BEQ.w JL_0_6F34
00026C9A <AmiBlitz3.ab3@9455>   MOVEA.l (A1),A1
00026C9E <AmiBlitz3.ab3@9456> BRA.w JL_0_6F20
00026CA0 <AmiBlitz3.ab3@9459>   MOVEQ.l #-$01,D1
00026CA2 <AmiBlitz3.ab3@9462> RTS
00026CA6 <AmiBlitz3.ab3@9466>   MOVEM.l d0/a2,-(a7)
00026CA8 <AmiBlitz3.ab3@9467>   MOVEQ #0,d0
00026CAE <AmiBlitz3.ab3@9468>   LEA instrtab+4,a2
00026CB0 <AmiBlitz3.ab3@9469>   MOVE.w d1,d0
00026CB2 <AmiBlitz3.ab3@9470>   ASL.l #3,d0
00026CB6 <AmiBlitz3.ab3@9471>   MOVE.l 0(a2,d0.l),a1                                     ;*8
00026CBC <AmiBlitz3.ab3@9472>   CMP.l #0,a1
00026CC0 <AmiBlitz3.ab3@9473>   BNE JL_0_6F54b
00026CC6 <AmiBlitz3.ab3@9475>   MOVEA.l libpointer,A1
00026CCA <AmiBlitz3.ab3@9478>     CMPA.w #$0,A1
00026CCE <AmiBlitz3.ab3@9479>     BEQ.w noliberr
00026CD2 <AmiBlitz3.ab3@9480>     CMP.w $4(A1),D1
00026CD6 <AmiBlitz3.ab3@9481>     BEQ.w JL_0_6F54
00026CD8 <AmiBlitz3.ab3@9482>    MOVEA.l (A1),A1
00026CDC <AmiBlitz3.ab3@9483> BRA.w JL_0_6F3E
00026CE0 <AmiBlitz3.ab3@9486>   MOVE.l a1,0(a2,d0.l)
00026CE4 <AmiBlitz3.ab3@9489>   MOVEM.l (a7)+,d0/a2
00026CE6 <AmiBlitz3.ab3@9490> RTS
00026CEA <AmiBlitz3.ab3@9493>   MOVEM.l d0-d1/a1,-(a7)
00026CEC <AmiBlitz3.ab3@9494>   MOVEQ #0,d0
00026CF2 <AmiBlitz3.ab3@9495>   LEA instrtab,a1
00026CF4 <AmiBlitz3.ab3@9496>   MOVE.w d1,d0
00026CF6 <AmiBlitz3.ab3@9497>   ASL.l #3,d0
00026CFA <AmiBlitz3.ab3@9498>   MOVE.l 0(a1,d0.l),a3
00026CFE <AmiBlitz3.ab3@9499>   MOVE.l 4(a1,d0.l),a2
00026D04 <AmiBlitz3.ab3@9500>   CMP.l #0,a3
00026D08 <AmiBlitz3.ab3@9501>   BNE JL_0_6F92b
00026D0E <AmiBlitz3.ab3@9503>   MOVEA.l libpointer,A2
00026D12 <AmiBlitz3.ab3@9506>   CMPA.w #$0,A2
00026D16 <AmiBlitz3.ab3@9507>   BEQ.w notokerr
00026D1A <AmiBlitz3.ab3@9508>   CMP.w $E(A2),D1
00026D1E <AmiBlitz3.ab3@9509>   BCS.w JL_0_6FB8
00026D22 <AmiBlitz3.ab3@9510>   CMP.w $10(A2),D1
00026D26 <AmiBlitz3.ab3@9511>   BCC.w JL_0_6FB8
00026D2A <AmiBlitz3.ab3@9512>   LEA $30(A2),A3
00026D2E <AmiBlitz3.ab3@9513>   TST.w $4(A2)
00026D32 <AmiBlitz3.ab3@9514>   BPL.w JL_0_6FA6
00026D36 <AmiBlitz3.ab3@9517>     CMP.w $E(A2),D1
00026D3A <AmiBlitz3.ab3@9518>     BEQ.w JL_0_6F92
00026D3C <AmiBlitz3.ab3@9519>     SUBQ.w #1,D1
00026D40 <AmiBlitz3.ab3@9520>     MOVEA.l $2(A3),A3
00026D44 <AmiBlitz3.ab3@9521> BRA.w JL_0_6F80
00026D48 <AmiBlitz3.ab3@9524>   MOVE.l a3,0(a1,d0.l)
00026D4C <AmiBlitz3.ab3@9525>   MOVE.l a2,4(a1,d0.l)
00026D50 <AmiBlitz3.ab3@9528>   MOVEM.l (a7)+,d0-d1/a1
00026D54 <AmiBlitz3.ab3@9529>   MOVEM.l D1/A1-a3,-(A7)
00026D58 <AmiBlitz3.ab3@9530>   CMP.w #1,(a3)
00026D5C <AmiBlitz3.ab3@9531>   BNE.s ex10
00026D64 <AmiBlitz3.ab3@9532>   CMP.l #$12345678,$e(a3)
00026D68 <AmiBlitz3.ab3@9533>   BNE.s ex10
00026D6E <AmiBlitz3.ab3@9534>   CMP.w #$ffff,$16(a3)
00026D72 <AmiBlitz3.ab3@9535>   BNE.s ex10
00026D76 <AmiBlitz3.ab3@9536>   MOVE.l $12(a3),d1
00026D7A <AmiBlitz3.ab3@9537>   BEQ.s ex10
00026D80 <AmiBlitz3.ab3@9538>   LEA pluginbase,a3
00026D84 <AmiBlitz3.ab3@9540> JMP 0(a2,d1.l)                                             ;plugin
00026D88 <AmiBlitz3.ab3@9543>   MOVEM.l (A7)+,D1/A1-a3
00026D8E <AmiBlitz3.ab3@9544>   JSR stripspaces
00026D90 <AmiBlitz3.ab3@9545>   MOVEQ #0,d0
00026D92 <AmiBlitz3.ab3@9546>   MOVE.b (a5)+,d0
00026D98 <AmiBlitz3.ab3@9547>   MOVE.w d0,lastchar
00026D9A <AmiBlitz3.ab3@9548>   ADDQ.l #4,a7
00026D9C <AmiBlitz3.ab3@9549> RTS
00026D9E <AmiBlitz3.ab3@9553>   MOVEA.l A2,A1
00026DA4 <AmiBlitz3.ab3@9554>   CLR.b newmode
00026DA8 <AmiBlitz3.ab3@9555>   MOVE.w $4(A1),D1
00026DAC <AmiBlitz3.ab3@9558>   BSR.w uselib3
00026DB0 <AmiBlitz3.ab3@9559>   MOVEM.l (A7)+,D1/A1-a3
00026DB2 <AmiBlitz3.ab3@9560> RTS
00026DB8 <AmiBlitz3.ab3@9563>   MOVE.w globalvarpointer,-(a7)
00026DC0 <AmiBlitz3.ab3@9564>   MOVE.w #$8004,globalvarpointer
00026DC4 <AmiBlitz3.ab3@9565>   BSR.w uselib3
00026DCA <AmiBlitz3.ab3@9566>   MOVE.w (a7)+,globalvarpointer
00026DCE <AmiBlitz3.ab3@9567>   MOVEM.l (A7)+,D1/A1-a3
00026DD0 <AmiBlitz3.ab3@9568> RTS
00026DD4 <AmiBlitz3.ab3@9571>     CMP.w $E(A2),D1
00026DD8 <AmiBlitz3.ab3@9572>     BEQ.w JL_0_6F92
00026DDA <AmiBlitz3.ab3@9573>     SUBQ.w #1,D1
00026DDE <AmiBlitz3.ab3@9574>     MOVEA.l $2(A3),A3
00026DE2 <AmiBlitz3.ab3@9575> BRA.w JL_0_6FA6
00026DE4 <AmiBlitz3.ab3@9578>   MOVEA.l (A2),A2
00026DE8 <AmiBlitz3.ab3@9579> BRA.w JL_0_6F5C
00026DEE <AmiBlitz3.ab3@9582> JMP writeword
00026DF2 <AmiBlitz3.ab3@9585> ptr_acidlibs:   Ds.l 1                                     ;deflibsat org source
00026DF6 <AmiBlitz3.ab3@9586> ptr_deflibs:    Ds.l 1                                     ;acidlibsat org source
00026DFA <AmiBlitz3.ab3@9587> ptr_userlibs:   Ds.l 1                                     ;blitzlibsat org source  ;;start of blitzlibs list!
00026DFC <AmiBlitz3.ab3@9593>   TST.l D0
00026E00 <AmiBlitz3.ab3@9594>   BEQ.w exit_loadlibsfile
00026E02 <AmiBlitz3.ab3@9595>     MOVE.l D0,D6                                           ;d6=len
00026E08 <AmiBlitz3.ab3@9596>     MOVEA.l _dosbase,A6
00026E0E <AmiBlitz3.ab3@9597>     MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00026E12 <AmiBlitz3.ab3@9598>     JSR _Open(A6)
00026E14 <AmiBlitz3.ab3@9599>     MOVE.l D0,D7
00026E18 <AmiBlitz3.ab3@9600>     BEQ.w exit_loadlibsfile
00026E1A <AmiBlitz3.ab3@9601>       MOVE.l D6,D0
00026E1C <AmiBlitz3.ab3@9602>       MOVEQ.l #$01,D1
00026E22 <AmiBlitz3.ab3@9603>       MOVEA.l _execbase,A6
00026E28 <AmiBlitz3.ab3@9604>       MOVE.l mempool,a0
00026E2C <AmiBlitz3.ab3@9605>       JSR _AllocPooled(a6)
00026E2E <AmiBlitz3.ab3@9606>       MOVE.l D0,D5                                         ;start address
00026E30 <AmiBlitz3.ab3@9608>       MOVE.l D7,D1                                         ; handle
00026E32 <AmiBlitz3.ab3@9609>       MOVE.l D5,D2                                         ; buffer addr
00026E34 <AmiBlitz3.ab3@9610>       MOVE.l D6,D3                                         ; size
00026E3A <AmiBlitz3.ab3@9611>       MOVEA.l _dosbase,A6
00026E3E <AmiBlitz3.ab3@9612>       JSR _Read(A6)
00026E40 <AmiBlitz3.ab3@9613>       MOVE.l D7,D1
00026E44 <AmiBlitz3.ab3@9614>       JSR _Close(A6)
00026E46 <AmiBlitz3.ab3@9616>       MOVEA.l D5,A0                                        ; buffer addr
00026E48 <AmiBlitz3.ab3@9622>         MOVE.l (A0)+,D0                                    ; naechster Longwert nach DO
00026E4C <AmiBlitz3.ab3@9623>         BEQ.b JL_0_7044                                    ; wenn <> 0, dann
00026E50 <AmiBlitz3.ab3@9624>           LEA $20(A0),A1                                   ;   lade inhalt von D0+40bytes nach A1
00026E52 <AmiBlitz3.ab3@9625>           MOVE.l A1,(A3)                                   ;   kopiere Adresse in A1 zum libpointer
00026E54 <AmiBlitz3.ab3@9626>           MOVEA.l A1,A3                                    ;   kopiere A1 nach A3
00026E56 <AmiBlitz3.ab3@9627>           ADDA.l D0,A0                                     ;   addiere inhalt von D0 zu A0 hinzu
00026E5A <AmiBlitz3.ab3@9628>           MOVE.l -$4(A1),D0                                ;   hole die 4bytes vor nach D0
00026E5C <AmiBlitz3.ab3@9629>           ADD.l D0,D0                                      ;   verdoppele D0
00026E5E <AmiBlitz3.ab3@9630>           ADD.l D0,D0                                      ;   verdoppele D0 nochmal
00026E62 <AmiBlitz3.ab3@9631>           MOVE.l D0,$6(A1)                                 ;   schreibe D0 6bytes nach A1
00026E66 <AmiBlitz3.ab3@9632>           CLR.l $20(A1)                                    ;   loesche D0+40bytes
00026E6A <AmiBlitz3.ab3@9633>           LEA $C(A1,D0.L),A2                               ;   lade inhalt von (A1)+D0+$C nach A2
00026E6C <AmiBlitz3.ab3@9634>           CMPA.l A0,A2
00026E70 <AmiBlitz3.ab3@9635>           BCC.b JL_0_7010                                  ; wenn A0=>A2
00026E76 <AmiBlitz3.ab3@9636>             MOVE.l -$8(A2),$20(A1)                         ;
00026E7A <AmiBlitz3.ab3@9637>             MOVE.l A2,$24(A1)                              ;
00026E7E <AmiBlitz3.ab3@9638> BRA.w JL_0_7010
00026E80 <AmiBlitz3.ab3@9641>       MOVE.l D5,D0
00026E82 <AmiBlitz3.ab3@9644> RTS
00026EAC <AmiBlitz3.ab3@9648>   !basic
00026F20 <AmiBlitz3.ab3@9649>    tempmapping$ = dos_AddPart{my_systemdir$,"token_mapping_userlibs.txt"}
00026F54 <AmiBlitz3.ab3@9650>    dos_Delete{tempmapping$}
00026F98 <AmiBlitz3.ab3@9651>    fid.l = file_Open{tempmapping$,#file_forcewrite}
00026FB6 <AmiBlitz3.ab3@9652>   !asm
00026FBC <AmiBlitz3.ab3@9654>   LEA libpointer,A3
00026FC2 <AmiBlitz3.ab3@9658>   MOVE.l size_deflibs,D0
00026FC8 <AmiBlitz3.ab3@9659>   MOVE.l deflib,d1
00026FCC <AmiBlitz3.ab3@9660>   BEQ 'l1
00026FD0 <AmiBlitz3.ab3@9661> BRA 'l2
00026FD6 <AmiBlitz3.ab3@9664>   MOVE.l #str_path_deflibs,D1
00026FDA <AmiBlitz3.ab3@9667>   BSR.w load_libsfile
00026FE0 <AmiBlitz3.ab3@9668>   MOVE.l D0,ptr_deflibs
00026FE6 <AmiBlitz3.ab3@9671>   MOVE.l size_acidlibs,D0
00026FEC <AmiBlitz3.ab3@9672>   MOVE.l #str_path_acidlibs,D1
00026FF0 <AmiBlitz3.ab3@9673>   BSR.w load_libsfile
00026FF6 <AmiBlitz3.ab3@9674>   MOVE.l D0,ptr_acidlibs
00026FF8 <AmiBlitz3.ab3@9678>   CLR.l (A3)
00026FFE <AmiBlitz3.ab3@9679>   MOVE.l A3,ptr_userlibs
00027004 <AmiBlitz3.ab3@9684>   LEA str_libfilename,A0
0002700A <AmiBlitz3.ab3@9685>   LEA str_path_userlibs,A1
0002700C <AmiBlitz3.ab3@9688>     MOVE.b (A1)+,(A0)+
00027010 <AmiBlitz3.ab3@9689>   BNE.b JL_0_708E
00027012 <AmiBlitz3.ab3@9691>   SUBQ.w #1,A0
00027016 <AmiBlitz3.ab3@9692>   MOVE.b #$2F,(A0)+
00027018 <AmiBlitz3.ab3@9695>   MOVE.l A0,-(A7)                                          ; -- store str_path_userlibs in A7
0002701E <AmiBlitz3.ab3@9697>   LEA ptr_userlibs_list,A2
00027024 <AmiBlitz3.ab3@9698>   MOVEA.l ptr_userlibs,A3
0002702A <AmiBlitz3.ab3@9699>   MOVEA.l _dosbase,A6
0002702C <AmiBlitz3.ab3@9704>       MOVE.l (A2),D0                                       ; addresse aus liste nach D0
00027030 <AmiBlitz3.ab3@9705>       BNE.b JL_0_70C6                                      ; wenn nix drin, processing ueberspringen
00027032 <AmiBlitz3.ab3@9707>       CLR.l (A3)
00027034 <AmiBlitz3.ab3@9708>       ADDQ.w #4,A7
0002705E <AmiBlitz3.ab3@9709>       !basic
00027072 <AmiBlitz3.ab3@9710>       If fid<>-1
0002707C <AmiBlitz3.ab3@9711>         file_Close{fid}
00027088 <AmiBlitz3.ab3@9712>         fid = -1
000270A6 <AmiBlitz3.ab3@9714>       !asm
000270AA <AmiBlitz3.ab3@9715> BRA.w process_libraries
000270AC <AmiBlitz3.ab3@9718>       MOVEA.l D0,A2                                        ; addresse zureuck nach A2
000270B0 <AmiBlitz3.ab3@9719>       TST.w $4(A2)                                         ; naechste addresse pruefen
000270B4 <AmiBlitz3.ab3@9720>     BEQ.b JL_0_70BA
000270B8 <AmiBlitz3.ab3@9722>     LEA $6(A2),A1
000270BA <AmiBlitz3.ab3@9723>     MOVEA.l (A7),A0
000270BC <AmiBlitz3.ab3@9726>       MOVE.b (A1)+,(A0)+
000270C0 <AmiBlitz3.ab3@9727>     BNE.w JL_0_70D4
000270C2 <AmiBlitz3.ab3@9731>     MOVE.l A0,-(A7)
000270C8 <AmiBlitz3.ab3@9732>     MOVE.l #str_libfilename,D1
000270CA <AmiBlitz3.ab3@9733>     MOVEQ.l #-$02,D2
000270D0 <AmiBlitz3.ab3@9734>     MOVEA.l _dosbase,A6
000270D4 <AmiBlitz3.ab3@9735>      JSR _Lock(A6)
000270D6 <AmiBlitz3.ab3@9736>     MOVE.l D0,D1
000270DA <AmiBlitz3.ab3@9737>      BEQ.w JL_0_7156
000270DC <AmiBlitz3.ab3@9738>     MOVEA.l (A7),A0
000270E2 <AmiBlitz3.ab3@9739>     MOVE.b #$2F,-$1(A0)
000270E4 <AmiBlitz3.ab3@9742>     MOVE.l D1,-(A7)
000270EA <AmiBlitz3.ab3@9743>     MOVE.l #ptr_parameterstore,D2
000270F0 <AmiBlitz3.ab3@9744>     MOVEA.l _dosbase,A6
000270F4 <AmiBlitz3.ab3@9745>     JSR _Examine(A6)
000270F6 <AmiBlitz3.ab3@9746>     TST.l D0
000270FA <AmiBlitz3.ab3@9747>      BEQ.w JL_0_7150
00027100 <AmiBlitz3.ab3@9750>     LEA fib_FileName,A0
00027104 <AmiBlitz3.ab3@9751>     BSR.w check_for_infoextention
00027108 <AmiBlitz3.ab3@9752>     BEQ.w JL_0_7150
00027132 <AmiBlitz3.ab3@9755>     !basic
000271B6 <AmiBlitz3.ab3@9756>       Poke$ ?str_libfilename,dos_AddPart{Peek$(?str_path_userlibs),Peek$(?fib_FileName)}
000271D4 <AmiBlitz3.ab3@9757>     !asm
000271DA <AmiBlitz3.ab3@9758>     MOVE.l #str_libfilename,D1
000271DE <AmiBlitz3.ab3@9759>     BSR.w open_userlibfile
000271E0 <AmiBlitz3.ab3@9762>     MOVE.l (A7)+,D1
000271E6 <AmiBlitz3.ab3@9763>     MOVEA.l _dosbase,A6
000271EA <AmiBlitz3.ab3@9764>     JSR _UnLock(A6)
000271EC <AmiBlitz3.ab3@9767>     ADDQ.w #4,A7
000271F0 <AmiBlitz3.ab3@9768> BRA.w JL_0_70BA
000271F6 <AmiBlitz3.ab3@9771>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
000271FC <AmiBlitz3.ab3@9772>   MOVEA.l _dosbase,A6
00027200 <AmiBlitz3.ab3@9773>    JSR _Open(A6)
00027202 <AmiBlitz3.ab3@9774>   MOVE.l D0,D7
00027206 <AmiBlitz3.ab3@9775>    BEQ.w exit_userlibfile
00027208 <AmiBlitz3.ab3@9778>   MOVE.l D7,D1                                             ; filehandle
0002720E <AmiBlitz3.ab3@9779>   MOVE.l #optstuff,D2                                     ; buffer
00027214 <AmiBlitz3.ab3@9780>   MOVEA.l _dosbase,A6
00027216 <AmiBlitz3.ab3@9781>   MOVEQ.l #$20,D3                                          ; size
0002721A <AmiBlitz3.ab3@9782>   JSR _Read(A6)
00027220 <AmiBlitz3.ab3@9785>   MOVE.l optstuff+28,D6
00027222 <AmiBlitz3.ab3@9786>   LSL.l #2,D6
00027224 <AmiBlitz3.ab3@9787>   MOVE.l D6,D0
00027226 <AmiBlitz3.ab3@9788>   MOVEQ.l #$01,D1
0002722C <AmiBlitz3.ab3@9789>   MOVEA.l _execbase,A6
00027232 <AmiBlitz3.ab3@9790>   MOVE.l mempool,a0
00027236 <AmiBlitz3.ab3@9791>   JSR _AllocPooled(a6)
00027238 <AmiBlitz3.ab3@9792>   MOVEA.l D0,A5
0002723E <AmiBlitz3.ab3@9795>   MOVEA.l _dosbase,A6
00027240 <AmiBlitz3.ab3@9796>   MOVE.l D7,D1                                             ; filehandle
00027242 <AmiBlitz3.ab3@9797>   MOVE.l A5,D2                                             ; buffer
00027244 <AmiBlitz3.ab3@9798>   MOVE.l D6,D3                                             ; size
00027248 <AmiBlitz3.ab3@9799>    JSR _Read(A6)
0002724A <AmiBlitz3.ab3@9800>   MOVE.l A5,(A3)
0002724C <AmiBlitz3.ab3@9802>   MOVE.l A5,d0
0002724E <AmiBlitz3.ab3@9804>   MOVEA.l A5,A3
00027252 <AmiBlitz3.ab3@9805>   MOVE.l D6,$6(A5)
00027256 <AmiBlitz3.ab3@9806>   CLR.l $20(A5)
00027280 <AmiBlitz3.ab3@9808>   !basic
0002728A <AmiBlitz3.ab3@9810>   addr_libnum.l = PutD0 + 4
0002729E <AmiBlitz3.ab3@9811>   If fid<>-1
0002733E <AmiBlitz3.ab3@9812>     currentlib$ = LSet$(Peek.s(?fib_FileName),30)+";"+LSet$(Get_Libinfo{addr_libnum},30) ;+";"+Str$(Peek.w(addr_libnum))
00027370 <AmiBlitz3.ab3@9813>     file_WriteLine{fid,currentlib$}
0002738E <AmiBlitz3.ab3@9815>   !asm
00027390 <AmiBlitz3.ab3@9818>   MOVE.l D7,D1                                             ; filehandle
00027396 <AmiBlitz3.ab3@9819>   MOVE.l #optstuff,D2                                     ; buffer
00027398 <AmiBlitz3.ab3@9820>   MOVEQ.l #$0C,D3                                          ; size
0002739E <AmiBlitz3.ab3@9821>   MOVEA.l _dosbase,A6
000273A2 <AmiBlitz3.ab3@9822>    JSR _Read(A6)
000273A8 <AmiBlitz3.ab3@9824>   CMP.l #$C,D0
000273AC <AmiBlitz3.ab3@9825>    BCS.w close_and_exit_userlibfile
000273B2 <AmiBlitz3.ab3@9828>   MOVE.l optstuff+4,D0
000273B6 <AmiBlitz3.ab3@9829>   MOVE.l D0,$20(A5)
000273B8 <AmiBlitz3.ab3@9830>   LSL.l #2,D0
000273BA <AmiBlitz3.ab3@9831>   MOVE.l D0,D5
000273BC <AmiBlitz3.ab3@9832>   MOVEQ.l #$01,D1
000273C2 <AmiBlitz3.ab3@9833>   MOVEA.l _execbase,A6
000273C8 <AmiBlitz3.ab3@9834>   MOVE.l mempool,a0
000273CC <AmiBlitz3.ab3@9835>   JSR _AllocPooled(a6)
000273D2 <AmiBlitz3.ab3@9837>   MOVEA.l _dosbase,A6
000273D6 <AmiBlitz3.ab3@9838>   MOVE.l D0,$24(A5)
000273D8 <AmiBlitz3.ab3@9839>   MOVE.l D7,D1
000273DA <AmiBlitz3.ab3@9840>   MOVE.l D0,D2
000273DC <AmiBlitz3.ab3@9841>   MOVE.l D5,D3
000273E0 <AmiBlitz3.ab3@9842>   JSR _Read(A6)
000273E2 <AmiBlitz3.ab3@9845>   MOVE.l D7,D1
000273E8 <AmiBlitz3.ab3@9846>   MOVEA.l _dosbase,A6
000273EC <AmiBlitz3.ab3@9847> JMP _Close(A6)
000273EE <AmiBlitz3.ab3@9850> RTS
000273F4 <AmiBlitz3.ab3@9856>   CLR.w number_of_objects
000273FA <AmiBlitz3.ab3@9857>   MOVEA.l end_of_tokenlist,A3
00027400 <AmiBlitz3.ab3@9858>   MOVEA.l libpointer,A2
00027404 <AmiBlitz3.ab3@9861>     CMPA.w #$0,A2
00027408 <AmiBlitz3.ab3@9862>     BEQ.w JL_0_72D8                                        ; <-- abbruch mit RTS
0002740C <AmiBlitz3.ab3@9864>     MOVE.w $4(A2),D7                                       ; <-- get tokennumber
00027410 <AmiBlitz3.ab3@9865>     BMI.w JL_0_7226
00027412 <AmiBlitz3.ab3@9866>       LSL.w #7,D7
00027414 <AmiBlitz3.ab3@9867>       ADDQ.w #1,D7
00027418 <AmiBlitz3.ab3@9868>       MOVE.w D7,$E(A2)
0002741C <AmiBlitz3.ab3@9871>     LEA $30(A2),A1
00027422 <AmiBlitz3.ab3@9872>     LEA temp1,A4
00027424 <AmiBlitz3.ab3@9875>       MOVE.w (A1),D0
00027428 <AmiBlitz3.ab3@9876>       BMI.w JL_0_72AE
0002742A <AmiBlitz3.ab3@9877>       MOVE.l A1,(A4)
0002742C <AmiBlitz3.ab3@9878>       MOVEA.l A1,A4
0002742E <AmiBlitz3.ab3@9879>       ADDQ.w #2,A4
00027430 <AmiBlitz3.ab3@9880>       ADDQ.w #6,A1
00027434 <AmiBlitz3.ab3@9881>       CMP.w #$8,D0
00027438 <AmiBlitz3.ab3@9882>       BEQ.w JL_0_7290
0002743C <AmiBlitz3.ab3@9883>         ANDI.w #$F,D0
00027440 <AmiBlitz3.ab3@9884>         BNE.w JL_0_725C
00027444 <AmiBlitz3.ab3@9885>           BSR.w skiplibreg
00027448 <AmiBlitz3.ab3@9886>           LEA $C(A1),A1
0002744A <AmiBlitz3.ab3@9887>           ADDQ.w #1,D7
0002744E <AmiBlitz3.ab3@9888> BRA.w JL_0_7230
00027452 <AmiBlitz3.ab3@9891>     BTST #$2,D0
00027456 <AmiBlitz3.ab3@9892>     BEQ.w JL_0_7274
00027458 <AmiBlitz3.ab3@9893>       ADDQ.w #4,A1
0002745A <AmiBlitz3.ab3@9896>         TST.b (A1)+
0002745E <AmiBlitz3.ab3@9897>       BPL.w JL_0_7266
00027462 <AmiBlitz3.ab3@9898>       BSR.w aligna1
00027466 <AmiBlitz3.ab3@9899> BRA.w JL_0_7290
00027468 <AmiBlitz3.ab3@9902>       MOVE.w (A1)+,D0
0002746C <AmiBlitz3.ab3@9903>       BMI.w JL_0_7290
00027470 <AmiBlitz3.ab3@9904>       ANDI.w #$FF,D0
00027472 <AmiBlitz3.ab3@9905>       ADDA.w D0,A1
00027476 <AmiBlitz3.ab3@9906>       BSR.w aligna1
0002747A <AmiBlitz3.ab3@9907>       BSR.w skiplibreg
0002747E <AmiBlitz3.ab3@9908>       LEA $C(A1),A1
00027482 <AmiBlitz3.ab3@9909> BRA.w JL_0_7274
00027484 <AmiBlitz3.ab3@9912>     MOVE.l A1,(A3)
00027486 <AmiBlitz3.ab3@9913>     MOVEA.l A1,A3
00027488 <AmiBlitz3.ab3@9914>     ADDQ.w #4,A1
0002748A <AmiBlitz3.ab3@9915>     MOVE.w D7,(A1)+
0002748C <AmiBlitz3.ab3@9918>       TST.b (A1)+
00027490 <AmiBlitz3.ab3@9919>     BNE.w JL_0_7298
00027492 <AmiBlitz3.ab3@9922>       TST.b (A1)+
00027496 <AmiBlitz3.ab3@9923>     BNE.w JL_0_729E
0002749A <AmiBlitz3.ab3@9925>     BSR.w aligna1
0002749C <AmiBlitz3.ab3@9926>     ADDQ.w #1,D7
000274A0 <AmiBlitz3.ab3@9927> BRA.w JL_0_7230
000274A4 <AmiBlitz3.ab3@9930>     TST.w $4(A2)
000274A8 <AmiBlitz3.ab3@9931>      BMI.w JL_0_72BA
000274AC <AmiBlitz3.ab3@9932>     MOVE.w D7,$10(A2)
000274AE <AmiBlitz3.ab3@9935>     ADDQ.w #2,A1
000274B0 <AmiBlitz3.ab3@9936>     TST.l (A1)+
000274B4 <AmiBlitz3.ab3@9937>      BEQ.w JL_0_72CC
000274BA <AmiBlitz3.ab3@9938>     ADDQ.w #1,number_of_objects
000274BE <AmiBlitz3.ab3@9939>     LEA $16(A1),A1
000274C0 <AmiBlitz3.ab3@9942>     SUBA.l A2,A1
000274C4 <AmiBlitz3.ab3@9943>     MOVE.l A1,$12(A2)
000274C6 <AmiBlitz3.ab3@9944>     MOVEA.l (A2),A2
000274CA <AmiBlitz3.ab3@9945> BRA.w JL_0_720E
000274CC <AmiBlitz3.ab3@9948>   CLR.l (A3)
000274D2 <AmiBlitz3.ab3@9949> 
000274D8 <AmiBlitz3.ab3@9950>   MOVE.l A7,errstack
000274E2 <AmiBlitz3.ab3@9951>   MOVE.l #AL_0_730E,errcont
000274EA <AmiBlitz3.ab3@9952>   MOVE.w #$FFFF,ezerr
000274EE <AmiBlitz3.ab3@9953>   MOVE.w #$FFFA,D1
000274F2 <AmiBlitz3.ab3@9954>    BSR.w JL_0_6F38
000274F8 <AmiBlitz3.ab3@9955>   MOVE.l A1,tempvm
000274FC <AmiBlitz3.ab3@9956>   MOVE.w #$FDA7,D1
00027500 <AmiBlitz3.ab3@9957>    BSR.w JL_0_6F38
00027506 <AmiBlitz3.ab3@9958>   MOVE.l A1,ffplib
00027508 <AmiBlitz3.ab3@9961> RTS
0002750C <AmiBlitz3.ab3@9964> ffplib:  Ds.l 1
0002750E <AmiBlitz3.ab3@9968>     TST.w (A1)+
00027512 <AmiBlitz3.ab3@9969>     BEQ.w JL_0_7320
00027514 <AmiBlitz3.ab3@9970>     ADDQ.w #2,A1
00027518 <AmiBlitz3.ab3@9971> BRA.w skiplibreg
0002751A <AmiBlitz3.ab3@9974> RTS
0002751C <AmiBlitz3.ab3@9978>   EXG.l A1,A0
00027520 <AmiBlitz3.ab3@9979>   BSR.w aligna1
00027522 <AmiBlitz3.ab3@9980>   EXG.l A1,A0
00027524 <AmiBlitz3.ab3@9981> RTS
00027526 <AmiBlitz3.ab3@9984>   EXG.l D0,A1
00027528 <AmiBlitz3.ab3@9985>   ADDQ.l #1,D0
0002752C <AmiBlitz3.ab3@9986>   BCLR #$0,D0
0002752E <AmiBlitz3.ab3@9987>   EXG.l D0,A1
00027530 <AmiBlitz3.ab3@9988> RTS
00027536 <AmiBlitz3.ab3@9992>   MOVEA.l _execbase,A6
0002753C <AmiBlitz3.ab3@9993>   MOVEA.l ptr_userlibs,A2
0002753E <AmiBlitz3.ab3@9994>   MOVE.l (A2),D0
00027540 <AmiBlitz3.ab3@9995>   CLR.l (A2)
00027542 <AmiBlitz3.ab3@9996>   MOVEA.l D0,A2
00027546 <AmiBlitz3.ab3@9999>     CMPA.w #$0,A2
0002754A <AmiBlitz3.ab3@10000>     BEQ.w free_userlib
0002754E <AmiBlitz3.ab3@10002>     MOVE.l $20(A2),D0
00027552 <AmiBlitz3.ab3@10003>     BEQ.b JL_0_7360
00027554 <AmiBlitz3.ab3@10004>       LSL.l #2,D0
0002755A <AmiBlitz3.ab3@10005>       MOVE.l mempool,a0
0002755E <AmiBlitz3.ab3@10006>       MOVEA.l $24(A2),A1
00027562 <AmiBlitz3.ab3@10007>       JSR _FreePooled(A6)
00027564 <AmiBlitz3.ab3@10010>     MOVEA.l A2,A1
00027568 <AmiBlitz3.ab3@10011>     MOVE.l $6(A1),D0
0002756E <AmiBlitz3.ab3@10012>     MOVE.l mempool,a0
00027570 <AmiBlitz3.ab3@10013>     MOVEA.l (A2),A2
00027576 <AmiBlitz3.ab3@10014>     MOVEA.l _execbase,A6
0002757A <AmiBlitz3.ab3@10015>     JSR _FreePooled(A6)
0002757E <AmiBlitz3.ab3@10016> BRA.w JL_0_7348
00027582 <AmiBlitz3.ab3@10020>   BSR.w free_userlibs
00027588 <AmiBlitz3.ab3@10021>   MOVEA.l _execbase,A6
0002758E <AmiBlitz3.ab3@10022>   CLR.l libpointer
00027594 <AmiBlitz3.ab3@10023>   MOVEA.l end_of_tokenlist,A0
00027596 <AmiBlitz3.ab3@10024>   CLR.l (A0)
0002759C <AmiBlitz3.ab3@10026>   MOVE.l size_acidlibs,D0
000275A0 <AmiBlitz3.ab3@10027>   BEQ.b JL_0_73A2
000275A6 <AmiBlitz3.ab3@10028>     MOVE.l ptr_acidlibs,D1
000275AA <AmiBlitz3.ab3@10029>     BEQ.b JL_0_73A2
000275B0 <AmiBlitz3.ab3@10030>       CLR.l ptr_acidlibs
000275B2 <AmiBlitz3.ab3@10031>       MOVEA.l D1,A1
000275B8 <AmiBlitz3.ab3@10032>       MOVE.l mempool,a0
000275BE <AmiBlitz3.ab3@10033>       MOVEA.l _execbase,A6
000275C2 <AmiBlitz3.ab3@10034>       JSR _FreePooled(A6)                                 ; free acidlibs
000275C8 <AmiBlitz3.ab3@10037>   MOVE.l size_deflibs,D0
000275CC <AmiBlitz3.ab3@10038>   BEQ.b JL_0_73BE
000275D2 <AmiBlitz3.ab3@10039>     MOVE.l ptr_deflibs,D1
000275D6 <AmiBlitz3.ab3@10040>     BEQ.b JL_0_73BE
000275DC <AmiBlitz3.ab3@10041>       CLR.l ptr_deflibs                                    ; d0: memorySize
000275DE <AmiBlitz3.ab3@10042>       MOVEA.l D1,A1                                        ; a1: memory
000275E4 <AmiBlitz3.ab3@10043>       MOVE.l mempool,a0                                    ; a0: poolHeader
000275EA <AmiBlitz3.ab3@10044>       MOVEA.l _execbase,A6
000275EE <AmiBlitz3.ab3@10045>       JSR _FreePooled(A6)                                  ; free deflibs
000275F0 <AmiBlitz3.ab3@10048> RTS
000275F6 <AmiBlitz3.ab3@10052>   MOVEA.l currentmacroaddr,A0
000275F8 <AmiBlitz3.ab3@10053>   MOVEA.l (A0),A2
000275FA <AmiBlitz3.ab3@10054>   CLR.l (A0)
00027600 <AmiBlitz3.ab3@10055>   MOVEA.l _execbase,A6
00027604 <AmiBlitz3.ab3@10058>     CMPA.w #$0,A2
00027608 <AmiBlitz3.ab3@10059>     BEQ.w JL_0_73FA
0002760A <AmiBlitz3.ab3@10060>     MOVEQ.l #$00,D0
0002760E <AmiBlitz3.ab3@10061>     MOVE.w $8(A2),D0
00027612 <AmiBlitz3.ab3@10062>     BEQ.w JL_0_73E8
00027616 <AmiBlitz3.ab3@10063>     MOVEA.l $4(A2),A1
0002761C <AmiBlitz3.ab3@10064>     MOVE.l mempool,a0
00027620 <AmiBlitz3.ab3@10065>     JSR _FreePooled(A6)
00027622 <AmiBlitz3.ab3@10068>     MOVEA.l A2,A1
00027624 <AmiBlitz3.ab3@10069>     MOVEA.l (A2),A2
00027626 <AmiBlitz3.ab3@10070>     MOVEQ.l #$00,D0
0002762A <AmiBlitz3.ab3@10071>     MOVE.b $C(A1),D0
00027630 <AmiBlitz3.ab3@10072>     MOVE.l mempool2,a0
00027634 <AmiBlitz3.ab3@10073>     JSR _FreePooled(A6)
00027638 <AmiBlitz3.ab3@10074> BRA.w JL_0_73CE
0002763A <AmiBlitz3.ab3@10077> RTS
00027640 <AmiBlitz3.ab3@10081>   MOVEA.l templabel,A2
00027646 <AmiBlitz3.ab3@10082>   CLR.l templabel
00027648 <AmiBlitz3.ab3@10083> RTS
0002764E <AmiBlitz3.ab3@10086>   MOVEA.l _execbase,A6                                     ;??looks like dead code?
00027652 <AmiBlitz3.ab3@10089>     CMPA.w #$0,A2
00027656 <AmiBlitz3.ab3@10090>     BEQ.w JL_0_7426
00027658 <AmiBlitz3.ab3@10091>     MOVEQ.l #$00,D0
0002765C <AmiBlitz3.ab3@10092>     MOVE.b $E(A2),D0                                       ;labeltemp
0002765E <AmiBlitz3.ab3@10093>     MOVEA.l A2,A1
00027660 <AmiBlitz3.ab3@10094>     MOVEA.l (A2),A2
00027666 <AmiBlitz3.ab3@10095>     MOVE.l mempool2,a0
0002766A <AmiBlitz3.ab3@10097> BRA.w JL_0_740C
0002766C <AmiBlitz3.ab3@10100> RTS
00027672 <AmiBlitz3.ab3@10104>   MOVEA.l data1,A4
00027678 <AmiBlitz3.ab3@10105>   CMPA.l data2at,A4
0002767C <AmiBlitz3.ab3@10106>   BCC.w JL_0_7442
0002767E <AmiBlitz3.ab3@10107>     MOVE.b D1,(A4)+
00027684 <AmiBlitz3.ab3@10108>     MOVE.l A4,data1
00027686 <AmiBlitz3.ab3@10109> RTS
0002768E <AmiBlitz3.ab3@10112>   MOVE.w #$FFFF,dontwrite                                  ;move #-1, org source
00027694 <AmiBlitz3.ab3@10113>   ADDQ.l #1,data1
00027696 <AmiBlitz3.ab3@10114> RTS
00027698 <AmiBlitz3.ab3@10118>   SWAP D1
0002769C <AmiBlitz3.ab3@10119>   BSR.w pokedata1
0002769E <AmiBlitz3.ab3@10120>   SWAP D1
000276A4 <AmiBlitz3.ab3@10123>   MOVEA.l data1,A4
000276AA <AmiBlitz3.ab3@10124>   CMPA.l data2at,A4
000276AE <AmiBlitz3.ab3@10125>    BCC.w JL_0_7474
000276B0 <AmiBlitz3.ab3@10126>   MOVE.w D1,(A4)+
000276B6 <AmiBlitz3.ab3@10127>   MOVE.l A4,data1
000276B8 <AmiBlitz3.ab3@10128> RTS
000276C0 <AmiBlitz3.ab3@10131>   MOVE.w #$FFFF,dontwrite
000276C6 <AmiBlitz3.ab3@10132>   ADDQ.l #2,data1
000276C8 <AmiBlitz3.ab3@10133> RTS
000276CE <AmiBlitz3.ab3@10137>   MOVE.l data1,D3                                      ;write local string/type allocs
000276D0 <AmiBlitz3.ab3@10138>   MOVEQ.l #$00,D4
000276D4 <AmiBlitz3.ab3@10141>   CMPA.w #$0,A2
000276D8 <AmiBlitz3.ab3@10142>    BEQ.w JL_0_74CAc
000276DC <AmiBlitz3.ab3@10143>   TST.w $6(A2)
000276E0 <AmiBlitz3.ab3@10144>    BNE.w JL_0_74C4c
000276E4 <AmiBlitz3.ab3@10145>   MOVEA.l $A(A2),A3
000276EC <AmiBlitz3.ab3@10146>   CMPI.l #$100,$4(A3)
000276F0 <AmiBlitz3.ab3@10147>    BCS.w JL_0_74C4c
000276F4 <AmiBlitz3.ab3@10148>   MOVE.w $4(A2),D1
000276F8 <AmiBlitz3.ab3@10149>    BSR.w pokedata1
000276FC <AmiBlitz3.ab3@10150>   MOVE.w $8(A3),D1
00027700 <AmiBlitz3.ab3@10151>    BSR.w pokedata1
00027702 <AmiBlitz3.ab3@10152>   ADDQ.w #1,D4
00027704 <AmiBlitz3.ab3@10155>    MOVEA.l (A2),A2
00027708 <AmiBlitz3.ab3@10156> BRA.w JL_0_7492c
0002770A <AmiBlitz3.ab3@10159>    TST.w D4
0002770E <AmiBlitz3.ab3@10160>    BEQ.w JL_0_74E0
00027712 <AmiBlitz3.ab3@10161>   MOVE.w #$FF37,D1
00027716 <AmiBlitz3.ab3@10162>    BSR.w uselib
0002771A <AmiBlitz3.ab3@10163>   MOVE.w #$FFFA,D1
0002771E <AmiBlitz3.ab3@10164> BRA.w uselib
00027724 <AmiBlitz3.ab3@10172>   MOVEA.l varbase,A2                                       ;add alloc mem for types/strings global
0002772A <AmiBlitz3.ab3@10175>   MOVE.l data1,D3
0002772C <AmiBlitz3.ab3@10176>   MOVEQ.l #$00,D4
00027732 <AmiBlitz3.ab3@10177>   TST.b iserror
00027736 <AmiBlitz3.ab3@10178>   BEQ JL_0_7492
00027738 <AmiBlitz3.ab3@10179>   RTS
0002773C <AmiBlitz3.ab3@10181>    CMPA.w #$0,A2
00027740 <AmiBlitz3.ab3@10182>    BEQ.w JL_0_74CA
00027744 <AmiBlitz3.ab3@10183>   TST.w $6(A2)
00027748 <AmiBlitz3.ab3@10184>    BNE.w JL_0_74C4
0002774C <AmiBlitz3.ab3@10185>   MOVEA.l $A(A2),A3
00027754 <AmiBlitz3.ab3@10186>   CMPI.l #$100,$4(A3)
00027758 <AmiBlitz3.ab3@10187>    BCS.w JL_0_74C4
0002775C <AmiBlitz3.ab3@10188>   MOVE.w $4(A2),D1
00027760 <AmiBlitz3.ab3@10189>    BSR.w pokedata1
00027764 <AmiBlitz3.ab3@10190>   MOVE.w $8(A3),D1
00027768 <AmiBlitz3.ab3@10191>    BSR.w pokedata1
0002776A <AmiBlitz3.ab3@10192>   ADDQ.w #1,D4
0002776C <AmiBlitz3.ab3@10195>   MOVEA.l (A2),A2
00027770 <AmiBlitz3.ab3@10196> BRA.w JL_0_7492
00027776 <AmiBlitz3.ab3@10200>   MOVEA.l sharebase,A2
0002777A <AmiBlitz3.ab3@10203>   CMPA.w #$0,A2
0002777E <AmiBlitz3.ab3@10204>    BEQ.w JL_0_74CAb
00027782 <AmiBlitz3.ab3@10206>   TST.w $6(A2)
00027786 <AmiBlitz3.ab3@10207>    BNE.w JL_0_74C4b
0002778A <AmiBlitz3.ab3@10208>   MOVEA.l $A(A2),A3
00027792 <AmiBlitz3.ab3@10209>   CMPI.l #$100,$4(A3)
00027796 <AmiBlitz3.ab3@10210>    BCS.w JL_0_74C4b
0002779A <AmiBlitz3.ab3@10211>   MOVE.w $4(A2),D1
0002779E <AmiBlitz3.ab3@10212>    BSR.w pokedata1
000277A2 <AmiBlitz3.ab3@10213>   MOVE.w $8(A3),D1
000277A6 <AmiBlitz3.ab3@10214>    BSR.w pokedata1
000277A8 <AmiBlitz3.ab3@10215>   ADDQ.w #1,D4
000277AA <AmiBlitz3.ab3@10218>   MOVEA.l (A2),A2
000277AE <AmiBlitz3.ab3@10219> BRA.w JL_0_7492b
000277B0 <AmiBlitz3.ab3@10222>    TST.w D4
000277B4 <AmiBlitz3.ab3@10223>    BEQ.w JL_0_74E0
000277B8 <AmiBlitz3.ab3@10224>   MOVE.w #$FF37,D1
000277BC <AmiBlitz3.ab3@10225>    BSR.w uselib                                            ;use statics lib
000277C0 <AmiBlitz3.ab3@10226>   MOVE.w #$FFFA,D1                                         ;use memlib
000277C4 <AmiBlitz3.ab3@10227> BRA.w uselib
000277C6 <AmiBlitz3.ab3@10230> RTS
000277CC <AmiBlitz3.ab3@10234>   MOVE.w numtoa2,D1
000277D0 <AmiBlitz3.ab3@10235>    BSR.w writeword
000277D4 <AmiBlitz3.ab3@10236>    BSR.w addoff
000277D6 <AmiBlitz3.ab3@10237>   MOVE.l D3,D1
000277DA <AmiBlitz3.ab3@10238>    BSR.w writelong
000277DC <AmiBlitz3.ab3@10239>   SUBQ.w #1,D4
000277E2 <AmiBlitz3.ab3@10240>   MOVE.w D4,endarray+2
000277E8 <AmiBlitz3.ab3@10241>   MOVE.l endarray,D1
000277EC <AmiBlitz3.ab3@10242> BRA.w writelong
000277EE <AmiBlitz3.ab3@10246>   MOVE.l D3,-(A7)
000277F4 <AmiBlitz3.ab3@10249>   MOVEA.l _dosbase,A6
000277F8 <AmiBlitz3.ab3@10250>   JSR _Write(a6)
000277FA <AmiBlitz3.ab3@10252>   CMP.l (A7)+,D0
000277FE <AmiBlitz3.ab3@10253>    BNE.w JL_0_7516
00027800 <AmiBlitz3.ab3@10254> RTS
00027802 <AmiBlitz3.ab3@10257>   MOVE.l D7,D1
00027808 <AmiBlitz3.ab3@10259>   MOVEA.l _dosbase,A6
0002780C <AmiBlitz3.ab3@10260>   JSR _Close(a6)
00027812 <AmiBlitz3.ab3@10263> JMP error_create_exe
00027818 <AmiBlitz3.ab3@10272> 
0002781E <AmiBlitz3.ab3@10273>   MOVE.l A7,errstack
00027822 <AmiBlitz3.ab3@10274>   MOVEM.l d2-d7/a2-a6,-(a7)
0002782C <AmiBlitz3.ab3@10275>   MOVE.l #AL_0_7790,errcont
00027832 <AmiBlitz3.ab3@10276>    JSR call_setpointerbusy
0002783A <AmiBlitz3.ab3@10277>   MOVE.w #$FFFF,anyerrs
00027844 <AmiBlitz3.ab3@10278>   CMP.l #-1,chipstart
00027848 <AmiBlitz3.ab3@10279>   BEQ 'l01
0002784E <AmiBlitz3.ab3@10280>   MOVE.l chipend,d1
00027850 <AmiBlitz3.ab3@10281>   ADDQ.l #3,d1
00027856 <AmiBlitz3.ab3@10282>   AND.l #$fffffffc,d1                                      ;bug
0002785C <AmiBlitz3.ab3@10283>   MOVE.l d1,chipend
0002785E <AmiBlitz3.ab3@10284>   MOVE.l d1,a1
00027864 <AmiBlitz3.ab3@10285>   MOVE.l chipstart,a0
00027866 <AmiBlitz3.ab3@10286>   MOVE.l a1,d1
00027868 <AmiBlitz3.ab3@10287>   SUB.l a0,d1
0002786E <AmiBlitz3.ab3@10288>   MOVE.l d1,chipsize
00027878 <AmiBlitz3.ab3@10291>   CMP.l #-1,bssstart
0002787C <AmiBlitz3.ab3@10292>   BEQ 'l11
00027882 <AmiBlitz3.ab3@10293>   MOVE.l realbssend,a1
00027888 <AmiBlitz3.ab3@10294>   MOVE.l bssstart,a0
0002788A <AmiBlitz3.ab3@10295>   MOVE.l a1,d1
0002788C <AmiBlitz3.ab3@10296>   SUB.l a0,d1
00027892 <AmiBlitz3.ab3@10297>   MOVE.l d1,bsssize
00027896 <AmiBlitz3.ab3@10298>   BEQ 'l11
00027898 <AmiBlitz3.ab3@10301>   TST.b (a0)+
0002789C <AmiBlitz3.ab3@10302>   BEQ 'l31
000278A2 <AmiBlitz3.ab3@10303>   TST.b debugmode
000278A6 <AmiBlitz3.ab3@10304>   BEQ 'l1
000278AC <AmiBlitz3.ab3@10305>   TST.b exdebug
000278B0 <AmiBlitz3.ab3@10306>   BNE 'l31
000278B6 <AmiBlitz3.ab3@10309>   MOVE.l #nodata,-(a7)
000278BC <AmiBlitz3.ab3@10310> JMP handle_compileerror
000278BE <AmiBlitz3.ab3@10313>   CMP.l a0,a1
000278C2 <AmiBlitz3.ab3@10314>   BGT 'l32
000278C8 <AmiBlitz3.ab3@10315>   MOVE.l bssend,d1
000278CA <AmiBlitz3.ab3@10316>   ADDQ.l #3,d1
000278D0 <AmiBlitz3.ab3@10317>   AND.l #$fffffffc,d1                                      ;bug
000278D6 <AmiBlitz3.ab3@10318>   MOVE.l d1,bssend
000278D8 <AmiBlitz3.ab3@10319>   MOVE.l d1,a1
000278DE <AmiBlitz3.ab3@10320>   MOVE.l bssstart,a0
000278E0 <AmiBlitz3.ab3@10321>   MOVE.l a1,d1
000278E2 <AmiBlitz3.ab3@10322>   SUB.l a0,d1
000278E8 <AmiBlitz3.ab3@10323>   MOVE.l d1,bsssize
000278EC <AmiBlitz3.ab3@10326>   MOVEM.l d5-d7/d3,-(a7)
000278F2 <AmiBlitz3.ab3@10327>   MOVE.w dontwrite,D1
000278F6 <AmiBlitz3.ab3@10328>   BNE.w JL_0_757C
000278FC <AmiBlitz3.ab3@10329>   MOVE.l chipsize,d5
00027902 <AmiBlitz3.ab3@10330>   MOVE.l bsssize,d3
00027908 <AmiBlitz3.ab3@10331>   MOVE.l chipstart,d7
0002790E <AmiBlitz3.ab3@10332>   MOVE.l bssstart,d6
00027914 <AmiBlitz3.ab3@10333>   MOVEA.l hunkoffsetbase,A2
0002791A <AmiBlitz3.ab3@10334>   MOVEA.l destbufferstart,A1
0002791C <AmiBlitz3.ab3@10335>   MOVE.l A1,D2
00027922 <AmiBlitz3.ab3@10336>   ADD.l noinits,D2
00027928 <AmiBlitz3.ab3@10337>   CLR.l hunkoffsetnum
0002792C <AmiBlitz3.ab3@10340>   CMPA.w #$0,A2
00027930 <AmiBlitz3.ab3@10341>    BEQ.w JL_0_757C
00027934 <AmiBlitz3.ab3@10342>   MOVE.l $4(A2),D0
00027938 <AmiBlitz3.ab3@10343>    LEA $0(a1,d0.l),a0
0002793A <AmiBlitz3.ab3@10344>    MOVE.l (a0),d1
0002793C <AmiBlitz3.ab3@10345>   TST.l d1
00027940 <AmiBlitz3.ab3@10346>    BMI.w 'lm1
00027948 <AmiBlitz3.ab3@10347>   MOVE.b #0,newhunk
00027952 <AmiBlitz3.ab3@10348>   CMP.l #-1,chipstart
00027956 <AmiBlitz3.ab3@10349>   BEQ 'l10
0002795C <AmiBlitz3.ab3@10350>   CMP.l chipstart,d1
00027960 <AmiBlitz3.ab3@10351>   BLT 'l10
00027968 <AmiBlitz3.ab3@10352>   MOVE.b #1,newhunk
0002796E <AmiBlitz3.ab3@10353>   CMP.l chipend,d1
00027972 <AmiBlitz3.ab3@10354>   BGE 'l110
00027974 <AmiBlitz3.ab3@10355>   SUB.l d7,(a0)
0002797C <AmiBlitz3.ab3@10356>   ADD.l #$80000000,4(a2)
00027980 <AmiBlitz3.ab3@10357> BRA JL_0_7576
00027984 <AmiBlitz3.ab3@10360>   SUB.l d5,0(a0)
0002798E <AmiBlitz3.ab3@10363>   CMP.l #-1,bssstart
00027992 <AmiBlitz3.ab3@10364>     BEQ 'l11
00027998 <AmiBlitz3.ab3@10365>   CMP.l bssstart,d1
0002799C <AmiBlitz3.ab3@10366>   BLT 'l11
000279A2 <AmiBlitz3.ab3@10367>   CMP.l bssend,d1
000279A6 <AmiBlitz3.ab3@10368>   BGE 'l111
000279AC <AmiBlitz3.ab3@10369>   TST.b newhunk
000279B0 <AmiBlitz3.ab3@10370>   BEQ 'ln1
000279B2 <AmiBlitz3.ab3@10371>   ADD.l d5,(a0)
000279B4 <AmiBlitz3.ab3@10374>   SUB.l d6,(a0)
000279BC <AmiBlitz3.ab3@10375>   ADD.l #$40000000,4(a2)
000279C0 <AmiBlitz3.ab3@10376> BRA JL_0_7576
000279C4 <AmiBlitz3.ab3@10379>   SUB.l d3,0(a0)
000279C6 <AmiBlitz3.ab3@10382>   SUB.l D2,(A0)
000279CC <AmiBlitz3.ab3@10385>   ADDQ.l #1,hunkoffsetnum
000279CE <AmiBlitz3.ab3@10388>    MOVEA.l (A2),A2
000279D2 <AmiBlitz3.ab3@10389> BRA.w JL_0_755E
000279D6 <AmiBlitz3.ab3@10393>   MOVEM.l (a7)+,d5-d7/d3
000279DC <AmiBlitz3.ab3@10394>   MOVE.l ptr_newexefilename,D1
000279E2 <AmiBlitz3.ab3@10395>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
000279E8 <AmiBlitz3.ab3@10396>   MOVEA.l _dosbase,A6
000279EC <AmiBlitz3.ab3@10397>    JSR _Open(A6)
000279EE <AmiBlitz3.ab3@10398>   MOVE.l D0,D7
000279F2 <AmiBlitz3.ab3@10399>    BEQ.w execerr
000279F8 <AmiBlitz3.ab3@10400>   MOVE.l objlen,D0
000279FE <AmiBlitz3.ab3@10401>   SUB.l #moremem,d0
00027A04 <AmiBlitz3.ab3@10402>   SUB.l noinits,D0
00027A0E <AmiBlitz3.ab3@10403>   CMP.l #-1,bssstart
00027A12 <AmiBlitz3.ab3@10404>   BEQ 'l60
00027A18 <AmiBlitz3.ab3@10405>   SUB.l bsssize,d0
00027A1E <AmiBlitz3.ab3@10406>   SUB.l chipsize,d0
00027A22 <AmiBlitz3.ab3@10407> BRA.s 'l61
00027A2C <AmiBlitz3.ab3@10410>   CMP.l #-1,chipstart
00027A30 <AmiBlitz3.ab3@10411>   BEQ 'l61
00027A36 <AmiBlitz3.ab3@10412>   SUB.l bsssize,d0
00027A3C <AmiBlitz3.ab3@10413>   SUB.l chipsize,d0
00027A3E <AmiBlitz3.ab3@10416>   ADDQ.l #3,D0
00027A40 <AmiBlitz3.ab3@10417>   LSR.l #2,D0
00027A46 <AmiBlitz3.ab3@10418>   MOVE.l D0,tstsize1
00027A4C <AmiBlitz3.ab3@10419>   MOVE.l D0,tstsize2
00027A4E <AmiBlitz3.ab3@10420>   MOVE.l D7,D1
00027A54 <AmiBlitz3.ab3@10421>   MOVE.l #tsthead,D2                                      ;hunkbegin
00027A56 <AmiBlitz3.ab3@10422>   MOVEQ.l #$20,D3
00027A60 <AmiBlitz3.ab3@10423>   CMP.l #-1,bssstart
00027A64 <AmiBlitz3.ab3@10424>   BEQ 'lb1
00027A6E <AmiBlitz3.ab3@10425>   CMP.l #-1,chipstart
00027A72 <AmiBlitz3.ab3@10426>   BEQ 'lb1
00027A7C <AmiBlitz3.ab3@10427>   MOVE.l #1,bssnum
00027A86 <AmiBlitz3.ab3@10428>   MOVE.l #2,chipnum
00027A88 <AmiBlitz3.ab3@10429>   MOVEQ.l #$28,D3
00027A8E <AmiBlitz3.ab3@10430>   MOVE.l bsssize,d2
00027A90 <AmiBlitz3.ab3@10431>   ADDQ.l #3,d2
00027A92 <AmiBlitz3.ab3@10432>   ASR.l #2,d2
00027A98 <AmiBlitz3.ab3@10433>   MOVE.l d2,hunkend+8
00027A9E <AmiBlitz3.ab3@10434>   MOVE.l d2,bsssize3
00027AA4 <AmiBlitz3.ab3@10435>   MOVE.l chipsize,d2
00027AA6 <AmiBlitz3.ab3@10436>   ADDQ.l #3,d2
00027AA8 <AmiBlitz3.ab3@10437>   ASR.l #2,d2
00027AAE <AmiBlitz3.ab3@10438>   MOVE.l d2,chipsize2
00027AB8 <AmiBlitz3.ab3@10439>   ADD.l #$40000000,chipsize2
00027ABE <AmiBlitz3.ab3@10440>   MOVE.l d2,hunkend2+8
00027AC4 <AmiBlitz3.ab3@10441>   MOVE.l D0,tstsize1c
00027ACA <AmiBlitz3.ab3@10442>   MOVE.l D0,tstsize2c
00027AD0 <AmiBlitz3.ab3@10443>   MOVE.l #hunkbegin2,d2
00027AD4 <AmiBlitz3.ab3@10444> BRA 'l100
00027ADE <AmiBlitz3.ab3@10447>   CMP.l #-1,bssstart
00027AE2 <AmiBlitz3.ab3@10448>   BEQ 'l10
00027AEC <AmiBlitz3.ab3@10449>   MOVE.l #1,bssnum
00027AEE <AmiBlitz3.ab3@10450>   MOVEQ.l #$24,D3
00027AF4 <AmiBlitz3.ab3@10451>   MOVE.l bsssize,d2
00027AF6 <AmiBlitz3.ab3@10452>   ADDQ.l #3,d2
00027AF8 <AmiBlitz3.ab3@10453>   ASR.l #2,d2
00027AFE <AmiBlitz3.ab3@10454>   MOVE.l d2,hunkend+8
00027B04 <AmiBlitz3.ab3@10455>   MOVE.l d2,bsssize2
00027B0A <AmiBlitz3.ab3@10456>   MOVE.l D0,tstsize1b
00027B10 <AmiBlitz3.ab3@10457>   MOVE.l D0,tstsize2b
00027B16 <AmiBlitz3.ab3@10458>   MOVE.l #hunkbegin,d2
00027B20 <AmiBlitz3.ab3@10461>   CMP.l #-1,chipstart
00027B24 <AmiBlitz3.ab3@10462>   BEQ 'l100
00027B2E <AmiBlitz3.ab3@10463>   MOVE.l #1,chipnum
00027B30 <AmiBlitz3.ab3@10464>   MOVEQ.l #$24,D3
00027B36 <AmiBlitz3.ab3@10465>   MOVE.l chipsize,d2
00027B38 <AmiBlitz3.ab3@10466>   ADDQ.l #3,d2
00027B3A <AmiBlitz3.ab3@10467>   ASR.l #2,d2
00027B40 <AmiBlitz3.ab3@10468>   MOVE.l d2,hunkend2+8
00027B46 <AmiBlitz3.ab3@10469>   MOVE.l d2,bsssize2
00027B50 <AmiBlitz3.ab3@10470>   ADD.l #$40000000,bsssize2
00027B56 <AmiBlitz3.ab3@10471>   MOVE.l D0,tstsize1b
00027B5C <AmiBlitz3.ab3@10472>   MOVE.l D0,tstsize2b
00027B62 <AmiBlitz3.ab3@10473>   MOVE.l #hunkbegin,d2
00027B66 <AmiBlitz3.ab3@10476>    BSR.w mywrite
00027B6C <AmiBlitz3.ab3@10477>   MOVE.l destbufferstart,D2
00027B72 <AmiBlitz3.ab3@10478>   ADD.l noinits,D2
00027B78 <AmiBlitz3.ab3@10479>   MOVE.l objlen,D3
00027B7E <AmiBlitz3.ab3@10480>   SUB.l #moremem,d3
00027B84 <AmiBlitz3.ab3@10481>   SUB.l noinits,D3
00027B8E <AmiBlitz3.ab3@10482>   CMP.l #-1,bssstart
00027B92 <AmiBlitz3.ab3@10483>   BNE 'l40
00027B9C <AmiBlitz3.ab3@10484>   CMP.l #-1,chipstart
00027BA0 <AmiBlitz3.ab3@10485>   BNE 'l40
00027BA4 <AmiBlitz3.ab3@10486> BRA 'l41
00027BAA <AmiBlitz3.ab3@10489>   MOVE.l codeend,d1
00027BAC <AmiBlitz3.ab3@10490>     SUB.l d2,d1
00027BAE <AmiBlitz3.ab3@10491>     MOVE.l d1,d3
00027BB4 <AmiBlitz3.ab3@10492>   SUB.l bsssize,d3
00027BBA <AmiBlitz3.ab3@10493>   SUB.l chipsize,d3
00027BBC <AmiBlitz3.ab3@10494>   MOVE.l D7,D1
00027BC0 <AmiBlitz3.ab3@10495>   BSR.w mywrite
00027BC6 <AmiBlitz3.ab3@10496>   MOVE.l objlen,D3
00027BCC <AmiBlitz3.ab3@10497>   SUB.l #moremem,d3
00027BD2 <AmiBlitz3.ab3@10498>   SUB.l noinits,D3
00027BD4 <AmiBlitz3.ab3@10499>   MOVE.l d3,d1
00027BDA <AmiBlitz3.ab3@10500>   MOVE.l destbufferstart,D2
00027BE0 <AmiBlitz3.ab3@10501>   ADD.l noinits,D2
00027BE2 <AmiBlitz3.ab3@10502>   ADD.l d2,d1
00027BE8 <AmiBlitz3.ab3@10503>   SUB.l codeend,d1
00027BEA <AmiBlitz3.ab3@10504>   MOVE.l d1,d3
00027BF0 <AmiBlitz3.ab3@10505>   MOVE.l codeend,d2
00027BF2 <AmiBlitz3.ab3@10508>   MOVE.l d2,d1
00027BF4 <AmiBlitz3.ab3@10509>   ADD.l d3,d1
00027BF6 <AmiBlitz3.ab3@10510>   ADDQ.l #3,D1
00027BFC <AmiBlitz3.ab3@10511>   ANDI.l #$FFFFFFFC,D1
00027BFE <AmiBlitz3.ab3@10512>   SUB.l d2,d1
00027C00 <AmiBlitz3.ab3@10513>   MOVE.l d1,d3
00027C02 <AmiBlitz3.ab3@10514>   MOVE.l D7,D1
00027C06 <AmiBlitz3.ab3@10515>    BSR.w mywrite
00027C10 <AmiBlitz3.ab3@10516>   MOVE.l hunkoffsetcounter,tstsize3
00027C14 <AmiBlitz3.ab3@10517>    BEQ.w JL_0_7646
00027C16 <AmiBlitz3.ab3@10518>   MOVE.l D7,D1
00027C1C <AmiBlitz3.ab3@10519>   MOVE.l #tstend,D2
00027C1E <AmiBlitz3.ab3@10520>   MOVEQ.l #$04,D3
00027C22 <AmiBlitz3.ab3@10521>    BSR.w mywrite
00027C28 <AmiBlitz3.ab3@10522>    MOVEA.l _execbase,A6
00027C2E <AmiBlitz3.ab3@10523>    MOVE.l hunkoffsetcounter,d0
00027C30 <AmiBlitz3.ab3@10524>    ASL.l #2,d0
00027C36 <AmiBlitz3.ab3@10525>    ADD.l #12,d0
00027C38 <AmiBlitz3.ab3@10526>    MOVEQ #0,d1
00027C3C <AmiBlitz3.ab3@10527>    JSR _AllocMem(a6)
00027C3E <AmiBlitz3.ab3@10528>    TST.l d0
00027C42 <AmiBlitz3.ab3@10529>    BEQ nomem
00027C48 <AmiBlitz3.ab3@10530>    MOVE.l noinits,D4
00027C4A <AmiBlitz3.ab3@10531>    MOVE.l d5,-(a7)
00027C4C <AmiBlitz3.ab3@10532>    MOVE.l d0,d5
00027C4E <AmiBlitz3.ab3@10533>    MOVE.l d0,a1
00027C54 <AmiBlitz3.ab3@10534>    MOVEA.l hunkoffsetbase,A2
00027C5C <AmiBlitz3.ab3@10535>    MOVE.b #0,newhunk
00027C60 <AmiBlitz3.ab3@10538>   CMPA.w #$0,A2
00027C64 <AmiBlitz3.ab3@10539>    BEQ.w savehunk
00027C6A <AmiBlitz3.ab3@10540>   MOVE.l destbufferstart,D2
00027C70 <AmiBlitz3.ab3@10541>   ADD.l noinits,D2
00027C74 <AmiBlitz3.ab3@10542>   MOVE.l  $4(A2),d1
00027C78 <AmiBlitz3.ab3@10543>   BTST #31,d1
00027C7C <AmiBlitz3.ab3@10544>   BEQ 'lh1
00027C84 <AmiBlitz3.ab3@10545>   MOVE.b #1,newhunk
00027C88 <AmiBlitz3.ab3@10546> BRA 'lh3
00027C8C <AmiBlitz3.ab3@10549>   BTST #30,d1
00027C90 <AmiBlitz3.ab3@10550>   BEQ 'lh2
00027C98 <AmiBlitz3.ab3@10551>   MOVE.b #1,newhunk
00027C9C <AmiBlitz3.ab3@10552> BRA 'lh3
00027C9E <AmiBlitz3.ab3@10555>   ADD.l d1,d2
00027CA4 <AmiBlitz3.ab3@10556>   CMP.l chipend,d2
00027CA8 <AmiBlitz3.ab3@10557>   BLT 'l100
00027CAE <AmiBlitz3.ab3@10558>   SUB.l chipsize,d1
00027CB4 <AmiBlitz3.ab3@10561>   CMP.l bssend,d2
00027CB8 <AmiBlitz3.ab3@10562>   BLT 'l101
00027CBE <AmiBlitz3.ab3@10563>   SUB.l bsssize,d1
00027CC0 <AmiBlitz3.ab3@10566>   MOVE.l d1,(a1)
00027CC2 <AmiBlitz3.ab3@10567>   SUB.l D4,(A1)+
00027CC4 <AmiBlitz3.ab3@10570>   MOVEA.l (A2),A2
00027CC8 <AmiBlitz3.ab3@10571> BRA.w menu_createresidentfile__oloopb
00027CCA <AmiBlitz3.ab3@10575>   MOVE.l D7,D1
00027CD0 <AmiBlitz3.ab3@10576>   MOVEA.l _dosbase,A6
00027CDA <AmiBlitz3.ab3@10577>   MOVE.l hunkoffsetnum,tstsize3
00027CDE <AmiBlitz3.ab3@10578>   BEQ 'ln1
00027CE4 <AmiBlitz3.ab3@10579>   MOVE.l #tstend+4,d2
00027CE6 <AmiBlitz3.ab3@10580>     MOVEQ #8,d3
00027CEA <AmiBlitz3.ab3@10581>    JSR _Write(A6)
00027CEC <AmiBlitz3.ab3@10582>   MOVE.l d7,d1
00027CF2 <AmiBlitz3.ab3@10583>   MOVE.l hunkoffsetnum,d3
00027CF4 <AmiBlitz3.ab3@10584>   ASL.l #2,d3
00027CF6 <AmiBlitz3.ab3@10585>   MOVE.l d5,D2
00027CFA <AmiBlitz3.ab3@10586>   JSR _Write(a6)
00027D00 <AmiBlitz3.ab3@10589>   TST.b newhunk
00027D04 <AmiBlitz3.ab3@10590>   BEQ 'l10
00027D0A <AmiBlitz3.ab3@10591>   MOVEA.l hunkoffsetbase,A2
00027D0C <AmiBlitz3.ab3@10592>   MOVE.l d5,a0
00027D0E <AmiBlitz3.ab3@10593>   ADDQ #8,a0
00027D16 <AmiBlitz3.ab3@10594>   MOVE.l bssnum,-4(a0)
00027D18 <AmiBlitz3.ab3@10595>   MOVEQ #0,d6
00027D1C <AmiBlitz3.ab3@10598>   CMPA.w #$0,A2
00027D20 <AmiBlitz3.ab3@10599>    BEQ.w 'lh3
00027D26 <AmiBlitz3.ab3@10600>   MOVE.l destbufferstart,D2
00027D2C <AmiBlitz3.ab3@10601>   ADD.l noinits,D2
00027D30 <AmiBlitz3.ab3@10602>   MOVE.l  $4(A2),d1
00027D34 <AmiBlitz3.ab3@10603>   BTST #30,d1
00027D38 <AmiBlitz3.ab3@10604>   BEQ 'lh1
00027D3C <AmiBlitz3.ab3@10605>   BCLR #30,d1
00027D3E <AmiBlitz3.ab3@10606>   MOVE.l d1,(a0)
00027D40 <AmiBlitz3.ab3@10607>   SUB.l D4,(A0)+
00027D42 <AmiBlitz3.ab3@10608>   ADDQ.l #1,d6
00027D44 <AmiBlitz3.ab3@10611>   MOVE.l (a2),a2
00027D48 <AmiBlitz3.ab3@10612> BRA 'lh2
00027D4A <AmiBlitz3.ab3@10615>   TST.l d6
00027D4E <AmiBlitz3.ab3@10616>     BEQ 'lh10
00027D50 <AmiBlitz3.ab3@10617>     MOVE.l d5,a0
00027D52 <AmiBlitz3.ab3@10618>     MOVE.l d6,(a0)
00027D54 <AmiBlitz3.ab3@10619>     MOVE.l d7,d1
00027D56 <AmiBlitz3.ab3@10620>     MOVE.l d5,d2
00027D58 <AmiBlitz3.ab3@10621>     MOVE.l d6,d3
00027D5A <AmiBlitz3.ab3@10622>     ASL.l #2,d3
00027D5C <AmiBlitz3.ab3@10623>     ADDQ.l #8,d3
00027D60 <AmiBlitz3.ab3@10624>     BSR.w mywrite
00027D66 <AmiBlitz3.ab3@10627>   MOVEA.l hunkoffsetbase,A2
00027D68 <AmiBlitz3.ab3@10628>   MOVE.l d5,a0
00027D6A <AmiBlitz3.ab3@10629>   ADDQ #8,a0
00027D72 <AmiBlitz3.ab3@10630>   MOVE.l chipnum,-4(a0)
00027D74 <AmiBlitz3.ab3@10631>   MOVEQ #0,d6
00027D78 <AmiBlitz3.ab3@10634>   CMPA.w #$0,A2
00027D7C <AmiBlitz3.ab3@10635>    BEQ.w 'lh30
00027D82 <AmiBlitz3.ab3@10636>   MOVE.l destbufferstart,D2
00027D88 <AmiBlitz3.ab3@10637>   ADD.l noinits,D2
00027D8C <AmiBlitz3.ab3@10638>   MOVE.l  $4(A2),d1
00027D90 <AmiBlitz3.ab3@10639>   BTST #31,d1
00027D94 <AmiBlitz3.ab3@10640>   BEQ 'lh11
00027D98 <AmiBlitz3.ab3@10641>   BCLR #31,d1
00027D9A <AmiBlitz3.ab3@10642>   MOVE.l d1,(a0)
00027D9C <AmiBlitz3.ab3@10643>   SUB.l D4,(A0)+
00027D9E <AmiBlitz3.ab3@10644>   ADDQ.l #1,d6
00027DA0 <AmiBlitz3.ab3@10647>   MOVE.l (a2),a2
00027DA4 <AmiBlitz3.ab3@10648> BRA 'lh20
00027DA6 <AmiBlitz3.ab3@10651>   TST.l d6
00027DAA <AmiBlitz3.ab3@10652>     BEQ 'l10
00027DAC <AmiBlitz3.ab3@10653>     MOVE.l d5,a0
00027DAE <AmiBlitz3.ab3@10654>     MOVE.l d6,(a0)
00027DB0 <AmiBlitz3.ab3@10655>     MOVE.l d7,d1
00027DB2 <AmiBlitz3.ab3@10656>     MOVE.l d5,d2
00027DB4 <AmiBlitz3.ab3@10657>     MOVE.l d6,d3
00027DB6 <AmiBlitz3.ab3@10658>     ASL.l #2,d3
00027DB8 <AmiBlitz3.ab3@10659>     ADDQ.l #8,d3
00027DBC <AmiBlitz3.ab3@10660>     BSR.w mywrite
00027DC2 <AmiBlitz3.ab3@10664>    MOVEA.l _execbase,A6
00027DC8 <AmiBlitz3.ab3@10665>    MOVE.l hunkoffsetcounter,d0
00027DCA <AmiBlitz3.ab3@10666>    ASL.l #2,d0
00027DD0 <AmiBlitz3.ab3@10667>    ADD.l #12,d0
00027DD2 <AmiBlitz3.ab3@10668>    MOVE.l d5,a1
00027DD6 <AmiBlitz3.ab3@10669>    JSR _FreeMem(a6)
00027DDC <AmiBlitz3.ab3@10670>    MOVEA.l _dosbase,A6
00027DDE <AmiBlitz3.ab3@10671>    MOVE.l (a7)+,d5
00027DE2 <AmiBlitz3.ab3@10672> BRA JL_0_7632
00027DE8 <AmiBlitz3.ab3@10676>   MOVEA.l hunkoffsetbase,A2
00027DEE <AmiBlitz3.ab3@10677>   MOVE.l noinits,D4
00027DF2 <AmiBlitz3.ab3@10680>   CMPA.w #$0,A2                                            ;write hunkoffsets
00027DF6 <AmiBlitz3.ab3@10681>   BEQ.w JL_0_7632
00027DFA <AmiBlitz3.ab3@10682>   LEA $4(A2),A1
00027DFC <AmiBlitz3.ab3@10683>   SUB.l D4,(A1)
00027DFE <AmiBlitz3.ab3@10684>   MOVE.l D7,D1
00027E00 <AmiBlitz3.ab3@10685>   MOVE.l A1,D2
00027E02 <AmiBlitz3.ab3@10686>   MOVEQ.l #$04,D3
00027E06 <AmiBlitz3.ab3@10687>   BSR.w mywrite
00027E0A <AmiBlitz3.ab3@10688>   ADD.l D4,$4(A2)
00027E0C <AmiBlitz3.ab3@10689>   MOVEA.l (A2),A2
00027E10 <AmiBlitz3.ab3@10690> BRA.w JL_0_7610
00027E16 <AmiBlitz3.ab3@10693>   CLR.l tstsize3
00027E18 <AmiBlitz3.ab3@10694>   MOVE.l D7,D1
00027E1E <AmiBlitz3.ab3@10695>   MOVE.l #tstsize3,D2
00027E20 <AmiBlitz3.ab3@10696>   MOVEQ.l #$04,D3
00027E24 <AmiBlitz3.ab3@10697>    BSR.w mywrite
00027E2C <AmiBlitz3.ab3@10700>   BTST #$7,link_debuginfo
00027E30 <AmiBlitz3.ab3@10701>    BEQ.w JL_0_7706
00027E36 <AmiBlitz3.ab3@10702>   MOVE.l #sysdebug,D2                                      ;debughunks
00027E38 <AmiBlitz3.ab3@10703>   MOVEQ.l #$04,D3
00027E3A <AmiBlitz3.ab3@10704>   MOVE.l D7,D1
00027E3E <AmiBlitz3.ab3@10705>    BSR.w mywrite
00027E44 <AmiBlitz3.ab3@10706>   MOVEA.l labelbase,A2
00027E48 <AmiBlitz3.ab3@10709>   CMPA.w #$0,A2
00027E4C <AmiBlitz3.ab3@10710>    BEQ.w JL_0_76F8
00027E52 <AmiBlitz3.ab3@10711>   BTST #$0,$7(A2)
00027E56 <AmiBlitz3.ab3@10712>    BEQ.w JL_0_7682
00027E5E <AmiBlitz3.ab3@10713>   CMPI.l #$1,$4(A2)
00027E62 <AmiBlitz3.ab3@10715>   BRA.w JL_0_76F2                                            ;only addr labels
00027E64 <AmiBlitz3.ab3@10717>   MOVEQ.l #$00,D4
00027E68 <AmiBlitz3.ab3@10718>   MOVE.b $12(A2),D4
00027E6C <AmiBlitz3.ab3@10719>   SUBI.w #$13,D4
00027E6E <AmiBlitz3.ab3@10720>   ADDQ.w #2,D4
00027E72 <AmiBlitz3.ab3@10721>   ANDI.w #$FFFC,D4
00027E74 <AmiBlitz3.ab3@10722>   MOVE.l D4,D5
00027E76 <AmiBlitz3.ab3@10723>   LSR.w #2,D5
00027E7C <AmiBlitz3.ab3@10724>   MOVE.l D5,temp1
00027E7E <AmiBlitz3.ab3@10725>   LSL.w #2,D5
00027E84 <AmiBlitz3.ab3@10726>   MOVE.l #temp1,a1
00027E8A <AmiBlitz3.ab3@10728>   LEA debugstore,a0
00027E8C <AmiBlitz3.ab3@10729>   MOVE.l (a1),(a0)+
00027E8E <AmiBlitz3.ab3@10730>   MOVEQ.l #$04,D3
00027E92 <AmiBlitz3.ab3@10733>   LEA $13(A2),A1
00027E94 <AmiBlitz3.ab3@10734>   MOVE.l d4,d1
00027E96 <AmiBlitz3.ab3@10735>   SUBQ.l #1,d1
00027E98 <AmiBlitz3.ab3@10738>     MOVE.b (a1)+,d0
00027E9C <AmiBlitz3.ab3@10739>     BEQ 'l21
00027EA0 <AmiBlitz3.ab3@10740>     CMP.b #"'",d0                                            ; ' does reassembler/assembler not like, so replace
00027EA4 <AmiBlitz3.ab3@10741>     BNE 'ok
00027EA8 <AmiBlitz3.ab3@10742>     MOVE.b #"_",d0
00027EAA <AmiBlitz3.ab3@10743> 'ok    MOVE.b d0,(a0)+                                      ; copy labeltext to debuginfo
00027EAE <AmiBlitz3.ab3@10744>   DBF d1,'l10
00027EB2 <AmiBlitz3.ab3@10746> BRA 'l22
00027EB4 <AmiBlitz3.ab3@10749>       CLR.b (a0)+
00027EB8 <AmiBlitz3.ab3@10750>   DBF d1,'l21
00027EBA <AmiBlitz3.ab3@10753>   ADD.l d4,d3
00027EBC <AmiBlitz3.ab3@10758>   SUB.l D4,D5
00027EC0 <AmiBlitz3.ab3@10759>    BEQ.w JL_0_76CE
00027EC6 <AmiBlitz3.ab3@10760>   MOVE.l #zero,a1
00027EC8 <AmiBlitz3.ab3@10762>   MOVE.l (a1),(a0)+
00027ECA <AmiBlitz3.ab3@10764>   ADD.l d5,d3
00027ECE <AmiBlitz3.ab3@10769>   MOVE.l $8(A2),D2
00027ED4 <AmiBlitz3.ab3@10770>   SUB.l destbufferstart,D2
00027EDA <AmiBlitz3.ab3@10771>   SUB.l noinits,D2
00027EE0 <AmiBlitz3.ab3@10772>   MOVE.l D2,temp1
00027EE6 <AmiBlitz3.ab3@10773>   MOVE.l #temp1,a1
00027EE8 <AmiBlitz3.ab3@10775>   MOVE.l (a1),(a0)+
00027EEE <AmiBlitz3.ab3@10776>   ADD.l #4,d3
00027EF4 <AmiBlitz3.ab3@10777>   LEA debugstore,a0
00027EF6 <AmiBlitz3.ab3@10778>   MOVE.l a0,d2
00027EF8 <AmiBlitz3.ab3@10780>   MOVE.l D7,D1
00027EFC <AmiBlitz3.ab3@10781>   BSR.w mywrite
00027EFE <AmiBlitz3.ab3@10784>   MOVEA.l (A2),A2
00027F02 <AmiBlitz3.ab3@10785> BRA.w JL_0_7664
00027F08 <AmiBlitz3.ab3@10789>   MOVE.l #zero,D2
00027F0A <AmiBlitz3.ab3@10790>   MOVEQ.l #$04,D3
00027F0C <AmiBlitz3.ab3@10791>   MOVE.l D7,D1
00027F10 <AmiBlitz3.ab3@10792>   BSR.w mywrite
00027F12 <AmiBlitz3.ab3@10795>   MOVE.l D7,D1
00027F18 <AmiBlitz3.ab3@10796>   MOVE.l #tstdone,D2                                      ;hunkend
00027F1A <AmiBlitz3.ab3@10797>   MOVEQ.l #$04,D3
00027F24 <AmiBlitz3.ab3@10798>   CMPI.l #-1,bssstart
00027F28 <AmiBlitz3.ab3@10799>   BEQ 'l10
00027F2A <AmiBlitz3.ab3@10800>   MOVEQ #16,d3
00027F30 <AmiBlitz3.ab3@10801>   MOVE.l #hunkend,d2
00027F3A <AmiBlitz3.ab3@10802>   CMPI.l #-1,chipstart
00027F3E <AmiBlitz3.ab3@10803>   BEQ 'l10
00027F40 <AmiBlitz3.ab3@10804>   MOVE.l d7,d1
00027F42 <AmiBlitz3.ab3@10805>   MOVEQ #12,d3
00027F46 <AmiBlitz3.ab3@10806>   BSR.w mywrite
00027F50 <AmiBlitz3.ab3@10809>   CMPI.l #-1,chipstart
00027F54 <AmiBlitz3.ab3@10810>   BEQ 'l11
00027F56 <AmiBlitz3.ab3@10811>   MOVEQ #12,d3
00027F5C <AmiBlitz3.ab3@10812>   MOVE.l #hunkend2,d2
00027F5E <AmiBlitz3.ab3@10813>   MOVE.l d7,d1
00027F62 <AmiBlitz3.ab3@10814>   BSR.w mywrite
00027F64 <AmiBlitz3.ab3@10815>   MOVE.l d7,d1
00027F6A <AmiBlitz3.ab3@10816>   MOVE.l chipstart,d2
00027F70 <AmiBlitz3.ab3@10817>   MOVE.l chipsize,d3
00027F74 <AmiBlitz3.ab3@10818>   BSR.w mywrite
00027F76 <AmiBlitz3.ab3@10819>   MOVEQ #4,d3
00027F7C <AmiBlitz3.ab3@10820>   MOVE.l #hunkend,d2
00027F7E <AmiBlitz3.ab3@10821>   MOVE.l d7,d1
00027F82 <AmiBlitz3.ab3@10824>   BSR.w mywrite
00027F84 <AmiBlitz3.ab3@10825>   MOVE.l D7,D1
00027F8A <AmiBlitz3.ab3@10826>   MOVEA.l _dosbase,A6
00027F8E <AmiBlitz3.ab3@10827>   JSR _Close(A6)
00027F96 <AmiBlitz3.ab3@10832>   BTST #$7,create_iconfile
00027F9A <AmiBlitz3.ab3@10833>    BEQ.w skip_createicon
00027FA0 <AmiBlitz3.ab3@10835>   MOVEA.l ptr_newexefilename,A0
00027FA2 <AmiBlitz3.ab3@10838>     TST.b (A0)+
00027FA6 <AmiBlitz3.ab3@10839>   BNE.w JL_0_772C
00027FA8 <AmiBlitz3.ab3@10840>   SUBQ.w #1,A0
00027FAA <AmiBlitz3.ab3@10841>   MOVE.l A0,-(A7)
00027FB0 <AmiBlitz3.ab3@10842>   LEA str_infoextention2,A1
00027FB2 <AmiBlitz3.ab3@10845>     MOVE.b (A1)+,(A0)+
00027FB6 <AmiBlitz3.ab3@10846>   BNE.w JL_0_773A
00027FBC <AmiBlitz3.ab3@10848>   MOVE.l ptr_newexefilename,D1
00027FBE <AmiBlitz3.ab3@10849>   MOVEQ.l #-$02,D2
00027FC4 <AmiBlitz3.ab3@10850>   MOVEA.l _dosbase,A6
00027FC8 <AmiBlitz3.ab3@10851>   JSR _Lock(A6)
00027FCA <AmiBlitz3.ab3@10852>   MOVE.l D0,D1
00027FCE <AmiBlitz3.ab3@10853>   BEQ.w JL_0_775A                                          ;no icon exit so jump to create one  tomsmart1
00027FD2 <AmiBlitz3.ab3@10854>   JSR _UnLock(A6)                                          ;OH!! there is a Icon so we must Unlock it  tomsmart1
00027FD6 <AmiBlitz3.ab3@10855> BRA.w JL_0_7788                                            ;and skip writing a Icon  tomsmart1
00027FDC <AmiBlitz3.ab3@10858>   MOVE.l ptr_newexefilename,D1
00027FE2 <AmiBlitz3.ab3@10859>   MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
00027FE8 <AmiBlitz3.ab3@10860>   MOVEA.l _dosbase,A6
00027FEC <AmiBlitz3.ab3@10861>    JSR _Open(A6)
00027FEE <AmiBlitz3.ab3@10862>   MOVE.l D0,D7
00027FF2 <AmiBlitz3.ab3@10863>    BEQ.w JL_0_7788
00027FF8 <AmiBlitz3.ab3@10864>   MOVE.l #icongfx_data,D2                                  ; icon graphics
00027FFE <AmiBlitz3.ab3@10865>   MOVE.l #icongfx_data_end-icongfx_data,D3                 ; length of gfx-data
00028000 <AmiBlitz3.ab3@10866>   MOVE.l D7,D1
00028006 <AmiBlitz3.ab3@10867>   MOVEA.l _dosbase,A6
0002800A <AmiBlitz3.ab3@10868>   JSR _Write(A6)
0002800C <AmiBlitz3.ab3@10869>   MOVE.l D7,D1
00028010 <AmiBlitz3.ab3@10870>   JSR _Close(A6)
00028012 <AmiBlitz3.ab3@10873>   MOVEA.l (A7)+,A0
00028014 <AmiBlitz3.ab3@10874>   CLR.b (A0)
0002801A <AmiBlitz3.ab3@10879>   TST.b exdebug
0002801E <AmiBlitz3.ab3@10880>    BEQ JL_0_757Cb
00028024 <AmiBlitz3.ab3@10881>   MOVE.w dontwrite,D1
00028028 <AmiBlitz3.ab3@10882>   BNE.w JL_0_757Cb
0002802E <AmiBlitz3.ab3@10883>   MOVE.l chipsize,d5
00028034 <AmiBlitz3.ab3@10884>   MOVE.l bsssize,d3
0002803A <AmiBlitz3.ab3@10885>   MOVE.l chipstart,d7
00028040 <AmiBlitz3.ab3@10886>   MOVE.l bssstart,d6
00028046 <AmiBlitz3.ab3@10887>   MOVEA.l hunkoffsetbase,A2
0002804C <AmiBlitz3.ab3@10888>   MOVEA.l destbufferstart,A1
0002804E <AmiBlitz3.ab3@10889>   MOVE.l A1,D2
00028054 <AmiBlitz3.ab3@10890>   ADD.l noinits,D2
0002805A <AmiBlitz3.ab3@10891>   CLR.l hunkoffsetnum
0002805E <AmiBlitz3.ab3@10894>   CMPA.w #$0,A2
00028062 <AmiBlitz3.ab3@10895>    BEQ.w JL_0_757Cb
00028066 <AmiBlitz3.ab3@10896>   MOVE.l $4(A2),D0
0002806A <AmiBlitz3.ab3@10897>    LEA $0(a1,d0.l),a0
0002806C <AmiBlitz3.ab3@10898>    MOVE.l (a0),d1
0002806E <AmiBlitz3.ab3@10899>   TST.l d1
00028072 <AmiBlitz3.ab3@10900>    BMI.w 'lm1
0002807A <AmiBlitz3.ab3@10901>   MOVE.b #0,newhunk
00028084 <AmiBlitz3.ab3@10902>   CMP.l #-1,chipstart
00028088 <AmiBlitz3.ab3@10903>   BEQ 'l10
0002808E <AmiBlitz3.ab3@10904>   CMP.l chipstart,d1
00028092 <AmiBlitz3.ab3@10905>   BLT 'l10
0002809A <AmiBlitz3.ab3@10906>   MOVE.b #1,newhunk
000280A0 <AmiBlitz3.ab3@10907>   CMP.l chipend,d1
000280A4 <AmiBlitz3.ab3@10908>   BGE 'l110
000280A6 <AmiBlitz3.ab3@10909>   ADD.l d7,(a0)
000280AE <AmiBlitz3.ab3@10910>   ADD.l #$80000000,4(a2)
000280B2 <AmiBlitz3.ab3@10911> BRA JL_0_7576b
000280B6 <AmiBlitz3.ab3@10914>   ADD.l d5,0(a0)
000280C0 <AmiBlitz3.ab3@10917>   CMP.l #-1,bssstart
000280C4 <AmiBlitz3.ab3@10918>     BEQ 'l11
000280CA <AmiBlitz3.ab3@10919>   CMP.l bssstart,d1
000280CE <AmiBlitz3.ab3@10920>   BLT 'l11
000280D4 <AmiBlitz3.ab3@10921>   CMP.l bssend,d1
000280D8 <AmiBlitz3.ab3@10922>   BGE 'l111
000280DE <AmiBlitz3.ab3@10923>   TST.b newhunk
000280E2 <AmiBlitz3.ab3@10924>   BEQ 'ln1
000280E4 <AmiBlitz3.ab3@10925>   ADD.l d5,(a0)
000280E6 <AmiBlitz3.ab3@10928>   ADD.l d6,(a0)
000280EE <AmiBlitz3.ab3@10929>   ADD.l #$40000000,4(a2)
000280F2 <AmiBlitz3.ab3@10930> BRA JL_0_7576b
000280F6 <AmiBlitz3.ab3@10933>   ADD.l d3,0(a0)
000280F8 <AmiBlitz3.ab3@10936>   ADD.l D2,(A0)                                            ;only normal code offsets restore
000280FE <AmiBlitz3.ab3@10939>   ADDQ.l #1,hunkoffsetnum
00028100 <AmiBlitz3.ab3@10942>   MOVEA.l (A2),A2
00028104 <AmiBlitz3.ab3@10943> BRA.w JL_0_755Eb
0002810A <AmiBlitz3.ab3@10946>   JSR call_setpointernormal
0002810E <AmiBlitz3.ab3@10947>   MOVEM.l (a7)+,d2-d7/a2-a6
00028110 <AmiBlitz3.ab3@10949> RTS
00028112 <AmiBlitz3.ab3@10953>   MOVE.l D2,-(A7)
00028118 <AmiBlitz3.ab3@10954>   MOVE.l destpointer,D2
0002811E <AmiBlitz3.ab3@10955>   SUB.l destbufferstart,D2
00028122 <AmiBlitz3.ab3@10956>   BSR.w addhunkoffset
00028124 <AmiBlitz3.ab3@10957>   MOVE.l (A7)+,D2
00028126 <AmiBlitz3.ab3@10958> RTS
0002812A <AmiBlitz3.ab3@10962>   MOVEM.l D0-D1/A0-A1/A6,-(A7)
00028130 <AmiBlitz3.ab3@10963>   TST.b nohunkoffset
00028134 <AmiBlitz3.ab3@10964>   BNE 'l10
00028136 <AmiBlitz3.ab3@10965>   MOVEQ.l #$8,D0
00028138 <AmiBlitz3.ab3@10966>   MOVEQ.l #$01,D1
0002813E <AmiBlitz3.ab3@10967>   MOVEA.l _execbase,A6
00028144 <AmiBlitz3.ab3@10968>   MOVE.l mempool2,a0
00028148 <AmiBlitz3.ab3@10969>   JSR _AllocPooled(a6)
0002814E <AmiBlitz3.ab3@10971>   ADDQ.l #1,hunkoffsetcounter
00028150 <AmiBlitz3.ab3@10972>   MOVEA.l D0,A0
00028156 <AmiBlitz3.ab3@10973>   MOVE.l hunkoffsetbase,(A0)
0002815C <AmiBlitz3.ab3@10974>   MOVE.l A0,hunkoffsetbase
00028160 <AmiBlitz3.ab3@10975>   MOVE.l D2,$4(A0)
00028164 <AmiBlitz3.ab3@10978>   MOVEM.l (A7)+,D0-D1/A0-A1/A6
00028166 <AmiBlitz3.ab3@10979> RTS
0002816C <AmiBlitz3.ab3@10983>   CLR.l hunkoffsetbase
00028172 <AmiBlitz3.ab3@10984>   MOVEA.l _execbase,A6
00028178 <AmiBlitz3.ab3@10985>   MOVEA.l hunkoffsetbase,A2
0002817C <AmiBlitz3.ab3@10988>     CMPA.w #$0,A2
00028180 <AmiBlitz3.ab3@10989>      BEQ.w JL_0_7988
00028182 <AmiBlitz3.ab3@10990>     MOVEA.l A2,A1
00028184 <AmiBlitz3.ab3@10991>     MOVEQ.l #$08,D0
00028186 <AmiBlitz3.ab3@10992>     MOVEA.l (A2),A2
0002818C <AmiBlitz3.ab3@10993>     MOVE.l mempool2,a0
00028190 <AmiBlitz3.ab3@10994>     JSR _FreePooled(A6)
00028194 <AmiBlitz3.ab3@10995> BRA.w JL_0_7972
0002819A <AmiBlitz3.ab3@10998>   CLR.l hunkoffsetcounter
0002819C <AmiBlitz3.ab3@10999> RTS
000281B4 <AmiBlitz3.ab3@11002> cmakebuff:  Ds.l 6                                          ;dc.w 12 org source
000281B8 <AmiBlitz3.ab3@11003> cmakea5:    Ds.l 1
000281BA <AmiBlitz3.ab3@11004> cmake:      Ds.w 1
0002823A <AmiBlitz3.ab3@11005> cmakebak:   Ds.l 32                                         ;ds.b 128 org source
00028240 <AmiBlitz3.ab3@11009>   MOVE.l A5,lastsourcepos
0002824A <AmiBlitz3.ab3@11010>   MOVE.w instringon,oldqflag
0002824C <AmiBlitz3.ab3@11014>   MOVEQ.l #$00,D0
0002824E <AmiBlitz3.ab3@11015>   MOVE.b (A5)+,D0
00028252 <AmiBlitz3.ab3@11016>    BEQ getcharb__donea
00028256 <AmiBlitz3.ab3@11017>   BPL getcharb__stuffa
00028258 <AmiBlitz3.ab3@11018>   LSL.l #8,D0
0002825A <AmiBlitz3.ab3@11019>   MOVE.b (A5)+,D0
0002825C <AmiBlitz3.ab3@11020>   MOVE.l a1,-(a7)
00028262 <AmiBlitz3.ab3@11021>   LEA replacedat,a1
00028266 <AmiBlitz3.ab3@11022>   Dc.w $4a71,$0a00                                         ;TST.w 0(a1,d0.l*2)
0002826A <AmiBlitz3.ab3@11023>   BEQ getchar__l10
0002826E <AmiBlitz3.ab3@11024>   Dc.w $3031,$0a00                                         ;MOVE.w 0(a1,d0.l*2),d0
00028270 <AmiBlitz3.ab3@11028>   MOVE.l (a7)+,a1
00028274 <AmiBlitz3.ab3@11029> BRA getchar__weiter
00028278 <AmiBlitz3.ab3@11032>   CMP.w #$22,D0
0002827C <AmiBlitz3.ab3@11033>    BEQ.b swapquotea
00028280 <AmiBlitz3.ab3@11034>   CMP.w #$3B,D0
00028284 <AmiBlitz3.ab3@11035>    BNE.b getcharb__donea
0002828A <AmiBlitz3.ab3@11036>   TST.w instringon
0002828E <AmiBlitz3.ab3@11037>    BNE.b getcharb__donea
00028290 <AmiBlitz3.ab3@11040>   MOVE.b (A5)+,D0
00028294 <AmiBlitz3.ab3@11041>              BEQ getchar__l1
00028298 <AmiBlitz3.ab3@11042>              CMP.b #":",d0
0002829C <AmiBlitz3.ab3@11043>              BNE getcharb__loopa                                ;:@
000282A0 <AmiBlitz3.ab3@11044>              CMP.b #"@",(a5)
000282A4 <AmiBlitz3.ab3@11045>              BNE getcharb__loopa
000282A6 <AmiBlitz3.ab3@11046>              ADDQ #1,a5
000282AC <AmiBlitz3.ab3@11049>   MOVE.w D0,lastchar
000282B0 <AmiBlitz3.ab3@11052> BRA.s getchar__weiter
000282B6 <AmiBlitz3.ab3@11055>   NOT.w instringon
000282BC <AmiBlitz3.ab3@11058>    MOVE.w D0,lastchar
000282C0 <AmiBlitz3.ab3@11059>    BEQ.w getchar__done
000282C4 <AmiBlitz3.ab3@11060>    BPL.w getchar__done2
000282C8 <AmiBlitz3.ab3@11061>   CMP.w #-$7FE4,D0                                         ;cnif
000282CC <AmiBlitz3.ab3@11062>    BEQ.w getchar__cnif
000282D0 <AmiBlitz3.ab3@11063>   CMP.w #-$7FE3,D0                                         ;csif
000282D4 <AmiBlitz3.ab3@11064>    BEQ.w getchar__csif
000282D8 <AmiBlitz3.ab3@11065>   CMP.w #-$7FE2,D0                                         ;celse
000282DC <AmiBlitz3.ab3@11066>    BEQ.w getchar__celse
000282E0 <AmiBlitz3.ab3@11067>   CMP.w #-$7FE1,D0                                         ;cend
000282E4 <AmiBlitz3.ab3@11068>    BEQ.w getchar__cend
000282EA <AmiBlitz3.ab3@11071>   TST.w skipcode
000282EE <AmiBlitz3.ab3@11072>    BEQ.w getchar
000282F2 <AmiBlitz3.ab3@11073>   CMP.w #$7E,D0
000282F6 <AmiBlitz3.ab3@11074>    BEQ.w getchar__cmake                                         ;tilde
000282FA <AmiBlitz3.ab3@11075>   CMP.w #$2,D0
000282FE <AmiBlitz3.ab3@11076>    BNE.w getchar__notunpath
00028304 <AmiBlitz3.ab3@11077>   MOVEA.l usedfrom,A5
0002830A <AmiBlitz3.ab3@11078>   CLR.l usedfrom
0002830E <AmiBlitz3.ab3@11079> BRA.w getchar
00028312 <AmiBlitz3.ab3@11082>   CMP.w #$1,D0
00028316 <AmiBlitz3.ab3@11083>    BNE.w getchar__done
0002831A <AmiBlitz3.ab3@11087>   MOVEA.l cmakea5(PC),A5
0002831E <AmiBlitz3.ab3@11088> BRA.w getchar
00028324 <AmiBlitz3.ab3@11091>   TST.w cmake
00028328 <AmiBlitz3.ab3@11092>    BNE.w getchar__done
0002832C <AmiBlitz3.ab3@11094>   MOVEM.l D0-D7/A0-A6,-(A7)
00028332 <AmiBlitz3.ab3@11095>   LEA cmake,a0                                         ;reass
00028334 <AmiBlitz3.ab3@11096>   NOT.w (a0)
00028338 <AmiBlitz3.ab3@11097>   LEA cmakebak(PC),A0
0002833E <AmiBlitz3.ab3@11098>   LEA ptr_parameterstore,A1
00028340 <AmiBlitz3.ab3@11099>   MOVEQ.l #$1F,D0
00028342 <AmiBlitz3.ab3@11102>     MOVE.l (A1)+,(A0)+
00028346 <AmiBlitz3.ab3@11103>   DBF D0,getchar__cmloop
0002834C <AmiBlitz3.ab3@11106>    JSR AJL_0_BF6E
00028350 <AmiBlitz3.ab3@11107>   CMP.w #$7E,D0
00028354 <AmiBlitz3.ab3@11108>    BNE.w syntaxerr
0002835A <AmiBlitz3.ab3@11109>   MOVE.l A5,cmakea5                                      ;tilde
0002835E <AmiBlitz3.ab3@11110>   LEA cmakebuff(PC),A0
00028360 <AmiBlitz3.ab3@11111>   MOVE.l D3,D2
00028364 <AmiBlitz3.ab3@11112>   BSR.w makelong
00028366 <AmiBlitz3.ab3@11113>   ADDQ.b #1,(A0)
0002836C <AmiBlitz3.ab3@11114>   LEA cmake,a0
0002836E <AmiBlitz3.ab3@11115>   NOT.w (a0)                                               ;reass
00028372 <AmiBlitz3.ab3@11116>   LEA cmakebak(PC),A0
00028378 <AmiBlitz3.ab3@11117>   LEA ptr_parameterstore,A1
0002837A <AmiBlitz3.ab3@11118>   MOVEQ.l #$1F,D0
0002837C <AmiBlitz3.ab3@11121>     MOVE.l (A0)+,(A1)+
00028380 <AmiBlitz3.ab3@11122>   DBF D0,getchar__cmloop2
00028384 <AmiBlitz3.ab3@11124>   MOVEM.l (A7)+,D0-D7/A0-A6
00028388 <AmiBlitz3.ab3@11125>   LEA cmakebuff(PC),A5
0002838C <AmiBlitz3.ab3@11126> BRA.w getchar
0002838E <AmiBlitz3.ab3@11129> RTS
00028398 <AmiBlitz3.ab3@11133>   MOVE.l linenumat,ciflineat                               ;csif
0002839E <AmiBlitz3.ab3@11134>   TST.w skipcode
000283A2 <AmiBlitz3.ab3@11135>    BEQ.w getchar__incnest
000283A6 <AmiBlitz3.ab3@11136>    BSR.w get1bytemain
000283A8 <AmiBlitz3.ab3@11137>    MOVE.l a1,-(a7)
000283AE <AmiBlitz3.ab3@11138>    JSR JL_0_C492
000283B0 <AmiBlitz3.ab3@11139>    MOVE.l (a7)+,a1
000283B4 <AmiBlitz3.ab3@11140> BRA.w getchar
000283BE <AmiBlitz3.ab3@11143>   MOVE.l linenumat,ciflineat                               ;cnif
000283C4 <AmiBlitz3.ab3@11144>   TST.w skipcode
000283C8 <AmiBlitz3.ab3@11145>    BEQ.w getchar__incnest
000283CC <AmiBlitz3.ab3@11146>    BSR.w get1bytemain
000283D0 <AmiBlitz3.ab3@11147>    CMP.b #"@",d0
000283D4 <AmiBlitz3.ab3@11148>    BNE getchar__cnif_ok2
000283D8 <AmiBlitz3.ab3@11149>    BSR.w get1bytemain
000283E0 <AmiBlitz3.ab3@11150>    MOVE.b #1,incnif
000283E6 <AmiBlitz3.ab3@11151>    JSR findconstant2
000283EA <AmiBlitz3.ab3@11152>    BEQ getchar__cnif_ok2
000283F0 <AmiBlitz3.ab3@11155>    MOVE.w fast,-(a7)
000283F6 <AmiBlitz3.ab3@11156>    CLR.b fast
000283F8 <AmiBlitz3.ab3@11157>    MOVE.l a1,-(a7)
000283FE <AmiBlitz3.ab3@11158>    JSR JL_0_C47E
00028404 <AmiBlitz3.ab3@11159>    CLR.b incnif
00028406 <AmiBlitz3.ab3@11160>    MOVE.l (a7)+,a1
0002840C <AmiBlitz3.ab3@11161>    MOVE.w (a7)+,fast
00028410 <AmiBlitz3.ab3@11162> BRA.w getchar
00028416 <AmiBlitz3.ab3@11165>   ADDQ.w #1,connest
0002841A <AmiBlitz3.ab3@11166> BRA.w getchar
00028420 <AmiBlitz3.ab3@11169>   MOVE.w connest,D0                                      ;celse
00028424 <AmiBlitz3.ab3@11170>    BNE.w getchar
0002842A <AmiBlitz3.ab3@11171>   NOT.w skipcode
0002842E <AmiBlitz3.ab3@11172> BRA.w getchar
00028434 <AmiBlitz3.ab3@11175>   SUBQ.w #1,connest                                      ;cend
00028438 <AmiBlitz3.ab3@11176>    BPL.w getchar
0002843E <AmiBlitz3.ab3@11177>   ADDQ.w #1,connest
00028444 <AmiBlitz3.ab3@11178>   MOVEA.l concomsp,A0
0002844A <AmiBlitz3.ab3@11179>   CMPA.l #concomstack,A0
0002844E <AmiBlitz3.ab3@11180>    BEQ.w nociferr
00028450 <AmiBlitz3.ab3@11181>   SUBQ.w #2,A0
00028456 <AmiBlitz3.ab3@11182>   MOVE.l A0,concomsp
0002845C <AmiBlitz3.ab3@11183>   MOVE.w (A0),skipcode
00028460 <AmiBlitz3.ab3@11184> BRA.w getchar
00028464 <AmiBlitz3.ab3@11187> ciflineat:   Ds.l 1
00028466 <AmiBlitz3.ab3@11195>   MOVEQ.l #$00,D0
00028468 <AmiBlitz3.ab3@11196>   MOVE.b (A5)+,D0
0002846C <AmiBlitz3.ab3@11197>    BEQ.b getcharb__done
00028470 <AmiBlitz3.ab3@11198>    BPL.b getcharb__stuff
00028472 <AmiBlitz3.ab3@11199>   LSL.w #8,D0
00028474 <AmiBlitz3.ab3@11200>   MOVE.b (A5)+,D0
00028476 <AmiBlitz3.ab3@11201> RTS
0002847A <AmiBlitz3.ab3@11204>   CMP.w #$22,D0
0002847E <AmiBlitz3.ab3@11205>    BEQ.b swapquote
00028482 <AmiBlitz3.ab3@11206>   CMP.w #$3B,D0
00028486 <AmiBlitz3.ab3@11207>    BNE.b getcharb__done
0002848C <AmiBlitz3.ab3@11208>   TST.w instringon
00028490 <AmiBlitz3.ab3@11209>    BNE.b getcharb__done
00028492 <AmiBlitz3.ab3@11212>   MOVE.b (A5)+,D0
00028496 <AmiBlitz3.ab3@11213>             BEQ getcharb__loop_l1
0002849A <AmiBlitz3.ab3@11214>             CMP.b #":",d0
0002849E <AmiBlitz3.ab3@11215>             BNE getcharb__loop
000284A2 <AmiBlitz3.ab3@11216>             CMP.b #"@",(a5)
000284A6 <AmiBlitz3.ab3@11217>             BNE getcharb__loop
000284AC <AmiBlitz3.ab3@11220>   MOVE.w D0,lastchar
000284AE <AmiBlitz3.ab3@11223> RTS
000284B4 <AmiBlitz3.ab3@11226>   NOT.w instringon
000284B6 <AmiBlitz3.ab3@11227> RTS
000284BA <AmiBlitz3.ab3@11231>   BSR.w getchar
000284C0 <AmiBlitz3.ab3@11232>   TST.w instringon
000284C4 <AmiBlitz3.ab3@11233>    BNE.w get1byte__skip
000284C8 <AmiBlitz3.ab3@11234>   CMP.w #$20,D0
000284CC <AmiBlitz3.ab3@11235>    BEQ.w get1byte_
000284CE <AmiBlitz3.ab3@11238> RTS
000284E8 <AmiBlitz3.ab3@11241> gs:        Ds.w 13                                         ;ds.b 26  org source
000284EC <AmiBlitz3.ab3@11242>            Dc.b $F6,$E4,$FC,$D6                            ;dc.b 228,246,252,196,214,220 org source
000284EE <AmiBlitz3.ab3@11243>            Dc.b $C4,$DC
000284F2 <AmiBlitz3.ab3@11249>   BSR.w getchar
000284F8 <AmiBlitz3.ab3@11250>   TST.w instringon
000284FC <AmiBlitz3.ab3@11251>    BNE.w gchar2
00028500 <AmiBlitz3.ab3@11252>   CMP.w #$20,D0
00028504 <AmiBlitz3.ab3@11253>    BEQ.w get1bytemain
00028506 <AmiBlitz3.ab3@11255>   TST.w D0
0002850A <AmiBlitz3.ab3@11258>   BEQ.b get1bytemain__zero
00028510 <AmiBlitz3.ab3@11259>   TST.w instringon
00028514 <AmiBlitz3.ab3@11260>    BEQ.b get1bytemain__noqoute
00028518 <AmiBlitz3.ab3@11261>   CMP.b #$20,D0
0002851C <AmiBlitz3.ab3@11262>    BCC.b get1bytemain__skip
00028520 <AmiBlitz3.ab3@11263>   MOVE.b gs(PC,D0.W),D0
00028522 <AmiBlitz3.ab3@11264> RTS
00028526 <AmiBlitz3.ab3@11267>   CMP.w #-$7FDE,D0                                         ;cmp #$8000+34,d0 org source  ;else
0002852A <AmiBlitz3.ab3@11268>    BEQ.b get1bytemain__zero
0002852E <AmiBlitz3.ab3@11269>   CMP.w #$3A,D0
00028532 <AmiBlitz3.ab3@11270>    BEQ.b get1bytemain__zero
00028534 <AmiBlitz3.ab3@11273>   TST.w D0
00028536 <AmiBlitz3.ab3@11276> RTS
0002853C <AmiBlitz3.ab3@11280>   MOVE.w lastchar,D0
00028540 <AmiBlitz3.ab3@11281> BRA.w gchar2
0002854A <AmiBlitz3.ab3@11285>   MOVE.w oldqflag,instringon
00028550 <AmiBlitz3.ab3@11286>   MOVEA.l lastsourcepos,A5
00028552 <AmiBlitz3.ab3@11287> RTS
00028558 <AmiBlitz3.ab3@11291>   MOVE.w D0,locchar
0002855E <AmiBlitz3.ab3@11292>   MOVE.l A5,locloc
00028560 <AmiBlitz3.ab3@11293> RTS
00028566 <AmiBlitz3.ab3@11297>   MOVEA.l locloc,A5
0002856C <AmiBlitz3.ab3@11298>   MOVE.w locchar,D0
00028572 <AmiBlitz3.ab3@11299>   MOVE.w D0,lastchar
00028574 <AmiBlitz3.ab3@11300> RTS
00028574 <internal_errormsg.ab3@1> XINCLUDE "internal_errormsg.ab3"
000285BC <internal_errormsg.ab3@9> XINCLUDE "internal_errormsg.ab3"
0002860E <internal_errormsg.ab3@10> XINCLUDE "internal_errormsg.ab3"
0002864C <internal_errormsg.ab3@11> XINCLUDE "internal_errormsg.ab3"
0002868A <internal_errormsg.ab3@12> XINCLUDE "internal_errormsg.ab3"
000286B4 <internal_errormsg.ab3@13> XINCLUDE "internal_errormsg.ab3"
000286E4 <internal_errormsg.ab3@14> XINCLUDE "internal_errormsg.ab3"
0002872E <internal_errormsg.ab3@15> XINCLUDE "internal_errormsg.ab3"
000287B4 <internal_errormsg.ab3@16> XINCLUDE "internal_errormsg.ab3"
00028816 <internal_errormsg.ab3@17> XINCLUDE "internal_errormsg.ab3"
0002885E <internal_errormsg.ab3@18> XINCLUDE "internal_errormsg.ab3"
000288B0 <internal_errormsg.ab3@19> XINCLUDE "internal_errormsg.ab3"
00028912 <internal_errormsg.ab3@20> XINCLUDE "internal_errormsg.ab3"
00028960 <internal_errormsg.ab3@21> XINCLUDE "internal_errormsg.ab3"
00028996 <internal_errormsg.ab3@22> XINCLUDE "internal_errormsg.ab3"
000289C4 <internal_errormsg.ab3@23> XINCLUDE "internal_errormsg.ab3"
000289DE <internal_errormsg.ab3@24> XINCLUDE "internal_errormsg.ab3"
000289FC <internal_errormsg.ab3@25> XINCLUDE "internal_errormsg.ab3"
00028A7A <internal_errormsg.ab3@26> XINCLUDE "internal_errormsg.ab3"
00028AA4 <internal_errormsg.ab3@27> XINCLUDE "internal_errormsg.ab3"
00028ACA <internal_errormsg.ab3@28> XINCLUDE "internal_errormsg.ab3"
00028AEA <internal_errormsg.ab3@29> XINCLUDE "internal_errormsg.ab3"
00028B08 <internal_errormsg.ab3@30> XINCLUDE "internal_errormsg.ab3"
00028B28 <internal_errormsg.ab3@31> XINCLUDE "internal_errormsg.ab3"
00028B50 <internal_errormsg.ab3@32> XINCLUDE "internal_errormsg.ab3"
00028B7A <internal_errormsg.ab3@33> XINCLUDE "internal_errormsg.ab3"
00028B7C <internal_errormsg.ab3@36> XINCLUDE "internal_errormsg.ab3"
00028B98 <internal_errormsg.ab3@39> XINCLUDE "internal_errormsg.ab3"
00028BBE <internal_errormsg.ab3@40> XINCLUDE "internal_errormsg.ab3"
00028BD6 <internal_errormsg.ab3@41> XINCLUDE "internal_errormsg.ab3"
00028C34 <internal_errormsg.ab3@42> XINCLUDE "internal_errormsg.ab3"
00028C56 <internal_errormsg.ab3@43> XINCLUDE "internal_errormsg.ab3"
00028C7C <internal_errormsg.ab3@44> XINCLUDE "internal_errormsg.ab3"
00028CA4 <internal_errormsg.ab3@45> XINCLUDE "internal_errormsg.ab3"
00028CC4 <internal_errormsg.ab3@46> XINCLUDE "internal_errormsg.ab3"
00028CE8 <internal_errormsg.ab3@47> XINCLUDE "internal_errormsg.ab3"
00028D2E <internal_errormsg.ab3@48> XINCLUDE "internal_errormsg.ab3"
00028D52 <internal_errormsg.ab3@49> XINCLUDE "internal_errormsg.ab3"
00028D76 <internal_errormsg.ab3@50> XINCLUDE "internal_errormsg.ab3"
00028D96 <internal_errormsg.ab3@51> XINCLUDE "internal_errormsg.ab3"
00028DBA <internal_errormsg.ab3@52> XINCLUDE "internal_errormsg.ab3"
00028DDC <internal_errormsg.ab3@53> XINCLUDE "internal_errormsg.ab3"
00028E08 <internal_errormsg.ab3@54> XINCLUDE "internal_errormsg.ab3"
00028E2E <internal_errormsg.ab3@55> XINCLUDE "internal_errormsg.ab3"
00028E38 <internal_errormsg.ab3@58> XINCLUDE "internal_errormsg.ab3"
00028E5E <internal_errormsg.ab3@59> XINCLUDE "internal_errormsg.ab3"
00028EB0 <internal_errormsg.ab3@61> XINCLUDE "internal_errormsg.ab3"
00028F1A <internal_errormsg.ab3@62> XINCLUDE "internal_errormsg.ab3"
00028F78 <internal_errormsg.ab3@63> XINCLUDE "internal_errormsg.ab3"
00028FE6 <internal_errormsg.ab3@64> XINCLUDE "internal_errormsg.ab3"
00029022 <internal_errormsg.ab3@65> XINCLUDE "internal_errormsg.ab3"
00029040 <internal_errormsg.ab3@66> XINCLUDE "internal_errormsg.ab3"
00029066 <internal_errormsg.ab3@67> XINCLUDE "internal_errormsg.ab3"
00029096 <internal_errormsg.ab3@68> XINCLUDE "internal_errormsg.ab3"
000290BA <internal_errormsg.ab3@69> XINCLUDE "internal_errormsg.ab3"
000290E8 <internal_errormsg.ab3@70> XINCLUDE "internal_errormsg.ab3"
0002910C <internal_errormsg.ab3@71> XINCLUDE "internal_errormsg.ab3"
00029122 <internal_errormsg.ab3@72> XINCLUDE "internal_errormsg.ab3"
00029138 <internal_errormsg.ab3@73> XINCLUDE "internal_errormsg.ab3"
0002913E <internal_errormsg.ab3@76> XINCLUDE "internal_errormsg.ab3"
00029146 <internal_errormsg.ab3@78> XINCLUDE "internal_errormsg.ab3"
00029148 <internal_errormsg.ab3@79> XINCLUDE "internal_errormsg.ab3"
0002914C <internal_errormsg.ab3@80> XINCLUDE "internal_errormsg.ab3"
00029154 <internal_errormsg.ab3@81> XINCLUDE "internal_errormsg.ab3"
00029156 <internal_errormsg.ab3@82> XINCLUDE "internal_errormsg.ab3"
00029190 <internal_errormsg.ab3@84> XINCLUDE "internal_errormsg.ab3"
000291BC <internal_errormsg.ab3@85> XINCLUDE "internal_errormsg.ab3"
000291EC <internal_errormsg.ab3@86> XINCLUDE "internal_errormsg.ab3"
00029224 <internal_errormsg.ab3@87> XINCLUDE "internal_errormsg.ab3"
0002927E <internal_errormsg.ab3@88> XINCLUDE "internal_errormsg.ab3"
00029280 <internal_errormsg.ab3@92> XINCLUDE "internal_errormsg.ab3"
00029284 <internal_errormsg.ab3@93> XINCLUDE "internal_errormsg.ab3"
00029288 <internal_errormsg.ab3@94> XINCLUDE "internal_errormsg.ab3"
0002928C <internal_errormsg.ab3@95> XINCLUDE "internal_errormsg.ab3"
00029290 <internal_errormsg.ab3@96> XINCLUDE "internal_errormsg.ab3"
00029294 <internal_errormsg.ab3@97> XINCLUDE "internal_errormsg.ab3"
00029298 <internal_errormsg.ab3@98> XINCLUDE "internal_errormsg.ab3"
0002929C <internal_errormsg.ab3@99> XINCLUDE "internal_errormsg.ab3"
000292A0 <internal_errormsg.ab3@100> XINCLUDE "internal_errormsg.ab3"
000292A4 <internal_errormsg.ab3@101> XINCLUDE "internal_errormsg.ab3"
000292A8 <internal_errormsg.ab3@102> XINCLUDE "internal_errormsg.ab3"
000292E6 <internal_errormsg.ab3@103> XINCLUDE "internal_errormsg.ab3"
00029318 <internal_errormsg.ab3@105> XINCLUDE "internal_errormsg.ab3"
00029336 <internal_errormsg.ab3@106> XINCLUDE "internal_errormsg.ab3"
00029360 <internal_errormsg.ab3@107> XINCLUDE "internal_errormsg.ab3"
0002937C <internal_errormsg.ab3@108> XINCLUDE "internal_errormsg.ab3"
00029396 <internal_errormsg.ab3@109> XINCLUDE "internal_errormsg.ab3"
000293B4 <internal_errormsg.ab3@110> XINCLUDE "internal_errormsg.ab3"
000293D8 <internal_errormsg.ab3@111> XINCLUDE "internal_errormsg.ab3"
000293DA <internal_errormsg.ab3@114> XINCLUDE "internal_errormsg.ab3"
0002942C <internal_errormsg.ab3@115> XINCLUDE "internal_errormsg.ab3"
00029454 <internal_errormsg.ab3@117> XINCLUDE "internal_errormsg.ab3"
0002947C <internal_errormsg.ab3@118> XINCLUDE "internal_errormsg.ab3"
00029498 <internal_errormsg.ab3@122> XINCLUDE "internal_errormsg.ab3"
000294B8 <internal_errormsg.ab3@123> XINCLUDE "internal_errormsg.ab3"
000294D0 <internal_errormsg.ab3@124> XINCLUDE "internal_errormsg.ab3"
00029514 <internal_errormsg.ab3@125> XINCLUDE "internal_errormsg.ab3"
0002955C <internal_errormsg.ab3@126> XINCLUDE "internal_errormsg.ab3"
00029586 <internal_errormsg.ab3@127> XINCLUDE "internal_errormsg.ab3"
000295B0 <internal_errormsg.ab3@128> XINCLUDE "internal_errormsg.ab3"
000295CA <internal_errormsg.ab3@132> XINCLUDE "internal_errormsg.ab3"
000295F4 <internal_errormsg.ab3@133> XINCLUDE "internal_errormsg.ab3"
00029648 <internal_errormsg.ab3@134> XINCLUDE "internal_errormsg.ab3"
00029694 <internal_errormsg.ab3@135> XINCLUDE "internal_errormsg.ab3"
000296CC <internal_errormsg.ab3@136> XINCLUDE "internal_errormsg.ab3"
000296D2 <internal_errormsg.ab3@139> XINCLUDE "internal_errormsg.ab3"
000296E0 <internal_errormsg.ab3@141> XINCLUDE "internal_errormsg.ab3"
00029710 <internal_errormsg.ab3@144> XINCLUDE "internal_errormsg.ab3"
00029744 <internal_errormsg.ab3@145> XINCLUDE "internal_errormsg.ab3"
000297AA <internal_errormsg.ab3@146> XINCLUDE "internal_errormsg.ab3"
000297C8 <internal_errormsg.ab3@147> XINCLUDE "internal_errormsg.ab3"
00029842 <internal_errormsg.ab3@148> XINCLUDE "internal_errormsg.ab3"
0002986A <internal_errormsg.ab3@149> XINCLUDE "internal_errormsg.ab3"
00029880 <internal_errormsg.ab3@150> XINCLUDE "internal_errormsg.ab3"
00029894 <internal_errormsg.ab3@151> XINCLUDE "internal_errormsg.ab3"
00029896 <internal_errormsg.ab3@154> XINCLUDE "internal_errormsg.ab3"
00029897 <internal_errormsg.ab3@155> XINCLUDE "internal_errormsg.ab3"
00029898 <internal_errormsg.ab3@156> XINCLUDE "internal_errormsg.ab3"
000298B8 <internal_errormsg.ab3@158> XINCLUDE "internal_errormsg.ab3"
000298BE <internal_errormsg.ab3@161> XINCLUDE "internal_errormsg.ab3"
000298D0 <internal_errormsg.ab3@163> XINCLUDE "internal_errormsg.ab3"
00029904 <internal_errormsg.ab3@166> XINCLUDE "internal_errormsg.ab3"
0002991C <internal_errormsg.ab3@167> XINCLUDE "internal_errormsg.ab3"
00029938 <internal_errormsg.ab3@168> XINCLUDE "internal_errormsg.ab3"
00029950 <internal_errormsg.ab3@169> XINCLUDE "internal_errormsg.ab3"
00029970 <internal_errormsg.ab3@170> XINCLUDE "internal_errormsg.ab3"
00029990 <internal_errormsg.ab3@171> XINCLUDE "internal_errormsg.ab3"
000299B6 <internal_errormsg.ab3@172> XINCLUDE "internal_errormsg.ab3"
000299CC <internal_errormsg.ab3@173> XINCLUDE "internal_errormsg.ab3"
000299E8 <internal_errormsg.ab3@174> XINCLUDE "internal_errormsg.ab3"
00029A12 <internal_errormsg.ab3@175> XINCLUDE "internal_errormsg.ab3"
00029A2A <internal_errormsg.ab3@176> XINCLUDE "internal_errormsg.ab3"
00029A46 <internal_errormsg.ab3@177> XINCLUDE "internal_errormsg.ab3"
00029A66 <internal_errormsg.ab3@178> XINCLUDE "internal_errormsg.ab3"
00029A7E <internal_errormsg.ab3@179> XINCLUDE "internal_errormsg.ab3"
00029A82 <internal_errormsg.ab3@182> XINCLUDE "internal_errormsg.ab3"
00029A88 <internal_errormsg.ab3@183> XINCLUDE "internal_errormsg.ab3"
00029A8E <internal_errormsg.ab3@184> XINCLUDE "internal_errormsg.ab3"
00029AA3 <internal_errormsg.ab3@185> XINCLUDE "internal_errormsg.ab3"
00029AA9 <internal_errormsg.ab3@187> XINCLUDE "internal_errormsg.ab3"
00029AAA <internal_errormsg.ab3@188> XINCLUDE "internal_errormsg.ab3"
00029AAE <internal_errormsg.ab3@191> XINCLUDE "internal_errormsg.ab3"
00029AB4 <internal_errormsg.ab3@192> XINCLUDE "internal_errormsg.ab3"
00029ABA <internal_errormsg.ab3@193> XINCLUDE "internal_errormsg.ab3"
00029ACD <internal_errormsg.ab3@194> XINCLUDE "internal_errormsg.ab3"
00029AD3 <internal_errormsg.ab3@196> XINCLUDE "internal_errormsg.ab3"
00029AD4 <internal_errormsg.ab3@197> XINCLUDE "internal_errormsg.ab3"
00029AF2 <internal_errormsg.ab3@199> XINCLUDE "internal_errormsg.ab3"
00029B0A <internal_errormsg.ab3@200> XINCLUDE "internal_errormsg.ab3"
00029B26 <internal_errormsg.ab3@201> XINCLUDE "internal_errormsg.ab3"
00029B50 <internal_errormsg.ab3@202> XINCLUDE "internal_errormsg.ab3"
00029B6A <internal_errormsg.ab3@203> XINCLUDE "internal_errormsg.ab3"
00029B8A <internal_errormsg.ab3@204> XINCLUDE "internal_errormsg.ab3"
00029BA8 <internal_errormsg.ab3@205> XINCLUDE "internal_errormsg.ab3"
00029BD6 <internal_errormsg.ab3@206> XINCLUDE "internal_errormsg.ab3"
00029BE0 <internal_errormsg.ab3@209> XINCLUDE "internal_errormsg.ab3"
00029C12 <internal_errormsg.ab3@210> XINCLUDE "internal_errormsg.ab3"
00029C30 <internal_errormsg.ab3@212> XINCLUDE "internal_errormsg.ab3"
00029C4E <internal_errormsg.ab3@213> XINCLUDE "internal_errormsg.ab3"
00029C6E <internal_errormsg.ab3@214> XINCLUDE "internal_errormsg.ab3"
00029C94 <internal_errormsg.ab3@215> XINCLUDE "internal_errormsg.ab3"
00029CBA <internal_errormsg.ab3@216> XINCLUDE "internal_errormsg.ab3"
00029CE2 <internal_errormsg.ab3@217> XINCLUDE "internal_errormsg.ab3"
00029D00 <internal_errormsg.ab3@218> XINCLUDE "internal_errormsg.ab3"
00029D20 <internal_errormsg.ab3@219> XINCLUDE "internal_errormsg.ab3"
00029D3A <internal_errormsg.ab3@220> XINCLUDE "internal_errormsg.ab3"
00029D5C <internal_errormsg.ab3@221> XINCLUDE "internal_errormsg.ab3"
00029D7A <internal_errormsg.ab3@222> XINCLUDE "internal_errormsg.ab3"
00029D9C <internal_errormsg.ab3@223> XINCLUDE "internal_errormsg.ab3"
00029DC0 <internal_errormsg.ab3@224> XINCLUDE "internal_errormsg.ab3"
00029DC6 <internal_errormsg.ab3@227> XINCLUDE "internal_errormsg.ab3"
00029DE2 <internal_errormsg.ab3@228> XINCLUDE "internal_errormsg.ab3"
00029DFE <internal_errormsg.ab3@230> XINCLUDE "internal_errormsg.ab3"
00029E1C <internal_errormsg.ab3@231> XINCLUDE "internal_errormsg.ab3"
00029E3A <internal_errormsg.ab3@232> XINCLUDE "internal_errormsg.ab3"
00029E88 <internal_errormsg.ab3@233> XINCLUDE "internal_errormsg.ab3"
00029EA6 <internal_errormsg.ab3@234> XINCLUDE "internal_errormsg.ab3"
00029EC4 <internal_errormsg.ab3@235> XINCLUDE "internal_errormsg.ab3"
00029EDE <internal_errormsg.ab3@236> XINCLUDE "internal_errormsg.ab3"
00029F2A <internal_errormsg.ab3@237> XINCLUDE "internal_errormsg.ab3"
00029F50 <internal_errormsg.ab3@238> XINCLUDE "internal_errormsg.ab3"
00029F70 <internal_errormsg.ab3@239> XINCLUDE "internal_errormsg.ab3"
00029F92 <internal_errormsg.ab3@240> XINCLUDE "internal_errormsg.ab3"
00029FAE <internal_errormsg.ab3@241> XINCLUDE "internal_errormsg.ab3"
00029FD4 <internal_errormsg.ab3@242> XINCLUDE "internal_errormsg.ab3"
00029FF0 <internal_errormsg.ab3@243> XINCLUDE "internal_errormsg.ab3"
0002A00E <internal_errormsg.ab3@244> XINCLUDE "internal_errormsg.ab3"
0002A036 <internal_errormsg.ab3@245> XINCLUDE "internal_errormsg.ab3"
0002A052 <internal_errormsg.ab3@246> XINCLUDE "internal_errormsg.ab3"
0002A062 <internal_errormsg.ab3@247> XINCLUDE "internal_errormsg.ab3"
0002A084 <internal_errormsg.ab3@248> XINCLUDE "internal_errormsg.ab3"
0002A088 <internal_errormsg.ab3@251> XINCLUDE "internal_errormsg.ab3"
0002A08A <internal_errormsg.ab3@254> XINCLUDE "internal_errormsg.ab3"
0002A0A4 <internal_errormsg.ab3@255> XINCLUDE "internal_errormsg.ab3"
0002A0C8 <internal_errormsg.ab3@257> XINCLUDE "internal_errormsg.ab3"
0002A0E8 <internal_errormsg.ab3@258> XINCLUDE "internal_errormsg.ab3"
0002A11A <internal_errormsg.ab3@259> XINCLUDE "internal_errormsg.ab3"
0002A178 <internal_errormsg.ab3@260> XINCLUDE "internal_errormsg.ab3"
0002A1B0 <internal_errormsg.ab3@261> XINCLUDE "internal_errormsg.ab3"
0002A1EE <internal_errormsg.ab3@262> XINCLUDE "internal_errormsg.ab3"
0002A224 <internal_errormsg.ab3@263> XINCLUDE "internal_errormsg.ab3"
0002A256 <internal_errormsg.ab3@264> XINCLUDE "internal_errormsg.ab3"
0002A27A <internal_errormsg.ab3@265> XINCLUDE "internal_errormsg.ab3"
0002A29E <internal_errormsg.ab3@266> XINCLUDE "internal_errormsg.ab3"
0002A2E8 <internal_errormsg.ab3@267> XINCLUDE "internal_errormsg.ab3"
0002A310 <internal_errormsg.ab3@268> XINCLUDE "internal_errormsg.ab3"
0002A35A <internal_errormsg.ab3@269> XINCLUDE "internal_errormsg.ab3"
0002A39A <internal_errormsg.ab3@270> XINCLUDE "internal_errormsg.ab3"
0002A39A <AmiBlitz3.ab3@11304> XINCLUDE "internal_errormsg.ab3"
0002A39C <AmiBlitz3.ab3@11308> ezerr:   Ds.w 1                                            ;for simple errors
0002A3A2 <AmiBlitz3.ab3@11314>    MOVE.l myline,d0
0002A3A6 <AmiBlitz3.ab3@11315>   BNE handle_compileerror__l2
0002A3AC <AmiBlitz3.ab3@11317>     MOVE.l a5,lastsourcepos
0002A3AE <AmiBlitz3.ab3@11319>     SUBA.l a5,a5
0002A3B4 <AmiBlitz3.ab3@11321>   TST.l usedfrom
0002A3B8 <AmiBlitz3.ab3@11322>   BEQ handle_compileerror__org
0002A3BE <AmiBlitz3.ab3@11323>     MOVEA.l usedfrom,a5
0002A3C4 <AmiBlitz3.ab3@11326>   TST.w dirmode
0002A3C8 <AmiBlitz3.ab3@11327>   BNE.b handle_compileerror__quiet
0002A3CE <AmiBlitz3.ab3@11328>     JSR call_setpointernormal
0002A3D2 <AmiBlitz3.ab3@11329>     MOVE.w ezerr(PC),D0
0002A3D6 <AmiBlitz3.ab3@11330>     BNE.w handle_compileerror__skip
0002A3DC <AmiBlitz3.ab3@11331>       MOVE.w cfetchmode,D0
0002A3E0 <AmiBlitz3.ab3@11332>       BEQ.w handle_compileerror__skip2
0002A3EA <AmiBlitz3.ab3@11333>         MOVE.l oldlibat,destbufferend                      ;fix up lib thing.
0002A3F0 <AmiBlitz3.ab3@11336>   MOVE.w constmode,D0
0002A3F4 <AmiBlitz3.ab3@11337>   BEQ.b handle_compileerror__skip3
0002A3F8 <AmiBlitz3.ab3@11338>     BSR.w asmerr2
0002A3FE <AmiBlitz3.ab3@11341>   MOVE.l firstlocal,D1
0002A404 <AmiBlitz3.ab3@11342>   OR.l firstglob,D1
0002A408 <AmiBlitz3.ab3@11343>   BEQ.b handle_compileerror__notproc                       ;?!?!?!
0002A40E <AmiBlitz3.ab3@11344> 
0002A412 <AmiBlitz3.ab3@11345>     BNE handle_compileerror__notproc                       ; yes skip
0002A418 <AmiBlitz3.ab3@11346>       JSR JL_0_DB5C                                        ; no free some data ????
0002A420 <AmiBlitz3.ab3@11349>   MOVE.w #$FFFF,anyerrs                                    ;#-1,anyerrs org source
0002A42A <AmiBlitz3.ab3@11350>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A42E <AmiBlitz3.ab3@11351>   BEQ handle_compileerror__notproc_l1
0002A438 <AmiBlitz3.ab3@11352>     MOVE.l linenumat,compilelinecounter
0002A43E <AmiBlitz3.ab3@11355>   JSR close_compilewin
0002A440 <AmiBlitz3.ab3@11358>   MOVEA.l (A7)+,A0
0002A446 <AmiBlitz3.ab3@11359>   MOVE.l errorcounter,d0                                   ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A44C <AmiBlitz3.ab3@11360>   CMP.l maxerrorcount,d0                                   ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A450 <AmiBlitz3.ab3@11361>   BLT 'lesserror
0002A456 <AmiBlitz3.ab3@11362>   LEA errorlimit_text,a0
0002A45C <AmiBlitz3.ab3@11365>   ADDQ.l #1,errorcounter
0002A462 <AmiBlitz3.ab3@11366>   JSR errorstringparse
0002A46C <AmiBlitz3.ab3@11367>   CMP.l #"NORE",reqmode                                    ;for used functions
0002A470 <AmiBlitz3.ab3@11368>   BEQ handle_compileerror__skip_Lxx2
0002A476 <AmiBlitz3.ab3@11369>   TST.l CLIMode
0002A47A <AmiBlitz3.ab3@11370>   BNE 'climode_output
0002A480 <AmiBlitz3.ab3@11373>     JSR save_errorfile
0002A484 <AmiBlitz3.ab3@11374>     BRA 'end_output
0002A48A <AmiBlitz3.ab3@11377>     JSR stdout_error
0002A490 <AmiBlitz3.ab3@11379>      MOVE.l errorcounter,d0                          ; added to make maxerrorcount changable in CLIMode  tomsmart1
0002A496 <AmiBlitz3.ab3@11380>      CMP.l maxerrorcount,d0                          ; changed to make maxerrorcount changable in CLIMode  tomsmart1
0002A49A <AmiBlitz3.ab3@11381>      BGT 'end_output
0002A4A0 <AmiBlitz3.ab3@11382>     MOVE.l lastsourcepos,a5
0002A4A2 <AmiBlitz3.ab3@11384>  'loop TST.b (a5)
0002A4A6 <AmiBlitz3.ab3@11385>       BEQ 'ok2
0002A4A8 <AmiBlitz3.ab3@11386>     MOVE.b (a5)+,d0                                  ; position to usefull source position to avoid following errors
0002A4AC <AmiBlitz3.ab3@11387>     BEQ 'ok
0002A4B0 <AmiBlitz3.ab3@11388>     CMP.b #":",d0
0002A4B4 <AmiBlitz3.ab3@11389>     BEQ 'ok
0002A4B8 <AmiBlitz3.ab3@11390>     BRA 'loop
0002A4BA <AmiBlitz3.ab3@11392>  'ok SUBQ.l #1,a5
0002A4C2 <AmiBlitz3.ab3@11394>  'ok2 MOVE.w #0,lastchar
0002A4CA <AmiBlitz3.ab3@11395>     MOVE.b #1,iserror
0002A4D0 <AmiBlitz3.ab3@11396>     MOVE.l stackaddr,a7
0002A4D2 <AmiBlitz3.ab3@11397>     RTS
0002A4D4 <AmiBlitz3.ab3@11403>   MOVE.l A0,-(a7)
0002A512 <AmiBlitz3.ab3@11404>   !ComData_GetL{comFunc_ErrorRequest,A1}
0002A514 <AmiBlitz3.ab3@11405>   MOVE.l (a7)+,A0
0002A518 <AmiBlitz3.ab3@11407>   MOVEM.l d6/D7/A6,-(A7)
0002A51E <AmiBlitz3.ab3@11408>   MOVE.l includeline,d7
0002A524 <AmiBlitz3.ab3@11409>   MOVE.l #"INLN",a6
0002A52E <AmiBlitz3.ab3@11410>   MOVE.l errstack,tempa7
0002A530 <AmiBlitz3.ab3@11411>   JSR (A1)                                                  ;open ped errorrequest
0002A534 <AmiBlitz3.ab3@11413>   MOVEM.l (A7)+,D7/d6/A6
0002A53A <AmiBlitz3.ab3@11416>   MOVE.l tempa7,a7
0002A540 <AmiBlitz3.ab3@11417>   MOVEA.l errcont,A0
0002A542 <AmiBlitz3.ab3@11419> RTS
0002A548 <AmiBlitz3.ab3@11422>   MOVEA.l errstack,A7
0002A54E <AmiBlitz3.ab3@11423>   MOVEA.l errcont,A0
0002A550 <AmiBlitz3.ab3@11425> RTS
0002A552 <AmiBlitz3.ab3@11428>   MOVE.l (A7),D0
0002A558 <AmiBlitz3.ab3@11429>   MOVEA.l errstack,A7
0002A55E <AmiBlitz3.ab3@11430>   MOVEA.l errcont,A0
0002A560 <AmiBlitz3.ab3@11431> JMP (A0)
0002A564 <AmiBlitz3.ab3@11437>   CMP.w #$7A,D0                                            ;'z'
0002A568 <AmiBlitz3.ab3@11438>    BHI.w tstalpha__no
0002A56C <AmiBlitz3.ab3@11439>   CMP.w #$41,D0                                            ;'A'
0002A570 <AmiBlitz3.ab3@11440>    BCS.w tstalpha__no
0002A574 <AmiBlitz3.ab3@11441>   CMP.w #$61,D0                                            ;'a'
0002A578 <AmiBlitz3.ab3@11442>    BCC.w tstalpha__yes
0002A57C <AmiBlitz3.ab3@11443>   CMP.w #$5A,D0                                            ;'Z'
0002A580 <AmiBlitz3.ab3@11444>    BHI.w tstalpha__no
0002A582 <AmiBlitz3.ab3@11447>   CMP.w D0,D0
0002A584 <AmiBlitz3.ab3@11450> RTS
0002A588 <AmiBlitz3.ab3@11458>   CMP.w #$30,D0                                            ;'0'
0002A58C <AmiBlitz3.ab3@11459>    BCS.w tstnum__skip
0002A590 <AmiBlitz3.ab3@11460>   CMP.w #$39,D0                                            ;'9'
0002A594 <AmiBlitz3.ab3@11461>    BHI.w tstnum__skip                                     
0002A596 <AmiBlitz3.ab3@11462>   CMP.w D0,D0
0002A598 <AmiBlitz3.ab3@11465> RTS
0002A5BA <AmiBlitz3.ab3@11471>   !compare1                                                ;bsr.w tstalpha
0002A5BE <AmiBlitz3.ab3@11472>    BEQ.w tstlab__skip
0002A5D0 <AmiBlitz3.ab3@11473>   !compare2                                                ;bsr.w tstnum2
0002A5D4 <AmiBlitz3.ab3@11474>    BEQ.w tstlab__skip
0002A5D8 <AmiBlitz3.ab3@11475>   CMP.w #$5F,D0                                            ;'_'
0002A5DC <AmiBlitz3.ab3@11476>    BEQ.w tstlab__skip
0002A5E0 <AmiBlitz3.ab3@11477>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A5E2 <AmiBlitz3.ab3@11480> RTS
0002A5EC <AmiBlitz3.ab3@11485>   MOVE.w oldqflag,instringon
0002A5F2 <AmiBlitz3.ab3@11486>   MOVEA.l lastsourcepos,A5
0002A5F8 <AmiBlitz3.ab3@11489>   MOVE.l a5,beforeparameterfetch
0002A5FE <AmiBlitz3.ab3@11490>   LEA ptr_parameterstore,A1
0002A600 <AmiBlitz3.ab3@11493>   MOVEQ.l #$00,D2
0002A606 <AmiBlitz3.ab3@11496>   LEA chartab,a0
0002A608 <AmiBlitz3.ab3@11497>   MOVEQ #0,d0
0002A60E <AmiBlitz3.ab3@11498>   MOVE.l A5,lastsourcepos
0002A618 <AmiBlitz3.ab3@11499>   MOVE.w instringon,oldqflag
0002A61A <AmiBlitz3.ab3@11502>     MOVE.b (a5)+,d0
0002A61E <AmiBlitz3.ab3@11503>   CMP.b #$20,d0                                            ;space deftype
0002A622 <AmiBlitz3.ab3@11504>   BEQ makename4__retry
0002A628 <AmiBlitz3.ab3@11506>   MOVE.w d0,lastchar
0002A62C <AmiBlitz3.ab3@11507>   TST.b 0(a0,d0.w)
0002A630 <AmiBlitz3.ab3@11508>   BNE makename__done
0002A632 <AmiBlitz3.ab3@11517>   MOVE.b D0,(A1)+
0002A634 <AmiBlitz3.ab3@11518>   ADDQ.l #1,D2
0002A63A <AmiBlitz3.ab3@11519>   MOVE.l A5,lastsourcepos
0002A63C <AmiBlitz3.ab3@11522>   MOVE.b (a5)+,d0
0002A642 <AmiBlitz3.ab3@11523>   MOVE.b d0,lastchar+1
0002A646 <AmiBlitz3.ab3@11524>   CMP.b #$20,d0
0002A64A <AmiBlitz3.ab3@11525>   BEQ makename__loop_l20
0002A64E <AmiBlitz3.ab3@11527>   TST.b 0(a0,d0)
0002A652 <AmiBlitz3.ab3@11528>   BEQ makename__loop
0002A656 <AmiBlitz3.ab3@11529>   CMP.b #2,d0
0002A65A <AmiBlitz3.ab3@11530>   BNE makename__loop_lf1
0002A660 <AmiBlitz3.ab3@11531>   MOVEA.l usedfrom,A5
0002A666 <AmiBlitz3.ab3@11532>   CLR.l usedfrom
0002A66A <AmiBlitz3.ab3@11533> BRA makename__loop_ln1
0002A66E <AmiBlitz3.ab3@11536>   CMP.b #1,d0
0002A672 <AmiBlitz3.ab3@11537>   BNE makename__loop_l20
0002A676 <AmiBlitz3.ab3@11538>   MOVEA.l cmakea5(PC),A5
0002A67A <AmiBlitz3.ab3@11539> BRA makename__loop_ln1
0002A67E <AmiBlitz3.ab3@11542>   CMP.b #$7e,d0
0002A682 <AmiBlitz3.ab3@11543>             BNE makename__loop_lt
0002A688 <AmiBlitz3.ab3@11544>             TST.w cmake
0002A68C <AmiBlitz3.ab3@11545>             BNE.w makename__loop_a1
0002A68E <AmiBlitz3.ab3@11546>             SUBQ.l #1,a5
0002A692 <AmiBlitz3.ab3@11547>             BSR.w get1bytemain
0002A696 <AmiBlitz3.ab3@11548> BRA makename__loop
0002A69A <AmiBlitz3.ab3@11552> BRA makename__loop_gpex
0002A69E <AmiBlitz3.ab3@11556>   BSR.w getchar
0002A6C0 <AmiBlitz3.ab3@11557>    !compare1                                               ;bsr.w tstalpha
0002A6C4 <AmiBlitz3.ab3@11558>    BEQ.w makename__loop_getp1
0002A6D6 <AmiBlitz3.ab3@11559>    !compare2                                               ;bsr.w tstnum
0002A6DA <AmiBlitz3.ab3@11560>    BEQ.w makename__loop_getp1
0002A6DE <AmiBlitz3.ab3@11561>   CMP.w #$5F,D0                                            ;'_'
0002A6E2 <AmiBlitz3.ab3@11562>    BEQ.w makename__loop_getp1
0002A6E6 <AmiBlitz3.ab3@11563>   CMP.w #$27,D0                                            ;#loclabch,d0 org source
0002A6EA <AmiBlitz3.ab3@11567>       BNE makename__loop_gpex
0002A6EE <AmiBlitz3.ab3@11568>       CMP.b #$20,d0
0002A6F2 <AmiBlitz3.ab3@11569>       BNE.w makename__loop
0002A6F4 <AmiBlitz3.ab3@11572>      TST.b d0
0002A6F8 <AmiBlitz3.ab3@11573>      BPL makename__loop_l10
0002A6FA <AmiBlitz3.ab3@11574>      SUBQ.l #1,a5
0002A6FE <AmiBlitz3.ab3@11575>      BSR get1byte_
0002A702 <AmiBlitz3.ab3@11578>    CMP.w #$20,D0
0002A706 <AmiBlitz3.ab3@11579>    BNE.w makename__done
0002A708 <AmiBlitz3.ab3@11580>    MOVEQ #0,d0
0002A70E <AmiBlitz3.ab3@11581>   MOVE.l a5,lastsourcepos
0002A710 <AmiBlitz3.ab3@11584>   MOVE.b (a5)+,d0                                          ;neuneu
0002A714 <AmiBlitz3.ab3@11585>   BPL makename__loop_l101:
0002A716 <AmiBlitz3.ab3@11586>   ASL.w #8,d0
0002A718 <AmiBlitz3.ab3@11587>   MOVE.b (a5)+,d0
0002A71E <AmiBlitz3.ab3@11590>   TST.w instringon
0002A722 <AmiBlitz3.ab3@11591>   BNE makename__loop_l102
0002A726 <AmiBlitz3.ab3@11592>   CMP.b #$20,d0
0002A72A <AmiBlitz3.ab3@11593>   BEQ makename__loop_l103
0002A72E <AmiBlitz3.ab3@11594>   CMP.b #";",d0
0002A732 <AmiBlitz3.ab3@11595>   BNE makename__loop_l102
0002A734 <AmiBlitz3.ab3@11598>   MOVE.b (A5)+,D0
0002A738 <AmiBlitz3.ab3@11599>              BEQ makename__loop_l1
0002A73C <AmiBlitz3.ab3@11600>              CMP.b #":",d0
0002A740 <AmiBlitz3.ab3@11601>              BNE makename__loop_lr                         ;:@
0002A744 <AmiBlitz3.ab3@11602>              CMP.b #"@",(a5)
0002A748 <AmiBlitz3.ab3@11603>              BNE makename__loop_lr
0002A74A <AmiBlitz3.ab3@11604>              ADDQ #1,a5
0002A750 <AmiBlitz3.ab3@11608>   MOVE.w d0,lastchar
0002A754 <AmiBlitz3.ab3@11612>   CMP.b #";",d0
0002A758 <AmiBlitz3.ab3@11613>   BEQ makename__done_l11
0002A75A <AmiBlitz3.ab3@11614>   CLR.b (A1)
0002A75C <AmiBlitz3.ab3@11616>   TST.w D2
0002A75E <AmiBlitz3.ab3@11617> RTS
0002A760 <AmiBlitz3.ab3@11620>   CLR.b (a1)
0002A762 <AmiBlitz3.ab3@11621>   MOVEQ #0,d0
0002A768 <AmiBlitz3.ab3@11622>   MOVE.w d0,lastchar
0002A76A <AmiBlitz3.ab3@11624>   TST.w D2
0002A76C <AmiBlitz3.ab3@11625> RTS
0002A76E <AmiBlitz3.ab3@11631>   MOVE.l (A2),D0
0002A772 <AmiBlitz3.ab3@11634>   BEQ.w findlast__here
0002A774 <AmiBlitz3.ab3@11635>   MOVEA.l D0,A2
0002A778 <AmiBlitz3.ab3@11636> BRA.w findlast__loop
0002A77C <AmiBlitz3.ab3@11639> BRA.w reget
0002A77E <AmiBlitz3.ab3@11645>   MOVE.l (A2),-(A7)
0002A782 <AmiBlitz3.ab3@11646>   BSR.w addlabel
0002A784 <AmiBlitz3.ab3@11647>   MOVE.l (A7)+,(A2)
0002A786 <AmiBlitz3.ab3@11648> RTS
0002A78C <AmiBlitz3.ab3@11653>   CLR.l fp0addr
0002A792 <AmiBlitz3.ab3@11654>   TST.w dirmode
0002A796 <AmiBlitz3.ab3@11655>    BNE.w illdirerr
0002A798 <AmiBlitz3.ab3@11656>   MOVEQ.l #$00,D0
0002A79A <AmiBlitz3.ab3@11657>   MOVE.w D7,D0
0002A79C <AmiBlitz3.ab3@11658>   ADD.w D2,D0
0002A79E <AmiBlitz3.ab3@11659>   ADDQ.w #1,D0
0002A7A0 <AmiBlitz3.ab3@11660>   MOVE.w D0,D2
0002A7A2 <AmiBlitz3.ab3@11661>   ADDQ.l #2,d0
0002A7A4 <AmiBlitz3.ab3@11662>   MOVEQ.l #$01,D1
0002A7AA <AmiBlitz3.ab3@11663>   MOVEA.l _execbase,A6
0002A7B0 <AmiBlitz3.ab3@11664>   MOVE.l mempool2,a0
0002A7B4 <AmiBlitz3.ab3@11665>   JSR _AllocPooled(a6)
0002A7BA <AmiBlitz3.ab3@11667>   MOVE.l lastlabel,a2
0002A7BC <AmiBlitz3.ab3@11668>   MOVE.l D0,(A2)
0002A7BE <AmiBlitz3.ab3@11669>   MOVE.l d0,a0
0002A7C0 <AmiBlitz3.ab3@11670>   CLR.l (a0)
0002A7C6 <AmiBlitz3.ab3@11671>   MOVE.l a0,lastlabel
0002A7C8 <AmiBlitz3.ab3@11672>   MOVE.l d0,A2
0002A7CC <AmiBlitz3.ab3@11673>   LEA -$1(A0,D7.W),A0
0002A7CE <AmiBlitz3.ab3@11674>   MOVE.b D2,(A0)+
0002A7D4 <AmiBlitz3.ab3@11675>   LEA ptr_parameterstore,A1
0002A7D6 <AmiBlitz3.ab3@11676>   MOVEQ #0,d0
0002A7D8 <AmiBlitz3.ab3@11677>   MOVEQ #0,d1
0002A7DA <AmiBlitz3.ab3@11680>   MOVE.b (A1)+,d1
0002A7DE <AmiBlitz3.ab3@11681>    BEQ 'l1
0002A7E4 <AmiBlitz3.ab3@11682>    !hashalgo
0002A7E6 <AmiBlitz3.ab3@11683>    MOVE.b d1,(A0)+
0002A7EA <AmiBlitz3.ab3@11684> BRA addlabel_loop2a
0002A7EC <AmiBlitz3.ab3@11687>    CLR.b (a0)+
0002A7F2 <AmiBlitz3.ab3@11688>    LEA labelhash,a0
0002A7F8 <AmiBlitz3.ab3@11689>    AND.l #hashsize,d0
0002A7FA <AmiBlitz3.ab3@11690>    ASL.l #2,d0
0002A7FE <AmiBlitz3.ab3@11691>    MOVE.l 0(a0,d0),d1
0002A802 <AmiBlitz3.ab3@11692>    MOVE.l d1,$c(a2)
0002A806 <AmiBlitz3.ab3@11693>    MOVE.l a2,0(a0,d0)
0002A808 <AmiBlitz3.ab3@11694>    MOVEQ #0,d0
0002A80C <AmiBlitz3.ab3@11695> BRA.w reget
0002A812 <AmiBlitz3.ab3@11699>    TST.b newvariable
0002A816 <AmiBlitz3.ab3@11700>    BNE addlabel
0002A81C <AmiBlitz3.ab3@11703>   TST.w dirmode
0002A820 <AmiBlitz3.ab3@11704>    BNE.w illdirerr
0002A822 <AmiBlitz3.ab3@11705>   MOVEQ.l #$00,D0
0002A824 <AmiBlitz3.ab3@11706>   MOVE.w D7,D0
0002A826 <AmiBlitz3.ab3@11707>   ADD.w D2,D0
0002A828 <AmiBlitz3.ab3@11708>   ADDQ.w #1,D0
0002A82A <AmiBlitz3.ab3@11709>   MOVE.w D0,D2
0002A82C <AmiBlitz3.ab3@11710>   MOVEQ.l #$01,D1
0002A832 <AmiBlitz3.ab3@11711>   MOVEA.l _execbase,A6
0002A838 <AmiBlitz3.ab3@11712>   MOVE.l mempool2,a0
0002A83C <AmiBlitz3.ab3@11713>   JSR _AllocPooled(a6)
0002A83E <AmiBlitz3.ab3@11714>   MOVEA.l D0,A0
0002A844 <AmiBlitz3.ab3@11716>   LEA varbase,a2
0002A846 <AmiBlitz3.ab3@11717>   MOVE.l (a2),(a0)
0002A848 <AmiBlitz3.ab3@11718>   MOVE.l A0,(A2)
0002A84A <AmiBlitz3.ab3@11719>   MOVEA.l A0,A2
0002A84E <AmiBlitz3.ab3@11720>   LEA -$1(A0,D7.W),A0
0002A850 <AmiBlitz3.ab3@11721>   MOVE.b D2,(A0)+
0002A856 <AmiBlitz3.ab3@11722>   LEA ptr_parameterstore,A1
0002A858 <AmiBlitz3.ab3@11723>   MOVEQ #0,d0
0002A85A <AmiBlitz3.ab3@11724>   MOVEQ #0,d1
0002A85C <AmiBlitz3.ab3@11727>   MOVE.b (A1)+,d1
0002A860 <AmiBlitz3.ab3@11728>    BEQ 'l12
0002A866 <AmiBlitz3.ab3@11729>    !hashalgo
0002A868 <AmiBlitz3.ab3@11730>    MOVE.b d1,(A0)+
0002A86C <AmiBlitz3.ab3@11731> BRA 'l11
0002A86E <AmiBlitz3.ab3@11734>   CLR.b (a0)+
0002A874 <AmiBlitz3.ab3@11735>   LEA variablehash,a0
0002A87A <AmiBlitz3.ab3@11736>    AND.l #hashsize,d0
0002A87C <AmiBlitz3.ab3@11737>    ASL.l #2,d0
0002A880 <AmiBlitz3.ab3@11738>    MOVE.l 0(a0,d0),d1
0002A884 <AmiBlitz3.ab3@11739>    MOVE.l d1,$e(a2)
0002A888 <AmiBlitz3.ab3@11740>    MOVE.l a2,0(a0,d0)
0002A88A <AmiBlitz3.ab3@11741>    MOVEQ #0,d0
0002A88E <AmiBlitz3.ab3@11742> BRA.w reget
0002A894 <AmiBlitz3.ab3@11746>   TST.w dirmode
0002A898 <AmiBlitz3.ab3@11747>    BNE.w illdirerr
0002A89A <AmiBlitz3.ab3@11754>   MOVEQ.l #$00,D0
0002A89C <AmiBlitz3.ab3@11755>   MOVE.w D7,D0
0002A89E <AmiBlitz3.ab3@11756>   ADD.w D2,D0
0002A8A0 <AmiBlitz3.ab3@11757>   ADDQ.w #1,D0
0002A8A2 <AmiBlitz3.ab3@11758>   MOVE.w D0,D2
0002A8A4 <AmiBlitz3.ab3@11759>   MOVEQ.l #$01,D1
0002A8AA <AmiBlitz3.ab3@11760>   MOVEA.l _execbase,A6
0002A8B0 <AmiBlitz3.ab3@11761>   MOVE.l mempool2,a0
0002A8B4 <AmiBlitz3.ab3@11762>   JSR _AllocPooled(a6)
0002A8B6 <AmiBlitz3.ab3@11764>   MOVEA.l D0,A0
0002A8B8 <AmiBlitz3.ab3@11765>   MOVE.l A0,(A2)
0002A8BA <AmiBlitz3.ab3@11766>   CLR.l (a0)
0002A8BE <AmiBlitz3.ab3@11767>   CLR.l 8(a0)                                              ;clear next
0002A8C0 <AmiBlitz3.ab3@11768>   MOVEA.l A0,A2
0002A8C4 <AmiBlitz3.ab3@11769>   LEA -$1(A0,D7.W),A0
0002A8C6 <AmiBlitz3.ab3@11770>   MOVE.b D2,(A0)+                                          ;put in struct length
0002A8CC <AmiBlitz3.ab3@11771>   LEA ptr_parameterstore,A1
0002A8CE <AmiBlitz3.ab3@11772>   MOVEQ #0,d0
0002A8D0 <AmiBlitz3.ab3@11773>   MOVEQ #0,d1
0002A8D2 <AmiBlitz3.ab3@11776>   MOVE.b (A1)+,d1
0002A8D4 <AmiBlitz3.ab3@11779>   MOVE.b d1,(A0)+
0002A8D8 <AmiBlitz3.ab3@11780>   BNE.w addlabel_loop2
0002A8DC <AmiBlitz3.ab3@11781> BRA.w reget
0002A8DE <AmiBlitz3.ab3@11785>   MOVEQ.l #$13,D7
0002A8E4 <AmiBlitz3.ab3@11786>   LEA constantbase,A2
0002A8E8 <AmiBlitz3.ab3@11787> BRA.w findlab
0002A8EA <AmiBlitz3.ab3@11791>   MOVEQ.l #$05+8,D7                                        ;#5,d7 org source
0002A8F0 <AmiBlitz3.ab3@11792>   LEA xinclude_base,A2
0002A8F4 <AmiBlitz3.ab3@11793> BRA.w findlab
0002A8F6 <AmiBlitz3.ab3@11797>   MOVEQ.l #$09,D7
0002A8FC <AmiBlitz3.ab3@11798>   LEA firstconst,A2
0002A900 <AmiBlitz3.ab3@11799> BRA.w findlab
0002A902 <AmiBlitz3.ab3@11803>   MOVEQ.l #$0d,D7                                          ;find macro
0002A908 <AmiBlitz3.ab3@11804>   LEA macrobase,A2
0002A90C <AmiBlitz3.ab3@11805> BRA.w findlab
0002A912 <AmiBlitz3.ab3@11809>   LEA labelhash,A2
0002A914 <AmiBlitz3.ab3@11810>   MOVEQ.l #$13,D7
0002A916 <AmiBlitz3.ab3@11811>   EXT.l d2
0002A91C <AmiBlitz3.ab3@11812>   LEA ptr_parameterstore,A0
0002A91E <AmiBlitz3.ab3@11813>   MOVEQ #0,d0
0002A920 <AmiBlitz3.ab3@11814>   MOVEQ #0,d1
0002A922 <AmiBlitz3.ab3@11817>     MOVE.b (a0)+,d1
0002A926 <AmiBlitz3.ab3@11818>     BEQ 'l15
0002A92C <AmiBlitz3.ab3@11819>     !hashalgo
0002A930 <AmiBlitz3.ab3@11820> BRA 'l20
0002A936 <AmiBlitz3.ab3@11823>   AND.l #hashsize,d0
0002A938 <AmiBlitz3.ab3@11824>   ASL.l #2,d0
0002A93C <AmiBlitz3.ab3@11825>   MOVE.l 0(a2,d0),d0
0002A940 <AmiBlitz3.ab3@11826> BRA 'l11
0002A944 <AmiBlitz3.ab3@11829>   MOVE.l $c(A2),D0                                         ;find label
0002A948 <AmiBlitz3.ab3@11832>   BEQ findlab__no
0002A94A <AmiBlitz3.ab3@11833>   MOVEA.l D0,A2
0002A94C <AmiBlitz3.ab3@11834>   MOVEQ.l #$00,D0
0002A950 <AmiBlitz3.ab3@11835>   MOVE.b -$1(A2,D7.l),D0
0002A956 <AmiBlitz3.ab3@11836>   LEA ptr_parameterstore,A0
0002A958 <AmiBlitz3.ab3@11837>   SUB.l D7,D0
0002A95A <AmiBlitz3.ab3@11838>   SUBQ.l #1,D0
0002A95C <AmiBlitz3.ab3@11839>   CMP.l D0,D2
0002A960 <AmiBlitz3.ab3@11840>    BNE.b 'l10
0002A964 <AmiBlitz3.ab3@11841>   LEA $0(A2,D7.W),A1
0002A966 <AmiBlitz3.ab3@11842>   SUBQ.l #1,D0
0002A968 <AmiBlitz3.ab3@11845>     MOVE.b (a1)+,d1
0002A96A <AmiBlitz3.ab3@11846>     CMP.b (a0)+,d1
0002A96E <AmiBlitz3.ab3@11848>     BNE.b 'l10
0002A972 <AmiBlitz3.ab3@11849>   DBF D0,'l201
0002A976 <AmiBlitz3.ab3@11851>   BSR.w reget
0002A978 <AmiBlitz3.ab3@11852>   CMP.w D0,D0
0002A97A <AmiBlitz3.ab3@11853> RTS
0002A97C <AmiBlitz3.ab3@11857>   MOVEQ.l #$0B,D7
0002A980 <AmiBlitz3.ab3@11858> BRA.w findlab
0002A986 <AmiBlitz3.ab3@11862>   LEA firstproc,A2
0002A98C <AmiBlitz3.ab3@11863>   MOVE.l #$21+#funcentry_extend,D7
0002A990 <AmiBlitz3.ab3@11864> BRA findlab
0002A996 <AmiBlitz3.ab3@11868>   LEA firstfor,A2
0002A998 <AmiBlitz3.ab3@11869>   MOVEQ.l #$11,D7
0002A99C <AmiBlitz3.ab3@11870> BRA.w findlab
0002A99E <AmiBlitz3.ab3@11874>   MOVEQ.l #$0F,D7
0002A9A2 <AmiBlitz3.ab3@11875> BRA.w findlab
0002A9A4 <AmiBlitz3.ab3@11879>   MOVEQ.l #$0F+4,D7
0002A9AA <AmiBlitz3.ab3@11880>   TST.b newvariable
0002A9AE <AmiBlitz3.ab3@11881>    BNE.w findlab
0002A9B4 <AmiBlitz3.ab3@11882>   LEA variablehash,A2
0002A9BA <AmiBlitz3.ab3@11883>   LEA ptr_parameterstore,A0
0002A9BC <AmiBlitz3.ab3@11884>   MOVEQ #0,d0
0002A9BE <AmiBlitz3.ab3@11885>   MOVEQ #0,d1
0002A9C0 <AmiBlitz3.ab3@11888>     MOVE.b (a0)+,d1
0002A9C4 <AmiBlitz3.ab3@11889>     BEQ 'l15
0002A9CA <AmiBlitz3.ab3@11890>     !hashalgo
0002A9CE <AmiBlitz3.ab3@11891> BRA 'l20
0002A9D4 <AmiBlitz3.ab3@11894>   AND.l #hashsize,d0
0002A9D6 <AmiBlitz3.ab3@11895>   ASL.l #2,d0
0002A9DA <AmiBlitz3.ab3@11896>   MOVE.l 0(a2,d0),d0
0002A9DE <AmiBlitz3.ab3@11897> BRA 'l11
0002A9E2 <AmiBlitz3.ab3@11900>   MOVE.l $e(A2),D0                                         ;find label
0002A9E6 <AmiBlitz3.ab3@11903>   BEQ findlab__no
0002A9E8 <AmiBlitz3.ab3@11904>   MOVEA.l D0,A2
0002A9EA <AmiBlitz3.ab3@11905>   MOVEQ.l #$00,D0
0002A9EE <AmiBlitz3.ab3@11906>   MOVE.b -$1(A2,D7.W),D0
0002A9F4 <AmiBlitz3.ab3@11907>   LEA ptr_parameterstore,A0
0002A9F6 <AmiBlitz3.ab3@11908>   SUB.w D7,D0
0002A9F8 <AmiBlitz3.ab3@11909>   SUBQ.l #1,D0
0002A9FA <AmiBlitz3.ab3@11910>   CMP.w D0,D2
0002A9FE <AmiBlitz3.ab3@11911>    BNE.b 'l10
0002AA02 <AmiBlitz3.ab3@11912>   LEA $0(A2,D7.W),A1
0002AA04 <AmiBlitz3.ab3@11913>   SUBQ.l #1,D0
0002AA06 <AmiBlitz3.ab3@11916>     MOVE.b (a1)+,d1
0002AA08 <AmiBlitz3.ab3@11917>     CMP.b (a0)+,d1
0002AA0C <AmiBlitz3.ab3@11919>     BNE.b 'l10
0002AA10 <AmiBlitz3.ab3@11920>   DBF D0,'l201
0002AA14 <AmiBlitz3.ab3@11922>   BSR.w reget
0002AA16 <AmiBlitz3.ab3@11923>   CMP.w D0,D0
0002AA18 <AmiBlitz3.ab3@11924> RTS
0002AA1A <AmiBlitz3.ab3@11937>     MOVE.l (A2),D0                                         ;find label
0002AA1E <AmiBlitz3.ab3@11938>      BEQ.b findlab__no
0002AA20 <AmiBlitz3.ab3@11939>     MOVEA.l D0,A2
0002AA22 <AmiBlitz3.ab3@11940>     MOVEQ.l #$00,D0
0002AA26 <AmiBlitz3.ab3@11941>     MOVE.b -$1(A2,D7.W),D0
0002AA28 <AmiBlitz3.ab3@11942>     SUB.l D7,D0
0002AA2A <AmiBlitz3.ab3@11943>     SUBQ.l #1,D0
0002AA2C <AmiBlitz3.ab3@11944>   CMP.w D0,D2
0002AA30 <AmiBlitz3.ab3@11945>   BNE.b findlab__loop
0002AA34 <AmiBlitz3.ab3@11947>   LEA $0(A2,D7.W),A1
0002AA3A <AmiBlitz3.ab3@11948>   LEA ptr_parameterstore,A0
0002AA3C <AmiBlitz3.ab3@11949>   SUBQ.l #1,D0
0002AA3E <AmiBlitz3.ab3@11952>     MOVE.b (a1)+,d1
0002AA40 <AmiBlitz3.ab3@11953>     CMP.b (a0)+,d1
0002AA44 <AmiBlitz3.ab3@11955>     BNE.b findlab__loop
0002AA48 <AmiBlitz3.ab3@11956>   DBF D0,findlab__loop2
0002AA4C <AmiBlitz3.ab3@11958>   BSR.w reget
0002AA4E <AmiBlitz3.ab3@11959>   CMP.w D0,D0
0002AA50 <AmiBlitz3.ab3@11960> RTS
0002AA54 <AmiBlitz3.ab3@11963>   BSR.w reget
0002AA56 <AmiBlitz3.ab3@11964>   MOVEQ.l #-$01,D1
0002AA58 <AmiBlitz3.ab3@11965> RTS
0002AA5E <AmiBlitz3.ab3@11969>   MOVEA.l alllocals,A4
0002AA64 <AmiBlitz3.ab3@11970>   CLR.l alllocals
0002AA68 <AmiBlitz3.ab3@11974>     CMPA.w #$0,A4
0002AA6C <AmiBlitz3.ab3@11975>      BEQ.b freeprocvs__done
0002AA70 <AmiBlitz3.ab3@11976>     MOVEA.l $4(A4),A3
0002AA74 <AmiBlitz3.ab3@11978>     MOVEA.l $8(A4),A3
0002AA76 <AmiBlitz3.ab3@11980>     MOVEA.l A4,A1
0002AA78 <AmiBlitz3.ab3@11981>     MOVEA.l (A4),A4
0002AA7A <AmiBlitz3.ab3@11982>     MOVEQ.l #$0C,D0
0002AA80 <AmiBlitz3.ab3@11983>     MOVEA.l _execbase,A6
0002AA86 <AmiBlitz3.ab3@11984>     MOVE.l mempool,a0
0002AA8A <AmiBlitz3.ab3@11985>     JSR _FreePooled(A6)
0002AA8E <AmiBlitz3.ab3@11986> BRA.b freeprocvs__loop
0002AA94 <AmiBlitz3.ab3@11989>   CLR.l firstglob                                          ;fix 2*aclearallvar called
0002AA9A <AmiBlitz3.ab3@11990>   CLR.l firstlocal
0002AAA0 <AmiBlitz3.ab3@11991>   CLR.l sharebase
0002AAA6 <AmiBlitz3.ab3@11992>   TST.l mempool2
0002AAAA <AmiBlitz3.ab3@11993>   BEQ freeprocvs__done_l10
0002AAB0 <AmiBlitz3.ab3@11995>   MOVEA.l _execbase,A6
0002AAB6 <AmiBlitz3.ab3@11996>   MOVE.l mempool2,a0
0002AABC <AmiBlitz3.ab3@11997>   CLR.l mempool2
0002AAC0 <AmiBlitz3.ab3@11998>   JSR _DeletePool(a6)
0002AAC6 <AmiBlitz3.ab3@12001>   MOVE.l _execbase,a6
0002AACC <AmiBlitz3.ab3@12002>   MOVE.l #$10000,d0
0002AAD2 <AmiBlitz3.ab3@12003>   MOVE.l #80000,d1
0002AAD4 <AmiBlitz3.ab3@12004>   MOVE.l d1,d2
0002AAD8 <AmiBlitz3.ab3@12005>   JSR _CreatePool(a6)
0002AADE <AmiBlitz3.ab3@12006>   MOVE.l d0,mempool2
0002AAE0 <AmiBlitz3.ab3@12007> RTS
0002AAE4 <AmiBlitz3.ab3@12011>   CMPA.w #$0,A3
0002AAE8 <AmiBlitz3.ab3@12012>    BEQ.w freevars__done
0002AAEA <AmiBlitz3.ab3@12013>   MOVEA.l A3,A1
0002AAEC <AmiBlitz3.ab3@12014>   MOVEA.l (A3),A3
0002AAEE <AmiBlitz3.ab3@12015>   MOVEQ.l #$00,D0
0002AAF2 <AmiBlitz3.ab3@12016>   MOVE.b $E(A1),D0
0002AAF8 <AmiBlitz3.ab3@12017>   MOVEA.l _execbase,A6
0002AAFE <AmiBlitz3.ab3@12018>   MOVE.l mempool2,a0
0002AB02 <AmiBlitz3.ab3@12019>   JSR _FreePooled(A6)
0002AB06 <AmiBlitz3.ab3@12020> BRA.w freevars
0002AB0A <AmiBlitz3.ab3@12023>     CMPA.w #$0,A3
0002AB0E <AmiBlitz3.ab3@12024>      BEQ.w freevars__done
0002AB10 <AmiBlitz3.ab3@12025>     MOVEA.l A3,A1
0002AB12 <AmiBlitz3.ab3@12026>     MOVEA.l (A3),A3
0002AB14 <AmiBlitz3.ab3@12027>     MOVEQ.l #$00,D0
0002AB18 <AmiBlitz3.ab3@12028>     MOVE.b $E+4(A1),D0
0002AB1E <AmiBlitz3.ab3@12029>     MOVEA.l _execbase,A6
0002AB24 <AmiBlitz3.ab3@12030>     MOVE.l mempool2,a0
0002AB28 <AmiBlitz3.ab3@12031>     JSR _FreePooled(A6)
0002AB2C <AmiBlitz3.ab3@12032> BRA.w freevarsb
0002AB2E <AmiBlitz3.ab3@12035> RTS
0002AB34 <AmiBlitz3.ab3@12039>   MOVEA.l currentlabeladdr,A0
0002AB3A <AmiBlitz3.ab3@12040>   MOVE.l a0,lastlabel
0002AB3C <AmiBlitz3.ab3@12041>   MOVEA.l (A0),A2
0002AB3E <AmiBlitz3.ab3@12042>   CLR.l (A0)
0002AB44 <AmiBlitz3.ab3@12043>   MOVEA.l _execbase,A6
0002AB48 <AmiBlitz3.ab3@12046>   CMPA.w #$0,A2
0002AB4C <AmiBlitz3.ab3@12047>    BEQ.w clearlabels__done
0002AB50 <AmiBlitz3.ab3@12048>   MOVE.l $4(A2),D0
0002AB54 <AmiBlitz3.ab3@12049>   BTST #$0,D0
0002AB58 <AmiBlitz3.ab3@12050>    BNE.w clearlabels__skip
0002AB5A <AmiBlitz3.ab3@12051>   MOVEA.l D0,A3
0002AB5E <AmiBlitz3.ab3@12054>     CMPA.w #$0,A3
0002AB62 <AmiBlitz3.ab3@12055>      BEQ.w clearlabels__skip
0002AB64 <AmiBlitz3.ab3@12056>     MOVEA.l A3,A1
0002AB66 <AmiBlitz3.ab3@12057>     MOVEA.l (A3),A3
0002AB68 <AmiBlitz3.ab3@12058>     MOVEQ.l #$0C+2,D0                                      ;cancel fix
0002AB6E <AmiBlitz3.ab3@12059>     MOVE.l mempool,a0
0002AB72 <AmiBlitz3.ab3@12060>     JSR _FreePooled(A6)
0002AB76 <AmiBlitz3.ab3@12061> BRA.w clearlabels__loop2
0002AB78 <AmiBlitz3.ab3@12064>   MOVEQ.l #$00,D0
0002AB7C <AmiBlitz3.ab3@12065>   MOVE.b $12(A2),D0
0002AB7E <AmiBlitz3.ab3@12066>   MOVEA.l A2,A1
0002AB80 <AmiBlitz3.ab3@12067>   MOVEA.l (A2),A2
0002AB86 <AmiBlitz3.ab3@12068>   MOVE.l mempool2,a0
0002AB8A <AmiBlitz3.ab3@12070> BRA.w clearlabels__loop
0002AB8C <AmiBlitz3.ab3@12073> RTS
0002AB92 <AmiBlitz3.ab3@12077>   MOVEA.l firstpend,A3
0002AB98 <AmiBlitz3.ab3@12078>   CLR.l firstpend
0002AB9E <AmiBlitz3.ab3@12079>   MOVEA.l _execbase,A6
0002ABA2 <AmiBlitz3.ab3@12082>     CMPA.w #$0,A3
0002ABA6 <AmiBlitz3.ab3@12083>      BEQ.w freepends__done
0002ABA8 <AmiBlitz3.ab3@12084>     MOVEA.l A3,A1
0002ABAA <AmiBlitz3.ab3@12085>     MOVEQ.l #$08,D0
0002ABAC <AmiBlitz3.ab3@12086>     MOVEA.l (A3),A3
0002ABB2 <AmiBlitz3.ab3@12087>     MOVE.l mempool,a0
0002ABB6 <AmiBlitz3.ab3@12088>     JSR _FreePooled(A6)
0002ABBA <AmiBlitz3.ab3@12089> BRA.w fpnd2
0002ABBC <AmiBlitz3.ab3@12092> RTS
0002ABC2 <AmiBlitz3.ab3@12096>   MOVEA.l firstproc,A2
0002ABC8 <AmiBlitz3.ab3@12097>   CLR.l firstproc
0002ABCE <AmiBlitz3.ab3@12098>   MOVEA.l _execbase,A6
0002ABD2 <AmiBlitz3.ab3@12101>     CMPA.w #$0,A2
0002ABD6 <AmiBlitz3.ab3@12102>      BEQ.w clearfunctionlist__done
0002ABD8 <AmiBlitz3.ab3@12103>     MOVEA.l A2,A1
0002ABDA <AmiBlitz3.ab3@12104>     MOVEA.l (A2),A2
0002ABDC <AmiBlitz3.ab3@12105>     MOVEQ.l #$00,D0
0002ABE0 <AmiBlitz3.ab3@12106>     MOVE.b $20+#funcentry_extend(A1),D0
0002ABE6 <AmiBlitz3.ab3@12107>     MOVE.l mempool2,a0
0002ABEA <AmiBlitz3.ab3@12108>     JSR _FreePooled(A6)
0002ABEE <AmiBlitz3.ab3@12109> BRA.w clearfunctionlist__loop
0002ABF0 <AmiBlitz3.ab3@12112> RTS
0002ABF4 <AmiBlitz3.ab3@12116>   CMPA.w #$0,A2
0002ABF8 <AmiBlitz3.ab3@12117>    BEQ.w freetypes__done
0002ABFC <AmiBlitz3.ab3@12118>   MOVEA.l $4(A2),A3
0002AC00 <AmiBlitz3.ab3@12119>   CMPA.w #$FF,A3
0002AC04 <AmiBlitz3.ab3@12120>    BEQ.w freetypes__noway
0002AC08 <AmiBlitz3.ab3@12124>    BSR.w freevars
0002AC0A <AmiBlitz3.ab3@12127>     MOVEA.l A2,A1
0002AC0C <AmiBlitz3.ab3@12128>     MOVEA.l (A2),A2
0002AC0E <AmiBlitz3.ab3@12129>     MOVEQ.l #$00,D0
0002AC12 <AmiBlitz3.ab3@12130>     MOVE.b $A(A1),D0
0002AC18 <AmiBlitz3.ab3@12131>     MOVEA.l _execbase,A6
0002AC1E <AmiBlitz3.ab3@12132>     MOVE.l mempool2,a0
0002AC22 <AmiBlitz3.ab3@12133>     JSR _FreePooled(A6)
0002AC26 <AmiBlitz3.ab3@12134> BRA.w freetypes
0002AC28 <AmiBlitz3.ab3@12137> RTS
0002AC2E <AmiBlitz3.ab3@12141>   JSR uselib2
0002AC34 <AmiBlitz3.ab3@12143>   CLR.w notshared
0002AC3A <AmiBlitz3.ab3@12144>   CLR.w varmode
0002AC40 <AmiBlitz3.ab3@12145>   MOVE.w proceduremode,D1
0002AC44 <AmiBlitz3.ab3@12146>    BNE.w JL_0_8F4E
0002AC4A <AmiBlitz3.ab3@12147>   LEA varbase,A2
0002AC50 <AmiBlitz3.ab3@12148>   LEA ptr_parameterstore,a0
0002AC54 <AmiBlitz3.ab3@12149>   CMP.b #$22,(a0)
0002AC58 <AmiBlitz3.ab3@12150>   BNE JL_0_8E5E
0002AC5A <AmiBlitz3.ab3@12151>   MOVEQ #0,d0
0002AC60 <AmiBlitz3.ab3@12152> JMP error
0002AC64 <AmiBlitz3.ab3@12155>   BSR.w findvariable
0002AC68 <AmiBlitz3.ab3@12158>   BNE.w JL_0_8E7E
0002AC6E <AmiBlitz3.ab3@12161>   MOVE.b flagmask+1,D1
0002AC72 <AmiBlitz3.ab3@12162>   MOVE.b $7(A2),D3
0002AC74 <AmiBlitz3.ab3@12163>   EOR.b D3,D1
0002AC78 <AmiBlitz3.ab3@12164>   BNE 'l2
0002AC80 <AmiBlitz3.ab3@12165>   CMP.b #2,nowdeclare
0002AC84 <AmiBlitz3.ab3@12166>   BEQ errormsg_declaredtwice
0002AC88 <AmiBlitz3.ab3@12167> BRA.w JL_0_8FA8
0002AC8C <AmiBlitz3.ab3@12170>   BSR.w findlab
0002AC90 <AmiBlitz3.ab3@12171>   BNE 'l1
0002AC98 <AmiBlitz3.ab3@12172>   CMP.b #2,nowdeclare
0002AC9C <AmiBlitz3.ab3@12173>   BEQ errormsg_declaredtwice
0002AC9E <AmiBlitz3.ab3@12174>   CMP.w d0,d0
0002ACA2 <AmiBlitz3.ab3@12177> BRA.w JL_0_8E62
0002ACA4 <AmiBlitz3.ab3@12180>    MOVE.l a2,-(a7)
0002ACAA <AmiBlitz3.ab3@12181>    LEA sharebase,a2
0002ACAC <AmiBlitz3.ab3@12182>    MOVEQ #$f+4,d7
0002ACB0 <AmiBlitz3.ab3@12183>    BSR.w findlab
0002ACB4 <AmiBlitz3.ab3@12184>    BEQ 'l2x
0002ACB6 <AmiBlitz3.ab3@12185>    MOVE.l (a7)+,a2
0002ACBA <AmiBlitz3.ab3@12186> BRA 'cont
0002ACBC <AmiBlitz3.ab3@12189>   ADDQ.l #4,a7
0002ACC2 <AmiBlitz3.ab3@12190>   CLR.w varmode
0002ACC8 <AmiBlitz3.ab3@12191>   MOVE.b flagmask+1,D1
0002ACCC <AmiBlitz3.ab3@12192>   MOVE.b $7(A2),D3
0002ACCE <AmiBlitz3.ab3@12193>   EOR.b D3,D1
0002ACD2 <AmiBlitz3.ab3@12194>   BNE vardeclareerr
0002ACD6 <AmiBlitz3.ab3@12195> BRA JL_0_8FA8
0002ACDC <AmiBlitz3.ab3@12198>    MOVE.w nonew,D1
0002ACE0 <AmiBlitz3.ab3@12199>    BNE.w nonewerr
0002ACE6 <AmiBlitz3.ab3@12200>    TST.b nowdeclare
0002ACEA <AmiBlitz3.ab3@12201>    BNE 'l2
0002ACF0 <AmiBlitz3.ab3@12202>    TST.b declare2
0002ACF4 <AmiBlitz3.ab3@12203>    BEQ 'l1
0002ACF8 <AmiBlitz3.ab3@12204>    CMP.b #$2e,d0
0002ACFC <AmiBlitz3.ab3@12205>    BEQ 'l2
0002AD00 <AmiBlitz3.ab3@12206>    CMP.b #"$",d0
0002AD04 <AmiBlitz3.ab3@12207>    BEQ 'l2
0002AD08 <AmiBlitz3.ab3@12208> BRA vardeclareerr
0002AD0E <AmiBlitz3.ab3@12211>   TST.b declare
0002AD12 <AmiBlitz3.ab3@12212>    BNE vardeclareerr
0002AD16 <AmiBlitz3.ab3@12215>   BSR.w addvariable
0002AD1C <AmiBlitz3.ab3@12216>   NOT.w notshared
0002AD1E <AmiBlitz3.ab3@12217>   MOVEA.l A2,A3
0002AD24 <AmiBlitz3.ab3@12218>   MOVEA.l defaulttype,A2
0002AD28 <AmiBlitz3.ab3@12219>   CMP.w #$2E,D0
0002AD2C <AmiBlitz3.ab3@12220>    BEQ.w JL_0_8EB8
0002AD30 <AmiBlitz3.ab3@12221>   CMP.w #$24,D0
0002AD34 <AmiBlitz3.ab3@12222>    BNE.w JL_0_8ECA
0002AD3A <AmiBlitz3.ab3@12223>   LEA newtype_string,A2
0002AD3E <AmiBlitz3.ab3@12224>    BSR.w get1bytemain
0002AD42 <AmiBlitz3.ab3@12225> BRA.w JL_0_8ECA
0002AD48 <AmiBlitz3.ab3@12228> JMP JUMP_notypeerr
0002AD4C <AmiBlitz3.ab3@12231>    BSR.w getparameter2
0002AD52 <AmiBlitz3.ab3@12232>   LEA newtypebase,A2
0002AD56 <AmiBlitz3.ab3@12233>    BSR.w findtype
0002AD5A <AmiBlitz3.ab3@12234>    BNE.w notypeerr3
0002AD60 <AmiBlitz3.ab3@12237>   CMPA.l #newtype_byte,A2
0002AD64 <AmiBlitz3.ab3@12238>    BEQ.w JL_0_8EECb
0002AD6A <AmiBlitz3.ab3@12239>   MOVE.w varmode,D1
0002AD6E <AmiBlitz3.ab3@12240>    BNE.w JL_0_8EE4b
0002AD74 <AmiBlitz3.ab3@12241>   ADDQ.w #1,globalvarpointer
0002AD7C <AmiBlitz3.ab3@12244>   BCLR #$0,globalvarpointer+1
0002AD80 <AmiBlitz3.ab3@12247>   MOVE.l A2,$A(A3)
0002AD88 <AmiBlitz3.ab3@12248>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002AD8A <AmiBlitz3.ab3@12250>   MOVEQ.l #$04,D1
0002AD92 <AmiBlitz3.ab3@12251>   BTST #$0,flagmask+1
0002AD96 <AmiBlitz3.ab3@12252>    BNE.w JL_0_8F22b
0002AD9E <AmiBlitz3.ab3@12253>   BTST #$1,flagmask+1
0002ADA2 <AmiBlitz3.ab3@12254>    BNE.w JL_0_8F22b
0002ADAA <AmiBlitz3.ab3@12255>   CMPI.l #$100,$4(A2)
0002ADAE <AmiBlitz3.ab3@12256>    BCC.w JL_0_8F22b
0002ADB2 <AmiBlitz3.ab3@12257>   MOVE.w $8(A2),D1
0002ADB8 <AmiBlitz3.ab3@12260>   TST.w varmode
0002ADBC <AmiBlitz3.ab3@12261> BRA.w JL_0_8F3E
0002ADC0 <AmiBlitz3.ab3@12270>   BSR.w getparameter2
0002ADC6 <AmiBlitz3.ab3@12271>   LEA newtypebase,A2
0002ADCA <AmiBlitz3.ab3@12272>    BSR.w findtype
0002ADCE <AmiBlitz3.ab3@12273>    BNE.w notypeerr
0002ADD4 <AmiBlitz3.ab3@12276>   CMPA.l #newtype_byte,A2
0002ADD8 <AmiBlitz3.ab3@12277>    BEQ.w JL_0_8EEC
0002ADDE <AmiBlitz3.ab3@12278>   MOVE.w varmode,D1
0002ADE2 <AmiBlitz3.ab3@12279>    BNE.w JL_0_8EE4
0002ADE8 <AmiBlitz3.ab3@12280>   ADDQ.w #1,globalvarpointer
0002ADF0 <AmiBlitz3.ab3@12283>   BCLR #$0,globalvarpointer+1
0002ADF4 <AmiBlitz3.ab3@12286>   MOVE.l A2,$A(A3)
0002ADFC <AmiBlitz3.ab3@12287>   MOVE.w flagmask,$6(A3)                                  ;??????????
0002ADFE <AmiBlitz3.ab3@12288>   MOVEQ.l #$04,D1
0002AE06 <AmiBlitz3.ab3@12289>   BTST #$0,flagmask+1
0002AE0A <AmiBlitz3.ab3@12290>    BNE.w JL_0_8F22
0002AE12 <AmiBlitz3.ab3@12291>   BTST #$1,flagmask+1
0002AE16 <AmiBlitz3.ab3@12292>    BNE.w JL_0_8F22
0002AE1E <AmiBlitz3.ab3@12293>   CMPI.l #$100,$4(A2)
0002AE22 <AmiBlitz3.ab3@12294>    BCC.w JL_0_8F22
0002AE26 <AmiBlitz3.ab3@12295>   MOVE.w $8(A2),D1
0002AE2C <AmiBlitz3.ab3@12298>   TST.w varmode
0002AE30 <AmiBlitz3.ab3@12299>    BEQ.w JL_0_8F3E
0002AE32 <AmiBlitz3.ab3@12300>   NEG.w D1
0002AE38 <AmiBlitz3.ab3@12301>   ADD.w D1,globalvarpointer
0002AE40 <AmiBlitz3.ab3@12302>   MOVE.w globalvarpointer,$4(A3)
0002AE42 <AmiBlitz3.ab3@12303> RTS
0002AE4A <AmiBlitz3.ab3@12306>   MOVE.w globalvarpointer,$4(A3)
0002AE50 <AmiBlitz3.ab3@12307>   ADD.w D1,globalvarpointer
0002AE52 <AmiBlitz3.ab3@12308> RTS
0002AE58 <AmiBlitz3.ab3@12312>   LEA firstglob,A2
0002AE5C <AmiBlitz3.ab3@12313>    BSR.w findvariable2
0002AE60 <AmiBlitz3.ab3@12316>   BNE.w JL_0_8F74
0002AE66 <AmiBlitz3.ab3@12317>   MOVE.b flagmask+1,D1
0002AE6A <AmiBlitz3.ab3@12318>   MOVE.b $7(A2),D3
0002AE6C <AmiBlitz3.ab3@12319>   EOR.b D3,D1
0002AE70 <AmiBlitz3.ab3@12320>    BEQ.w JL_0_8FA8
0002AE74 <AmiBlitz3.ab3@12321>    BSR.w findlab
0002AE78 <AmiBlitz3.ab3@12322> BRA.w JL_0_8F58
0002AE80 <AmiBlitz3.ab3@12325>   MOVE.w #$FFFF,varmode
0002AE86 <AmiBlitz3.ab3@12326>   MOVE.w globalvarpointer,-(A7)
0002AE90 <AmiBlitz3.ab3@12327>   MOVE.w locvaroff,globalvarpointer
0002AE96 <AmiBlitz3.ab3@12328>   LEA firstlocal,A2
0002AE9E <AmiBlitz3.ab3@12329>   MOVE.b #1,newvariable
0002AEA2 <AmiBlitz3.ab3@12330>    BSR.w JL_0_8E5E
0002AEA8 <AmiBlitz3.ab3@12331>   CLR.b newvariable
0002AEB2 <AmiBlitz3.ab3@12332>   MOVE.w globalvarpointer,locvaroff
0002AEB8 <AmiBlitz3.ab3@12333>   MOVE.w (A7)+,globalvarpointer
0002AEBA <AmiBlitz3.ab3@12334> RTS
0002AEBC <AmiBlitz3.ab3@12337>   MOVEA.l A2,A3
0002AEC0 <AmiBlitz3.ab3@12338>   CMP.w #$2E,D0
0002AEC4 <AmiBlitz3.ab3@12339>    BEQ.w JL_0_8FCE
0002AEC8 <AmiBlitz3.ab3@12340>   CMP.w #$24,D0
0002AECC <AmiBlitz3.ab3@12341>    BNE.w JL_0_8FE8
0002AED4 <AmiBlitz3.ab3@12342>   CMPI.l #newtype_string,$A(A3)
0002AED8 <AmiBlitz3.ab3@12343>    BNE.w rongtypeerr
0002AEDC <AmiBlitz3.ab3@12344>    BSR.w get1bytemain
0002AEE0 <AmiBlitz3.ab3@12345> BRA.w JL_0_8FE8
0002AEE4 <AmiBlitz3.ab3@12348>    BSR.w getparameter2
0002AEEA <AmiBlitz3.ab3@12349>   LEA newtypebase,A2
0002AEEE <AmiBlitz3.ab3@12350>    BSR.w findtype
0002AEF2 <AmiBlitz3.ab3@12351>    BNE.w notypeerr
0002AEF6 <AmiBlitz3.ab3@12352>   CMPA.l $A(A3),A2
0002AEFA <AmiBlitz3.ab3@12353>    BNE.w rongtypeerr
0002AF02 <AmiBlitz3.ab3@12355>   BTST #$0,flagmask+1
0002AF06 <AmiBlitz3.ab3@12356>    BEQ.w JL_0_8FFE
0002AF0C <AmiBlitz3.ab3@12357>   BTST #$0,$7(A3)
0002AF10 <AmiBlitz3.ab3@12358>    BEQ.w pointerr
0002AF14 <AmiBlitz3.ab3@12361>   MOVEA.l $A(A3),A2
0002AF16 <AmiBlitz3.ab3@12362> RTS
0002AF18 <AmiBlitz3.ab3@12366>    TST.l D3                                                ;newtype >32kb  .w to .l
0002AF1C <AmiBlitz3.ab3@12367>    BEQ.w JL_0_9042
0002AF26 <AmiBlitz3.ab3@12368>    MOVE.l destpointer,loada
0002AF2A <AmiBlitz3.ab3@12371> BRA JL_0_9032
0002AF2E <AmiBlitz3.ab3@12373>   CMP.w #$9,D3                                             ;_addq_arrays
0002AF32 <AmiBlitz3.ab3@12374>    BCC.w JL_0_9032
0002AF38 <AmiBlitz3.ab3@12375>   MOVE.w d3,arrayoffset
0002AF3C <AmiBlitz3.ab3@12376>   ANDI.w #$7,D3
0002AF3E <AmiBlitz3.ab3@12377>   LSL.w #8,D3
0002AF40 <AmiBlitz3.ab3@12378>   LSL.w #1,D3
0002AF48 <AmiBlitz3.ab3@12379>   ANDI.w #$F1FF,addqa0
0002AF4E <AmiBlitz3.ab3@12380>   OR.w D3,addqa0
0002AF54 <AmiBlitz3.ab3@12381>   MOVE.w addqa0,D1
0002AF58 <AmiBlitz3.ab3@12382> BRA.w writeword
0002AF5E <AmiBlitz3.ab3@12385>   CMP.l #$7fff,d3                                          ;>32kb newtypes
0002AF62 <AmiBlitz3.ab3@12386>   BGT longoffset
0002AF68 <AmiBlitz3.ab3@12387>   MOVE.w D3,leaa0a0+2
0002AF6E <AmiBlitz3.ab3@12388>   MOVE.w d3,arrayoffset
0002AF74 <AmiBlitz3.ab3@12389>   MOVE.l leaa0a0,D1
0002AF78 <AmiBlitz3.ab3@12390>   BSR.w writelong
0002AF7A <AmiBlitz3.ab3@12393> RTS
0002AF7E <AmiBlitz3.ab3@12396>    MOVE.w #$d5fc,d1
0002AF82 <AmiBlitz3.ab3@12397>    BSR writeword
0002AF84 <AmiBlitz3.ab3@12398>    MOVE.l d3,d1
0002AF88 <AmiBlitz3.ab3@12399>    BSR.w writelong
0002AF8A <AmiBlitz3.ab3@12400> RTS
0002AF8E <AmiBlitz3.ab3@12404>   Dc.w $b0ad,0000                                          ;cmp.l $0(A5),D0    ;nooptimize
0002AF92 <AmiBlitz3.ab3@12407>    BCS.w arrchk3                                           
0002AF98 <AmiBlitz3.ab3@12408>    JSR $20000                                              ;jsr 0
0002AF9E <AmiBlitz3.ab3@12414>   TST.b fast
0002AFA2 <AmiBlitz3.ab3@12415>   BEQ 'l1
0002AFA4 <AmiBlitz3.ab3@12416>    MOVEQ #0,d1                                             ;faster arrays
0002AFAA <AmiBlitz3.ab3@12417>    MOVE.w regnum,d2
0002AFAC <AmiBlitz3.ab3@12418>    MOVE.w d2,d1
0002AFAE <AmiBlitz3.ab3@12419>    LSL.w #8,d1
0002AFB0 <AmiBlitz3.ab3@12420>    LSL.w #4,d1
0002AFB2 <AmiBlitz3.ab3@12421>    ADD.w d2,d1
0002AFB8 <AmiBlitz3.ab3@12422>    OR.l #$4c2d0000,d1
0002AFBE <AmiBlitz3.ab3@12423>    TST.w varmode
0002AFC2 <AmiBlitz3.ab3@12424>    BEQ 'l1a
0002AFC6 <AmiBlitz3.ab3@12425>    BCLR #16,d1
0002AFCA <AmiBlitz3.ab3@12428>    BSR writelong
0002AFCE <AmiBlitz3.ab3@12429>    MOVE.w $4(A7),D1
0002AFD2 <AmiBlitz3.ab3@12430>    BSR.w writeword
0002AFD8 <AmiBlitz3.ab3@12431>    MOVE.w regnum,D1
0002AFDA <AmiBlitz3.ab3@12432>   SUBQ.w #1,D1
0002AFDC <AmiBlitz3.ab3@12433>   LSL.w #8,D1
0002AFDE <AmiBlitz3.ab3@12434>   LSL.w #1,D1
0002AFE2 <AmiBlitz3.ab3@12435>   ORI.w #$D080,D1
0002AFE8 <AmiBlitz3.ab3@12436>   OR.w regnum,D1
0002AFEC <AmiBlitz3.ab3@12437>    BSR.w writeword
0002AFEE <AmiBlitz3.ab3@12438> RTS
0002AFF4 <AmiBlitz3.ab3@12441>   MOVE.w regnum,D2
0002AFF8 <AmiBlitz3.ab3@12442>   MOVE.w arrmul1(PC),D1
0002AFFA <AmiBlitz3.ab3@12443>   OR.w D2,D1
0002AFFC <AmiBlitz3.ab3@12444>   SUBQ.w #1,D1
0002B000 <AmiBlitz3.ab3@12445>    BSR.w writeword
0002B004 <AmiBlitz3.ab3@12446>   MOVE.w arrmul2(PC),D1
0002B006 <AmiBlitz3.ab3@12447>   OR.w D2,D1
0002B008 <AmiBlitz3.ab3@12448>   MOVE.w D2,D3
0002B00A <AmiBlitz3.ab3@12449>   SUBQ.w #1,D3
0002B00C <AmiBlitz3.ab3@12450>   LSL.w #8,D3
0002B00E <AmiBlitz3.ab3@12451>   LSL.w #1,D3
0002B010 <AmiBlitz3.ab3@12452>   OR.w D3,D1
0002B014 <AmiBlitz3.ab3@12453>    BSR.w writeword
0002B018 <AmiBlitz3.ab3@12454>   MOVE.w arrmul3(PC),D1
0002B01A <AmiBlitz3.ab3@12455>   MOVE.w D2,D3
0002B01C <AmiBlitz3.ab3@12456>   LSL.w #8,D3
0002B01E <AmiBlitz3.ab3@12457>   LSL.w #1,D3
0002B020 <AmiBlitz3.ab3@12458>   OR.w D3,D1
0002B024 <AmiBlitz3.ab3@12459>    BSR.w pokewda5s
0002B028 <AmiBlitz3.ab3@12460>   MOVE.w $4(A7),D1
0002B02A <AmiBlitz3.ab3@12461>   ADDQ.w #2,D1
0002B02E <AmiBlitz3.ab3@12462>    BSR.w writeword
0002B032 <AmiBlitz3.ab3@12463>   MOVE.w arrmul4(PC),D1
0002B034 <AmiBlitz3.ab3@12464>   MOVE.w D2,D3
0002B036 <AmiBlitz3.ab3@12465>   SUBQ.w #1,D3
0002B038 <AmiBlitz3.ab3@12466>   LSL.w #8,D3
0002B03A <AmiBlitz3.ab3@12467>   LSL.w #1,D3
0002B03C <AmiBlitz3.ab3@12468>   OR.w D3,D1
0002B040 <AmiBlitz3.ab3@12469>    BSR.w pokewda5s
0002B044 <AmiBlitz3.ab3@12470>   MOVE.w $4(A7),D1
0002B048 <AmiBlitz3.ab3@12471>    BSR.w writeword
0002B04C <AmiBlitz3.ab3@12472>   MOVE.w arrmul5(PC),D1
0002B04E <AmiBlitz3.ab3@12473>   OR.w D2,D1
0002B050 <AmiBlitz3.ab3@12474>   SUBQ.w #1,D1
0002B054 <AmiBlitz3.ab3@12475>    BSR.w writeword
0002B058 <AmiBlitz3.ab3@12476>   MOVE.w arrmul6(PC),D1
0002B05A <AmiBlitz3.ab3@12477>   OR.w D2,D1
0002B05C <AmiBlitz3.ab3@12478>   SUBQ.w #1,D1
0002B060 <AmiBlitz3.ab3@12479>    BSR.w writeword
0002B064 <AmiBlitz3.ab3@12480>   MOVE.w arrmul7(PC),D1
0002B066 <AmiBlitz3.ab3@12481>   OR.w D2,D1
0002B068 <AmiBlitz3.ab3@12482>   SUBQ.w #1,D1
0002B06A <AmiBlitz3.ab3@12483>   MOVE.w D2,D3
0002B06C <AmiBlitz3.ab3@12484>   LSL.w #8,D3
0002B06E <AmiBlitz3.ab3@12485>   LSL.w #1,D3
0002B070 <AmiBlitz3.ab3@12486>   OR.w D3,D1
0002B074 <AmiBlitz3.ab3@12487>    BSR.w writeword
0002B078 <AmiBlitz3.ab3@12488>   MOVE.w arrmul8(PC),D1
0002B07A <AmiBlitz3.ab3@12489>   MOVE.w D2,D3
0002B07C <AmiBlitz3.ab3@12490>   SUBQ.w #1,D3
0002B07E <AmiBlitz3.ab3@12491>   LSL.w #8,D3
0002B080 <AmiBlitz3.ab3@12492>   LSL.w #1,D3
0002B082 <AmiBlitz3.ab3@12493>   OR.w D3,D1
0002B086 <AmiBlitz3.ab3@12494>    BSR.w writeword
0002B08C <AmiBlitz3.ab3@12495>   MOVE.w regnum,D1
0002B08E <AmiBlitz3.ab3@12496>   SUBQ.w #1,D1
0002B090 <AmiBlitz3.ab3@12497>   LSL.w #8,D1
0002B092 <AmiBlitz3.ab3@12498>   LSL.w #1,D1
0002B096 <AmiBlitz3.ab3@12499>   ORI.w #$D080,D1
0002B09C <AmiBlitz3.ab3@12500>   OR.w regnum,D1
0002B0A0 <AmiBlitz3.ab3@12501> BRA.w writeword
0002B0A2 <AmiBlitz3.ab3@12509> arrmul1:   MOVE.l d0,-(a7)                                ;write array access
0002B0A4 <AmiBlitz3.ab3@12510> arrmul2:   MOVE  d0,d0
0002B0A8 <AmiBlitz3.ab3@12511> arrmul3:   MULU 0(a5),d0                                  ;mulu   x+2(a5),d1  ;lo*lo
0002B0AC <AmiBlitz3.ab3@12512> arrmul4:   MULU 0(a5),d0                                  ;mulu   x(a5),d0    ;hi*lo
0002B0AE <AmiBlitz3.ab3@12514> arrmul5:   SWAP d0
0002B0B0 <AmiBlitz3.ab3@12515> arrmul6:   CLR d0
0002B0B2 <AmiBlitz3.ab3@12516> arrmul7:   ADD.l d0,d0
0002B0B4 <AmiBlitz3.ab3@12517> arrmul8:   MOVE.l (a7)+,d0
0002B0B8 <AmiBlitz3.ab3@12522> listcode1:  Dc.b $24,$6D :              Dc.b $00,$00       ;MOVEA.L $0000(A5),A2      ;pointer to start of array data
0002B0BC <AmiBlitz3.ab3@12523> listcode2:  Dc.b $24,$6A,$FF,$E0                           ;MOVEA.L -$0020(A2),A2     ;pointer to current
0002B0BE <AmiBlitz3.ab3@12524> listarfix:  Dc.b $50,$4A                                   ;ADDQ.W  #8,A2
0002B0C4 <AmiBlitz3.ab3@12542>   CLR.l lastoffset_org
0002B0CA <AmiBlitz3.ab3@12543>   BTST #$1,$7(A3)
0002B0CE <AmiBlitz3.ab3@12544>    BEQ.w calcvar__notarr
0002B0D4 <AmiBlitz3.ab3@12545>   MOVE.w notshared,D1
0002B0D8 <AmiBlitz3.ab3@12546>    BNE.w noarrerr
0002B0DC <AmiBlitz3.ab3@12547>    BSR.w get1bytemain
0002B0E0 <AmiBlitz3.ab3@12548>   CMP.w #$29,D0
0002B0E4 <AmiBlitz3.ab3@12549>    BNE.w calcvar__notalist
0002B0EA <AmiBlitz3.ab3@12550>   BTST #$0,$6(A3)
0002B0EE <AmiBlitz3.ab3@12551>    BEQ.w nolisterr
0002B0F6 <AmiBlitz3.ab3@12552>   MOVE.w $4(A3),listcode1+2
0002B0FA <AmiBlitz3.ab3@12553>   MOVE.l listcode1(PC),D1
0002B0FE <AmiBlitz3.ab3@12554>    BSR.w pokela5s
0002B102 <AmiBlitz3.ab3@12555>   MOVE.l listcode2(PC),D1
0002B106 <AmiBlitz3.ab3@12556>    BSR.w writelong
0002B10C <AmiBlitz3.ab3@12557>   TST.b debugmode
0002B110 <AmiBlitz3.ab3@12558>    BEQ.w calcvar__nolrerr
0002B112 <AmiBlitz3.ab3@12562>   MOVE.l A2,-(A7)
0002B116 <AmiBlitz3.ab3@12563>   MOVE.w #$C315,D1
0002B11A <AmiBlitz3.ab3@12564>    BSR.w Atokejsr
0002B11C <AmiBlitz3.ab3@12565>   MOVEA.l (A7)+,A2
0002B120 <AmiBlitz3.ab3@12568>    MOVE.w listarfix(PC),D1                                 ;addq #8,a2
0002B124 <AmiBlitz3.ab3@12570>    BSR.w writeword
0002B128 <AmiBlitz3.ab3@12571> BRA.w calcvar__normalar
0002B12A <AmiBlitz3.ab3@12574> calcvar__listoff:   Ds.w 1
0002B130 <AmiBlitz3.ab3@12578>   CLR.w calcvar__listoff
0002B136 <AmiBlitz3.ab3@12579>   BTST #$0,$6(A3)
0002B13A <AmiBlitz3.ab3@12580>    BEQ.w calcvar__knop
0002B142 <AmiBlitz3.ab3@12581>   MOVE.w #$0008,calcvar__listoff                            ;adjust size of one element if list.
0002B146 <AmiBlitz3.ab3@12584>   MOVEM.l A2-A3,-(A7)
0002B14C <AmiBlitz3.ab3@12585>   MOVE.w varmode,-(A7)
0002B150 <AmiBlitz3.ab3@12586>   MOVE.w $8(A3),-(A7)                                       ;number of dims
0002B154 <AmiBlitz3.ab3@12587>   MOVE.w $4(A3),-(A7)                                       ;varoff
0002B156 <AmiBlitz3.ab3@12588>   MOVE.l A2,-(A7)
0002B15C <AmiBlitz3.ab3@12589>   MOVE.w flagmask,-(A7)
0002B166 <AmiBlitz3.ab3@12591>   MOVE.w oldqflag,instringon
0002B16C <AmiBlitz3.ab3@12592>   MOVEA.l lastsourcepos,A5
0002B170 <AmiBlitz3.ab3@12593>    BSR.w arreval
0002B176 <AmiBlitz3.ab3@12594>   MOVE.w (A7)+,flagmask
0002B17E <AmiBlitz3.ab3@12595>   MOVE.w $8(A7),varmode
0002B184 <AmiBlitz3.ab3@12596>   TST.b debugmode
0002B188 <AmiBlitz3.ab3@12597>    BEQ.w calcvar__noszchk
0002B18A <AmiBlitz3.ab3@12601>   MOVEA.l (A7)+,A2
0002B18C <AmiBlitz3.ab3@12602>   MOVEQ.l #$04,D1
0002B194 <AmiBlitz3.ab3@12603>   BTST #$0,flagmask+1                                      ;pointer?
0002B198 <AmiBlitz3.ab3@12604>    BNE.b calcvar__domul                                          ;yes, then use 4 byte mul...
0002B19C <AmiBlitz3.ab3@12605>   MOVE.w $8(A2),D1
0002B1A0 <AmiBlitz3.ab3@12608>   ADD.w calcvar__listoff(PC),D1
0002B1A4 <AmiBlitz3.ab3@12609>   BSR.w JL_0_B6DE
0002B1AA <AmiBlitz3.ab3@12610>   ADDQ.w #1,regnum
0002B1AC <AmiBlitz3.ab3@12613>   ADDQ.w #4,(A7)
0002B1B0 <AmiBlitz3.ab3@12614>   TST.w $4(A7)
0002B1B4 <AmiBlitz3.ab3@12615>    BEQ.w calcvar__isglob
0002B1B6 <AmiBlitz3.ab3@12616>   SUBQ.w #8,(A7)                                           ;range check local array
0002B1BC <AmiBlitz3.ab3@12619>   TST.b debugmode
0002B1C0 <AmiBlitz3.ab3@12620>    BEQ.w calcvar__noer1
0002B1C6 <AmiBlitz3.ab3@12621>   MOVE.w regnum,D1
0002B1C8 <AmiBlitz3.ab3@12622>   SUBQ.w #1,D1
0002B1CA <AmiBlitz3.ab3@12623>   LSL.w #8,D1
0002B1CC <AmiBlitz3.ab3@12624>   LSL.w #1,D1
0002B1D0 <AmiBlitz3.ab3@12625>   OR.w zarrchk(PC),D1
0002B1D4 <AmiBlitz3.ab3@12626>    BSR.w pokewda5s                                         ;cmp.l x(a5),D regat
0002B1D6 <AmiBlitz3.ab3@12627>   MOVE.w (A7),D1
0002B1DA <AmiBlitz3.ab3@12628>    BSR.w writeword
0002B1DE <AmiBlitz3.ab3@12629>   MOVE.l arrchk2(PC),D1
0002B1E2 <AmiBlitz3.ab3@12630>    BSR.w writelong
0002B1E6 <AmiBlitz3.ab3@12631>   MOVE.w #$C309,D1
0002B1EA <AmiBlitz3.ab3@12632>    BSR.w Atokejsr
0002B1EE <AmiBlitz3.ab3@12635>   SUBQ.w #1,$2(A7)
0002B1F2 <AmiBlitz3.ab3@12636>    BEQ.w calcvar__ardone
0002B1F6 <AmiBlitz3.ab3@12637>   CMP.w #$2C,D0
0002B1FA <AmiBlitz3.ab3@12638>    BNE.w syntaxerr
0002B200 <AmiBlitz3.ab3@12639>    TST.b fast
0002B204 <AmiBlitz3.ab3@12640>    BNE 'l1
0002B208 <AmiBlitz3.ab3@12641>    BSR.w arrevalchk
0002B20C <AmiBlitz3.ab3@12642> BRA 'l2
0002B210 <AmiBlitz3.ab3@12645>   BSR arreval
0002B218 <AmiBlitz3.ab3@12648>   MOVE.w $4(A7),varmode
0002B21C <AmiBlitz3.ab3@12649>   BSR.w JL_0_9052
0002B220 <AmiBlitz3.ab3@12650> BRA.w calcvar__arloop
0002B224 <AmiBlitz3.ab3@12654>   CMP.w #$29,D0
0002B228 <AmiBlitz3.ab3@12655>    BNE.w syntaxerr
0002B22E <AmiBlitz3.ab3@12656>   SUBQ.w #1,regnum
0002B230 <AmiBlitz3.ab3@12657>   ADDQ.w #6,A7
0002B234 <AmiBlitz3.ab3@12658>   MOVEM.l (A7)+,A2-A3
0002B23C <AmiBlitz3.ab3@12659>   MOVE.w $4(A3),movea5a0+2
0002B242 <AmiBlitz3.ab3@12660>   MOVE.l movea5a0,D1
0002B246 <AmiBlitz3.ab3@12661>    BSR.w pokela5s
0002B24C <AmiBlitz3.ab3@12662>   MOVE.w regnum,D1
0002B250 <AmiBlitz3.ab3@12663>   ORI.w #$D5C0,D1                                          ;add.l Dr,a2
0002B254 <AmiBlitz3.ab3@12664>    BSR.w writeword
0002B25A <AmiBlitz3.ab3@12665>   BTST #$0,$6(A3)
0002B25E <AmiBlitz3.ab3@12666>    BEQ.w calcvar__normalar
0002B262 <AmiBlitz3.ab3@12670>   MOVE.w listarfix(PC),D1
0002B266 <AmiBlitz3.ab3@12671>    BSR.w writeword
0002B26A <AmiBlitz3.ab3@12674>   BSR.w get1bytemain
0002B270 <AmiBlitz3.ab3@12678>   BTST #$0,$7(A3)
0002B274 <AmiBlitz3.ab3@12679>    BEQ.w calcvar__noppnt
0002B278 <AmiBlitz3.ab3@12680>   CMP.w #$5C,D0
0002B27C <AmiBlitz3.ab3@12681>    BNE.w calcvar__pmskip
0002B280 <AmiBlitz3.ab3@12682>   MOVE.w calcvar__pfix(PC),D1
0002B284 <AmiBlitz3.ab3@12683>    BSR.w writeword
0002B288 <AmiBlitz3.ab3@12686>   MOVE.w #$8000,D2
0002B28C <AmiBlitz3.ab3@12687> BRA.w calcvar__loopml
0002B290 <AmiBlitz3.ab3@12690>   MOVE.w #$C000,D2
0002B294 <AmiBlitz3.ab3@12691> BRA.w calcvar__loopml
0002B296 <AmiBlitz3.ab3@12695> calcvar__pfix:   Dc.b $24,$52                                   ;MOVEA.L (A2),A2
0002B29A <AmiBlitz3.ab3@12700>   CMP.w #$28,D0
0002B29E <AmiBlitz3.ab3@12701>    BEQ.w noarrerr
0002B2A6 <AmiBlitz3.ab3@12702>   CMPI.l #$100,$4(A2)
0002B2AA <AmiBlitz3.ab3@12703>    BCS.w calcvar__simpvar
0002B2B0 <AmiBlitz3.ab3@12704>   BTST #$0,$7(A3)
0002B2B4 <AmiBlitz3.ab3@12705>    BEQ.w calcvar__notap
0002B2B8 <AmiBlitz3.ab3@12709>   CMP.w #$5C,D0
0002B2BC <AmiBlitz3.ab3@12710>    BEQ.w calcvar__notap
0002B2BE <AmiBlitz3.ab3@12711>   MOVEQ.l #$00,D2
0002B2C2 <AmiBlitz3.ab3@12712> BRA.w calcvar__simpvar2
0002B2C6 <AmiBlitz3.ab3@12715>   MOVE.w #$8000,D2
0002B2CE <AmiBlitz3.ab3@12716>   MOVE.w $4(A3),movea5a0+2
0002B2D4 <AmiBlitz3.ab3@12717>   MOVE.l movea5a0,D1
0002B2D8 <AmiBlitz3.ab3@12718>    BSR.w pokela5s                                         ;move.l x(a5),a2
0002B2DE <AmiBlitz3.ab3@12720>    TST.b debugmode
0002B2E2 <AmiBlitz3.ab3@12721>    BEQ.w 'skip
0002B2E6 <AmiBlitz3.ab3@12722>    MOVE.w #$c320,D1
0002B2EC <AmiBlitz3.ab3@12723>    JSR Atokejsr
0002B2EE <AmiBlitz3.ab3@12727>   MOVEQ.l #$00,D3
0002B2F2 <AmiBlitz3.ab3@12730>   CMP.w #$5C,D0
0002B2F6 <AmiBlitz3.ab3@12731>    BNE.w calcvar__done
0002B2FE <AmiBlitz3.ab3@12732>   CMPI.l #$100,$4(A2)
0002B302 <AmiBlitz3.ab3@12733>    BCS.w rongtypeerr
0002B304 <AmiBlitz3.ab3@12734>   MOVE.w D2,-(A7)
0002B308 <AmiBlitz3.ab3@12735>    BSR.w getparameter2
0002B30C <AmiBlitz3.ab3@12736>    BEQ.w syntaxerr
0002B30E <AmiBlitz3.ab3@12737>   ADDQ.w #4,A2
0002B312 <AmiBlitz3.ab3@12738>    BSR.w findvariable2
0002B316 <AmiBlitz3.ab3@12739>    BNE.w noofferr
0002B318 <AmiBlitz3.ab3@12740>   MOVE.w (A7)+,D2
0002B31A <AmiBlitz3.ab3@12741>   MOVEA.l A2,A3                                             ;pointer to offset
0002B31E <AmiBlitz3.ab3@12742>   MOVEA.l $A(A3),A2                                         ;pointer to type
0002B320 <AmiBlitz3.ab3@12743>   MOVEQ #0,d1
0002B324 <AmiBlitz3.ab3@12744>   MOVE.w 4(a3),d1
0002B326 <AmiBlitz3.ab3@12745>   ADD.l d1,d3
0002B32C <AmiBlitz3.ab3@12747>   MOVE.l A3,lastoffset_org
0002B330 <AmiBlitz3.ab3@12748>   CMP.w #$5B,D0
0002B334 <AmiBlitz3.ab3@12749>    BNE.w calcvar__realdone
0002B33A <AmiBlitz3.ab3@12750>   BTST #$1,$7(A3)                                           ;a array [] in newtype is found
0002B33E <AmiBlitz3.ab3@12751>    BEQ.w rongtypeerr
0002B342 <AmiBlitz3.ab3@12752>    BSR.w JL_0_9004
0002B346 <AmiBlitz3.ab3@12753>   MOVEM.l A2-A3,-(A7)
0002B34C <AmiBlitz3.ab3@12754>   MOVE.w varmode,-(A7)
0002B352 <AmiBlitz3.ab3@12755>   MOVE.l lastoffset_org,-(A7)
0002B358 <AmiBlitz3.ab3@12756>   MOVE.w pusha2,D1
0002B35C <AmiBlitz3.ab3@12757>   BSR.w writeword
0002B35E <AmiBlitz3.ab3@12758>   MOVEQ.l #$03,D2                                          ;was 2 >32kb types
0002B368 <AmiBlitz3.ab3@12759>   MOVE.l destpointer,deststore
0002B36E <AmiBlitz3.ab3@12760>   MOVE.l leftsidetype,-(a7)
0002B374 <AmiBlitz3.ab3@12761>   MOVE.l rightsidetype,-(a7)
0002B37A <AmiBlitz3.ab3@12763>   MOVE.w leftsideflagmask,-(a7)
0002B380 <AmiBlitz3.ab3@12764>   MOVE.w rightsideflagmask,-(a7)
0002B386 <AmiBlitz3.ab3@12765>   CLR.l rightsidetype
0002B38C <AmiBlitz3.ab3@12766>   CLR.l leftsidetype
0002B392 <AmiBlitz3.ab3@12767>   CLR.w leftsideflagmask
0002B398 <AmiBlitz3.ab3@12768>   CLR.w rightsideflagmask
0002B39C <AmiBlitz3.ab3@12769>   BSR.w eval
0002B3A2 <AmiBlitz3.ab3@12770>   MOVE.w (a7)+,rightsideflagmask
0002B3A8 <AmiBlitz3.ab3@12771>   MOVE.w (a7)+,leftsideflagmask
0002B3AE <AmiBlitz3.ab3@12772>   MOVE.l (a7)+,rightsidetype
0002B3B4 <AmiBlitz3.ab3@12773>   MOVE.l (a7)+,leftsidetype
0002B3B8 <AmiBlitz3.ab3@12774>   CMP.w #$5D,D0
0002B3BC <AmiBlitz3.ab3@12775>    BNE.w syntaxerr
0002B3C2 <AmiBlitz3.ab3@12776>   TST.b fast                                               ;a2,-(a7) array
0002B3C6 <AmiBlitz3.ab3@12777>   BEQ calcvar__loop0_l10
0002B3CC <AmiBlitz3.ab3@12781>   MOVE.l destpointer,d1
0002B3D2 <AmiBlitz3.ab3@12782>   SUB.l deststore,d1
0002B3D8 <AmiBlitz3.ab3@12783>   CMP.l #4,d1
0002B3DC <AmiBlitz3.ab3@12784>   BNE calcvar__loop0_l10
0002B3E2 <AmiBlitz3.ab3@12785>   MOVE.l destpointer,a4
0002B3E8 <AmiBlitz3.ab3@12786>   MOVE.l -4(a4),-6(a4)
0002B3EE <AmiBlitz3.ab3@12787>   SUBQ.l #2,destpointer
0002B3F4 <AmiBlitz3.ab3@12788>   CLR.l imm_addr
0002B3FA <AmiBlitz3.ab3@12789>   CLR.l load_var_addr
0002B3FE <AmiBlitz3.ab3@12790> BRA calcvar__loop0_l20
0002B404 <AmiBlitz3.ab3@12793>   MOVE.w pulla2,D1
0002B408 <AmiBlitz3.ab3@12794>    BSR.w writeword
0002B40E <AmiBlitz3.ab3@12797>   MOVE.l (A7)+,lastoffset_org
0002B414 <AmiBlitz3.ab3@12798>   MOVE.w (A7)+,varmode
0002B418 <AmiBlitz3.ab3@12799>   MOVEM.l (A7)+,A2-A3
0002B41E <AmiBlitz3.ab3@12805>   TST.w debugmode
0002B422 <AmiBlitz3.ab3@12806>    BEQ.b calcvar__nobchk
0002B426 <AmiBlitz3.ab3@12807>   MOVE.w $8(A3),D1
0002B42A <AmiBlitz3.ab3@12808>    BEQ.b calcvar__nobchk                                   ;no [0] checks!
0002B430 <AmiBlitz3.ab3@12812>   MOVE.w D1,brchkcode+2
0002B436 <AmiBlitz3.ab3@12813>   MOVE.w regnum,D1
0002B438 <AmiBlitz3.ab3@12814>   LSL.w #8,D1
0002B43A <AmiBlitz3.ab3@12815>   LSL.w #1,D1
0002B43E <AmiBlitz3.ab3@12816>   OR.w brchkcode0(PC),D1
0002B444 <AmiBlitz3.ab3@12817>   MOVE.w D1,brchkcode
0002B448 <AmiBlitz3.ab3@12818>   MOVE.l brchkcode(PC),D1
0002B44C <AmiBlitz3.ab3@12819>    BSR.w writelong
0002B450 <AmiBlitz3.ab3@12820>   MOVE.l brchkcode+4(PC),D1
0002B454 <AmiBlitz3.ab3@12821>    BSR.w writelong
0002B458 <AmiBlitz3.ab3@12822>   MOVE.w brchkcode+8(PC),D1
0002B45C <AmiBlitz3.ab3@12823>    BSR.w writeword
0002B45E <AmiBlitz3.ab3@12826>   MOVEQ.l #$04,D1
0002B464 <AmiBlitz3.ab3@12827>   BTST #$0,$7(A3)
0002B468 <AmiBlitz3.ab3@12828>    BNE.w calcvar__dothemul
0002B46C <AmiBlitz3.ab3@12829>   MOVE.w $8(A2),D1
0002B470 <AmiBlitz3.ab3@12832>   BSR.w JL_0_B6DE
0002B476 <AmiBlitz3.ab3@12833>   MOVE.w addrega2,D1
0002B47C <AmiBlitz3.ab3@12834>   OR.w regnum,D1
0002B480 <AmiBlitz3.ab3@12835>    OR.w #$100,d1                                           ;>32kb types
0002B484 <AmiBlitz3.ab3@12836>    BSR.w writeword
0002B488 <AmiBlitz3.ab3@12837>    BSR.w get1bytemain
0002B48A <AmiBlitz3.ab3@12838>   MOVEQ.l #$00,D3
0002B48E <AmiBlitz3.ab3@12839>   MOVE.w #$8000,D2
0002B494 <AmiBlitz3.ab3@12842>   BTST #$0,$7(A3)
0002B498 <AmiBlitz3.ab3@12843>    BNE.w calcvar__pointer
0002B49C <AmiBlitz3.ab3@12844> BRA.w calcvar__loop0
0002B4A0 <AmiBlitz3.ab3@12848>  CMP.w #$5C,D0
0002B4A4 <AmiBlitz3.ab3@12849>    BNE.w calcvar__done3
0002B4A6 <AmiBlitz3.ab3@12850>   TST.w D3
0002B4AA <AmiBlitz3.ab3@12851>    BNE.w calcvar__pskip
0002B4B0 <AmiBlitz3.ab3@12852>   MOVE.w movea0,D1
0002B4B4 <AmiBlitz3.ab3@12853>    BSR.w writeword
0002B4B8 <AmiBlitz3.ab3@12854> BRA.w calcvar__pmore
0002B4BE <AmiBlitz3.ab3@12857>   MOVE.w D3,movea0a0+2
0002B4C4 <AmiBlitz3.ab3@12858>   MOVE.l movea0a0,D1
0002B4C8 <AmiBlitz3.ab3@12859>    BSR.w writelong
0002B4CE <AmiBlitz3.ab3@12862>   BTST #$2,$7(A3)
0002B4D2 <AmiBlitz3.ab3@12863>    BEQ.w calcvar__loopml
0002B4D8 <AmiBlitz3.ab3@12864>   MOVE.l adda0a0,D1
0002B4DC <AmiBlitz3.ab3@12865>    BSR.w writelong
0002B4E0 <AmiBlitz3.ab3@12866> BRA.w calcvar__loopml
0002B4E4 <AmiBlitz3.ab3@12869>   BSET #$E,D2
0002B4EA <AmiBlitz3.ab3@12870>   BTST #$2,$7(A3)
0002B4EE <AmiBlitz3.ab3@12871>    BNE.w calcvar__done
0002B4F2 <AmiBlitz3.ab3@12872>   BSET #$D,D2
0002B4FA <AmiBlitz3.ab3@12875>   CMPI.l #$100,$4(A2)
0002B4FE <AmiBlitz3.ab3@12876>    BCC.w calcvar__done2
0002B502 <AmiBlitz3.ab3@12877>   MOVE.b $7(A2),D2
0002B506 <AmiBlitz3.ab3@12880> BRA.w JL_0_9004
0002B50A <AmiBlitz3.ab3@12883>   MOVE.w $6(A2),D2
0002B50E <AmiBlitz3.ab3@12886>   MOVE.w $4(A3),D3
0002B514 <AmiBlitz3.ab3@12887>   BTST #$0,$7(A3)
0002B518 <AmiBlitz3.ab3@12888>    BEQ.w calcvar__nopoint
0002B51C <AmiBlitz3.ab3@12889>   BSET #$E,D2
0002B51E <AmiBlitz3.ab3@12892> RTS
0002B522 <AmiBlitz3.ab3@12896> brchkcode0:  Dc.b $B0,$7C,$00,$00                          ;CMP.W   #$0000,D0
0002B526 <AmiBlitz3.ab3@12897> brchkcode:   Dc.b $B0,$7C :             Dc.b $00,$00       ;CMP.W   #$0000,D0
0002B528 <AmiBlitz3.ab3@12898>              Dc.b $65,$04                                  ;BCS.B   brchkcode__ok
0002B52A <AmiBlitz3.ab3@12899>              Dc.b $70,$02                                  ;MOVEQ   #$02,D0
0002B52C <AmiBlitz3.ab3@12900>              Dc.b $4E,$40                                  ;TRAP    #00
0002B532 <AmiBlitz3.ab3@12908>   TST.w varmode
0002B536 <AmiBlitz3.ab3@12909>    BEQ.w writeword
0002B53A <AmiBlitz3.ab3@12910>   BCLR #$0,D1
0002B53E <AmiBlitz3.ab3@12911> BRA.w writeword
0002B544 <AmiBlitz3.ab3@12914>   TST.w varmode
0002B548 <AmiBlitz3.ab3@12915>    BEQ.w writeword
0002B54C <AmiBlitz3.ab3@12916>   BCLR #$9,D1
0002B550 <AmiBlitz3.ab3@12917> BRA.w writeword
0002B556 <AmiBlitz3.ab3@12920>   TST.w proceduremode
0002B55A <AmiBlitz3.ab3@12921>    BEQ.w writelong
0002B55E <AmiBlitz3.ab3@12922>   BCLR #$19,D1
0002B562 <AmiBlitz3.ab3@12923> BRA.w writelong
0002B568 <AmiBlitz3.ab3@12926>   TST.w varmode
0002B56C <AmiBlitz3.ab3@12927>   BEQ.w writelong
0002B570 <AmiBlitz3.ab3@12928>   BCLR #$10,D1
0002B576 <AmiBlitz3.ab3@12931>   ADDQ.l #1,destpointer
0002B57E <AmiBlitz3.ab3@12932>   BCLR #$0,destpointer+3
0002B584 <AmiBlitz3.ab3@12933>   MOVEA.l destpointer,A4
0002B58A <AmiBlitz3.ab3@12934>   CMPA.l destbufferend,A4
0002B58E <AmiBlitz3.ab3@12935>    BCC.w writeword__overa
0002B590 <AmiBlitz3.ab3@12936>   MOVE.l D1,(A4)+
0002B596 <AmiBlitz3.ab3@12939>   MOVE.l A4,destpointer
0002B59A <AmiBlitz3.ab3@12940>   CMPA.l bigpc(PC),A4
0002B59E <AmiBlitz3.ab3@12941>    BHI.w writeword__nbp
0002B5A0 <AmiBlitz3.ab3@12942> RTS
0002B5A8 <AmiBlitz3.ab3@12945>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B5AE <AmiBlitz3.ab3@12946>   CLR.b fast
0002B5B4 <AmiBlitz3.ab3@12947>   CLR.b fpu
0002B5BA <AmiBlitz3.ab3@12948>   CLR.b iee
0002B5BC <AmiBlitz3.ab3@12949>   ADDQ.w #4,A4
0002B5C0 <AmiBlitz3.ab3@12950> BRA.w writeword__msa
0002B5C6 <AmiBlitz3.ab3@12956>   ADDQ.l #1,destpointer
0002B5CE <AmiBlitz3.ab3@12957>   BCLR #$0,destpointer+3
0002B5D4 <AmiBlitz3.ab3@12958>   MOVEA.l destpointer,A4
0002B5DA <AmiBlitz3.ab3@12959>   CMPA.l destbufferend,A4
0002B5DE <AmiBlitz3.ab3@12960>    BCC.w writeword__over
0002B5E0 <AmiBlitz3.ab3@12961>   MOVE.w D1,(A4)+
0002B5E6 <AmiBlitz3.ab3@12964>   MOVE.l A4,destpointer
0002B5EA <AmiBlitz3.ab3@12965>   CMPA.l bigpc(PC),A4
0002B5EE <AmiBlitz3.ab3@12966>    BHI.w writeword__nbp
0002B5F0 <AmiBlitz3.ab3@12967> RTS
0002B5F6 <AmiBlitz3.ab3@12970>   ADDQ.l #1,destpointer
0002B5FE <AmiBlitz3.ab3@12971>   BCLR #$0,destpointer+3
0002B604 <AmiBlitz3.ab3@12972>   MOVEA.l destpointer,A4
0002B60A <AmiBlitz3.ab3@12973>   CMPA.l destbufferend,A4
0002B60E <AmiBlitz3.ab3@12974>    BCC.w writeword__over
0002B610 <AmiBlitz3.ab3@12975>   MOVE.w D1,(A4)+
0002B616 <AmiBlitz3.ab3@12976>   MOVE.l A4,destpointer
0002B61A <AmiBlitz3.ab3@12977>   CMPA.l bigpc(PC),A4
0002B61E <AmiBlitz3.ab3@12978>    BHI.w writeword__nbp
0002B620 <AmiBlitz3.ab3@12979> RTS
0002B626 <AmiBlitz3.ab3@12982>   TST.w cfetchmode
0002B62A <AmiBlitz3.ab3@12983>   BNE.w writeword__nbp2
0002B630 <AmiBlitz3.ab3@12984>   MOVE.l A4,bigpc
0002B632 <AmiBlitz3.ab3@12987> RTS
0002B63A <AmiBlitz3.ab3@12990>   MOVE.w #$FFFF,dontwrite                                  ;#-1 org source
0002B63C <AmiBlitz3.ab3@12991>   ADDQ.w #2,A4
0002B642 <AmiBlitz3.ab3@12992>   CLR.b fast
0002B648 <AmiBlitz3.ab3@12993>   CLR.b fpu
0002B64E <AmiBlitz3.ab3@12994>   CLR.b iee
0002B652 <AmiBlitz3.ab3@12995> BRA.w writeword__ms
0002B658 <AmiBlitz3.ab3@12999>   MOVEA.l destpointer,A4
0002B65E <AmiBlitz3.ab3@13000>   CMPA.l destbufferend,A4
0002B662 <AmiBlitz3.ab3@13001>    BCC.w writebyte__over
0002B664 <AmiBlitz3.ab3@13002>   MOVE.b D1,(A4)+
0002B66A <AmiBlitz3.ab3@13005>   MOVE.l A4,destpointer
0002B66E <AmiBlitz3.ab3@13006>   CMPA.l bigpc(PC),A4
0002B672 <AmiBlitz3.ab3@13007>    BHI.w writebyte__nbp
0002B674 <AmiBlitz3.ab3@13008> RTS
0002B67A <AmiBlitz3.ab3@13011>   TST.w cfetchmode
0002B67E <AmiBlitz3.ab3@13012>    BNE.w writebyte__nbp2
0002B684 <AmiBlitz3.ab3@13013>   MOVE.l A4,bigpc
0002B686 <AmiBlitz3.ab3@13016> RTS
0002B68E <AmiBlitz3.ab3@13019>   MOVE.w #-1,dontwrite
0002B690 <AmiBlitz3.ab3@13020>   ADDQ.w #1,A4
0002B696 <AmiBlitz3.ab3@13021>   CLR.b fast
0002B69C <AmiBlitz3.ab3@13022>   CLR.b fpu
0002B6A2 <AmiBlitz3.ab3@13023>   CLR.b iee
0002B6A6 <AmiBlitz3.ab3@13024> BRA.w writebyte__ms
0002B6AA <AmiBlitz3.ab3@13027> bigpc:   Ds.l 1
0002B6AC <AmiBlitz3.ab3@13031>   MOVE.w (A0)+,D1
0002B6B0 <AmiBlitz3.ab3@13032>   BSR.w writeword
0002B6B2 <AmiBlitz3.ab3@13035>     CMPA.l A1,A0
0002B6B6 <AmiBlitz3.ab3@13036>     BCC.w pokecode__done
0002B6B8 <AmiBlitz3.ab3@13037>       MOVE.w (A0)+,D1
0002B6BC <AmiBlitz3.ab3@13038>       BSR.w writeword
0002B6C0 <AmiBlitz3.ab3@13039> BRA.w pokecode__loop
0002B6C2 <AmiBlitz3.ab3@13042> RTS
0002B6C4 <AmiBlitz3.ab3@13045>   MOVE.w (A0)+,D1
0002B6C8 <AmiBlitz3.ab3@13046>   BSR.w writeword
0002B6CA <AmiBlitz3.ab3@13047>   CMPA.l A1,A0
0002B6CE <AmiBlitz3.ab3@13048>   BCS.w pokecode2
0002B6D0 <AmiBlitz3.ab3@13049> RTS
0002B6D6 <AmiBlitz3.ab3@13055>   TST.b iniffcommand
0002B6DA <AmiBlitz3.ab3@13056>   BEQ 'l1
0002B6DE <AmiBlitz3.ab3@13057>     MOVE.w #$4880,D1
0002B6E4 <AmiBlitz3.ab3@13058>     OR.w regnum,D1
0002B6E8 <AmiBlitz3.ab3@13059>     BSR writeword
0002B6EA <AmiBlitz3.ab3@13062> RTS
0002B6EE <AmiBlitz3.ab3@13065>   BSR.w convert_byte_to_word
0002B6F4 <AmiBlitz3.ab3@13068>   TST.b iee
0002B6F8 <AmiBlitz3.ab3@13069>   BEQ 'old
0002B6FC <AmiBlitz3.ab3@13070>   CMP.b #5,d2
0002B700 <AmiBlitz3.ab3@13071>   BEQ wtof
0002B704 <AmiBlitz3.ab3@13074>   MOVE.w #$48C0,D1
0002B70A <AmiBlitz3.ab3@13075>   OR.w regnum,D1
0002B70E <AmiBlitz3.ab3@13076> BRA.w writeword
0002B710 <AmiBlitz3.ab3@13079>   MOVEQ #0,d0
0002B716 <AmiBlitz3.ab3@13080>   MOVE.w regnum,d0
0002B718 <AmiBlitz3.ab3@13081>   ASL.l #7,d0
0002B71E <AmiBlitz3.ab3@13082>   MOVE.l #$f2005000,d1
0002B720 <AmiBlitz3.ab3@13083>   OR.l d0,d1
0002B722 <AmiBlitz3.ab3@13084>   ASL.l #1,d0
0002B724 <AmiBlitz3.ab3@13085>   ASL.l #8,d0
0002B726 <AmiBlitz3.ab3@13086>   OR.l d0,d1
0002B72A <AmiBlitz3.ab3@13087> BRA writelong
0002B72E <AmiBlitz3.ab3@13091>   BSR.w convert_byte_to_word
0002B732 <AmiBlitz3.ab3@13094>   MOVE.w #$4840,D1
0002B738 <AmiBlitz3.ab3@13095>   OR.w regnum,D1
0002B73C <AmiBlitz3.ab3@13096>    BSR.w writeword
0002B740 <AmiBlitz3.ab3@13097>   MOVE.w #$4240,D1
0002B746 <AmiBlitz3.ab3@13098>   OR.w regnum,D1
0002B74A <AmiBlitz3.ab3@13099> BRA.w writeword
0002B74E <AmiBlitz3.ab3@13103>   CMP.w #$ffdc,d1
0002B752 <AmiBlitz3.ab3@13104>   BNE 'negfpu
0002B754 <AmiBlitz3.ab3@13105>   MOVEQ #0,d0
0002B75A <AmiBlitz3.ab3@13106>   MOVE.w regnum,d0
0002B75C <AmiBlitz3.ab3@13107>   ASL.l #7,d0
0002B762 <AmiBlitz3.ab3@13108>   MOVE.l #$f2004000,d1
0002B764 <AmiBlitz3.ab3@13109>   OR.l d0,d1
0002B766 <AmiBlitz3.ab3@13110>   ASL.l #1,d0
0002B768 <AmiBlitz3.ab3@13111>   ASL.l #8,d0
0002B76A <AmiBlitz3.ab3@13112>   OR.l d0,d1
0002B76E <AmiBlitz3.ab3@13113> BRA writelong
0002B770 <AmiBlitz3.ab3@13117>   MOVEQ #0,d1
0002B776 <AmiBlitz3.ab3@13118>   MOVE.w regnum,d1                                         ;fpu neg
0002B778 <AmiBlitz3.ab3@13119>   ASL.l #7,d1
0002B77E <AmiBlitz3.ab3@13120>   OR.l #$f200001a,d1
0002B780 <AmiBlitz3.ab3@13121>   MOVE.l d0,-(a7)
0002B782 <AmiBlitz3.ab3@13122>   MOVEQ #0,d0
0002B788 <AmiBlitz3.ab3@13123>   MOVE.w regnum,d0
0002B78A <AmiBlitz3.ab3@13124>   ASL.l #8,d0
0002B78C <AmiBlitz3.ab3@13125>   ASL.l #2,d0
0002B78E <AmiBlitz3.ab3@13126>   OR.l d0,d1
0002B790 <AmiBlitz3.ab3@13127>   MOVE.l (a7)+,d0
0002B794 <AmiBlitz3.ab3@13128> BRA writelong
0002B79A <AmiBlitz3.ab3@13131>    TST.b iee
0002B79E <AmiBlitz3.ab3@13132>    BNE wtof
0002B7A2 <AmiBlitz3.ab3@13133>    BSR.w convert_byte_to_long
0002B7A6 <AmiBlitz3.ab3@13136>    MOVE.w #$FFDC,D1
0002B7AC <AmiBlitz3.ab3@13139>    TST.b iee
0002B7B0 <AmiBlitz3.ab3@13140>    BNE ltof
0002B7B6 <AmiBlitz3.ab3@13141>    MOVE.w D1,libjsr+2
0002B7BA <AmiBlitz3.ab3@13142>    BSR.w JL_0_AD40
0002B7BC <AmiBlitz3.ab3@13143>   MOVE.l D4,D1
0002B7C0 <AmiBlitz3.ab3@13144>    BSR.w JL_0_AD38
0002B7C4 <AmiBlitz3.ab3@13145>   MOVE.w #$C900,D1
0002B7C8 <AmiBlitz3.ab3@13146>    BSR.w Atokejsr
0002B7CC <AmiBlitz3.ab3@13147>    BSR.w JL_0_A352
0002B7D2 <AmiBlitz3.ab3@13148>   MOVE.l libjsr,D1
0002B7D6 <AmiBlitz3.ab3@13149>    BSR.w writelong
0002B7DA <AmiBlitz3.ab3@13150>    BSR.w JL_0_A36E
0002B7DC <AmiBlitz3.ab3@13151>   MOVE.l D5,D1
0002B7E0 <AmiBlitz3.ab3@13152> BRA.w JL_0_AD38
0002B7E2 <AmiBlitz3.ab3@13155> RTS
0002B7E6 <AmiBlitz3.ab3@13158>   MOVE.w #$C317,D1
0002B7EC <AmiBlitz3.ab3@13159>   TST.b typecheck
0002B7F0 <AmiBlitz3.ab3@13160>   BEQ 'l1
0002B7F6 <AmiBlitz3.ab3@13161>    TST.b notypecheck
0002B7FA <AmiBlitz3.ab3@13162>    BNE 'l1
0002B800 <AmiBlitz3.ab3@13163>    TST.l lasttoken
0002B806 <AmiBlitz3.ab3@13170>   TST.b debugmode
0002B80A <AmiBlitz3.ab3@13171>    BEQ.w JL_0_9696
0002B812 <AmiBlitz3.ab3@13172>   BTST #$7,overflowcheck
0002B816 <AmiBlitz3.ab3@13173>    BEQ.w JL_0_9696
0002B81C <AmiBlitz3.ab3@13174>   TST.w cfetchmode
0002B820 <AmiBlitz3.ab3@13175>    BNE.w JL_0_9696
0002B826 <AmiBlitz3.ab3@13176>   TST.w regnum
0002B82A <AmiBlitz3.ab3@13177>    BEQ.w JL_0_968A
0002B82C <AmiBlitz3.ab3@13178>   MOVE.w D1,-(A7)
0002B830 <AmiBlitz3.ab3@13179>   MOVE.w JL_0_9698(PC),D1
0002B834 <AmiBlitz3.ab3@13180>    BSR.w writeword
0002B83A <AmiBlitz3.ab3@13181>   MOVE.w regnum,D1
0002B83E <AmiBlitz3.ab3@13182>   OR.w L_0_969C(PC),D1
0002B842 <AmiBlitz3.ab3@13183>    BSR.w writeword
0002B844 <AmiBlitz3.ab3@13184>   MOVE.w (A7)+,D1
0002B848 <AmiBlitz3.ab3@13185>    BSR.w JL_0_968A
0002B84C <AmiBlitz3.ab3@13186>   MOVE.w L_0_969A(PC),D1
0002B850 <AmiBlitz3.ab3@13187> BRA.w writeword
0002B854 <AmiBlitz3.ab3@13191>   MOVEM.l D0-D7/A0-A6,-(A7)
0002B858 <AmiBlitz3.ab3@13192>    BSR.w Atokejsr
0002B85C <AmiBlitz3.ab3@13193>   MOVEM.l (A7)+,D0-D7/A0-A6
0002B85E <AmiBlitz3.ab3@13196> RTS
0002B860 <AmiBlitz3.ab3@13199>   MOVE.l D0,-(A7)
0002B862 <AmiBlitz3.ab3@13202>   MOVE.l (A7)+,D0
0002B864 <AmiBlitz3.ab3@13205>   MOVE.l D0,D0
0002B868 <AmiBlitz3.ab3@13208>   BSR.w convert_word_to_long
0002B86E <AmiBlitz3.ab3@13209>   TST.b iee
0002B872 <AmiBlitz3.ab3@13210>   BEQ 'old
0002B876 <AmiBlitz3.ab3@13211>   CMP.b #5,d2
0002B87A <AmiBlitz3.ab3@13212>   BNE 'old
0002B87C <AmiBlitz3.ab3@13213> RTS
0002B880 <AmiBlitz3.ab3@13216> BRA.w JL_0_9600
0002B884 <AmiBlitz3.ab3@13220>   MOVE.w #$C316,D1
0002B88A <AmiBlitz3.ab3@13221>   TST.b typecheck
0002B88E <AmiBlitz3.ab3@13222>   BEQ 'l1
0002B894 <AmiBlitz3.ab3@13223>   TST.b peekaddrsize
0002B898 <AmiBlitz3.ab3@13224>   BNE 'l1
0002B89E <AmiBlitz3.ab3@13225>   TST.b notypecheck
0002B8A2 <AmiBlitz3.ab3@13226>   BNE 'l1
0002B8A8 <AmiBlitz3.ab3@13227>   TST.l lasttoken
0002B8AC <AmiBlitz3.ab3@13233> BRA.w JL_0_963A
0002B8B0 <AmiBlitz3.ab3@13237>   MOVE.w #$C318,D1
0002B8B6 <AmiBlitz3.ab3@13238>   TST.b typecheck
0002B8BA <AmiBlitz3.ab3@13239>   BEQ 'l1
0002B8C0 <AmiBlitz3.ab3@13240>   TST.b peekaddrsize
0002B8C4 <AmiBlitz3.ab3@13241>   BNE 'l1
0002B8CA <AmiBlitz3.ab3@13242>   TST.b notypecheck
0002B8CE <AmiBlitz3.ab3@13243>   BNE 'l1
0002B8D4 <AmiBlitz3.ab3@13244>   TST.l lasttoken
0002B8D8 <AmiBlitz3.ab3@13250> BRA.w JL_0_963A
0002B8DC <AmiBlitz3.ab3@13254>   MOVE.w #$C318,D1
0002B8E2 <AmiBlitz3.ab3@13255>   TST.b typecheck
0002B8E6 <AmiBlitz3.ab3@13256>   BEQ 'l1
0002B8EC <AmiBlitz3.ab3@13257>   TST.b notypecheck
0002B8F0 <AmiBlitz3.ab3@13258>   BNE 'l1
0002B8F6 <AmiBlitz3.ab3@13259>   TST.l lasttoken
0002B8FA <AmiBlitz3.ab3@13265>   BSR.w JL_0_963A
0002B8FE <AmiBlitz3.ab3@13266> BRA.w convert_word_to_quick
0002B902 <AmiBlitz3.ab3@13270> BRA.w JL_0_9600
0002B904 <AmiBlitz3.ab3@13274> RTS
0002B908 <AmiBlitz3.ab3@13278>   MOVE.w #$C319,D1
0002B90E <AmiBlitz3.ab3@13279>   TST.b typecheck
0002B912 <AmiBlitz3.ab3@13280>   BEQ 'l1
0002B918 <AmiBlitz3.ab3@13281>   TST.b notypecheck
0002B91C <AmiBlitz3.ab3@13282>   BNE 'l1
0002B922 <AmiBlitz3.ab3@13283>   TST.l lasttoken
0002B926 <AmiBlitz3.ab3@13290>   BSR.w JL_0_963A
0002B92A <AmiBlitz3.ab3@13293>   MOVE.w #$4240,D1
0002B930 <AmiBlitz3.ab3@13294>   OR.w regnum,D1
0002B934 <AmiBlitz3.ab3@13295>   BSR.w writeword
0002B938 <AmiBlitz3.ab3@13296>   MOVE.w #$4840,D1
0002B93E <AmiBlitz3.ab3@13297>   OR.w regnum,D1
0002B942 <AmiBlitz3.ab3@13298> BRA.w writeword
0002B946 <AmiBlitz3.ab3@13302> BRA.w JL_0_96D0
0002B94A <AmiBlitz3.ab3@13306>   BSR.w JL_0_96D0
0002B94E <AmiBlitz3.ab3@13307> BRA.w convert_word_to_long
0002B950 <AmiBlitz3.ab3@13312>   MOVEQ #0,d0
0002B956 <AmiBlitz3.ab3@13313>   MOVE.w regnum,d0
0002B958 <AmiBlitz3.ab3@13314>   ASL.l #7,d0
0002B95E <AmiBlitz3.ab3@13315>   MOVE.l #$f2004000,d1
0002B960 <AmiBlitz3.ab3@13316>   OR.l d0,d1
0002B962 <AmiBlitz3.ab3@13317>   ASL.l #1,d0
0002B964 <AmiBlitz3.ab3@13318>   ASL.l #8,d0
0002B966 <AmiBlitz3.ab3@13319>   OR.l d0,d1
0002B96A <AmiBlitz3.ab3@13320>   BSR writelong
0002B970 <AmiBlitz3.ab3@13321>   MOVE.w regnum,d0
0002B972 <AmiBlitz3.ab3@13322>   ASL.l #7,d0
0002B978 <AmiBlitz3.ab3@13323>   MOVE.l #$f23c4423,d1                                     ;fmul.s #1/65536,fpreg
0002B97A <AmiBlitz3.ab3@13324>   OR.w d0,d1
0002B97E <AmiBlitz3.ab3@13325>   BSR writelong
0002B984 <AmiBlitz3.ab3@13326>   MOVE.l #$37800000,d1
0002B988 <AmiBlitz3.ab3@13327>   BSR writelong
0002B98A <AmiBlitz3.ab3@13328> RTS
0002B990 <AmiBlitz3.ab3@13332>   TST.b iee
0002B994 <AmiBlitz3.ab3@13333>   BNE qtof
0002B998 <AmiBlitz3.ab3@13334>   MOVE.w #$D300,D1
0002B99A <AmiBlitz3.ab3@13337>   MOVE.w D1,-(A7)
0002B99E <AmiBlitz3.ab3@13338>    BSR.w JL_0_AD40
0002B9A0 <AmiBlitz3.ab3@13339>   MOVE.l D4,D1
0002B9A4 <AmiBlitz3.ab3@13340>    BSR.w JL_0_AD38
0002B9A8 <AmiBlitz3.ab3@13341>    BSR.w JL_0_A352
0002B9AA <AmiBlitz3.ab3@13342>   MOVE.w (A7)+,D1
0002B9AE <AmiBlitz3.ab3@13343>    BSR.w Atokejsr
0002B9B2 <AmiBlitz3.ab3@13344>    BSR.w JL_0_A36E
0002B9B4 <AmiBlitz3.ab3@13345>   MOVE.l D5,D1
0002B9B8 <AmiBlitz3.ab3@13346> BRA.w JL_0_AD38
0002B9BA <AmiBlitz3.ab3@13350> RTS
0002B9C0 <AmiBlitz3.ab3@13353>   TST.b typecheck
0002B9C4 <AmiBlitz3.ab3@13354>   BEQ 'l1
0002B9CA <AmiBlitz3.ab3@13355>   TST.b notypecheck
0002B9CE <AmiBlitz3.ab3@13356>   BNE 'l1
0002B9D4 <AmiBlitz3.ab3@13357>   TST.l lasttoken
0002B9DA <AmiBlitz3.ab3@13362>   TST.b iee
0002B9DE <AmiBlitz3.ab3@13363>   BNE ftol
0002B9E2 <AmiBlitz3.ab3@13364>   MOVE.w #$C31A,D1
0002B9E6 <AmiBlitz3.ab3@13365>   BSR.w JL_0_963A
0002B9EA <AmiBlitz3.ab3@13366>   BSR.w JL_0_974A
0002B9EE <AmiBlitz3.ab3@13367> BRA.w convert_long_to_byte
0002B9F0 <AmiBlitz3.ab3@13371> RTS
0002B9F6 <AmiBlitz3.ab3@13374>   TST.b typecheck
0002B9FA <AmiBlitz3.ab3@13375>   BEQ 'l1
0002BA00 <AmiBlitz3.ab3@13376>   TST.b notypecheck
0002BA04 <AmiBlitz3.ab3@13377>   BNE 'l1
0002BA0A <AmiBlitz3.ab3@13378>   TST.l lasttoken
0002BA10 <AmiBlitz3.ab3@13383>   TST.b iee
0002BA14 <AmiBlitz3.ab3@13384>   BNE ftol
0002BA18 <AmiBlitz3.ab3@13385>   MOVE.w #$C31B,D1
0002BA1C <AmiBlitz3.ab3@13386>   BSR.w JL_0_963A
0002BA20 <AmiBlitz3.ab3@13387>   BSR.w JL_0_974A
0002BA24 <AmiBlitz3.ab3@13388> BRA.w convert_long_to_word
0002BA26 <AmiBlitz3.ab3@13392> RTS
0002BA2C <AmiBlitz3.ab3@13395>   TST.b iee
0002BA30 <AmiBlitz3.ab3@13396>   BNE ftol
0002BA34 <AmiBlitz3.ab3@13397>   MOVE.w #$C31C,D1
0002BA38 <AmiBlitz3.ab3@13398>   BSR.w JL_0_963A
0002BA3C <AmiBlitz3.ab3@13401>   MOVE.w #$FFE2,D1
0002BA40 <AmiBlitz3.ab3@13402> BRA.w JL_0_9604
0002BA42 <AmiBlitz3.ab3@13405>   MOVE.l d0,-(a7)
0002BA44 <AmiBlitz3.ab3@13406>   MOVEQ #0,d0
0002BA4A <AmiBlitz3.ab3@13407>   MOVE.w regnum,d0
0002BA4C <AmiBlitz3.ab3@13408>   ASL.l #7,d0
0002BA52 <AmiBlitz3.ab3@13409>   MOVE.l #$f2006000,d1
0002BA54 <AmiBlitz3.ab3@13410>   OR.l d0,d1
0002BA56 <AmiBlitz3.ab3@13411>   ASL.l #1,d0
0002BA58 <AmiBlitz3.ab3@13412>   ASL.l #8,d0
0002BA5A <AmiBlitz3.ab3@13413>   OR.l d0,d1
0002BA5C <AmiBlitz3.ab3@13414>   MOVE.l (a7)+,d0
0002BA60 <AmiBlitz3.ab3@13415> BRA writelong
0002BA62 <AmiBlitz3.ab3@13419>   MOVE.l d0,-(a7)
0002BA64 <AmiBlitz3.ab3@13420>   MOVEQ #0,d0
0002BA6A <AmiBlitz3.ab3@13421>   MOVE.l #$f23c4023,d1
0002BA70 <AmiBlitz3.ab3@13422>   MOVE.w regnum,d0
0002BA72 <AmiBlitz3.ab3@13423>   ASL.l #7,d0
0002BA74 <AmiBlitz3.ab3@13424>   OR.l d0,d1
0002BA78 <AmiBlitz3.ab3@13425>   BSR writelong
0002BA7E <AmiBlitz3.ab3@13426>   MOVE.l #$00010000,d1
0002BA82 <AmiBlitz3.ab3@13427>   BSR writelong
0002BA88 <AmiBlitz3.ab3@13428>   MOVE.w regnum,d0
0002BA8A <AmiBlitz3.ab3@13429>   ASL.l #7,d0
0002BA90 <AmiBlitz3.ab3@13430>   MOVE.l #$f2006000,d1
0002BA92 <AmiBlitz3.ab3@13431>   OR.l d0,d1
0002BA94 <AmiBlitz3.ab3@13432>   ASL.l #1,d0
0002BA96 <AmiBlitz3.ab3@13433>   ASL.l #8,d0
0002BA98 <AmiBlitz3.ab3@13434>   OR.l d0,d1
0002BA9C <AmiBlitz3.ab3@13435>   BSR writelong
0002BA9E <AmiBlitz3.ab3@13436>   MOVE.l (a7)+,d0
0002BAA0 <AmiBlitz3.ab3@13437> RTS
0002BAA2 <AmiBlitz3.ab3@13441> RTS
0002BAA8 <AmiBlitz3.ab3@13445>   TST.b iee
0002BAAC <AmiBlitz3.ab3@13446>   BNE ftoq
0002BAB0 <AmiBlitz3.ab3@13447>   MOVE.w #$C31B,D1
0002BAB4 <AmiBlitz3.ab3@13448>   BSR.w JL_0_963A
0002BAB8 <AmiBlitz3.ab3@13449>   MOVE.w #$D301,D1
0002BABC <AmiBlitz3.ab3@13450> BRA.w JL_0_96FC
0002BAC2 <AmiBlitz3.ab3@13456>    TST.b blitzparloop
0002BAC6 <AmiBlitz3.ab3@13457>    BNE 'l1
0002BACC <AmiBlitz3.ab3@13458>    TST.b funcparloop
0002BAD0 <AmiBlitz3.ab3@13459>    BNE 'l1
0002BAD4 <AmiBlitz3.ab3@13460>    BRA error_convert_types
0002BADC <AmiBlitz3.ab3@13463>   CMP.b #2,optistring
0002BAE0 <AmiBlitz3.ab3@13464>   BEQ JLrts
0002BAE6 <AmiBlitz3.ab3@13465>   MOVE.w stol,D1
0002BAEA <AmiBlitz3.ab3@13466>   BSR.w writeword
0002BAF2 <AmiBlitz3.ab3@13467>   CMPI.w #$2,sbgot
0002BAF6 <AmiBlitz3.ab3@13468>   BCS.w sbtolong
0002BAFA <AmiBlitz3.ab3@13469>   MOVE.w ceos(PC),D1
0002BAFE <AmiBlitz3.ab3@13470>   BSR.w writeword
0002BB04 <AmiBlitz3.ab3@13473>   MOVE.w regnum,D1
0002BB06 <AmiBlitz3.ab3@13474>   LSL.w #8,D1
0002BB08 <AmiBlitz3.ab3@13475>   LSL.w #1,D1
0002BB10 <AmiBlitz3.ab3@13476>   CMPI.w #$2,sbgot
0002BB14 <AmiBlitz3.ab3@13477>   BCS.w JL_0_98E8
0002BB1A <AmiBlitz3.ab3@13478>   MOVE.w a2offset,D3
0002BB20 <AmiBlitz3.ab3@13479>   SUB.w thisstuse,D3
0002BB24 <AmiBlitz3.ab3@13480>   CMP.w #$6,D3
0002BB28 <AmiBlitz3.ab3@13481>   BNE.w JL_0_98D4b
0002BB2E <AmiBlitz3.ab3@13482>   OR.w movestst2,D1
0002BB32 <AmiBlitz3.ab3@13483>   BSR.w writeword
0002BB38 <AmiBlitz3.ab3@13484>   LEA movestst2+2,A0
0002BB3E <AmiBlitz3.ab3@13485>   LEA movestst2f,A1
0002BB42 <AmiBlitz3.ab3@13486> BRA.w pokecode2
0002BB48 <AmiBlitz3.ab3@13490>   OR.w movea7dn,D1
0002BB4C <AmiBlitz3.ab3@13491>   BSR.w writeword
0002BB52 <AmiBlitz3.ab3@13492>   MOVE.l #0,D1
0002BB56 <AmiBlitz3.ab3@13493> BRA.w writeword
0002BB5C <AmiBlitz3.ab3@13497>   ADDQ.w #1,fuckpos
0002BB60 <AmiBlitz3.ab3@13498>   BSR.w writeconvertcode
0002BB66 <AmiBlitz3.ab3@13499>   SUBQ.w #1,fuckpos
0002BB68 <AmiBlitz3.ab3@13501> RTS
0002BB6A <AmiBlitz3.ab3@13505>   MOVE.w D3,D1
0002BB6E <AmiBlitz3.ab3@13506>   CMP.w #7,d1
0002BB72 <AmiBlitz3.ab3@13507>   BLE 'ok
0002BB78 <AmiBlitz3.ab3@13508>   JMP errorinternalconvert
0002BB7A <AmiBlitz3.ab3@13509> 'ok  SUBQ.w #1,D1
0002BB7E <AmiBlitz3.ab3@13510>   MULU #$7,D1
0002BB80 <AmiBlitz3.ab3@13511>   ADD.w D2,D1
0002BB82 <AmiBlitz3.ab3@13512>   SUBQ.w #1,D1
0002BB84 <AmiBlitz3.ab3@13513>   LSL.w #2,D1
0002BB8A <AmiBlitz3.ab3@13514>   LEA convtable,A0
0002BB8E <AmiBlitz3.ab3@13515>   MOVE.l $0(A0,D1.W),D1
0002BB92 <AmiBlitz3.ab3@13516>   BEQ.w JL_0_97A2
0002BB94 <AmiBlitz3.ab3@13517>     MOVEA.l D1,A0
0002BB98 <AmiBlitz3.ab3@13518>     CMP.b #$ff,d3
0002BB9C <AmiBlitz3.ab3@13519>     BEQ JL_0_97A2
0002BB9E <AmiBlitz3.ab3@13520> JMP (A0)
0002BBA0 <AmiBlitz3.ab3@13523> RTS
0002BBA4 <AmiBlitz3.ab3@13526> usedfrom:  Ds.l 1
0002BBA8 <AmiBlitz3.ab3@13533>   CMP.w #"\",D0
0002BBAC <AmiBlitz3.ab3@13534>   BNE.w JL_0_97C2
0002BBB0 <AmiBlitz3.ab3@13535>     CMP.b #"\",(a5)
0002BBB4 <AmiBlitz3.ab3@13536>     BNE 'first
0002BBBA <AmiBlitz3.ab3@13537>       MOVE.l A5,usedfrom
0002BBC0 <AmiBlitz3.ab3@13538>       LEA path2,A5
0002BBC4 <AmiBlitz3.ab3@13539> BRA 'g1
0002BBC6 <AmiBlitz3.ab3@13542>     SUBQ.w #1,A5
0002BBCC <AmiBlitz3.ab3@13543>   MOVE.l A5,usedfrom
0002BBD2 <AmiBlitz3.ab3@13544>   LEA usedpath,A5                                          ;read path
0002BBD6 <AmiBlitz3.ab3@13547>   BSR.w get1bytemain
0002BBDC <AmiBlitz3.ab3@13550>   CLR.w flagmask
0002BBE0 <AmiBlitz3.ab3@13551>   CMP.w #$2A,D0
0002BBE4 <AmiBlitz3.ab3@13552>    BNE.w JL_0_983A
0002BBEC <AmiBlitz3.ab3@13553>   MOVE.w #$0001,flagmask
0002BBF0 <AmiBlitz3.ab3@13555>    BSR.w getparameter2
0002BBF4 <AmiBlitz3.ab3@13558>    BEQ.w syntaxerr
0002BBF8 <AmiBlitz3.ab3@13559>   CMP.w #$28,D0
0002BBFC <AmiBlitz3.ab3@13560>    BEQ.w JL_0_9830
0002BC00 <AmiBlitz3.ab3@13561>   CMP.w #$2E,D0
0002BC04 <AmiBlitz3.ab3@13562>    BEQ.w JL_0_980C
0002BC08 <AmiBlitz3.ab3@13563>   CMP.w #$24,D0
0002BC0C <AmiBlitz3.ab3@13564>    BNE.w JL_0_9838
0002BC14 <AmiBlitz3.ab3@13565>   ORI.w #$8,flagmask
0002BC18 <AmiBlitz3.ab3@13566>    BSR.w storeloc
0002BC1C <AmiBlitz3.ab3@13567>    BSR.w get1bytemain
0002BC20 <AmiBlitz3.ab3@13568> BRA.w JL_0_9822
0002BC24 <AmiBlitz3.ab3@13572>   BSR.w storeloc
0002BC26 <AmiBlitz3.ab3@13573>   MOVE.w D2,-(A7)
0002BC2C <AmiBlitz3.ab3@13574>   LEA namebuff2,A1
0002BC30 <AmiBlitz3.ab3@13575>    BSR.w makename3
0002BC34 <AmiBlitz3.ab3@13576>    BEQ.w syntaxerr
0002BC36 <AmiBlitz3.ab3@13577>   MOVE.w (A7)+,D2
0002BC38 <AmiBlitz3.ab3@13580>    MOVE.w D0,D1
0002BC3C <AmiBlitz3.ab3@13581>    BSR.w resloc
0002BC40 <AmiBlitz3.ab3@13582>    CMP.w #$28,D1
0002BC44 <AmiBlitz3.ab3@13583>    BNE.w JL_0_9838
0002BC4C <AmiBlitz3.ab3@13586>   ORI.w #$2,flagmask
0002BC4E <AmiBlitz3.ab3@13589> RTS
0002BC52 <AmiBlitz3.ab3@13593>   CMP.w #$40,D0
0002BC56 <AmiBlitz3.ab3@13594>    BNE.w JL_0_984E
0002BC5E <AmiBlitz3.ab3@13595>   MOVE.w #$0005,flagmask
0002BC62 <AmiBlitz3.ab3@13596> BRA.w JL_0_97D8
0002BC66 <AmiBlitz3.ab3@13600>   BSR.w makename2
0002BC6A <AmiBlitz3.ab3@13601> BRA.w JL_0_97DC
0002BC6E <AmiBlitz3.ab3@13605>   MOVE.w #$FED3,D1
0002BC72 <AmiBlitz3.ab3@13606>    BSR.w uselib
0002BC78 <AmiBlitz3.ab3@13607>   LEA pusha3,A0
0002BC7E <AmiBlitz3.ab3@13608>   LEA pusha3f,A1
0002BC82 <AmiBlitz3.ab3@13609> BRA.w pokecode
0002BC86 <AmiBlitz3.ab3@13613>   MOVE.w #$FED3,D1
0002BC8A <AmiBlitz3.ab3@13614>    BSR.w uselib
0002BC90 <AmiBlitz3.ab3@13615>   LEA pulla3,A0
0002BC96 <AmiBlitz3.ab3@13616>   LEA pulla3f,A1
0002BC9A <AmiBlitz3.ab3@13617> BRA.w pokecode
0002BC9C <AmiBlitz3.ab3@13621> ceos:   Dc.b $42,$1B                                       ;CLR.B   (A3)+             ;*!
0002BCA4 <AmiBlitz3.ab3@13626>     CMP.b #2,optistring
0002BCA8 <AmiBlitz3.ab3@13627>    BEQ 'l10
0002BCAC <AmiBlitz3.ab3@13628>    MOVE.w ceos(PC),D1
0002BCB0 <AmiBlitz3.ab3@13629>    BSR.w writeword                                         ;clr.b (a3)
0002BCB6 <AmiBlitz3.ab3@13632>   MOVE.w regnum,D1
0002BCB8 <AmiBlitz3.ab3@13633>   LSL.w #8,D1
0002BCBA <AmiBlitz3.ab3@13634>   LSL.w #1,D1
0002BCC2 <AmiBlitz3.ab3@13635>   CMPI.w #$2,sbgot
0002BCC6 <AmiBlitz3.ab3@13636>    BCS.w JL_0_98E8
0002BCCC <AmiBlitz3.ab3@13637>   MOVE.w a2offset,D3                                       ;stackuse,d3 org source
0002BCD2 <AmiBlitz3.ab3@13638>   SUB.w thisstuse,D3
0002BCD6 <AmiBlitz3.ab3@13639>   CMP.w #$6,D3
0002BCDA <AmiBlitz3.ab3@13640>    BNE.w JL_0_98D4
0002BCE0 <AmiBlitz3.ab3@13641>   OR.w movestst2,D1
0002BCE4 <AmiBlitz3.ab3@13642>    BSR.w writeword
0002BCEA <AmiBlitz3.ab3@13643>   LEA movestst2+2,A0
0002BCF0 <AmiBlitz3.ab3@13644>   LEA movestst2f,A1
0002BCF4 <AmiBlitz3.ab3@13645> BRA.w pokecode2
0002BCFA <AmiBlitz3.ab3@13649>    OR.w movea7dn,D1
0002BCFE <AmiBlitz3.ab3@13650>    BSR.w writeword
0002BD04 <AmiBlitz3.ab3@13651>   MOVE.l movea7dn+2,D1
0002BD08 <AmiBlitz3.ab3@13663>   BSR writelong
0002BD10 <AmiBlitz3.ab3@13666>    CMP.w #6,regnum
0002BD14 <AmiBlitz3.ab3@13667>    BEQ 'l1
0002BD1A <AmiBlitz3.ab3@13668>    TST.w stackpar
0002BD1E <AmiBlitz3.ab3@13669>    BNE 'l1
0002BD24 <AmiBlitz3.ab3@13670>    TST.b funcparloop
0002BD28 <AmiBlitz3.ab3@13671>    BEQ 'l1
0002BD2E <AmiBlitz3.ab3@13672>    MOVE.l #$48780000,d1
0002BD32 <AmiBlitz3.ab3@13673>    BSR writelong
0002BD34 <AmiBlitz3.ab3@13677> RTS
0002BD36 <AmiBlitz3.ab3@13682>      MOVE.l d1,-(a7)
0002BD3E <AmiBlitz3.ab3@13683>      CMP.w #6,regnum
0002BD42 <AmiBlitz3.ab3@13684>      BEQ 'l1
0002BD48 <AmiBlitz3.ab3@13685>      TST.w stackpar
0002BD4C <AmiBlitz3.ab3@13686>      BNE 'l1
0002BD52 <AmiBlitz3.ab3@13687>      TST.b funcparloop
0002BD56 <AmiBlitz3.ab3@13688>      BEQ 'l1
0002BD5C <AmiBlitz3.ab3@13689>      MOVE.l #$48780000,d1
0002BD60 <AmiBlitz3.ab3@13690>      BSR writelong
0002BD62 <AmiBlitz3.ab3@13693>      MOVE.l (a7)+,d1
0002BD68 <AmiBlitz3.ab3@13695>    OR.w movestdn,D1
0002BD6C <AmiBlitz3.ab3@13696>    BSR.w writeword
0002BD70 <AmiBlitz3.ab3@13697>   MOVE.w #$FED3,D1
0002BD74 <AmiBlitz3.ab3@13698>    BSR.w uselib
0002BD78 <AmiBlitz3.ab3@13699>   MOVE.w $A(A1),D1
0002BD7C <AmiBlitz3.ab3@13700> BRA.w writeword
0002BD7E <AmiBlitz3.ab3@13703> unknown:    Ds.w 1
0002BD84 <AmiBlitz3.ab3@13706> somecode:   Dc.b $0C,$80,$00,$01,$00,$00                   ;CMPI.L  #$00010000,D0
0002BD88 <AmiBlitz3.ab3@13707> somecode2:  Dc.b $65,$00,$00,$08                           ;BCS.W   codeisok
0002BD8E <AmiBlitz3.ab3@13708>             Dc.b $4E,$B9,$00,$00,$00,$00                   ;JSR $00000000
0002BD94 <AmiBlitz3.ab3@13714>   TST.b debugmode
0002BD98 <AmiBlitz3.ab3@13715>   BEQ.w sharreval
0002BD9C <AmiBlitz3.ab3@13716>  BSR.w arreval
0002BDA0 <AmiBlitz3.ab3@13719>   MOVE.w somecode(PC),D1
0002BDA6 <AmiBlitz3.ab3@13720>   OR.w regnum,D1
0002BDAA <AmiBlitz3.ab3@13721>    BSR.w writeword
0002BDAC <AmiBlitz3.ab3@13722>   MOVEQ.l #$01,D1
0002BDAE <AmiBlitz3.ab3@13723>   SWAP D1
0002BDB2 <AmiBlitz3.ab3@13724>    BSR.w writelong
0002BDB6 <AmiBlitz3.ab3@13725>   MOVE.l somecode2(PC),D1
0002BDBA <AmiBlitz3.ab3@13726>    BSR.w writelong
0002BDBE <AmiBlitz3.ab3@13727>   MOVE.w #$C309,D1
0002BDC2 <AmiBlitz3.ab3@13728> BRA.w Atokejsr
0002BDC4 <AmiBlitz3.ab3@13732>   MOVEQ.l #$02,D2
0002BDC6 <AmiBlitz3.ab3@13733>   MOVEQ.l #$00,D1
0002BDC8 <AmiBlitz3.ab3@13734>   MOVEQ.l #$00,D3
0002BDCC <AmiBlitz3.ab3@13735> BRA.w maineval2
0002BDCE <AmiBlitz3.ab3@13739>   MOVEQ.l #$03,D2
0002BDD0 <AmiBlitz3.ab3@13740>   MOVEQ.l #$00,D1
0002BDD2 <AmiBlitz3.ab3@13741>   MOVEQ.l #$00,D3
0002BDD8 <AmiBlitz3.ab3@13742>   MOVE.b notypecheck,-(a7)
0002BDE0 <AmiBlitz3.ab3@13743>   MOVE.b #1,notypecheck                                    ;typecheck need switch off for array offset calculation code
0002BDE6 <AmiBlitz3.ab3@13744>   JSR maineval2
0002BDEC <AmiBlitz3.ab3@13745>   MOVE.b (a7)+,notypecheck                                 ;now its switch to old state
0002BDEE <AmiBlitz3.ab3@13746>   RTS
0002BDF8 <AmiBlitz3.ab3@13750>   MOVE.w oldqflag,instringon
0002BDFE <AmiBlitz3.ab3@13751>   MOVEA.l lastsourcepos,A5
0002BE00 <AmiBlitz3.ab3@13752>   MOVEQ.l #-$01,D1
0002BE02 <AmiBlitz3.ab3@13753>   MOVEQ.l #-$01,D3
0002BE06 <AmiBlitz3.ab3@13754> BRA.w peval
0002BE10 <AmiBlitz3.ab3@13759>   MOVE.w oldqflag,instringon
0002BE16 <AmiBlitz3.ab3@13760>   MOVEA.l lastsourcepos,A5
0002BE18 <AmiBlitz3.ab3@13763>   MOVEQ.l #-$01,D1
0002BE1A <AmiBlitz3.ab3@13764>   MOVEQ.l #$00,D3
0002BE20 <AmiBlitz3.ab3@13765>   MOVE.l leftsidetype,-(a7)
0002BE26 <AmiBlitz3.ab3@13766>   MOVE.l rightsidetype,-(a7)
0002BE2C <AmiBlitz3.ab3@13767>   MOVE.w leftsideflagmask,-(a7)
0002BE32 <AmiBlitz3.ab3@13768>   MOVE.w rightsideflagmask,-(a7)
0002BE38 <AmiBlitz3.ab3@13769>   CLR.l leftsidetype
0002BE3E <AmiBlitz3.ab3@13770>   CLR.l rightsidetype
0002BE44 <AmiBlitz3.ab3@13771>   CLR.w leftsideflagmask
0002BE4A <AmiBlitz3.ab3@13772>   CLR.w rightsideflagmask
0002BE50 <AmiBlitz3.ab3@13773>   JSR maineval
0002BE56 <AmiBlitz3.ab3@13774>   MOVE.w (a7)+,rightsideflagmask
0002BE5C <AmiBlitz3.ab3@13775>   MOVE.w (a7)+,leftsideflagmask
0002BE62 <AmiBlitz3.ab3@13776>   MOVE.l (a7)+,rightsidetype
0002BE68 <AmiBlitz3.ab3@13777>   MOVE.l (a7)+,leftsidetype
0002BE6A <AmiBlitz3.ab3@13778>   RTS
0002BE74 <AmiBlitz3.ab3@13782>   MOVE.w oldqflag,instringon
0002BE7A <AmiBlitz3.ab3@13783>   MOVEA.l lastsourcepos,A5
0002BE7C <AmiBlitz3.ab3@13784>   MOVEQ.l #$00,D1
0002BE7E <AmiBlitz3.ab3@13785>   MOVEQ.l #-$01,D3
0002BE82 <AmiBlitz3.ab3@13786> BRA.w maineval
0002BE84 <AmiBlitz3.ab3@13790>   MOVEQ.l #$01,D1
0002BE86 <AmiBlitz3.ab3@13791>   MOVEQ.l #-$01,D3
0002BE8A <AmiBlitz3.ab3@13792> BRA.w maineval
0002BE94 <AmiBlitz3.ab3@13797>   MOVE.w oldqflag,instringon
0002BE9A <AmiBlitz3.ab3@13798>   MOVEA.l lastsourcepos,A5
0002BE9C <AmiBlitz3.ab3@13801>   MOVEQ.l #$00,D1                                        ;no push
0002BE9E <AmiBlitz3.ab3@13802>   MOVEQ.l #$00,D3
0002BEA6 <AmiBlitz3.ab3@13823>    CMPI.w #$6,regnum
0002BEAA <AmiBlitz3.ab3@13824>    BCS.w maineval2
0002BEAC <AmiBlitz3.ab3@13825>    MOVEQ #0,d1
0002BEB2 <AmiBlitz3.ab3@13826>    MOVE.l destpointer,a4
0002BEB8 <AmiBlitz3.ab3@13828>    CMPA.l destbufferend,A4
0002BEBC <AmiBlitz3.ab3@13829>    BCC.w maineval__l2
0002BEC2 <AmiBlitz3.ab3@13831>    CMP.w #$2f0a,-2(a4)                                    ;bug is a move.l a2,-(a7) before (show temp calc)?
0002BEC6 <AmiBlitz3.ab3@13833>    BNE maineval__l2
0002BECA <AmiBlitz3.ab3@13837> BRA maineval__l1
0002BECC <AmiBlitz3.ab3@13840>   MOVEQ.l #-$01,D1                                         ;do stackpar write
0002BED4 <AmiBlitz3.ab3@13843>   MOVE.w #$0006,regnum                                     ;write a func par To stack
0002BEDA <AmiBlitz3.ab3@13846>   MOVE.w thisstuse,-(A7)
0002BEE4 <AmiBlitz3.ab3@13847>   MOVE.w a2offset,thisstuse
0002BEEA <AmiBlitz3.ab3@13848>   MOVE.w stackpar,-(A7)
0002BEF0 <AmiBlitz3.ab3@13849>   MOVE.w D1,stackpar
0002BEF6 <AmiBlitz3.ab3@13850>   MOVE.w sbgot,-(A7)
0002BEFC <AmiBlitz3.ab3@13851>   CLR.w sbgot
0002BF00 <AmiBlitz3.ab3@13852>   MOVE.w unknown(PC),-(A7)
0002BF06 <AmiBlitz3.ab3@13853>   MOVE.w D3,unknown
0002BF08 <AmiBlitz3.ab3@13854>   MOVE.w D2,-(a7)
0002BF0E <AmiBlitz3.ab3@13855>   MOVE.w d2,mode
0002BF12 <AmiBlitz3.ab3@13856>    BSR.w eval3
0002BF14 <AmiBlitz3.ab3@13857>   MOVE.w (a7)+,d3
0002BF18 <AmiBlitz3.ab3@13858>    BEQ.w maineval__noconv
0002BF1C <AmiBlitz3.ab3@13859>   MOVE.w unknown(PC),D1
0002BF20 <AmiBlitz3.ab3@13860>    BNE.w maineval__noconv
0002BF22 <AmiBlitz3.ab3@13861>   EXG.l D2,D3
0002BF24 <AmiBlitz3.ab3@13862>    MOVE.l a2,-(a7)
0002BF2A <AmiBlitz3.ab3@13863>    TST.b curtemplabel
0002BF2E <AmiBlitz3.ab3@13864>    BEQ maineval2__l10
0002BF34 <AmiBlitz3.ab3@13865>    MOVE.l asmbuff,a2
0002BF3A <AmiBlitz3.ab3@13866>    CMP.w #$c,$8(a2)
0002BF3E <AmiBlitz3.ab3@13867>    BEQ maineval2__l20
0002BF44 <AmiBlitz3.ab3@13868>    CMP.w #$d,$8(a2)
0002BF48 <AmiBlitz3.ab3@13869>    BEQ maineval2__l20
0002BF4A <AmiBlitz3.ab3@13872>   CMP.w d2,d3
0002BF4E <AmiBlitz3.ab3@13873>   BEQ maineval2__l20
0002BF52 <AmiBlitz3.ab3@13874>   BSR.w writeconvertcode
0002BF58 <AmiBlitz3.ab3@13875>   CLR.b doimmediate
0002BF5A <AmiBlitz3.ab3@13878>   MOVE.l (a7)+,a2
0002BF60 <AmiBlitz3.ab3@13881>   MOVE.w (A7)+,unknown
0002BF66 <AmiBlitz3.ab3@13882>   MOVE.w stackpar,D1
0002BF6A <AmiBlitz3.ab3@13883>    BEQ.w maineval__skipme
0002BF6E <AmiBlitz3.ab3@13884>    BMI.w maineval__skipme
0002BF74 <AmiBlitz3.ab3@13888>   MOVE.w regnum,D1
0002BF76 <AmiBlitz3.ab3@13889>   LSL.w #8,D1
0002BF78 <AmiBlitz3.ab3@13890>   LSL.w #1,D1
0002BF7C <AmiBlitz3.ab3@13891>   CMP.w #$7,D2
0002BF80 <AmiBlitz3.ab3@13892>    BNE.w maineval__hi1
0002BF88 <AmiBlitz3.ab3@13893>    CMP.b #2,optistring
0002BF8C <AmiBlitz3.ab3@13894>    BEQ maineval__hi1a
0002BF8E <AmiBlitz3.ab3@13895>   MOVE.w D1,-(A7)
0002BF94 <AmiBlitz3.ab3@13896>   OR.w getstlen,D1
0002BF98 <AmiBlitz3.ab3@13897>    BSR.w writeword
0002BF9A <AmiBlitz3.ab3@13898>   MOVE.w (A7)+,D1
0002BFA0 <AmiBlitz3.ab3@13901>   ADDQ.w #2,a2offset                                        ;lib mode to stack
0002BFA4 <AmiBlitz3.ab3@13905>   MOVE.w #$3f3c,d1
0002BFA8 <AmiBlitz3.ab3@13906>    BSR.w writeword
0002BFAA <AmiBlitz3.ab3@13910>   MOVE.w d2,d1
0002BFB0 <AmiBlitz3.ab3@13911>   MOVE.w d1,libmode
0002BFB4 <AmiBlitz3.ab3@13912>    BSR.w writeword
0002BFB8 <AmiBlitz3.ab3@13913>   CMP.w #$7,D2
0002BFBC <AmiBlitz3.ab3@13914>    BNE.w maineval__skipme
0002BFC2 <AmiBlitz3.ab3@13915>   MOVE.w putstlen,D1
0002BFC8 <AmiBlitz3.ab3@13916>   OR.w regnum,D1
0002BFCC <AmiBlitz3.ab3@13917>    BSR.w writeword
0002BFD0 <AmiBlitz3.ab3@13920>    CMP.w #$7,D2
0002BFD4 <AmiBlitz3.ab3@13921>    BNE.w maineval__notst
0002BFDC <AmiBlitz3.ab3@13932>    CMP.b #2,optistring
0002BFE0 <AmiBlitz3.ab3@13933>    BEQ maineval__skipme_l10
0002BFE6 <AmiBlitz3.ab3@13934>    ADDQ.w #4,a2offset                                      ;a length on da stack.....
0002BFEA <AmiBlitz3.ab3@13935>    BSR.w sbtolong
0002BFEE <AmiBlitz3.ab3@13936> BRA.w maineval__notst2
0002BFF6 <AmiBlitz3.ab3@13940>     CMP.w #6,regnum
0002BFFA <AmiBlitz3.ab3@13941>     BEQ maineval__skipme_l10_l1
0002C000 <AmiBlitz3.ab3@13942>     TST.b funcparloop
0002C004 <AmiBlitz3.ab3@13943>     BEQ maineval__skipme_l10_l1
0002C00A <AmiBlitz3.ab3@13944>     MOVE.l #$48780000,d1
0002C00E <AmiBlitz3.ab3@13945>     BSR writelong
0002C012 <AmiBlitz3.ab3@13948> BRA.w maineval__notst2
0002C018 <AmiBlitz3.ab3@13951>   ADDQ.w #2,a2offset
0002C01C <AmiBlitz3.ab3@13952> BRA maineval__skipme
0002C024 <AmiBlitz3.ab3@13955>   CMPI.w #$2,sbgot
0002C028 <AmiBlitz3.ab3@13956>    BCS.w maineval__notst2                                         ;correct stack
0002C02C <AmiBlitz3.ab3@13957>   MOVE.w ststfix(PC),D1
0002C030 <AmiBlitz3.ab3@13958>    BSR.w writeword
0002C036 <AmiBlitz3.ab3@13961>   MOVE.w (A7)+,sbgot
0002C03C <AmiBlitz3.ab3@13962>   MOVE.w stackpar,D1
0002C040 <AmiBlitz3.ab3@13963>    BPL.w maineval__skip
0002C044 <AmiBlitz3.ab3@13964>    CMP.b #7,d2
0002C048 <AmiBlitz3.ab3@13965>    BEQ maineval__notst2_l1
0002C04E <AmiBlitz3.ab3@13966>   TST.b funcparloop
0002C052 <AmiBlitz3.ab3@13967>   BEQ maineval__notst2_l1
0002C056 <AmiBlitz3.ab3@13968>   CMP.b #5,d2
0002C05A <AmiBlitz3.ab3@13969>   BNE maineval__notst2_skip
0002C060 <AmiBlitz3.ab3@13970>   TST.b fpu
0002C064 <AmiBlitz3.ab3@13971>   BEQ maineval__notst2_skip
0002C06A <AmiBlitz3.ab3@13972>   MOVE.l #$f2066700,d1                                     ;fmove.s fp6,d6
0002C070 <AmiBlitz3.ab3@13973>   JSR writelong
0002C074 <AmiBlitz3.ab3@13976>   MOVE.w #$c4ff,d1                                         ;savetemp+regnum
0002C07A <AmiBlitz3.ab3@13977>   ADD.w parnum,d1
0002C080 <AmiBlitz3.ab3@13978>   JSR Atokejsr
0002C086 <AmiBlitz3.ab3@13979>    TST.w dontwrite
0002C08A <AmiBlitz3.ab3@13980>    BNE maineval__notst2_l1
0002C090 <AmiBlitz3.ab3@13981>    MOVE.l data1start,d1
0002C096 <AmiBlitz3.ab3@13982>    MOVE.l destpointer,a4
0002C09A <AmiBlitz3.ab3@13983>    ADD.l d1,-4(a4)
0002C0A0 <AmiBlitz3.ab3@13984>    MOVE.l destpointer,d1
0002C0A2 <AmiBlitz3.ab3@13985>    SUBQ.l #4,d1
0002C0A8 <AmiBlitz3.ab3@13986>    SUB.l destbufferstart,d1
0002C0AA <AmiBlitz3.ab3@13987>    MOVE.l d2,-(a7)
0002C0AC <AmiBlitz3.ab3@13988>    MOVE.l d1,d2
0002C0B2 <AmiBlitz3.ab3@13989>    JSR addhunkoffset
0002C0B4 <AmiBlitz3.ab3@13990>    MOVE.l (a7)+,d2
0002C0B8 <AmiBlitz3.ab3@13991> BRA maineval__skip
0002C0BE <AmiBlitz3.ab3@13994>   ADDQ.w #2,a2offset
0002C0C4 <AmiBlitz3.ab3@13995>   MOVE.w pushd0wd,D1
0002C0C8 <AmiBlitz3.ab3@13996>   CMP.w #$3,D2                                             ;write parameter to stack
0002C0CC <AmiBlitz3.ab3@13997>    BCS.w maineval__ok
0002C0D2 <AmiBlitz3.ab3@13998>   ADDQ.w #2,a2offset
0002C0D8 <AmiBlitz3.ab3@13999>   TST.b fpu
0002C0DC <AmiBlitz3.ab3@14000>   BEQ maineval__notst2_nofpu
0002C0E0 <AmiBlitz3.ab3@14001>   CMP.w #5,d2
0002C0E4 <AmiBlitz3.ab3@14002>   BNE maineval__notst2_nofpu
0002C0E6 <AmiBlitz3.ab3@14003>   MOVEQ #0,d1
0002C0EC <AmiBlitz3.ab3@14004>   MOVE.w regnum,d1
0002C0EE <AmiBlitz3.ab3@14005>   ASL.l #7,d1
0002C0F4 <AmiBlitz3.ab3@14006>   OR.l #$f2276400,d1
0002C0F8 <AmiBlitz3.ab3@14007>   BSR writelong
0002C0FC <AmiBlitz3.ab3@14008> BRA maineval__skip
0002C102 <AmiBlitz3.ab3@14011>   MOVE.w pushd0l,D1
0002C108 <AmiBlitz3.ab3@14014>    OR.w regnum,D1
0002C10C <AmiBlitz3.ab3@14015>    BSR.w writeword                                         ;nat
0002C112 <AmiBlitz3.ab3@14018>   MOVE.w (A7)+,stackpar
0002C118 <AmiBlitz3.ab3@14019>   MOVE.w (A7)+,thisstuse
0002C11A <AmiBlitz3.ab3@14020> RTS
0002C11C <AmiBlitz3.ab3@14023> thisstuse: Ds.w 1
0002C11E <AmiBlitz3.ab3@14026> ststfix:   Dc.b $58,$4F                                    ;ADDQ.W  #4,A7
0002C120 <AmiBlitz3.ab3@14027> pushut:    Dc.b $3F,$00                                    ;MOVE.W  D0,-(A7)
0002C124 <AmiBlitz3.ab3@14032>   BSR.w eval4
0002C12E <AmiBlitz3.ab3@14033>   SUBI.l #$12,forthsp
0002C130 <AmiBlitz3.ab3@14034> RTS
0002C132 <AmiBlitz3.ab3@14038>   MOVEQ.l #$01,D1
0002C136 <AmiBlitz3.ab3@14040>       MOVEA.l precsp(PC),A1
0002C138 <AmiBlitz3.ab3@14041>       MOVE.l A0,(A1)+
0002C13A <AmiBlitz3.ab3@14042>       MOVE.w D1,(A1)+
0002C140 <AmiBlitz3.ab3@14043>       MOVE.l A1,precsp
0002C144 <AmiBlitz3.ab3@14044>    BSR.w calcloop
0002C146 <AmiBlitz3.ab3@14045>   TST.w D1
0002C14A <AmiBlitz3.ab3@14046>    BNE.w syntaxerr
0002C150 <AmiBlitz3.ab3@14047>   SUBQ.l #6,precsp                                      ;pop the prec set up
0002C152 <AmiBlitz3.ab3@14048> RTS
0002C156 <AmiBlitz3.ab3@14053>   BSR.w JL_0_9C24
0002C15A <AmiBlitz3.ab3@14056>   MOVEA.l precsp(PC),A1
0002C15C <AmiBlitz3.ab3@14057>   CMP.w -(A1),D1
0002C160 <AmiBlitz3.ab3@14058>    BHI.w JL_0_9B0A
0002C162 <AmiBlitz3.ab3@14059> RTS
0002C166 <AmiBlitz3.ab3@14064>   MOVEA.l precsp(PC),A1
0002C168 <AmiBlitz3.ab3@14065>   MOVE.l A0,(A1)+
0002C16A <AmiBlitz3.ab3@14066>   MOVE.w D1,(A1)+
0002C170 <AmiBlitz3.ab3@14067>   MOVE.l A1,precsp
0002C172 <AmiBlitz3.ab3@14068>   MOVE.w D2,-(A7)
0002C178 <AmiBlitz3.ab3@14069>   ADDQ.w #1,regnum
0002C17C <AmiBlitz3.ab3@14070>    BSR.w calcloop               ;constant optimizer
0002C182 <AmiBlitz3.ab3@14071>   SUBQ.w #1,regnum
0002C184 <AmiBlitz3.ab3@14072>   MOVE.w (A7)+,D3
0002C188 <AmiBlitz3.ab3@14073>   MOVEM.l D1/A0,-(A7)
0002C18C <AmiBlitz3.ab3@14074>    BEQ.w JL_0_9B2E
0002C190 <AmiBlitz3.ab3@14075>    BSR.w JL_0_9770
0002C194 <AmiBlitz3.ab3@14078>   BSR.w popprec
0002C198 <AmiBlitz3.ab3@14079>   BSR.w writecode
0002C19C <AmiBlitz3.ab3@14080>   MOVEA.l forthsp(PC),A0
0002C1A0 <AmiBlitz3.ab3@14081>   MOVE.w -$2(A0),D1
0002C1A4 <AmiBlitz3.ab3@14082>   OR.w -$14(A0),D1
0002C1A8 <AmiBlitz3.ab3@14083>   MOVE.w D1,-$14(A0)
0002C1AC <AmiBlitz3.ab3@14084>    BNE.w JL_0_9C0E
0002C1B2 <AmiBlitz3.ab3@14085>   MOVE.w dontwrite,D1
0002C1B6 <AmiBlitz3.ab3@14086>    BNE.w JL_0_9C0E
0002C1BA <AmiBlitz3.ab3@14087>    MOVEA.l -$24(A0),A0
0002C2F6 <AmiBlitz3.ab3@14089>  !newcalc
0002C2FA <AmiBlitz3.ab3@14090>    BEQ 'l10
0002C2FE <AmiBlitz3.ab3@14091>    MOVEA.l forthsp(PC),A0
0002C306 <AmiBlitz3.ab3@14092>    MOVE.w -$18(A0),lasta6
0002C30E <AmiBlitz3.ab3@14093>    MOVE.l -$1C(A0),lasta6
0002C312 <AmiBlitz3.ab3@14094>    MOVEA.l -$24(A0),A0
0002C318 <AmiBlitz3.ab3@14095>    MOVE.l A0,destpointer
0002C31E <AmiBlitz3.ab3@14096>    MOVEA.l _mathffpbase,A6
0002C324 <AmiBlitz3.ab3@14097>    MOVEA.l ffplib,A1
0002C328 <AmiBlitz3.ab3@14098> BRA cont1
0002C32C <AmiBlitz3.ab3@14101>   MOVE.w #$2000,D1
0002C332 <AmiBlitz3.ab3@14102>   OR.w regnum,D1
0002C336 <AmiBlitz3.ab3@14103>    BSR.w writeword
0002C338 <AmiBlitz3.ab3@14104>     MOVEQ #0,d1
0002C33E <AmiBlitz3.ab3@14105>     MOVE.w regnum,D1
0002C340 <AmiBlitz3.ab3@14106>     ASL.l #8,d1
0002C342 <AmiBlitz3.ab3@14107>     ASL.l #2,d1
0002C348 <AmiBlitz3.ab3@14108>     OR.l #$f2000000,d1
0002C34C <AmiBlitz3.ab3@14109>     BSR writelong
0002C350 <AmiBlitz3.ab3@14110>   MOVE.w #$4E75,D1
0002C354 <AmiBlitz3.ab3@14111>    BSR.w writeword
0002C35C <AmiBlitz3.ab3@14112>   MOVE.w -$18(A0),lasta6
0002C364 <AmiBlitz3.ab3@14113>   MOVE.l -$1C(A0),lasta6
0002C368 <AmiBlitz3.ab3@14114>   MOVEA.l -$24(A0),A0
0002C36E <AmiBlitz3.ab3@14115>   MOVE.l A0,destpointer
0002C372 <AmiBlitz3.ab3@14116>   MOVEM.l D2/A5,-(A7)
0002C378 <AmiBlitz3.ab3@14117>   MOVEA.l _mathffpbase,A6
0002C37E <AmiBlitz3.ab3@14118>   MOVEA.l ffplib,A1
0002C382 <AmiBlitz3.ab3@14119>   MOVE.w $A(A1),D0
0002C388 <AmiBlitz3.ab3@14120>   LEA _mathffpbase,A5
0002C38A <AmiBlitz3.ab3@14121>   SUBA.w D0,A5
0002C390 <AmiBlitz3.ab3@14122>   JSR Aclearcache                                          ;neg +
0002C396 <AmiBlitz3.ab3@14123>   CLR.l load_var_addr
0002C39C <AmiBlitz3.ab3@14124>   CLR.l imm_addr
0002C3A2 <AmiBlitz3.ab3@14125>   TST.w dontwrite
0002C3A6 <AmiBlitz3.ab3@14126>   BNE '1
0002C3A8 <AmiBlitz3.ab3@14127>   JSR (A0)                                                 ;calc constant inline expression
0002C3AC <AmiBlitz3.ab3@14130>   MOVEM.l (A7)+,D2/A5
0002C3B2 <AmiBlitz3.ab3@14133>   MOVE.b d2,isconstantvalue
0002C3B8 <AmiBlitz3.ab3@14134>   MOVE.l d0,lastconstantvalue
0002C3BE <AmiBlitz3.ab3@14135>   MOVE.w regnum,D1
0002C3C0 <AmiBlitz3.ab3@14136>   LSL.w #8,D1
0002C3C2 <AmiBlitz3.ab3@14137>   LSL.w #1,D1
0002C3C6 <AmiBlitz3.ab3@14138>   ORI.w #$203C,D1
0002C3CA <AmiBlitz3.ab3@14139>   CMP.w #$3,D2
0002C3CE <AmiBlitz3.ab3@14140>    BCC.w JL_0_9BCE
0002C3D2 <AmiBlitz3.ab3@14141>   ORI.w #$1000,D1
0002C3D6 <AmiBlitz3.ab3@14142>    BSR.w writeword
0002C3D8 <AmiBlitz3.ab3@14143>   MOVE.w D0,D1
0002C3DC <AmiBlitz3.ab3@14144>    BSR.w writeword
0002C3E0 <AmiBlitz3.ab3@14145> BRA.w JL_0_9BD8
0002C3E6 <AmiBlitz3.ab3@14149>   TST.b iee                                                ;fpu constant
0002C3EA <AmiBlitz3.ab3@14150>   BEQ 'l10
0002C3EE <AmiBlitz3.ab3@14151>   CMP.b #5,d2
0002C3F2 <AmiBlitz3.ab3@14152>   BNE 'l10
0002C3F4 <AmiBlitz3.ab3@14153>   MOVEQ #0,d1
0002C3FA <AmiBlitz3.ab3@14154>   MOVE.w regnum,D1
0002C3FC <AmiBlitz3.ab3@14155>   ASL.l #7,d1
0002C402 <AmiBlitz3.ab3@14156>   OR.l #$f23c5400,d1
0002C406 <AmiBlitz3.ab3@14157>   BSR writelong
0002C408 <AmiBlitz3.ab3@14158>   SUBQ.l #8,a7
0002C40E <AmiBlitz3.ab3@14159>   fmove.d fp0,0(a7)
0002C410 <AmiBlitz3.ab3@14160>   MOVE.l (a7)+,d1
0002C414 <AmiBlitz3.ab3@14161>   BSR writelong
0002C416 <AmiBlitz3.ab3@14162>   MOVE.l (a7)+,d1
0002C41A <AmiBlitz3.ab3@14163>   BSR writelong
0002C41E <AmiBlitz3.ab3@14164> BRA JL_0_9BD8
0002C422 <AmiBlitz3.ab3@14167>   BSR.w writeword
0002C424 <AmiBlitz3.ab3@14168>   MOVE.l D0,D1
0002C428 <AmiBlitz3.ab3@14169>   BSR.w writelong
0002C42C <AmiBlitz3.ab3@14172>   MOVEA.l forthsp(PC),A0
0002C430 <AmiBlitz3.ab3@14173>   MOVEA.l -$20(A0),A3
0002C436 <AmiBlitz3.ab3@14174>   MOVEA.l hunkoffsetbase,A2
0002C43C <AmiBlitz3.ab3@14175>   MOVE.l A3,hunkoffsetbase
0002C442 <AmiBlitz3.ab3@14176>   MOVEA.l _execbase,A6
0002C444 <AmiBlitz3.ab3@14179>   CMPA.l A3,A2
0002C448 <AmiBlitz3.ab3@14180>   BEQ.w JL_0_9C0A
0002C44E <AmiBlitz3.ab3@14181>   SUBQ.l #1,hunkoffsetcounter
0002C450 <AmiBlitz3.ab3@14182>   MOVEA.l A2,A1
0002C452 <AmiBlitz3.ab3@14183>   MOVEA.l (A2),A2
0002C454 <AmiBlitz3.ab3@14184>   MOVEQ.l #$8,D0
0002C45A <AmiBlitz3.ab3@14185>   MOVE.l mempool2,a0
0002C45E <AmiBlitz3.ab3@14186>    JSR _FreePooled(A6)
0002C462 <AmiBlitz3.ab3@14187> BRA.w JL_0_9BF0
0002C466 <AmiBlitz3.ab3@14191>   MOVEA.l forthsp(PC),A0
0002C46A <AmiBlitz3.ab3@14194>   LEA -$12(A0),A0
0002C470 <AmiBlitz3.ab3@14195>   MOVE.l A0,forthsp
0002C474 <AmiBlitz3.ab3@14196>   MOVEM.l (A7)+,D1/A0
0002C478 <AmiBlitz3.ab3@14197>   BSR.w reget
0002C47C <AmiBlitz3.ab3@14198> BRA.w JL_0_9AFE
0002C480 <AmiBlitz3.ab3@14202>   BSR.w JL_0_A386
0002C482 <AmiBlitz3.ab3@14203>   TST.w d0
0002C486 <AmiBlitz3.ab3@14204>   BEQ JL_0_9C42
0002C48A <AmiBlitz3.ab3@14205>   CMP.b #",",d0
0002C48E <AmiBlitz3.ab3@14206>   BEQ JL_0_9C42
0002C492 <AmiBlitz3.ab3@14207>   CMP.b #"@",d0                                            ;expandline @@
0002C496 <AmiBlitz3.ab3@14208>   BEQ JL_0_9C42
0002C49C <AmiBlitz3.ab3@14209>   LEA operators,A0
0002C49E <AmiBlitz3.ab3@14212>    TST.w (A0)
0002C4A2 <AmiBlitz3.ab3@14213>    BEQ.w JL_0_9C42
0002C4A4 <AmiBlitz3.ab3@14214>   CMP.w (A0),D0
0002C4A8 <AmiBlitz3.ab3@14215>    BEQ.w JL_0_9C46a
0002C4AC <AmiBlitz3.ab3@14216>   LEA $20(A0),A0
0002C4B0 <AmiBlitz3.ab3@14217> BRA.w JL_0_9C2E
0002C4B2 <AmiBlitz3.ab3@14221>   MOVEQ.l #$00,D1
0002C4B4 <AmiBlitz3.ab3@14222> RTS
0002C4B8 <AmiBlitz3.ab3@14226>   CMP.w #$3C,D0
0002C4BC <AmiBlitz3.ab3@14227>    BNE.w JL_0_9C70
0002C4C0 <AmiBlitz3.ab3@14228>    BSR.w get1bytemain
0002C4C4 <AmiBlitz3.ab3@14229>   CMP.w #$3D,D0
0002C4C8 <AmiBlitz3.ab3@14230>    BNE.w JL_0_9C64
0002C4CE <AmiBlitz3.ab3@14231>   LEA ople,A0
0002C4D2 <AmiBlitz3.ab3@14232> BRA.w JL_0_9CCA
0002C4D6 <AmiBlitz3.ab3@14236>   CMP.w #$3E,D0
0002C4DA <AmiBlitz3.ab3@14237>    BNE.w JL_0_9C96
0002C4DE <AmiBlitz3.ab3@14238> BRA.w JL_0_9CC4
0002C4E2 <AmiBlitz3.ab3@14242>   CMP.w #$3E,D0
0002C4E6 <AmiBlitz3.ab3@14243>    BNE.w JL_0_9C9E
0002C4EA <AmiBlitz3.ab3@14244>    BSR.w get1bytemain
0002C4EE <AmiBlitz3.ab3@14245>   CMP.w #$3D,D0
0002C4F2 <AmiBlitz3.ab3@14246>    BNE.w JL_0_9C8E
0002C4F8 <AmiBlitz3.ab3@14247>   LEA opge,A0
0002C4FC <AmiBlitz3.ab3@14248> BRA.w JL_0_9CCA
0002C500 <AmiBlitz3.ab3@14252>   CMP.w #$3C,D0
0002C504 <AmiBlitz3.ab3@14253>    BEQ.w JL_0_9CC4
0002C50E <AmiBlitz3.ab3@14257>     MOVE.w oldqflag,instringon
0002C514 <AmiBlitz3.ab3@14258>     MOVEA.l lastsourcepos,A5
0002C518 <AmiBlitz3.ab3@14259> BRA.w JL_0_9CCA
0002C51C <AmiBlitz3.ab3@14263>   CMP.w #$3D,D0
0002C520 <AmiBlitz3.ab3@14264>    BNE.w JL_0_9CCA
0002C524 <AmiBlitz3.ab3@14265>    BSR.w get1bytemain
0002C528 <AmiBlitz3.ab3@14266>   CMP.w #$3E,D0
0002C52C <AmiBlitz3.ab3@14267>    BNE.w JL_0_9CBC
0002C532 <AmiBlitz3.ab3@14268>   LEA opge,A0
0002C536 <AmiBlitz3.ab3@14269> BRA.w JL_0_9CCA
0002C53A <AmiBlitz3.ab3@14273>   CMP.w #$3C,D0
0002C53E <AmiBlitz3.ab3@14274>   BNE.w JL_0_9C96
0002C544 <AmiBlitz3.ab3@14277>   LEA opne,A0
0002C548 <AmiBlitz3.ab3@14280>   MOVE.w $1E(A0),D1
0002C54A <AmiBlitz3.ab3@14281> RTS
0002C54C <AmiBlitz3.ab3@14288>   MOVE.w d2,d1
0002C54E <AmiBlitz3.ab3@14289>   SUBQ.w #1,D1
0002C552 <AmiBlitz3.ab3@14290>    BMI.w illoperr
0002C554 <AmiBlitz3.ab3@14291>   LSL.w #2,D1
0002C558 <AmiBlitz3.ab3@14292>   MOVE.l $2(A0,D1.W),D1
0002C55C <AmiBlitz3.ab3@14293>    BEQ.w illoperr
0002C55E <AmiBlitz3.ab3@14294>   MOVEA.l D1,A0
0002C560 <AmiBlitz3.ab3@14297> JMP (A0)
0002C564 <AmiBlitz3.ab3@14313>   MOVEA.l precsp(PC),A1
0002C56A <AmiBlitz3.ab3@14314>   CMPA.l #precstackf,A1
0002C56E <AmiBlitz3.ab3@14315>    BCC.w pserr
0002C570 <AmiBlitz3.ab3@14316>   MOVE.w -(A1),D1
0002C572 <AmiBlitz3.ab3@14317>   MOVEA.l -(A1),A0
0002C578 <AmiBlitz3.ab3@14318>   MOVE.l A1,precsp
0002C57A <AmiBlitz3.ab3@14319> RTS
0002C57E <AmiBlitz3.ab3@14322> precsp:      Dc.l precstack
0002C67A <AmiBlitz3.ab3@14323> precstack:   Ds.l 63                                       ;ds 6*32 org source   ;Lotsa Room?
0002C6FE <AmiBlitz3.ab3@14324>              Ds.l 33
0002C700 <AmiBlitz3.ab3@14330> mseq:  SEQ D0
0002C702 <AmiBlitz3.ab3@14331> msne:    SNE D0
0002C704 <AmiBlitz3.ab3@14332> mslt:    SLT D0
0002C706 <AmiBlitz3.ab3@14333> msle:    SLE D0
0002C708 <AmiBlitz3.ab3@14334> msgt:    SGT D0
0002C70A <AmiBlitz3.ab3@14335> msge:    SGE D0
0002C70C <AmiBlitz3.ab3@14337> cmp0:    CMP.b D0,D0
0002C70E <AmiBlitz3.ab3@14338> cmp1:    CMP.w D0,D0
0002C710 <AmiBlitz3.ab3@14339> cmp2:    CMP.l D0,D0
0002C714 <AmiBlitz3.ab3@14343>   MOVE.w cmp0(PC),D1
0002C718 <AmiBlitz3.ab3@14344> BRA.w doeqcmp2                                            ;writecompare
0002C71C <AmiBlitz3.ab3@14348>   MOVE.w cmp0(PC),D1
0002C720 <AmiBlitz3.ab3@14349> BRA.w donecmp2
0002C724 <AmiBlitz3.ab3@14353>   MOVE.w cmp0(PC),D1
0002C728 <AmiBlitz3.ab3@14354> BRA.w doltcmp2
0002C72C <AmiBlitz3.ab3@14358>   MOVE.w cmp0(PC),D1
0002C730 <AmiBlitz3.ab3@14359> BRA.w dolecmp2
0002C734 <AmiBlitz3.ab3@14363>   MOVE.w cmp0(PC),D1
0002C738 <AmiBlitz3.ab3@14364> BRA.w dogtcmp2
0002C73C <AmiBlitz3.ab3@14369>   MOVE.w cmp0(PC),D1
0002C740 <AmiBlitz3.ab3@14370> BRA.w dogecmp2
0002C744 <AmiBlitz3.ab3@14374>   MOVE.w cmp1(PC),D1
0002C748 <AmiBlitz3.ab3@14375> BRA.w doeqcmp2
0002C74C <AmiBlitz3.ab3@14379>   MOVE.w cmp1(PC),D1
0002C750 <AmiBlitz3.ab3@14380> BRA.w donecmp2
0002C754 <AmiBlitz3.ab3@14384>   MOVE.w cmp1(PC),D1
0002C758 <AmiBlitz3.ab3@14385> BRA.w doltcmp2
0002C75C <AmiBlitz3.ab3@14389>   MOVE.w cmp1(PC),D1
0002C760 <AmiBlitz3.ab3@14390> BRA.w dolecmp2
0002C764 <AmiBlitz3.ab3@14394>   MOVE.w cmp1(PC),D1
0002C768 <AmiBlitz3.ab3@14395> BRA.w dogtcmp2
0002C76C <AmiBlitz3.ab3@14400>   MOVE.w cmp1(PC),D1
0002C770 <AmiBlitz3.ab3@14401> BRA.w dogecmp2
0002C774 <AmiBlitz3.ab3@14405>   MOVE.w cmp2(PC),D1                                   ;writecomparelong
0002C778 <AmiBlitz3.ab3@14406> BRA doeqcmp2
0002C77C <AmiBlitz3.ab3@14409>   MOVE.w cmp2(PC),D1
0002C780 <AmiBlitz3.ab3@14410> BRA donecmp2
0002C784 <AmiBlitz3.ab3@14414>   MOVE.w cmp2(PC),D1
0002C788 <AmiBlitz3.ab3@14415> BRA.w doltcmp2
0002C78C <AmiBlitz3.ab3@14419>   MOVE.w cmp2(PC),D1
0002C790 <AmiBlitz3.ab3@14420> BRA.w dolecmp2
0002C794 <AmiBlitz3.ab3@14424>   MOVE.w cmp2(PC),D1
0002C798 <AmiBlitz3.ab3@14425> BRA.w dogtcmp2
0002C79C <AmiBlitz3.ab3@14429>   MOVE.w cmp2(PC),D1
0002C7A0 <AmiBlitz3.ab3@14430> BRA.w dogecmp2
0002C7A2 <AmiBlitz3.ab3@14433> cfregat:  Ds.w 1
0002C7A8 <AmiBlitz3.ab3@14437>   MOVE.w D1,libjsr+2
0002C7AC <AmiBlitz3.ab3@14438>    BSR.w JL_0_AD40
0002C7AE <AmiBlitz3.ab3@14439>   MOVE.l D4,D1
0002C7B2 <AmiBlitz3.ab3@14440>    BSR.w JL_0_AD38
0002C7B6 <AmiBlitz3.ab3@14441>   MOVE.w #$C900,D1
0002C7BA <AmiBlitz3.ab3@14442>    BSR.w Atokejsr
0002C7BE <AmiBlitz3.ab3@14443>    BSR.w JL_0_A352
0002C7C4 <AmiBlitz3.ab3@14444>   MOVE.l libjsr,D1
0002C7C8 <AmiBlitz3.ab3@14445>    BSR.w writelong
0002C7D2 <AmiBlitz3.ab3@14446>   MOVE.w regnum,cfregat
0002C7D8 <AmiBlitz3.ab3@14447>   CLR.w regnum
0002C7DA <AmiBlitz3.ab3@14448> RTS
0002C7E4 <AmiBlitz3.ab3@14452>   MOVE.w cfregat,regnum
0002C7E8 <AmiBlitz3.ab3@14453>    BSR.w JL_0_A36E
0002C7EA <AmiBlitz3.ab3@14454>   MOVE.l D5,D1
0002C7EE <AmiBlitz3.ab3@14455> BRA.w JL_0_AD38
0002C7F0 <AmiBlitz3.ab3@14459>    MOVEQ.l #-$2A,D1
0002C7F6 <AmiBlitz3.ab3@14460>    TST.b fpu
0002C7FA <AmiBlitz3.ab3@14461>    BEQ do_equal_float__nofpu
0002C7FC <AmiBlitz3.ab3@14462>    MOVEQ #0,d1
0002C802 <AmiBlitz3.ab3@14463>    MOVE.w regnum,d1
0002C804 <AmiBlitz3.ab3@14464>    MOVE.l d1,d2
0002C806 <AmiBlitz3.ab3@14465>    ASL.l #7,d1
0002C808 <AmiBlitz3.ab3@14466>    ADDQ  #1,d2
0002C80A <AmiBlitz3.ab3@14467>    ASL.l #8,d2
0002C80C <AmiBlitz3.ab3@14468>    ASL.l #2,d2
0002C80E <AmiBlitz3.ab3@14469>    OR.l d2,d1
0002C814 <AmiBlitz3.ab3@14470>    OR.l #$f2000038,d1
0002C81A <AmiBlitz3.ab3@14471>    JSR writelong
0002C81E <AmiBlitz3.ab3@14472>    MOVE.w #$f240,d1
0002C824 <AmiBlitz3.ab3@14473>    OR.w regnum,d1
0002C828 <AmiBlitz3.ab3@14474>    BSR writeword
0002C82A <AmiBlitz3.ab3@14475>    MOVEQ.l #1,d2
0002C82E <AmiBlitz3.ab3@14476>    MOVE.w #1,d1                                            ;fpu comp fseq
0002C832 <AmiBlitz3.ab3@14477>    BSR writeword
0002C834 <AmiBlitz3.ab3@14478> RTS
0002C838 <AmiBlitz3.ab3@14481>    BSR.w docflib
0002C83C <AmiBlitz3.ab3@14482>    BSR.w doeqcmp
0002C840 <AmiBlitz3.ab3@14483> BRA.w docflib2
0002C842 <AmiBlitz3.ab3@14487>   MOVEQ.l #-$2A,D1
0002C848 <AmiBlitz3.ab3@14488>   TST.b fpu
0002C84C <AmiBlitz3.ab3@14489>    BEQ do_not_equal_float__nofpu
0002C84E <AmiBlitz3.ab3@14490>    MOVEQ #0,d1
0002C854 <AmiBlitz3.ab3@14491>    MOVE.w regnum,d1
0002C856 <AmiBlitz3.ab3@14492>    MOVE.l d1,d2
0002C858 <AmiBlitz3.ab3@14493>    ASL.l #7,d1
0002C85A <AmiBlitz3.ab3@14494>    ADDQ  #1,d2
0002C85C <AmiBlitz3.ab3@14495>    ASL.l #8,d2
0002C85E <AmiBlitz3.ab3@14496>    ASL.l #2,d2
0002C860 <AmiBlitz3.ab3@14497>    OR.l d2,d1
0002C866 <AmiBlitz3.ab3@14498>    OR.l #$f2000038,d1
0002C86C <AmiBlitz3.ab3@14499>    JSR writelong
0002C870 <AmiBlitz3.ab3@14500>    MOVE.w #$f240,d1
0002C876 <AmiBlitz3.ab3@14501>    OR.w regnum,d1
0002C87A <AmiBlitz3.ab3@14502>    BSR writeword
0002C880 <AmiBlitz3.ab3@14503>    MOVE.l #1,d2
0002C884 <AmiBlitz3.ab3@14504>    MOVE.w #$e,d1                                           ;fpu comp fsne
0002C888 <AmiBlitz3.ab3@14505>    BSR writeword
0002C88A <AmiBlitz3.ab3@14506> RTS
0002C88E <AmiBlitz3.ab3@14509>    BSR.w docflib
0002C892 <AmiBlitz3.ab3@14510>    BSR.w donecmp
0002C896 <AmiBlitz3.ab3@14511> BRA.w docflib2
0002C898 <AmiBlitz3.ab3@14515>   MOVEQ.l #-$2A,D1
0002C89E <AmiBlitz3.ab3@14516>     TST.b fpu
0002C8A2 <AmiBlitz3.ab3@14517>    BEQ do_littler_float__nofpu
0002C8A4 <AmiBlitz3.ab3@14518>    MOVEQ #0,d1
0002C8AA <AmiBlitz3.ab3@14519>    MOVE.w regnum,d1
0002C8AC <AmiBlitz3.ab3@14520>    MOVE.l d1,d2
0002C8AE <AmiBlitz3.ab3@14521>    ASL.l #7,d1
0002C8B0 <AmiBlitz3.ab3@14522>    ADDQ  #1,d2
0002C8B2 <AmiBlitz3.ab3@14523>    ASL.l #8,d2
0002C8B4 <AmiBlitz3.ab3@14524>    ASL.l #2,d2
0002C8B6 <AmiBlitz3.ab3@14525>    OR.l d2,d1
0002C8BC <AmiBlitz3.ab3@14526>    OR.l #$f2000038,d1
0002C8C2 <AmiBlitz3.ab3@14527>    JSR writelong
0002C8C6 <AmiBlitz3.ab3@14528>    MOVE.w #$f240,d1
0002C8CC <AmiBlitz3.ab3@14529>    OR.w regnum,d1
0002C8D0 <AmiBlitz3.ab3@14530>    BSR writeword
0002C8D6 <AmiBlitz3.ab3@14531>    MOVE.l #$1,d2
0002C8DA <AmiBlitz3.ab3@14532>    MOVE.w #$14,d1                                          ;fpu comp fslt
0002C8DE <AmiBlitz3.ab3@14533>    BSR writeword
0002C8E0 <AmiBlitz3.ab3@14534> RTS
0002C8E4 <AmiBlitz3.ab3@14537>    BSR.w docflib
0002C8E8 <AmiBlitz3.ab3@14538>    BSR.w doltcmp
0002C8EC <AmiBlitz3.ab3@14539> BRA.w docflib2
0002C8EE <AmiBlitz3.ab3@14543>   MOVEQ.l #-$2A,D1
0002C8F4 <AmiBlitz3.ab3@14544>   TST.b fpu
0002C8F8 <AmiBlitz3.ab3@14545>    BEQ do_littler_equal_float__nofpu
0002C8FA <AmiBlitz3.ab3@14546>    MOVEQ #0,d1
0002C900 <AmiBlitz3.ab3@14547>    MOVE.w regnum,d1
0002C902 <AmiBlitz3.ab3@14548>    MOVE.l d1,d2
0002C904 <AmiBlitz3.ab3@14549>    ASL.l #7,d1
0002C906 <AmiBlitz3.ab3@14550>    ADDQ  #1,d2
0002C908 <AmiBlitz3.ab3@14551>    ASL.l #8,d2
0002C90A <AmiBlitz3.ab3@14552>    ASL.l #2,d2
0002C90C <AmiBlitz3.ab3@14553>    OR.l d2,d1
0002C912 <AmiBlitz3.ab3@14554>    OR.l #$f2000038,d1
0002C918 <AmiBlitz3.ab3@14555>    JSR writelong
0002C91C <AmiBlitz3.ab3@14556>    MOVE.w #$f240,d1
0002C922 <AmiBlitz3.ab3@14557>    OR.w regnum,d1
0002C926 <AmiBlitz3.ab3@14558>    BSR writeword
0002C92C <AmiBlitz3.ab3@14559>    MOVE.l #1,d2
0002C930 <AmiBlitz3.ab3@14560>    MOVE.w #$15,d1                                          ;fpu comp fsle
0002C934 <AmiBlitz3.ab3@14561>    BSR writeword
0002C936 <AmiBlitz3.ab3@14562> RTS
0002C93A <AmiBlitz3.ab3@14565>    BSR.w docflib
0002C93E <AmiBlitz3.ab3@14566>    BSR.w dolecmp
0002C942 <AmiBlitz3.ab3@14567> BRA.w docflib2
0002C944 <AmiBlitz3.ab3@14571>   MOVEQ.l #-$2A,D1
0002C94A <AmiBlitz3.ab3@14572>    TST.b fpu
0002C94E <AmiBlitz3.ab3@14573>    BEQ do_greater_float__nofpu
0002C950 <AmiBlitz3.ab3@14574>     MOVEQ #0,d1
0002C956 <AmiBlitz3.ab3@14575>    MOVE.w regnum,d1
0002C958 <AmiBlitz3.ab3@14576>    MOVE.l d1,d2
0002C95A <AmiBlitz3.ab3@14577>    ASL.l #7,d1
0002C95C <AmiBlitz3.ab3@14578>    ADDQ  #1,d2
0002C95E <AmiBlitz3.ab3@14579>    ASL.l #8,d2
0002C960 <AmiBlitz3.ab3@14580>    ASL.l #2,d2
0002C962 <AmiBlitz3.ab3@14581>    OR.l d2,d1
0002C968 <AmiBlitz3.ab3@14582>    OR.l #$f2000038,d1
0002C96E <AmiBlitz3.ab3@14583>    JSR writelong
0002C972 <AmiBlitz3.ab3@14584>    MOVE.w #$f240,d1
0002C978 <AmiBlitz3.ab3@14585>    OR.w regnum,d1
0002C97C <AmiBlitz3.ab3@14586>    BSR writeword
0002C982 <AmiBlitz3.ab3@14587>    MOVE.l #1,d2
0002C986 <AmiBlitz3.ab3@14588>    MOVE.w #$12,d1                                          ;fpu comp fsgt
0002C98A <AmiBlitz3.ab3@14589>    BSR writeword
0002C98C <AmiBlitz3.ab3@14590> RTS
0002C990 <AmiBlitz3.ab3@14593>    BSR.w docflib
0002C994 <AmiBlitz3.ab3@14594>    BSR.w dogtcmp
0002C998 <AmiBlitz3.ab3@14595> BRA.w docflib2
0002C99A <AmiBlitz3.ab3@14599>   MOVEQ.l #-$2A,D1
0002C9A0 <AmiBlitz3.ab3@14600>  TST.b fpu
0002C9A4 <AmiBlitz3.ab3@14601>    BEQ do_greater_equal_float__nofpu
0002C9A6 <AmiBlitz3.ab3@14602>    MOVEQ #0,d1
0002C9AC <AmiBlitz3.ab3@14603>    MOVE.w regnum,d1
0002C9AE <AmiBlitz3.ab3@14604>    MOVE.l d1,d2
0002C9B0 <AmiBlitz3.ab3@14605>    ASL.l #7,d1
0002C9B2 <AmiBlitz3.ab3@14606>    ADDQ  #1,d2
0002C9B4 <AmiBlitz3.ab3@14607>    ASL.l #8,d2
0002C9B6 <AmiBlitz3.ab3@14608>    ASL.l #2,d2
0002C9B8 <AmiBlitz3.ab3@14609>    OR.l d2,d1
0002C9BE <AmiBlitz3.ab3@14610>    OR.l #$f2000038,d1
0002C9C4 <AmiBlitz3.ab3@14611>    JSR writelong
0002C9C8 <AmiBlitz3.ab3@14612>    MOVE.w #$f240,d1
0002C9CE <AmiBlitz3.ab3@14613>    OR.w regnum,d1
0002C9D2 <AmiBlitz3.ab3@14614>    BSR writeword
0002C9D8 <AmiBlitz3.ab3@14615>    MOVE.l #1,d2
0002C9DC <AmiBlitz3.ab3@14616>    MOVE.w #$13,d1                                          ;fpu comp fsge
0002C9E0 <AmiBlitz3.ab3@14617>    BSR writeword
0002C9E2 <AmiBlitz3.ab3@14618> RTS
0002C9E6 <AmiBlitz3.ab3@14621>    BSR.w docflib
0002C9EA <AmiBlitz3.ab3@14622>    BSR.w dogecmp
0002C9EE <AmiBlitz3.ab3@14623> BRA.w docflib2
0002C9F4 <AmiBlitz3.ab3@14628>   MOVE.l #$CE00,D1
0002C9FA <AmiBlitz3.ab3@14629>    MOVE.l d1,lastinstruction
0002C9FE <AmiBlitz3.ab3@14630>    BSR.w Atokejsr
0002CA02 <AmiBlitz3.ab3@14631> BRA.w doeqcmp
0002CA08 <AmiBlitz3.ab3@14635>   MOVE.l #$CE00,D1
0002CA0E <AmiBlitz3.ab3@14636>    MOVE.l d1,lastinstruction
0002CA12 <AmiBlitz3.ab3@14637>    BSR.w Atokejsr
0002CA16 <AmiBlitz3.ab3@14638> BRA.w donecmp
0002CA1C <AmiBlitz3.ab3@14642>   MOVE.l #$CE00,D1
0002CA22 <AmiBlitz3.ab3@14643>    MOVE.l d1,lastinstruction
0002CA26 <AmiBlitz3.ab3@14644>    BSR.w Atokejsr
0002CA2A <AmiBlitz3.ab3@14645> BRA.w doltcmp
0002CA30 <AmiBlitz3.ab3@14649>   MOVE.l #$CE00,D1
0002CA36 <AmiBlitz3.ab3@14650>    MOVE.l d1,lastinstruction
0002CA3A <AmiBlitz3.ab3@14651>    BSR.w Atokejsr
0002CA3E <AmiBlitz3.ab3@14652> BRA.w dolecmp
0002CA44 <AmiBlitz3.ab3@14656>   MOVE.l #$CE00,D1
0002CA4A <AmiBlitz3.ab3@14657>    MOVE.l d1,lastinstruction
0002CA4E <AmiBlitz3.ab3@14658>    BSR.w Atokejsr
0002CA52 <AmiBlitz3.ab3@14659> BRA.w dogtcmp
0002CA58 <AmiBlitz3.ab3@14663>   MOVE.l #$CE00,D1
0002CA5E <AmiBlitz3.ab3@14664>    MOVE.l d1,lastinstruction
0002CA62 <AmiBlitz3.ab3@14665>    BSR.w Atokejsr
0002CA66 <AmiBlitz3.ab3@14666> BRA.w dogecmp
0002CA6C <AmiBlitz3.ab3@14671>   TST.b fast                                               ;compare
0002CA70 <AmiBlitz3.ab3@14672>   BEQ cmpit__org
0002CA76 <AmiBlitz3.ab3@14676>   MOVE.l destpointer,a0
0002CA7C <AmiBlitz3.ab3@14677>   SUB.l imm_addr,a0
0002CA82 <AmiBlitz3.ab3@14678>   CMP.l #6,a0
0002CA86 <AmiBlitz3.ab3@14679>   BNE cmpit__l11
0002CA8C <AmiBlitz3.ab3@14680>   MOVE.l imm_addr,a0
0002CA94 <AmiBlitz3.ab3@14681>   CMP.w #$223c,imm_addr
0002CA98 <AmiBlitz3.ab3@14682>   BNE cmpit__org
0002CA9E <AmiBlitz3.ab3@14683>   ADD.w #$8e80,-6(a4)
0002CAA4 <AmiBlitz3.ab3@14686>   CLR.l imm_addr
0002CAA6 <AmiBlitz3.ab3@14687> RTS
0002CAAC <AmiBlitz3.ab3@14690>   CMP.l #4,a0
0002CAB0 <AmiBlitz3.ab3@14691>   BNE cmpit__l10
0002CAB4 <AmiBlitz3.ab3@14692>   CMP.b #2,d3
0002CAB8 <AmiBlitz3.ab3@14693>   BNE cmpit__l11b
0002CABE <AmiBlitz3.ab3@14694>   ADD.w #$7e40,-4(a4)
0002CAC0 <AmiBlitz3.ab3@14695> RTS
0002CAC6 <AmiBlitz3.ab3@14698>  ADD.w #$7e00,-4(a4)
0002CAC8 <AmiBlitz3.ab3@14699> RTS
0002CACE <AmiBlitz3.ab3@14702>    MOVE.l destpointer,a0
0002CAD4 <AmiBlitz3.ab3@14703>    SUB.l load_var_addr,a0
0002CAD8 <AmiBlitz3.ab3@14704>    CMP.w #4,a0
0002CADC <AmiBlitz3.ab3@14705>    BNE cmpit__org
0002CAE0 <AmiBlitz3.ab3@14706>    CMP.b #3,d3
0002CAE4 <AmiBlitz3.ab3@14707>    BCS cmpit__lv1
0002CAEA <AmiBlitz3.ab3@14708>    CLR.l load_var_addr
0002CAF0 <AmiBlitz3.ab3@14709>    ADD.w #$9080-$200,-4(a4)
0002CAF2 <AmiBlitz3.ab3@14710> RTS
0002CAF6 <AmiBlitz3.ab3@14713>   CMP.b #2,d3
0002CAFA <AmiBlitz3.ab3@14714>    BNE cmpit__org
0002CB00 <AmiBlitz3.ab3@14715>    CLR.l load_var_addr
0002CB06 <AmiBlitz3.ab3@14716>    ADD.w #$8040-$200,-4(a4)
0002CB08 <AmiBlitz3.ab3@14717> RTS
0002CB0E <AmiBlitz3.ab3@14720>   MOVE.w regnum,D3
0002CB10 <AmiBlitz3.ab3@14721>   OR.w D3,D1
0002CB12 <AmiBlitz3.ab3@14722>   LSL.w #8,D3
0002CB14 <AmiBlitz3.ab3@14723>   LSL.w #1,D3
0002CB16 <AmiBlitz3.ab3@14724>   OR.w D3,D1
0002CB18 <AmiBlitz3.ab3@14725>   ADDQ.w #1,D1
0002CB1C <AmiBlitz3.ab3@14726> BRA.w writeword
0002CB20 <AmiBlitz3.ab3@14730>    BSR.w cmpit
0002CB24 <AmiBlitz3.ab3@14733>    MOVE.w mseq(PC),D1
0002CB28 <AmiBlitz3.ab3@14734> BRA.w cpoke
0002CB2C <AmiBlitz3.ab3@14738>   BSR.w cmpit
0002CB30 <AmiBlitz3.ab3@14741>   MOVE.w msne(PC),D1
0002CB34 <AmiBlitz3.ab3@14742> BRA.w cpoke
0002CB38 <AmiBlitz3.ab3@14746>   BSR.w cmpit
0002CB3C <AmiBlitz3.ab3@14749>    MOVE.w mslt(PC),D1
0002CB40 <AmiBlitz3.ab3@14750> BRA.w cpoke
0002CB44 <AmiBlitz3.ab3@14754>    BSR.w cmpit
0002CB48 <AmiBlitz3.ab3@14757>    MOVE.w msle(PC),D1
0002CB4C <AmiBlitz3.ab3@14758> BRA.w cpoke
0002CB50 <AmiBlitz3.ab3@14762>    BSR.w cmpit
0002CB54 <AmiBlitz3.ab3@14765>    MOVE.w msgt(PC),D1
0002CB58 <AmiBlitz3.ab3@14766> BRA.w cpoke
0002CB5C <AmiBlitz3.ab3@14770>   BSR.w cmpit
0002CB60 <AmiBlitz3.ab3@14773>    MOVE.w msge(PC),D1
0002CB66 <AmiBlitz3.ab3@14776>    OR.w regnum,D1
0002CB6A <AmiBlitz3.ab3@14777>    CMP.w #5,d2
0002CB6E <AmiBlitz3.ab3@14778>    BNE cpoke__nod0
0002CB72 <AmiBlitz3.ab3@14779>    CMP.w #5,d3
0002CB76 <AmiBlitz3.ab3@14780>    BNE cpoke__nod0
0002CB78 <AmiBlitz3.ab3@14781>    MOVE.l d1,-(a7)
0002CB7E <AmiBlitz3.ab3@14782>    MOVE.l #$44004a00,d1                                    ;68k neg.b:tst.b
0002CB82 <AmiBlitz3.ab3@14783>    BSR writelong
0002CB84 <AmiBlitz3.ab3@14784>    MOVE.l (a7)+,d1
0002CB88 <AmiBlitz3.ab3@14787>    BSR.w writeword                                         ;writeseq
0002CB8A <AmiBlitz3.ab3@14788>    MOVEQ.l #1,d2
0002CB90 <AmiBlitz3.ab3@14789>    MOVE.l lasttoken,d1
0002CB96 <AmiBlitz3.ab3@14790>     TST.b fast
0002CB9A <AmiBlitz3.ab3@14791>     BEQ.s cpoke__l11
0002CBA0 <AmiBlitz3.ab3@14792>    CMP.l #$800b,d1
0002CBA4 <AmiBlitz3.ab3@14793>    BEQ cpoke__l10
0002CBA8 <AmiBlitz3.ab3@14796>   MOVE.w #$4880,D1                                         ;ext.w D regat
0002CBAE <AmiBlitz3.ab3@14797>   OR.w regnum,D1
0002CBB2 <AmiBlitz3.ab3@14798>    BSR.w writeword                                         ;writeext.w
0002CBB4 <AmiBlitz3.ab3@14799>   MOVEQ.l #$02,D2                                          ;type now WORD!
0002CBB6 <AmiBlitz3.ab3@14802> RTS
0002CBBA <AmiBlitz3.ab3@14807>   MOVE.w #$D040,D1
0002CBBC <AmiBlitz3.ab3@14808>   MOVEQ.l #$02,D2                                          ;writeaddword   ;now a word
0002CBC0 <AmiBlitz3.ab3@14809> BRA.w doplus2
0002CBC4 <AmiBlitz3.ab3@14813>   MOVE.w #$D040,D1
0002CBC6 <AmiBlitz3.ab3@14814>   MOVEQ.l #$03,D2                                          ;now a long
0002CBCA <AmiBlitz3.ab3@14815>    BSR.w doplus2
0002CBCE <AmiBlitz3.ab3@14816> BRA.w convert_word_to_long
0002CBD2 <AmiBlitz3.ab3@14820>   MOVE.w #$D080,D1                                         ;writeaddlong
0002CBD4 <AmiBlitz3.ab3@14823>   MOVE.w d1,a1
0002CBDA <AmiBlitz3.ab3@14824>   TST.b fast
0002CBDE <AmiBlitz3.ab3@14825>   BEQ doplus2__l10
0002CBE0 <AmiBlitz3.ab3@14829>   ASR.w #8,d1
0002CBE4 <AmiBlitz3.ab3@14830>   CMP.b #$90,d1
0002CBE8 <AmiBlitz3.ab3@14831>   BEQ doplus2__sub1
0002CBEC <AmiBlitz3.ab3@14832>   CMP.b #$d0,d1
0002CBF0 <AmiBlitz3.ab3@14833>   BNE doplus2__l10
0002CBF4 <AmiBlitz3.ab3@14834>   CMP.b #3,d3
0002CBF8 <AmiBlitz3.ab3@14835>   BCS doplus2__lq10
0002CBFE <AmiBlitz3.ab3@14836>   TST.b quickadd
0002CC04 <AmiBlitz3.ab3@14840>    MOVE.l destpointer,a0
0002CC0A <AmiBlitz3.ab3@14841>    CLR.b quickadd
0002CC10 <AmiBlitz3.ab3@14842>    CLR.l load_var_addr
0002CC16 <AmiBlitz3.ab3@14843>    SUB.l imm_addr,a0
0002CC1A <AmiBlitz3.ab3@14844>    CMP.w #6,a0
0002CC1E <AmiBlitz3.ab3@14845>    BEQ doplus2__li10
0002CC22 <AmiBlitz3.ab3@14846>    CMP.w #4,a0
0002CC26 <AmiBlitz3.ab3@14847>    BNE.s doplus2__li1
0002CC2C <AmiBlitz3.ab3@14848>    CLR.l imm_addr
0002CC32 <AmiBlitz3.ab3@14849>    ADD.w #$a040-$200,-4(a4)
0002CC34 <AmiBlitz3.ab3@14850> RTS
0002CC36 <AmiBlitz3.ab3@14853>    MOVE.l a4,a0
0002CC3C <AmiBlitz3.ab3@14854>    SUB.l load_var_addr,a0
0002CC42 <AmiBlitz3.ab3@14855>    CMP.l #$a,a0
0002CC46 <AmiBlitz3.ab3@14856>    BNE doplus2__l10e
0002CC4C <AmiBlitz3.ab3@14857>    CLR.l load_var_addr
0002CC50 <AmiBlitz3.ab3@14858>    MOVE.w -$8(a4),d1
0002CC56 <AmiBlitz3.ab3@14859>    MOVE.l -$4(a4),-$8(a4)
0002CC5A <AmiBlitz3.ab3@14860>    MOVE.w d1,-$4(a4)
0002CC60 <AmiBlitz3.ab3@14861>    SUB.w #$1980,-$a(a4)
0002CC66 <AmiBlitz3.ab3@14862>    SUBQ.l #2,destpointer
0002CC68 <AmiBlitz3.ab3@14863> RTS
0002CC6E <AmiBlitz3.ab3@14866>   CLR.b quickadd
0002CC72 <AmiBlitz3.ab3@14867> BRA doplus2__l10
0002CC78 <AmiBlitz3.ab3@14870>    CLR.l imm_addr
0002CC7C <AmiBlitz3.ab3@14871>    TST.l -4(a4)                                            ;skip If ADD.l #0,dx
0002CC80 <AmiBlitz3.ab3@14872>    BNE doplus2__doit
0002CC86 <AmiBlitz3.ab3@14873>    SUBQ.l #6,destpointer
0002CC88 <AmiBlitz3.ab3@14874> RTS
0002CC8E <AmiBlitz3.ab3@14877>    ADD.w #$b080-$200,-6(a4)
0002CC90 <AmiBlitz3.ab3@14878> RTS
0002CC96 <AmiBlitz3.ab3@14881>    MOVE.l destpointer,a0
0002CC9C <AmiBlitz3.ab3@14882>    SUB.l load_var_addr,a0
0002CCA0 <AmiBlitz3.ab3@14883>    CMP.w #4,a0
0002CCA4 <AmiBlitz3.ab3@14884>    BNE doplus2__l10
0002CCA8 <AmiBlitz3.ab3@14885>    CMP.b #3,d3
0002CCAC <AmiBlitz3.ab3@14886>    BNE doplus2__lv1
0002CCB2 <AmiBlitz3.ab3@14887>    CLR.l load_var_addr
0002CCB8 <AmiBlitz3.ab3@14888>    ADD.w #$b080-$200,-4(a4)
0002CCBA <AmiBlitz3.ab3@14889> RTS
0002CCBE <AmiBlitz3.ab3@14892>   CMP.b #2,d3
0002CCC2 <AmiBlitz3.ab3@14893>   BNE doplus2__l10
0002CCC8 <AmiBlitz3.ab3@14894>   CLR.l load_var_addr
0002CCCE <AmiBlitz3.ab3@14895>   ADD.w #$a040-$200,-4(a4)
0002CCD0 <AmiBlitz3.ab3@14896> RTS
0002CCD6 <AmiBlitz3.ab3@14899>   MOVE.w regnum,D3
0002CCD8 <AmiBlitz3.ab3@14900>   MOVE.w a1,d1
0002CCDA <AmiBlitz3.ab3@14901>   OR.w D3,D1
0002CCDC <AmiBlitz3.ab3@14902>   ADDQ.w #1,D1
0002CCDE <AmiBlitz3.ab3@14903>   LSL.w #8,D3
0002CCE0 <AmiBlitz3.ab3@14904>   LSL.w #1,D3
0002CCE2 <AmiBlitz3.ab3@14905>   OR.w D3,D1
0002CCE6 <AmiBlitz3.ab3@14906> BRA.w writeword
0002CCEA <AmiBlitz3.ab3@14909>    CMP.b #3,d3
0002CCEE <AmiBlitz3.ab3@14910>    BCS doplus2__sub1_lq10
0002CCF4 <AmiBlitz3.ab3@14911>    TST.b quickadd
0002CCFA <AmiBlitz3.ab3@14915>    MOVE.l destpointer,a0
0002CD00 <AmiBlitz3.ab3@14916>    CLR.b quickadd
0002CD06 <AmiBlitz3.ab3@14917>    CLR.l load_var_addr
0002CD0C <AmiBlitz3.ab3@14918>    SUB.l imm_addr,a0
0002CD10 <AmiBlitz3.ab3@14919>    CMP.w #6,a0
0002CD14 <AmiBlitz3.ab3@14920>    BEQ doplus2__sub1_li10
0002CD18 <AmiBlitz3.ab3@14921>    CMP.w #4,a0
0002CD1C <AmiBlitz3.ab3@14922>    BNE.s doplus2__sub1_li1
0002CD22 <AmiBlitz3.ab3@14923>    CLR.l imm_addr
0002CD28 <AmiBlitz3.ab3@14924>    ADD.w #$6040-$200,-4(a4)
0002CD2A <AmiBlitz3.ab3@14925> RTS
0002CD2C <AmiBlitz3.ab3@14928>    MOVE.l a4,a0
0002CD32 <AmiBlitz3.ab3@14929>     SUB.l load_var_addr,a0
0002CD38 <AmiBlitz3.ab3@14930>     CMP.l #$a,a0
0002CD3C <AmiBlitz3.ab3@14931>     BNE doplus2__sub1_l10e
0002CD42 <AmiBlitz3.ab3@14932>    CLR.l load_var_addr
0002CD46 <AmiBlitz3.ab3@14933>    MOVE.w -$8(a4),d1
0002CD4C <AmiBlitz3.ab3@14934>    MOVE.l -$4(a4),-$8(a4)
0002CD50 <AmiBlitz3.ab3@14935>    MOVE.w d1,-$4(a4)
0002CD56 <AmiBlitz3.ab3@14936>    SUB.w #$1b80,-$a(a4)
0002CD5C <AmiBlitz3.ab3@14937>    SUBQ.l #2,destpointer
0002CD5E <AmiBlitz3.ab3@14938> RTS
0002CD64 <AmiBlitz3.ab3@14941>   CLR.b quickadd
0002CD68 <AmiBlitz3.ab3@14942> BRA doplus2__sub1_l10
0002CD6E <AmiBlitz3.ab3@14945>    CLR.l imm_addr
0002CD74 <AmiBlitz3.ab3@14946>    ADD.w #$7080-$200,-6(a4)
0002CD76 <AmiBlitz3.ab3@14947> RTS
0002CD7C <AmiBlitz3.ab3@14950>    MOVE.l destpointer,a0
0002CD82 <AmiBlitz3.ab3@14951>    SUB.l load_var_addr,a0
0002CD86 <AmiBlitz3.ab3@14952>    CMP.w #4,a0
0002CD8A <AmiBlitz3.ab3@14953>    BNE doplus2__sub1_l10
0002CD8E <AmiBlitz3.ab3@14954>    CMP.b #3,d3
0002CD92 <AmiBlitz3.ab3@14955>    BNE doplus2__sub1_lv1
0002CD98 <AmiBlitz3.ab3@14956>    CLR.l load_var_addr
0002CD9E <AmiBlitz3.ab3@14957>    ADD.w #$7080-$200,-4(a4)
0002CDA0 <AmiBlitz3.ab3@14958> RTS
0002CDA4 <AmiBlitz3.ab3@14961>    CMP.b #2,d3
0002CDA8 <AmiBlitz3.ab3@14962>    BNE doplus2__sub1_l10
0002CDAE <AmiBlitz3.ab3@14963>    CLR.l load_var_addr
0002CDB4 <AmiBlitz3.ab3@14964>    ADD.w #$6040-$200,-4(a4)
0002CDB6 <AmiBlitz3.ab3@14965> RTS
0002CDBC <AmiBlitz3.ab3@14968>   MOVE.w regnum,D3
0002CDBE <AmiBlitz3.ab3@14969>   MOVE.w a1,d1
0002CDC0 <AmiBlitz3.ab3@14970>   OR.w D3,D1
0002CDC2 <AmiBlitz3.ab3@14971>   ADDQ.w #1,D1
0002CDC4 <AmiBlitz3.ab3@14972>   LSL.w #8,D3
0002CDC6 <AmiBlitz3.ab3@14973>   LSL.w #1,D3
0002CDC8 <AmiBlitz3.ab3@14974>   OR.w D3,D1
0002CDCC <AmiBlitz3.ab3@14975> BRA.w writeword
0002CDCE <AmiBlitz3.ab3@14979>   MOVEQ #0,d0
0002CDD4 <AmiBlitz3.ab3@14980>   MOVE.w regnum,d0
0002CDD6 <AmiBlitz3.ab3@14981>   ADDQ #1,d0
0002CDD8 <AmiBlitz3.ab3@14982>   ASL.w #8,d0
0002CDDA <AmiBlitz3.ab3@14983>   ASL.w #2,d0
0002CDE0 <AmiBlitz3.ab3@14984>   MOVE.l #$f2000022,d1                                     ;fpu add
0002CDE2 <AmiBlitz3.ab3@14985>   OR.l d0,d1
0002CDE8 <AmiBlitz3.ab3@14986>   MOVE.w regnum,d0
0002CDEA <AmiBlitz3.ab3@14987>   ASL.w #7,d0
0002CDEC <AmiBlitz3.ab3@14988>   OR.l d0,d1
0002CDF0 <AmiBlitz3.ab3@14989> BRA.w writelong
0002CDF6 <AmiBlitz3.ab3@14995>   TST.b iee
0002CDFA <AmiBlitz3.ab3@14996>   BNE do_plus_float__fadd1
0002CDFE <AmiBlitz3.ab3@14997>   MOVE.w #$FFBE,D1                                         ;#-66,d1 org soruce ;floatadd
0002CE04 <AmiBlitz3.ab3@15000>    MOVE.w D1,libjsr+2
0002CE08 <AmiBlitz3.ab3@15001>    BSR.w JL_0_AD40
0002CE0A <AmiBlitz3.ab3@15002>   MOVE.l D4,D1
0002CE0E <AmiBlitz3.ab3@15003>    BSR.w JL_0_AD38
0002CE12 <AmiBlitz3.ab3@15004>   MOVE.w #$C900,D1
0002CE16 <AmiBlitz3.ab3@15005>    BSR.w Atokejsr
0002CE1A <AmiBlitz3.ab3@15006>    BSR.w JL_0_A352
0002CE20 <AmiBlitz3.ab3@15007>   MOVE.l libjsr,D1
0002CE24 <AmiBlitz3.ab3@15008>    BSR.w writelong
0002CE28 <AmiBlitz3.ab3@15009>    BSR.w JL_0_A36E
0002CE2A <AmiBlitz3.ab3@15010>   MOVE.l D5,D1
0002CE2E <AmiBlitz3.ab3@15011> BRA.w JL_0_AD38
0002CE34 <AmiBlitz3.ab3@15015>   MOVE.w regnum,D1
0002CE36 <AmiBlitz3.ab3@15016>   LSL.w #8,D1
0002CE38 <AmiBlitz3.ab3@15017>   LSL.w #1,D1
0002CE3A <AmiBlitz3.ab3@15018>   MOVE.w D1,-(A7)
0002CE3E <AmiBlitz3.ab3@15019>   CMP.w #3072,d1
0002CE42 <AmiBlitz3.ab3@15020>   BEQ 'l1
0002CE48 <AmiBlitz3.ab3@15021>   OR.w addcode,D1                                          ;move.l (a7)+,d0
0002CE4C <AmiBlitz3.ab3@15022> BRA 'l2
0002CE50 <AmiBlitz3.ab3@15025>    MOVE.w #$588f,d1                                        ;addq.l #4,a7
0002CE54 <AmiBlitz3.ab3@15028>    BSR.w writeword
0002CE56 <AmiBlitz3.ab3@15029>   MOVE.w (A7)+,D1
0002CE5C <AmiBlitz3.ab3@15030>   OR.w addcode+2,D1                                        ;native string add.l d0,(a7)
0002CE60 <AmiBlitz3.ab3@15031> BRA.w writeword
0002CE64 <AmiBlitz3.ab3@15037>   MOVE.w #$9040,D1
0002CE68 <AmiBlitz3.ab3@15038> BRA.w doplus2
0002CE6C <AmiBlitz3.ab3@15042>   MOVE.w #$9040,D1
0002CE70 <AmiBlitz3.ab3@15043> BRA.w doplus2
0002CE74 <AmiBlitz3.ab3@15047>   MOVE.w #$9080,D1
0002CE78 <AmiBlitz3.ab3@15048> BRA.w doplus2
0002CE7E <AmiBlitz3.ab3@15052>    TST.b iee
0002CE82 <AmiBlitz3.ab3@15053>     BNE do_minus_float__fs1
0002CE86 <AmiBlitz3.ab3@15054>   MOVE.w #$FFB8,D1                                         ;floatsub
0002CE8A <AmiBlitz3.ab3@15055> BRA.w doflib
0002CE8C <AmiBlitz3.ab3@15058>   MOVEQ #0,d0
0002CE92 <AmiBlitz3.ab3@15059>   MOVE.w regnum,d0
0002CE94 <AmiBlitz3.ab3@15060>   ADDQ #1,d0
0002CE96 <AmiBlitz3.ab3@15061>   ASL.w #8,d0
0002CE98 <AmiBlitz3.ab3@15062>   ASL.w #2,d0
0002CE9E <AmiBlitz3.ab3@15063>   MOVE.l #$f2000028,d1
0002CEA0 <AmiBlitz3.ab3@15064>   OR.l d0,d1
0002CEA6 <AmiBlitz3.ab3@15065>   MOVE.w regnum,d0
0002CEA8 <AmiBlitz3.ab3@15066>   ASL.w #7,d0
0002CEAA <AmiBlitz3.ab3@15067>   OR.l d0,d1
0002CEAE <AmiBlitz3.ab3@15068> BRA.w writelong
0002CEB2 <AmiBlitz3.ab3@15074>   MOVE.w #$C1C0,D1
0002CEB4 <AmiBlitz3.ab3@15075>   MOVEQ.l #$02,D2                                          ;now a word
0002CEB8 <AmiBlitz3.ab3@15076> BRA.w doplus2
0002CEBC <AmiBlitz3.ab3@15080>   MOVE.w #$C1C0,D1
0002CEBE <AmiBlitz3.ab3@15081>   MOVEQ.l #$03,D2                                          ;now a long.
0002CEC2 <AmiBlitz3.ab3@15082> BRA.w doplus2
0002CEC6 <AmiBlitz3.ab3@15086>   MOVE.w #$CA00,D1                                         ;quickmul
0002CECA <AmiBlitz3.ab3@15087> BRA.w domylib
0002CED0 <AmiBlitz3.ab3@15091>   TST.b fast
0002CED4 <AmiBlitz3.ab3@15092>   BNE.s 'l10
0002CED8 <AmiBlitz3.ab3@15093>   MOVE.w #$CA01,D1                                         ;writelongmul
0002CEDC <AmiBlitz3.ab3@15094> BRA.w domylib
0002CEE2 <AmiBlitz3.ab3@15103>    MOVE.l destpointer,a0
0002CEE8 <AmiBlitz3.ab3@15104>    SUB.l imm_addr,a0
0002CEEC <AmiBlitz3.ab3@15105>    CMP.w #6,a0
0002CEF0 <AmiBlitz3.ab3@15106>    BNE 'li1
0002CEF2 <AmiBlitz3.ab3@15107>    MOVEQ.l #2,d1
0002CEF4 <AmiBlitz3.ab3@15108>    MOVEQ #1,d3
0002CEF8 <AmiBlitz3.ab3@15111>   CMP.l -4(a4),d1
0002CEFC <AmiBlitz3.ab3@15112>    BEQ 'oklsl
0002CEFE <AmiBlitz3.ab3@15113>     LSL.l #1,d1
0002CF04 <AmiBlitz3.ab3@15114>     ADD.l #1,d3
0002CF0A <AmiBlitz3.ab3@15115>     CMP.l #9,d3
0002CF0E <AmiBlitz3.ab3@15116>     BNE 'ag
0002CF12 <AmiBlitz3.ab3@15117>    MOVE.w -2(a4),d1
0002CF16 <AmiBlitz3.ab3@15118>    BSR writeword
0002CF1C <AmiBlitz3.ab3@15119>    MOVE.w -6(a4),-4(a4)
0002CF24 <AmiBlitz3.ab3@15120>    MOVE.l #$4c3c0800,-8(a4)
0002CF2A <AmiBlitz3.ab3@15121>    MOVE.w regnum,D3
0002CF2E <AmiBlitz3.ab3@15122>    MULS #$1000,D3
0002CF32 <AmiBlitz3.ab3@15123>    OR.w D3,-6(a4)
0002CF38 <AmiBlitz3.ab3@15124>    CLR.l load_var_addr
0002CF3E <AmiBlitz3.ab3@15125>    CLR.l imm_addr
0002CF42 <AmiBlitz3.ab3@15126> BRA 'li3
0002CF46 <AmiBlitz3.ab3@15129>    CMP.w #8,d3
0002CF4A <AmiBlitz3.ab3@15130>    BEQ 'ok
0002CF4C <AmiBlitz3.ab3@15131>    ASL.l #1,d3
0002CF4E <AmiBlitz3.ab3@15132>    ASL.l #8,d3
0002CF52 <AmiBlitz3.ab3@15133>    MOVE.w #$e188,d1
0002CF54 <AmiBlitz3.ab3@15134>    OR.w d3,d1
0002CF58 <AmiBlitz3.ab3@15135>    MOVE.w d1,-6(a4)
0002CF5C <AmiBlitz3.ab3@15136> BRA 'okls
0002CF62 <AmiBlitz3.ab3@15139>   MOVE.w #$e188,-6(a4)                                     ;lsl.l #,dx
0002CF68 <AmiBlitz3.ab3@15142>   MOVE.w regnum,d3
0002CF6C <AmiBlitz3.ab3@15143>    OR.b d3,-5(a4)
0002CF72 <AmiBlitz3.ab3@15144>    SUBQ.l #4,destpointer
0002CF78 <AmiBlitz3.ab3@15145>    CLR.l load_var_addr
0002CF7E <AmiBlitz3.ab3@15146>    CLR.l imm_addr
0002CF82 <AmiBlitz3.ab3@15147> BRA 'li3
0002CF88 <AmiBlitz3.ab3@15150>    MOVE.l destpointer,a0
0002CF8E <AmiBlitz3.ab3@15151>    SUB.l load_var_addr,a0
0002CF92 <AmiBlitz3.ab3@15152>    CMP.w #4,a0
0002CF96 <AmiBlitz3.ab3@15153>    BNE 'li2
0002CF9A <AmiBlitz3.ab3@15154>    MOVE.w -2(a4),d1
0002CF9E <AmiBlitz3.ab3@15155>    BSR writeword
0002CFA4 <AmiBlitz3.ab3@15156>    MOVE.b #$4c,-6(a4)
0002CFAA <AmiBlitz3.ab3@15157>    MOVE.w #$0800,-4(a4)
0002CFB0 <AmiBlitz3.ab3@15158>    MOVE.w regnum,D3
0002CFB4 <AmiBlitz3.ab3@15159>    MULS #$1000,d3
0002CFB8 <AmiBlitz3.ab3@15160>    OR.w D3,-4(a4)
0002CFBC <AmiBlitz3.ab3@15161> BRA 'li3
0002CFC2 <AmiBlitz3.ab3@15164>    MOVE.l #$4c010800,d1
0002CFC8 <AmiBlitz3.ab3@15165>    MOVE.w regnum,D3
0002CFCA <AmiBlitz3.ab3@15166>    EXT.l d3
0002CFCE <AmiBlitz3.ab3@15167>    MULS #$1000,d3
0002CFD0 <AmiBlitz3.ab3@15168>    OR.w D3,d1
0002CFD4 <AmiBlitz3.ab3@15169>    MULS #$10,d3
0002CFD6 <AmiBlitz3.ab3@15170>    ADD.l d3,d1
0002CFDA <AmiBlitz3.ab3@15171>    BSR writelong
0002CFDC <AmiBlitz3.ab3@15176> RTS
0002CFDE <AmiBlitz3.ab3@15180>   MOVE.w D1,-(A7)
0002CFE2 <AmiBlitz3.ab3@15181>    BSR.w JL_0_AD40
0002CFE4 <AmiBlitz3.ab3@15182>   MOVE.l D4,D1
0002CFE8 <AmiBlitz3.ab3@15183>    BSR.w JL_0_AD38
0002CFEC <AmiBlitz3.ab3@15184>    BSR.w JL_0_A352
0002CFEE <AmiBlitz3.ab3@15185>   MOVEQ #0,d1
0002CFF0 <AmiBlitz3.ab3@15186>   MOVE.w (A7)+,D1
0002CFF6 <AmiBlitz3.ab3@15187>   MOVE.l d1,lastinstruction
0002CFFA <AmiBlitz3.ab3@15188>    BSR.w Atokejsr
0002CFFE <AmiBlitz3.ab3@15189>    BSR.w JL_0_A36E
0002D000 <AmiBlitz3.ab3@15190>   MOVE.l D5,D1
0002D004 <AmiBlitz3.ab3@15191> BRA.w JL_0_AD38
0002D00A <AmiBlitz3.ab3@15195>    TST.b iee
0002D00E <AmiBlitz3.ab3@15196>     BNE fm1
0002D012 <AmiBlitz3.ab3@15197>  MOVE.w #$FFB2,D1                                          ;floatmul
0002D016 <AmiBlitz3.ab3@15198> BRA.w doflib
0002D018 <AmiBlitz3.ab3@15201>   MOVEQ #0,d0
0002D01E <AmiBlitz3.ab3@15202>  MOVE.w regnum,d0
0002D020 <AmiBlitz3.ab3@15203>  ADDQ #1,d0
0002D022 <AmiBlitz3.ab3@15204>  ASL.w #8,d0
0002D024 <AmiBlitz3.ab3@15205>  ASL.w #2,d0
0002D02A <AmiBlitz3.ab3@15206>  MOVE.l #$f2000023,d1
0002D02C <AmiBlitz3.ab3@15207>  OR.l d0,d1
0002D032 <AmiBlitz3.ab3@15208>  MOVE.w regnum,d0
0002D034 <AmiBlitz3.ab3@15209>  ASL.w #7,d0
0002D036 <AmiBlitz3.ab3@15210>  OR.l d0,d1
0002D03A <AmiBlitz3.ab3@15211> BRA.w writelong
0002D03C <AmiBlitz3.ab3@15215>   MOVE.w D2,-(A7)                                          ;dopow
0002D03E <AmiBlitz3.ab3@15216>   MOVE.w D2,D3
0002D040 <AmiBlitz3.ab3@15217>   MOVEQ.l #$05,D2
0002D044 <AmiBlitz3.ab3@15218>    BSR.w JL_0_9770
0002D04A <AmiBlitz3.ab3@15219>   ADDQ.w #1,regnum
0002D04C <AmiBlitz3.ab3@15220>   MOVE.w (A7)+,D3
0002D04E <AmiBlitz3.ab3@15221>   MOVEQ.l #$05,D2
0002D052 <AmiBlitz3.ab3@15222>    BSR.w writeconvertcode
0002D058 <AmiBlitz3.ab3@15223>   SUBQ.w #1,regnum
0002D05C <AmiBlitz3.ab3@15224>    BSR.w nocando
0002D062 <AmiBlitz3.ab3@15225>    TST.b fpu
0002D066 <AmiBlitz3.ab3@15226>    BEQ 'old
0002D068 <AmiBlitz3.ab3@15227>    MOVEQ #0,d1
0002D06E <AmiBlitz3.ab3@15228>    MOVE.w regnum,d1
0002D070 <AmiBlitz3.ab3@15229>   MOVE.l d1,d0
0002D072 <AmiBlitz3.ab3@15230>   ASL.w #7,d1
0002D074 <AmiBlitz3.ab3@15231>   ASL.w #8,d0
0002D076 <AmiBlitz3.ab3@15232>   ASL.w #2,d0
0002D078 <AmiBlitz3.ab3@15233>   OR.w d0,d1
0002D07A <AmiBlitz3.ab3@15234>   MOVE.l d1,-(a7)
0002D080 <AmiBlitz3.ab3@15236>    OR.l #$f2000016,d1                                       ;flog2.x fp0      ;fpu ^ pow
0002D084 <AmiBlitz3.ab3@15237>    BSR writelong
0002D08A <AmiBlitz3.ab3@15238>    MOVE.w regnum,d0
0002D08C <AmiBlitz3.ab3@15239>  ADDQ #1,d0
0002D08E <AmiBlitz3.ab3@15240>  ASL.w #8,d0
0002D090 <AmiBlitz3.ab3@15241>  ASL.w #2,d0
0002D096 <AmiBlitz3.ab3@15242>  MOVE.l #$f2000023,d1
0002D098 <AmiBlitz3.ab3@15243>  OR.l d0,d1
0002D09E <AmiBlitz3.ab3@15244>  MOVE.w regnum,d0
0002D0A0 <AmiBlitz3.ab3@15245>  ASL.w #7,d0
0002D0A2 <AmiBlitz3.ab3@15246>  OR.l d0,d1
0002D0A8 <AmiBlitz3.ab3@15247>    OR.l #$f2000023,d1                                      ;fmulx.x fp1,fp0
0002D0AC <AmiBlitz3.ab3@15248>    BSR writelong
0002D0AE <AmiBlitz3.ab3@15249>    MOVE.l (a7)+,d1
0002D0B4 <AmiBlitz3.ab3@15251>    OR.l #$f2000011,d1                                      ;ftwotox.x fp0
0002D0B8 <AmiBlitz3.ab3@15252>    BSR writelong
0002D0BA <AmiBlitz3.ab3@15253> RTS
0002D0BE <AmiBlitz3.ab3@15256>   MOVE.w #$6001,D1
0002D0C2 <AmiBlitz3.ab3@15257> BRA.w domylib
0002D0C6 <AmiBlitz3.ab3@15263>   MOVEA.l forthsp(PC),A0
0002D0CA <AmiBlitz3.ab3@15264>   MOVE.w #$FFFF,-(A0)                                      ;#-1,-(a0) org source
0002D0CC <AmiBlitz3.ab3@15265> RTS
0002D0D0 <AmiBlitz3.ab3@15271>   MOVE.w #$D400,D1
0002D0D4 <AmiBlitz3.ab3@15272> BRA.w domylib
0002D0D8 <AmiBlitz3.ab3@15276>   MOVE.w #$D401,D1
0002D0DC <AmiBlitz3.ab3@15277> BRA.w domylib
0002D0E0 <AmiBlitz3.ab3@15281>    BSR.w nocando                                           ;modlib uses an alibjsr here!
0002D0E4 <AmiBlitz3.ab3@15282>   MOVE.w #$D402,D1
0002D0E8 <AmiBlitz3.ab3@15283> BRA.w domylib
0002D0EC <AmiBlitz3.ab3@15287>   MOVE.w #$D403,D1
0002D0EE <AmiBlitz3.ab3@15288>   MOVEQ.l #$02,D2                                          ;now a word.
0002D0F2 <AmiBlitz3.ab3@15289> BRA.w domylib
0002D0F6 <AmiBlitz3.ab3@15293>    BSR.w nocando                                           ;modlib lib uses an alibjsr!  ;domod float
0002D0FC <AmiBlitz3.ab3@15294>   TST.b fpu
0002D100 <AmiBlitz3.ab3@15295>   BEQ 'old
0002D102 <AmiBlitz3.ab3@15296>   MOVEQ #0,d1
0002D108 <AmiBlitz3.ab3@15297>   MOVE.w regnum,d1                                         ;fpu mod
0002D10A <AmiBlitz3.ab3@15298>   MOVE.l d1,d0
0002D10C <AmiBlitz3.ab3@15299>   ADDQ.l #1,d1
0002D10E <AmiBlitz3.ab3@15300>   ASL.l #7,d0
0002D110 <AmiBlitz3.ab3@15301>   ASL.l #8,d1
0002D112 <AmiBlitz3.ab3@15302>   ASL.l #2,d1
0002D114 <AmiBlitz3.ab3@15303>   OR.l d0,d1
0002D116 <AmiBlitz3.ab3@15304>   MOVE.l d0,-(a7)
0002D11C <AmiBlitz3.ab3@15305>   OR.l #$f2000021,d1
0002D120 <AmiBlitz3.ab3@15306>   BSR writelong
0002D122 <AmiBlitz3.ab3@15307>   MOVE.l (a7)+,d0
0002D124 <AmiBlitz3.ab3@15308>  RTS
0002D128 <AmiBlitz3.ab3@15311>   MOVE.w #$D404,D1
0002D12A <AmiBlitz3.ab3@15312>   MOVEQ.l #$03,D2                                          ;now a long
0002D12E <AmiBlitz3.ab3@15313> BRA.w domylib
0002D132 <AmiBlitz3.ab3@15321>   MOVE.w #$48C0,D1
0002D138 <AmiBlitz3.ab3@15322>   OR.w regnum,D1
0002D13C <AmiBlitz3.ab3@15323>    BSR.w writeword
0002D13E <AmiBlitz3.ab3@15324>   ADDQ.w #1,D1
0002D142 <AmiBlitz3.ab3@15325>    BSR.w writeword
0002D146 <AmiBlitz3.ab3@15328>    MOVE.w #$48C0,D1
0002D14C <AmiBlitz3.ab3@15329>   OR.w regnum,D1
0002D150 <AmiBlitz3.ab3@15330>    BSR.w writeword
0002D154 <AmiBlitz3.ab3@15331>   MOVE.w #$81C0,D1
0002D158 <AmiBlitz3.ab3@15332> BRA.w doplus2
0002D15E <AmiBlitz3.ab3@15336>   TST.b fast
0002D162 <AmiBlitz3.ab3@15337>   BNE.s 'l10
0002D166 <AmiBlitz3.ab3@15338>   MOVE.w #$CB01,D1
0002D16A <AmiBlitz3.ab3@15339> BRA.w domylib
0002D16E <AmiBlitz3.ab3@15345>   BSR.w JL_0_AD40
0002D170 <AmiBlitz3.ab3@15346>   MOVE.l D4,D1
0002D174 <AmiBlitz3.ab3@15347>    BSR.w JL_0_AD38
0002D178 <AmiBlitz3.ab3@15348>    BSR.w JL_0_A352
0002D17E <AmiBlitz3.ab3@15362>    MOVE.l #$4c410800,d1
0002D182 <AmiBlitz3.ab3@15363>    BSR writelong
0002D186 <AmiBlitz3.ab3@15366>   MOVE.w #$4e71,d1
0002D18A <AmiBlitz3.ab3@15368>    BSR.w JL_0_A36E
0002D18C <AmiBlitz3.ab3@15369>   MOVE.l D5,D1
0002D190 <AmiBlitz3.ab3@15370> BRA.w JL_0_AD38
0002D194 <AmiBlitz3.ab3@15373>     CMP.w #8,d3
0002D198 <AmiBlitz3.ab3@15374>     BEQ 'ok
0002D19A <AmiBlitz3.ab3@15375>     ASL.l #1,d3
0002D19C <AmiBlitz3.ab3@15376>     ASL.l #8,d3
0002D1A0 <AmiBlitz3.ab3@15377>     MOVE.w #$e080,d1
0002D1A2 <AmiBlitz3.ab3@15378>     OR.w d3,d1
0002D1A6 <AmiBlitz3.ab3@15379> BRA 'oklsr2
0002D1AA <AmiBlitz3.ab3@15382>   MOVE.w #$e080,d1                                         ;lsr.l #,dx
0002D1B0 <AmiBlitz3.ab3@15385>      SUBQ.l #6,destpointer
0002D1B4 <AmiBlitz3.ab3@15386>      BSR writeword
0002D1B6 <AmiBlitz3.ab3@15387>      MOVE.l (a7)+,d3
0002D1B8 <AmiBlitz3.ab3@15388>      MOVEQ #0,d1
0002D1BE <AmiBlitz3.ab3@15389>      CLR.l load_var_addr
0002D1C4 <AmiBlitz3.ab3@15390>      CLR.l imm_addr
0002D1C8 <AmiBlitz3.ab3@15391> BRA JL_0_AD38
0002D1CC <AmiBlitz3.ab3@15395>   MOVE.w #$CB00,D1                                         ;quickdiv
0002D1D0 <AmiBlitz3.ab3@15396> BRA.w domylib
0002D1D6 <AmiBlitz3.ab3@15400>    TST.b iee
0002D1DA <AmiBlitz3.ab3@15401>    BNE fdiv1
0002D1DE <AmiBlitz3.ab3@15402>    MOVE.w #$FFAC,D1                                        ;floatdiv
0002D1E2 <AmiBlitz3.ab3@15403> BRA.w doflib
0002D1E4 <AmiBlitz3.ab3@15407>   MOVEQ #0,d0
0002D1EA <AmiBlitz3.ab3@15408>   MOVE.w regnum,d0
0002D1EC <AmiBlitz3.ab3@15409>   ADDQ #1,d0
0002D1EE <AmiBlitz3.ab3@15410>   ASL.w #8,d0
0002D1F0 <AmiBlitz3.ab3@15411>   ASL.w #2,d0
0002D1F6 <AmiBlitz3.ab3@15412>   MOVE.l #$f2000020,d1                                     ;fpu div
0002D1F8 <AmiBlitz3.ab3@15413>   OR.l d0,d1
0002D1FE <AmiBlitz3.ab3@15414>   MOVE.w regnum,d0
0002D200 <AmiBlitz3.ab3@15415>   ASL.w #7,d0
0002D202 <AmiBlitz3.ab3@15416>   OR.l d0,d1
0002D206 <AmiBlitz3.ab3@15417> BRA.w writelong
0002D20A <AmiBlitz3.ab3@15421>   MOVE.w #$C000,D1
0002D20E <AmiBlitz3.ab3@15422> BRA.w doplus2
0002D212 <AmiBlitz3.ab3@15426>   MOVE.w #$C040,D1
0002D216 <AmiBlitz3.ab3@15427> BRA.w doplus2
0002D21A <AmiBlitz3.ab3@15431>   MOVE.w #$C080,D1
0002D21E <AmiBlitz3.ab3@15432> BRA.w doplus2
0002D222 <AmiBlitz3.ab3@15436>   MOVE.w #$8000,D1
0002D226 <AmiBlitz3.ab3@15437> BRA.w doplus2
0002D22A <AmiBlitz3.ab3@15441>   MOVE.w #$8040,D1
0002D22E <AmiBlitz3.ab3@15442> BRA.w doplus2
0002D232 <AmiBlitz3.ab3@15446>   MOVE.w #$8080,D1
0002D236 <AmiBlitz3.ab3@15447> BRA.w doplus2
0002D23A <AmiBlitz3.ab3@15451>   MOVE.w #$B100,D1
0002D240 <AmiBlitz3.ab3@15454>    MOVE.w regnum,D3
0002D242 <AmiBlitz3.ab3@15455>   OR.w D3,D1
0002D244 <AmiBlitz3.ab3@15456>   ADDQ.w #1,D3
0002D246 <AmiBlitz3.ab3@15457>   LSL.w #8,D3
0002D248 <AmiBlitz3.ab3@15458>   LSL.w #1,D3
0002D24A <AmiBlitz3.ab3@15459>   OR.w D3,D1
0002D24E <AmiBlitz3.ab3@15460> BRA.w writeword
0002D252 <AmiBlitz3.ab3@15464>   MOVE.w #$B140,D1
0002D256 <AmiBlitz3.ab3@15465> BRA.w JL_0_A25C
0002D25A <AmiBlitz3.ab3@15469>   MOVE.w #$B180,D1
0002D25E <AmiBlitz3.ab3@15470> BRA.w JL_0_A25C
0002D262 <AmiBlitz3.ab3@15474>   MOVE.w #$E1A8,D1
0002D266 <AmiBlitz3.ab3@15475> BRA.w JL_0_A298
0002D26A <AmiBlitz3.ab3@15479>   MOVE.w #$E0A8,D1
0002D26E <AmiBlitz3.ab3@15480> BRA.w JL_0_A298
0002D272 <AmiBlitz3.ab3@15484>   MOVE.w #$E0A0,D1
0002D276 <AmiBlitz3.ab3@15485> BRA.w JL_0_A298
0002D278 <AmiBlitz3.ab3@15489>   MOVE.w D1,-(A7)
0002D27E <AmiBlitz3.ab3@15490>   ADDQ.w #1,regnum
0002D280 <AmiBlitz3.ab3@15491>   MOVE.w D2,-(A7)
0002D282 <AmiBlitz3.ab3@15492>   MOVE.w D2,D3
0002D284 <AmiBlitz3.ab3@15493>   MOVEQ.l #$02,D2
0002D288 <AmiBlitz3.ab3@15498>    BSR.w writeconvertcode
0002D28A <AmiBlitz3.ab3@15500>   MOVE.w (A7)+,D2
0002D290 <AmiBlitz3.ab3@15501>   SUBQ.w #1,regnum
0002D294 <AmiBlitz3.ab3@15502>   CMP.w #$4,D2
0002D298 <AmiBlitz3.ab3@15503>    BEQ.w JL_0_A2C2
0002D29A <AmiBlitz3.ab3@15504>   MOVE.w D2,D3
0002D29C <AmiBlitz3.ab3@15505>   MOVEQ.l #$03,D2
0002D2A0 <AmiBlitz3.ab3@15506>    BSR.w JL_0_9770
0002D2A2 <AmiBlitz3.ab3@15509>    MOVE.w (A7)+,D1
0002D2A8 <AmiBlitz3.ab3@15510>   MOVE.w regnum,D3
0002D2AA <AmiBlitz3.ab3@15511>   OR.w D3,D1
0002D2AC <AmiBlitz3.ab3@15512>   ADDQ.w #1,D3
0002D2AE <AmiBlitz3.ab3@15513>   LSL.w #8,D3
0002D2B0 <AmiBlitz3.ab3@15514>   LSL.w #1,D3
0002D2B2 <AmiBlitz3.ab3@15515>   OR.w D3,D1
0002D2B6 <AmiBlitz3.ab3@15516> BRA.w writeword
0002D2BA <AmiBlitz3.ab3@15520>   MOVE.w #$0100,D1
0002D2BE <AmiBlitz3.ab3@15521>    BSR.w JL_0_A31C
0002D2C4 <AmiBlitz3.ab3@15522>   MOVE.w regnum,D1
0002D2C8 <AmiBlitz3.ab3@15523>   ORI.w #$56C0,D1
0002D2CC <AmiBlitz3.ab3@15524>    BSR.w writeword
0002D2D2 <AmiBlitz3.ab3@15525>   MOVE.w regnum,D1
0002D2D6 <AmiBlitz3.ab3@15526>   ORI.w #$4880,D1
0002D2DA <AmiBlitz3.ab3@15527>    BSR.w writeword
0002D2DC <AmiBlitz3.ab3@15528>   MOVEQ.l #$02,D2
0002D2DE <AmiBlitz3.ab3@15529> RTS
0002D2E2 <AmiBlitz3.ab3@15533>   MOVE.w #$01C0,D1
0002D2E6 <AmiBlitz3.ab3@15536>    BSR.w JL_0_A31C
0002D2E8 <AmiBlitz3.ab3@15537>   MOVEQ.l #$03,D2
0002D2EA <AmiBlitz3.ab3@15538> RTS
0002D2EE <AmiBlitz3.ab3@15542>   MOVE.w #$0180,D1
0002D2F2 <AmiBlitz3.ab3@15543> BRA.w JL_0_A304
0002D2F6 <AmiBlitz3.ab3@15547>   MOVE.w #$0140,D1
0002D2FA <AmiBlitz3.ab3@15548> BRA.w JL_0_A304
0002D2FC <AmiBlitz3.ab3@15552>   MOVE.w D1,-(A7)
0002D2FE <AmiBlitz3.ab3@15553>   MOVE.w D2,-(A7)
0002D300 <AmiBlitz3.ab3@15554>   MOVE.w D2,D3
0002D302 <AmiBlitz3.ab3@15555>   MOVEQ.l #$03,D2
0002D306 <AmiBlitz3.ab3@15556>    BSR.w JL_0_9770
0002D308 <AmiBlitz3.ab3@15557>   MOVE.w (A7)+,D3
0002D30A <AmiBlitz3.ab3@15558>   MOVEQ.l #$01,D2
0002D310 <AmiBlitz3.ab3@15559>   ADDQ.w #1,regnum
0002D314 <AmiBlitz3.ab3@15560>    BSR.w writeconvertcode
0002D31A <AmiBlitz3.ab3@15561>   SUBQ.w #1,regnum
0002D320 <AmiBlitz3.ab3@15562>   MOVE.w regnum,D1
0002D322 <AmiBlitz3.ab3@15563>   MOVE.w D1,D2
0002D324 <AmiBlitz3.ab3@15564>   ADDQ.w #1,D2
0002D326 <AmiBlitz3.ab3@15565>   LSL.w #8,D2
0002D328 <AmiBlitz3.ab3@15566>   LSL.w #1,D2
0002D32A <AmiBlitz3.ab3@15567>   OR.w (A7)+,D1
0002D32C <AmiBlitz3.ab3@15568>   OR.w D2,D1
0002D330 <AmiBlitz3.ab3@15569> BRA.w writeword
0002D336 <AmiBlitz3.ab3@15573>   MOVE.w regnum,D1
0002D33A <AmiBlitz3.ab3@15574>    BEQ.w JL_0_A36C
0002D33E <AmiBlitz3.ab3@15575>   ORI.w #$2000,D1
0002D342 <AmiBlitz3.ab3@15576>    BSR.w writeword
0002D346 <AmiBlitz3.ab3@15577>   ADDI.w #$201,D1
0002D34A <AmiBlitz3.ab3@15578>    BSR.w writeword
0002D34C <AmiBlitz3.ab3@15581> RTS
0002D352 <AmiBlitz3.ab3@15585>   MOVE.w regnum,D1
0002D356 <AmiBlitz3.ab3@15586>    BEQ.w JL_0_A384
0002D358 <AmiBlitz3.ab3@15587>   LSL.w #8,D1
0002D35A <AmiBlitz3.ab3@15588>   LSL.w #1,D1
0002D35E <AmiBlitz3.ab3@15589>   ORI.w #$2000,D1
0002D362 <AmiBlitz3.ab3@15590>    BSR.w writeword
0002D364 <AmiBlitz3.ab3@15593> RTS
0002D36A <AmiBlitz3.ab3@15597>    CLR.b isconstantvalue
0002D370 <AmiBlitz3.ab3@15598>    CLR.l lastconstantvalue
0002D378 <AmiBlitz3.ab3@15599>    CMPI.w #$7,regnum
0002D37C <AmiBlitz3.ab3@15600>    BCS.w JL_0_A6B4
0002D382 <AmiBlitz3.ab3@15601>   MOVE.l #$f2277700,d1                                     ;fmove.d fp6,-(a7)
0002D386 <AmiBlitz3.ab3@15602>   BSR writelong
0002D38A <AmiBlitz3.ab3@15603>   MOVE.w #$2F06,D1                                         ;d6 to stack
0002D38E <AmiBlitz3.ab3@15605>   CMP.w #$3,D2
0002D392 <AmiBlitz3.ab3@15606>    BCS.w JL_0_A3A2
0002D396 <AmiBlitz3.ab3@15607>   MOVE.w #$2F06,D1
0002D39A <AmiBlitz3.ab3@15610>   BSR.w writeword
0002D39C <AmiBlitz3.ab3@15611>   MOVE.w D1,-(A7)
0002D3A2 <AmiBlitz3.ab3@15612>   SUBQ.w #1,regnum
0002D3A6 <AmiBlitz3.ab3@15613>    BSR.w JL_0_A6B4
0002D3AC <AmiBlitz3.ab3@15614>   ADDQ.w #1,regnum
0002D3B2 <AmiBlitz3.ab3@15615>   MOVE.l #$f2001b80,d1
0002D3B6 <AmiBlitz3.ab3@15616>   BSR writelong
0002D3BA <AmiBlitz3.ab3@15617>   MOVE.w #$3E06,D1
0002D3BE <AmiBlitz3.ab3@15618>   CMP.w #$3,D2
0002D3C2 <AmiBlitz3.ab3@15619>    BCS.w JL_0_A3C8
0002D3C6 <AmiBlitz3.ab3@15620>   MOVE.w #$2E06,D1
0002D3CA <AmiBlitz3.ab3@15623>   BSR.w writeword
0002D3CC <AmiBlitz3.ab3@15624>   MOVE.w (A7)+,D1
0002D3D0 <AmiBlitz3.ab3@15625>   ANDI.w #$F000,D1
0002D3D4 <AmiBlitz3.ab3@15626>   ORI.w #$C1F,D1
0002D3DA <AmiBlitz3.ab3@15627>   JSR writeword
0002D3E0 <AmiBlitz3.ab3@15628>   MOVE.l #$f21f5700,d1                                     ;fmove.d (a7)+,fp6
0002D3E4 <AmiBlitz3.ab3@15629> BRA writelong
0002D3E8 <AmiBlitz3.ab3@15633>   BSR.w JL_0_A6B4
0002D3EC <AmiBlitz3.ab3@15634>   MOVE.w #$4440,D1
0002D3F0 <AmiBlitz3.ab3@15635>   CMP.w #$3,D2
0002D3F4 <AmiBlitz3.ab3@15636>    BCS.w JL_0_A406
0002D3F8 <AmiBlitz3.ab3@15637>   MOVE.w #$4480,D1
0002D3FC <AmiBlitz3.ab3@15638>   CMP.w #$5,D2
0002D400 <AmiBlitz3.ab3@15639>    BCS.w JL_0_A406
0002D404 <AmiBlitz3.ab3@15640>   CMP.w #$6,D2
0002D408 <AmiBlitz3.ab3@15641>    BCC.w illoperr
0002D40C <AmiBlitz3.ab3@15642>   MOVE.w #$FFC4,D1
0002D410 <AmiBlitz3.ab3@15643> BRA.w JL_0_9604
0002D416 <AmiBlitz3.ab3@15646>   OR.w regnum,D1                                           ;negate
0002D41C <AmiBlitz3.ab3@15647>   CLR.l imm_addr
0002D420 <AmiBlitz3.ab3@15648> BRA.w writeword
0002D424 <AmiBlitz3.ab3@15652>    BSR.w eval4
0002D428 <AmiBlitz3.ab3@15653>   CMP.w #")",D0
0002D42C <AmiBlitz3.ab3@15654>    BEQ.w JL_0_A424
0002D430 <AmiBlitz3.ab3@15655>   CMP.w #"}",D0
0002D434 <AmiBlitz3.ab3@15656>    BNE.w brackets_                                         ;syntax error brackets
0002D438 <AmiBlitz3.ab3@15659> BRA.w get1bytemain
0002D43C <AmiBlitz3.ab3@15663>    BSR.w eval4
0002D440 <AmiBlitz3.ab3@15664>   CMP.w #$5,D2
0002D444 <AmiBlitz3.ab3@15665>    BCC.w illoperr
0002D44A <AmiBlitz3.ab3@15666>   MOVE.w regnum,D1
0002D44E <AmiBlitz3.ab3@15667>   ORI.w #$4640,D1
0002D452 <AmiBlitz3.ab3@15668>   CMP.w #$3,D2
0002D456 <AmiBlitz3.ab3@15669>    BCS.w writeword
0002D45A <AmiBlitz3.ab3@15670>   EORI.w #$C0,D1
0002D45E <AmiBlitz3.ab3@15671> BRA.w writeword
0002D460 <AmiBlitz3.ab3@15675>   MOVEQ.l #$05,D2                                          ;fpu pi
0002D466 <AmiBlitz3.ab3@15676>    TST.b fpu
0002D46A <AmiBlitz3.ab3@15677>   BEQ 'old
0002D470 <AmiBlitz3.ab3@15678> JMP fpupi
0002D476 <AmiBlitz3.ab3@15681>   MOVE.w regnum,D1
0002D478 <AmiBlitz3.ab3@15682>   LSL.w #8,D1
0002D47A <AmiBlitz3.ab3@15683>   LSL.w #1,D1
0002D47E <AmiBlitz3.ab3@15684>   ORI.w #$203C,D1
0002D482 <AmiBlitz3.ab3@15685>    BSR.w writeword
0002D488 <AmiBlitz3.ab3@15686>   MOVE.l #$C90FDA42,D1
0002D48C <AmiBlitz3.ab3@15687>    BSR.w writelong
0002D490 <AmiBlitz3.ab3@15688> BRA.w get1bytemain
0002D58C <AmiBlitz3.ab3@15696> forthstack:  Ds.l 63                                       ;ds.b  18*32 org source
0002D688 <AmiBlitz3.ab3@15697>              Ds.l 63
0002D6D0 <AmiBlitz3.ab3@15698>              Ds.l 18
0002D6D4 <AmiBlitz3.ab3@15699> forthsp:     Dc.l forthstack
0002D700 <AmiBlitz3.ab3@15704>    !fget
0002D704 <AmiBlitz3.ab3@15705>    CMP.b #$7e,d0
0002D708 <AmiBlitz3.ab3@15706>    BNE 'noc
0002D70A <AmiBlitz3.ab3@15707>    SUBQ.l #1,a5
0002D70E <AmiBlitz3.ab3@15708>    BSR get1bytemain
0002D712 <AmiBlitz3.ab3@15711>    CMP.b #"#",d0
0002D716 <AmiBlitz3.ab3@15712>    BNE 'ld1
0002D71A <AmiBlitz3.ab3@15713>    CMP.b #$22,(a5)
0002D71E <AmiBlitz3.ab3@15714>    BNE 'ld1
0002D724 <AmiBlitz3.ab3@15715>    JSR addimmi
0002D728 <AmiBlitz3.ab3@15718>    CMP.b #$22,d0
0002D72C <AmiBlitz3.ab3@15719>    BNE 'l11
0002D732 <AmiBlitz3.ab3@15729>    NOT.w instringon
0002D734 <AmiBlitz3.ab3@15732>    TST.b d0
0002D738 <AmiBlitz3.ab3@15733>    BPL 'l10
0002D73A <AmiBlitz3.ab3@15734>    LSL.w #8,d0
0002D73C <AmiBlitz3.ab3@15735>    MOVE.b (a5)+,d0                      ; get blitzlib instruction with returnvalue(called in functions/statement)
0002D742 <AmiBlitz3.ab3@15736>    MOVE.l d0,lasttoken
0002D748 <AmiBlitz3.ab3@15737>    MOVE.w d0,lastchar
0002D74E <AmiBlitz3.ab3@15738>    CLR.l rightsidetype                  ; blitzlibs do currently no type check
0002D754 <AmiBlitz3.ab3@15739>    CLR.w rightsideflagmask
0002D758 <AmiBlitz3.ab3@15741>   CMP.w #"(",D0
0002D75C <AmiBlitz3.ab3@15742>    BEQ.w checkcast2
0002D760 <AmiBlitz3.ab3@15743> nocast CMP.w #"{",D0
0002D764 <AmiBlitz3.ab3@15744>    BEQ.w JL_0_A410
0002D768 <AmiBlitz3.ab3@15745>   CMP.w #$2D,D0
0002D76C <AmiBlitz3.ab3@15746>    BEQ.w JL_0_A3DA
0002D770 <AmiBlitz3.ab3@15747>   CMP.w #-$7F77,D0
0002D774 <AmiBlitz3.ab3@15748>    BEQ.w JL_0_A428
0002D778 <AmiBlitz3.ab3@15749>   MOVEA.l forthsp(PC),A1
0002D77E <AmiBlitz3.ab3@15750>   CMPA.l #forthsp,A1
0002D782 <AmiBlitz3.ab3@15751>    BCC.w conmemerr
0002D788 <AmiBlitz3.ab3@15752>   MOVE.l destpointer,(A1)+
0002D78E <AmiBlitz3.ab3@15753>   MOVE.l hunkoffsetbase,(A1)+
0002D794 <AmiBlitz3.ab3@15754>   MOVE.l lasta6,(A1)+
0002D79A <AmiBlitz3.ab3@15755>   MOVE.w lasta6,(A1)+
0002D79C <AmiBlitz3.ab3@15756>   CLR.w (A1)+
0002D79E <AmiBlitz3.ab3@15757>   CLR.w (A1)+
0002D7A4 <AmiBlitz3.ab3@15758>   MOVE.l A1,forthsp
0002D7B6 <AmiBlitz3.ab3@15760>    !compare2
0002D7BA <AmiBlitz3.ab3@15761>    BEQ.w JL_0_B224
0002D7BE <AmiBlitz3.ab3@15762>   CMP.w #".",D0
0002D7C2 <AmiBlitz3.ab3@15763>    BEQ.w JL_0_B21E
0002D7C6 <AmiBlitz3.ab3@15764>   CMP.w #"#",D0
0002D7CA <AmiBlitz3.ab3@15765>    BEQ.w get_constant
0002D7CE <AmiBlitz3.ab3@15766>   CMP.w #"$",D0
0002D7D2 <AmiBlitz3.ab3@15767>    BEQ.w get_hexconstant
0002D7D6 <AmiBlitz3.ab3@15768>   CMP.w #"%",D0
0002D7DA <AmiBlitz3.ab3@15769>    BEQ.w JL_0_A8C0
0002D7DE <AmiBlitz3.ab3@15770>   CMP.w #-$7FD1,D0
0002D7E2 <AmiBlitz3.ab3@15771>    BEQ.w _SizeOf
0002D7E6 <AmiBlitz3.ab3@15772>   CMP.w #-$7F46,D0
0002D7EA <AmiBlitz3.ab3@15773>    BEQ.w JL_0_A44E
0002D7EE <AmiBlitz3.ab3@15774>   CMP.w #-$7F3B,D0
0002D7F2 <AmiBlitz3.ab3@15775>    BEQ.w JL_0_A83C
0002D7F6 <AmiBlitz3.ab3@15776>   CMP.w #-$7F3A,D0
0002D7FA <AmiBlitz3.ab3@15777>    BEQ.w JL_0_A846
0002D800 <AmiBlitz3.ab3@15778>   MOVE.w constmode,D1
0002D804 <AmiBlitz3.ab3@15779>    BEQ.w JL_0_A776
0002D826 <AmiBlitz3.ab3@15780>    !compare1                                               ;bsr.w tstalpha
0002D82A <AmiBlitz3.ab3@15781>    BEQ.w JL_0_AF22
0002D82E <AmiBlitz3.ab3@15782>   CMP.w #$5F,D0
0002D832 <AmiBlitz3.ab3@15783>    BEQ.w JL_0_AF22
0002D836 <AmiBlitz3.ab3@15784>   CMP.w #$22,D0
0002D83A <AmiBlitz3.ab3@15785>    BEQ.w JL_0_AF00
0002D83E <AmiBlitz3.ab3@15786> BRA.w syntaxerr
0002D844 <AmiBlitz3.ab3@15788> checkcast2 JMP checkcast
0002D84A <AmiBlitz3.ab3@15791>   MOVE.w cfetchmode,D1
0002D84E <AmiBlitz3.ab3@15792>   BEQ.w JL_0_A784
0002D852 <AmiBlitz3.ab3@15793> BRA.w badconerr
0002D858 <AmiBlitz3.ab3@15796> JMP syntaxerropt4
0002D85A <AmiBlitz3.ab3@15800>   NOT.w -(A1)
0002D87C <AmiBlitz3.ab3@15801>   !compare1                                                ;bsr.w tstalpha
0002D880 <AmiBlitz3.ab3@15802>    BEQ.w JL_0_AF4C
0002D884 <AmiBlitz3.ab3@15803>   CMP.w #$2A,D0
0002D888 <AmiBlitz3.ab3@15804>    BEQ.w JL_0_AF4C
0002D88C <AmiBlitz3.ab3@15805>   CMP.w #$5C,D0
0002D890 <AmiBlitz3.ab3@15806>    BEQ.w JL_0_AF4C
0002D894 <AmiBlitz3.ab3@15807>   CMP.w #$22,D0
0002D898 <AmiBlitz3.ab3@15808>    BEQ.w JL_0_ADC0
0002D89C <AmiBlitz3.ab3@15809>   BTST #$F,D0
0002D8A0 <AmiBlitz3.ab3@15810>    BNE.w JL_0_AAF2
0002D8A4 <AmiBlitz3.ab3@15811>   CMP.w #"&",D0
0002D8A8 <AmiBlitz3.ab3@15812>    BEQ.w getvaraddr                                          ;jump to & address of var code
0002D8AC <AmiBlitz3.ab3@15813>   CMP.w #"?",D0
0002D8B0 <AmiBlitz3.ab3@15814>    BEQ.w JL_0_AED4
0002D8B4 <AmiBlitz3.ab3@15817>   CMP.b #"@",d0
0002D8B8 <AmiBlitz3.ab3@15818>    BNE syntaxerr
0002D8BE <AmiBlitz3.ab3@15819>   TST.b newsyntax
0002D8C2 <AmiBlitz3.ab3@15820>    BEQ JUMP_syntaxerropt4
0002D8C8 <AmiBlitz3.ab3@15821>   MOVE.w regnum,D1
0002D8CA <AmiBlitz3.ab3@15822>   LSL.w #8,D1
0002D8CC <AmiBlitz3.ab3@15823>   LSL.w #1,D1
0002D8D0 <AmiBlitz3.ab3@15824>   ORI.w #$203C,D1
0002D8D4 <AmiBlitz3.ab3@15825>   BSR.w writeword
0002D8D8 <AmiBlitz3.ab3@15826>   CMP.b #$22,(a5)
0002D8DC <AmiBlitz3.ab3@15827>    BNE syntaxerr
0002D8DE <AmiBlitz3.ab3@15828>   ADDQ #1,a5
0002D8E0 <AmiBlitz3.ab3@15829>   MOVEQ #0,d0
0002D8E4 <AmiBlitz3.ab3@15830>   CMP.b #1,d2
0002D8E8 <AmiBlitz3.ab3@15831>    BEQ 'l3b
0002D8EC <AmiBlitz3.ab3@15832>   CMP.b #2,d2
0002D8F0 <AmiBlitz3.ab3@15833>    BEQ 'l2b
0002D8F4 <AmiBlitz3.ab3@15834>   CMP.b #4,d2
0002D8F8 <AmiBlitz3.ab3@15835>    BEQ error_convert_types
0002D8FA <AmiBlitz3.ab3@15836>   MOVE.b (a5)+,d0
0002D8FE <AmiBlitz3.ab3@15837>   BEQ syntaxerr
0002D902 <AmiBlitz3.ab3@15838>   CMP.b #$22,d0
0002D906 <AmiBlitz3.ab3@15839>   BNE 'l1
0002D90A <AmiBlitz3.ab3@15840>     MOVE.b #0,d0
0002D90E <AmiBlitz3.ab3@15841> BRA 'do
0002D910 <AmiBlitz3.ab3@15844>   ASL.l #8,d0
0002D912 <AmiBlitz3.ab3@15845>   MOVE.b (a5)+,d0
0002D916 <AmiBlitz3.ab3@15846>   BEQ syntaxerr
0002D91A <AmiBlitz3.ab3@15847>   CMP.b #$22,d0
0002D91E <AmiBlitz3.ab3@15848>   BNE 'l2
0002D922 <AmiBlitz3.ab3@15849>     MOVE.b #0,d0
0002D924 <AmiBlitz3.ab3@15850>     ASR.l #8,d0
0002D928 <AmiBlitz3.ab3@15851> BRA 'do
0002D92A <AmiBlitz3.ab3@15854>   ASL.l #8,d0
0002D92C <AmiBlitz3.ab3@15857>   MOVE.b (a5)+,d0
0002D930 <AmiBlitz3.ab3@15858>    BEQ syntaxerr
0002D934 <AmiBlitz3.ab3@15859>    CMP.b #$22,d0
0002D938 <AmiBlitz3.ab3@15860>    BNE 'l3
0002D93C <AmiBlitz3.ab3@15861>    MOVE.b #0,d0
0002D93E <AmiBlitz3.ab3@15862>    ASR.l #8,d0
0002D942 <AmiBlitz3.ab3@15863> BRA 'do
0002D944 <AmiBlitz3.ab3@15866>   ASL.l #8,d0
0002D946 <AmiBlitz3.ab3@15869>   MOVE.b (a5)+,d0
0002D94A <AmiBlitz3.ab3@15870>    BEQ syntaxerr
0002D94E <AmiBlitz3.ab3@15871>    CMP.b #$22,d0
0002D952 <AmiBlitz3.ab3@15872>    BNE 'l4
0002D956 <AmiBlitz3.ab3@15873>    MOVE.b #0,d0
0002D958 <AmiBlitz3.ab3@15874>    ASR.l #8,d0
0002D95C <AmiBlitz3.ab3@15875> BRA 'do
0002D960 <AmiBlitz3.ab3@15878>    CMP.b #$22,(a5)+
0002D964 <AmiBlitz3.ab3@15879>    BNE JUMP_error4char
0002D966 <AmiBlitz3.ab3@15882>   MOVE.l d0,d1
0002D96A <AmiBlitz3.ab3@15883>     BSR writelong
0002D96E <AmiBlitz3.ab3@15884>     BSR get1bytemain
0002D970 <AmiBlitz3.ab3@15885> RTS
0002D974 <AmiBlitz3.ab3@15889>   BSR.w get1bytemain
0002D978 <AmiBlitz3.ab3@15890>   CMP.w #$2E,D0
0002D97C <AmiBlitz3.ab3@15891>    BEQ.b JL_0_A7F4
0002D986 <AmiBlitz3.ab3@15893>   MOVE.w oldqflag,instringon
0002D98C <AmiBlitz3.ab3@15894>   MOVEA.l lastsourcepos,A5
0002D98E <AmiBlitz3.ab3@15895>   MOVE.w D2,-(A7)
0002D992 <AmiBlitz3.ab3@15896>    BSR.w getparameter2
0002D996 <AmiBlitz3.ab3@15897>    BEQ.w syntaxerr
0002D99C <AmiBlitz3.ab3@15898>   LEA varbase,A2
0002D9A0 <AmiBlitz3.ab3@15899>    BSR.w findvariable
0002D9A4 <AmiBlitz3.ab3@15900>    BNE.w notypeerr
0002D9A8 <AmiBlitz3.ab3@15901>   MOVE.w $4(A2),D3
0002D9AA <AmiBlitz3.ab3@15902>   EXT.l D3
0002D9AC <AmiBlitz3.ab3@15903>   MOVE.w (A7)+,D2
0002D9B0 <AmiBlitz3.ab3@15904> BRA.w JL_0_B46E
0002D9B2 <AmiBlitz3.ab3@15908>   MOVE.w D2,-(A7)
0002D9B6 <AmiBlitz3.ab3@15909>    BSR.w getparameter2
0002D9BA <AmiBlitz3.ab3@15910>    BEQ.w syntaxerr
0002D9C0 <AmiBlitz3.ab3@15911>   LEA newtypebase,A2
0002D9C4 <AmiBlitz3.ab3@15912>    BSR.w findtype
0002D9C8 <AmiBlitz3.ab3@15913>    BNE.w notypeerr
0002D9CA <AmiBlitz3.ab3@15914>   MOVEQ.l #$00,D3
0002D9CE <AmiBlitz3.ab3@15915>   CMP.w #$5C,D0
0002D9D2 <AmiBlitz3.ab3@15916>    BNE.w JL_0_A832
0002D9D6 <AmiBlitz3.ab3@15917>    BSR.w getparameter2
0002D9DA <AmiBlitz3.ab3@15918>    BEQ.w syntaxerr
0002D9DE <AmiBlitz3.ab3@15919>   LEA $4(A2),A2
0002D9E2 <AmiBlitz3.ab3@15920>    BSR.w findvariable2
0002D9E6 <AmiBlitz3.ab3@15921>    BNE.w noofferr
0002D9EA <AmiBlitz3.ab3@15922>   MOVE.w $4(A2),D3
0002D9EE <AmiBlitz3.ab3@15923> BRA.w JL_0_A836
0002D9F2 <AmiBlitz3.ab3@15927>   MOVE.w $8(A2),D3
0002D9F4 <AmiBlitz3.ab3@15930>   MOVE.w (A7)+,D2
0002D9F8 <AmiBlitz3.ab3@15931> BRA.w JL_0_B46E
0002D9FA <AmiBlitz3.ab3@15935>   MOVEQ.l #-$01,D3
0002D9FE <AmiBlitz3.ab3@15936>    BSR.w get1bytemain
0002DA02 <AmiBlitz3.ab3@15937> BRA.w JL_0_B46E
0002DA04 <AmiBlitz3.ab3@15941>   MOVEQ.l #$00,D3
0002DA08 <AmiBlitz3.ab3@15942>    BSR.w get1bytemain
0002DA0C <AmiBlitz3.ab3@15943> BRA.w JL_0_B46E
0002DA10 <AmiBlitz3.ab3@15947>   CMP.w #$30,D0
0002DA14 <AmiBlitz3.ab3@15948>    BCS.w JL_0_A876
0002DA18 <AmiBlitz3.ab3@15949>   CMP.w #$39,D0
0002DA1C <AmiBlitz3.ab3@15950>    BLS.w JL_0_A874
0002DA20 <AmiBlitz3.ab3@15951>   ANDI.w #$FFDF,D0
0002DA24 <AmiBlitz3.ab3@15952>   CMP.w #$46,D0
0002DA28 <AmiBlitz3.ab3@15953>    BHI.w JL_0_A876
0002DA2C <AmiBlitz3.ab3@15954>   CMP.w #$41,D0
0002DA30 <AmiBlitz3.ab3@15955>    BCS.w JL_0_A876
0002DA32 <AmiBlitz3.ab3@15958>    CMP.w D0,D0
0002DA34 <AmiBlitz3.ab3@15961> RTS
0002DA38 <AmiBlitz3.ab3@15965>   CMP.w #$31,D0
0002DA3C <AmiBlitz3.ab3@15966>    BEQ.w JL_0_A884
0002DA40 <AmiBlitz3.ab3@15967>   CMP.w #$30,D0
0002DA42 <AmiBlitz3.ab3@15970> RTS
0002DA44 <AmiBlitz3.ab3@15974>    MOVEQ #0,d0
0002DA46 <AmiBlitz3.ab3@15975>    MOVE.b (a5)+,d0
0002DA48 <AmiBlitz3.ab3@15976>    MOVE.b (a5)+,d0
0002DA4C <AmiBlitz3.ab3@15977>    BSR ishex
0002DA50 <AmiBlitz3.ab3@15978>    BNE syntaxerr
0002DA54 <AmiBlitz3.ab3@15979>    SUBI.w #$30,D0
0002DA58 <AmiBlitz3.ab3@15980>    CMP.w #$9,D0
0002DA5C <AmiBlitz3.ab3@15981>    BLS.w 'l1
0002DA5E <AmiBlitz3.ab3@15982>    SUBQ.w #7,D0
0002DA60 <AmiBlitz3.ab3@15985>    MOVE.l d0,d1
0002DA62 <AmiBlitz3.ab3@15986>    MOVE.b (a5)+,d0
0002DA66 <AmiBlitz3.ab3@15987>      BSR ishex
0002DA6A <AmiBlitz3.ab3@15988>     BNE syntaxerr
0002DA6C <AmiBlitz3.ab3@15989>     LSL.l #4,d1
0002DA70 <AmiBlitz3.ab3@15990>     SUBI.w #$30,D0
0002DA74 <AmiBlitz3.ab3@15991>    CMP.w #$9,D0
0002DA78 <AmiBlitz3.ab3@15992>    BLS.w 'l2
0002DA7A <AmiBlitz3.ab3@15993>    SUBQ.w #7,D0
0002DA7C <AmiBlitz3.ab3@15996>   ADD.l d1,d0
0002DA7E <AmiBlitz3.ab3@15997> RTS
0002DA82 <AmiBlitz3.ab3@16001>    BSR.w get1bytemain
0002DA86 <AmiBlitz3.ab3@16002>    BSR.w ishex
0002DA8A <AmiBlitz3.ab3@16003>    BNE.w syntaxerr
0002DA8C <AmiBlitz3.ab3@16004>   MOVEQ.l #$00,D3
0002DA90 <AmiBlitz3.ab3@16005>   CMP.w #5,d2
0002DA94 <AmiBlitz3.ab3@16006>   BNE JL_0_A894
0002DA9A <AmiBlitz3.ab3@16007>   CMP.l #newtype_double,a2
0002DA9E <AmiBlitz3.ab3@16008>   BEQ 'doit
0002DAA4 <AmiBlitz3.ab3@16009>   CMP.l #newtype_float,a2
0002DAA8 <AmiBlitz3.ab3@16010>   BNE JL_0_A894
0002DAB0 <AmiBlitz3.ab3@16013>    fmove.s #0,fp0
0002DAB6 <AmiBlitz3.ab3@16015>   TST.b fpu
0002DABA <AmiBlitz3.ab3@16016>   BEQ JL_0_A894
0002DAC0 <AmiBlitz3.ab3@16017>   fmove.w #16,fp1
0002DAC4 <AmiBlitz3.ab3@16018>   fmul.x fp1,fp0
0002DAC8 <AmiBlitz3.ab3@16019>   SUBI.w #$30,D0
0002DACC <AmiBlitz3.ab3@16020>   CMP.w #$9,D0
0002DAD0 <AmiBlitz3.ab3@16021>    BLS.w JL_0_A8AEa
0002DAD2 <AmiBlitz3.ab3@16022>   SUBQ.w #7,D0
0002DAD6 <AmiBlitz3.ab3@16025>    fmove.w d0,fp1
0002DADA <AmiBlitz3.ab3@16026>    fadd.x fp1,fp0
0002DADE <AmiBlitz3.ab3@16027>    BSR.w get1bytemain
0002DAE2 <AmiBlitz3.ab3@16028>    BSR.w ishex
0002DAE6 <AmiBlitz3.ab3@16029>    BEQ.w JL_0_A894a
0002DAEA <AmiBlitz3.ab3@16030> BRA.w nofpregload
0002DAF0 <AmiBlitz3.ab3@16034>   CMP.l #$10000000,D3
0002DAF4 <AmiBlitz3.ab3@16035>    BCC.w overerr
0002DAF6 <AmiBlitz3.ab3@16036>   LSL.l #4,D3
0002DAFA <AmiBlitz3.ab3@16037>   SUBI.w #$30,D0
0002DAFE <AmiBlitz3.ab3@16038>   CMP.w #$9,D0
0002DB02 <AmiBlitz3.ab3@16039>    BLS.w JL_0_A8AE
0002DB04 <AmiBlitz3.ab3@16040>   SUBQ.w #7,D0
0002DB06 <AmiBlitz3.ab3@16043>   OR.w D0,D3
0002DB0A <AmiBlitz3.ab3@16044>    BSR.w get1bytemain
0002DB0E <AmiBlitz3.ab3@16045>    BSR.w ishex
0002DB12 <AmiBlitz3.ab3@16046>    BEQ.w JL_0_A894
0002DB16 <AmiBlitz3.ab3@16047> BRA.w JL_0_B46E
0002DB1A <AmiBlitz3.ab3@16051>    BSR.w get1bytemain
0002DB1E <AmiBlitz3.ab3@16052>    BSR.w JL_0_A878
0002DB22 <AmiBlitz3.ab3@16053>    BNE.w syntaxerr
0002DB24 <AmiBlitz3.ab3@16054>    MOVEQ.l #$00,D3
0002DB26 <AmiBlitz3.ab3@16057>    LSL.l #1,D3
0002DB2A <AmiBlitz3.ab3@16058>    BCS.w overerr
0002DB2E <AmiBlitz3.ab3@16059>   SUBI.w #$30,D0
0002DB30 <AmiBlitz3.ab3@16060>   OR.w D0,D3
0002DB34 <AmiBlitz3.ab3@16061>    BSR.w get1bytemain
0002DB38 <AmiBlitz3.ab3@16062>    BSR.w JL_0_A878
0002DB3C <AmiBlitz3.ab3@16063>    BEQ.w JL_0_A8CE
0002DB40 <AmiBlitz3.ab3@16064> BRA.w JL_0_B46E
0002DB42 <AmiBlitz3.ab3@16068>    MOVE.w d2,-(A7)
0002DB4A <AmiBlitz3.ab3@16069>    MOVE.b #0,automode
0002DB4E <AmiBlitz3.ab3@16070>    CMP.b #"@",(a5)
0002DB52 <AmiBlitz3.ab3@16071>    BNE 'l1
0002DB54 <AmiBlitz3.ab3@16072>    ADDQ.l #1,a5
0002DB5C <AmiBlitz3.ab3@16073>    MOVE.b #1,automode
0002DB60 <AmiBlitz3.ab3@16074>    BSR getparameter2
0002DB64 <AmiBlitz3.ab3@16075>    BSR findlabel2
0002DB68 <AmiBlitz3.ab3@16076>    BNE 'addit
0002DB6C <AmiBlitz3.ab3@16077> BRA errormsg_autocount
0002DB70 <AmiBlitz3.ab3@16080>   BSR.w addlabelhash
0002DB78 <AmiBlitz3.ab3@16081>   MOVE.l #$1,$4(A2)
0002DB7C <AmiBlitz3.ab3@16082>   MOVEM.l a2/a5,-(a7)
0002DB82 <AmiBlitz3.ab3@16083>   MOVE.w lastchar,-(a7)
0002DB88 <AmiBlitz3.ab3@16084>   LEA autostorename,a5
0002DB8C <AmiBlitz3.ab3@16085>   BSR getparameter2
0002DB90 <AmiBlitz3.ab3@16086>   BSR findlabel2
0002DB94 <AmiBlitz3.ab3@16087>   BEQ 'found
0002DB98 <AmiBlitz3.ab3@16088>   BSR.w addlabelhash
0002DBA0 <AmiBlitz3.ab3@16089>   MOVE.l #$1,$4(A2)
0002DBA8 <AmiBlitz3.ab3@16090>   MOVE.l #0,8(a2)
0002DBAA <AmiBlitz3.ab3@16093>    MOVE.w (a7)+,d0
0002DBB0 <AmiBlitz3.ab3@16094>    MOVE.w d0,lastchar
0002DBB4 <AmiBlitz3.ab3@16095>   MOVE.l 8(a2),d3
0002DBBC <AmiBlitz3.ab3@16096>   ADD.l #1,8(a2)
0002DBC0 <AmiBlitz3.ab3@16097>   MOVEM.l (a7)+,a2/a5
0002DBC4 <AmiBlitz3.ab3@16098>   MOVE.l d3,8(a2)
0002DBC8 <AmiBlitz3.ab3@16099>   MOVE.l $8(A2),D3
0002DBCC <AmiBlitz3.ab3@16100> BRA.l 'l3
0002DBD0 <AmiBlitz3.ab3@16103>   BSR.w getparameter2
0002DBD6 <AmiBlitz3.ab3@16104>     TST.b incnif
0002DBDA <AmiBlitz3.ab3@16105>     BEQ 'lc1
0002DBDE <AmiBlitz3.ab3@16106>     BSR.w findlabel2
0002DBE2 <AmiBlitz3.ab3@16107>     BNE 'l5
0002DBE4 <AmiBlitz3.ab3@16108>     MOVEQ #1,d3
0002DBE6 <AmiBlitz3.ab3@16109>     MOVE.w (A7)+,D2
0002DBEA <AmiBlitz3.ab3@16110> BRA JL_0_B46E
0002DBEC <AmiBlitz3.ab3@16113>   MOVEQ #0,d3
0002DBEE <AmiBlitz3.ab3@16114>     MOVE.w (A7)+,D2
0002DBF2 <AmiBlitz3.ab3@16115> BRA JL_0_B46E
0002DBF6 <AmiBlitz3.ab3@16118>    BSR.w findlabel2
0002DBFA <AmiBlitz3.ab3@16119>    BNE.w cnferr
0002DC02 <AmiBlitz3.ab3@16122>    CMPI.l #$1,$4(A2)
0002DC06 <AmiBlitz3.ab3@16123>    BNE.w cnferr
0002DC0A <AmiBlitz3.ab3@16125>    MOVE.l $8(A2),D3
0002DC0C <AmiBlitz3.ab3@16126>    MOVE.w (A7)+,D2
0002DC10 <AmiBlitz3.ab3@16127> BRA.w JL_0_B46E
0002DC16 <AmiBlitz3.ab3@16131>   CLR.w vartype
0002DC1E <AmiBlitz3.ab3@16132>   MOVE.b #3,peekaddrsize
0002DC22 <AmiBlitz3.ab3@16133>   BSR.w JL_0_A916
0002DC28 <AmiBlitz3.ab3@16134>   MOVE.l a2,rightsidetype
0002DC32 <AmiBlitz3.ab3@16135>   MOVE.w flagmask,rightsideflagmask
0002DC34 <AmiBlitz3.ab3@16136>   MOVEQ.l #$03,D2
0002DC36 <AmiBlitz3.ab3@16137> RTS
0002DC3A <AmiBlitz3.ab3@16141>    BSR.w get1bytemain
0002DC4C <AmiBlitz3.ab3@16142>    !compare2
0002DC50 <AmiBlitz3.ab3@16143>    BEQ andop2
0002DC54 <AmiBlitz3.ab3@16144>    BSR.w getparameter
0002DC58 <AmiBlitz3.ab3@16145>    BSR.w JL_0_8E3C
0002DC5C <AmiBlitz3.ab3@16146>    BSR.w calcvar
0002DC60 <AmiBlitz3.ab3@16147>   CMP.b #$7,D2
0002DC64 <AmiBlitz3.ab3@16148>    BNE.w JL_0_A960
0002DC68 <AmiBlitz3.ab3@16149>   BTST #$F,D2
0002DC6C <AmiBlitz3.ab3@16150>    BNE.w JL_0_A94A
0002DC72 <AmiBlitz3.ab3@16151>   MOVE.w D3,stamp2+2
0002DC78 <AmiBlitz3.ab3@16152>   MOVE.l stamp2,D1
0002DC7C <AmiBlitz3.ab3@16153>    BSR.w pokela5s
0002DC80 <AmiBlitz3.ab3@16154> BRA.w JL_0_A978
0002DC86 <AmiBlitz3.ab3@16158>   MOVE.w regnum,D1
0002DC88 <AmiBlitz3.ab3@16159>   LSL.w #8,D1
0002DC8A <AmiBlitz3.ab3@16160>   LSL.w #1,D1
0002DC90 <AmiBlitz3.ab3@16161>   OR.w stamp,D1
0002DC94 <AmiBlitz3.ab3@16162>    BSR.w writeword
0002DC96 <AmiBlitz3.ab3@16163> RTS
0002DC9A <AmiBlitz3.ab3@16167>   BTST #$F,D2
0002DC9E <AmiBlitz3.ab3@16168>    BNE.w JL_0_A978
0002DCA4 <AmiBlitz3.ab3@16169>   MOVE.w D3,leaamp+2
0002DCAA <AmiBlitz3.ab3@16170>   MOVE.l leaamp,D1
0002DCAE <AmiBlitz3.ab3@16171>    BSR.w pokela5s
0002DCB4 <AmiBlitz3.ab3@16174>   MOVE.w regnum,D1
0002DCB6 <AmiBlitz3.ab3@16175>   LSL.w #8,D1
0002DCB8 <AmiBlitz3.ab3@16176>   LSL.w #1,D1
0002DCBE <AmiBlitz3.ab3@16177>   OR.w leaamp2,D1
0002DCC2 <AmiBlitz3.ab3@16178> BRA.w writeword
0002DCC6 <AmiBlitz3.ab3@16182>   MOVE.w #$D200,D1
0002DCCA <AmiBlitz3.ab3@16183>    BSR.w Atokejsr
0002DCCC <AmiBlitz3.ab3@16184>   MOVEQ.l #$03,D2
0002DCCE <AmiBlitz3.ab3@16185> RTS
0002DCD2 <AmiBlitz3.ab3@16189> addrcode:  Dc.b $20,$6D,$00,$00                            ;MOVEA.L $0000(A5),A0
0002DCD4 <AmiBlitz3.ab3@16190>            Dc.b $D0,$C0                                    ;ADDA.W  D0,A0
0002DCD6 <AmiBlitz3.ab3@16191>            Dc.b $20,$08                                    ;MOVE.L  A0,D0
0002DCDA <AmiBlitz3.ab3@16197>    BSR.w get1bytemain
0002DCDC <AmiBlitz3.ab3@16198>   MOVE.w D0,D1
0002DCE0 <AmiBlitz3.ab3@16199>    BPL.w syntaxerr
0002DCE2 <AmiBlitz3.ab3@16200>   MOVE.w D2,-(A7)
0002DCE6 <AmiBlitz3.ab3@16201>   BCLR #$F,D1
0002DCEA <AmiBlitz3.ab3@16202>    BSR.w searchinstr
0002DCEE <AmiBlitz3.ab3@16203>   MOVE.l $12(A2),D0
0002DCF2 <AmiBlitz3.ab3@16204>   TST.w -$2(A2,D0.L)
0002DCF6 <AmiBlitz3.ab3@16205>    BEQ.w freeerr
0002DCF8 <AmiBlitz3.ab3@16206>   MOVE.w (A7)+,D2
0002DCFA <AmiBlitz3.ab3@16207> RTS
0002DCFE <AmiBlitz3.ab3@16211>   MOVE.l $0(A5),D0
0002DD02 <AmiBlitz3.ab3@16212>    BNE.b ucodeskip
0002DD04 <AmiBlitz3.ab3@16213>   MOVEQ.l #-$01,D0
0002DD08 <AmiBlitz3.ab3@16214> BRA.b usedcodef
0002DD0C <AmiBlitz3.ab3@16217>   SUB.l $0(A5),D0
0002DD0E <AmiBlitz3.ab3@16220>   LSR.w #8,D0
0002DD12 <AmiBlitz3.ab3@16225>    MOVE.l $0(A5),D0
0002DD16 <AmiBlitz3.ab3@16226>    BNE.b ucodeskip2
0002DD18 <AmiBlitz3.ab3@16227>   MOVEQ.l #-$01,D0
0002DD1C <AmiBlitz3.ab3@16228> BRA.b usedcode2f
0002DD20 <AmiBlitz3.ab3@16231>   SUB.l $0(A5),D0                                          ;usedcode2
0002DD22 <AmiBlitz3.ab3@16232>   LSR.w #8,D0
0002DD24 <AmiBlitz3.ab3@16235>   LSR.w #8,D0
0002DD26 <AmiBlitz3.ab3@16240>   MOVE.l D0,-(A7)
0002DD28 <AmiBlitz3.ab3@16243>   MOVE.l (A7)+,D0
0002DD2A <AmiBlitz3.ab3@16246>   MOVE.l D0,D0
0002DD2E <AmiBlitz3.ab3@16252>   BSR.w JL_0_A9A0
0002DD32 <AmiBlitz3.ab3@16254>   MOVE.w -$2(A2,D0.L),D3
0002DD36 <AmiBlitz3.ab3@16255>   CMP.w #$9,D3
0002DD3A <AmiBlitz3.ab3@16256>    BCC.w doused__skip
0002DD3E <AmiBlitz3.ab3@16260>   LEA usedcode(PC),A0
0002DD42 <AmiBlitz3.ab3@16261>   LEA usedcodef(PC),A1
0002DD48 <AmiBlitz3.ab3@16263>   ANDI.w #$F1FF,$E+4(A0)                                   ;and #$f1ff,ucodediv-usedcode(a0) org source
0002DD4C <AmiBlitz3.ab3@16264>   ANDI.w #$7,D3
0002DD4E <AmiBlitz3.ab3@16265>   LSL.w #8,D3
0002DD50 <AmiBlitz3.ab3@16266>   LSL.w #1,D3
0002DD54 <AmiBlitz3.ab3@16267>   OR.w D3,$E+4(A0)                                         ;or  d3,ucodediv-usedcode(a0) org source
0002DD58 <AmiBlitz3.ab3@16268> BRA.w doused__skip2
0002DD5C <AmiBlitz3.ab3@16273>   LEA usedcode2(PC),A0
0002DD60 <AmiBlitz3.ab3@16274>   LEA usedcode2f(PC),A1
0002DD66 <AmiBlitz3.ab3@16276>   ANDI.w #$F1FF,$10+4(A0)                                  ;and #$f1ff,ucodediv2-usedcode2(a0) org source
0002DD68 <AmiBlitz3.ab3@16277>   SUBQ.w #8,D3
0002DD6A <AmiBlitz3.ab3@16278>   LSL.w #8,D3
0002DD6C <AmiBlitz3.ab3@16279>   LSL.w #1,D3
0002DD70 <AmiBlitz3.ab3@16280>   OR.w D3,$10+4(A0)                                        ;or  d3,ucodediv2-usedcode2(a0) org source
0002DD74 <AmiBlitz3.ab3@16283>   MOVE.w -$6(A2,D0.L),D3
0002DD78 <AmiBlitz3.ab3@16284>   MOVE.w D3,$C+4(A0)                                       ;move d3,ucodeskip-usedcode+2(a0) org source
0002DD7A <AmiBlitz3.ab3@16285>   ADDQ.w #4,D3
0002DD7E <AmiBlitz3.ab3@16286>   MOVE.w D3,$2(A0)
0002DD84 <AmiBlitz3.ab3@16287>   MOVE.w regnum,D1
0002DD88 <AmiBlitz3.ab3@16288>    BEQ.w doused__skip3
0002DD8C <AmiBlitz3.ab3@16289>   MOVE.w usedprep(PC),D1
0002DD90 <AmiBlitz3.ab3@16290>    BSR.w writeword
0002DD94 <AmiBlitz3.ab3@16293>   BSR.w pokecode
0002DD9A <AmiBlitz3.ab3@16294>   MOVE.w regnum,D1
0002DD9E <AmiBlitz3.ab3@16295>    BEQ.w doused__skip4
0002DDA0 <AmiBlitz3.ab3@16296>   LSL.w #8,D1
0002DDA2 <AmiBlitz3.ab3@16297>   LSL.w #1,D1
0002DDA6 <AmiBlitz3.ab3@16298>   OR.w usedfix(PC),D1
0002DDAA <AmiBlitz3.ab3@16299>    BSR.w writeword
0002DDAE <AmiBlitz3.ab3@16300>   MOVE.w useddone(PC),D1
0002DDB2 <AmiBlitz3.ab3@16301>    BSR.w writeword
0002DDB4 <AmiBlitz3.ab3@16304>    MOVEQ.l #$02,D2
0002DDB8 <AmiBlitz3.ab3@16305> BRA.w get1bytemain
0002DDBC <AmiBlitz3.ab3@16313>    BSR.w JL_0_A9A0
0002DDBE <AmiBlitz3.ab3@16315>   MOVEQ.l #$00,D3
0002DDC2 <AmiBlitz3.ab3@16316>   MOVE.w -$4(A2,D0.L),D3
0002DDC6 <AmiBlitz3.ab3@16317>    BSR.w get1bytemain
0002DDCA <AmiBlitz3.ab3@16318> BRA.w JL_0_B46E
0002DDCE <AmiBlitz3.ab3@16325>    BSR.w get1bytemain
0002DDD0 <AmiBlitz3.ab3@16326>   MOVE.w D0,-(A7)
0002DDD4 <AmiBlitz3.ab3@16327>    BSR.w get1bytemain
0002DDD8 <AmiBlitz3.ab3@16328>   CMP.w #$28,D0
0002DDDC <AmiBlitz3.ab3@16329>    BNE.w syntaxerr
0002DDDE <AmiBlitz3.ab3@16330>   MOVE.w (A7)+,D0
0002DDE2 <AmiBlitz3.ab3@16331>    BSR.w JL_0_C340
0002DDE6 <AmiBlitz3.ab3@16332>    BSR.w reget
0002DDEA <AmiBlitz3.ab3@16333>   CMP.w #$29,D0
0002DDEE <AmiBlitz3.ab3@16334>    BNE.w syntaxerr
0002DDF2 <AmiBlitz3.ab3@16338>   LEA addrcode(PC),A0
0002DDF6 <AmiBlitz3.ab3@16339>   LEA addrcodef(PC),A1
0002DDFC <AmiBlitz3.ab3@16340>   MOVE.w -$6(A2),$2(A0)
0002DE00 <AmiBlitz3.ab3@16341>   MOVE.w $4(A0),D1
0002DE04 <AmiBlitz3.ab3@16342>   ANDI.w #$FFF8,D1
0002DE0A <AmiBlitz3.ab3@16343>   OR.w regnum,D1
0002DE0E <AmiBlitz3.ab3@16344>   MOVE.w D1,$4(A0)
0002DE12 <AmiBlitz3.ab3@16345>   MOVE.w $6(A0),D1
0002DE16 <AmiBlitz3.ab3@16346>   ANDI.w #$F1FF,D1
0002DE1C <AmiBlitz3.ab3@16347>   MOVE.w regnum,D0
0002DE1E <AmiBlitz3.ab3@16348>   LSL.w #8,D0
0002DE20 <AmiBlitz3.ab3@16349>   LSL.w #1,D0
0002DE22 <AmiBlitz3.ab3@16350>   OR.w D0,D1
0002DE26 <AmiBlitz3.ab3@16351>   MOVE.w D1,$6(A0)
0002DE2A <AmiBlitz3.ab3@16352>    BSR.w pokecode
0002DE2C <AmiBlitz3.ab3@16353>   MOVEQ.l #$03,D2
0002DE30 <AmiBlitz3.ab3@16354> BRA.w get1bytemain
0002DE34 <AmiBlitz3.ab3@16358>   CMP.w #-$7F4D,D0
0002DE38 <AmiBlitz3.ab3@16359>    BHI.w JL_0_AAFE
0002DE3C <AmiBlitz3.ab3@16360> BRA.w syntaxerr
0002DE40 <AmiBlitz3.ab3@16367> .do_null   CMP.w #NullTokenID,d0                                ;#$b581 check for lib 107 token 1 "NULL" form elomorsyslib
0002DE44 <AmiBlitz3.ab3@16368>    BNE 'nonull
0002DE4A <AmiBlitz3.ab3@16369>    MOVE.l d0,lastinstruction
0002DE4E <AmiBlitz3.ab3@16370>    MOVE.w #$7000,d1                                            ;asm instr moveq #0,dx
0002DE54 <AmiBlitz3.ab3@16371>    MOVE.w regnum,d0
0002DE56 <AmiBlitz3.ab3@16372>    ASL.l #7,d0
0002DE58 <AmiBlitz3.ab3@16373>    ASL.l #2,d0
0002DE5A <AmiBlitz3.ab3@16374>    OR.l d0,d1
0002DE5E <AmiBlitz3.ab3@16375>    BSR writeword
0002DE64 <AmiBlitz3.ab3@16376>    JSR get1bytemain
0002DE66 <AmiBlitz3.ab3@16377>    RTS
0002DE6A <AmiBlitz3.ab3@16379> 'nonull CMP.w #$c982,d0
0002DE6E <AmiBlitz3.ab3@16380>        BNE nonew_
0002DE70 <AmiBlitz3.ab3@16382>   MOVE.l a5,-(a7)
0002DE76 <AmiBlitz3.ab3@16383>   MOVE.w lastchar,-(a7)
0002DE7C <AmiBlitz3.ab3@16384>   JSR get1bytemain
0002DE80 <AmiBlitz3.ab3@16385>   CMP.w #"(",d0                                             ; use oldcode
0002DE84 <AmiBlitz3.ab3@16386>   BNE 'newcode
0002DE8A <AmiBlitz3.ab3@16387>   JSR get1bytemain
0002DE8E <AmiBlitz3.ab3@16388>   CMP.w #")",d0
0002DE92 <AmiBlitz3.ab3@16389>   BEQ 'newcode
0002DE98 <AmiBlitz3.ab3@16390>   MOVE.w (a7)+,lastchar
0002DE9A <AmiBlitz3.ab3@16391>   MOVE.l (a7)+,a5
0002DEA0 <AmiBlitz3.ab3@16392>   MOVE.w lastchar,d0
0002DEA4 <AmiBlitz3.ab3@16393>   BRA nonew_
0002DEA6 <AmiBlitz3.ab3@16394> 'newcode  MOVE.l a0,-(a7)
0002DEAC <AmiBlitz3.ab3@16395>   TST.b blitzparloop
0002DEB0 <AmiBlitz3.ab3@16396>   BNE 'err
0002DEB6 <AmiBlitz3.ab3@16397>   TST.b funcparloop
0002DEBA <AmiBlitz3.ab3@16398>   BNE 'err
0002DEBE <AmiBlitz3.ab3@16399>   BRA 'ok
0002DEC4 <AmiBlitz3.ab3@16400> 'err JMP errornewnotincalls
0002DECA <AmiBlitz3.ab3@16401> 'ok  MOVE.l #$203c0000,d1
0002DECE <AmiBlitz3.ab3@16402>   BSR writelong                                            ; 68k asm move.l #$xx,d0
0002DED0 <AmiBlitz3.ab3@16403>   MOVEQ #0,d1
0002DED4 <AmiBlitz3.ab3@16404>   MOVE.w 8(a0),d1
0002DED8 <AmiBlitz3.ab3@16405>   BSR writeword
0002DEDC <AmiBlitz3.ab3@16406>   MOVE.w #$7200,d1                                         ; 68k asm "moveq #0,d1"
0002DEE0 <AmiBlitz3.ab3@16407>   BSR writeword
0002DEE4 <AmiBlitz3.ab3@16408>   MOVE.w #$C002,D1                                         ;call function to alloc global mem
0002DEE8 <AmiBlitz3.ab3@16409>   BSR.w tokejsr2
0002DEEA <AmiBlitz3.ab3@16410>   MOVE.l (a7)+,a0
0002DEEC <AmiBlitz3.ab3@16411>   ADDQ.l #6,a7                      ; a5 need not restore
0002DEF0 <AmiBlitz3.ab3@16412>   CMP.w #")",d0
0002DEF4 <AmiBlitz3.ab3@16413>   BNE 'nobracket
0002DEFA <AmiBlitz3.ab3@16414>   JSR get1bytemain
0002DEFC <AmiBlitz3.ab3@16415> 'nobracket  RTS
0002DF00 <AmiBlitz3.ab3@16417> nonew_  CMP.w #-$7F4A,D0
0002DF04 <AmiBlitz3.ab3@16418>    BEQ.w JL_0_A98C
0002DF08 <AmiBlitz3.ab3@16419>   CMP.w #-$7F48,D0
0002DF0C <AmiBlitz3.ab3@16420>    BEQ.w doaddr
0002DF10 <AmiBlitz3.ab3@16421>   CMP.w #-$7F3C,D0
0002DF14 <AmiBlitz3.ab3@16422>    BEQ.w domaximum
0002DF18 <AmiBlitz3.ab3@16423>   CMP.w #-$7F2F,D0
0002DF1C <AmiBlitz3.ab3@16424>    BEQ.w doused
0002DF1E <AmiBlitz3.ab3@16425>   MOVE.w D2,-(A7)
0002DF20 <AmiBlitz3.ab3@16426>   MOVE.w D0,D1
0002DF24 <AmiBlitz3.ab3@16427>   BCLR #$F,D1
0002DF28 <AmiBlitz3.ab3@16429>    BSR.w searchinstr
0002DF2A <AmiBlitz3.ab3@16430>   MOVE.w (A3),D1
0002DF2E <AmiBlitz3.ab3@16431>   BTST #$1,D1
0002DF32 <AmiBlitz3.ab3@16432>    BEQ.w noreturn_                                         ;syntax error noreturn
0002DF36 <AmiBlitz3.ab3@16433>   BTST #$2,D1
0002DF3A <AmiBlitz3.ab3@16434>    BNE.w JL_0_AC1A
0002DF3C <AmiBlitz3.ab3@16435>   LSR.w #8,D1
0002DF42 <AmiBlitz3.ab3@16436>   BTST #$3,$1(A3)
0002DF46 <AmiBlitz3.ab3@16437>    BEQ.w JL_0_AB4C
0002DF4C <AmiBlitz3.ab3@16438>    JSR AJL_0_498A
0002DF52 <AmiBlitz3.ab3@16441>    CLR.l rightsidetype
0002DF58 <AmiBlitz3.ab3@16442>    CLR.w rightsideflagmask
0002DF5A <AmiBlitz3.ab3@16443>    MOVE.w D1,-(A7)                                         ;is library instruction
0002DF5E <AmiBlitz3.ab3@16444>   CMP.w #$7,D1
0002DF62 <AmiBlitz3.ab3@16445>    BNE.w JL_0_AB5E
0002DF64 <AmiBlitz3.ab3@16446>   MOVE.l A2,-(A7)
0002DF68 <AmiBlitz3.ab3@16447>    BSR.w makesbase
0002DF6A <AmiBlitz3.ab3@16448>   MOVEA.l (A7)+,A2
0002DF6E <AmiBlitz3.ab3@16451>     BSR.w JL_0_AFA2
0002DF70 <AmiBlitz3.ab3@16452>   MOVE.w D3,-(A7)
0002DF74 <AmiBlitz3.ab3@16453>    BSR.w get1bytemain
0002DF76 <AmiBlitz3.ab3@16454>   MOVEQ.l #$00,D1
0002DF7A <AmiBlitz3.ab3@16455>   CMP.w #$28,D0
0002DF7E <AmiBlitz3.ab3@16456>    BNE.w JL_0_AB80
0002DF84 <AmiBlitz3.ab3@16457>    JSR JL_0_66F6
0002DF86 <AmiBlitz3.ab3@16458>   TST.w D1
0002DF8A <AmiBlitz3.ab3@16459>    BEQ.w syntaxerr
0002DF8E <AmiBlitz3.ab3@16460> BRA.w JL_0_AB84
0002DF98 <AmiBlitz3.ab3@16465>   MOVE.w oldqflag,instringon
0002DF9E <AmiBlitz3.ab3@16466>   MOVEA.l lastsourcepos,A5
0002DFA4 <AmiBlitz3.ab3@16469>    MOVE.w regnum,-(A7)
0002DFAE <AmiBlitz3.ab3@16470>    MOVE.w regnum,regnumstore
0002DFB4 <AmiBlitz3.ab3@16471>    TST.b fpu
0002DFB8 <AmiBlitz3.ab3@16472>             BEQ 'nofloat
0002DFBE <AmiBlitz3.ab3@16473>             CMP.w #$ffff,28(a3)
0002DFC2 <AmiBlitz3.ab3@16474>             BNE 'nofloat
0002DFC8 <AmiBlitz3.ab3@16475>             CMP.w #$3c01,34(a3)                            ;val do nofpu stuff
0002DFCC <AmiBlitz3.ab3@16476>             BEQ 'nofloat
0002DFD2 <AmiBlitz3.ab3@16477>             CMP.w #$3c02,34(a3)                            ;int skip
0002DFD6 <AmiBlitz3.ab3@16478>             BEQ 'quick
0002DFDA <AmiBlitz3.ab3@16479>             CMP.b #5,(a3)
0002DFDE <AmiBlitz3.ab3@16480>             BNE 'nofloat
0002DFE4 <AmiBlitz3.ab3@16483>             CLR.l load_var_addr
0002DFE8 <AmiBlitz3.ab3@16484> BRA 'isfpu
0002DFEE <AmiBlitz3.ab3@16487>    CLR.w regnum
0002DFF0 <AmiBlitz3.ab3@16490>    MOVE.w D1,-(A7)
0002DFF6 <AmiBlitz3.ab3@16491>   BTST #$3,$1(A3)
0002DFFA <AmiBlitz3.ab3@16492>    BEQ.w JL_0_ABB0
0002DFFE <AmiBlitz3.ab3@16511>   MOVE.w $6(A7),D1
0002E004 <AmiBlitz3.ab3@16512>   MOVE.w d1,peeksize
0002E008 <AmiBlitz3.ab3@16522>   ORI.w #$7000,D1
0002E00C <AmiBlitz3.ab3@16523>   BSR.w writeword                                          ;write peekmode
0002E012 <AmiBlitz3.ab3@16526>   ADDQ.w #1,regnum
0002E014 <AmiBlitz3.ab3@16527>   MOVE.w (A7),D1
0002E01C <AmiBlitz3.ab3@16530>   MOVE.w 2(a7),tempregnum
0002E022 <AmiBlitz3.ab3@16531>   MOVE.w parnum,-(a7)                                       ;7.2014 parnum need store to allow functioncall in parameter >6
0002E028 <AmiBlitz3.ab3@16532>   CLR.w parnum                                              ;7.2014
0002E02E <AmiBlitz3.ab3@16533>   JSR JL_0_4878                                             ;write code of blitzfunc
0002E034 <AmiBlitz3.ab3@16534>   MOVE.w (a7)+,parnum                                       ;7.2014 new restore parnum
0002E036 <AmiBlitz3.ab3@16535>   TST.w (A7)+
0002E03A <AmiBlitz3.ab3@16536>   BEQ.w JL_0_ABC6
0002E03E <AmiBlitz3.ab3@16537>   CMP.w #")",D0                                             ; check if ) here for correct end of blitzlib function call
0002E042 <AmiBlitz3.ab3@16538>   BNE.w errorbracketmiss                                    ; was syntax error
0002E048 <AmiBlitz3.ab3@16539>   CLR.l lasttoken
0002E04C <AmiBlitz3.ab3@16540>   BSR.w get1bytemain
0002E04E <AmiBlitz3.ab3@16543>    MOVE.w (A7)+,D1
0002E054 <AmiBlitz3.ab3@16544>    MOVE.w D1,regnum
0002E058 <AmiBlitz3.ab3@16545>    BEQ.w JL_0_ABDE
0002E05E <AmiBlitz3.ab3@16546>    CMP.w #$3c01,24(a2)                                     ;val skipped
0002E062 <AmiBlitz3.ab3@16547>    BNE 'noval
0002E068 <AmiBlitz3.ab3@16548>    TST.b fpu
0002E06C <AmiBlitz3.ab3@16549>    BEQ 'noval
0002E072 <AmiBlitz3.ab3@16550>    CLR.l load_var_addr
0002E074 <AmiBlitz3.ab3@16551>    MOVEQ #0,d1
0002E07A <AmiBlitz3.ab3@16552>    MOVE.w regnum,d1
0002E07C <AmiBlitz3.ab3@16553>    LSL.l #7,d1
0002E082 <AmiBlitz3.ab3@16554>    OR.l #$f2000000,d1
0002E086 <AmiBlitz3.ab3@16555>    BSR writelong
0002E08A <AmiBlitz3.ab3@16556> BRA JL_0_ABDE
0002E090 <AmiBlitz3.ab3@16560>    CMP.w #$3c02,24(a2)                                     ;int skipped
0002E094 <AmiBlitz3.ab3@16561>    BEQ 'quick
0002E098 <AmiBlitz3.ab3@16562>    CMP.b #5,d2
0002E09C <AmiBlitz3.ab3@16563>    BNE 'nofpu
0002E0A2 <AmiBlitz3.ab3@16564>    TST.b fpu
0002E0A6 <AmiBlitz3.ab3@16565>    BEQ 'nofpu
0002E0AC <AmiBlitz3.ab3@16570>    CLR.l load_var_addr
0002E0B0 <AmiBlitz3.ab3@16571> BRA JL_0_ABDE
0002E0B2 <AmiBlitz3.ab3@16574>   LSL.w #8,D1
0002E0B4 <AmiBlitz3.ab3@16575>   LSL.w #1,D1
0002E0B8 <AmiBlitz3.ab3@16576>   ORI.w #$2000,D1
0002E0BC <AmiBlitz3.ab3@16577>   BSR.w writeword                                          ;write move.l d0,dx
0002E0C2 <AmiBlitz3.ab3@16578>   TST.b fpu
0002E0C6 <AmiBlitz3.ab3@16579>   BEQ JL_0_ABDE
0002E0C8 <AmiBlitz3.ab3@16580>   MOVEQ #0,d1
0002E0CE <AmiBlitz3.ab3@16581>   MOVE.w regnum,d1
0002E0D0 <AmiBlitz3.ab3@16582>   LSL.l #7,d1
0002E0D6 <AmiBlitz3.ab3@16583>   OR.l #$f2000000,d1
0002E0D8 <AmiBlitz3.ab3@16587>        MOVE.w (A7)+,D3
0002E0DC <AmiBlitz3.ab3@16588>        BEQ.w JL_0_ABFC
0002E0E2 <AmiBlitz3.ab3@16589>        TST.b fpu
0002E0E6 <AmiBlitz3.ab3@16590>        BEQ 'nofpu
0002E0E8 <AmiBlitz3.ab3@16591>       MOVE.l d0,-(a7)
0002E0EA <AmiBlitz3.ab3@16592>        MOVE.l a0,-(a7)
0002E0F0 <AmiBlitz3.ab3@16593>        MOVE.l stacktrack,d1
0002E0F6 <AmiBlitz3.ab3@16594>        LEA fpustackbase,a0
0002E0FE <AmiBlitz3.ab3@16595>        MOVE.w 0(a0,d1),regmask
0002E100 <AmiBlitz3.ab3@16596>        MOVE.l (a7)+,a0
0002E104 <AmiBlitz3.ab3@16597>       MOVE.w #8,d0
0002E108 <AmiBlitz3.ab3@16600>       BEQ 'ready
0002E10E <AmiBlitz3.ab3@16601>       BTST d0,regmask
0002E112 <AmiBlitz3.ab3@16602>       BEQ 'noa7
0002E114 <AmiBlitz3.ab3@16603>       MOVEQ #0,d1
0002E116 <AmiBlitz3.ab3@16604>       MOVE.w d0,d1
0002E118 <AmiBlitz3.ab3@16605>       SUBQ.w #1,d1
0002E11A <AmiBlitz3.ab3@16606>       ASL #7,d1
0002E120 <AmiBlitz3.ab3@16608>       OR.l #$f21f5400,d1                                   ;fmove.d (a7)+
0002E124 <AmiBlitz3.ab3@16609>       BSR writelong
0002E12A <AmiBlitz3.ab3@16610>       SUBQ.l #2,stacktrack
0002E12C <AmiBlitz3.ab3@16613>       SUBQ.w #1,d0
0002E130 <AmiBlitz3.ab3@16614>       BNE 'loop
0002E132 <AmiBlitz3.ab3@16617>       MOVE.l (a7)+,d0
0002E138 <AmiBlitz3.ab3@16618>       SUBQ.l #2,stacktrack                                 ;int track
0002E13C <AmiBlitz3.ab3@16621>    MOVE.w #$4CDF,D1
0002E140 <AmiBlitz3.ab3@16622>    BSR.w writeword                                         ;write movem.l (a7)+,
0002E142 <AmiBlitz3.ab3@16623>   MOVEQ.l #$00,D1
0002E144 <AmiBlitz3.ab3@16624>   MOVEQ.l #$0F,D4
0002E146 <AmiBlitz3.ab3@16627>     LSL.w #1,D3
0002E148 <AmiBlitz3.ab3@16628>     ROXR.w #1,D1
0002E14C <AmiBlitz3.ab3@16629>   DBF D4,JL_0_ABF0
0002E150 <AmiBlitz3.ab3@16631>    BSR.w writeword
0002E156 <AmiBlitz3.ab3@16632>    TST.b fast
0002E15A <AmiBlitz3.ab3@16633>    BEQ JL_0_ABFC
0002E160 <AmiBlitz3.ab3@16634>    TST.w regnum
0002E164 <AmiBlitz3.ab3@16635>    BEQ JL_0_ABFC
0002E16A <AmiBlitz3.ab3@16636>    CMP.w #$3c0e,$1c(a3)                                    ;true
0002E16E <AmiBlitz3.ab3@16637>    BNE 'l1
0002E174 <AmiBlitz3.ab3@16638>    MOVE.w regnum,d1
0002E176 <AmiBlitz3.ab3@16639>    ASL.l #8,d1
0002E178 <AmiBlitz3.ab3@16640>    ASL.l #1,d1
0002E17C <AmiBlitz3.ab3@16641>    OR.w #$70ff,d1
0002E186 <AmiBlitz3.ab3@16642>    SUB.l #12,destpointer
0002E18A <AmiBlitz3.ab3@16643>    BSR writeword
0002E190 <AmiBlitz3.ab3@16646>   CMP.w #$3c0f,$1c(a3)                                     ;false
0002E194 <AmiBlitz3.ab3@16647>    BNE 'l2
0002E19A <AmiBlitz3.ab3@16648>     MOVE.w regnum,d1
0002E19C <AmiBlitz3.ab3@16649>     ASL.l #8,d1
0002E19E <AmiBlitz3.ab3@16650>     ASL.l #1,d1
0002E1A2 <AmiBlitz3.ab3@16651>     OR.w #$7000,d1
0002E1AC <AmiBlitz3.ab3@16652>     SUB.l #12,destpointer
0002E1B0 <AmiBlitz3.ab3@16653>     BSR writeword
0002E1B2 <AmiBlitz3.ab3@16657>    MOVE.w (A7)+,D2
0002E1B6 <AmiBlitz3.ab3@16658>   CMP.w #$7,D2                                             ;destination var type
0002E1BA <AmiBlitz3.ab3@16659>    BNE.w JL_0_AC16
0002E1C0 <AmiBlitz3.ab3@16660>   MOVE.w putstlen,D1
0002E1C6 <AmiBlitz3.ab3@16661>   OR.w regnum,D1
0002E1CA <AmiBlitz3.ab3@16662>    BSR.w writeword
0002E1CE <AmiBlitz3.ab3@16665> BRA.w JL_0_AF66
0002E1D2 <AmiBlitz3.ab3@16670>   MOVE.w $6(A3),D1
0002E1D6 <AmiBlitz3.ab3@16671>    BSR.w uselib
0002E1DA <AmiBlitz3.ab3@16672>    BSR.w JL_0_AD40
0002E1DC <AmiBlitz3.ab3@16673>   MOVE.l D4,D1
0002E1DE <AmiBlitz3.ab3@16674>   MOVE.l D5,-(A7)
0002E1E2 <AmiBlitz3.ab3@16675>    BSR.w JL_0_AD38
0002E1E6 <AmiBlitz3.ab3@16676>   MOVE.w $A(A1),-(A7)
0002E1E8 <AmiBlitz3.ab3@16677>   ADDQ.w #8,A3
0002E1EA <AmiBlitz3.ab3@16678>   MOVE.w (A3)+,-(A7)
0002E1EC <AmiBlitz3.ab3@16679>   MOVE.l A3,-(A7)
0002E1F0 <AmiBlitz3.ab3@16680>    BSR.w get1bytemain
0002E1F2 <AmiBlitz3.ab3@16681>   MOVE.w D0,-(A7)
0002E1F4 <AmiBlitz3.ab3@16682>   MOVEQ.l #$00,D3
0002E1FA <AmiBlitz3.ab3@16683>   JSR checka4a5
0002E1FC <AmiBlitz3.ab3@16685>   MOVE.b (A3)+,D1
0002E200 <AmiBlitz3.ab3@16686>    BMI.w JL_0_AC6A
0002E202 <AmiBlitz3.ab3@16687>   MOVEQ.l #$03,D2
0002E204 <AmiBlitz3.ab3@16688>   ADDQ.w #1,D3
0002E208 <AmiBlitz3.ab3@16689>   MOVEM.l D3/A3,-(A7)
0002E20E <AmiBlitz3.ab3@16690>   MOVE.b funcparloop,-(a7)
0002E214 <AmiBlitz3.ab3@16691>   CLR.b funcparloop
0002E21A <AmiBlitz3.ab3@16692>   MOVE.b blitzparloop,-(a7)
0002E222 <AmiBlitz3.ab3@16693>   MOVE.b #1,blitzparloop
0002E228 <AmiBlitz3.ab3@16694>   MOVE.l lasttoken,-(a7)
0002E22E <AmiBlitz3.ab3@16695>   MOVE.l leftsidetype,-(a7)
0002E234 <AmiBlitz3.ab3@16696>   MOVE.l rightsidetype,-(a7)
0002E238 <AmiBlitz3.ab3@16697>   BSR.w peval
0002E23E <AmiBlitz3.ab3@16698>   MOVE.l (a7)+,rightsidetype
0002E244 <AmiBlitz3.ab3@16699>   MOVE.l (a7)+,leftsidetype
0002E24A <AmiBlitz3.ab3@16700>   MOVE.l (a7)+,lasttoken
0002E250 <AmiBlitz3.ab3@16701>   MOVE.b (a7)+,blitzparloop
0002E256 <AmiBlitz3.ab3@16702>   MOVE.b (a7)+,funcparloop
0002E25C <AmiBlitz3.ab3@16703>   SUBQ.w #4,a2offset
0002E260 <AmiBlitz3.ab3@16704>   MOVEM.l (A7)+,D3/A3
0002E264 <AmiBlitz3.ab3@16705>   CMP.w #$2C,D0
0002E268 <AmiBlitz3.ab3@16706>    BEQ.w JL_0_AC40
0002E26A <AmiBlitz3.ab3@16707>   TST.b (A3)
0002E26E <AmiBlitz3.ab3@16708>    BPL.w syntaxerr
0002E270 <AmiBlitz3.ab3@16711>   MOVE.w (A7)+,D1
0002E274 <AmiBlitz3.ab3@16712>    BSR.w JL_0_AD04
0002E276 <AmiBlitz3.ab3@16713>   MOVEA.l (A7)+,A3
0002E278 <AmiBlitz3.ab3@16714>   SUBQ.w #1,D3
0002E27C <AmiBlitz3.ab3@16715>    BMI.w JL_0_ACBE
0002E27E <AmiBlitz3.ab3@16718>   TST.b (A3)+
0002E282 <AmiBlitz3.ab3@16719>    BPL.w JL_0_AC78
0002E284 <AmiBlitz3.ab3@16720>   SUBQ.w #1,A3
0002E286 <AmiBlitz3.ab3@16723>     MOVEQ.l #$00,D1
0002E288 <AmiBlitz3.ab3@16724>     MOVE.b -(A3),D1
0002E28C <AmiBlitz3.ab3@16725>     BTST #$4,D1
0002E290 <AmiBlitz3.ab3@16726>      BNE.w JL_0_ACAA
0002E296 <AmiBlitz3.ab3@16727>     CMP.w regnum,D1
0002E29A <AmiBlitz3.ab3@16728>      BCC.w JL_0_AC9E
0002E29C <AmiBlitz3.ab3@16729>     BSET D1,D5
0002E29E <AmiBlitz3.ab3@16730>     MOVEQ.l #$0F,D0
0002E2A0 <AmiBlitz3.ab3@16731>     SUB.w D1,D0
0002E2A2 <AmiBlitz3.ab3@16732>     BSET D0,D4
0002E2A4 <AmiBlitz3.ab3@16735>     LSL.w #8,D1
0002E2A6 <AmiBlitz3.ab3@16736>     LSL.w #1,D1
0002E2AA <AmiBlitz3.ab3@16737>     ORI.w #$201F,D1
0002E2AE <AmiBlitz3.ab3@16738>   BRA.w JL_0_ACB6
0002E2B2 <AmiBlitz3.ab3@16741>     ANDI.w #$7,D1
0002E2B4 <AmiBlitz3.ab3@16742>     LSL.w #8,D1
0002E2B6 <AmiBlitz3.ab3@16743>     LSL.w #1,D1
0002E2BA <AmiBlitz3.ab3@16744>     ORI.w #$205F,D1
0002E2BE <AmiBlitz3.ab3@16747>      BSR.w writeword
0002E2C2 <AmiBlitz3.ab3@16748>   DBF D3,JL_0_AC80
0002E2C8 <AmiBlitz3.ab3@16751>   MOVE.w (A7)+,libjsr+2
0002E2CE <AmiBlitz3.ab3@16752>   MOVE.w (A7)+,libbase+2
0002E2D4 <AmiBlitz3.ab3@16753>   MOVE.l libbase,D1
0002E2D8 <AmiBlitz3.ab3@16754>    BSR.w writelong
0002E2DE <AmiBlitz3.ab3@16755>   MOVE.l libjsr,D1
0002E2E2 <AmiBlitz3.ab3@16756>    BSR.w writelong
0002E2E8 <AmiBlitz3.ab3@16757>   MOVE.w regnum,D1
0002E2EC <AmiBlitz3.ab3@16758>    BEQ.w JL_0_ACF4
0002E2EE <AmiBlitz3.ab3@16759>   LSL.w #8,D1
0002E2F0 <AmiBlitz3.ab3@16760>   LSL.w #1,D1
0002E2F4 <AmiBlitz3.ab3@16761>   ORI.w #$2000,D1
0002E2F8 <AmiBlitz3.ab3@16762>    BSR.w writeword
0002E2FA <AmiBlitz3.ab3@16765>   MOVE.l (A7)+,D1
0002E2FE <AmiBlitz3.ab3@16766>    BSR.w JL_0_AD38
0002E304 <AmiBlitz3.ab3@16767>    JSR restorea4a5
0002E306 <AmiBlitz3.ab3@16768>   MOVEQ.l #$03,D2
0002E30A <AmiBlitz3.ab3@16769>    BSR.w reget
0002E30E <AmiBlitz3.ab3@16770> BRA.w JL_0_AF66
0002E310 <AmiBlitz3.ab3@16773>   TST.w D3
0002E314 <AmiBlitz3.ab3@16774>    BEQ.w JL_0_AD1E
0002E318 <AmiBlitz3.ab3@16775>   CMP.w #$28,D1
0002E31C <AmiBlitz3.ab3@16776>    BNE.w syntaxerr
0002E320 <AmiBlitz3.ab3@16777>   CMP.w #$29,D0
0002E324 <AmiBlitz3.ab3@16778>    BNE.w syntaxerr
0002E328 <AmiBlitz3.ab3@16779> BRA.w get1bytemain
0002E32C <AmiBlitz3.ab3@16782>   CMP.w #$28,D1
0002E330 <AmiBlitz3.ab3@16783>    BNE.w JL_0_AD36
0002E334 <AmiBlitz3.ab3@16784>    BSR.w get1bytemain
0002E338 <AmiBlitz3.ab3@16785>   CMP.w #$29,D0
0002E33C <AmiBlitz3.ab3@16786>    BNE.w syntaxerr
0002E340 <AmiBlitz3.ab3@16787> BRA.w get1bytemain
0002E342 <AmiBlitz3.ab3@16790> RTS
0002E344 <AmiBlitz3.ab3@16793>   TST.w D1
0002E348 <AmiBlitz3.ab3@16794>    BNE.w writelong
0002E34A <AmiBlitz3.ab3@16795> RTS
0002E34E <AmiBlitz3.ab3@16799>   MOVE.w #$48E7,D4
0002E350 <AmiBlitz3.ab3@16800>   SWAP D4
0002E352 <AmiBlitz3.ab3@16801>   CLR.w D4
0002E356 <AmiBlitz3.ab3@16802>   MOVE.w #$4CDF,D5
0002E358 <AmiBlitz3.ab3@16803>   SWAP D5
0002E35A <AmiBlitz3.ab3@16804>   CLR.w D5
0002E360 <AmiBlitz3.ab3@16805>   MOVE.w regnum,D1
0002E364 <AmiBlitz3.ab3@16806>    BEQ.w JL_0_AD74
0002E368 <AmiBlitz3.ab3@16807>   BSET #$F,D4
0002E36C <AmiBlitz3.ab3@16808>   BSET #$0,D5
0002E370 <AmiBlitz3.ab3@16809>   CMP.w #$2,D1
0002E374 <AmiBlitz3.ab3@16810>    BCS.w JL_0_AD72
0002E378 <AmiBlitz3.ab3@16813>   BSET #$E,D4
0002E37C <AmiBlitz3.ab3@16814>   BSET #$1,D5
0002E37E <AmiBlitz3.ab3@16817> RTS
0002E384 <AmiBlitz3.ab3@16820>   TST.w fuckpos
0002E388 <AmiBlitz3.ab3@16821>   BNE.w JL_0_AD6A
0002E38A <AmiBlitz3.ab3@16822> RTS
0002E38C <AmiBlitz3.ab3@16825> fuckpos:  Ds.w 1
0002E392 <AmiBlitz3.ab3@16829>   MOVE.w sbasegot,D1
0002E396 <AmiBlitz3.ab3@16830>    BEQ.w makesbase__skip
0002E39A <AmiBlitz3.ab3@16834>   MOVE.w sbgot(PC),D1
0002E39E <AmiBlitz3.ab3@16835>    BNE.w makesbase__skip2
0002E3A6 <AmiBlitz3.ab3@16839>   MOVE.w #$0002,sbgot
0002E3AC <AmiBlitz3.ab3@16840>   MOVE.w movea3a7,D1
0002E3B0 <AmiBlitz3.ab3@16841> BRA.w writeword
0002E3B2 <AmiBlitz3.ab3@16844> RTS
0002E3BA <AmiBlitz3.ab3@16849>   MOVE.w #$0001,sbgot                                      ;voodoo magic! - Will it work?
0002E3C0 <AmiBlitz3.ab3@16852>   MOVE.l #$C601,D1
0002E3C8 <AmiBlitz3.ab3@16853>   MOVE.w #-1,sbasegot
0002E3CE <AmiBlitz3.ab3@16854>   MOVE.l d1,lastinstruction
0002E3D2 <AmiBlitz3.ab3@16855>   BSR.w Atokejsr
0002E3D4 <AmiBlitz3.ab3@16856> RTS
0002E3DE <AmiBlitz3.ab3@16861>   MOVE.l data1,litdata1
0002E3E4 <AmiBlitz3.ab3@16862>   TST.b fast
0002E3E8 <AmiBlitz3.ab3@16863>   BEQ 'l50                                                 ;optistring  seem impossible to get work
0002E3EC <AmiBlitz3.ab3@16867> BRA 'l50                                                   ;to deactivate
0002E3F2 <AmiBlitz3.ab3@16873>   TST.b optistring
0002E3F6 <AmiBlitz3.ab3@16874>   BNE.s 'l21
0002E3FC <AmiBlitz3.ab3@16875>   CLR.b string1
0002E404 <AmiBlitz3.ab3@16876>   MOVE.b #1,optistring
0002E40A <AmiBlitz3.ab3@16877>   TST.b nostringopt
0002E40E <AmiBlitz3.ab3@16878>   BNE 'l21
0002E410 <AmiBlitz3.ab3@16879>   MOVE.l a5,a4
0002E412 <AmiBlitz3.ab3@16880>   SUBQ.l #1,a4
0002E414 <AmiBlitz3.ab3@16883>     TST.b (a4)
0002E418 <AmiBlitz3.ab3@16884>     BMI 'l19a
0002E41C <AmiBlitz3.ab3@16885>     BEQ.s 'l20
0002E420 <AmiBlitz3.ab3@16886>     CMP.b #$22,(a4)
0002E424 <AmiBlitz3.ab3@16887>     BEQ.s 'l19
0002E42A <AmiBlitz3.ab3@16890>     TST.w string1
0002E42E <AmiBlitz3.ab3@16891>     BNE 'l11
0002E432 <AmiBlitz3.ab3@16892>     CMP.b #":",(a4)
0002E436 <AmiBlitz3.ab3@16893>     BEQ.s 'l20
0002E43A <AmiBlitz3.ab3@16894>     CMP.b #";",(a4)
0002E43E <AmiBlitz3.ab3@16895>     BEQ.s 'l20
0002E442 <AmiBlitz3.ab3@16896>     CMP.b #"+",(a4)
0002E446 <AmiBlitz3.ab3@16897>     BEQ.s 'l21
0002E44A <AmiBlitz3.ab3@16898>     CMP.b #",",(a4)
0002E44E <AmiBlitz3.ab3@16899>     BEQ.s 'l20                                             ;was l21
0002E452 <AmiBlitz3.ab3@16900>     CMP.b #")",(a4)
0002E456 <AmiBlitz3.ab3@16901>     BEQ.s 'l20                                             ;was l21
0002E458 <AmiBlitz3.ab3@16904>     ADDQ.l #1,a4
0002E45C <AmiBlitz3.ab3@16905> BRA.s 'l10
0002E464 <AmiBlitz3.ab3@16908>   BCHG #0,string1
0002E468 <AmiBlitz3.ab3@16909> BRA 'l18
0002E46A <AmiBlitz3.ab3@16912>   ADDQ.l #1,a4
0002E46C <AmiBlitz3.ab3@16913>   TST.b (a4)
0002E470 <AmiBlitz3.ab3@16914>   BEQ 'l21
0002E474 <AmiBlitz3.ab3@16915> BRA 'l11
0002E476 <AmiBlitz3.ab3@16918>   MOVE.l a5,a4
0002E478 <AmiBlitz3.ab3@16919>   SUBQ.l #1,a4
0002E47C <AmiBlitz3.ab3@16922>   CMP.b #$20,-(a4)
0002E480 <AmiBlitz3.ab3@16923>   BEQ 'll1
0002E484 <AmiBlitz3.ab3@16924>   CMP.b #"+",(a4)
0002E488 <AmiBlitz3.ab3@16925>   BEQ 'l21
0002E490 <AmiBlitz3.ab3@16940>   MOVE.b #2,optistring
0002E498 <AmiBlitz3.ab3@16943>   CMP.b #2,optistring
0002E49C <AmiBlitz3.ab3@16944>   BEQ.s 'l100
0002E4A0 <AmiBlitz3.ab3@16947>   BSR.w makesbase
0002E4A4 <AmiBlitz3.ab3@16948>   BSR.w pokedata1                                          ;writestringsizespace
0002E4A8 <AmiBlitz3.ab3@16949>   BSR.w pokedata1
0002E4AA <AmiBlitz3.ab3@16952>   MOVEQ.l #$00,D2
0002E4B0 <AmiBlitz3.ab3@16955>     MOVE.l a5,lastsourcepos
0002E4B2 <AmiBlitz3.ab3@16956>     MOVEQ #0,d0
0002E4B4 <AmiBlitz3.ab3@16957>     MOVE.b (a5)+,d0
0002E4B6 <AmiBlitz3.ab3@16958>     TST.w D0
0002E4BA <AmiBlitz3.ab3@16959>      BEQ.w notqerr
0002E4BE <AmiBlitz3.ab3@16960>     CMP.w #$22,D0                                          ; --- " ---
0002E4C2 <AmiBlitz3.ab3@16961>      BEQ.w JL_0_ADF6
0002E4C6 <AmiBlitz3.ab3@16962>     CMP.b #"\",d0
0002E4CA <AmiBlitz3.ab3@16963>      BNE 'l1
0002E4CE <AmiBlitz3.ab3@16964>     CMP.b #"\",(a5)
0002E4D2 <AmiBlitz3.ab3@16965>      BNE 'l1
0002E4D8 <AmiBlitz3.ab3@16966>     TST.b newsyntax
0002E4DC <AmiBlitz3.ab3@16967>      BEQ 'l1
0002E4E2 <AmiBlitz3.ab3@16968>     CMP.w #"\\",1(a5)                                      ; new compiler constants
0002E4E6 <AmiBlitz3.ab3@16969>     BNE 'l2
0002E4E8 <AmiBlitz3.ab3@16970>     ADDQ #2,a5
0002E4EA <AmiBlitz3.ab3@16973>     ADDQ.w #1,D2
0002E4EC <AmiBlitz3.ab3@16974>     MOVE.w D0,D1
0002E4F0 <AmiBlitz3.ab3@16975>     BSR.w pokedata1b                                        ;writestring
0002E4F4 <AmiBlitz3.ab3@16976> BRA.w writestring
0002E4FA <AmiBlitz3.ab3@16979>     JSR check_newconstants
0002E4FE <AmiBlitz3.ab3@16980> BRA writestring
0002E504 <AmiBlitz3.ab3@16983>   NOT instringon
0002E50A <AmiBlitz3.ab3@16984>   MOVE.w dontwrite,D1
0002E50E <AmiBlitz3.ab3@16985>   BNE.w JL_0_AE0A
0002E516 <AmiBlitz3.ab3@16986>   CMP.b #2,optistring
0002E51A <AmiBlitz3.ab3@16987>   BEQ 'l10
0002E520 <AmiBlitz3.ab3@16988>     MOVEA.l litdata1,A0
0002E522 <AmiBlitz3.ab3@16989>     CLR.w (A0)+                                            ;writesize
0002E524 <AmiBlitz3.ab3@16990>     MOVE.w D2,(A0)
0002E528 <AmiBlitz3.ab3@16994>   BSR.w JL_0_AEA4                                          ;writestringconstantcode
0002E52E <AmiBlitz3.ab3@16995>   ADDQ.l #1,data1
0002E536 <AmiBlitz3.ab3@16996>   BCLR #$0,data1+3
0002E538 <AmiBlitz3.ab3@16997>   MOVEQ.l #$07,D2
0002E53C <AmiBlitz3.ab3@16998> BRA.w get1bytemain
0002E540 <AmiBlitz3.ab3@17002>   BSR.w makename2
0002E544 <AmiBlitz3.ab3@17003>   BSR.w findlabel2
0002E548 <AmiBlitz3.ab3@17004>   BEQ.w JL_0_AE4A
0002E54C <AmiBlitz3.ab3@17005>   BSR.w addlabelhash
0002E550 <AmiBlitz3.ab3@17006>   CLR.l $4(A2)
0002E554 <AmiBlitz3.ab3@17007>   CLR.l $8(A2)
0002E55C <AmiBlitz3.ab3@17009>   MOVE.w linenumat+2,$10(A2)
0002E562 <AmiBlitz3.ab3@17010>   MOVE.w linenumat,d0
0002E564 <AmiBlitz3.ab3@17011>   MOVEQ #0,d1
0002E568 <AmiBlitz3.ab3@17012>   MOVE.b -1(a2,d7),d1
0002E56C <AmiBlitz3.ab3@17013>   MOVE.w d0,0(a2,d1)
0002E570 <AmiBlitz3.ab3@17014> BRA.w JL_0_AE52
0002E574 <AmiBlitz3.ab3@17017>   TST.l $8(A2)
0002E578 <AmiBlitz3.ab3@17018>   BNE.w JL_0_AE88
0002E57E <AmiBlitz3.ab3@17021>   MOVEA.l _execbase,A6
0002E580 <AmiBlitz3.ab3@17022>   MOVEQ.l #$0C+2,D0
0002E582 <AmiBlitz3.ab3@17023>   MOVEQ.l #$01,D1
0002E588 <AmiBlitz3.ab3@17024>   MOVE.l mempool,a0
0002E58C <AmiBlitz3.ab3@17025>   JSR _AllocPooled(a6)
0002E58E <AmiBlitz3.ab3@17027>   MOVEA.l D0,A0
0002E592 <AmiBlitz3.ab3@17028>   MOVE.l $4(A2),(A0)
0002E596 <AmiBlitz3.ab3@17029>   MOVE.l A0,$4(A2)
0002E59E <AmiBlitz3.ab3@17030>   MOVE.l destpointer,$4(A0)
0002E5A2 <AmiBlitz3.ab3@17031>   ADDQ.l #2,$4(A0)
0002E5AA <AmiBlitz3.ab3@17032>   MOVE.w procnum,$8(A0)
0002E5B2 <AmiBlitz3.ab3@17033>   MOVE.w linenumat+2,$A(A0)
0002E5BA <AmiBlitz3.ab3@17034>   MOVE.w linenumat,$c(a0)
0002E5BC <AmiBlitz3.ab3@17035> RTS
0002E5C0 <AmiBlitz3.ab3@17038>   MOVE.l $4(A2),D1
0002E5C4 <AmiBlitz3.ab3@17039>   BTST #$0,D1
0002E5C8 <AmiBlitz3.ab3@17040>    BNE.w illlaberr
0002E5CE <AmiBlitz3.ab3@17041>   MOVE.w procnum,D1
0002E5D2 <AmiBlitz3.ab3@17042>   CMP.w $10(A2),D1
0002E5D6 <AmiBlitz3.ab3@17043>    BNE.w referr
0002E5D8 <AmiBlitz3.ab3@17044> RTS
0002E5DA <AmiBlitz3.ab3@17048>   MOVE.w D0,-(A7)
0002E5E2 <AmiBlitz3.ab3@17049>   CMP.b #2,optistring
0002E5E6 <AmiBlitz3.ab3@17050>   BEQ 'l10
0002E5EC <AmiBlitz3.ab3@17053>   MOVE.w numtoa0,D1
0002E5F0 <AmiBlitz3.ab3@17054>    BSR.w writeword
0002E5F4 <AmiBlitz3.ab3@17055>    BSR.w addoff
0002E5FA <AmiBlitz3.ab3@17056>   MOVE.l litdata1,D1
0002E5FE <AmiBlitz3.ab3@17057>    BSR.w writelong
0002E604 <AmiBlitz3.ab3@17058>   MOVE.w pushlen,D1
0002E608 <AmiBlitz3.ab3@17059>    BSR.w writeword
0002E60C <AmiBlitz3.ab3@17060>   MOVE.w #$C600,D1
0002E610 <AmiBlitz3.ab3@17061>    BSR.w Atokejsr
0002E612 <AmiBlitz3.ab3@17062>   MOVE.w (A7)+,D0
0002E614 <AmiBlitz3.ab3@17063> RTS
0002E616 <AmiBlitz3.ab3@17066>   MOVEQ #0,d1
0002E61A <AmiBlitz3.ab3@17067>   BSR.w pokedata1b
0002E620 <AmiBlitz3.ab3@17068>   MOVE.l destpointer,a4
0002E624 <AmiBlitz3.ab3@17069>   MOVE.w #$203c,d1
0002E62A <AmiBlitz3.ab3@17070>   TST.w mode
0002E62E <AmiBlitz3.ab3@17071>   BNE 'lm10
0002E634 <AmiBlitz3.ab3@17072>    ADDQ.w #4,a2offset
0002E638 <AmiBlitz3.ab3@17073>   MOVE.w #$2f3c,d1
0002E63E <AmiBlitz3.ab3@17076>   TST.w mode
0002E642 <AmiBlitz3.ab3@17077>   BEQ 'lm3
0002E648 <AmiBlitz3.ab3@17078>   MOVE.w regnum,D0
0002E64A <AmiBlitz3.ab3@17079>   LSL.w #8,D0
0002E64C <AmiBlitz3.ab3@17080>   LSL.w #1,D0
0002E64E <AmiBlitz3.ab3@17081>   OR.w d0,d1
0002E652 <AmiBlitz3.ab3@17082>   BSR writeword
0002E656 <AmiBlitz3.ab3@17083>   BSR.w addoff
0002E65C <AmiBlitz3.ab3@17084>   MOVE.l litdata1,D1
0002E660 <AmiBlitz3.ab3@17085>   BSR.w writelong
0002E668 <AmiBlitz3.ab3@17086>   CMP.w #3,mode
0002E66C <AmiBlitz3.ab3@17087>   BEQ 'l30
0002E672 <AmiBlitz3.ab3@17088>    ADDQ.w #4,a2offset
0002E676 <AmiBlitz3.ab3@17089>   MOVE.w #$4878,D1
0002E67A <AmiBlitz3.ab3@17090>   BSR.w writeword
0002E67C <AmiBlitz3.ab3@17091>   MOVE.l d2,d1
0002E680 <AmiBlitz3.ab3@17092>   BSR writeword
0002E682 <AmiBlitz3.ab3@17095>   MOVE.w (A7)+,D0
0002E684 <AmiBlitz3.ab3@17096> RTS
0002E68A <AmiBlitz3.ab3@17099>   MOVE.l #$3f3c0007,d1
0002E68E <AmiBlitz3.ab3@17100>   BSR writelong
0002E694 <AmiBlitz3.ab3@17101>   MOVE.w regnum,D1
0002E696 <AmiBlitz3.ab3@17102>   LSL.w #8,D1
0002E698 <AmiBlitz3.ab3@17103>   LSL.w #1,D1
0002E69C <AmiBlitz3.ab3@17104>   ORI.w #$2f3c,d1
0002E6A0 <AmiBlitz3.ab3@17105>   BSR writeword
0002E6A6 <AmiBlitz3.ab3@17106>    ADDQ.w #4,a2offset
0002E6A8 <AmiBlitz3.ab3@17107>   MOVE.l d2,d1
0002E6AC <AmiBlitz3.ab3@17108>   BSR writelong
0002E6B0 <AmiBlitz3.ab3@17109>   MOVE.w #$2f3c,d1
0002E6B4 <AmiBlitz3.ab3@17110>   BSR writeword
0002E6B8 <AmiBlitz3.ab3@17111>   BSR.w addoff
0002E6BE <AmiBlitz3.ab3@17112>   MOVE.l litdata1,D1
0002E6C2 <AmiBlitz3.ab3@17113>   BSR.w writelong
0002E6C4 <AmiBlitz3.ab3@17114>   MOVE.w (A7)+,D0
0002E6C6 <AmiBlitz3.ab3@17115> RTS
0002E6CA <AmiBlitz3.ab3@17119>   BSR.w get1bytemain
0002E6CE <AmiBlitz3.ab3@17120>    BSR.w JL_0_AE22
0002E6D4 <AmiBlitz3.ab3@17121>   MOVE.w regnum,D1
0002E6D6 <AmiBlitz3.ab3@17122>   LSL.w #8,D1
0002E6D8 <AmiBlitz3.ab3@17123>   LSL.w #1,D1
0002E6DC <AmiBlitz3.ab3@17124>   ORI.w #$203C,D1
0002E6E0 <AmiBlitz3.ab3@17125>    BSR.w writeword
0002E6E4 <AmiBlitz3.ab3@17126>    BSR.w addoff
0002E6E8 <AmiBlitz3.ab3@17127>   MOVE.l $8(A2),D1
0002E6EC <AmiBlitz3.ab3@17128>    BSR.w writelong
0002E6EE <AmiBlitz3.ab3@17129>   MOVEQ.l #$03,D2
0002E6F4 <AmiBlitz3.ab3@17130>   CLR.b peekaddrsize
0002E6F8 <AmiBlitz3.ab3@17131> BRA.w reget
0002E6FA <AmiBlitz3.ab3@17134>   MOVEQ.l #$00,D3
0002E6FE <AmiBlitz3.ab3@17137>   BSR.w get1bytemain
0002E702 <AmiBlitz3.ab3@17138>    BEQ.w syntaxerr
0002E706 <AmiBlitz3.ab3@17139>   CMP.w #$22,D0
0002E70A <AmiBlitz3.ab3@17140>    BEQ.w JL_0_AF1A
0002E70C <AmiBlitz3.ab3@17141>   LSL.l #8,D3
0002E70E <AmiBlitz3.ab3@17142>   MOVE.b D0,D3
0002E712 <AmiBlitz3.ab3@17143> BRA.w JL_0_AF02
0002E716 <AmiBlitz3.ab3@17146>   BSR.w get1bytemain
0002E71A <AmiBlitz3.ab3@17147> BRA.w JL_0_B46E
0002E71C <AmiBlitz3.ab3@17150>   MOVE.w D2,-(A7)                                          ;basicvarsforasm
0002E720 <AmiBlitz3.ab3@17151>    BSR.w makename2
0002E724 <AmiBlitz3.ab3@17152>    BSR.w findlabel2
0002E728 <AmiBlitz3.ab3@17153>    BEQ.w 'l10
0002E72E <AmiBlitz3.ab3@17154>    LEA ptr_parameterstore,a0
0002E734 <AmiBlitz3.ab3@17155>    CMP.b #"@",-1(a0,d2.w)
0002E738 <AmiBlitz3.ab3@17156>    BNE cnferr
0002E73C <AmiBlitz3.ab3@17157>    CLR.b -1(a0,d2.w)
0002E73E <AmiBlitz3.ab3@17158>    SUBQ.l #1,d2
0002E744 <AmiBlitz3.ab3@17159>    LEA varbase,a2
0002E748 <AmiBlitz3.ab3@17160>    BSR findvariable
0002E74C <AmiBlitz3.ab3@17161>    BNE cnferr
0002E750 <AmiBlitz3.ab3@17162>    CMP.b #"\",d0
0002E754 <AmiBlitz3.ab3@17163>    BNE 'l6
0002E75A <AmiBlitz3.ab3@17164>    ADDQ #1,lastsourcepos
0002E75E <AmiBlitz3.ab3@17165>    MOVE.l $a(a2),a2
0002E760 <AmiBlitz3.ab3@17166>    ADDQ.l #4,a2
0002E764 <AmiBlitz3.ab3@17167>    BSR.w makename2
0002E768 <AmiBlitz3.ab3@17168>    BSR findvariable2
0002E76C <AmiBlitz3.ab3@17169>    BNE cnferr
0002E770 <AmiBlitz3.ab3@17170> BRA.s 'l6                                                  ;???
0002E774 <AmiBlitz3.ab3@17173>    MOVE.w $4(a2),d3
0002E776 <AmiBlitz3.ab3@17174>    EXT.l d3
0002E77A <AmiBlitz3.ab3@17175> BRA JL_0_AF46
0002E77E <AmiBlitz3.ab3@17178>   MOVE.l $8(A2),D3
0002E786 <AmiBlitz3.ab3@17179>   CMPI.l #$1,$4(A2)
0002E78A <AmiBlitz3.ab3@17180>    BEQ.w JL_0_AF46
0002E790 <AmiBlitz3.ab3@17181>   NOT.w asmtype
0002E792 <AmiBlitz3.ab3@17184>   MOVE.w (A7)+,D2
0002E796 <AmiBlitz3.ab3@17185> BRA.w JL_0_B46E
0002E798 <AmiBlitz3.ab3@17189>   MOVE.w D2,-(A7)
0002E79C <AmiBlitz3.ab3@17190>    BSR.w getparameter
0002E7A0 <AmiBlitz3.ab3@17191>   CMP.w #"{",D0                                          ;test if var = function{}
0002E7A4 <AmiBlitz3.ab3@17192>    BEQ.w isfunction
0002E7A8 <AmiBlitz3.ab3@17193>    BSR.w JL_0_8E3C
0002E7AC <AmiBlitz3.ab3@17195>    BSR.w calcvar                                         ;getvaroffset+type
0002E7B0 <AmiBlitz3.ab3@17196>    BSR.w JL_0_B150
0002E7B6 <AmiBlitz3.ab3@17197>    MOVE.l a2,rightsidetype
0002E7C0 <AmiBlitz3.ab3@17198>    MOVE.w flagmask, rightsideflagmask
0002E7C6 <AmiBlitz3.ab3@17209>    TST.b typecheck
0002E7CA <AmiBlitz3.ab3@17210>    BEQ JL_0_AF66
0002E7D4 <AmiBlitz3.ab3@17211>    CMP.l #$da01,lasttoken                                  ;poke
0002E7D8 <AmiBlitz3.ab3@17212>    BEQ 'l1
0002E7E2 <AmiBlitz3.ab3@17213>    CMP.l #$da02,lasttoken                                  ;peek
0002E7E6 <AmiBlitz3.ab3@17214>    BNE 'l2
0002E7EE <AmiBlitz3.ab3@17217>    CMP.w #1,parnum                                         ; is not call when & is used in parameter
0002E7F2 <AmiBlitz3.ab3@17218>    BNE JL_0_AF66
0002E7F8 <AmiBlitz3.ab3@17219>    MOVE.b d2,peekaddrsize
0002E7FC <AmiBlitz3.ab3@17220>    BRA JL_0_AF66
0002E802 <AmiBlitz3.ab3@17223>   CLR.b peekaddrsize
0002E806 <AmiBlitz3.ab3@17226>   CMP.w #$1,D2
0002E80A <AmiBlitz3.ab3@17227>    BNE.w JL_0_AF7C
0002E810 <AmiBlitz3.ab3@17228>   MOVE.w regnum,D1
0002E814 <AmiBlitz3.ab3@17229>   ORI.w #$4880,D1
0002E818 <AmiBlitz3.ab3@17230>    BSR.w writeword
0002E81A <AmiBlitz3.ab3@17233>   MOVE.w (A7)+,D3
0002E81E <AmiBlitz3.ab3@17234>    BEQ.w JL_0_AF9E
0002E824 <AmiBlitz3.ab3@17235>    MOVE.l lastinstructionaddr,a0
0002E828 <AmiBlitz3.ab3@17236>   CMP.w #$3,D3
0002E82C <AmiBlitz3.ab3@17237>    BNE.w JL_0_AF92
0002E830 <AmiBlitz3.ab3@17238>   CMP.w #$4,D2
0002E834 <AmiBlitz3.ab3@17239>    BEQ.w JL_0_AF98
0002E836 <AmiBlitz3.ab3@17242>   CMP.w D2,D3
0002E83A <AmiBlitz3.ab3@17243>    BLS.w JL_0_AF9E
0002E83C <AmiBlitz3.ab3@17246>   EXG.l D2,D3
0002E83E <AmiBlitz3.ab3@17247>   MOVE.l a0,-(a7)
0002E844 <AmiBlitz3.ab3@17248>   TST.b typecheck
0002E848 <AmiBlitz3.ab3@17249>   BEQ 'ok
0002E84E <AmiBlitz3.ab3@17250>   TST.b notypecheck
0002E852 <AmiBlitz3.ab3@17251>   BNE 'ok
0002E858 <AmiBlitz3.ab3@17252>   MOVE.l leftsidetype,a0
0002E862 <AmiBlitz3.ab3@17253>   CMP.l #0,leftsidetype
0002E866 <AmiBlitz3.ab3@17254>   BEQ 'ok
0002E86E <AmiBlitz3.ab3@17255>   CMP.w #1,leftsideflagmask
0002E872 <AmiBlitz3.ab3@17256>   BEQ 'isptr
0002E87A <AmiBlitz3.ab3@17257>   CMP.l #$100,4(a0)
0002E87E <AmiBlitz3.ab3@17258>   BLE 'ok
0002E882 <AmiBlitz3.ab3@17260>   CMP.b #3,d3
0002E886 <AmiBlitz3.ab3@17261>   BEQ 'ok
0002E88A <AmiBlitz3.ab3@17262>   CMP.b #7,d3
0002E88E <AmiBlitz3.ab3@17263>   BEQ 'ok
0002E894 <AmiBlitz3.ab3@17264>   JMP   error_convert_types      ;for all syntax only long and string allowed to assign to a type
0002E896 <AmiBlitz3.ab3@17266>   MOVE.l (a7)+,a0
0002E89A <AmiBlitz3.ab3@17267>   BSR.w writeconvertcode         ;called from var assign
0002E89E <AmiBlitz3.ab3@17270> BRA.w reget
0002E8A0 <AmiBlitz3.ab3@17273>   MOVEQ.l #$00,D3
0002E8A6 <AmiBlitz3.ab3@17274>   MOVE.w regnum,D1
0002E8AA <AmiBlitz3.ab3@17275>    BEQ.w JL_0_AFC8
0002E8AC <AmiBlitz3.ab3@17276>   SUBQ.w #1,D1
0002E8AE <AmiBlitz3.ab3@17279>      LSR.l #1,D3
0002E8B2 <AmiBlitz3.ab3@17280>      BSET #$F,D3
0002E8B6 <AmiBlitz3.ab3@17281>   DBF D1,JL_0_AFB0b
0002E8BC <AmiBlitz3.ab3@17283>    TST.b fpu
0002E8C0 <AmiBlitz3.ab3@17284>    BEQ 'l1
0002E8C6 <AmiBlitz3.ab3@17285>    ADDQ.l #2,stacktrack                                    ;intern command
0002E8C8 <AmiBlitz3.ab3@17286>     MOVE.l a0,-(a7)
0002E8CE <AmiBlitz3.ab3@17287>     MOVE.l stacktrack,d1
0002E8D4 <AmiBlitz3.ab3@17288>     LEA fpustackbase,a0
0002E8D8 <AmiBlitz3.ab3@17289>     CLR.w 0(a0,d1)
0002E8DE <AmiBlitz3.ab3@17290>     CLR.w regmask
0002E8E0 <AmiBlitz3.ab3@17291>     MOVE.l (a7)+,a0
0002E8E4 <AmiBlitz3.ab3@17294>   MOVE.w #$48E7,D1
0002E8E8 <AmiBlitz3.ab3@17295>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E8EA <AmiBlitz3.ab3@17296>   MOVE.w D3,D1
0002E8EE <AmiBlitz3.ab3@17297> BRA.w writeword
0002E8F0 <AmiBlitz3.ab3@17302>   MOVEQ.l #$00,D3
0002E8F6 <AmiBlitz3.ab3@17303>   MOVE.w regnum,D1
0002E8FA <AmiBlitz3.ab3@17304>    BEQ.w JL_0_AFC8
0002E8FC <AmiBlitz3.ab3@17305>   SUBQ.w #1,D1
0002E8FE <AmiBlitz3.ab3@17308>     LSR.l #1,D3
0002E902 <AmiBlitz3.ab3@17309>     BSET #$F,D3
0002E906 <AmiBlitz3.ab3@17310>   DBF D1,JL_0_AFB0
0002E90C <AmiBlitz3.ab3@17312>    TST.b fpu
0002E910 <AmiBlitz3.ab3@17313>    BEQ 'l1
0002E916 <AmiBlitz3.ab3@17314>    ADDQ.l #2,stacktrack                                    ;intern command
0002E918 <AmiBlitz3.ab3@17315>     MOVE.l a0,-(a7)
0002E91E <AmiBlitz3.ab3@17316>     MOVE.l stacktrack,d1
0002E924 <AmiBlitz3.ab3@17317>     LEA fpustackbase,a0
0002E928 <AmiBlitz3.ab3@17318>     CLR.w 0(a0,d1)
0002E92C <AmiBlitz3.ab3@17319>    CMP.b #5,(a3)                                           ;result float ?
0002E930 <AmiBlitz3.ab3@17320>     BNE 'nofpu
0002E93A <AmiBlitz3.ab3@17322>     MOVE.w regnum,regnumfunc
0002E940 <AmiBlitz3.ab3@17325>   CLR.w regmask
0002E942 <AmiBlitz3.ab3@17326>     MOVE.l (a7)+,a0
0002E946 <AmiBlitz3.ab3@17329>   MOVE.w #$48E7,D1
0002E94A <AmiBlitz3.ab3@17330>    BSR.w writeword                                         ;write movem.l d0/d1,-(a7)
0002E94C <AmiBlitz3.ab3@17331>   MOVE.w D3,D1
0002E950 <AmiBlitz3.ab3@17332> BRA.w writeword
0002E952 <AmiBlitz3.ab3@17335> RTS
0002E954 <AmiBlitz3.ab3@17339>   MOVE.l D1,-(A7)
0002E958 <AmiBlitz3.ab3@17340>   MOVE.w #$4EB9,D1
0002E95C <AmiBlitz3.ab3@17341>    BSR.w writeword
0002E960 <AmiBlitz3.ab3@17342>    BSR.w addoff
0002E962 <AmiBlitz3.ab3@17343>   MOVE.l (A7)+,D1
0002E966 <AmiBlitz3.ab3@17344> BRA.w writelong
0002E96A <AmiBlitz3.ab3@17348>    BSR.w findproc                                          ;write function call
0002E96E <AmiBlitz3.ab3@17349>    BEQ 'l1
0002E974 <AmiBlitz3.ab3@17350>    TST.l unusedfunc
0002E978 <AmiBlitz3.ab3@17351>    BEQ noprocerr
0002E97E <AmiBlitz3.ab3@17353>    JSR gotoendsource
0002E986 <AmiBlitz3.ab3@17356>   MOVE.l funcstruct_returntype(a2),rightsidetype
0002E98C <AmiBlitz3.ab3@17357>   TST.l typetocast
0002E990 <AmiBlitz3.ab3@17358>   BEQ 'nocast
0002E99A <AmiBlitz3.ab3@17359>   MOVE.l typetocast,rightsidetype
0002E9A0 <AmiBlitz3.ab3@17360>   CLR.l typetocast
0002E9A2 <AmiBlitz3.ab3@17361>   MOVE.l a1,-(a7)
0002E9A8 <AmiBlitz3.ab3@17362>   MOVE.l rightsidetype,a1
0002E9AE <AmiBlitz3.ab3@17363>   CMP.l leftsidetype,a1
0002E9B2 <AmiBlitz3.ab3@17364>   BEQ 'ok
0002E9B8 <AmiBlitz3.ab3@17365>   JMP errorconvertreturntype2
0002E9BA <AmiBlitz3.ab3@17366> 'ok  MOVE.l (a7)+,a1
0002E9BC <AmiBlitz3.ab3@17368>   MOVEQ.l #$00,D1
0002E9C0 <AmiBlitz3.ab3@17369>   MOVE.b $5(A2),D1
0002E9C6 <AmiBlitz3.ab3@17370>   MOVE.b d1,retmode
0002E9CA <AmiBlitz3.ab3@17371>    BMI.w illprocerr
0002E9D0 <AmiBlitz3.ab3@17372>    MOVE.b #1,isfunc(a2)
0002E9D2 <AmiBlitz3.ab3@17373>   MOVE.w D1,-(A7)
0002E9D4 <AmiBlitz3.ab3@17374>   MOVEQ.l #$00,D1
0002E9D8 <AmiBlitz3.ab3@17375>   MOVE.b $4(A2),D1
0002E9DA <AmiBlitz3.ab3@17376>   LSR.w #4,D1
0002E9DE <AmiBlitz3.ab3@17377>    BEQ.w JL_0_B006
0002E9E0 <AmiBlitz3.ab3@17378>   LSL.w #2,D1
0002E9E6 <AmiBlitz3.ab3@17379>   SUB.w D1,a2offset
0002E9EA <AmiBlitz3.ab3@17382>   CMPI.w #$7,(A7)
0002E9EE <AmiBlitz3.ab3@17383>    BNE.b JL_0_B014
0002E9F0 <AmiBlitz3.ab3@17384>   MOVE.l A2,-(A7)
0002E9F4 <AmiBlitz3.ab3@17385>    BSR.w makesbase
0002E9F6 <AmiBlitz3.ab3@17386>   MOVEA.l (A7)+,A2
0002E9FC <AmiBlitz3.ab3@17389>   MOVE.w sbasegot,-(A7)
0002EA00 <AmiBlitz3.ab3@17390>    BEQ.b JL_0_B020
0002EA04 <AmiBlitz3.ab3@17391>    BSR.w dopusha3
0002EA08 <AmiBlitz3.ab3@17394>   BSR.w JL_0_AFA2func
0002EA0A <AmiBlitz3.ab3@17395>   MOVE.w D3,-(A7)
0002EA0E <AmiBlitz3.ab3@17396>   MOVE.l $E(A2),D1
0002EA12 <AmiBlitz3.ab3@17397>   TST.b $20(a2)                                            ;increase if morepar
0002EA16 <AmiBlitz3.ab3@17398>   BNE 'no0par
0002EA18 <AmiBlitz3.ab3@17399>   MOVE.l a5,a4
0002EA1C <AmiBlitz3.ab3@17402>   CMP.b #$20,(a4)+
0002EA20 <AmiBlitz3.ab3@17403>   BEQ 'l1
0002EA26 <AmiBlitz3.ab3@17404>   CMP.b #"}",-1(a4)
0002EA2A <AmiBlitz3.ab3@17405>   BNE  'no0par
0002EA2C <AmiBlitz3.ab3@17406>   MOVEQ #0,d0
0002EA30 <AmiBlitz3.ab3@17409>   LEA $16(A2),A1
0002EA32 <AmiBlitz3.ab3@17412>   MOVE.l d1,-(a7)
0002EA34 <AmiBlitz3.ab3@17413>   MOVE.b (a1),d2
0002EA36 <AmiBlitz3.ab3@17414>   MOVE.l d0,d1
0002EA3A <AmiBlitz3.ab3@17415>   CMP.w #4,d2
0002EA3E <AmiBlitz3.ab3@17416>   BNE 'l1b
0002EA44 <AmiBlitz3.ab3@17417>   ADD.l #$203c,d1
0002EA48 <AmiBlitz3.ab3@17418>   BSR writeword
0002EA4E <AmiBlitz3.ab3@17419>   MOVE.l #$ffff0000,d1
0002EA52 <AmiBlitz3.ab3@17420>   BSR writelong
0002EA56 <AmiBlitz3.ab3@17421> BRA 'l2b
0002EA5C <AmiBlitz3.ab3@17424>    TST.b fpu
0002EA60 <AmiBlitz3.ab3@17425>    BNE 'l1c
0002EA64 <AmiBlitz3.ab3@17426>    CMP.w #5,d2
0002EA68 <AmiBlitz3.ab3@17427>    BNE 'l1c
0002EA6E <AmiBlitz3.ab3@17428>    ADD.l #$203c,d1
0002EA72 <AmiBlitz3.ab3@17429>    BSR writeword
0002EA78 <AmiBlitz3.ab3@17430>    MOVE.l #$800000c1,d1
0002EA7C <AmiBlitz3.ab3@17431>    BSR writelong
0002EA80 <AmiBlitz3.ab3@17432> BRA 'l2b
0002EA86 <AmiBlitz3.ab3@17435>   ADD.l #$70ff,d1
0002EA8A <AmiBlitz3.ab3@17436>   BSR writeword
0002EA8E <AmiBlitz3.ab3@17437>   CMP.w #7,d2
0002EA92 <AmiBlitz3.ab3@17438>   BNE 'l1d
0002EA98 <AmiBlitz3.ab3@17439>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EA9C <AmiBlitz3.ab3@17440>   BSR writelong
0002EA9E <AmiBlitz3.ab3@17441>   MOVEQ #0,d1
0002EAA2 <AmiBlitz3.ab3@17442>   BSR writeword
0002EAA8 <AmiBlitz3.ab3@17443>   MOVE.l #$2f3c0000,d1      ; write code move.l #0,-(a7)
0002EAAC <AmiBlitz3.ab3@17444>   BSR writelong
0002EAAE <AmiBlitz3.ab3@17445>   MOVEQ #0,d1
0002EAB2 <AmiBlitz3.ab3@17446>   BSR writeword
0002EAB8 <AmiBlitz3.ab3@17448> 'l1d  MOVE.l #$f23c5000,d1
0002EABA <AmiBlitz3.ab3@17449>   MOVE.l d0,d2
0002EABC <AmiBlitz3.ab3@17450>   ASR.l #2,d2
0002EABE <AmiBlitz3.ab3@17451>   ADD.l d2,d1
0002EAC2 <AmiBlitz3.ab3@17452>   BSR writelong
0002EAC6 <AmiBlitz3.ab3@17453>   MOVE.w #$ffff,d1
0002EACA <AmiBlitz3.ab3@17454>   BSR writeword
0002EACC <AmiBlitz3.ab3@17458>   MOVE.l (a7)+,d1
0002EACE <AmiBlitz3.ab3@17459>      ADDQ.l #1,a1
0002EAD4 <AmiBlitz3.ab3@17460>      ADD.l #$0200,d0
0002EADA <AmiBlitz3.ab3@17461>      CMP.l #$0e00,d0
0002EADE <AmiBlitz3.ab3@17462>      BEQ syntaxerr
0002EAE0 <AmiBlitz3.ab3@17463>      TST.b (a1)
0002EAE4 <AmiBlitz3.ab3@17464>      BNE 'again
0002EAE8 <AmiBlitz3.ab3@17465> BRA 'p1
0002EAEC <AmiBlitz3.ab3@17468>   TST.b $4(A2)
0002EAF0 <AmiBlitz3.ab3@17469>    BNE.w JL_0_B03E
0002EAF4 <AmiBlitz3.ab3@17472>   BSR.w JL_0_AFCA
0002EAF8 <AmiBlitz3.ab3@17473>    BSR.w get1bytemain
0002EAFC <AmiBlitz3.ab3@17474> BRA.w JL_0_B06C
0002EB02 <AmiBlitz3.ab3@17478>   MOVE.w parnum,-(a7)                                      ;7.2014 need store so function calls in parameter >6 can work
0002EB08 <AmiBlitz3.ab3@17479>   MOVE.w regnum,-(A7)
0002EB12 <AmiBlitz3.ab3@17480>   MOVE.w regnum,regnumfunc
0002EB14 <AmiBlitz3.ab3@17483>   MOVE.l D1,-(A7)                                          ;write functioncall with pars
0002EB1C <AmiBlitz3.ab3@17484>   MOVE.b #1,funccall
0002EB1E <AmiBlitz3.ab3@17485>   MOVEQ.l #$00,D0
0002EB22 <AmiBlitz3.ab3@17486>   MOVE.b $4(A2),D0
0002EB2C <AmiBlitz3.ab3@17487>   MOVE.w a2offset,a2offset2
0002EB34 <AmiBlitz3.ab3@17488>   MOVE.b 5(a2),retmode
0002EB3A <AmiBlitz3.ab3@17489>   MOVE.l a2,currentfunccall
0002EB3E <AmiBlitz3.ab3@17490>   LEA $16(A2),A2
0002EB44 <AmiBlitz3.ab3@17491>   CLR.w regnum
0002EB4A <AmiBlitz3.ab3@17492>   CLR.w regmask
0002EB50 <AmiBlitz3.ab3@17493>   MOVE.b isconstantvalue,-(a7)
0002EB56 <AmiBlitz3.ab3@17494>   MOVE.b funcparloop,-(a7)
0002EB5E <AmiBlitz3.ab3@17495>   MOVE.b #1,funcparloop
0002EB64 <AmiBlitz3.ab3@17496>   MOVE.l rightsidetype,-(a7)
0002EB6A <AmiBlitz3.ab3@17497>   MOVE.l leftsidetype,-(a7)                               ;store values To stack so it can work recursive
0002EB70 <AmiBlitz3.ab3@17498>   MOVE.b blitzparloop,-(a7)
0002EB76 <AmiBlitz3.ab3@17499>   CLR.b blitzparloop
0002EB7C <AmiBlitz3.ab3@17500>   JSR fetchpees2
0002EB82 <AmiBlitz3.ab3@17501>   MOVE.b (a7)+,blitzparloop
0002EB88 <AmiBlitz3.ab3@17502>   MOVE.l (a7)+,leftsidetype
0002EB8E <AmiBlitz3.ab3@17503>   MOVE.l (a7)+,rightsidetype
0002EB94 <AmiBlitz3.ab3@17504>   MOVE.b (a7)+,funcparloop
0002EB9A <AmiBlitz3.ab3@17505>   MOVE.b (a7)+,isconstantvalue
0002EBA0 <AmiBlitz3.ab3@17506>   JSR chkstak
0002EBA2 <AmiBlitz3.ab3@17507>   MOVE.l (A7)+,D1
0002EBA6 <AmiBlitz3.ab3@17523>    BTST #0,d1
0002EBAA <AmiBlitz3.ab3@17524>    BNE intern1
0002EBAE <AmiBlitz3.ab3@17525>    BSR.w JL_0_AFCA
0002EBB4 <AmiBlitz3.ab3@17547>   MOVE.w (A7)+,regnum
0002EBBA <AmiBlitz3.ab3@17548>   MOVE.w (a7)+,parnum                                     ;07.2014
0002EBBE <AmiBlitz3.ab3@17550>   CMP.w #"}",D0
0002EBC2 <AmiBlitz3.ab3@17551>    BNE.w errorbracketmiss2
0002EBC4 <AmiBlitz3.ab3@17552>    MOVEQ #0,d1                                            ; end of function call pars
0002EBCA <AmiBlitz3.ab3@17553>   MOVE.w regnum,D1
0002EBCE <AmiBlitz3.ab3@17554>    BEQ.w JL_0_B08A
0002EBD4 <AmiBlitz3.ab3@17555>    TST.b fpu
0002EBD8 <AmiBlitz3.ab3@17556>    BEQ 'old
0002EBE0 <AmiBlitz3.ab3@17557>    CMP.b #5,retmode
0002EBE4 <AmiBlitz3.ab3@17558>    BNE 'old
0002EBE6 <AmiBlitz3.ab3@17559>    ASL.l #7,d1
0002EBEC <AmiBlitz3.ab3@17560>    OR.l #$f2000000,d1
0002EBF0 <AmiBlitz3.ab3@17561>    BSR writelong
0002EBF4 <AmiBlitz3.ab3@17562> BRA JL_0_B08A
0002EBF6 <AmiBlitz3.ab3@17564>  'old  LSL.w #8,D1
0002EBF8 <AmiBlitz3.ab3@17565>   LSL.w #1,D1
0002EBFC <AmiBlitz3.ab3@17566>   ORI.w #$2000,D1
0002EC00 <AmiBlitz3.ab3@17567>    BSR.w writeword
0002EC02 <AmiBlitz3.ab3@17570>    MOVE.w (A7)+,D3
0002EC06 <AmiBlitz3.ab3@17571>    BEQ.w JL_0_B0A8
0002EC0C <AmiBlitz3.ab3@17572>    TST.b fpu
0002EC10 <AmiBlitz3.ab3@17573>    BEQ 'old
0002EC12 <AmiBlitz3.ab3@17574>    MOVE.l d0,-(a7)
0002EC16 <AmiBlitz3.ab3@17575>    MOVE.w #8,d0
0002EC18 <AmiBlitz3.ab3@17576>    MOVE.l a0,-(a7)
0002EC1E <AmiBlitz3.ab3@17577>    MOVE.l stacktrack,d1
0002EC24 <AmiBlitz3.ab3@17578>    LEA fpustackbase,a0
0002EC2C <AmiBlitz3.ab3@17579>    MOVE.w 0(a0,d1),regmask
0002EC2E <AmiBlitz3.ab3@17580>    MOVE.l (a7)+,a0
0002EC32 <AmiBlitz3.ab3@17583>   BEQ 'ready
0002EC38 <AmiBlitz3.ab3@17584>    BTST d0,regmask
0002EC3C <AmiBlitz3.ab3@17585>    BEQ 'noa7
0002EC3E <AmiBlitz3.ab3@17586>    MOVEQ #0,d1
0002EC40 <AmiBlitz3.ab3@17587>    MOVE.w d0,d1
0002EC42 <AmiBlitz3.ab3@17588>    SUBQ.w #1,d1
0002EC44 <AmiBlitz3.ab3@17589>    ASL #7,d1
0002EC4A <AmiBlitz3.ab3@17591>    OR.l #$f21f5400,d1                                      ;fmove.d (a7)+
0002EC4E <AmiBlitz3.ab3@17592>    BSR writelong
0002EC54 <AmiBlitz3.ab3@17593>    SUBQ.l #2,stacktrack
0002EC56 <AmiBlitz3.ab3@17596>    SUBQ.w #1,d0
0002EC5A <AmiBlitz3.ab3@17597>    BNE 'loop
0002EC60 <AmiBlitz3.ab3@17600>   SUBQ.l #2,stacktrack                                     ;integer sub
0002EC62 <AmiBlitz3.ab3@17601>   MOVE.l (a7)+,d0
0002EC66 <AmiBlitz3.ab3@17604>   MOVE.w #$4CDF,D1
0002EC6A <AmiBlitz3.ab3@17605>    BSR.w writeword
0002EC6C <AmiBlitz3.ab3@17606>   MOVEQ.l #$00,D1
0002EC6E <AmiBlitz3.ab3@17607>   MOVEQ.l #$0F,D4
0002EC70 <AmiBlitz3.ab3@17610>     LSL.w #1,D3
0002EC72 <AmiBlitz3.ab3@17611>     ROXR.w #1,D1
0002EC76 <AmiBlitz3.ab3@17612>   DBF D4,JL_0_B09C                                         ;movem.l (a7)+,dx
0002EC7A <AmiBlitz3.ab3@17614>     BSR.w writeword
0002EC80 <AmiBlitz3.ab3@17615>    CLR.w regnumfunc
0002EC82 <AmiBlitz3.ab3@17618>   MOVE.w (A7)+,D1
0002EC86 <AmiBlitz3.ab3@17619>    BEQ.b JL_0_B0D2
0002EC8A <AmiBlitz3.ab3@17620>   CMPI.w #$7,(A7)
0002EC8E <AmiBlitz3.ab3@17621>    BEQ.b JL_0_B0C4
0002EC94 <AmiBlitz3.ab3@17622>   LEA geta3,A0
0002EC9A <AmiBlitz3.ab3@17623>   LEA numtoa0,A1
0002EC9E <AmiBlitz3.ab3@17624>    BSR.w pokecode
0002ECA2 <AmiBlitz3.ab3@17625> BRA.b JL_0_B0CE
0002ECA8 <AmiBlitz3.ab3@17628>   MOVE.w deca3,D1
0002ECAC <AmiBlitz3.ab3@17629>    BSR.w writeword
0002ECB0 <AmiBlitz3.ab3@17632>   BSR.w dopulla3                                           ;fix up string base
0002ECB2 <AmiBlitz3.ab3@17635>   MOVE.w (A7)+,D2                                          ;what it returns!
0002ECB6 <AmiBlitz3.ab3@17636>   CMP.w #$7,D2
0002ECBA <AmiBlitz3.ab3@17637>    BNE.w JL_0_B0EC
0002ECC0 <AmiBlitz3.ab3@17638>   MOVE.w putstlen,D1
0002ECC6 <AmiBlitz3.ab3@17639>   OR.w regnum,D1
0002ECCA <AmiBlitz3.ab3@17640>    BSR.w writeword
0002ECCE <AmiBlitz3.ab3@17643>   BSR.w get1bytemain
0002ECD2 <AmiBlitz3.ab3@17644> BRA.w JL_0_AF66
0002ECD4 <AmiBlitz3.ab3@17648> deca3:   Dc.b $53,$4B                                      ;SUBQ.W  #1,A3
0002ECDC <AmiBlitz3.ab3@17653>   CMP.b #2,optistring
0002ECE0 <AmiBlitz3.ab3@17654>   BEQ fs2
0002ECE4 <AmiBlitz3.ab3@17655>   BSR.w makesbase                                          ;writestringvariable
0002ECE8 <AmiBlitz3.ab3@17656>   BTST #$F,D2
0002ECEC <AmiBlitz3.ab3@17657>    BNE.w JL_0_B112
0002ECF2 <AmiBlitz3.ab3@17658>   MOVE.w D3,leaa5d3a2+2
0002ECF8 <AmiBlitz3.ab3@17659>   MOVE.l leaa5d3a2,D1
0002ECFC <AmiBlitz3.ab3@17660>    BSR.w pokela5s
0002ED02 <AmiBlitz3.ab3@17663>   MOVE.w regnum,D1
0002ED04 <AmiBlitz3.ab3@17664>   LSL.w #8,D1
0002ED06 <AmiBlitz3.ab3@17665>   LSL.w #1,D1
0002ED0A <AmiBlitz3.ab3@17666>   ORI.w #$7000,D1
0002ED10 <AmiBlitz3.ab3@17667>   LEA stvarget2,A0
0002ED12 <AmiBlitz3.ab3@17668>   MOVE.w D1,(A0)
0002ED18 <AmiBlitz3.ab3@17669>   MOVE.w regnum,D1
0002ED1E <AmiBlitz3.ab3@17670>   ANDI.w #$FFF8,$2(A0)
0002ED22 <AmiBlitz3.ab3@17671>   OR.w D1,$2(A0)
0002ED28 <AmiBlitz3.ab3@17672>   LEA stvarget2f,A1
0002ED2C <AmiBlitz3.ab3@17673>    BSR.w pokecode
0002ED30 <AmiBlitz3.ab3@17674>   MOVE.w #$C600,D1
0002ED34 <AmiBlitz3.ab3@17675>    BSR.w Atokejsr
0002ED36 <AmiBlitz3.ab3@17676>   MOVEQ.l #$07,D2
0002ED3A <AmiBlitz3.ab3@17677> BRA.w reget
0002ED40 <AmiBlitz3.ab3@17680>      TST.w stackpar
0002ED44 <AmiBlitz3.ab3@17681>      BMI 'l10
0002ED4A <AmiBlitz3.ab3@17682>      MOVE.l #$3f3c0007,d1
0002ED50 <AmiBlitz3.ab3@17683>      ADDQ.w #2,a2offset
0002ED54 <AmiBlitz3.ab3@17684>      BSR writelong
0002ED58 <AmiBlitz3.ab3@17687>   MOVE.w #$4878,d1
0002ED5E <AmiBlitz3.ab3@17688>      CLR.w stackpar
0002ED62 <AmiBlitz3.ab3@17689>      BSR writeword
0002ED66 <AmiBlitz3.ab3@17690>      MOVE.w #$0,d1
0002ED6A <AmiBlitz3.ab3@17691>      BSR writeword
0002ED6E <AmiBlitz3.ab3@17692>      MOVE.w #$246d,d1
0002ED72 <AmiBlitz3.ab3@17693>      BSR writeword
0002ED74 <AmiBlitz3.ab3@17694>      MOVE.w d3,d1
0002ED78 <AmiBlitz3.ab3@17695>      BSR writeword
0002ED7E <AmiBlitz3.ab3@17696>      MOVE.l #$4a926704,d1
0002ED82 <AmiBlitz3.ab3@17697>      BSR writelong
0002ED88 <AmiBlitz3.ab3@17698>      MOVE.l #$2eaafffc,d1
0002ED8C <AmiBlitz3.ab3@17699>      BSR writelong
0002ED90 <AmiBlitz3.ab3@17700>      MOVE.w #$2f0a,d1
0002ED96 <AmiBlitz3.ab3@17701>      ADDQ.w #8,a2offset
0002ED9A <AmiBlitz3.ab3@17702>      BSR writeword
0002ED9E <AmiBlitz3.ab3@17703> BRA.w reget
0002EDA2 <AmiBlitz3.ab3@17706>   CMP.b #$7,D2                                             ;load basic var
0002EDA6 <AmiBlitz3.ab3@17707>    BEQ.w JL_0_B0F6
0002EDAC <AmiBlitz3.ab3@17709>    TST.b iee
0002EDB0 <AmiBlitz3.ab3@17710>    BEQ 'noiee
0002EDB4 <AmiBlitz3.ab3@17711>    CMP.b #5,d2
0002EDB8 <AmiBlitz3.ab3@17712>    BNE 'noiee
0002EDBA <AmiBlitz3.ab3@17713>    MOVE.l d0,-(a7)                                         ;fpu load var
0002EDBE <AmiBlitz3.ab3@17714>    BTST #15,d2
0002EDC2 <AmiBlitz3.ab3@17715>    BEQ 'var
0002EDC8 <AmiBlitz3.ab3@17716>    CMP.l #$7fff,d3
0002EDCC <AmiBlitz3.ab3@17717>    BGT 'longoffset
0002EDD2 <AmiBlitz3.ab3@17718>    MOVE.l #$f22a4400,d1                                    ;newtype     >32kb
0002EDD4 <AmiBlitz3.ab3@17719>    TST.w d3                                                ;offset =0
0002EDD8 <AmiBlitz3.ab3@17720>    BNE 'offset
0002EDDE <AmiBlitz3.ab3@17723>   MOVE.l #$f2124400,d1
0002EDE0 <AmiBlitz3.ab3@17724>    MOVEQ #0,d3
0002EDE4 <AmiBlitz3.ab3@17725> BRA 'glob
0002EDEA <AmiBlitz3.ab3@17728>   SUBQ.l #4,destpointer
0002EDEE <AmiBlitz3.ab3@17729> BRA 'glob
0002EDF4 <AmiBlitz3.ab3@17732>   TST.b fast
0002EDF8 <AmiBlitz3.ab3@17733>    BEQ 'nofastload
0002EDFE <AmiBlitz3.ab3@17734>    TST.w regnum
0002EE02 <AmiBlitz3.ab3@17735>    BNE 'nofastload
0002EE08 <AmiBlitz3.ab3@17736>    CMP.l fp0addr,a4
0002EE0C <AmiBlitz3.ab3@17737>    BNE 'nofastload
0002EE12 <AmiBlitz3.ab3@17738>    MOVE.l fp0iff,d1
0002EE18 <AmiBlitz3.ab3@17739>    CMP.l firstiff,d1
0002EE1C <AmiBlitz3.ab3@17740>    BNE 'nofastload
0002EE22 <AmiBlitz3.ab3@17741>    MOVE.w varmode,d1
0002EE28 <AmiBlitz3.ab3@17742>    CMP.w fp0mode,d1
0002EE2C <AmiBlitz3.ab3@17743>    BNE 'nofastload
0002EE32 <AmiBlitz3.ab3@17744>    CMP.w fp0var,d3
0002EE36 <AmiBlitz3.ab3@17745>    BNE 'nofastload
0002EE3A <AmiBlitz3.ab3@17746>    BCLR #16,d2
0002EE3C <AmiBlitz3.ab3@17747>    MOVE.l (a7)+,d0
0002EE3E <AmiBlitz3.ab3@17748> RTS
0002EE40 <AmiBlitz3.ab3@17751>    MOVEQ #0,d0
0002EE46 <AmiBlitz3.ab3@17752>    MOVE.w regnum,d0
0002EE4C <AmiBlitz3.ab3@17753>    CMP.l maxregs,d0
0002EE50 <AmiBlitz3.ab3@17754>    BLE 'ok
0002EE56 <AmiBlitz3.ab3@17755>    LEA cmplxerr,a0
0002EE58 <AmiBlitz3.ab3@17756>   MOVE.l a0,-(a7)
0002EE5E <AmiBlitz3.ab3@17757> JMP handle_compileerror
0002EE64 <AmiBlitz3.ab3@17760>    LEA regtable,a4
0002EE66 <AmiBlitz3.ab3@17761>    TST.l (a4)
0002EE6A <AmiBlitz3.ab3@17762>    BEQ 'noreg
0002EE6E <AmiBlitz3.ab3@17763>    CMP.w 0+4(a4),d3
0002EE72 <AmiBlitz3.ab3@17764>    BNE 'doreg1
0002EE78 <AmiBlitz3.ab3@17765>    MOVE.l #$f2001c00,d1
0002EE7E <AmiBlitz3.ab3@17766>    MOVE.w regnum,d0
0002EE80 <AmiBlitz3.ab3@17767>    ASL.w #7,d0
0002EE82 <AmiBlitz3.ab3@17768>    OR.w d0,d1
0002EE86 <AmiBlitz3.ab3@17769>    BSR writelong
0002EE88 <AmiBlitz3.ab3@17770>    MOVE.l (a7)+,d0
0002EE8A <AmiBlitz3.ab3@17771> RTS
0002EE8E <AmiBlitz3.ab3@17774>   CMP.w 8+4(a4),d3
0002EE92 <AmiBlitz3.ab3@17775>    BNE 'doreg2
0002EE98 <AmiBlitz3.ab3@17776>    MOVE.l #$f2001800,d1
0002EE9E <AmiBlitz3.ab3@17777>    MOVE.w regnum,d0
0002EEA0 <AmiBlitz3.ab3@17778>    ASL.w #7,d0
0002EEA2 <AmiBlitz3.ab3@17779>    OR.w d0,d1
0002EEA6 <AmiBlitz3.ab3@17780>    BSR writelong
0002EEA8 <AmiBlitz3.ab3@17781>    MOVE.l (a7)+,d0
0002EEAA <AmiBlitz3.ab3@17782> RTS
0002EEAE <AmiBlitz3.ab3@17785>   CMP.w 16+4(a4),d3
0002EEB2 <AmiBlitz3.ab3@17786>    BNE 'doreg3
0002EEB8 <AmiBlitz3.ab3@17787>    MOVE.l #$f2001400,d1
0002EEBE <AmiBlitz3.ab3@17788>    MOVE.w regnum,d0
0002EEC0 <AmiBlitz3.ab3@17789>    ASL.w #7,d0
0002EEC2 <AmiBlitz3.ab3@17790>    OR.w d0,d1
0002EEC6 <AmiBlitz3.ab3@17791>    BSR  writelong
0002EEC8 <AmiBlitz3.ab3@17792>    MOVE.l (a7)+,d0
0002EECA <AmiBlitz3.ab3@17793> RTS
0002EECE <AmiBlitz3.ab3@17796>   CMP.w 24+4(a4),d3
0002EED2 <AmiBlitz3.ab3@17797>    BNE 'doreg4
0002EED8 <AmiBlitz3.ab3@17798>    MOVE.l #$f2001000,d1
0002EEDE <AmiBlitz3.ab3@17799>    MOVE.w regnum,d0
0002EEE0 <AmiBlitz3.ab3@17800>    ASL.w #7,d0
0002EEE2 <AmiBlitz3.ab3@17801>    OR.w d0,d1
0002EEE6 <AmiBlitz3.ab3@17802>    BSR writelong
0002EEE8 <AmiBlitz3.ab3@17803>    MOVE.l (a7)+,d0
0002EEEA <AmiBlitz3.ab3@17804> RTS
0002EEEE <AmiBlitz3.ab3@17807>    CMP.w 32+4(a4),d3
0002EEF2 <AmiBlitz3.ab3@17808>    BNE 'noreg
0002EEF8 <AmiBlitz3.ab3@17809>    MOVE.l #$f2000c00,d1
0002EEFE <AmiBlitz3.ab3@17810>    MOVE.w regnum,d0
0002EF00 <AmiBlitz3.ab3@17811>    ASL.w #7,d0
0002EF02 <AmiBlitz3.ab3@17812>    OR.w d0,d1
0002EF06 <AmiBlitz3.ab3@17813>    BSR writelong
0002EF08 <AmiBlitz3.ab3@17814>    MOVE.l (a7)+,d0
0002EF0A <AmiBlitz3.ab3@17815> RTS
0002EF10 <AmiBlitz3.ab3@17818>    MOVE.l #$f22d4400,d1                                    ;var
0002EF16 <AmiBlitz3.ab3@17819>    TST.w varmode
0002EF1A <AmiBlitz3.ab3@17820>   BEQ 'glob
0002EF1E <AmiBlitz3.ab3@17821>   BCLR #16,d1                                              ;local
0002EF20 <AmiBlitz3.ab3@17824>    MOVEQ #0,d0
0002EF26 <AmiBlitz3.ab3@17825>    MOVE.w regnum,d0
0002EF2A <AmiBlitz3.ab3@17826>    CMP.w #7,d0
0002EF2E <AmiBlitz3.ab3@17827>    BLE 'ok2
0002EF34 <AmiBlitz3.ab3@17828>    LEA cmplxerr,a0
0002EF36 <AmiBlitz3.ab3@17829>   MOVE.l a0,-(a7)
0002EF3C <AmiBlitz3.ab3@17830> JMP handle_compileerror
0002EF3E <AmiBlitz3.ab3@17833>      ASL.w #7,d0
0002EF40 <AmiBlitz3.ab3@17834>    OR.l d0,d1
0002EF48 <AmiBlitz3.ab3@17835>    CMP.l #doublecheck,8(a2)
0002EF4C <AmiBlitz3.ab3@17836>    BNE 'dbl
0002EF52 <AmiBlitz3.ab3@17837>    OR.l #$00001000,d1
0002EF56 <AmiBlitz3.ab3@17840>   BSR writelong
0002EF58 <AmiBlitz3.ab3@17841>    MOVE.l (a7)+,d0
0002EF5C <AmiBlitz3.ab3@17842>    AND.w #$ff,d2
0002EF5E <AmiBlitz3.ab3@17843>    MOVE.w d3,d1
0002EF62 <AmiBlitz3.ab3@17844>    BEQ 'nooffs
0002EF66 <AmiBlitz3.ab3@17845> BRA writeword
0002EF68 <AmiBlitz3.ab3@17850> RTS
0002EF6E <AmiBlitz3.ab3@17853>   MOVE.w regnum,D1
0002EF74 <AmiBlitz3.ab3@17854>   MOVE.w d1,load_var_reg
0002EF76 <AmiBlitz3.ab3@17855>   LSL.w #8,D1
0002EF80 <AmiBlitz3.ab3@17856>   MOVE.l destpointer,load_var_addr
0002EF86 <AmiBlitz3.ab3@17857>   MOVE.w d2,load_var_size
0002EF88 <AmiBlitz3.ab3@17858>   LSL.w #1,D1
0002EF8C <AmiBlitz3.ab3@17859>   BTST #$E,D2
0002EF90 <AmiBlitz3.ab3@17860>    BNE.w JL_0_B17A
0002EF92 <AmiBlitz3.ab3@17861>   TST.b D2
0002EF96 <AmiBlitz3.ab3@17862>    BNE.w JL_0_B17E
0002EF98 <AmiBlitz3.ab3@17863>   MOVEQ.l #$03,D2
0002EF9C <AmiBlitz3.ab3@17864>   ORI.w #$200A,D1
0002EFA0 <AmiBlitz3.ab3@17865> BRA.w writeword
0002EFA4 <AmiBlitz3.ab3@17868>   MOVE.b #$3,D2
0002EFA8 <AmiBlitz3.ab3@17871>   BTST #$F,D2
0002EFAC <AmiBlitz3.ab3@17872>    BEQ.w JL_0_B19A                                         ;loadarray
0002EFB2 <AmiBlitz3.ab3@17873>    TST.b fast                                              ;lea->move xx(a2)
0002EFB6 <AmiBlitz3.ab3@17874>    BEQ 'la10
0002EFBC <AmiBlitz3.ab3@17879>    CLR.l load_var_addr
0002EFC0 <AmiBlitz3.ab3@17880> BRA 'la10
0002EFC8 <AmiBlitz3.ab3@17882>    CMP.w #$2012,movea2dn                                  ;??Looks like dead code??
0002EFCC <AmiBlitz3.ab3@17883>    BNE 'la10
0002EFD2 <AmiBlitz3.ab3@17884>    TST.b optiarray
0002EFD6 <AmiBlitz3.ab3@17885>    BNE 'la10
0002EFDC <AmiBlitz3.ab3@17886>    MOVE.l destpointer,a4
0002EFE2 <AmiBlitz3.ab3@17887>    SUB.l loada,a4
0002EFE6 <AmiBlitz3.ab3@17888>    CMP.w #4,a4
0002EFEA <AmiBlitz3.ab3@17889>    BEQ 'la100
0002EFEE <AmiBlitz3.ab3@17890>    CMP.w #2,a4
0002EFF2 <AmiBlitz3.ab3@17891>    BNE 'la10
0002EFF8 <AmiBlitz3.ab3@17892>    MOVE.l destpointer,a4
0002EFFC <AmiBlitz3.ab3@17893>    CMP.b #3,d2
0002F000 <AmiBlitz3.ab3@17894>    BCS 'la110
0002F006 <AmiBlitz3.ab3@17895>    MOVE.w #$202a,-2(a4)
0002F00A <AmiBlitz3.ab3@17896>    OR.w d1,-2(a4)
0002F010 <AmiBlitz3.ab3@17897>    MOVE.w arrayoffset,d1
0002F014 <AmiBlitz3.ab3@17898>    BSR writeword
0002F018 <AmiBlitz3.ab3@17899> BRA JL_0_B194
0002F01C <AmiBlitz3.ab3@17902>    CMP.b #2,d2
0002F020 <AmiBlitz3.ab3@17903>    BNE 'la120
0002F026 <AmiBlitz3.ab3@17904>     MOVE.w #$302a,-2(a4)
0002F02A <AmiBlitz3.ab3@17905>    OR.w d1,-2(a4)
0002F030 <AmiBlitz3.ab3@17907>    MOVE.w arrayoffset,d1
0002F034 <AmiBlitz3.ab3@17908>    BSR writeword
0002F038 <AmiBlitz3.ab3@17909> BRA JL_0_B194
0002F03C <AmiBlitz3.ab3@17912>   CMP.b #1,d2
0002F040 <AmiBlitz3.ab3@17913>    BNE.s 'la10
0002F046 <AmiBlitz3.ab3@17914>     MOVE.w #$102a,-2(a4)
0002F04A <AmiBlitz3.ab3@17915>    OR.w d1,-2(a4)
0002F050 <AmiBlitz3.ab3@17916>    MOVE.w arrayoffset,d1
0002F054 <AmiBlitz3.ab3@17917>    BSR writeword
0002F058 <AmiBlitz3.ab3@17918> BRA JL_0_B194
0002F05E <AmiBlitz3.ab3@17921>   MOVE.l destpointer,a4
0002F064 <AmiBlitz3.ab3@17922>    CMP.w #$45ea,-2(a4)
0002F068 <AmiBlitz3.ab3@17923>    BNE 'la10
0002F06C <AmiBlitz3.ab3@17924>    CMP.b #3,d2
0002F070 <AmiBlitz3.ab3@17925>    BCS 'la11
0002F076 <AmiBlitz3.ab3@17926>    MOVE.w #$202a,-4(a4)
0002F07A <AmiBlitz3.ab3@17927>    OR.w d1,-4(a4)
0002F07E <AmiBlitz3.ab3@17928> BRA JL_0_B194
0002F082 <AmiBlitz3.ab3@17931>    CMP.b #2,d2
0002F086 <AmiBlitz3.ab3@17932>    BNE 'la12
0002F08C <AmiBlitz3.ab3@17933>     MOVE.w #$302a,-4(a4)
0002F090 <AmiBlitz3.ab3@17934>    OR.w d1,-4(a4)
0002F094 <AmiBlitz3.ab3@17935> BRA JL_0_B194
0002F098 <AmiBlitz3.ab3@17938>   CMP.b #1,d2
0002F09C <AmiBlitz3.ab3@17939>    BNE.s 'la10
0002F0A2 <AmiBlitz3.ab3@17940>     MOVE.w #$102a,-4(a4)
0002F0A6 <AmiBlitz3.ab3@17941>    OR.w d1,-4(a4)
0002F0AA <AmiBlitz3.ab3@17942> BRA JL_0_B194
0002F0B0 <AmiBlitz3.ab3@17945>    OR.w movea2dn,D1
0002F0B4 <AmiBlitz3.ab3@17946>    BSR.w JL_0_B1B2
0002F0B8 <AmiBlitz3.ab3@17947>    BSR.w writeword
0002F0BC <AmiBlitz3.ab3@17950>   ANDI.w #$FF,D2
0002F0BE <AmiBlitz3.ab3@17951> RTS
0002F0C4 <AmiBlitz3.ab3@17955>    MOVE.l destpointer,a4
0002F0CC <AmiBlitz3.ab3@17956>    MOVE.l #$f22a4400,-4(a4)
0002F0D2 <AmiBlitz3.ab3@17957>    MOVE.w arrayoffset,d1
0002F0D6 <AmiBlitz3.ab3@17958> BRA writeword
0002F0DC <AmiBlitz3.ab3@17962>   OR.w moved3a5dn,D1                                        ;write move.l 0(a5),reg
0002F0E0 <AmiBlitz3.ab3@17963>    BSR.w JL_0_B1B2
0002F0E4 <AmiBlitz3.ab3@17964>    BSR.w pokewda5s
0002F0E6 <AmiBlitz3.ab3@17965>   MOVE.w D3,D1
0002F0EA <AmiBlitz3.ab3@17966>    BSR.w writeword
0002F0EE <AmiBlitz3.ab3@17967> BRA.w JL_0_B194
0002F0F2 <AmiBlitz3.ab3@17970>   BTST #$E,D2
0002F0F6 <AmiBlitz3.ab3@17971>    BNE.w JL_0_B1CA
0002F0FA <AmiBlitz3.ab3@17972>   CMP.b #$1,D2
0002F0FE <AmiBlitz3.ab3@17973>    BEQ.w JL_0_B1CC
0002F102 <AmiBlitz3.ab3@17974>   CMP.b #$2,D2
0002F106 <AmiBlitz3.ab3@17975>    BEQ.w JL_0_B1D2
0002F108 <AmiBlitz3.ab3@17978> RTS
0002F10C <AmiBlitz3.ab3@17981>   EORI.w #$3000,D1
0002F10E <AmiBlitz3.ab3@17982> RTS
0002F112 <AmiBlitz3.ab3@17985>   ORI.w #$1000,D1
0002F114 <AmiBlitz3.ab3@17986> RTS
0002F11C <AmiBlitz3.ab3@17990>   MOVE.w #$FFFF,dfetch
0002F120 <AmiBlitz3.ab3@17991>   BSR.w get1bytemain
0002F124 <AmiBlitz3.ab3@17992>   CMP.w #$2D,D0
0002F128 <AmiBlitz3.ab3@17993>    BNE.w JL_0_B206
0002F12C <AmiBlitz3.ab3@17994>   BSR.w get1bytemain
0002F130 <AmiBlitz3.ab3@17995>   BSR.w JL_0_B206
0002F134 <AmiBlitz3.ab3@17996>   CMP.w #$5,D2
0002F138 <AmiBlitz3.ab3@17997>    BCC.w JL_0_B200
0002F13A <AmiBlitz3.ab3@17998>   NEG.l D0
0002F13C <AmiBlitz3.ab3@17999> RTS
0002F142 <AmiBlitz3.ab3@18002>   TST.b fpu
0002F146 <AmiBlitz3.ab3@18003>   BEQ 'noneg
0002F14A <AmiBlitz3.ab3@18004>   fneg.x fp0
0002F14C <AmiBlitz3.ab3@18005> RTS
0002F150 <AmiBlitz3.ab3@18008>   BCHG #$7,D0
0002F152 <AmiBlitz3.ab3@18009> RTS
0002F156 <AmiBlitz3.ab3@18012>   CMP.w #$24,D0
0002F15A <AmiBlitz3.ab3@18013>    BEQ.w get_hexconstant
0002F15E <AmiBlitz3.ab3@18014>   CMP.w #$25,D0
0002F162 <AmiBlitz3.ab3@18015>    BEQ.w JL_0_A8C0
0002F166 <AmiBlitz3.ab3@18016>   CMP.w #$2E,D0
0002F16A <AmiBlitz3.ab3@18017>    BNE.w JL_0_B224
0002F16C <AmiBlitz3.ab3@18020>   MOVEQ.l #$00,D3
0002F170 <AmiBlitz3.ab3@18021> BRA.w JL_0_B272
0002F172 <AmiBlitz3.ab3@18024>   MOVEQ.l #$00,D3                                          ;number
0002F176 <AmiBlitz3.ab3@18025>    BSR.w atoi
0002F17A <AmiBlitz3.ab3@18026>   CMP.w #$2E,D0
0002F17E <AmiBlitz3.ab3@18027>    BEQ.w JL_0_B268
0002F182 <AmiBlitz3.ab3@18028>   ORI.w #$20,D0
0002F186 <AmiBlitz3.ab3@18029>   CMP.w #$65,D0
0002F18A <AmiBlitz3.ab3@18030>    BNE.w JL_0_B46E
0002F190 <AmiBlitz3.ab3@18031>   CMP.l #$800000,D3
0002F194 <AmiBlitz3.ab3@18032>    BCC.w overerr
0002F196 <AmiBlitz3.ab3@18033>   MOVEQ.l #-$01,D6
0002F19A <AmiBlitz3.ab3@18034>   fmove.l d3,fp0
0002F19C <AmiBlitz3.ab3@18035>   MOVE.l D3,D0
0002F1A2 <AmiBlitz3.ab3@18036>   MOVEA.l _mathffpbase,A6
0002F1A6 <AmiBlitz3.ab3@18037>    JSR -$24(A6)
0002F1A8 <AmiBlitz3.ab3@18038>   MOVE.l D0,D3
0002F1AC <AmiBlitz3.ab3@18039>    BSR.w JL_0_B2E6
0002F1B0 <AmiBlitz3.ab3@18040>    BSR.w reget
0002F1B4 <AmiBlitz3.ab3@18041>    BSR.w JL_0_B480
0002F1B8 <AmiBlitz3.ab3@18042> BRA.w JL_0_B3DC
0002F1BC <AmiBlitz3.ab3@18045>   CMP.b #4,d2
0002F1C0 <AmiBlitz3.ab3@18046>   BEQ 'l4
0002F1C4 <AmiBlitz3.ab3@18047>   MOVE.b #5,d2                                             ;nprint 2/0.5 bugfix
0002F1CA <AmiBlitz3.ab3@18050>    TST.b fpu
0002F1CE <AmiBlitz3.ab3@18051>    BNE 'l1
0002F1D4 <AmiBlitz3.ab3@18052>    CMP.l #$800000,D3
0002F1D8 <AmiBlitz3.ab3@18053>    BCC.w overerr
0002F1DC <AmiBlitz3.ab3@18054> BRA JL_0_B272
0002F1E2 <AmiBlitz3.ab3@18057>   CMP.l #$7fffffff,d3
0002F1E6 <AmiBlitz3.ab3@18058>     BCC.w overerr
0002F1E8 <AmiBlitz3.ab3@18061>   MOVEQ.l #-$01,D6
0002F1EA <AmiBlitz3.ab3@18062>   MOVE.l D3,D0
0002F1EE <AmiBlitz3.ab3@18063>   fmove.l d3,fp0
0002F1F4 <AmiBlitz3.ab3@18064>   MOVEA.l _mathffpbase,A6
0002F1F8 <AmiBlitz3.ab3@18065>    JSR -$24(A6)                                            ;integer to ffp
0002F1FA <AmiBlitz3.ab3@18066>   MOVE.l D0,-(A7)
0002F1FE <AmiBlitz3.ab3@18067>    BSR.w get1bytemain
0002F202 <AmiBlitz3.ab3@18068>    BSR.w tstnum
0002F206 <AmiBlitz3.ab3@18069>    BNE.w syntaxerr
0002F208 <AmiBlitz3.ab3@18070>   MOVEQ.l #$00,D3
0002F20C <AmiBlitz3.ab3@18071>    BSR.w atoi
0002F20E <AmiBlitz3.ab3@18072>   TST.l D3
0002F212 <AmiBlitz3.ab3@18073>    BEQ.w JL_0_B2E0
0002F218 <AmiBlitz3.ab3@18074>   TST.b fpu
0002F21C <AmiBlitz3.ab3@18075>   BNE 'l1
0002F222 <AmiBlitz3.ab3@18076>   CMP.l #$800000,D3
0002F226 <AmiBlitz3.ab3@18077>    BCC.w overerr
0002F22A <AmiBlitz3.ab3@18078> BRA 'l2
0002F230 <AmiBlitz3.ab3@18081>   CMP.l #$7fffffff,d3
0002F234 <AmiBlitz3.ab3@18082>   BCC overerr
0002F238 <AmiBlitz3.ab3@18085>   fmove.l d5,fp1
0002F23A <AmiBlitz3.ab3@18086>   MOVE.l D5,D0
0002F23E <AmiBlitz3.ab3@18087>    JSR -$24(A6)
0002F240 <AmiBlitz3.ab3@18088>   MOVE.l D0,D5
0002F244 <AmiBlitz3.ab3@18089>   fmove.l d3,fp2
0002F246 <AmiBlitz3.ab3@18090>   MOVE.l D3,D0
0002F24A <AmiBlitz3.ab3@18091>    JSR -$24(A6)
0002F24E <AmiBlitz3.ab3@18092>   fdiv.x fp1,fp2
0002F250 <AmiBlitz3.ab3@18093>   MOVE.l D5,D1
0002F254 <AmiBlitz3.ab3@18094>    JSR -$54(A6)
0002F258 <AmiBlitz3.ab3@18095>   fadd.x fp2,fp0
0002F25A <AmiBlitz3.ab3@18096>   MOVE.l (A7)+,D1
0002F25E <AmiBlitz3.ab3@18097>    JSR -$42(A6)
0002F260 <AmiBlitz3.ab3@18098>   MOVE.l D0,D3
0002F264 <AmiBlitz3.ab3@18099>    BSR.w reget
0002F268 <AmiBlitz3.ab3@18100>   ORI.w #$20,D0
0002F26C <AmiBlitz3.ab3@18101>   CMP.w #$65,D0
0002F270 <AmiBlitz3.ab3@18102>    BNE.w JL_0_B2D4
0002F274 <AmiBlitz3.ab3@18103>    BSR.w JL_0_B2E6
0002F278 <AmiBlitz3.ab3@18106>    BSR.w reget
0002F27C <AmiBlitz3.ab3@18107>    BSR.w JL_0_B480
0002F280 <AmiBlitz3.ab3@18108> BRA.w JL_0_B3DC
0002F282 <AmiBlitz3.ab3@18111>   MOVE.l (A7)+,D3
0002F286 <AmiBlitz3.ab3@18112> BRA.w JL_0_B2D4
0002F28A <AmiBlitz3.ab3@18115>   BSR.w get1bytemain
0002F28E <AmiBlitz3.ab3@18116>   CMP.w #$2B,D0
0002F292 <AmiBlitz3.ab3@18117>    BEQ.w JL_0_B30E
0002F296 <AmiBlitz3.ab3@18118>   CMP.w #$2D,D0
0002F29A <AmiBlitz3.ab3@18119>    BNE.w JL_0_B312
0002F29E <AmiBlitz3.ab3@18120>    BSR.w get1bytemain
0002F2A2 <AmiBlitz3.ab3@18121>    BSR.w getsign
0002F2A4 <AmiBlitz3.ab3@18122>   MOVE.l D3,D0
0002F2A8 <AmiBlitz3.ab3@18123>   fdiv.x fp1,fp0
0002F2AA <AmiBlitz3.ab3@18124>   MOVE.l D4,D1
0002F2AE <AmiBlitz3.ab3@18125>    JSR -$54(A6)
0002F2B0 <AmiBlitz3.ab3@18126>   MOVE.l D0,D3
0002F2B2 <AmiBlitz3.ab3@18127> RTS
0002F2B6 <AmiBlitz3.ab3@18130>   BSR.w get1bytemain
0002F2BA <AmiBlitz3.ab3@18133>   BSR.w getsign
0002F2BE <AmiBlitz3.ab3@18134>   fmul.x fp1,fp0
0002F2C0 <AmiBlitz3.ab3@18135>   MOVE.l D3,D0
0002F2C2 <AmiBlitz3.ab3@18136>   MOVE.l D4,D1
0002F2C6 <AmiBlitz3.ab3@18137>    JSR -$4E(A6)
0002F2C8 <AmiBlitz3.ab3@18138>   MOVE.l D0,D3
0002F2CA <AmiBlitz3.ab3@18139> RTS
0002F2CE <AmiBlitz3.ab3@18142>   BSR.w tstnum
0002F2D2 <AmiBlitz3.ab3@18143>    BNE.w syntaxerr
0002F2D4 <AmiBlitz3.ab3@18144>   MOVE.w D0,D4
0002F2D8 <AmiBlitz3.ab3@18145>   SUBI.w #$30,D4
0002F2DC <AmiBlitz3.ab3@18146>    BSR.w get1bytemain
0002F2E0 <AmiBlitz3.ab3@18147>    BSR.w tstnum
0002F2E4 <AmiBlitz3.ab3@18148>    BNE.w getsign__skip
0002F2E8 <AmiBlitz3.ab3@18149>   MULU #$A,D4
0002F2EC <AmiBlitz3.ab3@18150>   SUBI.w #$30,D0
0002F2EE <AmiBlitz3.ab3@18151>   ADD.w D0,D4
0002F2F2 <AmiBlitz3.ab3@18152>    BSR.w get1bytemain
0002F2F6 <AmiBlitz3.ab3@18155>   CMP.w #$12,D4
0002F2FA <AmiBlitz3.ab3@18156>    BHI.w overerr
0002F2FC <AmiBlitz3.ab3@18157>   LSL.w #3,D4
0002F302 <AmiBlitz3.ab3@18158>   LEA fputab,a0
0002F304 <AmiBlitz3.ab3@18159>   ADD.l d4,a0
0002F30A <AmiBlitz3.ab3@18160>   fmove.d 0(a0),fp1
0002F30C <AmiBlitz3.ab3@18161>   LSR.w #1,d4
0002F310 <AmiBlitz3.ab3@18162>   MOVE.l facts(PC,D4.W),D4
0002F312 <AmiBlitz3.ab3@18163> RTS
0002F35A <AmiBlitz3.ab3@18167>   Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000  ;,1000000000,10000000000
0002F35E <AmiBlitz3.ab3@18172>   Dc.l $80000041
0002F362 <AmiBlitz3.ab3@18173>   Dc.l $A0000044
0002F366 <AmiBlitz3.ab3@18174>   Dc.l $C8000047
0002F36A <AmiBlitz3.ab3@18175>   Dc.l $FA00004A
0002F36E <AmiBlitz3.ab3@18176>   Dc.l $9C40004E
0002F372 <AmiBlitz3.ab3@18177>   Dc.l $C3500051
0002F376 <AmiBlitz3.ab3@18178>   Dc.l $F4240054
0002F37A <AmiBlitz3.ab3@18179>   Dc.l $98968058
0002F37E <AmiBlitz3.ab3@18180>   Dc.l $BEBC205B
0002F382 <AmiBlitz3.ab3@18181>   Dc.l $EE6B285E
0002F386 <AmiBlitz3.ab3@18182>   Dc.l $9502F962
0002F38A <AmiBlitz3.ab3@18183>   Dc.l $BA43B765
0002F38E <AmiBlitz3.ab3@18184>   Dc.l $E8D4A568
0002F392 <AmiBlitz3.ab3@18185>   Dc.l $9184E76C
0002F396 <AmiBlitz3.ab3@18186>   Dc.l $B5E6A96F
0002F39A <AmiBlitz3.ab3@18187>   Dc.l $E35F2972
0002F39E <AmiBlitz3.ab3@18188>   Dc.l $8E1BCA76
0002F3A2 <AmiBlitz3.ab3@18189>   Dc.l $B1A2BD79
0002F3A6 <AmiBlitz3.ab3@18190>   Dc.l $DE0B6C7C
0002F3A8 <AmiBlitz3.ab3@18194>   MOVEQ.l #$01,D5
0002F3AA <AmiBlitz3.ab3@18197>   LSL.l #1,D5
0002F3AC <AmiBlitz3.ab3@18198>   MOVE.l D5,D1
0002F3AE <AmiBlitz3.ab3@18199>   LSL.l #2,D5
0002F3B0 <AmiBlitz3.ab3@18200>   ADD.l D1,D5                                              ;divisor for frac convert!
0002F3B2 <AmiBlitz3.ab3@18201>   LSL.l #1,D3
0002F3B6 <AmiBlitz3.ab3@18202>    BCS.w overerr
0002F3B8 <AmiBlitz3.ab3@18203>   MOVE.l D3,D1
0002F3BA <AmiBlitz3.ab3@18204>   LSL.l #1,D3
0002F3BE <AmiBlitz3.ab3@18205>    BCS.w overerr
0002F3C0 <AmiBlitz3.ab3@18206>   LSL.l #1,D3
0002F3C4 <AmiBlitz3.ab3@18207>    BCS.w overerr
0002F3C6 <AmiBlitz3.ab3@18208>   ADD.l D1,D3
0002F3CA <AmiBlitz3.ab3@18209>   SUBI.w #$30,D0
0002F3CC <AmiBlitz3.ab3@18210>   ADD.l D0,D3
0002F3F8 <AmiBlitz3.ab3@18211>    !fget                                                   ;bsr.w get1bytemain
0002F3FC <AmiBlitz3.ab3@18212>    CMP.b #1,d0
0002F400 <AmiBlitz3.ab3@18213>    BNE 'cm1
0002F402 <AmiBlitz3.ab3@18214>    SUBQ.l #1,a5
0002F406 <AmiBlitz3.ab3@18215>    BSR get1bytemain                                        ;??wy not !fget
0002F40A <AmiBlitz3.ab3@18218>   CMP.b #$7e,d0
0002F40E <AmiBlitz3.ab3@18219>    BNE 'cm2
0002F410 <AmiBlitz3.ab3@18220>    SUBQ.l #1,a5
0002F414 <AmiBlitz3.ab3@18221>    BSR get1bytemain
0002F416 <AmiBlitz3.ab3@18224>   TST.b d0
0002F41A <AmiBlitz3.ab3@18225>    BPL 'l10
0002F41C <AmiBlitz3.ab3@18226>    LSL.w #8,d0
0002F41E <AmiBlitz3.ab3@18227>    MOVE.b (a5)+,d0
0002F424 <AmiBlitz3.ab3@18228>    MOVE.w d0,lastchar
0002F436 <AmiBlitz3.ab3@18231>   !compare2                                                ;bsr.w tstnum ;cmake bug
0002F43A <AmiBlitz3.ab3@18232>    BEQ.w atoi__loop
0002F43C <AmiBlitz3.ab3@18233> RTS
0002F43E <AmiBlitz3.ab3@18236> dfetch:  Ds.w 1                                            ;fetching data?
0002F442 <AmiBlitz3.ab3@18240>   MOVE.w dfetch(PC),D1
0002F446 <AmiBlitz3.ab3@18241>    BEQ.w JL_0_B3EC
0002F44C <AmiBlitz3.ab3@18242>   CLR.w dfetch
0002F44E <AmiBlitz3.ab3@18243> RTS
0002F454 <AmiBlitz3.ab3@18246>   MOVE.b d2,isconstantvalue
0002F45A <AmiBlitz3.ab3@18247>   MOVE.l d0,lastconstantvalue
0002F460 <AmiBlitz3.ab3@18248>   MOVE.w d2,imm_size
0002F46A <AmiBlitz3.ab3@18249>   MOVE.w regnum,imm_reg
0002F474 <AmiBlitz3.ab3@18250>   MOVE.l destpointer,imm_addr                           ; long
0002F478 <AmiBlitz3.ab3@18251>   CMP.w #$3,D2
0002F47C <AmiBlitz3.ab3@18252>   BEQ.w JL_0_B434
0002F480 <AmiBlitz3.ab3@18253>   CMP.w #$5,D2                                          ;float
0002F484 <AmiBlitz3.ab3@18254>   BEQ.w JL_0_B434
0002F488 <AmiBlitz3.ab3@18255>   CMP.w #$1,D2
0002F48C <AmiBlitz3.ab3@18256>   BEQ.w JL_0_B418
0002F490 <AmiBlitz3.ab3@18257>   CMP.w #$2,D2
0002F494 <AmiBlitz3.ab3@18258>   BEQ.w JL_0_B418
0002F498 <AmiBlitz3.ab3@18259>   CMP.w #$4,D2
0002F49C <AmiBlitz3.ab3@18260>   BEQ.w JL_0_B434
0002F4A0 <AmiBlitz3.ab3@18262> BRA.w mismatcherr
0002F4A6 <AmiBlitz3.ab3@18265>   MOVE.w regnum,D1
0002F4A8 <AmiBlitz3.ab3@18266>   LSL.w #8,D1
0002F4AA <AmiBlitz3.ab3@18267>   LSL.w #1,D1
0002F4AE <AmiBlitz3.ab3@18268>   ORI.w #$303C,D1
0002F4B2 <AmiBlitz3.ab3@18269>    BSR.w writeword
0002F4B4 <AmiBlitz3.ab3@18270>   MOVE.w D0,D1
0002F4B8 <AmiBlitz3.ab3@18271>    BSR.w writeword
0002F4BC <AmiBlitz3.ab3@18272> BRA.w reget
0002F4BE <AmiBlitz3.ab3@18275>   MOVEQ #0,d1
0002F4C4 <AmiBlitz3.ab3@18276>   MOVE.w regnum,D1
0002F4CA <AmiBlitz3.ab3@18277>   TST.b fpu
0002F4CE <AmiBlitz3.ab3@18278>   BEQ 'f1
0002F4D2 <AmiBlitz3.ab3@18279>   CMP.w #5,d2
0002F4D6 <AmiBlitz3.ab3@18280>   BEQ 'l10
0002F4DA <AmiBlitz3.ab3@18281> BRA 'f2
0002F4E0 <AmiBlitz3.ab3@18284>   TST.b iee
0002F4E4 <AmiBlitz3.ab3@18285>   BNE 'l10
0002F4E6 <AmiBlitz3.ab3@18288>   LSL.w #8,D1
0002F4E8 <AmiBlitz3.ab3@18289>   LSL.w #1,D1
0002F4EC <AmiBlitz3.ab3@18290>   ORI.w #$203C,D1
0002F4F0 <AmiBlitz3.ab3@18291>    BSR.w writeword
0002F4F2 <AmiBlitz3.ab3@18292>   MOVE.l D0,D1
0002F4F6 <AmiBlitz3.ab3@18293>    BSR.w writelong
0002F4FA <AmiBlitz3.ab3@18294> BRA.w reget
0002F4FC <AmiBlitz3.ab3@18297>   MOVEQ #5,d2
0002F4FE <AmiBlitz3.ab3@18298>   ASL.l #7,d1
0002F500 <AmiBlitz3.ab3@18299>   SUBQ.l #8,a7
0002F506 <AmiBlitz3.ab3@18304>       OR.l #$f23c4400,d1                                   ;fmove.s
0002F50C <AmiBlitz3.ab3@18305>        fmove.s fp0,0(a7)
0002F510 <AmiBlitz3.ab3@18307>   BSR writelong
0002F512 <AmiBlitz3.ab3@18308>   MOVE.l (a7)+,d1
0002F516 <AmiBlitz3.ab3@18309>   BSR writelong
0002F518 <AmiBlitz3.ab3@18310>   MOVE.l (a7)+,d1
0002F51C <AmiBlitz3.ab3@18314> BRA.w reget
0002F51E <AmiBlitz3.ab3@18320>  MOVE.l D3,D0
0002F520 <AmiBlitz3.ab3@18321>   TST.w D6
0002F524 <AmiBlitz3.ab3@18322>    BEQ.w JL_0_B46C
0002F52A <AmiBlitz3.ab3@18323>   MOVEA.l _mathffpbase,A6
0002F52E <AmiBlitz3.ab3@18324>    JSR -$1E(A6)
0002F532 <AmiBlitz3.ab3@18325>    BVC.w JL_0_B46C
0002F534 <AmiBlitz3.ab3@18326>   ADDQ.w #4,A7
0002F538 <AmiBlitz3.ab3@18327> BRA.w JL_0_B5A0
0002F53A <AmiBlitz3.ab3@18330> RTS
0002F53C <AmiBlitz3.ab3@18334>   MOVEQ.l #$00,D6
0002F540 <AmiBlitz3.ab3@18335>    fmove.l d3,fp0
0002F544 <AmiBlitz3.ab3@18338>   BSR.w JL_0_B480
0002F548 <AmiBlitz3.ab3@18339> BRA.w JL_0_B3DC
0002F54A <AmiBlitz3.ab3@18342>   MOVE.w D2,-(A7)
0002F54E <AmiBlitz3.ab3@18343>    BSR.w JL_0_BF6A
0002F550 <AmiBlitz3.ab3@18344>   MOVE.w (A7)+,D2
0002F552 <AmiBlitz3.ab3@18347>   TST.w D2
0002F556 <AmiBlitz3.ab3@18348>    BNE.w JL_0_B498
0002F558 <AmiBlitz3.ab3@18349>   TST.w D6
0002F55C <AmiBlitz3.ab3@18350>    BEQ.w JL_0_B492
0002F55E <AmiBlitz3.ab3@18351>   MOVEQ.l #$04,D2
0002F562 <AmiBlitz3.ab3@18352> BRA.w JL_0_B510
0002F564 <AmiBlitz3.ab3@18355>   MOVEQ.l #$02,D2
0002F568 <AmiBlitz3.ab3@18356> BRA.w JL_0_B4C4
0002F56C <AmiBlitz3.ab3@18359>   CMP.w #$1,D2
0002F570 <AmiBlitz3.ab3@18360>    BEQ.w JL_0_B4C4
0002F574 <AmiBlitz3.ab3@18361>   CMP.w #$2,D2
0002F578 <AmiBlitz3.ab3@18362>    BEQ.w JL_0_B4F8
0002F57C <AmiBlitz3.ab3@18363>   CMP.w #$3,D2
0002F580 <AmiBlitz3.ab3@18364>    BEQ.w JL_0_B57A
0002F584 <AmiBlitz3.ab3@18365>   CMP.w #$4,D2
0002F588 <AmiBlitz3.ab3@18366>    BEQ.w JL_0_B506
0002F58C <AmiBlitz3.ab3@18367>   CMP.w #$5,D2
0002F590 <AmiBlitz3.ab3@18368>    BEQ.w JL_0_B586
0002F594 <AmiBlitz3.ab3@18369> BRA.w mismatcherr
0002F598 <AmiBlitz3.ab3@18372>   BSR.w JL_0_B450                                          ;bugfix if a.b=$90 bug fix
0002F59E <AmiBlitz3.ab3@18373>   CMP.l #$7f,D0
0002F5A2 <AmiBlitz3.ab3@18374>    BGT.w JL_0_B4DC
0002F5A8 <AmiBlitz3.ab3@18375>   CMP.l #$FFFFFF80,D0
0002F5AC <AmiBlitz3.ab3@18376>    BGE.w JL_0_B59E
0002F5AE <AmiBlitz3.ab3@18379>   MOVEQ.l #$02,D2                                          ;was 2 before
0002F5B4 <AmiBlitz3.ab3@18380>   CMP.l #$7fff,D0
0002F5B8 <AmiBlitz3.ab3@18381>    BGT.w JL_0_B4F2
0002F5BE <AmiBlitz3.ab3@18382>   CMP.l #$FFFF8000,D0
0002F5C2 <AmiBlitz3.ab3@18383>    BGE.w JL_0_B59E
0002F5C4 <AmiBlitz3.ab3@18386>   MOVEQ.l #$03,D2
0002F5C8 <AmiBlitz3.ab3@18387> BRA.w JL_0_B59E
0002F5CA <AmiBlitz3.ab3@18413>   TST.w D6
0002F5CE <AmiBlitz3.ab3@18414>    BNE.w JL_0_B510
0002F5D2 <AmiBlitz3.ab3@18415>    BSR.w JL_0_B450
0002F5D6 <AmiBlitz3.ab3@18416> BRA.w JL_0_B4DC
0002F5DA <AmiBlitz3.ab3@18419>   BSR.w JL_0_B450
0002F5DC <AmiBlitz3.ab3@18420>   TST.w D6
0002F5E0 <AmiBlitz3.ab3@18421>   BEQ.w JL_0_B560
0002F5E6 <AmiBlitz3.ab3@18424>   CMP.l #MaxWordSgnd,D0
0002F5EA <AmiBlitz3.ab3@18425>    BGT.w JL_0_B5A0
0002F5F0 <AmiBlitz3.ab3@18426>   CMP.l #$FFFF8000,D0
0002F5F4 <AmiBlitz3.ab3@18427>    BLT.w JL_0_B5A0
0002F5F6 <AmiBlitz3.ab3@18428>   MOVE.w D0,-(A7)
0002F5FA <AmiBlitz3.ab3@18429>    JSR -$24(A6)
0002F5FC <AmiBlitz3.ab3@18430>   MOVE.l D0,D1
0002F5FE <AmiBlitz3.ab3@18431>   MOVE.l D3,D0
0002F602 <AmiBlitz3.ab3@18432>    JSR -$48(A6)
0002F608 <AmiBlitz3.ab3@18433>   MOVE.l #$80000051,D1
0002F60C <AmiBlitz3.ab3@18434>    JSR -$4E(A6)
0002F610 <AmiBlitz3.ab3@18435>    JSR -$1E(A6)
0002F614 <AmiBlitz3.ab3@18436>    BEQ.w JL_0_B55A
0002F61A <AmiBlitz3.ab3@18437>   CMP.l #$10000,D0
0002F61E <AmiBlitz3.ab3@18438>    BCC.w JL_0_B55A
0002F620 <AmiBlitz3.ab3@18439>   MOVE.w D0,D1
0002F622 <AmiBlitz3.ab3@18440>   MOVE.w (A7)+,D0
0002F624 <AmiBlitz3.ab3@18441>   SWAP D0
0002F626 <AmiBlitz3.ab3@18442>   MOVE.w D1,D0
0002F62A <AmiBlitz3.ab3@18443> BRA.w JL_0_B59E
0002F62C <AmiBlitz3.ab3@18446>   ADDQ.w #2,A7
0002F630 <AmiBlitz3.ab3@18447> BRA.w JL_0_B5A0
0002F636 <AmiBlitz3.ab3@18450>   CMP.l #MaxWordSgnd,D0
0002F63A <AmiBlitz3.ab3@18451>    BGT.w JL_0_B4F2
0002F640 <AmiBlitz3.ab3@18452>   CMP.l #$FFFF8000,D0
0002F644 <AmiBlitz3.ab3@18453>    BLT.w JL_0_B4F2
0002F646 <AmiBlitz3.ab3@18454>   SWAP D0
0002F64A <AmiBlitz3.ab3@18455> BRA.w JL_0_B59E
0002F64C <AmiBlitz3.ab3@18458>   TST.w D6
0002F650 <AmiBlitz3.ab3@18459>   BNE.w JL_0_B5A0
0002F652 <AmiBlitz3.ab3@18460>   MOVE.l D3,D0
0002F656 <AmiBlitz3.ab3@18461> BRA.w JL_0_B59E
0002F658 <AmiBlitz3.ab3@18464>   TST.w D6
0002F65C <AmiBlitz3.ab3@18465>   BNE.w JL_0_B5A0
0002F65E <AmiBlitz3.ab3@18466>   MOVE.l D3,D0
0002F664 <AmiBlitz3.ab3@18467>   MOVEA.l _mathffpbase,A6
0002F668 <AmiBlitz3.ab3@18468>   JSR -$24(A6)
0002F66A <AmiBlitz3.ab3@18469>   MOVE.l D0,D3
0002F66E <AmiBlitz3.ab3@18470> BRA.w JL_0_B5A0
0002F670 <AmiBlitz3.ab3@18473> RTS
0002F672 <AmiBlitz3.ab3@18476>   MOVEQ.l #$05,D2
0002F674 <AmiBlitz3.ab3@18477>   MOVE.l D3,D0
0002F676 <AmiBlitz3.ab3@18478> RTS
0002F67A <AmiBlitz3.ab3@18482>             Ds.l 1                                         ;??Looks like unused data??
0002F67E <AmiBlitz3.ab3@18483> pushpc:     Ds.l 1
0002F682 <AmiBlitz3.ab3@18484> pushoff:    Ds.l 1
0002F686 <AmiBlitz3.ab3@18485> pushdooff:  Ds.l 1
0002F688 <AmiBlitz3.ab3@18486> pushclen:   Ds.w 1
0002F68C <AmiBlitz3.ab3@18487> pushat:     Ds.l 1
0002F696 <AmiBlitz3.ab3@18491>   MOVE.l destpointer,pushpc
0002F6A0 <AmiBlitz3.ab3@18492>   MOVE.l hunkoffsetbase,pushoff
0002F6A2 <AmiBlitz3.ab3@18493> RTS
0002F6A6 <AmiBlitz3.ab3@18497>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F6AC <AmiBlitz3.ab3@18498>   MOVE.l destpointer,D0
0002F6B0 <AmiBlitz3.ab3@18499>   MOVE.l pushpc(PC),D1
0002F6B6 <AmiBlitz3.ab3@18500>   MOVE.l D1,destpointer
0002F6B8 <AmiBlitz3.ab3@18501>   SUB.l D1,D0
0002F6BE <AmiBlitz3.ab3@18502>   MOVE.w D0,pushclen
0002F6C2 <AmiBlitz3.ab3@18503>    BEQ.w JL_0_B636
0002F6C8 <AmiBlitz3.ab3@18504>   MOVE.w dontwrite,D1
0002F6CC <AmiBlitz3.ab3@18505>    BNE.w JL_0_B636
0002F6D4 <AmiBlitz3.ab3@18506>    CMP.w #1000,pushclen
0002F6D8 <AmiBlitz3.ab3@18507>    BGE conmemerr
0002F6DE <AmiBlitz3.ab3@18508>    MOVE.l pushat,d0
0002F6E2 <AmiBlitz3.ab3@18509>    BNE 'nomem
0002F6E8 <AmiBlitz3.ab3@18510>    MOVE.l #1024,d0
0002F6EA <AmiBlitz3.ab3@18511>   MOVEQ.l #$01,D1
0002F6F0 <AmiBlitz3.ab3@18512>   MOVEA.l _execbase,A6
0002F6F6 <AmiBlitz3.ab3@18513>   MOVE.l mempool,a0
0002F6FA <AmiBlitz3.ab3@18514>   JSR _AllocPooled(a6)
0002F700 <AmiBlitz3.ab3@18516>   MOVE.l D0,pushat
0002F702 <AmiBlitz3.ab3@18519>   MOVEA.l D0,A0
0002F708 <AmiBlitz3.ab3@18520>   MOVEA.l pushpc,A1
0002F70E <AmiBlitz3.ab3@18521>   MOVE.l A1,destpointer
0002F714 <AmiBlitz3.ab3@18522>   MOVE.w pushclen,D0
0002F716 <AmiBlitz3.ab3@18523>   LSR.w #1,D0
0002F718 <AmiBlitz3.ab3@18524>   SUBQ.w #1,D0
0002F71A <AmiBlitz3.ab3@18527>     MOVE.w (A1)+,(A0)+
0002F71E <AmiBlitz3.ab3@18528>   DBF D0,JL_0_B626
0002F728 <AmiBlitz3.ab3@18530>    MOVE.l hunkoffsetbase,pushdooff
0002F72C <AmiBlitz3.ab3@18533>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F72E <AmiBlitz3.ab3@18534> RTS
0002F732 <AmiBlitz3.ab3@18538>   MOVEM.l D0-D1/A0-A1,-(A7)
0002F734 <AmiBlitz3.ab3@18539>   MOVEQ.l #$00,D0
0002F73A <AmiBlitz3.ab3@18540>   MOVE.w pushclen,D0
0002F73E <AmiBlitz3.ab3@18541>    BEQ.w JL_0_B6D8
0002F744 <AmiBlitz3.ab3@18542>   MOVE.l destpointer,D1
0002F74A <AmiBlitz3.ab3@18543>   ADD.l D0,destpointer
0002F750 <AmiBlitz3.ab3@18544>   TST.w dontwrite
0002F754 <AmiBlitz3.ab3@18545>    BNE.w JL_0_B6D8
0002F756 <AmiBlitz3.ab3@18546>   LSR.w #1,D0
0002F758 <AmiBlitz3.ab3@18547>   SUBQ.w #1,D0
0002F75A <AmiBlitz3.ab3@18548>   MOVEA.l D1,A1
0002F760 <AmiBlitz3.ab3@18549>   MOVEA.l pushat,A0
0002F766 <AmiBlitz3.ab3@18552>     CMPA.l destbufferend,A1
0002F76A <AmiBlitz3.ab3@18553>     BCS.w JL_0_B684
0002F772 <AmiBlitz3.ab3@18555>     MOVE.w #$FFFF,dontwrite
0002F776 <AmiBlitz3.ab3@18556>   BRA.w JL_0_B6D8
0002F778 <AmiBlitz3.ab3@18559>      MOVE.w (A0)+,(A1)+                                    ;copylibcode
0002F77C <AmiBlitz3.ab3@18560>   DBF D0,JL_0_B66E
0002F782 <AmiBlitz3.ab3@18562>   SUB.l pushpc,D1
0002F786 <AmiBlitz3.ab3@18563>   BEQ.w JL_0_B6C2
0002F78C <AmiBlitz3.ab3@18564>   MOVEA.l pushdooff,A0
0002F792 <AmiBlitz3.ab3@18567>   CMPA.l pushoff,A0
0002F796 <AmiBlitz3.ab3@18568>   BEQ.w JL_0_B6C2
0002F79A <AmiBlitz3.ab3@18569>   MOVEA.l $4(A0),A1
0002F7A0 <AmiBlitz3.ab3@18570>   ADDA.l destbufferstart,A1
0002F7A6 <AmiBlitz3.ab3@18571>   CMPA.l destbufferend,A1
0002F7AA <AmiBlitz3.ab3@18572>   BCC.w JL_0_B6BC
0002F7AE <AmiBlitz3.ab3@18573>   ADD.l D1,$4(A0)
0002F7B0 <AmiBlitz3.ab3@18576>   MOVEA.l (A0),A0
0002F7B4 <AmiBlitz3.ab3@18577> BRA.w JL_0_B69A
0002F7BA <AmiBlitz3.ab3@18580>   MOVEA.l pushat,A1
0002F7BC <AmiBlitz3.ab3@18581>   MOVEQ.l #$00,D0
0002F7C2 <AmiBlitz3.ab3@18582>   MOVE.w pushclen,D0
0002F7C8 <AmiBlitz3.ab3@18583>   MOVEA.l _execbase,A6
0002F7CE <AmiBlitz3.ab3@18584>   MOVE.l mempool,a0
0002F7D2 <AmiBlitz3.ab3@18588>   MOVEM.l (A7)+,D0-D1/A0-A1
0002F7D4 <AmiBlitz3.ab3@18589> RTS
0002F7D6 <AmiBlitz3.ab3@18592>   MOVE.l D1,-(A7)                                          ;array mul
0002F7D8 <AmiBlitz3.ab3@18593>   MOVEQ.l #$00,D2
0002F7DA <AmiBlitz3.ab3@18594>   MOVEQ.l #$0F,D3
0002F7DC <AmiBlitz3.ab3@18597>     LSL.w #1,D1
0002F7E0 <AmiBlitz3.ab3@18598>     BCC.w JL_0_B6EE
0002F7E2 <AmiBlitz3.ab3@18599>     ADDQ.w #1,D2
0002F7E4 <AmiBlitz3.ab3@18600>     MOVE.w D3,D4
0002F7E8 <AmiBlitz3.ab3@18603>   DBF D3,JL_0_B6E4
0002F7EA <AmiBlitz3.ab3@18605>   SUBQ.w #1,D2
0002F7EE <AmiBlitz3.ab3@18606>    BNE.w JL_0_B726
0002F7F0 <AmiBlitz3.ab3@18607>   ADDQ.w #4,A7
0002F7F2 <AmiBlitz3.ab3@18608>   MOVE.w D4,D1
0002F7F6 <AmiBlitz3.ab3@18609>    BEQ.w JL_0_B724
0002F7FA <AmiBlitz3.ab3@18610>   CMP.w #$8,D1
0002F7FE <AmiBlitz3.ab3@18611>    BCS.w JL_0_B712
0002F802 <AmiBlitz3.ab3@18612>   SUBI.w #$8,D1
0002F806 <AmiBlitz3.ab3@18613>    BSR.w JL_0_B712
0002F808 <AmiBlitz3.ab3@18614>   MOVEQ.l #$00,D1
0002F80A <AmiBlitz3.ab3@18617>   LSL.w #8,D1
0002F80C <AmiBlitz3.ab3@18618>   LSL.w #1,D1
0002F810 <AmiBlitz3.ab3@18619>   ORI.w #$E188,D1
0002F816 <AmiBlitz3.ab3@18620>   OR.w regnum,D1
0002F81A <AmiBlitz3.ab3@18621> BRA.w writeword
0002F81C <AmiBlitz3.ab3@18624> RTS
0002F81E <AmiBlitz3.ab3@18627>   MOVEQ #0,d1
0002F824 <AmiBlitz3.ab3@18628>   MOVE.w regnum,D1
0002F826 <AmiBlitz3.ab3@18629>   LSL.l #8,D1
0002F828 <AmiBlitz3.ab3@18631>   LSL.l #4,d1
0002F82E <AmiBlitz3.ab3@18633>   OR.l #$4c3c0000,d1
0002F834 <AmiBlitz3.ab3@18634>   OR.w regnum,d1
0002F838 <AmiBlitz3.ab3@18635>   BSR.w writelong
0002F83A <AmiBlitz3.ab3@18636>   MOVE.l (A7)+,D1
0002F83E <AmiBlitz3.ab3@18638> BRA writelong
0002F844 <AmiBlitz3.ab3@18641>   MOVE.l destpointer,-(A7)
0002F846 <AmiBlitz3.ab3@18642>   MOVEQ.l #-$01,D7
0002F84A <AmiBlitz3.ab3@18645>     BSR.w findhilib
0002F84E <AmiBlitz3.ab3@18646>      BEQ.w JL_0_B8A4
0002F852 <AmiBlitz3.ab3@18647>     TST.w $C(A2)
0002F856 <AmiBlitz3.ab3@18648>      BPL.w JL_0_B746
0002F85A <AmiBlitz3.ab3@18650>     MOVE.l $16(A2),D1
0002F85E <AmiBlitz3.ab3@18651>     BEQ.w JL_0_B746
0002F862 <AmiBlitz3.ab3@18653>     MOVE.w $4(A2),D1                                       ; check state in D1 and do some things
0002F866 <AmiBlitz3.ab3@18654>     CMP.w #-$2,D1
0002F86A <AmiBlitz3.ab3@18655>      BNE.w JL_0_B772
0002F86E <AmiBlitz3.ab3@18656>     BSR.w makevsize
0002F872 <AmiBlitz3.ab3@18657> BRA.w JL_0_B7FE
0002F876 <AmiBlitz3.ab3@18660>     CMP.w #-$5C4,D1
0002F87A <AmiBlitz3.ab3@18661>      BNE.w JL_0_B790
0002F87E <AmiBlitz3.ab3@18662>     MOVE.w #$7000,D1
0002F886 <AmiBlitz3.ab3@18663>     BTST #$7,autorun
0002F888 <AmiBlitz3.ab3@18664>     SNE D1
0002F88C <AmiBlitz3.ab3@18665>     BSR.w writeword
0002F890 <AmiBlitz3.ab3@18666> BRA.w JL_0_B7FE
0002F894 <AmiBlitz3.ab3@18669>     CMP.w #-$12D,D1
0002F898 <AmiBlitz3.ab3@18670>      BNE.w JL_0_B7A0
0002F89C <AmiBlitz3.ab3@18671>     BSR.w makessize
0002F8A0 <AmiBlitz3.ab3@18672> BRA.w JL_0_B7FE
0002F8A4 <AmiBlitz3.ab3@18675>     CMP.w #-$1F5,D1
0002F8A8 <AmiBlitz3.ab3@18676>      BNE.w JL_0_B7C2
0002F8AC <AmiBlitz3.ab3@18677>     MOVE.w #$203C,D1
0002F8B0 <AmiBlitz3.ab3@18678>     BSR.w writeword
0002F8B4 <AmiBlitz3.ab3@18679>     BSR.w addoff
0002F8BA <AmiBlitz3.ab3@18680>     MOVE.l endop,D1
0002F8BE <AmiBlitz3.ab3@18681>     BSR.w writelong
0002F8C2 <AmiBlitz3.ab3@18682> BRA.w JL_0_B7FE
0002F8C6 <AmiBlitz3.ab3@18685>     CMP.w #-$3E9,D1
0002F8CA <AmiBlitz3.ab3@18686>      BNE.w JL_0_B7E4
0002F8CE <AmiBlitz3.ab3@18687>     MOVE.w #$203C,D1
0002F8D2 <AmiBlitz3.ab3@18688>     BSR.w writeword
0002F8D6 <AmiBlitz3.ab3@18689>     BSR.w addoff
0002F8DC <AmiBlitz3.ab3@18690>     MOVE.l data2at,D1
0002F8E0 <AmiBlitz3.ab3@18691>     BSR.w writelong
0002F8E4 <AmiBlitz3.ab3@18692> BRA.w JL_0_B7FE
0002F8E8 <AmiBlitz3.ab3@18695>     CMP.w #$1,D1
0002F8EC <AmiBlitz3.ab3@18696>      BNE.w JL_0_B7FE
0002F8F0 <AmiBlitz3.ab3@18697>     MOVE.w #$203C,D1
0002F8F4 <AmiBlitz3.ab3@18698>     BSR.w writeword
0002F8FA <AmiBlitz3.ab3@18699>     MOVE.l ptr_seg_debugger,D1
0002F8FE <AmiBlitz3.ab3@18700>     BSR.w writelong
0002F902 <AmiBlitz3.ab3@18703>     MOVE.l $16(A2),D1
0002F90A <AmiBlitz3.ab3@18704>     MOVE.w #$FFFF,lasta6
0002F90E <AmiBlitz3.ab3@18705>     BSR.w Amakelibsub
0002F914 <AmiBlitz3.ab3@18706>     CMPI.w #$FFFE,$4(A2)
0002F918 <AmiBlitz3.ab3@18707>      BNE.w JL_0_B83A
0002F91E <AmiBlitz3.ab3@18708>     MOVE.l intdata1,D1
0002F922 <AmiBlitz3.ab3@18709>      BEQ.w JL_0_B83A
0002F928 <AmiBlitz3.ab3@18710>     MOVE.w putidata1,D1
0002F92C <AmiBlitz3.ab3@18711>     BSR.w writeword
0002F930 <AmiBlitz3.ab3@18712>     BSR.w addoff
0002F936 <AmiBlitz3.ab3@18713>     MOVE.l intdata1,D1
0002F93A <AmiBlitz3.ab3@18714>     BSR.w writelong
0002F93E <AmiBlitz3.ab3@18717>     MOVE.w #$2B40,D1
0002F942 <AmiBlitz3.ab3@18718>     TST.w $1A(A2)
0002F946 <AmiBlitz3.ab3@18719>      BEQ.w JL_0_B746
0002F94A <AmiBlitz3.ab3@18720>      BPL.w JL_0_B84E
0002F94E <AmiBlitz3.ab3@18721>     MOVE.w #$3B40,D1
0002F952 <AmiBlitz3.ab3@18724>     BSR.w writeword
0002F956 <AmiBlitz3.ab3@18725>     MOVE.w $A(A2),D1
0002F95A <AmiBlitz3.ab3@18726>      BSR.w writeword
0002F960 <AmiBlitz3.ab3@18727>     CMPI.w #$FFFA,$4(A2)
0002F964 <AmiBlitz3.ab3@18728>      BNE.w JL_0_B746
0002F966 <AmiBlitz3.ab3@18729>     MOVE.w D7,-(A7)
0002F96C <AmiBlitz3.ab3@18730>     MOVE.w numstatic,D4
0002F970 <AmiBlitz3.ab3@18731>      BEQ.w JL_0_B882
0002F976 <AmiBlitz3.ab3@18732>     MOVE.l staticdata,D3
0002F97C <AmiBlitz3.ab3@18733>      JSR datastart
0002F980 <AmiBlitz3.ab3@18734>     MOVE.w #$C500,D1
0002F984 <AmiBlitz3.ab3@18735>      BSR.w tokejsr2
0002F98A <AmiBlitz3.ab3@18738>     MOVE.w maxsused,D4
0002F98E <AmiBlitz3.ab3@18739>      BEQ.w JL_0_B89E
0002F994 <AmiBlitz3.ab3@18740>     MOVE.l maxsat,D3
0002F99A <AmiBlitz3.ab3@18741>      JSR datastart
0002F99E <AmiBlitz3.ab3@18742>     MOVE.w #$CF00,D1
0002F9A2 <AmiBlitz3.ab3@18743>      BSR.w tokejsr2
0002F9A4 <AmiBlitz3.ab3@18746>     MOVE.w (A7)+,D7
0002F9A8 <AmiBlitz3.ab3@18747> BRA.w JL_0_B746
0002F9AE <AmiBlitz3.ab3@18750>   MOVE.l destpointer,D1
0002F9B0 <AmiBlitz3.ab3@18751>   CMP.l (A7),D1
0002F9B4 <AmiBlitz3.ab3@18752>    BNE.w JL_0_B8BC
0002F9BC <AmiBlitz3.ab3@18753>   MOVE.w #$0008,noinits+2
0002F9C0 <AmiBlitz3.ab3@18754> BRA.w JL_0_B8E6
0002F9C6 <AmiBlitz3.ab3@18757>   CLR.w noinits+2
0002F9CC <AmiBlitz3.ab3@18758>   MOVE.w dontwrite,D1
0002F9D0 <AmiBlitz3.ab3@18759>    BNE.w JL_0_B8DE
0002F9D6 <AmiBlitz3.ab3@18760>   TST.l newinitaddr
0002F9DA <AmiBlitz3.ab3@18761>    BEQ 'l10
0002F9E0 <AmiBlitz3.ab3@18762>   MOVE.l newinitaddr,D2
0002F9E6 <AmiBlitz3.ab3@18763>   SUB.l destbufferstart,D2
0002F9E8 <AmiBlitz3.ab3@18764>   ADDQ.l #2,d2
0002F9EE <AmiBlitz3.ab3@18765>   MOVEA.l newinitaddr,A0                                   ;write newinitcode
0002F9F2 <AmiBlitz3.ab3@18767>   MOVE.w #$4EB9,(A0)+
0002F9F4 <AmiBlitz3.ab3@18768>   MOVE.l (A7),(A0)+
0002F9F8 <AmiBlitz3.ab3@18770> BRA 'l20
0002F9FE <AmiBlitz3.ab3@18773>   MOVEA.l destbufferstart,A0                               ;write initcode
0002FA04 <AmiBlitz3.ab3@18774>   TST.b saved0
0002FA08 <AmiBlitz3.ab3@18775>   BEQ 'l1
0002FA0C <AmiBlitz3.ab3@18776>   MOVE.w #$23c0,(a0)+
0002FA0E <AmiBlitz3.ab3@18777>   MOVE.l a0,a1
0002FA10 <AmiBlitz3.ab3@18778>   ADDQ.l #6,a1
0002FA12 <AmiBlitz3.ab3@18779>   MOVE.l a1,(a0)+
0002FA14 <AmiBlitz3.ab3@18780>   MOVEQ.l #$02,D2
0002FA18 <AmiBlitz3.ab3@18781>   BSR.w addhunkoffset
0002FA1C <AmiBlitz3.ab3@18782>   MOVE.w #$6004,(a0)+
0002FA22 <AmiBlitz3.ab3@18783>   MOVE.l #$4e714e71,(a0)+
0002FA26 <AmiBlitz3.ab3@18786>   MOVE.w #$4EB9,(A0)+
0002FA28 <AmiBlitz3.ab3@18787>   MOVE.l (A7),(A0)+
0002FA2A <AmiBlitz3.ab3@18788>   MOVEQ #2,d2
0002FA30 <AmiBlitz3.ab3@18789>   TST.b saved0
0002FA34 <AmiBlitz3.ab3@18790>   BEQ 'l20
0002FA36 <AmiBlitz3.ab3@18791>   MOVEQ.l #14,D2
0002FA3A <AmiBlitz3.ab3@18794>   BSR.w addhunkoffset
0002FA3E <AmiBlitz3.ab3@18795>   MOVE.w #$2039,(a0)+
0002FA40 <AmiBlitz3.ab3@18796>   MOVE.l a1,(a0)+
0002FA42 <AmiBlitz3.ab3@18797>   MOVEQ.l #20,d2
0002FA46 <AmiBlitz3.ab3@18800>   BSR.w addhunkoffset
0002FA4A <AmiBlitz3.ab3@18803>   MOVE.w #$4E75,D1
0002FA4E <AmiBlitz3.ab3@18804>   BSR.w writeword
0002FA50 <AmiBlitz3.ab3@18807>   ADDQ.w #4,A7
0002FA52 <AmiBlitz3.ab3@18808> RTS
0002FA56 <AmiBlitz3.ab3@18813>   Dc.b $22,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D1
0002FA5C <AmiBlitz3.ab3@18815>   Dc.b $23,$CD,$00,$00,$00,$00                             ;MOVE.L  A5,$00000000
0002FA62 <AmiBlitz3.ab3@18817>   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0002FA68 <AmiBlitz3.ab3@18822>   MOVE.l stringbuffer,D1
0002FA6C <AmiBlitz3.ab3@18823> BRA.w makesize
0002FA6E <AmiBlitz3.ab3@18826>   MOVEQ.l #$00,D1
0002FA74 <AmiBlitz3.ab3@18827>   MOVE.w globalvarpointer,D1
0002FA78 <AmiBlitz3.ab3@18828>   SUBI.w #$8000,D1
0002FA7C <AmiBlitz3.ab3@18829>   BNE.w makesize
0002FA7E <AmiBlitz3.ab3@18830>     MOVEQ.l #$08,D1
0002FA80 <AmiBlitz3.ab3@18833>   MOVE.l D1,-(A7)
0002FA84 <AmiBlitz3.ab3@18834>   MOVE.w #$203C,D1
0002FA88 <AmiBlitz3.ab3@18835>   BSR.w writeword
0002FA8A <AmiBlitz3.ab3@18836>   MOVE.l (A7)+,D1
0002FA8E <AmiBlitz3.ab3@18837> BRA.w writelong
0002FA90 <AmiBlitz3.ab3@18845>   MOVEQ.l #$00,D1
0002FA96 <AmiBlitz3.ab3@18846>   MOVEA.l libpointer,A1
0002FA9A <AmiBlitz3.ab3@18849>     CMPA.w #$0,A1
0002FA9E <AmiBlitz3.ab3@18850>     BEQ.w findhilib__done
0002FAA2 <AmiBlitz3.ab3@18851>       CMP.w $4(A1),D7
0002FAA6 <AmiBlitz3.ab3@18852>       BLS.w findhilib__next
0002FAAA <AmiBlitz3.ab3@18853>         CMP.w $4(A1),D1
0002FAAE <AmiBlitz3.ab3@18854>         BCC.w findhilib__next
0002FAB2 <AmiBlitz3.ab3@18855>           MOVE.w $4(A1),D1
0002FAB4 <AmiBlitz3.ab3@18856>           MOVEA.l A1,A2
0002FAB6 <AmiBlitz3.ab3@18859>     MOVEA.l (A1),A1
0002FABA <AmiBlitz3.ab3@18860> BRA.w findhilib__loop
0002FABC <AmiBlitz3.ab3@18863>   MOVE.w D1,D7
0002FABE <AmiBlitz3.ab3@18864> RTS
0002FAC0 <AmiBlitz3.ab3@18872>   MOVEQ.l #-$01,D1
0002FAC6 <AmiBlitz3.ab3@18873>   MOVEA.l libpointer,A1
0002FACA <AmiBlitz3.ab3@18876>     CMPA.w #$0,A1
0002FACE <AmiBlitz3.ab3@18877>      BEQ.w findlolib__done
0002FAD2 <AmiBlitz3.ab3@18878>     CMP.w $4(A1),D7
0002FAD6 <AmiBlitz3.ab3@18879>      BCC.w findlolib__next
0002FADA <AmiBlitz3.ab3@18880>     CMP.w $4(A1),D1
0002FADE <AmiBlitz3.ab3@18881>      BLS.w findlolib__next
0002FAE2 <AmiBlitz3.ab3@18882>     MOVE.w $4(A1),D1
0002FAE4 <AmiBlitz3.ab3@18883>     MOVEA.l A1,A2
0002FAE6 <AmiBlitz3.ab3@18886>     MOVEA.l (A1),A1
0002FAEA <AmiBlitz3.ab3@18887> BRA.w findlolib__loop
0002FAEC <AmiBlitz3.ab3@18890>   MOVE.w D1,D7
0002FAF0 <AmiBlitz3.ab3@18891>   CMP.w #-$1,D1
0002FAF2 <AmiBlitz3.ab3@18892> RTS
0002FAF8 <AmiBlitz3.ab3@18896>   ADDQ.w #1,globalvarpointer
0002FB00 <AmiBlitz3.ab3@18897>   BCLR #$0,globalvarpointer+1
0002FB02 <AmiBlitz3.ab3@18898>   MOVEQ.l #$00,D7
0002FB06 <AmiBlitz3.ab3@18901>     BSR.w findlolib
0002FB0A <AmiBlitz3.ab3@18902>     BEQ.w JL_0_BA74
0002FB0E <AmiBlitz3.ab3@18903>     TST.w $C(A2)
0002FB12 <AmiBlitz3.ab3@18904>     BPL.w JL_0_B99A
0002FB14 <AmiBlitz3.ab3@18905>     MOVEA.l A2,A1
0002FB18 <AmiBlitz3.ab3@18906>     ADDA.l $12(A1),A1
0002FB1C <AmiBlitz3.ab3@18907>     TST.w -$2(A1)
0002FB20 <AmiBlitz3.ab3@18908>     BEQ.w JL_0_BA34
0002FB24 <AmiBlitz3.ab3@18909>     MOVE.l -$A(A1),D1
0002FB28 <AmiBlitz3.ab3@18910>     LEA $6(A2,D1.L),A3
0002FB2A <AmiBlitz3.ab3@18913>       TST.w (A3)+
0002FB2E <AmiBlitz3.ab3@18914>       BEQ.w JL_0_B9CC
0002FB30 <AmiBlitz3.ab3@18915>         ADDQ.w #2,A3
0002FB34 <AmiBlitz3.ab3@18916> BRA.w JL_0_B9C0
0002FB38 <AmiBlitz3.ab3@18919>     TST.l $4(A3)
0002FB3C <AmiBlitz3.ab3@18920>     BEQ.w JL_0_BA34
0002FB40 <AmiBlitz3.ab3@18921>       MOVE.w freemax(PC),D1
0002FB44 <AmiBlitz3.ab3@18922>       BSR.w writeword
0002FB48 <AmiBlitz3.ab3@18923>       MOVE.w -$4(A1),D1
0002FB4C <AmiBlitz3.ab3@18924>       BSR.w writeword
0002FB52 <AmiBlitz3.ab3@18925>       MOVE.l free,D1
0002FB56 <AmiBlitz3.ab3@18926>       MOVE.w -$6(A1),D1
0002FB5A <AmiBlitz3.ab3@18927>       BSR.w writelong
0002FB60 <AmiBlitz3.ab3@18928>       MOVE.l destpointer,-(A7)
0002FB62 <AmiBlitz3.ab3@18929>       MOVEQ.l #$01,D1
0002FB66 <AmiBlitz3.ab3@18930>       MOVE.w -$2(A1),D2
0002FB68 <AmiBlitz3.ab3@18931>       LSL.w D2,D1
0002FB6A <AmiBlitz3.ab3@18932>       MOVE.w D1,-(A7)
0002FB6E <AmiBlitz3.ab3@18933>       MOVE.l -$A(A1),D1
0002FB72 <AmiBlitz3.ab3@18934>       BSR.w Amakelibsub
0002FB76 <AmiBlitz3.ab3@18935>       MOVE.w freemax3(PC),D1
0002FB7A <AmiBlitz3.ab3@18936>       BSR.w writeword
0002FB7C <AmiBlitz3.ab3@18937>       MOVE.w (A7)+,D1
0002FB80 <AmiBlitz3.ab3@18938>       BSR.w writeword
0002FB84 <AmiBlitz3.ab3@18939>       MOVE.l freemax2(PC),D1
0002FB88 <AmiBlitz3.ab3@18940>       BSR.w writelong
0002FB8A <AmiBlitz3.ab3@18941>       MOVE.l (A7)+,D1
0002FB90 <AmiBlitz3.ab3@18942>       SUB.l destpointer,D1
0002FB94 <AmiBlitz3.ab3@18943>       BSR.w writeword
0002FB98 <AmiBlitz3.ab3@18944>       MOVE.w freemax4(PC),D1
0002FB9C <AmiBlitz3.ab3@18945>       BSR.w writeword
0002FBA0 <AmiBlitz3.ab3@18948>     MOVE.l $1C(A2),D1
0002FBA4 <AmiBlitz3.ab3@18949>     BEQ.w JL_0_B99A
0002FBA8 <AmiBlitz3.ab3@18951>     MOVE.w $4(A2),D1
0002FBAC <AmiBlitz3.ab3@18952>     CMP.w #-$2,D1
0002FBB0 <AmiBlitz3.ab3@18953>     BNE.w JL_0_BA50
0002FBB4 <AmiBlitz3.ab3@18954>       BSR.w makevsize
0002FBB8 <AmiBlitz3.ab3@18955> BRA.w JL_0_BA60
0002FBBC <AmiBlitz3.ab3@18958>     CMP.w #-$12D,D1
0002FBC0 <AmiBlitz3.ab3@18959>     BNE.w JL_0_BA60
0002FBC4 <AmiBlitz3.ab3@18960>       BSR.w makessize
0002FBC8 <AmiBlitz3.ab3@18961> BRA.w JL_0_BA60
0002FBCC <AmiBlitz3.ab3@18964>     MOVE.l $1C(A2),D1
0002FBD4 <AmiBlitz3.ab3@18965>     MOVE.w #$FFFF,lasta6
0002FBD8 <AmiBlitz3.ab3@18966>     BSR.w Amakelibsub
0002FBDC <AmiBlitz3.ab3@18967> BRA.w JL_0_B99A
0002FBDE <AmiBlitz3.ab3@18970> RTS
0002FBE2 <AmiBlitz3.ab3@18974> freemax:   Dc.b $3F,$3C,$00,$00                            ;MOVE.W  #$0000,-(A7)
0002FBE4 <AmiBlitz3.ab3@18976> freemax2:  Dc.b $53,$57                                    ;SUBQ.W  #1,(A7)
0002FBE8 <AmiBlitz3.ab3@18977>            Dc.b $66,$00,$FF,$FC                            ;BNE.W freemax2
0002FBEA <AmiBlitz3.ab3@18978> freemax4:  Dc.b $54,$4F                                    ;ADDQ.W  #2,A7
0002FBEE <AmiBlitz3.ab3@18979> freemax3:  Dc.b $47,$EB,$00,$00                            ;LEA $0000(A3),A3
0002FBF4 <AmiBlitz3.ab3@18984>   TST.b debugmode
0002FBF8 <AmiBlitz3.ab3@18985>    BEQ.b chkstak__skip
0002FBFE <AmiBlitz3.ab3@18986>   TST.w debugversion
0002FC02 <AmiBlitz3.ab3@18987>    BNE.b chkstak__skip
0002FC06 <AmiBlitz3.ab3@18988>   MOVE.w #$C308,D1
0002FC0A <AmiBlitz3.ab3@18989> BRA.w Atokejsr
0002FC0C <AmiBlitz3.ab3@18992> RTS
0002FC14 <AmiBlitz3.ab3@18996>   MOVE.w #$FFFF,lasta6
0002FC18 <AmiBlitz3.ab3@19001>   MOVEM.l D0-d7/A0-a6,-(A7)
0002FC20 <AmiBlitz3.ab3@19002>   MOVE.b #1,nostringopt
0002FC26 <AmiBlitz3.ab3@19003>   JSR searchinstr
0002FC28 <AmiBlitz3.ab3@19004>   MOVE.l A3,D1
0002FC2A <AmiBlitz3.ab3@19005>   SUB.l A2,D1
0002FC2E <AmiBlitz3.ab3@19006>   BSR.w Amakelibsub
0002FC32 <AmiBlitz3.ab3@19007>   MOVEM.l (A7)+,d0-d7/a0-a6
0002FC34 <AmiBlitz3.ab3@19008> RTS
0002FC3A <AmiBlitz3.ab3@19015>   MOVE.l libisat,-(A7)                                   ;library write
0002FC40 <AmiBlitz3.ab3@19016>   MOVE.l A2,libisat
0002FC42 <AmiBlitz3.ab3@19018>   MOVEA.l A1,A2
0002FC44 <AmiBlitz3.ab3@19019>   MOVE.w (A2)+,D1
0002FC4A <AmiBlitz3.ab3@19020>   MOVE.l a2,lastinstructionaddr
0002FC4E <AmiBlitz3.ab3@19021>   ANDI.w #$FF,D1
0002FC50 <AmiBlitz3.ab3@19022>   ADDA.w D1,A2
0002FC52 <AmiBlitz3.ab3@19023>   EXG.l D0,A2
0002FC54 <AmiBlitz3.ab3@19024>   ADDQ.l #1,D0
0002FC58 <AmiBlitz3.ab3@19025>   BCLR #$0,D0
0002FC5A <AmiBlitz3.ab3@19026>   EXG.l D0,A2
0002FC5E <AmiBlitz3.ab3@19027> BRA.w JL_0_BB08
0002FC64 <AmiBlitz3.ab3@19031>   MOVE.l libisat,-(A7)
0002FC6A <AmiBlitz3.ab3@19032>   MOVE.l A2,libisat
0002FC6C <AmiBlitz3.ab3@19033>   MOVEA.l A3,A2
0002FC70 <AmiBlitz3.ab3@19034> BRA.w JL_0_BB08
0002FC72 <AmiBlitz3.ab3@19038>   MOVE.l a1,-(a7)
0002FC74 <AmiBlitz3.ab3@19041>   MOVE.l d0,a0
0002FC78 <AmiBlitz3.ab3@19042>   MOVE.l $a(a0),d0
0002FC7A <AmiBlitz3.ab3@19043>   MOVE.l d0,a1
0002FC82 <AmiBlitz3.ab3@19044>   CMP.l #8,4(a1)
0002FC86 <AmiBlitz3.ab3@19045>   BLE 'norec
0002FC88 <AmiBlitz3.ab3@19046>   MOVE.l a0,-(a7)
0002FC8E <AmiBlitz3.ab3@19047>   MOVE.l typebase,-(a7)
0002FC90 <AmiBlitz3.ab3@19048>   MOVEQ #0,d0
0002FC94 <AmiBlitz3.ab3@19049>   MOVE.w 4(a0),d0
0002FC9A <AmiBlitz3.ab3@19050>   ADD.l d0,typebase
0002FC9E <AmiBlitz3.ab3@19051>   MOVE.l $4(a1),d0
0002FCA2 <AmiBlitz3.ab3@19052>   BSR scantype
0002FCA8 <AmiBlitz3.ab3@19053>   MOVE.l (a7)+,typebase
0002FCAA <AmiBlitz3.ab3@19054>   MOVE.l (a7)+,a0
0002FCB0 <AmiBlitz3.ab3@19057>   CMP.l #newtype_string,d0
0002FCB4 <AmiBlitz3.ab3@19058>   BNE 'nostring
0002FCBA <AmiBlitz3.ab3@19059>   ADDQ #2,a2offset
0002FCC0 <AmiBlitz3.ab3@19060>   MOVE.l #$3f3c0000,d1
0002FCC2 <AmiBlitz3.ab3@19061>   MOVEQ #0,d0
0002FCC6 <AmiBlitz3.ab3@19062>   MOVE.w 4(a0),d0
0002FCCC <AmiBlitz3.ab3@19063>   ADD.l typebase,d0
0002FCCE <AmiBlitz3.ab3@19064>   MOVE.w d0,d1
0002FCD2 <AmiBlitz3.ab3@19065>   BSR writelong
0002FCD8 <AmiBlitz3.ab3@19066>   TST.b debugmode
0002FCDC <AmiBlitz3.ab3@19067>   BEQ 'l1a
0002FCDE <AmiBlitz3.ab3@19068>   MOVE.l d1,-(a7)
0002FCE4 <AmiBlitz3.ab3@19069>   MOVE.l #$c308,d1
0002FCEA <AmiBlitz3.ab3@19070>   JSR Atokejsr
0002FCEC <AmiBlitz3.ab3@19071>   MOVE.l (a7)+,d1
0002FCF0 <AmiBlitz3.ab3@19074>   TST.w 8(a0)
0002FCF4 <AmiBlitz3.ab3@19075>   BEQ 'nostring
0002FCF8 <AmiBlitz3.ab3@19076>   MOVEM.l d2/d3,-(a7)
0002FCFA <AmiBlitz3.ab3@19077>   MOVE.l d1,d2
0002FCFC <AmiBlitz3.ab3@19078>   MOVEQ #0,d3
0002FD00 <AmiBlitz3.ab3@19079>   MOVE.w 8(a0),d3
0002FD02 <AmiBlitz3.ab3@19080>   SUBQ.l #1,d3
0002FD06 <AmiBlitz3.ab3@19081>   BEQ 'nostring2
0002FD08 <AmiBlitz3.ab3@19084>   ADDQ.l #4,d2
0002FD0A <AmiBlitz3.ab3@19085>   MOVE.l d2,d1
0002FD0E <AmiBlitz3.ab3@19086>   BSR writelong
0002FD14 <AmiBlitz3.ab3@19087>   TST.b debugmode
0002FD18 <AmiBlitz3.ab3@19088>   BEQ 'l1
0002FD1E <AmiBlitz3.ab3@19089>   MOVE.l #$c308,d1
0002FD24 <AmiBlitz3.ab3@19090>   JSR Atokejsr
0002FD2A <AmiBlitz3.ab3@19093>   ADDQ #2,a2offset
0002FD2C <AmiBlitz3.ab3@19094>   SUBQ.l #1,d3
0002FD30 <AmiBlitz3.ab3@19095>   BNE 'loop
0002FD34 <AmiBlitz3.ab3@19098>   MOVEM.l (a7)+,d2/d3
0002FD36 <AmiBlitz3.ab3@19101>   MOVE.l (a0),d0
0002FD3A <AmiBlitz3.ab3@19102>   BNE 'more
0002FD3C <AmiBlitz3.ab3@19103>   MOVE.l (a7)+,a1
0002FD3E <AmiBlitz3.ab3@19104> RTS
0002FD42 <AmiBlitz3.ab3@19107> libisat:   Ds.l 1
0002FD48 <AmiBlitz3.ab3@19113>   MOVE.l libisat,-(A7)                                   
0002FD4E <AmiBlitz3.ab3@19114>   MOVE.l A2,libisat
0002FD52 <AmiBlitz3.ab3@19115>   LEA $6(A2,D1.L),A2
0002FD5A <AmiBlitz3.ab3@19119>   CMP.l #$3e19436c,$1c-8(a2)                               ;clear type
0002FD5E <AmiBlitz3.ab3@19120>   BEQ 'dowritevar
0002FD66 <AmiBlitz3.ab3@19121>   CMP.l #$3e18436f,$1c-8(a2)                               ;copy type
0002FD6A <AmiBlitz3.ab3@19122>   BEQ 'dowritevar
0002FD72 <AmiBlitz3.ab3@19123>   CMP.l #$3e175265,$1c(a2)
0002FD76 <AmiBlitz3.ab3@19124>   BEQ 'dowritevar
0002FD7E <AmiBlitz3.ab3@19125>   CMP.l #$3e165772,$1c(a2)
0002FD82 <AmiBlitz3.ab3@19126>   BNE 'nowritef
0002FD86 <AmiBlitz3.ab3@19129>   MOVEM.l a0-a2/d2,-(a7)
0002FD88 <AmiBlitz3.ab3@19130>   MOVEQ #0,d1
0002FD92 <AmiBlitz3.ab3@19131>   MOVE.l #0,typebase
0002FD96 <AmiBlitz3.ab3@19132>   MOVE.l $a(a3),a0
0002FD9A <AmiBlitz3.ab3@19133>   MOVE.l $4(a0),d0
0002FDA0 <AmiBlitz3.ab3@19134>   CMP.l #8,d0
0002FDA4 <AmiBlitz3.ab3@19135>   BLE 'notype
0002FDA8 <AmiBlitz3.ab3@19136>   BSR scantype
0002FDAE <AmiBlitz3.ab3@19139>   MOVE.l #$3f3c0000,d1
0002FDB4 <AmiBlitz3.ab3@19140>   MOVE.w a2offset,d1
0002FDB8 <AmiBlitz3.ab3@19141>   BSR writelong
0002FDBE <AmiBlitz3.ab3@19142>   MOVE.l #$3f3c0000,d1
0002FDC2 <AmiBlitz3.ab3@19143>   MOVE.l $a(a3),a0
0002FDC6 <AmiBlitz3.ab3@19144>   MOVE.w 8(a0),d1
0002FDCA <AmiBlitz3.ab3@19145>   BSR writelong
0002FDD0 <AmiBlitz3.ab3@19146>   MOVE.l #$3f3cab12,d1
0002FDD4 <AmiBlitz3.ab3@19147>   BSR writelong
0002FDDA <AmiBlitz3.ab3@19148>   ADDQ.w #6,a2offset
0002FDDE <AmiBlitz3.ab3@19149>   MOVEM.l (a7)+,a0-a2/d2
0002FDE4 <AmiBlitz3.ab3@19152>   TST.b fpu
0002FDE8 <AmiBlitz3.ab3@19153>   BEQ 'nofpu2
0002FDF0 <AmiBlitz3.ab3@19154>   CMP.l #$496e7400,$1a(a2)
0002FDF4 <AmiBlitz3.ab3@19155>   BNE 'noint
0002FDF6 <AmiBlitz3.ab3@19156>   MOVEQ #0,d1
0002FDFC <AmiBlitz3.ab3@19157>   SUBQ.l #8,destpointer                                    ;fpu int
0002FE02 <AmiBlitz3.ab3@19158>   CLR.w a2offset
0002FE06 <AmiBlitz3.ab3@19159>   CMP.b #2,d2
0002FE0A <AmiBlitz3.ab3@19160>   BGT 'noword
0002FE0E <AmiBlitz3.ab3@19161>   MOVE.w #$48c0,d1
0002FE14 <AmiBlitz3.ab3@19162>   OR.w regnumstore,d1
0002FE18 <AmiBlitz3.ab3@19163>   BSR writeword
0002FE1C <AmiBlitz3.ab3@19164> BRA 'exit2
0002FE20 <AmiBlitz3.ab3@19167>    CMP.b #3,d2
0002FE24 <AmiBlitz3.ab3@19168>         BNE 'nolong
0002FE28 <AmiBlitz3.ab3@19169> BRA 'exit2
0002FE2C <AmiBlitz3.ab3@19172>    CMP.b #4,d2
0002FE30 <AmiBlitz3.ab3@19173>         BNE 'noquick
0002FE34 <AmiBlitz3.ab3@19174>         MOVE.w #$e080,d1
0002FE3A <AmiBlitz3.ab3@19175>         OR.w regnumstore,d1
0002FE3E <AmiBlitz3.ab3@19176>         BSR writeword
0002FE42 <AmiBlitz3.ab3@19177>         MOVE.w #$e080,d1
0002FE48 <AmiBlitz3.ab3@19178>         OR.w regnumstore,d1
0002FE4C <AmiBlitz3.ab3@19179>         BSR writeword
0002FE50 <AmiBlitz3.ab3@19180> BRA 'exit2
0002FE52 <AmiBlitz3.ab3@19183>         MOVEQ #0,d0
0002FE54 <AmiBlitz3.ab3@19184>         MOVEQ #0,d1
0002FE5A <AmiBlitz3.ab3@19185>         MOVE.w regnumstore,d0
0002FE5C <AmiBlitz3.ab3@19186>         ASL.l #7,d0
0002FE62 <AmiBlitz3.ab3@19187>         OR.l #$f23c4428,d1                                 ;fsub.s 0.5,fpx
0002FE64 <AmiBlitz3.ab3@19188>         OR.l d0,d1
0002FE6A <AmiBlitz3.ab3@19190>         MOVE.l #$3f000000,d1
0002FE6C <AmiBlitz3.ab3@19192>         MOVEQ #0,d0
0002FE6E <AmiBlitz3.ab3@19193>         MOVEQ #0,d1
0002FE74 <AmiBlitz3.ab3@19194>         MOVE.w regnumstore,d0
0002FE76 <AmiBlitz3.ab3@19195>         ASL.l #7,d0
0002FE78 <AmiBlitz3.ab3@19196>         MOVE.l d0,d1
0002FE7E <AmiBlitz3.ab3@19197>         OR.l #$f2000003,d1                                 ;fintrz fpx
0002FE80 <AmiBlitz3.ab3@19198>         ASL.l #3,d0
0002FE82 <AmiBlitz3.ab3@19199>         OR.l d0,d1
0002FE86 <AmiBlitz3.ab3@19200>         BSR writelong
0002FE88 <AmiBlitz3.ab3@19201>         MOVEQ #0,d0
0002FE8E <AmiBlitz3.ab3@19202>         MOVE.w regnumstore,d0
0002FE90 <AmiBlitz3.ab3@19203>         ASL.l #7,d0
0002FE96 <AmiBlitz3.ab3@19204>         MOVE.l #$f2006000,d1                               ;fmove.l fp0,d0
0002FE98 <AmiBlitz3.ab3@19205>         OR.l d0,d1
0002FE9A <AmiBlitz3.ab3@19206>         ASL.l #1,d0
0002FE9C <AmiBlitz3.ab3@19207>         ASL.l #8,d0
0002FE9E <AmiBlitz3.ab3@19208>         OR.l d0,d1
0002FEA2 <AmiBlitz3.ab3@19209> BRA 'exit
0002FEA8 <AmiBlitz3.ab3@19212>   CMP.w #$3c01,24(a2)
0002FEAC <AmiBlitz3.ab3@19213>   BNE 'noval
0002FEAE <AmiBlitz3.ab3@19214>   MOVE.l a2,-(a7)
0002FEB2 <AmiBlitz3.ab3@19215>   BSR.w JL_0_BB14
0002FEB4 <AmiBlitz3.ab3@19216>   MOVE.l (a7)+,a2
0002FEB8 <AmiBlitz3.ab3@19217> BRA 'exit2
0002FEC0 <AmiBlitz3.ab3@19234>   CMP.l #$41627300,$1a(a2)
0002FEC4 <AmiBlitz3.ab3@19235>   BNE 'noabs
0002FEC6 <AmiBlitz3.ab3@19236>   MOVEQ #0,d1
0002FECC <AmiBlitz3.ab3@19237>   MOVE.w regnumstore,d1
0002FECE <AmiBlitz3.ab3@19238>   MOVE.w d1,d0
0002FED0 <AmiBlitz3.ab3@19239>   ASL.w #7,d1
0002FED2 <AmiBlitz3.ab3@19240>   ASL.w #8,d0
0002FED4 <AmiBlitz3.ab3@19241>   ASL.w #2,d0
0002FED6 <AmiBlitz3.ab3@19242>   OR.w d0,d1
0002FEDC <AmiBlitz3.ab3@19243>   SUBQ.l #8,destpointer                                    ;fpu abs
0002FEE0 <AmiBlitz3.ab3@19244>   MOVEM.l d3/d1,-(a7)
0002FEE4 <AmiBlitz3.ab3@19245>   MOVE.w #5,d3
0002FEE6 <AmiBlitz3.ab3@19246>   EXG d2,d3
0002FEEC <AmiBlitz3.ab3@19247>   MOVE.w regnum,-(a7)
0002FEF6 <AmiBlitz3.ab3@19248>   MOVE.w regnumstore,regnum
0002FEFA <AmiBlitz3.ab3@19249>   BSR writeconvertcode
0002FF00 <AmiBlitz3.ab3@19250>   MOVE.w (a7)+,regnum
0002FF02 <AmiBlitz3.ab3@19251>   EXG d2,d3
0002FF06 <AmiBlitz3.ab3@19252>   MOVEM.l (a7)+,d3/d1
0002FF0C <AmiBlitz3.ab3@19253>   OR.l #$f2000018,d1
0002FF12 <AmiBlitz3.ab3@19254>   CLR.w a2offset
0002FF16 <AmiBlitz3.ab3@19255> BRA 'exit
0002FF1A <AmiBlitz3.ab3@19258>   CMP.b #5,d2
0002FF1E <AmiBlitz3.ab3@19259>   BNE 'nofpu2
0002FF22 <AmiBlitz3.ab3@19260>   MOVE.b 24(a2),d0
0002FF26 <AmiBlitz3.ab3@19261>   CMP.b #$60,d0                                            ;nolib $edxx
0002FF2A <AmiBlitz3.ab3@19262>   BNE 'nofpu
0002FF2C <AmiBlitz3.ab3@19263>   MOVEQ #0,d1
0002FF32 <AmiBlitz3.ab3@19264>   MOVE.w regnumstore,d1
0002FF34 <AmiBlitz3.ab3@19265>   MOVE.w d1,d0
0002FF36 <AmiBlitz3.ab3@19266>   ASL.w #7,d1
0002FF38 <AmiBlitz3.ab3@19267>   ASL.w #8,d0
0002FF3A <AmiBlitz3.ab3@19268>   ASL.w #2,d0
0002FF3C <AmiBlitz3.ab3@19269>   OR.w d0,d1
0002FF40 <AmiBlitz3.ab3@19270>   MOVE.b 25(a2),d0
0002FF44 <AmiBlitz3.ab3@19271>   CMP.b #5,d0
0002FF48 <AmiBlitz3.ab3@19272>   BNE 'nocos
0002FF4E <AmiBlitz3.ab3@19273>   OR.l #$f200001d,d1                                       ;fpu cos
0002FF52 <AmiBlitz3.ab3@19274> BRA 'exit
0002FF56 <AmiBlitz3.ab3@19277>   CMP.b #$c,d0
0002FF5A <AmiBlitz3.ab3@19278>   BNE 'nosqr
0002FF60 <AmiBlitz3.ab3@19279>   OR.l #$f2000004,d1                                       ;fpu sqr
0002FF64 <AmiBlitz3.ab3@19280> BRA 'exit
0002FF68 <AmiBlitz3.ab3@19283>   CMP.b #$d,d0
0002FF6C <AmiBlitz3.ab3@19284>   BNE 'notan
0002FF72 <AmiBlitz3.ab3@19285>   OR.l #$f200000f,d1                                       ;fpu tan
0002FF76 <AmiBlitz3.ab3@19286> BRA 'exit
0002FF7A <AmiBlitz3.ab3@19289>   CMP.b #$a,d0
0002FF7E <AmiBlitz3.ab3@19290>   BNE 'nosin
0002FF84 <AmiBlitz3.ab3@19291>   OR.l #$f200000e,d1                                       ;fpu sin
0002FF88 <AmiBlitz3.ab3@19292> BRA 'exit
0002FF8C <AmiBlitz3.ab3@19295>   CMP.b #$3,d0
0002FF90 <AmiBlitz3.ab3@19296>   BNE 'noasin
0002FF96 <AmiBlitz3.ab3@19297>   OR.l #$f200000c,d1                                       ;fpu asin
0002FF9A <AmiBlitz3.ab3@19298> BRA 'exit
0002FF9E <AmiBlitz3.ab3@19301>   CMP.b #$2,d0
0002FFA2 <AmiBlitz3.ab3@19302>   BNE 'noacos
0002FFA8 <AmiBlitz3.ab3@19303>   OR.l #$f200001c,d1                                       ;fpu acos
0002FFAC <AmiBlitz3.ab3@19304> BRA 'exit
0002FFB0 <AmiBlitz3.ab3@19307>   CMP.b #$4,d0
0002FFB4 <AmiBlitz3.ab3@19308>   BNE 'noatan
0002FFBA <AmiBlitz3.ab3@19309>   OR.l #$f200000a,d1                                       ;fpu atan
0002FFBE <AmiBlitz3.ab3@19310> BRA 'exit
0002FFC2 <AmiBlitz3.ab3@19313>   CMP.b #$e,d0
0002FFC6 <AmiBlitz3.ab3@19314>   BNE 'nohtan
0002FFCC <AmiBlitz3.ab3@19315>   OR.l #$f2000009,d1                                       ;fpu htan
0002FFD0 <AmiBlitz3.ab3@19316> BRA 'exit
0002FFD4 <AmiBlitz3.ab3@19319>   CMP.b #$6,d0
0002FFD8 <AmiBlitz3.ab3@19320>   BNE 'nohcos
0002FFDE <AmiBlitz3.ab3@19321>   OR.l #$f2000019,d1                                       ;fpu hcos
0002FFE2 <AmiBlitz3.ab3@19322> BRA 'exit
0002FFE6 <AmiBlitz3.ab3@19325>   CMP.b #$b,d0
0002FFEA <AmiBlitz3.ab3@19326>   BNE 'nohsin
0002FFF0 <AmiBlitz3.ab3@19327>   OR.l #$f2000002,d1                                       ;fpu hsin
0002FFF4 <AmiBlitz3.ab3@19328> BRA 'exit
0002FFF8 <AmiBlitz3.ab3@19331>   CMP.b #$9,d0
0002FFFC <AmiBlitz3.ab3@19332>   BNE 'nolog
00030002 <AmiBlitz3.ab3@19333>   OR.l #$f2000014,d1                                       ;fpu log
00030006 <AmiBlitz3.ab3@19334> BRA 'exit
0003000A <AmiBlitz3.ab3@19337>   CMP.b #$8,d0
0003000E <AmiBlitz3.ab3@19338>   BNE 'nolog10
00030014 <AmiBlitz3.ab3@19339>   OR.l #$f2000015,d1                                       ;fpu log10
00030018 <AmiBlitz3.ab3@19340> BRA 'exit
0003001C <AmiBlitz3.ab3@19343>   CMP.b #$7,d0
00030020 <AmiBlitz3.ab3@19344>   BNE 'noexp
00030026 <AmiBlitz3.ab3@19345>   OR.l #$f2000010,d1                                       ;fpu exp
0003002A <AmiBlitz3.ab3@19346> BRA 'exit
00030030 <AmiBlitz3.ab3@19349>   LEA fpuerr,a0
00030032 <AmiBlitz3.ab3@19350>   MOVE.l a0,-(a7)
00030038 <AmiBlitz3.ab3@19351> JMP handle_compileerror
0003003C <AmiBlitz3.ab3@19355>   CMP.b #$3c,d0
00030040 <AmiBlitz3.ab3@19356>   BNE 'nofpu2
00030042 <AmiBlitz3.ab3@19357>   MOVEQ #0,d1
00030048 <AmiBlitz3.ab3@19358>       MOVE.w regnumstore,d1
0003004A <AmiBlitz3.ab3@19359>       MOVE.w d1,d0
0003004C <AmiBlitz3.ab3@19360>       ASL.w #7,d1
0003004E <AmiBlitz3.ab3@19361>       ASL.w #8,d0
00030050 <AmiBlitz3.ab3@19362>       ASL.w #2,d0
00030052 <AmiBlitz3.ab3@19363>       OR.w d0,d1
00030058 <AmiBlitz3.ab3@19364>       CMP.b #$03,25(a2)
0003005C <AmiBlitz3.ab3@19365>       BNE 'nosgn
00030062 <AmiBlitz3.ab3@19368>       SUBQ.l #8,destpointer                                ;fpu sgn
00030068 <AmiBlitz3.ab3@19369>         OR.l #$f200003a,d1
0003006C <AmiBlitz3.ab3@19370>         BSR writelong
00030072 <AmiBlitz3.ab3@19371>         CLR.w a2offset
00030078 <AmiBlitz3.ab3@19372>          MOVE.l #$F28E0006,d1
0003007C <AmiBlitz3.ab3@19373>          BSR writelong
00030082 <AmiBlitz3.ab3@19374>   MOVE.l #$7000600a,d1
00030086 <AmiBlitz3.ab3@19375>   BSR writelong
0003008C <AmiBlitz3.ab3@19376>   MOVE.l #$70014840,d1
00030090 <AmiBlitz3.ab3@19377>   BSR writelong
00030096 <AmiBlitz3.ab3@19378>   MOVE.l #$F292,d1
0003009A <AmiBlitz3.ab3@19379>   BSR writeword
000300A0 <AmiBlitz3.ab3@19380>   MOVE.l #$000470FF,d1
000300A4 <AmiBlitz3.ab3@19381> BRA 'exit
000300AC <AmiBlitz3.ab3@19384>   CMP.l #"Frac",$1a(a2)
000300B0 <AmiBlitz3.ab3@19385>   BNE 'nofrac
000300B6 <AmiBlitz3.ab3@19386> JMP notwork
000300BA <AmiBlitz3.ab3@19427> BRA 'exit
000300BE <AmiBlitz3.ab3@19431>   BSR.w JL_0_BB14                                          ;write lib code
000300C4 <AmiBlitz3.ab3@19432>   MOVE.l (A7)+,libisat
000300C6 <AmiBlitz3.ab3@19433> RTS
000300CA <AmiBlitz3.ab3@19436>   BSR writelong
000300D0 <AmiBlitz3.ab3@19439>   MOVE.l (A7)+,libisat
000300D2 <AmiBlitz3.ab3@19440> RTS
000300D6 <AmiBlitz3.ab3@19444>   BSR.w fetchregs
000300DC <AmiBlitz3.ab3@19445>   TST.b debugmode
000300E0 <AmiBlitz3.ab3@19446>    BEQ.w JL_0_BB76
000300E2 <AmiBlitz3.ab3@19447>   MOVE.l (A2),D1
000300E6 <AmiBlitz3.ab3@19448>   OR.l $8(A2),D1
000300EA <AmiBlitz3.ab3@19449>   BCLR #$0,D1
000300EC <AmiBlitz3.ab3@19450>   TST.l D1
000300F0 <AmiBlitz3.ab3@19451>    BEQ.w JL_0_BB76
000300F2 <AmiBlitz3.ab3@19452>   MOVE.l (A2)+,D1
000300F6 <AmiBlitz3.ab3@19453>   BTST #$0,D1
000300FA <AmiBlitz3.ab3@19454>    BEQ.w JL_0_BB60
00030100 <AmiBlitz3.ab3@19455>   TST.w blitzmode
00030104 <AmiBlitz3.ab3@19456>    BPL.w blitzerr
0003010A <AmiBlitz3.ab3@19457>   TST.b debugmode
0003010E <AmiBlitz3.ab3@19458>    BEQ.w JL_0_BB5C
00030110 <AmiBlitz3.ab3@19459>   MOVE.l D1,-(A7)
00030114 <AmiBlitz3.ab3@19460>   MOVE.w #$C311,D1
00030118 <AmiBlitz3.ab3@19461>    BSR.w makebtst
0003011A <AmiBlitz3.ab3@19462>   MOVE.l (A7)+,D1
0003011E <AmiBlitz3.ab3@19465>   BCLR #$0,D1
00030120 <AmiBlitz3.ab3@19468>   TST.l D1
00030124 <AmiBlitz3.ab3@19469>    BSR.w JL_0_BBC6
00030126 <AmiBlitz3.ab3@19470>   MOVE.l (A2)+,D1
0003012A <AmiBlitz3.ab3@19471>    BSR.w JL_0_BB98
0003012C <AmiBlitz3.ab3@19472>   MOVE.l (A2)+,D1
00030130 <AmiBlitz3.ab3@19473>    BSR.w JL_0_BBC6
00030134 <AmiBlitz3.ab3@19474> BRA.w JL_0_BB90
0003013A <AmiBlitz3.ab3@19477>   BTST #$0,$3(A2)
0003013E <AmiBlitz3.ab3@19478>    BEQ.w JL_0_BB88
00030142 <AmiBlitz3.ab3@19479>   MOVE.w blitzmode(PC),D1
00030146 <AmiBlitz3.ab3@19480>    BPL.w blitzerr
0003014A <AmiBlitz3.ab3@19483>   MOVE.l $4(A2),D1
0003014E <AmiBlitz3.ab3@19484>    BSR.w JL_0_BB98
00030154 <AmiBlitz3.ab3@19487>   MOVEA.l libisat,A2
00030156 <AmiBlitz3.ab3@19488> RTS
0003015A <AmiBlitz3.ab3@19491>   BTST #$0,D1
0003015E <AmiBlitz3.ab3@19492>    BEQ.w JL_0_BBC4
00030164 <AmiBlitz3.ab3@19493>   TST.w blitzmode
00030168 <AmiBlitz3.ab3@19494>    BMI.w amigaerr
0003016E <AmiBlitz3.ab3@19495>   TST.b debugmode
00030172 <AmiBlitz3.ab3@19496>    BEQ.w JL_0_BBC0
00030174 <AmiBlitz3.ab3@19497>   MOVE.l D1,-(A7)
00030178 <AmiBlitz3.ab3@19498>   MOVE.w #$C312,D1
0003017C <AmiBlitz3.ab3@19499>    BSR.w makebtst
0003017E <AmiBlitz3.ab3@19500>   MOVE.l (A7)+,D1
00030182 <AmiBlitz3.ab3@19503>   BCLR #$0,D1
00030184 <AmiBlitz3.ab3@19506>   TST.l D1
00030188 <AmiBlitz3.ab3@19509>    BEQ.w JL_0_BBD2
0003018A <AmiBlitz3.ab3@19510>   MOVE.l A1,-(A7)
0003018E <AmiBlitz3.ab3@19511>    BSR.w JL_0_BBD4
00030190 <AmiBlitz3.ab3@19512>   MOVEA.l (A7)+,A1
00030192 <AmiBlitz3.ab3@19515> RTS
00030198 <AmiBlitz3.ab3@19518>   MOVEA.l libisat,A0
0003019E <AmiBlitz3.ab3@19519>   TST.w cfetchmode
000301A2 <AmiBlitz3.ab3@19520>    BEQ.w JL_0_BBF6
000301A4 <AmiBlitz3.ab3@19521>   ADD.l A0,D1
000301A6 <AmiBlitz3.ab3@19522>   MOVE.l D1,-(A7)
000301AA <AmiBlitz3.ab3@19523>   MOVE.w #$4EB9,D1
000301AE <AmiBlitz3.ab3@19524>    BSR.w writeword
000301B0 <AmiBlitz3.ab3@19525>   MOVE.l (A7)+,D1
000301B4 <AmiBlitz3.ab3@19526> BRA.w writelong
000301B8 <AmiBlitz3.ab3@19529>   LEA $0(A0,D1.L),A1
000301BE <AmiBlitz3.ab3@19530>   CLR.w inline
000301C2 <AmiBlitz3.ab3@19533>   CMPI.b #$A0,(A1)+
000301C6 <AmiBlitz3.ab3@19534>    BNE.w JL_0_BC68
000301C8 <AmiBlitz3.ab3@19535>   TST.b (A1)+
000301CC <AmiBlitz3.ab3@19536>    BEQ.w JL_0_BC18
000301D2 <AmiBlitz3.ab3@19537>   CMPI.b #$1,-$1(A1)
000301D6 <AmiBlitz3.ab3@19538>    BEQ.w JL_0_BC24
000301DC <AmiBlitz3.ab3@19541>   MOVE.w (A1)+,inline
000301DE <AmiBlitz3.ab3@19542>   ADDQ.l #4,D1
000301E2 <AmiBlitz3.ab3@19543> BRA.w JL_0_BC00
000301E8 <AmiBlitz3.ab3@19546>   TST.w blitzmode
000301EC <AmiBlitz3.ab3@19547>    BPL.w JL_0_BC4A
000301F2 <AmiBlitz3.ab3@19548>   TST.b debugmode
000301F6 <AmiBlitz3.ab3@19549>    BEQ.w JL_0_BC40
000301FA <AmiBlitz3.ab3@19550>   MOVE.w #$C311,D1
000301FE <AmiBlitz3.ab3@19551>    BSR.w makebtst
00030200 <AmiBlitz3.ab3@19554>   MOVE.l (A1)+,D1
00030204 <AmiBlitz3.ab3@19555>   LEA $0(A0,D1.L),A1
00030208 <AmiBlitz3.ab3@19556> BRA.w JL_0_BC00
0003020E <AmiBlitz3.ab3@19559>   TST.b debugmode
00030212 <AmiBlitz3.ab3@19560>    BEQ.w JL_0_BC60
00030214 <AmiBlitz3.ab3@19561>   MOVE.l D1,-(A7)
00030218 <AmiBlitz3.ab3@19562>   MOVE.w #$C312,D1
0003021C <AmiBlitz3.ab3@19563>    BSR.w makebtst
0003021E <AmiBlitz3.ab3@19564>   MOVE.l (A7)+,D1
00030220 <AmiBlitz3.ab3@19567>   ADDQ.w #4,A1
00030222 <AmiBlitz3.ab3@19568>   ADDQ.l #6,D1
00030226 <AmiBlitz3.ab3@19569> BRA.w JL_0_BC00
0003022C <AmiBlitz3.ab3@19572>   TST.w inline
00030230 <AmiBlitz3.ab3@19573>    BEQ.w JL_0_BC7E
00030232 <AmiBlitz3.ab3@19574>   SUBQ.w #1,A1
00030234 <AmiBlitz3.ab3@19575>   MOVEA.l A1,A0
00030238 <AmiBlitz3.ab3@19576>   ADDA.w inline(PC),A1
0003023C <AmiBlitz3.ab3@19577> BRA.w pokecode2
00030240 <AmiBlitz3.ab3@19580>   MOVEM.l a0/D1,-(A7)
00030246 <AmiBlitz3.ab3@19581>   TST.w debugversion
0003024A <AmiBlitz3.ab3@19582>   BEQ 'l11
00030252 <AmiBlitz3.ab3@19583>   BTST #$7,link_debuginfo
00030256 <AmiBlitz3.ab3@19584>   BEQ.w 'l11
0003025C <AmiBlitz3.ab3@19585>   MOVE.l lastinstruction,d1
00030260 <AmiBlitz3.ab3@19586>   BEQ 'l11
00030266 <AmiBlitz3.ab3@19587>   CLR.l lastinstruction
0003026C <AmiBlitz3.ab3@19588>   CMP.l #$e000,d1
00030270 <AmiBlitz3.ab3@19589>   BGE 'ln99
00030276 <AmiBlitz3.ab3@19590>   LEA notf,a0
0003027C <AmiBlitz3.ab3@19591>   CMP.l #$c601,d1
00030280 <AmiBlitz3.ab3@19592>   BNE 'ln1
00030286 <AmiBlitz3.ab3@19593>   LEA strcpy,a0
0003028A <AmiBlitz3.ab3@19594> BRA 'ln3
00030290 <AmiBlitz3.ab3@19597>   CMP.l #$c700,d1
00030294 <AmiBlitz3.ab3@19598>   BNE 'ln2
0003029A <AmiBlitz3.ab3@19599>   LEA strvar,a0
0003029E <AmiBlitz3.ab3@19600> BRA 'ln3
000302A4 <AmiBlitz3.ab3@19603>   CMP.l #$ce00,d1
000302A8 <AmiBlitz3.ab3@19604>   BNE 'ln4
000302AE <AmiBlitz3.ab3@19605>   LEA strcmp,a0
000302B2 <AmiBlitz3.ab3@19606> BRA 'ln3
000302B8 <AmiBlitz3.ab3@19609>   CMP.l #$ca00,d1
000302BC <AmiBlitz3.ab3@19610>   BNE 'ln5
000302C2 <AmiBlitz3.ab3@19611>   LEA qmul,a0
000302C6 <AmiBlitz3.ab3@19612> BRA 'ln3
000302CC <AmiBlitz3.ab3@19615>   CMP.l #$d000,d1
000302D0 <AmiBlitz3.ab3@19616>      BNE 'ln6
000302D6 <AmiBlitz3.ab3@19617>      LEA _MaxLen,a0
000302DA <AmiBlitz3.ab3@19618> BRA 'ln3
000302E0 <AmiBlitz3.ab3@19621>   CMP.l #$cb00,d1
000302E4 <AmiBlitz3.ab3@19622>   BNE 'ln3
000302EA <AmiBlitz3.ab3@19623>   LEA qdiv,a0
000302EE <AmiBlitz3.ab3@19624> BRA 'ln3
000302F0 <AmiBlitz3.ab3@19627>   MOVE.l d1,a0
000302F4 <AmiBlitz3.ab3@19628>   LEA $8(a0),a0
000302F8 <AmiBlitz3.ab3@19631>   CMP.w #$ffff,(a0)+
000302FC <AmiBlitz3.ab3@19632>   BNE 'l1
00030300 <AmiBlitz3.ab3@19633>   LEA 6(a0),a0
00030304 <AmiBlitz3.ab3@19636>   MOVEM.l a1/a2/d7/d2,-(a7)
00030306 <AmiBlitz3.ab3@19637>   MOVEQ #0,d2
0003030C <AmiBlitz3.ab3@19638>   LEA ptr_parameterstore,a1
0003030E <AmiBlitz3.ab3@19641>   ADDQ.l #1,d2
00030310 <AmiBlitz3.ab3@19642>   MOVE.b (a0)+,d0
00030314 <AmiBlitz3.ab3@19643> 
00030318 <AmiBlitz3.ab3@19644>   BNE 'nodollar
0003031C <AmiBlitz3.ab3@19645>   MOVE.b #"S",d0
00030320 <AmiBlitz3.ab3@19647>   CMP.b #"?",d0
00030324 <AmiBlitz3.ab3@19648>   BEQ 'nolabelwrite
00030326 <AmiBlitz3.ab3@19649>   MOVE.b d0,(a1)+
0003032A <AmiBlitz3.ab3@19650>   BNE 'l2
00030330 <AmiBlitz3.ab3@19651>   MOVE.w #"__",-1(a1)
00030332 <AmiBlitz3.ab3@19652>   ADDQ.l #2,d2
00030336 <AmiBlitz3.ab3@19653>   CLR.b 1(a1)
0003033C <AmiBlitz3.ab3@19654>   JSR findlabel2
00030340 <AmiBlitz3.ab3@19655>   BEQ 'l3
00030346 <AmiBlitz3.ab3@19656>   JSR addlabelhash
0003034A <AmiBlitz3.ab3@19659>   CLR.l 4(a2)
0003034E <AmiBlitz3.ab3@19660>   MOVE.l $14(a7),a0
00030352 <AmiBlitz3.ab3@19661>   MOVE.l $10(a7),d1
00030356 <AmiBlitz3.ab3@19662>   SUB.l $12(a0),d1
0003035A <AmiBlitz3.ab3@19663>   ADD.l $28(a0),d1
0003035E <AmiBlitz3.ab3@19664>   MOVE.l d1,8(a2)
00030362 <AmiBlitz3.ab3@19665> 'nolabelwrite MOVEM.l (a7)+,a1/a2/d7/d2
00030368 <AmiBlitz3.ab3@19668>   TST.b typecheck
0003036C <AmiBlitz3.ab3@19669>   BEQ 'p1
00030372 <AmiBlitz3.ab3@19670>   MOVE.l lasttoken,d1
00030378 <AmiBlitz3.ab3@19671>   CMP.l #$da01,d1                                          ;poke
0003037C <AmiBlitz3.ab3@19672>   BEQ 'lp1
00030382 <AmiBlitz3.ab3@19673>   CMP.l #$da02,d1                                          ;peek
00030386 <AmiBlitz3.ab3@19674>   BNE 'p1
0003038C <AmiBlitz3.ab3@19677>   TST.b peekaddrsize
00030390 <AmiBlitz3.ab3@19678>   BEQ 'p1
00030398 <AmiBlitz3.ab3@19679>   CMP.b #3,peekaddrsize
0003039C <AmiBlitz3.ab3@19680>   BNE errormsg_onlylong
000303A2 <AmiBlitz3.ab3@19681>   CLR.b peekaddrsize
000303A8 <AmiBlitz3.ab3@19689>    TST.b fpu
000303AC <AmiBlitz3.ab3@19690>   BNE 'optf
000303B2 <AmiBlitz3.ab3@19691>   TST.b fast
000303B6 <AmiBlitz3.ab3@19692>   BEQ JL11a2
000303BE <AmiBlitz3.ab3@19699>   CMP.l #"Poke",20(a2)                                     ;poke
000303C2 <AmiBlitz3.ab3@19700>   BNE peekopt
000303C6 <AmiBlitz3.ab3@19701>   TST.b 24(a2)
000303CA <AmiBlitz3.ab3@19702>   BNE peekopt
000303CE <AmiBlitz3.ab3@19703>   CMP.b #3,d2
000303D2 <AmiBlitz3.ab3@19704>   BNE 'lw1
000303D8 <AmiBlitz3.ab3@19707>   MOVE.l #$21821990,d1
000303DC <AmiBlitz3.ab3@19708> BRA.s 'lpx
000303E0 <AmiBlitz3.ab3@19711>   CMP.b #2,d2
000303E4 <AmiBlitz3.ab3@19712>   BNE 'lb1
000303EA <AmiBlitz3.ab3@19713>   MOVE.l #$31821990,d1
000303EE <AmiBlitz3.ab3@19714> BRA.s 'lpx
000303F2 <AmiBlitz3.ab3@19717>   CMP.b #1,d2
000303F6 <AmiBlitz3.ab3@19718>   BNE 'lp3
000303FC <AmiBlitz3.ab3@19719>   MOVE.l #$11821990,d1
00030400 <AmiBlitz3.ab3@19720> BRA.s 'lpx
00030404 <AmiBlitz3.ab3@19723>   CMP.b #5,d2
00030408 <AmiBlitz3.ab3@19724>     BNE JL11a2
0003040E <AmiBlitz3.ab3@19725>     TST.b fpu
00030412 <AmiBlitz3.ab3@19726>     BEQ 'll1
00030418 <AmiBlitz3.ab3@19727>      MOVE.l destpointer,a4
00030420 <AmiBlitz3.ab3@19728>     CMP.l #$f22d4500,-6(a4)
00030424 <AmiBlitz3.ab3@19729>     BNE 'noglob
0003042A <AmiBlitz3.ab3@19730>     TST.b doublepeek
0003042E <AmiBlitz3.ab3@19731>     BNE 'noglob
00030434 <AmiBlitz3.ab3@19732>     MOVE.w -2(a4),-4(a4)
0003043A <AmiBlitz3.ab3@19733>     MOVE.w #$21ad,-6(a4)
00030440 <AmiBlitz3.ab3@19734>     MOVE.w #$1990,-2(a4)
00030448 <AmiBlitz3.ab3@19735>     MOVE.w #9,peeksize
0003044A <AmiBlitz3.ab3@19736>     ADDQ #8,a7
0003044C <AmiBlitz3.ab3@19737> RTS
00030454 <AmiBlitz3.ab3@19740>     CMP.l #$f22c4500,-6(a4)
00030458 <AmiBlitz3.ab3@19741>     BNE 'nolocal
0003045E <AmiBlitz3.ab3@19742>     MOVE.w -2(a4),-4(a4)
00030464 <AmiBlitz3.ab3@19743>     TST.b doublepeek                                       ;dont move longfix on double floats
00030468 <AmiBlitz3.ab3@19744>     BNE 'nolocal
0003046E <AmiBlitz3.ab3@19745>     MOVE.w #$21ac,-6(a4)
00030474 <AmiBlitz3.ab3@19746>     MOVE.w #$1990,-2(a4)
0003047C <AmiBlitz3.ab3@19747>     MOVE.w #9,peeksize
0003047E <AmiBlitz3.ab3@19748>     ADDQ #8,a7
00030480 <AmiBlitz3.ab3@19749> RTS
00030484 <AmiBlitz3.ab3@19752>     MOVE.w #$f230,d1
00030488 <AmiBlitz3.ab3@19753>     BSR writeword
0003048E <AmiBlitz3.ab3@19754>   MOVE.l #$65001990,d1
00030494 <AmiBlitz3.ab3@19755>   TST.b doublepeek
00030498 <AmiBlitz3.ab3@19756>   BEQ 'lpx
0003049E <AmiBlitz3.ab3@19757>   OR.l   #$10000000,d1
000304A0 <AmiBlitz3.ab3@19761>   ADDQ #8,a7
000304A8 <AmiBlitz3.ab3@19762>   MOVE.w #9,peeksize
000304AC <AmiBlitz3.ab3@19763> BRA writelong
000304B4 <AmiBlitz3.ab3@19766>   CMP.l #"Peek",20(a2)
000304B8 <AmiBlitz3.ab3@19767>   BNE 'l10
000304BC <AmiBlitz3.ab3@19768>   TST.b 24(a2)
000304C0 <AmiBlitz3.ab3@19769>   BNE 'l10
000304C8 <AmiBlitz3.ab3@19770>   CMP.w #7,peeksize
000304CC <AmiBlitz3.ab3@19771>   BEQ 'l10
000304D4 <AmiBlitz3.ab3@19772>    CMP.w #3,peeksize
000304D8 <AmiBlitz3.ab3@19773>    BNE.s 'lw1
000304DE <AmiBlitz3.ab3@19776>   MOVE.l #$20301990,d1
000304E2 <AmiBlitz3.ab3@19777> BRA exitjsr
000304EA <AmiBlitz3.ab3@19780>   CMP.w #2,peeksize
000304EE <AmiBlitz3.ab3@19781>    BNE.s 'lb1
000304F4 <AmiBlitz3.ab3@19782>    MOVE.l #$30301990,d1
000304F8 <AmiBlitz3.ab3@19783> BRA exitjsr
00030500 <AmiBlitz3.ab3@19786>   CMP.w #1,peeksize
00030504 <AmiBlitz3.ab3@19787>    BNE.s 'lf1
0003050A <AmiBlitz3.ab3@19788>    MOVE.l #$10301990,d1
0003050E <AmiBlitz3.ab3@19789> BRA exitjsr
00030516 <AmiBlitz3.ab3@19792>   CMP.w #5,peeksize
0003051A <AmiBlitz3.ab3@19793>    BNE 'l10
00030520 <AmiBlitz3.ab3@19794>    TST.b fpu
00030524 <AmiBlitz3.ab3@19795>    BEQ 'll1
00030528 <AmiBlitz3.ab3@19796>    MOVE.w #$f230,d1
0003052C <AmiBlitz3.ab3@19797>    BSR writeword
0003052E <AmiBlitz3.ab3@19798>    MOVEQ #0,d1
00030534 <AmiBlitz3.ab3@19799>    MOVE.w tempregnum,d1
00030536 <AmiBlitz3.ab3@19800>    ASL.l #7,d1
00030538 <AmiBlitz3.ab3@19801>    ASL.l #8,d1
0003053A <AmiBlitz3.ab3@19802>    ASL.l #8,d1
00030540 <AmiBlitz3.ab3@19803>    ADD.l #$44001990,d1
00030546 <AmiBlitz3.ab3@19804>     TST.b doublepeek
0003054A <AmiBlitz3.ab3@19805>     BEQ 'lpx2
00030550 <AmiBlitz3.ab3@19806>     OR.l   #$10000000,d1
00030554 <AmiBlitz3.ab3@19808> BRA exitjsr
00030558 <AmiBlitz3.ab3@19812>   MOVE.w #$4EB9,D1
0003055C <AmiBlitz3.ab3@19813>    BSR.w writeword                                         ;writesysjsr
00030560 <AmiBlitz3.ab3@19814>   MOVEM.l (A7)+,a0/D1
00030566 <AmiBlitz3.ab3@19815>    JSR addoff
0003056A <AmiBlitz3.ab3@19816>   SUB.l $12(A0),D1
0003056E <AmiBlitz3.ab3@19817>   ADD.l $28(A0),D1
00030572 <AmiBlitz3.ab3@19818> BRA.w writelong
00030574 <AmiBlitz3.ab3@19823>   MOVE.w D1,-(A7)
00030578 <AmiBlitz3.ab3@19824>   MOVE.w tstmode(PC),D1
0003057C <AmiBlitz3.ab3@19825>    BSR.w writeword
00030580 <AmiBlitz3.ab3@19826>    BSR.w getbbase
00030584 <AmiBlitz3.ab3@19827>    BSR.w writeword
00030586 <AmiBlitz3.ab3@19828>   MOVE.w (A7)+,D1
0003058A <AmiBlitz3.ab3@19829>   MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
0003058E <AmiBlitz3.ab3@19830>    BSR.w Atokejsr
00030592 <AmiBlitz3.ab3@19831>   MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
00030594 <AmiBlitz3.ab3@19832> RTS
00030598 <AmiBlitz3.ab3@19840>   MOVE.w blitzoff(PC),D1
0003059C <AmiBlitz3.ab3@19841>   CMP.w #-$1,D1
000305A0 <AmiBlitz3.ab3@19842>    BNE.w getbbase__done
000305A6 <AmiBlitz3.ab3@19843>   ADDQ.w #1,globalvarpointer
000305AE <AmiBlitz3.ab3@19844>   BCLR #$0,globalvarpointer+1
000305B4 <AmiBlitz3.ab3@19845>   MOVE.w globalvarpointer,D1
000305BA <AmiBlitz3.ab3@19846>   MOVE.w D1,blitzoff
000305C0 <AmiBlitz3.ab3@19847>   ADDQ.w #2,globalvarpointer
000305C2 <AmiBlitz3.ab3@19850> RTS
000305C6 <AmiBlitz3.ab3@19854> tstmode:    Dc.b $4A,$6D,$00,$00                           ;TST.W $0000(A5)
000305C8 <AmiBlitz3.ab3@19857> inline:     Ds.w 1
000305CA <AmiBlitz3.ab3@19858> blitzoff:   Dc.w $FFFF                                   ;-1 org source
000305CC <AmiBlitz3.ab3@19859> blitzmode:  Ds.w 1                                       ;+=amiga, -=blitz
000305CE <AmiBlitz3.ab3@19863>   MOVE.w (A2)+,D1
000305D2 <AmiBlitz3.ab3@19864>    BEQ.w fetchregs__done
000305D4 <AmiBlitz3.ab3@19865>   MOVE.w (A2)+,D2
000305D8 <AmiBlitz3.ab3@19866>    BSR.w toreg
000305DC <AmiBlitz3.ab3@19867> BRA.w fetchregs
000305DE <AmiBlitz3.ab3@19870> RTS
000305E2 <AmiBlitz3.ab3@19875>   CMP.w #-$100,D2
000305E6 <AmiBlitz3.ab3@19876>    BCC.w toreg__yeah
000305EA <AmiBlitz3.ab3@19878>   BCLR #$F,D2
000305EE <AmiBlitz3.ab3@19879>    BEQ.w toreg__nobm
000305F4 <AmiBlitz3.ab3@19881>   TST.w blitzmode
000305F8 <AmiBlitz3.ab3@19882>    BMI.w toreg__yeah
000305FA <AmiBlitz3.ab3@19883> RTS
000305FE <AmiBlitz3.ab3@19886>   BCLR #$E,D2
00030602 <AmiBlitz3.ab3@19887>    BEQ.w toreg__yeah
00030608 <AmiBlitz3.ab3@19889>   TST.w blitzmode
0003060C <AmiBlitz3.ab3@19890>    BPL.w toreg__yeah
0003060E <AmiBlitz3.ab3@19891> RTS
00030614 <AmiBlitz3.ab3@19894>   JSR uselib
00030616 <AmiBlitz3.ab3@19895>   TST.b D2
0003061A <AmiBlitz3.ab3@19896>    BEQ.w toreg__norm
0003061E <AmiBlitz3.ab3@19897>   CMP.b #$4,D2
00030622 <AmiBlitz3.ab3@19898>    BNE.w toreg__suv
00030626 <AmiBlitz3.ab3@19899>   MOVE.w #$0004,-(A7)
0003062C <AmiBlitz3.ab3@19900>   MOVE.l #$FFFFFFFA,-(A7)                                  ;#-6,-(a7) org source
00030630 <AmiBlitz3.ab3@19901> BRA.w toreg__sendmd
00030634 <AmiBlitz3.ab3@19904>   CMP.b #$3,D2
00030638 <AmiBlitz3.ab3@19905>    BNE.w toreg__notnmax
0003063A <AmiBlitz3.ab3@19906>   CLR.w -(A7)
00030640 <AmiBlitz3.ab3@19907>   MOVE.l #$FFFFFFFC,-(A7)                                  ;#-4,-(a7) org source
00030642 <AmiBlitz3.ab3@19913>   LSR.w #8,D2
00030646 <AmiBlitz3.ab3@19914>   MOVE.w #$303C,D1                                         ;move.w #x,dn
0003064A <AmiBlitz3.ab3@19915>   BTST #$7,D2
0003064E <AmiBlitz3.ab3@19916>    BEQ.w toreg__skipad
00030652 <AmiBlitz3.ab3@19917>   MOVE.w #$307C,D1                                         ;move.w #x,an
00030656 <AmiBlitz3.ab3@19918>   CMP.w #$16,D2
0003065A <AmiBlitz3.ab3@19919>    BNE.w toreg__skipad
00030662 <AmiBlitz3.ab3@19920>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030666 <AmiBlitz3.ab3@19923>   ANDI.w #$7,D2
00030668 <AmiBlitz3.ab3@19924>   LSL.w #8,D2
0003066A <AmiBlitz3.ab3@19925>   LSL.w #1,D2
0003066C <AmiBlitz3.ab3@19926>   OR.w D2,D1
00030670 <AmiBlitz3.ab3@19927>    BSR.w writeword
00030674 <AmiBlitz3.ab3@19928>   MOVE.l $12(A1),D1
00030676 <AmiBlitz3.ab3@19929>   ADD.l (A7)+,D1
0003067A <AmiBlitz3.ab3@19930>   MOVE.w $0(A1,D1.L),D1
0003067C <AmiBlitz3.ab3@19931>   ADD.w (A7)+,D1
00030680 <AmiBlitz3.ab3@19932> BRA.w writeword
00030682 <AmiBlitz3.ab3@19935>   MOVE.w D2,-(A7)
00030684 <AmiBlitz3.ab3@19936>   LSR.w #8,D2
00030688 <AmiBlitz3.ab3@19937>   CMP.w #$16,D2
0003068C <AmiBlitz3.ab3@19938>    BNE.w toreg__isnta6
00030694 <AmiBlitz3.ab3@19939>   MOVE.w #$FFFF,lasta6                                     ;-1 org source
00030698 <AmiBlitz3.ab3@19942>   MOVE.l $12(A1),D1                                        ;objectspace
0003069C <AmiBlitz3.ab3@19943>   MOVE.w -$6(A1,D1.L),-(A7)
000306A0 <AmiBlitz3.ab3@19944>    BSR.w makeregop
000306A4 <AmiBlitz3.ab3@19945>    BSR.w writeword
000306A6 <AmiBlitz3.ab3@19946>   MOVE.w (A7)+,D1
000306A8 <AmiBlitz3.ab3@19947>   MOVE.w (A7)+,D2
000306AA <AmiBlitz3.ab3@19948>   TST.b D2
000306AE <AmiBlitz3.ab3@19949>    BPL.w toreg__skippy1
000306B2 <AmiBlitz3.ab3@19954>    BSR.w writeword                                         ;move.l x(a5),dn
000306B4 <AmiBlitz3.ab3@19955>   MOVE.w D2,-(A7)                                          ;store reg used
000306B8 <AmiBlitz3.ab3@19957>   ADDA.l $12(A1),A1
000306BA <AmiBlitz3.ab3@19958>   MOVE.b D2,D1
000306BE <AmiBlitz3.ab3@19959>   ANDI.w #$7,D1
000306C4 <AmiBlitz3.ab3@19961>   TST.b debugmode
000306C8 <AmiBlitz3.ab3@19962>    BEQ.w toreg__norerr
000306CA <AmiBlitz3.ab3@19964>   MOVE.w D1,-(A7)
000306CC <AmiBlitz3.ab3@19965>   LSL.w #8,D1
000306CE <AmiBlitz3.ab3@19966>   LSL.w #1,D1
000306D2 <AmiBlitz3.ab3@19967>   ORI.w #$B07C,D1                                          ;cmp #x,dn
000306D6 <AmiBlitz3.ab3@19968>    BSR.w writeword
000306DA <AmiBlitz3.ab3@19969>   MOVE.w -$4(A1),D1
000306DE <AmiBlitz3.ab3@19970>    BSR.w writeword
000306E2 <AmiBlitz3.ab3@19971>   MOVE.l maxchk(PC),D1                                  ;bcs
000306E6 <AmiBlitz3.ab3@19972>    BSR.w writelong
000306E8 <AmiBlitz3.ab3@19973>   MOVE.l A2,-(A7)
000306EC <AmiBlitz3.ab3@19974>   MOVE.w #$C30A,D1
000306F0 <AmiBlitz3.ab3@19975>    BSR.w Atokejsr
000306F2 <AmiBlitz3.ab3@19976>   MOVEA.l (A7)+,A2
000306F4 <AmiBlitz3.ab3@19977>   MOVE.w (A7)+,D1
000306F8 <AmiBlitz3.ab3@19980>   MOVE.w -$2(A1),D2                                        ;shift amount
000306FC <AmiBlitz3.ab3@19983>   CMP.w #$9,D2
00030700 <AmiBlitz3.ab3@19984>    BCS.w toreg__simp
00030704 <AmiBlitz3.ab3@19985>   MOVEM.w D1-D2,-(A7)
00030706 <AmiBlitz3.ab3@19987>   MOVEQ.l #$00,D2                                          ;!!!!!
00030708 <AmiBlitz3.ab3@19989>   LSL.w #8,D2
0003070A <AmiBlitz3.ab3@19990>   LSL.w #1,D2
0003070C <AmiBlitz3.ab3@19991>   OR.w D2,D1
00030710 <AmiBlitz3.ab3@19992>   OR.w lsldn(PC),D1
00030714 <AmiBlitz3.ab3@19993>    BSR.w writeword
00030718 <AmiBlitz3.ab3@19994>   MOVEM.w (A7)+,D1-D2
0003071A <AmiBlitz3.ab3@19995>   SUBQ.w #8,D2
0003071E <AmiBlitz3.ab3@19996> BRA.w toreg__shloop
00030720 <AmiBlitz3.ab3@19999>   MOVE.w D1,-(A7)
00030724 <AmiBlitz3.ab3@20000>   OR.w #$48c0,d1
00030728 <AmiBlitz3.ab3@20001>   BSR writeword
0003072A <AmiBlitz3.ab3@20002>   MOVE.w (a7),d1
0003072C <AmiBlitz3.ab3@20003>   TST.w D2
00030730 <AmiBlitz3.ab3@20004>   BEQ.w toreg__simp2
00030734 <AmiBlitz3.ab3@20006>   ANDI.w #$7,D2                                            ;?????
00030736 <AmiBlitz3.ab3@20008>   LSL.w #8,D2
00030738 <AmiBlitz3.ab3@20009>   LSL.w #1,D2
0003073A <AmiBlitz3.ab3@20010>   OR.w D2,D1
0003073E <AmiBlitz3.ab3@20011>   OR.w lsldn(PC),D1
00030742 <AmiBlitz3.ab3@20012>    BSR.w writeword
00030744 <AmiBlitz3.ab3@20018>   MOVE.w (A7)+,D1
00030748 <AmiBlitz3.ab3@20019>   ANDI.w #$7,D1
0003074C <AmiBlitz3.ab3@20020>   OR.w maxdo(PC),D1
0003074E <AmiBlitz3.ab3@20021>   MOVE.w (A7)+,D2
00030750 <AmiBlitz3.ab3@20022>   LSL.w #1,D2
00030754 <AmiBlitz3.ab3@20023>   ANDI.w #$E00,D2
00030756 <AmiBlitz3.ab3@20024>   OR.w D2,D1
0003075A <AmiBlitz3.ab3@20025> BRA.w writeword
0003075E <AmiBlitz3.ab3@20028>   CMP.b #$1,D2
00030762 <AmiBlitz3.ab3@20029>    BEQ.w toreg__skippy
00030764 <AmiBlitz3.ab3@20033>   ADDQ.w #4,D1
0003076A <AmiBlitz3.ab3@20035>   TST.b debugmode
0003076E <AmiBlitz3.ab3@20036>    BEQ.w toreg__skippy
00030772 <AmiBlitz3.ab3@20038>    BSR.w writeword
00030774 <AmiBlitz3.ab3@20039>   SWAP D1
00030778 <AmiBlitz3.ab3@20040>   MOVE.w toreg__theretest(PC),D1
0003077A <AmiBlitz3.ab3@20041>   SWAP D1
0003077E <AmiBlitz3.ab3@20042>    BSR.w writelong
00030782 <AmiBlitz3.ab3@20043>   MOVE.l toreg__theretest+4(PC),D1
00030786 <AmiBlitz3.ab3@20044>    BSR.w writelong
0003078A <AmiBlitz3.ab3@20045>   MOVE.l toreg__theretest+8(PC),D1
0003078E <AmiBlitz3.ab3@20046> BRA.w writelong
00030792 <AmiBlitz3.ab3@20049> BRA.w writeword
00030796 <AmiBlitz3.ab3@20054>             Dc.b $4A,$AD,$00,$00                           ;TST.L  $0000(A5)
0003079A <AmiBlitz3.ab3@20055>             Dc.b $66,$00,$00,$06                           ;BNE.W  toreg__ttskip
0003079C <AmiBlitz3.ab3@20056>             Dc.b $70,$01                                   ;MOVEQ  #$01,D0
0003079E <AmiBlitz3.ab3@20057>             Dc.b $4E,$40                                   ;TRAP   #00
000307A0 <AmiBlitz3.ab3@20062>   LSR.w #8,D2
000307A4 <AmiBlitz3.ab3@20063>   CMP.b #$16,D2
000307A8 <AmiBlitz3.ab3@20064>    BNE.w toreg__nota6
000307AC <AmiBlitz3.ab3@20065>   MOVE.w $A(A1),D1
000307B2 <AmiBlitz3.ab3@20066>   CMP.w lasta6,D1
000307B6 <AmiBlitz3.ab3@20067>    BEQ.w toreg__sk
000307BC <AmiBlitz3.ab3@20068>   MOVE.w D1,lasta6
000307C0 <AmiBlitz3.ab3@20071>    BSR.w makeregop
000307C4 <AmiBlitz3.ab3@20072>   TST.w $1A(A1)
000307C8 <AmiBlitz3.ab3@20073>    BPL.w toreg__long
000307CC <AmiBlitz3.ab3@20074>   CMP.w stackop(PC),D1
000307D0 <AmiBlitz3.ab3@20075>    BNE.w toreg__notst
000307D6 <AmiBlitz3.ab3@20076>   SUBQ.w #2,a2offset
000307DA <AmiBlitz3.ab3@20079>    ORI.w #$1000,D1
000307DE <AmiBlitz3.ab3@20082>    BSR.w writeword
000307E2 <AmiBlitz3.ab3@20083>   MOVE.w $A(A1),D1
000307E6 <AmiBlitz3.ab3@20084>    BSR.w writeword
000307E8 <AmiBlitz3.ab3@20087> RTS
000307EA <AmiBlitz3.ab3@20091> lsldn:      Dc.b $E1,$88                 ;Dc.b $48 ;object long acsess    ;LSL.L   #8,D0
000307EE <AmiBlitz3.ab3@20092> maxchk:     Dc.b $65,$00,$00,$08                                          ;BCS.W   maxchk__ok
000307F4 <AmiBlitz3.ab3@20093>             Dc.b $4E,$B9,$00,$00,$00,$00                                  ;JSR     $00000000
000307F6 <AmiBlitz3.ab3@20096> 
000307F8 <AmiBlitz3.ab3@20099>             Dc.b $00,$00
000307FC <AmiBlitz3.ab3@20100> stackop:    Dc.b $2F,$2D,$00,$00                                          ;MOVE.L  $0000(A5),-(A7)
00030800 <AmiBlitz3.ab3@20107>   CMP.b #$FF,D2
00030804 <AmiBlitz3.ab3@20108>    BNE.w makeregop__notst
00030808 <AmiBlitz3.ab3@20109>   MOVE.w stackop(PC),D1
0003080E <AmiBlitz3.ab3@20110>   ADDQ.w #4,a2offset
00030810 <AmiBlitz3.ab3@20111> RTS
00030812 <AmiBlitz3.ab3@20114>   MOVE.l A3,-(A7)
00030818 <AmiBlitz3.ab3@20115>   LEA regtransd,A3
0003081C <AmiBlitz3.ab3@20116>   BTST #$4,D2
00030820 <AmiBlitz3.ab3@20117>    BEQ.w makeregop__skip
00030826 <AmiBlitz3.ab3@20118>   LEA regtransa,A3
0003082A <AmiBlitz3.ab3@20121>   ANDI.w #$7,D2
0003082C <AmiBlitz3.ab3@20122>   MOVE.w D2,D1
0003082E <AmiBlitz3.ab3@20123>   LSL.w #8,D1
00030830 <AmiBlitz3.ab3@20124>   LSL.w #1,D1
00030832 <AmiBlitz3.ab3@20125>   OR.w (A3),D1
00030834 <AmiBlitz3.ab3@20126>   MOVEA.l (A7)+,A3
00030836 <AmiBlitz3.ab3@20127> RTS
0003083A <AmiBlitz3.ab3@20133>   CMP.w #$3C,D0
0003083E <AmiBlitz3.ab3@20134>    BCS.w ifchar__no
00030842 <AmiBlitz3.ab3@20135>   CMP.w #$3E,D0
00030846 <AmiBlitz3.ab3@20136>    BHI.w ifchar__no
0003084A <AmiBlitz3.ab3@20137>   SUBI.w #$3C,D0
0003084C <AmiBlitz3.ab3@20138>   CMP.w D0,D0
0003084E <AmiBlitz3.ab3@20141> RTS
00030858 <AmiBlitz3.ab3@20146>   MOVE.w oldqflag,instringon
0003085E <AmiBlitz3.ab3@20147>   MOVEA.l lastsourcepos,A5
00030864 <AmiBlitz3.ab3@20152>   MOVE.w regnum,-(A7)
0003086A <AmiBlitz3.ab3@20153>   CLR.w regnum
00030870 <AmiBlitz3.ab3@20154>   MOVE.l destpointer,-(A7)
00030876 <AmiBlitz3.ab3@20155>   MOVE.l destbufferend,-(A7)
0003087C <AmiBlitz3.ab3@20156>   MOVE.w dontwrite,-(A7)
00030882 <AmiBlitz3.ab3@20157>   MOVE.w lasta6,-(A7)
00030888 <AmiBlitz3.ab3@20158>   MOVE.w cfetchmode,-(A7)
0003088C <AmiBlitz3.ab3@20159>    BNE.w JL_0_BFB6
00030896 <AmiBlitz3.ab3@20160>   MOVE.l destbufferend,oldlibat
0003089C <AmiBlitz3.ab3@20161>   MOVEA.l constpcat,A0
000308A2 <AmiBlitz3.ab3@20162>   MOVE.l A0,destpointer
000308A6 <AmiBlitz3.ab3@20163> BRA.w JL_0_BFBC
000308AC <AmiBlitz3.ab3@20166>   MOVEA.l destpointer,A0
000308AE <AmiBlitz3.ab3@20169>   MOVE.l A0,-(A7)
000308B8 <AmiBlitz3.ab3@20170>   MOVE.l constlibat,destbufferend
000308BE <AmiBlitz3.ab3@20171>   CLR.w dontwrite
000308C6 <AmiBlitz3.ab3@20173>   MOVE.w #$FFFF,lasta6
000308CE <AmiBlitz3.ab3@20174>   MOVE.w #$FFFF,cfetchmode
000308D2 <AmiBlitz3.ab3@20176>     BSR.w arreval
000308D4 <AmiBlitz3.ab3@20177>    MOVE.l (a7),a0
00030A10 <AmiBlitz3.ab3@20179>  !newcalc
00030A14 <AmiBlitz3.ab3@20180>    BEQ 'l10
00030A16 <AmiBlitz3.ab3@20181>    MOVE.l d0,d3
00030A18 <AmiBlitz3.ab3@20182>    MOVEA.l (A7)+,A0
00030A1C <AmiBlitz3.ab3@20183> BRA bc1
00030A20 <AmiBlitz3.ab3@20186>    MOVE.w #$2600,D1
00030A26 <AmiBlitz3.ab3@20187>   OR.w regnum,D1
00030A2A <AmiBlitz3.ab3@20188>    BSR.w writeword
00030A2E <AmiBlitz3.ab3@20189>   MOVE.w #$4E75,D1
00030A32 <AmiBlitz3.ab3@20190>    BSR.w writeword
00030A38 <AmiBlitz3.ab3@20191>   MOVE.w dontwrite,D1
00030A3C <AmiBlitz3.ab3@20192>    BNE.w conmemerr
00030A3E <AmiBlitz3.ab3@20193>   MOVEA.l (A7)+,A0
00030A40 <AmiBlitz3.ab3@20194>   NOP
00030A46 <AmiBlitz3.ab3@20195>    JSR Aclearcache                                         ;simple expression
00030A48 <AmiBlitz3.ab3@20198>    JSR (A0)                                                ;writeresult
00030A4E <AmiBlitz3.ab3@20201>   MOVE.w (A7)+,cfetchmode
00030A54 <AmiBlitz3.ab3@20202>   MOVE.w (A7)+,lasta6
00030A5A <AmiBlitz3.ab3@20203>   MOVE.w (A7)+,dontwrite
00030A60 <AmiBlitz3.ab3@20204>   MOVE.l (A7)+,destbufferend
00030A66 <AmiBlitz3.ab3@20205>   MOVE.l (A7)+,destpointer
00030A6C <AmiBlitz3.ab3@20206>   MOVE.w (A7)+,regnum
00030A72 <AmiBlitz3.ab3@20209> JMP reget
00030A76 <AmiBlitz3.ab3@20212> oldlibat:   Ds.l 1
00030A7C <AmiBlitz3.ab3@20216>   LEA incdir,A0
00030A80 <AmiBlitz3.ab3@20219>   CMP.w #$22,D0
00030A84 <AmiBlitz3.ab3@20220>    BEQ.w JL_0_C052
00030A86 <AmiBlitz3.ab3@20221>   MOVE.b D0,(A0)+
00030A88 <AmiBlitz3.ab3@20222>   TST.w D0
00030A8C <AmiBlitz3.ab3@20223>    BEQ.w JL_0_C05A
00030A90 <AmiBlitz3.ab3@20224>    BMI.w syntaxerr
00030A96 <AmiBlitz3.ab3@20227>   JSR get1bytemain                                         ;_long
00030A9A <AmiBlitz3.ab3@20228> BRA.w JL_0_C03E
00030A9C <AmiBlitz3.ab3@20231> RTS
00030AA2 <AmiBlitz3.ab3@20235>   LEA ptr_parameterstore,A1                                ;getparameter
00030AA8 <AmiBlitz3.ab3@20236>   LEA incdir,A0
00030AAA <AmiBlitz3.ab3@20237>   MOVEQ.l #-$01,D2
00030AAC <AmiBlitz3.ab3@20240>     ADDQ.w #1,D2
00030AAE <AmiBlitz3.ab3@20241>     MOVE.b (A0)+,(A1)+
00030AB2 <AmiBlitz3.ab3@20242>   BNE.w JL_0_C06A
00030AB4 <AmiBlitz3.ab3@20243>   SUBQ.w #1,A1
00030ABE <AmiBlitz3.ab3@20245>   MOVE.w oldqflag,instringon
00030AC4 <AmiBlitz3.ab3@20246>   MOVEA.l lastsourcepos,A5
00030ACA <AmiBlitz3.ab3@20250>   JSR get1bytemain
00030ACC <AmiBlitz3.ab3@20251>   TST.w D0
00030AD0 <AmiBlitz3.ab3@20252>    BMI.w syntaxerr
00030AD4 <AmiBlitz3.ab3@20253>   CMP.b #$22,D0
00030AD8 <AmiBlitz3.ab3@20254>    BEQ.w JL_0_C078
00030ADA <AmiBlitz3.ab3@20255>   MOVE.b D0,(A1)+
00030ADE <AmiBlitz3.ab3@20256>    BEQ.w JL_0_C096
00030AE0 <AmiBlitz3.ab3@20257>   ADDQ.w #1,D2
00030AE4 <AmiBlitz3.ab3@20258> BRA.w JL_0_C078
00030AE6 <AmiBlitz3.ab3@20261>   TST.w D2
00030AEA <AmiBlitz3.ab3@20262>    BEQ.w syntaxerr
00030AEC <AmiBlitz3.ab3@20263> RTS
00030AF2 <AmiBlitz3.ab3@20267>   MOVEA.l constantbase,A2
00030AF6 <AmiBlitz3.ab3@20268>   MOVEA.l $E(A2),A5
00030AFC <AmiBlitz3.ab3@20269>   MOVE.l a5,includesourceline
00030B02 <AmiBlitz3.ab3@20270>   LEA inctab,a0
00030B08 <AmiBlitz3.ab3@20271>   MOVE.w ininclude,d0
00030B0C <AmiBlitz3.ab3@20272>   MOVE.l $0(a0,d0*4),d0
00030B10 <AmiBlitz3.ab3@20273>   MOVEA.l $4(A2),A0
00030B14 <AmiBlitz3.ab3@20275>   LEA $0(A0,D0.l),A0
00030B16 <AmiBlitz3.ab3@20276>   MOVEA.l A5,A1
00030B18 <AmiBlitz3.ab3@20279>     CMPA.l A0,A1
00030B1C <AmiBlitz3.ab3@20280>      BCC.w JL_0_C0C6
00030B1E <AmiBlitz3.ab3@20281>   TST.b (A1)+
00030B22 <AmiBlitz3.ab3@20282>   BNE.w JL_0_C0B6
00030B26 <AmiBlitz3.ab3@20283> BRA.w JL_0_C112
00030B2A <AmiBlitz3.ab3@20286>   MOVEA.l $4(A2),A1
00030B2C <AmiBlitz3.ab3@20289>   CMPA.l A0,A5
00030B30 <AmiBlitz3.ab3@20290>   BCC.w JL_0_C0D6
00030B32 <AmiBlitz3.ab3@20291>   MOVE.b (A5)+,(A1)+
00030B36 <AmiBlitz3.ab3@20292> BRA.w JL_0_C0CA
00030B38 <AmiBlitz3.ab3@20295>   MOVE.l A1,D0
00030B3C <AmiBlitz3.ab3@20296>   SUB.l $4(A2),D0
00030B42 <AmiBlitz3.ab3@20297>   LEA inctab,a0
00030B44 <AmiBlitz3.ab3@20298>   MOVEQ #0,d1
00030B4A <AmiBlitz3.ab3@20299>   MOVE.w ininclude,d1
00030B4E <AmiBlitz3.ab3@20300>   MOVE.l d0,0(a0,d1*4)
00030B54 <AmiBlitz3.ab3@20302>   MOVEA.l _dosbase,A6
00030B58 <AmiBlitz3.ab3@20303>   MOVE.l $8(A2),D1
00030B5A <AmiBlitz3.ab3@20304>   MOVE.l A1,D2
00030B60 <AmiBlitz3.ab3@20305>   MOVE.l D2,include_base
00030B66 <AmiBlitz3.ab3@20307>   MOVE.l #$10000000,d3                                     ;load whole file
00030B68 <AmiBlitz3.ab3@20308>   SUB.l D0,D3
00030B6C <AmiBlitz3.ab3@20309>    JSR _Read(A6)
00030B6E <AmiBlitz3.ab3@20310>   TST.l D0
00030B72 <AmiBlitz3.ab3@20311>    BMI.w error_reading_file
00030B76 <AmiBlitz3.ab3@20312>    BEQ.w JL_0_C120
00030B7C <AmiBlitz3.ab3@20313>    MOVE.l D0,include_length
00030BBE <AmiBlitz3.ab3@20314>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
00030BE8 <AmiBlitz3.ab3@20315>    !basic
00030BF8 <AmiBlitz3.ab3@20316>    ilen.l  = Peek.l(?include_length)
00030C08 <AmiBlitz3.ab3@20317>    ibase.l = Peek.l(?include_base)
00030C18 <AmiBlitz3.ab3@20318>    ido.l   = Peek.l(?include_process)
00030C28 <AmiBlitz3.ab3@20319>    *tn.preprocessor = Peek.l(?include_preprocessor)
00030C32 <AmiBlitz3.ab3@20320>    If ido
00030C44 <AmiBlitz3.ab3@20321>      ioffset.l = SkipXtraHeader{ibase,ilen}
00030C6A <AmiBlitz3.ab3@20322>      nilen.l = preproc_Tokenize{*tn,ibase+ioffset,ibase,ilen-ioffset}
00030C7C <AmiBlitz3.ab3@20323>      If nilen>0
00030C8C <AmiBlitz3.ab3@20327>        Poke.l ?include_length,nilen
00030CAA <AmiBlitz3.ab3@20330>    !asm
00030CB4 <AmiBlitz3.ab3@20331>    MOVE.l #0,include_process
00030CBA <AmiBlitz3.ab3@20332>    MOVE.l include_length,D0
00030CC0 <AmiBlitz3.ab3@20333>    LEA inctab,a0
00030CC2 <AmiBlitz3.ab3@20334>    MOVEQ #0,d1
00030CC8 <AmiBlitz3.ab3@20335>    MOVE.w ininclude,d1
00030CCC <AmiBlitz3.ab3@20336>    ADD.l d0,0(a0,d1*4)
00030CD0 <AmiBlitz3.ab3@20338>   MOVEA.l $4(A2),A5
00030CD4 <AmiBlitz3.ab3@20340>    MOVE.l 0(a0,d1*4),d0
00030CD8 <AmiBlitz3.ab3@20341>   CLR.b $0(A5,D0.l)
00030CDA <AmiBlitz3.ab3@20344>   MOVEA.l A5,A0
00030CDC <AmiBlitz3.ab3@20347>     TST.b (A0)+
00030CE0 <AmiBlitz3.ab3@20348>   BNE.w JL_0_C114
00030CE4 <AmiBlitz3.ab3@20349>   MOVE.l A0,$E(A2)
00030CE6 <AmiBlitz3.ab3@20350> RTS
00030CEA <AmiBlitz3.ab3@20353> include_length:        Dc.l 0                              ; for tokenizer!
00030CEE <AmiBlitz3.ab3@20354> include_base:          Dc.l 0
00030CF2 <AmiBlitz3.ab3@20355> include_process:       Dc.l 0
00030CF6 <AmiBlitz3.ab3@20356> include_preprocessor:  Dc.l 0
00030CFA <AmiBlitz3.ab3@20360>   MOVE.l $8(A2),D1
00030D00 <AmiBlitz3.ab3@20362>   MOVEA.l _dosbase,A6
00030D04 <AmiBlitz3.ab3@20363>   JSR _Close(a6)
00030D0A <AmiBlitz3.ab3@20364>   MOVEA.l _execbase,A6
00030D0E <AmiBlitz3.ab3@20365>   MOVEA.l $4(A2),A1
00030D14 <AmiBlitz3.ab3@20366>   MOVE.l #$400*8,D0                                        ;exit include
00030D18 <AmiBlitz3.ab3@20368>   JSR _FreeVec(a6)
00030D1E <AmiBlitz3.ab3@20371>   MOVE.l (A2),constantbase
00030D20 <AmiBlitz3.ab3@20372>   MOVEA.l A2,A1
00030D22 <AmiBlitz3.ab3@20373>   MOVEQ.l #$00,D0
00030D26 <AmiBlitz3.ab3@20374>   MOVE.b $12(A2),D0
00030D2C <AmiBlitz3.ab3@20375>   MOVEA.l _execbase,A6
00030D32 <AmiBlitz3.ab3@20376>   MOVE.l mempool2,a0
00030D36 <AmiBlitz3.ab3@20377>   JSR _FreePooled(A6)
00030D3C <AmiBlitz3.ab3@20378>   JSR zero_includename
00030D42 <AmiBlitz3.ab3@20379>   SUBQ.w #1,ininclude
00030D46 <AmiBlitz3.ab3@20380>   BNE.w AJL_0_C09E
00030D4C <AmiBlitz3.ab3@20383>   LEA _include,a0
00030D50 <AmiBlitz3.ab3@20384>   MOVEM.l a0-a6/d0-d7,-(a7)
00030D56 <AmiBlitz3.ab3@20385>   LEA ptr_parameterstore,a1
00030D58 <AmiBlitz3.ab3@20388>     MOVE.b (a0)+,(a1)+
00030D5C <AmiBlitz3.ab3@20389>   BNE 'l1b
00030D5E <AmiBlitz3.ab3@20390>   MOVEQ #9,d2
00030D64 <AmiBlitz3.ab3@20391>   JSR findlabel2
00030D68 <AmiBlitz3.ab3@20392>   BNE 'd
00030D6C <AmiBlitz3.ab3@20393>   CLR.l 8(a2)
00030D70 <AmiBlitz3.ab3@20396>   MOVEM.l (a7)+,a0-a6/d0-d7
00030D72 <AmiBlitz3.ab3@20397> RTS
00030D78 <AmiBlitz3.ab3@20401>   MOVE.l unusedfunc,d0
00030D7C <AmiBlitz3.ab3@20402>   BEQ 'noclear
00030D80 <AmiBlitz3.ab3@20403>   MOVEM.l d0-d2/a0-a1/a6,-(a7)
00030D82 <AmiBlitz3.ab3@20406>     MOVE.l d0,a1
00030D86 <AmiBlitz3.ab3@20407>     MOVE.l 4(a1),d0
00030D88 <AmiBlitz3.ab3@20408>     MOVE.l (a1),d2
00030D8E <AmiBlitz3.ab3@20409>     MOVE.l _execbase,a6
00030D92 <AmiBlitz3.ab3@20410>     JSR _FreeMem(a6)
00030D94 <AmiBlitz3.ab3@20411>     MOVE.l d2,d0
00030D98 <AmiBlitz3.ab3@20412>   BNE 'f1
00030D9E <AmiBlitz3.ab3@20413>   CLR.l unusedfunc
00030DA2 <AmiBlitz3.ab3@20414>   MOVEM.l (a7)+,a0-a1/a6/d0-d2
00030DA4 <AmiBlitz3.ab3@20417> RTS
00030DAA <AmiBlitz3.ab3@20421>   MOVEA.l xinclude_base,A2
00030DB0 <AmiBlitz3.ab3@20422>   CLR.l xinclude_base
00030DB4 <AmiBlitz3.ab3@20425>     CMPA.w #$0,A2
00030DB8 <AmiBlitz3.ab3@20426>      BEQ.w JL_0_C186
00030DBA <AmiBlitz3.ab3@20427>     MOVEQ.l #$00,D0
00030DBE <AmiBlitz3.ab3@20428>     MOVE.b 4+8(A2),D0
00030DC0 <AmiBlitz3.ab3@20429>     MOVEA.l A2,A1
00030DC2 <AmiBlitz3.ab3@20430>     MOVEA.l (A2),A2
00030DC8 <AmiBlitz3.ab3@20431>     MOVEA.l _execbase,A6
00030DCE <AmiBlitz3.ab3@20432>     MOVE.l mempool2,a0
00030DD2 <AmiBlitz3.ab3@20433>     JSR _FreePooled(A6)
00030DD6 <AmiBlitz3.ab3@20434> BRA.w JL_0_C168
00030DD8 <AmiBlitz3.ab3@20437> RTS
00030DDE <AmiBlitz3.ab3@20441>   MOVEA.l constantbase,A2
00030DE4 <AmiBlitz3.ab3@20442>   CLR.l constantbase
00030DE8 <AmiBlitz3.ab3@20445>     CMPA.w #$0,A2
00030DEC <AmiBlitz3.ab3@20446>      BEQ.w JL_0_C1DC
00030DF0 <AmiBlitz3.ab3@20447>     MOVE.l $8(A2),D1
00030DF4 <AmiBlitz3.ab3@20448>      BEQ.w JL_0_C1AE
00030DFA <AmiBlitz3.ab3@20449>     MOVEA.l _dosbase,A6
00030DFE <AmiBlitz3.ab3@20450>      JSR _Close(A6)
00030E02 <AmiBlitz3.ab3@20453>     MOVE.l $4(A2),D0
00030E06 <AmiBlitz3.ab3@20454>      BEQ.w JL_0_C1C6
00030E08 <AmiBlitz3.ab3@20455>     MOVEA.l D0,A1
00030E0E <AmiBlitz3.ab3@20456>     MOVE.l #$400*8,D0
00030E14 <AmiBlitz3.ab3@20457>     MOVEA.l _execbase,A6
00030E1A <AmiBlitz3.ab3@20458>     MOVE.l mempool,a0
00030E1E <AmiBlitz3.ab3@20459>     JSR _FreeVec(a6)
00030E20 <AmiBlitz3.ab3@20462>     MOVEQ.l #$00,D0
00030E24 <AmiBlitz3.ab3@20463>     MOVE.b $12(A2),D0
00030E26 <AmiBlitz3.ab3@20464>     MOVEA.l A2,A1
00030E28 <AmiBlitz3.ab3@20465>     MOVEA.l (A2),A2
00030E2E <AmiBlitz3.ab3@20466>     MOVEA.l _execbase,A6
00030E34 <AmiBlitz3.ab3@20467>     MOVE.l mempool2,a0
00030E38 <AmiBlitz3.ab3@20468>     JSR _FreePooled(A6)
00030E3C <AmiBlitz3.ab3@20469> BRA.w JL_0_C194
00030E3E <AmiBlitz3.ab3@20472> RTS
00030E40 <AmiBlitz3.ab3@20476>   SWAP D0
00030E44 <AmiBlitz3.ab3@20477>    BSR.w JL_0_C1E6
00030E46 <AmiBlitz3.ab3@20478>   SWAP D0
00030E4C <AmiBlitz3.ab3@20481>   MOVEA.l data2,A4
00030E52 <AmiBlitz3.ab3@20482>   CMPA.l allat,A4
00030E56 <AmiBlitz3.ab3@20483>    BCC.w JL_0_C200
00030E58 <AmiBlitz3.ab3@20484>   MOVE.w D0,(A4)+
00030E5E <AmiBlitz3.ab3@20485>   MOVE.l A4,data2
00030E60 <AmiBlitz3.ab3@20486> RTS
00030E68 <AmiBlitz3.ab3@20489>   MOVE.w #$FFFF,dontwrite
00030E6E <AmiBlitz3.ab3@20490>   ADDQ.l #2,data2
00030E70 <AmiBlitz3.ab3@20491> RTS
00030E76 <AmiBlitz3.ab3@20495>   MOVEA.l data2,A4
00030E7C <AmiBlitz3.ab3@20496>   CMPA.l allat,A4
00030E80 <AmiBlitz3.ab3@20497>    BCC.w JL_0_C22A
00030E82 <AmiBlitz3.ab3@20498>   MOVE.b D0,(A4)+
00030E88 <AmiBlitz3.ab3@20499>   MOVE.l A4,data2
00030E8A <AmiBlitz3.ab3@20500> RTS
00030E92 <AmiBlitz3.ab3@20503>   MOVE.w #$FFFF,dontwrite
00030E98 <AmiBlitz3.ab3@20504>   ADDQ.l #1,data2
00030E9A <AmiBlitz3.ab3@20505> RTS
00030E9E <AmiBlitz3.ab3@20509>   CMP.w #$22,D0
00030EA2 <AmiBlitz3.ab3@20510>    BNE.w syntaxerr
00030EA8 <AmiBlitz3.ab3@20514>   JSR get1bytemain
00030EAC <AmiBlitz3.ab3@20515>   CMP.b #$22,D0
00030EB0 <AmiBlitz3.ab3@20516>    BEQ.w JL_0_C25A
00030EB2 <AmiBlitz3.ab3@20517>   TST.w D0
00030EB6 <AmiBlitz3.ab3@20518>    BEQ.w syntaxerr
00030EB8 <AmiBlitz3.ab3@20519>   MOVE.b D0,(A0)+
00030EBC <AmiBlitz3.ab3@20520> BRA.w JL_0_C242
00030EBE <AmiBlitz3.ab3@20523>   CLR.b (A0)
00030EC0 <AmiBlitz3.ab3@20524> RTS
00030EC2 <AmiBlitz3.ab3@20527>   TST.l D3
00030EC4 <AmiBlitz3.ab3@20528> RTS
00030ECA <AmiBlitz3.ab3@20531>   LEA ptr_parameterstore,A0
00030ED0 <AmiBlitz3.ab3@20532>   LEA namebuff2,A1
00030ED2 <AmiBlitz3.ab3@20535>     MOVE.b (A0)+,D0
00030ED6 <AmiBlitz3.ab3@20536>     BEQ.w JL_0_C27C
00030ED8 <AmiBlitz3.ab3@20537>   CMP.b (A1)+,D0
00030EDC <AmiBlitz3.ab3@20538>   BEQ.w JL_0_C26E
00030EDE <AmiBlitz3.ab3@20539> RTS
00030EE0 <AmiBlitz3.ab3@20542>   TST.b (A1)
00030EE4 <AmiBlitz3.ab3@20543>   BNE.w JL_0_C284
00030EE6 <AmiBlitz3.ab3@20544> RTS
00030EEA <AmiBlitz3.ab3@20547>   CMP.w #$1,D0
00030EEC <AmiBlitz3.ab3@20548> RTS
00030EF0 <AmiBlitz3.ab3@20552>   CMP.w #$2E,D0                                            ;dodeftype
00030EF4 <AmiBlitz3.ab3@20553>    BNE.w syntaxerr
00030EF8 <AmiBlitz3.ab3@20554>   BSR.w getparameter2
00030EFE <AmiBlitz3.ab3@20555>   LEA newtypebase,A2
00030F02 <AmiBlitz3.ab3@20556>   BSR.w findtype
00030F06 <AmiBlitz3.ab3@20557>    BNE.w notypeerr
00030F0C <AmiBlitz3.ab3@20558>   TST.b declare
00030F10 <AmiBlitz3.ab3@20559>    BNE 'l1
00030F16 <AmiBlitz3.ab3@20560>   TST.b declare2
00030F1A <AmiBlitz3.ab3@20561>    BEQ 'l2
00030F22 <AmiBlitz3.ab3@20564>   MOVE.b #2,nowdeclare
00030F28 <AmiBlitz3.ab3@20568>   JSR reget
00030F2C <AmiBlitz3.ab3@20569>    BNE.w JL_0_C2B4
00030F32 <AmiBlitz3.ab3@20570>   MOVE.l A2,defaulttype
00030F34 <AmiBlitz3.ab3@20571> RTS
00030F3A <AmiBlitz3.ab3@20574>   MOVE.l defaulttype,-(A7)
00030F40 <AmiBlitz3.ab3@20575>   MOVE.l A2,defaulttype
00030F44 <AmiBlitz3.ab3@20578>   BSR.w getparameter
00030F48 <AmiBlitz3.ab3@20579>    BSR.w JL_0_8E3C
00030F4C <AmiBlitz3.ab3@20580>   CMP.w #$2C,D0
00030F50 <AmiBlitz3.ab3@20581>    BNE.w JL_0_C2D8
00030F56 <AmiBlitz3.ab3@20582>    JSR get1bytemain                                        ; was BSR.w
00030F5A <AmiBlitz3.ab3@20583> BRA.w JL_0_C2C0
00030F60 <AmiBlitz3.ab3@20586>   MOVE.l (A7)+,defaulttype
00030F62 <AmiBlitz3.ab3@20587> RTS
00030F66 <AmiBlitz3.ab3@20591>   LEA $4(A5),A2                                            ;fehler function
00030F68 <AmiBlitz3.ab3@20594>   MOVE.l A2,D0
00030F6C <AmiBlitz3.ab3@20597>   BSR.w getparameter
00030F70 <AmiBlitz3.ab3@20598>   BSR.w JL_0_8E3C
00030F74 <AmiBlitz3.ab3@20599>   BSR.w calcvar
00030F78 <AmiBlitz3.ab3@20600>   CMP.b #$7,D2
00030F7C <AmiBlitz3.ab3@20601>    BNE.w mismatcherr
00030F80 <AmiBlitz3.ab3@20602>   MOVE.w varmode(PC),-(A7)
00030F84 <AmiBlitz3.ab3@20603>   CMP.w #$3D,D0
00030F88 <AmiBlitz3.ab3@20604>    BNE.w syntaxerr
00030F8C <AmiBlitz3.ab3@20605>   BTST #$F,D2
00030F90 <AmiBlitz3.ab3@20606>    BNE.w JL_0_C31C
00030F94 <AmiBlitz3.ab3@20607>   MOVE.w JL_0_C2E0(PC),D1
00030F98 <AmiBlitz3.ab3@20608>   BSR.w pokewda5s
00030F9A <AmiBlitz3.ab3@20609>   MOVE.w D3,D1
00030F9E <AmiBlitz3.ab3@20610>   BSR.w writeword
00030FA2 <AmiBlitz3.ab3@20613>   MOVE.w L_0_C2E4(PC),D1
00030FA6 <AmiBlitz3.ab3@20614>   BSR.w writeword
00030FAC <AmiBlitz3.ab3@20615>   ADDQ.w #1,regnum
00030FAE <AmiBlitz3.ab3@20616>   MOVEQ.l #$03,D2
00030FB2 <AmiBlitz3.ab3@20617>   BSR.w eval
00030FB8 <AmiBlitz3.ab3@20618>   MOVE.l #$D000,D1
00030FBE <AmiBlitz3.ab3@20619>   MOVE.l d1,lastinstruction
00030FC0 <AmiBlitz3.ab3@20620>   TST.w (A7)+
00030FC4 <AmiBlitz3.ab3@20621>    BEQ.w Atokejsr
00030FC6 <AmiBlitz3.ab3@20622>   ADDQ.w #1,D1
00030FCA <AmiBlitz3.ab3@20623> BRA.w Atokejsr
00030FCC <AmiBlitz3.ab3@20627>   MOVE.w D0,D1
00030FD0 <AmiBlitz3.ab3@20628>    BPL.w syntaxerr
00030FD4 <AmiBlitz3.ab3@20629>   BCLR #$F,D1
00030FDA <AmiBlitz3.ab3@20630>    JSR searchinstr
00030FDE <AmiBlitz3.ab3@20631>   MOVE.l $12(A2),D0
00030FE2 <AmiBlitz3.ab3@20632>   TST.w -$2(A2,D0.L)
00030FE6 <AmiBlitz3.ab3@20633>    BEQ.w freeerr
00030FE8 <AmiBlitz3.ab3@20634>   MOVEQ.l #$02,D2
00030FEA <AmiBlitz3.ab3@20635>   MOVE.l A2,-(A7)
00030FEE <AmiBlitz3.ab3@20636>    BSR.w eval
00030FF0 <AmiBlitz3.ab3@20637>   MOVEA.l (A7)+,A2
00030FF6 <AmiBlitz3.ab3@20638>   MOVE.l A2,mymaxlib
00030FFA <AmiBlitz3.ab3@20639>   ADDA.l $12(A2),A2
00031000 <AmiBlitz3.ab3@20640>   TST.b debugmode
00031004 <AmiBlitz3.ab3@20641>    BEQ.w JL_0_C3A8
0003100A <AmiBlitz3.ab3@20642>   MOVE.w regnum,D1
0003100C <AmiBlitz3.ab3@20643>   LSL.w #8,D1
0003100E <AmiBlitz3.ab3@20644>   LSL.w #1,D1
00031012 <AmiBlitz3.ab3@20645>   ORI.w #$B07C,D1
00031016 <AmiBlitz3.ab3@20646>    BSR.w writeword
0003101A <AmiBlitz3.ab3@20647>   MOVE.w -$4(A2),D1
0003101E <AmiBlitz3.ab3@20648>    BSR.w writeword
00031024 <AmiBlitz3.ab3@20649>   MOVE.l maxchk,D1
00031028 <AmiBlitz3.ab3@20650>    BSR.w writelong
0003102A <AmiBlitz3.ab3@20651>   MOVE.l A2,-(A7)
0003102E <AmiBlitz3.ab3@20652>   MOVE.w #$C30A,D1
00031032 <AmiBlitz3.ab3@20653>    BSR.w Atokejsr
00031034 <AmiBlitz3.ab3@20654>   MOVEA.l (A7)+,A2
00031038 <AmiBlitz3.ab3@20657>   MOVE.w -$2(A2),D2
0003103E <AmiBlitz3.ab3@20660>   MOVE.w regnum,D1
00031044 <AmiBlitz3.ab3@20661>   OR.w lslimm,D1
00031048 <AmiBlitz3.ab3@20662>   CMP.w #$8,D2
0003104C <AmiBlitz3.ab3@20663>    BCS.w JL_0_C3CE
00031050 <AmiBlitz3.ab3@20664>    BSR.w writeword
00031052 <AmiBlitz3.ab3@20665>   SUBQ.w #8,D2
00031056 <AmiBlitz3.ab3@20666>    BNE.w JL_0_C3AC
0003105A <AmiBlitz3.ab3@20667> BRA.w JL_0_C3DA
0003105C <AmiBlitz3.ab3@20670>   MOVE.w D2,D0
0003105E <AmiBlitz3.ab3@20671>   LSL.w #8,D0
00031060 <AmiBlitz3.ab3@20672>   LSL.w #1,D0
00031062 <AmiBlitz3.ab3@20673>   OR.w D0,D1
00031066 <AmiBlitz3.ab3@20674>   BSR.w writeword
00031068 <AmiBlitz3.ab3@20677> RTS
0003106C <AmiBlitz3.ab3@20682>   Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003106E <AmiBlitz3.ab3@20683>   Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
00031072 <AmiBlitz3.ab3@20687> mymaxlib:  Ds.l 1
00031076 <AmiBlitz3.ab3@20691>   BSR.w JL_0_C340
0003107A <AmiBlitz3.ab3@20692>   LEA free(PC),A0
0003107E <AmiBlitz3.ab3@20693>   LEA freef(PC),A1
00031084 <AmiBlitz3.ab3@20694>   MOVE.w -$6(A2),$2(A0)
00031088 <AmiBlitz3.ab3@20695>   BSR.w pokecode
0003108C <AmiBlitz3.ab3@20696>   MOVE.l -$A(A2),D1
00031090 <AmiBlitz3.ab3@20699>   BEQ.w nosuperr
00031094 <AmiBlitz3.ab3@20700>   MOVEA.l mymaxlib(PC),A2
00031098 <AmiBlitz3.ab3@20701> BRA.w Amakelibsub
0003109C <AmiBlitz3.ab3@20706>   BSR.w JL_0_C340
000310A2 <AmiBlitz3.ab3@20707>   LEA use,A0
000310A8 <AmiBlitz3.ab3@20708>   LEA usef,A1
000310AE <AmiBlitz3.ab3@20709>   MOVE.w -$6(A2),$2(A0)
000310B4 <AmiBlitz3.ab3@20710>   MOVE.w -$6(A2),-$2(A1)
000310B8 <AmiBlitz3.ab3@20711>   ADDQ.w #4,-$2(A1)
000310BC <AmiBlitz3.ab3@20712>   BSR.w pokecode
000310C0 <AmiBlitz3.ab3@20713>   MOVE.l -$E(A2),D1
000310C4 <AmiBlitz3.ab3@20714> BRA.w maxjsr
000310CA <AmiBlitz3.ab3@20718>   JSR get1bytemain
000310D0 <AmiBlitz3.ab3@20722>   MOVE.l firstiff,D0
000310D4 <AmiBlitz3.ab3@20723>    BEQ.w noiferr
000310D6 <AmiBlitz3.ab3@20724>   MOVEA.l D0,A0
000310DC <AmiBlitz3.ab3@20725>   CMPI.b #$1,$D(A0)
000310E0 <AmiBlitz3.ab3@20726>    BEQ.w illelseerr
000310E4 <AmiBlitz3.ab3@20727>   MOVE.w #$6000,D1
000310EA <AmiBlitz3.ab3@20729>     TST.b fast
000310EE <AmiBlitz3.ab3@20730>     BEQ 'l1
000310F4 <AmiBlitz3.ab3@20731>     OR.l #$ff,d1
000310F8 <AmiBlitz3.ab3@20732>     BSR writeword
000310FA <AmiBlitz3.ab3@20736>   SWAP D1
000310FE <AmiBlitz3.ab3@20737>   BSR.w writelong
00031100 <AmiBlitz3.ab3@20738>   MOVEQ.l #$00,D1
00031104 <AmiBlitz3.ab3@20739>   BSR.w AJL_0_D7B8
0003110C <AmiBlitz3.ab3@20740>   MOVE.l destpointer,$8(A0)
00031110 <AmiBlitz3.ab3@20741> BRA.w do_then
00031116 <AmiBlitz3.ab3@20745>   LEA ptr_parameterstore,A0
00031118 <AmiBlitz3.ab3@20746>   MOVE.l A0,-(A7)
0003111C <AmiBlitz3.ab3@20747>   BSR.w JL_0_C23A
00031120 <AmiBlitz3.ab3@20748> BRA.w handle_compileerror
00031124 <AmiBlitz3.ab3@20752>   BSR.w JL_0_BF6A
00031126 <AmiBlitz3.ab3@20753>   MOVEQ.l #$05,D1
00031130 <AmiBlitz3.ab3@20755>   MOVE.w oldqflag,instringon
00031136 <AmiBlitz3.ab3@20756>   MOVEA.l lastsourcepos,A5
0003113C <AmiBlitz3.ab3@20757>   LEA AJL_0_C25E,A0
00031140 <AmiBlitz3.ab3@20758> BRA.w JL_0_C4B4
00031146 <AmiBlitz3.ab3@20762>   LEA ptr_parameterstore,A0
0003114A <AmiBlitz3.ab3@20763>   BSR.w JL_0_C23A
00031150 <AmiBlitz3.ab3@20764>   JSR get1bytemain
00031154 <AmiBlitz3.ab3@20765>   BSR.w JL_0_CCA8
0003115A <AmiBlitz3.ab3@20766>   LEA namebuff2,A0
0003115E <AmiBlitz3.ab3@20767>   BSR.w JL_0_C23A
00031164 <AmiBlitz3.ab3@20768>   LEA AJL_0_C262,A0
00031166 <AmiBlitz3.ab3@20771>   LSL.w #2,D1
0003116C <AmiBlitz3.ab3@20772>   LEA CIF_branches,A1
00031170 <AmiBlitz3.ab3@20773>   MOVE.l $0(A1,D1.W),-(A7)
00031172 <AmiBlitz3.ab3@20774>   MOVEQ.l #-$01,D1
00031174 <AmiBlitz3.ab3@20777>   JSR (A0)
00031176 <AmiBlitz3.ab3@20779>   MOVEA.l (A7)+,A1
00031178 <AmiBlitz3.ab3@20781> JMP (A1)
0003117C <AmiBlitz3.ab3@20785>   BEQ.w JL_0_C4F6
00031180 <AmiBlitz3.ab3@20786> BRA.w JL_0_C4F4
00031184 <AmiBlitz3.ab3@20790>   BNE.w JL_0_C4F6
00031188 <AmiBlitz3.ab3@20791> BRA.w JL_0_C4F4
0003118C <AmiBlitz3.ab3@20795>   BLT.w JL_0_C4F6
00031190 <AmiBlitz3.ab3@20796> BRA.w JL_0_C4F4
00031194 <AmiBlitz3.ab3@20800>   BLE.w JL_0_C4F6
00031198 <AmiBlitz3.ab3@20801> BRA.w JL_0_C4F4
0003119C <AmiBlitz3.ab3@20805>   BGT.w JL_0_C4F6
000311A0 <AmiBlitz3.ab3@20806> BRA.w JL_0_C4F4
000311A4 <AmiBlitz3.ab3@20810>   BGE.w JL_0_C4F6
000311A6 <AmiBlitz3.ab3@20813>   MOVEQ.l #$00,D1
000311AC <AmiBlitz3.ab3@20816>   MOVEA.l concomsp,A0
000311B2 <AmiBlitz3.ab3@20817>   MOVE.w skipcode,(A0)+
000311B8 <AmiBlitz3.ab3@20818>   MOVE.l A0,concomsp
000311BE <AmiBlitz3.ab3@20819>   MOVE.w D1,skipcode
000311C4 <AmiBlitz3.ab3@20820>   JSR get1bytemain
000311C8 <AmiBlitz3.ab3@20821>    BNE.w syntaxerr
000311CE <AmiBlitz3.ab3@20822> JMP bakup
000311D6 <AmiBlitz3.ab3@20826> rescode:   Dc.b $2B,$7c,$00,$00,$00,$00 :   Ds.w 1         ;MOVE.L  #$00000000,$0000(A5)
000311DA <AmiBlitz3.ab3@20827> rescode2:  Dc.b $2B,$40                 :   Ds.w 1         ;MOVE.L  D0,$0000(A5)
000311DE <AmiBlitz3.ab3@20834>   MOVE.w #$FC17,D1
000311E4 <AmiBlitz3.ab3@20835>   JSR uselib
000311EA <AmiBlitz3.ab3@20837>   JSR reget
000311EE <AmiBlitz3.ab3@20838>    BEQ.w do_Restore__resbeg
000311F2 <AmiBlitz3.ab3@20839>   BSR.w JL_0_AE22                                          ;get label name!
000311F6 <AmiBlitz3.ab3@20840>   MOVE.w rescode(PC),D1
000311FA <AmiBlitz3.ab3@20841>   BSR.w writeword
00031200 <AmiBlitz3.ab3@20842>   JSR addoff                                               ;add offset
00031204 <AmiBlitz3.ab3@20843>   MOVE.l $C(A2),D1
00031208 <AmiBlitz3.ab3@20844>   BSR.w writelong
0003120C <AmiBlitz3.ab3@20845>   MOVE.w rescode+6(PC),D1
00031210 <AmiBlitz3.ab3@20846>   BSR.w writeword
00031214 <AmiBlitz3.ab3@20847>   MOVE.l $4(A2),D1                                         ;is it outstanding?
00031218 <AmiBlitz3.ab3@20848>   BEQ.w do_Restore__no
0003121A <AmiBlitz3.ab3@20850>   MOVEA.l D1,A1
0003121E <AmiBlitz3.ab3@20851>   ADDQ.l #1,$4(A1)                                         ;make odd - flag for data reference.
00031220 <AmiBlitz3.ab3@20852> RTS
00031222 <AmiBlitz3.ab3@20857> RTS
00031226 <AmiBlitz3.ab3@20860>   MOVE.w #$CD00,D1
0003122C <AmiBlitz3.ab3@20861>   JSR Atokejsr
00031230 <AmiBlitz3.ab3@20862>   MOVE.l rescode2(PC),D1
00031236 <AmiBlitz3.ab3@20863> JMP writelong
0003123A <AmiBlitz3.ab3@20867>   MOVE.w #$FC17,D1
00031240 <AmiBlitz3.ab3@20868>   JSR uselib
00031246 <AmiBlitz3.ab3@20871>   MOVE.l dataget,D1
0003124A <AmiBlitz3.ab3@20872>   BSR.w writelong
0003124E <AmiBlitz3.ab3@20873>   BSR.w getparameter
00031252 <AmiBlitz3.ab3@20874>   BSR.w JL_0_8E3C
00031256 <AmiBlitz3.ab3@20875>   BSR.w calcvar
0003125A <AmiBlitz3.ab3@20876>   BTST #$E,D2
0003125E <AmiBlitz3.ab3@20877>    BEQ.w JL_0_C5A6
00031262 <AmiBlitz3.ab3@20878>   MOVE.b #$6,D2
00031264 <AmiBlitz3.ab3@20881>   TST.b D2
00031268 <AmiBlitz3.ab3@20882>    BEQ.w noleterr
0003126E <AmiBlitz3.ab3@20883>   TST.b debugmode
00031272 <AmiBlitz3.ab3@20884>    BEQ.w JL_0_C5D0
00031276 <AmiBlitz3.ab3@20885>   MOVE.w #$7000,D1
00031278 <AmiBlitz3.ab3@20886>   MOVE.b D2,D1
0003127C <AmiBlitz3.ab3@20887>   ANDI.b #$F,D1
00031280 <AmiBlitz3.ab3@20888>   BSR.w writeword
00031284 <AmiBlitz3.ab3@20889>   MOVE.w #$C310,D1
00031286 <AmiBlitz3.ab3@20890>   MOVE.w D2,-(A7)
0003128A <AmiBlitz3.ab3@20891>   BSR.w Atokejsr
0003128C <AmiBlitz3.ab3@20892>   MOVE.w (A7)+,D2
00031290 <AmiBlitz3.ab3@20895>   CMP.b #$7,D2
00031294 <AmiBlitz3.ab3@20896>    BEQ.w JL_0_C684
00031298 <AmiBlitz3.ab3@20897>   CMP.b #$1,D2
0003129C <AmiBlitz3.ab3@20898>    BNE.w JL_0_C62A
000312A2 <AmiBlitz3.ab3@20899>   LEA dataletb2,A0
000312A8 <AmiBlitz3.ab3@20900>   LEA dataletb2f,A1
000312AC <AmiBlitz3.ab3@20901>   BTST #$F,D2
000312B0 <AmiBlitz3.ab3@20902>    BEQ.w JL_0_C5FC
000312B4 <AmiBlitz3.ab3@20903>   BSR.w pokecode
000312B8 <AmiBlitz3.ab3@20904> BRA.w JL_0_C668
000312BE <AmiBlitz3.ab3@20907>   LEA dataletb,A0
000312C4 <AmiBlitz3.ab3@20908>   LEA dataletbf,A1
000312CA <AmiBlitz3.ab3@20909>   TST.w varmode
000312CE <AmiBlitz3.ab3@20910>    BEQ.w JL_0_C61E
000312D4 <AmiBlitz3.ab3@20911>   LEA dataletbl,A0
000312DA <AmiBlitz3.ab3@20912>   LEA dataletblf,A1
000312DE <AmiBlitz3.ab3@20915>   MOVE.w D3,$4(A0)
000312E2 <AmiBlitz3.ab3@20916>   BSR.w pokecode
000312E6 <AmiBlitz3.ab3@20917> BRA.w JL_0_C668
000312EC <AmiBlitz3.ab3@20920>   LEA dataletw,A0
000312F0 <AmiBlitz3.ab3@20921>   CMP.b #$3,D2
000312F4 <AmiBlitz3.ab3@20922>    BCS.w JL_0_C63E
000312FA <AmiBlitz3.ab3@20923>   LEA dataletl,A0
000312FE <AmiBlitz3.ab3@20926>   BTST #$F,D2
00031302 <AmiBlitz3.ab3@20927>    BEQ.w JL_0_C652
00031306 <AmiBlitz3.ab3@20928>   MOVE.w $4(A0),D1
0003130A <AmiBlitz3.ab3@20929>    BSR.w writeword
0003130E <AmiBlitz3.ab3@20930> BRA.w JL_0_C668
00031314 <AmiBlitz3.ab3@20933>   TST.w varmode
00031318 <AmiBlitz3.ab3@20934>    BEQ.w JL_0_C65E
0003131A <AmiBlitz3.ab3@20935>   ADDQ.w #6,A0
0003131E <AmiBlitz3.ab3@20938>   MOVE.w D3,$2(A0)
00031320 <AmiBlitz3.ab3@20939>   MOVE.l (A0),D1
00031324 <AmiBlitz3.ab3@20940>   BSR.w writelong
0003132A <AmiBlitz3.ab3@20943>   MOVE.l dataput,D1
0003132E <AmiBlitz3.ab3@20944>    BSR.w writelong
00031332 <AmiBlitz3.ab3@20945>   CMP.w #$2C,D0
00031336 <AmiBlitz3.ab3@20946>    BEQ.w JL_0_C67C
00031338 <AmiBlitz3.ab3@20947> RTS
0003133E <AmiBlitz3.ab3@20950>   JSR get1bytemain
00031342 <AmiBlitz3.ab3@20951> BRA.w JL_0_C584
00031348 <AmiBlitz3.ab3@20955>   MOVE.w stlenget,D1
0003134C <AmiBlitz3.ab3@20956>    BSR.w writeword
00031350 <AmiBlitz3.ab3@20957>   BTST #$F,D2
00031354 <AmiBlitz3.ab3@20958>    BNE.w JL_0_C6C0
0003135A <AmiBlitz3.ab3@20959>   TST.w varmode
0003135E <AmiBlitz3.ab3@20960>    BEQ.w JL_0_C6B0
00031364 <AmiBlitz3.ab3@20961>   MOVE.w D3,leaampl+2
0003136A <AmiBlitz3.ab3@20962>   MOVE.l leaampl,D1
0003136E <AmiBlitz3.ab3@20963> BRA.w JL_0_C6BC
00031374 <AmiBlitz3.ab3@20966>   MOVE.w D3,leaamp+2
0003137A <AmiBlitz3.ab3@20967>   MOVE.l leaamp,D1
0003137E <AmiBlitz3.ab3@20970>   BSR.w writelong
00031382 <AmiBlitz3.ab3@20973>   MOVE.w #$C701,D1
00031388 <AmiBlitz3.ab3@20974>   MOVE.w varmode,D2
0003138C <AmiBlitz3.ab3@20975>    BEQ.w JL_0_C6D0
0003138E <AmiBlitz3.ab3@20976>   SUBQ.w #1,D1
00031392 <AmiBlitz3.ab3@20979>   BSR.w Atokejsr
0003139A <AmiBlitz3.ab3@20980>   MOVE.w #$FFFF,lasta6
000313A0 <AmiBlitz3.ab3@20981>   LEA stalign,A0
000313A6 <AmiBlitz3.ab3@20982>   LEA stalignf,A1
000313AA <AmiBlitz3.ab3@20983>   BSR.w pokecode
000313AE <AmiBlitz3.ab3@20984> BRA.w JL_0_C668
000313B2 <AmiBlitz3.ab3@20988>   CMP.w #$2E,D0                                            ;definecode 'lb 'lw 'll
000313B6 <AmiBlitz3.ab3@20989>    BNE.w JL_0_C720
000313BC <AmiBlitz3.ab3@20990>   JSR get1bytemain
000313C0 <AmiBlitz3.ab3@20991>   CMP.w #$77,D0
000313C4 <AmiBlitz3.ab3@20992>    BEQ.w JL_0_C71C
000313C8 <AmiBlitz3.ab3@20993>   CMP.w #$62,D0
000313CC <AmiBlitz3.ab3@20994>    BEQ.w JL_0_C718
000313D0 <AmiBlitz3.ab3@20995>   CMP.w #"s",d0
000313D4 <AmiBlitz3.ab3@20996>   BEQ single3
000313D8 <AmiBlitz3.ab3@20997>   CMP.w #"d",d0
000313DC <AmiBlitz3.ab3@20998>   BEQ double3
000313E0 <AmiBlitz3.ab3@20999>   CMP.w #$6C,D0
000313E4 <AmiBlitz3.ab3@21000>    BNE.w syntaxerr
000313E6 <AmiBlitz3.ab3@21001>   MOVEQ.l #$02,D1
000313E8 <AmiBlitz3.ab3@21002> RTS
000313F0 <AmiBlitz3.ab3@21006>   MOVE.b #1,iee
000313F2 <AmiBlitz3.ab3@21007>   MOVEQ.l #$3,d1
000313F4 <AmiBlitz3.ab3@21008> RTS
000313FC <AmiBlitz3.ab3@21012>   MOVE.b #1,iee
000313FE <AmiBlitz3.ab3@21013>   MOVEQ.l #$4,d1
00031400 <AmiBlitz3.ab3@21014> RTS
00031402 <AmiBlitz3.ab3@21018>   MOVEQ.l #$00,D1
00031404 <AmiBlitz3.ab3@21019> RTS
00031406 <AmiBlitz3.ab3@21023>   MOVEQ.l #$01,D1
00031408 <AmiBlitz3.ab3@21024> RTS
0003140A <AmiBlitz3.ab3@21028>   MOVEQ.l #$01,D1
00031410 <AmiBlitz3.ab3@21029> JMP bakup
00031414 <AmiBlitz3.ab3@21033>   BSR.w JL_0_C6F0
00031416 <AmiBlitz3.ab3@21035>   MOVE.w D1,-(A7)
0003141A <AmiBlitz3.ab3@21036>    BSR.w AJL_0_BF6E
0003141E <AmiBlitz3.ab3@21037>   CMP.w #$2C,D0
00031422 <AmiBlitz3.ab3@21038>    BNE.w syntaxerr
00031424 <AmiBlitz3.ab3@21039>   MOVE.l D3,-(A7)
00031428 <AmiBlitz3.ab3@21040>    BSR.w AJL_0_BF6E
0003142A <AmiBlitz3.ab3@21041>   MOVE.l D3,D1
0003142C <AmiBlitz3.ab3@21042>   MOVE.l (A7)+,D3
0003142E <AmiBlitz3.ab3@21043>   MOVE.w (A7)+,D2
00031432 <AmiBlitz3.ab3@21044>    BEQ.w JL_0_C774
00031436 <AmiBlitz3.ab3@21048>   CMP.w #$1,D2
0003143A <AmiBlitz3.ab3@21049>    BEQ.w JL_0_C768
0003143C <AmiBlitz3.ab3@21052>   SWAP D1
00031440 <AmiBlitz3.ab3@21053>    BSR.w writeword
00031442 <AmiBlitz3.ab3@21054>   SWAP D1
00031446 <AmiBlitz3.ab3@21055>    BSR.w writeword
00031448 <AmiBlitz3.ab3@21056>   SUBQ.l #1,D3
0003144C <AmiBlitz3.ab3@21057>    BNE.w JL_0_C754
0003144E <AmiBlitz3.ab3@21058> RTS
00031452 <AmiBlitz3.ab3@21061>    BSR.w writeword
00031454 <AmiBlitz3.ab3@21062>   SUBQ.l #1,D3
00031458 <AmiBlitz3.ab3@21063>    BNE.w JL_0_C768
0003145A <AmiBlitz3.ab3@21064> RTS
0003145E <AmiBlitz3.ab3@21067>    BSR.w writebyte
00031460 <AmiBlitz3.ab3@21068>   SUBQ.l #1,D3
00031464 <AmiBlitz3.ab3@21069>    BNE.w JL_0_C774
00031466 <AmiBlitz3.ab3@21070> RTS
0003146A <AmiBlitz3.ab3@21074>   BSR.w JL_0_C6F0                                          ;definestorage
0003146C <AmiBlitz3.ab3@21075>   MOVE.w D1,-(A7)
00031470 <AmiBlitz3.ab3@21076>   BSR.w AJL_0_BF6E
00031472 <AmiBlitz3.ab3@21077>   MOVE.w (A7)+,D1
00031474 <AmiBlitz3.ab3@21078>   LSL.l D1,D3
00031476 <AmiBlitz3.ab3@21079>   MOVE.l d3,d0
0003147A <AmiBlitz3.ab3@21080>   BEQ 'll5
0003147C <AmiBlitz3.ab3@21081>   MOVEQ #0,d1
00031482 <AmiBlitz3.ab3@21084>     JSR writebyte
00031484 <AmiBlitz3.ab3@21085>     SUBQ.l #1,d3
00031488 <AmiBlitz3.ab3@21086>   BNE.s 'll10
0003148A <AmiBlitz3.ab3@21089> RTS
0003148C <AmiBlitz3.ab3@21093>   MOVE.w D0,-(A7)
00031492 <AmiBlitz3.ab3@21094>   LEA dummyasm,A0
00031498 <AmiBlitz3.ab3@21095>   MOVEA.l destpointer,A1
000314A2 <AmiBlitz3.ab3@21096>   MOVE.w asmlen2,asmlen
000314A8 <AmiBlitz3.ab3@21097>   JSR insasm
000314AA <AmiBlitz3.ab3@21098>   MOVE.w (A7)+,D0
000314AC <AmiBlitz3.ab3@21099> RTS
000314B0 <AmiBlitz3.ab3@21103>   BSR.w JL_0_C6F0
000314BA <AmiBlitz3.ab3@21105>   MOVE.l #ptr_parameterstore,asmbuff
000314BC <AmiBlitz3.ab3@21106>   TST.w D1
000314C0 <AmiBlitz3.ab3@21107>    BEQ.w JL_0_C7EE
000314C4 <AmiBlitz3.ab3@21108>   CMP.w #$1,D1
000314C8 <AmiBlitz3.ab3@21109>    BEQ.w JL_0_C844
000314CC <AmiBlitz3.ab3@21110>   CMP.w #$2,d1
000314D0 <AmiBlitz3.ab3@21111>    BEQ long
000314D4 <AmiBlitz3.ab3@21112>   CMP.w #$3,d1
000314D8 <AmiBlitz3.ab3@21113>    BEQ single
000314DA <AmiBlitz3.ab3@21114>    MOVEQ.l #$0d,D3
000314E0 <AmiBlitz3.ab3@21120>    JSR asmconst
000314E4 <AmiBlitz3.ab3@21121>    BSR.w JL_0_C796
000314E8 <AmiBlitz3.ab3@21122>    BSR.w writelong
000314EC <AmiBlitz3.ab3@21123>    BSR   writelong
000314F0 <AmiBlitz3.ab3@21124>   CMP.w #$2C,D0
000314F4 <AmiBlitz3.ab3@21125>    BEQ.w JL_0_C7D8b
000314F6 <AmiBlitz3.ab3@21126> RTS
000314F8 <AmiBlitz3.ab3@21130>   MOVEQ.l #$0B,D3
00031500 <AmiBlitz3.ab3@21134>   MOVE.b #1,_dcb
00031506 <AmiBlitz3.ab3@21137>   JSR asmconst
0003150C <AmiBlitz3.ab3@21138>   CLR.b _dcb
00031510 <AmiBlitz3.ab3@21139>   BSR.w JL_0_C796
00031514 <AmiBlitz3.ab3@21140>   BSR writebyte
00031518 <AmiBlitz3.ab3@21141>   BSR writebyte
0003151C <AmiBlitz3.ab3@21142>   BSR writebyte                                            ;long
00031520 <AmiBlitz3.ab3@21143>   BSR writebyte
00031524 <AmiBlitz3.ab3@21144>   CMP.w #$2C,D0
00031528 <AmiBlitz3.ab3@21145>    BEQ.w JL_0_C7D8
0003152A <AmiBlitz3.ab3@21146> RTS
0003152C <AmiBlitz3.ab3@21150>   MOVEQ.l #$0c,D3
00031534 <AmiBlitz3.ab3@21154>   MOVE.b #1,_dcb
0003153A <AmiBlitz3.ab3@21157>   JSR asmconst
00031540 <AmiBlitz3.ab3@21158>   CLR.b _dcb
00031544 <AmiBlitz3.ab3@21159>   BSR.w JL_0_C796
00031548 <AmiBlitz3.ab3@21160>   BSR.w writebyte
0003154C <AmiBlitz3.ab3@21161>   BSR.w writebyte
00031550 <AmiBlitz3.ab3@21162>   BSR.w writebyte
00031554 <AmiBlitz3.ab3@21163>   BSR.w writebyte
00031558 <AmiBlitz3.ab3@21164>   CMP.w #$2C,D0
0003155C <AmiBlitz3.ab3@21165>    BEQ.w JL_0_C7D8a
0003155E <AmiBlitz3.ab3@21166> RTS
00031560 <AmiBlitz3.ab3@21171>   MOVEQ.l #$11,D3
00031566 <AmiBlitz3.ab3@21174>   JSR get1bytemain
0003156A <AmiBlitz3.ab3@21175>   CMP.w #$22,D0
0003156E <AmiBlitz3.ab3@21176>    BNE.w JL_0_C81E
00031570 <AmiBlitz3.ab3@21179>   MOVE.b (a5)+,d0                                          ;bsr.w get1bytemain ascii dc.b
00031574 <AmiBlitz3.ab3@21180>    BEQ.w syntaxerr
00031578 <AmiBlitz3.ab3@21181>   CMP.w #$22,D0
0003157C <AmiBlitz3.ab3@21182>    BEQ.w JL_0_C816
00031580 <AmiBlitz3.ab3@21183>   CMP.b #"\",d0
00031584 <AmiBlitz3.ab3@21184>    BNE 'n1
00031588 <AmiBlitz3.ab3@21185>   CMP.b #"\",(a5)
0003158C <AmiBlitz3.ab3@21186>    BEQ 'do1
0003158E <AmiBlitz3.ab3@21189>   MOVE.w D0,D1
00031592 <AmiBlitz3.ab3@21190>   BSR.w writebyte
00031596 <AmiBlitz3.ab3@21191> BRA.w JL_0_C7FC
0003159E <AmiBlitz3.ab3@21194>   CMP.l #"__DA",1(a5)
000315A2 <AmiBlitz3.ab3@21195>    BNE 'nodate1
000315AA <AmiBlitz3.ab3@21196>   CMP.l #"TE__",5(a5)
000315AE <AmiBlitz3.ab3@21197>    BEQ 'c1
000315B6 <AmiBlitz3.ab3@21198>   CMP.l #"TE_G",5(a5)
000315BA <AmiBlitz3.ab3@21199>    BNE 'nodate1
000315C2 <AmiBlitz3.ab3@21200>   CMP.l #"ER__",9(a5)
000315C6 <AmiBlitz3.ab3@21201>    BNE 'nodate1
000315CC <AmiBlitz3.ab3@21202>   JSR compiledatedc_ger
000315D0 <AmiBlitz3.ab3@21203> BRA 'n1
000315D6 <AmiBlitz3.ab3@21206>   JSR compiledatedc
000315DA <AmiBlitz3.ab3@21207> BRA 'n1
000315E2 <AmiBlitz3.ab3@21210>   CMP.l #"__VE",1(a5)
000315E6 <AmiBlitz3.ab3@21211>    BNE 'n1
000315EC <AmiBlitz3.ab3@21212>   CMP.w #"R_",5(a5)
000315F0 <AmiBlitz3.ab3@21213>    BNE 'n1
000315F6 <AmiBlitz3.ab3@21214>   JSR version_string_dc
000315FA <AmiBlitz3.ab3@21215> BRA.w JL_0_C7FC
00031600 <AmiBlitz3.ab3@21219>   CLR.w instringon
00031606 <AmiBlitz3.ab3@21220>   JSR get1bytemain
0003160A <AmiBlitz3.ab3@21221> BRA.w JL_0_C83A
00031614 <AmiBlitz3.ab3@21226>    MOVE.w oldqflag,instringon
0003161A <AmiBlitz3.ab3@21227>   MOVEA.l lastsourcepos,A5
00031620 <AmiBlitz3.ab3@21228>    JSR asmconst
00031626 <AmiBlitz3.ab3@21229>   SUBQ.l #1,destpointer
0003162A <AmiBlitz3.ab3@21230>    BSR.w JL_0_C796
00031630 <AmiBlitz3.ab3@21231>   ADDQ.l #1,destpointer
00031634 <AmiBlitz3.ab3@21232>    BSR.w writebyte
00031638 <AmiBlitz3.ab3@21235>   CMP.w #$2C,D0
0003163C <AmiBlitz3.ab3@21236>    BEQ.w JL_0_C7F0
0003163E <AmiBlitz3.ab3@21237> RTS
00031640 <AmiBlitz3.ab3@21241>   MOVEQ.l #$10,D3
00031648 <AmiBlitz3.ab3@21247>   MOVE.b #1,_dcb
0003164E <AmiBlitz3.ab3@21248>   JSR asmconst
00031654 <AmiBlitz3.ab3@21249>   CLR.b _dcb
00031658 <AmiBlitz3.ab3@21250>   BSR.w JL_0_C796
0003165C <AmiBlitz3.ab3@21251>   BSR.w writebyte
00031660 <AmiBlitz3.ab3@21252>   BSR.w writebyte
00031664 <AmiBlitz3.ab3@21253>   CMP.w #$2C,D0
00031668 <AmiBlitz3.ab3@21254>    BEQ.w JL_0_C84A
0003166A <AmiBlitz3.ab3@21255> RTS
00031670 <AmiBlitz3.ab3@21259>   ADDQ.l #3,destpointer
00031678 <AmiBlitz3.ab3@21260>   ANDI.w #$FFFC,destpointer+2
0003167A <AmiBlitz3.ab3@21261> RTS
00031680 <AmiBlitz3.ab3@21265>   ADDQ.l #7,destpointer
00031688 <AmiBlitz3.ab3@21266>   ANDI.w #$FFF8,destpointer+2
0003168A <AmiBlitz3.ab3@21267> RTS
00031690 <AmiBlitz3.ab3@21271>   ADDQ.l #1,destpointer                                    ;even
00031698 <AmiBlitz3.ab3@21272>   BCLR #$0,destpointer+3
0003169A <AmiBlitz3.ab3@21273> RTS
0003169C <AmiBlitz3.ab3@21276> datasize: Ds.w 1
000316A2 <AmiBlitz3.ab3@21286>   TST.b debugmode
000316A6 <AmiBlitz3.ab3@21287>   BEQ.w pdt__skip
000316AA <AmiBlitz3.ab3@21288>   MOVE.w #$4420,D0                                         ;'D '
000316AE <AmiBlitz3.ab3@21289>   MOVE.b datasize+1(PC),D0
000316B2 <AmiBlitz3.ab3@21290> BRA.w JL_0_C1E6
000316B4 <AmiBlitz3.ab3@21293> RTS
000316B8 <AmiBlitz3.ab3@21297>   MOVE.w #$FC17,D1
000316BE <AmiBlitz3.ab3@21298>    JSR uselib
000316C8 <AmiBlitz3.ab3@21300>    MOVE.w oldqflag,instringon
000316CE <AmiBlitz3.ab3@21301>   MOVEA.l lastsourcepos,A5
000316D4 <AmiBlitz3.ab3@21302>    JSR AJL_0_498A
000316DA <AmiBlitz3.ab3@21303>   MOVE.w D1,datasize
000316DE <AmiBlitz3.ab3@21304>   CMP.w #$7,D1
000316E2 <AmiBlitz3.ab3@21305>    BEQ.w JL_0_C944
000316E4 <AmiBlitz3.ab3@21306>   MOVE.w D1,-(A7)
000316E8 <AmiBlitz3.ab3@21309>   BSR.w pdt
000316EA <AmiBlitz3.ab3@21310>   MOVE.w (A7),D2
000316EE <AmiBlitz3.ab3@21311>    BSR.w JL_0_B1D8
000316F0 <AmiBlitz3.ab3@21312>   CMP.w (A7),D2                                            ;datamode
000316F4 <AmiBlitz3.ab3@21313>    BEQ.w JL_0_C920
000316F6 <AmiBlitz3.ab3@21314>   MOVE.w D2,D1
000316F8 <AmiBlitz3.ab3@21315>   MOVE.w (A7),D2
000316FC <AmiBlitz3.ab3@21316>   CMP.w #$2,D2
00031700 <AmiBlitz3.ab3@21317>    BNE.w JL_0_C8FE
00031704 <AmiBlitz3.ab3@21318>   CMP.w #$3,D1
00031708 <AmiBlitz3.ab3@21319>    BNE.w baddaterr
0003170E <AmiBlitz3.ab3@21320>   CMP.l #$10000,D3
00031712 <AmiBlitz3.ab3@21321>    BCC.w baddaterr
00031716 <AmiBlitz3.ab3@21322> BRA.w JL_0_C920
0003171A <AmiBlitz3.ab3@21325>   CMP.w #$1,D2
0003171E <AmiBlitz3.ab3@21326>    BNE.w JL_0_C91C
00031722 <AmiBlitz3.ab3@21327>   CMP.w #$2,D1
00031726 <AmiBlitz3.ab3@21328>    BNE.w baddaterr
0003172C <AmiBlitz3.ab3@21329>   CMP.l #$100,D3
00031730 <AmiBlitz3.ab3@21330>    BCC.w baddaterr
00031734 <AmiBlitz3.ab3@21331> BRA.w JL_0_C920
00031738 <AmiBlitz3.ab3@21334> BRA.w baddaterr
0003173C <AmiBlitz3.ab3@21337>   CMP.w #$3,D2
00031740 <AmiBlitz3.ab3@21338>   BCC.w JL_0_C930
00031744 <AmiBlitz3.ab3@21339>   BSR.w JL_0_C1E6
00031748 <AmiBlitz3.ab3@21340> BRA.w JL_0_C934
0003174E <AmiBlitz3.ab3@21343>   TST.b iee
00031752 <AmiBlitz3.ab3@21344>   BEQ 'old
00031756 <AmiBlitz3.ab3@21345>   CMP.b #5,d2
0003175A <AmiBlitz3.ab3@21346>   BNE 'old
0003175E <AmiBlitz3.ab3@21347>   Dc.l $f2006400                                           ;  fpu data write fmove.s fp0,d0
00031762 <AmiBlitz3.ab3@21351>   BSR.w JL_0_C1DE                                          ;write data >3
00031768 <AmiBlitz3.ab3@21354>   JSR reget
0003176C <AmiBlitz3.ab3@21355>   CMP.w #$2C,D0
00031770 <AmiBlitz3.ab3@21356>    BEQ.w JL_0_C8CC
00031772 <AmiBlitz3.ab3@21357>   ADDQ.w #2,A7
00031774 <AmiBlitz3.ab3@21358> RTS
00031778 <AmiBlitz3.ab3@21361>    BSR.w pdt
0003177E <AmiBlitz3.ab3@21362>   MOVE.l data2,-(A7)
00031782 <AmiBlitz3.ab3@21363>    BSR.w JL_0_C1DE
00031784 <AmiBlitz3.ab3@21364>   MOVEQ.l #$00,D1
0003178A <AmiBlitz3.ab3@21365>    JSR get1bytemain
0003178E <AmiBlitz3.ab3@21366>    BEQ.w JL_0_C9A6
00031792 <AmiBlitz3.ab3@21367>   CMP.w #$22,D0
00031796 <AmiBlitz3.ab3@21368>    BEQ.w JL_0_C988
0003179A <AmiBlitz3.ab3@21369>   CMP.w #$2C,D0
0003179E <AmiBlitz3.ab3@21370>    BEQ.w JL_0_C9A6
000317A2 <AmiBlitz3.ab3@21373>    BSR.w JL_0_C210
000317A4 <AmiBlitz3.ab3@21374>   ADDQ.w #1,D1
000317AA <AmiBlitz3.ab3@21375>    JSR getchar
000317AC <AmiBlitz3.ab3@21376>   TST.w D0
000317B0 <AmiBlitz3.ab3@21377>    BEQ.w JL_0_C9A6
000317B4 <AmiBlitz3.ab3@21378>   CMP.w #$2C,D0
000317B8 <AmiBlitz3.ab3@21379>    BEQ.w JL_0_C9A6
000317BC <AmiBlitz3.ab3@21380> BRA.w JL_0_C96C
000317BE <AmiBlitz3.ab3@21384>    MOVEQ #0,d0
000317C0 <AmiBlitz3.ab3@21385>    MOVE.b (a5)+,d0
000317C4 <AmiBlitz3.ab3@21386>    BEQ.w notqerr2
000317C8 <AmiBlitz3.ab3@21387>   CMP.w #$22,D0
000317CC <AmiBlitz3.ab3@21388>    BEQ.w JL_0_C9A2
000317D0 <AmiBlitz3.ab3@21389>    BSR.w JL_0_C210
000317D2 <AmiBlitz3.ab3@21390>   ADDQ.w #1,D1
000317D6 <AmiBlitz3.ab3@21391> BRA.w JL_0_C988
000317DC <AmiBlitz3.ab3@21392> notqerr2 JMP notqerr
000317E2 <AmiBlitz3.ab3@21394>   CLR.w instringon
000317E8 <AmiBlitz3.ab3@21395>   JSR get1bytemain
000317EA <AmiBlitz3.ab3@21398>   MOVEA.l (A7)+,A0
000317F0 <AmiBlitz3.ab3@21399>   MOVE.w dontwrite,D2
000317F4 <AmiBlitz3.ab3@21400>    BNE.w JL_0_C9B4
000317F6 <AmiBlitz3.ab3@21401>   MOVE.l D1,(A0)
000317FC <AmiBlitz3.ab3@21404>   ADDQ.l #1,data2
00031804 <AmiBlitz3.ab3@21405>   BCLR #$0,data2+3
00031808 <AmiBlitz3.ab3@21406>   CMP.w #$2C,D0
0003180C <AmiBlitz3.ab3@21407>    BEQ.w JL_0_C944
0003180E <AmiBlitz3.ab3@21408> RTS
00031814 <AmiBlitz3.ab3@21412> JMP vardeclareerr
0003181A <AmiBlitz3.ab3@21415>   MOVE.w proceduremode,D1                                  ;doshared
0003181E <AmiBlitz3.ab3@21417>   BNE.w 'l1
00031820 <AmiBlitz3.ab3@21418>   MOVE.w D1,-(A7)
00031826 <AmiBlitz3.ab3@21419>   CLR.w proceduremode
0003182C <AmiBlitz3.ab3@21422>   LEA varbase,a2
00031830 <AmiBlitz3.ab3@21423>   BSR.w getparameter
00031832 <AmiBlitz3.ab3@21424>   MOVE.w d2,-(a7)
00031838 <AmiBlitz3.ab3@21425>    JSR findvariable
0003183C <AmiBlitz3.ab3@21426>    BEQ 'checkdim
00031842 <AmiBlitz3.ab3@21427>    LEA sharebase,a2
00031844 <AmiBlitz3.ab3@21428>    MOVEQ #$f+4,d7
00031848 <AmiBlitz3.ab3@21429>    BSR.w findlab                                         ;find var
0003184C <AmiBlitz3.ab3@21430>    BEQ.b dupsherr
00031850 <AmiBlitz3.ab3@21431>    BSR addlabel
00031854 <AmiBlitz3.ab3@21432>    CMP.b #".",d0
00031858 <AmiBlitz3.ab3@21433>    BNE JUMP_vardeclareerr
0003185A <AmiBlitz3.ab3@21434>    MOVE.l a2,a3
00031860 <AmiBlitz3.ab3@21435>    JSR JL_0_8EB8b
00031862 <AmiBlitz3.ab3@21466>   MOVE.w (a7)+,d2
00031866 <AmiBlitz3.ab3@21467>    CMP.b #",",d0
0003186A <AmiBlitz3.ab3@21468>    BNE 'ret
00031870 <AmiBlitz3.ab3@21469>    JSR get1bytemain
00031874 <AmiBlitz3.ab3@21470> BRA 'again2
0003187A <AmiBlitz3.ab3@21473>   MOVE.w (A7)+,proceduremode
0003187C <AmiBlitz3.ab3@21474> RTS
00031882 <AmiBlitz3.ab3@21481>    CMP.w #2,6(a2)
00031886 <AmiBlitz3.ab3@21482>    BEQ 'do
0003188C <AmiBlitz3.ab3@21483>    CMP.w #$102,6(a2)
00031890 <AmiBlitz3.ab3@21484>    BEQ 'do
00031896 <AmiBlitz3.ab3@21485> JMP errormsg_declaredtwice                                 ;was BRA 'errormsg_declaredtwice_
0003189C <AmiBlitz3.ab3@21488>   LEA varbase,a0
0003189E <AmiBlitz3.ab3@21491>   MOVE.l (A0),D0                                           ;find label
000318A2 <AmiBlitz3.ab3@21492>    BEQ.b 'z1
000318A4 <AmiBlitz3.ab3@21493>    CMP.l d0,a2
000318A8 <AmiBlitz3.ab3@21494>    BEQ 'z1
000318AA <AmiBlitz3.ab3@21495>    MOVE.l d0,a0
000318AE <AmiBlitz3.ab3@21496> BRA 'm1
000318B0 <AmiBlitz3.ab3@21499>   MOVE.l (a2),d1
000318B2 <AmiBlitz3.ab3@21500>     MOVE.l d1,(a0)
000318B4 <AmiBlitz3.ab3@21501>     CLR.l (a2)
000318BA <AmiBlitz3.ab3@21502>     LEA sharebase,a0
000318BC <AmiBlitz3.ab3@21503>     MOVE.l (a0),(a2)
000318BE <AmiBlitz3.ab3@21504>     MOVE.l a2,(a0)
000318C4 <AmiBlitz3.ab3@21505>     JSR get1bytemain
000318CA <AmiBlitz3.ab3@21506>     JSR get1bytemain
000318CE <AmiBlitz3.ab3@21507> BRA 'domore
000318D6 <AmiBlitz3.ab3@21510>   MOVE.b #1,nowdeclare
000318D8 <AmiBlitz3.ab3@21511>   MOVE.w D1,-(A7)
000318DE <AmiBlitz3.ab3@21512>   CLR.w proceduremode
000318E2 <AmiBlitz3.ab3@21515>    BSR.w getparameter
000318E4 <AmiBlitz3.ab3@21516>   MOVE.w D2,-(A7)
000318EA <AmiBlitz3.ab3@21517>   LEA firstglob,A2
000318EE <AmiBlitz3.ab3@21518>    BSR.w findvariable2
000318F2 <AmiBlitz3.ab3@21519>    BNE.b JL_0_CA06
000318F8 <AmiBlitz3.ab3@21522>   MOVE.b flagmask+1,D1
000318FC <AmiBlitz3.ab3@21523>   MOVE.b $7(A2),D3
000318FE <AmiBlitz3.ab3@21524>   EOR.b D3,D1
00031902 <AmiBlitz3.ab3@21525>    BEQ.w dupsherr
00031906 <AmiBlitz3.ab3@21526>    BSR.w findlab
0003190A <AmiBlitz3.ab3@21527>    BEQ.b JL_0_C9F0
0003190E <AmiBlitz3.ab3@21530>    BSR.w addlabel
00031910 <AmiBlitz3.ab3@21531>   MOVE.w (A7)+,D2
00031912 <AmiBlitz3.ab3@21532>   MOVE.l A2,-(A7)
00031916 <AmiBlitz3.ab3@21533>    BSR.w JL_0_8E3C
00031918 <AmiBlitz3.ab3@21534>   MOVEA.l (A7)+,A2
0003191A <AmiBlitz3.ab3@21535>   MOVEQ.l #$04,D1
0003191C <AmiBlitz3.ab3@21536>   ADDQ.w #4,A2
0003191E <AmiBlitz3.ab3@21537>   ADDQ.w #4,A3
00031920 <AmiBlitz3.ab3@21540>     MOVE.w (A3)+,(A2)+
00031924 <AmiBlitz3.ab3@21541>   DBF D1,JL_0_CA1A
0003192C <AmiBlitz3.ab3@21543>   BTST #$1,flagmask+1
00031930 <AmiBlitz3.ab3@21544>    BEQ.w JL_0_CA3C
00031936 <AmiBlitz3.ab3@21545>    JSR get1bytemain
0003193A <AmiBlitz3.ab3@21546>   CMP.w #$29,D0
0003193E <AmiBlitz3.ab3@21547>    BNE.w syntaxerrc
00031944 <AmiBlitz3.ab3@21548>    JSR get1bytemain
00031948 <AmiBlitz3.ab3@21551>    CMP.w #$2C,D0
0003194C <AmiBlitz3.ab3@21552>    BNE.w JL_0_CA4C
00031952 <AmiBlitz3.ab3@21553>    JSR get1bytemain
00031956 <AmiBlitz3.ab3@21554> BRA.w JL_0_C9DE
0003195C <AmiBlitz3.ab3@21557>   MOVE.w (A7)+,proceduremode
0003195E <AmiBlitz3.ab3@21558> RTS
00031964 <AmiBlitz3.ab3@21560> syntaxerrc JMP syntaxerr
00031968 <AmiBlitz3.ab3@21563>    BSR.w JL_0_C05C
0003196E <AmiBlitz3.ab3@21564>    JSR check_incdir                                        ; ergebnis in d2
00031974 <AmiBlitz3.ab3@21566>    LEA ptr_parameterstore,a1
00031976 <AmiBlitz3.ab3@21567>    MOVE.l d2,-(a7)
0003197C <AmiBlitz3.ab3@21568>    LEA includetemp,a0                                      ; filename in includetemp packen
0003197E <AmiBlitz3.ab3@21571>      MOVE.b (a1)+,(a0)+
00031982 <AmiBlitz3.ab3@21572>    BNE 'l4
00031988 <AmiBlitz3.ab3@21574>    LEA ptr_parameterstore,a1
0003198A <AmiBlitz3.ab3@21575>    MOVE.l a1,a0
0003198C <AmiBlitz3.ab3@21578>     TST.b (a0)+
00031990 <AmiBlitz3.ab3@21579>    BNE 'l1
00031992 <AmiBlitz3.ab3@21582>      MOVE.b -(a0),d0
00031996 <AmiBlitz3.ab3@21583>      CMP.b #":",d0
0003199A <AmiBlitz3.ab3@21584>       BEQ 'out
0003199E <AmiBlitz3.ab3@21585>      CMP.b #"/",d0
000319A2 <AmiBlitz3.ab3@21586>       BEQ 'out
000319A4 <AmiBlitz3.ab3@21587>      CMP.l a1,a0
000319A8 <AmiBlitz3.ab3@21588>       BEQ 'out2
000319AC <AmiBlitz3.ab3@21589> BRA 'l2
000319AE <AmiBlitz3.ab3@21592>    ADDQ.l #1,a0                                            ; dateinamen vom pfad extrahiert
000319B0 <AmiBlitz3.ab3@21595>    MOVEQ.l #-$01,D2
000319B2 <AmiBlitz3.ab3@21598>      ADDQ.w #1,D2
000319B4 <AmiBlitz3.ab3@21599>      MOVE.b (a0)+,(a1)+
000319B8 <AmiBlitz3.ab3@21600>    BNE 'l3
000319BA <AmiBlitz3.ab3@21601>    CLR.b (a1)+
000319C0 <AmiBlitz3.ab3@21603>    LEA ptr_parameterstore,a1
000319C4 <AmiBlitz3.ab3@21604>    BSR.w findxinc                                         ;find include
000319C8 <AmiBlitz3.ab3@21605>     BEQ.w 'outb
000319CA <AmiBlitz3.ab3@21607>    MOVE.w D2,-(A7)
000319CE <AmiBlitz3.ab3@21608>    BSR.w addlabel
000319D0 <AmiBlitz3.ab3@21609>    MOVE.w (A7)+,D2
000319D6 <AmiBlitz3.ab3@21611>    LEA ptr_parameterstore,a1
000319DC <AmiBlitz3.ab3@21612>    LEA includetemp,a0                                      ; namen in includetemp schreiben
000319DE <AmiBlitz3.ab3@21615>     MOVE.b (a0)+,(a1)+
000319E2 <AmiBlitz3.ab3@21616>    BNE 'l4b
000319E4 <AmiBlitz3.ab3@21618>    MOVE.l (a7)+,d2
000319EA <AmiBlitz3.ab3@21619>    LEA ptr_parameterstore,a1
000319EE <AmiBlitz3.ab3@21620> BRA.w JL_0_CB18
000319F4 <AmiBlitz3.ab3@21623>    LEA ptr_parameterstore,a1
000319FA <AmiBlitz3.ab3@21624>    LEA includetemp,a0
000319FC <AmiBlitz3.ab3@21627>     MOVE.b (a0)+,(a1)+
00031A00 <AmiBlitz3.ab3@21628>    BNE 'l4b2
00031A02 <AmiBlitz3.ab3@21630>    MOVE.l (a7)+,d2
00031A08 <AmiBlitz3.ab3@21631>    LEA ptr_parameterstore,a1
00031A0A <AmiBlitz3.ab3@21634> RTS
00031A0E <AmiBlitz3.ab3@21638>   BSR.w JL_0_C05C                                              ; test and get the parameter (includestring)
00031A14 <AmiBlitz3.ab3@21640>   JSR check_IncBinDir                                          ; to fix the path problem in CLIMode  tomsmart1
00031A1A <AmiBlitz3.ab3@21642>   MOVEA.l _dosbase,A6
00031A1C <AmiBlitz3.ab3@21643>   MOVE.l D0,D7                                                 ; store Lockpointer
00031A20 <AmiBlitz3.ab3@21644>    BEQ.w error_cant_open_include                               ; no pointer => errormessage
00031A22 <AmiBlitz3.ab3@21645>   MOVE.l D7,D1                                                 ; begin get the size of the file to include
00031A28 <AmiBlitz3.ab3@21646>   MOVE.l ptr_macrobuffer_begin,D2
00031A2C <AmiBlitz3.ab3@21647>    JSR _Examine(A6)
00031A32 <AmiBlitz3.ab3@21648>   MOVEA.l ptr_macrobuffer_begin,A0
00031A36 <AmiBlitz3.ab3@21649>   MOVE.l $4(A0),D0
00031A3A <AmiBlitz3.ab3@21650>    BPL.w error_cant_open_include                               ; something went wrong => errormessage
00031A3E <AmiBlitz3.ab3@21651>   MOVE.l $7C(A0),D3                                            ; store the size of the file to include
00031A40 <AmiBlitz3.ab3@21652>   MOVE.l D7,D1                                                 ; begin unlock the file
00031A44 <AmiBlitz3.ab3@21653>    JSR _UnLock(A6)
00031A4A <AmiBlitz3.ab3@21655>   MOVE.l #ptr_parameterstore,D1                                ; begin Open and Load the file
00031A50 <AmiBlitz3.ab3@21656>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2                       
00031A54 <AmiBlitz3.ab3@21657>    JSR _Open(A6)
00031A56 <AmiBlitz3.ab3@21658>   MOVE.l D0,D7
00031A5A <AmiBlitz3.ab3@21659>    BEQ.w error_cant_open_include
00031A60 <AmiBlitz3.ab3@21660>   MOVE.l destpointer,D0
00031A62 <AmiBlitz3.ab3@21661>   ADD.l D3,D0
00031A68 <AmiBlitz3.ab3@21662>   CMP.l destbufferend,D0
00031A6C <AmiBlitz3.ab3@21663>    BHI.w JL_0_CAF6
00031A72 <AmiBlitz3.ab3@21664>   MOVE.l destpointer,D2
00031A74 <AmiBlitz3.ab3@21665>   MOVE.l D7,D1
00031A78 <AmiBlitz3.ab3@21666>    JSR _Read(A6)
00031A7E <AmiBlitz3.ab3@21667>   CMP.l #$FFFFFFFF,D0
00031A82 <AmiBlitz3.ab3@21668>    BEQ.w error_reading_file
00031A88 <AmiBlitz3.ab3@21669>   ADD.l D0,destpointer
00031A8C <AmiBlitz3.ab3@21670> BRA.w JL_0_CB04
00031A94 <AmiBlitz3.ab3@21673>   MOVE.w #$FFFF,dontwrite
00031A9A <AmiBlitz3.ab3@21674>   MOVE.l D0,destpointer
00031A9C <AmiBlitz3.ab3@21677>   MOVE.l D7,D1
00031AA0 <AmiBlitz3.ab3@21678> JMP _Close(A6)
00031AA6 <AmiBlitz3.ab3@21682> JMP illdirerr
00031AAC <AmiBlitz3.ab3@21685>   TST.w dirmode                                            ;include  open
00031AB0 <AmiBlitz3.ab3@21686>    BNE.w JUMP_illdirerr
00031AB4 <AmiBlitz3.ab3@21687>   BSR.w JL_0_C05C
00031ABA <AmiBlitz3.ab3@21688>   JSR check_incdir
00031ABE <AmiBlitz3.ab3@21691>   BSR.w findconstant
00031AC2 <AmiBlitz3.ab3@21692>    BEQ.w alincerr
00031AC8 <AmiBlitz3.ab3@21694>   LEA constantbase,A2
00031ACC <AmiBlitz3.ab3@21695>   BSR.w addhere2
00031AD0 <AmiBlitz3.ab3@21696>   CLR.w $C(A2)
00031AD4 <AmiBlitz3.ab3@21697>   CLR.l $4(A2)
00031ADA <AmiBlitz3.ab3@21699>   MOVE.l #ptr_parameterstore,D1
00031ADC <AmiBlitz3.ab3@21700>   MOVE.l d1,a0
00031AE2 <AmiBlitz3.ab3@21701>   LEA includetemp2,a1
00031AE4 <AmiBlitz3.ab3@21704>     MOVE.b (a0)+,(a1)+
00031AE8 <AmiBlitz3.ab3@21705>   BNE 'l1
00031AEE <AmiBlitz3.ab3@21706>   JSR save_includename
00031AF8 <AmiBlitz3.ab3@21707>   MOVE.l #0,include_process
00031B00 <AmiBlitz3.ab3@21709>   CMP.l #$62623200,-4(a0)                                  ;.bb2
00031B04 <AmiBlitz3.ab3@21710>   BEQ 'ok
00031B0C <AmiBlitz3.ab3@21711>   CMP.l #$61623300,-4(a0)                                  ;.ab3
00031B10 <AmiBlitz3.ab3@21712>   BEQ 'ok_tokenize
00031B18 <AmiBlitz3.ab3@21713>   CMP.l #$61623200,-4(a0)                                  ;.ab2
00031B1C <AmiBlitz3.ab3@21714>   BEQ 'ok_tokenize
00031B24 <AmiBlitz3.ab3@21715>   CMP.l #$2e626200,-4(a0)                                  ;.bb files
00031B28 <AmiBlitz3.ab3@21716>   BEQ 'ok
00031B2E <AmiBlitz3.ab3@21717> JMP errortoken                                             ;can only include
00031B38 <AmiBlitz3.ab3@21720>    MOVE.l #-1,include_process                              ; must tokenize the include
00031B3E <AmiBlitz3.ab3@21723>   MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
00031B44 <AmiBlitz3.ab3@21724>   MOVEA.l _dosbase,A6
00031B48 <AmiBlitz3.ab3@21725>   JSR _Open(A6)
00031B4C <AmiBlitz3.ab3@21726>   MOVE.l D0,$8(A2)
00031B50 <AmiBlitz3.ab3@21727>   BEQ.w error_cant_open_include
00031B56 <AmiBlitz3.ab3@21728>   CLR.l includeline
00031B5A <AmiBlitz3.ab3@21729>   MOVE.l 8(a2),d1
00031B5C <AmiBlitz3.ab3@21730>   MOVE.l d3,-(a7)
00031B5E <AmiBlitz3.ab3@21731>   MOVEQ #0,d2
00031B60 <AmiBlitz3.ab3@21732>   MOVEQ #1,d3
00031B64 <AmiBlitz3.ab3@21733>   JSR _Seek(a6)                                            ; -66
00031B68 <AmiBlitz3.ab3@21734>   MOVE.l 8(a2),d1
00031B6A <AmiBlitz3.ab3@21735>   MOVEQ #0,d2
00031B6C <AmiBlitz3.ab3@21736>   MOVEQ #-1,d3
00031B70 <AmiBlitz3.ab3@21737>   JSR _Seek(a6)                                            ; -66
00031B72 <AmiBlitz3.ab3@21738>   MOVE.l (a7)+,d3
00031B74 <AmiBlitz3.ab3@21739>   ADDQ.l #4,d0
00031B7A <AmiBlitz3.ab3@21741>   MOVE.l #$10000,D1
00031B80 <AmiBlitz3.ab3@21742>   MOVEA.l _execbase,A6
00031B84 <AmiBlitz3.ab3@21745>   JSR _AllocVec(a6)
00031B88 <AmiBlitz3.ab3@21747>   MOVE.l D0,$4(A2)
00031B8C <AmiBlitz3.ab3@21748>   MOVE.l D0,$E(A2)
00031B8E <AmiBlitz3.ab3@21749>   MOVEA.l D0,A5
00031B94 <AmiBlitz3.ab3@21756>   ADDQ.w #1,ininclude                                      ;enter include
00031B9A <AmiBlitz3.ab3@21759>   LEA _include,a0
00031B9E <AmiBlitz3.ab3@21760>   MOVEM.l a0-a6/d0-d7,-(a7)
00031BA4 <AmiBlitz3.ab3@21761>   LEA ptr_parameterstore,a1
00031BA6 <AmiBlitz3.ab3@21764>     MOVE.b (a0)+,(a1)+
00031BAA <AmiBlitz3.ab3@21765>   BNE 'l1b
00031BAC <AmiBlitz3.ab3@21767>   MOVEQ #9,d2
00031BB2 <AmiBlitz3.ab3@21768>   JSR findlabel2
00031BB6 <AmiBlitz3.ab3@21769>   BNE 'd
00031BBE <AmiBlitz3.ab3@21770>   MOVE.l #1,8(a2)
00031BC2 <AmiBlitz3.ab3@21771>   MOVEM.l (a7)+,a0-a6/d0-d7
00031BC6 <AmiBlitz3.ab3@21772> BRA 'd2
00031BCC <AmiBlitz3.ab3@21775>   JSR addlabelhash
00031BD4 <AmiBlitz3.ab3@21776>   MOVE.l #$1,$4(A2)
00031BDC <AmiBlitz3.ab3@21777>   MOVE.l #1,8(a2)
00031BE0 <AmiBlitz3.ab3@21778>   MOVEM.l (a7)+,a0-a6/d0-d7
00031BE6 <AmiBlitz3.ab3@21781>   LEA inctab,a0
00031BE8 <AmiBlitz3.ab3@21782>   MOVEQ #0,d1
00031BEE <AmiBlitz3.ab3@21783>   MOVE.w ininclude,d1
00031BF2 <AmiBlitz3.ab3@21784>   CLR.l $0(a0,d1*4)
00031BF8 <AmiBlitz3.ab3@21785>   MOVEA.l passstack,A7
00031BFE <AmiBlitz3.ab3@21786> JMP AJL_0_413A
00031C04 <AmiBlitz3.ab3@21788> JUMP_dupmacerr JMP dupmacerr
00031C06 <AmiBlitz3.ab3@21790> coolnest:   Ds.w 1
00031C0A <AmiBlitz3.ab3@21791> macline:    Ds.l 1
00031C14 <AmiBlitz3.ab3@21795>   MOVE.l linenumat,macline
00031C18 <AmiBlitz3.ab3@21796>    BSR.w makename2
00031C1C <AmiBlitz3.ab3@21797>    BEQ.w JUMP_syntaxerr
00031C22 <AmiBlitz3.ab3@21799>    CLR.b thenmode
00031C2C <AmiBlitz3.ab3@21801>    MOVE.w oldqflag,instringon
00031C32 <AmiBlitz3.ab3@21802>   MOVEA.l lastsourcepos,A5
00031C36 <AmiBlitz3.ab3@21803>    BSR.w findmac
00031C3A <AmiBlitz3.ab3@21804>    BEQ.w JUMP_dupmacerr
00031C3E <AmiBlitz3.ab3@21805>    BSR.w addlabel
00031C42 <AmiBlitz3.ab3@21806>   CLR.w $A(A2)
00031C48 <AmiBlitz3.ab3@21807>   MOVEA.l ptr_macrobuffer_begin,A0
00031C4A <AmiBlitz3.ab3@21808>   MOVEQ.l #$00,D2
00031C50 <AmiBlitz3.ab3@21809>   CLR.w coolnest
00031C52 <AmiBlitz3.ab3@21812>   MOVE.b (a5),d0
00031C56 <AmiBlitz3.ab3@21813>      BEQ 'l3
00031C5A <AmiBlitz3.ab3@21814>      CMP.b #" ",d0
00031C5E <AmiBlitz3.ab3@21815>       BNE 'l2                                              ;space macro
00031C60 <AmiBlitz3.ab3@21816>       ADDQ.l #1,a5
00031C64 <AmiBlitz3.ab3@21817> BRA 'l1
00031C68 <AmiBlitz3.ab3@21820>    CMP.b #";",d0
00031C6C <AmiBlitz3.ab3@21821>       BNE 'l3
00031C6E <AmiBlitz3.ab3@21824>    MOVE.b (a5),d0
00031C72 <AmiBlitz3.ab3@21825>       BEQ 'l5
00031C76 <AmiBlitz3.ab3@21826>       BSR.w JL_0_CC98                                      ;add comment
00031C78 <AmiBlitz3.ab3@21827>       ADDQ.l #1,a5
00031C7C <AmiBlitz3.ab3@21828> BRA 'l4
00031C80 <AmiBlitz3.ab3@21831>    MOVE.b #":",d0
00031C84 <AmiBlitz3.ab3@21832>       BSR.w JL_0_CC98
00031C88 <AmiBlitz3.ab3@21833>       MOVE.b #"@",d0
00031C8C <AmiBlitz3.ab3@21834>       BSR.w JL_0_CC98
00031C94 <AmiBlitz3.ab3@21837>    MOVE.b #0,temp
00031C9C <AmiBlitz3.ab3@21838>       MOVE.b #0,thenmode
00031CA2 <AmiBlitz3.ab3@21841>   JSR getcharb
00031CA4 <AmiBlitz3.ab3@21842>   TST.w D0
00031CA8 <AmiBlitz3.ab3@21843>    BNE.w JL_0_CBDE
00031CAC <AmiBlitz3.ab3@21844>   MOVEM.l D2/A0/A2,-(A7)
00031CB2 <AmiBlitz3.ab3@21845>   CMP.w #"@@",-3(a5)
00031CB6 <AmiBlitz3.ab3@21846>   BNE 'l2a
00031CBC <AmiBlitz3.ab3@21847>   JSR nextline
00031CC0 <AmiBlitz3.ab3@21848>   BEQ.w JUMP_macenderr
00031CC4 <AmiBlitz3.ab3@21849>   MOVEM.l (A7)+,D2/A0/A2
00031CC8 <AmiBlitz3.ab3@21850> BRA.w JL_0_CBB6
00031CCE <AmiBlitz3.ab3@21853>    JSR nextline
00031CD2 <AmiBlitz3.ab3@21854>    BEQ.w JUMP_macenderr
00031CD6 <AmiBlitz3.ab3@21855>   MOVEM.l (A7)+,D2/A0/A2
00031CD8 <AmiBlitz3.ab3@21856>   TST.w D2
00031CDC <AmiBlitz3.ab3@21857>    BEQ.w JL_0_CBB6
00031CDE <AmiBlitz3.ab3@21860>   MOVE.b (a5),d0
00031CE2 <AmiBlitz3.ab3@21861>       CMP.b #" ",d0
00031CE6 <AmiBlitz3.ab3@21862>       BNE 'l1
00031CE8 <AmiBlitz3.ab3@21863>       ADDQ.w #1,a5
00031CEC <AmiBlitz3.ab3@21864> BRA 'l2
00031CF2 <AmiBlitz3.ab3@21867>   TST.b thenmode
00031CF6 <AmiBlitz3.ab3@21868>      BEQ 'l3
00031CF8 <AmiBlitz3.ab3@21869>      MOVEQ #":",d0
00031CFC <AmiBlitz3.ab3@21870>      BSR.w JL_0_CC98
00031D00 <AmiBlitz3.ab3@21871>      MOVE.w #-$7FFE,D0                                     ;write end if
00031D04 <AmiBlitz3.ab3@21872>      BSR macputw
00031D08 <AmiBlitz3.ab3@21873>      MOVE.w #$800b,d0
00031D0C <AmiBlitz3.ab3@21874>      BSR.w macputw
00031D12 <AmiBlitz3.ab3@21875>      CLR.b thenmode
00031D14 <AmiBlitz3.ab3@21878>    MOVEQ.l #$3A,D0
00031D1C <AmiBlitz3.ab3@21879>      MOVE.b #1,temp
00031D20 <AmiBlitz3.ab3@21881> BRA.w JL_0_CC2A
00031D24 <AmiBlitz3.ab3@21885>   BPL.w JL_0_CC2A
00031D28 <AmiBlitz3.ab3@21886>   CMP.w #-$7FF3,D0                                         ;macro ?
00031D2C <AmiBlitz3.ab3@21887>    BNE.w JL_0_CBF4
00031D32 <AmiBlitz3.ab3@21888>   ADDQ.w #1,coolnest
00031D36 <AmiBlitz3.ab3@21889> BRA.w JL_0_CC22
00031D3C <AmiBlitz3.ab3@21891> JUMP_macnesterr JMP macnesterr
00031D40 <AmiBlitz3.ab3@21894>   CMP.w #$80d7,d0                                          ;object ?
00031D44 <AmiBlitz3.ab3@21895>     BNE 'l1x
00031D4A <AmiBlitz3.ab3@21896>     TST.b objectcount
00031D4E <AmiBlitz3.ab3@21897>     BNE JUMP_macnesterr
00031D52 <AmiBlitz3.ab3@21900>   CMP.w #$8021,d0
00031D56 <AmiBlitz3.ab3@21901>     BNE 'nothen
00031D5E <AmiBlitz3.ab3@21902>     MOVE.b #1,thenmode
00031D64 <AmiBlitz3.ab3@21905>   TST.b thenmode
00031D68 <AmiBlitz3.ab3@21906>         BEQ 'l1
00031D6C <AmiBlitz3.ab3@21907>    CMP.w #$8002,d0                                         ;end if
00031D70 <AmiBlitz3.ab3@21908>    BNE 'l1
00031D74 <AmiBlitz3.ab3@21909>    MOVEM.l d0/a5,-(a7)
00031D7A <AmiBlitz3.ab3@21910>    JSR get1bytemain
00031D7C <AmiBlitz3.ab3@21911>    MOVE.w d0,d1
00031D80 <AmiBlitz3.ab3@21912>    MOVEM.l (a7)+,a5/d0
00031D84 <AmiBlitz3.ab3@21913>    CMP.w #$800b,d1
00031D88 <AmiBlitz3.ab3@21914>    BNE 'l1
00031D8E <AmiBlitz3.ab3@21915>    CLR.b thenmode
00031D92 <AmiBlitz3.ab3@21918>    CMP.w #-$7FFE,D0                                        ;end ?
00031D96 <AmiBlitz3.ab3@21919>    BNE.w JL_0_CC22
00031D98 <AmiBlitz3.ab3@21920>    MOVE.l a5,-(a7)
00031D9E <AmiBlitz3.ab3@21921>    JSR get1bytemain
00031DA0 <AmiBlitz3.ab3@21922>    MOVE.l (a7)+,a5
00031DA2 <AmiBlitz3.ab3@21923>    TST.w d0
00031DA6 <AmiBlitz3.ab3@21924>    BEQ 'doend
00031DAA <AmiBlitz3.ab3@21925>    CMP.w #":",d0
00031DAE <AmiBlitz3.ab3@21926>    BEQ 'doend
00031DB2 <AmiBlitz3.ab3@21927>    CMP.w #";",d0
00031DB6 <AmiBlitz3.ab3@21928>    BEQ 'doend
00031DB8 <AmiBlitz3.ab3@21929>    MOVE.l a5,-(a7)
00031DBE <AmiBlitz3.ab3@21930>    JSR get1bytemain
00031DC2 <AmiBlitz3.ab3@21931>    MOVE.l -1(a5),d0
00031DC4 <AmiBlitz3.ab3@21932>    MOVE.l (a7)+,a5
00031DCA <AmiBlitz3.ab3@21933>    CMP.l #"noa7",d0
00031DCE <AmiBlitz3.ab3@21934>    BEQ 'doend
00031DD2 <AmiBlitz3.ab3@21935> BRA 'morechar
00031DD6 <AmiBlitz3.ab3@21938>   MOVE.w #$8002,D0
00031DDA <AmiBlitz3.ab3@21939>    BSR.w macputw
00031DDE <AmiBlitz3.ab3@21940> BRA JL_0_CBB6
00031DE4 <AmiBlitz3.ab3@21943>   JSR get1bytemain
00031DE8 <AmiBlitz3.ab3@21944>    CMP.w #-$7FF3,D0                                        ;end macro
00031DEC <AmiBlitz3.ab3@21945>    BEQ.w 'lo1
00031DF0 <AmiBlitz3.ab3@21946>   CMP.w #$80d7,d0                                          ;end object
00031DF4 <AmiBlitz3.ab3@21947>   BNE JL_0_CC12
00031DFA <AmiBlitz3.ab3@21948>   SUBQ.b #1,objectcount
00031E00 <AmiBlitz3.ab3@21949>   TST.b developobject
00031E04 <AmiBlitz3.ab3@21950>   BEQ 'lo1
00031E08 <AmiBlitz3.ab3@21951>   BSR skiprest
00031E0A <AmiBlitz3.ab3@21952> RTS
00031E10 <AmiBlitz3.ab3@21955>   SUBQ.w #1,coolnest
00031E14 <AmiBlitz3.ab3@21956>    BMI.w JL_0_CC32
00031E16 <AmiBlitz3.ab3@21959>   MOVE.w D0,-(A7)
00031E1A <AmiBlitz3.ab3@21960>   MOVE.w #$8002,D0
00031E1E <AmiBlitz3.ab3@21961>    BSR.w macputw
00031E20 <AmiBlitz3.ab3@21962>   MOVE.w (A7)+,D0
00031E24 <AmiBlitz3.ab3@21963> BRA.w JL_0_CC22
00031E28 <AmiBlitz3.ab3@21966>   BSR.w macputw
00031E2C <AmiBlitz3.ab3@21967> BRA.w JL_0_CBB6
00031E32 <AmiBlitz3.ab3@21969> JUMP_macenderr JMP macenderr
00031E38 <AmiBlitz3.ab3@21972>     CMP.w #"@@",-1(a5)                                     ;merge lines
00031E3C <AmiBlitz3.ab3@21973>     BNE 'no
00031E40 <AmiBlitz3.ab3@21974>      MOVEM.l D2/A0/A2,-(A7)
00031E46 <AmiBlitz3.ab3@21975>    JSR nextline
00031E4A <AmiBlitz3.ab3@21976>    BEQ.w JUMP_macenderr
00031E4E <AmiBlitz3.ab3@21977>   MOVEM.l (A7)+,D2/A0/A2
00031E50 <AmiBlitz3.ab3@21978>     TST.w D2
00031E54 <AmiBlitz3.ab3@21979>    BEQ.w JL_0_CBB6
00031E58 <AmiBlitz3.ab3@21980> BRA JL_0_CBB6
00031E5C <AmiBlitz3.ab3@21984>   BSR.w JL_0_CC98
00031E60 <AmiBlitz3.ab3@21985> BRA.w JL_0_CBB6
00031E62 <AmiBlitz3.ab3@21988>   ADDQ.w #4,A7
00031E64 <AmiBlitz3.ab3@21989>   MOVE.l A0,D0
00031E6A <AmiBlitz3.ab3@21990>   SUB.l ptr_macrobuffer_begin,D0
00031E6E <AmiBlitz3.ab3@21993>    BEQ.w JL_0_CC5E
00031E72 <AmiBlitz3.ab3@21994>   CMPI.b #":",-(A0)
00031E76 <AmiBlitz3.ab3@21995>    BNE.w JL_0_CC5E
00031E7A <AmiBlitz3.ab3@21996>   CMP.w #$1,D0
00031E7E <AmiBlitz3.ab3@21997>    BEQ.w JL_0_CC58
00031E82 <AmiBlitz3.ab3@21998>   TST.b -$1(A0)
00031E86 <AmiBlitz3.ab3@21999>    BMI.w JL_0_CC5E
00031E88 <AmiBlitz3.ab3@22002>   SUBQ.w #1,D0
00031E8C <AmiBlitz3.ab3@22003> BRA.w JL_0_CC3C
00031E90 <AmiBlitz3.ab3@22006>   MOVE.w D0,$8(A2)
00031E94 <AmiBlitz3.ab3@22007>    BEQ.w JL_0_CC8E
00031E96 <AmiBlitz3.ab3@22008>   MOVEQ.l #$01,D1
00031E9C <AmiBlitz3.ab3@22009>   MOVEA.l _execbase,A6
00031EA2 <AmiBlitz3.ab3@22010>   MOVE.l mempool,a0
00031EA6 <AmiBlitz3.ab3@22011>   JSR _AllocPooled(a6)
00031EA8 <AmiBlitz3.ab3@22013>   MOVEA.l D0,A0
00031EAC <AmiBlitz3.ab3@22014>   MOVE.l A0,$4(A2)
00031EB0 <AmiBlitz3.ab3@22015>   MOVE.w $8(A2),D1
00031EB4 <AmiBlitz3.ab3@22016>    BEQ.w JL_0_CC8E
00031EB6 <AmiBlitz3.ab3@22017>   SUBQ.w #1,D1
00031EBC <AmiBlitz3.ab3@22018>   MOVEA.l ptr_macrobuffer_begin,A1
00031EBE <AmiBlitz3.ab3@22021>     MOVE.b (A1)+,(A0)+
00031EC2 <AmiBlitz3.ab3@22022>   DBF D1,JL_0_CC88
00031EC8 <AmiBlitz3.ab3@22025> JMP get1bytemain
00031ECA <AmiBlitz3.ab3@22029>   MOVE.w D0,D1
00031ECC <AmiBlitz3.ab3@22030>   LSR.w #8,D1
00031ECE <AmiBlitz3.ab3@22031>   MOVE.b D1,(A0)+
00031ED0 <AmiBlitz3.ab3@22034>   MOVEQ.l #-$01,D2
00031ED2 <AmiBlitz3.ab3@22035>   MOVE.b D0,(A0)+
00031ED8 <AmiBlitz3.ab3@22036>   CMPA.l ptr_macrobuffer_end,A0
00031EDC <AmiBlitz3.ab3@22037>    BCC.w macbigerr2
00031EDE <AmiBlitz3.ab3@22038> RTS
00031EE4 <AmiBlitz3.ab3@22039> macbigerr2 JMP macbigerr
00031EE6 <AmiBlitz3.ab3@22042>   MOVE.l d0,-(a7)
00031EE8 <AmiBlitz3.ab3@22043>   MOVEQ #0,d0
00031EEE <AmiBlitz3.ab3@22044>   CLR.b skiptoggle
00031EF0 <AmiBlitz3.ab3@22047>     MOVE.b (a5),d0
00031EF4 <AmiBlitz3.ab3@22048>     BEQ 'l3
00031EF8 <AmiBlitz3.ab3@22049>     CMP.b #";",d0
00031EFC <AmiBlitz3.ab3@22050>     BNE 'l2
00031F04 <AmiBlitz3.ab3@22051>     MOVE.b #1,skiptoggle
00031F0A <AmiBlitz3.ab3@22054>     TST.b skiptoggle
00031F0E <AmiBlitz3.ab3@22055>     BNE 'l4
00031F12 <AmiBlitz3.ab3@22056>     CMP.b #":",d0
00031F16 <AmiBlitz3.ab3@22057>     BEQ 'l3
00031F18 <AmiBlitz3.ab3@22060>     ADDQ #1,a5
00031F1C <AmiBlitz3.ab3@22061> BRA 'loop
00031F22 <AmiBlitz3.ab3@22064>   MOVE.w d0,lastchar
00031F24 <AmiBlitz3.ab3@22065>   MOVE.l (a7)+,d0
00031F26 <AmiBlitz3.ab3@22066> RTS
00031F2A <AmiBlitz3.ab3@22070>   BSR.w ifchar
00031F2E <AmiBlitz3.ab3@22071>    BNE.w JUMP_syntaxerr
00031F30 <AmiBlitz3.ab3@22072>   MOVE.w D0,D1
00031F36 <AmiBlitz3.ab3@22073>   JSR get1bytemain
00031F3A <AmiBlitz3.ab3@22074>   BSR.w ifchar
00031F3E <AmiBlitz3.ab3@22075>    BNE.w JL_0_CCDA
00031F40 <AmiBlitz3.ab3@22076>   ADDQ.w #1,D0
00031F42 <AmiBlitz3.ab3@22077>   MOVE.w D0,D2
00031F44 <AmiBlitz3.ab3@22078>   ADD.w D0,D0
00031F46 <AmiBlitz3.ab3@22079>   ADD.w D2,D0
00031F48 <AmiBlitz3.ab3@22080>   ADD.w D0,D1
00031F4A <AmiBlitz3.ab3@22081>   MOVE.w D1,D0
00031F4E <AmiBlitz3.ab3@22082>   ANDI.w #$3,D0
00031F52 <AmiBlitz3.ab3@22083>   CMP.w #$3,D0
00031F56 <AmiBlitz3.ab3@22084>    BEQ.w JUMP_syntaxerr
00031F5C <AmiBlitz3.ab3@22086>   JSR get1bytemain
00031F5E <AmiBlitz3.ab3@22089> RTS
00031F60 <AmiBlitz3.ab3@22095> thetst1:  TST.b D0
00031F62 <AmiBlitz3.ab3@22096> thetst2:  TST.w D0
00031F64 <AmiBlitz3.ab3@22097> thetst3:  TST.l D0
00031F66 <AmiBlitz3.ab3@22098> thetst4:  TST.l (A7)+                                      ;Any Length?
00031F6A <AmiBlitz3.ab3@22099> thetst5:  JSR _Reschedule(A6)
00031F6E <AmiBlitz3.ab3@22101> posbr:    BEQ.w posbr
00031F72 <AmiBlitz3.ab3@22102> negbr:    BNE.w negbr
00031F74 <AmiBlitz3.ab3@22106>   MOVEQ.l #-$01,D2
00031F78 <AmiBlitz3.ab3@22107> BRA.w JL_0_D04C
00031F7E <AmiBlitz3.ab3@22111>   CLR.l fp0addr
00031F80 <AmiBlitz3.ab3@22112>   MOVEQ.l #$01,D1                                          ;while flag
00031F82 <AmiBlitz3.ab3@22113>   MOVEQ.l #$00,D2                                          ;negate flag
00031F86 <AmiBlitz3.ab3@22114> BRA.w JL_0_D04E
00031F8C <AmiBlitz3.ab3@22118>   LEA firstrep,A2
00031F8E <AmiBlitz3.ab3@22119>   MOVEQ.l #$08,D2
00031F92 <AmiBlitz3.ab3@22120> BRA.w freeslist
00031F96 <AmiBlitz3.ab3@22124>   LEA firstsel(PC),A2
00031F98 <AmiBlitz3.ab3@22125>   MOVEQ.l #$0E,D2
00031F9A <AmiBlitz3.ab3@22130>   MOVEQ.l #$00,D3
00031F9C <AmiBlitz3.ab3@22138>   MOVE.l (A2),D0
00031F9E <AmiBlitz3.ab3@22139>   CLR.l (A2)
00031FA0 <AmiBlitz3.ab3@22140>   MOVEA.l D0,A2
00031FA6 <AmiBlitz3.ab3@22141>   MOVEA.l _execbase,A6
00031FAA <AmiBlitz3.ab3@22144>     CMPA.w #$0,A2
00031FAE <AmiBlitz3.ab3@22145>      BEQ.w freelist__done
00031FB0 <AmiBlitz3.ab3@22146>     TST.w D3
00031FB4 <AmiBlitz3.ab3@22147>      BEQ.w freelist__skip
00031FB8 <AmiBlitz3.ab3@22148>     MOVEM.l D2-D3/A2,-(A7)
00031FBA <AmiBlitz3.ab3@22149>     ADDA.w D3,A2
00031FBC <AmiBlitz3.ab3@22150>     MOVE.l D4,D2
00031FC0 <AmiBlitz3.ab3@22151>     BSR.w freeslist
00031FC4 <AmiBlitz3.ab3@22152>     MOVEM.l (A7)+,D2-D3/A2
00031FC6 <AmiBlitz3.ab3@22155>     MOVEA.l A2,A1
00031FC8 <AmiBlitz3.ab3@22156>     MOVE.l D2,D0
00031FCA <AmiBlitz3.ab3@22157>     MOVEA.l (A2),A2
00031FD0 <AmiBlitz3.ab3@22158>     MOVE.l mempool,a0
00031FD4 <AmiBlitz3.ab3@22159>     JSR _FreePooled(A6)
00031FD8 <AmiBlitz3.ab3@22160> BRA.w freelist__loop
00031FDA <AmiBlitz3.ab3@22163> RTS
00031FE0 <AmiBlitz3.ab3@22166> JMP eselerr
00031FE4 <AmiBlitz3.ab3@22169> firstsel:  Ds.l 1
00031FE8 <AmiBlitz3.ab3@22172> selpushb:   Dc.b $02,$40,$00,$FF                           ;ANDI.W  #$00FF,D0
00031FEA <AmiBlitz3.ab3@22175> selpushw:   MOVE.w D0,-(A7)
00031FEC <AmiBlitz3.ab3@22177> selpushl:   MOVE.l D0,-(A7)
00031FF0 <AmiBlitz3.ab3@22179> selpushs:   LEA $4(A7),A2                                  ;(a7)=len of string!
00031FF4 <AmiBlitz3.ab3@22182> selcomb:    ANDI.w #$FF,D0
00031FF6 <AmiBlitz3.ab3@22183> selcomw:    CMP.w (A7),D0
00031FF8 <AmiBlitz3.ab3@22185> selcoml:    CMP.l (A7),D0
00031FFC <AmiBlitz3.ab3@22187> selbne:     BNE.w selbne
00031FFE <AmiBlitz3.ab3@22189> endsel:     ADDQ.w #8,A7
00032002 <AmiBlitz3.ab3@22195>   MOVE.l firstsel(PC),D0                                  
00032006 <AmiBlitz3.ab3@22196>    BEQ.w JUMP_eselerr
00032008 <AmiBlitz3.ab3@22197>   MOVEA.l D0,A2
0003200C <AmiBlitz3.ab3@22198>    BSR.w JL_0_CDFC
00032012 <AmiBlitz3.ab3@22201>   MOVEA.l _execbase,A6
00032016 <AmiBlitz3.ab3@22204>   MOVE.l $4(A2),D0
0003201A <AmiBlitz3.ab3@22205>    BEQ.w doendsel__done
0003201C <AmiBlitz3.ab3@22206>   MOVEA.l D0,A3
00032020 <AmiBlitz3.ab3@22207>   MOVEA.l $4(A3),A0
00032026 <AmiBlitz3.ab3@22208>   MOVE.l destpointer,D1
00032028 <AmiBlitz3.ab3@22209>   SUB.l A0,D1
0003202E <AmiBlitz3.ab3@22211>     TST.b fast
00032032 <AmiBlitz3.ab3@22212>     BEQ doendsel__loop_l1
00032038 <AmiBlitz3.ab3@22213>     MOVE.w dontwrite,D0
0003203C <AmiBlitz3.ab3@22214>     BNE.w doendsel__skip
0003203E <AmiBlitz3.ab3@22215>     ADDQ.l #2,d1
00032042 <AmiBlitz3.ab3@22216>     MOVE.l d1,-2(a0)
00032046 <AmiBlitz3.ab3@22217>   BRA doendsel__skip
0003204C <AmiBlitz3.ab3@22221>   TST.w dontwrite
00032050 <AmiBlitz3.ab3@22222>      BNE.w doendsel__skip
00032056 <AmiBlitz3.ab3@22223>   CMP.l #MaxWordSgnd,D1
0003205A <AmiBlitz3.ab3@22224>    BHI.w JUMP_cbraerr
0003205C <AmiBlitz3.ab3@22225>   MOVE.w D1,(A0)
00032060 <AmiBlitz3.ab3@22228>   MOVE.l (A3),$4(A2)                                       ;next of me is new first
00032062 <AmiBlitz3.ab3@22229>   MOVEA.l A3,A1
00032064 <AmiBlitz3.ab3@22230>   MOVEQ.l #$08,D0
0003206A <AmiBlitz3.ab3@22231>   MOVE.l mempool,a0
0003206E <AmiBlitz3.ab3@22232>    JSR _FreePooled(A6)
00032072 <AmiBlitz3.ab3@22233> BRA.w doendsel__loop
00032078 <AmiBlitz3.ab3@22236>   JSR popselect                                            ;fix stack on select
0003207C <AmiBlitz3.ab3@22237>   MOVEA.l firstsel(PC),A1
00032082 <AmiBlitz3.ab3@22238>   MOVE.l (A1),firstsel
00032084 <AmiBlitz3.ab3@22239>   MOVEQ.l #$0E,D0
0003208A <AmiBlitz3.ab3@22240>   MOVEA.l _execbase,A6
00032090 <AmiBlitz3.ab3@22241>   MOVE.l mempool,a0
00032094 <AmiBlitz3.ab3@22242>   JSR _FreePooled(A6)
0003209A <AmiBlitz3.ab3@22243> JMP get1bytemain
0003209C <AmiBlitz3.ab3@22247>   MOVEA.l (A7)+,A1
0003209E <AmiBlitz3.ab3@22248>   SUBQ.w #8,A1
000320A0 <AmiBlitz3.ab3@22249>   MOVEQ.l #$09,D0
000320A2 <AmiBlitz3.ab3@22250>   ADD.l (A1),D0
000320A4 <AmiBlitz3.ab3@22253>   ADDQ.w #2,A7                                             ;for runtime errs!
000320A8 <AmiBlitz3.ab3@22258>   MOVE.l firstsel(PC),D0
000320AC <AmiBlitz3.ab3@22259>    BEQ.w JUMP_defaerr
000320AE <AmiBlitz3.ab3@22260>   MOVEA.l D0,A2
000320B2 <AmiBlitz3.ab3@22261>   BSR.w JL_0_CE26
000320B6 <AmiBlitz3.ab3@22262>   BSR.w JL_0_CDFC
000320BA <AmiBlitz3.ab3@22263>   CLR.l $8(A2)
000320BE <AmiBlitz3.ab3@22264>   MOVE.w $C(A2),D2
000320C2 <AmiBlitz3.ab3@22265> BRA.w JL_0_CE5E
000320C8 <AmiBlitz3.ab3@22268> JMP defaerr
000320CC <AmiBlitz3.ab3@22271>   MOVE.l $8(A2),D0
000320D0 <AmiBlitz3.ab3@22272>    BEQ.w JL_0_CE24
000320D2 <AmiBlitz3.ab3@22273>   MOVEA.l D0,A0
000320D8 <AmiBlitz3.ab3@22274>   MOVE.l destpointer,D1
000320DA <AmiBlitz3.ab3@22275>   SUB.l A0,D1
000320E0 <AmiBlitz3.ab3@22277>     TST.b fast
000320E4 <AmiBlitz3.ab3@22278>     BEQ 'l1
000320EA <AmiBlitz3.ab3@22279>     TST.w dontwrite
000320EE <AmiBlitz3.ab3@22280>     BNE.w JL_0_CE24
000320F0 <AmiBlitz3.ab3@22281>     ADDQ.l #2,d1
000320F4 <AmiBlitz3.ab3@22282>     MOVE.l D1,-2(A0)
000320F8 <AmiBlitz3.ab3@22283>   BRA JL_0_CE24
000320FE <AmiBlitz3.ab3@22287>   TST.w dontwrite
00032102 <AmiBlitz3.ab3@22288>      BNE.w JL_0_CE24
00032108 <AmiBlitz3.ab3@22289>    CMP.l #MaxWordSgnd,D1
0003210C <AmiBlitz3.ab3@22290>    BHI.w JUMP_cbraerr
0003210E <AmiBlitz3.ab3@22291>   MOVE.w D1,(A0)
00032110 <AmiBlitz3.ab3@22294> RTS
00032116 <AmiBlitz3.ab3@22297> JMP cbraerr
0003211A <AmiBlitz3.ab3@22301>   MOVE.l $8(A2),D0
0003211E <AmiBlitz3.ab3@22302>    BEQ.w JL_0_CE5C
00032120 <AmiBlitz3.ab3@22303>   MOVEA.l D0,A3
00032124 <AmiBlitz3.ab3@22304>   MOVE.w #$6000,D1
0003212A <AmiBlitz3.ab3@22306>    TST.b fast
0003212E <AmiBlitz3.ab3@22307>    BEQ 'l1
00032134 <AmiBlitz3.ab3@22308>    OR.l #$ff,d1
00032138 <AmiBlitz3.ab3@22309>    BSR writeword
0003213C <AmiBlitz3.ab3@22313>   BSR.w writeword
0003213E <AmiBlitz3.ab3@22314>   MOVEQ.l #$08,D0
00032140 <AmiBlitz3.ab3@22315>   MOVEQ.l #$01,D1
00032146 <AmiBlitz3.ab3@22316>   MOVEA.l _execbase,A6
0003214C <AmiBlitz3.ab3@22317>   MOVE.l mempool,a0
00032150 <AmiBlitz3.ab3@22318>   JSR _AllocPooled(a6)
00032152 <AmiBlitz3.ab3@22320>   MOVEA.l D0,A0
00032156 <AmiBlitz3.ab3@22321>   MOVE.l $4(A2),(A0)
0003215A <AmiBlitz3.ab3@22322>   MOVE.l A0,$4(A2)
00032162 <AmiBlitz3.ab3@22323>   MOVE.l destpointer,$4(A0)
00032166 <AmiBlitz3.ab3@22324> BRA.w writeword
00032168 <AmiBlitz3.ab3@22327> RTS
0003216E <AmiBlitz3.ab3@22331>   TST.b debugmode
00032172 <AmiBlitz3.ab3@22332>    BEQ.w JL_0_CE7A
00032176 <AmiBlitz3.ab3@22333>   MOVE.w #$C313,D1
0003217A <AmiBlitz3.ab3@22334>   CMP.w #$3,D2
0003217E <AmiBlitz3.ab3@22335>    BCS.w JL_0_CE76
00032180 <AmiBlitz3.ab3@22336>   ADDQ.w #1,D1
00032184 <AmiBlitz3.ab3@22339> BRA.w Atokejsr
00032186 <AmiBlitz3.ab3@22342> RTS
0003218C <AmiBlitz3.ab3@22346> JMP caseerr
00032190 <AmiBlitz3.ab3@22349>   MOVE.l firstsel(PC),D0
00032194 <AmiBlitz3.ab3@22350>    BEQ.w JUMP_caseerr
00032196 <AmiBlitz3.ab3@22351>   MOVEA.l D0,A2
0003219A <AmiBlitz3.ab3@22352>    BSR.w JL_0_CE26
0003219E <AmiBlitz3.ab3@22353>    BSR.w JL_0_CDFC
000321A2 <AmiBlitz3.ab3@22354>   MOVE.w $C(A2),D2
000321A4 <AmiBlitz3.ab3@22355>   MOVE.w D2,-(A7)
000321A8 <AmiBlitz3.ab3@22356>    BSR.w JL_0_CE5E
000321AA <AmiBlitz3.ab3@22357>   MOVE.w (A7),D2
000321AE <AmiBlitz3.ab3@22358>    BSR.w bakeval
000321B0 <AmiBlitz3.ab3@22359>   MOVE.w (A7)+,D2
000321B4 <AmiBlitz3.ab3@22360>   LEA selcomb(PC),A0
000321B8 <AmiBlitz3.ab3@22361>   LEA selcombf(PC),A1
000321BC <AmiBlitz3.ab3@22362>   CMP.w #$1,D2
000321C0 <AmiBlitz3.ab3@22363>    BEQ.w JL_0_CED8
000321C4 <AmiBlitz3.ab3@22364>   LEA selcomw(PC),A0
000321C8 <AmiBlitz3.ab3@22365>   CMP.w #$2,D2
000321CC <AmiBlitz3.ab3@22366>    BEQ.w JL_0_CED8
000321D0 <AmiBlitz3.ab3@22367>   LEA selcoml(PC),A0
000321D4 <AmiBlitz3.ab3@22368>   LEA selcomlf(PC),A1
000321D8 <AmiBlitz3.ab3@22369>   CMP.w #$7,D2
000321DC <AmiBlitz3.ab3@22370>    BCS.w JL_0_CED8
000321E0 <AmiBlitz3.ab3@22372>   MOVE.w #$CE01,D1
000321E4 <AmiBlitz3.ab3@22373>    BSR.w Atokejsr
000321E8 <AmiBlitz3.ab3@22374> BRA.w JL_0_CEDC
000321EC <AmiBlitz3.ab3@22377>   BSR.w pokecode
000321F0 <AmiBlitz3.ab3@22380>   MOVE.w selbne(PC),D1
000321F6 <AmiBlitz3.ab3@22382>     TST.b fast
000321FA <AmiBlitz3.ab3@22383>     BEQ 'l1
00032200 <AmiBlitz3.ab3@22384>     ORI.l #$ff,d1
00032204 <AmiBlitz3.ab3@22385>     BSR writeword
00032208 <AmiBlitz3.ab3@22388>   BSR.w writeword
0003220C <AmiBlitz3.ab3@22389>   MOVEA.l firstsel(PC),A0
00032214 <AmiBlitz3.ab3@22390>   MOVE.l destpointer,$8(A0)
00032218 <AmiBlitz3.ab3@22391> BRA.w writeword
0003221C <AmiBlitz3.ab3@22395> pcchk:      Dc.b $3F,$3C,$73,$45                           ;MOVE.W  #$7345,-(A7)   ;#"sE",-(a7) org source
0003221E <AmiBlitz3.ab3@22396> clrst:      Dc.b $42,$A7                                   ;CLR.L   -(A7)
00032222 <AmiBlitz3.ab3@22399> sellineat:  Ds.l 1
00032228 <AmiBlitz3.ab3@22405>   TST.b debugmode
0003222C <AmiBlitz3.ab3@22406>    BEQ.w JL_0_CF0E
00032230 <AmiBlitz3.ab3@22407>   MOVE.l pcchk(PC),D1                                      ;move #"sE",-(a7)
00032234 <AmiBlitz3.ab3@22408>    BSR.w writelong
0003223E <AmiBlitz3.ab3@22411>   MOVE.l linenumat,sellineat
00032248 <AmiBlitz3.ab3@22413>    MOVE.l destpointer,pushpc
00032252 <AmiBlitz3.ab3@22414>   MOVE.l hunkoffsetbase,pushoff
00032254 <AmiBlitz3.ab3@22415>   MOVEQ.l #$00,D2
00032258 <AmiBlitz3.ab3@22416>    BSR.w bakevalu                                          ;Evaluate
0003225C <AmiBlitz3.ab3@22417>    BSR.w JL_0_B5D2
00032260 <AmiBlitz3.ab3@22418>   CMP.w #$7,D2
00032264 <AmiBlitz3.ab3@22419>    BNE.w JL_0_CF36
00032268 <AmiBlitz3.ab3@22420>   MOVE.w clrst(PC),D1
0003226C <AmiBlitz3.ab3@22421>    BSR.w writeword
00032270 <AmiBlitz3.ab3@22424>    BSR.w JL_0_B63C
00032274 <AmiBlitz3.ab3@22425>   LEA selpushb(PC),A0
00032278 <AmiBlitz3.ab3@22426>   LEA selpushbf(PC),A1
0003227C <AmiBlitz3.ab3@22427>   CMP.w #$1,D2
00032280 <AmiBlitz3.ab3@22428>    BEQ.w JL_0_CF88
00032284 <AmiBlitz3.ab3@22429>   LEA selpushw(PC),A0
00032288 <AmiBlitz3.ab3@22430>   CMP.w #$2,D2
0003228C <AmiBlitz3.ab3@22431>    BEQ.w JL_0_CF88
00032290 <AmiBlitz3.ab3@22432>   LEA selpushl(PC),A0
00032294 <AmiBlitz3.ab3@22433>   LEA selpushlf(PC),A1
00032298 <AmiBlitz3.ab3@22434>   CMP.w #$7,D2
0003229C <AmiBlitz3.ab3@22435>    BCS.w JL_0_CF88
000322A2 <AmiBlitz3.ab3@22437>   MOVE.w moved0a3,D1                                       ;d0 to a3!
000322A6 <AmiBlitz3.ab3@22438>    BSR.w writeword
000322AA <AmiBlitz3.ab3@22439>   LEA selpushs(PC),A0
000322AE <AmiBlitz3.ab3@22440>   LEA selpushsf(PC),A1
000322B2 <AmiBlitz3.ab3@22441>    BSR.w pokecode
000322B6 <AmiBlitz3.ab3@22442>   MOVE.w #$C701,D1
000322BA <AmiBlitz3.ab3@22443>    BSR.w Atokejsr
000322BE <AmiBlitz3.ab3@22444> BRA.w JL_0_CF8C
000322C2 <AmiBlitz3.ab3@22447>   BSR.w pokecode
000322C4 <AmiBlitz3.ab3@22450>   MOVEQ.l #$0E,D0
000322C6 <AmiBlitz3.ab3@22451>   MOVEQ.l #$01,D1
000322CC <AmiBlitz3.ab3@22452>   MOVEA.l _execbase,A6
000322D2 <AmiBlitz3.ab3@22454>   MOVE.l mempool,a0
000322D6 <AmiBlitz3.ab3@22455>   JSR _AllocPooled(a6)
000322D8 <AmiBlitz3.ab3@22456>   MOVEA.l D0,A0
000322DC <AmiBlitz3.ab3@22457>   MOVE.l firstsel(PC),(A0)
000322E2 <AmiBlitz3.ab3@22458>   MOVE.l A0,firstsel
000322E6 <AmiBlitz3.ab3@22459>   CLR.l $4(A0)
000322EA <AmiBlitz3.ab3@22460>   CLR.l $8(A0)
000322EE <AmiBlitz3.ab3@22461>   MOVE.w D2,$C(A0)
000322F0 <AmiBlitz3.ab3@22462> RTS
000322F6 <AmiBlitz3.ab3@22466>   MOVE.l firstrep,D0
000322FA <AmiBlitz3.ab3@22467>    BEQ.w JUMP_unterr1
000322FE <AmiBlitz3.ab3@22468>   MOVE.w #$6000,D1
00032302 <AmiBlitz3.ab3@22469>   BSR.w writeword
00032304 <AmiBlitz3.ab3@22470>   MOVEA.l D0,A0
00032308 <AmiBlitz3.ab3@22471>   MOVE.l $4(A0),D1
0003230E <AmiBlitz3.ab3@22472>   SUB.l destpointer,D1
00032310 <AmiBlitz3.ab3@22473>   TST.w D1
00032314 <AmiBlitz3.ab3@22474>    BPL.w JUMP_unterr2
00032318 <AmiBlitz3.ab3@22475>   BSR.w writeword
0003231E <AmiBlitz3.ab3@22476>   MOVEA.l _execbase,A6
00032322 <AmiBlitz3.ab3@22477> BRA.w JL_0_D036
00032328 <AmiBlitz3.ab3@22480> JMP unterr2
0003232E <AmiBlitz3.ab3@22483> JMP unterr1
00032334 <AmiBlitz3.ab3@22487>   MOVE.l firstrep,D0
00032338 <AmiBlitz3.ab3@22488>    BEQ.w JUMP_unterr1
0003233C <AmiBlitz3.ab3@22489>   BSR.w do_if
00032342 <AmiBlitz3.ab3@22490>   JSR reget
00032346 <AmiBlitz3.ab3@22491>    BNE.w JUMP_syntaxerr
0003234C <AmiBlitz3.ab3@22492>   MOVE.w dontwrite,D1
00032350 <AmiBlitz3.ab3@22493>    BNE.w JL_0_D020
00032356 <AmiBlitz3.ab3@22494>   MOVEA.l firstrep,A0
0003235C <AmiBlitz3.ab3@22495>   MOVEA.l destpointer,A1
00032362 <AmiBlitz3.ab3@22497>     TST.b fast
00032366 <AmiBlitz3.ab3@22498>     BEQ 'l1
00032368 <AmiBlitz3.ab3@22499>     SUBQ.w #4,a1
0003236C <AmiBlitz3.ab3@22500>     MOVE.l $4(A0),D2
0003236E <AmiBlitz3.ab3@22501>     SUB.l A1,D2
00032370 <AmiBlitz3.ab3@22502>     MOVE.l d2,(a1)
00032374 <AmiBlitz3.ab3@22503>   BRA JL_0_D020
00032376 <AmiBlitz3.ab3@22507>   SUBQ.w #2,A1
0003237A <AmiBlitz3.ab3@22508>   MOVE.l $4(A0),D2
0003237C <AmiBlitz3.ab3@22509>   SUB.l A1,D2
0003237E <AmiBlitz3.ab3@22510>   TST.w D2
00032382 <AmiBlitz3.ab3@22511>    BPL.w JUMP_unterr2
00032384 <AmiBlitz3.ab3@22512>   MOVE.w D2,(A1)
0003238A <AmiBlitz3.ab3@22515>   MOVEA.l firstiff,A1
00032390 <AmiBlitz3.ab3@22516>   MOVE.l (A1),firstiff
00032392 <AmiBlitz3.ab3@22517>   MOVEQ.l #$0E,D0
00032398 <AmiBlitz3.ab3@22518>   MOVEA.l _execbase,A6
0003239E <AmiBlitz3.ab3@22519>   MOVE.l mempool,a0
000323A2 <AmiBlitz3.ab3@22520>   JSR _FreePooled(A6)
000323A8 <AmiBlitz3.ab3@22523>   MOVEA.l firstrep,A1
000323AE <AmiBlitz3.ab3@22524>   MOVE.l (A1),firstrep
000323B0 <AmiBlitz3.ab3@22525>   MOVEQ.l #$08,D0
000323B6 <AmiBlitz3.ab3@22526>   MOVE.l mempool,a0
000323BA <AmiBlitz3.ab3@22527> JMP _FreePooled(A6)
000323BE <AmiBlitz3.ab3@22530> iflineat:   Ds.l 1
000323C0 <AmiBlitz3.ab3@22534>   MOVEQ.l #$00,D2
000323C6 <AmiBlitz3.ab3@22535>   TST.b fast
000323CA <AmiBlitz3.ab3@22536>   BEQ 'l1
000323D2 <AmiBlitz3.ab3@22537>   MOVE.b #1,nostringopt
000323DA <AmiBlitz3.ab3@22538>   MOVE.b #1,iniffcommand
000323DC <AmiBlitz3.ab3@22542>   MOVEQ.l #$00,D1
000323DE <AmiBlitz3.ab3@22545>   MOVE.w D1,-(A7)
000323E4 <AmiBlitz3.ab3@22546>   MOVE.l destpointer,-(A7)
000323E6 <AmiBlitz3.ab3@22547>   MOVE.w D2,-(A7)
000323F0 <AmiBlitz3.ab3@22548>   MOVE.l linenumat,iflineat
000323F2 <AmiBlitz3.ab3@22549>   MOVEQ.l #$00,D2
000323FC <AmiBlitz3.ab3@22550>   MOVE.b optistring,optistring2
00032404 <AmiBlitz3.ab3@22551>   MOVE.b #1,optistring
00032408 <AmiBlitz3.ab3@22552>   BSR.w bakevalu
00032412 <AmiBlitz3.ab3@22553>   MOVE.b optistring2,optistring
00032416 <AmiBlitz3.ab3@22554>   CMP.w #$5,D2
0003241A <AmiBlitz3.ab3@22555>    BEQ.w JL_0_D09C
0003241E <AmiBlitz3.ab3@22556>   MOVE.w thetst1(PC),D1
00032422 <AmiBlitz3.ab3@22557>   CMP.w #$1,D2
00032426 <AmiBlitz3.ab3@22558>    BEQ.w writebranchcode
0003242A <AmiBlitz3.ab3@22559>   MOVE.w thetst2(PC),D1
0003242E <AmiBlitz3.ab3@22560>   CMP.w #$2,D2
00032432 <AmiBlitz3.ab3@22561>    BEQ.w writebranchcode
00032436 <AmiBlitz3.ab3@22562>   MOVE.w thetst4(PC),D1
0003243A <AmiBlitz3.ab3@22563>   CMP.w #$7,D2
0003243E <AmiBlitz3.ab3@22564>    BEQ.w writebranchcode
00032442 <AmiBlitz3.ab3@22565>   MOVE.w thetst3(PC),D1
00032446 <AmiBlitz3.ab3@22566> BRA.w writebranchcode
0003244C <AmiBlitz3.ab3@22569>   TST.b fpu
00032450 <AmiBlitz3.ab3@22570>   BEQ 'dofpu
00032456 <AmiBlitz3.ab3@22571>   MOVE.l #$f200003a,d1
0003245A <AmiBlitz3.ab3@22572>   BSR writelong
0003245E <AmiBlitz3.ab3@22573>   MOVE.w #$f2c1,d1
00032462 <AmiBlitz3.ab3@22574>   BSR writeword
00032466 <AmiBlitz3.ab3@22575>   BSR writelong
00032468 <AmiBlitz3.ab3@22576>   ADDQ.l #2,a7
0003246C <AmiBlitz3.ab3@22577> BRA.w br2
00032470 <AmiBlitz3.ab3@22580>    MOVE.w #$C900,D1
00032474 <AmiBlitz3.ab3@22581>    BSR.w Atokejsr
00032478 <AmiBlitz3.ab3@22582>   MOVE.l thetst5(PC),D1
0003247C <AmiBlitz3.ab3@22583>    BSR.w writelong
00032480 <AmiBlitz3.ab3@22584> BRA.w JL_0_D0B4
00032486 <AmiBlitz3.ab3@22588>          CLR.b iniffcommand
0003248C <AmiBlitz3.ab3@22589>          TST.b fast                                        ;branchcode
00032490 <AmiBlitz3.ab3@22590>          BEQ b6
00032496 <AmiBlitz3.ab3@22591>          TST.b fpu
0003249A <AmiBlitz3.ab3@22592>          BEQ 'nofpu
000324A0 <AmiBlitz3.ab3@22596>           MOVE.l destpointer,a0
000324A6 <AmiBlitz3.ab3@22597>          SUB.l load_var_addr,a0
000324AC <AmiBlitz3.ab3@22598>          CMP.l #4,a0
000324B0 <AmiBlitz3.ab3@22599>          BEQ 'nofpu
000324B8 <AmiBlitz3.ab3@22600>          CMP.l #$f2400014,-4(a4)                           ;<
000324BC <AmiBlitz3.ab3@22601>          BNE 'nolt
000324C2 <AmiBlitz3.ab3@22602>          SUBQ.l #2,destpointer
000324C8 <AmiBlitz3.ab3@22603>          MOVE.w #$f293,-4(a4)                              ;
000324CC <AmiBlitz3.ab3@22604> BRA 'brf
000324D4 <AmiBlitz3.ab3@22607>   CMP.l #$f2400015,-4(a4)                                  ;<=
000324D8 <AmiBlitz3.ab3@22608>          BNE 'nole
000324DE <AmiBlitz3.ab3@22609>          SUBQ.l #2,destpointer
000324E4 <AmiBlitz3.ab3@22610>          MOVE.w #$f292,-4(a4)
000324E8 <AmiBlitz3.ab3@22611> BRA 'brf
000324F0 <AmiBlitz3.ab3@22614>   CMP.l #$f2400013,-4(a4)                                  ;=>
000324F4 <AmiBlitz3.ab3@22615>          BNE 'noge
000324FA <AmiBlitz3.ab3@22616>          SUBQ.l #2,destpointer
00032500 <AmiBlitz3.ab3@22617>          MOVE.w #$f294,-4(a4)
00032504 <AmiBlitz3.ab3@22618> BRA 'brf
0003250C <AmiBlitz3.ab3@22621>   CMP.l #$f2400012,-4(a4)                                  ;>
00032510 <AmiBlitz3.ab3@22622>          BNE 'nogt
00032516 <AmiBlitz3.ab3@22623>          SUBQ.l #2,destpointer
0003251C <AmiBlitz3.ab3@22624>          MOVE.w #$f295,-4(a4)
00032520 <AmiBlitz3.ab3@22625> BRA 'brf
00032528 <AmiBlitz3.ab3@22628>   CMP.l #$f2400001,-4(a4)                                  ;=
0003252C <AmiBlitz3.ab3@22629>          BNE 'noeq
00032532 <AmiBlitz3.ab3@22630>          SUBQ.l #2,destpointer
00032538 <AmiBlitz3.ab3@22631>          MOVE.w #$f28e,-4(a4)
0003253C <AmiBlitz3.ab3@22632> BRA 'brf
00032544 <AmiBlitz3.ab3@22635>   CMP.l #$f240000e,-4(a4)                                  ;<>
00032548 <AmiBlitz3.ab3@22636>          BNE 'none
0003254E <AmiBlitz3.ab3@22637>          SUBQ.l #2,destpointer
00032554 <AmiBlitz3.ab3@22638>          MOVE.w #$f281,-4(a4)
00032556 <AmiBlitz3.ab3@22641>   ADDQ.l #2,a7
0003255C <AmiBlitz3.ab3@22643>     TST.b fast
00032560 <AmiBlitz3.ab3@22644>     BEQ 'l1
00032566 <AmiBlitz3.ab3@22645>     OR.b #$40,-3(a4)
0003256A <AmiBlitz3.ab3@22646>     BSR writeword
0003256E <AmiBlitz3.ab3@22650>  BSR writeword
00032572 <AmiBlitz3.ab3@22651> BRA.s br2
00032578 <AmiBlitz3.ab3@22655>   MOVE.l destpointer,a0
0003257E <AmiBlitz3.ab3@22656>          SUB.l load_var_addr,a0
00032584 <AmiBlitz3.ab3@22657>          CMP.l #4,a0
00032588 <AmiBlitz3.ab3@22658>          BEQ JL_0_D0B4
0003258E <AmiBlitz3.ab3@22659>          CMP.w #$4eb9,-6(a4)
00032592 <AmiBlitz3.ab3@22660>          BEQ b6
00032598 <AmiBlitz3.ab3@22661>          CMP.w #$5ec0,-2(a4)                               ;>
0003259C <AmiBlitz3.ab3@22662>      BNE.s 'lb1
000325A2 <AmiBlitz3.ab3@22663>          MOVE.w #$6f00,-2(a4)                              ;ble
000325A6 <AmiBlitz3.ab3@22664> BRA.s br
000325AC <AmiBlitz3.ab3@22667>  CMP.w #$5dc0,-2(a4)                                       ;<
000325B0 <AmiBlitz3.ab3@22668>   BNE.s 'lb2
000325B6 <AmiBlitz3.ab3@22669>          MOVE.w #$6c00,-2(a4)                              ;bge
000325BA <AmiBlitz3.ab3@22670> BRA.s br
000325C0 <AmiBlitz3.ab3@22673>   CMP.w #$57c0,-2(a4)                                      ;=
000325C4 <AmiBlitz3.ab3@22674>   BNE.s 'lb3
000325CA <AmiBlitz3.ab3@22675>          MOVE.w #$6600,-2(a4)                              ;bne
000325CE <AmiBlitz3.ab3@22676> BRA.s br
000325D4 <AmiBlitz3.ab3@22679>   CMP.w #$56c0,-2(a4)                                      ;<>
000325D8 <AmiBlitz3.ab3@22680>   BNE.s 'lb4
000325DE <AmiBlitz3.ab3@22681>          MOVE.w #$6700,-2(a4)                              ;beq
000325E2 <AmiBlitz3.ab3@22682> BRA.s br
000325E8 <AmiBlitz3.ab3@22685>   CMP.w #$5cc0,-2(a4)                                      ;>=
000325EC <AmiBlitz3.ab3@22686>   BNE.s 'lb5
000325F2 <AmiBlitz3.ab3@22687>          MOVE.w #$6d00,-2(a4)                              ;blt
000325F6 <AmiBlitz3.ab3@22688> BRA.s br
000325FC <AmiBlitz3.ab3@22691>   CMP.w #$5fc0,-2(a4)                                      ;<=
00032600 <AmiBlitz3.ab3@22692>         BNE.s b6
00032606 <AmiBlitz3.ab3@22693>          MOVE.w #$6e00,-2(a4)                              ;bgt
00032608 <AmiBlitz3.ab3@22696>   TST.w (a7)+
0003260E <AmiBlitz3.ab3@22698>         TST.b fast
00032612 <AmiBlitz3.ab3@22699>         BEQ 'l1
00032618 <AmiBlitz3.ab3@22700>         OR.b #$ff,-1(a4)                                   ;long branches
0003261C <AmiBlitz3.ab3@22701>         BSR writeword
00032620 <AmiBlitz3.ab3@22705>         BSR writeword
00032624 <AmiBlitz3.ab3@22706> BRA.s br2
00032628 <AmiBlitz3.ab3@22709>   BSR.w writeword
0003262C <AmiBlitz3.ab3@22712>   MOVE.l posbr(PC),D1
0003262E <AmiBlitz3.ab3@22713>   TST.w (A7)+
00032632 <AmiBlitz3.ab3@22714>    BEQ.w JL_0_D0C2
00032636 <AmiBlitz3.ab3@22715>   MOVE.l negbr(PC),D1
0003263C <AmiBlitz3.ab3@22718>   TST.b fast
00032640 <AmiBlitz3.ab3@22719>            BEQ 'l1
00032646 <AmiBlitz3.ab3@22720>            OR.l #$00ff0000,d1
0003264A <AmiBlitz3.ab3@22721>            BSR writelong
0003264E <AmiBlitz3.ab3@22722>            BSR writeword
00032652 <AmiBlitz3.ab3@22723> BRA br2
00032656 <AmiBlitz3.ab3@22726>   BSR.w writelong
00032658 <AmiBlitz3.ab3@22729>  MOVEQ.l #$0E,D0
0003265A <AmiBlitz3.ab3@22730>   MOVEQ.l #$01,D1
00032660 <AmiBlitz3.ab3@22731>   MOVEA.l _execbase,A6
00032666 <AmiBlitz3.ab3@22733>   MOVE.l mempool,a0
0003266A <AmiBlitz3.ab3@22734>   JSR _AllocPooled(a6)
0003266C <AmiBlitz3.ab3@22735>   MOVEA.l D0,A0
00032672 <AmiBlitz3.ab3@22736>   MOVE.l firstiff,(A0)
00032678 <AmiBlitz3.ab3@22737>   MOVE.l A0,firstiff
0003267C <AmiBlitz3.ab3@22738>   MOVE.l (A7)+,$4(A0)
00032684 <AmiBlitz3.ab3@22739>   MOVE.l destpointer,$8(A0)
00032688 <AmiBlitz3.ab3@22740>   MOVE.w (A7)+,$C(A0)
0003268E <AmiBlitz3.ab3@22741>    JSR reget
00032692 <AmiBlitz3.ab3@22742>    BEQ.w JL_0_D10C
00032698 <AmiBlitz3.ab3@22743>   BSET #$7,$C(A0)
000326A2 <AmiBlitz3.ab3@22747>   MOVE.w oldqflag,instringon
000326A8 <AmiBlitz3.ab3@22748>   MOVEA.l lastsourcepos,A5
000326B0 <AmiBlitz3.ab3@22749>   MOVE.w #$003A,lastchar
000326B2 <AmiBlitz3.ab3@22752> RTS
000326B6 <AmiBlitz3.ab3@22756>   CMP.w #$1,D0
000326BA <AmiBlitz3.ab3@22757>    BLT.w JL_0_D128
000326BE <AmiBlitz3.ab3@22758>   CMP.w #$0,D0
000326C2 <AmiBlitz3.ab3@22759>    BGT.w JL_0_D128
000326C4 <AmiBlitz3.ab3@22760>   ADD.w D0,D0
000326C6 <AmiBlitz3.ab3@22761>   ADD.w D0,D0
000326CA <AmiBlitz3.ab3@22762>   MOVEA.l JL_0_D128(PC,D0.W),A0
000326CC <AmiBlitz3.ab3@22765> JMP (A0)
000326D0 <AmiBlitz3.ab3@22768> BRA.w JL_0_D128
000326D4 <AmiBlitz3.ab3@22772>   CMP.w #$1,D0
000326D8 <AmiBlitz3.ab3@22773>    BLT.w JL_0_D146
000326DC <AmiBlitz3.ab3@22774>   CMP.w #$0,D0
000326E0 <AmiBlitz3.ab3@22775>    BGT.w JL_0_D146
000326E2 <AmiBlitz3.ab3@22776>   ADD.w D0,D0
000326E4 <AmiBlitz3.ab3@22777>   ADD.w D0,D0
000326E8 <AmiBlitz3.ab3@22778>   MOVEA.l JL_0_D146(PC,D0.W),A0
000326EA <AmiBlitz3.ab3@22781>   JSR (A0)
000326EE <AmiBlitz3.ab3@22784> BRA.w JL_0_D146
000326F2 <AmiBlitz3.ab3@22788>   CMP.w #$1,D0
000326F6 <AmiBlitz3.ab3@22789>    BLT.w JL_0_D168
000326FA <AmiBlitz3.ab3@22790>   CMP.w #$0,D0
000326FE <AmiBlitz3.ab3@22791>    BGT.w JL_0_D168
00032700 <AmiBlitz3.ab3@22792>   ADD.w D0,D0
00032702 <AmiBlitz3.ab3@22793>   ADD.w D0,D0
00032706 <AmiBlitz3.ab3@22794>   MOVEA.l JL_0_D168(PC,D0.W),A0
0003270A <AmiBlitz3.ab3@22797>   MOVE.w #$6753,-(A7)                                      ;#'gS' ;for runtime error checking!
0003270C <AmiBlitz3.ab3@22800>    JSR (A0)
00032710 <AmiBlitz3.ab3@22803> BRA.w JL_0_D168
00032712 <AmiBlitz3.ab3@22806> labcnt:   Ds.w 1
00032714 <AmiBlitz3.ab3@22813>   MOVEQ.l #$02,D2
00032718 <AmiBlitz3.ab3@22814>    BSR.w bakeval
0003271C <AmiBlitz3.ab3@22815>   LEA JL_0_D10E(PC),A0
00032720 <AmiBlitz3.ab3@22816>   LEA JL_0_D12C(PC),A1
00032724 <AmiBlitz3.ab3@22817>   MOVE.w #$001A,D1
00032728 <AmiBlitz3.ab3@22818>   CMP.w #-$7FFB,D0
0003272C <AmiBlitz3.ab3@22819>    BEQ.w JL_0_D1B6
00032730 <AmiBlitz3.ab3@22820>   CMP.w #-$7FFA,D0
00032734 <AmiBlitz3.ab3@22821>    BNE.w JUMP_syntaxerr
00032738 <AmiBlitz3.ab3@22822>   LEA JL_0_D12C(PC),A0
0003273C <AmiBlitz3.ab3@22823>   LEA JL_0_D14A(PC),A1
00032740 <AmiBlitz3.ab3@22824>   MOVE.w #$001A,D1
00032746 <AmiBlitz3.ab3@22825>   TST.b debugmode
0003274A <AmiBlitz3.ab3@22826>    BEQ.b JL_0_D1B6
00032750 <AmiBlitz3.ab3@22827>    JSR chkstak
00032754 <AmiBlitz3.ab3@22828>   LEA JL_0_D14A(PC),A0
00032758 <AmiBlitz3.ab3@22829>   LEA labcnt(PC),A1
0003275C <AmiBlitz3.ab3@22830>   MOVE.w #$001E,D1
0003275E <AmiBlitz3.ab3@22833>   MOVE.w D1,-(A7)
00032764 <AmiBlitz3.ab3@22834>   MOVE.l destpointer,-(A7)                                 ;for when we know number of labels!
00032768 <AmiBlitz3.ab3@22835>    BSR.w pokecode
0003276E <AmiBlitz3.ab3@22836>   CLR.w labcnt
00032774 <AmiBlitz3.ab3@22841>    JSR get1bytemain
0003277A <AmiBlitz3.ab3@22842>   SUBQ.l #2,destpointer                                    ;for makealab!
0003277E <AmiBlitz3.ab3@22843>    BSR.w JL_0_AE22
00032784 <AmiBlitz3.ab3@22844>   ADDQ.l #2,destpointer
0003278A <AmiBlitz3.ab3@22845>    JSR addoff
0003278E <AmiBlitz3.ab3@22846>   MOVE.l $8(A2),D1
00032792 <AmiBlitz3.ab3@22847>    BSR.w writelong
00032798 <AmiBlitz3.ab3@22848>   ADDQ.w #1,labcnt
0003279E <AmiBlitz3.ab3@22849>    JSR reget
000327A2 <AmiBlitz3.ab3@22850>   CMP.w #$2C,D0
000327A6 <AmiBlitz3.ab3@22851>    BEQ.w JL_0_D1C8
000327A8 <AmiBlitz3.ab3@22852>   MOVEA.l (A7)+,A0
000327AA <AmiBlitz3.ab3@22853>   MOVE.w (A7)+,D2
000327B0 <AmiBlitz3.ab3@22854>   MOVE.w dontwrite,D1
000327B4 <AmiBlitz3.ab3@22855>    BNE.w JL_0_D21A
000327B8 <AmiBlitz3.ab3@22856>   MOVE.w labcnt(PC),D1
000327BC <AmiBlitz3.ab3@22857>   MOVE.w D1,$A(A0)
000327BE <AmiBlitz3.ab3@22858>   ADD.w D1,D1
000327C0 <AmiBlitz3.ab3@22859>   ADD.w D1,D1
000327C2 <AmiBlitz3.ab3@22860>   ADDQ.w #2,D1
000327C6 <AmiBlitz3.ab3@22861>   MOVE.w D1,$2(A0,D2.W)
000327C8 <AmiBlitz3.ab3@22864> RTS
000327CE <AmiBlitz3.ab3@22868>   TST.b debugmode
000327D2 <AmiBlitz3.ab3@22869>    BEQ.w JL_0_D236
000327D8 <AmiBlitz3.ab3@22870>    JSR chkstak
000327DE <AmiBlitz3.ab3@22871>   MOVE.l AL_0_D162,D1
000327E2 <AmiBlitz3.ab3@22872>    BSR.w writelong
000327E8 <AmiBlitz3.ab3@22874>   MOVE.w gosubcode,D1
000327EC <AmiBlitz3.ab3@22875> BRA.w JL_0_D246
000327F2 <AmiBlitz3.ab3@22879>   MOVE.w gotocode,D1
000327F4 <AmiBlitz3.ab3@22882>   MOVE.w D1,-(A7)
000327F8 <AmiBlitz3.ab3@22883>    BSR.w JL_0_AE22
000327FA <AmiBlitz3.ab3@22884>   MOVE.w (A7)+,D1
000327FE <AmiBlitz3.ab3@22885>    BSR.w writeword
00032804 <AmiBlitz3.ab3@22886>    JSR addoff
00032808 <AmiBlitz3.ab3@22887>   MOVE.l $8(A2),D1
0003280C <AmiBlitz3.ab3@22888> BRA.w writelong
00032812 <AmiBlitz3.ab3@22892>   MOVE.w proceduremode,D1
00032816 <AmiBlitz3.ab3@22893>    BEQ.w JUMP_badpenderr
0003281A <AmiBlitz3.ab3@22894>   MOVE.w #$4EF9,D1
0003281E <AmiBlitz3.ab3@22895>    BSR.w writeword
00032824 <AmiBlitz3.ab3@22896>    JSR addoff
0003282A <AmiBlitz3.ab3@22897>   MOVEA.l _execbase,A6
0003282C <AmiBlitz3.ab3@22898>   MOVEQ.l #$08,D0
0003282E <AmiBlitz3.ab3@22899>   MOVEQ.l #$01,D1
00032834 <AmiBlitz3.ab3@22901>   MOVE.l mempool,a0
00032838 <AmiBlitz3.ab3@22902>   JSR _AllocPooled(a6)
0003283A <AmiBlitz3.ab3@22903>   MOVEA.l D0,A0
00032840 <AmiBlitz3.ab3@22904>   MOVE.l firstpend,(A0)
00032846 <AmiBlitz3.ab3@22905>   MOVE.l A0,firstpend
0003284E <AmiBlitz3.ab3@22906>   MOVE.l destpointer,$4(A0)
00032852 <AmiBlitz3.ab3@22907> BRA.w writelong
00032856 <AmiBlitz3.ab3@22911>   BSR.w do_AsmExit
0003285C <AmiBlitz3.ab3@22912> JMP get1bytemain
00032864 <AmiBlitz3.ab3@22916>   MOVE.b #1,nostringopt
00032868 <AmiBlitz3.ab3@22917>   MOVEM.l a0/a1/d1,-(a7)
0003286E <AmiBlitz3.ab3@22918>   MOVEA.l currentfunction,A0
00032874 <AmiBlitz3.ab3@22919>     CMP.l #0,a0
00032878 <AmiBlitz3.ab3@22920>     BNE 'l1
0003287E <AmiBlitz3.ab3@22921>     JMP errorasmexit
00032880 <AmiBlitz3.ab3@22922> 'l1 MOVEQ.l #$00,D2
00032884 <AmiBlitz3.ab3@22923>   MOVE.b $5(A0),D2
00032888 <AmiBlitz3.ab3@22924>   BSR.w eval
0003288E <AmiBlitz3.ab3@22926>   MOVEA.l currentfunction,A0
00032892 <AmiBlitz3.ab3@22927>   MOVE.l funcstruct_returntype(a0),a0
00032898 <AmiBlitz3.ab3@22928>   CMP.l #0,a0
0003289C <AmiBlitz3.ab3@22929>   BEQ 'isstatement
000328A4 <AmiBlitz3.ab3@22930>   CMP.l #$100,4(a0)
000328A8 <AmiBlitz3.ab3@22931>   BLT.w 'isvar
000328AA <AmiBlitz3.ab3@22932>   MOVE.l a2,a1
000328B0 <AmiBlitz3.ab3@22933>   TST.l typetocast
000328B4 <AmiBlitz3.ab3@22934>   BEQ 'nocast
000328BA <AmiBlitz3.ab3@22935>   MOVE.l typetocast,a1
000328BC <AmiBlitz3.ab3@22936> 'nocast  CMP.l a0,a1
000328C0 <AmiBlitz3.ab3@22937>   BEQ 'ok
000328C6 <AmiBlitz3.ab3@22938>   CLR.l typetocast
000328CC <AmiBlitz3.ab3@22939>   MOVE.l lasttoken,d1
000328D0 <AmiBlitz3.ab3@22940>   CMP.w #NullTokenID,d1                   ;$b581 ok, when token for null
000328D4 <AmiBlitz3.ab3@22941>   BEQ 'isnull
000328DA <AmiBlitz3.ab3@22942> 'error  JMP errorconvertreturntype
000328DE <AmiBlitz3.ab3@22949>   MOVEM.l (a7)+,a0/a1/d1
000328E2 <AmiBlitz3.ab3@22950> BRA.w do_AsmExit
000328E8 <AmiBlitz3.ab3@22952> error_convert_types2 JMP error_convert_types
000328EE <AmiBlitz3.ab3@22965>   TST.b debugmode
000328F2 <AmiBlitz3.ab3@22966>    BEQ.w JL_0_D2CA
000328F6 <AmiBlitz3.ab3@22967>   MOVE.w #$C305,D1
000328FA <AmiBlitz3.ab3@22968> BRA.w Atokejsr
000328FE <AmiBlitz3.ab3@22971>   MOVE.w #$4E75,D1
00032902 <AmiBlitz3.ab3@22972> BRA.w writeword
00032906 <AmiBlitz3.ab3@22975> localslist:  Ds.l 1                                        ;all locals for procs.;??Looks like obsovled data??
0003290A <AmiBlitz3.ab3@22976> proclocals:  Ds.l 1                                        ;for debugga!
0003290C <AmiBlitz3.ab3@22977> procnum:     Ds.w 1
0003290E <AmiBlitz3.ab3@22978> procnum2:    Ds.w 1
00032912 <AmiBlitz3.ab3@22979> prolineat:   Ds.l 1
00032918 <AmiBlitz3.ab3@22983>    TST.w proceduremode
0003291C <AmiBlitz3.ab3@22984>    BGT JUMP_sreterr
00032920 <AmiBlitz3.ab3@22985>    CMP.w #-$7FF9,D0
00032924 <AmiBlitz3.ab3@22986>    BEQ.w JL_0_D29C
00032926 <AmiBlitz3.ab3@22987>    MOVEQ.l #-$01,D1
0003292A <AmiBlitz3.ab3@22988> BRA.w do_function2
00032930 <AmiBlitz3.ab3@22991> JMP sreterr
00032936 <AmiBlitz3.ab3@22995>   CLR.b skipfunc
0003293C <AmiBlitz3.ab3@22996>   TST.l unusedfunc
00032940 <AmiBlitz3.ab3@22997>   BEQ 'ex
00032944 <AmiBlitz3.ab3@22998>   MOVEM.l d0-d7/a0-a6,-(a7)
0003294A <AmiBlitz3.ab3@22999>   MOVE.l unusedfunc,d1
00032950 <AmiBlitz3.ab3@23000>   LEA ptr_parameterstore,a5
00032952 <AmiBlitz3.ab3@23003>   MOVE.l d1,a0
00032956 <AmiBlitz3.ab3@23004>   LEA 12(a0),a2
00032958 <AmiBlitz3.ab3@23005>   MOVE.l a5,a1
0003295A <AmiBlitz3.ab3@23007>   CMPM.b (a1)+,(a2)+
0003295E <AmiBlitz3.ab3@23008>   BNE 'neq
00032960 <AmiBlitz3.ab3@23009>   TST.b (a2)
00032964 <AmiBlitz3.ab3@23010>   BNE 'ch
00032966 <AmiBlitz3.ab3@23011>   TST.b (a1)
0003296A <AmiBlitz3.ab3@23012>   BNE 'neq
00032972 <AmiBlitz3.ab3@23013>   MOVE.b #1,skipfunc
00032976 <AmiBlitz3.ab3@23014> BRA 'out
00032978 <AmiBlitz3.ab3@23017>   MOVE.l (a0),d1
0003297C <AmiBlitz3.ab3@23018>   BNE 'ag
00032980 <AmiBlitz3.ab3@23021>   MOVEM.l (a7)+,d0-d7/a0-a6
00032982 <AmiBlitz3.ab3@23024> RTS
00032988 <AmiBlitz3.ab3@23028> JMP dupprocerr
0003298E <AmiBlitz3.ab3@23031> JMP illprocperr
00032996 <AmiBlitz3.ab3@23038>   CMP.w #-1,proceduremode                                  ;was JUMP_sreterr_2
0003299A <AmiBlitz3.ab3@23039>    BEQ JUMP_sreterr
0003299E <AmiBlitz3.ab3@23040>   CMP.w #-$7FF9,D0
000329A2 <AmiBlitz3.ab3@23041>    BEQ.w do_function_return
000329AC <AmiBlitz3.ab3@23044>   MOVE.w oldqflag,instringon
000329B2 <AmiBlitz3.ab3@23045>   MOVEA.l lastsourcepos,A5
000329B8 <AmiBlitz3.ab3@23046>   JSR getfunctionreturntype
000329BE <AmiBlitz3.ab3@23047>   JSR get1bytemain
000329C4 <AmiBlitz3.ab3@23050>   TST.b declare
000329C8 <AmiBlitz3.ab3@23051>   BEQ 'l1
000329D0 <AmiBlitz3.ab3@23052>   MOVE.b #1,nowdeclare
000329D6 <AmiBlitz3.ab3@23055>   JSR errchx                                           ;writejumpoverfunction
000329DC <AmiBlitz3.ab3@23058>   CLR.b fastfunc
000329E6 <AmiBlitz3.ab3@23059>   MOVE.l firstiff,firstiffstore
000329EE <AmiBlitz3.ab3@23060>   CMP.l #"FAST",-1(a5)
000329F2 <AmiBlitz3.ab3@23061>   BNE 'nofast
000329F8 <AmiBlitz3.ab3@23062>   CMP.b #" ",3(a5)
000329FC <AmiBlitz3.ab3@23063>   BNE 'nofast
000329FE <AmiBlitz3.ab3@23064>   ADDQ.l #3,a5
00032A02 <AmiBlitz3.ab3@23067>     CMP.b #" ",(a5)
00032A06 <AmiBlitz3.ab3@23068>      BNE 'x1
00032A08 <AmiBlitz3.ab3@23069>     ADDQ #1,a5
00032A0C <AmiBlitz3.ab3@23070> BRA 'x2
00032A12 <AmiBlitz3.ab3@23073>   MOVE.l a5,lastsourcepos
00032A1A <AmiBlitz3.ab3@23074>   MOVE.b #1,fastfunc
00032A22 <AmiBlitz3.ab3@23077>   CMP.l #"NOOP",-1(a5)                                     ;compile 3* so its deactivate
00032A26 <AmiBlitz3.ab3@23078> BRA 'noopt
00032A2C <AmiBlitz3.ab3@23080>   CMP.w #"T ",3(a5)                                        ;??Looks like dead code??
00032A30 <AmiBlitz3.ab3@23081>   BNE 'noopt
00032A32 <AmiBlitz3.ab3@23082>   ADDQ.l #4,a5
00032A36 <AmiBlitz3.ab3@23085>     CMP.b #" ",(a5)
00032A3A <AmiBlitz3.ab3@23086>      BNE 'x1b
00032A3C <AmiBlitz3.ab3@23087>     ADDQ #1,a5
00032A40 <AmiBlitz3.ab3@23088> BRA 'x2b
00032A46 <AmiBlitz3.ab3@23091>   MOVE.l a5,lastsourcepos
00032A4C <AmiBlitz3.ab3@23093>   JSR makename2
00032A50 <AmiBlitz3.ab3@23094> BRA 'l1
00032A56 <AmiBlitz3.ab3@23098>   JSR makename2
00032A5C <AmiBlitz3.ab3@23099>   JSR checkused
00032A62 <AmiBlitz3.ab3@23100>   TST.b skipfunc
00032A66 <AmiBlitz3.ab3@23101>    BEQ 'l1
00032A6C <AmiBlitz3.ab3@23102>   JSR skipme
00032A72 <AmiBlitz3.ab3@23103>   CLR.b fastfunc
00032A74 <AmiBlitz3.ab3@23104> RTS
00032A7E <AmiBlitz3.ab3@23107>   MOVE.l linenumat,prolineat
00032A84 <AmiBlitz3.ab3@23108>   ADDQ.w #1,procnum2
00032A8C <AmiBlitz3.ab3@23109>   MOVE.w procnum2(PC),procnum
00032A92 <AmiBlitz3.ab3@23110>   MOVE.w D1,proceduremode
00032A98 <AmiBlitz3.ab3@23111>   CLR.w locvaroff
00032A9C <AmiBlitz3.ab3@23112>   CMP.w #$7B,D0
00032AA0 <AmiBlitz3.ab3@23113>    BNE.w JUMP_syntaxerr
00032AA8 <AmiBlitz3.ab3@23114>    MOVE.b #1,infunctioncode
00032AAE <AmiBlitz3.ab3@23115>   MOVEA.l tempvm,A0
00032AB6 <AmiBlitz3.ab3@23116>   MOVE.w $C(A0),memlibstat
00032ABC <AmiBlitz3.ab3@23117>   BCLR #$7,$C(A0)                                          ;Bit out of range
00032AC0 <AmiBlitz3.ab3@23118>   MOVE.w #$4EF9,D1
00032AC4 <AmiBlitz3.ab3@23119>    BSR.w writeword
00032ACA <AmiBlitz3.ab3@23120>    JSR addoff
00032ACE <AmiBlitz3.ab3@23121>    BSR.w writelong
00032AD4 <AmiBlitz3.ab3@23122>    JSR findproc                                          ;findproc function
00032AD8 <AmiBlitz3.ab3@23123>    BEQ.w JUMP_dupprocerr
00032ADE <AmiBlitz3.ab3@23124>    JSR addlabel
00032AE4 <AmiBlitz3.ab3@23125>    MOVE.b #31,$20(a2)                                      ;increase if more pars
00032AEA <AmiBlitz3.ab3@23126>    MOVE.b #0,isfunc(a2)
00032AF2 <AmiBlitz3.ab3@23127>    MOVE.l functionreturntype,funcstruct_returntype(a2)
00032AFA <AmiBlitz3.ab3@23128>   MOVE.l destpointer,$E(A2)
00032B00 <AmiBlitz3.ab3@23129>   MOVE.l A2,currentfunction
00032B06 <AmiBlitz3.ab3@23130>   LEA nops8,A0
00032B0C <AmiBlitz3.ab3@23131>   LEA dataget,A1
00032B10 <AmiBlitz3.ab3@23132>    BSR.w pokecode2
00032B16 <AmiBlitz3.ab3@23133>   TST.b debugmode
00032B1A <AmiBlitz3.ab3@23134>    BEQ.b JL_0_D3AA
00032B1C <AmiBlitz3.ab3@23135>   MOVEQ.l #$04,D1
00032B22 <AmiBlitz3.ab3@23136>    JSR writetrap
00032B2C <AmiBlitz3.ab3@23137>   MOVE.l destpointer,proclocals
00032B30 <AmiBlitz3.ab3@23138>    BSR.w writelong
00032B34 <AmiBlitz3.ab3@23139>    BSR.w writelong
00032B38 <AmiBlitz3.ab3@23142>    LEA $16(A2),A4
00032B40 <AmiBlitz3.ab3@23143>   MOVE.b proceduremode+1,$5(A2)
00032B42 <AmiBlitz3.ab3@23144>   MOVEQ.l #$00,D6
00032B44 <AmiBlitz3.ab3@23145>   MOVEQ.l #$00,D5
00032B4A <AmiBlitz3.ab3@23146>    JSR get1bytemain
00032B4E <AmiBlitz3.ab3@23147>   CMP.w #$7D,D0
00032B52 <AmiBlitz3.ab3@23148>    BEQ.w JL_0_D466
00032B56 <AmiBlitz3.ab3@23151>    CMP.b #"@",d0
00032B5A <AmiBlitz3.ab3@23152>    BNE 'l2
00032B5C <AmiBlitz3.ab3@23153>    MOVE.l a0,-(a7)
00032B62 <AmiBlitz3.ab3@23154>    MOVE.l currentfunction,a0
00032B68 <AmiBlitz3.ab3@23155>    CMP.b #31,$20(a0)                                       ;increase if morepars
00032B6C <AmiBlitz3.ab3@23156>    BNE 'l1
00032B70 <AmiBlitz3.ab3@23157>    MOVE.b d6,$20(a0)                                       ;increase if morepar
00032B76 <AmiBlitz3.ab3@23160>    JSR get1bytemain
00032B78 <AmiBlitz3.ab3@23161>    MOVE.l (a7)+,a0
00032B7C <AmiBlitz3.ab3@23164>    BSR.w getparameter
00032B80 <AmiBlitz3.ab3@23165>    BSR.w JL_0_8E3C
00032B88 <AmiBlitz3.ab3@23166>   CMPI.l #$7,$4(A2)
00032B8C <AmiBlitz3.ab3@23167>    BNE.w JL_0_D3F6
00032B92 <AmiBlitz3.ab3@23168>   LEA stbuff,A0
00032B94 <AmiBlitz3.ab3@23169>   MOVE.w D5,D1
00032B96 <AmiBlitz3.ab3@23170>   LSL.w #2,D1
00032B9A <AmiBlitz3.ab3@23171>   MOVE.w D6,$0(A0,D1.W)
00032BA0 <AmiBlitz3.ab3@23172>   MOVE.w $4(A3),$2(A0,D1.W)
00032BA2 <AmiBlitz3.ab3@23173>   ADDQ.w #1,D5
00032BA4 <AmiBlitz3.ab3@23174>   MOVEQ.l #$07,D2
00032BA8 <AmiBlitz3.ab3@23175> BRA.w JL_0_D442
00032BAE <AmiBlitz3.ab3@23178> JMP toovarerr
00032BB2 <AmiBlitz3.ab3@23181>   MOVE.w #$2940,D1
00032BB4 <AmiBlitz3.ab3@23182>   MOVEQ.l #$03,D2
00032BBC <AmiBlitz3.ab3@23183>   BTST #$0,flagmask+1
00032BC0 <AmiBlitz3.ab3@23184>    BNE.w JL_0_D430
00032BC8 <AmiBlitz3.ab3@23185>   CMPI.l #$100,$4(A2)
00032BCC <AmiBlitz3.ab3@23186>    BCC.w JUMP_illprocperr
00032BD0 <AmiBlitz3.ab3@23187>   MOVE.w $6(A2),D2
00032BD4 <AmiBlitz3.ab3@23188>   CMP.w #$2,D2
00032BD8 <AmiBlitz3.ab3@23189>    BHI.w JL_0_D430
00032BDC <AmiBlitz3.ab3@23190>    BEQ.w JL_0_D42C
00032BE0 <AmiBlitz3.ab3@23191>   EORI.w #$3000,D1
00032BE4 <AmiBlitz3.ab3@23192> BRA.w JL_0_D430
00032BEA <AmiBlitz3.ab3@23195> JMP more6pard
00032BEE <AmiBlitz3.ab3@23198>   ORI.w #$1000,D1
00032BF0 <AmiBlitz3.ab3@23201>   OR.w D6,D1
00032BF6 <AmiBlitz3.ab3@23202>   TST.b fpu
00032BFA <AmiBlitz3.ab3@23203>   BEQ 'nofpu
00032BFE <AmiBlitz3.ab3@23204>   CMP.b #5,d2
00032C02 <AmiBlitz3.ab3@23205>   BNE 'nofpu
00032C06 <AmiBlitz3.ab3@23206>   CMP.w #6,d6
00032C0A <AmiBlitz3.ab3@23207>   BLT 'l10a
00032C10 <AmiBlitz3.ab3@23208>   CMP.l #newtype_double,a2
00032C14 <AmiBlitz3.ab3@23209>   BEQ JUMP_more6pard
00032C18 <AmiBlitz3.ab3@23210> BRA 'nofpu
00032C1E <AmiBlitz3.ab3@23213>   MOVE.l #$f22c6400,d1
00032C22 <AmiBlitz3.ab3@23214>   MOVEM.l d0/a4,-(a7)
00032C24 <AmiBlitz3.ab3@23215>   MOVE.l d6,d0
00032C26 <AmiBlitz3.ab3@23216>   ASL.l #7,d0
00032C28 <AmiBlitz3.ab3@23217>   OR.w d0,d1
00032C2E <AmiBlitz3.ab3@23218>   CMP.l #newtype_double,a2
00032C32 <AmiBlitz3.ab3@23219>   BNE 'l1
00032C38 <AmiBlitz3.ab3@23220>   OR.l #$1000,d1
00032C3C <AmiBlitz3.ab3@23223>   BSR writelong
00032C40 <AmiBlitz3.ab3@23224>   MOVE.w 4(a3),d1
00032C44 <AmiBlitz3.ab3@23225>   BSR writeword
00032C48 <AmiBlitz3.ab3@23226>   MOVEM.l (a7)+,a4/d0
00032C4C <AmiBlitz3.ab3@23227> BRA JL_0_D442
00032C4E <AmiBlitz3.ab3@23230>   MOVE.l A4,-(A7)
00032C52 <AmiBlitz3.ab3@23231>    CMP.w #6,d6
00032C56 <AmiBlitz3.ab3@23232>    BLT 'l10
00032C5A <AmiBlitz3.ab3@23233>    MOVE.w #$c500-4,d1                                      ;savetemp+regnum
00032C5C <AmiBlitz3.ab3@23234>    ADD.w d6,d1
00032C62 <AmiBlitz3.ab3@23235>    JSR Atokejsr
00032C68 <AmiBlitz3.ab3@23236>    TST.w dontwrite
00032C6C <AmiBlitz3.ab3@23237>    BNE 'l10
00032C72 <AmiBlitz3.ab3@23238>    MOVE.l data1start,d1
00032C78 <AmiBlitz3.ab3@23239>    MOVE.l destpointer,a4
00032C7C <AmiBlitz3.ab3@23240>    ADD.l d1,-6(a4)
00032C82 <AmiBlitz3.ab3@23241>    MOVE.l destpointer,d1
00032C84 <AmiBlitz3.ab3@23242>    SUBQ.l #6,d1
00032C8A <AmiBlitz3.ab3@23243>    SUB.l destbufferstart,d1
00032C8C <AmiBlitz3.ab3@23245>    MOVE.l d2,-(a7)
00032C8E <AmiBlitz3.ab3@23246>    MOVE.l d1,d2
00032C94 <AmiBlitz3.ab3@23247>    JSR addhunkoffset                                       ;move.l $0,-x(a4)
00032C96 <AmiBlitz3.ab3@23248>    MOVE.l (a7)+,d2
00032C9C <AmiBlitz3.ab3@23249>    MOVE.l destpointer,a4
00032CA0 <AmiBlitz3.ab3@23250>    CMP.w #2,d2
00032CA4 <AmiBlitz3.ab3@23251>    BNE 'nw1
00032CAA <AmiBlitz3.ab3@23253>    MOVE.w #$3979,-8(a4)                                    ;move.w $0,-x(a4)
00032CB2 <AmiBlitz3.ab3@23254>    ADD.l #2,-6(a4)
00032CB6 <AmiBlitz3.ab3@23257>    CMP.w #1,d2
00032CBA <AmiBlitz3.ab3@23258>    BNE 'nb
00032CC0 <AmiBlitz3.ab3@23259>    MOVE.w #$1979,-8(a4)                                    ;move.b $0,-x(a4)
00032CC8 <AmiBlitz3.ab3@23260>    ADD.l #3,-6(a4)
00032CCE <AmiBlitz3.ab3@23263>    MOVE.w $4(a3),-2(a4)
00032CD2 <AmiBlitz3.ab3@23264> BRA 'ne1
00032CD6 <AmiBlitz3.ab3@23267>   BSR.w writeword                                          ;write storeparameter
00032CDA <AmiBlitz3.ab3@23270>   MOVE.w $4(A3),D1
00032CDE <AmiBlitz3.ab3@23271>    BSR.w writeword
00032CE0 <AmiBlitz3.ab3@23274>   MOVEA.l (A7)+,A4
00032CE6 <AmiBlitz3.ab3@23277>   CLR.l functionreturntype
00032CE8 <AmiBlitz3.ab3@23278>   ADDQ.w #1,D6
00032CEC <AmiBlitz3.ab3@23279>   CMP.w #11,D6                                             ;max function parameters
00032CF0 <AmiBlitz3.ab3@23280>    BCC.w JUMP_toovarerr
00032CF6 <AmiBlitz3.ab3@23281>   MOVE.l currentfunction,a0
00032CFA <AmiBlitz3.ab3@23282>   MOVE.l a2,funcstruct_parametertype-4(a0,d6*4)                                    ;-4 because d6 is increment before
00032CFC <AmiBlitz3.ab3@23283>   MOVE.b D2,(A4)+
00032D00 <AmiBlitz3.ab3@23284>   CMP.w #$2C,D0
00032D04 <AmiBlitz3.ab3@23285>    BNE.w JL_0_D45E
00032D0A <AmiBlitz3.ab3@23286>    JSR get1bytemain
00032D0E <AmiBlitz3.ab3@23298> BRA.w JL_0_D3C6
00032D12 <AmiBlitz3.ab3@23301>   CMP.w #$7D,D0
00032D16 <AmiBlitz3.ab3@23302>    BNE.w JUMP_syntaxerr
00032D1C <AmiBlitz3.ab3@23305>   MOVEA.l currentfunction,A2
00032D1E <AmiBlitz3.ab3@23306>   LSL.w #4,D5
00032D20 <AmiBlitz3.ab3@23307>   OR.w D5,D6
00032D24 <AmiBlitz3.ab3@23308>   MOVE.b D6,$4(A2)
00032D26 <AmiBlitz3.ab3@23309>   LSR.w #4,D6
00032D2A <AmiBlitz3.ab3@23310>    BEQ.w JL_0_D4C4
00032D30 <AmiBlitz3.ab3@23311>   LEA stbuff,A0
00032D32 <AmiBlitz3.ab3@23312>   SUBQ.w #1,D6
00032D34 <AmiBlitz3.ab3@23315>     MOVE.w D6,D1                                           ;function stringpars
00032D36 <AmiBlitz3.ab3@23316>     LSL.w #2,D1                                            ;stringsize was 2
00032D38 <AmiBlitz3.ab3@23318>       LSL.w #1,d1
00032D3A <AmiBlitz3.ab3@23319>       ADDQ.w #4,d1
00032D3C <AmiBlitz3.ab3@23321>     ADDQ.w #8,D1
00032D42 <AmiBlitz3.ab3@23322>     MOVE.w D1,funcst+2
00032D48 <AmiBlitz3.ab3@23323>     MOVE.l funcst,D1
00032D4C <AmiBlitz3.ab3@23324>     BSR.w writelong
00032D4E <AmiBlitz3.ab3@23325>     MOVE.w (A0)+,D1
00032D52 <AmiBlitz3.ab3@23326>     CMP.b #5,d1
00032D56 <AmiBlitz3.ab3@23327>     BLE 's1
00032D5A <AmiBlitz3.ab3@23328>     MOVE.w #$266c,d1                                       ;native move.l 4(a4),a3
00032D5E <AmiBlitz3.ab3@23329>     BSR writeinstruction
00032D60 <AmiBlitz3.ab3@23330>     MOVE.w D6,D1                                           ;function stringpars
00032D62 <AmiBlitz3.ab3@23331>     LSL.w #2,D1                                            ;stringsize was 2
00032D64 <AmiBlitz3.ab3@23333>       LSL.w #1,d1
00032D66 <AmiBlitz3.ab3@23335>     ADDQ.w #8,D1
00032D6A <AmiBlitz3.ab3@23336>     BSR writeword
00032D6E <AmiBlitz3.ab3@23337>   BRA 's2
00032D74 <AmiBlitz3.ab3@23340>     OR.w movedna3,D1
00032D78 <AmiBlitz3.ab3@23341>      BSR.w writeword
00032D7E <AmiBlitz3.ab3@23344>     MOVE.w (A0)+,least+2
00032D84 <AmiBlitz3.ab3@23345>     MOVE.l least,D1
00032D88 <AmiBlitz3.ab3@23346>      BSR.w writelong
00032D8A <AmiBlitz3.ab3@23347>     MOVE.l A0,-(A7)
00032D8E <AmiBlitz3.ab3@23348>     MOVE.w #$C700,D1
00032D92 <AmiBlitz3.ab3@23349>      BSR.w Atokejsr
00032D94 <AmiBlitz3.ab3@23350>     MOVEA.l (A7)+,A0
00032D98 <AmiBlitz3.ab3@23351>   DBF D6,JL_0_D482
00032D9E <AmiBlitz3.ab3@23354> JMP get1bytemain
00032DA4 <AmiBlitz3.ab3@23358>   MOVE.w dontwrite,D1
00032DA8 <AmiBlitz3.ab3@23359>    BNE.w JL_0_D4F6
00032DAE <AmiBlitz3.ab3@23360>   MOVE.l destpointer,-(A7)
00032DB4 <AmiBlitz3.ab3@23361>   MOVE.l A0,destpointer
00032DBA <AmiBlitz3.ab3@23362>   MOVE.l linksize,D1
00032DBE <AmiBlitz3.ab3@23363>    BSR.w writelong                                         ;writefunctions jumppos
00032DC4 <AmiBlitz3.ab3@23364>    TST.b fastfunc
00032DC8 <AmiBlitz3.ab3@23365>    BNE 'skip
00032DCC <AmiBlitz3.ab3@23366>   MOVE.w #$CC00,D1
00032DD0 <AmiBlitz3.ab3@23367>    BSR.w tokejsr2                                          ;write clearvars
00032DD6 <AmiBlitz3.ab3@23370>   MOVE.l (A7)+,destpointer
00032DD8 <AmiBlitz3.ab3@23373> RTS
00032DDE <AmiBlitz3.ab3@23377>   MOVEA.l currentfunction,A2
00032DE2 <AmiBlitz3.ab3@23378>   MOVEA.l $E(A2),A0
00032DE6 <AmiBlitz3.ab3@23379>   MOVE.w $6(A2),D1
00032DEA <AmiBlitz3.ab3@23380>    BEQ.w JL_0_D538
00032DF0 <AmiBlitz3.ab3@23381>   MOVE.w D1,linksize+2
00032DF4 <AmiBlitz3.ab3@23382>   MOVE.w $8(A2),D1                                         ;check if function memalloc need
00032DF8 <AmiBlitz3.ab3@23383>    BNE.w JL_0_D522
00032DFA <AmiBlitz3.ab3@23384>   ADDQ.w #6,A0
00032DFE <AmiBlitz3.ab3@23385>   MOVE.l A0,$E(A2)
00032E02 <AmiBlitz3.ab3@23386> BRA.w JL_0_D4C8
00032E04 <AmiBlitz3.ab3@23389>   MOVE.l A0,-(A7)
00032E08 <AmiBlitz3.ab3@23390>    BSR.w JL_0_D4C8
00032E0A <AmiBlitz3.ab3@23391>   MOVEA.l (A7)+,A0
00032E0E <AmiBlitz3.ab3@23392>   LEA $A(A0),A0
00032E14 <AmiBlitz3.ab3@23393>   MOVEA.l currentfunction,A2
00032E18 <AmiBlitz3.ab3@23394> BRA.w JL_0_D54A
00032E1C <AmiBlitz3.ab3@23397>   MOVE.w $8(A2),D1
00032E20 <AmiBlitz3.ab3@23398>    BNE.w JL_0_D54A
00032E24 <AmiBlitz3.ab3@23399>   LEA $10(A0),A0
00032E28 <AmiBlitz3.ab3@23400>   MOVE.l A0,$E(A2)
00032E2A <AmiBlitz3.ab3@23401> RTS
00032E30 <AmiBlitz3.ab3@23405> JMP errormsg_nofast
00032E36 <AmiBlitz3.ab3@23408>    MOVE.w dontwrite,D1                                     ;writeallocmem for functions (after releasemem called)
00032E3A <AmiBlitz3.ab3@23409>    BNE.w JL_0_D580
00032E40 <AmiBlitz3.ab3@23410>    TST.b fastfunc
00032E44 <AmiBlitz3.ab3@23411>    BNE JUMP_errormsg_nofast
00032E4A <AmiBlitz3.ab3@23412>   MOVE.l destpointer,-(A7)
00032E50 <AmiBlitz3.ab3@23413>   MOVE.l A0,destpointer
00032E54 <AmiBlitz3.ab3@23414>   MOVE.w #$4EB9,D1
00032E58 <AmiBlitz3.ab3@23415>    BSR.w writeword
00032E5E <AmiBlitz3.ab3@23416>    JSR addoff
00032E62 <AmiBlitz3.ab3@23417>    BSR.w writelong
00032E64 <AmiBlitz3.ab3@23418>   MOVEA.l (A7)+,A0
00032E6A <AmiBlitz3.ab3@23419>   MOVEA.l destpointer,A1
00032E6C <AmiBlitz3.ab3@23420>   MOVE.l A0,-(A1)
00032E72 <AmiBlitz3.ab3@23421>   MOVE.l A0,destpointer
00032E76 <AmiBlitz3.ab3@23424>   MOVE.w $8(A2),D4
00032E7A <AmiBlitz3.ab3@23425>    BPL.w JL_0_D59E
00032E7E <AmiBlitz3.ab3@23426>   MOVE.w #$C004,D1
00032E82 <AmiBlitz3.ab3@23427>    BSR.w tokejsr2
00032E88 <AmiBlitz3.ab3@23428>   MOVEA.l currentfunction,A2
00032E8C <AmiBlitz3.ab3@23429>   MOVE.w $8(A2),D4
00032E90 <AmiBlitz3.ab3@23430>   ANDI.w #$7FFF,D4
00032E94 <AmiBlitz3.ab3@23433>    BEQ.w JL_0_D5E0
00032E98 <AmiBlitz3.ab3@23434>   MOVE.b $4(A2),D1
00032E9C <AmiBlitz3.ab3@23435>   ANDI.w #$F,D1
00032E9E <AmiBlitz3.ab3@23436>   MOVE.w D1,-(A7)
00032EA2 <AmiBlitz3.ab3@23437>   CMP.w #$5,D1
00032EA6 <AmiBlitz3.ab3@23438>    BCS.w JL_0_D5BC
00032EAA <AmiBlitz3.ab3@23439>   MOVE.w #$2F04,D1
00032EAE <AmiBlitz3.ab3@23440>    BSR.w writeword
00032EB4 <AmiBlitz3.ab3@23443>   MOVE.l locdatast,D3
00032EBA <AmiBlitz3.ab3@23444>    JSR datastart
00032EBE <AmiBlitz3.ab3@23445>   MOVE.w #$C501,D1
00032EC2 <AmiBlitz3.ab3@23446>    BSR.w tokejsr2
00032EC4 <AmiBlitz3.ab3@23447>   MOVE.w (A7)+,D1
00032EC8 <AmiBlitz3.ab3@23448>   CMP.w #$5,D1
00032ECC <AmiBlitz3.ab3@23449>    BCS.w JL_0_D5E0
00032ED0 <AmiBlitz3.ab3@23450>   MOVE.w #$281F,D1
00032ED4 <AmiBlitz3.ab3@23451>    BSR.w writeword
00032ED8 <AmiBlitz3.ab3@23453>   MOVE.w #$4E75,D1
00032EDC <AmiBlitz3.ab3@23454> BRA.w writeword
00032EE2 <AmiBlitz3.ab3@23458>   LEA mwait,A0
00032EE8 <AmiBlitz3.ab3@23459>   LEA mwaitf,A1
00032EEC <AmiBlitz3.ab3@23460> BRA.w pokecode
00032EF2 <AmiBlitz3.ab3@23464> JMP laberr
00032EF6 <AmiBlitz3.ab3@23467>   CMP.w #$2E,D0
00032EFA <AmiBlitz3.ab3@23468>   BNE.w JUMP_syntaxerr
00032F00 <AmiBlitz3.ab3@23469>   JSR getparameter2
00032F04 <AmiBlitz3.ab3@23470>   BEQ.w JUMP_laberr
00032F0A <AmiBlitz3.ab3@23471>   LEA newtypebase,A2
00032F10 <AmiBlitz3.ab3@23472>   JSR findtype
00032F14 <AmiBlitz3.ab3@23473>   BNE.w JL_0_D626
00032F1C <AmiBlitz3.ab3@23474>   CMPI.l #MaxByte,$4(A2)
00032F20 <AmiBlitz3.ab3@23475>   BNE.w JUMP_typeerr
00032F24 <AmiBlitz3.ab3@23476> BRA.w JL_0_D62A
00032F2A <AmiBlitz3.ab3@23479> JMP typeerr
00032F30 <AmiBlitz3.ab3@23482>   JSR addlabel
00032F34 <AmiBlitz3.ab3@23485>   CLR.l $4(A2)
00032F3A <AmiBlitz3.ab3@23486>   MOVE.l A2,thistype
00032F40 <AmiBlitz3.ab3@23487>   CLR.l prevtype
00032F46 <AmiBlitz3.ab3@23488>   CLR.w typelen
00032F4C <AmiBlitz3.ab3@23489>   CLR.w linemode
00032F52 <AmiBlitz3.ab3@23490>   JSR reget
00032F56 <AmiBlitz3.ab3@23491>   BNE.w typemode
00032F58 <AmiBlitz3.ab3@23492> RTS
00032F5C <AmiBlitz3.ab3@23495>   CMP.w #-$7FFE,D0
00032F60 <AmiBlitz3.ab3@23496>   BEQ.w JL_0_D82E
00032F6A <AmiBlitz3.ab3@23498>   MOVE.w oldqflag,instringon
00032F70 <AmiBlitz3.ab3@23499>   MOVEA.l lastsourcepos,A5
00032F72 <AmiBlitz3.ab3@23500>   MOVEQ.l #$00,D6
00032F76 <AmiBlitz3.ab3@23501>   CMP.w #$2A,D0
00032F7A <AmiBlitz3.ab3@23502>   BNE.w JL_0_D670
00032F7C <AmiBlitz3.ab3@23503>   MOVEQ.l #$01,D6
00032F82 <AmiBlitz3.ab3@23504>   JSR get1bytemain
00032F86 <AmiBlitz3.ab3@23505> BRA.w JL_0_D67E
00032F8A <AmiBlitz3.ab3@23508>   CMP.w #$40,D0
00032F8E <AmiBlitz3.ab3@23509>   BNE.w JL_0_D67E
00032F90 <AmiBlitz3.ab3@23510>   MOVEQ.l #$05,D6
00032F96 <AmiBlitz3.ab3@23511>   JSR get1bytemain
00032F9C <AmiBlitz3.ab3@23514>   MOVE.w D6,flagmask
00032FA2 <AmiBlitz3.ab3@23515>   JSR getparameter2
00032FA6 <AmiBlitz3.ab3@23516>   BEQ.w JUMP_syntaxerr
00032FAC <AmiBlitz3.ab3@23517>   MOVEA.l thistype,A2
00032FAE <AmiBlitz3.ab3@23518>   ADDQ.w #4,A2
00032FB4 <AmiBlitz3.ab3@23519>   JSR findvariable2
00032FB8 <AmiBlitz3.ab3@23520>   BEQ.w JUMP_dupofferr
00032FBE <AmiBlitz3.ab3@23521>   JSR addlabel
00032FC0 <AmiBlitz3.ab3@23522>   MOVE.l A2,-(A7)
00032FC4 <AmiBlitz3.ab3@23523>   CMP.w #$2E,D0
00032FC8 <AmiBlitz3.ab3@23524>    BEQ.w JL_0_D6CE
00032FCC <AmiBlitz3.ab3@23525>   CMP.w #$24,D0
00032FD0 <AmiBlitz3.ab3@23526>    BNE.w JL_0_D6C0
00032FD6 <AmiBlitz3.ab3@23527>   MOVE.l #newtype_string,D2
00032FDC <AmiBlitz3.ab3@23528>    JSR get1bytemain
00032FE0 <AmiBlitz3.ab3@23529> BRA.w JL_0_D710
00032FE6 <AmiBlitz3.ab3@23532> JMP dupofferr
00032FEC <AmiBlitz3.ab3@23535>   MOVE.l prevtype,D2
00032FF0 <AmiBlitz3.ab3@23536>   BEQ.w JUMP_notypeerr
00032FF4 <AmiBlitz3.ab3@23537> BRA.w JL_0_D706
00032FFA <AmiBlitz3.ab3@23540> JMP notypeerr
00033000 <AmiBlitz3.ab3@23543>   JSR getparameter2
00033004 <AmiBlitz3.ab3@23544>    BEQ.w JUMP_syntaxerr
0003300A <AmiBlitz3.ab3@23545>   LEA newtypebase,A2
00033010 <AmiBlitz3.ab3@23546>    JSR findtype
00033014 <AmiBlitz3.ab3@23547>    BEQ.w JL_0_D704
0003301C <AmiBlitz3.ab3@23548>   BTST #$0,flagmask+1
00033020 <AmiBlitz3.ab3@23549>    BEQ.w JUMP_notypeerr
00033026 <AmiBlitz3.ab3@23550>   JSR addlabel
0003302E <AmiBlitz3.ab3@23553>   MOVE.w linenumat+2,$8(A2)
00033036 <AmiBlitz3.ab3@23554>   MOVE.l #MaxByte,$4(A2)
00033038 <AmiBlitz3.ab3@23557>   MOVE.l A2,D2
0003303E <AmiBlitz3.ab3@23560>   CMP.l #newtype_byte,D2
00033042 <AmiBlitz3.ab3@23561>    BEQ.w JL_0_D71E
00033048 <AmiBlitz3.ab3@23564>   ADDQ.w #1,typelen
00033050 <AmiBlitz3.ab3@23565>   BCLR #$0,typelen+1
00033052 <AmiBlitz3.ab3@23568>   MOVEQ.l #$00,D3
00033054 <AmiBlitz3.ab3@23569>   MOVEA.l D2,A2
0003305A <AmiBlitz3.ab3@23570>   MOVE.l A2,prevtype
0003305E <AmiBlitz3.ab3@23571>   MOVE.w $8(A2),D3
00033060 <AmiBlitz3.ab3@23572>   MOVEA.l (A7)+,A2
00033064 <AmiBlitz3.ab3@23573>   MOVE.l D2,$A(A2)
00033066 <AmiBlitz3.ab3@23574>   MOVEQ.l #$00,D4
0003306C <AmiBlitz3.ab3@23575>   MOVE.w typelen,D4
00033070 <AmiBlitz3.ab3@23576>   MOVE.w D4,$4(A2)
00033078 <AmiBlitz3.ab3@23577>   BTST #$0,flagmask+1
0003307C <AmiBlitz3.ab3@23578>    BEQ.w JL_0_D74C
0003307E <AmiBlitz3.ab3@23579>   MOVEQ.l #$04,D3
00033082 <AmiBlitz3.ab3@23582>   CMP.w #$5B,D0
00033086 <AmiBlitz3.ab3@23583>    BNE.w JL_0_D782
0003308A <AmiBlitz3.ab3@23584>   MOVEM.l D3-D4/A2,-(A7)
0003308E <AmiBlitz3.ab3@23585>    BSR.w AJL_0_BF6E
00033092 <AmiBlitz3.ab3@23586>   CMP.w #$5D,D0
00033096 <AmiBlitz3.ab3@23587>    BNE.w JUMP_syntaxerr
00033098 <AmiBlitz3.ab3@23588>   TST.w D6
0003309C <AmiBlitz3.ab3@23589>    BNE.w JUMP_fpconerr
0003309E <AmiBlitz3.ab3@23590>   MOVE.l D3,D1
000330A2 <AmiBlitz3.ab3@23591>   MOVEM.l (A7)+,D3-D4/A2
000330A8 <AmiBlitz3.ab3@23592>    JSR get1bytemain
000330AC <AmiBlitz3.ab3@23593>   MOVE.w D1,$8(A2)
000330B0 <AmiBlitz3.ab3@23594>   MULU.l d1,d3                                             ;>32k fix was mulu.w
000330B8 <AmiBlitz3.ab3@23595>   ORI.w #$2,flagmask
000330BA <AmiBlitz3.ab3@23598>   ADD.l D3,D4
000330C0 <AmiBlitz3.ab3@23601>     CMP.l #65532,d4
000330C4 <AmiBlitz3.ab3@23606>   BCC JUMP_toolongerr
000330CC <AmiBlitz3.ab3@23607>   MOVE.w flagmask,$6(A2)
000330D2 <AmiBlitz3.ab3@23608>   MOVE.w D4,typelen
000330D4 <AmiBlitz3.ab3@23609> RTS
000330DA <AmiBlitz3.ab3@23612> JMP badenderr
000330E0 <AmiBlitz3.ab3@23615> JMP noiferr
000330E6 <AmiBlitz3.ab3@23618> JMP toolongerr
000330EC <AmiBlitz3.ab3@23621> JMP fpconerr
000330F2 <AmiBlitz3.ab3@23624>   MOVE.l firstiff,D0
000330F6 <AmiBlitz3.ab3@23625>    BEQ.w JUMP_noiferr
000330F8 <AmiBlitz3.ab3@23626>   MOVEA.l D0,A0
000330FC <AmiBlitz3.ab3@23627>   MOVE.w $C(A0),D0
00033100 <AmiBlitz3.ab3@23628>   ANDI.w #$FF,D0
00033102 <AmiBlitz3.ab3@23629>   CMP.w D0,D1
00033106 <AmiBlitz3.ab3@23630>    BNE.w JUMP_badenderr
0003310A <AmiBlitz3.ab3@23633>   CMP.w #$1,D1
0003310E <AmiBlitz3.ab3@23634>   BNE.w JL_0_D7D8
00033112 <AmiBlitz3.ab3@23635>   MOVE.w #$6000,D1
00033118 <AmiBlitz3.ab3@23638>     TST.b fast
0003311C <AmiBlitz3.ab3@23639>     BEQ 'l1
00033122 <AmiBlitz3.ab3@23640>     OR.l #$ff,d1
00033126 <AmiBlitz3.ab3@23644>   BSR.w writeword
0003312C <AmiBlitz3.ab3@23645>   MOVEA.l destpointer,A1
00033130 <AmiBlitz3.ab3@23646>   MOVE.l $4(A0),D1
00033132 <AmiBlitz3.ab3@23647>   SUB.l A1,D1
00033138 <AmiBlitz3.ab3@23650>     TST.b fast
0003313C <AmiBlitz3.ab3@23651>     BEQ 'l2
00033140 <AmiBlitz3.ab3@23652>     BSR writelong
00033144 <AmiBlitz3.ab3@23653>   BRA JL_0_D7D8
00033148 <AmiBlitz3.ab3@23657>   BSR.w writeword
0003314C <AmiBlitz3.ab3@23660>   MOVEA.l $8(A0),A1                                        ;write if branch destination
00033152 <AmiBlitz3.ab3@23661>   MOVE.l destpointer,D1
00033154 <AmiBlitz3.ab3@23662>   SUB.l A1,D1
0003315A <AmiBlitz3.ab3@23665>     TST.b fast
0003315E <AmiBlitz3.ab3@23666>     BEQ 'l1
00033160 <AmiBlitz3.ab3@23667>     ADDQ.l #4,D1
00033166 <AmiBlitz3.ab3@23668>     MOVE.w dontwrite,D0
0003316A <AmiBlitz3.ab3@23669>     BNE.w JL_0_D7FE
0003316E <AmiBlitz3.ab3@23670>     MOVE.l d1,-$4(a1)
00033172 <AmiBlitz3.ab3@23671>   BRA JL_0_D7FE
00033174 <AmiBlitz3.ab3@23675>   ADDQ.l #2,d1
0003317A <AmiBlitz3.ab3@23676>   TST.w dontwrite
0003317E <AmiBlitz3.ab3@23677>   BNE JL_0_D7FE
00033184 <AmiBlitz3.ab3@23678>   CMP.l #MinWordSgnd,D1
00033188 <AmiBlitz3.ab3@23679>   BCC.w JUMP_bigiferr
0003318C <AmiBlitz3.ab3@23680>   MOVE.w D1,-$2(A1)
0003318E <AmiBlitz3.ab3@23683> RTS
00033194 <AmiBlitz3.ab3@23686> JMP bigiferr
0003319E <AmiBlitz3.ab3@23691>   MOVE.w oldqflag,instringon
000331A4 <AmiBlitz3.ab3@23692>   MOVEA.l lastsourcepos,A5
000331A6 <AmiBlitz3.ab3@23695>   MOVEQ.l #$01,D1
000331AA <AmiBlitz3.ab3@23696> BRA.w JL_0_D810
000331B4 <AmiBlitz3.ab3@23700>   MOVE.w oldqflag,instringon
000331BA <AmiBlitz3.ab3@23701>   MOVEA.l lastsourcepos,A5
000331BC <AmiBlitz3.ab3@23704>   MOVEQ.l #$00,D1
000331C0 <AmiBlitz3.ab3@23707>   BSR.w JL_0_D79E
000331C4 <AmiBlitz3.ab3@23708>   BSR.w AJL_0_D81C
000331CA <AmiBlitz3.ab3@23709> JMP get1bytemain
000331D0 <AmiBlitz3.ab3@23712>   MOVE.l (A0),firstiff
000331D2 <AmiBlitz3.ab3@23713>   MOVEA.l A0,A1
000331D4 <AmiBlitz3.ab3@23714>   MOVEQ.l #$0E,D0
000331DA <AmiBlitz3.ab3@23715>   MOVEA.l _execbase,A6
000331E0 <AmiBlitz3.ab3@23716>   MOVE.l mempool,a0
000331E4 <AmiBlitz3.ab3@23717> JMP _FreePooled(A6)
000331EA <AmiBlitz3.ab3@23721>   JSR get1bytemain
000331EE <AmiBlitz3.ab3@23724>   BEQ.w JL_0_D980
000331F6 <AmiBlitz3.ab3@23725>   CMP.l #"noa7",-1(a5)
000331FA <AmiBlitz3.ab3@23726>   BNE 'l1
00033200 <AmiBlitz3.ab3@23727>   JSR get1bytemain
00033206 <AmiBlitz3.ab3@23728>   JSR get1bytemain
0003320C <AmiBlitz3.ab3@23729>   JSR get1bytemain
00033214 <AmiBlitz3.ab3@23730>   MOVE.w #$3a,lastchar
00033218 <AmiBlitz3.ab3@23731> BRA JL_0_D980
0003321E <AmiBlitz3.ab3@23734>   CMP.w #"d0",-1(a5)
00033222 <AmiBlitz3.ab3@23735>   BNE 'l2
0003322A <AmiBlitz3.ab3@23736>   MOVE.b #1,returncode
00033230 <AmiBlitz3.ab3@23737>   CLR.w lastchar
00033234 <AmiBlitz3.ab3@23738> BRA JL_0_D980
00033238 <AmiBlitz3.ab3@23741>   CMP.w #$80d7,d0
0003323C <AmiBlitz3.ab3@23742>   BNE JL_0_D836
00033242 <AmiBlitz3.ab3@23743>   JSR skiprest
00033244 <AmiBlitz3.ab3@23744> RTS
00033248 <AmiBlitz3.ab3@23747>   BSR.w JL_0_D844
0003324E <AmiBlitz3.ab3@23748>   JSR reget
00033252 <AmiBlitz3.ab3@23749>   BNE.w JL_0_D836
00033254 <AmiBlitz3.ab3@23750> RTS
00033258 <AmiBlitz3.ab3@23753>   CMP.w #-$7FFF,D0
0003325C <AmiBlitz3.ab3@23754>    BNE.w JL_0_D87E
00033262 <AmiBlitz3.ab3@23755>   MOVE.w linemode,D1
00033266 <AmiBlitz3.ab3@23756>    BNE.w JUMP_modeerr
0003326C <AmiBlitz3.ab3@23757>   ADDQ.w #1,typelen
00033274 <AmiBlitz3.ab3@23758>   BCLR #$0,typelen+1
0003327A <AmiBlitz3.ab3@23759>   MOVEA.l thistype,A0
00033282 <AmiBlitz3.ab3@23760>   MOVE.w typelen,$8(A0)
0003328A <AmiBlitz3.ab3@23761>   MOVE.w #$FFFF,linemode
00033290 <AmiBlitz3.ab3@23762> JMP get1bytemain
00033296 <AmiBlitz3.ab3@23765> JMP modeerr
0003329A <AmiBlitz3.ab3@23768>   CMP.w #-$7FF5,D0
0003329E <AmiBlitz3.ab3@23769>    BEQ.w JL_0_D80E
000332A2 <AmiBlitz3.ab3@23770>   CMP.w #-$7FF4,D0
000332A6 <AmiBlitz3.ab3@23771>    BEQ.w JL_0_D804
000332AA <AmiBlitz3.ab3@23772>   CMP.w #-$7FF8,D0
000332AE <AmiBlitz3.ab3@23773>    BNE.w JL_0_D89A
000332B2 <AmiBlitz3.ab3@23776> BRA.w JL_0_D9E8
000332B8 <AmiBlitz3.ab3@23779> JMP interr3
000332BC <AmiBlitz3.ab3@23782>   CMP.w #-$7FF7,D0
000332C0 <AmiBlitz3.ab3@23783>    BNE.w JL_0_D8C8
000332C6 <AmiBlitz3.ab3@23784>    TST.b fpu
000332CA <AmiBlitz3.ab3@23785>    BEQ 'nof
000332D0 <AmiBlitz3.ab3@23786>    MOVEA.l currentfunction,A0
000332D6 <AmiBlitz3.ab3@23787>    CMP.l #0,a0
000332DA <AmiBlitz3.ab3@23788>    BEQ 'nof
000332E0 <AmiBlitz3.ab3@23789>    CMP.b #5,$5(a0)
000332E4 <AmiBlitz3.ab3@23790>     BNE 'nof
000332EA <AmiBlitz3.ab3@23791>    MOVE.l #$f23c5000,d1
000332EE <AmiBlitz3.ab3@23792>    BSR writelong
000332F2 <AmiBlitz3.ab3@23793>    MOVE.w #0,d1
000332F6 <AmiBlitz3.ab3@23794>    BSR writeword
000332FA <AmiBlitz3.ab3@23797>   MOVE.w #$7000,D1                                         ;end function moveq #0,d0
000332FE <AmiBlitz3.ab3@23798>    BSR.w writeword
00033304 <AmiBlitz3.ab3@23799>   MOVEA.l currentfunction,A0
0003330A <AmiBlitz3.ab3@23800>   CMP.l #0,a0
0003330E <AmiBlitz3.ab3@23801>   BEQ JL_0_D896
00033314 <AmiBlitz3.ab3@23802>   MOVE.l destpointer,d1
00033318 <AmiBlitz3.ab3@23803>   SUB.l $e(a0),d1
0003331C <AmiBlitz3.ab3@23804>   MOVE.l d1,isfunc+1(a0)
00033322 <AmiBlitz3.ab3@23805>   CMPI.b #$7,$5(A0)
00033326 <AmiBlitz3.ab3@23806>    BNE.w JL_0_D896
0003332C <AmiBlitz3.ab3@23807>   MOVE.w putstlen,D1
00033330 <AmiBlitz3.ab3@23808>    BSR.w writeword
00033334 <AmiBlitz3.ab3@23809> BRA.w JL_0_D896
0003333A <AmiBlitz3.ab3@23812> JMP interr
0003333E <AmiBlitz3.ab3@23815>  CMP.w #-$7FD0,D0
00033342 <AmiBlitz3.ab3@23816>    BNE.w JL_0_D966
00033348 <AmiBlitz3.ab3@23817>   MOVE.w proceduremode,D1
0003334C <AmiBlitz3.ab3@23818>    BNE.w JUMP_interr3
00033352 <AmiBlitz3.ab3@23819>   TST.b debugmode
00033356 <AmiBlitz3.ab3@23820>    BEQ.w JL_0_D90A
00033358 <AmiBlitz3.ab3@23821>   MOVEQ.l #$03,D1
0003335E <AmiBlitz3.ab3@23822>    JSR writetrap
00033364 <AmiBlitz3.ab3@23823>   MOVE.w dontwrite,D1
00033368 <AmiBlitz3.ab3@23824>    BNE.w JL_0_D90A
0003336E <AmiBlitz3.ab3@23825>   MOVEA.l intcleanat,A0
00033374 <AmiBlitz3.ab3@23826>   MOVE.l destpointer,(A0)
00033378 <AmiBlitz3.ab3@23827>   MOVE.w #$C30C,D1
0003337C <AmiBlitz3.ab3@23828>    BSR.w Atokejsr
00033382 <AmiBlitz3.ab3@23831>   MOVE.w intstring,D1
00033386 <AmiBlitz3.ab3@23832>    BEQ.w JUMP_interr
0003338A <AmiBlitz3.ab3@23833>    BPL.w JL_0_D934
00033390 <AmiBlitz3.ab3@23834>   MOVE.w intlevel,D1
00033394 <AmiBlitz3.ab3@23835>   ORI.w #$7200,D1
00033398 <AmiBlitz3.ab3@23836>    BSR.w writeword
0003339C <AmiBlitz3.ab3@23837>   MOVE.w #$C103,D1
000333A0 <AmiBlitz3.ab3@23838>    BSR.w Atokejsr
000333A6 <AmiBlitz3.ab3@23839>   CLR.w intlevel
000333AC <AmiBlitz3.ab3@23842>  CLR.w intstring
000333B2 <AmiBlitz3.ab3@23843>   MOVE.l intfin,D1
000333B6 <AmiBlitz3.ab3@23844>    BSR.w writelong
000333BC <AmiBlitz3.ab3@23845>   MOVE.l #$70004E75,D1
000333C0 <AmiBlitz3.ab3@23846>    BSR.w writelong
000333C6 <AmiBlitz3.ab3@23847>   MOVE.w dontwrite,D1
000333CA <AmiBlitz3.ab3@23848>    BNE.w JL_0_D962
000333D0 <AmiBlitz3.ab3@23849>   MOVEA.l intjmpat,A0
000333D4 <AmiBlitz3.ab3@23850>   MOVE.l destpointer(PC),(A0)
000333DA <AmiBlitz3.ab3@23853> JMP get1bytemain
000333DE <AmiBlitz3.ab3@23857>   CMP.w #-$7FF2,D0
000333E2 <AmiBlitz3.ab3@23858>    BEQ.w doendsel
000333E6 <AmiBlitz3.ab3@23859>   CMP.w #-$7F4C,D0
000333EA <AmiBlitz3.ab3@23860>    BNE.w JL_0_D97C
000333F0 <AmiBlitz3.ab3@23861> JMP doendseterr
000333F6 <AmiBlitz3.ab3@23865> JMP syntaxerr
000333FC <AmiBlitz3.ab3@23869>   TST.w dirmode
00033400 <AmiBlitz3.ab3@23870>   BNE.w JUMP_baddirerr
00033404 <AmiBlitz3.ab3@23871>   MOVE.w #$C800,D1
0003340A <AmiBlitz3.ab3@23872>   JSR Atokejsr                                            ;end
00033412 <AmiBlitz3.ab3@23873>   CMP.l #"noa7",-4(a5)
00033416 <AmiBlitz3.ab3@23874>   BNE 'l10
0003341C <AmiBlitz3.ab3@23875>   TST.w dontwrite
00033420 <AmiBlitz3.ab3@23876>   BNE 'l10
00033426 <AmiBlitz3.ab3@23877>   MOVE.l destpointer,d1
00033428 <AmiBlitz3.ab3@23878>   SUBQ.l #4,d1
0003342A <AmiBlitz3.ab3@23879>   MOVE.l a0,-(a7)
0003342C <AmiBlitz3.ab3@23880>   MOVE.l d1,a0
0003342E <AmiBlitz3.ab3@23881>   MOVE.l (a0),a0
00033434 <AmiBlitz3.ab3@23882>   MOVE.l #$60000002,(a0)+
00033438 <AmiBlitz3.ab3@23883>   MOVE.w #$588f,(a0)
0003343A <AmiBlitz3.ab3@23884>   MOVE.l (a7)+,a0
0003343C <AmiBlitz3.ab3@23887> RTS
00033442 <AmiBlitz3.ab3@23891>   TST.w dirmode                                            ;stop
00033446 <AmiBlitz3.ab3@23892>   BNE.w JUMP_baddirerr
00033448 <AmiBlitz3.ab3@23893>   MOVE.w d0,d1
0003344C <AmiBlitz3.ab3@23894>   BEQ 'l10
00033450 <AmiBlitz3.ab3@23895>   CMP.b #$3a,d0
00033454 <AmiBlitz3.ab3@23896>   BEQ 'l10
0003345A <AmiBlitz3.ab3@23897>   JSR get1bytemain
00033460 <AmiBlitz3.ab3@23900>   TST.b debugmode
00033464 <AmiBlitz3.ab3@23901>   BEQ.w newstop
00033468 <AmiBlitz3.ab3@23902>   MOVE.w #$D501,D1
0003346C <AmiBlitz3.ab3@23903> BRA.w Atokejsr
0003346E <AmiBlitz3.ab3@23907>     RTS
00033470 <AmiBlitz3.ab3@23909>   MOVE.w d1,d0
00033474 <AmiBlitz3.ab3@23910>   BEQ 'l10
00033478 <AmiBlitz3.ab3@23911>   CMP.b #$3a,d0
0003347C <AmiBlitz3.ab3@23912>   BEQ 'l10
00033480 <AmiBlitz3.ab3@23913>   SUB.b #$30,d0
00033484 <AmiBlitz3.ab3@23914>   MOVE.w #$4e40,d1
00033488 <AmiBlitz3.ab3@23915> BRA 'l11
0003348C <AmiBlitz3.ab3@23918>   MOVE.w #$4e4a,d1
00033490 <AmiBlitz3.ab3@23919> BRA writeword
00033492 <AmiBlitz3.ab3@23922>   ADD.b d0,d1
00033496 <AmiBlitz3.ab3@23923> BRA writeword
0003349C <AmiBlitz3.ab3@23927> JMP badconterr
000334A0 <AmiBlitz3.ab3@23930>   MOVE.w #$4E71,D1
000334A4 <AmiBlitz3.ab3@23931> BRA.w writeword
000334AA <AmiBlitz3.ab3@23934>   MOVEA.l firstfor,A2
000334B0 <AmiBlitz3.ab3@23935>   CLR.l firstfor
000334B6 <AmiBlitz3.ab3@23936>   MOVEA.l _execbase,A6
000334BA <AmiBlitz3.ab3@23939>   CMPA.w #$0,A2
000334BE <AmiBlitz3.ab3@23940>   BEQ.w JL_0_D9E6
000334C0 <AmiBlitz3.ab3@23941>   MOVEA.l A2,A1
000334C2 <AmiBlitz3.ab3@23942>   MOVEA.l (A1),A2
000334C4 <AmiBlitz3.ab3@23943>   MOVEQ.l #$00,D0
000334CA <AmiBlitz3.ab3@23944>   MOVE.l mempool2,a0
000334CE <AmiBlitz3.ab3@23945>   MOVE.b $10(A1),D0
000334D2 <AmiBlitz3.ab3@23946>   JSR _FreePooled(A6)                                      ;freememfor_error
000334D6 <AmiBlitz3.ab3@23947> BRA.w JL_0_D9CC
000334D8 <AmiBlitz3.ab3@23950> RTS
000334DE <AmiBlitz3.ab3@23954> JMP badpenderr
000334E4 <AmiBlitz3.ab3@23960>   MOVE.w proceduremode,D1
000334E8 <AmiBlitz3.ab3@23961>    BEQ.w JUMP_badpenderr
000334EE <AmiBlitz3.ab3@23963>   MOVE.w dontwrite,D1
000334F2 <AmiBlitz3.ab3@23964>    BNE.w JL_0_DA1A
000334F8 <AmiBlitz3.ab3@23965>   MOVEA.l firstpend,A2
000334FC <AmiBlitz3.ab3@23968>   CMPA.w #$0,A2
00033500 <AmiBlitz3.ab3@23969>    BEQ.w JL_0_DA1A
00033504 <AmiBlitz3.ab3@23970>   MOVEA.l $4(A2),A0
0003350A <AmiBlitz3.ab3@23971>   MOVE.l destpointer,(A0)
0003350C <AmiBlitz3.ab3@23972>   MOVEA.l (A2),A2
00033510 <AmiBlitz3.ab3@23973> BRA.w JL_0_DA02
00033516 <AmiBlitz3.ab3@23976>   TST.b debugmode
0003351A <AmiBlitz3.ab3@23977>    BEQ.b JL_0_DA2A
0003351C <AmiBlitz3.ab3@23978>   MOVEQ.l #$05,D1
00033522 <AmiBlitz3.ab3@23979>   JSR writetrap
00033528 <AmiBlitz3.ab3@23982>   MOVEA.l firstlocal,A2                                    ;firstlocal
0003352E <AmiBlitz3.ab3@23983>   JSR calcstatic2b                                           ;calcstatic
00033534 <AmiBlitz3.ab3@23984>   MOVEA.l currentfunction,A0
0003353A <AmiBlitz3.ab3@23985>   MOVE.l destpointer,d1
0003353E <AmiBlitz3.ab3@23986>   SUB.l $e(a0),d1
00033542 <AmiBlitz3.ab3@23987>   MOVE.l d1,isfunc+1(a0)                                   ;store function size
00033546 <AmiBlitz3.ab3@23988>   MOVE.w D4,$8(A0)                                         ;set if memalloc need
0003354C <AmiBlitz3.ab3@23989>   MOVE.l D3,locdatast
00033552 <AmiBlitz3.ab3@23990>   MOVEA.l tempvm,A1
00033558 <AmiBlitz3.ab3@23991>  CLR.b infunctioncode
0003355E <AmiBlitz3.ab3@23992>   MOVE.l firstiffstore,d1
00033564 <AmiBlitz3.ab3@23993>   CMP.l firstiff,d1
00033568 <AmiBlitz3.ab3@23994>   BNE JUMP_noenderr
0003356C <AmiBlitz3.ab3@23995>   TST.w $C(A1)                                             ;dim
00033570 <AmiBlitz3.ab3@23996>    BPL.w JL_0_DA64
00033576 <AmiBlitz3.ab3@23997>  BSET #$7,$8(A0)
0003357A <AmiBlitz3.ab3@23998>   MOVE.w #$C005,D1
0003357E <AmiBlitz3.ab3@23999>    BSR.w tokejsr2                                          ;writefreememstatement
00033582 <AmiBlitz3.ab3@24000> BRA.w JL_0_DA6C
00033588 <AmiBlitz3.ab3@24003> JMP noenderr
00033590 <AmiBlitz3.ab3@24006>   MOVE.w memlibstat,$C(A1)
00033596 <AmiBlitz3.ab3@24009>   MOVEA.l currentfunction,A0
0003359A <AmiBlitz3.ab3@24010>   MOVE.l $E(A0),-(A7)
000335A2 <AmiBlitz3.ab3@24011>   MOVE.w locvaroff,$6(A0)
000335A8 <AmiBlitz3.ab3@24012>   BCLR #$1,$7(A0)
000335AE <AmiBlitz3.ab3@24013>   BCLR #$0,$7(A0)
000335B4 <AmiBlitz3.ab3@24014>   CMPI.b #$7,$5(A0)
000335B8 <AmiBlitz3.ab3@24015>    BNE.w JL_0_DA9E
000335BE <AmiBlitz3.ab3@24016>   MOVE.w getstlen,D1
000335C2 <AmiBlitz3.ab3@24017>    BSR.w writeword
000335C6 <AmiBlitz3.ab3@24020>   TST.w $6(A0)
000335CA <AmiBlitz3.ab3@24021>    BEQ.w JL_0_DAB8
000335CE <AmiBlitz3.ab3@24022>   MOVE.w #$FC7B,D1
000335D4 <AmiBlitz3.ab3@24023>    JSR uselib
000335DA <AmiBlitz3.ab3@24024>   MOVE.w unlinka4,D1
000335E0 <AmiBlitz3.ab3@24025>    JSR writeword
000335E6 <AmiBlitz3.ab3@24028>   MOVEA.l currentfunction,A0
000335E8 <AmiBlitz3.ab3@24029>   MOVEQ.l #$00,D1
000335EC <AmiBlitz3.ab3@24030>   MOVE.b $4(A0),D1
000335EE <AmiBlitz3.ab3@24031>   LSR.w #4,D1
000335F2 <AmiBlitz3.ab3@24032>    BEQ.w JL_0_DB24
000335F4 <AmiBlitz3.ab3@24034>      LSL.w #1,d1
000335F8 <AmiBlitz3.ab3@24036>   CMP.w #$1,D1
000335FC <AmiBlitz3.ab3@24037>    BNE.w JL_0_DAE0
00033602 <AmiBlitz3.ab3@24038>   MOVE.w fix1,D1
00033608 <AmiBlitz3.ab3@24039>    JSR writeword
0003360C <AmiBlitz3.ab3@24040> BRA.w JL_0_DB24
0003360E <AmiBlitz3.ab3@24043>   LSL.w #2,D1
00033610 <AmiBlitz3.ab3@24044>   MOVE.w D1,-(A7)
00033616 <AmiBlitz3.ab3@24045>   MOVE.w D1,moverts+2
0003361C <AmiBlitz3.ab3@24046>   MOVE.l moverts,D1
00033622 <AmiBlitz3.ab3@24047>    JSR writelong
00033624 <AmiBlitz3.ab3@24048>   MOVE.w (A7)+,D1
00033628 <AmiBlitz3.ab3@24049>   CMP.w #$8,D1
0003362C <AmiBlitz3.ab3@24050>    BHI.w JL_0_DB14
00033630 <AmiBlitz3.ab3@24051>   ANDI.w #$7,D1
00033632 <AmiBlitz3.ab3@24052>   LSL.w #8,D1
00033634 <AmiBlitz3.ab3@24053>   LSL.w #1,D1
0003363A <AmiBlitz3.ab3@24054>   OR.w fixq,D1
00033640 <AmiBlitz3.ab3@24055>    JSR writeword
00033644 <AmiBlitz3.ab3@24056> BRA.w JL_0_DB24
0003364A <AmiBlitz3.ab3@24060>    MOVE.w D1,fixstack+2
00033650 <AmiBlitz3.ab3@24061>   MOVE.l fixstack,D1
00033656 <AmiBlitz3.ab3@24062>    JSR writelong
0003365A <AmiBlitz3.ab3@24065>    BSR.w JL_0_D2CA
0003365E <AmiBlitz3.ab3@24066>    BSR.w JL_0_D4F8
00033660 <AmiBlitz3.ab3@24067>   MOVEA.l (A7)+,A0
00033666 <AmiBlitz3.ab3@24068>   MOVE.w dontwrite,D1
0003366A <AmiBlitz3.ab3@24069>    BNE.w JL_0_DB3E
00033670 <AmiBlitz3.ab3@24070>   MOVE.l destpointer,-(A0)
00033676 <AmiBlitz3.ab3@24073>   CLR.w proceduremode
0003367C <AmiBlitz3.ab3@24074>   CLR.l currentfunction
00033682 <AmiBlitz3.ab3@24075>   CLR.w procnum
00033686 <AmiBlitz3.ab3@24076>    BSR.w JL_0_DB5C
0003368C <AmiBlitz3.ab3@24077>    JSR freepends
00033692 <AmiBlitz3.ab3@24078> JMP get1bytemain
00033694 <AmiBlitz3.ab3@24081>   MOVEQ.l #$0C,D0
00033696 <AmiBlitz3.ab3@24082>   MOVEQ.l #$01,D1
0003369C <AmiBlitz3.ab3@24083>   MOVEA.l _execbase,A6
000336A2 <AmiBlitz3.ab3@24085>   MOVE.l mempool,a0
000336A6 <AmiBlitz3.ab3@24086>   JSR _AllocPooled(a6)
000336A8 <AmiBlitz3.ab3@24087>   MOVEA.l D0,A0
000336AE <AmiBlitz3.ab3@24088>   MOVE.l alllocals,(A0)
000336B4 <AmiBlitz3.ab3@24089>   MOVE.l A0,alllocals
000336BA <AmiBlitz3.ab3@24090>   MOVE.l firstlocal,D0
000336C0 <AmiBlitz3.ab3@24091>   CLR.l firstlocal
000336C4 <AmiBlitz3.ab3@24092>   MOVE.l D0,$4(A0)
000336CA <AmiBlitz3.ab3@24093>   MOVE.l firstglob,D1
000336D0 <AmiBlitz3.ab3@24094>   CLR.l firstglob
000336D4 <AmiBlitz3.ab3@24095>   MOVE.l D1,$8(A0)
000336DA <AmiBlitz3.ab3@24096>   TST.b debugmode
000336DE <AmiBlitz3.ab3@24097>    BEQ.b JL_0_DBB0
000336E4 <AmiBlitz3.ab3@24098>   TST.w dontwrite
000336E8 <AmiBlitz3.ab3@24099>    BNE.b JL_0_DBB0
000336EC <AmiBlitz3.ab3@24100>   MOVEA.l proclocals(PC),A0
000336EE <AmiBlitz3.ab3@24101>   MOVE.l D0,(A0)+
000336F0 <AmiBlitz3.ab3@24102>   MOVE.l D1,(A0)
000336F2 <AmiBlitz3.ab3@24105> RTS
000336F8 <AmiBlitz3.ab3@24108> JMP baddirerr
000336FE <AmiBlitz3.ab3@24112>   TST.w dirmode
00033702 <AmiBlitz3.ab3@24113>    BNE.w JUMP_baddirerr
00033708 <AmiBlitz3.ab3@24114>   MOVE.l firstfor,D1
0003370C <AmiBlitz3.ab3@24115>    BEQ.w JUMP_noforerr
00033712 <AmiBlitz3.ab3@24116>   JSR reget
00033716 <AmiBlitz3.ab3@24117>    BEQ.w JL_0_DC18
0003371A <AmiBlitz3.ab3@24120>   BSR.w getparameter
0003371E <AmiBlitz3.ab3@24121>   MOVEA.l firstfor(PC),A2
00033720 <AmiBlitz3.ab3@24122>   MOVEQ.l #$00,D1
00033724 <AmiBlitz3.ab3@24123>   MOVE.b $10(A2),D1
00033728 <AmiBlitz3.ab3@24124>   SUBI.w #$12,D1
0003372A <AmiBlitz3.ab3@24125>   CMP.w D1,D2
0003372E <AmiBlitz3.ab3@24126>    BNE.w JUMP_noforerr
00033732 <AmiBlitz3.ab3@24127>   LEA ptr_parameterstore(PC),A0
00033736 <AmiBlitz3.ab3@24128>   LEA $11(A2),A1
00033738 <AmiBlitz3.ab3@24129>   SUBQ.w #1,D2
0003373A <AmiBlitz3.ab3@24132>     CMPM.b (A0)+,(A1)+
0003373E <AmiBlitz3.ab3@24133>     BNE.w JUMP_noforerr
00033742 <AmiBlitz3.ab3@24134>   DBF D2,JL_0_DBF0
00033746 <AmiBlitz3.ab3@24136>    BSR.w JL_0_DC1A
0003374C <AmiBlitz3.ab3@24137>    JSR reget
00033750 <AmiBlitz3.ab3@24138>    BEQ.w JL_0_DC16
00033754 <AmiBlitz3.ab3@24139>   CMP.w #$2C,D0
00033758 <AmiBlitz3.ab3@24140>    BNE.w JUMP_syntaxerr
0003375E <AmiBlitz3.ab3@24141>    JSR get1bytemain
00033762 <AmiBlitz3.ab3@24142> BRA.w JL_0_DBCE
00033768 <AmiBlitz3.ab3@24145> JMP noforerr
0003376A <AmiBlitz3.ab3@24148> RTS
0003376E <AmiBlitz3.ab3@24152>   MOVE.l 8(a7),a2
00033772 <AmiBlitz3.ab3@24153>   Dc.l  $f2124400                                          ;fmove.s (a2),fp0
00033776 <AmiBlitz3.ab3@24154>   Dc.l  $F2174422                                          ;fadd.s (a7),fp0
0003377A <AmiBlitz3.ab3@24155>   Dc.l  $F2126400                                          ;fmove.s fp0,(a2)
0003377C <AmiBlitz3.ab3@24159>   MOVEA.l D1,A2
00033782 <AmiBlitz3.ab3@24162>   JSR popnext                                           ;error checking for next.
00033786 <AmiBlitz3.ab3@24163>   MOVE.w $C(A2),D0
0003378C <AmiBlitz3.ab3@24164>   LEA nextb,A0
00033792 <AmiBlitz3.ab3@24165>   LEA nextbf,A1
00033796 <AmiBlitz3.ab3@24166>   CMP.w #$1,D0
0003379A <AmiBlitz3.ab3@24167>    BEQ.w JL_0_DC74
000337A0 <AmiBlitz3.ab3@24168>   LEA nextw,A0
000337A6 <AmiBlitz3.ab3@24169>   LEA nextwf,A1
000337AA <AmiBlitz3.ab3@24170>   CMP.w #$2,D0
000337AE <AmiBlitz3.ab3@24171>    BEQ.w JL_0_DC74
000337B4 <AmiBlitz3.ab3@24172>   LEA nextl,A0
000337BA <AmiBlitz3.ab3@24173>   LEA nextlf,A1
000337BE <AmiBlitz3.ab3@24174>   CMP.w #$5,D0
000337C2 <AmiBlitz3.ab3@24175>    BNE.w JL_0_DC74
000337C8 <AmiBlitz3.ab3@24176>    TST.b fpu
000337CC <AmiBlitz3.ab3@24177>    BEQ 'old
000337D2 <AmiBlitz3.ab3@24178>    LEA fpu2dats,a0                                         ;fpu next code
000337D8 <AmiBlitz3.ab3@24179>    LEA fpu2date,a1
000337DC <AmiBlitz3.ab3@24180> BRA JL_0_DC74
000337E0 <AmiBlitz3.ab3@24183>   MOVE.w #$C900,D1
000337E4 <AmiBlitz3.ab3@24184>    BSR.w Atokejsr
000337EA <AmiBlitz3.ab3@24185>   LEA nextf,A0
000337F0 <AmiBlitz3.ab3@24186>   LEA nextff,A1
000337F6 <AmiBlitz3.ab3@24189>   JSR pokecode
000337FC <AmiBlitz3.ab3@24190>     TST.b fast                                             ;fast for next deactivate
00033800 <AmiBlitz3.ab3@24191> BRA 'l1
00033806 <AmiBlitz3.ab3@24193>     TST.b onestep
0003380A <AmiBlitz3.ab3@24194>     BEQ 'l1
00033810 <AmiBlitz3.ab3@24195>     CLR.b onestep
00033816 <AmiBlitz3.ab3@24196>     SUBQ.l #4,destpointer
0003381A <AmiBlitz3.ab3@24197>     MOVE.w #$5292,d1
00033820 <AmiBlitz3.ab3@24198>     JSR writeword
00033824 <AmiBlitz3.ab3@24201>   MOVE.l JL_0_DCF4(PC),D1
0003382A <AmiBlitz3.ab3@24202>    JSR writelong
00033830 <AmiBlitz3.ab3@24203>   MOVEA.l firstfor,A2
00033836 <AmiBlitz3.ab3@24204>   MOVE.l (A2),firstfor
0003383A <AmiBlitz3.ab3@24205>   MOVEA.l $8(A2),A0
00033840 <AmiBlitz3.ab3@24206>   MOVEA.l destpointer,A1
00033842 <AmiBlitz3.ab3@24207>   MOVE.l A1,D1
00033844 <AmiBlitz3.ab3@24208>   SUB.l A0,D1
00033846 <AmiBlitz3.ab3@24209>   ADDQ.l #2,D1
0003384C <AmiBlitz3.ab3@24210>   CMP.l #MinWordSgnd,D1
00033850 <AmiBlitz3.ab3@24211>    BCC.w JUMP_bigforerr
00033856 <AmiBlitz3.ab3@24212>   TST.w dontwrite
0003385A <AmiBlitz3.ab3@24213>    BNE.w JL_0_DCB4
0003385E <AmiBlitz3.ab3@24214>   MOVE.w D1,-$2(A0)
00033860 <AmiBlitz3.ab3@24217>   MOVE.l A1,D1
00033864 <AmiBlitz3.ab3@24218>   SUB.l $4(A2),D1
00033866 <AmiBlitz3.ab3@24219>   SUBQ.l #6,D1
0003386C <AmiBlitz3.ab3@24220>   CMP.l #MinWordSgnd,D1
00033870 <AmiBlitz3.ab3@24221>    BCC.w JUMP_bigforerr
00033876 <AmiBlitz3.ab3@24222>   TST.w dontwrite
0003387A <AmiBlitz3.ab3@24223>    BNE.w JL_0_DCD6
0003387C <AmiBlitz3.ab3@24224>   NEG.w D1
00033880 <AmiBlitz3.ab3@24225>   MOVE.w D1,-$2(A1)
00033886 <AmiBlitz3.ab3@24228>   JSR popnext3
0003388C <AmiBlitz3.ab3@24229>   MOVEA.l _execbase,A6
0003388E <AmiBlitz3.ab3@24230>   MOVEA.l A2,A1
00033890 <AmiBlitz3.ab3@24231>   MOVEQ.l #$00,D0
00033894 <AmiBlitz3.ab3@24232>   MOVE.b $10(A1),D0
0003389A <AmiBlitz3.ab3@24233>   MOVE.l mempool2,a0
0003389E <AmiBlitz3.ab3@24234>   JSR _FreePooled(A6)
000338A4 <AmiBlitz3.ab3@24235> JMP reget
000338AA <AmiBlitz3.ab3@24238> JMP notallowd
000338B0 <AmiBlitz3.ab3@24241> JMP bigforerr
000338B4 <AmiBlitz3.ab3@24248>   MOVE.w #$664F,-(A7)
000338B8 <AmiBlitz3.ab3@24251> BRA.w JL_0_DCF4
000338BE <AmiBlitz3.ab3@24254> JMP error_dublicate_for
000338C2 <AmiBlitz3.ab3@24257> forlineat:   Ds.l 1
000338C4 <AmiBlitz3.ab3@24258> fortemp:     Ds.w 1
000338CA <AmiBlitz3.ab3@24265>   CLR.l fp0addr
000338D0 <AmiBlitz3.ab3@24266>   TST.w dirmode
000338D4 <AmiBlitz3.ab3@24267>    BNE.w JUMP_baddirerr
000338DE <AmiBlitz3.ab3@24268>   MOVE.l linenumat,forlineat
000338E4 <AmiBlitz3.ab3@24272>   MOVE.l A5,letstart
000338E8 <AmiBlitz3.ab3@24273>   BSR.w getparameter
000338EE <AmiBlitz3.ab3@24274>   MOVE.w D2,fortemp
000338F4 <AmiBlitz3.ab3@24275>   JSR findfor
000338F8 <AmiBlitz3.ab3@24276>    BEQ.w JUMP_error_dublicate_for
000338FE <AmiBlitz3.ab3@24277>   LEA firstfor,A2
00033904 <AmiBlitz3.ab3@24278>   JSR addhere2
00033906 <AmiBlitz3.ab3@24279>   MOVE.l A2,-(A7)
0003390C <AmiBlitz3.ab3@24280>   TST.b debugmode
00033910 <AmiBlitz3.ab3@24281>    BEQ.b JL_0_DD4C
00033916 <AmiBlitz3.ab3@24282>   JSR chkstak
0003391C <AmiBlitz3.ab3@24283>   MOVE.l AJL_0_DCF0,D1
00033922 <AmiBlitz3.ab3@24284>   JSR  writelong
00033926 <AmiBlitz3.ab3@24287>   MOVE.w fortemp(PC),D2
0003392E <AmiBlitz3.ab3@24288>   MOVE.b #1,formode
00033932 <AmiBlitz3.ab3@24289>   BSR.w AJL_0_DEA6                                         ;for get 1. value
00033938 <AmiBlitz3.ab3@24290>   CLR.b formode
0003393C <AmiBlitz3.ab3@24291>   CMP.w #-$7FE8,D0
00033940 <AmiBlitz3.ab3@24292>    BNE.w JUMP_syntaxerr
00033946 <AmiBlitz3.ab3@24293>   MOVE.w commode,D1
0003394A <AmiBlitz3.ab3@24294>    BNE.w JUMP_syntaxerr
0003394E <AmiBlitz3.ab3@24295>   CMP.b #$6,D2
00033952 <AmiBlitz3.ab3@24296>    BCC.w JUMP_badforerr
00033956 <AmiBlitz3.ab3@24297>   BTST #$F,D2
0003395A <AmiBlitz3.ab3@24298>    BNE.w JL_0_DD86
00033960 <AmiBlitz3.ab3@24299>   MOVE.w leaamp,D1
00033966 <AmiBlitz3.ab3@24300>   JSR pokewda5s
00033968 <AmiBlitz3.ab3@24301>   MOVE.w D3,D1
0003396E <AmiBlitz3.ab3@24302>   JSR  writeword
00033974 <AmiBlitz3.ab3@24305>   MOVE.w pushindex,D1
0003397A <AmiBlitz3.ab3@24306>   JSR  writeword
0003397E <AmiBlitz3.ab3@24307>   ANDI.w #$FF,D2
00033980 <AmiBlitz3.ab3@24309>   MOVEA.l (A7),A1
00033984 <AmiBlitz3.ab3@24310>   MOVE.w D2,$C(A1)
00033986 <AmiBlitz3.ab3@24311>   MOVE.w D2,-(A7)
0003398A <AmiBlitz3.ab3@24312>    BSR.w eval
00033990 <AmiBlitz3.ab3@24313>    CLR.b onestep
00033994 <AmiBlitz3.ab3@24314>    CMP.w #$8019,d0
00033998 <AmiBlitz3.ab3@24315>    BEQ 'l1
000339A0 <AmiBlitz3.ab3@24316>    MOVE.b #1,onestep
000339A2 <AmiBlitz3.ab3@24319>   MOVE.w (A7),D2
000339A8 <AmiBlitz3.ab3@24320>   MOVE.w pushd0l,D1
000339AC <AmiBlitz3.ab3@24321>   CMP.w #$3,D2
000339B0 <AmiBlitz3.ab3@24322>    BCC.w JL_0_DDB6
000339B6 <AmiBlitz3.ab3@24323>   MOVE.w pushd0wd,D1
000339B8 <AmiBlitz3.ab3@24326>    MOVE.w D1,-(A7)
000339BE <AmiBlitz3.ab3@24327>    TST.b fpu
000339C2 <AmiBlitz3.ab3@24328>    BEQ 'old
000339C6 <AmiBlitz3.ab3@24329>    CMP.b #5,d2
000339CA <AmiBlitz3.ab3@24330>    BNE 'old
000339D0 <AmiBlitz3.ab3@24331>    MOVE.l #$f2276400,d1
000339D6 <AmiBlitz3.ab3@24333>    JSR writelong
000339DA <AmiBlitz3.ab3@24334> BRA 'weit
000339E0 <AmiBlitz3.ab3@24337>    JSR  writeword                                          ;fpu for end value
000339E4 <AmiBlitz3.ab3@24340>   CMP.w #-$7FE7,D0
000339E8 <AmiBlitz3.ab3@24341>    BNE.w JL_0_DDCC
000339EC <AmiBlitz3.ab3@24342>    BSR.w eval
000339F2 <AmiBlitz3.ab3@24343>    TST.b fpu
000339F6 <AmiBlitz3.ab3@24344>    BEQ JL_0_DE0C
000339FA <AmiBlitz3.ab3@24345>    CMP.b #5,d2
000339FE <AmiBlitz3.ab3@24346>    BNE JL_0_DE0C
00033A04 <AmiBlitz3.ab3@24347>    MOVE.l #$f2276400,d1                                    ;write step <> 1
00033A0A <AmiBlitz3.ab3@24349>   JSR writelong
00033A0C <AmiBlitz3.ab3@24352>    MOVE.w (a7)+,d1
00033A10 <AmiBlitz3.ab3@24353> BRA fpur
00033A14 <AmiBlitz3.ab3@24356>   CMP.w #$4,D2
00033A18 <AmiBlitz3.ab3@24357>    BCC.w JL_0_DDE0
00033A1C <AmiBlitz3.ab3@24358>   MOVE.w #$7001,D1
00033A22 <AmiBlitz3.ab3@24359>   JSR writeword
00033A26 <AmiBlitz3.ab3@24360> BRA.w JL_0_DE0C
00033A2C <AmiBlitz3.ab3@24363> JMP badforerr
00033A30 <AmiBlitz3.ab3@24366>   BNE.w JL_0_DDFA
00033A34 <AmiBlitz3.ab3@24367>   MOVE.w #$7001,D1
00033A3A <AmiBlitz3.ab3@24368>   JSR writeword
00033A40 <AmiBlitz3.ab3@24369>   MOVE.w swapd0,D1
00033A46 <AmiBlitz3.ab3@24370>   JSR writeword
00033A4A <AmiBlitz3.ab3@24371> BRA.w JL_0_DE0C
00033A50 <AmiBlitz3.ab3@24374>   TST.b fpu
00033A54 <AmiBlitz3.ab3@24375>    BEQ 'old
00033A58 <AmiBlitz3.ab3@24376>   CMP.b #5,d2
00033A5C <AmiBlitz3.ab3@24377>    BNE 'old
00033A62 <AmiBlitz3.ab3@24378>   MOVE.l #$f23c5000,d1
00033A68 <AmiBlitz3.ab3@24379>   JSR writelong
00033A6C <AmiBlitz3.ab3@24380>   MOVE.w #$1,d1
00033A72 <AmiBlitz3.ab3@24381>   JSR writeword
00033A78 <AmiBlitz3.ab3@24382>   MOVE.l #$f2276400,d1
00033A7E <AmiBlitz3.ab3@24383>   JSR writelong
00033A80 <AmiBlitz3.ab3@24384>   MOVE.w (a7)+,d1
00033A84 <AmiBlitz3.ab3@24385> BRA fpur
00033A88 <AmiBlitz3.ab3@24388>   MOVE.w #$203C,D1                                         ;write step 1
00033A8E <AmiBlitz3.ab3@24389>   JSR writeword
00033A94 <AmiBlitz3.ab3@24390>   MOVE.l #$80000041,D1                                     ;ffp '1'
00033A9A <AmiBlitz3.ab3@24391>   JSR writelong
00033A9C <AmiBlitz3.ab3@24394>   MOVE.w (A7)+,D1
00033AA2 <AmiBlitz3.ab3@24395>   JSR writeword                                            ;push step on stack
00033AA4 <AmiBlitz3.ab3@24398>   MOVE.w (A7)+,D2
00033AA6 <AmiBlitz3.ab3@24399>   MOVEA.l (A7),A1
00033AAE <AmiBlitz3.ab3@24400>   MOVE.l destpointer,$4(A1)
00033AB4 <AmiBlitz3.ab3@24401>   LEA forcompb,A0
00033ABA <AmiBlitz3.ab3@24402>   LEA forcompbf,A1
00033ABE <AmiBlitz3.ab3@24403>   CMP.w #$1,D2
00033AC2 <AmiBlitz3.ab3@24404>    BEQ.w JL_0_DE7E
00033AC8 <AmiBlitz3.ab3@24405>   LEA forcompw,A0
00033ACE <AmiBlitz3.ab3@24406>   LEA forcompwf,A1
00033AD2 <AmiBlitz3.ab3@24407>   CMP.w #$2,D2
00033AD6 <AmiBlitz3.ab3@24408>    BEQ.w JL_0_DE7E
00033ADC <AmiBlitz3.ab3@24409>   LEA forcompl,A0
00033AE2 <AmiBlitz3.ab3@24410>   LEA forcomplf,A1
00033AE6 <AmiBlitz3.ab3@24411>   CMP.w #$5,D2
00033AEA <AmiBlitz3.ab3@24412>    BNE.w JL_0_DE7E
00033AF0 <AmiBlitz3.ab3@24413>   TST.b fpu
00033AF4 <AmiBlitz3.ab3@24414>    BEQ 'old
00033AFA <AmiBlitz3.ab3@24415>   LEA fpu_start,a0
00033B00 <AmiBlitz3.ab3@24416>   LEA fpu_end,a1
00033B06 <AmiBlitz3.ab3@24417>   JSR pokecode
00033B0A <AmiBlitz3.ab3@24418> BRA fpu3
00033B10 <AmiBlitz3.ab3@24421>   LEA forcompf,A0                                         ;
00033B16 <AmiBlitz3.ab3@24422>   LEA forcompff,A1
00033B1C <AmiBlitz3.ab3@24423>   JSR pokecode
00033B20 <AmiBlitz3.ab3@24424>   MOVE.w #$C900,D1
00033B24 <AmiBlitz3.ab3@24425>   BSR.w Atokejsr
00033B2A <AmiBlitz3.ab3@24426>   LEA forcompf2,A0
00033B30 <AmiBlitz3.ab3@24427>   LEA forcompf2f,A1
00033B36 <AmiBlitz3.ab3@24430>   JSR pokecode
00033B3C <AmiBlitz3.ab3@24431>   TST.b fast                                               ;fast for next
00033B40 <AmiBlitz3.ab3@24432>    BEQ 's1
00033B44 <AmiBlitz3.ab3@24433>   CMP.w #3,d2
00033B48 <AmiBlitz3.ab3@24434>    BNE 's1
00033B4E <AmiBlitz3.ab3@24435>   TST.b onestep
00033B52 <AmiBlitz3.ab3@24436>    BEQ 's1
00033B5C <AmiBlitz3.ab3@24437>   SUB.l #10,destpointer
00033B60 <AmiBlitz3.ab3@24438>   MOVE.w #$b081,d1
00033B66 <AmiBlitz3.ab3@24439>   JSR writeword
00033B6A <AmiBlitz3.ab3@24443>   MOVE.l thebgt(PC),D1
00033B70 <AmiBlitz3.ab3@24444>   JSR writelong
00033B72 <AmiBlitz3.ab3@24447>   MOVEA.l (A7)+,A1
00033B7A <AmiBlitz3.ab3@24448>   MOVE.l destpointer,$8(A1)
00033B80 <AmiBlitz3.ab3@24449> JMP reget
00033B84 <AmiBlitz3.ab3@24452>   MOVEA.l 8(a7),a2
00033B88 <AmiBlitz3.ab3@24453>   Dc.l $f2124400                                           ;fmove.s (a2),fp0
00033B8E <AmiBlitz3.ab3@24454>   fmove.s 4(a7),fp1
00033B92 <AmiBlitz3.ab3@24455>   BTST.b #7,(a7)
00033B96 <AmiBlitz3.ab3@24456>   BNE 'negi
00033B9A <AmiBlitz3.ab3@24457>   fcmp.x fp1,fp0
00033B9E <AmiBlitz3.ab3@24458> BRA 'negi2
00033BA2 <AmiBlitz3.ab3@24461>   fcmp.x fp0,fp1
00033BA6 <AmiBlitz3.ab3@24464>   Dc.l $f2920000                                           ;fbgt.w
00033BAA <AmiBlitz3.ab3@24468>   BGT.w thebgt
00033BB0 <AmiBlitz3.ab3@24471>   MOVE.l A5,letstart
00033BB6 <AmiBlitz3.ab3@24472>   JSR getparameter
00033BC0 <AmiBlitz3.ab3@24478>   MOVE.l destpointer,pushpc
00033BCA <AmiBlitz3.ab3@24479>   MOVE.l hunkoffsetbase,pushoff
00033BD0 <AmiBlitz3.ab3@24480>   CLR.l rightsidetype
00033BD6 <AmiBlitz3.ab3@24481>   CLR.w rightsideflagmask
00033BDE <AmiBlitz3.ab3@24482>   MOVE.w #$0001,regnum
00033BE4 <AmiBlitz3.ab3@24483>   JSR JL_0_8E3C
00033BEA <AmiBlitz3.ab3@24484>   JSR calcvar
00033BF0 <AmiBlitz3.ab3@24485>   TST.b formode
00033BF4 <AmiBlitz3.ab3@24486>   BEQ 'lf1
00033BFA <AmiBlitz3.ab3@24487>   CMP.l #newtype_double,A2
00033BFE <AmiBlitz3.ab3@24488>   BEQ JUMP_notallowd
00033C04 <AmiBlitz3.ab3@24489>   MOVE.l a2,currtype
00033C0A <AmiBlitz3.ab3@24492>   CLR.w startoffsetmore
00033C0E <AmiBlitz3.ab3@24493>   CMP.w #$3d,d0
00033C12 <AmiBlitz3.ab3@24494>   BNE 'l1a
00033C16 <AmiBlitz3.ab3@24495>   BTST #15,d2
00033C1A <AmiBlitz3.ab3@24496>   BEQ 'l1a
00033C1E <AmiBlitz3.ab3@24497>   CMP.b #1,d2
00033C22 <AmiBlitz3.ab3@24498>   BNE 'l1a
00033C2C <AmiBlitz3.ab3@24499>   MOVE.w leaa0a0+2,startoffsetmore
00033C32 <AmiBlitz3.ab3@24502>   CLR.w regnum
00033C36 <AmiBlitz3.ab3@24503>   BSR.w JL_0_B5D2
00033C3C <AmiBlitz3.ab3@24504>   CLR.w commode
00033C42 <AmiBlitz3.ab3@24505>   CLR.w stackcorrect
00033C48 <AmiBlitz3.ab3@24506>   CLR.w pcodd
00033C4E <AmiBlitz3.ab3@24507>   MOVE.w startoffsetmore,d1
00033C52 <AmiBlitz3.ab3@24508>   BTST #0,d1
00033C56 <AmiBlitz3.ab3@24509>   BEQ 'l2a
00033C5E <AmiBlitz3.ab3@24510>   MOVE.w #1,pcodd
00033C62 <AmiBlitz3.ab3@24513>   CMP.w #$3D,D0                                            ;=
00033C66 <AmiBlitz3.ab3@24514>   BEQ.w JL_0_DEE0
00033C68 <AmiBlitz3.ab3@24517>   MOVE.b (a5)+,d1
00033C6C <AmiBlitz3.ab3@24518>   BEQ 'l10
00033C70 <AmiBlitz3.ab3@24519>   CMP.b #":",d1
00033C74 <AmiBlitz3.ab3@24520>   BEQ 'l10
00033C78 <AmiBlitz3.ab3@24521>   CMP.b #";",d1
00033C7C <AmiBlitz3.ab3@24522>   BEQ 'l10
00033C80 <AmiBlitz3.ab3@24523>   CMP.b #"0",d1
00033C84 <AmiBlitz3.ab3@24524>   BLT 'l11
00033C88 <AmiBlitz3.ab3@24525>   CMP.b #"9",d1
00033C8C <AmiBlitz3.ab3@24526>   BGT 'l11
00033C90 <AmiBlitz3.ab3@24527> BRA.s 'l1
00033C98 <AmiBlitz3.ab3@24530>   MOVE.b #1,quickadd
00033C9E <AmiBlitz3.ab3@24533>   MOVEA.l letstart,A5
00033CA0 <AmiBlitz3.ab3@24534>   SUBQ.w #1,A5
00033CA4 <AmiBlitz3.ab3@24537>   CMP.b #$7,D2
00033CA8 <AmiBlitz3.ab3@24538>    BNE.w JL_0_DF8A
00033CAC <AmiBlitz3.ab3@24544>   MOVEM.w D2-D3,-(A7)
00033CB2 <AmiBlitz3.ab3@24545>   MOVE.l lastoffset_org,-(A7)
00033CB8 <AmiBlitz3.ab3@24546>   MOVE.w varmode,-(A7)
00033CC2 <AmiBlitz3.ab3@24548>    MOVE.l #forthstack,forthsp
00033CCC <AmiBlitz3.ab3@24549>    MOVE.l #precstack,precsp
00033CD2 <AmiBlitz3.ab3@24550>    CLR.w regnum
00033CD8 <AmiBlitz3.ab3@24551>    CLR.w nonew
00033CDE <AmiBlitz3.ab3@24552>    CLR.w sbasegot
00033CE8 <AmiBlitz3.ab3@24553>    MOVE.w varcodelen,oldvcodelen
00033CEE <AmiBlitz3.ab3@24554>    CLR.w varcodelen
00033CF6 <AmiBlitz3.ab3@24555>    MOVE.w #$FFFF,lasta6
00033CF8 <AmiBlitz3.ab3@24558>   MOVEQ.l #$07,D2
00033CFC <AmiBlitz3.ab3@24559>    BSR.w eval
00033D02 <AmiBlitz3.ab3@24560>   MOVE.w (A7)+,varmode
00033D08 <AmiBlitz3.ab3@24561>   MOVE.l (A7)+,lastoffset_org
00033D0E <AmiBlitz3.ab3@24562>   MOVE.w moved0a3,D1
00033D14 <AmiBlitz3.ab3@24563>    JSR writeword
00033D1A <AmiBlitz3.ab3@24564>   MOVE.w commode,D1
00033D1E <AmiBlitz3.ab3@24565>    BEQ.w JL_0_DF38
00033D24 <AmiBlitz3.ab3@24566>   LEA pulla2st,A0
00033D2A <AmiBlitz3.ab3@24567>   LEA pulla2stf,A1
00033D30 <AmiBlitz3.ab3@24568>    JSR pokecode
00033D34 <AmiBlitz3.ab3@24569> BRA.w JL_0_DF3C
00033D38 <AmiBlitz3.ab3@24572>   BSR.w JL_0_B63C
00033D3C <AmiBlitz3.ab3@24575>   MOVEM.w (A7)+,D2-D3
00033D40 <AmiBlitz3.ab3@24576>   BTST #$F,D2
00033D44 <AmiBlitz3.ab3@24577>   BNE.w JL_0_DF58
00033D4A <AmiBlitz3.ab3@24578>     MOVE.w D3,leaa5d3a2+2
00033D50 <AmiBlitz3.ab3@24579>     MOVE.l leaa5d3a2,D1
00033D56 <AmiBlitz3.ab3@24580>     JSR pokela5s
00033D5A <AmiBlitz3.ab3@24583>   MOVE.w #$FE6F,D1
00033D60 <AmiBlitz3.ab3@24584>   JSR uselib
00033D66 <AmiBlitz3.ab3@24585>   MOVE.l #$C700,D1
00033D6C <AmiBlitz3.ab3@24586>   MOVE.l d1,lastinstruction
00033D72 <AmiBlitz3.ab3@24587>   MOVE.w varmode,D2
00033D76 <AmiBlitz3.ab3@24588>   BNE.w JL_0_DF70
00033D78 <AmiBlitz3.ab3@24589>     ADDQ.w #1,D1
00033D7C <AmiBlitz3.ab3@24592>   BSR.w Atokejsr
00033D80 <AmiBlitz3.ab3@24593>   CMP.w #$2C,D0
00033D84 <AmiBlitz3.ab3@24594>   BNE.w JL_0_E0C6
00033D8A <AmiBlitz3.ab3@24596>   MOVE.w addq4a2,D1
00033D90 <AmiBlitz3.ab3@24597>   JSR writeword
00033D94 <AmiBlitz3.ab3@24598> BRA.w JL_0_E018
00033D9A <AmiBlitz3.ab3@24601> JMP error4char
00033DA0 <AmiBlitz3.ab3@24604> JMP error_convert_types
00033DA4 <AmiBlitz3.ab3@24608>    BTST #$E,D2
00033DA8 <AmiBlitz3.ab3@24609>    BNE.w JL_0_DF9C
00033DAA <AmiBlitz3.ab3@24610>   TST.b D2
00033DAE <AmiBlitz3.ab3@24611>    BEQ.w JUMP_noleterr
00033DB4 <AmiBlitz3.ab3@24612>    TST.b newsyntax
00033DB8 <AmiBlitz3.ab3@24613>    BEQ JL_0_DFA0
00033DBC <AmiBlitz3.ab3@24616>    CMP.w #$4022,(a5)
00033DC0 <AmiBlitz3.ab3@24617>    BNE JL_0_DFA0
00033DC6 <AmiBlitz3.ab3@24618>    CMP.l #3,d2
00033DCA <AmiBlitz3.ab3@24619>    BNE  JUMP_error_convert_types
00033DCC <AmiBlitz3.ab3@24620>    ADDQ #2,a5
00033DCE <AmiBlitz3.ab3@24621>    MOVEQ #0,d0
00033DD0 <AmiBlitz3.ab3@24622>    MOVE.b (a5)+,d0
00033DD4 <AmiBlitz3.ab3@24623>    BEQ JL_0_DFA0
00033DD8 <AmiBlitz3.ab3@24624>    CMP.b #$22,d0
00033DDC <AmiBlitz3.ab3@24625>    BNE 'l1
00033DE0 <AmiBlitz3.ab3@24626>    MOVE.b #0,d0
00033DE4 <AmiBlitz3.ab3@24627> BRA 'do
00033DE6 <AmiBlitz3.ab3@24630>   ASL.l #8,d0
00033DE8 <AmiBlitz3.ab3@24631>    MOVE.b (a5)+,d0
00033DEC <AmiBlitz3.ab3@24632>    BEQ JL_0_DFA0
00033DF0 <AmiBlitz3.ab3@24633>    CMP.b #$22,d0
00033DF4 <AmiBlitz3.ab3@24634>    BNE 'l2
00033DF8 <AmiBlitz3.ab3@24635>    MOVE.b #0,d0
00033DFA <AmiBlitz3.ab3@24636>    ASR.l #8,d0
00033DFE <AmiBlitz3.ab3@24637> BRA 'do
00033E00 <AmiBlitz3.ab3@24640>   ASL.l #8,d0
00033E02 <AmiBlitz3.ab3@24641>     MOVE.b (a5)+,d0
00033E06 <AmiBlitz3.ab3@24642>    BEQ JL_0_DFA0
00033E0A <AmiBlitz3.ab3@24643>    CMP.b #$22,d0
00033E0E <AmiBlitz3.ab3@24644>    BNE 'l3
00033E12 <AmiBlitz3.ab3@24645>    MOVE.b #0,d0
00033E14 <AmiBlitz3.ab3@24646>    ASR.l #8,d0
00033E18 <AmiBlitz3.ab3@24647> BRA 'do
00033E1A <AmiBlitz3.ab3@24650>   ASL.l #8,d0
00033E1C <AmiBlitz3.ab3@24651>     MOVE.b (a5)+,d0
00033E20 <AmiBlitz3.ab3@24652>    BEQ JL_0_DFA0
00033E24 <AmiBlitz3.ab3@24653>    CMP.b #$22,d0
00033E28 <AmiBlitz3.ab3@24654>    BNE 'l4
00033E2C <AmiBlitz3.ab3@24655>    MOVE.b #0,d0
00033E2E <AmiBlitz3.ab3@24656>    ASR.l #8,d0
00033E32 <AmiBlitz3.ab3@24657> BRA 'do
00033E36 <AmiBlitz3.ab3@24660>    CMP.b #$22,(a5)+
00033E3A <AmiBlitz3.ab3@24661>    BNE JUMP_error4char
00033E3E <AmiBlitz3.ab3@24664>   MOVE.w #$2b7c,d1
00033E44 <AmiBlitz3.ab3@24665>    TST.w varmode
00033E48 <AmiBlitz3.ab3@24666>    BEQ 'g3
00033E4C <AmiBlitz3.ab3@24667>    BCLR #9,d1
00033E52 <AmiBlitz3.ab3@24670>     JSR writeword
00033E54 <AmiBlitz3.ab3@24671>     MOVE.l d0,d1
00033E5A <AmiBlitz3.ab3@24672>     JSR writelong
00033E5C <AmiBlitz3.ab3@24673>     MOVE.w d3,d1
00033E62 <AmiBlitz3.ab3@24674>     JSR writeword
00033E68 <AmiBlitz3.ab3@24675>     JSR get1bytemain
00033E6A <AmiBlitz3.ab3@24676> RTS
00033E70 <AmiBlitz3.ab3@24682> JMP noleterr
00033E76 <AmiBlitz3.ab3@24686>   MOVE.w d2,vartype
00033E7A <AmiBlitz3.ab3@24687>   MOVE.b #$3,D2
00033E7E <AmiBlitz3.ab3@24690>   CMP.b #5,d2
00033E82 <AmiBlitz3.ab3@24691>   BNE 'l1
00033E88 <AmiBlitz3.ab3@24692>   MOVE.l a2,currtype
00033E8C <AmiBlitz3.ab3@24696>   MOVEM.w D2-D3,-(A7)
00033E92 <AmiBlitz3.ab3@24697>   MOVE.w varmode,-(A7)
00033E98 <AmiBlitz3.ab3@24698>   MOVE.l a2,leftsidetype
00033EA2 <AmiBlitz3.ab3@24699>   MOVE.w flagmask,leftsideflagmask
00033EA6 <AmiBlitz3.ab3@24700>   BTST #$f,d2
00033EAA <AmiBlitz3.ab3@24701>   BEQ 'nomultiassign
00033EB0 <AmiBlitz3.ab3@24702>   CLR.l leftsidetype                        ;its multiassign to type entries so no typecheck need
00033EB6 <AmiBlitz3.ab3@24703>   CLR.w leftsideflagmask
00033EBA <AmiBlitz3.ab3@24704> 'nomultiassign  ANDI.w #$FF,D2
00033EC0 <AmiBlitz3.ab3@24705>   MOVE.l lastoffset_org,-(A7)
00033EC6 <AmiBlitz3.ab3@24706>   JSR eval                                ; calc right side of var assign
00033ECA <AmiBlitz3.ab3@24707>   MOVEM.l a0/a1,-(a7)
00033ED0 <AmiBlitz3.ab3@24708>   MOVE.l leftsidetype,a0
00033ED6 <AmiBlitz3.ab3@24709>   CMP.l #0,a0
00033EDA <AmiBlitz3.ab3@24710>   BEQ 'nocheck
00033EE2 <AmiBlitz3.ab3@24711>   CMP.w #1,leftsideflagmask
00033EE6 <AmiBlitz3.ab3@24712>   BEQ 'isptr
00033EEE <AmiBlitz3.ab3@24713>   CMP.l #$100,4(a0)
00033EF2 <AmiBlitz3.ab3@24714>   BLE 'nocheck
00033EF8 <AmiBlitz3.ab3@24715> 'isptr TST.l typetocast
00033EFC <AmiBlitz3.ab3@24716>   BEQ 'nocast
00033F02 <AmiBlitz3.ab3@24717>   MOVE.l typetocast,a1
00033F06 <AmiBlitz3.ab3@24718>   BRA 'typecheck
00033F0C <AmiBlitz3.ab3@24719> 'nocast  TST.l rightsidetype
00033F10 <AmiBlitz3.ab3@24720>   BEQ 'nocheck
00033F16 <AmiBlitz3.ab3@24721>   MOVE.l rightsidetype,a1
00033F1E <AmiBlitz3.ab3@24722>   CMP.w #1,rightsideflagmask
00033F22 <AmiBlitz3.ab3@24723>   BEQ 'ok
00033F2A <AmiBlitz3.ab3@24724>   CMP.l #$100,4(a1)
00033F2E <AmiBlitz3.ab3@24725>   BGE 'typecheck
00033F36 <AmiBlitz3.ab3@24726>   CMP.l #$3,4(a1)
00033F3A <AmiBlitz3.ab3@24727>   BEQ 'ok                              ;long assign is allow with this codelines
00033F3E <AmiBlitz3.ab3@24728>   BRA 'error
00033F44 <AmiBlitz3.ab3@24730>   TST.b typecheck
00033F48 <AmiBlitz3.ab3@24731>   BEQ 'nocheck
00033F4E <AmiBlitz3.ab3@24732>   TST.b notypecheck
00033F52 <AmiBlitz3.ab3@24733>   BNE 'ok
00033F54 <AmiBlitz3.ab3@24734>   CMP.l a0,a1
00033F58 <AmiBlitz3.ab3@24735>   BEQ 'ok
00033F5C <AmiBlitz3.ab3@24737>   MOVE.l 4(a1),a1                   ; load the address of 1. type.
00033F60 <AmiBlitz3.ab3@24738>   CMP.l $a(a1),a0                   ; check if the bigger type contain in first place same type as the function need
00033F64 <AmiBlitz3.ab3@24739>   BEQ 'ok
00033F6A <AmiBlitz3.ab3@24741>  JMP   error_convert_types     ;for syntax 4  = typecheck
00033F70 <AmiBlitz3.ab3@24744>    CLR.l typetocast
00033F74 <AmiBlitz3.ab3@24745>    MOVEM.l (a7)+, a0/a1
00033F7A <AmiBlitz3.ab3@24746>   MOVE.l (A7)+,lastoffset_org
00033F80 <AmiBlitz3.ab3@24747>   MOVE.w commode,D1
00033F84 <AmiBlitz3.ab3@24748>    BNE.w JL_0_DFCC
00033F88 <AmiBlitz3.ab3@24749>    BSR.w JL_0_B63C
00033F8E <AmiBlitz3.ab3@24752>   MOVE.w (A7)+,varmode
00033F92 <AmiBlitz3.ab3@24753>   MOVEM.w (A7)+,D2-D3
00033F96 <AmiBlitz3.ab3@24755>   MOVE.w #$2B40,D1
00033F9C <AmiBlitz3.ab3@24756>   MOVE.w varmode,D4
00033FA0 <AmiBlitz3.ab3@24757>    BEQ.w JL_0_DFE8
00033FA4 <AmiBlitz3.ab3@24758>   BCLR #$9,D1
00033FA8 <AmiBlitz3.ab3@24761>   BTST #$F,D2
00033FAC <AmiBlitz3.ab3@24762>    BEQ.w JL_0_E090
00033FB2 <AmiBlitz3.ab3@24763>    TST.b stackcorrect
00033FB6 <AmiBlitz3.ab3@24764>    BNE 'st1
00033FBC <AmiBlitz3.ab3@24765>   MOVE.w commode,D1
00033FC0 <AmiBlitz3.ab3@24766>    BEQ.w JL_0_E004
00033FC6 <AmiBlitz3.ab3@24769>   MOVE.w pulla2,D1
00033FCC <AmiBlitz3.ab3@24770>    JSR writeword
00033FD0 <AmiBlitz3.ab3@24773>   MOVE.w #$2480,D1
00033FD4 <AmiBlitz3.ab3@24774>    MOVEM.l a0/d0,-(a7)
00033FDA <AmiBlitz3.ab3@24775>    MOVEA.l lastoffset_org,A0
00033FDC <AmiBlitz3.ab3@24776>    MOVE.l A0,D0
00033FE0 <AmiBlitz3.ab3@24777>    BEQ.w 'skip
00033FE2 <AmiBlitz3.ab3@24778>    MOVEA.l D0,A0
00033FEA <AmiBlitz3.ab3@24779>    MOVE.l $A(A0),currtype
00033FEE <AmiBlitz3.ab3@24782>   MOVEM.l (a7)+,a0/d0
00033FF2 <AmiBlitz3.ab3@24783>   CMP.w #$2C,D0
00033FF6 <AmiBlitz3.ab3@24784>    BNE.w JL_0_E090
00033FFA <AmiBlitz3.ab3@24785>     MOVE.w #$24C0,D1
00033FFE <AmiBlitz3.ab3@24786>    BSR.w JL_0_E090                                         ;write store
00034004 <AmiBlitz3.ab3@24789>    MOVE.l lastoffset_org,D0
0003400C <AmiBlitz3.ab3@24793>   MOVE.w #$FFFF,commode
00034012 <AmiBlitz3.ab3@24794>   CLR.w varcodelen
0003401A <AmiBlitz3.ab3@24795>   MOVE.b #1,optiarray
00034020 <AmiBlitz3.ab3@24796>   MOVE.w pusha2,D1
00034026 <AmiBlitz3.ab3@24797>    JSR writeword
0003402C <AmiBlitz3.ab3@24798>   TST.l lastoffset_org
00034030 <AmiBlitz3.ab3@24799>   BEQ dimmore
00034036 <AmiBlitz3.ab3@24800>   MOVEA.l lastoffset_org,A0
00034038 <AmiBlitz3.ab3@24801>   MOVE.l (A0),D0
0003403C <AmiBlitz3.ab3@24802>    BEQ.w JUMP_comerr
0003403E <AmiBlitz3.ab3@24803>   MOVEA.l D0,A0
00034044 <AmiBlitz3.ab3@24804>   MOVE.l A0,lastoffset_org
0003404A <AmiBlitz3.ab3@24805>   BTST #$1,$7(A0)
0003404E <AmiBlitz3.ab3@24806>    BNE.w JUMP_nocomerr
00034052 <AmiBlitz3.ab3@24807>   MOVEA.l $A(A0),A1
00034056 <AmiBlitz3.ab3@24808>   MOVE.l $4(A1),D2
0003405C <AmiBlitz3.ab3@24811>   BTST #$0,$7(A0)
00034060 <AmiBlitz3.ab3@24812>    BNE.w JL_0_E078
00034066 <AmiBlitz3.ab3@24813>   CMP.l #$100,D2
0003406A <AmiBlitz3.ab3@24814>    BCC.l JUMP_nocomerr
0003406E <AmiBlitz3.ab3@24815> BRA.w JL_0_E088                                     ; do do type\x= 10,20,30....
00034074 <AmiBlitz3.ab3@24818>         CLR.b optiarray
00034078 <AmiBlitz3.ab3@24819>         CMP.w #"@@",(a5)
0003407C <AmiBlitz3.ab3@24820>         BEQ 'n1
00034080 <AmiBlitz3.ab3@24821> BRA 'd1
00034086 <AmiBlitz3.ab3@24824>   JSR nextline
00034088 <AmiBlitz3.ab3@24825>         MOVE.l a5,-(a7)
0003408A <AmiBlitz3.ab3@24828>   MOVE.b (a5)+,d0
0003408E <AmiBlitz3.ab3@24829>         CMP.b #$20,d0
00034092 <AmiBlitz3.ab3@24830>         BEQ 'l2
00034094 <AmiBlitz3.ab3@24831>         MOVE.l (a7)+,a5
00034098 <AmiBlitz3.ab3@24832>         CMP.b #";",d0
0003409C <AmiBlitz3.ab3@24833>         BEQ 'n1
000340A2 <AmiBlitz3.ab3@24836>         TST.w debugmode
000340A6 <AmiBlitz3.ab3@24837>         BEQ JL_0_DEE0
000340A8 <AmiBlitz3.ab3@24838>         MOVE.l a0,-(a7)
000340AE <AmiBlitz3.ab3@24839>         MOVE.l pushat,a0
000340B4 <AmiBlitz3.ab3@24840>         CMP.l #0,a0
000340B8 <AmiBlitz3.ab3@24841>         BNE 'o1
000340BC <AmiBlitz3.ab3@24842> BRA 'skip
000340C4 <AmiBlitz3.ab3@24845>         ADD.l #1,2(a0)
000340CA <AmiBlitz3.ab3@24848>   CLR.w commode
000340D2 <AmiBlitz3.ab3@24849>         MOVE.b #1,stackcorrect
000340D4 <AmiBlitz3.ab3@24850>         MOVE.l (a7)+,a0
000340DA <AmiBlitz3.ab3@24851> JMP JL_0_DEE0
000340E0 <AmiBlitz3.ab3@24854> JMP nocomerr
000340E6 <AmiBlitz3.ab3@24857>   CMP.l #$100,D2
000340EA <AmiBlitz3.ab3@24858>    BCS.w JL_0_E084
000340EC <AmiBlitz3.ab3@24859>   MOVEQ.l #$00,D2
000340F0 <AmiBlitz3.ab3@24862>   BSET #$E,D2
000340F4 <AmiBlitz3.ab3@24865>   BSET #$F,D2
000340F8 <AmiBlitz3.ab3@24866> BRA.w JL_0_DEE0
000340FE <AmiBlitz3.ab3@24869>    MOVE.l destpointer,a4
00034106 <AmiBlitz3.ab3@24870>    MOVE.l #$f22a6400,-4(a4)
0003410C <AmiBlitz3.ab3@24871>    MOVE.w arrayoffset,d1
00034112 <AmiBlitz3.ab3@24872> JMP writeword
00034118 <AmiBlitz3.ab3@24875> JMP comerr
0003411E <AmiBlitz3.ab3@24878>    TST.b fpu
00034122 <AmiBlitz3.ab3@24879>    BEQ 'nofloat
00034126 <AmiBlitz3.ab3@24880>    CMP.b #5,d2
0003412A <AmiBlitz3.ab3@24881>    BNE 'nofloat
00034130 <AmiBlitz3.ab3@24882>    CLR.w fp0var
00034136 <AmiBlitz3.ab3@24883>    LEA regtable,a4
00034138 <AmiBlitz3.ab3@24884>    TST.l (a4)
0003413C <AmiBlitz3.ab3@24885>    BEQ 'noreg
00034140 <AmiBlitz3.ab3@24886>    BTST #15,d2                                             ;regvars
00034144 <AmiBlitz3.ab3@24887>    BNE 'noreg
00034148 <AmiBlitz3.ab3@24888>    CMP.w 0+4(a4),d3
0003414C <AmiBlitz3.ab3@24889>    BNE 'doreg1
00034152 <AmiBlitz3.ab3@24890>    MOVE.l #$f2000380,d1
00034158 <AmiBlitz3.ab3@24891>    MOVE.w regnum,d0
0003415C <AmiBlitz3.ab3@24892>    BNE 'noopt
00034162 <AmiBlitz3.ab3@24898>    MOVE.l destpointer,a4
0003416A <AmiBlitz3.ab3@24899>    CMP.l #$f2001c80,-8(a4)
0003416E <AmiBlitz3.ab3@24900>    BNE 'noopt
00034176 <AmiBlitz3.ab3@24901>    CMP.l #$f2000422,-4(a4)
0003417A <AmiBlitz3.ab3@24902>    BNE 'noopt
00034180 <AmiBlitz3.ab3@24903>    MOVE.l #$f20003a2,d1
0003418A <AmiBlitz3.ab3@24904>    SUB.l #8,destpointer
0003418C <AmiBlitz3.ab3@24907>    ASL.w #7,d0
0003418E <AmiBlitz3.ab3@24908>    OR.w d0,d1
00034194 <AmiBlitz3.ab3@24909>    JSR writelong
00034196 <AmiBlitz3.ab3@24910> RTS
0003419A <AmiBlitz3.ab3@24913>   CMP.w 8+4(a4),d3
0003419E <AmiBlitz3.ab3@24914>    BNE 'doreg2
000341A4 <AmiBlitz3.ab3@24915>    MOVE.l #$f2000300,d1
000341AA <AmiBlitz3.ab3@24916>    MOVE.w regnum,d0
000341AC <AmiBlitz3.ab3@24917>    ASL.w #7,d0
000341AE <AmiBlitz3.ab3@24918>    OR.w d0,d1
000341B4 <AmiBlitz3.ab3@24919>    JSR writelong
000341B6 <AmiBlitz3.ab3@24920> RTS
000341BA <AmiBlitz3.ab3@24923>   CMP.w 16+4(a4),d3
000341BE <AmiBlitz3.ab3@24924>    BNE 'doreg3
000341C4 <AmiBlitz3.ab3@24925>    MOVE.l #$f2000280,d1
000341CA <AmiBlitz3.ab3@24926>    MOVE.w regnum,d0
000341CC <AmiBlitz3.ab3@24927>    ASL.w #7,d0
000341CE <AmiBlitz3.ab3@24928>    OR.w d0,d1
000341D4 <AmiBlitz3.ab3@24929>    JSR  writelong
000341D6 <AmiBlitz3.ab3@24930>  RTS
000341DA <AmiBlitz3.ab3@24933>   CMP.w 24+4(a4),d3
000341DE <AmiBlitz3.ab3@24934>    BNE 'doreg4
000341E4 <AmiBlitz3.ab3@24935>    MOVE.l #$f2000200,d1
000341EA <AmiBlitz3.ab3@24936>    MOVE.w regnum,d0
000341EC <AmiBlitz3.ab3@24937>    ASL.w #7,d0
000341EE <AmiBlitz3.ab3@24938>    OR.w d0,d1
000341F4 <AmiBlitz3.ab3@24939>    JSR writelong
000341F6 <AmiBlitz3.ab3@24940> RTS
000341FA <AmiBlitz3.ab3@24943>   CMP.w 32+4(a4),d3
000341FE <AmiBlitz3.ab3@24944>    BNE 'noreg
00034204 <AmiBlitz3.ab3@24945>    MOVE.l #$f2000180,d1
0003420A <AmiBlitz3.ab3@24946>    MOVE.w regnum,d0
0003420C <AmiBlitz3.ab3@24947>    ASL.w #7,d0
0003420E <AmiBlitz3.ab3@24948>    OR.w d0,d1
00034214 <AmiBlitz3.ab3@24949>    JSR writelong
00034216 <AmiBlitz3.ab3@24950> RTS
0003421C <AmiBlitz3.ab3@24953>    TST.w regnum
00034220 <AmiBlitz3.ab3@24954>    BNE 'nofp0
00034226 <AmiBlitz3.ab3@24955>    MOVE.l destpointer ,a4
0003422E <AmiBlitz3.ab3@24956>    CMP.l #$f2304400,-6(a4)
00034232 <AmiBlitz3.ab3@24957>    BNE 'do
00034238 <AmiBlitz3.ab3@24958>    CMP.w #$1990,-2(a4)
0003423C <AmiBlitz3.ab3@24959>    BNE 'do
00034240 <AmiBlitz3.ab3@24960>    BTST #15,d2                                             ;types ?
00034244 <AmiBlitz3.ab3@24961>    BNE 'do
0003424A <AmiBlitz3.ab3@24962>   MOVE.l #$2b701990,d1                                     ;var
00034250 <AmiBlitz3.ab3@24963>   TST.w varmode
00034254 <AmiBlitz3.ab3@24964>   BEQ 'glob1
00034258 <AmiBlitz3.ab3@24965>   BCLR #25,d1
0003425C <AmiBlitz3.ab3@24968>   MOVE.l d1,-6(a4)
00034260 <AmiBlitz3.ab3@24969>   MOVE.w d3,-2(a4)
00034266 <AmiBlitz3.ab3@24970>   CLR.w fp0var
0003426E <AmiBlitz3.ab3@24971>   MOVE.w #$ffff,fp0mode
00034270 <AmiBlitz3.ab3@24972> RTS
00034278 <AmiBlitz3.ab3@24975>    CMP.l #$f22d4400,-6(a4)                                 ;fmove.s (a5),fp0
0003427C <AmiBlitz3.ab3@24976>    BNE 'do3
00034286 <AmiBlitz3.ab3@24977>    CMP.l #newtype_double,currtype
0003428A <AmiBlitz3.ab3@24978>    BEQ 'do4
0003428E <AmiBlitz3.ab3@24981>   MOVE.w #$2b6d,d1
00034294 <AmiBlitz3.ab3@24982>    TST.w varmode
00034298 <AmiBlitz3.ab3@24983>    BEQ 'g2
0003429C <AmiBlitz3.ab3@24984>     BCLR #9,d1
000342A0 <AmiBlitz3.ab3@24987>     CMP.w #$2b6d,d1
000342A4 <AmiBlitz3.ab3@24988>     BNE 'd1
000342A8 <AmiBlitz3.ab3@24989>     CMP.w -2(a4),d3
000342AC <AmiBlitz3.ab3@24990>     BNE 'd1
000342B2 <AmiBlitz3.ab3@24991>     SUBQ.l #6,destpointer
000342B6 <AmiBlitz3.ab3@24992> BRA 'd12
000342BA <AmiBlitz3.ab3@24995>     MOVE.w d1,-6(a4)                                       ;fmove.s to move.l mem,mem
000342C0 <AmiBlitz3.ab3@24996>     MOVE.w -2(a4),-4(a4)
000342C4 <AmiBlitz3.ab3@24997>     MOVE.w d3,-2(a4)
000342CA <AmiBlitz3.ab3@25000>   CLR.w fp0var
000342D2 <AmiBlitz3.ab3@25001>     MOVE.w #$ffff,fp0mode
000342D4 <AmiBlitz3.ab3@25002> RTS
000342DC <AmiBlitz3.ab3@25005>   CMP.l #$f22c4400,-6(a4)                                  ;fmove.s (a4)
000342E0 <AmiBlitz3.ab3@25006>    BNE 'do4
000342E4 <AmiBlitz3.ab3@25007>    MOVE.w #$2b6c,d1
000342EA <AmiBlitz3.ab3@25008>       TST.w varmode
000342EE <AmiBlitz3.ab3@25009>    BEQ 'g3
000342F2 <AmiBlitz3.ab3@25010>    BCLR #9,d1
000342F6 <AmiBlitz3.ab3@25013>   MOVE.w d1,-6(a4)
000342FC <AmiBlitz3.ab3@25014>     MOVE.w -2(a4),-4(a4)
00034300 <AmiBlitz3.ab3@25015>     MOVE.w d3,-2(a4)
00034306 <AmiBlitz3.ab3@25016>     CLR.w fp0var
0003430E <AmiBlitz3.ab3@25017>     MOVE.w #$ffff,fp0mode
00034310 <AmiBlitz3.ab3@25018> RTS
00034316 <AmiBlitz3.ab3@25021>   MOVE.w d3,fp0var
00034320 <AmiBlitz3.ab3@25022>    MOVE.w varmode,fp0mode
00034322 <AmiBlitz3.ab3@25023>    ADDQ.l #6,a4
00034328 <AmiBlitz3.ab3@25024>    MOVE.l a4,fp0addr
00034332 <AmiBlitz3.ab3@25025>    MOVE.l firstiff,fp0iff
00034336 <AmiBlitz3.ab3@25028>   MOVEM.l d0/d4,-(a7)
00034338 <AmiBlitz3.ab3@25029>    MOVEQ #0,d0
0003433E <AmiBlitz3.ab3@25030>     MOVE.w regnum,d0
00034340 <AmiBlitz3.ab3@25031>    ASL.w #7,d0                                             ;fpu store var
00034344 <AmiBlitz3.ab3@25032>   BTST #15,d2
00034348 <AmiBlitz3.ab3@25033>    BEQ 'var
0003434A <AmiBlitz3.ab3@25034>    MOVE.w d1,d4
0003434E <AmiBlitz3.ab3@25035>    CMP.w #$24c0,d4
00034352 <AmiBlitz3.ab3@25036>    BNE 'nopl
00034358 <AmiBlitz3.ab3@25037>    MOVE.l #$f21a6400,d1
0003435A <AmiBlitz3.ab3@25038>    MOVEQ #0,d3
0003435E <AmiBlitz3.ab3@25039> BRA 'glob
00034364 <AmiBlitz3.ab3@25043>   MOVE.l #$f2126400,d1
00034366 <AmiBlitz3.ab3@25044>    TST.w d3                                                ;offset =0
0003436A <AmiBlitz3.ab3@25045>    BNE 'offset
00034370 <AmiBlitz3.ab3@25046>    MOVE.l #$f2126400,d1
00034372 <AmiBlitz3.ab3@25054>    MOVEQ #0,d3
00034376 <AmiBlitz3.ab3@25055> BRA 'glob
0003437C <AmiBlitz3.ab3@25058>   MOVE.l #$f22d6400,d1                                     ;var
00034382 <AmiBlitz3.ab3@25059>   TST.w varmode
00034386 <AmiBlitz3.ab3@25060>   BEQ 'glob
0003438A <AmiBlitz3.ab3@25061>   BCLR #16,d1
0003438C <AmiBlitz3.ab3@25062>  'glob OR.l d0,d1
00034396 <AmiBlitz3.ab3@25065>   CMP.l #newtype_double,currtype
0003439A <AmiBlitz3.ab3@25066>   BNE 'dbl1
000343A0 <AmiBlitz3.ab3@25067>   OR.l #$00001000,d1
000343A6 <AmiBlitz3.ab3@25070>   JSR writelong
000343AC <AmiBlitz3.ab3@25071>   CLR.l currtype
000343B0 <AmiBlitz3.ab3@25072>   MOVEM.l (a7)+,d0/d4
000343B2 <AmiBlitz3.ab3@25073>   MOVE.l d3,d1
000343B6 <AmiBlitz3.ab3@25074>   BEQ 'nooffs
000343BC <AmiBlitz3.ab3@25075> JMP writeword
000343BE <AmiBlitz3.ab3@25078> RTS
000343C4 <AmiBlitz3.ab3@25092>     TST.b fast                                             ;write lea->xx(a2)
000343C8 <AmiBlitz3.ab3@25093>    BEQ 'la10
000343CE <AmiBlitz3.ab3@25097>    TST.b quickadd
000343D4 <AmiBlitz3.ab3@25099>      CLR.b quickadd
000343D8 <AmiBlitz3.ab3@25100>    CMP.w #$2480,d1
000343DC <AmiBlitz3.ab3@25101>    BNE 'la10
000343E2 <AmiBlitz3.ab3@25102>    TST.b optiarray
000343E6 <AmiBlitz3.ab3@25103>    BNE 'la10
000343EC <AmiBlitz3.ab3@25104>    MOVE.l destpointer,a4
000343F2 <AmiBlitz3.ab3@25105>    CMP.w #$45ea,-4(a4)
000343F6 <AmiBlitz3.ab3@25106>    BNE 'la10
000343FE <AmiBlitz3.ab3@25107>    CMP.w #8,pushclen
00034402 <AmiBlitz3.ab3@25108>    BEQ 'la100
0003440A <AmiBlitz3.ab3@25109>    CMP.w #6,pushclen
0003440E <AmiBlitz3.ab3@25110>    BNE 'la10
00034412 <AmiBlitz3.ab3@25111>    CMP.b #3,d2
00034416 <AmiBlitz3.ab3@25112>    BCS 'la110
0003441C <AmiBlitz3.ab3@25114>    MOVE.w #$2540,-2(a4)
00034422 <AmiBlitz3.ab3@25115>    MOVE.w arrayoffset,d1
00034428 <AmiBlitz3.ab3@25116> JMP writeword
0003442E <AmiBlitz3.ab3@25119>    CLR.b quickadd
00034430 <AmiBlitz3.ab3@25120> RTS
00034434 <AmiBlitz3.ab3@25123>    CMP.b #2,d2
00034438 <AmiBlitz3.ab3@25124>    BNE 'la120
0003443E <AmiBlitz3.ab3@25125>     MOVE.w #$3540,-2(a4)
00034444 <AmiBlitz3.ab3@25126>    MOVE.w arrayoffset,d1
0003444A <AmiBlitz3.ab3@25127> JMP writeword
0003444E <AmiBlitz3.ab3@25130>   CMP.b #1,d2
00034452 <AmiBlitz3.ab3@25131>    BNE.s 'la10
00034458 <AmiBlitz3.ab3@25132>     MOVE.w #$1540,-2(a4)
0003445E <AmiBlitz3.ab3@25133>    MOVE.w arrayoffset,d1
00034464 <AmiBlitz3.ab3@25134> JMP writeword
00034468 <AmiBlitz3.ab3@25137>    CMP.b #3,d2
0003446C <AmiBlitz3.ab3@25138>    BCS 'la11
00034472 <AmiBlitz3.ab3@25139>    MOVE.w #$2540,-4(a4)
00034474 <AmiBlitz3.ab3@25140> RTS
00034478 <AmiBlitz3.ab3@25143>    CMP.b #2,d2
0003447C <AmiBlitz3.ab3@25144>    BNE 'la12
00034482 <AmiBlitz3.ab3@25145>     MOVE.w #$3540,-4(a4)
00034484 <AmiBlitz3.ab3@25146> RTS
00034488 <AmiBlitz3.ab3@25148>  'la12 CMP.b #1,d2
0003448C <AmiBlitz3.ab3@25149>    BNE.s 'la10
00034492 <AmiBlitz3.ab3@25150>     MOVE.w #$1540,-4(a4)
00034494 <AmiBlitz3.ab3@25151> RTS
0003449A <AmiBlitz3.ab3@25154>   CLR.b optiarray
0003449E <AmiBlitz3.ab3@25155>    CMP.b #$1,D2
000344A2 <AmiBlitz3.ab3@25156>    BEQ.w JL_0_E0AC
000344A6 <AmiBlitz3.ab3@25157>    BSR.w varalign
000344AA <AmiBlitz3.ab3@25158>    CMP.b #$3,D2
000344AE <AmiBlitz3.ab3@25159>    BCC.w writevarlong
000344B4 <AmiBlitz3.ab3@25160>    TST.b fast                                              ;optiimmi
000344B8 <AmiBlitz3.ab3@25161>    BEQ 'l10b
000344BE <AmiBlitz3.ab3@25166>    MOVE.l destpointer,a0
000344C4 <AmiBlitz3.ab3@25167>    SUB.l imm_addr,a0
000344CA <AmiBlitz3.ab3@25168>    CMP.l #4,a0
000344CE <AmiBlitz3.ab3@25169>    BNE 'l10
000344D4 <AmiBlitz3.ab3@25170>    CLR.l imm_addr
000344DA <AmiBlitz3.ab3@25171>    MOVE.l destpointer,a4
000344DE <AmiBlitz3.ab3@25172>    OR.w #$107c,d1
000344E2 <AmiBlitz3.ab3@25173>    MOVE.w d1,-4(a4)
000344E4 <AmiBlitz3.ab3@25174>     MOVE.w D3,D1
000344EA <AmiBlitz3.ab3@25175> JMP writeword
000344F0 <AmiBlitz3.ab3@25178>   MOVE.l destpointer,a0
000344F6 <AmiBlitz3.ab3@25179>   SUB.l load_var_addr,a0
000344FC <AmiBlitz3.ab3@25180>   CMP.l #4,a0
00034500 <AmiBlitz3.ab3@25181>   BNE 'l10b
00034506 <AmiBlitz3.ab3@25182>   CMP.w #$302d,-4(a4)                                      ;check 68k opcode
0003450A <AmiBlitz3.ab3@25183>   BNE 'l10b
00034510 <AmiBlitz3.ab3@25185>   CLR.l load_var_addr
00034516 <AmiBlitz3.ab3@25186>   MOVE.l destpointer,a4
0003451A <AmiBlitz3.ab3@25187>   OR.w #$102d,d1
0003451E <AmiBlitz3.ab3@25188>   MOVE.w d1,-4(a4)
00034520 <AmiBlitz3.ab3@25189>   MOVE.w d3,d1
00034526 <AmiBlitz3.ab3@25190> JMP writeword
0003452A <AmiBlitz3.ab3@25193>   ORI.w #$1000,D1                                          ;word
0003452E <AmiBlitz3.ab3@25194> BRA.w writestorevar
00034534 <AmiBlitz3.ab3@25198>    TST.b fast                                              ;optiimmi
00034538 <AmiBlitz3.ab3@25199>    BEQ 'l10b
0003453E <AmiBlitz3.ab3@25204>    MOVE.l destpointer,a0
00034544 <AmiBlitz3.ab3@25205>    SUB.l imm_addr,a0
0003454A <AmiBlitz3.ab3@25206>    CMP.l #4,a0
0003454E <AmiBlitz3.ab3@25207>    BNE 'l10
00034554 <AmiBlitz3.ab3@25208>    CLR.l imm_addr
0003455A <AmiBlitz3.ab3@25209>    MOVE.l destpointer,a4
0003455E <AmiBlitz3.ab3@25210>    OR.w #$7c,d1
00034562 <AmiBlitz3.ab3@25211>    EORI #$3000,d1
00034566 <AmiBlitz3.ab3@25212>    MOVE.w d1,-4(a4)
00034568 <AmiBlitz3.ab3@25213>       MOVE.w D3,D1
0003456E <AmiBlitz3.ab3@25214> JMP writeword
00034574 <AmiBlitz3.ab3@25217>   MOVE.l destpointer,a0
0003457A <AmiBlitz3.ab3@25218>   SUB.l load_var_addr,a0
00034580 <AmiBlitz3.ab3@25219>   CMP.l #4,a0
00034584 <AmiBlitz3.ab3@25220>   BNE 'l10b
0003458A <AmiBlitz3.ab3@25221>   CLR.l load_var_addr
00034590 <AmiBlitz3.ab3@25222>   MOVE.l destpointer,a4
00034596 <AmiBlitz3.ab3@25223>    CMP.w #$1b6d,-4(a4)
0003459A <AmiBlitz3.ab3@25224>    BNE 'l10b
0003459E <AmiBlitz3.ab3@25225>    OR.w #$2d,d1
000345A2 <AmiBlitz3.ab3@25226>    EORI #$3000,d1
000345A6 <AmiBlitz3.ab3@25227>    MOVE.w d1,-4(a4)
000345A8 <AmiBlitz3.ab3@25228>   MOVE.w d3,d1
000345AE <AmiBlitz3.ab3@25229> JMP writeword
000345B4 <AmiBlitz3.ab3@25232>   ADDQ.w #1,pcodd                                          ;byte
000345B8 <AmiBlitz3.ab3@25233>   EORI.w #$3000,D1
000345BE <AmiBlitz3.ab3@25236>   JSR writeword
000345C2 <AmiBlitz3.ab3@25237>   BTST #$7,D1
000345C6 <AmiBlitz3.ab3@25238>    BNE JL_0_E0C6
000345C8 <AmiBlitz3.ab3@25239>   MOVE.w D3,D1
000345CE <AmiBlitz3.ab3@25240> JMP writeword
000345D4 <AmiBlitz3.ab3@25243>    TST.b fast                                              ;optiimmi
000345D8 <AmiBlitz3.ab3@25244>    BEQ 'l10b
000345DE <AmiBlitz3.ab3@25248>    MOVE.l destpointer,a0
000345E4 <AmiBlitz3.ab3@25249>    SUB.l imm_addr,a0
000345EA <AmiBlitz3.ab3@25250>    CMP.l #6,a0
000345EE <AmiBlitz3.ab3@25251>    BNE 'l10
000345F4 <AmiBlitz3.ab3@25252>    CLR.l imm_addr
000345FA <AmiBlitz3.ab3@25253>    MOVE.l destpointer,a4
000345FE <AmiBlitz3.ab3@25254>    OR.w #$7c,d1
00034602 <AmiBlitz3.ab3@25255>    MOVE.w d1,-6(a4)
00034604 <AmiBlitz3.ab3@25256>     MOVE.w D3,D1
0003460A <AmiBlitz3.ab3@25257> JMP writeword
00034610 <AmiBlitz3.ab3@25260>   MOVE.l destpointer,a0
00034616 <AmiBlitz3.ab3@25261>   SUB.l load_var_addr,a0
0003461C <AmiBlitz3.ab3@25262>   CMP.l #4,a0
00034620 <AmiBlitz3.ab3@25263>   BNE 'l10b
00034626 <AmiBlitz3.ab3@25264>   CLR.l load_var_addr
0003462C <AmiBlitz3.ab3@25265>   MOVE.l destpointer,a4
00034632 <AmiBlitz3.ab3@25266>   CMP.w #$245f,-2(a4)
00034636 <AmiBlitz3.ab3@25267>   BEQ 'l10b
0003463A <AmiBlitz3.ab3@25268>   OR.w #$28,d1
0003463E <AmiBlitz3.ab3@25269>   OR.w d1,-4(a4)
00034644 <AmiBlitz3.ab3@25270>   CMP.w #$2b6d,-4(a4)
00034648 <AmiBlitz3.ab3@25271>   BNE 'd1
0003464C <AmiBlitz3.ab3@25272>   CMP.w -2(a4),d3
00034650 <AmiBlitz3.ab3@25273>   BNE 'd1
00034656 <AmiBlitz3.ab3@25274>   SUBQ.l #4,destpointer
00034658 <AmiBlitz3.ab3@25275> RTS
0003465A <AmiBlitz3.ab3@25278>   MOVE.w d3,d1
00034660 <AmiBlitz3.ab3@25279> JMP writeword
00034666 <AmiBlitz3.ab3@25282>   JSR writeword
0003466A <AmiBlitz3.ab3@25283>   BTST #$7,D1
0003466E <AmiBlitz3.ab3@25284>    BNE.b JL_0_E0C6
00034670 <AmiBlitz3.ab3@25285>   MOVE.w D3,D1
00034676 <AmiBlitz3.ab3@25286> JMP writeword
00034678 <AmiBlitz3.ab3@25289> RTS
0003467A <AmiBlitz3.ab3@25293>   MOVE.w D1,-(A7)
0003467E <AmiBlitz3.ab3@25294>   MOVE.w pcodd(PC),D1
00034680 <AmiBlitz3.ab3@25295>   LSR.w #1,D1
00034684 <AmiBlitz3.ab3@25296>    BCC.b JL_0_E0E2
0003468A <AmiBlitz3.ab3@25297>   CLR.w pcodd
00034690 <AmiBlitz3.ab3@25298>   MOVE.w add1a2,D1
00034696 <AmiBlitz3.ab3@25299>    JSR writeword
00034698 <AmiBlitz3.ab3@25302>   MOVE.w (A7)+,D1
0003469A <AmiBlitz3.ab3@25303> RTS
0003469C <AmiBlitz3.ab3@25307> add1a2:     Dc.b $52,$4A                                   ;ADDQ.W  #1,A2
0003469E <AmiBlitz3.ab3@25310> pcodd:     Ds.w 1                                          ;add 1 to this for bytes
000346A0 <AmiBlitz3.ab3@25311> listadd:   Ds.w 1                                          ;set to 8 if it's a list
000346A2 <AmiBlitz3.ab3@25312> listsize:  Ds.w 1
000346A8 <AmiBlitz3.ab3@25316>   ADDQ.w #1,regnum
000346B0 <AmiBlitz3.ab3@25317>   MOVE.b #1,nowdeclare
000346B6 <AmiBlitz3.ab3@25318>   CLR.b dimkeep
000346BE <AmiBlitz3.ab3@25319>    CMP.l #"KEEP",-1(a5)
000346C2 <AmiBlitz3.ab3@25320>   BNE 'nokeep
000346C8 <AmiBlitz3.ab3@25321>   CMP.b #" ",3(a5)
000346CC <AmiBlitz3.ab3@25322>   BNE 'nokeep
000346CE <AmiBlitz3.ab3@25323>   ADDQ.l #3,a5
000346D2 <AmiBlitz3.ab3@25326>     CMP.b #" ",(a5)
000346D6 <AmiBlitz3.ab3@25327>     BNE '1
000346D8 <AmiBlitz3.ab3@25328>    ADDQ #1,a5
000346DC <AmiBlitz3.ab3@25329> BRA '2
000346E2 <AmiBlitz3.ab3@25332>   MOVE.l a5,lastsourcepos
000346EA <AmiBlitz3.ab3@25333>   MOVE.b #1,dimkeep
000346EE <AmiBlitz3.ab3@25341>   MOVE.w #$FF9A,D1
000346F4 <AmiBlitz3.ab3@25342>   JSR uselib
000346FA <AmiBlitz3.ab3@25345>   CLR.w listadd
000346FE <AmiBlitz3.ab3@25346>   CMP.w #-$7F4D,D0
00034702 <AmiBlitz3.ab3@25347>    BNE.w JL_0_E11E
0003470A <AmiBlitz3.ab3@25348>   MOVE.w #$0008,listadd
0003470E <AmiBlitz3.ab3@25349>   MOVE.w #$FFFA,D1
00034714 <AmiBlitz3.ab3@25350>    JSR uselib
0003471A <AmiBlitz3.ab3@25351>    JSR get1bytemain
00034720 <AmiBlitz3.ab3@25354>   CLR.w nonew
00034726 <AmiBlitz3.ab3@25355>    JSR getparameter
0003472E <AmiBlitz3.ab3@25356>   BTST #$1,flagmask+1
00034732 <AmiBlitz3.ab3@25357>    BEQ.w JUMP_syntaxerr
00034738 <AmiBlitz3.ab3@25358>    JSR JL_0_8E3C
0003473E <AmiBlitz3.ab3@25359>   MOVE.w notshared,D1
00034742 <AmiBlitz3.ab3@25360>    BNE.w JL_0_E198
0003474A <AmiBlitz3.ab3@25361>   MOVE.w $8(A3),temp1
00034750 <AmiBlitz3.ab3@25362>   MOVE.w proceduremode,D2
00034754 <AmiBlitz3.ab3@25363>    BNE.w JL_0_E176
0003475A <AmiBlitz3.ab3@25364>   MOVE.w globalvarpointer,-(A7)
00034762 <AmiBlitz3.ab3@25365>   MOVE.w $4(A3),globalvarpointer
00034768 <AmiBlitz3.ab3@25366>   ADDQ.w #4,globalvarpointer
0003476C <AmiBlitz3.ab3@25367>    BSR.w write_dim_code
00034772 <AmiBlitz3.ab3@25368>   MOVE.w (A7)+,globalvarpointer
00034776 <AmiBlitz3.ab3@25369> BRA.w JL_0_E1BA
0003477C <AmiBlitz3.ab3@25380>   MOVE.w globalvarpointer,-(A7)
00034782 <AmiBlitz3.ab3@25381>             MOVE.w proceduremode,-(a7)
00034788 <AmiBlitz3.ab3@25382>             CLR.w proceduremode
00034790 <AmiBlitz3.ab3@25383>   MOVE.w $4(A3),globalvarpointer
00034796 <AmiBlitz3.ab3@25384>   ADDQ.w #4,globalvarpointer
0003479A <AmiBlitz3.ab3@25385>    BSR.w write_dim_code
000347A0 <AmiBlitz3.ab3@25386>    MOVE.w (a7)+,proceduremode
000347A6 <AmiBlitz3.ab3@25387>   MOVE.w (A7)+,globalvarpointer
000347AA <AmiBlitz3.ab3@25388> BRA.w JL_0_E1BA
000347B2 <AmiBlitz3.ab3@25391>   MOVE.w #$FFFF,temp1
000347B6 <AmiBlitz3.ab3@25392>   MOVE.w listadd(PC),D1
000347BA <AmiBlitz3.ab3@25393>    BEQ.w JL_0_E1B6
000347C2 <AmiBlitz3.ab3@25394>   MOVE.w #$4000,temp1
000347C8 <AmiBlitz3.ab3@25395>   BSET #$0,$6(A3)
000347CE <AmiBlitz3.ab3@25398>         TST.w proceduremode
000347D2 <AmiBlitz3.ab3@25399>        BNE 'l1
000347D8 <AmiBlitz3.ab3@25400>        MOVE.w locvaroff,-(a7)
000347DC <AmiBlitz3.ab3@25403>   BSR.w write_dim_code
000347E2 <AmiBlitz3.ab3@25404>         TST.w proceduremode
000347E6 <AmiBlitz3.ab3@25405>         BNE JL_0_E1BA
000347EC <AmiBlitz3.ab3@25406>        MOVE.w (A7)+,locvaroff
000347F2 <AmiBlitz3.ab3@25409>   JSR get1bytemain
000347F6 <AmiBlitz3.ab3@25410>   CMP.w #$2C,D0
000347FA <AmiBlitz3.ab3@25411>    BNE.w JL_0_E1CE
00034800 <AmiBlitz3.ab3@25412>    JSR get1bytemain
00034804 <AmiBlitz3.ab3@25413> BRA.w JL_0_E0FC
00034806 <AmiBlitz3.ab3@25416> RTS
0003480E <AmiBlitz3.ab3@25419>   MOVE.w #$FFFF,nonew                                      ;#-1,nonew org source
00034814 <AmiBlitz3.ab3@25420>   MOVE.w beginarr,D1
0003481A <AmiBlitz3.ab3@25421>    JSR writeword
0003481C <AmiBlitz3.ab3@25422>   MOVEQ.l #$00,D1
00034822 <AmiBlitz3.ab3@25423>    JSR writeword
00034824 <AmiBlitz3.ab3@25424>   MOVEQ.l #$04,D1
0003482C <AmiBlitz3.ab3@25425>   BTST #$0,flagmask+1
00034830 <AmiBlitz3.ab3@25426>    BNE.w write_dim_code__pointer
00034834 <AmiBlitz3.ab3@25427>   MOVE.w $8(A2),D1
00034838 <AmiBlitz3.ab3@25430>   ADD.w listadd(PC),D1                                     ;size of one element.
0003483E <AmiBlitz3.ab3@25431>   MOVE.w D1,listsize
00034844 <AmiBlitz3.ab3@25432>    JSR writeword
0003484A <AmiBlitz3.ab3@25433>   CLR.w temp2                                              ;# dim's got
0003484C <AmiBlitz3.ab3@25434>   MOVE.l A3,-(A7)
00034852 <AmiBlitz3.ab3@25437>   ADDQ.w #1,temp2
00034854 <AmiBlitz3.ab3@25438>   MOVEQ.l #$03,D2                                          ;get word
0003485A <AmiBlitz3.ab3@25439>   MOVE.w notshared,-(a7)
00034860 <AmiBlitz3.ab3@25440>    JSR eval
00034866 <AmiBlitz3.ab3@25441>   MOVE.w (a7)+,notshared
0003486C <AmiBlitz3.ab3@25442>   TST.b debugmode
00034870 <AmiBlitz3.ab3@25443>    BEQ.w write_dim_code__norerr0
00034874 <AmiBlitz3.ab3@25444>   MOVE.w #$C30F,D1
00034878 <AmiBlitz3.ab3@25450>       MOVE.w #$5281,d1
0003487E <AmiBlitz3.ab3@25451>       JSR writeword
00034884 <AmiBlitz3.ab3@25452>       MOVE.l #$4c010800,d1                                 ;dim >65536 fix
0003488A <AmiBlitz3.ab3@25453>       JSR writelong
00034890 <AmiBlitz3.ab3@25454>   MOVE.w proceduremode,D2
00034894 <AmiBlitz3.ab3@25455>    BEQ.w write_dim_code__global
0003489A <AmiBlitz3.ab3@25456>   SUBQ.w #4,locvaroff
000348A4 <AmiBlitz3.ab3@25457>   MOVE.w locvaroff,putarr+2
000348A8 <AmiBlitz3.ab3@25458> BRA.w write_dim_code__doit
000348AE <AmiBlitz3.ab3@25461> JMP syntaxerr
000348B8 <AmiBlitz3.ab3@25464>   MOVE.w globalvarpointer,putarr+2
000348BE <AmiBlitz3.ab3@25465>   ADDQ.w #4,globalvarpointer
000348C4 <AmiBlitz3.ab3@25468>   TST.b dimkeep
000348C8 <AmiBlitz3.ab3@25469>            BEQ write_dim_code__doit_l1
000348CA <AmiBlitz3.ab3@25470>       MOVEQ #0,d1
000348D0 <AmiBlitz3.ab3@25471>       MOVE.w putarr+2,d1
000348D6 <AmiBlitz3.ab3@25472>       OR.l  #$222d0000,d1
000348DC <AmiBlitz3.ab3@25473>       MOVE.w proceduremode,D2
000348E0 <AmiBlitz3.ab3@25474>       BEQ write_dim_code__doit_l2
000348E6 <AmiBlitz3.ab3@25475>       TST.w notshared
000348EA <AmiBlitz3.ab3@25476>       BEQ write_dim_code__doit_l2
000348F0 <AmiBlitz3.ab3@25477>       SUB.l #$00010000,d1
000348F6 <AmiBlitz3.ab3@25480>   JSR writelong
000348FC <AmiBlitz3.ab3@25483>   MOVE.l putarr,D1
00034902 <AmiBlitz3.ab3@25484>       TST.w notshared
00034906 <AmiBlitz3.ab3@25485>       BNE write_dim_code__doit_l1a
0003490C <AmiBlitz3.ab3@25486>       JSR writelong
00034910 <AmiBlitz3.ab3@25487> BRA write_dim_code__doit_l4
00034916 <AmiBlitz3.ab3@25490>   JSR pokela5d
0003491A <AmiBlitz3.ab3@25493>   CMP.w #$2C,D0
0003491E <AmiBlitz3.ab3@25494>    BEQ.w write_dim_code__loop
00034922 <AmiBlitz3.ab3@25495>   CMP.w #$29,D0
00034926 <AmiBlitz3.ab3@25496>    BNE.w JUMP_syntaxerr
00034928 <AmiBlitz3.ab3@25497>   MOVEA.l (A7)+,A3
0003492E <AmiBlitz3.ab3@25498>   MOVE.w temp1,D1
00034932 <AmiBlitz3.ab3@25499>    BMI.w write_dim_code__nocare
00034936 <AmiBlitz3.ab3@25503>   BTST #$E,D1
0003493A <AmiBlitz3.ab3@25504>    BEQ.w write_dim_code__notl
00034942 <AmiBlitz3.ab3@25505>   CMPI.w #$1,temp2
00034946 <AmiBlitz3.ab3@25506>    BNE.w JUMP_redimerr
0003494A <AmiBlitz3.ab3@25507> BRA.w write_dim_code__nocare
00034950 <AmiBlitz3.ab3@25510> JMP redimerr
00034956 <AmiBlitz3.ab3@25513>   CMP.w temp2,D1
0003495A <AmiBlitz3.ab3@25514>    BNE.w JUMP_redimerr                                      ;range too long
00034960 <AmiBlitz3.ab3@25517>   LEA globalvarpointer,A0
00034966 <AmiBlitz3.ab3@25518>   MOVE.w proceduremode,D1
0003496A <AmiBlitz3.ab3@25519>   BEQ.w write_dim_code__gskip
00034970 <AmiBlitz3.ab3@25520>   LEA locvaroff,A0
00034976 <AmiBlitz3.ab3@25523>   MOVE.W  extraword,(A0)
0003497A <AmiBlitz3.ab3@25524>   BRA.W   write_dim_code__care
00034982 <AmiBlitz3.ab3@25527>   MOVE.w temp2,$8(A3)                                      ;set # dim's
00034988 <AmiBlitz3.ab3@25530>   LEA doarr,A0
0003498E <AmiBlitz3.ab3@25531>   MOVE.w $4(A3),$2(A0)
00034996 <AmiBlitz3.ab3@25532>   MOVE.w putarr+2,$6(A0)
00034998 <AmiBlitz3.ab3@25533>   MOVE.l (A0)+,D1
0003499E <AmiBlitz3.ab3@25534>    JSR writelong
000349A0 <AmiBlitz3.ab3@25535>   MOVE.l (A0),D1
000349A6 <AmiBlitz3.ab3@25536>    JSR writelong
000349AC <AmiBlitz3.ab3@25537>    TST.b dimkeep
000349B0 <AmiBlitz3.ab3@25538>   BNE write_dim_code__care_l3
000349B4 <AmiBlitz3.ab3@25541>   MOVE.w #$C400,D1
000349B8 <AmiBlitz3.ab3@25542> BRA write_dim_code__care_l2
000349BC <AmiBlitz3.ab3@25545>   MOVE.w #$C405,d1
000349C2 <AmiBlitz3.ab3@25548>   MOVE.w proceduremode,D2
000349C6 <AmiBlitz3.ab3@25549>    BEQ.w write_dim_code__isg
000349CC <AmiBlitz3.ab3@25550>    TST.w notshared
000349D0 <AmiBlitz3.ab3@25551>    BEQ write_dim_code__isg
000349D2 <AmiBlitz3.ab3@25552>   ADDQ.w #1,D1
000349D6 <AmiBlitz3.ab3@25555>   MOVE.w listadd(PC),D2
000349DA <AmiBlitz3.ab3@25556>    BEQ.w write_dim_code__isrg
000349DC <AmiBlitz3.ab3@25557>   MOVE.w D1,-(A7)
000349E0 <AmiBlitz3.ab3@25558>   MOVE.w setles(PC),D1
000349E6 <AmiBlitz3.ab3@25559>    JSR writeword
000349EA <AmiBlitz3.ab3@25560>   MOVE.w listsize(PC),D1
000349F0 <AmiBlitz3.ab3@25561>    JSR writeword
000349F2 <AmiBlitz3.ab3@25562>   MOVE.w (A7)+,D1
000349F4 <AmiBlitz3.ab3@25563>   ADDQ.w #3,D1
000349F8 <AmiBlitz3.ab3@25566> BRA.w Atokejsr
000349FE <AmiBlitz3.ab3@25573>     MOVE.l #$f23c4400,d1
00034A04 <AmiBlitz3.ab3@25575>   MOVE.w regnum,d0
00034A06 <AmiBlitz3.ab3@25576>   ASL.w #7,d0
00034A08 <AmiBlitz3.ab3@25577>   OR.w d0,d1
00034A0E <AmiBlitz3.ab3@25578>   JSR writelong
00034A14 <AmiBlitz3.ab3@25584>     MOVE.l #$40490fd9,d1
00034A1A <AmiBlitz3.ab3@25586>   JSR writelong
00034A20 <AmiBlitz3.ab3@25587> JMP get1bytemain
00034A24 <AmiBlitz3.ab3@25591> setles:   Dc.b $38,$3C,$00,$00                             ;MOVE.W  #$0000,D4
00034A28 <AmiBlitz3.ab3@25598> vbr:                Ds.l 1
00034A2A <AmiBlitz3.ab3@25599> cfetchmode:         Ds.w 1                               ;1=fetching a constant
00034A30 <AmiBlitz3.ab3@25601> constlibs           Dc.w $FDA7,$FCDF,$FD43               ;64935,64735,64835  org source
00034A34 <AmiBlitz3.ab3@25605> constpcat:          Ds.l 1
00034A38 <AmiBlitz3.ab3@25606> constlibat:         Ds.l 1
00034A3C <AmiBlitz3.ab3@25607> constmaxpc:         Dc.l $400
00034A40 <AmiBlitz3.ab3@25609> stacksize:          Dc.l #DEFAULT_STACKSIZE              ;stackfuck org source
00034A44 <AmiBlitz3.ab3@25610> currentlabeladdr:   Dc.l labelbase                       ;lastrescon org source
00034A48 <AmiBlitz3.ab3@25611> currentmacroaddr:   Dc.l macrobase                       ;lastresmac org source
00034A4C <AmiBlitz3.ab3@25612> lastrestype:        Dc.l newtype_string
00034A4E <AmiBlitz3.ab3@25613> rescnt:             Ds.w 1                               ;# resident
00034A50 <AmiBlitz3.ab3@25614> state_of_residents: Ds.w 1                               ;reschg org source ;flag for if res's have changed
00034A54 <AmiBlitz3.ab3@25615> resat:              Dc.l residents_table                 ;??looks like not used anymore??
00034A56 <AmiBlitz3.ab3@25616> linedone:           Ds.w 1
00034A6C <AmiBlitz3.ab3@25617> directbuffer:       Ds.w 11                              ;dirpcat  dc.w 0 org source
00034A70 <AmiBlitz3.ab3@25626>   Dc.l 0                                        ; bytetobyte
00034A74 <AmiBlitz3.ab3@25627>   Dc.l convert_byte_to_word                     ; bytetoword
00034A78 <AmiBlitz3.ab3@25628>   Dc.l convert_byte_to_long                     ; bytetolong
00034A7C <AmiBlitz3.ab3@25629>   Dc.l convert_byte_to_quick                    ; bytetoquick
00034A80 <AmiBlitz3.ab3@25630>   Dc.l convert_byte_to_float                    ; bytetofloat
00034A84 <AmiBlitz3.ab3@25631>   Dc.l convert_byte_to_long                     ; bytetolong
00034A88 <AmiBlitz3.ab3@25632>   Dc.l error_convert_types                      ; noconerr
00034A8C <AmiBlitz3.ab3@25635>   Dc.l convert_word_to_byte                     ; wordtobyte
00034A90 <AmiBlitz3.ab3@25636>   Dc.l 0                                        ; wordtoword
00034A94 <AmiBlitz3.ab3@25637>   Dc.l convert_word_to_long                     ; wordtolong
00034A98 <AmiBlitz3.ab3@25638>   Dc.l convert_word_to_quick                    ; wordtoquick
00034A9C <AmiBlitz3.ab3@25639>   Dc.l convert_word_to_float                    ; wordtofloat
00034AA0 <AmiBlitz3.ab3@25640>   Dc.l convert_word_to_long                     ; wordtolong
00034AA4 <AmiBlitz3.ab3@25641>   Dc.l error_convert_types                      ; noconerr
00034AA8 <AmiBlitz3.ab3@25644>   Dc.l convert_long_to_byte                     ; longtobyte
00034AAC <AmiBlitz3.ab3@25645>   Dc.l convert_long_to_word                     ; longtoword
00034AB0 <AmiBlitz3.ab3@25646>   Dc.l 0                                        ; longtolong
00034AB4 <AmiBlitz3.ab3@25647>   Dc.l convert_long_to_quick                    ; longtoquick
00034AB8 <AmiBlitz3.ab3@25648>   Dc.l convert_long_to_float                    ; longtofloat
00034ABC <AmiBlitz3.ab3@25649>   Dc.l 0                                        ; longtolong
00034AC0 <AmiBlitz3.ab3@25650>   Dc.l error_convert_types                      ; noconerr
00034AC4 <AmiBlitz3.ab3@25653>   Dc.l convert_quick_to_byte                    ; quicktobyte
00034AC8 <AmiBlitz3.ab3@25654>   Dc.l convert_quick_to_word                    ; quicktoword
00034ACC <AmiBlitz3.ab3@25655>   Dc.l convert_quick_to_long                    ; quicktolong
00034AD0 <AmiBlitz3.ab3@25656>   Dc.l 0                                        ; quicktoquick
00034AD4 <AmiBlitz3.ab3@25657>   Dc.l convert_quick_to_float                   ; quicktofloat
00034AD8 <AmiBlitz3.ab3@25658>   Dc.l convert_quick_to_long                    ; quicktolong
00034ADC <AmiBlitz3.ab3@25659>   Dc.l error_convert_types                      ; noconerr
00034AE0 <AmiBlitz3.ab3@25662>   Dc.l convert_float_to_byte                    ; floattobyte
00034AE4 <AmiBlitz3.ab3@25663>   Dc.l convert_float_to_word                    ; floattoword
00034AE8 <AmiBlitz3.ab3@25664>   Dc.l convert_float_to_long                    ; floattolong
00034AEC <AmiBlitz3.ab3@25665>   Dc.l convert_float_to_quick                   ; floattoquick
00034AF0 <AmiBlitz3.ab3@25666>   Dc.l 0                                        ; floattofloat
00034AF4 <AmiBlitz3.ab3@25667>   Dc.l convert_float_to_long                    ; floattolong
00034AF8 <AmiBlitz3.ab3@25668>   Dc.l error_convert_types                      ; noconerr
00034AFC <AmiBlitz3.ab3@25671>   Dc.l convert_long_to_byte                     ; longtobyte
00034B00 <AmiBlitz3.ab3@25672>   Dc.l convert_long_to_word                     ; longtoword
00034B04 <AmiBlitz3.ab3@25673>   Dc.l 0                                        ; longtolong
00034B08 <AmiBlitz3.ab3@25674>   Dc.l convert_long_to_quick                    ; longtoquick
00034B0C <AmiBlitz3.ab3@25675>   Dc.l convert_long_to_float                    ; longtofloat
00034B10 <AmiBlitz3.ab3@25676>   Dc.l 0                                        ; longtolong
00034B14 <AmiBlitz3.ab3@25677>   Dc.l error_convert_types                      ; noconerr
00034B18 <AmiBlitz3.ab3@25680>   Dc.l error_convert_types                      ; noconerr
00034B1C <AmiBlitz3.ab3@25681>   Dc.l error_convert_types                      ; noconerr
00034B20 <AmiBlitz3.ab3@25682>   Dc.l string_to_long                           ; stringtolong
00034B24 <AmiBlitz3.ab3@25683>   Dc.l error_convert_types                      ; noconerr
00034B28 <AmiBlitz3.ab3@25684>   Dc.l error_convert_types                      ; noconerr
00034B2C <AmiBlitz3.ab3@25685>   Dc.l string_to_long                           ; stringtolong
00034B30 <AmiBlitz3.ab3@25686>   Ds.l 1
00034B32 <AmiBlitz3.ab3@25692>   Dc.b $00,$2B                                  ;+ ; add
00034B36 <AmiBlitz3.ab3@25693>   Dc.l do_plus_byte                             ;doplusb
00034B3A <AmiBlitz3.ab3@25694>   Dc.l do_plus_word                             ;doplusw
00034B3E <AmiBlitz3.ab3@25695>   Dc.l do_plus_long                             ;doplusl
00034B42 <AmiBlitz3.ab3@25696>   Dc.l do_plus_long                             ;doplusl
00034B46 <AmiBlitz3.ab3@25697>   Dc.l do_plus_float                            ;doplusf
00034B4A <AmiBlitz3.ab3@25698>   Ds.l 1
00034B4E <AmiBlitz3.ab3@25699>   Dc.l add_strings                              ;addstrings
00034B50 <AmiBlitz3.ab3@25700>   Dc.b $0B,$B8
00034B52 <AmiBlitz3.ab3@25702>   Dc.b $00,$2D                                  ;- ; sub
00034B56 <AmiBlitz3.ab3@25703>   Dc.l do_minus_byte                            ;dominusb
00034B5A <AmiBlitz3.ab3@25704>   Dc.l do_minus_word                            ;dominusw
00034B5E <AmiBlitz3.ab3@25705>   Dc.l do_minus_long                            ;dominusl
00034B62 <AmiBlitz3.ab3@25706>   Dc.l do_minus_long                            ;dominusl
00034B66 <AmiBlitz3.ab3@25707>   Dc.l do_minus_float                           ;dominusf
00034B6E <AmiBlitz3.ab3@25708>   Ds.l 2
00034B70 <AmiBlitz3.ab3@25709>   Dc.b $0B,$B8
00034B72 <AmiBlitz3.ab3@25711>   Dc.b $00,$2A                                  ;* ; mul
00034B76 <AmiBlitz3.ab3@25712>   Dc.l do_times_byte                            ;dotimesb
00034B7A <AmiBlitz3.ab3@25713>   Dc.l do_times_word                            ;dotimesw
00034B7E <AmiBlitz3.ab3@25714>   Dc.l do_times_long                            ;dotimesl
00034B82 <AmiBlitz3.ab3@25715>   Dc.l do_times_quick                           ;dotimesq
00034B86 <AmiBlitz3.ab3@25716>   Dc.l do_times_float                           ;dotimesf
00034B8E <AmiBlitz3.ab3@25717>   Ds.l 2
00034B90 <AmiBlitz3.ab3@25718>   Dc.b $0F,$A0
00034B92 <AmiBlitz3.ab3@25720>   Dc.b $00,$2F                                  ;/ ; div
00034B96 <AmiBlitz3.ab3@25721>   Dc.l do_Div_byte                              ;dodivb
00034B9A <AmiBlitz3.ab3@25722>   Dc.l do_Div_word                              ;dodivb
00034B9E <AmiBlitz3.ab3@25723>   Dc.l do_Div_long                              ;dodivl
00034BA2 <AmiBlitz3.ab3@25724>   Dc.l do_Div_quick                             ;dodivq
00034BA6 <AmiBlitz3.ab3@25725>   Dc.l do_Div_float                             ;dodivf
00034BAE <AmiBlitz3.ab3@25726>   Ds.l 2
00034BB0 <AmiBlitz3.ab3@25727>   Dc.b $0F,$A0
00034BB2 <AmiBlitz3.ab3@25729>   Dc.b $00,$26                                  ;& ; & int
00034BB6 <AmiBlitz3.ab3@25730>   Dc.l do_AND_byte                              ;doandb
00034BBA <AmiBlitz3.ab3@25731>   Dc.l do_AND_word                              ;doandw
00034BBE <AmiBlitz3.ab3@25732>   Dc.l do_AND_long                              ;doandl
00034BC2 <AmiBlitz3.ab3@25733>   Dc.l do_AND_long                              ;doandl
00034BCE <AmiBlitz3.ab3@25734>   Ds.l 3
00034BD0 <AmiBlitz3.ab3@25735>   Dc.b $13,$88
00034BD2 <AmiBlitz3.ab3@25737>   Dc.b $00,$7C                                  ;| ;or int ;
00034BD6 <AmiBlitz3.ab3@25738>   Dc.l do_OR_byte                               ;doorb
00034BDA <AmiBlitz3.ab3@25739>   Dc.l do_OR_word                               ;doorw
00034BDE <AmiBlitz3.ab3@25740>   Dc.l do_OR_long                               ;doorl
00034BE2 <AmiBlitz3.ab3@25741>   Dc.l do_OR_long                               ;doorl
00034BEE <AmiBlitz3.ab3@25742>   Ds.l 3
00034BF0 <AmiBlitz3.ab3@25743>   Dc.b $13,$88
00034BF2 <AmiBlitz3.ab3@25745>   Dc.b $80,$42                                  ; AND int  ;(opand-opabcd)/$1c+$8000+fnum
00034BF6 <AmiBlitz3.ab3@25746>   Dc.l do_AND_byte                              ;doandb
00034BFA <AmiBlitz3.ab3@25747>   Dc.l do_AND_word                              ;doandw
00034BFE <AmiBlitz3.ab3@25748>   Dc.l do_AND_long                              ;doandl
00034C02 <AmiBlitz3.ab3@25749>   Dc.l do_AND_long                              ;doandl
00034C0E <AmiBlitz3.ab3@25750>   Ds.l 3
00034C10 <AmiBlitz3.ab3@25751>   Dc.b $03,$E8
00034C12 <AmiBlitz3.ab3@25753>   Dc.b $80,$8A                                  ; OR int   ;(opor-opabcd)/$1c+$8000+fnum
00034C16 <AmiBlitz3.ab3@25754>   Dc.l do_OR_byte                               ;doorb
00034C1A <AmiBlitz3.ab3@25755>   Dc.l do_OR_word                               ;doorw
00034C1E <AmiBlitz3.ab3@25756>   Dc.l do_OR_long                               ;doorl
00034C22 <AmiBlitz3.ab3@25757>   Dc.l do_OR_long                               ;doorl
00034C2E <AmiBlitz3.ab3@25758>   Ds.l 3
00034C30 <AmiBlitz3.ab3@25759>   Dc.b $03,$E8
00034C32 <AmiBlitz3.ab3@25761>   Dc.b $80,$73                                  ; EOR int  ;(opeor-opabcd)/$1c+$8000+fnum
00034C36 <AmiBlitz3.ab3@25762>   Dc.l do_EOR_byte                              ;doeorb
00034C3A <AmiBlitz3.ab3@25763>   Dc.l do_EOR_word                              ;doeorw
00034C3E <AmiBlitz3.ab3@25764>   Dc.l do_EOR_long                              ;doeorl
00034C42 <AmiBlitz3.ab3@25765>   Dc.l do_EOR_long                              ;doeorl
00034C4E <AmiBlitz3.ab3@25766>   Ds.l 3
00034C50 <AmiBlitz3.ab3@25767>   Dc.b $03,$E8
00034C52 <AmiBlitz3.ab3@25769>   Dc.b $80,$7C                                  ; LSL int  ;(oplsl-opabcd)/$1c+$8000+fnum
00034C56 <AmiBlitz3.ab3@25770>   Dc.l do_LSL                                   ;dolslb
00034C5A <AmiBlitz3.ab3@25771>   Dc.l do_LSL                                   ;dolslw
00034C5E <AmiBlitz3.ab3@25772>   Dc.l do_LSL                                   ;dolsll
00034C62 <AmiBlitz3.ab3@25773>   Dc.l do_LSL                                   ;dolsll
00034C6E <AmiBlitz3.ab3@25774>   Ds.l 3
00034C70 <AmiBlitz3.ab3@25775>   Dc.b $17,$70
00034C72 <AmiBlitz3.ab3@25777>   Dc.b $80,$44                                  ; ASL int  ;(opasl-opabcd)/$1c+$8000+fnum
00034C76 <AmiBlitz3.ab3@25778>   Dc.l do_LSL                                   ;dolslb
00034C7A <AmiBlitz3.ab3@25779>   Dc.l do_LSL                                   ;dolslw
00034C7E <AmiBlitz3.ab3@25780>   Dc.l do_LSL                                   ;dolsll
00034C82 <AmiBlitz3.ab3@25781>   Dc.l do_LSL                                   ;dolsll
00034C8E <AmiBlitz3.ab3@25782>   Ds.l 3
00034C90 <AmiBlitz3.ab3@25783>   Dc.b $17,$70
00034C92 <AmiBlitz3.ab3@25785>   Dc.b $80,$7D                                  ; LSR int  ;(oplsr-opabcd)/$1c+$8000+fnum
00034C96 <AmiBlitz3.ab3@25786>   Dc.l do_LSR                                   ;dolsrb
00034C9A <AmiBlitz3.ab3@25787>   Dc.l do_LSR                                   ;dolsrw
00034C9E <AmiBlitz3.ab3@25788>   Dc.l do_LSR                                   ;dolsrl
00034CA2 <AmiBlitz3.ab3@25789>   Dc.l do_LSR                                   ;dolsrl
00034CAE <AmiBlitz3.ab3@25790>   Ds.l 3
00034CB0 <AmiBlitz3.ab3@25791>   Dc.b $17,$70
00034CB2 <AmiBlitz3.ab3@25793>   Dc.b $80,$45                                  ; ASR int  ;(opasr-opabcd)/$1c+$8000+fnum
00034CB6 <AmiBlitz3.ab3@25794>   Dc.l do_ASR                                   ;doasrb
00034CBA <AmiBlitz3.ab3@25795>   Dc.l do_ASR                                   ;doasrw
00034CBE <AmiBlitz3.ab3@25796>   Dc.l do_ASR                                   ;doasrl
00034CC2 <AmiBlitz3.ab3@25797>   Dc.l do_ASR                                   ;doasrl
00034CCE <AmiBlitz3.ab3@25798>   Ds.l 3
00034CD0 <AmiBlitz3.ab3@25799>   Dc.b $17,$70
00034CD2 <AmiBlitz3.ab3@25801>   Dc.b $80,$B9                                  ;mod       ;$8006+tnum
00034CD6 <AmiBlitz3.ab3@25802>   Dc.l do_mod_byte                              ;domodb
00034CDA <AmiBlitz3.ab3@25803>   Dc.l do_mod_word                              ;domodw
00034CDE <AmiBlitz3.ab3@25804>   Dc.l do_mod_long                              ;domodl
00034CE2 <AmiBlitz3.ab3@25805>   Dc.l do_mod_quick                             ;domodq
00034CE6 <AmiBlitz3.ab3@25806>   Dc.l do_mod_float                             ;domodf
00034CEE <AmiBlitz3.ab3@25807>   Ds.l 2
00034CF0 <AmiBlitz3.ab3@25808>   Dc.b $13,$88
00034CF2 <AmiBlitz3.ab3@25811>   Dc.b $00,$5E                                  ;^
00034CF6 <AmiBlitz3.ab3@25812>   Dc.l do_pow                                   ;dopow
00034CFA <AmiBlitz3.ab3@25813>   Dc.l do_pow                                   ;dopow
00034CFE <AmiBlitz3.ab3@25814>   Dc.l do_pow                                   ;dopow
00034D02 <AmiBlitz3.ab3@25815>   Dc.l do_pow                                   ;dopow
00034D06 <AmiBlitz3.ab3@25816>   Dc.l do_pow                                   ;dopow
00034D0E <AmiBlitz3.ab3@25817>   Ds.l 2
00034D10 <AmiBlitz3.ab3@25818>   Dc.b $1B,$58                                  ;7000
00034D12 <AmiBlitz3.ab3@25821>   Dc.b $00,$3D                                  ;=
00034D16 <AmiBlitz3.ab3@25822>   Dc.l do_equal_byte                            ;doeqb
00034D1A <AmiBlitz3.ab3@25823>   Dc.l do_equal_word                            ;doeqw
00034D1E <AmiBlitz3.ab3@25824>   Dc.l do_equal_long                            ;doeql
00034D22 <AmiBlitz3.ab3@25825>   Dc.l do_equal_long                            ;doeql
00034D26 <AmiBlitz3.ab3@25826>   Dc.l do_equal_float                           ;doeqf
00034D2A <AmiBlitz3.ab3@25827>   Dc.l do_equal_long                            ;doeql
00034D2E <AmiBlitz3.ab3@25828>   Dc.l do_equal_string                          ;doeqs
00034D30 <AmiBlitz3.ab3@25829>   Dc.b $07,$D0                                  ;2000
00034D32 <AmiBlitz3.ab3@25832>   Dc.b $3C,$3E                                  ;<>
00034D36 <AmiBlitz3.ab3@25833>   Dc.l do_not_equal_byte                        ;doneb
00034D3A <AmiBlitz3.ab3@25834>   Dc.l do_not_equal_word                        ;donew
00034D3E <AmiBlitz3.ab3@25835>   Dc.l do_not_equal_long                        ;donel
00034D42 <AmiBlitz3.ab3@25836>   Dc.l do_not_equal_long                        ;donel
00034D46 <AmiBlitz3.ab3@25837>   Dc.l do_not_equal_float                       ;donef
00034D4A <AmiBlitz3.ab3@25838>   Dc.l do_not_equal_long                        ;donel
00034D4E <AmiBlitz3.ab3@25839>   Dc.l do_not_equal_string                      ;dones
00034D50 <AmiBlitz3.ab3@25840>   Dc.b $07,$D0                                  ;2000
00034D52 <AmiBlitz3.ab3@25843>   Dc.b $00,$3C                                  ;<
00034D56 <AmiBlitz3.ab3@25844>   Dc.l do_littler_byte                          ;doltb
00034D5A <AmiBlitz3.ab3@25845>   Dc.l do_littler_word                          ;doltw
00034D5E <AmiBlitz3.ab3@25846>   Dc.l do_littler_long                          ;doltl
00034D62 <AmiBlitz3.ab3@25847>   Dc.l do_littler_long                          ;doltl
00034D66 <AmiBlitz3.ab3@25848>   Dc.l do_littler_float                         ;doltf
00034D6A <AmiBlitz3.ab3@25849>   Dc.l do_littler_long                          ;doltl
00034D6E <AmiBlitz3.ab3@25850>   Dc.l do_littler_string                        ;dolts
00034D70 <AmiBlitz3.ab3@25851>   Dc.b $07,$D0                                  ;2000
00034D72 <AmiBlitz3.ab3@25854>   Dc.b $3C,$3D                                  ;<=
00034D76 <AmiBlitz3.ab3@25855>   Dc.l do_littler_equal_byte                    ;doleb
00034D7A <AmiBlitz3.ab3@25856>   Dc.l do_littler_equal_word                    ;doleb
00034D7E <AmiBlitz3.ab3@25857>   Dc.l do_littler_equal_long                    ;dolel
00034D82 <AmiBlitz3.ab3@25858>   Dc.l do_littler_equal_long                    ;dolel
00034D86 <AmiBlitz3.ab3@25859>   Dc.l do_littler_equal_float                   ;dolef
00034D8A <AmiBlitz3.ab3@25860>   Dc.l do_littler_equal_long                    ;dolel
00034D8E <AmiBlitz3.ab3@25861>   Dc.l do_littler_equal_string                  ;doles
00034D90 <AmiBlitz3.ab3@25862>   Dc.b $07,$D0                                  ;2000
00034D92 <AmiBlitz3.ab3@25865>   Dc.b $00,$3E                                  ;>
00034D96 <AmiBlitz3.ab3@25866>   Dc.l do_greater_byte                          ;dogtb
00034D9A <AmiBlitz3.ab3@25867>   Dc.l do_greater_word                          ;dogtw
00034D9E <AmiBlitz3.ab3@25868>   Dc.l do_greater_long                          ;dogtl
00034DA2 <AmiBlitz3.ab3@25869>   Dc.l do_greater_long                          ;dogtl
00034DA6 <AmiBlitz3.ab3@25870>   Dc.l do_greater_float                         ;dogtf
00034DAA <AmiBlitz3.ab3@25871>   Dc.l do_greater_long                          ;dogtl
00034DAE <AmiBlitz3.ab3@25872>   Dc.l do_greater_string                        ;dogts
00034DB0 <AmiBlitz3.ab3@25873>   Dc.b $07,$D0                                  ;2000
00034DB2 <AmiBlitz3.ab3@25876>   Dc.b $3E,$3D                                  ;>=
00034DB6 <AmiBlitz3.ab3@25877>   Dc.l do_greater_equal_byte                    ;dogeb
00034DBA <AmiBlitz3.ab3@25878>   Dc.l do_greater_equal_word                    ;dogew
00034DBE <AmiBlitz3.ab3@25879>   Dc.l do_greater_equal_long                    ;dogel
00034DC2 <AmiBlitz3.ab3@25880>   Dc.l do_greater_equal_long                    ;dogel
00034DC6 <AmiBlitz3.ab3@25881>   Dc.l do_greater_equal_float                   ;dogef
00034DCA <AmiBlitz3.ab3@25882>   Dc.l do_greater_equal_long                    ;dogel
00034DCE <AmiBlitz3.ab3@25883>   Dc.l do_greater_equal_string                  ;doges
00034DD0 <AmiBlitz3.ab3@25884>   Dc.b $07,$D0                                  ;2000
00034DD2 <AmiBlitz3.ab3@25886>   Dc.b $80,$CD                                  ;$8000+26+tnum
00034DD6 <AmiBlitz3.ab3@25887>   Dc.l _BitTst
00034DDA <AmiBlitz3.ab3@25888>   Dc.l _BitTst
00034DDE <AmiBlitz3.ab3@25889>   Dc.l _BitTst
00034DE2 <AmiBlitz3.ab3@25890>   Dc.l _BitTst
00034DEE <AmiBlitz3.ab3@25891>   Ds.l 3
00034DF0 <AmiBlitz3.ab3@25892>   Dc.b $1F,$40                                  ;8000
00034DF2 <AmiBlitz3.ab3@25894>   Dc.b $80,$CE                                  ;$8000+27+tnum
00034DF6 <AmiBlitz3.ab3@25895>   Dc.l _BitSet
00034DFA <AmiBlitz3.ab3@25896>   Dc.l _BitSet
00034DFE <AmiBlitz3.ab3@25897>   Dc.l _BitSet
00034E02 <AmiBlitz3.ab3@25898>   Dc.l _BitSet
00034E0E <AmiBlitz3.ab3@25899>   Ds.l 3
00034E10 <AmiBlitz3.ab3@25900>   Dc.b $1F,$40                                  ;8000
00034E12 <AmiBlitz3.ab3@25902>   Dc.b $80,$CF                                  ;$8000+28+tnum
00034E16 <AmiBlitz3.ab3@25903>   Dc.l _BitClr
00034E1A <AmiBlitz3.ab3@25904>   Dc.l _BitClr
00034E1E <AmiBlitz3.ab3@25905>   Dc.l _BitClr
00034E22 <AmiBlitz3.ab3@25906>   Dc.l _BitClr
00034E2E <AmiBlitz3.ab3@25907>   Ds.l 3
00034E30 <AmiBlitz3.ab3@25908>   Dc.b $1F,$40                                  ;8000
00034E32 <AmiBlitz3.ab3@25910>   Dc.b $80,$D0                                  ;$8000+29+tnum
00034E36 <AmiBlitz3.ab3@25911>   Dc.l _BitChg
00034E3A <AmiBlitz3.ab3@25912>   Dc.l _BitChg
00034E3E <AmiBlitz3.ab3@25913>   Dc.l _BitChg
00034E42 <AmiBlitz3.ab3@25914>   Dc.l _BitChg
00034E4E <AmiBlitz3.ab3@25915>   Ds.l 3
00034E50 <AmiBlitz3.ab3@25916>   Dc.b $1F,$40                                  ;8000
00034E52 <AmiBlitz3.ab3@25918>   Dc.b $00,$00
00034E56 <AmiBlitz3.ab3@25923> modetable:   Dc.l typemode
00034E5A <AmiBlitz3.ab3@25926> newtypebase: Dc.l newtype_byte
00034E62 <AmiBlitz3.ab3@25929>   Dc.l newtype_word,$01                                    
00034E64 <AmiBlitz3.ab3@25930>   Dc.w $0001
00034E68 <AmiBlitz3.ab3@25931>   Dc.b 13,"b",0,0
00034E70 <AmiBlitz3.ab3@25934>   Dc.l newtype_long,$02
00034E72 <AmiBlitz3.ab3@25935>   Dc.w $0002
00034E76 <AmiBlitz3.ab3@25936>   Dc.b 13,"w",0,0
00034E7E <AmiBlitz3.ab3@25939>   Dc.l newtype_quick,$03                                   
00034E80 <AmiBlitz3.ab3@25940>   Dc.w $0004
00034E84 <AmiBlitz3.ab3@25941>   Dc.b 13,"l",0,0
00034E8C <AmiBlitz3.ab3@25944>   Dc.l newtype_float,$04                                   
00034E8E <AmiBlitz3.ab3@25945>   Dc.w $0004
00034E92 <AmiBlitz3.ab3@25946>   Dc.b 13,"q",0,0
00034E9A <AmiBlitz3.ab3@25950>   Dc.l newtype_double,$05                                  ;make problems on old residents
00034E9C <AmiBlitz3.ab3@25951>   Dc.w $0004
00034EA0 <AmiBlitz3.ab3@25952>   Dc.b 13,"f",0,0
00034EA8 <AmiBlitz3.ab3@25955>   Dc.l newtype_double,$06
00034EAA <AmiBlitz3.ab3@25956>   Dc.w $0004
00034EAE <AmiBlitz3.ab3@25957>   Dc.b 13,"a",0,0
00034EB6 <AmiBlitz3.ab3@25960>   Dc.l newtype_string,$05                                  ;?? has to by $06 becous is number 6 not 5
00034EB8 <AmiBlitz3.ab3@25961>   Dc.w $0008
00034EBC <AmiBlitz3.ab3@25962>   Dc.b 13,"d",0,0
00034EC4 <AmiBlitz3.ab3@25966>   Dc.l $0000000,$07                                        ;stringtype
00034EC6 <AmiBlitz3.ab3@25967>   Dc.w $0004
00034ECA <AmiBlitz3.ab3@25968>   Dc.b 13,"s",0,0
00034ED2 <AmiBlitz3.ab3@25971>   Dc.l $00,$00
00034ED4 <AmiBlitz3.ab3@25972>   Dc.w $0000
00034ED8 <AmiBlitz3.ab3@25973>   Dc.b $01,$00,$00,$00
00034F38 <AmiBlitz3.ab3@25976> incdir:               Ds.l 24                              ;dcb.b   96,0    org source
00034F3A <AmiBlitz3.ab3@25980> dirmode:              Ds.w 1                               ;shows if directmode is on
00034F3E <AmiBlitz3.ab3@25982>                       Ds.l 1                               ;int org source ;intuition!
00034F40 <AmiBlitz3.ab3@25983> maxobject_pos:        Ds.w 1                               ;maxat org source ;max at
00034F44 <AmiBlitz3.ab3@25984> maxsat:               Ds.l 1                               ;data1 info pos
00034F46 <AmiBlitz3.ab3@25985> number_of_objects:    Ds.w 1                               ;nummaxs org source ;number of maximums
00034F48 <AmiBlitz3.ab3@25987> maxsused:             Ds.w 1                               ;maximums used in prog
00034F4A <AmiBlitz3.ab3@25991> dark:                 Ds.w 1                               ;dark compile?
00034F4C <AmiBlitz3.ab3@25992> qlab:                 Ds.w 1                               ;quick lab allocate
00034F50 <AmiBlitz3.ab3@25993> defaulttype:          Dc.l newtype_quick                   ;dc.l quicktype org source
00034F52 <AmiBlitz3.ab3@25998> anyerrs:              Dc.w -1                              ;Any Errors in compile ?
00034F54 <AmiBlitz3.ab3@25999> debugversion:         Ds.w 1                               ;makeexec org source ;make an executable file!
00034F58 <AmiBlitz3.ab3@26000> noinits:              Ds.l 1                               ;flag for if we have any init routines!
00034F5C <AmiBlitz3.ab3@26002> letstart:             Ds.l 1
00034F5E <AmiBlitz3.ab3@26003> dontwrite:            Ds.w 1                               ;nomemleft org source
00034FDE <AmiBlitz3.ab3@26004> lastgloballabel:      Ds.l 32                              ;lastbiglab ds.b 128 org source
00034FE2 <AmiBlitz3.ab3@26006> locdatast:            Ds.l 1
00034FE6 <AmiBlitz3.ab3@26007> firstpend:            Ds.l 1
00034FEA <AmiBlitz3.ab3@26011> data2at:              Ds.l 1
00034FEE <AmiBlitz3.ab3@26012> data2:                Ds.l 1
00034FF2 <AmiBlitz3.ab3@26013> data1start:           Ds.l 1                               ;data1at org source
00034FF6 <AmiBlitz3.ab3@26014> data1:                Ds.l 1                               ;pc for initialized data!
00034FFA <AmiBlitz3.ab3@26015> destbufferstart:      Ds.l 1                               ;pcat org source
00034FFE <AmiBlitz3.ab3@26019> destbufferend:        Ds.l 1                               ;libat org source
00035002 <AmiBlitz3.ab3@26020> libend:               Ds.l 1                               ;lib org source
00035006 <AmiBlitz3.ab3@26021> allat:                Ds.l 1                               ;highest allocmemd location for code
00035010 <AmiBlitz3.ab3@26022> dummyasm:             Dc.w 0,0,0,0,0
00035014 <AmiBlitz3.ab3@26023>                       Dc.l 0
00035016 <AmiBlitz3.ab3@26024>                       Dc.w 0
0003501A <AmiBlitz3.ab3@26028> buff1:                Ds.l 1                               ;buffer for text get
0003501E <AmiBlitz3.ab3@26029> buff2:                Ds.l 1                               ;ditto for dest
00035020 <AmiBlitz3.ab3@26030> constmode:            Ds.w 1                               ;0 for norm, <>0 for assembler
00035022 <AmiBlitz3.ab3@26031> asmtype:              Ds.w 1                               ;0=contains no prog reference
00035024 <AmiBlitz3.ab3@26032> extraword:            Ds.w 1                               ;the extension word for assembler
00035026 <AmiBlitz3.ab3@26033> extraword2:           Ds.w 1                               ;ditto
00035028 <AmiBlitz3.ab3@26034> asmsize:              Ds.w 1
0003502C <AmiBlitz3.ab3@26035> asmbuff:              Ds.l 1
0003502E <AmiBlitz3.ab3@26036> asmlen:               Ds.w 1                               ;first (src) text len
00035030 <AmiBlitz3.ab3@26037> asmlen2:              Ds.w 1                               ;second (dest)
00035034 <AmiBlitz3.ab3@26038> templabel:            Ds.l 1                               ;linked list of expressions to resolve
00035036 <AmiBlitz3.ab3@26041> macnum:               Ds.w 1
0003503A <AmiBlitz3.ab3@26043>                       Dc.l 0                               ;address of next 0 in include fil
0003503E <AmiBlitz3.ab3@26044> titleat:              Ds.l 1                               ;5 longs for compile streaks
00035048 <AmiBlitz3.ab3@26045> progress_per_line:    Ds.w 5                               ;titleadd ds 5 org source ;5 adds for compile streaks
0003504A <AmiBlitz3.ab3@26046> connest:              Ds.w 1                               ;conditional nest level
0003504E <AmiBlitz3.ab3@26047> firstconst:           Ds.l 1                               ;first constant (#a)
00035050 <AmiBlitz3.ab3@26048> numarg:               Ds.w 1                               ;number of macro arguements
00035054 <AmiBlitz3.ab3@26049> myoline:              Ds.l 1                               ;macro done yet?
00035058 <AmiBlitz3.ab3@26050> myline:               Ds.l 1                               ;pointer to some memory to create
0003505C <AmiBlitz3.ab3@26053>                       Ds.l 1
0003509C <AmiBlitz3.ab3@26054> concomstack:          Ds.l 16                              ;32 deep conditional compilation
000350A0 <AmiBlitz3.ab3@26055> concomsp:             Dc.l concomstack                     ;stack pointer
000350A2 <AmiBlitz3.ab3@26056> oldqflag:             Ds.w 1
000350A6 <AmiBlitz3.ab3@26059>                       Ds.l 1
000350A8 <AmiBlitz3.ab3@26061>                       Ds.w 1
000350AC <AmiBlitz3.ab3@26062> firstfor:             Ds.l 1                               ;first for
000350AE <AmiBlitz3.ab3@26063> stackpar:             Ds.w 1                               ;pushflag org source ;1 par to stack 0 normal
000350B0 <AmiBlitz3.ab3@26064> sbgot:                Ds.w 1                               ;flag for string got 2
000350B2 <AmiBlitz3.ab3@26065> convsize:             Ds.w 1                               ;usertype org source
000350B4 <AmiBlitz3.ab3@26066> userp:                Ds.w 1
000350B8 <AmiBlitz3.ab3@26071> ptr_userlibs_list:    Ds.l 1                               ;libslist org source
000350BA <AmiBlitz3.ab3@26072> a2offset:             Ds.w 1                               ;stackuse org source ;stack used when gathering lib parameters
000350BC <AmiBlitz3.ab3@26073> numreps:              Ds.w 1                               ;number of repeats in a repeatable
000350C0 <AmiBlitz3.ab3@26075> locloc:               Ds.l 1
000350C2 <AmiBlitz3.ab3@26076> locchar:              Ds.w 1
00035142 <AmiBlitz3.ab3@26077> stbuff:               Ds.l 32                              ;was 8    ;six string varoffs
00035144 <AmiBlitz3.ab3@26078> commode:              Ds.w 1                               ;in comma mode...
00035148 <AmiBlitz3.ab3@26079> lastoffset_org:       Ds.l 1                               ;lastoffset org source ;last offset in calcvar!
0003514C <AmiBlitz3.ab3@26080> linenumat:            Dc.l $FFFFFFFF                       ;linecounter ;dc -1 org source ;line being processed
00035150 <AmiBlitz3.ab3@26081> compilelinecounter:   Dc.l $FFFFFFFF                       ;menuret dc -1 org source ;menu return code
00035152 <AmiBlitz3.ab3@26083>                       Ds.w 1                               ;opt reset offset
00035252 <AmiBlitz3.ab3@26085>                       Ds.l 64                              ;Ds.b vcodelen org source ;code used to generate
00035352 <AmiBlitz3.ab3@26087>                       Ds.l 64                              ;Ds.b vcodelen org source ;above for let.....
00035354 <AmiBlitz3.ab3@26088> varcodelen:           Ds.w 1                               ;and length
00035356 <AmiBlitz3.ab3@26090>                       Ds.w 1
0003535C <AmiBlitz3.ab3@26091> oldvcodelen:          Ds.w 3                               ;old varcodelen
00035360 <AmiBlitz3.ab3@26095> tempvm:               Ds.l 1                               ;memlib org source ;address of memory library
00035362 <AmiBlitz3.ab3@26096> memlibstat:           Ds.w 1                               ;status of memory library during
00035364 <AmiBlitz3.ab3@26099>                       Dc.w 0
00035366 <AmiBlitz3.ab3@26101>                       Dc.w 0
00035368 <AmiBlitz3.ab3@26103> varmode:              Ds.w 1                               ;0 a5 pointer to global
0003536C <AmiBlitz3.ab3@26105> currentfunction:      Ds.l 1                               ;thisproc org source
00035370 <AmiBlitz3.ab3@26106> firstproc:            Ds.l 1                               ;firstproc org source ;this procedure being 'done'
00035372 <AmiBlitz3.ab3@26107> 
00035374 <AmiBlitz3.ab3@26109> skipcode:             Ds.w 1                               ;nocompile ;comflag org source ;0 if no compile
00035378 <AmiBlitz3.ab3@26110> passstack:            Ds.l 1
0003537C <AmiBlitz3.ab3@26111> zero:                 Ds.l 1                               ;ZERO!
0003537E <AmiBlitz3.ab3@26112> ininclude:            Ds.w 1                               ;numincs org source ;number of include files
00035382 <AmiBlitz3.ab3@26114> xinclude_base:        Ds.l 1                               ;firstxinc org source ;first exclusive include.
00035386 <AmiBlitz3.ab3@26115> constantbase:         Ds.l 1                               ;firstinc org source ;first include
00035388 <AmiBlitz3.ab3@26116> lasta6:               Dc.w $FFFF                           ;-1 org source
0003538A <AmiBlitz3.ab3@26117> instringon:           Ds.w 1                               ;quoteflag org source
0003538E <AmiBlitz3.ab3@26118> ptr_macrobuffer_begin:Ds.l 1                               ;macrobuff org source ;pointer to macro collection buffer ;begin
00035392 <AmiBlitz3.ab3@26119> ptr_macrobuffer_end:  Ds.l 1                               ;macrobufff org source ;end of above ;end of
00035396 <AmiBlitz3.ab3@26120> macrobase:            Ds.l 1                               ;firstmacro org source ;linked list of macro's ;macrolist
0003539A <AmiBlitz3.ab3@26121> endop:                Ds.l 1                               ;end of program pc - before finishups!
0003539E <AmiBlitz3.ab3@26122> labelbase:            Ds.l 1                               ;firstlabel org source ;first lib struct
000353A2 <AmiBlitz3.ab3@26123> end_of_tokenlist:     Ds.l 1                               ;lasttoken org source
000353A4 <AmiBlitz3.ab3@26124> numstatic:            Ds.w 1                               ;number of static structs
000353A8 <AmiBlitz3.ab3@26125> staticdata:           Ds.l 1                               ;data1 val for statics
000353AC <AmiBlitz3.ab3@26126> libpointer:           Ds.l 1                               ;firstlib org source ;first lib struct
000353AE <AmiBlitz3.ab3@26127> sbasegot:             Ds.w 1                               ;string base got?
000353B2 <AmiBlitz3.ab3@26128> litdata1:             Ds.l 1
000353B6 <AmiBlitz3.ab3@26132> objlen:               Ds.l 1
000353BA <AmiBlitz3.ab3@26133> hunkoffsetcounter:    Ds.l 1                               ;numoffs org source
000353BE <AmiBlitz3.ab3@26134> hunkoffsetbase:       Ds.l 1                               ;firstoff org source ;pointer to linked list
000353C0 <AmiBlitz3.ab3@26136> flagmask:             Ds.w 1                               ;mask for flag of variable when
000353C2 <AmiBlitz3.ab3@26138> notshared:            Ds.w 1                               ;added org source ;flag for seeing if variable was added!
000353C4 <AmiBlitz3.ab3@26139> nonew:                Ds.w 1                               ;1 to inhibit new variable creation
000353C8 <AmiBlitz3.ab3@26140> temp1:                Ds.l 1
000353CC <AmiBlitz3.ab3@26141> temp2:                Ds.l 1
000353D0 <AmiBlitz3.ab3@26143> ptr_parameterstore:   Ds.l 1                               ;namebuff ds.b 128 org source
000353D4 <AmiBlitz3.ab3@26144> fib_DirEntryType:     Ds.l 1                               ;namebuff+4 org source
00035448 <AmiBlitz3.ab3@26145> fib_FileName:         Ds.l 29                              ;namebuff+8 org source
0003544C <AmiBlitz3.ab3@26146> fib_Size:             Ds.l 1                               ;namebuff+124 org source
000354CC <AmiBlitz3.ab3@26148> namebuff2:            Ds.b 128
000354D4 <AmiBlitz3.ab3@26149>                       Ds.b 8                               ;for fileinfoblock
00035514 <AmiBlitz3.ab3@26152> optstuff:             Ds.b 64                              ;temp opt make buffer
00035516 <AmiBlitz3.ab3@26169>   Dc.b $00,$01                                             ; 1 byte schreiben ;one byte stuff...
0003551A <AmiBlitz3.ab3@26170>   Dc.l xtra_versionnumber                                  ; vers org source
0003551E <AmiBlitz3.ab3@26171>   Dc.l create_iconfile                                     ; create icon for executable
00035522 <AmiBlitz3.ab3@26172>   Ds.l 1
00035524 <AmiBlitz3.ab3@26174>   Dc.b $00,$02                                             ; 2 bytes schreiben  ;two byte stuff...
00035528 <AmiBlitz3.ab3@26177>   Dc.l set_use_debugger
0003552C <AmiBlitz3.ab3@26178>   Dc.l AL_0_11010                                          ;+obsolet: debugger
00035530 <AmiBlitz3.ab3@26179>   Dc.l AL_0_1103C                                          ;+obsolet: long arrays
00035534 <AmiBlitz3.ab3@26180>   Dc.l AL_0_11068                                          ;+obsolet: expand macros
00035538 <AmiBlitz3.ab3@26181>   Dc.l AL_0_11094                                          ;+obsolet: quoted macros
0003553C <AmiBlitz3.ab3@26182>   Dc.l set_make_smallestcode
00035540 <AmiBlitz3.ab3@26183>   Dc.l set_link_debuginfo
00035544 <AmiBlitz3.ab3@26184>   Dc.l set_autorun
00035548 <AmiBlitz3.ab3@26185>   Dc.l set_interruptcheck
0003554C <AmiBlitz3.ab3@26186>   Dc.l set_assemblercheck
00035550 <AmiBlitz3.ab3@26188>   Dc.l set_overflowcheck
00035554 <AmiBlitz3.ab3@26189>   Dc.l default_obsolete                                    ;+obsolet: ohne inhalt
00035558 <AmiBlitz3.ab3@26190>   Dc.l default_interruptcheck                              ;+obsolet: interruptcheck vorgabe
0003555C <AmiBlitz3.ab3@26191>   Dc.l default_overflowcheck                               ;+obsolet: overflow vorgabe
00035560 <AmiBlitz3.ab3@26194>   Ds.l 1
00035562 <AmiBlitz3.ab3@26196>   Dc.b $00,$04                                             ; 4 bytes schreiben..  ;four byte stuff...
00035566 <AmiBlitz3.ab3@26203>   Dc.l objectbuffer
0003556A <AmiBlitz3.ab3@26204>   Dc.l libsbuffer
0003556E <AmiBlitz3.ab3@26205>   Dc.l systembuffer
00035572 <AmiBlitz3.ab3@26206>   Dc.l databuffer
00035576 <AmiBlitz3.ab3@26207>   Dc.l macrobuffer_size
0003557A <AmiBlitz3.ab3@26208>   Dc.l stringbuffer
0003557E <AmiBlitz3.ab3@26211>   Ds.l 1
00035580 <AmiBlitz3.ab3@26215>   Dc.b $02,$20                                             ;dc 68*8; 544 bytes schreiben.
00035588 <AmiBlitz3.ab3@26216>   Dc.l residents_table,0
0003558A <AmiBlitz3.ab3@26220>   Dc.b $01,$80                                             ;dc 192*2; 384 bytes schreiben
00035592 <AmiBlitz3.ab3@26221>   Dc.l exepath,0                                           ; exepath und exefilename jeweils 192 bytes
00035594 <AmiBlitz3.ab3@26222>   Ds.w 1
00035690 <AmiBlitz3.ab3@26226>   Ds.l 63
0003578C <AmiBlitz3.ab3@26227>   Ds.l 63
00035888 <AmiBlitz3.ab3@26228>   Ds.l 63
0003596A <AmiBlitz3.ab3@26229>   Ds.w 113
0003596C <AmiBlitz3.ab3@26232> comsettings_message:  Ds.w 1                               ;allchg org source
0003596E <AmiBlitz3.ab3@26233> xtra_versionnumber:   Ds.w 1                               ;vers org source
00035974 <AmiBlitz3.ab3@26237>   CLR.b exefilename
00035976 <AmiBlitz3.ab3@26238>   TST.l d0
0003597A <AmiBlitz3.ab3@26239>   BNE read_xtrafile__l10
0003597C <AmiBlitz3.ab3@26240> RTS
00035982 <AmiBlitz3.ab3@26243>   JSR free_residents                                       ;jsr freeres2 org source
00035988 <AmiBlitz3.ab3@26244> 
0003598E <AmiBlitz3.ab3@26245>   LEA ptr_xtradata,A2
00035990 <AmiBlitz3.ab3@26246>   MOVEQ.l #$00,D4
00035992 <AmiBlitz3.ab3@26249>     MOVE.w (A2)+,D4                                        ; anzahl bytes zum lesen
00035996 <AmiBlitz3.ab3@26250>     BEQ.b read_xtrafile__done
00035998 <AmiBlitz3.ab3@26253>     MOVE.l (A2)+,D2
0003599C <AmiBlitz3.ab3@26254>   BEQ.b read_xtrafile__loop
0003599E <AmiBlitz3.ab3@26256>   MOVE.l D4,D3
000359A0 <AmiBlitz3.ab3@26257>   MOVE.l D7,D1
000359A4 <AmiBlitz3.ab3@26258>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
000359A6 <AmiBlitz3.ab3@26259>   TST.l D0
000359AA <AmiBlitz3.ab3@26260>   BNE.b read_xtrafile__loop2
000359AE <AmiBlitz3.ab3@26261> BRA.w read_xtrafile__done2
000359B4 <AmiBlitz3.ab3@26264>   TST.b xtra_versionnumber
000359B8 <AmiBlitz3.ab3@26265>    BNE.b read_xtrafile__nover0
000359C0 <AmiBlitz3.ab3@26266>   MOVE.w #$0080,set_autorun                                ;auto run on
000359CA <AmiBlitz3.ab3@26267>   MOVE.w default_interruptcheck,set_interruptcheck         ;interupt checking on
000359D0 <AmiBlitz3.ab3@26268>   CLR.w set_assemblercheck                                 ;assembler checking off
000359DA <AmiBlitz3.ab3@26269>   MOVE.w default_overflowcheck,set_overflowcheck           ;overflow chex
000359DE <AmiBlitz3.ab3@26270> BRA.b read_xtrafile__ver0
000359E0 <AmiBlitz3.ab3@26273>   MOVE.l D7,D1                                             ;load cli arg!
000359E6 <AmiBlitz3.ab3@26274>   MOVE.l #str_cliarguments,D2
000359EC <AmiBlitz3.ab3@26275>   MOVE.l #116,D3                                           ; vorher 128 , jetzt 8 weniger fuer die Versionsdaten
000359F0 <AmiBlitz3.ab3@26276>   JSR _Read(A6)                                            ; d1: file, d2: buffer, d3:length
000359F6 <AmiBlitz3.ab3@26277>   MOVE.l #str_cliarguments,A0
000359FC <AmiBlitz3.ab3@26278>   ADDA.l #115,A0
00035A02 <AmiBlitz3.ab3@26279>   MOVE.l #0,(a0) ; terminate it!
00035A04 <AmiBlitz3.ab3@26281>   MOVE.l D7,D1                                             ; I know, I know. Honitos started this horrible thing, see below...
00035A0A <AmiBlitz3.ab3@26282>   MOVE.l #stacksize,D2
00035A10 <AmiBlitz3.ab3@26283>   MOVE.l #4,D3
00035A14 <AmiBlitz3.ab3@26284>   JSR _Read(A6)
00035A1E <AmiBlitz3.ab3@26285>   CMP.l ##MIN_STACKSIZE,stacksize
00035A22 <AmiBlitz3.ab3@26286>   BGE 'stackok
00035A2C <AmiBlitz3.ab3@26287>   MOVE.l ##MIN_STACKSIZE,stacksize
00035A2E <AmiBlitz3.ab3@26290>   MOVE.l D7,D1
00035A34 <AmiBlitz3.ab3@26291>   MOVE.l #versioninformation,D2
00035A3A <AmiBlitz3.ab3@26292>   MOVE.l #4,D3
00035A3E <AmiBlitz3.ab3@26293>   JSR _Read(A6)
00035A40 <AmiBlitz3.ab3@26295>   MOVE.l D7,D1
00035A46 <AmiBlitz3.ab3@26296>   MOVE.l #number_of_builds,D2
00035A4C <AmiBlitz3.ab3@26297>   MOVE.l #4,D3
00035A50 <AmiBlitz3.ab3@26298>   JSR _Read(A6)
00035A56 <AmiBlitz3.ab3@26304> 
00035A5C <AmiBlitz3.ab3@26305>   MOVE.l A7,errstack
00035A66 <AmiBlitz3.ab3@26306>   MOVE.l #read_xtrafile__done2,errcont
00035A6E <AmiBlitz3.ab3@26307>   MOVE.w #$FFFF,ezerr
00035A74 <AmiBlitz3.ab3@26310>     MOVE.l #temp1,D2                                   ;LOAD maxobjectsvalues
00035A76 <AmiBlitz3.ab3@26311>     MOVEQ.l #$04,D3
00035A78 <AmiBlitz3.ab3@26312>     MOVE.l D7,D1
00035A7C <AmiBlitz3.ab3@26313>     JSR _Read(A6)
00035A7E <AmiBlitz3.ab3@26314>     TST.l D0
00035A82 <AmiBlitz3.ab3@26315>     BEQ.b read_xtrafile__done2
00035A88 <AmiBlitz3.ab3@26316>     MOVE.w temp1,D1
00035A8A <AmiBlitz3.ab3@26317>     TST.w d1                                               ;new
00035A8E <AmiBlitz3.ab3@26318>     BEQ read_xtrafile__done2                                         ;new
00035A94 <AmiBlitz3.ab3@26319>      JSR AJL_0_6F1A
00035A9A <AmiBlitz3.ab3@26321>     CMP.l #0,a1
00035A9E <AmiBlitz3.ab3@26322>     BEQ read_xtrafile__dloop
00035AA2 <AmiBlitz3.ab3@26323>     MOVE.l $12(A1),D0
00035AAA <AmiBlitz3.ab3@26324>     MOVE.w temp1+2,-$4(A1,D0.L)
00035AAE <AmiBlitz3.ab3@26325> BRA.b read_xtrafile__dloop
00035AB2 <AmiBlitz3.ab3@26331>   LEA residents_table(PC),A0
00035AB4 <AmiBlitz3.ab3@26332>   MOVEQ.l #$07,D0
00035AB8 <AmiBlitz3.ab3@26335>     CLR.l $40(A0)
00035ABC <AmiBlitz3.ab3@26336>     LEA ResidentEntryStep(A0),A0   ; $44
00035AC0 <AmiBlitz3.ab3@26337>   DBF D0,read_xtrafile__loop3
00035AC4 <AmiBlitz3.ab3@26339>   MOVEM.l D7/A6,-(A7)
00035ACA <AmiBlitz3.ab3@26340>   JSR init_buffers
00035AD0 <AmiBlitz3.ab3@26341>   JSR reloadresident
00035AD4 <AmiBlitz3.ab3@26342>   MOVEM.l (A7)+,D7/A6
00035AD6 <AmiBlitz3.ab3@26343> RTS
00035ADE <AmiBlitz3.ab3@26347>   MOVE.b #$1,xtra_versionnumber                            ;.xtra version number...
00035AE4 <AmiBlitz3.ab3@26356>   LEA ptr_xtradata,A2
00035AE6 <AmiBlitz3.ab3@26357>   MOVEQ.l #$00,D4
00035AE8 <AmiBlitz3.ab3@26361>   MOVE.w (A2)+,D4                                          ; anzahl bytes zu schreiben
00035AEC <AmiBlitz3.ab3@26362>   BEQ.b write_xtrafile__done
00035AEE <AmiBlitz3.ab3@26365>    MOVE.l (A2)+,D2
00035AF2 <AmiBlitz3.ab3@26366>    BEQ.b write_xtrafile__loop
00035AF4 <AmiBlitz3.ab3@26368>    MOVE.l D4,D3
00035AF6 <AmiBlitz3.ab3@26369>    MOVE.l D7,D1                                            ; schreiben der daten in ptr_xtradata
00035AFA <AmiBlitz3.ab3@26370>    JSR _Write(A6)                                          ; d1: file, d2: buffer, d3:length
00035AFE <AmiBlitz3.ab3@26371> BRA.b write_xtrafile__loop2
00035B00 <AmiBlitz3.ab3@26374>   MOVE.l D7,D1
00035B06 <AmiBlitz3.ab3@26375>   MOVE.l #str_cliarguments,D2
00035B0C <AmiBlitz3.ab3@26376>   MOVE.l #116,D3
00035B10 <AmiBlitz3.ab3@26377>   JSR _Write(A6)                                           ; hier werden 116 bytes an cli_arguments geschrieben !!
00035B12 <AmiBlitz3.ab3@26379>   MOVE.l D7,D1
00035B18 <AmiBlitz3.ab3@26380>   MOVE.l #stacksize,D2
00035B1E <AmiBlitz3.ab3@26381>   MOVE.l #4,D3
00035B22 <AmiBlitz3.ab3@26382>   JSR _Write(A6)
00035B24 <AmiBlitz3.ab3@26384>   MOVE.l D7,D1
00035B2A <AmiBlitz3.ab3@26385>   MOVE.l #versioninformation,D2
00035B30 <AmiBlitz3.ab3@26386>   MOVE.l #4,D3
00035B34 <AmiBlitz3.ab3@26387>   JSR _Write(A6)
00035B36 <AmiBlitz3.ab3@26389>   MOVE.l D7,D1
00035B3C <AmiBlitz3.ab3@26390>   MOVE.l #number_of_builds,D2
00035B42 <AmiBlitz3.ab3@26391>   MOVE.l #4,D3
00035B46 <AmiBlitz3.ab3@26392>   JSR _Write(A6)
00035B4C <AmiBlitz3.ab3@26398>   LEA libpointer,A2
00035B4E <AmiBlitz3.ab3@26401>     MOVE.l (A2),D0
00035B52 <AmiBlitz3.ab3@26402>     BEQ.w write_xtrafile__done2
00035B54 <AmiBlitz3.ab3@26403>     MOVEA.l D0,A2
00035B58 <AmiBlitz3.ab3@26404>     MOVE.l $12(A2),D4
00035B5C <AmiBlitz3.ab3@26405>     TST.w -$2(A2,D4.L)
00035B60 <AmiBlitz3.ab3@26406>     BEQ.w write_xtrafile__loop3
00035B64 <AmiBlitz3.ab3@26408>     LEA $4(A2),A0
00035B66 <AmiBlitz3.ab3@26409>     MOVE.l A0,D2
00035B68 <AmiBlitz3.ab3@26410>     MOVEQ.l #$02,D3
00035B6A <AmiBlitz3.ab3@26411>     MOVE.l D7,D1                                           ; schreiben der Libnum mit 2 bytes
00035B6E <AmiBlitz3.ab3@26412>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B72 <AmiBlitz3.ab3@26414>     LEA -$4(A2,D4.L),A0
00035B74 <AmiBlitz3.ab3@26415>     MOVE.l A0,D2
00035B76 <AmiBlitz3.ab3@26416>     MOVEQ.l #$02,D3
00035B78 <AmiBlitz3.ab3@26417>     MOVE.l D7,D1                                           ; schreiben der Max Objects mit 2 bytes
00035B7C <AmiBlitz3.ab3@26418>     JSR _Write(A6)                                         ; d1: file, d2: buffer, d3:length
00035B80 <AmiBlitz3.ab3@26419> BRA.w write_xtrafile__loop3
00035B86 <AmiBlitz3.ab3@26424>   LEA XTRAEndPadBytes,A2 ; get the start address off the 4 fill/pad/termination bytes
00035B88 <AmiBlitz3.ab3@26425>   MOVE.l A2,D2           ; move the address to d2
00035B8E <AmiBlitz3.ab3@26426>   MOVE.l #4,D3           ; we only need 4 bytes to save
00035B90 <AmiBlitz3.ab3@26427>   MOVE.l D7,D1           ; we set the file handle
00035B94 <AmiBlitz3.ab3@26428>   JSR _Write(A6)         ; and we write it.
00035B96 <AmiBlitz3.ab3@26430> RTS
00035B9C <AmiBlitz3.ab3@26435>   LEA optssave,A0                      ; backup address
00035BA2 <AmiBlitz3.ab3@26436>   LEA ptr_xtradata,A1                  ; source address
00035BA4 <AmiBlitz3.ab3@26439>   MOVE.w (A1)+,D0                                          ;length of data move
00035BA8 <AmiBlitz3.ab3@26440>   BEQ.b 'backupdone
00035BAA <AmiBlitz3.ab3@26441>   SUBQ.w #1,D0
00035BAC <AmiBlitz3.ab3@26444>     MOVE.l (A1)+,D1
00035BB0 <AmiBlitz3.ab3@26445>     BEQ.b 'backuploop
00035BB2 <AmiBlitz3.ab3@26446>     MOVEA.l D1,A2
00035BB4 <AmiBlitz3.ab3@26447>     MOVE.w D0,D1
00035BB6 <AmiBlitz3.ab3@26450>       MOVE.b (A2)+,(A0)+
00035BBA <AmiBlitz3.ab3@26451>   DBF D1,'backuploop3
00035BBE <AmiBlitz3.ab3@26453> BRA.w 'backuploop2
00035BC4 <AmiBlitz3.ab3@26457>   LEA bufferlist,A1
00035BC6 <AmiBlitz3.ab3@26460>     MOVE.l (A1)+,D2
00035BCA <AmiBlitz3.ab3@26461>     BEQ.b 'loop4done
00035BCC <AmiBlitz3.ab3@26463>     MOVEA.l D2,A0
00035BCE <AmiBlitz3.ab3@26464>     MOVE.l (A0),D2
00035BD0 <AmiBlitz3.ab3@26465>     ADDQ.w #8,A0
00035BD6 <AmiBlitz3.ab3@26466>     JSR makelong
00035BDA <AmiBlitz3.ab3@26467> BRA.b 'loop4
00035BE0 <AmiBlitz3.ab3@26470>   CLR.w state_of_residents                                 ;resident change
00035BE6 <AmiBlitz3.ab3@26471>   CLR.w comsettings_message                                ;alloc change
00035BEC <AmiBlitz3.ab3@26472>   CLR.w maxobject_pos
00035BEE <AmiBlitz3.ab3@26473> RTS   ; new tomsmart1
00035BF4 <AmiBlitz3.ab3@26477>   LEA optssave,A0
00035BFA <AmiBlitz3.ab3@26478>   LEA ptr_xtradata,A1
00035BFC <AmiBlitz3.ab3@26481>   MOVE.w (A1)+,D0
00035C00 <AmiBlitz3.ab3@26482>   BEQ.b 'restoredone
00035C02 <AmiBlitz3.ab3@26483>   SUBQ.w #1,D0
00035C04 <AmiBlitz3.ab3@26486>     MOVE.l (A1)+,D1
00035C08 <AmiBlitz3.ab3@26487>     BEQ.b 'restoreloop1
00035C0A <AmiBlitz3.ab3@26488>     MOVEA.l D1,A2
00035C0C <AmiBlitz3.ab3@26489>     MOVE.w D0,D1
00035C0E <AmiBlitz3.ab3@26492>       MOVE.b (A0)+,(A2)+
00035C12 <AmiBlitz3.ab3@26493>   DBF D1,'restoreloop3
00035C16 <AmiBlitz3.ab3@26495> BRA.b 'restoreloop2
00035C18 <AmiBlitz3.ab3@26498> RTS
00035C1E <AmiBlitz3.ab3@26502>   JSR free_residents                    ; first free the allready loaded residents
00035C24 <AmiBlitz3.ab3@26503>   JSR Clear_Residents_table             ; second clear the complete resident table
00035C26 <AmiBlitz3.ab3@26504> RTS
00035C2E <AmiBlitz3.ab3@26508>   MOVE.w #$FFFF,state_of_residents
00035C34 <AmiBlitz3.ab3@26509>   MOVE.w state_of_residents,D0
00035C3A <AmiBlitz3.ab3@26510>   JSR reloadresident
00035C3C <AmiBlitz3.ab3@26511> RTS
00035C3E <AmiBlitz3.ab3@26516>   MOVE.l d0,a1
00035C44 <AmiBlitz3.ab3@26517>   MOVEA.l libpointer,A2
00035C48 <AmiBlitz3.ab3@26520>     MOVE.l $12(A2),D0
00035C4C <AmiBlitz3.ab3@26521>     TST.w -$2(A2,D0.L)
00035C50 <AmiBlitz3.ab3@26522>      BEQ.w JL_0_102AAa
00035C52 <AmiBlitz3.ab3@26523>     SUBQ.w #1,D1
00035C56 <AmiBlitz3.ab3@26524>      BPL.w JL_0_102AAa
00035C5A <AmiBlitz3.ab3@26525>     MOVEA.l -$1A(A2,D0.L),A3
00035C5C <AmiBlitz3.ab3@26526>     ADDA.l A2,A3
00035C5E <AmiBlitz3.ab3@26529>       MOVE.b (A3)+,(A1)+
00035C62 <AmiBlitz3.ab3@26530>     BNE.w JL_0_10294a
00035C64 <AmiBlitz3.ab3@26532>     CLR.b -(A1)
00035C68 <AmiBlitz3.ab3@26533>     MOVE.w -$4(A2,D0.L),D0
00035C6E <AmiBlitz3.ab3@26534>     AND.l #$ffff,d0
00035C70 <AmiBlitz3.ab3@26535> RTS
00035C72 <AmiBlitz3.ab3@26538>     MOVEA.l (A2),A2
00035C76 <AmiBlitz3.ab3@26539> BRA.w JL_0_1027Ca
00035C86 <AmiBlitz3.ab3@26544> str_maxobjects_name:   Dc.b "              ",0 : Even
00035C96 <AmiBlitz3.ab3@26545> str_maxobjects_name2:  Dc.b "              ",0 : Even
00035C9A <AmiBlitz3.ab3@26546> objectbuffer:          Dc.l #DEFAULT_OBJECTBUFFERSIZE  ; replaced with a constant tomsmart1
00035C9E <AmiBlitz3.ab3@26547>                        Dc.l $00000000
00035CAA <AmiBlitz3.ab3@26548> str_objectbuffer:      Dc.b "16384",0,0,0,0,0,0,0      ; string max 12 columns
00035CAE <AmiBlitz3.ab3@26550> libsbuffer:            Dc.l #DEFAULT_LIBSBUFFERSIZE    ; replaced with a constant tomsmart1
00035CB2 <AmiBlitz3.ab3@26551>                        Dc.l $00000000
00035CBE <AmiBlitz3.ab3@26552> str_libsbuffer:        Dc.b "32768",0,0,0,0,0,0,0      ;was "16384"; string max 12 columns
00035CC2 <AmiBlitz3.ab3@26554> systembuffer:          Dc.l #DEFAULT_SYSTEMBUFFERSIZE  ; system buffer  ; replaced with a constant tomsmart1
00035CC6 <AmiBlitz3.ab3@26555>                        Dc.l $00000000
00035CD2 <AmiBlitz3.ab3@26556> str_systembuffer:      Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035CD6 <AmiBlitz3.ab3@26558> databuffer:            Dc.l #DEFAULT_DATABUFFERSIZE    ; data buffer   ; replaced with a constant tomsmart1
00035CDA <AmiBlitz3.ab3@26559>                        Dc.l $00000000
00035CE6 <AmiBlitz3.ab3@26560> str_databuffer:        Dc.b "4096",0,0,0,0,0,0,0,0     ; string max 12 columns
00035CEA <AmiBlitz3.ab3@26562> macrobuffer_size:      Dc.l #DEFAULT_MACROBUFFERSIZE   ; macro buffer ; was $00002000 ; replaced with a constant tomsmart1
00035CEE <AmiBlitz3.ab3@26563>                        Dc.l $00000000
00035CFA <AmiBlitz3.ab3@26564> str_macrobuffer:       Dc.b "40000",0,0,0,0,0,0,0      ; string max 12 columns
00035CFE <AmiBlitz3.ab3@26566> stringbuffer:          Dc.l #DEFAULT_STRINGBUFFERSIZE  ; string buffer ; replaced with a constant tomsmart1
00035D02 <AmiBlitz3.ab3@26567>                        Dc.l $00000000
00035D0E <AmiBlitz3.ab3@26568> str_stringbuffer:      Dc.b "10240",0,0,0,0,0,0,0      ; string max 12 columns
00035D10 <AmiBlitz3.ab3@26570> maxobjects_value:      Dc.w $0064
00035D14 <AmiBlitz3.ab3@26571>                        Dc.l $00000000
00035D20 <AmiBlitz3.ab3@26572> str_maxobjects_value:  Dc.b "100",0,0,0,0,0,0,0,0,0    ; string max 12 columns
00035D22 <AmiBlitz3.ab3@26574> maxobjects_value2:     Dc.w $0014
00035D24 <AmiBlitz3.ab3@26575>                        Dc.w $0000
00035D30 <AmiBlitz3.ab3@26577> str_maxobjects_value2: Dc.b "20",0,0,0,0,0,0,0,0,0,0   ; string max 12 columns
00035D31 <AmiBlitz3.ab3@26581> set_create_iconfile:   Dc.b $00
00035D34 <AmiBlitz3.ab3@26582> create_iconfile:       Dc.b $80,$01,$01                    ;create icon
00035D36 <AmiBlitz3.ab3@26583>                        Dc.b $00,$01
00035D37 <AmiBlitz3.ab3@26585> set_use_debugger:      Dc.b $00                            ; Flags.w
00035D3A <AmiBlitz3.ab3@26586> use_debugger:          Dc.b $80,$01,$01                    ; Activation.w
00035D3C <AmiBlitz3.ab3@26587>                        Dc.b $00,$01                        ; GadgetType.w
00035D40 <AmiBlitz3.ab3@26588> AL_0_11010:            Dc.b $00,$80,$01,$01                ; flags, activation
00035D44 <AmiBlitz3.ab3@26589> AL_0_1103C:            Dc.b $00,$80,$01,$01                ; flags, activation
00035D48 <AmiBlitz3.ab3@26590> AL_0_11068:            Dc.b $00,$80,$01,$01                ; flags, activation
00035D4A <AmiBlitz3.ab3@26591> AL_0_11094:            Ds.w 1
00035D4B <AmiBlitz3.ab3@26593> set_make_smallestcode: Ds.b 1
00035D4E <AmiBlitz3.ab3@26594> make_smallestcode:     Dc.b $00,$01,$01                    ;make smallest
00035D50 <AmiBlitz3.ab3@26595>                        Dc.b $00,$01
00035D51 <AmiBlitz3.ab3@26596> set_link_debuginfo:    Ds.b 1
00035D54 <AmiBlitz3.ab3@26597> link_debuginfo:        Dc.b $00,$01,$01                    ;create debuginfo
00035D56 <AmiBlitz3.ab3@26598>                        Dc.b $00,$01
00035F76 <AmiBlitz3.ab3@26603>   Ds.l 136         ;resident files STEP $44 piece 8
00035FF6 <AmiBlitz3.ab3@26608> str_calcexpression:        Ds.l 32
00035FFA <AmiBlitz3.ab3@26609> destbufferend_backup_calc: Ds.l 1
00036004 <AmiBlitz3.ab3@26614>   MOVE.l destbufferend,destbufferend_backup_calc
0003600A <AmiBlitz3.ab3@26615> 
00036010 <AmiBlitz3.ab3@26616>   MOVE.l A7,errstack
0003601A <AmiBlitz3.ab3@26617>   MOVE.l #Calc_Error_Exit,errcont
00036044 <AmiBlitz3.ab3@26624>   !basic         ; get the flage for the conversion form the editor
00036088 <AmiBlitz3.ab3@26625>   !ComData_GetW{comWord_CalculatorButtonBinFlag,D0} : MOVE.w d0,CalculatorButtonBinFlag
000360CC <AmiBlitz3.ab3@26626>   !ComData_GetW{comWord_CalculatorButtonDecFlag,D0} : MOVE.w d0,CalculatorButtonDecFlag
000360EA <AmiBlitz3.ab3@26627>   !asm
000360F0 <AmiBlitz3.ab3@26629>   LEA str_calcexpression,A0
000360F6 <AmiBlitz3.ab3@26638>   JSR setcvars
000360FC <AmiBlitz3.ab3@26639>   JSR setsvars
00036102 <AmiBlitz3.ab3@26640>   CLR.w connest
00036108 <AmiBlitz3.ab3@26641>   LEA str_calcexpression,A5
0003610E <AmiBlitz3.ab3@26642>   JSR AJL_0_BF6E
00036114 <AmiBlitz3.ab3@26643>   LEA str_calcexpression,A0
00036116 <AmiBlitz3.ab3@26644>   TST.l D3
0003611A <AmiBlitz3.ab3@26645>    BPL.w JL_0_11AE8
0003611E <AmiBlitz3.ab3@26646>   MOVE.b #$2D,(A0)+
00036120 <AmiBlitz3.ab3@26647>   NEG.l D3
00036128 <AmiBlitz3.ab3@26650>   CMPI.w #$80,CalculatorButtonDecFlag
0003612C <AmiBlitz3.ab3@26651>    BEQ.w JL_0_11B74
0003612E <AmiBlitz3.ab3@26652>   MOVEQ.l #$00,D1
00036136 <AmiBlitz3.ab3@26653>   CMPI.w #$80,CalculatorButtonBinFlag
0003613A <AmiBlitz3.ab3@26654>    BNE.w JL_0_11B36
0003613C <AmiBlitz3.ab3@26655>   MOVEQ.l #$1F,D0
00036140 <AmiBlitz3.ab3@26656>   MOVE.b #$25,(A0)+
00036142 <AmiBlitz3.ab3@26659>       LSL.l #1,D3
00036146 <AmiBlitz3.ab3@26660>        BCC.w JL_0_11B18
0003614A <AmiBlitz3.ab3@26661>       MOVE.b #"1",(A0)+
0003614C <AmiBlitz3.ab3@26662>       MOVEQ.l #-$01,D1
00036150 <AmiBlitz3.ab3@26663>   BRA.w JL_0_11B22
00036152 <AmiBlitz3.ab3@26666>       TST.w D1
00036156 <AmiBlitz3.ab3@26667>       BEQ.w JL_0_11B22
0003615A <AmiBlitz3.ab3@26668>       MOVE.b #"0",(A0)+
0003615E <AmiBlitz3.ab3@26671>  DBF D0,JL_0_11B08
00036160 <AmiBlitz3.ab3@26674>   TST.w D1
00036164 <AmiBlitz3.ab3@26675>   BNE.w JL_0_11B30
00036168 <AmiBlitz3.ab3@26676>   MOVE.b #"0",(A0)+
0003616A <AmiBlitz3.ab3@26679>   CLR.b (A0)
0003616E <AmiBlitz3.ab3@26680> BRA.w JL_0_11B7C
00036170 <AmiBlitz3.ab3@26683>   MOVEQ.l #$07,D0
00036174 <AmiBlitz3.ab3@26684>   MOVE.b #$24,(A0)+
00036176 <AmiBlitz3.ab3@26687>     MOVE.l D3,D2
00036178 <AmiBlitz3.ab3@26688>     SWAP D2
0003617A <AmiBlitz3.ab3@26689>     LSR.w #8,D2
0003617C <AmiBlitz3.ab3@26690>     LSR.w #4,D2
00036180 <AmiBlitz3.ab3@26691>     ADDI.w #$30,D2
00036184 <AmiBlitz3.ab3@26692>     CMP.w #$3A,D2
00036188 <AmiBlitz3.ab3@26693>      BCS.w JL_0_11B52
0003618A <AmiBlitz3.ab3@26694>     ADDQ.w #7,D2
0003618E <AmiBlitz3.ab3@26697>     CMP.w #$30,D2
00036192 <AmiBlitz3.ab3@26698>     BEQ.w JL_0_11B62
00036194 <AmiBlitz3.ab3@26699>     MOVE.b D2,(A0)+
00036196 <AmiBlitz3.ab3@26700>     MOVEQ.l #-$01,D1
0003619A <AmiBlitz3.ab3@26701>   BRA.w JL_0_11B6A
0003619C <AmiBlitz3.ab3@26704>     TST.w D1
000361A0 <AmiBlitz3.ab3@26705>      BEQ.w JL_0_11B6A
000361A2 <AmiBlitz3.ab3@26706>     MOVE.b D2,(A0)+
000361A4 <AmiBlitz3.ab3@26709>     LSL.l #4,D3
000361A8 <AmiBlitz3.ab3@26710>  DBF D0,JL_0_11B3C
000361AC <AmiBlitz3.ab3@26712> BRA.w JL_0_11B26
000361AE <AmiBlitz3.ab3@26715>   MOVE.l D3,D2
000361B4 <AmiBlitz3.ab3@26716>   JSR makelong
000361BE <AmiBlitz3.ab3@26723>   MOVE.l destbufferend_backup_calc,destbufferend
000361C0 <AmiBlitz3.ab3@26725> RTS                         ; added tomsmart 2012 03 07 vor Calculator in PED
000362BF <AmiBlitz3.ab3@26729> str_cliarguments: Ds.b 255   ; a command line can acutally be 255 characters long
000362C0 <AmiBlitz3.ab3@26731> Even
000362C2 <AmiBlitz3.ab3@26745>     MOVE.b (a5)+,d0
000362C6 <AmiBlitz3.ab3@26746>     BEQ 'l2
000362CA <AmiBlitz3.ab3@26747>     CMP.b #$80,d0
000362CE <AmiBlitz3.ab3@26748>     BNE 'l1
000362D0 <AmiBlitz3.ab3@26749>     MOVE.b (a5)+,d0
000362D4 <AmiBlitz3.ab3@26750>     BEQ 'l2
000362D8 <AmiBlitz3.ab3@26751>     CMP.b #$02,d0
000362DC <AmiBlitz3.ab3@26752>   BNE 'l1
000362E0 <AmiBlitz3.ab3@26755>     CMP.b #$20,(a5)+
000362E4 <AmiBlitz3.ab3@26756>   BEQ 'l3
000362E6 <AmiBlitz3.ab3@26757>   SUBQ.l #1,a5
000362E8 <AmiBlitz3.ab3@26758>   TST.b (a5)
000362EC <AmiBlitz3.ab3@26759>   BEQ 'l2
000362F0 <AmiBlitz3.ab3@26760>   CMP.w #$8008,(a5)
000362F4 <AmiBlitz3.ab3@26761>   BEQ 'l4
000362F8 <AmiBlitz3.ab3@26762>   CMP.w #$8009,(a5)
000362FC <AmiBlitz3.ab3@26763>   BEQ 'l4
00036300 <AmiBlitz3.ab3@26764> BRA 'l1
00036302 <AmiBlitz3.ab3@26767>   ADDQ.l #2,a5
00036308 <AmiBlitz3.ab3@26768>   JSR skiprest
0003630A <AmiBlitz3.ab3@26769> RTS
00036310 <AmiBlitz3.ab3@26772>   JSR nextline
00036314 <AmiBlitz3.ab3@26773>   BNE 'l1
00036316 <AmiBlitz3.ab3@26774> RTS
00036340 <AmiBlitz3.ab3@26778>   !basic
0003634A <AmiBlitz3.ab3@26779>   DateFormat 1
00036358 <AmiBlitz3.ab3@26780>   i.l=SystemDate
0003637E <AmiBlitz3.ab3@26781>   a$=Date$ (i)
000363FC <AmiBlitz3.ab3@26782>   a$=Replace$(a$,"/",".")
00036402 <AmiBlitz3.ab3@26783>   GetD0 &a$
00036404 <AmiBlitz3.ab3@26784>   MOVEQ #8,d2
00036406 <AmiBlitz3.ab3@26785>   MOVE.l d0,a0
00036408 <AmiBlitz3.ab3@26788>     MOVE.b (a0)+,d1
0003640E <AmiBlitz3.ab3@26789>     JSR pokedata1b
00036412 <AmiBlitz3.ab3@26790>  DBF d2,'l1
00036414 <AmiBlitz3.ab3@26792>   MOVEQ #0,d0
00036416 <AmiBlitz3.ab3@26793>   MOVE.b (a0)+,d0
00036434 <AmiBlitz3.ab3@26794>   !asm
0003643A <AmiBlitz3.ab3@26795>   ADD.l #9,d2
00036440 <AmiBlitz3.ab3@26796>   ADD.l #9,a5
00036442 <AmiBlitz3.ab3@26797> RTS
0003646C <AmiBlitz3.ab3@26801>   !basic
00036476 <AmiBlitz3.ab3@26802>   DateFormat 0
00036484 <AmiBlitz3.ab3@26803>   i.l=SystemDate
000364AA <AmiBlitz3.ab3@26804>   a$=Date$ (i)
00036528 <AmiBlitz3.ab3@26805>   a$=Replace$(a$,"/",".")
0003652E <AmiBlitz3.ab3@26806>   GetD0 &a$
00036530 <AmiBlitz3.ab3@26807>   MOVEQ #8,d2
00036532 <AmiBlitz3.ab3@26808>   MOVE.l d0,a0
00036534 <AmiBlitz3.ab3@26811>     MOVE.b (a0)+,d1
0003653A <AmiBlitz3.ab3@26812>     JSR pokedata1b
0003653E <AmiBlitz3.ab3@26813>  DBF d2,'l1
00036540 <AmiBlitz3.ab3@26815>   MOVEQ #0,d0
00036542 <AmiBlitz3.ab3@26816>   MOVE.b (a0)+,d0
00036560 <AmiBlitz3.ab3@26817>   !asm
00036566 <AmiBlitz3.ab3@26818>   ADD.l #9,d2
0003656C <AmiBlitz3.ab3@26819>   ADD.l #13,a5
0003656E <AmiBlitz3.ab3@26820> RTS
00036598 <AmiBlitz3.ab3@26824>   !basic
000365A2 <AmiBlitz3.ab3@26825>   DateFormat 1
000365B0 <AmiBlitz3.ab3@26826>   i.l = SystemDate
000365D6 <AmiBlitz3.ab3@26827>   a$ = Date$ (i)
00036654 <AmiBlitz3.ab3@26828>   a$ = Replace$(a$,"/",".")
0003665A <AmiBlitz3.ab3@26829>   GetD0 &a$
0003665C <AmiBlitz3.ab3@26830>   MOVEQ #8,d2
0003665E <AmiBlitz3.ab3@26831>   MOVE.l d0,a0
00036660 <AmiBlitz3.ab3@26834>     MOVE.b (a0)+,d1
00036666 <AmiBlitz3.ab3@26835>     JSR writebyte
0003666A <AmiBlitz3.ab3@26836>  DBF d2,'l1
0003666C <AmiBlitz3.ab3@26838>   MOVEQ #0,d0
0003666E <AmiBlitz3.ab3@26839>   MOVE.b (a0)+,d0
0003668C <AmiBlitz3.ab3@26840>   !asm
00036692 <AmiBlitz3.ab3@26841>   ADD.l #9,a5
00036694 <AmiBlitz3.ab3@26842> RTS
000366BE <AmiBlitz3.ab3@26846>   !basic
000366C8 <AmiBlitz3.ab3@26847>   DateFormat 0
000366D6 <AmiBlitz3.ab3@26848>   i.l=SystemDate
000366FC <AmiBlitz3.ab3@26849>   a$=Date$ (i)
0003677A <AmiBlitz3.ab3@26850>   a$=Replace$(a$,"/",".")
00036780 <AmiBlitz3.ab3@26851>   GetD0 &a$
00036782 <AmiBlitz3.ab3@26852>   MOVEQ #8,d2
00036784 <AmiBlitz3.ab3@26853>   MOVE.l d0,a0
00036786 <AmiBlitz3.ab3@26856>     MOVE.b (a0)+,d1
0003678C <AmiBlitz3.ab3@26857>     JSR writebyte
00036790 <AmiBlitz3.ab3@26858>  DBF d2,'l1
00036792 <AmiBlitz3.ab3@26860>   MOVEQ #0,d0
00036794 <AmiBlitz3.ab3@26861>   MOVE.b (a0)+,d0
000367B2 <AmiBlitz3.ab3@26862>   !asm
000367B8 <AmiBlitz3.ab3@26863>   ADD.l #13,a5
000367BA <AmiBlitz3.ab3@26864> RTS
000367BC <AmiBlitz3.ab3@26868>   MOVE.l d2,-(a7)                                          ; D2 -> stack
000367BE <AmiBlitz3.ab3@26869>   MOVE.l a5,d0
000367E8 <AmiBlitz3.ab3@26870>   !basic
000367EC <AmiBlitz3.ab3@26871>   _myD0.l = PutD0
000367F6 <AmiBlitz3.ab3@26872>   If _myD0
0003683C <AmiBlitz3.ab3@26873>     verstring$ = Left$(Peek.s(_myD0),9+3)
0003688E <AmiBlitz3.ab3@26874>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036894 <AmiBlitz3.ab3@26875>   Else
000368CE <AmiBlitz3.ab3@26876>     error{"INTERNAL: Invalid pointer in version_string!"}
000368DE <AmiBlitz3.ab3@26881>   actual_version.l = Peek.l(?versioninformation)
000368EE <AmiBlitz3.ab3@26882>   actual_build.l   = Peek.l(?number_of_builds)
00036912 <AmiBlitz3.ab3@26884>   Format "00"
00036948 <AmiBlitz3.ab3@26885>   Select verstring$
0003696C <AmiBlitz3.ab3@26887>     Case "VER_MAJOR"
000369A8 <AmiBlitz3.ab3@26888>      put_versionstr$ = Str$(actual_version LSR 24)
000369D2 <AmiBlitz3.ab3@26890>     Case "VER_MINOR"
00036A16 <AmiBlitz3.ab3@26891>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036A40 <AmiBlitz3.ab3@26893>     Case "VER_PATCH"
00036A84 <AmiBlitz3.ab3@26894>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036AAE <AmiBlitz3.ab3@26896>     Case "VER_BUILD"
00036AD2 <AmiBlitz3.ab3@26897>      Format ""
00036B06 <AmiBlitz3.ab3@26898>      put_versionstr$ = Str$(actual_build)
00036B0C <AmiBlitz3.ab3@26900>     Default
00036B34 <AmiBlitz3.ab3@26901>      put_versionstr$ = "{unknown compilerconstant}"
00036B42 <AmiBlitz3.ab3@26904>   End Select
00036B66 <AmiBlitz3.ab3@26905>   Format ""
00036B76 <AmiBlitz3.ab3@26907>   GetD0 FLen(put_versionstr$)                              ; laenge zielstring -> Stack
00036B78 <AmiBlitz3.ab3@26908>   MOVE.l d0,d2
00036B7A <AmiBlitz3.ab3@26909>   MOVE.l d2,-(a7)
00036B7E <AmiBlitz3.ab3@26910>   SUB #1,d2
00036B84 <AmiBlitz3.ab3@26912>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036B86 <AmiBlitz3.ab3@26913>   MOVE.l d0,a0
00036B88 <AmiBlitz3.ab3@26916>     MOVE.b (a0)+,d1
00036B8E <AmiBlitz3.ab3@26917>     JSR pokedata1b
00036B92 <AmiBlitz3.ab3@26918>  DBF d2,'l1
00036B94 <AmiBlitz3.ab3@26920>   MOVEQ #0,d0
00036BB2 <AmiBlitz3.ab3@26921>   !asm
00036BB4 <AmiBlitz3.ab3@26922>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
00036BB6 <AmiBlitz3.ab3@26923>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
00036BB8 <AmiBlitz3.ab3@26924>   ADD.l d0,d2
00036BBE <AmiBlitz3.ab3@26925>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036BC0 <AmiBlitz3.ab3@26926>   MOVEQ #0,d0
00036BC2 <AmiBlitz3.ab3@26927> RTS
00036BC4 <AmiBlitz3.ab3@26931>   MOVE.l a5,d0
00036BEE <AmiBlitz3.ab3@26932>   !basic
00036BF2 <AmiBlitz3.ab3@26933>   _myD0.l = PutD0
00036BFC <AmiBlitz3.ab3@26934>   If _myD0
00036C42 <AmiBlitz3.ab3@26935>     verstring$ = Left$(Peek.s(_myD0),9+3)
00036C94 <AmiBlitz3.ab3@26936>     verstring$ = UnRight$(verstring$,3)                      ; Compilerkonstantenbeginn \__ entfernen
00036C9A <AmiBlitz3.ab3@26937>   Else
00036CD4 <AmiBlitz3.ab3@26938>     error{"INTERNAL: Invalid pointer in version_string_dc!"}
00036CE4 <AmiBlitz3.ab3@26943>   actual_version.l = Peek.l(?versioninformation)
00036CF4 <AmiBlitz3.ab3@26944>   actual_build.l   = Peek.l(?number_of_builds)
00036D18 <AmiBlitz3.ab3@26946>   Format ""
00036D4E <AmiBlitz3.ab3@26947>   Select verstring$
00036D72 <AmiBlitz3.ab3@26949>     Case "VER_MAJOR"
00036DAE <AmiBlitz3.ab3@26950>      put_versionstr$ = Str$(actual_version LSR 24)
00036DD8 <AmiBlitz3.ab3@26952>     Case "VER_MINOR"
00036E1C <AmiBlitz3.ab3@26953>      put_versionstr$ = Str$((actual_version LSL 8) LSR 24)
00036E46 <AmiBlitz3.ab3@26955>     Case "VER_PATCH"
00036E8A <AmiBlitz3.ab3@26956>      put_versionstr$ = Str$((actual_version LSL 16) LSR 24 )
00036EB4 <AmiBlitz3.ab3@26958>     Case "VER_BUILD"
00036ED8 <AmiBlitz3.ab3@26959>      Format ""
00036F0C <AmiBlitz3.ab3@26960>      put_versionstr$ = Str$(actual_build)
00036F12 <AmiBlitz3.ab3@26962>     Default
00036F3A <AmiBlitz3.ab3@26963>      put_versionstr$ = "{unknown compilerconstant}"
00036F48 <AmiBlitz3.ab3@26965>   End Select
00036F6C <AmiBlitz3.ab3@26966>   Format ""
00036F82 <AmiBlitz3.ab3@26968>   GetD0 FLen(put_versionstr$)-1
00036F84 <AmiBlitz3.ab3@26969>   MOVE.l d0,d2
00036F8A <AmiBlitz3.ab3@26971>   GetD0 &put_versionstr$                                   ; kopieren des neuen Strings in den Zielstring
00036F8C <AmiBlitz3.ab3@26972>   MOVE.l d0,a0
00036F8E <AmiBlitz3.ab3@26975>     MOVE.b (a0)+,d1
00036F94 <AmiBlitz3.ab3@26976>     JSR writebyte
00036F98 <AmiBlitz3.ab3@26977>  DBF d2,'l1
00036F9A <AmiBlitz3.ab3@26979>   MOVEQ #0,d0
00036F9C <AmiBlitz3.ab3@26980>   MOVE.b -(a0),d0                                          ; letztes Zeichen in D0
00036FBA <AmiBlitz3.ab3@26981>   !asm
00036FC0 <AmiBlitz3.ab3@26982>   ADD.l #12,a5                                             ; string_ptr um konstante weitersetzen
00036FC2 <AmiBlitz3.ab3@26983> RTS
00036FC4 <AmiBlitz3.ab3@27085>  MOVE.l a5,-(a7)
00036FF0 <AmiBlitz3.ab3@27086>  !fget
00036FF4 <AmiBlitz3.ab3@27087>  CMP.w #".",d0
00036FF8 <AmiBlitz3.ab3@27088>  BNE 'skip
00036FFC <AmiBlitz3.ab3@27089>  MOVEM.l a2/d2,-(a7)
00037002 <AmiBlitz3.ab3@27090>  LEA newtypebase,a2
00037008 <AmiBlitz3.ab3@27091>  JSR getparameter2
0003700C <AmiBlitz3.ab3@27092>  BEQ.w JUMP_syntaxerr
00037012 <AmiBlitz3.ab3@27093>  JSR findtype
00037016 <AmiBlitz3.ab3@27094>  BNE.w JUMP_notypeerr
0003701C <AmiBlitz3.ab3@27095>  MOVE.l a2,typetocast
00037020 <AmiBlitz3.ab3@27096>  MOVEM.l (a7)+,a2/d2
00037024 <AmiBlitz3.ab3@27097>  CMP.w #")",d0
00037028 <AmiBlitz3.ab3@27098>  BNE JUMP_errorbracketmiss
0003702A <AmiBlitz3.ab3@27099>  ADDQ.l #4,a7
00037056 <AmiBlitz3.ab3@27100>  !fget
0003705C <AmiBlitz3.ab3@27101>  JMP nocast
0003705E <AmiBlitz3.ab3@27103> 'skip MOVE.l (a7)+,a5
00037064 <AmiBlitz3.ab3@27104>  JMP JL_0_A410
0003706A <AmiBlitz3.ab3@27106> JUMP_errorbracketmiss JMP errorbracketmiss
00037094 <AmiBlitz3.ab3@27108> Function.l ab3_GetIncludeLock{filename.s}
000370B4 <AmiBlitz3.ab3@27109>   incLock.l  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub
0003710C <AmiBlitz3.ab3@27110>   ex.s       = dos_GetExt{filename}
00037120 <AmiBlitz3.ab3@27112>   If incLock = False
00037194 <AmiBlitz3.ab3@27113>     filename = dos_SetExt{filename,"ab3"}
000371B4 <AmiBlitz3.ab3@27114>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab3
000371C8 <AmiBlitz3.ab3@27117>   If incLock = False
0003723C <AmiBlitz3.ab3@27118>     filename = dos_SetExt{filename,"ab2"}
0003725C <AmiBlitz3.ab3@27119>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.ab2
00037270 <AmiBlitz3.ab3@27122>   If incLock = False
000372E4 <AmiBlitz3.ab3@27123>     filename = dos_SetExt{filename,"bb2"}
00037304 <AmiBlitz3.ab3@27124>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.bb2
00037318 <AmiBlitz3.ab3@27127>   If incLock = False
000373AA <AmiBlitz3.ab3@27128>     filename = dos_SetExt{filename,ex+".ab3"}
000373CA <AmiBlitz3.ab3@27129>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab3
000373DE <AmiBlitz3.ab3@27132>   If incLock = False
00037452 <AmiBlitz3.ab3@27133>     filename = dos_SetExt{filename,"ab2"}
00037472 <AmiBlitz3.ab3@27134>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.ab2
00037486 <AmiBlitz3.ab3@27137>   If incLock = False
000374FA <AmiBlitz3.ab3@27138>     filename = dos_SetExt{filename,"bb2"}
0003751A <AmiBlitz3.ab3@27139>     incLock  = Lock_ (&filename,#ACCESS_READ)   ; try bla.blub.bb2
00037524 <AmiBlitz3.ab3@27142>  Function Return incLock
0003753E <AmiBlitz3.ab3@27143> End Function
00037568 <AmiBlitz3.ab3@27147>   !basic
00037592 <AmiBlitz3.ab3@27148>   incString.s = Peek$(?ptr_parameterstore)
000375C0 <AmiBlitz3.ab3@27150>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
000375C4 <AmiBlitz3.ab3@27151>   incDirP.l   = PutD0                                       ;    "
000375EC <AmiBlitz3.ab3@27152>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
0003766C <AmiBlitz3.ab3@27153>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
0003769E <AmiBlitz3.ab3@27154>   incLock.l   = ab3_GetIncludeLock{incFile}                 ; check if file exist
000376B2 <AmiBlitz3.ab3@27156>   If incLock = False ; not found => check default Include Directory
000376C2 <AmiBlitz3.ab3@27157>     incDirP.l = Peek.l(?incd)
000376CC <AmiBlitz3.ab3@27158>     If incDirP
000376F4 <AmiBlitz3.ab3@27159>       incDir_.s = Peek.s(incDirP)
000376FA <AmiBlitz3.ab3@27160>     Else
00037764 <AmiBlitz3.ab3@27161>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
000377E4 <AmiBlitz3.ab3@27163>     incFile.s = dos_AddPart{incDir_,incString}
00037816 <AmiBlitz3.ab3@27164>     incLock.l = ab3_GetIncludeLock{incFile}
0003782A <AmiBlitz3.ab3@27167>   If incLock = False ; not found => check relative to current source
00037842 <AmiBlitz3.ab3@27168>     incDepth.l = Peek.w(?ininclude)-1
00037868 <AmiBlitz3.ab3@27169>     If incDepth >= 0 AND incDepth < #maxincludes
000378C8 <AmiBlitz3.ab3@27170>       incDir_.s = dos_PathPart{incdim (incDepth)} ;= Peek.s(?includetemp2)
00037948 <AmiBlitz3.ab3@27171>       incFile.s = dos_AddPart{incDir_,incString}
0003797A <AmiBlitz3.ab3@27172>       incLock.l = ab3_GetIncludeLock{incFile}
0003798E <AmiBlitz3.ab3@27176>   If incLock = False ; still not found => check default Include Directory and name only
0003799E <AmiBlitz3.ab3@27177>     incDirP.l = Peek.l(?incd)
000379A8 <AmiBlitz3.ab3@27178>     If incDirP
000379D0 <AmiBlitz3.ab3@27179>       incDir_.s = Peek.s(incDirP)
000379D6 <AmiBlitz3.ab3@27180>     Else
00037A40 <AmiBlitz3.ab3@27181>       incDir_.s = dos_AddPart{Peek.s(?str_blitz3assign),"Sourcecodes/Includes"}
00037AEE <AmiBlitz3.ab3@27183>     incFile.s = dos_AddPart{incDir_,dos_FilePart{incString}}
00037B20 <AmiBlitz3.ab3@27184>     incLock.l = ab3_GetIncludeLock{incFile}
00037B2A <AmiBlitz3.ab3@27187>   If incLock
00037B40 <AmiBlitz3.ab3@27188>     MaxLen incFile = 1024
00037B64 <AmiBlitz3.ab3@27189>     NameFromLock_ incLock,&incFile,1024
00037B8E <AmiBlitz3.ab3@27190>     incFile = Peek.s(&incFile)
00037BC6 <AmiBlitz3.ab3@27191>     Poke$ ?ptr_parameterstore,incFile
00037BDA <AmiBlitz3.ab3@27192>     i = FLen(incFile)
00037BE6 <AmiBlitz3.ab3@27193>     GetReg d0,i
00037BEC <AmiBlitz3.ab3@27194>     MOVE.l d0,tempstore
00037BFC <AmiBlitz3.ab3@27195>     UnLock_ incLock
00037C1A <AmiBlitz3.ab3@27198>   !asm
00037C20 <AmiBlitz3.ab3@27199>   TST.l tempstore
00037C24 <AmiBlitz3.ab3@27200>    BEQ 'l1
00037C2A <AmiBlitz3.ab3@27201>   MOVE.l tempstore,d2
00037C2C <AmiBlitz3.ab3@27204> RTS
00037C56 <AmiBlitz3.ab3@27208>   !basic
00037C80 <AmiBlitz3.ab3@27209>   incString.s = Peek$(?ptr_parameterstore)                  ; get the string
00037CAE <AmiBlitz3.ab3@27210>   !ComData_LEA{comStr_CurrentDir,D0}                        ; get pointer to current Sourcefiledir
00037CB2 <AmiBlitz3.ab3@27211>   incDirP.l   = PutD0                                       ;    "
00037CDA <AmiBlitz3.ab3@27212>   incDir_.s   = Peek.s(incDirP)                             ; get current Sourcefiledir
00037D5A <AmiBlitz3.ab3@27213>   incFile.s   = dos_AddPart{incDir_,incString}              ; adding Sourcefiledir and Includestring
00037D7A <AmiBlitz3.ab3@27214>   incLock.l   = Lock_(&incFile,#ACCESS_READ)                ; check if file exist
00037D8E <AmiBlitz3.ab3@27216>   If incLock = False                                        ; not found => try orignal string only to find
00037DAE <AmiBlitz3.ab3@27217>     incLock.l = Lock_(&incString,#ACCESS_READ)
00037DB8 <AmiBlitz3.ab3@27220>   If incLock                                                ; found => store full path
00037DCE <AmiBlitz3.ab3@27221>     MaxLen incFile = 1024
00037DF2 <AmiBlitz3.ab3@27222>     NameFromLock_ incLock,&incFile,1024
00037E1C <AmiBlitz3.ab3@27223>     incFile = Peek.s(&incFile)
00037E54 <AmiBlitz3.ab3@27224>     Poke$ ?ptr_parameterstore,incFile
00037E60 <AmiBlitz3.ab3@27227> 
00037E7E <AmiBlitz3.ab3@27228>   !asm
00037E80 <AmiBlitz3.ab3@27229> RTS
00037E86 <AmiBlitz3.ab3@27240>   JSR Aclearallvars
00037E8C <AmiBlitz3.ab3@27241>   JSR free_unusedfunctions
00037E96 <AmiBlitz3.ab3@27256>   MOVE.l #"NORE",reqmode
00037E9C <AmiBlitz3.ab3@27257> JSR handle_compileerror
00037E9E <AmiBlitz3.ab3@27260>   MOVE.l d0,-(a7)
00037EA0 <AmiBlitz3.ab3@27261>   MOVE.l a5,d0
00037EAA <AmiBlitz3.ab3@27262>   !basica7
00037EAE <AmiBlitz3.ab3@27263>   i.l = PutD0
00037EB8 <AmiBlitz3.ab3@27264>   If i
00037EE0 <AmiBlitz3.ab3@27265>     a$ = Peek$(i)
00037F12 <AmiBlitz3.ab3@27266>     b$ = Peeks$(i-7,7)
0003804A <AmiBlitz3.ab3@27268> 
00038050 <AmiBlitz3.ab3@27269>     MOVE.l d0,result
00038054 <AmiBlitz3.ab3@27271>   !asma7
00038056 <AmiBlitz3.ab3@27272>   MOVE.l (a7)+,d0
00038058 <AmiBlitz3.ab3@27273> RTS
00038082 <AmiBlitz3.ab3@27277>   !basic
000380B0 <AmiBlitz3.ab3@27278>   !ComData_LEA{comStr_CurrentDir,D0}
000380B4 <AmiBlitz3.ab3@27279>   currentDirP.l = PutD0
000380E2 <AmiBlitz3.ab3@27281>   !ComData_LEA{comStr_SourceName,D0}
000380E6 <AmiBlitz3.ab3@27282>   fileNameP.l = PutD0
0003810E <AmiBlitz3.ab3@27284>   check_dirname$  = Peek$(currentDirP)
00038136 <AmiBlitz3.ab3@27285>   check_filename$ = Peek$(fileNameP)
000381BC <AmiBlitz3.ab3@27286>   If (olddirname$<>check_dirname$) OR (oldfilename$<>check_filename$)
000381C2 <AmiBlitz3.ab3@27287>     JSR free_unusedfunctions
0003820C <AmiBlitz3.ab3@27289>   olddirname$ = Peek$(check_dirname$)
00038256 <AmiBlitz3.ab3@27290>   oldfilename$ = Peek$(check_filename$)
00038280 <AmiBlitz3.ab3@27291>   For i = 0 To #maxincludes-1
00038294 <AmiBlitz3.ab3@27292>     incline(i) = 0
000382A4 <AmiBlitz3.ab3@27293>   Next
000382C2 <AmiBlitz3.ab3@27294>   !asm
000382C4 <AmiBlitz3.ab3@27295> RTS
000382C6 <AmiBlitz3.ab3@27299>   MOVEQ #0,d1
000382C8 <AmiBlitz3.ab3@27302>   MOVE.b (a5)+,d0
000382CC <AmiBlitz3.ab3@27303>   BEQ 'er1
000382D0 <AmiBlitz3.ab3@27304>   CMP.b #$20,d0
000382D4 <AmiBlitz3.ab3@27305>   BEQ 'l1
000382D6 <AmiBlitz3.ab3@27306>   ADDQ #1,d1
000382DA <AmiBlitz3.ab3@27307>   CMP.b #$22,d0
000382DE <AmiBlitz3.ab3@27308>   BNE 'l1
000382E0 <AmiBlitz3.ab3@27309> RTS
000382E6 <AmiBlitz3.ab3@27312> JMP syntaxerr
0003830A <AmiBlitz3.ab3@27316> erro1t   Dc.b "Only one BSS / Chip Segment allowed",0 : Even
00038328 <AmiBlitz3.ab3@27317> nodata   Dc.b "BSS Segment contains Data!!!!",0       : Even
0003832E <AmiBlitz3.ab3@27322>   TST.b exdebug
00038332 <AmiBlitz3.ab3@27323>   BNE 'l10
00038338 <AmiBlitz3.ab3@27324>   MOVE.l #$4e71,d1
0003833E <AmiBlitz3.ab3@27325>   JSR writeword
00038344 <AmiBlitz3.ab3@27326>   MOVE.l destpointer,d0
00038346 <AmiBlitz3.ab3@27327>   MOVE.l d0,d1
00038348 <AmiBlitz3.ab3@27328>   ADDQ.l #3,d1
0003834E <AmiBlitz3.ab3@27329>   AND.l #$fffffffc,d1
00038354 <AmiBlitz3.ab3@27330>   MOVE.l d1,destpointer
0003835A <AmiBlitz3.ab3@27331>   SUB.l destpointer,d0
0003835E <AmiBlitz3.ab3@27332>   BEQ 'lnf1
00038368 <AmiBlitz3.ab3@27333>   CMP.l #-1,bssstart
0003836C <AmiBlitz3.ab3@27334>   BNE 'lnf1
00038376 <AmiBlitz3.ab3@27335>   CMP.l #-1,chipstart
0003837A <AmiBlitz3.ab3@27336>   BNE 'lnf1
00038380 <AmiBlitz3.ab3@27337>   MOVE.l destpointer,a4
00038386 <AmiBlitz3.ab3@27338>   TST.w dontwrite
0003838A <AmiBlitz3.ab3@27339>   BNE 'lnf1
00038390 <AmiBlitz3.ab3@27340>   MOVE.w #$4e71,-2(a4)
0003839A <AmiBlitz3.ab3@27343>   CMP.l #-1,bssstart
0003839E <AmiBlitz3.ab3@27344>   BEQ 'l11
000383A4 <AmiBlitz3.ab3@27345>   MOVE.l #erro1t,-(a7)
000383AA <AmiBlitz3.ab3@27346> JMP handle_compileerror
000383B4 <AmiBlitz3.ab3@27349>   MOVE.l destpointer,bssstart
000383BC <AmiBlitz3.ab3@27350>   MOVE.b #1,bssmode
000383C2 <AmiBlitz3.ab3@27353>   TST.b chipmode
000383C6 <AmiBlitz3.ab3@27354>   BEQ 'l10
000383D0 <AmiBlitz3.ab3@27355>   MOVE.l destpointer,chipend
000383D6 <AmiBlitz3.ab3@27356>   CLR.b chipmode
000383DC <AmiBlitz3.ab3@27359>   JSR get1bytemain
000383DE <AmiBlitz3.ab3@27360> RTS
000383E4 <AmiBlitz3.ab3@27364>    TST.b exdebug
000383E8 <AmiBlitz3.ab3@27365>   BNE 'x1
000383EE <AmiBlitz3.ab3@27366>   MOVE.l destpointer,d0
000383F4 <AmiBlitz3.ab3@27367>   MOVE.l d0,realbssend
000383FA <AmiBlitz3.ab3@27368>   MOVE.l #$4e71,d1
00038400 <AmiBlitz3.ab3@27369>   JSR writeword
00038406 <AmiBlitz3.ab3@27370>   MOVE.l destpointer,d0
00038408 <AmiBlitz3.ab3@27371>   MOVE.l d0,d1
0003840A <AmiBlitz3.ab3@27372>   ADDQ.l #3,d1
00038410 <AmiBlitz3.ab3@27373>   AND.l #$fffffffc,d1
00038416 <AmiBlitz3.ab3@27374>   MOVE.l d1,destpointer
0003841C <AmiBlitz3.ab3@27375>   SUB.l destpointer,d0
00038420 <AmiBlitz3.ab3@27376>   BEQ 'lnf1
00038426 <AmiBlitz3.ab3@27377>   MOVE.l destpointer,a4
00038430 <AmiBlitz3.ab3@27378>   CMP.l #-1,bssstart
00038434 <AmiBlitz3.ab3@27379>   BNE 'lnf1
0003843E <AmiBlitz3.ab3@27380>   CMP.l #-1,chipstart
00038442 <AmiBlitz3.ab3@27381>   BNE 'lnf1
00038448 <AmiBlitz3.ab3@27382>   TST.w dontwrite
0003844C <AmiBlitz3.ab3@27383>   BNE 'lnf1
00038452 <AmiBlitz3.ab3@27384>   MOVE.w #$4e71,-2(a4)
00038458 <AmiBlitz3.ab3@27387>   TST.b bssmode
0003845C <AmiBlitz3.ab3@27388>   BEQ 'l10
00038466 <AmiBlitz3.ab3@27389>   MOVE.l destpointer,bssend
0003846C <AmiBlitz3.ab3@27390>   CLR.b bssmode
00038476 <AmiBlitz3.ab3@27395>   CMP.l #-1,chipstart
0003847A <AmiBlitz3.ab3@27396>   BEQ 'l11
00038480 <AmiBlitz3.ab3@27397>   MOVE.l #erro1t,-(a7)
00038486 <AmiBlitz3.ab3@27398> JMP handle_compileerror
00038490 <AmiBlitz3.ab3@27401>   MOVE.l destpointer,chipstart
00038498 <AmiBlitz3.ab3@27402>   MOVE.b #1,chipmode
0003849E <AmiBlitz3.ab3@27405>   JSR get1bytemain
000384A0 <AmiBlitz3.ab3@27406> RTS
000384CA <AmiBlitz3.ab3@27410>   !basic
000384DC <AmiBlitz3.ab3@27420>   i.l = Peek.w(?ininclude)
00038502 <AmiBlitz3.ab3@27421>   If i>=0 AND i<#maxincludes
00038534 <AmiBlitz3.ab3@27422>     incdim (i) = Peek.s(?includetemp2)
0003854E <AmiBlitz3.ab3@27423>     incline(i) = Peek.l(?includeline)
00038558 <AmiBlitz3.ab3@27425>     If CLIMode
00038606 <AmiBlitz3.ab3@27426>       If cli_verbose>=2 Then NPrint "Include \\22",incdim(i),"\\22..."
00038624 <AmiBlitz3.ab3@27430>   !asm
00038626 <AmiBlitz3.ab3@27431> RTS
00038650 <AmiBlitz3.ab3@27435>   !basic
00038662 <AmiBlitz3.ab3@27436>   i.l = Peek.w(?ininclude)
00038688 <AmiBlitz3.ab3@27437>   If i>=0 AND i<#maxincludes
000386B8 <AmiBlitz3.ab3@27438>     incdim (i) = ""
000386CC <AmiBlitz3.ab3@27439>     incline(i) = 0
00038704 <AmiBlitz3.ab3@27440>     If i>0 Then Poke.l (?includeline),incline(i-1)+1
00038722 <AmiBlitz3.ab3@27442>   !asm
00038724 <AmiBlitz3.ab3@27443> RTS
0003872A <AmiBlitz3.ab3@27447>   LEA replacedat,a0
0003872E <AmiBlitz3.ab3@27448>   Dc.w $3181,$0A00                                         ;MOVE.w d1,0(a0,d0.l*2)
00038730 <AmiBlitz3.ab3@27449> RTS
00038736 <AmiBlitz3.ab3@27453>   TST.b fpu
0003873A <AmiBlitz3.ab3@27454>   BEQ 'l1
00038744 <AmiBlitz3.ab3@27457>   MOVE.l destpointer,newinitaddr
0003874A <AmiBlitz3.ab3@27458>   JSR writeword
00038750 <AmiBlitz3.ab3@27459>   JSR writelong
00038752 <AmiBlitz3.ab3@27460> RTS
00038754 <AmiBlitz3.ab3@27465>   TST.b (a5)
00038758 <AmiBlitz3.ab3@27466>    BEQ.s 'll20
0003875C <AmiBlitz3.ab3@27467>   CMP.b #$20,(a5)
00038760 <AmiBlitz3.ab3@27468>    BNE.s 'll10
00038762 <AmiBlitz3.ab3@27469>   ADDQ.l #1,a5
00038766 <AmiBlitz3.ab3@27470> BRA.s 'll21
0003876A <AmiBlitz3.ab3@27473>   CMP.b #";",(a5)
0003876E <AmiBlitz3.ab3@27474>   BNE.s 'll20
00038770 <AmiBlitz3.ab3@27477>   TST.b (a5)+
00038774 <AmiBlitz3.ab3@27478>   BEQ.s 'll23
00038778 <AmiBlitz3.ab3@27479> BRA.s 'll25
0003877A <AmiBlitz3.ab3@27482>   SUBQ.l #1,a5
0003877C <AmiBlitz3.ab3@27485> RTS
00038780 <AmiBlitz3.ab3@27489>   MOVEM.l a2/d2,-(a7)
00038782 <AmiBlitz3.ab3@27490>   MOVEQ #0,d2
00038788 <AmiBlitz3.ab3@27491>   LEA ptr_parameterstore,a0
0003878E <AmiBlitz3.ab3@27492>   LEA chartab,a2
00038790 <AmiBlitz3.ab3@27495>   MOVE.b (a5),d0
00038794 <AmiBlitz3.ab3@27496>   TST.b 0(a2,d0)
00038798 <AmiBlitz3.ab3@27497>   BNE 'l10
0003879A <AmiBlitz3.ab3@27498>   ADDQ.l #1,a5
0003879C <AmiBlitz3.ab3@27499>   MOVE.b d0,(a0)+
0003879E <AmiBlitz3.ab3@27500>   ADDQ.l #1,d2
000387A2 <AmiBlitz3.ab3@27501> BRA fc2
000387A4 <AmiBlitz3.ab3@27504>   CLR.b (a0)+
000387AA <AmiBlitz3.ab3@27505>   JSR findlabel2
000387AC <AmiBlitz3.ab3@27506>   MOVE.l a2,a0
000387B0 <AmiBlitz3.ab3@27507>   MOVEM.l (a7)+,a2/d2
000387B2 <AmiBlitz3.ab3@27508> RTS
000387B4 <AmiBlitz3.ab3@27512>   TST.l d0
000387B8 <AmiBlitz3.ab3@27513>   BNE 'l10
000387BE <AmiBlitz3.ab3@27514>     MOVE.l #syntax_,-(a7)
000387C4 <AmiBlitz3.ab3@27515> JMP handle_compileerror
000387CA <AmiBlitz3.ab3@27518>   CMP.l #1,d0
000387CE <AmiBlitz3.ab3@27519>   BNE 'l20
000387D4 <AmiBlitz3.ab3@27520>     MOVE.l #overflow,-(a7)
000387DA <AmiBlitz3.ab3@27521> JMP handle_compileerror
000387DC <AmiBlitz3.ab3@27524>   ADD.l a2,d0
000387DE <AmiBlitz3.ab3@27525>   MOVE.l d0,-(a7)
000387E4 <AmiBlitz3.ab3@27526> JMP handle_compileerror
000387EA <AmiBlitz3.ab3@27530>   JMP _return
000387F0 <AmiBlitz3.ab3@27531>   JMP _return
000387F6 <AmiBlitz3.ab3@27532>   JMP _return
000387FC <AmiBlitz3.ab3@27533>   JMP _return
00038802 <AmiBlitz3.ab3@27534>   JMP _return
00038808 <AmiBlitz3.ab3@27535>   JMP _return
0003880E <AmiBlitz3.ab3@27536>   JMP _return
00038814 <AmiBlitz3.ab3@27537>   JMP _return
0003881A <AmiBlitz3.ab3@27538>   JMP _return
00038820 <AmiBlitz3.ab3@27539>   JMP _return
00038826 <AmiBlitz3.ab3@27540>   JMP Atokejsr
0003882C <AmiBlitz3.ab3@27541>   JMP writeinit
00038832 <AmiBlitz3.ab3@27542>   JMP macroexecute
00038838 <AmiBlitz3.ab3@27543>   JMP findnext
0003883E <AmiBlitz3.ab3@27544>   JMP replacelib
00038844 <AmiBlitz3.ab3@27545>   JMP findconstant2
0003884A <AmiBlitz3.ab3@27546>   JMP findchar                                             ;char in d1
00038850 <AmiBlitz3.ab3@27547>   JMP stripspaces
00038856 <AmiBlitz3.ab3@27548>   JMP calc                                                 ;d0 varmode
0003885C <AmiBlitz3.ab3@27549>   JMP error
00038862 <AmiBlitz3.ab3@27550>   JMP writelong                                            ;d1 value
00038868 <AmiBlitz3.ab3@27551>   JMP writeword                                            ;d1 value
0003886E <AmiBlitz3.ab3@27552>   JMP writebyte                                            ;d1 value
00038874 <AmiBlitz3.ab3@27553> JMP exit
00038878 <AmiBlitz3.ab3@27557>   destpointer:    Ds.l 1                                ;pc org source      ;Ds.w 1
0003887A <AmiBlitz3.ab3@27560>   fast            Dc.w 0
0003887C <AmiBlitz3.ab3@27561>   fpu             Dc.w 0
0003887E <AmiBlitz3.ab3@27562>   newsyntax       Dc.w 0
0003887F <AmiBlitz3.ab3@27564>   optistring      Dc.b 0
00038880 <AmiBlitz3.ab3@27565>   optistring2     Dc.b 0
00038881 <AmiBlitz3.ab3@27566>   optiarray       Dc.b 0
00038882 <AmiBlitz3.ab3@27567>   quickadd        Dc.b 0
00038884 <AmiBlitz3.ab3@27568>   newmode         Dc.w 0
00038886 <AmiBlitz3.ab3@27569>   mode            Dc.w 0
00038888 <AmiBlitz3.ab3@27570>   string1         Dc.w 0
0003888A <AmiBlitz3.ab3@27571>   load_var_size   Dc.w 0
0003888C <AmiBlitz3.ab3@27572>   load_var_reg    Dc.w 0
00038890 <AmiBlitz3.ab3@27573>   load_var_addr   Dc.l 0
00038892 <AmiBlitz3.ab3@27574>   imm_size        Dc.w 0
00038894 <AmiBlitz3.ab3@27575>   imm_reg         Dc.w 0
00038898 <AmiBlitz3.ab3@27576>   imm_addr        Dc.l 0
00038899 <AmiBlitz3.ab3@27577>   iee             Dc.b 0
0003889A <AmiBlitz3.ab3@27578>   _dcb            Dc.b 0
0003889E <AmiBlitz3.ab3@27579>   nohunkoffset    Dc.l 0
000388A2 <AmiBlitz3.ab3@27582> teddata:        Dc.l tokens
000388A6 <AmiBlitz3.ab3@27583>                 Dc.l 0 ;compilermenu_entries               ; NOT used anymore
000388AA <AmiBlitz3.ab3@27584>                 Dc.l read_xtrafile
000388AE <AmiBlitz3.ab3@27585>                 Dc.l write_xtrafile
000388B2 <AmiBlitz3.ab3@27586>                 Dc.l call_menuentry                        ; compile AND RUN ?
000388B6 <AmiBlitz3.ab3@27587>                 Dc.l 0
000388BA <AmiBlitz3.ab3@27588>                 Dc.b ":",34,".;"
000388BE <AmiBlitz3.ab3@27589>                 Dc.l "NEW1"
000388C2 <AmiBlitz3.ab3@27590>                 Dc.l newtypebase
000388C6 <AmiBlitz3.ab3@27591> realconstbase:  Dc.l labelbase
000388CA <AmiBlitz3.ab3@27592> deflib          Dc.l 0
000388CE <AmiBlitz3.ab3@27593> incd            Dc.l 0
000388D2 <AmiBlitz3.ab3@27594>                 Dc.l 0
000388D6 <AmiBlitz3.ab3@27595>                 Dc.l 0
000388DA <AmiBlitz3.ab3@27596>                 Dc.l 0
000388DC <AmiBlitz3.ab3@27597> _return         RTS
000388DD <AmiBlitz3.ab3@27598>                 Dc.b 0
00038CDD <AmiBlitz3.ab3@27599> chartab2        Ds.l 256
00038CE1 <AmiBlitz3.ab3@27600> codeend         Dc.l 0
00038CE5 <AmiBlitz3.ab3@27601> hunkoffsetnum   Dc.l 0
00038CE9 <AmiBlitz3.ab3@27602> chipsize        Dc.l 0
00038CED <AmiBlitz3.ab3@27603> bsssize         Dc.l 0
00038CF1 <AmiBlitz3.ab3@27604> bssstart        Dc.l -1
00038CF5 <AmiBlitz3.ab3@27605> bssend          Dc.l -1
00038CF9 <AmiBlitz3.ab3@27606> chipstart       Dc.l -1
00038CFD <AmiBlitz3.ab3@27607> chipend         Dc.l -1
00038CFE <AmiBlitz3.ab3@27608> bssmode         Dc.b 0
00038CFF <AmiBlitz3.ab3@27609> chipmode        Dc.b 0
00038D00 <AmiBlitz3.ab3@27610> newhunk         Dc.b 0
00038D04 <AmiBlitz3.ab3@27611> bssnum          Dc.l 0
00038D08 <AmiBlitz3.ab3@27612> chipnum         Dc.l 0
00038D0C <AmiBlitz3.ab3@27613> lastinstruction Dc.l 0
00038D10 <AmiBlitz3.ab3@27614> lastinstructionaddr Dc.l 0
00038D24 <AmiBlitz3.ab3@27615> hunkbegin       Dc.l $03F3,$00,$02,$00,$01
00038D28 <AmiBlitz3.ab3@27616> tstsize1b:      Ds.l 1
00038D2C <AmiBlitz3.ab3@27617> bsssize2        Dc.l 1
00038D30 <AmiBlitz3.ab3@27618>                 Dc.l $03E9
00038D34 <AmiBlitz3.ab3@27619> tstsize2b:      Dc.l $100
00038D48 <AmiBlitz3.ab3@27620> hunkbegin2      Dc.l $03F3,$00,$03,$00,$02
00038D4C <AmiBlitz3.ab3@27621> tstsize1c:      Ds.l 1
00038D50 <AmiBlitz3.ab3@27622> bsssize3        Dc.l 1
00038D54 <AmiBlitz3.ab3@27623> chipsize2       Dc.l 1
00038D58 <AmiBlitz3.ab3@27624>                 Dc.l $3e9
00038D5C <AmiBlitz3.ab3@27625> tstsize2c       Dc.l 0
00038D6C <AmiBlitz3.ab3@27626> hunkend         Dc.l $3f2,$3eb,0,$3f2
00038D7C <AmiBlitz3.ab3@27627> hunkend2        Dc.l $3f2,$3ea,0,$3f2
00038D83 <AmiBlitz3.ab3@27628> strcpy          Dc.b "strcpy",0
00038D8A <AmiBlitz3.ab3@27629> strcmp          Dc.b "strcmp",0
00038D91 <AmiBlitz3.ab3@27630> strvar          Dc.b "strvar",0
00038D96 <AmiBlitz3.ab3@27631> qmul            Dc.b "qmul",0
00038D9B <AmiBlitz3.ab3@27632> qdiv            Dc.b "qdiv",0
00038DA2 <AmiBlitz3.ab3@27633> _MaxLen         Dc.b "maxlen",0
00038DA7 <AmiBlitz3.ab3@27634> notf            Dc.b "????",0
00038DCA <AmiBlitz3.ab3@27636> errtext         Dc.b "only reg addressing Mode supported",0
00038DF4 <AmiBlitz3.ab3@27637> fpuerr          Dc.b "Instruction not yet supported by 68K FPU ",0
00038E36 <AmiBlitz3.ab3@27638> cmplxerr        Dc.b "Formula too complex for 68K FPU or too much regload register used",0 : Even
00038E38 <AmiBlitz3.ab3@27639> peeksize        Dc.w 0
00038E3C <AmiBlitz3.ab3@27641> mainstart       Dc.l 0
00038E3D <AmiBlitz3.ab3@27643> infunctioncode  Dc.b 0
00038E3F <AmiBlitz3.ab3@27644> regnumstore     Dc.w 0
00038E6C <AmiBlitz3.ab3@27645>                 Dc.b "$VER: AmiBlitz3 \\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
00038E74 <AmiBlitz3.ab3@27646> testcode        Dc.b "print i",0
00038ED8 <AmiBlitz3.ab3@27647>                 Ds.b 100
00038EE6 <AmiBlitz3.ab3@27648> devo            Dc.b "developobject",0 : Even
00038EF8 <AmiBlitz3.ab3@27649> autostorename   Dc.b "__autoconstantnum",0
00038F02 <AmiBlitz3.ab3@27650> _include        Dc.b "__include",0
00038F0A <AmiBlitz3.ab3@27651> _debug          Dc.b "__debug",0
00038F0E <AmiBlitz3.ab3@27652> unusedfunc      Dc.l 0
00038F10 <AmiBlitz3.ab3@27656>   MOVE.l a0,d0
00038F3A <AmiBlitz3.ab3@27657>   !basic
00038F3E <AmiBlitz3.ab3@27658>   *olderror.l= PutD0
00038F98 <AmiBlitz3.ab3@27659> 
00038FCC <AmiBlitz3.ab3@27660>   error_type$ = error$
00039068 <AmiBlitz3.ab3@27661> 
0003907C <AmiBlitz3.ab3@27662>   If Peek.l (?beforeparameterfetch)
00039092 <AmiBlitz3.ab3@27663>     MaxLen detokenline.s = 65536
000390D4 <AmiBlitz3.ab3@27664>    !ComData_GetL{comPtr_PreProcessor,include_preprocessor}
000390E4 <AmiBlitz3.ab3@27665>    *tn.preprocessor = Peek.l(?include_preprocessor)
0003910E <AmiBlitz3.ab3@27666>     written.l = preproc_DetokenizeLine{*tn,Peek.l (?beforeparameterfetch),&detokenline}
00039136 <AmiBlitz3.ab3@27667>     If written>0 Then Poke.b &detokenline+written,0
0003917A <AmiBlitz3.ab3@27668>     If written>40 Then Poke.s &detokenline+36,"..."   ; added to limit the wide of the error requester  tomsmart1
000391A4 <AmiBlitz3.ab3@27669>     sourceLineText.s = Peek.s(&detokenline)
000391AA <AmiBlitz3.ab3@27670>   Else
000391D2 <AmiBlitz3.ab3@27671>     sourceLineText = "NULL"
00039206 <AmiBlitz3.ab3@27673>   error_source$ = sourceLineText
00039258 <AmiBlitz3.ab3@27674>   error$ + sourceLineText
0003925E <AmiBlitz3.ab3@27675>   GetD0 &error$
0003927C <AmiBlitz3.ab3@27676>   !asm
0003927E <AmiBlitz3.ab3@27677>   MOVE.l d0,a0
00039280 <AmiBlitz3.ab3@27678> RTS
00039282 <AmiBlitz3.ab3@27682>   MOVE.l a0,-(a7)
00039284 <AmiBlitz3.ab3@27683>   MOVE.l a0,d0
00039286 <AmiBlitz3.ab3@27684>   MOVE.l a5,a0                                             ;macro title
000392B0 <AmiBlitz3.ab3@27685>   !basic
000392B4 <AmiBlitz3.ab3@27686>   i = PutD0
000392B6 <AmiBlitz3.ab3@27687>   MOVEQ #20,d0
000392B8 <AmiBlitz3.ab3@27690>     MOVE.b -(a0),d1
000392BC <AmiBlitz3.ab3@27691>     BEQ 'l1
000392C0 <AmiBlitz3.ab3@27692>     CMP.b #":",d1
000392C4 <AmiBlitz3.ab3@27693>     BEQ 'l1
000392C6 <AmiBlitz3.ab3@27694>     SUBQ.l #1,d0
000392CA <AmiBlitz3.ab3@27695>     BNE 'l2
000392CC <AmiBlitz3.ab3@27698>   ADDQ #1,a0
000392CE <AmiBlitz3.ab3@27699>   MOVE.l a0,d0
000392D2 <AmiBlitz3.ab3@27700>   i2.l = PutD0
000392EE <AmiBlitz3.ab3@27701>   If Peek.w (?ininclude)>0
00039348 <AmiBlitz3.ab3@27702>     Poke.s (?includetemp2),incdim(Peek.w(?ininclude)-1)
00039358 <AmiBlitz3.ab3@27703>     errorline.l = Peek.l(?includeline);-1
00039380 <AmiBlitz3.ab3@27704>     Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
000393AA <AmiBlitz3.ab3@27705>     errorfile.s = Peek.s(?includetemp2)
000393B0 <AmiBlitz3.ab3@27706>   Else
000393E8 <AmiBlitz3.ab3@27707>     Poke.s (?includetemp2),Peek.s(?ptr_parameterstore)
000393FE <AmiBlitz3.ab3@27708>     errorline.l = Peek.l(?compilelinecounter) + 1
00039432 <AmiBlitz3.ab3@27709>     errorfile.s = cli_sourcefile
0003943C <AmiBlitz3.ab3@27712>   If i
000394E0 <AmiBlitz3.ab3@27713>     errortext.s = !TRANS{Replace$(Peek.s(i),"\\0a","\n")}
0003955E <AmiBlitz3.ab3@27714>     errortext.s = Replace$(errortext,"\n","\\0a")
00039564 <AmiBlitz3.ab3@27715>   Else
0003958C <AmiBlitz3.ab3@27716>     errortext.s = "???"
00039704 <AmiBlitz3.ab3@27719>   NPrint "\\1b[1m",!TRANS{"Compiler Error"}," #",Peek.l(?errorcounter)," <",errorfile,"@",errorline,">\\1b[0m "
000397CC <AmiBlitz3.ab3@27720>   NPrint "  ",error_type$,"\\n  ",error_source$
000397EA <AmiBlitz3.ab3@27724>   !asm
000397EC <AmiBlitz3.ab3@27725>   MOVE.l (a7)+,a0
000397EE <AmiBlitz3.ab3@27726> RTS
000397F0 <AmiBlitz3.ab3@27730>   MOVE.l a0,-(a7)
000397F2 <AmiBlitz3.ab3@27731>   MOVE.l a0,d0
000397F4 <AmiBlitz3.ab3@27732>   MOVE.l a5,a0                                             ;macro title
0003981E <AmiBlitz3.ab3@27733>   !basic
00039822 <AmiBlitz3.ab3@27734>   i = PutD0
00039824 <AmiBlitz3.ab3@27735>   MOVEQ #20,d0
00039826 <AmiBlitz3.ab3@27738>     MOVE.b -(a0),d1
0003982A <AmiBlitz3.ab3@27739>     BEQ 'l1
0003982E <AmiBlitz3.ab3@27740>     CMP.b #":",d1
00039832 <AmiBlitz3.ab3@27741>     BEQ 'l1
00039834 <AmiBlitz3.ab3@27742>     SUBQ.l #1,d0
00039838 <AmiBlitz3.ab3@27743>     BNE 'l2
0003983A <AmiBlitz3.ab3@27746>   ADDQ #1,a0
0003983C <AmiBlitz3.ab3@27747>   MOVE.l a0,d0
00039840 <AmiBlitz3.ab3@27748>   i2.l = PutD0
000398C4 <AmiBlitz3.ab3@27749>   fid.l = file_Open{dos_AddPart{my_systemdir$,"ab_compileerror.txt"},#file_forcewrite}
000398D8 <AmiBlitz3.ab3@27750>   If fid <> -1
000398F4 <AmiBlitz3.ab3@27751>     If Peek.w (?ininclude)>0
0003994E <AmiBlitz3.ab3@27752>       Poke$(?includetemp2),incdim(Peek.w(?ininclude)-1)
00039954 <AmiBlitz3.ab3@27753>     Else
00039980 <AmiBlitz3.ab3@27754>       Poke$(?includetemp2),""
000399AA <AmiBlitz3.ab3@27756>     a$ = Peek$(?includetemp2)
00039A1C <AmiBlitz3.ab3@27757>     x$ = Replace$(Peek$(i),"\\0a","\n")
00039A4E <AmiBlitz3.ab3@27758>     file_WriteLine{fid,x$}
00039A98 <AmiBlitz3.ab3@27759>     file_WriteLine{fid,Str$(Peek.l(?compilelinecounter) + 1)}
00039AC4 <AmiBlitz3.ab3@27760>     If a$
00039AF6 <AmiBlitz3.ab3@27761>       file_WriteLine{fid,a$}
00039B40 <AmiBlitz3.ab3@27762>       file_WriteLine{fid,Str$(Peek.l(?includeline)-1)}
00039B68 <AmiBlitz3.ab3@27763>       Poke.l ?compilelinecounter,Peek.l(?includeline) - 1
00039B6E <AmiBlitz3.ab3@27764>     Else
00039B94 <AmiBlitz3.ab3@27765>       file_WriteLine{fid,"none"}
00039BC4 <AmiBlitz3.ab3@27767>     file_WriteLine{fid,Peek$(i2)}
00039C1A <AmiBlitz3.ab3@27768>     file_WriteLine{fid,Str$(Peek.l(?globallinecount))+" line(s) compiled"}
00039C64 <AmiBlitz3.ab3@27769>     file_WriteLine{fid,Hex$(Peek.w(?globalvarpointer))+" global var base"}
00039C6E <AmiBlitz3.ab3@27770>     file_Close{fid}
00039C8C <AmiBlitz3.ab3@27772>   !asm
00039C8E <AmiBlitz3.ab3@27773>   MOVE.l (a7)+,a0
00039C90 <AmiBlitz3.ab3@27774> RTS
00039CBA <AmiBlitz3.ab3@27778>   !basic
00039CBE <AmiBlitz3.ab3@27779>   progress.l     = PutD0
00039CD0 <AmiBlitz3.ab3@27780>   total.l        = Peek.w(?progressbar_width)
00039CEE <AmiBlitz3.ab3@27781>   calcpro        = (progress * 100) / total +1
00039D00 <AmiBlitz3.ab3@27782>   pass.l         = Peek.w(?pass)
00039D12 <AmiBlitz3.ab3@27783>   typ.l          = Peek.w(?compiler_job)
00039D30 <AmiBlitz3.ab3@27786> If (pass><pass_old OR typ><typ_old)
00039D3E <AmiBlitz3.ab3@27788>     If pass_old><pass
00039DDA <AmiBlitz3.ab3@27789>       passtatusstr.s = !TRANS{"Pass"}+" "+Str$(pass)+"..."
00039E30 <AmiBlitz3.ab3@27790>       If cli_verbose>=2 Then NPrint passtatusstr
00039E36 <AmiBlitz3.ab3@27793>     pass_old = pass
00039E3C <AmiBlitz3.ab3@27794>     typ_old  = typ
00039E42 <AmiBlitz3.ab3@27795>     update_comstatus_gui = True
00039E54 <AmiBlitz3.ab3@27796>     If typ=0
00039F34 <AmiBlitz3.ab3@27797>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Compiling Sources..."}
00039F3C <AmiBlitz3.ab3@27798>       calcpro = 0  ; set gauge to 0
00039F4E <AmiBlitz3.ab3@27800>     If typ=1
0003A02E <AmiBlitz3.ab3@27801>       comstatusstr = !TRANS{"Pass"}+" "+Str$(pass)+": "+!TRANS{"Building Executable..."}
0003A036 <AmiBlitz3.ab3@27802>       calcpro = 0  ; set gauge to 0
0003A08C <AmiBlitz3.ab3@27805>     If cli_verbose>=3 Then NPrint comstatusstr
0003A09A <AmiBlitz3.ab3@27808>   If (calcpro >< calcpro_old)
0003A0EE <AmiBlitz3.ab3@27809>     If cli_verbose>=4 Then NPrint calcpro,"% compiled..."
0003A0F4 <AmiBlitz3.ab3@27810>     calcpro_old = calcpro
0003A0FA <AmiBlitz3.ab3@27811>     update_comstatus_gui = True
0003A114 <AmiBlitz3.ab3@27814>   If update_comstatus_gui = True                                     ; check if a update of the gui nessecary
0003A132 <AmiBlitz3.ab3@27815>     !asm
0003A164 <AmiBlitz3.ab3@27816> 
0003A18E <AmiBlitz3.ab3@27817>     !basic
0003A194 <AmiBlitz3.ab3@27818>     update_comstatus_gui  = False ; because we update the gui
0003A1B2 <AmiBlitz3.ab3@27820>   !asm
0003A1B4 <AmiBlitz3.ab3@27821> RTS
0003A1BA <AmiBlitz3.ab3@27826>   MOVE.w maxobject_pos,D5                                  ;max objects 1. visible
0003A1C0 <AmiBlitz3.ab3@27827>   LEA maxobjects_value,A3                                  ;current value
0003A1C6 <AmiBlitz3.ab3@27828>   MOVEA.l libpointer,A2
0003A1CA <AmiBlitz3.ab3@27831>   CMPA.w #$0,A2
0003A1CE <AmiBlitz3.ab3@27832>   BEQ.w menu4c__igotb
0003A1D0 <AmiBlitz3.ab3@27833>   MOVEA.l A2,A1
0003A1D4 <AmiBlitz3.ab3@27834>   ADDA.l $12(A1),A1
0003A1D8 <AmiBlitz3.ab3@27835>   TST.w -$2(A1)
0003A1DC <AmiBlitz3.ab3@27836>   BEQ.w JL_0_FFF6b
0003A1DE <AmiBlitz3.ab3@27837>   SUBQ.w #1,D5
0003A1E2 <AmiBlitz3.ab3@27838>   BMI.w JL_0_FFFCb
0003A1E4 <AmiBlitz3.ab3@27841>   MOVEA.l (A2),A2
0003A1E8 <AmiBlitz3.ab3@27842> BRA.w JL_0_FFDAb
0003A1EC <AmiBlitz3.ab3@27845>   MOVE.w (A3),-$4(A1)
0003A1EE <AmiBlitz3.ab3@27848> RTS
0003A1F4 <AmiBlitz3.ab3@27852>   MOVE.w debugnest,d0
0003A1FA <AmiBlitz3.ab3@27853>   LEA storedebugmode, a0
0003A202 <AmiBlitz3.ab3@27854>   MOVE.b 0(a0,d0.w),debugmode
0003A208 <AmiBlitz3.ab3@27855>   TST.w debugnest
0003A20C <AmiBlitz3.ab3@27856>   BEQ JUMP_unpairrunerrs
0003A212 <AmiBlitz3.ab3@27857>   SUBQ.w #1,debugnest
0003A214 <AmiBlitz3.ab3@27858> RTS
0003A21A <AmiBlitz3.ab3@27861> JMP runerrsoverflow
0003A220 <AmiBlitz3.ab3@27864> JMP unpairrunerrs
0003A228 <AmiBlitz3.ab3@27868>   BCHG #$7,use_debugger
0003A230 <AmiBlitz3.ab3@27870>   BTST #$7,use_debugger
0003A234 <AmiBlitz3.ab3@27871>   BNE 'debugon
0003A23A <AmiBlitz3.ab3@27872>   CLR.w debugmode
0003A23E <AmiBlitz3.ab3@27873> BRA.b 'debugoff
0003A244 <AmiBlitz3.ab3@27876>   SNE debugmode
0003A246 <AmiBlitz3.ab3@27879>   MOVE.l a0,-(a7)
0003A27E <AmiBlitz3.ab3@27882>   !ComData_SetB{comByte_DebugMode,debugmode}
0003A280 <AmiBlitz3.ab3@27887>   MOVE.l (a7)+,a0
0003A282 <AmiBlitz3.ab3@27888> RTS
0003A28A <AmiBlitz3.ab3@27893>   BTST #$7,use_debugger
0003A28E <AmiBlitz3.ab3@27894>   BNE 'debugon
0003A294 <AmiBlitz3.ab3@27895>   CLR.w debugmode
0003A298 <AmiBlitz3.ab3@27896> BRA.b 'debugoff
0003A29E <AmiBlitz3.ab3@27899>   SNE debugmode
0003A2A0 <AmiBlitz3.ab3@27902> RTS
0003A2A6 <AmiBlitz3.ab3@27906>   ADDQ.w #1,debugnest
0003A2AC <AmiBlitz3.ab3@27907>   MOVE.w debugnest,d0
0003A2B0 <AmiBlitz3.ab3@27908>   CMP.w #18,d0
0003A2B4 <AmiBlitz3.ab3@27909>    BGE JUMP_runerrsoverflow
0003A2BA <AmiBlitz3.ab3@27910>   LEA storedebugmode, a0
0003A2C2 <AmiBlitz3.ab3@27911>   MOVE.b debugmode,0( a0,d0.w)
0003A2C8 <AmiBlitz3.ab3@27914>   SF debugmode
0003A2CA <AmiBlitz3.ab3@27915> RTS
0003A34A <AmiBlitz3.ab3@27918> usedpath:  Ds.l 32
0003A34E <AmiBlitz3.ab3@27922>   BEQ.w JUMP_syntaxerr
0003A354 <AmiBlitz3.ab3@27923>   LEA lastpath,A0
0003A358 <AmiBlitz3.ab3@27924>   MOVEM.l a0-a1/d0,-(a7)
0003A35E <AmiBlitz3.ab3@27925>   LEA lastpath2,a1
0003A360 <AmiBlitz3.ab3@27928>     MOVE.b (a0)+,(a1)+
0003A364 <AmiBlitz3.ab3@27929>   BNE 'l2
0003A368 <AmiBlitz3.ab3@27930>   MOVEM.l (a7)+,a0-a1/d0
0003A36C <AmiBlitz3.ab3@27931>   LEA usedpath(PC),A0
0003A370 <AmiBlitz3.ab3@27932>   MOVEM.l a0-a1/d0,-(a7)
0003A376 <AmiBlitz3.ab3@27933>   LEA lastpath,a1
0003A378 <AmiBlitz3.ab3@27936>     MOVE.b (a0)+,(a1)+
0003A37C <AmiBlitz3.ab3@27937>   BNE 'l1
0003A380 <AmiBlitz3.ab3@27938>   MOVEM.l (a7)+,a0-a1/d0
0003A382 <AmiBlitz3.ab3@27941>   TST.w D0
0003A386 <AmiBlitz3.ab3@27942>    BMI.w JUMP_syntaxerr
0003A388 <AmiBlitz3.ab3@27943>   MOVE.b D0,(A0)+
0003A38C <AmiBlitz3.ab3@27944>   BSR.w JUMP_get1bytemain
0003A390 <AmiBlitz3.ab3@27945>    BNE.w JL_0_4AA8
0003A394 <AmiBlitz3.ab3@27946>   MOVE.b #$2,(A0)
0003A396 <AmiBlitz3.ab3@27947> RTS
0003A39A <AmiBlitz3.ab3@27951>   BEQ.w JUMP_syntaxerr
0003A3A0 <AmiBlitz3.ab3@27952>   LEA path2,A0
0003A3A2 <AmiBlitz3.ab3@27962>   TST.w D0
0003A3A6 <AmiBlitz3.ab3@27963>    BMI.w JUMP_syntaxerr
0003A3A8 <AmiBlitz3.ab3@27964>   MOVE.b D0,(A0)+
0003A3AC <AmiBlitz3.ab3@27965>   BSR.w JUMP_get1bytemain
0003A3B0 <AmiBlitz3.ab3@27966>    BNE.w JL_0_4AA8b
0003A3B4 <AmiBlitz3.ab3@27967>   MOVE.b #$2,(A0)
0003A3B6 <AmiBlitz3.ab3@27968> RTS
0003A3BC <AmiBlitz3.ab3@27977> JMP errormsg_reg
0003A3C6 <AmiBlitz3.ab3@27981>   MOVE.l #$f22d6780,fpucodeglobal
0003A3D0 <AmiBlitz3.ab3@27982>   MOVE.l #$f22c6780,fpucodelocal
0003A3D6 <AmiBlitz3.ab3@27983>   LEA regtable,a0
0003A3E0 <AmiBlitz3.ab3@27984>   MOVE.l #7,maxregs
0003A3E2 <AmiBlitz3.ab3@27987>   MOVE.l (a0),d0
0003A3E6 <AmiBlitz3.ab3@27988>   BEQ 'e1
0003A3E8 <AmiBlitz3.ab3@27989>   CLR.l (a0)
0003A3EC <AmiBlitz3.ab3@27990>   MOVE.w 4(a0),d0
0003A3F6 <AmiBlitz3.ab3@27991>   MOVE.l fpucodeglobal,fpucode
0003A3FA <AmiBlitz3.ab3@27992>   TST.w 6(a0)
0003A3FE <AmiBlitz3.ab3@27993>   BEQ 'glob
0003A408 <AmiBlitz3.ab3@27994>   MOVE.l fpucodelocal,fpucode
0003A40E <AmiBlitz3.ab3@27997>   MOVE.l fpucode,d1
0003A414 <AmiBlitz3.ab3@27998>   JSR writelong
0003A41E <AmiBlitz3.ab3@27999>   SUB.l #$80,fpucodelocal
0003A428 <AmiBlitz3.ab3@28000>   SUB.l #$80,fpucodeglobal
0003A42A <AmiBlitz3.ab3@28001>   MOVE.w d0,d1
0003A430 <AmiBlitz3.ab3@28002>   JSR writeword
0003A432 <AmiBlitz3.ab3@28003>   ADDQ #8,a0
0003A436 <AmiBlitz3.ab3@28004> BRA 'again
0003A438 <AmiBlitz3.ab3@28007> RTS
0003A43E <AmiBlitz3.ab3@28014> JMP notypeerr
0003A444 <AmiBlitz3.ab3@28017> JMP illtypeerr
0003A44E <AmiBlitz3.ab3@28020>   MOVE.l #$f22d4780,fpucodeglobal
0003A458 <AmiBlitz3.ab3@28021>   MOVE.l #$f22c4780,fpucodelocal
0003A45E <AmiBlitz3.ab3@28022>   LEA regtable,a0
0003A460 <AmiBlitz3.ab3@28023>   TST.l (a0)
0003A464 <AmiBlitz3.ab3@28024>    BNE JUMP_errormsg_reg
0003A466 <AmiBlitz3.ab3@28025>   MOVE.l d7,-(a7)
0003A468 <AmiBlitz3.ab3@28026>   SUBQ.l #1,a5
0003A46E <AmiBlitz3.ab3@28029>   JSR getparameter2
0003A472 <AmiBlitz3.ab3@28030>   BEQ.w 'nopar
0003A478 <AmiBlitz3.ab3@28031>   MOVE.w d0,lastchar
0003A47E <AmiBlitz3.ab3@28032>   JSR findvariable
0003A482 <AmiBlitz3.ab3@28033>   BNE 'islocal
0003A48C <AmiBlitz3.ab3@28034>   MOVE.l fpucodeglobal,fpucode
0003A496 <AmiBlitz3.ab3@28035>   MOVE.l #3,maxregs
0003A498 <AmiBlitz3.ab3@28036>   MOVEQ #0,d7
0003A4A0 <AmiBlitz3.ab3@28039>   CMP.l #newtype_float,$a(a2)                              ;is float type
0003A4A4 <AmiBlitz3.ab3@28040>    BEQ 'doit
0003A4AC <AmiBlitz3.ab3@28041>   CMP.l #newtype_double,$a(a2)
0003A4B0 <AmiBlitz3.ab3@28042>    BNE JUMP_illtypeerr
0003A4B6 <AmiBlitz3.ab3@28045>   LEA regtable,a0
0003A4B8 <AmiBlitz3.ab3@28046>   MOVEQ #0,d0
0003A4BA <AmiBlitz3.ab3@28049>   TST.l (a0)
0003A4BE <AmiBlitz3.ab3@28050>    BEQ 'store
0003A4C0 <AmiBlitz3.ab3@28051>   ADDQ.l #4,d0
0003A4C2 <AmiBlitz3.ab3@28052>   ADDQ.l #8,a0
0003A4C8 <AmiBlitz3.ab3@28053>   CMP.l #16,d0
0003A4CC <AmiBlitz3.ab3@28054>    BCS 'loop
0003A4D6 <AmiBlitz3.ab3@28055>   MOVE.l #2,maxregs
0003A4DC <AmiBlitz3.ab3@28056>   CMP.l #20,d0
0003A4E0 <AmiBlitz3.ab3@28057>    BCS 'loop
0003A4EA <AmiBlitz3.ab3@28058>   MOVE.l #1,maxregs
0003A4F0 <AmiBlitz3.ab3@28059>   CMP.l #24,d0
0003A4F4 <AmiBlitz3.ab3@28060>    BCS 'loop
0003A4FA <AmiBlitz3.ab3@28061> JMP toovarerr
0003A500 <AmiBlitz3.ab3@28064>   TST.b fpu
0003A504 <AmiBlitz3.ab3@28065>    BEQ 'nofpu
0003A506 <AmiBlitz3.ab3@28066>   MOVE.l a2,(a0)
0003A50C <AmiBlitz3.ab3@28067>   MOVE.w 4(a2),4(a0)
0003A510 <AmiBlitz3.ab3@28068>   MOVE.w d7,6(a0)
0003A516 <AmiBlitz3.ab3@28069>   MOVE.l fpucode,d1
0003A520 <AmiBlitz3.ab3@28070>   SUB.l #$80,fpucodeglobal
0003A52A <AmiBlitz3.ab3@28071>   SUB.l #$80,fpucodelocal
0003A530 <AmiBlitz3.ab3@28072>   JSR writelong
0003A534 <AmiBlitz3.ab3@28073>   MOVE.w 4(a2),d1
0003A53A <AmiBlitz3.ab3@28074>   JSR writeword
0003A540 <AmiBlitz3.ab3@28077>   MOVE.w lastchar,d0
0003A544 <AmiBlitz3.ab3@28078>   CMP.w #":",d0
0003A548 <AmiBlitz3.ab3@28079>    BEQ 'nopar
0003A54A <AmiBlitz3.ab3@28080>   TST.w d0
0003A54E <AmiBlitz3.ab3@28081>    BEQ 'nopar
0003A552 <AmiBlitz3.ab3@28082>   CMP.w #",",d0
0003A556 <AmiBlitz3.ab3@28083>   BNE JUMP_syntaxerr
0003A55A <AmiBlitz3.ab3@28084> BRA 'l2
0003A55C <AmiBlitz3.ab3@28087>    MOVE.l (a7)+,d7
0003A55E <AmiBlitz3.ab3@28088> RTS
0003A560 <AmiBlitz3.ab3@28091>   MOVEQ #1,d7
0003A568 <AmiBlitz3.ab3@28092>   MOVE.b #1,newvariable
0003A56E <AmiBlitz3.ab3@28093>   LEA firstlocal,a2
0003A574 <AmiBlitz3.ab3@28094>   JSR findvariable
0003A57A <AmiBlitz3.ab3@28095>   CLR.b newvariable
0003A580 <AmiBlitz3.ab3@28096>   CMP.l #-1,d0
0003A584 <AmiBlitz3.ab3@28097>   BEQ.w JUMP_notypeerr2
0003A58E <AmiBlitz3.ab3@28098>   MOVE.l fpucodelocal,fpucode
0003A592 <AmiBlitz3.ab3@28099> BRA 'go
0003A596 <AmiBlitz3.ab3@28102>   CMP.b #".",d0
0003A59A <AmiBlitz3.ab3@28103>    BNE 'l1
0003A59E <AmiBlitz3.ab3@28104>   BSR JUMP_get1bytemain
0003A5A2 <AmiBlitz3.ab3@28105>   BSR JUMP_get1bytemain
0003A5A6 <AmiBlitz3.ab3@28108>   ORI .b #$20,d0
0003A5AA <AmiBlitz3.ab3@28109>   CMP.b #"d",d0
0003A5AE <AmiBlitz3.ab3@28110>    BNE JUMP_illeaerr
0003A5B2 <AmiBlitz3.ab3@28111>   BSR JUMP_get1bytemain
0003A5B6 <AmiBlitz3.ab3@28112>   SUB.b #$30,d0
0003A5BA <AmiBlitz3.ab3@28113>   CMP.b #$7,d0
0003A5BE <AmiBlitz3.ab3@28114>    BGT JUMP_syntaxerr
0003A5C2 <AmiBlitz3.ab3@28115>   MOVE.w #$49c0,d1
0003A5C4 <AmiBlitz3.ab3@28116>   ADD.b d0,d1
0003A5CA <AmiBlitz3.ab3@28117>   JSR writeword
0003A5CE <AmiBlitz3.ab3@28118>   BSR JUMP_get1bytemain
0003A5D0 <AmiBlitz3.ab3@28119> RTS
0003A5D6 <AmiBlitz3.ab3@28123>   LEA lastpath,a0
0003A5DA <AmiBlitz3.ab3@28124>   LEA usedpath(PC),A1
0003A5DC <AmiBlitz3.ab3@28127>     MOVE.b (a0)+,(a1)+
0003A5E0 <AmiBlitz3.ab3@28128>   BNE 'l1
0003A5E6 <AmiBlitz3.ab3@28130>   LEA lastpath2,a0
0003A5EC <AmiBlitz3.ab3@28131>   LEA lastpath,A1
0003A5EE <AmiBlitz3.ab3@28134>     MOVE.b (a0)+,(a1)+
0003A5F2 <AmiBlitz3.ab3@28135>   BNE 'l2
0003A5F4 <AmiBlitz3.ab3@28136> RTS
0003A5FA <AmiBlitz3.ab3@28140>   TST.b objectcount
0003A5FE <AmiBlitz3.ab3@28141>   BEQ 'l2a
0003A604 <AmiBlitz3.ab3@28142> JMP macnesterr
0003A60A <AmiBlitz3.ab3@28145>   LEA devo,a0
0003A610 <AmiBlitz3.ab3@28146>   ADDQ.b #1,objectcount
0003A614 <AmiBlitz3.ab3@28147>   MOVEM.l a1/d2,-(a7)
0003A61A <AmiBlitz3.ab3@28148>   LEA ptr_parameterstore,a1
0003A61C <AmiBlitz3.ab3@28151>     MOVE.b (a0)+,(a1)+
0003A620 <AmiBlitz3.ab3@28152>   BNE 'l1
0003A622 <AmiBlitz3.ab3@28154>   MOVEQ #13,d2
0003A628 <AmiBlitz3.ab3@28155>   JSR findlabel2
0003A62C <AmiBlitz3.ab3@28156>   BNE 'd
0003A630 <AmiBlitz3.ab3@28157>   TST.l 8(a2)
0003A634 <AmiBlitz3.ab3@28158>   BEQ 'd
0003A63A <AmiBlitz3.ab3@28159>   SUBQ.b #1,objectcount
0003A63E <AmiBlitz3.ab3@28160>   MOVEM.l (a7)+,a1/d2
0003A644 <AmiBlitz3.ab3@28161>   JSR skiprest
0003A64C <AmiBlitz3.ab3@28162>   MOVE.b #1,developobject
0003A64E <AmiBlitz3.ab3@28163> RTS
0003A652 <AmiBlitz3.ab3@28166>   MOVEM.l (a7)+,a1/d2
0003A65A <AmiBlitz3.ab3@28167>   MOVE.b #1,resdisable
0003A660 <AmiBlitz3.ab3@28170>   CLR.b developobject
0003A666 <AmiBlitz3.ab3@28171> JMP do_Macro
0003A66C <AmiBlitz3.ab3@28175> JMP illeaerr
0003A672 <AmiBlitz3.ab3@28179>   CLR.b typecheck
0003A678 <AmiBlitz3.ab3@28180>   CLR.b declare
0003A67E <AmiBlitz3.ab3@28181>   CLR.b declare2
0003A682 <AmiBlitz3.ab3@28182>   SUB.b #$30,d0
0003A686 <AmiBlitz3.ab3@28183>   BTST #0,d0
0003A68A <AmiBlitz3.ab3@28184>   BEQ 'l1
0003A692 <AmiBlitz3.ab3@28185>   MOVE.b #1,declare
0003A696 <AmiBlitz3.ab3@28188>   BTST #1,d0
0003A69A <AmiBlitz3.ab3@28189>   BEQ 'l2
0003A6A2 <AmiBlitz3.ab3@28190>   MOVE.b #1,declare2
0003A6A6 <AmiBlitz3.ab3@28193>   BTST #2,d0
0003A6AA <AmiBlitz3.ab3@28194>   BEQ 'l3
0003A6B2 <AmiBlitz3.ab3@28195>   MOVE.b #1,typecheck
0003A6B6 <AmiBlitz3.ab3@28197>   BSR.w JUMP_get1bytemain
0003A6B8 <AmiBlitz3.ab3@28198> RTS
0003A6BE <AmiBlitz3.ab3@28201> JMP get1bytemain
0003A6E8 <AmiBlitz3.ab3@28205>   !basic
0003A708 <AmiBlitz3.ab3@28207>   FillMem ?residents_table,?residents_table_end-?residents_table,0
0003A726 <AmiBlitz3.ab3@28208>   !asm
0003A728 <AmiBlitz3.ab3@28209> Return
0003A72A <AmiBlitz3.ab3@28214>   MOVE.l d2,-(a7)                                          ; D2 -> stack
0003A72C <AmiBlitz3.ab3@28215>   ADDQ #1,a5
0003A72E <AmiBlitz3.ab3@28216>   MOVE.l a5,-(a7)
0003A758 <AmiBlitz3.ab3@28217>   !basic
0003A75E <AmiBlitz3.ab3@28218>   MOVE.l (a7)+,d0 : _myD0.l = PutD0
0003A768 <AmiBlitz3.ab3@28219>   If _myD0
0003A7A8 <AmiBlitz3.ab3@28220>     newconst$ = UCase$(Peek.s(_myD0))
0003A7AE <AmiBlitz3.ab3@28221>   Else
0003A7E8 <AmiBlitz3.ab3@28222>     error{"INTERNAL: invalid pointer in check_newconstants!"}
0003A810 <AmiBlitz3.ab3@28223>     nwconst$="xxx"
0003A838 <AmiBlitz3.ab3@28225>   condata$ =""
0003A848 <AmiBlitz3.ab3@28226>   Poke.b ?skip_bytes,0
0003A8A4 <AmiBlitz3.ab3@28227>   If Left$(newconst$,2) = "__"
0003A8FE <AmiBlitz3.ab3@28228>     Select Mid$(newconst$,3,4)
0003A922 <AmiBlitz3.ab3@28230>      Case "DATE"
0003A97C <AmiBlitz3.ab3@28231>       Select Mid$(newconst$,3,6)
0003A9BA <AmiBlitz3.ab3@28232>       Case "DATE__" : DateFormat 1 : Poke.b ?skip_bytes,8
0003A9FE <AmiBlitz3.ab3@28233>       Case "DATE_G" : DateFormat 0 : Poke.b ?skip_bytes,12
0003AA0C <AmiBlitz3.ab3@28234>       End Select
0003AA1A <AmiBlitz3.ab3@28235>       i.l=SystemDate
0003AA40 <AmiBlitz3.ab3@28236>       condata$ = Date$ (i)
0003AABE <AmiBlitz3.ab3@28237>       condata$ = Replace$(condata$,"/",".")
0003AAE8 <AmiBlitz3.ab3@28239>      Case "VER_"
0003AAF8 <AmiBlitz3.ab3@28242>       actual_version.l = Peek.l(?versioninformation)
0003AB08 <AmiBlitz3.ab3@28243>       actual_build.l   = Peek.l(?number_of_builds)
0003AB2C <AmiBlitz3.ab3@28245>       Format ""
0003AB86 <AmiBlitz3.ab3@28246>       Select Mid$(newconst$,3,9)
0003ABAA <AmiBlitz3.ab3@28248>        Case "VER_MAJOR"
0003ABE6 <AmiBlitz3.ab3@28249>         condata$ = Str$(actual_version LSR 24)
0003AC10 <AmiBlitz3.ab3@28251>        Case "VER_MINOR"
0003AC54 <AmiBlitz3.ab3@28252>         condata$ = Str$((actual_version LSL 8) LSR 24)
0003AC7E <AmiBlitz3.ab3@28254>        Case "VER_PATCH"
0003ACC2 <AmiBlitz3.ab3@28255>         condata$ = Str$((actual_version LSL 16) LSR 24 )
0003ACEC <AmiBlitz3.ab3@28257>        Case "VER_BUILD"
0003AD10 <AmiBlitz3.ab3@28258>         Format ""
0003AD44 <AmiBlitz3.ab3@28259>         condata$ = Str$(actual_build)
0003AD4A <AmiBlitz3.ab3@28261>        Default
0003AD72 <AmiBlitz3.ab3@28262>         condata$ = "{unknown compiler constant}"
0003AD80 <AmiBlitz3.ab3@28264>       End Select
0003ADA4 <AmiBlitz3.ab3@28265>       Format ""
0003ADB4 <AmiBlitz3.ab3@28266>       Poke.b ?skip_bytes,11
0003ADDE <AmiBlitz3.ab3@28268>      Case "THIS"
0003AE38 <AmiBlitz3.ab3@28269>       Select Mid$(newconst$,3,9)
0003AE5C <AmiBlitz3.ab3@28271>        Case "THIS_FUNC"
0003AE6C <AmiBlitz3.ab3@28272>         Poke.b ?skip_bytes,15
0003AE8C <AmiBlitz3.ab3@28273>         If Peek.l(?currentfunction)<>0
0003AED8 <AmiBlitz3.ab3@28274>           condata$ = Peek.s(Peek.l(?currentfunction) + 32 + #funcentry_extend + 1)
0003AEDE <AmiBlitz3.ab3@28275>         Else
0003AF06 <AmiBlitz3.ab3@28276>           condata$ = "GLOBAL"
0003AF30 <AmiBlitz3.ab3@28279>        Case "THIS_INCL"
0003AF40 <AmiBlitz3.ab3@28280>         Poke.b ?skip_bytes,14
0003AF60 <AmiBlitz3.ab3@28281>         If Peek.l(?includetemp2)<>0
0003AFAE <AmiBlitz3.ab3@28282>           condata$ = dos_FilePart{Peek$(?includetemp2)}
0003AFD8 <AmiBlitz3.ab3@28285>        Case "THIS_POIN"
0003AFE8 <AmiBlitz3.ab3@28286>         Poke.b ?skip_bytes,14
0003B008 <AmiBlitz3.ab3@28287>         If Peek.l(?currentfunction)<>0
0003B036 <AmiBlitz3.ab3@28288>           condata$ = Hex$(Peek.l(?currentfunction))
0003B044 <AmiBlitz3.ab3@28291>       End Select
0003B06E <AmiBlitz3.ab3@28293>      Case "CODE"
0003B07E <AmiBlitz3.ab3@28294>       Poke.b ?skip_bytes,10
0003B0E0 <AmiBlitz3.ab3@28295>       If Mid$(newconst$,3,8) = "CODELINE"
0003B11C <AmiBlitz3.ab3@28296>         condata$ = Str$(Peek.l(?globallinecount))
0003B12A <AmiBlitz3.ab3@28299>     End Select
0003B130 <AmiBlitz3.ab3@28301>   Else
0003B184 <AmiBlitz3.ab3@28302>     Select Left$(newconst$,1)
0003B1A8 <AmiBlitz3.ab3@28304>      Case "R"
0003B1B8 <AmiBlitz3.ab3@28305>       Poke.b ?skip_bytes,3
0003B230 <AmiBlitz3.ab3@28306>       For i = 1 To Vallong(Mid$(newconst$,2,2))
0003B2B0 <AmiBlitz3.ab3@28307>         condata$ = condata$ + Mid$(newconst$,4,1)
0003B2C0 <AmiBlitz3.ab3@28308>       Next
0003B2EA <AmiBlitz3.ab3@28310>      Case "N"
0003B2FA <AmiBlitz3.ab3@28311>       Poke.b ?skip_bytes,1
0003B31E <AmiBlitz3.ab3@28312>       condata$ = Chr$(10)
0003B324 <AmiBlitz3.ab3@28314>      Default
0003B336 <AmiBlitz3.ab3@28315>       char1.b = Peek.b(&newconst$)
0003B34E <AmiBlitz3.ab3@28316>       char2.b = Peek.b(&newconst$+1)
0003B35A <AmiBlitz3.ab3@28317>       nibble1.l = -1
0003B366 <AmiBlitz3.ab3@28318>       nibble2.l = -1
0003B3A4 <AmiBlitz3.ab3@28320>       If (char1>=@"0" AND char1<=@"9") Then nibble1 = char1-@"0"
0003B3E2 <AmiBlitz3.ab3@28321>       If (char2>=@"0" AND char2<=@"9") Then nibble2 = char2-@"0"
0003B426 <AmiBlitz3.ab3@28323>       If (char1>=@"a" AND char1<=@"f") Then nibble1 = char1-@"a" + 10
0003B46A <AmiBlitz3.ab3@28324>       If (char2>=@"a" AND char2<=@"f") Then nibble2 = char2-@"a" + 10
0003B4AE <AmiBlitz3.ab3@28326>       If (char1>=@"A" AND char1<=@"F") Then nibble1 = char1-@"A" + 10
0003B4F2 <AmiBlitz3.ab3@28327>       If (char2>=@"A" AND char2<=@"F") Then nibble2 = char2-@"A" + 10
0003B518 <AmiBlitz3.ab3@28329>       If nibble1>=0 AND nibble2>=0
0003B52E <AmiBlitz3.ab3@28330>         newchar.l = (nibble1 LSL 4) + (nibble2)
0003B552 <AmiBlitz3.ab3@28331>         condata$ = Chr$(newchar)
0003B562 <AmiBlitz3.ab3@28332>         Poke.b ?skip_bytes,2
0003B570 <AmiBlitz3.ab3@28335>     End Select
0003B5D0 <AmiBlitz3.ab3@28337>   If condata$ = "" AND Peek.b(?skip_bytes)=0
0003B6F6 <AmiBlitz3.ab3@28338>     !cout{"detected unknown const: " + newconst$}
0003B72A <AmiBlitz3.ab3@28339>     condata$ = newconst$
0003B740 <AmiBlitz3.ab3@28342>   GetD0 FLen(condata$)-1                                    ; laenge zielstring -> Stack
0003B742 <AmiBlitz3.ab3@28343>   MOVE.l d0,d2
0003B744 <AmiBlitz3.ab3@28344>   MOVE.l d2,-(a7)
0003B74A <AmiBlitz3.ab3@28346>   GetD0 &condata$                                          ; kopieren des neuen Strings in den Zielstring
0003B74C <AmiBlitz3.ab3@28347>   MOVE.l d0,a0
0003B74E <AmiBlitz3.ab3@28350>     MOVE.b (a0)+,d1
0003B754 <AmiBlitz3.ab3@28351>     JSR pokedata1b
0003B758 <AmiBlitz3.ab3@28352>  DBF d2,'l1
0003B776 <AmiBlitz3.ab3@28354>   !asm
0003B778 <AmiBlitz3.ab3@28355>   MOVE.l (a7)+,d0                                          ; laenge Zielstring <- Stack
0003B77A <AmiBlitz3.ab3@28356>   MOVE.l (a7)+,d2                                          ; d2 <-Stack
0003B77C <AmiBlitz3.ab3@28357>   ADD.l d0,d2                                              ; eingefuegte chars zu D2 dazu
0003B782 <AmiBlitz3.ab3@28358>   ADD.l #1,d2
0003B788 <AmiBlitz3.ab3@28360>   MOVE.l #0,d0                                             ; a5 um konstantennamen weiterschieben
0003B78E <AmiBlitz3.ab3@28361>   MOVE.b skip_bytes,D0
0003B790 <AmiBlitz3.ab3@28362>   ADD.l D0,a5
0003B792 <AmiBlitz3.ab3@28363> RTS
0003B796 <AmiBlitz3.ab3@28438> MOVEM.l a3/d1,-(a7)
0003B79C <AmiBlitz3.ab3@28440> CLR.b a4a5store
0003B79E <AmiBlitz3.ab3@28441> 'continue: MOVE.b (a3)+,d1
0003B7A2 <AmiBlitz3.ab3@28442> CMP.b #$15,d1
0003B7A6 <AmiBlitz3.ab3@28443> BEQ 'find
0003B7AA <AmiBlitz3.ab3@28444> CMP.b #$14,d1
0003B7AE <AmiBlitz3.ab3@28445> BEQ 'find
0003B7B2 <AmiBlitz3.ab3@28446> CMP.b #$ff,d1
0003B7B6 <AmiBlitz3.ab3@28447> BNE 'continue
0003B7BA <AmiBlitz3.ab3@28448> BRA 'notfind
0003B7C0 <AmiBlitz3.ab3@28450> MOVE.l #$48e7000c,d1                  ; write 68k movem.l a4/a5,-(a7)
0003B7C6 <AmiBlitz3.ab3@28451> JSR writelong
0003B7CE <AmiBlitz3.ab3@28452> MOVE.b #1,a4a5store
0003B7D2 <AmiBlitz3.ab3@28453> 'notfind: MOVEM.l (a7)+,a3/d1
0003B7D4 <AmiBlitz3.ab3@28454> RTS
0003B7DA <AmiBlitz3.ab3@28457> TST.b a4a5store
0003B7DE <AmiBlitz3.ab3@28458> BEQ 'no
0003B7E4 <AmiBlitz3.ab3@28459> MOVE.l #$4cdf3000,d1                  ; write 68k movem.l (a7)+,a4/a5
0003B7EA <AmiBlitz3.ab3@28460> JSR writelong
0003B7F0 <AmiBlitz3.ab3@28461> CLR.b a4a5store
0003B7F2 <AmiBlitz3.ab3@28462> 'no RTS
0003B7F2 <internal_commands.ab3@1> INCLUDE "internal_commands.ab3"
0003B7F6 <internal_commands.ab3@13> INCLUDE "internal_commands.ab3"
0003B7F8 <internal_commands.ab3@15> INCLUDE "internal_commands.ab3"
0003B800 <internal_commands.ab3@16> INCLUDE "internal_commands.ab3"
0003B80C <internal_commands.ab3@17> INCLUDE "internal_commands.ab3"
0003B810 <internal_commands.ab3@21> INCLUDE "internal_commands.ab3"
0003B812 <internal_commands.ab3@22> INCLUDE "internal_commands.ab3"
0003B816 <internal_commands.ab3@23> INCLUDE "internal_commands.ab3"
0003B85F <internal_commands.ab3@24> INCLUDE "internal_commands.ab3"
0003B860 <internal_commands.ab3@25> INCLUDE "internal_commands.ab3"
0003B864 <internal_commands.ab3@28> INCLUDE "internal_commands.ab3"
0003B866 <internal_commands.ab3@29> INCLUDE "internal_commands.ab3"
0003B86A <internal_commands.ab3@30> INCLUDE "internal_commands.ab3"
0003B886 <internal_commands.ab3@31> INCLUDE "internal_commands.ab3"
0003B88A <internal_commands.ab3@35> INCLUDE "internal_commands.ab3"
0003B88C <internal_commands.ab3@36> INCLUDE "internal_commands.ab3"
0003B890 <internal_commands.ab3@37> INCLUDE "internal_commands.ab3"
0003B8ED <internal_commands.ab3@38> INCLUDE "internal_commands.ab3"
0003B8EE <internal_commands.ab3@39> INCLUDE "internal_commands.ab3"
0003B8F2 <internal_commands.ab3@42> INCLUDE "internal_commands.ab3"
0003B8F4 <internal_commands.ab3@43> INCLUDE "internal_commands.ab3"
0003B8F9 <internal_commands.ab3@44> INCLUDE "internal_commands.ab3"
0003B909 <internal_commands.ab3@45> INCLUDE "internal_commands.ab3"
0003B90A <internal_commands.ab3@46> INCLUDE "internal_commands.ab3"
0003B90E <internal_commands.ab3@49> INCLUDE "internal_commands.ab3"
0003B910 <internal_commands.ab3@50> INCLUDE "internal_commands.ab3"
0003B916 <internal_commands.ab3@51> INCLUDE "internal_commands.ab3"
0003B926 <internal_commands.ab3@52> INCLUDE "internal_commands.ab3"
0003B92A <internal_commands.ab3@56> INCLUDE "internal_commands.ab3"
0003B92C <internal_commands.ab3@57> INCLUDE "internal_commands.ab3"
0003B933 <internal_commands.ab3@58> INCLUDE "internal_commands.ab3"
0003B934 <internal_commands.ab3@59> INCLUDE "internal_commands.ab3"
0003B938 <internal_commands.ab3@63> INCLUDE "internal_commands.ab3"
0003B93A <internal_commands.ab3@64> INCLUDE "internal_commands.ab3"
0003B944 <internal_commands.ab3@65> INCLUDE "internal_commands.ab3"
0003B977 <internal_commands.ab3@66> INCLUDE "internal_commands.ab3"
0003B978 <internal_commands.ab3@67> INCLUDE "internal_commands.ab3"
0003B97C <internal_commands.ab3@70> INCLUDE "internal_commands.ab3"
0003B97E <internal_commands.ab3@71> INCLUDE "internal_commands.ab3"
0003B987 <internal_commands.ab3@72> INCLUDE "internal_commands.ab3"
0003B9C2 <internal_commands.ab3@73> INCLUDE "internal_commands.ab3"
0003B9C6 <internal_commands.ab3@77> INCLUDE "internal_commands.ab3"
0003B9C8 <internal_commands.ab3@78> INCLUDE "internal_commands.ab3"
0003B9D2 <internal_commands.ab3@79> INCLUDE "internal_commands.ab3"
0003B9D3 <internal_commands.ab3@80> INCLUDE "internal_commands.ab3"
0003B9D4 <internal_commands.ab3@81> INCLUDE "internal_commands.ab3"
0003B9D8 <internal_commands.ab3@84> INCLUDE "internal_commands.ab3"
0003B9DA <internal_commands.ab3@85> INCLUDE "internal_commands.ab3"
0003B9DD <internal_commands.ab3@86> INCLUDE "internal_commands.ab3"
0003B9F4 <internal_commands.ab3@87> INCLUDE "internal_commands.ab3"
0003B9F8 <internal_commands.ab3@91> INCLUDE "internal_commands.ab3"
0003B9FA <internal_commands.ab3@92> INCLUDE "internal_commands.ab3"
0003BA00 <internal_commands.ab3@93> INCLUDE "internal_commands.ab3"
0003BA0D <internal_commands.ab3@94> INCLUDE "internal_commands.ab3"
0003BA0E <internal_commands.ab3@95> INCLUDE "internal_commands.ab3"
0003BA12 <internal_commands.ab3@98> INCLUDE "internal_commands.ab3"
0003BA14 <internal_commands.ab3@99> INCLUDE "internal_commands.ab3"
0003BA1A <internal_commands.ab3@100> INCLUDE "internal_commands.ab3"
0003BA26 <internal_commands.ab3@101> INCLUDE "internal_commands.ab3"
0003BA2A <internal_commands.ab3@105> INCLUDE "internal_commands.ab3"
0003BA2C <internal_commands.ab3@106> INCLUDE "internal_commands.ab3"
0003BA33 <internal_commands.ab3@107> INCLUDE "internal_commands.ab3"
0003BA40 <internal_commands.ab3@108> INCLUDE "internal_commands.ab3"
0003BA44 <internal_commands.ab3@112> INCLUDE "internal_commands.ab3"
0003BA46 <internal_commands.ab3@113> INCLUDE "internal_commands.ab3"
0003BA4B <internal_commands.ab3@114> INCLUDE "internal_commands.ab3"
0003BA58 <internal_commands.ab3@115> INCLUDE "internal_commands.ab3"
0003BA5C <internal_commands.ab3@119> INCLUDE "internal_commands.ab3"
0003BA5E <internal_commands.ab3@120> INCLUDE "internal_commands.ab3"
0003BA66 <internal_commands.ab3@121> INCLUDE "internal_commands.ab3"
0003BA67 <internal_commands.ab3@122> INCLUDE "internal_commands.ab3"
0003BA68 <internal_commands.ab3@123> INCLUDE "internal_commands.ab3"
0003BA6C <internal_commands.ab3@126> INCLUDE "internal_commands.ab3"
0003BA6E <internal_commands.ab3@127> INCLUDE "internal_commands.ab3"
0003BA76 <internal_commands.ab3@128> INCLUDE "internal_commands.ab3"
0003BA77 <internal_commands.ab3@129> INCLUDE "internal_commands.ab3"
0003BA78 <internal_commands.ab3@130> INCLUDE "internal_commands.ab3"
0003BA7C <internal_commands.ab3@133> INCLUDE "internal_commands.ab3"
0003BA7E <internal_commands.ab3@134> INCLUDE "internal_commands.ab3"
0003BA87 <internal_commands.ab3@135> INCLUDE "internal_commands.ab3"
0003BA92 <internal_commands.ab3@136> INCLUDE "internal_commands.ab3"
0003BA96 <internal_commands.ab3@140> INCLUDE "internal_commands.ab3"
0003BA98 <internal_commands.ab3@141> INCLUDE "internal_commands.ab3"
0003BAA0 <internal_commands.ab3@142> INCLUDE "internal_commands.ab3"
0003BAAB <internal_commands.ab3@143> INCLUDE "internal_commands.ab3"
0003BAAC <internal_commands.ab3@144> INCLUDE "internal_commands.ab3"
0003BAB0 <internal_commands.ab3@147> INCLUDE "internal_commands.ab3"
0003BAB2 <internal_commands.ab3@148> INCLUDE "internal_commands.ab3"
0003BAB9 <internal_commands.ab3@149> INCLUDE "internal_commands.ab3"
0003BB1B <internal_commands.ab3@150> INCLUDE "internal_commands.ab3"
0003BB1C <internal_commands.ab3@151> INCLUDE "internal_commands.ab3"
0003BB20 <internal_commands.ab3@154> INCLUDE "internal_commands.ab3"
0003BB22 <internal_commands.ab3@155> INCLUDE "internal_commands.ab3"
0003BB29 <internal_commands.ab3@156> INCLUDE "internal_commands.ab3"
0003BB38 <internal_commands.ab3@157> INCLUDE "internal_commands.ab3"
0003BB3C <internal_commands.ab3@161> INCLUDE "internal_commands.ab3"
0003BB3E <internal_commands.ab3@162> INCLUDE "internal_commands.ab3"
0003BB42 <internal_commands.ab3@163> INCLUDE "internal_commands.ab3"
0003BB78 <internal_commands.ab3@164> INCLUDE "internal_commands.ab3"
0003BB7C <internal_commands.ab3@168> INCLUDE "internal_commands.ab3"
0003BB7E <internal_commands.ab3@169> INCLUDE "internal_commands.ab3"
0003BB83 <internal_commands.ab3@170> INCLUDE "internal_commands.ab3"
0003BB92 <internal_commands.ab3@171> INCLUDE "internal_commands.ab3"
0003BB96 <internal_commands.ab3@175> INCLUDE "internal_commands.ab3"
0003BB98 <internal_commands.ab3@176> INCLUDE "internal_commands.ab3"
0003BB9B <internal_commands.ab3@177> INCLUDE "internal_commands.ab3"
0003BBBC <internal_commands.ab3@178> INCLUDE "internal_commands.ab3"
0003BBC0 <internal_commands.ab3@182> INCLUDE "internal_commands.ab3"
0003BBC2 <internal_commands.ab3@183> INCLUDE "internal_commands.ab3"
0003BBC7 <internal_commands.ab3@184> INCLUDE "internal_commands.ab3"
0003BBD3 <internal_commands.ab3@185> INCLUDE "internal_commands.ab3"
0003BBD4 <internal_commands.ab3@186> INCLUDE "internal_commands.ab3"
0003BBD8 <internal_commands.ab3@189> INCLUDE "internal_commands.ab3"
0003BBDA <internal_commands.ab3@190> INCLUDE "internal_commands.ab3"
0003BBDF <internal_commands.ab3@191> INCLUDE "internal_commands.ab3"
0003BBF6 <internal_commands.ab3@192> INCLUDE "internal_commands.ab3"
0003BBFA <internal_commands.ab3@196> INCLUDE "internal_commands.ab3"
0003BBFC <internal_commands.ab3@197> INCLUDE "internal_commands.ab3"
0003BC01 <internal_commands.ab3@198> INCLUDE "internal_commands.ab3"
0003BC10 <internal_commands.ab3@199> INCLUDE "internal_commands.ab3"
0003BC14 <internal_commands.ab3@203> INCLUDE "internal_commands.ab3"
0003BC16 <internal_commands.ab3@204> INCLUDE "internal_commands.ab3"
0003BC1B <internal_commands.ab3@205> INCLUDE "internal_commands.ab3"
0003BC3A <internal_commands.ab3@206> INCLUDE "internal_commands.ab3"
0003BC3E <internal_commands.ab3@210> INCLUDE "internal_commands.ab3"
0003BC40 <internal_commands.ab3@211> INCLUDE "internal_commands.ab3"
0003BC45 <internal_commands.ab3@212> INCLUDE "internal_commands.ab3"
0003BC64 <internal_commands.ab3@213> INCLUDE "internal_commands.ab3"
0003BC68 <internal_commands.ab3@217> INCLUDE "internal_commands.ab3"
0003BC6A <internal_commands.ab3@218> INCLUDE "internal_commands.ab3"
0003BC70 <internal_commands.ab3@219> INCLUDE "internal_commands.ab3"
0003BC71 <internal_commands.ab3@220> INCLUDE "internal_commands.ab3"
0003BC72 <internal_commands.ab3@221> INCLUDE "internal_commands.ab3"
0003BC76 <internal_commands.ab3@224> INCLUDE "internal_commands.ab3"
0003BC78 <internal_commands.ab3@225> INCLUDE "internal_commands.ab3"
0003BC7D <internal_commands.ab3@226> INCLUDE "internal_commands.ab3"
0003BC7E <internal_commands.ab3@227> INCLUDE "internal_commands.ab3"
0003BC82 <internal_commands.ab3@231> INCLUDE "internal_commands.ab3"
0003BC84 <internal_commands.ab3@232> INCLUDE "internal_commands.ab3"
0003BC89 <internal_commands.ab3@233> INCLUDE "internal_commands.ab3"
0003BC96 <internal_commands.ab3@234> INCLUDE "internal_commands.ab3"
0003BC9A <internal_commands.ab3@238> INCLUDE "internal_commands.ab3"
0003BC9C <internal_commands.ab3@239> INCLUDE "internal_commands.ab3"
0003BCA1 <internal_commands.ab3@240> INCLUDE "internal_commands.ab3"
0003BCB0 <internal_commands.ab3@241> INCLUDE "internal_commands.ab3"
0003BCB4 <internal_commands.ab3@245> INCLUDE "internal_commands.ab3"
0003BCB6 <internal_commands.ab3@246> INCLUDE "internal_commands.ab3"
0003BCBB <internal_commands.ab3@247> INCLUDE "internal_commands.ab3"
0003BCCA <internal_commands.ab3@248> INCLUDE "internal_commands.ab3"
0003BCCE <internal_commands.ab3@252> INCLUDE "internal_commands.ab3"
0003BCD0 <internal_commands.ab3@253> INCLUDE "internal_commands.ab3"
0003BCD6 <internal_commands.ab3@254> INCLUDE "internal_commands.ab3"
0003BCF3 <internal_commands.ab3@255> INCLUDE "internal_commands.ab3"
0003BCF4 <internal_commands.ab3@256> INCLUDE "internal_commands.ab3"
0003BCF8 <internal_commands.ab3@259> INCLUDE "internal_commands.ab3"
0003BCFA <internal_commands.ab3@260> INCLUDE "internal_commands.ab3"
0003BD00 <internal_commands.ab3@261> INCLUDE "internal_commands.ab3"
0003BD1D <internal_commands.ab3@262> INCLUDE "internal_commands.ab3"
0003BD1E <internal_commands.ab3@263> INCLUDE "internal_commands.ab3"
0003BD22 <internal_commands.ab3@266> INCLUDE "internal_commands.ab3"
0003BD24 <internal_commands.ab3@267> INCLUDE "internal_commands.ab3"
0003BD27 <internal_commands.ab3@268> INCLUDE "internal_commands.ab3"
0003BD3E <internal_commands.ab3@269> INCLUDE "internal_commands.ab3"
0003BD42 <internal_commands.ab3@273> INCLUDE "internal_commands.ab3"
0003BD44 <internal_commands.ab3@274> INCLUDE "internal_commands.ab3"
0003BD47 <internal_commands.ab3@275> INCLUDE "internal_commands.ab3"
0003BD56 <internal_commands.ab3@276> INCLUDE "internal_commands.ab3"
0003BD5A <internal_commands.ab3@280> INCLUDE "internal_commands.ab3"
0003BD5C <internal_commands.ab3@281> INCLUDE "internal_commands.ab3"
0003BD61 <internal_commands.ab3@282> INCLUDE "internal_commands.ab3"
0003BD62 <internal_commands.ab3@283> INCLUDE "internal_commands.ab3"
0003BD66 <internal_commands.ab3@287> INCLUDE "internal_commands.ab3"
0003BD68 <internal_commands.ab3@288> INCLUDE "internal_commands.ab3"
0003BD6C <internal_commands.ab3@289> INCLUDE "internal_commands.ab3"
0003BD81 <internal_commands.ab3@290> INCLUDE "internal_commands.ab3"
0003BD82 <internal_commands.ab3@291> INCLUDE "internal_commands.ab3"
0003BD86 <internal_commands.ab3@294> INCLUDE "internal_commands.ab3"
0003BD88 <internal_commands.ab3@295> INCLUDE "internal_commands.ab3"
0003BD8F <internal_commands.ab3@296> INCLUDE "internal_commands.ab3"
0003BDA8 <internal_commands.ab3@297> INCLUDE "internal_commands.ab3"
0003BDAC <internal_commands.ab3@301> INCLUDE "internal_commands.ab3"
0003BDAE <internal_commands.ab3@302> INCLUDE "internal_commands.ab3"
0003BDB5 <internal_commands.ab3@303> INCLUDE "internal_commands.ab3"
0003BDC0 <internal_commands.ab3@304> INCLUDE "internal_commands.ab3"
0003BDC4 <internal_commands.ab3@308> INCLUDE "internal_commands.ab3"
0003BDC6 <internal_commands.ab3@309> INCLUDE "internal_commands.ab3"
0003BDCB <internal_commands.ab3@310> INCLUDE "internal_commands.ab3"
0003BDE2 <internal_commands.ab3@311> INCLUDE "internal_commands.ab3"
0003BDE6 <internal_commands.ab3@315> INCLUDE "internal_commands.ab3"
0003BDE8 <internal_commands.ab3@316> INCLUDE "internal_commands.ab3"
0003BDEC <internal_commands.ab3@317> INCLUDE "internal_commands.ab3"
0003BE03 <internal_commands.ab3@318> INCLUDE "internal_commands.ab3"
0003BE04 <internal_commands.ab3@319> INCLUDE "internal_commands.ab3"
0003BE08 <internal_commands.ab3@322> INCLUDE "internal_commands.ab3"
0003BE0A <internal_commands.ab3@323> INCLUDE "internal_commands.ab3"
0003BE0F <internal_commands.ab3@324> INCLUDE "internal_commands.ab3"
0003BE10 <internal_commands.ab3@325> INCLUDE "internal_commands.ab3"
0003BE14 <internal_commands.ab3@329> INCLUDE "internal_commands.ab3"
0003BE16 <internal_commands.ab3@330> INCLUDE "internal_commands.ab3"
0003BE1B <internal_commands.ab3@331> INCLUDE "internal_commands.ab3"
0003BE1F <internal_commands.ab3@332> INCLUDE "internal_commands.ab3"
0003BE20 <internal_commands.ab3@333> INCLUDE "internal_commands.ab3"
0003BE24 <internal_commands.ab3@336> INCLUDE "internal_commands.ab3"
0003BE26 <internal_commands.ab3@337> INCLUDE "internal_commands.ab3"
0003BE2D <internal_commands.ab3@338> INCLUDE "internal_commands.ab3"
0003BE45 <internal_commands.ab3@339> INCLUDE "internal_commands.ab3"
0003BE46 <internal_commands.ab3@340> INCLUDE "internal_commands.ab3"
0003BE4A <internal_commands.ab3@343> INCLUDE "internal_commands.ab3"
0003BE4C <internal_commands.ab3@344> INCLUDE "internal_commands.ab3"
0003BE53 <internal_commands.ab3@345> INCLUDE "internal_commands.ab3"
0003BE58 <internal_commands.ab3@346> INCLUDE "internal_commands.ab3"
0003BE5C <internal_commands.ab3@350> INCLUDE "internal_commands.ab3"
0003BE5E <internal_commands.ab3@351> INCLUDE "internal_commands.ab3"
0003BE65 <internal_commands.ab3@352> INCLUDE "internal_commands.ab3"
0003BE6A <internal_commands.ab3@353> INCLUDE "internal_commands.ab3"
0003BE6E <internal_commands.ab3@357> INCLUDE "internal_commands.ab3"
0003BE70 <internal_commands.ab3@358> INCLUDE "internal_commands.ab3"
0003BE77 <internal_commands.ab3@359> INCLUDE "internal_commands.ab3"
0003BE92 <internal_commands.ab3@360> INCLUDE "internal_commands.ab3"
0003BE96 <internal_commands.ab3@364> INCLUDE "internal_commands.ab3"
0003BE98 <internal_commands.ab3@365> INCLUDE "internal_commands.ab3"
0003BEA0 <internal_commands.ab3@366> INCLUDE "internal_commands.ab3"
0003BEB9 <internal_commands.ab3@367> INCLUDE "internal_commands.ab3"
0003BEBA <internal_commands.ab3@368> INCLUDE "internal_commands.ab3"
0003BEBE <internal_commands.ab3@371> INCLUDE "internal_commands.ab3"
0003BEC0 <internal_commands.ab3@372> INCLUDE "internal_commands.ab3"
0003BEC6 <internal_commands.ab3@373> INCLUDE "internal_commands.ab3"
0003BEC7 <internal_commands.ab3@374> INCLUDE "internal_commands.ab3"
0003BEC8 <internal_commands.ab3@375> INCLUDE "internal_commands.ab3"
0003BECC <internal_commands.ab3@378> INCLUDE "internal_commands.ab3"
0003BECE <internal_commands.ab3@379> INCLUDE "internal_commands.ab3"
0003BED4 <internal_commands.ab3@380> INCLUDE "internal_commands.ab3"
0003BED5 <internal_commands.ab3@381> INCLUDE "internal_commands.ab3"
0003BED6 <internal_commands.ab3@382> INCLUDE "internal_commands.ab3"
0003BEDA <internal_commands.ab3@385> INCLUDE "internal_commands.ab3"
0003BEDC <internal_commands.ab3@386> INCLUDE "internal_commands.ab3"
0003BEE3 <internal_commands.ab3@387> INCLUDE "internal_commands.ab3"
0003BEE4 <internal_commands.ab3@388> INCLUDE "internal_commands.ab3"
0003BEE8 <internal_commands.ab3@392> INCLUDE "internal_commands.ab3"
0003BEEA <internal_commands.ab3@393> INCLUDE "internal_commands.ab3"
0003BEF0 <internal_commands.ab3@394> INCLUDE "internal_commands.ab3"
0003BEF9 <internal_commands.ab3@395> INCLUDE "internal_commands.ab3"
0003BEFA <internal_commands.ab3@396> INCLUDE "internal_commands.ab3"
0003BEFE <internal_commands.ab3@399> INCLUDE "internal_commands.ab3"
0003BF00 <internal_commands.ab3@400> INCLUDE "internal_commands.ab3"
0003BF08 <internal_commands.ab3@401> INCLUDE "internal_commands.ab3"
0003BF15 <internal_commands.ab3@402> INCLUDE "internal_commands.ab3"
0003BF16 <internal_commands.ab3@403> INCLUDE "internal_commands.ab3"
0003BF1A <internal_commands.ab3@406> INCLUDE "internal_commands.ab3"
0003BF1C <internal_commands.ab3@407> INCLUDE "internal_commands.ab3"
0003BF24 <internal_commands.ab3@408> INCLUDE "internal_commands.ab3"
0003BF31 <internal_commands.ab3@409> INCLUDE "internal_commands.ab3"
0003BF32 <internal_commands.ab3@410> INCLUDE "internal_commands.ab3"
0003BF36 <internal_commands.ab3@413> INCLUDE "internal_commands.ab3"
0003BF38 <internal_commands.ab3@414> INCLUDE "internal_commands.ab3"
0003BF40 <internal_commands.ab3@415> INCLUDE "internal_commands.ab3"
0003BF4D <internal_commands.ab3@416> INCLUDE "internal_commands.ab3"
0003BF4E <internal_commands.ab3@417> INCLUDE "internal_commands.ab3"
0003BF52 <internal_commands.ab3@420> INCLUDE "internal_commands.ab3"
0003BF54 <internal_commands.ab3@421> INCLUDE "internal_commands.ab3"
0003BF59 <internal_commands.ab3@422> INCLUDE "internal_commands.ab3"
0003BF5A <internal_commands.ab3@423> INCLUDE "internal_commands.ab3"
0003BF5E <internal_commands.ab3@437> INCLUDE "internal_commands.ab3"
0003BF60 <internal_commands.ab3@438> INCLUDE "internal_commands.ab3"
0003BF65 <internal_commands.ab3@439> INCLUDE "internal_commands.ab3"
0003BF66 <internal_commands.ab3@440> INCLUDE "internal_commands.ab3"
0003BF68 <internal_commands.ab3@443> INCLUDE "internal_commands.ab3"
0003BF6C <internal_commands.ab3@444> INCLUDE "internal_commands.ab3"
0003BF6E <internal_commands.ab3@445> INCLUDE "internal_commands.ab3"
0003BF70 <internal_commands.ab3@446> INCLUDE "internal_commands.ab3"
0003BF74 <internal_commands.ab3@447> INCLUDE "internal_commands.ab3"
0003BF76 <internal_commands.ab3@448> INCLUDE "internal_commands.ab3"
0003BF7A <internal_commands.ab3@452> INCLUDE "internal_commands.ab3"
0003BF7C <internal_commands.ab3@453> INCLUDE "internal_commands.ab3"
0003BF80 <internal_commands.ab3@454> INCLUDE "internal_commands.ab3"
0003BF81 <internal_commands.ab3@455> INCLUDE "internal_commands.ab3"
0003BF82 <internal_commands.ab3@456> INCLUDE "internal_commands.ab3"
0003BF84 <internal_commands.ab3@458> INCLUDE "internal_commands.ab3"
0003BF88 <internal_commands.ab3@459> INCLUDE "internal_commands.ab3"
0003BF8A <internal_commands.ab3@460> INCLUDE "internal_commands.ab3"
0003BF8C <internal_commands.ab3@461> INCLUDE "internal_commands.ab3"
0003BF90 <internal_commands.ab3@462> INCLUDE "internal_commands.ab3"
0003BF92 <internal_commands.ab3@463> INCLUDE "internal_commands.ab3"
0003BF96 <internal_commands.ab3@467> INCLUDE "internal_commands.ab3"
0003BF98 <internal_commands.ab3@468> INCLUDE "internal_commands.ab3"
0003BF9D <internal_commands.ab3@469> INCLUDE "internal_commands.ab3"
0003BF9E <internal_commands.ab3@470> INCLUDE "internal_commands.ab3"
0003BFA0 <internal_commands.ab3@473> INCLUDE "internal_commands.ab3"
0003BFA4 <internal_commands.ab3@474> INCLUDE "internal_commands.ab3"
0003BFA6 <internal_commands.ab3@475> INCLUDE "internal_commands.ab3"
0003BFA8 <internal_commands.ab3@476> INCLUDE "internal_commands.ab3"
0003BFAC <internal_commands.ab3@477> INCLUDE "internal_commands.ab3"
0003BFAE <internal_commands.ab3@478> INCLUDE "internal_commands.ab3"
0003BFB2 <internal_commands.ab3@482> INCLUDE "internal_commands.ab3"
0003BFB4 <internal_commands.ab3@483> INCLUDE "internal_commands.ab3"
0003BFB9 <internal_commands.ab3@484> INCLUDE "internal_commands.ab3"
0003BFBA <internal_commands.ab3@485> INCLUDE "internal_commands.ab3"
0003BFBC <internal_commands.ab3@488> INCLUDE "internal_commands.ab3"
0003BFC0 <internal_commands.ab3@489> INCLUDE "internal_commands.ab3"
0003BFC2 <internal_commands.ab3@490> INCLUDE "internal_commands.ab3"
0003BFC4 <internal_commands.ab3@491> INCLUDE "internal_commands.ab3"
0003BFC8 <internal_commands.ab3@492> INCLUDE "internal_commands.ab3"
0003BFCA <internal_commands.ab3@493> INCLUDE "internal_commands.ab3"
0003BFCE <internal_commands.ab3@497> INCLUDE "internal_commands.ab3"
0003BFD0 <internal_commands.ab3@498> INCLUDE "internal_commands.ab3"
0003BFD5 <internal_commands.ab3@499> INCLUDE "internal_commands.ab3"
0003BFD6 <internal_commands.ab3@500> INCLUDE "internal_commands.ab3"
0003BFD8 <internal_commands.ab3@503> INCLUDE "internal_commands.ab3"
0003BFDC <internal_commands.ab3@504> INCLUDE "internal_commands.ab3"
0003BFDE <internal_commands.ab3@505> INCLUDE "internal_commands.ab3"
0003BFE0 <internal_commands.ab3@506> INCLUDE "internal_commands.ab3"
0003BFE4 <internal_commands.ab3@507> INCLUDE "internal_commands.ab3"
0003BFE6 <internal_commands.ab3@508> INCLUDE "internal_commands.ab3"
0003BFEA <internal_commands.ab3@512> INCLUDE "internal_commands.ab3"
0003BFEC <internal_commands.ab3@513> INCLUDE "internal_commands.ab3"
0003BFF1 <internal_commands.ab3@514> INCLUDE "internal_commands.ab3"
0003BFF2 <internal_commands.ab3@515> INCLUDE "internal_commands.ab3"
0003BFF4 <internal_commands.ab3@518> INCLUDE "internal_commands.ab3"
0003BFF8 <internal_commands.ab3@519> INCLUDE "internal_commands.ab3"
0003BFFA <internal_commands.ab3@520> INCLUDE "internal_commands.ab3"
0003BFFC <internal_commands.ab3@521> INCLUDE "internal_commands.ab3"
0003C000 <internal_commands.ab3@522> INCLUDE "internal_commands.ab3"
0003C002 <internal_commands.ab3@523> INCLUDE "internal_commands.ab3"
0003C006 <internal_commands.ab3@527> INCLUDE "internal_commands.ab3"
0003C008 <internal_commands.ab3@528> INCLUDE "internal_commands.ab3"
0003C00C <internal_commands.ab3@529> INCLUDE "internal_commands.ab3"
0003C00D <internal_commands.ab3@530> INCLUDE "internal_commands.ab3"
0003C00E <internal_commands.ab3@531> INCLUDE "internal_commands.ab3"
0003C010 <internal_commands.ab3@533> INCLUDE "internal_commands.ab3"
0003C014 <internal_commands.ab3@534> INCLUDE "internal_commands.ab3"
0003C016 <internal_commands.ab3@535> INCLUDE "internal_commands.ab3"
0003C018 <internal_commands.ab3@536> INCLUDE "internal_commands.ab3"
0003C01C <internal_commands.ab3@537> INCLUDE "internal_commands.ab3"
0003C01E <internal_commands.ab3@538> INCLUDE "internal_commands.ab3"
0003C022 <internal_commands.ab3@542> INCLUDE "internal_commands.ab3"
0003C024 <internal_commands.ab3@543> INCLUDE "internal_commands.ab3"
0003C029 <internal_commands.ab3@544> INCLUDE "internal_commands.ab3"
0003C02A <internal_commands.ab3@545> INCLUDE "internal_commands.ab3"
0003C02C <internal_commands.ab3@548> INCLUDE "internal_commands.ab3"
0003C030 <internal_commands.ab3@549> INCLUDE "internal_commands.ab3"
0003C032 <internal_commands.ab3@550> INCLUDE "internal_commands.ab3"
0003C034 <internal_commands.ab3@551> INCLUDE "internal_commands.ab3"
0003C038 <internal_commands.ab3@552> INCLUDE "internal_commands.ab3"
0003C03A <internal_commands.ab3@553> INCLUDE "internal_commands.ab3"
0003C03E <internal_commands.ab3@557> INCLUDE "internal_commands.ab3"
0003C040 <internal_commands.ab3@558> INCLUDE "internal_commands.ab3"
0003C044 <internal_commands.ab3@559> INCLUDE "internal_commands.ab3"
0003C045 <internal_commands.ab3@560> INCLUDE "internal_commands.ab3"
0003C046 <internal_commands.ab3@561> INCLUDE "internal_commands.ab3"
0003C048 <internal_commands.ab3@563> INCLUDE "internal_commands.ab3"
0003C04C <internal_commands.ab3@564> INCLUDE "internal_commands.ab3"
0003C04E <internal_commands.ab3@565> INCLUDE "internal_commands.ab3"
0003C050 <internal_commands.ab3@566> INCLUDE "internal_commands.ab3"
0003C054 <internal_commands.ab3@567> INCLUDE "internal_commands.ab3"
0003C056 <internal_commands.ab3@568> INCLUDE "internal_commands.ab3"
0003C05A <internal_commands.ab3@572> INCLUDE "internal_commands.ab3"
0003C05C <internal_commands.ab3@573> INCLUDE "internal_commands.ab3"
0003C060 <internal_commands.ab3@574> INCLUDE "internal_commands.ab3"
0003C061 <internal_commands.ab3@575> INCLUDE "internal_commands.ab3"
0003C062 <internal_commands.ab3@576> INCLUDE "internal_commands.ab3"
0003C064 <internal_commands.ab3@578> INCLUDE "internal_commands.ab3"
0003C068 <internal_commands.ab3@579> INCLUDE "internal_commands.ab3"
0003C06A <internal_commands.ab3@580> INCLUDE "internal_commands.ab3"
0003C06C <internal_commands.ab3@581> INCLUDE "internal_commands.ab3"
0003C070 <internal_commands.ab3@582> INCLUDE "internal_commands.ab3"
0003C072 <internal_commands.ab3@583> INCLUDE "internal_commands.ab3"
0003C076 <internal_commands.ab3@587> INCLUDE "internal_commands.ab3"
0003C078 <internal_commands.ab3@588> INCLUDE "internal_commands.ab3"
0003C07C <internal_commands.ab3@589> INCLUDE "internal_commands.ab3"
0003C07D <internal_commands.ab3@590> INCLUDE "internal_commands.ab3"
0003C07E <internal_commands.ab3@591> INCLUDE "internal_commands.ab3"
0003C080 <internal_commands.ab3@593> INCLUDE "internal_commands.ab3"
0003C084 <internal_commands.ab3@594> INCLUDE "internal_commands.ab3"
0003C086 <internal_commands.ab3@595> INCLUDE "internal_commands.ab3"
0003C088 <internal_commands.ab3@596> INCLUDE "internal_commands.ab3"
0003C08C <internal_commands.ab3@597> INCLUDE "internal_commands.ab3"
0003C08E <internal_commands.ab3@598> INCLUDE "internal_commands.ab3"
0003C092 <internal_commands.ab3@602> INCLUDE "internal_commands.ab3"
0003C094 <internal_commands.ab3@603> INCLUDE "internal_commands.ab3"
0003C098 <internal_commands.ab3@604> INCLUDE "internal_commands.ab3"
0003C099 <internal_commands.ab3@605> INCLUDE "internal_commands.ab3"
0003C09A <internal_commands.ab3@606> INCLUDE "internal_commands.ab3"
0003C09C <internal_commands.ab3@608> INCLUDE "internal_commands.ab3"
0003C0A0 <internal_commands.ab3@609> INCLUDE "internal_commands.ab3"
0003C0A2 <internal_commands.ab3@610> INCLUDE "internal_commands.ab3"
0003C0A4 <internal_commands.ab3@611> INCLUDE "internal_commands.ab3"
0003C0A8 <internal_commands.ab3@612> INCLUDE "internal_commands.ab3"
0003C0AA <internal_commands.ab3@613> INCLUDE "internal_commands.ab3"
0003C0AE <internal_commands.ab3@617> INCLUDE "internal_commands.ab3"
0003C0B0 <internal_commands.ab3@618> INCLUDE "internal_commands.ab3"
0003C0B4 <internal_commands.ab3@619> INCLUDE "internal_commands.ab3"
0003C0B5 <internal_commands.ab3@620> INCLUDE "internal_commands.ab3"
0003C0B6 <internal_commands.ab3@621> INCLUDE "internal_commands.ab3"
0003C0B8 <internal_commands.ab3@623> INCLUDE "internal_commands.ab3"
0003C0BC <internal_commands.ab3@624> INCLUDE "internal_commands.ab3"
0003C0BE <internal_commands.ab3@625> INCLUDE "internal_commands.ab3"
0003C0C0 <internal_commands.ab3@626> INCLUDE "internal_commands.ab3"
0003C0C4 <internal_commands.ab3@627> INCLUDE "internal_commands.ab3"
0003C0C6 <internal_commands.ab3@628> INCLUDE "internal_commands.ab3"
0003C0CA <internal_commands.ab3@632> INCLUDE "internal_commands.ab3"
0003C0CC <internal_commands.ab3@633> INCLUDE "internal_commands.ab3"
0003C0D0 <internal_commands.ab3@634> INCLUDE "internal_commands.ab3"
0003C0D1 <internal_commands.ab3@635> INCLUDE "internal_commands.ab3"
0003C0D2 <internal_commands.ab3@636> INCLUDE "internal_commands.ab3"
0003C0D4 <internal_commands.ab3@638> INCLUDE "internal_commands.ab3"
0003C0D8 <internal_commands.ab3@639> INCLUDE "internal_commands.ab3"
0003C0DA <internal_commands.ab3@640> INCLUDE "internal_commands.ab3"
0003C0DC <internal_commands.ab3@641> INCLUDE "internal_commands.ab3"
0003C0E0 <internal_commands.ab3@642> INCLUDE "internal_commands.ab3"
0003C0E2 <internal_commands.ab3@643> INCLUDE "internal_commands.ab3"
0003C0E6 <internal_commands.ab3@647> INCLUDE "internal_commands.ab3"
0003C0E8 <internal_commands.ab3@648> INCLUDE "internal_commands.ab3"
0003C0EC <internal_commands.ab3@649> INCLUDE "internal_commands.ab3"
0003C0ED <internal_commands.ab3@650> INCLUDE "internal_commands.ab3"
0003C0EE <internal_commands.ab3@651> INCLUDE "internal_commands.ab3"
0003C0F0 <internal_commands.ab3@653> INCLUDE "internal_commands.ab3"
0003C0F4 <internal_commands.ab3@654> INCLUDE "internal_commands.ab3"
0003C0F6 <internal_commands.ab3@655> INCLUDE "internal_commands.ab3"
0003C0F8 <internal_commands.ab3@656> INCLUDE "internal_commands.ab3"
0003C0FC <internal_commands.ab3@657> INCLUDE "internal_commands.ab3"
0003C0FE <internal_commands.ab3@658> INCLUDE "internal_commands.ab3"
0003C102 <internal_commands.ab3@662> INCLUDE "internal_commands.ab3"
0003C104 <internal_commands.ab3@663> INCLUDE "internal_commands.ab3"
0003C108 <internal_commands.ab3@664> INCLUDE "internal_commands.ab3"
0003C109 <internal_commands.ab3@665> INCLUDE "internal_commands.ab3"
0003C10A <internal_commands.ab3@666> INCLUDE "internal_commands.ab3"
0003C10C <internal_commands.ab3@668> INCLUDE "internal_commands.ab3"
0003C110 <internal_commands.ab3@669> INCLUDE "internal_commands.ab3"
0003C112 <internal_commands.ab3@670> INCLUDE "internal_commands.ab3"
0003C114 <internal_commands.ab3@671> INCLUDE "internal_commands.ab3"
0003C118 <internal_commands.ab3@672> INCLUDE "internal_commands.ab3"
0003C11A <internal_commands.ab3@673> INCLUDE "internal_commands.ab3"
0003C11E <internal_commands.ab3@677> INCLUDE "internal_commands.ab3"
0003C120 <internal_commands.ab3@678> INCLUDE "internal_commands.ab3"
0003C124 <internal_commands.ab3@679> INCLUDE "internal_commands.ab3"
0003C125 <internal_commands.ab3@680> INCLUDE "internal_commands.ab3"
0003C126 <internal_commands.ab3@681> INCLUDE "internal_commands.ab3"
0003C128 <internal_commands.ab3@683> INCLUDE "internal_commands.ab3"
0003C12C <internal_commands.ab3@684> INCLUDE "internal_commands.ab3"
0003C12E <internal_commands.ab3@685> INCLUDE "internal_commands.ab3"
0003C130 <internal_commands.ab3@686> INCLUDE "internal_commands.ab3"
0003C134 <internal_commands.ab3@687> INCLUDE "internal_commands.ab3"
0003C136 <internal_commands.ab3@688> INCLUDE "internal_commands.ab3"
0003C13A <internal_commands.ab3@692> INCLUDE "internal_commands.ab3"
0003C13C <internal_commands.ab3@693> INCLUDE "internal_commands.ab3"
0003C140 <internal_commands.ab3@694> INCLUDE "internal_commands.ab3"
0003C141 <internal_commands.ab3@695> INCLUDE "internal_commands.ab3"
0003C142 <internal_commands.ab3@696> INCLUDE "internal_commands.ab3"
0003C144 <internal_commands.ab3@698> INCLUDE "internal_commands.ab3"
0003C148 <internal_commands.ab3@699> INCLUDE "internal_commands.ab3"
0003C14A <internal_commands.ab3@700> INCLUDE "internal_commands.ab3"
0003C14C <internal_commands.ab3@701> INCLUDE "internal_commands.ab3"
0003C150 <internal_commands.ab3@702> INCLUDE "internal_commands.ab3"
0003C152 <internal_commands.ab3@703> INCLUDE "internal_commands.ab3"
0003C156 <internal_commands.ab3@707> INCLUDE "internal_commands.ab3"
0003C158 <internal_commands.ab3@708> INCLUDE "internal_commands.ab3"
0003C15C <internal_commands.ab3@709> INCLUDE "internal_commands.ab3"
0003C15D <internal_commands.ab3@710> INCLUDE "internal_commands.ab3"
0003C15E <internal_commands.ab3@711> INCLUDE "internal_commands.ab3"
0003C160 <internal_commands.ab3@713> INCLUDE "internal_commands.ab3"
0003C164 <internal_commands.ab3@714> INCLUDE "internal_commands.ab3"
0003C166 <internal_commands.ab3@715> INCLUDE "internal_commands.ab3"
0003C168 <internal_commands.ab3@716> INCLUDE "internal_commands.ab3"
0003C16C <internal_commands.ab3@717> INCLUDE "internal_commands.ab3"
0003C16E <internal_commands.ab3@718> INCLUDE "internal_commands.ab3"
0003C172 <internal_commands.ab3@722> INCLUDE "internal_commands.ab3"
0003C174 <internal_commands.ab3@723> INCLUDE "internal_commands.ab3"
0003C178 <internal_commands.ab3@724> INCLUDE "internal_commands.ab3"
0003C179 <internal_commands.ab3@725> INCLUDE "internal_commands.ab3"
0003C17A <internal_commands.ab3@726> INCLUDE "internal_commands.ab3"
0003C17C <internal_commands.ab3@728> INCLUDE "internal_commands.ab3"
0003C180 <internal_commands.ab3@729> INCLUDE "internal_commands.ab3"
0003C182 <internal_commands.ab3@730> INCLUDE "internal_commands.ab3"
0003C184 <internal_commands.ab3@731> INCLUDE "internal_commands.ab3"
0003C188 <internal_commands.ab3@732> INCLUDE "internal_commands.ab3"
0003C18A <internal_commands.ab3@733> INCLUDE "internal_commands.ab3"
0003C18E <internal_commands.ab3@737> INCLUDE "internal_commands.ab3"
0003C190 <internal_commands.ab3@738> INCLUDE "internal_commands.ab3"
0003C194 <internal_commands.ab3@739> INCLUDE "internal_commands.ab3"
0003C195 <internal_commands.ab3@740> INCLUDE "internal_commands.ab3"
0003C196 <internal_commands.ab3@741> INCLUDE "internal_commands.ab3"
0003C198 <internal_commands.ab3@743> INCLUDE "internal_commands.ab3"
0003C19C <internal_commands.ab3@744> INCLUDE "internal_commands.ab3"
0003C19E <internal_commands.ab3@745> INCLUDE "internal_commands.ab3"
0003C1A0 <internal_commands.ab3@746> INCLUDE "internal_commands.ab3"
0003C1A4 <internal_commands.ab3@747> INCLUDE "internal_commands.ab3"
0003C1A6 <internal_commands.ab3@748> INCLUDE "internal_commands.ab3"
0003C1AA <internal_commands.ab3@752> INCLUDE "internal_commands.ab3"
0003C1AC <internal_commands.ab3@753> INCLUDE "internal_commands.ab3"
0003C1B0 <internal_commands.ab3@754> INCLUDE "internal_commands.ab3"
0003C1B1 <internal_commands.ab3@755> INCLUDE "internal_commands.ab3"
0003C1B2 <internal_commands.ab3@756> INCLUDE "internal_commands.ab3"
0003C1B4 <internal_commands.ab3@758> INCLUDE "internal_commands.ab3"
0003C1B8 <internal_commands.ab3@759> INCLUDE "internal_commands.ab3"
0003C1BA <internal_commands.ab3@760> INCLUDE "internal_commands.ab3"
0003C1BC <internal_commands.ab3@761> INCLUDE "internal_commands.ab3"
0003C1C0 <internal_commands.ab3@762> INCLUDE "internal_commands.ab3"
0003C1C2 <internal_commands.ab3@763> INCLUDE "internal_commands.ab3"
0003C1C6 <internal_commands.ab3@767> INCLUDE "internal_commands.ab3"
0003C1C8 <internal_commands.ab3@768> INCLUDE "internal_commands.ab3"
0003C1CC <internal_commands.ab3@769> INCLUDE "internal_commands.ab3"
0003C1CD <internal_commands.ab3@770> INCLUDE "internal_commands.ab3"
0003C1CE <internal_commands.ab3@771> INCLUDE "internal_commands.ab3"
0003C1D0 <internal_commands.ab3@773> INCLUDE "internal_commands.ab3"
0003C1D4 <internal_commands.ab3@774> INCLUDE "internal_commands.ab3"
0003C1D6 <internal_commands.ab3@775> INCLUDE "internal_commands.ab3"
0003C1D8 <internal_commands.ab3@776> INCLUDE "internal_commands.ab3"
0003C1DC <internal_commands.ab3@777> INCLUDE "internal_commands.ab3"
0003C1DE <internal_commands.ab3@778> INCLUDE "internal_commands.ab3"
0003C1E2 <internal_commands.ab3@782> INCLUDE "internal_commands.ab3"
0003C1E4 <internal_commands.ab3@783> INCLUDE "internal_commands.ab3"
0003C1E8 <internal_commands.ab3@784> INCLUDE "internal_commands.ab3"
0003C1E9 <internal_commands.ab3@785> INCLUDE "internal_commands.ab3"
0003C1EA <internal_commands.ab3@786> INCLUDE "internal_commands.ab3"
0003C1EC <internal_commands.ab3@788> INCLUDE "internal_commands.ab3"
0003C1F0 <internal_commands.ab3@789> INCLUDE "internal_commands.ab3"
0003C1F2 <internal_commands.ab3@790> INCLUDE "internal_commands.ab3"
0003C1F4 <internal_commands.ab3@791> INCLUDE "internal_commands.ab3"
0003C1F8 <internal_commands.ab3@792> INCLUDE "internal_commands.ab3"
0003C1FA <internal_commands.ab3@793> INCLUDE "internal_commands.ab3"
0003C1FE <internal_commands.ab3@797> INCLUDE "internal_commands.ab3"
0003C200 <internal_commands.ab3@798> INCLUDE "internal_commands.ab3"
0003C205 <internal_commands.ab3@799> INCLUDE "internal_commands.ab3"
0003C206 <internal_commands.ab3@800> INCLUDE "internal_commands.ab3"
0003C208 <internal_commands.ab3@803> INCLUDE "internal_commands.ab3"
0003C20C <internal_commands.ab3@804> INCLUDE "internal_commands.ab3"
0003C20E <internal_commands.ab3@805> INCLUDE "internal_commands.ab3"
0003C210 <internal_commands.ab3@806> INCLUDE "internal_commands.ab3"
0003C214 <internal_commands.ab3@807> INCLUDE "internal_commands.ab3"
0003C216 <internal_commands.ab3@808> INCLUDE "internal_commands.ab3"
0003C21A <internal_commands.ab3@812> INCLUDE "internal_commands.ab3"
0003C21C <internal_commands.ab3@813> INCLUDE "internal_commands.ab3"
0003C221 <internal_commands.ab3@814> INCLUDE "internal_commands.ab3"
0003C222 <internal_commands.ab3@815> INCLUDE "internal_commands.ab3"
0003C224 <internal_commands.ab3@818> INCLUDE "internal_commands.ab3"
0003C228 <internal_commands.ab3@819> INCLUDE "internal_commands.ab3"
0003C22A <internal_commands.ab3@820> INCLUDE "internal_commands.ab3"
0003C22C <internal_commands.ab3@821> INCLUDE "internal_commands.ab3"
0003C230 <internal_commands.ab3@822> INCLUDE "internal_commands.ab3"
0003C232 <internal_commands.ab3@823> INCLUDE "internal_commands.ab3"
0003C236 <internal_commands.ab3@827> INCLUDE "internal_commands.ab3"
0003C238 <internal_commands.ab3@828> INCLUDE "internal_commands.ab3"
0003C23D <internal_commands.ab3@829> INCLUDE "internal_commands.ab3"
0003C23E <internal_commands.ab3@830> INCLUDE "internal_commands.ab3"
0003C240 <internal_commands.ab3@833> INCLUDE "internal_commands.ab3"
0003C244 <internal_commands.ab3@834> INCLUDE "internal_commands.ab3"
0003C246 <internal_commands.ab3@835> INCLUDE "internal_commands.ab3"
0003C248 <internal_commands.ab3@836> INCLUDE "internal_commands.ab3"
0003C24C <internal_commands.ab3@837> INCLUDE "internal_commands.ab3"
0003C24E <internal_commands.ab3@838> INCLUDE "internal_commands.ab3"
0003C252 <internal_commands.ab3@842> INCLUDE "internal_commands.ab3"
0003C254 <internal_commands.ab3@843> INCLUDE "internal_commands.ab3"
0003C259 <internal_commands.ab3@844> INCLUDE "internal_commands.ab3"
0003C25A <internal_commands.ab3@845> INCLUDE "internal_commands.ab3"
0003C25C <internal_commands.ab3@848> INCLUDE "internal_commands.ab3"
0003C260 <internal_commands.ab3@849> INCLUDE "internal_commands.ab3"
0003C262 <internal_commands.ab3@850> INCLUDE "internal_commands.ab3"
0003C264 <internal_commands.ab3@851> INCLUDE "internal_commands.ab3"
0003C268 <internal_commands.ab3@852> INCLUDE "internal_commands.ab3"
0003C26A <internal_commands.ab3@853> INCLUDE "internal_commands.ab3"
0003C26E <internal_commands.ab3@857> INCLUDE "internal_commands.ab3"
0003C270 <internal_commands.ab3@858> INCLUDE "internal_commands.ab3"
0003C274 <internal_commands.ab3@859> INCLUDE "internal_commands.ab3"
0003C275 <internal_commands.ab3@860> INCLUDE "internal_commands.ab3"
0003C276 <internal_commands.ab3@861> INCLUDE "internal_commands.ab3"
0003C278 <internal_commands.ab3@863> INCLUDE "internal_commands.ab3"
0003C27C <internal_commands.ab3@864> INCLUDE "internal_commands.ab3"
0003C27E <internal_commands.ab3@865> INCLUDE "internal_commands.ab3"
0003C280 <internal_commands.ab3@866> INCLUDE "internal_commands.ab3"
0003C284 <internal_commands.ab3@867> INCLUDE "internal_commands.ab3"
0003C286 <internal_commands.ab3@868> INCLUDE "internal_commands.ab3"
0003C28A <internal_commands.ab3@872> INCLUDE "internal_commands.ab3"
0003C28C <internal_commands.ab3@873> INCLUDE "internal_commands.ab3"
0003C290 <internal_commands.ab3@874> INCLUDE "internal_commands.ab3"
0003C291 <internal_commands.ab3@875> INCLUDE "internal_commands.ab3"
0003C292 <internal_commands.ab3@876> INCLUDE "internal_commands.ab3"
0003C294 <internal_commands.ab3@878> INCLUDE "internal_commands.ab3"
0003C298 <internal_commands.ab3@879> INCLUDE "internal_commands.ab3"
0003C29A <internal_commands.ab3@880> INCLUDE "internal_commands.ab3"
0003C29C <internal_commands.ab3@881> INCLUDE "internal_commands.ab3"
0003C2A0 <internal_commands.ab3@882> INCLUDE "internal_commands.ab3"
0003C2A2 <internal_commands.ab3@883> INCLUDE "internal_commands.ab3"
0003C2A6 <internal_commands.ab3@887> INCLUDE "internal_commands.ab3"
0003C2A8 <internal_commands.ab3@888> INCLUDE "internal_commands.ab3"
0003C2AC <internal_commands.ab3@889> INCLUDE "internal_commands.ab3"
0003C2AD <internal_commands.ab3@890> INCLUDE "internal_commands.ab3"
0003C2AE <internal_commands.ab3@891> INCLUDE "internal_commands.ab3"
0003C2B0 <internal_commands.ab3@893> INCLUDE "internal_commands.ab3"
0003C2B4 <internal_commands.ab3@894> INCLUDE "internal_commands.ab3"
0003C2B6 <internal_commands.ab3@895> INCLUDE "internal_commands.ab3"
0003C2B8 <internal_commands.ab3@896> INCLUDE "internal_commands.ab3"
0003C2BC <internal_commands.ab3@897> INCLUDE "internal_commands.ab3"
0003C2BE <internal_commands.ab3@898> INCLUDE "internal_commands.ab3"
0003C2C2 <internal_commands.ab3@902> INCLUDE "internal_commands.ab3"
0003C2C4 <internal_commands.ab3@903> INCLUDE "internal_commands.ab3"
0003C2C8 <internal_commands.ab3@904> INCLUDE "internal_commands.ab3"
0003C2C9 <internal_commands.ab3@905> INCLUDE "internal_commands.ab3"
0003C2CA <internal_commands.ab3@906> INCLUDE "internal_commands.ab3"
0003C2CC <internal_commands.ab3@908> INCLUDE "internal_commands.ab3"
0003C2D0 <internal_commands.ab3@909> INCLUDE "internal_commands.ab3"
0003C2D2 <internal_commands.ab3@910> INCLUDE "internal_commands.ab3"
0003C2D4 <internal_commands.ab3@911> INCLUDE "internal_commands.ab3"
0003C2D8 <internal_commands.ab3@912> INCLUDE "internal_commands.ab3"
0003C2DA <internal_commands.ab3@913> INCLUDE "internal_commands.ab3"
0003C2DE <internal_commands.ab3@917> INCLUDE "internal_commands.ab3"
0003C2E0 <internal_commands.ab3@918> INCLUDE "internal_commands.ab3"
0003C2E4 <internal_commands.ab3@919> INCLUDE "internal_commands.ab3"
0003C2E5 <internal_commands.ab3@920> INCLUDE "internal_commands.ab3"
0003C2E6 <internal_commands.ab3@921> INCLUDE "internal_commands.ab3"
0003C2E8 <internal_commands.ab3@923> INCLUDE "internal_commands.ab3"
0003C2EC <internal_commands.ab3@924> INCLUDE "internal_commands.ab3"
0003C2EE <internal_commands.ab3@925> INCLUDE "internal_commands.ab3"
0003C2F0 <internal_commands.ab3@926> INCLUDE "internal_commands.ab3"
0003C2F4 <internal_commands.ab3@927> INCLUDE "internal_commands.ab3"
0003C2F6 <internal_commands.ab3@928> INCLUDE "internal_commands.ab3"
0003C2FA <internal_commands.ab3@932> INCLUDE "internal_commands.ab3"
0003C2FC <internal_commands.ab3@933> INCLUDE "internal_commands.ab3"
0003C301 <internal_commands.ab3@934> INCLUDE "internal_commands.ab3"
0003C302 <internal_commands.ab3@935> INCLUDE "internal_commands.ab3"
0003C304 <internal_commands.ab3@938> INCLUDE "internal_commands.ab3"
0003C308 <internal_commands.ab3@939> INCLUDE "internal_commands.ab3"
0003C30A <internal_commands.ab3@940> INCLUDE "internal_commands.ab3"
0003C30C <internal_commands.ab3@941> INCLUDE "internal_commands.ab3"
0003C310 <internal_commands.ab3@942> INCLUDE "internal_commands.ab3"
0003C312 <internal_commands.ab3@943> INCLUDE "internal_commands.ab3"
0003C316 <internal_commands.ab3@947> INCLUDE "internal_commands.ab3"
0003C318 <internal_commands.ab3@948> INCLUDE "internal_commands.ab3"
0003C31D <internal_commands.ab3@949> INCLUDE "internal_commands.ab3"
0003C31E <internal_commands.ab3@950> INCLUDE "internal_commands.ab3"
0003C320 <internal_commands.ab3@953> INCLUDE "internal_commands.ab3"
0003C324 <internal_commands.ab3@954> INCLUDE "internal_commands.ab3"
0003C326 <internal_commands.ab3@955> INCLUDE "internal_commands.ab3"
0003C328 <internal_commands.ab3@956> INCLUDE "internal_commands.ab3"
0003C32C <internal_commands.ab3@957> INCLUDE "internal_commands.ab3"
0003C32E <internal_commands.ab3@958> INCLUDE "internal_commands.ab3"
0003C332 <internal_commands.ab3@962> INCLUDE "internal_commands.ab3"
0003C334 <internal_commands.ab3@963> INCLUDE "internal_commands.ab3"
0003C339 <internal_commands.ab3@964> INCLUDE "internal_commands.ab3"
0003C33A <internal_commands.ab3@965> INCLUDE "internal_commands.ab3"
0003C33C <internal_commands.ab3@968> INCLUDE "internal_commands.ab3"
0003C340 <internal_commands.ab3@969> INCLUDE "internal_commands.ab3"
0003C342 <internal_commands.ab3@970> INCLUDE "internal_commands.ab3"
0003C344 <internal_commands.ab3@971> INCLUDE "internal_commands.ab3"
0003C348 <internal_commands.ab3@972> INCLUDE "internal_commands.ab3"
0003C34A <internal_commands.ab3@973> INCLUDE "internal_commands.ab3"
0003C34E <internal_commands.ab3@977> INCLUDE "internal_commands.ab3"
0003C350 <internal_commands.ab3@978> INCLUDE "internal_commands.ab3"
0003C355 <internal_commands.ab3@979> INCLUDE "internal_commands.ab3"
0003C356 <internal_commands.ab3@980> INCLUDE "internal_commands.ab3"
0003C358 <internal_commands.ab3@983> INCLUDE "internal_commands.ab3"
0003C35C <internal_commands.ab3@984> INCLUDE "internal_commands.ab3"
0003C35E <internal_commands.ab3@985> INCLUDE "internal_commands.ab3"
0003C360 <internal_commands.ab3@986> INCLUDE "internal_commands.ab3"
0003C364 <internal_commands.ab3@987> INCLUDE "internal_commands.ab3"
0003C366 <internal_commands.ab3@988> INCLUDE "internal_commands.ab3"
0003C36A <internal_commands.ab3@992> INCLUDE "internal_commands.ab3"
0003C36C <internal_commands.ab3@993> INCLUDE "internal_commands.ab3"
0003C371 <internal_commands.ab3@994> INCLUDE "internal_commands.ab3"
0003C372 <internal_commands.ab3@995> INCLUDE "internal_commands.ab3"
0003C374 <internal_commands.ab3@998> INCLUDE "internal_commands.ab3"
0003C378 <internal_commands.ab3@999> INCLUDE "internal_commands.ab3"
0003C37A <internal_commands.ab3@1000> INCLUDE "internal_commands.ab3"
0003C37C <internal_commands.ab3@1001> INCLUDE "internal_commands.ab3"
0003C380 <internal_commands.ab3@1002> INCLUDE "internal_commands.ab3"
0003C382 <internal_commands.ab3@1003> INCLUDE "internal_commands.ab3"
0003C386 <internal_commands.ab3@1007> INCLUDE "internal_commands.ab3"
0003C388 <internal_commands.ab3@1008> INCLUDE "internal_commands.ab3"
0003C38D <internal_commands.ab3@1009> INCLUDE "internal_commands.ab3"
0003C38E <internal_commands.ab3@1010> INCLUDE "internal_commands.ab3"
0003C390 <internal_commands.ab3@1013> INCLUDE "internal_commands.ab3"
0003C394 <internal_commands.ab3@1014> INCLUDE "internal_commands.ab3"
0003C396 <internal_commands.ab3@1015> INCLUDE "internal_commands.ab3"
0003C398 <internal_commands.ab3@1016> INCLUDE "internal_commands.ab3"
0003C39C <internal_commands.ab3@1017> INCLUDE "internal_commands.ab3"
0003C39E <internal_commands.ab3@1018> INCLUDE "internal_commands.ab3"
0003C3A2 <internal_commands.ab3@1022> INCLUDE "internal_commands.ab3"
0003C3A4 <internal_commands.ab3@1023> INCLUDE "internal_commands.ab3"
0003C3A9 <internal_commands.ab3@1024> INCLUDE "internal_commands.ab3"
0003C3AA <internal_commands.ab3@1025> INCLUDE "internal_commands.ab3"
0003C3AC <internal_commands.ab3@1028> INCLUDE "internal_commands.ab3"
0003C3B0 <internal_commands.ab3@1029> INCLUDE "internal_commands.ab3"
0003C3B2 <internal_commands.ab3@1030> INCLUDE "internal_commands.ab3"
0003C3B4 <internal_commands.ab3@1031> INCLUDE "internal_commands.ab3"
0003C3B8 <internal_commands.ab3@1032> INCLUDE "internal_commands.ab3"
0003C3BA <internal_commands.ab3@1033> INCLUDE "internal_commands.ab3"
0003C3BE <internal_commands.ab3@1037> INCLUDE "internal_commands.ab3"
0003C3C0 <internal_commands.ab3@1038> INCLUDE "internal_commands.ab3"
0003C3C5 <internal_commands.ab3@1039> INCLUDE "internal_commands.ab3"
0003C3C6 <internal_commands.ab3@1040> INCLUDE "internal_commands.ab3"
0003C3C8 <internal_commands.ab3@1043> INCLUDE "internal_commands.ab3"
0003C3CC <internal_commands.ab3@1044> INCLUDE "internal_commands.ab3"
0003C3CE <internal_commands.ab3@1045> INCLUDE "internal_commands.ab3"
0003C3D0 <internal_commands.ab3@1046> INCLUDE "internal_commands.ab3"
0003C3D4 <internal_commands.ab3@1047> INCLUDE "internal_commands.ab3"
0003C3D6 <internal_commands.ab3@1048> INCLUDE "internal_commands.ab3"
0003C3DA <internal_commands.ab3@1052> INCLUDE "internal_commands.ab3"
0003C3DC <internal_commands.ab3@1053> INCLUDE "internal_commands.ab3"
0003C3E1 <internal_commands.ab3@1054> INCLUDE "internal_commands.ab3"
0003C3E2 <internal_commands.ab3@1055> INCLUDE "internal_commands.ab3"
0003C3E4 <internal_commands.ab3@1058> INCLUDE "internal_commands.ab3"
0003C3E8 <internal_commands.ab3@1059> INCLUDE "internal_commands.ab3"
0003C3EA <internal_commands.ab3@1060> INCLUDE "internal_commands.ab3"
0003C3EC <internal_commands.ab3@1061> INCLUDE "internal_commands.ab3"
0003C3F0 <internal_commands.ab3@1062> INCLUDE "internal_commands.ab3"
0003C3F2 <internal_commands.ab3@1063> INCLUDE "internal_commands.ab3"
0003C3F6 <internal_commands.ab3@1067> INCLUDE "internal_commands.ab3"
0003C3F8 <internal_commands.ab3@1068> INCLUDE "internal_commands.ab3"
0003C3FD <internal_commands.ab3@1069> INCLUDE "internal_commands.ab3"
0003C3FE <internal_commands.ab3@1070> INCLUDE "internal_commands.ab3"
0003C400 <internal_commands.ab3@1073> INCLUDE "internal_commands.ab3"
0003C404 <internal_commands.ab3@1074> INCLUDE "internal_commands.ab3"
0003C406 <internal_commands.ab3@1075> INCLUDE "internal_commands.ab3"
0003C408 <internal_commands.ab3@1076> INCLUDE "internal_commands.ab3"
0003C40C <internal_commands.ab3@1077> INCLUDE "internal_commands.ab3"
0003C40E <internal_commands.ab3@1078> INCLUDE "internal_commands.ab3"
0003C412 <internal_commands.ab3@1082> INCLUDE "internal_commands.ab3"
0003C414 <internal_commands.ab3@1083> INCLUDE "internal_commands.ab3"
0003C419 <internal_commands.ab3@1084> INCLUDE "internal_commands.ab3"
0003C41A <internal_commands.ab3@1085> INCLUDE "internal_commands.ab3"
0003C41C <internal_commands.ab3@1088> INCLUDE "internal_commands.ab3"
0003C420 <internal_commands.ab3@1089> INCLUDE "internal_commands.ab3"
0003C422 <internal_commands.ab3@1090> INCLUDE "internal_commands.ab3"
0003C424 <internal_commands.ab3@1091> INCLUDE "internal_commands.ab3"
0003C428 <internal_commands.ab3@1092> INCLUDE "internal_commands.ab3"
0003C42A <internal_commands.ab3@1093> INCLUDE "internal_commands.ab3"
0003C42E <internal_commands.ab3@1097> INCLUDE "internal_commands.ab3"
0003C430 <internal_commands.ab3@1098> INCLUDE "internal_commands.ab3"
0003C435 <internal_commands.ab3@1099> INCLUDE "internal_commands.ab3"
0003C436 <internal_commands.ab3@1100> INCLUDE "internal_commands.ab3"
0003C438 <internal_commands.ab3@1103> INCLUDE "internal_commands.ab3"
0003C43C <internal_commands.ab3@1104> INCLUDE "internal_commands.ab3"
0003C43E <internal_commands.ab3@1105> INCLUDE "internal_commands.ab3"
0003C440 <internal_commands.ab3@1106> INCLUDE "internal_commands.ab3"
0003C444 <internal_commands.ab3@1107> INCLUDE "internal_commands.ab3"
0003C446 <internal_commands.ab3@1108> INCLUDE "internal_commands.ab3"
0003C44A <internal_commands.ab3@1112> INCLUDE "internal_commands.ab3"
0003C44C <internal_commands.ab3@1113> INCLUDE "internal_commands.ab3"
0003C451 <internal_commands.ab3@1114> INCLUDE "internal_commands.ab3"
0003C452 <internal_commands.ab3@1115> INCLUDE "internal_commands.ab3"
0003C454 <internal_commands.ab3@1118> INCLUDE "internal_commands.ab3"
0003C458 <internal_commands.ab3@1119> INCLUDE "internal_commands.ab3"
0003C45A <internal_commands.ab3@1120> INCLUDE "internal_commands.ab3"
0003C45C <internal_commands.ab3@1121> INCLUDE "internal_commands.ab3"
0003C460 <internal_commands.ab3@1122> INCLUDE "internal_commands.ab3"
0003C462 <internal_commands.ab3@1123> INCLUDE "internal_commands.ab3"
0003C466 <internal_commands.ab3@1127> INCLUDE "internal_commands.ab3"
0003C468 <internal_commands.ab3@1128> INCLUDE "internal_commands.ab3"
0003C46D <internal_commands.ab3@1129> INCLUDE "internal_commands.ab3"
0003C46E <internal_commands.ab3@1130> INCLUDE "internal_commands.ab3"
0003C470 <internal_commands.ab3@1133> INCLUDE "internal_commands.ab3"
0003C474 <internal_commands.ab3@1134> INCLUDE "internal_commands.ab3"
0003C476 <internal_commands.ab3@1135> INCLUDE "internal_commands.ab3"
0003C478 <internal_commands.ab3@1136> INCLUDE "internal_commands.ab3"
0003C47C <internal_commands.ab3@1137> INCLUDE "internal_commands.ab3"
0003C47E <internal_commands.ab3@1138> INCLUDE "internal_commands.ab3"
0003C482 <internal_commands.ab3@1142> INCLUDE "internal_commands.ab3"
0003C484 <internal_commands.ab3@1143> INCLUDE "internal_commands.ab3"
0003C489 <internal_commands.ab3@1144> INCLUDE "internal_commands.ab3"
0003C48A <internal_commands.ab3@1145> INCLUDE "internal_commands.ab3"
0003C48C <internal_commands.ab3@1148> INCLUDE "internal_commands.ab3"
0003C490 <internal_commands.ab3@1149> INCLUDE "internal_commands.ab3"
0003C492 <internal_commands.ab3@1150> INCLUDE "internal_commands.ab3"
0003C494 <internal_commands.ab3@1151> INCLUDE "internal_commands.ab3"
0003C498 <internal_commands.ab3@1152> INCLUDE "internal_commands.ab3"
0003C49A <internal_commands.ab3@1153> INCLUDE "internal_commands.ab3"
0003C49E <internal_commands.ab3@1157> INCLUDE "internal_commands.ab3"
0003C4A0 <internal_commands.ab3@1158> INCLUDE "internal_commands.ab3"
0003C4A5 <internal_commands.ab3@1159> INCLUDE "internal_commands.ab3"
0003C4A6 <internal_commands.ab3@1160> INCLUDE "internal_commands.ab3"
0003C4A8 <internal_commands.ab3@1163> INCLUDE "internal_commands.ab3"
0003C4AC <internal_commands.ab3@1164> INCLUDE "internal_commands.ab3"
0003C4AE <internal_commands.ab3@1165> INCLUDE "internal_commands.ab3"
0003C4B0 <internal_commands.ab3@1166> INCLUDE "internal_commands.ab3"
0003C4B4 <internal_commands.ab3@1167> INCLUDE "internal_commands.ab3"
0003C4B6 <internal_commands.ab3@1168> INCLUDE "internal_commands.ab3"
0003C4BA <internal_commands.ab3@1172> INCLUDE "internal_commands.ab3"
0003C4BC <internal_commands.ab3@1173> INCLUDE "internal_commands.ab3"
0003C4C1 <internal_commands.ab3@1174> INCLUDE "internal_commands.ab3"
0003C4C2 <internal_commands.ab3@1175> INCLUDE "internal_commands.ab3"
0003C4C4 <internal_commands.ab3@1178> INCLUDE "internal_commands.ab3"
0003C4C8 <internal_commands.ab3@1179> INCLUDE "internal_commands.ab3"
0003C4CA <internal_commands.ab3@1180> INCLUDE "internal_commands.ab3"
0003C4CC <internal_commands.ab3@1181> INCLUDE "internal_commands.ab3"
0003C4D0 <internal_commands.ab3@1182> INCLUDE "internal_commands.ab3"
0003C4D2 <internal_commands.ab3@1183> INCLUDE "internal_commands.ab3"
0003C4D6 <internal_commands.ab3@1186> INCLUDE "internal_commands.ab3"
0003C4D8 <internal_commands.ab3@1187> INCLUDE "internal_commands.ab3"
0003C4DC <internal_commands.ab3@1188> INCLUDE "internal_commands.ab3"
0003C4DD <internal_commands.ab3@1189> INCLUDE "internal_commands.ab3"
0003C4DE <internal_commands.ab3@1190> INCLUDE "internal_commands.ab3"
0003C4E0 <internal_commands.ab3@1192> INCLUDE "internal_commands.ab3"
0003C4E4 <internal_commands.ab3@1193> INCLUDE "internal_commands.ab3"
0003C4E6 <internal_commands.ab3@1194> INCLUDE "internal_commands.ab3"
0003C4E8 <internal_commands.ab3@1195> INCLUDE "internal_commands.ab3"
0003C4EC <internal_commands.ab3@1196> INCLUDE "internal_commands.ab3"
0003C4EE <internal_commands.ab3@1197> INCLUDE "internal_commands.ab3"
0003C4F2 <internal_commands.ab3@1201> INCLUDE "internal_commands.ab3"
0003C4F4 <internal_commands.ab3@1202> INCLUDE "internal_commands.ab3"
0003C4F9 <internal_commands.ab3@1203> INCLUDE "internal_commands.ab3"
0003C4FA <internal_commands.ab3@1204> INCLUDE "internal_commands.ab3"
0003C4FC <internal_commands.ab3@1207> INCLUDE "internal_commands.ab3"
0003C500 <internal_commands.ab3@1208> INCLUDE "internal_commands.ab3"
0003C502 <internal_commands.ab3@1209> INCLUDE "internal_commands.ab3"
0003C504 <internal_commands.ab3@1210> INCLUDE "internal_commands.ab3"
0003C508 <internal_commands.ab3@1211> INCLUDE "internal_commands.ab3"
0003C50A <internal_commands.ab3@1212> INCLUDE "internal_commands.ab3"
0003C50E <internal_commands.ab3@1216> INCLUDE "internal_commands.ab3"
0003C510 <internal_commands.ab3@1217> INCLUDE "internal_commands.ab3"
0003C514 <internal_commands.ab3@1218> INCLUDE "internal_commands.ab3"
0003C515 <internal_commands.ab3@1219> INCLUDE "internal_commands.ab3"
0003C516 <internal_commands.ab3@1220> INCLUDE "internal_commands.ab3"
0003C518 <internal_commands.ab3@1222> INCLUDE "internal_commands.ab3"
0003C51C <internal_commands.ab3@1223> INCLUDE "internal_commands.ab3"
0003C51E <internal_commands.ab3@1224> INCLUDE "internal_commands.ab3"
0003C520 <internal_commands.ab3@1225> INCLUDE "internal_commands.ab3"
0003C524 <internal_commands.ab3@1226> INCLUDE "internal_commands.ab3"
0003C526 <internal_commands.ab3@1227> INCLUDE "internal_commands.ab3"
0003C52A <internal_commands.ab3@1231> INCLUDE "internal_commands.ab3"
0003C52C <internal_commands.ab3@1232> INCLUDE "internal_commands.ab3"
0003C531 <internal_commands.ab3@1233> INCLUDE "internal_commands.ab3"
0003C532 <internal_commands.ab3@1234> INCLUDE "internal_commands.ab3"
0003C534 <internal_commands.ab3@1237> INCLUDE "internal_commands.ab3"
0003C538 <internal_commands.ab3@1238> INCLUDE "internal_commands.ab3"
0003C53A <internal_commands.ab3@1239> INCLUDE "internal_commands.ab3"
0003C53C <internal_commands.ab3@1240> INCLUDE "internal_commands.ab3"
0003C540 <internal_commands.ab3@1241> INCLUDE "internal_commands.ab3"
0003C542 <internal_commands.ab3@1242> INCLUDE "internal_commands.ab3"
0003C546 <internal_commands.ab3@1246> INCLUDE "internal_commands.ab3"
0003C548 <internal_commands.ab3@1247> INCLUDE "internal_commands.ab3"
0003C54D <internal_commands.ab3@1248> INCLUDE "internal_commands.ab3"
0003C54E <internal_commands.ab3@1249> INCLUDE "internal_commands.ab3"
0003C550 <internal_commands.ab3@1252> INCLUDE "internal_commands.ab3"
0003C554 <internal_commands.ab3@1253> INCLUDE "internal_commands.ab3"
0003C556 <internal_commands.ab3@1254> INCLUDE "internal_commands.ab3"
0003C558 <internal_commands.ab3@1255> INCLUDE "internal_commands.ab3"
0003C55C <internal_commands.ab3@1256> INCLUDE "internal_commands.ab3"
0003C55E <internal_commands.ab3@1257> INCLUDE "internal_commands.ab3"
0003C562 <internal_commands.ab3@1261> INCLUDE "internal_commands.ab3"
0003C564 <internal_commands.ab3@1262> INCLUDE "internal_commands.ab3"
0003C568 <internal_commands.ab3@1263> INCLUDE "internal_commands.ab3"
0003C569 <internal_commands.ab3@1264> INCLUDE "internal_commands.ab3"
0003C56A <internal_commands.ab3@1265> INCLUDE "internal_commands.ab3"
0003C56C <internal_commands.ab3@1267> INCLUDE "internal_commands.ab3"
0003C570 <internal_commands.ab3@1268> INCLUDE "internal_commands.ab3"
0003C572 <internal_commands.ab3@1269> INCLUDE "internal_commands.ab3"
0003C574 <internal_commands.ab3@1270> INCLUDE "internal_commands.ab3"
0003C578 <internal_commands.ab3@1271> INCLUDE "internal_commands.ab3"
0003C57A <internal_commands.ab3@1272> INCLUDE "internal_commands.ab3"
0003C57E <internal_commands.ab3@1276> INCLUDE "internal_commands.ab3"
0003C580 <internal_commands.ab3@1277> INCLUDE "internal_commands.ab3"
0003C585 <internal_commands.ab3@1278> INCLUDE "internal_commands.ab3"
0003C586 <internal_commands.ab3@1279> INCLUDE "internal_commands.ab3"
0003C588 <internal_commands.ab3@1282> INCLUDE "internal_commands.ab3"
0003C58C <internal_commands.ab3@1283> INCLUDE "internal_commands.ab3"
0003C58E <internal_commands.ab3@1284> INCLUDE "internal_commands.ab3"
0003C590 <internal_commands.ab3@1285> INCLUDE "internal_commands.ab3"
0003C594 <internal_commands.ab3@1286> INCLUDE "internal_commands.ab3"
0003C596 <internal_commands.ab3@1287> INCLUDE "internal_commands.ab3"
0003C59A <internal_commands.ab3@1291> INCLUDE "internal_commands.ab3"
0003C59C <internal_commands.ab3@1292> INCLUDE "internal_commands.ab3"
0003C5A0 <internal_commands.ab3@1293> INCLUDE "internal_commands.ab3"
0003C5A1 <internal_commands.ab3@1294> INCLUDE "internal_commands.ab3"
0003C5A2 <internal_commands.ab3@1295> INCLUDE "internal_commands.ab3"
0003C5A4 <internal_commands.ab3@1297> INCLUDE "internal_commands.ab3"
0003C5A8 <internal_commands.ab3@1298> INCLUDE "internal_commands.ab3"
0003C5AA <internal_commands.ab3@1299> INCLUDE "internal_commands.ab3"
0003C5AC <internal_commands.ab3@1300> INCLUDE "internal_commands.ab3"
0003C5B0 <internal_commands.ab3@1301> INCLUDE "internal_commands.ab3"
0003C5B2 <internal_commands.ab3@1302> INCLUDE "internal_commands.ab3"
0003C5B6 <internal_commands.ab3@1306> INCLUDE "internal_commands.ab3"
0003C5B8 <internal_commands.ab3@1307> INCLUDE "internal_commands.ab3"
0003C5BC <internal_commands.ab3@1308> INCLUDE "internal_commands.ab3"
0003C5BD <internal_commands.ab3@1309> INCLUDE "internal_commands.ab3"
0003C5BE <internal_commands.ab3@1310> INCLUDE "internal_commands.ab3"
0003C5C0 <internal_commands.ab3@1312> INCLUDE "internal_commands.ab3"
0003C5C4 <internal_commands.ab3@1313> INCLUDE "internal_commands.ab3"
0003C5C6 <internal_commands.ab3@1314> INCLUDE "internal_commands.ab3"
0003C5C8 <internal_commands.ab3@1315> INCLUDE "internal_commands.ab3"
0003C5CC <internal_commands.ab3@1316> INCLUDE "internal_commands.ab3"
0003C5CE <internal_commands.ab3@1317> INCLUDE "internal_commands.ab3"
0003C5D2 <internal_commands.ab3@1321> INCLUDE "internal_commands.ab3"
0003C5D4 <internal_commands.ab3@1322> INCLUDE "internal_commands.ab3"
0003C5DC <internal_commands.ab3@1323> INCLUDE "internal_commands.ab3"
0003C5DD <internal_commands.ab3@1324> INCLUDE "internal_commands.ab3"
0003C5DE <internal_commands.ab3@1325> INCLUDE "internal_commands.ab3"
0003C5E0 <internal_commands.ab3@1327> INCLUDE "internal_commands.ab3"
0003C5E4 <internal_commands.ab3@1328> INCLUDE "internal_commands.ab3"
0003C5E6 <internal_commands.ab3@1329> INCLUDE "internal_commands.ab3"
0003C5E8 <internal_commands.ab3@1330> INCLUDE "internal_commands.ab3"
0003C5EC <internal_commands.ab3@1331> INCLUDE "internal_commands.ab3"
0003C5EE <internal_commands.ab3@1332> INCLUDE "internal_commands.ab3"
0003C5F2 <internal_commands.ab3@1336> INCLUDE "internal_commands.ab3"
0003C5F4 <internal_commands.ab3@1337> INCLUDE "internal_commands.ab3"
0003C5F8 <internal_commands.ab3@1338> INCLUDE "internal_commands.ab3"
0003C5F9 <internal_commands.ab3@1339> INCLUDE "internal_commands.ab3"
0003C5FA <internal_commands.ab3@1340> INCLUDE "internal_commands.ab3"
0003C5FC <internal_commands.ab3@1342> INCLUDE "internal_commands.ab3"
0003C600 <internal_commands.ab3@1343> INCLUDE "internal_commands.ab3"
0003C602 <internal_commands.ab3@1344> INCLUDE "internal_commands.ab3"
0003C604 <internal_commands.ab3@1345> INCLUDE "internal_commands.ab3"
0003C608 <internal_commands.ab3@1346> INCLUDE "internal_commands.ab3"
0003C60A <internal_commands.ab3@1347> INCLUDE "internal_commands.ab3"
0003C60E <internal_commands.ab3@1351> INCLUDE "internal_commands.ab3"
0003C610 <internal_commands.ab3@1352> INCLUDE "internal_commands.ab3"
0003C614 <internal_commands.ab3@1353> INCLUDE "internal_commands.ab3"
0003C615 <internal_commands.ab3@1354> INCLUDE "internal_commands.ab3"
0003C616 <internal_commands.ab3@1355> INCLUDE "internal_commands.ab3"
0003C618 <internal_commands.ab3@1357> INCLUDE "internal_commands.ab3"
0003C61C <internal_commands.ab3@1358> INCLUDE "internal_commands.ab3"
0003C61E <internal_commands.ab3@1359> INCLUDE "internal_commands.ab3"
0003C620 <internal_commands.ab3@1360> INCLUDE "internal_commands.ab3"
0003C624 <internal_commands.ab3@1361> INCLUDE "internal_commands.ab3"
0003C626 <internal_commands.ab3@1362> INCLUDE "internal_commands.ab3"
0003C62A <internal_commands.ab3@1366> INCLUDE "internal_commands.ab3"
0003C62C <internal_commands.ab3@1367> INCLUDE "internal_commands.ab3"
0003C630 <internal_commands.ab3@1368> INCLUDE "internal_commands.ab3"
0003C631 <internal_commands.ab3@1369> INCLUDE "internal_commands.ab3"
0003C632 <internal_commands.ab3@1370> INCLUDE "internal_commands.ab3"
0003C634 <internal_commands.ab3@1372> INCLUDE "internal_commands.ab3"
0003C638 <internal_commands.ab3@1373> INCLUDE "internal_commands.ab3"
0003C63A <internal_commands.ab3@1374> INCLUDE "internal_commands.ab3"
0003C63C <internal_commands.ab3@1375> INCLUDE "internal_commands.ab3"
0003C640 <internal_commands.ab3@1376> INCLUDE "internal_commands.ab3"
0003C642 <internal_commands.ab3@1377> INCLUDE "internal_commands.ab3"
0003C646 <internal_commands.ab3@1381> INCLUDE "internal_commands.ab3"
0003C648 <internal_commands.ab3@1382> INCLUDE "internal_commands.ab3"
0003C64D <internal_commands.ab3@1383> INCLUDE "internal_commands.ab3"
0003C64E <internal_commands.ab3@1384> INCLUDE "internal_commands.ab3"
0003C650 <internal_commands.ab3@1387> INCLUDE "internal_commands.ab3"
0003C654 <internal_commands.ab3@1388> INCLUDE "internal_commands.ab3"
0003C656 <internal_commands.ab3@1389> INCLUDE "internal_commands.ab3"
0003C658 <internal_commands.ab3@1390> INCLUDE "internal_commands.ab3"
0003C65C <internal_commands.ab3@1391> INCLUDE "internal_commands.ab3"
0003C65E <internal_commands.ab3@1392> INCLUDE "internal_commands.ab3"
0003C662 <internal_commands.ab3@1396> INCLUDE "internal_commands.ab3"
0003C664 <internal_commands.ab3@1397> INCLUDE "internal_commands.ab3"
0003C668 <internal_commands.ab3@1398> INCLUDE "internal_commands.ab3"
0003C669 <internal_commands.ab3@1399> INCLUDE "internal_commands.ab3"
0003C66A <internal_commands.ab3@1400> INCLUDE "internal_commands.ab3"
0003C66C <internal_commands.ab3@1402> INCLUDE "internal_commands.ab3"
0003C670 <internal_commands.ab3@1403> INCLUDE "internal_commands.ab3"
0003C672 <internal_commands.ab3@1404> INCLUDE "internal_commands.ab3"
0003C674 <internal_commands.ab3@1405> INCLUDE "internal_commands.ab3"
0003C678 <internal_commands.ab3@1406> INCLUDE "internal_commands.ab3"
0003C67A <internal_commands.ab3@1407> INCLUDE "internal_commands.ab3"
0003C67E <internal_commands.ab3@1411> INCLUDE "internal_commands.ab3"
0003C680 <internal_commands.ab3@1412> INCLUDE "internal_commands.ab3"
0003C684 <internal_commands.ab3@1413> INCLUDE "internal_commands.ab3"
0003C685 <internal_commands.ab3@1414> INCLUDE "internal_commands.ab3"
0003C686 <internal_commands.ab3@1415> INCLUDE "internal_commands.ab3"
0003C688 <internal_commands.ab3@1417> INCLUDE "internal_commands.ab3"
0003C68C <internal_commands.ab3@1418> INCLUDE "internal_commands.ab3"
0003C68E <internal_commands.ab3@1419> INCLUDE "internal_commands.ab3"
0003C690 <internal_commands.ab3@1420> INCLUDE "internal_commands.ab3"
0003C694 <internal_commands.ab3@1421> INCLUDE "internal_commands.ab3"
0003C696 <internal_commands.ab3@1422> INCLUDE "internal_commands.ab3"
0003C69A <internal_commands.ab3@1426> INCLUDE "internal_commands.ab3"
0003C69C <internal_commands.ab3@1427> INCLUDE "internal_commands.ab3"
0003C6A1 <internal_commands.ab3@1428> INCLUDE "internal_commands.ab3"
0003C6A2 <internal_commands.ab3@1429> INCLUDE "internal_commands.ab3"
0003C6A4 <internal_commands.ab3@1432> INCLUDE "internal_commands.ab3"
0003C6A8 <internal_commands.ab3@1433> INCLUDE "internal_commands.ab3"
0003C6AA <internal_commands.ab3@1434> INCLUDE "internal_commands.ab3"
0003C6AC <internal_commands.ab3@1435> INCLUDE "internal_commands.ab3"
0003C6B0 <internal_commands.ab3@1436> INCLUDE "internal_commands.ab3"
0003C6B2 <internal_commands.ab3@1437> INCLUDE "internal_commands.ab3"
0003C6B6 <internal_commands.ab3@1441> INCLUDE "internal_commands.ab3"
0003C6B8 <internal_commands.ab3@1442> INCLUDE "internal_commands.ab3"
0003C6BD <internal_commands.ab3@1443> INCLUDE "internal_commands.ab3"
0003C6BE <internal_commands.ab3@1444> INCLUDE "internal_commands.ab3"
0003C6C0 <internal_commands.ab3@1447> INCLUDE "internal_commands.ab3"
0003C6C4 <internal_commands.ab3@1448> INCLUDE "internal_commands.ab3"
0003C6C6 <internal_commands.ab3@1449> INCLUDE "internal_commands.ab3"
0003C6C8 <internal_commands.ab3@1450> INCLUDE "internal_commands.ab3"
0003C6CC <internal_commands.ab3@1451> INCLUDE "internal_commands.ab3"
0003C6CE <internal_commands.ab3@1452> INCLUDE "internal_commands.ab3"
0003C6D2 <internal_commands.ab3@1457> INCLUDE "internal_commands.ab3"
0003C6D4 <internal_commands.ab3@1458> INCLUDE "internal_commands.ab3"
0003C6DA <internal_commands.ab3@1459> INCLUDE "internal_commands.ab3"
0003C6DB <internal_commands.ab3@1460> INCLUDE "internal_commands.ab3"
0003C6DC <internal_commands.ab3@1461> INCLUDE "internal_commands.ab3"
0003C6DE <internal_commands.ab3@1463> INCLUDE "internal_commands.ab3"
0003C6E2 <internal_commands.ab3@1464> INCLUDE "internal_commands.ab3"
0003C6E4 <internal_commands.ab3@1465> INCLUDE "internal_commands.ab3"
0003C6E6 <internal_commands.ab3@1466> INCLUDE "internal_commands.ab3"
0003C6EA <internal_commands.ab3@1467> INCLUDE "internal_commands.ab3"
0003C6EC <internal_commands.ab3@1468> INCLUDE "internal_commands.ab3"
0003C6F0 <internal_commands.ab3@1472> INCLUDE "internal_commands.ab3"
0003C6F2 <internal_commands.ab3@1473> INCLUDE "internal_commands.ab3"
0003C6F8 <internal_commands.ab3@1474> INCLUDE "internal_commands.ab3"
0003C6F9 <internal_commands.ab3@1475> INCLUDE "internal_commands.ab3"
0003C6FA <internal_commands.ab3@1476> INCLUDE "internal_commands.ab3"
0003C6FC <internal_commands.ab3@1478> INCLUDE "internal_commands.ab3"
0003C700 <internal_commands.ab3@1479> INCLUDE "internal_commands.ab3"
0003C702 <internal_commands.ab3@1480> INCLUDE "internal_commands.ab3"
0003C704 <internal_commands.ab3@1481> INCLUDE "internal_commands.ab3"
0003C708 <internal_commands.ab3@1482> INCLUDE "internal_commands.ab3"
0003C70A <internal_commands.ab3@1483> INCLUDE "internal_commands.ab3"
0003C70E <internal_commands.ab3@1487> INCLUDE "internal_commands.ab3"
0003C710 <internal_commands.ab3@1488> INCLUDE "internal_commands.ab3"
0003C716 <internal_commands.ab3@1489> INCLUDE "internal_commands.ab3"
0003C717 <internal_commands.ab3@1490> INCLUDE "internal_commands.ab3"
0003C718 <internal_commands.ab3@1491> INCLUDE "internal_commands.ab3"
0003C71A <internal_commands.ab3@1493> INCLUDE "internal_commands.ab3"
0003C71E <internal_commands.ab3@1494> INCLUDE "internal_commands.ab3"
0003C720 <internal_commands.ab3@1495> INCLUDE "internal_commands.ab3"
0003C722 <internal_commands.ab3@1496> INCLUDE "internal_commands.ab3"
0003C726 <internal_commands.ab3@1497> INCLUDE "internal_commands.ab3"
0003C728 <internal_commands.ab3@1498> INCLUDE "internal_commands.ab3"
0003C72C <internal_commands.ab3@1502> INCLUDE "internal_commands.ab3"
0003C72E <internal_commands.ab3@1503> INCLUDE "internal_commands.ab3"
0003C733 <internal_commands.ab3@1504> INCLUDE "internal_commands.ab3"
0003C734 <internal_commands.ab3@1505> INCLUDE "internal_commands.ab3"
0003C736 <internal_commands.ab3@1508> INCLUDE "internal_commands.ab3"
0003C73A <internal_commands.ab3@1509> INCLUDE "internal_commands.ab3"
0003C73C <internal_commands.ab3@1510> INCLUDE "internal_commands.ab3"
0003C73E <internal_commands.ab3@1511> INCLUDE "internal_commands.ab3"
0003C742 <internal_commands.ab3@1512> INCLUDE "internal_commands.ab3"
0003C744 <internal_commands.ab3@1513> INCLUDE "internal_commands.ab3"
0003C748 <internal_commands.ab3@1517> INCLUDE "internal_commands.ab3"
0003C74A <internal_commands.ab3@1518> INCLUDE "internal_commands.ab3"
0003C74F <internal_commands.ab3@1519> INCLUDE "internal_commands.ab3"
0003C750 <internal_commands.ab3@1520> INCLUDE "internal_commands.ab3"
0003C752 <internal_commands.ab3@1523> INCLUDE "internal_commands.ab3"
0003C756 <internal_commands.ab3@1524> INCLUDE "internal_commands.ab3"
0003C758 <internal_commands.ab3@1525> INCLUDE "internal_commands.ab3"
0003C75A <internal_commands.ab3@1526> INCLUDE "internal_commands.ab3"
0003C75E <internal_commands.ab3@1527> INCLUDE "internal_commands.ab3"
0003C760 <internal_commands.ab3@1528> INCLUDE "internal_commands.ab3"
0003C764 <internal_commands.ab3@1532> INCLUDE "internal_commands.ab3"
0003C766 <internal_commands.ab3@1533> INCLUDE "internal_commands.ab3"
0003C76B <internal_commands.ab3@1534> INCLUDE "internal_commands.ab3"
0003C76C <internal_commands.ab3@1535> INCLUDE "internal_commands.ab3"
0003C76E <internal_commands.ab3@1538> INCLUDE "internal_commands.ab3"
0003C772 <internal_commands.ab3@1539> INCLUDE "internal_commands.ab3"
0003C774 <internal_commands.ab3@1540> INCLUDE "internal_commands.ab3"
0003C776 <internal_commands.ab3@1541> INCLUDE "internal_commands.ab3"
0003C77A <internal_commands.ab3@1542> INCLUDE "internal_commands.ab3"
0003C77C <internal_commands.ab3@1543> INCLUDE "internal_commands.ab3"
0003C780 <internal_commands.ab3@1547> INCLUDE "internal_commands.ab3"
0003C782 <internal_commands.ab3@1548> INCLUDE "internal_commands.ab3"
0003C786 <internal_commands.ab3@1549> INCLUDE "internal_commands.ab3"
0003C787 <internal_commands.ab3@1550> INCLUDE "internal_commands.ab3"
0003C788 <internal_commands.ab3@1551> INCLUDE "internal_commands.ab3"
0003C78A <internal_commands.ab3@1553> INCLUDE "internal_commands.ab3"
0003C78E <internal_commands.ab3@1554> INCLUDE "internal_commands.ab3"
0003C790 <internal_commands.ab3@1555> INCLUDE "internal_commands.ab3"
0003C792 <internal_commands.ab3@1556> INCLUDE "internal_commands.ab3"
0003C796 <internal_commands.ab3@1557> INCLUDE "internal_commands.ab3"
0003C798 <internal_commands.ab3@1558> INCLUDE "internal_commands.ab3"
0003C79C <internal_commands.ab3@1562> INCLUDE "internal_commands.ab3"
0003C79E <internal_commands.ab3@1563> INCLUDE "internal_commands.ab3"
0003C7A3 <internal_commands.ab3@1564> INCLUDE "internal_commands.ab3"
0003C7A4 <internal_commands.ab3@1565> INCLUDE "internal_commands.ab3"
0003C7A6 <internal_commands.ab3@1568> INCLUDE "internal_commands.ab3"
0003C7AA <internal_commands.ab3@1569> INCLUDE "internal_commands.ab3"
0003C7AC <internal_commands.ab3@1570> INCLUDE "internal_commands.ab3"
0003C7AE <internal_commands.ab3@1571> INCLUDE "internal_commands.ab3"
0003C7B2 <internal_commands.ab3@1572> INCLUDE "internal_commands.ab3"
0003C7B4 <internal_commands.ab3@1573> INCLUDE "internal_commands.ab3"
0003C7B8 <internal_commands.ab3@1577> INCLUDE "internal_commands.ab3"
0003C7BA <internal_commands.ab3@1578> INCLUDE "internal_commands.ab3"
0003C7BE <internal_commands.ab3@1579> INCLUDE "internal_commands.ab3"
0003C7BF <internal_commands.ab3@1580> INCLUDE "internal_commands.ab3"
0003C7C0 <internal_commands.ab3@1581> INCLUDE "internal_commands.ab3"
0003C7C2 <internal_commands.ab3@1583> INCLUDE "internal_commands.ab3"
0003C7C6 <internal_commands.ab3@1584> INCLUDE "internal_commands.ab3"
0003C7C8 <internal_commands.ab3@1585> INCLUDE "internal_commands.ab3"
0003C7CA <internal_commands.ab3@1586> INCLUDE "internal_commands.ab3"
0003C7CE <internal_commands.ab3@1587> INCLUDE "internal_commands.ab3"
0003C7D0 <internal_commands.ab3@1588> INCLUDE "internal_commands.ab3"
0003C7D4 <internal_commands.ab3@1592> INCLUDE "internal_commands.ab3"
0003C7D6 <internal_commands.ab3@1593> INCLUDE "internal_commands.ab3"
0003C7DA <internal_commands.ab3@1594> INCLUDE "internal_commands.ab3"
0003C7DB <internal_commands.ab3@1595> INCLUDE "internal_commands.ab3"
0003C7DC <internal_commands.ab3@1596> INCLUDE "internal_commands.ab3"
0003C7DE <internal_commands.ab3@1598> INCLUDE "internal_commands.ab3"
0003C7E2 <internal_commands.ab3@1599> INCLUDE "internal_commands.ab3"
0003C7E4 <internal_commands.ab3@1600> INCLUDE "internal_commands.ab3"
0003C7E6 <internal_commands.ab3@1601> INCLUDE "internal_commands.ab3"
0003C7EA <internal_commands.ab3@1602> INCLUDE "internal_commands.ab3"
0003C7EC <internal_commands.ab3@1603> INCLUDE "internal_commands.ab3"
0003C7F0 <internal_commands.ab3@1607> INCLUDE "internal_commands.ab3"
0003C7F2 <internal_commands.ab3@1608> INCLUDE "internal_commands.ab3"
0003C7F5 <internal_commands.ab3@1609> INCLUDE "internal_commands.ab3"
0003C7F6 <internal_commands.ab3@1610> INCLUDE "internal_commands.ab3"
0003C7F8 <internal_commands.ab3@1613> INCLUDE "internal_commands.ab3"
0003C7FC <internal_commands.ab3@1614> INCLUDE "internal_commands.ab3"
0003C7FE <internal_commands.ab3@1615> INCLUDE "internal_commands.ab3"
0003C800 <internal_commands.ab3@1616> INCLUDE "internal_commands.ab3"
0003C804 <internal_commands.ab3@1617> INCLUDE "internal_commands.ab3"
0003C806 <internal_commands.ab3@1618> INCLUDE "internal_commands.ab3"
0003C80A <internal_commands.ab3@1622> INCLUDE "internal_commands.ab3"
0003C80C <internal_commands.ab3@1623> INCLUDE "internal_commands.ab3"
0003C810 <internal_commands.ab3@1624> INCLUDE "internal_commands.ab3"
0003C811 <internal_commands.ab3@1625> INCLUDE "internal_commands.ab3"
0003C812 <internal_commands.ab3@1626> INCLUDE "internal_commands.ab3"
0003C814 <internal_commands.ab3@1628> INCLUDE "internal_commands.ab3"
0003C818 <internal_commands.ab3@1629> INCLUDE "internal_commands.ab3"
0003C81A <internal_commands.ab3@1630> INCLUDE "internal_commands.ab3"
0003C81C <internal_commands.ab3@1631> INCLUDE "internal_commands.ab3"
0003C820 <internal_commands.ab3@1632> INCLUDE "internal_commands.ab3"
0003C822 <internal_commands.ab3@1633> INCLUDE "internal_commands.ab3"
0003C826 <internal_commands.ab3@1637> INCLUDE "internal_commands.ab3"
0003C828 <internal_commands.ab3@1638> INCLUDE "internal_commands.ab3"
0003C82C <internal_commands.ab3@1639> INCLUDE "internal_commands.ab3"
0003C82D <internal_commands.ab3@1640> INCLUDE "internal_commands.ab3"
0003C82E <internal_commands.ab3@1641> INCLUDE "internal_commands.ab3"
0003C830 <internal_commands.ab3@1643> INCLUDE "internal_commands.ab3"
0003C834 <internal_commands.ab3@1644> INCLUDE "internal_commands.ab3"
0003C836 <internal_commands.ab3@1645> INCLUDE "internal_commands.ab3"
0003C838 <internal_commands.ab3@1646> INCLUDE "internal_commands.ab3"
0003C83C <internal_commands.ab3@1647> INCLUDE "internal_commands.ab3"
0003C83E <internal_commands.ab3@1648> INCLUDE "internal_commands.ab3"
0003C842 <internal_commands.ab3@1652> INCLUDE "internal_commands.ab3"
0003C844 <internal_commands.ab3@1653> INCLUDE "internal_commands.ab3"
0003C84A <internal_commands.ab3@1654> INCLUDE "internal_commands.ab3"
0003C84B <internal_commands.ab3@1655> INCLUDE "internal_commands.ab3"
0003C84C <internal_commands.ab3@1656> INCLUDE "internal_commands.ab3"
0003C84E <internal_commands.ab3@1658> INCLUDE "internal_commands.ab3"
0003C852 <internal_commands.ab3@1659> INCLUDE "internal_commands.ab3"
0003C854 <internal_commands.ab3@1660> INCLUDE "internal_commands.ab3"
0003C856 <internal_commands.ab3@1661> INCLUDE "internal_commands.ab3"
0003C85A <internal_commands.ab3@1662> INCLUDE "internal_commands.ab3"
0003C85C <internal_commands.ab3@1663> INCLUDE "internal_commands.ab3"
0003C860 <internal_commands.ab3@1667> INCLUDE "internal_commands.ab3"
0003C862 <internal_commands.ab3@1668> INCLUDE "internal_commands.ab3"
0003C866 <internal_commands.ab3@1669> INCLUDE "internal_commands.ab3"
0003C867 <internal_commands.ab3@1670> INCLUDE "internal_commands.ab3"
0003C868 <internal_commands.ab3@1671> INCLUDE "internal_commands.ab3"
0003C86A <internal_commands.ab3@1673> INCLUDE "internal_commands.ab3"
0003C86E <internal_commands.ab3@1674> INCLUDE "internal_commands.ab3"
0003C870 <internal_commands.ab3@1675> INCLUDE "internal_commands.ab3"
0003C872 <internal_commands.ab3@1676> INCLUDE "internal_commands.ab3"
0003C876 <internal_commands.ab3@1677> INCLUDE "internal_commands.ab3"
0003C878 <internal_commands.ab3@1678> INCLUDE "internal_commands.ab3"
0003C87C <internal_commands.ab3@1682> INCLUDE "internal_commands.ab3"
0003C87E <internal_commands.ab3@1683> INCLUDE "internal_commands.ab3"
0003C882 <internal_commands.ab3@1684> INCLUDE "internal_commands.ab3"
0003C883 <internal_commands.ab3@1685> INCLUDE "internal_commands.ab3"
0003C884 <internal_commands.ab3@1686> INCLUDE "internal_commands.ab3"
0003C886 <internal_commands.ab3@1688> INCLUDE "internal_commands.ab3"
0003C88A <internal_commands.ab3@1689> INCLUDE "internal_commands.ab3"
0003C88C <internal_commands.ab3@1690> INCLUDE "internal_commands.ab3"
0003C88E <internal_commands.ab3@1691> INCLUDE "internal_commands.ab3"
0003C892 <internal_commands.ab3@1692> INCLUDE "internal_commands.ab3"
0003C894 <internal_commands.ab3@1693> INCLUDE "internal_commands.ab3"
0003C898 <internal_commands.ab3@1697> INCLUDE "internal_commands.ab3"
0003C89A <internal_commands.ab3@1698> INCLUDE "internal_commands.ab3"
0003C89F <internal_commands.ab3@1699> INCLUDE "internal_commands.ab3"
0003C8A0 <internal_commands.ab3@1700> INCLUDE "internal_commands.ab3"
0003C8A2 <internal_commands.ab3@1703> INCLUDE "internal_commands.ab3"
0003C8A6 <internal_commands.ab3@1704> INCLUDE "internal_commands.ab3"
0003C8A8 <internal_commands.ab3@1705> INCLUDE "internal_commands.ab3"
0003C8AA <internal_commands.ab3@1706> INCLUDE "internal_commands.ab3"
0003C8AE <internal_commands.ab3@1707> INCLUDE "internal_commands.ab3"
0003C8B0 <internal_commands.ab3@1708> INCLUDE "internal_commands.ab3"
0003C8B4 <internal_commands.ab3@1712> INCLUDE "internal_commands.ab3"
0003C8B6 <internal_commands.ab3@1713> INCLUDE "internal_commands.ab3"
0003C8BB <internal_commands.ab3@1714> INCLUDE "internal_commands.ab3"
0003C8BC <internal_commands.ab3@1715> INCLUDE "internal_commands.ab3"
0003C8BE <internal_commands.ab3@1718> INCLUDE "internal_commands.ab3"
0003C8C2 <internal_commands.ab3@1719> INCLUDE "internal_commands.ab3"
0003C8C4 <internal_commands.ab3@1720> INCLUDE "internal_commands.ab3"
0003C8C6 <internal_commands.ab3@1721> INCLUDE "internal_commands.ab3"
0003C8CA <internal_commands.ab3@1722> INCLUDE "internal_commands.ab3"
0003C8CC <internal_commands.ab3@1723> INCLUDE "internal_commands.ab3"
0003C8D0 <internal_commands.ab3@1727> INCLUDE "internal_commands.ab3"
0003C8D2 <internal_commands.ab3@1728> INCLUDE "internal_commands.ab3"
0003C8D6 <internal_commands.ab3@1729> INCLUDE "internal_commands.ab3"
0003C8D7 <internal_commands.ab3@1730> INCLUDE "internal_commands.ab3"
0003C8D8 <internal_commands.ab3@1731> INCLUDE "internal_commands.ab3"
0003C8DA <internal_commands.ab3@1733> INCLUDE "internal_commands.ab3"
0003C8DE <internal_commands.ab3@1734> INCLUDE "internal_commands.ab3"
0003C8E0 <internal_commands.ab3@1735> INCLUDE "internal_commands.ab3"
0003C8E2 <internal_commands.ab3@1736> INCLUDE "internal_commands.ab3"
0003C8E6 <internal_commands.ab3@1737> INCLUDE "internal_commands.ab3"
0003C8E8 <internal_commands.ab3@1738> INCLUDE "internal_commands.ab3"
0003C8EC <internal_commands.ab3@1742> INCLUDE "internal_commands.ab3"
0003C8EE <internal_commands.ab3@1743> INCLUDE "internal_commands.ab3"
0003C8F2 <internal_commands.ab3@1744> INCLUDE "internal_commands.ab3"
0003C8F3 <internal_commands.ab3@1745> INCLUDE "internal_commands.ab3"
0003C8F4 <internal_commands.ab3@1746> INCLUDE "internal_commands.ab3"
0003C8F6 <internal_commands.ab3@1748> INCLUDE "internal_commands.ab3"
0003C8FA <internal_commands.ab3@1749> INCLUDE "internal_commands.ab3"
0003C8FC <internal_commands.ab3@1750> INCLUDE "internal_commands.ab3"
0003C8FE <internal_commands.ab3@1751> INCLUDE "internal_commands.ab3"
0003C902 <internal_commands.ab3@1752> INCLUDE "internal_commands.ab3"
0003C904 <internal_commands.ab3@1753> INCLUDE "internal_commands.ab3"
0003C908 <internal_commands.ab3@1757> INCLUDE "internal_commands.ab3"
0003C90A <internal_commands.ab3@1758> INCLUDE "internal_commands.ab3"
0003C90E <internal_commands.ab3@1759> INCLUDE "internal_commands.ab3"
0003C90F <internal_commands.ab3@1760> INCLUDE "internal_commands.ab3"
0003C910 <internal_commands.ab3@1761> INCLUDE "internal_commands.ab3"
0003C912 <internal_commands.ab3@1763> INCLUDE "internal_commands.ab3"
0003C916 <internal_commands.ab3@1764> INCLUDE "internal_commands.ab3"
0003C918 <internal_commands.ab3@1765> INCLUDE "internal_commands.ab3"
0003C91A <internal_commands.ab3@1766> INCLUDE "internal_commands.ab3"
0003C91E <internal_commands.ab3@1767> INCLUDE "internal_commands.ab3"
0003C920 <internal_commands.ab3@1768> INCLUDE "internal_commands.ab3"
0003C924 <internal_commands.ab3@1772> INCLUDE "internal_commands.ab3"
0003C926 <internal_commands.ab3@1773> INCLUDE "internal_commands.ab3"
0003C92B <internal_commands.ab3@1774> INCLUDE "internal_commands.ab3"
0003C92C <internal_commands.ab3@1775> INCLUDE "internal_commands.ab3"
0003C92E <internal_commands.ab3@1778> INCLUDE "internal_commands.ab3"
0003C932 <internal_commands.ab3@1779> INCLUDE "internal_commands.ab3"
0003C934 <internal_commands.ab3@1780> INCLUDE "internal_commands.ab3"
0003C936 <internal_commands.ab3@1781> INCLUDE "internal_commands.ab3"
0003C93A <internal_commands.ab3@1782> INCLUDE "internal_commands.ab3"
0003C93C <internal_commands.ab3@1783> INCLUDE "internal_commands.ab3"
0003C940 <internal_commands.ab3@1787> INCLUDE "internal_commands.ab3"
0003C942 <internal_commands.ab3@1788> INCLUDE "internal_commands.ab3"
0003C946 <internal_commands.ab3@1789> INCLUDE "internal_commands.ab3"
0003C947 <internal_commands.ab3@1790> INCLUDE "internal_commands.ab3"
0003C948 <internal_commands.ab3@1791> INCLUDE "internal_commands.ab3"
0003C94A <internal_commands.ab3@1793> INCLUDE "internal_commands.ab3"
0003C94E <internal_commands.ab3@1794> INCLUDE "internal_commands.ab3"
0003C950 <internal_commands.ab3@1795> INCLUDE "internal_commands.ab3"
0003C952 <internal_commands.ab3@1796> INCLUDE "internal_commands.ab3"
0003C956 <internal_commands.ab3@1797> INCLUDE "internal_commands.ab3"
0003C958 <internal_commands.ab3@1798> INCLUDE "internal_commands.ab3"
0003C95C <internal_commands.ab3@1802> INCLUDE "internal_commands.ab3"
0003C95E <internal_commands.ab3@1803> INCLUDE "internal_commands.ab3"
0003C962 <internal_commands.ab3@1804> INCLUDE "internal_commands.ab3"
0003C963 <internal_commands.ab3@1805> INCLUDE "internal_commands.ab3"
0003C964 <internal_commands.ab3@1806> INCLUDE "internal_commands.ab3"
0003C966 <internal_commands.ab3@1808> INCLUDE "internal_commands.ab3"
0003C96A <internal_commands.ab3@1809> INCLUDE "internal_commands.ab3"
0003C96C <internal_commands.ab3@1810> INCLUDE "internal_commands.ab3"
0003C96E <internal_commands.ab3@1811> INCLUDE "internal_commands.ab3"
0003C972 <internal_commands.ab3@1812> INCLUDE "internal_commands.ab3"
0003C974 <internal_commands.ab3@1813> INCLUDE "internal_commands.ab3"
0003C978 <internal_commands.ab3@1817> INCLUDE "internal_commands.ab3"
0003C97A <internal_commands.ab3@1818> INCLUDE "internal_commands.ab3"
0003C97E <internal_commands.ab3@1819> INCLUDE "internal_commands.ab3"
0003C97F <internal_commands.ab3@1820> INCLUDE "internal_commands.ab3"
0003C980 <internal_commands.ab3@1821> INCLUDE "internal_commands.ab3"
0003C982 <internal_commands.ab3@1823> INCLUDE "internal_commands.ab3"
0003C986 <internal_commands.ab3@1824> INCLUDE "internal_commands.ab3"
0003C988 <internal_commands.ab3@1825> INCLUDE "internal_commands.ab3"
0003C98A <internal_commands.ab3@1826> INCLUDE "internal_commands.ab3"
0003C98E <internal_commands.ab3@1827> INCLUDE "internal_commands.ab3"
0003C990 <internal_commands.ab3@1828> INCLUDE "internal_commands.ab3"
0003C994 <internal_commands.ab3@1832> INCLUDE "internal_commands.ab3"
0003C996 <internal_commands.ab3@1833> INCLUDE "internal_commands.ab3"
0003C99A <internal_commands.ab3@1834> INCLUDE "internal_commands.ab3"
0003C99B <internal_commands.ab3@1835> INCLUDE "internal_commands.ab3"
0003C99C <internal_commands.ab3@1836> INCLUDE "internal_commands.ab3"
0003C99E <internal_commands.ab3@1838> INCLUDE "internal_commands.ab3"
0003C9A2 <internal_commands.ab3@1839> INCLUDE "internal_commands.ab3"
0003C9A4 <internal_commands.ab3@1840> INCLUDE "internal_commands.ab3"
0003C9A6 <internal_commands.ab3@1841> INCLUDE "internal_commands.ab3"
0003C9AA <internal_commands.ab3@1842> INCLUDE "internal_commands.ab3"
0003C9AC <internal_commands.ab3@1843> INCLUDE "internal_commands.ab3"
0003C9B0 <internal_commands.ab3@1847> INCLUDE "internal_commands.ab3"
0003C9B2 <internal_commands.ab3@1848> INCLUDE "internal_commands.ab3"
0003C9B6 <internal_commands.ab3@1849> INCLUDE "internal_commands.ab3"
0003C9B7 <internal_commands.ab3@1850> INCLUDE "internal_commands.ab3"
0003C9B8 <internal_commands.ab3@1851> INCLUDE "internal_commands.ab3"
0003C9BA <internal_commands.ab3@1853> INCLUDE "internal_commands.ab3"
0003C9BE <internal_commands.ab3@1854> INCLUDE "internal_commands.ab3"
0003C9C0 <internal_commands.ab3@1855> INCLUDE "internal_commands.ab3"
0003C9C2 <internal_commands.ab3@1856> INCLUDE "internal_commands.ab3"
0003C9C6 <internal_commands.ab3@1857> INCLUDE "internal_commands.ab3"
0003C9C8 <internal_commands.ab3@1858> INCLUDE "internal_commands.ab3"
0003C9CC <internal_commands.ab3@1862> INCLUDE "internal_commands.ab3"
0003C9CE <internal_commands.ab3@1863> INCLUDE "internal_commands.ab3"
0003C9D2 <internal_commands.ab3@1864> INCLUDE "internal_commands.ab3"
0003C9D3 <internal_commands.ab3@1865> INCLUDE "internal_commands.ab3"
0003C9D4 <internal_commands.ab3@1866> INCLUDE "internal_commands.ab3"
0003C9D6 <internal_commands.ab3@1868> INCLUDE "internal_commands.ab3"
0003C9DA <internal_commands.ab3@1869> INCLUDE "internal_commands.ab3"
0003C9DC <internal_commands.ab3@1870> INCLUDE "internal_commands.ab3"
0003C9DE <internal_commands.ab3@1871> INCLUDE "internal_commands.ab3"
0003C9E2 <internal_commands.ab3@1872> INCLUDE "internal_commands.ab3"
0003C9E4 <internal_commands.ab3@1873> INCLUDE "internal_commands.ab3"
0003C9E8 <internal_commands.ab3@1877> INCLUDE "internal_commands.ab3"
0003C9EA <internal_commands.ab3@1878> INCLUDE "internal_commands.ab3"
0003C9EE <internal_commands.ab3@1879> INCLUDE "internal_commands.ab3"
0003C9EF <internal_commands.ab3@1880> INCLUDE "internal_commands.ab3"
0003C9F0 <internal_commands.ab3@1881> INCLUDE "internal_commands.ab3"
0003C9F2 <internal_commands.ab3@1883> INCLUDE "internal_commands.ab3"
0003C9F6 <internal_commands.ab3@1884> INCLUDE "internal_commands.ab3"
0003C9F8 <internal_commands.ab3@1885> INCLUDE "internal_commands.ab3"
0003C9FA <internal_commands.ab3@1886> INCLUDE "internal_commands.ab3"
0003C9FE <internal_commands.ab3@1887> INCLUDE "internal_commands.ab3"
0003CA00 <internal_commands.ab3@1888> INCLUDE "internal_commands.ab3"
0003CA04 <internal_commands.ab3@1892> INCLUDE "internal_commands.ab3"
0003CA06 <internal_commands.ab3@1893> INCLUDE "internal_commands.ab3"
0003CA0A <internal_commands.ab3@1894> INCLUDE "internal_commands.ab3"
0003CA0B <internal_commands.ab3@1895> INCLUDE "internal_commands.ab3"
0003CA0C <internal_commands.ab3@1896> INCLUDE "internal_commands.ab3"
0003CA0E <internal_commands.ab3@1898> INCLUDE "internal_commands.ab3"
0003CA12 <internal_commands.ab3@1899> INCLUDE "internal_commands.ab3"
0003CA14 <internal_commands.ab3@1900> INCLUDE "internal_commands.ab3"
0003CA16 <internal_commands.ab3@1901> INCLUDE "internal_commands.ab3"
0003CA1A <internal_commands.ab3@1902> INCLUDE "internal_commands.ab3"
0003CA1C <internal_commands.ab3@1903> INCLUDE "internal_commands.ab3"
0003CA20 <internal_commands.ab3@1907> INCLUDE "internal_commands.ab3"
0003CA22 <internal_commands.ab3@1908> INCLUDE "internal_commands.ab3"
0003CA26 <internal_commands.ab3@1909> INCLUDE "internal_commands.ab3"
0003CA27 <internal_commands.ab3@1910> INCLUDE "internal_commands.ab3"
0003CA28 <internal_commands.ab3@1911> INCLUDE "internal_commands.ab3"
0003CA2A <internal_commands.ab3@1913> INCLUDE "internal_commands.ab3"
0003CA2E <internal_commands.ab3@1914> INCLUDE "internal_commands.ab3"
0003CA30 <internal_commands.ab3@1915> INCLUDE "internal_commands.ab3"
0003CA32 <internal_commands.ab3@1916> INCLUDE "internal_commands.ab3"
0003CA36 <internal_commands.ab3@1917> INCLUDE "internal_commands.ab3"
0003CA38 <internal_commands.ab3@1918> INCLUDE "internal_commands.ab3"
0003CA3C <internal_commands.ab3@1922> INCLUDE "internal_commands.ab3"
0003CA3E <internal_commands.ab3@1923> INCLUDE "internal_commands.ab3"
0003CA42 <internal_commands.ab3@1924> INCLUDE "internal_commands.ab3"
0003CA43 <internal_commands.ab3@1925> INCLUDE "internal_commands.ab3"
0003CA44 <internal_commands.ab3@1926> INCLUDE "internal_commands.ab3"
0003CA46 <internal_commands.ab3@1928> INCLUDE "internal_commands.ab3"
0003CA4A <internal_commands.ab3@1929> INCLUDE "internal_commands.ab3"
0003CA4C <internal_commands.ab3@1930> INCLUDE "internal_commands.ab3"
0003CA4E <internal_commands.ab3@1931> INCLUDE "internal_commands.ab3"
0003CA52 <internal_commands.ab3@1932> INCLUDE "internal_commands.ab3"
0003CA54 <internal_commands.ab3@1933> INCLUDE "internal_commands.ab3"
0003CA58 <internal_commands.ab3@1937> INCLUDE "internal_commands.ab3"
0003CA5A <internal_commands.ab3@1938> INCLUDE "internal_commands.ab3"
0003CA5E <internal_commands.ab3@1939> INCLUDE "internal_commands.ab3"
0003CA5F <internal_commands.ab3@1940> INCLUDE "internal_commands.ab3"
0003CA60 <internal_commands.ab3@1941> INCLUDE "internal_commands.ab3"
0003CA62 <internal_commands.ab3@1943> INCLUDE "internal_commands.ab3"
0003CA66 <internal_commands.ab3@1944> INCLUDE "internal_commands.ab3"
0003CA68 <internal_commands.ab3@1945> INCLUDE "internal_commands.ab3"
0003CA6A <internal_commands.ab3@1946> INCLUDE "internal_commands.ab3"
0003CA6E <internal_commands.ab3@1947> INCLUDE "internal_commands.ab3"
0003CA70 <internal_commands.ab3@1948> INCLUDE "internal_commands.ab3"
0003CA74 <internal_commands.ab3@1952> INCLUDE "internal_commands.ab3"
0003CA76 <internal_commands.ab3@1953> INCLUDE "internal_commands.ab3"
0003CA7A <internal_commands.ab3@1954> INCLUDE "internal_commands.ab3"
0003CA7B <internal_commands.ab3@1955> INCLUDE "internal_commands.ab3"
0003CA7C <internal_commands.ab3@1956> INCLUDE "internal_commands.ab3"
0003CA7E <internal_commands.ab3@1958> INCLUDE "internal_commands.ab3"
0003CA82 <internal_commands.ab3@1959> INCLUDE "internal_commands.ab3"
0003CA84 <internal_commands.ab3@1960> INCLUDE "internal_commands.ab3"
0003CA86 <internal_commands.ab3@1961> INCLUDE "internal_commands.ab3"
0003CA8A <internal_commands.ab3@1962> INCLUDE "internal_commands.ab3"
0003CA8C <internal_commands.ab3@1963> INCLUDE "internal_commands.ab3"
0003CA90 <internal_commands.ab3@1967> INCLUDE "internal_commands.ab3"
0003CA92 <internal_commands.ab3@1968> INCLUDE "internal_commands.ab3"
0003CA96 <internal_commands.ab3@1969> INCLUDE "internal_commands.ab3"
0003CA97 <internal_commands.ab3@1970> INCLUDE "internal_commands.ab3"
0003CA98 <internal_commands.ab3@1971> INCLUDE "internal_commands.ab3"
0003CA9A <internal_commands.ab3@1973> INCLUDE "internal_commands.ab3"
0003CA9E <internal_commands.ab3@1974> INCLUDE "internal_commands.ab3"
0003CAA0 <internal_commands.ab3@1975> INCLUDE "internal_commands.ab3"
0003CAA2 <internal_commands.ab3@1976> INCLUDE "internal_commands.ab3"
0003CAA6 <internal_commands.ab3@1977> INCLUDE "internal_commands.ab3"
0003CAA8 <internal_commands.ab3@1978> INCLUDE "internal_commands.ab3"
0003CAAC <internal_commands.ab3@1982> INCLUDE "internal_commands.ab3"
0003CAAE <internal_commands.ab3@1983> INCLUDE "internal_commands.ab3"
0003CAB2 <internal_commands.ab3@1984> INCLUDE "internal_commands.ab3"
0003CAB3 <internal_commands.ab3@1985> INCLUDE "internal_commands.ab3"
0003CAB4 <internal_commands.ab3@1986> INCLUDE "internal_commands.ab3"
0003CAB6 <internal_commands.ab3@1988> INCLUDE "internal_commands.ab3"
0003CABA <internal_commands.ab3@1989> INCLUDE "internal_commands.ab3"
0003CABC <internal_commands.ab3@1990> INCLUDE "internal_commands.ab3"
0003CABE <internal_commands.ab3@1991> INCLUDE "internal_commands.ab3"
0003CAC2 <internal_commands.ab3@1992> INCLUDE "internal_commands.ab3"
0003CAC4 <internal_commands.ab3@1993> INCLUDE "internal_commands.ab3"
0003CAC8 <internal_commands.ab3@1997> INCLUDE "internal_commands.ab3"
0003CACA <internal_commands.ab3@1998> INCLUDE "internal_commands.ab3"
0003CACD <internal_commands.ab3@1999> INCLUDE "internal_commands.ab3"
0003CACE <internal_commands.ab3@2000> INCLUDE "internal_commands.ab3"
0003CAD0 <internal_commands.ab3@2003> INCLUDE "internal_commands.ab3"
0003CAD4 <internal_commands.ab3@2004> INCLUDE "internal_commands.ab3"
0003CAD6 <internal_commands.ab3@2005> INCLUDE "internal_commands.ab3"
0003CAD8 <internal_commands.ab3@2006> INCLUDE "internal_commands.ab3"
0003CADC <internal_commands.ab3@2007> INCLUDE "internal_commands.ab3"
0003CADE <internal_commands.ab3@2008> INCLUDE "internal_commands.ab3"
0003CAE2 <internal_commands.ab3@2012> INCLUDE "internal_commands.ab3"
0003CAE4 <internal_commands.ab3@2013> INCLUDE "internal_commands.ab3"
0003CAE7 <internal_commands.ab3@2014> INCLUDE "internal_commands.ab3"
0003CAE8 <internal_commands.ab3@2015> INCLUDE "internal_commands.ab3"
0003CAEA <internal_commands.ab3@2018> INCLUDE "internal_commands.ab3"
0003CAEE <internal_commands.ab3@2019> INCLUDE "internal_commands.ab3"
0003CAF0 <internal_commands.ab3@2020> INCLUDE "internal_commands.ab3"
0003CAF2 <internal_commands.ab3@2021> INCLUDE "internal_commands.ab3"
0003CAF6 <internal_commands.ab3@2022> INCLUDE "internal_commands.ab3"
0003CAF8 <internal_commands.ab3@2023> INCLUDE "internal_commands.ab3"
0003CAFC <internal_commands.ab3@2027> INCLUDE "internal_commands.ab3"
0003CAFE <internal_commands.ab3@2028> INCLUDE "internal_commands.ab3"
0003CB03 <internal_commands.ab3@2029> INCLUDE "internal_commands.ab3"
0003CB04 <internal_commands.ab3@2030> INCLUDE "internal_commands.ab3"
0003CB06 <internal_commands.ab3@2033> INCLUDE "internal_commands.ab3"
0003CB0A <internal_commands.ab3@2034> INCLUDE "internal_commands.ab3"
0003CB0C <internal_commands.ab3@2035> INCLUDE "internal_commands.ab3"
0003CB0E <internal_commands.ab3@2036> INCLUDE "internal_commands.ab3"
0003CB12 <internal_commands.ab3@2037> INCLUDE "internal_commands.ab3"
0003CB14 <internal_commands.ab3@2038> INCLUDE "internal_commands.ab3"
0003CB18 <internal_commands.ab3@2042> INCLUDE "internal_commands.ab3"
0003CB1A <internal_commands.ab3@2043> INCLUDE "internal_commands.ab3"
0003CB1E <internal_commands.ab3@2044> INCLUDE "internal_commands.ab3"
0003CB1F <internal_commands.ab3@2045> INCLUDE "internal_commands.ab3"
0003CB20 <internal_commands.ab3@2046> INCLUDE "internal_commands.ab3"
0003CB22 <internal_commands.ab3@2048> INCLUDE "internal_commands.ab3"
0003CB26 <internal_commands.ab3@2049> INCLUDE "internal_commands.ab3"
0003CB28 <internal_commands.ab3@2050> INCLUDE "internal_commands.ab3"
0003CB2A <internal_commands.ab3@2051> INCLUDE "internal_commands.ab3"
0003CB2E <internal_commands.ab3@2052> INCLUDE "internal_commands.ab3"
0003CB30 <internal_commands.ab3@2053> INCLUDE "internal_commands.ab3"
0003CB34 <internal_commands.ab3@2057> INCLUDE "internal_commands.ab3"
0003CB36 <internal_commands.ab3@2058> INCLUDE "internal_commands.ab3"
0003CB3B <internal_commands.ab3@2059> INCLUDE "internal_commands.ab3"
0003CB3C <internal_commands.ab3@2060> INCLUDE "internal_commands.ab3"
0003CB3E <internal_commands.ab3@2063> INCLUDE "internal_commands.ab3"
0003CB42 <internal_commands.ab3@2064> INCLUDE "internal_commands.ab3"
0003CB44 <internal_commands.ab3@2065> INCLUDE "internal_commands.ab3"
0003CB46 <internal_commands.ab3@2066> INCLUDE "internal_commands.ab3"
0003CB4A <internal_commands.ab3@2067> INCLUDE "internal_commands.ab3"
0003CB4C <internal_commands.ab3@2068> INCLUDE "internal_commands.ab3"
0003CB50 <internal_commands.ab3@2072> INCLUDE "internal_commands.ab3"
0003CB52 <internal_commands.ab3@2073> INCLUDE "internal_commands.ab3"
0003CB57 <internal_commands.ab3@2074> INCLUDE "internal_commands.ab3"
0003CB58 <internal_commands.ab3@2075> INCLUDE "internal_commands.ab3"
0003CB5A <internal_commands.ab3@2078> INCLUDE "internal_commands.ab3"
0003CB5E <internal_commands.ab3@2079> INCLUDE "internal_commands.ab3"
0003CB60 <internal_commands.ab3@2080> INCLUDE "internal_commands.ab3"
0003CB62 <internal_commands.ab3@2081> INCLUDE "internal_commands.ab3"
0003CB66 <internal_commands.ab3@2082> INCLUDE "internal_commands.ab3"
0003CB68 <internal_commands.ab3@2083> INCLUDE "internal_commands.ab3"
0003CB6C <internal_commands.ab3@2087> INCLUDE "internal_commands.ab3"
0003CB6E <internal_commands.ab3@2088> INCLUDE "internal_commands.ab3"
0003CB73 <internal_commands.ab3@2089> INCLUDE "internal_commands.ab3"
0003CB74 <internal_commands.ab3@2090> INCLUDE "internal_commands.ab3"
0003CB76 <internal_commands.ab3@2093> INCLUDE "internal_commands.ab3"
0003CB7A <internal_commands.ab3@2094> INCLUDE "internal_commands.ab3"
0003CB7C <internal_commands.ab3@2095> INCLUDE "internal_commands.ab3"
0003CB7E <internal_commands.ab3@2096> INCLUDE "internal_commands.ab3"
0003CB82 <internal_commands.ab3@2097> INCLUDE "internal_commands.ab3"
0003CB84 <internal_commands.ab3@2098> INCLUDE "internal_commands.ab3"
0003CB88 <internal_commands.ab3@2102> INCLUDE "internal_commands.ab3"
0003CB8A <internal_commands.ab3@2103> INCLUDE "internal_commands.ab3"
0003CB8F <internal_commands.ab3@2104> INCLUDE "internal_commands.ab3"
0003CB90 <internal_commands.ab3@2105> INCLUDE "internal_commands.ab3"
0003CB92 <internal_commands.ab3@2108> INCLUDE "internal_commands.ab3"
0003CB96 <internal_commands.ab3@2109> INCLUDE "internal_commands.ab3"
0003CB98 <internal_commands.ab3@2110> INCLUDE "internal_commands.ab3"
0003CB9A <internal_commands.ab3@2111> INCLUDE "internal_commands.ab3"
0003CB9E <internal_commands.ab3@2112> INCLUDE "internal_commands.ab3"
0003CBA0 <internal_commands.ab3@2113> INCLUDE "internal_commands.ab3"
0003CBA4 <internal_commands.ab3@2117> INCLUDE "internal_commands.ab3"
0003CBA6 <internal_commands.ab3@2118> INCLUDE "internal_commands.ab3"
0003CBAB <internal_commands.ab3@2119> INCLUDE "internal_commands.ab3"
0003CBAC <internal_commands.ab3@2120> INCLUDE "internal_commands.ab3"
0003CBAE <internal_commands.ab3@2123> INCLUDE "internal_commands.ab3"
0003CBB2 <internal_commands.ab3@2124> INCLUDE "internal_commands.ab3"
0003CBB4 <internal_commands.ab3@2125> INCLUDE "internal_commands.ab3"
0003CBB6 <internal_commands.ab3@2126> INCLUDE "internal_commands.ab3"
0003CBBA <internal_commands.ab3@2127> INCLUDE "internal_commands.ab3"
0003CBBC <internal_commands.ab3@2128> INCLUDE "internal_commands.ab3"
0003CBC0 <internal_commands.ab3@2132> INCLUDE "internal_commands.ab3"
0003CBC2 <internal_commands.ab3@2133> INCLUDE "internal_commands.ab3"
0003CBC6 <internal_commands.ab3@2134> INCLUDE "internal_commands.ab3"
0003CBC7 <internal_commands.ab3@2135> INCLUDE "internal_commands.ab3"
0003CBC8 <internal_commands.ab3@2136> INCLUDE "internal_commands.ab3"
0003CBCA <internal_commands.ab3@2138> INCLUDE "internal_commands.ab3"
0003CBCE <internal_commands.ab3@2139> INCLUDE "internal_commands.ab3"
0003CBD0 <internal_commands.ab3@2140> INCLUDE "internal_commands.ab3"
0003CBD2 <internal_commands.ab3@2141> INCLUDE "internal_commands.ab3"
0003CBD6 <internal_commands.ab3@2142> INCLUDE "internal_commands.ab3"
0003CBD8 <internal_commands.ab3@2143> INCLUDE "internal_commands.ab3"
0003CBDC <internal_commands.ab3@2147> INCLUDE "internal_commands.ab3"
0003CBDE <internal_commands.ab3@2148> INCLUDE "internal_commands.ab3"
0003CBE3 <internal_commands.ab3@2149> INCLUDE "internal_commands.ab3"
0003CBE4 <internal_commands.ab3@2150> INCLUDE "internal_commands.ab3"
0003CBE6 <internal_commands.ab3@2153> INCLUDE "internal_commands.ab3"
0003CBEA <internal_commands.ab3@2154> INCLUDE "internal_commands.ab3"
0003CBEC <internal_commands.ab3@2155> INCLUDE "internal_commands.ab3"
0003CBEE <internal_commands.ab3@2156> INCLUDE "internal_commands.ab3"
0003CBF2 <internal_commands.ab3@2157> INCLUDE "internal_commands.ab3"
0003CBF4 <internal_commands.ab3@2158> INCLUDE "internal_commands.ab3"
0003CBF8 <internal_commands.ab3@2162> INCLUDE "internal_commands.ab3"
0003CBFA <internal_commands.ab3@2163> INCLUDE "internal_commands.ab3"
0003CC00 <internal_commands.ab3@2164> INCLUDE "internal_commands.ab3"
0003CC01 <internal_commands.ab3@2165> INCLUDE "internal_commands.ab3"
0003CC02 <internal_commands.ab3@2166> INCLUDE "internal_commands.ab3"
0003CC04 <internal_commands.ab3@2168> INCLUDE "internal_commands.ab3"
0003CC08 <internal_commands.ab3@2169> INCLUDE "internal_commands.ab3"
0003CC0A <internal_commands.ab3@2170> INCLUDE "internal_commands.ab3"
0003CC0C <internal_commands.ab3@2171> INCLUDE "internal_commands.ab3"
0003CC10 <internal_commands.ab3@2172> INCLUDE "internal_commands.ab3"
0003CC12 <internal_commands.ab3@2173> INCLUDE "internal_commands.ab3"
0003CC16 <internal_commands.ab3@2177> INCLUDE "internal_commands.ab3"
0003CC18 <internal_commands.ab3@2178> INCLUDE "internal_commands.ab3"
0003CC1C <internal_commands.ab3@2179> INCLUDE "internal_commands.ab3"
0003CC1D <internal_commands.ab3@2180> INCLUDE "internal_commands.ab3"
0003CC1E <internal_commands.ab3@2181> INCLUDE "internal_commands.ab3"
0003CC20 <internal_commands.ab3@2183> INCLUDE "internal_commands.ab3"
0003CC24 <internal_commands.ab3@2184> INCLUDE "internal_commands.ab3"
0003CC26 <internal_commands.ab3@2185> INCLUDE "internal_commands.ab3"
0003CC28 <internal_commands.ab3@2186> INCLUDE "internal_commands.ab3"
0003CC2C <internal_commands.ab3@2187> INCLUDE "internal_commands.ab3"
0003CC2E <internal_commands.ab3@2188> INCLUDE "internal_commands.ab3"
0003CC32 <internal_commands.ab3@2192> INCLUDE "internal_commands.ab3"
0003CC34 <internal_commands.ab3@2193> INCLUDE "internal_commands.ab3"
0003CC39 <internal_commands.ab3@2194> INCLUDE "internal_commands.ab3"
0003CC3A <internal_commands.ab3@2195> INCLUDE "internal_commands.ab3"
0003CC3C <internal_commands.ab3@2198> INCLUDE "internal_commands.ab3"
0003CC40 <internal_commands.ab3@2199> INCLUDE "internal_commands.ab3"
0003CC42 <internal_commands.ab3@2200> INCLUDE "internal_commands.ab3"
0003CC44 <internal_commands.ab3@2201> INCLUDE "internal_commands.ab3"
0003CC48 <internal_commands.ab3@2202> INCLUDE "internal_commands.ab3"
0003CC4A <internal_commands.ab3@2203> INCLUDE "internal_commands.ab3"
0003CC4E <internal_commands.ab3@2208> INCLUDE "internal_commands.ab3"
0003CC50 <internal_commands.ab3@2209> INCLUDE "internal_commands.ab3"
0003CC57 <internal_commands.ab3@2210> INCLUDE "internal_commands.ab3"
0003CC58 <internal_commands.ab3@2211> INCLUDE "internal_commands.ab3"
0003CC5A <internal_commands.ab3@2230> INCLUDE "internal_commands.ab3"
0003CC5C <internal_commands.ab3@2231> INCLUDE "internal_commands.ab3"
0003CC5E <internal_commands.ab3@2235> INCLUDE "internal_commands.ab3"
0003CC60 <internal_commands.ab3@2236> INCLUDE "internal_commands.ab3"
0003CC62 <internal_commands.ab3@2240> INCLUDE "internal_commands.ab3"
0003CC64 <internal_commands.ab3@2241> INCLUDE "internal_commands.ab3"
0003CC66 <internal_commands.ab3@2245> INCLUDE "internal_commands.ab3"
0003CC68 <internal_commands.ab3@2246> INCLUDE "internal_commands.ab3"
0003CC6A <internal_commands.ab3@2251> INCLUDE "internal_commands.ab3"
0003CC6E <internal_commands.ab3@2252> INCLUDE "internal_commands.ab3"
0003CC70 <internal_commands.ab3@2253> INCLUDE "internal_commands.ab3"
0003CC72 <internal_commands.ab3@2254> INCLUDE "internal_commands.ab3"
0003CC74 <internal_commands.ab3@2255> INCLUDE "internal_commands.ab3"
0003CC76 <internal_commands.ab3@2256> INCLUDE "internal_commands.ab3"
0003CC7A <internal_commands.ab3@2257> INCLUDE "internal_commands.ab3"
0003CC80 <internal_commands.ab3@2260> INCLUDE "internal_commands.ab3"
0003CC84 <internal_commands.ab3@2261> INCLUDE "internal_commands.ab3"
0003CC86 <internal_commands.ab3@2262> INCLUDE "internal_commands.ab3"
0003CC88 <internal_commands.ab3@2263> INCLUDE "internal_commands.ab3"
0003CC8A <internal_commands.ab3@2264> INCLUDE "internal_commands.ab3"
0003CC8C <internal_commands.ab3@2265> INCLUDE "internal_commands.ab3"
0003CC8E <internal_commands.ab3@2266> INCLUDE "internal_commands.ab3"
0003CC90 <internal_commands.ab3@2273> INCLUDE "internal_commands.ab3"
0003CC94 <internal_commands.ab3@2274> INCLUDE "internal_commands.ab3"
0003CC98 <internal_commands.ab3@2275> INCLUDE "internal_commands.ab3"
0003CC9C <internal_commands.ab3@2276> INCLUDE "internal_commands.ab3"
0003CCA0 <internal_commands.ab3@2277> INCLUDE "internal_commands.ab3"
0003CCA4 <internal_commands.ab3@2278> INCLUDE "internal_commands.ab3"
0003CCA6 <internal_commands.ab3@2281> INCLUDE "internal_commands.ab3"
0003CCA8 <internal_commands.ab3@2282> INCLUDE "internal_commands.ab3"
0003CCAC <internal_commands.ab3@2283> INCLUDE "internal_commands.ab3"
0003CCB0 <internal_commands.ab3@2284> INCLUDE "internal_commands.ab3"
0003CCB4 <internal_commands.ab3@2285> INCLUDE "internal_commands.ab3"
0003CCB8 <internal_commands.ab3@2286> INCLUDE "internal_commands.ab3"
0003CCBA <internal_commands.ab3@2289> INCLUDE "internal_commands.ab3"
0003CCBC <internal_commands.ab3@2290> INCLUDE "internal_commands.ab3"
0003CCC0 <internal_commands.ab3@2291> INCLUDE "internal_commands.ab3"
0003CCC4 <internal_commands.ab3@2292> INCLUDE "internal_commands.ab3"
0003CCC8 <internal_commands.ab3@2293> INCLUDE "internal_commands.ab3"
0003CCCC <internal_commands.ab3@2294> INCLUDE "internal_commands.ab3"
0003CCCE <internal_commands.ab3@2295> INCLUDE "internal_commands.ab3"
0003CCD0 <internal_commands.ab3@2298> INCLUDE "internal_commands.ab3"
0003CCD2 <internal_commands.ab3@2299> INCLUDE "internal_commands.ab3"
0003CCD6 <internal_commands.ab3@2300> INCLUDE "internal_commands.ab3"
0003CCD8 <internal_commands.ab3@2302> INCLUDE "internal_commands.ab3"
0003CCDC <internal_commands.ab3@2303> INCLUDE "internal_commands.ab3"
0003CCDE <internal_commands.ab3@2307> INCLUDE "internal_commands.ab3"
0003CCE2 <internal_commands.ab3@2308> INCLUDE "internal_commands.ab3"
0003CCE4 <internal_commands.ab3@2309> INCLUDE "internal_commands.ab3"
0003CCE8 <internal_commands.ab3@2310> INCLUDE "internal_commands.ab3"
0003CCEC <internal_commands.ab3@2311> INCLUDE "internal_commands.ab3"
0003CCF0 <internal_commands.ab3@2312> INCLUDE "internal_commands.ab3"
0003CCF4 <internal_commands.ab3@2316> INCLUDE "internal_commands.ab3"
0003CCF8 <internal_commands.ab3@2317> INCLUDE "internal_commands.ab3"
0003CCFC <internal_commands.ab3@2319> INCLUDE "internal_commands.ab3"
0003CD00 <internal_commands.ab3@2320> INCLUDE "internal_commands.ab3"
0003CD04 <internal_commands.ab3@2321> INCLUDE "internal_commands.ab3"
0003CD08 <internal_commands.ab3@2322> INCLUDE "internal_commands.ab3"
0003CD0C <internal_commands.ab3@2323> INCLUDE "internal_commands.ab3"
0003CD10 <internal_commands.ab3@2324> INCLUDE "internal_commands.ab3"
0003CD14 <internal_commands.ab3@2325> INCLUDE "internal_commands.ab3"
0003CD18 <internal_commands.ab3@2326> INCLUDE "internal_commands.ab3"
0003CD1C <internal_commands.ab3@2328> INCLUDE "internal_commands.ab3"
0003CD20 <internal_commands.ab3@2331> INCLUDE "internal_commands.ab3"
0003CD24 <internal_commands.ab3@2332> INCLUDE "internal_commands.ab3"
0003CD28 <internal_commands.ab3@2334> INCLUDE "internal_commands.ab3"
0003CD2C <internal_commands.ab3@2335> INCLUDE "internal_commands.ab3"
0003CD30 <internal_commands.ab3@2336> INCLUDE "internal_commands.ab3"
0003CD34 <internal_commands.ab3@2337> INCLUDE "internal_commands.ab3"
0003CD38 <internal_commands.ab3@2338> INCLUDE "internal_commands.ab3"
0003CD3C <internal_commands.ab3@2339> INCLUDE "internal_commands.ab3"
0003CD40 <internal_commands.ab3@2340> INCLUDE "internal_commands.ab3"
0003CD44 <internal_commands.ab3@2341> INCLUDE "internal_commands.ab3"
0003CD48 <internal_commands.ab3@2343> INCLUDE "internal_commands.ab3"
0003CD4C <internal_commands.ab3@2346> INCLUDE "internal_commands.ab3"
0003CD4E <internal_commands.ab3@2347> INCLUDE "internal_commands.ab3"
0003CD52 <internal_commands.ab3@2348> INCLUDE "internal_commands.ab3"
0003CD56 <internal_commands.ab3@2349> INCLUDE "internal_commands.ab3"
0003CD5A <internal_commands.ab3@2350> INCLUDE "internal_commands.ab3"
0003CD5E <internal_commands.ab3@2351> INCLUDE "internal_commands.ab3"
0003CD62 <internal_commands.ab3@2352> INCLUDE "internal_commands.ab3"
0003CD66 <internal_commands.ab3@2353> INCLUDE "internal_commands.ab3"
0003CD6A <internal_commands.ab3@2356> INCLUDE "internal_commands.ab3"
0003CD6E <internal_commands.ab3@2357> INCLUDE "internal_commands.ab3"
0003CD72 <internal_commands.ab3@2358> INCLUDE "internal_commands.ab3"
0003CD74 <internal_commands.ab3@2359> INCLUDE "internal_commands.ab3"
0003CD76 <internal_commands.ab3@2362> INCLUDE "internal_commands.ab3"
0003CD78 <internal_commands.ab3@2363> INCLUDE "internal_commands.ab3"
0003CD7A <internal_commands.ab3@2364> INCLUDE "internal_commands.ab3"
0003CD7C <internal_commands.ab3@2365> INCLUDE "internal_commands.ab3"
0003CD80 <internal_commands.ab3@2366> INCLUDE "internal_commands.ab3"
0003CD84 <internal_commands.ab3@2369> INCLUDE "internal_commands.ab3"
0003CD88 <internal_commands.ab3@2370> INCLUDE "internal_commands.ab3"
0003CD8C <internal_commands.ab3@2371> INCLUDE "internal_commands.ab3"
0003CD8E <internal_commands.ab3@2372> INCLUDE "internal_commands.ab3"
0003CD92 <internal_commands.ab3@2373> INCLUDE "internal_commands.ab3"
0003CD96 <internal_commands.ab3@2376> INCLUDE "internal_commands.ab3"
0003CD9A <internal_commands.ab3@2379> INCLUDE "internal_commands.ab3"
0003CD9E <internal_commands.ab3@2380> INCLUDE "internal_commands.ab3"
0003CDA0 <internal_commands.ab3@2381> INCLUDE "internal_commands.ab3"
0003CDA2 <internal_commands.ab3@2382> INCLUDE "internal_commands.ab3"
0003CDA6 <internal_commands.ab3@2383> INCLUDE "internal_commands.ab3"
0003CDAA <internal_commands.ab3@2386> INCLUDE "internal_commands.ab3"
0003CDAE <internal_commands.ab3@2387> INCLUDE "internal_commands.ab3"
0003CDB2 <internal_commands.ab3@2390> INCLUDE "internal_commands.ab3"
0003CDB6 <internal_commands.ab3@2393> INCLUDE "internal_commands.ab3"
0003CDBA <internal_commands.ab3@2394> INCLUDE "internal_commands.ab3"
0003CDBC <internal_commands.ab3@2395> INCLUDE "internal_commands.ab3"
0003CDBE <internal_commands.ab3@2396> INCLUDE "internal_commands.ab3"
0003CDC2 <internal_commands.ab3@2397> INCLUDE "internal_commands.ab3"
0003CDC6 <internal_commands.ab3@2400> INCLUDE "internal_commands.ab3"
0003CDCA <internal_commands.ab3@2401> INCLUDE "internal_commands.ab3"
0003CDCC <internal_commands.ab3@2405> INCLUDE "internal_commands.ab3"
0003CDD0 <internal_commands.ab3@2406> INCLUDE "internal_commands.ab3"
0003CDD4 <internal_commands.ab3@2407> INCLUDE "internal_commands.ab3"
0003CDD6 <internal_commands.ab3@2408> INCLUDE "internal_commands.ab3"
0003CDDA <internal_commands.ab3@2409> INCLUDE "internal_commands.ab3"
0003CDDE <internal_commands.ab3@2410> INCLUDE "internal_commands.ab3"
0003CDE0 <internal_commands.ab3@2413> INCLUDE "internal_commands.ab3"
0003CDE4 <internal_commands.ab3@2414> INCLUDE "internal_commands.ab3"
0003CDE8 <internal_commands.ab3@2415> INCLUDE "internal_commands.ab3"
0003CDEC <internal_commands.ab3@2416> INCLUDE "internal_commands.ab3"
0003CDF0 <internal_commands.ab3@2419> INCLUDE "internal_commands.ab3"
0003CDF4 <internal_commands.ab3@2420> INCLUDE "internal_commands.ab3"
0003CDF6 <internal_commands.ab3@2424> INCLUDE "internal_commands.ab3"
0003CDFA <internal_commands.ab3@2425> INCLUDE "internal_commands.ab3"
0003CDFC <internal_commands.ab3@2426> INCLUDE "internal_commands.ab3"
0003CDFE <internal_commands.ab3@2427> INCLUDE "internal_commands.ab3"
0003CE00 <internal_commands.ab3@2428> INCLUDE "internal_commands.ab3"
0003CE04 <internal_commands.ab3@2429> INCLUDE "internal_commands.ab3"
0003CE08 <internal_commands.ab3@2432> INCLUDE "internal_commands.ab3"
0003CE0C <internal_commands.ab3@2433> INCLUDE "internal_commands.ab3"
0003CE10 <internal_commands.ab3@2434> INCLUDE "internal_commands.ab3"
0003CE14 <internal_commands.ab3@2435> INCLUDE "internal_commands.ab3"
0003CE18 <internal_commands.ab3@2439> INCLUDE "internal_commands.ab3"
0003CE1C <internal_commands.ab3@2440> INCLUDE "internal_commands.ab3"
0003CE20 <internal_commands.ab3@2444> INCLUDE "internal_commands.ab3"
0003CE24 <internal_commands.ab3@2445> INCLUDE "internal_commands.ab3"
0003CE28 <internal_commands.ab3@2449> INCLUDE "internal_commands.ab3"
0003CE2C <internal_commands.ab3@2450> INCLUDE "internal_commands.ab3"
0003CE30 <internal_commands.ab3@2454> INCLUDE "internal_commands.ab3"
0003CE32 <internal_commands.ab3@2456> INCLUDE "internal_commands.ab3"
0003CE36 <internal_commands.ab3@2457> INCLUDE "internal_commands.ab3"
0003CE3A <internal_commands.ab3@2458> INCLUDE "internal_commands.ab3"
0003CE3C <internal_commands.ab3@2459> INCLUDE "internal_commands.ab3"
0003CE3E <internal_commands.ab3@2460> INCLUDE "internal_commands.ab3"
0003CE40 <internal_commands.ab3@2461> INCLUDE "internal_commands.ab3"
0003CE44 <internal_commands.ab3@2462> INCLUDE "internal_commands.ab3"
0003CE48 <internal_commands.ab3@2463> INCLUDE "internal_commands.ab3"
0003CE4A <internal_commands.ab3@2464> INCLUDE "internal_commands.ab3"
0003CE4E <internal_commands.ab3@2465> INCLUDE "internal_commands.ab3"
0003CE50 <internal_commands.ab3@2466> INCLUDE "internal_commands.ab3"
0003CE52 <internal_commands.ab3@2467> INCLUDE "internal_commands.ab3"
0003CE54 <internal_commands.ab3@2468> INCLUDE "internal_commands.ab3"
0003CE58 <internal_commands.ab3@2469> INCLUDE "internal_commands.ab3"
0003CE5C <internal_commands.ab3@2470> INCLUDE "internal_commands.ab3"
0003CE5E <internal_commands.ab3@2473> INCLUDE "internal_commands.ab3"
0003CE60 <internal_commands.ab3@2474> INCLUDE "internal_commands.ab3"
0003CE64 <internal_commands.ab3@2475> INCLUDE "internal_commands.ab3"
0003CE68 <internal_commands.ab3@2476> INCLUDE "internal_commands.ab3"
0003CE6C <internal_commands.ab3@2477> INCLUDE "internal_commands.ab3"
0003CE70 <internal_commands.ab3@2478> INCLUDE "internal_commands.ab3"
0003CE72 <internal_commands.ab3@2479> INCLUDE "internal_commands.ab3"
0003CE76 <internal_commands.ab3@2480> INCLUDE "internal_commands.ab3"
0003CE7A <internal_commands.ab3@2481> INCLUDE "internal_commands.ab3"
0003CE7E <internal_commands.ab3@2482> INCLUDE "internal_commands.ab3"
0003CE80 <internal_commands.ab3@2483> INCLUDE "internal_commands.ab3"
0003CE82 <internal_commands.ab3@2484> INCLUDE "internal_commands.ab3"
0003CE84 <internal_commands.ab3@2485> INCLUDE "internal_commands.ab3"
0003CE86 <internal_commands.ab3@2488> INCLUDE "internal_commands.ab3"
0003CE88 <internal_commands.ab3@2489> INCLUDE "internal_commands.ab3"
0003CE8A <internal_commands.ab3@2490> INCLUDE "internal_commands.ab3"
0003CE8E <internal_commands.ab3@2491> INCLUDE "internal_commands.ab3"
0003CE92 <internal_commands.ab3@2492> INCLUDE "internal_commands.ab3"
0003CE94 <internal_commands.ab3@2496> INCLUDE "internal_commands.ab3"
0003CE98 <internal_commands.ab3@2497> INCLUDE "internal_commands.ab3"
0003CE9A <internal_commands.ab3@2498> INCLUDE "internal_commands.ab3"
0003CE9E <internal_commands.ab3@2499> INCLUDE "internal_commands.ab3"
0003CEA2 <internal_commands.ab3@2500> INCLUDE "internal_commands.ab3"
0003CEA4 <internal_commands.ab3@2501> INCLUDE "internal_commands.ab3"
0003CEA6 <internal_commands.ab3@2504> INCLUDE "internal_commands.ab3"
0003CEA8 <internal_commands.ab3@2508> INCLUDE "internal_commands.ab3"
0003CEAC <internal_commands.ab3@2509> INCLUDE "internal_commands.ab3"
0003CEAE <internal_commands.ab3@2510> INCLUDE "internal_commands.ab3"
0003CEB2 <internal_commands.ab3@2511> INCLUDE "internal_commands.ab3"
0003CEB6 <internal_commands.ab3@2512> INCLUDE "internal_commands.ab3"
0003CEBA <internal_commands.ab3@2513> INCLUDE "internal_commands.ab3"
0003CEBC <internal_commands.ab3@2516> INCLUDE "internal_commands.ab3"
0003CEC0 <internal_commands.ab3@2520> INCLUDE "internal_commands.ab3"
0003CEC4 <internal_commands.ab3@2521> INCLUDE "internal_commands.ab3"
0003CEC6 <internal_commands.ab3@2522> INCLUDE "internal_commands.ab3"
0003CECA <internal_commands.ab3@2523> INCLUDE "internal_commands.ab3"
0003CECE <internal_commands.ab3@2524> INCLUDE "internal_commands.ab3"
0003CED2 <internal_commands.ab3@2527> INCLUDE "internal_commands.ab3"
0003CED6 <internal_commands.ab3@2528> INCLUDE "internal_commands.ab3"
0003CEDA <internal_commands.ab3@2529> INCLUDE "internal_commands.ab3"
0003CEDE <internal_commands.ab3@2530> INCLUDE "internal_commands.ab3"
0003CEE2 <internal_commands.ab3@2531> INCLUDE "internal_commands.ab3"
0003CEE6 <internal_commands.ab3@2538> INCLUDE "internal_commands.ab3"
0003CEE8 <internal_commands.ab3@2539> INCLUDE "internal_commands.ab3"
0003CEED <internal_commands.ab3@2540> INCLUDE "internal_commands.ab3"
0003CEEE <internal_commands.ab3@2541> INCLUDE "internal_commands.ab3"
0003CEF2 <internal_commands.ab3@2545> INCLUDE "internal_commands.ab3"
0003CEF4 <internal_commands.ab3@2546> INCLUDE "internal_commands.ab3"
0003CEFB <internal_commands.ab3@2547> INCLUDE "internal_commands.ab3"
0003CEFC <internal_commands.ab3@2548> INCLUDE "internal_commands.ab3"
0003CF00 <internal_commands.ab3@2552> INCLUDE "internal_commands.ab3"
0003CF02 <internal_commands.ab3@2553> INCLUDE "internal_commands.ab3"
0003CF09 <internal_commands.ab3@2554> INCLUDE "internal_commands.ab3"
0003CF0A <internal_commands.ab3@2555> INCLUDE "internal_commands.ab3"
0003CF0E <internal_commands.ab3@2559> INCLUDE "internal_commands.ab3"
0003CF10 <internal_commands.ab3@2560> INCLUDE "internal_commands.ab3"
0003CF18 <internal_commands.ab3@2561> INCLUDE "internal_commands.ab3"
0003CF19 <internal_commands.ab3@2562> INCLUDE "internal_commands.ab3"
0003CF1A <internal_commands.ab3@2563> INCLUDE "internal_commands.ab3"
0003CF1E <internal_commands.ab3@2566> INCLUDE "internal_commands.ab3"
0003CF20 <internal_commands.ab3@2567> INCLUDE "internal_commands.ab3"
0003CF25 <internal_commands.ab3@2568> INCLUDE "internal_commands.ab3"
0003CF39 <internal_commands.ab3@2569> INCLUDE "internal_commands.ab3"
0003CF3A <internal_commands.ab3@2570> INCLUDE "internal_commands.ab3"
0003CF3E <internal_commands.ab3@2573> INCLUDE "internal_commands.ab3"
0003CF40 <internal_commands.ab3@2574> INCLUDE "internal_commands.ab3"
0003CF44 <internal_commands.ab3@2575> INCLUDE "internal_commands.ab3"
0003CF45 <internal_commands.ab3@2576> INCLUDE "internal_commands.ab3"
0003CF46 <internal_commands.ab3@2577> INCLUDE "internal_commands.ab3"
0003CF4A <internal_commands.ab3@2580> INCLUDE "internal_commands.ab3"
0003CF4C <internal_commands.ab3@2581> INCLUDE "internal_commands.ab3"
0003CF4F <internal_commands.ab3@2582> INCLUDE "internal_commands.ab3"
0003CF50 <internal_commands.ab3@2583> INCLUDE "internal_commands.ab3"
0003CF54 <internal_commands.ab3@2587> INCLUDE "internal_commands.ab3"
0003CF56 <internal_commands.ab3@2588> INCLUDE "internal_commands.ab3"
0003CF5D <internal_commands.ab3@2589> INCLUDE "internal_commands.ab3"
0003CF5E <internal_commands.ab3@2590> INCLUDE "internal_commands.ab3"
0003CF62 <internal_commands.ab3@2594> INCLUDE "internal_commands.ab3"
0003CF64 <internal_commands.ab3@2595> INCLUDE "internal_commands.ab3"
0003CF6A <internal_commands.ab3@2596> INCLUDE "internal_commands.ab3"
0003CF77 <internal_commands.ab3@2597> INCLUDE "internal_commands.ab3"
0003CF78 <internal_commands.ab3@2598> INCLUDE "internal_commands.ab3"
0003CF7C <internal_commands.ab3@2601> INCLUDE "internal_commands.ab3"
0003CF7E <internal_commands.ab3@2602> INCLUDE "internal_commands.ab3"
0003CF85 <internal_commands.ab3@2603> INCLUDE "internal_commands.ab3"
0003CF9D <internal_commands.ab3@2604> INCLUDE "internal_commands.ab3"
0003CF9E <internal_commands.ab3@2605> INCLUDE "internal_commands.ab3"
0003CFA2 <internal_commands.ab3@2608> INCLUDE "internal_commands.ab3"
0003CFA4 <internal_commands.ab3@2609> INCLUDE "internal_commands.ab3"
0003CFA8 <internal_commands.ab3@2610> INCLUDE "internal_commands.ab3"
0003CFCB <internal_commands.ab3@2611> INCLUDE "internal_commands.ab3"
0003CFCC <internal_commands.ab3@2612> INCLUDE "internal_commands.ab3"
0003CFD0 <internal_commands.ab3@2615> INCLUDE "internal_commands.ab3"
0003CFD2 <internal_commands.ab3@2616> INCLUDE "internal_commands.ab3"
0003CFD9 <internal_commands.ab3@2617> INCLUDE "internal_commands.ab3"
0003CFE4 <internal_commands.ab3@2618> INCLUDE "internal_commands.ab3"
0003CFE8 <internal_commands.ab3@2622> INCLUDE "internal_commands.ab3"
0003CFEA <internal_commands.ab3@2623> INCLUDE "internal_commands.ab3"
0003CFF0 <internal_commands.ab3@2624> INCLUDE "internal_commands.ab3"
0003CFF1 <internal_commands.ab3@2625> INCLUDE "internal_commands.ab3"
0003CFF2 <internal_commands.ab3@2626> INCLUDE "internal_commands.ab3"
0003CFF6 <internal_commands.ab3@2629> INCLUDE "internal_commands.ab3"
0003CFF8 <internal_commands.ab3@2630> INCLUDE "internal_commands.ab3"
0003CFFD <internal_commands.ab3@2631> INCLUDE "internal_commands.ab3"
0003CFFE <internal_commands.ab3@2632> INCLUDE "internal_commands.ab3"
0003D002 <internal_commands.ab3@2636> INCLUDE "internal_commands.ab3"
0003D004 <internal_commands.ab3@2637> INCLUDE "internal_commands.ab3"
0003D00B <internal_commands.ab3@2638> INCLUDE "internal_commands.ab3"
0003D01D <internal_commands.ab3@2639> INCLUDE "internal_commands.ab3"
0003D01E <internal_commands.ab3@2640> INCLUDE "internal_commands.ab3"
0003D022 <internal_commands.ab3@2643> INCLUDE "internal_commands.ab3"
0003D024 <internal_commands.ab3@2644> INCLUDE "internal_commands.ab3"
0003D02E <internal_commands.ab3@2645> INCLUDE "internal_commands.ab3"
0003D02F <internal_commands.ab3@2646> INCLUDE "internal_commands.ab3"
0003D030 <internal_commands.ab3@2647> INCLUDE "internal_commands.ab3"
0003D034 <internal_commands.ab3@2650> INCLUDE "internal_commands.ab3"
0003D036 <internal_commands.ab3@2651> INCLUDE "internal_commands.ab3"
0003D03E <internal_commands.ab3@2652> INCLUDE "internal_commands.ab3"
0003D04B <internal_commands.ab3@2653> INCLUDE "internal_commands.ab3"
0003D04C <internal_commands.ab3@2654> INCLUDE "internal_commands.ab3"
0003D050 <internal_commands.ab3@2657> INCLUDE "internal_commands.ab3"
0003D052 <internal_commands.ab3@2658> INCLUDE "internal_commands.ab3"
0003D055 <internal_commands.ab3@2659> INCLUDE "internal_commands.ab3"
0003D090 <internal_commands.ab3@2660> INCLUDE "internal_commands.ab3"
0003D094 <internal_commands.ab3@2664> INCLUDE "internal_commands.ab3"
0003D096 <internal_commands.ab3@2665> INCLUDE "internal_commands.ab3"
0003D09A <internal_commands.ab3@2666> INCLUDE "internal_commands.ab3"
0003D09B <internal_commands.ab3@2667> INCLUDE "internal_commands.ab3"
0003D09C <internal_commands.ab3@2668> INCLUDE "internal_commands.ab3"
0003D0A0 <internal_commands.ab3@2671> INCLUDE "internal_commands.ab3"
0003D0A2 <internal_commands.ab3@2672> INCLUDE "internal_commands.ab3"
0003D0AA <internal_commands.ab3@2673> INCLUDE "internal_commands.ab3"
0003D0AB <internal_commands.ab3@2674> INCLUDE "internal_commands.ab3"
0003D0AC <internal_commands.ab3@2675> INCLUDE "internal_commands.ab3"
0003D0B0 <internal_commands.ab3@2678> INCLUDE "internal_commands.ab3"
0003D0B2 <internal_commands.ab3@2679> INCLUDE "internal_commands.ab3"
0003D0BA <internal_commands.ab3@2680> INCLUDE "internal_commands.ab3"
0003D0CA <internal_commands.ab3@2681> INCLUDE "internal_commands.ab3"
0003D0CE <internal_commands.ab3@2685> INCLUDE "internal_commands.ab3"
0003D0D0 <internal_commands.ab3@2686> INCLUDE "internal_commands.ab3"
0003D0D9 <internal_commands.ab3@2687> INCLUDE "internal_commands.ab3"
0003D0E1 <internal_commands.ab3@2688> INCLUDE "internal_commands.ab3"
0003D0E2 <internal_commands.ab3@2689> INCLUDE "internal_commands.ab3"
0003D0E6 <internal_commands.ab3@2692> INCLUDE "internal_commands.ab3"
0003D0E8 <internal_commands.ab3@2693> INCLUDE "internal_commands.ab3"
0003D0F0 <internal_commands.ab3@2694> INCLUDE "internal_commands.ab3"
0003D0F9 <internal_commands.ab3@2695> INCLUDE "internal_commands.ab3"
0003D0FA <internal_commands.ab3@2696> INCLUDE "internal_commands.ab3"
0003D0FE <internal_commands.ab3@2699> INCLUDE "internal_commands.ab3"
0003D100 <internal_commands.ab3@2700> INCLUDE "internal_commands.ab3"
0003D108 <internal_commands.ab3@2701> INCLUDE "internal_commands.ab3"
0003D109 <internal_commands.ab3@2702> INCLUDE "internal_commands.ab3"
0003D10A <internal_commands.ab3@2703> INCLUDE "internal_commands.ab3"
0003D10E <internal_commands.ab3@2706> INCLUDE "internal_commands.ab3"
0003D110 <internal_commands.ab3@2707> INCLUDE "internal_commands.ab3"
0003D116 <internal_commands.ab3@2708> INCLUDE "internal_commands.ab3"
0003D117 <internal_commands.ab3@2709> INCLUDE "internal_commands.ab3"
0003D118 <internal_commands.ab3@2710> INCLUDE "internal_commands.ab3"
0003D11C <internal_commands.ab3@2713> INCLUDE "internal_commands.ab3"
0003D11E <internal_commands.ab3@2714> INCLUDE "internal_commands.ab3"
0003D125 <internal_commands.ab3@2715> INCLUDE "internal_commands.ab3"
0003D126 <internal_commands.ab3@2716> INCLUDE "internal_commands.ab3"
0003D12A <internal_commands.ab3@2720> INCLUDE "internal_commands.ab3"
0003D12C <internal_commands.ab3@2721> INCLUDE "internal_commands.ab3"
0003D133 <internal_commands.ab3@2722> INCLUDE "internal_commands.ab3"
0003D134 <internal_commands.ab3@2723> INCLUDE "internal_commands.ab3"
0003D138 <internal_commands.ab3@2727> INCLUDE "internal_commands.ab3"
0003D13A <internal_commands.ab3@2728> INCLUDE "internal_commands.ab3"
0003D141 <internal_commands.ab3@2729> INCLUDE "internal_commands.ab3"
0003D142 <internal_commands.ab3@2730> INCLUDE "internal_commands.ab3"
0003D146 <internal_commands.ab3@2734> INCLUDE "internal_commands.ab3"
0003D148 <internal_commands.ab3@2735> INCLUDE "internal_commands.ab3"
0003D14F <internal_commands.ab3@2736> INCLUDE "internal_commands.ab3"
0003D150 <internal_commands.ab3@2737> INCLUDE "internal_commands.ab3"
0003D154 <internal_commands.ab3@2741> INCLUDE "internal_commands.ab3"
0003D156 <internal_commands.ab3@2742> INCLUDE "internal_commands.ab3"
0003D15B <internal_commands.ab3@2743> INCLUDE "internal_commands.ab3"
0003D171 <internal_commands.ab3@2744> INCLUDE "internal_commands.ab3"
0003D172 <internal_commands.ab3@2745> INCLUDE "internal_commands.ab3"
0003D176 <internal_commands.ab3@2748> INCLUDE "internal_commands.ab3"
0003D178 <internal_commands.ab3@2749> INCLUDE "internal_commands.ab3"
0003D182 <internal_commands.ab3@2750> INCLUDE "internal_commands.ab3"
0003D183 <internal_commands.ab3@2751> INCLUDE "internal_commands.ab3"
0003D184 <internal_commands.ab3@2752> INCLUDE "internal_commands.ab3"
0003D188 <internal_commands.ab3@2755> INCLUDE "internal_commands.ab3"
0003D18A <internal_commands.ab3@2756> INCLUDE "internal_commands.ab3"
0003D195 <internal_commands.ab3@2757> INCLUDE "internal_commands.ab3"
0003D196 <internal_commands.ab3@2758> INCLUDE "internal_commands.ab3"
0003D19A <internal_commands.ab3@2762> INCLUDE "internal_commands.ab3"
0003D19C <internal_commands.ab3@2763> INCLUDE "internal_commands.ab3"
0003D1A8 <internal_commands.ab3@2764> INCLUDE "internal_commands.ab3"
0003D1D5 <internal_commands.ab3@2765> INCLUDE "internal_commands.ab3"
0003D1D6 <internal_commands.ab3@2766> INCLUDE "internal_commands.ab3"
0003D1DA <internal_commands.ab3@2769> INCLUDE "internal_commands.ab3"
0003D1DC <internal_commands.ab3@2770> INCLUDE "internal_commands.ab3"
0003D1E4 <internal_commands.ab3@2771> INCLUDE "internal_commands.ab3"
0003D21B <internal_commands.ab3@2772> INCLUDE "internal_commands.ab3"
0003D21C <internal_commands.ab3@2773> INCLUDE "internal_commands.ab3"
0003D220 <internal_commands.ab3@2776> INCLUDE "internal_commands.ab3"
0003D222 <internal_commands.ab3@2777> INCLUDE "internal_commands.ab3"
0003D22A <internal_commands.ab3@2778> INCLUDE "internal_commands.ab3"
0003D249 <internal_commands.ab3@2779> INCLUDE "internal_commands.ab3"
0003D24A <internal_commands.ab3@2780> INCLUDE "internal_commands.ab3"
0003D24E <internal_commands.ab3@2783> INCLUDE "internal_commands.ab3"
0003D250 <internal_commands.ab3@2784> INCLUDE "internal_commands.ab3"
0003D257 <internal_commands.ab3@2785> INCLUDE "internal_commands.ab3"
0003D28D <internal_commands.ab3@2786> INCLUDE "internal_commands.ab3"
0003D28E <internal_commands.ab3@2787> INCLUDE "internal_commands.ab3"
0003D292 <internal_commands.ab3@2790> INCLUDE "internal_commands.ab3"
0003D294 <internal_commands.ab3@2791> INCLUDE "internal_commands.ab3"
0003D29D <internal_commands.ab3@2792> INCLUDE "internal_commands.ab3"
0003D2D2 <internal_commands.ab3@2793> INCLUDE "internal_commands.ab3"
0003D2D6 <internal_commands.ab3@2797> INCLUDE "internal_commands.ab3"
0003D2D8 <internal_commands.ab3@2798> INCLUDE "internal_commands.ab3"
0003D2E8 <internal_commands.ab3@2799> INCLUDE "internal_commands.ab3"
0003D31F <internal_commands.ab3@2800> INCLUDE "internal_commands.ab3"
0003D320 <internal_commands.ab3@2801> INCLUDE "internal_commands.ab3"
0003D320 <AmiBlitz3.ab3@28466> INCLUDE "internal_commands.ab3"
0003D324 <AmiBlitz3.ab3@28471>            Dc.l cif_lt                                     ;ciflt
0003D328 <AmiBlitz3.ab3@28472>            Dc.l cif_eq                                     ;cifeq
0003D32C <AmiBlitz3.ab3@28473>            Dc.l cif_gt                                     ;cifgt
0003D330 <AmiBlitz3.ab3@28474>            Ds.l 1                                          ;0
0003D334 <AmiBlitz3.ab3@28475>            Dc.l cif_le                                     ;cifle
0003D338 <AmiBlitz3.ab3@28476>            Dc.l cif_ne                                     ;cifne
0003D33C <AmiBlitz3.ab3@28477>            Dc.l cif_le                                     ;cifge
0003D340 <AmiBlitz3.ab3@28478>            Ds.l 1                                          ;0
0003D344 <AmiBlitz3.ab3@28479>            Dc.l cif_ge                                     ;cifge
0003D348 <AmiBlitz3.ab3@28480>            Dc.l cif_ne                                     ;cifne
0003D34C <AmiBlitz3.ab3@28481>            Dc.l cif_ge                                     ;cifge
0003D350 <AmiBlitz3.ab3@28482>            Ds.l 1                                          ;0
0003D354 <AmiBlitz3.ab3@28485>            Dc.l do_newtype                                 ;donewtype
0003D358 <AmiBlitz3.ab3@28486>            Dc.l do_end                                     ;doend
0003D35C <AmiBlitz3.ab3@28487>            Dc.l do_let                                     ;dolet
0003D360 <AmiBlitz3.ab3@28488>            Dc.l do_dim                                     ;dodim
0003D364 <AmiBlitz3.ab3@28489>            Dc.l do_goto                                    ;dogoto
0003D368 <AmiBlitz3.ab3@28490>            Dc.l do_gosub                                   ;dogosub
0003D36C <AmiBlitz3.ab3@28491>            Dc.l do_return                                  ;doreturn
0003D370 <AmiBlitz3.ab3@28492>            Dc.l do_statement                               ;dostatement
0003D374 <AmiBlitz3.ab3@28493>            Dc.l do_function                                ;dofunc
0003D378 <AmiBlitz3.ab3@28494>            Dc.l do_mousewait                               ;domwait
0003D37C <AmiBlitz3.ab3@28495>            Dc.l do_if                                      ;doif
0003D380 <AmiBlitz3.ab3@28496>            Dc.l do_while                                   ;dowhile
0003D384 <AmiBlitz3.ab3@28497>            Dc.l do_Macro                                   ;domacro
0003D388 <AmiBlitz3.ab3@28498>            Dc.l do_select                                  ;doselect
0003D38C <AmiBlitz3.ab3@28499>            Dc.l do_case                                    ;docase
0003D390 <AmiBlitz3.ab3@28500>            Dc.l do_default                                 ;dodefault
0003D394 <AmiBlitz3.ab3@28501>            Dc.l do_AsmExit                                 ;doasmexit
0003D398 <AmiBlitz3.ab3@28502>            Dc.l do_xinclude                                ;doxinclude
0003D39C <AmiBlitz3.ab3@28503>            Dc.l do_INCLUDE                                 ;doinclude
0003D3A0 <AmiBlitz3.ab3@28504>            Dc.l do_syntax                                  ;syntaxerr
0003D3A4 <AmiBlitz3.ab3@28505>            Dc.l do_shared                                  ;doshared
0003D3A8 <AmiBlitz3.ab3@28506>            Dc.l do_for                                     ;dofor
0003D3AC <AmiBlitz3.ab3@28507>            Dc.l do_next                                    ;donext
0003D3B0 <AmiBlitz3.ab3@28508>            Dc.l syntaxerr                                  ; To
0003D3B4 <AmiBlitz3.ab3@28509>            Dc.l syntaxerr                                  ; Step
0003D3B8 <AmiBlitz3.ab3@28510>            Dc.l do_data                                    ;dodata
0003D3BC <AmiBlitz3.ab3@28511>            Dc.l do_read                                    ;doread
0003D3C0 <AmiBlitz3.ab3@28515>            Dc.l syntaxerr                                  ; CNIF
0003D3C4 <AmiBlitz3.ab3@28516>            Dc.l syntaxerr                                  ; CSIF
0003D3C8 <AmiBlitz3.ab3@28517>            Dc.l syntaxerr                                  ; CELSE
0003D3CC <AmiBlitz3.ab3@28518>            Dc.l syntaxerr                                  ; CEND
0003D3D0 <AmiBlitz3.ab3@28519>            Dc.l do_cerr                                    ;docerr
0003D3D4 <AmiBlitz3.ab3@28520>            Dc.l do_then                                    ;dothen
0003D3D8 <AmiBlitz3.ab3@28521>            Dc.l do_else                                    ;doelse
0003D3DC <AmiBlitz3.ab3@28522>            Dc.l do_even4                                   ;doeven4
0003D3E0 <AmiBlitz3.ab3@28523>            Dc.l do_even8                                   ;doeven8
0003D3E4 <AmiBlitz3.ab3@28525>            Dc.l do_dc                                      ;dodc
0003D3E8 <AmiBlitz3.ab3@28526>            Dc.l do_ds                                      ;dods
0003D3EC <AmiBlitz3.ab3@28527>            Dc.l do_even                                    ;doeven
0003D3F0 <AmiBlitz3.ab3@28528>            Dc.l do_dcb                                     ;dodcb
0003D3F4 <AmiBlitz3.ab3@28529>            Dc.l do_setreg                                  ;dosetreg
0003D3F8 <AmiBlitz3.ab3@28530>            Dc.l do_IncBin                                  ;doincbin
0003D3FC <AmiBlitz3.ab3@28531>            Dc.l do_free                                    ;dofree
0003D400 <AmiBlitz3.ab3@28532>            Dc.l do_use                                     ;douse
0003D404 <AmiBlitz3.ab3@28533>            Dc.l do_Stop                                    ;dostop
0003D408 <AmiBlitz3.ab3@28534>            Dc.l do_Cont                                    ;docont
0003D40C <AmiBlitz3.ab3@28535>            Dc.l syntaxerr                                  ;syntaxeer
0003D410 <AmiBlitz3.ab3@28536>            Dc.l do_SetInt                                  ;dosetint
0003D414 <AmiBlitz3.ab3@28537>            Dc.l do_ClrInt                                  ;doclrint
0003D418 <AmiBlitz3.ab3@28538>            Dc.l do_MaxLen                                  ;domaxlen
0003D41C <AmiBlitz3.ab3@28539>            Dc.l do_DEFTYPE                                 ;dodeftype
0003D420 <AmiBlitz3.ab3@28540>            Dc.l do_BLITZ                                   ;doblitz
0003D424 <AmiBlitz3.ab3@28541>            Dc.l do_AMIGA                                   ;doamiga
0003D428 <AmiBlitz3.ab3@28542>            Dc.l do_QAMIGA                                  ;doqamiga
0003D42C <AmiBlitz3.ab3@28543>            Dc.l do_VWait                                   ;dovwait
0003D430 <AmiBlitz3.ab3@28544>            Dc.l do_LibJsr                                  ;dolibjsr
0003D434 <AmiBlitz3.ab3@28545>            Dc.l do_TokeJsr                                 ;dotokejsr
0003D438 <AmiBlitz3.ab3@28546>            Dc.l do_BLibJsr                                 ;doblibjsr
0003D43C <AmiBlitz3.ab3@28547>            Dc.l _extb                                      ;syntaxerr
0003D440 <AmiBlitz3.ab3@28551>            Dc.l syntaxerr                                  ;syntaxerr      ;flash2 ; for list
0003D444 <AmiBlitz3.ab3@28552>            Dc.l do_SetErr                                  ;doseterr
0003D448 <AmiBlitz3.ab3@28553>            Dc.l do_ClrErr                                  ;doclrerr
0003D44C <AmiBlitz3.ab3@28554>            Dc.l syntaxerr                                  ;syntaxerr
0003D450 <AmiBlitz3.ab3@28555>            Dc.l do_ErrFail                                 ;doerrfail
0003D454 <AmiBlitz3.ab3@28556>            Dc.l syntaxerr
0003D458 <AmiBlitz3.ab3@28557>            Dc.l syntaxerr                                  ;mod
0003D45C <AmiBlitz3.ab3@28558>            Dc.l syntaxerr                                  ;Pi
0003D460 <AmiBlitz3.ab3@28559>            Dc.l do_Repeat                                  ;dorepeat
0003D464 <AmiBlitz3.ab3@28560>            Dc.l do_Until                                   ;dountil
0003D468 <AmiBlitz3.ab3@28561>            Dc.l do_PutReg                                  ;doputreg
0003D46C <AmiBlitz3.ab3@28562>            Dc.l do_Pop                                     ;dopop
0003D470 <AmiBlitz3.ab3@28563>            Dc.l do_INCDIR                                  ;doincdir
0003D474 <AmiBlitz3.ab3@28564>            Dc.l mydo_Endif2                                ;mydoendif2
0003D478 <AmiBlitz3.ab3@28565>            Dc.l do_Wend                                    ;dowend
0003D47C <AmiBlitz3.ab3@28566>            Dc.l do_SysJsr                                  ;dosysjsr
0003D480 <AmiBlitz3.ab3@28567>            Dc.l do_WBStartup                               ;dowbstartup
0003D484 <AmiBlitz3.ab3@28568>            Dc.l syntaxerr
0003D488 <AmiBlitz3.ab3@28569>            Dc.l do_Ongo                                    ;doongo
0003D48C <AmiBlitz3.ab3@28570>            Dc.l syntaxerr
0003D490 <AmiBlitz3.ab3@28571>            Dc.l do_Forever                                 ;doforever
0003D494 <AmiBlitz3.ab3@28572>            Dc.l do_Restore                                 ;dorestore
0003D498 <AmiBlitz3.ab3@28573>            Dc.l do_Exchange                                ;doexchange
0003D49C <AmiBlitz3.ab3@28574>            Dc.l do_USEPATH                                 ;dousepath
0003D4A0 <AmiBlitz3.ab3@28575>            Dc.l do_CloseEd                                 ;doclosed
0003D4A4 <AmiBlitz3.ab3@28576>            Dc.l do_NoCli                                   ;donocli
0003D4A8 <AmiBlitz3.ab3@28577>            Dc.l syntaxerr                                  ;syntaxerr
0003D4AC <AmiBlitz3.ab3@28578>            Dc.l syntaxerr                                  ;syntaxerr
0003D4B0 <AmiBlitz3.ab3@28579>            Dc.l syntaxerr                                  ;syntaxerr
0003D4B4 <AmiBlitz3.ab3@28580>            Dc.l syntaxerr                                  ;syntaxerr
0003D4B8 <AmiBlitz3.ab3@28581>            Dc.l syntaxerr                                  ;syntaxerr
0003D4BC <AmiBlitz3.ab3@28582>            Dc.l do_runerrson                               ;dorunerrson
0003D4C0 <AmiBlitz3.ab3@28583>            Dc.l do_runerrsoff                              ;dorunerrsoff
0003D4C4 <AmiBlitz3.ab3@28584>            Dc.l do_uselastpath
0003D4C8 <AmiBlitz3.ab3@28585>            Dc.l do_regload
0003D4CC <AmiBlitz3.ab3@28586>            Dc.l do_regsave
0003D4D0 <AmiBlitz3.ab3@28587>            Dc.l do_Object
0003D4D4 <AmiBlitz3.ab3@28588>            Dc.l do_usepath2
0003D4D8 <AmiBlitz3.ab3@28589>            Dc.l do_LastRunErrsMode
0003D4DC <AmiBlitz3.ab3@28612> menu_items:Dc.l menu_compile_run                                ;menuadds oreg source
0003D4E0 <AmiBlitz3.ab3@28613>            Dc.l menu_run
0003D4E4 <AmiBlitz3.ab3@28614>            Dc.l menu_createexecutable
0003D4E8 <AmiBlitz3.ab3@28615>            Dc.l menu_dummyfunc                                  ;was menu_compileroptions
0003D4EC <AmiBlitz3.ab3@28616>            Dc.l menu_createresidentfile
0003D4F0 <AmiBlitz3.ab3@28617> 
0003D4F4 <AmiBlitz3.ab3@28618> 
0003D4F8 <AmiBlitz3.ab3@28619>            Dc.l menu_dummyfunc                                  ;was menu_calculator
0003D4FC <AmiBlitz3.ab3@28620>            Dc.l menu_reloadlibs
0003D500 <AmiBlitz3.ab3@28621>            Dc.l menu_loaddebugmodule
0003D504 <AmiBlitz3.ab3@28622>            Dc.l menu_dummyfunc
0003D508 <AmiBlitz3.ab3@28623>            Dc.l menu_newcreate
0003D50C <AmiBlitz3.ab3@28624>            Dc.l menu_dummyfunc
0003D510 <AmiBlitz3.ab3@28625>            Dc.l menu_toggledebug
0003D514 <AmiBlitz3.ab3@28626>            Dc.l menu_dummyfunc
0003D518 <AmiBlitz3.ab3@28627>            Dc.l menu_dummyfunc
0003D542 <AmiBlitz3.ab3@28632>   !basic
0003D5A4 <AmiBlitz3.ab3@28633>   error{!TRANS{"Invalid AmiBlitz3 menu item called!"} }
0003D5C2 <AmiBlitz3.ab3@28634>   !asm
0003D5C4 <AmiBlitz3.ab3@28635> RTS
0003D5C5 <AmiBlitz3.ab3@28641> set_autorun:               Dc.b $00
0003D5CA <AmiBlitz3.ab3@28642> autorun:                   Dc.b $80,$01,$01,$00,$01
0003D5CB <AmiBlitz3.ab3@28644> set_interruptcheck:        Dc.b $00
0003D5D0 <AmiBlitz3.ab3@28645> interruptcheck             Dc.b $80,$01,$01,$00,$01
0003D5D1 <AmiBlitz3.ab3@28647> set_assemblercheck:        Ds.b 1
0003D5D6 <AmiBlitz3.ab3@28648> assemblercheck:            Dc.b $00,$01,$01,$00,$01
0003D5D7 <AmiBlitz3.ab3@28650> set_overflowcheck:         Ds.b 1
0003D5DC <AmiBlitz3.ab3@28651> overflowcheck:             Dc.b $00,$01,$01,$00,$01
0003D5E2 <AmiBlitz3.ab3@28653> default_obsolete:          Dc.b $00,$80,$01,$01,$00,$01
0003D5E8 <AmiBlitz3.ab3@28654> default_interruptcheck:    Dc.b $00,$80,$01,$01,$00,$01
0003D5EE <AmiBlitz3.ab3@28655> default_overflowcheck:     Dc.b $00,$80,$01,$01,$00,$01
0003D5F0 <AmiBlitz3.ab3@28656> Even4
0003D5FC <AmiBlitz3.ab3@28659> tsthead:                   Dc.l $000003F3,$00000000,$00000001
0003D604 <AmiBlitz3.ab3@28660>                            Dc.l $00000000,$00000000
0003D60C <AmiBlitz3.ab3@28661> tstsize1:                  Dc.l $00000100,$000003E9
0003D610 <AmiBlitz3.ab3@28662> tstsize2:                  Dc.l $00000100
0003D614 <AmiBlitz3.ab3@28663> tstend:                    Dc.l $000003EC
0003D61C <AmiBlitz3.ab3@28664> tstsize3:                  Ds.l 2
0003D620 <AmiBlitz3.ab3@28665> tstdone:                   Dc.l $000003F2
0003D624 <AmiBlitz3.ab3@28668> edstruct:                  Dc.l tokens                     ;data for ted
0003D628 <AmiBlitz3.ab3@28672>                            Dc.l 0
0003D62C <AmiBlitz3.ab3@28674>                            Dc.l read_xtrafile              ;load .xtra routine
0003D630 <AmiBlitz3.ab3@28675>                            Dc.l write_xtrafile             ;save .xtra routine
0003D634 <AmiBlitz3.ab3@28676>                            Dc.l call_menuentry             ;Menu Routine
0003D638 <AmiBlitz3.ab3@28677>                            Ds.l 1                          ;cleanup (?)
0003D63C <AmiBlitz3.ab3@28678>                            Dc.b ":",34,".;"
0003D738 <AmiBlitz3.ab3@28681> 
0003D818 <AmiBlitz3.ab3@28682>                            Ds.l 56
0003D81A <AmiBlitz3.ab3@28687> lslimm:                    Dc.b $E1,$48                                             ;LSL.W   #8,D0
0003D81E <AmiBlitz3.ab3@28690> use:                       Dc.b $26,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A3
0003D820 <AmiBlitz3.ab3@28691>                            Dc.b $D6,$C0                                             ;ADDA.W  D0,A3
0003D824 <AmiBlitz3.ab3@28692>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D82A <AmiBlitz3.ab3@28696> beginarr:                  Dc.b $20,$3C,$00,$00,$00,$00                             ;MOVE.L  #$00000000,D0
0003D82C <AmiBlitz3.ab3@28700>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003D830 <AmiBlitz3.ab3@28703> putarr:                    Dc.b $2B,$40 :                            Dc.b $00,$00   ;MOVE.L  D0,$0000(A5)
0003D834 <AmiBlitz3.ab3@28706> doarr:                     Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003D838 <AmiBlitz3.ab3@28707>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003D83A <AmiBlitz3.ab3@28713>                            Dc.b $4A,$40                                             ;TST.W   D0
0003D83C <AmiBlitz3.ab3@28717>                            Dc.b $4A,$80                                             ;TST.L   D0
0003D83E <AmiBlitz3.ab3@28720> nops8:                     Dc.b $4E,$71                                             ;NOP
0003D840 <AmiBlitz3.ab3@28721>                            Dc.b $4E,$71                                             ;NOP
0003D842 <AmiBlitz3.ab3@28722>                            Dc.b $4E,$71                                             ;NOP
0003D844 <AmiBlitz3.ab3@28723>                            Dc.b $4E,$71                                             ;NOP
0003D846 <AmiBlitz3.ab3@28724> nops4:                     Dc.b $4E,$71                                             ;NOP
0003D848 <AmiBlitz3.ab3@28726>                            Dc.b $4E,$71                                             ;NOP
0003D84A <AmiBlitz3.ab3@28727>                            Dc.b $4E,$71                                             ;NOP
0003D84C <AmiBlitz3.ab3@28728>                            Dc.b $4E,$71                                             ;NOP
0003D850 <AmiBlitz3.ab3@28732> dataget:                   Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003D854 <AmiBlitz3.ab3@28735> dataput:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D856 <AmiBlitz3.ab3@28738> stlenget:                  Dc.b $2F,$1B                                             ;MOVE.L  (A3)+,-(A7)
0003D858 <AmiBlitz3.ab3@28741> stalign:                   Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D85A <AmiBlitz3.ab3@28742>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D85E <AmiBlitz3.ab3@28743>                            Dc.b $08,$80,$00,$00                                     ;BCLR    #0,D0
0003D860 <AmiBlitz3.ab3@28744>                            Dc.b $C1,$8B                                             ;EXG D0,A3
0003D862 <AmiBlitz3.ab3@28750> dataletb:                  Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D866 <AmiBlitz3.ab3@28751>                            Dc.b $1B,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A5)
0003D868 <AmiBlitz3.ab3@28756> dataletbl:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D86C <AmiBlitz3.ab3@28757>                            Dc.b $19,$5B,$00,$00                                     ;MOVE.B  (A3)+,$0000(A4)
0003D86E <AmiBlitz3.ab3@28761> dataletb2:                 Dc.b $52,$4B                                             ;ADDQ.W  #1,A3
0003D870 <AmiBlitz3.ab3@28762>                            Dc.b $14,$9B                                             ;MOVE.B  (A3)+,(A2)
0003D874 <AmiBlitz3.ab3@28768> dataletw:                  Dc.b $3B,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A5)
0003D876 <AmiBlitz3.ab3@28769>                            Dc.b $34,$9B                                             ;MOVE.W  (A3)+,(A2)
0003D87A <AmiBlitz3.ab3@28770>                            Dc.b $39,$5B,$00,$00                                     ;MOVE.W  (A3)+,$0000(A4)
0003D87E <AmiBlitz3.ab3@28774> dataletl:                  Dc.b $2B,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A5)
0003D880 <AmiBlitz3.ab3@28775>                            Dc.b $24,$9B                                             ;MOVE.L  (A3)+,(A2)
0003D884 <AmiBlitz3.ab3@28776>                            Dc.b $29,$5B,$00,$00                                     ;MOVE.L  (A3)+,$0000(A4)
0003D886 <AmiBlitz3.ab3@28779> nextfixw:                  Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D88A <AmiBlitz3.ab3@28782> nextfixw2:                 Dc.b $4F,$EF,$00,$0A                                     ;LEA $000A(A7),A7
0003D88E <AmiBlitz3.ab3@28785> nextfixl:                  Dc.b $4F,$EF,$00,$0C                                     ;LEA $000C(A7),A7
0003D892 <AmiBlitz3.ab3@28788> nextfixl2:                 Dc.b $4F,$EF,$00,$0E                                     ;LEA $000E(A7),A7
0003D896 <AmiBlitz3.ab3@28792>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D898 <AmiBlitz3.ab3@28793>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D89A <AmiBlitz3.ab3@28794>                            Dc.b $D1,$12                                             ;ADD.B   D0,(A2)
0003D89E <AmiBlitz3.ab3@28799>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D8A0 <AmiBlitz3.ab3@28800>                            Dc.b $30,$17                                             ;MOVE.W  (A7),D0
0003D8A2 <AmiBlitz3.ab3@28801>                            Dc.b $D1,$52                                             ;ADD.W   D0,(A2)
0003D8A6 <AmiBlitz3.ab3@28806>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D8A8 <AmiBlitz3.ab3@28807>                            Dc.b $20,$17                                             ;MOVE.L  (A7),D0
0003D8AA <AmiBlitz3.ab3@28808>                            Dc.b $D1,$92                                             ;ADD.L   D0,(A2)
0003D8AE <AmiBlitz3.ab3@28813>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D8B0 <AmiBlitz3.ab3@28814>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D8B2 <AmiBlitz3.ab3@28815>                            Dc.b $22,$17                                             ;MOVE.L  (A7),D1
0003D8B6 <AmiBlitz3.ab3@28816>                            Dc.b $4E,$AE,$FF,$BE                                     ;JSR -$0042(A6)
0003D8B8 <AmiBlitz3.ab3@28817>                            Dc.b $24,$80                                             ;MOVE.L  D0,(A2)
0003D8BC <AmiBlitz3.ab3@28822>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D8BE <AmiBlitz3.ab3@28823>                            Dc.b $10,$12                                             ;MOVE.B  (A2),D0
0003D8C2 <AmiBlitz3.ab3@28824>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D8C4 <AmiBlitz3.ab3@28825>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D8C8 <AmiBlitz3.ab3@28826>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000001         ;.skip org source
0003D8CA <AmiBlitz3.ab3@28827>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D8CC <AmiBlitz3.ab3@28830>                            Dc.b $B0,$01                                             ;CMP.B   D1,D0
0003D8D0 <AmiBlitz3.ab3@28835>                            Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D8D2 <AmiBlitz3.ab3@28836>                            Dc.b $30,$12                                             ;MOVE.W  (A2),D0
0003D8D6 <AmiBlitz3.ab3@28837>                            Dc.b $32,$2F,$00,$02                                     ;MOVE.W  $0002(A7),D1
0003D8D8 <AmiBlitz3.ab3@28838>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D8DC <AmiBlitz3.ab3@28839>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000002         ;.skip org source
0003D8DE <AmiBlitz3.ab3@28840>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D8E0 <AmiBlitz3.ab3@28843>                            Dc.b $B0,$41                                             ;CMP.W   D1,D0
0003D8E4 <AmiBlitz3.ab3@28848>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D8E6 <AmiBlitz3.ab3@28849>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D8EA <AmiBlitz3.ab3@28850>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D8EC <AmiBlitz3.ab3@28851>                            Dc.b $4A,$57                                             ;TST.W   (A7)
0003D8F0 <AmiBlitz3.ab3@28852>                            Dc.b $6A,$00,$00,$04                                     ;BPL.W   L000003         ;.skip org source
0003D8F2 <AmiBlitz3.ab3@28853>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D8F4 <AmiBlitz3.ab3@28856>                            Dc.b $B0,$81                                             ;CMP.L   D1,D0
0003D8F8 <AmiBlitz3.ab3@28861>                            Dc.b $24,$6F,$00,$08                                     ;MOVEA.L $0008(A7),A2
0003D8FA <AmiBlitz3.ab3@28862>                            Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D8FE <AmiBlitz3.ab3@28863>                            Dc.b $22,$2F,$00,$04                                     ;MOVE.L  $0004(A7),D1
0003D904 <AmiBlitz3.ab3@28864>                            Dc.b $08,$2F,$00,$07,$00,$03                             ;BTST    #7,$0003(A7)
0003D908 <AmiBlitz3.ab3@28865>                            Dc.b $67,$00,$00,$04                                     ;BEQ.W   L000004
0003D90A <AmiBlitz3.ab3@28866>                            Dc.b $C1,$41                                             ;EXG D0,D1
0003D90E <AmiBlitz3.ab3@28873>                            Dc.b $4E,$AE,$FF,$D6                                     ;JSR -$002A(A6)
0003D910 <AmiBlitz3.ab3@28877> swapd0:                    Dc.b $48,$40                                             ;SWAP    D0
0003D912 <AmiBlitz3.ab3@28880> pushindex:                 Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D916 <AmiBlitz3.ab3@28883> leaamp:                    Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D918 <AmiBlitz3.ab3@28884> leaamp2:                   Dc.b $20,$0A                                             ;MOVE.L  A2,D0
0003D91C <AmiBlitz3.ab3@28887> leaampl:                   Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D91E <AmiBlitz3.ab3@28890> stamp:                     Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D922 <AmiBlitz3.ab3@28893> stamp2:                    Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003D924 <AmiBlitz3.ab3@28897>                            Dc.b $58,$4F                                             ;ADDQ.W  #4,A7
0003D926 <AmiBlitz3.ab3@28900> pushd0wd:                  Dc.b $3F,$00                                             ;MOVE.W  D0,-(A7)
0003D928 <AmiBlitz3.ab3@28903> pushd0l:                   Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D92C <AmiBlitz3.ab3@28906> movenumrep:                Dc.b $3E,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D7
0003D930 <AmiBlitz3.ab3@28909> preplibst:                 Dc.b $45,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A2
0003D934 <AmiBlitz3.ab3@28912> fixlibst:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D936 <AmiBlitz3.ab3@28915> pushdn:                    Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D938 <AmiBlitz3.ab3@28918> movea3a7:                  Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D93C <AmiBlitz3.ab3@28921> movestst2:                 Dc.b $20,$2F :                            Dc.b $00,$06   ;MOVE.L  $0006(A7),D0
0003D942 <AmiBlitz3.ab3@28922>                            Dc.b $3F,$6F,$00,$04,$00,$08                             ;MOVE.W  $0004(A7),$0008(A7)
0003D944 <AmiBlitz3.ab3@28923>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D948 <AmiBlitz3.ab3@28927> movea7dn:                  Dc.b $20,$2F :                            Dc.b $00,$04   ;MOVE.L  $0004(A7),D0
0003D94A <AmiBlitz3.ab3@28928>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D94C <AmiBlitz3.ab3@28932> moved0a3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D950 <AmiBlitz3.ab3@28935> movestdn:                  Dc.b $20,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),D0
0003D952 <AmiBlitz3.ab3@28939>                            Dc.b $20,$0B                                             ;MOVE.L  A3,D0
0003D954 <AmiBlitz3.ab3@28943>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D956 <AmiBlitz3.ab3@28947>                            Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D95A <AmiBlitz3.ab3@28950> moverts:                   Dc.b $2F,$57 :                            Dc.b $00,$00   ;MOVE.L  (A7),$0000(A7)
0003D95E <AmiBlitz3.ab3@28953> fixstack:                  Dc.b $4F,$EF :                            Dc.b $00,$00   ;LEA $0000(A7),A7
0003D960 <AmiBlitz3.ab3@28956> fixq:                      Dc.b $50,$4F                                             ;ADDQ.W  #8,A7
0003D962 <AmiBlitz3.ab3@28959> fix1:                      Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D964 <AmiBlitz3.ab3@28962> movedna3:                  Dc.b $26,$40                                             ;MOVEA.L D0,A3
0003D968 <AmiBlitz3.ab3@28965> least:                     Dc.b $45,$EC :                            Dc.b $00,$00   ;LEA $0000(A4),A2
0003D96C <AmiBlitz3.ab3@28968> funcst:                    Dc.b $2F,$2C :                            Dc.b $00,$00   ;MOVE.L  $0000(A4),-(A7)
0003D96E <AmiBlitz3.ab3@28971> addq4a2:                   Dc.b $58,$4A                                             ;ADDQ.W  #4,A2
0003D970 <AmiBlitz3.ab3@28975>                            Dc.b $2F,$0B                                             ;MOVE.L  A3,-(A7)
0003D974 <AmiBlitz3.ab3@28978>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D976 <AmiBlitz3.ab3@28984>                            Dc.b $26,$5F                                             ;MOVEA.L (A7)+,A3
0003D97A <AmiBlitz3.ab3@28987>                            Dc.b $2B,$4B,$00,$00                                     ;MOVE.L  A3,$0000(A5)
0003D97C <AmiBlitz3.ab3@28993>                            Dc.b $CB,$4C                                             ;EXG A5,A4
0003D980 <AmiBlitz3.ab3@28997> linksize:                  Dc.b $4E,$54 :                            Dc.b $00,$00   ;LINK    A4,#-$0000
0003D982 <AmiBlitz3.ab3@29000> unlinka4:                  Dc.b $4E,$5C                                             ;UNLK    A4
0003D984 <AmiBlitz3.ab3@29004>                            Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D986 <AmiBlitz3.ab3@29008>                            Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D98C <AmiBlitz3.ab3@29011> gotocode:                  Dc.b $4E,$F9,$00,$00,$00,$00                             ;JMP $00000000
0003D992 <AmiBlitz3.ab3@29014> gosubcode:                 Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D99A <AmiBlitz3.ab3@29018> mwait:                     Dc.b $08,$39,$00,$06,$00,$BF,$E0,$01                     ;BTST    #6,$00BFE001
0003D99E <AmiBlitz3.ab3@29019>                            Dc.b $66,$00,$FF,$F6                                     ;BNE.W   L000005       ;mwait: org source
0003D9A0 <AmiBlitz3.ab3@29023> libreg:                    Dc.b $20,$00                                             ;MOVE.L  D0,D0
0003D9A4 <AmiBlitz3.ab3@29026> libbase:                   Dc.b $2C,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A6
0003D9A8 <AmiBlitz3.ab3@29029> libjsr:                    Dc.b $4E,$AE :                            Dc.b $00,$00   ;JSR $0000(A6)
0003D9AC <AmiBlitz3.ab3@29032> regtransd:                 Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D9B0 <AmiBlitz3.ab3@29033> regtransa:                 Dc.b $20,$6D,$00,$00                                     ;MOVEA.L $0000(A5),A0
0003D9B4 <AmiBlitz3.ab3@29037>                            Dc.b $26,$7C,$00,$00                                     ;MOVEA.L #$00000000,A3
0003D9B8 <AmiBlitz3.ab3@29039>                            Dc.l $3F1B                                               ;MOVE.W  (A3)+,-(A7)
0003D9BA <AmiBlitz3.ab3@29042> movea2dn:                  Dc.b $20,$12                                             ;MOVE.L  (A2),D0
0003D9BE <AmiBlitz3.ab3@29045> moved3a5dn:                Dc.b $20,$2D,$00,$00                                     ;MOVE.L  $0000(A5),D0
0003D9C0 <AmiBlitz3.ab3@29048> stvarget2:                 Dc.b $70,$00                                             ;MOVEQ   #$00,D0
0003D9C2 <AmiBlitz3.ab3@29049>                            Dc.b $2F,$00                                             ;MOVE.L  D0,-(A7)
0003D9C4 <AmiBlitz3.ab3@29050>                            Dc.b $4A,$92                                             ;TST.L   (A2)
0003D9C8 <AmiBlitz3.ab3@29051> 
0003D9CA <AmiBlitz3.ab3@29052>                            Dc.b $20,$52                                             ;MOVEA.L (A2),A0
0003D9CC <AmiBlitz3.ab3@29053>                            Dc.b $59,$48                                             ;SUBQ.W  #4,A0
0003D9CE <AmiBlitz3.ab3@29054>                            Dc.b $2E,$98                                             ;MOVE.L  (A0)+,(A7)
0003D9D4 <AmiBlitz3.ab3@29056>                            Dc.b $4E,$B9,$00,$00,$00,$00                             ;JSR $00000000
0003D9D6 <AmiBlitz3.ab3@29061> addcode:                   Dc.b $20,$1F                                             ;MOVE.L  (A7)+,D0
0003D9D8 <AmiBlitz3.ab3@29062>                            Dc.b $D1,$97                                             ;ADD.L   D0,(A7)
0003D9DA <AmiBlitz3.ab3@29066> pushlen:                   Dc.b $2F,$18                                             ;MOVE.L  (A0)+,-(A7)
0003D9DE <AmiBlitz3.ab3@29069> leaa5d3a2:                 Dc.b $45,$ED :                            Dc.b $00,$00   ;LEA $0000(A5),A2
0003D9E0 <AmiBlitz3.ab3@29072> pusha2:                    Dc.b $2F,$0A                                             ;MOVE.L  A2,-(A7)
0003D9E2 <AmiBlitz3.ab3@29076>                            Dc.b $24,$57                                             ;MOVEA.L (A7),A2
0003D9E4 <AmiBlitz3.ab3@29079> pulla2:                    Dc.b $24,$5F                                             ;MOVEA.L (A7)+,A2
0003D9E8 <AmiBlitz3.ab3@29082> pulla2st:                  Dc.b $24,$6F,$00,$04                                     ;MOVEA.L $0004(A7),A2
0003D9EA <AmiBlitz3.ab3@29083>                            Dc.b $2E,$9F                                             ;MOVE.L  (A7)+,(A7)
0003D9EE <AmiBlitz3.ab3@29087> pusha3:                    Dc.b $2F,$2D :                            Dc.b $00,$00   ;MOVE.L  $0000(A5),-(A7)
0003D9F2 <AmiBlitz3.ab3@29088> pusha32:                   Dc.b $2B,$4B :                            Dc.b $00,$00   ;MOVE.L  A3,$0000(A5)
0003D9F6 <AmiBlitz3.ab3@29092> pulla3:                    Dc.b $2B,$5F :                            Dc.b $00,$00   ;MOVE.L  (A7)+,$0000(A5)
0003D9FA <AmiBlitz3.ab3@29096> geta3:                     Dc.b $26,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A3
0003DA00 <AmiBlitz3.ab3@29100> numtoa0:                   Dc.b $20,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A0
0003DA06 <AmiBlitz3.ab3@29103> numtoa2:                   Dc.b $24,$7C,$00,$00,$00,$00                             ;MOVEA.L #$00000000,A2
0003DA0A <AmiBlitz3.ab3@29107> endarray:                  Dc.b $38,$3C :                            Dc.b $00,$00   ;MOVE.W  #$0000,D4
0003DA0E <AmiBlitz3.ab3@29111>                            Dc.b $34,$3C,$00,$00                                     ;MOVE.W  #$0000,D2
0003DA12 <AmiBlitz3.ab3@29112>                            Dc.b $36,$3C,$00,$00                                     ;MOVE.W  #$0000,D3
0003DA18 <AmiBlitz3.ab3@29117>                            Dc.b $20,$3C,$00,$00,$00,$04                             ;MOVE.L  #$00000004,D0
0003DA1C <AmiBlitz3.ab3@29122>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DA1E <AmiBlitz3.ab3@29127>                            Dc.b $C0,$C1                                             ;MULU.W  D1,D0
0003DA22 <AmiBlitz3.ab3@29131>                            Dc.b $2B,$40,$00,$00                                     ;MOVE.L  D0,$0000(A5)
0003DA24 <AmiBlitz3.ab3@29135> movea0:                    Dc.b $24,$52                                             ;MOVEA.L (A2),A2
0003DA26 <AmiBlitz3.ab3@29138> adda0a0:                   Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DA28 <AmiBlitz3.ab3@29139>                            Dc.b $D5,$CA                                             ;ADDA.L  A2,A2
0003DA2C <AmiBlitz3.ab3@29143>                            Dc.b $2C,$78,$00,$04                                     ;MOVEA.L $0004,A6
0003DA30 <AmiBlitz3.ab3@29147> movea5a0:                  Dc.b $24,$6D :                            Dc.b $00,$00   ;MOVEA.L $0000(A5),A2
0003DA34 <AmiBlitz3.ab3@29150> movea0a0:                  Dc.b $24,$6A :                            Dc.b $00,$00   ;MOVEA.L $0000(A2),A2
0003DA36 <AmiBlitz3.ab3@29153> addqa0:                    Dc.b $52,$4A                                             ;ADDQ.W  #1,A2
0003DA3A <AmiBlitz3.ab3@29156> leaa0a0:                   Dc.b $45,$EA :                            Dc.b $00,$00   ;LEA $0000(A2),A2
0003DA3C <AmiBlitz3.ab3@29159> addrega2:                  Dc.b $D4,$C0                                             ;ADDA.W  D0,A2
0003DA45 <AmiBlitz3.ab3@29163>                            Dc.b "ram:test",0
0003DA46 <AmiBlitz3.ab3@29164> Even
0003DA4A <AmiBlitz3.ab3@29168>                            Dc.l  0                          ;was  Ds.w 3 org source
0003DA4C <AmiBlitz3.ab3@29170>                            Dc.w  0
0003DA50 <AmiBlitz3.ab3@29173> _mathffpbase:              Ds.l 1                           ;maths org source
0003DA52 <AmiBlitz3.ab3@29174> regnum:                    Ds.w 1                           ;regat org source       ;register being used!
0003DA54 <AmiBlitz3.ab3@29175> typelen:                   Ds.w 1
0003DA58 <AmiBlitz3.ab3@29176> prevtype:                  Ds.l 1
0003DA5C <AmiBlitz3.ab3@29177> lastsourcepos:             Ds.l 1                           ;prevloc org source
0003DA5E <AmiBlitz3.ab3@29178> lastchar:                  Ds.w 1
0003DA62 <AmiBlitz3.ab3@29179> thistype:                  Ds.l 1
0003DA66 <AmiBlitz3.ab3@29180> errstack:                  Ds.l 1
0003DA6A <AmiBlitz3.ab3@29181> errcont:                   Ds.l 1
0003DA6C <AmiBlitz3.ab3@29182> linemode:                  Ds.w 1                          ;0 if norm, 1 if newtype
0003DA6E <AmiBlitz3.ab3@29183> linesleft:                 Ds.w 1
0003DA72 <AmiBlitz3.ab3@29184> sourceline:                Ds.l 1                          ;thisitem org source
0003DA76 <AmiBlitz3.ab3@29185> varbase:                   Ds.l 1                          ;firstvar org source
0003DA7A <AmiBlitz3.ab3@29186> alllocals:                 Ds.l 1
0003DA7E <AmiBlitz3.ab3@29187> firstlocal:                Ds.l 1
0003DA82 <AmiBlitz3.ab3@29188> firstglob:                 Ds.l 1
0003DA84 <AmiBlitz3.ab3@29189> globalvarpointer:          Ds.w 1                          ;varoff org source
0003DA86 <AmiBlitz3.ab3@29190> locvaroff:                 Ds.w 1
0003DA8A <AmiBlitz3.ab3@29191> firstitem_:                 Ds.l 1
0003DA8C <AmiBlitz3.ab3@29192> numlines_org:              Ds.w 1                          ;numlines org source
0003DA8E <AmiBlitz3.ab3@29193> returncode_org:            Ds.w 1                          ;returncode org source
0003DA92 <AmiBlitz3.ab3@29194> firstiff:                  Ds.l 1                          ;firstif org source
0003DA96 <AmiBlitz3.ab3@29195> ptr_seg_ped:               Ds.l 1                          ;segadd org source
0003DC96 <AmiBlitz3.ab3@29196> str_pedfile:               Ds.b #MAX_STRINGSIZE            ;segname org source
0003DCA6 <AmiBlitz3.ab3@29197> str_mathffpname:           Dc.b "mathffp.library",0 : Even ;mathsname org source
0003DEA6 <AmiBlitz3.ab3@29198> str_libfilename:           Ds.b #MAX_STRINGSIZE
0003E0A6 <AmiBlitz3.ab3@29199> str_path_userlibs:         Ds.b #MAX_STRINGSIZE
0003E2A6 <AmiBlitz3.ab3@29200> str_defaultdbug:           Ds.b #MAX_STRINGSIZE            ;debugname org source
0003E2AA <AmiBlitz3.ab3@29202> ptr_seg_debugger:          Ds.l 1                          ;dseg org source
0003E4AA <AmiBlitz3.ab3@29203> str_blitz3assign:          Ds.b #MAX_STRINGSIZE            ;dpath org source
0003E6AA <AmiBlitz3.ab3@29205> str_path_acidlibs:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003E6AE <AmiBlitz3.ab3@29206> size_acidlibs:             Ds.l 1                          ;acidlibs org source
0003E8AE <AmiBlitz3.ab3@29207> str_path_deflibs:          Ds.b #MAX_STRINGSIZE            ;defname org source
0003E8B2 <AmiBlitz3.ab3@29208> size_deflibs:              Ds.l 1                          ;deflibs org source
0003EAB2 <AmiBlitz3.ab3@29209> str_tempfilename:          Ds.b #MAX_STRINGSIZE
0003ECB2 <AmiBlitz3.ab3@29211> str_temp_debugmodulename:  Ds.b #MAX_STRINGSIZE            ;dname org source
0003ECB6 <AmiBlitz3.ab3@29212> ptr_temp_debugmodule:      Ds.l 1                          ;dname2 org source
0003EEB6 <AmiBlitz3.ab3@29214> str_path_includes:         Ds.b #MAX_STRINGSIZE            ;acidname org source
0003EEBA <AmiBlitz3.ab3@29220>   Dc.b $E3,$10,$00,$01                                     ;icondata  
0003EEBE <AmiBlitz3.ab3@29221>   Dc.b $00,$00,$00,$00
0003EEC2 <AmiBlitz3.ab3@29222>   Dc.b $00,$19,$00,$11
0003EEC6 <AmiBlitz3.ab3@29223>   Dc.b $00,$2E,$00,$18
0003EECA <AmiBlitz3.ab3@29224>   Dc.b $00,$04,$00,$03
0003EECE <AmiBlitz3.ab3@29225>   Dc.b $00,$01,$00,$22
0003EED2 <AmiBlitz3.ab3@29226>   Dc.b $73,$68,$00,$00
0003EED6 <AmiBlitz3.ab3@29227>   Dc.b $00,$00,$00,$00
0003EEDA <AmiBlitz3.ab3@29228>   Dc.b $00,$00,$00,$00
0003EEDE <AmiBlitz3.ab3@29229>   Dc.b $00,$00,$00,$00
0003EEE2 <AmiBlitz3.ab3@29230>   Dc.b $00,$00,$00,$00
0003EEE6 <AmiBlitz3.ab3@29231>   Dc.b $00,$00,$00,$00
0003EEEA <AmiBlitz3.ab3@29232>   Dc.b $03,$22,$00,$21
0003EEEE <AmiBlitz3.ab3@29233>   Dc.b $3C,$28,$00,$22
0003EEF2 <AmiBlitz3.ab3@29234>   Dc.b $6E,$C0,$00,$00
0003EEF6 <AmiBlitz3.ab3@29235>   Dc.b $00,$12,$00,$00
0003EEFA <AmiBlitz3.ab3@29236>   Dc.b $00,$0E,$00,$00
0003EEFE <AmiBlitz3.ab3@29237>   Dc.b $00,$00,$00,$00
0003EF02 <AmiBlitz3.ab3@29238>   Dc.b $00,$00,$00,$00
0003EF06 <AmiBlitz3.ab3@29239>   Dc.b $00,$00,$00,$00
0003EF0A <AmiBlitz3.ab3@29240>   Dc.b $00,$00,$00,$2E
0003EF0E <AmiBlitz3.ab3@29241>   Dc.b $00,$17,$00,$02
0003EF12 <AmiBlitz3.ab3@29242>   Dc.b $00,$01,$8E,$80
0003EF16 <AmiBlitz3.ab3@29243>   Dc.b $03,$00,$00,$00
0003EF1A <AmiBlitz3.ab3@29244>   Dc.b $00,$00,$FF,$FF
0003EF1E <AmiBlitz3.ab3@29245>   Dc.b $FF,$FF,$FF,$FC
0003EF22 <AmiBlitz3.ab3@29246>   Dc.b $80,$00,$00,$00
0003EF26 <AmiBlitz3.ab3@29247>   Dc.b $00,$00,$80,$00
0003EF2A <AmiBlitz3.ab3@29248>   Dc.b $00,$3F,$BB,$40
0003EF2E <AmiBlitz3.ab3@29249>   Dc.b $80,$1F,$C0,$00
0003EF32 <AmiBlitz3.ab3@29250>   Dc.b $00,$00,$80,$3F
0003EF36 <AmiBlitz3.ab3@29251>   Dc.b $C0,$0F,$BB,$40
0003EF3A <AmiBlitz3.ab3@29252>   Dc.b $80,$1F,$C0,$00
0003EF3E <AmiBlitz3.ab3@29253>   Dc.b $00,$00,$8E,$00
0003EF42 <AmiBlitz3.ab3@29254>   Dc.b $F8,$00,$00,$00
0003EF46 <AmiBlitz3.ab3@29255>   Dc.b $8F,$01,$FF,$00
0003EF4A <AmiBlitz3.ab3@29256>   Dc.b $3B,$40,$81,$E3
0003EF4E <AmiBlitz3.ab3@29257>   Dc.b $F7,$C0,$00,$00
0003EF52 <AmiBlitz3.ab3@29258>   Dc.b $80,$7F,$F8,$70
0003EF56 <AmiBlitz3.ab3@29259>   Dc.b $3B,$40,$80,$0F
0003EF5A <AmiBlitz3.ab3@29260>   Dc.b $7C,$E0,$00,$00
0003EF5E <AmiBlitz3.ab3@29261>   Dc.b $80,$00,$FD,$80
0003EF62 <AmiBlitz3.ab3@29262>   Dc.b $00,$00,$80,$01
0003EF66 <AmiBlitz3.ab3@29263>   Dc.b $F6,$00,$FB,$40
0003EF6A <AmiBlitz3.ab3@29264>   Dc.b $80,$03,$EF,$00
0003EF6E <AmiBlitz3.ab3@29265>   Dc.b $00,$00,$80,$07
0003EF72 <AmiBlitz3.ab3@29266>   Dc.b $87,$80,$3B,$40
0003EF76 <AmiBlitz3.ab3@29267>   Dc.b $80,$0F,$01,$C0
0003EF7A <AmiBlitz3.ab3@29268>   Dc.b $00,$00,$80,$03
0003EF7E <AmiBlitz3.ab3@29269>   Dc.b $F0,$70,$1D,$40
0003EF82 <AmiBlitz3.ab3@29270>   Dc.b $80,$00,$18,$1C
0003EF86 <AmiBlitz3.ab3@29271>   Dc.b $00,$00,$80,$00
0003EF8A <AmiBlitz3.ab3@29272>   Dc.b $10,$06,$03,$40
0003EF8E <AmiBlitz3.ab3@29273>   Dc.b $80,$00,$20,$1F
0003EF92 <AmiBlitz3.ab3@29274>   Dc.b $00,$00,$80,$00
0003EF96 <AmiBlitz3.ab3@29275>   Dc.b $00,$00,$01,$40
0003EF9A <AmiBlitz3.ab3@29276>   Dc.b $80,$00,$00,$00
0003EF9E <AmiBlitz3.ab3@29277>   Dc.b $00,$00,$80,$00
0003EFA2 <AmiBlitz3.ab3@29278>   Dc.b $00,$00,$00,$00
0003EFA6 <AmiBlitz3.ab3@29279>   Dc.b $00,$00,$00,$00
0003EFAA <AmiBlitz3.ab3@29280>   Dc.b $00,$00,$00,$00
0003EFAE <AmiBlitz3.ab3@29281>   Dc.b $00,$00,$00,$04
0003EFB2 <AmiBlitz3.ab3@29282>   Dc.b $00,$3F,$FC,$01
0003EFB6 <AmiBlitz3.ab3@29283>   Dc.b $BB,$44,$00,$60
0003EFBA <AmiBlitz3.ab3@29284>   Dc.b $FE,$00,$00,$04
0003EFBE <AmiBlitz3.ab3@29285>   Dc.b $00,$CF,$FF,$01
0003EFC2 <AmiBlitz3.ab3@29286>   Dc.b $BB,$44,$1F,$EF
0003EFC6 <AmiBlitz3.ab3@29287>   Dc.b $FF,$00,$00,$04
0003EFCA <AmiBlitz3.ab3@29288>   Dc.b $33,$FF,$FF,$E0
0003EFCE <AmiBlitz3.ab3@29289>   Dc.b $00,$04,$37,$FE
0003EFD2 <AmiBlitz3.ab3@29290>   Dc.b $7F,$FC,$1B,$44
0003EFD6 <AmiBlitz3.ab3@29291>   Dc.b $0F,$9C,$FF,$FF
0003EFDA <AmiBlitz3.ab3@29292>   Dc.b $00,$04,$03,$E3
0003EFDE <AmiBlitz3.ab3@29293>   Dc.b $FF,$FF,$DB,$44
0003EFE2 <AmiBlitz3.ab3@29294>   Dc.b $00,$7F,$BF,$FF
0003EFE6 <AmiBlitz3.ab3@29295>   Dc.b $80,$04,$00,$0F
0003EFEA <AmiBlitz3.ab3@29296>   Dc.b $3F,$FE,$00,$04
0003EFEE <AmiBlitz3.ab3@29297>   Dc.b $00,$06,$7F,$F8
0003EFF2 <AmiBlitz3.ab3@29298>   Dc.b $1B,$44,$00,$0C
0003EFF6 <AmiBlitz3.ab3@29299>   Dc.b $F7,$FC,$00,$04
0003EFFA <AmiBlitz3.ab3@29300>   Dc.b $00,$19,$F9,$FE
0003EFFE <AmiBlitz3.ab3@29301>   Dc.b $1B,$44,$00,$33
0003F002 <AmiBlitz3.ab3@29302>   Dc.b $FE,$7F,$00,$04
0003F006 <AmiBlitz3.ab3@29303>   Dc.b $00,$0F,$FF,$BF
0003F00A <AmiBlitz3.ab3@29304>   Dc.b $CD,$44,$00,$03
0003F00E <AmiBlitz3.ab3@29305>   Dc.b $EF,$EF,$F0,$04
0003F012 <AmiBlitz3.ab3@29306>   Dc.b $00,$00,$7F,$DF
0003F016 <AmiBlitz3.ab3@29307>   Dc.b $FB,$44,$00,$00
0003F01A <AmiBlitz3.ab3@29308>   Dc.b $FF,$A7,$FC,$04
0003F01E <AmiBlitz3.ab3@29309>   Dc.b $00,$00,$7E,$3F
0003F022 <AmiBlitz3.ab3@29310>   Dc.b $FD,$44,$00,$00
0003F026 <AmiBlitz3.ab3@29311>   Dc.b $00,$00,$00,$04
0003F02A <AmiBlitz3.ab3@29312>   Dc.b $7F,$FF,$FF,$FF
0003F02E <AmiBlitz3.ab3@29313>   Dc.b $FF,$FC,$00,$00
0003F032 <AmiBlitz3.ab3@29314>   Dc.b $00,$01,$00,$00
0003F035 <AmiBlitz3.ab3@29315>   Dc.b $00,$00,$04
0003F03B <AmiBlitz3.ab3@29318> str_infoextention2:  Dc.b ".info",0                           ;infoname org source
0003F093 <AmiBlitz3.ab3@29319> errorlimit_text:     Dc.b "There are too much errors, compiling is stop now. Please fix errors first and try again",0
0003F094 <AmiBlitz3.ab3@29320> Even
0003F098 <AmiBlitz3.ab3@29322> sysdebug:            Dc.l $3F0
0003F09C <AmiBlitz3.ab3@29326> exelock              Ds.l 1
0003F0A0 <AmiBlitz3.ab3@29330> includesourceline    Dc.l 0
0003F0A4 <AmiBlitz3.ab3@29331> linenum              Ds.l 1
0003F0A8 <AmiBlitz3.ab3@29332> globallinecount      Ds.l 1
0003F0C6 <AmiBlitz3.ab3@29333> myversion            Dc.b "\\__VER_MAJOR.\\__VER_MINOR (\\__DATE_GER__) Build \\__VER_PATCH.\\__VER_BUILD",0 : Even
0003F0CA <AmiBlitz3.ab3@29334> calc_option          Dc.l 1
0003F0CE <AmiBlitz3.ab3@29335> versioninformation   Dc.l $00
0003F0D2 <AmiBlitz3.ab3@29336> number_of_builds     Dc.l $00
0003F0D4 <AmiBlitz3.ab3@29337> leftsideflagmask     Ds.w 1    ;this contain the flag if pointer (1) or not
0003F0D6 <AmiBlitz3.ab3@29338> rightsideflagmask    Ds.w 1
0003F0D8 <AmiBlitz3.ab3@29340> BSS
0003F0DA <AmiBlitz3.ab3@29341> debugnest            Ds.w 1
0003F0DE <AmiBlitz3.ab3@29342> instringf            Ds.l 1
0003F0E2 <AmiBlitz3.ab3@29343> funcscanon           Ds.l 1
0003F0F6 <AmiBlitz3.ab3@29344> storedebugmode       Ds.b 20
0003F0FA <AmiBlitz3.ab3@29345> firsttimepref        Ds.l 1
0003F0FB <AmiBlitz3.ab3@29346> funcparloop          Ds.b 1                   ; is 1 when function calling parameter are compile
0003F0FC <AmiBlitz3.ab3@29347> blitzparloop         Ds.b 1                   ; is 1 when blitzlib calling parameters are compile
0003F0FE <AmiBlitz3.ab3@29348> nostringopt          Ds.w 1
0003F17E <AmiBlitz3.ab3@29349> path2:               Ds.l 32
0003F182 <AmiBlitz3.ab3@29350> typebase             Dc.l 0
0003F184 <AmiBlitz3.ab3@29351> doublepeek           Dc.w 0
0003F188 <AmiBlitz3.ab3@29352> lastoffset           Dc.l 0
0003F18A <AmiBlitz3.ab3@29353> firsttime            Dc.w 0
0003F18E <AmiBlitz3.ab3@29354> lastdestpointer      Dc.l 0
0003F192 <AmiBlitz3.ab3@29355> prevwritedat         Dc.l 0
0003F196 <AmiBlitz3.ab3@29356> lastsourceline       Dc.l 0
0003F19A <AmiBlitz3.ab3@29357> lastwritedat         Dc.l 0
0003F19C <AmiBlitz3.ab3@29358> makeexec             Dc.w 0
0003F19E <AmiBlitz3.ab3@29359> makeexec_remember    Dc.w 0
0003F1A2 <AmiBlitz3.ab3@29360> sharebase            Ds.l 1
0003F1A6 <AmiBlitz3.ab3@29361> tempa7               Ds.l 1
0003F1A8 <AmiBlitz3.ab3@29362> incnif               Ds.w 1
0003F1AC <AmiBlitz3.ab3@29363> tempstore            Ds.l 1
0003F1B0 <AmiBlitz3.ab3@29364> result               Ds.l 1
0003F1B2 <AmiBlitz3.ab3@29365> automode             Ds.w 1
0003F1B4 <AmiBlitz3.ab3@29366> stackcorrect         Ds.w 1
0003F1B6 <AmiBlitz3.ab3@29367> formode              Ds.w 1
0003F1BA <AmiBlitz3.ab3@29368> limitregs            Ds.l 1
0003F1BC <AmiBlitz3.ab3@29369> onestep              Ds.w 1
0003F1C0 <AmiBlitz3.ab3@29370> reqmode              Ds.l 1
0003F260 <AmiBlitz3.ab3@29371> inctab               Ds.l 40
0003F262 <AmiBlitz3.ab3@29372> funcoptimize_deprecated  Ds.w 1 ; deprecated, see comByte_FuncOptimize ; Wanderer
0003F266 <AmiBlitz3.ab3@29373> includeline          Ds.l 1
0003F26A <AmiBlitz3.ab3@29374> morememadd           Ds.l 1
0003F26C <AmiBlitz3.ab3@29375> objectcount          Ds.w 1
0003F270 <AmiBlitz3.ab3@29376> savefuncspace        Ds.l 1
0003F274 <AmiBlitz3.ab3@29377> lasttrap1            Ds.l 1
0003F278 <AmiBlitz3.ab3@29378> currentfunccall      Ds.l 1
0003F279 <AmiBlitz3.ab3@29379> skipfunc             Ds.b 1
0003F27A <AmiBlitz3.ab3@29380> resdisable           Ds.b 1
0003F27B <AmiBlitz3.ab3@29381> skiptoggle           Ds.b 1
0003F27C <AmiBlitz3.ab3@29382> developobject        Ds.b 1
0003F27E <AmiBlitz3.ab3@29383> iniffcommand         Ds.w 1
0003F280 <AmiBlitz3.ab3@29384> startoffsetmore      Ds.w 1
0003F282 <AmiBlitz3.ab3@29385> olddebugmode         Ds.w 1
0003F286 <AmiBlitz3.ab3@29386> fpucodeglobal        Ds.l 1
0003F28A <AmiBlitz3.ab3@29387> fpucodelocal         Ds.l 1
0003F28E <AmiBlitz3.ab3@29388> maxregs              Ds.l 1
0003F292 <AmiBlitz3.ab3@29389> fpucode              Ds.l 1
0003F294 <AmiBlitz3.ab3@29390> firstmline           Ds.w 1
0003F2D4 <AmiBlitz3.ab3@29391> regtable             Ds.l 16
0003F2D6 <AmiBlitz3.ab3@29392> exdebug              Ds.w 1
0003F2D8 <AmiBlitz3.ab3@29393> a2offset2            Ds.w 1
0003F2DC <AmiBlitz3.ab3@29394> parnumtemp           Ds.l 1
0003F2DD <AmiBlitz3.ab3@29395> doimmediate          Ds.b 1
0003F2DE <AmiBlitz3.ab3@29396> notypecheck          Ds.b 1
0003F2E0 <AmiBlitz3.ab3@29397> vartype              Ds.w 1
0003F2E1 <AmiBlitz3.ab3@29398> peekaddrsize         Ds.b 1
0003F2E2 <AmiBlitz3.ab3@29399> declare2             Ds.b 1
0003F2E4 <AmiBlitz3.ab3@29400> parameternum         Ds.w 1
0003F2E8 <AmiBlitz3.ab3@29401> lasttoken            Ds.l 1
0003F2EA <AmiBlitz3.ab3@29402> newvariable          Ds.w 1
0003F2EB <AmiBlitz3.ab3@29403> declare              Ds.b 1
0003F2EC <AmiBlitz3.ab3@29404> typecheck            Ds.b 1
0003F2ED <AmiBlitz3.ab3@29405> nowdeclare           Ds.b 1
0003F2EE <AmiBlitz3.ab3@29406> dimkeep              Ds.b 1
0003F2EF <AmiBlitz3.ab3@29407> a4a5store            Ds.b 1
0003F2F0 <AmiBlitz3.ab3@29408> ___freetouse         Ds.b 1
0003F2F4 <AmiBlitz3.ab3@29409> firstiffstore        Ds.l 1
0003F2F8 <AmiBlitz3.ab3@29410> destpointer2         Ds.l 1
0003F2FC <AmiBlitz3.ab3@29411> stackaddr            Ds.l 1
0003F400 <AmiBlitz3.ab3@29412> allowtab             Ds.b 260
0003F500 <AmiBlitz3.ab3@29413> templine             Ds.b 256
0003F502 <AmiBlitz3.ab3@29414> thenmode             Ds.w 1
0003F504 <AmiBlitz3.ab3@29415> temp                 Ds.w 1
0003F506 <AmiBlitz3.ab3@29416> tempregnum           Ds.w 1
0003F50A <AmiBlitz3.ab3@29418> numlines2            Ds.l 1
0003F50E <AmiBlitz3.ab3@29419> numlines             Ds.l 1
0003F510 <AmiBlitz3.ab3@29420> exmac                Ds.w 1
0003F512 <AmiBlitz3.ab3@29421> returncode           Ds.w 1
0003F516 <AmiBlitz3.ab3@29422> fp0iff               Ds.l 1
0003F51A <AmiBlitz3.ab3@29423> fp0addr              Ds.l 1
0003F51C <AmiBlitz3.ab3@29424> fp0mode              Ds.w 1
0003F51E <AmiBlitz3.ab3@29425> fp0var               Ds.w 1
0003F520 <AmiBlitz3.ab3@29426> fastfunc             Ds.w 1
0003F522 <AmiBlitz3.ab3@29427> retmode              Ds.w 1
0003F524 <AmiBlitz3.ab3@29428> parnum               Ds.w 1
0003F526 <AmiBlitz3.ab3@29429> regmask              Ds.w 1
0003F528 <AmiBlitz3.ab3@29430> regnumfunc           Ds.w 1
0003F52A <AmiBlitz3.ab3@29431> libmode              Ds.w 1
0003F52E <AmiBlitz3.ab3@29432> oldline              Ds.l 1
0003F532 <AmiBlitz3.ab3@29433> sourceline3          Ds.l 1
0003F5FA <AmiBlitz3.ab3@29434> debugstore           Ds.b 200
0003F5FE <AmiBlitz3.ab3@29435> deststore            Ds.l 1
0003F602 <AmiBlitz3.ab3@29437> loada                Ds.l 1
0003F606 <AmiBlitz3.ab3@29439> currtype             Ds.l 1
0003F60A <AmiBlitz3.ab3@29440> arrayoffset          Ds.l 1
0003F60E <AmiBlitz3.ab3@29441> lastlabel            Ds.l 1
0003F612 <AmiBlitz3.ab3@29442> curtemplabel         Ds.l 1
0003F616 <AmiBlitz3.ab3@29443> sourceline2          Ds.l 1
0003F716 <AmiBlitz3.ab3@29444> chartab              Ds.b 256
0003F78E <AmiBlitz3.ab3@29445> tempspace            Ds.b 120
000BF79E <AmiBlitz3.ab3@29446> instrtab             Ds.l 65538*2
000C779E <AmiBlitz3.ab3@29448> labelhash            Ds.l 8192                             ;-bssstore clear every compile pass
000E77A2 <AmiBlitz3.ab3@29449> replacedat           Ds.w 65538
000EF7A2 <AmiBlitz3.ab3@29450> variablehash         Ds.l 8192
000EF7A6 <AmiBlitz3.ab3@29451> newinitaddr          Ds.l 1
000EF7AA <AmiBlitz3.ab3@29452> realbssend           Ds.l 1
000EF7AC <AmiBlitz3.ab3@29453> saved0               Ds.w 1
000EF82C <AmiBlitz3.ab3@29454> lastpath             Ds.b 128
000EF8AC <AmiBlitz3.ab3@29455> lastpath2            Ds.b 128
000EF974 <AmiBlitz3.ab3@29456> fpustackbase         Ds.w 100
000EF978 <AmiBlitz3.ab3@29457> 
000EF97A <AmiBlitz3.ab3@29458> isconstantvalue      Dc.w 0  ; contain a type (1-7) if a constant expression is used as a Parameter or on right side of =
000EF97E <AmiBlitz3.ab3@29459> lastfunction         Dc.l 0  ; the address of the function in the Parameter or rght side of =
000EF982 <AmiBlitz3.ab3@29460> leftsidetype         Dc.l 0  ;this contain the address of the type from the left side of the variable assign
000EF986 <AmiBlitz3.ab3@29461> rightsidetype        Dc.l 0  ; same as above but right side
000EF98A <AmiBlitz3.ab3@29464> trap15temp           Ds.l 1
000EF98E <AmiBlitz3.ab3@29465> trap15temp2          Ds.l 1
000EF992 <AmiBlitz3.ab3@29466> templibend           Ds.l 1
000EF996 <AmiBlitz3.ab3@29467> tempdata1start       Ds.l 1
000EF99A <AmiBlitz3.ab3@29468> stacktrack           Ds.l 1
000EF99E <AmiBlitz3.ab3@29469> pad                  Ds.l 1
000EFA9E <AmiBlitz3.ab3@29470> includetemp          Ds.b 256
000F049E <AmiBlitz3.ab3@29471> includetemp2         Ds.b 256*10
000F04A0 <AmiBlitz3.ab3@29472> funccall             Ds.w 1
000F04A4 <AmiBlitz3.ab3@29475> ptr_resfile          Ds.l 1
000F04A6 <AmiBlitz3.ab3@29476> CalculatorButtonBinFlag:    Ds.w 1
000F04A8 <AmiBlitz3.ab3@29477> CalculatorButtonDecFlag:    Ds.w 1
000F04AC <AmiBlitz3.ab3@29478> ped_startup_addr:    Ds.l 1
000F04AD <AmiBlitz3.ab3@29479> start_without_libs:  Ds.b 1
000F04AE <AmiBlitz3.ab3@29480> skip_bytes:          Ds.b 1
000F04B2 <AmiBlitz3.ab3@29481> functionreturntype   Ds.l 1  ; a temp store of it.do not read this value
000F04B6 <AmiBlitz3.ab3@29482> beforeparameterfetch Ds.l 1
000F04BA <AmiBlitz3.ab3@29483> typetocast           Ds.l 1
000F04BE <AmiBlitz3.ab3@29484> errorcounter         Ds.l 1
000F04BF <AmiBlitz3.ab3@29485> iserror              Ds.b 1
000F04C0 <AmiBlitz3.ab3@29486> MorphOS:             Ds.b 1 ; added to be able to select the cacheclear function 0=AOS, 1=MorphOS  tomsmart1
000F04C4 <AmiBlitz3.ab3@29489> CLIMode:             Dc.l 0
000F04C8 <AmiBlitz3.ab3@29490> XTRAEndPadBytes:     Dc.l 0                             ; 4 fill/pad/termination bytes for the xtra write function  tomsmart1
000F04CC <AmiBlitz3.ab3@29491> maxerrorcount:       Ds.l 1                             ; added to make it changeable in CLI Mode tomsmart1
